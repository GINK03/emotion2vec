{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3000\u30b9\u30de\u30db\u3084\u30c7\u30b8\u30ab\u30e1\u3067\u3001\u5915\u66ae\u308c\u3001\u591c\u666f\u3001\u9006\u5149\u3001\u5916\u5149\u304c\u5dee\u3057\u8fbc\u3080\u6697\u3044\u5ba4\u5185\u306a\u3069\u3001\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u304c\u5f37\u3044\u74b0\u5883\u3067\u64ae\u5f71\u3059\u308b\u3068\u3001\u660e\u308b\u3044\u90e8\u5206\u304c\u767d\u304f\u3064\u3076\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u9006\u306b\u3001\u6697\u3044\u90e8\u5206\u304c\u9ed2\u304f\u3064\u3076\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3057\u3066\u3001\u304c\u3063\u304b\u308a\u3057\u305f\u7d4c\u9a13\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\n\u3000\u3053\u308c\u306f\u3001\u660e\u308b\u3044\u90e8\u5206\u3084\u6697\u3044\u90e8\u5206\u306e\u968e\u8abf\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u306b\u304a\u3053\u308b\u73fe\u8c61\u3067\u3059\u3002\n\u3000\u4eca\u56de\u306f\u3001\u660e\u308b\u3044\u753b\u50cf\u3068\u6697\u3044\u753b\u50cf\u3092\u3044\u3044\u3068\u3053\u3069\u308a\u3067\u5408\u6210\u3057\u3066\u3001High Dynamic Range Image\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u74b0\u5883\n\nOpenCV: 3.1.0\nPython: 3.5.2\n\n\u3053\u308c\u304b\u3089\u74b0\u5883\u69cb\u7bc9\u3092\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nOpenCV 3\u3068Python 3\u306e\u74b0\u5883\u69cb\u7bc9\n\n\u51e6\u7406\u524d\u306e\u753b\u50cf\n\n\u9732\u51fa\u3092\uff12\u6bb5\u968e\u3065\u3064\u5909\u3048\u3066\u64ae\u5f71\u3057\u305fJPEG\u753b\u50cf\u304c\uff13\u679a\u3002\n\u7dba\u9e97\u306b\u5408\u6210\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u30ab\u30e1\u30e9\u3092\u56fa\u5b9a\u3057\u3066\u3001\u7d5e\u308a\u3092\u540c\u3058\u306b\u3057\u3001\u9732\u5149\u6642\u9593\u3060\u3051\u3092\u5909\u5316\u3055\u305b\u3066\u3001\u9023\u7d9a\u64ae\u5f71\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002\n\nHDR\u51e6\u7406\u5f8c\nOpenCV\u3067\u51e6\u7406\u3057\u305f\u753b\u50cf\u3002\n\n\nMertens\n\n\u3000\n\n\nDebevec\n\n\u3000\n\n\nRobertson\n\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\nhdr.py\n# -*- coding: utf-8 -*-\nimport cv2\nimport numpy as np\n\n# \uff13\u679a\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nimg_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]\nimg_list = [cv2.imread(fn) for fn in img_fn]\n\n# \uff13\u679a\u306e\u753b\u50cf\u306b\u5bfe\u3057\u3066\u9732\u51fa\u6642\u9593\u3092\u30bb\u30c3\u30c8\nexposure_times = np.array([0.2, 0.05, 0.0125], dtype=np.float32)\n\n# Debevec\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_debvec = cv2.createMergeDebevec()\nhdr_debvec = merge_debvec.process(img_list, times=exposure_times.copy())\ntonemap1 = cv2.createTonemapDurand(gamma=2.2)\nres_debvec = tonemap1.process(hdr_debvec.copy())\n\n# Robertson\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_robertson = cv2.createMergeRobertson()\nhdr_robertson = merge_robertson.process(img_list, times=exposure_times.copy())\ntonemap2 = cv2.createTonemapDurand(gamma=2.2)\nres_robertson = tonemap2.process(hdr_robertson.copy())\n\n# Mertens\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_mertens = cv2.createMergeMertens()\nres_mertens = merge_mertens.process(img_list)\n\n# 8\u30d3\u30c3\u30c8\u30c7\u30fc\u30bf\u306b\u5909\u63db\nres_debvec_8bit = np.clip(res_debvec*255, 0, 255).astype('uint8')\nres_robertson_8bit = np.clip(res_robertson*255, 0, 255).astype('uint8')\nres_mertens_8bit = np.clip(res_mertens*255, 0, 255).astype('uint8')\n\n# \u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\ncv2.imwrite(\"ldr_debvec.jpg\", res_debvec_8bit)\ncv2.imwrite(\"ldr_robertson.jpg\", res_robertson_8bit)\ncv2.imwrite(\"fusion_mertens.jpg\", res_mertens_8bit)\n\n\n\u5199\u771f\u306e\u679a\u6570\u304c\uff13\u679a\u3001\u9732\u51fa\u304c-2, 0, +2\u306e\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nimg_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]\nexposure_times = np.array([0.2, 0.05, 0.0125], dtype=np.float32)\n\u5199\u771f\u306e\u679a\u6570\u304c\uff15\u679a\u3001\u9732\u51fa\u304c-2, -1, 0, +1, +2\u3060\u3063\u305f\u3089\u3001\u3053\u306e\u90e8\u5206\u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\nimg_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\", \"img4.jpg\", \"img5.jpg\"]\nexposure_times = np.array([0.2, 0.1, 0.05, 0.025, 0.0125], dtype=np.float32)\n\n\u304a\u308f\u308a\u306b\n\u3000\u4eca\u56de\u3001\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u8abf\u6574\u3092\u4e00\u5207\u3057\u306a\u304b\u3063\u305fMartens\u6cd5\u3067\u3001\u8feb\u529b\u306e\u3042\u308b\u753b\u50cf\u3092\u5408\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u4ed6\u306e\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u30141\u3015\u3067\u3082\u3044\u308d\u3044\u308d\u3068\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\uff13\u3064\u306e\u4e2d\u3067\u306f\u3001Martens\u6cd5\u304c\u898b\u305f\u76ee\u306b\u512a\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u3000HDR\u95a2\u9023\u306e\u6a5f\u80fd\u3068\u3057\u3066\u3001OpenCV\u306b\u306f\u30c8\u30fc\u30f3\u30de\u30c3\u30d7\u8abf\u6574\u7528\u95a2\u6570\uff08Drago, Durand, Reinhard, Mantiuk\uff09\u3084\u3001\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u95a2\u6570\uff08Debevec, Robertson\uff09\u306a\u3069\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000OpenCV\u3092\u4f7f\u3048\u3070\u3001\u81ea\u52d5\u3067\u304b\u306a\u308a\u3088\u3044\u5408\u6210\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u3001\u4f55\u304b\u306e\u969b\u306b\u306f\u6d3b\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u3000\u30b9\u30de\u30db\u3084\u30c7\u30b8\u30ab\u30e1\u3067\u3001\u5915\u66ae\u308c\u3001\u591c\u666f\u3001\u9006\u5149\u3001\u5916\u5149\u304c\u5dee\u3057\u8fbc\u3080\u6697\u3044\u5ba4\u5185\u306a\u3069\u3001\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u304c\u5f37\u3044\u74b0\u5883\u3067\u64ae\u5f71\u3059\u308b\u3068\u3001\u660e\u308b\u3044\u90e8\u5206\u304c\u767d\u304f\u3064\u3076\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u9006\u306b\u3001\u6697\u3044\u90e8\u5206\u304c\u9ed2\u304f\u3064\u3076\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3057\u3066\u3001\u304c\u3063\u304b\u308a\u3057\u305f\u7d4c\u9a13\u306f\u3042\u308a\u307e\u305b\u3093\u304b\uff1f\n\u3000\u3053\u308c\u306f\u3001\u660e\u308b\u3044\u90e8\u5206\u3084\u6697\u3044\u90e8\u5206\u306e\u968e\u8abf\u304c\u8db3\u308a\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u306b\u304a\u3053\u308b\u73fe\u8c61\u3067\u3059\u3002\n\u3000\u4eca\u56de\u306f\u3001\u660e\u308b\u3044\u753b\u50cf\u3068\u6697\u3044\u753b\u50cf\u3092\u3044\u3044\u3068\u3053\u3069\u308a\u3067\u5408\u6210\u3057\u3066\u3001High Dynamic Range Image\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n# \u74b0\u5883\n+ OpenCV: 3.1.0\n+ Python: 3.5.2\n\n\u3053\u308c\u304b\u3089\u74b0\u5883\u69cb\u7bc9\u3092\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[OpenCV 3\u3068Python 3\u306e\u74b0\u5883\u69cb\u7bc9](http://qiita.com/olympic2020/items/d5d475a446ec9c73261e)\n\n# \u51e6\u7406\u524d\u306e\u753b\u50cf\n![\u30b5\u30e0\u30cd\u30a4\u30eb.png](https://qiita-image-store.s3.amazonaws.com/0/107056/a36df5fd-c082-1a8e-d0ea-98b4a7300dfa.png)\n\n\u9732\u51fa\u3092\uff12\u6bb5\u968e\u3065\u3064\u5909\u3048\u3066\u64ae\u5f71\u3057\u305fJPEG\u753b\u50cf\u304c\uff13\u679a\u3002\n\u7dba\u9e97\u306b\u5408\u6210\u3055\u305b\u308b\u305f\u3081\u306b\u306f\u3001\u30ab\u30e1\u30e9\u3092\u56fa\u5b9a\u3057\u3066\u3001\u7d5e\u308a\u3092\u540c\u3058\u306b\u3057\u3001\u9732\u5149\u6642\u9593\u3060\u3051\u3092\u5909\u5316\u3055\u305b\u3066\u3001\u9023\u7d9a\u64ae\u5f71\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002\n\n\n# HDR\u51e6\u7406\u5f8c\nOpenCV\u3067\u51e6\u7406\u3057\u305f\u753b\u50cf\u3002\n\n+ **Mertens**\n![fusion_mertens.jpg](https://qiita-image-store.s3.amazonaws.com/0/107056/46e8d1b9-125e-0827-5262-d9d48f43ac8c.jpeg)\n    \u3000  \n+ **Debevec**\n![ldr_debvec.jpg](https://qiita-image-store.s3.amazonaws.com/0/107056/cc874646-30a2-71fb-87a7-47ea1bd62abe.jpeg)\n    \u3000  \n+ **Robertson**\n![ldr_robertson.jpg](https://qiita-image-store.s3.amazonaws.com/0/107056/3401653c-6029-837a-f6f6-12eeb9caf723.jpeg)\n\n\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n\n```hdr.py\n# -*- coding: utf-8 -*-\nimport cv2\nimport numpy as np\n\n# \uff13\u679a\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\nimg_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]\nimg_list = [cv2.imread(fn) for fn in img_fn]\n\n# \uff13\u679a\u306e\u753b\u50cf\u306b\u5bfe\u3057\u3066\u9732\u51fa\u6642\u9593\u3092\u30bb\u30c3\u30c8\nexposure_times = np.array([0.2, 0.05, 0.0125], dtype=np.float32)\n\n# Debevec\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_debvec = cv2.createMergeDebevec()\nhdr_debvec = merge_debvec.process(img_list, times=exposure_times.copy())\ntonemap1 = cv2.createTonemapDurand(gamma=2.2)\nres_debvec = tonemap1.process(hdr_debvec.copy())\n\n# Robertson\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_robertson = cv2.createMergeRobertson()\nhdr_robertson = merge_robertson.process(img_list, times=exposure_times.copy())\ntonemap2 = cv2.createTonemapDurand(gamma=2.2)\nres_robertson = tonemap2.process(hdr_robertson.copy())\n\n# Mertens\u6cd5\u306b\u3088\u308bHDR\u5408\u6210\nmerge_mertens = cv2.createMergeMertens()\nres_mertens = merge_mertens.process(img_list)\n\n# 8\u30d3\u30c3\u30c8\u30c7\u30fc\u30bf\u306b\u5909\u63db\nres_debvec_8bit = np.clip(res_debvec*255, 0, 255).astype('uint8')\nres_robertson_8bit = np.clip(res_robertson*255, 0, 255).astype('uint8')\nres_mertens_8bit = np.clip(res_mertens*255, 0, 255).astype('uint8')\n\n# \u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\ncv2.imwrite(\"ldr_debvec.jpg\", res_debvec_8bit)\ncv2.imwrite(\"ldr_robertson.jpg\", res_robertson_8bit)\ncv2.imwrite(\"fusion_mertens.jpg\", res_mertens_8bit)\n```\n\n\u5199\u771f\u306e\u679a\u6570\u304c\uff13\u679a\u3001\u9732\u51fa\u304c-2, 0, +2\u306e\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n`img_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\"]`\n`exposure_times = np.array([0.2, 0.05, 0.0125], dtype=np.float32)`\n\n\u5199\u771f\u306e\u679a\u6570\u304c\uff15\u679a\u3001\u9732\u51fa\u304c-2, -1, 0, +1, +2\u3060\u3063\u305f\u3089\u3001\u3053\u306e\u90e8\u5206\u3092\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n`img_fn = [\"img1.jpg\", \"img2.jpg\", \"img3.jpg\", \"img4.jpg\", \"img5.jpg\"]`\n`exposure_times = np.array([0.2, 0.1, 0.05, 0.025, 0.0125], dtype=np.float32)`\n\n\n# \u304a\u308f\u308a\u306b\n\u3000\u4eca\u56de\u3001\u30d1\u30e9\u30fc\u30e1\u30fc\u30bf\u8abf\u6574\u3092\u4e00\u5207\u3057\u306a\u304b\u3063\u305fMartens\u6cd5\u3067\u3001\u8feb\u529b\u306e\u3042\u308b\u753b\u50cf\u3092\u5408\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u4ed6\u306e\u30b5\u30f3\u30d7\u30eb\u753b\u50cf\u3014[1](https://en.wikipedia.org/wiki/High-dynamic-range_imaging)\u3015\u3067\u3082\u3044\u308d\u3044\u308d\u3068\u8a66\u3057\u307e\u3057\u305f\u304c\u3001\uff13\u3064\u306e\u4e2d\u3067\u306f\u3001Martens\u6cd5\u304c\u898b\u305f\u76ee\u306b\u512a\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u3000HDR\u95a2\u9023\u306e\u6a5f\u80fd\u3068\u3057\u3066\u3001OpenCV\u306b\u306f\u30c8\u30fc\u30f3\u30de\u30c3\u30d7\u8abf\u6574\u7528\u95a2\u6570\uff08Drago, Durand, Reinhard, Mantiuk\uff09\u3084\u3001\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u95a2\u6570\uff08Debevec, Robertson\uff09\u306a\u3069\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3000OpenCV\u3092\u4f7f\u3048\u3070\u3001\u81ea\u52d5\u3067\u304b\u306a\u308a\u3088\u3044\u5408\u6210\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u3001\u4f55\u304b\u306e\u969b\u306b\u306f\u6d3b\u7528\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["OpenCV", "Python", "\u753b\u50cf\u51e6\u7406"]}