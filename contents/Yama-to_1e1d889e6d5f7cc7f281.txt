{"context": " More than 1 year has passed since last update.AWS\u30c7\u30d7\u30ed\u30a4\u30de\u30b9\u30bf\u30fc\u306b\u306a\u3063\u3066\u3001Heroku\u3067\u6d88\u8017\u3059\u308b\u904e\u53bb\u306b\u8a23\u5225\u3057\u3088\u3046\u2015\u3002\n\u3053\u306e\u8a18\u4e8b\u306f\u5358\u306a\u308b\u4e00\u672c\u306e\u30ed\u30b0\u3067\u3059\u3002\n\u3060\u3051\u308c\u3069\u3082\u4e0a\u304b\u3089\u4e0b\u307e\u3067\u901a\u3059\u3060\u3051\u3067AWS\u306b\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u306e\u9014\u4e2d\u9014\u4e2d\u3067\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0\u306f\u6df7\u305c\u3066\u3042\u308a\u307e\u3059\u3002\n\u305f\u3060\u74b0\u5883\u3054\u3068\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u4f55\u304b\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u307b\u3057\u3044\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f\u4ee5\u4e0b\u3088\u308a\u3001\u300cTomajax\u300d\u3068\u3044\u3046\u4eee\u60f3\u306eRails\u30a2\u30d7\u30ea\u3092\n30\u5206\u4f4d\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\u3042\u307e\u308a\u89aa\u5207\u306a\u89e3\u8aac\u306f\u306a\u3044\u306e\u3067\u3054\u52d8\u5f01\u3002\n\n\u3010\u6ce8\u610f\u4e8b\u9805\u3011\n1. [\uff0a]\u304c\u5148\u982d\u306b\u3042\u308b\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\n2. \u30b3\u30d4\u30da\u3059\u308b\u969b\u306b'=begin'\u3068'=end'\u306f\u5916\u3057\u3066\u304f\u3060\u3055\u3044\n3. EC\uff12\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u969b\u306flinux\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n4. \u4ee5\u4e0b\u306b\u9032\u3080\u524d\u306bAWS\u306eVPC\u3068EC2\u306f\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\n   \u53c2\u8003\u52d5\u753b\uff1aAWS\u8b1b\u5ea7 - VPC/EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\u304b\u3089\u63a5\u7d9a\u307e\u3067\n5. \u30c7\u30d7\u30ed\u30a4\u304c\u7d42\u308f\u3063\u305f\u3089Slack\u901a\u77e5\u306b\u6311\u6226\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n   \u53c2\u8003\u52d5\u753b\uff1aAWS\u8b1b\u5ea7 - capistrano\u30c7\u30d7\u30ed\u30a4\u306eSlack\u901a\u77e5\u8a2d\u5b9a\n# connect to ec2\n*[ ~ ] $: mv Downloads/tomajax.pem .ssh/\n*[ ~ ] $: cd .ssh/\n*[ .ssh ] $: chmod 600 tomajax.pem\n*[ .ssh ] $: ssh -i tomajax.pem ec2-user@54.92.121.123\n\n-----------------------------------------\n# add user\n[ec2-user|~]$ sudo adduser tomajax\n[ec2-user|~]$ sudo passwd tomajax\n[ec2-user|~]$ sudo visudo\n[ec2-user|~]$ sudo su - tomajax\n\n-----------------------------------------\n# enable to connect as new user\n*[ ~ ] $: cd .ssh/\n*[ .ssh ] $: ssh-keygen -t rsa\n[tomajax|~]$ mkdir .ssh\n[tomajax|~]$ chmod 700 .ssh\n[tomajax|~]$ cd .ssh\n[tomajax|.ssh]$ touch authorized_keys\n[tomajax|.ssh]$ chmod 600 authorized_keys\n[tomajax|.ssh]$ sudo vi authorized_keys\n[tomajax|.ssh]$ exit\n\n-----------------------------------------\n# install plugins\n[tomajax|~]$ sudo yum install \\\ngit make gcc-c++ patch \\\nopenssl-devel \\\nlibyaml-devel libffi-devel libicu-devel \\\nlibxml2 libxslt libxml2-devel libxslt-devel \\\nzlib-devel readline-devel \\\nmysql mysql-server mysql-devel \\\nImageMagick ImageMagick-devel \\\nepel-release\n\n-----------------------------------------\n# install nodejs\n[tomajax|~]$ sudo yum install nodejs npm --enablerepo=epel\n\n-----------------------------------------\n# install rbenv\n[tomajax|~]$ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv\n[tomajax|~]$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bash_profile\n\"\n[tomajax|~]$ echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile\n[tomajax|~]$ source .bash_profile\n[tomajax|~]$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\n[tomajax|~]$ rbenv rehash\n\n-----------------------------------------\n# install ruby 2.1.3\n[tomajax|~]$ rbenv install -v 2.1.3\n[tomajax|~]$ rbenv global 2.1.3\n[tomajax|~]$ rbenv rehash\n[tomajax|~]$ ruby -v\n\n-----------------------------------------\n# add gems\n*[ tomajax ] $: vi Gemfile\n=begin[Gemfile]\n  group :production, :staging do\n    gem 'unicorn'\n    gem 'capistrano',          require: false\n    gem 'capistrano-rails',    require: false\n    gem 'capistrano-rbenv',    require: false\n    gem 'capistrano-bundler',  require: false\n    gem 'capistrano3-unicorn', require: false\n    gem 'slackistrano',        require: false\n  end\n=end\n*[ tomajax ] $: bundle\n\n-----------------------------------------\n# add unicorn config file\n*[ tomajax ] $: touch config/unicorn.conf.rb\n*[ tomajax ] $: vi config/unicorn.conf.rb\n=begin[config/unicorn.conf.rb]\n  # set lets\n  $worker  = 2\n  $timeout = 30\n  $app_dir = \"/var/www/tomajax/current\"\n  $listen  = File.expand_path 'tmp/sockets/.unicorn.sock', $app_dir\n  $pid     = File.expand_path 'tmp/pids/unicorn.pid', $app_dir\n  $std_log = File.expand_path 'log/unicorn.log', $app_dir\n  # set config\n  worker_processes  $worker\n  working_directory $app_dir\n  stderr_path $std_log\n  stdout_path $std_log\n  timeout $timeout\n  listen  $listen\n  pid $pid\n  # loading booster\n  preload_app true\n  # before starting processes\n  before_fork do |server, worker|\n    defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!\n    old_pid = \"#{server.config[:pid]}.oldbin\"\n    if old_pid != server.pid\n      begin\n        Process.kill \"QUIT\", File.read(old_pid).to_i\n      rescue Errno::ENOENT, Errno::ESRCH\n      end\n    end\n  end\n  # after finishing processes\n  after_fork do |server, worker|\n    defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection\n  end\n=end\n\n-----------------------------------------\n# set config for capistrano\n*[ tomajax ] $: bundle exec cap install\n*[ tomajax ] $: vi Capfile\n=begin[Capfile]\n  # Load DSL and set up stages\n  require 'capistrano/setup'\n  # Include default deployment tasks\n  require 'capistrano/deploy'\n  # Include tasks from other gems included in your Gemfile\n  require 'capistrano/rbenv'\n  require 'capistrano/bundler'\n  require 'capistrano/rails/assets'\n  require 'capistrano/rails/migrations'\n  # Include slack notifier\n  # require 'slackistrano'\n  # Load custom tasks from `lib/capistrano/tasks` if you have any defined\n  Dir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n=end\n*[ tomajax ] $: vi lib/capistrano/tasks/unicorn.cap\n=begin[lib/capistrano/tasks/unicorn.cap]\n  namespace :unicorn do\n    task :environment do\n      set :unicorn_pid,    \"#{current_path}/tmp/pids/unicorn.pid\"\n      set :unicorn_config, \"#{current_path}/config/unicorn.conf.rb\"\n    end\n    def start_unicorn\n      within current_path do\n        execute :bundle, :exec, :unicorn, \"-c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n      end\n    end\n    def stop_unicorn\n      execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n    end\n    def reload_unicorn\n      execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n    end\n    def force_stop_unicorn\n      execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n    end\n    desc \"Start unicorn server\"\n    task start: :environment do\n      on roles(:app) do\n        start_unicorn\n      end\n    end\n    desc \"Stop unicorn server gracefully\"\n    task stop: :environment do\n      on roles(:app) do\n        stop_unicorn\n      end\n    end\n    desc \"Restart unicorn server gracefully\"\n    task restart: :environment do\n      on roles(:app) do\n        if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n          reload_unicorn\n        else\n          start_unicorn\n        end\n      end\n    end\n    desc \"Stop unicorn server immediately\"\n    task force_stop: :environment do\n      on roles(:app) do\n        force_stop_unicorn\n      end\n    end\n  end\n=end\n*[ tomajax ] $: vi config/deploy/production.rb\n=begin[config/deploy/production.rb]\n  server   '127.0.0.1',\n    user:  'tomajax',\n    roles: %w{app db web},\n    ssh_options: {\n      keys: [\n        # for ec2\n        File.expand_path('~/.ssh/tomajax'),\n        # for github\n        File.expand_path('~/.ssh/id_rsa')\n      ],\n      forward_agent: true,\n      auth_methods: %w(publickey)\n    }\n=end\n*[ tomajax ] $: vi config/deploy.rb\n=begin[config/deploy.rb]\n  # config valid only for current version of Capistrano\n  lock '3.4.0'\n  set :rbenv_ruby,    '2.1.3'\n  set :application,   'tomajax'\n  set :repo_url,      'git@github.com:Hogeo/tomajax.git'\n  set :branch,        'master'\n  set :deploy_to,     '/var/www/tomajax'\n  set :linked_dirs,   fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')\n  set :keep_releases, 3\n  # set values for slackistrano deployment notifier\n  # set :slack_webhook,      'https://hooks.slack.com/services/T02B5F7S3/B0ATNSDB6/ERhof0moz0987uLtiXXXXXX'\n  # set :slack_icon_url,     'https://s3-ap-northeast-1.amazonaws.com/tomajax/images/tomato3_small.png'\n  # set :slack_username,     'Tomajax'\n  # set :slack_msg_starting, \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\"\n  # set :slack_msg_finished, \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3057\u307e\u3057\u305f\uff01\uff01\"\n  # set :slack_msg_failed,   \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u307e\u3057\u305f...\"\n  namespace :deploy do\n    desc 'Restart application'\n    task :restart do\n      invoke 'unicorn:restart'\n    end\n    desc 'Create database'\n    task :db_create do\n      on roles(:db) do |host|\n        with rails_env: fetch(:rails_env) do\n          within current_path do\n            execute :bundle, :exec, :rake, 'db:create'\n          end\n        end\n      end\n    end\n    desc 'Run seed'\n    task :seed do\n      on roles(:app) do\n        with rails_env: fetch(:rails_env) do\n          within current_path do\n            execute :bundle, :exec, :rake, 'db:seed'\n          end\n        end\n      end\n    end\n    after :publishing, :restart\n    after :restart,    :clear_cache do\n      on roles(:web), in: :groups, limit: 3, wait: 10 do; end\n    end\n    after :finished,   :cleanup\n  end\n=end\n\n-----------------------------------------\n# add secret_key_base\n*[ tomajax ] $: rake secret\n*[ tomajax ] $: vi config/secrets.yml\n=begin[config/secrets.yml]\n  production:\n    secret_key_base: c013ghj7bc1b87xxx0099ace86ca58a9ca000ce3d0000000a4ee86acad7a4ba4f189823xxxxx635326a9b17ecf8fe047a293aa05562be4fec6c544aa4e963xxx\n=end\n\n-----------------------------------------\n# push to remote repository\n*[ tomajax ] $: git add .\n*[ tomajax ] $: git commit -m 'set environment for deployment'\n*[ tomajax ] $: git push origin master\n\n-----------------------------------------\n# install nginx\n[tomajax|~]$ sudo yum install nginx\n[tomajax|~]$ cd /etc/nginx/conf.d/\n[tomajax|conf.d]$ sudo touch tomajax.conf\n[tomajax|conf.d]$ sudo vi tomajax.conf\n=begin[/etc/nginx/conf.d/tomajax.conf]\n  # log directory\n  error_log  /var/www/tomajax/current/log/nginx.error.log;\n  access_log /var/www/tomajax/current/log/nginx.access.log;\n  # max body size\n  client_max_body_size 2G;\n  upstream app_server {\n    # for UNIX domain socket setups\n    server unix:/var/www/tomajax/current/tmp/sockets/.unicorn.sock fail_timeout=0;\n  }\n  server {\n    listen 80;\n    server_name 127.0.0.1;\n    # nginx so increasing this is generally safe...\n    keepalive_timeout 5;\n    # path for static files\n    root /var/www/tomajax/current/public;\n    # page cache loading\n    try_files $uri/index.html $uri.html $uri @app;\n    location @app {\n      # HTTP headers\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $http_host;\n      proxy_redirect off;\n      proxy_pass http://app_server;\n    }\n    # Rails error pages\n    error_page 500 502 503 504 /500.html;\n    location = /500.html {\n      root /var/www/tomajax/current/public;\n    }\n  }\n=end\n\n-----------------------------------------\n# make dir for application\n[tomajax|~]$ sudo mkdir /var/www\n[tomajax|~]$ cd /var\n[tomajax|var]$ chown tomajax www\n[tomajax|var]$ sudo chown tomajax www\n\n-----------------------------------------\n# install bundler\n[tomajax|var]$ cd\n[tomajax|~]$ gem install bundler\n\n-----------------------------------------\n# change settings for production at database.yml\n*[ tomajax ] $: vi config/database.yml\n=begin[config/database.yml]\n  production:\n    <<: *default\n    database: tomajax_production\n    username: root\n=end\n\n-----------------------------------------\n# change settings for mysql & create database\n[tomajax|~]$ mysql --help\n[tomajax|~]$ sudo vi /etc/my.cnf\n[tomajax|~]$ sudo service mysqld start\n[tomajax|~]$ mysql -u root -p\n[mysql]> CREATE DATABASE tomajax_production;\n[mysql]> SHOW DATABASES;\n[mysql]> QUIT;\n\n-----------------------------------------\n# remove ec2-user & start to deploy\n[tomajax|~]$ sudo userdel -r ec2-user\n[tomajax|~]$ sudo service nginx start\n[tomajax|~]$ exit\n*[ tomajax ] $: bundle exec cap production deploy\n\n\nAWS\u30c7\u30d7\u30ed\u30a4\u30de\u30b9\u30bf\u30fc\u306b\u306a\u3063\u3066\u3001Heroku\u3067\u6d88\u8017\u3059\u308b\u904e\u53bb\u306b\u8a23\u5225\u3057\u3088\u3046\u2015\u3002\n\n\u3053\u306e\u8a18\u4e8b\u306f\u5358\u306a\u308b\u4e00\u672c\u306e\u30ed\u30b0\u3067\u3059\u3002\n\u3060\u3051\u308c\u3069\u3082\u4e0a\u304b\u3089\u4e0b\u307e\u3067\u901a\u3059\u3060\u3051\u3067AWS\u306b\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30de\u30f3\u30c9\u306e\u9014\u4e2d\u9014\u4e2d\u3067\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u306e\u8a18\u8ff0\u306f\u6df7\u305c\u3066\u3042\u308a\u307e\u3059\u3002\n\u305f\u3060\u74b0\u5883\u3054\u3068\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001\u4f55\u304b\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u307b\u3057\u3044\u3067\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u4ee5\u4e0b\u3088\u308a\u3001\u300cTomajax\u300d\u3068\u3044\u3046\u4eee\u60f3\u306eRails\u30a2\u30d7\u30ea\u3092\n30\u5206\u4f4d\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3059\u3002\u3042\u307e\u308a\u89aa\u5207\u306a\u89e3\u8aac\u306f\u306a\u3044\u306e\u3067\u3054\u52d8\u5f01\u3002\n\n\n---\n**\u3010\u6ce8\u610f\u4e8b\u9805\u3011**                          \n1. [\uff0a]\u304c\u5148\u982d\u306b\u3042\u308b\u30b3\u30de\u30f3\u30c9\u306f\u30ed\u30fc\u30ab\u30eb\u3067\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\n2. \u30b3\u30d4\u30da\u3059\u308b\u969b\u306b'=begin'\u3068'=end'\u306f\u5916\u3057\u3066\u304f\u3060\u3055\u3044\n3. EC\uff12\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u969b\u306flinux\u306b\u3057\u3066\u304f\u3060\u3055\u3044\n4. \u4ee5\u4e0b\u306b\u9032\u3080\u524d\u306bAWS\u306eVPC\u3068EC2\u306f\u4f5c\u6210\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\n   \u53c2\u8003\u52d5\u753b\uff1a[AWS\u8b1b\u5ea7 - VPC/EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\u304b\u3089\u63a5\u7d9a\u307e\u3067](https://youtu.be/TDaLNHOL-h4)\n5. \u30c7\u30d7\u30ed\u30a4\u304c\u7d42\u308f\u3063\u305f\u3089Slack\u901a\u77e5\u306b\u6311\u6226\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n   \u53c2\u8003\u52d5\u753b\uff1a[AWS\u8b1b\u5ea7 - capistrano\u30c7\u30d7\u30ed\u30a4\u306eSlack\u901a\u77e5\u8a2d\u5b9a](https://youtu.be/Vff-Qhv2Kj8)\n\n\n```ruby:\n# connect to ec2\n*[ ~ ] $: mv Downloads/tomajax.pem .ssh/\n*[ ~ ] $: cd .ssh/\n*[ .ssh ] $: chmod 600 tomajax.pem\n*[ .ssh ] $: ssh -i tomajax.pem ec2-user@54.92.121.123\n\n-----------------------------------------\n# add user\n[ec2-user|~]$ sudo adduser tomajax\n[ec2-user|~]$ sudo passwd tomajax\n[ec2-user|~]$ sudo visudo\n[ec2-user|~]$ sudo su - tomajax\n\n-----------------------------------------\n# enable to connect as new user\n*[ ~ ] $: cd .ssh/\n*[ .ssh ] $: ssh-keygen -t rsa\n[tomajax|~]$ mkdir .ssh\n[tomajax|~]$ chmod 700 .ssh\n[tomajax|~]$ cd .ssh\n[tomajax|.ssh]$ touch authorized_keys\n[tomajax|.ssh]$ chmod 600 authorized_keys\n[tomajax|.ssh]$ sudo vi authorized_keys\n[tomajax|.ssh]$ exit\n\n-----------------------------------------\n# install plugins\n[tomajax|~]$ sudo yum install \\\ngit make gcc-c++ patch \\\nopenssl-devel \\\nlibyaml-devel libffi-devel libicu-devel \\\nlibxml2 libxslt libxml2-devel libxslt-devel \\\nzlib-devel readline-devel \\\nmysql mysql-server mysql-devel \\\nImageMagick ImageMagick-devel \\\nepel-release\n\n-----------------------------------------\n# install nodejs\n[tomajax|~]$ sudo yum install nodejs npm --enablerepo=epel\n\n-----------------------------------------\n# install rbenv\n[tomajax|~]$ git clone https://github.com/sstephenson/rbenv.git ~/.rbenv\n[tomajax|~]$ echo 'export PATH=\"$HOME/.rbenv/bin:$PATH\"' >> ~/.bash_profile\n\"\n[tomajax|~]$ echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile\n[tomajax|~]$ source .bash_profile\n[tomajax|~]$ git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build\n[tomajax|~]$ rbenv rehash\n\n-----------------------------------------\n# install ruby 2.1.3\n[tomajax|~]$ rbenv install -v 2.1.3\n[tomajax|~]$ rbenv global 2.1.3\n[tomajax|~]$ rbenv rehash\n[tomajax|~]$ ruby -v\n\n-----------------------------------------\n# add gems\n*[ tomajax ] $: vi Gemfile\n=begin[Gemfile]\n  group :production, :staging do\n    gem 'unicorn'\n    gem 'capistrano',          require: false\n    gem 'capistrano-rails',    require: false\n    gem 'capistrano-rbenv',    require: false\n    gem 'capistrano-bundler',  require: false\n    gem 'capistrano3-unicorn', require: false\n    gem 'slackistrano',        require: false\n  end\n=end\n*[ tomajax ] $: bundle\n\n-----------------------------------------\n# add unicorn config file\n*[ tomajax ] $: touch config/unicorn.conf.rb\n*[ tomajax ] $: vi config/unicorn.conf.rb\n=begin[config/unicorn.conf.rb]\n  # set lets\n  $worker  = 2\n  $timeout = 30\n  $app_dir = \"/var/www/tomajax/current\"\n  $listen  = File.expand_path 'tmp/sockets/.unicorn.sock', $app_dir\n  $pid     = File.expand_path 'tmp/pids/unicorn.pid', $app_dir\n  $std_log = File.expand_path 'log/unicorn.log', $app_dir\n  # set config\n  worker_processes  $worker\n  working_directory $app_dir\n  stderr_path $std_log\n  stdout_path $std_log\n  timeout $timeout\n  listen  $listen\n  pid $pid\n  # loading booster\n  preload_app true\n  # before starting processes\n  before_fork do |server, worker|\n    defined?(ActiveRecord::Base) and ActiveRecord::Base.connection.disconnect!\n    old_pid = \"#{server.config[:pid]}.oldbin\"\n    if old_pid != server.pid\n      begin\n        Process.kill \"QUIT\", File.read(old_pid).to_i\n      rescue Errno::ENOENT, Errno::ESRCH\n      end\n    end\n  end\n  # after finishing processes\n  after_fork do |server, worker|\n    defined?(ActiveRecord::Base) and ActiveRecord::Base.establish_connection\n  end\n=end\n\n-----------------------------------------\n# set config for capistrano\n*[ tomajax ] $: bundle exec cap install\n*[ tomajax ] $: vi Capfile\n=begin[Capfile]\n  # Load DSL and set up stages\n  require 'capistrano/setup'\n  # Include default deployment tasks\n  require 'capistrano/deploy'\n  # Include tasks from other gems included in your Gemfile\n  require 'capistrano/rbenv'\n  require 'capistrano/bundler'\n  require 'capistrano/rails/assets'\n  require 'capistrano/rails/migrations'\n  # Include slack notifier\n  # require 'slackistrano'\n  # Load custom tasks from `lib/capistrano/tasks` if you have any defined\n  Dir.glob('lib/capistrano/tasks/*.cap').each { |r| import r }\n=end\n*[ tomajax ] $: vi lib/capistrano/tasks/unicorn.cap\n=begin[lib/capistrano/tasks/unicorn.cap]\n  namespace :unicorn do\n    task :environment do\n      set :unicorn_pid,    \"#{current_path}/tmp/pids/unicorn.pid\"\n      set :unicorn_config, \"#{current_path}/config/unicorn.conf.rb\"\n    end\n    def start_unicorn\n      within current_path do\n        execute :bundle, :exec, :unicorn, \"-c #{fetch(:unicorn_config)} -E #{fetch(:rails_env)} -D\"\n      end\n    end\n    def stop_unicorn\n      execute :kill, \"-s QUIT $(< #{fetch(:unicorn_pid)})\"\n    end\n    def reload_unicorn\n      execute :kill, \"-s USR2 $(< #{fetch(:unicorn_pid)})\"\n    end\n    def force_stop_unicorn\n      execute :kill, \"$(< #{fetch(:unicorn_pid)})\"\n    end\n    desc \"Start unicorn server\"\n    task start: :environment do\n      on roles(:app) do\n        start_unicorn\n      end\n    end\n    desc \"Stop unicorn server gracefully\"\n    task stop: :environment do\n      on roles(:app) do\n        stop_unicorn\n      end\n    end\n    desc \"Restart unicorn server gracefully\"\n    task restart: :environment do\n      on roles(:app) do\n        if test(\"[ -f #{fetch(:unicorn_pid)} ]\")\n          reload_unicorn\n        else\n          start_unicorn\n        end\n      end\n    end\n    desc \"Stop unicorn server immediately\"\n    task force_stop: :environment do\n      on roles(:app) do\n        force_stop_unicorn\n      end\n    end\n  end\n=end\n*[ tomajax ] $: vi config/deploy/production.rb\n=begin[config/deploy/production.rb]\n  server   '127.0.0.1',\n    user:  'tomajax',\n    roles: %w{app db web},\n    ssh_options: {\n      keys: [\n        # for ec2\n        File.expand_path('~/.ssh/tomajax'),\n        # for github\n        File.expand_path('~/.ssh/id_rsa')\n      ],\n      forward_agent: true,\n      auth_methods: %w(publickey)\n    }\n=end\n*[ tomajax ] $: vi config/deploy.rb\n=begin[config/deploy.rb]\n  # config valid only for current version of Capistrano\n  lock '3.4.0'\n  set :rbenv_ruby,    '2.1.3'\n  set :application,   'tomajax'\n  set :repo_url,      'git@github.com:Hogeo/tomajax.git'\n  set :branch,        'master'\n  set :deploy_to,     '/var/www/tomajax'\n  set :linked_dirs,   fetch(:linked_dirs, []).push('log', 'tmp/pids', 'tmp/cache', 'tmp/sockets', 'vendor/bundle', 'public/system')\n  set :keep_releases, 3\n  # set values for slackistrano deployment notifier\n  # set :slack_webhook,      'https://hooks.slack.com/services/T02B5F7S3/B0ATNSDB6/ERhof0moz0987uLtiXXXXXX'\n  # set :slack_icon_url,     'https://s3-ap-northeast-1.amazonaws.com/tomajax/images/tomato3_small.png'\n  # set :slack_username,     'Tomajax'\n  # set :slack_msg_starting, \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u59cb\u307e\u308a\u307e\u3059\u3002\"\n  # set :slack_msg_finished, \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u6210\u529f\u3057\u307e\u3057\u305f\uff01\uff01\"\n  # set :slack_msg_failed,   \"#{ENV['USER'] || ENV['USERNAME']} \u306b\u3088\u308b #{fetch :branch} \u30d6\u30e9\u30f3\u30c1\u306e #{fetch :rails_env, 'production'} \u74b0\u5883\u3078\u306e\u30c7\u30d7\u30ed\u30a4\u304c\u5931\u6557\u3057\u307e\u3057\u305f...\"\n  namespace :deploy do\n    desc 'Restart application'\n    task :restart do\n      invoke 'unicorn:restart'\n    end\n    desc 'Create database'\n    task :db_create do\n      on roles(:db) do |host|\n        with rails_env: fetch(:rails_env) do\n          within current_path do\n            execute :bundle, :exec, :rake, 'db:create'\n          end\n        end\n      end\n    end\n    desc 'Run seed'\n    task :seed do\n      on roles(:app) do\n        with rails_env: fetch(:rails_env) do\n          within current_path do\n            execute :bundle, :exec, :rake, 'db:seed'\n          end\n        end\n      end\n    end\n    after :publishing, :restart\n    after :restart,    :clear_cache do\n      on roles(:web), in: :groups, limit: 3, wait: 10 do; end\n    end\n    after :finished,   :cleanup\n  end\n=end\n\n-----------------------------------------\n# add secret_key_base\n*[ tomajax ] $: rake secret\n*[ tomajax ] $: vi config/secrets.yml\n=begin[config/secrets.yml]\n  production:\n    secret_key_base: c013ghj7bc1b87xxx0099ace86ca58a9ca000ce3d0000000a4ee86acad7a4ba4f189823xxxxx635326a9b17ecf8fe047a293aa05562be4fec6c544aa4e963xxx\n=end\n\n-----------------------------------------\n# push to remote repository\n*[ tomajax ] $: git add .\n*[ tomajax ] $: git commit -m 'set environment for deployment'\n*[ tomajax ] $: git push origin master\n\n-----------------------------------------\n# install nginx\n[tomajax|~]$ sudo yum install nginx\n[tomajax|~]$ cd /etc/nginx/conf.d/\n[tomajax|conf.d]$ sudo touch tomajax.conf\n[tomajax|conf.d]$ sudo vi tomajax.conf\n=begin[/etc/nginx/conf.d/tomajax.conf]\n  # log directory\n  error_log  /var/www/tomajax/current/log/nginx.error.log;\n  access_log /var/www/tomajax/current/log/nginx.access.log;\n  # max body size\n  client_max_body_size 2G;\n  upstream app_server {\n    # for UNIX domain socket setups\n    server unix:/var/www/tomajax/current/tmp/sockets/.unicorn.sock fail_timeout=0;\n  }\n  server {\n    listen 80;\n    server_name 127.0.0.1;\n    # nginx so increasing this is generally safe...\n    keepalive_timeout 5;\n    # path for static files\n    root /var/www/tomajax/current/public;\n    # page cache loading\n    try_files $uri/index.html $uri.html $uri @app;\n    location @app {\n      # HTTP headers\n      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n      proxy_set_header Host $http_host;\n      proxy_redirect off;\n      proxy_pass http://app_server;\n    }\n    # Rails error pages\n    error_page 500 502 503 504 /500.html;\n    location = /500.html {\n      root /var/www/tomajax/current/public;\n    }\n  }\n=end\n\n-----------------------------------------\n# make dir for application\n[tomajax|~]$ sudo mkdir /var/www\n[tomajax|~]$ cd /var\n[tomajax|var]$ chown tomajax www\n[tomajax|var]$ sudo chown tomajax www\n\n-----------------------------------------\n# install bundler\n[tomajax|var]$ cd\n[tomajax|~]$ gem install bundler\n\n-----------------------------------------\n# change settings for production at database.yml\n*[ tomajax ] $: vi config/database.yml\n=begin[config/database.yml]\n  production:\n    <<: *default\n    database: tomajax_production\n    username: root\n=end\n\n-----------------------------------------\n# change settings for mysql & create database\n[tomajax|~]$ mysql --help\n[tomajax|~]$ sudo vi /etc/my.cnf\n[tomajax|~]$ sudo service mysqld start\n[tomajax|~]$ mysql -u root -p\n[mysql]> CREATE DATABASE tomajax_production;\n[mysql]> SHOW DATABASES;\n[mysql]> QUIT;\n\n-----------------------------------------\n# remove ec2-user & start to deploy\n[tomajax|~]$ sudo userdel -r ec2-user\n[tomajax|~]$ sudo service nginx start\n[tomajax|~]$ exit\n*[ tomajax ] $: bundle exec cap production deploy\n\n```\n", "tags": ["Rails", "AWS", "nginx", "capistrano", "Slack"]}