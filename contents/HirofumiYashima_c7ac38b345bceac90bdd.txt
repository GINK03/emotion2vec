{"tags": ["Python", "pandas", "DataFrame", "\u30c7\u30fc\u30bf\u5206\u6790"], "context": "\nPython 3.5\n>>> import numpy as np\n>>>\n>>> x_list = list(range(0, 101)) \n>>> x_array = np.array(x_list)\n>>>\n\n\n\n\u4ee5\u4e0b \u3067 \u51fa\u6765\u308b\n\nDataFrame \u306e \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u306b \u6e21\u3059 dict\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e value\u3000\u3068\u3057\u3066\u3001\nBumpy.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b\u3002\n\npd.DataFrame({\"col_a\" : x_array})\n\n\nPython 3.5\n>>> import pandas as pd\n>>> \n>>> sample_df = pd.DataFrame({\"col_a\" : x_array})\n>>> sample_df\n     col_a\n0        0\n1        1\n2        2\n3        3\n4        4\n5        5\n6        6\n7        7\n8        8\n9        9\n10      10\n11      11\n12      12\n13      13\n14      14\n15      15\n16      16\n17      17\n18      18\n19      19\n20      20\n21      21\n22      22\n23      23\n24      24\n25      25\n26      26\n27      27\n28      28\n29      29\n..     ...\n71      71\n72      72\n73      73\n74      74\n75      75\n76      76\n77      77\n78      78\n79      79\n80      80\n81      81\n82      82\n83      83\n84      84\n85      85\n86      86\n87      87\n88      88\n89      89\n90      90\n91      91\n92      92\n93      93\n94      94\n95      95\n96      96\n97      97\n98      98\n99      99\n100    100\n\n[101 rows x 1 columns]\n>>> \n\n\n\n\n\u4eca\u5ea6\u306f\u3001\u8907\u6570\u306enp.array\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304b\u3089\u3001\u8907\u6570\u306e\u5217 \u3092\u6301\u3064 DartaFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3057\u3066\u307f\u308b\n\n\nPython 3.5\n>>> x_1_list = list(range(0, 101))\n>>> x_2_list = x_1_list + np.random.randn(101)\n>>> len(x_1_list)\n101\n>>> x_3_list = x_2_list + np.random.poisson(lam=10, size=101)\n>>> x_4_list = x_2_list + np.random.binomial(n=100, p=0.3, size=101)\n\n\n\n\uff08 \u7d71\u8a08\u5206\u5e03\u4e71\u6570 \u306b\u3064\u3044\u3066 \u306f\u3001\u4ee5\u4e0b \u3092 \u53c2\u8003 \uff09\n\nyubais\u3055\u3093 Qiita\u8a18\u4e8b \u300cNumpy\u306b\u3088\u308b\u4e71\u6570\u751f\u6210\u307e\u3068\u3081\u300d\nSciPy.org , Random sampling (numpy.random)\n\n\n\uff08 \u5f15\u6570 \u306f \u540d\u524d\u306a\u3057 \u306e \u4ee5\u4e0b \u3067\u3082 \u3044\u3051\u308b \uff09\n\nPython 3.5\n>>> np.random.binomial(100, 0.3, 10)             \narray([29, 31, 23, 35, 26, 32, 24, 35, 32, 35])\n>>> \n>>> x_4_list = x_2_list + np.random.binomial(100, 0.3, 101)         \n>>> \n\n\n\nlist\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304b\u3089 np.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3059\u308b\n\n\nPython 3.5\n>>> x_1_array = np.array(x_1_list)\n>>> x_2_array = np.array(x_2_list)\n>>> x_3_array = np.array(x_3_list)\n>>> x_4_array = np.array(x_4_list)\n>>>\n\n\n\nPython 3.5\n>>> x_1_array[0:10] \narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n>>> \n>>> x_2_array[0:10]\narray([-0.57037297, -0.29636517,  1.69915619,  5.00681986,  6.06504539,\n        4.87564059,  3.68129676,  8.77218647,  7.62701888,  9.49392516])\n>>> \n>>> x_3_array[0:10]\narray([  5.42962703,  10.70363483,   8.69915619,  13.00681986,\n        21.06504539,  11.87564059,  13.68129676,  24.77218647,\n        21.62701888,  19.49392516])\n>>> \n>>> x_4_array[0:10]\narray([ 33.42962703,  23.70363483,  29.69915619,  36.00681986,\n        41.06504539,  36.87564059,  35.68129676,  45.77218647,\n        40.62701888,  40.49392516])\n>>> \n\n\n\nnp.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 4\u3064 \u3092 DataFrame\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u306b \u5f15\u6570 \u3068\u3057\u3066 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b\n\n\nPython 3.5\n>>> sample_df_2 = pd.DataFrame({\"x_1\" : x_1_array, \"x_2\" : x_2_array, \"x_3\" : x_3_array, \"x_4\" : x_4_array})\n>>> type(sample_df_2)\n<class 'pandas.core.frame.DataFrame'>\n>>>\n\n\n\nPython 3.5\n>>> sample_df_2.head()\n   x_1       x_2        x_3        x_4\n0    0 -0.570373   5.429627  33.429627\n1    1 -0.296365  10.703635  23.703635\n2    2  1.699156   8.699156  29.699156\n3    3  5.006820  13.006820  36.006820\n4    4  6.065045  21.065045  41.065045\n>>>\n\n\n\nPython 3.5\n>>> sample_df_2.describe()\n              x_1         x_2         x_3         x_4\ncount  101.000000  101.000000  101.000000  101.000000\nmean    50.000000   50.026817   59.937708   80.472361\nstd     29.300171   29.313094   28.926266   28.972050\nmin      0.000000   -0.570373    5.429627   23.703635\n25%     25.000000   24.819227   37.745984   55.500462\n50%     50.000000   49.666622   58.921116   79.051680\n75%     75.000000   75.305699   85.332756  105.415832\nmax    100.000000  100.570947  112.116125  134.570947\n>>> \n\n\n\nPython 3.5\n>>> sample_df_2.shape\n(101, 4)\n>>> \n\n\n\n\n\u3010 \u53c2\u8003 \u3011\n\n\nlist\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u6e21\u3059 \u65b9\u6cd5\n\n\nPython 3.5\n>>> sample_df = pd.DataFrame({\"col_a\" : x_list})\n>>> sample_df\n     col_a\n0        0\n1        1\n2        2\n3        3\n4        4\n5        5\n6        6\n7        7\n8        8\n9        9\n10      10\n11      11\n12      12\n13      13\n14      14\n15      15\n16      16\n17      17\n18      18\n19      19\n20      20\n21      21\n22      22\n23      23\n24      24\n25      25\n26      26\n27      27\n28      28\n29      29\n..     ...\n71      71\n72      72\n73      73\n74      74\n75      75\n76      76\n77      77\n78      78\n79      79\n80      80\n81      81\n82      82\n83      83\n84      84\n85      85\n86      86\n87      87\n88      88\n89      89\n90      90\n91      91\n92      92\n93      93\n94      94\n95      95\n96      96\n97      97\n98      98\n99      99\n100    100\n\n[101 rows x 1 columns]\n>>> \n\n\n```{python:Python 3.5}\n>>> import numpy as np\n>>>\n>>> x_list = list(range(0, 101)) \n>>> x_array = np.array(x_list)\n>>>\n```\n\n###__\u4ee5\u4e0b \u3067 \u51fa\u6765\u308b__\n\nDataFrame \u306e \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u306b \u6e21\u3059 dict\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306e value\u3000\u3068\u3057\u3066\u3001\nBumpy.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b\u3002\n\n> pd.DataFrame({\"col_a\" : x_array})\n\n```{python:Python 3.5} \n>>> import pandas as pd\n>>> \n>>> sample_df = pd.DataFrame({\"col_a\" : x_array})\n>>> sample_df\n     col_a\n0        0\n1        1\n2        2\n3        3\n4        4\n5        5\n6        6\n7        7\n8        8\n9        9\n10      10\n11      11\n12      12\n13      13\n14      14\n15      15\n16      16\n17      17\n18      18\n19      19\n20      20\n21      21\n22      22\n23      23\n24      24\n25      25\n26      26\n27      27\n28      28\n29      29\n..     ...\n71      71\n72      72\n73      73\n74      74\n75      75\n76      76\n77      77\n78      78\n79      79\n80      80\n81      81\n82      82\n83      83\n84      84\n85      85\n86      86\n87      87\n88      88\n89      89\n90      90\n91      91\n92      92\n93      93\n94      94\n95      95\n96      96\n97      97\n98      98\n99      99\n100    100\n\n[101 rows x 1 columns]\n>>> \n```\n\n___\n\n###__\u4eca\u5ea6\u306f\u3001\u8907\u6570\u306enp.array\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304b\u3089\u3001\u8907\u6570\u306e\u5217 \u3092\u6301\u3064 DartaFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3057\u3066\u307f\u308b__\n\n\n```{python:Python 3.5}\n>>> x_1_list = list(range(0, 101))\n>>> x_2_list = x_1_list + np.random.randn(101)\n>>> len(x_1_list)\n101\n>>> x_3_list = x_2_list + np.random.poisson(lam=10, size=101)\n>>> x_4_list = x_2_list + np.random.binomial(n=100, p=0.3, size=101)\n```\n\n___\n\n__\uff08 \u7d71\u8a08\u5206\u5e03\u4e71\u6570 \u306b\u3064\u3044\u3066 \u306f\u3001\u4ee5\u4e0b \u3092 \u53c2\u8003 \uff09__\n\n* [yubais\u3055\u3093 Qiita\u8a18\u4e8b \u300cNumpy\u306b\u3088\u308b\u4e71\u6570\u751f\u6210\u307e\u3068\u3081\u300d](http://qiita.com/yubais/items/bf9ce0a8fefdcc0b0c97)\n* [SciPy.org , _Random sampling (numpy.random)_](https://docs.scipy.org/doc/numpy/reference/routines.random.html)\n\n___\n\n\n__\uff08 \u5f15\u6570 \u306f \u540d\u524d\u306a\u3057 \u306e \u4ee5\u4e0b \u3067\u3082 \u3044\u3051\u308b \uff09__\n\n\n```{python:Python 3.5}\n>>> np.random.binomial(100, 0.3, 10)             \narray([29, 31, 23, 35, 26, 32, 24, 35, 32, 35])\n>>> \n>>> x_4_list = x_2_list + np.random.binomial(100, 0.3, 101)         \n>>> \n```\n\n* list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u304b\u3089 np.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u751f\u6210\u3059\u308b\n\n```{python:Python 3.5}\n>>> x_1_array = np.array(x_1_list)\n>>> x_2_array = np.array(x_2_list)\n>>> x_3_array = np.array(x_3_list)\n>>> x_4_array = np.array(x_4_list)\n>>>\n```\n\n```{python:Python 3.5}\n>>> x_1_array[0:10] \narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n>>> \n>>> x_2_array[0:10]\narray([-0.57037297, -0.29636517,  1.69915619,  5.00681986,  6.06504539,\n        4.87564059,  3.68129676,  8.77218647,  7.62701888,  9.49392516])\n>>> \n>>> x_3_array[0:10]\narray([  5.42962703,  10.70363483,   8.69915619,  13.00681986,\n        21.06504539,  11.87564059,  13.68129676,  24.77218647,\n        21.62701888,  19.49392516])\n>>> \n>>> x_4_array[0:10]\narray([ 33.42962703,  23.70363483,  29.69915619,  36.00681986,\n        41.06504539,  36.87564059,  35.68129676,  45.77218647,\n        40.62701888,  40.49392516])\n>>> \n```\n\n###__np.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 4\u3064 \u3092 DataFrame\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf \u306b \u5f15\u6570 \u3068\u3057\u3066 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b__\n\n\n```{python:Python 3.5}\n>>> sample_df_2 = pd.DataFrame({\"x_1\" : x_1_array, \"x_2\" : x_2_array, \"x_3\" : x_3_array, \"x_4\" : x_4_array})\n>>> type(sample_df_2)\n<class 'pandas.core.frame.DataFrame'>\n>>>\n```\n\n```{python:Python 3.5}\n>>> sample_df_2.head()\n   x_1       x_2        x_3        x_4\n0    0 -0.570373   5.429627  33.429627\n1    1 -0.296365  10.703635  23.703635\n2    2  1.699156   8.699156  29.699156\n3    3  5.006820  13.006820  36.006820\n4    4  6.065045  21.065045  41.065045\n>>>\n```\n\n```{python:Python 3.5}\n>>> sample_df_2.describe()\n              x_1         x_2         x_3         x_4\ncount  101.000000  101.000000  101.000000  101.000000\nmean    50.000000   50.026817   59.937708   80.472361\nstd     29.300171   29.313094   28.926266   28.972050\nmin      0.000000   -0.570373    5.429627   23.703635\n25%     25.000000   24.819227   37.745984   55.500462\n50%     50.000000   49.666622   58.921116   79.051680\n75%     75.000000   75.305699   85.332756  105.415832\nmax    100.000000  100.570947  112.116125  134.570947\n>>> \n```\n\n```{python:Python 3.5}\n>>> sample_df_2.shape\n(101, 4)\n>>> \n```\n\n___\n\n##__\u3010 \u53c2\u8003 \u3011__\n\n###__list\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3092 \u6e21\u3059 \u65b9\u6cd5__\n\n```{python:Python 3.5}\n>>> sample_df = pd.DataFrame({\"col_a\" : x_list})\n>>> sample_df\n     col_a\n0        0\n1        1\n2        2\n3        3\n4        4\n5        5\n6        6\n7        7\n8        8\n9        9\n10      10\n11      11\n12      12\n13      13\n14      14\n15      15\n16      16\n17      17\n18      18\n19      19\n20      20\n21      21\n22      22\n23      23\n24      24\n25      25\n26      26\n27      27\n28      28\n29      29\n..     ...\n71      71\n72      72\n73      73\n74      74\n75      75\n76      76\n77      77\n78      78\n79      79\n80      80\n81      81\n82      82\n83      83\n84      84\n85      85\n86      86\n87      87\n88      88\n89      89\n90      90\n91      91\n92      92\n93      93\n94      94\n95      95\n96      96\n97      97\n98      98\n99      99\n100    100\n\n[101 rows x 1 columns]\n>>> \n```\n"}