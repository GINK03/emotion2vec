{"context": " More than 1 year has passed since last update.\n\n1. \u306f\u3058\u3081\u306b\n\u6700\u8fd1\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u96c6\u7d50\u3055\u305b\u305fprovider\u3068\uff0c\n\u305d\u306e\u60c5\u5831\u3092\u3061\u3087\u3053\u3061\u3087\u3053\u3068\u4f7f\u3046client\u306e\u4e21\u65b9\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u307e\u3068\u3081\u3066\u307f\u308b\uff0e\n\u4eca\u56de\uff0c\u4f55\u3092\u307e\u3068\u3081\u305f\u60c5\u5831\u304b\u3092\u7c21\u6f54\u306b\u793a\u3059\u3068\uff0c\ntwitter\u9023\u643a\u306e\u3088\u3046\u306b\u5225\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u5f15\u3063\u5f35\u308b\u6a5f\u69cb\u3092\u4f5c\u308a\u307e\u3059\uff0e\ntwitter(provider)\u3068\u305d\u308c\u3092\u4f7f\u3046app(client)\u306e\u8a2d\u5b9a\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\uff0e\n\u7d50\u69cb\u9577\u304f\u306a\u308b\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u6700\u5c0f\u69cb\u6210\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff0e\n\n2. provider\n\u5fc5\u8981\u306agem\ngem 'devise'\ngem 'doorkeeper'\n\n\u305d\u308c\u305e\u308c\u306e\u5f79\u5272\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\ndevise\n\n\nprovider\u306e\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4f5c\u308b\u305f\u3081\u306b\u5229\u7528\n\n\ndoorkeeper\n\n\nomniauth\u306eprovider\u306b\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n\n\n\u307e\u305a\u306fdevise\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\uff0e\nrails g devise:install\nrails g devise User\nrake db:migrate\n\n\u4e00\u822c\u7684\u306bomniauth\u306eprovider\u306b\u3042\u308b\u60c5\u5831\u3092\u9069\u5f53\u306b\u30e6\u30fc\u30b6\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0cdoorkeeper\u306e\u7ba1\u7406\u30da\u30fc\u30b8\u3092\u7ba1\u7406\u8005\u5236\u9650\u3092\u66f8\u3051\u305f\u307b\u3046\u304c\u826f\u3044\u304b\u3068\u601d\u3046\u306e\u3067admin\u30ab\u30e9\u30e0\u3082\u6301\u305f\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\nrails g migration AddOmniauthToUser uid name admin:boolean\nrake db:migrate\n\n\u4eca\u56de\u306fUser\u306eid\u3092\u305d\u306e\u307e\u307euid\u306b\u6e21\u3059\u5f62\u306b\u3059\u308b\u305f\u3081\uff0c\u4ee5\u4e0b\u3092\u8ffd\u52a0\uff0e\nprovider\u306a\u306e\u3067omniauthable\u306f\u4ed8\u3051\u308b\u5fc5\u8981\u306f\u306a\u3057\uff0e\n\napp/models/user.rb\nclass User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :confirmable, :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable\n  after_create :update_uid!\n\n  def update_uid!\n    update(uid: id)\n  end\nend\n\n\n\u6b21\u306bdoorkeeper\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\n\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb&\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\uff0e\nrails g doorkeeper:install\nrails g doorkeeper:migration\nrake db:migrate\n\n\u6b21\u306b\uff0cdoorkeeper\u306e\u8a2d\u5b9a\u3092\u5f04\u308a\u307e\u3059\uff0e\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u3066\u3044\u304f\u5f62\uff0e\n\nconfig/initializers/doorkeeper.rb\n  # \u65e2\u306bprovider\u30ed\u30b0\u30a4\u30f3\u6e08\u306a\u3089\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u3092\u8fd4\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306f\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\n  resource_owner_authenticator do\n    session[:return_to] = request.fullpath\n    current_user || redirect_to(new_user_session_url)\n  end \n\n  # \u7ba1\u7406\u8005\u6a29\u9650\u4ee5\u5916\u306e\u30e6\u30fc\u30b6\u304cdoorkeeper\u7ba1\u7406\u30da\u30fc\u30b8\u306b\u6765\u305f\u3089\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\n  admin_authenticator do\n    current_user.try(:admin) || redirect_to(new_user_session_url)\n  end\n\n  # \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u671f\u9650\u306f\u3068\u308a\u3042\u3048\u305a1\u30f6\u6708\n  access_token_expires_in 1.months\n\n  # SSL\u3067\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3055\u305b\u308b\n  force_ssl_in_redirect_uri false\n\n\n\u7d9a\u3044\u3067\u30e6\u30fc\u30b6\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u308a\u307e\u3059\uff0e\n\u4eca\u56de\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u4f5c\u6210\u3057\u307e\u3059\uff0e\nUser.create(email: 'hoge@bar.com', password: 'hogehoge', name: 'fuga', admin: true)\n\n\u3053\u3053\u307e\u3067\u6765\u305f\u3089\uff0c\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3055\u305b\uff0c\nhttp://localhost:3000/oauth/applications\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3057\u3087\u3046\uff0e\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u98db\u3070\u3055\u308c\u308b\u306e\u3067\uff0c\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u518d\u5ea6\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\u7d9a\u3044\u3066\uff0cNew Application\u3092\u9078\u629e\u3057\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u3066submit\u3057\u307e\u3059\uff0e\n\n\u305d\u3046\u3059\u308b\u3068\uff0cApplication Id\u3068Secret\u304c\u767a\u884c\u3055\u308c\u307e\u3059\uff0e\n\u4ee5\u964d\u306eclient\u7de8\u3067\u306f\u3053\u306e2\u3064\u3092\u7528\u3044\u307e\u3059\uff0e\n\u6700\u5f8c\u306b\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u5f97\u308b\u305f\u3081\u306eAPI\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff0e\n\u307e\u305a\u306fAPI\u7528\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u4f5c\u308a\u307e\u3059\uff0e\nrails g controller api/v1/api\nrails g controller api/v1/users\n\n\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\napp/controllers/api/v1/api_controller.rb\nclass Api::V1::ApiController < ApplicationController\n  private\n  def current_resource_owner\n    User.find(doorkeeper_token.resource_owner_id) if doorkeeper_token\n  end \nend\n\n\n\napp/contollers/api/v1/users_controller.rb\nclass Api::V1::UsersController < Api::V1::ApiController\n  before_action :doorkeeper_authorize!\n  respond_to :json\n\n  def me\n    respond_with current_resource_owner\n  end \nend\n\n\n\u6b21\u306b\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u51e6\u7406\u3067\u3059\uff0e\nrails g controller users/sessions\n\nsession\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u60c5\u5831\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u305d\u3061\u3089\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\uff0e\n\napp/controllers/users/session.rb\nclass Users::SessionsController < Devise::SessionsController\n  def create\n    self.resource = warden.authenticate!(auth_options)\n    set_flash_message(:notice, :signed_in) if is_flashing_format?\n    sign_in(resource_name, resource)\n    yield resource if block_given?\n    if session[:return_to]\n      redirect_to session[:return_to]\n      session[:return_to] = nil \n    else\n      respond_with resource, location: after_sign_in_path_for(resource)\n    end \n  end \nend\n\n\n\u6700\u5f8c\u306bAPI\u3068session\u306eroutes\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\uff0e\n\nconfig/routes.rb\nRails.application.routes.draw do\n  use_doorkeeper\n  devise_for :users, controllers: {\n    sessions: 'users/sessions'\n  }\n  namespace :api do\n    namespace :v1 do\n      get '/me' => 'users#me'\n    end \n  end\nend\n\n\n\u3053\u308c\u3067provider\u5074\u306e\u8a2d\u5b9a\u306f\u5168\u3066\u7d42\u4e86\u3067\u3059\uff0e\n\n3. client\n\u7d9a\u3044\u3066client\u5074\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\nprovider\u306flocalhost:3000, client\u306flocalhost:3001\u3067\u52d5\u304b\u3059\u524d\u63d0\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\u73fe\u6bb5\u968e\u306eclient\u5074\u3067\u5fc5\u8981\u306agem\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\ngem 'devise'\ngem 'omniauth'\ngem 'omniauth-oauth2'\n\n\u5148\u307b\u3069\u540c\u69d8\u306bdevise\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\nrails g devise:install\nrails g devise User\nrake db:migrate\n\nomniauth\u3067\u5f97\u3089\u308c\u308b\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u30ab\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3059\uff0e\nrails g migration AddOmniauthToUser uid provider name token raw:text\nrake db:migrate\n\n\u7d9a\u3044\u3066\u81ea\u5206\u7528\u306bomniauth\u306estrategies\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\nlib/omniauth/strategies/mock.rb\nmodule OmniAuth\n  module Strategies\n    class Mock < OmniAuth::Strategies::OAuth2\n      RAW_INFO_URL = 'api/v1/me'\n\n      uid { raw_info['uid'] }\n\n      info do\n        {\n          email: raw_info['email'],\n          name: raw_info['name']\n        }\n      end\n\n      extra do\n        { raw_info: raw_info }\n      end\n\n      def raw_info\n        @raw_info ||= JSON.parse(access_token.get(RAW_INFO_URL).response.body)\n      end\n    end\n  end\nend\n\n\n\u305d\u3057\u3066devise\u306e\u8a2d\u5b9a\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\nAPP_ID\u3068APP_SECRET\u306f\u5148\u307b\u3069provider\u3067\u767a\u884c\u3057\u305f\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\nconfig/initializers/devise.rb\nrequire File.expand_path('../../../lib/omniauth/strategies/mock', __FILE__)\nDevise.setup do |config|\n  config.omniauth :mock, 'APP_ID', 'APP_SECRET', client_options: { site: 'http://localhost:3000' }\nend\n\n\n\u6b21\u306bomniauth\u306ecallback\u5148\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\nrails g controller users/omniauth_callbacks\n\n\napp/controllers/users/omniauth_callbacks_controller.rb\nclass Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController\n  def mock\n    @user = User.find_for_mock(request.env['omniauth.auth'])\n\n    if @user.persisted?\n      flash[:notice] = I18n.t 'devise.omniauth_callbacks.success', kind: 'mock'\n      sign_in_and_redirect @user, event: :authentication\n    else\n      session['devise.mock_data'] = request.env['omniauth.auth']\n      redirect_to new_user_session_url, alert: @user.errors\n    end \n  end \nend\n\n\n\u6700\u5f8c\u306bUser\u30e2\u30c7\u30eb\u306e\u8a2d\u5b9a\u3067\u3059\uff0e\n\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092User\u30e2\u30c7\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\napp/models/user.rb\n  def self.find_for_mock(auth)\n    parameters = { \n      name:     auth.info.name,\n      email:    auth.info.email,\n      provider: auth.provider,\n      uid:      auth.uid,\n      token:    auth.credentials.token,\n      password: Devise.friendly_token[0, 20],\n      raw: auth.extra.to_json\n    }   \n    user = User.find_by(uid: auth.uid)\n    return update_mock!(user, parameters) if user\n\n    User.create(parameters)\n  end \n\n  def self.update_mock!(user, parameters)\n    user.update(parameters)\n    user\n  end \n\n\n\u3053\u308c\u3067\u5168\u3066\u306e\u6e96\u5099\u306f\u6574\u3063\u305f\u306e\u3067client\u5074\u306e\u30b5\u30fc\u30d0\u3082\u7acb\u3061\u4e0a\u3052\uff0c\nhttp://localhost:3001/users/sign_in\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\uff0c\n\n\u4e00\u756a\u4e0b\u306bSign in with Mock\u3068\u3044\u3046\u306e\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u305d\u308c\u3092\u9078\u629e\u3057\uff0c\n\nAuthorize\u3092\u9078\u629e\u3059\u308b\u3068\u30b5\u30fc\u30d0\u5074\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u98db\u3073\u307e\u3059(\u753b\u9762\u304c\u5168\u304f\u540c\u3058\u306a\u306e\u3067\u6c17\u3065\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u304c)\uff0e\n\u3053\u3053\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068client\u5074\u306e\u30b5\u30fc\u30d0\u3078\u3068\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u3066\u304a\u308a\uff0c\nUser\u30e2\u30c7\u30eb\u306b\u3053\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30c7\u30fc\u30bf\u304c\u3067\u304d\u3066\u3044\u308b\u306f\u305a\u3067\u3059\uff0e\n #<User:0x007fc3bf12db00\n id: 1,\n email: \"hoge@bar.com\",\n encrypted_password: \"$2a$10$eb3QQ0W4.GKzWdRzidCYeOE63qIPxoY1IxH6XVeAlPI7TJi3SkJJa\",\n reset_password_token: nil,\n reset_password_sent_at: nil,\n remember_created_at: nil,\n sign_in_count: 1,\n current_sign_in_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n last_sign_in_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n current_sign_in_ip: \"127.0.0.1\",\n last_sign_in_ip: \"127.0.0.1\",\n created_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n updated_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n uid: \"1\",\n provider: \"mock\",\n name: \"fuga\",\n token: \"1021048dce5544e2ec0a459d6cf97527dd2e0f96d6f57d1c59bb7efba3dbfa89\",\n raw: \"{\\\"raw_info\\\":{\\\"id\\\":1,\\\"email\\\":\\\"hoge@bar.com\\\",\\\"created_at\\\":\\\"2015-07-26T08:03:33.005Z\\\",\\\"updated_at\\\":\\\"2015-07-26T08:09:37.576Z\\\",\\\"uid\\\":\\\"1\\\",\\\"name\\\":\\\"fuga\\\",\\\"admin\\\":true}}\">\n\n\n4.\u304a\u308f\u308a\u306b\n\u3053\u308c\u3067provider\u3068client\u5468\u308a\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0a\u3067\u3059\uff0e\n\u3061\u3087\u3053\u3061\u3087\u3053\u3068\u4fee\u6b63\u3057\u306a\u304c\u3089\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\uff0c\ntypo\uff0c\u52d5\u304b\u306a\u3044\uff0c\u3082\u3063\u3068\u826f\u3044\u66f8\u304d\u65b9\u304c\u3042\u308b\u3088\u306a\u3069\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306b\u304a\u9858\u3044\u3057\u307e\u3059\uff0e\n# 1. \u306f\u3058\u3081\u306b\n\n\u6700\u8fd1\u30a2\u30ab\u30a6\u30f3\u30c8\u60c5\u5831\u3092\u96c6\u7d50\u3055\u305b\u305fprovider\u3068\uff0c\n\u305d\u306e\u60c5\u5831\u3092\u3061\u3087\u3053\u3061\u3087\u3053\u3068\u4f7f\u3046client\u306e\u4e21\u65b9\u3092\u4f5c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u307e\u3068\u3081\u3066\u307f\u308b\uff0e\n\n\u4eca\u56de\uff0c\u4f55\u3092\u307e\u3068\u3081\u305f\u60c5\u5831\u304b\u3092\u7c21\u6f54\u306b\u793a\u3059\u3068\uff0c\ntwitter\u9023\u643a\u306e\u3088\u3046\u306b\u5225\u306e\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u5f15\u3063\u5f35\u308b\u6a5f\u69cb\u3092\u4f5c\u308a\u307e\u3059\uff0e\ntwitter(provider)\u3068\u305d\u308c\u3092\u4f7f\u3046app(client)\u306e\u8a2d\u5b9a\u3092\u307e\u3068\u3081\u3066\u3044\u307e\u3059\uff0e\n\n\u7d50\u69cb\u9577\u304f\u306a\u308b\u306e\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u6700\u5c0f\u69cb\u6210\u3067\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\uff0e\n\n# 2. provider\n\n\u5fc5\u8981\u306agem\n\n```rb\ngem 'devise'\ngem 'doorkeeper'\n```\n\n\u305d\u308c\u305e\u308c\u306e\u5f79\u5272\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n- devise\n    - provider\u306e\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4f5c\u308b\u305f\u3081\u306b\u5229\u7528\n- doorkeeper\n    - omniauth\u306eprovider\u306b\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\n\n\u307e\u305a\u306fdevise\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\uff0e\n\n```\nrails g devise:install\nrails g devise User\nrake db:migrate\n```\n\n\u4e00\u822c\u7684\u306bomniauth\u306eprovider\u306b\u3042\u308b\u60c5\u5831\u3092\u9069\u5f53\u306b\u30e6\u30fc\u30b6\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0cdoorkeeper\u306e\u7ba1\u7406\u30da\u30fc\u30b8\u3092\u7ba1\u7406\u8005\u5236\u9650\u3092\u66f8\u3051\u305f\u307b\u3046\u304c\u826f\u3044\u304b\u3068\u601d\u3046\u306e\u3067admin\u30ab\u30e9\u30e0\u3082\u6301\u305f\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\n\n```\nrails g migration AddOmniauthToUser uid name admin:boolean\nrake db:migrate\n```\n\n\u4eca\u56de\u306fUser\u306eid\u3092\u305d\u306e\u307e\u307euid\u306b\u6e21\u3059\u5f62\u306b\u3059\u308b\u305f\u3081\uff0c\u4ee5\u4e0b\u3092\u8ffd\u52a0\uff0e\nprovider\u306a\u306e\u3067omniauthable\u306f\u4ed8\u3051\u308b\u5fc5\u8981\u306f\u306a\u3057\uff0e\n\n```app/models/user.rb\nclass User < ActiveRecord::Base\n  # Include default devise modules. Others available are:\n  # :confirmable, :lockable, :timeoutable and :omniauthable\n  devise :database_authenticatable, :registerable,\n         :recoverable, :rememberable, :trackable, :validatable\n  after_create :update_uid!\n\n  def update_uid!\n    update(uid: id)\n  end\nend\n```\n\n\u6b21\u306bdoorkeeper\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\n\u307e\u305a\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb&\u30c6\u30fc\u30d6\u30eb\u4f5c\u6210\uff0e\n\n```\nrails g doorkeeper:install\nrails g doorkeeper:migration\nrake db:migrate\n```\n\n\u6b21\u306b\uff0cdoorkeeper\u306e\u8a2d\u5b9a\u3092\u5f04\u308a\u307e\u3059\uff0e\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3057\u3066\u3044\u304f\u5f62\uff0e\n\n```config/initializers/doorkeeper.rb\n  # \u65e2\u306bprovider\u30ed\u30b0\u30a4\u30f3\u6e08\u306a\u3089\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u3092\u8fd4\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306f\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\n  resource_owner_authenticator do\n    session[:return_to] = request.fullpath\n    current_user || redirect_to(new_user_session_url)\n  end \n\n  # \u7ba1\u7406\u8005\u6a29\u9650\u4ee5\u5916\u306e\u30e6\u30fc\u30b6\u304cdoorkeeper\u7ba1\u7406\u30da\u30fc\u30b8\u306b\u6765\u305f\u3089\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\n  admin_authenticator do\n    current_user.try(:admin) || redirect_to(new_user_session_url)\n  end\n\n  # \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u671f\u9650\u306f\u3068\u308a\u3042\u3048\u305a1\u30f6\u6708\n  access_token_expires_in 1.months\n\n  # SSL\u3067\u306a\u304f\u3066\u3082\u52d5\u4f5c\u3055\u305b\u308b\n  force_ssl_in_redirect_uri false\n```\n\n\u7d9a\u3044\u3067\u30e6\u30fc\u30b6\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u308a\u307e\u3059\uff0e\n\u4eca\u56de\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u76f4\u63a5\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\n```rb\nUser.create(email: 'hoge@bar.com', password: 'hogehoge', name: 'fuga', admin: true)\n```\n\n\u3053\u3053\u307e\u3067\u6765\u305f\u3089\uff0c\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\u3055\u305b\uff0c\nhttp://localhost:3000/oauth/applications\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3057\u3087\u3046\uff0e\n\n\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u98db\u3070\u3055\u308c\u308b\u306e\u3067\uff0c\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u518d\u5ea6\u30a2\u30af\u30bb\u30b9\u3057\u3066\u4e0b\u3055\u3044\uff0e\n\u7d9a\u3044\u3066\uff0cNew Application\u3092\u9078\u629e\u3057\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5165\u529b\u3057\u3066submit\u3057\u307e\u3059\uff0e\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-26 16.52.40.png](https://qiita-image-store.s3.amazonaws.com/0/61416/a07c2e3f-af08-5165-2d3a-29e3e262805c.png)\n\n\u305d\u3046\u3059\u308b\u3068\uff0cApplication Id\u3068Secret\u304c\u767a\u884c\u3055\u308c\u307e\u3059\uff0e\n\u4ee5\u964d\u306eclient\u7de8\u3067\u306f\u3053\u306e2\u3064\u3092\u7528\u3044\u307e\u3059\uff0e\n\n\u6700\u5f8c\u306b\u30e6\u30fc\u30b6\u60c5\u5831\u306e\u5f97\u308b\u305f\u3081\u306eAPI\u3092\u4f5c\u308a\u307e\u3057\u3087\u3046\uff0e\n\u307e\u305a\u306fAPI\u7528\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u4f5c\u308a\u307e\u3059\uff0e\n\n```\nrails g controller api/v1/api\nrails g controller api/v1/users\n```\n\n\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\n\n```app/controllers/api/v1/api_controller.rb\nclass Api::V1::ApiController < ApplicationController\n  private\n  def current_resource_owner\n    User.find(doorkeeper_token.resource_owner_id) if doorkeeper_token\n  end \nend\n```\n\n```app/contollers/api/v1/users_controller.rb\nclass Api::V1::UsersController < Api::V1::ApiController\n  before_action :doorkeeper_authorize!\n  respond_to :json\n\n  def me\n    respond_with current_resource_owner\n  end \nend\n```\n\n\u6b21\u306b\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u51e6\u7406\u3067\u3059\uff0e\n\n```\nrails g controller users/sessions\n```\n\nsession\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u60c5\u5831\u304c\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u305d\u3061\u3089\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```app/controllers/users/session.rb\nclass Users::SessionsController < Devise::SessionsController\n  def create\n    self.resource = warden.authenticate!(auth_options)\n    set_flash_message(:notice, :signed_in) if is_flashing_format?\n    sign_in(resource_name, resource)\n    yield resource if block_given?\n    if session[:return_to]\n      redirect_to session[:return_to]\n      session[:return_to] = nil \n    else\n      respond_with resource, location: after_sign_in_path_for(resource)\n    end \n  end \nend\n```\n\n\u6700\u5f8c\u306bAPI\u3068session\u306eroutes\u3092\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\uff0e\n\n```config/routes.rb\nRails.application.routes.draw do\n  use_doorkeeper\n  devise_for :users, controllers: {\n    sessions: 'users/sessions'\n  }\n  namespace :api do\n    namespace :v1 do\n      get '/me' => 'users#me'\n    end \n  end\nend\n```\n\n\u3053\u308c\u3067provider\u5074\u306e\u8a2d\u5b9a\u306f\u5168\u3066\u7d42\u4e86\u3067\u3059\uff0e\n\n# 3. client\n\n\u7d9a\u3044\u3066client\u5074\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\nprovider\u306flocalhost:3000, client\u306flocalhost:3001\u3067\u52d5\u304b\u3059\u524d\u63d0\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\u73fe\u6bb5\u968e\u306eclient\u5074\u3067\u5fc5\u8981\u306agem\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n```rb\ngem 'devise'\ngem 'omniauth'\ngem 'omniauth-oauth2'\n```\n\n\u5148\u307b\u3069\u540c\u69d8\u306bdevise\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\n\n```\nrails g devise:install\nrails g devise User\nrake db:migrate\n```\n\nomniauth\u3067\u5f97\u3089\u308c\u308b\u60c5\u5831\u3092\u683c\u7d0d\u3059\u308b\u30ab\u30e9\u30e0\u3092\u4f5c\u308a\u307e\u3059\uff0e\n\n```\nrails g migration AddOmniauthToUser uid provider name token raw:text\nrake db:migrate\n```\n\n\u7d9a\u3044\u3066\u81ea\u5206\u7528\u306bomniauth\u306estrategies\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\n```lib/omniauth/strategies/mock.rb\nmodule OmniAuth\n  module Strategies\n    class Mock < OmniAuth::Strategies::OAuth2\n      RAW_INFO_URL = 'api/v1/me'\n\n      uid { raw_info['uid'] }\n\n      info do\n        {\n          email: raw_info['email'],\n          name: raw_info['name']\n        }\n      end\n\n      extra do\n        { raw_info: raw_info }\n      end\n\n      def raw_info\n        @raw_info ||= JSON.parse(access_token.get(RAW_INFO_URL).response.body)\n      end\n    end\n  end\nend\n```\n\n\u305d\u3057\u3066devise\u306e\u8a2d\u5b9a\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\uff0e\nAPP_ID\u3068APP_SECRET\u306f\u5148\u307b\u3069provider\u3067\u767a\u884c\u3057\u305f\u3082\u306e\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n```config/initializers/devise.rb\nrequire File.expand_path('../../../lib/omniauth/strategies/mock', __FILE__)\nDevise.setup do |config|\n  config.omniauth :mock, 'APP_ID', 'APP_SECRET', client_options: { site: 'http://localhost:3000' }\nend\n```\n\n\u6b21\u306bomniauth\u306ecallback\u5148\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e\n\n```\nrails g controller users/omniauth_callbacks\n```\n\n```app/controllers/users/omniauth_callbacks_controller.rb\nclass Users::OmniauthCallbacksController < Devise::OmniauthCallbacksController\n  def mock\n    @user = User.find_for_mock(request.env['omniauth.auth'])\n\n    if @user.persisted?\n      flash[:notice] = I18n.t 'devise.omniauth_callbacks.success', kind: 'mock'\n      sign_in_and_redirect @user, event: :authentication\n    else\n      session['devise.mock_data'] = request.env['omniauth.auth']\n      redirect_to new_user_session_url, alert: @user.errors\n    end \n  end \nend\n```\n\n\u6700\u5f8c\u306bUser\u30e2\u30c7\u30eb\u306e\u8a2d\u5b9a\u3067\u3059\uff0e\n\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092User\u30e2\u30c7\u30eb\u306b\u8ffd\u52a0\u3057\u307e\u3059\uff0e\n\n```app/models/user.rb\n  def self.find_for_mock(auth)\n    parameters = { \n      name:     auth.info.name,\n      email:    auth.info.email,\n      provider: auth.provider,\n      uid:      auth.uid,\n      token:    auth.credentials.token,\n      password: Devise.friendly_token[0, 20],\n      raw: auth.extra.to_json\n    }   \n    user = User.find_by(uid: auth.uid)\n    return update_mock!(user, parameters) if user\n\n    User.create(parameters)\n  end \n\n  def self.update_mock!(user, parameters)\n    user.update(parameters)\n    user\n  end \n```\n\n\u3053\u308c\u3067\u5168\u3066\u306e\u6e96\u5099\u306f\u6574\u3063\u305f\u306e\u3067client\u5074\u306e\u30b5\u30fc\u30d0\u3082\u7acb\u3061\u4e0a\u3052\uff0c\nhttp://localhost:3001/users/sign_in\n\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\uff0c\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-26 16.51.59.png](https://qiita-image-store.s3.amazonaws.com/0/61416/80352a9c-0a11-699b-1e74-ce0743c11797.png)\n\n\u4e00\u756a\u4e0b\u306bSign in with Mock\u3068\u3044\u3046\u306e\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u305d\u308c\u3092\u9078\u629e\u3057\uff0c\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-07-26 16.52.57.png](https://qiita-image-store.s3.amazonaws.com/0/61416/b834b723-1c5f-b7de-9309-83bb3ca381b2.png)\n\nAuthorize\u3092\u9078\u629e\u3059\u308b\u3068\u30b5\u30fc\u30d0\u5074\u306e\u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u98db\u3073\u307e\u3059(\u753b\u9762\u304c\u5168\u304f\u540c\u3058\u306a\u306e\u3067\u6c17\u3065\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u304c)\uff0e\n\n\u3053\u3053\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u3068client\u5074\u306e\u30b5\u30fc\u30d0\u3078\u3068\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u3066\u304a\u308a\uff0c\nUser\u30e2\u30c7\u30eb\u306b\u3053\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30c7\u30fc\u30bf\u304c\u3067\u304d\u3066\u3044\u308b\u306f\u305a\u3067\u3059\uff0e\n\n```rb\n #<User:0x007fc3bf12db00\n id: 1,\n email: \"hoge@bar.com\",\n encrypted_password: \"$2a$10$eb3QQ0W4.GKzWdRzidCYeOE63qIPxoY1IxH6XVeAlPI7TJi3SkJJa\",\n reset_password_token: nil,\n reset_password_sent_at: nil,\n remember_created_at: nil,\n sign_in_count: 1,\n current_sign_in_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n last_sign_in_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n current_sign_in_ip: \"127.0.0.1\",\n last_sign_in_ip: \"127.0.0.1\",\n created_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n updated_at: Sun, 26 Jul 2015 08:16:37 UTC +00:00,\n uid: \"1\",\n provider: \"mock\",\n name: \"fuga\",\n token: \"1021048dce5544e2ec0a459d6cf97527dd2e0f96d6f57d1c59bb7efba3dbfa89\",\n raw: \"{\\\"raw_info\\\":{\\\"id\\\":1,\\\"email\\\":\\\"hoge@bar.com\\\",\\\"created_at\\\":\\\"2015-07-26T08:03:33.005Z\\\",\\\"updated_at\\\":\\\"2015-07-26T08:09:37.576Z\\\",\\\"uid\\\":\\\"1\\\",\\\"name\\\":\\\"fuga\\\",\\\"admin\\\":true}}\">\n```\n\n# 4.\u304a\u308f\u308a\u306b\n\n\u3053\u308c\u3067provider\u3068client\u5468\u308a\u306e\u8a2d\u5b9a\u306f\u4ee5\u4e0a\u3067\u3059\uff0e\n\n\u3061\u3087\u3053\u3061\u3087\u3053\u3068\u4fee\u6b63\u3057\u306a\u304c\u3089\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\uff0c\ntypo\uff0c\u52d5\u304b\u306a\u3044\uff0c\u3082\u3063\u3068\u826f\u3044\u66f8\u304d\u65b9\u304c\u3042\u308b\u3088\u306a\u3069\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306b\u304a\u9858\u3044\u3057\u307e\u3059\uff0e\n", "tags": ["Rails", "OmniAuth"]}