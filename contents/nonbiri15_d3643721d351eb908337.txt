{"context": " More than 1 year has passed since last update.Python\u3092\u62e1\u5f35\u3059\u308bCython\u306f\u3001Python\u30d9\u30fc\u30b9\u306e\u578b\u4ed8\u3051\u3067\u306e\u6700\u9069\u5316\u3060\u3051\u3067\u306f\u306a\u304f\u3001\nC/C++\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306bwrap\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nscikit-image\u306f\u305d\u306e\u4e21\u65b9\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bPython\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\n\u4eca\u56de\u306f\u3001C/C++\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306bwrap\u3059\u308b\u69d8\u5b50\u3092\u773a\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\u307e\u3059\u306fpxd\u30d5\u30a1\u30a4\u30eb\u306b\u7740\u76ee\u3057\u3066\u307f\u308b\u3002\nC/C++\u8a00\u8a9e\u3092Cython\u3067wrap\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001pxd\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u305a\u3042\u308b\u3002\n\u3057\u304b\u3057\u3001pxd\u30d5\u30a1\u30a4\u30eb\u306fpyx\u30d5\u30a1\u30a4\u30eb\u306e\u3046\u3061\u5ba3\u8a00\u90e8\u5206\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e\u3088\u3046\u3067\u5fc5\u305a\u3057\u3082\u5916\u90e8C\u30b3\u30fc\u30c9\u3092wrap\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f\u95a2\u4fc2\u304c\u306a\u3044\u3002\n\nCython\u306b\u304a\u3051\u308b\u5ba3\u8a00\u90e8\u5206\u306e\u30b3\u30fc\u30c9(\u62e1\u5f35\u5b50 .pxd)\n\n./skimage/filters/rank/core_cy.pxd\n./skimage/graph/heap.pxd\n./skimage/graph/mcp.pxd\n./skimage/measure/_ccomp.pxd\n./skimage/_shared/geometry.pxd\n./skimage/shared/interpolation.pxd\n./skimage/_shared/transform.pxd\n\n_ccomp.pxd\n\"\"\"Export fast union find in Cython\"\"\"\ncimport numpy as cnp\n\nDTYPE = cnp.intp\nctypedef cnp.intp_t DTYPE_t\n\ncdef DTYPE_t find_root(DTYPE_t *forest, DTYPE_t n) nogil\ncdef void set_root(DTYPE_t *forest, DTYPE_t n, DTYPE_t root) nogil\ncdef void join_trees(DTYPE_t *forest, DTYPE_t n, DTYPE_t m) nogil\n\n\n\u300ccimport \u306f\u3001\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3084\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u3001\u4ed6\u306e\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u4e2d\u3067\u5ba3\u8a00\u3057\u305f\u540d\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\u300d\npxd\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u3001\u5bfe\u5fdc\u3059\u308bpyx\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3002\n\uff08pxd\u30d5\u30a1\u30a4\u30eb\u3001pyx\u30d5\u30a1\u30a4\u30eb\u306fC/C++\u306ewrap\u3067\u306a\u304f\u3066\u3082\u3042\u308b\u3002\uff09\n./skimage/filters/rank/core_cy.pyx\n./skimage/graph/_mcp.pyx\n./skimage/graph/heap.pyx\n./skimage/measure/_ccomp.pyx\n./skimage/_shared/geometry.pyx\n./skimage/_shared/transform.pyx\n\n_ccomp.pyx\n#cython: cdivision=True\n#cython: boundscheck=False\n#cython: nonecheck=False\n#cython: wraparound=False\n\nimport numpy as np\nimport warnings\n\ncimport numpy as cnp\n\n\"\"\"\nSee also:\n\n  Christophe Fiorio and Jens Gustedt,\n  \"Two linear time Union-Find strategies for image processing\",\n  Theoretical Computer Science 154 (1996), pp. 165-181.\n\n  Kensheng Wu, Ekow Otoo and Arie Shoshani,\n  \"Optimizing connected component labeling algorithms\",\n  Paper LBNL-56864, 2005,\n  Lawrence Berkeley National Laboratory\n  (University of California),\n  http://repositories.cdlib.org/lbnl/LBNL-56864\n\n\"\"\"\n\nDTYPE = np.intp\n\n# Short int - could be more graceful to the CPU cache\nctypedef cnp.int32_t INTS_t\n\ncdef struct s_shpinfo\n\nctypedef s_shpinfo shape_info\nctypedef int (* fun_ravel)(int, int, int, shape_info *)\n\n\n# For having stuff concerning background in one place\nctypedef struct bginfo:\n    ## The value in the image (i.e. not the label!) that identifies\n    ## the background.\n    DTYPE_t background_val\n    DTYPE_t background_node\n    ## Identification of the background in the labelled image\n    DTYPE_t background_label\n\n\ncdef void get_bginfo(background_val, bginfo *ret) except *:\n    if background_val is None:\n        warnings.warn(DeprecationWarning(\n                'The default value for `background` will change to 0 in v0.12'\n            ))\n        ret.background_val = -1\n    else:\n        ret.background_val = background_val\n\n    # The node -999 doesn't exist, it will get subsituted by a meaningful value\n    # upon the first background pixel occurence\n    ret.background_node = -999\n    ret.background_label = -1\n\n(\u5f8c\u7565)\n\n\nC/C++\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\n\u4ee5\u4e0b\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n./skimage/external/tifffile/tifffile.c\n./skimage/restoration/unwrap_2d_ljmu.c\n./skimage/restoration/unwrap_3d_ljmu.c\n./skimage/shared/vectorizedops.h\n\u3053\u308c\u3089\u306eC\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3093\u3067\u3044\u308bsetup.py \u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3057\u305f\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001C\u8a00\u8a9e\u306e\u95a2\u6570\u3092wrap\u3057\u305f\u3082\u306e\u3067\u306f\u306a\u304f\u3001pyx\u30d5\u30a1\u30a4\u30eb\u304b\u3089cython\u306b\u3088\u3063\u3066\u751f\u3058\u305fC\u8a00\u8a9e\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3088\u3046\u3067\u3059\u3002\n> egrep (tifffile.c|unwrap_[23]d_ljmu.c) ./check_bento_build.py \n./skimage/external/setup.py:                         sources=['tifffile/tifffile.c'],\n./skimage/restoration/setup.py:    unwrap_sources_2d = ['unwrap_2d.c', 'unwrap_2d_ljmu.c']\n./skimage/restoration/setup.py:    unwrapsources_3d = ['unwrap_3d.c', 'unwrap3d_ljmu.c']\n\u307e\u305f\u3001\u5916\u90e8\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u578b\u5b9a\u7fa9\u3092\u53c2\u7167\u3059\u308b\u69cb\u6587\u3068\u3057\u3066cdef extern\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u4e2d\u3067\u3001../_shared/vectorized_ops.h\u304ccython\u3067wrap\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n$ grep 'cdef extern' find . -name '*.py*' -print\n./skimage/feature/texture.pyx:cdef extern from \"numpy/npy_math.h\":\n./skimage/filters/_ctmf.pyx:cdef extern from \"../_shared/vectorized_ops.h\":\n./skimage/graph/heap.pyx:cdef extern from \"pyport.h\":\n./skimage/restoration/unwrap_2d.pyx:cdef extern from *:\n./skimage/restoration/_unwrap_3d.pyx:cdef extern from *:\n\n\u307e\u3068\u3081\uff1a\n\n\u30fbcython\u3092\u5b9f\u884c\u3059\u308b\u524d\u306eC/C++\u8a00\u8a9e\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3060\u3051\u304c\u3001cython\u3067C/C++\u8a00\u8a9e\u3092wrap\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3088\u3046\u3060\u3002\n\u30fbpyx\u30d5\u30a1\u30a4\u30eb\u3092cython\u3067\u5b9f\u884c\u3059\u308b\u3068.c\u306e\u62e1\u5f35\u5b50\u3092\u6301\u3064\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u308b\u306e\u3067\u3001setup.py\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b*.c\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3089\u3068\u3044\u3063\u3066C/C++\u8a00\u8a9e\u3067wrap\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n\u30fbcimport\u306fC/C++\u8a00\u8a9e\u4e2d\u306e\u5ba3\u8a00\u3092cython\u4e2d\u3067\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\u3082\u306e\u3067\u3042\u3063\u3066\u3001C/C++\u8a00\u8a9e\u306ewrap\u3060\u3051\u306b\u56fa\u6709\u306e\u6a5f\u80fd\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n(\u65e9\u304fcython\u3092\u4f7f\u3063\u3066\u3001\u81ea\u4f5c\u306ewrap\u3092\u884c\u3044\u305f\u3044\u3082\u306e\u3067\u3059\u3002)\n\n\u53c2\u8003\u60c5\u5831\n\nCython \u30e2\u30b8\u30e5\u30fc\u30eb\u9593\u3067\u5ba3\u8a00\u3092\u5171\u6709\u3059\u308b\n\u300cCython\u2015\u2015C\u3068\u306e\u878d\u5408\u306b\u3088\u308bPython\u306e\u9ad8\u901f\u5316\u300d\n10\u7ae0\u3000Cython\u3001Numpy\u3001\u578b\u4ed8\u304d\u30e1\u30e2\u30ea\u30d3\u30e5\u30fc\nPython\u3092\u62e1\u5f35\u3059\u308bCython\u306f\u3001Python\u30d9\u30fc\u30b9\u306e\u578b\u4ed8\u3051\u3067\u306e\u6700\u9069\u5316\u3060\u3051\u3067\u306f\u306a\u304f\u3001\nC/C++\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306bwrap\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\nscikit-image\u306f\u305d\u306e\u4e21\u65b9\u3092\u7528\u3044\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308bPython\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\n\n\u4eca\u56de\u306f\u3001C/C++\u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Python\u304b\u3089\u4f7f\u3048\u308b\u3088\u3046\u306bwrap\u3059\u308b\u69d8\u5b50\u3092\u773a\u3081\u3066\u307f\u3088\u3046\u3068\u601d\u3046\u3002\u307e\u3059\u306fpxd\u30d5\u30a1\u30a4\u30eb\u306b\u7740\u76ee\u3057\u3066\u307f\u308b\u3002\n\nC/C++\u8a00\u8a9e\u3092Cython\u3067wrap\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001pxd\u30d5\u30a1\u30a4\u30eb\u304c\u5fc5\u305a\u3042\u308b\u3002\n\u3057\u304b\u3057\u3001pxd\u30d5\u30a1\u30a4\u30eb\u306fpyx\u30d5\u30a1\u30a4\u30eb\u306e\u3046\u3061\u5ba3\u8a00\u90e8\u5206\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e\u3088\u3046\u3067\u5fc5\u305a\u3057\u3082\u5916\u90e8C\u30b3\u30fc\u30c9\u3092wrap\u3057\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u306f\u95a2\u4fc2\u304c\u306a\u3044\u3002\n\n###**Cython\u306b\u304a\u3051\u308b\u5ba3\u8a00\u90e8\u5206\u306e\u30b3\u30fc\u30c9(\u62e1\u5f35\u5b50 .pxd)**\n\n./skimage/filters/rank/core_cy.pxd\n./skimage/graph/heap.pxd\n./skimage/graph/_mcp.pxd\n./skimage/measure/_ccomp.pxd\n./skimage/_shared/geometry.pxd\n./skimage/_shared/interpolation.pxd\n./skimage/_shared/transform.pxd\n\n\n```py:_ccomp.pxd\n\"\"\"Export fast union find in Cython\"\"\"\ncimport numpy as cnp\n\nDTYPE = cnp.intp\nctypedef cnp.intp_t DTYPE_t\n\ncdef DTYPE_t find_root(DTYPE_t *forest, DTYPE_t n) nogil\ncdef void set_root(DTYPE_t *forest, DTYPE_t n, DTYPE_t root) nogil\ncdef void join_trees(DTYPE_t *forest, DTYPE_t n, DTYPE_t m) nogil\n```\n\n\u300ccimport \u306f\u3001\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u3084\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u3067\u3001\u4ed6\u306e\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u4e2d\u3067\u5ba3\u8a00\u3057\u305f\u540d\u524d\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\u300d\n\n\n\npxd\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u3001\u5bfe\u5fdc\u3059\u308bpyx\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3002\n\uff08pxd\u30d5\u30a1\u30a4\u30eb\u3001pyx\u30d5\u30a1\u30a4\u30eb\u306fC/C++\u306ewrap\u3067\u306a\u304f\u3066\u3082\u3042\u308b\u3002\uff09\n./skimage/filters/rank/core\\_cy.pyx\n./skimage/graph/\\_mcp.pyx\n./skimage/graph/heap.pyx\n./skimage/measure/\\_ccomp.pyx\n./skimage/\\_shared/geometry.pyx\n./skimage/\\_shared/transform.pyx\n\n\n```py:_ccomp.pyx\n#cython: cdivision=True\n#cython: boundscheck=False\n#cython: nonecheck=False\n#cython: wraparound=False\n\nimport numpy as np\nimport warnings\n\ncimport numpy as cnp\n\n\"\"\"\nSee also:\n\n  Christophe Fiorio and Jens Gustedt,\n  \"Two linear time Union-Find strategies for image processing\",\n  Theoretical Computer Science 154 (1996), pp. 165-181.\n\n  Kensheng Wu, Ekow Otoo and Arie Shoshani,\n  \"Optimizing connected component labeling algorithms\",\n  Paper LBNL-56864, 2005,\n  Lawrence Berkeley National Laboratory\n  (University of California),\n  http://repositories.cdlib.org/lbnl/LBNL-56864\n\n\"\"\"\n\nDTYPE = np.intp\n\n# Short int - could be more graceful to the CPU cache\nctypedef cnp.int32_t INTS_t\n\ncdef struct s_shpinfo\n\nctypedef s_shpinfo shape_info\nctypedef int (* fun_ravel)(int, int, int, shape_info *)\n\n\n# For having stuff concerning background in one place\nctypedef struct bginfo:\n    ## The value in the image (i.e. not the label!) that identifies\n    ## the background.\n    DTYPE_t background_val\n    DTYPE_t background_node\n    ## Identification of the background in the labelled image\n    DTYPE_t background_label\n\n\ncdef void get_bginfo(background_val, bginfo *ret) except *:\n    if background_val is None:\n        warnings.warn(DeprecationWarning(\n                'The default value for `background` will change to 0 in v0.12'\n            ))\n        ret.background_val = -1\n    else:\n        ret.background_val = background_val\n\n    # The node -999 doesn't exist, it will get subsituted by a meaningful value\n    # upon the first background pixel occurence\n    ret.background_node = -999\n    ret.background_label = -1\n\n(\u5f8c\u7565)\n```\n\n\nC/C++\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\n\u4ee5\u4e0b\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n./skimage/external/tifffile/tifffile.c\n./skimage/restoration/unwrap_2d_ljmu.c\n./skimage/restoration/unwrap_3d_ljmu.c\n./skimage/_shared/vectorized_ops.h\n\n\n\u3053\u308c\u3089\u306eC\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u542b\u3093\u3067\u3044\u308bsetup.py \u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3057\u305f\u3002\n\u305d\u308c\u4ee5\u5916\u306e\u30d5\u30a1\u30a4\u30eb\u306f\u3001C\u8a00\u8a9e\u306e\u95a2\u6570\u3092wrap\u3057\u305f\u3082\u306e\u3067\u306f\u306a\u304f\u3001pyx\u30d5\u30a1\u30a4\u30eb\u304b\u3089cython\u306b\u3088\u3063\u3066\u751f\u3058\u305fC\u8a00\u8a9e\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u3088\u3046\u3067\u3059\u3002\n\n\\> egrep (tifffile.c|unwrap_[23]d_ljmu.c) ./check_bento_build.py \n./skimage/external/setup.py:                         sources=['tifffile/tifffile.c'],\n./skimage/restoration/setup.py:    unwrap_sources_2d = ['_unwrap_2d.c', 'unwrap_2d_ljmu.c']\n./skimage/restoration/setup.py:    unwrap_sources_3d = ['_unwrap_3d.c', 'unwrap_3d_ljmu.c']\n\n\u307e\u305f\u3001\u5916\u90e8\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u578b\u5b9a\u7fa9\u3092\u53c2\u7167\u3059\u308b\u69cb\u6587\u3068\u3057\u3066cdef extern\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u4e2d\u3067\u3001../_shared/vectorized_ops.h\u304ccython\u3067wrap\u3059\u308b\u306e\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n$ grep 'cdef extern' `find . -name '*.py*' -print`\n./skimage/feature/_texture.pyx:cdef extern from \"numpy/npy_math.h\":\n./skimage/filters/_ctmf.pyx:cdef extern from \"../_shared/vectorized_ops.h\":\n./skimage/graph/heap.pyx:cdef extern from \"pyport.h\":\n./skimage/restoration/_unwrap_2d.pyx:cdef extern from *:\n./skimage/restoration/_unwrap_3d.pyx:cdef extern from *:\n\n###**\u307e\u3068\u3081\uff1a**\n\u30fbcython\u3092\u5b9f\u884c\u3059\u308b\u524d\u306eC/C++\u8a00\u8a9e\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u5834\u5408\u3060\u3051\u304c\u3001cython\u3067C/C++\u8a00\u8a9e\u3092wrap\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3088\u3046\u3060\u3002\n\u30fbpyx\u30d5\u30a1\u30a4\u30eb\u3092cython\u3067\u5b9f\u884c\u3059\u308b\u3068.c\u306e\u62e1\u5f35\u5b50\u3092\u6301\u3064\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u308b\u306e\u3067\u3001setup.py\u30d5\u30a1\u30a4\u30eb\u4e2d\u306b*.c\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u304b\u3089\u3068\u3044\u3063\u3066C/C++\u8a00\u8a9e\u3067wrap\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n\u30fbcimport\u306fC/C++\u8a00\u8a9e\u4e2d\u306e\u5ba3\u8a00\u3092cython\u4e2d\u3067\u5229\u7528\u53ef\u80fd\u306b\u3059\u308b\u3082\u306e\u3067\u3042\u3063\u3066\u3001C/C++\u8a00\u8a9e\u306ewrap\u3060\u3051\u306b\u56fa\u6709\u306e\u6a5f\u80fd\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n\n(\u65e9\u304fcython\u3092\u4f7f\u3063\u3066\u3001\u81ea\u4f5c\u306ewrap\u3092\u884c\u3044\u305f\u3044\u3082\u306e\u3067\u3059\u3002)\n\n###**\u53c2\u8003\u60c5\u5831**\n[Cython \u30e2\u30b8\u30e5\u30fc\u30eb\u9593\u3067\u5ba3\u8a00\u3092\u5171\u6709\u3059\u308b](\nhttp://omake.accense.com/static/doc-ja/cython/src/userguide/sharing_declarations.html)\n\n\n[\u300cCython\u2015\u2015C\u3068\u306e\u878d\u5408\u306b\u3088\u308bPython\u306e\u9ad8\u901f\u5316\u300d]\n(http://www.oreilly.co.jp/books/9784873117270/)\n10\u7ae0\u3000Cython\u3001Numpy\u3001\u578b\u4ed8\u304d\u30e1\u30e2\u30ea\u30d3\u30e5\u30fc\n", "tags": ["Python", "Cython", "scikit-image"]}