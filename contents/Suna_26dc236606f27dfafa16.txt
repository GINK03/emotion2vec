{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\n\nMQTT \u3068\u306f\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u7b49\u3067\u78ba\u8a8d\u3057\u3066\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306a\u8aac\u660e\u3068\u3057\u3066\u306f Pub/Sub \u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u8efd\u91cf\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002IoT, WoT \u3067\u7e4b\u304c\u308b\u3088\u3046\u306a\u975e\u529b\u306a\u30c7\u30d0\u30a4\u30b9\u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8272\u3005\u3068\u4f4e\u30b3\u30b9\u30c8\u3067\u306e\u51e6\u7406\u304c\u53ef\u80fd\u3067\u3059\u3002\n\nMQTT\nMQTT\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\n\n\nPepper \u541b\u3067\u3082\u4f7f\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u3001\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nMQTT \u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\n\nMQTT Publisher \u30dc\u30c3\u30af\u30b9\nMQTT \u306e Python \u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nPaho - Open Source messaging for M2M\n\n\u307e\u3059\u306f Python \u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u308a\u3001\u5165\u529b\u306e Type \u3092\u300c\u30d0\u30f3\u300d\u304b\u3089\u300c\u6587\u5b57\u5217\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\n\u8a2d\u5b9a\u9805\u76ee\n\u8a2d\u5b9a\u9805\u76ee\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\nMQTT \u306e\u30d6\u30ed\u30fc\u30ab\u306e\u30db\u30b9\u30c8\u3001\u30dd\u30fc\u30c8\u3001KeepAlive \u5024\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3001QOS \u5024\u3001Retain \u5024\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\nPython \u30b3\u30fc\u30c9\n\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001MQTT \u30d6\u30ed\u30fc\u30ab\u306b\u63a5\u7d9a\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\u30dc\u30c3\u30af\u30b9\u5185\u3067\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u7528\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\nPepper\u7528Tweet\u30dc\u30c3\u30af\u30b9\u3092\u3064\u304f\u308b\n\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n\n    def onUnload(self):\n        import sys\n\n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, payload):\n        import sys, os\n\n        self.folderName = os.path.join(\n            self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n\n        import paho.mqtt.client as paho\n\n        host       = self.getParameter(\"Broker Host\")\n        port       = self.getParameter(\"Broker Port\")\n        keep_alive = self.getParameter(\"KeepAlive\")\n        topic      = self.getParameter(\"Topic\")\n        qos        = self.getParameter(\"Qos\") \n        retain     = self.getParameter(\"Retain\")\n\n        mqttc = paho.Client()\n        mqttc.connect(host, port, keep_alive)\n        mqttc.publish(topic, payload, qos, retain)\n\n    def onInput_onStop(self):\n        self.onUnload()\n        self.onStopped()\n\n\nChoregraphe \u3067\u63a5\u7d9a\n\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u300cText Edit\u300d\u30dc\u30c3\u30af\u30b9\u3068\u3001\u4f5c\u6210\u3057\u305f\u300cMQTT\u300d\u30dc\u30c3\u30af\u30b9\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\nSubscriber \u5074\nMQTT Publisher \u5074\u304b\u3089\u9001\u4fe1\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u5074\u306b\u306a\u308b Subscriber \u3092\u7528\u610f\u3057\u307e\u3059\u3002Pub \u5074\u3068\u540c\u3058 Paho \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nsub.py\nimport paho.mqtt.client as paho\n\ndef on_message(mqttc, obj, msg):\n    print(\"topic: \" + msg.topic + \", payload: \" + str(msg.payload) + \", qos: \\\n\" + str(msg.qos) + \", retain: \" + str(msg.retain))\n\nif __name__ == '__main__':\n    mqttc = paho.Client()\n\n    mqttc.on_message = on_message\n    mqttc.connect(\"test.mosquitto.org\", 1883, 60)\n    mqttc.subscribe(\"my/topic/pepper\", 0)\n\n    mqttc.loop_forever()\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\nSubscriber \u3092\u5b9f\u884c\nPC \u4e0a\u3067\u5b9f\u884c\u3057\u3001\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u5f85\u6a5f\u3057\u307e\u3059\u3002\n$ python sub.py\n\n\nPublisher \u3092\u5b9f\u884c\nChoregraphe \u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n\u7d50\u679c\u8868\u793a\nPublisher -> Broker -> Subscriber \u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4f1d\u308f\u308a\u3001Subscriber \u5074\u3067\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n$ python sub.py\ntopic: my/topic/pepper, payload: Hello World from Pepper, qos: 0, retain: 0\n\n\n\u611f\u60f3\n\nPublisher \u5074\u306e\u307b\u3046\u304c\u4f7f\u3044\u3088\u3046\u304c\u3042\u308b\u304b\u3068\u601d\u3063\u3066\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001Subscriber \u5074\u3068\u3057\u3066\u3082\u9762\u767d\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\n\n## \u306f\u3058\u3081\u306b\n* MQTT \u3068\u306f\n\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u7b49\u3067\u78ba\u8a8d\u3057\u3066\u9802\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306a\u8aac\u660e\u3068\u3057\u3066\u306f Pub/Sub \u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u8efd\u91cf\u306a\u30d7\u30ed\u30c8\u30b3\u30eb\u3067\u3059\u3002IoT\b, WoT \u3067\u7e4b\u304c\u308b\u3088\u3046\u306a\u975e\u529b\u306a\u30c7\u30d0\u30a4\u30b9\u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8272\u3005\u3068\u4f4e\u30b3\u30b9\u30c8\u3067\u306e\u51e6\u7406\u304c\u53ef\u80fd\u3067\u3059\u3002\n * [MQTT](http://mqtt.org/)\n * [MQTT\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081](http://tdoc.info/blog/2014/01/27/mqtt.html)\n\n* Pepper \u541b\u3067\u3082\u4f7f\u3048\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u3001\u3061\u3087\u3063\u3068\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n* MQTT \u52c9\u5f37\u4e2d\u3067\u3059\u3002\n\n\n### MQTT Publisher \u30dc\u30c3\u30af\u30b9\n\nMQTT \u306e Python \u7528\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n* [Paho - Open Source messaging for M2M](https://eclipse.org/paho/)\n\n\u307e\u3059\u306f Python \u30dc\u30c3\u30af\u30b9\u3092\u4f5c\u308a\u3001\u5165\u529b\u306e Type \u3092\u300c\u30d0\u30f3\u300d\u304b\u3089\u300c\u6587\u5b57\u5217\u300d\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\n![2015032101.png](https://qiita-image-store.s3.amazonaws.com/0/20418/5c4049df-b090-3af9-a5fa-fcb389a7574f.png \"2015032101.png\")\n\n\n#### \u8a2d\u5b9a\u9805\u76ee\n\n\u8a2d\u5b9a\u9805\u76ee\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\n\nMQTT \u306e\u30d6\u30ed\u30fc\u30ab\u306e\u30db\u30b9\u30c8\u3001\u30dd\u30fc\u30c8\u3001KeepAlive \u5024\u3068\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3001QOS \u5024\u3001Retain \u5024\u3092\u6307\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n![2015032102.png](https://qiita-image-store.s3.amazonaws.com/0/20418/50a724a0-0e48-df1f-f859-6a3fed97d4bb.png \"2015032102.png\")\n\n\n#### Python \u30b3\u30fc\u30c9\n\n\u30b3\u30fc\u30c9\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3059\u3002\u5404\u7a2e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u3001MQTT \u30d6\u30ed\u30fc\u30ab\u306b\u63a5\u7d9a\u30fb\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n\u30dc\u30c3\u30af\u30b9\u5185\u3067\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4f7f\u7528\u65b9\u6cd5\u306f\u3001\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u9802\u304d\u307e\u3057\u305f\u3002\n\n* [Pepper\u7528Tweet\u30dc\u30c3\u30af\u30b9\u3092\u3064\u304f\u308b](http://qiita.com/yacchin1205/items/3422b5066dcbfca63def)\n\n```python\nclass MyClass(GeneratedClass):\n    def __init__(self):\n        GeneratedClass.__init__(self)\n\n    def onLoad(self):\n        self.framemanager = ALProxy(\"ALFrameManager\")\n        self.folderName = None\n        \n    def onUnload(self):\n        import sys\n        \n        if self.folderName and self.folderName in sys.path:\n            sys.path.remove(self.folderName)\n        self.folderName = None\n\n    def onInput_onStart(self, payload):\n        import sys, os\n        \n        self.folderName = os.path.join(\n            self.framemanager.getBehaviorPath(self.behaviorId), \"../lib\")\n        if self.folderName not in sys.path:\n            sys.path.append(self.folderName)\n            \n        import paho.mqtt.client as paho\n\n        host       = self.getParameter(\"Broker Host\")\n        port       = self.getParameter(\"Broker Port\")\n        keep_alive = self.getParameter(\"KeepAlive\")\n        topic      = self.getParameter(\"Topic\")\n        qos        = self.getParameter(\"Qos\") \n        retain     = self.getParameter(\"Retain\")\n        \n        mqttc = paho.Client()\n        mqttc.connect(host, port, keep_alive)\n        mqttc.publish(topic, payload, qos, retain)\n\n    def onInput_onStop(self):\n        self.onUnload()\n        self.onStopped()\n```\n\n\n#### Choregraphe \u3067\u63a5\u7d9a\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u300cText Edit\u300d\u30dc\u30c3\u30af\u30b9\u3068\u3001\u4f5c\u6210\u3057\u305f\u300cMQTT\u300d\u30dc\u30c3\u30af\u30b9\u3092\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n![2015032103.png](https://qiita-image-store.s3.amazonaws.com/0/20418/5f51a604-4423-30e3-872b-2cff7a73c357.png \"2015032103.png\")\n\n\n### Subscriber \u5074\n\nMQTT Publisher \u5074\u304b\u3089\u9001\u4fe1\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u5074\u306b\u306a\u308b Subscriber \u3092\u7528\u610f\u3057\u307e\u3059\u3002Pub \u5074\u3068\u540c\u3058 Paho \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```sub.py\nimport paho.mqtt.client as paho\n\ndef on_message(mqttc, obj, msg):\n    print(\"topic: \" + msg.topic + \", payload: \" + str(msg.payload) + \", qos: \\\n\" + str(msg.qos) + \", retain: \" + str(msg.retain))\n\nif __name__ == '__main__':\n    mqttc = paho.Client()\n\n    mqttc.on_message = on_message\n    mqttc.connect(\"test.mosquitto.org\", 1883, 60)\n    mqttc.subscribe(\"my/topic/pepper\", 0)\n\n    mqttc.loop_forever()\n```\n\n\n### \u52d5\u4f5c\u78ba\u8a8d\n\n#### Subscriber \u3092\u5b9f\u884c\n\nPC \u4e0a\u3067\u5b9f\u884c\u3057\u3001\u30c8\u30d4\u30c3\u30af\u306b\u5bfe\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u3051\u53d6\u308b\u305f\u3081\u306b\u5f85\u6a5f\u3057\u307e\u3059\u3002\n\n```bash\n$ python sub.py\n```\n\n\n#### Publisher \u3092\u5b9f\u884c\n\nChoregraphe \u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n\n\n#### \u7d50\u679c\u8868\u793a\n\nPublisher -> Broker -> Subscriber \u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u4f1d\u308f\u308a\u3001Subscriber \u5074\u3067\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n```bash\n$ python sub.py\ntopic: my/topic/pepper, payload: Hello World from Pepper, qos: 0, retain: 0\n```\n\n\n## \u611f\u60f3\n\n* Publisher \u5074\u306e\u307b\u3046\u304c\u4f7f\u3044\u3088\u3046\u304c\u3042\u308b\u304b\u3068\u601d\u3063\u3066\u8a66\u3057\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001Subscriber \u5074\u3068\u3057\u3066\u3082\u9762\u767d\u305d\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n", "tags": ["mqtt", "Python", "Choregraphe", "Pepper"]}