{"tags": ["GoogleCloudPlatform", "dataflow"], "context": "\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u610f\u8a33\u304a\u3088\u3073\u30e1\u30e2\u3067\u3059\u3002\nhttps://cloud.google.com/dataflow/examples/wordcount-example\n\u307e\u305a\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u3060\u3051\u5b9f\u88c5\u3057\u305fMinimalWordCount\u3092\u898b\u3066\u307f\u308b\u3002\nMinimalWordCount\u3067\u306fGoogle Cloud Storage(GCS)\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3001\u30ef\u30fc\u30c9\u306e\u6570\u3092\u304b\u305e\u3048\u3001GCS\u3078\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3001\u30b7\u30f3\u30d7\u30eb\u306apipeline\u3092\u5b9f\u884c\u3059\u308b\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u5148\u304c\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u3066\u304a\u308a\u3001\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3082\u3057\u3066\u3044\u306a\u3044\u3002Dataflow pipeline\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u9aa8\u7d44\u306e\u307f\u3092\u8a18\u8f09\u3057\u3066\u3044\u308b\u3002\n\u3053\u306ePipeline\u3067\u306fShakespeare\u306e\u66f8\u7c4d\u3067\u3088\u304f\u4f7f\u308f\u308c\u308bword\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\n\n\u307e\u305a\u306fMinimalWordCount\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n\u30bd\u30fc\u30b9\u306e\u4e2d\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30d0\u30b1\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3092\u4fee\u6b63(CHANGE\u3068\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u898b\u308c\u3070\u3059\u3050\u5206\u304b\u308b)\u3057\u3066\u3001\u307e\u305a\u306f\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/GoogleCloudPlatform/DataflowJavaSDK-examples/blob/master/src/main/java/com/google/cloud/dataflow/examples/MinimalWordCount.java\n$ mvn compile exec:java  -Dexec.mainClass=com.google.cloud.dataflow.examples.MinimalWordCountDexec.mainClass=com.google.cloud.dataflow.examples.MinimalWordCount\n\nCloudStorage\u4e0a\u306b\u96c6\u8a08\u7d50\u679c\u306e\u30d5\u30a1\u30a4\u30eb(-00000-of-00006\u3001 -0000\uff11-of-00006...)\u304c\u51fa\u529b\u3055\u308c\u3066\u304a\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\nFishermen: 2\nPay: 7\nExempted: 1\n....\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\n1. Reading data from text files\n2. Specifying 'inline' transforms\n3. Counting a PCollection\n4. Writing data to Cloud Storage as text files\n\n1. \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\nDataflowPipelineOptions\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\nDataflowPipelineOptions\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fPipeline\u306e\u5b9f\u884c\u30aa\u30d7\u30b7\u30e7\u30f3\uff08GCP\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30d0\u30b1\u30c3\u30c8\u306e\u5834\u6240\u306a\u3069\uff09\u3092\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u4ee5\u4e0b\u3067\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066Runner\u3001Project,StagingLocation\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\nRunner\u306bBlockingDataflowPipelineRunner.class\u3092\u6307\u5b9a\u3057\u3066\u3044\u308bBlockingDataflowPipelineRunner\u306f\u3001\u30b8\u30e7\u30d6\u304c\u8d77\u52d5\u3057\u3066\u7d42\u4e86\u3059\u308b\u307e\u3067\u5f85\u3061\u3042\u308f\u305b\u308b\u52d5\u304d\u3092\u3059\u308b\u3002\nDataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\noptions.setRunner(BlockingDataflowPipelineRunner.class);\noptions.setProject(\"SET_YOUR_PROJECT_ID_HERE\");    options.setStagingLocation(\"gs://SET_YOUR_BUCKET_NAME_HERE/AND_STAGING_DIRECTORY\");\n\n\u4e0a\u8a18\u3067\u4f5c\u3063\u305foption\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ed8\u52a0\u3057\u3066Pipeline\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3002\nPipeline p = Pipeline.create(options);\n\n\u4f5c\u3063\u305fpipeline\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001TextIO.Read tansform\u3092\u9069\u7528\u3059\u308b\u3002TextIO.Read\u306ffrom\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001PCollection\u3092\u8fd4\u3059\u3002PCollection\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://cloud.google.com/dataflow/model/pcollection\np.apply(TextIO.Read.from(\"gs://dataflow-samples/shakespeare/*\"))\n\n\u3053\u3053\u307e\u3067\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306fPCollection\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u5909\u63db\u3057\u3066\u3044\u304f\u3002\n\u203bPCollection\u306fSpark\u306eRDD\u306b\u4f3c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\n\n2. \u5909\u63db\u51e6\u7406\u3092\u884c\u3046\n\u4e0a\u8a18\u306ePCollection\u306b\u5bfe\u3057\u3066ParDo\u3092\u9069\u7528\u3059\u308b\u3002ParDo\u306f\u884c\u306e\u5185\u5bb9\u3092\u500b\u3005\u306eWord\u306b\u30c8\u30fc\u30af\u30f3\u5316\u3059\u308bDoFn\u3092\u547c\u3073\u51fa\u3059\u3002ParDo\u306f\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5404Word\u306ePCollection\u3092\u8fd4\u3059\u3002\nParDo\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://cloud.google.com/dataflow/model/par-do\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/ParDo]https://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/DoFn.ProcessContext\nParDo.named\u3067ParD PTransform\u3092\u540d\u524d\u3092\u4ed8\u3051\u3066\u751f\u6210\u3002\u305d\u3057\u3066.of(com.google.cloud.dataflow.sdk.transforms.DoFn)\u3067DoFN\u3092\u547c\u3073\u51fa\u3057\u3001Input\u3068Output\u306e\u30bf\u30a4\u30d7\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u3060\u3068\u3001Input,Output\u3068\u3082\u306bString\u3002\nprocessElement\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3001c.elemnt\u3067\u5165\u529b\u5024\u3092\u53d6\u308a\u51fa\u3057\u5206\u89e3\u30021\u884c\u8907\u6570\u5358\u8a9e\u304b\u30891\u884c1\u5358\u8a9e\u306b\u30d0\u30e9\u3057\u3066\u3044\u308b\u3002\n.apply(ParDo.named(\"ExtractWords\").of(new DoFn<String, String>() {\n   @Override \n   public void processElement(ProcessContext c) {\n   for (String word : c.element().split(\"[^a-zA-Z']+\")) {\n      if (!word.isEmpty()) {\n         c.output(word);\n         }\n      }\n   }\n}))\n\n\u500b\u3005\u306eword\u306ePCollection\u306bCount transform\u3092\u9069\u7528\u3059\u308b\u3002Count transform\u306f\u65b0\u3057\u3044Key/value\u30da\u30a2\u306ePCollection\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067Key\u306f\u30c6\u30ad\u30b9\u30c8\u4e0a\u306e\u30e6\u30cb\u30fc\u30af\u306a\u5024\u3092\u793a\u3057\u3066\u3044\u308b\u3002\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305fvalue\u306fword\u306e\u4ef6\u6570\u3092\u793a\u3057\u3066\u3044\u308b\u3002\n\u203bmap\u306e\u52d5\u4f5c\u3092\u3057\u3001\u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3001Key,value\u3067\u8fd4\u3059\u3002\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/Count.PerElement\n.apply(Count.<String>perElement())\n\nWord Count\u306ePCollection\u3092\u51fa\u529b\u53ef\u80fd\u306aString\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308bMapElements transform\u3092\u9069\u7528\u3059\u308b\u3002output\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3002\nSimpleFunction\u306fPTransform\u3092\u8fd4\u3059\u3002 PTransform\u306fPCollection\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u53d6\u308a\u3001\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066fn.apply(v)\u3092\u542b\u3080PCollection\u3092\u8fd4\u3059\u3002\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/MapElements\n\n.apply(\"FormatResults\", MapElements.via(new SimpleFunction<KV<String, Long>, String>() {\n   @Override\n   public String apply(KV<String, Long> input) {\n      return input.getKey() + \": \" + input.getValue();\n   }\n}))\n\nPipeline\u306e\u6700\u5f8c\u306b\u3001write transform\u3067\u3042\u308bTextIO.Write\u3092\u9069\u7528\u3059\u308b\u3002TextIO.Write\u306fPCollection\u306e\u5185\u5bb9\u3092GCS\u306b\u4e00\u9023\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3002\n.apply(TextIO.Write.to(\"gs://YOUR_OUTPUT_BUCKET/AND_OUTPUT_PREFIX\"));\n\n\nPipeline\u3092\u5b9f\u884c\u3059\u308b\u3002\np.run();\n\n\nimport\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3044\u3066\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u30d5\u30ed\u30fc\u3060\u3051\u306b\u7d5e\u308b\u3068\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\npublic class MinimalWordCount {\n\n  public static void main(String[] args) {\n    DataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\n    options.setRunner(BlockingDataflowPipelineRunner.class);\n    options.setProject(\"SET_YOUR_PROJECT_ID_HERE\");\n    options.setStagingLocation(\"gs://SET_YOUR_BUCKET_NAME_HERE/AND_STAGING_DIRECTORY\");\n\n    Pipeline p = Pipeline.create(options);\n\n    p.apply(TextIO.Read.from(\"gs://dataflow-samples/shakespeare/*\"))\n     .apply(ParDo.named(\"ExtractWords\").of(new DoFn<String, String>() {\n                       @Override\n                       public void processElement(ProcessContext c) {\n                         for (String word : c.element().split(\"[^a-zA-Z']+\")) {\n                           if (!word.isEmpty()) {\n                             c.output(word);\n                           }\n                         }\n                       }\n                     }))\n     .apply(Count.<String>perElement())\n     .apply(\"FormatResults\", MapElements.via(new SimpleFunction<KV<String, Long>, String>() {\n                       @Override\n                       public String apply(KV<String, Long> input) {\n                         return input.getKey() + \": \" + input.getValue();\n                       }\n                     }))\n     .apply(TextIO.Write.to(\"gs://YOUR_OUTPUT_BUCKET/AND_OUTPUT_PREFIX\"));\n\n    p.run();\n  }\n}\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u610f\u8a33\u304a\u3088\u3073\u30e1\u30e2\u3067\u3059\u3002\nhttps://cloud.google.com/dataflow/examples/wordcount-example\n\n\u307e\u305a\u57fa\u672c\u7684\u306a\u6a5f\u80fd\u3060\u3051\u5b9f\u88c5\u3057\u305fMinimalWordCount\u3092\u898b\u3066\u307f\u308b\u3002\nMinimalWordCount\u3067\u306fGoogle Cloud Storage(GCS)\u304b\u3089\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30c8\u30fc\u30af\u30f3\u5316\u3057\u3001\u30ef\u30fc\u30c9\u306e\u6570\u3092\u304b\u305e\u3048\u3001GCS\u3078\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3001\u30b7\u30f3\u30d7\u30eb\u306apipeline\u3092\u5b9f\u884c\u3059\u308b\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u5148\u304c\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u3066\u304a\u308a\u3001\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306a\u3069\u3082\u3057\u3066\u3044\u306a\u3044\u3002Dataflow pipeline\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306e\u9aa8\u7d44\u306e\u307f\u3092\u8a18\u8f09\u3057\u3066\u3044\u308b\u3002\n\u3053\u306ePipeline\u3067\u306fShakespeare\u306e\u66f8\u7c4d\u3067\u3088\u304f\u4f7f\u308f\u308c\u308bword\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u3002\n\n# \u307e\u305a\u306fMinimalWordCount\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\u30bd\u30fc\u30b9\u306e\u4e2d\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30d0\u30b1\u30c3\u30c8\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u7b87\u6240\u3092\u4fee\u6b63(CHANGE\u3068\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u898b\u308c\u3070\u3059\u3050\u5206\u304b\u308b)\u3057\u3066\u3001\u307e\u305a\u306f\u5b9f\u884c\u3057\u3066\u307f\u308b\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/GoogleCloudPlatform/DataflowJavaSDK-examples/blob/master/src/main/java/com/google/cloud/dataflow/examples/MinimalWordCount.java\n\n```\n$ mvn compile exec:java  -Dexec.mainClass=com.google.cloud.dataflow.examples.MinimalWordCountDexec.mainClass=com.google.cloud.dataflow.examples.MinimalWordCount\n```\n\nCloudStorage\u4e0a\u306b\u96c6\u8a08\u7d50\u679c\u306e\u30d5\u30a1\u30a4\u30eb(-00000-of-00006\u3001 -0000\uff11-of-00006...)\u304c\u51fa\u529b\u3055\u308c\u3066\u304a\u308a\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```\nFishermen: 2\nPay: 7\nExempted: 1\n....\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u51e6\u7406\u3057\u3066\u3044\u308b\u3002\n1. Reading data from text files\n2. Specifying 'inline' transforms\n3. Counting a PCollection\n4. Writing data to Cloud Storage as text files\n\n# 1. \u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\nDataflowPipelineOptions\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\nDataflowPipelineOptions\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fPipeline\u306e\u5b9f\u884c\u30aa\u30d7\u30b7\u30e7\u30f3\uff08GCP\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30d0\u30b1\u30c3\u30c8\u306e\u5834\u6240\u306a\u3069\uff09\u3092\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002\u4ee5\u4e0b\u3067\u306f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u3063\u3066Runner\u3001Project,StagingLocation\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u3002\nRunner\u306bBlockingDataflowPipelineRunner.class\u3092\u6307\u5b9a\u3057\u3066\u3044\u308bBlockingDataflowPipelineRunner\u306f\u3001\u30b8\u30e7\u30d6\u304c\u8d77\u52d5\u3057\u3066\u7d42\u4e86\u3059\u308b\u307e\u3067\u5f85\u3061\u3042\u308f\u305b\u308b\u52d5\u304d\u3092\u3059\u308b\u3002\n\n```\nDataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\noptions.setRunner(BlockingDataflowPipelineRunner.class);\noptions.setProject(\"SET_YOUR_PROJECT_ID_HERE\");    options.setStagingLocation(\"gs://SET_YOUR_BUCKET_NAME_HERE/AND_STAGING_DIRECTORY\");\n```\n\n\u4e0a\u8a18\u3067\u4f5c\u3063\u305foption\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ed8\u52a0\u3057\u3066Pipeline\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3059\u308b\u3002\n\n```\nPipeline p = Pipeline.create(options);\n```\n\n\u4f5c\u3063\u305fpipeline\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u3057\u3066\u3001TextIO.Read tansform\u3092\u9069\u7528\u3059\u308b\u3002TextIO.Read\u306ffrom\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001PCollection\u3092\u8fd4\u3059\u3002PCollection\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://cloud.google.com/dataflow/model/pcollection\n\n```\np.apply(TextIO.Read.from(\"gs://dataflow-samples/shakespeare/*\"))\n```\n\n\u3053\u3053\u307e\u3067\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u306fPCollection\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u3053\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u5909\u63db\u3057\u3066\u3044\u304f\u3002\n\u203bPCollection\u306fSpark\u306eRDD\u306b\u4f3c\u3066\u3044\u308b\u6c17\u304c\u3059\u308b\u3002\n\n# 2. \u5909\u63db\u51e6\u7406\u3092\u884c\u3046\n\u4e0a\u8a18\u306ePCollection\u306b\u5bfe\u3057\u3066ParDo\u3092\u9069\u7528\u3059\u308b\u3002ParDo\u306f\u884c\u306e\u5185\u5bb9\u3092\u500b\u3005\u306eWord\u306b\u30c8\u30fc\u30af\u30f3\u5316\u3059\u308bDoFn\u3092\u547c\u3073\u51fa\u3059\u3002ParDo\u306f\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u5404Word\u306ePCollection<String>\u3092\u8fd4\u3059\u3002\nParDo\u306b\u3064\u3044\u3066\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3067\u8aac\u660e\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://cloud.google.com/dataflow/model/par-do\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/ParDo]https://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/DoFn.ProcessContext\n\nParDo.named\u3067ParD PTransform\u3092\u540d\u524d\u3092\u4ed8\u3051\u3066\u751f\u6210\u3002\u305d\u3057\u3066.of(com.google.cloud.dataflow.sdk.transforms.DoFn<InputT, OutputT>)\u3067DoFN\u3092\u547c\u3073\u51fa\u3057\u3001Input\u3068Output\u306e\u30bf\u30a4\u30d7\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u4f8b\u3060\u3068\u3001Input,Output\u3068\u3082\u306bString\u3002\nprocessElement\u3092\u30aa\u30fc\u30d0\u30e9\u30a4\u30c9\u3057\u3001c.elemnt\u3067\u5165\u529b\u5024\u3092\u53d6\u308a\u51fa\u3057\u5206\u89e3\u30021\u884c\u8907\u6570\u5358\u8a9e\u304b\u30891\u884c1\u5358\u8a9e\u306b\u30d0\u30e9\u3057\u3066\u3044\u308b\u3002\n\n```\n.apply(ParDo.named(\"ExtractWords\").of(new DoFn<String, String>() {\n   @Override \n   public void processElement(ProcessContext c) {\n   for (String word : c.element().split(\"[^a-zA-Z']+\")) {\n      if (!word.isEmpty()) {\n         c.output(word);\n         }\n      }\n   }\n}))\n```\n\n\u500b\u3005\u306eword\u306ePCollection\u306bCount transform\u3092\u9069\u7528\u3059\u308b\u3002Count transform\u306f\u65b0\u3057\u3044Key/value\u30da\u30a2\u306ePCollection\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067Key\u306f\u30c6\u30ad\u30b9\u30c8\u4e0a\u306e\u30e6\u30cb\u30fc\u30af\u306a\u5024\u3092\u793a\u3057\u3066\u3044\u308b\u3002\u95a2\u9023\u4ed8\u3051\u3089\u308c\u305fvalue\u306fword\u306e\u4ef6\u6570\u3092\u793a\u3057\u3066\u3044\u308b\u3002\n\u203bmap\u306e\u52d5\u4f5c\u3092\u3057\u3001\u5358\u8a9e\u306e\u51fa\u73fe\u56de\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u3001Key,value\u3067\u8fd4\u3059\u3002\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/Count.PerElement\n\n```\n.apply(Count.<String>perElement())\n```\n\nWord Count\u306ePCollection\u3092\u51fa\u529b\u53ef\u80fd\u306aString\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308bMapElements transform\u3092\u9069\u7528\u3059\u308b\u3002output\u30d5\u30a1\u30a4\u30eb\u306b\u51fa\u529b\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3002\nSimpleFunction<InputT, OutputT>\u306fPTransform\u3092\u8fd4\u3059\u3002 PTransform\u306fPCollection\u3092\u5165\u529b\u3068\u3057\u3066\u53d7\u53d6\u308a\u3001\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066fn.apply(v)\u3092\u542b\u3080PCollection\u3092\u8fd4\u3059\u3002\nhttps://cloud.google.com/dataflow/java-sdk/JavaDoc/com/google/cloud/dataflow/sdk/transforms/MapElements\n```\n.apply(\"FormatResults\", MapElements.via(new SimpleFunction<KV<String, Long>, String>() {\n   @Override\n   public String apply(KV<String, Long> input) {\n      return input.getKey() + \": \" + input.getValue();\n   }\n}))\n```\n\nPipeline\u306e\u6700\u5f8c\u306b\u3001write transform\u3067\u3042\u308bTextIO.Write\u3092\u9069\u7528\u3059\u308b\u3002TextIO.Write\u306fPCollection\u306e\u5185\u5bb9\u3092GCS\u306b\u4e00\u9023\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\u3002\n\n```\n.apply(TextIO.Write.to(\"gs://YOUR_OUTPUT_BUCKET/AND_OUTPUT_PREFIX\"));\n```\n\n### Pipeline\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```\np.run();\n```\n\n-------------------------------------------------------------------\nimport\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u9664\u3044\u3066\u3001\u5fc5\u8981\u6700\u4f4e\u9650\u30d5\u30ed\u30fc\u3060\u3051\u306b\u7d5e\u308b\u3068\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n```\npublic class MinimalWordCount {\n\n  public static void main(String[] args) {\n    DataflowPipelineOptions options = PipelineOptionsFactory.create().as(DataflowPipelineOptions.class);\n    options.setRunner(BlockingDataflowPipelineRunner.class);\n    options.setProject(\"SET_YOUR_PROJECT_ID_HERE\");\n    options.setStagingLocation(\"gs://SET_YOUR_BUCKET_NAME_HERE/AND_STAGING_DIRECTORY\");\n\n    Pipeline p = Pipeline.create(options);\n\n    p.apply(TextIO.Read.from(\"gs://dataflow-samples/shakespeare/*\"))\n     .apply(ParDo.named(\"ExtractWords\").of(new DoFn<String, String>() {\n                       @Override\n                       public void processElement(ProcessContext c) {\n                         for (String word : c.element().split(\"[^a-zA-Z']+\")) {\n                           if (!word.isEmpty()) {\n                             c.output(word);\n                           }\n                         }\n                       }\n                     }))\n     .apply(Count.<String>perElement())\n     .apply(\"FormatResults\", MapElements.via(new SimpleFunction<KV<String, Long>, String>() {\n                       @Override\n                       public String apply(KV<String, Long> input) {\n                         return input.getKey() + \": \" + input.getValue();\n                       }\n                     }))\n     .apply(TextIO.Write.to(\"gs://YOUR_OUTPUT_BUCKET/AND_OUTPUT_PREFIX\"));\n\n    p.run();\n  }\n}\n```\n"}