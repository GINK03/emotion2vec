{"context": "\n\n\u6982\u8981\ninpure\u30e9\u30a4\u30d6\u30e9\u30ea\u306edb_postgres\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3066\u3001PostgreSql\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u306a\u3093\u3061\u3083\u3063\u3066\uff12Way-SQL\u5bfe\u5fdc\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3082\u6e21\u305b\u308b\u3088\n\n\n\uff12Way-SQL\nSQL\u306e\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\uff1f\u3068\u304b\uff1a\uff11\u3068\u304b\u4f7f\u3044\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u3059\u308bDB\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u3063\u3066\u307e\u3061\u307e\u3061\u3067\u3059\u3002\n\u79c1\u306e\u60f3\u5b9a\u3059\u308b2Way-SQL\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\n\n\u305d\u306e\u307e\u307e\u3067\u3082SQL\u304c\u767a\u884c\u3067\u304d\u308b\u3053\u3068\n\u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\u3092\u3059\u308c\u3070\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u90e8\u3092\uff1f\u306b\u5909\u63db\u3059\u308b\n\u5916\u90e8\u304b\u3089\u6e21\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\ntest.sql\nselect \n  * \nfrom (\n  select 'abc' as name,'hello' as name2\nunion all\n  select 'def' as name,'hello' as name2\nunion all\n  select 'ghi' as name,'hello' as name2\n) dummy\nwhere 1=1\nand name = /*name*/'abc'\nor  name in ( /*name2*/'def' , /*name3*/'ghi' ) \n\n\n\u4e0a\u306eSQL\u3092\u5b9f\u884c\u6642\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u90e8(/*XXX*/YY)\u3092\uff1f\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nselect \n  * \nfrom (\n  select 'abc' as name,'hello' as name2\nunion all\n  select 'def' as name,'hello' as name2\nunion all\n  select 'ghi' as name,'hello' as name2\n) dummy\nwhere 1=1\nand name = ?\nor  name in ( ? , ? ) \n\nnim\u3067\u51e6\u7406\u3059\u308b\u306a\u3089\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\nfor row in db.fastRows(SqlQuery(sql) , @[\"abc\",\"def\"]) :\n  echo row\n\n\n\u4f5c\u3063\u305f\u3082\u306e\np\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3067\u3001\u4e0a\u8a18\u306eSQL\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\n-Pname,-Pname2\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u300c\u5024\u300d\u304c\u3001\u4e0a\u8a18SQL\u306e/*name*/'abc',/*name2*/'def'\u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u307e\u3059\u3002\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff12\u3064\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" -Pname=abc -Pname2=ghi\nabc     hello\nghi     hello\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff11\u3064\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" -Pname=abc\nabc     hello\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001SQL\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" \nabc     hello\ndef     hello\nghi     hello\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed5\u69d8\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\n\u7701\u7565\u5f62\n\u5185\u5bb9\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n\n\n\n\nhost\nh\n\u63a5\u7d9a\u5148\u30db\u30b9\u30c8\u540d\nlocalhost\n\n\nport\n\n\u30dd\u30fc\u30c8\u756a\u53f7\n5432\n\n\ndb\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d\n\n\n\nuser\nu\n\u30e6\u30fc\u30b6\u30fc\u540d\n\n\n\npassword\np\n\u30d1\u30b9\u30ef\u30fc\u30c9\n\n\n\nfile\ni\nSQL\u30d5\u30a1\u30a4\u30eb\u540d\u3078\u306e\u30d1\u30b9\n\n\n\nsql\nc\nSQL\u6587\u3092\u76f4\u63a5\u6307\u5b9a\n\n\n\nPxxx\n\n\u5927\u6587\u5b57P\u3067\u59cb\u307e\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u30af\u30a8\u30ea\u30fc\u306e\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\n\n\nfile\u304a\u3088\u3073sql\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3042\u3068\u52dd\u3061\u3068\u306a\u308a\u307e\u3059\n\n\u30bd\u30fc\u30b9\n\np.nim\n\n# nim\u306b\u3088\u308b2Way-SQL\u5bfe\u5fdc PostgreSQL\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n# ex)\n# ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -c=\"select 1 \" -Pname=abc -Pname2=ghi\n\nimport os\nimport parseopt2\nimport db_postgres\nimport tables\nimport nre\nimport sequtils\nimport strutils\n\ntype\n  Sql2WayInfo = tuple[query: string, keys:seq[string]] \n\n# 2way SQL\u3092\u6e21\u3057\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff1f\u306b\u5909\u63db\u304b\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u9806\u756a\u306b\u62bd\u51fa\u3057\u3001\n# Sql2WayInfo\u306b\u683c\u7d0d\u3057\u3066\u8fd4\u5374\u3059\u308b\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u5909\u63db\u5bfe\u8c61\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30bf\u30fc\u30f3\n#  /*PARAM_1*/''\n#  /*PARAM_2*/'ABC'\n#  /*PARAM_3*/0\n#  /*PARAM_4*/123\nproc initSql2WayInfo( str:string , params: Table[string,string] ) : Sql2WayInfo = \n  let reParam = re\"\\/\\*([\\w_]+)\\*\\/('[^']*'|\\d+)\"\n  var q = str\n  var p: seq[string] = @[]\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u5909\u6570\u540dxxx\u3092\u53d6\u308a\u51fa\u3057\u3001/*XXX*/YY\u3092\uff1f\u306b\u5909\u63db\u3059\u308b\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306a\u3089\u3001SQL\u306f\u305d\u306e\u307e\u307e\n  if params.len != 0 :\n    for x in str.findIter(reParam) :\n      # \u5909\u6570\u540d\u3092\u53d6\u308a\u51fa\u3057\u3066\u683c\u7d0d\u3059\u308b\n      p.add(x.captures[0])\n    # /*xxx*/yy\u3092\uff1f\u306b\u5909\u63db\n    q = str.replace(reParam,\"?\")\n  # \u7d50\u679c\u3092\u8a2d\u5b9a\n  result = (query:q, keys:p)\n\n# Sql2WayInfo\u306ekeys\u306e\u9806\u756a\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u69cb\u7bc9\u3059\u308b\nproc p(info:Sql2WayInfo, params:Table[string,string]) : seq[string] = \n  info.keys.mapIt( if it in params : params[it] else: \"\" ) \n\n# \u30e1\u30a4\u30f3\u51e6\u7406\nproc mainProc(args:Table[string,string],params:Table[string,string]) : int =\n  result = 0\n  # 2WaySql\u3092\u30d1\u30fc\u30b9\n  var qp = initSql2WayInfo(args[\"sql\"],params)\n  # \u63a5\u7d9a\u6587\u5b57\u5217\u306e\u7d44\u307f\u7acb\u3066\n  let conn = \"host=\" & args[\"host\"] & \" port=\" & args[\"port\"] & \" dbname=\" & args[\"db\"]\n  # Postgresql\u306b\u63a5\u7d9a\n  let db = open(\"\", args[\"user\"], args[\"password\"], conn )\n  defer:\n    db.close\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n  for row in db.fastRows( SqlQuery(qp.query) , qp.p(params)) :\n    echo row.join(\"\\t\")\n\n# \u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\nif isMainModule :\n  var args = initTable[string,string]()\n  var prms = initTable[string,string]()\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n  args[\"host\"] = \"localhost\"\n  args[\"port\"] = \"5432\"\n\n  # \u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u53d6\u5f97    \n  for kind, key, val in getopt() :\n    # (\u4f59\u8ac7)kind\u306f\u3001enum\u578b\u306a\u306e\u3067\u3001case\u6587\u3067\u306f\u3059\u3079\u3066\u306eenum\u5024\n    # \u3092\u7db2\u7f85\u3057\u3066\u3044\u306a\u3044\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\n    case kind\n    of cmdEnd:\n      discard\n    of cmdArgument:\n      echo \"\u7121\u52b9\u306a\u5f15\u6570\u3067\u3059\"\n      quit(1)\n    of cmdLongOption, cmdShortOption:\n      var val2 = val\n      let key2 = case key\n        of \"h\",\"host\": \"host\"\n        of \"u\",\"user\": \"user\"\n        of \"p\",\"password\": \"password\"\n        of \"d\",\"db\" : \"db\"\n        of \"c\",\"sql\": \"sql\"\n        of \"port\" : \"port\"\n        of \"i\",\"file\": \n          var buff = @[\"\"]\n          # \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n          for x in val.lines() :\n            buff.add(x)\n          val2 = buff.join(\"\\n\")\n          \"sql\"\n        else:\n          if key[0] == 'P' :\n            prms[ key.substr(1)  ] = val\n          \"\"\n      if key2 != \"\" :\n        args[key2] = val2 \n\n  # \u30e1\u30a4\u30f3\u51e6\u7406\u3092\u547c\u3073\u51fa\u3057\n  quit(mainProc(args,prms))\n\n\n\n\n\u4f5c\u3063\u3066\u307f\u305f\u611f\u60f3\n\u666e\u6bb5\u306f\u3001Groovy/Scala/Java\u7cfb\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001nim\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3060\u3051\u3042\u3063\u3066\u3001\u8d77\u52d5\u3084\u3089\u51e6\u7406\u81ea\u4f53\u3082\u65e9\u3044\u306e\u3067\u826f\u3044\u3067\u3059\u306d\u3002\n\u4eca\u56de\u306f\u3001db_postgres\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001db_odbc\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3048\u3070\u3001\u3044\u308d\u3044\u308d\u306aDB\u3078\u306e\u63a5\u7d9a\u3067\u304d\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4f5c\u308c\u305d\u3046\u3067\u3059\u3002\n# \u6982\u8981\n\ninpure\u30e9\u30a4\u30d6\u30e9\u30ea\u306edb_postgres\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u3066\u3001PostgreSql\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3063\u307d\u3044\u3082\u306e\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n* \u306a\u3093\u3061\u3083\u3063\u3066\uff12Way-SQL\u5bfe\u5fdc\n* \u30d1\u30e9\u30e1\u30fc\u30bf\u3082\u6e21\u305b\u308b\u3088\n\n## \uff12Way-SQL\n\nSQL\u306e\u30af\u30a8\u30ea\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001\uff1f\u3068\u304b\uff1a\uff11\u3068\u304b\u4f7f\u3044\u307e\u3059\u304c\u3001\u5bfe\u5fdc\u3059\u308bDB\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u3063\u3066\u307e\u3061\u307e\u3061\u3067\u3059\u3002\n\u79c1\u306e\u60f3\u5b9a\u3059\u308b2Way-SQL\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\n\n* \u305d\u306e\u307e\u307e\u3067\u3082SQL\u304c\u767a\u884c\u3067\u304d\u308b\u3053\u3068\n* \u30d1\u30e9\u30e1\u30fc\u30bf\u6307\u5b9a\u3092\u3059\u308c\u3070\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u90e8\u3092\uff1f\u306b\u5909\u63db\u3059\u308b\n* \u5916\u90e8\u304b\u3089\u6e21\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```sql:test.sql\nselect \n  * \nfrom (\n  select 'abc' as name,'hello' as name2\nunion all\n  select 'def' as name,'hello' as name2\nunion all\n  select 'ghi' as name,'hello' as name2\n) dummy\nwhere 1=1\nand name = /*name*/'abc'\nor  name in ( /*name2*/'def' , /*name3*/'ghi' ) \n```\n\n\u4e0a\u306eSQL\u3092\u5b9f\u884c\u6642\u306b\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u90e8(```/*XXX*/YY```)\u3092\uff1f\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```sql\nselect \n  * \nfrom (\n  select 'abc' as name,'hello' as name2\nunion all\n  select 'def' as name,'hello' as name2\nunion all\n  select 'ghi' as name,'hello' as name2\n) dummy\nwhere 1=1\nand name = ?\nor  name in ( ? , ? ) \n```\n\nnim\u3067\u51e6\u7406\u3059\u308b\u306a\u3089\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\n\n```\nfor row in db.fastRows(SqlQuery(sql) , @[\"abc\",\"def\"]) :\n  echo row\n```\n\n## \u4f5c\u3063\u305f\u3082\u306e\n\np\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3067\u3001\u4e0a\u8a18\u306eSQL\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3067\u3059\u3002\n-Pname,-Pname2\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u300c\u5024\u300d\u304c\u3001\u4e0a\u8a18SQL\u306e```/*name*/'abc',/*name2*/'def'```\u306b\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u307e\u3059\u3002\n\n```shell-session\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff12\u3064\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" -Pname=abc -Pname2=ghi\nabc     hello\nghi     hello\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff11\u3064\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" -Pname=abc\nabc     hello\n\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u306a\u3057\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001SQL\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\n$ ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -i=\"test.sql\" \nabc     hello\ndef     hello\nghi     hello\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u4ed5\u69d8\u306f\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n|\u30d1\u30e9\u30e1\u30fc\u30bf\u540d|\u7701\u7565\u5f62|\u5185\u5bb9|\u30c7\u30d5\u30a9\u30eb\u30c8\u5024|\n|:--|:--|:--|:--|\n|host   | h  | \u63a5\u7d9a\u5148\u30db\u30b9\u30c8\u540d  | localhost |\n|port   |   | \u30dd\u30fc\u30c8\u756a\u53f7  | 5432 |\n|db   |   | \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u540d  | |\n|user   | u  | \u30e6\u30fc\u30b6\u30fc\u540d  | |\n|password  | p  | \u30d1\u30b9\u30ef\u30fc\u30c9  | | \n|file   | i  | SQL\u30d5\u30a1\u30a4\u30eb\u540d\u3078\u306e\u30d1\u30b9  | |\n|sql   | c  | SQL\u6587\u3092\u76f4\u63a5\u6307\u5b9a  | |\n|Pxxx | | \u5927\u6587\u5b57P\u3067\u59cb\u307e\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u3001\u30af\u30a8\u30ea\u30fc\u306e\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf | |\n\nfile\u304a\u3088\u3073sql\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3042\u3068\u52dd\u3061\u3068\u306a\u308a\u307e\u3059\n\n## \u30bd\u30fc\u30b9\n\n```nim:p.nim\n\n# nim\u306b\u3088\u308b2Way-SQL\u5bfe\u5fdc PostgreSQL\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n# ex)\n# ./p -h=localhost -port=5432 -db=sample -u=postgres -p=postgres -c=\"select 1 \" -Pname=abc -Pname2=ghi\n\nimport os\nimport parseopt2\nimport db_postgres\nimport tables\nimport nre\nimport sequtils\nimport strutils\n\ntype\n  Sql2WayInfo = tuple[query: string, keys:seq[string]] \n\n# 2way SQL\u3092\u6e21\u3057\u3066\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\uff1f\u306b\u5909\u63db\u304b\u3064\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u540d\u3092\u9806\u756a\u306b\u62bd\u51fa\u3057\u3001\n# Sql2WayInfo\u306b\u683c\u7d0d\u3057\u3066\u8fd4\u5374\u3059\u308b\n# \u30d1\u30e9\u30e1\u30fc\u30bf\u5909\u63db\u5bfe\u8c61\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30bf\u30fc\u30f3\n#  /*PARAM_1*/''\n#  /*PARAM_2*/'ABC'\n#  /*PARAM_3*/0\n#  /*PARAM_4*/123\nproc initSql2WayInfo( str:string , params: Table[string,string] ) : Sql2WayInfo = \n  let reParam = re\"\\/\\*([\\w_]+)\\*\\/('[^']*'|\\d+)\"\n  var q = str\n  var p: seq[string] = @[]\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u3089\u3001\u5909\u6570\u540dxxx\u3092\u53d6\u308a\u51fa\u3057\u3001/*XXX*/YY\u3092\uff1f\u306b\u5909\u63db\u3059\u308b\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u306a\u3089\u3001SQL\u306f\u305d\u306e\u307e\u307e\n  if params.len != 0 :\n    for x in str.findIter(reParam) :\n      # \u5909\u6570\u540d\u3092\u53d6\u308a\u51fa\u3057\u3066\u683c\u7d0d\u3059\u308b\n      p.add(x.captures[0])\n    # /*xxx*/yy\u3092\uff1f\u306b\u5909\u63db\n    q = str.replace(reParam,\"?\")\n  # \u7d50\u679c\u3092\u8a2d\u5b9a\n  result = (query:q, keys:p)\n\n# Sql2WayInfo\u306ekeys\u306e\u9806\u756a\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u69cb\u7bc9\u3059\u308b\nproc p(info:Sql2WayInfo, params:Table[string,string]) : seq[string] = \n  info.keys.mapIt( if it in params : params[it] else: \"\" ) \n\n# \u30e1\u30a4\u30f3\u51e6\u7406\nproc mainProc(args:Table[string,string],params:Table[string,string]) : int =\n  result = 0\n  # 2WaySql\u3092\u30d1\u30fc\u30b9\n  var qp = initSql2WayInfo(args[\"sql\"],params)\n  # \u63a5\u7d9a\u6587\u5b57\u5217\u306e\u7d44\u307f\u7acb\u3066\n  let conn = \"host=\" & args[\"host\"] & \" port=\" & args[\"port\"] & \" dbname=\" & args[\"db\"]\n  # Postgresql\u306b\u63a5\u7d9a\n  let db = open(\"\", args[\"user\"], args[\"password\"], conn )\n  defer:\n    db.close\n  # \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n  for row in db.fastRows( SqlQuery(qp.query) , qp.p(params)) :\n    echo row.join(\"\\t\")\n\n# \u30e1\u30a4\u30f3\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u8d77\u52d5\u3057\u3066\u3044\u308b\u304b\u30c1\u30a7\u30c3\u30af\nif isMainModule :\n  var args = initTable[string,string]()\n  var prms = initTable[string,string]()\n  # \u30c7\u30d5\u30a9\u30eb\u30c8\u5024\n  args[\"host\"] = \"localhost\"\n  args[\"port\"] = \"5432\"\n\n  # \u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u53d6\u5f97    \n  for kind, key, val in getopt() :\n    # (\u4f59\u8ac7)kind\u306f\u3001enum\u578b\u306a\u306e\u3067\u3001case\u6587\u3067\u306f\u3059\u3079\u3066\u306eenum\u5024\n    # \u3092\u7db2\u7f85\u3057\u3066\u3044\u306a\u3044\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3068\u306a\u308a\u307e\u3059\n    case kind\n    of cmdEnd:\n      discard\n    of cmdArgument:\n      echo \"\u7121\u52b9\u306a\u5f15\u6570\u3067\u3059\"\n      quit(1)\n    of cmdLongOption, cmdShortOption:\n      var val2 = val\n      let key2 = case key\n        of \"h\",\"host\": \"host\"\n        of \"u\",\"user\": \"user\"\n        of \"p\",\"password\": \"password\"\n        of \"d\",\"db\" : \"db\"\n        of \"c\",\"sql\": \"sql\"\n        of \"port\" : \"port\"\n        of \"i\",\"file\": \n          var buff = @[\"\"]\n          # \u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n          for x in val.lines() :\n            buff.add(x)\n          val2 = buff.join(\"\\n\")\n          \"sql\"\n        else:\n          if key[0] == 'P' :\n            prms[ key.substr(1)  ] = val\n          \"\"\n      if key2 != \"\" :\n        args[key2] = val2 \n\n  # \u30e1\u30a4\u30f3\u51e6\u7406\u3092\u547c\u3073\u51fa\u3057\n  quit(mainProc(args,prms))\n\n```\n\n## \u4f5c\u3063\u3066\u307f\u305f\u611f\u60f3\n\n\u666e\u6bb5\u306f\u3001Groovy/Scala/Java\u7cfb\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001nim\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3060\u3051\u3042\u3063\u3066\u3001\u8d77\u52d5\u3084\u3089\u51e6\u7406\u81ea\u4f53\u3082\u65e9\u3044\u306e\u3067\u826f\u3044\u3067\u3059\u306d\u3002\n\u4eca\u56de\u306f\u3001db_postgres\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001db_odbc\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3048\u3070\u3001\u3044\u308d\u3044\u308d\u306aDB\u3078\u306e\u63a5\u7d9a\u3067\u304d\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u4f5c\u308c\u305d\u3046\u3067\u3059\u3002\n\n", "tags": ["Nim"]}