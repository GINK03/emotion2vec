{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nJava\u306e\u30d0\u30c3\u30c1\u51e6\u7406\u3067\u306f\u3001\n\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306b System#exit(int) \u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nJVM\u3092\u7d42\u4e86\u3057\u3066\u3001Exit\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u306e\u3067\u3059\u304c\u3002\n\u554f\u984c\u306f\u3001\n\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306bJUnit\u306e\u30e9\u30f3\u30ca\u30fc\u3082\u505c\u6b62\u3059\u308b\u306e\u3067\u3001\nassert\u53e5\u307e\u3067\u5230\u9054\u305b\u305a\u306b\u30c6\u30b9\u30c8\u304c\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u4f8b\n@Test\npublic void testExitMethod() {\n\n    // System.exit(int); \u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n    TestMain.main(); // \u3053\u3053\u3067\u7d42\u4e86\u3059\u308b\n\n    assertThat(hoge ,is(hoge)); // \u3053\u3053\u307e\u3067\u5230\u9054\u3057\u306a\u3044  \n}\n\n\u3061\u306a\u307f\u306b\u3001\u5b9f\u884c\u3059\u308b\u3068JUnit\u306e\u7d50\u679c\u304c\u3001\u30b0\u30ea\u30fc\u30f3\u3067\u3082\u30ec\u30c3\u30c9\u3067\u3082\u306a\u304f\u7070\u8272\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u65b9\u6cd5\nJUnit\u3067System.exit(int);\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u30922\u901a\u308a\u7d39\u4ecb\u3057\u307e\u3059\u3002\n1. exit\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002\n2. \u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002(exit\u3092\u3055\u305b\u306a\u304f\u3059\u308b)\n\n1. exit\u30b3\u30fc\u30c9\u3092assert\u3059\u308b\u3002\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002 \n\n\nExitSample1.java\npublic class ExitSample1 {\n\n    public static void main(String[] args) {\n\n        if (args.length == 0) {\n            System.exit(1); // JVM\u304c\u7d42\u4e86\u3057\u307e\u3059        \n        }\n\n        System.exit(0); // JVM\u304c\u7d42\u4e86\u3057\u307e\u3059\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nSystem Rule \u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3002\n\nExitSample1Test.java\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.contrib.java.lang.system.ExpectedSystemExit;\n\npublic class ExitSimple1Test {\n\n    // @Rule\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u5171\u306b\u3001ExpectedSystemExit\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\n    @Rule\n    public final ExpectedSystemExit exit = ExpectedSystemExit.none();\n\n    @Test\n    public void fail() {\n        // \u3053\u308c\u3060\u3068\u9014\u4e2d\u3067\u6b62\u307e\u308b\n        ExitSample1.main(new String[] {});\n    }\n\n    @Test\n    public void success() {\n        // \u7d42\u4e86\u30b3\u30fc\u30c9\u306e\u671f\u5f85\u5024\u3092Exit\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u3001\u547c\u3076\u524d\u306b\u5ba3\u8a00\n        exit.expectSystemExitWithStatus(1);\n\n        ExitSample1.main(new String[] {});\n    }\n}\n\n\n\n\u3053\u308c\u3067System#exit(int); \u306eExit\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\n\n2. exit\u3092\u3055\u305b\u306a\u304f\u3059\u308b\u3002\n\u5b9f\u969b\u306e\u696d\u52d9\u3067\u306f\u3001Exit\u30b3\u30fc\u30c9\u3060\u3051\u3067\u306a\u304f\u3002\n\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u7d50\u679c\u3092assert\u3057\u305f\u3044\u3068\u304d\u306e\u65b9\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3093\u306a\u6642\u306f\u3001SecurityManager\u30af\u30e9\u30b9 \u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u5143\u306b\u3001\nJVM\u304b\u3089Exit\u3059\u308b\u6a29\u9650\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001 System.exit(int); \u3092\u547c\u3093\u3067\u3082\u3001JVM\u3092\u7d42\u4e86\u3067\u304d\u306a\u304f\u3057\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u306e\u3067\u3059\u3002\n\n\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n\nExitSsmple2.java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\nimport org.junit.Test;\n\npublic class ExitSsmple2 {\n\n    public static void main(String[] args) {\n        String filePath = \"C:\\\\ExitTest\";\n        String fileName = args[0];  \n        Path fullPath = Paths.get(filePath, fileName);\n\n        try {\n            // \u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n            Files.createFile(fullPath);\n        } catch (IOException e) {\n            // \u30a8\u30e9\u30fc\u306a\u3089Eixt\n            System.exit(1);\n        }\n\n        // \u6700\u5f8c\u306bExit\n        System.exit(0);\n    }\n}\n\n\n\n\u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\nexit\u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u3082\u3057\u305f\u3044\u3067\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3067\u3059\u3002\n\n\u5931\u6557\u4f8b\n\n\n\u666e\u901a\u306b\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n\nExitSsmple2Test.java\n\nimport static org.junit.Assert.*;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\nimport org.junit.Test;\n\npublic class ExitSample2Test {\n\n    @Test\n    public void fail() {\n        String filePath = \"C:\\\\ExitTest\";\n        String fileName = \"sample.txt\"; \n        Path fullPath = Paths.get(filePath, fileName);\n\n        ExitSsmple2.main(new String[]{fileName}); // \u3053\u3053\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\n\n        // \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u304b\u30c6\u30b9\u30c8\u3057\u305f\u3044\u304c\u3001\u3053\u3053\u3067\u5230\u9054\u3057\u306a\u3044...\n        boolean result = Files.exists(fullPath);\n\n        assertTrue(result);\n    }\n}\n\n\n\n\n\u624b\u9806\n\n\n\u72ec\u81eaExceptin\u3092\u4f5c\u6210(SecurityException\u3092\u7d99\u627f\u3057\u3066\u308c\u3070\u540d\u524d\u306f\u4f55\u3067\u3082\u3044\u3044\u3067\u3059)\nexit\u306a\u3069\u306e\u6a29\u9650\u3092\u6271\u3046checkPermission(Permission)\u3092\u4e0a\u66f8\u304d(Override)\nexit\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u3001Exception\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u4e0a\u66f8\u304d(Override)\n\u8a2d\u5b9a\u3057\u305f\u60c5\u5831\u3092set\u3059\u308b\nexit\u306e\u4ee3\u308f\u308a\u306b\u3001(\u624b\u98061\u3067)\u4f5c\u6210\u3057\u305fExitException\u3092catch\n\n\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u6210\u529f\u4f8b\n\n\n\u6210\u529f\u30b5\u30f3\u30d7\u30eb\n\n\nExitSsmple2Test.java\nimport static org.junit.Assert.*;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.Permission;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class ExitSsmple2Test {\n\n    // \u624b\u98061 \u72ec\u81eaExceptin\u3092\u4f5c\u6210(SecurityException\u3092\u7d99\u627f\u3057\u3066\u308c\u3070\u540d\u524d\u306f\u4f55\u3067\u3082\u3044\u3044\u3067\u3059)\n    class ExitException extends SecurityException {\n        private static final long serialVersionUID = 1L;\n        public int state = 1;\n\n        public ExitException(int state) {\n            this.state = state;\n        }\n    }\n\n    @Before\n    public void setUp() {\n        // SecurityManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\n        SecurityManager securityManager = new SecurityManager() {\n\n            // \u624b\u98062 exit\u306a\u3069\u306e\u6a29\u9650\u3092\u6271\u3046checkPermission(Permission)\u3092\u4e0a\u66f8\u304d(Override)\n            @Override\n            public void checkPermission(Permission permission) {\n                // \u4f55\u66f8\u3044\u3066\u3082\u3044\u3044\n            }\n\n            // \u624b\u98063 exit\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u3001Exception\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u4e0a\u66f8\u304d(Override)\n            @Override\n            public void checkExit(int status) {\n                throw new ExitException(status);\n            }\n        };\n        // \u624b\u98064 \u8a2d\u5b9a\u3057\u305f\u60c5\u5831\u3092set\u3059\u308b\n        System.setSecurityManager(securityManager);\n    }\n\n    @Test\n    public void success() {\n        String filePath = \"C:\\\\ExitTest\";\n        String fileName = \"sample.txt\"; \n        Path fullPath = Paths.get(filePath, fileName);\n\n        try {\n            ExitSsmple2.main(new String[]{fileName}); \n\n            // \u624b\u98065 exit\u306e\u4ee3\u308f\u308a\u306b\u3001(\u624b\u98061\u3067)\u4f5c\u6210\u3057\u305fExitException\u3092catch\n        } catch (ExitException e) {\n            // \u624b\u98066 catch\u8aac\u306e\u4e2d\u306bassert\u53e5\u3092\u8a18\u8ff0\u3059\u308b\n            boolean result = Files.exists(fullPath);\n\n            assertTrue(result);\n        }\n    }\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308a\u307e\u3059\u3002\n\u7121\u4e8b\u3001System#exit(int) \u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u3057\u305f\uff01\uff01\n\n\u307e\u3068\u3081\n\u30d0\u30c3\u30c1\u51e6\u7406\u3067Exit\u3059\u308b\u3053\u3068\u306f\u6700\u8fd1\u306f\u306a\u3044\uff1f\u3089\u3057\u3044\u3067\u3059\u304c\u3002\n\u500b\u4eba\u7684\u306b\u306f\u307e\u3063\u305f\u306e\u3068\u3001Java\u8a00\u8a9e\u5074\u304b\u3089JVM\u306e\u6a29\u9650\u3092\u64cd\u4f5c\u3059\u308b\u306e\u304c\u697d\u3057\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u3044\u3051\u3066\u308bWeb\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u65b9\u3005\u306b\u306f\u3042\u307e\u308a\u8208\u5473\u306e\u306a\u3044\u5185\u5bb9\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\nJava\u30a8\u30f3\u30b8\u30cb\u30a2\u3067\u3042\u308c\u3070 SecurityManager\u306eJavaDoc \u306f\u3001\u8aad\u3093\u3067\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff01\uff01\n# \u306f\u3058\u3081\u306b\n\nJava\u306e\u30d0\u30c3\u30c1\u51e6\u7406\u3067\u306f\u3001\n\u30e1\u30bd\u30c3\u30c9\u306e\u6700\u5f8c\u306b **System#exit(int) \u3092\u547c\u3073\u51fa\u3059**\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\nJVM\u3092\u7d42\u4e86\u3057\u3066\u3001Exit\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u306e\u3067\u3059\u304c\u3002\n\n\u554f\u984c\u306f\u3001\n\u305d\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306bJUnit\u306e\u30e9\u30f3\u30ca\u30fc\u3082\u505c\u6b62\u3059\u308b\u306e\u3067\u3001\n**assert\u53e5\u307e\u3067\u5230\u9054\u305b\u305a\u306b\u30c6\u30b9\u30c8\u304c\u7d42\u4e86**\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3067\u3059\u3002\n\n# \u4f8b\n\n```java\n@Test\npublic void testExitMethod() {\n\n\t// System.exit(int); \u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n\tTestMain.main(); // \u3053\u3053\u3067\u7d42\u4e86\u3059\u308b\n\n\tassertThat(hoge ,is(hoge)); // \u3053\u3053\u307e\u3067\u5230\u9054\u3057\u306a\u3044  \n}\n```\n\n\u3061\u306a\u307f\u306b\u3001\u5b9f\u884c\u3059\u308b\u3068JUnit\u306e\u7d50\u679c\u304c\u3001\u30b0\u30ea\u30fc\u30f3\u3067\u3082\u30ec\u30c3\u30c9\u3067\u3082\u306a\u304f**\u7070\u8272**\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u65b9\u6cd5\n\nJUnit\u3067System.exit(int);\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u30922\u901a\u308a\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n**1. exit\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002**\n\n**2. \u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3002(exit\u3092\u3055\u305b\u306a\u304f\u3059\u308b)**\n\n## 1. exit\u30b3\u30fc\u30c9\u3092assert\u3059\u308b\u3002\n\n* \u3053\u306e\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002 \n\n```java:ExitSample1.java\npublic class ExitSample1 {\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tif (args.length == 0) {\n\t\t\tSystem.exit(1);\t// JVM\u304c\u7d42\u4e86\u3057\u307e\u3059\t\t\n\t\t}\n\t\t\n\t\tSystem.exit(0); // JVM\u304c\u7d42\u4e86\u3057\u307e\u3059\n\t}\n}\n```\n\n* \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n[System Rule]( http://stefanbirkner.github.io/system-rules/download.html) \u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3002\n\n```java:ExitSample1Test.java\nimport org.junit.Rule;\nimport org.junit.Test;\nimport org.junit.contrib.java.lang.system.ExpectedSystemExit;\n\npublic class ExitSimple1Test {\n\n\t// @Rule\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u5171\u306b\u3001ExpectedSystemExit\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\n\t@Rule\n\tpublic final ExpectedSystemExit exit = ExpectedSystemExit.none();\n\n\t@Test\n\tpublic void fail() {\n\t\t// \u3053\u308c\u3060\u3068\u9014\u4e2d\u3067\u6b62\u307e\u308b\n\t\tExitSample1.main(new String[] {});\n\t}\n\n\t@Test\n\tpublic void success() {\n\t\t// \u7d42\u4e86\u30b3\u30fc\u30c9\u306e\u671f\u5f85\u5024\u3092Exit\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u3001\u547c\u3076\u524d\u306b\u5ba3\u8a00\n\t\texit.expectSystemExitWithStatus(1);\n\n\t\tExitSample1.main(new String[] {});\n\t}\n}\n\n```\n\n\u3053\u308c\u3067System#exit(int); \u306eExit\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\n\n## 2. exit\u3092\u3055\u305b\u306a\u304f\u3059\u308b\u3002\n\n\u5b9f\u969b\u306e\u696d\u52d9\u3067\u306f\u3001Exit\u30b3\u30fc\u30c9\u3060\u3051\u3067\u306a\u304f\u3002\n\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u7d50\u679c\u3092assert\u3057\u305f\u3044\u3068\u304d\u306e\u65b9\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u6642\u306f\u3001**SecurityManager\u30af\u30e9\u30b9** \u3092\u4f7f\u3063\u3066\u547c\u3073\u51fa\u3057\u5143\u306b\u3001\nJVM\u304b\u3089Exit\u3059\u308b\u6a29\u9650\u3092\u4e0a\u66f8\u304d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001<strong> _System.exit(int); \u3092\u547c\u3093\u3067\u3082\u3001JVM\u3092\u7d42\u4e86\u3067\u304d\u306a\u304f\u3057\u3066\u3057\u307e\u3048\u3070\u3044\u3044\u306e\u3067\u3059\u3002_\n\n***\n\n* \u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n```java:ExitSsmple2.java\nimport java.io.IOException;\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\nimport org.junit.Test;\n\npublic class ExitSsmple2 {\n\n\tpublic static void main(String[] args) {\n\t\tString filePath = \"C:\\\\ExitTest\";\n\t \tString fileName = args[0];\t\n\t \tPath fullPath = Paths.get(filePath, fileName);\n\t \t\n\t \ttry {\n\t \t\t// \u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n\t\t\tFiles.createFile(fullPath);\n\t\t} catch (IOException e) {\n\t\t\t// \u30a8\u30e9\u30fc\u306a\u3089Eixt\n\t\t\tSystem.exit(1);\n\t\t}\n\t \t\n\t \t// \u6700\u5f8c\u306bExit\n\t \tSystem.exit(0);\n\t}\n}\n\n```\n\n\u9069\u5f53\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u3002\nexit\u30b3\u30fc\u30c9\u306e\u30c6\u30b9\u30c8\u3082\u3057\u305f\u3044\u3067\u3059\u304c\u3001**\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3082\u30c6\u30b9\u30c8**\u3057\u305f\u3044\u3067\u3059\u3002\n\n### \u5931\u6557\u4f8b\n***\n\n* \u666e\u901a\u306b\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```java:ExitSsmple2Test.java\n\nimport static org.junit.Assert.*;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\n\nimport org.junit.Test;\n\npublic class ExitSample2Test {\n\t\n\t@Test\n\tpublic void fail() {\n\t\tString filePath = \"C:\\\\ExitTest\";\n\t \tString fileName = \"sample.txt\";\t\n\t \tPath fullPath = Paths.get(filePath, fileName);\n\t\t\n\t\tExitSsmple2.main(new String[]{fileName}); // \u3053\u3053\u3067\u7d42\u4e86\u3057\u3066\u3057\u307e\u3046\n\t\t\n\t\t// \u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u305f\u304b\u30c6\u30b9\u30c8\u3057\u305f\u3044\u304c\u3001\u3053\u3053\u3067\u5230\u9054\u3057\u306a\u3044...\n\t\tboolean result = Files.exists(fullPath);\n\t\t\n\t\tassertTrue(result);\n\t}\n}\n\n```\n\n\n### \u624b\u9806\n***\n\n\n1. \u72ec\u81eaExceptin\u3092\u4f5c\u6210(SecurityException\u3092\u7d99\u627f\u3057\u3066\u308c\u3070\u540d\u524d\u306f\u4f55\u3067\u3082\u3044\u3044\u3067\u3059)\n2. exit\u306a\u3069\u306e\u6a29\u9650\u3092\u6271\u3046checkPermission(Permission)\u3092\u4e0a\u66f8\u304d(Override)\n3. exit\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u3001Exception\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u4e0a\u66f8\u304d(Override)\n4. \u8a2d\u5b9a\u3057\u305f\u60c5\u5831\u3092set\u3059\u308b\n5. exit\u306e\u4ee3\u308f\u308a\u306b\u3001(\u624b\u98061\u3067)\u4f5c\u6210\u3057\u305fExitException\u3092catch\n\n\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n### \u6210\u529f\u4f8b\n***\n\n\n\n* \u6210\u529f\u30b5\u30f3\u30d7\u30eb\n\n```java:ExitSsmple2Test.java\nimport static org.junit.Assert.*;\n\nimport java.nio.file.Files;\nimport java.nio.file.Path;\nimport java.nio.file.Paths;\nimport java.security.Permission;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\npublic class ExitSsmple2Test {\n\n\t// \u624b\u98061 \u72ec\u81eaExceptin\u3092\u4f5c\u6210(SecurityException\u3092\u7d99\u627f\u3057\u3066\u308c\u3070\u540d\u524d\u306f\u4f55\u3067\u3082\u3044\u3044\u3067\u3059)\n\tclass ExitException extends SecurityException {\n\t\tprivate static final long serialVersionUID = 1L;\n\t\tpublic int state = 1;\n\n\t\tpublic ExitException(int state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\t\n\t@Before\n\tpublic void setUp() {\n\t\t// SecurityManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\n\t\tSecurityManager securityManager = new SecurityManager() {\n\t\t\t\n\t\t\t// \u624b\u98062 exit\u306a\u3069\u306e\u6a29\u9650\u3092\u6271\u3046checkPermission(Permission)\u3092\u4e0a\u66f8\u304d(Override)\n\t\t\t@Override\n\t\t\tpublic void checkPermission(Permission permission) {\n\t\t\t\t// \u4f55\u66f8\u3044\u3066\u3082\u3044\u3044\n\t\t\t}\n\n\t\t\t// \u624b\u98063 exit\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u305f\u3068\u304d\u306b\u3001Exception\u3092\u6295\u3052\u308b\u3088\u3046\u306b\u4e0a\u66f8\u304d(Override)\n\t\t\t@Override\n\t\t\tpublic void checkExit(int status) {\n\t\t\t\tthrow new ExitException(status);\n\t\t\t}\n\t\t};\n\t\t// \u624b\u98064 \u8a2d\u5b9a\u3057\u305f\u60c5\u5831\u3092set\u3059\u308b\n\t\tSystem.setSecurityManager(securityManager);\n\t}\n\t\n\t@Test\n\tpublic void success() {\n\t\tString filePath = \"C:\\\\ExitTest\";\n\t \tString fileName = \"sample.txt\";\t\n\t \tPath fullPath = Paths.get(filePath, fileName);\n\t\t\n\t \ttry {\n\t \t\tExitSsmple2.main(new String[]{fileName}); \n\n\t \t\t// \u624b\u98065 exit\u306e\u4ee3\u308f\u308a\u306b\u3001(\u624b\u98061\u3067)\u4f5c\u6210\u3057\u305fExitException\u3092catch\n\t \t} catch (ExitException e) {\n\t \t\t// \u624b\u98066 catch\u8aac\u306e\u4e2d\u306bassert\u53e5\u3092\u8a18\u8ff0\u3059\u308b\n\t\t\tboolean result = Files.exists(fullPath);\n\t\t\t\n\t\t\tassertTrue(result);\n\t \t}\n\t}\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308a\u307e\u3059\u3002\n\u7121\u4e8b\u3001**System#exit(int) \u306e\u30c6\u30b9\u30c8\u304c\u3067\u304d\u307e\u3057\u305f\uff01\uff01**\n\n## \u307e\u3068\u3081\n\n\u30d0\u30c3\u30c1\u51e6\u7406\u3067Exit\u3059\u308b\u3053\u3068\u306f\u6700\u8fd1\u306f\u306a\u3044\uff1f\u3089\u3057\u3044\u3067\u3059\u304c\u3002\n\u500b\u4eba\u7684\u306b\u306f\u307e\u3063\u305f\u306e\u3068\u3001Java\u8a00\u8a9e\u5074\u304b\u3089JVM\u306e\u6a29\u9650\u3092\u64cd\u4f5c\u3059\u308b\u306e\u304c\u697d\u3057\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n\u3044\u3051\u3066\u308bWeb\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u65b9\u3005\u306b\u306f\u3042\u307e\u308a\u8208\u5473\u306e\u306a\u3044\u5185\u5bb9\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\nJava\u30a8\u30f3\u30b8\u30cb\u30a2\u3067\u3042\u308c\u3070 [SecurityManager\u306eJavaDoc](http://docs.oracle.com/javase/jp/8/api/java/lang/SecurityManager.html) \u306f\u3001\u8aad\u3093\u3067\u304a\u3044\u3066\u640d\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff01\uff01\n", "tags": ["Java", "JUnit", "test"]}