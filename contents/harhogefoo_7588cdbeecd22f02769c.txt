{"context": "\n\n\u3084\u308a\u305f\u3044\u4e8b\nXamarin.Forms\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u53ef\u80fd\u304b\u5224\u5b9a\u3059\u308b\uff08\u3082\u3061\u308d\u3093\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\uff09\n\u203b2017/01/31 \u73fe\u5728Android\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff08\u60c5\u5831\u63d0\u4f9b\u304a\u9858\u3044\u3057\u307e\u3059...)\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5c0e\u5165\u3059\u308b\nNuGet\u3092\u5229\u7528\u3057\u3066 Connectivity Plugin for Xamarin and Windows\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\n\n\u30b3\u30fc\u30c9\n\nCheckNetworkConnectionPage.cs\nusing System;\nusing System.Collections.Generic;\nusing Plugin.Connectivity;\nusing Xamarin.Forms;\n\nnamespace XamarinSamples\n{\n    public partial class CheckNetworkConnectionPage : ContentPage\n    {\n        public CheckNetworkConnectionPage()\n        {\n            InitializeComponent();\n            CrossConnectivity.Current.ConnectivityTypeChanged += Current_ConnectivityTypeChanged;\n        }\n\n        private async void Current_ConnectivityTypeChanged(object sender, Plugin.Connectivity.Abstractions.ConnectivityTypeChangedEventArgs e)\n        {\n            if (!e.IsConnected)\n            {\n                await DisplayAlert(\"Error\", \"Check for your connection.\", \"OK\");\n            }\n            else {\n                await DisplayAlert(\"Success\", \"Network is Available.\", \"OK\");\n            }\n        }\n\n        protected async override void OnAppearing()\n        {\n            base.OnAppearing();\n\n            if (!CrossConnectivity.Current.IsConnected)\n            {\n                System.Diagnostics.Debug.WriteLine(\"connected\");\n                await DisplayAlert(\"Error\", \"Check for your connection\", \"OK\");\n            }\n            else {\n                await DisplayAlert(\"Success\", \"Network is Available.\", \"OK\");\n            }\n        }\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\niOS\n\n\nAndroid\n\n\u3057\u3087\u307c\u3093\n# \u3084\u308a\u305f\u3044\u4e8b\nXamarin.Forms\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u63a5\u7d9a\u53ef\u80fd\u304b\u5224\u5b9a\u3059\u308b\uff08\u3082\u3061\u308d\u3093\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\uff09\n\u203b2017/01/31 \u73fe\u5728Android\u306f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3067\u3057\u305f\uff08\u60c5\u5831\u63d0\u4f9b\u304a\u9858\u3044\u3057\u307e\u3059...)\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5c0e\u5165\u3059\u308b\nNuGet\u3092\u5229\u7528\u3057\u3066 `Connectivity Plugin for Xamarin and Windows`\u3092\u8ffd\u52a0\u3059\u308b\uff0e\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-31 19.26.19.png](https://qiita-image-store.s3.amazonaws.com/0/32950/bdf6841b-676a-c849-51ac-33a1046b8196.png)\n\n# \u30b3\u30fc\u30c9\n\n```csharp:CheckNetworkConnectionPage.cs\nusing System;\nusing System.Collections.Generic;\nusing Plugin.Connectivity;\nusing Xamarin.Forms;\n\nnamespace XamarinSamples\n{\n    public partial class CheckNetworkConnectionPage : ContentPage\n    {\n        public CheckNetworkConnectionPage()\n        {\n            InitializeComponent();\n            CrossConnectivity.Current.ConnectivityTypeChanged += Current_ConnectivityTypeChanged;\n        }\n\n        private async void Current_ConnectivityTypeChanged(object sender, Plugin.Connectivity.Abstractions.ConnectivityTypeChangedEventArgs e)\n        {\n            if (!e.IsConnected)\n            {\n                await DisplayAlert(\"Error\", \"Check for your connection.\", \"OK\");\n            }\n            else {\n                await DisplayAlert(\"Success\", \"Network is Available.\", \"OK\");\n            }\n        }\n\n        protected async override void OnAppearing()\n        {\n            base.OnAppearing();\n\n            if (!CrossConnectivity.Current.IsConnected)\n            {\n                System.Diagnostics.Debug.WriteLine(\"connected\");\n                await DisplayAlert(\"Error\", \"Check for your connection\", \"OK\");\n            }\n            else {\n                await DisplayAlert(\"Success\", \"Network is Available.\", \"OK\");\n            }\n        }\n    }\n}\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\n### iOS\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-31 19.30.04.png](https://qiita-image-store.s3.amazonaws.com/0/32950/ba32d7f3-17e8-24b8-cf81-ca7f134616cf.png)\n\n### Android\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-31 19.44.17.png](https://qiita-image-store.s3.amazonaws.com/0/32950/1bb3665f-572e-0cd4-084c-8dbf38e60f22.png)\n\n\u3057\u3087\u307c\u3093\n", "tags": ["Xamarin.Forms", "Xamarin"]}