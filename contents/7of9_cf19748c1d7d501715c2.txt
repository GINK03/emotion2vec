{"context": "\nMy_Environment\nUbuntu 14.04 LTS Japanese Remix\non VMWare Fusion v8.5.2 (4635224)\non OS X El Captian v10.11.4\n\nGNU bash, version 4.3.11(1)-release\n\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4 \n(also for g++)\nADDA v.1.3b6\n\n\nThis article is related to ADDA (light scattering simulator based on the discrete dipole approximation).\nIn the source files, I found itertive.c.\nhttps://github.com/adda-team/adda/blob/master/src/iterative.c\n\nITER_FUNC(BCGS2)\nIn the iterative.c, I found the followings:\nITER_FUNC(BCGS2);\nITER_FUNC(BiCG_CS);\nITER_FUNC(BiCGStab);\nITER_FUNC(CGNR);\nITER_FUNC(CSYM);\nITER_FUNC(QMR_CS);\nITER_FUNC(QMR_CS_2);\n\nThe ITER_FUNC is a macro defined as followings\n#define ITER_FUNC(name) static void name(const enum phase ph)\n\nI am not sure, but this seems a means to show explicitly the groups of iterative solvers, rather than to name using prefix (e.g. ITER_BCGS2(), ITER_BiGC_CS() etc).\nThis also enforces to use enum elements (e.g. BCGS2, BiGC_CS), which are used in other parts of the code.\n\nfunction call\nIt seems that functions defined using ITER_FUNC() are called through:\n\niterative.c\nstatic const struct iter_params_struct params[]={\n    {IT_BCGS2,15000,2,1,BCGS2},\n    {IT_BICG_CS,50000,1,0,BiCG_CS},\n    {IT_BICGSTAB,30000,3,3,BiCGStab},\n    {IT_CGNR,10,1,0,CGNR},\n    {IT_CSYM,10,6,2,CSYM},\n    {IT_QMR_CS,50000,8,3,QMR_CS},\n    {IT_QMR_CS_2,50000,5,2,QMR_CS_2}\n...\n};\n\n\nwhere struct iter_params_struct are defined as \n\niterative.c\nstruct iter_params_struct {\n    enum iter meth;   // identifier\n    int mc;           // maximum allowed number of iterations without residual decrease\n    int sc_N;         // number of additional scalars to describe the state\n    int vec_N;        // number of additional vectors to describe the state\n    void (*func)(const enum phase); // pointer to implementation of the iterative solver\n};\n\n\n```txt:My_Environment\nUbuntu 14.04 LTS Japanese Remix\non VMWare Fusion v8.5.2 (4635224)\non OS X El Captian v10.11.4\n\nGNU bash, version 4.3.11(1)-release\n\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04.3) 4.8.4 \n(also for g++)\nADDA v.1.3b6\n```\n\nThis article is related to [ADDA (light scattering simulator based on the discrete dipole approximation)](https://github.com/adda-team/adda/).\n\nIn the source files, I found `itertive.c`.\nhttps://github.com/adda-team/adda/blob/master/src/iterative.c\n\n### ITER_FUNC(BCGS2)\n\nIn the `iterative.c`, I found the followings:\n\n```c\nITER_FUNC(BCGS2);\nITER_FUNC(BiCG_CS);\nITER_FUNC(BiCGStab);\nITER_FUNC(CGNR);\nITER_FUNC(CSYM);\nITER_FUNC(QMR_CS);\nITER_FUNC(QMR_CS_2);\n```\n\nThe ITER_FUNC is a macro defined as followings\n\n```c\n#define ITER_FUNC(name) static void name(const enum phase ph)\n```\n\nI am not sure, but this seems a means to show explicitly the groups of iterative solvers, rather than to name using prefix (e.g. ITER_BCGS2(), ITER_BiGC_CS() etc).\n\nThis also enforces to use enum elements (e.g. BCGS2, BiGC_CS), which are used in other parts of the code.\n \n### function call\n\nIt seems that functions defined using ITER_FUNC() are called through:\n\n```iterative.c\nstatic const struct iter_params_struct params[]={\n\t{IT_BCGS2,15000,2,1,BCGS2},\n\t{IT_BICG_CS,50000,1,0,BiCG_CS},\n\t{IT_BICGSTAB,30000,3,3,BiCGStab},\n\t{IT_CGNR,10,1,0,CGNR},\n\t{IT_CSYM,10,6,2,CSYM},\n\t{IT_QMR_CS,50000,8,3,QMR_CS},\n\t{IT_QMR_CS_2,50000,5,2,QMR_CS_2}\n...\n};\n```\n\nwhere struct iter_params_struct are defined as \n\n```iterative.c\nstruct iter_params_struct {\n\tenum iter meth;   // identifier\n\tint mc;           // maximum allowed number of iterations without residual decrease\n\tint sc_N;         // number of additional scalars to describe the state\n\tint vec_N;        // number of additional vectors to describe the state\n\tvoid (*func)(const enum phase); // pointer to implementation of the iterative solver\n};\n```\n", "tags": ["ADDA", "conjugateGradient"]}