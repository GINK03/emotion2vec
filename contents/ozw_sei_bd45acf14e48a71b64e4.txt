{"context": "Unity\u306eLinq\u304cZip\u5bfe\u5fdc\u3057\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u66f8\u3044\u305f\u30e1\u30e2\n\u8ffd\u8a18\uff1a\u30b3\u30e1\u30f3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u307b\u3046\u304c\u826f\u304b\u3063\u305f\u306e\u3067\u4e0a\u66f8\u304d\u307e\u3057\u305f\u3002\npublic static class IEnumerableExtension\n{\n    public static IEnumerable<TResult> Zip<TFirst, TSecond, TResult>(this IEnumerable<TFirst> first,\n        IEnumerable<TSecond> second, Func<TFirst, TSecond, TResult> resultSelector)\n    {\n        Assert.IsNotNull(first);\n        Assert.IsNotNull(second);\n        Assert.IsNotNull(resultSelector);\n\n        using (var firstEnumerator = first.GetEnumerator())\n        using (var secondEnumerator = second.GetEnumerator())\n        {\n            while (firstEnumerator.MoveNext() && secondEnumerator.MoveNext())\n            {\n                yield return resultSelector(firstEnumerator.Current, secondEnumerator.Current);\n            }\n        }\n    }\n}\n\n\n\n\nUnity\u306eLinq\u304cZip\u5bfe\u5fdc\u3057\u3066\u306a\u304b\u3063\u305f\u306e\u3067\u66f8\u3044\u305f\u30e1\u30e2\n\n\u8ffd\u8a18\uff1a\u30b3\u30e1\u30f3\u30c8\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u307b\u3046\u304c\u826f\u304b\u3063\u305f\u306e\u3067\u4e0a\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```\npublic static class IEnumerableExtension\n{\n    public static IEnumerable<TResult> Zip<TFirst, TSecond, TResult>(this IEnumerable<TFirst> first,\n        IEnumerable<TSecond> second, Func<TFirst, TSecond, TResult> resultSelector)\n    {\n        Assert.IsNotNull(first);\n        Assert.IsNotNull(second);\n        Assert.IsNotNull(resultSelector);\n\n        using (var firstEnumerator = first.GetEnumerator())\n        using (var secondEnumerator = second.GetEnumerator())\n        {\n            while (firstEnumerator.MoveNext() && secondEnumerator.MoveNext())\n            {\n                yield return resultSelector(firstEnumerator.Current, secondEnumerator.Current);\n            }\n        }\n    }\n}\n\n\n```\n", "tags": ["C#", "Unity", "LINQ"]}