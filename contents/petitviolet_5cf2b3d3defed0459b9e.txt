{"context": "akka.http.scaladsl\u30d1\u30c3\u30b1\u30fc\u30b8\u3092import\u3059\u308b\u3053\u3068\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308bDSL\u304c\u3001\n\u88cf\u5074\u3067\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u8abf\u3079\u305f\u3002\n\n\u984c\u6750\nakka-http\u306b\u304a\u3044\u3066\u3001\u5358\u7d14\u306a\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u308b\u3002\nval route = path(\"ping\") {\n  get {\n    complete(\"pong\")\n  }\n}\n\nlocalhost:8080/ping\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u671f\u5f85\u901a\u308a\u306bpong\u3068\u8fd4\u3063\u3066\u304f\u308b\u3002\n$ curl localhost:8080/ping\npong\n\n\nimplicit conversion\u3092\u660e\u793a\u3059\u308b\n\u3053\u306eroute\u304cRoute\u305f\u308b\u305f\u3081\u306b\u3001implicit conversion\u304c\u3075\u3093\u3060\u3093\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\nimplicit\u306aconversion\u3092\u660e\u793a\u7684\u306b\u3057\u3066\u5909\u6570\u306b\u675f\u7e1b\u3057\u3066\u578b\u6ce8\u91c8\u3092\u3064\u3051\u308b\u3068\u3053\u3046\u306a\u308b\u3002\n// path\nval pingSegment: String = \"ping\"\nval pingMatcher: PathMatcher[Unit] = ImplicitPathMatcherConstruction.segmentStringToPathMatcher(pingSegment)\nval pingDirective: Directive[Unit] = path(pingMatcher)\n\n// response\nval pongStr: String = \"pong\"\nval pongMarshal: ToResponseMarshallable =\n  ToResponseMarshallable.apply(pongStr)(PredefinedToEntityMarshallers.StringMarshaller)\nval pongStandardRoute: StandardRoute = complete(pongMarshal)\n\n// construct route\nval getPingPath: StandardRoute => Route = s =>\n  Directive.addByNameNullaryApply(MethodDirectives.get)(s)\nval pingRoute: Route = getPingPath(pongStandardRoute)\nval pingRouter: (=> Route) => Route = Directive.addByNameNullaryApply(pingDirective)\nval route: Route = pingRouter(pingRoute)\n\n\u601d\u3063\u305f\u3088\u308a\u91cf\u304c\u591a\u304f\u306a\u3063\u305f\u3002\n\u306a\u304aimplicit conversion\u3092\u660e\u8a18\u3060\u3051\u306a\u3089\u591a\u5c11\u306f\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u3002\nDirective.addByNameNullaryApply(path(ImplicitPathMatcherConstruction.segmentStringToPathMatcher(\"ping\"))) {\n  Directive.addByNameNullaryApply(MethodDirectives.get) {\n    complete(ToResponseMarshallable(\"pong\"))\n  }\n}\n\n\nDSL\u306f\u3069\u306e\u3088\u3046\u306bimplicit conversion\u3055\u308c\u3066\u3044\u308b\u304b\n\u5b9f\u969b\u306bDSL\u3092\u4f7f\u7528\u3059\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u7279\u306b\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\u3001DSL\u306e\u88cf\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u3056\u3063\u3068\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u3002\n\n\npath\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308bString\u306fPathMatcher[Unit]\u306bimplicit conversion\u3055\u308c\u308b\n\n\n\nPathMatcher[L]\u306b\u306a\u308b\u5834\u5408(path\u306b\u6b63\u898f\u8868\u73fe\u3092\u6e21\u3059\u3068\u304b)\u3082\u3042\u308a\u3001\u305d\u306e\u5834\u5408\u306fDirective[L]\u3068\u306a\u308b\n\nDirective[L]\u306fL => Route\u306a\u95a2\u6570\u3092\u53d7\u3051\u53d6\u308b\n\n\n\ncomplete\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308bString\u306fToResponseMarshallable\u306bimplicit conversion\u3055\u308c\u308b\n\n\n\u6a19\u6e96\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bMarshaller\u306fPredefinedToEntityMarshallers\u3092\u53c2\u7167\n\u305d\u306e\u4ed6\u306e\u578b\u306b\u3064\u3044\u3066\u306f\u81ea\u524d\u3067Marshaller\u3092\u5b9f\u88c5\u3059\u308c\u3070\u826f\u3044\n\n\n\nDirective[L]\u3092Directive.addByNullaryApply\u306b\u3088\u3063\u3066Route => Route\u306aFunction1\u306bimplicit conversion\u3055\u308c\u308b\n\n\n\u4eca\u56de\u306fDirective0\u3001\u3059\u306a\u308f\u3061Directive[Unit]\u306a\u306e\u3067Directive.addByNameNullaryApply\u304c\u4f7f\u308f\u308c\u308b\n\nDirective[L]\u306e\u5834\u5408\u306fDirective.addDirectiveApply[L]\u304c\u4f7f\u308f\u308c\u308b\n\n\n\n\n`akka.http.scaladsl`\u30d1\u30c3\u30b1\u30fc\u30b8\u3092import\u3059\u308b\u3053\u3068\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308bDSL\u304c\u3001\n\u88cf\u5074\u3067\u3069\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u304b\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u8abf\u3079\u305f\u3002\n\n## \u984c\u6750\n\nakka-http\u306b\u304a\u3044\u3066\u3001\u5358\u7d14\u306a\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u308b\u3002\n\n```scala\nval route = path(\"ping\") {\n  get {\n    complete(\"pong\")\n  }\n}\n```\n\n`localhost:8080/ping`\u306bGET\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u3068\u671f\u5f85\u901a\u308a\u306b`pong`\u3068\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n```\n$ curl localhost:8080/ping\npong\n```\n\n## implicit conversion\u3092\u660e\u793a\u3059\u308b\n\n\u3053\u306e`route`\u304c`Route`\u305f\u308b\u305f\u3081\u306b\u3001implicit conversion\u304c\u3075\u3093\u3060\u3093\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u3002\nimplicit\u306aconversion\u3092\u660e\u793a\u7684\u306b\u3057\u3066\u5909\u6570\u306b\u675f\u7e1b\u3057\u3066\u578b\u6ce8\u91c8\u3092\u3064\u3051\u308b\u3068\u3053\u3046\u306a\u308b\u3002\n\n```scala\n// path\nval pingSegment: String = \"ping\"\nval pingMatcher: PathMatcher[Unit] = ImplicitPathMatcherConstruction.segmentStringToPathMatcher(pingSegment)\nval pingDirective: Directive[Unit] = path(pingMatcher)\n\n// response\nval pongStr: String = \"pong\"\nval pongMarshal: ToResponseMarshallable =\n  ToResponseMarshallable.apply(pongStr)(PredefinedToEntityMarshallers.StringMarshaller)\nval pongStandardRoute: StandardRoute = complete(pongMarshal)\n\n// construct route\nval getPingPath: StandardRoute => Route = s =>\n  Directive.addByNameNullaryApply(MethodDirectives.get)(s)\nval pingRoute: Route = getPingPath(pongStandardRoute)\nval pingRouter: (=> Route) => Route = Directive.addByNameNullaryApply(pingDirective)\nval route: Route = pingRouter(pingRoute)\n```\n\n\u601d\u3063\u305f\u3088\u308a\u91cf\u304c\u591a\u304f\u306a\u3063\u305f\u3002\n\u306a\u304aimplicit conversion\u3092\u660e\u8a18\u3060\u3051\u306a\u3089\u591a\u5c11\u306f\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u3002\n\n```scala\nDirective.addByNameNullaryApply(path(ImplicitPathMatcherConstruction.segmentStringToPathMatcher(\"ping\"))) {\n  Directive.addByNameNullaryApply(MethodDirectives.get) {\n    complete(ToResponseMarshallable(\"pong\"))\n  }\n}\n```\n\n## DSL\u306f\u3069\u306e\u3088\u3046\u306bimplicit conversion\u3055\u308c\u3066\u3044\u308b\u304b\n\n\u5b9f\u969b\u306bDSL\u3092\u4f7f\u7528\u3059\u308b\u3060\u3051\u3067\u3042\u308c\u3070\u7279\u306b\u610f\u8b58\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u304c\u3001DSL\u306e\u88cf\u3067\u884c\u308f\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u3056\u3063\u3068\u307e\u3068\u3081\u308b\u3068\u4ee5\u4e0b\u3002\n\n- `path`\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308b`String`\u306f`PathMatcher[Unit]`\u306bimplicit conversion\u3055\u308c\u308b\n  - `PathMatcher[L]`\u306b\u306a\u308b\u5834\u5408(`path`\u306b\u6b63\u898f\u8868\u73fe\u3092\u6e21\u3059\u3068\u304b)\u3082\u3042\u308a\u3001\u305d\u306e\u5834\u5408\u306f`Directive[L]`\u3068\u306a\u308b\n    - `Directive[L]`\u306f`L => Route`\u306a\u95a2\u6570\u3092\u53d7\u3051\u53d6\u308b\n- `complete`\u306e\u5f15\u6570\u306b\u6e21\u3057\u3066\u3044\u308b`String`\u306f`ToResponseMarshallable`\u306bimplicit conversion\u3055\u308c\u308b\n  - \u6a19\u6e96\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bMarshaller\u306f[PredefinedToEntityMarshallers](https://github.com/akka/akka/blob/master/akka-http/src/main/scala/akka/http/scaladsl/marshalling/PredefinedToEntityMarshallers.scala)\u3092\u53c2\u7167\n  - \u305d\u306e\u4ed6\u306e\u578b\u306b\u3064\u3044\u3066\u306f\u81ea\u524d\u3067Marshaller\u3092\u5b9f\u88c5\u3059\u308c\u3070\u826f\u3044\n- `Directive[L]`\u3092`Directive.addByNullaryApply`\u306b\u3088\u3063\u3066`Route => Route`\u306a`Function1`\u306bimplicit conversion\u3055\u308c\u308b\n  - \u4eca\u56de\u306f`Directive0`\u3001\u3059\u306a\u308f\u3061`Directive[Unit]`\u306a\u306e\u3067`Directive.addByNameNullaryApply`\u304c\u4f7f\u308f\u308c\u308b\n  - `Directive[L]`\u306e\u5834\u5408\u306f`Directive.addDirectiveApply[L]`\u304c\u4f7f\u308f\u308c\u308b\n", "tags": ["Akka", "Scala", "Akka-HTTP"]}