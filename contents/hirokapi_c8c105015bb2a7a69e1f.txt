{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e\u3001CDI\u30b3\u30f3\u30c6\u30ca\u306bSeasar2\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u79fb\u3059 (\u305d\u306e\uff11)\u306b\u66f8\u3044\u305f\u8a18\u4e8b\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\u51e6\u7406\uff08\u4f8b\uff09\nimport org.eclipse.jetty.server.Server;\nimport org.glassfish.jersey.jetty.JettyHttpContainerFactory;\n\npublic class HogeMain {\n    public static void main(String[] args) {\n        HogeConfig config = new HogeConfig();\n        Server server = JettyHttpContainerFactory.createServer(URI, config, false);\n        server.start();\n    }\n}\n\n\nS2\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u8eab\u3092 CDI\u30b3\u30f3\u30c6\u30ca\u306b\u79fb\u3059\u51e6\u7406\u306e\u30b5\u30f3\u30d7\u30eb\n\u51e6\u7406\u306e\u8aac\u660e\u306f\u307e\u305f\u4eca\u5ea6\u3002\u3002\nimport org.glassfish.jersey.server.ResourceConfig;\n\npublic class HogeConfig extends ResourceConfig {\n\n    public HogeConfig() {\n\n        packages(this.getClass().getPackage().getName());\n\n        register(new AbstractBinder() {\n            @Override\n            protected void configure() {\n                for (ComponentDef def : getComponentDefs()) {\n                    Class<?> clazz = def.getComponentClass();\n                    String name = def.getComponentName();\n                    Descriptor descriptor;\n                    if (InstanceDef.SINGLETON_NAME.equals(def.getInstanceDef().getName())\n                            || InstanceDef.APPLICATION_NAME.equals(def.getInstanceDef().getName())) {\n                        descriptor = BuilderHelper.createConstantDescriptor(def.getComponent(), name,\n                                clazz.getInterfaces());\n                    } else {\n                        DescriptorBuilder builder = BuilderHelper.link(clazz).named(name).in(PerLookup.class);\n                        for (Class<?> contract : clazz.getInterfaces()) {\n                            builder = builder.to(contract);\n                        }\n                        descriptor = builder.build();\n                    }\n                    this.bind(descriptor);\n                }\n            }\n\n            private List<ComponentDef> getComponentDefs() {\n                S2Container container = S2ContainerFactory.create();\n                container.init();\n                List<ComponentDef> componentDefList = new ArrayList<ComponentDef>();\n                componentDefList.addAll(getComponentDefs(container));\n                return componentDefList;\n            }\n\n            private Set<ComponentDef> getComponentDefs(S2Container container) {\n                Set<ComponentDef> componentDefSet = new LinkedHashSet<ComponentDef>();\n                for (int i = 0; i < container.getComponentDefSize(); i++) {\n                    ComponentDef componentDef = container.getComponentDef(i);\n                    componentDefSet.add(componentDef);\n                }\n                for (int i = 0; i < container.getChildSize(); i++) {\n                    S2Container child = container.getChild(i);\n                    componentDefSet.addAll(getComponentDefs(child));\n                }\n                return componentDefSet;\n            }\n        });\n    }\n}\n\n\n\u7d9a\u304f\n\u30fb\u30fb\u30fb\u304b\u3082\u3002\u3002\n\u524d\u56de\u306e\u3001[CDI\u30b3\u30f3\u30c6\u30ca\u306bSeasar2\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u79fb\u3059 (\u305d\u306e\uff11)](http://qiita.com/hirokapi/items/fee17dca7f7811e7e9dd)\u306b\u66f8\u3044\u305f\u8a18\u4e8b\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n## \u30b5\u30fc\u30d0\u30fc\u306e\u8d77\u52d5\u51e6\u7406\uff08\u4f8b\uff09\n\n```java:\nimport org.eclipse.jetty.server.Server;\nimport org.glassfish.jersey.jetty.JettyHttpContainerFactory;\n\npublic class HogeMain {\n    public static void main(String[] args) {\n        HogeConfig config = new HogeConfig();\n        Server server = JettyHttpContainerFactory.createServer(URI, config, false);\n        server.start();\n    }\n}\n```\n\n## S2\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u8eab\u3092 CDI\u30b3\u30f3\u30c6\u30ca\u306b\u79fb\u3059\u51e6\u7406\u306e\u30b5\u30f3\u30d7\u30eb\n\n\u51e6\u7406\u306e\u8aac\u660e\u306f\u307e\u305f\u4eca\u5ea6\u3002\u3002\n\n```java:\nimport org.glassfish.jersey.server.ResourceConfig;\n\npublic class HogeConfig extends ResourceConfig {\n\n    public HogeConfig() {\n\n        packages(this.getClass().getPackage().getName());\n\n        register(new AbstractBinder() {\n            @Override\n            protected void configure() {\n                for (ComponentDef def : getComponentDefs()) {\n                    Class<?> clazz = def.getComponentClass();\n                    String name = def.getComponentName();\n                    Descriptor descriptor;\n                    if (InstanceDef.SINGLETON_NAME.equals(def.getInstanceDef().getName())\n                            || InstanceDef.APPLICATION_NAME.equals(def.getInstanceDef().getName())) {\n                        descriptor = BuilderHelper.createConstantDescriptor(def.getComponent(), name,\n                                clazz.getInterfaces());\n                    } else {\n                        DescriptorBuilder builder = BuilderHelper.link(clazz).named(name).in(PerLookup.class);\n                        for (Class<?> contract : clazz.getInterfaces()) {\n                            builder = builder.to(contract);\n                        }\n                        descriptor = builder.build();\n                    }\n                    this.bind(descriptor);\n                }\n            }\n\n            private List<ComponentDef> getComponentDefs() {\n                S2Container container = S2ContainerFactory.create();\n                container.init();\n                List<ComponentDef> componentDefList = new ArrayList<ComponentDef>();\n                componentDefList.addAll(getComponentDefs(container));\n                return componentDefList;\n            }\n\n            private Set<ComponentDef> getComponentDefs(S2Container container) {\n                Set<ComponentDef> componentDefSet = new LinkedHashSet<ComponentDef>();\n                for (int i = 0; i < container.getComponentDefSize(); i++) {\n                    ComponentDef componentDef = container.getComponentDef(i);\n                    componentDefSet.add(componentDef);\n                }\n                for (int i = 0; i < container.getChildSize(); i++) {\n                    S2Container child = container.getChild(i);\n                    componentDefSet.addAll(getComponentDefs(child));\n                }\n                return componentDefSet;\n            }\n        });\n    }\n}\n```\n\n## \u7d9a\u304f\n\n\u30fb\u30fb\u30fb\u304b\u3082\u3002\u3002\n", "tags": ["Seasar2", "CDI", "Java", "HK2"]}