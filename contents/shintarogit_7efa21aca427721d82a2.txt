{"context": "\n\n\u6982\u8981\nSiriKit - Siri\u3067\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3092\u4f7f\u3044\u3063\u3066\u3082\u3089\u3046\u305f\u3081\u306e\u6a5f\u80fd - \u3092\u4f7f\u3063\u3066\u3001\u5b9f\u969b\u306bSiri\u3068\u30a2\u30d7\u30ea\u3092\u9023\u643a\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u306e\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u3084\u308a\u53d6\u308a\u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u9001\u4fe1\u3057\u307e\u305b\u3093\u3002\n\n\u7528\u8a9e\n\u30c9\u30e1\u30a4\u30f3\u3001Intents\u3001\u30d5\u30a7\u30fc\u30ba\n\u7528\u8a9e\u306e\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306b\u7ffb\u8a33\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nSiriKit\u306b\u95a2\u3059\u308b\u4ed6\u306e\u8a18\u4e8b\n1.SiriKit Introduction\u306e\u8a33\n2.Creating the Intents Extension(\u672c\u5bb6\u306e\u8a18\u4e8b) \u2190 \u52d5\u304d\u306e\u6982\u8981\u3068\u3001Xcode\u306e\u8a2d\u5b9a\u306a\u306e\u3067\u3001\u3059\u3063\u98db\u3070\u3057\u307e\u3057\u305f\u3002\n3.Resolving and Handling Intents\u306e\u8a33\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n2.Creating the Intents Extension \u306b Intents Extension\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u4f8b\u306b\u3088\u3063\u3066\u3001\u305d\u3053\u306f\u3059\u3063\u98db\u3070\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u305f\u5f8c\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3063\u307d\u3044\u30a2\u30d7\u30ea\u3092Siri\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306e\u904e\u7a0b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n\n1.\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u6c7a\u3081\u308b\n\nIntents Extension(\u3053\u3053\u3067\u306fSiriIntents\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3057\u305f)\u306einfo.plist\u3092\u958b\u304d\u3001\u3055\u3089\u306bIntentsSupported\u3092\u958b\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ef\u30fc\u30af\u30a2\u30a6\u30c8\u7cfb\u306eIntents\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306a\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\u3057\u3066\u3001INSendMessageIntent\u306b\u3057\u307e\u3059\u3002\u3053\u308c\u3067Siri\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u30a2\u30d7\u30ea\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30c9\u30e1\u30a4\u30f3\u306eINSendMessageIntent\u3092\u610f\u56f3\u3059\u308b\u8a00\u8449\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5ba3\u8a00\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u30ed\u30c3\u30af\u4e2d\u306b\u3053\u308c\u3092\u4f7f\u3048\u308b\u304b\u3069\u3046\u304b\u3092\u6c7a\u3081\u308bIntentsRestictedWhileLocked\u306f\u300c\u306a\u3057\u300d\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u3001\u3067\u3082\u3044\u3044\u3067\u3059\u304c\u3002\u3002\u3002\n\n2.INExtension\u7d99\u627f\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\n\n\u5148\u307b\u3069\u306einfo.plist\u306bINExtension\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9 - \u3053\u3053\u3067\u306fSiriExntension - \u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u540d\u3092\u5b9a\u7fa9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068IntentHandler\u30af\u30e9\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306fINExtension\u306fIntents Handler\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u306b\u5f53\u305f\u308b\u306e\u3067\u3001\u30cf\u30f3\u30c9\u30e9\u304c\u30d5\u30a1\u30af\u30c8\u30ea\u306b\u306a\u3063\u3066\u308b\u306e\u306f\u306a\u3093\u3060\u304b\u6c17\u6301\u3061\u60aa\u3044\u3067\u3059\u306e\u3067\u3002\n\nSiriExtension.swift\nimport Intents\nclass SiriExtension: INExtension {\n    override func handler(for intent: INIntent) -> AnyObject? {\n        switch intent {\n        case is INSendMessageIntent :\n            return MessageHandler()\n        default:\n            NSLog(\"\u60f3\u5b9a\u5916\u306eIntents\u3092\u53d7\u4fe1\u3057\u307e\u3057\u305f: %@\", intent.description)\n            return nil\n        }\n    }\n}\n\n\n\n3.Handler\u3092\u4f5c\u6210\u3059\u308b\n\u3067\u306f\u3001\u5b9f\u969b\u306bSiriExtension\u3067\u751f\u6210\u3055\u308c\u308b\u30cf\u30f3\u30c9\u30e9 - \u3053\u3053\u3067\u306fMessageHandler - \u5b9f\u88c5\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306fINSendMessagIntentHandling\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\nMessageHandler.swift\nimport Foundation\nimport Intents\n\nclass MessageHandler:NSObject,INSendMessageIntentHandling {\n\n    // MARK:- Handling Intent\u30d5\u30a7\u30fc\u30ba\n    func handle(sendMessage intent: INSendMessageIntent, completion: (INSendMessageIntentResponse) -> Void) {\n        NSLog(\"handle %@\", intent.description)\n        // TODO \u672c\u5f53\u306f\u3053\u3053\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u51e6\u7406\u3057\u307e\u3059\n        let response = INSendMessageIntentResponse(code: .success, userActivity: nil)\n        completion(response)\n    }\n\n    // MARK:- \u78ba\u8a8d\u30d5\u30a7\u30fc\u30ba\n    func confirm(sendMessage intent: INSendMessageIntent, completion: (INSendMessageIntentResponse) -> Void) {\n        NSLog(\"confirm %@\", intent.description)\n        let response = INSendMessageIntentResponse(code: .success, userActivity: nil)\n        completion(response)\n    }\n\n    // MARK:- \u89e3\u6c7a\u30d5\u30a7\u30fc\u30ba\n    func resolveRecipients(forSendMessage intent: INSendMessageIntent, with completion: ([INPersonResolutionResult]) -> Void) {\n        NSLog(\"resolveRecipients %@\", intent.recipients?.description ?? \"nil\")\n        guard let recipients = intent.recipients where recipients.count > 0 else {\n            completion([INPersonResolutionResult.needsValue()])\n            return\n        }\n\n        let results:[INPersonResolutionResult] = recipients.flatMap{ INPersonResolutionResult.success(with: $0)}\n        completion(results)\n    }\n\n    func resolveContent(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveContent %@\", intent.content ?? \"nil\")\n        // \u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u306f\u5fc5\u9808\u306a\u306e\u3067\u3001\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001needsValue()\u3092\u8a2d\u5b9a\n        let result = intent.content != nil ? INStringResolutionResult.success(with: intent.content!) :\n            INStringResolutionResult.needsValue()\n        completion(result)\n    }\n\n    func resolveGroupName(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveGroupName %@\", intent.groupName ?? \"nil\")\n        // \u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u9001\u4fe1\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u4e0d\u8981\n        let notRequired = INStringResolutionResult.notRequired()\n        completion(notRequired)\n    }\n\n    func resolveSender(forSendMessage intent: INSendMessageIntent, with completion: (INPersonResolutionResult) -> Void) {\n        NSLog(\"resolveSender %@\", intent.sender?.displayName ?? \"nil\")\n        // \u9001\u4fe1\u8005\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u300c\u3042\u306a\u305f\u300d\u304c\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u3059\u308b\n        let sender = intent.sender == nil ? INPersonResolutionResult.success(with: INPerson(handle: \"\u3042\u306a\u305f\u306eID\", displayName: \"\u3042\u306a\u305f\", contactIdentifier: nil))\n            : INPersonResolutionResult.success(with: intent.sender!)\n        completion(sender)\n    }\n\n    func resolveServiceName(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveServiceName %@\", intent.description)\n        let notRequired = INStringResolutionResult.notRequired()\n        // \u30b5\u30fc\u30d3\u30b9\u540d\u306f\u4eca\u56de\u306f\u4e0d\u8981\n        completion(notRequired)\n    }\n\n}\n\n\n\n\u7d50\u679c\n\u5b9f\u884c\u3057\u307e\u3059\u3002SiriExtension\u306f\u30de\u30c3\u30d7\u3042\u308b\u3044\u306f\u3001Siri\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c\u6642\u306f\u3069\u3061\u3089\u304b\u3089\u547c\u3070\u308c\u3066\u3044\u308b\u304b\u3001\u805e\u304b\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u30a2\u30d7\u30ea\u540d\u3092\u5165\u308c\u306a\u3044\u3068\u4e0a\u624b\u306b\u4f1a\u8a71\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u30a2\u30d7\u30ea\u540d\u3092\"\u3042\u3093\u305a\"\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u7ae0\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u300c\u9001\u4fe1\u300d\u3092\u9078\u629e\u3059\u308b\u3068\u3001\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u3084\u9001\u4fe1\u5148\u3092\u5165\u308c\u306a\u3044\u3068MessageHandler\u306eneedsValue()\u304c\u300c\u305d\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3042\u308b\u65e8\u300d\u3092\u30e6\u30fc\u30b6\u30fc\u306b\u4f1d\u3048\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u4ed6\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u306e\u203b1\u306b\u306f\u7591\u554f\u304c\u3042\u308a\u3001\u9001\u4fe1\u5148\u3092\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002INPersonResolutionResult\u3068\u3057\u3066\u3001\u9001\u4fe1\u5148\u4e00\u4eba\u4e00\u4eba\u306b\u5bfe\u3057\u3066\u8a55\u4fa1\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u9001\u4fe1\u5148\u304c\u306a\u3044\u5834\u5408\u3001\u8a55\u4fa1\u306e\u5148\u304c\u306a\u3044\u306e\u3067\u3059\u3088\u306d\u3002\u306a\u306e\u3067\u3001\u914d\u5217\u95771\u306e\u8a55\u4fa1\u7d50\u679c\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n    // MARK:- \u89e3\u6c7a\u30d5\u30a7\u30fc\u30ba\n    func resolveRecipients(forSendMessage intent: INSendMessageIntent, with completion: ([INPersonResolutionResult]) -> Void) {\n        NSLog(\"resolveRecipients %@\", intent.recipients?.description ?? \"nil\")\n        guard let recipients = intent.recipients where recipients.count > 0 else {\n            // \u203b1\n            completion([INPersonResolutionResult.needsValue()])\n            return\n        }\n\n\n\u306a\u3093\u3060\u304b\u5909\u306a\u611f\u3058\u3067\u3059\u3002[]\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u306e\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u3068\u300c\u3053\u306eApp\u3092\u64cd\u4f5c\u3059\u308b\u306b\u306f\u4e91\u3005\u300d\u3068\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002Apple\u306e\u30e6\u30cb\u30b3\u30fc\u30f3\u30c1\u30e3\u30c3\u30c8\u306e\u4f8b\u3092\u898b\u3066\u3082\u3001\u3053\u3046\u66f8\u304f\u306e\u304c\u6b63\u89e3\u3063\u307d\u3044\u3067\u3059\u304c\u30fb\u30fb\u30fb\u30d0\u30b0\uff1f\n\nApple\u306e\u30e6\u30cb\u30b3\u30fc\u30f3\u30c1\u30e3\u30c3\u30c8\u306e\u4f8b\n        } else {\n            // No recipients are provided. We need to prompt for a value.\n            completion([INPersonResolutionResult.needsValue()])\n        }\n    }\n\n\n\u6b21\u306fIntentsUI\u306e\u5b9f\u88c5\u3084\u3089\u3001\u8a9e\u5f59\u306e\u767b\u9332\u306a\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u305d\u308c\u306f\u307e\u305f\u4eca\u5ea6\u3002\n# \u6982\u8981\nSiriKit - Siri\u3067\u3042\u306a\u305f\u306e\u30a2\u30d7\u30ea\u3092\u4f7f\u3044\u3063\u3066\u3082\u3089\u3046\u305f\u3081\u306e\u6a5f\u80fd - \u3092\u4f7f\u3063\u3066\u3001\u5b9f\u969b\u306bSiri\u3068\u30a2\u30d7\u30ea\u3092\u9023\u643a\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u306e\u3084\u308a\u53d6\u308a\u3092\u884c\u3046\u30b3\u30fc\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u3084\u308a\u53d6\u308a\u306a\u306e\u3067\u3001\u5b9f\u969b\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u9001\u4fe1\u3057\u307e\u305b\u3093\u3002\n#### \u7528\u8a9e\n\u30c9\u30e1\u30a4\u30f3\u3001Intents\u3001\u30d5\u30a7\u30fc\u30ba\n\u7528\u8a9e\u306e\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306b\u7ffb\u8a33\u8a18\u4e8b\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n#### SiriKit\u306b\u95a2\u3059\u308b\u4ed6\u306e\u8a18\u4e8b\n[1.SiriKit Introduction\u306e\u8a33](http://qiita.com/shintarogit/private/1e4df29de66adb342fbe)\n[2.Creating the Intents Extension(\u672c\u5bb6\u306e\u8a18\u4e8b)](https://developer.apple.com/library/prerelease/content/documentation/Intents/Conceptual/SiriIntegrationGuide/CreatingtheIntentsExtension.html) \u2190 \u52d5\u304d\u306e\u6982\u8981\u3068\u3001Xcode\u306e\u8a2d\u5b9a\u306a\u306e\u3067\u3001\u3059\u3063\u98db\u3070\u3057\u307e\u3057\u305f\u3002\n[3.Resolving and Handling Intents\u306e\u8a33](http://qiita.com/shintarogit/private/4cdab590bb1ec0af0b45)\n# \u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3092\u884c\u3046\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n2.Creating the Intents Extension \u306b Intents Extension\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\u65b9\u6cd5\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u4f8b\u306b\u3088\u3063\u3066\u3001\u305d\u3053\u306f\u3059\u3063\u98db\u3070\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u305f\u5f8c\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u3063\u307d\u3044\u30a2\u30d7\u30ea\u3092Siri\u304b\u3089\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306e\u904e\u7a0b\u3092\u8aac\u660e\u3057\u307e\u3059\u3002\n## 1.\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u3092\u6c7a\u3081\u308b\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-07-03 16.05.09.png](https://qiita-image-store.s3.amazonaws.com/0/64994/6d57e52d-3d52-5119-8d10-e79b5cef5ccb.png)\nIntents Extension(\u3053\u3053\u3067\u306fSiriIntents\u3068\u3044\u3046\u540d\u524d\u306b\u3057\u307e\u3057\u305f)\u306einfo.plist\u3092\u958b\u304d\u3001\u3055\u3089\u306bIntentsSupported\u3092\u958b\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068\u30ef\u30fc\u30af\u30a2\u30a6\u30c8\u7cfb\u306eIntents\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306a\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\u3057\u3066\u3001INSendMessageIntent\u306b\u3057\u307e\u3059\u3002\u3053\u308c\u3067Siri\u306b\u5bfe\u3057\u3066\u3001\u3053\u306e\u30a2\u30d7\u30ea\u304c\u30e1\u30c3\u30bb\u30fc\u30b8\u30c9\u30e1\u30a4\u30f3\u306eINSendMessageIntent\u3092\u610f\u56f3\u3059\u308b\u8a00\u8449\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5ba3\u8a00\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\u30ed\u30c3\u30af\u4e2d\u306b\u3053\u308c\u3092\u4f7f\u3048\u308b\u304b\u3069\u3046\u304b\u3092\u6c7a\u3081\u308bIntentsRestictedWhileLocked\u306f\u300c\u306a\u3057\u300d\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u3001\u3067\u3082\u3044\u3044\u3067\u3059\u304c\u3002\u3002\u3002\n## 2.INExtension\u7d99\u627f\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-07-03 16.28.33.png](https://qiita-image-store.s3.amazonaws.com/0/64994/fcf031c1-a625-3dea-409f-8bc74dd847eb.png)\n\u5148\u307b\u3069\u306einfo.plist\u306bINExtension\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9 - \u3053\u3053\u3067\u306fSiriExntension - \u3092\u4f5c\u3063\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u540d\u3092\u5b9a\u7fa9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3060\u3068IntentHandler\u30af\u30e9\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306fINExtension\u306fIntents Handler\u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30af\u30e9\u30b9\u306b\u5f53\u305f\u308b\u306e\u3067\u3001\u30cf\u30f3\u30c9\u30e9\u304c\u30d5\u30a1\u30af\u30c8\u30ea\u306b\u306a\u3063\u3066\u308b\u306e\u306f\u306a\u3093\u3060\u304b\u6c17\u6301\u3061\u60aa\u3044\u3067\u3059\u306e\u3067\u3002\n\n```swift:SiriExtension.swift\nimport Intents\nclass SiriExtension: INExtension {\n    override func handler(for intent: INIntent) -> AnyObject? {\n        switch intent {\n        case is INSendMessageIntent :\n            return MessageHandler()\n        default:\n            NSLog(\"\u60f3\u5b9a\u5916\u306eIntents\u3092\u53d7\u4fe1\u3057\u307e\u3057\u305f: %@\", intent.description)\n            return nil\n        }\n    }\n}\n```\n\n## 3.Handler\u3092\u4f5c\u6210\u3059\u308b\n\u3067\u306f\u3001\u5b9f\u969b\u306bSiriExtension\u3067\u751f\u6210\u3055\u308c\u308b\u30cf\u30f3\u30c9\u30e9 - \u3053\u3053\u3067\u306fMessageHandler - \u5b9f\u88c5\u3057\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u307e\u3067\u306b\u5fc5\u8981\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u4fe1\u306fINSendMessagIntentHandling\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```swift:MessageHandler.swift\nimport Foundation\nimport Intents\n\nclass MessageHandler:NSObject,INSendMessageIntentHandling {\n    \n    // MARK:- Handling Intent\u30d5\u30a7\u30fc\u30ba\n    func handle(sendMessage intent: INSendMessageIntent, completion: (INSendMessageIntentResponse) -> Void) {\n        NSLog(\"handle %@\", intent.description)\n        // TODO \u672c\u5f53\u306f\u3053\u3053\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\u51e6\u7406\u3057\u307e\u3059\n        let response = INSendMessageIntentResponse(code: .success, userActivity: nil)\n        completion(response)\n    }\n    \n    // MARK:- \u78ba\u8a8d\u30d5\u30a7\u30fc\u30ba\n    func confirm(sendMessage intent: INSendMessageIntent, completion: (INSendMessageIntentResponse) -> Void) {\n        NSLog(\"confirm %@\", intent.description)\n        let response = INSendMessageIntentResponse(code: .success, userActivity: nil)\n        completion(response)\n    }\n    \n    // MARK:- \u89e3\u6c7a\u30d5\u30a7\u30fc\u30ba\n    func resolveRecipients(forSendMessage intent: INSendMessageIntent, with completion: ([INPersonResolutionResult]) -> Void) {\n        NSLog(\"resolveRecipients %@\", intent.recipients?.description ?? \"nil\")\n        guard let recipients = intent.recipients where recipients.count > 0 else {\n            completion([INPersonResolutionResult.needsValue()])\n            return\n        }\n\n        let results:[INPersonResolutionResult] = recipients.flatMap{ INPersonResolutionResult.success(with: $0)}\n        completion(results)\n    }\n    \n    func resolveContent(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveContent %@\", intent.content ?? \"nil\")\n        // \u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u306f\u5fc5\u9808\u306a\u306e\u3067\u3001\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001needsValue()\u3092\u8a2d\u5b9a\n        let result = intent.content != nil ? INStringResolutionResult.success(with: intent.content!) :\n            INStringResolutionResult.needsValue()\n        completion(result)\n    }\n    \n    func resolveGroupName(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveGroupName %@\", intent.groupName ?? \"nil\")\n        // \u30b0\u30eb\u30fc\u30d7\u306b\u5bfe\u3057\u3066\u9001\u4fe1\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u4e0d\u8981\n        let notRequired = INStringResolutionResult.notRequired()\n        completion(notRequired)\n    }\n    \n    func resolveSender(forSendMessage intent: INSendMessageIntent, with completion: (INPersonResolutionResult) -> Void) {\n        NSLog(\"resolveSender %@\", intent.sender?.displayName ?? \"nil\")\n        // \u9001\u4fe1\u8005\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u300c\u3042\u306a\u305f\u300d\u304c\u9001\u4fe1\u3059\u308b\u3053\u3068\u306b\u3059\u308b\n        let sender = intent.sender == nil ? INPersonResolutionResult.success(with: INPerson(handle: \"\u3042\u306a\u305f\u306eID\", displayName: \"\u3042\u306a\u305f\", contactIdentifier: nil))\n            : INPersonResolutionResult.success(with: intent.sender!)\n        completion(sender)\n    }\n    \n    func resolveServiceName(forSendMessage intent: INSendMessageIntent, with completion: (INStringResolutionResult) -> Void) {\n        NSLog(\"resolveServiceName %@\", intent.description)\n        let notRequired = INStringResolutionResult.notRequired()\n        // \u30b5\u30fc\u30d3\u30b9\u540d\u306f\u4eca\u56de\u306f\u4e0d\u8981\n        completion(notRequired)\n    }\n    \n}\n```\n\n# \u7d50\u679c\n\u5b9f\u884c\u3057\u307e\u3059\u3002SiriExtension\u306f\u30de\u30c3\u30d7\u3042\u308b\u3044\u306f\u3001Siri\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u306e\u3067\u3001\u30c7\u30d0\u30c3\u30b0\u5b9f\u884c\u6642\u306f\u3069\u3061\u3089\u304b\u3089\u547c\u3070\u308c\u3066\u3044\u308b\u304b\u3001\u805e\u304b\u308c\u307e\u3059\u3002\u306a\u304a\u3001\u30a2\u30d7\u30ea\u540d\u3092\u5165\u308c\u306a\u3044\u3068\u4e0a\u624b\u306b\u4f1a\u8a71\u3067\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u30a2\u30d7\u30ea\u540d\u3092\"\u3042\u3093\u305a\"\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6587\u7ae0\u306b\u306a\u308a\u307e\u3059\u3002\n<img width=\"320\" alt=\"IMG_0007.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/64994/31aea166-e4c0-9493-4673-d1000abd8df0.jpeg\">\n\u300c\u9001\u4fe1\u300d\u3092\u9078\u629e\u3059\u308b\u3068\u3001\n<img width=\"320\" alt=\"IMG_0008.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/64994/796429b6-1d65-d000-a717-06a59afe8bc4.jpeg\">\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u3084\u9001\u4fe1\u5148\u3092\u5165\u308c\u306a\u3044\u3068MessageHandler\u306eneedsValue()\u304c\u300c\u305d\u306e\u9805\u76ee\u304c\u5fc5\u8981\u3067\u3042\u308b\u65e8\u300d\u3092\u30e6\u30fc\u30b6\u30fc\u306b\u4f1d\u3048\u307e\u3059\u3002\n<img width=\"320\" alt=\"IMG_0009.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/64994/ed396dd9-2257-a5b2-e35e-db1fab1b1c49.jpeg\">\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n# \u4ed6\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u4e0a\u306e\u203b1\u306b\u306f\u7591\u554f\u304c\u3042\u308a\u3001\u9001\u4fe1\u5148\u3092\u8a2d\u5b9a\u3057\u306a\u304f\u3066\u3082\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059\u3002INPersonResolutionResult\u3068\u3057\u3066\u3001\u9001\u4fe1\u5148\u4e00\u4eba\u4e00\u4eba\u306b\u5bfe\u3057\u3066\u8a55\u4fa1\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u3082\u305d\u3082\u9001\u4fe1\u5148\u304c\u306a\u3044\u5834\u5408\u3001\u8a55\u4fa1\u306e\u5148\u304c\u306a\u3044\u306e\u3067\u3059\u3088\u306d\u3002\u306a\u306e\u3067\u3001\u914d\u5217\u95771\u306e\u8a55\u4fa1\u7d50\u679c\u3092\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n```swift\n    // MARK:- \u89e3\u6c7a\u30d5\u30a7\u30fc\u30ba\n    func resolveRecipients(forSendMessage intent: INSendMessageIntent, with completion: ([INPersonResolutionResult]) -> Void) {\n        NSLog(\"resolveRecipients %@\", intent.recipients?.description ?? \"nil\")\n        guard let recipients = intent.recipients where recipients.count > 0 else {\n            // \u203b1\n            completion([INPersonResolutionResult.needsValue()])\n            return\n        }\n```\n<img width=\"320\" alt=\"IMG_0010.jpg\" src=\"https://qiita-image-store.s3.amazonaws.com/0/64994/9f3bd701-ef53-222c-4027-9473756c3025.jpeg\">\n\n\u306a\u3093\u3060\u304b\u5909\u306a\u611f\u3058\u3067\u3059\u3002[]\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u306e\uff1f\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u3068\u300c\u3053\u306eApp\u3092\u64cd\u4f5c\u3059\u308b\u306b\u306f\u4e91\u3005\u300d\u3068\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002[Apple\u306e\u30e6\u30cb\u30b3\u30fc\u30f3\u30c1\u30e3\u30c3\u30c8\u306e\u4f8b](https://developer.apple.com/library/prerelease/content/samplecode/UnicornChat/Listings/SiriExtension_UCSendMessageIntentHandler_swift.html)\u3092\u898b\u3066\u3082\u3001\u3053\u3046\u66f8\u304f\u306e\u304c\u6b63\u89e3\u3063\u307d\u3044\u3067\u3059\u304c\u30fb\u30fb\u30fb\u30d0\u30b0\uff1f\n\n```swift:Apple\u306e\u30e6\u30cb\u30b3\u30fc\u30f3\u30c1\u30e3\u30c3\u30c8\u306e\u4f8b\n        } else {\n            // No recipients are provided. We need to prompt for a value.\n            completion([INPersonResolutionResult.needsValue()])\n        }\n    }\n```\n\n\u6b21\u306fIntentsUI\u306e\u5b9f\u88c5\u3084\u3089\u3001\u8a9e\u5f59\u306e\u767b\u9332\u306a\u306e\u3067\u3059\u304c\u30fb\u30fb\u30fb\u305d\u308c\u306f\u307e\u305f\u4eca\u5ea6\u3002\n", "tags": ["SiriKit", "ios10"]}