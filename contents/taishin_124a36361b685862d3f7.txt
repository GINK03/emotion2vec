{"context": "cloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\u4ee5\u524d\u3001CFn \u2192 Ansible \u2192 Serverspec\u3092CircleCI\u3067CI\u3059\u308b\nhttp://qiita.com/taishin/items/89b42106582a2aa5495b\n\u3068\u3044\u3046\u306e\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u3068\u304d\u306fCFn\u3068Ansible\u3092\u540c\u6642\u306b\u30c6\u30b9\u30c8\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u308c\u3089\u306f\u5206\u3051\u3066\u7ba1\u7406\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u3001Ansible\u306egit\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u6642\u306b\u3001AMI\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nhttps://github.com/taishin/ami-ci\nEC2\u306e\u8d77\u52d5\u306faws-cli\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u524d\u306eCFn\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3057\u305f\u3002\ncircle.yml\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u4e0b\u8a18\u3067\u3059\u3002\n\n\npre\u90e8\u5206\n\nCFn\u3067EC2\u3092\u8d77\u52d5\nansible\u3067\u30c7\u30d7\u30ed\u30a4\n\n\n\noverride\u90e8\u5206\n\nansible\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eAMI\u3092\u4f5c\u6210\n\u4f5c\u6210\u3057\u305fAMI\u3092\u4f7f\u3063\u3066\u3001CFn\u3067EC2\u3092\u8d77\u52d5\nserverspec\u3067\u30c6\u30b9\u30c8\n\n\n\npost\u90e8\u5206\n\nCFn\u3092\u524a\u9664\nAMI\u306b\u30bf\u30b0\u4ed8\u3051\n\n\n\n\ncircle.yml\nmachine:\n  timezone: Asia/Tokyo\n  ruby:\n    version:\n      2.1.2\n  environment:\n    AWS_AMI_ID: ami-6154bb00\n    AWS_INSTANCE_TYPE: t2.micro\n    AWS_CF_STACK_NAME: ci-test\n    SSH_USER: ec2-user\n    AMI_NAME: ami-ci\n\ndependencies:\n  pre:\n    - sudo pip install ansible\n\ntest:\n  pre:\n    - aws cloudformation create-stack --stack-name $AWS_CF_STACK_NAME --template-body file://ami-ci.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=$AWS_AMI_ID ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name $AWS_CF_STACK_NAME\n    - aws cloudformation describe-stacks --stack-name $AWS_CF_STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"PublicIP\") | .OutputValue' > /tmp/publicip.txt\n    - aws cloudformation describe-stacks --stack-name $AWS_CF_STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"InstanceId\") | .OutputValue' > /tmp/instanceid.txt\n    - echo \"`cat /tmp/publicip.txt` testserver\" >> /tmp/hosts.txt\n    - cp /etc/hosts .\n    - sudo bash -c \"cat hosts /tmp/hosts.txt | tee /etc/hosts\"\n    - echo \"Host testserver\" >> ~/.ssh/config\n    - echo \"User $SSH_USER\" >> ~/.ssh/config\n    - ssh -t $SSH_USER@testserver sudo yum update -y\n    - ssh -t $SSH_USER@testserver sudo yum install epel-release -y\n    - ansible-playbook -i ansible/hosts ansible/nginx.yml\n\n  override:\n    - aws ec2 create-image --name $AMI_NAME-`git log -n 1 --format=%H` --instance-id `cat /tmp/instanceid.txt` | jq -r '.ImageId' > /tmp/imageid.txt\n    - sleep 300\n    - aws cloudformation create-stack --stack-name ${AWS_CF_STACK_NAME}-2 --template-body file://ami-ci.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=`cat /tmp/imageid.txt` ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name ${AWS_CF_STACK_NAME}-2\n    - aws cloudformation describe-stacks --stack-name ${AWS_CF_STACK_NAME}-2 | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"PublicIP\") | .OutputValue' > /tmp/publicip.txt\n    - echo \"`cat /tmp/publicip.txt` amitestserver\" >> /tmp/hosts2.txt\n    - cp /etc/hosts .\n    - sudo bash -c \"cat hosts /tmp/hosts2.txt | tee /etc/hosts\"\n    - echo \"Host amitestserver\" >> ~/.ssh/config\n    - echo \"User $SSH_USER\" >> ~/.ssh/config\n    - bundle exec rake spec:amitestserver\n  post:\n    - aws cloudformation delete-stack --stack-name $AWS_CF_STACK_NAME\n    - aws cloudformation delete-stack --stack-name ${AWS_CF_STACK_NAME}-2\n    - aws ec2 create-tags --resources `cat /tmp/imageid.txt` --tags Key=commitId,Value=`git log -n 1 --format=%H` Key=Name,Value=ami-ci-`git log -n 1 --format=%H` Key=Name,Value=$AMI_NAME\nContact GitHub API Training Shop Blog About\n\n\n\u8d77\u52d5\u6642\u306b\u90fd\u5ea6Ansible\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u306a\u304f\u306a\u308a\u3001\u8d77\u52d5\u3082\u65e9\u304f\u306a\u308b\u306e\u3067\u3001AutoScale\u3068\u304b\u3067\u3082\u4f7f\u3044\u3084\u3059\u304f\u306a\u308b\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\n\ncloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\n\u4ee5\u524d\u3001CFn \u2192 Ansible \u2192 Serverspec\u3092CircleCI\u3067CI\u3059\u308b\nhttp://qiita.com/taishin/items/89b42106582a2aa5495b\n\u3068\u3044\u3046\u306e\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\u3053\u306e\u3068\u304d\u306fCFn\u3068Ansible\u3092\u540c\u6642\u306b\u30c6\u30b9\u30c8\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3092\u3068\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u308c\u3089\u306f\u5206\u3051\u3066\u7ba1\u7406\u3057\u305f\u65b9\u304c\u3044\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u306a\u306e\u3067\u3001Ansible\u306egit\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30d7\u30c3\u30b7\u30e5\u3057\u305f\u6642\u306b\u3001AMI\u3092\u4f5c\u6210\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttps://github.com/taishin/ami-ci\n\nEC2\u306e\u8d77\u52d5\u306faws-cli\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u524d\u306eCFn\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3057\u305f\u3002\n\ncircle.yml\u3067\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u4e0b\u8a18\u3067\u3059\u3002\n\n- pre\u90e8\u5206\n\t1. CFn\u3067EC2\u3092\u8d77\u52d5\n\t2. ansible\u3067\u30c7\u30d7\u30ed\u30a4\n\n- override\u90e8\u5206\n\t1. ansible\u3067\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eAMI\u3092\u4f5c\u6210\n\t2. \u4f5c\u6210\u3057\u305fAMI\u3092\u4f7f\u3063\u3066\u3001CFn\u3067EC2\u3092\u8d77\u52d5\n\t3. serverspec\u3067\u30c6\u30b9\u30c8\n\n- post\u90e8\u5206\n\t1. CFn\u3092\u524a\u9664\n\t2. AMI\u306b\u30bf\u30b0\u4ed8\u3051\n\n```yaml:circle.yml\nmachine:\n  timezone: Asia/Tokyo\n  ruby:\n    version:\n      2.1.2\n  environment:\n    AWS_AMI_ID: ami-6154bb00\n    AWS_INSTANCE_TYPE: t2.micro\n    AWS_CF_STACK_NAME: ci-test\n    SSH_USER: ec2-user\n    AMI_NAME: ami-ci\n\ndependencies:\n  pre:\n    - sudo pip install ansible\n\ntest:\n  pre:\n    - aws cloudformation create-stack --stack-name $AWS_CF_STACK_NAME --template-body file://ami-ci.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=$AWS_AMI_ID ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name $AWS_CF_STACK_NAME\n    - aws cloudformation describe-stacks --stack-name $AWS_CF_STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"PublicIP\") | .OutputValue' > /tmp/publicip.txt\n    - aws cloudformation describe-stacks --stack-name $AWS_CF_STACK_NAME | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"InstanceId\") | .OutputValue' > /tmp/instanceid.txt\n    - echo \"`cat /tmp/publicip.txt` testserver\" >> /tmp/hosts.txt\n    - cp /etc/hosts .\n    - sudo bash -c \"cat hosts /tmp/hosts.txt | tee /etc/hosts\"\n    - echo \"Host testserver\" >> ~/.ssh/config\n    - echo \"User $SSH_USER\" >> ~/.ssh/config\n    - ssh -t $SSH_USER@testserver sudo yum update -y\n    - ssh -t $SSH_USER@testserver sudo yum install epel-release -y\n    - ansible-playbook -i ansible/hosts ansible/nginx.yml\n    \n  override:\n    - aws ec2 create-image --name $AMI_NAME-`git log -n 1 --format=%H` --instance-id `cat /tmp/instanceid.txt` | jq -r '.ImageId' > /tmp/imageid.txt\n    - sleep 300\n    - aws cloudformation create-stack --stack-name ${AWS_CF_STACK_NAME}-2 --template-body file://ami-ci.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=`cat /tmp/imageid.txt` ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name ${AWS_CF_STACK_NAME}-2\n    - aws cloudformation describe-stacks --stack-name ${AWS_CF_STACK_NAME}-2 | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"PublicIP\") | .OutputValue' > /tmp/publicip.txt\n    - echo \"`cat /tmp/publicip.txt` amitestserver\" >> /tmp/hosts2.txt\n    - cp /etc/hosts .\n    - sudo bash -c \"cat hosts /tmp/hosts2.txt | tee /etc/hosts\"\n    - echo \"Host amitestserver\" >> ~/.ssh/config\n    - echo \"User $SSH_USER\" >> ~/.ssh/config\n    - bundle exec rake spec:amitestserver\n  post:\n    - aws cloudformation delete-stack --stack-name $AWS_CF_STACK_NAME\n    - aws cloudformation delete-stack --stack-name ${AWS_CF_STACK_NAME}-2\n    - aws ec2 create-tags --resources `cat /tmp/imageid.txt` --tags Key=commitId,Value=`git log -n 1 --format=%H` Key=Name,Value=ami-ci-`git log -n 1 --format=%H` Key=Name,Value=$AMI_NAME\nContact GitHub API Training Shop Blog About\n```\n\n\n\u8d77\u52d5\u6642\u306b\u90fd\u5ea6Ansible\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3082\u306a\u304f\u306a\u308a\u3001\u8d77\u52d5\u3082\u65e9\u304f\u306a\u308b\u306e\u3067\u3001AutoScale\u3068\u304b\u3067\u3082\u4f7f\u3044\u3084\u3059\u304f\u306a\u308b\u304b\u306a\u30fc\u3068\u601d\u3044\u307e\u3059\u3002\n\n", "tags": ["CircleCI", "Ansible", "AWS", "serverspec"]}