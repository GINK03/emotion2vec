{"context": "Google \u304b\u3089\u6b63\u5f0f\u306b Tensorflow \u304c Windows \u5bfe\u5fdc\u3057\u3066 GPU \u304c\u4f7f\u3048\u308b\u3068\u306e\u30a2\u30ca\u30a6\u30f3\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\nhttps://developers.googleblog.com/2016/11/tensorflow-0-12-adds-support-for-windows.html\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u74b0\u5883\n\nOS)  Windows 10 Pro\nGPU) NVIDIA GeForce GTX 960\n\n\u3053\u306e\u74b0\u5883\u3067 TensorFlow \u3092\u8a66\u3057\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u308b\u3079\u304fD\u30c9\u30e9\u30a4\u30d6\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nCUDA \u3068 cuDNN \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nCUDA Toolkit 8.0\nhttps://developer.nvidia.com/cuda-downloads\n\nOperating System: Windows\nArchitecture: x86_64\nVersion: 10\nInstaller Type: exe (network)\n\n\u666e\u901a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\n\ncuDNN v5.1\n\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767b\u9332\u3057\u3066\u5229\u7528\u898f\u7d04\u306b\u540c\u610f\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\nhttps://developer.nvidia.com/rdp/cudnn-download\ncuDNN v5.1 Library for Windows 10 \u3092\u843d\u3068\u3057\u3066 zip \u5185\u306e cuda \u30d5\u30a9\u30eb\u30c0\u5185\u3092 C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0 \u306b\u30b3\u30d4\u30fc\u5c55\u958b\u3057\u307e\u3059\u3002\n\nPython 3.5 \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nWindows \u306e\u5834\u5408 Anaconda \u3092\u4f7f\u3063\u305f\u65b9\u304c\u5f8c\u3005\u697d\u306a\u306e\u3067\u3053\u3061\u3089\u3092\u5968\u3081\u307e\u3059\u3002 (2017/01/08 \u8ffd\u8a18)http://tilfin.hatenablog.com/entry/2017/01/08/220556 \u5185\u306b\u8a18\u8f09\u3057\u3066\u307e\u3059\u3002\n\u666e\u901a\u306b\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068 32bit \u7248\u306a\u306e\u3067\u3001https://www.python.org/downloads/windows/ \u304b\u3089 Download Windows x86-64 executable installer \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u203b \u306a\u304a\u3001 D:\\Python35 \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n3.5\u7cfb\u306f\u74b0\u5883\u5909\u6570\u306e\u8ffd\u52a0\u3084 pip \u3082\u540c\u6642\u306b\u5165\u308c\u3066\u304f\u308c\u307e\u3057\u305f\u3002\nPowerShell \u304b\u3089\u4e00\u5fdc pip \u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3082\u3057\u307e\u3057\u305f\u3002\n\nvirtualenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u5b9f\u884c\u74b0\u5883\u7528\u306e\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5165\u308c\u307e\u3059\u3002\nPS D:\\> pip install --upgrade virtualenv\nCollecting virtualenv\n  Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB)\n    100% |################################| 1.8MB 646kB/s\nInstalling collected packages: virtualenv\nSuccessfully installed virtualenv-15.1.0\n\n\nTensorFlow \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nPowerShell \u304b\u3089 pip \u3067 tensorflow \u3068 tensorflow-gpu \u3092\u5165\u308c\u307e\u3059\u3002\nhttps://pypi.python.org/pypi/tensorflow\n\ntensorflow\nPS D:\\> pip install tensorflow\nProcessing y:\\tensorflow-0.12.0rc0-cp35-cp35m-win_amd64.whl\nCollecting six>=1.10.0 (from tensorflow==0.12.0rc0)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting protobuf==3.1.0 (from tensorflow==0.12.0rc0)\n  Downloading protobuf-3.1.0-py2.py3-none-any.whl (339kB)\n    100% |################################| 348kB 2.2MB/s\nCollecting wheel>=0.26 (from tensorflow==0.12.0rc0)\n  Using cached wheel-0.29.0-py2.py3-none-any.whl\nCollecting numpy>=1.11.0 (from tensorflow==0.12.0rc0)\n  Downloading numpy-1.11.2-cp35-none-win_amd64.whl (7.6MB)\n    100% |################################| 7.6MB 179kB/s\nRequirement already satisfied (use --upgrade to upgrade): setuptools in d:\\python35\\lib\\site-packages (from protobuf==3\n1.0->tensorflow==0.12.0rc0)\nInstalling collected packages: six, protobuf, wheel, numpy, tensorflow\nSuccessfully installed numpy-1.11.2 protobuf-3.1.0 six-1.10.0 tensorflow-0.12.0rc0 wheel-0.29.0\n\n\ntensorflow-gpu\nPS D:\\> pip install tensorflow-gpu\nCollecting tensorflow-gpu\n  Downloading tensorflow_gpu-0.12.0rc0-cp35-cp35m-win_amd64.whl (32.5MB)\n    100% |################################| 32.5MB 40kB/s\nRequirement already satisfied: wheel>=0.26 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: numpy>=1.11.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: six>=1.10.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: protobuf==3.1.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: setuptools in d:\\python35\\lib\\site-packages (from protobuf==3.1.0->tensorflow-gpu)\nInstalling collected packages: tensorflow-gpu\nSuccessfully installed tensorflow-gpu-0.12.0rc0\n\n\n\u5b9f\u884c\u958b\u59cb\nvirtualenv \u3067 D:\\tensorflow \u306b\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u307e\u3059\u3002\nPS D:\\> virtualenv --system-site-packages D:\\tensorflow\nUsing base prefix 'd:\\\\python35'\nNew python executable in D:\\tensorflow\\Scripts\\python.exe\nInstalling setuptools, pip, wheel...done.\n\n\n\u5b66\u7fd2\u89e3\u6790\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3059\u308b\n\u9069\u5f53\u306a\u3068\u3053\u308d\u3067 \ngit clone --recurse-submodules https://github.com/tensorflow/tensorflow\n\u3057\u307e\u3059\u3002\u81ea\u5206\u306f\u666e\u6bb5 VirtualBox \u306e Linux \u3092\u52d5\u304b\u3057\u3066\u3044\u3066 SMB \u3067\u30d5\u30a1\u30a4\u30eb\u5171\u6709\u3059\u308b\u306e\u3067\u305d\u3061\u3089\u3067\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3057\u305f\u3002\ntensorflow/tensorflow/models \u3092 D:\\tensorflow\\models \u3068\u306a\u308b\u3088\u3046\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\nMNIST \u3092\u8a66\u3059\n\u624b\u66f8\u304d\u6570\u5b57\u306e\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nPS D:\\> cd tensorflow\\tensorflow\\models\\image\\mnist\n\nPS D:\\tensorflow\\models\\image\\mnist> python convolutional.py\n\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cublas64_80.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cudnn64_5.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cufft64_80.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library nvcuda.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library curand64_80.dll locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting data\\train-images-idx3-ubyte.gz\nExtracting data\\train-labels-idx1-ubyte.gz\nExtracting data\\t10k-images-idx3-ubyte.gz\nExtracting data\\t10k-labels-idx1-ubyte.gz\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] F\nound device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] D\nMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0\n:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] C\nreating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] C\nould not identify NUMA node of /job:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been bu\nilt with NUMA support.\nInitialized!\nStep 0 (epoch 0.00), 50.9 ms\nMinibatch loss: 8.334, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 12.1 ms\nMinibatch loss: 3.226, learning rate: 0.010000\nMinibatch error: 4.7%\nValidation error: 7.3%\nStep 200 (epoch 0.23), 12.0 ms\nMinibatch loss: 3.404, learning rate: 0.010000\nMinibatch error: 10.9%\n\uff08\u7701\u7565\uff09\nMinibatch loss: 1.609, learning rate: 0.006302\nMinibatch error: 0.0%\nValidation error: 1.0%\nTest error: 0.8%\n\n\u5272\u3068\u65e9\u304f\u7d42\u308f\u3063\u305f\u306e\u3067 GPU \u304c\u52b9\u3044\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\u4e0a\u624b\u304f\u52d5\u3044\u305f\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u308f\u304b\u308a\u3084\u3059\u3044 ImageNet \u3092\u6b21\u306b\u8a66\u3057\u307e\u3059\u3002\n\nImageNet \u3092\u8a66\u3059\n\u753b\u50cf\u3092\u89e3\u6790\u3057\u3066\u4f55\u306e\u753b\u304b\u3092\u5f53\u3066\u308b ImageNet \u3067\u3059\u3002\nPS D:> cd \\tensorflow\\models\\imagenet\n\n\u307e\u305a\u6e96\u5099\u3067\u3059\u3002 python .\\classify_image.py \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nPS D:\\tensorflow\\models\\image\\imagenet> python .\\classify_image.py\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cublas64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cudnn64_5.\ndll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cufft64_80\n.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library nvcuda.dll\n locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library curand64_8\n0.dll locally\n>> Downloading inception-2015-12-05.tgz 100.0%\nSuccessfully downloaded inception-2015-12-05.tgz 88931400 bytes.\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0)\n -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /jo\nb:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\framework\\op_def_util.cc:332] Op BatchNormWithGlobalNormalization is depr\necated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\ngiant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca (score = 0.89233)\nindri, indris, Indri indri, Indri brevicaudatus (score = 0.00859)\nlesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens (score = 0.00264)\ncustard apple (score = 0.00141)\nearthstar (score = 0.00107)\n\n\u9069\u5f53\u306b M:\\fuji.jpg \u306b\u5bcc\u58eb\u5c71\u306e\u5199\u771f\u3092\u304a\u304d\u307e\u3057\u305f\u3002\npython .\\classify_image.py --image_file M:\\fuji.jpg \u3067\u89e3\u6790\u3055\u305b\u307e\u3059\u3002\nPS D:\\tensorflow\\models\\image\\imagenet> python .\\classify_image.py --image_file M:\\fuji.jpg\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cublas64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cudnn64_5.\ndll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cufft64_80\n.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library nvcuda.dll\n locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library curand64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0)\n -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /jo\nb:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\framework\\op_def_util.cc:332] Op BatchNormWithGlobalNormalization is depr\necated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\nvolcano (score = 0.91087)\nfire screen, fireguard (score = 0.00192)\nalp (score = 0.00162)\nlakeside, lakeshore (score = 0.00130)\ngeyser (score = 0.00077)\n\nvolcano (score = 0.91087) \u706b\u5c71\u3068\u8a8d\u8b58\u3055\u308c\u307e\u3057\u305f\u306d\u3002\u3061\u306a\u307f\u306b\u5199\u771f\u306f\u96ea\u5316\u7ca7\u3057\u3066\u308b\u5bcc\u58eb\u5c71\u3067\u3057\u305f\u3002\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\n\n\u3068\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u3082\u3063\u3068\u30e1\u30e2\u30ea\u304c\u3042\u308b\u3068\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3002\n\u3068\u308a\u3042\u3048\u305a\u7279\u306b\u5d4c\u3089\u305a\u306b\u52d5\u3044\u305f\u306e\u3067\u307f\u306a\u3055\u3093\u3082\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\ntilfin's note \u3088\u308a\u30af\u30ed\u30b9\u30dd\u30b9\u30c8\nGoogle \u304b\u3089\u6b63\u5f0f\u306b Tensorflow \u304c Windows \u5bfe\u5fdc\u3057\u3066 GPU \u304c\u4f7f\u3048\u308b\u3068\u306e\u30a2\u30ca\u30a6\u30f3\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002  \nhttps://developers.googleblog.com/2016/11/tensorflow-0-12-adds-support-for-windows.html\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u74b0\u5883\n* OS)  Windows 10 Pro\n* GPU) NVIDIA GeForce GTX 960\n\n\u3053\u306e\u74b0\u5883\u3067 TensorFlow \u3092\u8a66\u3057\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u308b\u3079\u304f**D**\u30c9\u30e9\u30a4\u30d6\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## CUDA \u3068 cuDNN \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### CUDA Toolkit 8.0\n\nhttps://developer.nvidia.com/cuda-downloads\n\n* Operating System: Windows\n* Architecture: x86_64\n* Version: 10\n* Installer Type: exe (network)\n\n\u666e\u901a\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3092\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\n\n### cuDNN v5.1\n\n\u958b\u767a\u8005\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u767b\u9332\u3057\u3066\u5229\u7528\u898f\u7d04\u306b\u540c\u610f\u3057\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3057\u305f\u3002\n\nhttps://developer.nvidia.com/rdp/cudnn-download\n**cuDNN v5.1 Library for Windows 10** \u3092\u843d\u3068\u3057\u3066 zip \u5185\u306e cuda \u30d5\u30a9\u30eb\u30c0\u5185\u3092 `C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v8.0` \u306b\u30b3\u30d4\u30fc\u5c55\u958b\u3057\u307e\u3059\u3002\n\n## Python 3.5 \u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n**Windows \u306e\u5834\u5408 Anaconda \u3092\u4f7f\u3063\u305f\u65b9\u304c\u5f8c\u3005\u697d\u306a\u306e\u3067\u3053\u3061\u3089\u3092\u5968\u3081\u307e\u3059\u3002 (2017/01/08 \u8ffd\u8a18)<br>http://tilfin.hatenablog.com/entry/2017/01/08/220556 \u5185\u306b\u8a18\u8f09\u3057\u3066\u307e\u3059\u3002**\n\n\u666e\u901a\u306b\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3068 32bit \u7248\u306a\u306e\u3067\u3001https://www.python.org/downloads/windows/ \u304b\u3089 **Download Windows x86-64 executable installer** \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u203b \u306a\u304a\u3001 `D:\\Python35` \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\n\n\n3.5\u7cfb\u306f\u74b0\u5883\u5909\u6570\u306e\u8ffd\u52a0\u3084 pip \u3082\u540c\u6642\u306b\u5165\u308c\u3066\u304f\u308c\u307e\u3057\u305f\u3002\nPowerShell \u304b\u3089\u4e00\u5fdc pip \u306e\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3082\u3057\u307e\u3057\u305f\u3002\n\n### virtualenv \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u5b9f\u884c\u74b0\u5883\u7528\u306e\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5165\u308c\u307e\u3059\u3002\n\n```\nPS D:\\> pip install --upgrade virtualenv\nCollecting virtualenv\n  Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB)\n    100% |################################| 1.8MB 646kB/s\nInstalling collected packages: virtualenv\nSuccessfully installed virtualenv-15.1.0\n```\n\n## TensorFlow \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nPowerShell \u304b\u3089 pip \u3067 tensorflow \u3068 tensorflow-gpu \u3092\u5165\u308c\u307e\u3059\u3002\nhttps://pypi.python.org/pypi/tensorflow\n\n### tensorflow\n\n```\nPS D:\\> pip install tensorflow\nProcessing y:\\tensorflow-0.12.0rc0-cp35-cp35m-win_amd64.whl\nCollecting six>=1.10.0 (from tensorflow==0.12.0rc0)\n  Using cached six-1.10.0-py2.py3-none-any.whl\nCollecting protobuf==3.1.0 (from tensorflow==0.12.0rc0)\n  Downloading protobuf-3.1.0-py2.py3-none-any.whl (339kB)\n    100% |################################| 348kB 2.2MB/s\nCollecting wheel>=0.26 (from tensorflow==0.12.0rc0)\n  Using cached wheel-0.29.0-py2.py3-none-any.whl\nCollecting numpy>=1.11.0 (from tensorflow==0.12.0rc0)\n  Downloading numpy-1.11.2-cp35-none-win_amd64.whl (7.6MB)\n    100% |################################| 7.6MB 179kB/s\nRequirement already satisfied (use --upgrade to upgrade): setuptools in d:\\python35\\lib\\site-packages (from protobuf==3\n1.0->tensorflow==0.12.0rc0)\nInstalling collected packages: six, protobuf, wheel, numpy, tensorflow\nSuccessfully installed numpy-1.11.2 protobuf-3.1.0 six-1.10.0 tensorflow-0.12.0rc0 wheel-0.29.0\n```\n\n### tensorflow-gpu\n\n```\nPS D:\\> pip install tensorflow-gpu\nCollecting tensorflow-gpu\n  Downloading tensorflow_gpu-0.12.0rc0-cp35-cp35m-win_amd64.whl (32.5MB)\n    100% |################################| 32.5MB 40kB/s\nRequirement already satisfied: wheel>=0.26 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: numpy>=1.11.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: six>=1.10.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: protobuf==3.1.0 in d:\\python35\\lib\\site-packages (from tensorflow-gpu)\nRequirement already satisfied: setuptools in d:\\python35\\lib\\site-packages (from protobuf==3.1.0->tensorflow-gpu)\nInstalling collected packages: tensorflow-gpu\nSuccessfully installed tensorflow-gpu-0.12.0rc0\n```\n\n## \u5b9f\u884c\u958b\u59cb\n\nvirtualenv \u3067 `D:\\tensorflow` \u306b\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\nPS D:\\> virtualenv --system-site-packages D:\\tensorflow\nUsing base prefix 'd:\\\\python35'\nNew python executable in D:\\tensorflow\\Scripts\\python.exe\nInstalling setuptools, pip, wheel...done.\n```\n\n## \u5b66\u7fd2\u89e3\u6790\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3059\u308b\n\n\u9069\u5f53\u306a\u3068\u3053\u308d\u3067 \n`git clone --recurse-submodules https://github.com/tensorflow/tensorflow`\n\u3057\u307e\u3059\u3002\u81ea\u5206\u306f\u666e\u6bb5 VirtualBox \u306e Linux \u3092\u52d5\u304b\u3057\u3066\u3044\u3066 SMB \u3067\u30d5\u30a1\u30a4\u30eb\u5171\u6709\u3059\u308b\u306e\u3067\u305d\u3061\u3089\u3067\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3057\u305f\u3002\n`tensorflow/tensorflow/models` \u3092 `D:\\tensorflow\\models` \u3068\u306a\u308b\u3088\u3046\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n## MNIST \u3092\u8a66\u3059\n\n\u624b\u66f8\u304d\u6570\u5b57\u306e\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\nPS D:\\> cd tensorflow\\tensorflow\\models\\image\\mnist\n```\n\n```\nPS D:\\tensorflow\\models\\image\\mnist> python convolutional.py\n```\n\n```\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cublas64_80.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cudnn64_5.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library cufft64_80.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library nvcuda.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfu\nlly opened CUDA library curand64_80.dll locally\nSuccessfully downloaded train-images-idx3-ubyte.gz 9912422 bytes.\nSuccessfully downloaded train-labels-idx1-ubyte.gz 28881 bytes.\nSuccessfully downloaded t10k-images-idx3-ubyte.gz 1648877 bytes.\nSuccessfully downloaded t10k-labels-idx1-ubyte.gz 4542 bytes.\nExtracting data\\train-images-idx3-ubyte.gz\nExtracting data\\train-labels-idx1-ubyte.gz\nExtracting data\\t10k-images-idx3-ubyte.gz\nExtracting data\\t10k-labels-idx1-ubyte.gz\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] F\nound device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] D\nMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0\n:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] C\nreating TensorFlow device (/gpu:0) -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] C\nould not identify NUMA node of /job:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been bu\nilt with NUMA support.\nInitialized!\nStep 0 (epoch 0.00), 50.9 ms\nMinibatch loss: 8.334, learning rate: 0.010000\nMinibatch error: 85.9%\nValidation error: 84.6%\nStep 100 (epoch 0.12), 12.1 ms\nMinibatch loss: 3.226, learning rate: 0.010000\nMinibatch error: 4.7%\nValidation error: 7.3%\nStep 200 (epoch 0.23), 12.0 ms\nMinibatch loss: 3.404, learning rate: 0.010000\nMinibatch error: 10.9%\n\uff08\u7701\u7565\uff09\nMinibatch loss: 1.609, learning rate: 0.006302\nMinibatch error: 0.0%\nValidation error: 1.0%\nTest error: 0.8%\n```\n\n\u5272\u3068\u65e9\u304f\u7d42\u308f\u3063\u305f\u306e\u3067 GPU \u304c\u52b9\u3044\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\u4e0a\u624b\u304f\u52d5\u3044\u305f\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u308f\u304b\u308a\u3084\u3059\u3044 ImageNet \u3092\u6b21\u306b\u8a66\u3057\u307e\u3059\u3002\n\n## ImageNet \u3092\u8a66\u3059\n\n\u753b\u50cf\u3092\u89e3\u6790\u3057\u3066\u4f55\u306e\u753b\u304b\u3092\u5f53\u3066\u308b ImageNet \u3067\u3059\u3002\n\n```\nPS D:> cd \\tensorflow\\models\\imagenet\n```\n\n\u307e\u305a\u6e96\u5099\u3067\u3059\u3002 `python .\\classify_image.py` \u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\nPS D:\\tensorflow\\models\\image\\imagenet> python .\\classify_image.py\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cublas64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cudnn64_5.\ndll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cufft64_80\n.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library nvcuda.dll\n locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library curand64_8\n0.dll locally\n>> Downloading inception-2015-12-05.tgz 100.0%\nSuccessfully downloaded inception-2015-12-05.tgz 88931400 bytes.\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0)\n -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /jo\nb:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\framework\\op_def_util.cc:332] Op BatchNormWithGlobalNormalization is depr\necated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\ngiant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca (score = 0.89233)\nindri, indris, Indri indri, Indri brevicaudatus (score = 0.00859)\nlesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens (score = 0.00264)\ncustard apple (score = 0.00141)\nearthstar (score = 0.00107)\n```\n\n\u9069\u5f53\u306b `M:\\fuji.jpg` \u306b\u5bcc\u58eb\u5c71\u306e\u5199\u771f\u3092\u304a\u304d\u307e\u3057\u305f\u3002\n`python .\\classify_image.py --image_file M:\\fuji.jpg` \u3067\u89e3\u6790\u3055\u305b\u307e\u3059\u3002\n\n```\nPS D:\\tensorflow\\models\\image\\imagenet> python .\\classify_image.py --image_file M:\\fuji.jpg\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cublas64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cudnn64_5.\ndll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library cufft64_80\n.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library nvcuda.dll\n locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\stream_executor\\dso_loader.cc:128] successfully opened CUDA library curand64_8\n0.dll locally\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:885] Found device 0 with properties:\nname: GeForce GTX 960\nmajor: 5 minor: 2 memoryClockRate (GHz) 1.253\npciBusID 0000:01:00.0\nTotal memory: 2.00GiB\nFree memory: 1.64GiB\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:906] DMA: 0\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:916] 0:   Y\nI c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:975] Creating TensorFlow device (/gpu:0)\n -> (device: 0, name: GeForce GTX 960, pci bus id: 0000:01:00.0)\nE c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\gpu\\gpu_device.cc:586] Could not identify NUMA node of /jo\nb:localhost/replica:0/task:0/gpu:0, defaulting to 0.  Your kernel may not have been built with NUMA support.\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\framework\\op_def_util.cc:332] Op BatchNormWithGlobalNormalization is depr\necated. It will cease to work in GraphDef version 9. Use tf.nn.batch_normalization().\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\nvolcano (score = 0.91087)\nfire screen, fireguard (score = 0.00192)\nalp (score = 0.00162)\nlakeside, lakeshore (score = 0.00130)\ngeyser (score = 0.00077)\n```\n\n**volcano (score = 0.91087)** \u706b\u5c71\u3068\u8a8d\u8b58\u3055\u308c\u307e\u3057\u305f\u306d\u3002\u3061\u306a\u307f\u306b\u5199\u771f\u306f\u96ea\u5316\u7ca7\u3057\u3066\u308b\u5bcc\u58eb\u5c71\u3067\u3057\u305f\u3002\n\n```\nW c:\\tf_jenkins\\home\\workspace\\release-win\\device\\gpu\\os\\windows\\tensorflow\\core\\common_runtime\\bfc_allocator.cc:217] Ran out of memory trying to allocate\n 1.91GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\n```\n\u3068\u8b66\u544a\u304c\u51fa\u3066\u3044\u305f\u306e\u3067\u3082\u3063\u3068\u30e1\u30e2\u30ea\u304c\u3042\u308b\u3068\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u7279\u306b\u5d4c\u3089\u305a\u306b\u52d5\u3044\u305f\u306e\u3067\u307f\u306a\u3055\u3093\u3082\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n\n[tilfin's note \u3088\u308a\u30af\u30ed\u30b9\u30dd\u30b9\u30c8](http://tilfin.hatenablog.com/entry/2016/11/30/163325)\n", "tags": ["TensorFlow", "Windows", "GPU"]}