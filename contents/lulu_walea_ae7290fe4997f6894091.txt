{"context": " More than 1 year has passed since last update.\n\n\u304d\u3063\u304b\u3051\n\n\u5c55\u793a\u4f1a\u3068\u304b\u3067\u3044\u3061\u3044\u3061\u4eba\u306e\u91cf\u306b\u5fdc\u3058\u3066\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8abf\u6574\u304c\u9762\u5012\u304f\u3055\u3044\u304b\u3089\u3002\n\n\u30ed\u30dc\u30c3\u30c8\u30b9\u30bf\u30fc\u30c8\u3055\u3093\u306e\u30ed\u30dc\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u97f3\u91cf\u8abf\u6574\u304c\u6d41\u884c\u3063\u3066\u308b\uff1f\n\u8ab0\u304b\u4f5c\u3063\u3066\u304f\u308c\u306a\u3044\u304b\u306a\u30fc\u3063\u3066\u5f85\u3063\u3066\u305f\u3051\u3069\u3001\u307e\u3060\u30fb\u30fb\u30fb\u3002\n\u6cb3\u7530\u5e2b\u5320\u306b\u5fa1\u6559\u6388\u9802\u3044\u305f\u300c\u30aa\u30fc\u30c7\u30a3\u30a8\u30f3\u30b9\u306e\u62cd\u624b\u306e\u5927\u304d\u3055\u3092\u6e2c\u5b9a\u3057\u3066Pepper\u304c\u512a\u52dd\u8005\u3092\u6c7a\u3081\u308b\u300d\u3067\u305b\u3063\u304b\u304f\u3060\u304b\u3089\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3002\n\n\n\u4f7f\u3063\u305fAPI\nALAudioDevice\n\u203b\u524d\u56de\u3068\u4e00\u7dd2w\n\n\u4f7f\u3063\u305fMethod\ngetFrontMicEnergy()\n\u203b\u524d\u56de\u3068\u4e00\u7dd2w\n\n\u6e96\u5099\n\u4f55\u3092\u898b\u3066\u97f3\u91cf\u3092\u8abf\u6574\u3059\u308b\u304b\u3002\n\n\n\u4eba\u306e\u91cf\n\n\u5468\u308a\u306e\u97f3\u91cf\n\nPepper\u3068\u4eba\u306e\u8ddd\u96e2\n\n\u4eba\u306e\u52d5\u304d\n\n\u4ee5\u4e0a\u306e2\u3064\u3067\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u6c7a\u3081\u65b9\n\n\u5468\u308a\u304c\u3046\u308b\u3055\u3044 -> \u97f3\u91cf\u6700\u5927\n\u304a\u5ba2\u3055\u3093\u304cPepper\u306e\u524d\u306b\u3044\u306a\u3044 -> \u5143\u3005\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\n\u304a\u5ba2\u3055\u30931\u4eba -> \u30c7\u30ab\u3059\u304e\u308b\u3068\u3046\u308b\u3055\u3044\u3068\u601d\u3046\u306e\u306760%\n\u304a\u5ba2\u3055\u30932\u4eba\u301c3\u4eba -> \u307f\u3093\u306a\u306b\u805e\u3044\u3066\u6b32\u3057\u3044\u306e\u306780%\n\u304a\u5ba2\u3055\u30934\u4eba\u4ee5\u4e0a -> \u30ac\u30e4\u30ac\u30e4\u3057\u3066\u805e\u304d\u53d6\u308a\u306b\u304f\u305d\u3046\u306a\u306e\u3067100%\n\n\n\u4ed5\u7d44\u307f\n\u52dd\u624b\u306b\u3084\u3063\u3066\u6b32\u3057\u3044\u306e\u3067\u8d77\u52d5\u5f8c\u3001Timer\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u534a\u6c38\u4e45\u7684\u306b\u52d5\u3044\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3057\u305fVolume(%)\u306fSet Speaker Vol.\u30dc\u30c3\u30af\u30b9\u306e\u5909\u6570\u306b\u5165\u308c\u3066\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u305f\u9593\u9694\u3067Volume\u3092\u90fd\u5ea6\u3001\u8a2d\u5b9a\u3002\n\nConfig.py\n    def onLoad(self):\n        self.timer = None\n        self.nFacesDetected = -1\n        self.audiodevice = ALProxy(\"ALAudioDevice\")\n        self.defaultVol = self.audiodevice.getOutputVolume()\n        self.vol = self.defaultVol\n\n    def onUnload(self):\n        self.cancelTimer()\n\n    def cancelTimer(self):\n        if self.timer:\n            self.timer.stop()\n        self.timer = None\n\n    def onTimer(self):\n        self.timerOutput()\n\n    def startTimer(self):\n        import qi\n        self.timer = qi.PeriodicTask()\n        self.timer.setCallback(self.onTimer)\n        self.timer.setUsPeriod(int(self.getParameter(\"Period (s)\") * 1000 * 1000))\n        self.timer.start(True)\n\n    def onInput_onStart(self):\n        self.cancelTimer()\n        self.startTimer()\n\n    def onInput_onStop(self):\n        self.audiodevice.setOutputVolume(self.defaultVol)\n        if self.timer and self.timer.isRunning():\n            self.onStopped()\n        self.onUnload()\n\n    def onInput_inputFaceTracked(self, p):\n        if(len(p) > 0):\n            if(self.nFacesDetected != len(p[1]) -1): # an additional array has been placed at the end for time\n                self.nFacesDetected = len(p[1]) -1  # filtered info and has to be substracted when counting faces\n                self._JudgeOutput( self.nFacesDetected )\n        else:\n            if(self.nFacesDetected != 0):\n                self.nFacesDetected = 0\n                self._JudgeOutput( self.nFacesDetected )\n\n    def _JudgeOutput(self, envMaterial):\n        self.logger.info(\"FrontMicEnergy:%d\" % self.audiodevice.getFrontMicEnergy())\n        self.logger.info(\"envMaterial:%d\" % envMaterial)\n        if (self.audiodevice.getFrontMicEnergy() >= 1800):\n            self.EnvironmentVolume(100)\n        elif envMaterial == 0:\n            self.EnvironmentVolume(self.defaultVol)\n        elif envMaterial == 1:\n            self.EnvironmentVolume(60)\n        elif envMaterial >= 2 and envMaterial < 4:\n            self.EnvironmentVolume(80)\n        elif envMaterial >= 4:\n            self.EnvironmentVolume(100)\n\n\n\n\u8d77\u52d5\n\u8d77\u52d5\u306f\u518d\u751f\u30dc\u30bf\u30f3\u306e\u96a3\u306e\u3053\u306e\u65d7\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066\u304a\u304f\u304b\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u308c\u308c\u3070Pepper\u8d77\u52d5\u3057\u305f\u6642\u306b\u52dd\u624b\u306b\u30a2\u30d7\u30ea\u306f\u52d5\u304d\u51fa\u3057\u307e\u3059\u3002\n\n\n\u304a\u307e\u3051\nConfig\u3092\u8aad\u307f\u8fbc\u3093\u3060\u969b\u306b\u5143\u3005\u306e\u97f3\u91cf\u3092\u8a18\u61b6\u3057\u3066\u304a\u3044\u3066\u30a2\u30d7\u30ea\u3092\u7d42\u4e86\u3059\u308b\u969b\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\n\u982d\u3092\u30bf\u30c3\u30c1\u3057\u3066\u304b\u30895\u79d2\u4ee5\u5185\u306b\u30d0\u30c3\u30af\u30d0\u30f3\u30d1\u30fc\u30924\u56de\u62bc\u3057\u305f\u3089\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5143\u306b\u623b\u3057\u3066\u30a2\u30d7\u30ea\u7d42\u4e86\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\n\u30ed\u30dc\u30c3\u30c8\u30b9\u30bf\u30fc\u30c8\u3055\u3093\u306e\u30ed\u30dc\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\nhttps://robo-lib.com/repositories/summary/42\n#\u304d\u3063\u304b\u3051\n1. \u5c55\u793a\u4f1a\u3068\u304b\u3067\u3044\u3061\u3044\u3061\u4eba\u306e\u91cf\u306b\u5fdc\u3058\u3066\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u8abf\u6574\u304c\u9762\u5012\u304f\u3055\u3044\u304b\u3089\u3002\n2. [\u30ed\u30dc\u30c3\u30c8\u30b9\u30bf\u30fc\u30c8](http://robotstart.co.jp/)\u3055\u3093\u306e[\u30ed\u30dc\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea](https://pepper.robo-lib.com/)\u3067\u97f3\u91cf\u8abf\u6574\u304c\u6d41\u884c\u3063\u3066\u308b\uff1f\n3. \u8ab0\u304b\u4f5c\u3063\u3066\u304f\u308c\u306a\u3044\u304b\u306a\u30fc\u3063\u3066\u5f85\u3063\u3066\u305f\u3051\u3069\u3001\u307e\u3060\u30fb\u30fb\u30fb\u3002\n4. \u6cb3\u7530\u5e2b\u5320\u306b\u5fa1\u6559\u6388\u9802\u3044\u305f\u300c[\u30aa\u30fc\u30c7\u30a3\u30a8\u30f3\u30b9\u306e\u62cd\u624b\u306e\u5927\u304d\u3055\u3092\u6e2c\u5b9a\u3057\u3066Pepper\u304c\u512a\u52dd\u8005\u3092\u6c7a\u3081\u308b](http://qiita.com/lulu_walea/items/24266ddef6d57d867ba6)\u300d\u3067\u305b\u3063\u304b\u304f\u3060\u304b\u3089\u4f5c\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3002\n\n#\u4f7f\u3063\u305fAPI\n[ALAudioDevice](http://doc.aldebaran.com/2-1/naoqi/audio/alaudiodevice-api.html?highlight=alaudiodevice#ALAudioDeviceProxy)\n\u203b[\u524d\u56de](http://qiita.com/lulu_walea/items/24266ddef6d57d867ba6)\u3068\u4e00\u7dd2w\n\n#\u4f7f\u3063\u305fMethod\n[getFrontMicEnergy()](http://doc.aldebaran.com/2-1/naoqi/audio/alaudiodevice-api.html?highlight=alaudiodevice#ALAudioDeviceProxy::getFrontMicEnergy)\n\u203b[\u524d\u56de](http://qiita.com/lulu_walea/items/24266ddef6d57d867ba6)\u3068\u4e00\u7dd2w\n\n\n#\u6e96\u5099\n\u4f55\u3092\u898b\u3066\u97f3\u91cf\u3092\u8abf\u6574\u3059\u308b\u304b\u3002\n\n- [x] \u4eba\u306e\u91cf\n- [x] \u5468\u308a\u306e\u97f3\u91cf\n- [ ] Pepper\u3068\u4eba\u306e\u8ddd\u96e2\n- [ ] \u4eba\u306e\u52d5\u304d\n\n\u4ee5\u4e0a\u306e2\u3064\u3067\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n#\u30dc\u30ea\u30e5\u30fc\u30e0\u306e\u6c7a\u3081\u65b9\n- \u5468\u308a\u304c\u3046\u308b\u3055\u3044 -> \u97f3\u91cf\u6700\u5927\n- \u304a\u5ba2\u3055\u3093\u304cPepper\u306e\u524d\u306b\u3044\u306a\u3044 -> \u5143\u3005\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\n- \u304a\u5ba2\u3055\u30931\u4eba -> \u30c7\u30ab\u3059\u304e\u308b\u3068\u3046\u308b\u3055\u3044\u3068\u601d\u3046\u306e\u306760%\n- \u304a\u5ba2\u3055\u30932\u4eba\u301c3\u4eba -> \u307f\u3093\u306a\u306b\u805e\u3044\u3066\u6b32\u3057\u3044\u306e\u306780%\n- \u304a\u5ba2\u3055\u30934\u4eba\u4ee5\u4e0a -> \u30ac\u30e4\u30ac\u30e4\u3057\u3066\u805e\u304d\u53d6\u308a\u306b\u304f\u305d\u3046\u306a\u306e\u3067100%\n\n#\u4ed5\u7d44\u307f\n\u52dd\u624b\u306b\u3084\u3063\u3066\u6b32\u3057\u3044\u306e\u3067\u8d77\u52d5\u5f8c\u3001Timer\u3067\u3053\u3093\u306a\u611f\u3058\u3067\u534a\u6c38\u4e45\u7684\u306b\u52d5\u3044\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n<img width=\"1037\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-27 16.29.02.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/56585/3b8136fb-5fb9-9623-7e4b-18854f9bfbc1.png\">\n\n\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3057\u305fVolume(%)\u306fSet Speaker Vol.\u30dc\u30c3\u30af\u30b9\u306e\u5909\u6570\u306b\u5165\u308c\u3066\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u3001\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u305f\u9593\u9694\u3067Volume\u3092\u90fd\u5ea6\u3001\u8a2d\u5b9a\u3002\n\n```lang:Config.py\n    def onLoad(self):\n        self.timer = None\n        self.nFacesDetected = -1\n        self.audiodevice = ALProxy(\"ALAudioDevice\")\n        self.defaultVol = self.audiodevice.getOutputVolume()\n        self.vol = self.defaultVol\n\n    def onUnload(self):\n        self.cancelTimer()\n\n    def cancelTimer(self):\n        if self.timer:\n            self.timer.stop()\n        self.timer = None\n\n    def onTimer(self):\n        self.timerOutput()\n\n    def startTimer(self):\n        import qi\n        self.timer = qi.PeriodicTask()\n        self.timer.setCallback(self.onTimer)\n        self.timer.setUsPeriod(int(self.getParameter(\"Period (s)\") * 1000 * 1000))\n        self.timer.start(True)\n\n    def onInput_onStart(self):\n        self.cancelTimer()\n        self.startTimer()\n\n    def onInput_onStop(self):\n        self.audiodevice.setOutputVolume(self.defaultVol)\n        if self.timer and self.timer.isRunning():\n            self.onStopped()\n        self.onUnload()\n\n    def onInput_inputFaceTracked(self, p):\n        if(len(p) > 0):\n            if(self.nFacesDetected != len(p[1]) -1): # an additional array has been placed at the end for time\n                self.nFacesDetected = len(p[1]) -1  # filtered info and has to be substracted when counting faces\n                self._JudgeOutput( self.nFacesDetected )\n        else:\n            if(self.nFacesDetected != 0):\n                self.nFacesDetected = 0\n                self._JudgeOutput( self.nFacesDetected )\n\n    def _JudgeOutput(self, envMaterial):\n        self.logger.info(\"FrontMicEnergy:%d\" % self.audiodevice.getFrontMicEnergy())\n        self.logger.info(\"envMaterial:%d\" % envMaterial)\n        if (self.audiodevice.getFrontMicEnergy() >= 1800):\n            self.EnvironmentVolume(100)\n        elif envMaterial == 0:\n            self.EnvironmentVolume(self.defaultVol)\n        elif envMaterial == 1:\n            self.EnvironmentVolume(60)\n        elif envMaterial >= 2 and envMaterial < 4:\n            self.EnvironmentVolume(80)\n        elif envMaterial >= 4:\n            self.EnvironmentVolume(100)\n```\n\n#\u8d77\u52d5\n\u8d77\u52d5\u306f\u518d\u751f\u30dc\u30bf\u30f3\u306e\u96a3\u306e\u3053\u306e\u65d7\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066\u304a\u304f\u304b\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u5165\u308c\u308c\u3070Pepper\u8d77\u52d5\u3057\u305f\u6642\u306b\u52dd\u624b\u306b\u30a2\u30d7\u30ea\u306f\u52d5\u304d\u51fa\u3057\u307e\u3059\u3002\n<img width=\"949\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-27 16.45.31.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/56585/c2e16ee0-6bad-fb0d-283c-b37c5ab90b00.png\">\n\n\n#\u304a\u307e\u3051\nConfig\u3092\u8aad\u307f\u8fbc\u3093\u3060\u969b\u306b\u5143\u3005\u306e\u97f3\u91cf\u3092\u8a18\u61b6\u3057\u3066\u304a\u3044\u3066\u30a2\u30d7\u30ea\u3092\u7d42\u4e86\u3059\u308b\u969b\u306b\u623b\u3057\u3066\u3044\u307e\u3059\u3002\n\u982d\u3092\u30bf\u30c3\u30c1\u3057\u3066\u304b\u30895\u79d2\u4ee5\u5185\u306b\u30d0\u30c3\u30af\u30d0\u30f3\u30d1\u30fc\u30924\u56de\u62bc\u3057\u305f\u3089\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u5143\u306b\u623b\u3057\u3066\u30a2\u30d7\u30ea\u7d42\u4e86\u3067\u3059\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\n\u30ed\u30dc\u30c3\u30c8\u30b9\u30bf\u30fc\u30c8\u3055\u3093\u306e[\u30ed\u30dc\u30c3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea](https://robo-lib.com/repositories/summary/42)\nhttps://robo-lib.com/repositories/summary/42\n", "tags": ["Pepper", "Choregraphe", "Python"]}