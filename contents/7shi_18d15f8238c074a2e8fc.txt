{"tags": ["NetBeans", "msys2"], "context": " More than 1 year has passed since last update.NetBeans\u304b\u3089MSYS2\u306egcc\u3092\u4f7f\u3046\u3068\u3044\u304f\u3064\u304b\u554f\u984c\u304c\u8d77\u304d\u307e\u3059\u3002\n\nNetBeans\u304cMSYS2\u3092\u81ea\u52d5\u8a8d\u8b58\u3057\u306a\u3044\n\u30d1\u30b9\u304c\u901a\u3089\u306a\u3044\n\u6587\u5b57\u5316\u3051\u3059\u308b\n\n\u30d1\u30b9\u3068\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u30e9\u30c3\u30d1\u30fc\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3092\u8a66\u307f\u307e\u3057\u305f\u3002\n\u203b \u516c\u5f0f\u306a\u624b\u6bb5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4e0d\u660e\u306a\u306e\u3067\u529b\u6280\u3067\u3059\u3002\n\n\u30e9\u30c3\u30d1\u30fc\n\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u203b MSYS2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u304c\u7570\u306a\u308b\u5834\u5408\u306fUSR\u3092\u9069\u5b9c\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nmake-wrap.cpp\n#include <stdlib.h>\n#include <unistd.h>\n#include <string>\n#include <vector>\n\n#define USR \"C:\\\\msys64\\\\usr\"\n\nstd::string lower(const std::string &s) {\n    std::string ret;\n    for (int i = 0; i < s.size(); i++) {\n        char ch = s[i];\n        if ('A' <= ch && ch <= 'Z') ch += 32;\n        ret += ch;\n    }\n    return ret;\n}\n\nint main(int argc, const char *argv[], const char *envp[]) {\n    const char *make = USR\"\\\\bin\\\\make.exe\";\n    argv[0] = make;\n    std::vector<const char *> envs;\n    std::string path;\n    for (int i = 0; envp[i]; i++) {\n        std::string e = envp[i];\n        std::string e5 = lower(e.substr(0, 5));\n        if (e5 == \"path=\") {\n            path = \"PATH=\"USR\"\\\\bin;\"USR\"\\\\local\\\\bin;\" + e.substr(5);\n            envs.push_back(path.c_str());\n        } else if (e5 != \"lang=\") {\n            envs.push_back(envp[i]);\n        }\n    }\n    envs.push_back(\"LANG=C\");\n    envs.push_back(NULL);\n    return execve(make, const_cast<char **>(argv), const_cast<char **>(&envs[0]));\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066MSYS2\u306e\u30eb\u30fc\u30c8\u306b\u7f6e\u304d\u307e\u3059\u3002DLL\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3088\u3046\u3001Win32\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30ea\u30f3\u30af\u3057\u307e\u3059\u3002\n$ x86_64-w64-mingw32-g++ -static -s -o /make-wrap make-wrap.cpp\n\n\u203b \u8981 pacman -S mingw-w64-cross-gcc\n\nNetBeans\u306e\u8a2d\u5b9a\nNetBeans\u3067\u74b0\u5883\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u78ba\u8a8d\nC/C++\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u30c4\u30fc\u30eb \u2192 \u30d7\u30e9\u30b0\u30a4\u30f3\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\n\u30c4\u30fc\u30eb \u2192 \u30aa\u30d7\u30b7\u30e7\u30f3 \u2192 C/C++ \u2192 [\u8ffd\u52a0]\n\n\u30d9\u30fc\u30b9\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30c4\u30fc\u30eb\u30fb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30fb\u30d5\u30a1\u30df\u30ea\u3092\u9078\u629e \u2192 [OK]\n\n\u203b Cygwin\u3084MinGW\u3092\u9078\u629e\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u305f\u3081Interix\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nC\u30b3\u30f3\u30d1\u30a4\u30e9\u3068C++\u30b3\u30f3\u30d1\u30a4\u30e9\u3068make\u30b3\u30de\u30f3\u30c9\uff08\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30e9\u30c3\u30d1\u30fc\uff09\u3092\u6307\u5b9a\n\n\u30b3\u30fc\u30c9\u652f\u63f4 \u2192 \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067...\\usr\\usr\\include\u3092\u5909\u66f4 \u2192 \u91cd\u8907\u3059\u308b\\usr\u3092\u53d6\u308a\u9664\u304f\n\nC++\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u51e6\u7f6e \u2192 [OK]\n\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\nNetBeans\u304b\u3089MSYS2\u306egcc\u3092\u4f7f\u3046\u3068\u3044\u304f\u3064\u304b\u554f\u984c\u304c\u8d77\u304d\u307e\u3059\u3002\n\n* NetBeans\u304cMSYS2\u3092\u81ea\u52d5\u8a8d\u8b58\u3057\u306a\u3044\n* \u30d1\u30b9\u304c\u901a\u3089\u306a\u3044\n* \u6587\u5b57\u5316\u3051\u3059\u308b\n\n\u30d1\u30b9\u3068\u74b0\u5883\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u30e9\u30c3\u30d1\u30fc\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3092\u8a66\u307f\u307e\u3057\u305f\u3002\n\n\u203b \u516c\u5f0f\u306a\u624b\u6bb5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u4e0d\u660e\u306a\u306e\u3067\u529b\u6280\u3067\u3059\u3002\n\n# \u30e9\u30c3\u30d1\u30fc\n\n\u6b21\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u203b MSYS2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u304c\u7570\u306a\u308b\u5834\u5408\u306f`USR`\u3092\u9069\u5b9c\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```make-wrap.cpp\n#include <stdlib.h>\n#include <unistd.h>\n#include <string>\n#include <vector>\n\n#define USR \"C:\\\\msys64\\\\usr\"\n\nstd::string lower(const std::string &s) {\n\tstd::string ret;\n\tfor (int i = 0; i < s.size(); i++) {\n\t\tchar ch = s[i];\n\t\tif ('A' <= ch && ch <= 'Z') ch += 32;\n\t\tret += ch;\n\t}\n\treturn ret;\n}\n\nint main(int argc, const char *argv[], const char *envp[]) {\n\tconst char *make = USR\"\\\\bin\\\\make.exe\";\n\targv[0] = make;\n\tstd::vector<const char *> envs;\n\tstd::string path;\n\tfor (int i = 0; envp[i]; i++) {\n\t\tstd::string e = envp[i];\n\t\tstd::string e5 = lower(e.substr(0, 5));\n\t\tif (e5 == \"path=\") {\n\t\t\tpath = \"PATH=\"USR\"\\\\bin;\"USR\"\\\\local\\\\bin;\" + e.substr(5);\n\t\t\tenvs.push_back(path.c_str());\n\t\t} else if (e5 != \"lang=\") {\n\t\t\tenvs.push_back(envp[i]);\n\t\t}\n\t}\n\tenvs.push_back(\"LANG=C\");\n\tenvs.push_back(NULL);\n\treturn execve(make, const_cast<char **>(argv), const_cast<char **>(&envs[0]));\n}\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066MSYS2\u306e\u30eb\u30fc\u30c8\u306b\u7f6e\u304d\u307e\u3059\u3002DLL\u306b\u4f9d\u5b58\u3057\u306a\u3044\u3088\u3046\u3001Win32\u30cd\u30a4\u30c6\u30a3\u30d6\u3067\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30ea\u30f3\u30af\u3057\u307e\u3059\u3002\n\n```text\n$ x86_64-w64-mingw32-g++ -static -s -o /make-wrap make-wrap.cpp\n```\n\n\u203b \u8981 `pacman -S mingw-w64-cross-gcc`\n\n# NetBeans\u306e\u8a2d\u5b9a\n\nNetBeans\u3067\u74b0\u5883\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u78ba\u8a8d\n\nC/C++\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30c4\u30fc\u30eb \u2192 \u30d7\u30e9\u30b0\u30a4\u30f3\n\n![NetBeans1.png](https://qiita-image-store.s3.amazonaws.com/0/32057/7bd87582-0a2b-440b-5503-a6a3e95560a2.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n![NetBeans2.png](https://qiita-image-store.s3.amazonaws.com/0/32057/633d469c-a5f7-19b5-fcd3-95c7ba1678db.png)\n\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u8a2d\u5b9a\n\n\u30c4\u30fc\u30eb \u2192 \u30aa\u30d7\u30b7\u30e7\u30f3 \u2192 C/C++ \u2192 [\u8ffd\u52a0]\n\n![NetBeans3.png](https://qiita-image-store.s3.amazonaws.com/0/32057/446d89c8-7821-d441-a867-dad44fd460c5.png)\n\n\u30d9\u30fc\u30b9\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30c4\u30fc\u30eb\u30fb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u30fb\u30d5\u30a1\u30df\u30ea\u3092\u9078\u629e \u2192 [OK]\n\n![NetBeans4.png](https://qiita-image-store.s3.amazonaws.com/0/32057/2e88930a-fce5-09bc-d68f-37027655cff4.png)\n\n\u203b Cygwin\u3084MinGW\u3092\u9078\u629e\u3059\u308b\u3068\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u305f\u3081Interix\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nC\u30b3\u30f3\u30d1\u30a4\u30e9\u3068C++\u30b3\u30f3\u30d1\u30a4\u30e9\u3068make\u30b3\u30de\u30f3\u30c9\uff08\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30e9\u30c3\u30d1\u30fc\uff09\u3092\u6307\u5b9a\n\n![NetBeans5.png](https://qiita-image-store.s3.amazonaws.com/0/32057/a494e7b1-1462-dee9-5746-9cf713f4e3c8.png)\n\n\u30b3\u30fc\u30c9\u652f\u63f4 \u2192 \u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30fb\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067`...\\usr\\usr\\include`\u3092\u5909\u66f4 \u2192 \u91cd\u8907\u3059\u308b`\\usr`\u3092\u53d6\u308a\u9664\u304f\n\n![NetBeans6.png](https://qiita-image-store.s3.amazonaws.com/0/32057/b026ca01-5803-3a3d-52a0-b2fef8a154a1.png)\n\nC++\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u306b\u51e6\u7f6e \u2192 [OK]\n\n![NetBeans7.png](https://qiita-image-store.s3.amazonaws.com/0/32057/f916a784-c20b-fbc6-f014-40bb256fd4ed.png)\n\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n"}