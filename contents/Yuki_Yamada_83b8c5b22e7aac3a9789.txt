{"tags": ["Android", "Kotlin"], "context": "\u5099\u5fd8\u9332\u7684\u306b\u3002\n\u306a\u3093\u3067\u3082\u3044\u3044\u304b\u3089\u30b3\u30fc\u30c9\u3092\u3088\u3053\u305b\u3068\u3044\u3046\u5834\u5408\u306fgithub\u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\nRetrofit2.0\n2.0\u306b\u306a\u3063\u3066\u3044\u304f\u3064\u304b\u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u8a18\u8ff0\u3092\u5909\u66f4\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306fGradle\u5468\u308a\u304b\u3089\u3002\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n\nRx\u7cfb\u3068retrofit\u672c\u4f53\u3001\u305d\u3057\u3066converter\u306bgsonconverter\u3092\u7528\u3044\u308b\u306e\u3067\u305d\u308c\u3068callAdapter\u306brxJavaAdapter\u3092\u7528\u3044\u308b\u306e\u3067\u305d\u308c\u3089\u3092compile\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u307e\u305a\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u3051\u3069realmObject\u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u306e\u3067\u30d2\u30b8\u30e7\u30fc\u306b\u4fbf\u5229\u3067\u3059\u306d\u2605\uff08\u4eca\u56de\u306f\u7528\u3044\u3066\u307e\u305b\u3093\uff09\n\u7279\u5225\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u4e00\u3064\u3060\u3051\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n        @SerializedName(\"hage\")\n        val hoge:Int\n\n\u3092\u3064\u3051\u3066\u3042\u3052\u308b\u3053\u3068\u3067JsonData\u306f\u300chage\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u5225\u306e\u540d\u524d\u306b\u5909\u66f4\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\ndata class  HogeEntity (\n        val hoge:Int,\n        val fuga:Int,\n        val piyo:Int\n)\n\n\nAPI\u30af\u30e9\u30b9\u306e\u7528\u610f\n\u6b21\u306binterface\u3092\u7528\u610f\u3057\u307e\u3059\u3002\ninterface HogeApi {\n    @Headers(\"Content-Type: application/json\")\n    @POST(\"/api/users/create\")\n    fun createUser(@Body sJson:String):Observable<HogeEntity>\n}\n\nJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092POST\u3057\u305f\u3044\u5834\u5408\u306fHeader\u306bcontentType\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u306d\u3002@Headers\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5f53\u305f\u308a\u524d\u3067\u3059\u304cstream\u30c7\u30fc\u30bf\u7b49\u3092\u7528\u3044\u305f\u3044\u5834\u5408\u306f\u305d\u3053\u3092\u5909\u3048\u308c\u3070\u3044\u3044\u308f\u3051\u3067\u3059\u3002\u3042\u3001[s]\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u306d\u3002@Headers\u3067\u3059\u3002\n\u6b21\u306bPOST\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3053\u308c\u3082\u81e8\u6a5f\u5fdc\u5909\u306bGET PUT DELETE\u7b49\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nPOST\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306f@Body\u306e\u4e2d\u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3042\u3068\u3088\u304f\u7528\u3044\u308b\u306e\u306fquery\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3057\n\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n    private val restClient:Retrofit\n        get() = Retrofit.Builder().client(getClient()).baseUrl(ENDPOINT).addConverterFactory(GsonConverterFactory.create(Gson())).addCallAdapterFactory(RxJavaCallAdapterFactory.create()).build()      \n    private fun getClient():OkHttpClient{\n        val interceptor = HttpLoggingInterceptor()\n        interceptor.level = HttpLoggingInterceptor.Level.BODY\n        return OkHttpClient.Builder().addInterceptor(interceptor).build()\n    }\n\n    companion object{\n        private val ENDPOINT = \"http://www.kanazawa-arts.or.jp/\"\n        private val TAG = MainActivity.javaClass.simpleName\n    }\n\n2.0\u4ee5\u524d\u3068\u306f\u3060\u3044\u3076\u66f8\u304d\u65b9\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u304b\u306a\u308a\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u306d\u3002\ngetClient\u306e\u307b\u3046\u3067Log\u306b\u51fa\u529b\u3059\u308b\u7b87\u6240\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002Level.BODY\u3092[HEADERS]\u3084[BASIC]\u3082\u3057\u304f\u306f[NONE]\u306b\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\naddConverterFactory\u306f\u79c1\u306fGson\u3067\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u304cmoshi\u306a\u3069\u3067\u3082\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nCallAdapter\u306fRxJavaCallAdapter\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u3059\u308b\u3053\u3068\u3067Rx\u306a\u51e6\u7406\u304c\u66f8\u3051\u308b\u308f\u3051\u3067\u3059\u306d\uff5e\n\u3067\u306f\u547c\u3073\u51fa\u3057\u90e8\u3092\u3002\n    private fun startApi(){\n        val api = getRestClient().create(HogeApi::class.java)\n        api.createUser()\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(object : Subscriber<HogeEntity>(){\n                    override fun onCompleted() {\n                        Log.d(TAG, \"onCompleted\")\n                    }\n\n                    override fun onError(p0: Throwable?) {\n                        p0!!.printStackTrace()\n                        Log.d(TAG, \"error\")\n                    }\n\n                    override fun onNext(p0: HogeEntity?) {\n                        Log.d(TAG,p0!!.hoge.toString())\n                    }\n\n                })\n    }\n\ncreateUser\u306fObservable\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u305d\u308c\u306b\u5bfe\u3057\u3066subscribe\u306f\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\u3067\u3001observe\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u660e\u793a\u3057\u3066\u3042\u3052\u3066subscribe\u306f\u7121\u540d\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nOnNext\u306e\u4e2d\u3067view\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nRxjava\u306b\u95a2\u3057\u3066\u306f\u89e3\u8aac\u3057\u307e\u305b\u3093\u304c\u30b3\u30b3\u306b\u57fa\u672c\u7684\u306a\u3053\u3068\u3092\u66f8\u3044\u3066\u304a\u3044\u305f\u306e\u3067\u52c9\u5f37\u3057\u3066\u304b\u3089\u3060\u3068\u3088\u308a\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u5099\u5fd8\u9332\u7684\u306b\u3002\n\u306a\u3093\u3067\u3082\u3044\u3044\u304b\u3089\u30b3\u30fc\u30c9\u3092\u3088\u3053\u305b\u3068\u3044\u3046\u5834\u5408\u306f[github](https://github.com/SasakiYuki/RxRetrofit)\u306b\u3042\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\n# Retrofit2.0\n2.0\u306b\u306a\u3063\u3066\u3044\u304f\u3064\u304b\u5909\u66f4\u304c\u3042\u3063\u305f\u306e\u3067\u305d\u308c\u306b\u5408\u308f\u305b\u3066\u8a18\u8ff0\u3092\u5909\u66f4\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306fGradle\u5468\u308a\u304b\u3089\u3002\n\n```gradle\n    compile 'io.reactivex:rxandroid:1.1.0'\n    compile 'io.reactivex:rxjava:1.1.0'\n    compile 'com.squareup.retrofit2:retrofit:2.0.2'\n    compile 'com.squareup.retrofit2:converter-gson:2.0.2'\n    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0'\n    compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'\n```\nRx\u7cfb\u3068retrofit\u672c\u4f53\u3001\u305d\u3057\u3066converter\u306bgsonconverter\u3092\u7528\u3044\u308b\u306e\u3067\u305d\u308c\u3068callAdapter\u306brxJavaAdapter\u3092\u7528\u3044\u308b\u306e\u3067\u305d\u308c\u3089\u3092compile\u3057\u307e\u3059\u3002\n\n# \u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u307e\u305a\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u3051\u3069realmObject\u3092\u7d99\u627f\u3057\u3066\u3044\u3066\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u306e\u3067\u30d2\u30b8\u30e7\u30fc\u306b\u4fbf\u5229\u3067\u3059\u306d\u2605\uff08\u4eca\u56de\u306f\u7528\u3044\u3066\u307e\u305b\u3093\uff09\n\u7279\u5225\u306a\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u4e00\u3064\u3060\u3051\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```kotlin\n        @SerializedName(\"hage\")\n        val hoge:Int\n```\n\u3092\u3064\u3051\u3066\u3042\u3052\u308b\u3053\u3068\u3067JsonData\u306f\u300chage\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u304c\u5225\u306e\u540d\u524d\u306b\u5909\u66f4\u3057\u3066\u3042\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```kotlin\ndata class  HogeEntity (\n        val hoge:Int,\n        val fuga:Int,\n        val piyo:Int\n)\n```\n\n# API\u30af\u30e9\u30b9\u306e\u7528\u610f\n\u6b21\u306binterface\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```kotlin\ninterface HogeApi {\n    @Headers(\"Content-Type: application/json\")\n    @POST(\"/api/users/create\")\n    fun createUser(@Body sJson:String):Observable<HogeEntity>\n}\n```\nJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092POST\u3057\u305f\u3044\u5834\u5408\u306fHeader\u306bcontentType\u3092\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u306d\u3002@Headers\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30bb\u30c3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u5f53\u305f\u308a\u524d\u3067\u3059\u304cstream\u30c7\u30fc\u30bf\u7b49\u3092\u7528\u3044\u305f\u3044\u5834\u5408\u306f\u305d\u3053\u3092\u5909\u3048\u308c\u3070\u3044\u3044\u308f\u3051\u3067\u3059\u3002\u3042\u3001[s]\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u306d\u3002@Headers\u3067\u3059\u3002\n\n\u6b21\u306bPOST\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u304c\u3053\u308c\u3082\u81e8\u6a5f\u5fdc\u5909\u306bGET PUT DELETE\u7b49\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nPOST\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306f@Body\u306e\u4e2d\u306b\u6e21\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3042\u3068\u3088\u304f\u7528\u3044\u308b\u306e\u306fquery\u3067\u3057\u3087\u3046\u304b\u3002\n\n# \u5b9f\u969b\u306b\u547c\u3073\u51fa\u3057\n\u5b9f\u969b\u306b\u547c\u3073\u51fa\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```kotlin\n    private val restClient:Retrofit\n        get() = Retrofit.Builder().client(getClient()).baseUrl(ENDPOINT).addConverterFactory(GsonConverterFactory.create(Gson())).addCallAdapterFactory(RxJavaCallAdapterFactory.create()).build()      \n    private fun getClient():OkHttpClient{\n        val interceptor = HttpLoggingInterceptor()\n        interceptor.level = HttpLoggingInterceptor.Level.BODY\n        return OkHttpClient.Builder().addInterceptor(interceptor).build()\n    }\n\n    companion object{\n        private val ENDPOINT = \"http://www.kanazawa-arts.or.jp/\"\n        private val TAG = MainActivity.javaClass.simpleName\n    }\n```\n2.0\u4ee5\u524d\u3068\u306f\u3060\u3044\u3076\u66f8\u304d\u65b9\u304c\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u304b\u306a\u308a\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u306d\u3002\ngetClient\u306e\u307b\u3046\u3067Log\u306b\u51fa\u529b\u3059\u308b\u7b87\u6240\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002Level.BODY\u3092[HEADERS]\u3084[BASIC]\u3082\u3057\u304f\u306f[NONE]\u306b\u3059\u308b\u3053\u3068\u3067\u7c21\u5358\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\naddConverterFactory\u306f\u79c1\u306fGson\u3067\u30d1\u30fc\u30b9\u3057\u3066\u3044\u307e\u3059\u304cmoshi\u306a\u3069\u3067\u3082\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nCallAdapter\u306fRxJavaCallAdapter\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u3059\u308b\u3053\u3068\u3067Rx\u306a\u51e6\u7406\u304c\u66f8\u3051\u308b\u308f\u3051\u3067\u3059\u306d\uff5e\n\n\u3067\u306f\u547c\u3073\u51fa\u3057\u90e8\u3092\u3002\n\n```kotlin\n    private fun startApi(){\n        val api = getRestClient().create(HogeApi::class.java)\n        api.createUser()\n                .subscribeOn(Schedulers.newThread())\n                .observeOn(AndroidSchedulers.mainThread())\n                .subscribe(object : Subscriber<HogeEntity>(){\n                    override fun onCompleted() {\n                        Log.d(TAG, \"onCompleted\")\n                    }\n\n                    override fun onError(p0: Throwable?) {\n                        p0!!.printStackTrace()\n                        Log.d(TAG, \"error\")\n                    }\n\n                    override fun onNext(p0: HogeEntity?) {\n                        Log.d(TAG,p0!!.hoge.toString())\n                    }\n\n                })\n    }\n```\ncreateUser\u306fObservable\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u305d\u308c\u306b\u5bfe\u3057\u3066subscribe\u306f\u65b0\u3057\u3044\u30b9\u30ec\u30c3\u30c9\u3067\u3001observe\u306f\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u3067\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u660e\u793a\u3057\u3066\u3042\u3052\u3066subscribe\u306f\u7121\u540d\u30af\u30e9\u30b9\u3067\u5ba3\u8a00\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nOnNext\u306e\u4e2d\u3067view\u306b\u5bfe\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u3057\u3066\u3042\u3052\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\nRxjava\u306b\u95a2\u3057\u3066\u306f\u89e3\u8aac\u3057\u307e\u305b\u3093\u304c[\u30b3\u30b3](http://qiita.com/Yuki_Yamada/items/a0855189988539c18b8f)\u306b\u57fa\u672c\u7684\u306a\u3053\u3068\u3092\u66f8\u3044\u3066\u304a\u3044\u305f\u306e\u3067\u52c9\u5f37\u3057\u3066\u304b\u3089\u3060\u3068\u3088\u308a\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\n\n"}