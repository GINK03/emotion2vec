{"context": "\n\n\nRaspberry pi\u3067Amazon Echo(AVS)\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u672a\u9042 - Qiita\n\n\n\n Raspberry pi\u3067Amazon Echo(AVS)\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u672a\u9042 - Qiita... \n \n\n\n\n\n\n\u3053\u3061\u3089\u3067\u66f8\u3044\u305f\u8a18\u4e8b\u306f\u6709\u529b\u306a\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u305a\u76f8\u5909\u308f\u3089\u305a\u540c\u3058\u72b6\u614b\u3002\n\u305d\u306e\u72b6\u6cc1\u3092\u6253\u7834\u3059\u3079\u304f\u3001\u30aa\u30ec\u30aa\u30ecAmazonEcho\u3092\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u30aa\u30ec\u30aa\u30ecAmazonEcho\u306b\u3084\u3089\u305b\u305f\u3044\u3053\u3068\n\u3068\u306b\u304b\u304f\u30e9\u30b8\u30aa\u304c\u597d\u304d\u3060\u3002\u3088\u304f\u805e\u3044\u3066\u3044\u308b\u3002\u671d\u306fTBS\u306e\u30b9\u30bf\u30f3\u30d0\u30a4\u3092\u805e\u304f\u3053\u3068\u304c\u6700\u8fd1\u306e\u65e5\u8ab2\u3060\u3002\n6:42\u304b\u3089\u59cb\u307e\u308b\u6b4c\u306e\u306a\u3044\u6b4c\u8b21\u66f2\u306f\u6700\u9ad8\u3060\u3002\n\u3057\u304b\u3057\u5bdd\u8d77\u304d\u306b\u305d\u306e\u3042\u305f\u308a\u306b\u8ee2\u304c\u3063\u3066\u3044\u308biPhone\u3092\u53d6\u308a\u51fa\u3057\u3001radiko\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3001TBS\u3092\u9078\u629e\u3057\u3001Airplay\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\u3068\u306a\u308c\u3070\u30e9\u30ba\u30d1\u30a4\u3092radiko\u30b5\u30fc\u30d0\u306b\u3067\u3082\u3057\u3066cron\u3067\u81ea\u52d5\u8d77\u52d5\u3055\u305b\u308c\u3070\u3088\u3044\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3046\u306e\u3060\u304c\u3001\u81ea\u52d5\u306f\u5acc\u3060\u3002\n\u3068\u8a00\u3046\u4e8b\u3067\u8a71\u3057\u304b\u3051\u308c\u3070radiko\u304c\u9cf4\u308b\u3053\u3068\u3092\u6700\u7d42\u76ee\u6a19\u306b\u30aa\u30ec\u30aa\u30ecAmazonEcho\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u74b0\u5883\n\nRaspberry pi (Raspbian)\ngit, python, node.js\nUSB\u30de\u30a4\u30af\n\nraspberry pi\u3067\u30b5\u30a6\u30f3\u30c9\u95a2\u4fc2\u306f\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u4e8b\u524d\u306b\u8abf\u3079\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3002\n\u3053\u3053\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\n\n\n\n\nRaspbian(Jessie) \u306e\u30b5\u30a6\u30f3\u30c9\u8a2d\u5b9a - Qiita\n\n\n\n Raspbian(Jessie) \u306e\u30b5\u30a6\u30f3\u30c9\u8a2d\u5b9a - Qiita... \n\n\n\n\n\n\n\n\n\u97f3\u58f0\u8a8d\u8b58\n\n\n\nLINEBot SDK\uff0bMicrosoft Speech API+Translate API \u3067\u30d0\u30ea\u30cb\u30fc\u30ba\u3068\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b - Qiita\n\n\n\n LINEBot SDK\uff0bMicrosoft Speech API+Translate API \u3067\u30d0\u30ea\u30cb\u30fc\u30ba\u3068\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b - Qiita... \n \n\n\n\n\n\n\u97f3\u58f0\u8a8d\u8b58\u306b\u306fMicosoft Speech API\u3092\u5229\u7528\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3051\u308c\u3069\u3082\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304f Julius\u3068\u3044\u3046\u3082\u306e\u3092\u77e5\u3063\u305f\u306e\u3067\u5229\u7528\u3059\u308b\u4e8b\u3068\u3057\u305f\u3002\n\nJulius\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nJulius\u3092github\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30e9\u30ba\u30d1\u30a4\u3067\u97f3\u58f0\u8a8d\u8b58\u3067\u304d\u308b\u307e\u3067\u3082\u3063\u3066\u3044\u304f\u3002\n# \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo apt-get install libasound2-dev\n# Julius\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ git clone https://github.com/julius-speech/julius.git\n$ cd julius\n$ ./configure \n$ make\n$ sudo make install\n\n\n\u30c7\u30a3\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\u30ad\u30c3\u30c8\u3068\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u30ad\u30c3\u30c8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ wget -O dictation-kit-v4.3.1-linux.tgz\n 'http://sourceforge.jp/frs/redir.php?m=jaist&f=%2Fjulius%2F60416%2Fdictation-kit-v4.3.1-linux.tgz'\n$ wget -O grammar-kit-v4.1.tar.gz\n 'http://sourceforge.jp/frs/redir.php?m=osdn&f=%2Fjulius%2F51159%2Fgrammar-kit-v4.1.tar.gz'\n\n\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u81ea\u5206\u3067\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3068\u305d\u3053\u306b\u8a18\u8f09\u306e\u8a00\u8449\u3057\u304b\u8a8d\u8b58\u3057\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u306a\u306e\u3067\u3001\u4eca\u56de\u306e\u8981\u4ef6\u306b\u306f\u3061\u3087\u3046\u3069\u826f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u8f9e\u66f8\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u8f9e\u66f8\u306e\u4f5c\u6210\n$ vi /home/pi/julius_sample/sample.yomi\n$ cat /home/pi/julius_sample/sample.yomi                                                                                                                \n\u30b7\u30b7\u30de\u30eb \u3057\u3057\u307e\u308b\nNHK \u3048\u306c\u3048\u3061\u3051\u30fc\nJFM \u3058\u3047\u30fc\u3046\u3047\u30fc\u3076\nTBS \u3066\u3043\u30fc\u3073\u30fc\u3048\u3059\nINT \u3044\u3093\u305f\u30fc\u3048\u3075\u3048\u3080\n\u6d88\u3057\u3066 \u3051\u3057\u3066\n\n\n\u8f9e\u66f8\u306e\u5909\u63db\n$ cd ~/julius-master\n$ iconv -f utf8 -t eucjp ~/sample.yomi | ./yomi2voca.pl \n > ~/julius-kits/dictation-kit-v4.3.1-linux/sample.dic\n\n\njulius conf\u4f5c\u6210\n$ vi /home/pi/julius_sample/sample.jconf\n$ cat /home/pi/julius_sample/sample.jconf\n-w sample.dic\n-v model/lang_m/bccwj.60k.bingram\n-h model/phone_m/jnas-tri-3k16-gid.binhmm\n-hlist model/phone_m/logicalTri\n-n 5\n-output 1\n-input mic\n-rejectshort 500\n-charconv euc-jp utf8\n-lv 1000\n\n\njulius\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\n$ julius -C /home/pi/julius-kits/dictation-kit-v4.4/sample.jconf -module\n\n\nradiko\n\u7121\u4e8b\u8f9e\u66f8\u306b\u3042\u308b\u8a00\u8449\u304c\u8a8d\u8b58\u3057\u305f\u3089raspberry pi\u3067radiko\u518d\u751f\u3092\u884c\u3048\u308b\u74b0\u5883\u3092\u6574\u3048\u308b\u3002\n\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u5229\u7528\u3055\u305b\u3066\u9802\u3044\u305f\u3002\n\n\n\n\nRaspberry Pi\u3067radiko\u306e\u518d\u751f\u3001\u9332\u97f3 - Muchuu\n\n\n\n Raspberry Pi\u3067radiko\u306e\u518d\u751f\u3001\u9332\u97f3 - Muchuu... \n\n\n\n\n\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\njulius\u304c\u97f3\u58f0\u8a8d\u8b58\u3092\u884c\u3063\u3066\u304f\u308c\u308b\u304c\u3001\u305d\u308c\u3092\u53d7\u3051\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068\u306b\u3059\u308b\u3002\nPHP\u3067\u66f8\u304d\u305f\u304b\u3063\u305f\u304c\u60c5\u5831\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067python\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u305f\u3060\u3057\u50d5\u306fpython\u3092\u66f8\u3051\u306a\u3044\u306e\u3067\u4f55\u4eba\u304b\u306e\u65b9\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u7d44\u5408\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n(\u3061\u306a\u307f\u306b\u30b7\u30b7\u30de\u30eb\u3068\u306f\u6614\u98fc\u3063\u3066\u305f\u72ac\u306e\u540d\u524d\u3002\u65e5\u5e38\u751f\u6d3b\u3082\u3057\u304f\u306f\u30e9\u30b8\u30aa\u30fb\u30c6\u30ec\u30d3\u304b\u3089\u767a\u305b\u3089\u308c\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3044\u3001\u8aa4\u8a8d\u8b58\u306f\u3057\u306a\u3044\u3068\u601d\u3063\u305f\u304b\u3089\uff09\n\u6d41\u308c\n\npython\u304b\u3089julius\u3092\u8d77\u52d5\u3055\u305b\u308b\u3002\n\u30b7\u30b7\u30de\u30eb\u3068\u3044\u3046\u8a00\u8449\u3092\u8a8d\u8b58\u3059\u308b\u3068\u5f85\u6a5f\u72b6\u614b\u306b\u5165\u308b\uff08Hey Siri\u3084Alexa\u306e\u3088\u3046\u306a\u3053\u3068\uff09\n\u5f85\u6a5f\u72b6\u614b\u3067\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u305f\u8a00\u8449\u3092\u8a8d\u8b58\u3059\u308b\u3068\u5404\u3005\u306e\u52d5\u4f5c\u3092\u884c\u3046\uff08\u4eca\u56de\u306f\u30e9\u30b8\u30aa\u3092\u518d\u751f\u3059\u308b\uff09\n\n\nsample_listner.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport socket\nimport requests\nimport re\nimport subprocess\nimport shlex\nimport time\nimport threading\n\njulius_path = '/home/pi/src/julius-master/julius/julius'\njconf_path = '/home/pi/julius-kits/dictation-kit-v4.4/sample.jconf'\njulius = None\njulius_socket = None\n\n\ndef invoke_julius():\n    print 'INFO : invoke julius'\n    args = julius_path + ' -C ' + jconf_path + ' -module '\n    p = subprocess.Popen(\n            shlex.split(args),\n            stdin=None,\n            stdout=None,\n            stderr=None\n        )\n    print 'INFO : invoke julius complete.'\n    print 'INFO : wait 2 seconds.'\n    time.sleep(3.0)\n    print 'INFO : invoke julius complete'\n    return p\n\n\ndef kill_julius(julius):\n    print 'INFO : terminate julius'\n    julius.kill()\n    while julius.poll() is None:\n        print 'INFO : wait for 0.1 sec julius\\' termination'\n        time.sleep(0.1)\n    print 'INFO : terminate julius complete'\n\n\ndef get_OS_PID(process):\n    psef = 'ps -ef | grep ' + process + ' | grep -ve grep -vie python |head -1|awk \\'{print($2)}\\''\n    if sys.version_info.major == 3:\n        PID = str(subprocess.check_output(psef, shell=True), encoding='utf-8').rstrip ()\n    else:\n        PID = subprocess.check_output(psef, shell=True).rstrip ()\n    return PID\n\n\ndef create_socket():\n    print 'INFO : create a socket to connect julius'\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect(('localhost', 10500))\n    print 'INFO : create a socket to connect julius complete'\n    return s\n\n\ndef delete_socket(s):\n    print 'INFO : delete a socket'\n    s.close()\n    print 'INFO : delete a socket complete'\n    return True\n\n\ndef invoke_julius_set():\n    julius = invoke_julius()\n    julius_socket = create_socket()\n    sf = julius_socket.makefile('rb')\n    return (julius, julius_socket, sf)\n\nSTATUS_WAITING   = 0\nSTATUS_READY     = 1\nSTATUS_EXECUTING = 2\nSTATUS_FINISH    = 3\n\nstatus = STATUS_WAITING\n\ndef status_change(new_status):\n  global status\n  if status == STATUS_WAITING:\n    if new_status == STATUS_READY:\n      status = new_status\n      print \"Status is READY.\" \n      threading.Timer(15, status_change, args=[STATUS_WAITING]).start()\n  elif status == STATUS_READY:\n    if new_status == STATUS_WAITING:\n      status = new_status\n      print \"Status is WAITING.\" \n    elif new_status == STATUS_EXECUTING:\n      status = new_status\n      print \"Status is EXECUTING.\" \n      threading.Timer(30, status_change, args=[STATUS_FINISH]).start()\n  elif status == STATUS_EXECUTING:\n    if new_status == STATUS_WAITING:\n      print \"Command is executed now, so I do NOT change status.\"\n    if new_status == STATUS_FINISH:\n      status = STATUS_WAITING\n      print \"Status is WAITING.\" \n\n\ndef play_mp3(sound_file):\n    args =  \"mplayer --quiet \" + sound_file\n    print args\n    p = subprocess.Popen(\n            shlex.split(args),\n            stdin=None,\n            stdout=None,\n            stderr=None\n        )\n    time.sleep(0.5)\n    return True\n\ndef call_jsay(text):\n    cmd = \"/usr/local/bin/jsay %s\" % text\n    subprocess.call(cmd, shell=True)\n\ndef radio_on(channel):\n    cmd =\"/home/pi/radiko/radiko.sh -p %s >/dev/null 2>&1 &\" %channel\n    subprocess.call(cmd, shell=True)\n\ndef nhk_on(channel):\n    cmd =\"/home/pi/radiko/nhk.sh %s >/dev/null 2>&1 &\" %channel\n    subprocess.call(cmd, shell=True)\n\n\ndef radio_off():\n    # off\n    cmd =\"killall mplayer\"\n    subprocess.call(cmd, shell=True)\n\ndef main():\n    global julius\n    global julius_socket\n    julius, julius_socket, sf = invoke_julius_set()\n\n    while True:\n        if julius.poll() is not None:   # means , julius dead\n            print 'ERROR : julius dead'\n            delete_socket(julius_socket)\n            julius, julius_socket, sf = invoke_julius_set()\n        else:\n            line = sf.readline().decode('utf-8')\n            if line.find('WHYPO') != -1:\n               if line.find(u'\u30b7\u30b7\u30de\u30eb') != -1:\n                     if status == STATUS_WAITING:\n                           print \"Julius is ready to your command.\"\n                           status_change(STATUS_READY)\n                           play_mp3(\"/home/pi/julius_sample/sound/ok.mp3\") \n                           print \"Shishimaru is wating.\"\n               elif line.find(u'TBS') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30c6\u30a3\u30fc\u30d3\u30fc\u30a8\u30b9\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('TBS')\n                           print \"Call TBS\"\n               elif line.find(u'INT') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30a4\u30f3\u30bf\u30fc\u30a8\u30d5\u30a8\u30e0\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('INT')\n                           print \"Call INTERFM\"\n               elif line.find(u'JFM') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30b8\u30a7\u30fc\u30a6\u30a7\u30fc\u30d6\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('FMJ')\n                           print \"Call JWAVE\"\n               elif line.find(u'NHK') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30a8\u30cc\u30a8\u30c1\u30b1\u30fc\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           nhk_on('fm')\n                           print \"Call NHK\"\n               elif line.find(u'\u6d88\u3057\u3066') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30e9\u30b8\u30aa\u3092\u6d88\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_off()\n                           print \"Call Radio Off\"\n\n    print 'WARN : while loop breaked'\n    print 'INFO : exit'\n\n\nif __name__ == '__main__':\n    try:\n        main()\n    except KeyboardInterrupt:\n        print 'Interrupted. Exit sequence start..'\n        kill_julius(julius)\n        delete_socket(julius_socket)\n        print 'INFO : Exit sequence done.'\n        sys.exit(0)()\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ python sample_listner.py\n\n\n\u518d\u751f\n\n\u601d\u3063\u305f\u901a\u308a\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\u30b7\u30b7\u30de\u30eb\u3092\u8a8d\u8b58\u3057\u305f\u3089\u30dd\u30fc\u30f3\u3068\u3044\u3046\u97f3\u3092\u9cf4\u3089\u3059\u3053\u3068\u306b\u3057\u305f\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3089\u3002\n\n\u505c\u6b62\n\n\u505c\u6b62\u306b\u306f\u8a00\u8449\u3067\u306f\u306a\u304f\u4ee5\u524d\u30cf\u30c3\u30af\u3057\u305fAmazon Dash Button\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\u7406\u7531\u306f\u30b9\u30d4\u30fc\u30ab\u30fc\u306e\u6a2a\u306b\u30de\u30a4\u30af\u3092\u7f6e\u3044\u3066\u3044\u308b\u305f\u3081\u8a00\u8449\u3092\u8a8d\u8b58\u3057\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u304b\u3089\u3060\u3002\n\n\u5ff5\u306e\u305f\u3081\u505c\u6b62\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3002\nAmazon Dash Button\u304c\u62bc\u3055\u308c\u305f\u3089\u3001killall mplayer\u3057\u3066\u308b\u3060\u3051\u3002\n\napp.js\nvar dash_button = require('node-dash-button');                                                                                                                 \nvar dash = dash_button(\"xx:xx:xx:xx:xx:xx\", null, null, 'all'); //address from step above                                                                      \ndash.on(\"detected\", function (){                                                                                                                               \nvar exec = require('child_process').exec\n, cmd;\n\ncmd = 'killall mplayer';\n\nkillmplayer = function() {\n    return exec(cmd, {timeout: 1000},\n        function(error, stdout, stderr) {\n            console.log('stdout: '+(stdout||'none'));\n            console.log('stderr: '+(stderr||'none'));\n            if(error !== null) {\n                console.log('exec error: '+error);\n            }\n        }\n    )\n};\n\n\n\n\n\u8a8d\u8b58\u3057\u3066\u3044\u306a\u3044\u30d1\u30bf\u30fc\u30f3\n\n\u4ee5\u4e0a\u3067\u7121\u4e8b\u30aa\u30ec\u30aa\u30ecAmazonEcho\u304c\u4f5c\u308c\u305f\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092\u6628\u65e5\u899a\u3048\u305fsupervisor\u3067\u30c7\u30fc\u30e2\u30f3\u5316\u3059\u308c\u3070\u5b8c\u4e86\u3002\n\u30e9\u30ba\u30d1\u30a4\u306e\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u6e80\u8db3\u306a\u3082\u306e\u304c\u3067\u304d\u305f\u3002\n\n\u8ffd\u8a18\n\u30e9\u30b8\u30aa\u3092\u8074\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u8aa4\u8a8d\u8b58\u304c\u6fc0\u3057\u3044\u3002\n\u8aa4\u8a8d\u8b58\u3059\u308b\u3050\u3089\u3044\u306a\u3089\u826f\u3044\u306e\u3060\u304c\u4e8c\u91cd\u306b\u30e9\u30b8\u30aa\u304c\u518d\u751f\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u5f8c\u65e5\u6539\u826f\u3057\u305f\u3044\u3068\u601d\u3046\u3002\n<TABLE ALIGN=CENTER><TR><TD WIDTH=400px>\n <A HREF=\"http://qiita.com/momochan/items/0531d6cd7c1fe4546853\" TARGET=\"_blank\"><STRONG>Raspberry pi\u3067Amazon Echo(AVS)\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u672a\u9042 - Qiita</STRONG></A>\n <A HREF=\"http://b.hatena.ne.jp/entry/http://qiita.com/momochan/items/0531d6cd7c1fe4546853\" TARGET=\"_blank\">\n <IMG BORDER=\"0\" SRC=\"http://b.hatena.ne.jp/entry/image/http://qiita.com/momochan/items/0531d6cd7c1fe4546853\" BORDER=\"0\" ALT=\"\" /></a>\n <BR>\n Raspberry pi\u3067Amazon Echo(AVS)\u3092\u52d5\u304b\u3057\u3066\u307f\u308b\u672a\u9042 - Qiita... \n </TD>\n <TD WIDTH=150px>\n <IMG STYLE=\"float:left;margin-right:.5em;\" SRC=\"http://capture.heartrails.com/120x120/cool?http://qiita.com/momochan/items/0531d6cd7c1fe4546853\" ALT=\"\" WIDTH=\"120\" HEIGHT=\"120\" />\n </TD></TR>\n</TABLE>\n\u3053\u3061\u3089\u3067\u66f8\u3044\u305f\u8a18\u4e8b\u306f\u6709\u529b\u306a\u60c5\u5831\u304c\u898b\u3064\u304b\u3089\u305a\u76f8\u5909\u308f\u3089\u305a\u540c\u3058\u72b6\u614b\u3002\n\u305d\u306e\u72b6\u6cc1\u3092\u6253\u7834\u3059\u3079\u304f\u3001\u30aa\u30ec\u30aa\u30ecAmazonEcho\u3092\u4f5c\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n# \u30aa\u30ec\u30aa\u30ecAmazonEcho\u306b\u3084\u3089\u305b\u305f\u3044\u3053\u3068\n\u3068\u306b\u304b\u304f\u30e9\u30b8\u30aa\u304c\u597d\u304d\u3060\u3002\u3088\u304f\u805e\u3044\u3066\u3044\u308b\u3002\u671d\u306fTBS\u306e\u30b9\u30bf\u30f3\u30d0\u30a4\u3092\u805e\u304f\u3053\u3068\u304c\u6700\u8fd1\u306e\u65e5\u8ab2\u3060\u3002\n6:42\u304b\u3089\u59cb\u307e\u308b\u6b4c\u306e\u306a\u3044\u6b4c\u8b21\u66f2\u306f\u6700\u9ad8\u3060\u3002\n\u3057\u304b\u3057\u5bdd\u8d77\u304d\u306b\u305d\u306e\u3042\u305f\u308a\u306b\u8ee2\u304c\u3063\u3066\u3044\u308biPhone\u3092\u53d6\u308a\u51fa\u3057\u3001radiko\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3057\u3001TBS\u3092\u9078\u629e\u3057\u3001Airplay\u3092\u8a2d\u5b9a\u3059\u308b\u306e\u306f\u3068\u3066\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\u3068\u306a\u308c\u3070\u30e9\u30ba\u30d1\u30a4\u3092radiko\u30b5\u30fc\u30d0\u306b\u3067\u3082\u3057\u3066cron\u3067\u81ea\u52d5\u8d77\u52d5\u3055\u305b\u308c\u3070\u3088\u3044\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3046\u306e\u3060\u304c\u3001\u81ea\u52d5\u306f\u5acc\u3060\u3002\n\n\u3068\u8a00\u3046\u4e8b\u3067\u8a71\u3057\u304b\u3051\u308c\u3070radiko\u304c\u9cf4\u308b\u3053\u3068\u3092\u6700\u7d42\u76ee\u6a19\u306b\u30aa\u30ec\u30aa\u30ecAmazonEcho\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n# \u74b0\u5883\n\n- Raspberry pi (Raspbian)\n- git, python, node.js\n- USB\u30de\u30a4\u30af\n\nraspberry pi\u3067\u30b5\u30a6\u30f3\u30c9\u95a2\u4fc2\u306f\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u4e8b\u524d\u306b\u8abf\u3079\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u305f\u3060\u304d\u305f\u3044\u3002\n\u3053\u3053\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3046\u3002\n<TABLE ALIGN=CENTER><TR><TD WIDTH=400px>\n <A HREF=\"http://qiita.com/linyixian/items/147d8476d808c84a09e0\" TARGET=\"_blank\"><STRONG>Raspbian(Jessie) \u306e\u30b5\u30a6\u30f3\u30c9\u8a2d\u5b9a - Qiita</STRONG></A>\n <A HREF=\"http://b.hatena.ne.jp/entry/http://qiita.com/linyixian/items/147d8476d808c84a09e0\" TARGET=\"_blank\">\n <IMG BORDER=\"0\" SRC=\"http://b.hatena.ne.jp/entry/image/http://qiita.com/linyixian/items/147d8476d808c84a09e0\" BORDER=\"0\" ALT=\"\" /></a>\n <BR>\n Raspbian(Jessie) \u306e\u30b5\u30a6\u30f3\u30c9\u8a2d\u5b9a - Qiita... \n </TD>\n <TD WIDTH=150px>\n <IMG STYLE=\"float:left;margin-right:.5em;\" SRC=\"http://capture.heartrails.com/120x120/cool?http://qiita.com/linyixian/items/147d8476d808c84a09e0\" ALT=\"\" WIDTH=\"120\" HEIGHT=\"120\" />\n </TD></TR>\n</TABLE>\n \n\n# \u97f3\u58f0\u8a8d\u8b58\n<TABLE ALIGN=CENTER><TR><TD WIDTH=400px>\n <A HREF=\"http://qiita.com/momochan/items/1f83db7757a0d68f674b\" TARGET=\"_blank\"><STRONG>LINEBot SDK\uff0bMicrosoft Speech API+Translate API \u3067\u30d0\u30ea\u30cb\u30fc\u30ba\u3068\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b - Qiita</STRONG></A>\n <A HREF=\"http://b.hatena.ne.jp/entry/http://qiita.com/momochan/items/1f83db7757a0d68f674b\" TARGET=\"_blank\">\n <IMG BORDER=\"0\" SRC=\"http://b.hatena.ne.jp/entry/image/http://qiita.com/momochan/items/1f83db7757a0d68f674b\" BORDER=\"0\" ALT=\"\" /></a>\n <BR>\n LINEBot SDK\uff0bMicrosoft Speech API+Translate API \u3067\u30d0\u30ea\u30cb\u30fc\u30ba\u3068\u4f1a\u8a71\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u308b - Qiita... \n </TD>\n <TD WIDTH=150px>\n <IMG STYLE=\"float:left;margin-right:.5em;\" SRC=\"http://capture.heartrails.com/120x120/cool?http://qiita.com/momochan/items/1f83db7757a0d68f674b\" ALT=\"\" WIDTH=\"120\" HEIGHT=\"120\" />\n </TD></TR>\n</TABLE>\n\u97f3\u58f0\u8a8d\u8b58\u306b\u306fMicosoft Speech API\u3092\u5229\u7528\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3051\u308c\u3069\u3082\u3001\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304f [Julius](http://julius.osdn.jp/)\u3068\u3044\u3046\u3082\u306e\u3092\u77e5\u3063\u305f\u306e\u3067\u5229\u7528\u3059\u308b\u4e8b\u3068\u3057\u305f\u3002\n\n### Julius\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nJulius\u3092github\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001\u30e9\u30ba\u30d1\u30a4\u3067\u97f3\u58f0\u8a8d\u8b58\u3067\u304d\u308b\u307e\u3067\u3082\u3063\u3066\u3044\u304f\u3002\n\n```bash\n# \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo apt-get install libasound2-dev\n# Julius\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ git clone https://github.com/julius-speech/julius.git\n$ cd julius\n$ ./configure \n$ make\n$ sudo make install\n```\n\n### \u30c7\u30a3\u30af\u30c6\u30fc\u30b7\u30e7\u30f3\u30ad\u30c3\u30c8\u3068\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u30fc\u30ad\u30c3\u30c8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```bash\n$ wget -O dictation-kit-v4.3.1-linux.tgz\n 'http://sourceforge.jp/frs/redir.php?m=jaist&f=%2Fjulius%2F60416%2Fdictation-kit-v4.3.1-linux.tgz'\n$ wget -O grammar-kit-v4.1.tar.gz\n 'http://sourceforge.jp/frs/redir.php?m=osdn&f=%2Fjulius%2F51159%2Fgrammar-kit-v4.1.tar.gz'\n```\n\n\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3082\u3088\u3044\u304c\u81ea\u5206\u3067\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3068\u305d\u3053\u306b\u8a18\u8f09\u306e\u8a00\u8449\u3057\u304b\u8a8d\u8b58\u3057\u306a\u3044\u3068\u3044\u3046\u4ed5\u69d8\u306a\u306e\u3067\u3001\u4eca\u56de\u306e\u8981\u4ef6\u306b\u306f\u3061\u3087\u3046\u3069\u826f\u3044\u3068\u601d\u3063\u305f\u306e\u3067\u8f9e\u66f8\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n### \u8f9e\u66f8\u306e\u4f5c\u6210\n\n```bash\n$ vi /home/pi/julius_sample/sample.yomi\n$ cat /home/pi/julius_sample/sample.yomi                                                                                                                \n\u30b7\u30b7\u30de\u30eb \u3057\u3057\u307e\u308b\nNHK \u3048\u306c\u3048\u3061\u3051\u30fc\nJFM \u3058\u3047\u30fc\u3046\u3047\u30fc\u3076\nTBS \u3066\u3043\u30fc\u3073\u30fc\u3048\u3059\nINT \u3044\u3093\u305f\u30fc\u3048\u3075\u3048\u3080\n\u6d88\u3057\u3066 \u3051\u3057\u3066\n```\n\n### \u8f9e\u66f8\u306e\u5909\u63db\n\n```bash\n$ cd ~/julius-master\n$ iconv -f utf8 -t eucjp ~/sample.yomi | ./yomi2voca.pl \n > ~/julius-kits/dictation-kit-v4.3.1-linux/sample.dic\n```\n\n### julius conf\u4f5c\u6210\n\n```bash\n$ vi /home/pi/julius_sample/sample.jconf\n$ cat /home/pi/julius_sample/sample.jconf\n-w sample.dic\n-v model/lang_m/bccwj.60k.bingram\n-h model/phone_m/jnas-tri-3k16-gid.binhmm\n-hlist model/phone_m/logicalTri\n-n 5\n-output 1\n-input mic\n-rejectshort 500\n-charconv euc-jp utf8\n-lv 1000\n```\n\n### julius\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u30e2\u30fc\u30c9\u3067\u8d77\u52d5\n\n```bash\n$ julius -C /home/pi/julius-kits/dictation-kit-v4.4/sample.jconf -module\n```\n\n# radiko\n\n\u7121\u4e8b\u8f9e\u66f8\u306b\u3042\u308b\u8a00\u8449\u304c\u8a8d\u8b58\u3057\u305f\u3089raspberry pi\u3067radiko\u518d\u751f\u3092\u884c\u3048\u308b\u74b0\u5883\u3092\u6574\u3048\u308b\u3002\n\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u5229\u7528\u3055\u305b\u3066\u9802\u3044\u305f\u3002\n<TABLE ALIGN=CENTER><TR><TD WIDTH=400px>\n <A HREF=\"http://blog.muchuu.net/post/110867859055/raspberry-pi%E3%81%A7radiko%E3%81%AE%E5%86%8D%E7%94%9F%E9%8C%B2%E9%9F%B3\" TARGET=\"_blank\"><STRONG>Raspberry Pi\u3067radiko\u306e\u518d\u751f\u3001\u9332\u97f3 - Muchuu</STRONG></A>\n <A HREF=\"http://b.hatena.ne.jp/entry/http://blog.muchuu.net/post/110867859055/raspberry-pi%E3%81%A7radiko%E3%81%AE%E5%86%8D%E7%94%9F%E9%8C%B2%E9%9F%B3\" TARGET=\"_blank\">\n <IMG BORDER=\"0\" SRC=\"http://b.hatena.ne.jp/entry/image/http://blog.muchuu.net/post/110867859055/raspberry-pi%E3%81%A7radiko%E3%81%AE%E5%86%8D%E7%94%9F%E9%8C%B2%E9%9F%B3\" BORDER=\"0\" ALT=\"\" /></a>\n <BR>\n Raspberry Pi\u3067radiko\u306e\u518d\u751f\u3001\u9332\u97f3 - Muchuu... \n </TD>\n <TD WIDTH=150px>\n <IMG STYLE=\"float:left;margin-right:.5em;\" SRC=\"http://capture.heartrails.com/120x120/cool?http://blog.muchuu.net/post/110867859055/raspberry-pi%E3%81%A7radiko%E3%81%AE%E5%86%8D%E7%94%9F%E9%8C%B2%E9%9F%B3\" ALT=\"\" WIDTH=\"120\" HEIGHT=\"120\" />\n </TD></TR>\n</TABLE>\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\njulius\u304c\u97f3\u58f0\u8a8d\u8b58\u3092\u884c\u3063\u3066\u304f\u308c\u308b\u304c\u3001\u305d\u308c\u3092\u53d7\u3051\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\u3053\u3068\u306b\u3059\u308b\u3002\nPHP\u3067\u66f8\u304d\u305f\u304b\u3063\u305f\u304c\u60c5\u5831\u304c\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067python\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u305f\u3060\u3057\u50d5\u306fpython\u3092\u66f8\u3051\u306a\u3044\u306e\u3067\u4f55\u4eba\u304b\u306e\u65b9\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u7d44\u5408\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n(\u3061\u306a\u307f\u306b\u30b7\u30b7\u30de\u30eb\u3068\u306f\u6614\u98fc\u3063\u3066\u305f\u72ac\u306e\u540d\u524d\u3002\u65e5\u5e38\u751f\u6d3b\u3082\u3057\u304f\u306f\u30e9\u30b8\u30aa\u30fb\u30c6\u30ec\u30d3\u304b\u3089\u767a\u305b\u3089\u308c\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u306a\u3044\u3068\u601d\u3044\u3001\u8aa4\u8a8d\u8b58\u306f\u3057\u306a\u3044\u3068\u601d\u3063\u305f\u304b\u3089\uff09\n\u6d41\u308c\n\n1. python\u304b\u3089julius\u3092\u8d77\u52d5\u3055\u305b\u308b\u3002\n- \u30b7\u30b7\u30de\u30eb\u3068\u3044\u3046\u8a00\u8449\u3092\u8a8d\u8b58\u3059\u308b\u3068\u5f85\u6a5f\u72b6\u614b\u306b\u5165\u308b\uff08Hey Siri\u3084Alexa\u306e\u3088\u3046\u306a\u3053\u3068\uff09\n- \u5f85\u6a5f\u72b6\u614b\u3067\u8f9e\u66f8\u306b\u767b\u9332\u3055\u308c\u305f\u8a00\u8449\u3092\u8a8d\u8b58\u3059\u308b\u3068\u5404\u3005\u306e\u52d5\u4f5c\u3092\u884c\u3046\uff08\u4eca\u56de\u306f\u30e9\u30b8\u30aa\u3092\u518d\u751f\u3059\u308b\uff09\n\n\n```python:sample_listner.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport os\nimport sys\nimport socket\nimport requests\nimport re\nimport subprocess\nimport shlex\nimport time\nimport threading\n\njulius_path = '/home/pi/src/julius-master/julius/julius'\njconf_path = '/home/pi/julius-kits/dictation-kit-v4.4/sample.jconf'\njulius = None\njulius_socket = None\n\n\ndef invoke_julius():\n    print 'INFO : invoke julius'\n    args = julius_path + ' -C ' + jconf_path + ' -module '\n    p = subprocess.Popen(\n            shlex.split(args),\n            stdin=None,\n            stdout=None,\n            stderr=None\n        )\n    print 'INFO : invoke julius complete.'\n    print 'INFO : wait 2 seconds.'\n    time.sleep(3.0)\n    print 'INFO : invoke julius complete'\n    return p\n\n\ndef kill_julius(julius):\n    print 'INFO : terminate julius'\n    julius.kill()\n    while julius.poll() is None:\n        print 'INFO : wait for 0.1 sec julius\\' termination'\n        time.sleep(0.1)\n    print 'INFO : terminate julius complete'\n\n\ndef get_OS_PID(process):\n    psef = 'ps -ef | grep ' + process + ' | grep -ve grep -vie python |head -1|awk \\'{print($2)}\\''\n    if sys.version_info.major == 3:\n        PID = str(subprocess.check_output(psef, shell=True), encoding='utf-8').rstrip ()\n    else:\n        PID = subprocess.check_output(psef, shell=True).rstrip ()\n    return PID\n\n\ndef create_socket():\n    print 'INFO : create a socket to connect julius'\n    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    s.connect(('localhost', 10500))\n    print 'INFO : create a socket to connect julius complete'\n    return s\n\n\ndef delete_socket(s):\n    print 'INFO : delete a socket'\n    s.close()\n    print 'INFO : delete a socket complete'\n    return True\n\n\ndef invoke_julius_set():\n    julius = invoke_julius()\n    julius_socket = create_socket()\n    sf = julius_socket.makefile('rb')\n    return (julius, julius_socket, sf)\n\nSTATUS_WAITING   = 0\nSTATUS_READY     = 1\nSTATUS_EXECUTING = 2\nSTATUS_FINISH    = 3\n \nstatus = STATUS_WAITING\n \ndef status_change(new_status):\n  global status\n  if status == STATUS_WAITING:\n    if new_status == STATUS_READY:\n      status = new_status\n      print \"Status is READY.\" \n      threading.Timer(15, status_change, args=[STATUS_WAITING]).start()\n  elif status == STATUS_READY:\n    if new_status == STATUS_WAITING:\n      status = new_status\n      print \"Status is WAITING.\" \n    elif new_status == STATUS_EXECUTING:\n      status = new_status\n      print \"Status is EXECUTING.\" \n      threading.Timer(30, status_change, args=[STATUS_FINISH]).start()\n  elif status == STATUS_EXECUTING:\n    if new_status == STATUS_WAITING:\n      print \"Command is executed now, so I do NOT change status.\"\n    if new_status == STATUS_FINISH:\n      status = STATUS_WAITING\n      print \"Status is WAITING.\" \n\n      \ndef play_mp3(sound_file):\n    args =  \"mplayer --quiet \" + sound_file\n    print args\n    p = subprocess.Popen(\n            shlex.split(args),\n            stdin=None,\n            stdout=None,\n            stderr=None\n        )\n    time.sleep(0.5)\n    return True\n\ndef call_jsay(text):\n    cmd = \"/usr/local/bin/jsay %s\" % text\n    subprocess.call(cmd, shell=True)\n\ndef radio_on(channel):\n    cmd =\"/home/pi/radiko/radiko.sh -p %s >/dev/null 2>&1 &\" %channel\n    subprocess.call(cmd, shell=True)\n\ndef nhk_on(channel):\n    cmd =\"/home/pi/radiko/nhk.sh %s >/dev/null 2>&1 &\" %channel\n    subprocess.call(cmd, shell=True)\n\n\ndef radio_off():\n    # off\n    cmd =\"killall mplayer\"\n    subprocess.call(cmd, shell=True)\n\ndef main():\n    global julius\n    global julius_socket\n    julius, julius_socket, sf = invoke_julius_set()\n\n    while True:\n        if julius.poll() is not None:   # means , julius dead\n            print 'ERROR : julius dead'\n            delete_socket(julius_socket)\n            julius, julius_socket, sf = invoke_julius_set()\n        else:\n            line = sf.readline().decode('utf-8')\n            if line.find('WHYPO') != -1:\n               if line.find(u'\u30b7\u30b7\u30de\u30eb') != -1:\n                     if status == STATUS_WAITING:\n                           print \"Julius is ready to your command.\"\n                           status_change(STATUS_READY)\n                           play_mp3(\"/home/pi/julius_sample/sound/ok.mp3\") \n                           print \"Shishimaru is wating.\"\n               elif line.find(u'TBS') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30c6\u30a3\u30fc\u30d3\u30fc\u30a8\u30b9\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('TBS')\n                           print \"Call TBS\"\n               elif line.find(u'INT') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30a4\u30f3\u30bf\u30fc\u30a8\u30d5\u30a8\u30e0\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('INT')\n                           print \"Call INTERFM\"\n               elif line.find(u'JFM') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30b8\u30a7\u30fc\u30a6\u30a7\u30fc\u30d6\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_on('FMJ')\n                           print \"Call JWAVE\"\n               elif line.find(u'NHK') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30a8\u30cc\u30a8\u30c1\u30b1\u30fc\u3092\u6d41\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           nhk_on('fm')\n                           print \"Call NHK\"\n               elif line.find(u'\u6d88\u3057\u3066') != -1:\n                        if status == STATUS_READY:\n                           call_jsay('\u30e9\u30b8\u30aa\u3092\u6d88\u3059\u3088')\n                           time.sleep(2.0)\n                           status_change(STATUS_EXECUTING)\n                           radio_off()\n                           print \"Call Radio Off\"\n               \n    print 'WARN : while loop breaked'\n    print 'INFO : exit'\n\n\nif __name__ == '__main__':\n    try:\n        main()\n    except KeyboardInterrupt:\n        print 'Interrupted. Exit sequence start..'\n        kill_julius(julius)\n        delete_socket(julius_socket)\n        print 'INFO : Exit sequence done.'\n        sys.exit(0)()\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n```bash\n$ python sample_listner.py\n```\n\n### \u518d\u751f\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"und\" dir=\"ltr\"><a href=\"https://t.co/0sMy6wdWYG\">pic.twitter.com/0sMy6wdWYG</a></p>&mdash; momochan_qiita (@momochan_qiita) <a href=\"https://twitter.com/momochan_qiita/status/820046015055003648\">2017\u5e741\u670813\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u601d\u3063\u305f\u901a\u308a\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\u30b7\u30b7\u30de\u30eb\u3092\u8a8d\u8b58\u3057\u305f\u3089\u30dd\u30fc\u30f3\u3068\u3044\u3046\u97f3\u3092\u9cf4\u3089\u3059\u3053\u3068\u306b\u3057\u305f\u3002\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3089\u3002\n\n### \u505c\u6b62\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"und\" dir=\"ltr\"><a href=\"https://t.co/Tszh6WZE2j\">pic.twitter.com/Tszh6WZE2j</a></p>&mdash; momochan_qiita (@momochan_qiita) <a href=\"https://twitter.com/momochan_qiita/status/820046427799683073\">2017\u5e741\u670813\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u505c\u6b62\u306b\u306f\u8a00\u8449\u3067\u306f\u306a\u304f\u4ee5\u524d\u30cf\u30c3\u30af\u3057\u305fAmazon Dash Button\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u3002\n\u7406\u7531\u306f\u30b9\u30d4\u30fc\u30ab\u30fc\u306e\u6a2a\u306b\u30de\u30a4\u30af\u3092\u7f6e\u3044\u3066\u3044\u308b\u305f\u3081\u8a00\u8449\u3092\u8a8d\u8b58\u3057\u3066\u304f\u308c\u306a\u304b\u3063\u305f\u304b\u3089\u3060\u3002\n![IMG_0482.JPG](https://qiita-image-store.s3.amazonaws.com/0/120983/4316a16e-dc72-82ef-69fe-d0fbfb68708b.jpeg)\n\n\u5ff5\u306e\u305f\u3081\u505c\u6b62\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3002\nAmazon Dash Button\u304c\u62bc\u3055\u308c\u305f\u3089\u3001killall mplayer\u3057\u3066\u308b\u3060\u3051\u3002\n\n```node:app.js\nvar dash_button = require('node-dash-button');                                                                                                                 \nvar dash = dash_button(\"xx:xx:xx:xx:xx:xx\", null, null, 'all'); //address from step above                                                                      \ndash.on(\"detected\", function (){                                                                                                                               \nvar exec = require('child_process').exec\n, cmd;\n \ncmd = 'killall mplayer';\n \nkillmplayer = function() {\n    return exec(cmd, {timeout: 1000},\n        function(error, stdout, stderr) {\n            console.log('stdout: '+(stdout||'none'));\n            console.log('stderr: '+(stderr||'none'));\n            if(error !== null) {\n                console.log('exec error: '+error);\n            }\n        }\n    )\n};\n \n```\n\n### \u8a8d\u8b58\u3057\u3066\u3044\u306a\u3044\u30d1\u30bf\u30fc\u30f3\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"und\" dir=\"ltr\"><a href=\"https://t.co/3TlEFVUUuw\">pic.twitter.com/3TlEFVUUuw</a></p>&mdash; momochan_qiita (@momochan_qiita) <a href=\"https://twitter.com/momochan_qiita/status/820046529306116096\">2017\u5e741\u670813\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u4ee5\u4e0a\u3067\u7121\u4e8b\u30aa\u30ec\u30aa\u30ecAmazonEcho\u304c\u4f5c\u308c\u305f\u3002\n\u3042\u3068\u306f\u3053\u308c\u3092\u6628\u65e5\u899a\u3048\u305fsupervisor\u3067\u30c7\u30fc\u30e2\u30f3\u5316\u3059\u308c\u3070\u5b8c\u4e86\u3002\n\n\u30e9\u30ba\u30d1\u30a4\u306e\u4f7f\u3044\u65b9\u3068\u3057\u3066\u306f\u6e80\u8db3\u306a\u3082\u306e\u304c\u3067\u304d\u305f\u3002\n\n# \u8ffd\u8a18\n\u30e9\u30b8\u30aa\u3092\u8074\u3044\u3066\u3044\u308b\u3068\u304d\u306e\u8aa4\u8a8d\u8b58\u304c\u6fc0\u3057\u3044\u3002\n\u8aa4\u8a8d\u8b58\u3059\u308b\u3050\u3089\u3044\u306a\u3089\u826f\u3044\u306e\u3060\u304c\u4e8c\u91cd\u306b\u30e9\u30b8\u30aa\u304c\u518d\u751f\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u5f8c\u65e5\u6539\u826f\u3057\u305f\u3044\u3068\u601d\u3046\u3002\n", "tags": ["RaspberryPi", "Julius", "OpenJTalk", "\u97f3\u58f0\u8a8d\u8b58"]}