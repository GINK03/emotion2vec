{"context": "\n\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\ncifar10_eval.py\u3092\u898b\u3066\u3044\u305f\u3002\n\u4ee5\u4e0b\u306e\u90e8\u5206\u304c\u6c17\u306b\u306a\u3063\u305f\u3002\n\ncifar10_eval.py\n...\ndef eval_once(saver, summary_writer, top_k_op, summary_op):\n...\n      # Assuming model_checkpoint_path looks something like:\n      #   /my-favorite-path/cifar10_train/model.ckpt-0,\n      # extract global_step from it.\n      global_step = ckpt.model_checkpoint_path.split('/')[-1].split('-')[-1]\n\n\nideone\u3067\u8a66\u3057\u3066\u307f\u305f\u3002\nhttp://ideone.com/Nwbx1m\n# your code goes here\nckpt='/AAA/BBB/CCC/DDD-E'\nprint ckpt\n\nprint ckpt.split('/')[-1]\nprint ckpt.split('-')[-1]\n\n/AAA/BBB/CCC/DDD-E\nDDD-E\nE\n\n.split()[-1]\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u8a72\u5f53\u306e\u6587\u5b57\u3067\u5206\u5272\u3057\u305f\u3042\u3068\u306b\u3001-1\u3067\u6700\u5f8c\u306e\u9805\u76ee\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u3060\u3002\n\u5225\u9014\u3001\u4ee5\u4e0b\u306e\u81ea\u5206\u306e\u904e\u53bb\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u3002\n\u95a2\u9023\u3000python > string > split(\",\")\u306e\u7d50\u679c\u306e\u500b\u6570\u3092\u5f97\u308b > cmds=\"set,mon,192.168.10.8,6000\".split(\",\") \u3057\u3066\u304b\u3089 count = len(cmds)\n```txt:\u52d5\u4f5c\u74b0\u5883\nUbuntu 14.04 LTS desktop amd64\nGeForce GTX 750 Ti\nASRock Z170M Pro4S [Intel Z170chipset]\nTensorFlow v0.11\ncuDNN v5.1 for Linux\nCUDA v7.5\nPython 2.7.6\nIPython 5.1.0 -- An enhanced Interactive Python.\n```\n\nTensorFlow\u3068\u3044\u3046Deep Learning\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u5b66\u7fd2\u4e2d\u3002\n\nTensorFlow\u3092\u904a\u3073\u5012\u3059\uff01 4-1. Convolutional Neural Networks\nhttp://blog.brainpad.co.jp/entry/2016/04/22/170000\nhttps://www.tensorflow.org/versions/master/tutorials/deep_cnn/index.html\n\ncifar10_eval.py\u3092\u898b\u3066\u3044\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u90e8\u5206\u304c\u6c17\u306b\u306a\u3063\u305f\u3002\n\n```cifar10_eval.py\n...\ndef eval_once(saver, summary_writer, top_k_op, summary_op):\n...\n      # Assuming model_checkpoint_path looks something like:\n      #   /my-favorite-path/cifar10_train/model.ckpt-0,\n      # extract global_step from it.\n      global_step = ckpt.model_checkpoint_path.split('/')[-1].split('-')[-1]\n```\n\nideone\u3067\u8a66\u3057\u3066\u307f\u305f\u3002\n\nhttp://ideone.com/Nwbx1m\n\n```py\n# your code goes here\nckpt='/AAA/BBB/CCC/DDD-E'\nprint ckpt\n\nprint ckpt.split('/')[-1]\nprint ckpt.split('-')[-1]\n```\n\n```\n/AAA/BBB/CCC/DDD-E\nDDD-E\nE\n```\n\n.split()[-1]\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u8a72\u5f53\u306e\u6587\u5b57\u3067\u5206\u5272\u3057\u305f\u3042\u3068\u306b\u3001-1\u3067\u6700\u5f8c\u306e\u9805\u76ee\u3092\u53d6\u5f97\u3059\u308b\u3088\u3046\u3060\u3002\n\n\u5225\u9014\u3001\u4ee5\u4e0b\u306e\u81ea\u5206\u306e\u904e\u53bb\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u3002\n\u95a2\u9023\u3000[python > string > split(\",\")\u306e\u7d50\u679c\u306e\u500b\u6570\u3092\u5f97\u308b > cmds=\"set,mon,192.168.10.8,6000\".split(\",\") \u3057\u3066\u304b\u3089 count = len(cmds)](http://qiita.com/7of9/items/499832eec82d47514331)\n", "tags": ["TensorFlow", "borgWarp", "difficultToSearch", "stringOperation"]}