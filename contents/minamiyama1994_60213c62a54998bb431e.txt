{"context": " More than 1 year has passed since last update.\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642eval\u4f5c\u3063\u3066\u307f\u305f\n\u4f5c\u3063\u3066\u307f\u305f\u30cd\u30bf\u3067\u3059\u3001\u3068\u3044\u3046\u8a33\u3067\u307e\u305a\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\nhttps://github.com/minamiyama1994/Compile-Time-Eval\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\n#include<typeinfo>\n#include\"CTE/CTE.hpp\"\nauto main ( ) -> int\n{\n    auto eval1 = CTE_EVAL ( \"1+20*10/(5+5)\" ) ;\n    auto eval2 = CTE_EVAL ( \"1+20*10/(5+5)+.5\" ) ;\n    auto eval3 = CTE_EVAL ( u8R\"*****(\"Hello\"+\" \"+\"World\")*****\" ) ;\n    std::cout << eval1 << std::endl ;\n    std::cout << typeid ( eval1 ).name ( ) << std::endl ;\n    std::cout << eval2 << std::endl ;\n    std::cout << typeid ( eval2 ).name ( ) << std::endl ;\n    std::cout << eval3 << std::endl ;\n    std::cout << typeid ( eval3 ).name ( ) << std::endl ;\n}\n\n\u624b\u5143\u306eGCC4.8.1\u3060\u3068\u3053\u306e\u3088\u3046\u306a\u51fa\u529b\u3068\u306a\u308a\u307e\u3057\u305f\n$ ./prog\n21\ni\n21.5\nd\nHello World\nSs\n\n\u3055\u3059\u304c\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u306a\u3069\u306e\u6a5f\u80fd\u304c\u306a\u3044\u3068\u5909\u6570\u3092\u53d6\u308a\u8fbc\u3093\u3060\u308a\u306f\u96e3\u3057\u3044\u305f\u3081\u3001\u5b9a\u6570\u306e\u307f\u3067\u69cb\u6210\u3055\u308c\u305f\u5f0f\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\n\u539f\u7406\u3068\u3057\u3066\u306f\u7c21\u5358\u3067\u3001\u4ee5\u524d\u7d39\u4ecb\u3057\u305f\u578b\u5b89\u5168printf\u3068\u540c\u3058\u3067\u3001\u4e2d\uff13\u5973\u5b50\u6c0f\u306eSprout\u3068\u50d5\u306e\u4f5c\u3063\u305fFTMP\u3092\u4f75\u7528\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u3092\u578b\u306b\u843d\u3068\u3057\u3053\u3093\u3067\u5f8c\u306fTMP\u3067\u30b4\u30ea\u30b4\u30ea\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3001\u7d30\u304b\u3044\u3053\u3068\u304c\u6c17\u306b\u306a\u308b\u4eba\u306f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u304f\u3060\u3055\u3044(\u7121\u8cac\u4efb)\nHaskell\u3084Nemerle\u3001Lisp\u306a\u3069\u3060\u3068\u7c21\u5358\u306aeval\u3067\u3059\u304c\u3001C++\u3067\u3082\u4e00\u5fdc\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u306f\u51fa\u6765\u308b\u3093\u3060\u3088\u3001\u3063\u3066\u3044\u3046\u3001\u307e\u3042\u305d\u308c\u3060\u3051\u306e\u8a71\u3067\u3057\u305f\u3002\n\u306a\u304a\u3001\u53b3\u5bc6\u306b\u306f\u7d50\u679c\u304cconstexpr\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3068\u3044\u3046\u306e\u306f\u591a\u5c11\u8a87\u5f35\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u307e\u3042\u3001\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\n\u306a\u304a\u3001C++14\u3067\u3059\u3001C++11\u7e1b\u308a\u306f(\u4ee5\u4e0b\u7565)\n# \u30b3\u30f3\u30d1\u30a4\u30eb\u6642eval\u4f5c\u3063\u3066\u307f\u305f\n\n\u4f5c\u3063\u3066\u307f\u305f\u30cd\u30bf\u3067\u3059\u3001\u3068\u3044\u3046\u8a33\u3067\u307e\u305a\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\nhttps://github.com/minamiyama1994/Compile-Time-Eval\n\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\n\n```cpp\n#include<typeinfo>\n#include\"CTE/CTE.hpp\"\nauto main ( ) -> int\n{\n    auto eval1 = CTE_EVAL ( \"1+20*10/(5+5)\" ) ;\n    auto eval2 = CTE_EVAL ( \"1+20*10/(5+5)+.5\" ) ;\n    auto eval3 = CTE_EVAL ( u8R\"*****(\"Hello\"+\" \"+\"World\")*****\" ) ;\n    std::cout << eval1 << std::endl ;\n    std::cout << typeid ( eval1 ).name ( ) << std::endl ;\n    std::cout << eval2 << std::endl ;\n    std::cout << typeid ( eval2 ).name ( ) << std::endl ;\n    std::cout << eval3 << std::endl ;\n    std::cout << typeid ( eval3 ).name ( ) << std::endl ;\n}\n```\n\n\u624b\u5143\u306eGCC4.8.1\u3060\u3068\u3053\u306e\u3088\u3046\u306a\u51fa\u529b\u3068\u306a\u308a\u307e\u3057\u305f\n\n```text\n$ ./prog\n21\ni\n21.5\nd\nHello World\nSs\n```\n\n\u3055\u3059\u304c\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u306a\u3069\u306e\u6a5f\u80fd\u304c\u306a\u3044\u3068\u5909\u6570\u3092\u53d6\u308a\u8fbc\u3093\u3060\u308a\u306f\u96e3\u3057\u3044\u305f\u3081\u3001\u5b9a\u6570\u306e\u307f\u3067\u69cb\u6210\u3055\u308c\u305f\u5f0f\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u307e\u3059\n\u539f\u7406\u3068\u3057\u3066\u306f\u7c21\u5358\u3067\u3001[\u4ee5\u524d\u7d39\u4ecb\u3057\u305f\u578b\u5b89\u5168printf](http://qiita.com/minamiyama1994/items/95ef490043c495be8c44)\u3068\u540c\u3058\u3067\u3001[\u4e2d\uff13\u5973\u5b50\u6c0f](https://twitter.com/bolero_MURAKAMI)\u306e[Sprout](https://github.com/bolero-MURAKAMI/Sprout)\u3068\u50d5\u306e\u4f5c\u3063\u305f[FTMP](https://github.com/minamiyama1994/FTMP)\u3092\u4f75\u7528\u3057\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u6587\u5b57\u5217\u3092\u578b\u306b\u843d\u3068\u3057\u3053\u3093\u3067\u5f8c\u306fTMP\u3067\u30b4\u30ea\u30b4\u30ea\u8272\u3005\u3084\u3063\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3001\u7d30\u304b\u3044\u3053\u3068\u304c\u6c17\u306b\u306a\u308b\u4eba\u306f\u30b3\u30fc\u30c9\u3092\u898b\u3066\u304f\u3060\u3055\u3044(\u7121\u8cac\u4efb)\nHaskell\u3084Nemerle\u3001Lisp\u306a\u3069\u3060\u3068\u7c21\u5358\u306aeval\u3067\u3059\u304c\u3001C++\u3067\u3082\u4e00\u5fdc\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u306f\u51fa\u6765\u308b\u3093\u3060\u3088\u3001\u3063\u3066\u3044\u3046\u3001\u307e\u3042\u305d\u308c\u3060\u3051\u306e\u8a71\u3067\u3057\u305f\u3002\n\u306a\u304a\u3001\u53b3\u5bc6\u306b\u306f\u7d50\u679c\u304cconstexpr\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u3068\u3044\u3046\u306e\u306f\u591a\u5c11\u8a87\u5f35\u304c\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u307e\u3042\u3001\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\n\n\u306a\u304a\u3001C++14\u3067\u3059\u3001C++11\u7e1b\u308a\u306f(\u4ee5\u4e0b\u7565)\n", "tags": ["C++14", "C++14", "Sprout", "tmp"]}