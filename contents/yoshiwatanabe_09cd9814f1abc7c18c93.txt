{"context": " More than 1 year has passed since last update.\uff08\u305d\u306e\uff13\uff09\n\n\u30b3\u30a4\u30f3\u6295\u30521\u30bb\u30c3\u30c8\uff1d3\u56de\u6295\u3052\u308b\n\u3053\u308c\u306f\u672c\u306b\u306f\u306a\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u5358\u7d14\u306b\u300c1\u30bb\u30c3\u30c82\u56de\u6295\u3052\u300d\u3092\u300c1\u30bb\u30c3\u30c83\u56de\u6295\u3052\u300d\u306b\u3057\u3066\u3001\u5408\u8a08\u3092\u300c4\u679a\u6295\u3052\u300d\u304b\u3089\u300c6\u679a\u6295\u3052\u300d\u306b\u3057\u3066\u307f\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\u89e3\u8aac\u306f\u306a\u3057\u3002\u524d\u56de\u306e\uff08\u305d\u306e\uff11\uff09\u3068\uff08\u305d\u306e\uff12\uff09\u3068\u5185\u5bb9\u306f\u540c\u3058\u3002\nfrom random import randint\nfrom decimal import Decimal\nfrom prettytable import PrettyTable\nimport numpy as np\n\ndef tossBiasedCoin():\n    \"\"\" Returns 0 or 1 with 0 having 2/3 chance \"\"\"\n    return randint(0,2) % 2\n\n# Make a 4x4 array\ncounts = [[0 for j in range(4)] for i in range(4)]\n\n# Toss a coin many times to get counts\nsampleCount = 500000\nfor num in range(sampleCount):    \n    firstSet = [tossBiasedCoin(),tossBiasedCoin(),tossBiasedCoin()] # 0, 1, 2, 3\n    secondSet = [tossBiasedCoin(),tossBiasedCoin(),tossBiasedCoin()]\n    counts[sum(secondSet)][sum(firstSet)] += 1\n\n# Conert all counts to perentage\nTWOPLACES = Decimal(10) ** -2 \nfor i in range(4):\n    for j in range(4):\n        value = counts[i][j]        \n        counts[i][j] = (100 * Decimal(counts[i][j])/Decimal(sampleCount)).quantize(TWOPLACES)\n        print(\"Converted the value {} to percentage {}\".format(value, counts[i][j]))\n\n# Make summaries of number of heads.\nkeys = np.arange(7)\nvalues = [counts[0][0], # 0\n          counts[0][1]+counts[1][0], # 1\n          counts[0][2]+counts[2][0]+counts[1][1],\n          counts[0][3]+counts[1][2]+counts[2][1]+counts[3][0],\n          counts[1][3]+counts[2][2]+counts[3][1],\n          counts[2][3]+counts[3][2],\n          counts[3][3]]\n\n# Add row descriptions\ncounts[0].insert(0, '2nd set 0 head')\ncounts[1].insert(0, '2nd set 1 head')\ncounts[2].insert(0, '2nd set 2 heads')\ncounts[3].insert(0, '2nd set 3 heads')\n\n# Create table with column descriptions, add rows, then show it.\ntable = PrettyTable([\"\", \"1st set 0 head\", \"1st set 1 head\", \"1st set 2 heads\", \"1st set 3 heads\"])\ntable.padding_width = 1\ntable.add_row(counts[0])\ntable.add_row(counts[1])\ntable.add_row(counts[2])\ntable.add_row(counts[3])\nprint table\n\n# Draw a bar chart\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nrects = plt.bar(keys,\n                 values, \n                 0.5,\n                 alpha=0.4,\n                 align=\"center\", \n                 color='b')\n\nplt.xlabel('Number of heads')\nplt.ylabel('Probability (%)')\nplt.title('Probabilities heads with a biased coin')\nplt.xticks(keys, np.arange(7))\n\nplt.tight_layout()\nplt.show()\n\n\n\u7d50\u679c\n\u307e\u305f\u3055\u3089\u306b\u6a19\u6e96\u504f\u5dee\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u304d\u305f\u3002\n\n6\u679a\u6295\u3052\u3066\u4f55\u679a\u8868\u306b\u306a\u308b\u304b\u306f\u3001\u300c6 x 1/3\u300d\u3067\u30012\u306b\u306a\u308b\u304b\u3089\u300c2\u679a\u8868\u306b\u306a\u308a\u3084\u3059\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u3002\n\uff08\u305d\u306e\uff14\uff09\u306b\u3064\u3065\u304f\u3002\n\uff08\u305d\u306e\uff13\uff09\n\n#\u30b3\u30a4\u30f3\u6295\u30521\u30bb\u30c3\u30c8\uff1d3\u56de\u6295\u3052\u308b\n\n\u3053\u308c\u306f\u672c\u306b\u306f\u306a\u304b\u3063\u305f\u3093\u3060\u3051\u3069\u3001\u5358\u7d14\u306b\u300c1\u30bb\u30c3\u30c82\u56de\u6295\u3052\u300d\u3092\u300c1\u30bb\u30c3\u30c83\u56de\u6295\u3052\u300d\u306b\u3057\u3066\u3001\u5408\u8a08\u3092\u300c4\u679a\u6295\u3052\u300d\u304b\u3089\u300c6\u679a\u6295\u3052\u300d\u306b\u3057\u3066\u307f\u305f\u3002\n\n#\u30b3\u30fc\u30c9\n\n\u89e3\u8aac\u306f\u306a\u3057\u3002\u524d\u56de\u306e[\uff08\u305d\u306e\uff11\uff09](http://qiita.com/yoshiwatanabe/items/3fd11e3c9daee8f06953)\u3068[\uff08\u305d\u306e\uff12\uff09](http://qiita.com/yoshiwatanabe/items/807f6b68806b99cdfae4)\u3068\u5185\u5bb9\u306f\u540c\u3058\u3002\n\n```py\nfrom random import randint\nfrom decimal import Decimal\nfrom prettytable import PrettyTable\nimport numpy as np\n\ndef tossBiasedCoin():\n    \"\"\" Returns 0 or 1 with 0 having 2/3 chance \"\"\"\n    return randint(0,2) % 2\n\n# Make a 4x4 array\ncounts = [[0 for j in range(4)] for i in range(4)]\n\n# Toss a coin many times to get counts\nsampleCount = 500000\nfor num in range(sampleCount):    \n    firstSet = [tossBiasedCoin(),tossBiasedCoin(),tossBiasedCoin()] # 0, 1, 2, 3\n    secondSet = [tossBiasedCoin(),tossBiasedCoin(),tossBiasedCoin()]\n    counts[sum(secondSet)][sum(firstSet)] += 1\n\n# Conert all counts to perentage\nTWOPLACES = Decimal(10) ** -2 \nfor i in range(4):\n    for j in range(4):\n        value = counts[i][j]        \n        counts[i][j] = (100 * Decimal(counts[i][j])/Decimal(sampleCount)).quantize(TWOPLACES)\n        print(\"Converted the value {} to percentage {}\".format(value, counts[i][j]))\n\n# Make summaries of number of heads.\nkeys = np.arange(7)\nvalues = [counts[0][0], # 0\n          counts[0][1]+counts[1][0], # 1\n          counts[0][2]+counts[2][0]+counts[1][1],\n          counts[0][3]+counts[1][2]+counts[2][1]+counts[3][0],\n          counts[1][3]+counts[2][2]+counts[3][1],\n          counts[2][3]+counts[3][2],\n          counts[3][3]]\n          \n# Add row descriptions\ncounts[0].insert(0, '2nd set 0 head')\ncounts[1].insert(0, '2nd set 1 head')\ncounts[2].insert(0, '2nd set 2 heads')\ncounts[3].insert(0, '2nd set 3 heads')\n\n# Create table with column descriptions, add rows, then show it.\ntable = PrettyTable([\"\", \"1st set 0 head\", \"1st set 1 head\", \"1st set 2 heads\", \"1st set 3 heads\"])\ntable.padding_width = 1\ntable.add_row(counts[0])\ntable.add_row(counts[1])\ntable.add_row(counts[2])\ntable.add_row(counts[3])\nprint table\n\n# Draw a bar chart\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()\nrects = plt.bar(keys,\n                 values, \n                 0.5,\n                 alpha=0.4,\n                 align=\"center\", \n                 color='b')\n\nplt.xlabel('Number of heads')\nplt.ylabel('Probability (%)')\nplt.title('Probabilities heads with a biased coin')\nplt.xticks(keys, np.arange(7))\n\nplt.tight_layout()\nplt.show()\n```\n\n#\u7d50\u679c\n\n\u307e\u305f\u3055\u3089\u306b\u6a19\u6e96\u504f\u5dee\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u304d\u305f\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/103139/e202c292-6e43-489e-803f-f23a1f6528ca.png)\n\n6\u679a\u6295\u3052\u3066\u4f55\u679a\u8868\u306b\u306a\u308b\u304b\u306f\u3001\u300c6 x 1/3\u300d\u3067\u30012\u306b\u306a\u308b\u304b\u3089\u300c2\u679a\u8868\u306b\u306a\u308a\u3084\u3059\u3044\u300d\u3068\u3044\u3046\u3053\u3068\u3002\n\n[\uff08\u305d\u306e\uff14\uff09](http://qiita.com/yoshiwatanabe/items/76cbd61e843b7d3c11c3)\u306b\u3064\u3065\u304f\u3002\n", "tags": ["Python", "python2.7"]}