{"tags": ["otto", "Terraform", "packer", "AWS"], "context": " More than 1 year has passed since last update.\n[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9\n\n[\u899a\u66f8]Otto\u3067AWS\u306b\u672c\u756a\u74b0\u5883\u69cb\u7bc9\uff06\u30c7\u30d7\u30ed\u30a4 \u2190 \u3053\u3053\n\n[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9 (Appfile\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u2192 Ruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a)\n[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9 (MongoDB\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059)\n\n\n\u691c\u8a3c\u74b0\u5883\n\nOS : OS X 10.10.5\n\n\n\nHomebrew : 0.9.5\n\nbrew cask : 0.56.0\n\n\n\n\n\u4e8b\u524d\u6e96\u5099\n\nAWS\u306eAPI\u30ad\u30fc\u306a\u3069\n\u4e0b\u8a18\u306fAWS\u306e\u7ba1\u7406\u753b\u9762\u3067\u306e\u4f5c\u696d\u3067\u3059\u3002\n\n\nIAM(Identity and Access Management)\u304b\u3089IAM\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\n\u3053\u306e\u969b\u3001\u8a8d\u8a3c\u60c5\u5831\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u5fd8\u308c\u305a\u306b\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3084\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u3063\u305f\u3089\u3053\u308c\u3060\u3051\u306f\u3084\u3063\u3068\u3051\uff01IAM\u30e6\u30fc\u30b6\u30fc\u3068Authy\u3092\u4f7f\u3063\u305fMFA\u30672\u6bb5\u968e\u8a8d\u8a3c - Qiita:\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\nTerraform\u304a\u3088\u3073Packer\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\notto infra\u3084otto build\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u3001Terraform\u3084Packer\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u691c\u8a3c\u3057\u305f\u74b0\u5883\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3057\u305f\u306e\u3067\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002\nbrew cask\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ brew install terraform\n$ brew install packer\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u304b\u78ba\u8a8d\u3002\n$ terraform --version\nTerraform v0.6.3\n\nYour version of Terraform is out of date! The latest version\nis 0.6.7. You can update by downloading from www.terraform.io\n$ packer --version\n0.8.6\n\n\n\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\n\n\u8d77\u52d5\n\u5fc5\u8981\u306a\u3082\u306e\u3002\n\nAWS Access Key\nAWS Secret Key\nSSH Public Key Path\nPassword for Encrypting Credentials\n\n\u304b\u306a\u308a\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u306e\u3067\u6c17\u9577\u306b\u5f85\u3061\u307e\u3059\u3002\u3002\u3002\n$ otto infra\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n\nAWS Access Key\n  AWS access key used for API calls.\n\n  Enter a value: AKIAXXXXXXXXXXXXXXXXX\n\nAWS Secret Key\n  AWS secret key used for API calls.\n\n  Enter a value: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nSSH Public Key Path\n  Path to an SSH public key that will be granted access to EC2 instances\n\n  Default: ~/.ssh/id_rsa.pub\n  Enter a value: \n\nPassword for Encrypting Credentials\n  This password will be used to encrypt and save the credentials so they\n  don't need to be repeated multiple times.\n\n  Enter a value: \n==> Building main infrastructure...\n==> Executing Terraform to manage infrastructure...\n    Raw Terraform output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Terraform while the infrastructure is being created.\n\n    Terraform may ask for input. For infrastructure provider\n    credentials, be sure to enter the same credentials\n    consistently within the same Otto environment.\n\naws_vpc.main: Creating...\n  cidr_block:                \"\" => \"10.0.0.0/16\"\n  default_network_acl_id:    \"\" => \"<computed>\"\n  default_security_group_id: \"\" => \"<computed>\"\n  dhcp_options_id:           \"\" => \"<computed>\"\n  enable_dns_hostnames:      \"\" => \"1\"\n  enable_dns_support:        \"\" => \"1\"\n  main_route_table_id:       \"\" => \"<computed>\"\n  tags.#:                    \"\" => \"1\"\n  tags.Name:                 \"\" => \"otto\"\naws_vpc.main: Creation complete\naws_subnet.public: Creating...\n  availability_zone:       \"\" => \"<computed>\"\n  cidr_block:              \"\" => \"10.0.2.0/24\"\n  map_public_ip_on_launch: \"\" => \"1\"\n  tags.#:                  \"\" => \"1\"\n  tags.Name:               \"\" => \"public\"\n  vpc_id:                  \"\" => \"vpc-8d76fee9\"\naws_key_pair.main: Creating...\n  fingerprint: \"\" => \"<computed>\"\n  key_name:    \"\" => \"otto-8d76fee9\"\n  public_key:  \"\" => \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\naws_internet_gateway.public: Creating...\n  vpc_id: \"\" => \"vpc-8d76fee9\"\naws_key_pair.main: Creation complete\naws_internet_gateway.public: Creation complete\naws_route_table.public: Creating...\n  route.#:                                   \"\" => \"1\"\n  route.559328850.cidr_block:                \"\" => \"0.0.0.0/0\"\n  route.559328850.gateway_id:                \"\" => \"igw-6f0aee0b\"\n  route.559328850.instance_id:               \"\" => \"\"\n  route.559328850.network_interface_id:      \"\" => \"\"\n  route.559328850.vpc_peering_connection_id: \"\" => \"\"\n  tags.#:                                    \"\" => \"1\"\n  tags.Name:                                 \"\" => \"public\"\n  vpc_id:                                    \"\" => \"vpc-8d76fee9\"\naws_subnet.public: Creation complete\naws_route_table.public: Creation complete\naws_route_table_association.public: Creating...\n  route_table_id: \"\" => \"rtb-40256224\"\n  subnet_id:      \"\" => \"subnet-c09098eb\"\naws_route_table_association.public: Creation complete\n\nApply complete! Resources: 6 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf808246809/state\n\nOutputs:\n\n  infra_id      = 8d76fee9\n  key_name      = otto-8d76fee9\n  region        = us-east-1\n  subnet_public = subnet-c09098eb\n  vpc_cidr      = 10.0.0.0/16\n  vpc_id        = vpc-8d76fee9\n\n==> Terraform execution complete. Saving results...\n==> Building infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\n==> Building infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\nmodule.consul-1.aws_security_group.consul: Creating...\n  description:                          \"\" => \"Security group for Consul 1\"\n  egress.#:                             \"\" => \"1\"\n  egress.482069346.cidr_blocks.#:       \"\" => \"1\"\n  egress.482069346.cidr_blocks.0:       \"\" => \"0.0.0.0/0\"\n  egress.482069346.from_port:           \"\" => \"0\"\n  egress.482069346.protocol:            \"\" => \"-1\"\n  egress.482069346.security_groups.#:   \"\" => \"0\"\n  egress.482069346.self:                \"\" => \"0\"\n  egress.482069346.to_port:             \"\" => \"0\"\n  ingress.#:                            \"\" => \"3\"\n  ingress.2541437006.cidr_blocks.#:     \"\" => \"1\"\n  ingress.2541437006.cidr_blocks.0:     \"\" => \"0.0.0.0/0\"\n  ingress.2541437006.from_port:         \"\" => \"22\"\n  ingress.2541437006.protocol:          \"\" => \"tcp\"\n  ingress.2541437006.security_groups.#: \"\" => \"0\"\n  ingress.2541437006.self:              \"\" => \"0\"\n  ingress.2541437006.to_port:           \"\" => \"22\"\n  ingress.2547406835.cidr_blocks.#:     \"\" => \"1\"\n  ingress.2547406835.cidr_blocks.0:     \"\" => \"10.0.0.0/16\"\n  ingress.2547406835.from_port:         \"\" => \"1\"\n  ingress.2547406835.protocol:          \"\" => \"udp\"\n  ingress.2547406835.security_groups.#: \"\" => \"0\"\n  ingress.2547406835.self:              \"\" => \"0\"\n  ingress.2547406835.to_port:           \"\" => \"65535\"\n  ingress.3910776171.cidr_blocks.#:     \"\" => \"1\"\n  ingress.3910776171.cidr_blocks.0:     \"\" => \"10.0.0.0/16\"\n  ingress.3910776171.from_port:         \"\" => \"1\"\n  ingress.3910776171.protocol:          \"\" => \"tcp\"\n  ingress.3910776171.security_groups.#: \"\" => \"0\"\n  ingress.3910776171.self:              \"\" => \"0\"\n  ingress.3910776171.to_port:           \"\" => \"65535\"\n  name:                                 \"\" => \"consul 1\"\n  owner_id:                             \"\" => \"<computed>\"\n  vpc_id:                               \"\" => \"vpc-8d76fee9\"\nmodule.consul-1.aws_security_group.consul: Creation complete\nmodule.consul-1.aws_instance.consul: Creating...\n  ami:                               \"\" => \"ami-7f6a1f1a\"\n  availability_zone:                 \"\" => \"<computed>\"\n  ebs_block_device.#:                \"\" => \"<computed>\"\n  ephemeral_block_device.#:          \"\" => \"<computed>\"\n  instance_type:                     \"\" => \"t2.micro\"\n  key_name:                          \"\" => \"otto-8d76fee9\"\n  placement_group:                   \"\" => \"<computed>\"\n  private_dns:                       \"\" => \"<computed>\"\n  private_ip:                        \"\" => \"10.0.2.6\"\n  public_dns:                        \"\" => \"<computed>\"\n  public_ip:                         \"\" => \"<computed>\"\n  root_block_device.#:               \"\" => \"<computed>\"\n  security_groups.#:                 \"\" => \"<computed>\"\n  source_dest_check:                 \"\" => \"1\"\n  subnet_id:                         \"\" => \"subnet-c09098eb\"\n  tags.#:                            \"\" => \"1\"\n  tags.Name:                         \"\" => \"consul 1\"\n  tenancy:                           \"\" => \"<computed>\"\n  vpc_security_group_ids.#:          \"\" => \"1\"\n  vpc_security_group_ids.2305205259: \"\" => \"sg-5fd08f39\"\nmodule.consul-1.aws_instance.consul: Provisioning with 'file'...\nmodule.consul-1.aws_instance.consul: Provisioning with 'remote-exec'...\nmodule.consul-1.aws_instance.consul (remote-exec): Connecting to remote host via SSH...\nmodule.consul-1.aws_instance.consul (remote-exec):   Host: XXX.XXX.XXX.XXX\nmodule.consul-1.aws_instance.consul (remote-exec):   User: ubuntu\nmodule.consul-1.aws_instance.consul (remote-exec):   Password: false\nmodule.consul-1.aws_instance.consul (remote-exec):   Private key: false\nmodule.consul-1.aws_instance.consul (remote-exec):   SSH Agent: true\nmodule.consul-1.aws_instance.consul (remote-exec): Connected!\nmodule.consul-1.aws_instance.consul (remote-exec): consul stop/waiting\nmodule.consul-1.aws_instance.consul (remote-exec): consul start/running, process 1350\nmodule.consul-1.aws_instance.consul: Creation complete\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf495026781/state\n\nOutputs:\n\n  consul_address = XXX.XXX.XXX.XXX\n\n==> Terraform execution complete. Saving results...\n==> Infrastructure successfully created!\n    The infrastructure necessary to deploy this application\n    is now available. You can now deploy using `otto deploy`.\n\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           NOT BUILT\n    Deploy:          NOT DEPLOYED\n\nInfra\u304cREADY\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30d3\u30eb\u30c9\n\u8d77\u52d5\u306e\u9805\u76ee\u3067\u5165\u529b\u3057\u305fPassword for Encrypting Credentials\u3092\u4f7f\u3044\u307e\u3059\u3002\n$ otto build\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n\nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \n==> Querying infrastructure data for build...\n==> Building deployment archive...\n==> Building deployment artifact with Packer...\n    Raw Packer output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Packer while the build is being run.\n\notto output will be in this color.\n\n==> otto: Prevalidating AMI Name...\n==> otto: Inspecting the source AMI...\n==> otto: Creating temporary keypair: packer 565a69ad-9a6e-7c4d-acaa-3852ae60a122\n==> otto: Creating temporary security group for this instance...\n==> otto: Authorizing access to port 22 the temporary security group...\n==> otto: Launching a source AWS instance...\n    otto: Instance ID: i-a30c501d\n==> otto: Waiting for instance (i-a30c501d) to become ready...\n==> otto: Waiting for SSH to become available...\n==> otto: Connected to SSH!\n==> otto: Provisioning with shell script: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/packer-shell278274437\n==> otto: Uploading /Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/app/foundation-consul/app-build/ => /tmp/otto/foundation-1\n==> otto: Provisioning with shell script: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/packer-shell381431996\n    otto: [otto] Installing Consul...\n    otto: [otto] Installing dnsmasq for Consul...\n    otto: [otto] Configuring consul service: otto-getting-started\n==> otto: Uploading /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-slug-455814359 => /tmp/otto-app.tgz\n==> otto: Provisioning with shell script: build-ruby.sh\n    otto: [otto] Waiting for cloud-config to complete...\n    otto: [otto] Adding apt repositories and updating...\n    otto: [otto] Installing Ruby, Passenger, Nginx, and other packages...\n    otto: [otto] Installing Bundler...\n    otto: [otto] Extracting app...\n    otto: [otto] Adding application user...\n    otto: [otto] Setting permissions...\n    otto: [otto] Configuring nginx...\n    otto: [otto] Bundle installing the app...\n    otto: Fetching gem metadata from https://rubygems.org/..........\n    otto: Fetching version metadata from https://rubygems.org/..\n    otto: Installing rack 1.6.4\n    otto: Installing rack-protection 1.5.3\n    otto: Installing tilt 2.0.1\n    otto: Installing sinatra 1.4.6\n    otto: Using bundler 1.10.6\n    otto: Bundle complete! 1 Gemfile dependency, 5 gems now installed.\n    otto: Gems in the groups development and test were not installed.\n    otto: Bundled gems are installed into ./vendor/bundle.\n    otto: [otto] ...done!\n==> otto: Stopping the source instance...\n==> otto: Waiting for the instance to stop...\n==> otto: Creating the AMI: otto-getting-started 1448765868\n    otto: AMI: ami-745a191e\n==> otto: Waiting for AMI to become ready...\n==> otto: Terminating the source AWS instance...\n==> otto: Cleaning up any extra volumes...\n==> otto: No volumes to clean up, skipping\n==> otto: Deleting temporary security group...\n==> otto: Deleting temporary keypair...\nBuild 'otto' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> otto: AMIs were created:\n\nus-east-1: ami-745a191e\n==> Storing build data in directory...\n==> Build success!\n    The build was completed successfully and stored within\n    the directory service, meaning other members of your team\n    don't need to rebuild this same version and can deploy it\n    immediately.\n\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           BUILD READY\n    Deploy:          NOT DEPLOYED\n\nBuild\u304cBUILD READY\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30c7\u30d7\u30ed\u30a4\n\u8d77\u52d5\u306e\u9805\u76ee\u3067\u5165\u529b\u3057\u305fPassword for Encrypting Credentials\u3092\u4f7f\u3044\u307e\u3059\u3002\n$ otto deploy\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n\nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \naws_security_group.app: Creating...\n  description:                         \"\" => \"Managed by Terraform\"\n  egress.#:                            \"\" => \"1\"\n  egress.482069346.cidr_blocks.#:      \"\" => \"1\"\n  egress.482069346.cidr_blocks.0:      \"\" => \"0.0.0.0/0\"\n  egress.482069346.from_port:          \"\" => \"0\"\n  egress.482069346.protocol:           \"\" => \"-1\"\n  egress.482069346.security_groups.#:  \"\" => \"0\"\n  egress.482069346.self:               \"\" => \"0\"\n  egress.482069346.to_port:            \"\" => \"0\"\n  ingress.#:                           \"\" => \"1\"\n  ingress.482069346.cidr_blocks.#:     \"\" => \"1\"\n  ingress.482069346.cidr_blocks.0:     \"\" => \"0.0.0.0/0\"\n  ingress.482069346.from_port:         \"\" => \"0\"\n  ingress.482069346.protocol:          \"\" => \"-1\"\n  ingress.482069346.security_groups.#: \"\" => \"0\"\n  ingress.482069346.self:              \"\" => \"0\"\n  ingress.482069346.to_port:           \"\" => \"0\"\n  name:                                \"\" => \"otto-getting-started-8d76fee9\"\n  owner_id:                            \"\" => \"<computed>\"\n  vpc_id:                              \"\" => \"vpc-8d76fee9\"\naws_security_group.app: Creation complete\naws_instance.app: Creating...\n  ami:                               \"\" => \"ami-745a191e\"\n  availability_zone:                 \"\" => \"<computed>\"\n  ebs_block_device.#:                \"\" => \"<computed>\"\n  ephemeral_block_device.#:          \"\" => \"<computed>\"\n  instance_type:                     \"\" => \"t2.micro\"\n  key_name:                          \"\" => \"otto-8d76fee9\"\n  placement_group:                   \"\" => \"<computed>\"\n  private_dns:                       \"\" => \"<computed>\"\n  private_ip:                        \"\" => \"<computed>\"\n  public_dns:                        \"\" => \"<computed>\"\n  public_ip:                         \"\" => \"<computed>\"\n  root_block_device.#:               \"\" => \"<computed>\"\n  security_groups.#:                 \"\" => \"<computed>\"\n  source_dest_check:                 \"\" => \"1\"\n  subnet_id:                         \"\" => \"subnet-c09098eb\"\n  tags.#:                            \"\" => \"1\"\n  tags.Name:                         \"\" => \"otto-getting-started\"\n  tenancy:                           \"\" => \"<computed>\"\n  vpc_security_group_ids.#:          \"\" => \"1\"\n  vpc_security_group_ids.2371256730: \"\" => \"sg-b72d73d1\"\naws_instance.app: Creation complete\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf608145036/state\n\nOutputs:\n\n  url = http://ec2-XX-XX-XX-XX.compute-1.amazonaws.com/\n\n\n\u30d6\u30e9\u30a6\u30b6\u3067Outputs\u306eurl\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001Who are you?\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           BUILD READY\n    Deploy:          DEPLOYED\n\nDeploy\u304cDEPLOYED\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\u7834\u68c4\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30e1\u30fc\u30b8\u306a\u3069\u3092\u7834\u68c4\u3059\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\notto deploy destroy\notto infra destroy\notto dev destroy\n\n\notto deploy destroy\n\n$ otto deploy destroy\nDo you really want to destroy?\n  Otto will delete all resources associated with the deploy.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n\nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \naws_security_group.app: Refreshing state... (ID: sg-b72d73d1)\naws_instance.app: Refreshing state... (ID: i-61bce0df)\naws_instance.app: Destroying...\naws_instance.app: Destruction complete\naws_security_group.app: Destroying...\naws_security_group.app: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 2 destroyed.\n\n\n\notto infra destroy\n\n$ otto infra destroy\nDo you really want to destroy?\n  Otto will delete all your managed infrastructure.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n\nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \n==> Destroying infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\nmodule.consul-1.aws_security_group.consul: Refreshing state... (ID: sg-5fd08f39)\nmodule.consul-1.aws_instance.consul: Refreshing state... (ID: i-5be0bde5)\naws_instance.consul: Destroying...\naws_instance.consul: Destruction complete\naws_security_group.consul: Destroying...\naws_security_group.consul: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 2 destroyed.\n\n==> Terraform execution complete. Saving results...\n==> Destroying main infrastructure...\n==> Executing Terraform to manage infrastructure...\n    Raw Terraform output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Terraform while the infrastructure is being created.\n\n    Terraform may ask for input. For infrastructure provider\n    credentials, be sure to enter the same credentials\n    consistently within the same Otto environment.\n\naws_vpc.main: Refreshing state... (ID: vpc-8d76fee9)\naws_subnet.public: Refreshing state... (ID: subnet-c09098eb)\naws_key_pair.main: Refreshing state... (ID: otto-8d76fee9)\naws_internet_gateway.public: Refreshing state... (ID: igw-6f0aee0b)\naws_route_table.public: Refreshing state... (ID: rtb-40256224)\naws_route_table_association.public: Refreshing state... (ID: rtbassoc-b54babd2)\naws_route_table_association.public: Destroying...\naws_key_pair.main: Destroying...\naws_key_pair.main: Destruction complete\naws_route_table_association.public: Destruction complete\naws_subnet.public: Destroying...\naws_route_table.public: Destroying...\naws_route_table.public: Destruction complete\naws_internet_gateway.public: Destroying...\naws_subnet.public: Destruction complete\naws_internet_gateway.public: Destruction complete\naws_vpc.main: Destroying...\naws_vpc.main: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 6 destroyed.\n\n==> Terraform execution complete. Saving results...\n==> Infrastructure successfully destroyed!\n    The infrastructure necessary to run this application and\n    all other applications in this project has been destroyed.\n\n\notto dev destroy\n\n$ otto dev destroy\n==> Destroying the local development environment...\n==> default: Destroying VM and associated drives...\n==> default: Running cleanup tasks for 'shell' provisioner...\n==> default: Running cleanup tasks for 'shell' provisioner...\n==> default: Running cleanup tasks for 'shell' provisioner...\n\n\n==> Deleting development environment metadata...\n==> Development environment has been destroyed!\n\n\n\u53c2\u8003\n\nOtto by HashiCorp:\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u3063\u305f\u3089\u3053\u308c\u3060\u3051\u306f\u3084\u3063\u3068\u3051\uff01IAM\u30e6\u30fc\u30b6\u30fc\u3068Authy\u3092\u4f7f\u3063\u305fMFA\u30672\u6bb5\u968e\u8a8d\u8a3c - Qiita:\n\n\u4ee5\u4e0a\n1. [[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9](http://qiita.com/neogym/items/c0c3ba87e8535dabe878)\n2. [[\u899a\u66f8]Otto\u3067AWS\u306b\u672c\u756a\u74b0\u5883\u69cb\u7bc9\uff06\u30c7\u30d7\u30ed\u30a4](http://qiita.com/neogym/items/e5e0bbf89df390aa9059) \u2190 **\u3053\u3053**\n3. [[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9 (Appfile\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba \u2192 Ruby\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a)](http://qiita.com/neogym/items/73ee4bee570963751153)\n4. [[\u899a\u66f8]Otto\u3067\u958b\u767a\u74b0\u5883\u3092\u69cb\u7bc9 (MongoDB\u306eDocker\u30b3\u30f3\u30c6\u30ca\u3092\u52d5\u304b\u3059)](http://qiita.com/neogym/items/0d7aa2e07ea1da477f2f)\n\n# \u691c\u8a3c\u74b0\u5883\n\n* OS : OS X 10.10.5\n    * `Homebrew` : 0.9.5\n    * `brew cask` : 0.56.0\n\n# \u4e8b\u524d\u6e96\u5099\n\n## `AWS`\u306eAPI\u30ad\u30fc\u306a\u3069\n\n\u4e0b\u8a18\u306f`AWS`\u306e\u7ba1\u7406\u753b\u9762\u3067\u306e\u4f5c\u696d\u3067\u3059\u3002\n\n1. `IAM(Identity and Access Management)`\u304b\u3089`IAM`\u30e6\u30fc\u30b6\u3092\u4f5c\u6210\u3059\u308b\u3002\n    * ***\u3053\u306e\u969b\u3001`\u8a8d\u8a3c\u60c5\u5831\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9`\u3092\u5fd8\u308c\u305a\u306b\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002***\n2. \u30d1\u30b9\u30ef\u30fc\u30c9\u3084\u30dd\u30ea\u30b7\u30fc\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3002\n\n*[AWS\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u3063\u305f\u3089\u3053\u308c\u3060\u3051\u306f\u3084\u3063\u3068\u3051\uff01IAM\u30e6\u30fc\u30b6\u30fc\u3068Authy\u3092\u4f7f\u3063\u305fMFA\u30672\u6bb5\u968e\u8a8d\u8a3c - Qiita:](http://qiita.com/yoshidashingo/items/cd206daca0596659b440)\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002*\n\n## `Terraform`\u304a\u3088\u3073`Packer`\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n***`otto infra`\u3084`otto build`\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b\u3001`Terraform`\u3084`Packer`\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u691c\u8a3c\u3057\u305f\u74b0\u5883\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3057\u305f\u306e\u3067\u624b\u52d5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002***\n\n`brew cask`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```bash\n$ brew install terraform\n$ brew install packer\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u304b\u78ba\u8a8d\u3002\n\n```bash\n$ terraform --version\nTerraform v0.6.3\n\nYour version of Terraform is out of date! The latest version\nis 0.6.7. You can update by downloading from www.terraform.io\n$ packer --version\n0.8.6\n```\n\n# \u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u30fc\n\n## \u8d77\u52d5\n\n\u5fc5\u8981\u306a\u3082\u306e\u3002\n\n* AWS Access Key\n* AWS Secret Key\n* SSH Public Key Path\n* Password for Encrypting Credentials\n\n***\u304b\u306a\u308a\u6642\u9593\u304c\u304b\u304b\u308b\u3088\u3046\u306a\u306e\u3067\u6c17\u9577\u306b\u5f85\u3061\u307e\u3059\u3002\u3002\u3002***\n\n```bash\n$ otto infra\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n    \nAWS Access Key\n  AWS access key used for API calls.\n\n  Enter a value: AKIAXXXXXXXXXXXXXXXXX\n\nAWS Secret Key\n  AWS secret key used for API calls.\n\n  Enter a value: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nSSH Public Key Path\n  Path to an SSH public key that will be granted access to EC2 instances\n\n  Default: ~/.ssh/id_rsa.pub\n  Enter a value: \n\nPassword for Encrypting Credentials\n  This password will be used to encrypt and save the credentials so they\n  don't need to be repeated multiple times.\n\n  Enter a value: \n==> Building main infrastructure...\n==> Executing Terraform to manage infrastructure...\n    Raw Terraform output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Terraform while the infrastructure is being created.\n    \n    Terraform may ask for input. For infrastructure provider\n    credentials, be sure to enter the same credentials\n    consistently within the same Otto environment.\n    \naws_vpc.main: Creating...\n  cidr_block:                \"\" => \"10.0.0.0/16\"\n  default_network_acl_id:    \"\" => \"<computed>\"\n  default_security_group_id: \"\" => \"<computed>\"\n  dhcp_options_id:           \"\" => \"<computed>\"\n  enable_dns_hostnames:      \"\" => \"1\"\n  enable_dns_support:        \"\" => \"1\"\n  main_route_table_id:       \"\" => \"<computed>\"\n  tags.#:                    \"\" => \"1\"\n  tags.Name:                 \"\" => \"otto\"\naws_vpc.main: Creation complete\naws_subnet.public: Creating...\n  availability_zone:       \"\" => \"<computed>\"\n  cidr_block:              \"\" => \"10.0.2.0/24\"\n  map_public_ip_on_launch: \"\" => \"1\"\n  tags.#:                  \"\" => \"1\"\n  tags.Name:               \"\" => \"public\"\n  vpc_id:                  \"\" => \"vpc-8d76fee9\"\naws_key_pair.main: Creating...\n  fingerprint: \"\" => \"<computed>\"\n  key_name:    \"\" => \"otto-8d76fee9\"\n  public_key:  \"\" => \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"\naws_internet_gateway.public: Creating...\n  vpc_id: \"\" => \"vpc-8d76fee9\"\naws_key_pair.main: Creation complete\naws_internet_gateway.public: Creation complete\naws_route_table.public: Creating...\n  route.#:                                   \"\" => \"1\"\n  route.559328850.cidr_block:                \"\" => \"0.0.0.0/0\"\n  route.559328850.gateway_id:                \"\" => \"igw-6f0aee0b\"\n  route.559328850.instance_id:               \"\" => \"\"\n  route.559328850.network_interface_id:      \"\" => \"\"\n  route.559328850.vpc_peering_connection_id: \"\" => \"\"\n  tags.#:                                    \"\" => \"1\"\n  tags.Name:                                 \"\" => \"public\"\n  vpc_id:                                    \"\" => \"vpc-8d76fee9\"\naws_subnet.public: Creation complete\naws_route_table.public: Creation complete\naws_route_table_association.public: Creating...\n  route_table_id: \"\" => \"rtb-40256224\"\n  subnet_id:      \"\" => \"subnet-c09098eb\"\naws_route_table_association.public: Creation complete\n\nApply complete! Resources: 6 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf808246809/state\n\nOutputs:\n\n  infra_id      = 8d76fee9\n  key_name      = otto-8d76fee9\n  region        = us-east-1\n  subnet_public = subnet-c09098eb\n  vpc_cidr      = 10.0.0.0/16\n  vpc_id        = vpc-8d76fee9\n\n==> Terraform execution complete. Saving results...\n==> Building infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\n==> Building infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\nmodule.consul-1.aws_security_group.consul: Creating...\n  description:                          \"\" => \"Security group for Consul 1\"\n  egress.#:                             \"\" => \"1\"\n  egress.482069346.cidr_blocks.#:       \"\" => \"1\"\n  egress.482069346.cidr_blocks.0:       \"\" => \"0.0.0.0/0\"\n  egress.482069346.from_port:           \"\" => \"0\"\n  egress.482069346.protocol:            \"\" => \"-1\"\n  egress.482069346.security_groups.#:   \"\" => \"0\"\n  egress.482069346.self:                \"\" => \"0\"\n  egress.482069346.to_port:             \"\" => \"0\"\n  ingress.#:                            \"\" => \"3\"\n  ingress.2541437006.cidr_blocks.#:     \"\" => \"1\"\n  ingress.2541437006.cidr_blocks.0:     \"\" => \"0.0.0.0/0\"\n  ingress.2541437006.from_port:         \"\" => \"22\"\n  ingress.2541437006.protocol:          \"\" => \"tcp\"\n  ingress.2541437006.security_groups.#: \"\" => \"0\"\n  ingress.2541437006.self:              \"\" => \"0\"\n  ingress.2541437006.to_port:           \"\" => \"22\"\n  ingress.2547406835.cidr_blocks.#:     \"\" => \"1\"\n  ingress.2547406835.cidr_blocks.0:     \"\" => \"10.0.0.0/16\"\n  ingress.2547406835.from_port:         \"\" => \"1\"\n  ingress.2547406835.protocol:          \"\" => \"udp\"\n  ingress.2547406835.security_groups.#: \"\" => \"0\"\n  ingress.2547406835.self:              \"\" => \"0\"\n  ingress.2547406835.to_port:           \"\" => \"65535\"\n  ingress.3910776171.cidr_blocks.#:     \"\" => \"1\"\n  ingress.3910776171.cidr_blocks.0:     \"\" => \"10.0.0.0/16\"\n  ingress.3910776171.from_port:         \"\" => \"1\"\n  ingress.3910776171.protocol:          \"\" => \"tcp\"\n  ingress.3910776171.security_groups.#: \"\" => \"0\"\n  ingress.3910776171.self:              \"\" => \"0\"\n  ingress.3910776171.to_port:           \"\" => \"65535\"\n  name:                                 \"\" => \"consul 1\"\n  owner_id:                             \"\" => \"<computed>\"\n  vpc_id:                               \"\" => \"vpc-8d76fee9\"\nmodule.consul-1.aws_security_group.consul: Creation complete\nmodule.consul-1.aws_instance.consul: Creating...\n  ami:                               \"\" => \"ami-7f6a1f1a\"\n  availability_zone:                 \"\" => \"<computed>\"\n  ebs_block_device.#:                \"\" => \"<computed>\"\n  ephemeral_block_device.#:          \"\" => \"<computed>\"\n  instance_type:                     \"\" => \"t2.micro\"\n  key_name:                          \"\" => \"otto-8d76fee9\"\n  placement_group:                   \"\" => \"<computed>\"\n  private_dns:                       \"\" => \"<computed>\"\n  private_ip:                        \"\" => \"10.0.2.6\"\n  public_dns:                        \"\" => \"<computed>\"\n  public_ip:                         \"\" => \"<computed>\"\n  root_block_device.#:               \"\" => \"<computed>\"\n  security_groups.#:                 \"\" => \"<computed>\"\n  source_dest_check:                 \"\" => \"1\"\n  subnet_id:                         \"\" => \"subnet-c09098eb\"\n  tags.#:                            \"\" => \"1\"\n  tags.Name:                         \"\" => \"consul 1\"\n  tenancy:                           \"\" => \"<computed>\"\n  vpc_security_group_ids.#:          \"\" => \"1\"\n  vpc_security_group_ids.2305205259: \"\" => \"sg-5fd08f39\"\nmodule.consul-1.aws_instance.consul: Provisioning with 'file'...\nmodule.consul-1.aws_instance.consul: Provisioning with 'remote-exec'...\nmodule.consul-1.aws_instance.consul (remote-exec): Connecting to remote host via SSH...\nmodule.consul-1.aws_instance.consul (remote-exec):   Host: XXX.XXX.XXX.XXX\nmodule.consul-1.aws_instance.consul (remote-exec):   User: ubuntu\nmodule.consul-1.aws_instance.consul (remote-exec):   Password: false\nmodule.consul-1.aws_instance.consul (remote-exec):   Private key: false\nmodule.consul-1.aws_instance.consul (remote-exec):   SSH Agent: true\nmodule.consul-1.aws_instance.consul (remote-exec): Connected!\nmodule.consul-1.aws_instance.consul (remote-exec): consul stop/waiting\nmodule.consul-1.aws_instance.consul (remote-exec): consul start/running, process 1350\nmodule.consul-1.aws_instance.consul: Creation complete\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf495026781/state\n\nOutputs:\n\n  consul_address = XXX.XXX.XXX.XXX\n\n==> Terraform execution complete. Saving results...\n==> Infrastructure successfully created!\n    The infrastructure necessary to deploy this application\n    is now available. You can now deploy using `otto deploy`.\n```\n\n## \u30b9\u30c6\u30fc\u30bf\u30b9\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n\n```bash\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           NOT BUILT\n    Deploy:          NOT DEPLOYED\n```\n\n*`Infra`\u304c`READY`\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002*\n\n# \u30d3\u30eb\u30c9\n\n`\u8d77\u52d5`\u306e\u9805\u76ee\u3067\u5165\u529b\u3057\u305f`Password for Encrypting Credentials`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```bash\n$ otto build\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n    \nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \n==> Querying infrastructure data for build...\n==> Building deployment archive...\n==> Building deployment artifact with Packer...\n    Raw Packer output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Packer while the build is being run.\n    \notto output will be in this color.\n\n==> otto: Prevalidating AMI Name...\n==> otto: Inspecting the source AMI...\n==> otto: Creating temporary keypair: packer 565a69ad-9a6e-7c4d-acaa-3852ae60a122\n==> otto: Creating temporary security group for this instance...\n==> otto: Authorizing access to port 22 the temporary security group...\n==> otto: Launching a source AWS instance...\n    otto: Instance ID: i-a30c501d\n==> otto: Waiting for instance (i-a30c501d) to become ready...\n==> otto: Waiting for SSH to become available...\n==> otto: Connected to SSH!\n==> otto: Provisioning with shell script: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/packer-shell278274437\n==> otto: Uploading /Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/app/foundation-consul/app-build/ => /tmp/otto/foundation-1\n==> otto: Provisioning with shell script: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/packer-shell381431996\n    otto: [otto] Installing Consul...\n    otto: [otto] Installing dnsmasq for Consul...\n    otto: [otto] Configuring consul service: otto-getting-started\n==> otto: Uploading /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-slug-455814359 => /tmp/otto-app.tgz\n==> otto: Provisioning with shell script: build-ruby.sh\n    otto: [otto] Waiting for cloud-config to complete...\n    otto: [otto] Adding apt repositories and updating...\n    otto: [otto] Installing Ruby, Passenger, Nginx, and other packages...\n    otto: [otto] Installing Bundler...\n    otto: [otto] Extracting app...\n    otto: [otto] Adding application user...\n    otto: [otto] Setting permissions...\n    otto: [otto] Configuring nginx...\n    otto: [otto] Bundle installing the app...\n    otto: Fetching gem metadata from https://rubygems.org/..........\n    otto: Fetching version metadata from https://rubygems.org/..\n    otto: Installing rack 1.6.4\n    otto: Installing rack-protection 1.5.3\n    otto: Installing tilt 2.0.1\n    otto: Installing sinatra 1.4.6\n    otto: Using bundler 1.10.6\n    otto: Bundle complete! 1 Gemfile dependency, 5 gems now installed.\n    otto: Gems in the groups development and test were not installed.\n    otto: Bundled gems are installed into ./vendor/bundle.\n    otto: [otto] ...done!\n==> otto: Stopping the source instance...\n==> otto: Waiting for the instance to stop...\n==> otto: Creating the AMI: otto-getting-started 1448765868\n    otto: AMI: ami-745a191e\n==> otto: Waiting for AMI to become ready...\n==> otto: Terminating the source AWS instance...\n==> otto: Cleaning up any extra volumes...\n==> otto: No volumes to clean up, skipping\n==> otto: Deleting temporary security group...\n==> otto: Deleting temporary keypair...\nBuild 'otto' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> otto: AMIs were created:\n\nus-east-1: ami-745a191e\n==> Storing build data in directory...\n==> Build success!\n    The build was completed successfully and stored within\n    the directory service, meaning other members of your team\n    don't need to rebuild this same version and can deploy it\n    immediately.\n```\n\n## \u30b9\u30c6\u30fc\u30bf\u30b9\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n\n```bash\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           BUILD READY\n    Deploy:          NOT DEPLOYED\n```\n\n`Build`\u304c`BUILD READY`\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n# \u30c7\u30d7\u30ed\u30a4\n\n`\u8d77\u52d5`\u306e\u9805\u76ee\u3067\u5165\u529b\u3057\u305f`Password for Encrypting Credentials`\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```bash\n$ otto deploy\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n    \nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \naws_security_group.app: Creating...\n  description:                         \"\" => \"Managed by Terraform\"\n  egress.#:                            \"\" => \"1\"\n  egress.482069346.cidr_blocks.#:      \"\" => \"1\"\n  egress.482069346.cidr_blocks.0:      \"\" => \"0.0.0.0/0\"\n  egress.482069346.from_port:          \"\" => \"0\"\n  egress.482069346.protocol:           \"\" => \"-1\"\n  egress.482069346.security_groups.#:  \"\" => \"0\"\n  egress.482069346.self:               \"\" => \"0\"\n  egress.482069346.to_port:            \"\" => \"0\"\n  ingress.#:                           \"\" => \"1\"\n  ingress.482069346.cidr_blocks.#:     \"\" => \"1\"\n  ingress.482069346.cidr_blocks.0:     \"\" => \"0.0.0.0/0\"\n  ingress.482069346.from_port:         \"\" => \"0\"\n  ingress.482069346.protocol:          \"\" => \"-1\"\n  ingress.482069346.security_groups.#: \"\" => \"0\"\n  ingress.482069346.self:              \"\" => \"0\"\n  ingress.482069346.to_port:           \"\" => \"0\"\n  name:                                \"\" => \"otto-getting-started-8d76fee9\"\n  owner_id:                            \"\" => \"<computed>\"\n  vpc_id:                              \"\" => \"vpc-8d76fee9\"\naws_security_group.app: Creation complete\naws_instance.app: Creating...\n  ami:                               \"\" => \"ami-745a191e\"\n  availability_zone:                 \"\" => \"<computed>\"\n  ebs_block_device.#:                \"\" => \"<computed>\"\n  ephemeral_block_device.#:          \"\" => \"<computed>\"\n  instance_type:                     \"\" => \"t2.micro\"\n  key_name:                          \"\" => \"otto-8d76fee9\"\n  placement_group:                   \"\" => \"<computed>\"\n  private_dns:                       \"\" => \"<computed>\"\n  private_ip:                        \"\" => \"<computed>\"\n  public_dns:                        \"\" => \"<computed>\"\n  public_ip:                         \"\" => \"<computed>\"\n  root_block_device.#:               \"\" => \"<computed>\"\n  security_groups.#:                 \"\" => \"<computed>\"\n  source_dest_check:                 \"\" => \"1\"\n  subnet_id:                         \"\" => \"subnet-c09098eb\"\n  tags.#:                            \"\" => \"1\"\n  tags.Name:                         \"\" => \"otto-getting-started\"\n  tenancy:                           \"\" => \"<computed>\"\n  vpc_security_group_ids.#:          \"\" => \"1\"\n  vpc_security_group_ids.2371256730: \"\" => \"sg-b72d73d1\"\naws_instance.app: Creation complete\n\nApply complete! Resources: 2 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: /var/folders/fn/4c83cb5979l0rw8mlz7nnvn00000gn/T/otto-tf608145036/state\n\nOutputs:\n\n  url = http://ec2-XX-XX-XX-XX.compute-1.amazonaws.com/\n\n```\n\n\u30d6\u30e9\u30a6\u30b6\u3067`Outputs`\u306e`url`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001`Who are you?`\u3068\u8868\u793a\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n## \u30b9\u30c6\u30fc\u30bf\u30b9\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\u3002\n\n```bash\n$ otto status\n==> App Info\n    Application:    otto-getting-started (ruby)\n    Project:        otto-getting-started\n    Infrastructure: aws (simple)\n==> Component Status\n    Dev environment: CREATED\n    Infra:           READY\n    Build:           BUILD READY\n    Deploy:          DEPLOYED\n```\n\n`Deploy`\u304c`DEPLOYED`\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n# \u7834\u68c4\n\n\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u30a4\u30e1\u30fc\u30b8\u306a\u3069\u3092\u7834\u68c4\u3059\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n1. `otto deploy destroy`\n2. `otto infra destroy`\n3. `otto dev destroy`\n\n## `otto deploy destroy`\n\n```bash\n$ otto deploy destroy\nDo you really want to destroy?\n  Otto will delete all resources associated with the deploy.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n    \nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \naws_security_group.app: Refreshing state... (ID: sg-b72d73d1)\naws_instance.app: Refreshing state... (ID: i-61bce0df)\naws_instance.app: Destroying...\naws_instance.app: Destruction complete\naws_security_group.app: Destroying...\naws_security_group.app: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 2 destroyed.\n\n```\n\n## `otto infra destroy`\n\n```bash\n$ otto infra destroy\nDo you really want to destroy?\n  Otto will delete all your managed infrastructure.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\n==> Detecting infrastructure credentials for: otto-getting-started (aws)\n    Cached and encrypted infrastructure credentials found.\n    Otto will now ask you for the password to decrypt these\n    credentials.\n    \nEncrypted Credentials Password\n  Infrastructure credentials are required for this operation. Otto found\n  saved credentials that are password protected. Please enter the password\n  to decrypt these credentials. You may also just hit <enter> and leave\n  the password blank to force Otto to ask for the credentials again.\n\n  Enter a value: \n==> Destroying infrastructure for foundation: consul\nGet: file:///Users/masaki/Documents/Development/github/hashicorp/otto-getting-started/.otto/compiled/foundation-consul/deploy/module-aws-simple\n\n==> Terraform execution complete. Saving results...\nmodule.consul-1.aws_security_group.consul: Refreshing state... (ID: sg-5fd08f39)\nmodule.consul-1.aws_instance.consul: Refreshing state... (ID: i-5be0bde5)\naws_instance.consul: Destroying...\naws_instance.consul: Destruction complete\naws_security_group.consul: Destroying...\naws_security_group.consul: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 2 destroyed.\n\n==> Terraform execution complete. Saving results...\n==> Destroying main infrastructure...\n==> Executing Terraform to manage infrastructure...\n    Raw Terraform output will begin streaming in below. Otto\n    does not create this output. It is mirrored directly from\n    Terraform while the infrastructure is being created.\n    \n    Terraform may ask for input. For infrastructure provider\n    credentials, be sure to enter the same credentials\n    consistently within the same Otto environment.\n    \naws_vpc.main: Refreshing state... (ID: vpc-8d76fee9)\naws_subnet.public: Refreshing state... (ID: subnet-c09098eb)\naws_key_pair.main: Refreshing state... (ID: otto-8d76fee9)\naws_internet_gateway.public: Refreshing state... (ID: igw-6f0aee0b)\naws_route_table.public: Refreshing state... (ID: rtb-40256224)\naws_route_table_association.public: Refreshing state... (ID: rtbassoc-b54babd2)\naws_route_table_association.public: Destroying...\naws_key_pair.main: Destroying...\naws_key_pair.main: Destruction complete\naws_route_table_association.public: Destruction complete\naws_subnet.public: Destroying...\naws_route_table.public: Destroying...\naws_route_table.public: Destruction complete\naws_internet_gateway.public: Destroying...\naws_subnet.public: Destruction complete\naws_internet_gateway.public: Destruction complete\naws_vpc.main: Destroying...\naws_vpc.main: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 6 destroyed.\n\n==> Terraform execution complete. Saving results...\n==> Infrastructure successfully destroyed!\n    The infrastructure necessary to run this application and\n    all other applications in this project has been destroyed.\n```\n\n## `otto dev destroy`\n\n```bash\n$ otto dev destroy\n==> Destroying the local development environment...\n==> default: Destroying VM and associated drives...\n==> default: Running cleanup tasks for 'shell' provisioner...\n==> default: Running cleanup tasks for 'shell' provisioner...\n==> default: Running cleanup tasks for 'shell' provisioner...\n\n\n==> Deleting development environment metadata...\n==> Development environment has been destroyed!\n```\n\n# \u53c2\u8003\n\n* [Otto by HashiCorp:](https://ottoproject.io/)\n* [AWS\u30a2\u30ab\u30a6\u30f3\u30c8\u4f5c\u3063\u305f\u3089\u3053\u308c\u3060\u3051\u306f\u3084\u3063\u3068\u3051\uff01IAM\u30e6\u30fc\u30b6\u30fc\u3068Authy\u3092\u4f7f\u3063\u305fMFA\u30672\u6bb5\u968e\u8a8d\u8a3c - Qiita:](http://qiita.com/yoshidashingo/items/cd206daca0596659b440)\n\n\u4ee5\u4e0a\n"}