{"tags": ["audio", "LDAC"], "context": "AOSP\u306b\u3042\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u30bd\u30cb\u30fc\u88fd\u306eLDAC\u30a8\u30f3\u30b3\u30fc\u30c0 libldac \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgithub\u306b\u7f6e\u3044\u3068\u304d\u307e\u3057\u305f\u3002\u3000https://github.com/eggman/ldacenc\n\nlibldac \u306e \u30b3\u30f3\u30d1\u30a4\u30eb\n\n\u666e\u901a\u306eMakefile\u304c\u7121\u3044\u306e\u3067\u3001\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n$ git clone https://android.googlesource.com/platform/external/libldac\n$ cd libldac/src\n$ gcc -O2 -Werror -I../inc -c ldaclib.c \n$ gcc -O2 -Werror -I../inc -c ldacBT.c \n$ ar rcs libldacBT_enc.a ldaclib.o ldacBT.o\n\n\nmacbook\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5834\u5408\u306e\u30b5\u30a4\u30ba\n\n$ size libldacBT_enc.a \n__TEXT  __DATA  __OBJC  others  dec     hex\n36292   192     0       1120    37604   92e4    libldacBT_enc.a(ldaclib.o)\n7134    0       0       480     7614    1dbe    libldacBT_enc.a(ldacBT.o)\n\n\nlibldac \u306e API\n\nAPI\u306f ldacBT.h \u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u89aa\u5207\u306a\u611f\u3058\u3067\u4f7f\u3044\u65b9\u306e\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\nLDACBT_API HANDLE_LDAC_BT ldacBT_get_handle( void );\nLDACBT_API void ldacBT_free_handle( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API void ldacBT_close_handle( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_get_version( void );\nLDACBT_API int  ldacBT_get_sampling_freq( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_get_bitrate( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_init_handle_encode( HANDLE_LDAC_BT hLdacBt, int mtu, int eqmid, int cm,\n                                           LDACBT_SMPL_FMT_T fmt, int sf );\nLDACBT_API int  ldacBT_set_eqmid( HANDLE_LDAC_BT hLdacBt, int eqmid );\nLDACBT_API int  ldacBT_get_eqmid( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_alter_eqmid_priority( HANDLE_LDAC_BT hLdacBt, int priority );\nLDACBT_API int  ldacBT_encode( HANDLE_LDAC_BT hLdacBt, void *p_pcm, int *pcm_used,\n                               unsigned char *p_stream, int *stream_sz, int *frame_num );\nLDACBT_API int  ldacBT_get_error_code( HANDLE_LDAC_BT hLdacBt );\n\n\n\n\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u958b\u59cb\u5f8c\u306b\u3001ldacBT_set_eqmid()\u306eemqid\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067eqmid\u306b\u5bfe\u5fdc\u3057\u305f\u30d3\u30c3\u30c8\u30ec\u30fc\u30c8\u3092\u52d5\u7684\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\nInitialize\n\n\u521d\u671f\u5316\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(void)\n{\n    HANDLE_LDAC_BT h;\n    int ret, err;\n\n    h = ldacBT_get_handle();\n    printf(\"version       %08x\\n\",ldacBT_get_version());\n\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S24, 96000);\n    err=ldacBT_get_error_code(h); \n\n    printf(\"ret=%d api_error=%d\\n\", ret, LDACBT_API_ERR(err));\n    printf(\"sampling_freq %08x\\n\",ldacBT_get_sampling_freq(h));\n    printf(\"bit_rate      %08x\\n\",ldacBT_get_bitrate(h));\n    return 0;\n}\n\n\n\u5b9f\u884c\u4f8b\n\nversion       00020002\nret=0 api_error=0\nsampling_freq 00017700\nbit_rate      000003de\n\n\nEncode\n\n256\u30b5\u30f3\u30d7\u30eb\u3092encode\u3059\u308b\u3002\n128\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4f55\u3082\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n256\u30b5\u30f3\u30d7\u30eb\u3092\u5165\u529b\u3059\u308b\u3068\u3001660\u30d0\u30a4\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u30c7\u30fc\u30bf\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(void)\n{\n    HANDLE_LDAC_BT h;\n    int ret, err, pcm_used, ldac_stream_size, ldac_frame_num;\n    unsigned char pcm[256*2*2];\u3000/* 256 samples * 2ch * 16bit */\n    unsigned char ldac[1024];\n    h = ldacBT_get_handle();\n\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S16, 48000);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n\n    ret = ldacBT_encode(h, pcm, &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n    printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n\n    ret = ldacBT_encode(h, &pcm[128*2*2], &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n    printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n\n    return 0;\n}\n\n\n\u5b9f\u884c\u4f8b\n\nret=0 api_error=0 handle_error=0 block_error=0\nret=0 api_error=0 handle_error=0 block_error=0\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\nret=0 api_error=0 handle_error=0 block_error=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n\n\nEncode wav file\n\n16bit stereo \u306a wav\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5f8c\u306e\u7aef\u6570\u306e\u90e8\u5206\u306f\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u307e\u305b\u3093\u3002\n\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(int argc, char *argv[])\n{\n    HANDLE_LDAC_BT h;\n    int ret, err, pcm_used, ldac_stream_size, ldac_frame_num;\n    unsigned char pcm[128*2*2];\n    unsigned char ldac[1024];\n    FILE *infp, *outfp;\n    unsigned char header[44];\n\n    if ((infp = fopen(argv[1], \"r\"))==NULL) {\n        printf(\"can't open input file\\n\");\n        return -1;\n    }\n\n    if ((outfp = fopen(argv[2], \"w\"))==NULL) {\n        printf(\"can't open output file\\n\");\n        return -1;\n    }\n\n    //skip wave header\n    fread(header, 44, 1, infp);\n\n    h = ldacBT_get_handle();\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S16, 48000);\n\n    while(fread(pcm, 512, 1, infp))\n    {\n        ret = ldacBT_encode(h, &pcm[0], &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n        printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n        fwrite(ldac, 1, ldac_stream_size, outfp);\n    }\n\n    ldacBT_close_handle(h);\n\n    return 0;\n}\n\n\n\u5b9f\u884c\u4f8b\n\n$./ldacenc 1kHz-0-dither.wav 1khz.ldac_hq\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n\n\n\u30b5\u30a4\u30ba\nHQ\u3001SQ\u3001MQ\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u5834\u5408\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002\u3000\u305d\u308c\u305e\u308c990kbps, 660kbps, 330kbps\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n  2880044  1kHz-0-dither.wav\n  1855920  1khz.ldac_hq\n  1237500  1khz.ldac_sq\n   618420  1khz.ldac_mq\n\nAOSP\u306b\u3042\u308b\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306a\u30bd\u30cb\u30fc\u88fd\u306eLDAC\u30a8\u30f3\u30b3\u30fc\u30c0 [libldac](https://android.googlesource.com/platform/external/libldac/) \u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fgithub\u306b\u7f6e\u3044\u3068\u304d\u307e\u3057\u305f\u3002\u3000https://github.com/eggman/ldacenc\n\n# libldac \u306e \u30b3\u30f3\u30d1\u30a4\u30eb \n* \u666e\u901a\u306eMakefile\u304c\u7121\u3044\u306e\u3067\u3001\u666e\u901a\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u9759\u7684\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\n$ git clone https://android.googlesource.com/platform/external/libldac\n$ cd libldac/src\n$ gcc -O2 -Werror -I../inc -c ldaclib.c \n$ gcc -O2 -Werror -I../inc -c ldacBT.c \n$ ar rcs libldacBT_enc.a ldaclib.o ldacBT.o\n```\n* macbook\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5834\u5408\u306e\u30b5\u30a4\u30ba\n\n```\n$ size libldacBT_enc.a \n__TEXT  __DATA  __OBJC  others  dec     hex\n36292   192     0       1120    37604   92e4    libldacBT_enc.a(ldaclib.o)\n7134    0       0       480     7614    1dbe    libldacBT_enc.a(ldacBT.o)\n```\n\n# libldac \u306e API\n* API\u306f ldacBT.h \u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n* \u3053\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u89aa\u5207\u306a\u611f\u3058\u3067\u4f7f\u3044\u65b9\u306e\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nLDACBT_API HANDLE_LDAC_BT ldacBT_get_handle( void );\nLDACBT_API void ldacBT_free_handle( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API void ldacBT_close_handle( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_get_version( void );\nLDACBT_API int  ldacBT_get_sampling_freq( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_get_bitrate( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_init_handle_encode( HANDLE_LDAC_BT hLdacBt, int mtu, int eqmid, int cm,\n                                           LDACBT_SMPL_FMT_T fmt, int sf );\nLDACBT_API int  ldacBT_set_eqmid( HANDLE_LDAC_BT hLdacBt, int eqmid );\nLDACBT_API int  ldacBT_get_eqmid( HANDLE_LDAC_BT hLdacBt );\nLDACBT_API int  ldacBT_alter_eqmid_priority( HANDLE_LDAC_BT hLdacBt, int priority );\nLDACBT_API int  ldacBT_encode( HANDLE_LDAC_BT hLdacBt, void *p_pcm, int *pcm_used,\n                               unsigned char *p_stream, int *stream_sz, int *frame_num );\nLDACBT_API int  ldacBT_get_error_code( HANDLE_LDAC_BT hLdacBt );\n\n```\n\n* \u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u958b\u59cb\u5f8c\u306b\u3001ldacBT_set_eqmid()\u306eemqid\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067eqmid\u306b\u5bfe\u5fdc\u3057\u305f\u30d3\u30c3\u30c8\u30ec\u30fc\u30c8\u3092\u52d5\u7684\u306b\u5909\u66f4\u3067\u304d\u307e\u3059\u3002\n\n\n# Initialize\n* \u521d\u671f\u5316\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(void)\n{\n    HANDLE_LDAC_BT h;\n    int ret, err;\n\n    h = ldacBT_get_handle();\n    printf(\"version       %08x\\n\",ldacBT_get_version());\n\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S24, 96000);\n    err=ldacBT_get_error_code(h); \n\n    printf(\"ret=%d api_error=%d\\n\", ret, LDACBT_API_ERR(err));\n    printf(\"sampling_freq %08x\\n\",ldacBT_get_sampling_freq(h));\n    printf(\"bit_rate      %08x\\n\",ldacBT_get_bitrate(h));\n    return 0;\n}\n```\n* \u5b9f\u884c\u4f8b\n\n```\nversion       00020002\nret=0 api_error=0\nsampling_freq 00017700\nbit_rate      000003de\n```\n\n# Encode\n* 256\u30b5\u30f3\u30d7\u30eb\u3092encode\u3059\u308b\u3002\n* 128\u30b5\u30f3\u30d7\u30eb\u3060\u3068\u4f55\u3082\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n* 256\u30b5\u30f3\u30d7\u30eb\u3092\u5165\u529b\u3059\u308b\u3068\u3001660\u30d0\u30a4\u30c8\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u30c7\u30fc\u30bf\u304c\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n```\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(void)\n{\n    HANDLE_LDAC_BT h;\n    int ret, err, pcm_used, ldac_stream_size, ldac_frame_num;\n    unsigned char pcm[256*2*2];\u3000/* 256 samples * 2ch * 16bit */\n    unsigned char ldac[1024];\n    h = ldacBT_get_handle();\n\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S16, 48000);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n\n    ret = ldacBT_encode(h, pcm, &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n    printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n    \n    ret = ldacBT_encode(h, &pcm[128*2*2], &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n    err=ldacBT_get_error_code(h); \n    printf(\"ret=%d api_error=%d handle_error=%d block_error=%d\\n\", ret, LDACBT_API_ERR(err), LDACBT_HANDLE_ERR(err), LDACBT_BLOCK_ERR(err));\n    printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n\n    return 0;\n}\n```\n\n* \u5b9f\u884c\u4f8b\n\n```\nret=0 api_error=0 handle_error=0 block_error=0\nret=0 api_error=0 handle_error=0 block_error=0\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\nret=0 api_error=0 handle_error=0 block_error=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n```\n\n# Encode wav file\n* 16bit stereo \u306a wav\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\n* \u30d5\u30a1\u30a4\u30eb\u306e\u6700\u5f8c\u306e\u7aef\u6570\u306e\u90e8\u5206\u306f\u30a8\u30f3\u30b3\u30fc\u30c9\u3055\u308c\u307e\u305b\u3093\u3002\n\n```\n#include <stdio.h>\n#include \"ldacBT.h\"\n\nint main(int argc, char *argv[])\n{\n    HANDLE_LDAC_BT h;\n    int ret, err, pcm_used, ldac_stream_size, ldac_frame_num;\n    unsigned char pcm[128*2*2];\n    unsigned char ldac[1024];\n    FILE *infp, *outfp;\n    unsigned char header[44];\n\n    if ((infp = fopen(argv[1], \"r\"))==NULL) {\n        printf(\"can't open input file\\n\");\n        return -1;\n    }\n\n    if ((outfp = fopen(argv[2], \"w\"))==NULL) {\n        printf(\"can't open output file\\n\");\n        return -1;\n    }\n\n    //skip wave header\n    fread(header, 44, 1, infp);\n    \n    h = ldacBT_get_handle();\n    ret = ldacBT_init_handle_encode(h, 679, LDACBT_EQMID_HQ, LDACBT_CHANNEL_MODE_STEREO, LDACBT_SMPL_FMT_S16, 48000);\n\n    while(fread(pcm, 512, 1, infp))\n    {\n        ret = ldacBT_encode(h, &pcm[0], &pcm_used, ldac, &ldac_stream_size, &ldac_frame_num);\n        printf(\"  pcm_used=%d ldac_stream_size=%d ldac_frame_num=%d\\n\", pcm_used, ldac_stream_size, ldac_frame_num);\n        fwrite(ldac, 1, ldac_stream_size, outfp);\n    }\n\n    ldacBT_close_handle(h);\n\n    return 0;\n}\n```\n* \u5b9f\u884c\u4f8b\n\n```\n$./ldacenc 1kHz-0-dither.wav 1khz.ldac_hq\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n  pcm_used=512 ldac_stream_size=0 ldac_frame_num=0\n  pcm_used=512 ldac_stream_size=660 ldac_frame_num=2\n```\n\n* \u30b5\u30a4\u30ba\n* HQ\u3001SQ\u3001MQ\u3067\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u5834\u5408\u306e\u30b5\u30a4\u30ba\u3067\u3059\u3002\u3000\u305d\u308c\u305e\u308c990kbps, 660kbps, 330kbps\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```\n  2880044  1kHz-0-dither.wav\n  1855920  1khz.ldac_hq\n  1237500  1khz.ldac_sq\n   618420  1khz.ldac_mq\n```\n\n\n"}