{"tags": ["Xcode", "Swift3.0", "Swift", "argument", "Invoke"], "context": "\u67d0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0QA\u30b5\u30a4\u30c8\u3067\u56de\u7b54\u3057\u305f\u3082\u306e\u3092\u3044\u304f\u3064\u304b\u96c6\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u5927\u62b5\u306f\u5b9a\u7fa9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u578b\u3092\u5408\u308f\u305b\u3066\u3084\u308c\u3070\u89e3\u6c7a\u3059\u308b\u3082\u306e\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u304cswift\u306e\u53b3\u3057\u3044\u578b\u30c1\u30a7\u30c3\u30af\u306f\u521d\u5b66\u8005\u306e\u65b9\u306b\u306f\u306a\u304b\u306a\u304b\u60a9\u307e\u3057\u3044\u3088\u3046\u3067\u3059\u3002\u53c2\u8003\u306b\u306a\u308c\u3070\u826f\u3044\u3068\u601d\u3044\u63b2\u8f09\u3057\u307e\u3059\u3002\uff08\u8cea\u554f\u8005\u3055\u307e\u306e\u30b3\u30fc\u30c9\u306f\u6539\u5909\u3057\u3066\u63b2\u8f09\u3057\u3066\u307e\u3059\uff09\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e\uff11\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\nCannot invoke initializer for type 'URL' with no arguments\n\n\u6539\u4fee\u524d\n\nwebView = UIWebView(frame:CGRect(x: 50,y: 100,width: 150,height: 200))\nwebView.load(gifData,mimeType:\"image/gif\",textEncodingName:\"utf-8\",baseURL:URL())\n\n\n\u6539\u4fee\u5f8c\u3000\n// swift 3.0\n\nwebView = UIWebView(frame:CGRect(x: 50,y: 100,width: 150,height: 200))\nwebView.load(gifData,mimeType:\"image/gif\",textEncodingName:\"utf-8\",baseURL:NSURL() as URL)\n\n\nURL \u2192 NSURL() as URL\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e2\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\nargument labels do not match any available overloads timestamp\n\n\u6539\u4fee\u524d\n\nlet timestamp: NSNumber = NSNumber(Int(Date().timeIntervalSince1970))\n\n\nNSNumber\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"NSNumber\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\npublic init(value: Int)\n\n\u6539\u4fee\u5f8c\n// swift 3.0\n\nlet timestamp: NSNumber = NSNumber(value:Int(Date().timeIntervalSince1970))\n\n\nswift3.0\u3067\u3001\u5916\u90e8\u5f15\u6570\u540d\u4e0d\u8981\u306f\u660e\u793a\u7684\u306b\u300c _ \u300d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4eca\u56de\u306e\u5834\u5408\u306fvalue:\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e3\n\u30a8\u30e9\u30fc : \u30ad\u30e3\u30b9\u30c8\u7b87\u6240\u3067\u843d\u3061\u308b\n\u6539\u4fee\u524d\n\nmotionManager.startAccelerometerUpdates(to: OperationQueue.main, withHandler: {(accelerometerData:CMAccelerometerData?, error:NSError?) -> Void in\n\n    // \u306a\u3093\u304b\u51e6\u7406\n\n        } as! CMAccelerometerHandler)\n//(\u7565)\n\n\nCMAccelerometerHandler\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"CMAccelerometerHandler\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\npublic typealias CMAccelerometerHandler = (CMAccelerometerData?, Error?) -> Swift.Void\n\n\u6539\u4fee\u5f8c\n// swift 3.0\n\nmotionManager.startAccelerometerUpdates(to: OperationQueue.main, withHandler: {(accelerometerData:CMAccelerometerData?, error:Error?) -> Void in\n\n    // \u306a\u3093\u304b\u51e6\u7406\n\n        } // as! CMAccelerometerHandler)\n//(\u7565)\n\n\u5f37\u5236\u30ad\u30e3\u30b9\u30c8\u3067\u30e9\u30f3\u30bf\u30a4\u30e0\u6642\u306b\u30b3\u30b1\u308b\u30b1\u30fc\u30b9\u3002NSxxx\u306fSwift3\u306b\u306a\u3063\u3066\u304b\u3089\u5927\u62b5\u304cNS\u306a\u3057\u306b\u306a\u3063\u3066\u307e\u3059\u3002(NSData \u2192 Data etc)\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e4\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\nCannot convert  value of type \u2019Data\u2019  to  closure result type \u2019NSData\u2019\n\u6539\u4fee\u524d\n\n    let dataImages: [NSData] = photos.map { (image) -> NSData in \n        UIImagePNGRepresentation(image)!\n    }\n\n\nUIImagePNGRepresentation\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"UIImagePNGRepresentation\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\npublic func UIImagePNGRepresentation(_ image: UIImage) -> Data?\n\n\u6539\u4fee\u5f8c\n// swift 3.0\n\n    let dataImages: [Data] = photos.map { (image) -> Data in\n        UIImagePNGRepresentation(image)!\n    }\n\n\u623b\u308a\u5024\u304cData?\u3067\u3059\u3002\u305d\u306e\uff13\u3068\u540c\u3058\u3067\u3059\u306d\u3002\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e5\n\u30a8\u30e9\u30fc : \u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u306a\u3044\n\u6539\u4fee\u524d\n\n    private func centralManager(central: CBCentralManager,\n                        didDiscoverPeripheral peripheral: CBPeripheral,\n                        advertisementData: [String : AnyObject],\n                        RSSI: NSNumber)\n    {\n        print(\"\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\")\n    }\n\n\u6539\u4fee\u5f8c\n// swift 3.0\n\n    func centralManager(central: CBCentralManager,\n                        didDiscoverPeripheral peripheral: CBPeripheral,\n                        advertisementData: [String : AnyObject],\n                        RSSI: NSNumber)\n    {\n        print(\"\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\")\n    }\n\nXcode\u306e\u88dc\u5b8c\u6a5f\u80fd\u306b\u307e\u304b\u305b\u3066\u308b\u3068\u3001private\u3092\u3064\u3051\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002private\u304c\u3064\u304f\u3068\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e6\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n'CGRectMake' is unavailable in Swift\n\u6539\u4fee\u524d\nlet rect = CGRectMake(30, 60, 100, 100)\n\n\u6539\u4fee\u5f8c\n// swift 3.0\nlet rect = CGRect(x:30, y:60, width:100, height:100)\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3044\u3046\u3088\u308a\u95a2\u6570\u540d\u305d\u306e\u3082\u306e\u304c\u5909\u66f4\u306b\u306a\u3063\u3066\u307e\u3059\u3002\u3061\u306a\u307f\u306bCGRectZero\u306fCGRect.zero\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e\uff17\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 1\nType 'PageViewController' does not conform to protocol 'UIPageViewControllerDataSource'\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 2\nValue of type 'UIViewController' has no member 'isKindOfClass'\n\u6539\u4fee\u524d\nextension PageViewController : UIPageViewControllerDataSource {\n\n    func pageViewController(pageViewController: UIPageViewController, viewControllerBeforeViewController viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKindOfClass(ThirdViewController) {\n            return getSecond()\n\n        } else if viewController.isKindOfClass(SecondViewController) {\n            return getFirst()\n        } else {\n            return nil\n        }\n    }\n\n    func pageViewController(pageViewController: UIPageViewController, viewControllerAfterViewController viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKindOfClass(FirstViewController) {\n            return getSecond()\n\n        } else if viewController.isKindOfClass(SecondViewController) {\n            return getThird()\n        } else {\n            return nil\n        }\n    }\n}\n\n\u3072\u3068\u3064\u76ee\u306e\u30a8\u30e9\u30fc\u306fUIPageViewControllerDataSource\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4e0a\uff12\u3064\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306f\u5b9f\u88c5\u304c\u30de\u30b9\u30c8\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u6539\u4fee\u524d\u306e\u30bd\u30fc\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u5fae\u5999\u306b\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u9055\u3046\u306e\u3067\u300c\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u3088\u300d\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\nUIPageViewControllerDataSource\u30d7\u30ed\u30c8\u30b3\u30eb\npublic protocol UIPageViewControllerDataSource : NSObjectProtocol {\n\n    @available(iOS 5.0, *)\n    public func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController?\n\n    @available(iOS 5.0, *)\n    public func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController?\n\n    @available(iOS 6.0, *)\n    optional public func presentationCount(for pageViewController: UIPageViewController) -> Int // The number of items reflected in the page indicator.\n\n    @available(iOS 6.0, *)\n    optional public func presentationIndex(for pageViewController: UIPageViewController) -> Int // The selected item reflected in the page indicator.\n}\n\n\u3075\u305f\u3064\u76ee\u306e\u30a8\u30e9\u30fc\u306f\u300c\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u3002\u30e1\u30bd\u30c3\u30c9\u306e\u300chas no member\u300d\u306f\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u601d\u3063\u3066\u307e\u305a\u9593\u9055\u3044\u306a\u3044\u3067\u3059\u3002Swift3.0\u3067\u306f\u3001Objective-C\u304b\u3089\u306e\u6163\u4f8b\u3092\u6368\u3066\u308b\u3088\u3046\u306a\u52d5\u304d\u304c\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5909\u66f4\u30eb\u30fc\u30eb\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nex1 . \u3010Swift2.x\u3011 xxxxWith(\u301c \u2192  \u3010Swift3.0\u3011 xxxx(with: \u301c\nex2 . \u3010Swift2.x\u3011 xxxxOf(\u301c \u2192 \u3010Swift3.0\u3011 xxxx(of: \u301c\nex3 . \u3010Swift2.x\u3011 xxxxFor(\u301c \u2192 \u3010Swift3.0\u3011 xxxx(for: \u301c\n\u7b2c\u4e00\u5f15\u6570\u3067\u3042\u3063\u3066\u3082\u5916\u90e8\u5f15\u6570\u540d\u306e\u7701\u7565\u306b\u300c _ \u300d\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u306e\u306f\u304a\u305d\u3089\u304f\u3053\u306e\u30eb\u30fc\u30eb\u306b\u4f34\u3046\u3082\u306e\u306a\u306e\u3067\u3057\u3087\u3046\u3002\n\u6539\u4fee\u5f8c\nextension PageViewController : UIPageViewControllerDataSource {\n\n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKind(of: ThirdViewController.self) {\n            return getSecond()\n        } else if viewController.isKind(of: SecondViewController.self) {\n            return getFirst()\n        } else {\n            return nil\n        }\n    }\n\n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKind(of: FirstViewController.self) {\n            return getSecond()\n        } else if viewController.isKind(of: SecondViewController.self) {\n            return getThird()\n        } else {\n            return nil\n        }\n    }\n}\n\n\u67d0\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0QA\u30b5\u30a4\u30c8\u3067\u56de\u7b54\u3057\u305f\u3082\u306e\u3092\u3044\u304f\u3064\u304b\u96c6\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u5927\u62b5\u306f\u5b9a\u7fa9\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u578b\u3092\u5408\u308f\u305b\u3066\u3084\u308c\u3070\u89e3\u6c7a\u3059\u308b\u3082\u306e\u304c\u307b\u3068\u3093\u3069\u3067\u3059\u304cswift\u306e\u53b3\u3057\u3044\u578b\u30c1\u30a7\u30c3\u30af\u306f\u521d\u5b66\u8005\u306e\u65b9\u306b\u306f\u306a\u304b\u306a\u304b\u60a9\u307e\u3057\u3044\u3088\u3046\u3067\u3059\u3002\u53c2\u8003\u306b\u306a\u308c\u3070\u826f\u3044\u3068\u601d\u3044\u63b2\u8f09\u3057\u307e\u3059\u3002\uff08\u8cea\u554f\u8005\u3055\u307e\u306e\u30b3\u30fc\u30c9\u306f\u6539\u5909\u3057\u3066\u63b2\u8f09\u3057\u3066\u307e\u3059\uff09\n\n\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e\uff11\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n```Cannot invoke initializer for type 'URL' with no arguments\n```\n\n\u6539\u4fee\u524d\n\n```swift\n\nwebView = UIWebView(frame:CGRect(x: 50,y: 100,width: 150,height: 200))\nwebView.load(gifData,mimeType:\"image/gif\",textEncodingName:\"utf-8\",baseURL:URL())\n\n```\n\n\u6539\u4fee\u5f8c\u3000\n\n```swift\n// swift 3.0\n\nwebView = UIWebView(frame:CGRect(x: 50,y: 100,width: 150,height: 200))\nwebView.load(gifData,mimeType:\"image/gif\",textEncodingName:\"utf-8\",baseURL:NSURL() as URL)\n\n```\n\nURL \u2192 NSURL() as URL\n\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e2\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n```argument labels do not match any available overloads timestamp\n```\n\n\u6539\u4fee\u524d\n\n```swift\n\nlet timestamp: NSNumber = NSNumber(Int(Date().timeIntervalSince1970))\n\n```\n\nNSNumber\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"NSNumber\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\n\n```\npublic init(value: Int)\n```\n\n\u6539\u4fee\u5f8c\n\n```swift\n// swift 3.0\n\nlet timestamp: NSNumber = NSNumber(value:Int(Date().timeIntervalSince1970))\n\n```\n\nswift3.0\u3067\u3001\u5916\u90e8\u5f15\u6570\u540d\u4e0d\u8981\u306f\u660e\u793a\u7684\u306b\u300c _ \u300d\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u4eca\u56de\u306e\u5834\u5408\u306fvalue:\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e3\n\n\u30a8\u30e9\u30fc : \u30ad\u30e3\u30b9\u30c8\u7b87\u6240\u3067\u843d\u3061\u308b\n\n\u6539\u4fee\u524d\n\n```swift\n\nmotionManager.startAccelerometerUpdates(to: OperationQueue.main, withHandler: {(accelerometerData:CMAccelerometerData?, error:NSError?) -> Void in\n\n\t// \u306a\u3093\u304b\u51e6\u7406\n\n        } as! CMAccelerometerHandler)\n//(\u7565)\n\n```\n\nCMAccelerometerHandler\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"CMAccelerometerHandler\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\n\n```\npublic typealias CMAccelerometerHandler = (CMAccelerometerData?, Error?) -> Swift.Void\n```\n\n\u6539\u4fee\u5f8c\n\n```swift\n// swift 3.0\n\nmotionManager.startAccelerometerUpdates(to: OperationQueue.main, withHandler: {(accelerometerData:CMAccelerometerData?, error:Error?) -> Void in\n\n\t// \u306a\u3093\u304b\u51e6\u7406\n\n        } // as! CMAccelerometerHandler)\n//(\u7565)\n```\n\n\u5f37\u5236\u30ad\u30e3\u30b9\u30c8\u3067\u30e9\u30f3\u30bf\u30a4\u30e0\u6642\u306b\u30b3\u30b1\u308b\u30b1\u30fc\u30b9\u3002NSxxx\u306fSwift3\u306b\u306a\u3063\u3066\u304b\u3089\u5927\u62b5\u304cNS\u306a\u3057\u306b\u306a\u3063\u3066\u307e\u3059\u3002(NSData \u2192 Data etc)\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e4\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n```Cannot convert  value of type \u2019Data\u2019  to  closure result type \u2019NSData\u2019```\n\n\n\u6539\u4fee\u524d\n\n```swift\n\n    let dataImages: [NSData] = photos.map { (image) -> NSData in \n        UIImagePNGRepresentation(image)!\n    }\n\n```\n\nUIImagePNGRepresentation\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d(\"UIImagePNGRepresentation\"\u3092[option] + [command] + \u30af\u30ea\u30c3\u30af)\u3057\u3066\u307f\u308b\u3068...\n\n```\npublic func UIImagePNGRepresentation(_ image: UIImage) -> Data?\n```\n\n\u6539\u4fee\u5f8c\n\n```swift\n// swift 3.0\n\n    let dataImages: [Data] = photos.map { (image) -> Data in\n        UIImagePNGRepresentation(image)!\n    }\n```\n\n\u623b\u308a\u5024\u304cData?\u3067\u3059\u3002\u305d\u306e\uff13\u3068\u540c\u3058\u3067\u3059\u306d\u3002\n\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e5\n\n\u30a8\u30e9\u30fc : \u30c7\u30ea\u30b2\u30fc\u30c8\u30e1\u30bd\u30c3\u30c9\u304c\u30b3\u30fc\u30eb\u3055\u308c\u306a\u3044\n\n\u6539\u4fee\u524d\n\n```swift\n\n    private func centralManager(central: CBCentralManager,\n                        didDiscoverPeripheral peripheral: CBPeripheral,\n                        advertisementData: [String : AnyObject],\n                        RSSI: NSNumber)\n    {\n        print(\"\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\")\n    }\n```\n\n\u6539\u4fee\u5f8c\n\n```swift\n// swift 3.0\n\n    func centralManager(central: CBCentralManager,\n                        didDiscoverPeripheral peripheral: CBPeripheral,\n                        advertisementData: [String : AnyObject],\n                        RSSI: NSNumber)\n    {\n        print(\"\u30b3\u30fc\u30eb\u3055\u308c\u307e\u3057\u305f\")\n    }\n```\n\nXcode\u306e\u88dc\u5b8c\u6a5f\u80fd\u306b\u307e\u304b\u305b\u3066\u308b\u3068\u3001private\u3092\u3064\u3051\u3089\u308c\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002private\u304c\u3064\u304f\u3068\u4ed6\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e6\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n```'CGRectMake' is unavailable in Swift```\n\n\n\u6539\u4fee\u524d\n\n```swift\nlet rect = CGRectMake(30, 60, 100, 100)\n```\n\u6539\u4fee\u5f8c\n\n```swift\n// swift 3.0\nlet rect = CGRect(x:30, y:60, width:100, height:100)\n```\n\n\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3044\u3046\u3088\u308a\u95a2\u6570\u540d\u305d\u306e\u3082\u306e\u304c\u5909\u66f4\u306b\u306a\u3063\u3066\u307e\u3059\u3002\u3061\u306a\u307f\u306b`CGRectZero`\u306f`CGRect.zero`\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## \u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u95a2\u9023\u306e\u30a8\u30e9\u30fc\u305d\u306e\uff17\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 1\n```Type 'PageViewController' does not conform to protocol 'UIPageViewControllerDataSource'```\n\n\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8 2\n```Value of type 'UIViewController' has no member 'isKindOfClass'```\n\n\u6539\u4fee\u524d\n\n```swift\nextension PageViewController : UIPageViewControllerDataSource {\n\n    func pageViewController(pageViewController: UIPageViewController, viewControllerBeforeViewController viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKindOfClass(ThirdViewController) {\n            return getSecond()\n\n        } else if viewController.isKindOfClass(SecondViewController) {\n            return getFirst()\n        } else {\n            return nil\n        }\n    }\n\n    func pageViewController(pageViewController: UIPageViewController, viewControllerAfterViewController viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKindOfClass(FirstViewController) {\n            return getSecond()\n\n        } else if viewController.isKindOfClass(SecondViewController) {\n            return getThird()\n        } else {\n            return nil\n        }\n    }\n}\n```\n\n\u3072\u3068\u3064\u76ee\u306e\u30a8\u30e9\u30fc\u306f`UIPageViewControllerDataSource`\u306e\u5b9a\u7fa9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4e0a\uff12\u3064\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306f\u5b9f\u88c5\u304c\u30de\u30b9\u30c8\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u304c\u3001\u6539\u4fee\u524d\u306e\u30bd\u30fc\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u5fae\u5999\u306b\u30b7\u30b0\u30cb\u30c1\u30e3\u304c\u9055\u3046\u306e\u3067\u300c\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u3088\u300d\u3068\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u3059\u3002\n\n#### UIPageViewControllerDataSource\u30d7\u30ed\u30c8\u30b3\u30eb\n\n```swift\npublic protocol UIPageViewControllerDataSource : NSObjectProtocol {\n\n    @available(iOS 5.0, *)\n    public func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController?\n\n    @available(iOS 5.0, *)\n    public func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController?\n\n    @available(iOS 6.0, *)\n    optional public func presentationCount(for pageViewController: UIPageViewController) -> Int // The number of items reflected in the page indicator.\n\n    @available(iOS 6.0, *)\n    optional public func presentationIndex(for pageViewController: UIPageViewController) -> Int // The selected item reflected in the page indicator.\n}\n```\n\n\u3075\u305f\u3064\u76ee\u306e\u30a8\u30e9\u30fc\u306f\u300c\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u300d\u3068\u3044\u3046\u3082\u306e\u3002\u30e1\u30bd\u30c3\u30c9\u306e\u300chas no member\u300d\u306f\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u305f\u3068\u601d\u3063\u3066\u307e\u305a\u9593\u9055\u3044\u306a\u3044\u3067\u3059\u3002Swift3.0\u3067\u306f\u3001Objective-C\u304b\u3089\u306e\u6163\u4f8b\u3092\u6368\u3066\u308b\u3088\u3046\u306a\u52d5\u304d\u304c\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5909\u66f4\u30eb\u30fc\u30eb\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`ex1 . \u3010Swift2.x\u3011 xxxxWith(\u301c \u2192  \u3010Swift3.0\u3011 xxxx(with: \u301c `\n`ex2 . \u3010Swift2.x\u3011 xxxxOf(\u301c \u2192 \u3010Swift3.0\u3011 xxxx(of: \u301c `\n`ex3 . \u3010Swift2.x\u3011 xxxxFor(\u301c \u2192 \u3010Swift3.0\u3011 xxxx(for: \u301c `\n\n\u7b2c\u4e00\u5f15\u6570\u3067\u3042\u3063\u3066\u3082\u5916\u90e8\u5f15\u6570\u540d\u306e\u7701\u7565\u306b\u300c _ \u300d\u304c\u5fc5\u8981\u306b\u306a\u3063\u305f\u306e\u306f\u304a\u305d\u3089\u304f\u3053\u306e\u30eb\u30fc\u30eb\u306b\u4f34\u3046\u3082\u306e\u306a\u306e\u3067\u3057\u3087\u3046\u3002\n\n\u6539\u4fee\u5f8c\n\n```swift\nextension PageViewController : UIPageViewControllerDataSource {\n\n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerBefore viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKind(of: ThirdViewController.self) {\n            return getSecond()\n        } else if viewController.isKind(of: SecondViewController.self) {\n            return getFirst()\n        } else {\n            return nil\n        }\n    }\n\n    func pageViewController(_ pageViewController: UIPageViewController, viewControllerAfter viewController: UIViewController) -> UIViewController? {\n\n        if viewController.isKind(of: FirstViewController.self) {\n            return getSecond()\n        } else if viewController.isKind(of: SecondViewController.self) {\n            return getThird()\n        } else {\n            return nil\n        }\n    }\n}\n```\n"}