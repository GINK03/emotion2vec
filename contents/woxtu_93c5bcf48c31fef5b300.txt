{"context": "\u3000\u6982\u8981\u3067\u3059\u3002\n\nbash \u306e\u7d44\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u81ea\u4f5c\u306b\u3088\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u9ad8\u901f\u5316 - Qiita\n\n\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u308c\u3070\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5b9f\u88c5\u3059\u308b\n\u3000\u578b\u306a\u3069\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u306a\u3044\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b Sync \u3092\u3064\u3051\u3066\u3044\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u3053\u308c\u304c\u4f55\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u306e\u304b\u306f\u8b0e\u3067\u3059\u3002\u4ffa\u305f\u3061\u306f\u96f0\u56f2\u6c17\u3067 Rust \u3092\u3084\u3063\u3066\u3044\u308b\u3002\nconst EXECUTION_SUCCESS: c_int = 0;\nconst BUILTIN_ENABLED: c_int = 0x01;\n\n#[repr(C)]\npub struct WORD_DESC {\n  word: *mut c_char,\n  dollar_present: c_int,\n  quoted: c_int,\n  assignment: c_int,\n}\n\n#[repr(C)]\npub struct WORD_LIST {\n  next: *mut WORD_LIST,\n  word: *mut WORD_DESC,\n}\n\npub type sh_builtin_func_t = extern fn (*mut WORD_LIST) -> c_int;\n\n#[repr(C)]\npub struct builtin {\n  name: *mut c_char,\n  function: sh_builtin_func_t,\n  flags: c_int,\n  long_doc: *mut *const c_char,\n  short_doc: *mut c_char,\n  handle: *mut c_char,\n}\n\nunsafe impl Sync for builtin {}\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u6587\u5b57\u5217\u306e\u5b9a\u7fa9\u304c\u3068\u306b\u304b\u304f\u53b3\u3057\u304f\u3066\u3001null \u7d42\u7aef\u306e byte string \u3092\u4e8c\u56de\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308b\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u307e\u3059\u3002\npub extern fn hello_world(_list: *mut WORD_LIST) -> c_int {\n  println!(\"Hello, World!\");\n  EXECUTION_SUCCESS\n} \n\nconst LONG_DOC: &'static [*const c_char] = &[\n  b\"Show a greeting message.\\0\" as *const _ as *const _,\n  b\"\\0\" as *const _ as *const _,\n  b\"It's far faster than launching executable file\\0\" as *const _ as *const _,\n  b\"because it't not necessary to call exec() and fork().\\0\" as *const _ as *const _,\n  0 as *const _,\n];\n\n#[no_mangle]\npub static mut hello_world_struct: builtin = builtin {\n  name: b\"hello_world\\0\" as *const _ as *mut _,\n  function: hello_world,\n  flags: BUILTIN_ENABLED,\n  long_doc: LONG_DOC as *const _ as *mut _,\n  short_doc: b\"hello_world\\0\" as *const _ as *mut _,\n  handle: 0 as *mut _,\n};\n\n\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002cdylib \u3068\u66f8\u304f\u3079\u304d\u3068\u3053\u308d\u3092 dylib \u3068\u66f8\u3044\u3066\u5c11\u3057\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3092\u3057\u305f\u3068\u304d\u306b\u6587\u5b57\u5217\u306e\u3042\u305f\u308a\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\nCargo.toml\n[package]\nname = \"hello_world\"\nversion = \"0.1.0\"\nauthors = []\n\n[lib]\nname = \"hello_world\"\npath = \"./lib.rs\"\ncrate-type = [\"cdylib\"]\n\n\n$ cargo build --release\n   Compiling hello_world v0.1.0 (file:///Users/woxtu/Workspace/hello_world)\n    Finished release [optimized] target(s) in 0.29 secs\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u547c\u3073\u51fa\u3059\n\u3000\u5148\u306b\u3064\u304f\u3063\u305f\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n$ enable -f target/release/libhello_world.dylib hello_world\n$ enable | grep hello_world\nenable hello_world\n\n\u30b3\u30de\u30f3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n$ hello_world\nHello, World!\n\n$ help hello_world\nhello_world: hello_world\n    Show a greeting message.\n\n    It's far faster than launching executable file\n    because it't not necessary to call exec() and fork().\n\n\u3084\u308a\u307e\u3057\u305f\u3002\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u7d42\u308f\u308a\u306b\n\u3000\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u306f\u3068\u3082\u304b\u304f\u3001\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3064\u304f\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4ed6\u8a00\u8a9e\u3068\u306e\u9023\u643a\u3082\u53d6\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3001\u4ef2\u826f\u304f\u3057\u3066\u3044\u304f\u3068\u826f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u5404\u4f4d\u3001\u4ef2\u826f\u304f\u3002\n\u3000\u30b3\u30fc\u30c9\u306f Gist \u306b\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://gist.github.com/woxtu/57697a2f1c51b4e59e87a4b7f9f92047\n\n\n\u53c2\u8003\n\nForeign Function Interface - The Rust Programming Language\nAlternative representations - The Rustonomicon\nrustc: Add a new crate type, cdylib - rust-lang/rust - GitHub\n\n\u3000\u6982\u8981\u3067\u3059\u3002\n\n- [bash \u306e\u7d44\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u81ea\u4f5c\u306b\u3088\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u9ad8\u901f\u5316 - Qiita](http://qiita.com/satoru_takeuchi/items/7d424fa5ef1e33ace4df)\n\n\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3064\u304f\u308c\u3070\u826f\u3044\u3053\u3068\u304c\u308f\u304b\u3063\u305f\u306e\u3067\u3084\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u5b9f\u88c5\u3059\u308b\n\n\u3000\u578b\u306a\u3069\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u30b9\u30ec\u30c3\u30c9\u30ed\u30fc\u30ab\u30eb\u3067\u306f\u306a\u3044\u5024\u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306b `Sync` \u3092\u3064\u3051\u3066\u3044\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u3053\u308c\u304c\u4f55\u3092\u610f\u5473\u3057\u3066\u3044\u308b\u306e\u304b\u306f\u8b0e\u3067\u3059\u3002\u4ffa\u305f\u3061\u306f\u96f0\u56f2\u6c17\u3067 Rust \u3092\u3084\u3063\u3066\u3044\u308b\u3002\n\n```rust\nconst EXECUTION_SUCCESS: c_int = 0;\nconst BUILTIN_ENABLED: c_int = 0x01;\n\n#[repr(C)]\npub struct WORD_DESC {\n  word: *mut c_char,\n  dollar_present: c_int,\n  quoted: c_int,\n  assignment: c_int,\n}\n\n#[repr(C)]\npub struct WORD_LIST {\n  next: *mut WORD_LIST,\n  word: *mut WORD_DESC,\n}\n\npub type sh_builtin_func_t = extern fn (*mut WORD_LIST) -> c_int;\n\n#[repr(C)]\npub struct builtin {\n  name: *mut c_char,\n  function: sh_builtin_func_t,\n  flags: c_int,\n  long_doc: *mut *const c_char,\n  short_doc: *mut c_char,\n  handle: *mut c_char,\n}\n\nunsafe impl Sync for builtin {}\n```\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\u6587\u5b57\u5217\u306e\u5b9a\u7fa9\u304c\u3068\u306b\u304b\u304f\u53b3\u3057\u304f\u3066\u3001null \u7d42\u7aef\u306e byte string \u3092\u4e8c\u56de\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u30dd\u30a4\u30f3\u30bf\u3092\u53d6\u308b\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n```rust\npub extern fn hello_world(_list: *mut WORD_LIST) -> c_int {\n  println!(\"Hello, World!\");\n  EXECUTION_SUCCESS\n} \n  \nconst LONG_DOC: &'static [*const c_char] = &[\n  b\"Show a greeting message.\\0\" as *const _ as *const _,\n  b\"\\0\" as *const _ as *const _,\n  b\"It's far faster than launching executable file\\0\" as *const _ as *const _,\n  b\"because it't not necessary to call exec() and fork().\\0\" as *const _ as *const _,\n  0 as *const _,\n];\n\n#[no_mangle]\npub static mut hello_world_struct: builtin = builtin {\n  name: b\"hello_world\\0\" as *const _ as *mut _,\n  function: hello_world,\n  flags: BUILTIN_ENABLED,\n  long_doc: LONG_DOC as *const _ as *mut _,\n  short_doc: b\"hello_world\\0\" as *const _ as *mut _,\n  handle: 0 as *mut _,\n};\n```\n\n\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002`cdylib` \u3068\u66f8\u304f\u3079\u304d\u3068\u3053\u308d\u3092 `dylib` \u3068\u66f8\u3044\u3066\u5c11\u3057\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\u30ea\u30ea\u30fc\u30b9\u30d3\u30eb\u30c9\u3092\u3057\u305f\u3068\u304d\u306b\u6587\u5b57\u5217\u306e\u3042\u305f\u308a\u304c\u304a\u304b\u3057\u304f\u306a\u308a\u307e\u3059\u3002\n\n```toml:Cargo.toml\n[package]\nname = \"hello_world\"\nversion = \"0.1.0\"\nauthors = []\n\n[lib]\nname = \"hello_world\"\npath = \"./lib.rs\"\ncrate-type = [\"cdylib\"]\n```\n\n```shell-session\n$ cargo build --release\n   Compiling hello_world v0.1.0 (file:///Users/woxtu/Workspace/hello_world)\n    Finished release [optimized] target(s) in 0.29 secs\n```\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n\n## \u547c\u3073\u51fa\u3059\n\n\u3000\u5148\u306b\u3064\u304f\u3063\u305f\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n\n```shell-session\n$ enable -f target/release/libhello_world.dylib hello_world\n$ enable | grep hello_world\nenable hello_world\n```\n\n\u30b3\u30de\u30f3\u30c9\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```shell-session\n$ hello_world\nHello, World!\n```\n\n```shell-session\n$ help hello_world\nhello_world: hello_world\n    Show a greeting message.\n    \n    It's far faster than launching executable file\n    because it't not necessary to call exec() and fork().\n```\n\n\u3084\u308a\u307e\u3057\u305f\u3002\u4ee5\u4e0a\u3067\u3059\u3002\n\n## \u7d42\u308f\u308a\u306b\n\n\u3000\u7d44\u307f\u8fbc\u307f\u30b3\u30de\u30f3\u30c9\u306f\u3068\u3082\u304b\u304f\u3001\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3064\u304f\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u4ed6\u8a00\u8a9e\u3068\u306e\u9023\u643a\u3082\u53d6\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3001\u4ef2\u826f\u304f\u3057\u3066\u3044\u304f\u3068\u826f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u5404\u4f4d\u3001\u4ef2\u826f\u304f\u3002\n\n\u3000\u30b3\u30fc\u30c9\u306f Gist \u306b\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\u3002\n\n- https://gist.github.com/woxtu/57697a2f1c51b4e59e87a4b7f9f92047\n\n## \u53c2\u8003\n\n- [Foreign Function Interface - The Rust Programming Language](https://doc.rust-lang.org/stable/book/ffi.html)\n- [Alternative representations - The Rustonomicon](https://doc.rust-lang.org/nomicon/other-reprs.html)\n- [rustc: Add a new crate type, cdylib - rust-lang/rust - GitHub](https://github.com/rust-lang/rust/pull/33553)\n", "tags": ["rust1.14.0"]}