{"tags": ["Python", "\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0", "\u53ef\u8996\u5316", "statistics", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"], "context": " More than 1 year has passed since last update.amueller\u3055\u3093\u306e\u4f5c\u6210\u3057\u305fpython\u306eWord Cloud\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u53ef\u8996\u5316\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u3084\u3064\u3067\u3059\u306d\u3002\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aac\u660e\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttp://amueller.github.io/word_cloud/index.html\n\n1.\u5404\u7a2e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n1-1.word_cloud\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngit\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u5c0e\u5165\u3067\u304d\u307e\u3059\u3002\ngit clone https://github.com/amueller/word_cloud\ncd word_cloud\npython setup.py install\n\n\n1-2.\u5404\u7a2epython\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u65e5\u672c\u8a9e\u306f\u82f1\u8a9e\u3068\u9055\u3063\u3066\u5358\u8a9e\u306e\u533a\u5207\u308a\u304c\u660e\u78ba\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5358\u8a9e\u3092\u30d0\u30e9\u3059\u305f\u3081\u306bMeCab\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3092\u4f7f\u3063\u3066\u5358\u8a9e\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\u3002Mecab\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ea\u30f3\u30af\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u3001\u4e0b\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u6e96\u5099\u3057\u307e\u3059\u3002\npip install beautifulsoup4\npip install requests\n\n\n2.Word Cloud\u306e\u4f5c\u6210\n\u6e96\u5099\u3082\u3067\u304d\u305f\u306e\u3067\u3001\u65e9\u901f\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u6700\u521d\u306f\u5fc5\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u3059\u3002\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nfrom bs4 import BeautifulSoup\nimport requests\nimport MeCab as mc\n\nMeCab\u3092\u3064\u304b\u3063\u3066\u5358\u8a9e\u3092\u5207\u308a\u51fa\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8a70\u3081\u308b\u95a2\u6570\u3067\u3059\u3002\n\u53ef\u8996\u5316\u3057\u3066\u610f\u5473\u304c\u3042\u308a\u305d\u3046\u306a\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u54c1\u8a5e\u306f\u540d\u8a5e\u3001\u52d5\u8a5e\u3001\u5f62\u5bb9\u8a5e\u3001\u526f\u8a5e\u306b\u9650\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ndef mecab_analysis(text):\n    t = mc.Tagger('-Ochasen -d /usr/local/Cellar/mecab/0.996/lib/mecab/dic/mecab-ipadic-neologd/')\n    enc_text = text.encode('utf-8') \n    node = t.parseToNode(enc_text) \n    output = []\n    while(node):\n        if node.surface != \"\":  # \u30d8\u30c3\u30c0\u3068\u30d5\u30c3\u30bf\u3092\u9664\u5916\n            word_type = node.feature.split(\",\")[0]\n            if word_type in [\"\u5f62\u5bb9\u8a5e\", \"\u52d5\u8a5e\",\"\u540d\u8a5e\", \"\u526f\u8a5e\"]:\n                output.append(node.surface)\n        node = node.next\n        if node is None:\n            break\n    return output\n\n\nBeutifulSoup\u3092\u3064\u304b\u3063\u3066URL\u3067\u6307\u5b9a\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u308a\u8fbc\u307f\u307e\u3059\u3002Qiita\u306eHTML\u69cb\u9020\u306b\u5fdc\u3058\u3066\u672c\u6587\u306e\u307f\u62bd\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\ndef get_wordlist_from_QiitaURL(url):\n    res = requests.get(url)\n    soup = BeautifulSoup(res.text)\n    text = soup.body.section.get_text().replace('\\n','').replace('\\t','')\n    return mecab_analysis(text)\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3001Word Cloud\u306e\u751f\u6210\u3067\u3059\u3002\u3042\u307e\u308a\u610f\u5473\u306e\u306a\u3044\u5358\u8a9e\u3092\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u9664\u5916\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001Mac\u3067\u5b9f\u65bd\u3059\u308b\u5834\u5408\u306f\u30d5\u30a9\u30f3\u30c8\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u306a\u305f\u3081\u3001font_path\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\ndef create_wordcloud(text):\n\n    # \u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3002\n    #fpath = \"/System/Library/Fonts/HelveticaNeue-UltraLight.otf\"\n    fpath = \"/Library/Fonts/\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 Pro W3.otf\"\n\n    # \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\n    stop_words = [ u'\u3066\u308b', u'\u3044\u308b', u'\u306a\u308b', u'\u308c\u308b', u'\u3059\u308b', u'\u3042\u308b', u'\u3053\u3068', u'\u3053\u308c', u'\u3055\u3093', u'\u3057\u3066', \\\n             u'\u304f\u308c\u308b', u'\u3084\u308b', u'\u304f\u3060\u3055\u308b', u'\u305d\u3046', u'\u305b\u308b', u'\u3057\u305f',  u'\u601d\u3046',  \\\n             u'\u305d\u308c', u'\u3053\u3053', u'\u3061\u3083\u3093', u'\u304f\u3093', u'', u'\u3066',u'\u306b',u'\u3092',u'\u306f',u'\u306e', u'\u304c', u'\u3068', u'\u305f', u'\u3057', u'\u3067', \\\n             u'\u306a\u3044', u'\u3082', u'\u306a', u'\u3044', u'\u304b', u'\u306e\u3067', u'\u3088\u3046', u'']\n\n    wordcloud = WordCloud(background_color=\"white\",font_path=fpath, width=900, height=500, \\\n                          stopwords=set(stop_words)).generate(text)\n\n    plt.figure(figsize=(15,12))\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.show()\n\n\u4ee5\u4e0a\u304c\u5fc5\u8981\u306a\u51e6\u7406\u306e\u95a2\u6570\u5b9a\u7fa9\u3067\u3057\u305f\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066Word Cloud\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5404\u5358\u8a9e\u3092\u7a7a\u767d\u533a\u5207\u308a\u306b\u3057\u3066\uff11\u3064\u306e\u6587\u5b57\u5217\u306b\u3057\u3066Word Cloud\u4f5c\u6210\u95a2\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n@t_saeko \u3055\u3093\u306e\u8a18\u4e8b\u300c\u708e\u4e0a\u6848\u4ef6\u306b\u7a81\u5982\u30c7\u30a3\u30ec\u30af\u30bf\u30fc\u3068\u3057\u3066\u6295\u5165\u3055\u308c\u305f\u3068\u304d\u306b\u3084\u3063\u3066\u307f\u305f\u3053\u3068\u300d\u3092\u984c\u6750\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u6700\u8fd1\u8aad\u3093\u3067\u9762\u767d\u304b\u3063\u305f\u306e\u3067\uff09\nurl = \"http://qiita.com/t_saeko/items/2b475b8657c826abc114\"\nwordlist = get_wordlist_from_QiitaURL(url)\ncreate_wordcloud(\" \".join(wordlist).decode('utf-8'))\n\n\u306a\u304b\u306a\u304b\u3044\u3044\u611f\u3058\u3067\u3059\uff01\n\n\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306fgist\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\n\n[amueller](https://github.com/amueller)\u3055\u3093\u306e\u4f5c\u6210\u3057\u305fpython\u306eWord Cloud\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u53ef\u8996\u5316\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3053\u3046\u3044\u3046\u3084\u3064\u3067\u3059\u306d\u3002\n![constitution-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/1b03745d-f40e-d94c-1188-54df97c87fe6.png)\n\n\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8aac\u660e\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttp://amueller.github.io/word_cloud/index.html\n\n\n#1.\u5404\u7a2e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb#\n##1-1.word_cloud\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb ##\n\ngit\u304b\u3089\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u5165\u624b\u3059\u308b\u3060\u3051\u3067\u7c21\u5358\u306b\u5c0e\u5165\u3067\u304d\u307e\u3059\u3002\n\n```bash\ngit clone https://github.com/amueller/word_cloud\ncd word_cloud\npython setup.py install\n```\n\n##1-2.\u5404\u7a2epython\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb##\n\n\u65e5\u672c\u8a9e\u306f\u82f1\u8a9e\u3068\u9055\u3063\u3066\u5358\u8a9e\u306e\u533a\u5207\u308a\u304c\u660e\u78ba\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5358\u8a9e\u3092\u30d0\u30e9\u3059\u305f\u3081\u306bMeCab\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3092\u4f7f\u3063\u3066\u5358\u8a9e\u306b\u5207\u308a\u51fa\u3057\u307e\u3059\u3002[Mecab\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb]\n(http://qiita.com/kenmatsu4/items/02034e5688cc186f224b#1-1mecab\u306e\u5c0e\u5165)\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ea\u30f3\u30af\u3067\u8aac\u660e\u3057\u3066\u3044\u307e\u3057\u305f\u306e\u3067\u3001\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\u3001\u4e0b\u8a18\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u306e\u3067\u6e96\u5099\u3057\u307e\u3059\u3002\n\n```bash\npip install beautifulsoup4\npip install requests\n```\n\n#2.Word Cloud\u306e\u4f5c\u6210 #\n\n\u6e96\u5099\u3082\u3067\u304d\u305f\u306e\u3067\u3001\u65e9\u901f\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\u6700\u521d\u306f\u5fc5\u8981\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3067\u3059\u3002\n\n```py \n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n%matplotlib inline\nimport matplotlib.pyplot as plt\nfrom wordcloud import WordCloud\nfrom bs4 import BeautifulSoup\nimport requests\nimport MeCab as mc\n```\n\nMeCab\u3092\u3064\u304b\u3063\u3066\u5358\u8a9e\u3092\u5207\u308a\u51fa\u3057\u3066\u30ea\u30b9\u30c8\u306b\u8a70\u3081\u308b\u95a2\u6570\u3067\u3059\u3002\n\u53ef\u8996\u5316\u3057\u3066\u610f\u5473\u304c\u3042\u308a\u305d\u3046\u306a\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u54c1\u8a5e\u306f\u540d\u8a5e\u3001\u52d5\u8a5e\u3001\u5f62\u5bb9\u8a5e\u3001\u526f\u8a5e\u306b\u9650\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py \ndef mecab_analysis(text):\n    t = mc.Tagger('-Ochasen -d /usr/local/Cellar/mecab/0.996/lib/mecab/dic/mecab-ipadic-neologd/')\n    enc_text = text.encode('utf-8') \n    node = t.parseToNode(enc_text) \n    output = []\n    while(node):\n        if node.surface != \"\":  # \u30d8\u30c3\u30c0\u3068\u30d5\u30c3\u30bf\u3092\u9664\u5916\n            word_type = node.feature.split(\",\")[0]\n            if word_type in [\"\u5f62\u5bb9\u8a5e\", \"\u52d5\u8a5e\",\"\u540d\u8a5e\", \"\u526f\u8a5e\"]:\n                output.append(node.surface)\n        node = node.next\n        if node is None:\n            break\n    return output\n\n```\n\nBeutifulSoup\u3092\u3064\u304b\u3063\u3066URL\u3067\u6307\u5b9a\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u3092\u53d6\u308a\u8fbc\u307f\u307e\u3059\u3002Qiita\u306eHTML\u69cb\u9020\u306b\u5fdc\u3058\u3066\u672c\u6587\u306e\u307f\u62bd\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py \ndef get_wordlist_from_QiitaURL(url):\n    res = requests.get(url)\n    soup = BeautifulSoup(res.text)\n    text = soup.body.section.get_text().replace('\\n','').replace('\\t','')\n    return mecab_analysis(text)\n```\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3001Word Cloud\u306e\u751f\u6210\u3067\u3059\u3002\u3042\u307e\u308a\u610f\u5473\u306e\u306a\u3044\u5358\u8a9e\u3092\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u3068\u3057\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u9664\u5916\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001Mac\u3067\u5b9f\u65bd\u3059\u308b\u5834\u5408\u306f\u30d5\u30a9\u30f3\u30c8\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u306a\u305f\u3081\u3001font_path\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```py \ndef create_wordcloud(text):\n    \n    # \u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3002\n    #fpath = \"/System/Library/Fonts/HelveticaNeue-UltraLight.otf\"\n    fpath = \"/Library/Fonts/\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4 Pro W3.otf\"\n\n    # \u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\n    stop_words = [ u'\u3066\u308b', u'\u3044\u308b', u'\u306a\u308b', u'\u308c\u308b', u'\u3059\u308b', u'\u3042\u308b', u'\u3053\u3068', u'\u3053\u308c', u'\u3055\u3093', u'\u3057\u3066', \\\n             u'\u304f\u308c\u308b', u'\u3084\u308b', u'\u304f\u3060\u3055\u308b', u'\u305d\u3046', u'\u305b\u308b', u'\u3057\u305f',  u'\u601d\u3046',  \\\n             u'\u305d\u308c', u'\u3053\u3053', u'\u3061\u3083\u3093', u'\u304f\u3093', u'', u'\u3066',u'\u306b',u'\u3092',u'\u306f',u'\u306e', u'\u304c', u'\u3068', u'\u305f', u'\u3057', u'\u3067', \\\n             u'\u306a\u3044', u'\u3082', u'\u306a', u'\u3044', u'\u304b', u'\u306e\u3067', u'\u3088\u3046', u'']\n     \n    wordcloud = WordCloud(background_color=\"white\",font_path=fpath, width=900, height=500, \\\n                          stopwords=set(stop_words)).generate(text)\n\n    plt.figure(figsize=(15,12))\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.show()\n```\n\n\u4ee5\u4e0a\u304c\u5fc5\u8981\u306a\u51e6\u7406\u306e\u95a2\u6570\u5b9a\u7fa9\u3067\u3057\u305f\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u4f7f\u3063\u3066Word Cloud\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5404\u5358\u8a9e\u3092\u7a7a\u767d\u533a\u5207\u308a\u306b\u3057\u3066\uff11\u3064\u306e\u6587\u5b57\u5217\u306b\u3057\u3066Word Cloud\u4f5c\u6210\u95a2\u6570\u306b\u6e21\u3057\u307e\u3059\u3002\n\n@t_saeko \u3055\u3093\u306e\u8a18\u4e8b\u300c[\u708e\u4e0a\u6848\u4ef6\u306b\u7a81\u5982\u30c7\u30a3\u30ec\u30af\u30bf\u30fc\u3068\u3057\u3066\u6295\u5165\u3055\u308c\u305f\u3068\u304d\u306b\u3084\u3063\u3066\u307f\u305f\u3053\u3068](http://qiita.com/t_saeko/items/2b475b8657c826abc114)\u300d\u3092\u984c\u6750\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\uff08\u6700\u8fd1\u8aad\u3093\u3067\u9762\u767d\u304b\u3063\u305f\u306e\u3067\uff09\n\n```py \nurl = \"http://qiita.com/t_saeko/items/2b475b8657c826abc114\"\nwordlist = get_wordlist_from_QiitaURL(url)\ncreate_wordcloud(\" \".join(wordlist).decode('utf-8'))\n```\n\n\u306a\u304b\u306a\u304b\u3044\u3044\u611f\u3058\u3067\u3059\uff01\n![wordcloud-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/60854a7e-ce2c-e29e-8659-6cdb9bb7b553.png)\n\n\u30b3\u30fc\u30c9\u306e\u5168\u6587\u306f[gist](https://gist.github.com/matsuken92/2ae497699c7b8f9bde43)\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\n"}