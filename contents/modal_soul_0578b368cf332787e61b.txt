{"tags": ["Ruby", "Scala", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u8fd1Scala\u3070\u304b\u308a\u66f8\u3044\u3066\u3044\u305f\u3051\u308c\u3069\u3001\u6025\u306bRuby\u3092\u3084\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u304c\u3066\u3089\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af\u3092\u3084\u3063\u3066\u307f\u305f\u3002\n\u307e\u3060Ruby\u306e\u611f\u3058\u304c\u63b4\u3081\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d1\u30c3\u3068\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u554f\u984c\u306fScala\u3067\u3084\u308b\u611f\u3058\u3067\u3002\nRuby\u3060\u3068\u4e00\u822c\u7684\u306b\u3053\u3046\u66f8\u304f\u3001\u3068\u304b\u3001\u3053\u3046\u66f8\u3044\u305f\u65b9\u304c\u826f\u3044\u3001\u3068\u304b\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n\u6ce8\u610f\n\u203b \u3053\u306e\u56de\u7b54\u304c\u9593\u9055\u3063\u3066\u308b\u53ef\u80fd\u6027\u304c\u6709\u308a\u307e\u3059\u3002\n\u203b \u8a00\u8a9e\u51e6\u7406\u306e\u77e5\u8b58\u304c\u7121\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u554f\u984c\u6587\u306e\u89e3\u91c8\u3092\u9593\u9055\u3048\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u6709\u308a\u307e\u3059\u3002\n\u7b2c\uff13\u7ae0\uff1a\u6b63\u898f\u8868\u73fe \u306b\u3064\u3065\u304f\u3002\n\n\u7b2c\uff11\u7ae0\uff1a\u6e96\u5099\u904b\u52d5\n\n00. \u6587\u5b57\u5217\u306e\u9006\u9806\n\u6587\u5b57\u5217\"stressed\"\u306e\u6587\u5b57\u3092\u9006\u306b\uff08\u672b\u5c3e\u304b\u3089\u5148\u982d\u306b\u5411\u304b\u3063\u3066\uff09\u4e26\u3079\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n'stressed'.reverse\n\n\n01. \u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u306e1,3,5,7\u6587\u5b57\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n[0,2,4,6].map { |i| ptx[i] }.join\n\n\n02. \u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\uff1d\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\u306e\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u6587\u5b57\u5217\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3092\u5f97\u3088\uff0e\n[\"\u30d1\u30c8\u30ab\u30fc\".chars, \"\u30bf\u30af\u30b7\u30fc\".chars].transpose.map{ |i| i.join }.join\n\n\n03. \u5186\u5468\u7387\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c\u5404\u5358\u8a9e\u306e\uff08\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\uff09\u6587\u5b57\u6570\u3092\u5148\u982d\u304b\u3089\u51fa\u73fe\u9806\u306b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\".split(\" \").map{|word| word.chars.select{|c| c!='.'}.count}\n\n\n04. \u5143\u7d20\u8a18\u53f7\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306b2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3057\uff0c\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u5217\u304b\u3089\u5358\u8a9e\u306e\u4f4d\u7f6e\uff08\u5148\u982d\u304b\u3089\u4f55\u756a\u76ee\u306e\u5358\u8a9e\u304b\uff09\u3078\u306e\u9023\u60f3\u914d\u5217\uff08\u8f9e\u66f8\u578b\u3082\u3057\u304f\u306f\u30de\u30c3\u30d7\u578b\uff09\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\".filter(_ != '.').split(\" \").zipWithIndex.map( i => if(Set(1,5,6,7,8,9,15,16,19).contains(i._2)) (i._1.head, i._2) else (i._1.take(2), i._2)).toMap\n\n\u4fee\u6b63\n\u4e0a\u8a18\u3060\u3068zipWithIndex\u304c0\u59cb\u307e\u308a\u306a\u306e\u3067\u3001\u5148\u982d\uff11\u6587\u5b57\u306e\u5bfe\u8c61\u304c\u5408\u308f\u306a\u3044\u3067\u3059\u3002\n\u3068\u3044\u3046\u8a33\u3067\u3001\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u3064\u3044\u3067\u306b\u3001\u5358\u8a9e\u306b\u62bd\u51fa\u3059\u308b\u51e6\u7406\u3092\u6b63\u898f\u8868\u73fe\u306b\u3057\u3001\u30b3\u30fc\u30c9\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u70ba\u306b\u5bfe\u8c61\u6587\u5b57\u5217\u3092\u5909\u6570\u306b\u5207\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\nval str = \"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\n\n\"[A-z]+\".r.findAllIn(str).zipWithIndex.map(i => if(Seq(0,4,5,6,7,8,14,15,18).contains(i._2)) (i._1.head, i._2) else (i._1.take(2), i._2)).toMap\n\n\n05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\ndef nGram(n:Int)(target:Array[String]) = {\n    (0 to target.length - n).map(num => num until num + n).map(_.map(target(_)))\n}\n\nval biGram = nGram(2)_\nval wordBiGram = biGram(\"I am an NLPer\".split(\" \"))\nval charBiGram = biGram(\"I am an NLPer\".replace(\" \",\"\").split(\"\"))\n\n\n06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c, X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\ndef biGram(str:String) = {\n    (0 to str.length - 2).map(num => num until num + 2).map(_.map(str(_)).mkString)\n}\n\nval X = biGram(\"paraparaparadise\")\nval Y = biGram(\"paragraph\")\n\nval union = X union Y\nval diff = X diff Y\nval intersect = X intersect Y\nval xContainsSE = X contains \"se\"\nval yContainsSE = Y contains \"se\"\n\n\n07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\ntemplate = ->(x,y,z){\"#{x}\u6642\u306e#{y}\u306f#{z}\"}\ntemplate.call(12, \"\u6c17\u6e29\", 22.4)\n\n\n08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088\uff0e\ndef cipher(mode, str)\n    res = if mode == 'enc'\n            str.chars.map do |c|\n                if /[a-z]/ =~ c\n                    [219 - c.unpack(\"C*\")[0]].pack(\"C*\")\n                else\n                    c\n                end\n            end\n        elsif mode = 'dec'\n            str.chars.map do |c|\n                dec = [219 - c[0].unpack(\"C*\")[0]].pack(\"C*\")\n                if /[a-z]/ =~ dec\n                    dec\n                else\n                    c\n                end\n            end\n        end\n    res.join\nend\n\n\n09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\ndef typoglycemia(str:String) = {\n    str.split(\" \").map { w => \n        if (w.length <= 4) w\n        else w.head + Random.shuffle(w.substring(1, w.length - 1).toSeq).mkString + w.last\n    }.mkString(\" \")    \n}\n\n\u7b2c\uff13\u7ae0\uff1a\u6b63\u898f\u8868\u73fe \u306b\u3064\u3065\u304f\u3002\n\n\u6700\u8fd1Scala\u3070\u304b\u308a\u66f8\u3044\u3066\u3044\u305f\u3051\u308c\u3069\u3001\u6025\u306bRuby\u3092\u3084\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u52c9\u5f37\u304c\u3066\u3089[\u8a00\u8a9e\u51e6\u7406100\u672c\u30ce\u30c3\u30af](http://www.cl.ecei.tohoku.ac.jp/nlp100/)\u3092\u3084\u3063\u3066\u307f\u305f\u3002\n\u307e\u3060Ruby\u306e\u611f\u3058\u304c\u63b4\u3081\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u30d1\u30c3\u3068\u601d\u3044\u3064\u304b\u306a\u304b\u3063\u305f\u554f\u984c\u306fScala\u3067\u3084\u308b\u611f\u3058\u3067\u3002\n\nRuby\u3060\u3068\u4e00\u822c\u7684\u306b\u3053\u3046\u66f8\u304f\u3001\u3068\u304b\u3001\u3053\u3046\u66f8\u3044\u305f\u65b9\u304c\u826f\u3044\u3001\u3068\u304b\u30b3\u30e1\u30f3\u30c8\u3082\u3089\u3048\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\u3002\n\n**\u6ce8\u610f**\n*\u203b \u3053\u306e\u56de\u7b54\u304c\u9593\u9055\u3063\u3066\u308b\u53ef\u80fd\u6027\u304c\u6709\u308a\u307e\u3059\u3002*\n*\u203b \u8a00\u8a9e\u51e6\u7406\u306e\u77e5\u8b58\u304c\u7121\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u554f\u984c\u6587\u306e\u89e3\u91c8\u3092\u9593\u9055\u3048\u3066\u3044\u308b\u53ef\u80fd\u6027\u3082\u6709\u308a\u307e\u3059\u3002*\n\n[\u7b2c\uff13\u7ae0\uff1a\u6b63\u898f\u8868\u73fe](http://qiita.com/modal_soul/items/a8cbbdbf48307b975aa5) \u306b\u3064\u3065\u304f\u3002\n\n# \u7b2c\uff11\u7ae0\uff1a\u6e96\u5099\u904b\u52d5\n\n## 00. \u6587\u5b57\u5217\u306e\u9006\u9806\n\u6587\u5b57\u5217\"stressed\"\u306e\u6587\u5b57\u3092\u9006\u306b\uff08\u672b\u5c3e\u304b\u3089\u5148\u982d\u306b\u5411\u304b\u3063\u3066\uff09\u4e26\u3079\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\n```ruby\n'stressed'.reverse\n```\n\n## 01. \u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u306e1,3,5,7\u6587\u5b57\u76ee\u3092\u53d6\u308a\u51fa\u3057\u3066\u9023\u7d50\u3057\u305f\u6587\u5b57\u5217\u3092\u5f97\u3088\uff0e\n\n```ruby\n[0,2,4,6].map { |i| ptx[i] }.join\n```\n\n## 02. \u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\uff1d\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\n\u300c\u30d1\u30c8\u30ab\u30fc\u300d\uff0b\u300c\u30bf\u30af\u30b7\u30fc\u300d\u306e\u6587\u5b57\u3092\u5148\u982d\u304b\u3089\u4ea4\u4e92\u306b\u9023\u7d50\u3057\u3066\u6587\u5b57\u5217\u300c\u30d1\u30bf\u30c8\u30af\u30ab\u30b7\u30fc\u30fc\u300d\u3092\u5f97\u3088\uff0e\n\n```ruby\n[\"\u30d1\u30c8\u30ab\u30fc\".chars, \"\u30bf\u30af\u30b7\u30fc\".chars].transpose.map{ |i| i.join }.join\n```\n\n## 03. \u5186\u5468\u7387\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\"\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c\u5404\u5358\u8a9e\u306e\uff08\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306e\uff09\u6587\u5b57\u6570\u3092\u5148\u982d\u304b\u3089\u51fa\u73fe\u9806\u306b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n```ruby\n\"Now I need a drink, alcoholic of course, after the heavy lectures involving quantum mechanics.\".split(\" \").map{|word| word.chars.select{|c| c!='.'}.count}\n```\n\n## 04. \u5143\u7d20\u8a18\u53f7\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\u3068\u3044\u3046\u6587\u3092\u5358\u8a9e\u306b\u5206\u89e3\u3057\uff0c1, 5, 6, 7, 8, 9, 15, 16, 19\u756a\u76ee\u306e\u5358\u8a9e\u306f\u5148\u982d\u306e1\u6587\u5b57\uff0c\u305d\u308c\u4ee5\u5916\u306e\u5358\u8a9e\u306f\u5148\u982d\u306b2\u6587\u5b57\u3092\u53d6\u308a\u51fa\u3057\uff0c\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u5217\u304b\u3089\u5358\u8a9e\u306e\u4f4d\u7f6e\uff08\u5148\u982d\u304b\u3089\u4f55\u756a\u76ee\u306e\u5358\u8a9e\u304b\uff09\u3078\u306e\u9023\u60f3\u914d\u5217\uff08\u8f9e\u66f8\u578b\u3082\u3057\u304f\u306f\u30de\u30c3\u30d7\u578b\uff09\u3092\u4f5c\u6210\u305b\u3088\uff0e\n\n```scala\n\"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\".filter(_ != '.').split(\" \").zipWithIndex.map( i => if(Set(1,5,6,7,8,9,15,16,19).contains(i._2)) (i._1.head, i._2) else (i._1.take(2), i._2)).toMap\n```\n**\u4fee\u6b63**\n\u4e0a\u8a18\u3060\u3068```zipWithIndex```\u304c0\u59cb\u307e\u308a\u306a\u306e\u3067\u3001\u5148\u982d\uff11\u6587\u5b57\u306e\u5bfe\u8c61\u304c\u5408\u308f\u306a\u3044\u3067\u3059\u3002\n\u3068\u3044\u3046\u8a33\u3067\u3001\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u3064\u3044\u3067\u306b\u3001\u5358\u8a9e\u306b\u62bd\u51fa\u3059\u308b\u51e6\u7406\u3092\u6b63\u898f\u8868\u73fe\u306b\u3057\u3001\u30b3\u30fc\u30c9\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u70ba\u306b\u5bfe\u8c61\u6587\u5b57\u5217\u3092\u5909\u6570\u306b\u5207\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n```scala\nval str = \"Hi He Lied Because Boron Could Not Oxidize Fluorine. New Nations Might Also Sign Peace Security Clause. Arthur King Can.\"\n\n\"[A-z]+\".r.findAllIn(str).zipWithIndex.map(i => if(Seq(0,4,5,6,7,8,14,15,18).contains(i._2)) (i._1.head, i._2) else (i._1.take(2), i._2)).toMap\n```\n\n\n## 05. n-gram\n\u4e0e\u3048\u3089\u308c\u305f\u30b7\u30fc\u30b1\u30f3\u30b9\uff08\u6587\u5b57\u5217\u3084\u30ea\u30b9\u30c8\u306a\u3069\uff09\u304b\u3089n-gram\u3092\u4f5c\u308b\u95a2\u6570\u3092\u4f5c\u6210\u305b\u3088\uff0e\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\"I am an NLPer\"\u3068\u3044\u3046\u6587\u304b\u3089\u5358\u8a9ebi-gram\uff0c\u6587\u5b57bi-gram\u3092\u5f97\u3088\uff0e\n\n```scala\ndef nGram(n:Int)(target:Array[String]) = {\n    (0 to target.length - n).map(num => num until num + n).map(_.map(target(_)))\n}\n\nval biGram = nGram(2)_\nval wordBiGram = biGram(\"I am an NLPer\".split(\" \"))\nval charBiGram = biGram(\"I am an NLPer\".replace(\" \",\"\").split(\"\"))\n```\n\n## 06. \u96c6\u5408\n\"paraparaparadise\"\u3068\"paragraph\"\u306b\u542b\u307e\u308c\u308b\u6587\u5b57bi-gram\u306e\u96c6\u5408\u3092\uff0c\u305d\u308c\u305e\u308c, X\u3068Y\u3068\u3057\u3066\u6c42\u3081\uff0cX\u3068Y\u306e\u548c\u96c6\u5408\uff0c\u7a4d\u96c6\u5408\uff0c\u5dee\u96c6\u5408\u3092\u6c42\u3081\u3088\uff0e\u3055\u3089\u306b\uff0c'se'\u3068\u3044\u3046bi-gram\u304cX\u304a\u3088\u3073Y\u306b\u542b\u307e\u308c\u308b\u304b\u3069\u3046\u304b\u3092\u8abf\u3079\u3088\uff0e\n\n```scala\ndef biGram(str:String) = {\n    (0 to str.length - 2).map(num => num until num + 2).map(_.map(str(_)).mkString)\n}\n\nval X = biGram(\"paraparaparadise\")\nval Y = biGram(\"paragraph\")\n\nval union = X union Y\nval diff = X diff Y\nval intersect = X intersect Y\nval xContainsSE = X contains \"se\"\nval yContainsSE = Y contains \"se\"\n```\n\n## 07. \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3088\u308b\u6587\u751f\u6210\n\u5f15\u6570x, y, z\u3092\u53d7\u3051\u53d6\u308a\u300cx\u6642\u306ey\u306fz\u300d\u3068\u3044\u3046\u6587\u5b57\u5217\u3092\u8fd4\u3059\u95a2\u6570\u3092\u5b9f\u88c5\u305b\u3088\uff0e\u3055\u3089\u306b\uff0cx=12, y=\"\u6c17\u6e29\", z=22.4\u3068\u3057\u3066\uff0c\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```ruby\ntemplate = ->(x,y,z){\"#{x}\u6642\u306e#{y}\u306f#{z}\"}\ntemplate.call(12, \"\u6c17\u6e29\", 22.4)\n```\n\n## 08. \u6697\u53f7\u6587\n\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u306e\u5404\u6587\u5b57\u3092\uff0c\u4ee5\u4e0b\u306e\u4ed5\u69d8\u3067\u5909\u63db\u3059\u308b\u95a2\u6570cipher\u3092\u5b9f\u88c5\u305b\u3088\uff0e\n\n\u82f1\u5c0f\u6587\u5b57\u306a\u3089\u3070(219 - \u6587\u5b57\u30b3\u30fc\u30c9)\u306e\u6587\u5b57\u306b\u7f6e\u63db\n\u305d\u306e\u4ed6\u306e\u6587\u5b57\u306f\u305d\u306e\u307e\u307e\u51fa\u529b\n\u3053\u306e\u95a2\u6570\u3092\u7528\u3044\uff0c\u82f1\u8a9e\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6697\u53f7\u5316\u30fb\u5fa9\u53f7\u5316\u305b\u3088\uff0e\n\n```ruby\ndef cipher(mode, str)\n    res = if mode == 'enc'\n            str.chars.map do |c|\n                if /[a-z]/ =~ c\n                    [219 - c.unpack(\"C*\")[0]].pack(\"C*\")\n                else\n                    c\n                end\n            end\n        elsif mode = 'dec'\n            str.chars.map do |c|\n                dec = [219 - c[0].unpack(\"C*\")[0]].pack(\"C*\")\n                if /[a-z]/ =~ dec\n                    dec\n                else\n                    c\n                end\n            end\n        end\n    res.join\nend\n```\n\n## 09. Typoglycemia\n\u30b9\u30da\u30fc\u30b9\u3067\u533a\u5207\u3089\u308c\u305f\u5358\u8a9e\u5217\u306b\u5bfe\u3057\u3066\uff0c\u5404\u5358\u8a9e\u306e\u5148\u982d\u3068\u672b\u5c3e\u306e\u6587\u5b57\u306f\u6b8b\u3057\uff0c\u305d\u308c\u4ee5\u5916\u306e\u6587\u5b57\u306e\u9806\u5e8f\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e26\u3073\u66ff\u3048\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u6210\u305b\u3088\uff0e\u305f\u3060\u3057\uff0c\u9577\u3055\u304c\uff14\u4ee5\u4e0b\u306e\u5358\u8a9e\u306f\u4e26\u3073\u66ff\u3048\u306a\u3044\u3053\u3068\u3068\u3059\u308b\uff0e\u9069\u5f53\u306a\u82f1\u8a9e\u306e\u6587\uff08\u4f8b\u3048\u3070\"I couldn't believe that I could actually understand what I was reading : the phenomenal power of the human mind .\"\uff09\u3092\u4e0e\u3048\uff0c\u305d\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u305b\u3088\uff0e\n\n```scala\ndef typoglycemia(str:String) = {\n    str.split(\" \").map { w => \n        if (w.length <= 4) w\n        else w.head + Random.shuffle(w.substring(1, w.length - 1).toSeq).mkString + w.last\n    }.mkString(\" \")    \n}\n```\n\n[\u7b2c\uff13\u7ae0\uff1a\u6b63\u898f\u8868\u73fe](http://qiita.com/modal_soul/items/a8cbbdbf48307b975aa5) \u306b\u3064\u3065\u304f\u3002\n"}