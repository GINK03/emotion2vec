{"context": "\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\nmacOS \u306e\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u8003\u3048\u305f\u6642\u306e\u77e5\u898b\u3092\u516c\u958b\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\n\u7d50\u8ad6\niOS and OS X Development: Cocoa Popup window in the Status bar \u3092\u53c2\u8003\u306b\uff0c\u6240\u3005\u4fee\u6b63\u3092\u52a0\u3048\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\uff0e\n\n\u6700\u7d42\u7684\u306a\u6210\u679c\u7269\u306f\u53c2\u8003\u30b5\u30a4\u30c8\u5148\u306e\u3082\u306e\u3068\u540c\u69d8\u3067\uff0c\u53c2\u8003\u30b5\u30a4\u30c8\u5148\u306e\u30b3\u30fc\u30c9\u306f\u73fe\u5728\u3082\u52d5\u304f\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\u305d\u308c\u3092 Swift \u3067\u518d\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\u307e\u305f\uff0cdeprecated \u306aAPI\u306e\u4f7f\u7528\u3092\u63a7\u3048\u307e\u3057\u305f\uff0e\n\n\u76ee\u6307\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\uff0eDropbox \u306e\u3088\u3046\u306b\uff0c\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30d1\u30cd\u30eb\u304c\u30dd\u30c3\u30d7\u3059\u308b\u3082\u306e\u3092\u8003\u3048\u3066\u3044\u307e\u3059\uff0e\n\n\u5b9f\u88c5\u306e\u4ed5\u65b9\u306e\u8a71\u306b\u5165\u308b\u524d\u306b\uff0c\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u3057\u3066\u306f\u516c\u5f0f\u304b\u3089\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3059\uff0e\n\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u8868\u793a/\u975e\u8868\u793a\u306f\u30b7\u30b9\u30c6\u30e0\u8a2d\u5b9a\u3067\u5207\u308a\u66ff\u3048\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\uff0c\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u308b\u4fdd\u8a3c\u306f\u306a\u3044\uff0e\u305d\u306e\u305f\u3081\uff0c\u30a2\u30a4\u30b3\u30f3\u306b\u4f9d\u5b58\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3088\u308d\u3057\u304f\u306a\u3044\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u306f\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3055\u305b\u308b\u3079\u304d\u3067\u3042\u308a\uff0c popover \u3092\u4f5c\u6210\u3059\u3079\u304d\u3067\u306a\u3044(macOS Human Interface Guidelines: Content Views)\n\nmacOS Human Interface Guidelines: Menu Bar Menus\n\n\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306b\u3088\u308c\u3070\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089popover\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306f\u597d\u307e\u3057\u304f\u306a\u3044 \u3088\u3046\u3067\u3059\uff0e\u3057\u304b\u3057\uff0c\u4eca\u56de\u306f\u500b\u4eba\u7684\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u8b66\u544a\u306f\u7121\u8996\u3057\u3066\u8a71\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\u5b9f\u73fe\u306e\u305f\u3081\u306b\u3069\u3046\u3059\u308b\u304b\n\nNSPopover \u306b\u3088\u308b\u5b9f\u88c5\nmacOS \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3067\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u914d\u7f6e\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u306f\uff0cNSPopover \u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306e\u3088\u3046\u3067\u3059\uff0e\u3068\u3066\u3082\u89aa\u5207\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u3064\u3051\u305f\u306e\u3067\uff0c\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u554f\u984c\u306a\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\nOS X Tutorial: Menus and Popovers in Menu Bar Apps\n\n\nNSPopover \u306e\u554f\u984c\u70b9\n\u4e0a\u8a18\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u5341\u5206\u3067\u306f\u306a\u3044\u304b\u3068\u3082\u601d\u308f\u308c\u308b\u306e\u3067\u3059\u304c\uff0cNSPopover \u3092\u4f7f\u7528\u3059\u308b\u3068\uff0c\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u30e6\u30fc\u30b6\u306e\u74b0\u5883\u306b\u4f9d\u5b58\u3057\u3066\u5909\u5316\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\uff0e\nmacOS \u3067\u306f\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u5b9a\u3067 Dark \u30e2\u30fc\u30c9\u306b\u3057\u3066\u3044\u308b\u3068\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304c\u9ed2\u304f\u306a\u308a\u307e\u3059\uff0e\u3053\u306e\u6642\uff0cNSPopover \u3067\u8868\u793a\u3055\u308c\u308b popover \u3082\u540c\u6642\u306b\u9ed2\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\nStackoverflow \u306b\u3082\u8cea\u554f\u304c\u98db\u3093\u3067\u3044\u307e\u3057\u305f\u304c(cocoa - How to change NSPopover background color include triangle part? - Stack Overflow)\uff0cpopover \u306e\u80cc\u666f\u8272\u3092\u72ec\u7acb\u3057\u3066\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\u767d\u3068\u9ed2\u3067\u306f\u660e\u5ea6\u304c\u771f\u9006\u3067\u3042\u308b\u305f\u3081\uff0c\u30dc\u30bf\u30f3\u3092\u753b\u50cf\u3068\u3057\u3066\u7528\u610f\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u5404\u3005\u306b\u9069\u3057\u305f2\u7a2e\u985e\u306e\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u304b\uff0c\u3069\u3061\u3089\u306e\u80cc\u666f\u8272\u306b\u3082\u9069\u3057\u305f\u8272\u8abf\u306e\u753b\u50cf\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u3068\u540c\u69d8\u306e\u4e8b\u8c61\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3067\u3082\u4e00\u5fdc\u89e6\u308c\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\nUse a template image to represent a menu bar extra. In General system preferences, users can change the menu bar (and Dock) to a dark appearance. If you don\u2019t use a template image to represent your menu bar extras, they might not look good in both menu bar appearances.\nmacOS Human Interface Guidelines: Menu Bar Menus\n\n\u3053\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\uff0c\u81ea\u5206\u306e\u601d\u3044\u3064\u304f\u89e3\u6c7a\u7b56\u306f\u4ee5\u4e0b\u306e2\u3064\u3067\u3059\uff0e\n\nDark mode \u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u5224\u5b9a\u3057\uff0c\u9069\u3057\u305fUI\u90e8\u54c1\u3092\u914d\u7f6e\u3059\u308b\nNSPopover \u4ee5\u5916\u306e\u65b9\u6cd5\u3092\u8003\u3048\u308b\n\n\u30e6\u30fc\u30b6\u74b0\u5883\u306b\u4f9d\u5b58\u305b\u305aUI\u3092\u7d71\u4e00\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u4eca\u56de\u306f 2 \u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u3044\u304d\u307e\u3059\uff0e\n\nNSBezierPath \u306b\u3088\u308b\u5b9f\u88c5\nNSBezierPath \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3068\uff0c\u76f4\u7dda\u3068\u66f2\u7dda\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u56f3\u5f62\u3092\u4f5c\u6210\u3057\uff0c\u5185\u90e8\u3092\u5857\u308a\u3064\u3076\u3059\u3068\u3044\u3063\u305f\u64cd\u4f5c\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092\u5229\u7528\u3057\u3066\uff0cNSPopover \u3092\u6a21\u3057\u305f NSWindow \u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\uff0e\u5b9f\u969b\u306b\u3053\u308c\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u65b9\u304c\u304a\u308a\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\niOS and OS X Development: Cocoa Popup window in the Status bar\n\n\u3057\u304b\u3057\uff0c\u4e0a\u8a18\u30b5\u30a4\u30c8\u304b\u3089\u8fbf\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u30bd\u30fc\u30b9\u306f Objective-C \u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u4e0a\u306b\uff0cdrawStatusBarBackgroundInRect:withHighlight:\u7b49\uff0cDeprecated \u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3061\u3089\u307b\u3089\u898b\u304b\u3051\u3089\u308c\u307e\u3059\uff0e\u305d\u3053\u3067\uff0c\u4eca\u56de\u306f\u4e0a\u8a18\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092 Swift \u3067\u8a18\u8ff0\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u5b9f\u88c5\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u914d\u7f6e\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u306f\uff0cNSStatusItem \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u53c2\u8003\u30b5\u30a4\u30c8\u3067\u306f\uff0cNSStatusItem \u3092\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u914d\u7f6e\u3059\u308b\u5f79\u5272\u3092 MenubarController \u306b\u8ab2\u3057\uff0c\u8868\u793a\u5185\u5bb9\u306e\u8a73\u7d30\u3092 StatusItemView \u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u30a2\u30a4\u30c6\u30e0\u62bc\u4e0b\u6642\u306b\u30dd\u30c3\u30d7\u3059\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u30d1\u30cd\u30eb\u3068\u547c\u79f0\u3057\uff0c\u305d\u306e\u63cf\u753b\u306f PanelController \u306b\u4efb\u305b\u3066\u3044\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u305d\u308c\u30892\u3064(\u30a2\u30a4\u30c6\u30e0\u3068\u30d1\u30cd\u30eb)\u5404\u3005\u306e\u52d5\u4f5c\u3092\uff0cApplicationDelegate \u3067\u7d50\u3073\u3064\u3051\u3066\u3044\u307e\u3059\uff0e\u4eca\u56de\u306e\u5b9f\u88c5\u3082\uff0c\u57fa\u672c\u7684\u306b\u3053\u306e\u65b9\u91dd\u306b\u6cbf\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\u4e8b\u524d\u6e96\u5099\nXcode \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\uff0c\u753b\u50cf\u306e\u6e96\u5099\uff0c\u30a2\u30a4\u30b3\u30f3\u3092\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u753b\u50cf\u306b\u5bfe\u3059\u308b\u8a2d\u5b9a\uff0cplist\u306e\u8a2d\u5b9a\u7b49\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u306e\u305f\u3081\u306b\u306f\u8272\u3005\u306a\u8a2d\u5b9a\u304c\u5fc5\u8981\u3068\u306a\u308b\u3088\u3046\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\u5272\u611b\u3057\u307e\u3059\uff0e\u8a73\u3057\u304f\u306f\uff0c\u65e2\u306b\u7d39\u4ecb\u3057\u305f\u4ee5\u4e0b\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\nOS X Tutorial: Menus and Popovers in Menu Bar Apps\n\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u306e\u8868\u793a\n\u307e\u305a\u306f\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9(NSStatusItem - AppKit | Apple Developer Documentation)\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\n\nNSStatusItem \u306f\u751f\u6210\u6642\u306b\u81ea\u52d5\u7684\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u308b\n\u63cf\u753b\u3084\u632f\u308b\u821e\u3044\u306f button \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u7528\u3057\u3066\u884c\u3046\n\n\u53c2\u8003\u30b5\u30a4\u30c8\u3067\u306f\uff0c\u30a2\u30a4\u30c6\u30e0\u306e\u63cf\u753b\u306e\u305f\u3081\u306b NSView \u3092\u5b9f\u88c5\u3057\uff0c\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u753b\u50cf\u7b49\u3092\u6301\u305f\u305b\uff0c\u63cf\u753b\u306e\u969b\u306b\u306f NSView \u306b NSImage \u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u3044\u3063\u305f\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\u3053\u308c\u3089\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\uff0c\u5358\u7d14\u306a button \u30d7\u30ed\u30d1\u30c6\u30a3\u3078\u306e\u4ee3\u5165\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\uff0eview \u306e\u751f\u6210\uff0c\u4fdd\u6301\u3068\u5b9f\u969b\u306e\u63cf\u753b\u3092\u5206\u3051\u308b\u305f\u3081\u306b\uff0cController \u3068 View \u306b\u5206\u5272\u3057\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\nclass MenubarController: NSObject {\n    let view: StatusItemView\n\n    override init() {\n        self.view = StatusItemView()\n    }\n}\n\nclass StatusItemView: NSObject {\n    let WIDTH: CGFloat = 24.4\n    let statusItem: NSStatusItem\n\n    override init() {\n        self.statusItem = NSStatusBar.system().statusItem(withLength: WIDTH)\n\n        if let button = statusItem.button {\n            // \u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u6642\uff0cAppDelegate \u306e togglePopover \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n            button.action = #selector(AppDelegate.togglePopover)\n            button.image = NSImage(named: \"StatusBarButtonImage\")\n        }\n    }\n}\n\n\n\u30dd\u30c3\u30d7\u3059\u308b\u30d1\u30cd\u30eb\u306e\u8868\u793a\n\u307e\u305a\uff0c\u30d1\u30cd\u30eb\u306eUI\u306e\u57fa\u790e\u90e8\u5206\u3068\u306a\u308b .xib \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\uff0c\u80cc\u666f\u3068\u306a\u308b background view \u3068\uff0cUI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3059\u308b base view \u306e2\u679a\u3092\u91cd\u306d\u305f xib \u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\u5f8c\u306b\uff0cbackground view \u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u305f NSWindow \u3092\u751f\u6210\u3057\uff0c\u305d\u3053\u306b\u3053\u308c\u3089\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u3067\u30d1\u30cd\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\nbackground view \u306f\u80cc\u666f\uff0c\u3059\u306a\u308f\u3061 NSPopover \u306e\u3088\u3046\u306a\u898b\u305f\u76ee\u3092\u5f62\u4f5c\u308b\u305f\u3081\u306b\u5229\u7528\u3057\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0cNSView \u3067\u306f\u306a\u304f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a PanelBackground \u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\u3053\u306ePanelBackground\u306e\u51e6\u7406\u5185\u5bb9\u306f\uff0c\u53c2\u8003\u30b5\u30a4\u30c8\u5148\u306e\u30b3\u30fc\u30c9\u3092\u307b\u307c\u305d\u306e\u307e\u307e Swift \u306b\u66f8\u304d\u76f4\u3057\u305f\u3082\u306e\u3067\u3059\uff0e\nclass PanelBackground: NSView {\n    // \u5404\u7a2e\u5b9a\u6570\n    let LINE_THICKNESS: CGFloat = 1.0\n    let CORNER_RADIUS:  CGFloat = 6.0\n    let ARROW_WIDTH:    CGFloat = 10.0\n    let ARROW_HEIGHT:   CGFloat = 10.0\n    let FILL_OPACITY:   CGFloat = 0.9\n    let STROKE_OPACITY: CGFloat = 0.0\n\n    // \u30d1\u30cd\u30eb\u306e\u4e09\u89d2\u5f62\u90e8\u5206\u306e\u4f4d\u7f6e\n    var arrowX_: CGFloat = 10.0\n\n    func setArrowX(value: CGFloat) {\n        arrowX_ = value\n        // \u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\uff0c\u518d\u63cf\u753b\u306e\u305f\u3081\u306b `draw` \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n        self.needsDisplay = true\n    }\n\n    /*\n      \u4e0b\u8a18\u306e\u3088\u3046\u306a\u9806\u756a\u3067\u76f4\u7dda\u3092\u63cf\u753b\u3057\u3066\u3044\u304f\n      \u2467  \u2468  \u2460  \u2461\n       \u250f\u2501\u2501^-\u2501\u2513\n     \u2466 \u2503     \u2503\u2462\n       \u2517\u2501\u2501\u2501\u2501\u2501\u251b\n      \u2465   \u2464   \u2463\n     */\n    override func draw(_ dirtyRect: NSRect) {\n        let contentRect = NSInsetRect(self.bounds, LINE_THICKNESS, LINE_THICKNESS)\n\n        // \u30d1\u30b9\u306e\u521d\u671f\u5316\n        let path = NSBezierPath()\n\n        // \u2460\n        path.move(to: NSMakePoint(arrowX_, contentRect.maxY))\n        path.line(to: NSMakePoint(arrowX_ + ARROW_WIDTH / 2,\n                                  contentRect.maxY - ARROW_HEIGHT))\n        path.line(to: NSMakePoint(contentRect.maxX - CORNER_RADIUS,\n                                  contentRect.maxY - ARROW_HEIGHT))\n\n        // \u2461\n        let topRightCorner = NSMakePoint(contentRect.maxX,\n                                         contentRect.maxY - ARROW_HEIGHT)\n        path.curve(to: NSMakePoint(contentRect.maxX,\n                                   contentRect.maxY - ARROW_HEIGHT - CORNER_RADIUS),\n                   controlPoint1: topRightCorner,\n                   controlPoint2: topRightCorner)\n\n        // \u2462\n        path.line(to: NSMakePoint(contentRect.maxX,\n                                  contentRect.minY + CORNER_RADIUS))\n\n        // \u2463\n        let bottomRightCorner = NSMakePoint(contentRect.maxX,\n                                            contentRect.minY)\n        path.curve(to: NSMakePoint(contentRect.maxX - CORNER_RADIUS,\n                                   contentRect.minY),\n                   controlPoint1: bottomRightCorner,\n                   controlPoint2: bottomRightCorner)\n\n        // \u2464\n        path.line(to: NSMakePoint(contentRect.minX + CORNER_RADIUS,\n                                  contentRect.minY))\n\n        // \u2465\n        path.curve(to: NSMakePoint(contentRect.minX,\n                                   contentRect.minY + CORNER_RADIUS),\n                   controlPoint1: contentRect.origin,\n                   controlPoint2: contentRect.origin)\n\n        // \u2466\n        path.line(to: NSMakePoint(contentRect.minX,\n                                  contentRect.maxY - ARROW_HEIGHT - CORNER_RADIUS))\n\n        // \u2467\n        let topLeftCorner = NSMakePoint(contentRect.minX,\n                                        contentRect.maxY - ARROW_HEIGHT)\n        path.curve(to: NSMakePoint(contentRect.minX + CORNER_RADIUS,\n                                   contentRect.maxY - ARROW_HEIGHT),\n                   controlPoint1: topLeftCorner,\n                   controlPoint2: topLeftCorner)\n\n        // \u2468\n        path.line(to: NSMakePoint(arrowX_ - ARROW_WIDTH / 2,\n                                  contentRect.maxY - ARROW_HEIGHT))\n\n        path.close()\n\n        // \u30d1\u30b9\u5185\u306e\u5857\u308a\u3064\u3076\u3057\n        NSColor(deviceWhite: 1, alpha: FILL_OPACITY).setFill()\n        path.fill()\n\n        NSGraphicsContext.saveGraphicsState()\n\n        let clip = NSBezierPath(rect: self.bounds)\n        clip.append(path)\n        clip.addClip()\n\n        path.lineWidth = LINE_THICKNESS * 2\n        NSColor.black.setStroke()\n        path.stroke()\n\n        NSGraphicsContext.restoreGraphicsState()\n    }\n}\n\n\u7528\u610f\u3057\u305f .xib \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3059\u308b PanelBase \u30d3\u30e5\u30fc\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\nclass PanelBase: NSView {\n    @IBOutlet var backgroundView: PanelBackground!\n    @IBOutlet var baseView: NSView!\n\n    convenience init() {\n        // \u9069\u5f53\u306a\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067\u521d\u671f\u5316\u3059\u308b\n        self.init(frame: CGRect(x: 0, y: 0, width: 0, height: 0))\n\n        // `PanelBase.xib` \u3092\u30ed\u30fc\u30c9\n        Bundle.main.loadNibNamed(\"PanelBase\", owner: self, topLevelObjects: nil)\n        // \u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3092 background view \u306b\u5408\u308f\u305b\u308b\n        self.frame = self.backgroundView.frame\n        // \u5404\u30d3\u30e5\u30fc\u3092\u8cbc\u308a\u4ed8\u3051\u308b\n        addSubview(self.backgroundView)\n        addSubview(self.baseView)\n    }\n}\n\n\u30d3\u30e5\u30fc\u3092\u547c\u3073\u51fa\u3059\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\nclass PanelBaseController: NSViewController {\n    override func loadView() {\n        self.view = PanelBase()\n    }\n}\n\n\u3053\u308c\u3067\uff0cPanelBaseController \u3092\u547c\u3073\u51fa\u305b\u3070\uff0cNSPopover \u30e9\u30a4\u30af\u306aUI\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306f\u305a\u3067\u3059\uff0e\n\n\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u51e6\u7406\n\u5b9f\u969b\u306b\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u308b\u51e6\u7406\u90e8\u5206\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u540c\u6642\u306b\uff0c\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u305f\u3081\u306e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\n\u3053\u3053\u3067\uff0c\u30d1\u30cd\u30eb\u306f\u30a2\u30a4\u30b3\u30f3\u306e\u76f4\u4e0b\u306b\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\uff0cPanelController \u306f\u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u3092\u77e5\u308a\u307e\u305b\u3093\uff0e\u305d\u306e\u305f\u3081\uff0cMenubarController\u304b\u3089\u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e(NSRect)\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u306f\u5916\u90e8\u306e\u30af\u30e9\u30b9(\u5f8c\u8ff0)\u306b\u5b9f\u88c5\u3057\uff0cDelegate \u30d1\u30bf\u30fc\u30f3\u3067\u51e6\u7406\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e\u3053\u306e\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306aPanelControllerDelegate\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\nprotocol PanelControllerDelegate {\n    func statusItemViewRectForPanelController() -> NSRect\n}\n\nclass PanelController: NSWindowController, NSWindowDelegate {\n    var delegate: PanelControllerDelegate?\n    ...\n\n\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3059\u308bPanelController\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u3053\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u521d\u671f\u5316\u51e6\u7406\u3067\u306f\uff0c\u4e0a\u8a18\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d7\u3051\u53d6\u308a&\u683c\u7d0d\u3068\uff0c\u30d1\u30cd\u30eb\u7528\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u751f\u6210\u3068\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0ebackgroundColor\u3092clear\uff0c\u304b\u3064hasShadow\u3092false\u306b\u3059\u308b\u3068\uff0c\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u80cc\u666f\u3092\u900f\u660e\u5316\u3067\u304d\u307e\u3059\uff0e\u3055\u3089\u306b\uff0cstyleMask\u3092borderless\u306b\u3059\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bf\u30a4\u30c8\u30eb\u30d0\u30fc\u3092\u975e\u8868\u793a\u306b\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\u30d1\u30cd\u30eb\u306e\u898b\u305f\u76ee\u304cNSPopover\u306b\u8fd1\u304f\u306a\u308a\u307e\u3059\uff0e\nconvenience init(delegate: PanelControllerDelegate?) {\n    let panel = NSWindow(contentViewController: PanelBaseController())\n    self.init(window: panel)\n\n    panel.hasShadow = false\n    panel.styleMask = [.borderless]\n    panel.acceptsMouseMovedEvents = true\n    panel.isOpaque = false\n    panel.backgroundColor = .clear\n\n    self.delegate = delegate\n    self.baseView = panel.contentView as? PanelBase\n}\n\n\u6b21\u306b\uff0c\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u306e\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u8868\u793a\u306e\u969b\uff0c\u30d1\u30cd\u30eb\u304c\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u98db\u3073\u51fa\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\uff0c\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u4f4d\u7f6e\u306e\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\uff0e\u307e\u305f\uff0c\u30b7\u30f3\u30d7\u30eb\u306a\u8868\u793a/\u975e\u8868\u793a\u3067\u306f\u5bc2\u3057\u304b\u3063\u305f\u306e\u3067\uff0c\u7c21\u5358\u306a\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3/\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u307e\u3057\u305f\uff0e\nfunc openPanel() {\n    let panel = self.window!\n\n    // \u753b\u9762\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\n    let screenRect = NSScreen.screens()!.first!.frame\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\n    let statusRect = self.delegate!.statusItemViewRectForPanelController()\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u3066\uff0c\u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\u306e\u521d\u671f\u5316\n    var panelRect = self.window!.frame\n    panelRect.origin.x = statusRect.minX\n    panelRect.origin.y = statusRect.midY - panelRect.height\n\n    if panelRect.maxX > screenRect.maxX {\n        // \u30d1\u30cd\u30eb\u304c\u753b\u9762\u5916\u306b\u98db\u3073\u51fa\u3059\u6642\u306f\uff0c\u30d1\u30cd\u30eb\u3068\u30d1\u30cd\u30eb\u4e0a\u306e\u4e09\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b\n        self.baseView?.backgroundView.setArrowX(value: ARROW_X + (panelRect.maxX - screenRect.maxX + RIGHT_MARGIN))\n        panelRect.origin.x = screenRect.maxX - panelRect.width - RIGHT_MARGIN\n    } else {\n        self.baseView?.backgroundView.setArrowX(value: ARROW_X)\n    }\n\n    // \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n    panel.setFrame(panelRect, display: true, animate: true)\n\n    // \u8868\u793a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n    // alpha \u3092 0 \u306b\u8a2d\u5b9a\u3057\uff0c1 \u307e\u3067\u5909\u5316\u3055\u305b\u308b\n    self.window?.alphaValue = 0\n    self.window?.makeKeyAndOrderFront(nil)\n    NSAnimationContext.runAnimationGroup({ (context) -> Void in\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u901f\u3055: 0.3 sec\n        context.duration = 0.3\n        self.window?.animator().alphaValue = 1\n        }, completionHandler: nil\n    )\n    // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u5408\u308f\u305b\u308b\n    NSApp.activate(ignoringOtherApps: true)\n}\n\nfunc closePanel() {\n    // \u975e\u8868\u793a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n    // alpha \u3092 1 \u304b\u3089 0 \u306b\u3059\u308b\n    NSAnimationContext.runAnimationGroup({ (context) -> Void in\n        context.duration = 0.3\n        self.window?.animator().alphaValue = 0\n        }, completionHandler: {\n            // \u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u975e\u8868\u793a\u306b\u3059\u308b\n            self.window?.orderOut(self)\n        }\n    )\n}\n\n\n\u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u3068\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u51e6\u7406\u306e\u9023\u643a\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u62bc\u4e0b\u3055\u308c\u305f\u6642\u306b\u30d1\u30cd\u30eb\u304c\u30dd\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u9023\u643a\u51e6\u7406\u306f AppDelegate \u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\u307e\u305f\uff0cPanelController \u5185\u3067\u4f7f\u7528\u3059\u308b delegate \u7528\u30e1\u30bd\u30c3\u30c9\u3082\u3053\u3053\u3067\u5b9f\u88c5\u3057\uff0cAppDelegate\u81ea\u8eab\u3092PanelController\u306b\u6e21\u3057\u307e\u3059\uff0e\u3053\u306e delegate \u306f\uff0c\u53c2\u8003\u30b5\u30a4\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u624b\u6cd5\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u307e\u3057\u305f\uff0e\n@NSApplicationMain\nclass AppDelegate: NSObject, NSApplicationDelegate, PanelControllerDelegate {\n\n    @IBOutlet weak var window: NSWindow!\n    var menubarController: MenubarController!\n    var panelController: PanelController!\n\n    func applicationDidFinishLaunching(_ Notification: Notification) {\n        self.menubarController = MenubarController()\n        // AppDelegate \u81ea\u8eab\u3092\u308f\u305f\u3059\n        self.panelController = PanelController(delegate: self)\n    }\n\n    // \u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\n    func togglePopover() {\n        // self.panelController.window = \u30d1\u30cd\u30eb \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u304b\u5426\u304b\n        if self.panelController.window!.isVisible {\n            self.panelController.closePanel()\n        } else {\n            self.panelController.openPanel()\n        }\n    }\n\n    // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5931\u308f\u308c\u305f\u3089\uff0c\u30d1\u30cd\u30eb\u3092\u9589\u3058\u308b\n    func applicationDidResignActive(_ notification: Notification) {\n        self.panelController.closePanel()\n    }\n\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u63cf\u753b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\n    // panelController \u5185\u3067\u4f7f\u7528\u3059\u308b\n    func statusItemViewRectForPanelController() -> NSRect {\n        return self.menubarController.view.getRect()\n    }\n}\n\n\u5fc5\u8981\u306a\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\uff0e\n\n\u307e\u3068\u3081\n\u6700\u7d42\u7684\u306b\u306f\u5192\u982d\u3067\u793a\u3057\u305f\u901a\u308a\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\uff0e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u51e6\u7406\u63cf\u304d\u904e\u304e\u3066\u3044\u305f\u308a\uff0c\u30a2\u30af\u30bb\u30b9\u4fee\u98fe\u5b50\u304c\u306a\u304b\u3063\u305f\u308a\u304a\u7c97\u672b\u3067\u3059\u304c\uff0c\u30d9\u30fc\u30b9\u3068\u3057\u3066\u306f\u3068\u308a\u3042\u3048\u305a\u826f\u3044\u304b\u306a\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\uff0e\n\ntasuwo/Popover: Custom popover window appearing from the icon in the macOS status bar\n\n# \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\n\nmacOS \u306e\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u3088\u3046\u3068\u8003\u3048\u305f\u6642\u306e\u77e5\u898b\u3092\u516c\u958b\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\n\n## \u7d50\u8ad6\n\n[iOS and OS X Development: Cocoa Popup window in the Status bar](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html) \u3092\u53c2\u8003\u306b\uff0c\u6240\u3005\u4fee\u6b63\u3092\u52a0\u3048\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3092\u4f5c\u308a\u307e\u3057\u305f\uff0e\n\n![screenshot.gif](https://qiita-image-store.s3.amazonaws.com/0/64850/7d3c3329-08db-dc7a-7a2e-950ebaef6820.gif)\n\n\u6700\u7d42\u7684\u306a\u6210\u679c\u7269\u306f\u53c2\u8003\u30b5\u30a4\u30c8\u5148\u306e\u3082\u306e\u3068\u540c\u69d8\u3067\uff0c\u53c2\u8003\u30b5\u30a4\u30c8\u5148\u306e\u30b3\u30fc\u30c9\u306f\u73fe\u5728\u3082\u52d5\u304f\u306e\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\u305d\u308c\u3092 Swift \u3067\u518d\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\u307e\u305f\uff0cdeprecated \u306aAPI\u306e\u4f7f\u7528\u3092\u63a7\u3048\u307e\u3057\u305f\uff0e\n\n## \u76ee\u6307\u3059\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3059\uff0eDropbox \u306e\u3088\u3046\u306b\uff0c\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30d1\u30cd\u30eb\u304c\u30dd\u30c3\u30d7\u3059\u308b\u3082\u306e\u3092\u8003\u3048\u3066\u3044\u307e\u3059\uff0e\n\n![dropbox.png](https://qiita-image-store.s3.amazonaws.com/0/64850/a62e9636-b00d-bfb2-5f45-f654d1f46c71.png)\n\n\u5b9f\u88c5\u306e\u4ed5\u65b9\u306e\u8a71\u306b\u5165\u308b\u524d\u306b\uff0c\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\uff0e\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u95a2\u3057\u3066\u306f\u516c\u5f0f\u304b\u3089\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u304c\u51fa\u3066\u3044\u307e\u3059\uff0e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306b\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3059\uff0e\n\n> - \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306e\u8868\u793a/\u975e\u8868\u793a\u306f\u30b7\u30b9\u30c6\u30e0\u8a2d\u5b9a\u3067\u5207\u308a\u66ff\u3048\u53ef\u80fd\u3067\u3042\u308b\u305f\u3081\uff0c\u30a2\u30a4\u30b3\u30f3\u304c\u8868\u793a\u3055\u308c\u308b\u4fdd\u8a3c\u306f\u306a\u3044\uff0e\u305d\u306e\u305f\u3081\uff0c\u30a2\u30a4\u30b3\u30f3\u306b\u4f9d\u5b58\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3088\u308d\u3057\u304f\u306a\u3044\n> - \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u30a2\u30a4\u30b3\u30f3\u304b\u3089\u306f\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3055\u305b\u308b\u3079\u304d\u3067\u3042\u308a\uff0c popover \u3092\u4f5c\u6210\u3059\u3079\u304d\u3067\u306a\u3044([macOS Human Interface Guidelines: Content Views](https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/ControlsView.html#//apple_ref/doc/uid/20000957-CH52-SW2))\n\n> [macOS Human Interface Guidelines: Menu Bar Menus](https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/MenuBarMenus.html#//apple_ref/doc/uid/20000957-CH29-SW12)\n\n\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u306b\u3088\u308c\u3070\uff0c**\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304b\u3089popover\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306f\u597d\u307e\u3057\u304f\u306a\u3044** \u3088\u3046\u3067\u3059\uff0e\u3057\u304b\u3057\uff0c\u4eca\u56de\u306f\u500b\u4eba\u7684\u306b\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3092\u76ee\u7684\u3068\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u8b66\u544a\u306f\u7121\u8996\u3057\u3066\u8a71\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\n## \u5b9f\u73fe\u306e\u305f\u3081\u306b\u3069\u3046\u3059\u308b\u304b\n### NSPopover \u306b\u3088\u308b\u5b9f\u88c5\n\nmacOS \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3067\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u914d\u7f6e\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u306f\uff0c[`NSPopover`](https://developer.apple.com/reference/appkit/nspopover) \u3092\u4f7f\u7528\u3059\u308b\u306e\u304c\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306e\u3088\u3046\u3067\u3059\uff0e\u3068\u3066\u3082\u89aa\u5207\u306a\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3092\u898b\u3064\u3051\u305f\u306e\u3067\uff0c\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3059\u308c\u3070\u554f\u984c\u306a\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n> [OS X Tutorial: Menus and Popovers in Menu Bar Apps](https://www.raywenderlich.com/98178/os-x-tutorial-menus-popovers-menu-bar-apps)\n\n### NSPopover \u306e\u554f\u984c\u70b9\n\n\u4e0a\u8a18\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u5341\u5206\u3067\u306f\u306a\u3044\u304b\u3068\u3082\u601d\u308f\u308c\u308b\u306e\u3067\u3059\u304c\uff0cNSPopover \u3092\u4f7f\u7528\u3059\u308b\u3068\uff0c\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u304c\u30e6\u30fc\u30b6\u306e\u74b0\u5883\u306b\u4f9d\u5b58\u3057\u3066\u5909\u5316\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\uff0e\nmacOS \u3067\u306f\u30b7\u30b9\u30c6\u30e0\u306e\u8a2d\u5b9a\u3067 Dark \u30e2\u30fc\u30c9\u306b\u3057\u3066\u3044\u308b\u3068\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u304c\u9ed2\u304f\u306a\u308a\u307e\u3059\uff0e\u3053\u306e\u6642\uff0cNSPopover \u3067\u8868\u793a\u3055\u308c\u308b popover \u3082\u540c\u6642\u306b\u9ed2\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\nStackoverflow \u306b\u3082\u8cea\u554f\u304c\u98db\u3093\u3067\u3044\u307e\u3057\u305f\u304c([cocoa - How to change NSPopover background color include triangle part? - Stack Overflow](http://stackoverflow.com/questions/19978620/how-to-change-nspopover-background-color-include-triangle-part))\uff0cpopover \u306e\u80cc\u666f\u8272\u3092\u72ec\u7acb\u3057\u3066\u5909\u66f4\u3059\u308b\u65b9\u6cd5\u306f\u306a\u3044\u3088\u3046\u3067\u3059\uff0e\n\n\u767d\u3068\u9ed2\u3067\u306f\u660e\u5ea6\u304c\u771f\u9006\u3067\u3042\u308b\u305f\u3081\uff0c\u30dc\u30bf\u30f3\u3092\u753b\u50cf\u3068\u3057\u3066\u7528\u610f\u3057\u305f\u5834\u5408\u306b\u306f\uff0c\u5404\u3005\u306b\u9069\u3057\u305f2\u7a2e\u985e\u306e\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u304b\uff0c\u3069\u3061\u3089\u306e\u80cc\u666f\u8272\u306b\u3082\u9069\u3057\u305f\u8272\u8abf\u306e\u753b\u50cf\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u308c\u3068\u540c\u69d8\u306e\u4e8b\u8c61\u306b\u3064\u3044\u3066\u306f\u516c\u5f0f\u306e\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3067\u3082\u4e00\u5fdc\u89e6\u308c\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\n> Use a template image to represent a menu bar extra. In General system preferences, users can change the menu bar (and Dock) to a dark appearance. If you don\u2019t use a template image to represent your menu bar extras, they might not look good in both menu bar appearances.\n> [macOS Human Interface Guidelines: Menu Bar Menus](https://developer.apple.com/library/content/documentation/UserExperience/Conceptual/OSXHIGuidelines/MenuBarMenus.html#//apple_ref/doc/uid/20000957-CH29-SW12)\n\n\u3053\u306e\u554f\u984c\u306b\u5bfe\u3057\u3066\uff0c\u81ea\u5206\u306e\u601d\u3044\u3064\u304f\u89e3\u6c7a\u7b56\u306f\u4ee5\u4e0b\u306e2\u3064\u3067\u3059\uff0e\n\n1. Dark mode \u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u5224\u5b9a\u3057\uff0c\u9069\u3057\u305fUI\u90e8\u54c1\u3092\u914d\u7f6e\u3059\u308b\n2. NSPopover \u4ee5\u5916\u306e\u65b9\u6cd5\u3092\u8003\u3048\u308b\n\n\u30e6\u30fc\u30b6\u74b0\u5883\u306b\u4f9d\u5b58\u305b\u305aUI\u3092\u7d71\u4e00\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0c\u4eca\u56de\u306f 2 \u306e\u65b9\u6cd5\u3092\u8003\u3048\u3066\u3044\u304d\u307e\u3059\uff0e\n\n### NSBezierPath \u306b\u3088\u308b\u5b9f\u88c5\n\n[`NSBezierPath`](https://developer.apple.com/reference/appkit/nsbezierpath) \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3068\uff0c\u76f4\u7dda\u3068\u66f2\u7dda\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u56f3\u5f62\u3092\u4f5c\u6210\u3057\uff0c\u5185\u90e8\u3092\u5857\u308a\u3064\u3076\u3059\u3068\u3044\u3063\u305f\u64cd\u4f5c\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u3092\u5229\u7528\u3057\u3066\uff0cNSPopover \u3092\u6a21\u3057\u305f NSWindow \u3092\u5b9f\u88c5\u3067\u304d\u307e\u3059\uff0e\u5b9f\u969b\u306b\u3053\u308c\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u65b9\u304c\u304a\u308a\uff0c\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n> [iOS and OS X Development: Cocoa Popup window in the Status bar](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html)\n\n\u3057\u304b\u3057\uff0c\u4e0a\u8a18\u30b5\u30a4\u30c8\u304b\u3089\u8fbf\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u30bd\u30fc\u30b9\u306f Objective-C \u3067\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\u4e0a\u306b\uff0c[drawStatusBarBackgroundInRect:withHighlight:](https://developer.apple.com/reference/appkit/nsstatusitem/1532509-drawstatusbarbackgroundinrect?l_3)\u7b49\uff0cDeprecated \u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3061\u3089\u307b\u3089\u898b\u304b\u3051\u3089\u308c\u307e\u3059\uff0e\u305d\u3053\u3067\uff0c\u4eca\u56de\u306f\u4e0a\u8a18\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\uff0c\u540c\u69d8\u306e\u51e6\u7406\u3092 Swift \u3067\u8a18\u8ff0\u3057\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n## \u5b9f\u88c5\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u914d\u7f6e\u3055\u308c\u308b\u30a2\u30a4\u30c6\u30e0\u306f\uff0c`NSStatusItem` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\uff0e[\u53c2\u8003\u30b5\u30a4\u30c8](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html)\u3067\u306f\uff0c`NSStatusItem` \u3092\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u914d\u7f6e\u3059\u308b\u5f79\u5272\u3092 `MenubarController` \u306b\u8ab2\u3057\uff0c\u8868\u793a\u5185\u5bb9\u306e\u8a73\u7d30\u3092 `StatusItemView` \u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c\u30a2\u30a4\u30c6\u30e0\u62bc\u4e0b\u6642\u306b\u30dd\u30c3\u30d7\u3059\u308b\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u30d1\u30cd\u30eb\u3068\u547c\u79f0\u3057\uff0c\u305d\u306e\u63cf\u753b\u306f `PanelController` \u306b\u4efb\u305b\u3066\u3044\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u305d\u308c\u30892\u3064(\u30a2\u30a4\u30c6\u30e0\u3068\u30d1\u30cd\u30eb)\u5404\u3005\u306e\u52d5\u4f5c\u3092\uff0c`ApplicationDelegate` \u3067\u7d50\u3073\u3064\u3051\u3066\u3044\u307e\u3059\uff0e\u4eca\u56de\u306e\u5b9f\u88c5\u3082\uff0c\u57fa\u672c\u7684\u306b\u3053\u306e\u65b9\u91dd\u306b\u6cbf\u3063\u3066\u3044\u304d\u307e\u3059\uff0e\n\n### \u4e8b\u524d\u6e96\u5099\n\nXcode \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\uff0c\u753b\u50cf\u306e\u6e96\u5099\uff0c\u30a2\u30a4\u30b3\u30f3\u3092\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u753b\u50cf\u306b\u5bfe\u3059\u308b\u8a2d\u5b9a\uff0cplist\u306e\u8a2d\u5b9a\u7b49\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u5e38\u99d0\u578b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\u306e\u305f\u3081\u306b\u306f\u8272\u3005\u306a\u8a2d\u5b9a\u304c\u5fc5\u8981\u3068\u306a\u308b\u3088\u3046\u3067\u3059\u304c\uff0c\u4eca\u56de\u306f\u5272\u611b\u3057\u307e\u3059\uff0e\u8a73\u3057\u304f\u306f\uff0c\u65e2\u306b\u7d39\u4ecb\u3057\u305f\u4ee5\u4e0b\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n> [OS X Tutorial: Menus and Popovers in Menu Bar Apps](https://www.raywenderlich.com/98178/os-x-tutorial-menus-popovers-menu-bar-apps)\n\n### \u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u306e\u8868\u793a\n\n\u307e\u305a\u306f\uff0c\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306b\u30a2\u30a4\u30b3\u30f3\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9([NSStatusItem - AppKit | Apple Developer Documentation](https://developer.apple.com/reference/appkit/nsstatusitem))\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\n- `NSStatusItem` \u306f\u751f\u6210\u6642\u306b\u81ea\u52d5\u7684\u306b\u30b9\u30c6\u30fc\u30bf\u30b9\u30d0\u30fc\u306b\u8ffd\u52a0\u3055\u308c\u308b\n- \u63cf\u753b\u3084\u632f\u308b\u821e\u3044\u306f `button` \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u7528\u3057\u3066\u884c\u3046\n\n[\u53c2\u8003\u30b5\u30a4\u30c8](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html)\u3067\u306f\uff0c\u30a2\u30a4\u30c6\u30e0\u306e\u63cf\u753b\u306e\u305f\u3081\u306b `NSView` \u3092\u5b9f\u88c5\u3057\uff0c\u305d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3068\u3057\u3066\u753b\u50cf\u7b49\u3092\u6301\u305f\u305b\uff0c\u63cf\u753b\u306e\u969b\u306b\u306f `NSView` \u306b `NSImage` \u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u3044\u3063\u305f\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\u3053\u308c\u3089\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306f\uff0c\u5358\u7d14\u306a `button` \u30d7\u30ed\u30d1\u30c6\u30a3\u3078\u306e\u4ee3\u5165\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u307e\u3059\uff0eview \u306e\u751f\u6210\uff0c\u4fdd\u6301\u3068\u5b9f\u969b\u306e\u63cf\u753b\u3092\u5206\u3051\u308b\u305f\u3081\u306b\uff0cController \u3068 View \u306b\u5206\u5272\u3057\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3057\u305f\uff0e\n\n``` swift\nclass MenubarController: NSObject {\n    let view: StatusItemView\n\n    override init() {\n        self.view = StatusItemView()\n    }\n}\n```\n\n``` swift\nclass StatusItemView: NSObject {\n    let WIDTH: CGFloat = 24.4\n    let statusItem: NSStatusItem\n\n    override init() {\n        self.statusItem = NSStatusBar.system().statusItem(withLength: WIDTH)\n\n        if let button = statusItem.button {\n            // \u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u6642\uff0cAppDelegate \u306e togglePopover \u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n            button.action = #selector(AppDelegate.togglePopover)\n            button.image = NSImage(named: \"StatusBarButtonImage\")\n        }\n    }\n}\n```\n\n### \u30dd\u30c3\u30d7\u3059\u308b\u30d1\u30cd\u30eb\u306e\u8868\u793a\n\n\u307e\u305a\uff0c\u30d1\u30cd\u30eb\u306eUI\u306e\u57fa\u790e\u90e8\u5206\u3068\u306a\u308b `.xib` \u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\uff0e\u4eca\u56de\u306f\uff0c\u80cc\u666f\u3068\u306a\u308b `background view` \u3068\uff0cUI\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u914d\u7f6e\u3059\u308b `base view` \u306e2\u679a\u3092\u91cd\u306d\u305f xib \u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\u5f8c\u306b\uff0c`background view` \u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u306b\u5408\u308f\u305b\u305f `NSWindow` \u3092\u751f\u6210\u3057\uff0c\u305d\u3053\u306b\u3053\u308c\u3089\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u3067\u30d1\u30cd\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\uff0e\n\n![view.png](https://qiita-image-store.s3.amazonaws.com/0/64850/a7e1fad5-d281-51c3-fd45-1db7bc6ca84a.png)\n\n`background view` \u306f\u80cc\u666f\uff0c\u3059\u306a\u308f\u3061 `NSPopover` \u306e\u3088\u3046\u306a\u898b\u305f\u76ee\u3092\u5f62\u4f5c\u308b\u305f\u3081\u306b\u5229\u7528\u3057\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0c`NSView` \u3067\u306f\u306a\u304f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a `PanelBackground` \u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\uff0c\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\uff0e\u3053\u306e`PanelBackground`\u306e\u51e6\u7406\u5185\u5bb9\u306f\uff0c[\u53c2\u8003\u30b5\u30a4\u30c8](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html)\u5148\u306e\u30b3\u30fc\u30c9\u3092\u307b\u307c\u305d\u306e\u307e\u307e Swift \u306b\u66f8\u304d\u76f4\u3057\u305f\u3082\u306e\u3067\u3059\uff0e\n\n``` swift\nclass PanelBackground: NSView {\n    // \u5404\u7a2e\u5b9a\u6570\n    let LINE_THICKNESS: CGFloat = 1.0\n    let CORNER_RADIUS:  CGFloat = 6.0\n    let ARROW_WIDTH:    CGFloat = 10.0\n    let ARROW_HEIGHT:   CGFloat = 10.0\n    let FILL_OPACITY:   CGFloat = 0.9\n    let STROKE_OPACITY: CGFloat = 0.0\n\n    // \u30d1\u30cd\u30eb\u306e\u4e09\u89d2\u5f62\u90e8\u5206\u306e\u4f4d\u7f6e\n    var arrowX_: CGFloat = 10.0\n\n    func setArrowX(value: CGFloat) {\n        arrowX_ = value\n        // \u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\uff0c\u518d\u63cf\u753b\u306e\u305f\u3081\u306b `draw` \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u308b\n        self.needsDisplay = true\n    }\n\n    /*\n      \u4e0b\u8a18\u306e\u3088\u3046\u306a\u9806\u756a\u3067\u76f4\u7dda\u3092\u63cf\u753b\u3057\u3066\u3044\u304f\n      \u2467  \u2468  \u2460  \u2461\n       \u250f\u2501\u2501^-\u2501\u2513\n     \u2466 \u2503     \u2503\u2462\n       \u2517\u2501\u2501\u2501\u2501\u2501\u251b\n      \u2465   \u2464   \u2463\n     */\n    override func draw(_ dirtyRect: NSRect) {\n        let contentRect = NSInsetRect(self.bounds, LINE_THICKNESS, LINE_THICKNESS)\n\n        // \u30d1\u30b9\u306e\u521d\u671f\u5316\n        let path = NSBezierPath()\n\n        // \u2460\n        path.move(to: NSMakePoint(arrowX_, contentRect.maxY))\n        path.line(to: NSMakePoint(arrowX_ + ARROW_WIDTH / 2,\n                                  contentRect.maxY - ARROW_HEIGHT))\n        path.line(to: NSMakePoint(contentRect.maxX - CORNER_RADIUS,\n                                  contentRect.maxY - ARROW_HEIGHT))\n\n        // \u2461\n        let topRightCorner = NSMakePoint(contentRect.maxX,\n                                         contentRect.maxY - ARROW_HEIGHT)\n        path.curve(to: NSMakePoint(contentRect.maxX,\n                                   contentRect.maxY - ARROW_HEIGHT - CORNER_RADIUS),\n                   controlPoint1: topRightCorner,\n                   controlPoint2: topRightCorner)\n\n        // \u2462\n        path.line(to: NSMakePoint(contentRect.maxX,\n                                  contentRect.minY + CORNER_RADIUS))\n\n        // \u2463\n        let bottomRightCorner = NSMakePoint(contentRect.maxX,\n                                            contentRect.minY)\n        path.curve(to: NSMakePoint(contentRect.maxX - CORNER_RADIUS,\n                                   contentRect.minY),\n                   controlPoint1: bottomRightCorner,\n                   controlPoint2: bottomRightCorner)\n\n        // \u2464\n        path.line(to: NSMakePoint(contentRect.minX + CORNER_RADIUS,\n                                  contentRect.minY))\n\n        // \u2465\n        path.curve(to: NSMakePoint(contentRect.minX,\n                                   contentRect.minY + CORNER_RADIUS),\n                   controlPoint1: contentRect.origin,\n                   controlPoint2: contentRect.origin)\n\n        // \u2466\n        path.line(to: NSMakePoint(contentRect.minX,\n                                  contentRect.maxY - ARROW_HEIGHT - CORNER_RADIUS))\n\n        // \u2467\n        let topLeftCorner = NSMakePoint(contentRect.minX,\n                                        contentRect.maxY - ARROW_HEIGHT)\n        path.curve(to: NSMakePoint(contentRect.minX + CORNER_RADIUS,\n                                   contentRect.maxY - ARROW_HEIGHT),\n                   controlPoint1: topLeftCorner,\n                   controlPoint2: topLeftCorner)\n\n        // \u2468\n        path.line(to: NSMakePoint(arrowX_ - ARROW_WIDTH / 2,\n                                  contentRect.maxY - ARROW_HEIGHT))\n\n        path.close()\n\n        // \u30d1\u30b9\u5185\u306e\u5857\u308a\u3064\u3076\u3057\n        NSColor(deviceWhite: 1, alpha: FILL_OPACITY).setFill()\n        path.fill()\n\n        NSGraphicsContext.saveGraphicsState()\n\n        let clip = NSBezierPath(rect: self.bounds)\n        clip.append(path)\n        clip.addClip()\n\n        path.lineWidth = LINE_THICKNESS * 2\n        NSColor.black.setStroke()\n        path.stroke()\n\n        NSGraphicsContext.restoreGraphicsState()\n    }\n}\n```\n\n\u7528\u610f\u3057\u305f `.xib` \u30d5\u30a1\u30a4\u30eb\u3092\u30ed\u30fc\u30c9\u3059\u308b `PanelBase` \u30d3\u30e5\u30fc\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\n\n``` swift\nclass PanelBase: NSView {\n    @IBOutlet var backgroundView: PanelBackground!\n    @IBOutlet var baseView: NSView!\n\n    convenience init() {\n        // \u9069\u5f53\u306a\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067\u521d\u671f\u5316\u3059\u308b\n        self.init(frame: CGRect(x: 0, y: 0, width: 0, height: 0))\n\n        // `PanelBase.xib` \u3092\u30ed\u30fc\u30c9\n        Bundle.main.loadNibNamed(\"PanelBase\", owner: self, topLevelObjects: nil)\n        // \u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3092 background view \u306b\u5408\u308f\u305b\u308b\n        self.frame = self.backgroundView.frame\n        // \u5404\u30d3\u30e5\u30fc\u3092\u8cbc\u308a\u4ed8\u3051\u308b\n        addSubview(self.backgroundView)\n        addSubview(self.baseView)\n    }\n}\n```\n\n\u30d3\u30e5\u30fc\u3092\u547c\u3073\u51fa\u3059\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u7528\u610f\u3057\u307e\u3059\uff0e\n\n``` swift\nclass PanelBaseController: NSViewController {\n    override func loadView() {\n        self.view = PanelBase()\n    }\n}\n```\n\n\u3053\u308c\u3067\uff0c`PanelBaseController` \u3092\u547c\u3073\u51fa\u305b\u3070\uff0c`NSPopover` \u30e9\u30a4\u30af\u306aUI\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306f\u305a\u3067\u3059\uff0e\n\n### \u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u51e6\u7406\n\n\u5b9f\u969b\u306b\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u308b\u51e6\u7406\u90e8\u5206\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u540c\u6642\u306b\uff0c\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30d3\u30e5\u30fc\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u305f\u3081\u306e\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3057\u307e\u3059\uff0e\n\n\u3053\u3053\u3067\uff0c\u30d1\u30cd\u30eb\u306f\u30a2\u30a4\u30b3\u30f3\u306e\u76f4\u4e0b\u306b\u8868\u793a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u304c\uff0c`PanelController` \u306f\u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u3092\u77e5\u308a\u307e\u305b\u3093\uff0e\u305d\u306e\u305f\u3081\uff0c`MenubarController`\u304b\u3089\u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e(`NSRect`)\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\uff0e\u3053\u308c\u306f\u5916\u90e8\u306e\u30af\u30e9\u30b9(\u5f8c\u8ff0)\u306b\u5b9f\u88c5\u3057\uff0cDelegate \u30d1\u30bf\u30fc\u30f3\u3067\u51e6\u7406\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\uff0e\u3053\u306e\u305f\u3081\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u3057\u3066\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a`PanelControllerDelegate`\u3092\u5b9a\u7fa9\u3057\u307e\u3059\uff0e\n\n``` swift\nprotocol PanelControllerDelegate {\n    func statusItemViewRectForPanelController() -> NSRect\n}\n\nclass PanelController: NSWindowController, NSWindowDelegate {\n    var delegate: PanelControllerDelegate?\n    ...\n```\n\n\u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u751f\u6210\u3059\u308b`PanelController`\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u3053\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u521d\u671f\u5316\u51e6\u7406\u3067\u306f\uff0c\u4e0a\u8a18\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u53d7\u3051\u53d6\u308a&\u683c\u7d0d\u3068\uff0c\u30d1\u30cd\u30eb\u7528\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u751f\u6210\u3068\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\uff0e`backgroundColor`\u3092`clear`\uff0c\u304b\u3064`hasShadow`\u3092`false`\u306b\u3059\u308b\u3068\uff0c\u30a6\u30a4\u30f3\u30c9\u30a6\u306e\u80cc\u666f\u3092\u900f\u660e\u5316\u3067\u304d\u307e\u3059\uff0e\u3055\u3089\u306b\uff0c`styleMask`\u3092`borderless`\u306b\u3059\u308b\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30bf\u30a4\u30c8\u30eb\u30d0\u30fc\u3092\u975e\u8868\u793a\u306b\u3067\u304d\u307e\u3059\uff0e\u3053\u308c\u306b\u3088\u308a\u30d1\u30cd\u30eb\u306e\u898b\u305f\u76ee\u304c`NSPopover`\u306b\u8fd1\u304f\u306a\u308a\u307e\u3059\uff0e\n\n``` swift\nconvenience init(delegate: PanelControllerDelegate?) {\n    let panel = NSWindow(contentViewController: PanelBaseController())\n    self.init(window: panel)\n\n    panel.hasShadow = false\n    panel.styleMask = [.borderless]\n    panel.acceptsMouseMovedEvents = true\n    panel.isOpaque = false\n    panel.backgroundColor = .clear\n\n    self.delegate = delegate\n    self.baseView = panel.contentView as? PanelBase\n}\n```\n\n\u6b21\u306b\uff0c\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u306e\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\uff0e\u8868\u793a\u306e\u969b\uff0c\u30d1\u30cd\u30eb\u304c\u30b9\u30af\u30ea\u30fc\u30f3\u3092\u98db\u3073\u51fa\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u304c\u3042\u308b\u306e\u3067\uff0c\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u306b\u306f\u4f4d\u7f6e\u306e\u8abf\u6574\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\uff0e\u307e\u305f\uff0c\u30b7\u30f3\u30d7\u30eb\u306a\u8868\u793a/\u975e\u8868\u793a\u3067\u306f\u5bc2\u3057\u304b\u3063\u305f\u306e\u3067\uff0c\u7c21\u5358\u306a\u30d5\u30a7\u30fc\u30c9\u30a4\u30f3/\u30d5\u30a7\u30fc\u30c9\u30a2\u30a6\u30c8\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u307e\u3057\u305f\uff0e\n\n``` swift\nfunc openPanel() {\n    let panel = self.window!\n\n    // \u753b\u9762\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\n    let screenRect = NSScreen.screens()!.first!.frame\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u3092\u53d6\u5f97\n    let statusRect = self.delegate!.statusItemViewRectForPanelController()\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u4f4d\u7f6e\u306b\u5408\u308f\u305b\u3066\uff0c\u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\u306e\u521d\u671f\u5316\n    var panelRect = self.window!.frame\n    panelRect.origin.x = statusRect.minX\n    panelRect.origin.y = statusRect.midY - panelRect.height\n\n    if panelRect.maxX > screenRect.maxX {\n        // \u30d1\u30cd\u30eb\u304c\u753b\u9762\u5916\u306b\u98db\u3073\u51fa\u3059\u6642\u306f\uff0c\u30d1\u30cd\u30eb\u3068\u30d1\u30cd\u30eb\u4e0a\u306e\u4e09\u89d2\u5f62\u306e\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b\n        self.baseView?.backgroundView.setArrowX(value: ARROW_X + (panelRect.maxX - screenRect.maxX + RIGHT_MARGIN))\n        panelRect.origin.x = screenRect.maxX - panelRect.width - RIGHT_MARGIN\n    } else {\n        self.baseView?.backgroundView.setArrowX(value: ARROW_X)\n    }\n\n    // \u30d1\u30cd\u30eb\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n    panel.setFrame(panelRect, display: true, animate: true)\n\n    // \u8868\u793a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n    // alpha \u3092 0 \u306b\u8a2d\u5b9a\u3057\uff0c1 \u307e\u3067\u5909\u5316\u3055\u305b\u308b\n    self.window?.alphaValue = 0\n    self.window?.makeKeyAndOrderFront(nil)\n    NSAnimationContext.runAnimationGroup({ (context) -> Void in\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u901f\u3055: 0.3 sec\n        context.duration = 0.3\n        self.window?.animator().alphaValue = 1\n        }, completionHandler: nil\n    )\n    // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3092\u5408\u308f\u305b\u308b\n    NSApp.activate(ignoringOtherApps: true)\n}\n\nfunc closePanel() {\n    // \u975e\u8868\u793a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\n    // alpha \u3092 1 \u304b\u3089 0 \u306b\u3059\u308b\n    NSAnimationContext.runAnimationGroup({ (context) -> Void in\n        context.duration = 0.3\n        self.window?.animator().alphaValue = 0\n        }, completionHandler: {\n            // \u30a6\u30a4\u30f3\u30c9\u30a6\u3092\u975e\u8868\u793a\u306b\u3059\u308b\n            self.window?.orderOut(self)\n        }\n    )\n}\n```\n\n### \u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u3068\u30d1\u30cd\u30eb\u306e\u8868\u793a/\u975e\u8868\u793a\u51e6\u7406\u306e\u9023\u643a\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc\u4e0a\u306e\u30a2\u30a4\u30b3\u30f3\u304c\u62bc\u4e0b\u3055\u308c\u305f\u6642\u306b\u30d1\u30cd\u30eb\u304c\u30dd\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u3053\u306e\u9023\u643a\u51e6\u7406\u306f `AppDelegate` \u306b\u8a18\u8ff0\u3057\u307e\u3059\uff0e\u307e\u305f\uff0c`PanelController` \u5185\u3067\u4f7f\u7528\u3059\u308b delegate \u7528\u30e1\u30bd\u30c3\u30c9\u3082\u3053\u3053\u3067\u5b9f\u88c5\u3057\uff0c`AppDelegate`\u81ea\u8eab\u3092`PanelController`\u306b\u6e21\u3057\u307e\u3059\uff0e\u3053\u306e delegate \u306f\uff0c[\u53c2\u8003\u30b5\u30a4\u30c8](http://blog.shpakovski.com/2011/07/cocoa-popup-window-in-status-bar.html)\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u624b\u6cd5\u3092\u305d\u306e\u307e\u307e\u6d41\u7528\u3057\u307e\u3057\u305f\uff0e\n\n``` swift\n@NSApplicationMain\nclass AppDelegate: NSObject, NSApplicationDelegate, PanelControllerDelegate {\n\n    @IBOutlet weak var window: NSWindow!\n    var menubarController: MenubarController!\n    var panelController: PanelController!\n\n    func applicationDidFinishLaunching(_ Notification: Notification) {\n        self.menubarController = MenubarController()\n        // AppDelegate \u81ea\u8eab\u3092\u308f\u305f\u3059\n        self.panelController = PanelController(delegate: self)\n    }\n\n    // \u30a2\u30a4\u30b3\u30f3\u62bc\u4e0b\u6642\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\n    func togglePopover() {\n        // self.panelController.window = \u30d1\u30cd\u30eb \u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u304b\u5426\u304b\n        if self.panelController.window!.isVisible {\n            self.panelController.closePanel()\n        } else {\n            self.panelController.openPanel()\n        }\n    }\n\n    // \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u30d5\u30a9\u30fc\u30ab\u30b9\u304c\u5931\u308f\u308c\u305f\u3089\uff0c\u30d1\u30cd\u30eb\u3092\u9589\u3058\u308b\n    func applicationDidResignActive(_ notification: Notification) {\n        self.panelController.closePanel()\n    }\n\n    // \u30a2\u30a4\u30b3\u30f3\u306e\u63cf\u753b\u4f4d\u7f6e\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\n    // panelController \u5185\u3067\u4f7f\u7528\u3059\u308b\n    func statusItemViewRectForPanelController() -> NSRect {\n        return self.menubarController.view.getRect()\n    }\n}\n```\n\n\u5fc5\u8981\u306a\u5b9f\u88c5\u306f\u4ee5\u4e0a\u3067\u3059\uff0e\n\n## \u307e\u3068\u3081\n\n\u6700\u7d42\u7684\u306b\u306f\u5192\u982d\u3067\u793a\u3057\u305f\u901a\u308a\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3067\u304d\u307e\u3057\u305f\uff0e\n\n![screenshot.gif](https://qiita-image-store.s3.amazonaws.com/0/64850/7d3c3329-08db-dc7a-7a2e-950ebaef6820.gif)\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3082\u516c\u958b\u3057\u3066\u3044\u307e\u3059\uff0e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306b\u51e6\u7406\u63cf\u304d\u904e\u304e\u3066\u3044\u305f\u308a\uff0c\u30a2\u30af\u30bb\u30b9\u4fee\u98fe\u5b50\u304c\u306a\u304b\u3063\u305f\u308a\u304a\u7c97\u672b\u3067\u3059\u304c\uff0c\u30d9\u30fc\u30b9\u3068\u3057\u3066\u306f\u3068\u308a\u3042\u3048\u305a\u826f\u3044\u304b\u306a\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\uff0e\n\n>[tasuwo/Popover: Custom popover window appearing from the icon in the macOS status bar](https://github.com/tasuwo/Popover)\n\n\n\n", "tags": ["Swift3.0", "MacOSX", "Cocoa"]}