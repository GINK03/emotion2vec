{"context": "\u81ea\u4f5c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3082\u88dc\u5b8c\u3057\u3066\u30b5\u30af\u30b5\u30af\u4f7f\u3044\u305f\u3044\uff01\n\u30db\u30af\u30db\u30af\u9854\u306b\u306a\u308a\u305f\u3044\uff01\n\u3067\u3082\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u305f\u3073\u306b\u88dc\u5b8c\u7528\u306e\u8a2d\u5b9a\u3092\u624b\u66f8\u304d\u3059\u308b\u306e\u306f\u3081\u3093\u3069\u304f\u3055\u3044\uff01\n\u3068\u3044\u3046\u65b9\u306f\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u3093\u306a\u65b9\u306b\u306f @labocho \u3055\u3093\u4f5c\u306e thor-zsh_completion \u3068\u3044\u3046 gem \u304c\u3042\u308a\u307e\u3059\u3002\n\u203b\u3053\u306e gem \u306f thor \u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n \u524d\u63d0\nthor \u3063\u3066\u4f55\uff1f\u3068\u3044\u3046\u65b9\u306f\u4ee5\u4e0b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\nRuby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\n\n \u30b5\u30f3\u30d7\u30eb\n\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5185\u5bb9\u3092\u30d9\u30fc\u30b9\u306b\u8a66\u3057\u307e\u3059\u3002\ntbpgr/fizzbuzz\n\n \u5909\u66f4\u524d\nthor \u3092\u4f7f\u3063\u305f CLI \u306e\u5b9a\u7fa9\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nlib/cli.rb\nrequire 'thor'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    class_option :help, type: :boolean, aliases: '-h', desc: 'help message.'\n    class_option :version, type: :boolean, desc: 'version'\n    class_option :debug, type: :boolean, aliases: '-d', desc: 'debug mode'\n\n    desc 'fizzbuzz', 'Get fizzbuzz result from limit number'\n    def fizzbuzz(limit)\n      print Fizzbuzz.fizzbuzz(limit).join(',')\n      exit\n    rescue => e\n      output_error_if_debug_mode(e)\n      exit(false)\n    end\n\n    desc 'version', 'version'\n    def version\n      puts Fizzbuzz::VERSION\n    end\n\n    private\n\n    def output_error_if_debug_mode(e)\n      return unless options[:debug]\n      STDERR.puts(e.message)\n      STDERR.puts(e.backtrace)\n    end\n  end\nend\n\n\n\n \u5909\u66f4\u5f8c\n\ngemspec \u306b thor-zsh_completion \u3092\u8ffd\u52a0\n\n\nfizzbuzz.gemspec\n# \u7565\nspec.add_runtime_dependency 'thor-zsh_completion'\n# \u7565\n\n\n\nlib/cli.rb\nrequire 'thor'\n# :new: \u8ffd\u52a0\nrequire 'thor/zsh_completion'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    # :new: \u8ffd\u52a0\n    include ZshCompletion::Command\n\n\n\n \u30c7\u30e2\n\nzsh-completion \u30b3\u30de\u30f3\u30c9\u304c\u5897\u3048\u307e\u3059\n\n$ fizzbuzz\nCommands:\n  fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\n  fizzbuzz help [COMMAND]  # Describe available commands or one specific command\n  fizzbuzz version         # version\n  fizzbuzz zsh-completion  # Print zsh completion script\n\nOptions:\n  -h, [--help], [--no-help]        # help message.\n      [--version], [--no-version]  # version\n  -d, [--debug], [--no-debug]      # debug mode\n\n\nzsh-completion \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n$ fizzbuzz zsh-completion\n#compdef fizzbuzz\n\nlocal state\n\n_fizzbuzz() {\n  __fizzbuzz\n}\n\n__fizzbuzz() {\n  readonly local DEPTH=2\n\n  case $CURRENT in\n    $DEPTH)\n      _arguments \\\n        '*: :->subcommands'\n\n      case $state in\n        subcommands)\n          _values \\\n            'subcommand' \\\n            'zsh-completion[Print zsh completion script]' \\\n            'fizzbuzz[Get fizzbuzz result from limit number]' \\\n            'version[version]' \\\n            ;\n          ;;\n      esac\n      ;;\n    *)\n      case $words[$DEPTH] in\n        zsh-completion)\n          __fizzbuzz_zsh-completion\n          ;;\n        fizzbuzz)\n          __fizzbuzz_fizzbuzz\n          ;;\n        version)\n          __fizzbuzz_version\n          ;;\n        *)\n          # if does not match any subcommand\n          # complete rest arguments\n          _files\n          ;;\n      esac\n      ;;\n  esac\n}\n\n\n__fizzbuzz_zsh-completion() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    {--name,-n} \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n__fizzbuzz_fizzbuzz() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n__fizzbuzz_version() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n\ncompdef _fizzbuzz fizzbuzz\n\n\n\u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092 zsh \u306e\u8a2d\u5b9a\u306b\u8ffd\u52a0\u3057\u307e\u3059\n\n\u79c1\u306f prezto \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\n$ fizzbuzz zsh-completion > ~/.zprezto/modules/completion/external/src/_fizzbuzz\n$ exec $SHELL -l\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\u304c\u30b5\u30b8\u30a7\u30b9\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n \u5916\u90e8\u8cc7\u6599\n\nthor-zsh_completion\nRuby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066\n\n\u81ea\u4f5c\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3082\u88dc\u5b8c\u3057\u3066\u30b5\u30af\u30b5\u30af\u4f7f\u3044\u305f\u3044\uff01\n\u30db\u30af\u30db\u30af\u9854\u306b\u306a\u308a\u305f\u3044\uff01\n\u3067\u3082\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u305f\u3073\u306b\u88dc\u5b8c\u7528\u306e\u8a2d\u5b9a\u3092\u624b\u66f8\u304d\u3059\u308b\u306e\u306f\u3081\u3093\u3069\u304f\u3055\u3044\uff01\n\u3068\u3044\u3046\u65b9\u306f\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u305d\u3093\u306a\u65b9\u306b\u306f @labocho \u3055\u3093\u4f5c\u306e [thor-zsh_completion](https://github.com/labocho/thor-zsh_completion) \u3068\u3044\u3046 gem \u304c\u3042\u308a\u307e\u3059\u3002\n\u203b\u3053\u306e gem \u306f thor \u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## <i class='fa fa-check-circle'></i> \u524d\u63d0\nthor \u3063\u3066\u4f55\uff1f\u3068\u3044\u3046\u65b9\u306f\u4ee5\u4e0b\u3092\u3054\u78ba\u8a8d\u304f\u3060\u3055\u3044\u3002\n\n[Ruby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066](http://qiita.com/tbpgr/items/10a5c236cfb528c76ef5)\n\n## <i class='fa fa-flask'></i> \u30b5\u30f3\u30d7\u30eb\n\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u5185\u5bb9\u3092\u30d9\u30fc\u30b9\u306b\u8a66\u3057\u307e\u3059\u3002\n\n[tbpgr/fizzbuzz](https://github.com/tbpgr/fizzbuzz)\n\n### <i class='fa fa-cube'></i> \u5909\u66f4\u524d\nthor \u3092\u4f7f\u3063\u305f CLI \u306e\u5b9a\u7fa9\u90e8\u5206\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```ruby:lib/cli.rb\nrequire 'thor'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    class_option :help, type: :boolean, aliases: '-h', desc: 'help message.'\n    class_option :version, type: :boolean, desc: 'version'\n    class_option :debug, type: :boolean, aliases: '-d', desc: 'debug mode'\n\n    desc 'fizzbuzz', 'Get fizzbuzz result from limit number'\n    def fizzbuzz(limit)\n      print Fizzbuzz.fizzbuzz(limit).join(',')\n      exit\n    rescue => e\n      output_error_if_debug_mode(e)\n      exit(false)\n    end\n\n    desc 'version', 'version'\n    def version\n      puts Fizzbuzz::VERSION\n    end\n\n    private\n\n    def output_error_if_debug_mode(e)\n      return unless options[:debug]\n      STDERR.puts(e.message)\n      STDERR.puts(e.backtrace)\n    end\n  end\nend\n```\n\n### <i class='fa fa-cube'></i> \u5909\u66f4\u5f8c\n* gemspec \u306b thor-zsh_completion \u3092\u8ffd\u52a0\n\n```ruby:fizzbuzz.gemspec\n# \u7565\nspec.add_runtime_dependency 'thor-zsh_completion'\n# \u7565\n```\n\n```ruby:lib/cli.rb\nrequire 'thor'\n# :new: \u8ffd\u52a0\nrequire 'thor/zsh_completion'\n\n# Fizzbuzz::Models\nmodule Fizzbuzz\n  # CLI\n  #\n  # FizzBuzz\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\n  class CLI < Thor\n    # :new: \u8ffd\u52a0\n    include ZshCompletion::Command\n```\n\n### <i class='fa fa-terminal'></i> \u30c7\u30e2\n* zsh-completion \u30b3\u30de\u30f3\u30c9\u304c\u5897\u3048\u307e\u3059\n\n```sh\n$ fizzbuzz\nCommands:\n  fizzbuzz fizzbuzz        # Get fizzbuzz result from limit number\n  fizzbuzz help [COMMAND]  # Describe available commands or one specific command\n  fizzbuzz version         # version\n  fizzbuzz zsh-completion  # Print zsh completion script\n\nOptions:\n  -h, [--help], [--no-help]        # help message.\n      [--version], [--no-version]  # version\n  -d, [--debug], [--no-debug]      # debug mode\n```\n\n* zsh-completion \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n```sh\n$ fizzbuzz zsh-completion\n#compdef fizzbuzz\n\nlocal state\n\n_fizzbuzz() {\n  __fizzbuzz\n}\n\n__fizzbuzz() {\n  readonly local DEPTH=2\n\n  case $CURRENT in\n    $DEPTH)\n      _arguments \\\n        '*: :->subcommands'\n\n      case $state in\n        subcommands)\n          _values \\\n            'subcommand' \\\n            'zsh-completion[Print zsh completion script]' \\\n            'fizzbuzz[Get fizzbuzz result from limit number]' \\\n            'version[version]' \\\n            ;\n          ;;\n      esac\n      ;;\n    *)\n      case $words[$DEPTH] in\n        zsh-completion)\n          __fizzbuzz_zsh-completion\n          ;;\n        fizzbuzz)\n          __fizzbuzz_fizzbuzz\n          ;;\n        version)\n          __fizzbuzz_version\n          ;;\n        *)\n          # if does not match any subcommand\n          # complete rest arguments\n          _files\n          ;;\n      esac\n      ;;\n  esac\n}\n\n\n__fizzbuzz_zsh-completion() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    {--name,-n} \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n__fizzbuzz_fizzbuzz() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n__fizzbuzz_version() {\n  _arguments \\\n    {--help,--h}help message. \\\n    {--version}version \\\n    {--debug,--d}debug mode \\\n    '*: :->rest'\n\n  case $state in\n    rest)\n      # complete rest arguments\n      _files\n      ;;\n  esac\n}\n\n\ncompdef _fizzbuzz fizzbuzz\n```\n\n* \u751f\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3092 zsh \u306e\u8a2d\u5b9a\u306b\u8ffd\u52a0\u3057\u307e\u3059\n\n\u79c1\u306f prezto \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u307e\u3059\n\n```sh\n$ fizzbuzz zsh-completion > ~/.zprezto/modules/completion/external/src/_fizzbuzz\n$ exec $SHELL -l\n```\n\n* \u52d5\u4f5c\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\u304c\u30b5\u30b8\u30a7\u30b9\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n![demo.gif](https://qiita-image-store.s3.amazonaws.com/0/43480/dc647d5c-f0d3-4340-1682-fd6793680799.gif)\n\n## <i class=\"fa fa-book\" style=\"font-size:1em;\"></i> \u5916\u90e8\u8cc7\u6599\n* [thor-zsh_completion](https://github.com/labocho/thor-zsh_completion)\n* [Ruby \u306e CLI \u30c4\u30fc\u30eb\u306e\u4f5c\u6210\u3092\u652f\u63f4\u3059\u308b\u3001 thor gem \u306e\u57fa\u672c\u306b\u3064\u3044\u3066](http://qiita.com/tbpgr/items/10a5c236cfb528c76ef5)\n", "tags": ["thor", "Ruby"]}