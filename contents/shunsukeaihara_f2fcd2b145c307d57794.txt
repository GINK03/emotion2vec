{"context": " More than 1 year has passed since last update.ModelAdmin\u3092\u9069\u5f53\u306b\u7d99\u627f\nfrom django.contrib import admin\n\nclass BaseAdmin(admin.ModelAdmin):\n\n    def construct_change_message(self, request, form, formsets):\n        change_message = []\n        if form.changed_data:\n            for name in form.changed_data:\n                new_data = form.cleaned_data[name]\n                old_data = form.initial[name]\n                change_message.append(u\"{}: {} -> {}\".format(name, old_data, new_data))\n\n        if formsets:\n            for formset in formsets:\n                for added_object in formset.new_objects:\n                    change_message.append(_('Added %(name)s \"%(object)s\".')\n                                          % {'name': force_text(added_object._meta.verbose_name),\n                                             'object': force_text(added_object)})\n                for changed_object, changed_fields in formset.changed_objects:\n                    change_message.append(_('Changed %(list)s for %(name)s \"%(object)s\".')\n                                          % {'list': get_text_list(changed_fields, _('and')),\n                                             'name': force_text(changed_object._meta.verbose_name),\n                                             'object': force_text(changed_object)})\n                for deleted_object in formset.deleted_objects:\n                    change_message.append(_('Deleted %(name)s \"%(object)s\".')\n                                          % {'name': force_text(deleted_object._meta.verbose_name),\n                                             'object': force_text(deleted_object)})\n        change_message = ', '.join(change_message)\n        return change_message or _('No fields changed.')\n\n\n\u4f7f\u3046\u3068\u304d\nfrom hoge.models import Hoge\n\nclass HogeAdmin(BaseAdmin):\n    pass\n\nadmin.site.register(Hoge, HogeAdmin)\n\nModelAdmin\u3092\u9069\u5f53\u306b\u7d99\u627f\n\n```\nfrom django.contrib import admin\n\nclass BaseAdmin(admin.ModelAdmin):\n\n    def construct_change_message(self, request, form, formsets):\n        change_message = []\n        if form.changed_data:\n            for name in form.changed_data:\n                new_data = form.cleaned_data[name]\n                old_data = form.initial[name]\n                change_message.append(u\"{}: {} -> {}\".format(name, old_data, new_data))\n\n        if formsets:\n            for formset in formsets:\n                for added_object in formset.new_objects:\n                    change_message.append(_('Added %(name)s \"%(object)s\".')\n                                          % {'name': force_text(added_object._meta.verbose_name),\n                                             'object': force_text(added_object)})\n                for changed_object, changed_fields in formset.changed_objects:\n                    change_message.append(_('Changed %(list)s for %(name)s \"%(object)s\".')\n                                          % {'list': get_text_list(changed_fields, _('and')),\n                                             'name': force_text(changed_object._meta.verbose_name),\n                                             'object': force_text(changed_object)})\n                for deleted_object in formset.deleted_objects:\n                    change_message.append(_('Deleted %(name)s \"%(object)s\".')\n                                          % {'name': force_text(deleted_object._meta.verbose_name),\n                                             'object': force_text(deleted_object)})\n        change_message = ', '.join(change_message)\n        return change_message or _('No fields changed.')\n\n```\n\n\u4f7f\u3046\u3068\u304d\n\n```\nfrom hoge.models import Hoge\n\nclass HogeAdmin(BaseAdmin):\n    pass\n\nadmin.site.register(Hoge, HogeAdmin)\n```\n", "tags": ["Django"]}