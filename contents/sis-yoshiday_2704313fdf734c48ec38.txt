{"tags": ["spring-boot", "Thymeleaf", "Hibernate", "Flyway"], "context": "\u306f\u307e\u308b\u5ea6\u306b\u8ffd\u8a18\u4e88\u5b9a\n\nspring-boot\n\nspring-boot 1.3.3\u304b\u3089messages.properties\u304c\u5fc5\u9808\u306b\u306a\u3063\u305f\u7406\u7531\nmessages-*.properties\u3060\u3051\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\u7406\u7531\u306f\u4ee5\u4e0b\u306b\u66f8\u3044\u3066\u3042\u308b\n\nhttps://github.com/spring-projects/spring-boot/issues/4930\n\n\nwar\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3068gradlew bootRepackage\u3067jar\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u306a\u304f\u306a\u308b\nprovidedCompile\u3092\u4f7f\u3044\u305f\u3044\u7b49\u306e\u7406\u7531\u3067war\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u305f\u5834\u5408\u4e0a\u8a18\u306e\u554f\u984c\u304c\u8d77\u3053\u308b\n\n\u89e3\u6c7a\u7b56\n\nhttp://stackoverflow.com/questions/33432236/how-to-make-bootrepackage-depends-on-jar-not-war-when-using-gradle-war-plugin\nhttps://github.com/spring-projects/spring-boot/issues/3931\n\n\n\u8ffd\u8a18\nprovided\u4f7f\u3044\u305f\u3044\u3060\u3051\u306a\u3089propdeps-plugin\u3092\u5165\u308c\u305f\u307b\u3046\u304c\u826f\u3044\nhttps://github.com/spring-projects/gradle-plugins/tree/master/propdeps-plugin\n\nfully-executable jar \u3067\u306e\u8d77\u52d5\u65b9\u6cd5\n\u5c0e\u5165\u306f\u4e0b\u8a18\u30ea\u30f3\u30af\u3067\u3067\u304d\u308b\u3051\u3069\u3001\nhttp://docs.spring.io/spring-boot/docs/current/reference/html/deployment-install.html\n/usr/local/myapp\u4ee5\u4e0b\u306e\u4f5c\u696d\u306e\u307f\u3067\u5b8c\u7d50\u3055\u305b\u305f\u3044\uff08/etc/init.d/\u4ee5\u4e0b\u3092\u3042\u307e\u308a\u3044\u3058\u308a\u305f\u304f\u306a\u3044\uff09\u5834\u5408\u3055\u3089\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u3063\u3066\u30d0\u30fc\u30b8\u30e7\u30f3\u540d\u4ed8\u304d\u306ejar\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306f\n\n/etc/init.d/myapp\n# jar\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\n/etc/init.d/myapp -> /usr/local/myapp/myapp.jar\n\n\n\n/usr/local/myapp\n# \u53e4\u3044jar\u30d5\u30a1\u30a4\u30eb\nmyapp-0.0.9.jar\n# myapp.conf \u3060\u3068\u8a2d\u5b9a\u304c\u8aad\u307f\u8fbc\u307e\u308c\u306a\u3044\n# \"\u6700\u7d42\u7684\u306b\u53c2\u7167\u3055\u308c\u308bjar\u30d5\u30a1\u30a4\u30eb\u540d\".conf \u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\nmyapp-1.0.0.conf\nmyapp-1.0.0.jar\nmyapp.jar -> /usr/local/myapp/myapp-1.0.0.jar\n\n\n\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u81ea\u4f53\u306fjar\u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u306e\u3067\nhead -n 200 myapp.jar\n\n\u3068\u304b\u3067\u53c2\u7167\u3067\u304d\u308b\n\nspring-mvc + thymeleaf\n\nLong\u578b\u3092@PathVariable\u306b\u6301\u3064\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eURL\u3092${#mvc.url()}\u3067\u89e3\u6c7a\u3067\u304d\u306a\u3044\n@Controller\n@RequestMapping(\"/hoge\")\npublic class HogeController {\n\n  @RequestMapping(path = \"{id}\", method = RequestMethod.GET)\n  public String detail(@PathVariable(\"id\") Long id) {\n    return \"hoge/detail\";\n  }\n}\n\n\u307f\u305f\u3044\u306a\uff08Long\u578b\u3092\u5f15\u6570\u306b\u6301\u3064\uff09\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u3042\u308b\u6642\u306b\n<a th:href=\"${#mvc.url('HC#detail').arg(0, __${id}__).build()}\">xxx</a>\n\n\u3067URL\u3092\u89e3\u6c7a\u3067\u304d\u306a\u3044\u3002\n\n\u89e3\u6c7a\u7b56\n<a th:href=\"${#mvc.url('HC#detail').arg(0, new Long(__${id}__)).build()}\">xxx</a>\n\n\u305d\u3082\u305d\u3082\u306e\u8a71\u3060\u3051\u3069\u30af\u30e9\u30b9\u540d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u306b\u5f31\u3044\u304b\u3089#mvc.url()\u306f\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\uff08\u3068\u5f8c\u306b\u306a\u3063\u3066\u601d\u3063\u305f\uff09\n\n@ControllerAdvice\u3092\u4ed8\u3051\u305f\u30af\u30e9\u30b9\u5185\u306b\u3042\u308b@ModelAttribute\u3092\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u56de\u547c\u3070\u308c\u308b\n\n\u539f\u56e0\n@RestController\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3082@ControllerAdvice\u3067\u51e6\u7406\u3055\u308c\u308b\u305f\u3081\n\n\u89e3\u6c7a\u7b56\n@ControllerAdvice(\"com.example.controller\")\nclass GlobalMvcController {\n}\n\n@ControllerAdvice(\"com.example.api\")\nclass GlobalRestController {\n}\n\n\u307f\u305f\u3044\u306bbasePackage\u3092\u3061\u3083\u3093\u3068\u6307\u5b9a\u3059\u308b\u3002\n\u4ed6\u306b\u3082\u9069\u7528\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7d50\u69cb\u3042\u308b\u306e\u3067\u3001\u7279\u5b9a\u306e\u8907\u6570\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u307f\u3067\u5171\u901a\u5316\u306e\u51e6\u7406\u3092\u66f8\u304f\u306e\u306b\u4fbf\u5229\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5074\u3067\u306eURL\u306e\u89e3\u6c7a\u6cd5\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u3042\u3063\u305f\u5834\u5408\n\nProductController.java\n@RequestMapping(path = \"/products/{id}\", method = RequestMethod.GET)\npublic String detail(@PathVariable(\"id\") Long id, Model model) {\n  model.addAttribute(\"product\", service.findProduct(id));\n  return \"product\";\n}\n\n\n\u4e0a\u8a18\u30d1\u30b9\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u308bURL\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\uff08\u4ed6\u306b\u3082\u3084\u308a\u65b9\u306f\u3042\u308b\u3051\u3069\uff09\n// \u30d1\u30b9\u306e\u5909\u66f4\u304c\u4e0d\u5b89\nString.format(\"redirect:/products/%d\", id);\n// \u30af\u30e9\u30b9\u30fb\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5909\u66f4\u30fb\u5f8c\u306b\u306a\u3063\u3066\u540d\u524d\u304c\u91cd\u8907\u3059\u308b\u3068\u304b\u3042\u308b\u306e\u3067\u5371\u306a\u3044\n\"redirect:\" + MvcUriComponentsBuilder.fromMappingName(\"PC#product\").arg(0, id).build()\n\n\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u73fe\u6642\u70b9\u3067\u306e\u500b\u4eba\u7684\u306b\u30d9\u30bf\u30fc\u306a\u65b9\u6cd5\u304c\u4ee5\u4e0b\n\nProductController.java\n@RequestMapping(path = \"/products/{id}\", method = RequestMethod.GET)\npublic ModelAndView detail(@PathVariable(\"id\") Long id) {\n  ModelAndView mav = new ModelAndView(\"product\"); \n  mav.addObject(\"product\", service.findProduct(id));\n  return mav;\n}\n\n\n// \u9577\u304f\u3066\u306a\u3093\u304b\u30a4\u30e4\u3060\u3051\u3069MvcUriComponentsBuilder\u306fstatic import\u3059\u308b\u3068\u77ed\u304f\u306a\u308b\n\"redirect:\" + MvcUriComponentsBuilder.fromMethodCall(MvcUriComponentsBuilder.on(ProductController.class).detail(id)).toUriString();\n\nMvcUriComponentsBuilder#fromMethodCall()\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308b\n\n\u5229\u70b9\n\n\nURL\u3001\u30af\u30e9\u30b9\u540d\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5909\u66f4\u306b\u5f37\u3044\n\u5f15\u6570\u306e\u5909\u66f4\u306b\u5f37\u3044\n\n\n\u6b20\u70b9\n\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306bModelAndView\u3092\u4f7f\u308f\u3056\u308b\u3092\u3048\u306a\u3044\n\n\n\n\nHibernate (JPA)\n\n\u5171\u901a\n\nlike\u53e5\u306b\u6e21\u3059\u6587\u5b57\u5217\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\n@Repository\npublic interface ProductRepository extends JpaRepository<Product> {\n  @Query(\"select p from Product p where p.name like '%?1%'\")\n  public List<Product> findProducts(String q);\n}\n\n@Service\npublic class ProductService {\n\n  // ...\n\n  public List<Product> ng() {\n    return repository.findProducts(\"\u30a2\u30eb\u30b3\u30fc\u30eb_40%\");\n  }\n\n  public List<Product> ok() {\n    return repository.findProducts(\"\u30a2\u30eb\u30b3\u30fc\u30eb\\_40\\%\");\n  }\n}\n\n\n\u9759\u7684\u30af\u30a8\u30ea\uff08JPQL, HQL\uff09\n\n\u306a\u3093\u304b\u77e5\u3089\u306a\u3044\u3051\u3069cross join\u3059\u308bSQL\u6587\u304c\u751f\u6210\u3055\u308c\u3066\u308b\n\n\u539f\u56e0\nselect a from A a where a.deep.entity.reference.foo = ?1\n\n\u307f\u305f\u3044\u306aJPQL\u30af\u30a8\u30ea\u3002\n\n\u89e3\u6c7a\u7b56\n\u5197\u9577\u306b\u611f\u3058\u308b\u3051\u3069\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306bjoin\u3059\u308c\u3070cross join\u3055\u308c\u306a\u304f\u306a\u308b\nselect \n  a from A a \n  join a.deep d \n  join d.entity e \n  join e.reference r \nwhere \n  r.foo = ?1\n\n\n\u52d5\u7684\u30af\u30a8\u30ea\uff08Criteria API, Specification\uff09\n\n\u540c\u4e00Entity\u306b\u5bfe\u3057\u3066From#join()\u3092\u8907\u6570\u56de\u547c\u3076\u3068\u751f\u6210\u3055\u308c\u308bSQL\u6587\u3067\u3082\u8907\u6570\u56deJoin\u304c\u5165\u308b\n/**\n * user\u3092\u95a2\u9023\u3059\u308bdepartment\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3067\u691c\u7d22\u3059\u308b\n */\npublic Specification<User> userSearchSpec(UserSearchForm form) {\n\n  return (root, query, cb) -> {\n\n    List<Predicate> predicates = new ArrayList<>();\n\n    form.departmentName()\n      .map(dn -> cb.like(root.join(User_.department).get(Department_.name), '%' + dn + '%')\n      .ifPresent(predicates::add); /* \u3053\u3053\u3067department\u3092join */\n\n    form.departmentAddress()\n      .map(da -> cb.like(root.join(User_.department).get(Department_.address), '%' + da + '%')\n      .ifPresent(predicates::add); /* \u3053\u3053\u3067department\u3092join (2\u56de\u76ee) */\n\n    // predicates\u304c\u7a7a\u306e\u6642\u306f\u672c\u5f53\u306f\u8003\u616e\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u7701\u7565\n    return cb.and(predicates.stream().toArray(Predicate[]::new));\n  }\n\n\n\u89e3\u6c7a\u7b56\nFrom\u304b\u3089join\u3092\u691c\u7d22\u3057\u3001\u306a\u3051\u308c\u3070join\u3057\u3066\u8fd4\u5374\n\u203b \u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306bJoin<?, ?>\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u305b\u308b\u65b9\u6cd5\u306f\u4f7f\u3048\u306a\u3044\nJpa MetaModel\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\npublic static <X, Y> Join<X, Y> getOrCreateJoin(From<?, X> from,\n    SingularAttribute<? super X, Y> attribute, JoinType joinType) {\n\n  for (Join<X, ?> join : from.getJoins()) {\n\n    boolean sameName = join.getAttribute().equals(attribute);\n\n    if (sameName && join.getJoinType().equals(joinType)) {\n      return (Join<X, Y>) join;\n    }\n  }\n\n  return from.join(attribute, joinType);\n}\n\n\n\u4ee5\u4e0b\u3092\u53c2\u8003\nhttp://stackoverflow.com/questions/21791793/query-from-combined-spring-data-specification-has-multiple-joins-on-same-table\norg.springframework.data.jpa.repository.query.QueryUtils\n\n\nFlyway\n\n\u672c\u756a\u74b0\u5883(\u975eWindows)\u3067\u53d6\u5f97\u3057\u305f\u30c0\u30f3\u30d7\u3092\u30ed\u30fc\u30ab\u30eb(Windows)\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u305d\u306e\u5f8c\u306ebootRun\u3067\u843d\u3061\u308b\n\n\u539f\u56e0\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067checksum\u306e\u7b97\u51fa\u7d50\u679c\u304c\u7570\u306a\u308b\u70ba\n\n\u89e3\u6c7a\u7b56\n3.2.1\u4ee5\u524d\u306a\u3089\u624b\u52d5\u3067checksum\u3092\u5165\u308c\u76f4\u3059\n\n4.0.0\u3067\u4fee\u6b63\u3055\u308c\u308b\u3089\u3057\u3044\nhttps://github.com/flyway/flyway/issues/253\n\n\nTest\n\nApplicationEventPublisher\u3092@MockBean\u3067\u304d\u306a\u3044\n\n\u539f\u56e0\n\uff08\u73fe\u5728\u306e\uff09spring-framework\u306e\u5236\u7d04\uff08\u3089\u3057\u3044\uff09\n\n\u89e3\u6c7a\u7b56\n\u30c6\u30b9\u30c8\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\uff08\u3064\u307e\u308a1.3.x\u6642\u4ee3\u3068\u540c\u3058\uff09\n@Configuration\npublic class MockEventPublisherConfig {\n\n  @Bean\n  @Primary\n  public ApplicationEventPublisher eventPublisher() {\n    return Mockito.mock(ApplicationEventPublisher.class);\n  }\n}\n\n@SpringBootTest(classes = {MockEventPublisherConfig.class, ...})\npublic class MyTest {\n\n  @test \n  public void test() {\n    ...\n  }\n}\n\n\n\u53c2\u8003\n\n\u5bfe\u5fdc\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u306a\u3044issue\n\n\nhttps://jira.spring.io/browse/SPR-14335\n\n\n\n\u306f\u307e\u308b\u5ea6\u306b\u8ffd\u8a18\u4e88\u5b9a\n\n# spring-boot\n\n## spring-boot 1.3.3\u304b\u3089messages.properties\u304c\u5fc5\u9808\u306b\u306a\u3063\u305f\u7406\u7531\n\nmessages-*.properties\u3060\u3051\u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\u7406\u7531\u306f\u4ee5\u4e0b\u306b\u66f8\u3044\u3066\u3042\u308b\n> https://github.com/spring-projects/spring-boot/issues/4930\n\n## war\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3068`gradlew bootRepackage`\u3067jar\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u306a\u304f\u306a\u308b\n\n`providedCompile`\u3092\u4f7f\u3044\u305f\u3044\u7b49\u306e\u7406\u7531\u3067war\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u305f\u5834\u5408\u4e0a\u8a18\u306e\u554f\u984c\u304c\u8d77\u3053\u308b\n\n### \u89e3\u6c7a\u7b56\n> http://stackoverflow.com/questions/33432236/how-to-make-bootrepackage-depends-on-jar-not-war-when-using-gradle-war-plugin\n> https://github.com/spring-projects/spring-boot/issues/3931\n\n#### \u8ffd\u8a18\nprovided\u4f7f\u3044\u305f\u3044\u3060\u3051\u306a\u3089propdeps-plugin\u3092\u5165\u308c\u305f\u307b\u3046\u304c\u826f\u3044\nhttps://github.com/spring-projects/gradle-plugins/tree/master/propdeps-plugin\n\n## fully-executable jar \u3067\u306e\u8d77\u52d5\u65b9\u6cd5\n\n\u5c0e\u5165\u306f\u4e0b\u8a18\u30ea\u30f3\u30af\u3067\u3067\u304d\u308b\u3051\u3069\u3001\n\nhttp://docs.spring.io/spring-boot/docs/current/reference/html/deployment-install.html\n\n`/usr/local/myapp`\u4ee5\u4e0b\u306e\u4f5c\u696d\u306e\u307f\u3067\u5b8c\u7d50\u3055\u305b\u305f\u3044\uff08`/etc/init.d/`\u4ee5\u4e0b\u3092\u3042\u307e\u308a\u3044\u3058\u308a\u305f\u304f\u306a\u3044\uff09\u5834\u5408\u3055\u3089\u306b\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u3063\u3066\u30d0\u30fc\u30b8\u30e7\u30f3\u540d\u4ed8\u304d\u306ejar\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u5834\u5408\u306f\n\n```bash:/etc/init.d/myapp\n# jar\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\n/etc/init.d/myapp -> /usr/local/myapp/myapp.jar\n```\n\n```bash:/usr/local/myapp\n# \u53e4\u3044jar\u30d5\u30a1\u30a4\u30eb\nmyapp-0.0.9.jar\n# myapp.conf \u3060\u3068\u8a2d\u5b9a\u304c\u8aad\u307f\u8fbc\u307e\u308c\u306a\u3044\n# \"\u6700\u7d42\u7684\u306b\u53c2\u7167\u3055\u308c\u308bjar\u30d5\u30a1\u30a4\u30eb\u540d\".conf \u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\nmyapp-1.0.0.conf\nmyapp-1.0.0.jar\nmyapp.jar -> /usr/local/myapp/myapp-1.0.0.jar\n```\n\n\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\u81ea\u4f53\u306fjar\u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u3066\u3044\u308b\u306e\u3067\n\n```bash\nhead -n 200 myapp.jar\n```\n\n\u3068\u304b\u3067\u53c2\u7167\u3067\u304d\u308b\n\n# spring-mvc + thymeleaf\n\n## Long\u578b\u3092`@PathVariable`\u306b\u6301\u3064\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306eURL\u3092`${#mvc.url()}`\u3067\u89e3\u6c7a\u3067\u304d\u306a\u3044\n\n```java\n@Controller\n@RequestMapping(\"/hoge\")\npublic class HogeController {\n\n  @RequestMapping(path = \"{id}\", method = RequestMethod.GET)\n  public String detail(@PathVariable(\"id\") Long id) {\n    return \"hoge/detail\";\n  }\n}\n```\n\n\u307f\u305f\u3044\u306a\uff08Long\u578b\u3092\u5f15\u6570\u306b\u6301\u3064\uff09\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u3042\u308b\u6642\u306b\n\n```html\n<a th:href=\"${#mvc.url('HC#detail').arg(0, __${id}__).build()}\">xxx</a>\n```\n\n\u3067URL\u3092\u89e3\u6c7a\u3067\u304d\u306a\u3044\u3002\n\n### \u89e3\u6c7a\u7b56\n\n```html\n<a th:href=\"${#mvc.url('HC#detail').arg(0, new Long(__${id}__)).build()}\">xxx</a>\n```\n\n\u305d\u3082\u305d\u3082\u306e\u8a71\u3060\u3051\u3069\u30af\u30e9\u30b9\u540d\u306e\u30ea\u30d5\u30a1\u30af\u30bf\u306b\u5f31\u3044\u304b\u3089`#mvc.url()`\u306f\u4f7f\u308f\u306a\u3044\u307b\u3046\u304c\u3044\u3044\uff08\u3068\u5f8c\u306b\u306a\u3063\u3066\u601d\u3063\u305f\uff09\n\n## `@ControllerAdvice`\u3092\u4ed8\u3051\u305f\u30af\u30e9\u30b9\u5185\u306b\u3042\u308b`@ModelAttribute`\u3092\u4ed8\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u8907\u6570\u56de\u547c\u3070\u308c\u308b\n\n### \u539f\u56e0\n\n`@RestController`\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3082`@ControllerAdvice`\u3067\u51e6\u7406\u3055\u308c\u308b\u305f\u3081\n\n### \u89e3\u6c7a\u7b56\n\n```java\n@ControllerAdvice(\"com.example.controller\")\nclass GlobalMvcController {\n}\n\n@ControllerAdvice(\"com.example.api\")\nclass GlobalRestController {\n}\n```\n\n\u307f\u305f\u3044\u306bbasePackage\u3092\u3061\u3083\u3093\u3068\u6307\u5b9a\u3059\u308b\u3002\n\u4ed6\u306b\u3082\u9069\u7528\u7bc4\u56f2\u3092\u6307\u5b9a\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u7d50\u69cb\u3042\u308b\u306e\u3067\u3001\u7279\u5b9a\u306e\u8907\u6570\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u307f\u3067\u5171\u901a\u5316\u306e\u51e6\u7406\u3092\u66f8\u304f\u306e\u306b\u4fbf\u5229\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u5074\u3067\u306eURL\u306e\u89e3\u6c7a\u6cd5\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u304c\u3042\u3063\u305f\u5834\u5408\n\n```java:ProductController.java\n@RequestMapping(path = \"/products/{id}\", method = RequestMethod.GET)\npublic String detail(@PathVariable(\"id\") Long id, Model model) {\n  model.addAttribute(\"product\", service.findProduct(id));\n  return \"product\";\n}\n```\n\n\u4e0a\u8a18\u30d1\u30b9\u3078\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u305b\u308bURL\u3092\u751f\u6210\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\uff08\u4ed6\u306b\u3082\u3084\u308a\u65b9\u306f\u3042\u308b\u3051\u3069\uff09\n\n```java\n// \u30d1\u30b9\u306e\u5909\u66f4\u304c\u4e0d\u5b89\nString.format(\"redirect:/products/%d\", id);\n// \u30af\u30e9\u30b9\u30fb\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5909\u66f4\u30fb\u5f8c\u306b\u306a\u3063\u3066\u540d\u524d\u304c\u91cd\u8907\u3059\u308b\u3068\u304b\u3042\u308b\u306e\u3067\u5371\u306a\u3044\n\"redirect:\" + MvcUriComponentsBuilder.fromMappingName(\"PC#product\").arg(0, id).build()\n```\n\n\u8a66\u884c\u932f\u8aa4\u3057\u305f\u7d50\u679c\u3001\u73fe\u6642\u70b9\u3067\u306e\u500b\u4eba\u7684\u306b\u30d9\u30bf\u30fc\u306a\u65b9\u6cd5\u304c\u4ee5\u4e0b\n\n```java:ProductController.java\n@RequestMapping(path = \"/products/{id}\", method = RequestMethod.GET)\npublic ModelAndView detail(@PathVariable(\"id\") Long id) {\n  ModelAndView mav = new ModelAndView(\"product\"); \n  mav.addObject(\"product\", service.findProduct(id));\n  return mav;\n}\n```\n\n```java\n// \u9577\u304f\u3066\u306a\u3093\u304b\u30a4\u30e4\u3060\u3051\u3069MvcUriComponentsBuilder\u306fstatic import\u3059\u308b\u3068\u77ed\u304f\u306a\u308b\n\"redirect:\" + MvcUriComponentsBuilder.fromMethodCall(MvcUriComponentsBuilder.on(ProductController.class).detail(id)).toUriString();\n```\n\n`MvcUriComponentsBuilder#fromMethodCall()`\u3092\u4f7f\u3046\u3053\u3068\u306b\u3088\u308b\n\n- \u5229\u70b9\n - URL\u3001\u30af\u30e9\u30b9\u540d\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u5909\u66f4\u306b\u5f37\u3044\n - \u5f15\u6570\u306e\u5909\u66f4\u306b\u5f37\u3044\n- \u6b20\u70b9\n - \u30e1\u30bd\u30c3\u30c9\u306e\u623b\u308a\u5024\u306b`ModelAndView`\u3092\u4f7f\u308f\u3056\u308b\u3092\u3048\u306a\u3044\n\n\n# Hibernate (JPA)\n\n## \u5171\u901a\n\n### like\u53e5\u306b\u6e21\u3059\u6587\u5b57\u5217\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\n\n```java\n@Repository\npublic interface ProductRepository extends JpaRepository<Product> {\n  @Query(\"select p from Product p where p.name like '%?1%'\")\n  public List<Product> findProducts(String q);\n}\n\n@Service\npublic class ProductService {\n\n  // ...\n\n  public List<Product> ng() {\n    return repository.findProducts(\"\u30a2\u30eb\u30b3\u30fc\u30eb_40%\");\n  }\n\n  public List<Product> ok() {\n    return repository.findProducts(\"\u30a2\u30eb\u30b3\u30fc\u30eb\\_40\\%\");\n  }\n}\n```\n\n## \u9759\u7684\u30af\u30a8\u30ea\uff08JPQL, HQL\uff09\n\n### \u306a\u3093\u304b\u77e5\u3089\u306a\u3044\u3051\u3069cross join\u3059\u308bSQL\u6587\u304c\u751f\u6210\u3055\u308c\u3066\u308b\n\n#### \u539f\u56e0\n\n```sql\nselect a from A a where a.deep.entity.reference.foo = ?1\n```\n\n\u307f\u305f\u3044\u306aJPQL\u30af\u30a8\u30ea\u3002\n\n#### \u89e3\u6c7a\u7b56\n\n\u5197\u9577\u306b\u611f\u3058\u308b\u3051\u3069\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u660e\u793a\u7684\u306bjoin\u3059\u308c\u3070cross join\u3055\u308c\u306a\u304f\u306a\u308b\n\n```sql\nselect \n  a from A a \n  join a.deep d \n  join d.entity e \n  join e.reference r \nwhere \n  r.foo = ?1\n```\n\n## \u52d5\u7684\u30af\u30a8\u30ea\uff08Criteria API, Specification\uff09\n\n### \u540c\u4e00Entity\u306b\u5bfe\u3057\u3066`From#join()`\u3092\u8907\u6570\u56de\u547c\u3076\u3068\u751f\u6210\u3055\u308c\u308bSQL\u6587\u3067\u3082\u8907\u6570\u56deJoin\u304c\u5165\u308b\n\n```java\n/**\n * user\u3092\u95a2\u9023\u3059\u308bdepartment\u30c6\u30fc\u30d6\u30eb\u306e\u5185\u5bb9\u3067\u691c\u7d22\u3059\u308b\n */\npublic Specification<User> userSearchSpec(UserSearchForm form) {\n\n  return (root, query, cb) -> {\n    \n    List<Predicate> predicates = new ArrayList<>();\n\n    form.departmentName()\n      .map(dn -> cb.like(root.join(User_.department).get(Department_.name), '%' + dn + '%')\n      .ifPresent(predicates::add); /* \u3053\u3053\u3067department\u3092join */\n\n    form.departmentAddress()\n      .map(da -> cb.like(root.join(User_.department).get(Department_.address), '%' + da + '%')\n      .ifPresent(predicates::add); /* \u3053\u3053\u3067department\u3092join (2\u56de\u76ee) */\n\n    // predicates\u304c\u7a7a\u306e\u6642\u306f\u672c\u5f53\u306f\u8003\u616e\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3051\u3069\u7701\u7565\n    return cb.and(predicates.stream().toArray(Predicate[]::new));\n  }\n```\n\n#### \u89e3\u6c7a\u7b56\nFrom\u304b\u3089join\u3092\u691c\u7d22\u3057\u3001\u306a\u3051\u308c\u3070join\u3057\u3066\u8fd4\u5374\n\u203b \u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306b`Join<?, ?>`\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u305b\u308b\u65b9\u6cd5\u306f\u4f7f\u3048\u306a\u3044\n\nJpa MetaModel\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308b\n\n```java\npublic static <X, Y> Join<X, Y> getOrCreateJoin(From<?, X> from,\n    SingularAttribute<? super X, Y> attribute, JoinType joinType) {\n\n  for (Join<X, ?> join : from.getJoins()) {\n\n    boolean sameName = join.getAttribute().equals(attribute);\n\n    if (sameName && join.getJoinType().equals(joinType)) {\n      return (Join<X, Y>) join;\n    }\n  }\n\n  return from.join(attribute, joinType);\n}\n```\n\n> \u4ee5\u4e0b\u3092\u53c2\u8003\n> http://stackoverflow.com/questions/21791793/query-from-combined-spring-data-specification-has-multiple-joins-on-same-table\n> \n> org.springframework.data.jpa.repository.query.QueryUtils\n\n# Flyway\n\n## \u672c\u756a\u74b0\u5883(\u975eWindows)\u3067\u53d6\u5f97\u3057\u305f\u30c0\u30f3\u30d7\u3092\u30ed\u30fc\u30ab\u30eb(Windows)\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3068\u305d\u306e\u5f8c\u306ebootRun\u3067\u843d\u3061\u308b\n\n### \u539f\u56e0\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067checksum\u306e\u7b97\u51fa\u7d50\u679c\u304c\u7570\u306a\u308b\u70ba\n\n### \u89e3\u6c7a\u7b56\n3.2.1\u4ee5\u524d\u306a\u3089\u624b\u52d5\u3067checksum\u3092\u5165\u308c\u76f4\u3059\n\n> 4.0.0\u3067\u4fee\u6b63\u3055\u308c\u308b\u3089\u3057\u3044\n> https://github.com/flyway/flyway/issues/253\n\n# Test\n\n## `ApplicationEventPublisher`\u3092`@MockBean`\u3067\u304d\u306a\u3044\n\n### \u539f\u56e0\n\uff08\u73fe\u5728\u306e\uff09spring-framework\u306e\u5236\u7d04\uff08\u3089\u3057\u3044\uff09\n\n### \u89e3\u6c7a\u7b56\n\u30c6\u30b9\u30c8\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a2d\u5b9a\u3092\u8aad\u307f\u8fbc\u3080\uff08\u3064\u307e\u308a1.3.x\u6642\u4ee3\u3068\u540c\u3058\uff09\n\n```java\n@Configuration\npublic class MockEventPublisherConfig {\n\n  @Bean\n  @Primary\n  public ApplicationEventPublisher eventPublisher() {\n    return Mockito.mock(ApplicationEventPublisher.class);\n  }\n}\n```\n\n```java\n@SpringBootTest(classes = {MockEventPublisherConfig.class, ...})\npublic class MyTest {\n  \n  @test \n  public void test() {\n    ...\n  }\n}\n```\n\n### \u53c2\u8003\n\n- \u5bfe\u5fdc\u3055\u308c\u308b\u304b\u3082\u3057\u308c\u306a\u3044issue\n  - https://jira.spring.io/browse/SPR-14335\n"}