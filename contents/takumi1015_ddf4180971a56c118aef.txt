{"tags": ["Erlang"], "context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981\u3068\u306a\u308b\u5e73\u57470,\u6a19\u6e96\u504f\u5dee1\u306e\u4e00\u69d8\u6b63\u898f\u5206\u5e03\u4e71\u6570\u3092N\u500b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092Erlang\u3067\u751f\u6210\u3059\u308b\u95a2\u6570\u306e\u30e1\u30e2\u3002\n\nSource\n\nndist.erl\n-module(ndist).\n-export([gen/1]).\n\n%% Box-Muller\u5909\u63db\u95a2\u6570\n%% \u3068\u308a\u3042\u3048\u305a\u7c21\u6613\u7684\u306bcos\u306e\u307f\u3002cos\u3092sin\u306b\u5909\u3048\u305f\u3082\u306e\u3092\u4f7f\u3063\u30662\u7cfb\u7d71\u306e\u751f\u6210\u304c\u53ef\u80fd\u3002\nbm(X,Y) when is_number(X),is_number(Y) ->\n  math:sqrt(-2.0 * math:log(X)) * math:cos(2 * math:pi() * Y).\n\n%% \u5fc5\u8981\u306a\u6570\u306e\u8981\u7d20\u3092\u4f5c\u6210\nseq(N) when is_integer(N) ->\n  [A * random:uniform() || A <- lists:duplicate(N,1)].\n\n%% \u4e71\u6570\u751f\u6210\ngen(N) when is_integer(N) ->\n  random:seed(now()),\n  [bm(X,Y) || {X,Y} <- lists:zip(seq(N),seq(N))];\ngen(_N) ->\n  false.\n\n\n\n\n\u4f7f\u3044\u65b9\n$ erl\n> c(ndist).                 # => {ok,ndist}\n> ndist:gen(100).           # => [0.12345,0.3214,-2.134...]\n> s * (ndist:gen(100) + m)  # => \u5e73\u5747\u5024m\u3001\u6a19\u6e96\u504f\u5dees\u306e\u4e00\u69d8\u6b63\u898f\u5206\u5e03\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u5834\u5408\n\n# \u6982\u8981\n\u30e2\u30f3\u30c6\u30ab\u30eb\u30ed\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981\u3068\u306a\u308b\u5e73\u57470,\u6a19\u6e96\u504f\u5dee1\u306e\u4e00\u69d8\u6b63\u898f\u5206\u5e03\u4e71\u6570\u3092N\u500b\u4e26\u3079\u305f\u30ea\u30b9\u30c8\u3092Erlang\u3067\u751f\u6210\u3059\u308b\u95a2\u6570\u306e\u30e1\u30e2\u3002\n\n# Source\n```erlang:ndist.erl\n-module(ndist).\n-export([gen/1]).\n\n%% Box-Muller\u5909\u63db\u95a2\u6570\n%% \u3068\u308a\u3042\u3048\u305a\u7c21\u6613\u7684\u306bcos\u306e\u307f\u3002cos\u3092sin\u306b\u5909\u3048\u305f\u3082\u306e\u3092\u4f7f\u3063\u30662\u7cfb\u7d71\u306e\u751f\u6210\u304c\u53ef\u80fd\u3002\nbm(X,Y) when is_number(X),is_number(Y) ->\n  math:sqrt(-2.0 * math:log(X)) * math:cos(2 * math:pi() * Y).\n\n%% \u5fc5\u8981\u306a\u6570\u306e\u8981\u7d20\u3092\u4f5c\u6210\nseq(N) when is_integer(N) ->\n  [A * random:uniform() || A <- lists:duplicate(N,1)].\n\n%% \u4e71\u6570\u751f\u6210\ngen(N) when is_integer(N) ->\n  random:seed(now()),\n  [bm(X,Y) || {X,Y} <- lists:zip(seq(N),seq(N))];\ngen(_N) ->\n  false.\n\n```\n\n# \u4f7f\u3044\u65b9\n```shell-session\n$ erl\n> c(ndist).                 # => {ok,ndist}\n> ndist:gen(100).           # => [0.12345,0.3214,-2.134...]\n> s * (ndist:gen(100) + m)  # => \u5e73\u5747\u5024m\u3001\u6a19\u6e96\u504f\u5dees\u306e\u4e00\u69d8\u6b63\u898f\u5206\u5e03\u4e71\u6570\u3092\u751f\u6210\u3059\u308b\u5834\u5408\n```\n\n"}