{"context": " More than 1 year has passed since last update.\u958b\u767a\u74b0\u5883\uff1aXcode6-Beta4\n\nSpriteKit\u3092\u3064\u304b\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\nGameScene.swift\n\nimport SpriteKit\n\nclass GameScene: SKScene {\n    var width: Int!\n\n    // \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u3092\u7528\u610f\u3059\u308b\u3002\n    var lastEnemy: CFTimeInterval!\n    var lastBullet: CFTimeInterval!\n\n    // \u30ce\u30fc\u30c9\u3092\u3044\u308c\u308b\u914d\u5217\u3092\u7528\u610f\n    var allEnemies: [SKNode] = []\n    var allDead: [SKNode] = []\n\n    // \u885d\u7a81\u5224\u5b9a\u7528\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n    let enemyCategory: UInt32 = 0x1 << 0\n    let bulletCategory: UInt32 = 0x1 << 1\n\n\n    override func didMoveToView(view: SKView) {\n        self.physicsWorld.gravity = CGVector(0, 0)\n\n        // width\u306b\u753b\u9762\u5e45\u5024\u3092\u5165\u308c\u3066\u304a\u304f\u3002\n        // self.width = Int(self.view.bounds.size.width)\u3068\u3057\u3066\u3082\u81ea\u52d5Scale\u304c\u52b9\u3044\u3066\u308b\u304b\u3089\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3068\u601d\u3046\u3002\n        // \u3053\u3053\u306e512\u3092\u3069\u3046\u51fa\u3059\u304b\u3002\u5225\u9014\u3084\u308a\u307e\u3059\u3002\u9762\u5012\u81ed\u3044\u304b\u3089iPhone 4s\u306a\u3089512\u3067\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3044\u3063\u305f\u3093\u5165\u308c\u3066\u304a\u304f\u3002\n        self.width = 512\n    }\n\n    // Step.1 \u6575\u3092\u751f\u6210\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func createEnemy() {\n\n        // \u6575\u306ex\u5ea7\u6a19\u3092\u3064\u304f\u308b\u3002\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u3002\n        var xPos = UInt(CGRectGetMidX(self.frame))\n            + UInt(arc4random_uniform(UInt32(self.width)))\n            - UInt(self.width / 2)\n\n        var location = CGPoint(x: CGFloat(xPos), y: CGRectGetMaxY(self.frame))\n\n        var enemy = SKSpriteNode(color: UIColor.redColor(), size: CGSizeMake(60, 40))\n        enemy.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(60, 40))\n        enemy.physicsBody.velocity = CGVector(0, -80)\n        enemy.physicsBody.linearDamping = false\n        enemy.physicsBody.categoryBitMask = enemyCategory\n        enemy.physicsBody.collisionBitMask = enemyCategory\n        enemy.name = \"enemy\"\n        enemy.position = location\n        self.addChild(enemy)\n    }\n\n    // Step.2 \u751f\u304d\u3066\u3044\u308b\uff08\u753b\u9762\u306e\u4e2d\u306b\u3044\u308b\uff09\u6575\u30ce\u30fc\u30c9\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func makeEnemyArray() {\n        self.allEnemies.removeAll()\n        self.allDead.removeAll()\n\n        // \u6575\u3092allEnemies\u306b\u683c\u7d0d\u3057\u3066\u3044\u304f\u3002\n        self.enumerateChildNodesWithName(\"enemy\") {\n            node, stop in\n\n            if node.position.y < 0 {\n                self.allDead.append(node)\n            } else {\n                self.allEnemies.append(node)\n            }\n        }\n    }\n\n    // Step.3 \u6575\u304c\u5149\u5f3e\u3092\u6483\u3064\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func createBullet() {\n\n        // \u307e\u305a\u306f\u5149\u5f3e\u3092\u653e\u3064\u6575\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u9078\u629e\u3059\u308b\u305f\u3081\u306b\u3002\n        let cnt = allEnemies.count\n        let index = arc4random_uniform(UInt32(cnt))\n\n        // \u6575\u304c\u5c45\u308b\u306a\u3089\u3001\u5149\u5f3e\u3092\u751f\u6210\u3059\u308b\u3002\n        if allEnemies != [] {\n            var attackEnemy = allEnemies[Int(index)]\n\n            // \u5149\u5f3e\u3092\u4f5c\u6210\n            let bullet = SKSpriteNode(color: UIColor.yellowColor(), size: CGSizeMake(10, 10))\n            bullet.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(10, 10))\n            bullet.physicsBody.velocity = CGVectorMake(0, -400)\n            bullet.physicsBody.affectedByGravity = false\n            bullet.physicsBody.categoryBitMask = bulletCategory\n            bullet.physicsBody.collisionBitMask = bulletCategory\n            bullet.position = attackEnemy.position\n            self.addChild(bullet)\n        }\n    }\n\n    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {}\n\n    override func update(currentTime: CFTimeInterval) {\n\n        if !lastEnemy {\n            lastEnemy = currentTime\n        }\n        if !lastBullet {\n            lastBullet = currentTime\n        }\n\n        // 0.8\u79d2\u9593\u9694\u3067\u6575\u3092\u751f\u6210\u3059\u308b\u3002\n        if lastEnemy + 0.8 <= currentTime {\n            self.createEnemy()\n            lastEnemy = currentTime\n        }\n\n        // 0.2\u79d2\u9593\u9694\u3067\u5149\u5f3e\u3092\u751f\u6210\u3059\u308b\u3002\n        if lastBullet + 0.1 <= currentTime {\n            self.createBullet()\n            lastBullet = currentTime\n        }\n\n        // \u5e38\u6642\u3001allEnemies\u3092\u66f4\u65b0\u3001\u753b\u9762\u5916\u306e\u6575\u3092\u524a\u9664\u3059\u308b\u3002\n        self.makeEnemyArray()\n        for dead in self.allDead {\n            dead.removeFromParent()\n        }\n    }\n}\n\n\n\n\u88dc\u8db3\uff08\u753b\u9762\u5e45\u306b\u3064\u3044\u3066\uff09\nwidth\u306b\u753b\u9762\u5e45\u5024\u3092\u5165\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\nself.width = Int(self.view.bounds.size.width)\n\u3068\u3057\u3066\u3082\u81ea\u52d5Scale\u304c\u52b9\u3044\u3066\u308b\u304b\u3089\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u300ciPhone 4s\u300d\u306a\u3089512\u306b\u3057\u3066\u304a\u3051\u3070\u4e00\u65e6\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3001\u3044\u3063\u305f\u3093\u305d\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3002\n\u958b\u767a\u74b0\u5883\uff1aXcode6-Beta4\n\n\n![testBullet.gif](https://qiita-image-store.s3.amazonaws.com/0/45822/c1b2eb61-15e9-2e20-393c-23f78e418ea8.gif)\n\nSpriteKit\u3092\u3064\u304b\u3063\u3066\u304a\u308a\u307e\u3059\u3002\n\n\n```swift:GameScene.swift\n\nimport SpriteKit\n\nclass GameScene: SKScene {\n    var width: Int!\n    \n    // \u30a4\u30f3\u30bf\u30fc\u30d0\u30eb\u3092\u7528\u610f\u3059\u308b\u3002\n    var lastEnemy: CFTimeInterval!\n    var lastBullet: CFTimeInterval!\n    \n    // \u30ce\u30fc\u30c9\u3092\u3044\u308c\u308b\u914d\u5217\u3092\u7528\u610f\n    var allEnemies: [SKNode] = []\n    var allDead: [SKNode] = []\n    \n    // \u885d\u7a81\u5224\u5b9a\u7528\u306e\u30ab\u30c6\u30b4\u30ea\u3092\u7528\u610f\u3057\u3066\u304a\u304f\n    let enemyCategory: UInt32 = 0x1 << 0\n    let bulletCategory: UInt32 = 0x1 << 1\n    \n    \n    override func didMoveToView(view: SKView) {\n        self.physicsWorld.gravity = CGVector(0, 0)\n        \n        // width\u306b\u753b\u9762\u5e45\u5024\u3092\u5165\u308c\u3066\u304a\u304f\u3002\n        // self.width = Int(self.view.bounds.size.width)\u3068\u3057\u3066\u3082\u81ea\u52d5Scale\u304c\u52b9\u3044\u3066\u308b\u304b\u3089\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3068\u601d\u3046\u3002\n        // \u3053\u3053\u306e512\u3092\u3069\u3046\u51fa\u3059\u304b\u3002\u5225\u9014\u3084\u308a\u307e\u3059\u3002\u9762\u5012\u81ed\u3044\u304b\u3089iPhone 4s\u306a\u3089512\u3067\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3044\u3063\u305f\u3093\u5165\u308c\u3066\u304a\u304f\u3002\n        self.width = 512\n    }\n    \n    // Step.1 \u6575\u3092\u751f\u6210\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func createEnemy() {\n        \n        // \u6575\u306ex\u5ea7\u6a19\u3092\u3064\u304f\u308b\u3002\u3081\u3093\u3069\u304f\u3055\u3044\u3002\u3002\n        var xPos = UInt(CGRectGetMidX(self.frame))\n            + UInt(arc4random_uniform(UInt32(self.width)))\n            - UInt(self.width / 2)\n        \n        var location = CGPoint(x: CGFloat(xPos), y: CGRectGetMaxY(self.frame))\n        \n        var enemy = SKSpriteNode(color: UIColor.redColor(), size: CGSizeMake(60, 40))\n        enemy.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(60, 40))\n        enemy.physicsBody.velocity = CGVector(0, -80)\n        enemy.physicsBody.linearDamping = false\n        enemy.physicsBody.categoryBitMask = enemyCategory\n        enemy.physicsBody.collisionBitMask = enemyCategory\n        enemy.name = \"enemy\"\n        enemy.position = location\n        self.addChild(enemy)\n    }\n    \n    // Step.2 \u751f\u304d\u3066\u3044\u308b\uff08\u753b\u9762\u306e\u4e2d\u306b\u3044\u308b\uff09\u6575\u30ce\u30fc\u30c9\u306e\u914d\u5217\u3092\u4f5c\u6210\u3059\u308b\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func makeEnemyArray() {\n        self.allEnemies.removeAll()\n        self.allDead.removeAll()\n        \n        // \u6575\u3092allEnemies\u306b\u683c\u7d0d\u3057\u3066\u3044\u304f\u3002\n        self.enumerateChildNodesWithName(\"enemy\") {\n            node, stop in\n            \n            if node.position.y < 0 {\n                self.allDead.append(node)\n            } else {\n                self.allEnemies.append(node)\n            }\n        }\n    }\n    \n    // Step.3 \u6575\u304c\u5149\u5f3e\u3092\u6483\u3064\u30a2\u30af\u30b7\u30e7\u30f3\u3002\n    func createBullet() {\n        \n        // \u307e\u305a\u306f\u5149\u5f3e\u3092\u653e\u3064\u6575\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u9078\u629e\u3059\u308b\u305f\u3081\u306b\u3002\n        let cnt = allEnemies.count\n        let index = arc4random_uniform(UInt32(cnt))\n        \n        // \u6575\u304c\u5c45\u308b\u306a\u3089\u3001\u5149\u5f3e\u3092\u751f\u6210\u3059\u308b\u3002\n        if allEnemies != [] {\n            var attackEnemy = allEnemies[Int(index)]\n\n            // \u5149\u5f3e\u3092\u4f5c\u6210\n            let bullet = SKSpriteNode(color: UIColor.yellowColor(), size: CGSizeMake(10, 10))\n            bullet.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(10, 10))\n            bullet.physicsBody.velocity = CGVectorMake(0, -400)\n            bullet.physicsBody.affectedByGravity = false\n            bullet.physicsBody.categoryBitMask = bulletCategory\n            bullet.physicsBody.collisionBitMask = bulletCategory\n            bullet.position = attackEnemy.position\n            self.addChild(bullet)\n        }\n    }\n    \n    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {}\n    \n    override func update(currentTime: CFTimeInterval) {\n        \n        if !lastEnemy {\n            lastEnemy = currentTime\n        }\n        if !lastBullet {\n            lastBullet = currentTime\n        }\n        \n        // 0.8\u79d2\u9593\u9694\u3067\u6575\u3092\u751f\u6210\u3059\u308b\u3002\n        if lastEnemy + 0.8 <= currentTime {\n            self.createEnemy()\n            lastEnemy = currentTime\n        }\n        \n        // 0.2\u79d2\u9593\u9694\u3067\u5149\u5f3e\u3092\u751f\u6210\u3059\u308b\u3002\n        if lastBullet + 0.1 <= currentTime {\n            self.createBullet()\n            lastBullet = currentTime\n        }\n        \n        // \u5e38\u6642\u3001allEnemies\u3092\u66f4\u65b0\u3001\u753b\u9762\u5916\u306e\u6575\u3092\u524a\u9664\u3059\u308b\u3002\n        self.makeEnemyArray()\n        for dead in self.allDead {\n            dead.removeFromParent()\n        }\n    }\n}\n```\n\n### \u88dc\u8db3\uff08\u753b\u9762\u5e45\u306b\u3064\u3044\u3066\uff09\n\nwidth\u306b\u753b\u9762\u5e45\u5024\u3092\u5165\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\n`self.width = Int(self.view.bounds.size.width)`\n\u3068\u3057\u3066\u3082\u81ea\u52d5Scale\u304c\u52b9\u3044\u3066\u308b\u304b\u3089\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u300ciPhone 4s\u300d\u306a\u3089512\u306b\u3057\u3066\u304a\u3051\u3070\u4e00\u65e6\u4e0a\u624b\u304f\u3044\u304f\u306e\u3067\u3001\u3044\u3063\u305f\u3093\u305d\u306e\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u3002\n", "tags": ["Swift", "Xcode6 Beta4", "SpriteKit"]}