{"context": " More than 1 year has passed since last update.\u30b0\u30b0\u308c\u3070\u51fa\u3066\u304f\u308b\u306e\u3067\u4eca\u66f4\u611f\u306f\u5426\u3081\u306a\u3044\u306e\u3067\u3059\u304c\u3001Reflection \u3092\u5229\u7528\u3057\u3066\u5b9f\u73fe\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u306d\u3002\u305f\u3060\u3001TestCase\u306e\u8a18\u8ff0\u306b\u306f\u6642\u9593\u3092\u304b\u3051\u305f\u304f\u306a\u3044\u3082\u306e\u3067\u3059\u3002\n\nexampleClass.php\n\n<?php\nclass Example\n{\n    private function sampleMethod()\n    {\n        return true;\n    }\n}\n\n\n\nexampleClassTest.php\nclass function ExampleTest\n{\n    protected $object;\n\n    protected function setUp()\n    {\n        $this->object = new Example;\n    }\n\n    public function sampleMethodTest()\n    {\n        $reflection = new \\ReflectionClass($this->object);\n        $method = $reflection->getMethod('sampleMethod');\n        $method->setAccessible(true);\n        $res = $method->invoke($this->object);\n        $this->assertTrue($res);\n    }\n}\n\n\n\u307e\u3042\u3001\u3053\u3093\u306a\u5177\u5408\u2026\u3002\n\u305a\u307c\u3089\u306a\u3093\u3067\u3001\u3053\u306e\uff15\u884c\u304c\u9762\u5012\u304f\u3055\u3044\u3002\n\u305d\u3053\u3067\u3001\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ntrait.php\n<?php\ntrait CommonTrait\n{\n    public function __call($name, $arguments = array())\n    {\n        if (MODE === TEST) {\n            $reflection = new \\ReflectionClass($this);\n            $method = $reflection->getMethod($name);\n            $method->setAccessible(true);\n            return $method->invokeArgs($this, $arguments);\n        } else {\n            $msg = '\u30a2\u30af\u30bb\u30b9\u4e0d\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002';\n            throw new Exception($msg);\n        }\n    }\n\n    public static function __callStatic($name, $arguments = array())\n    {\n        if (MODE === TEST) {\n            return $this->__call($name, $arguments);\n        } else {\n            $msg = '\u30a2\u30af\u30bb\u30b9\u4e0d\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002';\n            throw new Exception($msg);\n        }\n    }\n\n\n\n\nexampleClass.php\n\n<?php\nclass Example\n{\n    use CommonTrait;\n\n    private function sampleMethod()\n    {\n        return true;\n    }\n}\n\n\n\nexampleClassTest.php\n<?php\nclass function ExampleTest\n{\n    protected $object;\n\n    protected function setUp()\n    {\n        $this->object = new Example;\n    }\n\n    public function sampleMethodTest()\n    {\n        $res = $this->object->sampleMethod();\n        $this->assertTrue($res);\n    }\n}\n\n\n\u5b9a\u6570\u306eMODE, TEST\u306f\u5b9f\u884c\u74b0\u5883\u304c\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u3068\u3001\u3044\u3064\u3067\u3082private, protected \u306a method \u304c\u5b9f\u884c\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u2026\u3002\n\u5b9f\u884c\u30e2\u30fc\u30c9\u306fbootstrap.php \u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3060\u3051\u3067\u3059\u306d\u3002\n\nbootstrap.php\n<?php\nini_set('include_path'\n    , ini_get('include_path')\n    . PATH_SEPARATOR . '/usr/share/pear'\n);\n\n//  \u30c6\u30b9\u30c8\u74b0\u5883\nif (!defined('TEST')) {\n    define('TEST', 1);\n}\n//  \u958b\u767a\u74b0\u5883\nif (!defined('DEVELOPPING')) {\n    define('DEVELOPPING', 2);\n}\n//  \u672c\u756a\u74b0\u5883\nif (!defined('PRODUCTION')) {\n    define('PRODUCTION', 3);\n}\n//  \u5b9f\u884c\u30e2\u30fc\u30c9\ndefine('MODE', TEST);\n\n\n\n\u30b0\u30b0\u308c\u3070\u51fa\u3066\u304f\u308b\u306e\u3067\u4eca\u66f4\u611f\u306f\u5426\u3081\u306a\u3044\u306e\u3067\u3059\u304c\u3001Reflection \u3092\u5229\u7528\u3057\u3066\u5b9f\u73fe\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u306d\u3002\u305f\u3060\u3001TestCase\u306e\u8a18\u8ff0\u306b\u306f\u6642\u9593\u3092\u304b\u3051\u305f\u304f\u306a\u3044\u3082\u306e\u3067\u3059\u3002\n\n```php:exampleClass.php\n\n<?php\nclass Example\n{\n\tprivate function sampleMethod()\n\t{\n\t\treturn true;\n\t}\n}\n```\n\n```php:exampleClassTest.php\nclass function ExampleTest\n{\n\tprotected $object;\n\t\n\tprotected function setUp()\n\t{\n\t\t$this->object = new Example;\n\t}\n\t\n\tpublic function sampleMethodTest()\n\t{\n\t\t$reflection = new \\ReflectionClass($this->object);\n\t\t$method = $reflection->getMethod('sampleMethod');\n\t\t$method->setAccessible(true);\n\t\t$res = $method->invoke($this->object);\n\t\t$this->assertTrue($res);\n\t}\n}\n```\n\n\u307e\u3042\u3001\u3053\u3093\u306a\u5177\u5408\u2026\u3002\n\n\u305a\u307c\u3089\u306a\u3093\u3067\u3001\u3053\u306e\uff15\u884c\u304c\u9762\u5012\u304f\u3055\u3044\u3002\n\u305d\u3053\u3067\u3001\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```php:trait.php\n<?php\ntrait CommonTrait\n{\n\tpublic function __call($name, $arguments = array())\n\t{\n\t\tif (MODE === TEST) {\n\t\t\t$reflection = new \\ReflectionClass($this);\n\t\t\t$method = $reflection->getMethod($name);\n\t\t\t$method->setAccessible(true);\n\t\t\treturn $method->invokeArgs($this, $arguments);\n\t\t} else {\n\t\t\t$msg = '\u30a2\u30af\u30bb\u30b9\u4e0d\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002';\n\t\t\tthrow new Exception($msg);\n\t\t}\n\t}\n\n\tpublic static function __callStatic($name, $arguments = array())\n\t{\n\t\tif (MODE === TEST) {\n\t\t\treturn $this->__call($name, $arguments);\n\t\t} else {\n\t\t\t$msg = '\u30a2\u30af\u30bb\u30b9\u4e0d\u80fd\u306a\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3057\u307e\u3057\u305f\u3002';\n\t\t\tthrow new Exception($msg);\n\t\t}\n\t}\n\n```\n\n\n```php:exampleClass.php\n\n<?php\nclass Example\n{\n\tuse CommonTrait;\n\t\n\tprivate function sampleMethod()\n\t{\n\t\treturn true;\n\t}\n}\n```\n\n```php:exampleClassTest.php\n<?php\nclass function ExampleTest\n{\n\tprotected $object;\n\t\n\tprotected function setUp()\n\t{\n\t\t$this->object = new Example;\n\t}\n\t\n\tpublic function sampleMethodTest()\n\t{\n\t\t$res = $this->object->sampleMethod();\n\t\t$this->assertTrue($res);\n\t}\n}\n```\n\n\u5b9a\u6570\u306eMODE, TEST\u306f\u5b9f\u884c\u74b0\u5883\u304c\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u3042\u308b\u3053\u3068\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3046\u3067\u306a\u3044\u3068\u3001\u3044\u3064\u3067\u3082private, protected \u306a method \u304c\u5b9f\u884c\u3067\u304d\u3066\u3057\u307e\u3046\u306e\u3067\u2026\u3002\n\n\u5b9f\u884c\u30e2\u30fc\u30c9\u306fbootstrap.php \u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3060\u3051\u3067\u3059\u306d\u3002\n\n```php:bootstrap.php\n<?php\nini_set('include_path'\n\t, ini_get('include_path')\n\t. PATH_SEPARATOR . '/usr/share/pear'\n);\n\n//\t\u30c6\u30b9\u30c8\u74b0\u5883\nif (!defined('TEST')) {\n\tdefine('TEST', 1);\n}\n//\t\u958b\u767a\u74b0\u5883\nif (!defined('DEVELOPPING')) {\n\tdefine('DEVELOPPING', 2);\n}\n//\t\u672c\u756a\u74b0\u5883\nif (!defined('PRODUCTION')) {\n\tdefine('PRODUCTION', 3);\n}\n//\t\u5b9f\u884c\u30e2\u30fc\u30c9\ndefine('MODE', TEST);\n```\n", "tags": ["PHPUnit", "Protected", "private", "PHP"]}