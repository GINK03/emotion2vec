{"context": " More than 1 year has passed since last update.\n\nParse\u3068\u306f\u306a\u3093\u305e\u3084\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092swift(Obj-c)\u3060\u3051\u3067\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u3066\u3057\u307e\u3046\u3082\u306e\u3002\n\u3053\u3053\u3067\u306f\u3056\u3063\u304f\u308a\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306fParse iOS Guid\u3092\u307f\u3066\u4e0b\u3055\u3044\u3002\nParse\u306eDB\u306e\u63a5\u7d9a\u90e8\u5206\u3060\u3051\u898b\u305f\u3044\u65b9\u306f\u76ee\u6b21\u306e[ParseDB\u9023\u643a]\u3067\u98db\u3093\u3067\u4e0b\u3055\u3044\u3002\n\n\u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\nTwitter\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u306a\u304c\u3089\u3001Parse\u306e\u3042\u308a\u304c\u305f\u3055\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u30e1\u30a4\u30f3\u306fParse\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bDB(\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\u306b\u4fdd\u5b58\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n\nParse.com\u306b\u65b0\u898f\u767b\u9332\n\u307e\u305a\u306f\u3001Parse.com\u306b\u767b\u9332\u3057\u307e\u3059\u3002 \n\u767b\u9332\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30db\u30fc\u30e0\u753b\u9762\u306e\u53f3\u4e0a\u306e\u300eGo to your apps\u300f\u3092\u30af\u30ea\u30c3\u30af\u3002\n\n\n\u6b21\u306e\u753b\u9762\u3067\u306f\u3001Parse\u4e0a\u306b\u30a2\u30d7\u30ea\u65b0\u3057\u304f\u4f5c\u308a\u307e\u3059\u3002\u305d\u306e\u6642\u306b\u3001\u30a2\u30d7\u30ea\u540d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\n\u4f5c\u6210\u3055\u308c\u305f\u30a2\u30d7\u30ea\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068...\n\n\n\u30a2\u30d7\u30ea\u306e\u7ba1\u7406\u30da\u30fc\u30b8\u304c\u767b\u5834\n\n\u3053\u3053\u306e\u30da\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u306a\u3069\u3092\u78ba\u8a8d\u3059\u308b\u308f\u3051\u3067\u3059\u306d\u3048\u3002\n\u3053\u3053\u307e\u3067\u3067\u3001\u4e00\u65e6Parse\u5074\u306e\u64cd\u4f5c\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n\nXcode\u5074\u3067\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001Xcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\nSDK\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bParse\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3001SDK\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\nPrase.com\u306b\u623b\u308a\u3001\u30a2\u30d7\u30ea\u7ba1\u7406\u30da\u30fc\u30b8\u306e\u4e0b\u90e8\u306e[Downloads]\u3092\u30af\u30ea\u30c3\u30af\n\n\nSDK\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001SDK\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u51cd\u3057\u3001\u305d\u306e\u4e2d\u306e\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092Xcode\u306b\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n\nParse.framework\nBolts.framework\n\n\n\u305d\u306e\u4ed6\u306e\u5fc5\u8981\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\u5148\u7a0b\u306e\uff12\u3064\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u4ee5\u5916\u306b\u5fc5\u8981\u306a\u3082\u306e\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3001Linked Frameworks and Libraries \u307e\u3067\u884c\u304d\u3001\u5fc5\u8981\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u8ffd\u52a0\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u4ee5\u4e0b\u306e\u3082\u306e\u3067\u3059\u3002\n\nAudioToolbox.framework\nCFNetwork.framework\nCoreGraphics.framework\nCoreLocation.framework\nMobileCoreServices.framework\nQuartzCore.framework\nSecurity.framework\nStoreKit.framework\nSystemConfiguration.framework\nlibsqlite3.dylib\nlibz.dylib\n\n\nParse\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u3068Xcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7d10\u4ed8\u3051\n\u73fe\u6bb5\u968e\u3067\u306f\u3001Parse.com\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u3068\u3001Xcode\u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\nParse.com\u3067\u767a\u884c\u3055\u308c\u308b\u3001key\u3092\u7528\u3044\u3066\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\nParse.com\n\n\nApplication ID\nClient Key\n\n\u3053\u306e\uff12\u3064\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nXcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\nAppDelegate.swift\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\nimport UIKit\nimport Parse   //Parse\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n\n        //Parse\u3067\u53d6\u5f97\u3057\u305f[Application ID]\u3068[Client Key]\u3092\u6307\u5b9a\n        Parse.setApplicationId(\"[Application ID]\", clientKey: \"[Client Key]\")\n\n        return true\n    }\n\n\n\u4ee5\u4e0a\u306e\u64cd\u4f5c\u3067\u3001\u9023\u643a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\nUI\u306e\u4f5c\u6210\u3068\u5fc5\u8981\u306aSwift\u30d5\u30a1\u30a4\u30eb\u306e\u8ffd\u52a0\nMain.storyboard\u4e0a\u306f\u3056\u3063\u304f\u308a\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\n\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nModels\n\n\nTweet.swift(NSObject)\nTweetManager.swift(NSObject)\n\n\nViews\n\n\nTweetTableViewCell.swift(UITableViewCell)\nTweetTableViewCell.xib\n\n\n\nViewControllers\n\n\nTweetsTableViewController.swift(UITableViewController)\nNewTweetViewController.swfit(UIViewController)\n\n\n\n\n\u4eca\u56de\u306f\u3001Parse\u3067\u7528\u610f\u3055\u3048\u305fDB\u3068\u306e\u63a5\u7d9a\u304c\u30e1\u30a4\u30f3\u306a\u306e\u3067\u3001\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306f\u3056\u3056\u3056\u3063\u3068\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\nTweet.swft\nimport UIKit\nimport Parse\n\nclass Tweet: NSObject {\n    var name: String!\n    var text: String!\n\n    init(name: String, text: String) {\n        self.name = name\n        self.text = text\n    }\n\n    func saveTweet() {\n        //\u5f8c\u307b\u3069Parse\u306edb\u306b\u4fdd\u5b58\u3059\u308b\u51e6\u7406\u3092\u66f8\u304f\n    }\n}\n\n\n\nTweetManager.swift\nimport UIKit\nimport Parse\n\nclass TweetManager: NSObject {\n\n    var tweets: Array<Tweet> = []\n    static let sharedInstance = TweetManager()\n\n    func fetchTweets(callback: () -> Void) {\n        //\u5f8c\u307b\u3069Parse\u306edb\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u8a18\u8ff0    \n    }\n}\n\n\n\n\nTweetTableViewCell.swift\nimport UIKit\n\nclass TweetTableViewCell: UITableViewCell {\n    @IBOutlet weak var tweetLabel: UILabel!\n    @IBOutlet weak var nameLabel: UILabel!\n    @IBOutlet weak var tweetImageView: UIImageView!\n\n    override func awakeFromNib() {\n        super.awakeFromNib()\n        // Initialization code\n        tweetLabel.numberOfLines = 0\n        tweetImageView.clipsToBounds = true\n        tweetImageView.contentMode = UIViewContentMode.ScaleAspectFill\n    }\n\n    override func setSelected(selected: Bool, animated: Bool) {\n        super.setSelected(selected, animated: animated)\n\n        // Configure the view for the selected state\n    }\n\n}\n\n\n\nimport UIKit\n\nclass TweetsTableViewController: UITableViewController {\n\n    let tweetCollection = TweetManager.sharedInstance\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        tableView.registerNib(UINib(nibName: \"TweetTableViewCell\", bundle: nil), forCellReuseIdentifier: \"TweetTableViewCell\")\n        tableView.estimatedRowHeight = 90\n        tableView.rowHeight = UITableViewAutomaticDimension\n    }\n\n    override func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        navigationItem.rightBarButtonItem = UIBarButtonItem(title: \"New\", style: UIBarButtonItemStyle.Plain, target: self, action: \"showNewTweetViewController\")\n        let callback = { () -> Void in\n            self.tableView.reloadData()\n        }\n        tweetCollection.fetchTweets(callback)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n\n    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n        return 1\n    }\n\n    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return tweetCollection.tweets.count\n    }\n\n    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCellWithIdentifier(\"TweetTableViewCell\", forIndexPath: indexPath) as! TweetTableViewCell\n        let tweet = tweetCollection.tweets[indexPath.row]\n        cell.tweetImageView.image = UIImage(named: \"omoto\")\n        cell.nameLabel.text = tweet.name\n        cell.tweetLabel.text = tweet.text\n        return cell\n    }\n\n    func showNewTweetViewController() {\n        performSegueWithIdentifier(\"toNewViewController\", sender: nil)\n    }\n\n    override func preferredStatusBarStyle() -> UIStatusBarStyle {\n        return UIStatusBarStyle.LightContent\n    }\n}\n\n\n\nNewTweetViewController.swift\nimport UIKit\n\nclass NewTweetViewController: UIViewController, UITextViewDelegate {\n\n    @IBOutlet weak var placeholderLabel: UILabel!\n    @IBOutlet weak var tweetButton: UIButton!\n    @IBOutlet weak var tweetTextView: UITextView!\n    @IBOutlet weak var nameTextfield: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        tweetTextView.delegate = self\n        tweetButton.layer.cornerRadius = 5\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n\n    func textViewShouldBeginEditing(textView: UITextView) -> Bool {\n        placeholderLabel.hidden = true\n        return true\n    }\n\n    func textViewShouldEndEditing(textView: UITextView) -> Bool {\n        if textView.text.isEmpty {\n            placeholderLabel.hidden = false\n        }\n        return true\n    }\n\n    @IBAction func tapTweetButton(sender: UIButton) {\n        if nameTextfield.text.isEmpty || tweetTextView.text.isEmpty {\n            println(\"Name or text is empty\")\n        } else {\n            let tweet = Tweet(name: nameTextfield.text, text: tweetTextView.text)\n            tweet.saveTweet()\n            navigationController?.popViewControllerAnimated(true)\n        }\n    }\n}\n\n\n\n\u4e00\u65e6\u3053\u3053\u307e\u3067\u3002\n\nParse\u306eDB\u9023\u643a\n\u3044\u3088\u3044\u3088\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\nDB\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\nTweet.swift\u306esaveTweet()\u3092\u7de8\u96c6\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nTweet.swft\nimport UIKit\nimport Parse\n\nclass Tweet: NSObject {\n    var name: String!\n    var text: String!\n\n    init(name: String, text: String) {\n        self.name = name\n        self.text = text\n    }\n\n    func saveTweet() {\n        let tweetsObject = PFObject(className: \"tweets\")\n        tweetsObject[\"name\"] = name\n        tweetsObject[\"text\"] = text\n        tweetsObject.saveInBackgroundWithBlock { (success, error) -> Void in\n            if success {\n                println(\"Tweet has been saved\")\n            }\n        }\n    }\n}\n\n\n\u305d\u308c\u305e\u308c\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nPFObject(className: \"tweets\")\u3067\u306f\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30af\u30e9\u30b9\u304cParse\u4e0a\u306b\u5b58\u5728\u3059\u308c\u3070\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3001\u7121\u3051\u308c\u3070\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\ntweetsObject[\"name\"] = name\u3067\u306f\u3001\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b name \u3068\u3044\u3046\u540d\u524d\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3001\u5024\u3092\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306bsaveInBackgroundWithBlock()\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u3001\u975e\u540c\u671f\u3067DB\u306b\u5024\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\nDB\u304b\u3089\u5024\u306e\u53d6\u5f97\n\u7d9a\u3044\u3066\u3001\u4fdd\u5b58\u3057\u305f\u5024\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002TweetManager.swift\u306efetchTweets()\u30e1\u30bd\u30c3\u30c9\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\nTweetManager.swift\nimport UIKit\nimport Parse\n\nclass TweetManager: NSObject {\n\n    var tweets: Array<Tweet> = []\n    static let sharedInstance = TweetManager()\n\n    func fetchTweets(callback: () -> Void) {\n        let query = PFQuery(className: \"tweets\")\n        query.orderByDescending(\"createdAt\")\n        query.findObjectsInBackgroundWithBlock { (tweets, error) -> Void in\n            if error == nil {\n                self.tweets = []\n                for tweet in tweets as! Array<PFObject> {\n                    let name = tweet[\"name\"] as! String\n                    let text = tweet[\"text\"] as! String\n                    let tweet = Tweet(name: name, text: text)\n                    self.tweets.append(tweet)\n                }\n                callback()\n            }\n        }    \n    }\n}\n\n\n\n\nlet query = PFQuery(className: \"tweets\")\nDB\u304b\u3089\u4f5c\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u3001PFQuery\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nquery.orderByDescending(\"createdAt\")\n\u53d6\u5f97\u3057\u305f\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e26\u3073\u66ff\u3048\u3066\u3044\u307e\u3059\u3002\nfindObjectsInBackgroundWithBlock()\u30e1\u30bd\u30c3\u30c9\u306b\u3066DB\u304b\u3089\u5b9f\u969b\u306b\u30c4\u30a4\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u5168\u3066\u975e\u540c\u671f\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u5f8c\u306f\u53d6\u5f97\u3059\u305f\u30c4\u30a4\u30fc\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u305fTweet\u30e2\u30c7\u30eb\u306b\u5909\u63db\u3057\u3001\u914d\u5217\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\nParse\u4e0a\u3067\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\n\n\u30c4\u30a4\u30fc\u30c8\u3057\u305f\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n\u6b21\u56de\u4e88\u544a\n\u6b21\u56de\u306fParse\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u3061\u3083\u3046\u305e\u3048\n\n#Parse\u3068\u306f\u306a\u3093\u305e\u3084\n\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092swift(Obj-c)\u3060\u3051\u3067\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u3066\u3057\u307e\u3046\u3082\u306e\u3002\n\n\u3053\u3053\u3067\u306f\u3056\u3063\u304f\u308a\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f[Parse iOS Guid](https://parse.com/docs/jp/ios/guide)\u3092\u307f\u3066\u4e0b\u3055\u3044\u3002\n\nParse\u306eDB\u306e\u63a5\u7d9a\u90e8\u5206\u3060\u3051\u898b\u305f\u3044\u65b9\u306f\u76ee\u6b21\u306e[ParseDB\u9023\u643a]\u3067\u98db\u3093\u3067\u4e0b\u3055\u3044\u3002\n\n\n\n# \u4f5c\u6210\u3059\u308b\u30a2\u30d7\u30ea\n\nTwitter\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3057\u306a\u304c\u3089\u3001Parse\u306e\u3042\u308a\u304c\u305f\u3055\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u30e1\u30a4\u30f3\u306fParse\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308bDB(\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9)\u306b\u4fdd\u5b58\u3059\u308b\u3068\u3053\u308d\u3067\u3059\u306d\u3002\n\n![\u540d\u79f0\u672a\u8a2d\u5b9a.png](https://qiita-image-store.s3.amazonaws.com/0/48036/8d67e521-74ec-dadb-4737-a66439cfd973.png \"\u540d\u79f0\u672a\u8a2d\u5b9a.png\")\n\n\n\n\n# Parse.com\u306b\u65b0\u898f\u767b\u9332\n\n\u307e\u305a\u306f\u3001[Parse.com](https://parse.com/)\u306b\u767b\u9332\u3057\u307e\u3059\u3002 \n\n\u767b\u9332\u5b8c\u4e86\u3057\u305f\u3089\u3001\u30db\u30fc\u30e0\u753b\u9762\u306e\u53f3\u4e0a\u306e\u300eGo to your apps\u300f\u3092\u30af\u30ea\u30c3\u30af\u3002\n\n![Parse_\u3068_Parse\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046.png](https://qiita-image-store.s3.amazonaws.com/0/48036/89547a42-9ff0-2247-62da-9d11d5f87848.png \"Parse_\u3068_Parse\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046.png\")\n\n<br>\n\n\u6b21\u306e\u753b\u9762\u3067\u306f\u3001Parse\u4e0a\u306b\u30a2\u30d7\u30ea\u65b0\u3057\u304f\u4f5c\u308a\u307e\u3059\u3002\u305d\u306e\u6642\u306b\u3001\u30a2\u30d7\u30ea\u540d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n![Home___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/00bac396-3806-4a5a-f069-6e919b9e6f4c.png \"Home___Parse.png\")\n\n<br>\n\n\u4f5c\u6210\u3055\u308c\u305f\u30a2\u30d7\u30ea\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068...\n\n![Home___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/aad3a307-2cba-b0c9-e7df-56768df74bd7.png \"Home___Parse.png\")\n\n<br>\n\n\u30a2\u30d7\u30ea\u306e\u7ba1\u7406\u30da\u30fc\u30b8\u304c\u767b\u5834\n\n![Analytics___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/66c06abd-ce79-93cc-2f02-e8c324726ed5.png \"Analytics___Parse.png\")\n\n\n\u3053\u3053\u306e\u30da\u30fc\u30b8\u3067\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u306a\u3069\u3092\u78ba\u8a8d\u3059\u308b\u308f\u3051\u3067\u3059\u306d\u3048\u3002\n\n\u3053\u3053\u307e\u3067\u3067\u3001\u4e00\u65e6Parse\u5074\u306e\u64cd\u4f5c\u306f\u7d42\u308f\u308a\u3067\u3059\u3002\n\n\n\n\n\n#Xcode\u5074\u3067\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\n\n\u3044\u3064\u3082\u306e\u3088\u3046\u306b\u3001Xcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n# SDK\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306bParse\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3001SDK\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nPrase.com\u306b\u623b\u308a\u3001\u30a2\u30d7\u30ea\u7ba1\u7406\u30da\u30fc\u30b8\u306e\u4e0b\u90e8\u306e[Downloads]\u3092\u30af\u30ea\u30c3\u30af\n\n\n![Analytics___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/a054f258-7dcb-2fab-00dc-d285ae92f142.png \"Analytics___Parse.png\")\n\n<br>\n\nSDK\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001SDK\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![Downloads___Changelogs___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/4c3cd26e-f508-8373-7d6e-f44e7234432d.png \"Downloads___Changelogs___Parse.png\")\n\n<br>\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u30d5\u30a1\u30a4\u30eb\u3092\u89e3\u51cd\u3057\u3001\u305d\u306e\u4e2d\u306e\u4ee5\u4e0b\u306e\uff12\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u3092Xcode\u306b\u30c9\u30e9\u30c3\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3057\u3087\u3046\u3002\n\n- Parse.framework\n- Bolts.framework\n\n\n\n# \u305d\u306e\u4ed6\u306e\u5fc5\u8981\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\n\u5148\u7a0b\u306e\uff12\u3064\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u4ee5\u5916\u306b\u5fc5\u8981\u306a\u3082\u306e\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u753b\u50cf\u306e\u3088\u3046\u306b\u3001Linked Frameworks and Libraries \u307e\u3067\u884c\u304d\u3001\u5fc5\u8981\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n\u8ffd\u52a0\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u4ee5\u4e0b\u306e\u3082\u306e\u3067\u3059\u3002\n\n- AudioToolbox.framework\n- CFNetwork.framework\n- CoreGraphics.framework\n- CoreLocation.framework\n- MobileCoreServices.framework\n- QuartzCore.framework\n- Security.framework\n- StoreKit.framework\n- SystemConfiguration.framework\n- libsqlite3.dylib\n- libz.dylib\n\n\n\n# Parse\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u3068Xcode\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7d10\u4ed8\u3051\n\n\u73fe\u6bb5\u968e\u3067\u306f\u3001Parse.com\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u3068\u3001Xcode\u3067\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306f\u72ec\u7acb\u3057\u3066\u3044\u308b\u306e\u3067\u3001\nParse.com\u3067\u767a\u884c\u3055\u308c\u308b\u3001key\u3092\u7528\u3044\u3066\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\n## Parse.com\n\n![Edit_Your_App___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/3833412b-49e1-d1bb-4cb4-1e98242f08e1.png \"Edit_Your_App___Parse.png\")\n\n\n- Application ID\n- Client Key\n\n\u3053\u306e\uff12\u3064\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## Xcode\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n\nAppDelegate.swift\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n```AppDelegate.swift\nimport UIKit\nimport Parse   //Parse\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(application: UIApplication, didFinishLaunchingWithOptions launchOptions: [NSObject: AnyObject]?) -> Bool {\n        \n        //Parse\u3067\u53d6\u5f97\u3057\u305f[Application ID]\u3068[Client Key]\u3092\u6307\u5b9a\n        Parse.setApplicationId(\"[Application ID]\", clientKey: \"[Client Key]\")\n        \n        return true\n    }\n```\n\n\u4ee5\u4e0a\u306e\u64cd\u4f5c\u3067\u3001\u9023\u643a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\n# UI\u306e\u4f5c\u6210\u3068\u5fc5\u8981\u306aSwift\u30d5\u30a1\u30a4\u30eb\u306e\u8ffd\u52a0\n\nMain.storyboard\u4e0a\u306f\u3056\u3063\u304f\u308a\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\n\n![Main_storyboard_\u3068_PracticeParseLogin_xcodeproj.png](https://qiita-image-store.s3.amazonaws.com/0/48036/002cbd77-9352-1c1f-497c-ed0c7a65d9e6.png \"Main_storyboard_\u3068_PracticeParseLogin_xcodeproj.png\")\n\n\n\n\n<br>\n\n\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n- Models\n\t- Tweet.swift(NSObject)\n\t- TweetManager.swift(NSObject)\n- Views\n\t- TweetTableViewCell.swift(UITableViewCell)\n\t- TweetTableViewCell.xib   \n- ViewControllers\n\t- TweetsTableViewController.swift(UITableViewController)\n\t- NewTweetViewController.swfit(UIViewController)\n\n<br>\n\n\u4eca\u56de\u306f\u3001Parse\u3067\u7528\u610f\u3055\u3048\u305fDB\u3068\u306e\u63a5\u7d9a\u304c\u30e1\u30a4\u30f3\u306a\u306e\u3067\u3001\u305d\u308c\u4ee5\u5916\u306e\u90e8\u5206\u306f\u3056\u3056\u3056\u3063\u3068\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n```Tweet.swft\nimport UIKit\nimport Parse\n\nclass Tweet: NSObject {\n    var name: String!\n    var text: String!\n    \n    init(name: String, text: String) {\n        self.name = name\n        self.text = text\n    }\n    \n    func saveTweet() {\n        //\u5f8c\u307b\u3069Parse\u306edb\u306b\u4fdd\u5b58\u3059\u308b\u51e6\u7406\u3092\u66f8\u304f\n    }\n}\n```\n\n\n```TweetManager.swift\nimport UIKit\nimport Parse\n\nclass TweetManager: NSObject {\n    \n    var tweets: Array<Tweet> = []\n    static let sharedInstance = TweetManager()\n    \n    func fetchTweets(callback: () -> Void) {\n    \t//\u5f8c\u307b\u3069Parse\u306edb\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u8a18\u8ff0    \n    }\n}\n\n```\n\n```TweetTableViewCell.swift\nimport UIKit\n\nclass TweetTableViewCell: UITableViewCell {\n    @IBOutlet weak var tweetLabel: UILabel!\n    @IBOutlet weak var nameLabel: UILabel!\n    @IBOutlet weak var tweetImageView: UIImageView!\n\n    override func awakeFromNib() {\n        super.awakeFromNib()\n        // Initialization code\n        tweetLabel.numberOfLines = 0\n        tweetImageView.clipsToBounds = true\n        tweetImageView.contentMode = UIViewContentMode.ScaleAspectFill\n    }\n\n    override func setSelected(selected: Bool, animated: Bool) {\n        super.setSelected(selected, animated: animated)\n\n        // Configure the view for the selected state\n    }\n    \n}\n\n```\n\n```TweetsTableViewController\nimport UIKit\n\nclass TweetsTableViewController: UITableViewController {\n\n    let tweetCollection = TweetManager.sharedInstance\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        tableView.registerNib(UINib(nibName: \"TweetTableViewCell\", bundle: nil), forCellReuseIdentifier: \"TweetTableViewCell\")\n        tableView.estimatedRowHeight = 90\n        tableView.rowHeight = UITableViewAutomaticDimension\n    }\n    \n    override func viewWillAppear(animated: Bool) {\n        super.viewWillAppear(animated)\n        navigationItem.rightBarButtonItem = UIBarButtonItem(title: \"New\", style: UIBarButtonItemStyle.Plain, target: self, action: \"showNewTweetViewController\")\n        let callback = { () -> Void in\n            self.tableView.reloadData()\n        }\n        tweetCollection.fetchTweets(callback)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n\n    override func numberOfSectionsInTableView(tableView: UITableView) -> Int {\n        return 1\n    }\n\n    override func tableView(tableView: UITableView, numberOfRowsInSection section: Int) -> Int {\n        return tweetCollection.tweets.count\n    }\n\n    override func tableView(tableView: UITableView, cellForRowAtIndexPath indexPath: NSIndexPath) -> UITableViewCell {\n        let cell = tableView.dequeueReusableCellWithIdentifier(\"TweetTableViewCell\", forIndexPath: indexPath) as! TweetTableViewCell\n        let tweet = tweetCollection.tweets[indexPath.row]\n        cell.tweetImageView.image = UIImage(named: \"omoto\")\n        cell.nameLabel.text = tweet.name\n        cell.tweetLabel.text = tweet.text\n        return cell\n    }\n\n    func showNewTweetViewController() {\n        performSegueWithIdentifier(\"toNewViewController\", sender: nil)\n    }\n    \n    override func preferredStatusBarStyle() -> UIStatusBarStyle {\n        return UIStatusBarStyle.LightContent\n    }\n}\n\n```\n\n```NewTweetViewController.swift\nimport UIKit\n\nclass NewTweetViewController: UIViewController, UITextViewDelegate {\n    \n    @IBOutlet weak var placeholderLabel: UILabel!\n    @IBOutlet weak var tweetButton: UIButton!\n    @IBOutlet weak var tweetTextView: UITextView!\n    @IBOutlet weak var nameTextfield: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        tweetTextView.delegate = self\n        tweetButton.layer.cornerRadius = 5\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n    }\n    \n    func textViewShouldBeginEditing(textView: UITextView) -> Bool {\n        placeholderLabel.hidden = true\n        return true\n    }\n    \n    func textViewShouldEndEditing(textView: UITextView) -> Bool {\n        if textView.text.isEmpty {\n            placeholderLabel.hidden = false\n        }\n        return true\n    }\n    \n    @IBAction func tapTweetButton(sender: UIButton) {\n        if nameTextfield.text.isEmpty || tweetTextView.text.isEmpty {\n            println(\"Name or text is empty\")\n        } else {\n            let tweet = Tweet(name: nameTextfield.text, text: tweetTextView.text)\n            tweet.saveTweet()\n            navigationController?.popViewControllerAnimated(true)\n        }\n    }\n}\n\n```\n\n\u4e00\u65e6\u3053\u3053\u307e\u3067\u3002\n\n#Parse\u306eDB\u9023\u643a\n\n\u3044\u3088\u3044\u3088\u4eca\u56de\u306e\u30e1\u30a4\u30f3\u3067\u3059\u3002\n\n##DB\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\nTweet.swift\u306esaveTweet()\u3092\u7de8\u96c6\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```Tweet.swft\nimport UIKit\nimport Parse\n\nclass Tweet: NSObject {\n    var name: String!\n    var text: String!\n    \n    init(name: String, text: String) {\n        self.name = name\n        self.text = text\n    }\n    \n    func saveTweet() {\n        let tweetsObject = PFObject(className: \"tweets\")\n        tweetsObject[\"name\"] = name\n        tweetsObject[\"text\"] = text\n        tweetsObject.saveInBackgroundWithBlock { (success, error) -> Void in\n            if success {\n                println(\"Tweet has been saved\")\n            }\n        }\n    }\n}\n```\n\n\u305d\u308c\u305e\u308c\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n`PFObject(className: \"tweets\")`\u3067\u306f\u5f15\u6570\u306b\u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30af\u30e9\u30b9\u304cParse\u4e0a\u306b\u5b58\u5728\u3059\u308c\u3070\u305d\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3057\u3001\u7121\u3051\u308c\u3070\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n`tweetsObject[\"name\"] = name`\u3067\u306f\u3001\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b name \u3068\u3044\u3046\u540d\u524d\u306e\u30ab\u30e9\u30e0\u3092\u4f5c\u6210\u3057\u3001\u5024\u3092\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b`saveInBackgroundWithBlock()`\u30e1\u30bd\u30c3\u30c9\u306b\u3088\u3063\u3066\u3001\u975e\u540c\u671f\u3067DB\u306b\u5024\u3092\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n## DB\u304b\u3089\u5024\u306e\u53d6\u5f97\n\n\u7d9a\u3044\u3066\u3001\u4fdd\u5b58\u3057\u305f\u5024\u3092\u53d6\u5f97\u3057\u307e\u3057\u3087\u3046\u3002TweetManager.swift\u306e`fetchTweets()`\u30e1\u30bd\u30c3\u30c9\u3092\u7de8\u96c6\u3057\u307e\u3059\u3002\n\n```TweetManager.swift\nimport UIKit\nimport Parse\n\nclass TweetManager: NSObject {\n    \n    var tweets: Array<Tweet> = []\n    static let sharedInstance = TweetManager()\n    \n    func fetchTweets(callback: () -> Void) {\n\t\tlet query = PFQuery(className: \"tweets\")\n        query.orderByDescending(\"createdAt\")\n        query.findObjectsInBackgroundWithBlock { (tweets, error) -> Void in\n            if error == nil {\n                self.tweets = []\n                for tweet in tweets as! Array<PFObject> {\n                    let name = tweet[\"name\"] as! String\n                    let text = tweet[\"text\"] as! String\n                    let tweet = Tweet(name: name, text: text)\n                    self.tweets.append(tweet)\n                }\n                callback()\n            }\n        }    \n    }\n}\n\n```\n\n<br>\n\n`let query = PFQuery(className: \"tweets\")`\nDB\u304b\u3089\u4f5c\u6210\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306b\u306f\u3001PFQuery\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n`query.orderByDescending(\"createdAt\")`\n\u53d6\u5f97\u3057\u305f\u8907\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e26\u3073\u66ff\u3048\u3066\u3044\u307e\u3059\u3002\n\n`findObjectsInBackgroundWithBlock()`\u30e1\u30bd\u30c3\u30c9\u306b\u3066DB\u304b\u3089\u5b9f\u969b\u306b\u30c4\u30a4\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u5168\u3066\u975e\u540c\u671f\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u5f8c\u306f\u53d6\u5f97\u3059\u305f\u30c4\u30a4\u30fc\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u305fTweet\u30e2\u30c7\u30eb\u306b\u5909\u63db\u3057\u3001\u914d\u5217\u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\n#Parse\u4e0a\u3067\u4fdd\u5b58\u3057\u305f\u30c7\u30fc\u30bf\u306e\u78ba\u8a8d\n\n\n![Banners_and_Alerts_\u3068_tweets___Parse.png](https://qiita-image-store.s3.amazonaws.com/0/48036/5ce44d60-4063-04bb-77b1-550ee05af3be.png \"Banners_and_Alerts_\u3068_tweets___Parse.png\")\n\n\u30c4\u30a4\u30fc\u30c8\u3057\u305f\u30c7\u30fc\u30bf\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n<br>\n\n\n#\u6b21\u56de\u4e88\u544a\n\n\u6b21\u56de\u306fParse\u3092\u4f7f\u3063\u305f\u30ed\u30b0\u30a4\u30f3\u6a5f\u80fd\u306e\u5b9f\u88c5\u3092\u7d39\u4ecb\u3057\u3061\u3083\u3046\u305e\u3048\n\n\n", "tags": ["Parse", "iOS", "DB", "Swift"]}