{"tags": ["MdNote", "ASP.NET_Core", "EntityFramework_Core", "SQLServer"], "context": "ASP.NET core + angular2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\uff08\u305d\u306e2\uff09\n\u305d\u306e1\u306f\u3053\u3061\u3089\n\u4f5c\u696d\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\n\nEntityFramework Core \u3092\u8a2d\u5b9a\u3059\u308b\nMySQL\u3068\u304b\u3082\u4f7f\u3063\u3066\u307f\u305f\u3044\u304c\u3001\u4eca\u56de\u306fSQLServer\u3092\u4f7f\u3046\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\nInstall-Package Microsoft.EntityFrameworkCore\nInstall-Package Microsoft.EntityFrameworkCore.SqlServer\n\nproject.json\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3067\u8a18\u8ff0\u3057\u3066\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5165\u308c\u308b\u65b9\u6cd5\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046\uff09\n\nproject.json\n\"dependencies\": {\n  \"Microsoft.EntityFrameworkCore.Tools\": {\n    \"version\": \"1.0.0-preview2-final\",\n    \"type\": \"build\"\n  }\n}\n\n\"tools\": {\n  \"Microsoft.EntityFrameworkCore.Tools\": \"1.0.0-preview2-final\",\n}\n\n\n\n\u9069\u5f53\u306a\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n\nModels/Note.cs\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\n\nnamespace core_angular2.Models\n{\n    [Table(\"Notes\")]\n    public class Note\n    {\n        [Required, Key]\n        public float Id { get; set; }\n\n        [Display(Name = \"\u30ce\u30fc\u30c8\u540d\"), MaxLength(50)]\n        public string Name { get; set; }\n    }\n}\n\n\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u308b\n\nModels/DefaultContext.cs\nusing Microsoft.EntityFrameworkCore;\n\nnamespace core_angular2.Models\n{\n    public class DefaultContext : DbContext\n    {\n        public DefaultContext(DbContextOptions<DefaultContext> options)\n            : base(options)\n        { }\n\n        public DbSet<Note> Notes { get; set; }\n    }\n}\n\n\n\n\u63a5\u7d9a\u306b\u4f7f\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\nProviders/EntityFrameworkConfigurationProvider.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\nusing core_angular2.Models;\n\nnamespace core_angular2.Providers\n{\n    public class EntityFrameworkConfigurationProvider : ConfigurationProvider\n    {\n        public EntityFrameworkConfigurationProvider(Action<DbContextOptionsBuilder> optionsAction)\n        {\n            OptionsAction = optionsAction;\n        }\n\n        Action<DbContextOptionsBuilder> OptionsAction { get; }\n\n        public override void Load()\n        {\n            var builder = new DbContextOptionsBuilder<DefaultContext>();\n            OptionsAction(builder);\n\n            using (var dbContext = new DefaultContext(builder.Options))\n            {\n                // dbContext.Database.EnsureCreated();\n            }\n        }\n    }\n}\n\n\n\nEntityFrameworkConfigurationSource.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\n\nnamespace core_angular2.Providers\n{\n    public class EntityFrameworkConfigurationSource : IConfigurationSource\n    {\n        private readonly Action<DbContextOptionsBuilder> _optionsAction;\n\n        public EntityFrameworkConfigurationSource(Action<DbContextOptionsBuilder> optionsAction)\n        {\n            _optionsAction = optionsAction;\n        }\n\n        public IConfigurationProvider Build(IConfigurationBuilder builder)\n        {\n            return new EntityFrameworkConfigurationProvider(_optionsAction);\n        }\n    }\n}\n\n\n\nEntityFrameworkExtensions.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\n\nnamespace core_angular2.Providers\n{\n    public static class EntityFrameworkExtensions\n    {\n        public static IConfigurationBuilder AddEntityFrameworkConfig(\n            this IConfigurationBuilder builder, Action<DbContextOptionsBuilder> setup)\n        {\n            return builder.Add(new EntityFrameworkConfigurationSource(setup));\n        }\n    }\n}\n\n\n\n\u63a5\u7d9a\u8a2d\u5b9a\u3059\u308b\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u3072\u306a\u578b\u3092\u4f5c\u308b\n\nConnectionStringsSettings.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultContext\": \"\"\n  }\n}\n\n\n\u958b\u767a\u74b0\u5883\u7528\u306e\u63a5\u7d9a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\n\nConnectionStringsSettings.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultContext\": \"Data Source=(LocalDb)\\MSSQLLocalDB\"\n  }\n}\n\n\nStartup.cs\u306e\u6700\u521d\u3067connectionStrings\u3092\u53d6\u5f97\u3057\u3001Configration\u306b\u8a2d\u5b9a\u3059\u308b\n\uff08env.EnvironmentName\u3092\u4f7f\u3046\u3053\u3068\u3067\u74b0\u5883\u3054\u3068\u306e\u63a5\u7d9a\u6587\u5b57\u5217\u306e\u5b9a\u7fa9\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09\n\nStartup.cs\npublic Startup(IHostingEnvironment env)\n{\n    var connectionStringsConfig = new ConfigurationBuilder()\n        .SetBasePath(env.ContentRootPath)\n        .AddJsonFile(\"connectionStringsSettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"connectionStringsSettings.{env.EnvironmentName}.json\", optional: true)\n        .Build();\n    var builder = new ConfigurationBuilder()\n        .SetBasePath(env.ContentRootPath)\n        .AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)\n        .AddJsonFile(\"connectionStringsSettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"connectionStringsSettings.{env.EnvironmentName}.json\", optional: true)\n        .AddEntityFrameworkConfig(options =>\n            options.UseSqlServer(connectionStringsConfig.GetConnectionString(\"DefaultContext\")));\n    Configuration = builder.Build();\n}\n\n\nStartup.cs\u306eConfigurationService\u306b\u8ffd\u52a0\u3059\u308b\npublic void ConfigureServices(IServiceCollection services)\n{\n    ...\n\n    services.AddEntityFrameworkSqlServer();\n    services.AddDbContext<DefaultContext>(options =>\n        options.UseSqlServer(Configuration.GetConnectionString(\"DefaultContext\")));\n}\n\n\n\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u308b\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\nAdd-Migration AddNoteTable\nUpdate-Database\n\nSQLServer\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\n\nCollation\u3082\u8a2d\u5b9a\u3057\u3066\u304a\u304f\nAdd-Migration SetDefaultCollation\n\nusing System;\nusing System.Collections.Generic;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\nnamespace core_angular2.Migrations\n{\n    public partial class SetDefaultCollation : Migration\n    {\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 SET SINGLE_USER WITH ROLLBACK IMMEDIATE;\", suppressTransaction: true);\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 COLLATE Japanese_BIN2;\", suppressTransaction: true);\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 SET MULTI_USER;\", suppressTransaction: true);\n        }\n\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n\n        }\n    }\n}\n\n\n\nController\u304b\u3089Db\u3078\u63a5\u7d9a\u3057\u3066\u307f\u308b\nDbContext\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30b9\u30c8\u30ea\u30f3\u30b0\u7d4c\u7531\u3067\u53d6\u5f97\u3059\u308bstatic\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\npublic static DefaultContext GetBy(string connectionString)\n{\n    var optionsBuilder = new DbContextOptionsBuilder<DefaultContext>();\n    optionsBuilder.UseSqlServer(connectionString);\n\n    return new DefaultContext(optionsBuilder.Options);\n}\n\nController\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30b9\u30c8\u30ea\u30f3\u30b0\u3092\u6e21\u3059\u305f\u3081\u306b\u8a2d\u5b9a\u30e2\u30c7\u30eb\u3092\u8ffd\u52a0\n\nModels/ConfigData.cs\nnamespace core_angular2.Models\n{\n    public class ConfigData\n    {\n        public string DefaultConnectionString { get; set; }\n    }\n}\n\n\nStartup.cs\u306eConfigureServices\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\n\nStartup.cs\npublic void ConfigureServices(IServiceCollection services)\n{\n    ...\n\n    services.Configure<ConfigData>(options =>\n    {\n        options.DefaultConnectionString = Configuration.GetConnectionString(\"DefaultContext\");\n    });\n}\n\n\n\nValuesController\u3092\u4fee\u6b63\u3057\u3066api/values/1\u3067Db\u306e\u4e2d\u8eab\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\n\nControllers/ValuesController.cs\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Options;\nusing core_angular2.Models;\n\nnamespace core_angular2.Controllers\n{\n    [Route(\"api/[controller]\")]\n    public class ValuesController : Controller\n    {\n        private DefaultContext _Db { get; set; }\n        public ValuesController(IOptions<ConfigData> optionsAccessor)\n        {\n            this._Db = DefaultContext.GetBy(optionsAccessor.Value.DefaultConnectionString);\n        }\n\n        // GET api/values\n        [HttpGet]\n        public IEnumerable<string> Get()\n        {\n            return new string[] { \"value1\", \"value2\" };\n        }\n\n        // GET api/values/5\n        [HttpGet(\"{id}\")]\n        public string Get(int id)\n        {\n            var note = this._Db.Notes.First();\n            return $\"note: id={note.Id}, name={note.Name}\";\n        }\n\n        // POST api/values\n        [HttpPost]\n        public void Post([FromBody]string value)\n        {\n        }\n\n        // PUT api/values/5\n        [HttpPut(\"{id}\")]\n        public void Put(int id, [FromBody]string value)\n        {\n        }\n\n        // DELETE api/values/5\n        [HttpDelete(\"{id}\")]\n        public void Delete(int id)\n        {\n        }\n    }\n}\n\n\n\n\u3088\u3057\u3001\u3068\u308c\u305f\n\nnote: id=1, name=\u30c6\u30b9\u30c8\u30ce\u30fc\u30c8\n\n\u203b \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u9069\u5f53\u306b\u5024\u3092\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3057\u305f\n\u6b21\u306f\u8a8d\u8a3c\u5468\u308a\u3068\u304b\u3084\u308a\u305f\u3044\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nhttps://docs.asp.net/en/latest/\nhttps://angular.io/docs/ts/latest/quickstart.html\nASP.NET core + angular2\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3059\u308b\uff08\u305d\u306e2\uff09\n\n\u305d\u306e1\u306f[\u3053\u3061\u3089](http://qiita.com/shwld/items/3ed53f3e5d38625d3237)\n\n[\u4f5c\u696d\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089](https://github.com/shwld/dotnetcore_angular2)\n\n## EntityFramework Core \u3092\u8a2d\u5b9a\u3059\u308b\nMySQL\u3068\u304b\u3082\u4f7f\u3063\u3066\u307f\u305f\u3044\u304c\u3001\u4eca\u56de\u306fSQLServer\u3092\u4f7f\u3046\u3002\n\n### \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\n\n```\nInstall-Package Microsoft.EntityFrameworkCore\nInstall-Package Microsoft.EntityFrameworkCore.SqlServer\n```\n\nproject.json\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3067\u8a18\u8ff0\u3057\u3066\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u5165\u308c\u308b\u65b9\u6cd5\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046\uff09\n\n``` project.json\n\"dependencies\": {\n  \"Microsoft.EntityFrameworkCore.Tools\": {\n    \"version\": \"1.0.0-preview2-final\",\n    \"type\": \"build\"\n  }\n}\n\n\"tools\": {\n  \"Microsoft.EntityFrameworkCore.Tools\": \"1.0.0-preview2-final\",\n}\n```\n\n### \u9069\u5f53\u306a\u30e2\u30c7\u30eb\u3092\u4f5c\u308b\n\n``` Models/Note.cs\nusing System.ComponentModel.DataAnnotations;\nusing System.ComponentModel.DataAnnotations.Schema;\n\nnamespace core_angular2.Models\n{\n    [Table(\"Notes\")]\n    public class Note\n    {\n        [Required, Key]\n        public float Id { get; set; }\n\n        [Display(Name = \"\u30ce\u30fc\u30c8\u540d\"), MaxLength(50)]\n        public string Name { get; set; }\n    }\n}\n```\n\n\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u308b\n\n``` Models/DefaultContext.cs\nusing Microsoft.EntityFrameworkCore;\n\nnamespace core_angular2.Models\n{\n    public class DefaultContext : DbContext\n    {\n        public DefaultContext(DbContextOptions<DefaultContext> options)\n            : base(options)\n        { }\n\n        public DbSet<Note> Notes { get; set; }\n    }\n}\n```\n\n### \u63a5\u7d9a\u306b\u4f7f\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u308b\n\n``` Providers/EntityFrameworkConfigurationProvider.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\nusing core_angular2.Models;\n\nnamespace core_angular2.Providers\n{\n    public class EntityFrameworkConfigurationProvider : ConfigurationProvider\n    {\n        public EntityFrameworkConfigurationProvider(Action<DbContextOptionsBuilder> optionsAction)\n        {\n            OptionsAction = optionsAction;\n        }\n\n        Action<DbContextOptionsBuilder> OptionsAction { get; }\n\n        public override void Load()\n        {\n            var builder = new DbContextOptionsBuilder<DefaultContext>();\n            OptionsAction(builder);\n\n            using (var dbContext = new DefaultContext(builder.Options))\n            {\n                // dbContext.Database.EnsureCreated();\n            }\n        }\n    }\n}\n```\n\n``` EntityFrameworkConfigurationSource.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\n\nnamespace core_angular2.Providers\n{\n    public class EntityFrameworkConfigurationSource : IConfigurationSource\n    {\n        private readonly Action<DbContextOptionsBuilder> _optionsAction;\n\n        public EntityFrameworkConfigurationSource(Action<DbContextOptionsBuilder> optionsAction)\n        {\n            _optionsAction = optionsAction;\n        }\n\n        public IConfigurationProvider Build(IConfigurationBuilder builder)\n        {\n            return new EntityFrameworkConfigurationProvider(_optionsAction);\n        }\n    }\n}\n```\n\n``` EntityFrameworkExtensions.cs\nusing System;\nusing Microsoft.EntityFrameworkCore;\nusing Microsoft.Extensions.Configuration;\n\nnamespace core_angular2.Providers\n{\n    public static class EntityFrameworkExtensions\n    {\n        public static IConfigurationBuilder AddEntityFrameworkConfig(\n            this IConfigurationBuilder builder, Action<DbContextOptionsBuilder> setup)\n        {\n            return builder.Add(new EntityFrameworkConfigurationSource(setup));\n        }\n    }\n}\n```\n\n### \u63a5\u7d9a\u8a2d\u5b9a\u3059\u308b\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u3072\u306a\u578b\u3092\u4f5c\u308b\n\n``` ConnectionStringsSettings.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultContext\": \"\"\n  }\n}\n```\n\n\u958b\u767a\u74b0\u5883\u7528\u306e\u63a5\u7d9a\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\n\n``` ConnectionStringsSettings.json\n{\n  \"ConnectionStrings\": {\n    \"DefaultContext\": \"Data Source=(LocalDb)\\MSSQLLocalDB\"\n  }\n}\n```\n\nStartup.cs\u306e\u6700\u521d\u3067connectionStrings\u3092\u53d6\u5f97\u3057\u3001Configration\u306b\u8a2d\u5b9a\u3059\u308b\n\n\uff08env.EnvironmentName\u3092\u4f7f\u3046\u3053\u3068\u3067\u74b0\u5883\u3054\u3068\u306e\u63a5\u7d9a\u6587\u5b57\u5217\u306e\u5b9a\u7fa9\u3092\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff09\n\n``` Startup.cs\npublic Startup(IHostingEnvironment env)\n{\n    var connectionStringsConfig = new ConfigurationBuilder()\n        .SetBasePath(env.ContentRootPath)\n        .AddJsonFile(\"connectionStringsSettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"connectionStringsSettings.{env.EnvironmentName}.json\", optional: true)\n        .Build();\n    var builder = new ConfigurationBuilder()\n        .SetBasePath(env.ContentRootPath)\n        .AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true)\n        .AddJsonFile(\"connectionStringsSettings.json\", optional: true, reloadOnChange: true)\n        .AddJsonFile($\"connectionStringsSettings.{env.EnvironmentName}.json\", optional: true)\n        .AddEntityFrameworkConfig(options =>\n            options.UseSqlServer(connectionStringsConfig.GetConnectionString(\"DefaultContext\")));\n    Configuration = builder.Build();\n}\n```\n\nStartup.cs\u306eConfigurationService\u306b\u8ffd\u52a0\u3059\u308b\n\n```\npublic void ConfigureServices(IServiceCollection services)\n{\n    ...\n\n    services.AddEntityFrameworkSqlServer();\n    services.AddDbContext<DefaultContext>(options =>\n        options.UseSqlServer(Configuration.GetConnectionString(\"DefaultContext\")));\n}\n```\n\n### \u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f5c\u308b\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u30de\u30cd\u30fc\u30b8\u30e3\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\n\n```\nAdd-Migration AddNoteTable\nUpdate-Database\n```\n\nSQLServer\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u308b\u306f\u305a\n\n### Collation\u3082\u8a2d\u5b9a\u3057\u3066\u304a\u304f\n\n```\nAdd-Migration SetDefaultCollation\n```\n\n``` \nusing System;\nusing System.Collections.Generic;\nusing Microsoft.EntityFrameworkCore.Migrations;\n\nnamespace core_angular2.Migrations\n{\n    public partial class SetDefaultCollation : Migration\n    {\n        protected override void Up(MigrationBuilder migrationBuilder)\n        {\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 SET SINGLE_USER WITH ROLLBACK IMMEDIATE;\", suppressTransaction: true);\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 COLLATE Japanese_BIN2;\", suppressTransaction: true);\n            migrationBuilder.Sql(\"ALTER DATABASE dotnetcore_angular2 SET MULTI_USER;\", suppressTransaction: true);\n        }\n\n        protected override void Down(MigrationBuilder migrationBuilder)\n        {\n\n        }\n    }\n}\n\n```\n\n## Controller\u304b\u3089Db\u3078\u63a5\u7d9a\u3057\u3066\u307f\u308b\n\nDbContext\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30b9\u30c8\u30ea\u30f3\u30b0\u7d4c\u7531\u3067\u53d6\u5f97\u3059\u308bstatic\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\n\n``` \npublic static DefaultContext GetBy(string connectionString)\n{\n    var optionsBuilder = new DbContextOptionsBuilder<DefaultContext>();\n    optionsBuilder.UseSqlServer(connectionString);\n\n    return new DefaultContext(optionsBuilder.Options);\n}\n```\n\nController\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30b9\u30c8\u30ea\u30f3\u30b0\u3092\u6e21\u3059\u305f\u3081\u306b\u8a2d\u5b9a\u30e2\u30c7\u30eb\u3092\u8ffd\u52a0\n\n``` Models/ConfigData.cs\nnamespace core_angular2.Models\n{\n    public class ConfigData\n    {\n        public string DefaultConnectionString { get; set; }\n    }\n}\n```\n\nStartup.cs\u306eConfigureServices\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\n\n``` Startup.cs\npublic void ConfigureServices(IServiceCollection services)\n{\n    ...\n\n    services.Configure<ConfigData>(options =>\n    {\n        options.DefaultConnectionString = Configuration.GetConnectionString(\"DefaultContext\");\n    });\n}\n```\n\n### ValuesController\u3092\u4fee\u6b63\u3057\u3066api/values/1\u3067Db\u306e\u4e2d\u8eab\u3092\u53d6\u5f97\u3057\u3066\u307f\u308b\n\n``` Controllers/ValuesController.cs\nusing System.Collections.Generic;\nusing System.Linq;\nusing Microsoft.AspNetCore.Mvc;\nusing Microsoft.Extensions.Options;\nusing core_angular2.Models;\n\nnamespace core_angular2.Controllers\n{\n    [Route(\"api/[controller]\")]\n    public class ValuesController : Controller\n    {\n        private DefaultContext _Db { get; set; }\n        public ValuesController(IOptions<ConfigData> optionsAccessor)\n        {\n            this._Db = DefaultContext.GetBy(optionsAccessor.Value.DefaultConnectionString);\n        }\n\n        // GET api/values\n        [HttpGet]\n        public IEnumerable<string> Get()\n        {\n            return new string[] { \"value1\", \"value2\" };\n        }\n\n        // GET api/values/5\n        [HttpGet(\"{id}\")]\n        public string Get(int id)\n        {\n            var note = this._Db.Notes.First();\n            return $\"note: id={note.Id}, name={note.Name}\";\n        }\n\n        // POST api/values\n        [HttpPost]\n        public void Post([FromBody]string value)\n        {\n        }\n\n        // PUT api/values/5\n        [HttpPut(\"{id}\")]\n        public void Put(int id, [FromBody]string value)\n        {\n        }\n\n        // DELETE api/values/5\n        [HttpDelete(\"{id}\")]\n        public void Delete(int id)\n        {\n        }\n    }\n}\n```\n\n### \u3088\u3057\u3001\u3068\u308c\u305f\n> note: id=1, name=\u30c6\u30b9\u30c8\u30ce\u30fc\u30c8\n\n\u203b \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u306f\u9069\u5f53\u306b\u5024\u3092\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3057\u305f\n\n\n\n\u6b21\u306f\u8a8d\u8a3c\u5468\u308a\u3068\u304b\u3084\u308a\u305f\u3044\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u304a\u4e16\u8a71\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nhttps://docs.asp.net/en/latest/\n\nhttps://angular.io/docs/ts/latest/quickstart.html\n\n"}