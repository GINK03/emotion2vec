{"context": "\u3053\u306e\u8a18\u4e8b\u306f CureApp Advent Calendar 2016 7\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u4eca\u65e5\u306f Elastic Beanstalk \u306b Docker (ECS) \u3067\u8907\u6570\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u8a71\u3067\u3059\u3002\n\n\u76ee\u7684\n\u3072\u3068\u3064\u306e Elastic Beanstalk \u306b\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3089\u3001\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7bc0\u7d04\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u304b\u3082\u3002\n\u3068\u3044\u3046\u52d5\u6a5f\u306e\u3082\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u3092\u691c\u8a0e\u3057\u307e\u3057\u305f\u3002\n\n\n\u524d\u63d0\u6761\u4ef6\n\naws \u30a2\u30ab\u30a6\u30f3\u30c8\nnode, docker, docker-compose \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb (\u30ed\u30fc\u30ab\u30eb\u78ba\u8a8d\u7528\u306a\u306e\u3067\u5fc5\u9808\u3067\u306f\u306a\u3044\u3067\u3059)\n\n\n\u624b\u9806\n\n1. \u30c6\u30b9\u30c8\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\nnode \u3067\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\nnode-app1/package.json\n{\n  \"name\": \"node-app1\",\n  \"version\": \"1.0.0\",\n  \"description\": \"sample node app 1\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n\n\n\nnode-app1/server.js\n\nvar http = require('http')\nvar server = http.createServer()\n\nserver.on('request', function(req, res) {\n    res.writeHead(200, {'Content-Type': 'text/html'})\n    res.write('<h1>Hello my first application!</h1>')\n    res.end()\n})\n\nserver.listen(80)\nconsole.log('server listening...')\n\n\n$ sudo npm start\n\n\u540c\u69d8\u306b\u8868\u793a\u3092\u5c11\u3057\u5909\u3048\u3066 node-app2 \u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n2. nginx \u306e\u8a2d\u5b9a\n\nproxy/conf.d/default.conf\nserver {\n    listen 80;\n    server_name localhost;\n\n    location / {\n        proxy_pass http://node-app1;\n    }\n\n    location /second/ {\n        proxy_pass http://node-app2;\n    }\n}\n\n\n\u901a\u5e38\u306f server_name \u3068\u304b\u3067\u5206\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001url \u3067\u5206\u5c90\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n3. docker compose \u3067\u52d5\u304b\u3057\u3066\u307f\u308b\n\u8a66\u3057\u306b docker compose \u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ndocker-compose.yml\nversion: '2'\nservices:\n  node-app1:\n    image: node:6.9.1-slim\n    volumes:\n    - ./node-app1:/usr/src/app\n    working_dir: /usr/src/app\n    command: npm start\n\n  node-app2:\n    image: node:6.9.1-slim\n    volumes:\n    - ./node-app2:/usr/src/app\n    working_dir: /usr/src/app\n    command: npm start\n\n  nginx-proxy:\n    image: nginx\n    volumes:\n    - ./proxy/conf.d:/etc/nginx/conf.d\n    ports:\n    - \"80:80\"\n    links:\n    - node-app1\n    - node-app2\n\n\n.\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 node-app1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u251c\u2500\u2500 node-app2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u2514\u2500\u2500 proxy\n    \u2514\u2500\u2500 conf.d\n        \u2514\u2500\u2500 default.conf\n\n$ docker-compose up\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\u3002\nhttp://localhost/first\nhttp://localhost/second\n\n\u4eca\u56de\u306f node:6.9.1-slim \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306f Docker Hub \u306b\u3042\u3052\u3066\u4f7f\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\nElastic Beanstalk \u8907\u6570\u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u3067\u306f Dockerfile \u306f\u4f7f\u3048\u306a\u3044\u3089\u3057\u3044\u3002\u3002(\u516c\u5f0f\u30b5\u30a4\u30c8)\n\n4. \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n\u516c\u5f0f\u30b5\u30a4\u30c8\u3068 docker-compose.yml \u3092\u898b\u6bd4\u3079\u306a\u304c\u3089\u3001Dockerrun.aws.json \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\nDockerrun.aws.json\n{\n  \"AWSEBDockerrunVersion\": 2,\n  \"volumes\": [\n    {\n      \"name\": \"node-app1-src\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/node-app1\"\n      }\n    },\n    {\n      \"name\": \"node-app2-src\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/node-app2\"\n      }\n    },\n    {\n      \"name\": \"nginx-proxy-conf\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/proxy/conf.d\"\n      }\n    }  \n  ],\n  \"containerDefinitions\": [\n    {\n      \"name\": \"node-app1\",\n      \"image\": \"node:6.9.1-slim\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"node-app1-src\",\n          \"containerPath\": \"/usr/src/app\",\n          \"readOnly\": true\n        }\n      ],\n      \"workingDirectory\" : \"/usr/src/app\",\n      \"command\": [\"npm\", \"start\"]\n    },\n    {\n      \"name\": \"node-app2\",\n      \"image\": \"node:6.9.1-slim\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"node-app2-src\",\n          \"containerPath\": \"/usr/src/app\",\n          \"readOnly\": true\n        }\n      ],\n      \"workingDirectory\" : \"/usr/src/app\",\n      \"command\": [\"npm\", \"start\"]\n    },\n    {\n      \"name\": \"nginx-proxy\",\n      \"image\": \"nginx\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"portMappings\": [\n        {\n          \"hostPort\": 80,\n          \"containerPort\": 80\n        }\n      ],\n      \"links\": [\n        \"node-app1\",\n        \"node-app2\"\n      ],\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"nginx-proxy-conf\",\n          \"containerPath\": \"/etc/nginx/conf.d\",\n          \"readOnly\": true\n        },\n        {\n          \"sourceVolume\": \"awseb-logs-nginx-proxy\",\n          \"containerPath\": \"/var/log/nginx\"\n        }\n      ]\n    }\n  ]\n}\n\n\n\u3053\u306e\u3042\u3068\u4f5c\u6210\u3059\u308b zip \u304c\u30db\u30b9\u30c8\u306e /var/app/current \u306b\u89e3\u51cd\u3055\u308c\u307e\u3059\u3002\nessential\u306f\u3001true \u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30ca\u304c\u6b62\u307e\u308b\u3068\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u3082\u3059\u3079\u3066\u6b62\u307e\u308b\u3068\u3044\u3046\u8a2d\u5b9a\u3002(\u516c\u5f0f\u30b5\u30a4\u30c8)\n.\n\u251c\u2500\u2500 Dockerrun.aws.json\n\u251c\u2500\u2500 node-app1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u251c\u2500\u2500 node-app2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u2514\u2500\u2500 proxy\n    \u2514\u2500\u2500 conf.d\n        \u2514\u2500\u2500 default.conf\n\n\u5727\u7e2e\u3057\u307e\u3059\u3002\n$ zip -r apps.zip Dockerrun.aws.json node-app1 node-app2 proxy\n\n\n5. \u30c7\u30d7\u30ed\u30a4\nAWS Elastic Beanstalk \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\n\n\n\u9805\u76ee\n\u5165\u529b\u5024\n\n\n\n\n\u74b0\u5883\n\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u74b0\u5883\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\n\u4efb\u610f\n\n\n\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\nMulti-container Docker\n\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\n\u4f5c\u6210\u3057\u305f apps.zip \u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\n\n\n\n\u8868\u306b\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001[\u3055\u3089\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a] \u2192 [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3] \u2192 [\u30ad\u30fc\u30da\u30a2]\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\n\u30db\u30b9\u30c8\u306b SSH \u3067\u5165\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n6. \u5b8c\u6210\uff01\n\u4f5c\u6210\u5f8c\u3001\u7121\u4e8b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3057\u305f\u3002\nhttp://******.elasticbeanstalk.com/first\nhttp://******.elasticbeanstalk.com/second\n\nEC2 Container Service \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u78ba\u8a8d\u3002\n\nSSH \u3067\u30db\u30b9\u30c8\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n$ sudo docker ps\n\n\n\n\u611f\u60f3\n\u4ee5\u5916\u306b\u3059\u3093\u306a\u308a\u52d5\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306b\u4f5c\u6210\u3059\u308b\u969b\u306f\u3001docker compose \u3067\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u524d\u3082\u3063\u3066\u52d5\u4f5c\u78ba\u8a8d\u304c\u3067\u304d\u308b\u306e\u3068\u3001Dockerrun.aws.json \u3082\u4f5c\u6210\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u3044\u3044\u3067\u3059\u3002\n\u30ea\u30bd\u30fc\u30b9\u306e\u554f\u984c\u306a\u3069\u3044\u308d\u3044\u308d\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3048\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u307e\u3060\u306a\u3093\u3068\u3082\u3002\u3002\n\u660e\u65e5\u306f\u3001@kt3k@github \u3055\u3093\u3067\u3059\u3002\n\n\u3000\n\n\u53c2\u8003\u8cc7\u6599\u3000amazon \u958b\u767a\u8005\u30ac\u30a4\u30c9\n\n\u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3000github\n\n\n\u3053\u306e\u8a18\u4e8b\u306f [CureApp Advent Calendar 2016](http://qiita.com/advent-calendar/2016/cureapp) 7\u65e5\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u4eca\u65e5\u306f [Elastic Beanstalk](https://aws.amazon.com/jp/elasticbeanstalk/) \u306b [Docker](https://www.docker.com/) ([ECS](https://aws.amazon.com/jp/ecs/)) \u3067\u8907\u6570\u30a2\u30d7\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u8a71\u3067\u3059\u3002\n\n\n## \u76ee\u7684\n\n\u3072\u3068\u3064\u306e Elastic Beanstalk \u306b\u8907\u6570\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3089\u3001\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7bc0\u7d04\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u304b\u3082\u3002\n\n\u3068\u3044\u3046\u52d5\u6a5f\u306e\u3082\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u6210\u3092\u691c\u8a0e\u3057\u307e\u3057\u305f\u3002\n \n<img width=\"788\" alt=\"Screen Shot 2016-11-16 at 18.12.03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/94449/33c9434d-356e-3354-77af-efa8a605b2fa.png\">\n\n## \u524d\u63d0\u6761\u4ef6\n\n* aws \u30a2\u30ab\u30a6\u30f3\u30c8\n* node, docker, docker-compose \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb (\u30ed\u30fc\u30ab\u30eb\u78ba\u8a8d\u7528\u306a\u306e\u3067\u5fc5\u9808\u3067\u306f\u306a\u3044\u3067\u3059)\n\n## \u624b\u9806\n\n### 1. \u30c6\u30b9\u30c8\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4f5c\u6210\nnode \u3067\u8868\u793a\u3059\u308b\u3060\u3051\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\n```json:node-app1/package.json\n{\n  \"name\": \"node-app1\",\n  \"version\": \"1.0.0\",\n  \"description\": \"sample node app 1\",\n  \"main\": \"server.js\",\n  \"scripts\": {\n    \"start\": \"node server.js\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}\n```\n\n```js:node-app1/server.js\n\nvar http = require('http')\nvar server = http.createServer()\n\nserver.on('request', function(req, res) {\n    res.writeHead(200, {'Content-Type': 'text/html'})\n    res.write('<h1>Hello my first application!</h1>')\n    res.end()\n})\n\nserver.listen(80)\nconsole.log('server listening...')\n```\n\n```\n$ sudo npm start\n```\n\u540c\u69d8\u306b\u8868\u793a\u3092\u5c11\u3057\u5909\u3048\u3066 node-app2 \u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n### 2. nginx \u306e\u8a2d\u5b9a\n\n```nginx:proxy/conf.d/default.conf\nserver {\n    listen 80;\n    server_name localhost;\n \n    location / {\n        proxy_pass http://node-app1;\n    }\n\n    location /second/ {\n        proxy_pass http://node-app2;\n    }\n}\n```\n\n\u901a\u5e38\u306f server_name \u3068\u304b\u3067\u5206\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c6\u30b9\u30c8\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u3001url \u3067\u5206\u5c90\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n### 3. docker compose \u3067\u52d5\u304b\u3057\u3066\u307f\u308b\n\n\u8a66\u3057\u306b docker compose \u3092\u4f7f\u3063\u3066\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```yaml:docker-compose.yml\nversion: '2'\nservices:\n  node-app1:\n    image: node:6.9.1-slim\n    volumes:\n    - ./node-app1:/usr/src/app\n    working_dir: /usr/src/app\n    command: npm start\n\n  node-app2:\n    image: node:6.9.1-slim\n    volumes:\n    - ./node-app2:/usr/src/app\n    working_dir: /usr/src/app\n    command: npm start\n\n  nginx-proxy:\n    image: nginx\n    volumes:\n    - ./proxy/conf.d:/etc/nginx/conf.d\n    ports:\n    - \"80:80\"\n    links:\n    - node-app1\n    - node-app2\n```\n\n```\n.\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 node-app1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u251c\u2500\u2500 node-app2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u2514\u2500\u2500 proxy\n    \u2514\u2500\u2500 conf.d\n        \u2514\u2500\u2500 default.conf\n```\n\n```\n$ docker-compose up\n```\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u78ba\u8a8d\u3002\n\n```\nhttp://localhost/first\nhttp://localhost/second\n```\n\n\u4eca\u56de\u306f [node:6.9.1-slim](https://github.com/nodejs/docker-node/blob/4a722c29c0e52624af8b72b4711ebeba8ea39463/6.9/slim/Dockerfile) \u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306f Docker Hub \u306b\u3042\u3052\u3066\u4f7f\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\nElastic Beanstalk \u8907\u6570\u30b3\u30f3\u30c6\u30ca\u74b0\u5883\u3067\u306f Dockerfile \u306f\u4f7f\u3048\u306a\u3044\u3089\u3057\u3044\u3002\u3002([\u516c\u5f0f\u30b5\u30a4\u30c8](http://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/create_deploy_docker_ecs.html))\n\n### 4. \u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n\n[\u516c\u5f0f\u30b5\u30a4\u30c8](http://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/create_deploy_docker_v2config.html)\u3068 docker-compose.yml \u3092\u898b\u6bd4\u3079\u306a\u304c\u3089\u3001Dockerrun.aws.json \u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n```json:Dockerrun.aws.json\n{\n  \"AWSEBDockerrunVersion\": 2,\n  \"volumes\": [\n    {\n      \"name\": \"node-app1-src\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/node-app1\"\n      }\n    },\n    {\n      \"name\": \"node-app2-src\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/node-app2\"\n      }\n    },\n    {\n      \"name\": \"nginx-proxy-conf\",\n      \"host\": {\n        \"sourcePath\": \"/var/app/current/proxy/conf.d\"\n      }\n    }  \n  ],\n  \"containerDefinitions\": [\n    {\n      \"name\": \"node-app1\",\n      \"image\": \"node:6.9.1-slim\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"node-app1-src\",\n          \"containerPath\": \"/usr/src/app\",\n          \"readOnly\": true\n        }\n      ],\n      \"workingDirectory\" : \"/usr/src/app\",\n      \"command\": [\"npm\", \"start\"]\n    },\n    {\n      \"name\": \"node-app2\",\n      \"image\": \"node:6.9.1-slim\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"node-app2-src\",\n          \"containerPath\": \"/usr/src/app\",\n          \"readOnly\": true\n        }\n      ],\n      \"workingDirectory\" : \"/usr/src/app\",\n      \"command\": [\"npm\", \"start\"]\n    },\n    {\n      \"name\": \"nginx-proxy\",\n      \"image\": \"nginx\",\n      \"essential\": true,\n      \"memory\": 128,\n      \"portMappings\": [\n        {\n          \"hostPort\": 80,\n          \"containerPort\": 80\n        }\n      ],\n      \"links\": [\n        \"node-app1\",\n        \"node-app2\"\n      ],\n      \"mountPoints\": [\n        {\n          \"sourceVolume\": \"nginx-proxy-conf\",\n          \"containerPath\": \"/etc/nginx/conf.d\",\n          \"readOnly\": true\n        },\n        {\n          \"sourceVolume\": \"awseb-logs-nginx-proxy\",\n          \"containerPath\": \"/var/log/nginx\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n\u3053\u306e\u3042\u3068\u4f5c\u6210\u3059\u308b zip \u304c\u30db\u30b9\u30c8\u306e /var/app/current \u306b\u89e3\u51cd\u3055\u308c\u307e\u3059\u3002\n`essential`\u306f\u3001true \u306b\u8a2d\u5b9a\u3055\u308c\u305f\u30b3\u30f3\u30c6\u30ca\u304c\u6b62\u307e\u308b\u3068\u4ed6\u306e\u30b3\u30f3\u30c6\u30ca\u3082\u3059\u3079\u3066\u6b62\u307e\u308b\u3068\u3044\u3046\u8a2d\u5b9a\u3002([\u516c\u5f0f\u30b5\u30a4\u30c8](http://docs.aws.amazon.com/ja_jp/AmazonECS/latest/developerguide/task_definition_parameters.html))\n\n\n\n```\n.\n\u251c\u2500\u2500 Dockerrun.aws.json\n\u251c\u2500\u2500 node-app1\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u251c\u2500\u2500 node-app2\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 package.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 server.js\n\u2514\u2500\u2500 proxy\n    \u2514\u2500\u2500 conf.d\n        \u2514\u2500\u2500 default.conf\n```\n\n\u5727\u7e2e\u3057\u307e\u3059\u3002\n\n```\n$ zip -r apps.zip Dockerrun.aws.json node-app1 node-app2 proxy\n```\n\n\n\n### 5. \u30c7\u30d7\u30ed\u30a4\n\nAWS Elastic Beanstalk \u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3002\n\n| \u9805\u76ee | \u5165\u529b\u5024 |\n|:-:|:-:|\n|\u74b0\u5883|\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u74b0\u5883|\n|\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d|\u4efb\u610f|\n|\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0|Multi-container Docker|\n|\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9|\u4f5c\u6210\u3057\u305f apps.zip \u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9|\n\n\u8868\u306b\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001[\u3055\u3089\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a] \u2192 [\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3] \u2192 [\u30ad\u30fc\u30da\u30a2]\u3092\u8a2d\u5b9a\u3059\u308b\u3068\u3001\n\u30db\u30b9\u30c8\u306b SSH \u3067\u5165\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n### 6. \u5b8c\u6210\uff01\n\n\u4f5c\u6210\u5f8c\u3001\u7121\u4e8b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u307e\u3057\u305f\u3002\n\n```\nhttp://******.elasticbeanstalk.com/first\nhttp://******.elasticbeanstalk.com/second\n```\n\nEC2 Container Service \u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u78ba\u8a8d\u3002\n\n<img width=\"893\" alt=\"Screen Shot 2016-11-28 at 13.58.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/94449/692f67c0-d9b1-3296-77ce-e8acf353f8f2.png\">\n\nSSH \u3067\u30db\u30b9\u30c8\u306b\u5165\u3063\u3066\u78ba\u8a8d\u3002\n\n```\n$ sudo docker ps\n```\n<img width=\"1030\" alt=\"Screen Shot 2016-11-28 at 14.00.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/94449/ccdba2b8-eefa-aeda-adf5-c18339865c51.png\">\n\n\n\n\n## \u611f\u60f3\n\u4ee5\u5916\u306b\u3059\u3093\u306a\u308a\u52d5\u304d\u307e\u3057\u305f\u3002\n\u6700\u521d\u306b\u4f5c\u6210\u3059\u308b\u969b\u306f\u3001docker compose \u3067\u3084\u3063\u3066\u307f\u308b\u3068\u3001\u524d\u3082\u3063\u3066\u52d5\u4f5c\u78ba\u8a8d\u304c\u3067\u304d\u308b\u306e\u3068\u3001Dockerrun.aws.json \u3082\u4f5c\u6210\u3057\u3084\u3059\u304f\u306a\u308b\u306e\u3067\u3044\u3044\u3067\u3059\u3002\n\u30ea\u30bd\u30fc\u30b9\u306e\u554f\u984c\u306a\u3069\u3044\u308d\u3044\u308d\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3048\u308b\u304b\u3069\u3046\u304b\u306f\u3001\u307e\u3060\u306a\u3093\u3068\u3082\u3002\u3002\n\n\n\u660e\u65e5\u306f\u3001@kt3k@github \u3055\u3093\u3067\u3059\u3002\n\n## \u3000\n* \u53c2\u8003\u8cc7\u6599\u3000[amazon \u958b\u767a\u8005\u30ac\u30a4\u30c9](http://docs.aws.amazon.com/ja_jp/elasticbeanstalk/latest/dg/create_deploy_docker.html)\n* \u4f5c\u6210\u3057\u305f\u30b3\u30fc\u30c9\u3000[github](https://github.com/fitzr/eb-ecs-sample)\n", "tags": ["AWS", "ElasticBeanstalk", "docker", "docker-compose", "ECS"]}