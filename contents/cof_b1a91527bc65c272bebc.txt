{"tags": ["Python", "ProjectEuler"], "context": " More than 1 year has passed since last update.\n\n\u554f\u984c\n\u9805\u5dee3330\u306e\u7b49\u5dee\u6570\u52171487, 4817, 8147\u306f\u6b21\u306e2\u3064\u306e\u5909\u308f\u3063\u305f\u6027\u8cea\u3092\u6301\u3064.\n(i)3\u3064\u306e\u9805\u306f\u305d\u308c\u305e\u308c\u7d20\u6570\u3067\u3042\u308b. \n(ii)\u5404\u9805\u306f\u4ed6\u306e\u9805\u306e\u7f6e\u63db\u3067\u8868\u3055\u308c\u308b. \n1, 2, 3\u6841\u306e\u7d20\u6570\u306b\u306f\u3053\u306e\u3088\u3046\u306a\u6027\u8cea\u3092\u6301\u3063\u305f\u6570\u5217\u306f\u5b58\u5728\u3057\u306a\u3044\u304c, 4\u6841\u306e\u5897\u52a0\u5217\u306b\u306f\u3082\u30461\u3064\u5b58\u5728\u3059\u308b.\n\u305d\u308c\u3067\u306f\u3053\u306e\u6570\u5217\u306e3\u3064\u306e\u9805\u3092\u9023\u7d50\u3057\u305f12\u6841\u306e\u6570\u3092\u6c42\u3081\u3088.\nhttp://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2049\n\n\u56de\u7b54\n\ncount_numbers\u3067\u5404\u6841\u306e\u6570\u3092\u8868\u3059\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u3059\u3079\u3066\u7d20\u6570\u306e\u7b49\u5dee\u6570\u5217\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u6570\u5217\u306b\u542b\u307e\u308c\u308b\u6570\u306ecount_numbers\u306b\u3088\u308b\u8f9e\u66f8\u304c\u7b49\u3057\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\nmymath\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nhttps://github.com/cof01/ProjectEuler/blob/master/mymath.py\n# coding: utf-8\nimport math\nfrom mymath import get_primes,is_prime\n\ndef count_numbers(n):\n    ret = {i:0 for i in range(10)}\n    for s in str(n):\n        ret[int(s)] += 1\n    return ret\n\ndef check(p,diff,pri):\n    p1, p2, p3 = p, p+diff, p+diff*2\n    if not is_prime(p2, pri):\n        return False\n    if not is_prime(p3, pri):\n        return False\n    if count_numbers(p1) == count_numbers(p2) == count_numbers(p3):\n        return True\n    else:\n        return False\n\ndef main():\n    MIN, MAX = 10**3, 10**4\n    pri = get_primes(MAX)\n    ans = []\n    for p in pri['list']:\n        if p <= MIN:\n            continue\n\n        for diff in range(2, (MAX-p)//2, 2):\n            if check(p,diff,pri):\n                ans.append([p, p+diff, p+diff*2])\n                break\n    print ans\nmain()\n\n\u554f\u984c\n---\n\u9805\u5dee3330\u306e\u7b49\u5dee\u6570\u52171487, 4817, 8147\u306f\u6b21\u306e2\u3064\u306e\u5909\u308f\u3063\u305f\u6027\u8cea\u3092\u6301\u3064.\n\n(i)3\u3064\u306e\u9805\u306f\u305d\u308c\u305e\u308c\u7d20\u6570\u3067\u3042\u308b. \n(ii)\u5404\u9805\u306f\u4ed6\u306e\u9805\u306e\u7f6e\u63db\u3067\u8868\u3055\u308c\u308b. \n1, 2, 3\u6841\u306e\u7d20\u6570\u306b\u306f\u3053\u306e\u3088\u3046\u306a\u6027\u8cea\u3092\u6301\u3063\u305f\u6570\u5217\u306f\u5b58\u5728\u3057\u306a\u3044\u304c, 4\u6841\u306e\u5897\u52a0\u5217\u306b\u306f\u3082\u30461\u3064\u5b58\u5728\u3059\u308b.\n\n\u305d\u308c\u3067\u306f\u3053\u306e\u6570\u5217\u306e3\u3064\u306e\u9805\u3092\u9023\u7d50\u3057\u305f12\u6841\u306e\u6570\u3092\u6c42\u3081\u3088.\nhttp://odz.sakura.ne.jp/projecteuler/index.php?cmd=read&page=Problem%2049\n\n\u56de\u7b54\n---\n1. count_numbers\u3067\u5404\u6841\u306e\u6570\u3092\u8868\u3059\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3002\n2. \u3059\u3079\u3066\u7d20\u6570\u306e\u7b49\u5dee\u6570\u5217\u306b\u3064\u3044\u3066\u3001\u305d\u306e\u6570\u5217\u306b\u542b\u307e\u308c\u308b\u6570\u306ecount_numbers\u306b\u3088\u308b\u8f9e\u66f8\u304c\u7b49\u3057\u3044\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3002\n\nmymath\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\nhttps://github.com/cof01/ProjectEuler/blob/master/mymath.py\n\n```py\n# coding: utf-8\nimport math\nfrom mymath import get_primes,is_prime\n\ndef count_numbers(n):\n    ret = {i:0 for i in range(10)}\n    for s in str(n):\n        ret[int(s)] += 1\n    return ret\n\ndef check(p,diff,pri):\n    p1, p2, p3 = p, p+diff, p+diff*2\n    if not is_prime(p2, pri):\n        return False\n    if not is_prime(p3, pri):\n        return False\n    if count_numbers(p1) == count_numbers(p2) == count_numbers(p3):\n        return True\n    else:\n        return False\n\ndef main():\n    MIN, MAX = 10**3, 10**4\n    pri = get_primes(MAX)\n    ans = []\n    for p in pri['list']:\n        if p <= MIN:\n            continue\n            \n        for diff in range(2, (MAX-p)//2, 2):\n            if check(p,diff,pri):\n                ans.append([p, p+diff, p+diff*2])\n                break\n    print ans\nmain()\n```\n"}