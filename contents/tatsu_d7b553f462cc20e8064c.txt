{"context": "Android Things Developer Preview 2\u306e\u30ea\u30ea\u30fc\u30b9\u3068\u540c\u6642\u306b\u3001\u30c6\u30f3\u30bd\u30eb\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\u30b5\u30f3\u30d7\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\nRelease Notes\nPreview 2\u304b\u3089Raspberry Pi 3\u3001Intel Edison\u3001NXP Pico\u306e\u307b\u304b\u306b\u3001Intel Joule\u3082\u52a0\u308f\u308a\u307e\u3057\u305f\u3002Native peripheral API\u306e\u30b5\u30dd\u30fc\u30c8\u3082\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u304c\u3053\u3053\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\u3002\nAndroid Things TensorFlow image classifier sample\n\u30c6\u30f3\u30bd\u30eb\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001TensorFlow Android Camera Demo TF_Classify app\u304c\u30d9\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u3066\u3001Android TensorFlow inference library\u306fAAR\u306b\u30d3\u30eb\u30c9\u3055\u308c\u305f\u3082\u306e\u3092\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u306b\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3056\u3063\u3068\u30bd\u30fc\u30b9\u3092\u898b\u305f\u3050\u3089\u3044\u3067\u306f\u30c6\u30f3\u30bd\u30eb\u4f7f\u3063\u3066\u307e\u3059\u3050\u3089\u3044\u3057\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u81ea\u5206\u306e\u3088\u3046\u306a\u7d20\u4eba\u306b\u306f\u3061\u3087\u3046\u3069\u3088\u3044\u3068\u3063\u304b\u304b\u308a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3042\u3068\u3001Camera\u5236\u5fa1\u306b\u3064\u3044\u3066\u3082\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nAndroid Things\u306b\u3064\u3044\u3066\u306f\u3001Raspberry Pi3\u306b\u3088\u308bAndroid Things\u5165\u9580\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u6e96\u5099\nRaspberry Pi 3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nAndroid Studio 2.2+\nRaspberry Pi 3\nRaspberry Pi 3 camera module V2\n\u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\uff08\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\uff091\u500b\n\u62b5\u6297 1K\u03a9 1\u500b\n\u62b5\u6297 470\u03a9 1\u500b\u203b\u81ea\u5206\u306f330\u03a9\u3067\u4ee3\u7528\u3002\nLED 1\u500b\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n\u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc \u30aa\u30b9\u30fc\u30aa\u30b92\u672c\u3001\u30aa\u30b9-\u30e1\u30b94\u672c\n\u30b9\u30d4\u30fc\u30ab\u30fc\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\n\u30b9\u30d4\u30fc\u30ab\u30fc\uff08\u30a4\u30e4\u30db\u30f3\uff09\u3068\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306f\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u3067\u3059\u304c\u3001\u3042\u3063\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3059\u3002\u3042\u3068\u3001USB\u30de\u30a6\u30b9\u3082\u3002\nAndroid Things\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u3001\u3053\u3053\u304b\u3089\u6700\u65b0\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u3066\u3001\u304a\u306a\u3058\u307f\u306e\u624b\u9806\u3067SD\u30ab\u30fc\u30c9\u306b\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3068LAN\u30b1\u30fc\u30d6\u30eb\u3092\u63a5\u7d9a\u3057\u3066\u96fb\u6e90\u3092\u5165\u308c\u8d77\u52d5\u3059\u308b\u3068\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306bIP\u30a2\u30c9\u30ec\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001adb\u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\n$ adb connect <ip-address>\nconnected to <ip-address>:5555\n\n\u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8DNS\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308c\u3070\u3001IP\u30a2\u30c9\u30ec\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001Android.local\u3067\u3082\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n$ adb connect Android.local\n\n\u4ee5\u964d\u306fWiFi\u3067\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n$ adb shell am startservice \\\n    -n com.google.wifisetup/.WifiSetupService \\\n    -a WifiSetupService.Connect \\\n    -e ssid <Network_SSID> \\\n    -e passphrase <Network_Passcode>\n\n\n\u5b9f\u884c\n\u30d3\u30eb\u30c9\u624b\u9806\u306f\u306a\u304f\u3001\u3068\u306b\u304b\u304f\u30bd\u30fc\u30b9\u3092\u843d\u3068\u3057\u3066\u304d\u3066\u3001Android Studio\u3067\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\n\u6700\u521d\u306b\u30ab\u30e1\u30e9\u3092\u4f7f\u7528\u3057\u3066\u3088\u3044\u304b\u8a31\u53ef\u3092\u6c42\u3081\u3066\u304d\u307e\u3059\u3002ALLOW\u30922\u56de\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u65e2\u77e5\u306e\u4e0d\u5177\u5408\u306e\u305f\u3081\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u52dd\u624b\u306b\u30ea\u30d6\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u306a\u3044\u69cb\u6210\u3067\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\nLED\u304c\u70b9\u706f\u3059\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002\n\u30ab\u30e1\u30e9\u3092\u5206\u985e\u3055\u305b\u305f\u3044\u3082\u306e\u306b\u5411\u3051\u307e\u3059\u3002\n\u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002\nLED\u304c\u51e6\u7406\u4e2d\u7d041\u79d2\u6d88\u706f\u3057\u305f\u306e\u3061\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u64ae\u5f71\u753b\u50cf\u3068\u5206\u985e\u9805\u76ee\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u3068\u3082\u306b\u3001Text-To-Speech\u306b\u3088\u3063\u3066\u8aad\u307f\u4e0a\u3052\u3089\u308c\u307e\u3059\u3002\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u306a\u3044\u69cb\u6210\u3067\u306flogcat\u3067\u7d50\u679c\u3092\u307f\u308c\u308b\u3068\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3089\u3057\u3044\u30ed\u30b0\u51fa\u529b\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nRaspberry Pi\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u51fa\u529b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30aa\u30fc\u30c8(HDMI)\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Android Things\u3067\u306e\u51fa\u529b\u5148\u306e\u5909\u66f4\u65b9\u6cd5\u306f\u4e0d\u660e\u3067\u3059\uff08\u77e5\u308a\u307e\u305b\u3093\uff09\u3002HDMI\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u30b9\u30d4\u30fc\u30ab\u30fc\u304b\u30a4\u30e4\u30db\u30f3\u3092\u3064\u3051\u308c\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\u3092\u805e\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3061\u306a\u307f\u306b\u3001\u79c1\u306e\u9854\u306f\u300129.8%\u306e\u78ba\u7387\u3067oxygen mask\u3067\u3057\u305f\u3002\u2935\ufe0e\n\n\u8981\u6240\uff08\u3056\u3063\u304f\u308a\uff09\n\u307e\u305a\u7d50\u679c\u304b\u3089\u3002ImageClassifierActivity\u3067ImageReader.OnImageAvailableListener\u3092\u5b9f\u88c5\u3057\u3001\u64ae\u5f71\u7d50\u679c\u3092\u3082\u3068\u306b\u8868\u793a\u30fb\u5206\u985e\u30fb\u8aad\u307f\u4e0a\u3052\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nImageClassifierActivity.java\npublic class ImageClassifierActivity extends Activity implements ImageReader.OnImageAvailableListener {\n\n...snip...\n\n    @Override\n    public void onImageAvailable(ImageReader reader) {\n        final Bitmap bitmap;\n        try (Image image = reader.acquireNextImage()) {\n            bitmap = mImagePreprocessor.preprocessImage(image);\n        }\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                mImage.setImageBitmap(bitmap);\n            }\n        });\n\n        final List<Classifier.Recognition> results = mTensorFlowClassifier.recognizeImage(bitmap);\n\n        if (mTtsEngine != null) {\n            // speak out loud the result of the image recognition\n            if (Math.random() < 0.3) {\n                mTtsEngine.setPitch(0.2f);\n                mTtsEngine.speak(\"I see dead people...\", TextToSpeech.QUEUE_ADD, null, \"ID\");\n                mTtsEngine.setPitch(1);\n                mTtsEngine.speak(\"just kidding...\", TextToSpeech.QUEUE_ADD, null, \"ID\");\n            } else {\n                mTtsEngine.setPitch(1f);\n                mTtsEngine.setVoice(mTtsEngine.getDefaultVoice());\n            }\n            String message;\n            if (results.isEmpty()) {\n                message = \"I don't understand what I see. Am I using drugs?\";\n            } else if (results.size() == 1 || results.get(0).getConfidence() > 0.4f) {\n                message = String.format(Locale.getDefault(), \"I see a %s\",\n                        results.get(0).getTitle());\n            } else {\n                message = String.format(Locale.getDefault(),\n                        \"This is a %s or maybe a %s\",\n                        results.get(0).getTitle(), results.get(1).getTitle());\n            }\n            mTtsEngine.speak(message, TextToSpeech.QUEUE_ADD, null, \"ID\");\n        } else {\n            // if theres no TTS, we don't need to wait until the utterance is spoken, so we set\n            // to ready right away.\n           setReady(true);\n        }\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i=0; i<mResultViews.length; i++) {\n                    if (results.size() > i) {\n                        Classifier.Recognition r = results.get(i);\n                        mResultViews[i].setText(r.toString());\n                    } else {\n                        mResultViews[i].setText(null);\n                    }\n                }\n            }\n        });\n    }\n\n\nImageClassifierActivity#mInitializeOnBackground\u3067CameraHandler#initializeCamera\u306b\u3088\u308a\u81ea\u8eab\u306b\u64ae\u5f71\u7d50\u679c\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u540c\u3058\u7b87\u6240\u3067\u3001TextToSpeech\u3084TensorFlow\u306e\u521d\u671f\u5316\u3082\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nImageClassifierActivity.java\n    private Runnable mInitializeOnBackground = new Runnable() {\n        @Override\n        public void run() {\n            mImagePreprocessor = new ImagePreprocessor(CameraHandler.IMAGE_WIDTH,\n                    CameraHandler.IMAGE_HEIGHT, TensorFlowImageClassifier.INPUT_SIZE);\n\n            mTtsEngine = new TextToSpeech(ImageClassifierActivity.this,\n                    new TextToSpeech.OnInitListener() {\n                        @Override\n                        public void onInit(int status) {\n                            if (status == TextToSpeech.SUCCESS) {\n                                mTtsEngine.setLanguage(Locale.US);\n                                mTtsEngine.setOnUtteranceProgressListener(utteranceListener);\n                            } else {\n                                mTtsEngine = null;\n                            }\n                        }\n                    });\n            mCameraHandler = CameraHandler.getInstance();\n            mCameraHandler.initializeCamera(\n                    ImageClassifierActivity.this, mBackgroundHandler,\n                    ImageClassifierActivity.this);\n\n            mTensorFlowClassifier = new TensorFlowImageClassifier(ImageClassifierActivity.this);\n\n            setReady(true);\n        }\n    };\n\n\nonCreate\u304b\u3089\u547c\u3070\u308c\u308bImageClassifierActivity#init\u3067\u3001\u30dc\u30bf\u30f3\u3068LED\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u3068\u3082\u306b\u3001\u524d\u8ff0\u306eImageClassifierActivity#mInitializeOnBackground\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\nImageClassifierActivity.java\n    private void init() {\n        try {\n            mButtonDriver = new ButtonInputDriver(BUTTON_PIN, Button.LogicState.PRESSED_WHEN_LOW,\n                    KeyEvent.KEYCODE_ENTER);\n            mButtonDriver.register();\n            PeripheralManagerService service = new PeripheralManagerService();\n            mReadyLED = service.openGpio(LED_PIN);\n            mReadyLED.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW);\n        } catch (IOException e) {\n            Log.w(TAG, \"Could not open GPIO\", e);\n        }\n\n        mBackgroundThread = new HandlerThread(\"BackgroundThread\");\n        mBackgroundThread.start();\n        mBackgroundHandler = new Handler(mBackgroundThread.getLooper());\n        mBackgroundHandler.post(mInitializeOnBackground);\n    }\n\n\nAndroid Things Developer Preview 2\u306e\u30ea\u30ea\u30fc\u30b9\u3068\u540c\u6642\u306b\u3001\u30c6\u30f3\u30bd\u30eb\u306b\u3088\u308b\u753b\u50cf\u5206\u985e\u30b5\u30f3\u30d7\u30eb\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n[Release Notes](https://developer.android.com/things/preview/releases.html#developer_preview_2)\n\nPreview 2\u304b\u3089Raspberry Pi 3\u3001Intel Edison\u3001NXP Pico\u306e\u307b\u304b\u306b\u3001Intel Joule\u3082\u52a0\u308f\u308a\u307e\u3057\u305f\u3002Native peripheral API\u306e\u30b5\u30dd\u30fc\u30c8\u3082\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u304c\u3053\u3053\u3067\u306f\u89e6\u308c\u307e\u305b\u3093\u3002\n\n[Android Things TensorFlow image classifier sample](https://github.com/androidthings/sample-tensorflow-imageclassifier)\n\n\u30c6\u30f3\u30bd\u30eb\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001[TensorFlow Android Camera Demo TF_Classify app](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/examples/android)\u304c\u30d9\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u3066\u3001[Android TensorFlow inference library](https://github.com/tensorflow/tensorflow/tree/master/tensorflow/contrib/android)\u306fAAR\u306b\u30d3\u30eb\u30c9\u3055\u308c\u305f\u3082\u306e\u3092\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u306b\u30ea\u30f3\u30af\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3056\u3063\u3068\u30bd\u30fc\u30b9\u3092\u898b\u305f\u3050\u3089\u3044\u3067\u306f\u30c6\u30f3\u30bd\u30eb\u4f7f\u3063\u3066\u307e\u3059\u3050\u3089\u3044\u3057\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\u81ea\u5206\u306e\u3088\u3046\u306a\u7d20\u4eba\u306b\u306f\u3061\u3087\u3046\u3069\u3088\u3044\u3068\u3063\u304b\u304b\u308a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3042\u3068\u3001Camera\u5236\u5fa1\u306b\u3064\u3044\u3066\u3082\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nAndroid Things\u306b\u3064\u3044\u3066\u306f\u3001[Raspberry Pi3\u306b\u3088\u308bAndroid Things\u5165\u9580](http://qiita.com/tatsu/items/dc98d600ff6c35832243)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n## \u6e96\u5099\nRaspberry Pi 3\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n![rpi3_schematics_tf.png](https://qiita-image-store.s3.amazonaws.com/0/49088/faf7f327-415a-559b-b363-c03ef904b885.png)\n\n- Android Studio 2.2+\n- Raspberry Pi 3\n- Raspberry Pi 3 camera module V2\n- \u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\uff08\u30bf\u30af\u30c8\u30b9\u30a4\u30c3\u30c1\uff091\u500b\n- \u62b5\u6297 1K\u03a9 1\u500b\n- \u62b5\u6297 470\u03a9 1\u500b\u203b\u81ea\u5206\u306f330\u03a9\u3067\u4ee3\u7528\u3002\n- LED 1\u500b\n- \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n- \u30b8\u30e3\u30f3\u30d1\u30fc\u30ef\u30a4\u30e4\u30fc \u30aa\u30b9\u30fc\u30aa\u30b92\u672c\u3001\u30aa\u30b9-\u30e1\u30b94\u672c\n- \u30b9\u30d4\u30fc\u30ab\u30fc\n- \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\n\n\u30b9\u30d4\u30fc\u30ab\u30fc\uff08\u30a4\u30e4\u30db\u30f3\uff09\u3068\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306f\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u3067\u3059\u304c\u3001\u3042\u3063\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3059\u3002\u3042\u3068\u3001USB\u30de\u30a6\u30b9\u3082\u3002\n\nAndroid Things\u306e\u30a4\u30e1\u30fc\u30b8\u306f\u3001[\u3053\u3053](https://developer.android.com/things/preview/download.html)\u304b\u3089\u6700\u65b0\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304d\u3066\u3001[\u304a\u306a\u3058\u307f](https://www.raspberrypi.org/documentation/installation/installing-images/)\u306e\u624b\u9806\u3067SD\u30ab\u30fc\u30c9\u306b\u30d5\u30e9\u30c3\u30b7\u30e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3068LAN\u30b1\u30fc\u30d6\u30eb\u3092\u63a5\u7d9a\u3057\u3066\u96fb\u6e90\u3092\u5165\u308c\u8d77\u52d5\u3059\u308b\u3068\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306bIP\u30a2\u30c9\u30ec\u30b9\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001adb\u3067\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n```\n$ adb connect <ip-address>\nconnected to <ip-address>:5555\n```\n\n\u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8DNS\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308c\u3070\u3001IP\u30a2\u30c9\u30ec\u30b9\u306e\u4ee3\u308f\u308a\u306b\u3001Android.local\u3067\u3082\u3064\u306a\u304c\u308a\u307e\u3059\u3002\n\n```\n$ adb connect Android.local\n```\n\n\u4ee5\u964d\u306fWiFi\u3067\u63a5\u7d9a\u3067\u304d\u307e\u3059\u3002\n\n```\n$ adb shell am startservice \\\n    -n com.google.wifisetup/.WifiSetupService \\\n    -a WifiSetupService.Connect \\\n    -e ssid <Network_SSID> \\\n    -e passphrase <Network_Passcode>\n```\n\n## \u5b9f\u884c\n\n\u30d3\u30eb\u30c9\u624b\u9806\u306f\u306a\u304f\u3001\u3068\u306b\u304b\u304f\u30bd\u30fc\u30b9\u3092\u843d\u3068\u3057\u3066\u304d\u3066\u3001Android Studio\u3067\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n![screen-0001.png](https://qiita-image-store.s3.amazonaws.com/0/49088/85954c75-0b84-1ea4-9966-65890b1d86ee.png)\n\n\n1. \u6700\u521d\u306b\u30ab\u30e1\u30e9\u3092\u4f7f\u7528\u3057\u3066\u3088\u3044\u304b\u8a31\u53ef\u3092\u6c42\u3081\u3066\u304d\u307e\u3059\u3002ALLOW\u30922\u56de\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001[\u65e2\u77e5\u306e\u4e0d\u5177\u5408](https://developer.android.com/things/preview/releases.html#known_issues)\u306e\u305f\u3081\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u52dd\u624b\u306b\u30ea\u30d6\u30fc\u30c8\u3057\u307e\u3057\u305f\u3002\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u306a\u3044\u69cb\u6210\u3067\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n2. LED\u304c\u70b9\u706f\u3059\u308b\u307e\u3067\u5f85\u3061\u307e\u3059\u3002\n3. \u30ab\u30e1\u30e9\u3092\u5206\u985e\u3055\u305b\u305f\u3044\u3082\u306e\u306b\u5411\u3051\u307e\u3059\u3002\n4. \u30d7\u30c3\u30b7\u30e5\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002\n5. LED\u304c\u51e6\u7406\u4e2d\u7d041\u79d2\u6d88\u706f\u3057\u305f\u306e\u3061\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u64ae\u5f71\u753b\u50cf\u3068\u5206\u985e\u9805\u76ee\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u3068\u3082\u306b\u3001Text-To-Speech\u306b\u3088\u3063\u3066\u8aad\u307f\u4e0a\u3052\u3089\u308c\u307e\u3059\u3002\n6. \u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u306a\u3044\u69cb\u6210\u3067\u306flogcat\u3067\u7d50\u679c\u3092\u307f\u308c\u308b\u3068\u3042\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3089\u3057\u3044\u30ed\u30b0\u51fa\u529b\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n7. Raspberry Pi\u306e\u30aa\u30fc\u30c7\u30a3\u30aa\u51fa\u529b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30aa\u30fc\u30c8(HDMI)\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Android Things\u3067\u306e\u51fa\u529b\u5148\u306e\u5909\u66f4\u65b9\u6cd5\u306f\u4e0d\u660e\u3067\u3059\uff08\u77e5\u308a\u307e\u305b\u3093\uff09\u3002HDMI\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306b\u30b9\u30d4\u30fc\u30ab\u30fc\u304b\u30a4\u30e4\u30db\u30f3\u3092\u3064\u3051\u308c\u3070\u3001\u30c6\u30ad\u30b9\u30c8\u306e\u8aad\u307f\u4e0a\u3052\u3092\u805e\u3051\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n![screen-0002.png](https://qiita-image-store.s3.amazonaws.com/0/49088/15732f23-c57c-6d99-e650-bb531f923713.png)\n\n\n\u3061\u306a\u307f\u306b\u3001\u79c1\u306e\u9854\u306f\u300129.8%\u306e\u78ba\u7387\u3067oxygen mask\u3067\u3057\u305f\u3002\u2935\ufe0e\n\n## \u8981\u6240\uff08\u3056\u3063\u304f\u308a\uff09\n\n\u307e\u305a\u7d50\u679c\u304b\u3089\u3002ImageClassifierActivity\u3067ImageReader.OnImageAvailableListener\u3092\u5b9f\u88c5\u3057\u3001\u64ae\u5f71\u7d50\u679c\u3092\u3082\u3068\u306b\u8868\u793a\u30fb\u5206\u985e\u30fb\u8aad\u307f\u4e0a\u3052\u3092\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```ImageClassifierActivity.java\npublic class ImageClassifierActivity extends Activity implements ImageReader.OnImageAvailableListener {\n\n...snip...\n\n    @Override\n    public void onImageAvailable(ImageReader reader) {\n        final Bitmap bitmap;\n        try (Image image = reader.acquireNextImage()) {\n            bitmap = mImagePreprocessor.preprocessImage(image);\n        }\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                mImage.setImageBitmap(bitmap);\n            }\n        });\n\n        final List<Classifier.Recognition> results = mTensorFlowClassifier.recognizeImage(bitmap);\n\n        if (mTtsEngine != null) {\n            // speak out loud the result of the image recognition\n            if (Math.random() < 0.3) {\n                mTtsEngine.setPitch(0.2f);\n                mTtsEngine.speak(\"I see dead people...\", TextToSpeech.QUEUE_ADD, null, \"ID\");\n                mTtsEngine.setPitch(1);\n                mTtsEngine.speak(\"just kidding...\", TextToSpeech.QUEUE_ADD, null, \"ID\");\n            } else {\n                mTtsEngine.setPitch(1f);\n                mTtsEngine.setVoice(mTtsEngine.getDefaultVoice());\n            }\n            String message;\n            if (results.isEmpty()) {\n                message = \"I don't understand what I see. Am I using drugs?\";\n            } else if (results.size() == 1 || results.get(0).getConfidence() > 0.4f) {\n                message = String.format(Locale.getDefault(), \"I see a %s\",\n                        results.get(0).getTitle());\n            } else {\n                message = String.format(Locale.getDefault(),\n                        \"This is a %s or maybe a %s\",\n                        results.get(0).getTitle(), results.get(1).getTitle());\n            }\n            mTtsEngine.speak(message, TextToSpeech.QUEUE_ADD, null, \"ID\");\n        } else {\n            // if theres no TTS, we don't need to wait until the utterance is spoken, so we set\n            // to ready right away.\n           setReady(true);\n        }\n\n        runOnUiThread(new Runnable() {\n            @Override\n            public void run() {\n                for (int i=0; i<mResultViews.length; i++) {\n                    if (results.size() > i) {\n                        Classifier.Recognition r = results.get(i);\n                        mResultViews[i].setText(r.toString());\n                    } else {\n                        mResultViews[i].setText(null);\n                    }\n                }\n            }\n        });\n    }\n```\n\nImageClassifierActivity#mInitializeOnBackground\u3067CameraHandler#initializeCamera\u306b\u3088\u308a\u81ea\u8eab\u306b\u64ae\u5f71\u7d50\u679c\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u305b\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002\u540c\u3058\u7b87\u6240\u3067\u3001TextToSpeech\u3084TensorFlow\u306e\u521d\u671f\u5316\u3082\u884c\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```ImageClassifierActivity.java\n    private Runnable mInitializeOnBackground = new Runnable() {\n        @Override\n        public void run() {\n            mImagePreprocessor = new ImagePreprocessor(CameraHandler.IMAGE_WIDTH,\n                    CameraHandler.IMAGE_HEIGHT, TensorFlowImageClassifier.INPUT_SIZE);\n\n            mTtsEngine = new TextToSpeech(ImageClassifierActivity.this,\n                    new TextToSpeech.OnInitListener() {\n                        @Override\n                        public void onInit(int status) {\n                            if (status == TextToSpeech.SUCCESS) {\n                                mTtsEngine.setLanguage(Locale.US);\n                                mTtsEngine.setOnUtteranceProgressListener(utteranceListener);\n                            } else {\n                                mTtsEngine = null;\n                            }\n                        }\n                    });\n            mCameraHandler = CameraHandler.getInstance();\n            mCameraHandler.initializeCamera(\n                    ImageClassifierActivity.this, mBackgroundHandler,\n                    ImageClassifierActivity.this);\n\n            mTensorFlowClassifier = new TensorFlowImageClassifier(ImageClassifierActivity.this);\n\n            setReady(true);\n        }\n    };\n```\n\n\n\n\n\n\n\nonCreate\u304b\u3089\u547c\u3070\u308c\u308bImageClassifierActivity#init\u3067\u3001\u30dc\u30bf\u30f3\u3068LED\u306e\u521d\u671f\u8a2d\u5b9a\u3092\u884c\u3046\u3068\u3068\u3082\u306b\u3001\u524d\u8ff0\u306eImageClassifierActivity#mInitializeOnBackground\u3092\u5b9f\u884c\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ImageClassifierActivity.java\n    private void init() {\n        try {\n            mButtonDriver = new ButtonInputDriver(BUTTON_PIN, Button.LogicState.PRESSED_WHEN_LOW,\n                    KeyEvent.KEYCODE_ENTER);\n            mButtonDriver.register();\n            PeripheralManagerService service = new PeripheralManagerService();\n            mReadyLED = service.openGpio(LED_PIN);\n            mReadyLED.setDirection(Gpio.DIRECTION_OUT_INITIALLY_LOW);\n        } catch (IOException e) {\n            Log.w(TAG, \"Could not open GPIO\", e);\n        }\n\n        mBackgroundThread = new HandlerThread(\"BackgroundThread\");\n        mBackgroundThread.start();\n        mBackgroundHandler = new Handler(mBackgroundThread.getLooper());\n        mBackgroundHandler.post(mInitializeOnBackground);\n    }\n```\n\n", "tags": ["AndroidThings", "TensorFlow", "RaspberryPi", "Android", "IoT"]}