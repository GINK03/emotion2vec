{"context": " More than 1 year has passed since last update.\u3053\u3093\u306b\u3061\u306f\u3002\n\u30b0\u30e9\u30d5\u306e\u9023\u7d50\u6210\u5206\uff08\u9023\u7d50\u30b0\u30e9\u30d5\u3001\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020\uff09\u3092\u6c42\u3081\u308b\u8a08\u7b97\u3067\u3001\"Python connected components - Stack Overflow\" \u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\u305d\u3053\u306e\u30bd\u30fc\u30b9\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u52d5\u304b\u3057\u3001\u691c\u7b97\u306e\u305f\u3081\u306b networkx \u306b\u3088\u308b\u7d50\u679c\u3068\u6bd4\u3079\u307e\u3057\u305f\u3002\n$ ./connected_components.py\ngraph = {0: [1, 2, 3], 1: [2], 2: [], 3: [4, 6], 4: [], 5: [7], 6: [], 7: []}\n[[0, 1, 2, 3, 4, 6], [5, 7]]\nTrue (equal to one derived from networkx)\n\n\n\nconnected_components.py\n#!/usr/bin/env python\nfrom __future__ import print_function\n\ndef connected_components(graph):\n    seen = set()\n    def component(n):\n        nodes = set([n])\n        while nodes:\n            n = nodes.pop()\n            seen.add(n)\n            nodes |= set(graph[n]) - seen\n            yield n\n    for n in graph:\n        if n not in seen:\n            yield component(n)\n\ndef print_gen(gen):\n    print([list(x) for x in gen])\n\ndef check_connected(graph):\n    import networkx as nx\n    G = nx.Graph()\n    G.add_nodes_from(graph.keys())\n    for k, v in graph.items():\n        for n in v:\n            G.add_edge(k, n)\n    check = sorted([set(x) for x in nx.connected_components(G)]) == sorted([set(x) for x in connected_components(graph)])\n    print(check, \"(equal to one derived from networkx)\")\n\ngraph = {0: [1, 2, 3], 1: [2], 2: [], 3: [4, 6], 4: [], 5: [7], 6: [], 7: []}\n\nprint(\"graph =\", graph)\nprint_gen(connected_components(graph))\ncheck_connected(graph)\n\n# graph:\n#       0\n#     / | \\\n#    1--2  3\n#          | \\\n#          4  6\n#    5--7\n\n\n\n\u691c\u7b97\u5224\u5b9a\u90e8\u304c\u5c11\u3057\u7a1a\u62d9\u3067\u6050\u7e2e\u3067\u3059\u3002\n\n\u3053\u3093\u306b\u3061\u306f\u3002\n\u30b0\u30e9\u30d5\u306e\u9023\u7d50\u6210\u5206\uff08[\u9023\u7d50\u30b0\u30e9\u30d5](https://ja.wikipedia.org/wiki/\u9023\u7d50\u30b0\u30e9\u30d5)\u3001[\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020](https://ja.wikipedia.org/wiki/\u7d20\u96c6\u5408\u30c7\u30fc\u30bf\u69cb\u9020)\uff09\u3092\u6c42\u3081\u308b\u8a08\u7b97\u3067\u3001\"[Python connected components - Stack Overflow](http://stackoverflow.com/questions/10301000/python-connected-components)\" \u3092\u898b\u3064\u3051\u307e\u3057\u305f\u3002\u305d\u3053\u306e\u30bd\u30fc\u30b9\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u52d5\u304b\u3057\u3001\u691c\u7b97\u306e\u305f\u3081\u306b networkx \u306b\u3088\u308b\u7d50\u679c\u3068\u6bd4\u3079\u307e\u3057\u305f\u3002\n\n```console\n$ ./connected_components.py\ngraph = {0: [1, 2, 3], 1: [2], 2: [], 3: [4, 6], 4: [], 5: [7], 6: [], 7: []}\n[[0, 1, 2, 3, 4, 6], [5, 7]]\nTrue (equal to one derived from networkx)\n\n```\n\n```connected_components.py\n#!/usr/bin/env python\nfrom __future__ import print_function\n\ndef connected_components(graph):\n    seen = set()\n    def component(n):\n        nodes = set([n])\n        while nodes:\n            n = nodes.pop()\n            seen.add(n)\n            nodes |= set(graph[n]) - seen\n            yield n\n    for n in graph:\n        if n not in seen:\n            yield component(n)\n\ndef print_gen(gen):\n    print([list(x) for x in gen])\n\ndef check_connected(graph):\n    import networkx as nx\n    G = nx.Graph()\n    G.add_nodes_from(graph.keys())\n    for k, v in graph.items():\n        for n in v:\n            G.add_edge(k, n)\n    check = sorted([set(x) for x in nx.connected_components(G)]) == sorted([set(x) for x in connected_components(graph)])\n    print(check, \"(equal to one derived from networkx)\")\n\ngraph = {0: [1, 2, 3], 1: [2], 2: [], 3: [4, 6], 4: [], 5: [7], 6: [], 7: []}\n\nprint(\"graph =\", graph)\nprint_gen(connected_components(graph))\ncheck_connected(graph)\n\n# graph:\n#       0\n#     / | \\\n#    1--2  3\n#          | \\\n#          4  6\n#    5--7\n```\n\n- \u691c\u7b97\u5224\u5b9a\u90e8\u304c\u5c11\u3057\u7a1a\u62d9\u3067\u6050\u7e2e\u3067\u3059\u3002\n", "tags": ["networkx", "Python", "\u30b0\u30e9\u30d5"]}