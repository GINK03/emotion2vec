{"context": " More than 1 year has passed since last update.LINQ to BigQuery\u3092\u4f7f\u3063\u3066Sankey Diagram\uff08\u30b5\u30f3\u30ad\u30fc\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\uff09\u3092\u4f5c\u6210\u3057\u3088\u3046 \u3092\u8aad\u3093\u3067\u81ea\u5206\u3082\u30b5\u30f3\u30ad\u30fc\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u4f5c\u308a\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u524d\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3059\u308b\u3093\u3058\u3083\u306a\u304f\u3066BigQuery\u4e0a\u306b\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u304b\u3089 DataFu\u306eSessionize \u7684\u306a\u306e\u3092\u4f5c\u308a\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u305d\u306e\u30e1\u30e2\u3002\n\u3068\u3044\u3046\u304b \u3053\u306e\u8a18\u4e8b \u306eBigQuery\u3078\u306e\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u3059\u3002\n\nWindow\u95a2\u6570\nBigQuery\u306b\u306f(\u3082)Window\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30af\u30a8\u30ea\n1\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u9593\u9694\u306f30\u5206(BQ\u306e\u5834\u5408\u306f\u30de\u30a4\u30af\u30ed\u79d2Step\u306a\u306e\u306730*60*1000000)\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u9069\u5b9c\u5909\u66f4\u53ef\u80fd\u3067\u3059\u3002\n\u307e\u305f1\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u8907\u6570\u5206\u3051\u3066\u3044\u308b\u5834\u5408\u306f\u9069\u5b9c TABLE_DATE_RANGE \u95a2\u6570\u3068\u304b TABLE_REGEXP \u95a2\u6570\u3068\u304b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\nSELECT\n  uuid,\n  CONCAT(uuid, '-', string(session_id)) AS session_id,\n  event_time\nFROM\n(\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n) AS t2\nORDER BY uuid, event_time\n\n\nTL;DR;\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5148\u982d\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\u3002\n\n\u76f4\u524d\u306e\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u3092\u62bd\u51fa\u3059\u308b\u3002\nWindow\u95a2\u6570\u306b\u5bb9\u6613\u3055\u308c\u3066\u3044\u308b LAG ~ OVER \u3092\u4f7f\u7528\u3057\u3066\u76f4\u524d\u306e\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u76f4\u524d \u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306bOVER\u3092\u4f7f\u3063\u3066uuid\u6bce(=PARTITION BY uuid)\u3067event_time(=ODER BY event_time)\u9806\u306b\u4e26\u3079\u3066\u8a72\u5f53\u30ec\u30b3\u30fc\u30c9\u30681\u500b\u524d\u306e\u30ec\u30b3\u30fc\u30c9(=RANGE BETWEEN 1 PRECEDING AND CURRENT ROW)\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002(\u9055\u3063\u305f\u3089\u3059\u3044\u307e\u305b\u3093)\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n\nAVERAGE(value) OVER (PARTITION BY uuid ORDER BY event_id RANGE BETWEEN 4 PRECEDING AND CURRENT ROW)\n\n\u3068\u3059\u308b\u3053\u3068\u3067\u30e6\u30fc\u30b6\u6bce\u306b\u76f4\u8fd14\u500b\u306e\u30c7\u30fc\u30bf(value)\u306e\u79fb\u52d5\u5e73\u5747\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5148\u982d\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\u3002\n\u8a72\u5f53\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u3068\u76f4\u524d\u306e\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u306e\u5dee\u3092\u7b97\u51fa\u3057\u306630\u5206\u4ee5\u4e0a\u96e2\u308c\u3066\u3044\u305f\u3089\u5225\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3053\u306e2\u3064\u306e\u30af\u30a8\u30ea\u304c1\u3064\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001BQ\u306e\u5834\u5408\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u305f\u30812\u3064\u306b\u5206\u3051\u3066\u3044\u307e\u3059\u3002\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n\n\n\u5148\u982d\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u63a1\u756a\u3059\u308b\n\u3053\u3053\u3067\u3082Window\u95a2\u6570\u306eSUM ~ OVER\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u6bce\u306b\u63a1\u756a\u3057\u307e\u3059\u3002\n(\u3053\u306e\u5834\u5408RANGE\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081SUM\u306e\u7d50\u679c\u306f\u30e6\u30fc\u30b6\u6bce\u306b\u7a4d\u7b97\u3055\u308c\u305f\u7d50\u679c\u306b\u306a\u308a\u307e\u3059)\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n\n\nuuid\u3068\u304f\u3063\u3064\u3051\u3066\u30e6\u30cb\u30fc\u30af\u306b\u3059\u308b\nsession_id\u306f\u6570\u5024\u306a\u306e\u3067 string\u95a2\u6570\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u5316\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nSELECT\n  uuid,\n  CONCAT(uuid, '-', string(session_id)) AS session_id,\n  event_time\nFROM\n(\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n) AS t2\n\n\n[LINQ to BigQuery\u3092\u4f7f\u3063\u3066Sankey Diagram\uff08\u30b5\u30f3\u30ad\u30fc\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\uff09\u3092\u4f5c\u6210\u3057\u3088\u3046](http://blog.game-programmer.jp/entry/2016/02/24/221055) \u3092\u8aad\u3093\u3067\u81ea\u5206\u3082\u30b5\u30f3\u30ad\u30fc\u30c0\u30a4\u30a2\u30b0\u30e9\u30e0\u4f5c\u308a\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u524d\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3059\u308b\u3093\u3058\u3083\u306a\u304f\u3066BigQuery\u4e0a\u306b\u3042\u308b\u30a4\u30d9\u30f3\u30c8\u30ed\u30b0\u304b\u3089 [DataFu\u306eSessionize](http://datafu.incubator.apache.org/docs/datafu/guide/sessions.html) \u7684\u306a\u306e\u3092\u4f5c\u308a\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u305d\u306e\u30e1\u30e2\u3002\n\u3068\u3044\u3046\u304b [\u3053\u306e\u8a18\u4e8b](http://randyzwitch.com/sessionizing-log-data-sql/) \u306eBigQuery\u3078\u306e\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u3059\u3002\n\n# Window\u95a2\u6570\n\nBigQuery\u306b\u306f(\u3082)Window\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u8a73\u3057\u304f\u306f [\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://cloud.google.com/bigquery/query-reference#windowfunctions) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30af\u30a8\u30ea\n\n1\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u9593\u9694\u306f30\u5206(BQ\u306e\u5834\u5408\u306f\u30de\u30a4\u30af\u30ed\u79d2Step\u306a\u306e\u3067`30*60*1000000`)\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u9069\u5b9c\u5909\u66f4\u53ef\u80fd\u3067\u3059\u3002\n\u307e\u305f1\u3064\u306e\u30c6\u30fc\u30d6\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u3044\u307e\u3059\u304c\u3001\u8907\u6570\u5206\u3051\u3066\u3044\u308b\u5834\u5408\u306f\u9069\u5b9c `TABLE_DATE_RANGE` \u95a2\u6570\u3068\u304b `TABLE_REGEXP` \u95a2\u6570\u3068\u304b\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n```sql\nSELECT\n  uuid,\n  CONCAT(uuid, '-', string(session_id)) AS session_id,\n  event_time\nFROM\n(\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n) AS t2\nORDER BY uuid, event_time\n```\n\n# TL;DR;\n\n## \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5148\u982d\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\u3002\n\n### \u76f4\u524d\u306e\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u3092\u62bd\u51fa\u3059\u308b\u3002\n\nWindow\u95a2\u6570\u306b\u5bb9\u6613\u3055\u308c\u3066\u3044\u308b `LAG ~ OVER` \u3092\u4f7f\u7528\u3057\u3066\u76f4\u524d\u306e\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n`\u76f4\u524d` \u3092\u5b9a\u7fa9\u3059\u308b\u305f\u3081\u306bOVER\u3092\u4f7f\u3063\u3066`uuid\u6bce(=PARTITION BY uuid)`\u3067`event_time(=ODER BY event_time)`\u9806\u306b\u4e26\u3079\u3066`\u8a72\u5f53\u30ec\u30b3\u30fc\u30c9\u30681\u500b\u524d\u306e\u30ec\u30b3\u30fc\u30c9(=RANGE BETWEEN 1 PRECEDING AND CURRENT ROW)`\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002(\u9055\u3063\u305f\u3089\u3059\u3044\u307e\u305b\u3093)\n\n```sql\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n```\n\n\n```sql\nAVERAGE(value) OVER (PARTITION BY uuid ORDER BY event_id RANGE BETWEEN 4 PRECEDING AND CURRENT ROW)\n```\n\u3068\u3059\u308b\u3053\u3068\u3067\u30e6\u30fc\u30b6\u6bce\u306b\u76f4\u8fd14\u500b\u306e\u30c7\u30fc\u30bf(value)\u306e\u79fb\u52d5\u5e73\u5747\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n### \u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5148\u982d\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\u3002\n\n\u8a72\u5f53\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u3068\u76f4\u524d\u306e\u30a4\u30d9\u30f3\u30c8\u6642\u523b\u306e\u5dee\u3092\u7b97\u51fa\u3057\u306630\u5206\u4ee5\u4e0a\u96e2\u308c\u3066\u3044\u305f\u3089\u5225\u30bb\u30c3\u30b7\u30e7\u30f3\u3068\u3057\u3066\u6271\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306f\u3053\u306e2\u3064\u306e\u30af\u30a8\u30ea\u304c1\u3064\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u307e\u3059\u304c\u3001BQ\u306e\u5834\u5408\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u305f\u30812\u3064\u306b\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n\n```sql\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n```\n\n## \u5148\u982d\u30bb\u30c3\u30b7\u30e7\u30f3\u304b\u3089\u63a1\u756a\u3059\u308b\n\n\u3053\u3053\u3067\u3082Window\u95a2\u6570\u306e`SUM ~ OVER`\u3092\u4f7f\u7528\u3057\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u6bce\u306b\u63a1\u756a\u3057\u307e\u3059\u3002\n(\u3053\u306e\u5834\u5408RANGE\u3092\u6307\u5b9a\u3057\u3066\u3044\u306a\u3044\u305f\u3081SUM\u306e\u7d50\u679c\u306f\u30e6\u30fc\u30b6\u6bce\u306b\u7a4d\u7b97\u3055\u308c\u305f\u7d50\u679c\u306b\u306a\u308a\u307e\u3059)\n\n```sql\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n```\n\n## uuid\u3068\u304f\u3063\u3064\u3051\u3066\u30e6\u30cb\u30fc\u30af\u306b\u3059\u308b\n\nsession_id\u306f\u6570\u5024\u306a\u306e\u3067 `string`\u95a2\u6570\u3067\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u307e\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u5316\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```sql\nSELECT\n  uuid,\n  CONCAT(uuid, '-', string(session_id)) AS session_id,\n  event_time\nFROM\n(\nSELECT\n  uuid,\n  SUM(new_event_boundary) OVER (PARTITION BY uuid ORDER BY event_time) AS session_id,\n  event_time,\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  prev_event_time,\n  (event_time - prev_event_time) AS diff,\n  CASE \n    WHEN event_time - prev_event_time >= 60*30*1000000 THEN 1 \n    WHEN prev_event_time IS NULL THEN 1\n    ELSE 0 \n  END AS new_event_boundary\nFROM\n(\nSELECT\n  uuid,\n  event_time,\n  LAG(event_time) OVER (\n      PARTITION BY uuid\n      ORDER BY event_time\n      RANGE BETWEEN 1 PRECEDING AND CURRENT ROW\n  ) AS prev_event_time\nFROM [<DatasetName>.<EventTableName>]\nWHERE\nevent_time BETWEEN TIMESTAMP('<Start Time>') AND TIMESTAMP('<END TIME>')\n) AS t\n) AS t1\n) AS t2\n```\n", "tags": ["bigquery", "analytics", "GoogleCloudPlatform"]}