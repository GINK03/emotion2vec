{"context": " More than 1 year has passed since last update.\n\n\u5148\u306b\u7d50\u8ad6\nRuby \u3067\u8868\u5f62\u5f0f\u30c7\u30fc\u30bf\u304b\u3089\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306b\u3088\u308b\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u3092SQL\u3063\u307d\u304f\u66f8\u304f\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nlist_1 = list_1.index_by {|v| v } # Ruby 2.2 \u4ee5\u4e0a\u306a\u3089\u3001\nlist_2 = list_2.index_by {|v| v } # index_by(&:itself) \u304c\u4f7f\u3048\u308b\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n\n\u3053\u308c\u3067 CSV \u304b\u3089\u306e\u30c7\u30fc\u30bf\u62bd\u51fa\u3084\u8907\u6570 RDBMS \u3092\u8de8\u3044\u3060\u30c7\u30fc\u30bf\u96c6\u8a08\u306a\u3069\u306e\u4f5c\u696d\u304c\u6357\u308a\u305d\u3046\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\nRuby \u3092\u4f7f\u3063\u3066 CSV \u304b\u3089\u7279\u5b9a\u306e\u5024\u3092\u6301\u3064\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u305f\u308a\u3001\n\u8907\u6570\u306e RDBMS \u3092\u8de8\u3044\u3060\u30c7\u30fc\u30bf\u3092 Ruby \u306e\u5c64\u3067\u3044\u3044\u611f\u3058\u306b\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u305f\u3044\u3002\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30fc\u30bf\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u3001\n\n\n\ncolumn_1\ncolumn_2\n...\n\n\n\n\n111\n'aaa'\n...\n\n\n222\n'bbb'\n...\n\n\n333\n'ccc'\n...\n\n\n...\n...\n...\n\n\n\nMySQL, PostgreSQL, Amazon Redshift \u306a\u3069\u306e RDBMS \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u3092\u3001\nSELECT\n  *\nFROM\n  `rows`\nWHERE\n  `column_1` IN(:list_1) AND  -- :list_1 \u306e\u5177\u4f53\u4f8b: 111,222,333,...\n  `column_2` IN(:list_2)      -- :list_2 \u306e\u5177\u4f53\u4f8b: 'aaa','bbb','ccc',...\n;\n\nRuby \u306b\u304a\u3051\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067\u5b9f\u73fe\u3057\u305f\u3044\u3002\nrows = [\n  { column_1: 111, column_2: 'aaa', ... },\n  { column_1: 222, column_2: 'bbb', ... },\n  { column_1: 333, column_2: 'ccc', ... },\n  ...\n]\n\n\u3067\u304d\u308c\u3070 SQL \u3063\u307d\u3044\u8868\u73fe\u3067\u3001\u3067\u304d\u308c\u3070\u9ad8\u901f\u306b\u3002\n\n\u5b9f\u73fe\u65b9\u6cd5\n\nEnumerable#select \u3068 Array#include? \u3092\u4f7f\u3046\uff08\u30a4\u30de\u30a4\u30c1\uff09\nresult = rows.select {|row|\n  list_1.include?(row[:column_1]) and\n  list_2.include?(row[:column_2])\n}\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u70b9\u3067\u30a4\u30de\u30a4\u30c1\u3002\n\n\u53ef\u8aad\u6027\uff1a \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u2192\u691c\u7d22\u5bfe\u8c61\u5024\u306e\u9806\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a18\u8ff0\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n\u51e6\u7406\u901f\u5ea6\uff1a rows.size \u3092 m\u3001list_*.size \u3092 n \u3068\u3059\u308b\u3068\u3001select \u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a08\u7b97\u91cf\u306f O(m * n) \u306b\u306a\u308b\n\n\n\u3010\u6539\u5584\u2460\u3011Array#include? \u306e\u4ee3\u308f\u308a\u306b Object#in? \u3092\u4f7f\u3046\uff08\u53ef\u8aad\u6027\u30a2\u30c3\u30d7\uff09\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n\n\n\nvalue.in?(list) \u306f list.include?(value) \u3068\u7b49\u4fa1\uff08ActiveSupport \u306b\u3088\u308b Object \u30af\u30e9\u30b9\u62e1\u5f35\uff09\n\u3053\u308c\u306b\u3088\u308a\u3001select \u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a18\u8ff0\u304c SQL \u3068\u540c\u69d8\u306b\u306a\u308a\u53ef\u8aad\u6027\u304c\u30a2\u30c3\u30d7\u3059\u308b\n\u304c\u3001\u5b9f\u8cea\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u8a08\u7b97\u91cf\u306f O(m * n) \u306e\u307e\u307e\n\n\n\u3010\u6539\u5584\u2461\u3011\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u3092 Enumerable#index_by \u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3059\u308b\uff08\u51e6\u7406\u901f\u5ea6\u30a2\u30c3\u30d7\uff09\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nlist_1 = list_1.index_by {|v| v } # Ruby 2.2 \u4ee5\u4e0a\u306a\u3089\u3001\nlist_2 = list_2.index_by {|v| v } # index_by(&:itself) \u304c\u4f7f\u3048\u308b\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n\n\n\n[1, 2, 3].index_by(&:itself) \u306f {1 => 1, 2 => 2, 3 => 3} \u3092\u8fd4\u3059\uff08ActiveSupport \u306b\u3088\u308b Enumerable \u30e2\u30b8\u30e5\u30fc\u30eb\u62e1\u5f35\uff09\n\nHash#include? \u306f Hash#has_key? \u3068\u7b49\u4fa1\u306a\u306e\u3067\u3001value.in?(list) \u306f\u300cArray \u306e\u5024\u63a2\u7d22\u51e6\u7406\u300d \u2192 \u300cHash \u306e\u30ad\u30fc\u30a2\u30af\u30bb\u30b9\u51e6\u7406\u300d\u306b\u306a\u308b\n\u3053\u308c\u306b\u3088\u308a\u3001select \u30d6\u30ed\u30c3\u30af\u5185\u306e\u63a2\u7d22\u8a08\u7b97\u91cf\u304c O(m * n) \u2192 O(m) \u306b\u306a\u308b\n\n\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u78ba\u8a8d\n\u6e2c\u5b9a\u30b9\u30af\u30ea\u30d7\u30c8\uff1a\ncolumn_1\uff08\u6574\u6570\uff09\u3068 column_2\uff08\u6587\u5b57\u5217\uff09\u3092\u6301\u3064 100\u4e07\u30ec\u30b3\u30fc\u30c9\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3001\n\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306e\u6570\u3092 1, 10, 100, 1000, 10000 \u306b\u3057\u305f\u5834\u5408\u306e\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u3002\nrequire 'active_support'\nrequire 'active_support/core_ext'\nrequire 'benchmark'\n\nnum_rows = 1_000_000\nnum_list_variations = [1, 10, 100, 1_000, 10_000]\n\nnum_list_variations.each do |num_list|\n  rows = (1..num_rows).map {|v| { column_1: v.to_i, column_2: v.to_s } }\n  list_1 = (1..num_list).map(&:to_i)\n  list_2 = (1..num_list).map(&:to_s)\n\n  puts \"\\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: #{num_rows}, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: #{num_list}\u3011\"\n\n  Benchmark.bm(10) do |x|\n    x.report('\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057') do\n      result = rows.select {|row|\n        row[:column_1].in?(list_1) and\n        row[:column_2].in?(list_2)\n      }\n    end\n\n    x.report('\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a') do\n      list_1 = list_1.index_by(&:itself)\n      list_2 = list_2.index_by(&:itself)\n\n      result = rows.select {|row|\n        row[:column_1].in?(list_1) and\n        row[:column_2].in?(list_2)\n      }\n    end\n  end\nend\n\n\u6e2c\u5b9a\u7d50\u679c\uff1a\n\nOS X Yosemite 10.10.3\n2.6 GHz Intel Core i5\n8 GB 1600 MHz DDR3\nruby 2.2.2p95 (2015-04-13 revision 50295)\nactivesupport (4.2.1)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 1\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.170000   0.000000   0.170000 (  0.172847)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.180000   0.000000   0.180000 (  0.180457)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 10\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.230000   0.000000   0.230000 (  0.235147)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.170000   0.000000   0.170000 (  0.173922)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 100\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.880000   0.000000   0.880000 (  0.888002)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.230000   0.000000   0.230000 (  0.229938)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 1000\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    6.770000   0.010000   6.780000 (  6.772243)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.190000   0.000000   0.190000 (  0.197593)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 10000\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057   66.680000   0.040000  66.720000 ( 66.787141)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.220000   0.000000   0.220000 (  0.221374)\n\n\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306e\u6570\u304c\u5c11\u306a\u3044\u5834\u5408\u306f\u4e21\u8005\u306b\u5dee\u304c\u51fa\u306a\u3044\u304c\u3001\n\u3053\u308c\u304c\u591a\u304f\u306a\u308b\u306b\u3064\u308c\u3066\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3059\u308b\u3053\u3068\u306e\u52b9\u679c\u304c\u9855\u8457\u306b\u306a\u308b\u3002\n# \u5148\u306b\u7d50\u8ad6\n\nRuby \u3067\u8868\u5f62\u5f0f\u30c7\u30fc\u30bf\u304b\u3089\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306b\u3088\u308b\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u3092SQL\u3063\u307d\u304f\u66f8\u304f\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n```ruby:\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nlist_1 = list_1.index_by {|v| v } # Ruby 2.2 \u4ee5\u4e0a\u306a\u3089\u3001\nlist_2 = list_2.index_by {|v| v } # index_by(&:itself) \u304c\u4f7f\u3048\u308b\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n```\n\n\u3053\u308c\u3067 CSV \u304b\u3089\u306e\u30c7\u30fc\u30bf\u62bd\u51fa\u3084\u8907\u6570 RDBMS \u3092\u8de8\u3044\u3060\u30c7\u30fc\u30bf\u96c6\u8a08\u306a\u3069\u306e\u4f5c\u696d\u304c\u6357\u308a\u305d\u3046\u3002\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\nRuby \u3092\u4f7f\u3063\u3066 CSV \u304b\u3089\u7279\u5b9a\u306e\u5024\u3092\u6301\u3064\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u305f\u308a\u3001\n\u8907\u6570\u306e RDBMS \u3092\u8de8\u3044\u3060\u30c7\u30fc\u30bf\u3092 Ruby \u306e\u5c64\u3067\u3044\u3044\u611f\u3058\u306b\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u305f\u3044\u3002\n\n\n\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30fc\u30bf\u304c\u3042\u3063\u305f\u3068\u304d\u306b\u3001\n\n|column_1|column_2|...|\n|---|---|---|\n|111|'aaa'|...|\n|222|'bbb'|...|\n|333|'ccc'|...|\n|...|...|...|\n\n[MySQL](http://www.mysql.com/), [PostgreSQL](http://www.postgresql.org/), [Amazon Redshift](http://aws.amazon.com/redshift/) \u306a\u3069\u306e RDBMS \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u3092\u3001\n\n```sql:\nSELECT\n  *\nFROM\n  `rows`\nWHERE\n  `column_1` IN(:list_1) AND  -- :list_1 \u306e\u5177\u4f53\u4f8b: 111,222,333,...\n  `column_2` IN(:list_2)      -- :list_2 \u306e\u5177\u4f53\u4f8b: 'aaa','bbb','ccc',...\n;\n```\n\nRuby \u306b\u304a\u3051\u308b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3082\u540c\u3058\u3088\u3046\u306a\u611f\u3058\u3067\u5b9f\u73fe\u3057\u305f\u3044\u3002\n\n```ruby:\nrows = [\n  { column_1: 111, column_2: 'aaa', ... },\n  { column_1: 222, column_2: 'bbb', ... },\n  { column_1: 333, column_2: 'ccc', ... },\n  ...\n]\n```\n\n\u3067\u304d\u308c\u3070 SQL \u3063\u307d\u3044\u8868\u73fe\u3067\u3001\u3067\u304d\u308c\u3070\u9ad8\u901f\u306b\u3002\n\n# \u5b9f\u73fe\u65b9\u6cd5 \n## Enumerable#select \u3068 Array#include? \u3092\u4f7f\u3046\uff08\u30a4\u30de\u30a4\u30c1\uff09\n\n```ruby:\nresult = rows.select {|row|\n  list_1.include?(row[:column_1]) and\n  list_2.include?(row[:column_2])\n}\n```\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u70b9\u3067\u30a4\u30de\u30a4\u30c1\u3002\n\n* \u53ef\u8aad\u6027\uff1a \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u2192\u691c\u7d22\u5bfe\u8c61\u5024\u306e\u9806\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a18\u8ff0\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n* \u51e6\u7406\u901f\u5ea6\uff1a rows.size \u3092 m\u3001list_*.size \u3092 n \u3068\u3059\u308b\u3068\u3001`select` \u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a08\u7b97\u91cf\u306f O(m * n) \u306b\u306a\u308b\n\n\n## \u3010\u6539\u5584\u2460\u3011Array#include? \u306e\u4ee3\u308f\u308a\u306b Object#in? \u3092\u4f7f\u3046\uff08\u53ef\u8aad\u6027\u30a2\u30c3\u30d7\uff09\n\n```ruby:\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n```\n\n* `value.in?(list)` \u306f `list.include?(value)` \u3068\u7b49\u4fa1\uff08ActiveSupport \u306b\u3088\u308b Object \u30af\u30e9\u30b9\u62e1\u5f35\uff09\n* \u3053\u308c\u306b\u3088\u308a\u3001`select` \u30d6\u30ed\u30c3\u30af\u5185\u306e\u8a18\u8ff0\u304c SQL \u3068\u540c\u69d8\u306b\u306a\u308a\u53ef\u8aad\u6027\u304c\u30a2\u30c3\u30d7\u3059\u308b\n* \u304c\u3001\u5b9f\u8cea\u7684\u306a\u51e6\u7406\u5185\u5bb9\u306f\u5909\u308f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u8a08\u7b97\u91cf\u306f O(m * n) \u306e\u307e\u307e\n\n\n## \u3010\u6539\u5584\u2461\u3011\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u3092 Enumerable#index_by \u3067\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3059\u308b\uff08\u51e6\u7406\u901f\u5ea6\u30a2\u30c3\u30d7\uff09\n\n```ruby:\nrequire 'active_support'\nrequire 'active_support/core_ext'\n\nlist_1 = list_1.index_by {|v| v } # Ruby 2.2 \u4ee5\u4e0a\u306a\u3089\u3001\nlist_2 = list_2.index_by {|v| v } # index_by(&:itself) \u304c\u4f7f\u3048\u308b\n\nresult = rows.select {|row|\n  row[:column_1].in?(list_1) and\n  row[:column_2].in?(list_2)\n}\n```\n\n* `[1, 2, 3].index_by(&:itself)` \u306f `{1 => 1, 2 => 2, 3 => 3}` \u3092\u8fd4\u3059\uff08ActiveSupport \u306b\u3088\u308b Enumerable \u30e2\u30b8\u30e5\u30fc\u30eb\u62e1\u5f35\uff09\n* `Hash#include?` \u306f `Hash#has_key?` \u3068\u7b49\u4fa1\u306a\u306e\u3067\u3001`value.in?(list)` \u306f\u300cArray \u306e\u5024\u63a2\u7d22\u51e6\u7406\u300d \u2192 \u300cHash \u306e\u30ad\u30fc\u30a2\u30af\u30bb\u30b9\u51e6\u7406\u300d\u306b\u306a\u308b\n* \u3053\u308c\u306b\u3088\u308a\u3001`select` \u30d6\u30ed\u30c3\u30af\u5185\u306e\u63a2\u7d22\u8a08\u7b97\u91cf\u304c O(m * n) \u2192 O(m) \u306b\u306a\u308b\n\n# \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u78ba\u8a8d\n\n**\u6e2c\u5b9a\u30b9\u30af\u30ea\u30d7\u30c8\uff1a**\n\ncolumn_1\uff08\u6574\u6570\uff09\u3068 column_2\uff08\u6587\u5b57\u5217\uff09\u3092\u6301\u3064 100\u4e07\u30ec\u30b3\u30fc\u30c9\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3001\n\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306e\u6570\u3092 1, 10, 100, 1000, 10000 \u306b\u3057\u305f\u5834\u5408\u306e\u30c7\u30fc\u30bf\u62bd\u51fa\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\u3002\n\n```ruby:\nrequire 'active_support'\nrequire 'active_support/core_ext'\nrequire 'benchmark'\n\nnum_rows = 1_000_000\nnum_list_variations = [1, 10, 100, 1_000, 10_000]\n\nnum_list_variations.each do |num_list|\n  rows = (1..num_rows).map {|v| { column_1: v.to_i, column_2: v.to_s } }\n  list_1 = (1..num_list).map(&:to_i)\n  list_2 = (1..num_list).map(&:to_s)\n\n  puts \"\\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: #{num_rows}, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: #{num_list}\u3011\"\n\n  Benchmark.bm(10) do |x|\n    x.report('\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057') do\n      result = rows.select {|row|\n        row[:column_1].in?(list_1) and\n        row[:column_2].in?(list_2)\n      }\n    end\n\n    x.report('\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a') do\n      list_1 = list_1.index_by(&:itself)\n      list_2 = list_2.index_by(&:itself)\n\n      result = rows.select {|row|\n        row[:column_1].in?(list_1) and\n        row[:column_2].in?(list_2)\n      }\n    end\n  end\nend\n```\n\n**\u6e2c\u5b9a\u7d50\u679c\uff1a**\n\n* OS X Yosemite 10.10.3\n* 2.6 GHz Intel Core i5\n* 8 GB 1600 MHz DDR3\n* ruby 2.2.2p95 (2015-04-13 revision 50295)\n* activesupport (4.2.1)\n\n```sh:\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 1\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.170000   0.000000   0.170000 (  0.172847)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.180000   0.000000   0.180000 (  0.180457)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 10\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.230000   0.000000   0.230000 (  0.235147)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.170000   0.000000   0.170000 (  0.173922)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 100\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    0.880000   0.000000   0.880000 (  0.888002)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.230000   0.000000   0.230000 (  0.229938)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 1000\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057    6.770000   0.010000   6.780000 (  6.772243)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.190000   0.000000   0.190000 (  0.197593)\n\n\u3010\u30ec\u30b3\u30fc\u30c9\u6570: 1000000, \u691c\u7d22\u5024\u30ea\u30b9\u30c8\u6570: 10000\u3011\n                       user     system      total        real\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u306a\u3057   66.680000   0.040000  66.720000 ( 66.787141)\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3042\u308a    0.220000   0.000000   0.220000 (  0.221374)\n```\n\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u306e\u6570\u304c\u5c11\u306a\u3044\u5834\u5408\u306f\u4e21\u8005\u306b\u5dee\u304c\u51fa\u306a\u3044\u304c\u3001\n\u3053\u308c\u304c\u591a\u304f\u306a\u308b\u306b\u3064\u308c\u3066\u691c\u7d22\u5024\u30ea\u30b9\u30c8\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u5316\u3059\u308b\u3053\u3068\u306e\u52b9\u679c\u304c\u9855\u8457\u306b\u306a\u308b\u3002\n", "tags": ["Ruby", "MySQL", "PostgreSQL", "redshift", "activesupport"]}