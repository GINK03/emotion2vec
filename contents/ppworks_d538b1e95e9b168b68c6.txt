{"tags": ["Backbone.js", "Rails"], "context": " More than 1 year has passed since last update.https://gist.github.com/2963851 \u304b\u3089\u306e\u8ee2\u8f09\u3002\n\u307e\u3060\u51fa\u6765\u3066\u307e\u305b\u3093\u3002\u304a\u624b\u4f1d\u3044\u3057\u3066\u304f\u3060\u3055\u308b\u65b9\u3044\u307e\u3057\u305f\u3089\u3001fork\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u5408\u4f53\u3055\u305b\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u3068\u3053\u308d\u3002\u307e\u3060nested form\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3002\n\n\nform\u3092fill\u3059\u308b\n\nnasted form\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u304ccheckbox\u5bfe\u5fdc\u3067\u304d\u3066\u306a\u3044\n\n\n\nbackbone-rails\u306ebackbone_datalink.js\u306e\u6539\u826f\u7248\n\n\u3053\u308c\u306f\u3001codebrew/backbone-rails #27\u3067pull request\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\ncheckbox\u5bfe\u5fdc\u3057\u3066\u308b\n\n\n\n$(function() {\n  _.extend(Backbone.View.prototype, {\n    formDataLink: function(model_name) {\n      var self = this;\n      var _recurse_form = function(object, objName) {\n        _.each(object, function(v,k) {\n          if (v instanceof Object) {\n            object[k] = _recurse_form(v, objName + '[' + k + '_attributes]');\n          } else {\n            var el = self.$('[name=\"'+ objName + '[' + k + ']\"]');\n            // form change 2 model\n            $(el).bind('change', function() {\n              var attrs = {};\n              if ( $(el).is(\"input[type='checkbox']\") ) {\n                attrs[k] = $(el).prop('checked');\n              } else {\n                attrs[k] = $(el).val();\n              }\n              self.model.set(attrs, {silent: true});\n            });\n\n            // model change 2 form\n            self.model.bind(\"change:\" + k, function() {\n              val = self.model.get(k)\n              if (el.is(\"input[type='checkbox']\") && (val == true || val == false) )\n                el.prop('checked', val);\n              return el.val(val);\n            });\n            object[k] = el.val();\n          }\n        });\n        return object;\n      };\n      // attributes initialize\n      this.model.attributes = _recurse_form(this.model.attributes, model_name);\n    }\n  });\n});\n\nhttps://gist.github.com/2963851 \u304b\u3089\u306e\u8ee2\u8f09\u3002\n\u307e\u3060\u51fa\u6765\u3066\u307e\u305b\u3093\u3002\u304a\u624b\u4f1d\u3044\u3057\u3066\u304f\u3060\u3055\u308b\u65b9\u3044\u307e\u3057\u305f\u3089\u3001fork\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u5408\u4f53\u3055\u305b\u305f\u3044\u3068\u8003\u3048\u3066\u3044\u308b\u3068\u3053\u308d\u3002\u307e\u3060nested form\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u3002\n\n* [form\u3092fill\u3059\u308b](http://blog.rjzaworski.com/2012/01/parsing-forms-with-backbone-js/)\n  * nasted form\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u304ccheckbox\u5bfe\u5fdc\u3067\u304d\u3066\u306a\u3044\n* [backbone-rails\u306ebackbone_datalink.js\u306e\u6539\u826f\u7248](https://github.com/jotto/backbone-rails/blob/289516be72f7558c87901b6614b4dde27b5beece/vendor/assets/javascripts/backbone_datalink.js)\n  * \u3053\u308c\u306f\u3001[codebrew/backbone-rails #27](https://github.com/codebrew/backbone-rails/pull/27/)\u3067pull request\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\n  * checkbox\u5bfe\u5fdc\u3057\u3066\u308b\n\n\n```formDataLink\n$(function() {\n  _.extend(Backbone.View.prototype, {\n    formDataLink: function(model_name) {\n      var self = this;\n      var _recurse_form = function(object, objName) {\n        _.each(object, function(v,k) {\n          if (v instanceof Object) {\n            object[k] = _recurse_form(v, objName + '[' + k + '_attributes]');\n          } else {\n            var el = self.$('[name=\"'+ objName + '[' + k + ']\"]');\n            // form change 2 model\n            $(el).bind('change', function() {\n              var attrs = {};\n              if ( $(el).is(\"input[type='checkbox']\") ) {\n                attrs[k] = $(el).prop('checked');\n              } else {\n                attrs[k] = $(el).val();\n              }\n              self.model.set(attrs, {silent: true});\n            });\n\n            // model change 2 form\n            self.model.bind(\"change:\" + k, function() {\n              val = self.model.get(k)\n              if (el.is(\"input[type='checkbox']\") && (val == true || val == false) )\n                el.prop('checked', val);\n              return el.val(val);\n            });\n            object[k] = el.val();\n          }\n        });\n        return object;\n      };\n      // attributes initialize\n      this.model.attributes = _recurse_form(this.model.attributes, model_name);\n    }\n  });\n});\n```"}