{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\nmiddleware\u3068\u3044\u3063\u3066\u3082\u3001\u57fa\u672c\u306finitialize\u3068call\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u306eclass\u3002\nrack\u3092\u7d99\u627f\u3057\u3066\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306a\u30a2\u30d7\u30ea\u3092middleware\u306b\u98df\u308f\u305b\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u304b\u306a\u3041\u2026\n\u3068\u60a9\u3093\u3067\u3044\u308b\u3068\u3001\u3044\u3044\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u3002\nRack Middleware\u306eGem\u306b\u5bfe\u3059\u308bRspec\u306e\u66f8\u304d\u65b9\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u3001\n\ncall\u3055\u308c\u305f\u3089\u9069\u5f53\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3059\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3092\u30c6\u30b9\u30c8\u7528\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\nrack\u30a2\u30d7\u30ea\u3092\u3053\u308c\u306b\u98df\u308f\u305b\u3066new\u3057\u3066\u304a\u304f\nRack::Test::Methods\u3092include\u3059\u308b\n\n\u3059\u308b\u3068\u3001Rails\u306econtroller\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nspec\n\u5148\u65e5\u4f5c\u6210\u3057\u305frack middleware\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\nmiddleware\u306frack middleware\u3092\u3056\u3063\u304f\u308a\u89e6\u3063\u3066\u307f\u305f\u3092\u53c2\u7167\u3002\n\ncall\u3055\u308c\u305f\u3089\u9069\u5f53\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3059\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3092\u30c6\u30b9\u30c8\u7528\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\n\nspec/support/test_application_helper.rb\nmodule TestApplicationHelper\n  extend self\n\n  class TestApplication\n    def call(env)\n      code   = 200\n      body   = [ \"test body\" ]\n      header = { \"Content-Type\"           => \"text/html;charset=utf-8\",\n                 \"Content-Length\"         => \"9\",\n                 \"X-XSS-Protection\"       => \"1; mode=block\",\n                 \"X-Content-Type-Options\" => \"nosniff\",\n                 \"X-Frame-Options\"        => \"SAMEORIGIN\" }\n      [ code, header, body ]\n    end\n  end\nend\n\n\n\nrack\u30a2\u30d7\u30ea\u3092\u3053\u308c\u306b\u98df\u308f\u305b\u3066new\u3057\u3066\u304a\u304f & Rack::Test::Methods\u3092include\u3059\u308b\n\u53c2\u7167\u3057\u305f\u8a18\u4e8b\u306b\u3082\u3042\u308b\u304c\u3001app\u3067rack_middleware\u304c\u8fd4\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u3001\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\nmy_rack_middleware_spec.rb\ndescribe MyRackMiddleware do\n  include TestApplicationHelper\n  include Rack::Test::Methods\n\n  let(:test_app) { TestApplicationHelper::TestApplication.new }\n  let(:app)      { MyRackMiddleware.new(test_app) }\n\n  describe \"GET '/hoge'\" do\n    it 'should return 200 OK' do\n      get '/hoge'\n\n      expect(last_response.status).to eq 200\n      expect(last_response.body).to eq html\n      expect(last_response.header[\"Content-Type\"]).to eq \"text/html;charset=utf-8\"\n      expect(last_response.header[\"Content-Length\"].to_i).to be > 0\n      expect(last_response.header[\"X-XSS-Protection\"]).to eq \"1; mode=block\"\n      expect(last_response.header[\"X-Content-Type-Options\"]).to eq \"nosniff\"\n      expect(last_response.header[\"X-Frame-Options\"]).to eq \"SAMEORIGIN\"\n    end\n  end\nend\n\n\n\nlast_request & last_response\nRack::Test::Methods\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3068\u3001last_request\u3001last_response\u305d\u308c\u305e\u308c\u306b\u5024\u304c\u683c\u7d0d\u3055\u308c\u308b\u3002\n\u4e0a\u8a18\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u3053\u308c\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3002\n\nlast_request\n\u30c6\u30b9\u30c8\u4e2d\u3067\u6700\u5f8c\u306b\u9001\u4fe1\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3002\n\nmiddleware\u306ecall\u3067\u53d7\u3051\u53d6\u308benv\u304c\u305d\u306e\u307e\u307e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5165\u3063\u3066\u3044\u308b\nmiddleware\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e0a\u66f8\u3044\u305f\u5834\u5408\u3084\u8ffd\u52a0\u3057\u305f\u5834\u5408\u306flast_request\u306b\u53cd\u6620\u3055\u308c\u308b\nbody\u306frack.input\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b (\u5225\u8a18\u4e8b\u53c2\u7167)\n\n\nlast_reqeuest\nlast_request.class      #=> Rack::Request\nlast_request.env.class  #=> Hash\nlast_request.env        #=> \n{ \"rack.version\"      => [1, 2],\n  \"rack.input\"        => #<StringIO:0x00000002a17708>,\n  \"rack.errors\"       => #<StringIO:0x00000002a17f00>,\n  \"rack.multithread\"  => true,\n  \"rack.multiprocess\" => true,\n  \"rack.run_once\"     => false,\n  \"REQUEST_METHOD\"    => \"GET\",\n  \"SERVER_NAME\"       => \"example.org\",\n  \"SERVER_PORT\"       => \"80\",\n  \"QUERY_STRING\"      => \"\",\n  \"PATH_INFO\"         => \"/hoge\",\n  \"rack.url_scheme\"   => \"http\",\n  \"HTTPS\"             => \"off\",\n  \"SCRIPT_NAME\"       => \"\",\n  \"CONTENT_LENGTH\"    => \"0\",\n  \"rack.test\"         => true,\n  \"REMOTE_ADDR\"       => \"127.0.0.1\",\n  \"HTTP_HOST\"         => \"example.org\",\n  \"HTTP_COOKIE\"       => \"\" }\n\n\n\nlast_response\n\u30c6\u30b9\u30c8\u4e2d\u3067\u6700\u5f8c\u306b\u53d7\u4fe1\u3057\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\n\nRack\u306eMockReponse\u304c\u8fd4\u3063\u3066\u304f\u308b\nstatus, body, headers\u3078\u306eaccessor\u304c\u4ed8\u3044\u3066\u3044\u308b\nContent-Length\u306flength\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n\nlast_response\nlast_response.class    #=> Rack::MockResponse\nlast_response.body     #=> \"hogehoge\"\nlast_response.errors   #=> \"\"\nlast_response.headers  #=>\n{ \"Content-Type\"           => \"text/html;charset=utf-8\",\n  \"Content-Length\"         => \"8\",\n  \"X-XSS-Protection\"       => \"1; mode=block\",\n  \"X-Content-Type-Options\" => \"nosniff\",\n  \"X-Frame-Options\"        => \"SAMEORIGIN\" }\nlast_response.length   #=> 8\nlast_response.status   #=> 200\n\n\n\u3061\u306a\u307f\u306b\u3001Rack::Test::Methods\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u524d\u306blast_request\u3001last_response\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nlast_request   #=> Rack::Test::Error: No request yet. Request a page first.\nlast_response  #=> Rack::Test::Error: No response yet. Request a page first.\n\n\n\u53c2\u8003\n\nRack Middleware\u306eGem\u306b\u5bfe\u3059\u308bRspec\u306e\u66f8\u304d\u65b9\n\n## \u80cc\u666f\n\nmiddleware\u3068\u3044\u3063\u3066\u3082\u3001\u57fa\u672c\u306finitialize\u3068call\u306e2\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3060\u3051\u306eclass\u3002\nrack\u3092\u7d99\u627f\u3057\u3066\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u306e\u3067\u3001\u9069\u5f53\u306a\u30a2\u30d7\u30ea\u3092middleware\u306b\u98df\u308f\u305b\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u304b\u306a\u3041\u2026\n\u3068\u60a9\u3093\u3067\u3044\u308b\u3068\u3001\u3044\u3044\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u3002\n\n[Rack Middleware\u306eGem\u306b\u5bfe\u3059\u308bRspec\u306e\u66f8\u304d\u65b9](http://a-newcomer.com/32)\n\n\u3084\u3063\u3066\u308b\u3053\u3068\u306f\u3001\n\n* call\u3055\u308c\u305f\u3089\u9069\u5f53\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3059\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3092\u30c6\u30b9\u30c8\u7528\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\n* rack\u30a2\u30d7\u30ea\u3092\u3053\u308c\u306b\u98df\u308f\u305b\u3066new\u3057\u3066\u304a\u304f\n* Rack::Test::Methods\u3092include\u3059\u308b\n\n\u3059\u308b\u3068\u3001Rails\u306econtroller\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066\u3001\u305d\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n## spec\n\n\u5148\u65e5\u4f5c\u6210\u3057\u305frack middleware\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\nmiddleware\u306f[rack middleware\u3092\u3056\u3063\u304f\u308a\u89e6\u3063\u3066\u307f\u305f](http://qiita.com/ogawatti/items/06d0d822b65138bf6301)\u3092\u53c2\u7167\u3002\n\n##### call\u3055\u308c\u305f\u3089\u9069\u5f53\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u8fd4\u3059\u3060\u3051\u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u3092\u30c6\u30b9\u30c8\u7528\u306b\u5b9a\u7fa9\u3057\u3066\u304a\u304f\n\n```rb:spec/support/test_application_helper.rb\nmodule TestApplicationHelper\n  extend self\n\n  class TestApplication\n    def call(env)\n      code   = 200\n      body   = [ \"test body\" ]\n      header = { \"Content-Type\"           => \"text/html;charset=utf-8\",\n                 \"Content-Length\"         => \"9\",\n                 \"X-XSS-Protection\"       => \"1; mode=block\",\n                 \"X-Content-Type-Options\" => \"nosniff\",\n                 \"X-Frame-Options\"        => \"SAMEORIGIN\" }\n      [ code, header, body ]\n    end\n  end\nend\n```\n\n##### rack\u30a2\u30d7\u30ea\u3092\u3053\u308c\u306b\u98df\u308f\u305b\u3066new\u3057\u3066\u304a\u304f & Rack::Test::Methods\u3092include\u3059\u308b\n\n\u53c2\u7167\u3057\u305f\u8a18\u4e8b\u306b\u3082\u3042\u308b\u304c\u3001app\u3067rack_middleware\u304c\u8fd4\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308c\u3070\u3001\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n```rb:my_rack_middleware_spec.rb\ndescribe MyRackMiddleware do\n  include TestApplicationHelper\n  include Rack::Test::Methods\n\n  let(:test_app) { TestApplicationHelper::TestApplication.new }\n  let(:app)      { MyRackMiddleware.new(test_app) }\n\n  describe \"GET '/hoge'\" do\n    it 'should return 200 OK' do\n      get '/hoge'\n\n      expect(last_response.status).to eq 200\n      expect(last_response.body).to eq html\n      expect(last_response.header[\"Content-Type\"]).to eq \"text/html;charset=utf-8\"\n      expect(last_response.header[\"Content-Length\"].to_i).to be > 0\n      expect(last_response.header[\"X-XSS-Protection\"]).to eq \"1; mode=block\"\n      expect(last_response.header[\"X-Content-Type-Options\"]).to eq \"nosniff\"\n      expect(last_response.header[\"X-Frame-Options\"]).to eq \"SAMEORIGIN\"\n    end\n  end\nend\n```\n\n## last_request & last_response\n\nRack::Test::Methods\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3068\u3001last_request\u3001last_response\u305d\u308c\u305e\u308c\u306b\u5024\u304c\u683c\u7d0d\u3055\u308c\u308b\u3002\n\u4e0a\u8a18\u306e\u30c6\u30b9\u30c8\u306e\u3088\u3046\u306b\u3053\u308c\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3002\n\n#### last_request\n\n\u30c6\u30b9\u30c8\u4e2d\u3067\u6700\u5f8c\u306b\u9001\u4fe1\u3057\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u3002\n\n* middleware\u306ecall\u3067\u53d7\u3051\u53d6\u308benv\u304c\u305d\u306e\u307e\u307e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5165\u3063\u3066\u3044\u308b\n* middleware\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u4e0a\u66f8\u3044\u305f\u5834\u5408\u3084\u8ffd\u52a0\u3057\u305f\u5834\u5408\u306flast_request\u306b\u53cd\u6620\u3055\u308c\u308b\n* body\u306frack.input\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b ([\u5225\u8a18\u4e8b\u53c2\u7167](http://qiita.com/ogawatti/items/06d0d822b65138bf6301#3-1))\n\n```rb:last_reqeuest\nlast_request.class      #=> Rack::Request\nlast_request.env.class  #=> Hash\nlast_request.env        #=> \n{ \"rack.version\"      => [1, 2],\n  \"rack.input\"        => #<StringIO:0x00000002a17708>,\n  \"rack.errors\"       => #<StringIO:0x00000002a17f00>,\n  \"rack.multithread\"  => true,\n  \"rack.multiprocess\" => true,\n  \"rack.run_once\"     => false,\n  \"REQUEST_METHOD\"    => \"GET\",\n  \"SERVER_NAME\"       => \"example.org\",\n  \"SERVER_PORT\"       => \"80\",\n  \"QUERY_STRING\"      => \"\",\n  \"PATH_INFO\"         => \"/hoge\",\n  \"rack.url_scheme\"   => \"http\",\n  \"HTTPS\"             => \"off\",\n  \"SCRIPT_NAME\"       => \"\",\n  \"CONTENT_LENGTH\"    => \"0\",\n  \"rack.test\"         => true,\n  \"REMOTE_ADDR\"       => \"127.0.0.1\",\n  \"HTTP_HOST\"         => \"example.org\",\n  \"HTTP_COOKIE\"       => \"\" }\n```\n\n#### last_response\n\n\u30c6\u30b9\u30c8\u4e2d\u3067\u6700\u5f8c\u306b\u53d7\u4fe1\u3057\u305f\u30ec\u30b9\u30dd\u30f3\u30b9\n\n* Rack\u306eMockReponse\u304c\u8fd4\u3063\u3066\u304f\u308b\n* status, body, headers\u3078\u306eaccessor\u304c\u4ed8\u3044\u3066\u3044\u308b\n* Content-Length\u306flength\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n\n```rb:last_response\nlast_response.class    #=> Rack::MockResponse\nlast_response.body     #=> \"hogehoge\"\nlast_response.errors   #=> \"\"\nlast_response.headers  #=>\n{ \"Content-Type\"           => \"text/html;charset=utf-8\",\n  \"Content-Length\"         => \"8\",\n  \"X-XSS-Protection\"       => \"1; mode=block\",\n  \"X-Content-Type-Options\" => \"nosniff\",\n  \"X-Frame-Options\"        => \"SAMEORIGIN\" }\nlast_response.length   #=> 8\nlast_response.status   #=> 200\n```\n\n\u3061\u306a\u307f\u306b\u3001Rack::Test::Methods\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u524d\u306blast_request\u3001last_response\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n```rb\nlast_request   #=> Rack::Test::Error: No request yet. Request a page first.\nlast_response  #=> Rack::Test::Error: No response yet. Request a page first.\n```\n\n## \u53c2\u8003\n\n* [Rack Middleware\u306eGem\u306b\u5bfe\u3059\u308bRspec\u306e\u66f8\u304d\u65b9](http://a-newcomer.com/32)\n", "tags": ["Ruby", "rack", "RSpec"]}