{"context": " More than 1 year has passed since last update.\u3069\u3046\u3082Gyazo\u306e\u3088\u3046\u306a\u753b\u9762\u7bc4\u56f2\u9078\u629e\u306b\u3064\u3044\u3066\u300c\u3053\u306eUI\u3092Windows\u3067\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u5343\u884c\u8fd1\u3044\u30b3\u30fc\u30c9\u3092C\u304b\u4f55\u304b\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089\u300d\u306a\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001\u96d1\u306b\u4f5c\u3063\u305fScreenCaptureWrapper\u521d\u7248(\u2192\u753b\u9762\u3092\u52d5\u753b\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u30c4\u30fc\u30ebScreenCaptureWrapper\u3092\u516c\u958b)\u3067\u3082\u3068\u3066\u3082\u305d\u3093\u306a\u9577\u3055\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u3088\u306a\u3041\u3068\u601d\u3044\u3064\u3064\u3082\u3001Rx\u3092\u4f7f\u3046\u3068\u3055\u3089\u306b\u3059\u3063\u304d\u308a\u66f8\u3051\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\npublic static Task<Rect> SelectScreenPositionAsync()\n{\n    var shapeRect = new Rectangle() { Fill = new SolidColorBrush(Color.FromArgb(0x44, 0x99, 0, 0)), Stroke = Brushes.Red };\n    var canvas = new Canvas();\n    canvas.Children.Add(shapeRect);\n\n    var window = new Window()\n    {\n        Title = \"Select Screen Position\", Top = 0, Left = 0,\n        Width = SystemParameters.VirtualScreenWidth, Height = SystemParameters.VirtualScreenHeight,\n        WindowStyle = WindowStyle.None, Topmost = true, ShowInTaskbar = false,\n        AllowsTransparency = true,\n        Background = new SolidColorBrush(Color.FromArgb(1, 0xff, 0xff, 0xff)),\n        Cursor = Cursors.Cross, Content = canvas\n    };\n\n    var rectObservable = Observable.FromEventPattern<MouseEventArgs>(window, \"MouseLeftButtonDown\")\n        .Select(ev => ev.EventArgs.GetPosition(window))\n        .CombineLatest(Observable.FromEventPattern<MouseEventArgs>(window, \"MouseMove\"),\n           (downPos, ev) =>\n           {\n               var movePos = ev.EventArgs.GetPosition(window);\n               return new Rect(Math.Min(downPos.X, movePos.X), Math.Min(downPos.Y, movePos.Y),\n                               Math.Abs(downPos.X - movePos.X), Math.Abs(downPos.Y - movePos.Y));\n           })\n        .TakeUntil(Observable.FromEventPattern<MouseEventArgs>(window, \"MouseLeftButtonUp\"));\n\n    rectObservable.Subscribe(r =>\n    {\n        Canvas.SetLeft(shapeRect, r.X);\n        Canvas.SetTop(shapeRect, r.Y);\n        shapeRect.Width = r.Width;\n        shapeRect.Height = r.Height;\n    }, window.Close);\n\n    window.Show();\n\n    return rectObservable.ToTask(); // return a last value\n}\n\n\u672c\u5f53\u306f\u6700\u521d\u306e\u307b\u3046\u306fXAML\u3067\u66f8\u3044\u3066\u3042\u3052\u305f\u307b\u3046\u304c\u3044\u308d\u3044\u308d\u3044\u3058\u308a\u3084\u3059\u304f\u3066\u4fbf\u5229\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u304a\u597d\u307f\u3067\u3069\u3046\u305e\u3002\n(\u8ffd\u8a18)\n\u306a\u304a\u3001HTML+JS\u304c\u30c0\u30e1\u3060\u3068\u8a00\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002Electron\u306f\u30d6\u30e9\u30a6\u30b6\u306e\u30ec\u30f3\u30c0\u30e9\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306bNode(io.js)\u3092\u7d71\u5408\u3059\u308b\u3068\u304bcrazy\u3067\u9762\u767d\u3044\u306e\u3067\u3001\u305d\u308c\u306f\u305d\u308c\u3067\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u5143\u30a2\u30d7\u30ea\u306fReact\u3067\u66f8\u304b\u308c\u3066\u3044\u3066\u3001\u3053\u308c\u306f\u3053\u308c\u3067\u307e\u3041\u826f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3042\u305f\u308a\u306e\u3088\u3046\u306aRx\u7cfb\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u304b\u3089\u306eDOM\u3078\u53cd\u6620\u3068\u3044\u3046\u5f62\u306b\u3059\u308b\u3068\u3001\u305d\u308c\u306f\u305d\u308c\u3067\u3059\u3063\u304d\u308a\u3057\u305d\u3046\u3060\u306a\u3041\u3068\u3044\u3046\u6c17\u304c\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u79c1\u306f\uff08\u4eca\u306e\u3068\u3053\u308d\uff09Bacon.js\u304c\u597d\u304d\u3067\u3059\u3002\n\nRxJs\nBacon.js\nKefir.js\n\n\u3069\u3046\u3082Gyazo\u306e\u3088\u3046\u306a\u753b\u9762\u7bc4\u56f2\u9078\u629e\u306b\u3064\u3044\u3066\u300c[\u3053\u306eUI\u3092Windows\u3067\u5b9f\u88c5\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u5343\u884c\u8fd1\u3044\u30b3\u30fc\u30c9\u3092C\u304b\u4f55\u304b\u3067\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u3089](\nhttp://qiita.com/uiureo/items/0353e37bcffe94731c6b)\u300d\u306a\u3044\u3089\u3057\u3044\u3067\u3059\u304c\u3001\u96d1\u306b\u4f5c\u3063\u305fScreenCaptureWrapper\u521d\u7248(\u2192[\u753b\u9762\u3092\u52d5\u753b\u30ad\u30e3\u30d7\u30c1\u30e3\u3059\u308b\u30c4\u30fc\u30ebScreenCaptureWrapper\u3092\u516c\u958b](http://d.sunnyone.org/2015/04/screencapturewrapper.html))\u3067\u3082\u3068\u3066\u3082\u305d\u3093\u306a\u9577\u3055\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u3088\u306a\u3041\u3068\u601d\u3044\u3064\u3064\u3082\u3001Rx\u3092\u4f7f\u3046\u3068\u3055\u3089\u306b\u3059\u3063\u304d\u308a\u66f8\u3051\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n```csharp\npublic static Task<Rect> SelectScreenPositionAsync()\n{\n    var shapeRect = new Rectangle() { Fill = new SolidColorBrush(Color.FromArgb(0x44, 0x99, 0, 0)), Stroke = Brushes.Red };\n    var canvas = new Canvas();\n    canvas.Children.Add(shapeRect);\n\n    var window = new Window()\n    {\n        Title = \"Select Screen Position\", Top = 0, Left = 0,\n        Width = SystemParameters.VirtualScreenWidth, Height = SystemParameters.VirtualScreenHeight,\n        WindowStyle = WindowStyle.None, Topmost = true, ShowInTaskbar = false,\n        AllowsTransparency = true,\n        Background = new SolidColorBrush(Color.FromArgb(1, 0xff, 0xff, 0xff)),\n        Cursor = Cursors.Cross, Content = canvas\n    };\n\n    var rectObservable = Observable.FromEventPattern<MouseEventArgs>(window, \"MouseLeftButtonDown\")\n        .Select(ev => ev.EventArgs.GetPosition(window))\n        .CombineLatest(Observable.FromEventPattern<MouseEventArgs>(window, \"MouseMove\"),\n           (downPos, ev) =>\n           {\n               var movePos = ev.EventArgs.GetPosition(window);\n               return new Rect(Math.Min(downPos.X, movePos.X), Math.Min(downPos.Y, movePos.Y),\n                               Math.Abs(downPos.X - movePos.X), Math.Abs(downPos.Y - movePos.Y));\n           })\n        .TakeUntil(Observable.FromEventPattern<MouseEventArgs>(window, \"MouseLeftButtonUp\"));\n\n    rectObservable.Subscribe(r =>\n    {\n        Canvas.SetLeft(shapeRect, r.X);\n        Canvas.SetTop(shapeRect, r.Y);\n        shapeRect.Width = r.Width;\n        shapeRect.Height = r.Height;\n    }, window.Close);\n\n    window.Show();\n\n    return rectObservable.ToTask(); // return a last value\n}\n```\n\n\u672c\u5f53\u306f\u6700\u521d\u306e\u307b\u3046\u306fXAML\u3067\u66f8\u3044\u3066\u3042\u3052\u305f\u307b\u3046\u304c\u3044\u308d\u3044\u308d\u3044\u3058\u308a\u3084\u3059\u304f\u3066\u4fbf\u5229\u3060\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u304a\u597d\u307f\u3067\u3069\u3046\u305e\u3002\n\n(\u8ffd\u8a18)\n\u306a\u304a\u3001HTML+JS\u304c\u30c0\u30e1\u3060\u3068\u8a00\u3063\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\u3002Electron\u306f[\u30d6\u30e9\u30a6\u30b6\u306e\u30ec\u30f3\u30c0\u30e9\u30d7\u30ed\u30bb\u30b9\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30eb\u30fc\u30d7\u306bNode(io.js)\u3092\u7d71\u5408\u3059\u308b](http://www.slideshare.net/mainya/electronatom-shell/25)\u3068\u304bcrazy\u3067\u9762\u767d\u3044\u306e\u3067\u3001\u305d\u308c\u306f\u305d\u308c\u3067\u4f7f\u3063\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5143\u30a2\u30d7\u30ea\u306fReact\u3067\u66f8\u304b\u308c\u3066\u3044\u3066\u3001\u3053\u308c\u306f\u3053\u308c\u3067\u307e\u3041\u826f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b\u306e\u3042\u305f\u308a\u306e\u3088\u3046\u306aRx\u7cfb\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3001\u30a4\u30d9\u30f3\u30c8\u304b\u3089\u306eDOM\u3078\u53cd\u6620\u3068\u3044\u3046\u5f62\u306b\u3059\u308b\u3068\u3001\u305d\u308c\u306f\u305d\u308c\u3067\u3059\u3063\u304d\u308a\u3057\u305d\u3046\u3060\u306a\u3041\u3068\u3044\u3046\u6c17\u304c\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u79c1\u306f\uff08\u4eca\u306e\u3068\u3053\u308d\uff09Bacon.js\u304c\u597d\u304d\u3067\u3059\u3002\n\n * [RxJs](https://github.com/Reactive-Extensions/RxJS)\n * [Bacon.js](https://baconjs.github.io/)\n * [Kefir.js] (https://pozadi.github.io/kefir/)\n", "tags": ["C#", "Rx", "WPF"]}