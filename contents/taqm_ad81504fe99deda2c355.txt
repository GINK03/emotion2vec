{"context": "\u696d\u52d9\u3067\u305d\u3093\u306a\u611f\u3058\u306e\u8981\u4ef6\u304c\u51fa\u305f\u306e\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n1,2\u884c\u3067\u66f8\u3051\u308b\u3068\u601d\u3063\u305f\u3089\u6848\u5916\u9762\u5012\u3060\u3063\u305f\u30fb\u30fb\u30fb\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306fGuava\u3068lombok\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002(\u6b8b\u5ff5\u306a\u304c\u3089\u8077\u5834\u306fJava7\u306a\u306e\u3067\u3059\uff09\n\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u305f\u306e\u3067\u30e1\u30e2\n\n\u30b3\u30fc\u30c9\n\nS3ObjectDelete.java\n@RequiredArgsConstructor\npublic class S3ObjectDelete {\n    private AmazonS3Client client = new AmazonS3Client();\n\n    private final String bucket;\n\n    public static void main(String[] args) {\n        val hoge = new S3ObjectDelete(\"\u30d0\u30b1\u30c3\u30c8\u540d\");\n        hoge.delete(\"\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\");\n    }\n\n    public void delete(String prefix) {\n        // \u540c\u6642\u306b\u524a\u9664\u3067\u304d\u308b\u4ef6\u6570\u306e\u4e0a\u9650\u304c1000\u3089\u3057\u3044\u306e\u3067\u5206\u5272\u3057\u3066\u51e6\u7406\n        for (val keys : Lists.partition(keys(prefix), 1000)) {\n            String[] array = keys.toArray(new String[keys.size()]);\n            client.deleteObjects(new DeleteObjectsRequest(bucket).withKeys(array));\n        }\n    }\n\n    List<String> keys(String prefix) {\n        ObjectListing objects = client.listObjects(bucket, prefix);\n        val f = new S3Object2StringKey();\n        List<String> keys = new ArrayList<>(Lists.transform(objects.getObjectSummaries(), f));\n\n        // \u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u4ef6\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c1000\u4ef6\u3089\u3057\u3044\u306e\u3067\u30eb\u30fc\u30d7\u3057\u3066\u3059\u3079\u3066\u53d6\u5f97\n        while (objects.isTruncated()) {\n            objects = client.listNextBatchOfObjects(objects);\n            keys.addAll(Lists.transform(objects.getObjectSummaries(), f));\n        }\n        return keys;\n    }\n}\n\npublic static class S3Object2StringKey implements Function<S3ObjectSummary, String> {\n    @Override\n    public String apply(S3ObjectSummary input) {\n        return input.getKey();\n    }\n}\n\n\n\u696d\u52d9\u3067\u305d\u3093\u306a\u611f\u3058\u306e\u8981\u4ef6\u304c\u51fa\u305f\u306e\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n1,2\u884c\u3067\u66f8\u3051\u308b\u3068\u601d\u3063\u305f\u3089\u6848\u5916\u9762\u5012\u3060\u3063\u305f\u30fb\u30fb\u30fb\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306fGuava\u3068lombok\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002(\u6b8b\u5ff5\u306a\u304c\u3089\u8077\u5834\u306fJava7\u306a\u306e\u3067\u3059\uff09\n\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308a\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u305f\u306e\u3067\u30e1\u30e2\n# \u30b3\u30fc\u30c9\n```java:S3ObjectDelete.java\n@RequiredArgsConstructor\npublic class S3ObjectDelete {\n    private AmazonS3Client client = new AmazonS3Client();\n\n    private final String bucket;\n\n    public static void main(String[] args) {\n        val hoge = new S3ObjectDelete(\"\u30d0\u30b1\u30c3\u30c8\u540d\");\n        hoge.delete(\"\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\");\n    }\n\n    public void delete(String prefix) {\n        // \u540c\u6642\u306b\u524a\u9664\u3067\u304d\u308b\u4ef6\u6570\u306e\u4e0a\u9650\u304c1000\u3089\u3057\u3044\u306e\u3067\u5206\u5272\u3057\u3066\u51e6\u7406\n        for (val keys : Lists.partition(keys(prefix), 1000)) {\n            String[] array = keys.toArray(new String[keys.size()]);\n            client.deleteObjects(new DeleteObjectsRequest(bucket).withKeys(array));\n        }\n    }\n\n    List<String> keys(String prefix) {\n        ObjectListing objects = client.listObjects(bucket, prefix);\n        val f = new S3Object2StringKey();\n        List<String> keys = new ArrayList<>(Lists.transform(objects.getObjectSummaries(), f));\n\n        // \u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u4ef6\u6570\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u304c1000\u4ef6\u3089\u3057\u3044\u306e\u3067\u30eb\u30fc\u30d7\u3057\u3066\u3059\u3079\u3066\u53d6\u5f97\n        while (objects.isTruncated()) {\n            objects = client.listNextBatchOfObjects(objects);\n            keys.addAll(Lists.transform(objects.getObjectSummaries(), f));\n        }\n        return keys;\n    }\n}\n\npublic static class S3Object2StringKey implements Function<S3ObjectSummary, String> {\n    @Override\n    public String apply(S3ObjectSummary input) {\n        return input.getKey();\n    }\n}\n```\n", "tags": ["Java", "AWS", "S3"]}