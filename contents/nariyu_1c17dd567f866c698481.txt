{"context": " More than 1 year has passed since last update.socket.io 1.0 \u3067\u306f connect \u3063\u307d\u304f middleware \u3068\u3057\u3066\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nsocket.io 1.0 \u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\uff01\nsocket.request \u3067 Request \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d7\u3051\u53d6\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\uff08\u4ee5\u4e0b\u3001Express 4.x \u306e\u5834\u5408\uff09\n\nserver.coffee\nSession = require('express-session').session.Session\n\nCOOKIE_SECRET = 'himitsu-dayo'\nCOOKIE_KEY    = 'sid'\n\n#\n# \u9014\u4e2d\u7701\u7565\n#\n\n# Socket.io\nio = require('socket.io')(server)\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\nio.use (socket, next)->\n\n    # \u30af\u30c3\u30ad\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u3092\u53d6\u5f97\u3059\u308b\n    cookie = require('cookie').parse socket.request.headers.cookie\n    cookie = require('cookie-parser/lib/parse').signedCookies cookie, COOKIE_SECRET\n    sessionID = cookie[COOKIE_KEY]\n\n    # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    sessionStore.get sessionID, (err, sessionData)->\n\n        # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u6210\u529f\uff01\n        if !err and sessionData\n\n            # \u65b0\u3057\u304f Session \u3092\u4f5c\u6210\n            socket.session = new Session({sessionID: sessionID, sessionStore: sessionStore}, sessionData)\n            next()\n\n        # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u5931\u6557 :(\n        else\n            next if err then err.message else '\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u5931\u6557\u3060\u3088\uff01'\n\n# \u63a5\u7d9a\nio.on 'connection', (socket)->\n\n    # \u30bb\u30c3\u30b7\u30e7\u30f3\uff01\n    session = socket.session \n\n    #\n    # \u4ee5\u4e0b\u3044\u308d\u3044\u308d\n    # \n\n\n\u203b 0.9 \u307e\u3067\u306e connect.utils.parseSignedCookies \u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002 cookie-parser \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb socket.io 0.9 \u307e\u3067\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306f\n0.9 \u307e\u3067\u306f\u4e0b\u306e\u3088\u3046\u306b\u3001 io.set('authorization', fun); \u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\nserver.coffee\nio.set 'authorization', (handshakeData, callback)->\n\n    # \u30af\u30c3\u30ad\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u3092\u53d6\u5f97\u3059\u308b\n    cookie = require('cookie').parse decodeURIComponent handshakeData.headers.cookie\n    cookie = connect.utils.parseSignedCookies cookie, COOKIE_SECRET\n    sessionID = cookie[COOKIE_KEY]\n\n    # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n    sessionStore.get sessionID, (err, sessionData)->\n\n        # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u6210\u529f\uff01\n        if !err and sessionData\n\n            # \u65b0\u3057\u304f Session \u3092\u4f5c\u6210\n            handshakeData.session = new Session sessionID: sessionID, sessionStore: sessionStore, sessionData\n            callback(null, true)\n\n        # \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u5931\u6557 :(\n        else\n            callback (if err then err.message else '\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u5931\u6557\u3060\u3088\uff01'), false \n\n#\n# \u4ee5\u4e0b\u7701\u7565\n# \n\n\n\u4e26\u3079\u3066\u307f\u308b\u3068\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u3051\u3069\u3001 middleware \u3068\u3057\u3066\u66f8\u3051\u308b\u3053\u3068\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\u4ee5\u5916\u306b\u3082\u3044\u308d\u3044\u308d\u3084\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u79c1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u5f8c\u306b middleware \u3067\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3057\u305f\u308a\u3068\u304b\u66f8\u3044\u305f\u308a\u3057\u3066\u307e\u3059\u3002\n\nStore\n\u30bf\u30a4\u30c8\u30eb\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3068\u306f\u3042\u307e\u308a\u95a2\u4fc2\u306a\u3044\u3051\u3069 Store \u306b\u3064\u3044\u3066\u3082\u8efd\u304f\u89e6\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3084\u30b5\u30fc\u30d0\u9593\u3067\u5171\u6709\u3059\u308b\u305f\u3081\u306e store \u306f Adapter \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002\n0.9 \u307e\u3067\u306f socket.io \u306b Redis \u7528\u306e\u30af\u30e9\u30b9\u304c\u6700\u521d\u304b\u3089\u7528\u610f\u3055\u308c\u3066\u305f\u3051\u3069\u30011.0 (pre4) \u3067\u306f\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u73fe\u72b6\u3001 Redis \u3092\u4f7f\u3046\u5834\u5408\u306f\u5225\u306e\u958b\u767a\u8005\u306e socket.io-redis \u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u3001\n\nserver.coffee\n\n# Redis \u30a2\u30c0\u30d7\u30bf\nRedisAdapter = require('socket.io-redis')(host: 'localhost', port: 6379)\n\n# Socket.io\nio = require('socket.io')(server, { adapter: RedisAdapter })\n\n\n\u30bd\u30fc\u30b9\u3092\u8efd\u304f\u8997\u3044\u305f\u3089 Pub/Sub \u3068\u304b\u52dd\u624b\u306b\u3084\u3063\u3066\u304f\u308c\u305d\u3046\u306a\u611f\u3058\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u307e\u3060\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u524d\u306e socket.io 1.0.0-pre5 \u3092\u30d9\u30fc\u30b9\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u305f\u3076\u3093\u6b63\u5f0f\u7248\u3067\u3082\u52d5\u304f...\u306f\u305a\uff01\n1.0.2 \u3067\u52d5\u304d\u307e\u3057\u305f\u3002\n\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\nsocket.io 1.0 \u3067\u306f connect \u3063\u307d\u304f middleware \u3068\u3057\u3066\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n## socket.io 1.0 \u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\uff01\n\n`socket.request` \u3067 `Request` \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u53d7\u3051\u53d6\u308c\u308b\u306e\u3067\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\uff08\u4ee5\u4e0b\u3001Express 4.x \u306e\u5834\u5408\uff09\n\n```coffeescript:server.coffee\nSession = require('express-session').session.Session\n\nCOOKIE_SECRET = 'himitsu-dayo'\nCOOKIE_KEY    = 'sid'\n\n#\n# \u9014\u4e2d\u7701\u7565\n#\n\n# Socket.io\nio = require('socket.io')(server)\n\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\nio.use (socket, next)->\n\n\t# \u30af\u30c3\u30ad\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u3092\u53d6\u5f97\u3059\u308b\n\tcookie = require('cookie').parse socket.request.headers.cookie\n\tcookie = require('cookie-parser/lib/parse').signedCookies cookie, COOKIE_SECRET\n\tsessionID = cookie[COOKIE_KEY]\n\n\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\tsessionStore.get sessionID, (err, sessionData)->\n\n\t\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u6210\u529f\uff01\n\t\tif !err and sessionData\n\n\t\t\t# \u65b0\u3057\u304f Session \u3092\u4f5c\u6210\n\t\t\tsocket.session = new Session({sessionID: sessionID, sessionStore: sessionStore}, sessionData)\n\t\t\tnext()\n\n\t\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u5931\u6557 :(\n\t\telse\n\t\t\tnext if err then err.message else '\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u5931\u6557\u3060\u3088\uff01'\n\n# \u63a5\u7d9a\nio.on 'connection', (socket)->\n\n\t# \u30bb\u30c3\u30b7\u30e7\u30f3\uff01\n\tsession = socket.session \n\n\t#\n\t# \u4ee5\u4e0b\u3044\u308d\u3044\u308d\n\t# \n```\n\n\u203b 0.9 \u307e\u3067\u306e `connect.utils.parseSignedCookies` \u306f\u4f7f\u3048\u306a\u304f\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002 `cookie-parser` \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n\n### \u3061\u306a\u307f\u306b\u30fb\u30fb\u30fb socket.io 0.9 \u307e\u3067\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306f\n\n0.9 \u307e\u3067\u306f\u4e0b\u306e\u3088\u3046\u306b\u3001 `io.set('authorization', fun);` \u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\n```coffeescript:server.coffee\nio.set 'authorization', (handshakeData, callback)->\n\t\t\n\t# \u30af\u30c3\u30ad\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3 ID \u3092\u53d6\u5f97\u3059\u308b\n\tcookie = require('cookie').parse decodeURIComponent handshakeData.headers.cookie\n\tcookie = connect.utils.parseSignedCookies cookie, COOKIE_SECRET\n\tsessionID = cookie[COOKIE_KEY]\n\n\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\tsessionStore.get sessionID, (err, sessionData)->\n\t\t\t\n\t\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u6210\u529f\uff01\n\t\tif !err and sessionData\n\n\t\t\t# \u65b0\u3057\u304f Session \u3092\u4f5c\u6210\n\t\t\thandshakeData.session = new Session sessionID: sessionID, sessionStore: sessionStore, sessionData\n\t\t\tcallback(null, true)\n\n\t\t# \u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306e\u53d6\u5f97\u5931\u6557 :(\n\t\telse\n\t\t\tcallback (if err then err.message else '\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u5931\u6557\u3060\u3088\uff01'), false \n\n#\n# \u4ee5\u4e0b\u7701\u7565\n# \n```\n\n\u4e26\u3079\u3066\u307f\u308b\u3068\u3042\u307e\u308a\u5909\u308f\u3089\u306a\u3044\u3088\u3046\u306b\u898b\u3048\u308b\u3051\u3069\u3001 middleware \u3068\u3057\u3066\u66f8\u3051\u308b\u3053\u3068\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u5171\u6709\u4ee5\u5916\u306b\u3082\u3044\u308d\u3044\u308d\u3084\u308a\u3084\u3059\u304f\u306a\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u79c1\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u306e\u5f8c\u306b middleware \u3067\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u53d6\u308a\u51fa\u3057\u305f\u308a\u3068\u304b\u66f8\u3044\u305f\u308a\u3057\u3066\u307e\u3059\u3002\n\n\n## Store\n\n\u30bf\u30a4\u30c8\u30eb\u306e\u30cf\u30f3\u30c9\u30b7\u30a7\u30a4\u30af\u3068\u306f\u3042\u307e\u308a\u95a2\u4fc2\u306a\u3044\u3051\u3069 Store \u306b\u3064\u3044\u3066\u3082\u8efd\u304f\u89e6\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3084\u30b5\u30fc\u30d0\u9593\u3067\u5171\u6709\u3059\u308b\u305f\u3081\u306e store \u306f Adapter \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\n0.9 \u307e\u3067\u306f `socket.io` \u306b `Redis` \u7528\u306e\u30af\u30e9\u30b9\u304c\u6700\u521d\u304b\u3089\u7528\u610f\u3055\u308c\u3066\u305f\u3051\u3069\u30011.0 (pre4) \u3067\u306f\u7528\u610f\u3055\u308c\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u73fe\u72b6\u3001 `Redis` \u3092\u4f7f\u3046\u5834\u5408\u306f\u5225\u306e\u958b\u767a\u8005\u306e `socket.io-redis` \u304c\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3001\n\n```coffeescript:server.coffee\n\n# Redis \u30a2\u30c0\u30d7\u30bf\nRedisAdapter = require('socket.io-redis')(host: 'localhost', port: 6379)\n\n# Socket.io\nio = require('socket.io')(server, { adapter: RedisAdapter })\n```\n\n\u30bd\u30fc\u30b9\u3092\u8efd\u304f\u8997\u3044\u305f\u3089 Pub/Sub \u3068\u304b\u52dd\u624b\u306b\u3084\u3063\u3066\u304f\u308c\u305d\u3046\u306a\u611f\u3058\u3002\n\n\n## \u6700\u5f8c\u306b\n\n<del>\u3053\u306e\u8a18\u4e8b\u306f\u307e\u3060\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u524d\u306e socket.io 1.0.0-pre5 \u3092\u30d9\u30fc\u30b9\u306b\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\u305f\u3076\u3093\u6b63\u5f0f\u7248\u3067\u3082\u52d5\u304f...\u306f\u305a\uff01</del>\n\n1.0.2 \u3067\u52d5\u304d\u307e\u3057\u305f\u3002\n\n\u3053\u3061\u3089\u304b\u3089\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Node.js", "Socket.io", "websocket1.0"]}