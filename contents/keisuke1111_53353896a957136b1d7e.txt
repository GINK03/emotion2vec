{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u521d\u3081\u3066\u4e00\u304b\u6708\u3002\u672c\u3092\u8aad\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u306f\u57d2\u304c\u660e\u304b\u306a\u3044\u306e\u3067\u3001\u4f55\u304b\u4f5c\u308d\u3046\u3068\u601d\u3063\u3066\u59cb\u3081\u305f\u306e\u304c\u30aa\u30bb\u30edAI\u3002\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u306b\u304f\u3044\u3046\u3048\u306b\u30b3\u30e1\u30f3\u30c8\u304c\u5c11\u306a\u304f\u3001\u4e0b\u624b\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\u6539\u5584\u70b9\u306a\u3069\u304c\u3042\u308c\u3070\u662f\u975e\u3054\u6307\u6458\u9858\u3044\u307e\u3059\u3002\n\u74b0\u5883\u306fAnaconda4.1.1(python3.5.2)\n\u5b9f\u884c\u3057\u305f\u3051\u3069\u52d5\u304b\u306a\u3044\u306a\u3069\u304c\u3042\u308c\u3070\u3001\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3059\u3050\u306b\u5bfe\u51e6\u3057\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u5185\u5bb9\n'''\n@author: Keisuke Ueda\n'''\nimport time\nimport random\nimport copy\n\n\nif __name__ == '__main__':\n    start = time.time()\n\na = [[0 for i in range(8)] for j in range(8)]     #\u6700\u521d\u306e\u76e4\u9762\u3092\u5b9a\u7fa9\na[3][3] = -1\na[3][4] = 1\na[4][3] = 1\na[4][4] = -1\n\n#pp = [45,-11,-16,4,-1,2,-1,-3,-1,0]\nevaluation_board = [[45,-11,4,-1,-1,4,-11,45],       #\u3069\u306e\u30de\u30b9\u306b\u77f3\u304c\u3042\u3063\u305f\u3089\u4f55\u70b9\u304b\u3092\u8868\u3059\u8a55\u4fa1\u30dc\u30fc\u30c9\n                    [-11,-16,-1,-3,-3,-1,-16,-11],\n                    [4,-1,2,-1,-1,2,-1,4],\n                    [-1,-3,-1,0,0,-1,-3,-1],\n                    [-1,-3,-1,0,0,-1,-3,-1],\n                    [4,-1,2,-1,-1,2,-1,4],\n                    [-11,-16,-1,-3,-3,-1,-16,-11],\n                    [45,-11,4,-1,-1,4,-11,45]]\n\nBLACK = 1                     #PC\u304cBLACK\nWHITE = -1                    #\u30e6\u30fc\u30b6\u30fc\u304cWHITE\nNONE = 0                      #NONE\u306f\u77f3\u304c\u7f6e\u304b\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u793a\u3059\nTURN = 1                      #\u767d\u3001\u9ed2\u304c\u305d\u308c\u305e\u308c\u7f6e\u3044\u305f\u3089\u4e00\u30bf\u30fc\u30f3\u3068\u3059\u308b\nb = []                        #\u305d\u306e\u3068\u304d\u306b\u77f3\u3092\u6253\u3066\u308b\u5834\u6240\u304c\u3053\u3053\u306b\u683c\u7d0d\u3055\u308c\u308b\n\n\nevaluation = 0                #\u305d\u306e\u76e4\u9762\u306e\u8a55\u4fa1\u5024\u304c\u5165\u308b\nconfirm_stone = 0             #\u78ba\u5b9a\u77f3\u306e\u6570\u304c\u5165\u308b\n\ndef transform(x):             #1,-1\u3092\u898b\u3084\u3059\u304f\u3059\u308b\n    if x == 1:\n        print(\"\u25cf\",end=\"\")\n    elif x == -1:\n        print(\"\u25cb\",end=\"\")\n    else:\n        print(\"\u00d7\",end=\"\")\n\n\ndef scene():                   #\u76e4\u306e\u8868\u793a\n    for i in a:\n        for j in i:\n            transform(j)\n        print()\n\ndef able(c):                   #\u6253\u3066\u308b\u5834\u6240\u306e\u63a2\u7d22\u3092\u3057\u3066\u3001\u305d\u308c\u3092b\u306b\u683c\u7d0d\u3059\u308b\n    global b\n    for x in range(8):    \n        for y in range(8):\n            if a[x][y] != 0:\n                pass\n            else:\n                for i in (-1,0,1):\n                    for j in (-1,0,1):\n                        if i==0 and j==0:\n                            pass\n                        elif x+i<0 or y+j<0 or x+i>7 or y+j>7:\n                            pass\n                        elif a[x+i][y+j] != -c:\n                            pass\n                        else:\n                            for k in range(2,8):\n                                if x+k*i<0 or y+k*j<0 or x+k*i>7 or y+k*j>7:\n                                    break\n                                elif a[x+k*i][y+k*j]==-c:\n                                    pass\n                                elif a[x+k*i][y+k*j]==c:\n                                    b = b + [[x] + [y]]\n                                    break\n                                else:\n                                    break\n    e = []                                 #b\u306e\u4e2d\u3067\u91cd\u8907\u3092\u9632\u3044\u3067\u3044\u308b\u2026\u5fc5\u8981\u306a\u3044\u304b\u3082\n    for f in b:                            #\u52a0\u3048\u305f\u3089\u306a\u305c\u304b\u8a08\u7b97\u65e9\u3044\n        if f not in e:\n            e.append(f)\n    b = e\n\n\ndef put(p,q,c):                #p,q\u306f\u7f6e\u304f\u77f3\u306e\u5ea7\u6a19\u3001c\u306b\u306fWHITE\u304bBLACK\u304c\u5165\u308b\u3002\u3064\u307e\u308a1\u304b-1\u304b\n    for i in (-1,0,1):\n        for j in (-1,0,1):\n            if i==0 and j==0:\n                pass\n            elif p+i<0 or q+j<0 or p+i>7 or q+j>7:\n                pass\n            elif a[p+i][q+j]!=-c:\n                pass\n            else:               \n                for k in range(2,8):\n                    if p+k*i<0 or q+k*j<0 or p+k*i>7 or q+k*j>7:\n                        break\n                    elif a[p+k*i][q+k*j]==-c:\n                        pass\n                    elif a[p+k*i][q+k*j]==c:\n                        for r in range(1,k):\n                            a[p+r*i][q+r*j] = c\n                        break\n                    else:\n                        break\n    a[p][q] = c\n\n\ndef me_put():                  #\u30e6\u30fc\u30b6\u30fc\u304c\u6253\u3064\n\n    while True:\n        able(WHITE)\n        print(b)\n        try:\n            line = input()\n        except:\n            print(\"\u5f37\u5236\u7d42\u4e86\")\n            exit(1)\n        if line == \"exit\" or line == \"quit\":\n            print(\"\u653e\u68c4\u7d42\u4e86\")\n            exit(1)\n        if line == \"pass\":\n            if len(b) == 0:\n                return\n            print(\"\u30d1\u30b9\u3067\u304d\u307e\u305b\u3093\")\n            continue\n        try:\n            x, y = map(int, line.split())\n            if [x,y] in b:\n                put(x,y,WHITE)\n                return\n            print(\"\u305d\u3053\u306b\u306f\u7f6e\u3051\u307e\u305b\u3093\")\n        except:\n            print(\"\u610f\u5473\u4e0d\u660e\")\n\n\ndef Number_Stone(c):                        #\u81ea\u5206\u306e\u77f3\u304c\u4f55\u500b\u3042\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\n    Number = 0\n    for i in range(8):\n        for j in range(8):\n            if a[i][j] == c:\n                Number += 1\n\n    return Number\n\n\ndef confirm_stone(color):                   #\u78ba\u5b9a\u77f3\u306e\u6570\u3092confirm_stone_number\u306b\u683c\u7d0d\u3059\u308b\u95a2\u6570\n    global confirm_stone_number\n    confirm_stone_number = 0\n\n    for i in [[0,0],[0,7],[7,0],[7,7]]:\n        if a[i[0]][i[1]] != color:\n            pass\n        else:\n            if i == [0,0]:\n                for j in range(1,8):\n                    if a[j][0]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[0][j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [0,7]:\n                for j in range(1,8):\n                    if a[j][7]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[0][7-j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [7,0]:\n                for j in range(1,8):\n                    if a[7-j][0]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[7][j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [7,7]:\n                for j in range(1,8):\n                    if a[7-j][7]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[7][7-j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n\n\ndef evaluate(color):                           #\u4efb\u610f\u306e\u76e4\u9762\u306e\u3069\u3061\u3089\u304b\u306e\u77f3\u306e\u8a55\u4fa1\u5024\u3092\u8a08\u7b97\u3059\u308b\n    global evaluation\n    global confirm_stone_number\n    evaluation = 0\n    BP = 0\n    FS = 0\n    CN = 0\n    for i in range(8):\n        for j in range(8):\n            if a[i][j] == color:\n                BP += evaluation_board[i][j] * random.random() * 3\n            elif a[i][j] == -color:\n                BP -= evaluation_board[i][j] * random.random() * 3\n            else:\n                pass\n\n    confirm_stone(color)\n    p = confirm_stone_number\n    confirm_stone(-color)\n    q = confirm_stone_number\n    FS = ((p-q) + random.random() * 3) * 11\n\n    b = []\n    able(color)\n    CN = (len(b) + random.random() * 2) * 10\n\n    evaluation = BP * 2 + FS * 5 + CN * 1\n\n\ndef Alpha_Beta():                       #AlphaBeta\u6cd5\u3067\u63a2\u7d22\u3059\u308b\n    global a\n    global b\n    global evaluation\n    b = []\n    evaluations1 = []\n    evaluations2 = []\n    evaluations3 = []\n    evaluations4 = []\n    evaluations5 = []\n    able(BLACK)\n    copy_a1 = copy.deepcopy(a)\n\n    for i in range(len(b)):\n        put(b[i][0], b[i][1], BLACK)\n        b = []\n        able(WHITE)\n        copy_a2 = copy.deepcopy(a)\n        evaluations2 = []           \n        for j in range(len(b)):\n            put(b[j][0], b[j][1], WHITE)\n            b = []\n            able(BLACK)\n            copy_a3 = copy.deepcopy(a)\n            evaluations3 = []           \n            for k in range(len(b)):\n                put(b[k][0], b[k][1], BLACK)\n                b = []\n                able(WHITE)\n                copy_a4 = copy.deepcopy(a)\n                evaluations4 = []         \n                for l in range(len(b)):\n                    put(b[l][0], b[l][1], WHITE)\n                    b = []\n                    able(BLACK)\n                    copy_a5 = copy.deepcopy(a)\n                    evaluations5 = []    \n                    for m in range(len(b)):\n                        put(b[m][0], b[m][1], BLACK)\n                        evaluate(BLACK)\n                        evB = evaluation\n                        evaluate(WHITE)\n                        evW = evaluation\n                        evaluation = evB - evW\n                        if evaluations4 != []:                     #\u679d\u5208\u308a\n                            if evaluation >= min(evaluations4):\n                                evaluations5 += [evaluation]\n                                break\n                            else:pass\n                        else:\n                            pass\n                        evaluations5 += [evaluation]\n                        a = copy.deepcopy(copy_a5)\n                    a = copy.deepcopy(copy_a4)\n                    b = []\n                    able(WHITE)\n                    if evaluations5 == []:\n                        pass\n                    else:                                           #\u679d\u5208\u308a\n                        if evaluations3 != []:\n                            if max(evaluations3) >= max(evaluations5):\n                                evaluations4 += [max(evaluations5)]\n                                break\n                            else:\n                                evaluations4 += [max(evaluations5)]\n                        else:\n                            evaluations4 += [max(evaluations5)]\n                    evaluations5 = []\n                a = copy.deepcopy(copy_a3)\n                b = []\n                able(BLACK)\n                if evaluations4 == []:\n                    pass\n                else:                                               #\u679d\u5208\u308a\n                    if evaluations2 != []:\n                        if min(evaluations2) <= min(evaluations4):\n                            evaluations3 += [min(evaluations4)]\n                            break\n                        else:\n                            evaluations3 += [min(evaluations4)]\n                    else:\n                        evaluations3 += [min(evaluations4)]\n                evaluations4 = []\n            a = copy.deepcopy(copy_a2)\n            b = []\n            able(WHITE)\n            if evaluations3 == []:\n                pass\n            else:                                                   #\u679d\u5208\u308a\n                if evaluations1 != []:\n                    if max(evaluations1) >=  max(evaluations3):\n                        evaluations2 += [max(evaluations3)]\n                        break\n                    else:\n                        evaluations2 += [max(evaluations3)]\n                else:\n                    evaluations2 += [max(evaluations3)]\n            evaluations3 = []\n        a = copy.deepcopy(copy_a1)\n        b = []\n        able(BLACK)\n        if evaluations2 == []:\n            pass\n        else:\n            evaluations1 += [min(evaluations2)]\n        evaluations2 = []\n    max_index1 = evaluations1.index(max(evaluations1))\n\n    print(evaluations1)\n    print(\"PC\u306e\u624b\" + str(b[max_index1]))\n    put(b[max_index1][0], b[max_index1][1], BLACK)\n\n\ncopy_ax = []\ngame_start = time.time()\nwhile (Number_Stone(NONE) > 0) and (a != copy_ax):\n    copy_ax = copy.deepcopy(a)\n    print(\"TURN =\" + str(TURN))\n    scene()\n    b = []\n\n    starttime = time.time()\n    able(BLACK)                      #PC\u304c\u6253\u3064\n    print(b)\n    if b == []:\n        print(\"pass\")\n    else :\n        print(\"thinking\u2026\u2026\")\n        Alpha_Beta()\n    endtime = time.time()\n    interval = endtime - starttime\n    print(str(interval) + \"\u79d2\")       #\u8a08\u7b97\u6642\u9593\u3092\u8868\u793a\n\n    b = []\n    scene()                           #\u76e4\u9762\u3092\u8868\u793a\n\n    if Number_Stone(NONE) == 0:       #\u30e6\u30fc\u30b6\u30fc\u304c\u6253\u3064\n        break\n    else:\n        me_put()                          \n        print() \n\n    TURN += 1\n\n\nprint(\"------------------RESULT-------------------\")       #\u7d50\u679c\u767a\u8868\nscene()\nprint(\"BLACK:\" + str(Number_Stone(BLACK)))\nprint(\"WHITE:\" + str(Number_Stone(WHITE)))\nprint()\nif Number_Stone(BLACK) > Number_Stone(WHITE):\n    print(\"YOU LOST!!!!!\")\nelif Number_Stone(BLACK) < Number_Stone(WHITE):\n    print(\"YOU WON!!!!!\")\nelse:\n    print(\"DRAW\")\ngame_end = time.time()\nprint(\"\u8a66\u5408\u6642\u9593:\" + str(game_end - game_start))\n\n\n\u8ffd\u8a18\n\u67d0\u30aa\u30bb\u30ed\u30aa\u30f3\u30e9\u30a4\u30f3\u5bfe\u6226\u3067\u6226\u3063\u305f\u3068\u3053\u308d\uff08\u5f8c\u624b\u306e\u307f\uff09\u4e94\u6226\u3057\u3066\u308f\u305a\u304b\u306b\u4e00\u52dd\u306e\u307f\u3002\n\u6d41\u77f3\u306b\u5f31\u3059\u304e\u307e\u3059\u306d\uff08\u7b11\uff09\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u6b21\u306f\u6a5f\u68b0\u5b66\u7fd2\u3092\u7528\u3044\u3066\u8a55\u4fa1\u95a2\u6570\u306e\u6539\u5584\u3092\u76ee\u6307\u3057\u307e\u3059\uff01\nAWS,TensorFlow\u3092\u7528\u3044\u3066\u884c\u3046\u4e88\u5b9a\u3067\u3059\u306e\u3067\u3069\u3046\u305e\u3054\u671f\u5f85\u304f\u3060\u3055\u3044\u3002\n\uff08\u5f8c\u66f8\u304d\uff09\n\u307e\u305f\u3001@shiracamus\u3055\u3093\u306b\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nhttp://qiita.com/shiracamus/items/f03127819fff0f1a4349\n\u3068\u3066\u3082\u8aad\u307f\u3084\u3059\u304f\u3001\u521d\u5fc3\u8005\u306e\u81ea\u5206\u306b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n@shiracamus\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\u305c\u3072\u3053\u306e\u8a18\u4e8b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\uff08\u79c1\u306e\u306f\u53cd\u9762\u6559\u5e2b\u3068\u3057\u3066\uff09\u7686\u69d8\u306e\u5f79\u306b\u7acb\u3066\u305f\u3089\u5e78\u3044\u3067\u3059\u3002\n#\u306f\u3058\u3081\u306b\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u521d\u3081\u3066\u4e00\u304b\u6708\u3002\u672c\u3092\u8aad\u3093\u3067\u3044\u308b\u3060\u3051\u3067\u306f\u57d2\u304c\u660e\u304b\u306a\u3044\u306e\u3067\u3001\u4f55\u304b\u4f5c\u308d\u3046\u3068\u601d\u3063\u3066\u59cb\u3081\u305f\u306e\u304c\u30aa\u30bb\u30edAI\u3002\u30b3\u30fc\u30c9\u304c\u8aad\u307f\u306b\u304f\u3044\u3046\u3048\u306b\u30b3\u30e1\u30f3\u30c8\u304c\u5c11\u306a\u304f\u3001\u4e0b\u624b\u306a\u3068\u3053\u308d\u304c\u3042\u308b\u306e\u306f\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\u6539\u5584\u70b9\u306a\u3069\u304c\u3042\u308c\u3070\u662f\u975e\u3054\u6307\u6458\u9858\u3044\u307e\u3059\u3002\n\n\u74b0\u5883\u306fAnaconda4.1.1(python3.5.2)\n\u5b9f\u884c\u3057\u305f\u3051\u3069\u52d5\u304b\u306a\u3044\u306a\u3069\u304c\u3042\u308c\u3070\u3001\u30b3\u30e1\u30f3\u30c8\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3059\u3050\u306b\u5bfe\u51e6\u3057\u307e\u3059\u3002\n\n#\u30b3\u30fc\u30c9\u5185\u5bb9\n\n```py\n'''\n@author: Keisuke Ueda\n'''\nimport time\nimport random\nimport copy\n\n\nif __name__ == '__main__':\n    start = time.time()\n\na = [[0 for i in range(8)] for j in range(8)]     #\u6700\u521d\u306e\u76e4\u9762\u3092\u5b9a\u7fa9\na[3][3] = -1\na[3][4] = 1\na[4][3] = 1\na[4][4] = -1\n\n#pp = [45,-11,-16,4,-1,2,-1,-3,-1,0]\nevaluation_board = [[45,-11,4,-1,-1,4,-11,45],       #\u3069\u306e\u30de\u30b9\u306b\u77f3\u304c\u3042\u3063\u305f\u3089\u4f55\u70b9\u304b\u3092\u8868\u3059\u8a55\u4fa1\u30dc\u30fc\u30c9\n                    [-11,-16,-1,-3,-3,-1,-16,-11],\n                    [4,-1,2,-1,-1,2,-1,4],\n                    [-1,-3,-1,0,0,-1,-3,-1],\n                    [-1,-3,-1,0,0,-1,-3,-1],\n                    [4,-1,2,-1,-1,2,-1,4],\n                    [-11,-16,-1,-3,-3,-1,-16,-11],\n                    [45,-11,4,-1,-1,4,-11,45]]\n\nBLACK = 1                     #PC\u304cBLACK\nWHITE = -1                    #\u30e6\u30fc\u30b6\u30fc\u304cWHITE\nNONE = 0                      #NONE\u306f\u77f3\u304c\u7f6e\u304b\u308c\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u793a\u3059\nTURN = 1                      #\u767d\u3001\u9ed2\u304c\u305d\u308c\u305e\u308c\u7f6e\u3044\u305f\u3089\u4e00\u30bf\u30fc\u30f3\u3068\u3059\u308b\nb = []                        #\u305d\u306e\u3068\u304d\u306b\u77f3\u3092\u6253\u3066\u308b\u5834\u6240\u304c\u3053\u3053\u306b\u683c\u7d0d\u3055\u308c\u308b\n\n\nevaluation = 0                #\u305d\u306e\u76e4\u9762\u306e\u8a55\u4fa1\u5024\u304c\u5165\u308b\nconfirm_stone = 0             #\u78ba\u5b9a\u77f3\u306e\u6570\u304c\u5165\u308b\n\ndef transform(x):             #1,-1\u3092\u898b\u3084\u3059\u304f\u3059\u308b\n    if x == 1:\n        print(\"\u25cf\",end=\"\")\n    elif x == -1:\n        print(\"\u25cb\",end=\"\")\n    else:\n        print(\"\u00d7\",end=\"\")\n        \n\ndef scene():                   #\u76e4\u306e\u8868\u793a\n    for i in a:\n        for j in i:\n            transform(j)\n        print()\n\ndef able(c):                   #\u6253\u3066\u308b\u5834\u6240\u306e\u63a2\u7d22\u3092\u3057\u3066\u3001\u305d\u308c\u3092b\u306b\u683c\u7d0d\u3059\u308b\n    global b\n    for x in range(8):    \n        for y in range(8):\n            if a[x][y] != 0:\n                pass\n            else:\n                for i in (-1,0,1):\n                    for j in (-1,0,1):\n                        if i==0 and j==0:\n                            pass\n                        elif x+i<0 or y+j<0 or x+i>7 or y+j>7:\n                            pass\n                        elif a[x+i][y+j] != -c:\n                            pass\n                        else:\n                            for k in range(2,8):\n                                if x+k*i<0 or y+k*j<0 or x+k*i>7 or y+k*j>7:\n                                    break\n                                elif a[x+k*i][y+k*j]==-c:\n                                    pass\n                                elif a[x+k*i][y+k*j]==c:\n                                    b = b + [[x] + [y]]\n                                    break\n                                else:\n                                    break\n    e = []                                 #b\u306e\u4e2d\u3067\u91cd\u8907\u3092\u9632\u3044\u3067\u3044\u308b\u2026\u5fc5\u8981\u306a\u3044\u304b\u3082\n    for f in b:                            #\u52a0\u3048\u305f\u3089\u306a\u305c\u304b\u8a08\u7b97\u65e9\u3044\n        if f not in e:\n            e.append(f)\n    b = e\n\n\ndef put(p,q,c):                #p,q\u306f\u7f6e\u304f\u77f3\u306e\u5ea7\u6a19\u3001c\u306b\u306fWHITE\u304bBLACK\u304c\u5165\u308b\u3002\u3064\u307e\u308a1\u304b-1\u304b\n    for i in (-1,0,1):\n        for j in (-1,0,1):\n            if i==0 and j==0:\n                pass\n            elif p+i<0 or q+j<0 or p+i>7 or q+j>7:\n                pass\n            elif a[p+i][q+j]!=-c:\n                pass\n            else:               \n                for k in range(2,8):\n                    if p+k*i<0 or q+k*j<0 or p+k*i>7 or q+k*j>7:\n                        break\n                    elif a[p+k*i][q+k*j]==-c:\n                        pass\n                    elif a[p+k*i][q+k*j]==c:\n                        for r in range(1,k):\n                            a[p+r*i][q+r*j] = c\n                        break\n                    else:\n                        break\n    a[p][q] = c\n\n\ndef me_put():                  #\u30e6\u30fc\u30b6\u30fc\u304c\u6253\u3064\n\n    while True:\n        able(WHITE)\n        print(b)\n        try:\n            line = input()\n        except:\n            print(\"\u5f37\u5236\u7d42\u4e86\")\n            exit(1)\n        if line == \"exit\" or line == \"quit\":\n            print(\"\u653e\u68c4\u7d42\u4e86\")\n            exit(1)\n        if line == \"pass\":\n            if len(b) == 0:\n                return\n            print(\"\u30d1\u30b9\u3067\u304d\u307e\u305b\u3093\")\n            continue\n        try:\n            x, y = map(int, line.split())\n            if [x,y] in b:\n                put(x,y,WHITE)\n                return\n            print(\"\u305d\u3053\u306b\u306f\u7f6e\u3051\u307e\u305b\u3093\")\n        except:\n            print(\"\u610f\u5473\u4e0d\u660e\")\n\n\ndef Number_Stone(c):                        #\u81ea\u5206\u306e\u77f3\u304c\u4f55\u500b\u3042\u308b\u304b\u3092\u8fd4\u3059\u95a2\u6570\n    Number = 0\n    for i in range(8):\n        for j in range(8):\n            if a[i][j] == c:\n                Number += 1\n\n    return Number\n\n\ndef confirm_stone(color):                   #\u78ba\u5b9a\u77f3\u306e\u6570\u3092confirm_stone_number\u306b\u683c\u7d0d\u3059\u308b\u95a2\u6570\n    global confirm_stone_number\n    confirm_stone_number = 0\n    \n    for i in [[0,0],[0,7],[7,0],[7,7]]:\n        if a[i[0]][i[1]] != color:\n            pass\n        else:\n            if i == [0,0]:\n                for j in range(1,8):\n                    if a[j][0]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[0][j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [0,7]:\n                for j in range(1,8):\n                    if a[j][7]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[0][7-j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [7,0]:\n                for j in range(1,8):\n                    if a[7-j][0]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[7][j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n            elif i == [7,7]:\n                for j in range(1,8):\n                    if a[7-j][7]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n                for j in range(1,8):\n                    if a[7][7-j]==color:\n                        if j != 7:\n                            pass\n                        else:\n                            confirm_stone_number += j\n                            break\n                    else:\n                        confirm_stone_number += j \n                        break\n\n\ndef evaluate(color):                           #\u4efb\u610f\u306e\u76e4\u9762\u306e\u3069\u3061\u3089\u304b\u306e\u77f3\u306e\u8a55\u4fa1\u5024\u3092\u8a08\u7b97\u3059\u308b\n    global evaluation\n    global confirm_stone_number\n    evaluation = 0\n    BP = 0\n    FS = 0\n    CN = 0\n    for i in range(8):\n        for j in range(8):\n            if a[i][j] == color:\n                BP += evaluation_board[i][j] * random.random() * 3\n            elif a[i][j] == -color:\n                BP -= evaluation_board[i][j] * random.random() * 3\n            else:\n                pass\n            \n    confirm_stone(color)\n    p = confirm_stone_number\n    confirm_stone(-color)\n    q = confirm_stone_number\n    FS = ((p-q) + random.random() * 3) * 11\n    \n    b = []\n    able(color)\n    CN = (len(b) + random.random() * 2) * 10\n    \n    evaluation = BP * 2 + FS * 5 + CN * 1\n\n\ndef Alpha_Beta():                       #AlphaBeta\u6cd5\u3067\u63a2\u7d22\u3059\u308b\n    global a\n    global b\n    global evaluation\n    b = []\n    evaluations1 = []\n    evaluations2 = []\n    evaluations3 = []\n    evaluations4 = []\n    evaluations5 = []\n    able(BLACK)\n    copy_a1 = copy.deepcopy(a)\n    \n    for i in range(len(b)):\n        put(b[i][0], b[i][1], BLACK)\n        b = []\n        able(WHITE)\n        copy_a2 = copy.deepcopy(a)\n        evaluations2 = []           \n        for j in range(len(b)):\n            put(b[j][0], b[j][1], WHITE)\n            b = []\n            able(BLACK)\n            copy_a3 = copy.deepcopy(a)\n            evaluations3 = []           \n            for k in range(len(b)):\n                put(b[k][0], b[k][1], BLACK)\n                b = []\n                able(WHITE)\n                copy_a4 = copy.deepcopy(a)\n                evaluations4 = []         \n                for l in range(len(b)):\n                    put(b[l][0], b[l][1], WHITE)\n                    b = []\n                    able(BLACK)\n                    copy_a5 = copy.deepcopy(a)\n                    evaluations5 = []    \n                    for m in range(len(b)):\n                        put(b[m][0], b[m][1], BLACK)\n                        evaluate(BLACK)\n                        evB = evaluation\n                        evaluate(WHITE)\n                        evW = evaluation\n                        evaluation = evB - evW\n                        if evaluations4 != []:                     #\u679d\u5208\u308a\n                            if evaluation >= min(evaluations4):\n                                evaluations5 += [evaluation]\n                                break\n                            else:pass\n                        else:\n                            pass\n                        evaluations5 += [evaluation]\n                        a = copy.deepcopy(copy_a5)\n                    a = copy.deepcopy(copy_a4)\n                    b = []\n                    able(WHITE)\n                    if evaluations5 == []:\n                        pass\n                    else:                                           #\u679d\u5208\u308a\n                        if evaluations3 != []:\n                            if max(evaluations3) >= max(evaluations5):\n                                evaluations4 += [max(evaluations5)]\n                                break\n                            else:\n                                evaluations4 += [max(evaluations5)]\n                        else:\n                            evaluations4 += [max(evaluations5)]\n                    evaluations5 = []\n                a = copy.deepcopy(copy_a3)\n                b = []\n                able(BLACK)\n                if evaluations4 == []:\n                    pass\n                else:                                               #\u679d\u5208\u308a\n                    if evaluations2 != []:\n                        if min(evaluations2) <= min(evaluations4):\n                            evaluations3 += [min(evaluations4)]\n                            break\n                        else:\n                            evaluations3 += [min(evaluations4)]\n                    else:\n                        evaluations3 += [min(evaluations4)]\n                evaluations4 = []\n            a = copy.deepcopy(copy_a2)\n            b = []\n            able(WHITE)\n            if evaluations3 == []:\n                pass\n            else:                                                   #\u679d\u5208\u308a\n                if evaluations1 != []:\n                    if max(evaluations1) >=  max(evaluations3):\n                        evaluations2 += [max(evaluations3)]\n                        break\n                    else:\n                        evaluations2 += [max(evaluations3)]\n                else:\n                    evaluations2 += [max(evaluations3)]\n            evaluations3 = []\n        a = copy.deepcopy(copy_a1)\n        b = []\n        able(BLACK)\n        if evaluations2 == []:\n            pass\n        else:\n            evaluations1 += [min(evaluations2)]\n        evaluations2 = []\n    max_index1 = evaluations1.index(max(evaluations1))\n    \n    print(evaluations1)\n    print(\"PC\u306e\u624b\" + str(b[max_index1]))\n    put(b[max_index1][0], b[max_index1][1], BLACK)\n\n\ncopy_ax = []\ngame_start = time.time()\nwhile (Number_Stone(NONE) > 0) and (a != copy_ax):\n    copy_ax = copy.deepcopy(a)\n    print(\"TURN =\" + str(TURN))\n    scene()\n    b = []\n    \n    starttime = time.time()\n    able(BLACK)                      #PC\u304c\u6253\u3064\n    print(b)\n    if b == []:\n        print(\"pass\")\n    else :\n        print(\"thinking\u2026\u2026\")\n        Alpha_Beta()\n    endtime = time.time()\n    interval = endtime - starttime\n    print(str(interval) + \"\u79d2\")       #\u8a08\u7b97\u6642\u9593\u3092\u8868\u793a\n    \n    b = []\n    scene()                           #\u76e4\u9762\u3092\u8868\u793a\n    \n    if Number_Stone(NONE) == 0:       #\u30e6\u30fc\u30b6\u30fc\u304c\u6253\u3064\n        break\n    else:\n        me_put()                          \n        print() \n    \n    TURN += 1\n\n\nprint(\"------------------RESULT-------------------\")       #\u7d50\u679c\u767a\u8868\nscene()\nprint(\"BLACK:\" + str(Number_Stone(BLACK)))\nprint(\"WHITE:\" + str(Number_Stone(WHITE)))\nprint()\nif Number_Stone(BLACK) > Number_Stone(WHITE):\n    print(\"YOU LOST!!!!!\")\nelif Number_Stone(BLACK) < Number_Stone(WHITE):\n    print(\"YOU WON!!!!!\")\nelse:\n    print(\"DRAW\")\ngame_end = time.time()\nprint(\"\u8a66\u5408\u6642\u9593:\" + str(game_end - game_start))\n```\n\n#\u8ffd\u8a18\n\u67d0\u30aa\u30bb\u30ed\u30aa\u30f3\u30e9\u30a4\u30f3\u5bfe\u6226\u3067\u6226\u3063\u305f\u3068\u3053\u308d\uff08\u5f8c\u624b\u306e\u307f\uff09\u4e94\u6226\u3057\u3066\u308f\u305a\u304b\u306b\u4e00\u52dd\u306e\u307f\u3002\n\u6d41\u77f3\u306b\u5f31\u3059\u304e\u307e\u3059\u306d\uff08\u7b11\uff09\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u6b21\u306f\u6a5f\u68b0\u5b66\u7fd2\u3092\u7528\u3044\u3066\u8a55\u4fa1\u95a2\u6570\u306e\u6539\u5584\u3092\u76ee\u6307\u3057\u307e\u3059\uff01\nAWS,TensorFlow\u3092\u7528\u3044\u3066\u884c\u3046\u4e88\u5b9a\u3067\u3059\u306e\u3067\u3069\u3046\u305e\u3054\u671f\u5f85\u304f\u3060\u3055\u3044\u3002\n\n\n\uff08\u5f8c\u66f8\u304d\uff09\n\u307e\u305f\u3001@shiracamus\u3055\u3093\u306b\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nhttp://qiita.com/shiracamus/items/f03127819fff0f1a4349\n\u3068\u3066\u3082\u8aad\u307f\u3084\u3059\u304f\u3001\u521d\u5fc3\u8005\u306e\u81ea\u5206\u306b\u306f\u3068\u3066\u3082\u53c2\u8003\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n@shiracamus\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\u305c\u3072\u3053\u306e\u8a18\u4e8b\u306e\u30b3\u30fc\u30c9\u3092\u53c2\u8003\u306b\u3057\u3066\uff08\u79c1\u306e\u306f\u53cd\u9762\u6559\u5e2b\u3068\u3057\u3066\uff09\u7686\u69d8\u306e\u5f79\u306b\u7acb\u3066\u305f\u3089\u5e78\u3044\u3067\u3059\u3002\n\n", "tags": ["Python", "AI", "\u30aa\u30bb\u30ed", "python3"]}