{"context": " More than 1 year has passed since last update.node.js\u3067Promise-Q\u3092\u5229\u7528\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u306e\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u3059\u3093\u306a\u308a\u7406\u89e3\u7684\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n\u203b\u307e\u3060node\u6b742\u30f6\u6708\u306e\u521d\u5fc3\u8005\u3067\u3059\n\n\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\n\u672c\u5bb6\u3067\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff08\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u306a\u72b6\u614b\u306bmodify\u3057\u3066\u3042\u308a\u307e\u3059\uff09\nhttps://github.com/kriskowal/q\n\nwithout_q.js\nvar val;\nvar step1 = function(callback) {\n    val = 'hoge';\n    setTimeout(function(){\n        console.log(val);\n        callback();\n    }, 1000);\n};\nvar step2 = function(callback) {\n    val = val + 'fuga';\n    setTimeout(function() {\n        console.log(val);\n        callback();\n    }, 500);\n};\n\nstep1(function(){\n    step2(function(){\n        console.log(\"done\");\n    });\n});\n\n\n\u3053\u308c\u3092Q\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002\n\nwith_q.js\nvar Q = require('q');\nvar val;\n\nvar step1 = function() {\n    val = 'hoge';\n    var d = Q.defer();\n    setTimeout(function(){\n        console.log(val);\n        d.resolve();\n    }, 1000);\n    return d.promise;\n};\nvar step2 = function() {\n    val = val + 'fuga';\n    var d = Q.defer();\n    setTimeout(function() {\n        console.log(val);\n        d.resolve();\n    }, 500);\n    return d.promise;\n};\n\nQ.fcall(step1)\n    .then(step2)\n    .catch(function(error) {\n    // Handle any error from all above steps\n        console.log(\"error\");\n    })\n    .done(function(){\n        console.log(\"done\");\n    });\n\n\nstep1\u3084step2\u306fpromise object\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3056\u3063\u304f\u308a\u3068\u3057\u305fpromise object\u306e\u66f8\u304d\u65b9\u306f\u3001\n\n\u6700\u521d\u306bvar d=Q.defer();\u3092\u5ba3\u8a00\n\u6700\u5f8c\u306breturn d.promise;\u3092\u8fd4\u3059\n\u9014\u4e2d\u3001\u6b21\u306e\u51e6\u7406\u3068\u540c\u671f\u3092\u3068\u308b\u51e6\u7406\u5f8c\u306bd.resolve(); \u3092\u633f\u5165\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\n\u975e\u540c\u671f\u51e6\u7406\u3092\u542b\u3080\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306e\u540c\u671f\u3092\u3068\u308b\nStackOverflow\u3067\u56de\u7b54\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\nhttp://stackoverflow.com/questions/17217736/while-loop-with-promises\n\nsample.js\nvar Q = require('q');\n\n// condition: \u30eb\u30fc\u30d7\u7d42\u4e86\u5224\u5b9a\n// body: promise\u3092\u8fd4\u3059\u95a2\u6570\nfunction promiseWhile(condition, body) {\n    var d = Q.defer();\n    function loop() {\n        if (!condition()) return d.resolve();\n        Q.when(body(), loop, d.reject);\n    }\n    Q.nextTick(loop);\n    return d.promise;\n}\n\n// Usage\nvar index = 1;\npromiseWhile(\n    function() { // condition\n        return index < 11;\n    },\n    function() { // body including arbitrary async\n        console.log(index);\n        index++;\n        return Q.delay(500);\n        })\n    .then(function() {\n        console.log(\"done\"); })\n    .done();\n\n\n\u3053\u3053\u3067\u306f\u3001Q.delay\u3092\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f\u8a33\u3067\u30fb\u30fb\u30fb\u3002Q.delay\u3092\u81ea\u5206\u306e\u5b9a\u7fa9\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\nmysample.js\nvar Q = require('q');\n\n// condition: \u30eb\u30fc\u30d7\u7d42\u4e86\u5224\u5b9a\n// body: promise\u3092\u8fd4\u3059\u95a2\u6570\nfunction promiseWhile(condition, body) {\n    var d = Q.defer();\n    function loop() {\n        if (!condition()) return d.resolve();\n        Q.when(body(), loop, d.reject);\n    }\n    Q.nextTick(loop);\n    return d.promise;\n}\n\n// body\nvar arr = [];\nvar body = function(idx) {\n    var d = Q.defer();\n    setTimeout(function(){\n        arr.push(idx);\n        d.resolve();\n    }, 500);\n    return d.promise;\n};\n\n// Usage\nvar index = 1;\npromiseWhile(\n    function() { // condition\n        return index < 11;\n    },\n    function() { // body including arbitrary async\n        console.log(index);\n        index++;\n        return body(index-1);\n    })\n    .catch(function(error) {\n        // Handle any error from all above steps\n        console.log(\"error\");\n    })\n    .done(function() {\n        console.log(arr);\n    });\n\n\n\u3064\u307e\u308a\u3001body\u306e\u51e6\u7406\u4e2d\u306e\u975e\u540c\u671f\u51e6\u7406\u3092promise object\u306b\u3059\u308c\u3070OK\u3067\u3059\u3002\nnode.js\u3067Promise-Q\u3092\u5229\u7528\u3057\u305f\u975e\u540c\u671f\u51e6\u7406\u306e\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u3092\u3059\u3093\u306a\u308a\u7406\u89e3\u7684\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u3067\u307e\u3068\u3081\u307e\u3059\u3002\n\u203b\u307e\u3060node\u6b742\u30f6\u6708\u306e\u521d\u5fc3\u8005\u3067\u3059\n\n## \u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\n\u672c\u5bb6\u3067\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\uff08\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u53ef\u80fd\u306a\u72b6\u614b\u306bmodify\u3057\u3066\u3042\u308a\u307e\u3059\uff09\nhttps://github.com/kriskowal/q\n\n```js:without_q.js\nvar val;\nvar step1 = function(callback) {\n    val = 'hoge';\n    setTimeout(function(){\n        console.log(val);\n        callback();\n    }, 1000);\n};\nvar step2 = function(callback) {\n    val = val + 'fuga';\n    setTimeout(function() {\n        console.log(val);\n        callback();\n    }, 500);\n};\n\nstep1(function(){\n    step2(function(){\n        console.log(\"done\");\n    });\n});\n```\n\n\u3053\u308c\u3092Q\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u3057\u307e\u3059\u3002\n\n```js:with_q.js\nvar Q = require('q');\nvar val;\n\nvar step1 = function() {\n    val = 'hoge';\n    var d = Q.defer();\n    setTimeout(function(){\n        console.log(val);\n        d.resolve();\n    }, 1000);\n    return d.promise;\n};\nvar step2 = function() {\n    val = val + 'fuga';\n    var d = Q.defer();\n    setTimeout(function() {\n        console.log(val);\n        d.resolve();\n    }, 500);\n    return d.promise;\n};\n\nQ.fcall(step1)\n    .then(step2)\n    .catch(function(error) {\n    // Handle any error from all above steps\n        console.log(\"error\");\n    })\n    .done(function(){\n        console.log(\"done\");\n    });\n```\n\nstep1\u3084step2\u306fpromise object\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3056\u3063\u304f\u308a\u3068\u3057\u305fpromise object\u306e\u66f8\u304d\u65b9\u306f\u3001\n\n1. \u6700\u521d\u306b`var d=Q.defer();`\u3092\u5ba3\u8a00\n1. \u6700\u5f8c\u306b`return d.promise;`\u3092\u8fd4\u3059\n1. \u9014\u4e2d\u3001\u6b21\u306e\u51e6\u7406\u3068\u540c\u671f\u3092\u3068\u308b\u51e6\u7406\u5f8c\u306b`d.resolve();` \u3092\u633f\u5165\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\n## \u975e\u540c\u671f\u51e6\u7406\u3092\u542b\u3080\u7e70\u308a\u8fd4\u3057\u51e6\u7406\u306e\u540c\u671f\u3092\u3068\u308b\nStackOverflow\u3067\u56de\u7b54\u3092\u767a\u898b\u3057\u307e\u3057\u305f\u3002\nhttp://stackoverflow.com/questions/17217736/while-loop-with-promises\n\n```js:sample.js\nvar Q = require('q');\n\n// condition: \u30eb\u30fc\u30d7\u7d42\u4e86\u5224\u5b9a\n// body: promise\u3092\u8fd4\u3059\u95a2\u6570\nfunction promiseWhile(condition, body) {\n    var d = Q.defer();\n    function loop() {\n        if (!condition()) return d.resolve();\n        Q.when(body(), loop, d.reject);\n    }\n    Q.nextTick(loop);\n    return d.promise;\n}\n\n// Usage\nvar index = 1;\npromiseWhile(\n    function() { // condition\n        return index < 11;\n    },\n    function() { // body including arbitrary async\n        console.log(index);\n        index++;\n        return Q.delay(500);\n        })\n    .then(function() {\n        console.log(\"done\"); })\n    .done();\n```\n\n\u3053\u3053\u3067\u306f\u3001Q.delay\u3092\u4f7f\u3063\u305f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u81ea\u5206\u306e\u3084\u308a\u305f\u3044\u51e6\u7406\u3092\u66f8\u304f\u8a33\u3067\u30fb\u30fb\u30fb\u3002Q.delay\u3092\u81ea\u5206\u306e\u5b9a\u7fa9\u95a2\u6570\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\n```js:mysample.js\nvar Q = require('q');\n\n// condition: \u30eb\u30fc\u30d7\u7d42\u4e86\u5224\u5b9a\n// body: promise\u3092\u8fd4\u3059\u95a2\u6570\nfunction promiseWhile(condition, body) {\n    var d = Q.defer();\n    function loop() {\n        if (!condition()) return d.resolve();\n        Q.when(body(), loop, d.reject);\n    }\n    Q.nextTick(loop);\n    return d.promise;\n}\n\n// body\nvar arr = [];\nvar body = function(idx) {\n    var d = Q.defer();\n    setTimeout(function(){\n        arr.push(idx);\n        d.resolve();\n    }, 500);\n    return d.promise;\n};\n\n// Usage\nvar index = 1;\npromiseWhile(\n    function() { // condition\n        return index < 11;\n    },\n    function() { // body including arbitrary async\n        console.log(index);\n        index++;\n        return body(index-1);\n    })\n    .catch(function(error) {\n        // Handle any error from all above steps\n        console.log(\"error\");\n    })\n    .done(function() {\n        console.log(arr);\n    });\n```\n\n\u3064\u307e\u308a\u3001body\u306e\u51e6\u7406\u4e2d\u306e\u975e\u540c\u671f\u51e6\u7406\u3092promise object\u306b\u3059\u308c\u3070OK\u3067\u3059\u3002\n", "tags": ["Node.js", "promise"]}