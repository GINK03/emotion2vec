{"context": " More than 1 year has passed since last update.IoT \u306e\u918d\u9190\u5473\u306f\u306a\u3093\u3068\u3044\u3063\u3066\u3082\u300c\u30cd\u30c3\u30c8\u306b\u7e4b\u304c\u3063\u3066\u3044\u308b\u300d\u4e8b\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u751f\u304b\u3057\u305f\u4f7f\u3044\u65b9\u3068\u3057\u3066\u300c\u306a\u306b\u304b\u3042\u3063\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4eca\u56de Edison \u306e\u4e2d\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u3092\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 GO\u8a00\u8a9e\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\nGO \u3092\u4f7f\u3063\u305f\u7406\u7531\u3068\u3057\u3066\u306f\n\n\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5bb9\u6613\u3067\u3042\u308b\n\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092\u751f\u6210\u3059\u308b\n\u305d\u306e\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30ea\u30f3\u30af\u306e\u3072\u3068\u304b\u305f\u307e\u308a\u306b\u306a\u3063\u3066\u3044\u308b\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5f37\u3044\n\n\u3068\u3044\u3046\u3042\u305f\u308a\u3067\u3059\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3084\u308a\u3084\u3059\u304f\u3066\u3001Linux \u3084 Windows\u3001\u305d\u3057\u3066 MaxOSX \u3068\u5b89\u5b9a\u3057\u305f\u958b\u767a\u74b0\u5883\u3092\u5f97\u3089\u308c\u3066\u52d5\u4f5c\u78ba\u8a8d\u3082\u305d\u306e\u4e0a\u3067\u884c\u3048\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u30e1\u30ea\u30c3\u30c8\u3092\u898b\u3044\u3060\u3057\u307e\u3057\u305f\u3002\nLinux \u306a\u308a Windows \u306a\u308a\u306e\u4e0a\u3067\u958b\u767a\u3057\u3066\u5b8c\u6210\u3057\u305f\u3089\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u3067\u304d\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092 scp \u3067 Edison \u306b\u8ee2\u9001\u3057\u3088\u3046\u3068\u3044\u3046\u9b42\u80c6\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u5b9f\u969b\u306b\u4f5c\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\u8d77\u52d5\u6642\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u4e0e\u3048\u305f\u6587\u5b57\u5217\u3092\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u3068\u3044\u3046\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\nTwitter \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b anaconda \u3092\u5229\u7528\u3057\u3066\u3055\u304f\u3063\u3068\u4f5c\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\niotTaslkPost\nimport (\n    \"os\"\n    \"flag\"\n    \"fmt\"\n    \"github.com/ChimeraCoder/anaconda\"\n    \"net/url\"\n)\n\nfunc tweet(talk string) {\n    anaconda.SetConsumerKey(\"your-consumer-key\")\n    anaconda.SetConsumerSecret(\"your-consumer-secret\")\n    api := anaconda.NewTwitterApi(\"your-access-token\", \"your-access-token-secret\")\n    v := url.Values{}\n    tweet, err := api.PostTweet(talk, v)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    fmt.Println(\"Tweet success: \"+tweet.Text)\n}\n\nfunc main() {\n    flag.Parse()\n    if flag.NArg() != 1 {\n        fmt.Println(\"Argument Error.\")\n        fmt.Println(\"  usage: iotTalkPost your-tweet\")\n        os.Exit(1)\n    }\n\n    tweet(flag.Arg(0))\n}\n\n\n\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\nTwitter API \u3078\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7fa4\u306f\u5404\u4eba\u3067\u53d6\u5f97\u3057\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u308b\n\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 Edison \u306e\u5185\u90e8\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u304c\u6295\u7a3f\u3055\u308c\u307e\u3059\u3002\nGPIO \u306b\u62bc\u3057\u30dc\u30bf\u30f3\u3092\u53d6\u308a\u4ed8\u3051\u3066\u3001\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u898b\u307e\u3057\u3087\u3046\u3002\n\n\u62bc\u3057\u30dc\u30bf\u30f3\u306e\u914d\u7dda\n\u4eca\u56de\u306f GPIO15 \u306b\u62bc\u3057\u30dc\u30bf\u30f3\u30b9\u30a4\u30c3\u30c1\u3092\u3064\u3051\u3066\u30dc\u30bf\u30f3\u306e\u5165\u529b\u3092\u898b\u307e\u3059\u3002\n\u30d7\u30eb\u30a2\u30c3\u30d7\u56de\u8def\u306a\u306e\u3067\u3001\u89e3\u653e\u3067\uff11\u62bc\u3055\u308c\u305f\u3089\uff10\u306b\u306a\u308b\u56de\u8def\u3067\u3059\u306d\u3002\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\n\u30dc\u30bf\u30f3\u76e3\u8996\u3068\u30c4\u30a4\u30fc\u30c8\u30b3\u30de\u30f3\u30c9\u306e\u8d77\u52d5\u306b\u306f Ruby \u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u66f8\u304d\u6368\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3002\n\npush.rb\ndef gpio_in(port)\n  number = port.to_s\n  if !File.exist?(\"/sys/class/gpio/gpio#{number}\") then\n    open(\"/sys/class/gpio/export\", \"w\") do |fp|\n      fp << number\n    end\n  end\n  open(\"/sys/class/gpio/gpio#{number}/direction\", \"w\") do |fp|\n    fp << 'in'\n  end\nend\n\ndef input(port)\n  code = \"1\"\n  open(\"/sys/class/gpio/gpio#{port}/value\", \"r\") do |fp|\n    fp.each do |line|\n      code = line\n      break\n    end\n  end\n  return (code.to_i == 0)\nend\n\n# ---- main\ngpio_in(15)\n\ntrig = false\nwhile(1) do\n  push = input(15)\n  if (trig == false) && (push == true) then\n    puts(\"Fire!\")\n    system(\"./iotTalkPost \\\"push! \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3088\u3063\uff01\\\"\")\n  end\n  trig = push\n  sleep(0.05)\nend\n\n\nsysfs \u306e GPIO value \u3092\u304f\u308b\u304f\u308b\u76e3\u8996\u3057\u3066\u3001\uff10\u304b\u3089\uff11\u306b\u306a\u3063\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\nIoT \u3063\u3066\u306a\u3093\u3067\u3057\u3087\u304b\u306d\n\u3053\u308c\u3067 Edison \u306e\u4e2d\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nEdison \u3067\u4f55\u304b\u3092\u76e3\u8996\u3057\u3066\u3001\u90fd\u5ea6\u30c4\u30a4\u30fc\u30c8\u3057\u307e\u304f\u308b\u3068\u304b\u306b\u4f7f\u3046\u3068\u3044\u304f\u3089\u304b IoT \u3063\u307d\u304f\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u306d\u3002\nIoT \u306e\u918d\u9190\u5473\u306f\u306a\u3093\u3068\u3044\u3063\u3066\u3082\u300c\u30cd\u30c3\u30c8\u306b\u7e4b\u304c\u3063\u3066\u3044\u308b\u300d\u4e8b\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u305d\u306e\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3092\u751f\u304b\u3057\u305f\u4f7f\u3044\u65b9\u3068\u3057\u3066\u300c\u306a\u306b\u304b\u3042\u3063\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u300d\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# \u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4eca\u56de Edison \u306e\u4e2d\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u3092\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 GO\u8a00\u8a9e\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\nGO \u3092\u4f7f\u3063\u305f\u7406\u7531\u3068\u3057\u3066\u306f\n\n1. \u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5bb9\u6613\u3067\u3042\u308b\n2. \u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u3092\u751f\u6210\u3059\u308b\n3. \u305d\u306e\u5b9f\u884c\u30d0\u30a4\u30ca\u30ea\u304c\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30ea\u30f3\u30af\u306e\u3072\u3068\u304b\u305f\u307e\u308a\u306b\u306a\u3063\u3066\u3044\u308b\n4. \u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306b\u5f37\u3044\n\n\u3068\u3044\u3046\u3042\u305f\u308a\u3067\u3059\u3002\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u304c\u3084\u308a\u3084\u3059\u304f\u3066\u3001Linux \u3084 Windows\u3001\u305d\u3057\u3066 MaxOSX \u3068\u5b89\u5b9a\u3057\u305f\u958b\u767a\u74b0\u5883\u3092\u5f97\u3089\u308c\u3066\u52d5\u4f5c\u78ba\u8a8d\u3082\u305d\u306e\u4e0a\u3067\u884c\u3048\u308b\u3068\u3044\u3046\u3068\u3053\u308d\u306b\u30e1\u30ea\u30c3\u30c8\u3092\u898b\u3044\u3060\u3057\u307e\u3057\u305f\u3002\nLinux \u306a\u308a Windows \u306a\u308a\u306e\u4e0a\u3067\u958b\u767a\u3057\u3066\u5b8c\u6210\u3057\u305f\u3089\u30af\u30ed\u30b9\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u3067\u304d\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092 scp \u3067 Edison \u306b\u8ee2\u9001\u3057\u3088\u3046\u3068\u3044\u3046\u9b42\u80c6\u3067\u3059\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u5b9f\u969b\u306b\u4f5c\u3063\u305f\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u3002\n\u8d77\u52d5\u6642\u306b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u4e0e\u3048\u305f\u6587\u5b57\u5217\u3092\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u3068\u3044\u3046\u7c21\u5358\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\nTwitter \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b anaconda \u3092\u5229\u7528\u3057\u3066\u3055\u304f\u3063\u3068\u4f5c\u3063\u3066\u3042\u308a\u307e\u3059\u3002\n\n```go:iotTaslkPost\nimport (\n\t\"os\"\n\t\"flag\"\n\t\"fmt\"\n\t\"github.com/ChimeraCoder/anaconda\"\n\t\"net/url\"\n)\n\nfunc tweet(talk string) {\n\tanaconda.SetConsumerKey(\"your-consumer-key\")\n\tanaconda.SetConsumerSecret(\"your-consumer-secret\")\n\tapi := anaconda.NewTwitterApi(\"your-access-token\", \"your-access-token-secret\")\n\tv := url.Values{}\n\ttweet, err := api.PostTweet(talk, v)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\tfmt.Println(\"Tweet success: \"+tweet.Text)\n}\n\nfunc main() {\n\tflag.Parse()\n\tif flag.NArg() != 1 {\n\t\tfmt.Println(\"Argument Error.\")\n\t\tfmt.Println(\"  usage: iotTalkPost your-tweet\")\n\t\tos.Exit(1)\n\t}\n\n\ttweet(flag.Arg(0))\n}\n```\n\n## \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\nTwitter API \u3078\u306e\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u7fa4\u306f\u5404\u4eba\u3067\u53d6\u5f97\u3057\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u57cb\u3081\u8fbc\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\n# \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3055\u308c\u308b\n\u4e0a\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068 Edison \u306e\u5185\u90e8\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u304c\u6295\u7a3f\u3055\u308c\u307e\u3059\u3002\nGPIO \u306b\u62bc\u3057\u30dc\u30bf\u30f3\u3092\u53d6\u308a\u4ed8\u3051\u3066\u3001\u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b ruby \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u898b\u307e\u3057\u3087\u3046\u3002\n\n## \u62bc\u3057\u30dc\u30bf\u30f3\u306e\u914d\u7dda\n\u4eca\u56de\u306f GPIO15 \u306b\u62bc\u3057\u30dc\u30bf\u30f3\u30b9\u30a4\u30c3\u30c1\u3092\u3064\u3051\u3066\u30dc\u30bf\u30f3\u306e\u5165\u529b\u3092\u898b\u307e\u3059\u3002\n\u30d7\u30eb\u30a2\u30c3\u30d7\u56de\u8def\u306a\u306e\u3067\u3001\u89e3\u653e\u3067\uff11\u62bc\u3055\u308c\u305f\u3089\uff10\u306b\u306a\u308b\u56de\u8def\u3067\u3059\u306d\u3002\n![pullup_sw.PNG](https://qiita-image-store.s3.amazonaws.com/0/50737/9edf8b03-3642-b988-dc61-e083df463b25.png)\n\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\n\u30dc\u30bf\u30f3\u76e3\u8996\u3068\u30c4\u30a4\u30fc\u30c8\u30b3\u30de\u30f3\u30c9\u306e\u8d77\u52d5\u306b\u306f Ruby \u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u66f8\u304d\u6368\u3066\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3002\n\n```ruby:push.rb\ndef gpio_in(port)\n  number = port.to_s\n  if !File.exist?(\"/sys/class/gpio/gpio#{number}\") then\n    open(\"/sys/class/gpio/export\", \"w\") do |fp|\n      fp << number\n    end\n  end\n  open(\"/sys/class/gpio/gpio#{number}/direction\", \"w\") do |fp|\n    fp << 'in'\n  end\nend\n\ndef input(port)\n  code = \"1\"\n  open(\"/sys/class/gpio/gpio#{port}/value\", \"r\") do |fp|\n    fp.each do |line|\n      code = line\n      break\n    end\n  end\n  return (code.to_i == 0)\nend\n\n# ---- main\ngpio_in(15)\n\ntrig = false\nwhile(1) do\n  push = input(15)\n  if (trig == false) && (push == true) then\n    puts(\"Fire!\")\n    system(\"./iotTalkPost \\\"push! \u30dc\u30bf\u30f3\u304c\u62bc\u3055\u308c\u305f\u3088\u3063\uff01\\\"\")\n  end\n  trig = push\n  sleep(0.05)\nend\n```\n\nsysfs \u306e GPIO value \u3092\u304f\u308b\u304f\u308b\u76e3\u8996\u3057\u3066\u3001\uff10\u304b\u3089\uff11\u306b\u306a\u3063\u305f\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\n# IoT \u3063\u3066\u306a\u3093\u3067\u3057\u3087\u304b\u306d\n\u3053\u308c\u3067 Edison \u306e\u4e2d\u304b\u3089\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nEdison \u3067\u4f55\u304b\u3092\u76e3\u8996\u3057\u3066\u3001\u90fd\u5ea6\u30c4\u30a4\u30fc\u30c8\u3057\u307e\u304f\u308b\u3068\u304b\u306b\u4f7f\u3046\u3068\u3044\u304f\u3089\u304b IoT \u3063\u307d\u304f\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u306d\u3002\n\n\n", "tags": ["Edison", "IoT", "Go", "Ruby", "golang"]}