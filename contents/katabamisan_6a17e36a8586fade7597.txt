{"context": " More than 1 year has passed since last update.VC++\u306e\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u7528\u3044\u3066EFLAGS\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3068CPUID\u547d\u4ee4\u306e\u4f7f\u7528\u53ef\u5426\u3092\u78ba\u8a8d\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002EFLAGS\u30ec\u30b8\u30b9\u30bf\u306e\u72ec\u7279\u306a\u6271\u3044\u3001\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u308b\u3068\u3059\u3050\u51fa\u3066\u304f\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nclass eflags\n{\nprivate:\n    eflags(unsigned int value) : value(value) {}\n\npublic:\n    union {\n        unsigned int value;\n        struct {\n            unsigned cf : 1;\n            unsigned r1 : 1;\n            unsigned pf : 1;\n            unsigned r2 : 1;\n            unsigned af : 1;\n            unsigned r3 : 1;\n            unsigned zf : 1;\n            unsigned sf : 1;\n            unsigned tf : 1;\n            unsigned if_ : 1;\n            unsigned df : 1;\n            unsigned of : 1;\n            unsigned iopl : 2;\n            unsigned nt : 1;\n            unsigned r4 : 1;\n            unsigned rf : 1;\n            unsigned vm : 1;\n            unsigned ac : 1;\n            unsigned vif : 1;\n            unsigned vip : 1;\n            unsigned id : 1;\n            unsigned r5 : 10;\n        } bits;\n    };\n\n    // EFLAGS\u3092\u8aad\u307f\u8fbc\u3080\u3002\n    static eflags pop()\n    {\n        unsigned int i;\n        __asm\n        {\n            pushfd\n            pop i\n        }\n        return eflags(i);\n    }\n\n    // EFLAGS\u3092\u66f8\u304d\u8fbc\u3080\u3002\n    void push()\n    {\n        unsigned int i = value;\n        __asm\n        {\n            push i\n            popfd\n        }\n    }\n\n    // CPUID\u547d\u4ee4\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n    static bool is_cpuid_valid()\n    {\n        eflags eflags1 = eflags::pop();\n        eflags1.bits.id = ~eflags1.bits.id;\n        eflags1.push();\n\n        eflags eflags2 = eflags::pop();\n        eflags2.bits.id = ~eflags2.bits.id; // \u5143\u306b\u623b\u3057\u3066\u304a\u304f\n        eflags2.push();\n\n        return eflags1.value != eflags2.value;\n    }\n};\n\n#include <iostream>\n#include <bitset>\n\nint main()\n{\n    std::cout << \"CPUID\u547d\u4ee4\u306f\" << (eflags::is_cpuid_valid() ? \"\u6709\u52b9\" : \"\u7121\u52b9\") << \"\u3067\u3059\u3002\" << std::endl;\n    std::cout << \"EFLAGS: \" << std::bitset<32>(eflags::pop().value) << std::endl;\n\n    std::cin.get();\n\n    return 0;\n}\n\nVC++\u306e\u30a4\u30f3\u30e9\u30a4\u30f3\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u7528\u3044\u3066EFLAGS\u30ec\u30b8\u30b9\u30bf\u306e\u5024\u3068CPUID\u547d\u4ee4\u306e\u4f7f\u7528\u53ef\u5426\u3092\u78ba\u8a8d\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002EFLAGS\u30ec\u30b8\u30b9\u30bf\u306e\u72ec\u7279\u306a\u6271\u3044\u3001\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u308b\u3068\u3059\u3050\u51fa\u3066\u304f\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```cpp\nclass eflags\n{\nprivate:\n\teflags(unsigned int value) : value(value) {}\n\npublic:\n\tunion {\n\t\tunsigned int value;\n\t\tstruct {\n\t\t\tunsigned cf : 1;\n\t\t\tunsigned r1 : 1;\n\t\t\tunsigned pf : 1;\n\t\t\tunsigned r2 : 1;\n\t\t\tunsigned af : 1;\n\t\t\tunsigned r3 : 1;\n\t\t\tunsigned zf : 1;\n\t\t\tunsigned sf : 1;\n\t\t\tunsigned tf : 1;\n\t\t\tunsigned if_ : 1;\n\t\t\tunsigned df : 1;\n\t\t\tunsigned of : 1;\n\t\t\tunsigned iopl : 2;\n\t\t\tunsigned nt : 1;\n\t\t\tunsigned r4 : 1;\n\t\t\tunsigned rf : 1;\n\t\t\tunsigned vm : 1;\n\t\t\tunsigned ac : 1;\n\t\t\tunsigned vif : 1;\n\t\t\tunsigned vip : 1;\n\t\t\tunsigned id : 1;\n\t\t\tunsigned r5 : 10;\n\t\t} bits;\n\t};\n\n\t// EFLAGS\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\tstatic eflags pop()\n\t{\n\t\tunsigned int i;\n\t\t__asm\n\t\t{\n\t\t\tpushfd\n\t\t\tpop i\n\t\t}\n\t\treturn eflags(i);\n\t}\n\n\t// EFLAGS\u3092\u66f8\u304d\u8fbc\u3080\u3002\n\tvoid push()\n\t{\n\t\tunsigned int i = value;\n\t\t__asm\n\t\t{\n\t\t\tpush i\n\t\t\tpopfd\n\t\t}\n\t}\n\n\t// CPUID\u547d\u4ee4\u304c\u6709\u52b9\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\tstatic bool is_cpuid_valid()\n\t{\n\t\teflags eflags1 = eflags::pop();\n\t\teflags1.bits.id = ~eflags1.bits.id;\n\t\teflags1.push();\n\n\t\teflags eflags2 = eflags::pop();\n\t\teflags2.bits.id = ~eflags2.bits.id; // \u5143\u306b\u623b\u3057\u3066\u304a\u304f\n\t\teflags2.push();\n\n\t\treturn eflags1.value != eflags2.value;\n\t}\n};\n\n#include <iostream>\n#include <bitset>\n\nint main()\n{\n\tstd::cout << \"CPUID\u547d\u4ee4\u306f\" << (eflags::is_cpuid_valid() ? \"\u6709\u52b9\" : \"\u7121\u52b9\") << \"\u3067\u3059\u3002\" << std::endl;\n\tstd::cout << \"EFLAGS: \" << std::bitset<32>(eflags::pop().value) << std::endl;\n\n\tstd::cin.get();\n\n\treturn 0;\n}\n```\n", "tags": ["C++", "Windows", "assembly"]}