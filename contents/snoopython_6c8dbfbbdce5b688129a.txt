{"context": "\n\n\u6982\u8981\nJupyter Notebook (*.ipynb)\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f\u305f\u3081\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3Jupyter Launcher.app\u3092\u3001Mac\u306eAutomator\u3092\u4f7f\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002buq\u69d8\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30a2\u30a4\u30c7\u30a2 (ipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f @ OS X)\u3092\u3082\u3068\u306b\u3001\u500b\u4eba\u7684\u306b\u8ffd\u52a0\u3057\u305f\u3044\u6a5f\u80fd\u306e\u305f\u3081\u306b\u3044\u304f\u3064\u304b\u306e\u5909\u66f4\u3092\u884c\u3044\u307e\u3059\u3002\u3064\u3044\u3067\u306bPython\u3067\u66f8\u304d\u76f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u8ffd\u52a0\u6a5f\u80fd\u3068\u5909\u66f4\u70b9\n\n\u30a2\u30d7\u30ea\u81ea\u4f53\u3092\u30af\u30ea\u30c3\u30af\u3067\u5b9f\u884c\u3057\u305f\u3068\u304d\u306fJupyter\u306e\u30c4\u30ea\u30fc\u753b\u9762\u3092\u8868\u793a\u3059\u308b\nJupyter Notebook\u306e\u30db\u30fc\u30e0\u3092/\u304b\u3089~/\u306b\u5909\u66f4\u3059\u308b (\u4e0a\u8a18\u306b\u304a\u3051\u308b\u5229\u4fbf\u6027\u3068\u5b89\u5168\u6027\u306e\u305f\u3081)\n\n\n\u7d30\u304b\u306a\u6539\u5584\u70b9\n\nJupyter\u304c\u78ba\u5b9f\u306b\u8d77\u52d5\u3059\u308b\u307e\u3067\u30a6\u30a7\u30a4\u30c8\u3059\u308b (while\u6587\u306e\u90e8\u5206\u3002\u7279\u306bMac\u8d77\u52d5\u76f4\u5f8c\u3067\u306f\u5b9a\u6570\u6642\u9593\u306e\u30a6\u30a7\u30a4\u30c8\u3060\u3068\u9593\u306b\u5408\u308f\u306a\u3044\u5834\u5408\u3082\u3042\u308b\u305f\u3081)\n\u305d\u306e\u305f\u3081\u3001Jupyter\u306e\u8d77\u52d5\u78ba\u8a8d\u306fnetstat\u3067\u306f\u306a\u304flsof\u3092\u4f7f\u7528\u3059\u308b (netstat\u306f\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u306a\u3044\u9650\u308a\u30bc\u30ed\u3092\u8fd4\u3057\u7d9a\u3051\u3066\u3057\u307e\u3046\u305f\u3081)\n\n\n\u4f5c\u6210\u624b\u9806\n\nAutomator.app\u3092\u8d77\u52d5\u3057\u3001\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u9078\u629e\u3057\u4f5c\u6210\u958b\u59cb\n\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c\u3092\u9078\u629e\n\u30b7\u30a7\u30eb\u306f/usr/bin/python\u3092\u9078\u629e\n\u5165\u529b\u306e\u5f15\u304d\u6e21\u3057\u65b9\u6cd5\u306f\u5f15\u6570\u3068\u3057\u3066\u3092\u9078\u629e\n\u4ee5\u4e0b\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u5165\u529b\nJupyter Launcher.app\u3068\u3057\u3066/Applications\u306b\u4fdd\u5b58\n\u304a\u597d\u307f\u3067\u30a2\u30a4\u30b3\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u5b8c\u6210\n\n\n\nPython\u30b9\u30af\u30ea\u30d7\u30c8\n2017.01.14: \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 (\u6a5f\u80fd\u9762\u306e\u5909\u66f4\u306f\u306a\u3057)\n\njupyter_launcher.py\n# coding: utf-8\n\n\"\"\"Script for the Jupyter Launcher Application.\"\"\"\n\nimport os\nimport sys\nimport time\nimport webbrowser\nfrom subprocess import Popen, PIPE\n\n\ndef listened(port):\n    \"\"\"Check if the spacified port is listened or not.\"\"\"\n    cmd = \"lsof -i :{} | grep 'LISTEN'\"\n    proc = Popen(cmd.format(port), stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)\n    return bool(proc.communicate()[0])\n\n\ndef launch_jupyter(port):\n    \"\"\"Launch a Jupyter Notebook Server with the spacified port.\"\"\"\n    cmd = \"bash -cl 'jupyter-notebook ~/ --port={} --no-browser &' > /dev/null 2>&1\"\n    proc = Popen(cmd.format(port), stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)\n    proc.communicate()\n\n\nif __name__ == '__main__':\n    PORT = 8888\n    ipynbs = sys.argv[1:]\n\n    if not listened(PORT):\n        launch_jupyter(PORT)\n\n    while not listened(PORT):\n        time.sleep(0.5)\n\n    if ipynbs:\n        for ipynb in ipynbs:\n            url = 'http://localhost:{}/notebooks/{}'\n            path = os.path.relpath(ipynb, os.environ['HOME'])\n            webbrowser.open(url.format(PORT, path))\n    else:\n        url = 'http://localhost:{}/tree'\n        webbrowser.open(url.format(PORT))\n\n\n\nReferences\n\nipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f @ OS X - buq's blog\nipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f\uff1a\u8a02\u6b63\u8a18\u4e8b - buq's blog\nMac\u3067\u4f7f\u3063\u3066\u3044\u308bPort\u3092\u8abf\u3079\u308b\u65b9\u6cd5 - Qiita\n\n## \u6982\u8981\n\n[Jupyter Notebook](http://jupyter.org/) (\\*.ipynb)\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f\u305f\u3081\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**Jupyter Launcher.app**\u3092\u3001Mac\u306eAutomator\u3092\u4f7f\u3063\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002buq\u69d8\u306e\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30a2\u30a4\u30c7\u30a2 ([ipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f @ OS X](http://buq.hateblo.jp/entry/2015/08/19/220453))\u3092\u3082\u3068\u306b\u3001\u500b\u4eba\u7684\u306b\u8ffd\u52a0\u3057\u305f\u3044\u6a5f\u80fd\u306e\u305f\u3081\u306b\u3044\u304f\u3064\u304b\u306e\u5909\u66f4\u3092\u884c\u3044\u307e\u3059\u3002\u3064\u3044\u3067\u306bPython\u3067\u66f8\u304d\u76f4\u3057\u3066\u3044\u307e\u3059\u3002\n\n![dock_screenshot.png](https://qiita-image-store.s3.amazonaws.com/0/44000/c2d63cdf-86d9-772e-e41f-0b11e835494b.png)\n\n## \u8ffd\u52a0\u6a5f\u80fd\u3068\u5909\u66f4\u70b9\n\n+ \u30a2\u30d7\u30ea\u81ea\u4f53\u3092\u30af\u30ea\u30c3\u30af\u3067\u5b9f\u884c\u3057\u305f\u3068\u304d\u306fJupyter\u306e\u30c4\u30ea\u30fc\u753b\u9762\u3092\u8868\u793a\u3059\u308b\n+ Jupyter Notebook\u306e\u30db\u30fc\u30e0\u3092`/`\u304b\u3089`~/`\u306b\u5909\u66f4\u3059\u308b (\u4e0a\u8a18\u306b\u304a\u3051\u308b\u5229\u4fbf\u6027\u3068\u5b89\u5168\u6027\u306e\u305f\u3081)\n\n### \u7d30\u304b\u306a\u6539\u5584\u70b9\n\n+ Jupyter\u304c\u78ba\u5b9f\u306b\u8d77\u52d5\u3059\u308b\u307e\u3067\u30a6\u30a7\u30a4\u30c8\u3059\u308b (while\u6587\u306e\u90e8\u5206\u3002\u7279\u306bMac\u8d77\u52d5\u76f4\u5f8c\u3067\u306f\u5b9a\u6570\u6642\u9593\u306e\u30a6\u30a7\u30a4\u30c8\u3060\u3068\u9593\u306b\u5408\u308f\u306a\u3044\u5834\u5408\u3082\u3042\u308b\u305f\u3081)\n+ \u305d\u306e\u305f\u3081\u3001Jupyter\u306e\u8d77\u52d5\u78ba\u8a8d\u306fnetstat\u3067\u306f\u306a\u304flsof\u3092\u4f7f\u7528\u3059\u308b (netstat\u306f\u30d6\u30e9\u30a6\u30b6\u304c\u8d77\u52d5\u3057\u306a\u3044\u9650\u308a\u30bc\u30ed\u3092\u8fd4\u3057\u7d9a\u3051\u3066\u3057\u307e\u3046\u305f\u3081)\n\n## \u4f5c\u6210\u624b\u9806\n\n1. Automator.app\u3092\u8d77\u52d5\u3057\u3001**\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3**\u3092\u9078\u629e\u3057\u4f5c\u6210\u958b\u59cb\n2. \u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089**\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5b9f\u884c**\u3092\u9078\u629e\n3. \u30b7\u30a7\u30eb\u306f**/usr/bin/python**\u3092\u9078\u629e\n4. \u5165\u529b\u306e\u5f15\u304d\u6e21\u3057\u65b9\u6cd5\u306f**\u5f15\u6570\u3068\u3057\u3066**\u3092\u9078\u629e\n5. \u4ee5\u4e0b\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a6\u30a3\u30f3\u30c9\u30a6\u306b\u5165\u529b\n6. Jupyter Launcher.app\u3068\u3057\u3066/Applications\u306b\u4fdd\u5b58\n7. \u304a\u597d\u307f\u3067\u30a2\u30a4\u30b3\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u5b8c\u6210\n\n![automator_screenshot.png](https://qiita-image-store.s3.amazonaws.com/0/44000/1a43b808-63da-1bd0-fe7a-02c9ef003631.png)\n\n## Python\u30b9\u30af\u30ea\u30d7\u30c8\n\n**2017.01.14:** \u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8 (\u6a5f\u80fd\u9762\u306e\u5909\u66f4\u306f\u306a\u3057)\n\n```py:jupyter_launcher.py\n# coding: utf-8\n\n\"\"\"Script for the Jupyter Launcher Application.\"\"\"\n\nimport os\nimport sys\nimport time\nimport webbrowser\nfrom subprocess import Popen, PIPE\n\n\ndef listened(port):\n    \"\"\"Check if the spacified port is listened or not.\"\"\"\n    cmd = \"lsof -i :{} | grep 'LISTEN'\"\n    proc = Popen(cmd.format(port), stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)\n    return bool(proc.communicate()[0])\n\n\ndef launch_jupyter(port):\n    \"\"\"Launch a Jupyter Notebook Server with the spacified port.\"\"\"\n    cmd = \"bash -cl 'jupyter-notebook ~/ --port={} --no-browser &' > /dev/null 2>&1\"\n    proc = Popen(cmd.format(port), stdin=PIPE, stdout=PIPE, stderr=PIPE, shell=True)\n    proc.communicate()\n\n\nif __name__ == '__main__':\n    PORT = 8888\n    ipynbs = sys.argv[1:]\n\n    if not listened(PORT):\n        launch_jupyter(PORT)\n\n    while not listened(PORT):\n        time.sleep(0.5)\n\n    if ipynbs:\n        for ipynb in ipynbs:\n            url = 'http://localhost:{}/notebooks/{}'\n            path = os.path.relpath(ipynb, os.environ['HOME'])\n            webbrowser.open(url.format(PORT, path))\n    else:\n        url = 'http://localhost:{}/tree'\n        webbrowser.open(url.format(PORT))\n```\n\n## References\n\n+ [ipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f @ OS X - buq's blog](http://buq.hateblo.jp/entry/2015/08/19/220453)\n+ [ipython notebook \u306e\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3067\u958b\u304f\uff1a\u8a02\u6b63\u8a18\u4e8b - buq's blog](http://buq.hateblo.jp/entry/2015/08/30/002943)\n+ [Mac\u3067\u4f7f\u3063\u3066\u3044\u308bPort\u3092\u8abf\u3079\u308b\u65b9\u6cd5 - Qiita](http://qiita.com/cozycozy/items/972f3e2866b2dfb0f297)\n", "tags": ["Jupyter", "Mac", "Python", "Automator"]}