{"tags": ["purescript"], "context": "\u3053\u306e\u8a18\u4e8b\u306f (bouzuya) PureScript Advent Calendar 2016 \u306e 4 \u65e5\u76ee\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3060\u3002\n\n\u2190 3 \u65e5\u76ee\u300e PureScript \u306e build toolpulp \u3092\u52d5\u304b\u3057\u3066\u307f\u308b - Qiita \u300f\n\u2192 5 \u65e5\u76ee\u300e PureScript by Example 1 \u7ae0\u3092\u8aad\u3080 - Qiita \u300f\n\n\n\u6982\u8981\n4 \u65e5\u76ee\u306b\u3057\u3066\u3001\u3044\u307e\u3055\u3089\u3060\u3051\u3069  Getting Started with PureScript \u3092\u898b\u308b\u3002\u898b\u306a\u304c\u3089\u3001 psci \u306e\u6b8b\u308a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u898b\u3066\u3044\u304f\u3002\n\u516c\u5f0f \u306e LEARN \u3092\u958b\u3044\u305f\u3089\u30ea\u30f3\u30af\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u6f0f\u308c\u3092\u78ba\u8a8d\u3059\u308b\u610f\u5473\u3067\u898b\u3066\u3044\u304f\u3002\n\n\u6e96\u5099\n\u74b0\u5883\u69cb\u7bc9\u307e\u308f\u308a\u306e\u6b21\u306e\u624b\u9806\u306f 1 / 2 / 3 \u3067\u89e6\u308c\u305f\u306e\u3067\u30b9\u30eb\u30fc\u3002\n$ npm i -g purescript pulp bower\n$ pulp init\n$ pulp build\n$ pulp test\n\n\u3053\u3053\u307e\u3067\u306f\u524d\u56de\u307e\u3067\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u306a\u306e\u3067\u3001\u74b0\u5883\u306f\u524d\u56de\u306e\u3082\u306e\u3092\u4f7f\u7528\u3059\u308b\u3002\u5ff5\u306e\u305f\u3081\u518d\u63b2\u3057\u3066\u304a\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n$ mkdir project3\n$ cd project3/\n$ npm init -y\n$ npm install -D bower pulp purescript\n$ \\vi package.json # scripts \u306b `pulp` \u95a2\u9023\u306e\u3082\u306e\u3092\u8ffd\u52a0\n$ npm run pulp:init\n$ git init\n$ git commit -m 'initial commit'\n\n\nbower install\n\nGetting Started \u306b\u5f93\u3063\u3066 purescript-lists#3.2.1 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u5143\u30da\u30fc\u30b8\u3067\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u306a\u3044\u304c\u3001\u52d5\u304d\u304c\u5909\u308f\u308b\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3053\u3053\u3067\u306f\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3002\n$ $(npm bin)/bower install -S purescript-lists\\#\\^3.2.1\n\n\u307e\u305f\u4e0a\u8a18 purescript-lists#3.2.1 \u306e\u307b\u304b\u306b pulp init \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5408\u308f\u305b\u3066\u5b9f\u884c\u3055\u308c\u305f\u6271\u3044\u306b\u306a\u308b \u306e\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002\n\nbower install --save purescript-lists purescript-console\nbower install --save-dev purescript-psci-support\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u306a\u3044\u306e\u3060\u3051\u3069\u3001\u4eca\u56de\u306f\u7d50\u679c\u7684\u306b purescript-prelude#2.1.0 / purescript-console#2.0.0 / purescript-psci-support#2.0.0 \u304c\u4f9d\u5b58\u95a2\u4fc2\u306b\u5165\u308a\u3001 bower.json \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n$ cat bower.json\n{\n  \"name\": \"project3\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"output\"\n  ],\n  \"dependencies\": {\n    \"purescript-prelude\": \"^2.1.0\",\n    \"purescript-console\": \"^2.0.0\",\n    \"purescript-lists\": \"^3.2.1\"\n  },\n  \"devDependencies\": {\n    \"purescript-psci-support\": \"^2.0.0\"\n  }\n}\n\nPursuit:\n\npurescript-lists - Pursuit\n\npurescript-lists \u306f Data.List \u306a\u3069\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u3060\u3002\n\npulp psci \u3067 import \u3084\u30b3\u30de\u30f3\u30c9\u3092\u305f\u3081\u3059\n\nimport Prelude \u3068 (psci) :type\n\n\u3068\u308a\u3042\u3048\u305a pulp psci \u3092\u3057\u3066\u3001import Prelude \u3057\u3066\u307f\u308b\u3002\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Prelude\n> :type map\nforall a b f. (Functor f) => (a -> b) -> f a -> f b\n\n> :t map\nforall a b f. (Functor f) => (a -> b) -> f a -> f b\n\n\u524d\u56de\u3082\u305d\u3046\u3060\u3051\u3069 :type \u306f :t \u3067\u826f\u3044\u3002\n\u6b21\u306f import Data.List \u3002\n> import Data.List\n> :type zip\nforall a b. List a -> List b -> List (Tuple a b)\n\nGetting Started \u306b\u3088\u308b\u3068 Tab \u3067\u88dc\u5b8c\u304c\u52b9\u304f\u3088\u3046\u3060\u3002import \u307e\u3067\u6253\u3063\u305f\u3068\u304d\u3067\u5019\u88dc\u304c\u5909\u308f\u308b\u306e\u3067\u3001\u6587\u8108\u3082\u8003\u616e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n(psci) :show import\n\n\u3053\u3053\u306f Getting Started \u306b\u306a\u3044\u306e\u3060\u3051\u3069\u3001 :show import \u3092\u8a66\u3057\u3066\u307f\u308b\u3002import \u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n> :show import\nimport Data.List\nimport Prelude\n\n> import Data.List\n\n> :show import\nimport Data.List\nimport Data.List\nimport Prelude\n\n\n(psci) :show loaded\n\n\u3064\u3044\u3067\u306b :show loaded \u3092\u8a66\u3059\u3002\u3053\u3061\u3089\u306f\u8aad\u307f\u8fbc\u307e\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n> :show loaded\nControl.Alt\n(\u4e2d\u7565)\n\n\u4e88\u60f3\u4ee5\u4e0a\u306b\u8868\u793a\u3055\u308c\u305f\u3002\n\n(psci) :reset\n\n\u6b21\u306f :reset \u3067\u8aad\u307f\u8fbc\u307e\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u307f\u308b\u3002\n> :reset\n> :show import\n\n> import Prelude\n> :show import\nimport Prelude\n\n> :reset\n> :show import\n\n>\n\n\u306a\u308b\u307b\u3069\u3001\u305f\u3057\u304b\u306b\u6d88\u3048\u308b\u3002\n\n(psci) :kind\n\n:kind \u3002\u578b\u306e\u7a2e\u985e\u3092\u8868\u793a\u3059\u308b\u3002\u3042\u307e\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u3002\u578b\u5909\u6570\u306e\u6570 (?) \u307f\u305f\u3044\u306a\u8a8d\u8b58\u3067\u5c45\u308b\u3002\n> import Data.List\n> :kind List\n* -> *\n\n> :kind (List Int)\n*\n\n\n(psci) :browse\n\n:browse \u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u542b\u307e\u308c\u308b\u95a2\u6570\u3092\u8868\u793a\u3059\u308b\u3002\n> :browse Data.List\n\n(\u4e2d\u7565)\n\nzipWith :: forall a b c. (a -> b -> c) -> List a -> List b -> List c\n\nzipWithA :: forall m a b c. (Applicative m) => (a -> b -> m c) -> List a -> List b -> m\n (List c)\n\n\n(psci) :paste\n\n:paste \u3002\u8907\u6570\u884c\u306e\u5834\u5408\u306b\u4f7f\u3048\u308b\u3063\u307d\u3044\u3002\n> import Prelude\n> :paste\n\u2026 1\n\u2026 +\n\u2026 2\n3\n\n>\n\n\nGetting Started \u306e\u7d9a\u304d\n\u5927\u304d\u304f\u8131\u7dda\u3057\u305f\u3051\u3069\u3001\u3053\u3053\u304b\u3089\u623b\u308b\u3002\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n> import Prelude ((==), (||), mod)\n> import Data.List (filter, range)\n> import Data.Foldable (sum)\n> let ns = range 0 999\n> let multiples = filter (\\n -> mod n 3 == 0 || mod n 5 == 0) ns\n> :type multiples\nList Int\n\n> sum multiples\n233168\n\n> :quit\nSee ya!\n\n\u8aac\u660e\u306a\u3093\u3066\u5197\u9577\u306a\u611f\u3058\u3082\u3059\u308b\u3051\u3069\u2026\u2026\n\n\nrange \u3067 0 \u4ee5\u4e0a 999 \u4ee5\u4e0b\u306e\u6574\u6570\u306e List \u3092\u3064\u304f\u308a\u3001\u5909\u6570 ns \u3092\u675f\u7e1b\u3059\u308b\n\nns \u306e\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u3001 mod \u3067 3 \u306e\u5270\u4f59\u3092\u3068\u3063\u3066 0 \u3001\u307e\u305f\u306f 5 \u306e\u5270\u4f59\u3092\u3068\u3063\u3066 0 \u306e\u307f\u3092 filter \u3067\u9078\u629e\u3059\u308b\n\nsum \u3067\u305d\u308c\u3089\u306e\u8981\u7d20\u3092\u5408\u8a08\u3059\u308b\n\n\u3068\u3044\u3046\u611f\u3058\u3002\nJavaScript \u3068\u6587\u6cd5\u4e8b\u9805\u3092\u6bd4\u8f03\u3059\u308b\u3068 (\u5dee\u5206\u304c\u5927\u304d\u3059\u304e\u308b\u6c17\u3082\u3059\u308b\u3051\u3069) \u2026\u2026 \u3001\u3053\u3053\u3067\u306f\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b () \u306f\u8981\u3089\u306a\u3044\u3068\u304b \\x -> x \u304c x => x \u304f\u3089\u3044\u304b\u306a\uff1f\u3042\u3068\u306f\u96f0\u56f2\u6c17\u3067\u8aad\u3081\u308b\u306f\u305a\u2026\u2026\u3002\n\nsrc/Euler.purs\n\nGetting Started \u3067\u306f src/Euler.purs \u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092 import Euler \u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3002\nsrc/Euler.purs:\nmodule Euler(answer) where\n\nimport Prelude ((==), (||), mod)\nimport Data.List (filter, range)\nimport Data.Foldable (sum)\n\nns = range 0 999\nmultiples = filter (\\n -> mod n 3 == 0 || mod n 5 == 0) ns\nanswer = sum multiples\n\npsci \u3068\u306f\u9055\u3044\u3001 let \u306f\u4e0d\u8981\u3060\u3002\n\u307c\u304f\u306e\u8da3\u5473\u3067 import \u3059\u308b\u95a2\u6570\u3092\u9650\u5b9a\u3057\u3001 module \u5916\u306b export \u3059\u308b\u3082\u306e\u3092 answer \u306b\u9650\u5b9a\u3057\u305f\u3002\u3053\u306e\u3042\u305f\u308a\u306f\u6b21\u306e Language Guide \u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3002\nLanguage Guide:\n\nLanguage Guide - Importing Modules\nLanguage Guide - Module Exports\n\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nCompiling Euler\nPSCi, version 0.10.2\nType :? for help\n\n> import Euler\n> answer\n233168\n\n> :t answer\nInt\n\n> :q\nSee ya!\n\n\nsrc/Main.purs\n\nEuler \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u884c\u306e\u305f\u3081\u306b src/Main.purs \u3092\u7de8\u96c6\u3057\u3066\u3044\u308b\u3002\nsrc/Main.purs:\nmodule Main(main) where\n\nimport Prelude (Unit, (<>), show)\nimport Euler (answer)\nimport Control.Monad.Eff (Eff)\nimport Control.Monad.Eff.Console (CONSOLE, log)\n\nmain :: forall e. Eff (console :: CONSOLE | e) Unit\nmain = do\n  log (\"The answer is \" <> show answer)\n\n\u3053\u308c\u3082\u307e\u305f\u3001\u3055\u304d\u306e\u4f8b\u3068\u4f3c\u305f\u3088\u3046\u306a\u3001\u307c\u304f\u306a\u308a\u306e\u6539\u5909\u3092\u5165\u308c\u305f\u3002 do \u3068\u304b\u306a\u304f\u3066\u3082\u901a\u308b\u6c17\u306f\u3059\u308b\u3051\u3069\u3001\u305d\u3053\u306f\u7dad\u6301\u3057\u305f\u3002\n$ npm run pulp:run\n\n> project3@1.0.0 pulp:run /Users/bouzuya/project3\n> pulp run\n\n* Building project in/Users/bouzuya/project3\n* Build successful.\nThe answer is 233168\n\n\u3088\u3057\u3088\u3057\u3002\u3053\u308c\u3067 Getting Started \u306f\u304a\u3057\u307e\u3044\u3002\n\n\u307e\u3068\u3081\n2 \u3067\u6b8b\u3057\u3066\u3044\u305f psci \u306e\u30b3\u30de\u30f3\u30c9\u3092\u305f\u3081\u3057\u305f\u306e\u3068 Getting Started with PureScript \u3092\u7247\u4ed8\u3051\u305f\u3002\n\u3082\u3063\u3068\u57fa\u672c\u7684\u306a\u8a00\u8a9e\u4ed5\u69d8\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u306a\u3069\u3092\u77e5\u3089\u306a\u3044\u3068\u66f8\u3051\u306a\u3055\u305d\u3046\u3060\u3002\n\n\u53c2\u8003\n\nPureScript\nGetting Started with PureScript\nLanguage Guide\nLanguage Guide - Importing Modules\nLanguage Guide - Module Exports\n\n\n\u6b21\u56de\u4ee5\u964d\u306e TODO\n\n\npsc-package \u3092\u8a66\u3059\n\nPureScript Language Guide \u3092\u8aad\u3080\n\nPureScript by Example \u3092\u8aad\u3080\n\n24 Days of PureScript, 2016 \u3092\u8aad\u3080\n\n24 Days of PureScript, 2014 \u3092\u8aad\u3080\n\u67d0\u6c0f\u306e\u8a18\u4e8b\u3092\u7d39\u4ecb\u3059\u308b\n\n\u3053\u306e\u8a18\u4e8b\u306f [(bouzuya) PureScript Advent Calendar 2016][purescript-advent-calendar] \u306e 4 \u65e5\u76ee\u3002 (bouzuya) PureScript Advent Calendar 2016 \u306f bouzuya \u306e PureScript \u5b66\u7fd2\u306e\u8a18\u9332\u3060\u3002\n\n- \u2190 3 \u65e5\u76ee\u300e [PureScript \u306e build tool`pulp` \u3092\u52d5\u304b\u3057\u3066\u307f\u308b - Qiita][2016-12-03] \u300f\n- \u2192 5 \u65e5\u76ee\u300e [PureScript by Example 1 \u7ae0\u3092\u8aad\u3080 - Qiita][2016-12-05] \u300f\n\n## \u6982\u8981\n\n4 \u65e5\u76ee\u306b\u3057\u3066\u3001\u3044\u307e\u3055\u3089\u3060\u3051\u3069  [Getting Started with PureScript][getting-started] \u3092\u898b\u308b\u3002\u898b\u306a\u304c\u3089\u3001 `psci` \u306e\u6b8b\u308a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u898b\u3066\u3044\u304f\u3002\n\n[\u516c\u5f0f][purescript] \u306e LEARN \u3092\u958b\u3044\u305f\u3089\u30ea\u30f3\u30af\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u6f0f\u308c\u3092\u78ba\u8a8d\u3059\u308b\u610f\u5473\u3067\u898b\u3066\u3044\u304f\u3002\n\n## \u6e96\u5099\n\n\u74b0\u5883\u69cb\u7bc9\u307e\u308f\u308a\u306e\u6b21\u306e\u624b\u9806\u306f [1][2016-12-01] / [2][2016-12-02] / [3][2016-12-03] \u3067\u89e6\u308c\u305f\u306e\u3067\u30b9\u30eb\u30fc\u3002\n\n```\n$ npm i -g purescript pulp bower\n$ pulp init\n$ pulp build\n$ pulp test\n```\n\n\u3053\u3053\u307e\u3067\u306f[\u524d\u56de][2016-12-03]\u307e\u3067\u3068\u307b\u3068\u3093\u3069\u540c\u3058\u306a\u306e\u3067\u3001\u74b0\u5883\u306f\u524d\u56de\u306e\u3082\u306e\u3092\u4f7f\u7528\u3059\u308b\u3002\u5ff5\u306e\u305f\u3081\u518d\u63b2\u3057\u3066\u304a\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n```\n$ mkdir project3\n$ cd project3/\n$ npm init -y\n$ npm install -D bower pulp purescript\n$ \\vi package.json # scripts \u306b `pulp` \u95a2\u9023\u306e\u3082\u306e\u3092\u8ffd\u52a0\n$ npm run pulp:init\n$ git init\n$ git commit -m 'initial commit'\n```\n\n## `bower install`\n\nGetting Started \u306b\u5f93\u3063\u3066 `purescript-lists#3.2.1` \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u5143\u30da\u30fc\u30b8\u3067\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u306a\u3044\u304c\u3001\u52d5\u304d\u304c\u5909\u308f\u308b\u3068\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3053\u3053\u3067\u306f\u660e\u793a\u7684\u306b\u6307\u5b9a\u3059\u308b\u3002\n\n```\n$ $(npm bin)/bower install -S purescript-lists\\#\\^3.2.1\n```\n\n\u307e\u305f\u4e0a\u8a18 `purescript-lists#3.2.1` \u306e\u307b\u304b\u306b [`pulp init` \u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u304c\u5408\u308f\u305b\u3066\u5b9f\u884c\u3055\u308c\u305f\u6271\u3044\u306b\u306a\u308b][pulp-init] \u306e\u3067\u3001\u3044\u304f\u3064\u304b\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4f9d\u5b58\u95a2\u4fc2\u306b\u8ffd\u52a0\u3055\u308c\u308b\u3002\n\n- `bower install --save purescript-lists purescript-console`\n- `bower install --save-dev purescript-psci-support`\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u306a\u3044\u306e\u3060\u3051\u3069\u3001\u4eca\u56de\u306f\u7d50\u679c\u7684\u306b `purescript-prelude#2.1.0` / `purescript-console#2.0.0` / `purescript-psci-support#2.0.0` \u304c\u4f9d\u5b58\u95a2\u4fc2\u306b\u5165\u308a\u3001 `bower.json` \u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\n```\n$ cat bower.json\n{\n  \"name\": \"project3\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"output\"\n  ],\n  \"dependencies\": {\n    \"purescript-prelude\": \"^2.1.0\",\n    \"purescript-console\": \"^2.0.0\",\n    \"purescript-lists\": \"^3.2.1\"\n  },\n  \"devDependencies\": {\n    \"purescript-psci-support\": \"^2.0.0\"\n  }\n}\n```\n\nPursuit:\n\n- [purescript-lists - Pursuit][pursuit-purescript-lists]\n\n`purescript-lists` \u306f `Data.List` \u306a\u3069\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u3060\u3002\n\n## `pulp psci` \u3067 `import` \u3084\u30b3\u30de\u30f3\u30c9\u3092\u305f\u3081\u3059\n\n### `import Prelude` \u3068 (psci) `:type`\n\n\u3068\u308a\u3042\u3048\u305a `pulp psci` \u3092\u3057\u3066\u3001`import Prelude` \u3057\u3066\u307f\u308b\u3002\n\n```\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n\n> import Prelude\n> :type map\nforall a b f. (Functor f) => (a -> b) -> f a -> f b\n\n> :t map\nforall a b f. (Functor f) => (a -> b) -> f a -> f b\n```\n\n\u524d\u56de\u3082\u305d\u3046\u3060\u3051\u3069 `:type` \u306f `:t` \u3067\u826f\u3044\u3002\n\n\u6b21\u306f `import Data.List` \u3002\n\n```\n> import Data.List\n> :type zip\nforall a b. List a -> List b -> List (Tuple a b)\n```\n\nGetting Started \u306b\u3088\u308b\u3068 `Tab` \u3067\u88dc\u5b8c\u304c\u52b9\u304f\u3088\u3046\u3060\u3002`import ` \u307e\u3067\u6253\u3063\u305f\u3068\u304d\u3067\u5019\u88dc\u304c\u5909\u308f\u308b\u306e\u3067\u3001\u6587\u8108\u3082\u8003\u616e\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\n### (psci) `:show import`\n\n\u3053\u3053\u306f Getting Started \u306b\u306a\u3044\u306e\u3060\u3051\u3069\u3001 `:show import` \u3092\u8a66\u3057\u3066\u307f\u308b\u3002`import` \u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\n```\n> :show import\nimport Data.List\nimport Prelude\n\n> import Data.List\n\n> :show import\nimport Data.List\nimport Data.List\nimport Prelude\n```\n\n### (psci) `:show loaded`\n\n\u3064\u3044\u3067\u306b `:show loaded` \u3092\u8a66\u3059\u3002\u3053\u3061\u3089\u306f\u8aad\u307f\u8fbc\u307e\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3060\u3002\n\n```\n> :show loaded\nControl.Alt\n(\u4e2d\u7565)\n```\n\n\u4e88\u60f3\u4ee5\u4e0a\u306b\u8868\u793a\u3055\u308c\u305f\u3002\n\n### (psci) `:reset`\n\n\u6b21\u306f `:reset` \u3067\u8aad\u307f\u8fbc\u307e\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30ea\u30bb\u30c3\u30c8\u3057\u3066\u307f\u308b\u3002\n\n```\n> :reset\n> :show import\n\n> import Prelude\n> :show import\nimport Prelude\n\n> :reset\n> :show import\n\n>\n```\n\n\u306a\u308b\u307b\u3069\u3001\u305f\u3057\u304b\u306b\u6d88\u3048\u308b\u3002\n\n### (psci) `:kind`\n\n`:kind` \u3002\u578b\u306e\u7a2e\u985e\u3092\u8868\u793a\u3059\u308b\u3002\u3042\u307e\u308a\u7406\u89e3\u3067\u304d\u3066\u3044\u306a\u3044\u3002\u578b\u5909\u6570\u306e\u6570 (?) \u307f\u305f\u3044\u306a\u8a8d\u8b58\u3067\u5c45\u308b\u3002\n\n```\n> import Data.List\n> :kind List\n* -> *\n\n> :kind (List Int)\n*\n```\n\n### (psci) `:browse`\n\n`:browse` \u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u542b\u307e\u308c\u308b\u95a2\u6570\u3092\u8868\u793a\u3059\u308b\u3002\n\n```\n> :browse Data.List\n\n(\u4e2d\u7565)\n\nzipWith :: forall a b c. (a -> b -> c) -> List a -> List b -> List c\n\nzipWithA :: forall m a b c. (Applicative m) => (a -> b -> m c) -> List a -> List b -> m\n (List c)\n```\n\n### (psci) `:paste`\n\n`:paste` \u3002\u8907\u6570\u884c\u306e\u5834\u5408\u306b\u4f7f\u3048\u308b\u3063\u307d\u3044\u3002\n\n```\n> import Prelude\n> :paste\n\u2026 1\n\u2026 +\n\u2026 2\n3\n\n>\n```\n\n## Getting Started \u306e\u7d9a\u304d\n\n\u5927\u304d\u304f\u8131\u7dda\u3057\u305f\u3051\u3069\u3001\u3053\u3053\u304b\u3089\u623b\u308b\u3002\n\n```\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nPSCi, version 0.10.2\nType :? for help\n> import Prelude ((==), (||), mod)\n> import Data.List (filter, range)\n> import Data.Foldable (sum)\n> let ns = range 0 999\n> let multiples = filter (\\n -> mod n 3 == 0 || mod n 5 == 0) ns\n> :type multiples\nList Int\n\n> sum multiples\n233168\n\n> :quit\nSee ya!\n```\n\n\u8aac\u660e\u306a\u3093\u3066\u5197\u9577\u306a\u611f\u3058\u3082\u3059\u308b\u3051\u3069\u2026\u2026\n\n1. `range` \u3067 0 \u4ee5\u4e0a 999 \u4ee5\u4e0b\u306e\u6574\u6570\u306e List \u3092\u3064\u304f\u308a\u3001\u5909\u6570 `ns` \u3092\u675f\u7e1b\u3059\u308b\n2. `ns` \u306e\u5404\u8981\u7d20\u306b\u5bfe\u3057\u3066\u3001 `mod` \u3067 3 \u306e\u5270\u4f59\u3092\u3068\u3063\u3066 0 \u3001\u307e\u305f\u306f 5 \u306e\u5270\u4f59\u3092\u3068\u3063\u3066 0 \u306e\u307f\u3092 `filter` \u3067\u9078\u629e\u3059\u308b\n3. `sum` \u3067\u305d\u308c\u3089\u306e\u8981\u7d20\u3092\u5408\u8a08\u3059\u308b\n\n\u3068\u3044\u3046\u611f\u3058\u3002\n\nJavaScript \u3068\u6587\u6cd5\u4e8b\u9805\u3092\u6bd4\u8f03\u3059\u308b\u3068 (\u5dee\u5206\u304c\u5927\u304d\u3059\u304e\u308b\u6c17\u3082\u3059\u308b\u3051\u3069) \u2026\u2026 \u3001\u3053\u3053\u3067\u306f\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b `()` \u306f\u8981\u3089\u306a\u3044\u3068\u304b `\\x -> x` \u304c `x => x` \u304f\u3089\u3044\u304b\u306a\uff1f\u3042\u3068\u306f\u96f0\u56f2\u6c17\u3067\u8aad\u3081\u308b\u306f\u305a\u2026\u2026\u3002\n\n## `src/Euler.purs`\n\nGetting Started \u3067\u306f `src/Euler.purs` \u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092 `import Euler` \u3067\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u3002\n\n`src/Euler.purs`:\n\n```\nmodule Euler(answer) where\n\nimport Prelude ((==), (||), mod)\nimport Data.List (filter, range)\nimport Data.Foldable (sum)\n\nns = range 0 999\nmultiples = filter (\\n -> mod n 3 == 0 || mod n 5 == 0) ns\nanswer = sum multiples\n```\n\n`psci` \u3068\u306f\u9055\u3044\u3001 `let` \u306f\u4e0d\u8981\u3060\u3002\n\n\u307c\u304f\u306e\u8da3\u5473\u3067 import \u3059\u308b\u95a2\u6570\u3092\u9650\u5b9a\u3057\u3001 module \u5916\u306b export \u3059\u308b\u3082\u306e\u3092 `answer` \u306b\u9650\u5b9a\u3057\u305f\u3002\u3053\u306e\u3042\u305f\u308a\u306f\u6b21\u306e Language Guide \u3092\u53c2\u7167\u3059\u308b\u3068\u826f\u3044\u3002\n\nLanguage Guide:\n\n- [Language Guide - Importing Modules][language-guide-importing-modules]\n- [Language Guide - Module Exports][language-guide-module-exports]\n\n```\n$ npm run pulp:psci\n> project3@1.0.0 pulp:psci /Users/bouzuya/project3\n> pulp psci\n\nCompiling Euler\nPSCi, version 0.10.2\nType :? for help\n\n> import Euler\n> answer\n233168\n\n> :t answer\nInt\n\n> :q\nSee ya!\n```\n\n## `src/Main.purs`\n\n`Euler` \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5b9f\u884c\u306e\u305f\u3081\u306b `src/Main.purs` \u3092\u7de8\u96c6\u3057\u3066\u3044\u308b\u3002\n\n`src/Main.purs`:\n\n```\nmodule Main(main) where\n\nimport Prelude (Unit, (<>), show)\nimport Euler (answer)\nimport Control.Monad.Eff (Eff)\nimport Control.Monad.Eff.Console (CONSOLE, log)\n\nmain :: forall e. Eff (console :: CONSOLE | e) Unit\nmain = do\n  log (\"The answer is \" <> show answer)\n```\n\n\u3053\u308c\u3082\u307e\u305f\u3001\u3055\u304d\u306e\u4f8b\u3068\u4f3c\u305f\u3088\u3046\u306a\u3001\u307c\u304f\u306a\u308a\u306e\u6539\u5909\u3092\u5165\u308c\u305f\u3002 `do` \u3068\u304b\u306a\u304f\u3066\u3082\u901a\u308b\u6c17\u306f\u3059\u308b\u3051\u3069\u3001\u305d\u3053\u306f\u7dad\u6301\u3057\u305f\u3002\n\n```\n$ npm run pulp:run\n\n> project3@1.0.0 pulp:run /Users/bouzuya/project3\n> pulp run\n\n* Building project in/Users/bouzuya/project3\n* Build successful.\nThe answer is 233168\n```\n\n\u3088\u3057\u3088\u3057\u3002\u3053\u308c\u3067 Getting Started \u306f\u304a\u3057\u307e\u3044\u3002\n\n## \u307e\u3068\u3081\n\n[2][2016-12-02] \u3067\u6b8b\u3057\u3066\u3044\u305f `psci` \u306e\u30b3\u30de\u30f3\u30c9\u3092\u305f\u3081\u3057\u305f\u306e\u3068 [Getting Started with PureScript][getting-started] \u3092\u7247\u4ed8\u3051\u305f\u3002\n\n\u3082\u3063\u3068\u57fa\u672c\u7684\u306a\u8a00\u8a9e\u4ed5\u69d8\u3084\u30d1\u30c3\u30b1\u30fc\u30b8\u306a\u3069\u3092\u77e5\u3089\u306a\u3044\u3068\u66f8\u3051\u306a\u3055\u305d\u3046\u3060\u3002\n\n## \u53c2\u8003\n\n- [PureScript][purescript]\n- [Getting Started with PureScript][getting-started]\n- [Language Guide][language-guide]\n- [Language Guide - Importing Modules][language-guide-importing-modules]\n- [Language Guide - Module Exports][language-guide-module-exports]\n\n## \u6b21\u56de\u4ee5\u964d\u306e TODO\n\n- `psc-package` \u3092\u8a66\u3059\n- [PureScript Language Guide][language-guide] \u3092\u8aad\u3080\n- [PureScript by Example][purescript-by-example] \u3092\u8aad\u3080\n- [24 Days of PureScript, 2016][paf31/24-days-of-purescript-2016] \u3092\u8aad\u3080\n- [24 Days of PureScript, 2014](https://gist.github.com/paf31/8e9177b20ee920480fbc) \u3092\u8aad\u3080\n- \u67d0\u6c0f\u306e\u8a18\u4e8b\u3092\u7d39\u4ecb\u3059\u308b\n\n[2016-12-01]: http://qiita.com/bouzuya/items/a5be85ec3e496e5bf436\n[2016-12-02]: http://qiita.com/bouzuya/items/806335ea74ead0e33d95\n[2016-12-03]: http://qiita.com/bouzuya/items/86cc9aaaddcc1aa790cf\n[2016-12-04]: http://qiita.com/bouzuya/items/b2b80c22c50d0c1e739c\n[2016-12-05]: http://qiita.com/bouzuya/items/f19ee0b86e9aec3f0afa\n[bodil/pulp]: https://github.com/bodil/pulp/tree/v10.0.0\n[getting-started]: http://www.purescript.org/learn/getting-started/\n[language-guide-importing-modules]: https://github.com/purescript/purescript/wiki/Language-Guide#importing-modules\n[language-guide-module-exports]: https://github.com/purescript/purescript/wiki/Language-Guide#module-exports\n[language-guide]: https://github.com/purescript/purescript/wiki/Language-Guide\n[paf31/24-days-of-purescript-2016]: https://github.com/paf31/24-days-of-purescript-2016\n[pulp-init]: https://github.com/bodil/pulp/blob/v10.0.0/src/Pulp/Init.purs#L97-L98\n[purescript-advent-calendar]: http://www.adventar.org/calendars/1494\n[purescript-by-example]: https://leanpub.com/purescript/read\n[purescript]: http://www.purescript.org/\n[pursuit-purescript-lists]: https://pursuit.purescript.org/packages/purescript-lists/3.2.1\n"}