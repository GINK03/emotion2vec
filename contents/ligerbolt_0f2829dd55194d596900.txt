{"context": "Neocomplete.vim\u3067python\u30b3\u30fc\u30c9\u4f5c\u6210\u6642\u306b\u3082omni\u88dc\u5b8c\u304c\u9069\u7528\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306a\u3042\u3068\u3002\n\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u3068\u3057\u3066\u306fjedi.vim\u3092\u7528\u3044\u308b\u3068\u3044\u3046\u624b\u304c\u3042\u308a\u666e\u6bb5\u306f\u81ea\u5206\u3082\u611b\u7528\u3057\u3066\u307e\u3059\u304c\u3001\n\u8af8\u4e8b\u60c5\u306b\u3088\u308a\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u53c2\u7167\u3057\u3066\u88dc\u5b8c\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u8f9e\u66f8\u4f5c\u6210\u65b9\u6cd5\ndocs.python.jp\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3001\n\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u9805\u76ee\uff08\u95a2\u6570\u3001\u30af\u30e9\u30b9\u3001\u7528\u8a9e\uff09\u3092\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u9805\u76ee\u3068\u3057\u307e\u3057\u305f\u3002\n\u8a00\u8a9e\u306fRuby\u3001\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306b\u306fNokogiri\u3092\u4f7f\u7528\u3057\u3001\u82e5\u5e72\u529b\u6280\u306a\u90e8\u5206\u3082\u5165\u3063\u3066\u307e\u3059\u3002\n\n\u8f9e\u66f8\u4f5c\u6210\u30b3\u30fc\u30c9\n\nmake_python_dicts.rb\nrequire 'nokogiri'\nrequire 'open-uri'\nrequire 'net/http'\n\n#\u3000\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e\u30c1\u30a7\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\nclass String\n  def has_multibytes?\n    self.bytes do |byte|\n      return true if (byte & 0b10000000) != 0\n    end\n    false\n  end\nend\n\n#\u3000\u5f15\u6570\u30c1\u30a7\u30c3\u30af\uff08\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\uff09\nif ARGV.size == 1\n  versions = \"2.7\"\n  DICT_NAME = ARGV[0].to_s\nelsif ARGV.size == 2\n  DICT_NAME = ARGV[0].to_s\n  versions = ARGV[1].to_s\nelse\n  puts \"Argument error\"\n  exit\nend\n\n#\u3000\u7d22\u5f15\u30da\u30fc\u30b8\u306eURL\u751f\u6210\nBASE_URL = \"http://docs.python.jp/\" + versions + '/'.freeze\nINDEX_URL = BASE_URL + 'genindex.html'.freeze\n\n#\u3000\u6307\u5b9a\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\nres = Net::HTTP.get_response(URI.parse(INDEX_URL))\nif res.code != '200'\n  puts \"status error : \" + res.code.to_s\n  exit\nend\n\n#\u3000\u7d22\u5f15\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u53d6\u5f97\nindex = Nokogiri::HTML(open(INDEX_URL))\nlink_tags = index.xpath('//div[@class=\"genindex-jumpbox\"]')\n\n#\u3000A~Z\u307e\u3067\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u3088\u308a\u7d22\u5f15\u9805\u76ee\u62bd\u51fa\uff08\u65e5\u672c\u8a9e\u9805\u76ee\uff06\u88dc\u52a9\u9805\u76ee\u306f\u9664\u5916\uff09\nitems = []\nlink_tags.search('//p[position()=1]//a').each do |tag|\n  urls = URI.escape(BASE_URL + tag[:href])\n  doc = Nokogiri::HTML(open(urls))\n  doc.search('.//table[@class=\"indextable\"]//a[position()=1]').each do |item|\n      item = item.text.split[0]\n      unless item.match(/^[-.:(]|,$/) || item.has_multibytes?\n        items << item\n      end\n  end\nend\n\n#\u3000\u53d6\u5f97\u3057\u305f\u5168\u9805\u76ee\u304b\u3089\u91cd\u8907\u5206\u3092\u7701\u304d\u30bd\u30fc\u30c8\u5f8c\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u66f8\u304d\u51fa\u3057\nFile.open(DICT_NAME, 'w') do |f|\n  items.uniq!.sort!\n  items.each { |item| f.puts(item) }\nend\n\n\n\n\u5b9f\u884c\u65b9\u6cd5\n\u7b2c\u4e00\u5f15\u6570\u3067\u51fa\u529b\u3059\u308b\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u540d\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u4f5c\u6210\u3057\u305f\u3044python\u306eversion\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u306a\u304a\u7b2c\u4e8c\u5f15\u6570\u306f\u7701\u7565\u3057\u305f\u5834\u5408\u306fversion2.7\u306e\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\uff082016/6\u6708\u73fe\u5728\u306f\u7d22\u5f15\u30da\u30fc\u30b8\u304c\u5b58\u5728\u3059\u308b2.7\u30683.5\u306eversion\u304c\u6307\u5b9a\u3067\u304d\u308b\uff09\n# \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u6307\u5b9a\n$ ruby make_python_dict.rb python.dict\n\n# \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u3068version\u6307\u5b9a\uff08ver 3.5\uff09\n$ ruby make_python_dict.rb python.dict\u30003.5\n\n\n\u4e0a\u8a18\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u305fNeocomplete.vim\u306b\u3088\u308b\u88dc\u5b8c\u8a2d\u5b9a\u4f8b\n.vimrc\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\u4f5c\u6210\u3057\u305f\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3084\u308c\u3070OK\u3067\u3059\u3002\n\"\u88dc\u5b8c\u5019\u88dc\u8868\u793a\u30d1\u30bf\u30fc\u30f3\u8a2d\u5b9a\nlet g:neocomplete#force_omni_input_patterns.python = '[^. \\t]\\.\\w*'\n\n\" \u8f9e\u66f8\u53c2\u7167\u8a2d\u5b9a\nlet g:neocomplete#sources#dictionary#dictionaries = {\n \\   'python': $HOME . '/dicts/python.dict',\n \\ }\n\n\n\u88dc\u8db3\uff06\u53c2\u7167\u30b5\u30a4\u30c8\n\u529b\u6280\uff06\u304a\u304a\u307e\u304b\u306b\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u306b\u4e0d\u5099\u7b49\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u307e\u305fver2.7\u3068ver3.5\u306e\u5404\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092github\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u3082\u3057\u4f7f\u3044\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3046\u305e\u3002\n\nneocomplete\u7528\u306bRuby\u306e\u8f9e\u66f8\u3092\u4f5c\u3063\u305f(\u308b\u308a\u307e\u7de8)\nneocomplete.vim\u306b\u79fb\u884c\u3057\u305f\u3064\u3044\u3067\u306bruby.dict\u3092\u4f5c\u3063\u3066\u307f\u305f\n\n[Neocomplete.vim](https://github.com/Shougo/neocomplete.vim)\u3067python\u30b3\u30fc\u30c9\u4f5c\u6210\u6642\u306b\u3082omni\u88dc\u5b8c\u304c\u9069\u7528\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u306a\u3042\u3068\u3002\n\u624b\u3063\u53d6\u308a\u65e9\u3044\u65b9\u6cd5\u3068\u3057\u3066\u306f[jedi.vim](https://github.com/davidhalter/jedi-vim)\u3092\u7528\u3044\u308b\u3068\u3044\u3046\u624b\u304c\u3042\u308a\u666e\u6bb5\u306f\u81ea\u5206\u3082\u611b\u7528\u3057\u3066\u307e\u3059\u304c\u3001\n\u8af8\u4e8b\u60c5\u306b\u3088\u308a\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3001\u305d\u308c\u3092\u53c2\u7167\u3057\u3066\u88dc\u5b8c\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n#\u8f9e\u66f8\u4f5c\u6210\u65b9\u6cd5\n[docs.python.jp](http://docs.python.jp/)\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3057\u3001\n\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u9805\u76ee\uff08\u95a2\u6570\u3001\u30af\u30e9\u30b9\u3001\u7528\u8a9e\uff09\u3092\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u9805\u76ee\u3068\u3057\u307e\u3057\u305f\u3002\n\u8a00\u8a9e\u306fRuby\u3001\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306b\u306fNokogiri\u3092\u4f7f\u7528\u3057\u3001\u82e5\u5e72\u529b\u6280\u306a\u90e8\u5206\u3082\u5165\u3063\u3066\u307e\u3059\u3002\n##\u8f9e\u66f8\u4f5c\u6210\u30b3\u30fc\u30c9\n\n```ruby:make_python_dicts.rb\nrequire 'nokogiri'\nrequire 'open-uri'\nrequire 'net/http'\n\n#\u3000\u30de\u30eb\u30c1\u30d0\u30a4\u30c8\u6587\u5b57\u306e\u30c1\u30a7\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u8ffd\u52a0\nclass String\n  def has_multibytes?\n    self.bytes do |byte|\n      return true if (byte & 0b10000000) != 0\n    end\n    false\n  end\nend\n\n#\u3000\u5f15\u6570\u30c1\u30a7\u30c3\u30af\uff08\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u53d6\u5f97\uff09\nif ARGV.size == 1\n  versions = \"2.7\"\n  DICT_NAME = ARGV[0].to_s\nelsif ARGV.size == 2\n  DICT_NAME = ARGV[0].to_s\n  versions = ARGV[1].to_s\nelse\n  puts \"Argument error\"\n  exit\nend\n\n#\u3000\u7d22\u5f15\u30da\u30fc\u30b8\u306eURL\u751f\u6210\nBASE_URL = \"http://docs.python.jp/\" + versions + '/'.freeze\nINDEX_URL = BASE_URL + 'genindex.html'.freeze\n\n#\u3000\u6307\u5b9a\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u304c\u5b58\u5728\u3059\u308b\u304b\u78ba\u8a8d\nres = Net::HTTP.get_response(URI.parse(INDEX_URL))\nif res.code != '200'\n  puts \"status error : \" + res.code.to_s\n  exit\nend\n\n#\u3000\u7d22\u5f15\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u53d6\u5f97\nindex = Nokogiri::HTML(open(INDEX_URL))\nlink_tags = index.xpath('//div[@class=\"genindex-jumpbox\"]')\n\n#\u3000A~Z\u307e\u3067\u306e\u7d22\u5f15\u30da\u30fc\u30b8\u3088\u308a\u7d22\u5f15\u9805\u76ee\u62bd\u51fa\uff08\u65e5\u672c\u8a9e\u9805\u76ee\uff06\u88dc\u52a9\u9805\u76ee\u306f\u9664\u5916\uff09\nitems = []\nlink_tags.search('//p[position()=1]//a').each do |tag|\n  urls = URI.escape(BASE_URL + tag[:href])\n  doc = Nokogiri::HTML(open(urls))\n  doc.search('.//table[@class=\"indextable\"]//a[position()=1]').each do |item|\n      item = item.text.split[0]\n      unless item.match(/^[-.:(]|,$/) || item.has_multibytes?\n        items << item\n      end\n  end\nend\n\n#\u3000\u53d6\u5f97\u3057\u305f\u5168\u9805\u76ee\u304b\u3089\u91cd\u8907\u5206\u3092\u7701\u304d\u30bd\u30fc\u30c8\u5f8c\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u66f8\u304d\u51fa\u3057\nFile.open(DICT_NAME, 'w') do |f|\n  items.uniq!.sort!\n  items.each { |item| f.puts(item) }\nend\n```\n\n##\u5b9f\u884c\u65b9\u6cd5\n\u7b2c\u4e00\u5f15\u6570\u3067\u51fa\u529b\u3059\u308b\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u540d\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u4f5c\u6210\u3057\u305f\u3044python\u306eversion\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u306a\u304a\u7b2c\u4e8c\u5f15\u6570\u306f\u7701\u7565\u3057\u305f\u5834\u5408\u306fversion2.7\u306e\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\uff082016/6\u6708\u73fe\u5728\u306f\u7d22\u5f15\u30da\u30fc\u30b8\u304c\u5b58\u5728\u3059\u308b2.7\u30683.5\u306eversion\u304c\u6307\u5b9a\u3067\u304d\u308b\uff09\n\n```\n# \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f\u6307\u5b9a\n$ ruby make_python_dict.rb python.dict\n\n# \u51fa\u529b\u30d5\u30a1\u30a4\u30eb\u3068version\u6307\u5b9a\uff08ver 3.5\uff09\n$ ruby make_python_dict.rb python.dict\u30003.5\n```\n\n#\u4e0a\u8a18\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u3044\u305fNeocomplete.vim\u306b\u3088\u308b\u88dc\u5b8c\u8a2d\u5b9a\u4f8b\n.vimrc\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3001\u4f5c\u6210\u3057\u305f\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3084\u308c\u3070OK\u3067\u3059\u3002\n\n```\n\"\u88dc\u5b8c\u5019\u88dc\u8868\u793a\u30d1\u30bf\u30fc\u30f3\u8a2d\u5b9a\nlet g:neocomplete#force_omni_input_patterns.python = '[^. \\t]\\.\\w*'\n\n\" \u8f9e\u66f8\u53c2\u7167\u8a2d\u5b9a\nlet g:neocomplete#sources#dictionary#dictionaries = {\n \\   'python': $HOME . '/dicts/python.dict',\n \\ }\n```\n\n#\u88dc\u8db3\uff06\u53c2\u7167\u30b5\u30a4\u30c8\n\u529b\u6280\uff06\u304a\u304a\u307e\u304b\u306b\u30c1\u30a7\u30c3\u30af\u3057\u305f\u3060\u3051\u306a\u306e\u3067\u3001\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u306b\u4e0d\u5099\u7b49\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u307e\u305f[ver2.7](https://github.com/ligerbolt/dicts/blob/master/python_ver2.7.dict)\u3068[ver3.5](https://github.com/ligerbolt/dicts/blob/master/python_ver3.5.dict)\u306e\u5404\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092github\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u3082\u3057\u4f7f\u3044\u305f\u3044\u5834\u5408\u306b\u306f\u3069\u3046\u305e\u3002\n\n+ [neocomplete\u7528\u306bRuby\u306e\u8f9e\u66f8\u3092\u4f5c\u3063\u305f(\u308b\u308a\u307e\u7de8)](http://pocke.hatenablog.com/entry/2014/08/10/104054)\n+ [neocomplete.vim\u306b\u79fb\u884c\u3057\u305f\u3064\u3044\u3067\u306bruby.dict\u3092\u4f5c\u3063\u3066\u307f\u305f](http://henry.animeo.jp/blog/2013/08/24/ruby-dict/)\n", "tags": ["Vim", "Python", "neocomplete", "\u8f9e\u66f8", "\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0"]}