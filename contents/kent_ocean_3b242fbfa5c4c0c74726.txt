{"context": "\u4eca\u56de\u306f\u3001AWS EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u304b\u3089\u3001GoLang\u3001Gin (Go\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af)\u3001MongoDB\u3001mgo (MongoDB\u3092\u64cd\u4f5c\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea) \u3092\u5165\u308c\u3066\u3001API\u30b5\u30fc\u30d0\u3092\u5373\u5e2d\u3067\u69cb\u7bc9\u3059\u308b\u624b\u9806\u3092\u6574\u7406\u3057\u307e\u3057\u305f\u3002\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4eca\u56de\u306e\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002\n\n\n\n\nVersion\n\n\n\n\nOS\nAmazon Linux AMI 2016.03.1 (ami-f80e0596)\n\n\nGo\n1.5.3\n\n\nMongoDB\n3.2.6\n\n\n\n\nAWS EC2 \u3067 Amazon Linux\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n\u4f7f\u7528AMI: Amazon Linux AMI 2016.03.1 (HVM), SSD Volume Type - ami-29160d47\n\nyum\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\nsudo yum update\n\n\nGoLang \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum install golang\n\n\nGOPATH\u306e\u8a2d\u5b9a\nsudo vim ~/.bash_profile\n\n\n~/.bash_profile\n#configuration of golang\nexport GOPATH=$HOME/.go\nexport PATH=$HOME/.go/bin:$PATH\n\n\n\n\u8a2d\u5b9a\u3092\u53cd\u6620\nsource ~/.bash_profile\n\n\nGoLang \u306e \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\ngo version\ngo version go1.5.3 linux/amd64\n\n\nGin \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngo get github.com/gin-gonic/gin\n\nGOPATH \u306e\u8a2d\u5b9a\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\n\u4e0a\u8a18\u624b\u9806\u306e\u901a\u308a\u306b\u9032\u3081\u305f\u5834\u5408\u3001GOPATH \u306f /home/ec2-user/.go/ \u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u306e\u3067\u3001\n\u3053\u306e\u4e0b\u306e /src/github.com/ \u306b gin-tonic \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070OK\u3067\u3059\u3002\ncd /home/ec2-user/.go/src/github.com\nll\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u307e\u305a\u306f\u3053\u306e Gin \u306e\u516c\u5f0f\u2193\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nhttps://github.com/gin-gonic/gin#gin-web-framework\ncd /home/ec2-user/.go/src\nsudo mkdir test-project\nsudo vim /home/ec2-user/.go/src/test-project/index.go\n\n\nindex.go\npackage main\n\nimport \"github.com/gin-gonic/gin\"\n\nfunc main() {\n    router := gin.Default()\n    router.GET(\"/ping\", func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            \"message\": \"pong\",\n        })\n    })\n    router.Run() // listen and server on 0.0.0.0:8080\n}\n\n\ncd /home/ec2-user/.go/src/test-project\ngo run index.go\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n(\u203bAWS\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30a4\u30f3\u30d0\u30a6\u30f3\u30c9\u306b 8080 \u3092\u8ffd\u52a0\u3059\u308b\u306e\u3092\u304a\u5fd8\u308c\u306a\u304f)\nhttp://(IP\u30a2\u30c9\u30ec\u30b9):8080/ping\n{\"message\":\"pong\"}\n\n\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\nMongoDB \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nMongoDB\u516c\u5f0f\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u3092\u53c2\u8003\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\nhttps://docs.mongodb.com/manual/tutorial/install-mongodb-on-amazon/\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306bMongoDB\u3092\u8ffd\u52a0\n\nsudo vim /etc/yum.repos.d/mongodb-org-3.2.repo\n\n\nmongodb-org-3.2.repo\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n\n\nsudo yum install mongodb-org\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\nmongo --version\nMongoDB shell version: 3.2.6\n\n\n\u8d77\u52d5\nsudo service mongod start\n\n\n\u81ea\u52d5\u8d77\u52d5\u306e\u8a2d\u5b9a\nsudo chkconfig mongod on\n\n\nmgo \u3092\u5165\u308c\u308b\nGoLang \u3067 mongodb \u3092\u4f7f\u3048\u308b mgo \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u307e\u3059\u3002\nhttps://labix.org/mgo\ngo get gopkg.in/mgo.v2\n\n\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5c11\u3057\u3060\u3051\u6539\u5909\u3057\u3066\u3001\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f index.go \u30d5\u30a1\u30a4\u30eb\u306b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\ncd /home/ec2-user/.go/src/test-project\nsudo vim index.go\n\n\nindex.go\npackage main\n\nimport (\n    \"github.com/gin-gonic/gin\"\n    mgo \"gopkg.in/mgo.v2\"\n    \"gopkg.in/mgo.v2/bson\"\n)\n\ntype Castle struct {\n        Name string\n        Address string\n        Description string\n}\n\nfunc main() {\n        session, err := mgo.Dial(\"localhost\")\n        if err != nil {\n                panic(err)\n        }\n        defer session.Close()\n\n        // Optional. Switch the session to a monotonic behavior.\n        session.SetMode(mgo.Monotonic, true)\n\n        //\u30c7\u30fc\u30bf\u3092\u767b\u9332\n        c := session.DB(\"test\").C(\"castle\")\n        err = c.Insert(&Castle{\"\u59eb\u8def\u57ce\", \"\u5175\u5eab\u770c\", \"\u65e5\u672c\u521d\u306e\u4e16\u754c\u6587\u5316\u907a\u7523\u3002 \u300c\u767d\u9dfa\u57ce\u300d\u306e\u611b\u79f0\u3067\u89aa\u3057\u307e\u308c\u308b\u7f8e\u3057\u3044\u57ce\u3002\"},\n                   &Castle{\"\u5927\u962a\u57ce\", \"\u5927\u962a\u5e9c\", \"\u8c4a\u81e3\u79c0\u5409\u304c\u7bc9\u57ce\u3002\u8c4a\u81e3\u6c0f\u6ec5\u4ea1\u5f8c\u306f\u5fb3\u5ddd\u5e55\u5e9c\u306b\u3088\u3063\u3066\u518d\u5efa\u3055\u308c\u305f\u3002\"},\n                   &Castle{\"\u9db4\u30f6\u57ce\", \"\u798f\u5cf6\u770c\", \"\u620a\u8fb0\u306e\u6226\u5f79\u306b\u304a\u3044\u3066\u65b0\u653f\u5e9c\u8ecd\u306e\u731b\u653b\u306b\u3082\u843d\u3061\u306a\u304b\u3063\u305f\u96e3\u653b\u4e0d\u843d\u306e\u540d\u57ce\u3002\"},\n                   &Castle{\"\u6708\u5c71\u5bcc\u7530\u57ce\", \"\u5cf6\u6839\u770c\", \"\u5c71\u9670\u30fb\u5c71\u967d\u5341\u4e00\u5dde\u3092\u624b\u4e2d\u306b\u53ce\u3081\u305f\u5c3c\u5b50\u6c0f\u304c\u672c\u57ce\u3068\u3057\u5c71\u9670\u30fb\u5c71\u967d\u5236\u8987\u306e\u62e0\u70b9\u3068\u3057\u305f\u57ce\u3002\"})\n        if err != nil {\n                panic(err)\n        }\n\n        //\u30c7\u30fc\u30bf\u3092\u524a\u9664\n        _, err = c.RemoveAll(bson.M{\"name\": \"\u59eb\u8def\u57ce\"})\n\n        //\u30c7\u30fc\u30bf\u3092\u691c\u7d22\n        result := Castle{}\n        err = c.Find(bson.M{\"name\": \"\u5927\u962a\u57ce\"}).One(&result)\n        if err != nil {\n                panic(err)\n        }\n        //\u30d2\u30c3\u30c8\u3057\u305f1\u4ef6\u3092\u51fa\u529b\n        router := gin.Default()\n        router.GET(\"/index\", func(c *gin.Context) {\n            c.JSON(200, gin.H{\n            \"\u8aac\u660e\": result.Description,\n            })\n        })\n\n        router.Run()\n}\n\n\n\n\u5b9f\u884c\ngo run index.go\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\nhttp://(IP\u30a2\u30c9\u30ec\u30b9):8080/index\n{\"\u8aac\u660e\":\"\u8c4a\u81e3\u79c0\u5409\u304c\u7bc9\u57ce\u3002\u8c4a\u81e3\u6c0f\u6ec5\u4ea1\u5f8c\u306f\u5fb3\u5ddd\u5e55\u5e9c\u306b\u3088\u3063\u3066\u518d\u5efa\u3055\u308c\u305f\u3002\"}\n\u3068\u51fa\u529b\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u3066\u304a\u304f\n\u4f5c\u6210\u3057\u305f go \u306e\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3057\u3066\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\ncd /home/ec2-user/.go/src/test-project\ngo build index.go\n\n\u30d3\u30eb\u30c9\u6642\u306b\u3001\u3082\u3057\u2193\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\ngo install command-line-arguments: open index: permission denied\n\u304c\u51fa\u308b\u5834\u5408\u306f\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u304b\u3089\u518d\u5ea6 go build \u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nsudo chmod -R 777 /home/ec2-user/.go/src/test-project\n\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\n\u3067\u3001GoLang\u306b\u9650\u3089\u305a\u4e00\u822c\u7684\u306a\u8a71\u3067\u3059\u304c\u3001\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u30c4\u30fc\u30eb (TeraTerm \u3068\u304b) \u3067EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068\u3001\u63a5\u7d9a\u304c\u5207\u308c\u305f\u3089\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3001nohup \u3092\u4f7f\u3044\u3001\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u3092\u5207\u3063\u3066\u3082\u6b62\u307e\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nnohup go run index.go &\n\n\u3053\u308c\u3067\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u30c4\u30fc\u30eb\u3092\u9589\u3058\u3066\u3082 go \u306e\u30b3\u30fc\u30c9\u306f\u52d5\u304d\u7d9a\u3051\u307e\u3059\u3002\n\u52d5\u3044\u3066\u3044\u308b go \u306e\u30b3\u30fc\u30c9\u3092\u505c\u6b62\u3055\u305b\u308b\u3068\u304d\u306f kill \u3092\u4f7f\u3044\u307e\u3059\u3002\nps aux \u3067\u3069\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3092\u78ba\u8a8d\u3057\u3001\u305d\u306ePID\u3092 kill \u3057\u307e\u3057\u3087\u3046\u3002\nps aux\nkill (\u8a72\u5f53\u306ePID)\n\n\n\u30c7\u30fc\u30bf\u5168\u4ef6\u3092\u51fa\u529b\u3059\u308b\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u306f\u691c\u7d22\u7d50\u679c\u3092\uff11\u4ef6\u3060\u3051\u8fd4\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u5168\u4ef6\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\nindex.go(\u4fee\u6b63\u524d)\n//\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nresult := Castle{}\nerr = c.Find(bson.M{\"name\": \"\u5927\u962a\u57ce\"}).One(&result)\n    if err != nil {\n        panic(err)\n    }\n//\u30d2\u30c3\u30c8\u3057\u305f1\u4ef6\u3092\u51fa\u529b\nrouter := gin.Default()\nrouter.GET(\"/index\", func(c *gin.Context) {\n    c.JSON(200, gin.H{\n        \"\u8aac\u660e\": result.Description,\n    })\n})\n\n\n\nindex.go(\u4fee\u6b63\u5f8c)\n//\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nvar results []Castle\nerr =c.Find(bson.M{}).All(&results)\nif err != nil {\n    panic(err)\n}\n\n//\u5168\u4ef6\u51fa\u529b\nrouter := gin.Default()\nrouter.GET(\"/index\", func(c *gin.Context) {\n    c.JSON(200, results)\n})\n\n\n\n\u3053\u306e\u6b21\u306b\u3084\u308a\u305f\u3044\u3053\u3068\n8080\u756a\u30dd\u30fc\u30c8\u3067\u53d7\u3051\u308b\u306e\u304c\u306a\u3093\u3068\u306a\u304f\u5acc\u306a\u306e\u3067 80\u756a\u30dd\u30fc\u30c8\u3067 Listen \u3055\u305b\u305f\u3044\u3093\u3067\u3059\u304c\u3001\u8abf\u3079\u3066\u307f\u308b\u3068 root \u6a29\u9650\u3067\u5b9f\u884c\u3059\u308b\u3068\u304b Nginx\u3092\u4f7f\u3046\u3068\u304b\u65b9\u6cd5\u304c\u3044\u308d\u3044\u308d\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u307e\u305f\u8a66\u884c\u932f\u8aa4\u3057\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u3054\u53c2\u8003: \nhttp://qiita.com/sfujiwara/items/b312fbdd2660e43b6717\nhttp://matope.hatenablog.com/entry/2014/09/28/031155\n\u4eca\u56de\u306f\u3001AWS EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u7acb\u3061\u4e0a\u3052\u304b\u3089\u3001GoLang\u3001Gin (Go\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af)\u3001MongoDB\u3001mgo (MongoDB\u3092\u64cd\u4f5c\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea) \u3092\u5165\u308c\u3066\u3001API\u30b5\u30fc\u30d0\u3092\u5373\u5e2d\u3067\u69cb\u7bc9\u3059\u308b\u624b\u9806\u3092\u6574\u7406\u3057\u307e\u3057\u305f\u3002\n\n#\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4eca\u56de\u306e\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u69cb\u7bc9\u3057\u307e\u3057\u305f\u3002\n\n|      | Version | \n|:-----------|:------------|\n| OS       | Amazon Linux AMI 2016.03.1 (ami-f80e0596) |\n| Go     |      1.5.3 |\n| MongoDB     | 3.2.6      |\n\n### AWS EC2 \u3067 Amazon Linux\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n\u4f7f\u7528AMI: Amazon Linux AMI 2016.03.1 (HVM), SSD Volume Type - ami-29160d47\n\n### yum\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\n\n```\nsudo yum update\n```\n\n#GoLang \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\nsudo yum install golang\n```\n\n\n###GOPATH\u306e\u8a2d\u5b9a\n```\nsudo vim ~/.bash_profile\n```\n```~/.bash_profile\n#configuration of golang\nexport GOPATH=$HOME/.go\nexport PATH=$HOME/.go/bin:$PATH\n ```\n\n###\u8a2d\u5b9a\u3092\u53cd\u6620\n```\nsource ~/.bash_profile\n```\n\n### GoLang \u306e \u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\n\n```\ngo version\ngo version go1.5.3 linux/amd64\n```\n\n#Gin \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\ngo get github.com/gin-gonic/gin\n```\nGOPATH \u306e\u8a2d\u5b9a\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\n\n\u4e0a\u8a18\u624b\u9806\u306e\u901a\u308a\u306b\u9032\u3081\u305f\u5834\u5408\u3001GOPATH \u306f /home/ec2-user/.go/ \u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u306e\u3067\u3001\n\u3053\u306e\u4e0b\u306e /src/github.com/ \u306b gin-tonic \u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u4f5c\u6210\u3055\u308c\u3066\u3044\u308c\u3070OK\u3067\u3059\u3002\n\n```\ncd /home/ec2-user/.go/src/github.com\nll\n```\n\n#\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\n\u307e\u305a\u306f\u3053\u306e Gin \u306e\u516c\u5f0f\u2193\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nhttps://github.com/gin-gonic/gin#gin-web-framework\n\n```\ncd /home/ec2-user/.go/src\nsudo mkdir test-project\nsudo vim /home/ec2-user/.go/src/test-project/index.go\n```\n\n```index.go\npackage main\n\nimport \"github.com/gin-gonic/gin\"\n\nfunc main() {\n    router := gin.Default()\n    router.GET(\"/ping\", func(c *gin.Context) {\n        c.JSON(200, gin.H{\n            \"message\": \"pong\",\n        })\n    })\n    router.Run() // listen and server on 0.0.0.0:8080\n}\n```\n\n```\ncd /home/ec2-user/.go/src/test-project\ngo run index.go\n```\n\n###\u52d5\u4f5c\u78ba\u8a8d\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n(\u203bAWS\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u30a4\u30f3\u30d0\u30a6\u30f3\u30c9\u306b 8080 \u3092\u8ffd\u52a0\u3059\u308b\u306e\u3092\u304a\u5fd8\u308c\u306a\u304f)\n\n`http://(IP\u30a2\u30c9\u30ec\u30b9):8080/ping`\n\n```\n{\"message\":\"pong\"}\n```\n\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n#MongoDB \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMongoDB\u516c\u5f0f\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u3092\u53c2\u8003\u306b\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\nhttps://docs.mongodb.com/manual/tutorial/install-mongodb-on-amazon/\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u306bMongoDB\u3092\u8ffd\u52a0\n```\nsudo vim /etc/yum.repos.d/mongodb-org-3.2.repo\n```\n\n```mongodb-org-3.2.repo\n[mongodb-org-3.2]\nname=MongoDB Repository\nbaseurl=https://repo.mongodb.org/yum/amazon/2013.03/mongodb-org/3.2/x86_64/\ngpgcheck=1\nenabled=1\ngpgkey=https://www.mongodb.org/static/pgp/server-3.2.asc\n```\n\n```\nsudo yum install mongodb-org\n```\n\n###\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\n\n```\nmongo --version\nMongoDB shell version: 3.2.6\n```\n\n###\u8d77\u52d5\n```\nsudo service mongod start\n```\n\n###\u81ea\u52d5\u8d77\u52d5\u306e\u8a2d\u5b9a\n```\nsudo chkconfig mongod on\n```\n\n###mgo \u3092\u5165\u308c\u308b\n\nGoLang \u3067 mongodb \u3092\u4f7f\u3048\u308b mgo \u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5165\u308c\u307e\u3059\u3002\nhttps://labix.org/mgo\n\n```\ngo get gopkg.in/mgo.v2\n```\n\n\n\u516c\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u5c11\u3057\u3060\u3051\u6539\u5909\u3057\u3066\u3001\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f index.go \u30d5\u30a1\u30a4\u30eb\u306b\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n```\ncd /home/ec2-user/.go/src/test-project\nsudo vim index.go\n```\n\n```index.go\npackage main\n \nimport (\n    \"github.com/gin-gonic/gin\"\n    mgo \"gopkg.in/mgo.v2\"\n    \"gopkg.in/mgo.v2/bson\"\n)\n\ntype Castle struct {\n        Name string\n        Address string\n        Description string\n}\n\nfunc main() {\n        session, err := mgo.Dial(\"localhost\")\n        if err != nil {\n                panic(err)\n        }\n        defer session.Close()\n\n        // Optional. Switch the session to a monotonic behavior.\n        session.SetMode(mgo.Monotonic, true)\n\n        //\u30c7\u30fc\u30bf\u3092\u767b\u9332\n        c := session.DB(\"test\").C(\"castle\")\n        err = c.Insert(&Castle{\"\u59eb\u8def\u57ce\", \"\u5175\u5eab\u770c\", \"\u65e5\u672c\u521d\u306e\u4e16\u754c\u6587\u5316\u907a\u7523\u3002 \u300c\u767d\u9dfa\u57ce\u300d\u306e\u611b\u79f0\u3067\u89aa\u3057\u307e\u308c\u308b\u7f8e\u3057\u3044\u57ce\u3002\"},\n                   &Castle{\"\u5927\u962a\u57ce\", \"\u5927\u962a\u5e9c\", \"\u8c4a\u81e3\u79c0\u5409\u304c\u7bc9\u57ce\u3002\u8c4a\u81e3\u6c0f\u6ec5\u4ea1\u5f8c\u306f\u5fb3\u5ddd\u5e55\u5e9c\u306b\u3088\u3063\u3066\u518d\u5efa\u3055\u308c\u305f\u3002\"},\n                   &Castle{\"\u9db4\u30f6\u57ce\", \"\u798f\u5cf6\u770c\", \"\u620a\u8fb0\u306e\u6226\u5f79\u306b\u304a\u3044\u3066\u65b0\u653f\u5e9c\u8ecd\u306e\u731b\u653b\u306b\u3082\u843d\u3061\u306a\u304b\u3063\u305f\u96e3\u653b\u4e0d\u843d\u306e\u540d\u57ce\u3002\"},\n                   &Castle{\"\u6708\u5c71\u5bcc\u7530\u57ce\", \"\u5cf6\u6839\u770c\", \"\u5c71\u9670\u30fb\u5c71\u967d\u5341\u4e00\u5dde\u3092\u624b\u4e2d\u306b\u53ce\u3081\u305f\u5c3c\u5b50\u6c0f\u304c\u672c\u57ce\u3068\u3057\u5c71\u9670\u30fb\u5c71\u967d\u5236\u8987\u306e\u62e0\u70b9\u3068\u3057\u305f\u57ce\u3002\"})\n        if err != nil {\n                panic(err)\n        }\n\n        //\u30c7\u30fc\u30bf\u3092\u524a\u9664\n        _, err = c.RemoveAll(bson.M{\"name\": \"\u59eb\u8def\u57ce\"})\n\n        //\u30c7\u30fc\u30bf\u3092\u691c\u7d22\n        result := Castle{}\n        err = c.Find(bson.M{\"name\": \"\u5927\u962a\u57ce\"}).One(&result)\n        if err != nil {\n                panic(err)\n        }\n        //\u30d2\u30c3\u30c8\u3057\u305f1\u4ef6\u3092\u51fa\u529b\n        router := gin.Default()\n        router.GET(\"/index\", func(c *gin.Context) {\n            c.JSON(200, gin.H{\n            \"\u8aac\u660e\": result.Description,\n            })\n        })\n\n        router.Run()\n}\n```\n\n###\u5b9f\u884c\n\n```\ngo run index.go\n```\n\n###\u52d5\u4f5c\u78ba\u8a8d\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\n\n`http://(IP\u30a2\u30c9\u30ec\u30b9):8080/index`\n\n\n`{\"\u8aac\u660e\":\"\u8c4a\u81e3\u79c0\u5409\u304c\u7bc9\u57ce\u3002\u8c4a\u81e3\u6c0f\u6ec5\u4ea1\u5f8c\u306f\u5fb3\u5ddd\u5e55\u5e9c\u306b\u3088\u3063\u3066\u518d\u5efa\u3055\u308c\u305f\u3002\"}`\n\u3068\u51fa\u529b\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n#\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u3066\u304a\u304f\n\n\u4f5c\u6210\u3057\u305f go \u306e\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3057\u3066\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n```\ncd /home/ec2-user/.go/src/test-project\ngo build index.go\n```\n\u30d3\u30eb\u30c9\u6642\u306b\u3001\u3082\u3057\u2193\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc```\ngo install command-line-arguments: open index: permission denied\n```\u304c\u51fa\u308b\u5834\u5408\u306f\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u6a29\u9650\u3092\u4ed8\u4e0e\u3057\u3066\u304b\u3089\u518d\u5ea6 go build \u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n```\nsudo chmod -R 777 /home/ec2-user/.go/src/test-project\n```\n\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3057\u305f\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u3067\u5b9f\u884c\u3055\u305b\u307e\u3059\u3002\n\u3067\u3001GoLang\u306b\u9650\u3089\u305a\u4e00\u822c\u7684\u306a\u8a71\u3067\u3059\u304c\u3001\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u30c4\u30fc\u30eb (TeraTerm \u3068\u304b) \u3067EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u63a5\u7d9a\u3057\u3066\u3044\u308b\u3068\u3001\u63a5\u7d9a\u304c\u5207\u308c\u305f\u3089\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3067\u3059\u306e\u3067\u3001nohup \u3092\u4f7f\u3044\u3001\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u3092\u5207\u3063\u3066\u3082\u6b62\u307e\u3089\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```\nnohup go run index.go &\n```\n\n\u3053\u308c\u3067\u30ea\u30e2\u30fc\u30c8\u63a5\u7d9a\u30c4\u30fc\u30eb\u3092\u9589\u3058\u3066\u3082 go \u306e\u30b3\u30fc\u30c9\u306f\u52d5\u304d\u7d9a\u3051\u307e\u3059\u3002\n\n\u52d5\u3044\u3066\u3044\u308b go \u306e\u30b3\u30fc\u30c9\u3092\u505c\u6b62\u3055\u305b\u308b\u3068\u304d\u306f kill \u3092\u4f7f\u3044\u307e\u3059\u3002\nps aux \u3067\u3069\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3092\u78ba\u8a8d\u3057\u3001\u305d\u306ePID\u3092 kill \u3057\u307e\u3057\u3087\u3046\u3002\n\n```\nps aux\nkill (\u8a72\u5f53\u306ePID)\n```\n\n\n#\u30c7\u30fc\u30bf\u5168\u4ef6\u3092\u51fa\u529b\u3059\u308b\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3067\u306f\u691c\u7d22\u7d50\u679c\u3092\uff11\u4ef6\u3060\u3051\u8fd4\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30c7\u30fc\u30bf\u5168\u4ef6\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408\u306f\u6b21\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```index.go(\u4fee\u6b63\u524d)\n//\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nresult := Castle{}\nerr = c.Find(bson.M{\"name\": \"\u5927\u962a\u57ce\"}).One(&result)\n    if err != nil {\n        panic(err)\n    }\n//\u30d2\u30c3\u30c8\u3057\u305f1\u4ef6\u3092\u51fa\u529b\nrouter := gin.Default()\nrouter.GET(\"/index\", func(c *gin.Context) {\n    c.JSON(200, gin.H{\n        \"\u8aac\u660e\": result.Description,\n    })\n})\n```\n\n```index.go(\u4fee\u6b63\u5f8c)\n//\u30c7\u30fc\u30bf\u3092\u691c\u7d22\nvar results []Castle\nerr =c.Find(bson.M{}).All(&results)\nif err != nil {\n    panic(err)\n}\n\n//\u5168\u4ef6\u51fa\u529b\nrouter := gin.Default()\nrouter.GET(\"/index\", func(c *gin.Context) {\n    c.JSON(200, results)\n})\n```\n\n#\u3053\u306e\u6b21\u306b\u3084\u308a\u305f\u3044\u3053\u3068\n\n8080\u756a\u30dd\u30fc\u30c8\u3067\u53d7\u3051\u308b\u306e\u304c\u306a\u3093\u3068\u306a\u304f\u5acc\u306a\u306e\u3067 80\u756a\u30dd\u30fc\u30c8\u3067 Listen \u3055\u305b\u305f\u3044\u3093\u3067\u3059\u304c\u3001\u8abf\u3079\u3066\u307f\u308b\u3068 root \u6a29\u9650\u3067\u5b9f\u884c\u3059\u308b\u3068\u304b Nginx\u3092\u4f7f\u3046\u3068\u304b\u65b9\u6cd5\u304c\u3044\u308d\u3044\u308d\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u307e\u305f\u8a66\u884c\u932f\u8aa4\u3057\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u307e\u3059\u3002\n\u3054\u53c2\u8003: \nhttp://qiita.com/sfujiwara/items/b312fbdd2660e43b6717\nhttp://matope.hatenablog.com/entry/2014/09/28/031155\n", "tags": ["AmazonLinux", "gin", "MongoDB", "mgo", "Go"]}