{"context": "\n\n\u30b9\u30de\u30dbAPI\u3092\u4f5c\u308b\n\u3053\u3053\u307e\u3067\u3001HTML\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u3001iOS/Android\u30a2\u30d7\u30ea\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u3066JSON\u3092\u8fd4\u3059\u4f8b\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\nDjango REST framework\u306e\u3088\u3046\u306b\u3001REST API\u3092\u4f5c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\napi\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\nmybook \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e0b\u306b api \u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ python manage.py startapp api\n\nmybook \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\nmybook/\n    api/\n        __init__.py\n        admin.py\n        apps.py\n        migrations/\n            __init__.py\n        models.py\n        tests.py\n        views.py\n\n\nJSON\u3092\u8fd4\u3059\u30d3\u30e5\u30fc\n\u57fa\u672c\u306f\u3001json\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3001Python\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSON\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nimport json\n\ndata = {'id': 1, 'name': 'hoge'}\njson_str = json.dumps(data, ensure_ascii=False, indent=2)\n\n\nensure_ascii=False  # \u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u308b\u6642\u3001\u3053\u306e\u3088\u3046\u306b\u6307\u5b9a\u3002\nindent=2  # \u7a7a\u767d2\u500b\u3067\u6574\u5f62\u3059\u308b\u5834\u5408\u3002\u7701\u7565\u3059\u308b\u3068\u6574\u5f62\u3057\u306a\u3044\u3002\n\n\u305f\u3060\u3057\u3001Python\u8f9e\u66f8\u306f\u9806\u4e0d\u540c\u306b\u306a\u308b\u305f\u3081\u3001JSON\u306e\u4e2d\u8eab\u3082\u9806\u4e0d\u540c\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u3053\u3067\u3001collections.OrderedDict \u9806\u5e8f\u4ed8\u304d\u8f9e\u66f8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001OrderedDict\u304c\u4f7f\u3048\u308b\u306e\u306f\u3001Python 2.7 \u304b\u3089\u306a\u306e\u3067\u3001\u30b5\u30fc\u30d0\u74b0\u5883\u306b\u3088\u3063\u3066 Python 2.6 \u4ee5\u4e0b\u306e\u5834\u5408\u306f\u3001orderddict\u3092\u4f7f\u3044\u307e\u3059\u3002\n\napi/views.py \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nimport json\nfrom collections import OrderedDict\nfrom django.http import HttpResponse\nfrom cms.models import Book\n\n\ndef render_json_response(request, data, status=None):\n    \"\"\"response \u3092 JSON \u3067\u8fd4\u5374\"\"\"\n    json_str = json.dumps(data, ensure_ascii=False, indent=2)\n    callback = request.GET.get('callback')\n    if not callback:\n        callback = request.POST.get('callback')  # POST\u3067JSONP\u306e\u5834\u5408\n    if callback:\n        json_str = \"%s(%s)\" % (callback, json_str)\n        response = HttpResponse(json_str, content_type='application/javascript; charset=UTF-8', status=status)\n    else:\n        response = HttpResponse(json_str, content_type='application/json; charset=UTF-8', status=status)\n    return response\n\n\ndef book_list(request):\n    \"\"\"\u66f8\u7c4d\u3068\u611f\u60f3\u306eJSON\u3092\u8fd4\u3059\"\"\"\n    books = []\n    for book in Book.objects.all().order_by('id'):\n\n        impressions = []\n        for impression in book.impressions.order_by('id'):\n            impression_dict = OrderedDict([\n                ('id', impression.id),\n                ('comment', impression.comment),\n            ])\n            impressions.append(impression_dict)\n\n        book_dict = OrderedDict([\n            ('id', book.id),\n            ('name', book.name),\n            ('publisher', book.publisher),\n            ('page', book.page),\n            ('impressions', impressions)\n        ])\n        books.append(book_dict)\n\n    data = OrderedDict([ ('books', books) ])\n    return render_json_response(request, data)\n\nrender_json_response() \u306fJSONP \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 \n\u30b9\u30de\u30db\u306eAPI\u3060\u3051\u3067\u306a\u304f\u3001Javascript\u306eAjax\u3067JSON\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306b\u3082\u5fdc\u7528\u3067\u304d\u307e\u3059\u3002 \n\nJSON\u3092\u8fd4\u3059URL\napi/urls.py \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\nfrom django.conf.urls import url\nfrom api import views\n\nurlpatterns = [\n    # \u66f8\u7c4d\n    url(r'^v1/books/$', views.book_list, name='book_list'),     # \u4e00\u89a7\n]\n\n\u3053\u306e api/urls.py \u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e mybook/urls.py \u3067 include \u3057\u307e\u3059\u3002\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', include(admin.site.urls)),\n    url(r'^cms/', include('cms.urls', namespace='cms')),\n    url(r'^api/', include('api.urls', namespace='api')),  # \u3053\u3053\u3092\u8ffd\u52a0\n]\n\n\n\u7d50\u679c\u306e\u78ba\u8a8d\n\u305d\u308c\u3067\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u4ee5\u4e0b\u306eURL\u3092\u958b\u3044\u3066\u4e0b\u3055\u3044\u3002\nhttp://127.0.0.1:8000/api/v1/books/\n\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n{\n  \"books\": [\n    {\n      \"id\": 1, \n      \"name\": \"Django\u5165\u9580\", \n      \"publisher\": \"GeekLab Nagano\", \n      \"page\": 10, \n      \"impressions\": [\n        {\n          \"id\": 1, \n          \"comment\": \"\u9014\u4e2d\u3067\\r\\n\u7720\u304f\u306a\u3063\u305f\u3002\"\n        }, \n        {\n          \"id\": 2, \n          \"comment\": \"\u3042\u3042\"\n        }, \n        {\n          \"id\": 3, \n          \"comment\": \"\u3044\u3044\"\n        }\n      ]\n    }, \n    {\n      \"id\": 2, \n      \"name\": \"Raspberry Pi \u5165\u9580\", \n      \"publisher\": \"GeekLab Nagano\", \n      \"page\": 15, \n      \"impressions\": []\n    }\n  ]\n}\n\n\niOS/Android\u30a2\u30d7\u30ea\u304b\u3089\u306e\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\niOS/Android\u30a2\u30d7\u30ea\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306f JSON \u3067\u3088\u3044\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u7c21\u5358\u306a\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001Web\u30a2\u30d7\u30ea\u306e\u30d5\u30a9\u30fc\u30e0\u53d7\u4fe1\u3068\u540c\u3058\u3082\u306e\u3092\u66f8\u3044\u3066\u3001\u30b9\u30de\u30db\u5074\u3067\u306f http form post \u3092\u6a21\u5023\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c7\u30fc\u30bf\u306e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f\u304c\u4f7f\u3048\u307e\u3059\u3002\n\u6b63\u5e38\u304b\u30a8\u30e9\u30fc\u304b\u306f\u3001JSON\u3067\u7d50\u679c\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\n\u7e70\u308a\u8fd4\u3057\u304c\u3042\u308b\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u306f\u3001\u30b9\u30de\u30db\u5074\u304b\u3089JSON\u3092POST\u3057\u3066\u3082\u3089\u3044\u3001json.loads() \u3067\u30c7\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nJSON\u3067\u53d7\u4fe1\u3059\u308b\u5834\u5408\u3001request \u306e raw_post_data \u304b\u3089JSON\u6587\u5b57\u5217\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\nimport json\n\ndef xxxx_post(request):\n    python_obj = json.loads(request.raw_post_data)  # Request\u306eBody\u304c\u76f4\u63a5JSON\u6587\u5b57\u5217\u3068\u306a\u308b\u3088\u3046POST\u3057\u3066\u3082\u3089\u3046\n      :\n\n\n\u30b9\u30de\u30dbAPI\u306e\u307e\u3068\u3081\n\u30b9\u30de\u30dbAPI\u3060\u3051\u3092\u4f5c\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30c7\u30fc\u30bf\u6295\u5165\u306f Django \u306e\u7ba1\u7406\u30b5\u30a4\u30c8\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u3001API\u90e8\u5206\u3060\u3051\u3092\u66f8\u304f\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u7c21\u5358\u306b\u30b9\u30de\u30db\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u306a\u304a\u3001\u672c\u683c\u7684\u306bAPI\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001Django REST framework\u306e\u5c0e\u5165\u3082\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u5f8c\u306b\n\u3053\u3053\u307e\u3067\u3067\u3001\u3053\u306e\u8b1b\u5ea7\u306f\u7d42\u4e86\u3067\u3059\u3002\n\u3053\u306e\u8b1b\u5ea7\u306e\u5f8c\u306b\u3001\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u305d\u306e1\u301c7 \u3092\u3084\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3055\u3089\u306b\u7406\u89e3\u304c\u6df1\u307e\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nDjango \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 (DJANGOPROJECT.JP \u304b\u3089 1.9 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044)\nDjango documentation\n\n\n\u30b9\u30de\u30dbAPI\u3092\u4f5c\u308b\n--------------\n\n\u3053\u3053\u307e\u3067\u3001HTML\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u8fd4\u3059\u3001Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f8b\u3092\u898b\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u3001iOS/Android\u30a2\u30d7\u30ea\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3068\u3057\u3066JSON\u3092\u8fd4\u3059\u4f8b\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002  \n[Django REST framework](http://www.django-rest-framework.org/)\u306e\u3088\u3046\u306b\u3001REST API\u3092\u4f5c\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u81ea\u5206\u3067\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n### api\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\nmybook \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4e0b\u306b api \u3068\u3044\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ python manage.py startapp api\n```\n\nmybook \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u3001\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\n```bash\nmybook/\n    api/\n        __init__.py\n        admin.py\n        apps.py\n        migrations/\n            __init__.py\n        models.py\n        tests.py\n        views.py\n```\n\n### JSON\u3092\u8fd4\u3059\u30d3\u30e5\u30fc\n\n\u57fa\u672c\u306f\u3001json\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u3001Python\u8f9e\u66f8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092JSON\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```python\nimport json\n\ndata = {'id': 1, 'name': 'hoge'}\njson_str = json.dumps(data, ensure_ascii=False, indent=2)\n```\n\n* ensure_ascii=False  # \u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u308b\u6642\u3001\u3053\u306e\u3088\u3046\u306b\u6307\u5b9a\u3002\n* indent=2  # \u7a7a\u767d2\u500b\u3067\u6574\u5f62\u3059\u308b\u5834\u5408\u3002\u7701\u7565\u3059\u308b\u3068\u6574\u5f62\u3057\u306a\u3044\u3002\n\n\u305f\u3060\u3057\u3001Python\u8f9e\u66f8\u306f\u9806\u4e0d\u540c\u306b\u306a\u308b\u305f\u3081\u3001JSON\u306e\u4e2d\u8eab\u3082\u9806\u4e0d\u540c\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001collections.OrderedDict \u9806\u5e8f\u4ed8\u304d\u8f9e\u66f8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n> \u306a\u304a\u3001OrderedDict\u304c\u4f7f\u3048\u308b\u306e\u306f\u3001Python 2.7 \u304b\u3089\u306a\u306e\u3067\u3001\u30b5\u30fc\u30d0\u74b0\u5883\u306b\u3088\u3063\u3066 Python 2.6 \u4ee5\u4e0b\u306e\u5834\u5408\u306f\u3001[orderddict](https://pypi.python.org/pypi/ordereddict)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n`api/views.py` \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python\nimport json\nfrom collections import OrderedDict\nfrom django.http import HttpResponse\nfrom cms.models import Book\n\n\ndef render_json_response(request, data, status=None):\n    \"\"\"response \u3092 JSON \u3067\u8fd4\u5374\"\"\"\n    json_str = json.dumps(data, ensure_ascii=False, indent=2)\n    callback = request.GET.get('callback')\n    if not callback:\n        callback = request.POST.get('callback')  # POST\u3067JSONP\u306e\u5834\u5408\n    if callback:\n        json_str = \"%s(%s)\" % (callback, json_str)\n        response = HttpResponse(json_str, content_type='application/javascript; charset=UTF-8', status=status)\n    else:\n        response = HttpResponse(json_str, content_type='application/json; charset=UTF-8', status=status)\n    return response\n\n\ndef book_list(request):\n    \"\"\"\u66f8\u7c4d\u3068\u611f\u60f3\u306eJSON\u3092\u8fd4\u3059\"\"\"\n    books = []\n    for book in Book.objects.all().order_by('id'):\n        \n        impressions = []\n        for impression in book.impressions.order_by('id'):\n            impression_dict = OrderedDict([\n                ('id', impression.id),\n                ('comment', impression.comment),\n            ])\n            impressions.append(impression_dict)\n        \n        book_dict = OrderedDict([\n            ('id', book.id),\n            ('name', book.name),\n            ('publisher', book.publisher),\n            ('page', book.page),\n            ('impressions', impressions)\n        ])\n        books.append(book_dict)\n    \n    data = OrderedDict([ ('books', books) ])\n    return render_json_response(request, data)\n```\n\nrender_json_response() \u306fJSONP \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 \n\u30b9\u30de\u30db\u306eAPI\u3060\u3051\u3067\u306a\u304f\u3001Javascript\u306eAjax\u3067JSON\u3092\u53d6\u5f97\u3059\u308b\u5834\u5408\u306b\u3082\u5fdc\u7528\u3067\u304d\u307e\u3059\u3002 \n\n### JSON\u3092\u8fd4\u3059URL\n\n`api/urls.py` \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u65b0\u898f\u4f5c\u6210\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```python\nfrom django.conf.urls import url\nfrom api import views\n\nurlpatterns = [\n    # \u66f8\u7c4d\n    url(r'^v1/books/$', views.book_list, name='book_list'),     # \u4e00\u89a7\n]\n```\n\n\u3053\u306e `api/urls.py` \u3092\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e `mybook/urls.py` \u3067 include \u3057\u307e\u3059\u3002\n\n```python\nfrom django.conf.urls import url, include\nfrom django.contrib import admin\n\nurlpatterns = [\n    url(r'^admin/', include(admin.site.urls)),\n    url(r'^cms/', include('cms.urls', namespace='cms')),\n    url(r'^api/', include('api.urls', namespace='api')),  # \u3053\u3053\u3092\u8ffd\u52a0\n]\n```\n\n### \u7d50\u679c\u306e\u78ba\u8a8d\n\n\u305d\u308c\u3067\u306f\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u4ee5\u4e0b\u306eURL\u3092\u958b\u3044\u3066\u4e0b\u3055\u3044\u3002\n\n```bash\nhttp://127.0.0.1:8000/api/v1/books/\n```\n\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n{\n  \"books\": [\n    {\n      \"id\": 1, \n      \"name\": \"Django\u5165\u9580\", \n      \"publisher\": \"GeekLab Nagano\", \n      \"page\": 10, \n      \"impressions\": [\n        {\n          \"id\": 1, \n          \"comment\": \"\u9014\u4e2d\u3067\\r\\n\u7720\u304f\u306a\u3063\u305f\u3002\"\n        }, \n        {\n          \"id\": 2, \n          \"comment\": \"\u3042\u3042\"\n        }, \n        {\n          \"id\": 3, \n          \"comment\": \"\u3044\u3044\"\n        }\n      ]\n    }, \n    {\n      \"id\": 2, \n      \"name\": \"Raspberry Pi \u5165\u9580\", \n      \"publisher\": \"GeekLab Nagano\", \n      \"page\": 15, \n      \"impressions\": []\n    }\n  ]\n}\n```\n\n### iOS/Android\u30a2\u30d7\u30ea\u304b\u3089\u306e\u30c7\u30fc\u30bf\u306e\u53d7\u4fe1\n\niOS/Android\u30a2\u30d7\u30ea\u306b\u5bfe\u3057\u3066\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306f JSON \u3067\u3088\u3044\u3067\u3059\u304c\u3001\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3057\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n* \u7c21\u5358\u306a\u30c7\u30fc\u30bf\u306e\u5834\u5408\u306f\u3001Web\u30a2\u30d7\u30ea\u306e\u30d5\u30a9\u30fc\u30e0\u53d7\u4fe1\u3068\u540c\u3058\u3082\u306e\u3092\u66f8\u3044\u3066\u3001\u30b9\u30de\u30db\u5074\u3067\u306f http form post \u3092\u6a21\u5023\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n    - \u3053\u3046\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u30c7\u30fc\u30bf\u306e\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u3001\u30d5\u30a9\u30fc\u30e0\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f\u304c\u4f7f\u3048\u307e\u3059\u3002\n    - \u6b63\u5e38\u304b\u30a8\u30e9\u30fc\u304b\u306f\u3001JSON\u3067\u7d50\u679c\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n* \u7e70\u308a\u8fd4\u3057\u304c\u3042\u308b\u8907\u96d1\u306a\u30c7\u30fc\u30bf\u306f\u3001\u30b9\u30de\u30db\u5074\u304b\u3089JSON\u3092POST\u3057\u3066\u3082\u3089\u3044\u3001json.loads() \u3067\u30c7\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\n\nJSON\u3067\u53d7\u4fe1\u3059\u308b\u5834\u5408\u3001request \u306e raw_post_data \u304b\u3089JSON\u6587\u5b57\u5217\u3092\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n```python\nimport json\n\ndef xxxx_post(request):\n    python_obj = json.loads(request.raw_post_data)  # Request\u306eBody\u304c\u76f4\u63a5JSON\u6587\u5b57\u5217\u3068\u306a\u308b\u3088\u3046POST\u3057\u3066\u3082\u3089\u3046\n      :\n```\n\n### \u30b9\u30de\u30dbAPI\u306e\u307e\u3068\u3081\n\n\u30b9\u30de\u30dbAPI\u3060\u3051\u3092\u4f5c\u308b\u306e\u3067\u3042\u308c\u3070\u3001\u30c7\u30fc\u30bf\u6295\u5165\u306f Django \u306e\u7ba1\u7406\u30b5\u30a4\u30c8\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u3001API\u90e8\u5206\u3060\u3051\u3092\u66f8\u304f\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002  \n\u7c21\u5358\u306b\u30b9\u30de\u30db\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u672c\u683c\u7684\u306bAPI\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u3001[Django REST framework](http://www.django-rest-framework.org/)\u306e\u5c0e\u5165\u3082\u691c\u8a0e\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u6700\u5f8c\u306b\n-----\n\n\u3053\u3053\u307e\u3067\u3067\u3001\u3053\u306e\u8b1b\u5ea7\u306f\u7d42\u4e86\u3067\u3059\u3002\n\n\u3053\u306e\u8b1b\u5ea7\u306e\u5f8c\u306b\u3001\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb \u305d\u306e1\u301c7 \u3092\u3084\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u3055\u3089\u306b\u7406\u89e3\u304c\u6df1\u307e\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n* [Django \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://djangoproject.jp/) (DJANGOPROJECT.JP \u304b\u3089 1.9 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044)\n\n* [Django documentation](https://docs.djangoproject.com/)\n", "tags": ["Python", "Django"]}