{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u65e5\u672c\u8a9e\u306e\u5165\u3089\u306a\u3044\u30b0\u30e9\u30d5\u4f5c\u6210\u306f\u904e\u53bb\u8a18\u4e8b\u53c2\u7167\u306e\u3053\u3068\n\n\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u6e96\u5099\n\u9069\u5f53\u306a\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u6e96\u5099\u3057\u3066\u3001git\u306b\u8ffd\u52a0\u3059\u308b\u3002Google\u306eNoto\u3068\u304b\u3002\nshell-session\n$ cd qiita-sin\n$ mkdir fonts\n$ cp .../NotoSansCJKjp-Medium.otf fonts/\n\n\n\u30a2\u30d7\u30ea\u306e\u4fee\u6b63\n\napp.py\n#!/bin/env python\n# coding: utf-8\n\nimport os\nimport StringIO\n\nfrom flask import Flask, render_template\nimport matplotlib\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt\nfrom matplotlib.font_manager import FontProperties\nimport numpy as np\n\nfontprop = FontProperties(fname='./fonts/NotoSansCJKjp-Medium.otf', size=10)\n\napp = Flask(__name__)\napp.debug = True\n\n@app.route('/')\ndef do_sin():\n    x = np.arange(-np.pi, np.pi, 0.1)\n    y = np.sin(x)\n\n    fig, ax = plt.subplots(1)\n    plt.plot(x, y, label=\"sin\")\n    plt.legend(loc=\"best\")\n\n    strio = StringIO.StringIO()\n    fig.savefig(strio, format=\"svg\")\n    plt.close(fig)\n\n    strio.seek(0)\n    svgstr = strio.buf[strio.buf.find(\"<svg\"):]\n\n    return render_template(\"sin.html\", svgstr=svgstr.decode(\"utf-8\"))\n\n@app.route('/sin-jp')\ndef do_sin_jp():\n    x = np.arange(-np.pi, np.pi, 0.1)\n    y = np.sin(x)\n\n    fig, ax = plt.subplots(1)\n    plt.plot(x, y, label=u\"sin\u30ab\u30fc\u30d6\")\n    plt.legend(loc=\"best\", prop=fontprop)\n    ax.set_title(u\"\u30c6\u30b9\u30c8\", font_properties=fontprop)\n    ax.set_xlabel(u\"x\u8ef8\", font_properties=fontprop)\n    ax.set_ylabel(u\"y\u8ef8\", font_properties=fontprop)\n\n    strio = StringIO.StringIO()\n    fig.savefig(strio, format=\"svg\")\n    plt.close(fig)\n\n    strio.seek(0)\n    svgstr = strio.buf[strio.buf.find(\"<svg\"):]\n\n    return render_template(\"sin.html\", svgstr=svgstr.decode(\"utf-8\"))\n\nif __name__ == \"__main__\":\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(port=port)\n\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30a2\u30d7\u30ea\u306f https://limitless-garden-3527.herokuapp.com/sin-jp \u53c2\u7167\n\n\u30dd\u30a4\u30f3\u30c8\n\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u3001fontprop\u3092\u4f5c\u3063\u3066\u304a\u304f\u3053\u3068\u3068\u3001\u63cf\u753b\u306e\u969b\u306b\u305d\u306efontprop\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\n# \u306f\u3058\u3081\u306b\n\u65e5\u672c\u8a9e\u306e\u5165\u3089\u306a\u3044\u30b0\u30e9\u30d5\u4f5c\u6210\u306f[\u904e\u53bb\u8a18\u4e8b](http://qiita.com/kounoike/items/7a73ed7417289edb8be7)\u53c2\u7167\u306e\u3053\u3068\n\n# \u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306e\u6e96\u5099\n\u9069\u5f53\u306a\u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u6e96\u5099\u3057\u3066\u3001git\u306b\u8ffd\u52a0\u3059\u308b\u3002Google\u306e[Noto](http://googledevjp.blogspot.jp/2014/07/noto.html)\u3068\u304b\u3002\n```shell-session\n$ cd qiita-sin\n$ mkdir fonts\n$ cp .../NotoSansCJKjp-Medium.otf fonts/\n```\n\n# \u30a2\u30d7\u30ea\u306e\u4fee\u6b63\n```py:app.py\n#!/bin/env python\n# coding: utf-8\n\nimport os\nimport StringIO\n\nfrom flask import Flask, render_template\nimport matplotlib\nmatplotlib.use('Agg')\nimport matplotlib.pyplot as plt\nfrom matplotlib.font_manager import FontProperties\nimport numpy as np\n\nfontprop = FontProperties(fname='./fonts/NotoSansCJKjp-Medium.otf', size=10)\n\napp = Flask(__name__)\napp.debug = True\n\n@app.route('/')\ndef do_sin():\n    x = np.arange(-np.pi, np.pi, 0.1)\n    y = np.sin(x)\n\n    fig, ax = plt.subplots(1)\n    plt.plot(x, y, label=\"sin\")\n    plt.legend(loc=\"best\")\n\n    strio = StringIO.StringIO()\n    fig.savefig(strio, format=\"svg\")\n    plt.close(fig)\n\n    strio.seek(0)\n    svgstr = strio.buf[strio.buf.find(\"<svg\"):]\n\n    return render_template(\"sin.html\", svgstr=svgstr.decode(\"utf-8\"))\n\n@app.route('/sin-jp')\ndef do_sin_jp():\n    x = np.arange(-np.pi, np.pi, 0.1)\n    y = np.sin(x)\n\n    fig, ax = plt.subplots(1)\n    plt.plot(x, y, label=u\"sin\u30ab\u30fc\u30d6\")\n    plt.legend(loc=\"best\", prop=fontprop)\n    ax.set_title(u\"\u30c6\u30b9\u30c8\", font_properties=fontprop)\n    ax.set_xlabel(u\"x\u8ef8\", font_properties=fontprop)\n    ax.set_ylabel(u\"y\u8ef8\", font_properties=fontprop)\n\n    strio = StringIO.StringIO()\n    fig.savefig(strio, format=\"svg\")\n    plt.close(fig)\n\n    strio.seek(0)\n    svgstr = strio.buf[strio.buf.find(\"<svg\"):]\n\n    return render_template(\"sin.html\", svgstr=svgstr.decode(\"utf-8\"))\n\nif __name__ == \"__main__\":\n    port = int(os.environ.get(\"PORT\", 5000))\n    app.run(port=port)\n```\n\n\u51fa\u6765\u4e0a\u304c\u3063\u305f\u30a2\u30d7\u30ea\u306f https://limitless-garden-3527.herokuapp.com/sin-jp \u53c2\u7167\n\n# \u30dd\u30a4\u30f3\u30c8\n\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u3001fontprop\u3092\u4f5c\u3063\u3066\u304a\u304f\u3053\u3068\u3068\u3001\u63cf\u753b\u306e\u969b\u306b\u305d\u306efontprop\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\n", "tags": ["Heroku", "Python", "matplotlib", "SVG", "Flask"]}