{"context": " More than 1 year has passed since last update.\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u3072\u3068\u3064\u3057\u304b\u306a\u3044case class\u3092JSON\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u3001{\"key\": \"value\"} \u3068\u3044\u3046\u5f62\u3067\u306f\u306a\u304f\u3001\u30b9\u30c8\u30ec\u30fc\u30c8\u306b \"value\" \u3068\u3044\u3046\u5f62\u306b\u6574\u5f62\u3057\u305f\u3044\u3002\nspray-json\u306e jsonFormat1 \u95a2\u6570\u3092\u4f7f\u3046\u3068\u524d\u8005\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u6b21\u306e\u4f8b\u306f\u3001\u82d7\u5b57\u3068\u540d\u524d\u3067\u6c0f\u540d\u3092\u69cb\u6210\u3059\u308b\u6982\u5ff5\u7684\u306a\u7d71\u4e00\u4f53(conceptual whole)\u306b\u3064\u3044\u3066\u306e\u30b3\u30fc\u30c9\u3060\u3002\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u82d7\u5b57\u3068\u540d\u524d\u305d\u308c\u305e\u308c\u3092 jsonFormat1 \u3092\u7528\u3044\u3066JSON\u3092\u5909\u63db\u3057\u3066\u3044\u308b\u3002\ncase class FirstName(firstName: String)\ncase class LastName(lastName: String)\ncase class Name(first: FirstName, last: LastName)\n\nimport spray.json.DefaultJsonProtocol\n\nobject NameJsonProtocol extends DefaultJsonProtocol {\n  implicit val FirstNameFormat = jsonFormat1(FirstName)\n  implicit val LastNameFormat = jsonFormat1(LastName)\n  implicit val NameFormat = jsonFormat2(Name)\n}\n\nimport spray.json._\nimport NameJsonProtocol._\n\nprintln(Name(FirstName(\"Alice\"), LastName(\"Brown\")).toJson)\n\n\u51fa\u529b\u7d50\u679c\u304c\u5197\u9577\u7684\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002first\u3084last\u304c2\u5ea6\u51fa\u3066\u304f\u308b\u305f\u3081\u30d0\u30a4\u30c8\u6570\u304c\u5897\u3048\u308b\u3002\n\u52a0\u3048\u3066\u3001\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u306e\u3067JSON\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5b9f\u88c5\u306b\u3082\u8ca0\u62c5\u306b\u306a\u308b\u3002\n{\"first\":{\"firstName\":\"Alice\"},\"last\":{\"lastName\":\"Brown\"}}\n\n\u7406\u60f3\u7684\u306b\u306f\u30cd\u30b9\u30c8\u304c\u306a\u304f\u5197\u9577\u7684\u3067\u306a\u3044JSON\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3002\u305f\u3068\u3048\u3070\u3053\u306e\u3088\u3046\u306a:\n{\"first\":\"Alice\",\"last\":\"Brown\"}\n\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3046\u306a\u308b:\ncase class FirstName(firstName: String)\ncase class LastName(lastName: String)\ncase class Name(first: FirstName, last: LastName)\n\nimport spray.json.{ JsString, JsValue, RootJsonFormat, DefaultJsonProtocol }\n\nobject NameJsonProtocol extends DefaultJsonProtocol {\n  // map case classes with 1 string parameter to JSON string\n  def jsonString[A](construct: (String) => A)(stringify: A => String): RootJsonFormat[A] = new RootJsonFormat[A] {\n    def write(x: A): JsString = JsString(stringify(x))\n    def read(json: JsValue): A = json match {\n      case JsString(x) => construct(x)\n      case x           => deserializationError(\"Expected JsString, but got \" + x)\n    }\n  }\n\n  implicit val FirstNameFormat = jsonString(FirstName)(_.firstName)\n  implicit val LastNameFormat = jsonString(LastName)(_.lastName)\n  implicit val NameFormat = jsonFormat2(Name)\n}\n\nimport spray.json._\nimport NameJsonProtocol._\n\nprintln(Name(FirstName(\"Alice\"), LastName(\"Brown\")).toJson)\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u304c\u3072\u3068\u3064\u3057\u304b\u306a\u3044case class\u3092JSON\u306b\u5909\u63db\u3059\u308b\u3068\u304d\u3001`{\"key\": \"value\"}` \u3068\u3044\u3046\u5f62\u3067\u306f\u306a\u304f\u3001\u30b9\u30c8\u30ec\u30fc\u30c8\u306b `\"value\"` \u3068\u3044\u3046\u5f62\u306b\u6574\u5f62\u3057\u305f\u3044\u3002\n\nspray-json\u306e `jsonFormat1` \u95a2\u6570\u3092\u4f7f\u3046\u3068\u524d\u8005\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u6b21\u306e\u4f8b\u306f\u3001\u82d7\u5b57\u3068\u540d\u524d\u3067\u6c0f\u540d\u3092\u69cb\u6210\u3059\u308b\u6982\u5ff5\u7684\u306a\u7d71\u4e00\u4f53(conceptual whole)\u306b\u3064\u3044\u3066\u306e\u30b3\u30fc\u30c9\u3060\u3002\u3053\u306e\u30b3\u30fc\u30c9\u3067\u306f\u82d7\u5b57\u3068\u540d\u524d\u305d\u308c\u305e\u308c\u3092 `jsonFormat1` \u3092\u7528\u3044\u3066JSON\u3092\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n```scala\ncase class FirstName(firstName: String)\ncase class LastName(lastName: String)\ncase class Name(first: FirstName, last: LastName)\n\nimport spray.json.DefaultJsonProtocol\n\nobject NameJsonProtocol extends DefaultJsonProtocol {\n  implicit val FirstNameFormat = jsonFormat1(FirstName)\n  implicit val LastNameFormat = jsonFormat1(LastName)\n  implicit val NameFormat = jsonFormat2(Name)\n}\n\nimport spray.json._\nimport NameJsonProtocol._\n\nprintln(Name(FirstName(\"Alice\"), LastName(\"Brown\")).toJson)\n```\n\n\u51fa\u529b\u7d50\u679c\u304c\u5197\u9577\u7684\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002first\u3084last\u304c2\u5ea6\u51fa\u3066\u304f\u308b\u305f\u3081\u30d0\u30a4\u30c8\u6570\u304c\u5897\u3048\u308b\u3002\n\u52a0\u3048\u3066\u3001\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u306e\u3067JSON\u3092\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5b9f\u88c5\u306b\u3082\u8ca0\u62c5\u306b\u306a\u308b\u3002\n\n```json\n{\"first\":{\"firstName\":\"Alice\"},\"last\":{\"lastName\":\"Brown\"}}\n```\n\n\u7406\u60f3\u7684\u306b\u306f\u30cd\u30b9\u30c8\u304c\u306a\u304f\u5197\u9577\u7684\u3067\u306a\u3044JSON\u306b\u306a\u3063\u3066\u307b\u3057\u3044\u3002\u305f\u3068\u3048\u3070\u3053\u306e\u3088\u3046\u306a:\n\n```json\n{\"first\":\"Alice\",\"last\":\"Brown\"}\n```\n\n\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u30b3\u30fc\u30c9\u306f\u3053\u3046\u306a\u308b:\n\n```scala\ncase class FirstName(firstName: String)\ncase class LastName(lastName: String)\ncase class Name(first: FirstName, last: LastName)\n\nimport spray.json.{ JsString, JsValue, RootJsonFormat, DefaultJsonProtocol }\n\nobject NameJsonProtocol extends DefaultJsonProtocol {\n  // map case classes with 1 string parameter to JSON string\n  def jsonString[A](construct: (String) => A)(stringify: A => String): RootJsonFormat[A] = new RootJsonFormat[A] {\n    def write(x: A): JsString = JsString(stringify(x))\n    def read(json: JsValue): A = json match {\n      case JsString(x) => construct(x)\n      case x           => deserializationError(\"Expected JsString, but got \" + x)\n    }\n  }\n\n  implicit val FirstNameFormat = jsonString(FirstName)(_.firstName)\n  implicit val LastNameFormat = jsonString(LastName)(_.lastName)\n  implicit val NameFormat = jsonFormat2(Name)\n}\n\nimport spray.json._\nimport NameJsonProtocol._\n\nprintln(Name(FirstName(\"Alice\"), LastName(\"Brown\")).toJson)\n```\n", "tags": ["Scala", "spray"]}