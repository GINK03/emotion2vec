{"context": " More than 1 year has passed since last update.\n\n\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u30a4\u30e1\u30fc\u30b8\u8868\u793a\u3059\u308b\n\u307e\u305a\u3001\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\u4eca\u56de\u306fKaggle\u306eDigital Recognizer\u3068\u3044\u3046\u8ab2\u984c\u304b\u3089train\u3068\u3044\u3046\u540d\u306e\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u5168\u90e8\u3092\u4f7f\u3046\u306873MB\u3068\u304b\u306a\u308a\u306e\u30c7\u30fc\u30bf\u91cf\u306e\u305f\u3081\u3001\u5206\u304b\u308a\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u30660\u301c9\u306e\u5404\u6570\u5b57\u304b\u308920\u500b\u305a\u3064\u3001\u8a08200\u500b\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u305f\u30c7\u30fc\u30bf\u306f\u3053\u3053\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u306fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u3063\u3066\u3044\u3066\n8, 0, 0, 0, 128, ... , 54, 23, 0, 0  \n\u306e\u3088\u3046\u306b\u30011\u6841\u76ee\u306f\u3069\u306e\u6570\u5b57\u304c\u66f8\u304b\u308c\u305f\u304b\u3092\u8868\u3059\u30e9\u30d9\u30eb\u3001\u305d\u308c\u4ee5\u964d\u306e\u6841\u306f28x28=784\u30d4\u30af\u30bb\u30eb\u5206\u306e\u6570\u5b57\u30c7\u30fc\u30bf\u304c\u7d9a\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n\n\u305d\u3057\u3066\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u914d\u5217\u306b\u683c\u7d0d\u3001\u30e9\u30d9\u30eb\u9806\u3067\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\nsize = 28\nraw_data= np.loadtxt('train_small.csv',delimiter=',',skiprows=1)\n\ndigit_data = []\nfor i in range(len(raw_data)):\n    digit_data.append((raw_data[i,0],raw_data[i,1:785]))\n\ndigit_data.sort(key=lambda x: x[0]) # sort array by label\n\n\u307e\u305a\u306f\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c\u3069\u3093\u306a\u753b\u50cf\u306a\u306e\u304b\u3001\u30a4\u30e1\u30fc\u30b8\u3067\u8868\u793a\u3057\u3066(matplotlib\u306epcolor\u30b0\u30e9\u30d5\u3067)\u307f\u3066\u307f\u307e\u3059\u3002\n\n# draw digit images\nplt.figure(figsize=(15, 15))\n\nfor i in range(len(digit_data)):\n    X, Y = np.meshgrid(range(size),range(size))\n    Z = digit_data[i][1].reshape(size,size)   # convert from vector to 28x28 matrix\n    Z = Z[::-1,:]             # flip vertical\n    plt.subplot(10, 20, i+1)  # layout 200 cells\n    plt.xlim(0,27)\n    plt.ylim(0,27)\n    plt.pcolor(X, Y, Z)\n    plt.flag()\n    plt.gray()\n    plt.tick_params(labelbottom=\"off\")\n    plt.tick_params(labelleft=\"off\")\n\nplt.show()\n\n\n\"2\"\u306e8\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u304c\u3059\u3054\u3044\u3067\u3059\u306d\u3001\"2\"\u306e\u9762\u5f71\u304c\u3042\u308a\u307e\u305b\u3093(\u7b11) \"2\"\u3060\u3068\u8a00\u308f\u308c\u306a\u3051\u308c\u3070\u4eba\u9593\u3067\u3082\u5224\u5225\u3067\u304d\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u30fb\u30fb\u30fb\n\u3053\u308c\u304c\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\n\u5404\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u3092\u53d6\u3063\u3066\u307f\u308b\n\n\u76f8\u95a2\u884c\u5217\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\n\u3053\u306e28x28=784\u30d4\u30af\u30bb\u30eb\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u3001784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u5404\u8981\u7d20\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u6fc3\u3055\u3068\u3057\u3066\u76f8\u95a2\u884c\u5217\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u5358\u7d14\u306b\u76f8\u95a2\u3092\u3068\u308b\u3053\u3068\u304c\u3069\u306e\u7a0b\u5ea6\u610f\u5473\u3092\u6301\u3064\u304b\u306f\u8ab2\u984c\u3067\u3059\u304c\u3001\u7c21\u6613\u306a\u65b9\u6cd5\u3067\u753b\u50cf\u540c\u58eb\u306e\u8fd1\u3055\u304c\u591a\u5c11\u306f\u8868\u305b\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n200x200\u306e\u884c\u5217\u306a\u306e\u3067\u6570\u5b57\u306b\u3057\u3066\u3082\u5168\u304f\u7406\u89e3\u3067\u304d\u306a\u3044\u306e\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u304b\u3080\u305f\u3081\u30b0\u30e9\u30d5\u3067\u8868\u3057\u307e\u3059\u3002\n\n\u306a\u304b\u306a\u304b\u58ee\u89b3\u306a\u30b0\u30e9\u30d5\u3067\u3059\u306d\uff08\u7b11\uff09\n\u5b8c\u5168\u306a\u5bfe\u89d2\u6210\u5206\u306f\u3001\u540c\u3058\u30c7\u30fc\u30bf\u306a\u306e\u3067\u76f8\u95a2\u304c1\u3067\u3059\u3002\u8584\u76ee\u3067\u898b\u3066\u307f\u308b\u3068\u5bfe\u89d2\u30d6\u30ed\u30c3\u30af\uff08\u540c\u3058\u6570\u5b57\u540c\u58eb\u306e\u76f8\u95a2\u4fc2\u6570\uff09\u304c\u3061\u3087\u3063\u3068\u6fc3\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\"1\"\u306f\u78ba\u5b9f\u306b\u76f8\u95a2\u304c\u9ad8\u3044\u3067\u3059\u3002\npython\u3067\u306e\u8a08\u7b97\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\ndata_mat = []\n\n# convert list to ndarray\nfor i in range(len(digit_data)):\n    label = digit_data[i][0]\n    data_mat.append(digit_data[i][1])\n\nA = np.array(data_mat)\nZ = np.corrcoef(A)      # generate correlation matrix\n\narea_size = len(digit_data)\nX, Y = np.meshgrid(range(area_size),range(area_size)) \n\n\n\u95be\u5024\u3092\u8a2d\u3051\u3066\u898b\u3084\u3059\u304f\u3059\u308b\n\u3082\u3046\u3061\u3087\u3063\u3068\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u95be\u5024\u3092\u8a2d\u3051\u3092\u3001\u76f8\u95a2\u4fc2\u6570\u304c\u305d\u308c\u8d85\u3048\u3066\u3044\u308b\u3082\u306e\u30921, \u672a\u6e80\u306e\u3082\u306e\u30920\u30682\u5024\u5316\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\u95be\u5024\u3068\u3057\u30660.5, 0.6\u3092\u9078\u3093\u3067\u3044\u307e\u3059\u304c\u6063\u610f\u7684\u306a\u3082\u306e\u3067\u3001\u3044\u304f\u3064\u304b\u8a66\u3057\u3066\u5bfe\u89d2\u6210\u5206\u304c\u6d6e\u304d\u4e0a\u304c\u308a\u59cb\u3081\u305f\u3082\u306e\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u30020.6\u306e\u3082\u306e\u3092\u898b\u308b\u3068\u3060\u3044\u3076\u5bfe\u89d2\u30d6\u30ed\u30c3\u30af\u3068\u3001\u305d\u308c\u4ee5\u5916\u3067\u5dee\u304c\u3042\u308b\u3088\u3046\u306b\u898b\u3048\u3066\u304d\u307e\u3057\u305f\u3002\"9\"\u3068\"7\"\u304c\u4f3c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u8868\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\"2\"\u306f\u7279\u306b\"2\"\u540c\u58eb\u306e\u76f8\u95a2\u304c\u4f4e\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n\nplt.clf()\nplt.figure(figsize=(10, 10))\nplt.xlim(0,area_size-1)\nplt.ylim(0,area_size-1)\nplt.title(\"Correlation matrix of digit charcter vector. (corr>0.5)\")\n\nthresh = .5 \nZ1 = Z.copy()\nZ1[Z1 > thresh] = 1\nZ1[Z1 <= thresh] = 0\n\nplt.pcolor(X, Y, Z1, cmap=cm.get_cmap('Blues'),alpha=0.6)\nplt.xticks([(i * 20) for i in range(10)],range(10))\nplt.yticks([(i * 20) for i in range(10)],range(10))\nplt.grid(color='deeppink',linestyle='--')\nplt.show()\n\n\n\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306e\u5e73\u5747\u5024\n\u6700\u5f8c\u306b\u3001\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306e\u5e73\u5747\u5024\u309210x10\u306e\u30b0\u30e9\u30d5\u3067\u8868\u3057\u3066\u307f\u307e\u3059\u3002\n\n\nsummary_Z = np.zeros(100).reshape(10,10)\n\nfor i in range(10):\n    for j in range(10):\n        i1 = i * 20\n        j1 = j * 20\n        #print \"[%d:%d,%d:%d]\" % (i1,i1+20,j1,j1+20)\n        if i==j:\n            # \u5bfe\u89d2\u6210\u5206\u306f1\u306b\u6c7a\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u304c\u4e0a\u3076\u308c\u3059\u308b\u306e\u3092\u907f\u3051\u308b\u305f\u3081\u9664\u3044\u3066\u5e73\u5747\u3092\u3068\u308b\n            summary_Z[i,j] = (np.sum(Z[i1:i1+20,j1:j1+20])-20)/380\n        else:\n            summary_Z[i,j] = np.sum(Z[i1:i1+20,j1:j1+20])/400\n\n# average of each digit's grid\nplt.clf()\nplt.figure(figsize=(10, 10))\nplt.xlim(0,10)\nplt.ylim(0,10)\n\nsX, sY = np.meshgrid(range(11),range(11))\nplt.title(\"Correlation matrix of summuation of each digit's cell\")\nplt.xticks(range(10),range(10))\nplt.yticks(range(10),range(10))\nplt.pcolor(sX, sY, summary_Z, cmap=cm.get_cmap('Blues'),alpha=0.6)\nplt.show()            \n\n\n\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5411\u3051\u3066\n\u4eca\u56de\u306f\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3068\u307f\u306a\u3057\u3066\u3001\u305d\u306e\u30d9\u30af\u30c8\u30eb\u9593\u306e\u305d\u306e\u307e\u307e\u76f8\u95a2\u3092\u3068\u308b\u3068\u3044\u3046\u3001\u3042\u308b\u610f\u5473\u4e71\u66b4\u306a\u5206\u6790\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u672c\u6765\u753b\u50cf\u30c7\u30fc\u30bf\u306f2\u6b21\u5143\u306a\u306e\u3067\u3001\u4e0a\u4e0b\u5de6\u53f3\u7b49\u8fd1\u96a3\u30d4\u30af\u30bb\u30eb\u306e\u5024\u3082\u8003\u616e\u3057\u305f\u8fd1\u3055\u3092\u691c\u8a0e\u3057\u305f\u65b9\u304c\u3088\u308a\u3082\u3063\u3068\u3082\u3089\u3057\u3044\u753b\u50cf\u540c\u58eb\u306e\u8fd1\u3055\u304c\u8868\u73fe\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u3060\u3001\u3053\u306e\u6bb5\u968e\u3060\u3068\u6a5f\u68b0\u5b66\u7fd2\u4ee5\u524d\u3067\u3059\u306d\u3002\u3067\u3082\u3001\u4ee5\u5916\u3068\u5bfe\u89d2\u6210\u5206\u304c\u304d\u3061\u3093\u3068\u3067\u3066\u3044\u307e\u3057\u305f\u3002\u3082\u3046\u5c11\u3057\u672c\u683c\u7684\u306a\u3053\u3068\u306f\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066\u6b21\u56de\u306e\u8a18\u4e8b\u3067\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n##\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u30a4\u30e1\u30fc\u30b8\u8868\u793a\u3059\u308b##\n\n\u307e\u305a\u3001\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\u4eca\u56de\u306f[Kaggle](http://www.kaggle.com)\u306e[Digital Recognizer](https://www.kaggle.com/c/digit-recognizer/data)\u3068\u3044\u3046\u8ab2\u984c\u304b\u3089train\u3068\u3044\u3046\u540d\u306e\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u4f7f\u3044\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u30c7\u30fc\u30bf\u5168\u90e8\u3092\u4f7f\u3046\u306873MB\u3068\u304b\u306a\u308a\u306e\u30c7\u30fc\u30bf\u91cf\u306e\u305f\u3081\u3001\u5206\u304b\u308a\u3084\u3059\u3055\u3092\u512a\u5148\u3057\u30660\u301c9\u306e\u5404\u6570\u5b57\u304b\u308920\u500b\u305a\u3064\u3001\u8a08200\u500b\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u305f\u30c7\u30fc\u30bf\u306f[\u3053\u3053](https://www.dropbox.com/s/qos6njxc48zrs3f/train_small.csv?dl=0)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u624b\u66f8\u304d\u6570\u5b57\u30c7\u30fc\u30bf\u306fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u306a\u3063\u3066\u3044\u3066\n```8, 0, 0, 0, 128, ... , 54, 23, 0, 0  \n```\u306e\u3088\u3046\u306b\u30011\u6841\u76ee\u306f\u3069\u306e\u6570\u5b57\u304c\u66f8\u304b\u308c\u305f\u304b\u3092\u8868\u3059\u30e9\u30d9\u30eb\u3001\u305d\u308c\u4ee5\u964d\u306e\u6841\u306f28x28=784\u30d4\u30af\u30bb\u30eb\u5206\u306e\u6570\u5b57\u30c7\u30fc\u30bf\u304c\u7d9a\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.cm as cm\n```\n\n\u305d\u3057\u3066\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u914d\u5217\u306b\u683c\u7d0d\u3001\u30e9\u30d9\u30eb\u9806\u3067\u30bd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```py\nsize = 28\nraw_data= np.loadtxt('train_small.csv',delimiter=',',skiprows=1)\n\ndigit_data = []\nfor i in range(len(raw_data)):\n    digit_data.append((raw_data[i,0],raw_data[i,1:785]))\n\ndigit_data.sort(key=lambda x: x[0]) # sort array by label\n```\n\n\u307e\u305a\u306f\u8aad\u307f\u8fbc\u3093\u3060\u30c7\u30fc\u30bf\u304c\u3069\u3093\u306a\u753b\u50cf\u306a\u306e\u304b\u3001\u30a4\u30e1\u30fc\u30b8\u3067\u8868\u793a\u3057\u3066(matplotlib\u306epcolor\u30b0\u30e9\u30d5\u3067)\u307f\u3066\u307f\u307e\u3059\u3002\n\n```py\n\n# draw digit images\nplt.figure(figsize=(15, 15))\n\nfor i in range(len(digit_data)):\n    X, Y = np.meshgrid(range(size),range(size))\n    Z = digit_data[i][1].reshape(size,size)   # convert from vector to 28x28 matrix\n    Z = Z[::-1,:]             # flip vertical\n    plt.subplot(10, 20, i+1)  # layout 200 cells\n    plt.xlim(0,27)\n    plt.ylim(0,27)\n    plt.pcolor(X, Y, Z)\n    plt.flag()\n    plt.gray()\n    plt.tick_params(labelbottom=\"off\")\n    plt.tick_params(labelleft=\"off\")\n    \nplt.show()\n```\n\n![digit_list.png](https://qiita-image-store.s3.amazonaws.com/0/50670/16999fce-690d-7836-8823-b1f5176c15f2.png)\n\n\"2\"\u306e8\u756a\u76ee\u306e\u30c7\u30fc\u30bf\u304c\u3059\u3054\u3044\u3067\u3059\u306d\u3001\"2\"\u306e\u9762\u5f71\u304c\u3042\u308a\u307e\u305b\u3093(\u7b11) \"2\"\u3060\u3068\u8a00\u308f\u308c\u306a\u3051\u308c\u3070\u4eba\u9593\u3067\u3082\u5224\u5225\u3067\u304d\u306a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u30fb\u30fb\u30fb\n\u3053\u308c\u304c\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\n\n##\u5404\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u3092\u53d6\u3063\u3066\u307f\u308b##\n\n###\u76f8\u95a2\u884c\u5217\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b###\n\u3053\u306e28x28=784\u30d4\u30af\u30bb\u30eb\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u3092\u3001784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u5404\u8981\u7d20\u3092\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306e\u6fc3\u3055\u3068\u3057\u3066\u76f8\u95a2\u884c\u5217\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u5358\u7d14\u306b\u76f8\u95a2\u3092\u3068\u308b\u3053\u3068\u304c\u3069\u306e\u7a0b\u5ea6\u610f\u5473\u3092\u6301\u3064\u304b\u306f\u8ab2\u984c\u3067\u3059\u304c\u3001\u7c21\u6613\u306a\u65b9\u6cd5\u3067\u753b\u50cf\u540c\u58eb\u306e\u8fd1\u3055\u304c\u591a\u5c11\u306f\u8868\u305b\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\n200x200\u306e\u884c\u5217\u306a\u306e\u3067\u6570\u5b57\u306b\u3057\u3066\u3082\u5168\u304f\u7406\u89e3\u3067\u304d\u306a\u3044\u306e\u3067\u30a4\u30e1\u30fc\u30b8\u3092\u3064\u304b\u3080\u305f\u3081\u30b0\u30e9\u30d5\u3067\u8868\u3057\u307e\u3059\u3002\n\n![corr.png](https://qiita-image-store.s3.amazonaws.com/0/50670/b64a1d95-8d10-1a47-d539-c29878777521.png)\n\n\u306a\u304b\u306a\u304b\u58ee\u89b3\u306a\u30b0\u30e9\u30d5\u3067\u3059\u306d\uff08\u7b11\uff09\n\n\u5b8c\u5168\u306a\u5bfe\u89d2\u6210\u5206\u306f\u3001\u540c\u3058\u30c7\u30fc\u30bf\u306a\u306e\u3067\u76f8\u95a2\u304c1\u3067\u3059\u3002\u8584\u76ee\u3067\u898b\u3066\u307f\u308b\u3068\u5bfe\u89d2\u30d6\u30ed\u30c3\u30af\uff08\u540c\u3058\u6570\u5b57\u540c\u58eb\u306e\u76f8\u95a2\u4fc2\u6570\uff09\u304c\u3061\u3087\u3063\u3068\u6fc3\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\"1\"\u306f\u78ba\u5b9f\u306b\u76f8\u95a2\u304c\u9ad8\u3044\u3067\u3059\u3002\n\npython\u3067\u306e\u8a08\u7b97\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```py\ndata_mat = []\n\n# convert list to ndarray\nfor i in range(len(digit_data)):\n    label = digit_data[i][0]\n    data_mat.append(digit_data[i][1])\n\nA = np.array(data_mat)\nZ = np.corrcoef(A)      # generate correlation matrix\n\narea_size = len(digit_data)\nX, Y = np.meshgrid(range(area_size),range(area_size)) \n```\n\n###\u95be\u5024\u3092\u8a2d\u3051\u3066\u898b\u3084\u3059\u304f\u3059\u308b###\n\u3082\u3046\u3061\u3087\u3063\u3068\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u95be\u5024\u3092\u8a2d\u3051\u3092\u3001\u76f8\u95a2\u4fc2\u6570\u304c\u305d\u308c\u8d85\u3048\u3066\u3044\u308b\u3082\u306e\u30921, \u672a\u6e80\u306e\u3082\u306e\u30920\u30682\u5024\u5316\u3057\u3066\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\u95be\u5024\u3068\u3057\u30660.5, 0.6\u3092\u9078\u3093\u3067\u3044\u307e\u3059\u304c\u6063\u610f\u7684\u306a\u3082\u306e\u3067\u3001\u3044\u304f\u3064\u304b\u8a66\u3057\u3066\u5bfe\u89d2\u6210\u5206\u304c\u6d6e\u304d\u4e0a\u304c\u308a\u59cb\u3081\u305f\u3082\u306e\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u30020.6\u306e\u3082\u306e\u3092\u898b\u308b\u3068\u3060\u3044\u3076\u5bfe\u89d2\u30d6\u30ed\u30c3\u30af\u3068\u3001\u305d\u308c\u4ee5\u5916\u3067\u5dee\u304c\u3042\u308b\u3088\u3046\u306b\u898b\u3048\u3066\u304d\u307e\u3057\u305f\u3002\"9\"\u3068\"7\"\u304c\u4f3c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u8868\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\"2\"\u306f\u7279\u306b\"2\"\u540c\u58eb\u306e\u76f8\u95a2\u304c\u4f4e\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n![corr2.png](https://qiita-image-store.s3.amazonaws.com/0/50670/d5a0fb4c-6a04-c3ac-3f0a-2512591bfd15.png)\n\n\n![corr4.png](https://qiita-image-store.s3.amazonaws.com/0/50670/2dee225d-1231-82e2-425c-be9b93b6992f.png)\n\n\n```py\n\nplt.clf()\nplt.figure(figsize=(10, 10))\nplt.xlim(0,area_size-1)\nplt.ylim(0,area_size-1)\nplt.title(\"Correlation matrix of digit charcter vector. (corr>0.5)\")\n\nthresh = .5 \nZ1 = Z.copy()\nZ1[Z1 > thresh] = 1\nZ1[Z1 <= thresh] = 0\n\nplt.pcolor(X, Y, Z1, cmap=cm.get_cmap('Blues'),alpha=0.6)\nplt.xticks([(i * 20) for i in range(10)],range(10))\nplt.yticks([(i * 20) for i in range(10)],range(10))\nplt.grid(color='deeppink',linestyle='--')\nplt.show()\n```\n\n###\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306e\u5e73\u5747\u5024###\n\u6700\u5f8c\u306b\u3001\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306e\u5e73\u5747\u5024\u309210x10\u306e\u30b0\u30e9\u30d5\u3067\u8868\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n![corr3.png](https://qiita-image-store.s3.amazonaws.com/0/50670/6574c2be-971c-8842-0260-764fa2253d27.png)\n\n```py\n\nsummary_Z = np.zeros(100).reshape(10,10)\n\nfor i in range(10):\n    for j in range(10):\n        i1 = i * 20\n        j1 = j * 20\n        #print \"[%d:%d,%d:%d]\" % (i1,i1+20,j1,j1+20)\n        if i==j:\n            # \u5bfe\u89d2\u6210\u5206\u306f1\u306b\u6c7a\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5024\u304c\u4e0a\u3076\u308c\u3059\u308b\u306e\u3092\u907f\u3051\u308b\u305f\u3081\u9664\u3044\u3066\u5e73\u5747\u3092\u3068\u308b\n            summary_Z[i,j] = (np.sum(Z[i1:i1+20,j1:j1+20])-20)/380\n        else:\n            summary_Z[i,j] = np.sum(Z[i1:i1+20,j1:j1+20])/400\n\n# average of each digit's grid\nplt.clf()\nplt.figure(figsize=(10, 10))\nplt.xlim(0,10)\nplt.ylim(0,10)\n\nsX, sY = np.meshgrid(range(11),range(11))\nplt.title(\"Correlation matrix of summuation of each digit's cell\")\nplt.xticks(range(10),range(10))\nplt.yticks(range(10),range(10))\nplt.pcolor(sX, sY, summary_Z, cmap=cm.get_cmap('Blues'),alpha=0.6)\nplt.show()            \n```\n\n\n###\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u5411\u3051\u3066###\n\n\u4eca\u56de\u306f\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u3092784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3068\u307f\u306a\u3057\u3066\u3001\u305d\u306e\u30d9\u30af\u30c8\u30eb\u9593\u306e\u305d\u306e\u307e\u307e\u76f8\u95a2\u3092\u3068\u308b\u3068\u3044\u3046\u3001\u3042\u308b\u610f\u5473\u4e71\u66b4\u306a\u5206\u6790\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u672c\u6765\u753b\u50cf\u30c7\u30fc\u30bf\u306f2\u6b21\u5143\u306a\u306e\u3067\u3001\u4e0a\u4e0b\u5de6\u53f3\u7b49\u8fd1\u96a3\u30d4\u30af\u30bb\u30eb\u306e\u5024\u3082\u8003\u616e\u3057\u305f\u8fd1\u3055\u3092\u691c\u8a0e\u3057\u305f\u65b9\u304c\u3088\u308a\u3082\u3063\u3068\u3082\u3089\u3057\u3044\u753b\u50cf\u540c\u58eb\u306e\u8fd1\u3055\u304c\u8868\u73fe\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u3060\u3001\u3053\u306e\u6bb5\u968e\u3060\u3068\u6a5f\u68b0\u5b66\u7fd2\u4ee5\u524d\u3067\u3059\u306d\u3002\u3067\u3082\u3001\u4ee5\u5916\u3068\u5bfe\u89d2\u6210\u5206\u304c\u304d\u3061\u3093\u3068\u3067\u3066\u3044\u307e\u3057\u305f\u3002\u3082\u3046\u5c11\u3057\u672c\u683c\u7684\u306a\u3053\u3068\u306f\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3068\u3057\u3066[\u6b21\u56de\u306e\u8a18\u4e8b](http://qiita.com/kenmatsu4/items/2d21466078917c200033)\u3067\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Python2.7", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning", "\u7d71\u8a08\u5b66"]}