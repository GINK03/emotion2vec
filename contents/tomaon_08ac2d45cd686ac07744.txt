{"context": " More than 1 year has passed since last update.OTP\u306f\u3068\u3063\u3066\u3082\u4fbf\u5229\uff01\u3001\u3068\u306f\u3044\u3044\u3064\u3064\u3082\u3001\u4f3c\u305f\u51e6\u7406\u3092\u3084\u305f\u3089\u66f8\u3044\u3066\u3044\u308b\u3068\n\u6700\u8fd1\uff08\u3084\u3063\u3068\uff09\u6c17\u4ed8\u3044\u305f\u306e\u3067\u3001\u305d\u308c\u3089\u3092 oreore-lib \u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\u3067\u3001\u305d\u306e\u6700\u4e2d\u3001\u3053\u306e\u5b58\u5728\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\uff1e application:ensure_all_started/1,2 \nR16B02 \u304b\u3089\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u81ea\u524d\u3068\u306f\u9055\u3063\u3066\u3044\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u81ea\u524d\u3060\u3068\u3053\u3093\u306a\u3002\n\nbaseline_app.erl\n-spec ensure_start(atom()) -> ok|{error,_}.\nensure_start(Application)\n  when is_atom(Application) ->\n    ensure_start(Application, temporary).\n\n-spec ensure_start(atom()|[atom()],atom()) -> ok|{error,_}.\nensure_start([], Type)\n  when is_atom(Type) ->\n    ok;\nensure_start([H|T]=L, Type)\n  when is_atom(H), is_atom(Type) ->\n    case application:start(H, Type) of\n        ok ->\n            ensure_start(T, Type);\n        {error, {already_started,H}} ->\n            ensure_start(T, Type);\n        {error, {not_started,Application}} ->\n            ensure_start([Application|L], Type);\n        {error, Reason} ->\n            {error, Reason}\n    end;\nensure_start(Application, Type)\n  when is_atom(Application), is_atom(Type) ->\n    ensure_start([Application], Type).\n\n\n\u3053\u308c\u3092\n\nsample.erl\n-spec start() -> ok|{error,_}.\nstart() ->\n    start(temporary).\n\n-spec start(atom()) -> ok|{error,_}.\nstart(Type)\n  when is_atom(Type) ->\n    baseline_app:ensure_start(?MODULE, Type).\n\n\n\u307f\u305f\u3044\u306b\u3002crypto\u306b\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\u300c\u8d77\u52d5\uff08\u3057\u305f\uff5c\u3057\u3066\u305f\uff09\u4e00\u89a7\u300d\u3063\u3066\u3001\u3001\u8981\u308a\u307e\u3059\u304b\uff1f\n\n**OTP\u306f\u3068\u3063\u3066\u3082\u4fbf\u5229\uff01**\u3001\u3068\u306f\u3044\u3044\u3064\u3064\u3082\u3001\u4f3c\u305f\u51e6\u7406\u3092\u3084\u305f\u3089\u66f8\u3044\u3066\u3044\u308b\u3068\n\u6700\u8fd1\uff08\u3084\u3063\u3068\uff09\u6c17\u4ed8\u3044\u305f\u306e\u3067\u3001\u305d\u308c\u3089\u3092 oreore-lib \u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\n\u3067\u3001\u305d\u306e\u6700\u4e2d\u3001\u3053\u306e\u5b58\u5728\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\uff1e [application:ensure_all_started/1,2](http://www.erlang.org/doc/apps/kernel/application.html#ensure_started-1) \n\nR16B02 \u304b\u3089\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001\u81ea\u524d\u3068\u306f\u9055\u3063\u3066\u3044\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n[\u81ea\u524d](https://github.com/tomaon/baseline/blob/master/src/baseline_app.erl)\u3060\u3068\u3053\u3093\u306a\u3002\n\n```erlang:baseline_app.erl\n-spec ensure_start(atom()) -> ok|{error,_}.\nensure_start(Application)\n  when is_atom(Application) ->\n    ensure_start(Application, temporary).\n\n-spec ensure_start(atom()|[atom()],atom()) -> ok|{error,_}.\nensure_start([], Type)\n  when is_atom(Type) ->\n    ok;\nensure_start([H|T]=L, Type)\n  when is_atom(H), is_atom(Type) ->\n    case application:start(H, Type) of\n        ok ->\n            ensure_start(T, Type);\n        {error, {already_started,H}} ->\n            ensure_start(T, Type);\n        {error, {not_started,Application}} ->\n            ensure_start([Application|L], Type);\n        {error, Reason} ->\n            {error, Reason}\n    end;\nensure_start(Application, Type)\n  when is_atom(Application), is_atom(Type) ->\n    ensure_start([Application], Type).\n```\n\n\u3053\u308c\u3092\n\n```erlang:sample.erl\n-spec start() -> ok|{error,_}.\nstart() ->\n    start(temporary).\n\n-spec start(atom()) -> ok|{error,_}.\nstart(Type)\n  when is_atom(Type) ->\n    baseline_app:ensure_start(?MODULE, Type).\n```\n\n\u307f\u305f\u3044\u306b\u3002[crypto](http://www.erlang.org/doc/man/crypto.html)\u306b\u3057\u304b\u4f7f\u3063\u3066\u306a\u3044\u3093\u3067\u3059\u3051\u3069\u306d\u3002\n\n\u300c\u8d77\u52d5\uff08\u3057\u305f\uff5c\u3057\u3066\u305f\uff09\u4e00\u89a7\u300d\u3063\u3066\u3001\u3001\u8981\u308a\u307e\u3059\u304b\uff1f", "tags": ["Erlang"]}