{"context": " More than 1 year has passed since last update.\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u3067\u3054\u3056\u3044\u307e\u3059\u304c\n\uff13\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u885d\u7a81\u306b\u3064\u3044\u3066\n\u5f53\u65b9\u306f\u304b\u306a\u308a\u624b\u3053\u305a\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u6295\u7a3f\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\nimport SpriteKit\nclass GameScene: SKScene, SKPhysicsContactDelegate {\nlet whiteCategory:  UInt32 = 0x1 << 0\nlet blackCategory:    UInt32 = 0x1 << 1\nlet blueCategory:   UInt32 = 0x1 << 2\n\n\noverride func didMoveToView(view: SKView) {\n\n\n    self.physicsWorld.contactDelegate = self\n\n    self.size = view.bounds.size\n    self.physicsBody = SKPhysicsBody(edgeLoopFromRect: self.frame)\n    self.physicsWorld.gravity = CGVectorMake(0.0, -3.0)\n\n\n    let blackSquare = SKSpriteNode(color: UIColor.blackColor(), size: CGSizeMake(50, 50))\n    blackSquare.position = CGPoint(\n        x: CGRectGetMidX(self.frame),\n        y: CGRectGetMidY(self.frame)\n    )\n    blackSquare.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n    blackSquare.physicsBody?.affectedByGravity = false\n    blackSquare.physicsBody?.dynamic = false\n\n\n    blackSquare.physicsBody?.categoryBitMask = blackCategory\n    blackSquare.physicsBody?.contactTestBitMask = whiteCategory\n\n\n    let blueSquare = SKSpriteNode(color: UIColor.blueColor(), size: CGSizeMake(50, 50))\n    blueSquare.position = CGPoint(\n        x: CGRectGetMidX(self.frame) - 100,\n        y: CGRectGetMidY(self.frame) - 100\n    )\n    blueSquare.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n    blueSquare.physicsBody?.affectedByGravity = false\n    blueSquare.physicsBody?.dynamic = false\n\n//(2)\n//        blackSquare.physicsBody?.categoryBitMask = blueCategory\n//        blackSquare.physicsBody?.contactTestBitMask = whiteCategory\n    blueSquare.physicsBody?.categoryBitMask = blueCategory\n    blueSquare.physicsBody?.contactTestBitMask = whiteCategory\n\n\n    self.addChild(blackSquare)\n    self.addChild(blueSquare)\n}\n\noverride func touchesBegan(touches: NSSet, withEvent event: UIEvent) {\n\n\n    for touch in touches {\n\n        let location = touch.locationInNode(self)\n        let whiteRectangle = SKSpriteNode(color: UIColor.whiteColor(), size: CGSizeMake(50, 50))\n        whiteRectangle.position = location\n        whiteRectangle.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n\n\n        whiteRectangle.physicsBody?.categoryBitMask = whiteCategory\n\n//         whiteRectangle.physicsBody?.contactTestBitMask = blackCategory\n    //        whiteRectangle.physicsBody?.contactTestBitMask = blueCategory\n        self.addChild(whiteRectangle)\n    }\n\n}\n\noverride func update(currentTime: CFTimeInterval) {\n}\n\n\nfunc didBeginContact(contact: SKPhysicsContact!) {\n\n    var firstBody, secondBody: SKPhysicsBody\n\n\n    if contact.bodyA.categoryBitMask < contact.bodyB.categoryBitMask {\n        firstBody = contact.bodyA\n        secondBody = contact.bodyB\n        //thirdBody = contact.bodyB\n    } else {\n        firstBody = contact.bodyB\n        secondBody = contact.bodyA\n       // thirdBody = contact.bodyA\n    }\n\n\n    if firstBody.categoryBitMask & whiteCategory != 0 &&\n        secondBody.categoryBitMask & blackCategory != 0 {\n            //secondBody.node?.removeFromParent()\n            println(\"black\")\n    }\n\n\n    if firstBody.categoryBitMask & whiteCategory != 0 &&\n        secondBody.categoryBitMask & blueCategory != 0 {\n            //secondBody.node?.removeFromParent()\n            println(\"blue\")\n    }\n}\n\n}\n\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u3067\u3054\u3056\u3044\u307e\u3059\u304c\n\uff13\u3064\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u885d\u7a81\u306b\u3064\u3044\u3066\n\u5f53\u65b9\u306f\u304b\u306a\u308a\u624b\u3053\u305a\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u6295\u7a3f\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\n\n![contact1 (1).gif](https://qiita-image-store.s3.amazonaws.com/0/55102/ec1f8541-27b9-a7d1-271d-7ac3a751b631.gif)\n\n\n\nimport SpriteKit\n\nclass GameScene: SKScene, SKPhysicsContactDelegate {\n    \n\n    let whiteCategory:  UInt32 = 0x1 << 0\n    let blackCategory:    UInt32 = 0x1 << 1\n    let blueCategory:   UInt32 = 0x1 << 2\n\n    \n    override func didMoveToView(view: SKView) {\n        \n\n        self.physicsWorld.contactDelegate = self\n        \n        self.size = view.bounds.size\n        self.physicsBody = SKPhysicsBody(edgeLoopFromRect: self.frame)\n        self.physicsWorld.gravity = CGVectorMake(0.0, -3.0)\n        \n\n        let blackSquare = SKSpriteNode(color: UIColor.blackColor(), size: CGSizeMake(50, 50))\n        blackSquare.position = CGPoint(\n            x: CGRectGetMidX(self.frame),\n            y: CGRectGetMidY(self.frame)\n        )\n        blackSquare.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n        blackSquare.physicsBody?.affectedByGravity = false\n        blackSquare.physicsBody?.dynamic = false\n        \n\n        blackSquare.physicsBody?.categoryBitMask = blackCategory\n        blackSquare.physicsBody?.contactTestBitMask = whiteCategory\n        \n\n        let blueSquare = SKSpriteNode(color: UIColor.blueColor(), size: CGSizeMake(50, 50))\n        blueSquare.position = CGPoint(\n            x: CGRectGetMidX(self.frame) - 100,\n            y: CGRectGetMidY(self.frame) - 100\n        )\n        blueSquare.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n        blueSquare.physicsBody?.affectedByGravity = false\n        blueSquare.physicsBody?.dynamic = false\n        \n\n//(2)\n//        blackSquare.physicsBody?.categoryBitMask = blueCategory\n//        blackSquare.physicsBody?.contactTestBitMask = whiteCategory\n        \n        blueSquare.physicsBody?.categoryBitMask = blueCategory\n        blueSquare.physicsBody?.contactTestBitMask = whiteCategory\n        \n\n        self.addChild(blackSquare)\n        self.addChild(blueSquare)\n    }\n    \n    override func touchesBegan(touches: NSSet, withEvent event: UIEvent) {\n        \n\n        for touch in touches {\n            \n            let location = touch.locationInNode(self)\n            let whiteRectangle = SKSpriteNode(color: UIColor.whiteColor(), size: CGSizeMake(50, 50))\n            whiteRectangle.position = location\n            whiteRectangle.physicsBody = SKPhysicsBody(rectangleOfSize: CGSizeMake(50, 50))\n            \n\n            whiteRectangle.physicsBody?.categoryBitMask = whiteCategory\n   //         whiteRectangle.physicsBody?.contactTestBitMask = blackCategory\n    //        whiteRectangle.physicsBody?.contactTestBitMask = blueCategory\n            \n            self.addChild(whiteRectangle)\n        }\n        \n    }\n    \n    override func update(currentTime: CFTimeInterval) {\n    }\n    \n\n    func didBeginContact(contact: SKPhysicsContact!) {\n        \n        var firstBody, secondBody: SKPhysicsBody\n        \n\n        if contact.bodyA.categoryBitMask < contact.bodyB.categoryBitMask {\n            firstBody = contact.bodyA\n            secondBody = contact.bodyB\n            //thirdBody = contact.bodyB\n        } else {\n            firstBody = contact.bodyB\n            secondBody = contact.bodyA\n           // thirdBody = contact.bodyA\n        }\n        \n\n        if firstBody.categoryBitMask & whiteCategory != 0 &&\n            secondBody.categoryBitMask & blackCategory != 0 {\n                //secondBody.node?.removeFromParent()\n                println(\"black\")\n        }\n        \n\n        if firstBody.categoryBitMask & whiteCategory != 0 &&\n            secondBody.categoryBitMask & blueCategory != 0 {\n                //secondBody.node?.removeFromParent()\n                println(\"blue\")\n        }\n    }\n}\n", "tags": ["Swift", "Xcode6", "SpriteKit"]}