{"context": "Nextremer Advent Calender 2016\u306e15\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n2016\u5e74\u3082\u3082\u3046\u3059\u3050\u7d42\u308f\u308a\u3067\u3059\u304c\uff0c\u4eca\u5e74\u3082\u69d8\u3005\u306a\u30cb\u30e5\u30fc\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\u30c9\u30ca\u30eb\u30c9\u30fb\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u5927\u7d71\u9818\u9078\u52dd\u5229\u306f\uff0c\u305d\u306e\u4e2d\u3067\u3082\u7279\u306b\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u5f37\u3044\u51fa\u6765\u4e8b\u3060\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30c6\u30ec\u30d3\u3067\u306f\u3088\u304f\u898b\u307e\u3059\u304c\uff0c\u304d\u3061\u3093\u3068\u30b9\u30d4\u30fc\u30c1\u3092\u805e\u3044\u305f\u3053\u3068\u306f\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u6f14\u8aac\u6587\u3092\u8aad\u3093\u3067\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u82f1\u8a9e\u306f\u82e6\u624b\u306a\u306e\u3067\uff0c\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30673\u884c\u304f\u3089\u3044\u306b\u7e2e\u3081\u307e\u3059\uff0e\n\n\u306f\u3058\u3081\u306b\n\u8981\u7d04\u306e\u4ed5\u65b9\u306f\u5927\u304d\u304f\u306f2\u3064\u306b\u5206\u3051\u3089\u308c\u307e\u3059\uff0e\n\n\u62bd\u51fa\u7684\u8981\u7d04\n\n\n\u91cd\u8981\u6587\u62bd\u51fa\n\n\n\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u91cd\u8981\u306a\u6587\u3092\u629c\u304d\u51fa\u3059\n\n\n\u6587\u77ed\u7e2e\n\n\n\u5404\u6587\u3092\u77ed\u7e2e\u3059\u308b\n\n\n\n\n\u751f\u6210\u7684\u8981\u7d04\n\n\n\u62bd\u51fa\u8981\u7d04\u4ee5\u5916\u306e\u8981\u7d04\n\n\n\n\u751f\u6210\u7684\u8981\u7d04\u306f\u975e\u5e38\u306b\u96e3\u6613\u5ea6\u304c\u9ad8\u304f\uff0c\u73fe\u5728\u30e1\u30a4\u30f3\u3067\u7814\u7a76\u304c\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306f\u307b\u3068\u3093\u3069\u304c\u62bd\u51fa\u7684\u4e88\u7d04\u3067\u3059\uff0e\n\u4eca\u56de\u5b9f\u88c5\u3059\u308bLexRank\u3082\u62bd\u51fa\u7684\u8981\u7d04\u306b\u5c5e\u3057\uff0c\u6587\u7ae0\u4e2d\u306e\u91cd\u8981\u6587\u62bd\u51fa\u3092\u884c\u3044\u307e\u3059\uff0e\n\nLexRank\u3068\u306f\uff1f\nLexRank\u306fPageRank\u306b\u7740\u60f3\u3092\u5f97\u305f\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e\nPageRank\u306fGoogle\u5275\u696d\u8005\u306eL.Page\u3068S.Brin\u304c\u8003\u6848\u3057\u305fWeb\u30da\u30fc\u30b8\u306e\u91cd\u8981\u5ea6\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u30ea\u30f3\u30af\u69cb\u9020\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u3068\u3057\u3066\u6349\u3048\uff0c\u30da\u30fc\u30b8\u306e\u91cd\u8981\u5ea6\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\uff0e\n\u30ce\u30fc\u30c9\uff1aWeb\u30da\u30fc\u30b8\n\u30a8\u30c3\u30b8\uff1a\u30ea\u30f3\u30af\n\u30ce\u30fc\u30c9\u306e\u91cd\u8981\u5ea6\uff1a\n    1. \u591a\u304f\u306e\u30da\u30fc\u30b8\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u91cd\u8981\u306a\u30da\u30fc\u30b8\n    2. \u91cd\u8981\u306a\u30da\u30fc\u30b8\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u91cd\u8981\u306a\u30da\u30fc\u30b8\n\nLexRank\u3082PageRank\u3068\u540c\u69d8\u306b\u6587\u7ae0\u3092\u30b0\u30e9\u30d5\u3068\u3057\u3066\u6349\u3048\u307e\u3059\uff0e\n\u30ce\u30fc\u30c9\uff1a\u6587\n\u30a8\u30c3\u30b8\uff1a2\u6587\u9593\u306e\u985e\u4f3c\u5ea6(1 | 0)\n\u30ce\u30fc\u30c9\u306e\u91cd\u8981\u5ea6\uff1a\n    1. \u591a\u304f\u306e\u6587\u3068\u985e\u4f3c\u3059\u308b\u6587\u306f\u91cd\u8981\u306a\u6587\n    2. \u91cd\u8981\u306a\u6587\u3068\u985e\u4f3c\u3059\u308b\u6587\u306f\u91cd\u8981\u306a\u6587\n\n\u3053\u3053\u3067\u3044\u3046\u985e\u4f3c\u5ea6\u306f\u7c21\u5358\u306b\u3044\u3048\u30702\u6587\u304c\u3069\u308c\u3060\u3051\u5171\u901a\u306e\u5358\u8a9e\u3092\u6301\u3064\u304b\uff0c\u3067\u3059\uff0e\nLexRank\u306f\u30b0\u30e9\u30d5\u69cb\u9020\u306e\u307f\u3067\u91cd\u8981\u5ea6\u3092\u8a55\u4fa1\u3057\u307e\u3059\u304c\uff0c\u8003\u6848\u3055\u308c\u305f2004\u5e74\u5f53\u6642\uff0cDUC2004\u306b\u3066\u6700\u3082\u826f\u3044\u7cbe\u5ea6\u3092\u8a87\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\n\u610f\u5473\u89e3\u6790\u305b\u305a\u306b\u9ad8\u7cbe\u5ea6\u306b\u8981\u7d04\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\uff0c\u3068\u3066\u3082\u9762\u767d\u304f\u611f\u3058\u307e\u3059\uff0e\nLexRank\u306e\u8a08\u7b97\u5f0f\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\nInput: n \u500b\u306e\u6587\u304b\u3089\u306a\u308b\u914d\u5217 S, \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306e\u95be\u5024 t\nOutput: \u5404\u6587\u306eLexRank\u30b9\u30b3\u30a2\u3092\u683c\u7d0d\u3057\u305f\u914d\u5217L\n\nArray CosineMatrix[n][n];\nArray Degree[n];\nArray L[n];\n\nfor i <- 1 to n do\n    for j <- 1 to n do\n        CosineMatrix[i][j] = idf-modified-cosine(S[i], S[j]);\n        if CosineMatrix[i][j] > t then\n            CosineMatrix[i][j] = 1;\n            Degree[i]++;\n        end\n        else\n            CosineMatrix[i][j] = 0;\n        end\n    end\nend\nfor i <- 1 to n do\n    for j<- 1 to n do\n        CosineMatrix[i][j] = CosineMatrix[i][j] / Degree[i]\n    end\nend\n\nL = PowerMethod(CosineMatrix, n, \u03b5);\n\nreturn L\n\n\n(\u5f15\u7528\uff1a\u300cLexRank: Graph-based Lexical Centrality as Salience in Text Summarization\u300dAlogorithm 3)\n\nidf-modified-cosine \u306f2\u6587\u9593\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\uff0e\nPowerMethod \u306fPageRank\u306e\u8a08\u7b97\uff0e\n\u3067\u3059\uff0e\n\u3067\u306f\uff0c\u5b9f\u969b\u306b\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Python\u3067\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n\u5b9f\u88c5\nimport math\nimport numpy\n\ndef lex_rank(sentences, n, t):\n    \"\"\"\n    LexRank\u3067\u6587\u7ae0\u3092\u8981\u7d04\u3059\u308b\uff0e\n    @param  sentences: list\n        \u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u6587\u30ea\u30b9\u30c8)\n    @param  n: int\n        \u6587\u7ae0\u306b\u542b\u307e\u308c\u308b\u6587\u306e\u6570\n    @param  t: float\n        \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306e\u95be\u5024(default 0.1)\n    @return : list\n        LexRank\n    \"\"\"\n    cosine_matrix = numpy.zeros((n, n))\n    degrees = numpy.zeros((n,))\n    l = []\n\n     # 1. \u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\n    for i in range(n):\n        for j in range(n):\n            cosine_matrix[i][j] = idf_modified_cosine(sentences, sentences[i], sentences[j])\n            if cosine_matrix[i][j] > t:\n                cosine_matrix[i][j] = 1\n                degrees[i] += 1\n            else:\n                cosine_matrix[i][j] = 0\n\n    # 2.LexRank\u8a08\u7b97\n    for i in range(n):\n        for j in range(n):\n            cosine_matrix[i][j] = cosine_matrix[i][j] / degrees[i]\n\n    ratings = power_method(cosine_matrix, n)\n\n    return zip(sentences, ratings)\n\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6a5f\u80fd\u5225\u306b \n\n\u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\nLexRank\u8a08\u7b97\n\u306e2\u30d6\u30ed\u30c3\u30af\u306b\u5206\u3051\u3089\u308c\u307e\u3059\uff0e\n\n\u3053\u3053\u3067\u306f\u5404\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n1. \u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\n\u96a3\u63a5\u884c\u5217\u306f\u30b0\u30e9\u30d5\u8868\u73fe\u306e\u305f\u3081\u306e\u884c\u5217\u3067\u3059\uff0e\n\u30ce\u30fc\u30c9\u9593\u306b\u30a8\u30c3\u30b8\u304c\u5b58\u5728\u3059\u308c\u30701\uff0c\u5b58\u5728\u3057\u306a\u3051\u308c\u30700\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u30b0\u30e9\u30d5\u8868\u73fe\u3057\u307e\u3059\uff0e\nLexRank\u3067\u306f2\u6587\u9593\u306e\u985e\u4f3c\u5ea6\u304c\u95be\u5024t\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u30a8\u30c3\u30b8\u3067\u7d50\u3073\u307e\u3059\uff0e\n\u985e\u4f3c\u5ea6\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\ndef idf_modified_cosine(sentences, sentence1, sentence2):\n    \"\"\"\n    2\u6587\u9593\u306e\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\n    @param  sentence1: list\n        \u65871([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @param  sentence2: list\n        \u65872([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @param  sentences: list\n        \u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @return : float\n        \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\n    \"\"\"\n    tf1 = compute_tf(sentence1)\n    tf2 = compute_tf(sentence2)\n    idf_metrics = compute_idf(sentences)\n    return cosine_similarity(sentence1, sentence2, tf1, tf2, idf_metrics)\n\nTF\u306f\u6587\u4e2d\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\uff0e(\u591a\u3044\u307b\u3069\u91cd\u8981)\nIDF\u306f\u6587\u66f8\u5168\u4f53\u3067\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\uff0e(\u5c11\u306a\u3044\u307b\u3069\u91cd\u8981)\n\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f\u30d9\u30af\u30c8\u30eb\u9593\u306e\u985e\u4f3c\u5ea6\u3092\u4f59\u5f26\u3067\u6c42\u3081\u308b\u3082\u306e\u3067\u3059\uff0e\n\u3053\u308c\u3089\u306b\u95a2\u3057\u3066\u306f\u77e5\u3063\u3066\u308b\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0c\u7c21\u5358\u306b\u5b9f\u88c5\u3060\u3051\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\nfrom collection import Counter\n\n\ndef compute_tf(sentence):\n    \"\"\"\n    TF\u3092\u8a08\u7b97\n    @param  sentence: list\n        \u6587([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @return : list\n        TF\u30ea\u30b9\u30c8\n    \"\"\"\n    tf_values = Counter(sentence)\n    tf_metrics = {}\n\n    max_tf = find_tf_max(tf_values)\n\n    for term, tf in tf_values.items():\n        tf_metrics[term] = tf / max_tf\n\n    return tf_metrics\n\n\ndef find_tf_max(terms):\n    \"\"\"\n    \u5358\u8a9e\u306e\u6700\u5927\u51fa\u73fe\u983b\u5ea6\u3092\u63a2\u7d22\n    @param  terms: list\n        \u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\n    @return : int\n        \u5358\u8a9e\u306e\u6700\u5927\u51fa\u73fe\u983b\u5ea6\n    \"\"\"\n    return max(terms.values()) if terms else 1\n\n\ndef compute_idf(sentences):\n    \"\"\"\n    \u6587\u7ae0\u4e2d\u306e\u5358\u8a9e\u306eIDF\u5024\u3092\u8a08\u7b97\n    @param sentences: list\n        \u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @return: list\n        IDF\u30ea\u30b9\u30c8\n    \"\"\"\n    idf_metrics = {}\n    sentences_count = len(sentences)\n\n    for sentence in sentences:\n        for term in sentence:\n            if term not in idf_metrics:\n                n_j = sum(1 for s in sentences if term in s)\n                idf_metrics[term] = math.log(sentences_count / (1 + n_j))\n\n    return idf_metrics\n\n\ndef cosine_similarity(sentence1, sentence2, tf1, tf2, idf_metrics):\n    \"\"\"\n    \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\n    @param  sentence1: list\n        \u65871([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @param  sentence2: list\n        \u65872([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n    @param  tf1: list\n        \u65871\u306eTF\u30ea\u30b9\u30c8\n    @param  tf2: list\n        \u65872\u306eTF\u30ea\u30b9\u30c8\n    @param  idf_metrics: list\n        \u6587\u7ae0\u306eIDF\u30ea\u30b9\u30c8\n    @return : float\n        \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\n    \"\"\"\n    unique_words1 = set(sentence1)\n    unique_words2 = set(sentence2)\n    common_words = unique_words1 & unique_words2\n\n    numerator = sum((tf1[t] * tf2[t] * idf_metrics[t] ** 2) for t in common_words)\n    denominator1 = sum((tf1[t] * idf_metrics[t]) ** 2 for t in unique_words1)\n    denominator2 = sum((tf2[t] * idf_metrics[t]) ** 2 for t in unique_words2)\n\n    if denominator1 > 0 and denominator2 > 0:\n        return numerator / (math.sqrt(denominator1) * math.sqrt(denominator2))\n    else:\n        return 0.0    \n\n\u6700\u5f8c\u306b\uff0c\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u304ct\u4ee5\u4e0a\u3067\u3042\u308c\u30701\u3092\u4ee3\u5165\u3057\uff0c\u96a3\u63a5\u884c\u5217\u3092\u5b8c\u6210\u3055\u305b\u307e\u3059\uff0e\n\u6b21\u306f\u3053\u3053\u3067\u4f5c\u6210\u3057\u305f\u884c\u5217\u3092\u5143\u306bLexRank\u3092\u6c42\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\n2.LexRank\u8a08\u7b97\n\u3053\u3053\u304b\u3089\u306f\uff0c1.\u3067\u6c42\u3081\u305f\u96a3\u63a5\u884c\u5217\u3092\u5143\u306bLexRank\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u307e\u305a\u306f\u96a3\u63a5\u884c\u5217\u306e\u5404\u8981\u7d20\u3092degree(\u30ce\u30fc\u30c9\u306e\u6b21\u6570)\u3067\u5272\u308a\uff0c\u78ba\u7387\u884c\u5217\u306b\u5909\u63db\u3057\u307e\u3059\uff0e\n\u305d\u3057\u3066\uff0c\u3053\u306e\u78ba\u7387\u884c\u5217\u3092\u5143\u306b\u30de\u30eb\u30b3\u30d5\u5b9a\u5e38\u5206\u5e03\u3092\u6c42\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\u30de\u30eb\u30b3\u30d5\u9023\u9396\u306f\u975e\u5468\u671f\u7684\u3067\u5fc5\u305a\u53ce\u675f\u3059\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u3079\u304d\u4e57\u6cd5\u3067\u8ee2\u7f6e\u884c\u5217\u3092\u4e57\u7b97\u3057\uff0c\u03b5\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u53cd\u5fa9\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\uff0e\n\u3053\u3053\u3067\u6700\u7d42\u7684\u306b\u8a08\u7b97\u3055\u308c\u305f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u304cLexRank\u3068\u306a\u308a\u307e\u3059\uff0e\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\ndef power_method(cosine_matrix, n, e):\n    \"\"\"\n    \u3079\u304d\u4e57\u6cd5\u3092\u884c\u306a\u3046\n    @param  scosine_matrix: list\n        \u78ba\u7387\u884c\u5217\n    @param  n: int\n        \u6587\u7ae0\u4e2d\u306e\u6587\u306e\u6570\n    @param  e: float\n        \u8a31\u5bb9\u8aa4\u5dee\u03b5\n    @return: list\n        LexRank\n    \"\"\"\n    transposed_matrix = cosine_matrix.T\n    sentences_count = n\n\n    p_vector = numpy.array([1.0 / sentences_count] * sentences_count)\n\n    lambda_val = 1.0\n\n    while lambda_val > e:\n        next_p = numpy.dot(transposed_matrix, p_vector)\n        lambda_val = numpy.linalg.norm(numpy.subtract(next_p, p_vector))\n        p_vector = next_p\n\n    return p_vector\n\n\u3053\u308c\u3067\uff0cLexRank\u306b\u3088\u308b\u91cd\u8981\u5ea6\u8a08\u7b97\u304c\u7d42\u4e86\u3067\u3059\uff0e\n\u5bfe\u5fdc\u3059\u308bratings\u306e\u5024\u304c\u5927\u304d\u3044\u307b\u3069\u91cd\u8981\u5ea6\u304c\u9ad8\u3044\u6587\u3068\u306a\u308a\u307e\u3059\uff0e\n\n\u8981\u7d04\u7d50\u679c\n\u3067\u306f\uff0c\u5b9f\u969b\u306b\u8981\u7d04\u3057\u3066\u307f\u307e\u3059\uff0e\n\u8981\u7d04\u3059\u308b\u306e\u306f\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u5927\u7d71\u9818\u9078\u52dd\u5229\u6642\u306e\u30b9\u30d4\u30fc\u30c1\u3067\u3059\uff0e\n# lex_rank(document)\nGreat people.\nGreat brothers, sisters, great, unbelievable parents.\nWe're going to get to work immediately for the American people, and we're going to be doing a job that hopefully you will be so proud of your president.\n\n# \u7d20\u6674\u3089\u3057\u3044\u4eba\u3005\u3002\n# \u5049\u5927\u306a\u3001\u4fe1\u3058\u3089\u308c\u306a\u3044\u307b\u3069\u306e\u89aa\u3001\u5049\u5927\u306a\u5144\u5f1f\u3001\u59c9\u59b9\u3002\n# \u79c1\u305f\u3061\u306f\u30a2\u30e1\u30ea\u30ab\u306e\u4eba\u3005\u306e\u305f\u3081\u306b\u3059\u3050\u306b\u50cd\u304f\u3064\u3082\u308a\u3067\u3059\u3002\u79c1\u305f\u3061\u306f\u3042\u306a\u305f\u304c\u5927\u7d71\u9818\u3092\u3068\u3066\u3082\u8a87\u308a\u306b\u601d\u3046\u3053\u3068\u3092\u9858\u3063\u3066\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3046\u3093\uff0c\uff0c\uff0c\u307e\u3041\uff0c\u5927\u7d71\u9818\u9811\u5f35\u308b\u305e\uff01 \u3068\u3044\u3046\u610f\u6c17\u8fbc\u307f\u306f\u611f\u3058\u3089\u308c\u308b\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u7d42\u308f\u308a\u306b\n\u672c\u8a18\u4e8b\u3067\u306f\u81ea\u52d5\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\uff0c\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u6f14\u8aac\u3092\u8981\u7d04\u3057\u307e\u3057\u305f\uff0e\n\u30b0\u30e9\u30d5\u3067\u6587\u7ae0\u3092\u6349\u3048\u3089\u308c\u308b\u306e\u3067\uff0cLexRank\u306f\u30c6\u30ad\u30b9\u30c8\u5206\u6790\u306b\u3082\u8272\u3005\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\uff0e\n\u660e\u65e5\u306f\u5f15\u304d\u7d9a\u304d\u8981\u7d04+\u7ffb\u8a33\u3067\u4f55\u304b\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u53c2\u8003\u6587\u732e\nLexRank: Graph-based Lexical Centrality as Salience in Text Summarization\nmiso-belica/sumy\nDocument Summarization PART-2: LEXRank (Modified Pagerank) based Document Summarization\n\u30b0\u30e9\u30d5\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3068Google \u306e\u30da\u30fc\u30b8\u30e9\u30f3\u30af\n\u81ea\u52d5\u8981\u7d04(wikipedia)\n\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3092\u7528\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u81ea\u52d5\u8981\u7d04\u306e\u624b\u6cd5\n\n[Nextremer Advent Calender 2016](http://qiita.com/advent-calendar/2016/nextremer)\u306e15\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n2016\u5e74\u3082\u3082\u3046\u3059\u3050\u7d42\u308f\u308a\u3067\u3059\u304c\uff0c\u4eca\u5e74\u3082\u69d8\u3005\u306a\u30cb\u30e5\u30fc\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\uff0e\n\u30c9\u30ca\u30eb\u30c9\u30fb\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u5927\u7d71\u9818\u9078\u52dd\u5229\u306f\uff0c\u305d\u306e\u4e2d\u3067\u3082\u7279\u306b\u30a4\u30f3\u30d1\u30af\u30c8\u306e\u5f37\u3044\u51fa\u6765\u4e8b\u3060\u3063\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u30c6\u30ec\u30d3\u3067\u306f\u3088\u304f\u898b\u307e\u3059\u304c\uff0c\u304d\u3061\u3093\u3068\u30b9\u30d4\u30fc\u30c1\u3092\u805e\u3044\u305f\u3053\u3068\u306f\u306a\u304b\u3063\u305f\u306e\u3067\uff0c\u6f14\u8aac\u6587\u3092\u8aad\u3093\u3067\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\u305f\u3060\u3057\uff0c\u82f1\u8a9e\u306f\u82e6\u624b\u306a\u306e\u3067\uff0c\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u30673\u884c\u304f\u3089\u3044\u306b\u7e2e\u3081\u307e\u3059\uff0e\n\n## \u306f\u3058\u3081\u306b\n\n\u8981\u7d04\u306e\u4ed5\u65b9\u306f\u5927\u304d\u304f\u306f2\u3064\u306b\u5206\u3051\u3089\u308c\u307e\u3059\uff0e\n\n* \u62bd\u51fa\u7684\u8981\u7d04\n\t* \u91cd\u8981\u6587\u62bd\u51fa\n\t\t* \u30c6\u30ad\u30b9\u30c8\u304b\u3089\u91cd\u8981\u306a\u6587\u3092\u629c\u304d\u51fa\u3059\n\t* \u6587\u77ed\u7e2e\n\t\t* \u5404\u6587\u3092\u77ed\u7e2e\u3059\u308b\n* \u751f\u6210\u7684\u8981\u7d04\n\t* \u62bd\u51fa\u8981\u7d04\u4ee5\u5916\u306e\u8981\u7d04\n\n\u751f\u6210\u7684\u8981\u7d04\u306f\u975e\u5e38\u306b\u96e3\u6613\u5ea6\u304c\u9ad8\u304f\uff0c\u73fe\u5728\u30e1\u30a4\u30f3\u3067\u7814\u7a76\u304c\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u306f\u307b\u3068\u3093\u3069\u304c\u62bd\u51fa\u7684\u4e88\u7d04\u3067\u3059\uff0e\n\u4eca\u56de\u5b9f\u88c5\u3059\u308bLexRank\u3082\u62bd\u51fa\u7684\u8981\u7d04\u306b\u5c5e\u3057\uff0c\u6587\u7ae0\u4e2d\u306e\u91cd\u8981\u6587\u62bd\u51fa\u3092\u884c\u3044\u307e\u3059\uff0e\n\n## LexRank\u3068\u306f\uff1f\n\nLexRank\u306fPageRank\u306b\u7740\u60f3\u3092\u5f97\u305f\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e\nPageRank\u306fGoogle\u5275\u696d\u8005\u306eL.Page\u3068S.Brin\u304c\u8003\u6848\u3057\u305fWeb\u30da\u30fc\u30b8\u306e\u91cd\u8981\u5ea6\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\uff0e\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u4e0a\u306e\u30ea\u30f3\u30af\u69cb\u9020\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b0\u30e9\u30d5\u3068\u3057\u3066\u6349\u3048\uff0c\u30da\u30fc\u30b8\u306e\u91cd\u8981\u5ea6\u3092\u6c7a\u5b9a\u3057\u3066\u3044\u307e\u3057\u305f\uff0e\n\n```\n\u30ce\u30fc\u30c9\uff1aWeb\u30da\u30fc\u30b8\n\u30a8\u30c3\u30b8\uff1a\u30ea\u30f3\u30af\n\u30ce\u30fc\u30c9\u306e\u91cd\u8981\u5ea6\uff1a\n\t1. \u591a\u304f\u306e\u30da\u30fc\u30b8\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u91cd\u8981\u306a\u30da\u30fc\u30b8\n\t2. \u91cd\u8981\u306a\u30da\u30fc\u30b8\u304b\u3089\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308b\u30da\u30fc\u30b8\u306f\u91cd\u8981\u306a\u30da\u30fc\u30b8\n```\n\nLexRank\u3082PageRank\u3068\u540c\u69d8\u306b\u6587\u7ae0\u3092\u30b0\u30e9\u30d5\u3068\u3057\u3066\u6349\u3048\u307e\u3059\uff0e\n\n```\n\u30ce\u30fc\u30c9\uff1a\u6587\n\u30a8\u30c3\u30b8\uff1a2\u6587\u9593\u306e\u985e\u4f3c\u5ea6(1 | 0)\n\u30ce\u30fc\u30c9\u306e\u91cd\u8981\u5ea6\uff1a\n\t1. \u591a\u304f\u306e\u6587\u3068\u985e\u4f3c\u3059\u308b\u6587\u306f\u91cd\u8981\u306a\u6587\n\t2. \u91cd\u8981\u306a\u6587\u3068\u985e\u4f3c\u3059\u308b\u6587\u306f\u91cd\u8981\u306a\u6587\n```\n\n\u3053\u3053\u3067\u3044\u3046\u985e\u4f3c\u5ea6\u306f\u7c21\u5358\u306b\u3044\u3048\u30702\u6587\u304c\u3069\u308c\u3060\u3051\u5171\u901a\u306e\u5358\u8a9e\u3092\u6301\u3064\u304b\uff0c\u3067\u3059\uff0e\n\nLexRank\u306f\u30b0\u30e9\u30d5\u69cb\u9020\u306e\u307f\u3067\u91cd\u8981\u5ea6\u3092\u8a55\u4fa1\u3057\u307e\u3059\u304c\uff0c\u8003\u6848\u3055\u308c\u305f2004\u5e74\u5f53\u6642\uff0cDUC2004\u306b\u3066\u6700\u3082\u826f\u3044\u7cbe\u5ea6\u3092\u8a87\u3063\u3066\u3044\u307e\u3057\u305f\uff0e\n\u610f\u5473\u89e3\u6790\u305b\u305a\u306b\u9ad8\u7cbe\u5ea6\u306b\u8981\u7d04\u3067\u304d\u308b\u3068\u3044\u3046\u306e\u306f\uff0c\u3068\u3066\u3082\u9762\u767d\u304f\u611f\u3058\u307e\u3059\uff0e\n\nLexRank\u306e\u8a08\u7b97\u5f0f\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n```\nInput: n \u500b\u306e\u6587\u304b\u3089\u306a\u308b\u914d\u5217 S, \u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306e\u95be\u5024 t\nOutput: \u5404\u6587\u306eLexRank\u30b9\u30b3\u30a2\u3092\u683c\u7d0d\u3057\u305f\u914d\u5217L\n\nArray CosineMatrix[n][n];\nArray Degree[n];\nArray L[n];\n\nfor i <- 1 to n do\n\tfor j <- 1 to n do\n\t\tCosineMatrix[i][j] = idf-modified-cosine(S[i], S[j]);\n\t\tif CosineMatrix[i][j] > t then\n\t\t\tCosineMatrix[i][j] = 1;\n\t\t\tDegree[i]++;\n\t\tend\n\t\telse\n\t\t\tCosineMatrix[i][j] = 0;\n\t\tend\n\tend\nend\nfor i <- 1 to n do\n\tfor j<- 1 to n do\n\t\tCosineMatrix[i][j] = CosineMatrix[i][j] / Degree[i]\n\tend\nend\n\nL = PowerMethod(CosineMatrix, n, \u03b5);\n\nreturn L\n```\n> (\u5f15\u7528\uff1a\u300cLexRank: Graph-based Lexical Centrality as Salience in Text Summarization\u300dAlogorithm 3)\n\n\n`idf-modified-cosine` \u306f2\u6587\u9593\u306e\u985e\u4f3c\u5ea6\u8a08\u7b97\uff0e\n`PowerMethod` \u306fPageRank\u306e\u8a08\u7b97\uff0e\n\u3067\u3059\uff0e\n\n\u3067\u306f\uff0c\u5b9f\u969b\u306b\u3053\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092Python\u3067\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n## \u5b9f\u88c5\n\n```python\nimport math\nimport numpy\n\ndef lex_rank(sentences, n, t):\n\t\"\"\"\n\tLexRank\u3067\u6587\u7ae0\u3092\u8981\u7d04\u3059\u308b\uff0e\n\t@param\tsentences: list\n\t\t\u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u6587\u30ea\u30b9\u30c8)\n\t@param\tn: int\n\t\t\u6587\u7ae0\u306b\u542b\u307e\u308c\u308b\u6587\u306e\u6570\n\t@param\tt: float\n\t\t\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306e\u95be\u5024(default 0.1)\n\t@return\t: list\n\t\tLexRank\n\t\"\"\"\n    cosine_matrix = numpy.zeros((n, n))\n    degrees = numpy.zeros((n,))\n    l = []\n\t\n\t # 1. \u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\n    for i in range(n):\n        for j in range(n):\n            cosine_matrix[i][j] = idf_modified_cosine(sentences, sentences[i], sentences[j])\n            if cosine_matrix[i][j] > t:\n                cosine_matrix[i][j] = 1\n                degrees[i] += 1\n            else:\n                cosine_matrix[i][j] = 0\n\n    # 2.LexRank\u8a08\u7b97\n    for i in range(n):\n        for j in range(n):\n            cosine_matrix[i][j] = cosine_matrix[i][j] / degrees[i]\n            \n    ratings = power_method(cosine_matrix, n)\n    \n    return zip(sentences, ratings)\n\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6a5f\u80fd\u5225\u306b \n\n1. \u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\n2. LexRank\u8a08\u7b97\n\u306e2\u30d6\u30ed\u30c3\u30af\u306b\u5206\u3051\u3089\u308c\u307e\u3059\uff0e\n\n\u3053\u3053\u3067\u306f\u5404\u30d6\u30ed\u30c3\u30af\u3054\u3068\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\uff0e\n\n### 1. \u96a3\u63a5\u884c\u5217\u306e\u4f5c\u6210\n\n\u96a3\u63a5\u884c\u5217\u306f\u30b0\u30e9\u30d5\u8868\u73fe\u306e\u305f\u3081\u306e\u884c\u5217\u3067\u3059\uff0e\n\u30ce\u30fc\u30c9\u9593\u306b\u30a8\u30c3\u30b8\u304c\u5b58\u5728\u3059\u308c\u30701\uff0c\u5b58\u5728\u3057\u306a\u3051\u308c\u30700\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u3067\u30b0\u30e9\u30d5\u8868\u73fe\u3057\u307e\u3059\uff0e\nLexRank\u3067\u306f2\u6587\u9593\u306e\u985e\u4f3c\u5ea6\u304c\u95be\u5024t\u4ee5\u4e0a\u3067\u3042\u308c\u3070\u30a8\u30c3\u30b8\u3067\u7d50\u3073\u307e\u3059\uff0e\n\n\u985e\u4f3c\u5ea6\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n```python\ndef idf_modified_cosine(sentences, sentence1, sentence2):\n\t\"\"\"\n\t2\u6587\u9593\u306e\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\n\t@param\tsentence1: list\n\t\t\u65871([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@param\tsentence2: list\n\t\t\u65872([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@param\tsentences: list\n\t\t\u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@return : float\n\t\t\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\n\t\"\"\"\n    tf1 = compute_tf(sentence1)\n    tf2 = compute_tf(sentence2)\n    idf_metrics = compute_idf(sentences)\n    return cosine_similarity(sentence1, sentence2, tf1, tf2, idf_metrics)\n```\n\nTF\u306f\u6587\u4e2d\u306e\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\uff0e(\u591a\u3044\u307b\u3069\u91cd\u8981)\nIDF\u306f\u6587\u66f8\u5168\u4f53\u3067\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\uff0e(\u5c11\u306a\u3044\u307b\u3069\u91cd\u8981)\n\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u306f\u30d9\u30af\u30c8\u30eb\u9593\u306e\u985e\u4f3c\u5ea6\u3092\u4f59\u5f26\u3067\u6c42\u3081\u308b\u3082\u306e\u3067\u3059\uff0e\n\n\u3053\u308c\u3089\u306b\u95a2\u3057\u3066\u306f\u77e5\u3063\u3066\u308b\u65b9\u3082\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\uff0c\u7c21\u5358\u306b\u5b9f\u88c5\u3060\u3051\u8f09\u305b\u3066\u304a\u304d\u307e\u3059\uff0e\n\n```python\nfrom collection import Counter\n\n\ndef compute_tf(sentence):\n\t\"\"\"\n\tTF\u3092\u8a08\u7b97\n\t@param\tsentence: list\n\t\t\u6587([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@return : list\n\t\tTF\u30ea\u30b9\u30c8\n\t\"\"\"\n    tf_values = Counter(sentence)\n    tf_metrics = {}\n    \n    max_tf = find_tf_max(tf_values)\n    \n    for term, tf in tf_values.items():\n        tf_metrics[term] = tf / max_tf\n\n    return tf_metrics\n\n\ndef find_tf_max(terms):\n\t\"\"\"\n\t\u5358\u8a9e\u306e\u6700\u5927\u51fa\u73fe\u983b\u5ea6\u3092\u63a2\u7d22\n\t@param\tterms: list\n\t\t\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\n\t@return : int\n\t\t\u5358\u8a9e\u306e\u6700\u5927\u51fa\u73fe\u983b\u5ea6\n\t\"\"\"\n    return max(terms.values()) if terms else 1\n\n\ndef compute_idf(sentences):\n\t\"\"\"\n\t\u6587\u7ae0\u4e2d\u306e\u5358\u8a9e\u306eIDF\u5024\u3092\u8a08\u7b97\n\t@param sentences: list\n\t\t\u6587\u7ae0([[w1,w2,w3],[w1,w3,w4,w5],..]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@return: list\n\t\tIDF\u30ea\u30b9\u30c8\n\t\"\"\"\n    idf_metrics = {}\n    sentences_count = len(sentences)\n\n    for sentence in sentences:\n        for term in sentence:\n            if term not in idf_metrics:\n                n_j = sum(1 for s in sentences if term in s)\n                idf_metrics[term] = math.log(sentences_count / (1 + n_j))\n\n    return idf_metrics\n    \n    \ndef cosine_similarity(sentence1, sentence2, tf1, tf2, idf_metrics):\n\t\"\"\"\n\t\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u3092\u8a08\u7b97\n\t@param\tsentence1: list\n\t\t\u65871([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@param\tsentence2: list\n\t\t\u65872([w1,w2,w3]\u306e\u3088\u3046\u306a\u5358\u8a9e\u30ea\u30b9\u30c8)\n\t@param\ttf1: list\n\t\t\u65871\u306eTF\u30ea\u30b9\u30c8\n\t@param\ttf2: list\n\t\t\u65872\u306eTF\u30ea\u30b9\u30c8\n\t@param\tidf_metrics: list\n\t\t\u6587\u7ae0\u306eIDF\u30ea\u30b9\u30c8\n\t@return : float\n\t\t\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\n\t\"\"\"\n    unique_words1 = set(sentence1)\n    unique_words2 = set(sentence2)\n    common_words = unique_words1 & unique_words2\n\n    numerator = sum((tf1[t] * tf2[t] * idf_metrics[t] ** 2) for t in common_words)\n    denominator1 = sum((tf1[t] * idf_metrics[t]) ** 2 for t in unique_words1)\n    denominator2 = sum((tf2[t] * idf_metrics[t]) ** 2 for t in unique_words2)\n\n    if denominator1 > 0 and denominator2 > 0:\n        return numerator / (math.sqrt(denominator1) * math.sqrt(denominator2))\n    else:\n        return 0.0    \n```\n\n\u6700\u5f8c\u306b\uff0c\u30b3\u30b5\u30a4\u30f3\u985e\u4f3c\u5ea6\u304ct\u4ee5\u4e0a\u3067\u3042\u308c\u30701\u3092\u4ee3\u5165\u3057\uff0c\u96a3\u63a5\u884c\u5217\u3092\u5b8c\u6210\u3055\u305b\u307e\u3059\uff0e\n\n\n\u6b21\u306f\u3053\u3053\u3067\u4f5c\u6210\u3057\u305f\u884c\u5217\u3092\u5143\u306bLexRank\u3092\u6c42\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\n### 2.LexRank\u8a08\u7b97\n\n\u3053\u3053\u304b\u3089\u306f\uff0c1.\u3067\u6c42\u3081\u305f\u96a3\u63a5\u884c\u5217\u3092\u5143\u306bLexRank\u3092\u8a08\u7b97\u3057\u307e\u3059\uff0e\n\u307e\u305a\u306f\u96a3\u63a5\u884c\u5217\u306e\u5404\u8981\u7d20\u3092degree(\u30ce\u30fc\u30c9\u306e\u6b21\u6570)\u3067\u5272\u308a\uff0c\u78ba\u7387\u884c\u5217\u306b\u5909\u63db\u3057\u307e\u3059\uff0e\n\n\u305d\u3057\u3066\uff0c\u3053\u306e\u78ba\u7387\u884c\u5217\u3092\u5143\u306b\u30de\u30eb\u30b3\u30d5\u5b9a\u5e38\u5206\u5e03\u3092\u6c42\u3081\u3066\u3044\u304d\u307e\u3059\uff0e\n\u30de\u30eb\u30b3\u30d5\u9023\u9396\u306f\u975e\u5468\u671f\u7684\u3067\u5fc5\u305a\u53ce\u675f\u3059\u308b\u3053\u3068\u304c\u4fdd\u8a3c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u3079\u304d\u4e57\u6cd5\u3067\u8ee2\u7f6e\u884c\u5217\u3092\u4e57\u7b97\u3057\uff0c\u03b5\u4ee5\u4e0b\u306b\u306a\u308b\u307e\u3067\u53cd\u5fa9\u51e6\u7406\u3092\u7e70\u308a\u8fd4\u3057\u307e\u3059\uff0e\n\u3053\u3053\u3067\u6700\u7d42\u7684\u306b\u8a08\u7b97\u3055\u308c\u305f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u304cLexRank\u3068\u306a\u308a\u307e\u3059\uff0e\n\n\u5b9f\u88c5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n\n```python\ndef power_method(cosine_matrix, n, e):\n\t\"\"\"\n\t\u3079\u304d\u4e57\u6cd5\u3092\u884c\u306a\u3046\n\t@param\tscosine_matrix: list\n\t\t\u78ba\u7387\u884c\u5217\n\t@param\tn: int\n\t\t\u6587\u7ae0\u4e2d\u306e\u6587\u306e\u6570\n\t@param\te: float\n\t\t\u8a31\u5bb9\u8aa4\u5dee\u03b5\n\t@return: list\n\t\tLexRank\n\t\"\"\"\n    transposed_matrix = cosine_matrix.T\n    sentences_count = n\n    \n    p_vector = numpy.array([1.0 / sentences_count] * sentences_count)\n    \n    lambda_val = 1.0\n    \n    while lambda_val > e:\n        next_p = numpy.dot(transposed_matrix, p_vector)\n        lambda_val = numpy.linalg.norm(numpy.subtract(next_p, p_vector))\n        p_vector = next_p\n    \n    return p_vector\n```\n\n\u3053\u308c\u3067\uff0cLexRank\u306b\u3088\u308b\u91cd\u8981\u5ea6\u8a08\u7b97\u304c\u7d42\u4e86\u3067\u3059\uff0e\n\u5bfe\u5fdc\u3059\u308bratings\u306e\u5024\u304c\u5927\u304d\u3044\u307b\u3069\u91cd\u8981\u5ea6\u304c\u9ad8\u3044\u6587\u3068\u306a\u308a\u307e\u3059\uff0e\n\n## \u8981\u7d04\u7d50\u679c\n\n\u3067\u306f\uff0c\u5b9f\u969b\u306b\u8981\u7d04\u3057\u3066\u307f\u307e\u3059\uff0e\n\u8981\u7d04\u3059\u308b\u306e\u306f[\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u5927\u7d71\u9818\u9078\u52dd\u5229\u6642\u306e\u30b9\u30d4\u30fc\u30c1](http://www.vox.com/policy-and-politics/2016/11/9/13569124/donald-trump-wins-2016-presidential-election-victory-speech-transcript)\u3067\u3059\uff0e\n\n```\n# lex_rank(document)\nGreat people.\nGreat brothers, sisters, great, unbelievable parents.\nWe're going to get to work immediately for the American people, and we're going to be doing a job that hopefully you will be so proud of your president.\n\n# \u7d20\u6674\u3089\u3057\u3044\u4eba\u3005\u3002\n# \u5049\u5927\u306a\u3001\u4fe1\u3058\u3089\u308c\u306a\u3044\u307b\u3069\u306e\u89aa\u3001\u5049\u5927\u306a\u5144\u5f1f\u3001\u59c9\u59b9\u3002\n# \u79c1\u305f\u3061\u306f\u30a2\u30e1\u30ea\u30ab\u306e\u4eba\u3005\u306e\u305f\u3081\u306b\u3059\u3050\u306b\u50cd\u304f\u3064\u3082\u308a\u3067\u3059\u3002\u79c1\u305f\u3061\u306f\u3042\u306a\u305f\u304c\u5927\u7d71\u9818\u3092\u3068\u3066\u3082\u8a87\u308a\u306b\u601d\u3046\u3053\u3068\u3092\u9858\u3063\u3066\u4ed5\u4e8b\u3092\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n```\n\n\u3046\u3093\uff0c\uff0c\uff0c\u307e\u3041\uff0c\u5927\u7d71\u9818\u9811\u5f35\u308b\u305e\uff01 \u3068\u3044\u3046\u610f\u6c17\u8fbc\u307f\u306f\u611f\u3058\u3089\u308c\u308b\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\n\n## \u7d42\u308f\u308a\u306b\n\u672c\u8a18\u4e8b\u3067\u306f\u81ea\u52d5\u8981\u7d04\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\uff0c\u30c8\u30e9\u30f3\u30d7\u6c0f\u306e\u6f14\u8aac\u3092\u8981\u7d04\u3057\u307e\u3057\u305f\uff0e\n\u30b0\u30e9\u30d5\u3067\u6587\u7ae0\u3092\u6349\u3048\u3089\u308c\u308b\u306e\u3067\uff0cLexRank\u306f\u30c6\u30ad\u30b9\u30c8\u5206\u6790\u306b\u3082\u8272\u3005\u4f7f\u3048\u305d\u3046\u3067\u3059\u306d\uff0e\n\u660e\u65e5\u306f\u5f15\u304d\u7d9a\u304d\u8981\u7d04+\u7ffb\u8a33\u3067\u4f55\u304b\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\n## \u53c2\u8003\u6587\u732e\n[LexRank: Graph-based Lexical Centrality as Salience in Text Summarization](http://www.cs.cmu.edu/afs/cs/project/jair/pub/volume22/erkan04a-html/erkan04a.html)\n[miso-belica/sumy](https://github.com/miso-belica/sumy)\n[Document Summarization PART-2: LEXRank (Modified Pagerank) based Document Summarization](https://www.youtube.com/watch?v=pQQvki7RUSI)\n[\u30b0\u30e9\u30d5\u4e0a\u306e\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3068Google \u306e\u30da\u30fc\u30b8\u30e9\u30f3\u30af](https://www.math.nagoya-u.ac.jp/~naito/lecture/high_school_2011/summer.pdf)\n[\u81ea\u52d5\u8981\u7d04(wikipedia)](https://ja.wikipedia.org/wiki/%E8%87%AA%E5%8B%95%E8%A6%81%E7%B4%84)\n[\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u3092\u7528\u3044\u305f\u30c6\u30ad\u30b9\u30c8\u81ea\u52d5\u8981\u7d04\u306e\u624b\u6cd5](http://introndatalab.com/blog/936)\n", "tags": ["\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "LexRank", "\u81ea\u52d5\u8981\u7d04", "Python", "NLP"]}