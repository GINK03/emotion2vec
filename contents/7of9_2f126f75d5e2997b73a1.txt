{"context": "Image Orientation Estimation with Convolutional Networks\nPhilipp Fischer et al.\nhttp://lmb.informatik.uni-freiburg.de/Publications/2015/FDB15/image_orientation.pdf\n\u753b\u50cf\u306e\u672c\u6765\u3042\u308b\u3079\u304d\u65b9\u5411\u3078\u306e\u88dc\u6b63\u3092ConvNet(CNN)\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3089\u3057\u3044\u3002\nrealtime\u3067\u306e\u88dc\u6b63\u306b\u4f7f\u3048\u308b\u3068\u306e\u3053\u3068\u3002\n\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\u5b66\u7fd2\u306b\u95a2\u3057\u3066\u306f3.1 Data\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n\nHence, we rather use the publicly available Microsoft COCO dataset [1] as training set and apply rotations artificially.\n\nCOCO dataset\u81ea\u4f53\u306f\u30ce\u30a4\u30ba\u30c7\u30fc\u30bf\uff08\u65b9\u5411\u304c\u4e0d\u660e\u306a\u30c7\u30fc\u30bf\uff09\u3092\u9664\u304f\u3068\u3001\u672c\u6765\u3042\u308b\u3079\u304d\u65b9\u5411\u306e\u753b\u50cf\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u305d\u308c\u3089\u306e\u753b\u50cf\u3092\u610f\u56f3\u7684\u306b\u56de\u8ee2\u3055\u305b\u305f\u3082\u306e\u3092input\u306b\u4f7f\u3063\u3066\u3001output\u306b\u56de\u8ee2\u524d\u753b\u50cf\u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3060\u3002\n\n\u56de\u8ee2\u306e\u89d2\u5ea6\n3.2 Tasks and networks\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n\u00b1\uff13\uff10\u5ea6\u3001\u00b1\uff14\uff15\u5ea6\u3001\uff13\uff16\uff10\u5ea6\u56de\u8ee2\u306a\u3069\u3092\u8003\u616e\u3057\u3066\u3044\u308b\u3002\n\nnetworks\n3.2 Tasks and networks\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n\nFor all three tasks we built upon the AlexNet architecture from Krizhevsky et al. [8] implemented in Caffe [6] and pretrained on ImageNet. This architecture consists of 5 convolutional layers, followed by 3 fully connected layers. After each fully connected layer, a rectified linear unit is used as nonlinearity. Additionally normalization and dropout are applied. For more details see [8].\n\nAlexNet\u306e\u69cb\u9020\u306f\u4ee5\u4e0b\u306bFigure\u30002\u3068\u3057\u3066\u4f8b\u793a\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://www.saagie.com/blog/object-detection-part1\nImage Orientation Estimation with Convolutional Networks\nPhilipp Fischer et al.\nhttp://lmb.informatik.uni-freiburg.de/Publications/2015/FDB15/image_orientation.pdf\n\n\u753b\u50cf\u306e\u672c\u6765\u3042\u308b\u3079\u304d\u65b9\u5411\u3078\u306e\u88dc\u6b63\u3092ConvNet(CNN)\u3092\u7528\u3044\u3066\u5b66\u7fd2\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3089\u3057\u3044\u3002\nrealtime\u3067\u306e\u88dc\u6b63\u306b\u4f7f\u3048\u308b\u3068\u306e\u3053\u3068\u3002\n\n### \u5b66\u7fd2\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\n\u5b66\u7fd2\u306b\u95a2\u3057\u3066\u306f`3.1 Data`\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n> Hence, we rather use the publicly available Microsoft COCO dataset [1] as training set and apply rotations artificially.\n\n[COCO dataset](http://mscoco.org/)\u81ea\u4f53\u306f\u30ce\u30a4\u30ba\u30c7\u30fc\u30bf\uff08\u65b9\u5411\u304c\u4e0d\u660e\u306a\u30c7\u30fc\u30bf\uff09\u3092\u9664\u304f\u3068\u3001\u672c\u6765\u3042\u308b\u3079\u304d\u65b9\u5411\u306e\u753b\u50cf\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\u305d\u308c\u3089\u306e\u753b\u50cf\u3092\u610f\u56f3\u7684\u306b\u56de\u8ee2\u3055\u305b\u305f\u3082\u306e\u3092input\u306b\u4f7f\u3063\u3066\u3001output\u306b\u56de\u8ee2\u524d\u753b\u50cf\u3092\u4f7f\u3046\u3068\u3044\u3046\u3053\u3068\u306e\u3088\u3046\u3060\u3002\n\n### \u56de\u8ee2\u306e\u89d2\u5ea6\n\n`3.2 Tasks and networks`\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n\n\u00b1\uff13\uff10\u5ea6\u3001\u00b1\uff14\uff15\u5ea6\u3001\uff13\uff16\uff10\u5ea6\u56de\u8ee2\u306a\u3069\u3092\u8003\u616e\u3057\u3066\u3044\u308b\u3002\n\n### networks\n\n`3.2 Tasks and networks`\u306b\u8a18\u8f09\u304c\u3042\u308b\u3002\n\n> For all three tasks we built upon the AlexNet architecture from Krizhevsky et al. [8] implemented in Caffe [6] and pretrained on ImageNet. This architecture consists of 5 convolutional layers, followed by 3 fully connected layers. After each fully connected layer, a rectified linear unit is used as nonlinearity. Additionally normalization and dropout are applied. For more details see [8].\n\nAlexNet\u306e\u69cb\u9020\u306f\u4ee5\u4e0b\u306bFigure\u30002\u3068\u3057\u3066\u4f8b\u793a\u3055\u308c\u3066\u3044\u308b\u3002\nhttps://www.saagie.com/blog/object-detection-part1\n\n\n\n\n\n\n", "tags": ["borgWarp", "CNN"]}