{"context": " More than 1 year has passed since last update.\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\nMac OS X: 10.10.2\nWireShark(Qt): 1.12.3\nVirtualBox: 4.3.20\n\n\n\u76ee\u7684\nMac (boot2docker) \u306e docker \u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u304f mosquitto (MQTT \u30d6\u30ed\u30fc\u30ab\u30fc) \u3068\u306e\u901a\u4fe1\u3092 wireshark (tcpdump) \u3057\u305f\u3044\u3002\n\u610f\u5916\u3068\u624b\u9593\u53d6\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u3068\u3057\u3066\u6b8b\u3059\u3002\n\n\u305d\u3082\u305d\u3082\u30d1\u30b1\u30c3\u30c8\u304c\u898b\u3048\u306a\u3044\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\nMac(VirtualBox Host) ------- boot2docker(Virtualbox Guest)\n                vboxnet0\n\n\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002vboxnet0 \u306f\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30a2\u30c0\u30d7\u30bf\u3002\nMac \u3067 vboxnet0 \u3092 wireshark \u3059\u308b\u3068\u3001\u4f8b\u3048\u3070 ping \u3060\u3068 ECHO Reply \u3060\u3051\u898b\u3048\u308b\u3002\n\n\nMac -> boot2docker \u65b9\u5411\u306f\u898b\u3048\u306a\u3044\n\nMac <- boot2docker \u65b9\u5411\u306f\u898b\u3048\u308b\n\n\u30a2\u30c0\u30d7\u30bf\u30fc\u30bf\u30a4\u30d7\u3092\u3044\u3058\u3063\u3066\u307f\u3066\u3082\u6539\u5584\u3057\u306a\u304b\u3063\u305f\u3002\n\u4eee\u60f3\u30c9\u30e9\u30a4\u30d0\u3092\u3044\u3058\u308b\u306e\u306f\u3064\u3089\u3044\u306e\u3067\u3001NAT \u3057\u3066\u3044\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067 port forward \u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u3053\u3046\u3059\u308b\u3068 lo0 \u3067\u4e21\u65b9\u5411\u3001\u3061\u3083\u3093\u3068\u898b\u3048\u308b\u3002\nport forward \u306f\u3044\u3061\u3044\u3061\u8a2d\u5b9a\u3092\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3089\u3001\u306a\u308b\u3079\u304f\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30a2\u30c0\u30d7\u30bf\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u3051\u3069\u3001\u3057\u304b\u305f\u306a\u3044\u3002\n\nMQTT plugin \u3092\u6709\u52b9\u5316\u3059\u308b\nwireshark \u6a19\u6e96\u3067\u306f MQTT \u30d1\u30b1\u30c3\u30c8\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u304f\u308c\u306a\u3044\u3002MQTT \u306f\u30d0\u30a4\u30ca\u30ea\u30d7\u30ed\u30c8\u30b3\u30eb\u306a\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u3061\u3087\u3063\u3068\u3064\u3089\u3044\u3002\nhttps://raw.githubusercontent.com/menudoproblema/Wireshark-MQTT/master/mqtt.lua \u3092 wget \u3068\u304b\u3059\u308b\u3002\u305d\u306e\u307e\u307e\u3060\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3002\n--- mqtt.lua    2015-02-05 02:02:54.000000000 +0900\n+++ /usr/local/lib/wireshark/plugins/1.12.3/mqtt.lua    2015-02-05 01:15:01.000000000 +0900\n@@ -18,14 +18,13 @@\n\n do\n    -- Create a new dissector\n-   MQTTPROTO = Proto(\"MQTT\", \"MQ Telemetry Transport\")\n-   local bitw = require(\"bit\")\n+   MQTTPROTO = Proto(\"MQTT3\", \"MQ Telemetry Transport\")\n    local f = MQTTPROTO.fields\n    -- Fix header: byte 1\n    f.message_type = ProtoField.uint8(\"mqtt.message_type\", \"Message Type\", base.HEX, nil, 0xF0)\n    f.dup = ProtoField.uint8(\"mqtt.dup\", \"DUP Flag\", base.DEC, nil, 0x08)\n    f.qos = ProtoField.uint8(\"mqtt.qos\", \"QoS Level\", base.DEC, nil, 0x06)\n-   f.retain = ProtoField.uint8(\"mqtt.retain\", \"Retain\", base.DEC, nil, 0x01)\n+   f.retain = ProtoField.uint8(\"mqtt.retain1\", \"Retain\", base.DEC, nil, 0x01)\n    -- Fix header: byte 2\n    f.remain_length = ProtoField.uint8(\"mqtt.remain_length\", \"Remain Length\")\n\n@@ -71,9 +70,9 @@\n        repeat\n             digit = buffer(offset, 1):uint()\n             offset = offset + 1\n-            value = value + bitw.band(digit,127) * multiplier\n+            value = value + bit32.band(digit,127) * multiplier\n             multiplier = multiplier * 128\n-       until (bitw.band(digit,128) == 0)\n+       until (bit32.band(digit,128) == 0)\n        return offset, value\n    end\n\n\u3053\u308c\u3092 ~/.wireshark/plugins/mqtt.lua \u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002\nwireshark \u306f Homebrew \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001--with-lua \u3092\u6709\u52b9\u306b\u3057\u3066\u3042\u308b\u3002\n\n\u307e\u3068\u3081\nwireshark \u3092\u8d77\u52d5\u3057\u306a\u304a\u3057\u3066\u3001lo0 \u3092\u30c0\u30f3\u30d7\u3057\u3064\u3064 tcp.port == 1883 \u3067\u30d5\u30a3\u30eb\u30bf\u3057\u3001Mac \u3067 MQTT \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u52d5\u304b\u3059\u3068\u3001MQTT \u30d1\u30b1\u30c3\u30c8\u304c\u898b\u3048\u308b\u3002\n\n\u3053\u308c\u3067 MQTT \u306e\u89e3\u6790\u304c\u6357\u308b\u306d\u3002\n## \u30d0\u30fc\u30b8\u30e7\u30f3\n\n- Mac OS X: 10.10.2\n- WireShark(Qt): 1.12.3\n- VirtualBox: 4.3.20\n\n## \u76ee\u7684\n\nMac (boot2docker) \u306e docker \u30b3\u30f3\u30c6\u30ca\u4e0a\u3067\u52d5\u304f mosquitto (MQTT \u30d6\u30ed\u30fc\u30ab\u30fc) \u3068\u306e\u901a\u4fe1\u3092 wireshark (tcpdump) \u3057\u305f\u3044\u3002\n\n\u610f\u5916\u3068\u624b\u9593\u53d6\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u3068\u3057\u3066\u6b8b\u3059\u3002\n\n## \u305d\u3082\u305d\u3082\u30d1\u30b1\u30c3\u30c8\u304c\u898b\u3048\u306a\u3044\n\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\n\n```\nMac(VirtualBox Host) ------- boot2docker(Virtualbox Guest)\n                vboxnet0\n```\n\n\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002vboxnet0 \u306f\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30a2\u30c0\u30d7\u30bf\u3002\nMac \u3067 vboxnet0 \u3092 wireshark \u3059\u308b\u3068\u3001\u4f8b\u3048\u3070 ping \u3060\u3068 ECHO Reply \u3060\u3051\u898b\u3048\u308b\u3002\n\n- `Mac -> boot2docker` \u65b9\u5411\u306f\u898b\u3048\u306a\u3044\n- `Mac <- boot2docker` \u65b9\u5411\u306f\u898b\u3048\u308b\n\n\u30a2\u30c0\u30d7\u30bf\u30fc\u30bf\u30a4\u30d7\u3092\u3044\u3058\u3063\u3066\u307f\u3066\u3082\u6539\u5584\u3057\u306a\u304b\u3063\u305f\u3002\n\n\u4eee\u60f3\u30c9\u30e9\u30a4\u30d0\u3092\u3044\u3058\u308b\u306e\u306f\u3064\u3089\u3044\u306e\u3067\u3001NAT \u3057\u3066\u3044\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067 port forward \u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u3053\u3046\u3059\u308b\u3068 `lo0` \u3067\u4e21\u65b9\u5411\u3001\u3061\u3083\u3093\u3068\u898b\u3048\u308b\u3002\nport forward \u306f\u3044\u3061\u3044\u3061\u8a2d\u5b9a\u3092\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3089\u3001\u306a\u308b\u3079\u304f\u30db\u30b9\u30c8\u30aa\u30f3\u30ea\u30fc\u30a2\u30c0\u30d7\u30bf\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u3051\u3069\u3001\u3057\u304b\u305f\u306a\u3044\u3002\n\n## MQTT plugin \u3092\u6709\u52b9\u5316\u3059\u308b\n\nwireshark \u6a19\u6e96\u3067\u306f MQTT \u30d1\u30b1\u30c3\u30c8\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u304f\u308c\u306a\u3044\u3002MQTT \u306f\u30d0\u30a4\u30ca\u30ea\u30d7\u30ed\u30c8\u30b3\u30eb\u306a\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u3061\u3087\u3063\u3068\u3064\u3089\u3044\u3002\n\nhttps://raw.githubusercontent.com/menudoproblema/Wireshark-MQTT/master/mqtt.lua \u3092 wget \u3068\u304b\u3059\u308b\u3002\u305d\u306e\u307e\u307e\u3060\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u305f\u3002\n\n```diff\n--- mqtt.lua\t2015-02-05 02:02:54.000000000 +0900\n+++ /usr/local/lib/wireshark/plugins/1.12.3/mqtt.lua\t2015-02-05 01:15:01.000000000 +0900\n@@ -18,14 +18,13 @@\n\n do\n \t-- Create a new dissector\n-\tMQTTPROTO = Proto(\"MQTT\", \"MQ Telemetry Transport\")\n-\tlocal bitw = require(\"bit\")\n+\tMQTTPROTO = Proto(\"MQTT3\", \"MQ Telemetry Transport\")\n \tlocal f = MQTTPROTO.fields\n \t-- Fix header: byte 1\n \tf.message_type = ProtoField.uint8(\"mqtt.message_type\", \"Message Type\", base.HEX, nil, 0xF0)\n \tf.dup = ProtoField.uint8(\"mqtt.dup\", \"DUP Flag\", base.DEC, nil, 0x08)\n \tf.qos = ProtoField.uint8(\"mqtt.qos\", \"QoS Level\", base.DEC, nil, 0x06)\n-\tf.retain = ProtoField.uint8(\"mqtt.retain\", \"Retain\", base.DEC, nil, 0x01)\n+\tf.retain = ProtoField.uint8(\"mqtt.retain1\", \"Retain\", base.DEC, nil, 0x01)\n \t-- Fix header: byte 2\n \tf.remain_length = ProtoField.uint8(\"mqtt.remain_length\", \"Remain Length\")\n\n@@ -71,9 +70,9 @@\n \t\trepeat\n \t\t\t digit = buffer(offset, 1):uint()\n \t\t\t offset = offset + 1\n-\t\t\t value = value + bitw.band(digit,127) * multiplier\n+\t\t\t value = value + bit32.band(digit,127) * multiplier\n \t\t\t multiplier = multiplier * 128\n-\t\tuntil (bitw.band(digit,128) == 0)\n+\t\tuntil (bit32.band(digit,128) == 0)\n \t\treturn offset, value\n \tend\n```\n\n\u3053\u308c\u3092 ~/.wireshark/plugins/mqtt.lua \u306b\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\nwireshark \u306f Homebrew \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001`--with-lua` \u3092\u6709\u52b9\u306b\u3057\u3066\u3042\u308b\u3002\n\n## \u307e\u3068\u3081\n\nwireshark \u3092\u8d77\u52d5\u3057\u306a\u304a\u3057\u3066\u3001lo0 \u3092\u30c0\u30f3\u30d7\u3057\u3064\u3064 `tcp.port == 1883` \u3067\u30d5\u30a3\u30eb\u30bf\u3057\u3001Mac \u3067 MQTT \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u52d5\u304b\u3059\u3068\u3001MQTT \u30d1\u30b1\u30c3\u30c8\u304c\u898b\u3048\u308b\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-02-05 2.11.05.png](https://qiita-image-store.s3.amazonaws.com/0/9549/302e4d34-5135-a4af-d8b2-6629c24d61d7.png)\n\n\u3053\u308c\u3067 MQTT \u306e\u89e3\u6790\u304c\u6357\u308b\u306d\u3002\n", "tags": ["boot2docker", "Wireshark", "mqtt"]}