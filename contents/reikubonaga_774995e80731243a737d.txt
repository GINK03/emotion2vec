{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u6700\u8fd1wantedly\u3067\u306f\u3001\u65b0\u4eba\u7814\u4fee\u3067java\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u52c9\u5f37\u3057\u3066\u307e\u3059\u3002\n\u305f\u3060\u4f7f\u3063\u3066\u3044\u308b\u8a00\u8a9e\u306f\u3001objective-C\u3060\u3063\u305f\u308a\u3001ruby\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u81ea\u5206\u306e\u52c9\u5f37\u3082\u542b\u3081\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u305d\u308c\u305e\u308c\u306e\u3069\u3046\u5b9f\u88c5\u3057\u3066\u3044\u304f\u304b\u6574\u7406\u3057\u306a\u304c\u3089\u9032\u3081\u3066\u307e\u3059\u3002\n\niterator\u30d1\u30bf\u30fc\u30f3\nfor\u3067\u6570\u3092\u6570\u3048\u308b\u5834\u5408\u3001\u6700\u5f8c\u306e\u6570\u3092\u9593\u9055\u3048\u305f\u308a\u3057\u3066\u30d0\u30b0\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305fenumrator\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u6570\u3092\u6570\u3048\u308b\u3053\u3068\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3092\u5206\u3051\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nobjective-C\u3067iterator\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\nNSFastEnumeration protocol\u3092\u5229\u7528\u3057\u307e\u3059\u3002NSArray\u3084NSSet\u3084NSDictionary\u306f\u3001\u3053\u306eprotocol\u3092\u542b\u3093\u3067\u307e\u3059\u3002\n\nenumrator\u306e\u4f7f\u3044\u5206\u3051\n\n\nfor in\u3067\u5229\u7528\u3059\u308b\u306e\u304c\u57fa\u672c\u3067\u3059\n\nfor (id object in array) {\n    NSLog(@\"%@\", object);\n}\n\n\n\nwhile\u3067\u66f8\u304f\u5834\u5408\n\nid object = nil;\nNSEnumerator *enumerator = ...;\nwhile ((object = [enumerator nextObject])) {\n    NSLog(@\"%@\", object);\n}\n\n\nNSArray\u3084NSSet\u3084NSDictionary\u3084NSIndexSet\u3067\u306fblock\u3067enumerate\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n[array enumerateObjectsUsingBlock:^(id object, NSUInteger idx, BOOL *stop) {\n    NSLog(@\"%@\", object);\n}];\n\n\nNSFastEnumration\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4f7f\u3044\u65b9\n\nNSFastEnumeration\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u3001countByEnumeratingWithState\u3068\u3044\u3046method\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\n\n\nBookShelf.h\n#import <Foundation/Foundation.h>\n\n#define ARRAY_SIZE 32\n\n@interface BookShelf : NSObject <NSFastEnumeration>\n{\n    __unsafe_unretained id  _objects[ARRAY_SIZE];\n}\n\n@end\n\n\n\nBookShelf.m\n#import \"BookShelf.h\"\n\n@implementation BookShelf\n\n- (id)init\n{\n    self = [super init];\n    if (!self) {\n        return nil;\n    }\n\n    for (int i = 0; i < ARRAY_SIZE; i++) {\n        _objects[i] = [NSNumber numberWithInt:i];\n    }\n\n    return self;\n}\n\n- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id __unsafe_unretained [])buffer count:(NSUInteger)len\n{\n    if (state->state >= ARRAY_SIZE) {\n        return 0;\n    }\n\n    state->itemsPtr = _objects;\n    state->state = ARRAY_SIZE;\n    state->mutationsPtr = &state->extra[0];\n\n    return ARRAY_SIZE;\n}\n\n@end\n\n\n\nmain.m\n#import <Foundation/Foundation.h>\n#import \"BookShelf.h\"\n\nint main(int argc, const char * argv[])\n{\n\n    @autoreleasepool {\n        BookShelf *bookShelf = [BookShelf new];\n\n        for (id object in bookShelf) {\n            NSLog(@\"%@\", object);\n        }\n    }\n    return 0;\n}\n\n\n\n\u53c2\u8003\n\n\u3053\u3053\u3092\u8aad\u3080\u3068\u3088\u308a\u8a73\u3057\u3044\u3067\u3059 http://nshipster.com/enumerators/\n\nFast Enumeration\u306b\u3064\u3044\u3066 http://news.mynavi.jp/column/objc/105/\n\nmutationPtr\u306e\u6307\u5b9a\u65b9\u6cd5 http://stackoverflow.com/questions/7815326/automatic-reference-counting-error-with-fast-enumeration\n\n\u4eca\u56de\u306e\u30bd\u30fc\u30b9\u306e\u30b5\u30f3\u30d7\u30eb https://github.com/reikubonaga/objective-c-iterator\n\n\n\n### \u6982\u8981\n\u6700\u8fd1wantedly\u3067\u306f\u3001\u65b0\u4eba\u7814\u4fee\u3067java\u306e\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3092\u52c9\u5f37\u3057\u3066\u307e\u3059\u3002\n\u305f\u3060\u4f7f\u3063\u3066\u3044\u308b\u8a00\u8a9e\u306f\u3001objective-C\u3060\u3063\u305f\u308a\u3001ruby\u3060\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u3001\u81ea\u5206\u306e\u52c9\u5f37\u3082\u542b\u3081\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u305d\u308c\u305e\u308c\u306e\u3069\u3046\u5b9f\u88c5\u3057\u3066\u3044\u304f\u304b\u6574\u7406\u3057\u306a\u304c\u3089\u9032\u3081\u3066\u307e\u3059\u3002\n\n### iterator\u30d1\u30bf\u30fc\u30f3\nfor\u3067\u6570\u3092\u6570\u3048\u308b\u5834\u5408\u3001\u6700\u5f8c\u306e\u6570\u3092\u9593\u9055\u3048\u305f\u308a\u3057\u3066\u30d0\u30b0\u3092\u751f\u307f\u51fa\u3059\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305fenumrator\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u6570\u3092\u6570\u3048\u308b\u3053\u3068\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3092\u5206\u3051\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n### objective-C\u3067iterator\u3092\u5229\u7528\u3059\u308b\u65b9\u6cd5\nNSFastEnumeration protocol\u3092\u5229\u7528\u3057\u307e\u3059\u3002NSArray\u3084NSSet\u3084NSDictionary\u306f\u3001\u3053\u306eprotocol\u3092\u542b\u3093\u3067\u307e\u3059\u3002\n\n\n### enumrator\u306e\u4f7f\u3044\u5206\u3051\n* ``for in``\u3067\u5229\u7528\u3059\u308b\u306e\u304c\u57fa\u672c\u3067\u3059\n\n```\nfor (id object in array) {\n    NSLog(@\"%@\", object);\n}\n```\n* ``while``\u3067\u66f8\u304f\u5834\u5408\n\n```\nid object = nil;\nNSEnumerator *enumerator = ...;\nwhile ((object = [enumerator nextObject])) {\n    NSLog(@\"%@\", object);\n}\n```\n* NSArray\u3084NSSet\u3084NSDictionary\u3084NSIndexSet\u3067\u306fblock\u3067enumerate\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n[array enumerateObjectsUsingBlock:^(id object, NSUInteger idx, BOOL *stop) {\n    NSLog(@\"%@\", object);\n}];\n```\n\n### NSFastEnumration\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u4f7f\u3044\u65b9\n* NSFastEnumeration\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u306f\u3001countByEnumeratingWithState\u3068\u3044\u3046method\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\n\n\n```BookShelf.h\n#import <Foundation/Foundation.h>\n\n#define ARRAY_SIZE 32\n\n@interface BookShelf : NSObject <NSFastEnumeration>\n{\n    __unsafe_unretained id  _objects[ARRAY_SIZE];\n}\n\n@end\n```\n```BookShelf.m\n#import \"BookShelf.h\"\n\n@implementation BookShelf\n\n- (id)init\n{\n    self = [super init];\n    if (!self) {\n        return nil;\n    }\n\n    for (int i = 0; i < ARRAY_SIZE; i++) {\n        _objects[i] = [NSNumber numberWithInt:i];\n    }\n\n    return self;\n}\n\n- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(id __unsafe_unretained [])buffer count:(NSUInteger)len\n{\n    if (state->state >= ARRAY_SIZE) {\n        return 0;\n    }\n\n    state->itemsPtr = _objects;\n    state->state = ARRAY_SIZE;\n    state->mutationsPtr = &state->extra[0];\n\n    return ARRAY_SIZE;\n}\n\n@end\n```\n```main.m\n#import <Foundation/Foundation.h>\n#import \"BookShelf.h\"\n\nint main(int argc, const char * argv[])\n{\n\n    @autoreleasepool {\n        BookShelf *bookShelf = [BookShelf new];\n\n        for (id object in bookShelf) {\n            NSLog(@\"%@\", object);\n        }\n    }\n    return 0;\n}\n```\n\n\n### \u53c2\u8003\n* \u3053\u3053\u3092\u8aad\u3080\u3068\u3088\u308a\u8a73\u3057\u3044\u3067\u3059 http://nshipster.com/enumerators/\n* Fast Enumeration\u306b\u3064\u3044\u3066 http://news.mynavi.jp/column/objc/105/\n* mutationPtr\u306e\u6307\u5b9a\u65b9\u6cd5 http://stackoverflow.com/questions/7815326/automatic-reference-counting-error-with-fast-enumeration\n* \u4eca\u56de\u306e\u30bd\u30fc\u30b9\u306e\u30b5\u30f3\u30d7\u30eb https://github.com/reikubonaga/objective-c-iterator\n", "tags": ["Objective-C", "wantedly", "Foundation", "iOS"]}