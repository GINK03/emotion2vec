{"context": "\n\nTL;DR\nElasticBeanstalk\u306eDockerrun.aws.json\u304b\u3089Amazon ECR\u306b docker image \u3092push\u3059\u308b\nPrimary\u306aDocker Registry\u306f docker hub\u306a\u308a quay.io \u306a\u308a\u3001ECR\u4ee5\u5916\u306eRegistry\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\nSecondary\u306aDocker Registry\u3068\u3057\u3066ECR\u3092\u5229\u7528\u3059\u308b\u3068\u304d\u306bdocker image\u3092sync\u3059\u308b\n\nscript\n\n# Docker image sync quay.io to Amazon ECR\n# require docker login over aws cli\n# command here :\n#   aws ecr get-login --region ap-northeast-1\n#   and exec display docker login command\n#   $(aws ecr get-login --region ap-northeast-1)\n#\nrequire 'json'\n\ndef targets\n  # Dockerrun.aws.json\n  json = open('./Dockerrun.aws.json') do |file|\n    JSON.load(file)\n  end\n  images = []\n  json['containerDefinitions'].each do |caontainer|\n    images << caontainer['image']\n  end\n  images\nend\n\ndef docker_pull(image)\n  `docker pull #{image}`\nend\n\ndef tag_change(image)\n  new_tag = replace_repository(image)\n  `docker tag #{image} #{new_tag}`\nend\n\ndef docker_push(image)\n  new_tag = replace_repository(image)\n  `docker push #{new_tag}`\nend\n\ndef replace_repository(image)\n  repository, tag = image.split(':')\n  repository.gsub!(%r{quay.io/hogehoge}, ecr_host)\n  return \"#{repository}:latest\" if ARGV[0] == 'latest'\n  \"#{repository}:#{tag}\"\nend\n\ndef ecr_host\n  'xxxxxxxxxxxxxx.dkr.ecr.us-east-1.amazonaws.com'\nend\n\ntargets.each do |image|\n  docker_pull(image)\n  tag_change(image)\n  docker_push(image)\nend\n\n# TL;DR\nElasticBeanstalk\u306eDockerrun.aws.json\u304b\u3089Amazon ECR\u306b docker image \u3092push\u3059\u308b\nPrimary\u306aDocker Registry\u306f docker hub\u306a\u308a quay.io \u306a\u308a\u3001ECR\u4ee5\u5916\u306eRegistry\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\nSecondary\u306aDocker Registry\u3068\u3057\u3066ECR\u3092\u5229\u7528\u3059\u308b\u3068\u304d\u306bdocker image\u3092sync\u3059\u308b\n\n\n# script\n\n```rb\n\n# Docker image sync quay.io to Amazon ECR\n# require docker login over aws cli\n# command here :\n#   aws ecr get-login --region ap-northeast-1\n#   and exec display docker login command\n#   $(aws ecr get-login --region ap-northeast-1)\n#\nrequire 'json'\n\ndef targets\n  # Dockerrun.aws.json\n  json = open('./Dockerrun.aws.json') do |file|\n    JSON.load(file)\n  end\n  images = []\n  json['containerDefinitions'].each do |caontainer|\n    images << caontainer['image']\n  end\n  images\nend\n\ndef docker_pull(image)\n  `docker pull #{image}`\nend\n\ndef tag_change(image)\n  new_tag = replace_repository(image)\n  `docker tag #{image} #{new_tag}`\nend\n\ndef docker_push(image)\n  new_tag = replace_repository(image)\n  `docker push #{new_tag}`\nend\n\ndef replace_repository(image)\n  repository, tag = image.split(':')\n  repository.gsub!(%r{quay.io/hogehoge}, ecr_host)\n  return \"#{repository}:latest\" if ARGV[0] == 'latest'\n  \"#{repository}:#{tag}\"\nend\n\ndef ecr_host\n  'xxxxxxxxxxxxxx.dkr.ecr.us-east-1.amazonaws.com'\nend\n\ntargets.each do |image|\n  docker_pull(image)\n  tag_change(image)\n  docker_push(image)\nend\n```\n", "tags": ["docker", "ElasticBeanstalk", "ECR"]}