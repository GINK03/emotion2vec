{"context": " More than 1 year has passed since last update.mmzeeman/esqlite: Erlang NIF for sqlite\nundefined \u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002\n\n\u30bd\u30fc\u30b9\nmake_atom \u3067 NULL \u306f undefined \u3068\u3055\u308c\u308b\nstatic ERL_NIF_TERM\nmake_cell(ErlNifEnv *env, sqlite3_stmt *statement, unsigned int i)\n{\n    int type = sqlite3_column_type(statement, i);\n\n    switch(type) {\n    case SQLITE_INTEGER:\n        return enif_make_int64(env, sqlite3_column_int64(statement, i));\n    case SQLITE_FLOAT:\n        return enif_make_double(env, sqlite3_column_double(statement, i));\n    case SQLITE_BLOB:\n        return enif_make_tuple2(env, make_atom(env, \"blob\"), \n            make_binary(env, sqlite3_column_blob(statement, i), \n                sqlite3_column_bytes(statement, i)));\n    case SQLITE_NULL:\n        return make_atom(env, \"undefined\");\n    case SQLITE_TEXT:\n        return make_binary(env, sqlite3_column_text(statement, i), \n            sqlite3_column_bytes(statement, i));\n    default:\n        return make_atom(env, \"should_not_happen\");\n    }\n}\n\n\n[mmzeeman/esqlite: Erlang NIF for sqlite](https://github.com/mmzeeman/esqlite)\n\nundefined \u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002\n\n## \u30bd\u30fc\u30b9\n\nmake_atom \u3067 NULL \u306f undefined \u3068\u3055\u308c\u308b\n\n```c\nstatic ERL_NIF_TERM\nmake_cell(ErlNifEnv *env, sqlite3_stmt *statement, unsigned int i)\n{\n    int type = sqlite3_column_type(statement, i);\n     \n    switch(type) {\n    case SQLITE_INTEGER:\n\t    return enif_make_int64(env, sqlite3_column_int64(statement, i));\n    case SQLITE_FLOAT:\n\t    return enif_make_double(env, sqlite3_column_double(statement, i));\n    case SQLITE_BLOB:\n        return enif_make_tuple2(env, make_atom(env, \"blob\"), \n            make_binary(env, sqlite3_column_blob(statement, i), \n                sqlite3_column_bytes(statement, i)));\n    case SQLITE_NULL:\n\t    return make_atom(env, \"undefined\");\n    case SQLITE_TEXT:\n\t    return make_binary(env, sqlite3_column_text(statement, i), \n            sqlite3_column_bytes(statement, i));\n    default:\n\t    return make_atom(env, \"should_not_happen\");\n    }\n}\n```\n", "tags": ["sqlite", "Erlang"]}