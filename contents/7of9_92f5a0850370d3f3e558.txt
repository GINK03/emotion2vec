{"context": "C\u8a00\u8a9e\u306b\u3066sprintf()\u3092\u4f7f\u308f\u306a\u3044\u306710\u9032\u6570\u304b\u308916\u9032\u6570\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u691c\u8a0e\u3002\n\u30de\u30a4\u30b3\u30f3\u306b\u3066\u30e1\u30e2\u30ea\u5236\u7d04\u304c\u53b3\u3057\u3044\u6642\u306bsprintf()\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u9078\u629e\u80a2\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\ncode v0.1\nhttp://ideone.com/GsX2DR\n#include <stdio.h>\n#include <stdbool.h>\n\nbool toHex1(int val, char *dstPtr){\n    if (dstPtr == NULL) {\n        return false;\n    }\n    sprintf(dstPtr, \"%X\", val);\n    return true;\n}\nbool toHex2(int val, char *dstPtr) {\n    if (dstPtr == NULL) {\n        return false;\n    }\n\n    char wrkstr[5];\n    static const int maxbit = 16;\n    int wrkval = val;\n    int bit = 0;\n    while(bit <= maxbit) {\n        wrkval = (val >> bit & 0xF);\n        if (wrkval == 0) {\n            break;\n        }\n        if (wrkval < 10) {\n            wrkstr[bit/4] = '0' + wrkval;\n        } else {\n            wrkstr[bit/4] = 'A' + (wrkval - 10);\n        }\n//      printf(\"%d\", wrkval);\n        bit += 4;\n    }\n\n    int idx = bit / 4 - 1;\n    while(idx >= 0) {\n        dstPtr[idx] = wrkstr[bit / 4 - idx - 1];\n        idx--;  \n    }\n\n    return true;        \n}\n\nint main(void) {\n    int val=65534;\n    char res[20];\n\n    if(toHex1(val, res)) {\n        printf(\"%d %s\\n\", val, res);\n    }\n    if(toHex2(val, res)) {\n        printf(\"%d %s\\n\", val, res);\n    }\n\n    return 0;\n}\n\n\n\n\u7d50\u679c\n65534 FFFE\n65534 FFFE\n\n\n\u4f55\u304b\u8907\u96d1\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u305f\u3002\nTODO: \u5024\u304c0\u306e\u6642\u306b\u30df\u30b9\u3063\u3066\u308b\u3002\nhttp://ideone.com/94tjai\n\ncode v0.2 (\u6539\u826f\u7248)\n@shiracamus \u3055\u3093\u306e\u30b3\u30fc\u30c9\u304c\u826f\u3044\u3067\u3059\u3002\nC\u8a00\u8a9e\u306b\u3066sprintf()\u3092\u4f7f\u308f\u306a\u3044\u306710\u9032\u6570\u304b\u308916\u9032\u6570\u306b\u5909\u63db\u3059\u308b\u65b9\u6cd5\u3092\u691c\u8a0e\u3002\n\u30de\u30a4\u30b3\u30f3\u306b\u3066\u30e1\u30e2\u30ea\u5236\u7d04\u304c\u53b3\u3057\u3044\u6642\u306bsprintf()\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u9078\u629e\u80a2\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n### code v0.1\n\nhttp://ideone.com/GsX2DR\n\n```c\n#include <stdio.h>\n#include <stdbool.h>\n\nbool toHex1(int val, char *dstPtr){\n\tif (dstPtr == NULL) {\n\t\treturn false;\n\t}\n\tsprintf(dstPtr, \"%X\", val);\n\treturn true;\n}\nbool toHex2(int val, char *dstPtr) {\n\tif (dstPtr == NULL) {\n\t\treturn false;\n\t}\n\t\n\tchar wrkstr[5];\n\tstatic const int maxbit = 16;\n\tint wrkval = val;\n\tint bit = 0;\n\twhile(bit <= maxbit) {\n\t\twrkval = (val >> bit & 0xF);\n\t\tif (wrkval == 0) {\n\t\t\tbreak;\n\t\t}\n\t\tif (wrkval < 10) {\n\t\t\twrkstr[bit/4] = '0' + wrkval;\n\t\t} else {\n\t\t\twrkstr[bit/4] = 'A' + (wrkval - 10);\n\t\t}\n//\t\tprintf(\"%d\", wrkval);\n\t\tbit += 4;\n\t}\n\t\n\tint idx = bit / 4 - 1;\n\twhile(idx >= 0) {\n\t\tdstPtr[idx] = wrkstr[bit / 4 - idx - 1];\n\t\tidx--;\t\n\t}\n\n\treturn true;\t\t\n}\n\nint main(void) {\n\tint val=65534;\n\tchar res[20];\n\t\n\tif(toHex1(val, res)) {\n\t\tprintf(\"%d %s\\n\", val, res);\n\t}\n\tif(toHex2(val, res)) {\n\t\tprintf(\"%d %s\\n\", val, res);\n\t}\n\t\n\treturn 0;\n}\n\n```\n\n```txt:\u7d50\u679c\n65534 FFFE\n65534 FFFE\n```\n\n\u4f55\u304b\u8907\u96d1\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3057\u307e\u305f\u3002\n\nTODO: \u5024\u304c0\u306e\u6642\u306b\u30df\u30b9\u3063\u3066\u308b\u3002\nhttp://ideone.com/94tjai\n\n\n### code v0.2 (\u6539\u826f\u7248)\n\n@shiracamus \u3055\u3093\u306e[\u30b3\u30fc\u30c9](http://qiita.com/7of9/items/92f5a0850370d3f3e558#comment-34a11e9f87be9cf375c2)\u304c\u826f\u3044\u3067\u3059\u3002\n\n", "tags": ["C", "MSC-MOD20", "stringOperation"]}