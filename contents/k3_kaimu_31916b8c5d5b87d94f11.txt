{"context": " More than 1 year has passed since last update.\u524d\u56de\u306edranges.algorithm\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001dranges.range\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001\u3081\u3061\u3083\u304f\u3061\u3083\u9577\u3044\u306e\u30672\u56de\u304f\u3089\u3044\u306b\u5206\u3051\u307e\u3059\u3002\n\u4eca\u56de\u306f\u305d\u306e1\u756a\u76ee\u3067\u3059\u3002\ndranges\u306b\u3064\u3044\u3066\u306fdranges.algorithm\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3061\u306a\u307f\u306bdranges\u306b\u3064\u3044\u3066\u306f\u3059\u3079\u3066\u306eunittest\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\n\u304b\u3064\u3001unittest\u3082\u3059\u3079\u3066\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\ndranges.range.minLength\nsize_t minLength(R...)(R ranges) if (allSatisfy!(isForwardRange, R) && allHaveLength!R && !allAreInfinite!R)\n\n\u53d7\u3051\u53d6\u3063\u305f\u30ec\u30f3\u30b8\u306e\u6700\u5c0f\u306e\u9577\u3055\u3092\u8fd4\u3057\u307e\u3059\u3002\u53d7\u3051\u53d6\u308b\u30ec\u30f3\u30b8\u306f\u3059\u3079\u3066\u524d\u9032\u30ec\u30f3\u30b8\u3067\u3001\u9577\u3055\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u7121\u9650\u30ec\u30f3\u30b8\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nauto s = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\nint[] r = [0, 1, 2, 3];\nauto c = repeat(5); //\u7121\u9650\n\nauto ml = minLength(s, r, c);\nassert(ml == 4);    //r\u306e\u9577\u3055\n\n\ndranges.range.slice\nTake!R slice(R)(R range, int begin, int end)\n\nhasSlicing!R\u304ctrue\u3067\u306a\u3044\u3082\u306e\u306b\u5bfe\u3057\u3066\u3082\u30b9\u30e9\u30a4\u30b9\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002\n\ndranges.range.dropLast\nR dropLast(R)(R range, size_t n) if (isBidirectionalRange!R)\n\n\u53cc\u65b9\u5411\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ec\u30f3\u30b8\u306e\u5f8c\u304b\u3089n\u8981\u7d20\u3092\u3051\u3057\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto r1 = [0, 1, 2, 3, 4, 5];\nauto d = dropLast(r1, 3);\n\nassert(equal(d, [0,1,2][]));\nassert(equal(dropLast(r1, 0), r1));\nassert(dropLast(r1, 6).empty);\nassert(dropLast(r1, 100).empty);\n\n\ndranges.range.templateFunctionAnalysis\ntemplate templateFunctionAnalysis(alias templateFun, alias ParameterGenerator, size_t startN = 0, size_t limittedN = 10){\n    enum endN;\n    alias ... ArgumentTypes;\n    enum arity;\n    alias ... ReturnType;\n}\n\n\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u79c1\u304c\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u3046\u3061dranges.traits\u306b\u3044\u308c\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\n\u30fbtemplateFun : \u89e3\u6790\u3057\u305f\u3044\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\n\u30fbParameterGenerator : [startN ~ limittedN]\u307e\u3067\u306e\u975e\u8ca0\u306e\u6574\u6570\u3092\u53d6\u308a\u3001templateFun\u306e\u5f15\u6570\u306e\u578b\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u30fbstartN : ParameterGenerator\u3092\u6700\u521d\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u6570\n\u30fblimittedN : ParameterGenerator\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u5834\u5408\u306e\u6700\u7d42\u306e\u6570\n\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u306b\u306a\u308b\u307e\u3067N\u3092startN\u304b\u3089limittedN\u307e\u3067\u5897\u52a0\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\ntemplateFun(ParameterGenerator!(N).init)\n\n\u4f7f\u3044\u65b9\u306e\u4f8b\u3092\u6319\u3052\u3066\u304f\u3068\u3001\ntemplate Generator(size_t N){alias TypeNuple!(int, N) Generator;}\n\nalias templateFunctionAnalysis!(( (a, b, c) => a) , Generator) Result0;\n\nstatic assert(Result0.arity == 3);\nstatic assert(Result0.endN == 3);\nstatic assert(is(Result0.ArgumentTypes == Generator!3));\nstatic assert(is(Result0.ReturnType == int));\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u7279\u6b8a\u306a\u5834\u9762\u3067\u4f7f\u308f\u308c\u3001naryFun!\"a+b+c\"\u306a\u3069\u306e\u5f15\u6570\u306e\u6570\u3092\u89e3\u6790\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u4f7f\u3044\u307e\u3059\u3002\n\ndranges.range.dropWhile\ntemplate dropWhile(alias pred, size_t step = 1){\n    template dropWhile(R, T...)if(isForwardRange!R){\n        R dropWhile(R r, auto ref T subParam)\n    }\n}\n\npred\u304ctrue\u306e\u9593\u3060\u3051\u8981\u7d20\u3092\u524a\u9664\u3057\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002step\u306f1\u56de\u306b\u9032\u3081\u308b\u91cf\u3067\u3059\u3002\npred\u306f0\u4ee5\u4e0a\u306e\u5f15\u6570\u306e\u500b\u6570\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\nstring s = \"  , abcd  efg\";\nauto d1 = dropWhile!(isOneOf!\" ,\")(s);  //' ' \u304b ','\u3092\u30b9\u30ad\u30c3\u30d7\nassert(d1 == \"abcd  efg\");\n\nauto r1 = [0, 1, 2, 3, 3, 4, 5];\nauto d2 = dropWhile!\"a<4\"(r1);          //4\u672a\u6e80\u306e\u8981\u7d20\u3092\u30b9\u30ad\u30c3\u30d7\nassert(equal(d2, [4, 5]));\n\nauto d3 = dropWhile!\"a<b\"(r1);          //\u5897\u52a0\u3057\u3066\u3044\u308b\u90e8\u5206\u3092\u524a\u9664\nassert(equal(d3, [3, 3, 4, 5]));        //(3,3)\u306f\u5897\u52a0\u3057\u3066\u3044\u306a\u3044\n\nauto d4 = dropWhile!(\"a<b\",2)(r1);      //[(0, 1),(2, 3),(3, 4)]\nassert(equal(d4, [5]));                 //\"a<b\"\u3092\u6e80\u305f\u3057\u6d88\u3055\u308c\u308b\n\nauto d5 = dropWhile!(\"a<b && b<c\")(r1); //[(0, 1, 2), (1, 2, 3), (2, 3, 3), ...]\nassert(equal(d5, [2, 3, 3, 4, 5]));     //(2, 3, 3)\u306fpred\u3092\u6e80\u305f\u3055\u306a\u3044\n\nauto d7 = dropWhile!\"true\"(r1);         //\u5e38\u306btrue\u306apred\nassert(d7.empty);                       //\u3082\u3061\u308d\u3093empty\n\nauto d7_d = dropWhile!(\"true\", 2)(r1);  //step\u304c2\u3067\u3082\nassert(d7_d.empty);                     //[5]\u304c\u4f59\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n//[5]\u304c\u4f59\u3089\u306a\u3044\u7406\u7531\u306f\u3001step=2\u3067pred\u306f0\u500b\u306e\u5f15\u6570\u3067\u3042\u308b\u304b\u3089\u3001[0, 1, 2, 3, 3, 4, 5]\u306e\u5834\u5408\u306b\u306f\n//[0, 2, 3, 5]\u304c\u691c\u67fb\u306b\u4f7f\u308f\u308c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u3067true\u3068\u306a\u308b\u304b\u3089[5]\u307e\u3067\u3059\u3079\u3066\u6d88\u3055\u308c\u308b\u3002\n\nauto r2 = [1];\nauto d8 = dropWhile!\"a<b\"(r2);\n//\u6700\u521d\u304b\u30891\u8981\u7d20\u3057\u304b\u306a\u3044\u306e\u306bbinary\u95a2\u6570\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u305d\u3082\u305d\u3082pred\u3092\u547c\u3079\u306a\u3044\u306e\u3067\u691c\u67fb\u3067\u304d\u306a\u3044\nassert(equal(d8, [1][]));\n\nauto d9 = dropWhile!\"a < b\"(r1, 4);     //b\u306b\u306f4\u304c\u5165\u308b\u3002\u3088\u3063\u3066\u30ec\u30f3\u30b8\u304b\u3089\u306f1\u3064\u305a\u3064\u691c\u67fb\u3055\u308c\u3066\u3044\u304f\nassert(equal(d9, [4, 5]));              //a < 4\u3092\u6e80\u305f\u3059\u9593drop\n\nauto d10 = dropWhile!\"a == b-c\"(r1, 1); //c\u306b\u306f1\u304c\u5165\u308b\u305f\u3081 a == b-1\u304c\u6e80\u305f\u3055\u308c\u308b\u307e\u3067drop\nassert(equal(d10, [3, 3, 4, 5]));\n\nauto d12 = dropWhile!((a, b, c) => a < b, 2)(r1, 1);\n//\u5b9f\u969b\u306b\u306fc\u306b1\u304c\u5165\u308b\u304c\u3001\u691c\u67fb\u306b\u306fa,b\u3057\u304b\u95a2\u308f\u3063\u3066\u304a\u3089\u305a\u3001\u3053\u308c\u306fd4\u3068\u540c\u3058\u7d50\u679c[5]\u3068\u306a\u308b\nassert(equal(d12, [5][]));\n\nsize_t cnt;\nbool counter(){return cnt++ < 3;}       //0\u5f15\u6570\u30673\u56de\u76ee\u307e\u3067\u306ftrue\n\nauto d16 = dropWhile!(counter)(r1);\nassert(equal(d16, [3, 3, 4, 5]));       //3\u56de\u76ee\u307e\u3067true\u306a\u306e\u3067\u6700\u521d\u306e3\u8981\u7d20\u304c\u306a\u304f\u306a\u308b\n\n\ndranges.range.popFrontWhile\ntemplate popFrontWhile(alias pred, size_t step = 1){\n    template popFrontWhile(R, T...){\n        size_t popFrontWhile(ref R r, T subArgs)\n    }\n}\n\ndropWhile\u306epopFront\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\ndranges.range.takeWhile\ntemplate takeWhile(alias pred){\n    template takeWhile(R, T...)if(isForwardRange!R){\n        TakeWhile takeWhile(R range, T args)\n    }\n}\n\ndropWhile\u3084popFrontWhile\u306etake\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\ndranges.range.takeUntil\n\ndranges.range.rotateWhile\n\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u2026\uff1f\n\ndranges.range.tail\nR tail(R)(R range) if (isInputRange!R)\n\nHaskell\u306etail\u3068\u540c\u3058\u3067\u3059\u3002\u304c\u3001empty\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u307e\u307e\u8fd4\u3057\u307e\u3059\u3002\nHaskell\u306e\u5834\u5408\u306f\u7a7a\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3068\u4f8b\u5916\u304c\u51fa\u308b\u306f\u305a\u3067\u3059\u3002\n\ndranges.range.tails\nTails!R tails(R)(R range) if (isForwardRange!R)\n\nHaskell\u306etails\u3068\u3059\u3053\u3057\u9055\u3044\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u3002\nauto r = [0,1,2,3];\nauto t = tails(r);\nassert(equal(t, [[1,2,3], [2,3], [3], [] ]));\n\n\ndranges.range.heads\nHeads!R heads(R)(R range) if (isForwardRange!R)\n\ntails\u306ehead\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\nauto r = [0,1,2,3];\nauto h = heads(r);\nauto witness = [ [], [0], [0,1], [0,1,2], [0,1,2,3] ][];\nforeach(elem; h) {\n    assert(equal(elem, witness.front));\n    witness.popFront;\n}\n\n\ndranges.range.insertAt\nauto insertAt(R1, R2)(size_t n, R1 range1, R2 range2) if (allSatisfy!(isForwardRange, R1, R2))\n//\u307e\u305f\u306f\nauto insertAt(R, E)(size_t n, R range, E element) if (isForwardRange!R && is(ElementType!R == E))\n\n\u6b21\u3092\u8fd4\u3057\u307e\u3059\u3002\nreturn chain(take(range1, n), range2, drop(range1, n));\n//\u307e\u305f\u306f\nreturn chain(take(range, n), [element][], drop(range, n));\n\n\u4f8b\u3068\u3057\u3066\u3001\nauto r1 = [0,1,2,3];\nauto m = map!\"a*a\"(r1);\nauto ia0 = insertAt(0, r1, m);\nauto ia2 = insertAt(2, r1, m);\nauto ia10 = insertAt(10, r1, m);\nassert(equal(ia0, [0,1,4,9,  0,1,2,3][]));\nassert(equal(ia2, [0,1,  0,1,4,9,  2,3][]));\nassert(equal(ia10,[0,1,2,3,  0,1,4,9][]));\n\nauto ia1 = insertAt(1, r1, 99);\nassert(equal(ia1, [0,99,1,2,3][]));\n\n\ndranges.range.cutAt\nTuple!(R, R) cutAt(R)(size_t index, R range) if (isForwardRange!R && hasSlicing!R && hasLength!R)\nTuple!(ElementType!R[], R) cutAt(R)(size_t index, R range) if (isForwardRange!R && (!hasSlicing!(R) || !hasLength!(R)))\n\n[0, index)\u307e\u3067\u306e\u8981\u7d20(index\u500b)\u3092\u8fd4\u308a\u5024\u306e\u6700\u521d\u306e\u8981\u7d20\u306b\u3001\u6b8b\u308a\u30922\u756a\u76ee\u306b\u683c\u7d0d\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto r1 = [0,1,2,3,4,5];\nauto c1 = cutAt(3, r1);\nassert(first(c1) == [0,1,2][]);\nassert(second(c1) == [3,4,5][]);\n\n\ndranges.range.cutWhen\nTuple!(ElementType!(R)[], R) cutWhen(alias pred, R)(R range) if (isForwardRange!R)\n\npred\u306funary\u95a2\u6570\u3067\u3059\u3002\npred\u304ctrue\u306a\u9593\u3060\u3051\u306e\u3082\u306e\u3092\u96c6\u3081\u305f\u306e\u3092\u5148\u982d\u8981\u7d20\u306b\u3001\u306e\u3053\u308a\u3092\u6b21\u306e\u8981\u7d20\u306b\u5165\u308c\u8fbc\u307f\u307e\u3059\u3002\nauto r1 = [0, 1, 2, 3, 4, 1, 2];\nauto cut = cutWhen!\"a<3\"(r1);\nassert(equal(cut.field[0], [0, 1, 2]));\nassert(equal(cut.field[1], [3, 4]));\n\n\ndranges.range.knit\nKnit!(R) knit(R...)(R ranges) if (allSatisfy!(isInputRange, R))\n\nstd.range.zip\u306e\u5f31\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002std.range.zip\u306e\u307b\u3046\u304c\u3044\u3044\u306e\u3067\u3001deprecated\u306b\u306a\u3063\u3066\u3082\u3044\u3044\u3068\u601d\u3046\u3002\n\ndranges.range.stitch\nStitchType!R stitch(R...)(R ranges) if (allSatisfy!(isTupleRange, R))\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u8907\u6570\u500b\u53d7\u3051\u53d6\u308a\u3001tuple(a.field, b.field, ...)\u3068\u3057\u305f\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto r1 = [0,     1,     2,   3,   4,   5];\nauto r2 = [0.1,   0.2,   0.3, 0.4];\nauto r3 = [\"abc\", \"def\", \"\",  \"g\"];\nauto r4 = [\"a\",   \"b\",   \"c\", \"d\", \"e\", \"f\"];\n\nauto k1 = knit(r1, r2); // returns Tuple!(int, double)\nauto k2 = knit(r3,r4);  // returns Tuple!(string, char)\nauto tf = tfilter!\"b<2\"(r3,r1); // returns Tuple!(string, int)\n\nauto s = stitch(k1,k2,tf); // returns Tuple!(int,double,string,char,string,int)\n\nassert(s.front == tuple(0, 0.1, \"abc\", \"a\", \"abc\", 0));\ns.popFront;\nassert(s.front == tuple(1, 0.2, \"def\", \"b\", \"def\", 1));\ns.popFront;\nassert(s.empty); //tf\u304cempty\u3068\u306a\u308b\u3002\n\n\ndranges.range.twist\nauto twist(int n, R)(R range) if (isTupleRange!R)\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u5de6\u65b9\u5411\u306bn\u8981\u7d20\u56de\u3057\u305f\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto r1 = [0,    1,    2,    3, 4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\",\"e\",\"f\"];\n\nauto k = knit(r1,r2,s);\nassert(is(ElementType!(typeof(k)) == Tuple!(int,double,string)));\nassert(equal(k, [tuple(0,3.14,\"a\"), tuple(1,2.78,\"b\"), tuple(2,1.414,\"c\")][]));\n\nauto rot1 = twist!1(k);\nassert(is(ElementType!(typeof(rot1)) == Tuple!(double,string,int)));\nassert(equal(rot1, [tuple(3.14,\"a\",0), tuple(2.78,\"b\",1), tuple(1.414,\"c\",2)][]));\n\nauto rot_1 = twist!(-1)(k);\nassert(is(ElementType!(typeof(rot_1)) == Tuple!(string,int,double)));\nassert(equal(rot_1, [tuple(\"a\",0,3.14), tuple(\"b\",1,2.78), tuple(\"c\",2,1.414)][]));\n\n\ndranges.range.reverse\nauto reverse(R)(R range) if (isTupleRange!R)\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u9806\u5e8f\u3092\u9006\u8ee2\u3055\u305b\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001tuple(a[n-1], a[n-2], ..., a[1], a[0])\u3092\u4f5c\u308a\u307e\u3059\u3002\nauto r1 = [0,    1,    2,3,  4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\", \"e\", \"f\"];\n\nauto k = knit(r1, r2, s);\nassert(is(ElementType!(typeof(k)) == Tuple!(int,double,string)));\nassert(equal(k, [tuple(0, 3.14, \"a\"), tuple(1, 2.78, \"b\"), tuple(2, 1.414, \"c\")]));\n\nauto rev = reverse(k);\nassert(is(ElementType!(typeof(rev)) == Tuple!(string,double,int)));\nassert(equal(rev, [tuple(\"a\", 3.14, 0), tuple(\"b\", 2.78, 1), tuple(\"c\", 1.414, 2)]));\n\n\ndranges.range.splice\nauto splice(size_t n, R1, R2)(R1 range1, R2 range2)\nif (allSatisfy!(isForwardRange, R1, R2) && is(ElementType!R1.Types) && (n <= ElementType!R1.Types.length))\n\nrange1\u306f\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3067\u306a\u304f\u3066\u306f\u3044\u3051\u305a\u3001\nrange1\u306en\u8981\u7d20\u306brange2\u3092\u5272\u308a\u8fbc\u307e\u305b\u307e\u3059\u3002\nauto r1 = [0,  1,  2,  3,  4];\nauto s =  [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"];\nauto k = knit(r1, s);\n\nauto r2 = [-2.1, 0.0, 3.14];\n\nauto spl = splice!1(k, r2);     //tuple(k.front[0], r2.front, k.front[1])\nassert(is(ElementType!(typeof(spl)) == Tuple!(int, double, string)));\nassert(equal(spl, [tuple(0, -2.1, \"a\"), tuple(1, 0.0, \"b\"), tuple(2, 3.14, \"c\")]));\n\nauto spl2 = splice!0(spl,k);    //tuple(k.front, spl.front[0], spl.front[1])\nassert(is(ElementType!(typeof(spl2)) == Tuple!(Tuple!(int,string), int,double,string))); \nassert(equal(spl2, [tuple(tuple(0, \"a\"), 0, -2.1, \"a\"), tuple(tuple(1, \"b\"), 1, 0.0, \"b\"), tuple(tuple(2,\"c\"),2, 3.14, \"c\")]));\n\n\ndranges.range.shred\ntemplate shred(idx...){\n    auto shred(R)(R range)if(isTupleRange!R)\n}\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001idx\u306e\u9806\u756a\u306b\u4e26\u3079\u66ff\u3048\u307e\u3059\u3002\nauto r1 = [0,    1,    2,    3,    4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\", \"e\", \"f\"];\n\nauto k = knit(r1, r2, s);\nauto shr1 = shred!(1,0)(k); //\u53cd\u8ee2\nassert(equal(shr1, [tuple(3.14, 0), tuple(2.78, 1), tuple(1.414, 2)]));\n\nauto shr2 = shred!(1)(k); //e[1]\u306e\u307f\u3092\u53d6\u5f97\nassert(equal(shr2, [3.14, 2.78, 1.414]));\n\nauto shr3 = shred!(2,0,1,1)(k); //\u91cd\u8907\u3082OK\nassert(equal(shr3, [tuple(\"a\", 0, 3.14, 3.14),\n                    tuple(\"b\", 1, 2.78, 2.78),\n                    tuple(\"c\", 2, 1.414, 1.414)]));\n\n\ndranges.range.untuplify\nTMapType!(\"a\", R) untuplify(R)(R range) if (isTupleRange!R && ElementType!R.Types.length == 1)\n\n\u8981\u7d20\u304c1\u8981\u7d20\u304b\u3089\u306a\u308btuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001tuple\u3067\u306a\u304f\u3057\u307e\u3059\u3002\nauto r1 = [0,1,2,3,4];\n\nauto k = knit(r1);      //Tuple!(int)\nassert(equal(k, [tuple(0), tuple(1), tuple(2), tuple(3), tuple(4)]));\nauto u = untuplify(k);  //int[]\nassert(equal(u, r1));\n\n\ndranges.range.transverse\nTransverse!R transverse(R...)(R ranges)\n\n\u8907\u6570\u306e\u30ec\u30f3\u30b8\u3092\u9806\u756a\u306b\u305f\u3069\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nauto r1 = [0,1,2,3,4];\nauto r2 = repeat(5);\nauto r3 = [-2.0, -1.0, 0.0, 1.0];\n\nauto t = transverse(r1, r2, r3);\nassert(is(ElementType!(typeof(t)) == double));          //\u5168\u8981\u7d20\u306fdouble\u306b\u6697\u9ed9\u5909\u63db\u3055\u308c\u308b\nassert(equal(t, [0.0, 5, -2, 1, 5, -1, 2, 5, 0, 3, 5, 1, 4, 5]));   //r3\u304cempty\u306b\u306a\u308a\u7d42\u308f\u308b\n\nauto t2 = transverse(r1, emptyRange!double, emptyRange!short);\nassert(is(ElementType!(typeof(t2)) == double));\nassert(equal(t2, [0][]));   //emptyRange!double\u306b\u3088\u308a[0]\u3060\u3051\u3067\u7d42\u308f\u308b\n\n\ndranges.range.interleave\nTransverse!(B,Cycle!S) interleave(B, S)(B bigRange, S smallRange)\n\nbigRange\u3068smallRange\u3092\u53d7\u3051\u53d6\u308a\u3001\n[b[0], s[0], b[1], s[1], ... , b[n], s[n % s.length]]\n\u3068\u3044\u3046\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto i = interleave(\"abcdef\", \",\");\nassert(asString(i) == \"a,b,c,d,e,f,\");\nauto i2 = interleave(\"abcdef\", \",;.\");\nassert(asString(i2) == \"a,b;c.d,e;f.\");\nauto r1 = [0, 1, 2, 3, 4];\nauto i3 = interleave(r1, r1);\nassert(equal(i3, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4]));\n\n\ndranges.range.segment\ntemplate segment(size_t N : 1, Range)\nif(isInputRange!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif (isInputRange!(Unqual!Range) \n&& (isForwardRange!(Unqual!Range) ? (!isBidirectionalRange!(Unqual!Range)\n                                      && !isRandomAccessRange!(Unqual!Range)) : true))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isRandomAccessRange!(Unqual!Range)\n&& isBidirectionalRange!(Unqual!Range)\n&& hasLength!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isRandomAccessRange!(Unqual!Range)\n&& !isBidirectionalRange!(Unqual!Range)\n&& isInfinite!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isBidirectionalRange!(Unqual!Range)\n&& (isRandomAccessRange!(Unqual!Range) ? (!hasLength!(Unqual!Range) && isInfinite!(Unqual!Range)) : true))\n{\n    Segment segment(Range range)\n}\n\nsegment\u306f\u3001dranges\u306e\u81f3\u308b\u6240\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30ec\u30f3\u30b8\u3067\u3059\u3002\n\u91cd\u8981\u3067\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u5b9f\u88c5\u304c\u8ca7\u5f31\u3067\u3001InputRange\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u306b\u79c1\u304c\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\n\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3057\u307e\u3057\u3087\u3046\u3002\nint[] a = [0, 1, 2, 3, 4, 5];\n\nauto s1 = segment!1(r1);\nassert(equal(s1, [tuple(0), tuple(1), tuple(2), tuple(3), tuple(4), tuple(5)]));\n\nauto s2 = segment!2(r1);\nassert(equal(s2, [tuple(0, 1), tuple(1, 2), tuple(2, 3), tuple(3, 4), tuple(4, 5)]));\n\nauto s3 = segment!3(r2);\nassert(equal(s3, [tuple(0, 1, 2), tuple(1, 2, 3), tuple(2, 3, 4), tuple(3, 4, 5)]));\n\ns3[1] = tuple(-1, -2, -3);\nassert(equal(s3, [tuple(0, -1, -2), tuple(-1, -2, -3), tuple(-2, -3, 4), tuple(-3, 4, 5)]));\n\n\ndranges.range.delay\ntemplate delay(alias array)if(isArray!(typeof(array)) && array.length != 0)\n{\n    auto delay(R)(R range)if(isInputRange!R)\n}\n\ndelay\u306farray\u304c[a, a, ...]\u306e\u5834\u5408\u306b\u306f\u3001popFrontN\u3068\u5f8c\u306b\u8aac\u660e\u3059\u308bparallel\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u8a18\u4ee5\u5916\u306e\u5834\u5408\u306b\u306fsegment\u3068shred\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002\ndelay\u306fsegment\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001segment\u3068\u306f\u5c11\u3057\u9055\u3044\u307e\u3059\u3002\n\u8fd4\u308a\u5024\u304ctuple\u306a\u8981\u7d20\u306a\u30ec\u30f3\u30b8\u3067\u3042\u308b\u3053\u3068\u306f\u540c\u3058\u3067\u3059\u304c\u3001\n\u8981\u7d20e\u306e\u3055\u3089\u306b\u8981\u7d20\u3067\u3042\u308be[i]\u306f\u30ec\u30f3\u30b8range\u3092popFrontN(range, array[i])\u306e\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\u3002\nauto r1 = [0, 1, 2, 3, 4, 5];\n\nauto d = delay!([4,1,3,2])(r1);\nassert(d.front == tuple(4,1,3,2));\nassert(d.length == 2);              //[(4,1,3,2), (5,2,4,3)]\n\n\ndranges.range.parallel\nauto parallel(size_t n, R)(R range)if(n > 0 && isInputRange!R)\n\nparallel\u306f\u30ec\u30f3\u30b8\u3092n\u500b\u4e26\u5217\u306btuple\u306b\u5165\u308c\u8fbc\u3093\u3060\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\nauto r1 = [0, 1, 2, 3, 4, 5];\nauto p = parallel!4(r1);\nassert(equal(p, [tuple(0,0,0,0), tuple(1,1,1,1), tuple(2,2,2,2), tuple(3,3,3,3), tuple(4,4,4,4), tuple(5,5,5,5)][]));\n\n\u524d\u56de\u306edranges.algorithm\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001dranges.range\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u305f\u3060\u3001\u3081\u3061\u3083\u304f\u3061\u3083\u9577\u3044\u306e\u30672\u56de\u304f\u3089\u3044\u306b\u5206\u3051\u307e\u3059\u3002\n\u4eca\u56de\u306f\u305d\u306e1\u756a\u76ee\u3067\u3059\u3002\ndranges\u306b\u3064\u3044\u3066\u306f[dranges.algorithm](http://qiita.com/items/080b4bbf7a794d4ace3c)\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u3061\u306a\u307f\u306bdranges\u306b\u3064\u3044\u3066\u306f\u3059\u3079\u3066\u306eunittest\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\n\u304b\u3064\u3001unittest\u3082\u3059\u3079\u3066\u901a\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n###dranges.range.minLength\n\n```d\nsize_t minLength(R...)(R ranges) if (allSatisfy!(isForwardRange, R) && allHaveLength!R && !allAreInfinite!R)\n```\n\n\u53d7\u3051\u53d6\u3063\u305f\u30ec\u30f3\u30b8\u306e\u6700\u5c0f\u306e\u9577\u3055\u3092\u8fd4\u3057\u307e\u3059\u3002\u53d7\u3051\u53d6\u308b\u30ec\u30f3\u30b8\u306f\u3059\u3079\u3066\u524d\u9032\u30ec\u30f3\u30b8\u3067\u3001\u9577\u3055\u3092\u6301\u3063\u3066\u3044\u308b\u304b\u7121\u9650\u30ec\u30f3\u30b8\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```d\nauto s = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"];\nint[] r = [0, 1, 2, 3];\nauto c = repeat(5); //\u7121\u9650\n\nauto ml = minLength(s, r, c);\nassert(ml == 4);    //r\u306e\u9577\u3055\n```\n\n\n###dranges.range.slice\n\n```d\nTake!R slice(R)(R range, int begin, int end)\n```\n\nhasSlicing!R\u304ctrue\u3067\u306a\u3044\u3082\u306e\u306b\u5bfe\u3057\u3066\u3082\u30b9\u30e9\u30a4\u30b9\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002\n\n###dranges.range.dropLast\n\n```d\nR dropLast(R)(R range, size_t n) if (isBidirectionalRange!R)\n```\n\n\u53cc\u65b9\u5411\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u30ec\u30f3\u30b8\u306e\u5f8c\u304b\u3089n\u8981\u7d20\u3092\u3051\u3057\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0, 1, 2, 3, 4, 5];\nauto d = dropLast(r1, 3);\n\nassert(equal(d, [0,1,2][]));\nassert(equal(dropLast(r1, 0), r1));\nassert(dropLast(r1, 6).empty);\nassert(dropLast(r1, 100).empty);\n```\n\n\n###dranges.range.templateFunctionAnalysis\n\n```d\ntemplate templateFunctionAnalysis(alias templateFun, alias ParameterGenerator, size_t startN = 0, size_t limittedN = 10){\n    enum endN;\n    alias ... ArgumentTypes;\n    enum arity;\n    alias ... ReturnType;\n}\n```\n\n\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u79c1\u304c\u4f5c\u3063\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u3046\u3061dranges.traits\u306b\u3044\u308c\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u5404\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\n\u30fbtemplateFun : \u89e3\u6790\u3057\u305f\u3044\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u95a2\u6570\n\u30fbParameterGenerator : [startN ~ limittedN]\u307e\u3067\u306e\u975e\u8ca0\u306e\u6574\u6570\u3092\u53d6\u308a\u3001templateFun\u306e\u5f15\u6570\u306e\u578b\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n\u30fbstartN : ParameterGenerator\u3092\u6700\u521d\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u6570\n\u30fblimittedN : ParameterGenerator\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3059\u308b\u5834\u5408\u306e\u6700\u7d42\u306e\u6570\n\u3068\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u306b\u306a\u308b\u307e\u3067N\u3092startN\u304b\u3089limittedN\u307e\u3067\u5897\u52a0\u3055\u305b\u3066\u3044\u304d\u307e\u3059\u3002\n\n```d\ntemplateFun(ParameterGenerator!(N).init)\n```\n\n\u4f7f\u3044\u65b9\u306e\u4f8b\u3092\u6319\u3052\u3066\u304f\u3068\u3001\n\n```d\ntemplate Generator(size_t N){alias TypeNuple!(int, N) Generator;}\n\nalias templateFunctionAnalysis!(( (a, b, c) => a) , Generator) Result0;\n\nstatic assert(Result0.arity == 3);\nstatic assert(Result0.endN == 3);\nstatic assert(is(Result0.ArgumentTypes == Generator!3));\nstatic assert(is(Result0.ReturnType == int));\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3001\u7279\u6b8a\u306a\u5834\u9762\u3067\u4f7f\u308f\u308c\u3001naryFun!\"a+b+c\"\u306a\u3069\u306e\u5f15\u6570\u306e\u6570\u3092\u89e3\u6790\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\n###dranges.range.dropWhile\n\n```d\ntemplate dropWhile(alias pred, size_t step = 1){\n    template dropWhile(R, T...)if(isForwardRange!R){\n        R dropWhile(R r, auto ref T subParam)\n    }\n}\n```\n\npred\u304ctrue\u306e\u9593\u3060\u3051\u8981\u7d20\u3092\u524a\u9664\u3057\u305f\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002step\u306f1\u56de\u306b\u9032\u3081\u308b\u91cf\u3067\u3059\u3002\npred\u306f0\u4ee5\u4e0a\u306e\u5f15\u6570\u306e\u500b\u6570\u306b\u5bfe\u5fdc\u3057\u307e\u3059\u3002\n\n```d\nstring s = \"  , abcd  efg\";\nauto d1 = dropWhile!(isOneOf!\" ,\")(s);  //' ' \u304b ','\u3092\u30b9\u30ad\u30c3\u30d7\nassert(d1 == \"abcd  efg\");\n\nauto r1 = [0, 1, 2, 3, 3, 4, 5];\nauto d2 = dropWhile!\"a<4\"(r1);          //4\u672a\u6e80\u306e\u8981\u7d20\u3092\u30b9\u30ad\u30c3\u30d7\nassert(equal(d2, [4, 5]));\n\nauto d3 = dropWhile!\"a<b\"(r1);          //\u5897\u52a0\u3057\u3066\u3044\u308b\u90e8\u5206\u3092\u524a\u9664\nassert(equal(d3, [3, 3, 4, 5]));        //(3,3)\u306f\u5897\u52a0\u3057\u3066\u3044\u306a\u3044\n\nauto d4 = dropWhile!(\"a<b\",2)(r1);      //[(0, 1),(2, 3),(3, 4)]\nassert(equal(d4, [5]));                 //\"a<b\"\u3092\u6e80\u305f\u3057\u6d88\u3055\u308c\u308b\n\nauto d5 = dropWhile!(\"a<b && b<c\")(r1); //[(0, 1, 2), (1, 2, 3), (2, 3, 3), ...]\nassert(equal(d5, [2, 3, 3, 4, 5]));     //(2, 3, 3)\u306fpred\u3092\u6e80\u305f\u3055\u306a\u3044\n\nauto d7 = dropWhile!\"true\"(r1);         //\u5e38\u306btrue\u306apred\nassert(d7.empty);                       //\u3082\u3061\u308d\u3093empty\n\nauto d7_d = dropWhile!(\"true\", 2)(r1);  //step\u304c2\u3067\u3082\nassert(d7_d.empty);                     //[5]\u304c\u4f59\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3002\n//[5]\u304c\u4f59\u3089\u306a\u3044\u7406\u7531\u306f\u3001step=2\u3067pred\u306f0\u500b\u306e\u5f15\u6570\u3067\u3042\u308b\u304b\u3089\u3001[0, 1, 2, 3, 3, 4, 5]\u306e\u5834\u5408\u306b\u306f\n//[0, 2, 3, 5]\u304c\u691c\u67fb\u306b\u4f7f\u308f\u308c\u3001\u3059\u3079\u3066\u306e\u8981\u7d20\u3067true\u3068\u306a\u308b\u304b\u3089[5]\u307e\u3067\u3059\u3079\u3066\u6d88\u3055\u308c\u308b\u3002\n\nauto r2 = [1];\nauto d8 = dropWhile!\"a<b\"(r2);\n//\u6700\u521d\u304b\u30891\u8981\u7d20\u3057\u304b\u306a\u3044\u306e\u306bbinary\u95a2\u6570\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u3001\u305d\u3082\u305d\u3082pred\u3092\u547c\u3079\u306a\u3044\u306e\u3067\u691c\u67fb\u3067\u304d\u306a\u3044\nassert(equal(d8, [1][]));\n\nauto d9 = dropWhile!\"a < b\"(r1, 4);     //b\u306b\u306f4\u304c\u5165\u308b\u3002\u3088\u3063\u3066\u30ec\u30f3\u30b8\u304b\u3089\u306f1\u3064\u305a\u3064\u691c\u67fb\u3055\u308c\u3066\u3044\u304f\nassert(equal(d9, [4, 5]));              //a < 4\u3092\u6e80\u305f\u3059\u9593drop\n\nauto d10 = dropWhile!\"a == b-c\"(r1, 1); //c\u306b\u306f1\u304c\u5165\u308b\u305f\u3081 a == b-1\u304c\u6e80\u305f\u3055\u308c\u308b\u307e\u3067drop\nassert(equal(d10, [3, 3, 4, 5]));\n\nauto d12 = dropWhile!((a, b, c) => a < b, 2)(r1, 1);\n//\u5b9f\u969b\u306b\u306fc\u306b1\u304c\u5165\u308b\u304c\u3001\u691c\u67fb\u306b\u306fa,b\u3057\u304b\u95a2\u308f\u3063\u3066\u304a\u3089\u305a\u3001\u3053\u308c\u306fd4\u3068\u540c\u3058\u7d50\u679c[5]\u3068\u306a\u308b\nassert(equal(d12, [5][]));\n\nsize_t cnt;\nbool counter(){return cnt++ < 3;}       //0\u5f15\u6570\u30673\u56de\u76ee\u307e\u3067\u306ftrue\n\nauto d16 = dropWhile!(counter)(r1);\nassert(equal(d16, [3, 3, 4, 5]));       //3\u56de\u76ee\u307e\u3067true\u306a\u306e\u3067\u6700\u521d\u306e3\u8981\u7d20\u304c\u306a\u304f\u306a\u308b\n```\n\n\n###dranges.range.popFrontWhile\n\n```d\ntemplate popFrontWhile(alias pred, size_t step = 1){\n    template popFrontWhile(R, T...){\n        size_t popFrontWhile(ref R r, T subArgs)\n    }\n}\n```\n\ndropWhile\u306epopFront\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\n\n###dranges.range.takeWhile\n\n```d\ntemplate takeWhile(alias pred){\n    template takeWhile(R, T...)if(isForwardRange!R){\n        TakeWhile takeWhile(R range, T args)\n    }\n}\n```\n\ndropWhile\u3084popFrontWhile\u306etake\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\n\n###dranges.range.takeUntil\n###dranges.range.rotateWhile\n\n\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u2026\uff1f\n\n\n###dranges.range.tail\n\n```d\nR tail(R)(R range) if (isInputRange!R)\n```\n\nHaskell\u306etail\u3068\u540c\u3058\u3067\u3059\u3002\u304c\u3001empty\u306a\u5834\u5408\u306b\u306f\u305d\u306e\u307e\u307e\u8fd4\u3057\u307e\u3059\u3002\nHaskell\u306e\u5834\u5408\u306f\u7a7a\u30ea\u30b9\u30c8\u3092\u6e21\u3059\u3068\u4f8b\u5916\u304c\u51fa\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n###dranges.range.tails\n\n```d\nTails!R tails(R)(R range) if (isForwardRange!R)\n```\n\nHaskell\u306etails\u3068\u3059\u3053\u3057\u9055\u3044\u307e\u3059\u304c\u3001\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059\u3002\n\n```d\nauto r = [0,1,2,3];\nauto t = tails(r);\nassert(equal(t, [[1,2,3], [2,3], [3], [] ]));\n```\n\n\n###dranges.range.heads\n\n```d\nHeads!R heads(R)(R range) if (isForwardRange!R)\n```\n\ntails\u306ehead\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002\n\n```d\nauto r = [0,1,2,3];\nauto h = heads(r);\nauto witness = [ [], [0], [0,1], [0,1,2], [0,1,2,3] ][];\nforeach(elem; h) {\n    assert(equal(elem, witness.front));\n    witness.popFront;\n}\n```\n\n\n###dranges.range.insertAt\n\n```d\nauto insertAt(R1, R2)(size_t n, R1 range1, R2 range2) if (allSatisfy!(isForwardRange, R1, R2))\n//\u307e\u305f\u306f\nauto insertAt(R, E)(size_t n, R range, E element) if (isForwardRange!R && is(ElementType!R == E))\n```\n\n\u6b21\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nreturn chain(take(range1, n), range2, drop(range1, n));\n//\u307e\u305f\u306f\nreturn chain(take(range, n), [element][], drop(range, n));\n```\n\n\u4f8b\u3068\u3057\u3066\u3001\n\n```d\nauto r1 = [0,1,2,3];\nauto m = map!\"a*a\"(r1);\nauto ia0 = insertAt(0, r1, m);\nauto ia2 = insertAt(2, r1, m);\nauto ia10 = insertAt(10, r1, m);\nassert(equal(ia0, [0,1,4,9,  0,1,2,3][]));\nassert(equal(ia2, [0,1,  0,1,4,9,  2,3][]));\nassert(equal(ia10,[0,1,2,3,  0,1,4,9][]));\n\nauto ia1 = insertAt(1, r1, 99);\nassert(equal(ia1, [0,99,1,2,3][]));\n```\n\n\n###dranges.range.cutAt\n\n```d\nTuple!(R, R) cutAt(R)(size_t index, R range) if (isForwardRange!R && hasSlicing!R && hasLength!R)\nTuple!(ElementType!R[], R) cutAt(R)(size_t index, R range) if (isForwardRange!R && (!hasSlicing!(R) || !hasLength!(R)))\n```\n\n[0, index)\u307e\u3067\u306e\u8981\u7d20(index\u500b)\u3092\u8fd4\u308a\u5024\u306e\u6700\u521d\u306e\u8981\u7d20\u306b\u3001\u6b8b\u308a\u30922\u756a\u76ee\u306b\u683c\u7d0d\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0,1,2,3,4,5];\nauto c1 = cutAt(3, r1);\nassert(first(c1) == [0,1,2][]);\nassert(second(c1) == [3,4,5][]);\n```\n\n\n###dranges.range.cutWhen\n\n```d\nTuple!(ElementType!(R)[], R) cutWhen(alias pred, R)(R range) if (isForwardRange!R)\n```\n\npred\u306funary\u95a2\u6570\u3067\u3059\u3002\npred\u304ctrue\u306a\u9593\u3060\u3051\u306e\u3082\u306e\u3092\u96c6\u3081\u305f\u306e\u3092\u5148\u982d\u8981\u7d20\u306b\u3001\u306e\u3053\u308a\u3092\u6b21\u306e\u8981\u7d20\u306b\u5165\u308c\u8fbc\u307f\u307e\u3059\u3002\n\n```d\nauto r1 = [0, 1, 2, 3, 4, 1, 2];\nauto cut = cutWhen!\"a<3\"(r1);\nassert(equal(cut.field[0], [0, 1, 2]));\nassert(equal(cut.field[1], [3, 4]));\n```\n\n\n###dranges.range.knit\n\n```d\nKnit!(R) knit(R...)(R ranges) if (allSatisfy!(isInputRange, R))\n```\n\nstd.range.zip\u306e\u5f31\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3059\u3002std.range.zip\u306e\u307b\u3046\u304c\u3044\u3044\u306e\u3067\u3001deprecated\u306b\u306a\u3063\u3066\u3082\u3044\u3044\u3068\u601d\u3046\u3002\n\n\n###dranges.range.stitch\n\n```d\nStitchType!R stitch(R...)(R ranges) if (allSatisfy!(isTupleRange, R))\n```\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u8907\u6570\u500b\u53d7\u3051\u53d6\u308a\u3001tuple(a.field, b.field, ...)\u3068\u3057\u305f\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0,     1,     2,   3,   4,   5];\nauto r2 = [0.1,   0.2,   0.3, 0.4];\nauto r3 = [\"abc\", \"def\", \"\",  \"g\"];\nauto r4 = [\"a\",   \"b\",   \"c\", \"d\", \"e\", \"f\"];\n\nauto k1 = knit(r1, r2); // returns Tuple!(int, double)\nauto k2 = knit(r3,r4);  // returns Tuple!(string, char)\nauto tf = tfilter!\"b<2\"(r3,r1); // returns Tuple!(string, int)\n\nauto s = stitch(k1,k2,tf); // returns Tuple!(int,double,string,char,string,int)\n\nassert(s.front == tuple(0, 0.1, \"abc\", \"a\", \"abc\", 0));\ns.popFront;\nassert(s.front == tuple(1, 0.2, \"def\", \"b\", \"def\", 1));\ns.popFront;\nassert(s.empty); //tf\u304cempty\u3068\u306a\u308b\u3002\n```\n\n\n###dranges.range.twist\n\n```d\nauto twist(int n, R)(R range) if (isTupleRange!R)\n```\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u5de6\u65b9\u5411\u306bn\u8981\u7d20\u56de\u3057\u305f\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0,    1,    2,    3, 4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\",\"e\",\"f\"];\n\nauto k = knit(r1,r2,s);\nassert(is(ElementType!(typeof(k)) == Tuple!(int,double,string)));\nassert(equal(k, [tuple(0,3.14,\"a\"), tuple(1,2.78,\"b\"), tuple(2,1.414,\"c\")][]));\n\nauto rot1 = twist!1(k);\nassert(is(ElementType!(typeof(rot1)) == Tuple!(double,string,int)));\nassert(equal(rot1, [tuple(3.14,\"a\",0), tuple(2.78,\"b\",1), tuple(1.414,\"c\",2)][]));\n\nauto rot_1 = twist!(-1)(k);\nassert(is(ElementType!(typeof(rot_1)) == Tuple!(string,int,double)));\nassert(equal(rot_1, [tuple(\"a\",0,3.14), tuple(\"b\",1,2.78), tuple(\"c\",2,1.414)][]));\n```\n\n\n###dranges.range.reverse\n\n```d\nauto reverse(R)(R range) if (isTupleRange!R)\n```\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u9806\u5e8f\u3092\u9006\u8ee2\u3055\u305b\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001tuple(a[n-1], a[n-2], ..., a[1], a[0])\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```d\nauto r1 = [0,    1,    2,3,  4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\", \"e\", \"f\"];\n\nauto k = knit(r1, r2, s);\nassert(is(ElementType!(typeof(k)) == Tuple!(int,double,string)));\nassert(equal(k, [tuple(0, 3.14, \"a\"), tuple(1, 2.78, \"b\"), tuple(2, 1.414, \"c\")]));\n\nauto rev = reverse(k);\nassert(is(ElementType!(typeof(rev)) == Tuple!(string,double,int)));\nassert(equal(rev, [tuple(\"a\", 3.14, 0), tuple(\"b\", 2.78, 1), tuple(\"c\", 1.414, 2)]));\n```\n\n\n###dranges.range.splice\n\n```d\nauto splice(size_t n, R1, R2)(R1 range1, R2 range2)\nif (allSatisfy!(isForwardRange, R1, R2) && is(ElementType!R1.Types) && (n <= ElementType!R1.Types.length))\n```\n\nrange1\u306f\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3067\u306a\u304f\u3066\u306f\u3044\u3051\u305a\u3001\nrange1\u306en\u8981\u7d20\u306brange2\u3092\u5272\u308a\u8fbc\u307e\u305b\u307e\u3059\u3002\n\n```d\nauto r1 = [0,  1,  2,  3,  4];\nauto s =  [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\"];\nauto k = knit(r1, s);\n\nauto r2 = [-2.1, 0.0, 3.14];\n\nauto spl = splice!1(k, r2);     //tuple(k.front[0], r2.front, k.front[1])\nassert(is(ElementType!(typeof(spl)) == Tuple!(int, double, string)));\nassert(equal(spl, [tuple(0, -2.1, \"a\"), tuple(1, 0.0, \"b\"), tuple(2, 3.14, \"c\")]));\n\nauto spl2 = splice!0(spl,k);    //tuple(k.front, spl.front[0], spl.front[1])\nassert(is(ElementType!(typeof(spl2)) == Tuple!(Tuple!(int,string), int,double,string))); \nassert(equal(spl2, [tuple(tuple(0, \"a\"), 0, -2.1, \"a\"), tuple(tuple(1, \"b\"), 1, 0.0, \"b\"), tuple(tuple(2,\"c\"),2, 3.14, \"c\")]));\n```\n\n\n###dranges.range.shred\n\n```d\ntemplate shred(idx...){\n    auto shred(R)(R range)if(isTupleRange!R)\n}\n```\n\n\u8981\u7d20\u304ctuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001idx\u306e\u9806\u756a\u306b\u4e26\u3079\u66ff\u3048\u307e\u3059\u3002\n\n```d\nauto r1 = [0,    1,    2,    3,    4];\nauto r2 = [3.14, 2.78, 1.414];\nauto s =  [\"a\",  \"b\",  \"c\",  \"d\", \"e\", \"f\"];\n\nauto k = knit(r1, r2, s);\nauto shr1 = shred!(1,0)(k); //\u53cd\u8ee2\nassert(equal(shr1, [tuple(3.14, 0), tuple(2.78, 1), tuple(1.414, 2)]));\n\nauto shr2 = shred!(1)(k); //e[1]\u306e\u307f\u3092\u53d6\u5f97\nassert(equal(shr2, [3.14, 2.78, 1.414]));\n\nauto shr3 = shred!(2,0,1,1)(k); //\u91cd\u8907\u3082OK\nassert(equal(shr3, [tuple(\"a\", 0, 3.14, 3.14),\n                    tuple(\"b\", 1, 2.78, 2.78),\n                    tuple(\"c\", 2, 1.414, 1.414)]));\n```\n\n\n###dranges.range.untuplify\n\n```d\nTMapType!(\"a\", R) untuplify(R)(R range) if (isTupleRange!R && ElementType!R.Types.length == 1)\n```\n\n\u8981\u7d20\u304c1\u8981\u7d20\u304b\u3089\u306a\u308btuple\u306a\u30ec\u30f3\u30b8\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001tuple\u3067\u306a\u304f\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0,1,2,3,4];\n\nauto k = knit(r1);      //Tuple!(int)\nassert(equal(k, [tuple(0), tuple(1), tuple(2), tuple(3), tuple(4)]));\nauto u = untuplify(k);  //int[]\nassert(equal(u, r1));\n```\n\n\n###dranges.range.transverse\n\n```d\nTransverse!R transverse(R...)(R ranges)\n```\n\n\u8907\u6570\u306e\u30ec\u30f3\u30b8\u3092\u9806\u756a\u306b\u305f\u3069\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n```d\nauto r1 = [0,1,2,3,4];\nauto r2 = repeat(5);\nauto r3 = [-2.0, -1.0, 0.0, 1.0];\n\nauto t = transverse(r1, r2, r3);\nassert(is(ElementType!(typeof(t)) == double));          //\u5168\u8981\u7d20\u306fdouble\u306b\u6697\u9ed9\u5909\u63db\u3055\u308c\u308b\nassert(equal(t, [0.0, 5, -2, 1, 5, -1, 2, 5, 0, 3, 5, 1, 4, 5]));   //r3\u304cempty\u306b\u306a\u308a\u7d42\u308f\u308b\n\nauto t2 = transverse(r1, emptyRange!double, emptyRange!short);\nassert(is(ElementType!(typeof(t2)) == double));\nassert(equal(t2, [0][]));   //emptyRange!double\u306b\u3088\u308a[0]\u3060\u3051\u3067\u7d42\u308f\u308b\n```\n\n\n###dranges.range.interleave\n\n```d\nTransverse!(B,Cycle!S) interleave(B, S)(B bigRange, S smallRange)\n```\n\nbigRange\u3068smallRange\u3092\u53d7\u3051\u53d6\u308a\u3001\n[b[0], s[0], b[1], s[1], ... , b[n], s[n % s.length]]\n\u3068\u3044\u3046\u3088\u3046\u306a\u30ec\u30f3\u30b8\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto i = interleave(\"abcdef\", \",\");\nassert(asString(i) == \"a,b,c,d,e,f,\");\nauto i2 = interleave(\"abcdef\", \",;.\");\nassert(asString(i2) == \"a,b;c.d,e;f.\");\nauto r1 = [0, 1, 2, 3, 4];\nauto i3 = interleave(r1, r1);\nassert(equal(i3, [0, 0, 1, 1, 2, 2, 3, 3, 4, 4]));\n```\n\n\n###dranges.range.segment\n\n```d\ntemplate segment(size_t N : 1, Range)\nif(isInputRange!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif (isInputRange!(Unqual!Range) \n&& (isForwardRange!(Unqual!Range) ? (!isBidirectionalRange!(Unqual!Range)\n                                      && !isRandomAccessRange!(Unqual!Range)) : true))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isRandomAccessRange!(Unqual!Range)\n&& isBidirectionalRange!(Unqual!Range)\n&& hasLength!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isRandomAccessRange!(Unqual!Range)\n&& !isBidirectionalRange!(Unqual!Range)\n&& isInfinite!(Unqual!Range))\n{\n    Segment segment(Range range)\n}\n\n\ntemplate segment(size_t N, Range)\nif(isBidirectionalRange!(Unqual!Range)\n&& (isRandomAccessRange!(Unqual!Range) ? (!hasLength!(Unqual!Range) && isInfinite!(Unqual!Range)) : true))\n{\n    Segment segment(Range range)\n}\n```\n\nsegment\u306f\u3001dranges\u306e\u81f3\u308b\u6240\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u30ec\u30f3\u30b8\u3067\u3059\u3002\n\u91cd\u8981\u3067\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u5b9f\u88c5\u304c\u8ca7\u5f31\u3067\u3001InputRange\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u305f\u3081\u306b\u79c1\u304c\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\n\u7c21\u5358\u306a\u4f8b\u3092\u793a\u3057\u307e\u3057\u3087\u3046\u3002\n\n```d\nint[] a = [0, 1, 2, 3, 4, 5];\n\nauto s1 = segment!1(r1);\nassert(equal(s1, [tuple(0), tuple(1), tuple(2), tuple(3), tuple(4), tuple(5)]));\n\nauto s2 = segment!2(r1);\nassert(equal(s2, [tuple(0, 1), tuple(1, 2), tuple(2, 3), tuple(3, 4), tuple(4, 5)]));\n\nauto s3 = segment!3(r2);\nassert(equal(s3, [tuple(0, 1, 2), tuple(1, 2, 3), tuple(2, 3, 4), tuple(3, 4, 5)]));\n\ns3[1] = tuple(-1, -2, -3);\nassert(equal(s3, [tuple(0, -1, -2), tuple(-1, -2, -3), tuple(-2, -3, 4), tuple(-3, 4, 5)]));\n```\n\n\n###dranges.range.delay\n\n```d\ntemplate delay(alias array)if(isArray!(typeof(array)) && array.length != 0)\n{\n    auto delay(R)(R range)if(isInputRange!R)\n}\n```\n\ndelay\u306farray\u304c[[a, a, ...]](a\u306f\u4efb\u610f\u306e\u975e\u8ca0\u306e\u6574\u6570)\u306e\u5834\u5408\u306b\u306f\u3001popFrontN\u3068\u5f8c\u306b\u8aac\u660e\u3059\u308bparallel\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u8a18\u4ee5\u5916\u306e\u5834\u5408\u306b\u306fsegment\u3068shred\u3092\u7528\u3044\u3066\u3044\u307e\u3059\u3002\ndelay\u306fsegment\u306b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001segment\u3068\u306f\u5c11\u3057\u9055\u3044\u307e\u3059\u3002\n\u8fd4\u308a\u5024\u304ctuple\u306a\u8981\u7d20\u306a\u30ec\u30f3\u30b8\u3067\u3042\u308b\u3053\u3068\u306f\u540c\u3058\u3067\u3059\u304c\u3001\n\u8981\u7d20e\u306e\u3055\u3089\u306b\u8981\u7d20\u3067\u3042\u308be[i]\u306f\u30ec\u30f3\u30b8range\u3092popFrontN(range, array[i])\u306e\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\u3002\n\n```d\nauto r1 = [0, 1, 2, 3, 4, 5];\n\nauto d = delay!([4,1,3,2])(r1);\nassert(d.front == tuple(4,1,3,2));\nassert(d.length == 2);              //[(4,1,3,2), (5,2,4,3)]\n```\n\n\n###dranges.range.parallel\n\n```d\nauto parallel(size_t n, R)(R range)if(n > 0 && isInputRange!R)\n```\n\nparallel\u306f\u30ec\u30f3\u30b8\u3092n\u500b\u4e26\u5217\u306btuple\u306b\u5165\u308c\u8fbc\u3093\u3060\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```d\nauto r1 = [0, 1, 2, 3, 4, 5];\nauto p = parallel!4(r1);\nassert(equal(p, [tuple(0,0,0,0), tuple(1,1,1,1), tuple(2,2,2,2), tuple(3,3,3,3), tuple(4,4,4,4), tuple(5,5,5,5)][]));\n```", "tags": ["dlang", "Dlanguage"]}