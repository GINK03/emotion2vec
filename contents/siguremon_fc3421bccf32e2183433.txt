{"context": " More than 1 year has passed since last update.\u3068\u308a\u3042\u3048\u305aRedmine\u3092\u304a\u8a66\u3057\u3057\u305f\u3044\u3068\u304d\u306b\u3002\n\nUbuntu trusty 64bit\u306eVM\nshellscript\u3067\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\nrbenv + ruby-build\u3067ruby 2.2.1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nDB\u306fSQLite\nssh\u3067\u5165\u3063\u3066RAILS_ENV=production bundle exec rails s -b 0.0.0.0\u3067\u8d77\u52d5\n\u30db\u30b9\u30c8\u304b\u3089 http://127.0.0.1:3001 \u3067\u8868\u793a\n\n\nVagrantfile\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVAGRANTFILE_API_VERSION = 2\n\nscript = <<SCRIPT\nsudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get install -y git build-essential libssl-dev libffi-dev\nif [ ! -d \"$HOME/.bashrc.d\" ] ; then\n    mkdir $HOME/.bashrc.d\nfi\ngit clone https://github.com/sstephenson/rbenv.git $HOME/.rbenv\necho 'export PATH=$HOME/.rbenv/bin:$PATH' > $HOME/.bashrc.d/rbenv.sh\necho 'eval \"$(rbenv init -)\"' >> $HOME/.bashrc.d/rbenv.sh\necho 'source $HOME/.bashrc.d/rbenv.sh' >> .bashrc\nsource $HOME/.bashrc.d/rbenv.sh\ngit clone https://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build\nrbenv install 2.2.1\nrbenv rehash\nrbenv global 2.2.1\nrbenv rehash\nruby -v\ngem install bundler\n# for sqlite3\nsudo apt-get install -y sqlite3 libsqlite3-dev\n# for rmagick gem\nsudo apt-get install -y imagemagick libmagickwand-dev\nwget http://www.redmine.org/releases/redmine-3.0.0.tar.gz\ntar xzf redmine-3.0.0.tar.gz\ncd redmine-3.0.0\n# config/database.yml\necho 'production:' > config/database.yml\necho '    adapter: sqlite3' >> config/database.yml\necho '    database: db/redmine.sqlite3' >> config/database.yml\nRAILS_ENV=production bundle install --path vendor/bundle\nRAILS_ENV=production bundle exec rake db:migrate\nRAILS_ENV=production bundle exec rake generate_secret_token\necho'execute \"RAILS_ENV=production bundle exec rails s -b 0.0.0.0\" to start redmine'\nSCRIPT\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"ubuntu/trusty64\"\n\n  config.vm.network \"forwarded_port\", guest:3000, host:3001\n\n  if Vagrant.has_plugin?(\"vagrant-proxyconf\")\n    config.proxy.http = ENV['http_proxy']\n    config.proxy.https = ENV['https_proxy']\n    config.proxy.no_proxy = \"localhost,127.0.0.1\"\n  end\n\n  config.vm.provision \"shell\", inline: script, privileged: false\nend\n\n\n\u3068\u308a\u3042\u3048\u305aRedmine\u3092\u304a\u8a66\u3057\u3057\u305f\u3044\u3068\u304d\u306b\u3002\n\n- Ubuntu trusty 64bit\u306eVM\n- shellscript\u3067\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\n- rbenv + ruby-build\u3067ruby 2.2.1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n- DB\u306fSQLite\n- ssh\u3067\u5165\u3063\u3066`RAILS_ENV=production bundle exec rails s -b 0.0.0.0`\u3067\u8d77\u52d5\n- \u30db\u30b9\u30c8\u304b\u3089 http://127.0.0.1:3001 \u3067\u8868\u793a\n\n## Vagrantfile\n\n```\n# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVAGRANTFILE_API_VERSION = 2\n\nscript = <<SCRIPT\nsudo apt-get update\nsudo apt-get upgrade -y\nsudo apt-get install -y git build-essential libssl-dev libffi-dev\nif [ ! -d \"$HOME/.bashrc.d\" ] ; then\n    mkdir $HOME/.bashrc.d\nfi\ngit clone https://github.com/sstephenson/rbenv.git $HOME/.rbenv\necho 'export PATH=$HOME/.rbenv/bin:$PATH' > $HOME/.bashrc.d/rbenv.sh\necho 'eval \"$(rbenv init -)\"' >> $HOME/.bashrc.d/rbenv.sh\necho 'source $HOME/.bashrc.d/rbenv.sh' >> .bashrc\nsource $HOME/.bashrc.d/rbenv.sh\ngit clone https://github.com/sstephenson/ruby-build.git $HOME/.rbenv/plugins/ruby-build\nrbenv install 2.2.1\nrbenv rehash\nrbenv global 2.2.1\nrbenv rehash\nruby -v\ngem install bundler\n# for sqlite3\nsudo apt-get install -y sqlite3 libsqlite3-dev\n# for rmagick gem\nsudo apt-get install -y imagemagick libmagickwand-dev\nwget http://www.redmine.org/releases/redmine-3.0.0.tar.gz\ntar xzf redmine-3.0.0.tar.gz\ncd redmine-3.0.0\n# config/database.yml\necho 'production:' > config/database.yml\necho '    adapter: sqlite3' >> config/database.yml\necho '    database: db/redmine.sqlite3' >> config/database.yml\nRAILS_ENV=production bundle install --path vendor/bundle\nRAILS_ENV=production bundle exec rake db:migrate\nRAILS_ENV=production bundle exec rake generate_secret_token\necho'execute \"RAILS_ENV=production bundle exec rails s -b 0.0.0.0\" to start redmine'\nSCRIPT\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"ubuntu/trusty64\"\n\n  config.vm.network \"forwarded_port\", guest:3000, host:3001\n\n  if Vagrant.has_plugin?(\"vagrant-proxyconf\")\n    config.proxy.http = ENV['http_proxy']\n    config.proxy.https = ENV['https_proxy']\n    config.proxy.no_proxy = \"localhost,127.0.0.1\"\n  end\n  \n  config.vm.provision \"shell\", inline: script, privileged: false\nend\n```\n", "tags": ["Redmine", "vagrant"]}