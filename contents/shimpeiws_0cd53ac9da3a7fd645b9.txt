{"context": "local\u3067Rails API\u3068Web\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5225\u9014\u7acb\u3066\u3066\u3044\u305f\u6642\u306b\u3001\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3068pre-flight\u3078\u306e\u5bfe\u5fdc\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nRails API\u30b5\u30fc\u30d0: localhost:3000\nWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9: localhost:3355\nWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3067\u306f\u3001HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066axios\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\n\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\u304c\u7121\u3044\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3067\"No 'Access-Control-Allow-Origin' header is present on the requested resource.\" \u3068\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\n\u3002\n\nlocalhost:3355\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u3001\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\u3092\u3044\u308c\u307e\u3059\u3002\n\nconfig/application.rb\nconfig.action_dispatch.default_headers = {\n  'Access-Control-Allow-Credentials' => 'true',\n  'Access-Control-Allow-Origin' => 'http://localhost:3355',\n  'Access-Control-Request-Method' => '*'\n}\n\n\n\u672a\u691c\u8a3c\u3067\u3059\u304c\u3001\u4e0b\u8a18gem\u3067\u306frack\u30ec\u30d9\u30eb\u3067\u5bfe\u5fdc\u53ef\u80fd\u306e\u3088\u3046\u3067\u3059\u3002\ncyu/rack-cors\n\n\n\u53c2\u8003\nRails4\u30a2\u30d7\u30ea\u306b\u5bfe\u3057\u3066\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3067Ajax\u3067Cookie\u3092\u9001\u4fe1\u3057\u305f\u3044\u5834\u5408\n\npre-flight\u5bfe\u5fdc\naxios\u306f\u7570\u306a\u308b\u30aa\u30ea\u30b8\u30f3\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u6642\u306b\u3001OPTIONS\u30e1\u30bd\u30c3\u30c9\u3067pre-flight\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\nHow to disable OPTIONS request?\nOPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u3066404\u306b\u306a\u308a\u307e\u3059\n\nRails\u30b5\u30fc\u30d0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\nStarted OPTIONS \"/user_token\" for ::1 at 2017-03-06 17:57:46 +0900\n  ActiveRecord::SchemaMigration Load (3.9ms)  SELECT `schema_migrations`.* FROM `schema_migrations`\n\nActionController::RoutingError (No route matches [OPTIONS] \"/user_token\"):\n\nRails\u3067\u306epreflight\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u88c5\u304a\u3088\u3073\u30c6\u30b9\u30c8\u4f8b\u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nroutes.rb\u306e\u5148\u982d\u3067OPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001options_requests_controller\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nconfig/routes.rb\nRails.application.routes.draw do\n  match '*path' => 'options_request#preflight', via: :options\n  # other resources\nend\n\n\n\u30d8\u30c3\u30c0\u306b'Access-Control-Max-Age', 'Access-Control-Allow-Headers', 'Access-Control-Allow-Methods' \u3092\u3064\u3051\u3066\u8fd4\u3057\u307e\u3059\u3002\n\napp/controllers/options_request_controller.rb\nclass OptionsRequestController < ApplicationController\n  ACCESS_CONTROL_ALLOW_METHODS = %w(GET OPTIONS).freeze\n  ACCESS_CONTROL_ALLOW_HEADERS = %w(Accept Origin Content-Type Authorization).freeze\n\n  def preflight\n    set_preflight_headers!\n    head :ok\n  end\n\n  private\n\n  def set_preflight_headers!\n    response.headers['Access-Control-Max-Age'] = ACCESS_CONTROL_MAX_AGE\n    response.headers['Access-Control-Allow-Headers'] = ACCESS_CONTROL_ALLOW_HEADERS.join(',')\n    response.headers['Access-Control-Allow-Methods'] = ACCESS_CONTROL_ALLOW_METHODS.join(',')\n  end\nend\n\n\nlocal\u3067Rails API\u3068Web\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5225\u9014\u7acb\u3066\u3066\u3044\u305f\u6642\u306b\u3001\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3068pre-flight\u3078\u306e\u5bfe\u5fdc\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nRails API\u30b5\u30fc\u30d0: localhost:3000\nWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9: localhost:3355\n\nWeb\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3067\u306f\u3001HTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066axios\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n## \u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\n\n\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\u304c\u7121\u3044\u5834\u5408\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3067\"No 'Access-Control-Allow-Origin' header is present on the requested resource.\" \u3068\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\n\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-03-06 17.46.37.png](https://qiita-image-store.s3.amazonaws.com/0/29637/fea31fbb-d492-e20c-2808-115cdea40958.png)\n\n\nlocalhost:3355\u304b\u3089\u306e\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u3001\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u5bfe\u5fdc\u3092\u3044\u308c\u307e\u3059\u3002\n\n``` config/application.rb\nconfig.action_dispatch.default_headers = {\n  'Access-Control-Allow-Credentials' => 'true',\n  'Access-Control-Allow-Origin' => 'http://localhost:3355',\n  'Access-Control-Request-Method' => '*'\n}\n```\n\n\u672a\u691c\u8a3c\u3067\u3059\u304c\u3001\u4e0b\u8a18gem\u3067\u306frack\u30ec\u30d9\u30eb\u3067\u5bfe\u5fdc\u53ef\u80fd\u306e\u3088\u3046\u3067\u3059\u3002\n[cyu/rack-cors\n](https://github.com/cyu/rack-cors)\n\n### \u53c2\u8003\n\n[Rails4\u30a2\u30d7\u30ea\u306b\u5bfe\u3057\u3066\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u3067Ajax\u3067Cookie\u3092\u9001\u4fe1\u3057\u305f\u3044\u5834\u5408](http://qiita.com/tridentfield/items/290e21f04aed587afad2)\n\n## pre-flight\u5bfe\u5fdc\n\naxios\u306f\u7570\u306a\u308b\u30aa\u30ea\u30b8\u30f3\u306b\u5bfe\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u6642\u306b\u3001OPTIONS\u30e1\u30bd\u30c3\u30c9\u3067pre-flight\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\n[How to disable OPTIONS request?](http://stackoverflow.com/questions/29954037/how-to-disable-options-request)\n\nOPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3088\u3046\u3068\u3057\u3066404\u306b\u306a\u308a\u307e\u3059\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-03-06 17.57.59.png](https://qiita-image-store.s3.amazonaws.com/0/29637/573638ee-3f1b-d67d-1a48-a8ec2d106cf1.png)\n\n\nRails\u30b5\u30fc\u30d0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\n\n```\nStarted OPTIONS \"/user_token\" for ::1 at 2017-03-06 17:57:46 +0900\n  ActiveRecord::SchemaMigration Load (3.9ms)  SELECT `schema_migrations`.* FROM `schema_migrations`\n\nActionController::RoutingError (No route matches [OPTIONS] \"/user_token\"):\n```\n\n[Rails\u3067\u306epreflight\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5b9f\u88c5\u304a\u3088\u3073\u30c6\u30b9\u30c8\u4f8b](http://web-salad.hateblo.jp/entry/2015/05/03/170754)\u306e\u5b9f\u88c5\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\nroutes.rb\u306e\u5148\u982d\u3067OPTIONS\u30e1\u30bd\u30c3\u30c9\u3067\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001options_requests_controller\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n``` config/routes.rb\nRails.application.routes.draw do\n  match '*path' => 'options_request#preflight', via: :options\n  # other resources\nend\n```\n\n\u30d8\u30c3\u30c0\u306b'Access-Control-Max-Age', 'Access-Control-Allow-Headers', 'Access-Control-Allow-Methods' \u3092\u3064\u3051\u3066\u8fd4\u3057\u307e\u3059\u3002\n\n``` app/controllers/options_request_controller.rb\nclass OptionsRequestController < ApplicationController\n  ACCESS_CONTROL_ALLOW_METHODS = %w(GET OPTIONS).freeze\n  ACCESS_CONTROL_ALLOW_HEADERS = %w(Accept Origin Content-Type Authorization).freeze\n\n  def preflight\n    set_preflight_headers!\n    head :ok\n  end\n\n  private\n\n  def set_preflight_headers!\n    response.headers['Access-Control-Max-Age'] = ACCESS_CONTROL_MAX_AGE\n    response.headers['Access-Control-Allow-Headers'] = ACCESS_CONTROL_ALLOW_HEADERS.join(',')\n    response.headers['Access-Control-Allow-Methods'] = ACCESS_CONTROL_ALLOW_METHODS.join(',')\n  end\nend\n```\n\n", "tags": ["Rails", "CORS", "axios", "JavaScript"]}