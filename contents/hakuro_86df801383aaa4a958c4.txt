{"context": " More than 1 year has passed since last update.\n\n\u524d\u66f8\u304d\n\u3044\u3064\u306e\u9593\u306b\u304bClojure\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u4ffa\u306e\u8a31\u5ac1\u3068\u5e7c\u306a\u3058\u307f\u304c\u4fee\u7f85\u5834\u3059\u304e\u308b\u3092\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nMission1\n(require '[clojure.string :as str])\n(use '[clojure.java.io])\n\n(doseq [line (line-seq (reader *in*))]\n  (println (str/join\n    (map #(nth % 1) (filter #(even? (nth % 0))\n      (map-indexed #(vector %1 %2) (str/split line #\"\")))))))\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.22\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.17\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.2\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.21\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.16\u79d2\n...Clojure\u9045\u3044\u3002\n\u304a\u305d\u3089\u304f1\u79d2\u306f\u8d77\u52d5\u6642\u306ecore\u306e\u8aad\u307f\u8fbc\u307f\u306b\u4f7f\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\nMission2\n(use '[clojure.java.io])\n(doseq [line (reduce #(map + %1 %2)\n  (partition 7 (map read-string\n    (rest (line-seq (reader *in*))))))] (println line))\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.15\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.25\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.22\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.19\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.16\u79d2\n\nMission3\n(println \"RENA\")\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.11\u79d2\n\nMission RENA\n(use '[clojure.java.io])\n(require '[clojure.string :as str])\n\n(defn str-to-numseq [s]\n  (map read-string (str/split s #\" \")))\n\n(defn fr-pair [v]\n  (map #(vector (first v) %) (rest v)))\n\n(defn reduce-concat [v]\n  (reduce #(concat %1 %2) v))\n\n(defn combine [s1 s2]\n  (reduce-concat\n    (map #(fr-pair (cons % s1)) s2)))\n\n(defn seq-to-grid [s]\n  (let [[x1 y1 x2 y2] s]\n    (combine (range x1 (+ 1 x2)) (range y1 (+ 1 y2)))))\n\n(defn m-val [x y m]\n  (nth (nth m (- x 1)) (- y 1)))\n\n(def input-data (line-seq (reader *in*)))\n\n(def settings (-> input-data first str-to-numseq))\n(def width (first settings))\n(def height (second settings))\n\n(def num-matrix\n  (map #(str-to-numseq %) (take height (rest input-data))))\n\n(def selectors\n  (distinct (reduce-concat\n     (map seq-to-grid\n          (map str-to-numseq (drop (+ 1 height) input-data))))))\n\n(def result\n  (reduce + (map #(m-val (first %) (last %) num-matrix) selectors)))\n\n(println result)\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.32\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.28\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.34\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.28\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.28\u79d2\n\u4eca\u56de\u306f\u5bfe\u8c61\u306e\u30de\u30b9\u3092\u5168\u90e8\u6c42\u3081\u3066\u304b\u3089\u91cd\u8907\u3092\u5f3e\u3044\u3066\u96c6\u8a08\u3059\u308b\u6d41\u308c\u306b\u3057\u305f\u3051\u308c\u3069\u3001\u5404\u30de\u30b9\u3054\u3068\u306b\u30d5\u30e9\u30b0\u7acb\u3066\u3066\u304b\u3089\u96c6\u8a08\u3057\u305f\u65b9\u304c\u304a\u305d\u3089\u304f\u65e9\u3044\u3068\u601d\u308f\u308c\u308b\u3002\n\n\u611f\u60f3\n\u901f\u3055\u3092\u6c42\u3081\u308b\u305f\u3081\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5168\u4f53\u7684\u306b\u3051\u3063\u3053\u3046\u9045\u3044\u3002\n\u3042\u3068\u3001Clojure\u306f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3054\u3068\u306b\u65b0\u305f\u306b\u5b9f\u884c\u74b0\u5883\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u5206\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c1\u79d2\u307b\u3069\u3042\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u308b\u3002\uff08Mission3\u3067\u30821.1\u79d2\u304b\u304b\u3063\u3066\u3044\u308b\u305f\u3081\uff09\n\u5168\u4f53\u7684\u306b\u4e0d\u5229\u304b\u3082\u3002\n## \u524d\u66f8\u304d\n\n\u3044\u3064\u306e\u9593\u306b\u304bClojure\u304c\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u305f\u306e\u3067\u3001[\u4ffa\u306e\u8a31\u5ac1\u3068\u5e7c\u306a\u3058\u307f\u304c\u4fee\u7f85\u5834\u3059\u304e\u308b](https://paiza.jp/poh/enshura)\u3092\u89e3\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n## Mission1\n\n```clj\n(require '[clojure.string :as str])\n(use '[clojure.java.io])\n\n(doseq [line (line-seq (reader *in*))]\n  (println (str/join\n    (map #(nth % 1) (filter #(even? (nth % 0))\n      (map-indexed #(vector %1 %2) (str/split line #\"\")))))))\n```\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.22\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.17\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.2\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.21\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.16\u79d2\n\n...Clojure\u9045\u3044\u3002\n\u304a\u305d\u3089\u304f1\u79d2\u306f\u8d77\u52d5\u6642\u306ecore\u306e\u8aad\u307f\u8fbc\u307f\u306b\u4f7f\u3063\u3066\u3044\u308b\u306f\u305a\u3002\n\n## Mission2\n\n```clj\n(use '[clojure.java.io])\n(doseq [line (reduce #(map + %1 %2)\n  (partition 7 (map read-string\n    (rest (line-seq (reader *in*))))))] (println line))\n```\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.15\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.25\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.22\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.19\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.16\u79d2\n\n## Mission3\n\n```clj\n(println \"RENA\")\n```\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.11\u79d2\n\n## Mission RENA\n\n```clj\n(use '[clojure.java.io])\n(require '[clojure.string :as str])\n\n(defn str-to-numseq [s]\n  (map read-string (str/split s #\" \")))\n\n(defn fr-pair [v]\n  (map #(vector (first v) %) (rest v)))\n\n(defn reduce-concat [v]\n  (reduce #(concat %1 %2) v))\n\n(defn combine [s1 s2]\n  (reduce-concat\n    (map #(fr-pair (cons % s1)) s2)))\n\n(defn seq-to-grid [s]\n  (let [[x1 y1 x2 y2] s]\n    (combine (range x1 (+ 1 x2)) (range y1 (+ 1 y2)))))\n\n(defn m-val [x y m]\n  (nth (nth m (- x 1)) (- y 1)))\n\n(def input-data (line-seq (reader *in*)))\n\n(def settings (-> input-data first str-to-numseq))\n(def width (first settings))\n(def height (second settings))\n\n(def num-matrix\n  (map #(str-to-numseq %) (take height (rest input-data))))\n\n(def selectors\n  (distinct (reduce-concat\n     (map seq-to-grid\n          (map str-to-numseq (drop (+ 1 height) input-data))))))\n\n(def result\n  (reduce + (map #(m-val (first %) (last %) num-matrix) selectors)))\n\n(println result)\n```\n\n\u7d50\u679c\uff1a\n\u3000\u63d0\u51fa\u8a00\u8a9e\uff1aClojure(Beta)\n\u3000\u5f97\u70b9\uff1a100 \u70b9\n\n\u3000\u7d50\u679c\uff1a\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b91\uff1asuccess\u30001.32\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b92\uff1asuccess\u30001.28\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b93\uff1asuccess\u30001.34\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b94\uff1asuccess\u30001.28\u79d2\n\u3000\u30c6\u30b9\u30c8\u30b1\u30fc\u30b95\uff1asuccess\u30001.28\u79d2\n\n\u4eca\u56de\u306f\u5bfe\u8c61\u306e\u30de\u30b9\u3092\u5168\u90e8\u6c42\u3081\u3066\u304b\u3089\u91cd\u8907\u3092\u5f3e\u3044\u3066\u96c6\u8a08\u3059\u308b\u6d41\u308c\u306b\u3057\u305f\u3051\u308c\u3069\u3001\u5404\u30de\u30b9\u3054\u3068\u306b\u30d5\u30e9\u30b0\u7acb\u3066\u3066\u304b\u3089\u96c6\u8a08\u3057\u305f\u65b9\u304c\u304a\u305d\u3089\u304f\u65e9\u3044\u3068\u601d\u308f\u308c\u308b\u3002\n\n## \u611f\u60f3\n\n\u901f\u3055\u3092\u6c42\u3081\u308b\u305f\u3081\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5168\u4f53\u7684\u306b\u3051\u3063\u3053\u3046\u9045\u3044\u3002\n\u3042\u3068\u3001Clojure\u306f\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3054\u3068\u306b\u65b0\u305f\u306b\u5b9f\u884c\u74b0\u5883\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u306e\u5206\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c1\u79d2\u307b\u3069\u3042\u308b\u3088\u3046\u306b\u601d\u308f\u308c\u308b\u3002\uff08Mission3\u3067\u30821.1\u79d2\u304b\u304b\u3063\u3066\u3044\u308b\u305f\u3081\uff09\n\u5168\u4f53\u7684\u306b\u4e0d\u5229\u304b\u3082\u3002\n", "tags": ["Clojure", "paiza"]}