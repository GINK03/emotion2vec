{"context": " More than 1 year has passed since last update.octave\u3067\u65e5\u4ed8\u3092\u6271\u3044\u305f\u3044\u6642\u306b\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u5f62\u5f0f\u306ematlab timestamp(?)\u304c\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306e\u90fd\u5408\u3067\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u3067Unix timestamp\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u3092\u4f5c\u3063\u305f.\n\u8abf\u3079\u3066\u3082\u3059\u3050\u306b\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u306b\u30e1\u30e2\u3057\u3066\u304a\u304f.\nfunction timestamps = conv_datestr_timestamp(date_strs)\n    if ischar(date_strs) == 1\n        date_strs = cellstr(date_strs);\n    end\n\n    date_strs  = date_strs(:);\n    sz         = size(date_strs, 1);\n    timestamps = zeros(sz, 1);\n\n    for n = 1:sz\n        timestamps(n) = str2num(['int32(' strftime(\"%s\", strptime(date_strs{n}, '%Y/%m/%d %T')) ')']);\n    end\nend\n\n\n% Test code\ndate_strs = {\"2015/10/31 14:46:59\"; \"2015/1/1 14:46:59\"; \"2018/1/1 14:46:59\"};\nexpects = [1446270419; 1420091219; 1514785619];\nassert(conv_datestr_timestamp(date_strs), expects);\n\nassert(conv_datestr_timestamp(\"2015/10/31 14:46:59\"), 1446270419);\n\n\u66f8\u3044\u305f\u3042\u3068\u306b\u6c17\u3065\u3044\u305f\u304cmktime\u95a2\u6570\u3067\u3082\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3063\u307d\u3044\uff1f\n\n\u53c2\u7167\u30ea\u30f3\u30af\nIn GNU Octave, get the date and time\noctave\u3067\u65e5\u4ed8\u3092\u6271\u3044\u305f\u3044\u6642\u306b\u3001\u6d6e\u52d5\u5c0f\u6570\u70b9\u5f62\u5f0f\u306ematlab timestamp(?)\u304c\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306e\u90fd\u5408\u3067\u4e0d\u4fbf\u3060\u3063\u305f\u306e\u3067Unix timestamp\u306b\u5909\u63db\u3059\u308b\u95a2\u6570\u3092\u4f5c\u3063\u305f.\n\u8abf\u3079\u3066\u3082\u3059\u3050\u306b\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u3053\u306b\u30e1\u30e2\u3057\u3066\u304a\u304f.\n\n```matlab\nfunction timestamps = conv_datestr_timestamp(date_strs)\n    if ischar(date_strs) == 1\n        date_strs = cellstr(date_strs);\n    end\n\n    date_strs  = date_strs(:);\n    sz         = size(date_strs, 1);\n    timestamps = zeros(sz, 1);\n\n    for n = 1:sz\n        timestamps(n) = str2num(['int32(' strftime(\"%s\", strptime(date_strs{n}, '%Y/%m/%d %T')) ')']);\n    end\nend\n\n\n% Test code\ndate_strs = {\"2015/10/31 14:46:59\"; \"2015/1/1 14:46:59\"; \"2018/1/1 14:46:59\"};\nexpects = [1446270419; 1420091219; 1514785619];\nassert(conv_datestr_timestamp(date_strs), expects);\n\nassert(conv_datestr_timestamp(\"2015/10/31 14:46:59\"), 1446270419);\n```\n\n\u66f8\u3044\u305f\u3042\u3068\u306b\u6c17\u3065\u3044\u305f\u304cmktime\u95a2\u6570\u3067\u3082\u4f3c\u305f\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3063\u307d\u3044\uff1f\n#\u53c2\u7167\u30ea\u30f3\u30af\n[In GNU Octave, get the date and time](http://stackoverflow.com/questions/12514269/in-gnu-octave-get-the-date-and-time)\n", "tags": ["matlab", "Octave"]}