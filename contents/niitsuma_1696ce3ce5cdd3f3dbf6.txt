{"tags": ["LaTeX", "Emacs"], "context": "word\u306a\u3069\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308bLatex\u3001\u4f8b\u3048\u3070\n\nedit-indirect-region-latex-example.tex\nEquation (\\ref{eq:aa}) and (\\ref{eq:bb}) shows an results.\nX shows an results\\cite{AAa,Bb}.\n$x=234$\nProlog is logical languages.\n\\verb|<Opinions>|\nhello\n\\scheme|(setq q 2)|\nhello\n\\lstinline$category$\nxxxxxxxxxxxxx\n\\footnote{[1234]}\n\\footnote{\\url{http://example.com/}}\nNewton method find an solutions.\n\n\n\u3092\n\nedit-indirect-region-latex-example.txt\nEquation ([26530]) and ([98699]) shows an results.\nX shows an results[96852].\n[11593]\n[78137] is logical languages.\n[26630]\nhello\n[39322]\nhello\n[99858]\nxxxxxxxxxxxx\n[21335]\n[16739]\n[89154] method find an solutions.\n\n\n\u306e\u3088\u3046\u306a\u5f62\u306b\u5909\u63db\u3057\u3066\u304b\u3089word\u306b\u306a\u3069\u306b\u5f35\u308a\u4ed8\u3051\u3066\u6587\u7ae0\u6821\u95b2\u3084\u6587\u6cd5\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nedit-indirect-region\n\u306e\u62e1\u5f35\u3092\u4f5c\u3063\u305f\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\u306f\u4ee5\u4e0b\u306e edit-indirect-region-latex \u3068 edit-indirect-latex \u95a2\u6570\n\nedit-indirect-region-latex.el\n\n\n(require 'ht) \n\n(defun ht-valueds (table valued)\n  \"Retuen keys which has value\"\n  (let (results)\n    (maphash\n     (lambda (key value)\n       (when (equal value valued)\n     (push key results)))\n       table)\n    results))\n\n(defun ht-valued (table valued)\n  \"Retuen key which has value\"\n  (car (ht-valueds table valued)))\n\n\n(defun ht-gen-key (table)  \n  \"generate identilcal key\"\n  (let* ((keynum (+ 10000 (random 90000)))\n         (key (concat \"[\" (number-to-string keynum) \"]\")))\n    (if (ht-get table key)\n    (ht-gen-key (table))\n      key)))\n\n(defun ht-store-value! (table value)\n  \"store value with identical new key. and return new identical key\"\n  (let ((key (ht-valued table value)))\n    (if key key\n      (let ((key-new (ht-gen-key table)))\n    (ht-set! table key-new value)\n    key-new))))\n\n(defun edit-indirect-region-latex-ht-resister (word &optional key)\n  (when (or (not (boundp 'edit-indirect-region-latex-ht))\n            (not (ht? edit-indirect-region-latex-ht)) )\n    (setq edit-indirect-region-latex-ht (ht-create)))\n  (if key\n      (if (ht-get edit-indirect-region-latex-ht key)\n          key\n        (progn (ht-set! edit-indirect-region-latex-ht key word)\n               key))\n      (ht-store-value! edit-indirect-region-latex-ht word)))\n\n\n(defun edit-indirect-region-latex-prepossess ()\n  (beginning-of-buffer)\n  (while (re-search-forward \"[\\[0-9\\]+]\" nil t)\n    (let ((key (buffer-substring-no-properties (match-beginning 0) (match-end 0) )))\n      (edit-indirect-region-latex-ht-resister key key))))\n\n(defun edit-indirect-region-latex-after-creation-hook ()\n     (ht-each\n      (lambda (key value)\n        (beginning-of-buffer)\n        (while (search-forward value nil t) (replace-match key)) )\n      edit-indirect-region-latex-ht)\n\n     (mapcar\n      (lambda (pat)\n        (beginning-of-buffer)\n        (while (re-search-forward pat nil t)\n          (let ((key (edit-indirect-region-latex-ht-resister\n                  (buffer-substring-no-properties (match-beginning 0) (match-end 0)))))\n            (replace-match key))))\n      (list\n       \"\\\\(\\\\\\\\\\\\(verb\\\\|scheme\\\\|lstinline\\\\)|[^|]*|\\\\|\\\\\\\\\\\\(cite\\\\|label\\\\|ref\\\\|url\\\\|lstinline\\\\){[^}]*}\\\\|\\\\\\\\lstinline\\\\$[^\\\\$]*\\\\$\\\\)\"  ;;;1st step\n       \"\\\\$[^\\\\$]*\\\\$\" ;;2nd\n       \"\\\\\\\\footnote{[^}]*}\"  ;; 3rd\n       ))\n\n     ;;(write-file \"/tmp/indirect.md\" nil)\n\n     ;;you can insert initial spell check etc. for example\n     ;;(langtool-check-buffer)\n     ;;(redpen-paragraph)\n\n     )\n\n(defun edit-indirect-region-latex-after-commit (beg end)\n  (dotimes (number 3 value)\n        (setq value number)\n        (mapcar\n         (lambda (key)\n           (beginning-of-buffer)\n           (while (search-forward key nil  t)\n             (replace-match (ht-get edit-indirect-region-latex-ht key) 'fixed-case 'literal)  ))\n         (ht-keys edit-indirect-region-latex-ht)   ))  )\n\n\n(require 'edit-indirect)\n\n(defun edit-indirect-region-wrap-latex (s e o)\n  (save-excursion (edit-indirect-region-latex-prepossess))\n  (setq edit-indirect-after-creation-hook #'edit-indirect-region-latex-after-creation-hook)\n  (setq edit-indirect-after-commit-functions (list  #'edit-indirect-region-latex-after-commit))\n  (edit-indirect-region s e o)\n  )\n\n(defun edit-indirect-latex (s e)\n  (interactive \"r\")\n  (let ((pt (point)))\n    (cond ((region-active-p)\n           (edit-indirect-region-wrap-latex s e t)\n           ;(markdown-mode)\n           )\n          ((progn\n             (save-excursion\n               (setq s (re-search-backward \"\\\\(\\\\\\\\begin{[^{}]+}\\\\|\\\\\\\\end{[^{}]+}\\\\)\" nil t)\n                     region-start (match-end 0))\n               (goto-char pt)\n               (setq e (re-search-forward \"\\\\(\\\\\\\\begin{[^{}]+}\\\\|\\\\\\\\end{[^{}]+}\\\\)\" nil t)\n                     region-end (match-beginning 0))\n               (print (list s pt (point) e ))\n               (and s e (< s pt e))))\n           (edit-indirect-region-wrap-latex region-start region-end t)\n           ;(markdown-mode)\n           )\n          (t (user-error \"No region\")))))\n\n\n\n(defun edit-indirect-region-latex (beg end &optional display-buffer)\n  (interactive\n   (if (or (use-region-p) (not transient-mark-mode))\n       (prog1 (list (region-beginning) (region-end) t)\n         (deactivate-mark))\n     (user-error \"No region\")))\n\n  (setq edit-indirect-after-creation-hook #'edit-indirect-region-latex-after-creation-hook)\n  (setq edit-indirect-after-commit-functions (list  #'edit-indirect-region-latex-after-commit))\n\n  (let ((buffer (edit-indirect--get-edit-indirect-buffer beg end)))\n    (when display-buffer\n      (with-current-buffer buffer\n        (setq-local edit-indirect--should-quit-window t))\n      (select-window (display-buffer buffer)))\n    buffer))\n\n\n\n(\u3064\u3044\u3067\u306bht\u306e\u62e1\u5f35\u3082\u5c11\u3057\u3057\u3066\u3044\u308b)\nProlog\u3084Newton\u306a\u3069\u306e\u30de\u30a4\u30ca\u30fc\u306a\u5c02\u9580\u7528\u8a9e\u3067\u6821\u95b2\u30bd\u30d5\u30c8\u306b\u30b9\u30da\u30eb\u30df\u30b9\u3068\u8a00\u308f\u308c\u308b\u7528\u8a9e\u306f\u3001\u5909\u63db\u8f9e\u66f8edit-indirect-region-latex-ht\u306b\u4e8b\u524d\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3068\u3001\u4e00\u62ec\u3057\u3066\u5909\u63db\u3057\u3066\u304f\u308c\u308b\n\nedit-indirect-region-latex-preprocess-example.el\n(edit-indirect-region-latex-ht-resister \"Prolog\")\n(edit-indirect-region-latex-ht-resister \"Newton\")\n\n\n\u306a\u304a\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3055\u308c\u3066\u3044\u308b\n;;(write-file \"/tmp/indirect.md\" nil)\n\u3092\u6709\u52b9\u306b\u3059\u308b\u3068grammarly\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u304c\u4f7f\u3048\u3066\u64cd\u4f5c\u304c\u5c11\u3057\u3060\u3051\u697d\u306b\u306a\u308b\n(setq edit-indirect-after-creation-hook ...)\n(setq edit-indirect-after-commit-functions ...)\n\u304c\u30aa\u30ea\u30b8\u30ca\u30eb\u306eedit-indirect-region\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u30b0\u30ed\u30fc\u30d0\u30eb \u30b9\u30b3\u30fc\u30d7\u3067\u5b9a\u7fa9\u3057\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u306eedit-indirect-region\u3092\u547c\u3093\u3067\u3082\u540c\u3058\u52d5\u4f5c\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n\u3064\u3044\u3067\u306b\u3044\u3061\u3044\u3061\u7bc4\u56f2\u9078\u629e\u3057\u306a\u3044\u3067\u524d\u5f8c\u7bc4\u56f2\u3092\u81ea\u52d5\u8a2d\u5b9a\u3059\u308b\nedit-indirect-latex\n\u3092edit-indirect-dwim\u53c2\u8003\u306b\u3057\u3066\u4f5c\u3063\u305f\uff0e\nLatex\u306e\u6587\u7ae0\u9593\u9055\u3044\u30c1\u30a7\u30c3\u30af\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\npandoc\u3067markdown\u3078\u5909\u63db\u3057\u3066\u304b\u3089textlint\u306b\u5165\u529b\u3059\u308b\u51e6\u7406\u3092makefile\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304f\u65b9\u6cd5\n\u306a\u3069\u3082\u3042\u308b\u3088\u3046\u3060\u304c\u3001pandoc\u306ftikz\u304c\u3042\u308b\u3068\u52d5\u304b\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f5c\u3063\u305f\u3002\nword\u306a\u3069\u306b\u8cbc\u308a\u4ed8\u3051\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308bLatex\u3001\u4f8b\u3048\u3070\n\n```edit-indirect-region-latex-example.tex\nEquation (\\ref{eq:aa}) and (\\ref{eq:bb}) shows an results.\nX shows an results\\cite{AAa,Bb}.\n$x=234$\nProlog is logical languages.\n\\verb|<Opinions>|\nhello\n\\scheme|(setq q 2)|\nhello\n\\lstinline$category$\nxxxxxxxxxxxxx\n\\footnote{[1234]}\n\\footnote{\\url{http://example.com/}}\nNewton method find an solutions.\n```\n\u3092\n\n```edit-indirect-region-latex-example.txt\nEquation ([26530]) and ([98699]) shows an results.\nX shows an results[96852].\n[11593]\n[78137] is logical languages.\n[26630]\nhello\n[39322]\nhello\n[99858]\nxxxxxxxxxxxx\n[21335]\n[16739]\n[89154] method find an solutions.\n```\n\n\u306e\u3088\u3046\u306a\u5f62\u306b\u5909\u63db\u3057\u3066\u304b\u3089word\u306b\u306a\u3069\u306b\u5f35\u308a\u4ed8\u3051\u3066\u6587\u7ae0\u6821\u95b2\u3084\u6587\u6cd5\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n[edit-indirect-region](http://emacs.rubikitch.com/edit-indirect/)\n\u306e\u62e1\u5f35\u3092\u4f5c\u3063\u305f\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\u306f\u4ee5\u4e0b\u306e edit-indirect-region-latex \u3068 edit-indirect-latex \u95a2\u6570\n\n```edit-indirect-region-latex.el\n\n\n(require 'ht) \n\n(defun ht-valueds (table valued)\n  \"Retuen keys which has value\"\n  (let (results)\n    (maphash\n     (lambda (key value)\n       (when (equal value valued)\n\t (push key results)))\n       table)\n    results))\n\n(defun ht-valued (table valued)\n  \"Retuen key which has value\"\n  (car (ht-valueds table valued)))\n\n\n(defun ht-gen-key (table)  \n  \"generate identilcal key\"\n  (let* ((keynum (+ 10000 (random 90000)))\n         (key (concat \"[\" (number-to-string keynum) \"]\")))\n    (if (ht-get table key)\n\t(ht-gen-key (table))\n      key)))\n\n(defun ht-store-value! (table value)\n  \"store value with identical new key. and return new identical key\"\n  (let ((key (ht-valued table value)))\n    (if key key\n      (let ((key-new (ht-gen-key table)))\n\t(ht-set! table key-new value)\n\tkey-new))))\n\n(defun edit-indirect-region-latex-ht-resister (word &optional key)\n  (when (or (not (boundp 'edit-indirect-region-latex-ht))\n            (not (ht? edit-indirect-region-latex-ht)) )\n    (setq edit-indirect-region-latex-ht (ht-create)))\n  (if key\n      (if (ht-get edit-indirect-region-latex-ht key)\n          key\n        (progn (ht-set! edit-indirect-region-latex-ht key word)\n               key))\n      (ht-store-value! edit-indirect-region-latex-ht word)))\n\n\n(defun edit-indirect-region-latex-prepossess ()\n  (beginning-of-buffer)\n  (while (re-search-forward \"[\\[0-9\\]+]\" nil t)\n    (let ((key (buffer-substring-no-properties (match-beginning 0) (match-end 0) )))\n      (edit-indirect-region-latex-ht-resister key key))))\n\n(defun edit-indirect-region-latex-after-creation-hook ()\n     (ht-each\n      (lambda (key value)\n        (beginning-of-buffer)\n        (while (search-forward value nil t) (replace-match key)) )\n      edit-indirect-region-latex-ht)\n     \n     (mapcar\n      (lambda (pat)\n        (beginning-of-buffer)\n        (while (re-search-forward pat nil t)\n          (let ((key (edit-indirect-region-latex-ht-resister\n                  (buffer-substring-no-properties (match-beginning 0) (match-end 0)))))\n            (replace-match key))))\n      (list\n       \"\\\\(\\\\\\\\\\\\(verb\\\\|scheme\\\\|lstinline\\\\)|[^|]*|\\\\|\\\\\\\\\\\\(cite\\\\|label\\\\|ref\\\\|url\\\\|lstinline\\\\){[^}]*}\\\\|\\\\\\\\lstinline\\\\$[^\\\\$]*\\\\$\\\\)\"  ;;;1st step\n       \"\\\\$[^\\\\$]*\\\\$\" ;;2nd\n       \"\\\\\\\\footnote{[^}]*}\"  ;; 3rd\n       ))\n     \n     ;;(write-file \"/tmp/indirect.md\" nil)\n\n     ;;you can insert initial spell check etc. for example\n     ;;(langtool-check-buffer)\n     ;;(redpen-paragraph)\n\n     )\n\n(defun edit-indirect-region-latex-after-commit (beg end)\n  (dotimes (number 3 value)\n        (setq value number)\n        (mapcar\n         (lambda (key)\n           (beginning-of-buffer)\n           (while (search-forward key nil  t)\n             (replace-match (ht-get edit-indirect-region-latex-ht key) 'fixed-case 'literal)  ))\n         (ht-keys edit-indirect-region-latex-ht)   ))  )\n\n\n(require 'edit-indirect)\n\n(defun edit-indirect-region-wrap-latex (s e o)\n  (save-excursion (edit-indirect-region-latex-prepossess))\n  (setq edit-indirect-after-creation-hook #'edit-indirect-region-latex-after-creation-hook)\n  (setq edit-indirect-after-commit-functions (list  #'edit-indirect-region-latex-after-commit))\n  (edit-indirect-region s e o)\n  )\n\n(defun edit-indirect-latex (s e)\n  (interactive \"r\")\n  (let ((pt (point)))\n    (cond ((region-active-p)\n           (edit-indirect-region-wrap-latex s e t)\n           ;(markdown-mode)\n           )\n          ((progn\n             (save-excursion\n               (setq s (re-search-backward \"\\\\(\\\\\\\\begin{[^{}]+}\\\\|\\\\\\\\end{[^{}]+}\\\\)\" nil t)\n                     region-start (match-end 0))\n               (goto-char pt)\n               (setq e (re-search-forward \"\\\\(\\\\\\\\begin{[^{}]+}\\\\|\\\\\\\\end{[^{}]+}\\\\)\" nil t)\n                     region-end (match-beginning 0))\n               (print (list s pt (point) e ))\n               (and s e (< s pt e))))\n           (edit-indirect-region-wrap-latex region-start region-end t)\n           ;(markdown-mode)\n           )\n          (t (user-error \"No region\")))))\n\n\n  \n(defun edit-indirect-region-latex (beg end &optional display-buffer)\n  (interactive\n   (if (or (use-region-p) (not transient-mark-mode))\n       (prog1 (list (region-beginning) (region-end) t)\n         (deactivate-mark))\n     (user-error \"No region\")))\n\n  (setq edit-indirect-after-creation-hook #'edit-indirect-region-latex-after-creation-hook)\n  (setq edit-indirect-after-commit-functions (list  #'edit-indirect-region-latex-after-commit))\n  \n  (let ((buffer (edit-indirect--get-edit-indirect-buffer beg end)))\n    (when display-buffer\n      (with-current-buffer buffer\n        (setq-local edit-indirect--should-quit-window t))\n      (select-window (display-buffer buffer)))\n    buffer))\n\n```\n\n(\u3064\u3044\u3067\u306bht\u306e\u62e1\u5f35\u3082\u5c11\u3057\u3057\u3066\u3044\u308b)\n\nProlog\u3084Newton\u306a\u3069\u306e\u30de\u30a4\u30ca\u30fc\u306a\u5c02\u9580\u7528\u8a9e\u3067\u6821\u95b2\u30bd\u30d5\u30c8\u306b\u30b9\u30da\u30eb\u30df\u30b9\u3068\u8a00\u308f\u308c\u308b\u7528\u8a9e\u306f\u3001\u5909\u63db\u8f9e\u66f8edit-indirect-region-latex-ht\u306b\u4e8b\u524d\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3068\u3001\u4e00\u62ec\u3057\u3066\u5909\u63db\u3057\u3066\u304f\u308c\u308b\n\n```edit-indirect-region-latex-preprocess-example.el\n(edit-indirect-region-latex-ht-resister \"Prolog\")\n(edit-indirect-region-latex-ht-resister \"Newton\")\n```\n\n\u306a\u304a\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3055\u308c\u3066\u3044\u308b\n;;(write-file \"/tmp/indirect.md\" nil)\n\u3092\u6709\u52b9\u306b\u3059\u308b\u3068grammarly\u306e\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u6a5f\u80fd\u304c\u4f7f\u3048\u3066\u64cd\u4f5c\u304c\u5c11\u3057\u3060\u3051\u697d\u306b\u306a\u308b\n\n\n(setq edit-indirect-after-creation-hook ...)\n(setq edit-indirect-after-commit-functions ...)\n\u304c\u30aa\u30ea\u30b8\u30ca\u30eb\u306eedit-indirect-region\u306b\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u30b0\u30ed\u30fc\u30d0\u30eb \u30b9\u30b3\u30fc\u30d7\u3067\u5b9a\u7fa9\u3057\u3066\u30aa\u30ea\u30b8\u30ca\u30eb\u306eedit-indirect-region\u3092\u547c\u3093\u3067\u3082\u540c\u3058\u52d5\u4f5c\u306b\u306a\u308b\u3068\u601d\u3046\u3002\n\n\u3064\u3044\u3067\u306b\u3044\u3061\u3044\u3061\u7bc4\u56f2\u9078\u629e\u3057\u306a\u3044\u3067\u524d\u5f8c\u7bc4\u56f2\u3092\u81ea\u52d5\u8a2d\u5b9a\u3059\u308b\nedit-indirect-latex\n\u3092[edit-indirect-dwim](http://emacs.rubikitch.com/edit-indirect/)\u53c2\u8003\u306b\u3057\u3066\u4f5c\u3063\u305f\uff0e\n\nLatex\u306e\u6587\u7ae0\u9593\u9055\u3044\u30c1\u30a7\u30c3\u30af\u306e\u65b9\u6cd5\u3068\u3057\u3066\u306f\n[pandoc\u3067markdown\u3078\u5909\u63db\u3057\u3066\u304b\u3089textlint\u306b\u5165\u529b\u3059\u308b\u51e6\u7406\u3092makefile\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304f\u65b9\u6cd5](http://rentwi.textfile.org/?743702479393587200s)\n\u306a\u3069\u3082\u3042\u308b\u3088\u3046\u3060\u304c\u3001pandoc\u306ftikz\u304c\u3042\u308b\u3068\u52d5\u304b\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u4f5c\u3063\u305f\u3002\n\n"}