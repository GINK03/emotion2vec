{"context": "\n\nTL;DR\nKernel#pp(Pretty Print)\u3067\u8868\u793a\u3059\u308bHash\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\u3001\u30ad\u30fc\u304c\u30b7\u30f3\u30dc\u30eb\u306e\u3082\u306e\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\uff09\u304b\u3089\u65b0\u3057\u3044\u8a18\u6cd5\u3078\u5909\u3048\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\uff09\n{ :font_size => 10, :font_family => \"Arial\" }\n\n\n\n\u65b0\u3057\u3044\u8a18\u6cd5\uff08Ruby1.9\u4ee5\u4e0a\uff09\n{ font_size: 10, font_family: \"Arial\" }\n\n\n\n\u554f\u984c\u610f\u8b58\n\u7279\u306birb\u3084pry\u3067\u306f\u3001\u5909\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u304c\u3001\u8868\u793a\u304c\u5fc5\u305a\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\u306e\u53e4\u3044\u8a18\u6cd5\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u3066\u3001\u65b0\u8a18\u6cd5\u6d3e\u306e\u4eba\u306f\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u51fa\u529b\u3092\u30b3\u30d4\u30da\u3059\u308b\u3068\u304d\u3082\u3001\u30da\u30fc\u30b9\u30c8\u5148\u3067\u65b0\u8a18\u6cd5\u3078\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\uff08\u4e00\u62ec\u7f6e\u63db\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3057\u305f\u306d\uff09\u3002\n\n\u89e3\u6c7a\u65b9\u6cd5\n\u305d\u3053\u3067\u3001Hash\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304cKernel#pp\u3067\u8868\u793a\u3055\u308c\u308b\u6642\u306b\u547c\u3070\u308c\u308b\u3001Hash#pretty_print\u30e1\u30bd\u30c3\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u65b0\u8a18\u6cd5\u8868\u793a\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u5177\u4f53\u4f8b\n\u5148\u306b\u5177\u4f53\u7684\u306a\u8868\u793a\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\uff09\n\npry\n[1] pry(main)> { a: 0, b: \"b\", c: { :ca => :ca, cb: {}, \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [], \"cd\": \"cd\" * 20 }, \"d\" => :d, \"e-f\": :ef }\n=> {:a=>0,\n :b=>\"b\",\n :c=>\n  {:ca=>:ca,\n   :cb=>{},\n   :\"(\uff40\u30fb\u03c9\u30fb\u00b4)\"=>[],\n   :cd=>\"cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"},\n \"d\"=>:d,\n :\"e-f\"=>:ef}\n\n\n\n\u65b0\u3057\u3044\u8a18\u6cd5\u3078\u5909\u66f4\u3059\u308b\u3068\n\npry\n[1] pry(main)> { a: 0, b: \"b\", c: { :ca => :ca, cb: {}, \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [], \"cd\": \"cd\" * 20 }, \"d\" => :d, \"e-f\": :ef }\n=> {\n  a: 0,\n  b: \"b\",\n  c: {\n    ca: :ca,\n    cb: {},\n    \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [],\n    cd: \"cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"\n  },\n  \"d\" => :d,\n  \"e-f\": :ef\n}\n\n\n\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\u30b3\u30d4\u30da\u3057\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u306d\u3002\n\u306a\u304a\u3001\u30b7\u30f3\u30dc\u30eb\u578b\u306e\u30ad\u30fc\u306e\u5834\u5408\u306f\u3001\u5143\u306e\u8a18\u6cd5\u306b\u95a2\u308f\u3089\u305a\u3067\u304d\u308b\u304b\u304e\u308a\u65b0\u8a18\u6cd5\u3067\u8868\u793a\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001\u6539\u884c\u53ef\u80fd\u306a\u4f4d\u7f6e(breakable point)\u3082\u5c11\u3057\u8abf\u6574\u3057\u305f\u306e\u3067\u3001\u898b\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u73fe\u65b9\u6cd5\uff08\u5909\u66f4\u65b9\u6cd5\uff09\n\u5b9f\u73fe\u306f\u7c21\u5358\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066require\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u4efb\u610f\u3067\u3059\u3002\n\nhash_pretty_print.rb\nrequire 'pp'\nclass Hash\n  def pretty_print(q)\n    if empty?\n      q.text '{}'\n      return\n    end\n    q.group 2, '{' do\n      q.breakable\n      q.seplist self do |k,v|\n        if k.is_a? Symbol\n          if k.inspect[1] === '\"'\n            q.text %|\"#{k}\": |\n          else\n            q.text \"#{k}: \"\n          end\n        else\n          q.pp k\n          q.text ' => '\n        end\n        if v.is_a? Enumerable\n          q.pp v\n        else\n          q.group 1 do\n            q.breakable ''\n            q.pp v\n          end\n        end\n      end\n    end\n    q.breakable\n    q.text '}'\n  end\nend\n\n\nirb\u3084pry\u3067\u306f\u3001\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n% irb -r./hash_pretty_print\n% pry -r./hash_pretty_print\n\n\u4ed6\u306b\u3082Ruby on Rails\u3067\u306f\u3001#{Rails.root}/config/initializers/hash_pretty_print.rb\u306a\u3069\u306b\u7f6e\u3044\u3066\u304a\u3051\u3070\u3001rails console\u3067\u3082\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u306d\u3002\n\u3088\u304b\u3063\u305f\u3089\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nEnjoy ruby life!\n\n\u53c2\u8003\n\nlibrary pp (Ruby 2.3.0)\n\nModule: PP::PPMethods (Ruby 2.3.0) *source\nClass: Hash (Ruby 2.3.1)\n\n\n## TL;DR\n\n`Kernel#pp`(Pretty Print)\u3067\u8868\u793a\u3059\u308bHash\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\u3001\u30ad\u30fc\u304c\u30b7\u30f3\u30dc\u30eb\u306e\u3082\u306e\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\uff09\u304b\u3089\u65b0\u3057\u3044\u8a18\u6cd5\u3078\u5909\u3048\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n```ruby:\u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\uff09\n{ :font_size => 10, :font_family => \"Arial\" }\n```\n\n```ruby:\u65b0\u3057\u3044\u8a18\u6cd5\uff08Ruby1.9\u4ee5\u4e0a\uff09\n{ font_size: 10, font_family: \"Arial\" }\n```\n\n## \u554f\u984c\u610f\u8b58\n\n\u7279\u306b`irb`\u3084`pry`\u3067\u306f\u3001\u5909\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u5185\u5bb9\u3092\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u304c\u3001\u8868\u793a\u304c\u5fc5\u305a\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\u306e\u53e4\u3044\u8a18\u6cd5\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u3066\u3001\u65b0\u8a18\u6cd5\u6d3e\u306e\u4eba\u306f\u30e2\u30e4\u30e2\u30e4\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u51fa\u529b\u3092\u30b3\u30d4\u30da\u3059\u308b\u3068\u304d\u3082\u3001\u30da\u30fc\u30b9\u30c8\u5148\u3067\u65b0\u8a18\u6cd5\u3078\u76f4\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\uff08[\u4e00\u62ec\u7f6e\u63db\u3059\u308b\u65b9\u6cd5](http://qiita.com/jnchito/items/b2e4289c5ae8bc1b2ee9)\u3082\u3042\u308a\u307e\u3057\u305f\u306d\uff09\u3002\n\n## \u89e3\u6c7a\u65b9\u6cd5\n\n\u305d\u3053\u3067\u3001`Hash`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c`Kernel#pp`\u3067\u8868\u793a\u3055\u308c\u308b\u6642\u306b\u547c\u3070\u308c\u308b\u3001`Hash#pretty_print`\u30e1\u30bd\u30c3\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u65b0\u8a18\u6cd5\u8868\u793a\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n## \u5177\u4f53\u4f8b\n\n\u5148\u306b\u5177\u4f53\u7684\u306a\u8868\u793a\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### \u53e4\u3044\u8a18\u6cd5\uff08\u30cf\u30c3\u30b7\u30e5\u30ed\u30b1\u30c3\u30c8\u5f62\u5f0f\uff09\n\n```ruby:pry\n[1] pry(main)> { a: 0, b: \"b\", c: { :ca => :ca, cb: {}, \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [], \"cd\": \"cd\" * 20 }, \"d\" => :d, \"e-f\": :ef }\n=> {:a=>0,\n :b=>\"b\",\n :c=>\n  {:ca=>:ca,\n   :cb=>{},\n   :\"(\uff40\u30fb\u03c9\u30fb\u00b4)\"=>[],\n   :cd=>\"cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"},\n \"d\"=>:d,\n :\"e-f\"=>:ef}\n```\n \n### \u65b0\u3057\u3044\u8a18\u6cd5\u3078\u5909\u66f4\u3059\u308b\u3068\n \n```ruby:pry\n[1] pry(main)> { a: 0, b: \"b\", c: { :ca => :ca, cb: {}, \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [], \"cd\": \"cd\" * 20 }, \"d\" => :d, \"e-f\": :ef }\n=> {\n  a: 0,\n  b: \"b\",\n  c: {\n    ca: :ca,\n    cb: {},\n    \"(\uff40\u30fb\u03c9\u30fb\u00b4)\": [],\n    cd: \"cdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcdcd\"\n  },\n  \"d\" => :d,\n  \"e-f\": :ef\n}\n```\n\n\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\u30b3\u30d4\u30da\u3057\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u306d\u3002\n\u306a\u304a\u3001\u30b7\u30f3\u30dc\u30eb\u578b\u306e\u30ad\u30fc\u306e\u5834\u5408\u306f\u3001\u5143\u306e\u8a18\u6cd5\u306b\u95a2\u308f\u3089\u305a\u3067\u304d\u308b\u304b\u304e\u308a\u65b0\u8a18\u6cd5\u3067\u8868\u793a\u3057\u3088\u3046\u3068\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u6539\u884c\u53ef\u80fd\u306a\u4f4d\u7f6e(breakable point)\u3082\u5c11\u3057\u8abf\u6574\u3057\u305f\u306e\u3067\u3001\u898b\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u5b9f\u73fe\u65b9\u6cd5\uff08\u5909\u66f4\u65b9\u6cd5\uff09\n\n\u5b9f\u73fe\u306f\u7c21\u5358\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066`require`\u3057\u307e\u3059\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u4efb\u610f\u3067\u3059\u3002\n\n```ruby:hash_pretty_print.rb\nrequire 'pp'\nclass Hash\n  def pretty_print(q)\n    if empty?\n      q.text '{}'\n      return\n    end\n    q.group 2, '{' do\n      q.breakable\n      q.seplist self do |k,v|\n        if k.is_a? Symbol\n          if k.inspect[1] === '\"'\n            q.text %|\"#{k}\": |\n          else\n            q.text \"#{k}: \"\n          end\n        else\n          q.pp k\n          q.text ' => '\n        end\n        if v.is_a? Enumerable\n          q.pp v\n        else\n          q.group 1 do\n            q.breakable ''\n            q.pp v\n          end\n        end\n      end\n    end\n    q.breakable\n    q.text '}'\n  end\nend\n```\n\n`irb`\u3084`pry`\u3067\u306f\u3001\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```\n% irb -r./hash_pretty_print\n% pry -r./hash_pretty_print\n```\n\n\u4ed6\u306b\u3082`Ruby on Rails`\u3067\u306f\u3001`#{Rails.root}/config/initializers/hash_pretty_print.rb`\u306a\u3069\u306b\u7f6e\u3044\u3066\u304a\u3051\u3070\u3001`rails console`\u3067\u3082\u81ea\u52d5\u7684\u306b\u8aad\u307f\u8fbc\u307e\u308c\u307e\u3059\u306d\u3002\n\n\u3088\u304b\u3063\u305f\u3089\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nEnjoy ruby life!\n\n## \u53c2\u8003\n\n- [library pp (Ruby 2.3.0)](http://docs.ruby-lang.org/ja/2.3.0/library/pp.html)\n- [Module: PP::PPMethods (Ruby 2.3.0)](http://ruby-doc.org/stdlib-2.3.0/libdoc/pp/rdoc/PP/PPMethods.html#method-i-pp_hash) *source\n- [Class: Hash (Ruby 2.3.1)](http://ruby-doc.org/core-2.3.1/Hash.html)\n", "tags": ["pry", "Ruby", "irb"]}