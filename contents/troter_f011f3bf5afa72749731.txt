{"context": "zsh_history\u306b\u306fASCII\u4ee5\u5916\u306e\u6587\u5b57\u304c\u30e1\u30bf\u6587\u5b57\u3092\u4f7f\u3063\u3066\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u9069\u5207\u306b\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u304b\u3089fish\u304c\u8aad\u307f\u53d6\u308c\u308byaml\u306b\u5909\u63db\u3059\u308b\u3002\n\nconvert.rb\nrequire 'stringio'\n\nFile.open(File.expand_path('~/.zsh_history')) do |f|\n  escaped = StringIO.new\n\n  # .zsh_history\u306e\u30c7\u30b3\u30fc\u30c9\n  f.to_enum(:each_byte).tap do |enum|\n    processes = []\n    loop do\n      b = enum.next\n      if b == 0x83\n        b = enum.next\n        b = (b ^ 0x20)\n      end\n      processes << b\n    end\n    escaped.write processes.pack('c*')\n  end\n\n  # \u96d1\u306b\u30d1\u30fc\u30b9\u3057\u3066fish_history\u306eyaml\u306b\u5909\u63db\n  # \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u3069\u3092\u4f7f\u3063\u305f\u8907\u6570\u884c\u5165\u529b\u306b\u3064\u3044\u3066\u306f\u8ae6\u3081\u3066\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u51fa\u3059\n  escaped.rewind\n  escaped.each_line do |l|\n    unless l[0] == ':'\n      $stderr.puts l\n      next\n    end\n    command = l.split(/;/, 2).last\n    time = l.split(/\\:/, 3)[1]\n    if time.nil?\n      $stderr.puts l\n      next\n    end\n\n    puts \"- cmd: #{command}\"\n    puts \"  when: #{time.strip}\"\n  end\nend\n\n\n$ ruby convert.rb > ~/fish_history\n$ cat ~/fish_history >> ~/.local/share/fish/fish_history\n\n\n\u53c2\u8003\n\nEmacs \u3067 zsh \u306e \u30d2\u30b9\u30c8\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u95b2\u89a7\u30fb\u7de8\u96c6\u3059\u308b - A Riddle Wrapped in a Mystery\nhttps://github.com/fish-shell/fish-shell/blob/master/src/history.cpp\nhistory file location \u00b7 Issue #862 \u00b7 fish-shell/fish-shell\n\nzsh_history\u306b\u306fASCII\u4ee5\u5916\u306e\u6587\u5b57\u304c\u30e1\u30bf\u6587\u5b57\u3092\u4f7f\u3063\u3066\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u9069\u5207\u306b\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u304b\u3089fish\u304c\u8aad\u307f\u53d6\u308c\u308byaml\u306b\u5909\u63db\u3059\u308b\u3002\n\n```rb:convert.rb\nrequire 'stringio'\n\nFile.open(File.expand_path('~/.zsh_history')) do |f|\n  escaped = StringIO.new\n\n  # .zsh_history\u306e\u30c7\u30b3\u30fc\u30c9\n  f.to_enum(:each_byte).tap do |enum|\n    processes = []\n    loop do\n      b = enum.next\n      if b == 0x83\n        b = enum.next\n        b = (b ^ 0x20)\n      end\n      processes << b\n    end\n    escaped.write processes.pack('c*')\n  end\n\n  # \u96d1\u306b\u30d1\u30fc\u30b9\u3057\u3066fish_history\u306eyaml\u306b\u5909\u63db\n  # \u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u3069\u3092\u4f7f\u3063\u305f\u8907\u6570\u884c\u5165\u529b\u306b\u3064\u3044\u3066\u306f\u8ae6\u3081\u3066\u6a19\u6e96\u30a8\u30e9\u30fc\u51fa\u529b\u306b\u51fa\u3059\n  escaped.rewind\n  escaped.each_line do |l|\n    unless l[0] == ':'\n      $stderr.puts l\n      next\n    end\n    command = l.split(/;/, 2).last\n    time = l.split(/\\:/, 3)[1]\n    if time.nil?\n      $stderr.puts l\n      next\n    end\n\n    puts \"- cmd: #{command}\"\n    puts \"  when: #{time.strip}\"\n  end\nend\n```\n\n```shell-session\n$ ruby convert.rb > ~/fish_history\n$ cat ~/fish_history >> ~/.local/share/fish/fish_history\n```\n\n## \u53c2\u8003\n\n- [Emacs \u3067 zsh \u306e \u30d2\u30b9\u30c8\u30ea\u30d5\u30a1\u30a4\u30eb\u3092\u95b2\u89a7\u30fb\u7de8\u96c6\u3059\u308b - A Riddle Wrapped in a Mystery](http://kawabata.github.io/blog/2013-03-17-zsh-history.html)\n- https://github.com/fish-shell/fish-shell/blob/master/src/history.cpp\n- [history file location \u00b7 Issue #862 \u00b7 fish-shell/fish-shell](https://github.com/fish-shell/fish-shell/issues/862#issuecomment-240547960)\n", "tags": ["Zsh", "fish"]}