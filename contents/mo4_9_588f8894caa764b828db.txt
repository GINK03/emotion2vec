{"context": "\u30c7\u30e2\uff1ahttps://mo49.github.io/qiita/20160908/menu.html\n\uff08\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\uff09\n\n\u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u308b\nconst imageFiles = [\n  \"nav_camera.png\",\n  \"nav_phone.png\",\n  \"nav_mail.png\",\n  \"nav_settings.png\"\n];\n\nthis.menu1 = this.createMenu(imageFiles, 10);\n\n\n\n\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3059\u308b\nthis.showMenu(this.menu1,0,0,0,50,10); // menu, offsetX, offsetY, offsetZ, radius, space\n\n\n\u5168\u4f53\u306f\u3053\u3093\u306a\u611f\u3058\ncreateMenu (imageFiles, diameter) {\n  this.menus = [];\n\n  for (let [i, src] of imageFiles.entries()) {\n    const geom = new THREE.PlaneGeometry(diameter,diameter,20);\n    const plane = this.createMesh(geom, src);\n    plane.visible = false; // \u4e00\u65e6\u975e\u8868\u793a\n    this.scene.add(plane);\n    this.menus.push(plane);\n  }\n\n  return this.menus;\n}\n\ncreateMesh (geom, imageFile) {\n  const PATH = './img/texture/';\n  const textureLoader = new THREE.TextureLoader();\n  const texture = textureLoader.load(PATH + imageFile);\n  const mat = new THREE.MeshBasicMaterial({transparent:true});\n  mat.map = texture;\n\n  const mesh = new THREE.Mesh(geom, mat);\n  return mesh;\n}\n\nshowMenu(menus, offsetX, offsetY, offsetZ, radius, space) {\n\n  const that = this;\n  let degree = 0;\n  let loopId;\n\n  update();\n  function update() {\n    loopId = requestAnimationFrame(update);\n    for (let [i, menu] of menus.entries()) {\n      menu.visible = true; // \u8868\u793a\n      if (degree > i*space) {\n        continue;\n      }\n      const pos = move(radius, i+1); // radius, index\n      menu.position.set(pos['x'] + offsetX, pos['y'] + offsetY,  offsetZ);\n    }\n    degree++;\n    if (degree > menus.length * space) {\n      stop();\n    }\n  }\n\n  function stop() {\n    cancelAnimationFrame(loopId);\n    console.log(\"stop\");\n  }\n\n  function move (radius, index) {\n    // speed = speed || 1.0;\n    const rad = (degree * Math.PI / 180) * 2;\n    const x = radius * Math.sin(rad);\n    const y = radius * Math.cos(rad);\n\n    return {'x':x, 'y':y};\n  }\n\n}\n\n\n\u30c7\u30e2\uff1ahttps://mo49.github.io/qiita/20160908/menu.html\n\uff08\u30af\u30ea\u30c3\u30af\u3067\u8868\u793a\uff09\n\n```javascript:\u30e1\u30cb\u30e5\u30fc\u3092\u4f5c\u308b\nconst imageFiles = [\n  \"nav_camera.png\",\n  \"nav_phone.png\",\n  \"nav_mail.png\",\n  \"nav_settings.png\"\n];\n\nthis.menu1 = this.createMenu(imageFiles, 10);\n```\n\n\n```javascript:\u30e1\u30cb\u30e5\u30fc\u3092\u8868\u793a\u3059\u308b\nthis.showMenu(this.menu1,0,0,0,50,10); // menu, offsetX, offsetY, offsetZ, radius, space\n```\n\n\u5168\u4f53\u306f\u3053\u3093\u306a\u611f\u3058\n\n```javascript\ncreateMenu (imageFiles, diameter) {\n  this.menus = [];\n\n  for (let [i, src] of imageFiles.entries()) {\n    const geom = new THREE.PlaneGeometry(diameter,diameter,20);\n    const plane = this.createMesh(geom, src);\n    plane.visible = false; // \u4e00\u65e6\u975e\u8868\u793a\n    this.scene.add(plane);\n    this.menus.push(plane);\n  }\n\n  return this.menus;\n}\n\ncreateMesh (geom, imageFile) {\n  const PATH = './img/texture/';\n  const textureLoader = new THREE.TextureLoader();\n  const texture = textureLoader.load(PATH + imageFile);\n  const mat = new THREE.MeshBasicMaterial({transparent:true});\n  mat.map = texture;\n\n  const mesh = new THREE.Mesh(geom, mat);\n  return mesh;\n}\n\nshowMenu(menus, offsetX, offsetY, offsetZ, radius, space) {\n\n  const that = this;\n  let degree = 0;\n  let loopId;\n\n  update();\n  function update() {\n    loopId = requestAnimationFrame(update);\n    for (let [i, menu] of menus.entries()) {\n      menu.visible = true; // \u8868\u793a\n      if (degree > i*space) {\n        continue;\n      }\n      const pos = move(radius, i+1); // radius, index\n      menu.position.set(pos['x'] + offsetX, pos['y'] + offsetY,  offsetZ);\n    }\n    degree++;\n    if (degree > menus.length * space) {\n      stop();\n    }\n  }\n\n  function stop() {\n    cancelAnimationFrame(loopId);\n    console.log(\"stop\");\n  }\n\n  function move (radius, index) {\n    // speed = speed || 1.0;\n    const rad = (degree * Math.PI / 180) * 2;\n    const x = radius * Math.sin(rad);\n    const y = radius * Math.cos(rad);\n\n    return {'x':x, 'y':y};\n  }\n\n}\n```\n", "tags": ["three.js", "JavaScript", "es6"]}