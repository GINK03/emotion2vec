{"context": " More than 1 year has passed since last update.TouchDispatcher\u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u4ee3\u308f\u308a\u306bEventListener\u3068\u3044\u3046\u3082\u306e\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u305f\u3089\u52d5\u304d\u307e\u3057\u305f\u3002\n\nCCScrollLayer.h\nclass CCScrollLayer : public Layer\n{\nprotected:\n\n    EventListenerTouch *m_listener;\n\n\n\nCCScrollLayer.cpp\nbool CCScrollLayer::initWithLayers(Array *layers, int widthOffset)\n{   \n    if (Layer::init())\n    {       \n        // Make sure the layer accepts touches\n//      Director::getInstance()->getTouchDispatcher()->addTargetedDelegate(this,0,true);\n        m_listener = EventListenerTouch::create(Touch::DispatchMode::ONE_BY_ONE);\n        m_listener->onTouchBegan = CC_CALLBACK_2(CCScrollLayer::onTouchBegan, this);\n        m_listener->onTouchMoved = CC_CALLBACK_2(CCScrollLayer::onTouchMoved, this);\n        m_listener->onTouchEnded = CC_CALLBACK_2(CCScrollLayer::onTouchEnded, this);\n        m_listener->onTouchCancelled = CC_CALLBACK_2(CCScrollLayer::onTouchCancelled, this);\n        EventDispatcher::getInstance()->addEventListenerWithSceneGraphPriority(m_listener, this);\n\n(\u7565)\n}\n\nvoid CCScrollLayer::onExit()\n{\n//  Director::getInstance()->getTouchDispatcher()->removeDelegate(this);\n    EventDispatcher::getInstance()->removeEventListener(m_listener);\n    Layer::onExit();\n}\n\n\n\u307e\u305f\u306f\u3001\u3053\u3061\u3089\u306e\u65b9\u6cd5\u3067\u3082\u52d5\u304f\u3088\u3046\u3067\u3059\u3002\nLayer\u306e\u5834\u5408\u3060\u3051\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u7c21\u5358\u3067\u3044\u3044\u3067\u3059\u306d\u3002\n\nCCScrollLayer.cpp\nbool CCScrollLayer::initWithLayers(Array *layers, int widthOffset)\n{   \n    if (Layer::init())\n    {       \n        // Make sure the layer accepts touches\n//      Director::getInstance()->getTouchDispatcher()->addTargetedDelegate(this,0,true);\n        setTouchEnabled(true);\n        setTouchMode(Touch::DispatchMode::ONE_BY_ONE);\n\n\nTouchDispatcher\u304c\u4f7f\u3048\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3001\u4ee3\u308f\u308a\u306bEventListener\u3068\u3044\u3046\u3082\u306e\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u305f\u3089\u52d5\u304d\u307e\u3057\u305f\u3002\n\n```c++:CCScrollLayer.h\nclass CCScrollLayer : public Layer\n{\nprotected:\n    \n    EventListenerTouch *m_listener;\n```\n\n```c++:CCScrollLayer.cpp\nbool CCScrollLayer::initWithLayers(Array *layers, int widthOffset)\n{\t\n\tif (Layer::init())\n\t{\t\t\n\t\t// Make sure the layer accepts touches\n//\t\tDirector::getInstance()->getTouchDispatcher()->addTargetedDelegate(this,0,true);\n        m_listener = EventListenerTouch::create(Touch::DispatchMode::ONE_BY_ONE);\n        m_listener->onTouchBegan = CC_CALLBACK_2(CCScrollLayer::onTouchBegan, this);\n        m_listener->onTouchMoved = CC_CALLBACK_2(CCScrollLayer::onTouchMoved, this);\n        m_listener->onTouchEnded = CC_CALLBACK_2(CCScrollLayer::onTouchEnded, this);\n        m_listener->onTouchCancelled = CC_CALLBACK_2(CCScrollLayer::onTouchCancelled, this);\n        EventDispatcher::getInstance()->addEventListenerWithSceneGraphPriority(m_listener, this);\n\n(\u7565)\n}\n\nvoid CCScrollLayer::onExit()\n{\n//\tDirector::getInstance()->getTouchDispatcher()->removeDelegate(this);\n    EventDispatcher::getInstance()->removeEventListener(m_listener);\n\tLayer::onExit();\n}\n```\n\n\u307e\u305f\u306f\u3001\u3053\u3061\u3089\u306e\u65b9\u6cd5\u3067\u3082\u52d5\u304f\u3088\u3046\u3067\u3059\u3002\nLayer\u306e\u5834\u5408\u3060\u3051\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u3001\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u7c21\u5358\u3067\u3044\u3044\u3067\u3059\u306d\u3002\n\n```c++:CCScrollLayer.cpp\nbool CCScrollLayer::initWithLayers(Array *layers, int widthOffset)\n{\t\n\tif (Layer::init())\n\t{\t\t\n\t\t// Make sure the layer accepts touches\n//\t\tDirector::getInstance()->getTouchDispatcher()->addTargetedDelegate(this,0,true);\n        setTouchEnabled(true);\n        setTouchMode(Touch::DispatchMode::ONE_BY_ONE);\n```\n", "tags": ["cocos2d-x"]}