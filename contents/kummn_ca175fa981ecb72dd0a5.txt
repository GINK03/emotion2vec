{"context": "\n\nDigispark\nDigispark\u306fUSB\u306b\u76f4\u63a5\u633f\u305b\u308b\u30de\u30a4\u30b3\u30f3(ATTiny85). \u30bd\u30d5\u30c8\u3067USB\u5236\u5fa1.\nkeyboard\u3084mouse\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u306a\u3069\u5f97\u610f\n* digiStump : Digispark Development board\n* Digispark - The tiny, Arduino enabled, usb dev board!\n* (\u53c2\u8003) \u5b89\u4fa1\u306aUSB\u76f4\u633f\u3057\u30de\u30a4\u30b3\u30f3Digispark\u306e\u30b9\u30b9\u30e1\n\n\u8cfc\u5165\n\n\nHiLetgo Digispark Kickstarter ATTINY85 Digispark \u8d85\u5c0f\u578bArduino\u4e92\u63db (183\u5186)\n\n\u4e00\u5fdc\u3001\u3061\u3083\u3093\u3068\u4f7f\u3048\u3066\u307e\u3059\u304c\u3001\u30af\u30ed\u30fc\u30f3\u3060\u3068P5\u304c\u30ea\u30bb\u30c3\u30c8\u30d4\u30f3\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u3053\u3060\u3051\u8981\u6ce8\u610f\u3067\u3059\u3002\nDigispark\u306eQ&A\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u306f\u3001\u30af\u30ed\u30fc\u30f3\u3067\u306fP5\u304cI/O\u306b\u4f7f\u3048\u305a\u30ea\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6709\u308b\u3068\u66f8\u304b\u308c\u3066\u307e\u3057\u305f\u3002\n\n\nrev.3 \u3068\u3044\u3046\u306e\u306fclone?!\n\n\n\u8a2d\u5b9a\nhttp://homemadegarbage.0t0.jp/digispark-1\nhttp://digistump.com/wiki/digispark/tutorials/connecting\n\nhost\u5074\u306b\u30c9\u30e9\u30a4\u30d0(\u3068\u3044\u3046\u304blibusb)\u3092install \nhttps://github.com/digistump/DigistumpArduino/releases/download/1.6.7/DigistumpDrivers.zip\n\nArduinoIDE\u306bboard\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b (http://digistump.com/package_digistump_index.json)\n\n\nDigistump AVR Boards\nDigispark (Default \u2013 16.5mhz)\n\n\n\n\nDigispark\u3078\u306e\u66f8\u304d\u8fbc\u307f\n\nDigispark\u306b\u306f\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u304c\u306a\u3044\u305f\u3081\u3001\u66f8\u8fbc\u307f\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u5f8c\u201dPlug in device now\u2026\u201d\u3068\u8868\u8a18\u3055\u308c\u3066\u304b\u3089Digispark\u3092USB\u30dd\u30fc\u30c8\u306b\u5dee\u3057\u8fbc\u3080\u3002\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u66f8\u304d\u8fbc\u307f\u304c\u958b\u59cb\u3059\u308b\u3002\n\u3044\u3061\u3044\u3061\u629c\u304d\u5dee\u3057\u9762\u5012\u306a\u306e\u3067\u30c0\u30a4\u30bd\u30fc\u306e\u30b9\u30a4\u30c3\u30c1\u4ed8\u304dUSB\u30b3\u30cd\u30af\u30bf\u3084\u5ef6\u9577\u30b3\u30fc\u30c9\u304c\u3042\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n\nHUB\u7d4c\u7531\u3060\u3068\u66f8\u304d\u8fbc\u307f\u3046\u307e\u304f\u52d5\u4f5c\u305b\u305a\uff0ePC\u76f4\u7d50\u3067\u3046\u307e\u304f\u66f8\u304d\u8fbc\u3081\u305f\uff0e\nArduinoIDE\u306a\u3057\u3067\u5358\u4f53\u3067\u3064\u306a\u3044\u3067\u3082\u8a8d\u8b58\u7e70\u308a\u8fd4\u3059\u3060\u3051\u3067\u6b63\u89e3\n\u30b7\u30ea\u30a2\u30ebport\u306f\u5272\u308a\u5f53\u3066\u3055\u308c\u306a\u3044\u305f\u3081\u672a\u8a2d\u5b9a\u3067\u3088\u3044\uff0e\n\n\n\u8a73\u7d30\nDifferences (from the Arduino) and limitations\nhttp://digistump.com/wiki/digispark/quickref\nPin outs:\nAll pins can be used as Digital I/O\nPin 0 \u2192 I2C SDA, PWM (LED on Model B)\nPin 1 \u2192 PWM (LED on Model A)     \u2605 \u624b\u5143\u306eDigispark\u306fModel A\nPin 2 \u2192 I2C SCK, Analog In\nPin 3 \u2192 Analog In (also used for USB+ when USB is in use)\nPin 4 \u2192 PWM, Analog (also used for USB- when USB is in use)\nPin 5 \u2192 Analog In\nMany existing libraries will not work with the Digispark: For I2C devices check out the TinyWireM library, which makes it super simple to port an I2C based device library over to use with the Digispark.\n\nsample\n#include \"DigiKeyboard.h\"\n\nvoid setup() {\n  // don't need to set anything up to use DigiKeyboard\n  pinMode(1  , OUTPUT);\n}\n\n\nvoid loop() {\n  // this is generally not necessary but with some older systems it seems to\n  // prevent missing the first character after a delay:\n  DigiKeyboard.sendKeyStroke(0);\n\n  // Type out this string letter by letter on the computer (assumes US-style\n  // keyboard)\n  digitalWrite(1, HIGH);  \n  DigiKeyboard.println(\"ryu!\");\n\n  DigiKeyboard.delay(500);\n  digitalWrite(1, LOW);  \n\n  // It's better to use DigiKeyboard.delay() over the regular Arduino delay()\n  // if doing keyboard stuff because it keeps talking to the computer to make\n  // sure the computer knows the keyboard is alive and connected\n  DigiKeyboard.delay(5000);\n}\n\n\n\n# Digispark\n\nDigispark\u306fUSB\u306b\u76f4\u63a5\u633f\u305b\u308b\u30de\u30a4\u30b3\u30f3(ATTiny85). \u30bd\u30d5\u30c8\u3067USB\u5236\u5fa1.\nkeyboard\u3084mouse\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u306a\u3069\u5f97\u610f\n* [digiStump : Digispark Development board](http://digistump.com/products/1)\n* [Digispark - The tiny, Arduino enabled, usb dev board!](https://www.kickstarter.com/projects/digistump/digispark-the-tiny-arduino-enabled-usb-dev-board/description)\n* (\u53c2\u8003) [\u5b89\u4fa1\u306aUSB\u76f4\u633f\u3057\u30de\u30a4\u30b3\u30f3Digispark\u306e\u30b9\u30b9\u30e1](http://qiita.com/erukiti/items/74a848489ec102841b66)\n\n# \u8cfc\u5165\n\n* [HiLetgo Digispark Kickstarter ATTINY85 Digispark \u8d85\u5c0f\u578bArduino\u4e92\u63db](https://www.amazon.co.jp/gp/product/B00VM5M4W4/ref=od_aui_detailpages00?ie=UTF8&psc=1) (183\u5186)\n>\u4e00\u5fdc\u3001\u3061\u3083\u3093\u3068\u4f7f\u3048\u3066\u307e\u3059\u304c\u3001\u30af\u30ed\u30fc\u30f3\u3060\u3068P5\u304c\u30ea\u30bb\u30c3\u30c8\u30d4\u30f3\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u3053\u3060\u3051\u8981\u6ce8\u610f\u3067\u3059\u3002\nDigispark\u306eQ&A\u30d5\u30a9\u30fc\u30e9\u30e0\u3067\u306f\u3001\u30af\u30ed\u30fc\u30f3\u3067\u306fP5\u304cI/O\u306b\u4f7f\u3048\u305a\u30ea\u30bb\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u6709\u308b\u3068\u66f8\u304b\u308c\u3066\u307e\u3057\u305f\u3002\n\n* rev.3 \u3068\u3044\u3046\u306e\u306fclone?!\n\n# \u8a2d\u5b9a\n\nhttp://homemadegarbage.0t0.jp/digispark-1\nhttp://digistump.com/wiki/digispark/tutorials/connecting\n\n* host\u5074\u306b\u30c9\u30e9\u30a4\u30d0(\u3068\u3044\u3046\u304blibusb)\u3092install \nhttps://github.com/digistump/DigistumpArduino/releases/download/1.6.7/DigistumpDrivers.zip\n* ArduinoIDE\u306bboard\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b (http://digistump.com/package_digistump_index.json)\n  * Digistump AVR Boards\n  * Digispark (Default \u2013 16.5mhz)\n\n# Digispark\u3078\u306e\u66f8\u304d\u8fbc\u307f\n\n>Digispark\u306b\u306f\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u304c\u306a\u3044\u305f\u3081\u3001\u66f8\u8fbc\u307f\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u5f8c\u201dPlug in device now\u2026\u201d\u3068\u8868\u8a18\u3055\u308c\u3066\u304b\u3089Digispark\u3092USB\u30dd\u30fc\u30c8\u306b\u5dee\u3057\u8fbc\u3080\u3002\u554f\u984c\u304c\u306a\u3051\u308c\u3070\u66f8\u304d\u8fbc\u307f\u304c\u958b\u59cb\u3059\u308b\u3002\n\u3044\u3061\u3044\u3061\u629c\u304d\u5dee\u3057\u9762\u5012\u306a\u306e\u3067\u30c0\u30a4\u30bd\u30fc\u306e\u30b9\u30a4\u30c3\u30c1\u4ed8\u304dUSB\u30b3\u30cd\u30af\u30bf\u3084\u5ef6\u9577\u30b3\u30fc\u30c9\u304c\u3042\u308b\u3068\u4fbf\u5229\u3067\u3059\u3002\n\n* HUB\u7d4c\u7531\u3060\u3068\u66f8\u304d\u8fbc\u307f\u3046\u307e\u304f\u52d5\u4f5c\u305b\u305a\uff0ePC\u76f4\u7d50\u3067\u3046\u307e\u304f\u66f8\u304d\u8fbc\u3081\u305f\uff0e\n* ArduinoIDE\u306a\u3057\u3067\u5358\u4f53\u3067\u3064\u306a\u3044\u3067\u3082\u8a8d\u8b58\u7e70\u308a\u8fd4\u3059\u3060\u3051\u3067\u6b63\u89e3\n* \u30b7\u30ea\u30a2\u30ebport\u306f\u5272\u308a\u5f53\u3066\u3055\u308c\u306a\u3044\u305f\u3081\u672a\u8a2d\u5b9a\u3067\u3088\u3044\uff0e\n\n# \u8a73\u7d30\n\n[Differences (from the Arduino) and limitations](https://digistump.com/wiki/digispark/tutorials/basics)\nhttp://digistump.com/wiki/digispark/quickref\n\nPin outs:\n\nAll pins can be used as Digital I/O\nPin 0 \u2192 I2C SDA, PWM (LED on Model B)\nPin 1 \u2192 PWM (LED on Model A)     \u2605 \u624b\u5143\u306eDigispark\u306fModel A\nPin 2 \u2192 I2C SCK, Analog In\nPin 3 \u2192 Analog In (also used for USB+ when USB is in use)\nPin 4 \u2192 PWM, Analog (also used for USB- when USB is in use)\nPin 5 \u2192 Analog In\n\nMany existing libraries will not work with the Digispark: For I2C devices check out the TinyWireM library, which makes it super simple to port an I2C based device library over to use with the Digispark.\n\n# sample\n\n```\n#include \"DigiKeyboard.h\"\n\nvoid setup() {\n  // don't need to set anything up to use DigiKeyboard\n  pinMode(1  , OUTPUT);\n}\n\n\nvoid loop() {\n  // this is generally not necessary but with some older systems it seems to\n  // prevent missing the first character after a delay:\n  DigiKeyboard.sendKeyStroke(0);\n\n  // Type out this string letter by letter on the computer (assumes US-style\n  // keyboard)\n  digitalWrite(1, HIGH);  \n  DigiKeyboard.println(\"ryu!\");\n\n  DigiKeyboard.delay(500);\n  digitalWrite(1, LOW);  \n  \n  // It's better to use DigiKeyboard.delay() over the regular Arduino delay()\n  // if doing keyboard stuff because it keeps talking to the computer to make\n  // sure the computer knows the keyboard is alive and connected\n  DigiKeyboard.delay(5000);\n}\n```\n\n", "tags": ["\u96fb\u5b50\u5de5\u4f5c"]}