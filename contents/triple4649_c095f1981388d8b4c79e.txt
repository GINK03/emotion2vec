{"context": "\n\n\u59cb\u3081\u306b\nF#\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u5165\u51fa\u529b\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\u3064\u3044\u3067\u306byahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u304b\u3089URL\u3092\u62bd\u51fa\u3059\u308b\u51e6\u7406\u3082\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\n\u30b3\u30fc\u30c9\nmodule File3\n\nopen System.IO;\nopen System.Text;\n\n//\u4e00\u6587\u5b57\u5358\u4f4d\u306e\u89e3\u6790\u3092\u884c\u3046\n//\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u3092\u629c\u304d\u51fa\u3059\nlet rec parseStr1 strs hasDoubleQuaote =\n    match strs with\n    |x::xs -> match x with\n              //\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u305f\u3068\u304d\u306e\u51e6\u7406\n              |'\"' -> match hasDoubleQuaote with\n                      //\u3059\u3067\u306b\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u307e\u3067\u304c\u5207\u308a\u51fa\u3057\u5bfe\u8c61\n                      |true -> '|' :: parseStr1 xs false\n                      //\u307e\u3060\u306b\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u304b\u3089\u304c\u5207\u308a\u51fa\u3057\u5bfe\u8c61\n                      |false -> parseStr1 xs true\n              //\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u4ee5\u5916\u306e\u6587\u5b57\u304c\u30de\u30c3\u30c1\u3057\u305f\u3089\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3059\u3067\u306b\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\n              //\u6587\u5b57\u306e\u5207\u308a\u51fa\u3057\u3092\u884c\u3046\n              |_   -> match hasDoubleQuaote with\n                      |true  -> x::(parseStr1 xs hasDoubleQuaote)\n                      |false -> parseStr1 xs hasDoubleQuaote\n    |[]->[]\nlet parseStr strs = parseStr1 strs false\n\n//\u4e00\u884c\u5358\u4f4d\u306e\u89e3\u6790\u3092\u884c\u3046\n//\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u30891\u884c\u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u307e\u3059\nlet analyzeText (str:string) f = \n    let ff1 = str.ToCharArray(0,str.Length) |>  //\u6587\u5b57\u5217\u3092\u6587\u5b57\u578b\u306e\u914d\u5217\u306b\u3059\u308b\n              Array.toList                  |>  //\u914d\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n              f                             |>  //\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n              List.toSeq                    |>  //\u5b9f\u884c\u7d50\u679c\u3092\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u5909\u63db\u3059\u308b\n              Seq.map string                |>  //\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6587\u5b57\u5217\u578b\u306b\u5909\u63db\u3059\u308b\n              String.concat \"\" ;                //\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u3092\u9023\u7d50\u3059\u308b\n    let  n = ff1.IndexOf(\"http:\");\n    let f3 = match n > 0 with\n             |true  -> ff1.Substring(n) + \"\\n\"\n             |false -> null\n    f3\n\n//\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306e\u5185\u5bb9\u3092\u89e3\u6790\u3059\u308b\nlet rec printParsedStr series = \n    match series with\n    |(x:string)::xs -> match x.IndexOf(\"http\")>0 with\n                       |true  -> analyzeText x parseStr +  printParsedStr xs\n                       |false -> printParsedStr xs\n    |[] -> \"\"\n\n//yahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u306ehtml\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u305d\u3053\u306b\u542b\u307e\u308c\u308burl\u3092\u62bd\u51fa\u3059\u308b\nlet inputPath = @\"C:\\test\\yahoo.txt\" //yahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u306ehtml\u30bd\u30fc\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\nlet outputPath= @\"C:\\test\\result.txt\" //\u62bd\u51fa\u7d50\u679c\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\nFile.WriteAllText(\n    outputPath, \n    Seq.toList (File.ReadLines(inputPath)) |> printParsedStr  //A\n) \n\n#\u59cb\u3081\u306b\nF#\u3067\u306e\u30d5\u30a1\u30a4\u30eb\u5165\u51fa\u529b\u51e6\u7406\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\u3064\u3044\u3067\u306byahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u304b\u3089URL\u3092\u62bd\u51fa\u3059\u308b\u51e6\u7406\u3082\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\n\n#\u30b3\u30fc\u30c9\n```fsharp\nmodule File3\n\nopen System.IO;\nopen System.Text;\n\n//\u4e00\u6587\u5b57\u5358\u4f4d\u306e\u89e3\u6790\u3092\u884c\u3046\n//\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u6587\u5b57\u5217\u3092\u629c\u304d\u51fa\u3059\nlet rec parseStr1 strs hasDoubleQuaote =\n    match strs with\n    |x::xs -> match x with\n              //\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u305f\u3068\u304d\u306e\u51e6\u7406\n              |'\"' -> match hasDoubleQuaote with\n                      //\u3059\u3067\u306b\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u307e\u3067\u304c\u5207\u308a\u51fa\u3057\u5bfe\u8c61\n                      |true -> '|' :: parseStr1 xs false\n                      //\u307e\u3060\u306b\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u898b\u3064\u304b\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u3053\u3053\u304b\u3089\u304c\u5207\u308a\u51fa\u3057\u5bfe\u8c61\n                      |false -> parseStr1 xs true\n              //\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u4ee5\u5916\u306e\u6587\u5b57\u304c\u30de\u30c3\u30c1\u3057\u305f\u3089\u3001\u30c0\u30d6\u30eb\u30af\u30aa\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u3059\u3067\u306b\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u5834\u5408\u306e\u307f\u3001\n              //\u6587\u5b57\u306e\u5207\u308a\u51fa\u3057\u3092\u884c\u3046\n              |_   -> match hasDoubleQuaote with\n                      |true  -> x::(parseStr1 xs hasDoubleQuaote)\n                      |false -> parseStr1 xs hasDoubleQuaote\n    |[]->[]\nlet parseStr strs = parseStr1 strs false\n\n//\u4e00\u884c\u5358\u4f4d\u306e\u89e3\u6790\u3092\u884c\u3046\n//\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u304b\u30891\u884c\u8aad\u307f\u8fbc\u3093\u3060\u6587\u5b57\u5217\u3092\u89e3\u6790\u3057\u307e\u3059\nlet analyzeText (str:string) f = \n    let ff1 = str.ToCharArray(0,str.Length) |>  //\u6587\u5b57\u5217\u3092\u6587\u5b57\u578b\u306e\u914d\u5217\u306b\u3059\u308b\n              Array.toList                  |>  //\u914d\u5217\u3092\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n              f                             |>  //\u5f15\u6570\u3067\u6e21\u3055\u308c\u305f\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\n              List.toSeq                    |>  //\u5b9f\u884c\u7d50\u679c\u3092\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u5909\u63db\u3059\u308b\n              Seq.map string                |>  //\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u6587\u5b57\u5217\u578b\u306b\u5909\u63db\u3059\u308b\n              String.concat \"\" ;                //\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u5217\u3092\u9023\u7d50\u3059\u308b\n    let  n = ff1.IndexOf(\"http:\");\n    let f3 = match n > 0 with\n             |true  -> ff1.Substring(n) + \"\\n\"\n             |false -> null\n    f3\n\n//\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u5168\u4f53\u306e\u5185\u5bb9\u3092\u89e3\u6790\u3059\u308b\nlet rec printParsedStr series = \n    match series with\n    |(x:string)::xs -> match x.IndexOf(\"http\")>0 with\n                       |true  -> analyzeText x parseStr +  printParsedStr xs\n                       |false -> printParsedStr xs\n    |[] -> \"\"\n\n//yahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u306ehtml\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u3001\u305d\u3053\u306b\u542b\u307e\u308c\u308burl\u3092\u62bd\u51fa\u3059\u308b\nlet inputPath = @\"C:\\test\\yahoo.txt\" //yahoo\u30d5\u30a1\u30a4\u30ca\u30f3\u30b9\u306ehtml\u30bd\u30fc\u30b9\u304c\u542b\u307e\u308c\u3066\u3044\u308b\nlet outputPath= @\"C:\\test\\result.txt\" //\u62bd\u51fa\u7d50\u679c\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\nFile.WriteAllText(\n    outputPath, \n    Seq.toList (File.ReadLines(inputPath)) |> printParsedStr  //A\n) \n```\n", "tags": ["F#", "\u95a2\u6570\u578b\u8a00\u8a9e"]}