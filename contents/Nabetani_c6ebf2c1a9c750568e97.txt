{"tags": ["\u3069\u3046\u66f8\u304f", "Ruby2.0.0", "yhpg"], "context": " More than 1 year has passed since last update.\u30a4\u30d9\u30f3\u30c8 : http://atnd.org/events/38678\n\u554f\u984c : http://nabetani.sakura.ne.jp/hena/ord10pokarest/\n\u89e3\u7b54\u30ea\u30f3\u30af\u96c6 : http://qiita.com/items/d819d1e5f2378317511e\n\nord10pokarest.rb\n#coding:utf-8\n\ndef rank(s)\n  { \"J\"=>11, \"Q\"=>12, \"K\"=>13, \"A\"=>1 }[s] || s.to_i\nend\n\ndef flash?( hand )\n  hand.all?{ |c| c[1]==hand.first[1] }\nend\n\ndef straight?( hand )\n  r=hand.map{ |c| c[0] }.sort\n  r==(r.first .. r.last).to_a || r==[1]+(r[1]..13).to_a\nend\n\ndef roy?( hand )\n  hand.map{ |c| c[0] }.sort==[1,10,11,12,13]\nend\n\ndef score( hand )\n  { flash?:4, straight?:2, roy?:1 }.map{ |k,v|\n    send(k,hand) ? v : 0\n  }.inject(&:+)\nend\n\ndef solve( src )\n  hand = src.scan(/(([^shdc]+)([shdc]))/).map{ |m| [ rank(m[1]), m[2] ] }\n  { 7=>\"RF\", 6=>\"SF\", 4=>\"FL\", 3=>\"ST\", 2=>\"ST\" }[score(hand)] || (\n    fours=hand.combination(4)\n    { 6=>\"4SF\", 4=>\"4F\", 2=>\"4S\" }[ fours.map{ |four| score(four) }.max ]\n  ) || \"-\"\nend\n\nDATA.each do |line|\n  num, input, expected = line.split( /\\s+/ )\n  actual = solve( input )\n  ok = actual==expected\n  puts( \"%s : %s->%s ( %s )\" % [ (ok ? \"ok\" : \"***NG***\"), input, actual, expected ] )\nend\n\n__END__\n0   Qs9s3dJd10h 4S\n1   KdAdJd10dQd RF\n52  10dKdQdAdJd RF\n\n\n\u4eca\u56de\u306f rspec \u3067\u306f\u306a\u304f\u3001\u30b3\u30fc\u30c9\u5185\u306b\u30c6\u30b9\u30c8\u3092\u57cb\u3081\u305f\u3002\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u3082\u5f79\u306b\u7acb\u3064 combination\u3002\u3042\u308a\u304c\u305f\u3044\u3002\n|| \u3068 Hash \u3092\u4e71\u7528\u6c17\u5473\u306b\u4f7f\u3063\u3066\u697d\u3092\u3057\u3066\u307f\u305f\u3002\nscore \u306e\u8a08\u7b97\u3067 send \u3092\u3057\u3066\u3044\u308b\u304c\u3001if \u6587\u304b ?: \u3092\u4e09\u500b\u66f8\u3044\u305f\u307b\u3046\u304c\u7d20\u76f4\u3060\u3068\u601d\u3046\u3002\nruby 1.9 \u3084 1.8 \u3067\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\u3002\n\u30a4\u30d9\u30f3\u30c8 : http://atnd.org/events/38678\n\u554f\u984c : http://nabetani.sakura.ne.jp/hena/ord10pokarest/\n\u89e3\u7b54\u30ea\u30f3\u30af\u96c6 : http://qiita.com/items/d819d1e5f2378317511e\n\n```ruby:ord10pokarest.rb\n#coding:utf-8\n\ndef rank(s)\n  { \"J\"=>11, \"Q\"=>12, \"K\"=>13, \"A\"=>1 }[s] || s.to_i\nend\n\ndef flash?( hand )\n  hand.all?{ |c| c[1]==hand.first[1] }\nend\n\ndef straight?( hand )\n  r=hand.map{ |c| c[0] }.sort\n  r==(r.first .. r.last).to_a || r==[1]+(r[1]..13).to_a\nend\n\ndef roy?( hand )\n  hand.map{ |c| c[0] }.sort==[1,10,11,12,13]\nend\n\ndef score( hand )\n  { flash?:4, straight?:2, roy?:1 }.map{ |k,v|\n    send(k,hand) ? v : 0\n  }.inject(&:+)\nend\n\ndef solve( src )\n  hand = src.scan(/(([^shdc]+)([shdc]))/).map{ |m| [ rank(m[1]), m[2] ] }\n  { 7=>\"RF\", 6=>\"SF\", 4=>\"FL\", 3=>\"ST\", 2=>\"ST\" }[score(hand)] || (\n    fours=hand.combination(4)\n    { 6=>\"4SF\", 4=>\"4F\", 2=>\"4S\" }[ fours.map{ |four| score(four) }.max ]\n  ) || \"-\"\nend\n\nDATA.each do |line|\n  num, input, expected = line.split( /\\s+/ )\n  actual = solve( input )\n  ok = actual==expected\n  puts( \"%s : %s->%s ( %s )\" % [ (ok ? \"ok\" : \"***NG***\"), input, actual, expected ] )\nend\n\n__END__\n0   Qs9s3dJd10h 4S\n1   KdAdJd10dQd RF\n52  10dKdQdAdJd RF\n```\n\n\u4eca\u56de\u306f rspec \u3067\u306f\u306a\u304f\u3001\u30b3\u30fc\u30c9\u5185\u306b\u30c6\u30b9\u30c8\u3092\u57cb\u3081\u305f\u3002\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u5927\u534a\u306f\u7701\u7565\u3002\n\n\u3053\u3093\u306a\u3068\u3053\u308d\u3067\u3082\u5f79\u306b\u7acb\u3064 `combination`\u3002\u3042\u308a\u304c\u305f\u3044\u3002\n\n`||` \u3068 Hash \u3092\u4e71\u7528\u6c17\u5473\u306b\u4f7f\u3063\u3066\u697d\u3092\u3057\u3066\u307f\u305f\u3002\n\nscore \u306e\u8a08\u7b97\u3067 send \u3092\u3057\u3066\u3044\u308b\u304c\u3001if \u6587\u304b ?: \u3092\u4e09\u500b\u66f8\u3044\u305f\u307b\u3046\u304c\u7d20\u76f4\u3060\u3068\u601d\u3046\u3002\n\nruby 1.9 \u3084 1.8 \u3067\u306f\u8a66\u3057\u3066\u3044\u306a\u3044\u3002"}