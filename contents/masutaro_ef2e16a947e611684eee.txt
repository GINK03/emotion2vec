{"tags": ["Python", "Django"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002Django\u306e\u7ba1\u7406\u30b5\u30a4\u30c8\u306b\u3066\u300c\u4e00\u89a7\u753b\u9762\u306b\u753b\u50cf\u304c\u8868\u793a\u3067\u304d\u305f\u3089\u3001\u4f5c\u696d\u52b9\u7387\u304c\u3044\u3044\u306e\u306b\u306a\u300d\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8abf\u3079\u305f\u3068\u3053\u308d\u3068\u3066\u3082\u7c21\u5358\u306b\u3067\u304d\u305f\u306e\u3067Tips\u3068\u3057\u3066\u8a18\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nQiita\u306b\u306f\u3084\u3084\u7c21\u5358\u306a\u60c5\u5831\u3070\u304b\u308a\u307e\u3068\u3081\u3066\u3044\u3066\u5c11\u3057\u6050\u7e2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001Django\u306b\u3064\u3044\u3066\u306fGoogle\u691c\u7d22\u3092\u3057\u3066\u3082Stack Overflow\u3067\u57cb\u3081\u5c3d\u304f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u304f\u65e5\u672c\u8a9e\u3067\u30d2\u30c3\u30c8\u3059\u308b\u60c5\u5831\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3064\u304b\u3082\u3068\u601d\u3044\u6295\u7a3f\u3057\u3066\u3044\u308b\u6b21\u7b2c\u3067\u3059\u3002\n\u306a\u304a\u3001\u672c\u7a3f\u306b\u3064\u3044\u3066\u306f\u52d5\u4f5c\u78ba\u8a8d\u3092Django1.8\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3084\u308a\u305f\u3044\u4e8b\n\n\n\u66f8\u304d\u65b9\n\u62d9\u8457\u306eDjango\u306eAdmin(\u7ba1\u7406\u30b5\u30a4\u30c8)\u3067ManyToManyField\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d\u306e\u65b9\u6cd5\u306e\u7d9a\u304d\u3068\u3057\u3066\u66f8\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001models.py\u306e\u4e2d\u306b\u753b\u50cf\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8fd4\u3059\u4efb\u610f\u306e\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9(admin_og_image)\u3092\u5b9a\u7fa9\u3057\u3066\u3001allow_tags = True\u3068\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\nmodels.py\n@@ -11,9 +11,18 @@ class Article(models.Model):\n     title = models.CharField(max_length=100)\n     author = models.ForeignKey(Author, blank=True, null=True)\n     meta = models.ManyToManyField('Tag')\n-\n+    og_image = models.ImageField(default='')\n+    \n     def __unicode__(self):\n         return self.title\n+    \n+    def admin_og_image(self):\n+        if self.og_image:\n+            return '<img src=\"{}\" style=\"width:100px;height:auto;\">'.format(self.og_image)\n+        else:\n+            return 'no image'\n+        \n+    admin_og_image.allow_tags = True\n\n\u305d\u3057\u3066\u3001admin.py\u306elist_display\u306b\u8a72\u5f53\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u8ffd\u52a0\u3059\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\nadmin.py\n@@ -3,7 +3,7 @@ from django.contrib import admin\n from .models import Author, Article, Tag\n\n class ArticleAdmin(admin.ModelAdmin):\n-    list_display = ('title', 'author', '_meta')\n+    list_display = ('title', 'author', '_meta', 'admin_og_image')\n\n\n\u88dc\u8db3\n\u306a\u304a\u3001admin.py\u306e\u307f\u3067\u5b8c\u7d50\u3059\u308b\u66f8\u304d\u65b9\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3067\u3059\u3002\n\nmodels.py\n@@ -11,9 +11,18 @@ class Article(models.Model):\n     title = models.CharField(max_length=100)\n     author = models.ForeignKey(Author, blank=True, null=True)\n     meta = models.ManyToManyField('Tag')\n-\n+    og_image = models.ImageField(default='')\n+    \n\n\nadmin.py\n@@ -3,11 +3,19 @@ from django.contrib import admin\n from .models import Author, Article, Tag\n\n class ArticleAdmin(admin.ModelAdmin):\n-    list_display = ('title', 'author', '_meta')\n+    list_display = ('title', 'author', '_meta', 'admin_og_image')\n\n     def _meta(self, row):\n         return ','.join([x.name for x in row.meta.all()])\n\n+    def admin_og_image(self, row):\n+        if row.og_image:\n+            return '<img src=\"{}\" style=\"width:100px;height:auto;\">'.format(row.og_image)\n+        else:\n+            return 'no image'\n+        \n+    admin_og_image.allow_tags = True\n+    \n\nDjango\u306e\u7ba1\u7406\u30b5\u30a4\u30c8\u306b\u3066\u300c\u4e00\u89a7\u753b\u9762\u306b\u753b\u50cf\u304c\u8868\u793a\u3067\u304d\u305f\u3089\u3001\u4f5c\u696d\u52b9\u7387\u304c\u3044\u3044\u306e\u306b\u306a\u300d\u3068\u3044\u3046\u3053\u3068\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u8abf\u3079\u305f\u3068\u3053\u308d\u3068\u3066\u3082\u7c21\u5358\u306b\u3067\u304d\u305f\u306e\u3067Tips\u3068\u3057\u3066\u8a18\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nQiita\u306b\u306f\u3084\u3084\u7c21\u5358\u306a\u60c5\u5831\u3070\u304b\u308a\u307e\u3068\u3081\u3066\u3044\u3066\u5c11\u3057\u6050\u7e2e\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001Django\u306b\u3064\u3044\u3066\u306fGoogle\u691c\u7d22\u3092\u3057\u3066\u3082Stack Overflow\u3067\u57cb\u3081\u5c3d\u304f\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u304f\u65e5\u672c\u8a9e\u3067\u30d2\u30c3\u30c8\u3059\u308b\u60c5\u5831\u304c\u5c11\u306a\u3044\u306e\u3067\u3001\u8ab0\u304b\u306e\u5f79\u306b\u7acb\u3064\u304b\u3082\u3068\u601d\u3044\u6295\u7a3f\u3057\u3066\u3044\u308b\u6b21\u7b2c\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u672c\u7a3f\u306b\u3064\u3044\u3066\u306f\u52d5\u4f5c\u78ba\u8a8d\u3092Django1.8\u3067\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u3084\u308a\u305f\u3044\u4e8b\n\n![\u30a4\u30e1\u30fc\u30b8\u56f3](https://qiita-image-store.s3.amazonaws.com/0/27019/18bbaff3-91ef-5b2b-3fc1-8aae93fda3d2.png)\n\n## \u66f8\u304d\u65b9\n\n\u62d9\u8457\u306e[Django\u306eAdmin(\u7ba1\u7406\u30b5\u30a4\u30c8)\u3067ManyToManyField\u3092\u4f7f\u3044\u305f\u3044\u3068\u304d\u306e\u65b9\u6cd5](http://qiita.com/masutaro/items/502b6e92de7d99939741)\u306e\u7d9a\u304d\u3068\u3057\u3066\u66f8\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001models.py\u306e\u4e2d\u306b\u753b\u50cf\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u8fd4\u3059\u4efb\u610f\u306e\u540d\u524d\u306e\u30e1\u30bd\u30c3\u30c9(`admin_og_image`)\u3092\u5b9a\u7fa9\u3057\u3066\u3001`allow_tags = True`\u3068\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\n### models.py\n```diff\n@@ -11,9 +11,18 @@ class Article(models.Model):\n     title = models.CharField(max_length=100)\n     author = models.ForeignKey(Author, blank=True, null=True)\n     meta = models.ManyToManyField('Tag')\n-\n+    og_image = models.ImageField(default='')\n+    \n     def __unicode__(self):\n         return self.title\n+    \n+    def admin_og_image(self):\n+        if self.og_image:\n+            return '<img src=\"{}\" style=\"width:100px;height:auto;\">'.format(self.og_image)\n+        else:\n+            return 'no image'\n+        \n+    admin_og_image.allow_tags = True\n```\n\n\u305d\u3057\u3066\u3001admin.py\u306e`list_display`\u306b\u8a72\u5f53\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u8ffd\u52a0\u3059\u308c\u3070\u5b8c\u4e86\u3067\u3059\u3002\n\n### admin.py\n```diff\n@@ -3,7 +3,7 @@ from django.contrib import admin\n from .models import Author, Article, Tag\n \n class ArticleAdmin(admin.ModelAdmin):\n-    list_display = ('title', 'author', '_meta')\n+    list_display = ('title', 'author', '_meta', 'admin_og_image')\n```\n\n## \u88dc\u8db3\n\n\u306a\u304a\u3001admin.py\u306e\u307f\u3067\u5b8c\u7d50\u3059\u308b\u66f8\u304d\u65b9\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u3084\u308c\u3070OK\u3067\u3059\u3002\n\n### models.py\n```diff\n@@ -11,9 +11,18 @@ class Article(models.Model):\n     title = models.CharField(max_length=100)\n     author = models.ForeignKey(Author, blank=True, null=True)\n     meta = models.ManyToManyField('Tag')\n-\n+    og_image = models.ImageField(default='')\n+    \n```\n\n### admin.py\n```diff\n@@ -3,11 +3,19 @@ from django.contrib import admin\n from .models import Author, Article, Tag\n \n class ArticleAdmin(admin.ModelAdmin):\n-    list_display = ('title', 'author', '_meta')\n+    list_display = ('title', 'author', '_meta', 'admin_og_image')\n \n     def _meta(self, row):\n         return ','.join([x.name for x in row.meta.all()])\n \n+    def admin_og_image(self, row):\n+        if row.og_image:\n+            return '<img src=\"{}\" style=\"width:100px;height:auto;\">'.format(row.og_image)\n+        else:\n+            return 'no image'\n+        \n+    admin_og_image.allow_tags = True\n+    \n```\n"}