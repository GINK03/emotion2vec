{"context": "\u305f\u307e\u305f\u307enulab\u306eTypetalk\u3068\u3044\u3046\u30a2\u30d7\u30ea\u306eAPI( https://developer.nulab-inc.com/ja/docs/typetalk )\u3092\u3044\u3058\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067websocket\u306e\u5b9f\u88c5\u3092\u884c\u3063\u3066\u307f\u305f\u3002\npython\u3067\u3084\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\n\n\u958b\u767a\u74b0\u5883\nMaxOSX 10.10.3\nPython 2.7.9\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npython\u3067\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\npip install websocket-client\n\n\u3092\u5b9f\u884c\u3057\u3066python\u306ewebsocket-client\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\nwebsocket\u306e\u5b9f\u88c5\n\u4eca\u56de\uff0cTypetalk\u3092\u4f7f\u3063\u305f\u305f\u3081type talk\u304b\u3089access token\u3092\u53d6\u5f97\uff0cwebsocketclient\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3053\u308d\u3092\u7d39\u4ecb\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u767b\u9332\u30e6\u30fc\u30b6\u30fc\u306e\u5168\u3066\u306e\u6319\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\uff0c\n\nmain.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport sys\nimport urllib\nimport urllib2\nimport json\nimport string\n\nimport websocket\nimport requests\n\nclass TypeTalkSample:\n    access_token = None\n\n    def __init__(self):\n        # typetalk\u304b\u3089access token\u3092\u53d6\u5f97\u3059\u308b \n        client_id = \"xxxxxxx\"\n        client_secret = \"xxxxxxx\"\n        params = {\n            'client_id': client_id,\n            'client_secret': client_secret,\n            'grant_type': 'client_credentials',\n            'scope': 'topic.read,topic.post',\n        }\n        data = urllib.urlencode(params)\n        res = urllib2.urlopen(urllib2.Request('https://typetalk.in/oauth2/access_token', data))\n\n        # access token\u3092\u4fdd\u6301\u3059\u308b\n        self.access_token = json.load(res)['access_token']\n\n        # websocket\u3092\u5b9a\u7fa9\u3059\u308b\uff0c\u3053\u3053\u3067header\u306bauthorization\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067access token\u3092\u4f7f\u3063\u305fwebsocket\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n        websocket.enableTrace(True)\n        ws = websocket.WebSocketApp(\"wss://typetalk.in/api/v1/streaming\", header=[\"Authorization: Bearer %s\" % self.access_token], on_open=self.on_open, on_message=self.on_message, on_error=self.on_error, on_close=self.on_close)\n\n        # websocket\u3092\u8d77\u52d5\u3059\u308b\u3002Ctrl+C\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n        try:\n            ws.run_forever()\n        except KeyboardInterrupt:\n            ws.close()\n\n    # \u3053\u3053\u3067\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304cwebsocket\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u306a\u308b\u3002\n    # message\u3092\u3046\u3051\u3068\u3063\u305f\u3068\u304d\n    def on_message(self, ws, message):\n        print message\n\n    # \u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u6642\n    def on_error(self, ws, error):\n        print error\n\n    # websocket\u3092\u9589\u3058\u305f\u6642\n    def on_close(self, ws):\n        print 'disconnected streaming server'\n\n    # websocket\u3092\u958b\u3044\u305f\u6642\n    def on_open(self, ws):\n        print 'connected streaming server'\n\n\nif __name__ == \"__main__\":\n    typetalk = TypeTalkSample()\n\n\n\n\u30ea\u30f3\u30af\nTypetalk api (https://developer.nulab-inc.com/ja/docs/typetalk)\n\u305f\u307e\u305f\u307enulab\u306eTypetalk\u3068\u3044\u3046\u30a2\u30d7\u30ea\u306eAPI( https://developer.nulab-inc.com/ja/docs/typetalk )\u3092\u3044\u3058\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067websocket\u306e\u5b9f\u88c5\u3092\u884c\u3063\u3066\u307f\u305f\u3002\npython\u3067\u3084\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\n\n##\u958b\u767a\u74b0\u5883\nMaxOSX 10.10.3\nPython 2.7.9\n\n##\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npython\u3067\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```shell\npip install websocket-client\n```\n\u3092\u5b9f\u884c\u3057\u3066python\u306ewebsocket-client\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n##websocket\u306e\u5b9f\u88c5\n\u4eca\u56de\uff0cTypetalk\u3092\u4f7f\u3063\u305f\u305f\u3081type talk\u304b\u3089access token\u3092\u53d6\u5f97\uff0cwebsocketclient\u3092\u5b9a\u7fa9\u3059\u308b\u3068\u3053\u308d\u3092\u7d39\u4ecb\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u3088\u3063\u3066\u767b\u9332\u30e6\u30fc\u30b6\u30fc\u306e\u5168\u3066\u306e\u6319\u52d5\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\uff0c\n\n```main.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport sys\nimport urllib\nimport urllib2\nimport json\nimport string\n\nimport websocket\nimport requests\n\nclass TypeTalkSample:\n    access_token = None\n\n    def __init__(self):\n    \t# typetalk\u304b\u3089access token\u3092\u53d6\u5f97\u3059\u308b \n        client_id = \"xxxxxxx\"\n        client_secret = \"xxxxxxx\"\n        params = {\n            'client_id': client_id,\n            'client_secret': client_secret,\n            'grant_type': 'client_credentials',\n            'scope': 'topic.read,topic.post',\n        }\n        data = urllib.urlencode(params)\n        res = urllib2.urlopen(urllib2.Request('https://typetalk.in/oauth2/access_token', data))\n        \n        # access token\u3092\u4fdd\u6301\u3059\u308b\n        self.access_token = json.load(res)['access_token']\n\n\t\t# websocket\u3092\u5b9a\u7fa9\u3059\u308b\uff0c\u3053\u3053\u3067header\u306bauthorization\u3092\u767b\u9332\u3059\u308b\u3053\u3068\u3067access token\u3092\u4f7f\u3063\u305fwebsocket\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n        websocket.enableTrace(True)\n        ws = websocket.WebSocketApp(\"wss://typetalk.in/api/v1/streaming\", header=[\"Authorization: Bearer %s\" % self.access_token], on_open=self.on_open, on_message=self.on_message, on_error=self.on_error, on_close=self.on_close)\n        \n        # websocket\u3092\u8d77\u52d5\u3059\u308b\u3002Ctrl+C\u3067\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n        try:\n            ws.run_forever()\n        except KeyboardInterrupt:\n            ws.close()\n\n\t# \u3053\u3053\u3067\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u304cwebsocket\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u306a\u308b\u3002\n\t# message\u3092\u3046\u3051\u3068\u3063\u305f\u3068\u304d\n    def on_message(self, ws, message):\n        print message\n\n\t# \u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u6642\n    def on_error(self, ws, error):\n        print error\n\n\t# websocket\u3092\u9589\u3058\u305f\u6642\n    def on_close(self, ws):\n        print 'disconnected streaming server'\n\n\t# websocket\u3092\u958b\u3044\u305f\u6642\n    def on_open(self, ws):\n        print 'connected streaming server'\n\n\nif __name__ == \"__main__\":\n    typetalk = TypeTalkSample()\n```\n\n## \u30ea\u30f3\u30af\nTypetalk api (https://developer.nulab-inc.com/ja/docs/typetalk)\n\n", "tags": ["Typetalk", "websocket", "Python"]}