{"context": " More than 1 year has passed since last update.\u30a8\u30af\u30bb\u30eb VBA \u306f\u5358\u4f53\u3067\u3044\u308d\u3044\u308d\u306a\u51e6\u7406\u304c\u3067\u304d\u3066\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u304c\u3001\u3088\u308a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u7269\u8db3\u308a\u306a\u304f\u611f\u3058\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067 C# \u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30a8\u30af\u30bb\u30eb\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6e96\u5099\nVisualStudio \u3067 C# \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f ExcelLoader \u3068\u3044\u3046\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u53c2\u7167\u306e\u8ffd\u52a0\n\u4e0b\u56f3\u306e\u3088\u3046\u306b [\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9] => [\u53c2\u7167\u306e\u8ffd\u52a0] \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u5de6\u306e\u30ea\u30b9\u30c8\u3067 [COM] \u3092\u9078\u629e\u3057\u3001\u53f3\u4e0a\u306e\u30a8\u30c7\u30a3\u30c3\u30c8\u30dc\u30c3\u30af\u30b9\u306b \"excel\" \u5165\u529b\u3057\u307e\u3059\u3002\u3059\u308b\u3068 \"Microsoft Excel [***] Object Library\" \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066 [OK] \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u4e38\u3054\u3068\u8f09\u305b\u307e\u3059\u3002\nExcelSheetReader \u30af\u30e9\u30b9\u306e\u4e2d\u304c\u30a8\u30af\u30bb\u30eb\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3067\u3001 Program \u30af\u30e9\u30b9\u306e\u4e2d\u304c ExcelSheetReader \u306e\u4f7f\u7528\u4f8b\u3067\u3059\u3002\u4f7f\u7528\u4f8b\u3068\u8a00\u3063\u3066\u3082 Read \u95a2\u6570\u3092\u547c\u3076\u3060\u3051\u3067\u3059\u304c\u3002\n\nProgram.cs\nusing System.Collections;\nusing System.Runtime.InteropServices;\n\nnamespace ExcelLoader\n{\n    class ExcelSheetReader\n    {\n        /// <summary>\n        /// \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30b7\u30fc\u30c8\u30922\u6b21\u5143\u914d\u5217\u306b\u8aad\u307f\u8fbc\u3080.\n        /// </summary>\n        /// <param name=\"filePath\">\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9</param>\n        /// <param name=\"sheetIndex\">\u30b7\u30fc\u30c8\u306e\u756a\u53f7 (1, 2, 3, ...)</param>\n        /// <param name=\"startRow\">\u6700\u521d\u306e\u884c (>= 1)</param>\n        /// <param name=\"startColmn\">\u6700\u521d\u306e\u5217 (>= 1)</param>\n        /// <param name=\"lastRow\">\u6700\u5f8c\u306e\u884c</param>\n        /// <param name=\"lastColmn\">\u6700\u5f8c\u306e\u5217</param>\n        /// <returns>\u30b7\u30fc\u30c8\u60c5\u5831\u3092\u683c\u7d0d\u3057\u305f2\u6b21\u5143\u6587\u5b57\u914d\u5217. \u305f\u3060\u3057\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306b\u306f null.</returns>\n        public ArrayList Read(string filePath, int sheetIndex,\n                              int startRow, int startColmn,\n                              int lastRow, int lastColmn)\n        {\n            // \u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3092\u958b\u304f\n            if(!Open(filePath)) { return null; }\n\n            Microsoft.Office.Interop.Excel.Worksheet sheet = mWorkBook.Sheets[sheetIndex];\n            sheet.Select();\n\n            var arrOut = new ArrayList();\n\n            for(int r = startRow; r <= lastRow; r++)\n            {\n                // \u4e00\u884c\u8aad\u307f\u8fbc\u3080\n                var row = new ArrayList();\n                for(int c = startColmn; c <= lastColmn; c++)\n                {\n                    var cell = sheet.Cells[r, c];\n\n                    if (cell == null || cell.Value == null) { row.Add(\"\"); }\n\n                    row.Add(cell.Value);\n                }\n\n                arrOut.Add(row);\n            }\n\n            // \u30ef\u30fc\u30af\u30b7\u30fc\u30c8\u3092\u9589\u3058\u308b\n            Marshal.ReleaseComObject(sheet);\n            sheet = null;\n\n            // \u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3068\u30a8\u30af\u30bb\u30eb\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u9589\u3058\u308b\n            Close();\n\n            return arrOut;\n        }\n\n\n        /// <summary>\n        /// \u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3092\u958b\u304f\n        /// </summary>\n        /// <param name=\"filePath\">\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u306e\u30d1\u30b9(\u76f8\u5bfe\u30d1\u30b9\u3067\u3082\u7d76\u5bfe\u30d1\u30b9\u3067\u3082OK)</param>\n        /// <returns>\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u306e\u30aa\u30fc\u30d7\u30f3\u306b\u6210\u529f\u3057\u305f\u3089 true. \u305d\u308c\u4ee5\u5916 false.</returns>\n        protected bool Open(string filePath)\n        {\n            if (!System.IO.File.Exists(filePath))\n            {\n                return false;\n            }\n\n            try {\n                mApp = new Microsoft.Office.Interop.Excel.Application();\n                mApp.Visible = false;\n\n                // filePath \u304c\u76f8\u5bfe\u30d1\u30b9\u306e\u3068\u304d\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u306e\u3067 fullPath \u306b\u5909\u63db\n                string fullPath = System.IO.Path.GetFullPath(filePath);\n                mWorkBook = mApp.Workbooks.Open(fullPath);\n            }\n            catch\n            {\n                Close();\n                return false;\n            }\n\n            return true;\n        }\n\n        /// <summary>\n        /// \u958b\u3044\u3066\u3044\u308b\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3068\u30a8\u30af\u30bb\u30eb\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u9589\u3058\u308b.\n        /// </summary>\n        protected void Close()\n        {\n            if (mWorkBook != null)\n            {\n                mWorkBook.Close();\n                Marshal.ReleaseComObject(mWorkBook);\n                mWorkBook = null;\n            }\n\n            if (mApp != null)\n            {\n                mApp.Quit();\n                Marshal.ReleaseComObject(mApp);\n                mApp = null;\n            }\n        }\n\n        ~ExcelSheetReader()\n        {\n            Close();\n        }\n\n        protected Microsoft.Office.Interop.Excel.Application mApp = null;\n        protected Microsoft.Office.Interop.Excel.Workbook mWorkBook = null;\n    }\n\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var reader = new ExcelSheetReader();\n\n            // 'sample.xlsx' \u306e1\u756a\u30b7\u30fc\u30c8\u306e 1A \u304b\u3089 6C \u307e\u3067\u3092\u8aad\u3080\n            var sheet = reader.Read(@\"sample.xlsx\", 1, 1, 1, 6, 3);\n\n            // \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n            foreach(ArrayList row in sheet)\n            {\n                string s = \"\";\n                foreach (var cell in row) { s += cell + \", \"; }\n                System.Console.WriteLine(s);\n            }\n        }\n    }\n}\n\n\n=== sample.xlsx ===\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u7d50\u679c\n\nconsole\n\u54c1\u756a, \u540d\u524d, \u4fa1\u683c,\n1, \u308a\u3093\u3054, 500,\n2, \u307f\u304b\u3093, 400,\n3, \u6817, 700,\n4, \u3076\u3069\u3046, 1200,\n5, \u6843, 2000,\n\u7d9a\u884c\u3059\u308b\u306b\u306f\u4f55\u304b\u30ad\u30fc\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044 . . .\n\n\n\n\u5909\u66f4\u5c65\u6b74\n2015/10/23 \u30b3\u30e1\u30f3\u30c8\u6b04\u306e\u3054\u6307\u6458\u3092\u53c2\u8003\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89e3\u653e\u51e6\u7406\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u30a8\u30af\u30bb\u30eb VBA \u306f\u5358\u4f53\u3067\u3044\u308d\u3044\u308d\u306a\u51e6\u7406\u304c\u3067\u304d\u3066\u3068\u3066\u3082\u4fbf\u5229\u3067\u3059\u304c\u3001\u3088\u308a\u8907\u96d1\u306a\u51e6\u7406\u3092\u3057\u305f\u3044\u3068\u304d\u306b\u306f\u7269\u8db3\u308a\u306a\u304f\u611f\u3058\u308b\u3053\u3068\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067 C# \u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30a8\u30af\u30bb\u30eb\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# \u6e96\u5099\n\nVisualStudio \u3067 C# \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u306e\u4f8b\u3067\u306f ExcelLoader \u3068\u3044\u3046\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## \u53c2\u7167\u306e\u8ffd\u52a0\n\n\u4e0b\u56f3\u306e\u3088\u3046\u306b [\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9] => [\u53c2\u7167\u306e\u8ffd\u52a0] \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![2015-10-23_00h07_55.png](https://qiita-image-store.s3.amazonaws.com/0/14284/4ef719c6-cc3d-2c8d-b689-268bbb9c2b0c.png)\n\n\u30dd\u30c3\u30d7\u30a2\u30c3\u30d7\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u5de6\u306e\u30ea\u30b9\u30c8\u3067 [COM] \u3092\u9078\u629e\u3057\u3001\u53f3\u4e0a\u306e\u30a8\u30c7\u30a3\u30c3\u30c8\u30dc\u30c3\u30af\u30b9\u306b \"excel\" \u5165\u529b\u3057\u307e\u3059\u3002\u3059\u308b\u3068 \"Microsoft Excel [***] Object Library\" \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u306e\u3067\u3001\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u3066 [OK] \u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u3002\n\n![2015-10-23_00h08_51.png](https://qiita-image-store.s3.amazonaws.com/0/14284/74d5ad32-696b-b845-310e-37bc53df43a3.png)\n\n\u4ee5\u4e0a\u3067\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n# \u30b3\u30fc\u30c9\n\n\u305d\u3093\u306a\u306b\u9577\u304f\u306a\u3044\u306e\u3067\u30b3\u30fc\u30c9\u3092\u4e38\u3054\u3068\u8f09\u305b\u307e\u3059\u3002\n`ExcelSheetReader` \u30af\u30e9\u30b9\u306e\u4e2d\u304c\u30a8\u30af\u30bb\u30eb\u30b7\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u51e6\u7406\u3067\u3001 `Program` \u30af\u30e9\u30b9\u306e\u4e2d\u304c `ExcelSheetReader` \u306e\u4f7f\u7528\u4f8b\u3067\u3059\u3002\u4f7f\u7528\u4f8b\u3068\u8a00\u3063\u3066\u3082 `Read` \u95a2\u6570\u3092\u547c\u3076\u3060\u3051\u3067\u3059\u304c\u3002\n\n```csharp:Program.cs\nusing System.Collections;\nusing System.Runtime.InteropServices;\n\nnamespace ExcelLoader\n{\n\tclass ExcelSheetReader\n\t{\n\t\t/// <summary>\n\t\t/// \u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u3057\u305f\u30b7\u30fc\u30c8\u30922\u6b21\u5143\u914d\u5217\u306b\u8aad\u307f\u8fbc\u3080.\n\t\t/// </summary>\n\t\t/// <param name=\"filePath\">\u30a8\u30af\u30bb\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9</param>\n\t\t/// <param name=\"sheetIndex\">\u30b7\u30fc\u30c8\u306e\u756a\u53f7 (1, 2, 3, ...)</param>\n\t\t/// <param name=\"startRow\">\u6700\u521d\u306e\u884c (>= 1)</param>\n\t\t/// <param name=\"startColmn\">\u6700\u521d\u306e\u5217 (>= 1)</param>\n\t\t/// <param name=\"lastRow\">\u6700\u5f8c\u306e\u884c</param>\n\t\t/// <param name=\"lastColmn\">\u6700\u5f8c\u306e\u5217</param>\n\t\t/// <returns>\u30b7\u30fc\u30c8\u60c5\u5831\u3092\u683c\u7d0d\u3057\u305f2\u6b21\u5143\u6587\u5b57\u914d\u5217. \u305f\u3060\u3057\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u3068\u304d\u306b\u306f null.</returns>\n\t\tpublic ArrayList Read(string filePath, int sheetIndex,\n\t\t\t\t\t\t\t  int startRow, int startColmn,\n\t\t\t\t\t\t\t  int lastRow, int lastColmn)\n\t\t{\n\t\t\t// \u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3092\u958b\u304f\n\t\t\tif(!Open(filePath)) { return null; }\n\n\t\t\tMicrosoft.Office.Interop.Excel.Worksheet sheet = mWorkBook.Sheets[sheetIndex];\n\t\t\tsheet.Select();\n\n\t\t\tvar arrOut = new ArrayList();\n\t\t\t\n\t\t\tfor(int r = startRow; r <= lastRow; r++)\n\t\t\t{\n\t\t\t\t// \u4e00\u884c\u8aad\u307f\u8fbc\u3080\n\t\t\t\tvar row = new ArrayList();\n\t\t\t\tfor(int c = startColmn; c <= lastColmn; c++)\n\t\t\t\t{\n\t\t\t\t\tvar cell = sheet.Cells[r, c];\n\n\t\t\t\t\tif (cell == null || cell.Value == null) { row.Add(\"\"); }\n\n\t\t\t\t\trow.Add(cell.Value);\n\t\t\t\t}\n\n\t\t\t\tarrOut.Add(row);\n\t\t\t}\n\n\t\t\t// \u30ef\u30fc\u30af\u30b7\u30fc\u30c8\u3092\u9589\u3058\u308b\n\t\t\tMarshal.ReleaseComObject(sheet);\n\t\t\tsheet = null;\n\n\t\t\t// \u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3068\u30a8\u30af\u30bb\u30eb\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u9589\u3058\u308b\n\t\t\tClose();\n\n\t\t\treturn arrOut;\n\t\t}\n\n\n\t\t/// <summary>\n\t\t/// \u6307\u5b9a\u3055\u308c\u305f\u30d1\u30b9\u306e\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3092\u958b\u304f\n\t\t/// </summary>\n\t\t/// <param name=\"filePath\">\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u306e\u30d1\u30b9(\u76f8\u5bfe\u30d1\u30b9\u3067\u3082\u7d76\u5bfe\u30d1\u30b9\u3067\u3082OK)</param>\n\t\t/// <returns>\u30a8\u30af\u30bb\u30eb\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u306e\u30aa\u30fc\u30d7\u30f3\u306b\u6210\u529f\u3057\u305f\u3089 true. \u305d\u308c\u4ee5\u5916 false.</returns>\n\t\tprotected bool Open(string filePath)\n\t\t{\n\t\t\tif (!System.IO.File.Exists(filePath))\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tmApp = new Microsoft.Office.Interop.Excel.Application();\n\t\t\t\tmApp.Visible = false;\n\n\t\t\t\t// filePath \u304c\u76f8\u5bfe\u30d1\u30b9\u306e\u3068\u304d\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u306e\u3067 fullPath \u306b\u5909\u63db\n\t\t\t\tstring fullPath = System.IO.Path.GetFullPath(filePath);\n\t\t\t\tmWorkBook = mApp.Workbooks.Open(fullPath);\n\t\t\t}\n\t\t\tcatch\n\t\t\t{\n\t\t\t\tClose();\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/// <summary>\n\t\t/// \u958b\u3044\u3066\u3044\u308b\u30ef\u30fc\u30af\u30d6\u30c3\u30af\u3068\u30a8\u30af\u30bb\u30eb\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u9589\u3058\u308b.\n\t\t/// </summary>\n\t\tprotected void Close()\n\t\t{\n\t\t\tif (mWorkBook != null)\n\t\t\t{\n\t\t\t\tmWorkBook.Close();\n\t\t\t\tMarshal.ReleaseComObject(mWorkBook);\n\t\t\t\tmWorkBook = null;\n            }\n\n\t\t\tif (mApp != null)\n\t\t\t{\n\t\t\t\tmApp.Quit();\n\t\t\t\tMarshal.ReleaseComObject(mApp);\n\t\t\t\tmApp = null;\n            }\n\t\t}\n\n\t\t~ExcelSheetReader()\n\t\t{\n\t\t\tClose();\n\t\t}\n\n\t\tprotected Microsoft.Office.Interop.Excel.Application mApp = null;\n\t\tprotected Microsoft.Office.Interop.Excel.Workbook mWorkBook = null;\n\t}\n\n\tclass Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tvar reader = new ExcelSheetReader();\n\n\t\t\t// 'sample.xlsx' \u306e1\u756a\u30b7\u30fc\u30c8\u306e 1A \u304b\u3089 6C \u307e\u3067\u3092\u8aad\u3080\n\t\t\tvar sheet = reader.Read(@\"sample.xlsx\", 1, 1, 1, 6, 3);\n\n\t\t\t// \u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u529b\n\t\t\tforeach(ArrayList row in sheet)\n\t\t\t{\n\t\t\t\tstring s = \"\";\n\t\t\t\tforeach (var cell in row) { s += cell + \", \"; }\n\t\t\t\tSystem.Console.WriteLine(s);\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n*=== sample.xlsx ===*\n![2015-10-23_00h16_34.png](https://qiita-image-store.s3.amazonaws.com/0/14284/c71025ff-4908-32c8-2397-fd6c168d744e.png)\n\n### \u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u7d50\u679c\n\n```txt:console\n\u54c1\u756a, \u540d\u524d, \u4fa1\u683c,\n1, \u308a\u3093\u3054, 500,\n2, \u307f\u304b\u3093, 400,\n3, \u6817, 700,\n4, \u3076\u3069\u3046, 1200,\n5, \u6843, 2000,\n\u7d9a\u884c\u3059\u308b\u306b\u306f\u4f55\u304b\u30ad\u30fc\u3092\u62bc\u3057\u3066\u304f\u3060\u3055\u3044 . . .\n```\n\n# \u5909\u66f4\u5c65\u6b74\n\n2015/10/23 \u30b3\u30e1\u30f3\u30c8\u6b04\u306e\u3054\u6307\u6458\u3092\u53c2\u8003\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u89e3\u653e\u51e6\u7406\u3068\u30b3\u30e1\u30f3\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n", "tags": ["C#", "Excel", "office"]}