{"tags": ["Erlang"], "context": " More than 1 year has passed since last update.sticky_write, write \u306f disc_copies, disc_only_copies \u306b\u3001\nread \u306f ram_copies \u306b\u632f\u308a\u305f\u3044\u306a\u3001\u3068\u3002\n\nsession.erl\n\n-export([where_to/2, where_to/3]).\n\n%% == public ==\n\nwhere_to(read, Tab)\n  when is_atom(Tab) ->\n    case active(Tab, [ram_copies,disc_copies,disc_only_copies]) of\n        [] ->\n            nowhere;\n        List ->\n            N = length(List),\n            <<B>> = crypto:rand_bytes(N div 8 + 1),\n            lists:nth(1 + B rem N, List)\n    end;\nwhere_to(write, Tab)\n  when is_atom(Tab) ->\n    case active(Tab, [disc_copies,disc_only_copies,ram_copies]) of\n        [] ->\n            nowhere;\n        List ->\n            hd(List)\n    end.\n\nwhere_to(AccessType, Tab, Frag)\n  when is_atom(AccessType), is_atom(Tab), is_integer(Frag), 0 < Frag ->\n    where_to(AccessType, name(Tab,Frag)).\n\n%% == private ==\n\nactive(Tab, StorageType) ->\n    active(Tab, inactive(Tab), StorageType).\n\nactive(_Tab, _Inactive, []) ->\n    [];\nactive(Tab, Inactive, [H|T]) ->\n    case mnesia:table_info(Tab, H) -- Inactive of\n        [] ->\n            active(Tab, Inactive, T);\n        L ->\n            L\n    end.\n\ninactive(Tab) ->\n    mnesia:table_info(Tab, all_nodes) -- mnesia:table_info(Tab, active_replicas).\n\nname(Tab, N)\n  when N > 1 ->\n    list_to_atom(atom_to_list(Tab) ++ \"_frag\" ++ integer_to_list(N));\nname(Tab, 1) ->\n    Tab.\n\n\n\u3084\u3063\u3066\u307f\u308b\u3002\nErlang R16B03-1 (erts-5.10.4) [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V5.10.4  (abort with ^G)\n(n2@localhost)1> mnesia:info().             \n---> Processes holding locks <--- \n---> Processes waiting for locks <--- \n---> Participant transactions <--- \n---> Coordinator transactions <---\n---> Uncertain transactions <--- \n---> Active tables <--- \nsession        : with 0        records occupying 95       words of mem\nschema         : with 2        records occupying 575      words of mem\n===> System info in version \"4.11\", debug level = none <===\nopt_disc. Directory \"/Volumes/bitbucket/session/var/mnesia/n2\" is used.\nuse fallback at restart = false\nrunning db nodes   = [n1@localhost,n2@localhost]\nstopped db nodes   = [] \nmaster node tables = [session]\nremote             = []\nram_copies         = [session]\ndisc_copies        = [schema]\ndisc_only_copies   = []\n[{n1@localhost,disc_copies},{n2@localhost,disc_copies}] = [schema]\n[{n1@localhost,disc_copies},{n2@localhost,ram_copies}] = [session]\n6 transactions committed, 0 aborted, 0 restarted, 6 logged to disc\n0 held locks, 0 in queue; 0 local transactions, 0 remote\n0 transactions waits for other nodes: []\nok\n(n2@localhost)2> timer:tc(fun session:where_to/2, [write,session]).\n{13,n1@localhost}\n(n2@localhost)3> timer:tc(fun session:where_to/2, [read,session]). \n{34,n2@localhost}\n\ncrypto:rand_bytes/1 \u304c\u53b3\u3057\u3044\u3002retry \u3060\u3063\u3066\u8981\u308b\u3057\u3002\n\u3067\u304d\u308b\u3053\u3068\u306a\u3089 Node \u306e\u8ddd\u96e2\u3082\u8003\u3048\u305f\u3044\u3051\u308c\u3069\u3001\u3001\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u3002\n\nsticky_write, write \u306f disc_copies, disc_only_copies \u306b\u3001\nread \u306f ram_copies \u306b\u632f\u308a\u305f\u3044\u306a\u3001\u3068\u3002\n\n```erlang:session.erl\n\n-export([where_to/2, where_to/3]).\n\n%% == public ==\n\nwhere_to(read, Tab)\n  when is_atom(Tab) ->\n    case active(Tab, [ram_copies,disc_copies,disc_only_copies]) of\n        [] ->\n            nowhere;\n        List ->\n            N = length(List),\n            <<B>> = crypto:rand_bytes(N div 8 + 1),\n            lists:nth(1 + B rem N, List)\n    end;\nwhere_to(write, Tab)\n  when is_atom(Tab) ->\n    case active(Tab, [disc_copies,disc_only_copies,ram_copies]) of\n        [] ->\n            nowhere;\n        List ->\n            hd(List)\n    end.\n\nwhere_to(AccessType, Tab, Frag)\n  when is_atom(AccessType), is_atom(Tab), is_integer(Frag), 0 < Frag ->\n    where_to(AccessType, name(Tab,Frag)).\n\n%% == private ==\n\nactive(Tab, StorageType) ->\n    active(Tab, inactive(Tab), StorageType).\n\nactive(_Tab, _Inactive, []) ->\n    [];\nactive(Tab, Inactive, [H|T]) ->\n    case mnesia:table_info(Tab, H) -- Inactive of\n        [] ->\n            active(Tab, Inactive, T);\n        L ->\n            L\n    end.\n\ninactive(Tab) ->\n    mnesia:table_info(Tab, all_nodes) -- mnesia:table_info(Tab, active_replicas).\n\nname(Tab, N)\n  when N > 1 ->\n    list_to_atom(atom_to_list(Tab) ++ \"_frag\" ++ integer_to_list(N));\nname(Tab, 1) ->\n    Tab.\n```\n\n\u3084\u3063\u3066\u307f\u308b\u3002\n\n```erlang\nErlang R16B03-1 (erts-5.10.4) [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false] [dtrace]\n\nEshell V5.10.4  (abort with ^G)\n(n2@localhost)1> mnesia:info().             \n---> Processes holding locks <--- \n---> Processes waiting for locks <--- \n---> Participant transactions <--- \n---> Coordinator transactions <---\n---> Uncertain transactions <--- \n---> Active tables <--- \nsession        : with 0        records occupying 95       words of mem\nschema         : with 2        records occupying 575      words of mem\n===> System info in version \"4.11\", debug level = none <===\nopt_disc. Directory \"/Volumes/bitbucket/session/var/mnesia/n2\" is used.\nuse fallback at restart = false\nrunning db nodes   = [n1@localhost,n2@localhost]\nstopped db nodes   = [] \nmaster node tables = [session]\nremote             = []\nram_copies         = [session]\ndisc_copies        = [schema]\ndisc_only_copies   = []\n[{n1@localhost,disc_copies},{n2@localhost,disc_copies}] = [schema]\n[{n1@localhost,disc_copies},{n2@localhost,ram_copies}] = [session]\n6 transactions committed, 0 aborted, 0 restarted, 6 logged to disc\n0 held locks, 0 in queue; 0 local transactions, 0 remote\n0 transactions waits for other nodes: []\nok\n(n2@localhost)2> timer:tc(fun session:where_to/2, [write,session]).\n{13,n1@localhost}\n(n2@localhost)3> timer:tc(fun session:where_to/2, [read,session]). \n{34,n2@localhost}\n```\n\ncrypto:rand_bytes/1 \u304c\u53b3\u3057\u3044\u3002retry \u3060\u3063\u3066\u8981\u308b\u3057\u3002\n\u3067\u304d\u308b\u3053\u3068\u306a\u3089 Node \u306e\u8ddd\u96e2\u3082\u8003\u3048\u305f\u3044\u3051\u308c\u3069\u3001\u3001\u3069\u3046\u3057\u305f\u3082\u306e\u304b\u3002\n"}