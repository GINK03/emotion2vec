{"context": " More than 1 year has passed since last update.\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3068\u3057\u3066 Amazon CloudFormation \u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u305f\u3051\u3069\u3001\u306a\u3093\u304b\u9762\u5012\u306a\u611f\u3058\u304c\u3057\u305f\u306e\u3067\u6d41\u884c\u308a\u305d\u3046\u306a Terraform \u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\u74b0\u5883\u306fMac(Yosemite 10.10.2)\u3002\n\u76ee\u6a19\u306fAWS\u306bEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\u3057\u3066\u7834\u68c4\u3059\u308b\u3053\u3068\u3002\n\nTerraform\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nHomebrew\u3092\u4f7f\u7528\u3057\u3066Go\u8a00\u8a9e\u3068Mecurial\u3092\u5165\u308c\u3001Github\u304b\u3089\u30bd\u30fc\u30b9\u3092\u843d\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\n(Mac\u306eZIP\u7248[v0.3.7]\u3060\u3068\u5fae\u5999\u306b\u30d0\u30b0\u3063\u307d\u3044\u611f\u3058\u304c\u3042\u3063\u305f\u306e\u3067\u30bd\u30fc\u30b9\u304c\u826f\u3055\u3052)\n$ brew install hg\n$ brew install go\n$ echo 'export GOPATH=${HOME}/.golang' >> ~/.bash_profile\n$ echo 'export PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ git clone https://github.com/hashicorp/terraform ${GOPATH}/src/github.com/hashicorp/terraform\n$ cd ${GOPATH}/src/github.com/hashicorp/terraform\n$ make updatedeps\n$ make dev\n$ terraform -version\nTerraform v0.4.0-dev (da7f307e5696c640612173368b8faa4bc68e511a)\n\n\n\u3069\u3046\u3084\u3063\u3066\u4f5c\u308b\u304b\n\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u9032\u3081\u308b\u3002\n\n\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u914d\u7f6e\n\nterraform plan \u3067\u69cb\u7bc9\u306e\u78ba\u8a8d\n\nterraform apply \u3067\u69cb\u7bc9\u5b9f\u884c\n\nterraform show \u3067\u78ba\u8a8d\n\u7834\u68c4\u3059\u308b\u5834\u5408\u306f terraform plan --destory \u3067\u78ba\u8a8d\nOK\u306a\u3089 terraform destroy \u3067\u7834\u58ca\n\n\n\u5b9a\u7fa9\u4f5c\u6210\n\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u306e2\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n1\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u53ef\u80fd\u3060\u304c\u3001\u5f8c\u3005\u5206\u5272\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u6700\u521d\u304b\u3089\u305d\u3046\u3057\u3066\u307f\u308b\u3002\n\u3056\u3063\u304f\u308a\u3068\u306f provider \u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308b resource \u3092\u5b9a\u7fa9\u3057\u3001variable \u3068\u3044\u3046\u5909\u6570\u3092\u9069\u5b9c\u4f7f\u3046\u6d41\u308c\u3002\u8a73\u7d30\u306f\u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3002\n\u306a\u304a\u3001\u8a2d\u5b9a\u306f .tf \u3001\u5909\u6570\u306f .tfvars \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3002\u7279\u306b\u5909\u6570\u306f .tf \u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nterraform plan \u30b3\u30de\u30f3\u30c9\u3067\u5b9a\u7fa9\u306b\u554f\u984c\u304c\u306a\u3044\u304b\u4e8b\u524d\u78ba\u8a8d\u3059\u308b\u3002\n$ mkdir -p ~/terraform/test\n$ cd ~/terraform/test\n$ vi test.tf\n$ vi test.tfvars\n$ terraform plan -var-file=test.ifvars\nRefreshing Terraform state prior to plan...\n\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n+ aws_instance.test01\n    ami:                       \"\" => \"ami-XXXXXXXX\"\n    availability_zone:         \"\" => \"ap-northeast-1X\"\n    ebs_block_device.#:        \"\" => \"<computed>\"\n    ephemeral_block_device.#:  \"\" => \"<computed>\"\n    instance_type:             \"\" => \"t2.micro\"\n    key_name:                  \"\" => \"XXXXXXXX\"\n    private_dns:               \"\" => \"<computed>\"\n    private_ip:                \"\" => \"X.X.X.X\"\n    public_dns:                \"\" => \"<computed>\"\n    public_ip:                 \"\" => \"<computed>\"\n    root_block_device.#:       \"\" => \"<computed>\"\n    security_groups.#:         \"\" => \"1\"\n    security_groups.348470369: \"\" => \"sg-XXXXXXXX\"\n    subnet_id:                 \"\" => \"subnet-XXXXXXXX\"\n    tags.#:                    \"\" => \"1\"\n    tags.Name:                 \"\" => \"TAG_NAME\"\n    tenancy:                   \"\" => \"<computed>\"\n\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3001AWS\u7528\u306e provider \u3068EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7528\u306e resource \u3092\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3002\nresource \u306f resource TYPE NAME \u3068\u3044\u3046\u611f\u3058\u3067\u3001NAME \u306f\u4efb\u610f\u3002\u4f46\u3057\u3001\u5909\u6570\u5316\u306f\u7121\u7406\u3063\u307d\u3044\u3002\n\ntest.tf\nvariable \"access_key\" {}\nvariable \"secret_key\" {}\nvariable \"key_path\" {}\nvariable \"key_name\" {}\nvariable \"region\" {}\n\nvariable \"ami\" {}\nvariable \"type\" {}\nvariable \"name\" {}\nvariable \"az\" {}\nvariable \"sg\" {}\nvariable \"subnet\" {}\nvariable \"ip\" {}\n\n\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"${var.region}\"\n}\n\nresource \"aws_instance\" \"test01\" {\n    ami = \"${var.ami}\"\n    instance_type = \"${var.type}\"\n    availability_zone = \"${var.az}\"\n    security_groups = [\"${var.sg}\"]\n    subnet_id = \"${var.subnet}\"\n    private_ip = \"${var.ip}\"\n    key_name = \"${var.key_name}\"\n    tags {\n        Name = \"${var.name}\"\n    }\n}\n\n\n\n\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u5024\u3092\u8a18\u8f09\u3002\n\u62e1\u5f35\u5b50\u306f .tfvars \u3067\u306a\u3044\u3068\u5f15\u6570\u3067\u6307\u5b9a\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\ntest.tfvars\naccess_key = \"XXXXXXXX\"\nsecret_key = \"XXXXXXXX\"\nkey_path = \"/path/to/key.pem\"\nkey_name = \"XXXXXXXX\"\nregion = \"ap-northeast-1\"\nami = \"ami-XXXXXXXX\"\ntype = \"t2.micro\"\nname = \"TAG_NAME\"\naz = \"ap-northeast-1X\"\nsg = \"sg-XXXXXXXX\"\nsubnet = \"subnet-XXXXXXXX\"\nip = \"X.X.X.X\"\n\n\n\u5909\u6570\u306e\u5024\u306f\u5b9f\u884c\u6642\u306b\u4e0e\u3048\u308b\u306e\u304c\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3063\u307d\u3044\u3002\n\u306a\u306e\u3067\u3001\u8a2d\u5b9a\u5185\u3067\u306f\u5909\u6570\u5ba3\u8a00\u306e\u307f\u3067\u3001\u5b9f\u969b\u306e\u5024\u3092\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u304a\u304f\u611f\u3058\u3002\n\n\u69cb\u7bc9\nterraform plan \u3067\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u5b9f\u969b\u306b\u69cb\u7bc9\u3059\u308b\u3002\n-var-file \u5f15\u6570\u3067\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3002\n$ terraform apply -var-file=test.tfvars\naws_instance.test01: Creating...\n  ami:                       \"\" => \"ami-XXXXXXXX\"\n  availability_zone:         \"\" => \"ap-northeast-1X\"\n  ebs_block_device.#:        \"\" => \"<computed>\"\n  ephemeral_block_device.#:  \"\" => \"<computed>\"\n  instance_type:             \"\" => \"t2.micro\"\n  key_name:                  \"\" => \"XXXXXXXX\"\n  private_dns:               \"\" => \"<computed>\"\n  private_ip:                \"\" => \"X.X.X.X\"\n  public_dns:                \"\" => \"<computed>\"\n  public_ip:                 \"\" => \"<computed>\"\n  root_block_device.#:       \"\" => \"<computed>\"\n  security_groups.#:         \"\" => \"1\"\n  security_groups.348470369: \"\" => \"sg-XXXXXXXX\"\n  subnet_id:                 \"\" => \"subnet-XXXXXXXX\"\n  tags.#:                    \"\" => \"1\"\n  tags.Name:                 \"\" => \"TAG_NAME\"\n  tenancy:                   \"\" => \"<computed>\"\naws_instance.test01: Creation complete\n\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: terraform.tfstate\n\n\u69cb\u7bc9\u5f8c terraform.tfstate \u3068 terraform.tfstate.backup \u3068\u3044\u30462\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n\u78ba\u8a8d\n\u5148\u307b\u3069\u4f5c\u6210\u3055\u308c\u305f terraform.tfstate \u306b\u5b9a\u7fa9\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u30b3\u30de\u30f3\u30c9\u3067\u3082\u78ba\u8a8d\u53ef\u80fd\u3002\n$ terraform show\naws_instance.test01:\n  id = i-XXXXXXXX\n  ami = ami-XXXXXXXX\n  availability_zone = ap-northeast-1X\n  ebs_block_device.# = 0\n  ebs_optimized = false\n  ephemeral_block_device.# = 0\n  instance_type = t2.micro\n  key_name = XXXXXXXX\n  private_dns = ip-X-X-X-X.ap-northeast-1.compute.internal\n  private_ip = X.X.X.X\n  public_dns =\n  root_block_device.# = 1\n  root_block_device.1234567890.delete_on_termination = true\n  root_block_device.1234567890.iops = 0\n  root_block_device.1234567890.volume_size = 8\n  root_block_device.1234567890.volume_type = standard\n  security_groups.# = 1\n  security_groups.1234567890 = sg-XXXXXXXX\n  subnet_id = subnet-XXXXXXXX\n  tenancy = default\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u304c\u5206\u304b\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b aws cli \u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n$ aws ec2 describe-instances --instance-ids i-XXXXXXXX --query 'Reservations[].Instances[].{ID:InstanceId,IP:PrivateIpAddress,TYPE:InstanceType,SUBNET:SubnetId,SG:SecurityGroups[0].GroupId,NAME:Tags[?Key==`Name`].Value|[0]}[0]'\n\n{\n    \"SUBNET\": \"subnet-XXXXXXXX\",\n    \"NAME\": \"TAG_NAME\",\n    \"IP\": \"X.X.X.X\",\n    \"TYPE\": \"t2.micro\",\n    \"SG\": \"sg-XXXXXXXX\",\n    \"ID\": \"i-XXXXXXXX\"\n}\n\n\n\u7834\u58ca\n\u307e\u305a\u306f\u7834\u58ca\u5bfe\u8c61\u3092\u78ba\u8a8d\u3002\nterraform plan \u306b -destroy \u5f15\u6570\u3092\u4ed8\u4e0e\u3059\u308c\u3070OK\u3002\n$ terraform plan -destroy -var-file=test.tfvars\nRefreshing Terraform state prior to plan...\n\naws_instance.test01: Refreshing state... (ID: i-XXXXXXXX)\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n- aws_instance.test01\n\n\n\u554f\u984c\u306a\u3051\u308c\u3070\u7834\u58ca\u3002\n\u672c\u5f53\u306b\u3084\u3063\u3061\u3083\u3063\u3066\u826f\u3044\u304b\u78ba\u8a8d\u3092\u6c42\u3081\u3089\u308c\u308b\u306e\u3067 yes \u3068\u5165\u529b\u3002\n$ terraform destroy -var-file=test.tfvars\nDo you really want to destroy?\n  Terraform will delete all your managed infrastructure.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\naws_instance.test01: Refreshing state... (ID: i-XXXXXXXX)\naws_instance.test01: Destroying...\naws_instance.test01: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 1 destroyed.\n\n\u672c\u5f53\u306b\u3044\u306a\u304f\u306a\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n$ terraform show\n\n$ aws ec2 describe-instances --instance-ids i-XXXXXXXX --query 'Reservations[].Instances[].[State.Name][]'\n[\n    \"terminated\"\n]\n\n\u4ee5\u4e0a\u3002\n\n\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3068\u3057\u3066 `Amazon CloudFormation` \u3092\u3061\u3087\u3063\u3068\u898b\u3066\u307f\u305f\u3051\u3069\u3001\u306a\u3093\u304b\u9762\u5012\u306a\u611f\u3058\u304c\u3057\u305f\u306e\u3067\u6d41\u884c\u308a\u305d\u3046\u306a [`Terraform`](https://www.terraform.io/) \u3092\u8a66\u3057\u3066\u307f\u308b\u3002\n\n\u74b0\u5883\u306fMac(Yosemite 10.10.2)\u3002\n\u76ee\u6a19\u306fAWS\u306bEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u69cb\u7bc9\u3057\u3066\u7834\u68c4\u3059\u308b\u3053\u3068\u3002\n\n### Terraform\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nHomebrew\u3092\u4f7f\u7528\u3057\u3066Go\u8a00\u8a9e\u3068Mecurial\u3092\u5165\u308c\u3001Github\u304b\u3089\u30bd\u30fc\u30b9\u3092\u843d\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002\n(Mac\u306eZIP\u7248[v0.3.7]\u3060\u3068\u5fae\u5999\u306b\u30d0\u30b0\u3063\u307d\u3044\u611f\u3058\u304c\u3042\u3063\u305f\u306e\u3067\u30bd\u30fc\u30b9\u304c\u826f\u3055\u3052)\n\n```bash\n$ brew install hg\n$ brew install go\n$ echo 'export GOPATH=${HOME}/.golang' >> ~/.bash_profile\n$ echo 'export PATH=${PATH}:${GOROOT}/bin:${GOPATH}/bin' >> ~/.bash_profile\n$ source ~/.bash_profile\n$ git clone https://github.com/hashicorp/terraform ${GOPATH}/src/github.com/hashicorp/terraform\n$ cd ${GOPATH}/src/github.com/hashicorp/terraform\n$ make updatedeps\n$ make dev\n$ terraform -version\nTerraform v0.4.0-dev (da7f307e5696c640612173368b8faa4bc68e511a)\n```\n\n### \u3069\u3046\u3084\u3063\u3066\u4f5c\u308b\u304b\n\u57fa\u672c\u7684\u306b\u306f\u4ee5\u4e0b\u306e\u6d41\u308c\u3067\u9032\u3081\u308b\u3002\n\n* \u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u5b9a\u7fa9\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u914d\u7f6e\n* `terraform plan` \u3067\u69cb\u7bc9\u306e\u78ba\u8a8d\n* `terraform apply` \u3067\u69cb\u7bc9\u5b9f\u884c\n* `terraform show` \u3067\u78ba\u8a8d\n* \u7834\u68c4\u3059\u308b\u5834\u5408\u306f `terraform plan --destory` \u3067\u78ba\u8a8d\n* OK\u306a\u3089 `terraform destroy` \u3067\u7834\u58ca\n\n### \u5b9a\u7fa9\u4f5c\u6210\n\u4f5c\u696d\u7528\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3001\u305d\u3053\u306b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3068\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u306e2\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3059\u308b\u3002\n1\u30d5\u30a1\u30a4\u30eb\u3067\u3082\u53ef\u80fd\u3060\u304c\u3001\u5f8c\u3005\u5206\u5272\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u3066\u6700\u521d\u304b\u3089\u305d\u3046\u3057\u3066\u307f\u308b\u3002\n\n\u3056\u3063\u304f\u308a\u3068\u306f `provider` \u3092\u5b9a\u7fa9\u3057\u3066\u3001\u305d\u308c\u306b\u95a2\u9023\u3059\u308b `resource` \u3092\u5b9a\u7fa9\u3057\u3001`variable` \u3068\u3044\u3046\u5909\u6570\u3092\u9069\u5b9c\u4f7f\u3046\u6d41\u308c\u3002\u8a73\u7d30\u306f[\u672c\u5bb6\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://www.terraform.io/docs/index.html)\u3002\n\n\u306a\u304a\u3001\u8a2d\u5b9a\u306f `.tf` \u3001\u5909\u6570\u306f `.tfvars` \u3068\u3044\u3046\u62e1\u5f35\u5b50\u3002\u7279\u306b\u5909\u6570\u306f `.tf` \u3060\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n`terraform plan` \u30b3\u30de\u30f3\u30c9\u3067\u5b9a\u7fa9\u306b\u554f\u984c\u304c\u306a\u3044\u304b\u4e8b\u524d\u78ba\u8a8d\u3059\u308b\u3002\n\n```bash\n$ mkdir -p ~/terraform/test\n$ cd ~/terraform/test\n$ vi test.tf\n$ vi test.tfvars\n$ terraform plan -var-file=test.ifvars\nRefreshing Terraform state prior to plan...\n\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n+ aws_instance.test01\n    ami:                       \"\" => \"ami-XXXXXXXX\"\n    availability_zone:         \"\" => \"ap-northeast-1X\"\n    ebs_block_device.#:        \"\" => \"<computed>\"\n    ephemeral_block_device.#:  \"\" => \"<computed>\"\n    instance_type:             \"\" => \"t2.micro\"\n    key_name:                  \"\" => \"XXXXXXXX\"\n    private_dns:               \"\" => \"<computed>\"\n    private_ip:                \"\" => \"X.X.X.X\"\n    public_dns:                \"\" => \"<computed>\"\n    public_ip:                 \"\" => \"<computed>\"\n    root_block_device.#:       \"\" => \"<computed>\"\n    security_groups.#:         \"\" => \"1\"\n    security_groups.348470369: \"\" => \"sg-XXXXXXXX\"\n    subnet_id:                 \"\" => \"subnet-XXXXXXXX\"\n    tags.#:                    \"\" => \"1\"\n    tags.Name:                 \"\" => \"TAG_NAME\"\n    tenancy:                   \"\" => \"<computed>\"\n\n```\n\n#### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\n\u5909\u6570\u3092\u5ba3\u8a00\u3057\u3001AWS\u7528\u306e `provider` \u3068EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7528\u306e `resource` \u3092\u305d\u308c\u305e\u308c\u5b9a\u7fa9\u3002\n`resource` \u306f `resource TYPE NAME` \u3068\u3044\u3046\u611f\u3058\u3067\u3001`NAME` \u306f\u4efb\u610f\u3002\u4f46\u3057\u3001\u5909\u6570\u5316\u306f\u7121\u7406\u3063\u307d\u3044\u3002\n\n```test.tf\nvariable \"access_key\" {}\nvariable \"secret_key\" {}\nvariable \"key_path\" {}\nvariable \"key_name\" {}\nvariable \"region\" {}\n\nvariable \"ami\" {}\nvariable \"type\" {}\nvariable \"name\" {}\nvariable \"az\" {}\nvariable \"sg\" {}\nvariable \"subnet\" {}\nvariable \"ip\" {}\n\n\nprovider \"aws\" {\n    access_key = \"${var.access_key}\"\n    secret_key = \"${var.secret_key}\"\n    region = \"${var.region}\"\n}\n\nresource \"aws_instance\" \"test01\" {\n    ami = \"${var.ami}\"\n    instance_type = \"${var.type}\"\n    availability_zone = \"${var.az}\"\n    security_groups = [\"${var.sg}\"]\n    subnet_id = \"${var.subnet}\"\n    private_ip = \"${var.ip}\"\n    key_name = \"${var.key_name}\"\n    tags {\n        Name = \"${var.name}\"\n    }\n}\n```\n\n#### \u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u5185\u3067\u5ba3\u8a00\u3057\u305f\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u5024\u3092\u8a18\u8f09\u3002\n\u62e1\u5f35\u5b50\u306f `.tfvars` \u3067\u306a\u3044\u3068\u5f15\u6570\u3067\u6307\u5b9a\u3057\u3066\u3082\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\n```test.tfvars\naccess_key = \"XXXXXXXX\"\nsecret_key = \"XXXXXXXX\"\nkey_path = \"/path/to/key.pem\"\nkey_name = \"XXXXXXXX\"\nregion = \"ap-northeast-1\"\nami = \"ami-XXXXXXXX\"\ntype = \"t2.micro\"\nname = \"TAG_NAME\"\naz = \"ap-northeast-1X\"\nsg = \"sg-XXXXXXXX\"\nsubnet = \"subnet-XXXXXXXX\"\nip = \"X.X.X.X\"\n```\n\n\n\u5909\u6570\u306e\u5024\u306f\u5b9f\u884c\u6642\u306b\u4e0e\u3048\u308b\u306e\u304c\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u3063\u307d\u3044\u3002\n\u306a\u306e\u3067\u3001\u8a2d\u5b9a\u5185\u3067\u306f\u5909\u6570\u5ba3\u8a00\u306e\u307f\u3067\u3001\u5b9f\u969b\u306e\u5024\u3092\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u7528\u610f\u3057\u3066\u304a\u304f\u611f\u3058\u3002\n\n\n### \u69cb\u7bc9\n`terraform plan` \u3067\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u5b9f\u969b\u306b\u69cb\u7bc9\u3059\u308b\u3002\n`-var-file` \u5f15\u6570\u3067\u5909\u6570\u7528\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```bash\n$ terraform apply -var-file=test.tfvars\naws_instance.test01: Creating...\n  ami:                       \"\" => \"ami-XXXXXXXX\"\n  availability_zone:         \"\" => \"ap-northeast-1X\"\n  ebs_block_device.#:        \"\" => \"<computed>\"\n  ephemeral_block_device.#:  \"\" => \"<computed>\"\n  instance_type:             \"\" => \"t2.micro\"\n  key_name:                  \"\" => \"XXXXXXXX\"\n  private_dns:               \"\" => \"<computed>\"\n  private_ip:                \"\" => \"X.X.X.X\"\n  public_dns:                \"\" => \"<computed>\"\n  public_ip:                 \"\" => \"<computed>\"\n  root_block_device.#:       \"\" => \"<computed>\"\n  security_groups.#:         \"\" => \"1\"\n  security_groups.348470369: \"\" => \"sg-XXXXXXXX\"\n  subnet_id:                 \"\" => \"subnet-XXXXXXXX\"\n  tags.#:                    \"\" => \"1\"\n  tags.Name:                 \"\" => \"TAG_NAME\"\n  tenancy:                   \"\" => \"<computed>\"\naws_instance.test01: Creation complete\n\nApply complete! Resources: 1 added, 0 changed, 0 destroyed.\n\nThe state of your infrastructure has been saved to the path\nbelow. This state is required to modify and destroy your\ninfrastructure, so keep it safe. To inspect the complete state\nuse the `terraform show` command.\n\nState path: terraform.tfstate\n```\n\n\u69cb\u7bc9\u5f8c `terraform.tfstate` \u3068 `terraform.tfstate.backup` \u3068\u3044\u30462\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n\n### \u78ba\u8a8d\n\u5148\u307b\u3069\u4f5c\u6210\u3055\u308c\u305f `terraform.tfstate` \u306b\u5b9a\u7fa9\u60c5\u5831\u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u30b3\u30de\u30f3\u30c9\u3067\u3082\u78ba\u8a8d\u53ef\u80fd\u3002\n\n```bash\n$ terraform show\naws_instance.test01:\n  id = i-XXXXXXXX\n  ami = ami-XXXXXXXX\n  availability_zone = ap-northeast-1X\n  ebs_block_device.# = 0\n  ebs_optimized = false\n  ephemeral_block_device.# = 0\n  instance_type = t2.micro\n  key_name = XXXXXXXX\n  private_dns = ip-X-X-X-X.ap-northeast-1.compute.internal\n  private_ip = X.X.X.X\n  public_dns =\n  root_block_device.# = 1\n  root_block_device.1234567890.delete_on_termination = true\n  root_block_device.1234567890.iops = 0\n  root_block_device.1234567890.volume_size = 8\n  root_block_device.1234567890.volume_type = standard\n  security_groups.# = 1\n  security_groups.1234567890 = sg-XXXXXXXX\n  subnet_id = subnet-XXXXXXXX\n  tenancy = default\n\n```\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u304c\u5206\u304b\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b `aws cli` \u3067\u3082\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\n\n```bash\n$ aws ec2 describe-instances --instance-ids i-XXXXXXXX --query 'Reservations[].Instances[].{ID:InstanceId,IP:PrivateIpAddress,TYPE:InstanceType,SUBNET:SubnetId,SG:SecurityGroups[0].GroupId,NAME:Tags[?Key==`Name`].Value|[0]}[0]'\n\n{\n    \"SUBNET\": \"subnet-XXXXXXXX\",\n    \"NAME\": \"TAG_NAME\",\n    \"IP\": \"X.X.X.X\",\n    \"TYPE\": \"t2.micro\",\n    \"SG\": \"sg-XXXXXXXX\",\n    \"ID\": \"i-XXXXXXXX\"\n}\n```\n\n\n### \u7834\u58ca\n\u307e\u305a\u306f\u7834\u58ca\u5bfe\u8c61\u3092\u78ba\u8a8d\u3002\n`terraform plan` \u306b `-destroy` \u5f15\u6570\u3092\u4ed8\u4e0e\u3059\u308c\u3070OK\u3002\n\n```bash\n$ terraform plan -destroy -var-file=test.tfvars\nRefreshing Terraform state prior to plan...\n\naws_instance.test01: Refreshing state... (ID: i-XXXXXXXX)\n\nThe Terraform execution plan has been generated and is shown below.\nResources are shown in alphabetical order for quick scanning. Green resources\nwill be created (or destroyed and then created if an existing resource\nexists), yellow resources are being changed in-place, and red resources\nwill be destroyed.\n\nNote: You didn't specify an \"-out\" parameter to save this plan, so when\n\"apply\" is called, Terraform can't guarantee this is what will execute.\n\n- aws_instance.test01\n\n```\n\n\u554f\u984c\u306a\u3051\u308c\u3070\u7834\u58ca\u3002\n\u672c\u5f53\u306b\u3084\u3063\u3061\u3083\u3063\u3066\u826f\u3044\u304b\u78ba\u8a8d\u3092\u6c42\u3081\u3089\u308c\u308b\u306e\u3067 `yes` \u3068\u5165\u529b\u3002\n\n```bash\n$ terraform destroy -var-file=test.tfvars\nDo you really want to destroy?\n  Terraform will delete all your managed infrastructure.\n  There is no undo. Only 'yes' will be accepted to confirm.\n\n  Enter a value: yes\n\naws_instance.test01: Refreshing state... (ID: i-XXXXXXXX)\naws_instance.test01: Destroying...\naws_instance.test01: Destruction complete\n\nApply complete! Resources: 0 added, 0 changed, 1 destroyed.\n```\n\n\u672c\u5f53\u306b\u3044\u306a\u304f\u306a\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n```bash\n$ terraform show\n\n$ aws ec2 describe-instances --instance-ids i-XXXXXXXX --query 'Reservations[].Instances[].[State.Name][]'\n[\n    \"terminated\"\n]\n```\n\n\n\u4ee5\u4e0a\u3002\n", "tags": ["Terraform"]}