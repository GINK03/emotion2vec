{"context": "\n\n\u5bfe\u8c61\u8005\u3000\n\nPython\u3001Django\u306b\u8208\u5473\u304c\u3042\u308b\u4eba\n\u305f\u3060\u3084\u3063\u305f\u3053\u3068\u66f8\u3044\u3066\u308b\u3060\u3051\u306a\u306e\u3067\u4f55\u306e\u53c2\u8003\u306b\u3082\u306a\u3089\u306a\u3044\u304b\u3082...\n\n\n\u958b\u767a\u74b0\u5883\n\nmac os\nPython3\n\n\n\u53c2\u8003\u8cc7\u6599\n\u30a2\u30a4\u30ea\u30b9\u306e\u30c7\u30fc\u30bf\u30b5\u30f3\u30d7\u30eb\u306e\u4f7f\u3044\u304b\u305f\n\n\u80cc\u666f\n\nRails\u306a\u308c\u3066\u304d\u3066\u3001Django\u3084\u3063\u3066\u307f\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\n\u81ea\u5206\u306e\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u306f\u3069\u308c\u307b\u3069\u8a08\u753b\u7684\u306b\u9032\u3081\u3089\u308c\u308b\u306e\u304b\u6c17\u306b\u306a\u3063\u305f\n\u30a4\u30f3\u30d5\u30eb\u30a8\u30f3\u30b6\u3067\u71b1\u4e0b\u304c\u3063\u305f\u3051\u3069\u5bb6\u3067\u308c\u306a\u3044\u3057\u3072\u307e\u3060\u3063\u305f\n\n\n\u76ee\u6a19\n\n3\u65e5\u9593\u3067Django\u307e\u3067\u7fd2\u5f97\u3057\u3066\u30014\u65e5\u76ee\u79fb\u884c\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u898b\u306a\u304c\u3089\u3060\u3063\u305f\u3089\u7c21\u5358\u306a\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3067\u304d\u308b\n1\u65e5\u76ee\u3067Python\u3092\u7fd2\u5f97\u3059\u308b\uff08print\u6587\u304b\u3089\u6761\u4ef6\u30eb\u30fc\u30d7\u3001class\u306e\u5b9a\u7fa9\u3001\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u7b49\u3005\uff09\n2\u65e5\u76ee\u3067Python\u306e\u7fd2\u5f97\u306e\u30c1\u30a7\u30c3\u30af\u3068Django\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u4f55\u304btutorial\u3092\u4e00\u3064\u4f5c\u308a\u4e0a\u3052\u308b\n3\u65e5\u76ee\u3067tutorial\u3092\u3082\u3046\u4e00\u5ea6\u3084\u3063\u3066\u3001Routing\u306e\u8a2d\u5b9a\u3001mvc\u3092\u5b9a\u7fa9\u3059\u308b\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b\n4\u65e5\u76ee\u632f\u308a\u8fd4\u308a\n\u307e\u3060\u9014\u4e2d\u306a\u306e\u3067\u3061\u3087\u3044\u3061\u3087\u3044\u8aac\u660e\u5897\u3084\u3057\u3066\u3044\u304d\u307e\u3059\n\n\u4e09\u65e5\u76ee\u306f\u3061\u3087\u3063\u3068\u6a5f\u68b0\u5b66\u7fd2\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u2193\nfrom sklearn.datasets import load_iris\niris = load_iris()\nprint (iris.feature_names)\nprint (iris.target_names)\nprint (iris.data[0])\nprint (iris.target[0])\nfor i in range(len(iris.target)):\n    print (\"Example:\"+ str(i) + \", label:\" + str(iris.target[i]) + \", features\" + str(iris.data[i]))\n\n\u5b9f\u884c\u7d50\u679c\u2193\u3000\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066predict\u3067\u306b\u7279\u5fb4\u3092\u66f8\u3044\u3066\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u3069\u308c\u306b\u3042\u3066\u306f\u307e\u308b\u304b\u691c\u8a3c\nfrom sklearn import tree\nfeatures = [[140, 1], [130, 1], [150, 0], [170, 0]]\nlabels = [\"apple\", \"apple\", \"orange\", \"orange\"]\nclf = tree.DecisionTreeClassifier()\nclf = clf.fit(features, labels)\nprint (clf.predict([[200, 0]]))\n\n#\u5bfe\u8c61\u8005\u3000\n- Python\u3001Django\u306b\u8208\u5473\u304c\u3042\u308b\u4eba\n- \u305f\u3060\u3084\u3063\u305f\u3053\u3068\u66f8\u3044\u3066\u308b\u3060\u3051\u306a\u306e\u3067\u4f55\u306e\u53c2\u8003\u306b\u3082\u306a\u3089\u306a\u3044\u304b\u3082...\n\n#\u958b\u767a\u74b0\u5883\n- mac os\n- Python3\n\n#\u53c2\u8003\u8cc7\u6599\n[\u30a2\u30a4\u30ea\u30b9\u306e\u30c7\u30fc\u30bf\u30b5\u30f3\u30d7\u30eb\u306e\u4f7f\u3044\u304b\u305f](http://scikit-learn.org/stable/modules/generated/sklearn.datasets.load_iris.html)\n#\u80cc\u666f\n- Rails\u306a\u308c\u3066\u304d\u3066\u3001Django\u3084\u3063\u3066\u307f\u305f\u3044\u306a\u30fc\u3068\u601d\u3063\u305f\n- \u81ea\u5206\u306e\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u306f\u3069\u308c\u307b\u3069\u8a08\u753b\u7684\u306b\u9032\u3081\u3089\u308c\u308b\u306e\u304b\u6c17\u306b\u306a\u3063\u305f\n- \u30a4\u30f3\u30d5\u30eb\u30a8\u30f3\u30b6\u3067\u71b1\u4e0b\u304c\u3063\u305f\u3051\u3069\u5bb6\u3067\u308c\u306a\u3044\u3057\u3072\u307e\u3060\u3063\u305f\n\n#\u76ee\u6a19\n- 3\u65e5\u9593\u3067Django\u307e\u3067\u7fd2\u5f97\u3057\u3066\u30014\u65e5\u76ee\u79fb\u884c\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u898b\u306a\u304c\u3089\u3060\u3063\u305f\u3089\u7c21\u5358\u306a\u30a2\u30d7\u30ea\u3092\u958b\u767a\u3067\u304d\u308b\n- [1\u65e5\u76ee\u3067Python\u3092\u7fd2\u5f97\u3059\u308b\uff08print\u6587\u304b\u3089\u6761\u4ef6\u30eb\u30fc\u30d7\u3001class\u306e\u5b9a\u7fa9\u3001\u5909\u6570\u306e\u30b9\u30b3\u30fc\u30d7\u7b49\u3005\uff09](http://qiita.com/kosukeKK/items/eb99e14b7e5101e757a3)\n- [2\u65e5\u76ee\u3067Python\u306e\u7fd2\u5f97\u306e\u30c1\u30a7\u30c3\u30af\u3068Django\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u4f55\u304btutorial\u3092\u4e00\u3064\u4f5c\u308a\u4e0a\u3052\u308b](http://qiita.com/kosukeKK/items/31d5bfd830693a7b17be)\n- 3\u65e5\u76ee\u3067tutorial\u3092\u3082\u3046\u4e00\u5ea6\u3084\u3063\u3066\u3001Routing\u306e\u8a2d\u5b9a\u3001mvc\u3092\u5b9a\u7fa9\u3059\u308b\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b\n- 4\u65e5\u76ee\u632f\u308a\u8fd4\u308a\n\n- \u307e\u3060\u9014\u4e2d\u306a\u306e\u3067\u3061\u3087\u3044\u3061\u3087\u3044\u8aac\u660e\u5897\u3084\u3057\u3066\u3044\u304d\u307e\u3059\n\n\u4e09\u65e5\u76ee\u306f\u3061\u3087\u3063\u3068\u6a5f\u68b0\u5b66\u7fd2\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u2193\n\n```py3\nfrom sklearn.datasets import load_iris\niris = load_iris()\nprint (iris.feature_names)\nprint (iris.target_names)\nprint (iris.data[0])\nprint (iris.target[0])\nfor i in range(len(iris.target)):\n    print (\"Example:\"+ str(i) + \", label:\" + str(iris.target[i]) + \", features\" + str(iris.data[i]))\n```\n\n\u5b9f\u884c\u7d50\u679c\u2193\u3000\u6559\u5e2b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u3066predict\u3067\u306b\u7279\u5fb4\u3092\u66f8\u3044\u3066\u6559\u5e2b\u30c7\u30fc\u30bf\u306e\u3069\u308c\u306b\u3042\u3066\u306f\u307e\u308b\u304b\u691c\u8a3c\n\n```py3\nfrom sklearn import tree\nfeatures = [[140, 1], [130, 1], [150, 0], [170, 0]]\nlabels = [\"apple\", \"apple\", \"orange\", \"orange\"]\nclf = tree.DecisionTreeClassifier()\nclf = clf.fit(features, labels)\nprint (clf.predict([[200, 0]]))\n```\n", "tags": ["python3", "Django"]}