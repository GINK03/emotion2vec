{"context": " More than 1 year has passed since last update.\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAdventCalendar 2015 18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u5c0e\u5165\n\u5148\u65e5\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u751f\u6210\u3084Property-based testing\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3057\u305f\u3002\njPopulator\u306b\u7d9a\u304d\u3001junit-quickcheck\u3092\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nreadme\u3092\u8aad\u307f\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\n\n\u4f7f\u3044\u65b9\n\u307e\u305a\u3001\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\n    import com.pholser.junit.quickcheck.JUnitQuickcheck;\n    import com.pholser.junit.quickcheck.Property;\n    import org.junit.runner.RunWith;\n\n    import static org.junit.Assert.*;\n\n    @RunWith(JUnitQuickcheck.class)\n    public class StringProperties {\n        @Property public void concatenationLength(String s1, String s2) {\n            assertEquals(s1.length() + s2.length(), (s1 + s2).length());\n        }\n    }\n\n\u3053\u308c\u3067concatenationLength\u306e\u30c6\u30b9\u30c8\u304c0~200\u6587\u5b57\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3067100\u56de\u547c\u3070\u308c\u307e\u3059\u3002\n\nGenerator\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n@From\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067Generator\u306e\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3044\u308d\u3044\u308d\u306a\u5024\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n@RunWith(JUnitQuickcheck.class)\n    public class IdentificationProperties {\n        @Property public void shouldHold(@From(Version5.class) UUID u) {\n            // ...\n        }\n    }\n\n\u30ab\u30b9\u30bf\u30e0Generator\u306fcom.pholser.junit.quickcheck.generator.Generatorkurasu \u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5b9f\u88c5\u304c\u5fc5\u8981\u306aabstract method\u306fgenerate()\u30e1\u30bd\u30c3\u30c9\u4e00\u3064\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002  \nimport com.pholser.junit.quickcheck.generator.GenerationStatus;\nimport com.pholser.junit.quickcheck.generator.Generator;\nimport com.pholser.junit.quickcheck.random.SourceOfRandomness;\n\npublic class HogeGenerator extends Generator<String> {\n    public HogeGenerator() {\n        super(String.class);\n    }\n\n    @Override\n    public String generate(SourceOfRandomness random, GenerationStatus status) {\n        return \"hoge\";\n    }\n\n}\n\n\n@InRange\u3092\u4f7f\u3063\u305f\u751f\u6210\u30c7\u30fc\u30bf\u306e\u7bc4\u56f2\u6307\u5b9a\nimport static org.hamcrest.Matchers.greaterThanOrEqualTo;\nimport static org.hamcrest.Matchers.lessThanOrEqualTo;\nimport static org.junit.Assume.assumeThat;\n\nimport java.util.List;\n\nimport org.junit.runner.RunWith;\n\nimport com.pholser.junit.quickcheck.Property;\nimport com.pholser.junit.quickcheck.generator.InRange;\nimport com.pholser.junit.quickcheck.runner.JUnitQuickcheck;\n\n@RunWith(JUnitQuickcheck.class)\npublic class SingleDigitProperties {\n    @Property\n    public void hold(@InRange(min = \"0\", max = \"9\") int digit) {\n        // hope we get enough single digits\n        assumeThat(digit, greaterThanOrEqualTo(0));\n        assumeThat(digit, lessThanOrEqualTo(9));\n        System.out.println(digit);\n        // ...\n    }\n\n    @Property\n    public void hold(List<@InRange(min = \"0\", max = \"9\") Integer> digits) {\n        System.out.println(digits);\n        // ...\n    }\n}\n\n\nassumeThat\n\u4eca\u56de\u8a66\u3057\u305f\u3068\u304d\u306b\u306f\u30d0\u30b0\u304c\u3042\u3063\u3066\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u304b\u3063\u305f\u3002\n\n@When OGNL\u8a18\u6cd5\n@When(satisfies = \"#_ >= 0 && #_ <= 9\")\n\u3053\u306e\u8a18\u6cd5\u306f\u52d5\u4f5c\u3057\u306a\u304b\u3063\u305f\n\n\u305d\u306e\u4ed6\n\n\u30b7\u30f3\u30d7\u30eb\u306b\u56de\u6570\u6307\u5b9a\n@Property(trials = 250) public void northernHemisphere(\nProperty\u306btrials\u306e\u5024\u3092\u6e21\u3059\u3068\u6307\u5b9a\u3057\u305f\u56de\u6570\u5b9f\u65bd\u3055\u308c\u308b\u3002\n\nSeed \u3068 Shrink\n\u4eca\u56de\u306f\u6642\u9593\u304c\u306a\u304f\u3066\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\nReadme\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u4f7f\u3063\u3066\u3044\u308bHamcrest\nHamcrest\u306eMather\u306f2.0\u3092\u4f7f\u3063\u3066\u3044\u308b\u69d8\u5b50\n\n\u307e\u3068\u3081\nalpha\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u3042\u3063\u3066\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u901a\u308a\u306b\u3084\u3063\u3066\u307f\u3066\u52d5\u304b\u306a\u3044\u6a5f\u80fd\u3084\u3001\u305d\u3082\u305d\u3082\u52d5\u304b\u306a\u3044\u6a5f\u80fd\u304c\u3042\u3063\u305f\u3002\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u306e\u3067\u4eca\u5f8c\u306b\u671f\u5f85\u3057\u305f\u3044\u3002\n\u4eca\u65e5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\u6b21\u306fFunctional-Java\u306eQuickcheck\u306b\u6311\u6226\u3059\u308b\u4e88\u5b9a\u3002\n\n\u30c6\u30b9\u30c8\u30c4\u30fc\u30ebAdventCalendar 2015 18\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n#\u5c0e\u5165#\n\u5148\u65e5\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u3092\u4f5c\u3063\u3066\u30c6\u30b9\u30c8\u3057\u305f\u3044\u30b1\u30fc\u30b9\u304c\u3042\u308a\u3001\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u751f\u6210\u3084Property-based testing\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u63a2\u3057\u307e\u3057\u305f\u3002\njPopulator\u306b\u7d9a\u304d\u3001junit-quickcheck\u3092\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n[readme](https://github.com/pholser/junit-quickcheck)\u3092\u8aad\u307f\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\n\n#\u4f7f\u3044\u65b9#\n\u307e\u305a\u3001\u3082\u3063\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u4f7f\u3044\u65b9\u3067\u3059\u3002\n\n```\n    import com.pholser.junit.quickcheck.JUnitQuickcheck;\n    import com.pholser.junit.quickcheck.Property;\n    import org.junit.runner.RunWith;\n\n    import static org.junit.Assert.*;\n\n    @RunWith(JUnitQuickcheck.class)\n    public class StringProperties {\n        @Property public void concatenationLength(String s1, String s2) {\n            assertEquals(s1.length() + s2.length(), (s1 + s2).length());\n        }\n    }\n```\n\u3053\u308c\u3067concatenationLength\u306e\u30c6\u30b9\u30c8\u304c0~200\u6587\u5b57\u306e\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3067100\u56de\u547c\u3070\u308c\u307e\u3059\u3002\n\n### Generator\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\n@From\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067Generator\u306e\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3044\u308d\u3044\u308d\u306a\u5024\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\n@RunWith(JUnitQuickcheck.class)\n    public class IdentificationProperties {\n        @Property public void shouldHold(@From(Version5.class) UUID u) {\n            // ...\n        }\n    }\n```\n\u30ab\u30b9\u30bf\u30e0Generator\u306fcom.pholser.junit.quickcheck.generator.Generatorkurasu \u3092\u5b9f\u88c5\u3059\u308b\u3060\u3051\u3067\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u5b9f\u88c5\u304c\u5fc5\u8981\u306aabstract method\u306fgenerate()\u30e1\u30bd\u30c3\u30c9\u4e00\u3064\u306a\u306e\u3067\u7c21\u5358\u3067\u3059\u3002  \n\n```\nimport com.pholser.junit.quickcheck.generator.GenerationStatus;\nimport com.pholser.junit.quickcheck.generator.Generator;\nimport com.pholser.junit.quickcheck.random.SourceOfRandomness;\n\npublic class HogeGenerator extends Generator<String> {\n    public HogeGenerator() {\n        super(String.class);\n    }\n\n    @Override\n    public String generate(SourceOfRandomness random, GenerationStatus status) {\n        return \"hoge\";\n    }\n\n}\n```\n\n\n### @InRange\u3092\u4f7f\u3063\u305f\u751f\u6210\u30c7\u30fc\u30bf\u306e\u7bc4\u56f2\u6307\u5b9a\n```\nimport static org.hamcrest.Matchers.greaterThanOrEqualTo;\nimport static org.hamcrest.Matchers.lessThanOrEqualTo;\nimport static org.junit.Assume.assumeThat;\n\nimport java.util.List;\n\nimport org.junit.runner.RunWith;\n\nimport com.pholser.junit.quickcheck.Property;\nimport com.pholser.junit.quickcheck.generator.InRange;\nimport com.pholser.junit.quickcheck.runner.JUnitQuickcheck;\n\n@RunWith(JUnitQuickcheck.class)\npublic class SingleDigitProperties {\n    @Property\n    public void hold(@InRange(min = \"0\", max = \"9\") int digit) {\n        // hope we get enough single digits\n        assumeThat(digit, greaterThanOrEqualTo(0));\n        assumeThat(digit, lessThanOrEqualTo(9));\n        System.out.println(digit);\n        // ...\n    }\n\n    @Property\n    public void hold(List<@InRange(min = \"0\", max = \"9\") Integer> digits) {\n        System.out.println(digits);\n        // ...\n    }\n}\n```\n\n\n### assumeThat\n\u4eca\u56de\u8a66\u3057\u305f\u3068\u304d\u306b\u306f\u30d0\u30b0\u304c\u3042\u3063\u3066\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u304b\u3063\u305f\u3002\n\n\n### @When OGNL\u8a18\u6cd5\n`@When(satisfies = \"#_ >= 0 && #_ <= 9\")`\n\u3053\u306e\u8a18\u6cd5\u306f\u52d5\u4f5c\u3057\u306a\u304b\u3063\u305f\n\n## \u305d\u306e\u4ed6\n\n### \u30b7\u30f3\u30d7\u30eb\u306b\u56de\u6570\u6307\u5b9a\n` @Property(trials = 250) public void northernHemisphere(`\nProperty\u306btrials\u306e\u5024\u3092\u6e21\u3059\u3068\u6307\u5b9a\u3057\u305f\u56de\u6570\u5b9f\u65bd\u3055\u308c\u308b\u3002\n\n### Seed \u3068 Shrink\n\u4eca\u56de\u306f\u6642\u9593\u304c\u306a\u304f\u3066\u8a66\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u304b\u3063\u305f\u3002\n\n### Readme\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u4f7f\u3063\u3066\u3044\u308bHamcrest\nHamcrest\u306eMather\u306f2.0\u3092\u4f7f\u3063\u3066\u3044\u308b\u69d8\u5b50\n\n\n\n## \u307e\u3068\u3081\nalpha\u30d0\u30fc\u30b8\u30e7\u30f3\u3060\u3051\u3042\u3063\u3066\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u901a\u308a\u306b\u3084\u3063\u3066\u307f\u3066\u52d5\u304b\u306a\u3044\u6a5f\u80fd\u3084\u3001\u305d\u3082\u305d\u3082\u52d5\u304b\u306a\u3044\u6a5f\u80fd\u304c\u3042\u3063\u305f\u3002\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u306e\u3067\u4eca\u5f8c\u306b\u671f\u5f85\u3057\u305f\u3044\u3002\n\n\u4eca\u65e5\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n\u6b21\u306fFunctional-Java\u306eQuickcheck\u306b\u6311\u6226\u3059\u308b\u4e88\u5b9a\u3002\n", "tags": ["Java", "JUnit"]}