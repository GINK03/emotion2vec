{"tags": ["scikit-learn", "Python", "matplotlib", "MachineLearning"], "context": " More than 1 year has passed since last update.\u4eca\u65e5\u306f\u6628\u65e5\u306b\u5f15\u304d\u7d9a\u304d SciPy and NumPy\nOptimizing & Boosting your Python Programming \u306e\u4e2d\u304b\u3089 scikit-learn \u3092\u4f7f\u3063\u305f\u4f8b\u3092\u8efd\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3059\u3067\u306b\u98df\u3079\u3089\u308c\u308b\u30ad\u30ce\u30b3\u3092\u898b\u5206\u3051\u308b\u3084\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u7d50\u679c\u3092\u518d\u5229\u7528\u3059\u308b\u3068\u3044\u3063\u305f\u8a18\u4e8b\u3067\u8aac\u660e\u3057\u307e\u3057\u305f\u3057 scikit-learn \u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u3067\u3082\u53d6\u308a\u6271\u3063\u3066\u304d\u307e\u3057\u305f\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u306e\u4e2d\u3067\u3082\u3059\u3063\u304b\u308a\u304a\u99b4\u67d3\u307f\u306e\u624b\u6cd5\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nscikit-learn \u3067\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\u30dd\u30d4\u30e5\u30e9\u30fc\u306a kmeans \u3068\u6bd4\u8f03\u3057\u3066\u591a\u304f\u306e\u30c7\u30fc\u30bf\u70b9\u3092\u6709\u3059\u308b\u30b3\u30a2\u70b9\u3092\u898b\u3064\u3051\u308b DBSCAN \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u30b3\u30a2\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3068\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5185\u5185\u3067\u30d7\u30ed\u30bb\u30b9\u306f\u53cd\u5fa9\u3057\u307e\u3059\u3002\u30ce\u30a4\u30ba\u3092\u591a\u304f\u542b\u3080\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001\u3057\u3070\u3057\u3070 kmeans \u3068\u6bd4\u8f03\u3055\u308c\u308b\u624b\u6cd5\u3067\u3059\u3002\n\u539f\u8457\u306b\u304a\u3044\u3066\u3082\u3053\u308c\u3089\u306e\u624b\u6cd5\u3092\u6bd4\u8f03\u3057\u53ef\u8996\u5316\u3057\u3066\u3044\u307e\u3059\u3002\u3055\u3063\u305d\u304f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nimport numpy as np\nimport matplotlib.pyplot as mpl\nfrom scipy.spatial import distance\nfrom sklearn.cluster import DBSCAN\n\n# \u307e\u305a\u306f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4e71\u6570\u3067\u751f\u6210\u3057\u307e\u3059\nc1 = np.random.randn(100, 2) + 5\nc2 = np.random.randn(50, 2)\n\n# \u5747\u4e00\u5206\u5e03\u3092\u751f\u6210\u3001\u7a4d\u307f\u4e0a\u3052\u308b\nu1 = np.random.uniform(low=-10, high=10, size=100)\nu2 = np.random.uniform(low=-10, high=10, size=100)\nc3 = np.column_stack([u1, u2])\n\n# 150 x 2 \u306e\u914d\u5217\u306b\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u305f\u3081\u3053\u3080\ndata = np.vstack([c1, c2, c3])\n\n# DBSCAN \u3092\u5229\u7528\u3057\u305f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n# db.labels_ \u306f\u30c7\u30fc\u30bf\u5185\u306e\u7570\u306a\u308b\u30af\u30e9\u30b9\u30bf\u3078\u306e\u8b58\u5225\u5b50\u3092\u6301\u3064\u914d\u5217\u3067\u3059\ndb = DBSCAN().fit(data)\nlabels = db.labels_\n\n# \u305d\u308c\u305e\u308c\u306e\u30b3\u30a2\u306b\u5bfe\u3059\u308b\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u307e\u3059\n# 2 \u3064\u306e\u30af\u30e9\u30b9\u30bf\u306f 0 \u3068 1 \u3068\u3057\u3066\u3001\u30ce\u30a4\u30ba\u306f -1 \u3068\u5206\u985e\u3055\u308c\u307e\u3059\n# \u3053\u308c\u3089\u3092\u5206\u5272\u3057\u307e\u3059\ndbc1 = data[labels == 0] # \u8ca0\u4f8b\ndbc2 = data[labels == 1] # \u6b63\u4f8b\nnoise = data[labels == -1] # \u30ce\u30a4\u30ba\n\n\u3053\u306e\u3088\u3046\u306b\u30ce\u30a4\u30ba\u3092\u53d6\u308a\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n\u53ef\u8996\u5316\n\u304a\u306a\u3058\u307f\u306e matplotlib \u3067\u53ef\u8996\u5316\u3057\u307e\u3057\u3087\u3046\u3002\nx1, x2 = -12, 12\ny1, y2 = -12, 12\nfig = mpl.figure()\nfig.subplots_adjust(hspace=0.1, wspace=0.1)\nax1 = fig.add_subplot(121, aspect='equal')\nax1.scatter(c1[:, 0], c1[:, 1], lw=0.5, color='#00CC00')\nax1.scatter(c2[:, 0], c2[:, 1], lw=0.5, color='#028E9B')\nax1.scatter(c3[:, 0], c3[:, 1], lw=0.5, color='#FF7800')\nax1.xaxis.set_visible(False)\nax1.yaxis.set_visible(False)\nax1.set_xlim(x1, x2)\nax1.set_ylim(y1, y2)\nax1.text(-11, 10, 'Original')\nax2 = fig.add_subplot(122, aspect='equal')\nax2.scatter(dbc1[:, 0], dbc1[:, 1], lw=0.5, color='#00CC00')\nax2.scatter(dbc2[:, 0], dbc2[:, 1], lw=0.5, color='#028E9B')\nax2.scatter(noise[:, 0], noise[:, 1], lw=0.5, color='#FF7800')\nax2.xaxis.set_visible(False)\nax2.yaxis.set_visible(False)\nax2.set_xlim(x1, x2)\nax2.set_ylim(y1, y2)\nax2.text(-11, 10, 'DBSCAN identified')\nfig.savefig('image.png', bbox_inches='tight')\n\n\n\u4eca\u65e5\u306f[\u6628\u65e5](http://qiita.com/ynakayama/items/88b4dd5d0dd9b1604006)\u306b\u5f15\u304d\u7d9a\u304d [SciPy and NumPy\nOptimizing & Boosting your Python Programming](http://it-ebooks.info/book/1280/) \u306e\u4e2d\u304b\u3089 [scikit-learn](http://scikit-learn.org/stable/) \u3092\u4f7f\u3063\u305f\u4f8b\u3092\u8efd\u304f\u8aac\u660e\u3057\u307e\u3059\u3002\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u306f\u3059\u3067\u306b[\u98df\u3079\u3089\u308c\u308b\u30ad\u30ce\u30b3\u3092\u898b\u5206\u3051\u308b](http://qiita.com/ynakayama/items/d67ffc172afaf0895de4)\u3084[\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306e\u7d50\u679c\u3092\u518d\u5229\u7528\u3059\u308b](http://qiita.com/ynakayama/items/7de5ecac9023cb46e0ef)\u3068\u3044\u3063\u305f\u8a18\u4e8b\u3067\u8aac\u660e\u3057\u307e\u3057\u305f\u3057 [scikit-learn \u306b\u3088\u308b\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n](http://qiita.com/ynakayama/items/ab2d89be36d3cdaeb4f2)\u3067\u3082\u53d6\u308a\u6271\u3063\u3066\u304d\u307e\u3057\u305f\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u306e\u4e2d\u3067\u3082\u3059\u3063\u304b\u308a\u304a\u99b4\u67d3\u307f\u306e\u624b\u6cd5\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## scikit-learn \u3067\u306e\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\u30dd\u30d4\u30e5\u30e9\u30fc\u306a [kmeans](http://ja.wikipedia.org/wiki/K%E5%B9%B3%E5%9D%87%E6%B3%95) \u3068\u6bd4\u8f03\u3057\u3066\u591a\u304f\u306e\u30c7\u30fc\u30bf\u70b9\u3092\u6709\u3059\u308b\u30b3\u30a2\u70b9\u3092\u898b\u3064\u3051\u308b [DBSCAN \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0](http://en.wikipedia.org/wiki/DBSCAN)\u306f\u3001\u30b3\u30a2\u304c\u5b9a\u7fa9\u3055\u308c\u308b\u3068\u6307\u5b9a\u3055\u308c\u305f\u534a\u5f84\u5185\u5185\u3067\u30d7\u30ed\u30bb\u30b9\u306f\u53cd\u5fa9\u3057\u307e\u3059\u3002\u30ce\u30a4\u30ba\u3092\u591a\u304f\u542b\u3080\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u3001\u3057\u3070\u3057\u3070 kmeans \u3068\u6bd4\u8f03\u3055\u308c\u308b\u624b\u6cd5\u3067\u3059\u3002\n\n\u539f\u8457\u306b\u304a\u3044\u3066\u3082\u3053\u308c\u3089\u306e\u624b\u6cd5\u3092\u6bd4\u8f03\u3057\u53ef\u8996\u5316\u3057\u3066\u3044\u307e\u3059\u3002\u3055\u3063\u305d\u304f\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3\nimport numpy as np\nimport matplotlib.pyplot as mpl\nfrom scipy.spatial import distance\nfrom sklearn.cluster import DBSCAN\n\n# \u307e\u305a\u306f\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u4e71\u6570\u3067\u751f\u6210\u3057\u307e\u3059\nc1 = np.random.randn(100, 2) + 5\nc2 = np.random.randn(50, 2)\n\n# \u5747\u4e00\u5206\u5e03\u3092\u751f\u6210\u3001\u7a4d\u307f\u4e0a\u3052\u308b\nu1 = np.random.uniform(low=-10, high=10, size=100)\nu2 = np.random.uniform(low=-10, high=10, size=100)\nc3 = np.column_stack([u1, u2])\n\n# 150 x 2 \u306e\u914d\u5217\u306b\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u305f\u3081\u3053\u3080\ndata = np.vstack([c1, c2, c3])\n\n# DBSCAN \u3092\u5229\u7528\u3057\u305f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n# db.labels_ \u306f\u30c7\u30fc\u30bf\u5185\u306e\u7570\u306a\u308b\u30af\u30e9\u30b9\u30bf\u3078\u306e\u8b58\u5225\u5b50\u3092\u6301\u3064\u914d\u5217\u3067\u3059\ndb = DBSCAN().fit(data)\nlabels = db.labels_\n\n# \u305d\u308c\u305e\u308c\u306e\u30b3\u30a2\u306b\u5bfe\u3059\u308b\u5ea7\u6a19\u3092\u53d6\u5f97\u3057\u307e\u3059\n# 2 \u3064\u306e\u30af\u30e9\u30b9\u30bf\u306f 0 \u3068 1 \u3068\u3057\u3066\u3001\u30ce\u30a4\u30ba\u306f -1 \u3068\u5206\u985e\u3055\u308c\u307e\u3059\n# \u3053\u308c\u3089\u3092\u5206\u5272\u3057\u307e\u3059\ndbc1 = data[labels == 0] # \u8ca0\u4f8b\ndbc2 = data[labels == 1] # \u6b63\u4f8b\nnoise = data[labels == -1] # \u30ce\u30a4\u30ba\n```\n\n\u3053\u306e\u3088\u3046\u306b\u30ce\u30a4\u30ba\u3092\u53d6\u308a\u5206\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\n### \u53ef\u8996\u5316\n\n\u304a\u306a\u3058\u307f\u306e [matplotlib](http://matplotlib.org/) \u3067\u53ef\u8996\u5316\u3057\u307e\u3057\u3087\u3046\u3002\n\n```py3\nx1, x2 = -12, 12\ny1, y2 = -12, 12\nfig = mpl.figure()\nfig.subplots_adjust(hspace=0.1, wspace=0.1)\nax1 = fig.add_subplot(121, aspect='equal')\nax1.scatter(c1[:, 0], c1[:, 1], lw=0.5, color='#00CC00')\nax1.scatter(c2[:, 0], c2[:, 1], lw=0.5, color='#028E9B')\nax1.scatter(c3[:, 0], c3[:, 1], lw=0.5, color='#FF7800')\nax1.xaxis.set_visible(False)\nax1.yaxis.set_visible(False)\nax1.set_xlim(x1, x2)\nax1.set_ylim(y1, y2)\nax1.text(-11, 10, 'Original')\nax2 = fig.add_subplot(122, aspect='equal')\nax2.scatter(dbc1[:, 0], dbc1[:, 1], lw=0.5, color='#00CC00')\nax2.scatter(dbc2[:, 0], dbc2[:, 1], lw=0.5, color='#028E9B')\nax2.scatter(noise[:, 0], noise[:, 1], lw=0.5, color='#FF7800')\nax2.xaxis.set_visible(False)\nax2.yaxis.set_visible(False)\nax2.set_xlim(x1, x2)\nax2.set_ylim(y1, y2)\nax2.text(-11, 10, 'DBSCAN identified')\nfig.savefig('image.png', bbox_inches='tight')\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/38501/e25bb34e-5086-daad-78b2-528eae36e259.png)\n\n"}