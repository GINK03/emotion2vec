{"context": "AWS APIGateway\u306fIAM\u3067\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nAWS_IAM\u3092\u8a2d\u5b9a\u3057\u305fAPIGateway\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306fAWS\u7f72\u540d\u30d0\u30fc\u30b8\u30e7\u30f34\u306e\u4ed5\u69d8\u306b\u6cbf\u3063\u305fAuthorization\u30d8\u30c3\u30c0\u3092\u4ed8\u52a0\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3053\u308d\u304c\u3053\u306e\u7f72\u540d\u3092\u751f\u6210\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3063\u3066\u7d50\u69cb\u9762\u5012\u306a\u306e\u3067\u3059\u3088\u306d\u3002\u305d\u3093\u306a\u3082\u306eAWSSDK\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3068\u601d\u3044\u304d\u3084\u3001\nhttps://github.com/aws/aws-sdk-js/blob/master/lib/signers/v4.js\n\u3053\u308c\u3001private\u3084\u3093\u2026\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u52d5\u6a5f\u3067\u3057\u305f\u3002\n\nnpm request \u304c AWS\u7f72\u540d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u305f\nnode.js\u306b\u306f\u30e1\u30b8\u30e3\u30fc\u306aHTTPClient\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3001request\u3068\u3044\u3046npm\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3044\u3064\u306eREADME\u3092\u3088\u304f\u773a\u3081\u3066\u307f\u308b\u3068\u3001\n\n\naws - object containing AWS signing information. Should have the properties key, secret. Also requires the property bucket, unless you\u2019re specifying your bucket as part of the path, or the request doesn\u2019t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter sign_version with value 4 otherwise the default is version 2. Note: you need to npm install aws4 first.\n\n\n\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3002\n\"use strict\"\n\nconst co = require(\"co\");\nconst request = require(\"request-promise-native\");\nconst AWS = require(\"aws-sdk\");\n\nco(function*(){\n  const cred = yield getCredential();\n  console.log(cred.accessKeyId, cred.secretAccessKey, cred.sessionToken);\n  return yield request({\n    uri: \" https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/trial/getinfo/1234\",\n    aws: {\n      sign_version: 4,\n      key: cred.accessKeyId,\n      secret: cred.secretAccessKey,\n    }\n  })\n}).then(console.log).catch(console.error);\n\nfunction getCredential() {\n  const credChain = new AWS.CredentialProviderChain();\n  return new Promise((resolve, reject) => {\n    credChain.resolve((err, creds) => {\n      if(err) {\n        reject(err);\n      } else {\n        resolve(creds);\n      }\n    })\n  })\n}\n\n\u3053\u3093\u306a\u306e\u3067\u7121\u4e8b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u5165\u308c\u3089\u308c\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u306fPromise,co,function*,yield\u3092\u30ac\u30b7\u30ac\u30b7\u4f7f\u3063\u3066\u304a\u308a\u3001Node.js 4.x\u524d\u63d0\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u7f72\u540d\u3092\u3064\u3051\u3066\u3044\u306a\u3044\u3068\u3001\n[StatusCodeError: 403 - \"{\\\"message\\\":\\\"Missing Authentication Token\\\"}\"]\n\n\u7f72\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3001\n[StatusCodeError: 403 - \"{\\\"message\\\":\\\"The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u5c11\u3057\u4e0d\u90fd\u5408\u304c\u3042\u308b\n\u4e8c\u70b9\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\nAPIGateway\u306b\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\nIAM\u30ed\u30fc\u30eb\u3067API\u306eInvoke\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u306e\u5b9f\u884c\u3059\u308b\u30b1\u30fc\u30b9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\u56f0\u3063\u305f\u306e\u3067\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u6295\u3052\u307e\u3057\u305f\u3002\nhttps://github.com/request/request/pull/2339\n\u4e0a\u8a18\u304c\u30de\u30fc\u30b8\u3055\u308c\u308b\u307e\u3067\u306fnpm install newgyu/request\u3067npm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u4e0a\u8a18\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3067\u304d\u307e\u3059\u3002\n\"use strict\"\n\nconst co = require(\"co\");\nconst request = require(\"request-promise-native\");\nconst AWS = require(\"aws-sdk\");\n\nco(function*(){\n  const cred = yield getCredential();\n  console.log(cred.accessKeyId, cred.secretAccessKey, cred.sessionToken);\n  return yield request({\n    uri: \"https://api.newgyu.xyz/trial/getinfo/1234\",\n    aws: {\n      sign_version: 4,\n      key: cred.accessKeyId,\n      secret: cred.secretAccessKey,\n      //\u30c8\u30fc\u30af\u30f3\u306e\u6307\u5b9a\n      sessionToken: cred.sessionToken,\n      //service,region\u306e\u6307\u5b9a\n      service: \"execute-api\",    //APIGateway\u306e\u5834\u5408\u306b\u306fexecute-api\u3092\u6307\u5b9a\u3059\u308b\n      region: \"ap-northeast-1\"\n    }\n  })\n}).then(console.log).catch(console.error);\n\nfunction getCredential() {\n  const credChain = new AWS.CredentialProviderChain();\n  return new Promise((resolve, reject) => {\n    credChain.resolve((err, creds) => {\n      if(err) {\n        reject(err);\n      } else {\n        resolve(creds);\n      }\n    })\n  })\n}\n\nAWS APIGateway\u306f[IAM\u3067\u30a2\u30af\u30bb\u30b9\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb](https://docs.aws.amazon.com/ja_jp/apigateway/latest/developerguide/permissions.html)\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n![apigateway.png](https://qiita-image-store.s3.amazonaws.com/0/31010/2e90f481-f489-cf7c-98fd-6694b7966f31.png)\n\nAWS_IAM\u3092\u8a2d\u5b9a\u3057\u305fAPIGateway\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u306f[AWS\u7f72\u540d\u30d0\u30fc\u30b8\u30e7\u30f34](https://docs.aws.amazon.com/ja_jp/general/latest/gr/sigv4_signing.html)\u306e\u4ed5\u69d8\u306b\u6cbf\u3063\u305fAuthorization\u30d8\u30c3\u30c0\u3092\u4ed8\u52a0\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3068\u3053\u308d\u304c\u3053\u306e\u7f72\u540d\u3092\u751f\u6210\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3063\u3066\u7d50\u69cb\u9762\u5012\u306a\u306e\u3067\u3059\u3088\u306d\u3002\u305d\u3093\u306a\u3082\u306eAWSSDK\u3067\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3060\u308d\u3046\u3068\u601d\u3044\u304d\u3084\u3001\n\nhttps://github.com/aws/aws-sdk-js/blob/master/lib/signers/v4.js\n\n\u3053\u308c\u3001private\u3084\u3093\u2026\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u52d5\u6a5f\u3067\u3057\u305f\u3002\n\n## npm request \u304c AWS\u7f72\u540d\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u305f\n\nnode.js\u306b\u306f\u30e1\u30b8\u30e3\u30fc\u306aHTTPClient\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3001[request](https://www.npmjs.com/package/request)\u3068\u3044\u3046npm\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u3044\u3064\u306eREADME\u3092\u3088\u304f\u773a\u3081\u3066\u307f\u308b\u3068\u3001\n\n> * aws - object containing AWS signing information. Should have the properties key, secret. Also requires the property bucket, unless you\u2019re specifying your bucket as part of the path, or the request doesn\u2019t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter sign_version with value 4 otherwise the default is version 2. Note: you need to npm install aws4 first.\n\n\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304b\u3002\n\n```js\n\"use strict\"\n\nconst co = require(\"co\");\nconst request = require(\"request-promise-native\");\nconst AWS = require(\"aws-sdk\");\n\nco(function*(){\n  const cred = yield getCredential();\n  console.log(cred.accessKeyId, cred.secretAccessKey, cred.sessionToken);\n  return yield request({\n    uri: \" https://xxxxx.execute-api.ap-northeast-1.amazonaws.com/trial/getinfo/1234\",\n    aws: {\n      sign_version: 4,\n      key: cred.accessKeyId,\n      secret: cred.secretAccessKey,\n    }\n  })\n}).then(console.log).catch(console.error);\n\nfunction getCredential() {\n  const credChain = new AWS.CredentialProviderChain();\n  return new Promise((resolve, reject) => {\n    credChain.resolve((err, creds) => {\n      if(err) {\n        reject(err);\n      } else {\n        resolve(creds);\n      }\n    })\n  })\n}\n```\n\n\u3053\u3093\u306a\u306e\u3067\u7121\u4e8b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u5165\u308c\u3089\u308c\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u306f`Promise`,`co`,`function*`,`yield`\u3092\u30ac\u30b7\u30ac\u30b7\u4f7f\u3063\u3066\u304a\u308a\u3001Node.js 4.x\u524d\u63d0\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u7f72\u540d\u3092\u3064\u3051\u3066\u3044\u306a\u3044\u3068\u3001\n\n```\n[StatusCodeError: 403 - \"{\\\"message\\\":\\\"Missing Authentication Token\\\"}\"]\n```\n\n\u7f72\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3001\n\n```\n[StatusCodeError: 403 - \"{\\\"message\\\":\\\"The request signature we calculated does not match the signature you provided. Check your AWS Secret Access Key and signing method. Consult the service documentation for details.\n```\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u3057\u304b\u3057\u3001\u5c11\u3057\u4e0d\u90fd\u5408\u304c\u3042\u308b\n\n\u4e8c\u70b9\u56f0\u3063\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n1. APIGateway\u306b\u30ab\u30b9\u30bf\u30e0\u30c9\u30e1\u30a4\u30f3\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\n2. IAM\u30ed\u30fc\u30eb\u3067API\u306eInvoke\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u305fEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u306e\u5b9f\u884c\u3059\u308b\u30b1\u30fc\u30b9\u3067\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\u56f0\u3063\u305f\u306e\u3067\u30d7\u30eb\u30ea\u30af\u30a8\u30b9\u30c8\u6295\u3052\u307e\u3057\u305f\u3002\nhttps://github.com/request/request/pull/2339\n\n\u4e0a\u8a18\u304c\u30de\u30fc\u30b8\u3055\u308c\u308b\u307e\u3067\u306f`npm install newgyu/request`\u3067npm\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u4e0a\u8a18\u306e\u554f\u984c\u306b\u5bfe\u51e6\u3067\u304d\u307e\u3059\u3002\n\n\n```js\n\"use strict\"\n\nconst co = require(\"co\");\nconst request = require(\"request-promise-native\");\nconst AWS = require(\"aws-sdk\");\n\nco(function*(){\n  const cred = yield getCredential();\n  console.log(cred.accessKeyId, cred.secretAccessKey, cred.sessionToken);\n  return yield request({\n    uri: \"https://api.newgyu.xyz/trial/getinfo/1234\",\n    aws: {\n      sign_version: 4,\n      key: cred.accessKeyId,\n      secret: cred.secretAccessKey,\n      //\u30c8\u30fc\u30af\u30f3\u306e\u6307\u5b9a\n      sessionToken: cred.sessionToken,\n      //service,region\u306e\u6307\u5b9a\n      service: \"execute-api\",    //APIGateway\u306e\u5834\u5408\u306b\u306fexecute-api\u3092\u6307\u5b9a\u3059\u308b\n      region: \"ap-northeast-1\"\n    }\n  })\n}).then(console.log).catch(console.error);\n\nfunction getCredential() {\n  const credChain = new AWS.CredentialProviderChain();\n  return new Promise((resolve, reject) => {\n    credChain.resolve((err, creds) => {\n      if(err) {\n        reject(err);\n      } else {\n        resolve(creds);\n      }\n    })\n  })\n}\n```\n", "tags": ["AWS", "APIGateway", "Node.js"]}