{"context": "\n\nYahoo! Japan\u306eOpenID Connect\u3092yesod\u3067\u8a66\u3059\n\n\u306f\u3058\u3081\u306b\nSNS\u306a\u3069\u3067\u3001\u307b\u304b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u95b2\u89a7\u306a\u3069\u3092\u8a31\u3059\u6a5f\u80fd\u304c\u3042\u308b\u3002\u3053\u308c\u304c\u8a8d\u53ef\u3067\u3042\u308a\u3001OAuth\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3001\u305d\u308c\u304c\u5b9f\u73fe\u3055\u308c\u308b\u3002\u3053\u306eOAuth\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306f\u8a8d\u53ef\u306e\u305f\u3081\u306e\u308f\u304f\u3050\u307f\u3067\u3042\u308a\u3001\u672c\u4eba\u78ba\u8a8d(\u8a8d\u8a3c)\u306e\u305f\u3081\u306e\u6a5f\u80fd\u3067\u306f\u306a\u3044\u3002\n\u300c\u8a8d\u53ef\u3092\u3042\u305f\u3048\u3089\u308c\u308b\u306e\u306f\u672c\u4eba\u3060\u3051\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u7406\u5c48\u3067\u3001\u3053\u306e\u300c\u8a8d\u53ef\u300d\u3092\u672c\u4eba\u78ba\u8a8d\u306b\u4f7f\u3046\u5834\u5408\u304c\u3042\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u3092\u3059\u308b\u3068\u3001\u5927\u304d\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30db\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3057\u307e\u3046\u3002\n\u5358\u306a\u308bOAuth 2.0\u3092\u8a8d\u8a3c\u306b\u4f7f\u3046\u3068\u3001\u8eca\u304c\u901a\u308c\u308b\u307b\u3069\u306e\u3069\u3067\u304b\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u304c\u3067\u304d\u308b\nOAuth 2.0\u306e\u308f\u304f\u3050\u307f\u306e\u3046\u3048\u3067\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u672c\u4eba\u78ba\u8a8d(\u8a8d\u8a3c)\u3092\u304a\u3053\u306a\u3046\u4ed5\u7d44\u307f\u304c\u3042\u308b\u3002\u305d\u308c\u304cOpenID Connect\u3060\u3002\n\n\u4f55\u3092\u3059\u308b\u304b\nHaskell\u306b\u3088\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bYesod\u3092\u4f7f\u3063\u3066\u3001Yahoo! Japan\u306eOpenID Connect\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\u3064\u304e\u306e\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u3092Yesod\u3067\u5b9f\u88c5\u3057\u305f\u3002\nOpenID Connect\u4f53\u9a13\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u304a\u3082\u306b\u30b3\u30fc\u30c9\u306e\u7d39\u4ecb\u3092\u3059\u308b\u3002\u7d30\u304b\u3044\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u4e0a\u8a18\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u307b\u3057\u3044\u3002\n\u4e0a\u8a18\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u305f\u3046\u3048\u3067\u3001Yesod\u3067\u8a66\u305d\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u306e\u304c\u3044\u3044\u304b\u3068\u601d\u3046\u3002\n\n\u524d\u63d0\nHaskell\u306eStack\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\u307e\u305f\u3001Yahoo ID\u306f\u53d6\u5f97\u305a\u307f\u3068\u3059\u308b\u3002\n\nYesod\u306b\u3088\u308b\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u3092\u4f5c\u308b\nYesod\u3067\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u3092\u52d5\u304b\u3059\u3002\n% stack new testOpenID yesod-simple && cd testOpenID\n% stack install yesod-bin cabal-install --install-ghc\n% stack build\n% stack exec -- yesod devel\n\n\u3053\u308c\u3067http://localhost:3000/ \u306b\u63a5\u7d9a\u3059\u308b\u3002\u3082\u3057\u304b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u305d\u3093\u306a\u3068\u304d\u306b\u306f\u3001stack ... devel\u3057\u305f\u30bf\u30fc\u30df\u30ca\u30eb\u3067Enter\u3092\u5165\u529b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nYahoo! Japan\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u767b\u9332\u3059\u308b\nhttps://e.developer.yahoo.co.jp/dashboard/ \u306b\u63a5\u7d9a\u3057\u3001\u300c\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3092\u597d\u304d\u306a\u540d\u524d\u306b\u8a2d\u5b9a\u3059\u308b\u3002\u30b5\u30a4\u30c8URL\u3092http://localhost:3000/ \u3068\u3057\u3066\u3001\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3078\u306e\u540c\u610f\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u300c\u78ba\u8a8d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\u767b\u9332\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3ID\u3068\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u3053\u3046\u3002\n\u30d5\u30a1\u30a4\u30eby_clientId.txt\u3068y_clientSecret.txt\u3092\u3001\u305d\u308c\u305e\u308c\u306e\u5185\u5bb9\u3067\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n\u30c0\u30df\u30fc\u306e\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\n\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30da\u30fc\u30b8\u3068\u3057\u3066\u30c0\u30df\u30fc\u306e\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\u3002\n% vi testOpenID.cabal\n\nlibrary\u306eexposed-modules:\u306e\u3068\u3053\u308d\u306e\u6700\u5f8c\u3092\u3001\u3064\u304e\u306e\u3088\u3046\u306b\u3059\u308b\u3002\nHandler.Home\nHandler.Comment\nHandler.YLogined\n\nHandler.YLogined\u3092\u8ffd\u52a0\u3057\u305f\u3002\nconfig/routes\u306b\u8ffd\u52a0\u3059\u308b\u3002\n/ylogined YLoginedR GET\n\nHandler.Home\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3002\n% cp Handler/Home.hs Handler/YLogined.hs\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u5ba3\u8a00\u3092Handler.Home\u304b\u3089Handler.YLogined\u306b\u3059\u308b\u3002\ngetHomeR\u3092getYLoginedR\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\npostHomeR\u306f\u524a\u9664\u3059\u308b\u3002\n% vi Application.hs\n(import Handler.YLogined\u3092\u8ffd\u52a0\u3059\u308b)\n\n\u3053\u308c\u3067\u3001stack exec -- yesod devel\u3092\u3059\u308b\u3002\nhttp://localhost:3000/ylogined \u306b\u63a5\u7d9a\u3057\u3066\u307f\u3088\u3046\u3002\n\n\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\nhttp://localhost:3000/ \u3078\u306e\u63a5\u7d9a\u3092\u3001Yahoo! Japan\u306e\u8a8d\u53ef\u7528\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\nGET\u30e1\u30bd\u30c3\u30c9\u3067\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u308f\u305f\u3059\u3002\n\u307e\u305a\u306f\u3001Data.Text\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3069\u3092\u5c0e\u5165\u3059\u308b\u3002\n% vi Hundler/Home.hs\nimport qualified Data.Text as Text\nimport qualified Data.Text.IO as Text\n\ngetHomeR\u306e\u5185\u5bb9\u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n% vi Hundler/Home.hs\ngetHomeR = do\n        yClient <- lift $\n                Text.concat . Text.lines <$> Text.readFile \"y_clientId.txt\"\n        redirect $\n                \"https://auth.login.yahoo.co.jp/yconnect/v1/authorization?\" <>\n                        \"response_type=code+id_token&\" <>\n                        \"scope=openid+profile&\" <>\n                        \"client_id=\" <> yClientId <> \"&state=hogeru&\" <>\n                        \"nonce=abcdefghijklmnop&\" <>\n                        \"redirect_uri=http://localhost:3000/logined\"\n\nstack exec -- yesod devel\u3068\u3057http://localhost:3000/ \u306b\u63a5\u7d9a\u3059\u308b\u3068\u3001redirect_uri is invalid\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\nhttps://e.developer.yahoo.co.jp/dashboard/ \u306b\u63a5\u7d9a\u3057\u3001\u7de8\u96c6\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u3092http://localhost:3000/ylogined \u306b\u5909\u66f4\u3059\u308b\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u78ba\u8a8d\u3059\u308b\nYahoo! Japan\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u30da\u30fc\u30b8\u306b\u3001\u3055\u3089\u306b\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\u305d\u306e\u3068\u304dcode\u3068state\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u308f\u305f\u3055\u308c\u308b\u3002\u3053\u308c\u3092\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3002\n% vi Hundler/YLogined.hs\ngetYLoginedR = do\n        Just code <- lookupGetParam \"code\"\n        Just state <- lookupGetParam \"state\"\n        print code\n        print state\n        (formWidget, formEnctype) <- generateFormPost sampleForm\n        ...\n\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3001ID\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\nNetwork.HTTP.Simple\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n% vi Hundler/YLogined.hs\nimport Network.HTTP.Simple\n\nByteString\u3092\u3042\u3064\u304b\u3046\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\nimport qualified Data.ByteString as BS\nimport qualified Data.ByteString.Char8 as BSC\n\nBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u306e\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\nimport qualified Data.ByteString.Base64.URL as B64\n\n\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u305f\u3081\u306b.cabal\u30d5\u30a1\u30a4\u30eb\u306elibrary\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u3068\u3053\u308d\u306b\u3064\u304e\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3059\u308b\u3002\n% vi testOpenID.cabal\n, base64-bytestring\n\n\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u3002\n% vi Hundler/YLogined.hs\n...\nprint state\nyClientId <-\n        lift $ BS.concat . BSC.lines <$> BS.readFile \"y_clientId.txt\"\nyClientSecret <-\n        lift $ BS.concat . BSC.lines <$> BS.readFile \"y_clientSecret.txt\"\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3001ID\u30c8\u30fc\u30af\u30f3\u3092\u8981\u6c42\u3059\u308b\u305f\u3081\u306e\u3001Request\u3092\u4f5c\u6210\u3059\u308b\u3002\n% vi Hundler/YLogined.hs\ninitReq <-\n        parseRequest \"https://auth.login.yahoo.co.jp/yconnect/v1/token\"\nlet     yClientIdSecret = B64.encode $ yClientId <> \":\" <> yClientSecret\n        req = setRequestHeader \"Content-Type\"\n                [\"application/x-www-form-urlencoded\"]\n                initReq { method = \"POST\" }\n        req' = setRequestHeader \"Authorization\"\n                [\"Basic \" <> yClientIdSecret] req\n        req'' = setRequestBody (RequestBodyBS $\n                \"grant_type=authorization_code&code=\" <>\n                encodeUtf8 code <>\n                \"&redirect_uri=http://localhost:3000/ylogined\") req'\n\n\u3067\u304d\u3042\u304c\u3063\u305fRequest\u3067Yahoo! Japan\u306b\u63a5\u7d9a\u3057\u3066\u3001\u5fdc\u7b54\u3092\u8868\u793a\u3059\u308b\u3002\nrBody <- getResponseBody <$> httpLBS req''\nprint rBody\n\nJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u8aad\u307f\u8fbc\u3080\u3002\u307e\u305a\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\nimport qualified Data.Aeson as Aeson\nimport qualified Data.HashMap.Lazy as HML\n\n\u30cf\u30c3\u30b7\u30e5\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068ID\u30c8\u30fc\u30af\u30f3\u3068\u3092\u53d6\u308a\u51fa\u3059\u3002\nlet     Just resp = Aeson.decode rBody :: Maybe Aeson.Object\nprint $ keys resp\nlet     Just (String at) = HML.lookup \"access_token\" resp\n        Just (String it) = HML.lookup \"id_token\" resp\nprint at\nprint it\n\n\nID\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u898b\u308b\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\nimport qualified Data.Text as Text\nimport qualified Data.ByteString.Lazy as LBS\n\nID\u30c8\u30fc\u30af\u30f3\u3092\u30d8\u30c3\u30c0\u30fc\u90e8\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u90e8\u3001\u30b7\u30b0\u30cd\u30c1\u30e3\u90e8\u306b\u308f\u3051\u3066\u3001\u524d2\u8005\u306e\u306a\u304b\u307f\u3092\u898b\u3066\u307f\u308b\u3002\nlet     [hd, pl, sg] = Text.splitOn \".\" it\n        [Just hdd, Just pld] = map\n                ((Aeson.decode :: LBS.ByteString -> Maybe Aeson.Object)\n                        . LBS.fromStrict\n                        . either (error . show) id\n                        . B64.decode . encodeUtf8)\n        [hd, pl]\nprint hdd\nprint pld\n\n\nID\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u691c\u8a3c\u3059\u308b\ncryptohash\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002\n% vi testOpenID.cabal\nlibrary\n    ...\n    build-depends:\n        ...\n        , base64-bytestring\n        , cryptohash\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n% vi Handler/YLogined.hs\nimport Crypto.MAC.HMAC\nimport qualified Crypto.Hash.SHA256 as SHA256\n\n\u7f72\u540d\u3092\u78ba\u8a8d\u3059\u308b\u3002\n% vi Hansler/YLogined.hs\n        putStrLn sg\n        lift . BSC.putStrLn . B64.encode\n                . hmac SHA256.hash 64 yClientSecret\n                $ encodeUtf8 hd <> \".\" <> encodeUtf8 pl\n\n\n\u305d\u306e\u4ed6\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u5185\u5bb9\u306a\u3069\u3092\u5165\u624b\u3059\u308b\nYahoo! Japan\u304b\u3089\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\ninitReq2 <- parseRequest $\n        \"https://userinfo.yahooapis.jp/yconnect/v1/attribute?schema=openid\"\nlet     req2 = setRequestHeader\n                \"Authorization\" [\"Bearer \" <> encodeUtf8 at] initReq2\nrBody2 <- getResponseBody <$> httpLBS req2\nlet     Just json2 = Aeson.decode rBody2 :: Maybe Aeson.Object\nmapM_ print $ HML.toList json2\n\n\n\u30b3\u30fc\u30c9\nGitHub\u306b\u516c\u958b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/YoshikuniJujo/testOAuth/releases/tag/qiita_20170220\n\u3053\u308c\u306e/yesod/testOpenID\u4ee5\u4e0b\u3067\u3059\u3002\nYahoo! Japan\u306eOpenID Connect\u3092yesod\u3067\u8a66\u3059\n========================================\n\n\u306f\u3058\u3081\u306b\n-------\n\nSNS\u306a\u3069\u3067\u3001\u307b\u304b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3001\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u95b2\u89a7\u306a\u3069\u3092\u8a31\u3059\u6a5f\u80fd\u304c\u3042\u308b\u3002\u3053\u308c\u304c\u8a8d\u53ef\u3067\u3042\u308a\u3001OAuth\u3068\u3044\u3046\u4ed5\u7d44\u307f\u3067\u3001\u305d\u308c\u304c\u5b9f\u73fe\u3055\u308c\u308b\u3002\u3053\u306eOAuth\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306f\u8a8d\u53ef\u306e\u305f\u3081\u306e\u308f\u304f\u3050\u307f\u3067\u3042\u308a\u3001\u672c\u4eba\u78ba\u8a8d(\u8a8d\u8a3c)\u306e\u305f\u3081\u306e\u6a5f\u80fd\u3067\u306f\u306a\u3044\u3002\n\n\u300c\u8a8d\u53ef\u3092\u3042\u305f\u3048\u3089\u308c\u308b\u306e\u306f\u672c\u4eba\u3060\u3051\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u7406\u5c48\u3067\u3001\u3053\u306e\u300c\u8a8d\u53ef\u300d\u3092\u672c\u4eba\u78ba\u8a8d\u306b\u4f7f\u3046\u5834\u5408\u304c\u3042\u308b\u3002\u3057\u304b\u3057\u3001\u3053\u308c\u3092\u3059\u308b\u3068\u3001\u5927\u304d\u306a\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30db\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u3057\u307e\u3046\u3002\n\n[\u5358\u306a\u308bOAuth 2.0\u3092\u8a8d\u8a3c\u306b\u4f7f\u3046\u3068\u3001\u8eca\u304c\u901a\u308c\u308b\u307b\u3069\u306e\u3069\u3067\u304b\u3044\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30fb\u30db\u30fc\u30eb\u304c\u3067\u304d\u308b](http://www.sakimura.org/2012/02/1487/)\n\nOAuth 2.0\u306e\u308f\u304f\u3050\u307f\u306e\u3046\u3048\u3067\u3001\u304d\u3061\u3093\u3068\u3057\u305f\u672c\u4eba\u78ba\u8a8d(\u8a8d\u8a3c)\u3092\u304a\u3053\u306a\u3046\u4ed5\u7d44\u307f\u304c\u3042\u308b\u3002\u305d\u308c\u304cOpenID Connect\u3060\u3002\n\n\u4f55\u3092\u3059\u308b\u304b\n---------\n\nHaskell\u306b\u3088\u308bWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308bYesod\u3092\u4f7f\u3063\u3066\u3001Yahoo! Japan\u306eOpenID Connect\u306e\u6a5f\u80fd\u3092\u8a66\u3057\u3066\u307f\u308b\u3002\u3064\u304e\u306e\u30da\u30fc\u30b8\u306e\u5185\u5bb9\u3092Yesod\u3067\u5b9f\u88c5\u3057\u305f\u3002\n\n[OpenID Connect\u4f53\u9a13](http://qiita.com/sonedazaurus/items/753a65186f1be7185b39)\n\n\u3053\u306e\u30da\u30fc\u30b8\u3067\u306f\u3001\u304a\u3082\u306b\u30b3\u30fc\u30c9\u306e\u7d39\u4ecb\u3092\u3059\u308b\u3002\u7d30\u304b\u3044\u8aac\u660e\u306b\u3064\u3044\u3066\u306f\u4e0a\u8a18\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u3066\u307b\u3057\u3044\u3002\n\u4e0a\u8a18\u306e\u30da\u30fc\u30b8\u3092\u53c2\u7167\u3057\u305f\u3046\u3048\u3067\u3001Yesod\u3067\u8a66\u305d\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u8a18\u4e8b\u3092\u8aad\u3080\u306e\u304c\u3044\u3044\u304b\u3068\u601d\u3046\u3002\n\n\u524d\u63d0\n----\n\nHaskell\u306eStack\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3059\u308b\u3002\n\u307e\u305f\u3001Yahoo ID\u306f\u53d6\u5f97\u305a\u307f\u3068\u3059\u308b\u3002\n\nYesod\u306b\u3088\u308b\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u3092\u4f5c\u308b\n--------------------------\n\nYesod\u3067\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u3092\u52d5\u304b\u3059\u3002\n\n    % stack new testOpenID yesod-simple && cd testOpenID\n    % stack install yesod-bin cabal-install --install-ghc\n    % stack build\n    % stack exec -- yesod devel\n\n\u3053\u308c\u3067http://localhost:3000/ \u306b\u63a5\u7d9a\u3059\u308b\u3002\u3082\u3057\u304b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u305d\u3093\u306a\u3068\u304d\u306b\u306f\u3001stack ... devel\u3057\u305f\u30bf\u30fc\u30df\u30ca\u30eb\u3067Enter\u3092\u5165\u529b\u3059\u308b\u3068\u3001\u3046\u307e\u304f\u3044\u304f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nYahoo! Japan\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u767b\u9332\u3059\u308b\n------------------------------------\n\nhttps://e.developer.yahoo.co.jp/dashboard/ \u306b\u63a5\u7d9a\u3057\u3001\u300c\u65b0\u3057\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u767a\u300d\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u540d\u3092\u597d\u304d\u306a\u540d\u524d\u306b\u8a2d\u5b9a\u3059\u308b\u3002\u30b5\u30a4\u30c8URL\u3092http://localhost:3000/ \u3068\u3057\u3066\u3001\u30ac\u30a4\u30c9\u30e9\u30a4\u30f3\u3078\u306e\u540c\u610f\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u300c\u78ba\u8a8d\u300d\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3002\u767b\u9332\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3ID\u3068\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u3053\u3046\u3002\n\u30d5\u30a1\u30a4\u30eby_clientId.txt\u3068y_clientSecret.txt\u3092\u3001\u305d\u308c\u305e\u308c\u306e\u5185\u5bb9\u3067\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\n\u30c0\u30df\u30fc\u306e\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\n---------------------\n\n\u30ed\u30b0\u30a4\u30f3\u5f8c\u306e\u30da\u30fc\u30b8\u3068\u3057\u3066\u30c0\u30df\u30fc\u306e\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\u3002\n\n    % vi testOpenID.cabal\n\nlibrary\u306eexposed-modules:\u306e\u3068\u3053\u308d\u306e\u6700\u5f8c\u3092\u3001\u3064\u304e\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n    Handler.Home\n    Handler.Comment\n    Handler.YLogined\n    \nHandler.YLogined\u3092\u8ffd\u52a0\u3057\u305f\u3002\nconfig/routes\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\n    /ylogined YLoginedR GET\n\nHandler.Home\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3002\n\n    % cp Handler/Home.hs Handler/YLogined.hs\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u5ba3\u8a00\u3092Handler.Home\u304b\u3089Handler.YLogined\u306b\u3059\u308b\u3002\ngetHomeR\u3092getYLoginedR\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\npostHomeR\u306f\u524a\u9664\u3059\u308b\u3002\n\n    % vi Application.hs\n    (import Handler.YLogined\u3092\u8ffd\u52a0\u3059\u308b)\n\n\u3053\u308c\u3067\u3001stack exec -- yesod devel\u3092\u3059\u308b\u3002\nhttp://localhost:3000/ylogined \u306b\u63a5\u7d9a\u3057\u3066\u307f\u3088\u3046\u3002\n\n\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\n--------------\n\nhttp://localhost:3000/ \u3078\u306e\u63a5\u7d9a\u3092\u3001Yahoo! Japan\u306e\u8a8d\u53ef\u7528\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3002\nGET\u30e1\u30bd\u30c3\u30c9\u3067\u3044\u304f\u3064\u304b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u308f\u305f\u3059\u3002\n\n\u307e\u305a\u306f\u3001Data.Text\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3069\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    % vi Hundler/Home.hs\n    import qualified Data.Text as Text\n    import qualified Data.Text.IO as Text\n\ngetHomeR\u306e\u5185\u5bb9\u3092\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n\n    % vi Hundler/Home.hs\n    getHomeR = do\n            yClient <- lift $\n                    Text.concat . Text.lines <$> Text.readFile \"y_clientId.txt\"\n            redirect $\n                    \"https://auth.login.yahoo.co.jp/yconnect/v1/authorization?\" <>\n                            \"response_type=code+id_token&\" <>\n                            \"scope=openid+profile&\" <>\n                            \"client_id=\" <> yClientId <> \"&state=hogeru&\" <>\n                            \"nonce=abcdefghijklmnop&\" <>\n                            \"redirect_uri=http://localhost:3000/logined\"\n\nstack exec -- yesod devel\u3068\u3057http://localhost:3000/ \u306b\u63a5\u7d9a\u3059\u308b\u3068\u3001redirect_uri is invalid\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\nhttps://e.developer.yahoo.co.jp/dashboard/ \u306b\u63a5\u7d9a\u3057\u3001\u7de8\u96c6\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30afURL\u3092http://localhost:3000/ylogined \u306b\u5909\u66f4\u3059\u308b\u3002\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u78ba\u8a8d\u3059\u308b\n----------------\n\nYahoo! Japan\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u3068\u3001\u6307\u5b9a\u3057\u305f\u30da\u30fc\u30b8\u306b\u3001\u3055\u3089\u306b\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u3002\u305d\u306e\u3068\u304dcode\u3068state\u3068\u3044\u3046\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u308f\u305f\u3055\u308c\u308b\u3002\u3053\u308c\u3092\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3002\n\n    % vi Hundler/YLogined.hs\n    getYLoginedR = do\n            Just code <- lookupGetParam \"code\"\n            Just state <- lookupGetParam \"state\"\n            print code\n            print state\n            (formWidget, formEnctype) <- generateFormPost sampleForm\n            ...\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3001ID\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\n----------------------------\n\nNetwork.HTTP.Simple\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    % vi Hundler/YLogined.hs\n    import Network.HTTP.Simple\n\nByteString\u3092\u3042\u3064\u304b\u3046\u306e\u3067\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    import qualified Data.ByteString as BS\n    import qualified Data.ByteString.Char8 as BSC\n\nBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u306e\u3067\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    import qualified Data.ByteString.Base64.URL as B64\n\n\u3053\u308c\u3089\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u305f\u3081\u306b.cabal\u30d5\u30a1\u30a4\u30eb\u306elibrary\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u4f9d\u5b58\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u3068\u3053\u308d\u306b\u3064\u304e\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3059\u308b\u3002\n\n    % vi testOpenID.cabal\n    , base64-bytestring\n\n\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u3002\n\n    % vi Hundler/YLogined.hs\n    ...\n    print state\n    yClientId <-\n            lift $ BS.concat . BSC.lines <$> BS.readFile \"y_clientId.txt\"\n    yClientSecret <-\n            lift $ BS.concat . BSC.lines <$> BS.readFile \"y_clientSecret.txt\"\n\n\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3001ID\u30c8\u30fc\u30af\u30f3\u3092\u8981\u6c42\u3059\u308b\u305f\u3081\u306e\u3001Request\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n    % vi Hundler/YLogined.hs\n    initReq <-\n            parseRequest \"https://auth.login.yahoo.co.jp/yconnect/v1/token\"\n    let     yClientIdSecret = B64.encode $ yClientId <> \":\" <> yClientSecret\n            req = setRequestHeader \"Content-Type\"\n                    [\"application/x-www-form-urlencoded\"]\n                    initReq { method = \"POST\" }\n            req' = setRequestHeader \"Authorization\"\n                    [\"Basic \" <> yClientIdSecret] req\n            req'' = setRequestBody (RequestBodyBS $\n                    \"grant_type=authorization_code&code=\" <>\n                    encodeUtf8 code <>\n                    \"&redirect_uri=http://localhost:3000/ylogined\") req'\n\n\u3067\u304d\u3042\u304c\u3063\u305fRequest\u3067Yahoo! Japan\u306b\u63a5\u7d9a\u3057\u3066\u3001\u5fdc\u7b54\u3092\u8868\u793a\u3059\u308b\u3002\n\n    rBody <- getResponseBody <$> httpLBS req''\n    print rBody\n\nJSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092\u30cf\u30c3\u30b7\u30e5\u306b\u8aad\u307f\u8fbc\u3080\u3002\u307e\u305a\u306f\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    import qualified Data.Aeson as Aeson\n    import qualified Data.HashMap.Lazy as HML\n\n\u30cf\u30c3\u30b7\u30e5\u306b\u8aad\u307f\u8fbc\u3093\u3067\u3001\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068ID\u30c8\u30fc\u30af\u30f3\u3068\u3092\u53d6\u308a\u51fa\u3059\u3002\n\n    let     Just resp = Aeson.decode rBody :: Maybe Aeson.Object\n    print $ keys resp\n    let     Just (String at) = HML.lookup \"access_token\" resp\n            Just (String it) = HML.lookup \"id_token\" resp\n    print at\n    print it\n\nID\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u898b\u308b\n------------------\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    import qualified Data.Text as Text\n    import qualified Data.ByteString.Lazy as LBS\n\nID\u30c8\u30fc\u30af\u30f3\u3092\u30d8\u30c3\u30c0\u30fc\u90e8\u3001\u30da\u30a4\u30ed\u30fc\u30c9\u90e8\u3001\u30b7\u30b0\u30cd\u30c1\u30e3\u90e8\u306b\u308f\u3051\u3066\u3001\u524d2\u8005\u306e\u306a\u304b\u307f\u3092\u898b\u3066\u307f\u308b\u3002\n\n    let     [hd, pl, sg] = Text.splitOn \".\" it\n            [Just hdd, Just pld] = map\n                    ((Aeson.decode :: LBS.ByteString -> Maybe Aeson.Object)\n                            . LBS.fromStrict\n                            . either (error . show) id\n                            . B64.decode . encodeUtf8)\n            [hd, pl]\n    print hdd\n    print pld\n\nID\u30c8\u30fc\u30af\u30f3\u306e\u5185\u5bb9\u3092\u691c\u8a3c\u3059\u308b\n---------------------\n\ncryptohash\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\n    % vi testOpenID.cabal\n    library\n        ...\n        build-depends:\n            ...\n            , base64-bytestring\n            , cryptohash\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5c0e\u5165\u3059\u308b\u3002\n\n    % vi Handler/YLogined.hs\n    import Crypto.MAC.HMAC\n    import qualified Crypto.Hash.SHA256 as SHA256\n\n\u7f72\u540d\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n    % vi Hansler/YLogined.hs\n            putStrLn sg\n            lift . BSC.putStrLn . B64.encode\n                    . hmac SHA256.hash 64 yClientSecret\n                    $ encodeUtf8 hd <> \".\" <> encodeUtf8 pl\n\n\u305d\u306e\u4ed6\u306e\u30d7\u30ed\u30d5\u30a3\u30fc\u30eb\u306e\u5185\u5bb9\u306a\u3069\u3092\u5165\u624b\u3059\u308b\n--------------------------------\n\nYahoo! Japan\u304b\u3089\u30e6\u30fc\u30b6\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n    initReq2 <- parseRequest $\n            \"https://userinfo.yahooapis.jp/yconnect/v1/attribute?schema=openid\"\n    let     req2 = setRequestHeader\n                    \"Authorization\" [\"Bearer \" <> encodeUtf8 at] initReq2\n    rBody2 <- getResponseBody <$> httpLBS req2\n    let     Just json2 = Aeson.decode rBody2 :: Maybe Aeson.Object\n    mapM_ print $ HML.toList json2\n\n\u30b3\u30fc\u30c9\n-----\n\nGitHub\u306b\u516c\u958b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttps://github.com/YoshikuniJujo/testOAuth/releases/tag/qiita_20170220\n\n\u3053\u308c\u306e/yesod/testOpenID\u4ee5\u4e0b\u3067\u3059\u3002\n", "tags": ["OAuth", "openid_connect", "yahoo_japan", "Haskell", "yesod"]}