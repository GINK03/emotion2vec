{"tags": ["Java", "java8"], "context": "LocalDate\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u6708\u672b\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u901f\u3055\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5b9f\u884c\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nDELL VOSTRO 1540\nWindows 10 Pro 32bit\nIntel Celelron 2.00 GHZ\n\u30e1\u30e2\u30ea 2.0GB\nHD\u306f\u7d04300GB\n\n\u6708\u672b\u3092\u53d6\u5f97\u3059\u308b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\nrange\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\n\u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\nLocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\uff08@rinp \u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u306e\u3067\u8ffd\u52a0\u3002\uff09\n\n\n\u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u7d50\u679c\n\u4e0a\u8a18\u3092\u305d\u308c\u305e\u308c30000\u56de\u5b9f\u884c\u3057\u3066\u6642\u9593\u3092\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u3001\u30bd\u30fc\u30b9\u3068\u7d50\u679c\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\npackage test;\n\nimport java.time.LocalDate;\nimport java.time.Month;\nimport java.time.temporal.ChronoField;\nimport java.util.function.LongSupplier;\n\npublic class Test {\n\n    // --\u8a08\u6e2c\u7528--\n    private void printProcessingTime(LongSupplier f) {\n        int count = 30000;\n        long start, end;\n        start = System.currentTimeMillis();\n        for (int i = 0; i < count; i++) {\n            f.getAsLong();\n        }\n        end = System.currentTimeMillis();\n        System.out.printf(\"\u51fa\u529b\u78ba\u8a8d:%s, \u8a08\u6e2c %3d: \", f.getAsLong(), end - start);\n        System.out.println();\n    }\n\n    // --\u8a08\u6e2c--\n    public static void main(String[] args) {\n        new Test().test();\n    }\n\n    private void test() {\n        System.out.println(\"range\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.FEBRUARY.getValue(), 1).range(ChronoField.DAY_OF_MONTH).getMaximum();\n        });\n\n        System.out.println(\"\u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.MARCH.getValue(), 1).minusDays(1L).getDayOfMonth();\n        });\n        System.out.println(\"LocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.FEBRUARY.getValue(), 1).lengthOfMonth();\n        });\n    }\n}\n\n\n\u4ee5\u4e0b\u3001\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n\u7d50\u679c\nrange\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c  86: \n\u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c  26: \nLocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c   2: \n\n\nLocalDate#lengthOfMonth\u304c\u4e00\u756a\u901f\u3044\u3067\u3059\u3002\n\n\u4fee\u6b63\u5c65\u6b74\n20161009\n\n\u6587\u8a00\u4fee\u6b63\u3002\n\u6708\u672b\u53d6\u5f97\u65b9\u6cd5\u306b@rinp \u3055\u3093\u306b\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u6cd5\u3092\u8ffd\u52a0\u3002\n\u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3001java.util.function\u3092\u4f7f\u7528\u3002\n\u51fa\u529b\u7d50\u679c\u3082\u518d\u5b9f\u65bd\u3002\n\nLocalDate\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u6708\u672b\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u901f\u3055\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5b9f\u884c\u74b0\u5883\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n+ DELL VOSTRO 1540\n+ Windows 10 Pro 32bit\n+ Intel Celelron 2.00 GHZ\n+ \u30e1\u30e2\u30ea 2.0GB\n+ HD\u306f\u7d04300GB\n\n\u6708\u672b\u3092\u53d6\u5f97\u3059\u308b\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n+ range\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\n+ \u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\n+ LocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\uff08@rinp \u3055\u3093\u306b\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u306e\u3067\u8ffd\u52a0\u3002\uff09\n\n#\u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u7d50\u679c\n\n\u4e0a\u8a18\u3092\u305d\u308c\u305e\u308c30000\u56de\u5b9f\u884c\u3057\u3066\u6642\u9593\u3092\u6bd4\u8f03\u3057\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u3001\u30bd\u30fc\u30b9\u3068\u7d50\u679c\u3067\u3059\u3002\n\n```Java:\u30bd\u30fc\u30b9\npackage test;\n\nimport java.time.LocalDate;\nimport java.time.Month;\nimport java.time.temporal.ChronoField;\nimport java.util.function.LongSupplier;\n\npublic class Test {\n\n    // --\u8a08\u6e2c\u7528--\n    private void printProcessingTime(LongSupplier f) {\n        int count = 30000;\n        long start, end;\n        start = System.currentTimeMillis();\n        for (int i = 0; i < count; i++) {\n            f.getAsLong();\n        }\n        end = System.currentTimeMillis();\n        System.out.printf(\"\u51fa\u529b\u78ba\u8a8d:%s, \u8a08\u6e2c %3d: \", f.getAsLong(), end - start);\n        System.out.println();\n    }\n\n    // --\u8a08\u6e2c--\n    public static void main(String[] args) {\n        new Test().test();\n    }\n\n    private void test() {\n        System.out.println(\"range\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.FEBRUARY.getValue(), 1).range(ChronoField.DAY_OF_MONTH).getMaximum();\n        });\n\n        System.out.println(\"\u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.MARCH.getValue(), 1).minusDays(1L).getDayOfMonth();\n        });\n        System.out.println(\"LocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\");\n        printProcessingTime(() -> {\n            return LocalDate.of(2016, Month.FEBRUARY.getValue(), 1).lengthOfMonth();\n        });\n    }\n}\n```\n\n\u4ee5\u4e0b\u3001\u5b9f\u884c\u7d50\u679c\u3067\u3059\u3002\n\n```DOS:\u7d50\u679c\nrange\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u3001\u6708\u306e\u65e5\u306b\u3064\u3044\u3066\u6700\u5927\u3092\u6c42\u3081\u308b\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c  86: \n\u7fcc\u65e5\u521d\u65e5-1\u3092\u8a2d\u5b9a\u3057\u3066\u6708\u306e\u65e5\u3092\u6c42\u3081\u308b\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c  26: \nLocalDate#lengthOfMonth\u3092\u4f7f\u3046\u3002\n\u51fa\u529b\u78ba\u8a8d:29, \u8a08\u6e2c   2: \n```\n\nLocalDate#lengthOfMonth\u304c\u4e00\u756a\u901f\u3044\u3067\u3059\u3002\n\n#\u4fee\u6b63\u5c65\u6b74\n\n20161009\n\n+ \u6587\u8a00\u4fee\u6b63\u3002\n+ \u6708\u672b\u53d6\u5f97\u65b9\u6cd5\u306b@rinp \u3055\u3093\u306b\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u65b9\u6cd5\u3092\u8ffd\u52a0\u3002\n+ \u30bd\u30fc\u30b9\u3092\u4fee\u6b63\u3057\u3001java.util.function\u3092\u4f7f\u7528\u3002\n+ \u51fa\u529b\u7d50\u679c\u3082\u518d\u5b9f\u65bd\u3002\n"}