{"context": " More than 1 year has passed since last update.Snippets \u7684\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306f\u3053\u3061\u3089\nhttp://www.barik.net/archive/2004/11/25/185507/\n\nSource And Destination\n%eax \u3092 %ebx \u306b\u30b3\u30d4\u30fc\nmov %eax, %ebx \n\n\nGCC Syntax\nInline Assembly \u306e\u66f8\u304d\u65b9\nasm ( assembler template\n      : output operands\n      : input operands\n      : list of clobbered registers       \n     );\n\n\nSimple Inline Assembly\nasm (\"shrl $8, %0\"\n     : \"=r\" (answer) \n     : \"r\" (operand) \n     : \"cc\");\n\nshrl\uff08\u53f3\u30b7\u30d5\u30c8\u547d\u4ee4\uff09\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30a2\u30bb\u30f3\u30d6\u30e9\u3002\u305d\u306e\u30a4\u30f3\u30d7\u30c3\u30c8\u304c operand (C\u306e\u5909\u6570)\u3067\u51fa\u529b\u304c answer\u3002\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306e\u4e2d\u8eab\u306f\u3001\u4f7f\u7528\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u3002r \u306f\u7279\u5b9a\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u6307\u5b9a\u305b\u305a\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u308b\u3002\u51fa\u529b\u306b\u306f = \u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002cc \u306f\u5b9f\u884c\u6761\u4ef6\u3002$8 \uff1d \uff18\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\uff08\u305f\u3076\u3093\uff09\u3002\n\nOptimization\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6700\u9069\u5316\u3092\u4efb\u305b\u308b\u3068\u826f\u3044\u3051\u3069\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u3067\u66f8\u3044\u305f\u65b9\u304c\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u4f8b\u3068\u3057\u3066MSB\u306e\u6c42\u3081\u308b\u3002\nint msb(int number)\n{ \n  asm (\"bsrl %1, %0\" \n       : \"=r\" (position) \n       : \"r\" (number));\n\n  return position\n}\n\n\u3092 for \u3067\u66f8\u304f\u3068\u5927\u5909\u3067\u3057\u3087\uff1f\u3063\u3068\u3053\u3068\u3067\u3002\nlong i;\nfor (i = (number >> 1), \n        position = 0; i != 0; ++position)\n  i >>= 1;\n\n\n\u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\n\u30ab\u30fc\u30cd\u30eb\u30b3\u30fc\u30c9\u3067\u30a2\u30bb\u30f3\u30d6\u30e9\u8aad\u3080\u306e\u3092\u3044\u3064\u3082\u3042\u304d\u3089\u3081\u3066\u305f\u306e\u3067\u3001\u305d\u308d\u305d\u308d\u8abf\u3079\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3057\u3066\u3002bsrl \u3067\u691c\u7d22\u3057\u305f\u308f\u3051\u3067\u3002\u8aad\u307f\u305f\u304b\u3063\u305f\u306e\u306f\u3053\u3061\u3089\u3002\n\narch/x86/include/asm/bitops.h\nstatic inline int fls(int x)\n{\n        int r;\n#ifdef CONFIG_X86_CMOV\n        asm(\"bsrl %1,%0\\n\\t\"\n            \"cmovzl %2,%0\"\n            : \"=&r\" (r) : \"rm\" (x), \"rm\" (-1));\n#else  \n        asm(\"bsrl %1,%0\\n\\t\"\n            \"jnz 1f\\n\\t\"\n            \"movl $-1,%0\\n\"\n            \"1:\" : \"=r\" (r) : \"rm\" (x));\n#endif \n        return r + 1;\n}\n\n\n\u30e1\u30e2\uff1a\"m\" \u306f\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30e1\u30e2\u30ea\u3002\"&\"\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u5225\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u3059\u308b\u3002\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092 crash \u3067\u898b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3066\u308b\u3002\nmov    $0xffffffff,%ebx\nbsr    %r8d,%eax\ncmove  %ebx,%eax\n\n\u95a2\u6570\u304c inline \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001%r8d = \"rm\" (x) \u306e\u4ee3\u5165\u90e8\u306f\u547c\u3073\u51fa\u3057\u5074\u306e\u30b3\u30fc\u30c9\u3067\u90fd\u5ea6\u5909\u308f\u308b\u306e\u3067\u7701\u7565\u3002\n\n\u5408\u308f\u305b\u3066\u8aad\u307f\u305f\u3044\n\u3053\u3061\u3089\u3082\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b5\u30a4\u30c8\u304b\u3089\u3002\u611f\u8b1d\u306e\u6c17\u6301\u3061\u304c\u6b62\u307e\u3089\u306a\u3044\u3002\n* Linux Assembly HOWTO\n* Inline assembly for x86 in Linux\n* x86.org Processor Manuals\n\u305d\u306e\u4ed6\u3001ARM\u3060\u3051\u3069\u3002\n* ARM GCC Inline Assembler Cookbook\n\u305d\u3057\u3066\u65e5\u672c\u8a9e\u304c\u4e00\u756a\u8a73\u3057\u304b\u3063\u305f\u3068\u304b orz\n* GCC Inline Assembler\n\nSnippets \u7684\u306b\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u30aa\u30ea\u30b8\u30ca\u30eb\u306f\u3053\u3061\u3089\nhttp://www.barik.net/archive/2004/11/25/185507/\n\n## Source And Destination\n\n%eax \u3092 %ebx \u306b\u30b3\u30d4\u30fc\n\n```assmble:\nmov %eax, %ebx \n```\n\n## GCC Syntax\n\nInline Assembly \u306e\u66f8\u304d\u65b9\n\n```C:\nasm ( assembler template\n      : output operands\n      : input operands\n      : list of clobbered registers       \n     );\n```\n\n## \tSimple Inline Assembly\n\n```C:\nasm (\"shrl $8, %0\"\n     : \"=r\" (answer) \n     : \"r\" (operand) \n     : \"cc\");\n```\n\nshrl\uff08\u53f3\u30b7\u30d5\u30c8\u547d\u4ee4\uff09\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u30a2\u30bb\u30f3\u30d6\u30e9\u3002\u305d\u306e\u30a4\u30f3\u30d7\u30c3\u30c8\u304c operand (C\u306e\u5909\u6570)\u3067\u51fa\u529b\u304c answer\u3002\u30c0\u30d6\u30eb\u30af\u30aa\u30fc\u30c8\u306e\u4e2d\u8eab\u306f\u3001\u4f7f\u7528\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u3002r \u306f\u7279\u5b9a\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u6307\u5b9a\u305b\u305a\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u308b\u3002\u51fa\u529b\u306b\u306f = \u3092\u66f8\u304d\u307e\u3057\u3087\u3046\u3002cc \u306f\u5b9f\u884c\u6761\u4ef6\u3002$8 \uff1d \uff18\u30d3\u30c3\u30c8\u30b7\u30d5\u30c8\uff08\u305f\u3076\u3093\uff09\u3002\n\n## Optimization\n\n\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6700\u9069\u5316\u3092\u4efb\u305b\u308b\u3068\u826f\u3044\u3051\u3069\u3001\u30a2\u30bb\u30f3\u30d6\u30e9\u3067\u66f8\u3044\u305f\u65b9\u304c\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u4f8b\u3068\u3057\u3066MSB\u306e\u6c42\u3081\u308b\u3002\n\n```C:\nint msb(int number)\n{ \n  asm (\"bsrl %1, %0\" \n       : \"=r\" (position) \n       : \"r\" (number));\n\n  return position\n}\n```\n\n\u3092 for \u3067\u66f8\u304f\u3068\u5927\u5909\u3067\u3057\u3087\uff1f\u3063\u3068\u3053\u3068\u3067\u3002\n\n```C:\nlong i;\nfor (i = (number >> 1), \n        position = 0; i != 0; ++position)\n  i >>= 1;\n```\n\n## \u3069\u3046\u3057\u3066\u3053\u3046\u306a\u3063\u305f\n\n\u30ab\u30fc\u30cd\u30eb\u30b3\u30fc\u30c9\u3067\u30a2\u30bb\u30f3\u30d6\u30e9\u8aad\u3080\u306e\u3092\u3044\u3064\u3082\u3042\u304d\u3089\u3081\u3066\u305f\u306e\u3067\u3001\u305d\u308d\u305d\u308d\u8abf\u3079\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3057\u3066\u3002bsrl \u3067\u691c\u7d22\u3057\u305f\u308f\u3051\u3067\u3002\u8aad\u307f\u305f\u304b\u3063\u305f\u306e\u306f\u3053\u3061\u3089\u3002\n\n```C:arch/x86/include/asm/bitops.h\nstatic inline int fls(int x)\n{\n        int r;\n#ifdef CONFIG_X86_CMOV\n        asm(\"bsrl %1,%0\\n\\t\"\n            \"cmovzl %2,%0\"\n            : \"=&r\" (r) : \"rm\" (x), \"rm\" (-1));\n#else  \n        asm(\"bsrl %1,%0\\n\\t\"\n            \"jnz 1f\\n\\t\"\n            \"movl $-1,%0\\n\"\n            \"1:\" : \"=r\" (r) : \"rm\" (x));\n#endif \n        return r + 1;\n}\n```\n\n\u30e1\u30e2\uff1a\"m\" \u306f\u30b9\u30bf\u30c6\u30a3\u30c3\u30af\u30e1\u30e2\u30ea\u3002\"&\"\u306f\u30a4\u30f3\u30d7\u30c3\u30c8\u3068\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8\u3092\u5225\u306e\u30ec\u30b8\u30b9\u30bf\u306b\u3059\u308b\u3002\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092 crash \u3067\u898b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u3066\u308b\u3002\n\n```assemble:\nmov    $0xffffffff,%ebx\nbsr    %r8d,%eax\ncmove  %ebx,%eax\n```\n\n\u95a2\u6570\u304c inline \u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001```%r8d = \"rm\" (x)``` \u306e\u4ee3\u5165\u90e8\u306f\u547c\u3073\u51fa\u3057\u5074\u306e\u30b3\u30fc\u30c9\u3067\u90fd\u5ea6\u5909\u308f\u308b\u306e\u3067\u7701\u7565\u3002\n\n## \u5408\u308f\u305b\u3066\u8aad\u307f\u305f\u3044\n\u3053\u3061\u3089\u3082\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30b5\u30a4\u30c8\u304b\u3089\u3002\u611f\u8b1d\u306e\u6c17\u6301\u3061\u304c\u6b62\u307e\u3089\u306a\u3044\u3002\n* [Linux Assembly HOWTO](http://www.tldp.org/HOWTO/Assembly-HOWTO/index.html)\n* [Inline assembly for x86 in Linux](http://www-106.ibm.com/developerworks/library/l-ia.html)\n* [x86.org Processor Manuals](http://www.intel.com/content/www/us/en/processors/architectures-software-developer-manuals.html)\n\n\u305d\u306e\u4ed6\u3001ARM\u3060\u3051\u3069\u3002\n* [ARM GCC Inline Assembler Cookbook](http://www.ethernut.de/en/documents/arm-inline-asm.html)\n\n\u305d\u3057\u3066\u65e5\u672c\u8a9e\u304c\u4e00\u756a\u8a73\u3057\u304b\u3063\u305f\u3068\u304b orz\n* [GCC Inline Assembler](http://caspar.hazymoon.jp/OpenBSD/annex/gcc_inline_asm.html)\n", "tags": ["assembly"]}