{"context": " More than 1 year has passed since last update.Python\u3067\u4e3b\u3060\u3063\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u8a18\u8ff0\u3059\u308b\u3002\nPython\u306f2.x\u30683.x\u4e21\u65b9\u3067Windows\u74b0\u5883\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u3002\n\u307e\u305f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u306eT01Prefecture.zip\u3092\u89e3\u51cd\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3068\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3082\u306e\u3068\u3059\u308b\u3002\nPHP\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u5165\u9580\u8b1b\u5ea7 \nhttp://php5.seesaa.net/article/61269550.html\n\nMySQL\n\n\u74b0\u5883\nPython2.7 \u307e\u305f\u306f3.3\nMySQL 5.6.15\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\n\u30c6\u30fc\u30d6\u30eb \nCREATE TABLE `t01prefecture` (\n  `PREF_CD` int(3) NOT NULL DEFAULT '0',\n  `PREF_NAME` varchar(10) DEFAULT NULL,\n  PRIMARY KEY (`PREF_CD`)\n) ENGINE=InnoDB D\n\n\u5358\u4e00\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u8fd4\u3059\u30b9\u30c8\u30a2\u30c9 \nDELIMITER $$\nCREATE DEFINER=`username`@`%` PROCEDURE `test_sp`(IN fromNo INT,\n                                                  IN toNo INT)\nBEGIN\n    select * from t01prefecture WHERE PREF_CD BETWEEN fromNo AND toNo ;\nEND$$\nDELIMITER ;\n\n\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u8fd4\u3059\u30b9\u30c8\u30a2\u30c9 \nDELIMITER $$\nCREATE DEFINER=`username`@`%` PROCEDURE `test_sp2`(IN cd1 INT,IN cd2 INT)\nBEGIN\n  select * from t01prefecture WHERE PREF_CD = cd1;\n  select * from t01prefecture WHERE PREF_CD = cd2;\n\nEND$$\nDELIMITER ;\n\nFunction\u306e\u4f8b \nDELIMITER $$\nCREATE DEFINER=`username`@`%` FUNCTION `test_fn`(cd INT) RETURNS varchar(10) CHARSET utf8\nBEGIN\n    DECLARE ret VARCHAR(10);\n    SELECT PREF_NAME INTO ret  FROM t01prefecture WHERE PREF_CD = cd;\n\nRETURN ret;\nEND$$\nDELIMITER ;\n\n\nPython\u306e\u30b3\u30fc\u30c9\nmysql-connector-python\u3000\u3092\u4f7f\u7528\u3059\u308b\nhttp://dev.mysql.com/downloads/connector/python/\n# -*- coding: cp932 -*-\n# mysql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install mysql-connector-python\nimport mysql.connector\n\ntry:\n    cnn = mysql.connector.connect(host='localhost',\n                                  port=3306,\n                                  db='Sample001',\n                                  user='root',\n                                  passwd='root',\n                                  charset=\"cp932\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %s\"\"\" , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u738b\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.rollback()\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.callproc(\"test_sp\", (from_id, to_id))\n    for rs in cur.stored_results():\n        print(\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = rs.fetchall()\n        for row in rows:\n            print (\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13(\u8907\u6570\uff09==================\")\n    cur.callproc(\"test_sp2\", (1, 100))\n    for rs in cur.stored_results():\n        print(\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = rs.fetchall()\n        for row in rows:\n            print (\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    cur.execute(\"\"\"SELECT test_fn(%s)\"\"\" , (pref_cd,))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"code:%d name:%s\" % (pref_cd, row[0]))\n\n    cur.close()\n    cnn.close()\nexcept (mysql.connector.errors.ProgrammingError) as e:\n    print (e)\n\n\n\u4f7f\u7528\u611f\n\u30fbMYSQL\u306e\u30b9\u30c8\u30a2\u30c9\u306fSQLSERVER\u306b\u8fd1\u3044\u611f\u3058\u3002\n\u30fb\u30b9\u30c8\u30a2\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3042\u3068\u306f\u3001 cur.stored_results\u306b\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u3002\n\u30fbMySQL-python\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\u304c3.x\u7cfb\u3067\u52d5\u4f5c\u3057\u306a\u3044\u3002\u4f7f\u3044\u65b9\u306f\u3060\u3044\u305f\u3044\u540c\u3058\u3002\nhttp://sourceforge.net/projects/mysql-python/\n\nSQLSERVER\n\n\u74b0\u5883\nPython2.7 or 3.3\nSQLSERVER EXPRESS 2012\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\nSQL SERVER\u63a5\u7d9a\u3092\u8a31\u53ef\u3059\u308b\u3002\n\n\u30c6\u30fc\u30d6\u30eb \nCREATE TABLE [dbo].[T01Prefecture](\n    [PREF_CD] [int] NOT NULL,\n    [PREF_NAME] [varchar](10) NULL,\nPRIMARY KEY CLUSTERED\n(\n    [PREF_CD] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\n\n\u5358\u4e00\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u304b\u3048\u3059\u30b9\u30c8\u30a2\u30c9 \nCREATE PROCEDURE [dbo].[test_sp]\n    @from INT,\n    @to INT\nAS\nBEGIN\n    -- SET NOCOUNT ON added to prevent extra result sets from\n    -- interfering with SELECT statements.\n    SET NOCOUNT ON;\n\n    -- Insert statements for procedure here\n    SELECT * FROM T01Prefecture WHERE PREF_CD BETWEEN @from AND @to\nEND\n\n\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u304b\u3048\u3059\u30b9\u30c8\u30a2\u30c9 \n\nCREATE PROCEDURE [dbo].[test_sp2]\n    @cd1 INT,\n    @cd2 INT\nAS\nBEGIN\n    -- SET NOCOUNT ON added to prevent extra result sets from\n    -- interfering with SELECT statements.\n    SET NOCOUNT ON;\n\n    -- Insert statements for procedure here\n    SELECT * FROM T01Prefecture WHERE PREF_CD = @cd1\n    SELECT * FROM T01Prefecture WHERE PREF_CD = @cd2\nEND\n\n\nPython\u306e\u30b3\u30fc\u30c9\u3000\n\nSQLSERVER\u3092\u76f4\u63a5\u64cd\u4f5c\npymssql\nhttp://pymssql.org/en/latest/\n\u52d5\u4f5c\u304c\u4e0d\u5b89\u5b9a\nPython2.7(32bit) \u3067\u306f\u4e00\u5fdc\u52d5\u4f5c\u3059\u308b\u3002\nPython3.3(64bit) \u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u3089\u3067\u304d\u306a\u3044\u3002\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n# pymssql\u306fVARCHAR\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u3084\u3081\u3068\u304f\u3002\n#easy_install pymssql\n\nimport pymssql\n\n\ncnn = pymssql.connect(host=\"127.0.0.1\\SQLEXPRESS\", user=\"sa\", password=\"xxxx\", database=\"Sample001\")\ncur = cnn.cursor()\n\n#\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\npref_cd = 100\ncur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %d\"\"\"\n            % (pref_cd,))\ncnn.commit()\n\nprint(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\nprint(\"VARCHAR\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\")\nfrom_id = 45\nto_id = 999\ncur.execute(\"\"\"SELECT PREF_CD, PREF_NAME FROM T01Prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id))\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n    # print(\"%d %s\" % (row[0], row[1])) #Error\u306b\u306a\u308b\n    # VARCHAR\u3092\u53d6\u308a\u6271\u3063\u305f\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u89e3\u6790\u304c\u4e0d\u6b63\n    # CP932\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092UNICODE\u3068\u3057\u3066\u6271\u304a\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\nprint(\"VARCHAR\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6271\u3048\u306a\u3044\u306e\u3067NVARCHAR\u306b\u5909\u63db\u3059\u308b\")\n# VARCHAR\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6271\u3048\u306a\u3044\u306e\u3067NVARCHAR\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\ncur.execute(\"\"\"SELECT PREF_CD,CAST(PREF_NAME  AS NVARCHAR) FROM T01Prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id))\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n    print(\"%d %s\" % (row[0], row[1]))\n\nprint(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\npref_cd = 100\npref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name))\n\npref_cd = 101\npref_name = \"\u91ce\u671b\u306e\u56fd\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name,))\ncnn.commit()\n\nprint(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\npref_cd = 102\npref_name = \"\u30ed\u30fc\u30eb\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name,))\ncnn.rollback()\n\n\ncur.execute(\"\"\"SELECT PREF_CD, CAST(PREF_NAME AS NVARCHAR) FROM t01prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id, ))\nrows = cur.fetchall()\nfor row in rows:\n    print(\"%d %s\" % (row[0], row[1]))\n\nprint(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\ncur.execute(\"\"\"exec test_sp %d, %d \"\"\" , (from_id, to_id, ))\nrows = cur.fetchall()\nfor row in rows:\n    #\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\n    #print(\"%d %s\" % (row[0], row[1]))\n    print(row)\n\nprint(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570==========================\")\ncur.execute(\"\"\"exec test_sp2 %d, %d \"\"\" , (1, 10, ))\nfor row in rows:\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            #print(\"%d %s\" % (row[0], row[1]))\n            print(row)\n        if not cur.nextset():\n            break\n\ncur.close()\ncnn.close()\n\n\n\nODBC\u7d4c\u7531\npyodbc\u306e\u4f7f\u7528\uff1a \nhttps://code.google.com/p/pyodbc/\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install pyodbc\n\nimport pyodbc\n\ntry:\n    cnn = pyodbc.connect(\"DRIVER={SQL Server};SERVER=127.0.0.1\\SQLEXPRESS;\" +\n                         \"UID=sa;PWD=XXXX;DATABASE=Sample001\")\n    cur = cnn.cursor()\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= ?\"\"\", pref_cd)\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n    cnn.rollback()\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.execute(\"\"\"exec test_sp ?, ? \"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570 ====================\")\n    cur.execute(\"\"\"exec test_sp2 ?, ? \"\"\" , 1, 10)\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            print(\"%d %s\" % (row[0], row[1]))\n        if not cur.nextset():\n            break\n\n    cur.close()\n    cnn.close()\n\nexcept (pyodbc.Error) as e:\n    print (e)\n    print (e.args[1])\n\n\npypyodbc\u306e\u4f7f\u7528\u4f8b\uff1a \nhttps://code.google.com/p/pypyodbc/\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install pypyodbc\n\nimport pypyodbc\n\ntry:\n    cnn = pypyodbc.connect(\"DRIVER={SQL Server};SERVER=127.0.0.1\\SQLEXPRESS;UID=sa;PWD=xxxxx;DATABASE=Sample001\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= ?\"\"\"\n                , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\n    cnn.rollback()\n\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.execute(\"\"\"exec test_sp ?, ? \"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570 ==========================\")\n    cur.execute(\"\"\"exec test_sp2 ?, ? \"\"\" , (1, 10, ))\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            print(\"%d %s\" % (row[0], row[1]))\n        if not cur.nextset():\n            break\n\n    cur.close()\n    cnn.close()\nexcept (pypyodbc.DatabaseError) as e:\n    print (e.args[1])\n\n\n\n\u4f7f\u7528\u611f\npymssql\u306fODBC\u3092\u7d4c\u7531\u305b\u305a\u306b\u4f7f\u7528\u3067\u304d\u308b\u304c\u3001\u52d5\u4f5c\u304c\u6975\u3081\u3066\u4e0d\u5b89\u5b9a\u3002\nVARCHAR\u306e\u6319\u52d5\u304c\u3042\u3084\u3057\u304f\u3066\u3001NVARCHAR\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u306a\u3044\u3068\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\n\u307e\u305f\u300164bit\u306ePython3.3\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u3089\u3067\u304d\u306a\u3044\u3002\nODBC\u7d4c\u7531\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3044\u305a\u308c\u3082\u52d5\u4f5c\u3057\u305f\u3002\nWindows\u4ee5\u5916\u3067\u78ba\u8a8d\u306f\u3057\u3066\u3044\u306a\u3044\u304c\u3001\u30b5\u30dd\u30fc\u30c8\u306f\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u3002\n\nORACLE\n\n\u74b0\u5883\nPython 2.7 \u307e\u305f\u306f 3.3\nOracle11\n1.Oracle\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u3053\u306e\u969b\u3001\u958b\u767a\u8005\u7528\u306e\u74b0\u5883\u3092\u3064\u304f\u308b\u3002\n\u3000\n2.\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001easy_install\u3059\u308b\u3002\n   cx_Oracle\nhttp://cx-oracle.sourceforge.net/\n\nPython\u306e\u30b3\u30fc\u30c9\n# -*- coding: cp932 -*-\n# cx_Oracle\u3092\u7528\u3044\u305fPython\u3067\u306eORACLE\u64cd\u4f5c\n#1.Oracle\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n#\u3000\u3053\u306e\u969b\u3001\u958b\u767a\u8005\u7528\u306e\u74b0\u5883\u3092\u3064\u304f\u308b\u3002\n#\u3000\uff08\u304a\u305d\u3089\u304f\u3001OCI\u304c\u5fc5\u8981\uff1f\uff09\n#\u3000\n#2.\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001easy_install\u3059\u308b\u3002\n#  cx_Oracle\n#  http://cx-oracle.sourceforge.net/\nimport cx_Oracle\nimport os\nos.environ[\"NLS_LANG\"] = \"JAPANESE_JAPAN.JA16SJISTILDE\"\ntry:\n    tns = cx_Oracle.makedsn(\"localhost\", 1521, \"Sample\")\n    conn = cx_Oracle.connect(\"user\", \"pass\", tns)\n    cur = conn.cursor()\n    from_cd = 45\n    to_cd = 200\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"===================\")\n    print (\"100\u3092\u6d88\u3059\")\n    cur.execute(\"\"\"DELETE FROM T01PREFECTURE WHERE PREF_CD=:arg1\"\"\",\n                arg1=100)\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"------------------\")\n    print (\"100 \u3092\u8ffd\u52a0\")\n    cur.execute(\"\"\"INSERT INTO T01PREFECTURE\n                VALUES (:arg1, :arg2)\"\"\",\n                arg1=100,\n                arg2=\"\u3042\u305f\u305f\")\n    conn.commit()\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"===================\")\n    print (\"101\u8ffd\u52a0\")\n    cur.execute(\"\"\"INSERT INTO T01PREFECTURE\n                VALUES (:arg1, :arg2)\"\"\",\n                arg1=101,\n                arg2=\"\u5317\u6597\")\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"------------------\")\n    print (\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\")\n    conn.rollback()\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\nexcept (cx_Oracle.DatabaseError) as ex:\n    error, = ex.args\n    print (error.message)\n\n\n\u4f7f\u7528\u611f\nOCI\u7d4c\u7531\u3067\u64cd\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001ORACLE\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u3002\n\u63a5\u7d9a\u65b9\u6cd5\u306b\u7656\u304c\u3042\u308b\u3002\u3042\u3068\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u6307\u5b9a\u306f\u74b0\u5883\u5909\u6570\u3067\u304a\u3053\u306a\u3046\u3002\nORACLE\u306ePL/SQL\u306fSQLSERVER\u3068\u9055\u3063\u3066\u7d50\u679c\u30bb\u30c3\u30c8\u8fd4\u3055\u306a\u3044\u3002\n\uff08\u914d\u5217\u3092\u8fd4\u305b\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u9762\u5012\u306a\u306e\u3067\u5b9f\u9a13\u3057\u3066\u3044\u306a\u3044\uff09\n\u660e\u793a\u7684\u306bCOMMIT\u3057\u306a\u3044\u3068\u5909\u66f4\u306f\u7834\u68c4\u3055\u308c\u308b\u3002\n\nPostgresql\n\n\u74b0\u5883\nPython 2.x / 3.x\nPostgresSQL 9.3\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066psycopg2\u3092\u3064\u304b\u3046\nWindows\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066Exe\u3092\u5b9f\u884c\nhttp://www.stickpeople.com/projects/python/win-psycopg/\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\n\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\nCREATE TABLE t01prefecture\n(\n  pref_cd integer NOT NULL,\n  pref_name character varying(10),\n  CONSTRAINT t01prefecture_pkey PRIMARY KEY (pref_cd)\n)\nWITH (\n  OIDS=FALSE\n);\nALTER TABLE t01prefecture\n  OWNER TO postgres;\n\nPostgresSQL\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u95a2\u6570 \nCREATE OR REPLACE FUNCTION test_sp(IN from_cd integer, IN to_cd integer)\n  RETURNS TABLE(code integer, name varchar) AS\n$$\nDECLARE\nBEGIN\n    RETURN QUERY SELECT PREF_CD,PREF_NAME FROM t01Prefecture\n            WHERE PREF_CD BETWEEN from_cd AND to_cd;\nEND;\n$$ LANGUAGE plpgsql;\n\n\nPython\u306e\u30b3\u30fc\u30c9\n# -*- coding: cp932 -*-\n# Winddows \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n# \u3000http://www.stickpeople.com/projects/python/win-psycopg/\n# Python3.x\u306e\u5834\u5408\u3001unicode(row[1],'utf-8') \u306f\u4e0d\u8981\u3002\n#\nimport psycopg2\n\ntry:\n    cnn = psycopg2.connect(\"dbname=Sample001 host=localhost user=postgres password=xxxxx\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %s\"\"\"\n                , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = u\"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = u\"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0],unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0],row[1]))\n\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = u\"\u30ed\u30fc\u30eb\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"-------------------------\")\n    cnn.rollback()\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9==========================\")\n    cur.execute(\"\"\"SELECT * FROM test_sp(%s,%s)\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    cur.close()\n    cnn.close()\n\nexcept (psycopg2.OperationalError) as e:\n    print (e)\n\n\n\n\u4f7f\u7528\u611f\nPython2.X\u306f\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u304cUTF8\u3067\u5e30\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u4e00\u65e6UNICODE\u306b\u5909\u63db\u3057\u3066\u3084\u3089\u306d\u3070\u306a\u3089\u306a\u3044\u3002\nPython3\u7cfb\u306f\u4e0d\u8981\u3002\nPostgres\u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306fORACLE\u306ePL/SQL\u306b\u8fd1\u3044\u3002\n\u305f\u3060\u3001\u30c6\u30fc\u30d6\u30eb\u578b\u3092\u623b\u308a\u5024\u306b\u3059\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\nSQLite\n\n\u74b0\u5883\n\u7279\u8a18\u4e8b\u9805\u306a\u3057\u3002\nPython2.5\u4ee5\u964d\u306a\u3089\u6a19\u6e96\u3067SQLITE3\u304c\u64cd\u4f5c\u3067\u304d\u308b\u306f\u305a\u3002\n\nPython\u306e\u30b3\u30fc\u30c9\n# -*- coding: cp932 -*-\n# sqlite3\u306fPython2.5\u304b\u3089\u4ee5\u964d\u304b\u3089\u6a19\u6e96\u3067\u3042\u308b\u306f\u305a.\nimport sqlite3\nconn = sqlite3.connect('test.sqlite3')\nsql = '''CREATE TABLE  IF NOT EXISTS  t01prefecture(\n                         pref_cd INTEGER,\n                         pref_name TEXT);'''\nconn.execute(sql)\n\nconn.execute(u\"DELETE FROM t01prefecture\")\n\n#\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13\npref_cd = 100\npref_name = u\"\u30e2\u30c6\u30e2\u30c6\u56fd\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name))\n\npref_cd = 101\npref_name = u\"\u91ce\u671b\u306e\u56fd\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\nconn.commit()\n\n# \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13\npref_cd = 102\npref_name = u\"back\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\nconn.rollback()\n\nrows = conn.execute(u'SELECT * FROM t01prefecture WHERE pref_cd > ?', (0,))\nfor row in rows:\n    print(u\"%d %s\" % (row[0], row[1]))\n\n# \u30e6\u30fc\u30b6\u5b9a\u7fa9\n# \u6587\u5b57\u3092\u9023\u7d50\u3059\u308b\u306e\u307f\nclass UserDef:\n    def __init__(self):\n        self.values = []\n    def step(self, value):\n        self.values.append(value)\n    def finalize(self):\n        return \"/\".join(map(str, self.values)) \n\nconn.create_aggregate(\"userdef\", 1, UserDef)\nrows = conn.execute(u'SELECT userdef(PREF_NAME) FROM t01prefecture')\nfor row in rows:\n    print(u\"%s\" % (row[0]))\n\nconn.close()\n\n\n\u4f7f\u7528\u611f\n\u3044\u307e\u307e\u3067\u306eDB\u3068\u9055\u3044\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3002\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u95a2\u6570\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002\nPython\u3067\u4e3b\u3060\u3063\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u3092\u8a18\u8ff0\u3059\u308b\u3002\nPython\u306f2.x\u30683.x\u4e21\u65b9\u3067Windows\u74b0\u5883\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u3002\n\n\u307e\u305f\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u4e0b\u8a18\u306e\u30da\u30fc\u30b8\u306eT01Prefecture.zip\u3092\u89e3\u51cd\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3068\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3082\u306e\u3068\u3059\u308b\u3002\n\n __PHP\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u521d\u5fc3\u8005\u5165\u9580\u8b1b\u5ea7__ \nhttp://php5.seesaa.net/article/61269550.html\n\n#MySQL\n##\u74b0\u5883\nPython2.7 \u307e\u305f\u306f3.3\nMySQL 5.6.15\n\n\n##\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\n\n __\u30c6\u30fc\u30d6\u30eb__ \n\n```sql\nCREATE TABLE `t01prefecture` (\n  `PREF_CD` int(3) NOT NULL DEFAULT '0',\n  `PREF_NAME` varchar(10) DEFAULT NULL,\n  PRIMARY KEY (`PREF_CD`)\n) ENGINE=InnoDB D\n```\n\n __\u5358\u4e00\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u8fd4\u3059\u30b9\u30c8\u30a2\u30c9__ \n\n```sql\nDELIMITER $$\nCREATE DEFINER=`username`@`%` PROCEDURE `test_sp`(IN fromNo INT,\n                                                  IN toNo INT)\nBEGIN\n    select * from t01prefecture WHERE PREF_CD BETWEEN fromNo AND toNo ;\nEND$$\nDELIMITER ;\n```\n\n __\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u8fd4\u3059\u30b9\u30c8\u30a2\u30c9__ \n\n```sql\nDELIMITER $$\nCREATE DEFINER=`username`@`%` PROCEDURE `test_sp2`(IN cd1 INT,IN cd2 INT)\nBEGIN\n  select * from t01prefecture WHERE PREF_CD = cd1;\n  select * from t01prefecture WHERE PREF_CD = cd2;\n\nEND$$\nDELIMITER ;\n```\n\n__Function\u306e\u4f8b__ \n\n```\nDELIMITER $$\nCREATE DEFINER=`username`@`%` FUNCTION `test_fn`(cd INT) RETURNS varchar(10) CHARSET utf8\nBEGIN\n    DECLARE ret VARCHAR(10);\n    SELECT PREF_NAME INTO ret  FROM t01prefecture WHERE PREF_CD = cd;\n   \nRETURN ret;\nEND$$\nDELIMITER ;\n```\n\n##Python\u306e\u30b3\u30fc\u30c9\nmysql-connector-python\u3000\u3092\u4f7f\u7528\u3059\u308b\nhttp://dev.mysql.com/downloads/connector/python/\n\n```py\n# -*- coding: cp932 -*-\n# mysql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install mysql-connector-python\nimport mysql.connector\n\ntry:\n    cnn = mysql.connector.connect(host='localhost',\n                                  port=3306,\n                                  db='Sample001',\n                                  user='root',\n                                  passwd='root',\n                                  charset=\"cp932\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %s\"\"\" , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u738b\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.rollback()\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.callproc(\"test_sp\", (from_id, to_id))\n    for rs in cur.stored_results():\n        print(\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = rs.fetchall()\n        for row in rows:\n            print (\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13(\u8907\u6570\uff09==================\")\n    cur.callproc(\"test_sp2\", (1, 100))\n    for rs in cur.stored_results():\n        print(\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = rs.fetchall()\n        for row in rows:\n            print (\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    cur.execute(\"\"\"SELECT test_fn(%s)\"\"\" , (pref_cd,))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"code:%d name:%s\" % (pref_cd, row[0]))\n\n    cur.close()\n    cnn.close()\nexcept (mysql.connector.errors.ProgrammingError) as e:\n    print (e)\n```\n\n##\u4f7f\u7528\u611f\n\u30fbMYSQL\u306e\u30b9\u30c8\u30a2\u30c9\u306fSQLSERVER\u306b\u8fd1\u3044\u611f\u3058\u3002\n\n\u30fb\u30b9\u30c8\u30a2\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3042\u3068\u306f\u3001 cur.stored_results\u306b\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u304c\u5165\u3063\u3066\u3044\u308b\u3002\u3002\n\n\u30fbMySQL-python\u3063\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\u304c3.x\u7cfb\u3067\u52d5\u4f5c\u3057\u306a\u3044\u3002\u4f7f\u3044\u65b9\u306f\u3060\u3044\u305f\u3044\u540c\u3058\u3002\nhttp://sourceforge.net/projects/mysql-python/\n\n\n#SQLSERVER\n\n##\u74b0\u5883\nPython2.7 or 3.3\nSQLSERVER EXPRESS 2012\n\n\n##\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\nSQL SERVER\u63a5\u7d9a\u3092\u8a31\u53ef\u3059\u308b\u3002\n![\u7121\u984c.png](https://qiita-image-store.s3.amazonaws.com/0/47856/9e123023-df0a-d4fc-5d04-2cde9ee91506.png)\n\n\n __\u30c6\u30fc\u30d6\u30eb__ \n\n```sql\nCREATE TABLE [dbo].[T01Prefecture](\n    [PREF_CD] [int] NOT NULL,\n    [PREF_NAME] [varchar](10) NULL,\nPRIMARY KEY CLUSTERED\n(\n    [PREF_CD] ASC\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]\n) ON [PRIMARY]\n```\n\n\n __\u5358\u4e00\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u304b\u3048\u3059\u30b9\u30c8\u30a2\u30c9__ \n\n```sql \nCREATE PROCEDURE [dbo].[test_sp]\n    @from INT,\n    @to INT\nAS\nBEGIN\n    -- SET NOCOUNT ON added to prevent extra result sets from\n    -- interfering with SELECT statements.\n    SET NOCOUNT ON;\n\n    -- Insert statements for procedure here\n    SELECT * FROM T01Prefecture WHERE PREF_CD BETWEEN @from AND @to\nEND\n```\n\n __\u8907\u6570\u306e\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u3092\u304b\u3048\u3059\u30b9\u30c8\u30a2\u30c9__ \n\n```sql\n\nCREATE PROCEDURE [dbo].[test_sp2]\n    @cd1 INT,\n    @cd2 INT\nAS\nBEGIN\n    -- SET NOCOUNT ON added to prevent extra result sets from\n    -- interfering with SELECT statements.\n    SET NOCOUNT ON;\n\n    -- Insert statements for procedure here\n    SELECT * FROM T01Prefecture WHERE PREF_CD = @cd1\n    SELECT * FROM T01Prefecture WHERE PREF_CD = @cd2\nEND\n```\n\n##Python\u306e\u30b3\u30fc\u30c9\u3000\n###SQLSERVER\u3092\u76f4\u63a5\u64cd\u4f5c\n __pymssql__\nhttp://pymssql.org/en/latest/\n\n\u52d5\u4f5c\u304c\u4e0d\u5b89\u5b9a\nPython2.7(32bit) \u3067\u306f\u4e00\u5fdc\u52d5\u4f5c\u3059\u308b\u3002\nPython3.3(64bit) \u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u3089\u3067\u304d\u306a\u3044\u3002\n\n```py\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n# pymssql\u306fVARCHAR\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u4e0a\u624b\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u3084\u3081\u3068\u304f\u3002\n#easy_install pymssql\n\nimport pymssql\n\n\ncnn = pymssql.connect(host=\"127.0.0.1\\SQLEXPRESS\", user=\"sa\", password=\"xxxx\", database=\"Sample001\")\ncur = cnn.cursor()\n\n#\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\npref_cd = 100\ncur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %d\"\"\"\n            % (pref_cd,))\ncnn.commit()\n\nprint(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\nprint(\"VARCHAR\u306e\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u304a\u304b\u3057\u3044\u3053\u3068\u3092\u78ba\u8a8d\")\nfrom_id = 45\nto_id = 999\ncur.execute(\"\"\"SELECT PREF_CD, PREF_NAME FROM T01Prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id))\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n    # print(\"%d %s\" % (row[0], row[1])) #Error\u306b\u306a\u308b\n    # VARCHAR\u3092\u53d6\u308a\u6271\u3063\u305f\u5834\u5408\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u89e3\u6790\u304c\u4e0d\u6b63\n    # CP932\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092UNICODE\u3068\u3057\u3066\u6271\u304a\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n\nprint(\"VARCHAR\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6271\u3048\u306a\u3044\u306e\u3067NVARCHAR\u306b\u5909\u63db\u3059\u308b\")\n# VARCHAR\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306f\u6271\u3048\u306a\u3044\u306e\u3067NVARCHAR\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\ncur.execute(\"\"\"SELECT PREF_CD,CAST(PREF_NAME  AS NVARCHAR) FROM T01Prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id))\nrows = cur.fetchall()\nfor row in rows:\n    print(row)\n    print(\"%d %s\" % (row[0], row[1]))\n\nprint(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\npref_cd = 100\npref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name))\n\npref_cd = 101\npref_name = \"\u91ce\u671b\u306e\u56fd\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name,))\ncnn.commit()\n\nprint(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\npref_cd = 102\npref_name = \"\u30ed\u30fc\u30eb\"\ncur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (%d, %s)\"\"\" , (pref_cd, pref_name,))\ncnn.rollback()\n\n\ncur.execute(\"\"\"SELECT PREF_CD, CAST(PREF_NAME AS NVARCHAR) FROM t01prefecture\n            WHERE PREF_CD BETWEEN %d AND %d\"\"\" , (from_id, to_id, ))\nrows = cur.fetchall()\nfor row in rows:\n    print(\"%d %s\" % (row[0], row[1]))\n\nprint(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\ncur.execute(\"\"\"exec test_sp %d, %d \"\"\" , (from_id, to_id, ))\nrows = cur.fetchall()\nfor row in rows:\n    #\u30a8\u30f3\u30b3\u30fc\u30c9\u304c\u4e0d\u6b63\n    #print(\"%d %s\" % (row[0], row[1]))\n    print(row)\n\nprint(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570==========================\")\ncur.execute(\"\"\"exec test_sp2 %d, %d \"\"\" , (1, 10, ))\nfor row in rows:\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            #print(\"%d %s\" % (row[0], row[1]))\n            print(row)\n        if not cur.nextset():\n            break\n\ncur.close()\ncnn.close()\n\n```\n\n\n###ODBC\u7d4c\u7531\n __pyodbc\u306e\u4f7f\u7528\uff1a__ \nhttps://code.google.com/p/pyodbc/\n\n```py\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install pyodbc\n\nimport pyodbc\n\ntry:\n    cnn = pyodbc.connect(\"DRIVER={SQL Server};SERVER=127.0.0.1\\SQLEXPRESS;\" +\n                         \"UID=sa;PWD=XXXX;DATABASE=Sample001\")\n    cur = cnn.cursor()\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= ?\"\"\", pref_cd)\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , pref_cd, pref_name)\n    cnn.rollback()\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.execute(\"\"\"exec test_sp ?, ? \"\"\" , from_id, to_id)\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570 ====================\")\n    cur.execute(\"\"\"exec test_sp2 ?, ? \"\"\" , 1, 10)\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            print(\"%d %s\" % (row[0], row[1]))\n        if not cur.nextset():\n            break\n\n    cur.close()\n    cnn.close()\n\nexcept (pyodbc.Error) as e:\n    print (e)\n    print (e.args[1])\n\n```\n\n __pypyodbc\u306e\u4f7f\u7528\u4f8b\uff1a__ \nhttps://code.google.com/p/pypyodbc/\n\n```py\n# -*- coding: cp932 -*-\n# mssql\u306e\u64cd\u4f5c\u30b5\u30f3\u30d7\u30eb\n#easy_install pypyodbc\n\nimport pypyodbc\n\ntry:\n    cnn = pypyodbc.connect(\"DRIVER={SQL Server};SERVER=127.0.0.1\\SQLEXPRESS;UID=sa;PWD=xxxxx;DATABASE=Sample001\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= ?\"\"\"\n                , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    # \u4ee5\u4e0b\u306f\u74b0\u5883\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u306b\u3042\u308f\u305b\u308b\u3053\u3068\uff01\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = \"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = \"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = \"\u30ed\u30fc\u30eb\"\n    cur.execute(\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\n    cnn.rollback()\n\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN ? AND ?\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13==========================\")\n    cur.execute(\"\"\"exec test_sp ?, ? \"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u8a66\u9a13 \u8907\u6570 ==========================\")\n    cur.execute(\"\"\"exec test_sp2 ?, ? \"\"\" , (1, 10, ))\n    while True:\n        print (\"\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8...\")\n        rows = cur.fetchall()\n        for row in rows:\n            print(\"%d %s\" % (row[0], row[1]))\n        if not cur.nextset():\n            break\n\n    cur.close()\n    cnn.close()\nexcept (pypyodbc.DatabaseError) as e:\n    print (e.args[1])\n \n```\n\n##\u4f7f\u7528\u611f\npymssql\u306fODBC\u3092\u7d4c\u7531\u305b\u305a\u306b\u4f7f\u7528\u3067\u304d\u308b\u304c\u3001\u52d5\u4f5c\u304c\u6975\u3081\u3066\u4e0d\u5b89\u5b9a\u3002\nVARCHAR\u306e\u6319\u52d5\u304c\u3042\u3084\u3057\u304f\u3066\u3001NVARCHAR\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u306a\u3044\u3068\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\n\u307e\u305f\u300164bit\u306ePython3.3\u3067\u306f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u3089\u3067\u304d\u306a\u3044\u3002\n\nODBC\u7d4c\u7531\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3044\u305a\u308c\u3082\u52d5\u4f5c\u3057\u305f\u3002\nWindows\u4ee5\u5916\u3067\u78ba\u8a8d\u306f\u3057\u3066\u3044\u306a\u3044\u304c\u3001\u30b5\u30dd\u30fc\u30c8\u306f\u3057\u3066\u3044\u308b\u3068\u306e\u3053\u3068\u3002\n\n#ORACLE\n##\u74b0\u5883\nPython 2.7 \u307e\u305f\u306f 3.3\nOracle11\n1.Oracle\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u3053\u306e\u969b\u3001\u958b\u767a\u8005\u7528\u306e\u74b0\u5883\u3092\u3064\u304f\u308b\u3002\n\u3000\n2.\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001easy_install\u3059\u308b\u3002\n   cx_Oracle\n   http://cx-oracle.sourceforge.net/\n\n##Python\u306e\u30b3\u30fc\u30c9\n\n```py\n# -*- coding: cp932 -*-\n# cx_Oracle\u3092\u7528\u3044\u305fPython\u3067\u306eORACLE\u64cd\u4f5c\n#1.Oracle\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n#\u3000\u3053\u306e\u969b\u3001\u958b\u767a\u8005\u7528\u306e\u74b0\u5883\u3092\u3064\u304f\u308b\u3002\n#\u3000\uff08\u304a\u305d\u3089\u304f\u3001OCI\u304c\u5fc5\u8981\uff1f\uff09\n#\u3000\n#2.\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u304b\u3001easy_install\u3059\u308b\u3002\n#  cx_Oracle\n#  http://cx-oracle.sourceforge.net/\nimport cx_Oracle\nimport os\nos.environ[\"NLS_LANG\"] = \"JAPANESE_JAPAN.JA16SJISTILDE\"\ntry:\n    tns = cx_Oracle.makedsn(\"localhost\", 1521, \"Sample\")\n    conn = cx_Oracle.connect(\"user\", \"pass\", tns)\n    cur = conn.cursor()\n    from_cd = 45\n    to_cd = 200\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"===================\")\n    print (\"100\u3092\u6d88\u3059\")\n    cur.execute(\"\"\"DELETE FROM T01PREFECTURE WHERE PREF_CD=:arg1\"\"\",\n                arg1=100)\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"------------------\")\n    print (\"100 \u3092\u8ffd\u52a0\")\n    cur.execute(\"\"\"INSERT INTO T01PREFECTURE\n                VALUES (:arg1, :arg2)\"\"\",\n                arg1=100,\n                arg2=\"\u3042\u305f\u305f\")\n    conn.commit()\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"===================\")\n    print (\"101\u8ffd\u52a0\")\n    cur.execute(\"\"\"INSERT INTO T01PREFECTURE\n                VALUES (:arg1, :arg2)\"\"\",\n                arg1=101,\n                arg2=\"\u5317\u6597\")\n\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\n    print (\"------------------\")\n    print (\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\")\n    conn.rollback()\n    cur.execute(\"\"\"SELECT * FROM T01PREFECTURE\n                WHERE PREF_CD BETWEEN :arg1 AND :arg2\"\"\",\n                arg1=from_cd,\n                arg2=to_cd)\n    rows = cur.fetchall()\n    for r in rows:\n        print(\"%d : %s\" % (r[0], r[1]))\n\nexcept (cx_Oracle.DatabaseError) as ex:\n    error, = ex.args\n    print (error.message)\n```\n\n##\u4f7f\u7528\u611f\nOCI\u7d4c\u7531\u3067\u64cd\u4f5c\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001ORACLE\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u3002\n\u63a5\u7d9a\u65b9\u6cd5\u306b\u7656\u304c\u3042\u308b\u3002\u3042\u3068\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u6307\u5b9a\u306f\u74b0\u5883\u5909\u6570\u3067\u304a\u3053\u306a\u3046\u3002\n\nORACLE\u306ePL/SQL\u306fSQLSERVER\u3068\u9055\u3063\u3066\u7d50\u679c\u30bb\u30c3\u30c8\u8fd4\u3055\u306a\u3044\u3002\n\uff08\u914d\u5217\u3092\u8fd4\u305b\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u9762\u5012\u306a\u306e\u3067\u5b9f\u9a13\u3057\u3066\u3044\u306a\u3044\uff09\n\n\u660e\u793a\u7684\u306bCOMMIT\u3057\u306a\u3044\u3068\u5909\u66f4\u306f\u7834\u68c4\u3055\u308c\u308b\u3002\n\n#Postgresql\n\n##\u74b0\u5883\nPython 2.x / 3.x\nPostgresSQL 9.3\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066psycopg2\u3092\u3064\u304b\u3046\nWindows\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066Exe\u3092\u5b9f\u884c\nhttp://www.stickpeople.com/projects/python/win-psycopg/\n\n##\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u8a2d\u5b9a\n\n __\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9__\n\n```sql\nCREATE TABLE t01prefecture\n(\n  pref_cd integer NOT NULL,\n  pref_name character varying(10),\n  CONSTRAINT t01prefecture_pkey PRIMARY KEY (pref_cd)\n)\nWITH (\n  OIDS=FALSE\n);\nALTER TABLE t01prefecture\n  OWNER TO postgres;\n```\n\n\n\n __PostgresSQL\u306e\u30e6\u30fc\u30b6\u5b9a\u7fa9\u95a2\u6570__ \n\n```sql\nCREATE OR REPLACE FUNCTION test_sp(IN from_cd integer, IN to_cd integer)\n  RETURNS TABLE(code integer, name varchar) AS\n$$\nDECLARE\nBEGIN\n    RETURN QUERY SELECT PREF_CD,PREF_NAME FROM t01Prefecture\n            WHERE PREF_CD BETWEEN from_cd AND to_cd;\nEND;\n$$ LANGUAGE plpgsql;\n```\n\n##Python\u306e\u30b3\u30fc\u30c9\n\n```py\n# -*- coding: cp932 -*-\n# Winddows \u306e\u5834\u5408\u306f\u4ee5\u4e0b\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n# \u3000http://www.stickpeople.com/projects/python/win-psycopg/\n# Python3.x\u306e\u5834\u5408\u3001unicode(row[1],'utf-8') \u306f\u4e0d\u8981\u3002\n#\nimport psycopg2\n\ntry:\n    cnn = psycopg2.connect(\"dbname=Sample001 host=localhost user=postgres password=xxxxx\")\n    cur = cnn.cursor()\n\n    #\u8a66\u9a13\u30c7\u30fc\u30bf\u306e\u6574\u7406\n    pref_cd = 100\n    cur.execute(\"\"\"DELETE FROM t01prefecture WHERE PREF_CD >= %s\"\"\"\n                , (pref_cd,))\n    cnn.commit()\n\n    print(\"\u5358\u7d14\u306aSELECT\u6587==========================\")\n    from_id = 45\n    to_id = 999\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13==========================\")\n    pref_cd = 100\n    pref_name = u\"\u30e2\u30c6\u30e2\u30c6\u56fd\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name))\n\n    pref_cd = 101\n    pref_name = u\"\u91ce\u671b\u306e\u56fd\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n    cnn.commit()\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0],unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0],row[1]))\n\n\n    print(\"\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13==========================\")\n    pref_cd = 102\n    pref_name = u\"\u30ed\u30fc\u30eb\"\n    cur.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n                VALUES (%s, %s)\"\"\" , (pref_cd, pref_name,))\n\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"-------------------------\")\n    cnn.rollback()\n    cur.execute(\"\"\"SELECT PREF_CD,PREF_NAME FROM t01prefecture\n                WHERE PREF_CD BETWEEN %s AND %s\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    print(\"\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9==========================\")\n    cur.execute(\"\"\"SELECT * FROM test_sp(%s,%s)\"\"\" , (from_id, to_id, ))\n    rows = cur.fetchall()\n    for row in rows:\n        #print(\"%d %s\" % (row[0], unicode(row[1],'utf-8')))\n        print(\"%d %s\" % (row[0], row[1]))\n\n    cur.close()\n    cnn.close()\n\nexcept (psycopg2.OperationalError) as e:\n    print (e)\n\n```\n\n##\u4f7f\u7528\u611f\nPython2.X\u306f\u30ec\u30b3\u30fc\u30c9\u30bb\u30c3\u30c8\u304cUTF8\u3067\u5e30\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u4e00\u65e6UNICODE\u306b\u5909\u63db\u3057\u3066\u3084\u3089\u306d\u3070\u306a\u3089\u306a\u3044\u3002\nPython3\u7cfb\u306f\u4e0d\u8981\u3002\n\nPostgres\u306e\u30b9\u30c8\u30a2\u30c9\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u30fc\u306fORACLE\u306ePL/SQL\u306b\u8fd1\u3044\u3002\n\u305f\u3060\u3001\u30c6\u30fc\u30d6\u30eb\u578b\u3092\u623b\u308a\u5024\u306b\u3059\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n\n#SQLite\n\n##\u74b0\u5883\n\u7279\u8a18\u4e8b\u9805\u306a\u3057\u3002\nPython2.5\u4ee5\u964d\u306a\u3089\u6a19\u6e96\u3067SQLITE3\u304c\u64cd\u4f5c\u3067\u304d\u308b\u306f\u305a\u3002\n\n##Python\u306e\u30b3\u30fc\u30c9\n\n```py\n# -*- coding: cp932 -*-\n# sqlite3\u306fPython2.5\u304b\u3089\u4ee5\u964d\u304b\u3089\u6a19\u6e96\u3067\u3042\u308b\u306f\u305a.\nimport sqlite3\nconn = sqlite3.connect('test.sqlite3')\nsql = '''CREATE TABLE  IF NOT EXISTS  t01prefecture(\n                         pref_cd INTEGER,\n                         pref_name TEXT);'''\nconn.execute(sql)\n\nconn.execute(u\"DELETE FROM t01prefecture\")\n\n#\u30b3\u30df\u30c3\u30c8\u306e\u8a66\u9a13\npref_cd = 100\npref_name = u\"\u30e2\u30c6\u30e2\u30c6\u56fd\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD, PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name))\n\npref_cd = 101\npref_name = u\"\u91ce\u671b\u306e\u56fd\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\nconn.commit()\n\n# \u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u8a66\u9a13\npref_cd = 102\npref_name = u\"back\"\nconn.execute(u\"\"\"INSERT INTO t01prefecture(PREF_CD,PREF_NAME)\n            VALUES (?, ?)\"\"\" , (pref_cd, pref_name,))\nconn.rollback()\n\nrows = conn.execute(u'SELECT * FROM t01prefecture WHERE pref_cd > ?', (0,))\nfor row in rows:\n    print(u\"%d %s\" % (row[0], row[1]))\n\n# \u30e6\u30fc\u30b6\u5b9a\u7fa9\n# \u6587\u5b57\u3092\u9023\u7d50\u3059\u308b\u306e\u307f\nclass UserDef:\n    def __init__(self):\n        self.values = []\n    def step(self, value):\n        self.values.append(value)\n    def finalize(self):\n        return \"/\".join(map(str, self.values)) \n\nconn.create_aggregate(\"userdef\", 1, UserDef)\nrows = conn.execute(u'SELECT userdef(PREF_NAME) FROM t01prefecture')\nfor row in rows:\n    print(u\"%s\" % (row[0]))\n\nconn.close()\n```\n\n##\u4f7f\u7528\u611f\n\u3044\u307e\u307e\u3067\u306eDB\u3068\u9055\u3044\u3001\u30b5\u30fc\u30d0\u30fc\u3092\u69cb\u7bc9\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3002\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u95a2\u6570\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002\n\n", "tags": ["Python", "Database"]}