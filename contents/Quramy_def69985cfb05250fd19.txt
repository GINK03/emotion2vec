{"context": "Falcor\u5165\u9580\u306e\u7b2c3\u56de\u76ee\u3067\u3059\u3002\n\u524d\u56de \u306f\u30d6\u30e9\u30a6\u30b6\u30aa\u30f3\u30ea\u30fc\u3067Falcor\u3092\u52d5\u304b\u3059\u8a71\u3067\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 - \u30b5\u30fc\u30d0\u306bFalcor\u3092\u4ecb\u5728\u3055\u305b\u308b\u8a71\u3092\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u904e\u53bb\u56de\u306f\u3053\u3061\u3089:\n\nFalcor\u5165\u9580 1\u65e5\u76ee Falcor\u3068\u306f\u4f55\u8005\u304b\nFalcor\u5165\u9580 2\u65e5\u76ee Falcor\u306eJSON Graph\u306b\u89e6\u308c\u3066\u307f\u308b\n\n\nFalcor\u3068\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u5b9f\u88c5\n\u7b2c1\u56de\u3067\u89e3\u8aac\u3057\u305f\u3088\u3046\u306b\u3001Falcor\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 - \u30b5\u30fc\u30d0\u9593\u306eMiddleware\u3067\u3059\u3002\nFalcor\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30e9\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u958b\u767a\u8005\u306fFalcor\u306eendpoint\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001JSON Grpah Envelope\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u73fe\u72b6(2016\u5e742\u6708\u73fe\u5728)\u3067\u3001Falcor\u958b\u767a\u5143\u3067\u3042\u308bNetflix\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u4e0b\u8a18\u304c\u3042\u308a\u307e\u3059:\n\n\nfalcor-router: JSON Graph\u306e\u30d1\u30b9\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002\u3061\u306a\u307f\u306b\u307e\u3060Developer Preview(2016\u5e742\u6708\u73fe\u5728)\n\nfalcor-express: falcor-router\u3067\u4f5c\u6210\u3057\u305fRouter\u3092Express\u306eRouter\u3068\u3057\u3066\u767b\u9332\u3067\u304d\u308b\n\n\u4e0a\u8a18\u3092Node.js\u306eWeb\u30b5\u30fc\u30d0\u3067\u3042\u308bExpress\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001Falcor\u306eendpoint\u30b5\u30fc\u30d0\u3092\u4f5c\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059(\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3053\u306e\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059)\u3002\n\u3061\u306a\u307f\u306b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001Falcor\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u7279\u5b9a\u306e\u5f62\u5f0f\u306eHTTP \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3067\u304d\u308c\u3070\u3044\u3044\u3060\u3051\u306e\u8a71\u306a\u306e\u3067\u3001\u305d\u306e\u6c17\u306b\u306a\u308c\u3070JavaScript\u3067\u306f\u306a\u304f\u5225\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5b9f\u969b\u3001Github\u3067\u691c\u7d22\u3092\u304b\u3051\u3066\u307f\u305f\u6240\u3001\u4e0b\u8a18\u306e\u5b9f\u88c5\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\n\nfalcordotnet/falcor.net: C#\u306e\u30b5\u30fc\u30d0\u5b9f\u88c5.\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u306f\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u56de\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8, \u30b5\u30fc\u30d0\u53cc\u65b9\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304f\u90fd\u5408\u4e0a\u3001\u4ee5\u4e0b\u306e\u7528\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3068\u3057\u307e\u3057\u305f:\n\n\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n- (prj root)/\n |- built/                            \n  |+ front/                           \n  |+ server/                          \n  |  bundle.js                        \n |- src/                              \n  |- front/                           \n   |  index.js                        \n  |- server/                          \n   |  app.js                          \n   |  TodoRouter.js                   \n   |  TodoService.js                  \n |  index.html                        \n |  package.json\n\n\nsrc/front \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30ed\u30f3\u30c8\u7528\u306e\u30b3\u30fc\u30c9(\u3068\u3044\u3063\u3066\u3082index.js\u3060\u3051\u3067\u3059\u304c)\u3068src/server \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30b5\u30fc\u30d0\u7528\u306e\u30b3\u30fc\u30c9\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u5fc5\u8981\u3068\u306a\u308bnpm package\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059:\n\n\u5fc5\u8981\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nnpm -g install browserify babel\nnpm install falcor falcor-http-datasource falcor-router falcor-express express body-parser --save\nnpm install babel-preset-es2015 --save-dev\n\n\n\n\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\u7d30\u304b\u3044\u89e3\u8aac\u306f\u5f8c\u8ff0\u3059\u308b\u3068\u3057\u3066\u3001\u4e00\u65e6\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u304d\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u307e\u305a\u306fExpress\u306e\u8d77\u52d5\u30b3\u30fc\u30c9\u3067\u3059:\n\nserver/app.js\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport {dataSourceRoute} from 'falcor-express';\nimport {TodoRouter} from './TodoRouter';\n\nconst app = express();\n\n// NOTE: bodyParser\u3092\u5fd8\u308c\u308b\u3068Router\u306eset\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\napp.use(bodyParser.urlencoded({extended: true}));\n\napp.use('/model.json', dataSourceRoute(() => new TodoRouter()));\n\napp.use(express.static(__dirname + '/../../'));\n\napp.listen(4000);\n\n\nfalcor-express\u304c\u767b\u5834\u3059\u308b\u306e\u306fdataSourceRoute\u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u304c\u3001\u4e0b\u8a18\u3067\u4f5c\u6210\u3059\u308bFalcor Router\u3092Express\u306eRouter\u3068\u3057\u3066'/model.json'\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u7d9a\u3044\u3066\u3001\u4e0b\u8a18\u304c\u672c\u30a8\u30f3\u30c8\u30ea\u306e\u30e1\u30a4\u30f3\u30c6\u30fc\u30de\u3068\u306a\u308bFalcor Router\u90e8\u5206\u3067\u3059\u3002\n\nsrc/server/TodoRouter.js\nimport {createClass} from 'falcor-router';\nimport {TodoService} from './TodoService';\n\nexport class TodoRouter extends createClass([\n    {\n        // {keys: ...}\u3067\u4efb\u610f\u306ekey\u306b\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30eb\u304c\u66f8\u3051\u308b\n        route: 'todoByIds[{keys:ids}][{keys:props}]',\n        get: function getTodoProperty(pathset) {\n            console.log('get:', pathset);\n            return Promise.all(pathset.ids.map(id => this.todoService.fetch(id))).then(todos => {\n                return todos.map(todo => {\n                    var value = {};\n                    pathset.props.forEach(prop => {\n                        value[prop] = todo[prop];\n                    });\n                    return {\n                        path: ['todoByIds', todo.id],\n                        value\n                    };\n                });\n            });\n        },\n        set: function setTodoProperty(jsonGraph) {\n            // Model.set, setValue\u7b49\u3067\u30bb\u30c3\u30c8\u3055\u308c\u305fjsonGraph\u304c\u6e21\u3055\u308c\u308b\n            console.log('set:', jsonGraph);\n            var todoByIds = jsonGraph.todoByIds;\n            var keys = Object.keys(todoByIds);\n            return Promise.all(keys.map(id => this.todoService.set(id, todoByIds[id]))).then(() => ({jsonGraph}));\n        }\n    },\n    {\n        route: 'todos.length',\n        get: function getTodosLength(pathset) {\n            console.log('get:', pathset);\n            return this.todoService.fetchList().then(list => {\n                return {\n                    path: ['todos', 'length'],\n                    value: list.length\n                };\n            });\n        }\n    },\n    {\n        // {integers: ...} \u3067\u4efb\u610f\u306eindex\u306b\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30eb\u304c\u66f8\u3051\u308b\n        route: 'todos[{integers:indices}]',\n        // pathset\u306b\u306f\u30de\u30c3\u30c1\u3057\u305fpath\u3092\u5206\u89e3\u3057\u305f\u3082\u306e\u304c\u683c\u7d0d\u3055\u308c\u308b\n        get: function getTodosReferences(pathset) {\n            console.log('get: ', pathset);\n            return this.todoService.fetchList().then(list => {\n                return {\n                    jsonGraph: {\n                        todos: pathset.indices.filter(i => list[i]).map(i => {\n                            return {$type: 'ref', value: [\"todoByIds\", list[i].id]};\n                        })\n                    }\n                }\n            });\n        }\n    },\n    {\n        route: 'todos.push',\n        call: function pushNewTodo(callpath, args) {\n            console.log('call todos.push', callpath, args);\n            return this.todoService.add(args[0]).then(todo => {\n                return this.todoService.fetchList().then(list => {\n                    return [\n                        {\n                            path: ['todos', 'length'],\n                            value: list.length\n                        },\n                        {\n                            path: ['todos', list.length - 1],\n                            value: {$type: 'ref', value: ['todoByIds', todo.id]}\n                        }\n                    ];\n                });\n            });\n        }\n    }\n]){\n    constructor() {\n        super();\n        this.todoService = new TodoService();\n    }\n}\n\n\n\u6700\u5f8c\u306b\u4e0a\u8a18\u306eRouter\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b TodoService \u3067\u3059\u3002\n\u672c\u6765\u306fServer Side MVC\u306eModel\u76f8\u5f53\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3001DB\u30a2\u30af\u30bb\u30b9\u304b\u5225Service\u306e\u547c\u3073\u51fa\u3057\u3092\u62c5\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u9762\u5012\u306a\u306e\u3067\u4eca\u56de\u306f\u624b\u629c\u304d\u5b9f\u88c5\u3067\u3059\u3002\n\u5358\u4ef6\u53d6\u5f97\u3001\u5168\u4ef6\u53d6\u5f97\u3001TODO\u306e\u8ffd\u52a0\u3001\u5358\u4ef6\u66f4\u65b0\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\nsrc/server/TodoService.js\nexport class TodoService {\n    constructor() {\n        this._list = [\n            {\n                id: 'todo1',\n                text: '\u725b\u4e73\u3092\u8cb7\u3046',\n                completedAt: '2016-01-01'\n            }, {\n                id: 'todo2',\n                text: 'ATM\u3067\u304a\u91d1\u3092\u5f15\u304d\u51fa\u3059',\n                completedAt: null\n            }\n        ];\n        this._seq = this._list.length;\n    }\n\n    fetchList() {\n        return new Promise(res => {\n            res(this._list);\n        });\n    }\n\n    fetch(id) {\n        return new Promise((res, rej) => {\n            var matched = this._list.filter(t => t.id === id);\n            if(matched.length === 1) {\n                res(matched[0]);\n            }else{\n                rej();\n            }\n        });\n    }\n\n    add(param) {\n        var todo = {\n            id: `todo${++this._seq}`,\n            text: param.text || '',\n            completedAt: param.completedAt || null\n        };\n        this._list.push(todo);\n        return new Promise(res => res(todo));\n    }\n\n    set(id, param) {\n        var item = this._list.filter(l => l.id === id)[0];\n        return new Promise((resolve, reject) => {\n            if(!item) {\n                reject();\n            }else{\n                if(param.text) item.text = param.text;\n                if(param.completedAt) item.completedAt = param.completedAt;\n                resolve(item);\n            }\n        });\n    }\n}\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\u7d9a\u3044\u3066\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nsrc/front/index.js\nimport * as Falcor from 'falcor/browser';\nvar out = (res) => {\n    console.log(res && JSON.stringify(res.json, null, 2));\n};\n\nvar model = new Falcor.Model({source: new Falcor.HttpDataSource('/model.json') });\n\nmodel.get('todos[0..9][\"text\", \"completedAt\"]').then(out);\n\n\n\u524d\u56de\u306e\u30b3\u30fc\u30c9\u3068\u6b86\u3069\u5909\u308f\u308a\u307e\u305b\u3093\u306d\u3002Falcor.Model\u4f5c\u6210\u6642\u306e\u5f15\u6570\u304ccache \u304b\u3089HttpDataSource \u306b\u5909\u308f\u3063\u305f\u4e8b\u3050\u3089\u3044\u3067\u3057\u3087\u3046\u3002\n\u7de0\u3081\u3068\u3057\u3066\u3001index.html\u3092\u7528\u610f\u3057\u3066\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\nindex.html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n</head>\n<body>\n<script src=\"built/bundle.js\"></script>\n</body>\n</html>\n\n\n\n\u8d77\u52d5\n\u3055\u3066\u3001\u3088\u3046\u3084\u3063\u3068\u8d77\u52d5\u306e\u6e96\u5099\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\u8d77\u52d5!\nbabel --presets es2015 -d built src\nnode built/server/app.js\nbrowserify -o built/bundle.js built/front/index.js\n\n\n\u3068\u3057\u3066\u3001http://localhost:4000/index.html \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u958b\u767a\u8005\u30c4\u30fc\u30eb\u304b\u3089\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u524d\u56de\u3068\u540c\u3058\u304f\u3001TODO\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u7b48\u3067\u3059\u3002\n\nRouter\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\n\u3053\u3053\u304b\u3089\u306f\u4e0a\u8a18\u3067\u4f5c\u6210\u3057\u305fTodoRouter.js\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nRouter\u306e\u4f5c\u6210\u65b9\u6cd5\n\u307e\u305a\u306fFalcor Router\u306e\u5b9a\u7fa9\u65b9\u6cd5\u304b\u3089\u3002createClass \u3067Router\u306eClass\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u307e\u3059\u3002\u5f15\u6570\u306eRouterDefinition\u304c\u547d\u3002\n\nFalcorRouter\u306e\u5b9a\u7fa9\u65b9\u6cd5\nimport {createClass} from 'falcor-router';\nclass TodoRouter extends createClass([\n  /* Falcor Router \u306e\u5b9a\u7fa9\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u66f8\u304f */\n]){\n}\n\n\ncreateClass \u306e\u5f15\u6570\u3068\u3057\u3066\u7528\u610f\u3059\u308bRouter Definitions\u306f\u4e0b\u8a18\u306e\u5f62\u5f0f\u306eJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\nRouterDefinitionSignature\n{\n    route: /* JSON Graph Path */,\n    get: function(pathsets) {...},\n    set: function(jsonGraph) {...},\n    call: function(callPath, args) {...}\n}\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u304croute \u306e\u30d1\u30b9\u306b\u30de\u30c3\u30c1\u3057\u305f\u5834\u5408\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u3058\u305f\u95a2\u6570\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u306a\u304a\u3001get/set/call\u306f\u5168\u3066\u66f8\u304f\u5fc5\u8981\u306f\u306a\u304f\u3001\u5fc5\u8981\u306a\u3082\u306e\u3060\u3051\u5b9f\u88c5\u3059\u308c\u3070\u5145\u5206\u3067\u3059\u3002\n\nget\n\u3053\u3053\u304b\u3089\u306fRouter Definition\u306eget/set/call\u3092\u500b\u5225\u306b\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u5177\u4f53\u4f8b\u304c\u3042\u3063\u305f\u65b9\u304c\u8aac\u660e\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u5148\u307b\u3069\u306emodel.get('todos[0..9][\"text\", \"completedAt\"]') \u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3001TodoRouter \u306b\u3069\u306e\u3088\u3046\u306b\u51e6\u7406\u3055\u308c\u3066\u3044\u304f\u304b\u306b\u6cbf\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001route: 'todos[{integers:indices}]' \u306e get\u95a2\u6570\u304c\u52d5\u4f5c\u3057\u307e\u3059\u3002 {integers:indices}\u306e\u90e8\u5206\u306f\u3001[0..9]\u306e\u3088\u3046\u306a\u6574\u6570\u7bc4\u56f2\u6307\u5b9a\u7b87\u6240\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\nget \u95a2\u6570\u306e\u5f15\u6570\u3067\u3042\u308bpathsets \u304b\u3089pathsets.indices \u306b\u3001\u7bc4\u56f2\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todos[{integers:indices}]',\n    get: function getTodosReferences(pathset) {\n        console.log('get: ', pathset);\n        return this.todoService.fetchList().then(list => {\n            return {\n                jsonGraph: {\n                    todos: pathset.indices.filter(i => list[i]).map(i => {\n                        return {$type: 'ref', value: [\"todoByIds\", list[i].id]};\n                    })\n                }\n            }\n        });\n    }\n}\n\n\n\u5b9f\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u306a\u308bModel(\u307e\u305f\u306fService\u76f8\u5f53\u306e\u30b3\u30fc\u30c9)\u304b\u3089\u3001TODO\u30ea\u30b9\u30c8\u306eID\u4e00\u89a7\u304c\u5f15\u3051\u305f\u3068\u3057\u307e\u3059(\u4e0a\u8a18\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308btodoService.fetchList())\u3002\n\u524d\u56de\u306e\u4f8b\u3068\u540c\u3058\u304f\u3001JSON Graph\u306etodos\u306f\u3001todoByIds\u306b\u5bfe\u3059\u308b\u53c2\u7167\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306fget \u95a2\u6570\u306f\u4e0b\u8a18\u306eJSON Grape Envelope\u3092\u8fd4\u5374\u3055\u305b\u307e\u3059\u3002\n\n\u8fd4\u5374\u3059\u308bJSONGraphEnvelope\njsonGraph: {\n    todos: [\n        {$type: 'ref', value: ['todoByIds', 'todo1']},\n        {$type: 'ref', value: ['todoByIds', 'todo2']}\n    ]\n}\n\n\n{$type: 'ref', value: ...}\u304cJSON Graph\u4e0a\u3067\u306e\u53c2\u7167\u3092\u8868\u3059\u306e\u306f\u3082\u3046\u8aac\u660e\u4e0d\u8981\u3067\u3059\u3088\u306d\uff1f(\u4f55\u305d\u308c\uff01\u3063\u3066\u601d\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u7b2c2\u56de\u306e\u8aac\u660e\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044)\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304cFalcor Router\u304c\u901a\u5e38\u306eWeb Application Framework\u306eRouter(Controller)\u3068\u7570\u306a\u308b\u70b9\u3067\u3059\u3002\nExpress\u306eRouter\u3082\u305d\u3046\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306aWeb Application Framework\u306eRouter(Controller)\u3068\u3044\u3048\u3070\u30011 HTTP \u30ea\u30af\u30a8\u30b9\u30c8 = 1 \u30e1\u30bd\u30c3\u30c9\u306e\u95a2\u4fc2\u3067\u3059\u304c\u3001falcor-router\u3067\u306f1 HTTP\u30ea\u30af\u30a8\u30b9\u30c8 = \u8907\u6570\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u5148\u307b\u3069\u306e route: 'todos[{interger:indices}]'\u306eget\u95a2\u6570\u304c\u8fd4\u5374\u3059\u308b\u30ea\u30b9\u30c8\u304c\u3001\u53c2\u7167\u5148\u306e\u5b9f\u4f53\u3067\u3042\u308btodoByIds\u306eJSON Graph\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067Falcor Router\u306f\u6c17\u3092\u5229\u304b\u305b\u3066\u304f\u308c\u307e\u3059\u3002 \u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001Falcor Router\u306f\u300c\u3042\u308c\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u53c2\u7167\u5148\u306e\u5024\u304c\u5206\u304b\u3093\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3061\u3083\u3046\u305e\uff01\u300d\u3068\u5224\u65ad\u3057\u3001\u7d9a\u3044\u3066 route: 'todoByIds[{keys:ids}][{keys:props}]' \u306eget\u95a2\u6570\u3078Routing\u3057\u307e\u3059\u3002\n\u3042\u304f\u307e\u3067model.get('todos[0..9][\"text\", \"completedAt\"]')\u3068\u3044\u30461 HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u4e2d\u3067\u3001\u3053\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u8a33\u3067\u3059\u3002Router\u541b\u8ce2\u3044\uff01\nroute: 'todoByIds[{keys:ids}][{keys:props}]'\u306f\u3001TODO\u306eid\u3068\u3001\"text\"\u3084\"completedAt\"\u306e2\u7a2e\u985e\u306e\u6587\u5b57\u5217key\u3092pathsets\u306e\u5909\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todoByIds[{keys:ids}][{keys:props}]',\n    get: function getTodoProperty(pathset) {\n        console.log('get:', pathset);\n        return Promise.all(pathset.ids.map(id => this.todoService.fetch(id))).then(todos => {\n            return todos.map(todo => {\n                var value = {};\n                pathset.props.forEach(prop => {\n                    value[prop] = todo[prop];\n                });\n                return {\n                    path: ['todoByIds', todo.id],\n                    value\n                };\n            });\n        });\n    },\n}\n\n\n\u3053\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u95a2\u6570\u304c\u5b8c\u4e86\u3057\u3066\u521d\u3081\u3066\u3001\u672c\u6765\u306emodel.get('todos[0..9][\"text\", \"completedAt\"]')\u306eJSON Graph \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u5b8c\u6210\u3057\u307e\u3059\u3002\n\u4e21\u65b9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nHTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u306a\u308bJSONGraphEnvelope\n{\n    todoByIds: {\n        'todo1': {\n            id: 'todo1',\n            text: '\u725b\u4e73\u3092\u8cb7\u3046',\n            completedAt: '2016-01-01'\n        },\n        'todo2': {\n            id: 'todo2',\n            text: 'ATM\u3067\u304a\u91d1\u3092\u5f15\u304d\u51fa\u3059',\n            completedAt: null\n        }\n    },\n    todos: [\n        {$type: 'ref', value: ['todoByIds', 'todo1']},\n        {$type: 'ref', value: ['todoByIds', 'todo2']}\n    ]\n}\n\n\n\u4e0a\u8a18\u3067\u8aac\u660e\u3057\u305fRouting Flow\u306b\u3064\u3044\u3066\u306f\u6587\u7ae0\u3067\u8aac\u660e\u3055\u308c\u305f\u3060\u3051\u3060\u3068\u5b9f\u611f\u304c\u6e67\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u662f\u975e\u30b5\u30f3\u30d7\u30eb\u3092\u624b\u5143\u3067\u52d5\u4f5c\u3055\u305b\u305f\u4e0a\u3067\u958b\u767a\u8005\u30c4\u30fc\u30eb\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084Node.js\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u3082\u773a\u3081\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nget\u306b\u304a\u3051\u308bRouting Flow\u306e\u8aac\u660e\u306f\u4ee5\u4e0a\u306a\u306e\u3067\u3059\u304c\u3001\u4e2d\u307e\u3068\u3081\u3068\u3057\u3066Falcor\u304c\u4ecb\u5728\u3057\u306a\u3044\u4e16\u754c\u3068\u306e\u6bd4\u8f03\u3092\u8003\u3048\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306eTODO\u30ea\u30b9\u30c8\u3092Falcor\u3092\u4f7f\u308f\u305a\u306bRESTful Web API\u3067\u7d44\u3093\u3060\u5834\u5408\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306eRouter\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n\nGET /api/v1/todos: link\u3068\u3057\u3066\u500b\u5225\u306eTODO id\u3092\u542b\u3081\u308b\n\nGET /api/v1/todos/:todoId: TODO \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u542b\u3093\u3067\u3044\u308b\u5168\u3066\u306e\u5024\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u5374\u3059\u308b\n\n\u3053\u306e\u3088\u3046\u306aRESTful Web API\u3068\u4eca\u56de\u306eFalcor\u7248 TodoRouter\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u9055\u3044\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\nREST API\u3067\u306f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u308blink\u306e\u51e6\u7406\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u5225\u9014\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u3001JSON Graph\u3068Falcor Router\u306b\u3088\u308a\u3001\u81ea\u52d5\u7684\u306b1\u56de\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\n\u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fView\u304c\u5fc5\u8981\u3068\u3059\u308b\u5024\u306e\u9805\u76ee\u30ec\u30d9\u30eb\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u304f\u308b\u300d\u3068\u3044\u3046Falcor\u306e\u601d\u60f3\u306b\u3088\u308a\u3001[{interger:indices}]\u3084[{key:props}]\u304c\u767b\u5834\u3059\u308b\u3002\u3053\u306e\u7d50\u679c\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u304a\u3051\u308b\u5206\u89e3\u80fd\u3092\u7d30\u304b\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\nset\n\u7d9a\u3044\u3066\u3001\u5024\u66f4\u65b0\u7cfb\u306e\u51e6\u7406\u3067\u3042\u308bset\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n...\u3068\u306f\u8a00\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001JSON Graph\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3066\u3044\u308c\u3070set\u3067\u8a9e\u308b\u3053\u3068\u306f\u5b9f\u306f\u6b86\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\u524d\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u540c\u69d8\u3001model.setValue('todos[1].completedAt', '2016-02-29') \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u8a18\u8ff0\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nTODO\u30ea\u30b9\u30c8\u306e2\u756a\u76ee\u306e\u8981\u7d20\u306ecompletedAt\u304c null \u304b\u3089 '2016-02-29'\u306b\u5909\u308f\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\n\u3067\u3082\u3088\u304f\u3088\u304fTodoRouter\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3069\u3053\u306b\u3082route: 'todos[{interger:indices}]'\u306eset\u95a2\u6570\u306e\u8a18\u8ff0\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306emodel.set(...)\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306abody\u3092\u4f34\u3063\u305fPOST\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nPOST\u306ebody\n{\n  \"jsonGraph\": {\n    \"todoByIds\": {\n      \"todo2\": {\n        \"completedAt\": \"2016-02-29\"\n      }\n    }\n  },\n  \"paths\": [\n    [\"todoByIds\", \"todo2\", \"completedAt\"]\n  ]\n}\n\n\n\u305d\u3046\u3067\u3059\u3001Falcor.Model(\u6b63\u78ba\u306b\u306fFalcor.HttpDataSource)\u304c\u3001{$type: 'ref'}\u306e\u53c2\u7167\u69cb\u9020\u3092\u89e3\u6c7a\u3057\u305f\u4e0a\u3067\u3001TODO\u306e\u5b9f\u4f53\u3067\u3042\u308b'todoByIds.todo2.completedAt'\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u70ba\u3067\u3059\u3002\n\u3053\u308c\u306b\u3088\u308a\u3001Falcor Router\u5074\u3067\u306f\u3001route: 'todoByIds[{keys:ids}][{keys:props}]' \u306eset\u95a2\u6570\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b set\u95a2\u6570\u306f\u5f15\u6570/Promise\u306e\u623b\u308a\u5024\u5171\u306bJSON Graph Envelope\u3067\u3059\u3002\n\ncall\n\u6700\u5f8c\u306bcall \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002get/set\u306b\u3064\u3044\u3066\u306f\u3001\u524d\u56de\u304b\u3089\u8aac\u660e\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001call\u306f\u521d\u767b\u5834\u3067\u3057\u305f\u306d\u3002\n\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u3092\u3059\u308b\u524d\u306b\u3001call\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u3079\u304d\u304b\u3001\u3068\u3044\u3046\u8a71\u304b\u3089\u89e6\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nFalcor\u306eDataSource(Http)\u3084\u3001\u305d\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u3042\u308bFalcor.Model\u306fget/set/call\u3068\u3044\u3046JSON Graph\u3078\u306e\u30a2\u30af\u30bb\u30c3\u30b5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5b9f\u88c5\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306a\u533a\u5225\u304c\u3042\u308a\u307e\u3059:\n\nget: JSON Graph\u304b\u3089\u306e\u5024\u53d6\u5f97. \u5b89\u5168\u4e14\u3064\u51aa\u7b49. REST\u3067\u3042\u308c\u3070GET\u30e1\u30bd\u30c3\u30c9.\nset: JSON Graph\u306e\u66f4\u65b0. \u5b89\u5168\u3067\u306f\u7121\u3044\u304c\u51aa\u7b49. REST\u3067\u3042\u308c\u3070PUT/PATCH/DELETE\u30e1\u30bd\u30c3\u30c9.\ncall: JSON Graph\u306b\u5bfe\u3059\u308b\u4efb\u610f\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057. \u5b89\u5168\u3067\u3082\u51aa\u7b49\u3067\u3082\u7121\u3044. REST\u3067\u3042\u308c\u3070POST\u30e1\u30bd\u30c3\u30c9.\n\n\u300c\u5b89\u5168\u300d\u306f\u300c0\u56de\u4ee5\u4e0a\u306e\u4f55\u5ea6\u540c\u3058\u64cd\u4f5c\u3092\u3057\u3066\u3082\u72b6\u614b\u304c\u5909\u5316\u3057\u306a\u3044\u300d\u3053\u3068\u3001 \u300c\u51aa\u7b49\u300d\u306f\u300c1\u56de\u4ee5\u4e0a\u3001\u4f55\u5ea6\u540c\u3058\u64cd\u4f5c\u3092\u65bd\u3057\u3066\u3082\u72b6\u614b\u304c\u5909\u5316\u3057\u306a\u3044\u300d\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306eTODO\u30ea\u30b9\u30c8\u306e\u4f8b\u3067\u8a00\u3046\u3068\u3001\u300c\u65b0\u3057\u3044TODO\u3092\u30ea\u30b9\u30c8\u306b\u52a0\u3048\u308b\u300d\u306f\u5b89\u5168\u3067\u3082\u51aa\u7b49\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306eTodoRouter \u3067\u306f\u3001route: 'todos.push' \u3068 call \u95a2\u6570\u304c\u4f8b\u3068\u3057\u3066\u8a72\u5f53\u3057\u307e\u3059\u3002\n\n\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todos.push',\n    call: function pushNewTodo(callpath, args) {\n        console.log('call todos.push', callpath, args);\n        return this.todoService.add(args[0]).then(todo => {\n            return this.todoService.fetchList().then(list => {\n                return [\n                    {\n                        path: ['todos', 'length'],\n                        value: list.length\n                    },\n                    {\n                        path: ['todos', list.length - 1],\n                        value: {$type: 'ref', value: ['todoByIds', todo.id]}\n                    }\n                ];\n            });\n        });\n    }\n}\n\n\ncall\u306froute\u3067\u6307\u5b9a\u3059\u308b\u30d1\u30b9\u4ee5\u5916\u306b\u3001\u4efb\u610f\u500b\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u3068\u308c\u307e\u3059\u3002call\u95a2\u6570\u306e\u7b2c2\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5024\u3067\u3059\u3002\ncall\u95a2\u6570\u306f\u3001\u300c\u3053\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u5909\u66f4\u3092\u3055\u308c\u308bJSON Graph\u306e\u90e8\u5206\u96c6\u5408\u300d\u3092JSON Graph Envelope\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b2\u3064\u306eJSON Graph\u4e0a\u30d1\u30b9\u304c\u5909\u5316\u3057\u307e\u3059:\n\n\ntodos.length: TODO\u30ea\u30b9\u30c8\u306e\u9577\u3055\u304c\u5909\u5316\u3059\u308b\u305f\u3081\n\ntodoByIds\u3078\u306e\u53c2\u7167: \u30ea\u30b9\u30c8\u672b\u5c3e\u306e\u8981\u7d20\u304c\u65b0\u3057\u304f\u53c2\u7167\u3092\u5f97\u308b\u305f\u3081\n\n\u4f5c\u6210\u3057\u305ftodos.push\u3068\u3044\u3046\u95a2\u6570\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\ncall\u306e\u547c\u3073\u51fa\u3057\nmodel.call('todos.push', [{text: '\u30b5\u30f3\u30c9\u30a4\u30c3\u30c1\u3092\u4f5c\u308b'}], ['text', 'completedAt']).then(out)\n\n\n\u7b2c1\u5f15\u6570, \u7b2c2\u5f15\u6570\u306f\u305d\u306e\u307e\u307e\u3001call\u306e\u95a2\u6570\u540d\u3068\u95a2\u6570\u5f15\u6570\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\n\u7b2c3\u5f15\u6570\u304c\u82e5\u5e72\u66f2\u8005\u3067\u3059\u3002\u3053\u3053\u306b\u306fJSON Graph\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u6307\u5b9a\u3057\u305fpath\u3068\u3001call\u95a2\u6570\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u307e\u308c\u308bJSON Graph reference\u3092\u7d50\u5408\u3057\u305f\u7d50\u679c\u304ccall\u306eHTTP \u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4eca\u56de\u306e\u4f8b\u3067\u8a00\u3046\u3068\u3001call\u95a2\u6570\u81ea\u4f53\u306ftodoByIds\u306eref\u3092\u8fd4\u3059\u3060\u3051\u3067\u3059\u304c\u3001\u547c\u3073\u51fa\u3057\u5074\u306e\u7b2c3\u5f15\u6570\u306b['text', 'completedAt']\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3001route: 'todoByIds[{keys:ids}][{keys:props}]' \u306e get\u304c\u3055\u3089\u306b\u547c\u3073\u51fa\u3055\u308c\u3001\u300c\u30ea\u30b9\u30c8\u306b\u65b0\u3057\u3044TODO\u304c\u7d50\u5408\u3055\u308c\u305f\u72b6\u614b\u306eJSON Graph\u300d\u3092\u8fd4\u5374\u3057\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u3068\u3001call\u306e\u623b\u308a\u5024\u304c{$type: 'ref'}\u306e\u307f\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u3001Router\u304b\u3089\u3059\u308b\u3068\u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u3069\u306e\u5024\u3092\u6b32\u3057\u304c\u3063\u3066\u3044\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u300d\u72b6\u614b\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u524d\u56de\u3082\u8aac\u660e\u3057\u305f\u300c\u914d\u5217\u5168\u4f53\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e\u5024\u306e\u3084\u308a\u3068\u308a\u306f\u8a31\u3055\u306a\u3044\u300d\u3068\u3044\u3046Falcor\u306e\u30dd\u30ea\u30b7\u30fc\u3068\u7167\u3089\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u4eca\u56de\u306ecall\u547c\u3073\u51fa\u3057\u3067\u306f\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u30b1\u30fc\u30b9\u306fError\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\ncall\u547c\u3073\u51fa\u3057\u3067\u5fc5\u305a\u3057\u3082\u7b2c3\u5f15\u6570\u304c\u7701\u7565\u4e0d\u53ef\u80fd\u3068\u3044\u3046\u8a33\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6c17\u3092\u629c\u304f\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6c17\u3092\u4ed8\u3051\u307e\u3057\u3087\u3046\u3002\nFalcor\u541b\u306f\u7d50\u69cb\u6c17\u96e3\u3057\u3044\u306e\u3067\u3059...\n\n\u307e\u3068\u3081\n\u7b2c3\u56de\u306e\u4eca\u56de\u306f\u4e0b\u8a18\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3057\u305f:\n\nfalcor-express, falcor-router, express\u3092\u7528\u3044\u305fFalcor endpoint \u30b5\u30fc\u30d0\u5b9f\u88c5\u65b9\u6cd5\u306e\u57fa\u672c\nFalcor Router\u306eRouting Flow\nget/set/call\u306e\u5b9f\u88c5\u65b9\u6cd5\n\n\u6b21\u56de\u306fReact\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u8a71\u3092\u66f8\u3053\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nFalcor\u5165\u9580\u306e\u7b2c3\u56de\u76ee\u3067\u3059\u3002\n[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6) \u306f\u30d6\u30e9\u30a6\u30b6\u30aa\u30f3\u30ea\u30fc\u3067Falcor\u3092\u52d5\u304b\u3059\u8a71\u3067\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 - \u30b5\u30fc\u30d0\u306bFalcor\u3092\u4ecb\u5728\u3055\u305b\u308b\u8a71\u3092\u66f8\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u904e\u53bb\u56de\u306f\u3053\u3061\u3089:\n\n* [Falcor\u5165\u9580 1\u65e5\u76ee Falcor\u3068\u306f\u4f55\u8005\u304b](http://qiita.com/Quramy/items/5cf4f112d715c2e2d300)\n* [Falcor\u5165\u9580 2\u65e5\u76ee Falcor\u306eJSON Graph\u306b\u89e6\u308c\u3066\u307f\u308b](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\n\n## Falcor\u3068\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u5b9f\u88c5\n[\u7b2c1\u56de](http://qiita.com/Quramy/items/5cf4f112d715c2e2d300)\u3067\u89e3\u8aac\u3057\u305f\u3088\u3046\u306b\u3001Falcor\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8 - \u30b5\u30fc\u30d0\u9593\u306eMiddleware\u3067\u3059\u3002\n\nFalcor\u3067HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30e9\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u958b\u767a\u8005\u306fFalcor\u306eendpoint\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001JSON Grpah Envelope\u3092\u8fd4\u5374\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u73fe\u72b6(2016\u5e742\u6708\u73fe\u5728)\u3067\u3001Falcor\u958b\u767a\u5143\u3067\u3042\u308bNetflix\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u4ed5\u7d44\u307f\u3068\u3057\u3066\u306f\u4e0b\u8a18\u304c\u3042\u308a\u307e\u3059:\n\n* [falcor-router](https://github.com/Netflix/falcor-router): JSON Graph\u306e\u30d1\u30b9\u306b\u5bfe\u3059\u308b\u51e6\u7406\u3092\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002\u3061\u306a\u307f\u306b\u307e\u3060Developer Preview(2016\u5e742\u6708\u73fe\u5728)\n* [falcor-express](https://github.com/Netflix/falcor-express): falcor-router\u3067\u4f5c\u6210\u3057\u305fRouter\u3092Express\u306eRouter\u3068\u3057\u3066\u767b\u9332\u3067\u304d\u308b\n\n\u4e0a\u8a18\u3092Node.js\u306eWeb\u30b5\u30fc\u30d0\u3067\u3042\u308b[Express](http://expressjs.com/)\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001Falcor\u306eendpoint\u30b5\u30fc\u30d0\u3092\u4f5c\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059(\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3053\u306e\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059)\u3002\n\n\u3061\u306a\u307f\u306b\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3001Falcor\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u7279\u5b9a\u306e\u5f62\u5f0f\u306eHTTP \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3067\u304d\u308c\u3070\u3044\u3044\u3060\u3051\u306e\u8a71\u306a\u306e\u3067\u3001\u305d\u306e\u6c17\u306b\u306a\u308c\u3070JavaScript\u3067\u306f\u306a\u304f\u5225\u8a00\u8a9e\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5b9f\u969b\u3001Github\u3067\u691c\u7d22\u3092\u304b\u3051\u3066\u307f\u305f\u6240\u3001\u4e0b\u8a18\u306e\u5b9f\u88c5\u304c\u898b\u3064\u304b\u308a\u307e\u3057\u305f\u3002\n\n* [falcordotnet/falcor.net](https://github.com/falcordotnet/falcor.net): C#\u306e\u30b5\u30fc\u30d0\u5b9f\u88c5.\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u306f\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u56de\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8, \u30b5\u30fc\u30d0\u53cc\u65b9\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3044\u304f\u90fd\u5408\u4e0a\u3001\u4ee5\u4e0b\u306e\u7528\u306a\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3068\u3057\u307e\u3057\u305f:\n\n```text:\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\n- (prj root)/\n |- built/                            \n  |+ front/                           \n  |+ server/                          \n  |  bundle.js                        \n |- src/                              \n  |- front/                           \n   |  index.js                        \n  |- server/                          \n   |  app.js                          \n   |  TodoRouter.js                   \n   |  TodoService.js                  \n |  index.html                        \n |  package.json\n```\n\n`src/front` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30d5\u30ed\u30f3\u30c8\u7528\u306e\u30b3\u30fc\u30c9(\u3068\u3044\u3063\u3066\u3082index.js\u3060\u3051\u3067\u3059\u304c)\u3068`src/server` \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30b5\u30fc\u30d0\u7528\u306e\u30b3\u30fc\u30c9\u3092\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u5fc5\u8981\u3068\u306a\u308bnpm package\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059:\n\n```sh:\u5fc5\u8981\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nnpm -g install browserify babel\nnpm install falcor falcor-http-datasource falcor-router falcor-express express body-parser --save\nnpm install babel-preset-es2015 --save-dev\n```\n\n### \u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\n\u7d30\u304b\u3044\u89e3\u8aac\u306f\u5f8c\u8ff0\u3059\u308b\u3068\u3057\u3066\u3001\u4e00\u65e6\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u304d\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u306fExpress\u306e\u8d77\u52d5\u30b3\u30fc\u30c9\u3067\u3059:\n\n<!-- app.js {{{ -->\n\n```js:server/app.js\nimport * as express from 'express';\nimport * as bodyParser from 'body-parser';\nimport {dataSourceRoute} from 'falcor-express';\nimport {TodoRouter} from './TodoRouter';\n\nconst app = express();\n\n// NOTE: bodyParser\u3092\u5fd8\u308c\u308b\u3068Router\u306eset\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u6ce8\u610f\napp.use(bodyParser.urlencoded({extended: true}));\n\napp.use('/model.json', dataSourceRoute(() => new TodoRouter()));\n\napp.use(express.static(__dirname + '/../../'));\n\napp.listen(4000);\n```\n\n<!-- }}} -->\n\nfalcor-express\u304c\u767b\u5834\u3059\u308b\u306e\u306f`dataSourceRoute`\u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u304c\u3001\u4e0b\u8a18\u3067\u4f5c\u6210\u3059\u308bFalcor Router\u3092Express\u306eRouter\u3068\u3057\u3066'/model.json'\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u767b\u9332\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u7d9a\u3044\u3066\u3001\u4e0b\u8a18\u304c\u672c\u30a8\u30f3\u30c8\u30ea\u306e\u30e1\u30a4\u30f3\u30c6\u30fc\u30de\u3068\u306a\u308bFalcor Router\u90e8\u5206\u3067\u3059\u3002\n\n<!-- TodoRouter {{{ -->\n\n```js:src/server/TodoRouter.js\nimport {createClass} from 'falcor-router';\nimport {TodoService} from './TodoService';\n\nexport class TodoRouter extends createClass([\n    {\n        // {keys: ...}\u3067\u4efb\u610f\u306ekey\u306b\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30eb\u304c\u66f8\u3051\u308b\n        route: 'todoByIds[{keys:ids}][{keys:props}]',\n        get: function getTodoProperty(pathset) {\n            console.log('get:', pathset);\n            return Promise.all(pathset.ids.map(id => this.todoService.fetch(id))).then(todos => {\n                return todos.map(todo => {\n                    var value = {};\n                    pathset.props.forEach(prop => {\n                        value[prop] = todo[prop];\n                    });\n                    return {\n                        path: ['todoByIds', todo.id],\n                        value\n                    };\n                });\n            });\n        },\n        set: function setTodoProperty(jsonGraph) {\n            // Model.set, setValue\u7b49\u3067\u30bb\u30c3\u30c8\u3055\u308c\u305fjsonGraph\u304c\u6e21\u3055\u308c\u308b\n            console.log('set:', jsonGraph);\n            var todoByIds = jsonGraph.todoByIds;\n            var keys = Object.keys(todoByIds);\n            return Promise.all(keys.map(id => this.todoService.set(id, todoByIds[id]))).then(() => ({jsonGraph}));\n        }\n    },\n    {\n        route: 'todos.length',\n        get: function getTodosLength(pathset) {\n            console.log('get:', pathset);\n            return this.todoService.fetchList().then(list => {\n                return {\n                    path: ['todos', 'length'],\n                    value: list.length\n                };\n            });\n        }\n    },\n    {\n        // {integers: ...} \u3067\u4efb\u610f\u306eindex\u306b\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30eb\u304c\u66f8\u3051\u308b\n        route: 'todos[{integers:indices}]',\n        // pathset\u306b\u306f\u30de\u30c3\u30c1\u3057\u305fpath\u3092\u5206\u89e3\u3057\u305f\u3082\u306e\u304c\u683c\u7d0d\u3055\u308c\u308b\n        get: function getTodosReferences(pathset) {\n            console.log('get: ', pathset);\n            return this.todoService.fetchList().then(list => {\n                return {\n                    jsonGraph: {\n                        todos: pathset.indices.filter(i => list[i]).map(i => {\n                            return {$type: 'ref', value: [\"todoByIds\", list[i].id]};\n                        })\n                    }\n                }\n            });\n        }\n    },\n    {\n        route: 'todos.push',\n        call: function pushNewTodo(callpath, args) {\n            console.log('call todos.push', callpath, args);\n            return this.todoService.add(args[0]).then(todo => {\n                return this.todoService.fetchList().then(list => {\n                    return [\n                        {\n                            path: ['todos', 'length'],\n                            value: list.length\n                        },\n                        {\n                            path: ['todos', list.length - 1],\n                            value: {$type: 'ref', value: ['todoByIds', todo.id]}\n                        }\n                    ];\n                });\n            });\n        }\n    }\n]){\n    constructor() {\n        super();\n        this.todoService = new TodoService();\n    }\n}\n```\n\n<!-- }}} -->\n\n\u6700\u5f8c\u306b\u4e0a\u8a18\u306eRouter\u304b\u3089\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b `TodoService` \u3067\u3059\u3002\n\u672c\u6765\u306fServer Side MVC\u306eModel\u76f8\u5f53\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u3001DB\u30a2\u30af\u30bb\u30b9\u304b\u5225Service\u306e\u547c\u3073\u51fa\u3057\u3092\u62c5\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u9762\u5012\u306a\u306e\u3067\u4eca\u56de\u306f\u624b\u629c\u304d\u5b9f\u88c5\u3067\u3059\u3002\n\u5358\u4ef6\u53d6\u5f97\u3001\u5168\u4ef6\u53d6\u5f97\u3001TODO\u306e\u8ffd\u52a0\u3001\u5358\u4ef6\u66f4\u65b0\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n<!-- TodoService {{{ -->\n\n```js:src/server/TodoService.js\nexport class TodoService {\n    constructor() {\n        this._list = [\n            {\n                id: 'todo1',\n                text: '\u725b\u4e73\u3092\u8cb7\u3046',\n                completedAt: '2016-01-01'\n            }, {\n                id: 'todo2',\n                text: 'ATM\u3067\u304a\u91d1\u3092\u5f15\u304d\u51fa\u3059',\n                completedAt: null\n            }\n        ];\n        this._seq = this._list.length;\n    }\n\n    fetchList() {\n        return new Promise(res => {\n            res(this._list);\n        });\n    }\n\n    fetch(id) {\n        return new Promise((res, rej) => {\n            var matched = this._list.filter(t => t.id === id);\n            if(matched.length === 1) {\n                res(matched[0]);\n            }else{\n                rej();\n            }\n        });\n    }\n\n    add(param) {\n        var todo = {\n            id: `todo${++this._seq}`,\n            text: param.text || '',\n            completedAt: param.completedAt || null\n        };\n        this._list.push(todo);\n        return new Promise(res => res(todo));\n    }\n\n    set(id, param) {\n        var item = this._list.filter(l => l.id === id)[0];\n        return new Promise((resolve, reject) => {\n            if(!item) {\n                reject();\n            }else{\n                if(param.text) item.text = param.text;\n                if(param.completedAt) item.completedAt = param.completedAt;\n                resolve(item);\n            }\n        });\n    }\n}\n```\n\n<!-- }}} -->\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\n\u7d9a\u3044\u3066\u3001 \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```js:src/front/index.js\nimport * as Falcor from 'falcor/browser';\nvar out = (res) => {\n    console.log(res && JSON.stringify(res.json, null, 2));\n};\n\nvar model = new Falcor.Model({source: new Falcor.HttpDataSource('/model.json') });\n\nmodel.get('todos[0..9][\"text\", \"completedAt\"]').then(out);\n```\n\n[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u306e\u30b3\u30fc\u30c9\u3068\u6b86\u3069\u5909\u308f\u308a\u307e\u305b\u3093\u306d\u3002Falcor.Model\u4f5c\u6210\u6642\u306e\u5f15\u6570\u304c`cache` \u304b\u3089`HttpDataSource` \u306b\u5909\u308f\u3063\u305f\u4e8b\u3050\u3089\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u7de0\u3081\u3068\u3057\u3066\u3001index.html\u3092\u7528\u610f\u3057\u3066\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\n```html:index.html\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n</head>\n<body>\n<script src=\"built/bundle.js\"></script>\n</body>\n</html>\n```\n\n### \u8d77\u52d5\n\n\u3055\u3066\u3001\u3088\u3046\u3084\u3063\u3068\u8d77\u52d5\u306e\u6e96\u5099\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n```sh:\u8d77\u52d5!\nbabel --presets es2015 -d built src\nnode built/server/app.js\nbrowserify -o built/bundle.js built/front/index.js\n```\n\n\u3068\u3057\u3066\u3001`http://localhost:4000/index.html` \u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u958b\u767a\u8005\u30c4\u30fc\u30eb\u304b\u3089\u30b3\u30f3\u30bd\u30fc\u30eb\u3092\u7acb\u3061\u4e0a\u3052\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u524d\u56de\u3068\u540c\u3058\u304f\u3001TODO\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u7b48\u3067\u3059\u3002\n\n\n## Router\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\n\n\u3053\u3053\u304b\u3089\u306f\u4e0a\u8a18\u3067\u4f5c\u6210\u3057\u305f`TodoRouter.js`\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n### Router\u306e\u4f5c\u6210\u65b9\u6cd5\n\n\u307e\u305a\u306fFalcor Router\u306e\u5b9a\u7fa9\u65b9\u6cd5\u304b\u3089\u3002`createClass` \u3067Router\u306eClass\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u307e\u3059\u3002\u5f15\u6570\u306eRouterDefinition\u304c\u547d\u3002\n\n```js:FalcorRouter\u306e\u5b9a\u7fa9\u65b9\u6cd5\nimport {createClass} from 'falcor-router';\nclass TodoRouter extends createClass([\n  /* Falcor Router \u306e\u5b9a\u7fa9\u3092\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u66f8\u304f */\n]){\n}\n```\n\n`createClass` \u306e\u5f15\u6570\u3068\u3057\u3066\u7528\u610f\u3059\u308bRouter Definitions\u306f\u4e0b\u8a18\u306e\u5f62\u5f0f\u306eJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\n\n```js:RouterDefinitionSignature\n{\n    route: /* JSON Graph Path */,\n    get: function(pathsets) {...},\n    set: function(jsonGraph) {...},\n    call: function(callPath, args) {...}\n}\n```\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u304c`route` \u306e\u30d1\u30b9\u306b\u30de\u30c3\u30c1\u3057\u305f\u5834\u5408\u306b\u3001\u30e1\u30bd\u30c3\u30c9\u306b\u5fdc\u3058\u305f\u95a2\u6570\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\u306a\u304a\u3001get/set/call\u306f\u5168\u3066\u66f8\u304f\u5fc5\u8981\u306f\u306a\u304f\u3001\u5fc5\u8981\u306a\u3082\u306e\u3060\u3051\u5b9f\u88c5\u3059\u308c\u3070\u5145\u5206\u3067\u3059\u3002\n\n### get\n\u3053\u3053\u304b\u3089\u306fRouter Definition\u306eget/set/call\u3092\u500b\u5225\u306b\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u5177\u4f53\u4f8b\u304c\u3042\u3063\u305f\u65b9\u304c\u8aac\u660e\u3057\u3084\u3059\u3044\u306e\u3067\u3001\u5148\u307b\u3069\u306e`model.get('todos[0..9][\"text\", \"completedAt\"]')` \u3068\u3044\u3046\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3001`TodoRouter` \u306b\u3069\u306e\u3088\u3046\u306b\u51e6\u7406\u3055\u308c\u3066\u3044\u304f\u304b\u306b\u6cbf\u3063\u3066\u8aac\u660e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001`route: 'todos[{integers:indices}]'` \u306e `get`\u95a2\u6570\u304c\u52d5\u4f5c\u3057\u307e\u3059\u3002 `{integers:indices}`\u306e\u90e8\u5206\u306f\u3001`[0..9]`\u306e\u3088\u3046\u306a\u6574\u6570\u7bc4\u56f2\u6307\u5b9a\u7b87\u6240\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\n`get` \u95a2\u6570\u306e\u5f15\u6570\u3067\u3042\u308b`pathsets` \u304b\u3089`pathsets.indices` \u306b\u3001\u7bc4\u56f2\u60c5\u5831\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\n\n```js:\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todos[{integers:indices}]',\n    get: function getTodosReferences(pathset) {\n        console.log('get: ', pathset);\n        return this.todoService.fetchList().then(list => {\n            return {\n                jsonGraph: {\n                    todos: pathset.indices.filter(i => list[i]).map(i => {\n                        return {$type: 'ref', value: [\"todoByIds\", list[i].id]};\n                    })\n                }\n            }\n        });\n    }\n}\n```\n\n\u5b9f\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3068\u306a\u308bModel(\u307e\u305f\u306fService\u76f8\u5f53\u306e\u30b3\u30fc\u30c9)\u304b\u3089\u3001TODO\u30ea\u30b9\u30c8\u306eID\u4e00\u89a7\u304c\u5f15\u3051\u305f\u3068\u3057\u307e\u3059(\u4e0a\u8a18\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308b`todoService.fetchList()`)\u3002\n[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u306e\u4f8b\u3068\u540c\u3058\u304f\u3001JSON Graph\u306e`todos`\u306f\u3001`todoByIds`\u306b\u5bfe\u3059\u308b\u53c2\u7167\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f`get` \u95a2\u6570\u306f\u4e0b\u8a18\u306eJSON Grape Envelope\u3092\u8fd4\u5374\u3055\u305b\u307e\u3059\u3002\n\n```js:\u8fd4\u5374\u3059\u308bJSONGraphEnvelope\njsonGraph: {\n    todos: [\n        {$type: 'ref', value: ['todoByIds', 'todo1']},\n        {$type: 'ref', value: ['todoByIds', 'todo2']}\n    ]\n}\n```\n\n`{$type: 'ref', value: ...}`\u304cJSON Graph\u4e0a\u3067\u306e\u53c2\u7167\u3092\u8868\u3059\u306e\u306f\u3082\u3046\u8aac\u660e\u4e0d\u8981\u3067\u3059\u3088\u306d\uff1f(\u4f55\u305d\u308c\uff01\u3063\u3066\u601d\u3046\u306e\u3067\u3042\u308c\u3070\u3001[\u7b2c2\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u306e\u8aac\u660e\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044)\n\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304cFalcor Router\u304c\u901a\u5e38\u306eWeb Application Framework\u306eRouter(Controller)\u3068\u7570\u306a\u308b\u70b9\u3067\u3059\u3002\nExpress\u306eRouter\u3082\u305d\u3046\u3067\u3059\u304c\u3001\u4e00\u822c\u7684\u306aWeb Application Framework\u306eRouter(Controller)\u3068\u3044\u3048\u3070\u30011 HTTP \u30ea\u30af\u30a8\u30b9\u30c8 = 1 \u30e1\u30bd\u30c3\u30c9\u306e\u95a2\u4fc2\u3067\u3059\u304c\u3001falcor-router\u3067\u306f*1 HTTP\u30ea\u30af\u30a8\u30b9\u30c8 = \u8907\u6570\u30e1\u30bd\u30c3\u30c9*\u3067\u3059\u3002\n\n\u5148\u307b\u3069\u306e `route: 'todos[{interger:indices}]'`\u306eget\u95a2\u6570\u304c\u8fd4\u5374\u3059\u308b\u30ea\u30b9\u30c8\u304c\u3001\u53c2\u7167\u5148\u306e\u5b9f\u4f53\u3067\u3042\u308b`todoByIds`\u306eJSON Graph\u3092\u542b\u3093\u3067\u3044\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u3053\u3067Falcor Router\u306f\u6c17\u3092\u5229\u304b\u305b\u3066\u304f\u308c\u307e\u3059\u3002 \u3088\u308a\u5177\u4f53\u7684\u306b\u8a00\u3046\u3068\u3001Falcor Router\u306f\u300c\u3042\u308c\u3001\u3053\u306e\u307e\u307e\u3060\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u53c2\u7167\u5148\u306e\u5024\u304c\u5206\u304b\u3093\u306a\u3044\u72b6\u614b\u306b\u306a\u3063\u3061\u3083\u3046\u305e\uff01\u300d\u3068\u5224\u65ad\u3057\u3001\u7d9a\u3044\u3066 `route: 'todoByIds[{keys:ids}][{keys:props}]'` \u306eget\u95a2\u6570\u3078Routing\u3057\u307e\u3059\u3002\n\u3042\u304f\u307e\u3067`model.get('todos[0..9][\"text\", \"completedAt\"]')`\u3068\u3044\u30461 HTTP \u30ea\u30af\u30a8\u30b9\u30c8\u306e\u4e2d\u3067\u3001\u3053\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u8a33\u3067\u3059\u3002Router\u541b\u8ce2\u3044\uff01\n\n`route: 'todoByIds[{keys:ids}][{keys:props}]'`\u306f\u3001TODO\u306eid\u3068\u3001`\"text\"`\u3084`\"completedAt\"`\u306e2\u7a2e\u985e\u306e\u6587\u5b57\u5217key\u3092pathsets\u306e\u5909\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todoByIds[{keys:ids}][{keys:props}]',\n    get: function getTodoProperty(pathset) {\n        console.log('get:', pathset);\n        return Promise.all(pathset.ids.map(id => this.todoService.fetch(id))).then(todos => {\n            return todos.map(todo => {\n                var value = {};\n                pathset.props.forEach(prop => {\n                    value[prop] = todo[prop];\n                });\n                return {\n                    path: ['todoByIds', todo.id],\n                    value\n                };\n            });\n        });\n    },\n}\n```\n\n\u3053\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u95a2\u6570\u304c\u5b8c\u4e86\u3057\u3066\u521d\u3081\u3066\u3001\u672c\u6765\u306e`model.get('todos[0..9][\"text\", \"completedAt\"]')`\u306eJSON Graph \u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u5b8c\u6210\u3057\u307e\u3059\u3002\n\u4e21\u65b9\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u306e\u4e2d\u8eab\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js:HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u306a\u308bJSONGraphEnvelope\n{\n    todoByIds: {\n        'todo1': {\n            id: 'todo1',\n            text: '\u725b\u4e73\u3092\u8cb7\u3046',\n            completedAt: '2016-01-01'\n        },\n        'todo2': {\n            id: 'todo2',\n            text: 'ATM\u3067\u304a\u91d1\u3092\u5f15\u304d\u51fa\u3059',\n            completedAt: null\n        }\n    },\n    todos: [\n        {$type: 'ref', value: ['todoByIds', 'todo1']},\n        {$type: 'ref', value: ['todoByIds', 'todo2']}\n    ]\n}\n```\n\n\u4e0a\u8a18\u3067\u8aac\u660e\u3057\u305fRouting Flow\u306b\u3064\u3044\u3066\u306f\u6587\u7ae0\u3067\u8aac\u660e\u3055\u308c\u305f\u3060\u3051\u3060\u3068\u5b9f\u611f\u304c\u6e67\u304d\u306b\u304f\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u662f\u975e\u30b5\u30f3\u30d7\u30eb\u3092\u624b\u5143\u3067\u52d5\u4f5c\u3055\u305b\u305f\u4e0a\u3067\u958b\u767a\u8005\u30c4\u30fc\u30eb\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3084Node.js\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u3082\u773a\u3081\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nget\u306b\u304a\u3051\u308bRouting Flow\u306e\u8aac\u660e\u306f\u4ee5\u4e0a\u306a\u306e\u3067\u3059\u304c\u3001\u4e2d\u307e\u3068\u3081\u3068\u3057\u3066Falcor\u304c\u4ecb\u5728\u3057\u306a\u3044\u4e16\u754c\u3068\u306e\u6bd4\u8f03\u3092\u8003\u3048\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306eTODO\u30ea\u30b9\u30c8\u3092Falcor\u3092\u4f7f\u308f\u305a\u306bRESTful Web API\u3067\u7d44\u3093\u3060\u5834\u5408\u3001\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306eRouter\u306f\u6b21\u306e\u3088\u3046\u306a\u5b9f\u88c5\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n* `GET /api/v1/todos`: link\u3068\u3057\u3066\u500b\u5225\u306eTODO id\u3092\u542b\u3081\u308b\n* `GET /api/v1/todos/:todoId`: TODO \u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u304c\u542b\u3093\u3067\u3044\u308b\u5168\u3066\u306e\u5024\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306b\u8fd4\u5374\u3059\u308b\n\n\u3053\u306e\u3088\u3046\u306aRESTful Web API\u3068\u4eca\u56de\u306eFalcor\u7248 TodoRouter\u3092\u6bd4\u8f03\u3059\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u9055\u3044\u304c\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n* REST API\u3067\u306f\u30ea\u30b9\u30c8\u306b\u542b\u307e\u308c\u308blink\u306e\u51e6\u7406\u306f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u5225\u9014\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u304c\u3001JSON Graph\u3068Falcor Router\u306b\u3088\u308a\u3001\u81ea\u52d5\u7684\u306b1\u56de\u306eHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u51e6\u7406\u3057\u3066\u304f\u308c\u308b\n* \u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fView\u304c\u5fc5\u8981\u3068\u3059\u308b\u5024\u306e\u9805\u76ee\u30ec\u30d9\u30eb\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u304f\u308b\u300d\u3068\u3044\u3046Falcor\u306e\u601d\u60f3\u306b\u3088\u308a\u3001`[{interger:indices}]`\u3084`[{key:props}]`\u304c\u767b\u5834\u3059\u308b\u3002\u3053\u306e\u7d50\u679c\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306b\u304a\u3051\u308b\u5206\u89e3\u80fd\u3092\u7d30\u304b\u304f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\n### set\n\n\u7d9a\u3044\u3066\u3001\u5024\u66f4\u65b0\u7cfb\u306e\u51e6\u7406\u3067\u3042\u308bset\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n...\u3068\u306f\u8a00\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001JSON Graph\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3057\u3066\u3044\u308c\u3070set\u3067\u8a9e\u308b\u3053\u3068\u306f\u5b9f\u306f\u6b86\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\n[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u540c\u69d8\u3001`model.setValue('todos[1].completedAt', '2016-02-29')` \u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u8a18\u8ff0\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\nTODO\u30ea\u30b9\u30c8\u306e2\u756a\u76ee\u306e\u8981\u7d20\u306e`completedAt`\u304c `null` \u304b\u3089 `'2016-02-29'`\u306b\u5909\u308f\u3063\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u304b\uff1f\n\n\u3067\u3082\u3088\u304f\u3088\u304f`TodoRouter`\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\u3069\u3053\u306b\u3082`route: 'todos[{interger:indices}]'`\u306eset\u95a2\u6570\u306e\u8a18\u8ff0\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u306e`model.set(...)`\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306abody\u3092\u4f34\u3063\u305fPOST\u304c\u30ea\u30af\u30a8\u30b9\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```json:POST\u306ebody\n{\n  \"jsonGraph\": {\n    \"todoByIds\": {\n      \"todo2\": {\n        \"completedAt\": \"2016-02-29\"\n      }\n    }\n  },\n  \"paths\": [\n    [\"todoByIds\", \"todo2\", \"completedAt\"]\n  ]\n}\n```\n\n\u305d\u3046\u3067\u3059\u3001`Falcor.Model`(\u6b63\u78ba\u306b\u306f`Falcor.HttpDataSource`)\u304c\u3001`{$type: 'ref'}`\u306e\u53c2\u7167\u69cb\u9020\u3092\u89e3\u6c7a\u3057\u305f\u4e0a\u3067\u3001TODO\u306e\u5b9f\u4f53\u3067\u3042\u308b`'todoByIds.todo2.completedAt'`\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u3066\u3044\u308b\u70ba\u3067\u3059\u3002\n\n\u3053\u308c\u306b\u3088\u308a\u3001Falcor Router\u5074\u3067\u306f\u3001`route: 'todoByIds[{keys:ids}][{keys:props}]'` \u306e`set`\u95a2\u6570\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b set\u95a2\u6570\u306f\u5f15\u6570/Promise\u306e\u623b\u308a\u5024\u5171\u306bJSON Graph Envelope\u3067\u3059\u3002\n\n\n### call\n\n\u6700\u5f8c\u306bcall \u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002get/set\u306b\u3064\u3044\u3066\u306f\u3001[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u304b\u3089\u8aac\u660e\u3092\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u3001call\u306f\u521d\u767b\u5834\u3067\u3057\u305f\u306d\u3002\n\u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u3092\u3059\u308b\u524d\u306b\u3001call\u3068\u306f\u3069\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3059\u3079\u304d\u304b\u3001\u3068\u3044\u3046\u8a71\u304b\u3089\u89e6\u308c\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\nFalcor\u306eDataSource(Http)\u3084\u3001\u305d\u306e\u30c7\u30b3\u30ec\u30fc\u30bf\u3067\u3042\u308bFalcor.Model\u306fget/set/call\u3068\u3044\u3046JSON Graph\u3078\u306e\u30a2\u30af\u30bb\u30c3\u30b5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u5b9f\u88c5\u30dd\u30ea\u30b7\u30fc\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306a\u533a\u5225\u304c\u3042\u308a\u307e\u3059:\n\n* get: JSON Graph\u304b\u3089\u306e\u5024\u53d6\u5f97. \u5b89\u5168\u4e14\u3064\u51aa\u7b49. REST\u3067\u3042\u308c\u3070GET\u30e1\u30bd\u30c3\u30c9.\n* set: JSON Graph\u306e\u66f4\u65b0. \u5b89\u5168\u3067\u306f\u7121\u3044\u304c\u51aa\u7b49. REST\u3067\u3042\u308c\u3070PUT/PATCH/DELETE\u30e1\u30bd\u30c3\u30c9.\n* call: JSON Graph\u306b\u5bfe\u3059\u308b\u4efb\u610f\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057. \u5b89\u5168\u3067\u3082\u51aa\u7b49\u3067\u3082\u7121\u3044. REST\u3067\u3042\u308c\u3070POST\u30e1\u30bd\u30c3\u30c9.\n\n\u300c\u5b89\u5168\u300d\u306f\u300c0\u56de\u4ee5\u4e0a\u306e\u4f55\u5ea6\u540c\u3058\u64cd\u4f5c\u3092\u3057\u3066\u3082\u72b6\u614b\u304c\u5909\u5316\u3057\u306a\u3044\u300d\u3053\u3068\u3001 \u300c\u51aa\u7b49\u300d\u306f\u300c1\u56de\u4ee5\u4e0a\u3001\u4f55\u5ea6\u540c\u3058\u64cd\u4f5c\u3092\u65bd\u3057\u3066\u3082\u72b6\u614b\u304c\u5909\u5316\u3057\u306a\u3044\u300d\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306eTODO\u30ea\u30b9\u30c8\u306e\u4f8b\u3067\u8a00\u3046\u3068\u3001\u300c\u65b0\u3057\u3044TODO\u3092\u30ea\u30b9\u30c8\u306b\u52a0\u3048\u308b\u300d\u306f\u5b89\u5168\u3067\u3082\u51aa\u7b49\u3067\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4eca\u56de\u306e`TodoRouter` \u3067\u306f\u3001`route: 'todos.push'` \u3068 `call` \u95a2\u6570\u304c\u4f8b\u3068\u3057\u3066\u8a72\u5f53\u3057\u307e\u3059\u3002\n\n```js:\u52d5\u4f5c\u3059\u308bRouting\u90e8\u5206(TodoRouter.js\u3088\u308a\u629c\u7c8b)\n{\n    route: 'todos.push',\n    call: function pushNewTodo(callpath, args) {\n        console.log('call todos.push', callpath, args);\n        return this.todoService.add(args[0]).then(todo => {\n            return this.todoService.fetchList().then(list => {\n                return [\n                    {\n                        path: ['todos', 'length'],\n                        value: list.length\n                    },\n                    {\n                        path: ['todos', list.length - 1],\n                        value: {$type: 'ref', value: ['todoByIds', todo.id]}\n                    }\n                ];\n            });\n        });\n    }\n}\n```\n\ncall\u306f`route`\u3067\u6307\u5b9a\u3059\u308b\u30d1\u30b9\u4ee5\u5916\u306b\u3001\u4efb\u610f\u500b\u6570\u306e\u5f15\u6570\u3092\u53d7\u3051\u3068\u308c\u307e\u3059\u3002`call`\u95a2\u6570\u306e\u7b2c2\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u5024\u3067\u3059\u3002\ncall\u95a2\u6570\u306f\u3001\u300c\u3053\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u306b\u3088\u3063\u3066\u5909\u66f4\u3092\u3055\u308c\u308bJSON Graph\u306e\u90e8\u5206\u96c6\u5408\u300d\u3092JSON Graph Envelope\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u3042\u308c\u3070\u3001\u4ee5\u4e0b2\u3064\u306eJSON Graph\u4e0a\u30d1\u30b9\u304c\u5909\u5316\u3057\u307e\u3059:\n\n* `todos.length`: TODO\u30ea\u30b9\u30c8\u306e\u9577\u3055\u304c\u5909\u5316\u3059\u308b\u305f\u3081\n* `todoByIds`\u3078\u306e\u53c2\u7167: \u30ea\u30b9\u30c8\u672b\u5c3e\u306e\u8981\u7d20\u304c\u65b0\u3057\u304f\u53c2\u7167\u3092\u5f97\u308b\u305f\u3081\n\n\u4f5c\u6210\u3057\u305f`todos.push`\u3068\u3044\u3046\u95a2\u6570\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u547c\u3073\u51fa\u3059\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n```js:call\u306e\u547c\u3073\u51fa\u3057\nmodel.call('todos.push', [{text: '\u30b5\u30f3\u30c9\u30a4\u30c3\u30c1\u3092\u4f5c\u308b'}], ['text', 'completedAt']).then(out)\n```\n\n\u7b2c1\u5f15\u6570, \u7b2c2\u5f15\u6570\u306f\u305d\u306e\u307e\u307e\u3001call\u306e\u95a2\u6570\u540d\u3068\u95a2\u6570\u5f15\u6570\u306b\u8a72\u5f53\u3057\u307e\u3059\u3002\n\u7b2c3\u5f15\u6570\u304c\u82e5\u5e72\u66f2\u8005\u3067\u3059\u3002\u3053\u3053\u306b\u306fJSON Graph\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u6307\u5b9a\u3057\u305fpath\u3068\u3001call\u95a2\u6570\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u542b\u307e\u308c\u308bJSON Graph reference\u3092\u7d50\u5408\u3057\u305f\u7d50\u679c\u304ccall\u306eHTTP \u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u4f8b\u3067\u8a00\u3046\u3068\u3001call\u95a2\u6570\u81ea\u4f53\u306f`todoByIds`\u306eref\u3092\u8fd4\u3059\u3060\u3051\u3067\u3059\u304c\u3001\u547c\u3073\u51fa\u3057\u5074\u306e\u7b2c3\u5f15\u6570\u306b`['text', 'completedAt']`\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3001`route: 'todoByIds[{keys:ids}][{keys:props}]'` \u306e `get`\u304c\u3055\u3089\u306b\u547c\u3073\u51fa\u3055\u308c\u3001\u300c\u30ea\u30b9\u30c8\u306b\u65b0\u3057\u3044TODO\u304c\u7d50\u5408\u3055\u308c\u305f\u72b6\u614b\u306eJSON Graph\u300d\u3092\u8fd4\u5374\u3057\u3066\u304f\u308c\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u4eca\u56de\u306e\u30b1\u30fc\u30b9\u3067\u306f\u3001\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u3068\u3001call\u306e\u623b\u308a\u5024\u304c`{$type: 'ref'}`\u306e\u307f\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u3001Router\u304b\u3089\u3059\u308b\u3068\u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c\u3069\u306e\u5024\u3092\u6b32\u3057\u304c\u3063\u3066\u3044\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u300d\u72b6\u614b\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001[\u524d\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u3082\u8aac\u660e\u3057\u305f\u300c\u914d\u5217\u5168\u4f53\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u542b\u307e\u308c\u308b\u5168\u3066\u306e\u5024\u306e\u3084\u308a\u3068\u308a\u306f\u8a31\u3055\u306a\u3044\u300d\u3068\u3044\u3046Falcor\u306e\u30dd\u30ea\u30b7\u30fc\u3068\u7167\u3089\u3057\u5408\u308f\u305b\u308b\u3068\u3001\u4eca\u56de\u306ecall\u547c\u3073\u51fa\u3057\u3067\u306f\u7b2c3\u5f15\u6570\u3092\u7701\u7565\u3059\u308b\u30b1\u30fc\u30b9\u306fError\u3068\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\ncall\u547c\u3073\u51fa\u3057\u3067\u5fc5\u305a\u3057\u3082\u7b2c3\u5f15\u6570\u304c\u7701\u7565\u4e0d\u53ef\u80fd\u3068\u3044\u3046\u8a33\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u6c17\u3092\u629c\u304f\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6c17\u3092\u4ed8\u3051\u307e\u3057\u3087\u3046\u3002\nFalcor\u541b\u306f\u7d50\u69cb\u6c17\u96e3\u3057\u3044\u306e\u3067\u3059...\n\n## \u307e\u3068\u3081\n\n\u7b2c3\u56de\u306e\u4eca\u56de\u306f\u4e0b\u8a18\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3057\u305f:\n\n* falcor-express, falcor-router, express\u3092\u7528\u3044\u305fFalcor endpoint \u30b5\u30fc\u30d0\u5b9f\u88c5\u65b9\u6cd5\u306e\u57fa\u672c\n* Falcor Router\u306eRouting Flow\n* get/set/call\u306e\u5b9f\u88c5\u65b9\u6cd5\n\n\u6b21\u56de\u306fReact\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u8a71\u3092\u66f8\u3053\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Falcor", "JavaScript", "Express"]}