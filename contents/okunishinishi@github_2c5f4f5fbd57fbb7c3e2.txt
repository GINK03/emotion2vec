{"tags": ["SUGOS", "tutorial"], "context": "\n\n\u3010SUGOS\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3011 04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b\n\u524d\u56de\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u306f\u3001Browser\u9593\u306e\u901a\u4fe1\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\u3055\u3066\u3001\u3053\u308c\u307e\u3067\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306fActor\u306e\u5ba3\u8a00\u6642\u306b\u3001\u63d0\u4f9b\u3059\u308bModule\u3092\u6bce\u56de\u305d\u306e\u5834\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3068\u306a\u308b\u3068\u3001Module\u3092\u4f7f\u3044\u56de\u3057\u305f\u304f\u306a\u308b\u5834\u5408\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\u305d\u3053\u3067\u4eca\u56de\u306f\u3001Module\u3092\u5358\u4f53\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u751f\u6210\u3057\u3001npm\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u914d\u5e03\u3057\u307e\u3059\u3002\n\u6a5f\u80fd\u3068\u3057\u3066\u306f\u7c21\u5358\u306aKeyValueStore\u306b\u3057\u307e\u3059\u3002\u30ad\u30fc\u3068\u5024\u3092\u6e21\u3059\u3068\u3001\u305d\u308c\u3092\u30ed\u30fc\u30ab\u30eb\u306eJSON\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\n\u5185\u5bb9\n\n\u4e8b\u524d\u6e96\u5099\n\n\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u96db\u5f62\u306e\u4f5c\u6210\nModule\u306e\u5b9f\u88c5\nModule\u306e\u30c6\u30b9\u30c8\n\n\n\u307e\u3068\u3081\n\n\u304a\u307e\u3051\n\n\u96d1\u8ac7: Javascript\u306e\u95a2\u6570\u3067\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u307f\u308b\n\n\n\u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\u30ea\u30f3\u30af\n\n\n\u4e8b\u524d\u6e96\u5099\n\u307e\u305a\u306fsugo-scaffold\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001SUGOS\u95a2\u9023\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n# Install as global module\nnpm install -g sugo-scaffold\n\n# Show version to check if the installation succeeded\nsugo-scaffold --version\n\n\n\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u96db\u5f62\u306e\u4f5c\u6210\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067sugo-scaffold <type> <dircotry>\u3092\u5b9f\u884c\u3059\u308b\u3068\u5bfe\u8a71\u30b7\u30a7\u30eb\u304c\u59cb\u307e\u308a\u3001\u5024\u3092\u5165\u529b\u3059\u308b\u3068\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n# Create a module project\nsugo-scaffold module \"sugos-tutorial-04\"\ncd sugos-tutorial-04\nnpm install\nnpm test\n\nmodule_name\u306e\u90e8\u5206\u306f\u4eca\u56de\u4f5c\u6210\u3059\u308b\"KeyValueStore\"\u3068\u3044\u3046\u540d\u79f0\u306b\u3057\u307e\u3059\u3002\n\n\u6700\u5f8c\u307e\u3067\u7b54\u3048\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nModule\u306e\u5b9f\u88c5\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u306e\u4e2d\u306b\"lib/key_value_store.js\"\u3068\u540d\u524d\u3067Module\u30af\u30e9\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n/**\n * KeyValueStore class\n * @class KeyValueStore\n * @augments Module\n * @param {Object} config - Configuration\n */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n  constructor (config = {}) {\n    debug('Config: ', config)\n    super(config)\n  }\n\n  /**\n   * Ping a message.\n   * @param {string} pong\n   * @returns {Promise.<string>} - Pong message\n   */\n  ping (pong = 'pong') {\n    return co(function * pingAck () {\n      return pong // Return result to a remote caller.\n    })\n  }\n\n  /**\n   * Assert actor system requirements.\n   * @throws {Error} - System requirements failed error\n   * @returns {Promise.<boolean>} - Asserted state\n   */\n  assert () {\n    const bins = [ 'node' ] // Required commands\n    return co(function * assertAck () {\n      yield hasBin.assertAll(bins)\n      return true\n    })\n  }\n\n  /**\n   * Module specification\n   * @see https://github.com/realglobe-Inc/sg-schemas/blob/master/lib/module_spec.json\n   */\n  get $spec () {\n    return {\n      name,\n      version,\n      desc: description,\n      methods: {\n        ping: {\n          desc: 'Test the reachability of a module.',\n          params: [\n            { name: 'pong', type: 'string', desc: 'Pong message to return' }\n          ],\n          return: {\n            type: 'string',\n            desc: 'Pong message'\n          }\n        },\n\n        assert: {\n          desc: 'Test if the actor fulfills system requirements',\n          params: [],\n          throws: [ {\n            type: 'Error',\n            desc: 'System requirements failed'\n          } ],\n          return: {\n            type: 'boolean',\n            desc: 'System is OK'\n          }\n        }\n      },\n\n      events: null\n    }\n  }\n}\n\nmodule.exports = KeyValueStore\n\n\n\u3059\u3067\u306b\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\u751f\u5b58\u78ba\u8a8d\u7528\u306e.ping()\u30e1\u30bd\u30c3\u30c9\u3068\u3001\u7a3c\u50cd\u74b0\u5883\u306e\u78ba\u8a8d\u7528\u306e.assert()\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\nnpm test\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5b9f\u969b\u306b\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u6700\u5f8c\u306e\u90e8\u5206\u306b\u306f\nget $spec () { /* ... */ }\n\u3068\u3044\u3046getter\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u3053\u306b\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u60c5\u5831\u304c\u63cf\u5199\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u4efb\u610f\u306e\u4ed8\u52a0\u60c5\u5831\u3067\u3042\u308a\u3001\u5b9f\u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u52d5\u304f\u306e\u3067\u3059\u304c\u3001\u5358\u4f53\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3059\u308b\u3088\u3046\u306aModule\u306e\u5834\u5408\u306f\u304d\u3061\u3093\u3068\u66f8\u304f\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\n\u3055\u3066\u3001\u3053\u3053\u306bKeyValueStore\u3063\u307d\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n/** ... */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst fs = require('fs')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n\n  // Add \"filename\" parameter on constructor\n\n  constructor (config = {}) {\n    let { filename = 'kv.json' } = config\n    debug('Config: ', config)\n    super(config)\n    const s = this\n    s.filename = filename\n  }\n\n  /** ... */\n  ping (pong = 'pong') { /* ... */ }\n\n  /** ... */\n  assert () { /* ... */ }\n\n  // Define methods for Key-vale store\n\n  set (key, value) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read().catch(() => ({}))\n      data[ key ] = value\n      return yield s._write(data)\n    })\n  }\n\n  get (key) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read()\n      return data[ key ]\n    })\n  }\n\n  del (key) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read()\n      delete data[ key ]\n      return yield s._write(data)\n    })\n  }\n\n  // Private function to read data file\n  // Methods with \"_\" is not exposed to remote caller\n  _read () {\n    let { filename } = this\n    return new Promise((resolve, reject) =>\n      fs.readFile((filename), (err, content) => err ? reject(err) : resolve(content))\n    ).then(JSON.parse)\n  }\n\n  // Private function to write data file\n  // Methods with \"_\" is not exposed to remote caller\n  _write (data) {\n    let { filename } = this\n    return new Promise((resolve, reject) =>\n      fs.writeFile(filename, JSON.stringify(data), (err) => err ? reject(err) : resolve())\n    )\n  }\n\n  /** ... */\n  get $spec () { /* ... */ }\n}\n\nmodule.exports = KeyValueStore\n\n\n\u307e\u305a\u306fconstructor\u306e\u5f15\u6570\u306bfilename\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002keyValue\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u5148\u3067\u3059\u3002\n\u6b21\u306b\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u7528\u306e._read()\u3068._write(data)\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u59cb\u307e\u308b\u540d\u524d\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u3068\u3057\u3066\u6271\u308f\u308c\u3001 Actor\u306b\u6e21\u3057\u3066\u3082Caller\u306b\u306f\u5171\u6709\u3055\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u306fconstructor\u3067\u6e21\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306bJSON\u3068\u3057\u3066\u306e\u8aad\u307f\u66f8\u304d\u3092\u3057\u3001Promise\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u306b\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u305d\u308c\u3089\u3092\u5229\u7528\u3059\u308b.set(key, value)\u3001.get(key)\u3001.del(key)\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u5358\u7d14\u306aKeyValueStore\u306e\u5b8c\u6210\u3067\u3059\u3002\n\u5b9f\u88c5\u3057\u305f\u3089\u5fd8\u308c\u305a\u306b$spec\u3082\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\n/** ... */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst fs = require('fs')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n  constructor (config = {}) { /* ... */ }\n\n  /** ... */\n  ping (pong = 'pong') { /* ... */ }\n\n  /** ... */\n  assert () { /* ... */ }\n\n  set (key, value) { /* ... */ }\n\n  get (key) { /* ... */ }\n\n  del (key) { /* ... */ }\n\n  // Private function to read data file\n  // Methods with \"_\" is not exposed to remote caller\n  _read () { /* ... */ }\n\n  // Private function to write data file\n  // Methods with \"_\" is not exposed to remote caller\n  _write (data) { /* ... */ }\n\n  /**\n   * Module specification\n   * @see https://github.com/realglobe-Inc/sg-schemas/blob/master/lib/module_spec.json\n   */\n  get $spec () {\n    return {\n      name,\n      version,\n      desc: description,\n      methods: {\n        ping: { /* ... */ },\n\n        assert: { /* ... */ },\n\n        set: {\n          desc: 'Set key value',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' },\n            { name: 'value', type: 'string', desc: 'value to set' }\n          ]\n        },\n\n        get: {\n          desc: 'Get by key ',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' }\n          ],\n          return: { type: 'string', desc: 'Found value' }\n        },\n\n        del: {\n          desc: 'Delete by key ',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' }\n          ]\n        }\n      },\n      events: null\n    }\n  }\n}\n\nmodule.exports = KeyValueStore\n\n\n\nModule\u306e\u30c6\u30b9\u30c8\n\u6b21\u306b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\"test/key_value_store_test.js\"\u306b\u306f\u3059\u3067\u306b\u5e7e\u3064\u304b\u306e\u30c6\u30b9\u30c8\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n/**\n * Test case for demoModule.\n * Runs with mocha.\n */\n'use strict'\n\nconst KeyValueStore = require('../lib/key_value_store.js')\nconst assert = require('assert')\nconst co = require('co')\nconst { EventEmitter } = require('events')\nconst sgSchemas = require('sg-schemas')\nconst sgValidator = require('sg-validator')\n\ndescribe('demo-module', function () {\n  this.timeout(3000)\n\n  before(() => co(function * () {\n\n  }))\n\n  after(() => co(function * () {\n\n  }))\n\n  it('Get module spec', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    assert.ok(module)\n\n    let { $spec } = module\n    let specError = sgValidator(sgSchemas.moduleSpec).validate($spec)\n    assert.ok(!specError)\n  }))\n\n  it('Try ping-pong', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let pong = yield module.ping('pong')\n    assert.equal(pong, 'pong')\n  }))\n\n  it('Do assert', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let caught\n    try {\n      yield module.assert({})\n    } catch (err) {\n      caught = err\n    }\n    assert.ok(!caught)\n  }))\n\n  it('Compare methods with spec', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let { $spec } = module\n    let implemented = Object.getOwnPropertyNames(KeyValueStore.prototype)\n      .filter((name) => !/^[\\$_]/.test(name))\n      .filter((name) => !~[ 'constructor' ].indexOf(name))\n    let described = Object.keys($spec.methods).filter((name) => !/^[\\$_]/.test(name))\n    for (let name of implemented) {\n      assert.ok(!!~described.indexOf(name), `${name} method should be described in spec`)\n    }\n    for (let name of described) {\n      assert.ok(!!~implemented.indexOf(name), `${name} method should be implemented`)\n    }\n  }))\n})\n\n/* global describe, before, after, it */\n\n\n\u3053\u3053\u306b\u4f5c\u6210\u3057\u305f\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n/**\n * Test case for demoModule.\n * Runs with mocha.\n */\n'use strict'\n\nconst KeyValueStore = require('../lib/key_value_store.js')\nconst assert = require('assert')\nconst co = require('co')\nconst { EventEmitter } = require('events')\nconst sgSchemas = require('sg-schemas')\nconst sgValidator = require('sg-validator')\n\ndescribe('demo-module', function () {\n  this.timeout(3000)\n\n  before(() => co(function * () {\n\n  }))\n\n  after(() => co(function * () {\n\n  }))\n\n  it('Get module spec', () => co(function * () { /* ... */ }))\n\n  it('Try ping-pong', () => co(function * () { /* ... */ }))\n\n  it('Do assert', () => co(function * () { /* ... */ }))\n\n  it('Compare methods with spec', () => co(function * () { /* ... */ }))\n\n  it('Do get/set/del', () => co(function * () {\n    let module = new KeyValueStore({\n      filename: `${__dirname}/../testing-store.json`,\n      $emitter: new EventEmitter()\n    })\n    yield module.set('foo', 'This is foo')\n    {\n      let foo = yield module.get('foo')\n      assert.equal(foo, 'This is foo')\n    }\n    yield module.del('foo')\n    {\n      let foo = yield module.get('foo')\n      assert.equal(foo, undefined)\n    }\n  }))\n})\n\n/* global describe, before, after, it */\n\n\nnpm test\n\n\u3067\u7121\u4e8b\u30c6\u30b9\u30c8\u304c\u901a\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u3042\u3068\u306fnpm publish\u3059\u308c\u3070npm\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n\u305d\u3057\u305f\u3089\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n#!/usr/bin/env node\n\n/**\n * Example usage to register module on actor\n * @see https://github.com/realglobe-Inc/sugo-actor\n */\n'use strict'\n\nconst { KeyValueStore } = require('sugos-tutorial-04')\nconst sugoActor = require('sugo-actor')\nconst co = require('co')\n\nco(function * () {\n  let actor = sugoActor('http://my-sugo-cloud.example.com/actors', {\n    key: 'my-actor-01',\n    modules: {\n      // Register the module\n      kvs: new KeyValueStore({\n        filename: 'kv.json'\n      })\n    }\n  })\n  yield actor.connect()\n}).catch((err) => console.error(err))\n\n\n\n\u307e\u3068\u3081\n\n\nsugo-scaffold\u3067\u96db\u5f62\u304c\u751f\u6210\u3067\u304d\u308b\n\n$spec\u3067Module\u81ea\u8eab\u3092\u63cf\u5199\u3067\u304d\u308b\n\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u59cb\u307e\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u6271\u3044\u306b\u306a\u308a\u3001Caller\u306b\u306f\u5171\u6709\u3055\u308c\u306a\u3044\nActor\u3084Hub\u304c\u306a\u304f\u3066\u3082\u30c6\u30b9\u30c8\u3067\u304d\u308b\n\n\u306a\u304a\u3001\u4eca\u56de\u51fa\u3066\u304d\u305fSnippet\u306f\u3001\u3053\u3061\u3089\u304b\u3089\u3082\u5165\u624b\u3067\u304d\u307e\u3059\n\n\u304a\u307e\u3051\n\n\u96d1\u8ac7: Javascript\u306e\u95a2\u6570\u3067\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u307f\u308b\n\u4f8b\u3048\u3070Python\u3060\u3068Keyword Arguments\u306a\u308b\u4ed5\u69d8\u304c\u3042\u3063\u3066\u3001\n\u5f15\u6570\u306e\u591a\u3044\u95a2\u6570\u3092\u3046\u307e\u304f\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n# Keyword-arguments example of Python\ndef do_something(src, dest, **keywords):\n  force = keywords.pop('force', false)\n  mkdirp = keywords.pop('mkdirp', true)\n  print('Do something with args: ', src, dest, force)\n\ndo_something('foo.txt', 'bar.txt', force=false, mkdirp=false)\n\n\u3053\u308c\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092JavaScript\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u305d\u308c\u306f\u3082\u3046\u5927\u5909\u3067\u3057\u305f\u3002ES2015\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306f\u306d\u3002\nNode.js6\u304b\u3089\u5c0e\u5165\u3055\u308c\u305fES2015\u306eDestructuring assignment\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3001\n// Example JavasScript, after ES2015\nfunction doSomething (src, dest, options = {}) {\n  let {\n    force = false,\n    mkdirp = true\n  } = options\n  console.log('Do something with args: ', src, dest, force)\n}\ndoSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001python\u3068\u5927\u5dee\u306a\u3044\u5f62\u3067\u304b\u3051\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093preset-es2015\u3067\u30d0\u30d9\u308c\u3070\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u52d5\u304d\u307e\u3059\u3002\n\u6614\u3060\u3063\u305f\u3089\n// Example JavasScript, before ES2015\nfunction doSomething (src, dest, options) {\n  if(typeof options === 'undefined') {\n    options = {}\n  }\n  var force = typeof options.force === 'undefined' ? false : options.force\n  var mkdirp = typeof options.mkdirp === 'undefined' ? true : options.mkdirp\n  console.log('Do something with args: ', src, dest, force)\n}\ndoSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })\n\n\u3068\u304b\u66f8\u3044\u3066\u3044\u305f\u306e\u306b\u3002\u3082\u3046\u643a\u5e2f\u96fb\u8a71\u304c\u306a\u304b\u3063\u305f\u6642\u4ee3\u3068\u540c\u3058\u304f\u3089\u3044\u9060\u304f\u611f\u3058\u307e\u3059\u306d\u3002\n\n\u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\n\u524d\u56de: 03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b\n\n\u6b21\u56de: 05 - Actor\u3084Caller\u3092\u8a8d\u8a3c\u3059\u308b\n\n\n\n\u30ea\u30f3\u30af\n\nSUGOS\nSUGO-Actor\nSUGO-Scaffold\nTutorials\n\n\n00 - SUGOS\u3053\u3068\u306f\u3057\u3099\u3081\n01 - Hello World\u3057\u3066\u307f\u308b\n02 - Event Emit\u3057\u3066\u307f\u308b\n03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b\n04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b\n\n\n\n# \u3010SUGOS\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3011 04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b\n\n[\u524d\u56de\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/03%20-%20Browser%E9%96%93%E3%81%A7%E3%82%84%E3%82%8A%E5%8F%96%E3%82%8A%E3%81%99%E3%82%8B.md)\u3067\u306f\u3001Browser\u9593\u306e\u901a\u4fe1\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n\u3055\u3066\u3001\u3053\u308c\u307e\u3067\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306fActor\u306e\u5ba3\u8a00\u6642\u306b\u3001\u63d0\u4f9b\u3059\u308bModule\u3092\u6bce\u56de\u305d\u306e\u5834\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u5b9f\u969b\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3068\u306a\u308b\u3068\u3001Module\u3092\u4f7f\u3044\u56de\u3057\u305f\u304f\u306a\u308b\u5834\u5408\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u4eca\u56de\u306f\u3001Module\u3092\u5358\u4f53\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u751f\u6210\u3057\u3001npm\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u914d\u5e03\u3057\u307e\u3059\u3002\n\u6a5f\u80fd\u3068\u3057\u3066\u306f\u7c21\u5358\u306aKeyValueStore\u306b\u3057\u307e\u3059\u3002\u30ad\u30fc\u3068\u5024\u3092\u6e21\u3059\u3068\u3001\u305d\u308c\u3092\u30ed\u30fc\u30ab\u30eb\u306eJSON\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\n<a href=\"https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/04%20-%20Module%E3%82%92npm%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8C%96%E3%81%99%E3%82%8B.md\"><img src=\"https://raw.githubusercontent.com/realglobe-Inc/sugos-tutorial/master/dist/images/eyecatch-package.jpg\" alt=\"eyecatch\" height=\"128\" style=\"height:128px\" /></a>\n\n## \u5185\u5bb9\n- [\u4e8b\u524d\u6e96\u5099](#%E4%BA%8B%E5%89%8D%E6%BA%96%E5%82%99)\n- [\u5b9f\u88c5\u3057\u3066\u307f\u308b](#%E5%AE%9F%E8%A3%85%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B)\n  * [\u96db\u5f62\u306e\u4f5c\u6210](#%E9%9B%9B%E5%BD%A2%E3%81%AE%E4%BD%9C%E6%88%90)\n  * [Module\u306e\u5b9f\u88c5](#module%E3%81%AE%E5%AE%9F%E8%A3%85)\n  * [Module\u306e\u30c6\u30b9\u30c8](#module%E3%81%AE%E3%83%86%E3%82%B9%E3%83%88)\n- [\u307e\u3068\u3081](#%E3%81%BE%E3%81%A8%E3%82%81)\n- [\u304a\u307e\u3051](#%E3%81%8A%E3%81%BE%E3%81%91)\n  * [\u96d1\u8ac7: Javascript\u306e\u95a2\u6570\u3067\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u307f\u308b](#%E9%9B%91%E8%AB%87-javascript%E3%81%AE%E9%96%A2%E6%95%B0%E3%81%A7%E3%82%AD%E3%83%BC%E3%83%AF%E3%83%BC%E3%83%89%E5%BC%95%E6%95%B0%E3%81%BF%E3%81%9F%E3%81%84%E3%81%AA%E3%81%93%E3%81%A8%E3%82%92%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B)\n- [\u3053\u308c\u3082\u8aad\u307f\u305f\u3044](#%E3%81%93%E3%82%8C%E3%82%82%E8%AA%AD%E3%81%BF%E3%81%9F%E3%81%84)\n- [\u30ea\u30f3\u30af](#%E3%83%AA%E3%83%B3%E3%82%AF)\n\n\n## \u4e8b\u524d\u6e96\u5099\n\n\u307e\u305a\u306f[sugo-scaffold](https://github.com/realglobe-Inc/sugo-scaffold)\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3046\u3068\u3001SUGOS\u95a2\u9023\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u7c21\u5358\u306b\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```bash\n# Install as global module\nnpm install -g sugo-scaffold\n\n# Show version to check if the installation succeeded\nsugo-scaffold --version\n```\n\n## \u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n### \u96db\u5f62\u306e\u4f5c\u6210\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067`sugo-scaffold <type> <dircotry>`\u3092\u5b9f\u884c\u3059\u308b\u3068\u5bfe\u8a71\u30b7\u30a7\u30eb\u304c\u59cb\u307e\u308a\u3001\u5024\u3092\u5165\u529b\u3059\u308b\u3068\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n```bash\n# Create a module project\nsugo-scaffold module \"sugos-tutorial-04\"\ncd sugos-tutorial-04\nnpm install\nnpm test\n```\n\n`module_name`\u306e\u90e8\u5206\u306f\u4eca\u56de\u4f5c\u6210\u3059\u308b\"KeyValueStore\"\u3068\u3044\u3046\u540d\u79f0\u306b\u3057\u307e\u3059\u3002\n\n<img src=\"https://raw.githubusercontent.com/realglobe-Inc/sugos-tutorial/master/dist/images/tutorial-module-scaffold.png\"/>\n\n\u6700\u5f8c\u307e\u3067\u7b54\u3048\u308b\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n### Module\u306e\u5b9f\u88c5\n\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u79fb\u52d5\u306e\u4e2d\u306b\"lib/key_value_store.js\"\u3068\u540d\u524d\u3067Module\u30af\u30e9\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```javascript\n/**\n * KeyValueStore class\n * @class KeyValueStore\n * @augments Module\n * @param {Object} config - Configuration\n */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n  constructor (config = {}) {\n    debug('Config: ', config)\n    super(config)\n  }\n\n  /**\n   * Ping a message.\n   * @param {string} pong\n   * @returns {Promise.<string>} - Pong message\n   */\n  ping (pong = 'pong') {\n    return co(function * pingAck () {\n      return pong // Return result to a remote caller.\n    })\n  }\n\n  /**\n   * Assert actor system requirements.\n   * @throws {Error} - System requirements failed error\n   * @returns {Promise.<boolean>} - Asserted state\n   */\n  assert () {\n    const bins = [ 'node' ] // Required commands\n    return co(function * assertAck () {\n      yield hasBin.assertAll(bins)\n      return true\n    })\n  }\n\n  /**\n   * Module specification\n   * @see https://github.com/realglobe-Inc/sg-schemas/blob/master/lib/module_spec.json\n   */\n  get $spec () {\n    return {\n      name,\n      version,\n      desc: description,\n      methods: {\n        ping: {\n          desc: 'Test the reachability of a module.',\n          params: [\n            { name: 'pong', type: 'string', desc: 'Pong message to return' }\n          ],\n          return: {\n            type: 'string',\n            desc: 'Pong message'\n          }\n        },\n\n        assert: {\n          desc: 'Test if the actor fulfills system requirements',\n          params: [],\n          throws: [ {\n            type: 'Error',\n            desc: 'System requirements failed'\n          } ],\n          return: {\n            type: 'boolean',\n            desc: 'System is OK'\n          }\n        }\n      },\n\n      events: null\n    }\n  }\n}\n\nmodule.exports = KeyValueStore\n\n```\n\n\u3059\u3067\u306b\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u751f\u5b58\u78ba\u8a8d\u7528\u306e`.ping()`\u30e1\u30bd\u30c3\u30c9\u3068\u3001\u7a3c\u50cd\u74b0\u5883\u306e\u78ba\u8a8d\u7528\u306e`.assert()`\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n`npm test`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5b9f\u969b\u306b\u3053\u308c\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u6700\u5f8c\u306e\u90e8\u5206\u306b\u306f\n`get $spec () { /* ... */ }`\n\u3068\u3044\u3046getter\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u308a\u3001\u305d\u3053\u306b\u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u60c5\u5831\u304c\u63cf\u5199\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u4efb\u610f\u306e\u4ed8\u52a0\u60c5\u5831\u3067\u3042\u308a\u3001\u5b9f\u306f\u66f8\u304b\u306a\u304f\u3066\u3082\u52d5\u304f\u306e\u3067\u3059\u304c\u3001\u5358\u4f53\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3059\u308b\u3088\u3046\u306aModule\u306e\u5834\u5408\u306f\u304d\u3061\u3093\u3068\u66f8\u304f\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\n\n\n\u3055\u3066\u3001\u3053\u3053\u306bKeyValueStore\u3063\u307d\u3044\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n```javascript\n/** ... */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst fs = require('fs')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n\n  // Add \"filename\" parameter on constructor\n\n  constructor (config = {}) {\n    let { filename = 'kv.json' } = config\n    debug('Config: ', config)\n    super(config)\n    const s = this\n    s.filename = filename\n  }\n\n  /** ... */\n  ping (pong = 'pong') { /* ... */ }\n\n  /** ... */\n  assert () { /* ... */ }\n\n  // Define methods for Key-vale store\n\n  set (key, value) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read().catch(() => ({}))\n      data[ key ] = value\n      return yield s._write(data)\n    })\n  }\n\n  get (key) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read()\n      return data[ key ]\n    })\n  }\n\n  del (key) {\n    const s = this\n    return co(function * () {\n      let data = yield s._read()\n      delete data[ key ]\n      return yield s._write(data)\n    })\n  }\n\n  // Private function to read data file\n  // Methods with \"_\" is not exposed to remote caller\n  _read () {\n    let { filename } = this\n    return new Promise((resolve, reject) =>\n      fs.readFile((filename), (err, content) => err ? reject(err) : resolve(content))\n    ).then(JSON.parse)\n  }\n\n  // Private function to write data file\n  // Methods with \"_\" is not exposed to remote caller\n  _write (data) {\n    let { filename } = this\n    return new Promise((resolve, reject) =>\n      fs.writeFile(filename, JSON.stringify(data), (err) => err ? reject(err) : resolve())\n    )\n  }\n\n  /** ... */\n  get $spec () { /* ... */ }\n}\n\nmodule.exports = KeyValueStore\n\n```\n\n\u307e\u305a\u306fconstructor\u306e\u5f15\u6570\u306b`filename`\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002keyValue\u306e\u30c7\u30fc\u30bf\u3092\u4fdd\u5b58\u3059\u308b\u5148\u3067\u3059\u3002\n\n\u6b21\u306b\u30d5\u30a1\u30a4\u30eb\u30a2\u30af\u30bb\u30b9\u7528\u306e`._read()`\u3068`._write(data)`\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u59cb\u307e\u308b\u540d\u524d\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u3068\u3057\u3066\u6271\u308f\u308c\u3001 Actor\u306b\u6e21\u3057\u3066\u3082Caller\u306b\u306f\u5171\u6709\u3055\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u306fconstructor\u3067\u6e21\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306bJSON\u3068\u3057\u3066\u306e\u8aad\u307f\u66f8\u304d\u3092\u3057\u3001Promise\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u3088\u3046\u306a\u3082\u306e\u306b\u3057\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u305d\u308c\u3089\u3092\u5229\u7528\u3059\u308b`.set(key, value)`\u3001`.get(key)`\u3001`.del(key)`\u3092\u5b9f\u88c5\u3059\u308c\u3070\u3001\u5358\u7d14\u306aKeyValueStore\u306e\u5b8c\u6210\u3067\u3059\u3002\n\n\n\u5b9f\u88c5\u3057\u305f\u3089\u5fd8\u308c\u305a\u306b`$spec`\u3082\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\n\n```javascript\n/** ... */\n'use strict'\n\nconst { Module } = require('sugo-module-base')\nconst { name, version, description } = require('../package.json')\n\nconst co = require('co')\nconst fs = require('fs')\nconst { hasBin } = require('sg-check')\nconst debug = require('debug')('sugo:module:demo-module')\n\n/** @lends KeyValueStore */\nclass KeyValueStore extends Module {\n  constructor (config = {}) { /* ... */ }\n\n  /** ... */\n  ping (pong = 'pong') { /* ... */ }\n\n  /** ... */\n  assert () { /* ... */ }\n\n  set (key, value) { /* ... */ }\n\n  get (key) { /* ... */ }\n\n  del (key) { /* ... */ }\n\n  // Private function to read data file\n  // Methods with \"_\" is not exposed to remote caller\n  _read () { /* ... */ }\n\n  // Private function to write data file\n  // Methods with \"_\" is not exposed to remote caller\n  _write (data) { /* ... */ }\n\n  /**\n   * Module specification\n   * @see https://github.com/realglobe-Inc/sg-schemas/blob/master/lib/module_spec.json\n   */\n  get $spec () {\n    return {\n      name,\n      version,\n      desc: description,\n      methods: {\n        ping: { /* ... */ },\n\n        assert: { /* ... */ },\n\n        set: {\n          desc: 'Set key value',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' },\n            { name: 'value', type: 'string', desc: 'value to set' }\n          ]\n        },\n\n        get: {\n          desc: 'Get by key ',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' }\n          ],\n          return: { type: 'string', desc: 'Found value' }\n        },\n\n        del: {\n          desc: 'Delete by key ',\n          params: [\n            { name: 'key', type: 'string', desc: 'Key to set' }\n          ]\n        }\n      },\n      events: null\n    }\n  }\n}\n\nmodule.exports = KeyValueStore\n\n```\n\n\n### Module\u306e\u30c6\u30b9\u30c8\n\n\u6b21\u306b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u81ea\u52d5\u751f\u6210\u3055\u308c\u305f\"test/key_value_store_test.js\"\u306b\u306f\u3059\u3067\u306b\u5e7e\u3064\u304b\u306e\u30c6\u30b9\u30c8\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n\n```javascript\n/**\n * Test case for demoModule.\n * Runs with mocha.\n */\n'use strict'\n\nconst KeyValueStore = require('../lib/key_value_store.js')\nconst assert = require('assert')\nconst co = require('co')\nconst { EventEmitter } = require('events')\nconst sgSchemas = require('sg-schemas')\nconst sgValidator = require('sg-validator')\n\ndescribe('demo-module', function () {\n  this.timeout(3000)\n\n  before(() => co(function * () {\n\n  }))\n\n  after(() => co(function * () {\n\n  }))\n\n  it('Get module spec', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    assert.ok(module)\n\n    let { $spec } = module\n    let specError = sgValidator(sgSchemas.moduleSpec).validate($spec)\n    assert.ok(!specError)\n  }))\n\n  it('Try ping-pong', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let pong = yield module.ping('pong')\n    assert.equal(pong, 'pong')\n  }))\n\n  it('Do assert', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let caught\n    try {\n      yield module.assert({})\n    } catch (err) {\n      caught = err\n    }\n    assert.ok(!caught)\n  }))\n\n  it('Compare methods with spec', () => co(function * () {\n    let module = new KeyValueStore({ $emitter: new EventEmitter() })\n    let { $spec } = module\n    let implemented = Object.getOwnPropertyNames(KeyValueStore.prototype)\n      .filter((name) => !/^[\\$_]/.test(name))\n      .filter((name) => !~[ 'constructor' ].indexOf(name))\n    let described = Object.keys($spec.methods).filter((name) => !/^[\\$_]/.test(name))\n    for (let name of implemented) {\n      assert.ok(!!~described.indexOf(name), `${name} method should be described in spec`)\n    }\n    for (let name of described) {\n      assert.ok(!!~implemented.indexOf(name), `${name} method should be implemented`)\n    }\n  }))\n})\n\n/* global describe, before, after, it */\n\n```\n\n\u3053\u3053\u306b\u4f5c\u6210\u3057\u305f\u6a5f\u80fd\u306b\u95a2\u3059\u308b\u30c6\u30b9\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```javascript\n/**\n * Test case for demoModule.\n * Runs with mocha.\n */\n'use strict'\n\nconst KeyValueStore = require('../lib/key_value_store.js')\nconst assert = require('assert')\nconst co = require('co')\nconst { EventEmitter } = require('events')\nconst sgSchemas = require('sg-schemas')\nconst sgValidator = require('sg-validator')\n\ndescribe('demo-module', function () {\n  this.timeout(3000)\n\n  before(() => co(function * () {\n\n  }))\n\n  after(() => co(function * () {\n\n  }))\n\n  it('Get module spec', () => co(function * () { /* ... */ }))\n\n  it('Try ping-pong', () => co(function * () { /* ... */ }))\n\n  it('Do assert', () => co(function * () { /* ... */ }))\n\n  it('Compare methods with spec', () => co(function * () { /* ... */ }))\n\n  it('Do get/set/del', () => co(function * () {\n    let module = new KeyValueStore({\n      filename: `${__dirname}/../testing-store.json`,\n      $emitter: new EventEmitter()\n    })\n    yield module.set('foo', 'This is foo')\n    {\n      let foo = yield module.get('foo')\n      assert.equal(foo, 'This is foo')\n    }\n    yield module.del('foo')\n    {\n      let foo = yield module.get('foo')\n      assert.equal(foo, undefined)\n    }\n  }))\n})\n\n/* global describe, before, after, it */\n\n  ```\n\n\n```bash\nnpm test\n```\n\n\u3067\u7121\u4e8b\u30c6\u30b9\u30c8\u304c\u901a\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u3042\u3068\u306f`npm publish`\u3059\u308c\u3070npm\u30ec\u30b8\u30b9\u30c8\u30ea\u306b\u767b\u9332\u3055\u308c\u307e\u3059\u3002\n\n\u305d\u3057\u305f\u3089\u4ed6\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304b\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n```javascript\n#!/usr/bin/env node\n\n/**\n * Example usage to register module on actor\n * @see https://github.com/realglobe-Inc/sugo-actor\n */\n'use strict'\n\nconst { KeyValueStore } = require('sugos-tutorial-04')\nconst sugoActor = require('sugo-actor')\nconst co = require('co')\n\nco(function * () {\n  let actor = sugoActor('http://my-sugo-cloud.example.com/actors', {\n    key: 'my-actor-01',\n    modules: {\n      // Register the module\n      kvs: new KeyValueStore({\n        filename: 'kv.json'\n      })\n    }\n  })\n  yield actor.connect()\n}).catch((err) => console.error(err))\n\n```\n\n\n## \u307e\u3068\u3081\n\n+ [sugo-scaffold](https://github.com/realglobe-Inc/sugo-scaffold)\u3067\u96db\u5f62\u304c\u751f\u6210\u3067\u304d\u308b\n+ `$spec`\u3067Module\u81ea\u8eab\u3092\u63cf\u5199\u3067\u304d\u308b\n+ \u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\u3067\u59cb\u307e\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u6271\u3044\u306b\u306a\u308a\u3001Caller\u306b\u306f\u5171\u6709\u3055\u308c\u306a\u3044\n+ Actor\u3084Hub\u304c\u306a\u304f\u3066\u3082\u30c6\u30b9\u30c8\u3067\u304d\u308b\n\n\u306a\u304a\u3001\u4eca\u56de\u51fa\u3066\u304d\u305fSnippet\u306f\u3001[\u3053\u3061\u3089](https://github.com/realglobe-Inc/sugos-tutorial/tree/master/example/tutorial-04)\u304b\u3089\u3082\u5165\u624b\u3067\u304d\u307e\u3059\n\n## \u304a\u307e\u3051\n\n### \u96d1\u8ac7: Javascript\u306e\u95a2\u6570\u3067\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u307f\u305f\u3044\u306a\u3053\u3068\u3092\u3057\u3066\u307f\u308b\n\n\u4f8b\u3048\u3070Python\u3060\u3068[Keyword Arguments](https://docs.python.org/3/tutorial/controlflow.html#keyword-arguments)\u306a\u308b\u4ed5\u69d8\u304c\u3042\u3063\u3066\u3001\n\u5f15\u6570\u306e\u591a\u3044\u95a2\u6570\u3092\u3046\u307e\u304f\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3002\n\n```python\n# Keyword-arguments example of Python\ndef do_something(src, dest, **keywords):\n  force = keywords.pop('force', false)\n  mkdirp = keywords.pop('mkdirp', true)\n  print('Do something with args: ', src, dest, force)\n\ndo_something('foo.txt', 'bar.txt', force=false, mkdirp=false)\n```\n\n\u3053\u308c\u3068\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092JavaScript\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u305d\u308c\u306f\u3082\u3046\u5927\u5909\u3067\u3057\u305f\u3002ES2015\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u307e\u3067\u306f\u306d\u3002\n\nNode.js6\u304b\u3089\u5c0e\u5165\u3055\u308c\u305f[ES2015\u306eDestructuring assignment](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)\u6a5f\u80fd\u3092\u4f7f\u3046\u3068\u3001\n\n```javascript\n// Example JavasScript, after ES2015\nfunction doSomething (src, dest, options = {}) {\n  let {\n    force = false,\n    mkdirp = true\n  } = options\n  console.log('Do something with args: ', src, dest, force)\n}\ndoSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })\n````\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001python\u3068\u5927\u5dee\u306a\u3044\u5f62\u3067\u304b\u3051\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093[preset-es2015\u3067\u30d0\u30d9\u308c](https://babeljs.io/docs/plugins/preset-es2015/)\u3070\u30d6\u30e9\u30a6\u30b6\u3067\u3082\u52d5\u304d\u307e\u3059\u3002\n\n\u6614\u3060\u3063\u305f\u3089\n\n```javascript\n// Example JavasScript, before ES2015\nfunction doSomething (src, dest, options) {\n  if(typeof options === 'undefined') {\n    options = {}\n  }\n  var force = typeof options.force === 'undefined' ? false : options.force\n  var mkdirp = typeof options.mkdirp === 'undefined' ? true : options.mkdirp\n  console.log('Do something with args: ', src, dest, force)\n}\ndoSomething('foo.txt', 'bar.txt', { force: false, mkdirp: false })\n```\n\n\u3068\u304b\u66f8\u3044\u3066\u3044\u305f\u306e\u306b\u3002\u3082\u3046\u643a\u5e2f\u96fb\u8a71\u304c\u306a\u304b\u3063\u305f\u6642\u4ee3\u3068\u540c\u3058\u304f\u3089\u3044\u9060\u304f\u611f\u3058\u307e\u3059\u306d\u3002\n\n\n\n## \u3053\u308c\u3082\u8aad\u307f\u305f\u3044\n\n+ \u524d\u56de: [03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b](http://qiita.com/okunishinishi@github/items/52206755d6fb0d3e844e)\n+ \u6b21\u56de: [05 - Actor\u3084Caller\u3092\u8a8d\u8a3c\u3059\u308b](http://qiita.com/okunishinishi@github/items/b981528e91b31d4c42dc)\n\n## \u30ea\u30f3\u30af\n\n+ [SUGOS](https://github.com/realglobe-Inc/sugos)\n+ [SUGO-Actor](https://github.com/realglobe-Inc/sugo-actor)\n+ [SUGO-Scaffold](https://github.com/realglobe-Inc/sugo-scaffold)\n+ Tutorials\n  + [00 - SUGOS\u3053\u3068\u306f\u3057\u3099\u3081](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/00%20-%20SUGOS%E3%81%93%E3%81%A8%E3%81%AF%E3%81%98%E3%82%81.md)\n  + [01 - Hello World\u3057\u3066\u307f\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/01%20-%20Hello%20World%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B.md)\n  + [02 - Event Emit\u3057\u3066\u307f\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/02%20-%20Event%20Emit%E3%81%97%E3%81%A6%E3%81%BF%E3%82%8B.md)\n  + [03 - Browser\u9593\u3066\u3099\u3084\u308a\u53d6\u308a\u3059\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/03%20-%20Browser%E9%96%93%E3%81%A7%E3%82%84%E3%82%8A%E5%8F%96%E3%82%8A%E3%81%99%E3%82%8B.md)\n  + [04 - Module\u3092npm\u30cf\u309a\u30c3\u30b1\u30fc\u30b7\u3099\u5316\u3059\u308b](https://github.com/realglobe-Inc/sugos-tutorial/blob/master/dist/markdown/ja/04%20-%20Module%E3%82%92npm%E3%83%91%E3%83%83%E3%82%B1%E3%83%BC%E3%82%B8%E5%8C%96%E3%81%99%E3%82%8B.md)\n"}