{"context": "ESP8266\u306e\u7279\u9577\u3067\u3042\u308bdeep sleep\u306emicropython\u3067\u306e\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nmicropython\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3001ESP-WROOM-02\u3067MicroPython (Mac)\u3067\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n\n\u914d\u7dda\u306b\u3064\u3044\u3066\nIO16\u30d4\u30f3\u3092RST\u7aef\u5b50\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u914d\u7dda\u306farduino\u306a\u3069\u3068\u540c\u69d8\u3067\u3059\u3002\nQiita\u3067\u3082\u3001ESP8266\u306e\u771f\u9aa8\u9802Deep-Sleep\u30e2\u30fc\u30c9\u306e\u4f7f\u3044\u65b9\u306b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\nmicropython\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u304c\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u3002\n\nmain.py\nimport machine\nimport time\n\n# check if the device woke from a deep sleep\nif machine.reset_cause() == machine.DEEPSLEEP_RESET:\n    print('woke from a deep sleep')\n\n# configure RTC.ALARM0 to be able to wake the device\nrtc = machine.RTC()\nrtc.irq(trigger=rtc.ALARM0, wake=machine.DEEPSLEEP)\n\nwhile True:\n    # \u3053\u3053\u306b\u30e1\u30a4\u30f3\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\n    # set RTC.ALARM0 to fire after 60 seconds (waking the device)\n    rtc.alarm(rtc.ALARM0, 60000)\n\n    # put the device to sleep\n    machine.deepsleep()\n    time.sleep(1)\n\n\nESP8266\u306e\u7279\u9577\u3067\u3042\u308bdeep sleep\u306emicropython\u3067\u306e\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nmicropython\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u3001[ESP-WROOM-02\u3067MicroPython (Mac)](http://qiita.com/taka-murakami/items/a3c05115d5a5038ebb11)\u3067\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u3002\n# \u914d\u7dda\u306b\u3064\u3044\u3066\nIO16\u30d4\u30f3\u3092RST\u7aef\u5b50\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u914d\u7dda\u306farduino\u306a\u3069\u3068\u540c\u69d8\u3067\u3059\u3002\nQiita\u3067\u3082\u3001[ESP8266\u306e\u771f\u9aa8\u9802Deep-Sleep\u30e2\u30fc\u30c9\u306e\u4f7f\u3044\u65b9](http://qiita.com/azusa9/items/65a5c3772c41631b5ca1)\u306b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\n# micropython\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u304c\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\u7c21\u5358\u3067\u3059\u3002\n\n```python:main.py\nimport machine\nimport time\n\n# check if the device woke from a deep sleep\nif machine.reset_cause() == machine.DEEPSLEEP_RESET:\n    print('woke from a deep sleep')\n\n# configure RTC.ALARM0 to be able to wake the device\nrtc = machine.RTC()\nrtc.irq(trigger=rtc.ALARM0, wake=machine.DEEPSLEEP)\n\nwhile True:\n    # \u3053\u3053\u306b\u30e1\u30a4\u30f3\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\n\n    # set RTC.ALARM0 to fire after 60 seconds (waking the device)\n    rtc.alarm(rtc.ALARM0, 60000)\n\n    # put the device to sleep\n    machine.deepsleep()\n    time.sleep(1)\n```\n", "tags": ["ESP8266", "ESP-WROOM-02", "micropython", "deepsleep"]}