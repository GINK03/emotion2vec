{"context": "\n\n\u6982\u8981\nHaskell\u3068\u3044\u3048\u3070\u30e2\u30ca\u30c9\u3067\u3059\u3002\n\u81ea\u5206\u304cHaskell\u3067\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u52c9\u5f37\u3057\u3066\u308f\u304b\u3063\u305f\u3053\u3068\u3092\u3001\n\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306b\u6574\u7406\u3057\u3064\u3064\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4ed6\u306e\u89e3\u8aac\u3067\u306f\u3001Maybe\u30e2\u30ca\u30c9\u306a\u3069\u4f8b\u304b\u3089\u5b66\u3076\u30d1\u30bf\u30fc\u30f3\u304c\u591a\u3044\u3067\u3059\u304c\n\u3053\u3053\u3067\u306f\u307e\u305a\u7c21\u5358\u306b\u7406\u8ad6\u304b\u3089\u5165\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u524d\u63d0\nHaskell\u306e\u57fa\u672c\uff08\u95a2\u6570\u3001\u9ad8\u968e\u95a2\u6570\u3001\u90e8\u5206\u9069\u7528\u306a\u3069\u306a\u3069\uff09\u306b\u3064\u3044\u3066\u7279\u5225\u66f8\u3044\u305f\u308a\u306f\u3057\u307e\u305b\u3093\u3002\n\n0. \u30e2\u30ca\u30c9\u3068\u306f\u4e00\u4f53...?\n\u540d\u524d\u304b\u3089\u306f\u5b9f\u614b\u304c\u63b4\u307f\u3065\u3089\u3044\u300c\u30e2\u30ca\u30c9\u300d\u3067\u3059\u304c\u3001\u305d\u308c\u307b\u3069\u96e3\u3057\u3044\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u30e2\u30ca\u30c9\u3068\u306f\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\u5024\u3092\u5305\u3093\u3060\u3082\u306e\u304c\u30e2\u30ca\u30c9\u3067\u3059\u3002\nMyMonad \u3068\u3044\u3046\u30e2\u30ca\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\ndata MyMonad a = MyMonad a\n\nMyMonad \"Hello!\" :: MyMonad String\nMyMonad 3        :: MyMonad Int\nMyMonad True     :: MyMonad Bool\n\n\u30fb\u30fb\u30fb\u3002\n\u3057\u304b\u3057\u3053\u308c\u3060\u3051\u3067\u306f\u30e2\u30ca\u30c9\u3068\u306f\u547c\u3079\u307e\u305b\u3093\u3002\n\u305d\u308c\u3067\u306f\u3053\u308c\u3092\u30e2\u30ca\u30c9\u306b\u80b2\u3066\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n1. Functor (\u95a2\u624b)\n\u307e\u305a\u306f Functor \u3067\u3059\u3002\n\u7bb1\u306b\u5165\u3063\u305f\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u95a2\u624b\u306f\u6570\u5b66\u306e\u570f\u8ad6\u3068\u3044\u3046\u5206\u91ce\u306e\u6982\u5ff5\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u570f\u8ad6\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u5148\u307b\u3069\u306e MyMonad \u3092 Functor \u306b\u6210\u9577\u3055\u305b\u307e\u3057\u3087\u3046\u3002\ninstance Functor MyMonad\n\n\u3053\u306e Functor \u3068\u3044\u3046\u306e\u306fHaskell\u306e\u578b\u30af\u30e9\u30b9\u3067\u3059\u3002\nclass Functor f where\n    fmap :: (a -> b) -> f a -> f b\n\nfmap \u3068\u3044\u3046\u95a2\u6570\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u95a2\u624b\u3067\u3059\u3002\nMyMonad\u306e\u5b9f\u88c5\u306f\u3053\u3046\u3067\u3059\u3002\ninstance Functor MyMonad where\n    fmap f (MyMonad a) = MyMonad (f a)\n\n\u7bb1\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u306e\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u307e\u305f\u7bb1\u306b\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\u30ea\u30b9\u30c8\u306e map \u95a2\u6570\u3092\u8003\u3048\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nf :: Int -> Int\nf x = x * 2\n\nmap f [1, 2, 3]   --> [2, 4, 6]\n\n\u95a2\u624b\u306f\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\u305f\u3060\u3057\u30eb\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\nfmap id  ==  id\nfmap (f . g)  ==  fmap f . fmap g\n\u4e00\u3064\u76ee\u306f\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\n\u4e8c\u3064\u76ee\u306f\u8907\u96d1\u305d\u3046\u3067\u3059\u304c\u3001\u5408\u6210\u3057\u3066\u304b\u3089fmap\u306b\u9069\u7528\u3057\u3066\u3082\u3001\u9069\u7528\u3057\u3066\u304b\u3089\u5408\u6210\u3057\u3066\u3082\u7d50\u679c\u306f\u540c\u3058\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u5206\u914d\u6cd5\u5247\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n\nFunctor \u306b\u9032\u5316\u3057\u305f\uff01\n\u3053\u308c\u3067\u3001\u7bb1\u306b\u5024\u304c\u5165\u3063\u305f\u307e\u307e\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u30e2\u30ca\u30c9\u306e\u534a\u5206\u306f\u3067\u304d\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n2.Applicative\n\u304a\u6b21\u306f Applicative \u3067\u3059\u3002\u540d\u524d\u306f\u9577\u3044\u3067\u3059\u304c\u3001Functor \u304c\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3057\u305f\u3060\u3051\u3067\u3059\u3002\nApplicative \u3082\u578b\u30af\u30e9\u30b9\u3067\u3059\u3002\nclass Functor f => Applicative f where\n   pure :: a -> f a\n   (<*>) :: f (a -> b) -> f a -> f b\n\nApplicative \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u306b\u306f Functor \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u6838\u3068\u306a\u308b\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\npure \u95a2\u6570\u306f\u7c21\u5358\u3067\u3001\u5024\u3092\u7bb1\u306b\u5165\u308c\u307e\u3059\u3002\n\u3053\u308c\u3092 \u6301\u3061\u4e0a\u3052 \u3068\u8a00\u3044\u307e\u3059\u3002\nMyMonad \u306e\u5834\u5408\u306f\u3053\u3046\u3067\u3059\u306d\u3002\ninstance Applicative MyMonad where\n    pure a = MyMonad a\n\n\u3055\u3066\u3001\u809d\u5fc3\u306a\u306e\u306f <*> \u6f14\u7b97\u5b50\u3067\u3059\u3002\n\u5148\u307b\u3069\u306e fmap \u306b\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\nfmap  ::   (a -> b) -> f a -> f b\n(<*>) :: f (a -> b) -> f a -> f b\n\u9055\u3046\u306e\u306f\u3001<*> \u6f14\u7b97\u5b50\u306e\u65b9\u306f\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3082\u7bb1\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nMyMonad \u306e\u5b9f\u88c5\u306f\u3053\u3046\u3067\u3059\u3002\ninstance Applicative MyMonad where\n    (MyMonad f) <*> (MyMonad a) = MyMonad (f a)\n\n\u7bb1\u306b\u5165\u3063\u305f\u95a2\u6570\u3068\u5024\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u7bb1\u306b\u5165\u308c\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\nApplicative \u306b\u9032\u5316\u3057\u305f\uff01\uff01\n\u7bb1\u306b\u5165\u3063\u305f\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u3093\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n(*) <$> MyMonad 2 <*> MyMonad 5   --> MyMonad 10\n\n<$> \u6f14\u7b97\u5b50\u306f fmap \u95a2\u6570\u3068\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n\u307e\u305a Functor \u306e fmap \u304c\u9069\u7528\u3055\u308c\u3066\n(*) <$> MyMonad 2   --> MyMonad (2 *)\n\n\u3068\u306a\u308a\u3001Applicative \u306e <*> \u304c\u9069\u7528\u3055\u308c\u3066\nMyMonad (2 *) <*> MyMonad 5   --> MyMonad (2 * 5) => MyMonad 10\n\n\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\u3053\u308c\u306f\u3044\u304f\u3089\u3067\u3082\u3064\u306a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n3.Monad\n\u3064\u3044\u306b Monad \u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f\uff01\nMonad \u306f Applicative \u306e\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u7248\u3067\u3059\u3002\nclass Applicative m => Monad m where\n    return :: a -> m a\n    (>>=) :: m a -> (a -> m b) -> m b\n\nreturn \u306f Applicative \u306e pure \u3068\u540c\u3058\u3067\u3001\u5024\u3092\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n(>>=) \u6f14\u7b97\u5b50\u306f bind \u3068\u3082\u8a00\u3044\u3001Monad\u306e\u809d\u3067\u3059\u3002\n\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ninstance Monad MyMonad where\n    return = pure\n    (MyMonad a) >>= f = f a\n\n(>>=) \u6f14\u7b97\u5b50\u306f\u3001\u7b2c\u4e8c\u5f15\u6570\u306b \u5024\u3092\u53d6\u308a\u30e2\u30ca\u30c9\u3092\u8fd4\u3059\u95a2\u6570 \u3092\u53d6\u308a\u307e\u3059\u3002\n\u7b2c\u4e00\u5f15\u6570\u306e\u30e2\u30ca\u30c9\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u308c\u3092\u95a2\u6570\u306b\u6ce8\u304e\u8fbc\u3093\u3067\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\u30e2\u30ca\u30c9\u306b\u9032\u5316\u3057\u305f\uff01\n(>>=) \u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3068\u3001\u30e2\u30ca\u30c9\u3092\u3044\u304f\u3064\u3082\u3064\u306a\u3052\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nf :: Int -> MyMonad Int\nf x = return $ x + 2\n\ng :: Int -> MyMonad Int\ng x = return $ x * 2\n\nMyMonad 1 >>= f >>= g         --> MyMonad 6\nMyMonad 3 >>= g >>= f >>= g   --> MyMonad 16\n\n\n\u305d\u306e\u4ed6\u306e\u6f14\u7b97\u5b50\nApplicative \u3084 Monad \u306b\u306f\u4fbf\u5229\u306a\u6f14\u7b97\u5b50\u304c\u4ed6\u306b\u3082\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f\u5168\u3066\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u57fa\u672c\u3068\u306a\u308b\u95a2\u6570\u3084\u6f14\u7b97\u5b50\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nApplicative\nclass Functor f => Applicative f where\n    (*>)  :: f a -> f b -> f b\n    (<*)  :: f a -> f b -> f a \n\n    a *> b = pure (const id) <*> a <*> b\n    a <* b = pure const <*> a <*> b\n\n(*>) \u6f14\u7b97\u5b50\u306f\u5de6\u8fba\u3092\u6368\u3066\u3066\u53f3\u8fba\u306e\u307f\u3092\u8fd4\u3057\u307e\u3059\u3002\n(<*) \u6f14\u7b97\u5b50\u306f\u53f3\u8fba\u3092\u6368\u3066\u3066\u5de6\u8fba\u306e\u307f\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u5de6\u7d50\u5408\u3067\u3059\u3002\nMyMonad \"ABC\" <* MyMonad \"DEF\"        --> MyMonad \"ABC\"\nMyMonad 1 *> MyMonad 2 <* MyMonad 3   --> MyMonad 2\n\n\nMonad\nclass Applicative m => Monad m where\n    (>>) :: m a -> m b -> m b\n    fail :: String -> m a\n\n    (>>) = (*>)\n    fail s = MyMonad s\n\n(>>) \u6f14\u7b97\u5b50\u306f\u3001\u524d\u306e\u5024\u3092\u6368\u3066\u3066\u5f8c\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\nApplicative \u306e (*>) \u6f14\u7b97\u5b50\u3068\u540c\u3058\u50cd\u304d\u3067\u3059\u3002\nfail \u95a2\u6570\u306f\u307b\u307c\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\n\uff08\u5f8c\u8ff0\u3059\u308b do\u69cb\u6587\u5185\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u5931\u6557\u3057\u305f\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\uff09\n\ndo\u69cb\u6587\ndo\u69cb\u6587\u3092\u4f7f\u3046\u3068\u3001\u8907\u6570\u306e bind\u6f14\u7b97\u3092\u3059\u3063\u304d\u308a\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u9010\u6b21\u5b9f\u884c: \ndo  MyMonad 1       \n    MyMonad 2  \n    MyMonad 3 \n    ...\n\nMyMonad 1 >> MyMonad 2 >> MyMonad 3 ...\n\n\u5024\u306e\u53d6\u308a\u51fa\u3057(\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1):\ndo  x <- MyMonad 2     \n    MyMonad x        \n\nMyMonad 2 >>= (\\x -> MyMonad x)\n\nlet\u5f0f(\u5c40\u6240\u5909\u6570):\ndo  let x = 3\n    MyMonad x\n\nlet x = 3 in MyMonad x\n\n\n\u307e\u3068\u3081\n\n\u30e2\u30ca\u30c9\u3068\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\u30e2\u30ca\u30c9\u3092\u4f7f\u3046\u3068\u3001\u95a2\u6570\u578b\u306eHaskell\u306e\u4e16\u754c\u3067\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u624b\u6cd5\u304c\u4f7f\u3048\u308b\u306e\u3067\u3059\u3002\n\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f3\u3064\u306e\u69cb\u9020\u3092\u4f7f\u3044\u307e\u3059\u306d\u3002\n\u3064\u307e\u308a\u3001\u9010\u6b21\u30fb\u53cd\u5fa9\u30fb\u5206\u5c90 \u3067\u3059\u3002\n\u53cd\u5fa9\u306b\u3064\u3044\u3066\u306f\u3001\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\u9010\u6b21\u5b9f\u884c\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u308b\u306e\u304c Applicative \u3067\u3059\u3002\n\u305d\u3057\u3066 Monad \u3092\u4f7f\u3046\u3068\u3001\u5206\u5c90\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\nMonad \u306f\u3001\u524d\u306e\u7d50\u679c\u3092\u5229\u7528\u3057\u3066\u5f8c\u306e\u7d50\u679c\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u304c Applicative \u3068\u306e\u5927\u304d\u306a\u9055\u3044\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u5206\u304b\u308a\u306b\u304f\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u81ea\u5206\u306a\u308a\u306b\u6574\u7406\u3057\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u7406\u89e3\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3042\u3063\u305f\u3089\u3001\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\u5177\u4f53\u7684\u306a\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u306f\u66f8\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\n\u4eca\u5f8c MonadPlus \u306a\u3069\u306b\u3064\u3044\u3066\u8ffd\u8a18\u3057\u3066\u3044\u304f\u3064\u3082\u308a\u3067\u3059\u3002 \n\n\n# \u6982\u8981\nHaskell\u3068\u3044\u3048\u3070\u30e2\u30ca\u30c9\u3067\u3059\u3002\n\u81ea\u5206\u304cHaskell\u3067\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u52c9\u5f37\u3057\u3066\u308f\u304b\u3063\u305f\u3053\u3068\u3092\u3001\n\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306b\u6574\u7406\u3057\u3064\u3064\u66f8\u3044\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4ed6\u306e\u89e3\u8aac\u3067\u306f\u3001Maybe\u30e2\u30ca\u30c9\u306a\u3069\u4f8b\u304b\u3089\u5b66\u3076\u30d1\u30bf\u30fc\u30f3\u304c\u591a\u3044\u3067\u3059\u304c\n\u3053\u3053\u3067\u306f\u307e\u305a\u7c21\u5358\u306b\u7406\u8ad6\u304b\u3089\u5165\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u524d\u63d0\nHaskell\u306e\u57fa\u672c\uff08\u95a2\u6570\u3001\u9ad8\u968e\u95a2\u6570\u3001\u90e8\u5206\u9069\u7528\u306a\u3069\u306a\u3069\uff09\u306b\u3064\u3044\u3066\u7279\u5225\u66f8\u3044\u305f\u308a\u306f\u3057\u307e\u305b\u3093\u3002\n\n\n# 0. \u30e2\u30ca\u30c9\u3068\u306f\u4e00\u4f53...?\n\u540d\u524d\u304b\u3089\u306f\u5b9f\u614b\u304c\u63b4\u307f\u3065\u3089\u3044\u300c\u30e2\u30ca\u30c9\u300d\u3067\u3059\u304c\u3001\u305d\u308c\u307b\u3069\u96e3\u3057\u3044\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30e2\u30ca\u30c9\u3068\u306f\u7bb1\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\u5024\u3092\u5305\u3093\u3060\u3082\u306e\u304c\u30e2\u30ca\u30c9\u3067\u3059\u3002\n\nMyMonad \u3068\u3044\u3046\u30e2\u30ca\u30c9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n```hs\ndata MyMonad a = MyMonad a\n\nMyMonad \"Hello!\" :: MyMonad String\nMyMonad 3        :: MyMonad Int\nMyMonad True     :: MyMonad Bool\n```\n\u30fb\u30fb\u30fb\u3002\n\u3057\u304b\u3057\u3053\u308c\u3060\u3051\u3067\u306f\u30e2\u30ca\u30c9\u3068\u306f\u547c\u3079\u307e\u305b\u3093\u3002\n\u305d\u308c\u3067\u306f\u3053\u308c\u3092\u30e2\u30ca\u30c9\u306b\u80b2\u3066\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n# 1. Functor (\u95a2\u624b)\n\u307e\u305a\u306f **Functor** \u3067\u3059\u3002\n\u7bb1\u306b\u5165\u3063\u305f\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u95a2\u624b\u306f\u6570\u5b66\u306e\u570f\u8ad6\u3068\u3044\u3046\u5206\u91ce\u306e\u6982\u5ff5\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u570f\u8ad6\u306b\u3064\u3044\u3066\u77e5\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u5148\u307b\u3069\u306e MyMonad \u3092 Functor \u306b\u6210\u9577\u3055\u305b\u307e\u3057\u3087\u3046\u3002\n\n```hs\ninstance Functor MyMonad\n```\n\u3053\u306e Functor \u3068\u3044\u3046\u306e\u306fHaskell\u306e\u578b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```hs\nclass Functor f where\n    fmap :: (a -> b) -> f a -> f b\n```\n\n**fmap** \u3068\u3044\u3046\u95a2\u6570\u304c\u51fa\u3066\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u95a2\u624b\u3067\u3059\u3002\n\nMyMonad\u306e\u5b9f\u88c5\u306f\u3053\u3046\u3067\u3059\u3002\n\n```hs\ninstance Functor MyMonad where\n    fmap f (MyMonad a) = MyMonad (f a)\n```\n\u7bb1\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u306e\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u307e\u305f\u7bb1\u306b\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30ea\u30b9\u30c8\u306e map \u95a2\u6570\u3092\u8003\u3048\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n```hs\nf :: Int -> Int\nf x = x * 2\n\nmap f [1, 2, 3]   --> [2, 4, 6]\n```\n\n\u95a2\u624b\u306f\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\n\u305f\u3060\u3057\u30eb\u30fc\u30eb\u304c\u3042\u308a\u307e\u3059\u3002\nfmap id  ==  id\nfmap (f . g)  ==  fmap f . fmap g\n\n\u4e00\u3064\u76ee\u306f\u5f53\u305f\u308a\u524d\u3067\u3059\u3002\n\u4e8c\u3064\u76ee\u306f\u8907\u96d1\u305d\u3046\u3067\u3059\u304c\u3001\u5408\u6210\u3057\u3066\u304b\u3089fmap\u306b\u9069\u7528\u3057\u3066\u3082\u3001\u9069\u7528\u3057\u3066\u304b\u3089\u5408\u6210\u3057\u3066\u3082\u7d50\u679c\u306f\u540c\u3058\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u5206\u914d\u6cd5\u5247\u306e\u3088\u3046\u3067\u3059\u306d\u3002\n\n\n## Functor \u306b\u9032\u5316\u3057\u305f\uff01\n\u3053\u308c\u3067\u3001\u7bb1\u306b\u5024\u304c\u5165\u3063\u305f\u307e\u307e\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u30e2\u30ca\u30c9\u306e\u534a\u5206\u306f\u3067\u304d\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n\n#2.Applicative\n\u304a\u6b21\u306f **Applicative** \u3067\u3059\u3002\u540d\u524d\u306f\u9577\u3044\u3067\u3059\u304c\u3001Functor \u304c\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\nApplicative \u3082\u578b\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```hs\nclass Functor f => Applicative f where\n   pure :: a -> f a\n   (<*>) :: f (a -> b) -> f a -> f b\n```\nApplicative \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u306a\u308b\u306b\u306f Functor \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u306a\u304f\u3066\u306f\u306a\u308a\u307e\u305b\u3093\u3002\n\u6838\u3068\u306a\u308b\u4e8c\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n**pure** \u95a2\u6570\u306f\u7c21\u5358\u3067\u3001\u5024\u3092\u7bb1\u306b\u5165\u308c\u307e\u3059\u3002\n\u3053\u308c\u3092 \u6301\u3061\u4e0a\u3052 \u3068\u8a00\u3044\u307e\u3059\u3002\n\nMyMonad \u306e\u5834\u5408\u306f\u3053\u3046\u3067\u3059\u306d\u3002\n\n```hs\ninstance Applicative MyMonad where\n    pure a = MyMonad a\n```\n\n\n\u3055\u3066\u3001\u809d\u5fc3\u306a\u306e\u306f **<*>** \u6f14\u7b97\u5b50\u3067\u3059\u3002\n\n\u5148\u307b\u3069\u306e fmap \u306b\u4f3c\u3066\u3044\u307e\u3059\u306d\u3002\n\nfmap  ::   (a -> b) -> f a -> f b\n(<*>) :: f (a -> b) -> f a -> f b\n\n\u9055\u3046\u306e\u306f\u3001<*> \u6f14\u7b97\u5b50\u306e\u65b9\u306f\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3082\u7bb1\u306b\u5165\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\nMyMonad \u306e\u5b9f\u88c5\u306f\u3053\u3046\u3067\u3059\u3002\n\n```hs\ninstance Applicative MyMonad where\n    (MyMonad f) <*> (MyMonad a) = MyMonad (f a)\n```\n\n\u7bb1\u306b\u5165\u3063\u305f\u95a2\u6570\u3068\u5024\u3092\u53d7\u3051\u53d6\u3063\u3066\u3001\u5024\u306b\u95a2\u6570\u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3092\u7bb1\u306b\u5165\u308c\u3066\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n## Applicative \u306b\u9032\u5316\u3057\u305f\uff01\uff01\n\u7bb1\u306b\u5165\u3063\u305f\u95a2\u6570\u3092\u9069\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u3053\u3093\u306a\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n```hs\n(*) <$> MyMonad 2 <*> MyMonad 5   --> MyMonad 10\n```\n**<$>** \u6f14\u7b97\u5b50\u306f fmap \u95a2\u6570\u3068\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n\n\u307e\u305a Functor \u306e fmap \u304c\u9069\u7528\u3055\u308c\u3066\n\n```hs\n(*) <$> MyMonad 2   --> MyMonad (2 *)\n```\n\u3068\u306a\u308a\u3001Applicative \u306e <*> \u304c\u9069\u7528\u3055\u308c\u3066\n\n```hs\nMyMonad (2 *) <*> MyMonad 5   --> MyMonad (2 * 5) => MyMonad 10\n```\n\u3068\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3053\u308c\u306f\u3044\u304f\u3089\u3067\u3082\u3064\u306a\u3052\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n# 3.Monad\n\u3064\u3044\u306b **Monad** \u306b\u305f\u3069\u308a\u7740\u304d\u307e\u3057\u305f\uff01\nMonad \u306f Applicative \u306e\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u7248\u3067\u3059\u3002\n\n```hs\nclass Applicative m => Monad m where\n    return :: a -> m a\n    (>>=) :: m a -> (a -> m b) -> m b\n```\n\n**return** \u306f Applicative \u306e pure \u3068\u540c\u3058\u3067\u3001\u5024\u3092\u30e2\u30ca\u30c9\u306b\u5305\u3093\u3067\u8fd4\u3057\u307e\u3059\u3002\n\n**(>>=)** \u6f14\u7b97\u5b50\u306f bind \u3068\u3082\u8a00\u3044\u3001Monad\u306e\u809d\u3067\u3059\u3002\n\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```hs\ninstance Monad MyMonad where\n    return = pure\n    (MyMonad a) >>= f = f a\n```\n\n(>>=) \u6f14\u7b97\u5b50\u306f\u3001\u7b2c\u4e8c\u5f15\u6570\u306b \u5024\u3092\u53d6\u308a\u30e2\u30ca\u30c9\u3092\u8fd4\u3059\u95a2\u6570 \u3092\u53d6\u308a\u307e\u3059\u3002\n\u7b2c\u4e00\u5f15\u6570\u306e\u30e2\u30ca\u30c9\u304b\u3089\u5024\u3092\u53d6\u308a\u51fa\u3057\u3001\u305d\u308c\u3092\u95a2\u6570\u306b\u6ce8\u304e\u8fbc\u3093\u3067\u3044\u308b\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n## \u30e2\u30ca\u30c9\u306b\u9032\u5316\u3057\u305f\uff01\n\n(>>=) \u6f14\u7b97\u5b50\u3092\u4f7f\u3046\u3068\u3001\u30e2\u30ca\u30c9\u3092\u3044\u304f\u3064\u3082\u3064\u306a\u3052\u3066\u3044\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```hs\nf :: Int -> MyMonad Int\nf x = return $ x + 2\n\ng :: Int -> MyMonad Int\ng x = return $ x * 2\n\nMyMonad 1 >>= f >>= g         --> MyMonad 6\nMyMonad 3 >>= g >>= f >>= g   --> MyMonad 16\n```\n\n## \u305d\u306e\u4ed6\u306e\u6f14\u7b97\u5b50\n\nApplicative \u3084 Monad \u306b\u306f\u4fbf\u5229\u306a\u6f14\u7b97\u5b50\u304c\u4ed6\u306b\u3082\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3089\u306f\u5168\u3066\u4e0a\u3067\u7d39\u4ecb\u3057\u305f\u57fa\u672c\u3068\u306a\u308b\u95a2\u6570\u3084\u6f14\u7b97\u5b50\u306b\u3088\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u88c5\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### Applicative\n\n```hs\nclass Functor f => Applicative f where\n    (*>)  :: f a -> f b -> f b\n    (<*)  :: f a -> f b -> f a \n\n    a *> b = pure (const id) <*> a <*> b\n    a <* b = pure const <*> a <*> b\n```\n**(\\*>)** \u6f14\u7b97\u5b50\u306f\u5de6\u8fba\u3092\u6368\u3066\u3066\u53f3\u8fba\u306e\u307f\u3092\u8fd4\u3057\u307e\u3059\u3002\n**(<*)** \u6f14\u7b97\u5b50\u306f\u53f3\u8fba\u3092\u6368\u3066\u3066\u5de6\u8fba\u306e\u307f\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u5de6\u7d50\u5408\u3067\u3059\u3002\n\n```hs\nMyMonad \"ABC\" <* MyMonad \"DEF\"        --> MyMonad \"ABC\"\nMyMonad 1 *> MyMonad 2 <* MyMonad 3   --> MyMonad 2\n```\n\n### Monad\n\n```hs\nclass Applicative m => Monad m where\n    (>>) :: m a -> m b -> m b\n    fail :: String -> m a\n\n    (>>) = (*>)\n    fail s = MyMonad s\n```\n**(>>)** \u6f14\u7b97\u5b50\u306f\u3001\u524d\u306e\u5024\u3092\u6368\u3066\u3066\u5f8c\u306e\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\nApplicative \u306e (*>) \u6f14\u7b97\u5b50\u3068\u540c\u3058\u50cd\u304d\u3067\u3059\u3002\n\n**fail** \u95a2\u6570\u306f\u307b\u307c\u4e0d\u8981\u3067\u3057\u3087\u3046\u3002\n\uff08\u5f8c\u8ff0\u3059\u308b do\u69cb\u6587\u5185\u3067\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u304c\u5931\u6557\u3057\u305f\u6642\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\uff09\n\n\n## do\u69cb\u6587\n\ndo\u69cb\u6587\u3092\u4f7f\u3046\u3068\u3001\u8907\u6570\u306e bind\u6f14\u7b97\u3092\u3059\u3063\u304d\u308a\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u9010\u6b21\u5b9f\u884c: \n\n```hs\ndo  MyMonad 1       \n    MyMonad 2  \n    MyMonad 3 \n    ...\n\nMyMonad 1 >> MyMonad 2 >> MyMonad 3 ...\n```\n\n\u5024\u306e\u53d6\u308a\u51fa\u3057(\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1):\n\n```hs\ndo  x <- MyMonad 2     \n    MyMonad x        \n\nMyMonad 2 >>= (\\x -> MyMonad x)\n```\n\nlet\u5f0f(\u5c40\u6240\u5909\u6570):\n\n```hs\ndo  let x = 3\n    MyMonad x\n\nlet x = 3 in MyMonad x\n```\n\n#\u307e\u3068\u3081\n\n## \u30e2\u30ca\u30c9\u3068\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\n\n\u30e2\u30ca\u30c9\u3092\u4f7f\u3046\u3068\u3001\u95a2\u6570\u578b\u306eHaskell\u306e\u4e16\u754c\u3067\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u624b\u6cd5\u304c\u4f7f\u3048\u308b\u306e\u3067\u3059\u3002\n\u624b\u7d9a\u304d\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f3\u3064\u306e\u69cb\u9020\u3092\u4f7f\u3044\u307e\u3059\u306d\u3002\n\u3064\u307e\u308a\u3001\u9010\u6b21\u30fb\u53cd\u5fa9\u30fb\u5206\u5c90 \u3067\u3059\u3002\n\n\u53cd\u5fa9\u306b\u3064\u3044\u3066\u306f\u3001\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\u9010\u6b21\u5b9f\u884c\u3092\u53ef\u80fd\u306b\u3057\u3066\u3044\u308b\u306e\u304c Applicative \u3067\u3059\u3002\n\n\u305d\u3057\u3066 Monad \u3092\u4f7f\u3046\u3068\u3001\u5206\u5c90\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\nMonad \u306f\u3001\u524d\u306e\u7d50\u679c\u3092\u5229\u7528\u3057\u3066\u5f8c\u306e\u7d50\u679c\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u304c Applicative \u3068\u306e\u5927\u304d\u306a\u9055\u3044\u3067\u3059\u3002\n\n## \u6700\u5f8c\u306b\n\n\u5206\u304b\u308a\u306b\u304f\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u81ea\u5206\u306a\u308a\u306b\u6574\u7406\u3057\u3066\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u7406\u89e3\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u3042\u3063\u305f\u3089\u3001\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n\u5177\u4f53\u7684\u306a\u30e2\u30ca\u30c9\u306b\u3064\u3044\u3066\u306f\u66f8\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\n\u4eca\u5f8c MonadPlus \u306a\u3069\u306b\u3064\u3044\u3066\u8ffd\u8a18\u3057\u3066\u3044\u304f\u3064\u3082\u308a\u3067\u3059\u3002 \n", "tags": ["Haskell", "\u30e2\u30ca\u30c9"]}