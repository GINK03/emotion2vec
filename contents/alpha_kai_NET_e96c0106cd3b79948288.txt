{"context": " More than 1 year has passed since last update.\n\nD\u8a00\u8a9e\u3067\u3082Twitter UserStream\u304c\u3057\u305f\u3044\uff01\n\u306f\u3044\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3084\u3063\u3066\u307f\u305f\u3063\u3066\u8a71\u3067\u3059\n\u3061\u306a\u307f\u306b\u3001\u3084\u3063\u305f\u306e\u306f\u6570\u65e5\u524d\u306a\u306e\u3067\u3059\u304c\u307e\u3042\u3001\u591a\u5206Qiita\u306b\u3082\u3060\u308c\u3082D\u8a00\u8a9e\u3067UserStream\u306f\u3084\u3063\u3066\u306a\u304b\u3063\u305f\u3088\u3046\u306a\u306e\u3067\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3084\u3063\u3066\u307f\u305f\n\u306f\u3058\u3081\u306b\u514d\u8cac\u4e8b\u9805\u3068\u3057\u307e\u3057\u3066\u306f\u3001OAuth\u306e\u5b9f\u88c5\u306e\u3068\u3053\u308d\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\nwoxtu\u6c0f\u306e \u5e02\u6c11\u3001\u8a8d\u8a3c\u306f\u7fa9\u52d9\u3067\u3059 \u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b(\u307b\u307c\u5b8c\u5168\u306a\u30b3\u30d4\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb)\u3057\u307e\u3057\u305f\n\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306f std.net.curl \u3092\u5b9f\u88c5\u3057\u3066json\u30d1\u30fc\u30b5\u30fc\u306f std.json \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059 \u307e\u3042\u3001\u4ed6\u306e\u3082\u306e\u306f\u30b3\u30fc\u30c9\u898b\u3066\u304f\u3060\u3055\u3044\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u307e\u3059  \n\nuser_stream_test.d\nimport std.digest.sha,\n       std.algorithm,\n       std.datetime,\n       std.net.curl,\n       std.base64,\n       std.array,\n       std.regex,\n       std.stdio,\n       std.json,\n       std.conv,\n       std.uri;\n\nubyte[] hmac_sha1(in string key, in string message){\n  auto padding(in ubyte[] k){\n    auto h = (64 < k.length)? sha1Of(k): k;\n    return h ~ new ubyte[64 - h.length];\n  }\n  const k = padding(cast(ubyte[])key);\n  return sha1Of((k.map!q{cast(ubyte)(a^0x5c)}.array) ~ sha1Of((k.map!q{cast(ubyte)(a^0x36)}.array) ~ cast(ubyte[])message)).dup;\n}\nstring signature(string cks, string ats, string method, string url, string[string] params){\n\n  auto query = params.keys.sort.map!(k => k ~ \"=\" ~ params[k]).join(\"&\");\n  auto key = [cks, ats].map!encodeComponent.join(\"&\");\n  auto base = [method, url, query].map!encodeComponent.join(\"&\");\n\n  string oauthSignature = encodeComponent(Base64.encode(hmac_sha1(key, base)));\n\n  return oauthSignature;\n}\nvoid main(){\n  string url = \"https://userstream.twitter.com/1.1/user.json\";\n  string now = Clock.currTime.toUnixTime.to!string;\n  string consumerKey       = \"Your ConsumerKey\",\n         consumerKeySecret = \"Your ConsumerKeySecret\",\n         accessToken       = \"Your AccessToken\",\n         accessTokenSecret = \"Your AccessTokenSecret\";\n\n  string[string] params = [\n    \"oauth_consumer_key\"     : consumerKey,\n    \"oauth_nonce\"            : \"4324yfe\",\n    \"oauth_signature_method\" : \"HMAC-SHA1\",\n    \"oauth_timestamp\"        : now,\n    \"oauth_token\"            : accessToken,\n    \"oauth_version\"          : \"1.0\"];\n\n  foreach(key, value; params)\n    params[key] = encodeComponent(value);\n\n  string oauthSignature = signature(consumerKeySecret, accessTokenSecret, \"GET\", url, params);\n  params[\"oauth_signature\"] = oauthSignature;\n\n  auto authorizeKeys = params.keys.filter!q{a.countUntil(\"oauth_\")==0};\n  auto authorize = \"OAuth \" ~ authorizeKeys.map!(k => k ~ \"=\" ~ params[k]).join(\",\");\n\n  string path = params.keys.map!(k => k ~ \"=\" ~ params[k]).join(\"&\");\n\n  auto http = HTTP();\n  http.addRequestHeader(\"Authorization\", authorize);\n  http.method = HTTP.Method.get;\n\n  auto st = byLineAsync(url ~ \"?\" ~ path);\n  foreach(line; st){\n    if(match(line.to!string, regex(r\"\\{.*\\}\"))){\n      auto parsed = parseJSON(line.to!string);\n      if(\"text\" in parsed.object){//tweet\n        writeln(\"\\r------------------------------------------------------------------------------\");\n        writefln(\"%s:\\n%s\", parsed.object[\"user\"].object[\"name\"].str, parsed.object[\"text\"].str);\n        writeln(\"------------------------------------------------------------------------------\");\n      }\n    }\n  }\n}\n\n\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\n\u3053\u308c\u306f\u79c1\u306eGist\u306b\u3082\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\nalphaKAI/user_stream_test.d\n\n\u3053\u306e\u308f\u304b\u308a\u306b\u304f\u3044\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u307f\u308b\n\u4eca\u304b\u3089OAuth\u8a8d\u8a3c\u306a\u3069\u306f\u5148\u307b\u3069\u8cbc\u3089\u305b\u3066\u9802\u3044\u305f\u53c2\u8003\u30ea\u30f3\u30af\u306e\u65b9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n\u307e\u305a\u6700\u521d\u306b\nauto http = HTTP();\nhttp.addRequestHeader(\"Authorization\", authorize);\nhttp.method = HTTP.Method.get;\n\n\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\n\u305d\u3057\u3066\u3001http\u306e\u30d8\u30c3\u30c0\u306bAuthorization\u3092\u3064\u3051\u3066 HTTP\u306e\u30e1\u30bd\u30c3\u30c9\u3092GET\u306b\u6307\u5b9a\u3057\u307e\u3059\n\u6b21\u306b\u3001\nauto st = byLineAsync(url ~ \"?\" ~ path);\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u975e\u540c\u671f\u3067get\u3067\u53d7\u4fe1\u3092\u59cb\u3081\u307e\u3059\n\u3061\u306a\u307f\u306b\u3001UserStream\u306f\u3054\u5b58\u77e5\u306e\u901a\u308a \u7d42\u308f\u3089\u306a\u3044get \u307f\u305f\u3044\u306a\u611f\u3058\u306a\u306e\u3067\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u305a\u3063\u3068get\u3057\u7d9a\u3051\u307e\u3059(\u5207\u308c\u306a\u3044\u9650\u308a\u306f)\n\u305d\u3057\u3066\u305d\u308c\u3092foreach\u3067\u4e00\u3064\u4e00\u3064\u53d6\u308a\u51fa\u3057\u3066\u3044\u304d\u307e\u3059\nforeach(line; st){\n  if(match(line.to!string, regex(r\"\\{.*\\}\"))){\n    auto parsed = parseJSON(line.to!string);\n    if(\"text\" in parsed.object){//tweet\n      writeln(\"\\r------------------------------------------------------------------------------\");\n      writefln(\"%s:\\n%s\", parsed.object[\"user\"].object[\"name\"].str, parsed.object[\"text\"].str);\n      writeln(\"------------------------------------------------------------------------------\");\n    }\n  }\n}\n\n\u307e\u305a\u3001\u306a\u305cforeach\u306e\u6b21\u306b\u6b63\u898f\u8868\u73fe\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u3068\u8a00\u3044\u307e\u3059\u3068\njson\u4ee5\u5916\u306e\u7269\u304c\u6d41\u308c\u3066\u304d\u305f\u5834\u5408\u306bjson\u30d1\u30fc\u30b5\u30fc\u306b\u304b\u3051\u3066\u3057\u307e\u3046\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u3001json\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u5b9a\u3057\u307e\u3059\n\u305d\u3057\u3066\u3001\nauto parsed = parseJSON(line.to!string);\n\n\u3053\u308c\u3067json\u3092\u30d1\u30fc\u30b9\u3057\u3066\n\u6b21\u306b\u3001\u30d1\u30fc\u30b9\u3057\u305fjson\u304ctweet\u3067\u3042\u308b\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\n\u3068\u3044\u3046\u306e\u3082\u3001\u30c4\u30a4\u30fc\u30c8\u4ee5\u5916\u306e\u30a4\u30d9\u30f3\u30c8\u3082\u3042\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306btweet\u5224\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059(\u3053\u306e\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u304f\u3066\u6570\u6642\u9593\u8b0e\u306e\u53d7\u4fe1\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb)  \nstd.json\u3067\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\nstring value   = parsed.object[\"key\"].str;\nstring value2  = parsed.object[\"key\"][\"key2\"].str;\n\n\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\u3001\u5165\u308c\u5b50\u69cb\u9020\u306b\u306a\u3063\u3066\u308b\u3068\u3053\u308d\u306fobject[\"key2\"]\u3092\u3082\u3046\u4e00\u5ea6\u3064\u3051\u308b\u611f\u3058\u3067\n\u3067\u3001\u591a\u5206\u3053\u306e\u30b3\u30fc\u30c9\u3067\u7d50\u69cb\u8b0e\u3044\u3068\u601d\u308f\u308c\u308b\u306e\u304c\u3001\nwriteln(\"\\r---\u304c\u305f\u304f\u3055\u3093\u7d9a\u304f\");\n\n\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u306f\u7406\u7531\u304c\u3042\u308a\u307e\u3057\u3066\nstd.net.curl\u3092\u4f7f\u3046\u3068curl\u306e\u30ed\u30b0\u3068\u3044\u3046\u304bprogress\u304c\u51fa\u3066\u304f\u308b\u3093\u3067\u3059\u3088\u306d\n\u3067\u3001\u6d88\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u8abf\u3079\u3066\u307f\u308b\u3068\u3069\u3046\u306b\u3082\u6d88\u305b\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\n\u7121\u7406\u3084\u308a---\u3067\u4e0a\u66f8\u304d\u3057\u3066\u898b\u3048\u306a\u304f\u3057\u3066\u3044\u307e\u3059\nprogress\u304c\u3042\u308b\u3068\u898b\u96e3\u304f\u3066\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3053\u3046\u3057\u307e\u3057\u305f  \n\n\u4eca\u5f8c\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\n\u79c1\u306f\u73fe\u5728Ruby\u3067\u3066\u3075\u3066\u3075\u3068\u3044\u3046bot\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092D\u8a00\u8a9e\u3067\u63cf\u304d\u76f4\u305d\u3046\u304b\u306a\u3042\u3068\u601d\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u3088\u306d\nD\u8a00\u8a9e\u3067Twitter bot\u3001\u3081\u3063\u3061\u3083\u80f8\u71b1\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff01\n\u3061\u3087\u3063\u3068\u3060\u3051\u3066\u3075\u3066\u3075\u306b\u3064\u3044\u3066\u66f8\u304f\u3068\u3001\u5b9f\u306f\u3066\u3075\u3066\u3075\u306f\u3082\u3068\u3082\u3068\u79c1\u304cC\u8a00\u8a9e\u3057\u304b\u3067\u304d\u306a\u3044\u6642(\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u521d\u3081\u3066\u3059\u3050\u306e\u9803)\u306b\u958b\u767a\u3092\u59cb\u3081\u3066\n\u305d\u308c\u3067\u632b\u6298\u3057\u3066(C\u8a00\u8a9e\u308d\u304f\u306b\u7406\u89e3\u3057\u306a\u3044\u3046\u3061\u306b\u3084\u3063\u305f\u306e\u3067\u30fb\u30fb\u30fb)\u3057\u3070\u3089\u304f\u3057\u3066\u304b\u3089Ruby\u3067\u66f8\u304d\u306a\u304a\u3057\u305f\u3093\u3067\u3059\u3088\u306d\n\u6700\u8fd1\u3001\u3066\u3075\u3066\u3075\u3092\u3082\u3046\u4e00\u5ea6\u307e\u3063\u3055\u3089\u306a\u72b6\u614b\u3067Ruby\u3067\u66f8\u304d\u306a\u304a\u3057\u3066\u3066\u3075\u3066\u30752\u3092\u4f5c\u3063\u305f(\u3066\u3044\u308b)\u308f\u3051\u3067\u3059\u304c\n\u3069\u3046\u3082\u3001Ruby\u3067\u3082\u3044\u3044\u3051\u3069D\u8a00\u8a9e\u3067\u4f5c\u308a\u305f\u304f\u306a\u3063\u3066\u3055\u3063\u304d\u306e\u7d50\u8ad6\u306b\u81f3\u3063\u305f\u308f\u3051\u3067\u3059 \u306f\u3044  \n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306fD\u8a00\u8a9e\u3067Twitter UserStream\u3092\u53d7\u4fe1\u3057\u3066\u307f\u305f\uff01\u3063\u3066\u3044\u3046\u8a71\u3067\u3057\u305f\uff01  \n\u3067\u306f\u3001\u4ee5\u4e0a\u3067\u3059  \n\u03b1\u6539\n#D\u8a00\u8a9e\u3067\u3082Twitter UserStream\u304c\u3057\u305f\u3044\uff01\n\u306f\u3044\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3084\u3063\u3066\u307f\u305f\u3063\u3066\u8a71\u3067\u3059\n\u3061\u306a\u307f\u306b\u3001\u3084\u3063\u305f\u306e\u306f\u6570\u65e5\u524d\u306a\u306e\u3067\u3059\u304c\u307e\u3042\u3001\u591a\u5206Qiita\u306b\u3082\u3060\u308c\u3082D\u8a00\u8a9e\u3067UserStream\u306f\u3084\u3063\u3066\u306a\u304b\u3063\u305f\u3088\u3046\u306a\u306e\u3067\u66f8\u3044\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\n  \n  \n##\u3068\u3044\u3046\u308f\u3051\u3067\u3084\u3063\u3066\u307f\u305f\n\u306f\u3058\u3081\u306b\u514d\u8cac\u4e8b\u9805\u3068\u3057\u307e\u3057\u3066\u306f\u3001OAuth\u306e\u5b9f\u88c5\u306e\u3068\u3053\u308d\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\nwoxtu\u6c0f\u306e [\u5e02\u6c11\u3001\u8a8d\u8a3c\u306f\u7fa9\u52d9\u3067\u3059](http://qiita.com/woxtu/items/9656d426f424286c6571) \u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b(\u307b\u307c\u5b8c\u5168\u306a\u30b3\u30d4\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u30fb\u30fb\u30fb)\u3057\u307e\u3057\u305f\n\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\n\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u901a\u4fe1\u306f `std.net.curl` \u3092\u5b9f\u88c5\u3057\u3066json\u30d1\u30fc\u30b5\u30fc\u306f `std.json` \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059 \u307e\u3042\u3001\u4ed6\u306e\u3082\u306e\u306f\u30b3\u30fc\u30c9\u898b\u3066\u304f\u3060\u3055\u3044  \n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u307e\u3059  \n\n```d:user_stream_test.d\nimport std.digest.sha,\n       std.algorithm,\n       std.datetime,\n       std.net.curl,\n       std.base64,\n       std.array,\n       std.regex,\n       std.stdio,\n       std.json,\n       std.conv,\n       std.uri;\n \nubyte[] hmac_sha1(in string key, in string message){\n  auto padding(in ubyte[] k){\n    auto h = (64 < k.length)? sha1Of(k): k;\n    return h ~ new ubyte[64 - h.length];\n  }\n  const k = padding(cast(ubyte[])key);\n  return sha1Of((k.map!q{cast(ubyte)(a^0x5c)}.array) ~ sha1Of((k.map!q{cast(ubyte)(a^0x36)}.array) ~ cast(ubyte[])message)).dup;\n}\nstring signature(string cks, string ats, string method, string url, string[string] params){\n   \n  auto query = params.keys.sort.map!(k => k ~ \"=\" ~ params[k]).join(\"&\");\n  auto key = [cks, ats].map!encodeComponent.join(\"&\");\n  auto base = [method, url, query].map!encodeComponent.join(\"&\");\n   \n  string oauthSignature = encodeComponent(Base64.encode(hmac_sha1(key, base)));\n   \n  return oauthSignature;\n}\nvoid main(){\n  string url = \"https://userstream.twitter.com/1.1/user.json\";\n  string now = Clock.currTime.toUnixTime.to!string;\n  string consumerKey       = \"Your ConsumerKey\",\n         consumerKeySecret = \"Your ConsumerKeySecret\",\n         accessToken       = \"Your AccessToken\",\n         accessTokenSecret = \"Your AccessTokenSecret\";\n   \n  string[string] params = [\n    \"oauth_consumer_key\"     : consumerKey,\n    \"oauth_nonce\"            : \"4324yfe\",\n    \"oauth_signature_method\" : \"HMAC-SHA1\",\n    \"oauth_timestamp\"        : now,\n    \"oauth_token\"            : accessToken,\n    \"oauth_version\"          : \"1.0\"];\n\n  foreach(key, value; params)\n    params[key] = encodeComponent(value);\n  \n  string oauthSignature = signature(consumerKeySecret, accessTokenSecret, \"GET\", url, params);\n  params[\"oauth_signature\"] = oauthSignature;\n   \n  auto authorizeKeys = params.keys.filter!q{a.countUntil(\"oauth_\")==0};\n  auto authorize = \"OAuth \" ~ authorizeKeys.map!(k => k ~ \"=\" ~ params[k]).join(\",\");\n   \n  string path = params.keys.map!(k => k ~ \"=\" ~ params[k]).join(\"&\");\n   \n  auto http = HTTP();\n  http.addRequestHeader(\"Authorization\", authorize);\n  http.method = HTTP.Method.get;\n\n  auto st = byLineAsync(url ~ \"?\" ~ path);\n  foreach(line; st){\n    if(match(line.to!string, regex(r\"\\{.*\\}\"))){\n      auto parsed = parseJSON(line.to!string);\n      if(\"text\" in parsed.object){//tweet\n        writeln(\"\\r------------------------------------------------------------------------------\");\n        writefln(\"%s:\\n%s\", parsed.object[\"user\"].object[\"name\"].str, parsed.object[\"text\"].str);\n        writeln(\"------------------------------------------------------------------------------\");\n      }\n    }\n  }\n}\n\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\n\u3053\u308c\u306f\u79c1\u306eGist\u306b\u3082\u4e0a\u3052\u3066\u3042\u308a\u307e\u3059\n[alphaKAI/user_stream_test.d](https://gist.github.com/alphaKAI/9585216)\n  \n  \n##\u3053\u306e\u308f\u304b\u308a\u306b\u304f\u3044\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u307f\u308b\n\u4eca\u304b\u3089OAuth\u8a8d\u8a3c\u306a\u3069\u306f\u5148\u307b\u3069\u8cbc\u3089\u305b\u3066\u9802\u3044\u305f\u53c2\u8003\u30ea\u30f3\u30af\u306e\u65b9\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\n  \n  \n\u307e\u305a\u6700\u521d\u306b\n\n```d\nauto http = HTTP();\nhttp.addRequestHeader(\"Authorization\", authorize);\nhttp.method = HTTP.Method.get;\n```\n\n\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\n\u305d\u3057\u3066\u3001http\u306e\u30d8\u30c3\u30c0\u306b`Authorization`\u3092\u3064\u3051\u3066 HTTP\u306e\u30e1\u30bd\u30c3\u30c9\u3092`GET`\u306b\u6307\u5b9a\u3057\u307e\u3059\n  \n\u6b21\u306b\u3001\n\n```d\nauto st = byLineAsync(url ~ \"?\" ~ path);\n```\n  \n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u975e\u540c\u671f\u3067get\u3067\u53d7\u4fe1\u3092\u59cb\u3081\u307e\u3059\n\u3061\u306a\u307f\u306b\u3001UserStream\u306f\u3054\u5b58\u77e5\u306e\u901a\u308a `\u7d42\u308f\u3089\u306a\u3044get` \u307f\u305f\u3044\u306a\u611f\u3058\u306a\u306e\u3067\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u305a\u3063\u3068get\u3057\u7d9a\u3051\u307e\u3059(\u5207\u308c\u306a\u3044\u9650\u308a\u306f)\n\u305d\u3057\u3066\u305d\u308c\u3092foreach\u3067\u4e00\u3064\u4e00\u3064\u53d6\u308a\u51fa\u3057\u3066\u3044\u304d\u307e\u3059\n\n```d\nforeach(line; st){\n  if(match(line.to!string, regex(r\"\\{.*\\}\"))){\n    auto parsed = parseJSON(line.to!string);\n    if(\"text\" in parsed.object){//tweet\n      writeln(\"\\r------------------------------------------------------------------------------\");\n      writefln(\"%s:\\n%s\", parsed.object[\"user\"].object[\"name\"].str, parsed.object[\"text\"].str);\n      writeln(\"------------------------------------------------------------------------------\");\n    }\n  }\n}\n```\n  \n\u307e\u305a\u3001\u306a\u305cforeach\u306e\u6b21\u306b\u6b63\u898f\u8868\u73fe\u3092\u3057\u3066\u3044\u308b\u306e\u304b\u3001\u3068\u8a00\u3044\u307e\u3059\u3068\njson\u4ee5\u5916\u306e\u7269\u304c\u6d41\u308c\u3066\u304d\u305f\u5834\u5408\u306bjson\u30d1\u30fc\u30b5\u30fc\u306b\u304b\u3051\u3066\u3057\u307e\u3046\u3068\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u3001json\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u5b9a\u3057\u307e\u3059\n\u305d\u3057\u3066\u3001\n\n```d\nauto parsed = parseJSON(line.to!string);\n```\n\n\u3053\u308c\u3067json\u3092\u30d1\u30fc\u30b9\u3057\u3066\n\u6b21\u306b\u3001\u30d1\u30fc\u30b9\u3057\u305fjson\u304ctweet\u3067\u3042\u308b\u304b\u3092\u5224\u5b9a\u3057\u307e\u3059\n\u3068\u3044\u3046\u306e\u3082\u3001\u30c4\u30a4\u30fc\u30c8\u4ee5\u5916\u306e\u30a4\u30d9\u30f3\u30c8\u3082\u3042\u308b\u306e\u3067\u3001\u30a8\u30e9\u30fc\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306btweet\u5224\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059(\u3053\u306e\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u304f\u3066\u6570\u6642\u9593\u8b0e\u306e\u53d7\u4fe1\u3067\u304d\u306a\u3044\u30a8\u30e9\u30fc\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u30fb\u30fb\u30fb)  \n\n`std.json`\u3067\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\n\n```d\nstring value   = parsed.object[\"key\"].str;\nstring value2  = parsed.object[\"key\"][\"key2\"].str;\n```\n\n\u3067\u53d6\u308a\u51fa\u305b\u307e\u3059\u3001\u5165\u308c\u5b50\u69cb\u9020\u306b\u306a\u3063\u3066\u308b\u3068\u3053\u308d\u306fobject[\"key2\"]\u3092\u3082\u3046\u4e00\u5ea6\u3064\u3051\u308b\u611f\u3058\u3067\n  \n  \n\u3067\u3001\u591a\u5206\u3053\u306e\u30b3\u30fc\u30c9\u3067\u7d50\u69cb\u8b0e\u3044\u3068\u601d\u308f\u308c\u308b\u306e\u304c\u3001\n\n```d\nwriteln(\"\\r---\u304c\u305f\u304f\u3055\u3093\u7d9a\u304f\");\n```\n\n\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u306f\u7406\u7531\u304c\u3042\u308a\u307e\u3057\u3066\nstd.net.curl\u3092\u4f7f\u3046\u3068curl\u306e\u30ed\u30b0\u3068\u3044\u3046\u304bprogress\u304c\u51fa\u3066\u304f\u308b\u3093\u3067\u3059\u3088\u306d\n\u3067\u3001\u6d88\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u8abf\u3079\u3066\u307f\u308b\u3068\u3069\u3046\u306b\u3082\u6d88\u305b\u306a\u3044\u307f\u305f\u3044\u306a\u306e\u3067\n\u7121\u7406\u3084\u308a`---`\u3067\u4e0a\u66f8\u304d\u3057\u3066\u898b\u3048\u306a\u304f\u3057\u3066\u3044\u307e\u3059\nprogress\u304c\u3042\u308b\u3068\u898b\u96e3\u304f\u3066\u4ed5\u65b9\u306a\u3044\u306e\u3067\u3053\u3046\u3057\u307e\u3057\u305f  \n  \n  \n##\u4eca\u5f8c\u3053\u308c\u3067\u3084\u308a\u305f\u3044\u3053\u3068\n\u79c1\u306f\u73fe\u5728Ruby\u3067[\u3066\u3075\u3066\u3075](https://twitter.com/tefutefu_tyou)\u3068\u3044\u3046bot\u3092\u958b\u767a\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3092D\u8a00\u8a9e\u3067\u63cf\u304d\u76f4\u305d\u3046\u304b\u306a\u3042\u3068\u601d\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u3088\u306d  \nD\u8a00\u8a9e\u3067Twitter bot\u3001\u3081\u3063\u3061\u3083\u80f8\u71b1\u3058\u3083\u306a\u3044\u3067\u3059\u304b\uff01  \n\u3061\u3087\u3063\u3068\u3060\u3051\u3066\u3075\u3066\u3075\u306b\u3064\u3044\u3066\u66f8\u304f\u3068\u3001\u5b9f\u306f\u3066\u3075\u3066\u3075\u306f\u3082\u3068\u3082\u3068\u79c1\u304cC\u8a00\u8a9e\u3057\u304b\u3067\u304d\u306a\u3044\u6642(\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u521d\u3081\u3066\u3059\u3050\u306e\u9803)\u306b\u958b\u767a\u3092\u59cb\u3081\u3066\n\u305d\u308c\u3067\u632b\u6298\u3057\u3066(C\u8a00\u8a9e\u308d\u304f\u306b\u7406\u89e3\u3057\u306a\u3044\u3046\u3061\u306b\u3084\u3063\u305f\u306e\u3067\u30fb\u30fb\u30fb)\u3057\u3070\u3089\u304f\u3057\u3066\u304b\u3089Ruby\u3067\u66f8\u304d\u306a\u304a\u3057\u305f\u3093\u3067\u3059\u3088\u306d\n\u6700\u8fd1\u3001\u3066\u3075\u3066\u3075\u3092\u3082\u3046\u4e00\u5ea6\u307e\u3063\u3055\u3089\u306a\u72b6\u614b\u3067Ruby\u3067\u66f8\u304d\u306a\u304a\u3057\u3066\u3066\u3075\u3066\u30752\u3092\u4f5c\u3063\u305f(\u3066\u3044\u308b)\u308f\u3051\u3067\u3059\u304c\n\u3069\u3046\u3082\u3001Ruby\u3067\u3082\u3044\u3044\u3051\u3069D\u8a00\u8a9e\u3067\u4f5c\u308a\u305f\u304f\u306a\u3063\u3066\u3055\u3063\u304d\u306e\u7d50\u8ad6\u306b\u81f3\u3063\u305f\u308f\u3051\u3067\u3059 \u306f\u3044  \n  \n  \n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306fD\u8a00\u8a9e\u3067Twitter UserStream\u3092\u53d7\u4fe1\u3057\u3066\u307f\u305f\uff01\u3063\u3066\u3044\u3046\u8a71\u3067\u3057\u305f\uff01  \n  \n\u3067\u306f\u3001\u4ee5\u4e0a\u3067\u3059  \n  \n  \n\u03b1\u6539", "tags": ["dlang2.065 ", "curl", "TwitterAPI1.1"]}