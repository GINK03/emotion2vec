{"context": " More than 1 year has passed since last update.\n\nKafka\u3068\u306f\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\n- \u516c\u5f0f\u30b5\u30a4\u30c8\n- Apache Kafka, \u4ed6\u3068\u306f\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0\n- Qiita\u306e\u8a18\u4e8b\n\u3068\u308a\u3042\u3048\u305a\u3001\u52d5\u304f\u3068\u3053\u307e\u3067\u3002\n\nClojure\u306eKafka\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n- clj-kafka\n\u5229\u7528\u3059\u308bKafka\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f0.8.2\u3002\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f\u516c\u5f0f\u306equick start\u3067\u78ba\u8a8d\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\n\n1.leiningen\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5f93\u3063\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n2.compojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5229\u7528\n\u516c\u5f0f\u30b5\u30a4\u30c8\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u81ea\u52d5\u3067compojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5c55\u958b\u3055\u308c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u308b(\u3053\u306e\u3068\u304dcompojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30ed\u30fc\u30ab\u30eb\u306eMaven\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5b58\u5728\u3059\u308c\u3070\u305d\u308c\u3092\u5229\u7528\u3057\u3001\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b)\u3002\nlein new compojure \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306fexweb\u306b\u3059\u308b\u3002\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\nlein ring server\n\n\u4e0b\u8a18\u306eURI\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u300cHello World\u300d\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n\nhttp://localhost:3000/\n\n\n3.project.clj\u306e\u7de8\u96c6\n\nproject.clj\n\n(defproject exweb \"0.1.0-SNAPSHOT\"\n  :description \"compojure sample\"\n  :url \"http://example.com/exweb\"\n  :min-lein-version \"2.0.0\"\n  :dependencies [[org.clojure/clojure \"1.7.0\"]\n                 [compojure \"1.4.0\"]\n                 [ring/ring-defaults \"0.1.5\"]\n                 [clj-kafka \"0.3.4\"]] ;; \u8ffd\u52a0\n  :plugins [[lein-ring \"0.9.7\"]]\n  :ring {:handler exweb.handler/app}\n  :profiles {:dev {:dependencies [[javax.servlet/servlet-api \"2.5\"]\n                                  [ring/ring-mock \"0.3.0\"]]}}\n  )\n\n\n\n4.kafka\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210\n\nkafka.clj\n\n(ns exweb.kafka\n  (:require\n    [clj-kafka.core :as kafka]\n    [clj-kafka.new.producer :as kafka-pd]\n    [clj-kafka.consumer.zk :as kafka-zk])\n  (:import [kafka.serializer StringDecoder]\n           [kafka.consumer KafkaStream]))\n\n;;Producer\u7528\u306e\u8a18\u8ff0\n(def producer-config {\"bootstrap.servers\" \"localhost:9092\"})\n\n(defn send-message-to-kafka [msg]\n  (with-open [p (kafka-pd/producer producer-config (kafka-pd/string-serializer) (kafka-pd/string-serializer))]\n    @(kafka-pd/send p (kafka-pd/record \"test\" msg))))\n\n\n;;Consumer\u7528\u306e\u8a18\u8ff0\n(def consumer-config {\"zookeeper.connect\"  \"localhost:2181\"\n                      \"group.id\"           \"consumer-01\"\n                      \"auto.offset.reset\"  \"smallest\"\n                      \"auto.commit.enable\" \"false\"})\n\n(defn to-messages\n  \"\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u3001\u5024\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3001\u8fd4\u3059\u3002\"\n  [^KafkaStream stream]\n  (->> (.iterator stream)\n       iterator-seq\n       (map kafka/to-clojure)\n       (map :value)))\n\n(defn string-decoder \"\u6587\u5b57\u5217\u30c7\u30b3\u30fc\u30c0\u3092\u8fd4\u3059\" [] (StringDecoder. nil))\n\n(defn consume-messages \n  \"\u73fe\u5728\u306eTopic\u304b\u3089\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u3053\u307f\u3001\u8fd4\u3059\"\n  []\n  (kafka/with-resource [c (kafka-zk/consumer consumer-config)]\n                       kafka-zk/shutdown\n                       (to-messages (kafka-zk/create-message-stream c \"test\" (string-decoder) (string-decoder)))))\n\n\n\n5.handler\u306e\u4fee\u6b63\n\nhandler.clj\n(ns exweb.handler\n  (:require [compojure.core :refer :all]\n            [compojure.route :as route]\n            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n            [exweb.kafka :refer :all]))\n\n(defroutes app-routes\n           (GET \"/\" [] \"Hello World\")\n           (GET \"/send\" [msg] (str (send-message-to-kafka msg)))\n           (GET \"/show\" [] (consume-messages))\n           (route/not-found \"Not Found\"))\n\n(def app\n  (wrap-defaults app-routes site-defaults))\n\n\n\n\n6.\u52d5\u4f5c\u78ba\u8a8d\n\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\nlein ring server\n\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n\nhttp://localhost/send?msg=Kafka Message\n\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u306b\u306f\u300c{:topic \"test\", :partition 0, :offset 1}\u300d\u3068\u8868\u793a\u3002\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3057\u3001\u8868\u793a\n\nhttp://localhost/show\n\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u306b\u300cKafka Message\u300d\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n#Kafka\u3068\u306f\n\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\n- [\u516c\u5f0f\u30b5\u30a4\u30c8](http://kafka.apache.org/)\n- [Apache Kafka, \u4ed6\u3068\u306f\u7570\u306a\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b7\u30b9\u30c6\u30e0](http://www.infoq.com/jp/news/2014/01/apache-afka-messaging-system)\n- [Qiita\u306e\u8a18\u4e8b](http://qiita.com/search?q=kafka&sort=rel)\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u52d5\u304f\u3068\u3053\u307e\u3067\u3002\n\n\n#Clojure\u306eKafka\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\n- [clj-kafka](https://github.com/pingles/clj-kafka)\n\n\u5229\u7528\u3059\u308bKafka\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f0.8.2\u3002\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u306e\u52d5\u4f5c\u78ba\u8a8d\u306f[\u516c\u5f0f\u306equick start](http://kafka.apache.org/082/documentation.html#quickstart)\u3067\u78ba\u8a8d\u3002\n\n#\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\n##1.leiningen\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[\u516c\u5f0f\u30b5\u30a4\u30c8](http://leiningen.org/)\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5f93\u3063\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n##2.compojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5229\u7528\n\n[\u516c\u5f0f\u30b5\u30a4\u30c8](https://github.com/weavejester/compojure/wiki/Getting-Started)\n\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u81ea\u52d5\u3067compojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u5c55\u958b\u3055\u308c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u96db\u5f62\u304c\u751f\u6210\u3055\u308c\u308b(\u3053\u306e\u3068\u304dcompojure\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u30ed\u30fc\u30ab\u30eb\u306eMaven\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5b58\u5728\u3059\u308c\u3070\u305d\u308c\u3092\u5229\u7528\u3057\u3001\u5b58\u5728\u3057\u306a\u3051\u308c\u3070\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b)\u3002\n\n```\nlein new compojure \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\n```\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306fexweb\u306b\u3059\u308b\u3002\n\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u3067\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n```\nlein ring server\n```\n\n\u4e0b\u8a18\u306eURI\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u300cHello World\u300d\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n```\nhttp://localhost:3000/\n```\n\n##3.project.clj\u306e\u7de8\u96c6\n\n```clj:project.clj\n\n(defproject exweb \"0.1.0-SNAPSHOT\"\n  :description \"compojure sample\"\n  :url \"http://example.com/exweb\"\n  :min-lein-version \"2.0.0\"\n  :dependencies [[org.clojure/clojure \"1.7.0\"]\n                 [compojure \"1.4.0\"]\n                 [ring/ring-defaults \"0.1.5\"]\n                 [clj-kafka \"0.3.4\"]] ;; \u8ffd\u52a0\n  :plugins [[lein-ring \"0.9.7\"]]\n  :ring {:handler exweb.handler/app}\n  :profiles {:dev {:dependencies [[javax.servlet/servlet-api \"2.5\"]\n                                  [ring/ring-mock \"0.3.0\"]]}}\n  )\n```\n\n##4.kafka\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210\n\n\n```clj:kafka.clj\n\n(ns exweb.kafka\n  (:require\n    [clj-kafka.core :as kafka]\n    [clj-kafka.new.producer :as kafka-pd]\n    [clj-kafka.consumer.zk :as kafka-zk])\n  (:import [kafka.serializer StringDecoder]\n           [kafka.consumer KafkaStream]))\n\n;;Producer\u7528\u306e\u8a18\u8ff0\n(def producer-config {\"bootstrap.servers\" \"localhost:9092\"})\n\n(defn send-message-to-kafka [msg]\n  (with-open [p (kafka-pd/producer producer-config (kafka-pd/string-serializer) (kafka-pd/string-serializer))]\n    @(kafka-pd/send p (kafka-pd/record \"test\" msg))))\n\n\n;;Consumer\u7528\u306e\u8a18\u8ff0\n(def consumer-config {\"zookeeper.connect\"  \"localhost:2181\"\n                      \"group.id\"           \"consumer-01\"\n                      \"auto.offset.reset\"  \"smallest\"\n                      \"auto.commit.enable\" \"false\"})\n\n(defn to-messages\n  \"\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u3001\u5024\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3057\u3001\u8fd4\u3059\u3002\"\n  [^KafkaStream stream]\n  (->> (.iterator stream)\n       iterator-seq\n       (map kafka/to-clojure)\n       (map :value)))\n\n(defn string-decoder \"\u6587\u5b57\u5217\u30c7\u30b3\u30fc\u30c0\u3092\u8fd4\u3059\" [] (StringDecoder. nil))\n\n(defn consume-messages \n  \"\u73fe\u5728\u306eTopic\u304b\u3089\u5168\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8aad\u307f\u3053\u307f\u3001\u8fd4\u3059\"\n  []\n  (kafka/with-resource [c (kafka-zk/consumer consumer-config)]\n                       kafka-zk/shutdown\n                       (to-messages (kafka-zk/create-message-stream c \"test\" (string-decoder) (string-decoder)))))\n```\n\n##5.handler\u306e\u4fee\u6b63\n\n```clj:handler.clj\n(ns exweb.handler\n  (:require [compojure.core :refer :all]\n            [compojure.route :as route]\n            [ring.middleware.defaults :refer [wrap-defaults site-defaults]]\n            [exweb.kafka :refer :all]))\n\n(defroutes app-routes\n           (GET \"/\" [] \"Hello World\")\n           (GET \"/send\" [msg] (str (send-message-to-kafka msg)))\n           (GET \"/show\" [] (consume-messages))\n           (route/not-found \"Not Found\"))\n\n(def app\n  (wrap-defaults app-routes site-defaults))\n\n```\n\n##6.\u52d5\u4f5c\u78ba\u8a8d\n\n\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n```\nlein ring server\n```\n\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\n```\nhttp://localhost/send?msg=Kafka Message\n```\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u306b\u306f\u300c{:topic \"test\", :partition 0, :offset 1}\u300d\u3068\u8868\u793a\u3002\n\n\u4e0b\u8a18\u306e\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3057\u3001\u8868\u793a\n```\nhttp://localhost/show\n```\n\u30d6\u30e9\u30a6\u30b6\u4e0a\u306b\u300cKafka Message\u300d\u3068\u8868\u793a\u3055\u308c\u308b\u3002\n", "tags": ["Clojure", "Kafka"]}