{"context": "\n\n\u3084\u308b\u3053\u3068\nwebpack\u3068\u305d\u306ePlugin\u3092\u4f7f\u3063\u3066\u3001\u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u30ec\u30d9\u30eb\u306b\u3059\u308b\u306b\u306f\u3001\u60c5\u5831\u304c\u65ad\u7247\u7684\u3060\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n[\u8ffd\u8a18]\nRails\u3068webpack\u306e\u5171\u5b58\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3082\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u4e8b\u3092\u5b9f\u73fe\u3059\u308b\n\nES6\u3092ES5\u306b\u5909\u63db\n\nbabel-core\nbabel-loader\nbabel-preset-es2015\n\n\nSCSS\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\ncss-loader\nstyle-loader\nextract-text-webpack-plugin\nsass-loader\nnode-sass\n\n\nJS\u5185\u306bHTML\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n\nhtml-loader\n\n\nFont Awesome\u3092npm\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nfile-loader\nurl-loader\n\n\n\u30d6\u30e9\u30a6\u30b6\u306eLive Reload\n\nbrowser-sync\nbrowser-sync-webpack-plugin\n\n\n.env\u3067\u306e\u8a2d\u5b9a\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3001process.env\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\ndotenv\n\n\nProduction\u30d3\u30eb\u30c9\u7528\u306buglify\u3059\u308b\n\nProduction\u30d3\u30eb\u30c9\u7528\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u3064\u3051\u308b\n\nassets-webpack-plugin\n\n\nJS\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30c1\u30a7\u30c3\u30af\n\neslint\neslint-loader\n\n\nnpm package Install\nnpm install --save-dev babel-core babel-loader babel-preset-es2015 browser-sync browser-sync-webpack-plugin css-loader dotenv eslint eslint-loader extract-text-webpack-plugin file-loader node-sass sass-loader style-loader url-loader html-loader assets-webpack-plugin webpack\n\n\nBabel\u306e\u8a2d\u5b9a\n\n.babelrc\n{\n  \"presets\": [\"es2015\"]\n}\n\n\n\nESLint\u306e\u8a2d\u5b9a\n\n.eslintrc\n{\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true,\n        \"jquery\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"process\": true\n    },\n    \"rules\": {\n        \"comma-dangle\": [\n            1,\n            \"only-multiline\"\n        ],\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n}\n\n\n\nwebpack\u306e\u8a2d\u5b9a\n\nwebpack.config.js\nvar path = require('path')\nvar webpack = require('webpack')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\nvar BrowserSyncPlugin = require('browser-sync-webpack-plugin')\nvar AssetsPlugin = require('assets-webpack-plugin')\n\nrequire('dotenv').config()\n\nconst isProduction = (process.env.NODE_ENV === 'production')\n\nvar assets = new AssetsPlugin({\n  filename: 'webpack-asset-manifest.json',\n  includeManifest: 'manifest',\n  prettyPrint: true\n})\nvar defineEnv = new webpack.DefinePlugin({\n  'process.env': {\n    'NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development'),\n    'HELLO_WORLD': JSON.stringify(process.env.HELLO_WORLD)\n  }\n})\nvar uglify = new webpack.optimize.UglifyJsPlugin({ compress: { warnings: false } })\nvar extractText = new ExtractTextPlugin('style-bundle.css')\nvar browserSync = new BrowserSyncPlugin({\n  host: 'localhost',\n  port: 3001,\n  server: { baseDir: ['public'] },\n  files: ['src/*.css', 'src/*.js', 'public/*.html']\n}, { reload: true })\nvar jsPlugins = isProduction ? [defineEnv, uglify, assets] : [defineEnv, browserSync, assets]\nvar cssPlugins = isProduction ? [extractText, uglify, assets] : [extractText, browserSync, assets]\n\nvar build_path = {\n  js: 'public/assets',\n  css: 'public/assets'\n}\n\nvar devTool = isProduction ? '' : 'source-map'\n\nconst config_for_js = {\n  entry: {\n    'app': './main.js'\n  },\n\n  output: {\n    path: path.join(__dirname, build_path.js),\n    filename: isProduction ? '[name]-bundle-[hash].js' : '[name]-bundle.js'\n  },\n\n  context: path.resolve(__dirname, 'src'),\n\n  module: {\n    preLoaders: [\n      { test: /\\.js$/, loader: \"eslint-loader\", exclude: /node_modules/ }\n    ],\n    loaders: [\n      { test: /\\.js$/, exclude: /node_modules/, loaders: ['babel'] },\n      { test: /\\.html$/, loader: 'html' }\n    ]\n  },\n\n  resolve: {\n    root: [ path.resolve(__dirname, 'src') ]\n  },\n\n  devtool: devTool,\n\n  plugins: jsPlugins\n}\n\nconst config_for_static = {\n  entry: [\n    './src/scss/style.scss',\n    'font-awesome/scss/font-awesome.scss'\n  ],\n\n  output: {\n    path: path.join(__dirname, build_path.css),\n    filename: isProduction ? '[name]-bundle-[hash].css' : '[name]-bundle.css'\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.css$/, loaders: [ 'style', 'css' ] },\n      { test: /\\.scss$/, loader: ExtractTextPlugin.extract('style', 'css!sass') },\n      { test: /\\.woff(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff' },\n      { test: /\\.woff2(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff' },\n      { test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/octet-stream' },\n      { test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'file' },\n      { test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=image/svg+xml' }\n    ]\n  },\n\n  plugins: cssPlugins,\n\n  devtool: devTool\n}\n\nmodule.exports = [config_for_js, config_for_static]\n\n\n\n\u30bd\u30fc\u30b9\n\nmain.js\nimport HelloWorld from 'templates/hello_world.html'\nimport _ from 'lodash'\nimport $ from 'jquery'\n\nconst template = _.template(HelloWorld)\n$('body').append(template({ title: process.env.HELLO_WORLD }))\n\n\n\ntemplates/hello_world.html\n<h1><a href=\"/another_page.html\"><%= title %></a></h1>\n\n\n\n\u8a73\u7d30\u306a\u30bd\u30fc\u30b9\u306fhttps://github.com/rneuo/webpack-browser-sync\n\n\n\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193 \u3042\u3068\u53c2\u8003\u307e\u3067\u306b \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n\nwebpack-dev-server\u304bbrowser-sync\u306e\u3069\u3061\u3089\u3092\u9078\u629e\u3059\u308b\u304b\nBrower\u3068\u306eSync\u306b\u306fwebpack-dev-server\u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001HTML\u304c1\u679a\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067SPA\u3092\u958b\u767a\u3059\u308b\u5834\u5408\u306b\u306f\u3088\u3044\u304c\nSPA\u3067\u306f\u306a\u304f\u3001\u8907\u6570\u306eHTML\u3067\u69cb\u6210\u3055\u308c\u3066\u3066\u3001\u305d\u306eHTML\u9593\u3092\u9077\u79fb\u3055\u305b\u3066\u958b\u767a\u3059\u308b\u5834\u5408\u306b\u306fbrowser-sync\u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\nwebpack\u8d77\u52d5\u6642\u306b\u74b0\u5883\u5909\u6570\u306e\u5185\u5bb9\u3067HTML\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u63db\u3048\u305f\u3044\u6642\nstring-replace-loader\u304c\u4fbf\u5229\u3067\u3057\u305f\u3002\nwebpack.config.js\u306b\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u3057\u3066\n\nwebpack.config.js\nmodule.exports = {\n  // ...\n  module: {\n    loaders: [\n      { test: /index\\.html$/, \n        loader: 'string-replace', \n        query: { \n          multiple:[\n            { search: '$REPLACE_STRING', \n              replace: process.env.REPLACE_STRING \n            }\n          ]\n        } \n      }\n    ]\n  }\n}\n\n\nHTML\u5185\u306b\u306f\u8a2d\u5b9a\u3067\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3092\u57cb\u3081\u8fbc\u3093\u3067\u304a\u304f\u3068\u7f6e\u63db\u3057\u3066\u304f\u308c\u308b\n\nindex.html\n<div class=\"$REPLACE_STRING\">\n\n\n\nRails\u3068webpack\u306e\u5171\u5b58\u65b9\u6cd5\ncss, javascript\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u306a\u3069\u306fwebpack\u3067\u5b8c\u7d50\u3057\u305f\u3044\u5834\u5408\u3001assets-webpack-plugin\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\nconfig/initializers/webpack.rb\nRails.configuration.webpack = {\n  asset_manifest: {},\n  asset_host: 'http://localhost:3000' # public/assets\u4ee5\u4e0b\u306fs3\u306b\u7f6e\u304f\u4e8b\u3092\u60f3\u5b9a\n}\n\nasset_manifest = Rails.root.join('webpack-asset-manifest.json')\nif File.exist?(asset_manifest)\n  Rails.configuration.webpack[:asset_manifest] = JSON.parse(File.read(asset_manifest),).with_indifferent_access\nend\n\n\n\napp/helpers/application_helpers.rb\nmodule ApplicationHelper\n  def webpack_stylesheet_link_tag(name)\n    stylesheet_link_tag(webpack_assets('css', name))\n  end\n\n  def webpack_javascript_include_tag(name)\n    javascript_include_tag(webpack_assets('js', name))\n  end\n\n  private\n    def webpack_assets(type, name)\n      @manifest ||= Rails.configuration.webpack[:asset_manifest]\n      host = Rails.configuration.webpack[:asset_host]\n      return \"#{host}/assets/#{@manifest[name][type]}\"\n    end\nend\n\n\n# \u3084\u308b\u3053\u3068\n\n[webpack](https://webpack.github.io)\u3068\u305d\u306ePlugin\u3092\u4f7f\u3063\u3066\u3001\u5b9f\u52d9\u3067\u4f7f\u3048\u308b\u30ec\u30d9\u30eb\u306b\u3059\u308b\u306b\u306f\u3001\u60c5\u5831\u304c\u65ad\u7247\u7684\u3060\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n[\u8ffd\u8a18]\nRails\u3068webpack\u306e\u5171\u5b58\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3082\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n\n## \u4ee5\u4e0b\u306e\u4e8b\u3092\u5b9f\u73fe\u3059\u308b\n\n### ES6\u3092ES5\u306b\u5909\u63db\n   \n- babel-core\n- babel-loader\n- babel-preset-es2015\n\n### SCSS\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\n\n- css-loader\n- style-loader\n- extract-text-webpack-plugin\n- sass-loader\n- node-sass\n\n### JS\u5185\u306bHTML\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\n\n- html-loader\n\n### Font Awesome\u3092npm\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n- file-loader\n- url-loader\n\n### \u30d6\u30e9\u30a6\u30b6\u306eLive Reload\n\n- browser-sync\n- browser-sync-webpack-plugin\n\n### .env\u3067\u306e\u8a2d\u5b9a\u5024\u3092\u30bb\u30c3\u30c8\u3057\u3001process.env\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n- dotenv\n\n### Production\u30d3\u30eb\u30c9\u7528\u306buglify\u3059\u308b\n\n### Production\u30d3\u30eb\u30c9\u7528\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u30cf\u30c3\u30b7\u30e5\u3092\u3064\u3051\u308b\n\n- assets-webpack-plugin\n\n### JS\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30c1\u30a7\u30c3\u30af\n\n- eslint\n- eslint-loader\n\n## npm package Install\n\n```\nnpm install --save-dev babel-core babel-loader babel-preset-es2015 browser-sync browser-sync-webpack-plugin css-loader dotenv eslint eslint-loader extract-text-webpack-plugin file-loader node-sass sass-loader style-loader url-loader html-loader assets-webpack-plugin webpack\n```\n\n## Babel\u306e\u8a2d\u5b9a\n\n```:.babelrc\n{\n  \"presets\": [\"es2015\"]\n}\n```\n\n## ESLint\u306e\u8a2d\u5b9a\n\n```:.eslintrc\n{\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true,\n        \"jquery\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"process\": true\n    },\n    \"rules\": {\n        \"comma-dangle\": [\n            1,\n            \"only-multiline\"\n        ],\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n}\n```\n\n## webpack\u306e\u8a2d\u5b9a\n\n```js:webpack.config.js\nvar path = require('path')\nvar webpack = require('webpack')\nvar ExtractTextPlugin = require('extract-text-webpack-plugin')\nvar BrowserSyncPlugin = require('browser-sync-webpack-plugin')\nvar AssetsPlugin = require('assets-webpack-plugin')\n\nrequire('dotenv').config()\n\nconst isProduction = (process.env.NODE_ENV === 'production')\n\nvar assets = new AssetsPlugin({\n  filename: 'webpack-asset-manifest.json',\n  includeManifest: 'manifest',\n  prettyPrint: true\n})\nvar defineEnv = new webpack.DefinePlugin({\n  'process.env': {\n    'NODE_ENV': JSON.stringify(process.env.NODE_ENV || 'development'),\n    'HELLO_WORLD': JSON.stringify(process.env.HELLO_WORLD)\n  }\n})\nvar uglify = new webpack.optimize.UglifyJsPlugin({ compress: { warnings: false } })\nvar extractText = new ExtractTextPlugin('style-bundle.css')\nvar browserSync = new BrowserSyncPlugin({\n  host: 'localhost',\n  port: 3001,\n  server: { baseDir: ['public'] },\n  files: ['src/*.css', 'src/*.js', 'public/*.html']\n}, { reload: true })\nvar jsPlugins = isProduction ? [defineEnv, uglify, assets] : [defineEnv, browserSync, assets]\nvar cssPlugins = isProduction ? [extractText, uglify, assets] : [extractText, browserSync, assets]\n\nvar build_path = {\n  js: 'public/assets',\n  css: 'public/assets'\n}\n\nvar devTool = isProduction ? '' : 'source-map'\n\nconst config_for_js = {\n  entry: {\n    'app': './main.js'\n  },\n\n  output: {\n    path: path.join(__dirname, build_path.js),\n    filename: isProduction ? '[name]-bundle-[hash].js' : '[name]-bundle.js'\n  },\n\n  context: path.resolve(__dirname, 'src'),\n\n  module: {\n    preLoaders: [\n      { test: /\\.js$/, loader: \"eslint-loader\", exclude: /node_modules/ }\n    ],\n    loaders: [\n      { test: /\\.js$/, exclude: /node_modules/, loaders: ['babel'] },\n      { test: /\\.html$/, loader: 'html' }\n    ]\n  },\n\n  resolve: {\n    root: [ path.resolve(__dirname, 'src') ]\n  },\n\n  devtool: devTool,\n\n  plugins: jsPlugins\n}\n\nconst config_for_static = {\n  entry: [\n    './src/scss/style.scss',\n    'font-awesome/scss/font-awesome.scss'\n  ],\n\n  output: {\n    path: path.join(__dirname, build_path.css),\n    filename: isProduction ? '[name]-bundle-[hash].css' : '[name]-bundle.css'\n  },\n\n  module: {\n    loaders: [\n      { test: /\\.css$/, loaders: [ 'style', 'css' ] },\n      { test: /\\.scss$/, loader: ExtractTextPlugin.extract('style', 'css!sass') },\n      { test: /\\.woff(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff' },\n      { test: /\\.woff2(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/font-woff' },\n      { test: /\\.ttf(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=application/octet-stream' },\n      { test: /\\.eot(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'file' },\n      { test: /\\.svg(\\?v=\\d+\\.\\d+\\.\\d+)?$/, loader: 'url?limit=10000&mimetype=image/svg+xml' }\n    ]\n  },\n\n  plugins: cssPlugins,\n\n  devtool: devTool\n}\n\nmodule.exports = [config_for_js, config_for_static]\n```\n\n## \u30bd\u30fc\u30b9\n\n```js:main.js\nimport HelloWorld from 'templates/hello_world.html'\nimport _ from 'lodash'\nimport $ from 'jquery'\n\nconst template = _.template(HelloWorld)\n$('body').append(template({ title: process.env.HELLO_WORLD }))\n```\n\n```:templates/hello_world.html\n<h1><a href=\"/another_page.html\"><%= title %></a></h1>\n```\n\n- \u8a73\u7d30\u306a\u30bd\u30fc\u30b9\u306f[https://github.com/rneuo/webpack-browser-sync](https://github.com/rneuo/webpack-browser-sync)\n\n\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193 \u3042\u3068\u53c2\u8003\u307e\u3067\u306b \u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\u2193\n\n# webpack-dev-server\u304bbrowser-sync\u306e\u3069\u3061\u3089\u3092\u9078\u629e\u3059\u308b\u304b\n\nBrower\u3068\u306eSync\u306b\u306f[webpack-dev-server](https://webpack.github.io/docs/webpack-dev-server.html)\u3068\u3044\u3046\u9078\u629e\u80a2\u3082\u3042\u308a\u307e\u3059\u304c\u3001HTML\u304c1\u679a\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067SPA\u3092\u958b\u767a\u3059\u308b\u5834\u5408\u306b\u306f\u3088\u3044\u304c\n\nSPA\u3067\u306f\u306a\u304f\u3001\u8907\u6570\u306eHTML\u3067\u69cb\u6210\u3055\u308c\u3066\u3066\u3001\u305d\u306eHTML\u9593\u3092\u9077\u79fb\u3055\u305b\u3066\u958b\u767a\u3059\u308b\u5834\u5408\u306b\u306f[browser-sync](https://www.browsersync.io/)\u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n# webpack\u8d77\u52d5\u6642\u306b\u74b0\u5883\u5909\u6570\u306e\u5185\u5bb9\u3067HTML\u306e\u4e2d\u8eab\u3092\u66f8\u304d\u63db\u3048\u305f\u3044\u6642\n\n[string-replace-loader](https://github.com/Va1/string-replace-loader)\u304c\u4fbf\u5229\u3067\u3057\u305f\u3002\n\nwebpack.config.js\u306b\u306f\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u3092\u3057\u3066\n\n```js:webpack.config.js\nmodule.exports = {\n  // ...\n  module: {\n    loaders: [\n      { test: /index\\.html$/, \n        loader: 'string-replace', \n        query: { \n          multiple:[\n            { search: '$REPLACE_STRING', \n              replace: process.env.REPLACE_STRING \n            }\n          ]\n        } \n      }\n    ]\n  }\n}\n```\n\nHTML\u5185\u306b\u306f\u8a2d\u5b9a\u3067\u6307\u5b9a\u3057\u305f\u6587\u5b57\u5217\u3092\u57cb\u3081\u8fbc\u3093\u3067\u304a\u304f\u3068\u7f6e\u63db\u3057\u3066\u304f\u308c\u308b\n\n```:index.html\n<div class=\"$REPLACE_STRING\">\n```\n\n# Rails\u3068webpack\u306e\u5171\u5b58\u65b9\u6cd5\n\ncss, javascript\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u306a\u3069\u306fwebpack\u3067\u5b8c\u7d50\u3057\u305f\u3044\u5834\u5408\u3001[assets-webpack-plugin](https://github.com/kossnocorp/assets-webpack-plugin)\u3092\u4f7f\u3046\u3068\u7c21\u5358\u306b\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n```rb:config/initializers/webpack.rb\nRails.configuration.webpack = {\n  asset_manifest: {},\n  asset_host: 'http://localhost:3000' # public/assets\u4ee5\u4e0b\u306fs3\u306b\u7f6e\u304f\u4e8b\u3092\u60f3\u5b9a\n}\n\nasset_manifest = Rails.root.join('webpack-asset-manifest.json')\nif File.exist?(asset_manifest)\n  Rails.configuration.webpack[:asset_manifest] = JSON.parse(File.read(asset_manifest),).with_indifferent_access\nend\n```\n\n```rb:app/helpers/application_helpers.rb\nmodule ApplicationHelper\n  def webpack_stylesheet_link_tag(name)\n    stylesheet_link_tag(webpack_assets('css', name))\n  end\n\n  def webpack_javascript_include_tag(name)\n    javascript_include_tag(webpack_assets('js', name))\n  end\n\n  private\n    def webpack_assets(type, name)\n      @manifest ||= Rails.configuration.webpack[:asset_manifest]\n      host = Rails.configuration.webpack[:asset_host]\n      return \"#{host}/assets/#{@manifest[name][type]}\"\n    end\nend\n```\n", "tags": ["webpack", "JavaScript", "es6", "ECMAScript6"]}