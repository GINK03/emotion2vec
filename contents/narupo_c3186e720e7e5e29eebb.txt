{"context": " More than 1 year has passed since last update.\u3000\u524d\u56de\u306e\u8a18\u4e8b\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3044\u305f\u306e\u3067\uff08ngyuki\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff09\u66f8\u304d\u76f4\u3057\u3066\u307f\u308b\u3002\n\u3000\u69cb\u9020\u4f53\u306e\u96a0\u853d\u3068\u3001\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u3002animal.c \u306b\u5bfe\u3057\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4e8c\u3064\u7528\u610f\u3002animal_public.h\u306f\u516c\u958b\u3057\u3001animal_private.h\u306f\u975e\u516c\u958b\u306a\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3002\u5229\u7528\u8005\u5074\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u4f7f\u3046\u3002\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u96a0\u853d\u306e\u30e1\u30ea\u30c3\u30c8\n\n\u5229\u7528\u8005\u5074\u304c\u69cb\u9020\u4f53\u306e\u5b9f\u4f53\u3092\u5ba3\u8a00\u30fb\u5b9a\u7fa9\u3067\u304d\u306a\u3044\u3002\n\u30a2\u30ed\u30fc\u6f14\u7b97\u5b50\u306a\u3069\u3067\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3002\n\u5229\u7528\u8005\u5074\u304c\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u305d\u306e\u6271\u3044\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3002\n\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u96a0\u853d\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\n\n\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4e8c\u3064\u3082\u66f8\u304f\u306e\u306f\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\n\u8ffd\u8a18\uff1aFILE\u69cb\u9020\u4f53\u3068f*\u7cfb\u306e\u95a2\u6570\u306e\u305d\u308c\u306b\u305d\u3063\u304f\u308a\u3002\n\u30c6\u30b9\u30c8\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3002\n\nmain.c\n#include \"animal_public.h\"\n#include <stdio.h>\n\nint\nmain(void)\n{\n    Animal* animal = animal_new( 10 );\n\n    // Animal animal_2 = {};\n    // error: variable \u2018animal_2\u2019 has initializer but incomplete type\n    // error: storage size of \u2018animal_2\u2019 isn\u2019t known\n\n    // animal->age = 20;\n    // error: dereferencing pointer to incomplete type\n\n    // animal_private();\n    // main.c:(.text+0x21): undefined reference to `animal_private'\n\n    animal_set_age( animal, 30 );\n\n    printf( \"age: %d\\n\", animal_get_age( animal ) );// age: 30\n\n    animal_delete( animal );\n    return 0;\n}\n\n\n\nanimal_public.h\n#ifndef INCLUDED_ANIMAL_PUBLIC_H\n#define INCLUDED_ANIMAL_PUBLIC_H\n\ntypedef struct Animal Animal;\n\nAnimal* \nanimal_new( const int age );\n\nvoid \nanimal_delete( Animal* animal );\n\nint \nanimal_get_age( Animal* animal );\n\nvoid \nanimal_set_age( Animal* animal, const int age );\n\n#endif/*INCLUDED_ANIMAL_PUBLIC_H*/\n\n\n\n\nanimal_private.h\n#ifndef INCLUDED_ANIMAL_PRIVATE_H\n#define INCLUDED_ANIMAL_PRIVATE_H\n\n#include \"animal_public.h\"\n#include <stdlib.h>\n#include <stdio.h>\n\nstruct Animal{\n    int age;\n};\n\n#endif/*INCLUDED_ANIMAL_PRIVATE_H*/\n\n\n\n\nanimal.c\n#include \"animal_private.h\"\n\n // ---- private functions ---- \n\nstatic void \nanimal_private( void )\n{\n    printf( \"call animal_private()\\n\" );\n}\n\n // ---- public functions ---- \n\nAnimal* \nanimal_new( const int age )\n{\n    Animal* animal = ( Animal* )malloc( sizeof( Animal ) );\n    if( !animal ) {\n        perror( \"failed to allocate memory\" );\n        exit( EXIT_FAILURE );\n    }\n\n    animal->age = age;\n\n    return animal;\n}\n\nvoid \nanimal_delete( Animal* animal )\n{\n    free( animal );\n    animal_private();// debug\n}\n\nint \nanimal_get_age( Animal* animal )\n{\n    return animal->age;\n}\n\nvoid \nanimal_set_age( Animal* animal, const int age )\n{\n    animal->age = age;\n}\n\n\n\n\nresult\n$ gcc -std=c11 -Wall main.c animal.c\n$ ./a.out \nage: 30\ncall animal_private()\n\n\n\n\u3000[\u524d\u56de\u306e\u8a18\u4e8b](http://qiita.com/you_aizawa/items/0cb25aecf11bc54827dc)\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u9802\u3044\u305f\u306e\u3067\uff08ngyuki\u3055\u3093\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff09\u66f8\u304d\u76f4\u3057\u3066\u307f\u308b\u3002\n\u3000\u69cb\u9020\u4f53\u306e\u96a0\u853d\u3068\u3001\u5185\u90e8\u30ea\u30f3\u30b1\u30fc\u30b8\u306a\u95a2\u6570\u306e\u30c6\u30b9\u30c8\u3002animal.c \u306b\u5bfe\u3057\u3001\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4e8c\u3064\u7528\u610f\u3002animal_public.h\u306f\u516c\u958b\u3057\u3001animal_private.h\u306f\u975e\u516c\u958b\u306a\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3002\u5229\u7528\u8005\u5074\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u3066\u4f7f\u3046\u3002\n\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u96a0\u853d\u306e\u30e1\u30ea\u30c3\u30c8\n\n* \u5229\u7528\u8005\u5074\u304c\u69cb\u9020\u4f53\u306e\u5b9f\u4f53\u3092\u5ba3\u8a00\u30fb\u5b9a\u7fa9\u3067\u304d\u306a\u3044\u3002\n* \u30a2\u30ed\u30fc\u6f14\u7b97\u5b50\u306a\u3069\u3067\u30e1\u30f3\u30d0\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3002\n* \u5229\u7528\u8005\u5074\u304c\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u305d\u306e\u6271\u3044\u3092\u6c17\u306b\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3002\n\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u96a0\u853d\u306e\u30c7\u30e1\u30ea\u30c3\u30c8\n\n* \u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u3092\u4e8c\u3064\u3082\u66f8\u304f\u306e\u306f\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\n\u8ffd\u8a18\uff1aFILE\u69cb\u9020\u4f53\u3068f*\u7cfb\u306e\u95a2\u6570\u306e\u305d\u308c\u306b\u305d\u3063\u304f\u308a\u3002\n\n\u30c6\u30b9\u30c8\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3002\n\n```c:main.c\n#include \"animal_public.h\"\n#include <stdio.h>\n\nint\nmain(void)\n{\n\tAnimal* animal = animal_new( 10 );\n\t\n\t// Animal animal_2 = {};\n\t// error: variable \u2018animal_2\u2019 has initializer but incomplete type\n\t// error: storage size of \u2018animal_2\u2019 isn\u2019t known\n\n\t// animal->age = 20;\n\t// error: dereferencing pointer to incomplete type\n\t\n\t// animal_private();\n\t// main.c:(.text+0x21): undefined reference to `animal_private'\n\n\tanimal_set_age( animal, 30 );\n\n\tprintf( \"age: %d\\n\", animal_get_age( animal ) );// age: 30\n\n\tanimal_delete( animal );\n\treturn 0;\n}\n```\n\n```c:animal_public.h\n#ifndef INCLUDED_ANIMAL_PUBLIC_H\n#define INCLUDED_ANIMAL_PUBLIC_H\n\ntypedef struct Animal Animal;\n\nAnimal* \nanimal_new( const int age );\n\nvoid \nanimal_delete( Animal* animal );\n\nint \nanimal_get_age( Animal* animal );\n\nvoid \nanimal_set_age( Animal* animal, const int age );\n\n#endif/*INCLUDED_ANIMAL_PUBLIC_H*/\n\n```\n\n```c:animal_private.h\n#ifndef INCLUDED_ANIMAL_PRIVATE_H\n#define INCLUDED_ANIMAL_PRIVATE_H\n\n#include \"animal_public.h\"\n#include <stdlib.h>\n#include <stdio.h>\n\nstruct Animal{\n\tint age;\n};\n\n#endif/*INCLUDED_ANIMAL_PRIVATE_H*/\n\n```\n\n```c:animal.c\n#include \"animal_private.h\"\n\n // ---- private functions ---- \n\nstatic void \nanimal_private( void )\n{\n\tprintf( \"call animal_private()\\n\" );\n}\n\n // ---- public functions ---- \n\nAnimal* \nanimal_new( const int age )\n{\n\tAnimal* animal = ( Animal* )malloc( sizeof( Animal ) );\n\tif( !animal ) {\n        perror( \"failed to allocate memory\" );\n        exit( EXIT_FAILURE );\n    }\n\n\tanimal->age = age;\n\n\treturn animal;\n}\n\nvoid \nanimal_delete( Animal* animal )\n{\n\tfree( animal );\n\tanimal_private();// debug\n}\n\nint \nanimal_get_age( Animal* animal )\n{\n\treturn animal->age;\n}\n\nvoid \nanimal_set_age( Animal* animal, const int age )\n{\n\tanimal->age = age;\n}\n\n```\n\n\n```:result\n$ gcc -std=c11 -Wall main.c animal.c\n$ ./a.out \nage: 30\ncall animal_private()\n```\n", "tags": ["C", "C\u8a00\u8a9e"]}