{"context": " More than 1 year has passed since last update.\n\n\u7d4c\u7def\n\nOpsWorks\uff08Chef\uff09\u306e\u5b9f\u884c\u6642\u9593\u306f\u9577\u3044\n\u5b8c\u4e86\u306f\u3067\u304d\u308b\u3060\u3051\u65e9\u304f\u77e5\u308a\u305f\u3044\n\u8ab0\u304b\u304c\u64cd\u4f5c\u3057\u305f\u3089\u6559\u3048\u3066\u6b32\u3057\u3044\n\u3064\u307e\u308a\u3001\u64cd\u4f5c\u306e\u901a\u77e5\u306e\u6a5f\u80fd\u304c\u6b32\u3057\u3044\n\n\nOpsWorks\u306b\u306f\u901a\u77e5\u306e\u6a5f\u80fd\u304c\u306a\u3044\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u9593\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u7684\u306a\u901a\u77e5\u306f\u3042\u308b\u3093\u3067\u3059\u304c\u3001SNS\u3067\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044\u3002\n\n\u4f5c\u3063\u3066\u307f\u305f\n\u5404\u64cd\u4f5c\u306e\u60c5\u5831\u306f OpsWorks:DescribeDeployments \u3067\u53d6\u308c\u308b\u3002 Deployments\u3068\u66f8\u3044\u3066\u308b\u3051\u3069Commands\u3082\u53d6\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u76e3\u8996\u3057\u3066\u65b0\u3057\u3044\u306e\u304c\u6765\u305f\u3089\u901a\u77e5\u3059\u308b\u611f\u3058\u3002\n\n\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\n\naws-sdk (2.1.42)\ncron (1.0.9)\n\n\u203b()\u5185\u306f\u5b9f\u969b\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u305d\u308c\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\n\n\u5fc5\u8981\u306aIAM\u6a29\u9650\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"opsworks:Describe*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n\n\nHubot Script\nstack_id\u3084 channel\u3001cron\u5468\u671f\u3084\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nIAM Role\u304c\u4ed8\u4e0e\u3055\u308c\u305fEC2\u3067\u52d5\u304f\u524d\u63d0\u306a\u306e\u3067\u3001\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u306fcredential\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3042\u3068\u3001 :opsworks: \u306f\u30ab\u30b9\u30bf\u30e0\u7d75\u6587\u5b57\u306a\u306e\u3067Slack\u6a19\u6e96\u3067\u306f\u7121\u3044\u3067\u3059\u3002\n\nopswork-deployment-notify.coffee\n# Description\n#   OpsWorks deployment notify\n#\n# Configuration:\n#   None\n#\n# Commands:\n#   None\n#\n# Author:\n#   Masashi Terui\n\ncron = require('cron').CronJob\nAWS = require('aws-sdk');\nopsworks = new AWS.OpsWorks({region: 'us-east-1'});\nchannel = '#your-channel'\n\nmodule.exports = (robot) ->\n  new cron '*/10 * * * * *', () =>\n    before = Math.floor(new Date().getTime() / 1000) - 10\n    opsworks.describeStacks {}, (err, stacks) ->\n      if err\n        console.log(err, err.stack)\n      else\n        for stack in stacks.Stacks\n          opsworks.describeDeployments {StackId: stack.StackId}, (err, deploys) ->\n            if err\n              console.log(err, err.stack)\n            else\n              for deploy in deploys.Deployments\n                created_at = Math.floor(new Date(deploy.CreatedAt).getTime() / 1000)\n                if deploy.CompletedAt == \"\"\n                  completed_at = 0\n                else\n                  completed_at = Math.floor(new Date(deploy.CompletedAt).getTime() / 1000)\n                if before <= created_at\n                  data = deploy\n                  opsworks.describeInstances {InstanceIds: data.InstanceIds}, (err, instances) ->\n                    if err\n                      console.log(err, err.stack)\n                    else\n                      ins_list = []\n                      for instance in instances.Instances\n                        ins_list.push \"- #{instance.Hostname} (#{instance.PrivateIp})\"\n                      msg = \"\n:opsworks: \u958b\u59cb\u3057\u307e\u3057\u305f \\n\n```\\n\nID: #{data.DeploymentId} \\n\nCommand: #{data.Command.Name} \\n\nComment: #{data.Comment} \\n\n[Instances] \\n#{ins_list.join('\\n')} \\n\n```\\n\n\"\n                      robot.send {room: channel}, msg\n                if before <= completed_at\n                  data = deploy\n                  opsworks.describeInstances {InstanceIds: data.InstanceIds}, (err, instances) ->\n                    if err\n                      console.log(err, err.stack)\n                    else\n                      ins_list = []\n                      for instance in instances.Instances\n                        ins_list.push \"- #{instance.Hostname} (#{instance.PrivateIp})\"\n                      emoji = ':ok:'\n                      emoji = ':ng:' if deploy.Status == \"failed\"\n                      msg = \"\n:opsworks: \u7d42\u4e86\u3057\u307e\u3057\u305f #{emoji} \\n\n```\\n\nID: #{data.DeploymentId} \\n\nStatus : #{data.Status} \\n\nCommand: #{data.Command.Name} \\n\nComment: #{data.Comment} \\n\n[Instances] \\n#{ins_list.join('\\n')} \\n\n```\\n\n\"\n                      robot.send {room: channel}, msg\n  , null, true, \"Asia/Tokyo\"\n\n\n\u30bd\u30fc\u30b9\u6c5a\u304f\u3066\u3054\u3081\u3093\u306a\u3055\u3044\u3002\u3002\u3002\n\u3067\u3082\u3001\u3053\u308c\u3067\u5feb\u9069\u306aOpsWorks\u751f\u6d3b\u306b\u4e00\u6b69\u8fd1\u3065\u304d\u307e\u3057\u305f\u3002\n# \u7d4c\u7def\n\n- OpsWorks\uff08Chef\uff09\u306e\u5b9f\u884c\u6642\u9593\u306f\u9577\u3044\n- \u5b8c\u4e86\u306f\u3067\u304d\u308b\u3060\u3051\u65e9\u304f\u77e5\u308a\u305f\u3044\n- \u8ab0\u304b\u304c\u64cd\u4f5c\u3057\u305f\u3089\u6559\u3048\u3066\u6b32\u3057\u3044\n- \u3064\u307e\u308a\u3001\u64cd\u4f5c\u306e\u901a\u77e5\u306e\u6a5f\u80fd\u304c\u6b32\u3057\u3044\n\n## OpsWorks\u306b\u306f\u901a\u77e5\u306e\u6a5f\u80fd\u304c\u306a\u3044\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u9593\u306e\u30aa\u30fc\u30b1\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u7684\u306a\u901a\u77e5\u306f\u3042\u308b\u3093\u3067\u3059\u304c\u3001SNS\u3067\u30a4\u30d9\u30f3\u30c8\u901a\u77e5\u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044\u3002\n\n# \u4f5c\u3063\u3066\u307f\u305f\n\u5404\u64cd\u4f5c\u306e\u60c5\u5831\u306f `OpsWorks:DescribeDeployments` \u3067\u53d6\u308c\u308b\u3002 Deployments\u3068\u66f8\u3044\u3066\u308b\u3051\u3069Commands\u3082\u53d6\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u76e3\u8996\u3057\u3066\u65b0\u3057\u3044\u306e\u304c\u6765\u305f\u3089\u901a\u77e5\u3059\u308b\u611f\u3058\u3002\n\n## \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\n- aws-sdk (2.1.42)\n- cron (1.0.9)\n\n\u203b()\u5185\u306f\u5b9f\u969b\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u305d\u308c\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u308f\u3051\u3067\u306f\u306a\u3044\u3067\u3059\n\n## \u5fc5\u8981\u306aIAM\u6a29\u9650\n\n```json\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"opsworks:Describe*\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        }\n    ]\n}\n```\n\n## Hubot Script\n~~`stack_id`\u3084~~ `channel`\u3001cron\u5468\u671f\u3084\u30e1\u30c3\u30bb\u30fc\u30b8\u5185\u5bb9\u306f\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nIAM Role\u304c\u4ed8\u4e0e\u3055\u308c\u305fEC2\u3067\u52d5\u304f\u524d\u63d0\u306a\u306e\u3067\u3001\u305d\u3046\u3067\u306f\u306a\u3044\u5834\u5408\u306fcredential\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3042\u3068\u3001 `:opsworks:` \u306f\u30ab\u30b9\u30bf\u30e0\u7d75\u6587\u5b57\u306a\u306e\u3067Slack\u6a19\u6e96\u3067\u306f\u7121\u3044\u3067\u3059\u3002\n\n```coffeescript:opswork-deployment-notify.coffee\n# Description\n#   OpsWorks deployment notify\n#\n# Configuration:\n#   None\n#\n# Commands:\n#   None\n#\n# Author:\n#   Masashi Terui\n\ncron = require('cron').CronJob\nAWS = require('aws-sdk');\nopsworks = new AWS.OpsWorks({region: 'us-east-1'});\nchannel = '#your-channel'\n\nmodule.exports = (robot) ->\n  new cron '*/10 * * * * *', () =>\n    before = Math.floor(new Date().getTime() / 1000) - 10\n    opsworks.describeStacks {}, (err, stacks) ->\n      if err\n        console.log(err, err.stack)\n      else\n        for stack in stacks.Stacks\n          opsworks.describeDeployments {StackId: stack.StackId}, (err, deploys) ->\n            if err\n              console.log(err, err.stack)\n            else\n              for deploy in deploys.Deployments\n                created_at = Math.floor(new Date(deploy.CreatedAt).getTime() / 1000)\n                if deploy.CompletedAt == \"\"\n                  completed_at = 0\n                else\n                  completed_at = Math.floor(new Date(deploy.CompletedAt).getTime() / 1000)\n                if before <= created_at\n                  data = deploy\n                  opsworks.describeInstances {InstanceIds: data.InstanceIds}, (err, instances) ->\n                    if err\n                      console.log(err, err.stack)\n                    else\n                      ins_list = []\n                      for instance in instances.Instances\n                        ins_list.push \"- #{instance.Hostname} (#{instance.PrivateIp})\"\n                      msg = \"\n:opsworks: \u958b\u59cb\u3057\u307e\u3057\u305f \\n\n```\\n\nID: #{data.DeploymentId} \\n\nCommand: #{data.Command.Name} \\n\nComment: #{data.Comment} \\n\n[Instances] \\n#{ins_list.join('\\n')} \\n\n```\\n\n\"\n                      robot.send {room: channel}, msg\n                if before <= completed_at\n                  data = deploy\n                  opsworks.describeInstances {InstanceIds: data.InstanceIds}, (err, instances) ->\n                    if err\n                      console.log(err, err.stack)\n                    else\n                      ins_list = []\n                      for instance in instances.Instances\n                        ins_list.push \"- #{instance.Hostname} (#{instance.PrivateIp})\"\n                      emoji = ':ok:'\n                      emoji = ':ng:' if deploy.Status == \"failed\"\n                      msg = \"\n:opsworks: \u7d42\u4e86\u3057\u307e\u3057\u305f #{emoji} \\n\n```\\n\nID: #{data.DeploymentId} \\n\nStatus : #{data.Status} \\n\nCommand: #{data.Command.Name} \\n\nComment: #{data.Comment} \\n\n[Instances] \\n#{ins_list.join('\\n')} \\n\n```\\n\n\"\n                      robot.send {room: channel}, msg\n  , null, true, \"Asia/Tokyo\"\n```\n\n\u30bd\u30fc\u30b9\u6c5a\u304f\u3066\u3054\u3081\u3093\u306a\u3055\u3044\u3002\u3002\u3002\n\u3067\u3082\u3001\u3053\u308c\u3067\u5feb\u9069\u306aOpsWorks\u751f\u6d3b\u306b\u4e00\u6b69\u8fd1\u3065\u304d\u307e\u3057\u305f\u3002\n", "tags": ["Hubot", "opsworks", "Slack"]}