{"tags": ["DDD", "Scala"], "context": " More than 1 year has passed since last update.\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u3068\u8a00\u3063\u3066\u3082\u3001\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u304c\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u3092\u6d3b\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30c9\u30e1\u30a4\u30f3\u304c\u30a4\u30f3\u30d5\u30e9\u306b\u4f9d\u5b58\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3054\u304f\u81ea\u7136\u306e\u3088\u3046\u3067\u3059\u304c\u3001DIP(dependency inversion principle)\u3092\u5b9f\u73fe\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u304c\u30c9\u30e1\u30a4\u30f3\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5f93\u6765\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u306f\u4f9d\u5b58\u95a2\u4fc2\u304c\u9006\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f1d\u7d71\u7684\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u2192 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u304c\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306b\u4f9d\u5b58\nDIP\u3092\u5b9f\u73fe\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u2192 \u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u304c\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u4f9d\u5b58\n\n\u3053\u306e\u9006\u8ee2\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u3069\u3046\u5b9f\u88c5\u3057\u305f\u3089\u3044\u3044\u304b\u7591\u554f\u306b\u601d\u3063\u3066\u3044\u308b\u4eba\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1fAmazon.co.jp\uff1a \u5b9f\u8df5\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08 (Object Oriented Selection): \u30f4\u30a1\u30fc\u30f3\u30fb\u30f4\u30a1\u30fc\u30ce\u30f3, \u9ad8\u6728 \u6b63\u5f18: \u672c\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5b9f\u88c5\u65b9\u6cd5\u3092Scala\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\u5b9f\u88c5\u306e\u30dd\u30a4\u30f3\u30c8\n\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u3068\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306b2\u3064\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u308b\u3002\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002\n\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u7d99\u627f&\u5b9f\u88c5\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u3042\u308c\u3070\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u7d99\u627f\u3057\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u3069\u306e\u3088\u3046\u306b\u6c38\u7d9a\u5316\u3059\u308b\u304b\uff1f\u3069\u306e\u3088\u3046\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u53d6\u308a\u51fa\u3059\u304b\uff1f\u3069\u306e\u3088\u3046\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u524a\u9664\u3059\u308b\u304b\uff1f\u306a\u3069\u6280\u8853\u7684\u306a\u8ab2\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001RDBMS\u3092\u4f7f\u3063\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u306a\u3089\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u3084\u30ab\u30e9\u30e0\u540d\u3001SELECT\u6587\u3084INSERT\u6587\u304c\u73fe\u308c\u308b\u306e\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u306f\u3053\u3046\u3044\u3063\u305f\u60c5\u5831\u306f\u4e00\u5207\u51fa\u307e\u305b\u3093\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u79c1\u306f\u3001DDD\u3067\u30c6\u30b9\u30c8\u81ea\u52d5\u5316\u30b5\u30fc\u30d3\u30b9\u306eShouldBee - \u30c6\u30b9\u30c8\u4f5c\u696d\u3092\u9650\u308a\u306a\u304f\u30bc\u30ed\u306b\u3092\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u3001\u30c6\u30b9\u30c8\u306b\u95a2\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e2d\u304b\u3089\u3001\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u95a2\u3059\u308b\u30e2\u30c7\u30eb\u3092\u629c\u7c8b\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u3057\u3066\u304a\u793a\u3057\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3084Value Object\n\nshouldbee/testing/domain/model/development/package.scala\npackage shouldbee.testing.domain.model\n\nimport java.util.UUID\n\nimport org.joda.time.DateTime\nimport shouldbee.testing.domain.model.common.TesterId\nimport shouldbee.testing.domain.model.plan.ProjectId\n\npackage object development {\n  case class TestScriptId(id: UUID)\n\n  sealed trait Event\n  case class TestScriptCreated(testScriptId: TestScriptId, projectId: ProjectId, script: String, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n  case class TestScriptUpdated(testScriptId: TestScriptId, script: String, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n  case class TestScriptRemoved(testScriptId: TestScriptId, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n\n  // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n  trait TestScriptRepository {\n    type Events = Seq[Event]\n    def nextIdentity: TestScriptId\n    def testScriptOfId(id: TestScriptId): Option[(TestScript, Events)]\n    def save(id: TestScriptId, events: Events, oldEvents: Events): Unit\n  }\n}\n\n\n\n\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\nshouldbee/testing/domain/model/development/TestScript.scala\npackage shouldbee.testing.domain.model.development\n\nimport java.util.UUID\n\nimport org.joda.time.DateTime\nimport shouldbee.testing.domain.model.common.TesterId\nimport shouldbee.testing.domain.model.plan.ProjectId\nimport shouldbee.testing.lang.AssertionConcern._\n\nobject TestScript {\n  def create(testScriptId: TestScriptId, projectId: ProjectId, script: String, comment: String, createdBy: TesterId) = {\n    assertArgumentNotEmpty(script, \"The script must be provided.\")\n    assertArgumentNotEmpty(projectId.id.toString, \"The project id must be provided.\")\n    assertArgumentNotEmpty(createdBy.id, \"The tester id must be provided.\")\n    new TestScript & TestScriptCreated(testScriptId, projectId, script, comment, new DateTime, createdBy)\n  }\n}\n\ncase class TestScript(testScriptId: TestScriptId, projectId: ProjectId, script: String, removed: Boolean) {\n  def this() = this(TestScriptId(UUID.randomUUID), ProjectId(UUID.randomUUID), \"\", false)\n\n  def update(script: String, comment: String, updatedBy: TesterId) = {\n    assertStateFalse(removed, \"The script is already removed.\")\n    assertArgumentNotEmpty(updatedBy.id, \"The tester id must be provided.\")\n    this & TestScriptUpdated(testScriptId, script, comment, new DateTime, updatedBy)\n  }\n\n  def remove(comment: String, removedBy: TesterId) = {\n    assertStateFalse(removed, \"The script is already removed.\")\n    assertArgumentNotEmpty(removedBy.id, \"The tester id must be provided.\")\n    this & TestScriptRemoved(testScriptId, comment, new DateTime, removedBy)\n  }\n\n  private def &[A](e: A): (TestScript, A) = (this + e, e)\n\n  private[shouldbee] def +[A](event: A) = event match {\n    case e: TestScriptCreated => copy(testScriptId = e.testScriptId, projectId = e.projectId, script = e.script)\n    case e: TestScriptUpdated => copy(script = e.script)\n    case e: TestScriptRemoved => copy(removed = true)\n  }\n}\n\n\n\n\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304cport.adapter\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30d8\u30ad\u30b5\u30b4\u30ca\u30eb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u7531\u6765\u3059\u308b\u547d\u540d\u3067\u3059\u3002\u3056\u3063\u304f\u308a\u8a00\u3046\u3068infrastracture\u3068\u540c\u3058\u610f\u5473\u3067\u3059\u3002\nShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3001Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u91cd\u8981\u306a\u306e\u306f\u305d\u3053\u3067\u306f\u306a\u304f\u3001EventStoreTestScriptRepository\u304c\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306eTestScriptRepository\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\nshouldbee/testing/port/adapter/persistence/repository/EventStoreTestScriptRepository.scala\npackage shouldbee.testing.port.adapter.persistence.repository\n\nimport shouldbee.testing.domain.model.development.{ TestScript, TestScriptId, TestScriptRepository }\nimport shouldbee.testing.domain.model.development.Event\nimport shouldbee.testing.port.adapter.persistence.event.sourcing.{ AppendMessages, EventDispatcherProvider, EventStoreProvider }\nimport shouldbee.testing.port.adapter.persistence.serialization.DevelopmentJsonSerialization\n\n// MySQL\u306a\u3089 MySQLTestScriptRepository \u3068\u3044\u3046\u540d\u524d\u306b\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\nobject EventStoreTestScriptRepository extends TestScriptRepository with EventStoreProvider with EventDispatcherProvider {\n  override def nextIdentity: TestScriptId = TestScriptId(java.util.UUID.randomUUID)\n\n  // \u5177\u4f53\u7684\u306a\u4fdd\u5b58\u306e\u3057\u304b\u305f\u3002ShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n  // RDBMS\u306a\u3089\u3053\u3053\u3067INSERT\u6587\u3084UPDATE\u6587\u3092\u5b9f\u884c\u3059\u308b\u51e6\u7406\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\n  override def save(id: TestScriptId, events: Events, oldEvents: Events): Unit = {\n    val messages = new AppendMessages[Event](oldEvents.length, \"application/json\", DevelopmentJsonSerialization.serialize)\n    events.foreach(messages.add)\n    eventStore.batchAppend(id.id.toString, messages.toSeq)\n    eventDispatcher.update\n  }\n\n\n  // \u5177\u4f53\u7684\u306a\u518d\u69cb\u7bc9\u306e\u3057\u304b\u305f\u3002ShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\n  // \u30a4\u30d9\u30f3\u30c8\u3092\u9069\u7528\u3057\u3066\u3001Entity\u3092\u518d\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u306eRDBMS\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\n  // \u3053\u3053\u306bSELECT\u6587\u3092\u5b9f\u884c\u3059\u308b\u51e6\u7406\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\n  override def testScriptOfId(id: TestScriptId): Option[(TestScript, Events)] = {\n    val optionEvents = eventStore.stream(id.id.toString).map { rawEvent =>\n      DevelopmentJsonSerialization.deserialize(rawEvent.eventType, rawEvent.body)\n    }\n    val events = optionEvents.collect { case Some(event) => event }\n    events.size match {\n      case 0 => None\n      case _ => Some((events.foldLeft(new TestScript)(_ + _), events))\n    }\n  }\n}\n\n\n\n\u306a\u305c\u30a4\u30f3\u30d5\u30e9\u304c\u30c9\u30e1\u30a4\u30f3\u306b\u4f9d\u5b58\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u304b\uff1f\nEntity\u3092\u3069\u3046\u3044\u3046\u65b9\u6cd5\u3067\u6c38\u7d9a\u5316\u3059\u308b\u304b\u3092\u5f8c\u3067\u6c7a\u3081\u3089\u308c\u308b\u306e\u304c\u5927\u304d\u3044\u3067\u3059\u3002\u3072\u3068\u901a\u308a\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066\u304b\u3089\u3001MySQL\u3067\u4fdd\u5b58\u3057\u3088\u3046\u304b\u3001NoSQL\u3067\u3084\u308d\u3046\u304b\u3001\u305d\u308c\u3068\u3082\u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30a2\u306b\u3057\u3088\u3046\u304b\u3001\u3068\u3044\u3063\u305f\u9078\u629e\u304c\u5f8c\u3067\u3067\u304d\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u306b\u3068\u3063\u3066\u6700\u9069\u306a\u30a4\u30f3\u30d5\u30e9\u6280\u8853\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8cea\u554f\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044m(_ _)m\n\n\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u3068\u8a00\u3063\u3066\u3082\u3001\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u304c\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u3092\u6d3b\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u30c9\u30e1\u30a4\u30f3\u304c\u30a4\u30f3\u30d5\u30e9\u306b\u4f9d\u5b58\u3059\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3054\u304f\u81ea\u7136\u306e\u3088\u3046\u3067\u3059\u304c\u3001DIP(dependency inversion principle)\u3092\u5b9f\u73fe\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3067\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u304c\u30c9\u30e1\u30a4\u30f3\u306b\u4f9d\u5b58\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u5f93\u6765\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u306f\u4f9d\u5b58\u95a2\u4fc2\u304c\u9006\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n* \u4f1d\u7d71\u7684\u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u2192 \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u304c\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306b\u4f9d\u5b58\n* DIP\u3092\u5b9f\u73fe\u3057\u305f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3 \u2192 \u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u304c\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u4f9d\u5b58\n\n\n\u3053\u306e\u9006\u8ee2\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u3069\u3046\u5b9f\u88c5\u3057\u305f\u3089\u3044\u3044\u304b\u7591\u554f\u306b\u601d\u3063\u3066\u3044\u308b\u4eba\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f[Amazon.co.jp\uff1a \u5b9f\u8df5\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08 (Object Oriented Selection): \u30f4\u30a1\u30fc\u30f3\u30fb\u30f4\u30a1\u30fc\u30ce\u30f3, \u9ad8\u6728 \u6b63\u5f18: \u672c](http://www.amazon.co.jp/exec/obidos/ASIN/479813161X/kuchitama-22/)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u5b9f\u88c5\u65b9\u6cd5\u3092Scala\u3067\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n## \u5b9f\u88c5\u306e\u30dd\u30a4\u30f3\u30c8\n\n* \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u3068\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306b2\u3064\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u308b\u3002\n* \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3002\n* \u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u7d99\u627f&\u5b9f\u88c5\u3002\n\n\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u304c\u3042\u308c\u3070\u3001\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u7d99\u627f\u3057\u3001\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u3069\u306e\u3088\u3046\u306b\u6c38\u7d9a\u5316\u3059\u308b\u304b\uff1f\u3069\u306e\u3088\u3046\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u53d6\u308a\u51fa\u3059\u304b\uff1f\u3069\u306e\u3088\u3046\u306b\u30b9\u30c8\u30ec\u30fc\u30b8\u304b\u3089\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u524a\u9664\u3059\u308b\u304b\uff1f\u306a\u3069\u6280\u8853\u7684\u306a\u8ab2\u984c\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001RDBMS\u3092\u4f7f\u3063\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u306a\u3089\u3001\u30c6\u30fc\u30d6\u30eb\u540d\u3084\u30ab\u30e9\u30e0\u540d\u3001SELECT\u6587\u3084INSERT\u6587\u304c\u73fe\u308c\u308b\u306e\u306f\u3001\u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306b\u306f\u3053\u3046\u3044\u3063\u305f\u60c5\u5831\u306f\u4e00\u5207\u51fa\u307e\u305b\u3093\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n\u79c1\u306f\u3001DDD\u3067\u30c6\u30b9\u30c8\u81ea\u52d5\u5316\u30b5\u30fc\u30d3\u30b9\u306e[ShouldBee - \u30c6\u30b9\u30c8\u4f5c\u696d\u3092\u9650\u308a\u306a\u304f\u30bc\u30ed\u306b](https://shouldbee.at/)\u3092\u958b\u767a\u3057\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u3092\u884c\u3046\u305f\u3081\u3001\u30c6\u30b9\u30c8\u306b\u95a2\u3059\u308b\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u4e2d\u304b\u3089\u3001\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u95a2\u3059\u308b\u30e2\u30c7\u30eb\u3092\u629c\u7c8b\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3068\u3057\u3066\u304a\u793a\u3057\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n### \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3084Value Object\n\n```scala:shouldbee/testing/domain/model/development/package.scala\npackage shouldbee.testing.domain.model\n\nimport java.util.UUID\n\nimport org.joda.time.DateTime\nimport shouldbee.testing.domain.model.common.TesterId\nimport shouldbee.testing.domain.model.plan.ProjectId\n\npackage object development {\n  case class TestScriptId(id: UUID)\n\n  sealed trait Event\n  case class TestScriptCreated(testScriptId: TestScriptId, projectId: ProjectId, script: String, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n  case class TestScriptUpdated(testScriptId: TestScriptId, script: String, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n  case class TestScriptRemoved(testScriptId: TestScriptId, comment: String, occurredOn: DateTime, occurredBy: TesterId) extends Event\n\n  // \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\n  trait TestScriptRepository {\n    type Events = Seq[Event]\n    def nextIdentity: TestScriptId\n    def testScriptOfId(id: TestScriptId): Option[(TestScript, Events)]\n    def save(id: TestScriptId, events: Events, oldEvents: Events): Unit\n  }\n}\n\n```\n\n### \u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\n\n```scala:shouldbee/testing/domain/model/development/TestScript.scala\npackage shouldbee.testing.domain.model.development\n\nimport java.util.UUID\n\nimport org.joda.time.DateTime\nimport shouldbee.testing.domain.model.common.TesterId\nimport shouldbee.testing.domain.model.plan.ProjectId\nimport shouldbee.testing.lang.AssertionConcern._\n\nobject TestScript {\n  def create(testScriptId: TestScriptId, projectId: ProjectId, script: String, comment: String, createdBy: TesterId) = {\n    assertArgumentNotEmpty(script, \"The script must be provided.\")\n    assertArgumentNotEmpty(projectId.id.toString, \"The project id must be provided.\")\n    assertArgumentNotEmpty(createdBy.id, \"The tester id must be provided.\")\n    new TestScript & TestScriptCreated(testScriptId, projectId, script, comment, new DateTime, createdBy)\n  }\n}\n\ncase class TestScript(testScriptId: TestScriptId, projectId: ProjectId, script: String, removed: Boolean) {\n  def this() = this(TestScriptId(UUID.randomUUID), ProjectId(UUID.randomUUID), \"\", false)\n\n  def update(script: String, comment: String, updatedBy: TesterId) = {\n    assertStateFalse(removed, \"The script is already removed.\")\n    assertArgumentNotEmpty(updatedBy.id, \"The tester id must be provided.\")\n    this & TestScriptUpdated(testScriptId, script, comment, new DateTime, updatedBy)\n  }\n\n  def remove(comment: String, removedBy: TesterId) = {\n    assertStateFalse(removed, \"The script is already removed.\")\n    assertArgumentNotEmpty(removedBy.id, \"The tester id must be provided.\")\n    this & TestScriptRemoved(testScriptId, comment, new DateTime, removedBy)\n  }\n\n  private def &[A](e: A): (TestScript, A) = (this + e, e)\n\n  private[shouldbee] def +[A](event: A) = event match {\n    case e: TestScriptCreated => copy(testScriptId = e.testScriptId, projectId = e.projectId, script = e.script)\n    case e: TestScriptUpdated => copy(script = e.script)\n    case e: TestScriptRemoved => copy(removed = true)\n  }\n}\n```\n\n### \u30a4\u30f3\u30d5\u30e9\u30ec\u30a4\u30e4\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304cport.adapter\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u30d8\u30ad\u30b5\u30b4\u30ca\u30eb\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306b\u7531\u6765\u3059\u308b\u547d\u540d\u3067\u3059\u3002\u3056\u3063\u304f\u308a\u8a00\u3046\u3068infrastracture\u3068\u540c\u3058\u610f\u5473\u3067\u3059\u3002\n\nShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067\u3001Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u91cd\u8981\u306a\u306e\u306f\u305d\u3053\u3067\u306f\u306a\u304f\u3001`EventStoreTestScriptRepository`\u304c\u30c9\u30e1\u30a4\u30f3\u30ec\u30a4\u30e4\u306e`TestScriptRepository`\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n\n```scala:shouldbee/testing/port/adapter/persistence/repository/EventStoreTestScriptRepository.scala\npackage shouldbee.testing.port.adapter.persistence.repository\n\nimport shouldbee.testing.domain.model.development.{ TestScript, TestScriptId, TestScriptRepository }\nimport shouldbee.testing.domain.model.development.Event\nimport shouldbee.testing.port.adapter.persistence.event.sourcing.{ AppendMessages, EventDispatcherProvider, EventStoreProvider }\nimport shouldbee.testing.port.adapter.persistence.serialization.DevelopmentJsonSerialization\n\n// MySQL\u306a\u3089 MySQLTestScriptRepository \u3068\u3044\u3046\u540d\u524d\u306b\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\nobject EventStoreTestScriptRepository extends TestScriptRepository with EventStoreProvider with EventDispatcherProvider {\n  override def nextIdentity: TestScriptId = TestScriptId(java.util.UUID.randomUUID)\n\n  // \u5177\u4f53\u7684\u306a\u4fdd\u5b58\u306e\u3057\u304b\u305f\u3002ShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u307e\u3059\u3002\n  // RDBMS\u306a\u3089\u3053\u3053\u3067INSERT\u6587\u3084UPDATE\u6587\u3092\u5b9f\u884c\u3059\u308b\u51e6\u7406\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\n  override def save(id: TestScriptId, events: Events, oldEvents: Events): Unit = {\n    val messages = new AppendMessages[Event](oldEvents.length, \"application/json\", DevelopmentJsonSerialization.serialize)\n    events.foreach(messages.add)\n    eventStore.batchAppend(id.id.toString, messages.toSeq)\n    eventDispatcher.update\n  }\n\n\n  // \u5177\u4f53\u7684\u306a\u518d\u69cb\u7bc9\u306e\u3057\u304b\u305f\u3002ShouldBee\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u3068\u3044\u3046\u65b9\u6cd5\u3067Entity\u3092\u6c38\u7d9a\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001\n  // \u30a4\u30d9\u30f3\u30c8\u3092\u9069\u7528\u3057\u3066\u3001Entity\u3092\u518d\u69cb\u7bc9\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30bd\u30fc\u30b7\u30f3\u30b0\u306eRDBMS\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\n  // \u3053\u3053\u306bSELECT\u6587\u3092\u5b9f\u884c\u3059\u308b\u51e6\u7406\u304c\u66f8\u304b\u308c\u307e\u3059\u3002\n  override def testScriptOfId(id: TestScriptId): Option[(TestScript, Events)] = {\n    val optionEvents = eventStore.stream(id.id.toString).map { rawEvent =>\n      DevelopmentJsonSerialization.deserialize(rawEvent.eventType, rawEvent.body)\n    }\n    val events = optionEvents.collect { case Some(event) => event }\n    events.size match {\n      case 0 => None\n      case _ => Some((events.foldLeft(new TestScript)(_ + _), events))\n    }\n  }\n}\n```\n\n## \u306a\u305c\u30a4\u30f3\u30d5\u30e9\u304c\u30c9\u30e1\u30a4\u30f3\u306b\u4f9d\u5b58\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u304b\uff1f\n\nEntity\u3092\u3069\u3046\u3044\u3046\u65b9\u6cd5\u3067\u6c38\u7d9a\u5316\u3059\u308b\u304b\u3092\u5f8c\u3067\u6c7a\u3081\u3089\u308c\u308b\u306e\u304c\u5927\u304d\u3044\u3067\u3059\u3002\u3072\u3068\u901a\u308a\u30c9\u30e1\u30a4\u30f3\u30e2\u30c7\u30eb\u3092\u69cb\u7bc9\u3057\u3066\u304b\u3089\u3001MySQL\u3067\u4fdd\u5b58\u3057\u3088\u3046\u304b\u3001NoSQL\u3067\u3084\u308d\u3046\u304b\u3001\u305d\u308c\u3068\u3082\u30a4\u30d9\u30f3\u30c8\u30b9\u30c8\u30a2\u306b\u3057\u3088\u3046\u304b\u3001\u3068\u3044\u3063\u305f\u9078\u629e\u304c\u5f8c\u3067\u3067\u304d\u307e\u3059\u3002\u30c9\u30e1\u30a4\u30f3\u306b\u3068\u3063\u3066\u6700\u9069\u306a\u30a4\u30f3\u30d5\u30e9\u6280\u8853\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n\u8cea\u554f\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044m(_ _)m\n"}