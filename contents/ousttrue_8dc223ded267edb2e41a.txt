{"context": "ImGui\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f\nOpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b\n\u3092\u3069\u3046\u305e\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u3001ImGui\u306eC\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308b\nhttps://github.com/Extrawurst/cimgui\n\u306eD\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\nhttps://github.com/Extrawurst/DerelictImgui\n\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\nhttps://github.com/ousttrue/dimgui_sample\nD\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u3057\u3066\u540c\u69d8\u306e\nhttps://github.com/d-gamedev-team/dimgui\n\u3068\u3044\u3046\u306e\u3082\u3042\u3063\u305f\u3002\n\u8a18\u4e8b\u66f8\u304d\u306a\u304c\u3089\u306a\u3093\u304b\u3055\u3063\u304d\u898b\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u9055\u3046\u306a\u3041\u3068\u601d\u3063\u305f\u3089\n\u672c\u5f53\u306b\u9055\u3046\u30ea\u30dd\u30b8\u30c8\u30ea\u3060\u3063\u305f\u3068\u3044\u3046\u30fb\u30fb\u30fb\n\u74b0\u5883\u306f\u3001\nWindows10(64bit) + DMD + dub + VisualD\n\n\u30b5\u30f3\u30d7\u30eb\u3092\u8a66\u3057\u3066\u307f\u308b\nhttps://github.com/Extrawurst/imgui_d_test\nclone\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n> dub\nFailed to load symbol igGetFont from shared library cimgui.dll\n\ndependency walker\u3067cimgui.dll\u3092\u78ba\u8a8d\u3059\u308b\u3068\u78ba\u304b\u306b\u7121\u3044\u3002\nhttps://github.com/Extrawurst/DerelictImgui\n\u306esubmodule\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067cimgui\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3002\nigGetFont\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3002\n\u5dee\u3057\u66ff\u3048\u3066\u307f\u308b\u3002\n\u52d5\u3044\u305f\u3002\n\n\n\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\n\u4eca\u5f8c\u4f7f\u3063\u3066\u3044\u304f\u4e0a\u3067\u3082\u3044\u308d\u3044\u308d\u3042\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u95a2\u9023\u30bd\u30fc\u30b9\u3092\u624b\u5143\u306b\u7f6e\u3044\u3066\u304a\u304f\u65b9\u5411\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u69cb\u6210\u3059\u308b\u3002\n\n\u69cb\u6210\n> dub init dimgui_sample\n> cd dimgui_sample\ndimgui_sample> mkdir submodules\ndimgui_sample> cd submodules\ndimgui_sample/submodules> git submodule add https://github.com/glfw/glfw.git glfw\ndimgui_sample/submodules> git submodule add https://github.com/Extrawurst/DerelictImgui DerelictImgui\n\ndub\u306edependency\u3067DerelictImgui\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u306e\u65b9\u3092\u53c2\u7167\u3055\u305b\u308b\u3002\n\ndub.sdl\nname \"dimgui_sample\"\ndescription \"A minimal D application.\"\nauthors \"ousttrue\"\ncopyright \"Copyright c 2016, ousttrue\"\nlicense \"MIT\"\n\ndependency \"derelict-glfw3\" version=\"~>3.1.0\"\ndependency \"derelict-gl3\" version=\"~>1.0.12\"\ndependency \"derelict-imgui\" version=\"~master\" path=\"submodules/DerelictImgui\" # <- \u3053\u308c\ndependency \"gfm:math\" version=\"~>6.1.2\"\n\n\nsdl\u5f62\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3053\u3063\u3061\u306e\u65b9\u304c\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u3082\u3042\u308b\u304c\u3001\njson\u3092visuald\u3067\u958b\u304f\u3068\u4f55\u6545\u304b\u6b7b\u4ea1\u3059\u308b\u304b\u3089\u3067\u3082\u3042\u308b\uff57\nglfw3.dll\u3068cimgui.dll\u3092\u30d3\u30eb\u30c9\u3059\u308b\u30d0\u30c3\u30c1\u3082\u7528\u610f\u3057\u305f\u3002\npremake5\u3067visual studio\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066\u3001MSBuild\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\nbuild.bat\npushd submodules\npremake5.exe vs2015\nset MSBUILD=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe\n\"%MSBUILD%\" _build_premake\\SubModules.sln /p:Platform=Win32 /p:Configuration=Release\npopd\n\n\npremake\u306e\u5b9a\u7fa9\u306f\u5272\u611b\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306esubmodules\u306b\u3042\u308a\u307e\u3059\u3002\n\u6700\u5f8c\u3001VisualD\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3059\u308b\u3002\n> dub generate visuald\n\n\u6e96\u5099\u5b8c\u4e86\u3002\n\n\u5b9f\u88c5\nhttps://github.com/Extrawurst/imgui_d_test\n\u3092\u30d9\u30fc\u30b9\u306b\u30b3\u30fc\u30c9\u3092\u6574\u7406\u3057\u3066\u307f\u308b\u3002\nGlfw(Window\u7ba1\u7406)\u3068OpenGL(Shader\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u30fb\u63cf\u753b)\u3068ImGui(Glfw\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3001OpenGL\u306e\u63cf\u753b\u547d\u4ee4\u3092\u751f\u6210\u3059\u308b)\u304c\u304a\u4e92\u3044\u306b\u53c2\u7167\u3057\u306a\u3044\u3088\u3046\u306b\u5206\u3051\u305f\u3002\nImGUi\u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306f\uff12\u3064\u306e\u9762\u304c\u5fc5\u8981\u3067\u3001\n\uff11\u3064\u304c\u63cf\u753b(OpenGL\u306e\u547c\u3073\u51fa\u3057)\u3001\u3082\u3046\u3072\u3068\u3064\u304c\u30de\u30a6\u30b9\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u7b49\u306e\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u3051\u53d6\u308a(Glfw\u304c\u4f5c\u3063\u305f\u5024\u3092\u53cd\u6620\u3059\u308b)\u306b\u306a\u308b\u3002\n\n\u63cf\u753b\n\u63cf\u753b\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u306f\u3001\n\nio.RenderDrawListsFn\n\n\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3001\nio.RenderDrawListsFn\n\n\u306bnull\u3092\u6307\u5b9a\u3057\u3066\nigRender()\n\n\u306e\u5f8c\u3067\nigGetDrawData()\n\n\u3067\u53d6\u308a\u51fa\u3057\u305f\u63cf\u753b\u547d\u4ee4\u3092\u4f7f\u3063\u3066\u81ea\u5206\u3067\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3002\u5f8c\u8005\u3092\u4f7f\u3063\u305f\u3002\nvoid RenderDrawLists(ImGuiIO *io, IRenderer renderer)\n{\n    auto data=igGetDrawData();\n\n    renderer.begin(io.DisplaySize.x, io.DisplaySize.y);\n    foreach (n; 0..data.CmdListsCount)\n    {\n        ImDrawList* cmd_list = data.CmdLists[n];\n\n        auto countVertices = ImDrawList_GetVertexBufferSize(cmd_list);\n        renderer.setVertices(ImDrawList_GetVertexPtr(cmd_list,0), countVertices * ImDrawVert.sizeof);\n\n        auto countIndices = ImDrawList_GetIndexBufferSize(cmd_list);\n        renderer.setIndices(ImDrawList_GetIndexPtr(cmd_list,0), countIndices * ImDrawIdx.sizeof);\n\n        ImDrawIdx* idx_buffer_offset;\n        auto cmdCnt = ImDrawList_GetCmdSize(cmd_list);       \n        foreach(i; 0..cmdCnt)\n        {\n            auto pcmd = ImDrawList_GetCmdPtr(cmd_list, i);\n\n            if (pcmd.UserCallback)\n            {\n                pcmd.UserCallback(cmd_list, pcmd);\n            }\n            else\n            {\n                renderer.draw(pcmd.TextureId\n                              , cast(int)pcmd.ClipRect.x, cast(int)(io.DisplaySize.y - pcmd.ClipRect.w)\n                                  , cast(int)(pcmd.ClipRect.z - pcmd.ClipRect.x), cast(int)(pcmd.ClipRect.w - pcmd.ClipRect.y)\n                                      , pcmd.ElemCount, idx_buffer_offset\n                                      );\n            }\n\n            idx_buffer_offset += pcmd.ElemCount;\n        }\n    }\n\n    renderer.end();\n}\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u5f8c\u306eVulkan\u5316\u306b\u5099\u3048\u305f\u3002\n\nIRenderer.d\ninterface IRenderer\n{\n    void CreateDeviceObjects(uint vertexSize, uint uvOffset, uint colorOffset);\n    void* CreateFonts(ubyte* pixels, int width, int height);\n    nothrow void begin(float width, float height);\n    nothrow void setVertices(void *vertices, int len);\n    nothrow void setIndices(void *indices, int len);\n    nothrow void draw(void* textureId\n                      , int x, int y, int w, int h\n                      , uint count, ushort* offset);\n    nothrow void end();\n}\n\n\n\n\u5165\u529b\u30a4\u30d9\u30f3\u30c8 ~ \u69cb\u7bc9\nio\u306e\u30e1\u30f3\u30d0\u3092\u66f4\u65b0\u3057\u3066igNewFrame()\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u304c\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3067\u3001\u4ee5\u964digRender\u307e\u3067\u304cGUI\u69cb\u7bc9\u3002\nstruct GuiContext\n{\n    double       m_time = 0.0f;\n    bool[3]      m_mousePressed;\n    float        m_mouseWheel = 0.0f;\n    bool show_test_window;\n    bool show_another_window;\n    float[3] clear_color;\n}\n\n\nvoid updateGui(ImGuiIO *io\n               , ref GuiContext context\n               , double current_time\n               , int[2] size, int[2] windowSize\n               , double[2] pos, bool mouseDown0, bool mouseDown1, bool mouseDown2\n               , bool hasFocus\n               )\n{\n    // Setup display size (every frame to accommodate for window resizing)\n    io.DisplaySize = ImVec2(cast(float)size[0], cast(float)size[1]);\n\n    // Setup time step\n    io.DeltaTime = context.m_time > 0.0 ? cast(float)(current_time - context.m_time) : cast(float)(1.0f/60.0f);\n    context.m_time = current_time;\n\n    // Setup inputs\n    // (we already got mouse wheel, keyboard keys & characters from glfw callbacks polled in glfwPollEvents())\n    if (hasFocus)\n    {\n        // Convert mouse coordinates to pixels\n        auto mouse_x = pos[0] * cast(float)size[0] / windowSize[0];\n        auto mouse_y = pos[1] * cast(float)size[1] / windowSize[1];\n        // Mouse position, in pixels (set to -1,-1 if no mouse / on another screen, etc.)\n        io.MousePos = ImVec2(mouse_x, mouse_y);\n    }\n    else\n    {\n        io.MousePos = ImVec2(-1,-1);\n    }\n\n    {\n        io.MouseDown[0] = context.m_mousePressed[0] || mouseDown0;\n        context.m_mousePressed[0] = false;\n    }\n    {\n        io.MouseDown[1] = context.m_mousePressed[1] || mouseDown1;\n        context.m_mousePressed[1] = false;\n    }\n    {\n        io.MouseDown[2] = context.m_mousePressed[2] || mouseDown2;\n        context.m_mousePressed[2] = false;\n    }\n\n    io.MouseWheel = context.m_mouseWheel;\n    context.m_mouseWheel = 0.0f;\n\n    //\n    igNewFrame();\n    //\n\n    // 1. Show a simple window\n    // Tip: if we don't call ImGui::Begin()/ImGui::End() the widgets appears in a window automatically called \"Debug\"\n    {\n        static float f = 0.0f;\n        igText(\"Hello, world!\");\n        igSliderFloat(\"float\", &f, 0.0f, 1.0f);\n        igColorEdit3(\"clear color\", context.clear_color);\n        if (igButton(\"Test Window\")) context.show_test_window ^= 1;\n        if (igButton(\"Another Window\")) context.show_another_window ^= 1;\n        igText(\"Application average %.3f ms/frame (%.1f FPS)\", 1000.0f / igGetIO().Framerate, igGetIO().Framerate);\n    }\n\n// \u7701\u7565\n\n    igRender();\n}\n\n\n\u53c2\u8003\n\nhttps://blogs.unity3d.com/jp/2015/12/22/going-deep-with-imgui-and-editor-customization/\n\nUnity\u306eImmediate mode GUI\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u8aac\u660e\u304c\u3042\u308b\u3002\n\u6700\u8fd1\u307e\u3067Unity\u306eImGUI\u304c\u30ec\u30ac\u30b7\u30fc\u306a\u5909\u306a\u8a2d\u8a08\u3060\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u3002\u3059\u3044\u307e\u305b\u3093\u3002\n\n\u7d42\u308f\u308a\nImGui\u306f\u3088\u3055\u3052\u3002\n\u3088\u3044\u8cbb\u7528\u5bfe\u52b9\u679c\u306eGUI\u3068\u306a\u308a\u305d\u3046\u306a\u611f\u3058\u304c\u3059\u308b\u306e\u3060\u3002\nImGui\u304c\u4f55\u306a\u306e\u304b\u306b\u3064\u3044\u3066\u306f\n[OpenGL\u3084DirectX\u306aGUI\u306bimgui\u304c\u6700\u5f37\u3059\u304e\u308b](http://qiita.com/Ushio@github/items/446d78c881334919e156)\n\u3092\u3069\u3046\u305e\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u3001ImGui\u306eC\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308b\nhttps://github.com/Extrawurst/cimgui\n\u306eD\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\nhttps://github.com/Extrawurst/DerelictImgui\n\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\nhttps://github.com/ousttrue/dimgui_sample\n\nD\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3068\u3057\u3066\u540c\u69d8\u306e\nhttps://github.com/d-gamedev-team/dimgui\n\u3068\u3044\u3046\u306e\u3082\u3042\u3063\u305f\u3002\n\u8a18\u4e8b\u66f8\u304d\u306a\u304c\u3089\u306a\u3093\u304b\u3055\u3063\u304d\u898b\u305f\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u9055\u3046\u306a\u3041\u3068\u601d\u3063\u305f\u3089\n\u672c\u5f53\u306b\u9055\u3046\u30ea\u30dd\u30b8\u30c8\u30ea\u3060\u3063\u305f\u3068\u3044\u3046\u30fb\u30fb\u30fb\n\n\u74b0\u5883\u306f\u3001\nWindows10(64bit) + DMD + dub + VisualD\n\n# \u30b5\u30f3\u30d7\u30eb\u3092\u8a66\u3057\u3066\u307f\u308b\nhttps://github.com/Extrawurst/imgui_d_test\n\nclone\u3057\u3066\u8a66\u3057\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n\n```\n> dub\nFailed to load symbol igGetFont from shared library cimgui.dll\n```\n\ndependency walker\u3067cimgui.dll\u3092\u78ba\u8a8d\u3059\u308b\u3068\u78ba\u304b\u306b\u7121\u3044\u3002\n\nhttps://github.com/Extrawurst/DerelictImgui\n\u306esubmodule\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067cimgui\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\nigGetFont\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3002\n\u5dee\u3057\u66ff\u3048\u3066\u307f\u308b\u3002\n\n\u52d5\u3044\u305f\u3002\n\n![imgui.png](https://qiita-image-store.s3.amazonaws.com/0/59664/f80beda0-36d1-5fd7-de86-74a1cf5fa426.png)\n\n# \u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\n\u4eca\u5f8c\u4f7f\u3063\u3066\u3044\u304f\u4e0a\u3067\u3082\u3044\u308d\u3044\u308d\u3042\u308a\u305d\u3046\u306a\u306e\u3067\u3001\u95a2\u9023\u30bd\u30fc\u30b9\u3092\u624b\u5143\u306b\u7f6e\u3044\u3066\u304a\u304f\u65b9\u5411\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u69cb\u6210\u3059\u308b\u3002\n\n## \u69cb\u6210\n\n```\n> dub init dimgui_sample\n> cd dimgui_sample\ndimgui_sample> mkdir submodules\ndimgui_sample> cd submodules\ndimgui_sample/submodules> git submodule add https://github.com/glfw/glfw.git glfw\ndimgui_sample/submodules> git submodule add https://github.com/Extrawurst/DerelictImgui DerelictImgui\n```\n\ndub\u306edependency\u3067DerelictImgui\u3092\u30af\u30ed\u30fc\u30f3\u3057\u305f\u30ed\u30fc\u30ab\u30eb\u306e\u65b9\u3092\u53c2\u7167\u3055\u305b\u308b\u3002\n\n```sdl:dub.sdl\nname \"dimgui_sample\"\ndescription \"A minimal D application.\"\nauthors \"ousttrue\"\ncopyright \"Copyright c 2016, ousttrue\"\nlicense \"MIT\"\n\ndependency \"derelict-glfw3\" version=\"~>3.1.0\"\ndependency \"derelict-gl3\" version=\"~>1.0.12\"\ndependency \"derelict-imgui\" version=\"~master\" path=\"submodules/DerelictImgui\" # <- \u3053\u308c\ndependency \"gfm:math\" version=\"~>6.1.2\"\n```\n\nsdl\u5f62\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u306f\u3053\u3063\u3061\u306e\u65b9\u304c\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u3082\u3042\u308b\u304c\u3001\njson\u3092visuald\u3067\u958b\u304f\u3068\u4f55\u6545\u304b\u6b7b\u4ea1\u3059\u308b\u304b\u3089\u3067\u3082\u3042\u308b\uff57\n\nglfw3.dll\u3068cimgui.dll\u3092\u30d3\u30eb\u30c9\u3059\u308b\u30d0\u30c3\u30c1\u3082\u7528\u610f\u3057\u305f\u3002\npremake5\u3067visual studio\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3066\u3001MSBuild\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n```bat:build.bat\npushd submodules\npremake5.exe vs2015\nset MSBUILD=C:\\Program Files (x86)\\MSBuild\\14.0\\Bin\\MSBuild.exe\n\"%MSBUILD%\" _build_premake\\SubModules.sln /p:Platform=Win32 /p:Configuration=Release\npopd\n```\n\npremake\u306e\u5b9a\u7fa9\u306f\u5272\u611b\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306esubmodules\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u6700\u5f8c\u3001VisualD\u306e\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u751f\u6210\u3059\u308b\u3002\n\n```\n> dub generate visuald\n```\n\n\u6e96\u5099\u5b8c\u4e86\u3002\n\n## \u5b9f\u88c5\nhttps://github.com/Extrawurst/imgui_d_test\n\u3092\u30d9\u30fc\u30b9\u306b\u30b3\u30fc\u30c9\u3092\u6574\u7406\u3057\u3066\u307f\u308b\u3002\n\nGlfw(Window\u7ba1\u7406)\u3068OpenGL(Shader\u7b49\u306e\u30ea\u30bd\u30fc\u30b9\u7ba1\u7406\u30fb\u63cf\u753b)\u3068ImGui(Glfw\u304b\u3089\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u3051\u53d6\u308b\u3001OpenGL\u306e\u63cf\u753b\u547d\u4ee4\u3092\u751f\u6210\u3059\u308b)\u304c\u304a\u4e92\u3044\u306b\u53c2\u7167\u3057\u306a\u3044\u3088\u3046\u306b\u5206\u3051\u305f\u3002\n\nImGUi\u3092\u52d5\u4f5c\u3055\u305b\u308b\u306b\u306f\uff12\u3064\u306e\u9762\u304c\u5fc5\u8981\u3067\u3001\n\uff11\u3064\u304c\u63cf\u753b(OpenGL\u306e\u547c\u3073\u51fa\u3057)\u3001\u3082\u3046\u3072\u3068\u3064\u304c\u30de\u30a6\u30b9\u3084\u30ad\u30fc\u30dc\u30fc\u30c9\u7b49\u306e\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u3051\u53d6\u308a(Glfw\u304c\u4f5c\u3063\u305f\u5024\u3092\u53cd\u6620\u3059\u308b)\u306b\u306a\u308b\u3002\n\n### \u63cf\u753b\n\u63cf\u753b\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u306f\u3001\n```\nio.RenderDrawListsFn\n```\n\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3059\u308b\u65b9\u6cd5\u3068\u3001\n\n```\nio.RenderDrawListsFn\n```\n\n\u306bnull\u3092\u6307\u5b9a\u3057\u3066\n\n```\nigRender()\n```\n\n\u306e\u5f8c\u3067\n\n```\nigGetDrawData()\n```\n\n\u3067\u53d6\u308a\u51fa\u3057\u305f\u63cf\u753b\u547d\u4ee4\u3092\u4f7f\u3063\u3066\u81ea\u5206\u3067\u547c\u3073\u51fa\u3059\u65b9\u6cd5\u304c\u3042\u308b\u3002\u5f8c\u8005\u3092\u4f7f\u3063\u305f\u3002\n\n```d\nvoid RenderDrawLists(ImGuiIO *io, IRenderer renderer)\n{\n\tauto data=igGetDrawData();\n\n\trenderer.begin(io.DisplaySize.x, io.DisplaySize.y);\n    foreach (n; 0..data.CmdListsCount)\n    {\n        ImDrawList* cmd_list = data.CmdLists[n];\n\n        auto countVertices = ImDrawList_GetVertexBufferSize(cmd_list);\n\t\trenderer.setVertices(ImDrawList_GetVertexPtr(cmd_list,0), countVertices * ImDrawVert.sizeof);\n\n        auto countIndices = ImDrawList_GetIndexBufferSize(cmd_list);\n\t\trenderer.setIndices(ImDrawList_GetIndexPtr(cmd_list,0), countIndices * ImDrawIdx.sizeof);\n\n        ImDrawIdx* idx_buffer_offset;\n        auto cmdCnt = ImDrawList_GetCmdSize(cmd_list);       \n        foreach(i; 0..cmdCnt)\n        {\n            auto pcmd = ImDrawList_GetCmdPtr(cmd_list, i);\n\n            if (pcmd.UserCallback)\n            {\n                pcmd.UserCallback(cmd_list, pcmd);\n            }\n            else\n            {\n\t\t\t\trenderer.draw(pcmd.TextureId\n\t\t\t\t\t\t\t  , cast(int)pcmd.ClipRect.x, cast(int)(io.DisplaySize.y - pcmd.ClipRect.w)\n\t\t\t\t\t\t\t\t  , cast(int)(pcmd.ClipRect.z - pcmd.ClipRect.x), cast(int)(pcmd.ClipRect.w - pcmd.ClipRect.y)\n\t\t\t\t\t\t\t\t\t  , pcmd.ElemCount, idx_buffer_offset\n\t\t\t\t\t\t\t\t\t  );\n            }\n\n            idx_buffer_offset += pcmd.ElemCount;\n        }\n    }\n\n\trenderer.end();\n}\n```\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u5f8c\u306eVulkan\u5316\u306b\u5099\u3048\u305f\u3002\n\n```d:IRenderer.d\ninterface IRenderer\n{\n\tvoid CreateDeviceObjects(uint vertexSize, uint uvOffset, uint colorOffset);\n\tvoid* CreateFonts(ubyte* pixels, int width, int height);\n\tnothrow void begin(float width, float height);\n\tnothrow void setVertices(void *vertices, int len);\n\tnothrow void setIndices(void *indices, int len);\n\tnothrow void draw(void* textureId\n\t\t\t\t\t  , int x, int y, int w, int h\n\t\t\t\t\t  , uint count, ushort* offset);\n\tnothrow void end();\n}\n```\n\n### \u5165\u529b\u30a4\u30d9\u30f3\u30c8 ~ \u69cb\u7bc9\nio\u306e\u30e1\u30f3\u30d0\u3092\u66f4\u65b0\u3057\u3066igNewFrame()\u3092\u547c\u3073\u51fa\u3059\u307e\u3067\u304c\u5165\u529b\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u3067\u3001\u4ee5\u964digRender\u307e\u3067\u304cGUI\u69cb\u7bc9\u3002\n\n```d\nstruct GuiContext\n{\n\tdouble       m_time = 0.0f;\n\tbool[3]      m_mousePressed;\n\tfloat        m_mouseWheel = 0.0f;\n\tbool show_test_window;\n\tbool show_another_window;\n\tfloat[3] clear_color;\n}\n\n\nvoid updateGui(ImGuiIO *io\n\t\t\t   , ref GuiContext context\n\t\t\t   , double current_time\n\t\t\t   , int[2] size, int[2] windowSize\n\t\t\t   , double[2] pos, bool mouseDown0, bool mouseDown1, bool mouseDown2\n\t\t\t   , bool hasFocus\n\t\t\t   )\n{\n\t// Setup display size (every frame to accommodate for window resizing)\n\tio.DisplaySize = ImVec2(cast(float)size[0], cast(float)size[1]);\n\n\t// Setup time step\n\tio.DeltaTime = context.m_time > 0.0 ? cast(float)(current_time - context.m_time) : cast(float)(1.0f/60.0f);\n\tcontext.m_time = current_time;\n\n\t// Setup inputs\n\t// (we already got mouse wheel, keyboard keys & characters from glfw callbacks polled in glfwPollEvents())\n\tif (hasFocus)\n\t{\n\t\t// Convert mouse coordinates to pixels\n\t\tauto mouse_x = pos[0] * cast(float)size[0] / windowSize[0];\n\t\tauto mouse_y = pos[1] * cast(float)size[1] / windowSize[1];\n\t\t// Mouse position, in pixels (set to -1,-1 if no mouse / on another screen, etc.)\n\t\tio.MousePos = ImVec2(mouse_x, mouse_y);\n\t}\n\telse\n\t{\n\t\tio.MousePos = ImVec2(-1,-1);\n\t}\n\n\t{\n\t\tio.MouseDown[0] = context.m_mousePressed[0] || mouseDown0;\n\t\tcontext.m_mousePressed[0] = false;\n\t}\n\t{\n\t\tio.MouseDown[1] = context.m_mousePressed[1] || mouseDown1;\n\t\tcontext.m_mousePressed[1] = false;\n\t}\n\t{\n\t\tio.MouseDown[2] = context.m_mousePressed[2] || mouseDown2;\n\t\tcontext.m_mousePressed[2] = false;\n\t}\n\n\tio.MouseWheel = context.m_mouseWheel;\n\tcontext.m_mouseWheel = 0.0f;\n\n\t//\n\tigNewFrame();\n\t//\n\n\t// 1. Show a simple window\n\t// Tip: if we don't call ImGui::Begin()/ImGui::End() the widgets appears in a window automatically called \"Debug\"\n\t{\n\t\tstatic float f = 0.0f;\n\t\tigText(\"Hello, world!\");\n\t\tigSliderFloat(\"float\", &f, 0.0f, 1.0f);\n\t\tigColorEdit3(\"clear color\", context.clear_color);\n\t\tif (igButton(\"Test Window\")) context.show_test_window ^= 1;\n\t\tif (igButton(\"Another Window\")) context.show_another_window ^= 1;\n\t\tigText(\"Application average %.3f ms/frame (%.1f FPS)\", 1000.0f / igGetIO().Framerate, igGetIO().Framerate);\n\t}\n\n// \u7701\u7565\n\n\tigRender();\n}\n```\n\n# \u53c2\u8003\n* https://blogs.unity3d.com/jp/2015/12/22/going-deep-with-imgui-and-editor-customization/\n\nUnity\u306eImmediate mode GUI\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306e\u8aac\u660e\u304c\u3042\u308b\u3002\n\u6700\u8fd1\u307e\u3067Unity\u306eImGUI\u304c\u30ec\u30ac\u30b7\u30fc\u306a\u5909\u306a\u8a2d\u8a08\u3060\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u3002\u3059\u3044\u307e\u305b\u3093\u3002\n\n# \u7d42\u308f\u308a\nImGui\u306f\u3088\u3055\u3052\u3002\n\u3088\u3044\u8cbb\u7528\u5bfe\u52b9\u679c\u306eGUI\u3068\u306a\u308a\u305d\u3046\u306a\u611f\u3058\u304c\u3059\u308b\u306e\u3060\u3002\n", "tags": ["dlang", "imgui", "OpenGL"]}