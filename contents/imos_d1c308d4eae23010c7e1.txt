{"tags": ["C++", "boost"], "context": " More than 1 year has passed since last update.\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u305f\u30c4\u30ea\u30fc\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u81ea\u52d5\u7684\u306b\u89e3\u653e\u3055\u308c\u306a\u3044\u304cshared_ptr\u3092\u4f7f\u3063\u3066\u81ea\u52d5\u7684\u306b\u4e0d\u8981\u3068\u306a\u3063\u305f\u90e8\u5206\u3092\u89e3\u653e\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n#include <boost/shared_ptr.hpp>\n#include <stdio.h>\nusing namespace std;\nusing boost::shared_ptr;\n\nstruct CharTree {\n    shared_ptr<CharTree> parent;\n    char c;\n\n    CharTree(shared_ptr<CharTree> parent, char c):\n        parent(parent), c(c) {\n        printf(\"Construct %c\\n\", c);\n    }\n    CharTree(CharTree *parent, char c):\n        parent(parent), c(c) {\n        printf(\"Construct %c\\n\", c);\n    }\n\n    ~CharTree() {\n        printf(\"Destruct %c\\n\", c);\n    }\n};\n\nint main() {\n    /*\n    [\u4f5c\u308b\u30c4\u30ea\u30fc]\n\n      A-B-G-H-I\n       \\\n        C-D-E-F-J-K\n               \\\n                L-M\n    */\n    shared_ptr<CharTree> root(new CharTree(NULL, 'A'));\n    shared_ptr<CharTree> leaf1(new CharTree(root, 'B'));\n    shared_ptr<CharTree> leaf2(new CharTree(root, 'C'));\n    leaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'D'));\n    leaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'E'));\n    leaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'F'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'G'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'H'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'I'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf2, 'J'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'K'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf2, 'L'));\n    leaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'M'));\n}\n\n\n\u51fa\u529b\u7d50\u679c\nConstruct A\nConstruct B\nConstruct C\nConstruct D\nConstruct E\nConstruct F\nConstruct G\nConstruct H\nConstruct I\nConstruct J\nDestruct I\nDestruct H\nDestruct G\nDestruct B\nConstruct K\nConstruct L\nDestruct K\nDestruct J\nConstruct M\nDestruct M\nDestruct L\nDestruct F\nDestruct E\nDestruct D\nDestruct C\nDestruct A\n\n\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u305f\u30c4\u30ea\u30fc\u30c7\u30fc\u30bf\u69cb\u9020\u306f\u81ea\u52d5\u7684\u306b\u89e3\u653e\u3055\u308c\u306a\u3044\u304cshared_ptr\u3092\u4f7f\u3063\u3066\u81ea\u52d5\u7684\u306b\u4e0d\u8981\u3068\u306a\u3063\u305f\u90e8\u5206\u3092\u89e3\u653e\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\n```c++\n\n#include <boost/shared_ptr.hpp>\n#include <stdio.h>\nusing namespace std;\nusing boost::shared_ptr;\n\nstruct CharTree {\n\tshared_ptr<CharTree> parent;\n\tchar c;\n\t\n\tCharTree(shared_ptr<CharTree> parent, char c):\n\t    parent(parent), c(c) {\n\t\tprintf(\"Construct %c\\n\", c);\n\t}\n\tCharTree(CharTree *parent, char c):\n\t    parent(parent), c(c) {\n\t\tprintf(\"Construct %c\\n\", c);\n\t}\n\t\n\t~CharTree() {\n\t\tprintf(\"Destruct %c\\n\", c);\n\t}\n};\n\nint main() {\n\t/*\n\t[\u4f5c\u308b\u30c4\u30ea\u30fc]\n\t\n\t  A-B-G-H-I\n\t   \\\n\t    C-D-E-F-J-K\n\t           \\\n\t            L-M\n\t*/\n\tshared_ptr<CharTree> root(new CharTree(NULL, 'A'));\n\tshared_ptr<CharTree> leaf1(new CharTree(root, 'B'));\n\tshared_ptr<CharTree> leaf2(new CharTree(root, 'C'));\n\tleaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'D'));\n\tleaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'E'));\n\tleaf2 = shared_ptr<CharTree>(new CharTree(leaf2, 'F'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'G'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'H'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'I'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf2, 'J'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'K'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf2, 'L'));\n\tleaf1 = shared_ptr<CharTree>(new CharTree(leaf1, 'M'));\n}\n```\n\n## \u51fa\u529b\u7d50\u679c\n\n```\nConstruct A\nConstruct B\nConstruct C\nConstruct D\nConstruct E\nConstruct F\nConstruct G\nConstruct H\nConstruct I\nConstruct J\nDestruct I\nDestruct H\nDestruct G\nDestruct B\nConstruct K\nConstruct L\nDestruct K\nDestruct J\nConstruct M\nDestruct M\nDestruct L\nDestruct F\nDestruct E\nDestruct D\nDestruct C\nDestruct A\n```"}