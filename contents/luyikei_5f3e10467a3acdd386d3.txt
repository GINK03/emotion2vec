{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n@luyikei \u3067\u3059\u3002 Qt \u304c\u5927\u597d\u304d\u306a\u4eba\u9593\u3067\u3059\u3002\u6700\u8fd1\u3042\u307e\u308a\u3084\u3063\u3066\u306a\u3044\u306e\u3067\u3059\u304c... \nQt Advent Calendar 2014 \u3082\u6700\u7d42\u65e5\u3067\u3059\u306d\u3002\u5c11\u3057\u5bc2\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002\u4eca\u65e5\u306f\u30af\u30ea\u30b9\u30de\u30b9\u3067\u3059\u3002\u7686\u3055\u3093\u697d\u3057\u3093\u3067\u3044\u307e\u3059\u304b\uff1f\uff01\u4eca\u65e5\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3059\u3002\u5143\u3005\u306f\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092 Qt \u3067\u3084\u308b\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u8003\u3048\u3066\u307f\u308b\u3068\u591a\u304f\u306e\u90e8\u5206\u304c Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u6539\u5584\u3055\u308c\u308b\u3068\u601d\u3063\u305f\u306e\u3067\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u591a\u5206\u5c11\u3057\u3084\u3063\u3066\u3044\u308b\u7686\u3055\u3093\u306a\u3089\u3070\u65e2\u77e5\u306e\u4e8b\u9805\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002\n\u591a\u304f\u306e\u90e8\u5206\u306f Container Classes \u306e\u53c2\u8003\u3067\u3059\u3002\u8208\u5473\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\nQt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306f\u591a\u304f\u304c C++ \u306e STL \u306e\u3082\u306e\u3092\u767a\u5c55\u3055\u305b\u305f\u3082\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 STL \u306e  vector<T>  \u306f Qt \u306e QVector<T> \u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u3067\u306f\u4f55\u6545\u3001 Qt \u3067\u72ec\u81ea\u306b\u518d\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u308c\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3088\u3046\u306b\n\nThese container classes are designed to be lighter, safer, and easier to use than the STL containers. If you are unfamiliar with the STL, or prefer to do things the \"Qt way\", you can use these classes instead of the STL classes.\n\n\u3044\u3044\u3053\u3068\u305a\u304f\u3081\u3067\u3059\u306d\uff01\u3084\u306f\u308a Qt \u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u306a\u3089\u3070\u591a\u304f\u306e\u5834\u5408\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u306f\u65e9\u901f\u4e00\u3064\u305a\u3064\u898b\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306e\u697d\u3057\u3055\u3092\u5b9f\u611f\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u305f\u3081\u3001QVector<T> \u3092\u4f8b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u306f Container Classes \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nQVector<T> \u3092\u4f8b\u306b\n\u3053\u308c\u306f\u540d\u79f0\u306e\u901a\u308a\u30d9\u30af\u30c8\u30eb\u578b\u3067\u5024\u306e\u7d44\u3092\u4fdd\u5b58\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u306d\u3002STL \u306e  vector<T>  \u306f\u591a\u304f\u306e\u5834\u5408\u306f\u52d5\u7684\u914d\u5217\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 STL \u306e  vector<T>  \u306f\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\nvector.cpp\nvector<int> v;\nv.push_back(1); // 1 \u3092\u8ffd\u52a0\ncout << v[0] << endl; //\u8868\u793a\n\nv.push_back(2);\nv.push_back(3);\n// \u3059\u3079\u3066\u8868\u793a(\u6dfb\u5b57)\nfor (int i=0; i < v.size(); ++i){\n    cout << v[i] << endl;\n}\n\n// \u3059\u3079\u3066\u8868\u793a(\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nfor (vector<int>::iterator it = v.begin(); it != v.end(); ++it){\n    cout << *it << endl;\n}\n\n\n\n\u3073\u307f\u3087\uff5e\u3067\u3059\u306d\u3002QVector<T> \u3092\u4f7f\u3046\u3068\n\nqvector.cpp\nQVector<int> v;\nv.append(1); // 1 \u3092\u8ffd\u52a0 append \u306e\u307b\u3046\u304c Qt \u3063\u307d\u3044 push_back \u3082\u52ff\u8ad6\u4f7f\u3048\u308b\u3002\ncout << v[0] << endl; //\u8868\u793a\n\nv << 2 << 3; // \u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u8ffd\u52a0\u304c\u697d\u306b\u884c\u3048\u308b\u30022, 3 \u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3002\n\n\n\u8ffd\u52a0\u3060\u3051\u3067\u3082\u898b\u6804\u3048\u3070\u5168\u304f\u9055\u3044\u307e\u3059\u3002 \n\nfor \u30eb\u30fc\u30d7\u3060\u3051\u3092\u3068\u3063\u3066\u3082\nfor \u30eb\u30fc\u30d7\u3067\u5168\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u3082\n\nqvector.cpp\n// \u3059\u3079\u3066\u8868\u793a(\u6dfb\u5b57)\nfor (int i=0; i < v.size(); ++i){\n    cout << v.at(i) << endl; // at() \u4f7f\u3046\u3068\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u306a\u3044\u305f\u3081\u3001\u9ad8\u901f\u3002\u305f\u3060\u3057 Read-Only\n}\n\n// \u3059\u3079\u3066\u8868\u793a(Java-Style \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nQVectorIterator<int> it(v);\nwhile (it.hasNext())\n    cout << it.next() << endl; // Java-Style \u306a\u306e\u3067\u6ce8\u610f\uff01\n\n// \u3059\u3079\u3066\u8868\u793a(STL-Style \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nfor (QVector<int>::iterator it = v.begin(); it != v.end(); ++it){\n    cout << *it << endl; // \u5f93\u6765\u306e\u65b9\u5f0f\u3067\u3082\n}\n\n\nJava-Style \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306e\u65b9\u304c\u500b\u4eba\u7684\u306b\u306f\u898b\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057 QVectorIterator \u306f const \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067 Read-Only \u306a\u306e\u3067\u5024\u306e\u5909\u66f4\u53ef\u80fd\u306a\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f QMutableVectorIterator<T> \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u5024\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f setValue(const T & value)  \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u306f Qt \u3067 foreach \u30de\u30af\u30ed\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3082\u3063\u3068\u898b\u3084\u3059\u3044\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\u3002\n\nqvector.cpp\nforeach (const int &i, v)\n{\n  cout << i << endl;\n}\n\n\n\u3057\u304b\u3057\u30de\u30af\u30ed\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u4f8b\u3048\u3070 QPair<int, int> \u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u578b\u306b\u30ab\u30f3\u30de\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u3002\u8a73\u3057\u304f\u306f The foreach Keyword \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002)\n\u307e\u305f\u3001 C++11 \u3067\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\n\nqvector.cpp\n// C++11 Only!\nfor (const int &i : v){\n    cout << i << endl;\n}\n\n\n\u3053\u308c\u306b\u9650\u3089\u305a\u3001 C++11 \u3092\u4f7f\u7528\u3059\u308b\u969b\u3001\u65b0\u305f\u306a\u30c6\u30af\u30cb\u30c3\u30af\u304c\u5e7e\u3064\u304b\u4f7f\u3048\u308b\u3067\u3001\u8208\u5473\u304c\u3042\u308b\u65b9\u306f C++0x in Qt \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001C++11 \u5f62\u5f0f\u306e for \u306f\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u306a\u3044\u304c\u3001 Qt \u306e\u30de\u30af\u30ed\u306e foreach \u306f\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u308b\u3068\u3044\u3046\u76f8\u9055\u70b9\u3082\u3042\u308a\u307e\u3059\u3002for \u30eb\u30fc\u30d7\u3067\u306f\u8981\u7d20\u304c\u8ffd\u52a0\u3084\u524a\u9664\u304c\u884c\u308f\u308c\u305f\u6642\u306e\u6319\u52d5\u304c\u4e88\u6e2c\u3067\u304d\u306a\u3044\u308f\u3051\u3067\u3059\u3002\u3053\u308c\u3082\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30e6\u30cb\u30fc\u30af\u306a\u95a2\u6570\u305f\u3061\n\u3067\u306f\u3001STL \u306e vector \u306b\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002QVector \u306f vector \u3067\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\nqvector.cpp\nv.push_back(1); // 1 \u3092\u5148\u982d\u306b\u8ffd\u52a0 (STL \u3063\u307d\u3044\u66f8\u304d\u65b9)\nv.prepend(1); // 2 \u3092\u5148\u982d\u306b\u8ffd\u52a0 (Qt \u3063\u307d\u3044\u66f8\u304d\u65b9)\n\n\n\u9023\u7d50\u30ea\u30b9\u30c8\u3067\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u305f\u3081\u3001\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u306f\u30c7\u30fc\u30bf\u91cf\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u91cd\u304f\u306a\u308a\u307e\u3059\u3002(\u5168\u30c7\u30fc\u30bf\u3092\u305a\u3089\u3057\u3066\u3044\u308b\u305f\u3081)\u3002\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u6642\u9593\u8a08\u7b97\u91cf\u306f O(N) \u3067\u3059\u304c\u3001QList<T> \u306f O(1) \u3067\u3059\u3002\u591a\u304f\u306e\u6a5f\u80fd\u304c QList<T> \u306b\u3082\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5dee\u7570\u304c\u30c7\u30fc\u30bf\u69cb\u9020\u4ee5\u5916\u306b\u307b\u307c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u8003\u616e\u3059\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4efb\u610f\u306e\u30a4\u30f3\u30c7\u30a3\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306e\u524a\u9664\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\nqvector.cpp\nv.remove(1); // 2\u756a\u76ee\u306e\u8981\u7d20\u3092\u524a\u9664\n\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\nvector.cpp\nv.erase(v.begin() + 1); // \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067\u524a\u9664\n\n\n\u307e\u305f\u4efb\u610f\u306e\u5024\u306e\u8981\u7d20\u3092\u5168\u3066\u524a\u9664\u3067\u304d\u307e\u3059\u3002\n\nqvector.cpp\nv << 1 << 1 << 2 << 3;\nv.removeAll(1); // 1 \u3092\u5168\u3066\u524a\u9664\n\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\nvector.cpp\nv.push_back(1);\nv.push_back(1);\nv.push_back(2);\nv.push_back(3);\nv.erase(remove(v.begin(), v.end(), 1), v.end()); // \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067\u524a\u9664\n\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u5168\u3066 QList<T> \u3068\u306e\u4e92\u63db\u6027\u306e\u305f\u3081\u306b\u5b9f\u88c5\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u3046\u3044\u3063\u305f\u51e6\u7406\u3092\u6ca2\u5c71\u884c\u3046\u5834\u5408\u306f QList<T> \u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u5024\u306e\u691c\u7d22\u3082\u5bb9\u6613\u306b\u884c\u3048\u307e\u3059\u3002(\u623b\u308a\u5024\u306f\u30a4\u30f3\u30c7\u30a3\u30c3\u30af\u30b9\u3002\u307e\u305f\u3001\u5358\u306b\u5b58\u5728\u306e\u78ba\u8a8d\u306a\u3089 contains(const T & value) \u304c\u4fbf\u5229\u3067\u3059\u3002)\n\nqvector.cpp\nv << 1 << 1 << 2 << 3;\n\ncout << v.indexOf(1) << endl; // \u51fa\u529b: 0\ncout << v.indexOf(2) << endl; // \u51fa\u529b: 2\ncout << v.indexOf(3) << endl; // \u51fa\u529b: 3\n\ncout << v.indexOf(4) << endl; // \u51fa\u529b: -1\n\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\nvector.cpp\nv.push_back(1);\nv.push_back(1);\nv.push_back(2);\nv.push_back(3);\n\nvector<int>::iterator it = find(v.begin(), v.end(), 1); // 1\u3092\u691c\u7d22\n\nif ( it == v.end() ){\n    cout << -1 << endl;\n} else {\n    cout << static_cast<int>(it - v.begin()) << endl;\n}\n\n\n\u3068\u3093\u3067\u3082\u306a\u3044\u3067\u3059\u306d\uff01 Qt \u306e\u6709\u308a\u96e3\u307f\u3092\u611f\u3058\u307e\u3059\u3002\n\u307e\u305f\u3001 QVector \u306f fromStdVector(const std::vector & vector) \u306b\u3088\u3066 STL \u306e vector \u304b\u3089\u5909\u63db\u3067\u304d\u307e\u3059\u3057\u3001 toStdVector() \u3067\u9006\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u66f8\u3044\u3066\u3044\u3066\u601d\u3063\u305f\u306e\u306f\u3001\u3084\u306f\u308a Qt \u306f\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3057\u304b\u3082\u60c5\u5831\u304c\u5168\u4f53\u7684\u306b\u53e4\u3044\u3068\u3044\u3046\u4e8c\u91cd\u82e6\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65b9\u3067 Qt \u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u975e\u5e38\u306b\u3088\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u82f1\u8a9e\u304c\u308f\u304b\u308b\u4eba\u3001\u62b5\u6297\u304c\u306a\u3044\u4eba\u306f\u307b\u3068\u3093\u3069\u82f1\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u958b\u767a\u3057\u306a\u3055\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u3084\u306f\u308a\u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u3068\u3044\u3046\u306e\u306f Qt \u306e\u5927\u304d\u306a\u969c\u58c1\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u79c1\u3082\u305d\u3046\u3067\u3057\u305f\u3002\u306a\u306e\u3067\u3001\u3053\u3046\u3044\u3063\u305f Qt Advent Calendar 2014 \u3068\u8a00\u3063\u305f\u60c5\u5831\u3092\u7a4d\u6975\u7684\u306b\u767a\u4fe1\u3059\u308b\u6a5f\u4f1a\u304c\u8a2d\u3051\u3066\u3082\u3089\u3063\u3066\u672c\u5f53\u306b\u826f\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e Qt Advent Calendar 2014 \u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3063\u305f@task_jp \u3055\u3093\u3001\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u3055\u3093\u3001\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n# \u306f\u3058\u3081\u306b\n[@luyikei](https://twitter.com/luyikei) \u3067\u3059\u3002 Qt \u304c\u5927\u597d\u304d\u306a\u4eba\u9593\u3067\u3059\u3002\u6700\u8fd1\u3042\u307e\u308a\u3084\u3063\u3066\u306a\u3044\u306e\u3067\u3059\u304c... \n[Qt Advent Calendar 2014](http://qiita.com/advent-calendar/2014/qt) \u3082\u6700\u7d42\u65e5\u3067\u3059\u306d\u3002\u5c11\u3057\u5bc2\u3057\u304f\u306a\u308a\u307e\u3059\u306d\u3002\u4eca\u65e5\u306f\u30af\u30ea\u30b9\u30de\u30b9\u3067\u3059\u3002\u7686\u3055\u3093\u697d\u3057\u3093\u3067\u3044\u307e\u3059\u304b\uff1f\uff01\u4eca\u65e5\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3059\u3002\u5143\u3005\u306f\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092 Qt \u3067\u3084\u308b\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u8003\u3048\u3066\u307f\u308b\u3068\u591a\u304f\u306e\u90e8\u5206\u304c Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u3088\u3063\u3066\u6539\u5584\u3055\u308c\u308b\u3068\u601d\u3063\u305f\u306e\u3067\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306b\u7279\u5316\u3057\u305f\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\u591a\u5206\u5c11\u3057\u3084\u3063\u3066\u3044\u308b\u7686\u3055\u3093\u306a\u3089\u3070\u65e2\u77e5\u306e\u4e8b\u9805\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3088\u308d\u3057\u304f\u304a\u306d\u304c\u3044\u3057\u307e\u3059\u3002\n\n\u591a\u304f\u306e\u90e8\u5206\u306f [Container Classes](http://doc.qt.io/qt-5/containers.html) \u306e\u53c2\u8003\u3067\u3059\u3002\u8208\u5473\u304c\u3042\u308c\u3070\u305d\u3061\u3089\u3082\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\nQt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306f\u591a\u304f\u304c C++ \u306e STL \u306e\u3082\u306e\u3092\u767a\u5c55\u3055\u305b\u305f\u3082\u306e\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001 STL \u306e [ vector\\<T\\> ](https://www.sgi.com/tech/stl/Vector.html) \u306f Qt \u306e [QVector\\<T\\>](http://doc.qt.io/qt-5/qvector.html) \u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\u3067\u306f\u4f55\u6545\u3001 Qt \u3067\u72ec\u81ea\u306b\u518d\u8a2d\u8a08\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u308c\u306f\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3042\u308b\u3088\u3046\u306b\n\n> These container classes are designed to be lighter, safer, and easier to use than the STL containers. If you are unfamiliar with the STL, or prefer to do things the \"Qt way\", you can use these classes instead of the STL classes.\n\n\u3044\u3044\u3053\u3068\u305a\u304f\u3081\u3067\u3059\u306d\uff01\u3084\u306f\u308a Qt \u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u306a\u3089\u3070\u591a\u304f\u306e\u5834\u5408\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3059\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3067\u306f\u65e9\u901f\u4e00\u3064\u305a\u3064\u898b\u3066\u884c\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u4eca\u56de\u306f Qt \u306e\u30b3\u30f3\u30c6\u30ca\u30af\u30e9\u30b9\u306e\u697d\u3057\u3055\u3092\u5b9f\u611f\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u305f\u3081\u3001[QVector\\<T\\>](http://doc.qt.io/qt-5/qvector.html) \u3092\u4f8b\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30b9\u306b\u3064\u3044\u3066\u8a73\u3057\u304f\u306f [Container Classes](http://doc.qt.io/qt-5/containers.html) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## QVector\\<T\\> \u3092\u4f8b\u306b\n\n\u3053\u308c\u306f\u540d\u79f0\u306e\u901a\u308a\u30d9\u30af\u30c8\u30eb\u578b\u3067\u5024\u306e\u7d44\u3092\u4fdd\u5b58\u3059\u308b\u30af\u30e9\u30b9\u3067\u3059\u306d\u3002STL \u306e [ vector\\<T\\> ](https://www.sgi.com/tech/stl/Vector.html) \u306f\u591a\u304f\u306e\u5834\u5408\u306f\u52d5\u7684\u914d\u5217\u3068\u3057\u3066\u4f7f\u308f\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070 STL \u306e [ vector\\<T\\> ](https://www.sgi.com/tech/stl/Vector.html) \u306f\u3053\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u307e\u3059\u3002\n\n```cpp:vector.cpp\nvector<int> v;\nv.push_back(1); // 1 \u3092\u8ffd\u52a0\ncout << v[0] << endl; //\u8868\u793a\n\nv.push_back(2);\nv.push_back(3);\n// \u3059\u3079\u3066\u8868\u793a(\u6dfb\u5b57)\nfor (int i=0; i < v.size(); ++i){\n    cout << v[i] << endl;\n}\n\n// \u3059\u3079\u3066\u8868\u793a(\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nfor (vector<int>::iterator it = v.begin(); it != v.end(); ++it){\n    cout << *it << endl;\n}\n\n```\n\n\u3073\u307f\u3087\uff5e\u3067\u3059\u306d\u3002[QVector\\<T\\>](http://doc.qt.io/qt-5/qvector.html) \u3092\u4f7f\u3046\u3068\n\n\n```cpp:qvector.cpp\nQVector<int> v;\nv.append(1); // 1 \u3092\u8ffd\u52a0 append \u306e\u307b\u3046\u304c Qt \u3063\u307d\u3044 push_back \u3082\u52ff\u8ad6\u4f7f\u3048\u308b\u3002\ncout << v[0] << endl; //\u8868\u793a\n\nv << 2 << 3; // \u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3092\u3057\u3066\u3044\u308b\u305f\u3081\u8ffd\u52a0\u304c\u697d\u306b\u884c\u3048\u308b\u30022, 3 \u3092\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3002\n```\n\n\u8ffd\u52a0\u3060\u3051\u3067\u3082\u898b\u6804\u3048\u3070\u5168\u304f\u9055\u3044\u307e\u3059\u3002 \n\n### for \u30eb\u30fc\u30d7\u3060\u3051\u3092\u3068\u3063\u3066\u3082\n\nfor \u30eb\u30fc\u30d7\u3067\u5168\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u3082\n\n```cpp:qvector.cpp\n// \u3059\u3079\u3066\u8868\u793a(\u6dfb\u5b57)\nfor (int i=0; i < v.size(); ++i){\n    cout << v.at(i) << endl; // at() \u4f7f\u3046\u3068\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u306a\u3044\u305f\u3081\u3001\u9ad8\u901f\u3002\u305f\u3060\u3057 Read-Only\n}\n\n// \u3059\u3079\u3066\u8868\u793a(Java-Style \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nQVectorIterator<int> it(v);\nwhile (it.hasNext())\n    cout << it.next() << endl; // Java-Style \u306a\u306e\u3067\u6ce8\u610f\uff01\n\n// \u3059\u3079\u3066\u8868\u793a(STL-Style \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc)\nfor (QVector<int>::iterator it = v.begin(); it != v.end(); ++it){\n    cout << *it << endl; // \u5f93\u6765\u306e\u65b9\u5f0f\u3067\u3082\n}\n```\n\nJava-Style \u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306e\u65b9\u304c\u500b\u4eba\u7684\u306b\u306f\u898b\u3084\u3059\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3057\u304b\u3057 [QVectorIterator](http://doc.qt.io/qt-5/qvectoriterator.html) \u306f const \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067 Read-Only \u306a\u306e\u3067\u5024\u306e\u5909\u66f4\u53ef\u80fd\u306a\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u4f7f\u7528\u3057\u305f\u3044\u5834\u5408\u306f [QMutableVectorIterator\\<T\\>](http://doc.qt.io/qt-5/qmutablevectoriterator.html) \u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u305d\u3057\u3066\u5024\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u306f [setValue(const T & value) ](http://doc.qt.io/qt-5/qmutablevectoriterator.html#setValue) \u95a2\u6570\u3092\u4f7f\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5b9f\u306f Qt \u3067 foreach **\u30de\u30af\u30ed**\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3082\u3063\u3068\u898b\u3084\u3059\u3044\u66f8\u304d\u65b9\u304c\u3067\u304d\u307e\u3059\u3002\n\n```cpp:qvector.cpp\nforeach (const int &i, v)\n{\n  cout << i << endl;\n}\n```\n\n\u3057\u304b\u3057\u30de\u30af\u30ed\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002(\u4f8b\u3048\u3070 QPair\\<int, int\\> \u306e\u3088\u3046\u306b\u30c7\u30fc\u30bf\u578b\u306b\u30ab\u30f3\u30de\u304c\u5165\u3063\u3066\u3044\u308b\u5834\u5408\u3002\u8a73\u3057\u304f\u306f [The foreach Keyword](http://doc.qt.io/qt-5/containers.html#the-foreach-keyword) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002)\n\u307e\u305f\u3001 C++11 \u3067\u4f3c\u305f\u3088\u3046\u306a\u6a5f\u80fd\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u306e\u3067\n\n```cpp:qvector.cpp\n// C++11 Only!\nfor (const int &i : v){\n    cout << i << endl;\n}\n```\n\n\u3053\u308c\u306b\u9650\u3089\u305a\u3001 C++11 \u3092\u4f7f\u7528\u3059\u308b\u969b\u3001\u65b0\u305f\u306a\u30c6\u30af\u30cb\u30c3\u30af\u304c\u5e7e\u3064\u304b\u4f7f\u3048\u308b\u3067\u3001\u8208\u5473\u304c\u3042\u308b\u65b9\u306f [C++0x in Qt](http://blog.qt.digia.com/blog/2011/05/26/cpp0x-in-qt/) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u307e\u305f\u3001C++11 \u5f62\u5f0f\u306e for \u306f\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u306a\u3044\u304c\u3001 Qt \u306e\u30de\u30af\u30ed\u306e foreach \u306f\u30c7\u30a3\u30fc\u30d7\u30b3\u30d4\u30fc\u304c\u884c\u308f\u308c\u308b\u3068\u3044\u3046\u76f8\u9055\u70b9\u3082\u3042\u308a\u307e\u3059\u3002for \u30eb\u30fc\u30d7\u3067\u306f\u8981\u7d20\u304c\u8ffd\u52a0\u3084\u524a\u9664\u304c\u884c\u308f\u308c\u305f\u6642\u306e\u6319\u52d5\u304c\u4e88\u6e2c\u3067\u304d\u306a\u3044\u308f\u3051\u3067\u3059\u3002\u3053\u308c\u3082\u4e0a\u8a18\u306e\u30ea\u30f3\u30af\u3067\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n### \u30e6\u30cb\u30fc\u30af\u306a\u95a2\u6570\u305f\u3061\n\n\u3067\u306f\u3001STL \u306e vector \u306b\u306f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002QVector \u306f vector \u3067\u3042\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u3001\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u95a2\u6570\u304c\u3042\u308a\u307e\u3059\u3002\n\n```cpp:qvector.cpp\nv.push_back(1); // 1 \u3092\u5148\u982d\u306b\u8ffd\u52a0 (STL \u3063\u307d\u3044\u66f8\u304d\u65b9)\nv.prepend(1); // 2 \u3092\u5148\u982d\u306b\u8ffd\u52a0 (Qt \u3063\u307d\u3044\u66f8\u304d\u65b9)\n```\n\n\u9023\u7d50\u30ea\u30b9\u30c8\u3067\u5b9f\u88c5\u3055\u308c\u3066\u306a\u3044\u305f\u3081\u3001\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u306f\u30c7\u30fc\u30bf\u91cf\u304c\u591a\u3051\u308c\u3070\u591a\u3044\u307b\u3069\u91cd\u304f\u306a\u308a\u307e\u3059\u3002(\u5168\u30c7\u30fc\u30bf\u3092\u305a\u3089\u3057\u3066\u3044\u308b\u305f\u3081)\u3002\u5148\u982d\u306b\u8ffd\u52a0\u3059\u308b\u5834\u5408\u306f\u6642\u9593\u8a08\u7b97\u91cf\u306f O(N) \u3067\u3059\u304c\u3001[QList\\<T\\>](http://doc.qt.io/qt-5/qlist.html) \u306f O(1) \u3067\u3059\u3002\u591a\u304f\u306e\u6a5f\u80fd\u304c [QList\\<T\\>](http://doc.qt.io/qt-5/qlist.html) \u306b\u3082\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5dee\u7570\u304c\u30c7\u30fc\u30bf\u69cb\u9020\u4ee5\u5916\u306b\u307b\u307c\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f7f\u7528\u3059\u308b\u3068\u304d\u306f\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u8003\u616e\u3059\u308b\u3079\u304d\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u4efb\u610f\u306e\u30a4\u30f3\u30c7\u30a3\u30c3\u30af\u30b9\u306e\u8981\u7d20\u306e\u524a\u9664\u3082\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n```cpp:qvector.cpp\nv.remove(1); // 2\u756a\u76ee\u306e\u8981\u7d20\u3092\u524a\u9664\n```\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\n```cpp:vector.cpp\nv.erase(v.begin() + 1); // \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067\u524a\u9664\n```\n\n\u307e\u305f\u4efb\u610f\u306e\u5024\u306e\u8981\u7d20\u3092\u5168\u3066\u524a\u9664\u3067\u304d\u307e\u3059\u3002\n\n```cpp:qvector.cpp\nv << 1 << 1 << 2 << 3;\nv.removeAll(1); // 1 \u3092\u5168\u3066\u524a\u9664\n```\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\n```cpp:vector.cpp\nv.push_back(1);\nv.push_back(1);\nv.push_back(2);\nv.push_back(3);\nv.erase(remove(v.begin(), v.end(), 1), v.end()); // \u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3067\u524a\u9664\n```\n\n\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u5168\u3066 [QList\\<T\\>](http://doc.qt.io/qt-5/qlist.html) \u3068\u306e\u4e92\u63db\u6027\u306e\u305f\u3081\u306b\u5b9f\u88c5\u3055\u308c\u305f\u3082\u306e\u3067\u3042\u308b\u305f\u3081\u3001\u3053\u3046\u3044\u3063\u305f\u51e6\u7406\u3092\u6ca2\u5c71\u884c\u3046\u5834\u5408\u306f [QList\\<T\\>](http://doc.qt.io/qt-5/qlist.html) \u3092\u4f7f\u7528\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5024\u306e\u691c\u7d22\u3082\u5bb9\u6613\u306b\u884c\u3048\u307e\u3059\u3002(\u623b\u308a\u5024\u306f\u30a4\u30f3\u30c7\u30a3\u30c3\u30af\u30b9\u3002\u307e\u305f\u3001\u5358\u306b\u5b58\u5728\u306e\u78ba\u8a8d\u306a\u3089 [contains(const T & value)](http://doc.qt.io/qt-5/qvector.html#contains) \u304c\u4fbf\u5229\u3067\u3059\u3002)\n\n```cpp:qvector.cpp\nv << 1 << 1 << 2 << 3;\n\ncout << v.indexOf(1) << endl; // \u51fa\u529b: 0\ncout << v.indexOf(2) << endl; // \u51fa\u529b: 2\ncout << v.indexOf(3) << endl; // \u51fa\u529b: 3\n\ncout << v.indexOf(4) << endl; // \u51fa\u529b: -1\n```\n\n\u3053\u308c\u3092 STL \u3067\u518d\u73fe\u3059\u308b\u3068\u3053\u3046\u306a\u308a\u307e\u3059\n\n```cpp:vector.cpp\nv.push_back(1);\nv.push_back(1);\nv.push_back(2);\nv.push_back(3);\n\nvector<int>::iterator it = find(v.begin(), v.end(), 1); // 1\u3092\u691c\u7d22\n\nif ( it == v.end() ){\n    cout << -1 << endl;\n} else {\n    cout << static_cast<int>(it - v.begin()) << endl;\n}\n```\n\n\u3068\u3093\u3067\u3082\u306a\u3044\u3067\u3059\u306d\uff01 Qt \u306e\u6709\u308a\u96e3\u307f\u3092\u611f\u3058\u307e\u3059\u3002\n\n\u307e\u305f\u3001 QVector \u306f [fromStdVector(const std::vector<T> & vector)](http://doc.qt.io/qt-5/qvector.html#fromStdVector) \u306b\u3088\u3066 STL \u306e vector \u304b\u3089\u5909\u63db\u3067\u304d\u307e\u3059\u3057\u3001 [toStdVector()](http://doc.qt.io/qt-5/qvector.html#toStdVector) \u3067\u9006\u3082\u3067\u304d\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u66f8\u3044\u3066\u3044\u3066\u601d\u3063\u305f\u306e\u306f\u3001\u3084\u306f\u308a Qt \u306f\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u3057\u304b\u3082\u60c5\u5831\u304c\u5168\u4f53\u7684\u306b\u53e4\u3044\u3068\u3044\u3046\u4e8c\u91cd\u82e6\u306b\u60a9\u307e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4e00\u65b9\u3067 Qt \u306e\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u975e\u5e38\u306b\u3088\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u82f1\u8a9e\u304c\u308f\u304b\u308b\u4eba\u3001\u62b5\u6297\u304c\u306a\u3044\u4eba\u306f\u307b\u3068\u3093\u3069\u82f1\u8a9e\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u958b\u767a\u3057\u306a\u3055\u3063\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u3084\u306f\u308a\u521d\u5fc3\u8005\u306b\u3068\u3063\u3066\u65e5\u672c\u8a9e\u306e\u60c5\u5831\u304c\u5c11\u306a\u3044\u3068\u3044\u3046\u306e\u306f Qt \u306e\u5927\u304d\u306a\u969c\u58c1\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3057\u3001\u79c1\u3082\u305d\u3046\u3067\u3057\u305f\u3002\u306a\u306e\u3067\u3001\u3053\u3046\u3044\u3063\u305f [Qt Advent Calendar 2014](http://qiita.com/advent-calendar/2014/qt) \u3068\u8a00\u3063\u305f\u60c5\u5831\u3092\u7a4d\u6975\u7684\u306b\u767a\u4fe1\u3059\u308b\u6a5f\u4f1a\u304c\u8a2d\u3051\u3066\u3082\u3089\u3063\u3066\u672c\u5f53\u306b\u826f\u304b\u3063\u305f\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u306e [Qt Advent Calendar 2014](http://qiita.com/advent-calendar/2014/qt) \u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3063\u305f[@task_jp](https://twitter.com/task_jp) \u3055\u3093\u3001\u6295\u7a3f\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u7686\u3055\u3093\u3001\u672c\u5f53\u306b\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\n   \n", "tags": ["Qt", "C++"]}