{"context": "Spark\u306eMLlib\u306fML\u306b\u79fb\u884c\u3057\u3064\u3064\u3042\u308a\u307e\u3059\u3002Spark2.0\u304b\u3089\u306fRDD\u30d9\u30fc\u30b9\u306eMLlib API\u306f\u4fdd\u5b88\u306e\u307f\u306b\u306a\u308a\u3001\u4eca\u5f8c\u306fDataFrame\u30d9\u30fc\u30b9\u306eAPI\u304c\u6a19\u6e96\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\u3053\u3053\u3067\u306fPySpark\u3067ML API\u3092\u4f7f\u3044\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\n\u203bDataFrame\u306fPandas\u306eDataFrame\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\n\n\u65b0\u805e\uff11\uff10\u7d19\u306e\u7d19\u9762\u306e\u50be\u5411\u5206\u6790\n\u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u5148\u306b\u3042\u308b\u65b0\u805e10\u7d19\u306e\u30cb\u30e5\u30fc\u30b9\u3001\u30d3\u30b8\u30cd\u30b9\u3001\u30b9\u30dd\u30fc\u30c4\u306e\u5145\u5b9f\u5ea6\u306e\u8a55\u4fa1\u304b\u3089\u7d19\u9762\u306e\u50be\u5411\u3092\u5206\u6790\u3059\u308b\u3001\u3068\u3044\u3046\u4f8b\u984c\u3092Spark\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://ifs.nog.cc/gucchi24.hp.infoseek.co.jp/SHUSEIEX.htm\n\n\u30c7\u30fc\u30bf\n\u65b0\u805e10\u7d19\u306b\u3064\u3044\u3066\u3001\u8a18\u4e8b\u306e\u5185\u5bb9\u3092\u30cb\u30e5\u30fc\u30b9\u30fb\u30d3\u30b8\u30cd\u30b9\u30fb\u30b9\u30dd\u30fc\u30c4\u306b\u3064\u3044\u3066\u305d\u306e\u5145\u5b9f\u5ea6\u309210\u70b9\u8a55\u4fa1\u3067\u8abf\u67fb\u3057\u305f\u3001\u3068\u306e\u3053\u3068\u3002\u30b9\u30b1\u30fc\u30eb\u306f0\u304b\u308910\u3067\u5927\u5909\u5145\u5b9f\u3057\u3066\u3044\u308b\u304c10,\u5145\u5b9f\u3057\u3066\u3044\u306a\u3044\u304c0\u3002\n\nnews.csv\nno,\u30cb\u30e5\u30fc\u30b9,\u30d3\u30b8\u30cd\u30b9,\u30b9\u30dd\u30fc\u30c4\n1,8,9,4\n2,2,5,7\n3,8,5,6\n4,3,5,4\n5,7,4,9\n6,4,3,4\n7,3,6,8\n8,6,8,2\n9,5,4,5\n10,6,7,6\n\n\n\n\u30b3\u30fc\u30c9\n\nSparkSession\u521d\u671f\u5316\n\u4ee5\u524d\u306fSparkContext\u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u5b9a\u756a\u3067\u3057\u305f\u304c\u30012.0\u3067\u306fSparkSession\u3092\u4f7f\u3044\u307e\u3059\u3002SQLContext, HiveContext\u306fSparkSession\u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f\u3002\nfrom pyspark.sql import SparkSession\nspark = (SparkSession\n         .builder\n         .appName(\"news\")\n         .enableHiveSupport()\n         .getOrCreate())\n\n\n\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\nspark.read.csv\u3067CSV\u3092\u8aad\u307f\u8fbc\u307fDataFrame\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\nex1.py\ndf = spark.read.csv(filename, header=True, inferSchema=True, mode=\"DROPMALFORMED\", encoding='UTF-8')\nprint(\"==== \u751f\u30c7\u30fc\u30bf ====\")\ndf.show(truncate=False)\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u30c6\u30fc\u30d6\u30eb\u304c\u5d29\u308c\u307e\u3059\u3002\u5b57\u5e45\u304c\u8003\u616e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n$ export PYTHONIOENCODING=utf8\n$ spark-submit ex1.py\n==== \u751f\u30c7\u30fc\u30bf ====\n+---+----+----+----+\n|no |\u30cb\u30e5\u30fc\u30b9|\u30d3\u30b8\u30cd\u30b9|\u30b9\u30dd\u30fc\u30c4|\n+---+----+----+----+\n|1  |8   |9   |4   |\n|2  |2   |5   |7   |\n|3  |8   |5   |6   |\n|4  |3   |5   |4   |\n|5  |7   |4   |9   |\n|6  |4   |3   |4   |\n|7  |3   |6   |8   |\n|8  |6   |8   |2   |\n|9  |5   |4   |5   |\n|10 |6   |7   |6   |\n+---+----+----+----+\n\n\n\u30c7\u30fc\u30bf\u5f62\u5f0f\u5909\u63db\nPCA()\u306f\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u306e\u5909\u91cf\u3092\u8981\u6c42\u3057\u307e\u3059\u3002VectorAssembler\u3092\u4f7f\u3063\u3066\u3001[\u30cb\u30e5\u30fc\u30b9, \u30d3\u30b8\u30cd\u30b9, \u30b9\u30dd\u30fc\u30c4]\u3092\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3001\u5909\u91cf\u30ab\u30e9\u30e0\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002.transform(df)\u306f\u65b0\u305f\u306aDataFrame\u3092\u4f5c\u308a\u307e\u3059\u3002\nfrom pyspark.ml.feature import VectorAssembler\n\nassembler = VectorAssembler(inputCols=df.columns[1:], outputCol=\"\u5909\u91cf\")\nfeature_vectors = assembler.transform(df)\nfeature_vectors.show(truncate=False)\n\n\n\u5b9f\u884c\u7d50\u679c\n\u5909\u91cf\u30ab\u30e9\u30e0\u306b\u30d9\u30af\u30c8\u30eb\u304c\u8ffd\u52a0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n+---+----+----+----+-------------+\n| no|\u30cb\u30e5\u30fc\u30b9|\u30d3\u30b8\u30cd\u30b9|\u30b9\u30dd\u30fc\u30c4|           \u5909\u91cf|\n+---+----+----+----+-------------+\n|  1|   8|   9|   4|[8.0,9.0,4.0]|\n|  2|   2|   5|   7|[2.0,5.0,7.0]|\n|  3|   8|   5|   6|[8.0,5.0,6.0]|\n|  4|   3|   5|   4|[3.0,5.0,4.0]|\n|  5|   7|   4|   9|[7.0,4.0,9.0]|\n|  6|   4|   3|   4|[4.0,3.0,4.0]|\n|  7|   3|   6|   8|[3.0,6.0,8.0]|\n|  8|   6|   8|   2|[6.0,8.0,2.0]|\n|  9|   5|   4|   5|[5.0,4.0,5.0]|\n| 10|   6|   7|   6|[6.0,7.0,6.0]|\n+---+----+----+----+-------------+\n\n\n\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\n\u30ea\u30f3\u30af\u5148\u306b\u5023\u3044\u3001\u3053\u3053\u3067\u3082\u30c7\u30fc\u30bf\u3092\u6a19\u6e96\u5316\u3057\u3066\u304b\u3089\u8a08\u7b97\u3057\u307e\u3059\u3002\u4e3b\u6210\u5206\u5206\u6790\u3067\u306f\u4e00\u822c\u306b\u6a19\u6e96\u5316\u3057\u3066\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u304c\u826f\u3044\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002ML\u306b\u306fStandardScaler\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u5165\u529b\u306f\u5909\u91cf\u30ab\u30e9\u30e0\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3001\u51fa\u529b\u306f\u6a19\u6e96\u5316\u5909\u91cf\u3068\u3057\u307e\u3059\u3002\u3053\u306eAPI\u306f\u307e\u305a.fit\u306b\u3088\u308a\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u3001\u305d\u3057\u3066.transform\u306b\u3088\u3063\u3066\u518d\u5ea6\u5165\u529b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u5b9f\u969b\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nfrom pyspark.ml.feature import StandardScaler\n\n# step1\nscaler = StandardScaler(inputCol=\"\u5909\u91cf\", outputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", withStd=True, withMean=True)\nscalerModel = scaler.fit(feature_vectors)\n\n# step2\nstd_feature_vectors = scalerModel.transform(feature_vectors)\n\n#\u6a19\u6e96\u5316\u5909\u91cf\u3060\u3051\u8868\u793a\nprint(\"==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\")\nstd_feature_vectors.select(\"\u6a19\u6e96\u5316\u5909\u91cf\").show(truncate=False)\n\n\n\u5b9f\u884c\u7d50\u679c\n\u30ea\u30f3\u30af\u5148\u306e\u8868\u3068\u6bd4\u8f03\u3059\u308b\u3068\u5fae\u5999\u306b\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002StandardScaler\u306f\u4e0d\u504f\u5206\u6563(n-1)\u3092\u7528\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30ea\u30f3\u30af\u5148\u3067\u306f\u6a19\u672c\u5206\u6563(n)\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u3057\u3044\u8a71\u306f\u4ed6\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\n+---------------------------------------------------------------+\n|\u6a19\u6e96\u5316\u5909\u91cf                                                          |\n+---------------------------------------------------------------+\n|[1.3023647131866891,1.7919573407620815,-0.7071067811865476]    |\n|[-1.4884168150705013,-0.3162277660168382,0.7071067811865476]   |\n|[1.3023647131866891,-0.3162277660168382,0.23570226039551587]   |\n|[-1.0232865603609695,-0.3162277660168382,-0.7071067811865476]  |\n|[0.8372344584771575,-0.8432740427115681,1.649915822768611]     |\n|[-0.5581563056514377,-1.370320319406298,-0.7071067811865476]   |\n|[-1.0232865603609695,0.21081851067789167,1.1785113019775793]   |\n|[0.3721042037676257,1.2649110640673515,-1.649915822768611]     |\n|[-0.09302605094190601,-0.8432740427115681,-0.23570226039551587]|\n|[0.3721042037676257,0.7378647873726216,0.23570226039551587]    |\n+---------------------------------------------------------------+\n\n\nPCA\n\u3084\u3063\u3068\u4e3b\u6210\u5206\u5206\u6790API\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u5165\u529b\u306f\u6a19\u6e96\u5316\u5909\u91cf\u3067\u51fa\u529b\u306f\u4e3b\u6210\u5206\u5f97\u70b9\u3067\u3059\u3002\u5148\u307b\u3069\u306eStandardScaler\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u307e\u305a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u3001\u6b21\u306b\u5b9f\u969b\u306e\u8a08\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\u69cb\u7bc9\u3055\u308c\u305f\u30e2\u30c7\u30eb\u304b\u3089\u306f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3001\u5bc4\u4e0e\u7387\u304c\u5f97\u3089\u308c\u307e\u3059\u3002k=3\u306f\u7b2c\u4e09\u4e3b\u6210\u5206\u307e\u3067\u3092\u8a08\u7b97\u3059\u308b\u3068\u3044\u3046\u6307\u793a\u3067\u3059\u3002\u672c\u6765\u306fk\u3092\u5927\u304d\u306a\u5024\u306b\u3057\u3066\u4e00\u5ea6\u8a08\u7b97\u3057\u3001\u5bc4\u4e0e\u7387\u306e\u4e0a\u4f4d\u304b\u3089\u306e\u7d2f\u8a08\u304c80%\u3042\u305f\u308a\u306b\u306a\u308b\u3088\u3046\u306ak\u3092\u9078\u3073\u518d\u5ea6\u8a08\u7b97\u3057\u307e\u3059\u3002\nfrom pyspark.ml.feature import PCA\n\npca = PCA(k=3, inputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", outputCol=\"\u4e3b\u6210\u5206\u5f97\u70b9\")\npcaModel = pca.fit(std_feature_vectors)\n\nprint(\"==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\")\nprint(pcaModel.pc)\n\nprint(\"==== \u5bc4\u4e0e\u7387 ====\")\nprint(pcaModel.explainedVariance)\n\npca_score = pcaModel.transform(std_feature_vectors).select(\"\u4e3b\u6210\u5206\u5f97\u70b9\")\nprint(\"==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\")\npca_score.show(truncate=False)\n\n\n\u5b9f\u884c\u7d50\u679c\n\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u306e\u7d50\u679c\u306f\u3001\u7b2c1\u5217\u76ee\uff08\u5de6\u7aef\u306e\u7e26\u4e00\u5217\uff09\u304c\u7b2c\u4e00\u4e3b\u6210\u5206\u306e\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3001\u540c\u69d8\u306b\uff12\u5217\u76ee\u304c\u7b2c\u4e8c\u4e3b\u6210\u5206\u30013\u5217\u76ee\u304c\u7b2c\u4e09\u4e3b\u6210\u5206\u306b\u306a\u308a\u307e\u3059\u3002\n\u5bc4\u4e0e\u7387\u306f\u3001\u7b2c\u4e00\u4e3b\u6210\u5206\u304c52%, \u7b2c\u4e8c\u4e3b\u6210\u5206\u304c30%\u3001\u7b2c\u4e09\u4e3b\u6210\u5206\u304c17.6%\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7b2c\u4e00\u3068\u7b2c\u4e8c\u306e\u7d2f\u8a08\u304c82%\u3067\u3059\u306e\u3067\u3001\u7b2c\u4e09\u4e3b\u6210\u5206\u306f\u524a\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u5834\u5408k=2\u306b\u3057\u307e\u3059\u3002\n\u56fa\u6709\u5024\u306f\u5f97\u3089\u308c\u307e\u305b\u3093\u304c\u3001\u5bc4\u4e0e\u7387\u306f\u56fa\u6709\u5024/\u56fa\u6709\u5024\u306e\u7dcf\u548c\u3067\u3042\u308b\u304b\u3089\u5927\u6982\u306e\u5834\u5408\u306f\u5bc4\u4e0e\u7387\u3067\u8db3\u308a\u308b\u306f\u305a\u3002\n\u5404\u65b0\u805e\u306e\u4e3b\u6210\u5206\u5f97\u70b9\u306f\u7b2c\u4e00\u5217\u304c\u7b2c\u4e00\u4e3b\u6210\u5206\u3001\u7b2c\u4e8c\u5217\u304c\u7b2c\u4e8c\u4e3b\u6210\u5206\u3001\u7b2c\u4e09\u5217\u304c\u7b2c\u4e09\u4e3b\u6210\u5206\u3067\u3059\u3002\u7b2c\u4e00\u4e3b\u6210\u5206\u306e\u5f97\u70b9\u306e\u7b26\u53f7\u304c\u30ea\u30f3\u30af\u5148\u3068\u9006\u3055\u307e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u304c180\u5ea6\u53cd\u5bfe\u3092\u5411\u3044\u3066\u3044\u308b\u3068\u3044\u3046\u3060\u3051\u3067\u3001\u5206\u6790\u7d50\u679c\u306b\u5f71\u97ff\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4e0d\u504f\u5206\u6563\u30fb\u6a19\u672c\u5206\u6563\u306e\u9055\u3044\u304b\u3089\u5c11\u3057\u5024\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\nDenseMatrix([[-0.53130806,  0.68925233, -0.49258803],\n             [-0.67331251,  0.00933405,  0.73929908],\n             [ 0.51416145,  0.72446125,  0.45912296]])\n==== \u5bc4\u4e0e\u7387 ====\n[0.52355344314,0.300887148322,0.175559408538]\n==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\n+---------------------------------------------------------------+\n|\u4e3b\u6210\u5206\u5f97\u70b9                                                          |\n+---------------------------------------------------------------+\n|[-2.2620712255691466,0.4021126641946994,0.35861418406317674]   |\n|[1.3672950172090064,-0.516574975843834,0.8240383763102186]     |\n|[-0.35784774304549694,1.0654633785914394,-0.7670998522924913]  |\n|[0.3930334607140129,-1.220525792393691,-0.05437714111925901]   |\n|[0.9712806670593661,1.7644947192188811,-0.2783291638335238]    |\n|[0.8556397135650156,-0.9097726336587761,-1.0627843972001996]   |\n|[1.0076787432724863,0.1504509197015279,1.2009982469039933]     |\n|[-1.8977055313059759,-0.9270196509736093,-0.005660728153863093]|\n|[0.4960234396284956,-0.24274673811341405,-0.6858245266064249]  |\n|[-0.5733265415277634,0.43411810927677885,0.47042500192836967]  |\n+---------------------------------------------------------------+\n\n\n\u307e\u3068\u3081\n\u4ee5\u4e0aSpark\u306eML API\u306e\u3046\u3061\u3001DataFrame, PCA, StandardScaler\u3092\u4f7f\u3063\u305f\u4e3b\u6210\u5206\u5206\u6790\u306e\u5b9f\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\n\nPCA\u306e\u5165\u529b\u306f\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u306e\u5909\u91cf\u3001\u51fa\u529b\u306f\u4e3b\u6210\u5206\u5f97\u70b9\nPCA\u30e2\u30c7\u30eb\u4f5c\u308a\u3068\u5b9f\u969b\u306e\u8a08\u7b97\u306e\uff12\u6bb5\u968e\u306b\u306a\u3063\u3066\u3044\u308b\nPCA\u30e2\u30c7\u30eb\u304b\u3089\u306f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3068\u5bc4\u4e0e\u7387\u304c\u5f97\u3089\u308c\u308b\n\u56fa\u6709\u5024\u306f\u5f97\u3089\u308c\u306a\u3044\n\u7b26\u53f7\u306f\u5b9f\u88c5\u4f9d\u5b58\u306a\u306e\u3067\u4ed6\u306e\u5b9f\u88c5\u3068\u6bd4\u8f03\u3057\u3066\u7b26\u53f7\u304c\u9006\u306e\u3053\u3068\u3082\u3042\u308b\n\u5165\u529b\u306e\u6a19\u6e96\u5316\u306b\u306fStandardScaler\u3092\u4f7f\u3046\nStandardScaler\u306f\u4e0d\u504f\u5206\u6563\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n\u65b0\u805e\u306e\u50be\u5411\u306e\u5206\u6790\u306f...\u30ea\u30f3\u30af\u5148\u306e\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044(^^;\n\n\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\npca.py\n# -*- coding: utf-8 -*-\nfrom pyspark.sql import SparkSession\nfrom pyspark.ml.feature import PCA, VectorAssembler, StandardScaler\n\n# Initialize SparkSession\nspark = (SparkSession\n         .builder\n         .appName(\"news\")\n         .enableHiveSupport()\n         .getOrCreate())\n\n# Read raw data\ndf = spark.read.csv('news.csv', header=True, inferSchema=True, mode=\"DROPMALFORMED\", encoding='UTF-8')\n\nprint(\"==== \u751f\u30c7\u30fc\u30bf ====\")\ndf.show(truncate=False)\n\nassembler = VectorAssembler(inputCols=df.columns[1:], outputCol=\"\u5909\u91cf\")\nfeature_vectors = assembler.transform(df)\nfeature_vectors.show()\n\n\nscaler = StandardScaler(inputCol=\"\u5909\u91cf\", outputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", withStd=True, withMean=True)\nscalerModel = scaler.fit(feature_vectors)\nstd_feature_vectors = scalerModel.transform(feature_vectors)\n\nprint(\"==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\")\nstd_feature_vectors.select(\"\u6a19\u6e96\u5316\u5909\u91cf\").show(truncate=False)\n\n# build PCA model\npca = PCA(k=3, inputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", outputCol=\"\u4e3b\u6210\u5206\u5f97\u70b9\")\npcaModel = pca.fit(std_feature_vectors)\n\nprint(\"==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\")\nprint(pcaModel.pc)\n\nprint(\"==== \u5bc4\u4e0e\u7387 ====\")\nprint(pcaModel.explainedVariance)\n\npca_score = pcaModel.transform(std_feature_vectors).select(\"\u4e3b\u6210\u5206\u5f97\u70b9\")\nprint(\"==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\")\n\npca_score.show(truncate=False)\n\n\nSpark\u306eMLlib\u306fML\u306b\u79fb\u884c\u3057\u3064\u3064\u3042\u308a\u307e\u3059\u3002Spark2.0\u304b\u3089\u306fRDD\u30d9\u30fc\u30b9\u306eMLlib API\u306f\u4fdd\u5b88\u306e\u307f\u306b\u306a\u308a\u3001\u4eca\u5f8c\u306fDataFrame\u30d9\u30fc\u30b9\u306eAPI\u304c\u6a19\u6e96\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\u3053\u3053\u3067\u306fPySpark\u3067ML API\u3092\u4f7f\u3044\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u884c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u203bDataFrame\u306fPandas\u306eDataFrame\u3068\u306f\u7570\u306a\u308a\u307e\u3059\u3002\n\n# \u65b0\u805e\uff11\uff10\u7d19\u306e\u7d19\u9762\u306e\u50be\u5411\u5206\u6790\n\n\u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u5148\u306b\u3042\u308b\u65b0\u805e10\u7d19\u306e\u30cb\u30e5\u30fc\u30b9\u3001\u30d3\u30b8\u30cd\u30b9\u3001\u30b9\u30dd\u30fc\u30c4\u306e\u5145\u5b9f\u5ea6\u306e\u8a55\u4fa1\u304b\u3089\u7d19\u9762\u306e\u50be\u5411\u3092\u5206\u6790\u3059\u308b\u3001\u3068\u3044\u3046\u4f8b\u984c\u3092Spark\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\nhttp://ifs.nog.cc/gucchi24.hp.infoseek.co.jp/SHUSEIEX.htm\n\n# \u30c7\u30fc\u30bf\n\n\u65b0\u805e10\u7d19\u306b\u3064\u3044\u3066\u3001\u8a18\u4e8b\u306e\u5185\u5bb9\u3092\u30cb\u30e5\u30fc\u30b9\u30fb\u30d3\u30b8\u30cd\u30b9\u30fb\u30b9\u30dd\u30fc\u30c4\u306b\u3064\u3044\u3066\u305d\u306e\u5145\u5b9f\u5ea6\u309210\u70b9\u8a55\u4fa1\u3067\u8abf\u67fb\u3057\u305f\u3001\u3068\u306e\u3053\u3068\u3002\u30b9\u30b1\u30fc\u30eb\u306f0\u304b\u308910\u3067\u5927\u5909\u5145\u5b9f\u3057\u3066\u3044\u308b\u304c10,\u5145\u5b9f\u3057\u3066\u3044\u306a\u3044\u304c0\u3002\n\n```csv:news.csv\nno,\u30cb\u30e5\u30fc\u30b9,\u30d3\u30b8\u30cd\u30b9,\u30b9\u30dd\u30fc\u30c4\n1,8,9,4\n2,2,5,7\n3,8,5,6\n4,3,5,4\n5,7,4,9\n6,4,3,4\n7,3,6,8\n8,6,8,2\n9,5,4,5\n10,6,7,6\n```\n\n# \u30b3\u30fc\u30c9\n## SparkSession\u521d\u671f\u5316\n\u4ee5\u524d\u306f`SparkContext`\u304b\u3089\u59cb\u3081\u308b\u306e\u304c\u5b9a\u756a\u3067\u3057\u305f\u304c\u30012.0\u3067\u306f`SparkSession`\u3092\u4f7f\u3044\u307e\u3059\u3002`SQLContext`, `HiveContext`\u306f`SparkSession`\u306b\u7d71\u5408\u3055\u308c\u307e\u3057\u305f\u3002\n\n```\nfrom pyspark.sql import SparkSession\nspark = (SparkSession\n         .builder\n         .appName(\"news\")\n         .enableHiveSupport()\n         .getOrCreate())\n```\n\n## \u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\n`spark.read.csv`\u3067CSV\u3092\u8aad\u307f\u8fbc\u307fDataFrame\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n```py:ex1.py\ndf = spark.read.csv(filename, header=True, inferSchema=True, mode=\"DROPMALFORMED\", encoding='UTF-8')\nprint(\"==== \u751f\u30c7\u30fc\u30bf ====\")\ndf.show(truncate=False)\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\n\u65e5\u672c\u8a9e\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u30c6\u30fc\u30d6\u30eb\u304c\u5d29\u308c\u307e\u3059\u3002\u5b57\u5e45\u304c\u8003\u616e\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\n```bash\n$ export PYTHONIOENCODING=utf8\n$ spark-submit ex1.py\n==== \u751f\u30c7\u30fc\u30bf ====\n+---+----+----+----+\n|no |\u30cb\u30e5\u30fc\u30b9|\u30d3\u30b8\u30cd\u30b9|\u30b9\u30dd\u30fc\u30c4|\n+---+----+----+----+\n|1  |8   |9   |4   |\n|2  |2   |5   |7   |\n|3  |8   |5   |6   |\n|4  |3   |5   |4   |\n|5  |7   |4   |9   |\n|6  |4   |3   |4   |\n|7  |3   |6   |8   |\n|8  |6   |8   |2   |\n|9  |5   |4   |5   |\n|10 |6   |7   |6   |\n+---+----+----+----+\n```\n\n## \u30c7\u30fc\u30bf\u5f62\u5f0f\u5909\u63db\nPCA()\u306f\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u306e\u5909\u91cf\u3092\u8981\u6c42\u3057\u307e\u3059\u3002`VectorAssembler`\u3092\u4f7f\u3063\u3066\u3001[\u30cb\u30e5\u30fc\u30b9, \u30d3\u30b8\u30cd\u30b9, \u30b9\u30dd\u30fc\u30c4]\u3092\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3001`\u5909\u91cf`\u30ab\u30e9\u30e0\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002`.transform(df)`\u306f\u65b0\u305f\u306aDataFrame\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```\nfrom pyspark.ml.feature import VectorAssembler\n\nassembler = VectorAssembler(inputCols=df.columns[1:], outputCol=\"\u5909\u91cf\")\nfeature_vectors = assembler.transform(df)\nfeature_vectors.show(truncate=False)\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\n`\u5909\u91cf`\u30ab\u30e9\u30e0\u306b\u30d9\u30af\u30c8\u30eb\u304c\u8ffd\u52a0\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```bash\n+---+----+----+----+-------------+\n| no|\u30cb\u30e5\u30fc\u30b9|\u30d3\u30b8\u30cd\u30b9|\u30b9\u30dd\u30fc\u30c4|           \u5909\u91cf|\n+---+----+----+----+-------------+\n|  1|   8|   9|   4|[8.0,9.0,4.0]|\n|  2|   2|   5|   7|[2.0,5.0,7.0]|\n|  3|   8|   5|   6|[8.0,5.0,6.0]|\n|  4|   3|   5|   4|[3.0,5.0,4.0]|\n|  5|   7|   4|   9|[7.0,4.0,9.0]|\n|  6|   4|   3|   4|[4.0,3.0,4.0]|\n|  7|   3|   6|   8|[3.0,6.0,8.0]|\n|  8|   6|   8|   2|[6.0,8.0,2.0]|\n|  9|   5|   4|   5|[5.0,4.0,5.0]|\n| 10|   6|   7|   6|[6.0,7.0,6.0]|\n+---+----+----+----+-------------+\n```\n\n## \u5165\u529b\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\n\u30ea\u30f3\u30af\u5148\u306b\u5023\u3044\u3001\u3053\u3053\u3067\u3082\u30c7\u30fc\u30bf\u3092\u6a19\u6e96\u5316\u3057\u3066\u304b\u3089\u8a08\u7b97\u3057\u307e\u3059\u3002\u4e3b\u6210\u5206\u5206\u6790\u3067\u306f\u4e00\u822c\u306b\u6a19\u6e96\u5316\u3057\u3066\u304b\u3089\u8a08\u7b97\u3059\u308b\u65b9\u304c\u826f\u3044\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u3002ML\u306b\u306f`StandardScaler`\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\u5165\u529b\u306f`\u5909\u91cf`\u30ab\u30e9\u30e0\u306e\u30d9\u30af\u30c8\u30eb\u3067\u3001\u51fa\u529b\u306f`\u6a19\u6e96\u5316\u5909\u91cf`\u3068\u3057\u307e\u3059\u3002\u3053\u306eAPI\u306f\u307e\u305a`.fit`\u306b\u3088\u308a\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u3001\u305d\u3057\u3066`.transform`\u306b\u3088\u3063\u3066\u518d\u5ea6\u5165\u529b\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u5b9f\u969b\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```py\nfrom pyspark.ml.feature import StandardScaler\n\n# step1\nscaler = StandardScaler(inputCol=\"\u5909\u91cf\", outputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", withStd=True, withMean=True)\nscalerModel = scaler.fit(feature_vectors)\n\n# step2\nstd_feature_vectors = scalerModel.transform(feature_vectors)\n\n#\u6a19\u6e96\u5316\u5909\u91cf\u3060\u3051\u8868\u793a\nprint(\"==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\")\nstd_feature_vectors.select(\"\u6a19\u6e96\u5316\u5909\u91cf\").show(truncate=False)\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\n[\u30ea\u30f3\u30af\u5148\u306e\u8868](http://ifs.nog.cc/gucchi24.hp.infoseek.co.jp/SHUSEIEX.files/image036.jpg)\u3068\u6bd4\u8f03\u3059\u308b\u3068\u5fae\u5999\u306b\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002`StandardScaler`\u306f\u4e0d\u504f\u5206\u6563(n-1)\u3092\u7528\u3044\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u30ea\u30f3\u30af\u5148\u3067\u306f\u6a19\u672c\u5206\u6563(n)\u304c\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u3057\u3044\u8a71\u306f\u4ed6\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n```bash\n==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\n+---------------------------------------------------------------+\n|\u6a19\u6e96\u5316\u5909\u91cf                                                          |\n+---------------------------------------------------------------+\n|[1.3023647131866891,1.7919573407620815,-0.7071067811865476]    |\n|[-1.4884168150705013,-0.3162277660168382,0.7071067811865476]   |\n|[1.3023647131866891,-0.3162277660168382,0.23570226039551587]   |\n|[-1.0232865603609695,-0.3162277660168382,-0.7071067811865476]  |\n|[0.8372344584771575,-0.8432740427115681,1.649915822768611]     |\n|[-0.5581563056514377,-1.370320319406298,-0.7071067811865476]   |\n|[-1.0232865603609695,0.21081851067789167,1.1785113019775793]   |\n|[0.3721042037676257,1.2649110640673515,-1.649915822768611]     |\n|[-0.09302605094190601,-0.8432740427115681,-0.23570226039551587]|\n|[0.3721042037676257,0.7378647873726216,0.23570226039551587]    |\n+---------------------------------------------------------------+\n```\n\n## PCA\n\n\u3084\u3063\u3068\u4e3b\u6210\u5206\u5206\u6790API\u3092\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u5165\u529b\u306f`\u6a19\u6e96\u5316\u5909\u91cf`\u3067\u51fa\u529b\u306f`\u4e3b\u6210\u5206\u5f97\u70b9`\u3067\u3059\u3002\u5148\u307b\u3069\u306e`StandardScaler`\u3068\u540c\u3058\u3088\u3046\u306b\u3001\u307e\u305a\u30e2\u30c7\u30eb\u3092\u4f5c\u308a\u3001\u6b21\u306b\u5b9f\u969b\u306e\u8a08\u7b97\u3092\u884c\u3044\u307e\u3059\u3002\u69cb\u7bc9\u3055\u308c\u305f\u30e2\u30c7\u30eb\u304b\u3089\u306f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3001\u5bc4\u4e0e\u7387\u304c\u5f97\u3089\u308c\u307e\u3059\u3002k=3\u306f\u7b2c\u4e09\u4e3b\u6210\u5206\u307e\u3067\u3092\u8a08\u7b97\u3059\u308b\u3068\u3044\u3046\u6307\u793a\u3067\u3059\u3002\u672c\u6765\u306fk\u3092\u5927\u304d\u306a\u5024\u306b\u3057\u3066\u4e00\u5ea6\u8a08\u7b97\u3057\u3001\u5bc4\u4e0e\u7387\u306e\u4e0a\u4f4d\u304b\u3089\u306e\u7d2f\u8a08\u304c80%\u3042\u305f\u308a\u306b\u306a\u308b\u3088\u3046\u306ak\u3092\u9078\u3073\u518d\u5ea6\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n```py\nfrom pyspark.ml.feature import PCA\n\npca = PCA(k=3, inputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", outputCol=\"\u4e3b\u6210\u5206\u5f97\u70b9\")\npcaModel = pca.fit(std_feature_vectors)\n\nprint(\"==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\")\nprint(pcaModel.pc)\n\nprint(\"==== \u5bc4\u4e0e\u7387 ====\")\nprint(pcaModel.explainedVariance)\n\npca_score = pcaModel.transform(std_feature_vectors).select(\"\u4e3b\u6210\u5206\u5f97\u70b9\")\nprint(\"==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\")\npca_score.show(truncate=False)\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\n\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u306e\u7d50\u679c\u306f\u3001\u7b2c1\u5217\u76ee\uff08\u5de6\u7aef\u306e\u7e26\u4e00\u5217\uff09\u304c\u7b2c\u4e00\u4e3b\u6210\u5206\u306e\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3001\u540c\u69d8\u306b\uff12\u5217\u76ee\u304c\u7b2c\u4e8c\u4e3b\u6210\u5206\u30013\u5217\u76ee\u304c\u7b2c\u4e09\u4e3b\u6210\u5206\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5bc4\u4e0e\u7387\u306f\u3001\u7b2c\u4e00\u4e3b\u6210\u5206\u304c52%, \u7b2c\u4e8c\u4e3b\u6210\u5206\u304c30%\u3001\u7b2c\u4e09\u4e3b\u6210\u5206\u304c17.6%\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u7b2c\u4e00\u3068\u7b2c\u4e8c\u306e\u7d2f\u8a08\u304c82%\u3067\u3059\u306e\u3067\u3001\u7b2c\u4e09\u4e3b\u6210\u5206\u306f\u524a\u3063\u3066\u3082\u826f\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u306e\u5834\u5408k=2\u306b\u3057\u307e\u3059\u3002\n\n\u56fa\u6709\u5024\u306f**\u5f97\u3089\u308c\u307e\u305b\u3093**\u304c\u3001\u5bc4\u4e0e\u7387\u306f`\u56fa\u6709\u5024/\u56fa\u6709\u5024\u306e\u7dcf\u548c`\u3067\u3042\u308b\u304b\u3089\u5927\u6982\u306e\u5834\u5408\u306f\u5bc4\u4e0e\u7387\u3067\u8db3\u308a\u308b\u306f\u305a\u3002\n\n\u5404\u65b0\u805e\u306e\u4e3b\u6210\u5206\u5f97\u70b9\u306f\u7b2c\u4e00\u5217\u304c\u7b2c\u4e00\u4e3b\u6210\u5206\u3001\u7b2c\u4e8c\u5217\u304c\u7b2c\u4e8c\u4e3b\u6210\u5206\u3001\u7b2c\u4e09\u5217\u304c\u7b2c\u4e09\u4e3b\u6210\u5206\u3067\u3059\u3002\u7b2c\u4e00\u4e3b\u6210\u5206\u306e\u5f97\u70b9\u306e\u7b26\u53f7\u304c[\u30ea\u30f3\u30af\u5148](http://ifs.nog.cc/gucchi24.hp.infoseek.co.jp/SHUSEIEX.files/image036.jpg)\u3068\u9006\u3055\u307e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u30d9\u30af\u30c8\u30eb\u306e\u5411\u304d\u304c180\u5ea6\u53cd\u5bfe\u3092\u5411\u3044\u3066\u3044\u308b\u3068\u3044\u3046\u3060\u3051\u3067\u3001\u5206\u6790\u7d50\u679c\u306b\u5f71\u97ff\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u4e0d\u504f\u5206\u6563\u30fb\u6a19\u672c\u5206\u6563\u306e\u9055\u3044\u304b\u3089\u5c11\u3057\u5024\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n```bash\n==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\nDenseMatrix([[-0.53130806,  0.68925233, -0.49258803],\n             [-0.67331251,  0.00933405,  0.73929908],\n             [ 0.51416145,  0.72446125,  0.45912296]])\n==== \u5bc4\u4e0e\u7387 ====\n[0.52355344314,0.300887148322,0.175559408538]\n==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\n+---------------------------------------------------------------+\n|\u4e3b\u6210\u5206\u5f97\u70b9                                                          |\n+---------------------------------------------------------------+\n|[-2.2620712255691466,0.4021126641946994,0.35861418406317674]   |\n|[1.3672950172090064,-0.516574975843834,0.8240383763102186]     |\n|[-0.35784774304549694,1.0654633785914394,-0.7670998522924913]  |\n|[0.3930334607140129,-1.220525792393691,-0.05437714111925901]   |\n|[0.9712806670593661,1.7644947192188811,-0.2783291638335238]    |\n|[0.8556397135650156,-0.9097726336587761,-1.0627843972001996]   |\n|[1.0076787432724863,0.1504509197015279,1.2009982469039933]     |\n|[-1.8977055313059759,-0.9270196509736093,-0.005660728153863093]|\n|[0.4960234396284956,-0.24274673811341405,-0.6858245266064249]  |\n|[-0.5733265415277634,0.43411810927677885,0.47042500192836967]  |\n+---------------------------------------------------------------+\n```\n\n# \u307e\u3068\u3081\n\n\u4ee5\u4e0aSpark\u306eML API\u306e\u3046\u3061\u3001DataFrame, PCA, StandardScaler\u3092\u4f7f\u3063\u305f\u4e3b\u6210\u5206\u5206\u6790\u306e\u5b9f\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\n* `PCA`\u306e\u5165\u529b\u306f\u30d9\u30af\u30c8\u30eb\u5f62\u5f0f\u306e\u5909\u91cf\u3001\u51fa\u529b\u306f\u4e3b\u6210\u5206\u5f97\u70b9\n* PCA\u30e2\u30c7\u30eb\u4f5c\u308a\u3068\u5b9f\u969b\u306e\u8a08\u7b97\u306e\uff12\u6bb5\u968e\u306b\u306a\u3063\u3066\u3044\u308b\n* PCA\u30e2\u30c7\u30eb\u304b\u3089\u306f\u56fa\u6709\u30d9\u30af\u30c8\u30eb\u3068\u5bc4\u4e0e\u7387\u304c\u5f97\u3089\u308c\u308b\n* \u56fa\u6709\u5024\u306f\u5f97\u3089\u308c\u306a\u3044\n* \u7b26\u53f7\u306f\u5b9f\u88c5\u4f9d\u5b58\u306a\u306e\u3067\u4ed6\u306e\u5b9f\u88c5\u3068\u6bd4\u8f03\u3057\u3066\u7b26\u53f7\u304c\u9006\u306e\u3053\u3068\u3082\u3042\u308b\n* \u5165\u529b\u306e\u6a19\u6e96\u5316\u306b\u306f`StandardScaler`\u3092\u4f7f\u3046\n* StandardScaler\u306f\u4e0d\u504f\u5206\u6563\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n\u65b0\u805e\u306e\u50be\u5411\u306e\u5206\u6790\u306f...\u30ea\u30f3\u30af\u5148\u306e\u8a18\u4e8b\u3092\u3054\u89a7\u304f\u3060\u3055\u3044(^^;\n\n# \u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```py:pca.py\n# -*- coding: utf-8 -*-\nfrom pyspark.sql import SparkSession\nfrom pyspark.ml.feature import PCA, VectorAssembler, StandardScaler\n\n# Initialize SparkSession\nspark = (SparkSession\n         .builder\n         .appName(\"news\")\n         .enableHiveSupport()\n         .getOrCreate())\n\n# Read raw data\ndf = spark.read.csv('news.csv', header=True, inferSchema=True, mode=\"DROPMALFORMED\", encoding='UTF-8')\n\nprint(\"==== \u751f\u30c7\u30fc\u30bf ====\")\ndf.show(truncate=False)\n\nassembler = VectorAssembler(inputCols=df.columns[1:], outputCol=\"\u5909\u91cf\")\nfeature_vectors = assembler.transform(df)\nfeature_vectors.show()\n\n\nscaler = StandardScaler(inputCol=\"\u5909\u91cf\", outputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", withStd=True, withMean=True)\nscalerModel = scaler.fit(feature_vectors)\nstd_feature_vectors = scalerModel.transform(feature_vectors)\n\nprint(\"==== \u6a19\u6e96\u5316\u3055\u308c\u305f\u30c7\u30fc\u30bf ====\")\nstd_feature_vectors.select(\"\u6a19\u6e96\u5316\u5909\u91cf\").show(truncate=False)\n\n# build PCA model\npca = PCA(k=3, inputCol=\"\u6a19\u6e96\u5316\u5909\u91cf\", outputCol=\"\u4e3b\u6210\u5206\u5f97\u70b9\")\npcaModel = pca.fit(std_feature_vectors)\n\nprint(\"==== \u56fa\u6709\u30d9\u30af\u30c8\u30eb ====\")\nprint(pcaModel.pc)\n\nprint(\"==== \u5bc4\u4e0e\u7387 ====\")\nprint(pcaModel.explainedVariance)\n\npca_score = pcaModel.transform(std_feature_vectors).select(\"\u4e3b\u6210\u5206\u5f97\u70b9\")\nprint(\"==== \u4e3b\u6210\u5206\u5f97\u70b9 ====\")\n\npca_score.show(truncate=False)\n```\n\n\n", "tags": ["Spark", "\u7d71\u8a08\u5b66", "\u6a5f\u68b0\u5b66\u7fd2", "MLlib", "Python"]}