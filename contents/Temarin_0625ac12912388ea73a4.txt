{"context": " More than 1 year has passed since last update.\u9023\u7d9a\u7684\u306b\u767a\u751f\u3059\u308b\u5024\u304c\u3042\u308b\u3068\u3059\u308b\u3002\nThrottle\u306f\u3001\u843d\u3061\u7740\u3044\u305f\u3089\u5f8c\u7d9a\u306b\u6d41\u3059\u304c\u3001\u5024\u3092\u5f8c\u7d9a\u306b\u6d41\u3057\u305f\u3089\u3001\u305d\u308c\u4ee5\u964d\u3001\u4e00\u5b9a\u6642\u9593\u3001\u5024\u3092\u7121\u8996\u3057\u305f\u3044\u3002\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u2026\n1 \u2192 1\u79d2\u9593\u7121\u8996 \u2192 10 \u2192 1\u79d2\u9593\u7121\u8996 \u2192 25\nAnonymousObservable\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3002\nOnNext\u3057\u305f\u6642\u70b9\u306e\u6642\u9593(Ticks)\u3092\u8a18\u61b6\u3057\u3066\u304a\u304d\u3001\u6307\u5b9a\u6642\u9593\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u7121\u8996\u3059\u308b\u3002\nusing System;\nusing System.Reactive;\nusing System.Reactive.Linq;\nstatic class Ex {\n    public static IObservable<T> SkipTime<T>( this IObservable<T> source , int skip_ms ) {\n        return new AnonymousObservable<T>( x => {\n            var last = 0;\n            return source.Subscribe( y => {\n                var tick = Environment.TickCount;\n                if( tick - last < skip_ms )\n                    return;\n                last = tick;\n                x.OnNext( y );\n            } );\n        } );\n    }\n}\n\nclass Program {\n    [STAThread]\n    static void Main( string[] args ) {\n        Observable.Interval( TimeSpan.FromMilliseconds( 50 ) )\n            .SkipTime( 1000 )\n            .Subscribe( Console.WriteLine );\n        Console.ReadLine();\n    }\n}\n\n\n\u9023\u7d9a\u7684\u306b\u767a\u751f\u3059\u308b\u5024\u304c\u3042\u308b\u3068\u3059\u308b\u3002\nThrottle\u306f\u3001\u843d\u3061\u7740\u3044\u305f\u3089\u5f8c\u7d9a\u306b\u6d41\u3059\u304c\u3001\u5024\u3092\u5f8c\u7d9a\u306b\u6d41\u3057\u305f\u3089\u3001\u305d\u308c\u4ee5\u964d\u3001\u4e00\u5b9a\u6642\u9593\u3001\u5024\u3092\u7121\u8996\u3057\u305f\u3044\u3002\n\n\u30a4\u30e1\u30fc\u30b8\u3068\u3057\u3066\u306f\u3001\u3053\u3093\u306a\u611f\u3058\u2026\n**1** \u2192 1\u79d2\u9593\u7121\u8996 \u2192 **10** \u2192 1\u79d2\u9593\u7121\u8996 \u2192 **25**\n\nAnonymousObservable\u3067\u30e9\u30c3\u30d7\u3057\u3066\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3002\nOnNext\u3057\u305f\u6642\u70b9\u306e\u6642\u9593(Ticks)\u3092\u8a18\u61b6\u3057\u3066\u304a\u304d\u3001\u6307\u5b9a\u6642\u9593\u4ee5\u4e0a\u7d4c\u904e\u3057\u3066\u3044\u306a\u3051\u308c\u3070\u3001\u7121\u8996\u3059\u308b\u3002\n\n````c#\nusing System;\nusing System.Reactive;\nusing System.Reactive.Linq;\nstatic class Ex {\n\tpublic static IObservable<T> SkipTime<T>( this IObservable<T> source , int skip_ms ) {\n\t\treturn new AnonymousObservable<T>( x => {\n\t\t\tvar last = 0;\n\t\t\treturn source.Subscribe( y => {\n\t\t\t\tvar tick = Environment.TickCount;\n\t\t\t\tif( tick - last < skip_ms )\n\t\t\t\t\treturn;\n\t\t\t\tlast = tick;\n\t\t\t\tx.OnNext( y );\n\t\t\t} );\n\t\t} );\n\t}\n}\n\nclass Program {\n\t[STAThread]\n\tstatic void Main( string[] args ) {\n\t\tObservable.Interval( TimeSpan.FromMilliseconds( 50 ) )\n\t\t\t.SkipTime( 1000 )\n\t\t\t.Subscribe( Console.WriteLine );\n\t\tConsole.ReadLine();\n\t}\n}\n\n````\n", "tags": ["C#", "ReactiveExtensions"]}