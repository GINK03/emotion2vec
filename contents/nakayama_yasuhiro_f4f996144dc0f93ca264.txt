{"tags": ["Mojolicious"], "context": " More than 1 year has passed since last update.\n\nCentOS 6.5\n\u4fee\u6b63\u7b87\u6240\n\u30b9\u30af\u30ea\u30d7\u30c8\u4e0a\u90e8\u306e\u30b3\u30e1\u30f3\u30c8\u90e8\u3082\u9069\u5b9c\u7de8\u96c6\u3057\u3066\u4e0b\u3055\u3044\u3002\nanyenv\u3082\u3057\u304f\u306fplenv\u306e\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\nMojolicious\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u6307\u5b9a\nanyenv \u3082\u3057\u304f\u306fplenv\u306b\u5909\u66f4\n\u30c7\u30fc\u30e2\u30f3\u540d autologger \u304b\u3089\u81ea\u5206\u306eMojolicous\u30a2\u30d7\u30ea\u540d\u306b\u5909\u66f4\n\u4fee\u6b63\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\n\u6a29\u9650 chmod 755 damone_file\n/etc/init.d\u306b\u914d\u7f6e\nchkconfig\u3067\u30e9\u30f3\u30ec\u30d9\u30eb\u306b\u3088\u308b\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a\u3002\n\ndaemon.sh\n#!/bin/bash\n# chkconfig: 345 91 05\n# description: Autologger server daemon\n#\n# Init file for Autologger server daemon\n#\n#\n# pidfile: /home/yasu/project/auto_logger/script/hypnotoad.pid\n\n# Source function library\nif [ -f /etc/init.d/functions ] ; then\n    . /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ] ; then\n    . /etc/rc.d/init.d/functions\nelse\n    exit 1\nfi\n\nunset TMPDIR\nRETVAL=0\n\n# \u4fee\u6b63\uff11\u3000\u81ea\u5206\u306e\u30db\u30fc\u30e0\u306b\nHOME=/home/yasu\nexport HOME\n# \u4fee\u6b63\uff12\u3000mojolicious\u30a2\u30d7\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\nAPP_HOME=$HOME/auto_logger\nexport APP_HOME\n# \u4fee\u6b63\uff13 anyenv or plenv\u306e\u6307\u5b9a\nexport PATH=$PATH:$HOME/.anyenv/bin\neval \"$(anyenv init -)\"\n\nstart()\n{\n# autologger -> \u81ea\u5206\u306e\u30a2\u30d7\u30ea\u540d\u3001yasu->\u81ea\u5206\u306e\u30db\u30fc\u30e0\n    echo -n $\"Starting autologger service: \"\n    cd $APP_HOME;\n#   daemon --user yasu $APP_HOME/startup h 2>/dev/null\n    daemon $APP_HOME/startup h 2>/home/yasu/log\n    RETVAL=$?\n    echo_success\n    echo\n# \u4fee\u6b634\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/autologger || RETVAL=1\n    return $RETVAL\n}\n\nstop()\n{\n    echo -n $\"Shutting down autologger service: \"\n#   killproc autologger\n    if [ ! -f /var/lock/subsys/autologger ]; then\n        echo\n        echo -n \"autologger is not runnning\"\n        echo_failure\n        echo\n        return $RETVAL\n    fi\n    cd $APP_HOME\n    daemon \"$APP_HOME/startup hs\" 2>/dev/null\n    RETVAL=$?\n# \u4fee\u6b635\n    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/autologger\n    echo\n    return $RETVAL\n}\n\nreload()\n{\n    echo -n $\"Reloading autologger service: \"\n    killproc autologger -SIGUSR2\n    RETVAL=$?\n    echo\n    return $RETVAL\n}\n\ncase \"$1\" in\n    start)\n        start\n        ;;\n    stop)\n        stop\n        ;;\n    reload)\n        reload\n        ;;\n    restart)\n        stop\n        start\n        ;;\n    status)\n# \u4fee\u6b63\uff16\n        status -p $APP_HOME/script/hypnotoad.pid autologger\n        ;;\n    *)\n        echo $\"Usage: $0 {start|stop|reload|restart|status}\"\n        exit 2\nesac\nexit $?\n\n\n\nUbuntu14.04\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5404\u81ea\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4fee\u6b63\u7b87\u6240\nanyenv\u3082\u3057\u304f\u306fplenv\u306e\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\nanyenv \u3082\u3057\u304f\u306fplenv\u306b\u5909\u66f4\n\u767b\u9332\u3059\u308b\u30c7\u30fc\u30e2\u30f3\u540d\nMojolicious\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u6307\u5b9a\n\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\uff08startup\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f7f\u7528\u524d\u63d0\uff09\n\u4fee\u6b63\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\n\u6a29\u9650 chmod 755 damone_file\n/etc/init.d\u306b\u914d\u7f6e\nsysv-rc-conf\u3067\u30e9\u30f3\u30ec\u30d9\u30eb\u306b\u3088\u308b\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a\u3002\n\ndaemon.sh\n#! /bin/bash\n### BEGIN INIT INFO\n# Provides:          autologger2\n# Required-Start:    $remote_fs $syslog\n# Required-Stop:     $remote_fs $syslog\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Example initscript\n# Description:       This file should be used to construct scripts to be\n#                    placed in /etc/init.d.\n### END INIT INFO\n\n# Author: Foo Bar <foobar@baz.org>\n#\n# Please remove the \"Author\" lines above and replace them\n# with your own name if you copy and modify this script.\n\n# Do NOT \"set -e\"\n\n# PATH should only include /usr/* if it runs after the mountnfs.sh script\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\n# \u4fee\u6b63\uff11\nHOME=/home/yasu\nexport HOME\n# \u4fee\u6b63\uff12\nexport PATH=$PATH:/home/yasu/.anyenv/bin\neval \"$(anyenv init -)\"\n\nDESC=\"Description of the service\"\n# \u4fee\u6b63\uff13\nNAME=autologger2\n# \u4fee\u6b63\uff14\nDAEMON_HOME=$HOME/project/auto_logger\nDAEMON=$DAEMON_HOME/startup\n#DAEMON_ARGS=\"--options args\"\n# \u4fee\u6b63\uff15\nDAEMON_START_ARGS=\"h\"\nDAEMON_STOP_ARGS=\"hs\"\nPIDFILE=$DAEMON_HOME/script/hypnotoad.pid\nSCRIPTNAME=/etc/init.d/$NAME\n\n# Exit if the package is not installed\n[ -x \"$DAEMON\" ] || exit 0\n\n# Read configuration variable file if it is present\n[ -r /etc/default/$NAME ] && . /etc/default/$NAME\n\n# Load the VERBOSE setting and other rcS variables\n. /lib/init/vars.sh\n\n# Define LSB log_* functions.\n# Depend on lsb-base (>= 3.2-14) to ensure that this file is present\n# and status_of_proc is working.\n. /lib/lsb/init-functions\n\n#\n# Function that starts the daemon/service\n#\ndo_start()\n{\n    # Return\n    #   0 if daemon has been started\n    #   1 if daemon was already running\n    #   2 if daemon could not be started\n#   start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \\\n    start-stop-daemon -d $DAEMON_HOME --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null  \\\n        || return 1\n#   start-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n    start-stop-daemon -d $DAEMON_HOME --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n        $DAEMON_START_ARGS \\\n        || return 2\n    # Add code here, if necessary, that waits for the process to be ready\n    # to handle requests from services started subsequently which depend\n    # on this one.  As a last resort, sleep for some time.\n}\n\n#\n# Function that stops the daemon/service\n#\ndo_stop()\n{\n    # Return\n    #   0 if daemon has been stopped\n    #   1 if daemon was already stopped\n    #   2 if daemon could not be stopped\n    #   other if a failure occurred\n#   start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\n    start-stop-daemon --stop --quiet --pidfile $PIDFILE --name --exec $DAEMON -- 'hs'\n    RETVAL=\"$?\"\n    [ \"$RETVAL\" = 2 ] && return 2\n    # Wait for children to finish too if this is a daemon that forks\n    # and if the daemon is only ever run from this initscript.\n    # If the above conditions are not satisfied then add some other code\n    # that waits for the process to drop all resources that could be\n    # needed by services started subsequently.  A last resort is to\n    # sleep for some time.\n#   start-stop-daemon -d $DAEMON_HOME --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON\n    start-stop-daemon -d $DAEMON_HOME --start --quiet --oknodo --exec $DAEMON -- $DAEMON_STOP_ARGS\n    [ \"$?\" = 2 ] && return 2\n    # Many daemons don't delete their pidfiles when they exit.\n#   rm -f $PIDFILE\n    return \"$RETVAL\"\n}\n\n#\n# Function that sends a SIGHUP to the daemon/service\n#\ndo_reload() {\n    #\n    # If the daemon can reload its configuration without\n    # restarting (for example, when it is sent a SIGHUP),\n    # then implement that here.\n    #\n    start-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME\n    return 0\n}\n\ncase \"$1\" in\n  start)\n    [ \"$VERBOSE\" != no ] && log_daemon_msg \"Starting $DESC\" \"$NAME\"\n    do_start\n    case \"$?\" in\n        0|1) [ \"$VERBOSE\" != no ] && log_end_msg 0 ;;\n        2) [ \"$VERBOSE\" != no ] && log_end_msg 1 ;;\n    esac\n    ;;\n  stop)\n    [ \"$VERBOSE\" != no ] && log_daemon_msg \"Stopping $DESC\" \"$NAME\"\n    do_stop\n    case \"$?\" in\n        0|1) [ \"$VERBOSE\" != no ] && log_end_msg 0 ;;\n        2) [ \"$VERBOSE\" != no ] && log_end_msg 1 ;;\n    esac\n    ;;\n  status)\n    status_of_proc \"$DAEMON\" \"$NAME\" && exit 0 || exit $?\n    ;;\n  #reload|force-reload)\n    #\n    # If do_reload() is not implemented then leave this commented out\n    # and leave 'force-reload' as an alias for 'restart'.\n    #\n    #log_daemon_msg \"Reloading $DESC\" \"$NAME\"\n    #do_reload\n    #log_end_msg $?\n    #;;\n  restart|force-reload)\n    #\n    # If the \"reload\" option is implemented then remove the\n    # 'force-reload' alias\n    #\n    log_daemon_msg \"Restarting $DESC\" \"$NAME\"\n    do_stop\n    case \"$?\" in\n      0|1)\n        do_start\n        case \"$?\" in\n            0) log_end_msg 0 ;;\n            1) log_end_msg 1 ;; # Old process is still running\n            *) log_end_msg 1 ;; # Failed to start\n        esac\n        ;;\n      *)\n        # Failed to stop\n        log_end_msg 1\n        ;;\n    esac\n    ;;\n  *)\n    #echo \"Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}\" >&2\n    echo \"Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}\" >&2\n    exit 3\n    ;;\nesac\n\n:\n\n\n# CentOS 6.5\n\n\u4fee\u6b63\u7b87\u6240\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u4e0a\u90e8\u306e\u30b3\u30e1\u30f3\u30c8\u90e8\u3082\u9069\u5b9c\u7de8\u96c6\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nanyenv\u3082\u3057\u304f\u306fplenv\u306e\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\nMojolicious\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u6307\u5b9a\nanyenv \u3082\u3057\u304f\u306fplenv\u306b\u5909\u66f4\n\u30c7\u30fc\u30e2\u30f3\u540d autologger \u304b\u3089\u81ea\u5206\u306eMojolicous\u30a2\u30d7\u30ea\u540d\u306b\u5909\u66f4\n\u4fee\u6b63\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\n\n\u6a29\u9650 chmod 755 damone_file\n/etc/init.d\u306b\u914d\u7f6e\nchkconfig\u3067\u30e9\u30f3\u30ec\u30d9\u30eb\u306b\u3088\u308b\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a\u3002\n\n```language:daemon.sh\n#!/bin/bash\n# chkconfig: 345 91 05\n# description: Autologger server daemon\n#\n# Init file for Autologger server daemon\n#\n#\n# pidfile: /home/yasu/project/auto_logger/script/hypnotoad.pid\n\n# Source function library\nif [ -f /etc/init.d/functions ] ; then\n\t. /etc/init.d/functions\nelif [ -f /etc/rc.d/init.d/functions ] ; then\n\t. /etc/rc.d/init.d/functions\nelse\n\texit 1\nfi\n\nunset TMPDIR\nRETVAL=0\n\n# \u4fee\u6b63\uff11\u3000\u81ea\u5206\u306e\u30db\u30fc\u30e0\u306b\nHOME=/home/yasu\nexport HOME\n# \u4fee\u6b63\uff12\u3000mojolicious\u30a2\u30d7\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\nAPP_HOME=$HOME/auto_logger\nexport APP_HOME\n# \u4fee\u6b63\uff13 anyenv or plenv\u306e\u6307\u5b9a\nexport PATH=$PATH:$HOME/.anyenv/bin\neval \"$(anyenv init -)\"\n\nstart()\n{\n# autologger -> \u81ea\u5206\u306e\u30a2\u30d7\u30ea\u540d\u3001yasu->\u81ea\u5206\u306e\u30db\u30fc\u30e0\n\techo -n $\"Starting autologger service: \"\n\tcd $APP_HOME;\n#\tdaemon --user yasu $APP_HOME/startup h 2>/dev/null\n\tdaemon $APP_HOME/startup h 2>/home/yasu/log\n\tRETVAL=$?\n\techo_success\n\techo\n# \u4fee\u6b634\n        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/autologger || RETVAL=1\n\treturn $RETVAL\n}\n\nstop()\n{\n\techo -n $\"Shutting down autologger service: \"\n#\tkillproc autologger\n\tif [ ! -f /var/lock/subsys/autologger ]; then\n\t\techo\n\t\techo -n \"autologger is not runnning\"\n\t\techo_failure\n\t\techo\n\t\treturn $RETVAL\n\tfi\n\tcd $APP_HOME\n\tdaemon \"$APP_HOME/startup hs\" 2>/dev/null\n\tRETVAL=$?\n# \u4fee\u6b635\n\t[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/autologger\n\techo\n\treturn $RETVAL\n}\n\nreload()\n{\n\techo -n $\"Reloading autologger service: \"\n\tkillproc autologger -SIGUSR2\n\tRETVAL=$?\n\techo\n\treturn $RETVAL\n}\n\ncase \"$1\" in\n\tstart)\n\t\tstart\n\t\t;;\n\tstop)\n\t\tstop\n\t\t;;\n\treload)\n\t\treload\n\t\t;;\n\trestart)\n\t\tstop\n\t\tstart\n\t\t;;\n\tstatus)\n# \u4fee\u6b63\uff16\n\t\tstatus -p $APP_HOME/script/hypnotoad.pid autologger\n\t\t;;\n\t*)\n\t\techo $\"Usage: $0 {start|stop|reload|restart|status}\"\n\t\texit 2\nesac\nexit $?\n``` \n\n# Ubuntu14.04\n\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u5404\u81ea\u306e\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4fee\u6b63\u7b87\u6240\n\nanyenv\u3082\u3057\u304f\u306fplenv\u306e\u3042\u308b\u30e6\u30fc\u30b6\u306e\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\nanyenv \u3082\u3057\u304f\u306fplenv\u306b\u5909\u66f4\n\u767b\u9332\u3059\u308b\u30c7\u30fc\u30e2\u30f3\u540d\nMojolicious\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u6307\u5b9a\n\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\uff08startup\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f7f\u7528\u524d\u63d0\uff09\n\u4fee\u6b63\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u3064\u3044\u3066\n\n\u6a29\u9650 chmod 755 damone_file\n/etc/init.d\u306b\u914d\u7f6e\nsysv-rc-conf\u3067\u30e9\u30f3\u30ec\u30d9\u30eb\u306b\u3088\u308b\u30c7\u30fc\u30e2\u30f3\u306e\u8d77\u52d5\u8a2d\u5b9a\u3002\n\n```language:daemon.sh\n#! /bin/bash\n### BEGIN INIT INFO\n# Provides:          autologger2\n# Required-Start:    $remote_fs $syslog\n# Required-Stop:     $remote_fs $syslog\n# Default-Start:     2 3 4 5\n# Default-Stop:      0 1 6\n# Short-Description: Example initscript\n# Description:       This file should be used to construct scripts to be\n#                    placed in /etc/init.d.\n### END INIT INFO\n\n# Author: Foo Bar <foobar@baz.org>\n#\n# Please remove the \"Author\" lines above and replace them\n# with your own name if you copy and modify this script.\n\n# Do NOT \"set -e\"\n\n# PATH should only include /usr/* if it runs after the mountnfs.sh script\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\n# \u4fee\u6b63\uff11\nHOME=/home/yasu\nexport HOME\n# \u4fee\u6b63\uff12\nexport PATH=$PATH:/home/yasu/.anyenv/bin\neval \"$(anyenv init -)\"\n\nDESC=\"Description of the service\"\n# \u4fee\u6b63\uff13\nNAME=autologger2\n# \u4fee\u6b63\uff14\nDAEMON_HOME=$HOME/project/auto_logger\nDAEMON=$DAEMON_HOME/startup\n#DAEMON_ARGS=\"--options args\"\n# \u4fee\u6b63\uff15\nDAEMON_START_ARGS=\"h\"\nDAEMON_STOP_ARGS=\"hs\"\nPIDFILE=$DAEMON_HOME/script/hypnotoad.pid\nSCRIPTNAME=/etc/init.d/$NAME\n\n# Exit if the package is not installed\n[ -x \"$DAEMON\" ] || exit 0\n\n# Read configuration variable file if it is present\n[ -r /etc/default/$NAME ] && . /etc/default/$NAME\n\n# Load the VERBOSE setting and other rcS variables\n. /lib/init/vars.sh\n\n# Define LSB log_* functions.\n# Depend on lsb-base (>= 3.2-14) to ensure that this file is present\n# and status_of_proc is working.\n. /lib/lsb/init-functions\n\n#\n# Function that starts the daemon/service\n#\ndo_start()\n{\n\t# Return\n\t#   0 if daemon has been started\n\t#   1 if daemon was already running\n\t#   2 if daemon could not be started\n#\tstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null \\\n\tstart-stop-daemon -d $DAEMON_HOME --start --quiet --pidfile $PIDFILE --exec $DAEMON --test > /dev/null  \\\n\t\t|| return 1\n#\tstart-stop-daemon --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n\tstart-stop-daemon -d $DAEMON_HOME --start --quiet --pidfile $PIDFILE --exec $DAEMON -- \\\n\t\t$DAEMON_START_ARGS \\\n\t\t|| return 2\n\t# Add code here, if necessary, that waits for the process to be ready\n\t# to handle requests from services started subsequently which depend\n\t# on this one.  As a last resort, sleep for some time.\n}\n\n#\n# Function that stops the daemon/service\n#\ndo_stop()\n{\n\t# Return\n\t#   0 if daemon has been stopped\n\t#   1 if daemon was already stopped\n\t#   2 if daemon could not be stopped\n\t#   other if a failure occurred\n#\tstart-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $PIDFILE --name $NAME\n\tstart-stop-daemon --stop --quiet --pidfile $PIDFILE --name --exec $DAEMON -- 'hs'\n\tRETVAL=\"$?\"\n\t[ \"$RETVAL\" = 2 ] && return 2\n\t# Wait for children to finish too if this is a daemon that forks\n\t# and if the daemon is only ever run from this initscript.\n\t# If the above conditions are not satisfied then add some other code\n\t# that waits for the process to drop all resources that could be\n\t# needed by services started subsequently.  A last resort is to\n\t# sleep for some time.\n#\tstart-stop-daemon -d $DAEMON_HOME --stop --quiet --oknodo --retry=0/30/KILL/5 --exec $DAEMON\n\tstart-stop-daemon -d $DAEMON_HOME --start --quiet --oknodo --exec $DAEMON -- $DAEMON_STOP_ARGS\n\t[ \"$?\" = 2 ] && return 2\n\t# Many daemons don't delete their pidfiles when they exit.\n#\trm -f $PIDFILE\n\treturn \"$RETVAL\"\n}\n\n#\n# Function that sends a SIGHUP to the daemon/service\n#\ndo_reload() {\n\t#\n\t# If the daemon can reload its configuration without\n\t# restarting (for example, when it is sent a SIGHUP),\n\t# then implement that here.\n\t#\n\tstart-stop-daemon --stop --signal 1 --quiet --pidfile $PIDFILE --name $NAME\n\treturn 0\n}\n\ncase \"$1\" in\n  start)\n\t[ \"$VERBOSE\" != no ] && log_daemon_msg \"Starting $DESC\" \"$NAME\"\n\tdo_start\n\tcase \"$?\" in\n\t\t0|1) [ \"$VERBOSE\" != no ] && log_end_msg 0 ;;\n\t\t2) [ \"$VERBOSE\" != no ] && log_end_msg 1 ;;\n\tesac\n\t;;\n  stop)\n\t[ \"$VERBOSE\" != no ] && log_daemon_msg \"Stopping $DESC\" \"$NAME\"\n\tdo_stop\n\tcase \"$?\" in\n\t\t0|1) [ \"$VERBOSE\" != no ] && log_end_msg 0 ;;\n\t\t2) [ \"$VERBOSE\" != no ] && log_end_msg 1 ;;\n\tesac\n\t;;\n  status)\n\tstatus_of_proc \"$DAEMON\" \"$NAME\" && exit 0 || exit $?\n\t;;\n  #reload|force-reload)\n\t#\n\t# If do_reload() is not implemented then leave this commented out\n\t# and leave 'force-reload' as an alias for 'restart'.\n\t#\n\t#log_daemon_msg \"Reloading $DESC\" \"$NAME\"\n\t#do_reload\n\t#log_end_msg $?\n\t#;;\n  restart|force-reload)\n\t#\n\t# If the \"reload\" option is implemented then remove the\n\t# 'force-reload' alias\n\t#\n\tlog_daemon_msg \"Restarting $DESC\" \"$NAME\"\n\tdo_stop\n\tcase \"$?\" in\n\t  0|1)\n\t\tdo_start\n\t\tcase \"$?\" in\n\t\t\t0) log_end_msg 0 ;;\n\t\t\t1) log_end_msg 1 ;; # Old process is still running\n\t\t\t*) log_end_msg 1 ;; # Failed to start\n\t\tesac\n\t\t;;\n\t  *)\n\t\t# Failed to stop\n\t\tlog_end_msg 1\n\t\t;;\n\tesac\n\t;;\n  *)\n\t#echo \"Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}\" >&2\n\techo \"Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}\" >&2\n\texit 3\n\t;;\nesac\n\n:\n``` \n"}