{"tags": ["Jupyter", "TensorFlow", "Python"], "context": "\n\n\u6982\u8981\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001TensorFlow\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\"MNIST For ML Beginners\"\u3092Jupyter Notebook\u3067\u52d5\u304b\u3057\u3066\u307f\u308b\u305f\u3081\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u307e\u305f\u3001\u8a18\u4e8b\u4e0a\u90e8\u306e\u30d0\u30c3\u30b8\u304b\u3089Jupyter Notebook\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\u305c\u3072Notebook\u5f62\u5f0f\u3067\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308a\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nqiita2notebook - Qiita\u306e\u8a18\u4e8b\u3092Jupyter Notebook\u5316\u3057\u3066\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u5b9f\u884c\u3059\u308b - Qiita\n\n\n\u8a18\u4e8b\u5185\u3067\u4f7f\u3046\u8a18\u53f7\n\n\n \u3067\u59cb\u307e\u308b\u6587\u7ae0\u306f\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308b\u969b\u306e\u30d2\u30f3\u30c8\u3067\u3059\u3002Jupyter Notebook\u4e0a\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n \u3067\u59cb\u307e\u308b\u6587\u7ae0\u306f\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308b\u969b\u306b\u6c17\u3092\u3064\u3051\u308b\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\n\n\u6e96\u5099\n\nPython 2.7 (3\u7cfb\u3067\u306f\u52d5\u4f5c\u672a\u78ba\u8a8d)\nJupyter Notebook\nTensorFlow 0.9\u4ee5\u4e0a \uff08MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\uff09\nMatplotlib\nNumpy\n\n\n1. \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3082\u3046\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport numpy as np\n\n\n2. MNIST\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3082\u3046\nMNIST\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u624b\u66f8\u304d\u6587\u5b57\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u6700\u521d\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\nfrom tensorflow.contrib.learn.python.learn.datasets import mnist as mnist_loader\n\nmnist = mnist_loader.read_data_sets(\"MNIST_data/\", one_hot=True)\n\nExtracting MNIST_data/train-images-idx3-ubyte.gz\nExtracting MNIST_data/train-labels-idx1-ubyte.gz\nExtracting MNIST_data/t10k-images-idx3-ubyte.gz\nExtracting MNIST_data/t10k-labels-idx1-ubyte.gz\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\uff08mnist.train\uff0955,000\u4ef6\u3068\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff08mnist.test\uff095,000\u4ef6\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u80fd\u529b\u3092\u6e2c\u308b\u305f\u3081\u306b\u3001\u8a13\u7df4\u306b\u5229\u7528\u3057\u306a\u3044\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u3051\u308b\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u306a\u624b\u6cd5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5168\u3066\u306eMNIST\u30c7\u30fc\u30bf\u306f\u3001\u624b\u66f8\u304d\u753b\u50cf\u3068\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u306e\u30c7\u30fc\u30bf\u3001\u306e2\u3064\u306e\u8981\u7d20\u304b\u3089\u6210\u308a\u7acb\u3061\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u624b\u66f8\u304d\u753b\u50cf\u3092xs\u3001\u30e9\u30d9\u30eb\u3092ys\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u624b\u66f8\u304d\u753b\u50cf\uff08xs\uff09\u306e\u89e3\u8aac\n\u3072\u3068\u3064\u306e\u624b\u66f8\u304d\u753b\u50cf\u306f\u3001784\uff0828\u30d4\u30af\u30bb\u30eb \u00d7 28\u30d4\u30af\u30bb\u30eb\uff09\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nmnist.train.images\u306f\u30c6\u30f3\u30bd\u30eb\uff08n\u6b21\u5143\u914d\u5217\uff09\u3067\u3042\u308a\u300155,000\u500b\u306e784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u683c\u7d0d\u3057\u305f[55000,784]\u306e\u5f62\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u624b\u66f8\u304d\u753b\u50cf\u3092\u3072\u3068\u3064\u898b\u3066\u307f\u307e\u3059\u3002\nplt.imshow(mnist.train.images[0].reshape([28, 28]))\nplt.gray()\n\n\n \u63cf\u753b\u3059\u308b\u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5225\u306e\u624b\u66f8\u304d\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3092\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30e9\u30d9\u30eb\uff08ys\uff09\u306e\u89e3\u8aac\nMNIST\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u304c\u3069\u306e\u6570\u5b57\u304b\u3092\u8868\u3059\u30010\u301c9\u306e\u6570\u5b57\u3067\u3059\u3002\u4eca\u56de\u306f\u3001\u30e9\u30d9\u30eb\u3092one-hot\u30d9\u30af\u30c8\u30eb\u306e\u5f62\u5f0f\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u300c3\u300d\u3092\u8868\u3059\u30e9\u30d9\u30eb\u306f[0,0,0,1,0,0,0,0,0,0]\u3068\u306a\u308a\u307e\u3059\u3002\nmnist.train.labels\u306f\u300155,000\u500b\u306e10\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u683c\u7d0d\u3057\u305f[55000, 10]\u306e\u5f62\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u30e9\u30d9\u30eb\u3092\u3072\u3068\u3064\u898b\u3066\u307f\u307e\u3059\u3002\nplt.imshow(mnist.train.labels[0].reshape([1, -1]))\nplt.gray()\n\n\n \u63cf\u753b\u3059\u308b\u30e9\u30d9\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5225\u306e\u30e9\u30d9\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3092\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n3. \u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u3088\u3046\n\u4eca\u56de\u306f\u3001Softmax\u95a2\u6570\u3092\u7528\u3044\u305f\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\nSoftmax\u56de\u5e30\u306e\u89e3\u8aac\n\u4eca\u56de\u306e\u30e2\u30c7\u30eb\u306e\u76ee\u6a19\u306f\u3001\u624b\u66f8\u304d\u753b\u50cf\u3092\u898b\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u304c\u3069\u306e\u6570\u5b57\u3067\u3042\u308b\u304b\u78ba\u7387\u3092\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30c7\u30eb\u304c\u300c9\u300d\u306e\u624b\u66f8\u304d\u753b\u50cf\u3092\u898b\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u304c80%\u306e\u78ba\u7387\u3067\u300c9\u300d\u3067\u3042\u308b\u3001\u540c\u6642\u306b5%\u306e\u78ba\u7387\u3067\u300c8\u300d\u3067\u3042\u308b\uff08\u4e0a\u90e8\u306b\u30eb\u30fc\u30d7\u304c\u3042\u308b\u305f\u3081\uff09\u3001\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\u3053\u308c\u306f\u3001Softmax\u56de\u5e30\u304c\u9069\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306e\u3072\u3068\u3064\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u3044\u304f\u3064\u304b\u306e\u7d50\u679c\u306e\u9078\u629e\u80a2\uff08\u4eca\u56de\u306f10\u901a\u308a\uff09\u304c\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u3089\u306e\u4e2d\u304b\u30891\u3064\u306e\u7d50\u679c\u3092\u9078\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001Softmax\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3088\u308a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u5834\u5408\u3067\u3082\u3001\u6700\u5f8c\u306bSoftmax\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nSoftmax\u56de\u5e30\u306f\u3001\u6b21\u306e2\u3064\u306e\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u306a\u308a\u307e\u3059\u3002\n\n\u5165\u529b\u3055\u308c\u305f\u624b\u66f8\u304d\u753b\u50cf\u304c\u3001\u3042\u308b\u7279\u5b9a\u306e\u30e9\u30d9\u30eb\u306b\u8a72\u5f53\u3059\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\n\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u78ba\u7387\u306b\u5909\u63db\u3059\u308b\n\n\u4eca\u56de\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u304c\u7279\u5b9a\u306e\u30e9\u30d9\u30eb\u306b\u8a72\u5f53\u3059\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u5408\u8a08\u3059\u308b\u305f\u3081\u306b\u3001\u30d4\u30af\u30bb\u30eb\u5f37\u5ea6\u306e\u91cd\u307f\u4ed8\u304d\u548c\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\u6b21\u306e\u56f3\u306f\u3001\u3042\u308b\u30e2\u30c7\u30eb\u304c\u3001\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3057\u305f\u91cd\u307f\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u8d64\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f37\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3001\u9752\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f31\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u30d0\u30a4\u30a2\u30b9\u3068\u547c\u3070\u308c\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5165\u529b\u306b\u3088\u3089\u305a\u8a72\u5f53\u78ba\u7387\u304c\u9ad8\u3044\u3068\u3044\u3046\u30b1\u30fc\u30b9\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\nSoftmax\u56de\u5e30\u306e\u5f0f\n\u4e0e\u3048\u3089\u308c\u305f\u5165\u529b xx \u304c\u30e9\u30d9\u30eb ii \u306b\u8a72\u5f53\u3059\u308b\u3068\u3044\u3046\u30a8\u30d3\u30c7\u30f3\u30b9\u306f\u3001\u6b21\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\\text{evidence}_i = \\sum_j W_{i,~ j} x_j + b_i \\tag{3.1}\nevidencei=\u2211jWi,\u00a0jxj+bi(3.1){\\text{evidence}_i = \\sum_j W_{i,~ j} x_j + b_i \\tag{3.1}\n}\n\nWiW_i : \u91cd\u307f\nbib_i : \u30e9\u30d9\u30eb ii \u306e\u30d0\u30a4\u30a2\u30b9\njj : \u5165\u529b\u753b\u50cf xx \u5185\u306e\u30d4\u30af\u30bb\u30eb\u3092\u52a0\u7b97\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\nSoftmax\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30a8\u30d3\u30c7\u30f3\u30b9\u306e\u5408\u8a08\u3092\u4e88\u6e2c\u78ba\u7387 yy \u306b\u5909\u63db\u3057\u307e\u3059\u3002\ny = \\text{softmax}(\\text{evidence}) \\tag{3.2}\ny=softmax(evidence)(3.2){y = \\text{softmax}(\\text{evidence}) \\tag{3.2}\n}\n\u3053\u3053\u3067Softmax\u95a2\u6570\u306f\u3001\u7dda\u5f62\u95a2\u6570\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6574\u5f62\u3059\u308b\u305f\u3081\u306e\u6d3b\u6027\u5316\u95a2\u6570\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nSoftmax\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u6b21\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\\text{softmax}(x) = \\text{normalize}(\\exp(x)) \\tag{3.3}\nsoftmax(x)=normalize(exp(x))(3.3){\\text{softmax}(x) = \\text{normalize}(\\exp(x)) \\tag{3.3}\n}\n\u5f0f\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\\text{softmax}(x)_i = \\frac{\\exp(x_i)}{\\sum_j \\exp(x_j)} \\tag{3.4}\nsoftmax(x)i=exp(xi)\u2211jexp(xj)(3.4){\\text{softmax}(x)_i = \\frac{\\exp(x_i)}{\\sum_j \\exp(x_j)} \\tag{3.4}\n}\n\u76f4\u611f\u7684\u306b\u306f(3.3)\u5f0f\u306e\u5f62\u3067\u8003\u3048\u308b\u306e\u304c\u4e00\u756a\u7406\u89e3\u3057\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nSoftmax\u56de\u5e30\u306f\u3001\u6b21\u56f3\u3067\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u5b9f\u969b\u306e xx \u306f\u66f4\u306b\u591a\u3044\u3067\u3059\uff09\u3002\u5165\u529b xx \u306b\u5bfe\u3057\u3066\u91cd\u307f\u4ed8\u304d\u548c\u3092\u8a08\u7b97\u3057\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001Softmax\u95a2\u6570\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n\u65b9\u7a0b\u5f0f\u3067\u66f8\u304f\u3068\u6b21\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u624b\u7d9a\u304d\u3092\u884c\u5217\u306e\u4e57\u7b97\u3068\u30d9\u30af\u30c8\u30eb\u306e\u52a0\u7b97\u306b\u5909\u3048\u308b\u3053\u3068\u3067\u3001\u30d9\u30af\u30c8\u30eb\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u7c21\u5358\u306b\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\ny=softmax(Wx+b)(3.5) y = \\text{softmax}(Wx + b) \\tag{3.5} \n\nSoftmax\u56de\u5e30\u306e\u5b9f\u88c5\n\u307e\u305a\u306f\u5165\u529b xx \u3092\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u306a\u5909\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nx = tf.placeholder(\"float\",[None,784])\n\nx\u306f\u7279\u5b9a\u306e\u5024\u3067\u306f\u306a\u304f\u3001placeholder\u3068\u547c\u3070\u308c\u307e\u3059\u3002TensorFlow\u306b\u8a08\u7b97\u3092\u4f9d\u983c\u3059\u308b\u3068\u304d\u306b\u5165\u529b\u3059\u308b\u5024\u3067\u3059\u3002\u624b\u66f8\u304d\u753b\u50cf\u306f784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u3059\u304b\u3089\u3001\u3053\u308c\u3092[None, 784]\u306e2\u6b21\u5143\u30c6\u30f3\u30bd\u30eb\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001weight\u3084biases\u306e\u5b9a\u7fa9\u306b\u306fVariable\u3092\u5229\u7528\u3057\u307e\u3059\u3002Variable\u306f\u5909\u66f4\u53ef\u80fd\u306a\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n\n\u5909\u6570\u304c\u63c3\u3044\u307e\u3057\u305f\u3002\u6b21\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\ny = tf.nn.softmax(tf.matmul(x,W)+b)\n\n \u4f59\u88d5\u304c\u3042\u308c\u3070\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n4. \u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u3088\u3046\n\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u306e\u826f\u3055\u3092\u5b9a\u91cf\u7684\u306b\u8a55\u4fa1\u3059\u308b\u305f\u3081\u3001\u8aa4\u5dee\u95a2\u6570\uff08\u5225\u540d\uff1a\u30b3\u30b9\u30c8\u95a2\u6570\u3001\u640d\u5931\u95a2\u6570\uff09\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3068\u547c\u3070\u308c\u308b\u8aa4\u5dee\u95a2\u6570\u3092\u7528\u3044\u307e\u3059\u3002\n\n\u8a13\u7df4\u65b9\u6cd5\u306e\u89e3\u8aac\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u30012\u3064\u306e\u78ba\u7387\u5206\u5e03\u306e\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001\u300c\u4e88\u6e2c\u3055\u308c\u305f\u30e9\u30d9\u30eb\u300d\u300c\u6b63\u89e3\u30e9\u30d9\u30eb\u300d\u306e2\u3064\u306e\u78ba\u7387\u5206\u5e03\u304c\u3042\u308a\u307e\u3059\u304b\u3089\u3001\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u304c\u5229\u7528\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\nH_{y'}(y) = -\\sum_i y'_i \\log(y_i)\nHy\u2032(y)=\u2212\u2211iy\u2032ilog(yi){H_{y'}(y) = -\\sum_i y'_i \\log(y_i)\n}\n\u3053\u3053\u3067\u3001 yy \u306f\u4eca\u56de\u4e88\u6e2c\u3057\u305f\u7d50\u679c\u306e\u78ba\u7387\u5206\u5e03\u3067\u3001 y\u2032y' \u304c\u771f\u306e\u5206\u5e03\u3067\u3059\u3002\n\n\u8a13\u7df4\u65b9\u6cd5\u306e\u5b9f\u88c5\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u307e\u305a\u306f\u6b63\u89e3\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3059\u308b\u305f\u3081\u306eplaceholder\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\ny_ = tf.placeholder(\"float\",[None,10])\n\n\u6b21\u306e\u3088\u3046\u306b\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\n\n\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nlearning_rate = 0.01\ntrain_step = tf.train.GradientDescentOptimizer(learning_rate).minimize(cross_entropy)\n\n Optimizer\u3084learning_rate\u3092\u5dee\u3057\u66ff\u3048\u3066\u3001\u52d5\u4f5c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5f8c\u306e\u5206\u985e\u7cbe\u5ea6\u306b\u3082\u5f71\u97ff\u3059\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n\n5. \u30e2\u30c7\u30eb\u3092\u5b9f\u969b\u306b\u8a13\u7df4\u3057\u3088\u3046\n\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u305f\u3089\u3001\u3044\u3088\u3044\u3088\u5b9f\u969b\u306b\u8a13\u7df4\u3092\u884c\u3044\u307e\u3059\u3002\n\u8a13\u7df4\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u3001\u3053\u3053\u307e\u3067\u306b\u5b9a\u7fa9\u3057\u305f\u5909\u6570\u3092\u521d\u671f\u5316\u3059\u308b\u305f\u3081\u306e\u547d\u4ee4\u3092\u4f5c\u6210\u3057\u307e\u3059(\u307e\u3060\u5b9f\u884c\u306f\u3055\u308c\u307e\u305b\u3093)\u3002\ninit = tf.initialize_all_variables()\n\nTensorFlow\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u3001\u5909\u6570\u3092\u521d\u671f\u5316\u3059\u308b\u305f\u3081\u306e\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001TensorFlow\u306e\u30b3\u30fc\u30c9\u3092Jupyter\u4e0a\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u5b9f\u884c\u3059\u308b\u305f\u3081\u3001tf.InteractiveSession()\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nsess = tf.InteractiveSession()\nsess.run(init)\n\n\u8a13\u7df4\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u8a13\u7df4\u30921,000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n \u6ce8\u610f\uff1a\u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u518d\u5ea6\u8a13\u7df4\u3092\u884c\u3046\u5834\u5408\u306f\u3001\u6bce\u56de tf.initialize_all_variables() \u3092\u547c\u3093\u3067\u3001\u5b66\u7fd2\u6e08\u307f\u306e\u5909\u6570\u3092\u521d\u671f\u5316\u3057\u3066\u304b\u3089\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044 \n# \u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bf\nn_train = 1000\nn_batch = 100\n\n# \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nfig, ax = plt.subplots(1, 1, figsize=(15, 5))\nxvalues = np.arange(n_train)\nyvalues = np.zeros(n_train)\nlines, = ax.plot(xvalues, yvalues, label=\"cross_entropy\")\n\nfor i in range(n_train):\n\n    # \u30d0\u30c3\u30c1\u5b66\u7fd2\n    batch_xs, batch_ys = mnist.train.next_batch(n_batch)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n\n    # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\n    yvalues[i] = cross_entropy.eval(feed_dict={x: mnist.test.images[0:100], y_: mnist.test.labels[0:100]})\n    lines.set_data(xvalues, yvalues)\n    ax.set_ylim((yvalues.min(), yvalues.max()))\n    plt.legend()\n    plt.pause(.00001)\n\n\n \u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bfn_train\u3084n_batch\u306e\u5024\u3092\u5909\u3048\u3066\u3001\u52d5\u4f5c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5f8c\u306e\u5206\u985e\u7cbe\u5ea6\u306b\u3082\u5f71\u97ff\u3059\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n\u30eb\u30fc\u30d7\u306e\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089100\u500b\u306e\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\uff08\u30d0\u30c3\u30c1\uff09\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u306e\u5c0f\u3055\u306a\u30d0\u30c3\u30c1\u3092\u4f7f\u3046\u624b\u6cd5\u3092\u78ba\u7387\u7684\u8a13\u7df4\u3068\u547c\u3073\u3001\u4eca\u56de\u306f\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5\u306b\u306a\u308a\u307e\u3059\u3002\n\n6. \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3057\u3088\u3046\nTensorFlow\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u3001\u5b9f\u969b\u306e\u8a55\u4fa1\u7d50\u679c\u3092\u6b21\u306e\u3088\u3046\u306b\u5c0e\u51fa\u3057\u307e\u3059\u3002\n\n\ntf.argmax(y,1) : \u6700\u3082\u78ba\u304b\u3089\u3057\u3044\u30e9\u30d9\u30eb\n\ntf.argmax(y_,1) : \u6b63\u89e3\u30e9\u30d9\u30eb\n\n\u3053\u308c\u3089\u3092\u5143\u306b\u3001\u6b63\u89e3\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\ncorrect_prediction = tf.equal(tf.argmax(y,1),tf.argmax(y_,1))\n\ncorrect_prediction\u306fbool\u5024\u306e\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002\u6b63\u89e3\u7387\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u3001float\u5024\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u5e73\u5747\u5024\u3092\u53d6\u308a\u307e\u3059\u3002\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\nprint(sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels}))\n\n0.9123\n\n\u6b63\u89e3\u7387\u306f91%\u7a0b\u5ea6\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u300c\u6b63\u89e3\u7387\uff08accuracy\uff09\u300d\u3068\u3044\u3046\u306e\u306f\u53b3\u5bc6\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u7cbe\u5ea6\u6307\u6a19\u3067\u3059\u3002\u985e\u4f3c\u306e\u7cbe\u5ea6\u6307\u6a19\u3068\u6df7\u540c\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\n\n\u305d\u308d\u305d\u308d\u672c\u6c17\u3067\u6a5f\u68b0\u5b66\u7fd2\u306e\u8a55\u4fa1\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3059\u308b\u3088 - Web\u5c31\u6d3b\u65e5\u8a18\n\n\u3055\u3066\u3001\u5b66\u7fd2\u3055\u308c\u305fWW\u306e\u4e2d\u8eab\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\u3002\u5de6\u4e0a\u304b\u3089\u9806\u306b0~9\u307e\u3067\u4e26\u3093\u3067\u3044\u307e\u3059\u3002\u8d64\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f37\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3001\u9752\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f31\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\nw = W.eval().T\nfig = plt.figure(figsize=(10, 4))\n\nfor i in range(10):\n    ax = fig.add_subplot(2, 5, i + 1)\n    ax.imshow(w[i].reshape([28, 28]), cmap=\"seismic\")\n\n\n colormap\u3092\u5909\u3048\u308b\u3068\u8272\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n7. \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5206\u985e\u3057\u3066\u307f\u3088\u3046\n\u30e2\u30c7\u30eb\u306b\u624b\u66f8\u304d\u753b\u50cf\u3092\u4e0e\u3048\u3066\u3001\u5206\u985e\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n# \u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nindex_test_image = 2\n\n# \u5206\u985e\nresult = y.eval(feed_dict={x: [mnist.test.images[index_test_image]]})\n\n# \u63cf\u753b\u306e\u6e96\u5099\nfig = plt.figure(figsize=(8, 6))\n\n# \u30c6\u30b9\u30c8\u753b\u50cf\u3092\u63cf\u753b\nax0 = fig.add_subplot(2, 1, 1)\nax0.imshow(mnist.test.images[index_test_image].reshape([28, 28]))\n\n# \u5206\u985e\u7d50\u679c\u3092\u63cf\u753b\nax1 = fig.add_subplot(2, 1, 2)\nax1.imshow(result)\n\n\n\u8a72\u5f53\u3059\u308b\u6570\u5b57\u306e\u90e8\u5206\u304c\u767d\u304f\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n \u4e0e\u3048\u308b\u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5206\u985e\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n \u3069\u306e\u6570\u5b57\u306e\u5206\u985e\u7cbe\u5ea6\u304c\u4e00\u756a\u9ad8\u3044\u304b\uff08\u4f4e\u3044\u304b\uff09\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306a\u3069\u3092\u4f5c\u3063\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\nNotebook\u4e0a\u3067\u8272\u3005\u3068\u30b3\u30fc\u30c9\u3092\u3044\u3058\u3063\u3066\u7406\u89e3\u3092\u6df1\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u53c2\u8003\u6587\u732e\n\nMNIST For ML Beginners\nTensorFlow\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - ML\u521d\u5fc3\u8005\u306e\u305f\u3081\u306eMNIST\uff08\u7ffb\u8a33\uff09 - Qiita\nTensorFlow\u3067Deep Neural Networks (3) \u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 - Qiita\n\u843d\u3061\u3053\u307c\u308c\u306a\u3044\u305f\u3081\u306eTensorFlow Tutorial\u30b3\u30fc\u30c9 - Qiita\nVisual Information Theory -- colah's blog\nNeural networks and deep learning\n\n## \u6982\u8981\n\n[![qiita2notebook](http://qiita2notebook.herokuapp.com/images/badge.svg)](http://qiita2notebook.herokuapp.com/convert?url=http%3A%2F%2Fqiita.com%2Foimou%2Fitems%2F4a4258a7f7cc2bd70afe)\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001TensorFlow\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb[\"MNIST For ML Beginners\"](https://www.tensorflow.org/versions/r0.10/tutorials/mnist/beginners/index.html#mnist-for-ml-beginners)\u3092[Jupyter Notebook](https://jupyter.org/)\u3067\u52d5\u304b\u3057\u3066\u307f\u308b\u305f\u3081\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u8a18\u4e8b\u4e0a\u90e8\u306e\u30d0\u30c3\u30b8\u304b\u3089Jupyter Notebook\u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\u305c\u3072Notebook\u5f62\u5f0f\u3067\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308a\u306a\u304c\u3089\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n* [qiita2notebook - Qiita\u306e\u8a18\u4e8b\u3092Jupyter Notebook\u5316\u3057\u3066\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u5b9f\u884c\u3059\u308b - Qiita](http://qiita.com/oimou/items/efcbcc32b2d9cf9297e4)\n\n## \u8a18\u4e8b\u5185\u3067\u4f7f\u3046\u8a18\u53f7\n\n* :bulb: \u3067\u59cb\u307e\u308b\u6587\u7ae0\u306f\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308b\u969b\u306e\u30d2\u30f3\u30c8\u3067\u3059\u3002Jupyter Notebook\u4e0a\u3067\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n* :bangbang: \u3067\u59cb\u307e\u308b\u6587\u7ae0\u306f\u30b3\u30fc\u30c9\u3092\u3044\u3058\u308b\u969b\u306b\u6c17\u3092\u3064\u3051\u308b\u30dd\u30a4\u30f3\u30c8\u3067\u3059\u3002\n\n## \u6e96\u5099\n\n* Python 2.7 (3\u7cfb\u3067\u306f\u52d5\u4f5c\u672a\u78ba\u8a8d)\n* Jupyter Notebook\n* TensorFlow 0.9\u4ee5\u4e0a \uff08MNIST\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u306e\u305f\u3081\uff09\n* Matplotlib\n* Numpy\n\n## 1. \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8aad\u307f\u8fbc\u3082\u3046\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092import\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\n```python\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport tensorflow as tf\nimport numpy as np\n```\n\n## 2. MNIST\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3082\u3046\n\nMNIST\u306f\u3001\u6a5f\u68b0\u5b66\u7fd2\u306a\u3069\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u624b\u66f8\u304d\u6587\u5b57\u306e\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3059\u3002\u6700\u521d\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306b\u5c11\u3057\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n\n```python\nfrom tensorflow.contrib.learn.python.learn.datasets import mnist as mnist_loader\n\nmnist = mnist_loader.read_data_sets(\"MNIST_data/\", one_hot=True)\n```\n\n    Extracting MNIST_data/train-images-idx3-ubyte.gz\n    Extracting MNIST_data/train-labels-idx1-ubyte.gz\n    Extracting MNIST_data/t10k-images-idx3-ubyte.gz\n    Extracting MNIST_data/t10k-labels-idx1-ubyte.gz\n\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306f\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\uff08mnist.train\uff0955,000\u4ef6\u3068\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff08mnist.test\uff095,000\u4ef6\u306b\u5206\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u30e2\u30c7\u30eb\u306e[\u6c4e\u5316\u80fd\u529b](http://ibisforest.org/index.php?%E6%B1%8E%E5%8C%96%E8%83%BD%E5%8A%9B)\u3092\u6e2c\u308b\u305f\u3081\u306b\u3001\u8a13\u7df4\u306b\u5229\u7528\u3057\u306a\u3044\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5206\u3051\u308b\u3068\u3044\u3046\u306e\u304c\u4e00\u822c\u7684\u306a\u624b\u6cd5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5168\u3066\u306eMNIST\u30c7\u30fc\u30bf\u306f\u3001\u624b\u66f8\u304d\u753b\u50cf\u3068\u305d\u308c\u306b\u5bfe\u5fdc\u3059\u308b\u30e9\u30d9\u30eb\u306e\u30c7\u30fc\u30bf\u3001\u306e2\u3064\u306e\u8981\u7d20\u304b\u3089\u6210\u308a\u7acb\u3061\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u624b\u66f8\u304d\u753b\u50cf\u3092xs\u3001\u30e9\u30d9\u30eb\u3092ys\u3068\u547c\u3073\u307e\u3059\u3002\n\n### \u624b\u66f8\u304d\u753b\u50cf\uff08xs\uff09\u306e\u89e3\u8aac\n\n\u3072\u3068\u3064\u306e\u624b\u66f8\u304d\u753b\u50cf\u306f\u3001784\uff0828\u30d4\u30af\u30bb\u30eb \u00d7 28\u30d4\u30af\u30bb\u30eb\uff09\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/MNIST-Matrix.png)\n\nmnist.train.images\u306f\u30c6\u30f3\u30bd\u30eb\uff08n\u6b21\u5143\u914d\u5217\uff09\u3067\u3042\u308a\u300155,000\u500b\u306e784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u683c\u7d0d\u3057\u305f[55000,784]\u306e\u5f62\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/mnist-train-xs.png)\n\n\u5b9f\u969b\u306b\u624b\u66f8\u304d\u753b\u50cf\u3092\u3072\u3068\u3064\u898b\u3066\u307f\u307e\u3059\u3002\n\n\n```python\nplt.imshow(mnist.train.images[0].reshape([28, 28]))\nplt.gray()\n```\n\n![output_9_0.png](https://qiita-image-store.s3.amazonaws.com/0/10905/428a0efd-6c38-a948-0842-bfca39bfd1d8.png)\n\n\n:bulb: \u63cf\u753b\u3059\u308b\u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5225\u306e\u624b\u66f8\u304d\u753b\u50cf\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3092\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n### \u30e9\u30d9\u30eb\uff08ys\uff09\u306e\u89e3\u8aac\n\nMNIST\u306e\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u304c\u3069\u306e\u6570\u5b57\u304b\u3092\u8868\u3059\u30010\u301c9\u306e\u6570\u5b57\u3067\u3059\u3002\u4eca\u56de\u306f\u3001\u30e9\u30d9\u30eb\u3092[one-hot](https://ja.wikipedia.org/wiki/One-hot)\u30d9\u30af\u30c8\u30eb\u306e\u5f62\u5f0f\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u300c3\u300d\u3092\u8868\u3059\u30e9\u30d9\u30eb\u306f[0,0,0,1,0,0,0,0,0,0]\u3068\u306a\u308a\u307e\u3059\u3002\n\nmnist.train.labels\u306f\u300155,000\u500b\u306e10\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3092\u683c\u7d0d\u3057\u305f[55000, 10]\u306e\u5f62\u306e\u914d\u5217\u306b\u306a\u308a\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/mnist-train-ys.png)\n\n\u5b9f\u969b\u306b\u30e9\u30d9\u30eb\u3092\u3072\u3068\u3064\u898b\u3066\u307f\u307e\u3059\u3002\n\n\n```python\nplt.imshow(mnist.train.labels[0].reshape([1, -1]))\nplt.gray()\n```\n\n![output_13_0.png](https://qiita-image-store.s3.amazonaws.com/0/10905/5fdbb24c-f52a-e259-c1dc-e9cc1f461e5f.png)\n\n\n:bulb: \u63cf\u753b\u3059\u308b\u30e9\u30d9\u30eb\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5225\u306e\u30e9\u30d9\u30eb\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3092\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## 3. \u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u3088\u3046\n\n\u4eca\u56de\u306f\u3001[Softmax\u95a2\u6570](http://ibisforest.org/index.php?%E3%82%BD%E3%83%95%E3%83%88%E3%83%9E%E3%83%83%E3%82%AF%E3%82%B9%E9%96%A2%E6%95%B0)\u3092\u7528\u3044\u305f\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n### Softmax\u56de\u5e30\u306e\u89e3\u8aac\n\n\u4eca\u56de\u306e\u30e2\u30c7\u30eb\u306e\u76ee\u6a19\u306f\u3001\u624b\u66f8\u304d\u753b\u50cf\u3092\u898b\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u304c\u3069\u306e\u6570\u5b57\u3067\u3042\u308b\u304b\u78ba\u7387\u3092\u5f97\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u30e2\u30c7\u30eb\u304c\u300c9\u300d\u306e\u624b\u66f8\u304d\u753b\u50cf\u3092\u898b\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u304c80%\u306e\u78ba\u7387\u3067\u300c9\u300d\u3067\u3042\u308b\u3001\u540c\u6642\u306b5%\u306e\u78ba\u7387\u3067\u300c8\u300d\u3067\u3042\u308b\uff08\u4e0a\u90e8\u306b\u30eb\u30fc\u30d7\u304c\u3042\u308b\u305f\u3081\uff09\u3001\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\n\u3053\u308c\u306f\u3001Softmax\u56de\u5e30\u304c\u9069\u3057\u3066\u3044\u308b\u30e6\u30fc\u30b9\u30b1\u30fc\u30b9\u306e\u3072\u3068\u3064\u3067\u3059\u3002\u4f8b\u3048\u3070\u3001\u3044\u304f\u3064\u304b\u306e\u7d50\u679c\u306e\u9078\u629e\u80a2\uff08\u4eca\u56de\u306f10\u901a\u308a\uff09\u304c\u78ba\u7387\u5206\u5e03\u3068\u3057\u3066\u4e0e\u3048\u3089\u308c\u305f\u3068\u304d\u306b\u3001\u305d\u308c\u3089\u306e\u4e2d\u304b\u30891\u3064\u306e\u7d50\u679c\u3092\u9078\u3073\u51fa\u3057\u305f\u3044\u5834\u5408\u306f\u3001Softmax\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3088\u308a\u8907\u96d1\u306a\u30e2\u30c7\u30eb\u3092\u8a13\u7df4\u3059\u308b\u5834\u5408\u3067\u3082\u3001\u6700\u5f8c\u306bSoftmax\u95a2\u6570\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nSoftmax\u56de\u5e30\u306f\u3001\u6b21\u306e2\u3064\u306e\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u306a\u308a\u307e\u3059\u3002\n\n1. \u5165\u529b\u3055\u308c\u305f\u624b\u66f8\u304d\u753b\u50cf\u304c\u3001\u3042\u308b\u7279\u5b9a\u306e\u30e9\u30d9\u30eb\u306b\u8a72\u5f53\u3059\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u8db3\u3057\u5408\u308f\u305b\u308b\n2. \u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u78ba\u7387\u306b\u5909\u63db\u3059\u308b\n\n\u4eca\u56de\u306f\u3001\u4e0e\u3048\u3089\u308c\u305f\u753b\u50cf\u304c\u7279\u5b9a\u306e\u30e9\u30d9\u30eb\u306b\u8a72\u5f53\u3059\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u5408\u8a08\u3059\u308b\u305f\u3081\u306b\u3001\u30d4\u30af\u30bb\u30eb\u5f37\u5ea6\u306e\u91cd\u307f\u4ed8\u304d\u548c\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\u6b21\u306e\u56f3\u306f\u3001\u3042\u308b\u30e2\u30c7\u30eb\u304c\u3001\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306e\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3057\u305f\u91cd\u307f\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\u8d64\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f37\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3001\u9752\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f31\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/softmax-weights.png)\n\n\u307e\u305f\u3001\u30d0\u30a4\u30a2\u30b9\u3068\u547c\u3070\u308c\u308b\u30a8\u30d3\u30c7\u30f3\u30b9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5165\u529b\u306b\u3088\u3089\u305a\u8a72\u5f53\u78ba\u7387\u304c\u9ad8\u3044\u3068\u3044\u3046\u30b1\u30fc\u30b9\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\n#### Softmax\u56de\u5e30\u306e\u5f0f\n\n\u4e0e\u3048\u3089\u308c\u305f\u5165\u529b $x$ \u304c\u30e9\u30d9\u30eb $i$ \u306b\u8a72\u5f53\u3059\u308b\u3068\u3044\u3046\u30a8\u30d3\u30c7\u30f3\u30b9\u306f\u3001\u6b21\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\n```math\n\\text{evidence}_i = \\sum_j W_{i,~ j} x_j + b_i \\tag{3.1}\n```\n\n* $W_i$ : \u91cd\u307f\n* $b_i$ : \u30e9\u30d9\u30eb $i$ \u306e\u30d0\u30a4\u30a2\u30b9\n* $j$ : \u5165\u529b\u753b\u50cf $x$ \u5185\u306e\u30d4\u30af\u30bb\u30eb\u3092\u52a0\u7b97\u3059\u308b\u305f\u3081\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\nSoftmax\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30a8\u30d3\u30c7\u30f3\u30b9\u306e\u5408\u8a08\u3092\u4e88\u6e2c\u78ba\u7387 $y$ \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```math\ny = \\text{softmax}(\\text{evidence}) \\tag{3.2}\n```\n\n\u3053\u3053\u3067Softmax\u95a2\u6570\u306f\u3001\u7dda\u5f62\u95a2\u6570\u306e\u51fa\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6574\u5f62\u3059\u308b\u305f\u3081\u306e[\u6d3b\u6027\u5316\u95a2\u6570](https://ja.wikipedia.org/wiki/%E6%B4%BB%E6%80%A7%E5%8C%96%E9%96%A2%E6%95%B0)\u3068\u3057\u3066\u5229\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nSoftmax\u95a2\u6570\u306e\u5b9a\u7fa9\u306f\u6b21\u5f0f\u3067\u8868\u3055\u308c\u307e\u3059\u3002\n\n```math\n\\text{softmax}(x) = \\text{normalize}(\\exp(x)) \\tag{3.3}\n```\n\n\u5f0f\u3092\u5c55\u958b\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\n\\text{softmax}(x)_i = \\frac{\\exp(x_i)}{\\sum_j \\exp(x_j)} \\tag{3.4}\n```\n\n\u76f4\u611f\u7684\u306b\u306f(3.3)\u5f0f\u306e\u5f62\u3067\u8003\u3048\u308b\u306e\u304c\u4e00\u756a\u7406\u89e3\u3057\u3084\u3059\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nSoftmax\u56de\u5e30\u306f\u3001\u6b21\u56f3\u3067\u8868\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff08\u5b9f\u969b\u306e $x$ \u306f\u66f4\u306b\u591a\u3044\u3067\u3059\uff09\u3002\u5165\u529b $x$ \u306b\u5bfe\u3057\u3066\u91cd\u307f\u4ed8\u304d\u548c\u3092\u8a08\u7b97\u3057\u3001\u30d0\u30a4\u30a2\u30b9\u3092\u52a0\u3048\u3001Softmax\u95a2\u6570\u3092\u9069\u7528\u3057\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/softmax-regression-scalargraph.png)\n\n\u65b9\u7a0b\u5f0f\u3067\u66f8\u304f\u3068\u6b21\u56f3\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/softmax-regression-scalarequation.png)\n\n\u3053\u306e\u624b\u7d9a\u304d\u3092\u884c\u5217\u306e\u4e57\u7b97\u3068\u30d9\u30af\u30c8\u30eb\u306e\u52a0\u7b97\u306b\u5909\u3048\u308b\u3053\u3068\u3067\u3001[\u30d9\u30af\u30c8\u30eb\u5316](https://ja.wikipedia.org/wiki/%E3%83%99%E3%82%AF%E3%83%88%E3%83%AB%E5%8C%96)\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n![\u56f3](https://www.tensorflow.org/versions/master/images/softmax-regression-vectorequation.png)\n\n\u7c21\u5358\u306b\u66f8\u304f\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n$$ y = \\text{softmax}(Wx + b) \\tag{3.5} $$\n\n### Softmax\u56de\u5e30\u306e\u5b9f\u88c5\n\n\u307e\u305a\u306f\u5165\u529b $x$ \u3092\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u306a\u5909\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n```python\nx = tf.placeholder(\"float\",[None,784])\n```\n\nx\u306f\u7279\u5b9a\u306e\u5024\u3067\u306f\u306a\u304f\u3001placeholder\u3068\u547c\u3070\u308c\u307e\u3059\u3002TensorFlow\u306b\u8a08\u7b97\u3092\u4f9d\u983c\u3059\u308b\u3068\u304d\u306b\u5165\u529b\u3059\u308b\u5024\u3067\u3059\u3002\u624b\u66f8\u304d\u753b\u50cf\u306f784\u6b21\u5143\u30d9\u30af\u30c8\u30eb\u3067\u3059\u304b\u3089\u3001\u3053\u308c\u3092[None, 784]\u306e2\u6b21\u5143\u30c6\u30f3\u30bd\u30eb\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001weight\u3084biases\u306e\u5b9a\u7fa9\u306b\u306fVariable\u3092\u5229\u7528\u3057\u307e\u3059\u3002Variable\u306f\u5909\u66f4\u53ef\u80fd\u306a\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002\n\n\n```python\nW = tf.Variable(tf.zeros([784,10]))\nb = tf.Variable(tf.zeros([10]))\n```\n\n\u5909\u6570\u304c\u63c3\u3044\u307e\u3057\u305f\u3002\u6b21\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n```python\ny = tf.nn.softmax(tf.matmul(x,W)+b)\n```\n\n:bulb: \u4f59\u88d5\u304c\u3042\u308c\u3070\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3\u306e\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## 4. \u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u3088\u3046\n\n\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u306e\u826f\u3055\u3092\u5b9a\u91cf\u7684\u306b\u8a55\u4fa1\u3059\u308b\u305f\u3081\u3001\u8aa4\u5dee\u95a2\u6570\uff08\u5225\u540d\uff1a\u30b3\u30b9\u30c8\u95a2\u6570\u3001\u640d\u5931\u95a2\u6570\uff09\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001[\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc](https://ja.wikipedia.org/wiki/%E4%BA%A4%E5%B7%AE%E3%82%A8%E3%83%B3%E3%83%88%E3%83%AD%E3%83%94%E3%83%BC)\u3068\u547c\u3070\u308c\u308b\u8aa4\u5dee\u95a2\u6570\u3092\u7528\u3044\u307e\u3059\u3002\n\n### \u8a13\u7df4\u65b9\u6cd5\u306e\u89e3\u8aac\n\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u30012\u3064\u306e\u78ba\u7387\u5206\u5e03\u306e\u9593\u306b\u5b9a\u7fa9\u3055\u308c\u308b\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3067\u3059\u3002\n\u4eca\u56de\u306f\u3001\u300c\u4e88\u6e2c\u3055\u308c\u305f\u30e9\u30d9\u30eb\u300d\u300c\u6b63\u89e3\u30e9\u30d9\u30eb\u300d\u306e2\u3064\u306e\u78ba\u7387\u5206\u5e03\u304c\u3042\u308a\u307e\u3059\u304b\u3089\u3001\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u304c\u5229\u7528\u3067\u304d\u308b\u306e\u3067\u3059\u3002\n\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306f\u6b21\u5f0f\u3067\u5b9a\u7fa9\u3055\u308c\u307e\u3059\u3002\n\n```math\nH_{y'}(y) = -\\sum_i y'_i \\log(y_i)\n```\n\n\u3053\u3053\u3067\u3001 $y$ \u306f\u4eca\u56de\u4e88\u6e2c\u3057\u305f\u7d50\u679c\u306e\u78ba\u7387\u5206\u5e03\u3067\u3001 $y'$ \u304c\u771f\u306e\u5206\u5e03\u3067\u3059\u3002\n\n### \u8a13\u7df4\u65b9\u6cd5\u306e\u5b9f\u88c5\n\n\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u3001\u307e\u305a\u306f\u6b63\u89e3\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3059\u308b\u305f\u3081\u306eplaceholder\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n```python\ny_ = tf.placeholder(\"float\",[None,10])\n```\n\n\u6b21\u306e\u3088\u3046\u306b\u4ea4\u5dee\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n```python\ncross_entropy = -tf.reduce_sum(y_*tf.log(y))\n```\n\n\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n```python\nlearning_rate = 0.01\ntrain_step = tf.train.GradientDescentOptimizer(learning_rate).minimize(cross_entropy)\n```\n\n:bulb: [Optimizer](http://www.tensorflow.org/api_docs/python/train.html#optimizers)\u3084learning_rate\u3092\u5dee\u3057\u66ff\u3048\u3066\u3001\u52d5\u4f5c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5f8c\u306e\u5206\u985e\u7cbe\u5ea6\u306b\u3082\u5f71\u97ff\u3059\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n\n## 5. \u30e2\u30c7\u30eb\u3092\u5b9f\u969b\u306b\u8a13\u7df4\u3057\u3088\u3046\n\n\u8a13\u7df4\u65b9\u6cd5\u3092\u5b9a\u7fa9\u3057\u305f\u3089\u3001\u3044\u3088\u3044\u3088\u5b9f\u969b\u306b\u8a13\u7df4\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u8a13\u7df4\u3092\u958b\u59cb\u3059\u308b\u524d\u306b\u3001\u3053\u3053\u307e\u3067\u306b\u5b9a\u7fa9\u3057\u305f\u5909\u6570\u3092\u521d\u671f\u5316\u3059\u308b\u305f\u3081\u306e\u547d\u4ee4\u3092\u4f5c\u6210\u3057\u307e\u3059(\u307e\u3060\u5b9f\u884c\u306f\u3055\u308c\u307e\u305b\u3093)\u3002\n\n\n```python\ninit = tf.initialize_all_variables()\n```\n\nTensorFlow\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3057\u3001\u5909\u6570\u3092\u521d\u671f\u5316\u3059\u308b\u305f\u3081\u306e\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u3001TensorFlow\u306e\u30b3\u30fc\u30c9\u3092Jupyter\u4e0a\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u306b\u5b9f\u884c\u3059\u308b\u305f\u3081\u3001`tf.InteractiveSession()`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```python\nsess = tf.InteractiveSession()\nsess.run(init)\n```\n\n\u8a13\u7df4\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u8a13\u7df4\u30921,000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n**:bangbang: \u6ce8\u610f\uff1a\u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u518d\u5ea6\u8a13\u7df4\u3092\u884c\u3046\u5834\u5408\u306f\u3001\u6bce\u56de tf.initialize_all_variables() \u3092\u547c\u3093\u3067\u3001\u5b66\u7fd2\u6e08\u307f\u306e\u5909\u6570\u3092\u521d\u671f\u5316\u3057\u3066\u304b\u3089\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044 :bangbang:**\n\n\n```python\n# \u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bf\nn_train = 1000\nn_batch = 100\n\n# \u30b0\u30e9\u30d5\u63cf\u753b\u7528\nfig, ax = plt.subplots(1, 1, figsize=(15, 5))\nxvalues = np.arange(n_train)\nyvalues = np.zeros(n_train)\nlines, = ax.plot(xvalues, yvalues, label=\"cross_entropy\")\n\nfor i in range(n_train):\n\n    # \u30d0\u30c3\u30c1\u5b66\u7fd2\n    batch_xs, batch_ys = mnist.train.next_batch(n_batch)\n    sess.run(train_step, feed_dict={x: batch_xs, y_: batch_ys})\n    \n    # \u30b0\u30e9\u30d5\u63cf\u753b\u7528\n    yvalues[i] = cross_entropy.eval(feed_dict={x: mnist.test.images[0:100], y_: mnist.test.labels[0:100]})\n    lines.set_data(xvalues, yvalues)\n    ax.set_ylim((yvalues.min(), yvalues.max()))\n    plt.legend()\n    plt.pause(.00001)\n```\n\n![output_50_0.png](https://qiita-image-store.s3.amazonaws.com/0/10905/bb2b2a24-bd99-c256-97b1-2bf9a9278b52.png)\n\n\n:bulb: \u8a13\u7df4\u30d1\u30e9\u30e1\u30fc\u30bf`n_train`\u3084`n_batch`\u306e\u5024\u3092\u5909\u3048\u3066\u3001\u52d5\u4f5c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u5f8c\u306e\u5206\u985e\u7cbe\u5ea6\u306b\u3082\u5f71\u97ff\u3059\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u30eb\u30fc\u30d7\u306e\u5404\u30b9\u30c6\u30c3\u30d7\u3067\u3001\u8a13\u7df4\u30c7\u30fc\u30bf\u304b\u3089100\u500b\u306e\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\uff08\u30d0\u30c3\u30c1\uff09\u3092\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u3046\u3057\u305f\u30e9\u30f3\u30c0\u30e0\u30c7\u30fc\u30bf\u306e\u5c0f\u3055\u306a\u30d0\u30c3\u30c1\u3092\u4f7f\u3046\u624b\u6cd5\u3092\u78ba\u7387\u7684\u8a13\u7df4\u3068\u547c\u3073\u3001\u4eca\u56de\u306f[\u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5](https://ja.wikipedia.org/wiki/%E7%A2%BA%E7%8E%87%E7%9A%84%E5%8B%BE%E9%85%8D%E9%99%8D%E4%B8%8B%E6%B3%95)\u306b\u306a\u308a\u307e\u3059\u3002\n\n## 6. \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3057\u3088\u3046\n\nTensorFlow\u306e\u95a2\u6570\u3092\u5229\u7528\u3057\u3001\u5b9f\u969b\u306e\u8a55\u4fa1\u7d50\u679c\u3092\u6b21\u306e\u3088\u3046\u306b\u5c0e\u51fa\u3057\u307e\u3059\u3002\n\n* `tf.argmax(y,1)` : \u6700\u3082\u78ba\u304b\u3089\u3057\u3044\u30e9\u30d9\u30eb\n* `tf.argmax(y_,1)` : \u6b63\u89e3\u30e9\u30d9\u30eb\n\n\u3053\u308c\u3089\u3092\u5143\u306b\u3001\u6b63\u89e3\u7387\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n\n```python\ncorrect_prediction = tf.equal(tf.argmax(y,1),tf.argmax(y_,1))\n```\n\ncorrect_prediction\u306fbool\u5024\u306e\u30c6\u30f3\u30bd\u30eb\u3067\u3059\u3002\u6b63\u89e3\u7387\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u3001float\u5024\u306b\u30ad\u30e3\u30b9\u30c8\u3057\u3066\u5e73\u5747\u5024\u3092\u53d6\u308a\u307e\u3059\u3002\n\n\n```python\naccuracy = tf.reduce_mean(tf.cast(correct_prediction, \"float\"))\n\nprint(sess.run(accuracy, feed_dict={x: mnist.test.images, y_: mnist.test.labels}))\n```\n\n    0.9123\n\n\n\u6b63\u89e3\u7387\u306f91%\u7a0b\u5ea6\u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u300c\u6b63\u89e3\u7387\uff08accuracy\uff09\u300d\u3068\u3044\u3046\u306e\u306f\u53b3\u5bc6\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u7cbe\u5ea6\u6307\u6a19\u3067\u3059\u3002\u985e\u4f3c\u306e\u7cbe\u5ea6\u6307\u6a19\u3068\u6df7\u540c\u3057\u306a\u3044\u3088\u3046\u306b\u6c17\u3092\u3064\u3051\u307e\u3057\u3087\u3046\u3002\n\n* [\u305d\u308d\u305d\u308d\u672c\u6c17\u3067\u6a5f\u68b0\u5b66\u7fd2\u306e\u8a55\u4fa1\u65b9\u6cd5\u306b\u3064\u3044\u3066\u5b66\u7fd2\u3059\u308b\u3088 - Web\u5c31\u6d3b\u65e5\u8a18](http://yut.hatenablog.com/entry/20120910/1347233734)\n\n\u3055\u3066\u3001\u5b66\u7fd2\u3055\u308c\u305f$W$\u306e\u4e2d\u8eab\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3059\u3002\u5de6\u4e0a\u304b\u3089\u9806\u306b0~9\u307e\u3067\u4e26\u3093\u3067\u3044\u307e\u3059\u3002\u8d64\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f37\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3001\u9752\u3044\u90e8\u5206\u304c\u6587\u5b57\u306e\u7279\u5fb4\u3092\u5f31\u3081\u308b\u30d4\u30af\u30bb\u30eb\u3067\u3059\u3002\n\n\n```python\nw = W.eval().T\nfig = plt.figure(figsize=(10, 4))\n\nfor i in range(10):\n    ax = fig.add_subplot(2, 5, i + 1)\n    ax.imshow(w[i].reshape([28, 28]), cmap=\"seismic\")\n```\n\n![output_59_0.png](https://qiita-image-store.s3.amazonaws.com/0/10905/4a078074-0ef7-07c4-a862-bec20d8acae4.png)\n\n:bulb: [colormap](http://matplotlib.org/examples/color/colormaps_reference.html)\u3092\u5909\u3048\u308b\u3068\u8272\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n## 7. \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5206\u985e\u3057\u3066\u307f\u3088\u3046\n\n\u30e2\u30c7\u30eb\u306b\u624b\u66f8\u304d\u753b\u50cf\u3092\u4e0e\u3048\u3066\u3001\u5206\u985e\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n\n```python\n# \u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\nindex_test_image = 2\n\n# \u5206\u985e\nresult = y.eval(feed_dict={x: [mnist.test.images[index_test_image]]})\n\n# \u63cf\u753b\u306e\u6e96\u5099\nfig = plt.figure(figsize=(8, 6))\n\n# \u30c6\u30b9\u30c8\u753b\u50cf\u3092\u63cf\u753b\nax0 = fig.add_subplot(2, 1, 1)\nax0.imshow(mnist.test.images[index_test_image].reshape([28, 28]))\n\n# \u5206\u985e\u7d50\u679c\u3092\u63cf\u753b\nax1 = fig.add_subplot(2, 1, 2)\nax1.imshow(result)\n```\n\n![output_63_1.png](https://qiita-image-store.s3.amazonaws.com/0/10905/9ee3c357-c790-1ef9-6373-18a87b063438.png)\n\n\n\u8a72\u5f53\u3059\u308b\u6570\u5b57\u306e\u90e8\u5206\u304c\u767d\u304f\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u3046\u307e\u304f\u5206\u985e\u3067\u304d\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\uff1f\n\n:bulb: \u4e0e\u3048\u308b\u624b\u66f8\u304d\u753b\u50cf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u5909\u3048\u3066\u3001\u5206\u985e\u7d50\u679c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n:bulb: \u3069\u306e\u6570\u5b57\u306e\u5206\u985e\u7cbe\u5ea6\u304c\u4e00\u756a\u9ad8\u3044\u304b\uff08\u4f4e\u3044\u304b\uff09\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306a\u3069\u3092\u4f5c\u3063\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## \u307e\u3068\u3081\n\nNotebook\u4e0a\u3067\u8272\u3005\u3068\u30b3\u30fc\u30c9\u3092\u3044\u3058\u3063\u3066\u7406\u89e3\u3092\u6df1\u3081\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n## \u53c2\u8003\u6587\u732e\n\n* [MNIST For ML Beginners](https://www.tensorflow.org/versions/r0.10/tutorials/mnist/beginners/index.html#mnist-for-ml-beginners)\n* [TensorFlow\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb - ML\u521d\u5fc3\u8005\u306e\u305f\u3081\u306eMNIST\uff08\u7ffb\u8a33\uff09 - Qiita](http://qiita.com/KojiOhki/items/ff6ae04d6cf02f1b6edf)\n* [TensorFlow\u3067Deep Neural Networks (3) \u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3 - Qiita](http://qiita.com/kumonkumon/items/15dbdb291f3525a3b95b)\n* [\u843d\u3061\u3053\u307c\u308c\u306a\u3044\u305f\u3081\u306eTensorFlow Tutorial\u30b3\u30fc\u30c9 - Qiita](http://qiita.com/TomokIshii/items/92a266b805d7eee02b1d)\n* [Visual Information Theory -- colah's blog](https://colah.github.io/posts/2015-09-Visual-Information/)\n* [Neural networks and deep learning](http://neuralnetworksanddeeplearning.com/chap3.html#softmax)\n"}