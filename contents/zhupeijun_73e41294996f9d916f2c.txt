{"context": " More than 1 year has passed since last update.First add the CoreLocation.framework to the project.\nThen use the following code to get the location:\nimport CoreLocation\n\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    var locationManager:CLLocationManager! = nil\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        locationManager = CLLocationManager()\n        locationManager.delegate = self\n        locationManager.startUpdatingLocation()\n    }\n    func locationManager(manager: CLLocationManager!,\n        didUpdateToLocation newLocation: CLLocation!,   \n        fromLocation oldLocation: CLLocation!) {\n\n        let longitude = newLocation.coordinate.longitude\n        let latitude = newLocation.coordinate.latitude\n\n        longitudeLabel.text = longitude.description\n        latitudeLabel.text = latitude.description\n\n        //If you just want to get once, use this code\n        //to stop the updating location.\n        locationManager.stopUpdatingLocation()\n    }\n}\n\nFirst add the `CoreLocation.framework` to the project.\nThen use the following code to get the location:\n\n```swift\nimport CoreLocation\n\nclass ViewController: UIViewController, CLLocationManagerDelegate {\n\n    var locationManager:CLLocationManager! = nil\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        locationManager = CLLocationManager()\n        locationManager.delegate = self\n        locationManager.startUpdatingLocation()\n    }\n    func locationManager(manager: CLLocationManager!,\n        didUpdateToLocation newLocation: CLLocation!,   \n        fromLocation oldLocation: CLLocation!) {\n\n        let longitude = newLocation.coordinate.longitude\n        let latitude = newLocation.coordinate.latitude\n        \n        longitudeLabel.text = longitude.description\n        latitudeLabel.text = latitude.description\n\n        //If you just want to get once, use this code\n        //to stop the updating location.\n        locationManager.stopUpdatingLocation()\n    }\n}\n```\n", "tags": ["GPS", "location"]}