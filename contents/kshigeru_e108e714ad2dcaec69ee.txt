{"tags": ["Python", "pandas"], "context": " More than 1 year has passed since last update.pandas \u3092\u4f7f\u3046\u3068\u304d\u306e\u5099\u5fd8\u9332\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u3053\u306e\u56de\u7b54\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u3067\u3059\u3002\n\npython - Appending column totals to a Pandas DataFrame - Stack Overflow\n\ndf = pd.concat([df,pd.DataFrame(df.sum(axis=0),columns=['Grand Total']).T])\ndf = pd.concat([df,pd.DataFrame(df.sum(axis=1),columns=['Total'])],axis=1)\n\npandas \u306e\u57fa\u672c\u306f\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b10\u5206\u304f\u3089\u3044\u3067\u8aad\u3081\u308b\u3088\u3046\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n10 Minutes to pandas \u2014 pandas 0.14.1 documentation\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3001\u6c17\u8c61\u5e81\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u904e\u53bb\u306e\u6c17\u8c61\u60c5\u5831\u3092\u4f7f\u3044\u307e\u3059\u3002\u6771\u4eac\u306e\u5929\u6c17\u6982\u6cc1\uff11\u5e74\u5206\uff082013\u5e741\u6708\u301c12\u6708\uff09\u3092\u6708\u3054\u3068\u306b\u96c6\u8a08\u3057\u3001\u884c\u3068\u5217\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\u6c17\u8c61\u5e81|\u904e\u53bb\u306e\u6c17\u8c61\u30c7\u30fc\u30bf\u30fb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\n\u74b0\u5883\u8a2d\u5b9a\npyvenv \u3067\u72ec\u7acb\u3057\u305f Python \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n$ PYVENV_DIR=$HOME/.pyvenv/data-analytics\n$ pyvenv-3.4 $PYVENV_DIR\n$ source $PYVENV_DIR/bin/activate\n$ pip install pandas\n\n\u6c17\u8c61\u5e81\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092 weather-tokyo-2013.csv \u3068\u3057\u307e\u3059\u3002\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u307e\u307e\u3067\u306f pandas \u3067\u6271\u3044\u306b\u304f\u3044\u306e\u3067\u3001\u524d\u51e6\u7406\u3092\u5b9f\u65bd\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u6587\u5b57\u30b3\u30fc\u30c9\u3092 UTF-8 \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u8907\u6570\u884c\u3042\u308b\u30d8\u30c3\u30c0\u30fc\u3092\uff11\u884c\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30d8\u30c3\u30c0\u30fc\u884c\u3092\u82f1\u8a9e\u540d\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n\n\u65e5\u4ed8\u306e\u5217\u3092 \"day\" \u306b\u3057\u307e\u3059\u3002\n\u5929\u6c17\u6982\u6cc1\uff08\u663c\uff09\u306e\u5217\u3092 \"weather_day\" \u306b\u3057\u307e\u3059\u3002\n\n\n\n\npandas \u3067\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306e\u78ba\u8a8d\n>>> import pandas as pd\n\n# Read CSV file, whose \"day\" column is parsed with `dateutil.parser.parse`.\n>>> fname = 'weather-tokyo-2013.csv'\n>>> df = pd.read_csv(fname, parse_dates=['day'])\n\n# Check DataFrame overview.\n>>> df.dtypes\n>>> df.head(3)\n>>> df.describe()\n\nCSV \u30d5\u30a1\u30a4\u30eb\u3092 DataFrame \u306b\u8aad\u307f\u8fbc\u3081\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\u6b21\u306b\u3001\"day\" \u5217\u304b\u3089\u300c\u6708\u300d\u306e\u90e8\u5206\u3092\u62bd\u51fa\u3057\u3066 \"month\" \u5217\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\"day\" \u5217\u306f CSV \u3092\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306b\u65e5\u4ed8\u6642\u523b\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001datetime \u306e API \u304c\u4f7f\u3048\u307e\u3059\u3002\n>>> df['month'] = df['day'].apply(lambda x: x.month)\n\n\ngroupby \u3067\u96c6\u8a08\u3057\u3066\u884c\u3068\u5217\u306e\u5408\u8a08\u5024\u3092\u8ffd\u52a0\nDataFrame \u306b\u306f groupby \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001SQL \u306e \"GROUP BY\" \u306e\u3088\u3046\u306a\u52d5\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4eca\u56de\u306f\u300c\u5929\u6c17\u6982\u6cc1(\u663c)\u300d\u3068\u300c\u6708\u300d\u3067\u65e5\u6570\u3092\u96c6\u8a08\u3057\u3066\u307f\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5feb\u6674\u306e\u6708\u3054\u3068\u306e\u65e5\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n>>> grouped = df.groupby(['weather_day', 'month'])['day'].count()\n>>> type(grouped)\n>>> grouped.index\n>>> grouped.head(3)\n\ngroupby \u306e\u623b\u308a\u5024\u306f Series \u306a\u306e\u3067\u3001 unstack \u30e1\u30bd\u30c3\u30c9\u3067 DataFrame \u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u5192\u982d\u306e\u51e6\u7406\u3067\u884c\u3068\u5217\u306e\u5408\u8a08\u3001\u3053\u306e\u5834\u5408\u306f\u5929\u6c17\u6982\u6cc1\u306e\u6708\u3054\u3068\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n>>> monthly = grouped.unstack()\n\n# Add \"Total\" column on each row.\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly.sum(axis=1), columns=['Total'])],\n                        axis=1)\n# Add \"Grand Total\" row on each column.\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly.sum(axis=0), columns=['Grand Total']).T])\n\n\u5358\u7d14\u306a\u5408\u8a08\u4ee5\u5916\u306b\u3001\u884c\u3084\u5217\u306e\u540d\u79f0\u3067\u30d5\u30a3\u30eb\u30bf\u3057\u3066\u5408\u7b97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5929\u6c17\u6982\u6cc1\u306b\u300c\u96e8\u300d\u304c\u542b\u307e\u308c\u308b\u65e5\u3092\u96e8\u3063\u307d\u3044\u65e5\u3001\u300c\u6674\u300d\u304c\u542b\u307e\u308c\u308b\u65e5\u3092\u6674\u308c\u3063\u307d\u3044\u65e5\u3068\u8003\u3048\u308b\u3068\u3001index \u540d\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\uff08\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u306b\u306f\u300c\u6674\u4e00\u6642\u96e8\u300d\u306e\u3088\u3046\u306a\u5929\u6c17\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u91cd\u8907\u3057\u3066\u96c6\u8a08\u3055\u308c\u3066\u3044\u308b\u65e5\u3082\u3042\u308a\u307e\u3059\u3002\uff09\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly[monthly.index.map(lambda x: '\u96e8' in x)].sum(axis=0), columns=['Rainy']).T])\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly[monthly.index.map(lambda x: '\u6674' in x)].sum(axis=0), columns=['Fine']).T])\n\n\n\u6700\u5f8c\u306b\u3001\u96c6\u8a08\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3084 index \u540d\u306a\u3069\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u533a\u5207\u308a\u6587\u5b57\u306f sep \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n>>> fname = 'weather-tokyo-2013-monthly-weather_name.csv'\n>>> monthly.to_csv(fname, sep=',')\n\n\u3042\u3068\u306f\u7d50\u679c\u3092\u30a8\u30af\u30bb\u30eb\u306a\u3069\u306e\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\nipython \u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30d5\u3092\u63cf\u304f\n\u30a8\u30af\u30bb\u30eb\u3067\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001Python \u3067\u3082 matplotlib \u3092\u4f7f\u3063\u3066\u63cf\u753b\u3067\u304d\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u4f7f\u3063\u3066\u307f\u308b\u5834\u5408\u306f ipython \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\u30b0\u30e9\u30d5\u63cf\u753b\u51e6\u7406\u306e\u96d1\u52d9\u3092\u88cf\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nPlotting \u2014 pandas 0.14.1 documentation\nIPython Interactive Computing\n\n$ pip install matplotlib ipython\n$ ipython\n\n\u3053\u308c\u3067 IPython \u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30b7\u30a7\u30eb\u306b\u5165\u308a\u307e\u3059\u3002\n\u5148\u307b\u3069\u66f8\u304d\u51fa\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6674\u308c\u3063\u307d\u3044\u65e5\u3068\u96e8\u3063\u307d\u3044\u65e5\u306e\u6708\u3054\u3068\u306e\u63a8\u79fb\u3092\u30b0\u30e9\u30d5\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n\nIn [1]: import pandas as pd\n\nIn [2]: pd.options.display.mpl_style = 'default'\n\nIn [3]: fname = 'weather-tokyo-2013-monthly-weather_name.csv'\n\nIn [4]: df = pd.read_csv(fname, index_col=0)\n\nIn [5]: df.T[['Fine', 'Rainy']][:12].plot(color=['r', 'b']).set_xlabel('Month')\nOut[5]: <matplotlib.text.Text at 0x106cb89e8>\n\n\n\n\uff12\u884c\u76ee\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f pandas \u304c matplotlib \u306b\u6e21\u3057\u307e\u3059\u3002\n\nDataFrame \u306e \"T\" \u306f transpose() \u306e\u3053\u3068\u3067\u3001\u884c\u3068\u5217\u3092\u8ee2\u7f6e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n\npandas.DataFrame.transpose \u2014 pandas 0.14.1 documentation\n\n\n\u524d\u306e\u51e6\u7406\u3067\u884c\u3068\u5217\u306b\u306f\u5408\u8a08\u5024\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u300112\u6708\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30b9\u30e9\u30a4\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n\u7cfb\u5217\u3054\u3068\u306b\u8272\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b plot() \u306b color \u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u5217\u6307\u5b9a\u306e\u9806\u756a\u306b\u4e00\u81f4\u3057\u307e\u3059\u306e\u3067\u3001Fine \u304c \"r\" = Red, Rainy \u304c \"b\" = Blue \u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3053\u3093\u306a\u611f\u3058\u306e\u30b0\u30e9\u30d5\u304c\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n6\u6708\u306f\u6885\u96e8\u306a\u306e\u3067\u96e8\u304c\u591a\u304f\uff08\u3068\u8a00\u3063\u3066\u3082\u534a\u5206\u4ee5\u4e0b\u306e\u65e5\u6570\uff09\u30011\u6708\u306f\u96e8\u306e\u65e5\u304c\u307b\u3068\u3093\u3069\u306a\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u300210\u6708\u306f\u5929\u6c17\u304c\u5909\u308f\u308a\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u96e8\u304c\u3071\u3089\u3064\u304f\u65e5\u3088\u308a\u306f\u6674\u308c\u3066\u3044\u308b\u65e5\u306e\u65b9\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\n\u306a\u304a\u3001\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u5909\u52d5\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u8352\u3044\u96c6\u8a08\u6761\u4ef6\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u7d30\u304b\u3044\u5206\u6790\u3092\u3059\u308b\u5834\u5408\u306f\u5929\u6c17\u6982\u6cc1\u306e\u5024\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u3066\u304b\u3089\u96c6\u8a08\u3057\u307e\u3057\u3087\u3046\u3002\n\n*pandas* \u3092\u4f7f\u3046\u3068\u304d\u306e\u5099\u5fd8\u9332\u3068\u3057\u3066\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u3053\u306e\u56de\u7b54\u306b\u66f8\u3044\u3066\u3042\u308b\u3053\u3068\u3067\u3059\u3002\n\n* [python - Appending column totals to a Pandas DataFrame - Stack Overflow](http://stackoverflow.com/questions/20804673/appending-column-totals-to-a-pandas-dataframe)\n\n```python\ndf = pd.concat([df,pd.DataFrame(df.sum(axis=0),columns=['Grand Total']).T])\ndf = pd.concat([df,pd.DataFrame(df.sum(axis=1),columns=['Total'])],axis=1)\n```\n\n*pandas* \u306e\u57fa\u672c\u306f\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b10\u5206\u304f\u3089\u3044\u3067\u8aad\u3081\u308b\u3088\u3046\u306b\u307e\u3068\u3081\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n* [10 Minutes to pandas \u2014 pandas 0.14.1 documentation](http://pandas.pydata.org/pandas-docs/stable/10min.html)\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3001\u6c17\u8c61\u5e81\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u308b\u904e\u53bb\u306e\u6c17\u8c61\u60c5\u5831\u3092\u4f7f\u3044\u307e\u3059\u3002\u6771\u4eac\u306e\u5929\u6c17\u6982\u6cc1\uff11\u5e74\u5206\uff082013\u5e741\u6708\u301c12\u6708\uff09\u3092\u6708\u3054\u3068\u306b\u96c6\u8a08\u3057\u3001\u884c\u3068\u5217\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n[\u6c17\u8c61\u5e81|\u904e\u53bb\u306e\u6c17\u8c61\u30c7\u30fc\u30bf\u30fb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9](http://www.data.jma.go.jp/gmd/risk/obsdl/index.php#)\n\n![\u6c17\u8c61\u5e81 \u904e\u53bb\u306e\u6c17\u8c61\u30c6\u3099\u30fc\u30bf\u30fb\u30bf\u3099\u30a6\u30f3\u30ed\u30fc\u30c8\u3099.png](https://qiita-image-store.s3.amazonaws.com/0/37996/25d84ca9-dee4-8f61-1692-b22d545d57cb.png \"\u6c17\u8c61\u5e81 \u904e\u53bb\u306e\u6c17\u8c61\u30c6\u3099\u30fc\u30bf\u30fb\u30bf\u3099\u30a6\u30f3\u30ed\u30fc\u30c8\u3099.png\")\n\n## \u74b0\u5883\u8a2d\u5b9a\n\n`pyvenv` \u3067\u72ec\u7acb\u3057\u305f Python \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\n$ PYVENV_DIR=$HOME/.pyvenv/data-analytics\n$ pyvenv-3.4 $PYVENV_DIR\n$ source $PYVENV_DIR/bin/activate\n$ pip install pandas\n```\n\n\u6c17\u8c61\u5e81\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092 `weather-tokyo-2013.csv` \u3068\u3057\u307e\u3059\u3002\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u307e\u307e\u3067\u306f *pandas* \u3067\u6271\u3044\u306b\u304f\u3044\u306e\u3067\u3001\u524d\u51e6\u7406\u3092\u5b9f\u65bd\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n* \u6587\u5b57\u30b3\u30fc\u30c9\u3092 UTF-8 \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n* \u8907\u6570\u884c\u3042\u308b\u30d8\u30c3\u30c0\u30fc\u3092\uff11\u884c\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n* \u30d8\u30c3\u30c0\u30fc\u884c\u3092\u82f1\u8a9e\u540d\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n    * \u65e5\u4ed8\u306e\u5217\u3092 \"day\" \u306b\u3057\u307e\u3059\u3002\n    * \u5929\u6c17\u6982\u6cc1\uff08\u663c\uff09\u306e\u5217\u3092 \"weather_day\" \u306b\u3057\u307e\u3059\u3002\n\n## pandas \u3067\u30c7\u30fc\u30bf\u8aad\u307f\u8fbc\u307f\u306e\u78ba\u8a8d\n\n```python\n>>> import pandas as pd\n\n# Read CSV file, whose \"day\" column is parsed with `dateutil.parser.parse`.\n>>> fname = 'weather-tokyo-2013.csv'\n>>> df = pd.read_csv(fname, parse_dates=['day'])\n\n# Check DataFrame overview.\n>>> df.dtypes\n>>> df.head(3)\n>>> df.describe()\n```\n\nCSV \u30d5\u30a1\u30a4\u30eb\u3092 *DataFrame* \u306b\u8aad\u307f\u8fbc\u3081\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u3001\"day\" \u5217\u304b\u3089\u300c\u6708\u300d\u306e\u90e8\u5206\u3092\u62bd\u51fa\u3057\u3066 \"month\" \u5217\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\"day\" \u5217\u306f CSV \u3092\u8aad\u307f\u8fbc\u3080\u3068\u304d\u306b\u65e5\u4ed8\u6642\u523b\u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001datetime \u306e API \u304c\u4f7f\u3048\u307e\u3059\u3002\n\n```python\n>>> df['month'] = df['day'].apply(lambda x: x.month)\n```\n\n\n## groupby \u3067\u96c6\u8a08\u3057\u3066\u884c\u3068\u5217\u306e\u5408\u8a08\u5024\u3092\u8ffd\u52a0\n\n*DataFrame* \u306b\u306f `groupby` \u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u3001SQL \u306e \"GROUP BY\" \u306e\u3088\u3046\u306a\u52d5\u4f5c\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4eca\u56de\u306f\u300c\u5929\u6c17\u6982\u6cc1(\u663c)\u300d\u3068\u300c\u6708\u300d\u3067\u65e5\u6570\u3092\u96c6\u8a08\u3057\u3066\u307f\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u5feb\u6674\u306e\u6708\u3054\u3068\u306e\u65e5\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n```python\n>>> grouped = df.groupby(['weather_day', 'month'])['day'].count()\n>>> type(grouped)\n>>> grouped.index\n>>> grouped.head(3)\n```\n\n`groupby` \u306e\u623b\u308a\u5024\u306f *Series* \u306a\u306e\u3067\u3001 `unstack` \u30e1\u30bd\u30c3\u30c9\u3067 *DataFrame* \u306b\u5909\u63db\u3057\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u5192\u982d\u306e\u51e6\u7406\u3067\u884c\u3068\u5217\u306e\u5408\u8a08\u3001\u3053\u306e\u5834\u5408\u306f\u5929\u6c17\u6982\u6cc1\u306e\u6708\u3054\u3068\u306e\u5408\u8a08\u3092\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\n\n```python\n>>> monthly = grouped.unstack()\n\n# Add \"Total\" column on each row.\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly.sum(axis=1), columns=['Total'])],\n                        axis=1)\n# Add \"Grand Total\" row on each column.\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly.sum(axis=0), columns=['Grand Total']).T])\n```\n\n\u5358\u7d14\u306a\u5408\u8a08\u4ee5\u5916\u306b\u3001\u884c\u3084\u5217\u306e\u540d\u79f0\u3067\u30d5\u30a3\u30eb\u30bf\u3057\u3066\u5408\u7b97\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u5929\u6c17\u6982\u6cc1\u306b\u300c\u96e8\u300d\u304c\u542b\u307e\u308c\u308b\u65e5\u3092\u96e8\u3063\u307d\u3044\u65e5\u3001\u300c\u6674\u300d\u304c\u542b\u307e\u308c\u308b\u65e5\u3092\u6674\u308c\u3063\u307d\u3044\u65e5\u3068\u8003\u3048\u308b\u3068\u3001index \u540d\u3092\u4f7f\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a08\u7b97\u3067\u304d\u307e\u3059\u3002\uff08\u5b9f\u969b\u306e\u30c7\u30fc\u30bf\u306b\u306f\u300c\u6674\u4e00\u6642\u96e8\u300d\u306e\u3088\u3046\u306a\u5929\u6c17\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u91cd\u8907\u3057\u3066\u96c6\u8a08\u3055\u308c\u3066\u3044\u308b\u65e5\u3082\u3042\u308a\u307e\u3059\u3002\uff09\n\n```python\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly[monthly.index.map(lambda x: '\u96e8' in x)].sum(axis=0), columns=['Rainy']).T])\n>>> monthly = pd.concat([monthly,\n                         pd.DataFrame(monthly[monthly.index.map(lambda x: '\u6674' in x)].sum(axis=0), columns=['Fine']).T])\n\n```\n\n\u6700\u5f8c\u306b\u3001\u96c6\u8a08\u7d50\u679c\u3092\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u51fa\u3057\u307e\u3059\u3002\u30d8\u30c3\u30c0\u30fc\u3084 index \u540d\u306a\u3069\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u5f15\u6570\u3067\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\u305f\u3068\u3048\u3070\u3001\u533a\u5207\u308a\u6587\u5b57\u306f *sep* \u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```python\n>>> fname = 'weather-tokyo-2013-monthly-weather_name.csv'\n>>> monthly.to_csv(fname, sep=',')\n```\n\n\u3042\u3068\u306f\u7d50\u679c\u3092\u30a8\u30af\u30bb\u30eb\u306a\u3069\u306e\u8868\u8a08\u7b97\u30bd\u30d5\u30c8\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n## ipython \u3092\u4f7f\u3063\u3066\u30b0\u30e9\u30d5\u3092\u63cf\u304f\n\n\u30a8\u30af\u30bb\u30eb\u3067\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u3044\u3066\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001Python \u3067\u3082 *matplotlib* \u3092\u4f7f\u3063\u3066\u63cf\u753b\u3067\u304d\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u4f7f\u3063\u3066\u307f\u308b\u5834\u5408\u306f *ipython* \u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\u30b0\u30e9\u30d5\u63cf\u753b\u51e6\u7406\u306e\u96d1\u52d9\u3092\u88cf\u3067\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n* [Plotting \u2014 pandas 0.14.1 documentation](http://pandas.pydata.org/pandas-docs/stable/visualization.html)\n* [IPython Interactive Computing](http://ipython.org/)\n\n```bash\n$ pip install matplotlib ipython\n$ ipython\n```\n\n\u3053\u308c\u3067 IPython \u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30b7\u30a7\u30eb\u306b\u5165\u308a\u307e\u3059\u3002\n\u5148\u307b\u3069\u66f8\u304d\u51fa\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6674\u308c\u3063\u307d\u3044\u65e5\u3068\u96e8\u3063\u307d\u3044\u65e5\u306e\u6708\u3054\u3068\u306e\u63a8\u79fb\u3092\u30b0\u30e9\u30d5\u306b\u63cf\u753b\u3057\u307e\u3059\u3002\n\n```ipython\n\nIn [1]: import pandas as pd\n\nIn [2]: pd.options.display.mpl_style = 'default'\n\nIn [3]: fname = 'weather-tokyo-2013-monthly-weather_name.csv'\n\nIn [4]: df = pd.read_csv(fname, index_col=0)\n\nIn [5]: df.T[['Fine', 'Rainy']][:12].plot(color=['r', 'b']).set_xlabel('Month')\nOut[5]: <matplotlib.text.Text at 0x106cb89e8>\n\n```\n\n* \uff12\u884c\u76ee\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f *pandas* \u304c *matplotlib* \u306b\u6e21\u3057\u307e\u3059\u3002\n* *DataFrame* \u306e \"T\" \u306f `transpose()` \u306e\u3053\u3068\u3067\u3001\u884c\u3068\u5217\u3092\u8ee2\u7f6e\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\t* [pandas.DataFrame.transpose \u2014 pandas 0.14.1 documentation](http://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.transpose.html)\n* \u524d\u306e\u51e6\u7406\u3067\u884c\u3068\u5217\u306b\u306f\u5408\u8a08\u5024\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u300112\u6708\u307e\u3067\u306e\u30c7\u30fc\u30bf\u3092\u30b9\u30e9\u30a4\u30b9\u3057\u3066\u3044\u307e\u3059\u3002\n* \u7cfb\u5217\u3054\u3068\u306b\u8272\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306b `plot()` \u306b `color` \u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u5217\u6307\u5b9a\u306e\u9806\u756a\u306b\u4e00\u81f4\u3057\u307e\u3059\u306e\u3067\u3001Fine \u304c \"r\" = Red, Rainy \u304c \"b\" = Blue \u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u5225\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u3053\u3093\u306a\u611f\u3058\u306e\u30b0\u30e9\u30d5\u304c\u63cf\u753b\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n![\u6708\u5225\u306e\u5929\u5019\u5909\u5316_\u6771\u4eac.png](https://qiita-image-store.s3.amazonaws.com/0/37996/5e5f79ca-c4bc-eb9b-1b19-a7f638d097dc.png \"\u6708\u5225\u306e\u5929\u5019\u5909\u5316_\u6771\u4eac.png\")\n\n6\u6708\u306f\u6885\u96e8\u306a\u306e\u3067\u96e8\u304c\u591a\u304f\uff08\u3068\u8a00\u3063\u3066\u3082\u534a\u5206\u4ee5\u4e0b\u306e\u65e5\u6570\uff09\u30011\u6708\u306f\u96e8\u306e\u65e5\u304c\u307b\u3068\u3093\u3069\u306a\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u300210\u6708\u306f\u5929\u6c17\u304c\u5909\u308f\u308a\u3084\u3059\u3044\u3067\u3059\u304c\u3001\u305d\u308c\u3067\u3082\u96e8\u304c\u3071\u3089\u3064\u304f\u65e5\u3088\u308a\u306f\u6674\u308c\u3066\u3044\u308b\u65e5\u306e\u65b9\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\n\u306a\u304a\u3001\u5b9f\u88c5\u304c\u7c21\u5358\u3067\u5909\u52d5\u304c\u5206\u304b\u308a\u3084\u3059\u3044\u8352\u3044\u96c6\u8a08\u6761\u4ef6\u306b\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u7d30\u304b\u3044\u5206\u6790\u3092\u3059\u308b\u5834\u5408\u306f\u5929\u6c17\u6982\u6cc1\u306e\u5024\u3092\u30ab\u30c6\u30b4\u30ea\u5206\u3051\u3057\u3066\u304b\u3089\u96c6\u8a08\u3057\u307e\u3057\u3087\u3046\u3002\n\n"}