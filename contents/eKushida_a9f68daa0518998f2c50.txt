{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4e45\u3057\u3076\u308a\u306bAVFoundation.framework\u3092\u5229\u7528\u3057\u305f\u30ab\u30e1\u30e9\u3092\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4ed6\u306b\u3082\u3001UIKit.framework\uff08UIImagePickerController\uff09\u3092\u5229\u7528\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308a\u307e\u3059\u3002\n\u53c2\u8003\u8a18\u4e8b\n\u4eca\u66f4\u611f\u306f\u3042\u308a\u307e\u3059\u304c\u3001\niOS10\u3067\u3001\u975e\u63a8\u5968\u306b\u306a\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u975e\u63a8\u5968\nWarning\u304c\u51fa\u305f\u3082\u306e\u306f\u4e0b\u8a18\u306e2\u7b87\u6240\u3067\u3057\u305f\u3002\n\u2460 AVCaptureStillImageOutput -> AVCapturePhotoOutput(iOS10.0\u301c)\n\u64ae\u5f71\u304a\u3088\u3073\u3001\u5b8c\u4e86\u901a\u77e5\u306e\u4ed5\u7d44\u307f\u304c\u5909\u308f\u3063\u305f\u3002\n\n\u301ciOS9\n    let imageOutput = AVCaptureStillImageOutput()\n\n    func takePhoto() {\n\n        let videoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n\n        imageOutput.captureStillImageAsynchronously(\n            from: videoConnection,\n            completionHandler: { [weak self]\n                (imageDataBuffer, error) in\n\n            if let e = error {\n                print(e.localizedDescription)\n                return\n            }\n            self?.savePhoto(imageDataBuffer: imageDataBuffer!)\n        })\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer),\n            let image = UIImage(data: imageData) {\n            //TODO : do something\n        }\n    }\n\n\n\niOS10\u301c\n    let imageOutput = AVCapturePhotoOutput()\n\n    func takePhoto() {\n        imageOutput.capturePhoto(with: AVCapturePhotoSettings(), delegate: self)\n    }\n\n\n// MARK: - AVCapturePhotoCaptureDelegate\nextension CameraUtil: AVCapturePhotoCaptureDelegate {\n\n    func capture(_ captureOutput: AVCapturePhotoOutput,\n                 didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?,\n                 previewPhotoSampleBuffer: CMSampleBuffer?,\n                 resolvedSettings: AVCaptureResolvedPhotoSettings,\n                 bracketSettings: AVCaptureBracketedStillImageSettings?,\n                 error: Error?) {\n\n                if let error = error {\n                    print(error.localizedDescription)\n                    return\n                }\n                savePhoto(imageDataBuffer: photoSampleBuffer!)\n        }\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData =\n            AVCapturePhotoOutput.jpegPhotoDataRepresentation(\n                forJPEGSampleBuffer: imageDataBuffer,\n                previewPhotoSampleBuffer: nil),\n            let image = UIImage(data: imageData) {\n\n            //TODO : do something\n        }\n    }\n}\n\n\n\u2461 AVCaptureDevice.devices() -> AVCaptureDeviceDiscoverySession(iOS10.0\u301c)\n\u30ab\u30e1\u30e9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\u65b9\u6cd5\u304c\u5909\u308f\u3063\u305f\u3002\n\n\u301ciOS9\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        guard let device = AVCaptureDevice.devices().filter({\n            ($0 as! AVCaptureDevice).position == position\n        }).first as? AVCaptureDevice else {\n            fatalError(\"\u30ab\u30e1\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n        }\n        return device\n    }\n\n\n\niOS10\u301c\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        return AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera,\n                                             mediaType: AVMediaTypeVideo,\n                                             position: position)\n    }\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\n\u30a2\u30d7\u30ea\u8d77\u52d5\u76f4\u5f8c\u306b\u30ab\u30e1\u30e9\u304c\u8d77\u52d5\u3057\u3001\n\u64ae\u5f71\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3059\u308b\u3068\u30ab\u30e1\u30e9\u30ed\u30fc\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nDeployment Target\u309210.0\u4ee5\u4e0a\u3068\u3057\u307e\u3059\u3002\n\u5b8c\u6210\u7248\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001\u3053\u3061\u3089\u3082\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\u5b9f\u88c5\u624b\u9806\n\n1. AVFoundation.framework\u3092\u8ffd\u52a0\u3059\u308b\n\n2. info.plist\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3059\u308b\n\ninfo.plist\n    <key>NSCameraUsageDescription</key>\n    <string>\u30ab\u30e1\u30e9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059</string>\n    <key>NSPhotoLibraryUsageDescription</key>\n    <string>\u30a2\u30eb\u30d0\u30e0\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059</string>\n\n\n\n3. \u30ab\u30e1\u30e9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n\nCameraUtil.swift\nimport UIKit\nimport AVFoundation\n\nfinal class CameraUtil: NSObject {\n\n    let imageOutput = AVCapturePhotoOutput()\n\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        return AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera,\n                                             mediaType: AVMediaTypeVideo,\n                                             position: position)\n    }\n\n    func createView(session: AVCaptureSession?,\n                                  device: AVCaptureDevice?) -> AVCaptureVideoPreviewLayer?{\n\n        let videoInput = try! AVCaptureDeviceInput.init(device: device)\n        session?.addInput(videoInput)\n        session?.addOutput(imageOutput)\n        return AVCaptureVideoPreviewLayer.init(session: session)\n    }\n\n    func takePhoto() {\n        imageOutput.capturePhoto(with: AVCapturePhotoSettings(), delegate: self)\n    }\n}\n\n// MARK: - AVCapturePhotoCaptureDelegate\nextension CameraUtil: AVCapturePhotoCaptureDelegate {\n\n    func capture(_ captureOutput: AVCapturePhotoOutput,\n                 didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?,\n                 previewPhotoSampleBuffer: CMSampleBuffer?,\n                 resolvedSettings: AVCaptureResolvedPhotoSettings,\n                 bracketSettings: AVCaptureBracketedStillImageSettings?,\n                 error: Error?) {\n\n                if let error = error {\n                    print(error.localizedDescription)\n                    return\n                }\n                savePhoto(imageDataBuffer: photoSampleBuffer!)\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData =\n            AVCapturePhotoOutput.jpegPhotoDataRepresentation(\n                forJPEGSampleBuffer: imageDataBuffer,\n                previewPhotoSampleBuffer: nil),\n            let image = UIImage(data: imageData) {\n\n            UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil)\n        }\n    }\n}\n\n\n\n4. \u4f7f\u3063\u3066\u307f\u308b\nUI\u5468\u308a\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nViewController.swift\nimport UIKit\nimport AVFoundation\n\nfinal class ViewController: UIViewController {\n\n    @IBOutlet weak var baseView: UIView!\n    let session = AVCaptureSession()\n    let camera = CameraUtil()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupCameraView()\n        session.startRunning()\n    }\n\n    private func setupCameraView() {\n\n        let device = camera.findDevice(position: .back)\n\n        if let videoLayer = camera.createView(session: session, device: device) {\n\n            videoLayer.frame = baseView.bounds\n            videoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n            baseView.layer.addSublayer(videoLayer)\n        } else {\n            fatalError(\"VideoLayer\u304cNil\")\n        }\n    }\n\n    @IBAction func photoDidTap(_ sender: UIButton) {\n        camera.takePhoto()\n    }\n}\n\n\n\n\u307e\u3068\u3081\nAPI diff\u306f\u898b\u308b\u3082\u306e\u306e\u3001\u5b9f\u88c5\u3059\u308b\u6a5f\u4f1a\u304c\u306a\u3044\u3068\u898b\u843d\u3068\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\u305f\u307e\u306b\u30b7\u30f3\u30d7\u30eb\u306a\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u306e\u3082\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u4e45\u3057\u3076\u308a\u306bAVFoundation.framework\u3092\u5229\u7528\u3057\u305f\u30ab\u30e1\u30e9\u3092\u89e6\u308b\u6a5f\u4f1a\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u4ed6\u306b\u3082\u3001UIKit.framework\uff08UIImagePickerController\uff09\u3092\u5229\u7528\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308a\u307e\u3059\u3002\n[\u53c2\u8003\u8a18\u4e8b](http://qiita.com/satoshi_imanishi/items/0ddd89d7249c00224d59)\n\n\u4eca\u66f4\u611f\u306f\u3042\u308a\u307e\u3059\u304c\u3001\niOS10\u3067\u3001\u975e\u63a8\u5968\u306b\u306a\u3063\u3066\u3044\u308b\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u975e\u63a8\u5968\nWarning\u304c\u51fa\u305f\u3082\u306e\u306f\u4e0b\u8a18\u306e2\u7b87\u6240\u3067\u3057\u305f\u3002\n\n\u2460 AVCaptureStillImageOutput -> AVCapturePhotoOutput(iOS10.0\u301c)\n\u64ae\u5f71\u304a\u3088\u3073\u3001\u5b8c\u4e86\u901a\u77e5\u306e\u4ed5\u7d44\u307f\u304c\u5909\u308f\u3063\u305f\u3002\n\n```swift:\u301ciOS9\n    let imageOutput = AVCaptureStillImageOutput()\n\n    func takePhoto() {\n\n        let videoConnection = imageOutput.connection(withMediaType: AVMediaTypeVideo)\n\n        imageOutput.captureStillImageAsynchronously(\n            from: videoConnection,\n            completionHandler: { [weak self]\n                (imageDataBuffer, error) in\n\n            if let e = error {\n                print(e.localizedDescription)\n                return\n            }\n            self?.savePhoto(imageDataBuffer: imageDataBuffer!)\n        })\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData = AVCaptureStillImageOutput.jpegStillImageNSDataRepresentation(imageDataBuffer),\n            let image = UIImage(data: imageData) {\n            //TODO : do something\n        }\n    }\n```\n\n```swift:iOS10\u301c\n    let imageOutput = AVCapturePhotoOutput()\n\n    func takePhoto() {\n        imageOutput.capturePhoto(with: AVCapturePhotoSettings(), delegate: self)\n    }\n\n\n// MARK: - AVCapturePhotoCaptureDelegate\nextension CameraUtil: AVCapturePhotoCaptureDelegate {\n\n    func capture(_ captureOutput: AVCapturePhotoOutput,\n                 didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?,\n                 previewPhotoSampleBuffer: CMSampleBuffer?,\n                 resolvedSettings: AVCaptureResolvedPhotoSettings,\n                 bracketSettings: AVCaptureBracketedStillImageSettings?,\n                 error: Error?) {\n\n                if let error = error {\n                    print(error.localizedDescription)\n                    return\n                }\n                savePhoto(imageDataBuffer: photoSampleBuffer!)\n        }\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData =\n            AVCapturePhotoOutput.jpegPhotoDataRepresentation(\n                forJPEGSampleBuffer: imageDataBuffer,\n                previewPhotoSampleBuffer: nil),\n            let image = UIImage(data: imageData) {\n\n            //TODO : do something\n        }\n    }\n}\n```\n\n\n\u2461 AVCaptureDevice.devices() -> AVCaptureDeviceDiscoverySession(iOS10.0\u301c)\n\u30ab\u30e1\u30e9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u53d6\u5f97\u65b9\u6cd5\u304c\u5909\u308f\u3063\u305f\u3002\n\n```swift:\u301ciOS9\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        guard let device = AVCaptureDevice.devices().filter({\n            ($0 as! AVCaptureDevice).position == position\n        }).first as? AVCaptureDevice else {\n            fatalError(\"\u30ab\u30e1\u30e9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\")\n        }\n        return device\n    }\n```\n\n```swift:iOS10\u301c\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        return AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera,\n                                             mediaType: AVMediaTypeVideo,\n                                             position: position)\n    }\n\n```\n\n## \u30b5\u30f3\u30d7\u30eb\n\u30a2\u30d7\u30ea\u8d77\u52d5\u76f4\u5f8c\u306b\u30ab\u30e1\u30e9\u304c\u8d77\u52d5\u3057\u3001\n\u64ae\u5f71\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3059\u308b\u3068\u30ab\u30e1\u30e9\u30ed\u30fc\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3060\u3051\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\nDeployment Target\u309210.0\u4ee5\u4e0a\u3068\u3057\u307e\u3059\u3002\n\n\u5b8c\u6210\u7248\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3001[\u3053\u3061\u3089](https://github.com/stv-ekushida/ios10-camera-demo)\u3082\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n### \u5b9f\u88c5\u624b\u9806\n#### 1. AVFoundation.framework\u3092\u8ffd\u52a0\u3059\u308b\n#### 2. info.plist\u306b\u4e0b\u8a18\u3092\u8ffd\u52a0\u3059\u308b\n\n```:info.plist\n    <key>NSCameraUsageDescription</key>\n    <string>\u30ab\u30e1\u30e9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059</string>\n    <key>NSPhotoLibraryUsageDescription</key>\n    <string>\u30a2\u30eb\u30d0\u30e0\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u3067\u3059</string>\n```\n\n#### 3. \u30ab\u30e1\u30e9\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n\n```swift:CameraUtil.swift\nimport UIKit\nimport AVFoundation\n\nfinal class CameraUtil: NSObject {\n\n    let imageOutput = AVCapturePhotoOutput()\n\n    func findDevice(position: AVCaptureDevicePosition) -> AVCaptureDevice? {\n\n        return AVCaptureDevice.defaultDevice(withDeviceType: .builtInWideAngleCamera,\n                                             mediaType: AVMediaTypeVideo,\n                                             position: position)\n    }\n\n    func createView(session: AVCaptureSession?,\n                                  device: AVCaptureDevice?) -> AVCaptureVideoPreviewLayer?{\n\n        let videoInput = try! AVCaptureDeviceInput.init(device: device)\n        session?.addInput(videoInput)\n        session?.addOutput(imageOutput)\n        return AVCaptureVideoPreviewLayer.init(session: session)\n    }\n\n    func takePhoto() {\n        imageOutput.capturePhoto(with: AVCapturePhotoSettings(), delegate: self)\n    }\n}\n\n// MARK: - AVCapturePhotoCaptureDelegate\nextension CameraUtil: AVCapturePhotoCaptureDelegate {\n\n    func capture(_ captureOutput: AVCapturePhotoOutput,\n                 didFinishProcessingPhotoSampleBuffer photoSampleBuffer: CMSampleBuffer?,\n                 previewPhotoSampleBuffer: CMSampleBuffer?,\n                 resolvedSettings: AVCaptureResolvedPhotoSettings,\n                 bracketSettings: AVCaptureBracketedStillImageSettings?,\n                 error: Error?) {\n\n                if let error = error {\n                    print(error.localizedDescription)\n                    return\n                }\n                savePhoto(imageDataBuffer: photoSampleBuffer!)\n    }\n\n    func savePhoto(imageDataBuffer: CMSampleBuffer) {\n\n        if let imageData =\n            AVCapturePhotoOutput.jpegPhotoDataRepresentation(\n                forJPEGSampleBuffer: imageDataBuffer,\n                previewPhotoSampleBuffer: nil),\n            let image = UIImage(data: imageData) {\n\n            UIImageWriteToSavedPhotosAlbum(image, nil, nil, nil)\n        }\n    }\n}\n```\n\n#### 4. \u4f7f\u3063\u3066\u307f\u308b\nUI\u5468\u308a\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n```swift:ViewController.swift\nimport UIKit\nimport AVFoundation\n\nfinal class ViewController: UIViewController {\n\n    @IBOutlet weak var baseView: UIView!\n    let session = AVCaptureSession()\n    let camera = CameraUtil()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        setupCameraView()\n        session.startRunning()\n    }\n\n    private func setupCameraView() {\n\n        let device = camera.findDevice(position: .back)\n\n        if let videoLayer = camera.createView(session: session, device: device) {\n\n            videoLayer.frame = baseView.bounds\n            videoLayer.videoGravity = AVLayerVideoGravityResizeAspectFill\n            baseView.layer.addSublayer(videoLayer)\n        } else {\n            fatalError(\"VideoLayer\u304cNil\")\n        }\n    }\n\n    @IBAction func photoDidTap(_ sender: UIButton) {\n        camera.takePhoto()\n    }\n}\n```\n\n# \u307e\u3068\u3081\nAPI diff\u306f\u898b\u308b\u3082\u306e\u306e\u3001\u5b9f\u88c5\u3059\u308b\u6a5f\u4f1a\u304c\u306a\u3044\u3068\u898b\u843d\u3068\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\u305f\u307e\u306b\u30b7\u30f3\u30d7\u30eb\u306a\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\u306e\u3082\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["iOS", "ios10", "Swift", "Swift3.0"]}