{"context": " More than 1 year has passed since last update.\n\nSwift2.0\nSwfit2.0\u304b\u3089Swift\u306e\u304a\u52c9\u5f37\u3092\u59cb\u3081\u305f\u306e\u3067\u3059\u304c\u3001\n\u30d6\u30ed\u30b0\u306a\u3069\u3067\u5171\u6709\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u308bSwfit\u306e\u30b3\u30fc\u30c9\u304c\u901a\u3089\u306a\u304f\u3066\u96e3\u5100\u3059\u308b\u65e5\u3005\u3067\u3059\u3002\nSwift\u3067JS\u306e\u3088\u3046\u306a\u624b\u8efd\u3055\u3067\u6b63\u898f\u8868\u73fe\u3092\u30de\u30c3\u30c1\u3055\u305b\u308bLibrary\u3092\u66f8\u304b\u308c\u3066\u3044\u305f\u4eba\u304c\u3044\u305f\u306e\u3067\u3059\u304c\u3001\nSwift2.0\u3067\u306f\u30d3\u30eb\u30c9\u304c\u901a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u305d\u308c\u3092\u4fee\u6b63\u3057\u3066\u307f\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\nmatchesInString\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u306a\u304f\u306a\u308a\u304b\u308f\u308a\u306btry\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\nhttp://easyramble.com/swift-regular-expression-utility.html\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nswift|Regexp.swift\nimport Foundation\n\nclass Regexp {\n    let internalRegexp: NSRegularExpression\n    let pattern: String\n\n    init(_ pattern: String) {\n        self.pattern = pattern\n        self.internalRegexp = try! NSRegularExpression( pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive)\n    }\n\n    func isMatch(input: String) -> Bool {\n        let matches = self.internalRegexp.matchesInString( input, options: [], range:NSMakeRange(0, input.characters.count) )\n        return matches.count > 0\n    }\n\n    func matches(input: String) -> [String]? {\n        if self.isMatch(input) {\n            let matches = self.internalRegexp.matchesInString( input, options: [], range:NSMakeRange(0, input.characters.count) )\n            var results: [String] = []\n            for i in 0 ..< matches.count {\n                results.append( (input as NSString).substringWithRange(matches[i].range) )\n            }\n            return results\n        }\n        return nil\n    }\n}\n\n\n\n\u4f7f\u3044\u65b9\nURL\u3092\u62bd\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u81ea\u4f53\u306f\u53c2\u8003\u30da\u30fc\u30b8\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\nlet pattern = \"http://([a-zA-Z0-9]|.)+\"\nlet str:String = \"\u9298\u67c4\u30b3\u30fc\u30c9:1557,\u9298\u67c4\u540d:SPDR S&P500 ETF TRUST\u677f\u4fa1\u683c:25270.0,\u677f\u6570\u91cf:10000\u306b\u3044\u3073\u3064\u306a\u677f(\u5bc4\u4e0e\u7387:81.20178%)\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002http://oreore.com/servlets/Action?SRC=1234\"\nRegexp(pattern).isMatch(str) //\u30de\u30c3\u30c1\u3057\u305f\u7d50\u679c\u3000\u3053\u3053\u3067\u306ftrue\nlet ret:[String] = Regexp(pattern).matches(str)! //http\u4ee5\u4e0b\u3092\u53d6\u5f97\n\n## Swift2.0\n\nSwfit2.0\u304b\u3089Swift\u306e\u304a\u52c9\u5f37\u3092\u59cb\u3081\u305f\u306e\u3067\u3059\u304c\u3001\n\u30d6\u30ed\u30b0\u306a\u3069\u3067\u5171\u6709\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3044\u308bSwfit\u306e\u30b3\u30fc\u30c9\u304c\u901a\u3089\u306a\u304f\u3066\u96e3\u5100\u3059\u308b\u65e5\u3005\u3067\u3059\u3002\n\nSwift\u3067JS\u306e\u3088\u3046\u306a\u624b\u8efd\u3055\u3067\u6b63\u898f\u8868\u73fe\u3092\u30de\u30c3\u30c1\u3055\u305b\u308bLibrary\u3092\u66f8\u304b\u308c\u3066\u3044\u305f\u4eba\u304c\u3044\u305f\u306e\u3067\u3059\u304c\u3001\n\nSwift2.0\u3067\u306f\u30d3\u30eb\u30c9\u304c\u901a\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u305d\u308c\u3092\u4fee\u6b63\u3057\u3066\u307f\u305f\u306e\u3067\u5171\u6709\u3057\u307e\u3059\u3002\nmatchesInString\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u306a\u304f\u306a\u308a\u304b\u308f\u308a\u306btry\u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u304f\u306a\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\n\nhttp://easyramble.com/swift-regular-expression-utility.html\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```swift|Regexp.swift\nimport Foundation\n\nclass Regexp {\n    let internalRegexp: NSRegularExpression\n    let pattern: String\n    \n    init(_ pattern: String) {\n        self.pattern = pattern\n        self.internalRegexp = try! NSRegularExpression( pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive)\n    }\n    \n    func isMatch(input: String) -> Bool {\n        let matches = self.internalRegexp.matchesInString( input, options: [], range:NSMakeRange(0, input.characters.count) )\n        return matches.count > 0\n    }\n    \n    func matches(input: String) -> [String]? {\n        if self.isMatch(input) {\n            let matches = self.internalRegexp.matchesInString( input, options: [], range:NSMakeRange(0, input.characters.count) )\n            var results: [String] = []\n            for i in 0 ..< matches.count {\n                results.append( (input as NSString).substringWithRange(matches[i].range) )\n            }\n            return results\n        }\n        return nil\n    }\n}\n```\n\n## \u4f7f\u3044\u65b9\n\nURL\u3092\u62bd\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\u4f7f\u3044\u65b9\u81ea\u4f53\u306f\u53c2\u8003\u30da\u30fc\u30b8\u3068\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n```swift\nlet pattern = \"http://([a-zA-Z0-9]|.)+\"\nlet str:String = \"\u9298\u67c4\u30b3\u30fc\u30c9:1557,\u9298\u67c4\u540d:SPDR S&P500 ETF TRUST\u677f\u4fa1\u683c:25270.0,\u677f\u6570\u91cf:10000\u306b\u3044\u3073\u3064\u306a\u677f(\u5bc4\u4e0e\u7387:81.20178%)\u3092\u691c\u51fa\u3057\u307e\u3057\u305f\u3002http://oreore.com/servlets/Action?SRC=1234\"\nRegexp(pattern).isMatch(str) //\u30de\u30c3\u30c1\u3057\u305f\u7d50\u679c\u3000\u3053\u3053\u3067\u306ftrue\nlet ret:[String] = Regexp(pattern).matches(str)! //http\u4ee5\u4e0b\u3092\u53d6\u5f97\n```\n\n", "tags": ["iOS", "Swift2.0", "Swift"]}