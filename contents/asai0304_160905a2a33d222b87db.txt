{"context": "\n\nTF-IDF\u306b\u3088\u308b\u5358\u8a9e\u306e\u95a2\u9023\u6027\u306e\u8a55\u4fa1\u3068\u306f\n\u524d\u56de\u307e\u3067\u3067\u6587\u7ae0\u3092\u30d1\u30fc\u30b9\u3057\u3001\u5358\u8a9e\u3092\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u305f\u3060\u3001\u3042\u308b\u5358\u8a9e\u304c\u305f\u304f\u3055\u3093\u6587\u7ae0\u4e2d\u3067\u5b58\u5728\u3057\u3066\u3044\u3066\u3082\u3001\u305d\u308c\u304c\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u6587\u7ae0\u3067\u3082\u305f\u304f\u3055\u3093\u767b\u5834\u3059\u308b\u5358\u8a9e\u3067\u3042\u308c\u3070\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u5224\u65ad\u3059\u308b\u4e0a\u3067\u305d\u306e\u5358\u8a9e\u306e\u91cd\u8981\u6027\u306f\u3042\u307e\u308a\u9ad8\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3042\u308b\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u3092\u300c\u80af\u5b9a\u7684\u306a\u3082\u306e\u300d\u300c\u5426\u5b9a\u7684\u306a\u3082\u306e\u300d\u3067\u5206\u985e\u3057\u305f\u3044\u6642\u3001\u300c\u3059\u3054\u3044\u300d\u3068\u3044\u3046\u5358\u8a9e\u306f\u300e\u3059\u3054\u3044\u3064\u307e\u3089\u306a\u304b\u3063\u305f\u300f\u3068\u3044\u3046\u6587\u8108\u3067\u3082\u300e\u3059\u3054\u3044\u3088\u304b\u3063\u305f\u300f\u3068\u3044\u3046\u6587\u8108\u3067\u3082\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3046\u308b\u306e\u3067\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u305d\u306e\u30ec\u30d3\u30e5\u30fc\u306e\u30cd\u30ac\u30dd\u30b8\u306f\u5224\u65ad\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u611f\u3058\u3067\u3001\u3042\u308b\u5358\u8a9e\u304c\u30ab\u30c6\u30b4\u30ea\u30fc\u308f\u3051\u3092\u884c\u3046\u969b\u3001\u91cd\u8981\u3067\u3042\u308c\u3070\u305d\u306e\u5358\u8a9e\u306e\u91cd\u307f\u3092\u3042\u3052\u3001\u91cd\u8981\u3067\u306a\u3051\u308c\u3070\u4e0b\u3052\u308b\u624b\u6cd5\u304c\u300cTF-IDF\u300d\u3067\u3059\u3002TF\u306f\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3001IDF\u306f\u9006\u6587\u66f8\u983b\u5ea6\u3068\u547c\u3070\u308c\u3001\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nndndn_d\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7dcf\u6570\u3001df(t,d)df(t,d)df(t, d)\u306f\u5358\u8a9et\u3092\u542b\u3093\u3067\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u500b\u6570\u3092\u8868\u3059\u3068\u3059\u308b\u3068\u3001\nidf(t,d)=lognd1+df(t,d)idf(t,d)=lognd1+df(t,d)idf(t, d) = log \\frac{n_d}{1 + df(t,d)}, \ntf\u2212idf=tf(t,d)\u00d7idf(t,d)tf\u2212idf=tf(t,d)\u00d7idf(t,d)tf-idf = tf(t,d) \\times idf(t, d) \n\u3061\u306a\u307f\u306b\u3053\u308c\u3092\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u306e\u304cPython\u306escikit-learn\u306b\u3042\u308bTfidfTransformer\u30af\u30e9\u30b9\u3067\u3042\u308a\u3001\u3053\u308c\u306f\u524d\u56de\u4f7f\u7528\u3057\u305fCountVectorizer\u304b\u3089\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u53d7\u3051\u53d6\u308a\u3001\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\ntf_idf.py\nimport numpy as np\nfrom sklearn.feature_extraction.text import CountVectorizer \nfrom sklearn.feature_extraction.text import TfidfTransformer\n\ncount = CountVectorizer()\ntexts = np.array([\"He likes to play the guitar\", \\\n\"She likes to play the piano\", \\\n\"He likes to play the guitar, and she likes to play the piano\"])\nbag = count.fit_transform(docs)\n\ntfidf = TfidfTransformer(use_idf=True, norm='l2', smooth_idf=True)\nnp.set_printoptions(precision=2)\nprint(tfidf.fit_transform(count.fit_transform(docs)).toarray())\n\n\u51fa\u529b\u7d50\u679c:\n[[ 0.    0.48  0.48  0.37  0.    0.37  0.    0.37  0.37]\n [ 0.    0.    0.    0.37  0.48  0.37  0.48  0.37  0.37]\n [ 0.34  0.26  0.26  0.4   0.26  0.4   0.26  0.4   0.4 ]]\n\n\n\n\n\u5b9f\u969b\u306b\u6587\u7ae0\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3059\u308b\u5834\u5408\u306e\u7559\u610f\u70b9\n\n\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\n\u4e0a\u306e\u4f8b\u306e\u3088\u3046\u306a\u6587\u7ae0\u3067\u306f\u3001\u5165\u529b\u306b\u4f59\u5206\u306a\u8a18\u53f7\u306a\u3069\u306f\u542b\u307e\u308c\u305a\u3001\u305d\u306e\u307e\u307ecountVectorizer\u306a\u3069\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u306fhtml\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u3092\u542b\u3080\u3082\u306e\u3084\u533a\u5207\u308a\u7dda\u306a\u3069\u304c\u542b\u307e\u308c\u305f\u308a\u3057\u3066\u3001\u89e3\u6790\u3092\u59cb\u3081\u308b\u524d\u306b\u3053\u3046\u3044\u3063\u305f\u4f59\u8a08\u306a\u30c7\u30fc\u30bf\u3092\u9664\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff08\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\uff09\u3002\u3053\u308c\u306fPython\u306e\u6b63\u898f\u8868\u73fe\u306a\u3069\u3067\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\nPython\u306b\u304a\u3051\u308b\u6b63\u898f\u8868\u73fe\u64cd\u4f5c\n\n\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30ba\u306e\u9664\u53bb\n\u6587\u7ae0\u306e\u30ab\u30c6\u30b4\u30ea\u306a\u3069\u306b\u3088\u3089\u305a\u3001\u4e00\u822c\u7684\u306b\u3042\u308b\u8a00\u8a9e\u306b\u304a\u3044\u3066\u6587\u4e2d\u306b\u3088\u304f\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u3042\u307e\u308a\u6587\u7ae0\u306e\u5206\u985e\u306b\u91cd\u8981\u5ea6\u304c\u9ad8\u304f\u306a\u3044\u305f\u3081\u3001\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b9f\u969b\u306b\u884c\u3046\u3088\u308a\u524d\u306b\u306e\u305e\u3044\u3066\u3057\u307e\u3046\u306e\u304c\u30d9\u30bf\u30fc\uff08\u3089\u3057\u3044\u3002\uff09\n\u82f1\u8a9e\u3067\u306fPython\u306eNLTK\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089stopwords\u3092\u6301\u3063\u3066\u3053\u3089\u308c\u308b\u304c\u3001\u65e5\u672c\u8a9e\u3067\u306f\u516c\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5b58\u5728\u305b\u305a\u3001slothlib\u306e\u30da\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30bd\u30fc\u30b9\u3092\u89e3\u6790\u3057\u3066\u5358\u8a9e\u3092\u3068\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u591a\u3044\u3089\u3057\u3044\u3067\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3067\u307e\u305aurl\u3092\u958b\u304d\u3001\u305d\u3053\u304b\u3089\u30bd\u30fc\u30b9\u3092BeautifulSoup\u3068\u3044\u3046\u8b0e\u306a\u3082\u306e\u3092\u4f7f\u3063\u3066\u691c\u8a3c\u3057\u307e\u3059\u3002\n\nja_stopwords.py\nimport urllib.request\nimport bs4\nfrom bs4 import BeautifulSoup\n\ndef get_stop_words():\n    #stopwords(\u6587\u7ae0\u306e\u5c5e\u6027\u306b\u95a2\u308f\u3089\u305a\u983b\u51fa\u3059\u308b\u5358\u8a9e)\u3092\u9664\u5916\u3059\u308b\u305f\u3081\u306b\u3001slothlib\u306e\u65e5\u672c\u8a9e\u3088\u3046\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3002\n    #urllib\u3068BeautifulSoup\u306b\u3088\u308a\u30bd\u30fc\u30b9\u3092\u30d1\u30fc\u30b9\u3002\n    url = 'http://svn.sourceforge.jp/svnroot/slothlib/CSharp/Version1/SlothLib/NLP/Filter/StopWord/word/Japanese.txt'\n    soup = bs4.BeautifulSoup(urllib.request.urlopen(url).read(), \"html.parser\")\n    ss = str(soup)\n    return ss\n\nprint(get_stop_words())\n\n\u51fa\u529b\u7d50\u679c:\n\u3042\u305d\u3053\n\u3042\u305f\u308a\n\u3042\u3061\u3089\n\u3042\u3063\u3061\n\u3042\u3068\n\u3042\u306a\n\u3042\u306a\u305f\n\u3042\u308c\n\u3044\u304f\u3064\n\u3044\u3064\n\u3044\u307e\n\u3044\n...\n\n\n\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5206\u985e\u3059\u308b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\u3058\u3083\u3042\u3053\u3093\u306a\u611f\u3058\u3067\u7279\u5fb4\u91cf\u306a\u3069\u6c42\u3081\u3001\u524d\u51e6\u7406\u3092\u884c\u3063\u305f\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u5b9f\u969b\u306b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790\u3092\u884c\u3044\u3001\u6a5f\u68b0\u5b66\u7fd2\u3067\u3042\u308b\u6587\u7ae0\u304c\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u3082\u306e\u304b\u30cd\u30ac\u30c6\u30a3\u30d6\u306a\u3082\u306e\u304b\u3092\u5206\u985e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u65e5\u672c\u8a9e\u3067\u624b\u9803\u306a\u30bd\u30fc\u30b9\u304c\u306a\u304b\u3063\u305f\uff08Twitter\u304b\u3089\u306e\u53ce\u96c6\u304c\u591a\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u305d\u306e\u305f\u3081\u306bAWS\u3068\u304b\u3044\u3058\u308b\u306e\u3081\u3093\u3069\u3044\u306e\u3067\uff09\n\u82f1\u8a9e\u306e\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066\u30cd\u30ac\u30c6\u30a3\u30d6\u304b\u30dd\u30b8\u30c6\u30a3\u30d6\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u3084\u3063\u3066\u307f\u308b\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306fPython Machine Learning\u3068\u3044\u3046\u672c\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u7ae0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\nreviews.py\nfrom sklearn.pipeline import Pipeline \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import GridSearchCV\n\nX_train = df.loc[:25000, 'review'].values\ny_train = df.loc[:25000, 'sentiment'].values\nX_test = df.loc[25000:, 'review'].values\ny_test = df.loc[25000:, 'sentiment'].values\n\ntfidf = TfidfVectorizer(strip_accents=None, lowercase=False, preprocessor=None)\n\nparam_grid = [{'vect__ngram_range': [(1, 1)],\n               'vect__stop_words': [stop, None],\n               'vect__tokenizer': [tokenizer, tokenizer_porter],\n               'clf__penalty': ['l1', 'l2'],\n               'clf__C': [1.0, 10.0, 100.0]},\n              {'vect__ngram_range': [(1, 1)],\n               'vect__stop_words': [stop, None],\n               'vect__tokenizer': [tokenizer, tokenizer_porter],\n               'vect__use_idf':[False],\n               'vect__norm':[None],\n               'clf__penalty': ['l1', 'l2'],\n               'clf__C': [1.0, 10.0, 100.0]},\n              ]\n\n                     ('clf', LogisticRegression(random_state=0))])\n\ngs_lr_tfidf = GridSearchCV(lr_tfidf, param_grid,\n                           scoring='accuracy',\n                           cv=5,\n                           verbose=1,\n                           n_jobs=-1)\ngs_lr_tfidf.fit(X_train, y_train)\nprint('Accuracy: %.3f' % gs_lr_tfidf.best_score_)\n\n\n\n\u4e00\u756a\u6700\u521d\u306bdf\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b\u3002\ndf\u306fpandas\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3067\u8868\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3002\n\n\u3053\u306e\u4e2d\u306e['review']['sentiment']\u306b\u305d\u308c\u305e\u308c\u30ec\u30d3\u30e5\u30fc\u306e\u6587\u7ae0\uff08\u3053\u308c\u304cx\u3068\u306a\u308b\uff09\u3001\u305d\u306e\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3059\u308b\u30e9\u30d9\u30eb\uff080,1\u3067\u30dd\u30b8\u30c6\u30a3\u30d6\u304b\u30cd\u30ac\u30c6\u30a3\u30d6\u304b\u8868\u3059\uff09\u3067\u3042\u308a\u3001\u3053\u308c\u304cy\u3068\u306a\u308b\u3002\n\uff08df\u304c\u5b9f\u969b\u306b\u3069\u3046\u5143\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3001\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3092\u884c\u3063\u305f\u304b\u306f\u5272\u611b\u2026\uff09\n\u305d\u306e\u3042\u3068\u306bGridSearchCV\u3068\u3044\u3046sklearn\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u304d\u306e\u305f\u3081\u306e\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u3002gs_lr_tfidf\u3068\u3044\u3046GridSearchCV\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092X_train, y_train\u3092\u4f7f\u3063\u3066gs_lr_tfidf.fit()\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\uff08sklearn\u3067\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\uff09\n\u305f\u3060\u3053\u306e\u3084\u308a\u65b9\u3092\u5b9f\u969b\u306b\u884c\u3046\u3068\u51c4\u307e\u3058\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u2026\n\u306e\u3067\u30c7\u30fc\u30bf\u304c\u5927\u304d\u3044\u6642\u306f\u30a2\u30a6\u30c8\u30aa\u30d6\u30b3\u30a2\u5b66\u7fd2\u306a\u308b\u3082\u306e\u3092\u884c\u3046\u306e\u304c\u4e00\u822c\u7684\u3089\u3057\u3044\u3002\n##TF-IDF\u306b\u3088\u308b\u5358\u8a9e\u306e\u95a2\u9023\u6027\u306e\u8a55\u4fa1\u3068\u306f\n\u524d\u56de\u307e\u3067\u3067\u6587\u7ae0\u3092\u30d1\u30fc\u30b9\u3057\u3001\u5358\u8a9e\u3092\u7279\u5fb4\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3059\u308b\u3053\u3068\u3092\u884c\u3044\u307e\u3057\u305f\u3002\u305f\u3060\u3001\u3042\u308b\u5358\u8a9e\u304c\u305f\u304f\u3055\u3093\u6587\u7ae0\u4e2d\u3067\u5b58\u5728\u3057\u3066\u3044\u3066\u3082\u3001\u305d\u308c\u304c\u3069\u306e\u30ab\u30c6\u30b4\u30ea\u30fc\u306e\u6587\u7ae0\u3067\u3082\u305f\u304f\u3055\u3093\u767b\u5834\u3059\u308b\u5358\u8a9e\u3067\u3042\u308c\u3070\u3001\u30ab\u30c6\u30b4\u30ea\u30fc\u3092\u5224\u65ad\u3059\u308b\u4e0a\u3067\u305d\u306e\u5358\u8a9e\u306e\u91cd\u8981\u6027\u306f\u3042\u307e\u308a\u9ad8\u304f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3042\u308b\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u3092\u300c\u80af\u5b9a\u7684\u306a\u3082\u306e\u300d\u300c\u5426\u5b9a\u7684\u306a\u3082\u306e\u300d\u3067\u5206\u985e\u3057\u305f\u3044\u6642\u3001\u300c\u3059\u3054\u3044\u300d\u3068\u3044\u3046\u5358\u8a9e\u306f\u300e\u3059\u3054\u3044\u3064\u307e\u3089\u306a\u304b\u3063\u305f\u300f\u3068\u3044\u3046\u6587\u8108\u3067\u3082\u300e\u3059\u3054\u3044\u3088\u304b\u3063\u305f\u300f\u3068\u3044\u3046\u6587\u8108\u3067\u3082\u983b\u7e41\u306b\u4f7f\u308f\u308c\u3046\u308b\u306e\u3067\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u305d\u306e\u30ec\u30d3\u30e5\u30fc\u306e\u30cd\u30ac\u30dd\u30b8\u306f\u5224\u65ad\u3059\u308b\u306e\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u611f\u3058\u3067\u3001\u3042\u308b\u5358\u8a9e\u304c\u30ab\u30c6\u30b4\u30ea\u30fc\u308f\u3051\u3092\u884c\u3046\u969b\u3001\u91cd\u8981\u3067\u3042\u308c\u3070\u305d\u306e\u5358\u8a9e\u306e\u91cd\u307f\u3092\u3042\u3052\u3001\u91cd\u8981\u3067\u306a\u3051\u308c\u3070\u4e0b\u3052\u308b\u624b\u6cd5\u304c\u300cTF-IDF\u300d\u3067\u3059\u3002TF\u306f\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u3001IDF\u306f\u9006\u6587\u66f8\u983b\u5ea6\u3068\u547c\u3070\u308c\u3001\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$n_d$\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u7dcf\u6570\u3001$df(t, d)$\u306f\u5358\u8a9et\u3092\u542b\u3093\u3067\u3044\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u500b\u6570\u3092\u8868\u3059\u3068\u3059\u308b\u3068\u3001\n$idf(t, d) = log \\frac{n_d}{1 + df(t,d)}$, \n$tf-idf = tf(t,d) \\times idf(t, d)$ \n\n\u3061\u306a\u307f\u306b\u3053\u308c\u3092\u6bd4\u8f03\u7684\u7c21\u5358\u306b\u5b9f\u88c5\u3067\u304d\u308b\u306e\u304cPython\u306escikit-learn\u306b\u3042\u308bTfidfTransformer\u30af\u30e9\u30b9\u3067\u3042\u308a\u3001\u3053\u308c\u306f\u524d\u56de\u4f7f\u7528\u3057\u305fCountVectorizer\u304b\u3089\u5358\u8a9e\u306e\u51fa\u73fe\u983b\u5ea6\u3092\u53d7\u3051\u53d6\u308a\u3001\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```tf_idf.py\nimport numpy as np\nfrom sklearn.feature_extraction.text import CountVectorizer \nfrom sklearn.feature_extraction.text import TfidfTransformer\n\ncount = CountVectorizer()\ntexts = np.array([\"He likes to play the guitar\", \\\n\"She likes to play the piano\", \\\n\"He likes to play the guitar, and she likes to play the piano\"])\nbag = count.fit_transform(docs)\n\ntfidf = TfidfTransformer(use_idf=True, norm='l2', smooth_idf=True)\nnp.set_printoptions(precision=2)\nprint(tfidf.fit_transform(count.fit_transform(docs)).toarray())\n\n\u51fa\u529b\u7d50\u679c:\n[[ 0.    0.48  0.48  0.37  0.    0.37  0.    0.37  0.37]\n [ 0.    0.    0.    0.37  0.48  0.37  0.48  0.37  0.37]\n [ 0.34  0.26  0.26  0.4   0.26  0.4   0.26  0.4   0.4 ]]\n\n```\n\n##\u5b9f\u969b\u306b\u6587\u7ae0\u30c7\u30fc\u30bf\u3092\u89e3\u6790\u3059\u308b\u5834\u5408\u306e\u7559\u610f\u70b9\n###\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\n\u4e0a\u306e\u4f8b\u306e\u3088\u3046\u306a\u6587\u7ae0\u3067\u306f\u3001\u5165\u529b\u306b\u4f59\u5206\u306a\u8a18\u53f7\u306a\u3069\u306f\u542b\u307e\u308c\u305a\u3001\u305d\u306e\u307e\u307ecountVectorizer\u306a\u3069\u306b\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u305f\u3060\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4e2d\u306b\u306fhtml\u30de\u30fc\u30af\u30a2\u30c3\u30d7\u3092\u542b\u3080\u3082\u306e\u3084\u533a\u5207\u308a\u7dda\u306a\u3069\u304c\u542b\u307e\u308c\u305f\u308a\u3057\u3066\u3001\u89e3\u6790\u3092\u59cb\u3081\u308b\u524d\u306b\u3053\u3046\u3044\u3063\u305f\u4f59\u8a08\u306a\u30c7\u30fc\u30bf\u3092\u9664\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff08\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\uff09\u3002\u3053\u308c\u306fPython\u306e\u6b63\u898f\u8868\u73fe\u306a\u3069\u3067\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n[Python\u306b\u304a\u3051\u308b\u6b63\u898f\u8868\u73fe\u64cd\u4f5c](https://docs.python.jp/3/library/re.html)\n\n###\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30ba\u306e\u9664\u53bb\n\u6587\u7ae0\u306e\u30ab\u30c6\u30b4\u30ea\u306a\u3069\u306b\u3088\u3089\u305a\u3001\u4e00\u822c\u7684\u306b\u3042\u308b\u8a00\u8a9e\u306b\u304a\u3044\u3066\u6587\u4e2d\u306b\u3088\u304f\u51fa\u73fe\u3059\u308b\u5358\u8a9e\u306f\u3042\u307e\u308a\u6587\u7ae0\u306e\u5206\u985e\u306b\u91cd\u8981\u5ea6\u304c\u9ad8\u304f\u306a\u3044\u305f\u3081\u3001\u6a5f\u68b0\u5b66\u7fd2\u3092\u5b9f\u969b\u306b\u884c\u3046\u3088\u308a\u524d\u306b\u306e\u305e\u3044\u3066\u3057\u307e\u3046\u306e\u304c\u30d9\u30bf\u30fc\uff08\u3089\u3057\u3044\u3002\uff09\n\u82f1\u8a9e\u3067\u306fPython\u306eNLTK\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089stopwords\u3092\u6301\u3063\u3066\u3053\u3089\u308c\u308b\u304c\u3001\u65e5\u672c\u8a9e\u3067\u306f\u516c\u5f0f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u5b58\u5728\u305b\u305a\u3001[slothlib](http://svn.sourceforge.jp/svnroot/slothlib/CSharp/Version1/SlothLib/NLP/Filter/StopWord/word/Japanese.txt)\u306e\u30da\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u30bd\u30fc\u30b9\u3092\u89e3\u6790\u3057\u3066\u5358\u8a9e\u3092\u3068\u3063\u3066\u304f\u308b\u3053\u3068\u304c\u591a\u3044\u3089\u3057\u3044\u3067\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306e\u30b3\u30fc\u30c9\u3067\u307e\u305aurl\u3092\u958b\u304d\u3001\u305d\u3053\u304b\u3089\u30bd\u30fc\u30b9\u3092BeautifulSoup\u3068\u3044\u3046\u8b0e\u306a\u3082\u306e\u3092\u4f7f\u3063\u3066\u691c\u8a3c\u3057\u307e\u3059\u3002\n\n```ja_stopwords.py\nimport urllib.request\nimport bs4\nfrom bs4 import BeautifulSoup\n\ndef get_stop_words():\n    #stopwords(\u6587\u7ae0\u306e\u5c5e\u6027\u306b\u95a2\u308f\u3089\u305a\u983b\u51fa\u3059\u308b\u5358\u8a9e)\u3092\u9664\u5916\u3059\u308b\u305f\u3081\u306b\u3001slothlib\u306e\u65e5\u672c\u8a9e\u3088\u3046\u30b9\u30c8\u30c3\u30d7\u30ef\u30fc\u30c9\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3002\n    #urllib\u3068BeautifulSoup\u306b\u3088\u308a\u30bd\u30fc\u30b9\u3092\u30d1\u30fc\u30b9\u3002\n    url = 'http://svn.sourceforge.jp/svnroot/slothlib/CSharp/Version1/SlothLib/NLP/Filter/StopWord/word/Japanese.txt'\n    soup = bs4.BeautifulSoup(urllib.request.urlopen(url).read(), \"html.parser\")\n    ss = str(soup)\n    return ss\n\nprint(get_stop_words())\n\n\u51fa\u529b\u7d50\u679c:\n\u3042\u305d\u3053\n\u3042\u305f\u308a\n\u3042\u3061\u3089\n\u3042\u3063\u3061\n\u3042\u3068\n\u3042\u306a\n\u3042\u306a\u305f\n\u3042\u308c\n\u3044\u304f\u3064\n\u3044\u3064\n\u3044\u307e\n\u3044\n...\n\n```\n\n##\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u5206\u985e\u3059\u308b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\n\u3058\u3083\u3042\u3053\u3093\u306a\u611f\u3058\u3067\u7279\u5fb4\u91cf\u306a\u3069\u6c42\u3081\u3001\u524d\u51e6\u7406\u3092\u884c\u3063\u305f\u6587\u7ae0\u306b\u5bfe\u3057\u3066\u5b9f\u969b\u306b\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790\u3092\u884c\u3044\u3001\u6a5f\u68b0\u5b66\u7fd2\u3067\u3042\u308b\u6587\u7ae0\u304c\u30dd\u30b8\u30c6\u30a3\u30d6\u306a\u3082\u306e\u304b\u30cd\u30ac\u30c6\u30a3\u30d6\u306a\u3082\u306e\u304b\u3092\u5206\u985e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u65e5\u672c\u8a9e\u3067\u624b\u9803\u306a\u30bd\u30fc\u30b9\u304c\u306a\u304b\u3063\u305f\uff08Twitter\u304b\u3089\u306e\u53ce\u96c6\u304c\u591a\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u305d\u306e\u305f\u3081\u306bAWS\u3068\u304b\u3044\u3058\u308b\u306e\u3081\u3093\u3069\u3044\u306e\u3067\uff09\n\u82f1\u8a9e\u306e\u6620\u753b\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066\u30cd\u30ac\u30c6\u30a3\u30d6\u304b\u30dd\u30b8\u30c6\u30a3\u30d6\u304b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u3084\u3063\u3066\u307f\u308b\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f[Python Machine Learning](https://www.amazon.co.jp/Python%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E9%81%94%E4%BA%BA%E3%83%87%E3%83%BC%E3%82%BF%E3%82%B5%E3%82%A4%E3%82%A8%E3%83%B3%E3%83%86%E3%82%A3%E3%82%B9%E3%83%88%E3%81%AB%E3%82%88%E3%82%8B%E7%90%86%E8%AB%96%E3%81%A8%E5%AE%9F%E8%B7%B5-impress-top-gear/dp/4844380605/ref=sr_1_cc_2?s=aps&ie=UTF8&qid=1487516026&sr=1-2-catcorr&keywords=python+%E6%A9%9F%E6%A2%B0%E5%AD%A6%E7%BF%92)\u3068\u3044\u3046\u672c\u306e\u81ea\u7136\u8a00\u8a9e\u51e6\u7406\u306e\u7ae0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n```reviews.py\nfrom sklearn.pipeline import Pipeline \nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.feature_extraction.text import TfidfVectorizer\nfrom sklearn.model_selection import GridSearchCV\n\nX_train = df.loc[:25000, 'review'].values\ny_train = df.loc[:25000, 'sentiment'].values\nX_test = df.loc[25000:, 'review'].values\ny_test = df.loc[25000:, 'sentiment'].values\n\ntfidf = TfidfVectorizer(strip_accents=None, lowercase=False, preprocessor=None)\n\nparam_grid = [{'vect__ngram_range': [(1, 1)],\n               'vect__stop_words': [stop, None],\n               'vect__tokenizer': [tokenizer, tokenizer_porter],\n               'clf__penalty': ['l1', 'l2'],\n               'clf__C': [1.0, 10.0, 100.0]},\n              {'vect__ngram_range': [(1, 1)],\n               'vect__stop_words': [stop, None],\n               'vect__tokenizer': [tokenizer, tokenizer_porter],\n               'vect__use_idf':[False],\n               'vect__norm':[None],\n               'clf__penalty': ['l1', 'l2'],\n               'clf__C': [1.0, 10.0, 100.0]},\n              ]\n\n                     ('clf', LogisticRegression(random_state=0))])\n\ngs_lr_tfidf = GridSearchCV(lr_tfidf, param_grid,\n                           scoring='accuracy',\n                           cv=5,\n                           verbose=1,\n                           n_jobs=-1)\ngs_lr_tfidf.fit(X_train, y_train)\nprint('Accuracy: %.3f' % gs_lr_tfidf.best_score_)\n\n```\n\u4e00\u756a\u6700\u521d\u306bdf\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u5272\u3059\u308b\u3002\ndf\u306fpandas\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3067\u8868\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u3044\u308b\u3068\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u308b\u3068\u308f\u304b\u308a\u3084\u3059\u3044\u304b\u3082\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/147809/d84900fe-e7c6-501b-4940-ca5939a3b2b1.png)\n\n\u3053\u306e\u4e2d\u306e['review']['sentiment']\u306b\u305d\u308c\u305e\u308c\u30ec\u30d3\u30e5\u30fc\u306e\u6587\u7ae0\uff08\u3053\u308c\u304cx\u3068\u306a\u308b\uff09\u3001\u305d\u306e\u30ec\u30d3\u30e5\u30fc\u306b\u5bfe\u3059\u308b\u30e9\u30d9\u30eb\uff080,1\u3067\u30dd\u30b8\u30c6\u30a3\u30d6\u304b\u30cd\u30ac\u30c6\u30a3\u30d6\u304b\u8868\u3059\uff09\u3067\u3042\u308a\u3001\u3053\u308c\u304cy\u3068\u306a\u308b\u3002\n\uff08df\u304c\u5b9f\u969b\u306b\u3069\u3046\u5143\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3093\u3060\u304b\u3001\u30c7\u30fc\u30bf\u306e\u30af\u30ec\u30f3\u30b8\u30f3\u30b0\u3092\u884c\u3063\u305f\u304b\u306f\u5272\u611b\u2026\uff09\n\u305d\u306e\u3042\u3068\u306bGridSearchCV\u3068\u3044\u3046sklearn\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u304d\u306e\u305f\u3081\u306e\u6700\u9069\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u3002gs_lr_tfidf\u3068\u3044\u3046GridSearchCV\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u3001\u305d\u308c\u3092X_train, y_train\u3092\u4f7f\u3063\u3066gs_lr_tfidf.fit()\u3067\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\uff08[sklearn\u3067\u30cf\u30a4\u30d1\u30fc\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0](http://qiita.com/sotetsuk/items/16ffd76978085bfd7628)\uff09\n\n\u305f\u3060\u3053\u306e\u3084\u308a\u65b9\u3092\u5b9f\u969b\u306b\u884c\u3046\u3068\u51c4\u307e\u3058\u304f\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u2026\n\u306e\u3067\u30c7\u30fc\u30bf\u304c\u5927\u304d\u3044\u6642\u306f\u30a2\u30a6\u30c8\u30aa\u30d6\u30b3\u30a2\u5b66\u7fd2\u306a\u308b\u3082\u306e\u3092\u884c\u3046\u306e\u304c\u4e00\u822c\u7684\u3089\u3057\u3044\u3002\n\n", "tags": ["Python", "nltk", "NLP"]}