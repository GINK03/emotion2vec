{"context": "Jupyter\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u5225\u306enotebook(ipynb\u30d5\u30a1\u30a4\u30eb\uff09\u306e\u95a2\u6570\u3084\u7d50\u679c\u3092\u4f7f\u3044\u307e\u308f\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3088\u306d\u3002python\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u65b9\u6cd5\u304c\u516c\u5f0f\u306b\u3042\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u4eca\u5f8c\u4f55\u56de\u3082\u4f7f\u3044\u305d\u3046\u306a\u306e\u3067\u81ea\u5206\u306e\u5099\u5fd8\u9332\u306e\u610f\u5473\u3082\u8fbc\u3081\u3066\uff09\n\u516c\u5f0f\u306e\u30b5\u30a4\u30c8\u306e\u4f8b:\nhttp://jupyter-notebook.readthedocs.io/en/latest/examples/Notebook/Importing%20Notebooks.html\n\u3084\u308a\u65b9\u3068\u3057\u3066\u306fnotebook\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u3001sys.meta_path\u3092\u4f7f\u3063\u3066import\u3092\u30d5\u30c3\u30af\u3057\u3066\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nimport\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067notebook\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u5143\u306e\u72b6\u614b\u3092\u5909\u3048\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u5b89\u5fc3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u30b3\u30fc\u30c9\u3067\u3059\u3002\nimport io, os, sys, types\nfrom IPython import get_ipython\nfrom nbformat import read\nfrom IPython.core.interactiveshell import InteractiveShell\n\ndef find_notebook(fullname, path=None):\n    name = fullname.rsplit('.', 1)[-1]\n    if not path:\n        path = ['']\n    for d in path:\n        nb_path = os.path.join(d, name + \".ipynb\")\n        if os.path.isfile(nb_path):\n            return nb_path\n        nb_path = nb_path.replace(\"_\", \" \")\n        if os.path.isfile(nb_path):\n            return nb_path\n\nclass NotebookLoader(object):\n    def __init__(self, path=None):\n        self.shell = InteractiveShell.instance()\n        self.path = path\n\n    def load_module(self, fullname):\n        path = find_notebook(fullname, self.path)\n        with io.open(path, 'r', encoding='utf-8') as f:\n            nb = read(f, 4)\n        mod = types.ModuleType(fullname)\n        mod.__file__ = path\n        mod.__loader__ = self\n        mod.__dict__['get_ipython'] = get_ipython\n        sys.modules[fullname] = mod\n        save_user_ns = self.shell.user_ns\n        self.shell.user_ns = mod.__dict__\n        try:\n          for cell in nb.cells:\n            if cell.cell_type == 'code':\n                code = self.shell.input_transformer_manager.transform_cell(cell.source)\n                exec(code, mod.__dict__)\n        finally:\n            self.shell.user_ns = save_user_ns\n        return mod\n\nclass NotebookFinder(object):\n    def __init__(self):\n        self.loaders = {}\n\n    def find_module(self, fullname, path=None):\n        nb_path = find_notebook(fullname, path)\n        if not nb_path:\n            return\n        key = path\n        if path:\n            key = os.path.sep.join(path)\n        if key not in self.loaders:\n            self.loaders[key] = NotebookLoader(path)\n        return self.loaders[key]\n\n\u3053\u308c\u3092notebookutil.py\u306a\u3069\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\u4f7f\u3046\u3068\u304d\u306f\nimport notebookutil as nbu\nsys.meta_path.append(nbu.NotebookFinder())\n\n\u3068\u3059\u308c\u3070\u3001notebook\u3092import\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport mynotebook\n\n\u95a2\u6570\u3084\u30af\u30e9\u30b9\u304c\u4f7f\u3048\u308b\u306e\u306f\u3082\u3061\u308d\u3093\u3067\u3059\u304c\u3001\u5b9f\u969b\u306bnotebook\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u5909\u6570\u306a\u3069\u3082\u5b9f\u884c\u6642\u306e\u5024\u3092\u6301\u3063\u305f\u307e\u307eimport\u3067\u304d\u307e\u3059\u3002\u8d85\u4fbf\u5229\uff01\uff01\n\u307e\u305f\u3001\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067print\u3084plt.show\u306a\u3069\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001notebook\u3092import\u3057\u3066\u3044\u308b\u30bb\u30eb\u3092\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3059\u308c\u3070\u898b\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u3088\u308a\u5feb\u9069\u306aJupyter\u30e9\u30a4\u30d5\u304c\u9001\u308c\u305d\u3046\u3067\u3059\u3002\nJupyter\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u5225\u306enotebook(ipynb\u30d5\u30a1\u30a4\u30eb\uff09\u306e\u95a2\u6570\u3084\u7d50\u679c\u3092\u4f7f\u3044\u307e\u308f\u3057\u305f\u304f\u306a\u308a\u307e\u3059\u3088\u306d\u3002python\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u65b9\u6cd5\u304c\u516c\u5f0f\u306b\u3042\u3063\u305f\u306e\u3067\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\uff08\u4eca\u5f8c\u4f55\u56de\u3082\u4f7f\u3044\u305d\u3046\u306a\u306e\u3067\u81ea\u5206\u306e\u5099\u5fd8\u9332\u306e\u610f\u5473\u3082\u8fbc\u3081\u3066\uff09\n\n\u516c\u5f0f\u306e\u30b5\u30a4\u30c8\u306e\u4f8b:\nhttp://jupyter-notebook.readthedocs.io/en/latest/examples/Notebook/Importing%20Notebooks.html\n\n\u3084\u308a\u65b9\u3068\u3057\u3066\u306fnotebook\u3092\u5b9f\u884c\u3057\u3066\u7d50\u679c\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u767b\u9332\u3057\u3066\u3001sys.meta_path\u3092\u4f7f\u3063\u3066import\u3092\u30d5\u30c3\u30af\u3057\u3066\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nimport\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067notebook\u306f\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u5143\u306e\u72b6\u614b\u3092\u5909\u3048\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u5b89\u5fc3\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```\nimport io, os, sys, types\nfrom IPython import get_ipython\nfrom nbformat import read\nfrom IPython.core.interactiveshell import InteractiveShell\n\ndef find_notebook(fullname, path=None):\n    name = fullname.rsplit('.', 1)[-1]\n    if not path:\n        path = ['']\n    for d in path:\n        nb_path = os.path.join(d, name + \".ipynb\")\n        if os.path.isfile(nb_path):\n            return nb_path\n        nb_path = nb_path.replace(\"_\", \" \")\n        if os.path.isfile(nb_path):\n            return nb_path\n\nclass NotebookLoader(object):\n    def __init__(self, path=None):\n        self.shell = InteractiveShell.instance()\n        self.path = path\n\n    def load_module(self, fullname):\n        path = find_notebook(fullname, self.path)\n        with io.open(path, 'r', encoding='utf-8') as f:\n            nb = read(f, 4)\n        mod = types.ModuleType(fullname)\n        mod.__file__ = path\n        mod.__loader__ = self\n        mod.__dict__['get_ipython'] = get_ipython\n        sys.modules[fullname] = mod\n        save_user_ns = self.shell.user_ns\n        self.shell.user_ns = mod.__dict__\n        try:\n          for cell in nb.cells:\n            if cell.cell_type == 'code':\n                code = self.shell.input_transformer_manager.transform_cell(cell.source)\n                exec(code, mod.__dict__)\n        finally:\n            self.shell.user_ns = save_user_ns\n        return mod\n\nclass NotebookFinder(object):\n    def __init__(self):\n        self.loaders = {}\n\n    def find_module(self, fullname, path=None):\n        nb_path = find_notebook(fullname, path)\n        if not nb_path:\n            return\n        key = path\n        if path:\n            key = os.path.sep.join(path)\n        if key not in self.loaders:\n            self.loaders[key] = NotebookLoader(path)\n        return self.loaders[key]\n```\n\u3053\u308c\u3092notebookutil.py\u306a\u3069\u3068\u3057\u3066\u4fdd\u5b58\u3057\u307e\u3059\u3002\u4f7f\u3046\u3068\u304d\u306f\n\n```\nimport notebookutil as nbu\nsys.meta_path.append(nbu.NotebookFinder())\n```\n\u3068\u3059\u308c\u3070\u3001notebook\u3092import\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```\nimport mynotebook\n```\n\n\u95a2\u6570\u3084\u30af\u30e9\u30b9\u304c\u4f7f\u3048\u308b\u306e\u306f\u3082\u3061\u308d\u3093\u3067\u3059\u304c\u3001\u5b9f\u969b\u306bnotebook\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067\u5909\u6570\u306a\u3069\u3082\u5b9f\u884c\u6642\u306e\u5024\u3092\u6301\u3063\u305f\u307e\u307eimport\u3067\u304d\u307e\u3059\u3002\u8d85\u4fbf\u5229\uff01\uff01\n\n\u307e\u305f\u3001\u5b9f\u884c\u3057\u3066\u3044\u308b\u306e\u3067print\u3084plt.show\u306a\u3069\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001notebook\u3092import\u3057\u3066\u3044\u308b\u30bb\u30eb\u3092\u3082\u3046\u4e00\u5ea6\u5b9f\u884c\u3059\u308c\u3070\u898b\u3048\u306a\u304f\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3088\u308a\u5feb\u9069\u306aJupyter\u30e9\u30a4\u30d5\u304c\u9001\u308c\u305d\u3046\u3067\u3059\u3002\n", "tags": ["Jupyter", "IPython", "Python"]}