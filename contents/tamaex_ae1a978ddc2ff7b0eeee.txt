{"context": "\n\n\u8a8d\u8a3c\u65b9\u5f0f\u306e\u9078\u629e\nWeb\u306e\u8a8d\u8a3c\u65b9\u5f0f\u3067\u306f\u3001OpenID Connect\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u306e\u304c\uff08Google\u306e\u5b9f\u88c5\u306a\u3069\u3092\u898b\u3066\u3082\uff09\u30d9\u30b9\u30c8\u30fb\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u7686\u3055\u3093\u3001\u5b9f\u969b\u306b\u306f\u3069\u3046\u3057\u3066\u3089\u3063\u3057\u3083\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\u50d5\u306f\u3001Spring\u3092\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u611b\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Spring\u306eRest\u30b5\u30fc\u30d0\u6a5f\u80fd\u3067\u306f\u3001\u307e\u3060OpenID connect\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5b89\u5168\u306a\u65b9\u5f0f\u3092\u9078\u629e\u3059\u3079\u304d\u4e00\u65b9\u3067\u3001\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3089\u9078\u3076\u3057\u304b\u306a\u3044\u3068\u3044\u3046\u73fe\u5b9f\u3082\u3042\u308a\u307e\u3059\u306d\u3002\n\u6700\u3082\u7c21\u5358\u306a\u8a8d\u8a3c\u3068\u3057\u3066\u3001\u672a\u3060\u306b\u5e83\u304f\u306f\u3001\u30e6\u30fc\u30b6\u767b\u9332\u6642\u306b\u632f\u308a\u51fa\u3057\u305f\u56fa\u5b9a\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092\u305d\u306e\u307e\u307eGET/POST\u6642\u306b\u9001\u4fe1\u3059\u308b\u3001\u3068\u3044\u3046\u30b7\u30b9\u30c6\u30e0\u3082\u591a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u306b\u5bfe\u3057\u3066\u306f\u5909\u5316\u3059\u308b\u30ad\u30fc\u306e\u307b\u3046\u304c\u30d9\u30bf\u30fc\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u4eca\u56de\u306f\u3001Spring Boot(Web service/security)\u306eOAuth2.0\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u3001\u4e00\u6642\u7684\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u30ad\u30fc\u3092\u632f\u308a\u51fa\u3059\u65b9\u5f0f\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\uff03\u672c\u8cea\u7684\u306b\u5909\u308f\u3089\u306a\u304b\u3063\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u2026\n\nOAuth2.0\nOAuth2.0\u306b\u306f\u8907\u6570\u306e\u8a8d\u53ef\u30d5\u30ed\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u4f7f\u3046\u306e\u306f\u3001\u3053\u306e\u4e2d\u306e\u300eResource Owner Password Credentials\u300f\u3067\u3059\u3002\n\uff03OAuth1.0/2.0\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\nIPA\u306e\u30bb\u30ad\u30e5\u30a2\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u89e3\u8aac\u3092\u898b\u308b\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u3001\u304b\u3064\u300c\u96e3\u304c\u3042\u308b\u300d\u3068\u3044\u3046\u8a18\u8f09\u306e\u3042\u308b\u8a8d\u53ef\u30d5\u30ed\u30fc\u3067\u3059\u304c\u3001\u3053\u3053\u306b\u51fa\u3066\u304f\u308b\u300c\u8a8d\u53ef\u30b5\u30fc\u30d0\u30fb\u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fb\u30a2\u30af\u30bb\u30b9\u4e3b\u4f53\u300d\u304c\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u4f7f\u3046\u3053\u3068\u304c\u8a31\u5bb9\u3055\u308c\u308b\u3068\u3044\u3046\u6761\u4ef6\u3067\u3001\u4eca\u56de\u306f\u5229\u7528\u3057\u307e\u3059\u3002\n\uff03OAuth2.0\u306e\u4ed5\u69d8\u306b\u3082\u3001\u300cThe credentials should only be used when there is a high degree of trust between the resource owner and the client\u300d\u3068\u3044\u3046\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\u79c1\u81ea\u8eab\u306f\u3001\u300cWeb API The Good Parts\u300d\u3068\u3044\u3046\u66f8\u7c4d\u3092\u8aad\u3093\u3067\u3001\u3053\u306e\u65b9\u5f0f\u3092\u77e5\u308a\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u3001\u3053\u306e\u65b9\u5f0f\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3082\u4ed6\u306b\u5e7e\u3064\u304b\u3042\u308b\u3088\u3046\u3067\u3059\u3002[1] [2]\n\n\u74b0\u5883\u30fb\u30c4\u30fc\u30eb\n\u30b5\u30fc\u30d0\u306fSpring Boot\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306eSpring\u516c\u5f0f\u306e\u300eSpring Boot and OAuth2\u300f\u3068\u3044\u3046Tutorial\u306b\u5f93\u3063\u3066\u3001Maven\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\npom.xml\n<dependency>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n    <groupId>org.springframework.security.oauth</groupId>\n    <artifactId>spring-security-oauth2</artifactId>\n</dependency>\n\n\n\uff03\u516c\u5f0f\u30da\u30fc\u30b8\u306eOAuth2\u306f\u3001Provider\u3068\u3057\u3066Facebook\u3084Github\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001Resource Owner Password Credentials\u3068\u306f\u7570\u306a\u308b\u8a8d\u53ef\u30d5\u30ed\u30fc\u306e\u4f5c\u308a\u65b9\u3067\u3059\u304c\u3001\u4f9d\u5b58\u95a2\u4fc2\u306f\u540c\u3058\u3082\u306e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4e3b\u306b\u5225\u5b9f\u88c5\u306e\u30b5\u30fc\u30d0\u304c\u591a\u6570\u3042\u308a\u307e\u3059\u304c\u3001Web\u753b\u9762\u304b\u3089\u3082\u5229\u7528\u3057\u3066\u3044\u3066\u3001\u305d\u3053\u3067\u306fAngular2\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nWeb\u753b\u9762\u306e\u52d5\u4f5c\u78ba\u8a8d\u306b\u306fPostman\u3092\u4f75\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\u306b\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u4eca\u56de\u306f\u3001\u3053\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001OAuth2\u306b\u95a2\u3057\u3066\u306f\u3001\u307e\u305f\u5225\u306e\u516c\u5f0f\u306e\u5168\u4f53\u7684\u306a\u30ac\u30a4\u30c9\u300eOAuth 2 Developers Guide\u300f\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u9ad8\u5ea6\u306a\u5236\u5fa1\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5b9f\u969b\u306e\u6539\u4fee\n\u3055\u304d\u307b\u3069\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3001\u4eca\u56de\u306eOAuth2\u306e\u8a8d\u53ef\u30d5\u30ed\u30fc\u306b\u5fc5\u8981\u306a\u306e\u306f\u3001\u7d50\u5c403\u3064\u306e\u30af\u30e9\u30b9\u3067\u3057\u305f\u3002\n\nAuthorizationServerConfiguration\nResourceServerConfiguration\nOAuth2SecurityConfiguration\n\nOAuth2\u306e\u767b\u5834\u4eba\u7269\uff08\u30b5\u30fc\u30d0\uff09\u3067\u306f\u3001\u307e\u305a\u8a8d\u53ef\u3057\u3066\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3059\u308bAuthorizationServer\u3068\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u5b9f\u969b\u306b\u3001\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308bResourceServer\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\uff11\u756a\u306eConfiguration\u30af\u30e9\u30b9\u3068\uff12\u756a\u306eConfiguration\u306b\u3088\u3063\u3066\u3001Spring Security\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u6a5f\u80fd\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3001\u81ea\u5206\u306e\u610f\u56f3\u3069\u304a\u308a\u306b\u52d5\u4f5c\u3055\u305b\u308b\u3001\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306e\u3088\u3046\u3067\u3059\u3002\n\uff13\u756a\u306eConfiguration\u30af\u30e9\u30b9\u306f\u3001\u76f4\u63a5\u7684\u306bOAuth2\u306b\u95a2\u9023\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001Spring Security\u81ea\u4f53\u306e\u8a2d\u5b9a\u3068\u52d5\u4f5c\uff08\u4f8b\u3048\u3070AuthenticationManager\uff09\u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\uff08package\uff09\u3092\u4f5c\u3063\u3066\u5165\u308c\u308c\u3070\u3001@configuration\u306b\u3088\u3063\u3066Spring\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3067\u304d\u307e\u3057\u305f\u3002\uff09\n\u4e00\u5fdc\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30bd\u30fc\u30b9\u30fb\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\nAuthorizationServerConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;\nimport org.springframework.security.oauth2.provider.approval.UserApprovalHandler;\nimport org.springframework.security.oauth2.provider.token.TokenStore;\n\n@Configuration\n@EnableAuthorizationServer\npublic class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {\n\n    private static String REALM=\"MY_OAUTH_REALM\";\n\n    @Autowired\n    private TokenStore tokenStore;\n\n    @Autowired\n    private UserApprovalHandler userApprovalHandler;\n\n    @Autowired\n    @Qualifier(\"authenticationManagerBean\")\n    private AuthenticationManager authenticationManager;\n\n    @Override\n    public void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n\n        clients.inMemory()\n            .withClient(\"my-trusted-client\")\n            .authorizedGrantTypes(\"password\", \"authorization_code\", \"refresh_token\", \"implicit\")\n            .authorities(\"ROLE_CLIENT\", \"ROLE_TRUSTED_CLIENT\")\n            .scopes(\"read\", \"write\", \"trust\")\n            .secret(\"secret\")\n            .accessTokenValiditySeconds(120).//Access token is only valid for 2 minutes.\n            refreshTokenValiditySeconds(600);//Refresh token is only valid for 10 minutes.\n    }\n\n    @Override\n    public void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n        endpoints.tokenStore(tokenStore).userApprovalHandler(userApprovalHandler)\n                .authenticationManager(authenticationManager);\n    }\n\n    @Override\n    public void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception {\n        oauthServer.realm(REALM+\"/client\");\n    }\n\n}\n\n\n\n\nResourceServerConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer;\nimport org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler;\n\n@Configuration\n@EnableResourceServer\npublic class ResourceServerConfiguration extends ResourceServerConfigurerAdapter {\n\n    private static final String RESOURCE_ID = \"my_rest_api\";\n\n    @Override\n    public void configure(ResourceServerSecurityConfigurer resources) {\n        resources.resourceId(RESOURCE_ID).stateless(false);\n    }\n\n    @Override\n    public void configure(HttpSecurity http) throws Exception {\n        http.\n        anonymous().disable()\n        .requestMatchers().antMatchers(\"/user/**\")\n        .and().authorizeRequests()\n        .antMatchers(\"/user/**\").access(\"hasRole('ADMIN')\")\n        .and().exceptionHandling().accessDeniedHandler(new OAuth2AccessDeniedHandler());\n    }\n\n}\n\n\n\n\nOAuth2SecurityConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.oauth2.provider.ClientDetailsService;\nimport org.springframework.security.oauth2.provider.approval.ApprovalStore;\nimport org.springframework.security.oauth2.provider.approval.TokenApprovalStore;\nimport org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler;\nimport org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory;\nimport org.springframework.security.oauth2.provider.token.TokenStore;\nimport org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore;\n\n@Configuration\n@EnableWebSecurity\npublic class OAuth2SecurityConfiguration extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    private ClientDetailsService clientDetailsService;\n\n    @Autowired\n    public void globalUserDetails(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n        .withUser(\"bill\").password(\"abc123\").roles(\"ADMIN\").and()\n        .withUser(\"bob\").password(\"abc123\").roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n        .csrf().disable()\n        .anonymous().disable()\n        .authorizeRequests()\n        .antMatchers(\"/oauth/token\").permitAll();\n    }\n\n    @Override\n    @Bean\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n\n\n    @Bean\n    public TokenStore tokenStore() {\n        return new InMemoryTokenStore();\n    }\n\n    @Bean\n    @Autowired\n    public TokenStoreUserApprovalHandler userApprovalHandler(TokenStore tokenStore){\n        TokenStoreUserApprovalHandler handler = new TokenStoreUserApprovalHandler();\n        handler.setTokenStore(tokenStore);\n        handler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService));\n        handler.setClientDetailsService(clientDetailsService);\n        return handler;\n    }\n\n    @Bean\n    @Autowired\n    public ApprovalStore approvalStore(TokenStore tokenStore) throws Exception {\n        TokenApprovalStore store = new TokenApprovalStore();\n        store.setTokenStore(tokenStore);\n        return store;\n    }\n\n}\n\n\n\n\n\u3053\u308c\u3067\u3001OAuth2\u306e\u30b5\u30fc\u30d0\u6a5f\u80fd\u3068\u3057\u3066\u306f\u52d5\u304b\u305b\u308b\u306e\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd\u3068\u5408\u308f\u305b\u308b\u3068\u3001\u307e\u3060\u307e\u3060\u3001\u306f\u307e\u308a\u3069\u3053\u308d\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u5c11\u3057\u3054\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u9577\u3044\u306e\u3067\u3001\u5225\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\uff09\n\n\u3053\u306e\u5f8c\u306e\u306f\u307e\u308a\u3069\u3053\u308d\uff08\uff11\uff09HTTP OPTIONS\u306e\u9001\u4fe1\n\u6700\u521d\u306ePOST\u3092\u9001\u4fe1\u3059\u308b\u524d\u306b\u3001Angular2\u5074\u304b\u3089\u52d5\u304b\u3057\u305f\u3068\u3053\u308d\u3001HTTP POST\u306e\u4ee3\u308f\u308a\u306bHTTP OPTIONS\u304c\u9001\u4fe1\u3055\u308c\u3001\u30a8\u30e9\u30fc\u306b\u2026\n\u30ca\u30cb\u30b3\u30ec\u3001\u3068\u5171\u611f\u9802\u3051\u308b\u65b9\u306f\u3001\u3053\u3061\u3089\u306b\u3002\n\n\u3053\u306e\u5f8c\u306e\u306f\u307e\u308a\u3069\u3053\u308d\uff08\uff12\uff09sync/await\u6a5f\u80fd\u306e\u5c0e\u5165\n\u2460access_token\u53d6\u5f97\u5f8c\u306b\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3057\u3001\u5373\u6642\u306b\u3001\u2461\u305d\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001Angular2\u3092\u4f7f\u3046\u3068\u3001http\u901a\u4fe1\u306f\u975e\u540c\u671f\u51e6\u7406\u3067\u3001\u623b\u308a\u5024\u306fObservable\u307e\u305f\u306f\u5909\u63db\u3057\u305fPromise\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001\u2460\u3067\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3059\u308b\u524d\u306b\u3001\u2461\u3067\u30c8\u30fc\u30af\u30f3\u3092\u53c2\u7167\u3057\u3066\u3057\u307e\u3044\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u72b6\u614b\u306b\uff08\u305d\u306e\u307e\u307e\u3060\u3068\uff09\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3046\u3068\u304d\u306f\u5f85\u3061\u5408\u308f\u305b\u6a5f\u80fd\u4f7f\u3044\u305f\u3044\u2026Typescript\u3067\u306fsync/await\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3044\u305f\u3044\uff01\u3088\u3057\uff01\u2026\u3068\u601d\u3063\u305f\u3089\u3001Angular2\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u74b0\u5883\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3059\u3001\u30ba\u30b3\u30fc\u3063\uff01\n\u3053\u3061\u3089\u3082\u3001\u5171\u611f\u9802\u3051\u308b\u65b9\u306f\u3001\u3053\u3061\u3089\u306b\u3002\n\u9577\u6587\u304a\u4ed8\u304d\u5408\u3044\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\uff08\u7d42\u308f\u308a\uff09\n## \u8a8d\u8a3c\u65b9\u5f0f\u306e\u9078\u629e\n\nWeb\u306e\u8a8d\u8a3c\u65b9\u5f0f\u3067\u306f\u3001OpenID Connect\u3092\u4f7f\u3046\u3001\u3068\u3044\u3046\u306e\u304c\uff08[Google\u306e\u5b9f\u88c5](https://developers.google.com/identity/protocols/OAuth2)\u306a\u3069\u3092\u898b\u3066\u3082\uff09\u30d9\u30b9\u30c8\u30fb\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306e\u3088\u3046\u3067\u3059\u304c\u3001\u7686\u3055\u3093\u3001\u5b9f\u969b\u306b\u306f\u3069\u3046\u3057\u3066\u3089\u3063\u3057\u3083\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u50d5\u306f\u3001Spring\u3092\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3067\u611b\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Spring\u306eRest\u30b5\u30fc\u30d0\u6a5f\u80fd\u3067\u306f\u3001[\u307e\u3060OpenID connect\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044](http://qiita.com/TakahikoKawasaki/items/f2a0d25a4f05790b3baa)\u3088\u3046\u3067\u3059\u3002\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306f\u5b89\u5168\u306a\u65b9\u5f0f\u3092\u9078\u629e\u3059\u3079\u304d\u4e00\u65b9\u3067\u3001\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u3089\u9078\u3076\u3057\u304b\u306a\u3044\u3068\u3044\u3046\u73fe\u5b9f\u3082\u3042\u308a\u307e\u3059\u306d\u3002\n\n\u6700\u3082\u7c21\u5358\u306a\u8a8d\u8a3c\u3068\u3057\u3066\u3001\u672a\u3060\u306b\u5e83\u304f\u306f\u3001\u30e6\u30fc\u30b6\u767b\u9332\u6642\u306b\u632f\u308a\u51fa\u3057\u305f\u56fa\u5b9a\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\u3092\u305d\u306e\u307e\u307eGET/POST\u6642\u306b\u9001\u4fe1\u3059\u308b\u3001\u3068\u3044\u3046\u30b7\u30b9\u30c6\u30e0\u3082\u591a\u3044\u3088\u3046\u3067\u3059\u304c\u3001\u30ea\u30d7\u30ec\u30a4\u653b\u6483\u306b\u5bfe\u3057\u3066\u306f\u5909\u5316\u3059\u308b\u30ad\u30fc\u306e\u307b\u3046\u304c\u30d9\u30bf\u30fc\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u4eca\u56de\u306f\u3001Spring Boot(Web service/security)\u306eOAuth2.0\u6a5f\u80fd\u3092\u5229\u7528\u3057\u3066\u3001\u4e00\u6642\u7684\u306a\u30bb\u30c3\u30b7\u30e7\u30f3\u30ad\u30fc\u3092\u632f\u308a\u51fa\u3059\u65b9\u5f0f\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\uff03\u672c\u8cea\u7684\u306b\u5909\u308f\u3089\u306a\u304b\u3063\u305f\u3089\u3054\u3081\u3093\u306a\u3055\u3044\u2026\n\n## OAuth2.0\n\n[OAuth2.0](https://oauth.net/)\u306b\u306f\u8907\u6570\u306e\u8a8d\u53ef\u30d5\u30ed\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u56de\u4f7f\u3046\u306e\u306f\u3001\u3053\u306e\u4e2d\u306e\u300eResource Owner Password Credentials\u300f\u3067\u3059\u3002\n\uff03OAuth1.0/2.0\u306b\u3064\u3044\u3066\u77e5\u308a\u305f\u3044\u65b9\u306f[\u3053\u3061\u3089](https://murashun.jp/blog/20150920-01.html#chapter-3)\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\n\n[IPA\u306e\u30bb\u30ad\u30e5\u30a2\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u89e3\u8aac](https://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/709.html)\u3092\u898b\u308b\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u3001\u304b\u3064\u300c\u96e3\u304c\u3042\u308b\u300d\u3068\u3044\u3046\u8a18\u8f09\u306e\u3042\u308b\u8a8d\u53ef\u30d5\u30ed\u30fc\u3067\u3059\u304c\u3001\u3053\u3053\u306b\u51fa\u3066\u304f\u308b[\u300c\u8a8d\u53ef\u30b5\u30fc\u30d0\u30fb\u30ea\u30bd\u30fc\u30b9\u30b5\u30fc\u30d0\u30fb\u30a2\u30af\u30bb\u30b9\u4e3b\u4f53\u300d\u304c\u81ea\u5206\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3042\u308b\u5834\u5408\u306b\u306f\u4f7f\u3046\u3053\u3068\u304c\u8a31\u5bb9\u3055\u308c\u308b](http://stackoverflow.com/questions/28285688/oauth-2-resource-owner-password-grant-type-for-javascript-client)\u3068\u3044\u3046\u6761\u4ef6\u3067\u3001\u4eca\u56de\u306f\u5229\u7528\u3057\u307e\u3059\u3002\n\uff03OAuth2.0\u306e\u4ed5\u69d8\u306b\u3082\u3001[\u300cThe credentials should only be used when there is a high degree of trust between the resource owner and the client\u300d](https://tools.ietf.org/html/draft-ietf-oauth-v2-30#section-1.3.2)\u3068\u3044\u3046\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u79c1\u81ea\u8eab\u306f\u3001[\u300cWeb API The Good Parts\u300d](https://www.oreilly.co.jp/books/9784873116860/)\u3068\u3044\u3046\u66f8\u7c4d\u3092\u8aad\u3093\u3067\u3001\u3053\u306e\u65b9\u5f0f\u3092\u77e5\u308a\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306b\u3001\u3053\u306e\u65b9\u5f0f\u3092\u7d39\u4ecb\u3057\u3066\u3044\u308b\u8a18\u4e8b\u3082\u4ed6\u306b\u5e7e\u3064\u304b\u3042\u308b\u3088\u3046\u3067\u3059\u3002[[1]](https://content.pivotal.io/blog/securing-restful-web-services-with-oauth2)  [[2]](http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/)\n\n## \u74b0\u5883\u30fb\u30c4\u30fc\u30eb\n\n\u30b5\u30fc\u30d0\u306fSpring Boot\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306eSpring\u516c\u5f0f\u306e[\u300eSpring Boot and OAuth2\u300f\u3068\u3044\u3046Tutorial](https://spring.io/guides/tutorials/spring-boot-oauth2/)\u306b\u5f93\u3063\u3066\u3001Maven\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```pom.xml\n<dependency>\n\t<groupId>org.springframework.boot</groupId>\n\t<artifactId>spring-boot-starter-security</artifactId>\n</dependency>\n<dependency>\n\t<groupId>org.springframework.security.oauth</groupId>\n\t<artifactId>spring-security-oauth2</artifactId>\n</dependency>\n```\n\uff03\u516c\u5f0f\u30da\u30fc\u30b8\u306eOAuth2\u306f\u3001Provider\u3068\u3057\u3066Facebook\u3084Github\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001Resource Owner Password Credentials\u3068\u306f\u7570\u306a\u308b\u8a8d\u53ef\u30d5\u30ed\u30fc\u306e\u4f5c\u308a\u65b9\u3067\u3059\u304c\u3001\u4f9d\u5b58\u95a2\u4fc2\u306f\u540c\u3058\u3082\u306e\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\n\u307e\u305f\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u4e3b\u306b\u5225\u5b9f\u88c5\u306e\u30b5\u30fc\u30d0\u304c\u591a\u6570\u3042\u308a\u307e\u3059\u304c\u3001Web\u753b\u9762\u304b\u3089\u3082\u5229\u7528\u3057\u3066\u3044\u3066\u3001\u305d\u3053\u3067\u306fAngular2\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nWeb\u753b\u9762\u306e\u52d5\u4f5c\u78ba\u8a8d\u306b\u306fPostman\u3092\u4f75\u7528\u3057\u307e\u3057\u305f\u3002\n\n\n## \u53c2\u8003\u306b\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u4eca\u56de\u306f\u3001[\u3053\u306e\u8a18\u4e8b](http://websystique.com/spring-security/secure-spring-rest-api-using-oauth2/)\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n\n\u307e\u305f\u3001OAuth2\u306b\u95a2\u3057\u3066\u306f\u3001\u307e\u305f\u5225\u306e\u516c\u5f0f\u306e[\u5168\u4f53\u7684\u306a\u30ac\u30a4\u30c9\u300eOAuth 2 Developers Guide\u300f](http://projects.spring.io/spring-security-oauth/docs/oauth2.html)\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u306e\u30da\u30fc\u30b8\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b[\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0](https://github.com/spring-projects/spring-security-oauth)\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30bd\u30fc\u30b9\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u3055\u3089\u306b\u9ad8\u5ea6\u306a\u5236\u5fa1\u304c\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n### \u5b9f\u969b\u306e\u6539\u4fee\n\n\u3055\u304d\u307b\u3069\u306e\u8a18\u4e8b\u306e\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3001\u4eca\u56de\u306eOAuth2\u306e\u8a8d\u53ef\u30d5\u30ed\u30fc\u306b\u5fc5\u8981\u306a\u306e\u306f\u3001\u7d50\u5c403\u3064\u306e\u30af\u30e9\u30b9\u3067\u3057\u305f\u3002\n\n1. AuthorizationServerConfiguration\n2. ResourceServerConfiguration\n3. OAuth2SecurityConfiguration\n\nOAuth2\u306e\u767b\u5834\u4eba\u7269\uff08\u30b5\u30fc\u30d0\uff09\u3067\u306f\u3001\u307e\u305a\u8a8d\u53ef\u3057\u3066\u30c8\u30fc\u30af\u30f3\u3092\u767a\u884c\u3059\u308bAuthorizationServer\u3068\u3001\u305d\u308c\u306b\u3088\u3063\u3066\u5b9f\u969b\u306b\u3001\u30c7\u30fc\u30bf\u3092\u63d0\u4f9b\u3059\u308bResourceServer\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u3001\uff11\u756a\u306eConfiguration\u30af\u30e9\u30b9\u3068\uff12\u756a\u306eConfiguration\u306b\u3088\u3063\u3066\u3001Spring Security\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d0\u6a5f\u80fd\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3001\u81ea\u5206\u306e\u610f\u56f3\u3069\u304a\u308a\u306b\u52d5\u4f5c\u3055\u305b\u308b\u3001\u3068\u3044\u3046\u4ed5\u7d44\u307f\u306e\u3088\u3046\u3067\u3059\u3002\n\n\uff13\u756a\u306eConfiguration\u30af\u30e9\u30b9\u306f\u3001\u76f4\u63a5\u7684\u306bOAuth2\u306b\u95a2\u9023\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3001Spring Security\u81ea\u4f53\u306e\u8a2d\u5b9a\u3068\u52d5\u4f5c\uff08\u4f8b\u3048\u3070AuthenticationManager\uff09\u306b\u95a2\u4fc2\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u81ea\u5206\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u9069\u5f53\u306a\u30d5\u30a9\u30eb\u30c0\uff08package\uff09\u3092\u4f5c\u3063\u3066\u5165\u308c\u308c\u3070\u3001@configuration\u306b\u3088\u3063\u3066Spring\u306b\u8aad\u307f\u8fbc\u307e\u308c\u3066\u52d5\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3067\u304d\u307e\u3057\u305f\u3002\uff09\n\n\u4e00\u5fdc\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30bd\u30fc\u30b9\u30fb\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n``` AuthorizationServerConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.oauth2.config.annotation.configurers.ClientDetailsServiceConfigurer;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.AuthorizationServerConfigurerAdapter;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableAuthorizationServer;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerSecurityConfigurer;\nimport org.springframework.security.oauth2.provider.approval.UserApprovalHandler;\nimport org.springframework.security.oauth2.provider.token.TokenStore;\n\n@Configuration\n@EnableAuthorizationServer\npublic class AuthorizationServerConfiguration extends AuthorizationServerConfigurerAdapter {\n\n\tprivate static String REALM=\"MY_OAUTH_REALM\";\n\t\n\t@Autowired\n\tprivate TokenStore tokenStore;\n\n\t@Autowired\n\tprivate UserApprovalHandler userApprovalHandler;\n\n\t@Autowired\n\t@Qualifier(\"authenticationManagerBean\")\n\tprivate AuthenticationManager authenticationManager;\n\n\t@Override\n\tpublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n\n\t\tclients.inMemory()\n\t        .withClient(\"my-trusted-client\")\n            .authorizedGrantTypes(\"password\", \"authorization_code\", \"refresh_token\", \"implicit\")\n            .authorities(\"ROLE_CLIENT\", \"ROLE_TRUSTED_CLIENT\")\n            .scopes(\"read\", \"write\", \"trust\")\n            .secret(\"secret\")\n            .accessTokenValiditySeconds(120).//Access token is only valid for 2 minutes.\n            refreshTokenValiditySeconds(600);//Refresh token is only valid for 10 minutes.\n\t}\n\n\t@Override\n\tpublic void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n\t\tendpoints.tokenStore(tokenStore).userApprovalHandler(userApprovalHandler)\n\t\t\t\t.authenticationManager(authenticationManager);\n\t}\n\n\t@Override\n\tpublic void configure(AuthorizationServerSecurityConfigurer oauthServer) throws Exception {\n\t\toauthServer.realm(REALM+\"/client\");\n\t}\n\n}\n\n```\n\n``` ResourceServerConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.EnableResourceServer;\nimport org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfigurerAdapter;\nimport org.springframework.security.oauth2.config.annotation.web.configurers.ResourceServerSecurityConfigurer;\nimport org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler;\n\n@Configuration\n@EnableResourceServer\npublic class ResourceServerConfiguration extends ResourceServerConfigurerAdapter {\n\n\tprivate static final String RESOURCE_ID = \"my_rest_api\";\n\t\n\t@Override\n\tpublic void configure(ResourceServerSecurityConfigurer resources) {\n\t\tresources.resourceId(RESOURCE_ID).stateless(false);\n\t}\n\n\t@Override\n\tpublic void configure(HttpSecurity http) throws Exception {\n\t\thttp.\n\t\tanonymous().disable()\n\t\t.requestMatchers().antMatchers(\"/user/**\")\n\t\t.and().authorizeRequests()\n\t\t.antMatchers(\"/user/**\").access(\"hasRole('ADMIN')\")\n\t\t.and().exceptionHandling().accessDeniedHandler(new OAuth2AccessDeniedHandler());\n\t}\n\n}\n\n```\n\n``` OAuth2SecurityConfiguration.java\n\npackage com.websystique.springmvc.security;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.AuthenticationManager;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.oauth2.provider.ClientDetailsService;\nimport org.springframework.security.oauth2.provider.approval.ApprovalStore;\nimport org.springframework.security.oauth2.provider.approval.TokenApprovalStore;\nimport org.springframework.security.oauth2.provider.approval.TokenStoreUserApprovalHandler;\nimport org.springframework.security.oauth2.provider.request.DefaultOAuth2RequestFactory;\nimport org.springframework.security.oauth2.provider.token.TokenStore;\nimport org.springframework.security.oauth2.provider.token.store.InMemoryTokenStore;\n\n@Configuration\n@EnableWebSecurity\npublic class OAuth2SecurityConfiguration extends WebSecurityConfigurerAdapter {\n\n\t@Autowired\n\tprivate ClientDetailsService clientDetailsService;\n\t\n\t@Autowired\n    public void globalUserDetails(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n        .withUser(\"bill\").password(\"abc123\").roles(\"ADMIN\").and()\n        .withUser(\"bob\").password(\"abc123\").roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n\t\thttp\n\t\t.csrf().disable()\n\t\t.anonymous().disable()\n\t  \t.authorizeRequests()\n\t  \t.antMatchers(\"/oauth/token\").permitAll();\n    }\n\n    @Override\n    @Bean\n    public AuthenticationManager authenticationManagerBean() throws Exception {\n        return super.authenticationManagerBean();\n    }\n\n\n\t@Bean\n\tpublic TokenStore tokenStore() {\n\t\treturn new InMemoryTokenStore();\n\t}\n\n\t@Bean\n\t@Autowired\n\tpublic TokenStoreUserApprovalHandler userApprovalHandler(TokenStore tokenStore){\n\t\tTokenStoreUserApprovalHandler handler = new TokenStoreUserApprovalHandler();\n\t\thandler.setTokenStore(tokenStore);\n\t\thandler.setRequestFactory(new DefaultOAuth2RequestFactory(clientDetailsService));\n\t\thandler.setClientDetailsService(clientDetailsService);\n\t\treturn handler;\n\t}\n\t\n\t@Bean\n\t@Autowired\n\tpublic ApprovalStore approvalStore(TokenStore tokenStore) throws Exception {\n\t\tTokenApprovalStore store = new TokenApprovalStore();\n\t\tstore.setTokenStore(tokenStore);\n\t\treturn store;\n\t}\n\t\n}\n\n\n```\n\n\n\u3053\u308c\u3067\u3001OAuth2\u306e\u30b5\u30fc\u30d0\u6a5f\u80fd\u3068\u3057\u3066\u306f\u52d5\u304b\u305b\u308b\u306e\u3067\u3059\u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u6a5f\u80fd\u3068\u5408\u308f\u305b\u308b\u3068\u3001\u307e\u3060\u307e\u3060\u3001\u306f\u307e\u308a\u3069\u3053\u308d\u304c\u3042\u3063\u305f\u306e\u3067\u3001\u5c11\u3057\u3054\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u9577\u3044\u306e\u3067\u3001\u5225\u8a18\u4e8b\u306b\u3057\u307e\u3057\u305f\uff09\n\n## \u3053\u306e\u5f8c\u306e\u306f\u307e\u308a\u3069\u3053\u308d\uff08\uff11\uff09HTTP OPTIONS\u306e\u9001\u4fe1\n\n\u6700\u521d\u306ePOST\u3092\u9001\u4fe1\u3059\u308b\u524d\u306b\u3001Angular2\u5074\u304b\u3089\u52d5\u304b\u3057\u305f\u3068\u3053\u308d\u3001HTTP POST\u306e\u4ee3\u308f\u308a\u306bHTTP OPTIONS\u304c\u9001\u4fe1\u3055\u308c\u3001\u30a8\u30e9\u30fc\u306b\u2026\n\n\u30ca\u30cb\u30b3\u30ec\u3001\u3068\u5171\u611f\u9802\u3051\u308b\u65b9\u306f\u3001[\u3053\u3061\u3089\u306b](http://qiita.com/tamaex/items/e19921a728db2012dd90)\u3002\n\n\n## \u3053\u306e\u5f8c\u306e\u306f\u307e\u308a\u3069\u3053\u308d\uff08\uff12\uff09sync/await\u6a5f\u80fd\u306e\u5c0e\u5165\n\n\u2460access_token\u53d6\u5f97\u5f8c\u306b\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3057\u3001\u5373\u6642\u306b\u3001\u2461\u305d\u306e\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308b\u51e6\u7406\u3092\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001Angular2\u3092\u4f7f\u3046\u3068\u3001http\u901a\u4fe1\u306f\u975e\u540c\u671f\u51e6\u7406\u3067\u3001\u623b\u308a\u5024\u306fObservable\u307e\u305f\u306f\u5909\u63db\u3057\u305fPromise\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3046\u3059\u308b\u3068\u3001\u2460\u3067\u30c8\u30fc\u30af\u30f3\u3092\u4fdd\u5b58\u3059\u308b\u524d\u306b\u3001\u2461\u3067\u30c8\u30fc\u30af\u30f3\u3092\u53c2\u7167\u3057\u3066\u3057\u307e\u3044\u3001\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3001\u3068\u3044\u3046\u72b6\u614b\u306b\uff08\u305d\u306e\u307e\u307e\u3060\u3068\uff09\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3053\u3046\u3044\u3046\u3068\u304d\u306f\u5f85\u3061\u5408\u308f\u305b\u6a5f\u80fd\u4f7f\u3044\u305f\u3044\u2026Typescript\u3067\u306fsync/await\u6a5f\u80fd\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3044\u305f\u3044\uff01\u3088\u3057\uff01\u2026\u3068\u601d\u3063\u305f\u3089\u3001Angular2\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u74b0\u5883\u3067\u306f\u4f7f\u3048\u306a\u3044\u306e\u3067\u3059\u3001\u30ba\u30b3\u30fc\u3063\uff01\n\n\u3053\u3061\u3089\u3082\u3001\u5171\u611f\u9802\u3051\u308b\u65b9\u306f\u3001[\u3053\u3061\u3089\u306b](http://qiita.com/tamaex/items/39df6a38f2040295eb3a)\u3002\n\n\n\u9577\u6587\u304a\u4ed8\u304d\u5408\u3044\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff01\n\uff08\u7d42\u308f\u308a\uff09\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["SpringBoot", "Angular2"]}