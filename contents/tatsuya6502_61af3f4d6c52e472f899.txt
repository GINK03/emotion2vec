{"tags": ["rust"], "context": " More than 1 year has passed since last update.\u5b89\u5168\u3067\u5b9f\u884c\u52b9\u7387\u306e\u3088\u3044\uff08\u3068\u3044\u3046\u8b33\u3044\u6587\u53e5\u306e\uff09 Rust \u306b\u3059\u3063\u304b\u308a\u60da\u308c\u8fbc\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5feb\u9069\u306b\u4f7f\u3048\u308b\u307e\u3067\u306e\u9053\u306e\u308a\u306f\u3001\u307e\u3060\u9577\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nRust \u3092\u4f7f\u3044\u59cb\u3081\u3066\u3059\u3050\u306b\u611f\u3058\u305f\u306e\u306f\u3001Haskell\uff08GHC\uff09\u3001OCaml\u3001Scala \u306e\u3088\u3046\u306a REPL \u304c\u6b32\u3057\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u305f\u3002REPL \u306f Read-Evaluate-Print Loop \u306e\u982d\u6587\u5b57\u3092\u3068\u3063\u305f\u3082\u306e\u3067\u3001\u3044\u308f\u3086\u308b\u3001\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u3053\u3068\u3067\u3059\u3002\n\u4f8b\uff1a Haskell\uff08GHC\uff09\u306e\u5834\u5408\n% ghci\nGHCi, version 7.10.2: http://www.haskell.org/ghc/  :? for help\nPrelude> take 5 [1..]\n[1,2,3,4,5]\n\nPrelude> :type foldr\nfoldr :: Foldable t => (a -> b -> b) -> b -> t a -> b\n\nPrelude> :info Foldable\nclass Foldable (t :: * -> *) where\n  Data.Foldable.fold :: Monoid m => t m -> m\n  foldMap :: Monoid m => (a -> m) -> t a -> m\n  foldr :: (a -> b -> b) -> b -> t a -> b\n  Data.Foldable.foldr' :: (a -> b -> b) -> b -> t a -> b\n  foldl :: (b -> a -> b) -> b -> t a -> b\n  Data.Foldable.foldl' :: (b -> a -> b) -> b -> t a -> b\n  foldr1 :: (a -> a -> a) -> t a -> a\n  foldl1 :: (a -> a -> a) -> t a -> a\n  Data.Foldable.toList :: t a -> [a]\n  null :: t a -> Bool\n  length :: t a -> Int\n  elem :: Eq a => a -> t a -> Bool\n  maximum :: Ord a => t a -> a\n  minimum :: Ord a => t a -> a\n  sum :: Num a => t a -> a\n  product :: Num a => t a -> a\n    -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable [] -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable Maybe -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable (Either a) -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable ((,) a) -- Defined in \u2018Data.Foldable\u2019\n\nPrelude> foldr (+) 0 $ take 5 [1..]\n15\n\n\u3053\u306e\u3088\u3046\u306b :type \u3067\u578b\u3092\u8abf\u3079\u306a\u304c\u3089\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u3053\u3068\u3092\u8a66\u305b\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\u4ed6\u306b\u3082\u3001\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u500b\u5225\u306b\u52d5\u304b\u3057\u3066\u307f\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\nRust \u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u578b\u63a8\u8ad6\u3057\u307e\u3059\u3057\u3001\u578b\u306e\u4e0d\u4e00\u81f4\u306e\u6642\u306b\u306f\u61c7\u5207\u4e01\u5be7\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u307e\u3059\u306e\u3067\u3001\u578b\u3092\u304d\u3063\u3061\u308a\u7406\u89e3\u3067\u304d\u3066\u306a\u304f\u3066\u3082\u3001\u6c17\u5408\u3067\u4e57\u308a\u5207\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\uff08\u6c17\u5408\u3068\u3044\u3046\u306e\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u307e\u3067\u3001\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u30bd\u30fc\u30b9\u3092\u66f8\u304d\u5909\u3048\u3066\u30c8\u30e9\u30a4\u3059\u308b\u3084\u308a\u65b9\uff09\u3000\u3057\u304b\u3057\u3001\u3069\u306e\u5f0f\u304c\u3069\u3093\u306a\u578b\u306e\u5024\u3092\u8fd4\u3059\u306e\u304b\u3092\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3001\u7d50\u679c\u7684\u306b\u306f\u305a\u3063\u3068\u6642\u9593\u3092\u7bc0\u7d04\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u3067\u3042\u3063\u3066\u3082\u3001\u6700\u521d\u306f REPL \u3067\u3042\u308c\u3053\u308c\u8a66\u3057\u3066\u7406\u89e3\u3092\u6df1\u3081\u305f\u3044\uff08Haskell\u3001OCaml\u3001Scala\u306e\u3088\u3046\u306b\uff09\u3002\u3053\u3046\u3057\u3066 Rust \u306e\u578b\u306b\u3064\u3044\u3066\u3042\u308b\u7a0b\u5ea6\u306e\u30bb\u30f3\u30b9\u304c\u3064\u3051\u3070\u3001\u305d\u308c\u4ee5\u964d\u306f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u8aad\u3080\u3060\u3051\u3067\u3001\u3059\u3050\u306b\u30d4\u30f3\u3068\u304f\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\u305d\u3093\u306a\u6642\u300124 days of Rust \u3068\u3044\u3046\u30b5\u30a4\u30c8\u3092\u898b\u3064\u3051\u3066\u3001\u305d\u3053\u3067\u3001rusti \u3068\u3044\u3046\u975e\u516c\u5f0f\u306e REPL \u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u8a66\u3057\u305f\u3068\u3053\u308d\u3001\u73fe\u5728\u306e Rust \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u5236\u9650\u306b\u3088\u308a\u3001\u3054\u304f\u7c21\u5358\u306a\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u7121\u3044\u3088\u308a\u3082\u305a\u3063\u3068\u3044\u3044\u3082\u306e\u3067\u3057\u305f\u3002\n\nDocker \u3067\u30b5\u30af\u30c3\u3068\u304a\u8a66\u3057\u3059\u308b\nrusti \u306f\u73fe\u72b6\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u30b3\u30fc\u30c9\u306f GitHub \u306b\u3042\u308a\u307e\u3059\uff1a\n\nmurarth/rusti\n\n\u3053\u3053\u3067\u554f\u984c\u306a\u306e\u306f\u3001rusti \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u5185\u90e8\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u73fe\u72b6\u306f\u3001Rust \u306e nightly \u30d3\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u3057\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3053\u3068\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u3042\u307e\u308a\u306b\u3082\u30b3\u30a2\u306a\u90e8\u5206\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Rust \u306e\u958b\u767a\u304c\u9032\u3080\u3068\u3001\u3059\u3050\u306b\u52d5\u304b\u306a\u304f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002rusti \u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u898b\u308b\u3068\u3001\u305d\u306e\u6226\u3044\u306e\u6b74\u53f2\u304c\u305f\u3069\u308c\u307e\u3059...\uff08\u73fe\u5728\u3082\u9032\u884c\u4e2d\uff09\nDate: Sat Feb 6 13:11:40 2016 -0700\n    Fix for nightly (34af2de40 2016-02-05)\n\nDate: Wed Feb 3 18:58:11 2016 -0700\n    Fix for nightly (dea183aa8 2016-02-02)\n\nDate: Sat Jan 30 11:55:01 2016 -0700\n    Fix for nightly (303892ee1 2016-01-30)\n\nDate: Thu Jan 28 11:41:00 2016 -0700\n    Fix for nightly (38e23e8f7 2016-01-27)\n\n\u6570\u65e5\u3054\u3068\u306b\u76f4\u3057\u3066\u307e\u3059\u306d...\u3002\u3054\u82e6\u52b4\u3055\u307e\u3067\u3059\u3002\n\u3053\u308c\u3060\u3068\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u6642\u70b9\u3067\u632b\u6298\u3057\u305d\u3046\u306a\u306e\u3067\u3001Docker \u30a4\u30e1\u30fc\u30b8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u6700\u5f8c\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u306b\u3042\u308b 2016-02-05 \u7248\u306e Rust nightly \u3092\u4f7f\u3063\u3066\u307e\u30591\u3002\nDocker \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n$ sudo docker pull quay.io/tatsuya6502/rusti\n$ sudo docker run -it quay.io/tatsuya6502/rusti\n\n\u3061\u306a\u307f\u306b\u3001Dockerfile \u306a\u3069\u306f \u3053\u3061\u3089 \u306b\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001rusti \u3092\u4f7f\u3046\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\nrusti \u3067\u3042\u308c\u3053\u308c\u3084\u3063\u3066\u307f\u308b\nDocker \u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u4e2d\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a\n# rustc --version --verbose\nrustc 1.8.0-nightly (34af2de40 2016-02-05)\nbinary: rustc\ncommit-hash: 34af2de4096b3b1c5d3a5b70171c6e27822aaefb\ncommit-date: 2016-02-05\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-nightly\n\n# cd ~/rusti\n# cargo run\n   Compiling rusti v0.0.1 (file:///root/rusti)\n     Running `target/debug/rusti`\nrusti=>\n\nrusti=> \u304c rusti \u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u3059\u3002\u5f0f\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nrusti=> 3 / 2\n1\nrusti=> 3.0 / 2\n<anon>:18:20: 18:27 error: the trait `core::ops::Div<_>` is not implemented for the type `_` [E0277]\n<anon>:18 println!(\"{:?}\", { 3.0 / 2 });\n                             ^~~~~~~\n<anon>:18:1: 18:31 note: in this expansion of println! (defined in <std macros>)\n<anon>:18:20: 18:27 help: run `rustc --explain E0277` to see a detailed explanation\n<anon>:18:20: 18:27 help: the following implementations were found:\n<anon>:18:20: 18:27 help:   <std::time::duration::Duration as core::ops::Div<u32>>\n<anon>:18:20: 18:27 help:   <f64 as core::ops::Div>\n<anon>:18:20: 18:27 help:   <&'a f64 as core::ops::Div<f64>>\n<anon>:18:20: 18:27 help:   <f64 as core::ops::Div<&'a f64>>\n<anon>:18:20: 18:27 help: and 55 others\nerror: aborting due to previous error\nrusti=> 3.0 / 2.0\n1.5\n\nf64\u578b\u3092i32\u578b\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3068\u3002\u4e86\u89e3\u3067\u3059\u3002\u6b21\u306f\u30ec\u30f3\u30b8\u304b\u3089\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\uff1a\nrusti=> (1..6).collect()\n<anon>:18:27: 18:34 error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\n<anon>:18 println!(\"{:?}\", { (1..6).collect() });\n                                    ^~~~~~~\n...\n\ncollect() \u306e\u578b\u304c\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3068\u8a00\u3063\u3066\u307e\u3059\u3002collect() \u306f\u591a\u76f8\u306a\u306e\u3067\u3001\u30d2\u30f3\u30c8\u3092\u4e0e\u3048\u306a\u3044\u3068\u578b\u304c\u78ba\u5b9a\u3057\u307e\u305b\u3093\u3002\nrusti=> (1..6).collect::<std::collections::btree_set::BTreeSet<_>>()\n{1, 2, 3, 4, 5}\nrusti=> (1..6).collect::<Vec<_>>()\n[1, 2, 3, 4, 5]\nrusti=> (1..6).collect::<Vec<_>>().iter().fold(0, |acc, n| acc + n)\n15\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001BTreeSet \u304b Vec \u304b\u3068\u3044\u3046\u30ec\u30d9\u30eb\u307e\u3067\u6307\u5b9a\u3059\u308c\u3070\u3001\u578b\u63a8\u8ad6\u3067\u304d\u307e\u3059\u3002<Vec<i32>> \u306e\u3088\u3046\u306b\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u306e\u578b\u307e\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u95a2\u6570\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\uff1a\nrusti=> fn factorial(n: u32) -> u32 {\nrusti.>   match n {\nrusti.>     0 => 1,\nrusti.>     n => n * factorial(n - 1),\nrusti.>   }\nrusti.> }\n\nrusti=> factorial(5)\n120\n\n.type \u307e\u305f\u306f .t \u3067\u5f0f\u306e\u578b\u3092\u8abf\u3079\u3089\u308c\u307e\u3059\uff08.typ\u3001.ty \u3082\u53ef\u80fd\uff09\u3002\u95a2\u6570\u306e\u578b\u3082\u5206\u304b\u308a\u307e\u3059\u3002\nrusti=> .type factorial\nfactorial = fn(u32) -> u32 {factorial}\n\n\u30d9\u30af\u30bf\u30fc\u578b\u3084\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u578b\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\nrusti=> .type (1..6).collect::<Vec<_>>()\n(1..6).collect::<Vec<_>>() = collections::vec::Vec<i32>\nrusti=> .type (1..6).collect::<Vec<_>>().iter()\n(1..6).collect::<Vec<_>>().iter() = core::slice::Iter<'_, i32>\n\n\u3046\u30fc\u3093\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306e\u3068\u3053\u308d\u3001\u60dc\u3057\u3044\u3067\u3059\u306d\u3002\u666e\u901a\u306e Rust \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u6697\u9ed9\u7684\u306b std \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092 use \u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306e\u5f0f\u306f\u3001std::slice::... \u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\u304c\u3001\u3069\u3046\u3084\u3089\u3001rusti \u306f\u3001std \u3060\u3051\u3067\u306a\u304f\u3066 core \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3082 use \u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001core::slice::... \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u307e\u3042\u3001\u3067\u3082\u3053\u306e\u304f\u3089\u3044\u306a\u3089\u3001\u60f3\u50cf\u3067\u88dc\u3048\u307e\u3059\u3002\nRust \u3067\u6700\u521d\u306b\u60a9\u3080\u6587\u5b57\u5217\u306e\uff12\u3064\u306e\u578b\u306b\u3064\u3044\u3066\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nrusti=> \"Hello\" + \", world!\"\n<anon>:18:20: 18:27 error: binary operation `+` cannot be applied to type `&'static str` [E0369]\n<anon>:18 println!(\"{:?}\", { \"Hello\" + \", world!\" });\n                             ^~~~~~~\n...\n\nrusti=> .t \"Hello\"\n\"Hello\" = &'static str\nrusti=> .t \"Hello\".to_owned()\n\"Hello\".to_owned() = collections::string::String\nrusti=> \"Hello\".to_owned() + \", world!\"\n\"Hello, world!\"\nrusti=> .t \"Hello\".to_owned() + \", world!\"\n\"Hello\".to_owned() + \", world!\" = collections::string::String\n\nDeref \u306b\u3088\u308b\u578b\u5f37\u5236\u3092\u4f7f\u3046\u3068\u3001String \u306e\u53c2\u7167\u3092 str \u306e\u53c2\u7167\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\uff08\u53c2\u8003\uff09\nrusti=> .t &(String::new())\n&(String::new()) = &collections::string::String\nrusti=> .t &(String::new()) as &str\n&(String::new()) as &str = &str\n\n\u3053\u3061\u3089\u306f\u3044\u308f\u3086\u308b C\u8a00\u8a9e\u306e\u30cc\u30eb\u6587\u5b57\u7d42\u7aef\u6587\u5b57\u5217\u3002\u5358\u306a\u308b\u30d0\u30a4\u30c8\u914d\u5217\u3067\u3059\u3002\nrusti=> .t b\"Hello, world\\0\"\nb\"Hello, world\\0\" = &'static [u8; 13]\nrusti=> .t b\"Hello, world\\0\".to_owned()\nb\"Hello, world\\0\".to_owned() = [u8; 13]\n\n\n\u307e\u3060\u5236\u9650\u3082\u591a\u3044\n\u307e\u3060\u767a\u5c55\u9014\u4e0a\u3068\u3044\u3046\u304b\u3001\u3067\u304d\u306a\u3044\u3053\u3068\u3082\u7d50\u69cb\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c8\u30ec\u30a4\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\uff08\u4f8b\uff1astd::iter::Iterator::fold()\uff09\u306b\u3064\u3044\u3066\u3001\u5f15\u6570\u306e\u578b\u3092\u77e5\u308b\u65b9\u6cd5\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nrusti=> .t (vec![0]).iter().fold\n<anon>:14:18: 14:22 error: attempted to take value of method `fold` on type `core::slice::Iter<'_, _>`\n<anon>:14 (vec![0]).iter().fold ;\n                           ^~~~\n<anon>:14:18: 14:22 help: maybe a `()` to call it is missing? If not, try an anonymous function\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u5024\u306f\u53d6\u308c\u307e\u305b\u3093\u3001\u3068\u8a00\u3063\u3066\u307e\u3059\u3002\u3067\u3082\u3001\u3082\u3057\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u5f15\u6570\u306e\u65b9\u3067\u306f\u306a\u304f\u3066\u3001\u30ea\u30bf\u30fc\u30f3\u578b\uff08i32\uff09\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\nrusti=> .t (vec![0]).iter().fold(0, |acc, n| acc + n)\n(vec![0]).iter().fold(0, |acc, n| a + n) = i32\n\n\u7d50\u5c40\u306e\u3068\u3053\u308d\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3067\u304d\u306a\u3044\u5f0f\u306f\u3001.type \u3067\u6271\u3048\u306a\u3044\u3063\u3066\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3042\u3068\u3001let \u306f\u4f7f\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d\u8d85\u5c40\u6240\u7684\u3067\u3001\u4f7f\u3044\u3069\u3053\u308d\u304c\u3042\u307e\u308a\u306a\u3044\u611f\u3058\u3067\u3059\u3002\u306a\u304a let \u306f\u5f0f\u3067\u306f\u306a\u304f\u3066\u6587\u306a\u306e\u3067\u3001rusti \u3067\u5165\u529b\u3059\u308b\u3068\u304d\u3082\u3001\u672b\u5c3e\u306b ; \u304c\u5fc5\u8981\u3067\u3059\u3002\nrusti=> let a = vec![\"a\", \"b\", \"c\"];\n<anon>:18:5: 18:6 warning: unused variable: `a`, #[warn(unused_variables)] on by default\n<anon>:18 let a = vec![\"a\", \"b\", \"c\"];\n              ^\nrusti=> a\n<anon>:18:20: 18:21 error: unresolved name `a` [E0425]\n<anon>:18 println!(\"{:?}\", { a });\n                             ^\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u305b\u3063\u304b\u304f\u5b9a\u7fa9\u3057\u3066\u3082\u3001\u4f7f\u3046\u524d\u306b\u5fd8\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u751f\u5b58\u671f\u9593\u3001\u77ed\u304b\u3059\u304e\u3067\u3059\u3002\n.block ... . \u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306a\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nrusti=> .block\nrusti+> let a = [\"a\", \"b\", \"c\"];\nrusti+> println!(\"{}\", a[2]);\nrusti+> .\nc\n\n\u3067\u3082\u3001\u3053\u308c\u3060\u3068\u3001.type \u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3068\u540c\u6642\u306b\u4f7f\u3048\u307e\u305b\u3093\u3002\nrusti=> .block\nrusti+> let a = [\"a\", \"b\", \"c\"];\nrusti+> .type a\nrusti+> .\n<input>:2:1: 2:2 error: unexpected token: `.`\n<input>:2 .type a\n\n\u3053\u306e\u8fba\u306e\u554f\u984c\u306f\u4f5c\u8005\u306e\u65b9\u3005\u3082\u628a\u63e1\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u4f5c\u308a\u306b\u3088\u308a\u3001\u5b9f\u73fe\u3059\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3088\u3046\u3067\u3059\u3002\u4eca\u5f8c\u306b\u671f\u5f85\u3057\u307e\u3059\u3002\n\n\u4ed6\u306b\u3082\u6a5f\u80fd\u304c\n\u307e\u3060\u8a66\u305b\u3066\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3082\u3042\u308b\u305d\u3046\u3067\u3059\u3002\n\n\n.load \u30b3\u30de\u30f3\u30c9\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\n\nextern crate \u30af\u30ec\u30fc\u30c8\u540d \u3067\u5916\u90e8\u30af\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u3002\u305f\u3060\u3057\u3001\u30af\u30ec\u30fc\u30c8\u306f\u901a\u5e38\u306e rlib \u306b\u52a0\u3048\u3066\u3001dylib \u7248\u3082\u4e8b\u524d\u306b\u751f\u6210\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002cargo rustc --lib -- --crate-type=rlib,dylib\u3002\u3000\u307e\u305f\u3001rusti \u306e\u8d77\u52d5\u6642\u306b\u3001-L \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u305d\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002(-L \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4f55\u500b\u3067\u3082\u6307\u5b9a\u3067\u304d\u308b\uff09\n\u30b3\u30fc\u30c9\u88dc\u5b8c\uff1a racer \u3068\u306e\u4f75\u7528\u304c\u53ef\u80fd\u3002\n\n\u8a73\u3057\u304f\u306f rusti \u306e README \u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u307e\u3060\u5b9f\u7528\u7684\u306b\u306f\u4f7f\u3048\u306a\u3044\u304b\u306a\u3002\u3067\u3082\u3001\u500b\u4eba\u7684\u306b\u306f\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u578b\u306e\u5b66\u7fd2\u306b\u306f\u4f7f\u3048\u305d\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\n\n\n\n\u3061\u306a\u307f\u306b\u3001nightly \u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306e 2016-02-05 \u306b\u306f\u3001\u305d\u306e\u524d\u65e5\u306e\u30012016-02-04 \u7248 nightly \u304c\u5165\u3063\u3066\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3060\u3068\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089 rusti \u306e\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u30012016-02-06 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u00a0\u21a9\n\n\n\n\u5b89\u5168\u3067\u5b9f\u884c\u52b9\u7387\u306e\u3088\u3044\uff08\u3068\u3044\u3046\u8b33\u3044\u6587\u53e5\u306e\uff09 Rust \u306b\u3059\u3063\u304b\u308a\u60da\u308c\u8fbc\u3093\u3067\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u5feb\u9069\u306b\u4f7f\u3048\u308b\u307e\u3067\u306e\u9053\u306e\u308a\u306f\u3001\u307e\u3060\u9577\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nRust \u3092\u4f7f\u3044\u59cb\u3081\u3066\u3059\u3050\u306b\u611f\u3058\u305f\u306e\u306f\u3001Haskell\uff08GHC\uff09\u3001OCaml\u3001Scala \u306e\u3088\u3046\u306a REPL \u304c\u6b32\u3057\u3044\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u305f\u3002REPL \u306f Read-Evaluate-Print Loop \u306e\u982d\u6587\u5b57\u3092\u3068\u3063\u305f\u3082\u306e\u3067\u3001\u3044\u308f\u3086\u308b\u3001\u5bfe\u8a71\u578b\u30b7\u30a7\u30eb\u306e\u3053\u3068\u3067\u3059\u3002\n\n**\u4f8b\uff1a Haskell\uff08GHC\uff09\u306e\u5834\u5408**\n\n```haskell\n% ghci\nGHCi, version 7.10.2: http://www.haskell.org/ghc/  :? for help\nPrelude> take 5 [1..]\n[1,2,3,4,5]\n\nPrelude> :type foldr\nfoldr :: Foldable t => (a -> b -> b) -> b -> t a -> b\n\nPrelude> :info Foldable\nclass Foldable (t :: * -> *) where\n  Data.Foldable.fold :: Monoid m => t m -> m\n  foldMap :: Monoid m => (a -> m) -> t a -> m\n  foldr :: (a -> b -> b) -> b -> t a -> b\n  Data.Foldable.foldr' :: (a -> b -> b) -> b -> t a -> b\n  foldl :: (b -> a -> b) -> b -> t a -> b\n  Data.Foldable.foldl' :: (b -> a -> b) -> b -> t a -> b\n  foldr1 :: (a -> a -> a) -> t a -> a\n  foldl1 :: (a -> a -> a) -> t a -> a\n  Data.Foldable.toList :: t a -> [a]\n  null :: t a -> Bool\n  length :: t a -> Int\n  elem :: Eq a => a -> t a -> Bool\n  maximum :: Ord a => t a -> a\n  minimum :: Ord a => t a -> a\n  sum :: Num a => t a -> a\n  product :: Num a => t a -> a\n  \t-- Defined in \u2018Data.Foldable\u2019\ninstance Foldable [] -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable Maybe -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable (Either a) -- Defined in \u2018Data.Foldable\u2019\ninstance Foldable ((,) a) -- Defined in \u2018Data.Foldable\u2019\n\nPrelude> foldr (+) 0 $ take 5 [1..]\n15\n```\n\n\u3053\u306e\u3088\u3046\u306b `:type` \u3067\u578b\u3092\u8abf\u3079\u306a\u304c\u3089\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u3053\u3068\u3092\u8a66\u305b\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\u4ed6\u306b\u3082\u3001\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u3001\u305d\u3053\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u3092\u500b\u5225\u306b\u52d5\u304b\u3057\u3066\u307f\u305f\u308a\u3082\u3067\u304d\u307e\u3059\u3002\n\nRust \u3067\u3082\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u578b\u63a8\u8ad6\u3057\u307e\u3059\u3057\u3001\u578b\u306e\u4e0d\u4e00\u81f4\u306e\u6642\u306b\u306f\u61c7\u5207\u4e01\u5be7\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u307e\u3059\u306e\u3067\u3001\u578b\u3092\u304d\u3063\u3061\u308a\u7406\u89e3\u3067\u304d\u3066\u306a\u304f\u3066\u3082\u3001\u6c17\u5408\u3067\u4e57\u308a\u5207\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\uff08\u6c17\u5408\u3068\u3044\u3046\u306e\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u901a\u308b\u307e\u3067\u3001\u4f55\u5ea6\u3082\u4f55\u5ea6\u3082\u30bd\u30fc\u30b9\u3092\u66f8\u304d\u5909\u3048\u3066\u30c8\u30e9\u30a4\u3059\u308b\u3084\u308a\u65b9\uff09\u3000\u3057\u304b\u3057\u3001\u3069\u306e\u5f0f\u304c\u3069\u3093\u306a\u578b\u306e\u5024\u3092\u8fd4\u3059\u306e\u304b\u3092\u3061\u3083\u3093\u3068\u7406\u89e3\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3001\u7d50\u679c\u7684\u306b\u306f\u305a\u3063\u3068\u6642\u9593\u3092\u7bc0\u7d04\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u8a00\u8a9e\u3067\u3042\u3063\u3066\u3082\u3001\u6700\u521d\u306f REPL \u3067\u3042\u308c\u3053\u308c\u8a66\u3057\u3066\u7406\u89e3\u3092\u6df1\u3081\u305f\u3044\uff08Haskell\u3001OCaml\u3001Scala\u306e\u3088\u3046\u306b\uff09\u3002\u3053\u3046\u3057\u3066 Rust \u306e\u578b\u306b\u3064\u3044\u3066\u3042\u308b\u7a0b\u5ea6\u306e\u30bb\u30f3\u30b9\u304c\u3064\u3051\u3070\u3001\u305d\u308c\u4ee5\u964d\u306f\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u8aad\u3080\u3060\u3051\u3067\u3001\u3059\u3050\u306b\u30d4\u30f3\u3068\u304f\u308b\u3088\u3046\u306b\u306a\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u305d\u3093\u306a\u6642\u3001[24 days of Rust](http://zsiciarz.github.io/24daysofrust/book/day19.html) \u3068\u3044\u3046\u30b5\u30a4\u30c8\u3092\u898b\u3064\u3051\u3066\u3001\u305d\u3053\u3067\u3001rusti \u3068\u3044\u3046\u975e\u516c\u5f0f\u306e REPL \u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u8a66\u3057\u305f\u3068\u3053\u308d\u3001\u73fe\u5728\u306e Rust \u306e\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u5236\u9650\u306b\u3088\u308a\u3001\u3054\u304f\u7c21\u5358\u306a\u3053\u3068\u3057\u304b\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u7121\u3044\u3088\u308a\u3082\u305a\u3063\u3068\u3044\u3044\u3082\u306e\u3067\u3057\u305f\u3002\n\n\n## Docker \u3067\u30b5\u30af\u30c3\u3068\u304a\u8a66\u3057\u3059\u308b\n\nrusti \u306f\u73fe\u72b6\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u30b3\u30fc\u30c9\u306f GitHub \u306b\u3042\u308a\u307e\u3059\uff1a\n\n- [murarth/rusti](https://github.com/murarth/rusti)\n\n\u3053\u3053\u3067\u554f\u984c\u306a\u306e\u306f\u3001rusti \u306f\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u5185\u90e8\u306e\u6a5f\u80fd\u3092\u76f4\u63a5\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u73fe\u72b6\u306f\u3001Rust \u306e nightly \u30d3\u30eb\u30c9\u3092\u4f7f\u3063\u3066\u3057\u304b\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u306a\u3044\u3053\u3068\u3067\u3059\u3002\u305d\u3057\u3066\u3001\u3042\u307e\u308a\u306b\u3082\u30b3\u30a2\u306a\u90e8\u5206\u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001Rust \u306e\u958b\u767a\u304c\u9032\u3080\u3068\u3001\u3059\u3050\u306b\u52d5\u304b\u306a\u304f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002rusti \u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u3092\u898b\u308b\u3068\u3001\u305d\u306e\u6226\u3044\u306e\u6b74\u53f2\u304c\u305f\u3069\u308c\u307e\u3059...\uff08\u73fe\u5728\u3082\u9032\u884c\u4e2d\uff09\n\n```\nDate: Sat Feb 6 13:11:40 2016 -0700\n    Fix for nightly (34af2de40 2016-02-05)\n\nDate: Wed Feb 3 18:58:11 2016 -0700\n    Fix for nightly (dea183aa8 2016-02-02)\n\nDate: Sat Jan 30 11:55:01 2016 -0700\n    Fix for nightly (303892ee1 2016-01-30)\n\nDate: Thu Jan 28 11:41:00 2016 -0700\n    Fix for nightly (38e23e8f7 2016-01-27)\n```\n\n\u6570\u65e5\u3054\u3068\u306b\u76f4\u3057\u3066\u307e\u3059\u306d...\u3002\u3054\u82e6\u52b4\u3055\u307e\u3067\u3059\u3002\n\n\u3053\u308c\u3060\u3068\u3001\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u6642\u70b9\u3067\u632b\u6298\u3057\u305d\u3046\u306a\u306e\u3067\u3001Docker \u30a4\u30e1\u30fc\u30b8\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\u6700\u5f8c\u306e\u30b3\u30df\u30c3\u30c8\u30ed\u30b0\u306b\u3042\u308b 2016-02-05 \u7248\u306e Rust nightly \u3092\u4f7f\u3063\u3066\u307e\u3059[^1]\u3002\n\n[^1]: \u3061\u306a\u307f\u306b\u3001nightly \u7248\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u308f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306e 2016-02-05 \u306b\u306f\u3001\u305d\u306e\u524d\u65e5\u306e\u30012016-02-04 \u7248 nightly \u304c\u5165\u3063\u3066\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u3053\u308c\u3060\u3068\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089 rusti \u306e\u30d3\u30eb\u30c9\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\u3064\u307e\u308a\u30012016-02-06 \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\n\nDocker \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\uff1a\n\n```shell-session\n$ sudo docker pull quay.io/tatsuya6502/rusti\n$ sudo docker run -it quay.io/tatsuya6502/rusti\n```\n\n\u3061\u306a\u307f\u306b\u3001Dockerfile \u306a\u3069\u306f [\u3053\u3061\u3089](https://github.com/tatsuya6502/docker-rusti) \u306b\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001rusti \u3092\u4f7f\u3046\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\n\n## rusti \u3067\u3042\u308c\u3053\u308c\u3084\u3063\u3066\u307f\u308b\n\nDocker \u30b3\u30f3\u30c6\u30ca\u30fc\u306e\u4e2d\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\uff1a\n\n```shell-session\n# rustc --version --verbose\nrustc 1.8.0-nightly (34af2de40 2016-02-05)\nbinary: rustc\ncommit-hash: 34af2de4096b3b1c5d3a5b70171c6e27822aaefb\ncommit-date: 2016-02-05\nhost: x86_64-unknown-linux-gnu\nrelease: 1.8.0-nightly\n\n# cd ~/rusti\n# cargo run\n   Compiling rusti v0.0.1 (file:///root/rusti)\n     Running `target/debug/rusti`\nrusti=>\n```\n\n`rusti=>` \u304c rusti \u306e\u30d7\u30ed\u30f3\u30d7\u30c8\u3067\u3059\u3002\u5f0f\u3092\u5165\u308c\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```rust\nrusti=> 3 / 2\n1\nrusti=> 3.0 / 2\n<anon>:18:20: 18:27 error: the trait `core::ops::Div<_>` is not implemented for the type `_` [E0277]\n<anon>:18 println!(\"{:?}\", { 3.0 / 2 });\n                             ^~~~~~~\n<anon>:18:1: 18:31 note: in this expansion of println! (defined in <std macros>)\n<anon>:18:20: 18:27 help: run `rustc --explain E0277` to see a detailed explanation\n<anon>:18:20: 18:27 help: the following implementations were found:\n<anon>:18:20: 18:27 help:   <std::time::duration::Duration as core::ops::Div<u32>>\n<anon>:18:20: 18:27 help:   <f64 as core::ops::Div>\n<anon>:18:20: 18:27 help:   <&'a f64 as core::ops::Div<f64>>\n<anon>:18:20: 18:27 help:   <f64 as core::ops::Div<&'a f64>>\n<anon>:18:20: 18:27 help: and 55 others\nerror: aborting due to previous error\nrusti=> 3.0 / 2.0\n1.5\n```\n\nf64\u578b\u3092i32\u578b\u3067\u5272\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3068\u3002\u4e86\u89e3\u3067\u3059\u3002\u6b21\u306f\u30ec\u30f3\u30b8\u304b\u3089\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\uff1a\n\n```rust\nrusti=> (1..6).collect()\n<anon>:18:27: 18:34 error: unable to infer enough type information about `_`; type annotations or generic parameter binding required [E0282]\n<anon>:18 println!(\"{:?}\", { (1..6).collect() });\n                                    ^~~~~~~\n...\n```\n\n`collect()` \u306e\u578b\u304c\u63a8\u8ad6\u3067\u304d\u306a\u3044\u3068\u8a00\u3063\u3066\u307e\u3059\u3002`collect()` \u306f\u591a\u76f8\u306a\u306e\u3067\u3001\u30d2\u30f3\u30c8\u3092\u4e0e\u3048\u306a\u3044\u3068\u578b\u304c\u78ba\u5b9a\u3057\u307e\u305b\u3093\u3002\n\n```rust\nrusti=> (1..6).collect::<std::collections::btree_set::BTreeSet<_>>()\n{1, 2, 3, 4, 5}\nrusti=> (1..6).collect::<Vec<_>>()\n[1, 2, 3, 4, 5]\nrusti=> (1..6).collect::<Vec<_>>().iter().fold(0, |acc, n| acc + n)\n15\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001BTreeSet \u304b Vec \u304b\u3068\u3044\u3046\u30ec\u30d9\u30eb\u307e\u3067\u6307\u5b9a\u3059\u308c\u3070\u3001\u578b\u63a8\u8ad6\u3067\u304d\u307e\u3059\u3002`<Vec<i32>>` \u306e\u3088\u3046\u306b\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u306e\u578b\u307e\u3067\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u95a2\u6570\u3082\u5b9a\u7fa9\u3067\u304d\u307e\u3059\uff1a\n\n```rust\nrusti=> fn factorial(n: u32) -> u32 {\nrusti.>   match n {\nrusti.>     0 => 1,\nrusti.>     n => n * factorial(n - 1),\nrusti.>   }\nrusti.> }\n```\n\n```rust\nrusti=> factorial(5)\n120\n```\n\n`.type` \u307e\u305f\u306f `.t` \u3067\u5f0f\u306e\u578b\u3092\u8abf\u3079\u3089\u308c\u307e\u3059\uff08`.typ`\u3001`.ty` \u3082\u53ef\u80fd\uff09\u3002\u95a2\u6570\u306e\u578b\u3082\u5206\u304b\u308a\u307e\u3059\u3002\n\n```rust\nrusti=> .type factorial\nfactorial = fn(u32) -> u32 {factorial}\n```\n\n\u30d9\u30af\u30bf\u30fc\u578b\u3084\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u578b\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u304b\uff1f\n\n```rust\nrusti=> .type (1..6).collect::<Vec<_>>()\n(1..6).collect::<Vec<_>>() = collections::vec::Vec<i32>\nrusti=> .type (1..6).collect::<Vec<_>>().iter()\n(1..6).collect::<Vec<_>>().iter() = core::slice::Iter<'_, i32>\n```\n\n\u3046\u30fc\u3093\u3001\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306e\u3068\u3053\u308d\u3001\u60dc\u3057\u3044\u3067\u3059\u306d\u3002\u666e\u901a\u306e Rust \u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u6697\u9ed9\u7684\u306b `std` \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092 `use` \u3057\u3066\u3044\u308b\u306e\u3067\u3001\u6700\u5f8c\u306e\u5f0f\u306f\u3001`std::slice::...` \u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\u304c\u3001\u3069\u3046\u3084\u3089\u3001rusti \u306f\u3001`std` \u3060\u3051\u3067\u306a\u304f\u3066 `core` \u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3082 `use` \u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3001`core::slice::...` \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u307e\u3042\u3001\u3067\u3082\u3053\u306e\u304f\u3089\u3044\u306a\u3089\u3001\u60f3\u50cf\u3067\u88dc\u3048\u307e\u3059\u3002\n\nRust \u3067\u6700\u521d\u306b\u60a9\u3080\u6587\u5b57\u5217\u306e\uff12\u3064\u306e\u578b\u306b\u3064\u3044\u3066\u3082\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```rust\nrusti=> \"Hello\" + \", world!\"\n<anon>:18:20: 18:27 error: binary operation `+` cannot be applied to type `&'static str` [E0369]\n<anon>:18 println!(\"{:?}\", { \"Hello\" + \", world!\" });\n                             ^~~~~~~\n...\n\nrusti=> .t \"Hello\"\n\"Hello\" = &'static str\nrusti=> .t \"Hello\".to_owned()\n\"Hello\".to_owned() = collections::string::String\nrusti=> \"Hello\".to_owned() + \", world!\"\n\"Hello, world!\"\nrusti=> .t \"Hello\".to_owned() + \", world!\"\n\"Hello\".to_owned() + \", world!\" = collections::string::String\n```\n\n`Deref` \u306b\u3088\u308b\u578b\u5f37\u5236\u3092\u4f7f\u3046\u3068\u3001`String` \u306e\u53c2\u7167\u3092 `str` \u306e\u53c2\u7167\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\uff08[\u53c2\u8003](https://rust-lang-ja.github.io/the-rust-programming-language-ja/1.6/book/deref-coercions.html)\uff09\n\n```rust\nrusti=> .t &(String::new())\n&(String::new()) = &collections::string::String\nrusti=> .t &(String::new()) as &str\n&(String::new()) as &str = &str\n```\n\n\u3053\u3061\u3089\u306f\u3044\u308f\u3086\u308b C\u8a00\u8a9e\u306e\u30cc\u30eb\u6587\u5b57\u7d42\u7aef\u6587\u5b57\u5217\u3002\u5358\u306a\u308b\u30d0\u30a4\u30c8\u914d\u5217\u3067\u3059\u3002\n\n```rust\nrusti=> .t b\"Hello, world\\0\"\nb\"Hello, world\\0\" = &'static [u8; 13]\nrusti=> .t b\"Hello, world\\0\".to_owned()\nb\"Hello, world\\0\".to_owned() = [u8; 13]\n```\n\n## \u307e\u3060\u5236\u9650\u3082\u591a\u3044\n\n\u307e\u3060\u767a\u5c55\u9014\u4e0a\u3068\u3044\u3046\u304b\u3001\u3067\u304d\u306a\u3044\u3053\u3068\u3082\u7d50\u69cb\u3042\u308a\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u30c8\u30ec\u30a4\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\uff08\u4f8b\uff1a`std::iter::Iterator::fold()`\uff09\u306b\u3064\u3044\u3066\u3001\u5f15\u6570\u306e\u578b\u3092\u77e5\u308b\u65b9\u6cd5\u304c\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```rust\nrusti=> .t (vec![0]).iter().fold\n<anon>:14:18: 14:22 error: attempted to take value of method `fold` on type `core::slice::Iter<'_, _>`\n<anon>:14 (vec![0]).iter().fold ;\n                           ^~~~\n<anon>:14:18: 14:22 help: maybe a `()` to call it is missing? If not, try an anonymous function\n```\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u5024\u306f\u53d6\u308c\u307e\u305b\u3093\u3001\u3068\u8a00\u3063\u3066\u307e\u3059\u3002\u3067\u3082\u3001\u3082\u3057\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u5f15\u6570\u306e\u65b9\u3067\u306f\u306a\u304f\u3066\u3001\u30ea\u30bf\u30fc\u30f3\u578b\uff08`i32`\uff09\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```rust\nrusti=> .t (vec![0]).iter().fold(0, |acc, n| acc + n)\n(vec![0]).iter().fold(0, |acc, n| a + n) = i32\n```\n\n\u7d50\u5c40\u306e\u3068\u3053\u308d\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u3067\u304d\u306a\u3044\u5f0f\u306f\u3001`.type` \u3067\u6271\u3048\u306a\u3044\u3063\u3066\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3042\u3068\u3001`let` \u306f\u4f7f\u3048\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d\u8d85\u5c40\u6240\u7684\u3067\u3001\u4f7f\u3044\u3069\u3053\u308d\u304c\u3042\u307e\u308a\u306a\u3044\u611f\u3058\u3067\u3059\u3002\u306a\u304a `let` \u306f\u5f0f\u3067\u306f\u306a\u304f\u3066\u6587\u306a\u306e\u3067\u3001rusti \u3067\u5165\u529b\u3059\u308b\u3068\u304d\u3082\u3001\u672b\u5c3e\u306b `;` \u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```rust\nrusti=> let a = vec![\"a\", \"b\", \"c\"];\n<anon>:18:5: 18:6 warning: unused variable: `a`, #[warn(unused_variables)] on by default\n<anon>:18 let a = vec![\"a\", \"b\", \"c\"];\n              ^\nrusti=> a\n<anon>:18:20: 18:21 error: unresolved name `a` [E0425]\n<anon>:18 println!(\"{:?}\", { a });\n                             ^\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\u3001\u305b\u3063\u304b\u304f\u5b9a\u7fa9\u3057\u3066\u3082\u3001\u4f7f\u3046\u524d\u306b\u5fd8\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u751f\u5b58\u671f\u9593\u3001\u77ed\u304b\u3059\u304e\u3067\u3059\u3002\n\n`.block` ... `.` \u3092\u4f7f\u3046\u3068\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u5185\u306a\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```rust\nrusti=> .block\nrusti+> let a = [\"a\", \"b\", \"c\"];\nrusti+> println!(\"{}\", a[2]);\nrusti+> .\nc\n```\n\n\u3067\u3082\u3001\u3053\u308c\u3060\u3068\u3001`.type` \u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3068\u540c\u6642\u306b\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n```rust\nrusti=> .block\nrusti+> let a = [\"a\", \"b\", \"c\"];\nrusti+> .type a\nrusti+> .\n<input>:2:1: 2:2 error: unexpected token: `.`\n<input>:2 .type a\n```\n\n\u3053\u306e\u8fba\u306e\u554f\u984c\u306f\u4f5c\u8005\u306e\u65b9\u3005\u3082\u628a\u63e1\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u4f5c\u308a\u306b\u3088\u308a\u3001\u5b9f\u73fe\u3059\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u96e3\u3057\u3044\u3088\u3046\u3067\u3059\u3002\u4eca\u5f8c\u306b\u671f\u5f85\u3057\u307e\u3059\u3002\n\n\n## \u4ed6\u306b\u3082\u6a5f\u80fd\u304c\n\n\u307e\u3060\u8a66\u305b\u3066\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6a5f\u80fd\u3082\u3042\u308b\u305d\u3046\u3067\u3059\u3002\n\n- `.load` \u30b3\u30de\u30f3\u30c9\u3067\u3001\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3002\n- `extern crate \u30af\u30ec\u30fc\u30c8\u540d` \u3067\u5916\u90e8\u30af\u30ec\u30fc\u30c8\u3092\u8aad\u307f\u8fbc\u3080\u3002\u305f\u3060\u3057\u3001\u30af\u30ec\u30fc\u30c8\u306f\u901a\u5e38\u306e `rlib` \u306b\u52a0\u3048\u3066\u3001`dylib` \u7248\u3082\u4e8b\u524d\u306b\u751f\u6210\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002`cargo rustc --lib -- --crate-type=rlib,dylib`\u3002\u3000\u307e\u305f\u3001rusti \u306e\u8d77\u52d5\u6642\u306b\u3001`-L` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u305d\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002(`-L` \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4f55\u500b\u3067\u3082\u6307\u5b9a\u3067\u304d\u308b\uff09\n- \u30b3\u30fc\u30c9\u88dc\u5b8c\uff1a racer \u3068\u306e\u4f75\u7528\u304c\u53ef\u80fd\u3002\n\n\u8a73\u3057\u304f\u306f rusti \u306e [README]() \u3092\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3044\u304b\u304c\u3067\u3057\u3087\u3046\u304b\uff1f\u3000\u307e\u3060\u5b9f\u7528\u7684\u306b\u306f\u4f7f\u3048\u306a\u3044\u304b\u306a\u3002\u3067\u3082\u3001\u500b\u4eba\u7684\u306b\u306f\u3001\u3061\u3087\u3063\u3068\u3057\u305f\u578b\u306e\u5b66\u7fd2\u306b\u306f\u4f7f\u3048\u305d\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n---\n"}