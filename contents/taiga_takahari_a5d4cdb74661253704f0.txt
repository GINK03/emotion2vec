{"context": " More than 1 year has passed since last update.\u4f8b\u3048\u3070\u3053\u3093\u306a\u30c7\u30fc\u30bf\u578b\u3068\npublic class Employee\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public int? DeptId { get; set; }\n    public DateTime HireDate { get; set; }\n}\n\n\u3053\u3093\u306a\u30c7\u30fc\u30bf\u578b\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\npublic class Department\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n\n\u3053\u3093\u306aSQL\u3092LINQ\u3067\u3084\u308a\u305f\u3044\u306a\u3093\u3066\u3068\u304d\nSELECT\n    E.Id As 'EmpId,'\n    E.Name As 'EmpName',\n    D.Name AS 'DeptName',\n    E.HireDate\nFROM\n    Employee E\nLEFT OUTER JOIN\n    Department D\n    ON D.Id = E.DeptId\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u304f\u3068\u3067\u304d\u307e\u3059\u3002\nvar emps = new List<Employee>();\nvar depts = new List<Department>();\n\nvar infos = emps.GroupJoin(depts, emp => emp.DeptId, dept => dept.Id, (emp, tmpDept) => new {emp, tmpDept})\n                .SelectMany(x => x.tmpDept.DefaultIfEmpty(), (x, dept) => new\n                {\n                    EmpId = x.emp.Id,\n                    EmpName = x.emp.Name,\n                    DeptName = (dept != null) ? dept.Name : \"Non-Dept\",\n                    HireDate = x.emp.HireDate\n                });\n\n--\u8ffd\u8a18\n\u3053\u3093\u306a\u3068\u304b\nvar emps = new List<Employee>();\nvar depts = new List<Department>();\n\nvar infos = emps.Select(x =>\n{\n    var dept = depts.FirstOrDefault(y => y.Id == x.DeptId);\n    return new\n    {\n        EmpId = x.Id,\n        EmpName = x.Name,\n        DeptName = (dept != null) ? dept.Name : \"Non-Dept\",\n        HireDate = x.HireDate\n    };\n});\n\n\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u306d\u3002\nvar emps = new List<Employee>();\nvar depts = new List<Department>().ToDictionary(x => x.Id);\n\nvar infos = emps.Select(x => new\n{\n    EmpId = x.Id,\n    EmpName = x.Name,\n    DeptName = x.DeptId.HasValue && depts.ContainsKey(x.DeptId.Value) ? depts[x.DeptId.Value].Name : \"Non-Dept\",\n    HireDate = x.HireDate\n});\n\n\u4f8b\u3048\u3070\u3053\u3093\u306a\u30c7\u30fc\u30bf\u578b\u3068\n\n```csharp\npublic class Employee\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n    public int? DeptId { get; set; }\n    public DateTime HireDate { get; set; }\n}\n```\n\n\n\u3053\u3093\u306a\u30c7\u30fc\u30bf\u578b\u304c\u3042\u3063\u305f\u3068\u3057\u3066\u3001\n\n```csharp\npublic class Department\n{\n    public int Id { get; set; }\n    public string Name { get; set; }\n}\n```\n\n\n\u3053\u3093\u306aSQL\u3092LINQ\u3067\u3084\u308a\u305f\u3044\u306a\u3093\u3066\u3068\u304d\n\n```sql\nSELECT\n    E.Id As 'EmpId,'\n    E.Name As 'EmpName',\n    D.Name AS 'DeptName',\n    E.HireDate\nFROM\n    Employee E\nLEFT OUTER JOIN\n    Department D\n    ON D.Id = E.DeptId\n```\n\n\n\u3053\u3093\u306a\u98a8\u306b\u66f8\u304f\u3068\u3067\u304d\u307e\u3059\u3002\n\n```csharp\nvar emps = new List<Employee>();\nvar depts = new List<Department>();\n\nvar infos = emps.GroupJoin(depts, emp => emp.DeptId, dept => dept.Id, (emp, tmpDept) => new {emp, tmpDept})\n                .SelectMany(x => x.tmpDept.DefaultIfEmpty(), (x, dept) => new\n                {\n                    EmpId = x.emp.Id,\n                    EmpName = x.emp.Name,\n                    DeptName = (dept != null) ? dept.Name : \"Non-Dept\",\n                    HireDate = x.emp.HireDate\n                });\n```\n\n--\u8ffd\u8a18\n\n\u3053\u3093\u306a\u3068\u304b\n\n```csharp\nvar emps = new List<Employee>();\nvar depts = new List<Department>();\n\nvar infos = emps.Select(x =>\n{\n    var dept = depts.FirstOrDefault(y => y.Id == x.DeptId);\n    return new\n    {\n        EmpId = x.Id,\n        EmpName = x.Name,\n        DeptName = (dept != null) ? dept.Name : \"Non-Dept\",\n        HireDate = x.HireDate\n    };\n});\n```\n\n\u3053\u3093\u306a\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u306d\u3002\n\n```csharp\nvar emps = new List<Employee>();\nvar depts = new List<Department>().ToDictionary(x => x.Id);\n\nvar infos = emps.Select(x => new\n{\n    EmpId = x.Id,\n    EmpName = x.Name,\n    DeptName = x.DeptId.HasValue && depts.ContainsKey(x.DeptId.Value) ? depts[x.DeptId.Value].Name : \"Non-Dept\",\n    HireDate = x.HireDate\n});\n```\n", "tags": ["C#", "LINQ"]}