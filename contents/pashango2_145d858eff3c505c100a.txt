{"context": "PIL/Pillow\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u9ad8\u901f\u306aPython\u7528\u306e\u753b\u50cf\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3088\u304f\u4f7f\u3046\u51e6\u7406\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff08\u968f\u6642\u66f4\u65b0\uff09\n\nPIL\u3068Pillow\u306e\u9055\u3044\n\u57fa\u672c\u7684\u306bPIL\u3092\u4f7f\u3046\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093\u3001Pillow\u306e\u65b9\u304c\u30ea\u30b5\u30a4\u30ba\u30d5\u30a3\u30eb\u30bf\u306e\u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u3055\u308c\u3066\u304a\u308a\u9ad8\u54c1\u8cea\u3067\u3059\u3002\n\nPillow\u306e\u901f\u5ea6\u306b\u3064\u3044\u3066\nPillow\u306f\u975e\u5e38\u306b\u9ad8\u901f\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u3066\u304a\u308a\u3001\u540c\u69d8\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bImageMagick\u3088\u308a\u3082\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001getpixel/putpixel\u306f\u975e\u5e38\u306b\u4f4e\u901f\u3067\u3059\u3001\u753b\u50cf\u751f\u6210\u4ee5\u5916\u306b\u306f\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u66f4\u306b\u9ad8\u901f\u306apillow-simd\u3082\u3042\u308a\u307e\u3059\u3002\u6982\u306d\u30aa\u30ea\u30b8\u30ca\u30eb\u306ePillow\u306e4\u301c5\u500d\u306e\u901f\u5ea6\u304c\u51fa\u308b\u3088\u3046\u3067\u3059\u3002\npillow-simd\nhttps://github.com/uploadcare/pillow-simd\n\n\u53c2\u8003\nhttps://python-pillow.org/pillow-perf/\n\nImage\u30e2\u30fc\u30c9\u4e00\u89a7\n\n\n\n\u30e2\u30fc\u30c9\n\u8aac\u660e\n\n\n\n\n1\n1bit\u3000\u30de\u30b9\u30af\u306b\u4f7f\u7528\u3001\u8ad6\u7406\u6f14\u7b97\u304c\u53ef\u80fd\n\n\nL\n8bit \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\n\n\nP\n\u30d1\u30ec\u30c3\u30c8\u30e2\u30fc\u30c9\n\n\nRGB\n8bit x 3\n\n\nRGBA\n8bit x 4 \u900f\u660e\u5ea6(\u30a2\u30eb\u30d5\u30a1)\u4ed8\u304d\n\n\nCMYK\n8bit x 4 \u5370\u5237\u95a2\u9023\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\n\n\nYCbCr\n8bit x 3 \u30d3\u30c7\u30aa\u95a2\u9023\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\n\n\nHSV\n8bit x 3 pillow\u306e\u307f\n\n\nRGBa\n\u30a2\u30eb\u30d5\u30a1\u30c1\u30e3\u30f3\u30cd\u30eb\u3067RGB\u5024\u3092\u4e57\u7b97\n\n\nLA\n\u30a2\u30eb\u30d5\u30a1\u30c1\u30e3\u30f3\u30cd\u30eb\u3067L\u5024\u3092\u4e57\u7b97\n\n\nI\n32bit \u6574\u6570\n\n\nF\n32bit \u6d6e\u52d5\u5c11\u6570\n\n\n\n\n\u30ea\u30b5\u30a4\u30ba\u30d5\u30a3\u30eb\u30bf\n\n\n\n\u30d5\u30a3\u30eb\u30bf\n\u30c0\u30a6\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u54c1\u8cea\n\u30a2\u30c3\u30d7\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u54c1\u8cea\n\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\n\n\n\n\nImage.NEAREST\n\n\n\u2b50\u2b50\u2b50\u2b50\u2b50\n\n\nImage.BOX\n\u2b50\n\n\u2b50\u2b50\u2b50\u2b50\n\n\nImage.BILINEAR\n\u2b50\n\u2b50\n\u2b50\u2b50\u2b50\n\n\nImage.HAMMING\n\u2b50\u2b50\n\n\u2b50\u2b50\u2b50\n\n\nImage.BICUBIC\n\u2b50\u2b50\u2b50\n\u2b50\u2b50\u2b50\n\u2b50\u2b50\n\n\nImage.LANCZOS\n\u2b50\u2b50\u2b50\u2b50\n\u2b50\u2b50\u2b50\u2b50\n\u2b50\n\n\n\n\u203bImage.ANTIALIAS\u306fImage.LANCZOS\u306e\u5225\u540d\u3067\u3001\u4e92\u63db\u6027\u306e\u305f\u3081\u306b\u6b8b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003\nhttp://pillow.readthedocs.io/en/3.4.x/handbook/concepts.html#concept-filters\n\nImage\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\nimg.convert(\"L\")\n\n\n\n\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u8003\u616e\u3057\u305f\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\nalpha.convert(\"LA\")\n\n \u2192 \n\u3061\u306a\u307f\u306bconvert('L')\u306f\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u8003\u616e\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3002\nalpha.convert(\"L\")\n\n \u2192 \n\nHSV\u5909\u63db\nimg.convert(\"HSV\")\n\npillow\u306e\u307fHSV\u8272\u7a7a\u9593\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\u8272\u76f8(Hue)\u3001\u5f69\u5ea6(Saturation)\u3001\u660e\u5ea6(Value)\u306e3\u3064\u306e\u6210\u5206\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u8272\u76f8\u74b0\u3092\u30b7\u30d5\u30c8\u3059\u308b\u4f8b\u3067\u3059\u3002\nh, s, v = img.convert(\"HSV\").split()\n_h = ImageMath.eval(\"(h + 128) % 255\", h=h).convert(\"L\")\nImage.merge(\"HSV\", (_h, s, v)).convert(\"RGB\")\n\n\n\nCIE XYZ\u5909\u63db\nCIE XYZ\u306f\u8272\u540c\u58eb\u306e\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u304c\u3001\u4eba\u9593\u306e\u77e5\u899a\u304c\u611f\u3058\u308b\u5dee\u7570\u3068\u540c\u4e00\u306b\u6210\u308b\u3088\u3046\u306b\u8abf\u6574\u3055\u308c\u305f\u8272\u7a7a\u9593\u3002\nrgb2xyz = (\n    0.412453, 0.357580, 0.180423, 0,\n    0.212671, 0.715160, 0.072169, 0,\n    0.019334, 0.119193, 0.950227, 0\n)\nimg.convert(\"RGB\", rgb2xyz)\n\n\n\uff12\u5024\u5316\ngray = img.convert(\"L\")                     # \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray.point(lambda x: 0 if x < 230 else x)   # \u5024\u304c230\u4ee5\u4e0b\u306f0\u306b\u306a\u308b\n\n\n\n\u753b\u50cf\u3092\u660e\u308b\u304f\u3059\u308b / \u6697\u304f\u3059\u308b\nimg.point(lambda x: x * 1.5)    # 1.5\u500d\u660e\u308b\u304f\u3059\u308b\nimg.point(lambda x: x * 0.5)    # 1 / 2\u306b\u6697\u304f\u3059\u308b\n\n \n\n\u30bb\u30d4\u30a2\n\u3044\u3063\u305f\u3093\u753b\u50cf\u3092\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u30bb\u30d4\u30a2\u5316\u3057\u307e\u3059\u3002\ngray = img.convert(\"L\")\nImage.merge(\n    \"RGB\",\n    (   \n        gray.point(lambda x: x * 240 / 255),\n        gray.point(lambda x: x * 200 / 255),\n        gray.point(lambda x: x * 145 / 255)\n    )\n)\n\n\n\n\u30ac\u30f3\u30de\u88dc\u6b63\n\u30ac\u30f3\u30de\u88dc\u6b63\u3082\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3048\u3070\u975e\u5e38\u306b\u9ad8\u901f\u306b\u753b\u50cf\u5909\u63db\u3067\u304d\u307e\u3059\u3002\nsrc=\u5165\u529b\u8272\u3001\u03b3=\u30ac\u30f3\u30de\u5024\u3001g=\u30b2\u30a4\u30f3\u5024\u3068\u3059\u308b\u3068\u3001\u30ac\u30f3\u30de\u88dc\u6b63\u306e\u5f0f\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\ndst = \\biggl(\\frac{src}{255}\\biggr)^{1/\u03b3} \\times g \\times 255\n\ndef gamma_table(gamma_r, gamma_g, gamma_b, gain_r=1.0, gain_g=1.0, gain_b=1.0):\n    r_tbl = [min(255, int((x / 255.) ** (1. / gamma_r) * gain_r * 255.)) for x in range(256)]\n    g_tbl = [min(255, int((x / 255.) ** (1. / gamma_g) * gain_g * 255.)) for x in range(256)]\n    b_tbl = [min(255, int((x / 255.) ** (1. / gamma_b) * gain_b * 255.)) for x in range(256)]\n    return r_tbl + g_tbl + b_tbl\n\nimg.point(gamma_table(1.2, 0.5, 0.5))\n\n\n\n\u30eb\u30fc\u30d7\u5185\u3067\u4f7f\u7528\u3059\u308bpoint\u306e\u9ad8\u901f\u5316\n\u30eb\u30fc\u30d7\u5185\u3067\u306eImage.point\u306b\u306flambda\u3092\u6e21\u3055\u306a\u3044\u65b9\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3001point\u306b\u6e21\u3059\u5f15\u6570\u306f\u3042\u304f\u307e\u3067\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3067\u3042\u308b\u305f\u3081\u3001\u4e8b\u524d\u306b\u5c55\u958b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u9ad8\u901f\u3067\u3059\u3002\nfor ...:\n   img.point(lambda x: x * 100)\n\n# \u4e0b\u306e\u51e6\u7406\u306f\u4e0a\u306e\u51e6\u7406\u3068\u7b49\u3057\u3044\u304c\u9ad8\u901f\u3067\u3059\ntable = [x * 100 for x in range(256)] * len(img.getbands())\nfor ...:\n    img.point(table)\n\n\ngetbbox\nImage.getbbox\u306f\u753b\u50cf\u5185\u3067\u5024\u304c0\u3067\u306a\u3044\u6700\u5c0f\u9818\u57df\u3092\u8fd4\u3057\u307e\u3059\u3001\u5024\u304c\u3059\u3079\u30660\u306e\u753b\u50cf\u306fNone\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u30a2\u30eb\u30d5\u30a1\u6210\u5206\u306e\u4f59\u767d\u30ab\u30c3\u30c8\nalpha = Image.open(\"alpha.png\")\n\ncrop = alpha.split()[-1].getbbox()\nalpha.crop(crop)\n\n  \u2192 \n\n\u540c\u4e00\u753b\u7d20\u30c1\u30a7\u30c3\u30af\n\uff12\u3064\u306e\u753b\u50cf\u306e\u540c\u4e00\u306e\u5834\u5408ImageChops.difference\u306f\u3059\u3079\u30660\u306e\u753b\u50cf\u3092\u8fd4\u3059\u305f\u3081\u3001getbbox\u304cNone\u304c\u306a\u3089\u3070\u540c\u4e00\u3068\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\nImageChops.difference(img1, img2).getbbox() is None\n\n\n\u30ea\u30b5\u30a4\u30ba\nimg.resize((128, 128), Image.LANCZOS)\n\n\n\n\u30b5\u30e0\u30cd\u30a4\u30eb\n\u30b5\u30e0\u30cd\u30a4\u30eb\u306f\u30ea\u30b5\u30a4\u30ba\u3068\u9055\u3044\u3001\u7e26\u6a2a\u6bd4\u3092\u7dad\u6301\u3057\u307e\u3059\u3002\n\u306a\u305c\u304bthumbnail\u306f\u7834\u58ca\u7684\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3001Image.copy\u306a\u306e\u3067\u8907\u88fd\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\nimg.thumbnail((128, 128), Image.LANCZOS)\nimg.size\n# (128, 79)\n\n\n\n\u56de\u8ee2\n\u5f15\u6570expand\u306bTrue\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u56de\u8ee2\u6642\u306b\u753b\u50cf\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306b\u753b\u50cf\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\nimg.rotate(90, expand=True)\n\n\n\n\u30e2\u30b6\u30a4\u30af\u51e6\u7406\n\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u306fImage.LINEAR\u3067\u7e2e\u5c0f\u3068\u62e1\u5927\u3092\u3059\u308c\u3070\u826f\u3044\u304c\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066\u304b\u3089\u7e2e\u5c0f\u3059\u308b\u3068\u3084\u308f\u3089\u304b\u3044\u30e2\u30b6\u30a4\u30af\u306b\u306a\u308a\u307e\u3059\u3002\n# \u30ae\u30b6\u30ae\u30b6\u30e2\u30b6\u30a4\u30af\nimg.resize([x // 8 for x in img.size]).resize(img.size)\n\n# \u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u308b\u3068\u3084\u308f\u3089\u304b\u3044\u30e2\u30b6\u30a4\u30af\u306b\ngimg = img.filter(ImageFilter.GaussianBlur(4))\ngimg.resize([x // 8 for x in img.size]).resize(img.size)\n\n \n\n\u30a2\u30eb\u30d5\u30a1\u30d6\u30ec\u30f3\u30c9\nImage.blend(img,effect_img, 0.5)\n\n  \n\n\u6e1b\u8272\nimg.quantize(4)    # 4\u8272\u306b\u6e1b\u8272\n\n\n\n\u30a2\u30eb\u30d5\u30a1\u753b\u50cf\u3092\u8cbc\u308a\u4ed8\u3051\n\u30a2\u30eb\u30d5\u30a1\u4ed8\u304d\u753b\u50cf\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u5834\u5408\u306fImage.paste\u306e\u5f15\u6570'mask'\u306b\u30a2\u30eb\u30d5\u30a1\u4ed8\u304d\u753b\u50cf\u3092\u6307\u5b9a\u3059\u308b\u3002\nimg.paste(alpha, mask=alpha)\n\n\n\n\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u8272\u3092\u30ab\u30a6\u30f3\u30c8\n\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u8272\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u308b\u3001Image.getcolors\u3067\u306f\u5f15\u6570\u306a\u3057\u306e\u5834\u5408\u306f255\u8272\u4ee5\u4e0a\u306f\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\n255\u8272\u4ee5\u4e0a\u306e\u8272\u3092\u4f7f\u3063\u305f\u753b\u50cf\u306e\u5834\u5408\u3001\u30d4\u30af\u30bb\u30eb\u6570\u3092\u5f15\u6570\u3067\u6e21\u3057\u3066\u304a\u3051\u3070\u5b89\u5fc3\u3067\u3059\u30021\nimg.getcolors(img.size[0] * img.size[1])\n\n\n\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\u30a4\u30e1\u30fc\u30b8\u306e\u8272\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u30ea\u30b9\u30c8\u3067\u8fd4\u3059\u3002\n\u5404\u30d0\u30f3\u30c9\u3092\u9023\u7d9a\u3057\u3066\u8fd4\u3059\u305f\u3081\u3001RGB\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306f256 x 3=768\u500b\u306e\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059\u3002\nimg.histogram()\n\n\n\u8272\u306e\u7f6e\u63db\n\u8272\u3092\u7f6e\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u8272\u3092\u7f6e\u63db\u3057\u305f\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nPIL/Pillow\u3067\u753b\u50cf\u306e\u8272\u3092\u9ad8\u901f\u306b\u7f6e\u63db\u3059\u308b\n\nImageOps\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u30cd\u30ac\u30dd\u30b8\u53cd\u8ee2\nImageOps.invert(img)\n\n\n\n\u5de6\u53f3\u53cd\u8ee2 / \u4e0a\u4e0b\u53cd\u8ee2\nImageOps.mirror(img)    # \u5de6\u53f3\u53cd\u8ee2\nImageOps.flip(img)      # \u4e0a\u4e0b\u53cd\u8ee2\n\n \n\n\u30ab\u30e9\u30fc\u5316\n\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3092\u30d4\u30af\u30bb\u30eb\u50240\u3092black\u306b\u3001\u30d4\u30af\u30bb\u30eb\u5024255\u3092white\u306e\u8272\u3092\u7740\u8272\u3057\u307e\u3059\u3002\ngray = ImageOps.grayscale(img)\nImageOps.colorize(gray, black=(0, 0, 0), white=(255, 255, 0))\n\n\u3000\u2192\u3000\n\n\u30dd\u30b9\u30bf\u30e9\u30a4\u30ba\n\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6df1\u5ea6\u3092\u5f15\u6570\u306e\u5024\u306b\u7e2e\u5c0f\u3057\u3066\u8272\u3092\u5358\u7d14\u5316\u3057\u307e\u3059\u3002\nImageOps.posterize(img, 2)\n\n\n\n\u30bd\u30fc\u30e9\u30e9\u30a4\u30ba\n\u3057\u304d\u3044\u5024\u3092\u8d85\u3048\u308b\u3059\u3079\u3066\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3092\u53cd\u8ee2\u3055\u305b\u307e\u3059\u3002\n\u4f7f\u3044\u3069\u3053\u308d\u306f\u4e0d\u660e\u3002\nImageOps.solarize(img, 128)\n\n\n\n\u5e73\u5747\u5316\uff08\u30a4\u30b3\u30e9\u30a4\u30ba\uff09\n\u30a4\u30e1\u30fc\u30b8\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5747\u7b49\u5316\u3057\u307e\u3059\u3002\n\u5165\u529b\u753b\u50cf\u306b\u975e\u7dda\u5f62\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u9069\u7528\u3057\u3066\u3001\u51fa\u529b\u753b\u50cf\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5024\u306e\u5747\u4e00\u306a\u5206\u5e03\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nImageOps.equalize(img)\n\n\n\nImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\nImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u64cd\u4f5c\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n \n\u5de6\u304c\u88ab\u30a8\u30d5\u30a7\u30af\u30c8\u753b\u50cf\u3001\u53f3\u304c\u30a8\u30d5\u30a7\u30af\u30c8\u7528\u753b\u50cf\u3067\u3059\u3001\u3053\u306e\u7ae0\u3067\u306f\u3053\u306e\uff12\u3064\u306e\u753b\u50cf\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u8986\u3044\u713c\u304d\uff08\u30ea\u30cb\u30a2\uff09/ \u6e1b\u7b97\nImageChops.add(img, effect_img)         # img + effect_img\nImageChops.subtract(img, effect_img)    # img - effect_img\n\n \n\nmod\u6f14\u7b97\nImageChops.add_modulo(img, effect_img)         # img + effect_img % MAX\nImageChops.subtract_modulo(img, effect_img)    # img - effect_img % MAX\n\n \n\n\u4e57\u7b97 / \u30b9\u30af\u30ea\u30fc\u30f3\nImageChops.multiply(img, effect_img)\nImageChops.screen(img, effect_img)\n\n \n\n\u6bd4\u8f03\uff08\u660e\uff09\uff0f\u6bd4\u8f03\uff08\u6697\uff09\nImageChops.lighter(img, effect_img)\nImageChops.darker(img, effect_img)\n\n \n\n\u5dee\u306e\u7d76\u5bfe\u5024\nImageChops.difference(img, effect_img)\n\n\n\n\u30aa\u30d5\u30bb\u30c3\u30c8\nImageChops.offset(img, 100, 100)\n\n\n\nImageFilter\u30e2\u30b8\u30e5\u30fc\u30eb\n\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\uff08\u7573\u307f\u8fbc\u307f\u6f14\u7b97\uff09\u3092\u884c\u3044\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u3068\u3044\u3046\u884c\u5217\u3092\u7d44\u307f\u66ff\u3048\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u3055\u307e\u3056\u307e\u306a\u753b\u50cf\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\n\u8aac\u660e\n\n\n\n\nsize\n\u30ab\u30fc\u30cd\u30eb\u306e\u30b5\u30a4\u30ba\n\n\nscale\n\u884c\u5217\u6f14\u7b97\u5f8c\u306b\u3053\u306e\u5024\u3067\u9664\u7b97\n\n\noffset\n\u884c\u5217\u6f14\u7b97\u5f8c\u306b\u3053\u306e\u5024\u3067\u52a0\u7b97\n\n\nkernel\n\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u884c\u5217\n\n\n\n\n\u53c2\u8003\nhttps://github.com/python-pillow/Pillow/blob/6e7553fb0f12025306b2819b9b842adf6b598b2e/PIL/ImageFilter.py\n\nImageFilter.BLUR\nimg.filter(ImageFilter.BLUR)\n\n# size: (5, 5),\n# scale: 16,\n# offset: 0,\n# kernel:(\n#     1,  1,  1,  1,  1,\n#     1,  0,  0,  0,  1,\n#     1,  0,  0,  0,  1,\n#     1,  0,  0,  0,  1,\n#     1,  1,  1,  1,  1\n# )\n\n\n\nImageFilter.DETAIL\nimg.filter(ImageFilter.DETAIL)\n\n# size: (3, 3), \n# scale: 6,\n# offset: 0,\n# kernel: (\n#     0, -1,  0,\n#     -1, 10, -1,\n#     0, -1,  0\n# )\n\n\n\nImageFilter.SHAPEN\nimg.filter(ImageFilter.SHARPEN)\n\n# size: (3, 3),\n# scale: 16,\n# offset: 0,\n# kernel: (\n#     -2, -2, -2,\n#     -2, 32, -2,\n#     -2, -2, -2\n# )\n\n\n\nImageFilter.CONTOUR\nimg.filter(ImageFilter.CONTOUR)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 255,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  8, -1,\n#     -1, -1, -1\n# )\n\n\n\nImageFilter.EDGE_ENHANCE / ImageFilter.EDGE_ENHANCE_MORE\nimg.filter(ImageFilter.EDGE_ENHANCE)\n\n# size: (3, 3),\n# scale: 2,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1, 10, -1,\n#     -1, -1, -1\n# )\n\nimg.filter(ImageFilter.EDGE_ENHANCE_MORE)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  9, -1,\n#     -1, -1, -1\n# )\n\n \n\nImageFilter.EMBOSS\nimg.filter(ImageFilter.EMBOSS)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 128,\n# kernel: (\n#     -1,  0,  0,\n#     0,  1,  0,\n#     0,  0,  0\n# )\n\n\n\nImageFilter.FIND_EDGES\nimg.filter(ImageFilter.FIND_EDGES)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  8, -1,\n#     -1, -1, -1\n# )\n\n\n\nImageFilter.SMOOTH / ImageFilter.SMOOTH_MORE\nimg.filter(ImageFilter.SMOOTH)\n# size: (3, 3),\n# scale: 13,\n# offset: 0,\n# kernel: (\n#     1,  1,  1,\n#     1,  5,  1,\n#     1,  1,  1\n# )\n# \n\nimg.filter(ImageFilter.SMOOTH_MORE)\n# size: (5, 5),\n# scale: 100,\n# offset: 0,\n# kernel: (\n#     1,  1,  1,  1,  1,\n#     1,  5,  5,  5,  1,\n#     1,  5, 44,  5,  1,\n#     1,  5,  5,  5,  1,\n#     1,  1,  1,  1,  1\n# )\n\n \n\n\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\n\u30ac\u30a6\u30b7\u30a2\u30f3\u307c\u304b\u3057\u306b\u3088\u308a\u753b\u9762\u306e\u5e73\u6ed1\u5316\u3057\u307e\u3059\u3002\nimg.filter(ImageFilter.GaussianBlur(1.0))\nimg.filter(ImageFilter.GaussianBlur(1.5))\nimg.filter(ImageFilter.GaussianBlur(3.0))\n\n  \n\n\u81a8\u5f35 / \u53ce\u7e2e\nMaxFilter\u306fDilation(\u81a8\u5f35)\u3001MinFilter\u306fErosion\uff08\u53ce\u7e2e\uff09\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\nimg.filter(ImageFilter.MinFilter())\nimg.filter(ImageFilter.MaxFilter())\n\n  \n\n\u53c2\u8003\n\u81a8\u5f35\u30fb\u53ce\u7e2e\u30fb\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30fb\u30af\u30ed\u30fc\u30b8\u30f3\u30b0\n\n\u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\nMedianFilter\u306f\u30ce\u30a4\u30ba\u9664\u53bb\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306b\u6bd4\u3079\u8f2a\u90ed\u304c\u3042\u307e\u308a\u30dc\u30b1\u307e\u305b\u3093\u3002\nimg.filter(ImageFilter.MedianFilter())\n\n \u2192 \n\n\u53c2\u8003\n\u30ce\u30a4\u30ba\u9664\u53bb\n\n\u30e2\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\n\u6307\u5b9a\u3055\u308c\u305f\u30b5\u30a4\u30ba\u306e\u30dc\u30c3\u30af\u30b9\u3067\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u30d4\u30af\u30bb\u30eb\u5024\u3092\u9078\u629e\u3057\u307e\u3059\u30021\u56de\u307e\u305f\u306f2\u56de\u3060\u3051\u767a\u751f\u3059\u308b\u30d4\u30af\u30bb\u30eb\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n\u4f7f\u3044\u3069\u3053\u308d\u4e0d\u660e\u3002Pillow\u306eModeFilter\u3092\u4f7f\u3063\u3066\u5199\u771f\u3092\u7d75\u753b\u8abf\u306b\u3059\u308b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nimg.filter(ImageFilter.ModeFilter(5))\n\n\n\nImageEnhance\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\u30ab\u30e9\u30fc\u30d0\u30e9\u30f3\u30b9\u8abf\u6574\nenhancer = ImageEnhance.Color(img)\nenhancer.enhance(0.0)    # \u767d\u9ed2\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n\n  \n\n\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u8abf\u6574\nenhancer = ImageEnhance.Contrast(img)\nenhancer.enhance(0.0)    # \u7070\u8272\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n\n  \n\n\u660e\u308b\u3055\u8abf\u6574\nenhancer = ImageEnhance.Brightness(img)\nenhancer.enhance(0.0)    # \u9ed2\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n\n  \n\n\u30b7\u30e3\u30fc\u30d7\u30cd\u30b9\u8abf\u6574\nenhancer = ImageEnhance.Sharpness(img)\nenhancer.enhance(0.0)    # \u30dc\u30b1\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\nenhancer.enhance(1.5)    #  \u2195\nenhancer.enhance(2.0)    # \u30b7\u30e3\u30fc\u30d7\u753b\u50cf\n\n  \n\nImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\nImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30d4\u30af\u30bb\u30eb\u540c\u58eb\u306e\u6f14\u7b97\u3092\u3042\u305f\u304b\u3082\u6570\u5024\u6f14\u7b97\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\u4f7f\u3044\u3053\u306a\u305b\u3070\u8907\u96d1\u306a\u753b\u50cf\u51e6\u7406\u3082\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u306e\u307f\u6f14\u7b97\u53ef\u80fd\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9\u306fImage.split\u3067\u5206\u5272\u3057\u3066\u304b\u3089\u51e6\u7406\nfloat\u3067\u6f14\u7b97\u3059\u308b\u6642\u306e\u5024\u306e\u7bc4\u56f2\u306f0.0\uff5e1.0\u3067\u306f\u306a\u304f0.0\uff5e255.0\n\u6f14\u7b97\u4e2d\u306eImage\u306fmode\u304c\"I\"(int)\u3001\u307e\u305f\u306f\"F\"(float)\u306b\u306a\u308b\u3001\u6700\u5f8c\u306bmode\u3092\"L\"\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\n\u5404\u7a2e\u6f14\u7b97(+,-,*,/,**,%)\u306f\u30d4\u30af\u30bb\u30eb\u51e6\u7406\u3067\u306f\u306a\u304f\u30a4\u30e1\u30fc\u30b8\u307e\u308b\u3054\u3068\u306e\u6f14\u7b97\n\u6f14\u7b97\u306f\u30d4\u30af\u30bb\u30eb\u3054\u3068\u3067\u306f\u306a\u304fImage\u3054\u3068\u306b\u884c\u308f\u308c\u3001\u6f14\u7b97\u3054\u3068\u306bImage\u304c\u751f\u6210\u3055\u308c\u308b\n\u6f14\u7b97\u306e\u304b\u308f\u308a\u306blambda\u306a\u3069\u306e\u30b3\u30fc\u30eb\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u6e21\u305b\u308b\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u3057\u304b\u51e6\u7406\u3067\u304d\u306a\u3044\u305f\u3081\u3001RGB\u306a\u3069\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u5909\u63db\u3059\u308b\u3068\u304d\u306b\u9762\u5012\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\ndef _blend_f(img1, img2, func):\n    blend_eval = \"convert(func(float(a), float(b)), 'L')\"\n    bands = [\n        ImageMath.eval(\n            blend_eval,\n            a=a,\n            b=b,\n            func=func\n        )\n        for a, b in zip(img1.split(), img2.split())\n    ]\n    return Image.merge(img1.mode, bands)\n\n\n\u53c2\u8003\nPIL/Pillow\u3067\u9ad8\u901f\u306bPhotoShop\u306a\u3069\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b\n\n\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\ndef _over_lay(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2 * (a + b - a * b / 255) - 255\n    return _cl * (a < 128) + _ch * (a >= 128)\n\n_blend_f(img, effect_img, _over_lay)\n\n\n\n\u30bd\u30d5\u30c8\u30e9\u30a4\u30c8\ndef _soft_light(a, b):\n    _cl = (a / 255) ** ((255 - b) / 128) * 255\n    _ch = (a / 255) ** (128 / b) * 255\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img, effect_img, _soft_light)\n\n\n\n\u30cf\u30fc\u30c9\u30e9\u30a4\u30c8\ndef _hard_light(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2.0 * (a + b - a * b / 255.0) - 255.0\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img, effect_img, _hard_light)\n\n\n\nPhotoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u4f7f\u3046\nPhotoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u300cImage4Layer\u300d\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/pashango2/Image4Layer\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u3067\u7c21\u5358\u306b\u884c\u306a\u3048\u307e\u3059\u3001\u5b9f\u884c\u306b\u306fpillow(PIL)\u304c\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$pip install image4layer\n\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3059\u3001color-dodge\u30e2\u30fc\u30c9\u3067\u5408\u6210\u3059\u308b\u4f8b\u3067\u3059\u3002\nfrom PIL import Image\nfrom image4layer import Image4Layer\n\nsource = Image.open(\"ducky.png\")\nbackdrop = Image.open(\"backdrop.png\")\n\nImage4Layer.color_dodge(backdrop, source)\n\n\n\nGIF\u306e\u66f8\u304d\u8fbc\u307f\n\u8907\u6570\u306eGIF\uff08GIF\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff09\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nim.save(out, save_all=True, append_images=[im1, im2, ...])\n\n\u7c21\u5358\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3GIF\u306e\u4f5c\u6210\u4f8b\u3067\u3059\u3002\nimgs = []\nfor i in range(100):\n    imgs.append(img.point(lambda x: x * (1.0 - (i/100))))\n\nimg.save(\"anime.gif\", save_all=True, append_images=imgs, loop=True)\n\n\n\n\u53c2\u8003\nhttp://pillow.readthedocs.io/en/4.0.x/handbook/image-file-formats.html?highlight=seek#saving\n\nQImagae\u3078\u306e\u5909\u63db\nPyQt\u306eQImage\u3078\u306e\u5909\u63db\u306fImageQt\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nImageQt.ImageQt(img)\n\n\u306a\u304a\u3001PySide\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u65b9\u6cd5\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\nfrom PySide.QtGui import *\nimport io\n\nimg_buffer = io.BytesIO()\nbase.save(img_buffer, \"BMP\")\nqimage = QImage()\nqimage.loadFromData(img_buffer.getvalue(), \"BMP\")\n\n\u7121\u99c4\u306a\u51e6\u7406\u306a\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001RGB\u2192BGR\u5909\u63db\u3084Y\u8ef8\u306e\u53cd\u8ee2\u554f\u984c\u306a\u3069\u9762\u5012\u306a\u90e8\u5206\u3092Pillow/PySide\u304c\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u53c2\u8003\nPIL.Image \u3068 PyQt4.QtGui.QImage\u306e\u76f8\u4e92\u5909\u63db\n\nPSNR\nPSNR\u30682\u3064\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3059\u308b\u6307\u6a19\u5024\u3067\u3059\u3002\n\u73fe\u5728\u3067\u306fPSNR\u3088\u308a\u3082SSIM\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u304cPSNR\u3082\u3088\u304f\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u5024\u304c\u9ad8\u3044\u307b\u3046\u304c\u753b\u8cea\u304c\u826f\u304f\u3001\u5727\u7e2e\u306e\u52a3\u5316\u5ea6\u3092\u6e2c\u308b\u969b\u306bPSNR\u304c30\uff5e50\u306e\u9593\u304c\u6a19\u6e96\u7684\u306a\u54c1\u8cea\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u8a08\u7b97\u5f0f\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3001MSE\u306f\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u3067\u3001MAX\u306f255\u3067\u3059\u3002\nPSNR = 10 \\times \\log 10\\frac{MAX^2}{MSE}\n\nPSNR\u3092\u6c42\u3081\u308b\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3001ImageStat\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u4e8b\u306b\u3088\u308a\u9ad8\u901f\u306bPSNR\u3092\u6c42\u3081\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\ndef psnr(img1, img2):\n    diff_img = ImageChops.difference(img1, img2)\n    stat = ImageStat.Stat(diff_img)\n    mse = sum(stat.sum2) / len(stat.count) / stat.count[0]\n    return 10 * math.log10(255 ** 2 / mse)\n\n\u306a\u304a\u3001SSIM\u306fPIL/Pillow\u3067\u9ad8\u901f\u306b\u6c42\u3081\u308b\u306e\u306f\u73fe\u72b6\u3067\u306f\u96e3\u3057\u3044\u3067\u3059\u3001pyssim\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u304b\u3001OpenCV\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u53c2\u8003\n\u30d4\u30fc\u30af\u4fe1\u53f7\u5bfe\u96d1\u97f3\u6bd4 - Wikipedia\n\n\u7dda\u753b\u62bd\u51fa\ngray = img.convert(\"L\")\ngray2 = gray.filter(ImageFilter.MaxFilter(5))\nsenga_inv = ImageChops.difference(gray, gray2)\nsenga = ImageOps.invert(senga_inv)\n\n\n\u3053\u3061\u3089\u306e\u65b9\u6cd5\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3001\u975e\u5e38\u306b\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u3002\n\n\n\n\n2017-02-07\u4fee\u6b63 'Image.getcount'\u3068\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6b63\u3057\u304f\u306f'Image.getcolors'\u3067\u3059\u3001\u4fee\u6b63\u3044\u305f\u3057\u307e\u3059\u3002\u00a0\u21a9\n\n\n\nPIL/Pillow\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u9ad8\u901f\u306aPython\u7528\u306e\u753b\u50cf\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u3088\u304f\u4f7f\u3046\u51e6\u7406\u3092\u307e\u3068\u3081\u307e\u3057\u305f\uff08\u968f\u6642\u66f4\u65b0\uff09\n\n# PIL\u3068Pillow\u306e\u9055\u3044\n\u57fa\u672c\u7684\u306bPIL\u3092\u4f7f\u3046\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093\u3001Pillow\u306e\u65b9\u304c\u30ea\u30b5\u30a4\u30ba\u30d5\u30a3\u30eb\u30bf\u306e\u30d0\u30b0\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u3055\u308c\u3066\u304a\u308a\u9ad8\u54c1\u8cea\u3067\u3059\u3002\n\n# Pillow\u306e\u901f\u5ea6\u306b\u3064\u3044\u3066\nPillow\u306f\u975e\u5e38\u306b\u9ad8\u901f\u306b\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3055\u308c\u3066\u304a\u308a\u3001\u540c\u69d8\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308bImageMagick\u3088\u308a\u3082\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001`getpixel`/`putpixel`\u306f\u975e\u5e38\u306b\u4f4e\u901f\u3067\u3059\u3001\u753b\u50cf\u751f\u6210\u4ee5\u5916\u306b\u306f\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\u66f4\u306b\u9ad8\u901f\u306a`pillow-simd`\u3082\u3042\u308a\u307e\u3059\u3002\u6982\u306d\u30aa\u30ea\u30b8\u30ca\u30eb\u306ePillow\u306e4\u301c5\u500d\u306e\u901f\u5ea6\u304c\u51fa\u308b\u3088\u3046\u3067\u3059\u3002\n\npillow-simd\nhttps://github.com/uploadcare/pillow-simd\n\n####\u53c2\u8003\nhttps://python-pillow.org/pillow-perf/\n\n# Image\u30e2\u30fc\u30c9\u4e00\u89a7\n\n| \u30e2\u30fc\u30c9 | \u8aac\u660e |\n|:-:|:--|\n| 1  | 1bit\u3000\u30de\u30b9\u30af\u306b\u4f7f\u7528\u3001\u8ad6\u7406\u6f14\u7b97\u304c\u53ef\u80fd  |\n|  L | 8bit \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb  |\n|  P | \u30d1\u30ec\u30c3\u30c8\u30e2\u30fc\u30c9  |\n| RGB  | 8bit x 3  |\n| RGBA  | 8bit x 4 \u900f\u660e\u5ea6(\u30a2\u30eb\u30d5\u30a1)\u4ed8\u304d  |\n| CMYK  | 8bit x 4 \u5370\u5237\u95a2\u9023\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b |\n| YCbCr  | 8bit x 3 \u30d3\u30c7\u30aa\u95a2\u9023\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b |\n|  HSV |  8bit x 3 pillow\u306e\u307f|\n| RGBa | \u30a2\u30eb\u30d5\u30a1\u30c1\u30e3\u30f3\u30cd\u30eb\u3067RGB\u5024\u3092\u4e57\u7b97 |\n| LA | \u30a2\u30eb\u30d5\u30a1\u30c1\u30e3\u30f3\u30cd\u30eb\u3067L\u5024\u3092\u4e57\u7b97 |\n| I  |  32bit \u6574\u6570 |\n| F  |  32bit \u6d6e\u52d5\u5c11\u6570 |\n\n# \u30ea\u30b5\u30a4\u30ba\u30d5\u30a3\u30eb\u30bf\n| \u30d5\u30a3\u30eb\u30bf | \u30c0\u30a6\u30f3\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u54c1\u8cea | \u30a2\u30c3\u30d7\u30b9\u30b1\u30fc\u30ea\u30f3\u30b0\u54c1\u8cea | \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9 |\n|:-:|:-:|:-:|:-:|\n|  Image.NEAREST |   |   |  \u2b50\u2b50\u2b50\u2b50\u2b50 |\n|  Image.BOX | \u2b50  |   | \u2b50\u2b50\u2b50\u2b50  |\n|  Image.BILINEAR |  \u2b50 | \u2b50  | \u2b50\u2b50\u2b50  |\n|  Image.HAMMING | \u2b50\u2b50  |   | \u2b50\u2b50\u2b50  |\n|  Image.BICUBIC | \u2b50\u2b50\u2b50  | \u2b50\u2b50\u2b50  | \u2b50\u2b50  |\n| Image.LANCZOS  | \u2b50\u2b50\u2b50\u2b50  | \u2b50\u2b50\u2b50\u2b50  | \u2b50  |\n\u203bImage.ANTIALIAS\u306fImage.LANCZOS\u306e\u5225\u540d\u3067\u3001\u4e92\u63db\u6027\u306e\u305f\u3081\u306b\u6b8b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003\nhttp://pillow.readthedocs.io/en/3.4.x/handbook/concepts.html#concept-filters\n\n# Image\u30e2\u30b8\u30e5\u30fc\u30eb\n## \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\n```python\nimg.convert(\"L\")\n```\n![mono.png](https://qiita-image-store.s3.amazonaws.com/0/140075/7c4230b5-8fa0-0546-047d-24fea2490b62.png)\n\n## \u30a2\u30eb\u30d5\u30a1\u5024\u3092\u8003\u616e\u3057\u305f\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\n```python\nalpha.convert(\"LA\")\n```\n\n![alpha.png](https://qiita-image-store.s3.amazonaws.com/0/140075/569cd912-0976-89f1-2d63-8add808939e5.png) \u2192 ![la.png](https://qiita-image-store.s3.amazonaws.com/0/140075/68da2c00-d1c7-b4e3-5045-53ed319aa01d.png)\n\n\u3061\u306a\u307f\u306b`convert('L')`\u306f\u30a2\u30eb\u30d5\u30a1\u5024\u3092\u8003\u616e\u3057\u3066\u304f\u308c\u307e\u305b\u3093\u3002\n\n```python\nalpha.convert(\"L\")\n```\n![alpha.png](https://qiita-image-store.s3.amazonaws.com/0/140075/569cd912-0976-89f1-2d63-8add808939e5.png) \u2192 ![l.png](https://qiita-image-store.s3.amazonaws.com/0/140075/5456195b-5016-caae-af6f-f0a3a808ce5f.png)\n\n\n## HSV\u5909\u63db\n\n```python\nimg.convert(\"HSV\")\n```\npillow\u306e\u307fHSV\u8272\u7a7a\u9593\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3067\u304d\u307e\u3059\u3002\u8272\u76f8(Hue)\u3001\u5f69\u5ea6(Saturation)\u3001\u660e\u5ea6(Value)\u306e3\u3064\u306e\u6210\u5206\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u3001\u8272\u76f8\u74b0\u3092\u30b7\u30d5\u30c8\u3059\u308b\u4f8b\u3067\u3059\u3002\n\n```python\nh, s, v = img.convert(\"HSV\").split()\n_h = ImageMath.eval(\"(h + 128) % 255\", h=h).convert(\"L\")\nImage.merge(\"HSV\", (_h, s, v)).convert(\"RGB\")\n```\n![hsv.png](https://qiita-image-store.s3.amazonaws.com/0/140075/cb12783b-2184-be18-7b17-5aa6a0564027.png)\n\n## CIE XYZ\u5909\u63db\nCIE XYZ\u306f\u8272\u540c\u58eb\u306e\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u304c\u3001\u4eba\u9593\u306e\u77e5\u899a\u304c\u611f\u3058\u308b\u5dee\u7570\u3068\u540c\u4e00\u306b\u6210\u308b\u3088\u3046\u306b\u8abf\u6574\u3055\u308c\u305f\u8272\u7a7a\u9593\u3002\n\n```python\nrgb2xyz = (\n    0.412453, 0.357580, 0.180423, 0,\n    0.212671, 0.715160, 0.072169, 0,\n    0.019334, 0.119193, 0.950227, 0\n)\nimg.convert(\"RGB\", rgb2xyz)\n```\n\n## \uff12\u5024\u5316\n```python\ngray = img.convert(\"L\")                     # \u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\ngray.point(lambda x: 0 if x < 230 else x)   # \u5024\u304c230\u4ee5\u4e0b\u306f0\u306b\u306a\u308b\n```\n![bin.png](https://qiita-image-store.s3.amazonaws.com/0/140075/42763f3a-2684-0b01-8de4-aad52d02082b.png)\n\n## \u753b\u50cf\u3092\u660e\u308b\u304f\u3059\u308b / \u6697\u304f\u3059\u308b\n\n```python\nimg.point(lambda x: x * 1.5)    # 1.5\u500d\u660e\u308b\u304f\u3059\u308b\nimg.point(lambda x: x * 0.5)    # 1 / 2\u306b\u6697\u304f\u3059\u308b\n```\n\n![ligter.png](https://qiita-image-store.s3.amazonaws.com/0/140075/65019a01-07a7-dcf3-7d48-81326884a322.png) ![darker.png](https://qiita-image-store.s3.amazonaws.com/0/140075/ff48a83d-8537-15cb-7d61-dff9a247970c.png)\n\n\n## \u30bb\u30d4\u30a2\n\u3044\u3063\u305f\u3093\u753b\u50cf\u3092\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u3066\u304b\u3089\u30bb\u30d4\u30a2\u5316\u3057\u307e\u3059\u3002\n\n```python\ngray = img.convert(\"L\")\nImage.merge(\n    \"RGB\",\n    (   \n        gray.point(lambda x: x * 240 / 255),\n        gray.point(lambda x: x * 200 / 255),\n        gray.point(lambda x: x * 145 / 255)\n    )\n)\n```\n![cepia.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f1f20eb7-efda-a415-cf96-70c605178cbd.png)\n\n## \u30ac\u30f3\u30de\u88dc\u6b63\n\u30ac\u30f3\u30de\u88dc\u6b63\u3082\u30eb\u30c3\u30af\u30a2\u30c3\u30d7\u30c6\u30fc\u30d6\u30eb\u3092\u4f7f\u3048\u3070\u975e\u5e38\u306b\u9ad8\u901f\u306b\u753b\u50cf\u5909\u63db\u3067\u304d\u307e\u3059\u3002\nsrc=\u5165\u529b\u8272\u3001\u03b3=\u30ac\u30f3\u30de\u5024\u3001g=\u30b2\u30a4\u30f3\u5024\u3068\u3059\u308b\u3068\u3001\u30ac\u30f3\u30de\u88dc\u6b63\u306e\u5f0f\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```math\ndst = \\biggl(\\frac{src}{255}\\biggr)^{1/\u03b3} \\times g \\times 255\n```\n\n```python\ndef gamma_table(gamma_r, gamma_g, gamma_b, gain_r=1.0, gain_g=1.0, gain_b=1.0):\n    r_tbl = [min(255, int((x / 255.) ** (1. / gamma_r) * gain_r * 255.)) for x in range(256)]\n    g_tbl = [min(255, int((x / 255.) ** (1. / gamma_g) * gain_g * 255.)) for x in range(256)]\n    b_tbl = [min(255, int((x / 255.) ** (1. / gamma_b) * gain_b * 255.)) for x in range(256)]\n    return r_tbl + g_tbl + b_tbl\n\nimg.point(gamma_table(1.2, 0.5, 0.5))\n```\n![gamma.png](https://qiita-image-store.s3.amazonaws.com/0/140075/268439da-5ce5-fbeb-678e-869183cb835c.png)\n\n## \u30eb\u30fc\u30d7\u5185\u3067\u4f7f\u7528\u3059\u308b`point`\u306e\u9ad8\u901f\u5316\n\n\u30eb\u30fc\u30d7\u5185\u3067\u306e`Image.point`\u306b\u306f`lambda`\u3092\u6e21\u3055\u306a\u3044\u65b9\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3001`point`\u306b\u6e21\u3059\u5f15\u6570\u306f\u3042\u304f\u307e\u3067\u5909\u63db\u30c6\u30fc\u30d6\u30eb\u3067\u3042\u308b\u305f\u3081\u3001\u4e8b\u524d\u306b\u5c55\u958b\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u9ad8\u901f\u3067\u3059\u3002\n\n```python\nfor ...:\n   img.point(lambda x: x * 100)\n\n# \u4e0b\u306e\u51e6\u7406\u306f\u4e0a\u306e\u51e6\u7406\u3068\u7b49\u3057\u3044\u304c\u9ad8\u901f\u3067\u3059\ntable = [x * 100 for x in range(256)] * len(img.getbands())\nfor ...:\n    img.point(table)\n```\n\n## getbbox\n`Image.getbbox`\u306f\u753b\u50cf\u5185\u3067\u5024\u304c0\u3067\u306a\u3044\u6700\u5c0f\u9818\u57df\u3092\u8fd4\u3057\u307e\u3059\u3001\u5024\u304c\u3059\u3079\u30660\u306e\u753b\u50cf\u306f`None`\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n### \u30a2\u30eb\u30d5\u30a1\u6210\u5206\u306e\u4f59\u767d\u30ab\u30c3\u30c8\n```python\nalpha = Image.open(\"alpha.png\")\n\ncrop = alpha.split()[-1].getbbox()\nalpha.crop(crop)\n```\n![\u7bc4\u56f2\u3092\u9078\u629e_003.png](https://qiita-image-store.s3.amazonaws.com/0/140075/ff60b42b-90e6-ef70-41e1-4def560a6c78.png)  \u2192 ![\u7bc4\u56f2\u3092\u9078\u629e_004.png](https://qiita-image-store.s3.amazonaws.com/0/140075/a3dd5a01-65b0-da6f-7764-05734ef33382.png)\n\n### \u540c\u4e00\u753b\u7d20\u30c1\u30a7\u30c3\u30af\n\uff12\u3064\u306e\u753b\u50cf\u306e\u540c\u4e00\u306e\u5834\u5408`ImageChops.difference`\u306f\u3059\u3079\u30660\u306e\u753b\u50cf\u3092\u8fd4\u3059\u305f\u3081\u3001`getbbox`\u304c`None`\u304c\u306a\u3089\u3070\u540c\u4e00\u3068\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\n\n```python\nImageChops.difference(img1, img2).getbbox() is None\n```\n\n## \u30ea\u30b5\u30a4\u30ba\n```python\nimg.resize((128, 128), Image.LANCZOS)\n```\n![resize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/067109a1-8c2a-a9df-0bef-41977973031b.png)\n\n## \u30b5\u30e0\u30cd\u30a4\u30eb\n\u30b5\u30e0\u30cd\u30a4\u30eb\u306f\u30ea\u30b5\u30a4\u30ba\u3068\u9055\u3044\u3001\u7e26\u6a2a\u6bd4\u3092\u7dad\u6301\u3057\u307e\u3059\u3002\n\u306a\u305c\u304b`thumbnail`\u306f\u7834\u58ca\u7684\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3001`Image.copy`\u306a\u306e\u3067\u8907\u88fd\u3092\u4f5c\u3063\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\nimg.thumbnail((128, 128), Image.LANCZOS)\nimg.size\n# (128, 79)\n```\n![thumb.png](https://qiita-image-store.s3.amazonaws.com/0/140075/a9474beb-9bb1-cc56-ee29-068f139d4edc.png)\n\n## \u56de\u8ee2\n\u5f15\u6570`expand`\u306b`True`\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u56de\u8ee2\u6642\u306b\u753b\u50cf\u304c\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306b\u753b\u50cf\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\n\n```python\nimg.rotate(90, expand=True)\n```\n![rotate90.png](https://qiita-image-store.s3.amazonaws.com/0/140075/1303867a-f6b0-c20b-0c78-a64702b0a2ca.png)\n\n## \u30e2\u30b6\u30a4\u30af\u51e6\u7406\n\u30e2\u30b6\u30a4\u30af\u51e6\u7406\u306f`Image.LINEAR`\u3067\u7e2e\u5c0f\u3068\u62e1\u5927\u3092\u3059\u308c\u3070\u826f\u3044\u304c\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u3066\u304b\u3089\u7e2e\u5c0f\u3059\u308b\u3068\u3084\u308f\u3089\u304b\u3044\u30e2\u30b6\u30a4\u30af\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python\n# \u30ae\u30b6\u30ae\u30b6\u30e2\u30b6\u30a4\u30af\nimg.resize([x // 8 for x in img.size]).resize(img.size)\n\n# \u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u3092\u304b\u3051\u308b\u3068\u3084\u308f\u3089\u304b\u3044\u30e2\u30b6\u30a4\u30af\u306b\ngimg = img.filter(ImageFilter.GaussianBlur(4))\ngimg.resize([x // 8 for x in img.size]).resize(img.size)\n```\n\n![mozaic2.png](https://qiita-image-store.s3.amazonaws.com/0/140075/654c6c72-7c28-4655-18fa-b743463b9de1.png)  ![mozaic.png](https://qiita-image-store.s3.amazonaws.com/0/140075/e3848ece-96b2-86e0-c734-6e020b624de8.png)\n\n\n## \u30a2\u30eb\u30d5\u30a1\u30d6\u30ec\u30f3\u30c9\n```python\nImage.blend(img,effect_img, 0.5)\n```\n![B9BSxGZmEQpmAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/aab8183a-2ea7-445a-28fe-85406f2b0f00.png) ![kL+ySM465ToAlAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f9d5991d-1090-21ee-c029-b1b48b47556f.png) ![blend.png](https://qiita-image-store.s3.amazonaws.com/0/140075/5f9759d9-a40e-de8b-b6b5-14056a97b9ca.png)\n\n\n## \u6e1b\u8272\n```python\nimg.quantize(4)    # 4\u8272\u306b\u6e1b\u8272\n```\n![quantize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/453f0c06-544e-e999-6d37-a53db3465130.png)\n\n## \u30a2\u30eb\u30d5\u30a1\u753b\u50cf\u3092\u8cbc\u308a\u4ed8\u3051\n\u30a2\u30eb\u30d5\u30a1\u4ed8\u304d\u753b\u50cf\u3092\u8cbc\u308a\u4ed8\u3051\u308b\u5834\u5408\u306f`Image.paste`\u306e\u5f15\u6570'mask'\u306b\u30a2\u30eb\u30d5\u30a1\u4ed8\u304d\u753b\u50cf\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```python\nimg.paste(alpha, mask=alpha)\n```\n![paste.png](https://qiita-image-store.s3.amazonaws.com/0/140075/41fdb7a0-bcfc-36ab-7bc8-a8521d96f01f.png)\n\n\n## \u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u8272\u3092\u30ab\u30a6\u30f3\u30c8\n\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u8272\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u308b\u3001`Image.getcolors`\u3067\u306f\u5f15\u6570\u306a\u3057\u306e\u5834\u5408\u306f255\u8272\u4ee5\u4e0a\u306f\u30ab\u30a6\u30f3\u30c8\u3067\u304d\u307e\u305b\u3093\u3002\n255\u8272\u4ee5\u4e0a\u306e\u8272\u3092\u4f7f\u3063\u305f\u753b\u50cf\u306e\u5834\u5408\u3001\u30d4\u30af\u30bb\u30eb\u6570\u3092\u5f15\u6570\u3067\u6e21\u3057\u3066\u304a\u3051\u3070\u5b89\u5fc3\u3067\u3059\u3002[^1]\n\n[^1]: 2017-02-07\u4fee\u6b63 'Image.getcount'\u3068\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u6b63\u3057\u304f\u306f'Image.getcolors'\u3067\u3059\u3001\u4fee\u6b63\u3044\u305f\u3057\u307e\u3059\u3002\n\n```python\nimg.getcolors(img.size[0] * img.size[1])\n```\n\n## \u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\u30a4\u30e1\u30fc\u30b8\u306e\u8272\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u30ea\u30b9\u30c8\u3067\u8fd4\u3059\u3002\n\u5404\u30d0\u30f3\u30c9\u3092\u9023\u7d9a\u3057\u3066\u8fd4\u3059\u305f\u3081\u3001RGB\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306f256 x 3=768\u500b\u306e\u8981\u7d20\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```python\nimg.histogram()\n```\n\n## \u8272\u306e\u7f6e\u63db\n\n\u8272\u3092\u7f6e\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u8272\u3092\u7f6e\u63db\u3057\u305f\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[PIL/Pillow\u3067\u753b\u50cf\u306e\u8272\u3092\u9ad8\u901f\u306b\u7f6e\u63db\u3059\u308b](http://qiita.com/pashango2/items/d6dda5f07109ee5b6163)\n\n\n# ImageOps\u30e2\u30b8\u30e5\u30fc\u30eb\n\n## \u30cd\u30ac\u30dd\u30b8\u53cd\u8ee2\n```python\nImageOps.invert(img)\n```\n![nega.png](https://qiita-image-store.s3.amazonaws.com/0/140075/6e84c451-f751-d224-4be6-b9a63ebe0f86.png)\n\n\n## \u5de6\u53f3\u53cd\u8ee2 / \u4e0a\u4e0b\u53cd\u8ee2\n\n```python\nImageOps.mirror(img)    # \u5de6\u53f3\u53cd\u8ee2\nImageOps.flip(img)      # \u4e0a\u4e0b\u53cd\u8ee2\n```\n![mirror.png](https://qiita-image-store.s3.amazonaws.com/0/140075/2a7b9413-aece-5496-6ce4-069e96496cd3.png) ![flip.png](https://qiita-image-store.s3.amazonaws.com/0/140075/3ce5323e-f1fa-216e-8348-f92cca4c767d.png)\n\n## \u30ab\u30e9\u30fc\u5316\n\u30b0\u30ec\u30a4\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3092\u30d4\u30af\u30bb\u30eb\u50240\u3092`black`\u306b\u3001\u30d4\u30af\u30bb\u30eb\u5024255\u3092`white`\u306e\u8272\u3092\u7740\u8272\u3057\u307e\u3059\u3002\n\n```python\ngray = ImageOps.grayscale(img)\nImageOps.colorize(gray, black=(0, 0, 0), white=(255, 255, 0))\n```\n\n![mono.png](https://qiita-image-store.s3.amazonaws.com/0/140075/7c4230b5-8fa0-0546-047d-24fea2490b62.png)\u3000\u2192\u3000![colorize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/23e85505-e3d8-6a32-d3fa-48afd7268a67.png)\n\n## \u30dd\u30b9\u30bf\u30e9\u30a4\u30ba \n\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u6df1\u5ea6\u3092\u5f15\u6570\u306e\u5024\u306b\u7e2e\u5c0f\u3057\u3066\u8272\u3092\u5358\u7d14\u5316\u3057\u307e\u3059\u3002\n\n```python\nImageOps.posterize(img, 2)\n```\n![posterize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/3845fc73-5ead-143d-e195-7013e78005b1.png)\n\n## \u30bd\u30fc\u30e9\u30e9\u30a4\u30ba\n\u3057\u304d\u3044\u5024\u3092\u8d85\u3048\u308b\u3059\u3079\u3066\u306e\u30d4\u30af\u30bb\u30eb\u5024\u3092\u53cd\u8ee2\u3055\u305b\u307e\u3059\u3002\n\u4f7f\u3044\u3069\u3053\u308d\u306f\u4e0d\u660e\u3002\n\n```python\nImageOps.solarize(img, 128)\n```\n![solarize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/c6481824-d066-76ec-44c5-5cfd6d4c2a3a.png)\n\n## \u5e73\u5747\u5316\uff08\u30a4\u30b3\u30e9\u30a4\u30ba\uff09\n\u30a4\u30e1\u30fc\u30b8\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5747\u7b49\u5316\u3057\u307e\u3059\u3002\n\u5165\u529b\u753b\u50cf\u306b\u975e\u7dda\u5f62\u30de\u30c3\u30d4\u30f3\u30b0\u3092\u9069\u7528\u3057\u3066\u3001\u51fa\u529b\u753b\u50cf\u306b\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5024\u306e\u5747\u4e00\u306a\u5206\u5e03\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```python\nImageOps.equalize(img)\n```\n![equalize.png](https://qiita-image-store.s3.amazonaws.com/0/140075/36448d44-be5f-f04f-90bd-6d633d6bc8e3.png)\n\n# ImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\n`ImageChops`\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u64cd\u4f5c\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\n![B9BSxGZmEQpmAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/aab8183a-2ea7-445a-28fe-85406f2b0f00.png) ![kL+ySM465ToAlAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f9d5991d-1090-21ee-c029-b1b48b47556f.png)\n\n\u5de6\u304c\u88ab\u30a8\u30d5\u30a7\u30af\u30c8\u753b\u50cf\u3001\u53f3\u304c\u30a8\u30d5\u30a7\u30af\u30c8\u7528\u753b\u50cf\u3067\u3059\u3001\u3053\u306e\u7ae0\u3067\u306f\u3053\u306e\uff12\u3064\u306e\u753b\u50cf\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u8986\u3044\u713c\u304d\uff08\u30ea\u30cb\u30a2\uff09/ \u6e1b\u7b97\n```python\nImageChops.add(img, effect_img)         # img + effect_img\nImageChops.subtract(img, effect_img)    # img - effect_img\n```\n![wE7Grw7M8iQMgAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/2dc58d5b-b3ff-6b86-470f-d83a5f5073ba.png) ![X+81Pf98mz2EwAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/5e8d9011-2519-21b9-39c2-b50c4d31e200.png)\n\n## mod\u6f14\u7b97\n```python\nImageChops.add_modulo(img, effect_img)         # img + effect_img % MAX\nImageChops.subtract_modulo(img, effect_img)    # img - effect_img % MAX\n```\n![addm.png](https://qiita-image-store.s3.amazonaws.com/0/140075/1ca8d4dd-878c-0920-9830-e38c09e865fb.png) ![subm.png](https://qiita-image-store.s3.amazonaws.com/0/140075/d591af95-5202-e6c8-0943-8922f6b04129.png)\n\n## \u4e57\u7b97 / \u30b9\u30af\u30ea\u30fc\u30f3\n```\nImageChops.multiply(img, effect_img)\nImageChops.screen(img, effect_img)\n```\n![8yo3kAAAAASUVORK5CYII=.png](https://qiita-image-store.s3.amazonaws.com/0/140075/4f2288f2-dbe2-9170-c1a6-7b29a98a72f1.png) ![P8BtLqhlqZTLrgAAAAASUVORK5CYII=.png](https://qiita-image-store.s3.amazonaws.com/0/140075/9d4f989f-cee7-a819-c8aa-f5cd19f5ba25.png)\n\n## \u6bd4\u8f03\uff08\u660e\uff09\uff0f\u6bd4\u8f03\uff08\u6697\uff09\n```\nImageChops.lighter(img, effect_img)\nImageChops.darker(img, effect_img)\n```\n![X+81Pf98mz2EwAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/9ed4a37e-bb2f-e93e-5606-59ab936ccc93.png) ![wDMatqtY+79MgAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/762c19be-c549-3900-de95-a9ec06907f2b.png)\n\n## \u5dee\u306e\u7d76\u5bfe\u5024\n```python\nImageChops.difference(img, effect_img)\n```\n![diff.png](https://qiita-image-store.s3.amazonaws.com/0/140075/69d9c338-59ab-0ef1-c27a-0f12ea12b817.png)\n\n## \u30aa\u30d5\u30bb\u30c3\u30c8\n```python\nImageChops.offset(img, 100, 100)\n```\n![offset.png](https://qiita-image-store.s3.amazonaws.com/0/140075/388aa659-b6ed-da57-bab9-b1f121b6ba54.png)\n\n\n# ImageFilter\u30e2\u30b8\u30e5\u30fc\u30eb\n\u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\uff08\u7573\u307f\u8fbc\u307f\u6f14\u7b97\uff09\u3092\u884c\u3044\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u3068\u3044\u3046\u884c\u5217\u3092\u7d44\u307f\u66ff\u3048\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u3055\u307e\u3056\u307e\u306a\u753b\u50cf\u5909\u63db\u3092\u884c\u3044\u307e\u3059\u3002\n\n| \u30d1\u30e9\u30e1\u30fc\u30bf | \u8aac\u660e |\n|:-:|:--|\n| size  | \u30ab\u30fc\u30cd\u30eb\u306e\u30b5\u30a4\u30ba  |\n| scale |  \u884c\u5217\u6f14\u7b97\u5f8c\u306b\u3053\u306e\u5024\u3067\u9664\u7b97 |\n| offset  | \u884c\u5217\u6f14\u7b97\u5f8c\u306b\u3053\u306e\u5024\u3067\u52a0\u7b97  |\n|  kernel |  \u30b3\u30f3\u30dc\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u884c\u5217 |\n\n#### \u53c2\u8003\nhttps://github.com/python-pillow/Pillow/blob/6e7553fb0f12025306b2819b9b842adf6b598b2e/PIL/ImageFilter.py\n\n## ImageFilter.BLUR\n```python\nimg.filter(ImageFilter.BLUR)\n\n# size: (5, 5),\n# scale: 16,\n# offset: 0,\n# kernel:(\n#     1,  1,  1,  1,  1,\n#     1,  0,  0,  0,  1,\n#     1,  0,  0,  0,  1,\n#     1,  0,  0,  0,  1,\n#     1,  1,  1,  1,  1\n# )\n```\n![bluer.png](https://qiita-image-store.s3.amazonaws.com/0/140075/b8bc864e-1f4f-23f3-5c4a-d533bfa231de.png)\n\n## ImageFilter.DETAIL\n```python\nimg.filter(ImageFilter.DETAIL)\n\n# size: (3, 3), \n# scale: 6,\n# offset: 0,\n# kernel: (\n#     0, -1,  0,\n#     -1, 10, -1,\n#     0, -1,  0\n# )\n```\n![detail.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f240a30a-5c30-386d-0038-d1bef9c10ea7.png)\n\n## ImageFilter.SHAPEN\n```python\nimg.filter(ImageFilter.SHARPEN)\n\n# size: (3, 3),\n# scale: 16,\n# offset: 0,\n# kernel: (\n#     -2, -2, -2,\n#     -2, 32, -2,\n#     -2, -2, -2\n# )\n```\n ![shapen.png](https://qiita-image-store.s3.amazonaws.com/0/140075/822c679a-a385-e30e-a8c2-b1a34babfb44.png)\n\n## ImageFilter.CONTOUR\n```python\nimg.filter(ImageFilter.CONTOUR)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 255,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  8, -1,\n#     -1, -1, -1\n# )\n```\n\n![contour.png](https://qiita-image-store.s3.amazonaws.com/0/140075/cb2f0ad5-2228-e734-d66a-a23cf75f2481.png)\n\n## ImageFilter.EDGE_ENHANCE / ImageFilter.EDGE_ENHANCE_MORE\n```python\nimg.filter(ImageFilter.EDGE_ENHANCE)\n\n# size: (3, 3),\n# scale: 2,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1, 10, -1,\n#     -1, -1, -1\n# )\n\nimg.filter(ImageFilter.EDGE_ENHANCE_MORE)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  9, -1,\n#     -1, -1, -1\n# )\n```\n![edge.png](https://qiita-image-store.s3.amazonaws.com/0/140075/8c29ea69-fd34-2223-925f-8c29aa3926c8.png) ![edge_more.png](https://qiita-image-store.s3.amazonaws.com/0/140075/7e61015e-a304-658a-5072-453a1a30359d.png)\n\n## ImageFilter.EMBOSS\n```python\nimg.filter(ImageFilter.EMBOSS)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 128,\n# kernel: (\n#     -1,  0,  0,\n#     0,  1,  0,\n#     0,  0,  0\n# )\n```\n![emboss.png](https://qiita-image-store.s3.amazonaws.com/0/140075/0dc126e8-d56c-dc6f-f8d0-844cbc44c95f.png)\n\n## ImageFilter.FIND_EDGES\n```python\nimg.filter(ImageFilter.FIND_EDGES)\n\n# size: (3, 3),\n# scale: 1,\n# offset: 0,\n# kernel: (\n#     -1, -1, -1,\n#     -1,  8, -1,\n#     -1, -1, -1\n# )\n```\n![edge.png](https://qiita-image-store.s3.amazonaws.com/0/140075/0228b9ee-f94b-0b92-2165-a01017b9f4c2.png)\n\n## ImageFilter.SMOOTH / ImageFilter.SMOOTH_MORE\n```python\nimg.filter(ImageFilter.SMOOTH)\n# size: (3, 3),\n# scale: 13,\n# offset: 0,\n# kernel: (\n#     1,  1,  1,\n#     1,  5,  1,\n#     1,  1,  1\n# )\n# \n\nimg.filter(ImageFilter.SMOOTH_MORE)\n# size: (5, 5),\n# scale: 100,\n# offset: 0,\n# kernel: (\n#     1,  1,  1,  1,  1,\n#     1,  5,  5,  5,  1,\n#     1,  5, 44,  5,  1,\n#     1,  5,  5,  5,  1,\n#     1,  1,  1,  1,  1\n# )\n```\n![smooth.png](https://qiita-image-store.s3.amazonaws.com/0/140075/6bcf450c-4afc-e2a5-d5dc-0b965eb7ca11.png) ![smooth_more.png](https://qiita-image-store.s3.amazonaws.com/0/140075/260ca224-27cd-abb7-4815-0831816589f2.png)\n\n\n## \u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\n[\u30ac\u30a6\u30b7\u30a2\u30f3\u307c\u304b\u3057](\nhttps://ja.wikipedia.org/wiki/%E3%82%AC%E3%82%A6%E3%82%B7%E3%82%A2%E3%83%B3%E3%81%BC%E3%81%8B%E3%81%97)\u306b\u3088\u308a\u753b\u9762\u306e\u5e73\u6ed1\u5316\u3057\u307e\u3059\u3002\n\n```python\nimg.filter(ImageFilter.GaussianBlur(1.0))\nimg.filter(ImageFilter.GaussianBlur(1.5))\nimg.filter(ImageFilter.GaussianBlur(3.0))\n```\n![gb10.png](https://qiita-image-store.s3.amazonaws.com/0/140075/c51dc198-d788-1c9c-257e-e04120d6357b.png) ![gb15.png](https://qiita-image-store.s3.amazonaws.com/0/140075/d3fc4f79-c0b9-0b8f-ef18-c8fcd7d27fb2.png) ![gb30.png](https://qiita-image-store.s3.amazonaws.com/0/140075/8d07452c-7795-ba6b-5a35-54b5090272ce.png)\n\n## \u81a8\u5f35 / \u53ce\u7e2e\n`MaxFilter`\u306fDilation(\u81a8\u5f35)\u3001`MinFilter`\u306fErosion\uff08\u53ce\u7e2e\uff09\u3068\u547c\u3070\u308c\u308b\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n```python\nimg.filter(ImageFilter.MinFilter())\nimg.filter(ImageFilter.MaxFilter())\n```\n![min.png](https://qiita-image-store.s3.amazonaws.com/0/140075/829a9ad0-17b9-041a-7a2d-110ed71d6b08.png) ![max.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f02d1707-2fec-5399-4f4d-ffa4349121b4.png) \n\n#### \u53c2\u8003\n[\u81a8\u5f35\u30fb\u53ce\u7e2e\u30fb\u30aa\u30fc\u30d7\u30cb\u30f3\u30b0\u30fb\u30af\u30ed\u30fc\u30b8\u30f3\u30b0](http://imagingsolution.blog107.fc2.com/blog-entry-101.html)\n\n## \u30e1\u30c7\u30a3\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\n`MedianFilter`\u306f\u30ce\u30a4\u30ba\u9664\u53bb\u306b\u3088\u304f\u4f7f\u308f\u308c\u307e\u3059\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u306b\u6bd4\u3079\u8f2a\u90ed\u304c\u3042\u307e\u308a\u30dc\u30b1\u307e\u305b\u3093\u3002\n\n```python\nimg.filter(ImageFilter.MedianFilter())\n```\n\n![noise.png](https://qiita-image-store.s3.amazonaws.com/0/140075/3ca276a1-e075-3edc-e44e-bdd316d9b8c5.png) \u2192 ![median.png](https://qiita-image-store.s3.amazonaws.com/0/140075/cd1307b2-fb8b-dfc3-c463-6e79f3f0ef01.png)\n\n#### \u53c2\u8003\n[\u30ce\u30a4\u30ba\u9664\u53bb](https://jp.mathworks.com/help/images/noise-removal.html)\n\n## \u30e2\u30fc\u30c9\u30d5\u30a3\u30eb\u30bf\n\u6307\u5b9a\u3055\u308c\u305f\u30b5\u30a4\u30ba\u306e\u30dc\u30c3\u30af\u30b9\u3067\u6700\u3082\u983b\u7e41\u306b\u4f7f\u7528\u3055\u308c\u308b\u30d4\u30af\u30bb\u30eb\u5024\u3092\u9078\u629e\u3057\u307e\u3059\u30021\u56de\u307e\u305f\u306f2\u56de\u3060\u3051\u767a\u751f\u3059\u308b\u30d4\u30af\u30bb\u30eb\u5024\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002\n~~\u4f7f\u3044\u3069\u3053\u308d\u4e0d\u660e\u3002~~[Pillow\u306eModeFilter\u3092\u4f7f\u3063\u3066\u5199\u771f\u3092\u7d75\u753b\u8abf\u306b\u3059\u308b](http://qiita.com/pashango2/items/8c7ce64c479de86ed718)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```python\nimg.filter(ImageFilter.ModeFilter(5))\n```\n![rank.png](https://qiita-image-store.s3.amazonaws.com/0/140075/7fb204a7-5c04-9b08-b173-f4695c4ac4c7.png)\n\n\n# ImageEnhance\u30e2\u30b8\u30e5\u30fc\u30eb\n## \u30ab\u30e9\u30fc\u30d0\u30e9\u30f3\u30b9\u8abf\u6574\n```python\nenhancer = ImageEnhance.Color(img)\nenhancer.enhance(0.0)    # \u767d\u9ed2\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n```\n![col0.png](https://qiita-image-store.s3.amazonaws.com/0/140075/a42bd9fd-b0e1-8e5a-c286-761e05d88062.png) ![col05.png](https://qiita-image-store.s3.amazonaws.com/0/140075/d430bf9a-fde2-d1c7-5279-d862ba801ddb.png) ![sample.png](https://qiita-image-store.s3.amazonaws.com/0/140075/511c86ce-9bc7-be06-e7bb-2018c58d486c.png)\n\n\n\n\n## \u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u8abf\u6574\n```python\nenhancer = ImageEnhance.Contrast(img)\nenhancer.enhance(0.0)    # \u7070\u8272\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n```\n![con0.png](https://qiita-image-store.s3.amazonaws.com/0/140075/e592d305-83f1-ac48-90a2-648d54df2c91.png) ![con5.png](https://qiita-image-store.s3.amazonaws.com/0/140075/e2bf3b93-ff4e-44ba-03ae-5d0973d382d5.png) ![sample.png](https://qiita-image-store.s3.amazonaws.com/0/140075/511c86ce-9bc7-be06-e7bb-2018c58d486c.png)\n\n\n## \u660e\u308b\u3055\u8abf\u6574\n```python\nenhancer = ImageEnhance.Brightness(img)\nenhancer.enhance(0.0)    # \u9ed2\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\n```\n\n![br0.png](https://qiita-image-store.s3.amazonaws.com/0/140075/7e42032b-2af8-0ef7-3400-8d4150a31203.png) ![br5.png](https://qiita-image-store.s3.amazonaws.com/0/140075/259a4975-227e-fbf6-c16e-9f49a3ef9888.png)  ![sample.png](https://qiita-image-store.s3.amazonaws.com/0/140075/511c86ce-9bc7-be06-e7bb-2018c58d486c.png)\n\n\n\n## \u30b7\u30e3\u30fc\u30d7\u30cd\u30b9\u8abf\u6574\n```python\nenhancer = ImageEnhance.Sharpness(img)\nenhancer.enhance(0.0)    # \u30dc\u30b1\u753b\u50cf\nenhancer.enhance(0.5)    #  \u2195\nenhancer.enhance(1.0)    # \u5143\u753b\u50cf\nenhancer.enhance(1.5)    #  \u2195\nenhancer.enhance(2.0)    # \u30b7\u30e3\u30fc\u30d7\u753b\u50cf\n```\n![sha0.png](https://qiita-image-store.s3.amazonaws.com/0/140075/9863e214-719c-fd29-5e6e-8ff09c3c2b04.png)  ![sample.png](https://qiita-image-store.s3.amazonaws.com/0/140075/511c86ce-9bc7-be06-e7bb-2018c58d486c.png) ![sample.png](https://qiita-image-store.s3.amazonaws.com/0/140075/511c86ce-9bc7-be06-e7bb-2018c58d486c.png)\n\n# ImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\n`ImageMath`\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u30d4\u30af\u30bb\u30eb\u540c\u58eb\u306e\u6f14\u7b97\u3092\u3042\u305f\u304b\u3082\u6570\u5024\u6f14\u7b97\u306e\u3088\u3046\u306b\u66f8\u3051\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\u4f7f\u3044\u3053\u306a\u305b\u3070\u8907\u96d1\u306a\u753b\u50cf\u51e6\u7406\u3082\u7c21\u5358\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n- \u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u306e\u307f\u6f14\u7b97\u53ef\u80fd\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9\u306fImage.split\u3067\u5206\u5272\u3057\u3066\u304b\u3089\u51e6\u7406\n- float\u3067\u6f14\u7b97\u3059\u308b\u6642\u306e\u5024\u306e\u7bc4\u56f2\u306f0.0\uff5e1.0\u3067\u306f\u306a\u304f0.0\uff5e255.0\n- \u6f14\u7b97\u4e2d\u306eImage\u306fmode\u304c\"I\"(int)\u3001\u307e\u305f\u306f\"F\"(float)\u306b\u306a\u308b\u3001\u6700\u5f8c\u306bmode\u3092\"L\"\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\n- \u5404\u7a2e\u6f14\u7b97(+,-,\\*,/,*\\*,%)\u306f\u30d4\u30af\u30bb\u30eb\u51e6\u7406\u3067\u306f\u306a\u304f\u30a4\u30e1\u30fc\u30b8\u307e\u308b\u3054\u3068\u306e\u6f14\u7b97\n- \u6f14\u7b97\u306f\u30d4\u30af\u30bb\u30eb\u3054\u3068\u3067\u306f\u306a\u304fImage\u3054\u3068\u306b\u884c\u308f\u308c\u3001\u6f14\u7b97\u3054\u3068\u306bImage\u304c\u751f\u6210\u3055\u308c\u308b\n- \u6f14\u7b97\u306e\u304b\u308f\u308a\u306b`lambda`\u306a\u3069\u306e\u30b3\u30fc\u30eb\u53ef\u80fd\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u6e21\u305b\u308b\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u3057\u304b\u51e6\u7406\u3067\u304d\u306a\u3044\u305f\u3081\u3001RGB\u306a\u3069\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u5909\u63db\u3059\u308b\u3068\u304d\u306b\u9762\u5012\u306a\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u7528\u610f\u3057\u3066\u304a\u304f\u3068\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\ndef _blend_f(img1, img2, func):\n    blend_eval = \"convert(func(float(a), float(b)), 'L')\"\n    bands = [\n        ImageMath.eval(\n            blend_eval,\n            a=a,\n            b=b,\n            func=func\n        )\n        for a, b in zip(img1.split(), img2.split())\n    ]\n    return Image.merge(img1.mode, bands)\n```\n\n#### \u53c2\u8003\n[PIL/Pillow\u3067\u9ad8\u901f\u306bPhotoShop\u306a\u3069\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b](http://qiita.com/pashango2/items/3c99489ebccd468ab454)\n\n\n## \u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\n```python\ndef _over_lay(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2 * (a + b - a * b / 255) - 255\n    return _cl * (a < 128) + _ch * (a >= 128)\n\n_blend_f(img, effect_img, _over_lay)\n```\n![overlay.png](https://qiita-image-store.s3.amazonaws.com/0/140075/570a1743-0fcc-4aa8-4a76-a469e6b00abf.png)\n\n## \u30bd\u30d5\u30c8\u30e9\u30a4\u30c8\n```python\ndef _soft_light(a, b):\n    _cl = (a / 255) ** ((255 - b) / 128) * 255\n    _ch = (a / 255) ** (128 / b) * 255\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img, effect_img, _soft_light)\n```\n![softlight.png](https://qiita-image-store.s3.amazonaws.com/0/140075/2572e2bb-445d-f0dc-ee6d-dd533337bb4b.png)\n\n## \u30cf\u30fc\u30c9\u30e9\u30a4\u30c8\n```python\ndef _hard_light(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2.0 * (a + b - a * b / 255.0) - 255.0\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img, effect_img, _hard_light)\n```\n![hardlight.png](https://qiita-image-store.s3.amazonaws.com/0/140075/a01426b8-a2f7-ec13-2c89-21d585f204dc.png)\n\n# Photoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u4f7f\u3046\n\nPhotoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u300cImage4Layer\u300d\u3068\u3044\u3046\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/pashango2/Image4Layer\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u3067\u7c21\u5358\u306b\u884c\u306a\u3048\u307e\u3059\u3001\u5b9f\u884c\u306b\u306fpillow(PIL)\u304c\u3042\u3089\u304b\u3058\u3081\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n$pip install image4layer\n```\n\n\u4f7f\u3044\u65b9\u306f\u7c21\u5358\u3067\u3059\u3001color-dodge\u30e2\u30fc\u30c9\u3067\u5408\u6210\u3059\u308b\u4f8b\u3067\u3059\u3002\n\n```python\nfrom PIL import Image\nfrom image4layer import Image4Layer\n\nsource = Image.open(\"ducky.png\")\nbackdrop = Image.open(\"backdrop.png\")\n\nImage4Layer.color_dodge(backdrop, source)\n```\n\n![color_dodge.png](https://qiita-image-store.s3.amazonaws.com/0/140075/eaefde56-a08a-01ff-4777-14bc7d78d0c1.png)\n\n\n# GIF\u306e\u66f8\u304d\u8fbc\u307f\n\u8907\u6570\u306eGIF\uff08GIF\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\uff09\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python\nim.save(out, save_all=True, append_images=[im1, im2, ...])\n```\n\n\u7c21\u5358\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3GIF\u306e\u4f5c\u6210\u4f8b\u3067\u3059\u3002\n\n```\nimgs = []\nfor i in range(100):\n    imgs.append(img.point(lambda x: x * (1.0 - (i/100))))\n    \nimg.save(\"anime.gif\", save_all=True, append_images=imgs, loop=True)\n```\n\n![animation.gif](https://qiita-image-store.s3.amazonaws.com/0/140075/c4e3b1be-4f1e-536c-99a7-e27d33d5aac1.gif)\n\n\n#### \u53c2\u8003\nhttp://pillow.readthedocs.io/en/4.0.x/handbook/image-file-formats.html?highlight=seek#saving\n\n# QImagae\u3078\u306e\u5909\u63db\n\nPyQt\u306eQImage\u3078\u306e\u5909\u63db\u306f`ImageQt`\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```python\nImageQt.ImageQt(img)\n```\n\n\u306a\u304a\u3001PySide\u3092\u4f7f\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u65b9\u6cd5\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```python\nfrom PySide.QtGui import *\nimport io\n\nimg_buffer = io.BytesIO()\nbase.save(img_buffer, \"BMP\")\nqimage = QImage()\nqimage.loadFromData(img_buffer.getvalue(), \"BMP\")\n```\n\n\u7121\u99c4\u306a\u51e6\u7406\u306a\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001RGB\u2192BGR\u5909\u63db\u3084Y\u8ef8\u306e\u53cd\u8ee2\u554f\u984c\u306a\u3069\u9762\u5012\u306a\u90e8\u5206\u3092Pillow/PySide\u304c\u3084\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n#### \u53c2\u8003\n[PIL.Image \u3068 PyQt4.QtGui.QImage\u306e\u76f8\u4e92\u5909\u63db](http://doloopwhile.hatenablog.com/entry/20100305/1267782841)\n\n# PSNR\n\nPSNR\u30682\u3064\u306e\u753b\u50cf\u3092\u6bd4\u8f03\u3059\u308b\u6307\u6a19\u5024\u3067\u3059\u3002\n\u73fe\u5728\u3067\u306fPSNR\u3088\u308a\u3082SSIM\u304c\u826f\u3044\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u304cPSNR\u3082\u3088\u304f\u4f7f\u7528\u3055\u308c\u307e\u3059\u3002\n\u5024\u304c\u9ad8\u3044\u307b\u3046\u304c\u753b\u8cea\u304c\u826f\u304f\u3001\u5727\u7e2e\u306e\u52a3\u5316\u5ea6\u3092\u6e2c\u308b\u969b\u306bPSNR\u304c30\uff5e50\u306e\u9593\u304c\u6a19\u6e96\u7684\u306a\u54c1\u8cea\u3068\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u8a08\u7b97\u5f0f\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3001MSE\u306f\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee\u3067\u3001MAX\u306f255\u3067\u3059\u3002\n\n```math\nPSNR = 10 \\times \\log 10\\frac{MAX^2}{MSE}\n```\n\nPSNR\u3092\u6c42\u3081\u308b\u95a2\u6570\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3001`ImageStat`\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u4e8b\u306b\u3088\u308a\u9ad8\u901f\u306bPSNR\u3092\u6c42\u3081\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python\ndef psnr(img1, img2):\n    diff_img = ImageChops.difference(img1, img2)\n    stat = ImageStat.Stat(diff_img)\n    mse = sum(stat.sum2) / len(stat.count) / stat.count[0]\n    return 10 * math.log10(255 ** 2 / mse)\n```\n\n\u306a\u304a\u3001SSIM\u306fPIL/Pillow\u3067\u9ad8\u901f\u306b\u6c42\u3081\u308b\u306e\u306f\u73fe\u72b6\u3067\u306f\u96e3\u3057\u3044\u3067\u3059\u3001[pyssim](https://github.com/jterrace/pyssim)\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u304b\u3001OpenCV\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n#### \u53c2\u8003\n[\u30d4\u30fc\u30af\u4fe1\u53f7\u5bfe\u96d1\u97f3\u6bd4 - Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%94%E3%83%BC%E3%82%AF%E4%BF%A1%E5%8F%B7%E5%AF%BE%E9%9B%91%E9%9F%B3%E6%AF%94)\n\n# \u7dda\u753b\u62bd\u51fa\n\n```python\ngray = img.convert(\"L\")\ngray2 = gray.filter(ImageFilter.MaxFilter(5))\nsenga_inv = ImageChops.difference(gray, gray2)\nsenga = ImageOps.invert(senga_inv)\n```\n\n![senga.png](https://qiita-image-store.s3.amazonaws.com/0/140075/695b4d30-5eb9-5b38-1dd6-7426ad42ad85.png)\n\n[\u3053\u3061\u3089](http://www.mathgram.xyz/entry/cv/contour)\u306e\u65b9\u6cd5\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3001\u975e\u5e38\u306b\u7d20\u6674\u3089\u3057\u3044\u3067\u3059\u3002\n", "tags": ["Python", "pillow", "PIL", "\u753b\u50cf\u51e6\u7406"]}