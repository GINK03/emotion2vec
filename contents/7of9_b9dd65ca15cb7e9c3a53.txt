{"context": "\n\u52d5\u4f5c\u74b0\u5883\nC++ Builder XE4\n\n\n\nC\u5b9f\u88c5\u306e\u8a08\u7b97\u7528\u30bd\u30fc\u30b9\u3068\u30d8\u30c3\u30c0\u304c\u3042\u308b\n\u30de\u30a4\u30b3\u30f3\u3068Win\u3067\u4f7f\u3046\u5171\u901a\u5b9f\u88c5\n\u30d5\u30a1\u30a4\u30eb\u30b9\u30b3\u30fc\u30d7static \u30b5\u30d6\u95a2\u6570\u3067\u306e\u8a08\u7b97\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3057\u305f\u3044\nXE4\u306e\u30bd\u30d5\u30c8\u3092Win7\u3067\u5b9f\u884c\u3059\u308b\u30681msec\u4ee5\u4e0b\u3068\u306a\u308b\n\u30bd\u30fc\u30b9\u306b\u4f59\u5206\u306a\u30b3\u30fc\u30c9\u3092\u6975\u529b\u8ffd\u52a0\u3057\u305f\u304f\u306a\u3044\n\n\u6848\n\n\u5916\u90e8\u30bd\u30fc\u30b9\u306b\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\n\u8a08\u6e2c\u5bfe\u8c61\u30bd\u30fc\u30b9\u306b\u306f\u5916\u90e8\u95a2\u6570\u306e\u30b3\u30fc\u30eb\u6587\u3092\u8ffd\u52a0\u3059\u308b\n\n\ntriggerStart()\ntriggerStop()\n\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u30c8\u30ea\u30ac\u6a5f\u80fd\u3092\u4f7f\u3046\u30a4\u30e1\u30fc\u30b8\nTStringList()\u3067\u305d\u306e\u6642\u70b9\u306e\u6642\u523b(usec\u542b\u3080)\u3092\u4fdd\u6301\n\u5bfe\u8c61\u30bd\u30fc\u30b9\u306b\u306fCUDA\u7528\u306eCHECK\u30de\u30af\u30ed\u3068\u540c\u7b49\u6a5f\u80fd\u3092\u4f7f\u3063\u3066triggerStart()\u3068triggerStop()\u306e\u51e6\u7406\u3092\u306f\u3055\u3080 > \u95a2\u9023\n\n\u5bfe\u8c61\u95a2\u6570\u306e\u53d6\u66ff\u3048\u304c\u697d\u306b\u306a\u308b\n\n\n\u8a08\u6e2c\u7d50\u679c\u3092R\u3067\u30b0\u30e9\u30d5\u5316\n\n\n\u5fc5\u8981\u3067\u3042\u308c\u3070\n\n\nstart, stop\u306e\u5bfe\u5fdc\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u63a2\u3059?\n\n\n\u8a72\u5f53\u306e\u95a2\u6570\u3092\u591a\u91cd\u56de\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u3092\u691c\u8a0e\n\n\nusec\u6642\u523b\u3092\u4fdd\u6301\u3067\u304d\u306a\u3044\u5834\u5408\u306e\u4ee3\u6848\n\u3069\u306e\u30b5\u30d6\u95a2\u6570\u304c\u91cd\u3044\u304b\u63a2\u3059\u305f\u3081\u306b\u4f7f\u3046\n\n\n\n\u306a\u3069\u306a\u3069\n\u95a2\u9023 http://qiita.com/7of9/items/1dd75f14c507e80c7a89\n\u95a2\u9023 http://stackoverflow.com/questions/6030586/calculating-the-speed-of-routines\n\u95a2\u9023 Sine function using Taylor expansion (C Programming)\n\u95a2\u9023 http://qiita.com/7of9/items/a59f79b3c38ef3e178ed\n\ncode v0.1\n5\u5206\u3067\u4f5c\u3063\u305f\u9069\u5f53\u30b3\u30fc\u30c9\n\u95a2\u9023 Sine function using Taylor expansion (C Programming)\n\u306eTaylor\u5c55\u958b\u306esine()\u8a08\u7b97\u30921000\u56de\u307e\u308f\u3057\u3066\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3002\n\nUnit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:    // IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    TButton *Button1;\n    void __fastcall Button1Click(TObject *Sender);\nprivate:    // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:     // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n    void __fastcall OffTrigger(String funcname);\n    void __fastcall OnTrigger(String funcname);\n\n    __fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n\n\n\nUnit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include <math.h>\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n    : TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\n\nlong int factorial(int m)\n{\n    if (m==0 || m==1) return (1);\n    else      return (m*factorial(m-1));\n}\ndouble power(double x,int n)\n{\n    double val=1;\n    int i;\n    for (i=1;i<=n;i++)\n    {\n        val*=x;\n    }\n    return val;\n}\n\ndouble sine(double x)\n{\n    int n;\n    double val=0;\n    for (n=0;n<8;n++)\n    {\n        double p = power(-1,n);\n        double px = power(x,2*n+1);\n        long fac = factorial(2*n+1);\n        val += p * px / fac;\n    }\n    return val;\n}\n\n//---------------------------------------------------------------------------\n\n#define CHECK(call,name)                              \\\n{                                                     \\\n    OnTrigger(name);                                  \\\n    call                                              \\\n    OffTrigger(name);                                 \\\n}\n\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::OffTrigger(String funcname)\n{\n    // check start time\n    String msg = L\"Stop[\" + funcname + L\"()]:\" + Now().FormatString(L\"hh:nn:ss.mm:ss.zzz\");\n    OutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::OnTrigger(String funcname)\n{\n    // check end time\n    String msg = L\"Start[\" + funcname + L\"()]:\" + Now().FormatString(L\"hh:nn:ss.mm:ss.zzz\");\n    OutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n    double x;\n    double deg2pi = acos(-1.0) / 180.0;\n\n\n    CHECK(\n    for(int loop = 0; loop < 1000; loop++) {\n        x = sine(loop * deg2pi);\n        int nop=1;\n    }\n    , L\"sine\"\n    )\n\n    //\n}\n//---------------------------------------------------------------------------\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: Start[sine()]:16:41:02.10:02.126 \u30d7\u30ed\u30bb\u30b9 Project1.exe (3708)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: Stop[sine()]:16:41:02.10:02.127 \u30d7\u30ed\u30bb\u30b9 Project1.exe (3708)\n\n\n1000\u56de\u306esine()\u306b1msec\u5f31\u304b\u304b\u308b (\u5206\u89e3\u3057\u304d\u308c\u3066\u306a\u3044)\u3002\nTODO: usec\u307e\u3067\u306e\u8868\u793a\nNow()\u304b\u3089usec\u3092\u8a08\u7b97\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u305f\u3089\u3001\u305d\u308c\u81ea\u4f53\u30672msec\u7a0b\u5ea6\u5897\u3048\u305f\u3002\u3053\u308c\u306f\u3084\u3081\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3002\nOnTrigger(), OffTrigger()\u306e\u51e6\u7406\u306f\u5358\u7d14\u306b\u5024\u3092\u6e21\u3059\u3060\u3051\u3001\u306a\u3069\u306e\u8efd\u3044\u51e6\u7406\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nTODO: \u5916\u90e8\u95a2\u6570\u5316\u3002\u4eca\u5f8c10\u5e74\u304f\u3089\u3044\u4f7f\u3044\u305f\u3044\u3002\n\nv0.2 > QueryPerformanceCounter()\u4f7f\u7528\u7248\n\u8a08\u6e2c\u90e8\u5206\u3060\u3051\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u3002\n\nUnit1.cpp\nstatic _LARGE_INTEGER Freq;\nstatic _LARGE_INTEGER StartCount;\nstatic _LARGE_INTEGER StopCount;\ndouble timing_sec;\n\nvoid __fastcall TForm1::OffTrigger(String funcname)\n{\n    QueryPerformanceCounter(&StopCount);\n\n    timing_sec = (double)(StopCount.QuadPart - StartCount.QuadPart) / Freq.QuadPart;\n    double timing_msec = timing_sec * 1000;\n    int nop=1;\n\n    String msg = L\"[\" + funcname + String().sprintf(L\"] takes %.3f msec\", timing_msec);\n    OutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::OnTrigger(String funcname)\n{\n    QueryPerformanceFrequency(&Freq);\n    QueryPerformanceCounter(&StartCount);\n}\n\n\n\n\u7d50\u679c\u4f8b\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.779 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.915 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.749 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.560 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\n\n\u30eb\u30fc\u30d7\u56de\u6570\u309210\u500d\u306b\u3057\u305f\u6642\u306b\u3082\u7dda\u5f62\u7684\u306b10\u500d\u306e\u6642\u9593\u306b\u306a\u308b\u306e\u3067\u3001\u3042\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n_LARGE_INTEGER\u95a2\u9023 http://birdhouse.hateblo.jp/entry/2016/02/23/171734\nQueryPerformanceFrequency\u95a2\u9023\nhttp://stackoverflow.com/questions/6030586/calculating-the-speed-of-routines\n\ncode v0.3 > \u8907\u6570\u306e\u7d50\u679c\u3092\u683c\u7d0d\n\u8907\u6570\u306e\u7d50\u679c\u3092proc_msec[]\u306b\u683c\u7d0d\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\u305f\u3060\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u5834\u5408\u3001funcA\u3068funcB\u3092\u540c\u6642\u306b\u306f\u6e2c\u5b9a\u3067\u304d\u306a\u3044 (\u6e2c\u5b9a\u3059\u308b\u3068\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306b\u3088\u308b\u8aa4\u5dee\u304cfuncA\u306b\u751f\u3058\u308b)\u3002\nfuncB, funcC, funcD\u306e\u51e6\u7406\u901f\u5ea6\u6bd4\u8f03\u306b\u306f\u4f7f\u3048\u305d\u3046\u3002\nvoid funcA() {\n   funcB();\n   funcC();\n   funcD();\n}\n\n\nUtni1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:    // IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n    TButton *Button1;\n    void __fastcall Button1Click(TObject *Sender);\nprivate:    // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:     // \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n//  void __fastcall OffTrigger(String funcname);\n//  void __fastcall OnTrigger(String funcname);\n\n    __fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n\n\n\nUnit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include <math.h>\n#include <stdint.h>\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n    : TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\nvoid __fastcall OnTrigger(String funcname);\nvoid __fastcall OffTrigger(String funcname);\n\n#define CHECK(call,name)                              \\\n{                                                     \\\n    OnTrigger(name);                                  \\\n    call                                              \\\n    OffTrigger(name);                                 \\\n}\n//---------------------------------------------------------------------------\n\nlong int factorial(int m)\n{\n    if (m==0 || m==1) return (1);\n    else      return (m*factorial(m-1));\n}\ndouble power(double x,int n)\n{\n    double val=1;\n    int i;\n    for (i=1;i<=n;i++)\n    {\n        val*=x;\n    }\n    return val;\n}\n\ndouble sine(double x)\n{\n    int n;\n    double val=0;\n    for (n=0;n<8;n++)\n    {\nCHECK(\n        double p = power(-1,n);\n        double px = power(x,2*n+1);\n        long fac = factorial(2*n+1);\n        val += p * px / fac;\n, L\"power\"\n)\n    }\n    return val;\n}\n\n//---------------------------------------------------------------------------\n\nstatic _LARGE_INTEGER Freq;\nstatic _LARGE_INTEGER StartCount;\nstatic _LARGE_INTEGER StopCount;\nstatic int pos = -1;\n#define MAX_NUM (10)\nstatic double proc_msec[MAX_NUM] = {0.0};\nstatic String funcnames[MAX_NUM];\n\nvoid __fastcall OnTrigger(String funcname)\n{\n    QueryPerformanceFrequency(&Freq);\n    QueryPerformanceCounter(&StartCount);\n}\n\nvoid __fastcall OffTrigger(String funcname)\n{\n    QueryPerformanceCounter(&StopCount);\n\n    double timing_sec = (double)(StopCount.QuadPart - StartCount.QuadPart) / Freq.QuadPart;\n    double timing_msec = timing_sec * 1000;\n    pos++;\n    if (pos >= MAX_NUM) {\n        return; // overflow\n    }\n    proc_msec[pos] = timing_msec;\n    funcnames[pos] = funcname;\n}\n\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n    double x;\n    double deg2pi = acos(-1.0) / 180.0;\n\n\n//CHECK(\n    for(int loop = 0; loop < 3000; loop++) {\n        x = sine(loop * deg2pi);\n        int nop=1;\n    }\n//, L\"sine\"\n//)\n\n    int nop = 1;\n\n    //\n}\n//---------------------------------------------------------------------------\n\n\n\n\n\u4e0a\u8a18\u306fmsec\u306e\u5024\u3060\u304c\u3001\u591a\u5c11\u3070\u3089\u3064\u304d\u304c\u3042\u308b\u306e\u306f\u5426\u3081\u306a\u3044\u3002\n```txt:\u52d5\u4f5c\u74b0\u5883\nC++ Builder XE4\n```\n\n- C\u5b9f\u88c5\u306e\u8a08\u7b97\u7528\u30bd\u30fc\u30b9\u3068\u30d8\u30c3\u30c0\u304c\u3042\u308b\n- \u30de\u30a4\u30b3\u30f3\u3068Win\u3067\u4f7f\u3046\u5171\u901a\u5b9f\u88c5\n- \u30d5\u30a1\u30a4\u30eb\u30b9\u30b3\u30fc\u30d7static \u30b5\u30d6\u95a2\u6570\u3067\u306e\u8a08\u7b97\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\u3057\u305f\u3044\n- XE4\u306e\u30bd\u30d5\u30c8\u3092Win7\u3067\u5b9f\u884c\u3059\u308b\u30681msec\u4ee5\u4e0b\u3068\u306a\u308b\n- \u30bd\u30fc\u30b9\u306b\u4f59\u5206\u306a\u30b3\u30fc\u30c9\u3092\u6975\u529b\u8ffd\u52a0\u3057\u305f\u304f\u306a\u3044\n\n\u6848\n\n- \u5916\u90e8\u30bd\u30fc\u30b9\u306b\u5b9f\u88c5\u3057\u305f\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\n- \u8a08\u6e2c\u5bfe\u8c61\u30bd\u30fc\u30b9\u306b\u306f\u5916\u90e8\u95a2\u6570\u306e\u30b3\u30fc\u30eb\u6587\u3092\u8ffd\u52a0\u3059\u308b\n  - triggerStart()\n  - triggerStop()\n  - \u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u30c8\u30ea\u30ac\u6a5f\u80fd\u3092\u4f7f\u3046\u30a4\u30e1\u30fc\u30b8\n  - TStringList()\u3067\u305d\u306e\u6642\u70b9\u306e\u6642\u523b(usec\u542b\u3080)\u3092\u4fdd\u6301\n  - \u5bfe\u8c61\u30bd\u30fc\u30b9\u306b\u306fCUDA\u7528\u306eCHECK\u30de\u30af\u30ed\u3068\u540c\u7b49\u6a5f\u80fd\u3092\u4f7f\u3063\u3066triggerStart()\u3068triggerStop()\u306e\u51e6\u7406\u3092\u306f\u3055\u3080 > [\u95a2\u9023](http://qiita.com/7of9/items/bd7752e4779c088c67e0)\n     - \u5bfe\u8c61\u95a2\u6570\u306e\u53d6\u66ff\u3048\u304c\u697d\u306b\u306a\u308b\n  - \u8a08\u6e2c\u7d50\u679c\u3092R\u3067\u30b0\u30e9\u30d5\u5316\n     - \u5fc5\u8981\u3067\u3042\u308c\u3070\n  - start, stop\u306e\u5bfe\u5fdc\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u63a2\u3059?\n- \u8a72\u5f53\u306e\u95a2\u6570\u3092\u591a\u91cd\u56de\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u3092\u691c\u8a0e\n  - usec\u6642\u523b\u3092\u4fdd\u6301\u3067\u304d\u306a\u3044\u5834\u5408\u306e\u4ee3\u6848\n  - \u3069\u306e\u30b5\u30d6\u95a2\u6570\u304c\u91cd\u3044\u304b\u63a2\u3059\u305f\u3081\u306b\u4f7f\u3046\n\n\u306a\u3069\u306a\u3069\n\n\u95a2\u9023 http://qiita.com/7of9/items/1dd75f14c507e80c7a89\n\u95a2\u9023 http://stackoverflow.com/questions/6030586/calculating-the-speed-of-routines\n\u95a2\u9023 [Sine function using Taylor expansion (C Programming)](http://stackoverflow.com/questions/8647126/sine-function-using-taylor-expansion-c-programming)\n\u95a2\u9023 http://qiita.com/7of9/items/a59f79b3c38ef3e178ed\n\n\n### code v0.1\n\n5\u5206\u3067\u4f5c\u3063\u305f\u9069\u5f53\u30b3\u30fc\u30c9\n\n\u95a2\u9023 [Sine function using Taylor expansion (C Programming)](http://stackoverflow.com/questions/8647126/sine-function-using-taylor-expansion-c-programming)\n\u306eTaylor\u5c55\u958b\u306esine()\u8a08\u7b97\u30921000\u56de\u307e\u308f\u3057\u3066\u8a08\u6e2c\u3057\u3066\u307f\u305f\u3002\n\n```Unit1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:\t// IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\tTButton *Button1;\n\tvoid __fastcall Button1Click(TObject *Sender);\nprivate:\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:\t\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n\tvoid __fastcall OffTrigger(String funcname);\n\tvoid __fastcall OnTrigger(String funcname);\n\n\t__fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n```\n \n```Unit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include <math.h>\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n\t: TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\n\nlong int factorial(int m)\n{\n\tif (m==0 || m==1) return (1);\n\telse      return (m*factorial(m-1));\n}\ndouble power(double x,int n)\n{\n\tdouble val=1;\n\tint i;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tval*=x;\n\t}\n\treturn val;\n}\n\ndouble sine(double x)\n{\n\tint n;\n\tdouble val=0;\n\tfor (n=0;n<8;n++)\n\t{\n\t\tdouble p = power(-1,n);\n\t\tdouble px = power(x,2*n+1);\n\t\tlong fac = factorial(2*n+1);\n\t\tval += p * px / fac;\n\t}\n\treturn val;\n}\n\n//---------------------------------------------------------------------------\n\n#define CHECK(call,name)                              \\\n{                                                     \\\n\tOnTrigger(name);                                  \\\n\tcall                                              \\\n\tOffTrigger(name);                                 \\\n}\n\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::OffTrigger(String funcname)\n{\n\t// check start time\n\tString msg = L\"Stop[\" + funcname + L\"()]:\" + Now().FormatString(L\"hh:nn:ss.mm:ss.zzz\");\n\tOutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::OnTrigger(String funcname)\n{\n\t// check end time\n\tString msg = L\"Start[\" + funcname + L\"()]:\" + Now().FormatString(L\"hh:nn:ss.mm:ss.zzz\");\n\tOutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n\tdouble x;\n\tdouble deg2pi = acos(-1.0) / 180.0;\n\n\n\tCHECK(\n\tfor(int loop = 0; loop < 1000; loop++) {\n\t\tx = sine(loop * deg2pi);\n\t\tint nop=1;\n\t}\n\t, L\"sine\"\n\t)\n\n\t//\n}\n//---------------------------------------------------------------------------\n```\n\n```txt:\u5b9f\u884c\u7d50\u679c\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: Start[sine()]:16:41:02.10:02.126 \u30d7\u30ed\u30bb\u30b9 Project1.exe (3708)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: Stop[sine()]:16:41:02.10:02.127 \u30d7\u30ed\u30bb\u30b9 Project1.exe (3708)\n```\n\n1000\u56de\u306esine()\u306b1msec\u5f31\u304b\u304b\u308b (\u5206\u89e3\u3057\u304d\u308c\u3066\u306a\u3044)\u3002\n\n~~TODO: usec\u307e\u3067\u306e\u8868\u793a~~\nNow()\u304b\u3089usec\u3092\u8a08\u7b97\u3059\u308b\u51e6\u7406\u3092\u5165\u308c\u305f\u3089\u3001\u305d\u308c\u81ea\u4f53\u30672msec\u7a0b\u5ea6\u5897\u3048\u305f\u3002\u3053\u308c\u306f\u3084\u3081\u305f\u65b9\u304c\u3088\u3055\u305d\u3046\u3002\n\nOnTrigger(), OffTrigger()\u306e\u51e6\u7406\u306f\u5358\u7d14\u306b\u5024\u3092\u6e21\u3059\u3060\u3051\u3001\u306a\u3069\u306e\u8efd\u3044\u51e6\u7406\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nTODO: \u5916\u90e8\u95a2\u6570\u5316\u3002\u4eca\u5f8c10\u5e74\u304f\u3089\u3044\u4f7f\u3044\u305f\u3044\u3002\n\n## v0.2 > QueryPerformanceCounter()\u4f7f\u7528\u7248\n\n\u8a08\u6e2c\u90e8\u5206\u3060\u3051\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u305f\u3002\n\n```Unit1.cpp\nstatic _LARGE_INTEGER Freq;\nstatic _LARGE_INTEGER StartCount;\nstatic _LARGE_INTEGER StopCount;\ndouble timing_sec;\n\nvoid __fastcall TForm1::OffTrigger(String funcname)\n{\n\tQueryPerformanceCounter(&StopCount);\n\n\ttiming_sec = (double)(StopCount.QuadPart - StartCount.QuadPart) / Freq.QuadPart;\n\tdouble timing_msec = timing_sec * 1000;\n\tint nop=1;\n\n\tString msg = L\"[\" + funcname + String().sprintf(L\"] takes %.3f msec\", timing_msec);\n    OutputDebugString(msg.c_str());\n}\n\nvoid __fastcall TForm1::OnTrigger(String funcname)\n{\n\tQueryPerformanceFrequency(&Freq);\n\tQueryPerformanceCounter(&StartCount);\n}\n```\n\n```txt:\u7d50\u679c\u4f8b\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.779 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.915 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.749 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n\u30c7\u30d0\u30c3\u30b0\u51fa\u529b: [sine] takes 1.560 msec \u30d7\u30ed\u30bb\u30b9 Project1.exe (5976)\n```\n\n\u30eb\u30fc\u30d7\u56de\u6570\u309210\u500d\u306b\u3057\u305f\u6642\u306b\u3082\u7dda\u5f62\u7684\u306b10\u500d\u306e\u6642\u9593\u306b\u306a\u308b\u306e\u3067\u3001\u3042\u3063\u3066\u3044\u308b\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3002\n\n_LARGE_INTEGER\u95a2\u9023 http://birdhouse.hateblo.jp/entry/2016/02/23/171734\n \nQueryPerformanceFrequency\u95a2\u9023\nhttp://stackoverflow.com/questions/6030586/calculating-the-speed-of-routines\n\n\n### code v0.3 > \u8907\u6570\u306e\u7d50\u679c\u3092\u683c\u7d0d\n\n\u8907\u6570\u306e\u7d50\u679c\u3092`proc_msec[]`\u306b\u683c\u7d0d\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\n\u305f\u3060\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306e\u5834\u5408\u3001funcA\u3068funcB\u3092\u540c\u6642\u306b\u306f\u6e2c\u5b9a\u3067\u304d\u306a\u3044 (\u6e2c\u5b9a\u3059\u308b\u3068\u30aa\u30fc\u30d0\u30d8\u30c3\u30c9\u306b\u3088\u308b\u8aa4\u5dee\u304cfuncA\u306b\u751f\u3058\u308b)\u3002\n\nfuncB, funcC, funcD\u306e\u51e6\u7406\u901f\u5ea6\u6bd4\u8f03\u306b\u306f\u4f7f\u3048\u305d\u3046\u3002\n\n```\nvoid funcA() {\n   funcB();\n   funcC();\n   funcD();\n}\n```\n\n```Utni1.h\n//---------------------------------------------------------------------------\n\n#ifndef Unit1H\n#define Unit1H\n//---------------------------------------------------------------------------\n#include <System.Classes.hpp>\n#include <Vcl.Controls.hpp>\n#include <Vcl.StdCtrls.hpp>\n#include <Vcl.Forms.hpp>\n//---------------------------------------------------------------------------\nclass TForm1 : public TForm\n{\n__published:\t// IDE \u3067\u7ba1\u7406\u3055\u308c\u308b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\n\tTButton *Button1;\n\tvoid __fastcall Button1Click(TObject *Sender);\nprivate:\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\npublic:\t\t// \u30e6\u30fc\u30b6\u30fc\u5ba3\u8a00\n//\tvoid __fastcall OffTrigger(String funcname);\n//\tvoid __fastcall OnTrigger(String funcname);\n\n\t__fastcall TForm1(TComponent* Owner);\n};\n//---------------------------------------------------------------------------\nextern PACKAGE TForm1 *Form1;\n//---------------------------------------------------------------------------\n#endif\n```\n\n```Unit1.cpp\n//---------------------------------------------------------------------------\n\n#include <vcl.h>\n#pragma hdrstop\n\n#include <math.h>\n#include <stdint.h>\n#include \"Unit1.h\"\n//---------------------------------------------------------------------------\n#pragma package(smart_init)\n#pragma resource \"*.dfm\"\nTForm1 *Form1;\n//---------------------------------------------------------------------------\n__fastcall TForm1::TForm1(TComponent* Owner)\n\t: TForm(Owner)\n{\n}\n//---------------------------------------------------------------------------\nvoid __fastcall OnTrigger(String funcname);\nvoid __fastcall OffTrigger(String funcname);\n\n#define CHECK(call,name)                              \\\n{                                                     \\\n\tOnTrigger(name);                                  \\\n\tcall                                              \\\n\tOffTrigger(name);                                 \\\n}\n//---------------------------------------------------------------------------\n\nlong int factorial(int m)\n{\n\tif (m==0 || m==1) return (1);\n\telse      return (m*factorial(m-1));\n}\ndouble power(double x,int n)\n{\n\tdouble val=1;\n\tint i;\n\tfor (i=1;i<=n;i++)\n\t{\n\t\tval*=x;\n\t}\n\treturn val;\n}\n\ndouble sine(double x)\n{\n\tint n;\n\tdouble val=0;\n\tfor (n=0;n<8;n++)\n\t{\nCHECK(\n\t\tdouble p = power(-1,n);\n\t\tdouble px = power(x,2*n+1);\n\t\tlong fac = factorial(2*n+1);\n\t\tval += p * px / fac;\n, L\"power\"\n)\n\t}\n\treturn val;\n}\n\n//---------------------------------------------------------------------------\n\nstatic _LARGE_INTEGER Freq;\nstatic _LARGE_INTEGER StartCount;\nstatic _LARGE_INTEGER StopCount;\nstatic int pos = -1;\n#define MAX_NUM (10)\nstatic double proc_msec[MAX_NUM] = {0.0};\nstatic String funcnames[MAX_NUM];\n\nvoid __fastcall OnTrigger(String funcname)\n{\n\tQueryPerformanceFrequency(&Freq);\n\tQueryPerformanceCounter(&StartCount);\n}\n\nvoid __fastcall OffTrigger(String funcname)\n{\n\tQueryPerformanceCounter(&StopCount);\n\n\tdouble timing_sec = (double)(StopCount.QuadPart - StartCount.QuadPart) / Freq.QuadPart;\n\tdouble timing_msec = timing_sec * 1000;\n\tpos++;\n\tif (pos >= MAX_NUM) {\n\t\treturn; // overflow\n\t}\n\tproc_msec[pos] = timing_msec;\n\tfuncnames[pos] = funcname;\n}\n\n//---------------------------------------------------------------------------\n\nvoid __fastcall TForm1::Button1Click(TObject *Sender)\n{\n\tdouble x;\n\tdouble deg2pi = acos(-1.0) / 180.0;\n\n\n//CHECK(\n\tfor(int loop = 0; loop < 3000; loop++) {\n\t\tx = sine(loop * deg2pi);\n\t\tint nop=1;\n\t}\n//, L\"sine\"\n//)\n\n\tint nop = 1;\n\n\t//\n}\n//---------------------------------------------------------------------------\n```\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/3555222a-4c8a-c757-abd0-ea204cb6a6c3.png)\n\n![qiita.png](https://qiita-image-store.s3.amazonaws.com/0/32870/b9134d38-fba7-5e48-a5d9-cdd944e2ce21.png)\n\n\u4e0a\u8a18\u306fmsec\u306e\u5024\u3060\u304c\u3001\u591a\u5c11\u3070\u3089\u3064\u304d\u304c\u3042\u308b\u306e\u306f\u5426\u3081\u306a\u3044\u3002\n", "tags": ["cppBuilder", "performance", "debug"]}