{"context": " More than 1 year has passed since last update.\nEigen::Matrix\u3092\u66f8\u304d\u51fa\u3057\u305f\u308a\u5fa9\u5143\u3057\u305f\u3044\u6642\u7528\u306e\u7c21\u6613\u7248\n\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306b\u3057\u306a\u3044\u306e\u306f\u8907\u6570\u306eMatrix\u3092\u4e00\u884c\u306b\u51fa\u3057\u305f\u308a\u3057\u305f\u3044\u304b\u3089\n\n\neigen_serialize.cpp\n#include <iostream>\n#include <sstream>\n#include <algorithm>\n\n#include <Eigen/Core>\n#include <Eigen/Geometry>\n\nusing namespace std;\n\ntemplate <typename T, int R, int L> string serialize(const Eigen::Matrix<T, R, L>& M){\n  stringstream strm;\n\n  // put the size of the serialized matrix\n  strm << R << \",\" << L << \",\";\n\n  // put the elements of the serialized matrix\n  for(int i=0; i<R; i++){\n    for(int j=0; j<L; j++){\n      strm << M(i,j);\n\n      // separator\n      if(!(i == R-1 && j == L-1))\n        strm << \",\";\n    }\n  }\n\n  return strm.str();\n}\n\ntemplate <typename T> Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> deserialize(string str){\n  Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> M;\n  int R, L;\n\n  // sed \"s/,/ /g\" str\n  replace(str.begin(), str.end(), ',', ' ');\n\n  stringstream strm(str);\n  // get the size of the output matrix\n  strm >> R >> L;\n\n  // get the elements of the output matrix\n  M = decltype(M)(R, L);\n  for(int i=0; i<R; i++){\n    for(int j=0; j<L; j++){\n      strm >> M(i, j);\n    }\n  }\n\n  return M;\n}\n\nint main(){\n  Eigen::Matrix<double, 3, 5> M = decltype(M)::Random();\n  Eigen::Matrix<double, 3, 5> m;\n\n  cout << \"Target matrix\" << endl;\n  cout << M << \"\\n\" << endl;\n\n  string str = serialize(M);\n  cout << \"Serialized string\" << endl;\n  cout << str << \"\\n\" << endl;\n\n  m = deserialize<double>(str);\n  cout << \"Deserizlied matrix\" << endl;\n  cout << m << endl;\n\n  return 0;\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nTarget matrix\n  0.680375    0.59688  -0.329554    0.10794  -0.270431\n -0.211234   0.823295   0.536459 -0.0452059  0.0268018\n  0.566198  -0.604897  -0.444451   0.257742   0.904459\n\nSerialized string\n3,5,0.680375,0.59688,-0.329554,0.10794,-0.270431,-0.211234,0.823295,0.536459,-0.0452059,0.0268018,0.566198,-0.604897,-0.444451,0.257742,0.904459\n\nDeserizlied matrix\n  0.680375    0.59688  -0.329554    0.10794  -0.270431\n -0.211234   0.823295   0.536459 -0.0452059  0.0268018\n  0.566198  -0.604897  -0.444451   0.257742   0.904459\n\n- Eigen::Matrix\u3092\u66f8\u304d\u51fa\u3057\u305f\u308a\u5fa9\u5143\u3057\u305f\u3044\u6642\u7528\u306e\u7c21\u6613\u7248\n- \u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u306b\u3057\u306a\u3044\u306e\u306f\u8907\u6570\u306eMatrix\u3092\u4e00\u884c\u306b\u51fa\u3057\u305f\u308a\u3057\u305f\u3044\u304b\u3089\n\n```CPP:eigen_serialize.cpp\n#include <iostream>\n#include <sstream>\n#include <algorithm>\n\n#include <Eigen/Core>\n#include <Eigen/Geometry>\n\nusing namespace std;\n\ntemplate <typename T, int R, int L> string serialize(const Eigen::Matrix<T, R, L>& M){\n  stringstream strm;\n\n  // put the size of the serialized matrix\n  strm << R << \",\" << L << \",\";\n\n  // put the elements of the serialized matrix\n  for(int i=0; i<R; i++){\n    for(int j=0; j<L; j++){\n      strm << M(i,j);\n\n      // separator\n      if(!(i == R-1 && j == L-1))\n        strm << \",\";\n    }\n  }\n\n  return strm.str();\n}\n\ntemplate <typename T> Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> deserialize(string str){\n  Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic> M;\n  int R, L;\n\n  // sed \"s/,/ /g\" str\n  replace(str.begin(), str.end(), ',', ' ');\n\n  stringstream strm(str);\n  // get the size of the output matrix\n  strm >> R >> L;\n\n  // get the elements of the output matrix\n  M = decltype(M)(R, L);\n  for(int i=0; i<R; i++){\n    for(int j=0; j<L; j++){\n      strm >> M(i, j);\n    }\n  }\n\n  return M;\n}\n\nint main(){\n  Eigen::Matrix<double, 3, 5> M = decltype(M)::Random();\n  Eigen::Matrix<double, 3, 5> m;\n\n  cout << \"Target matrix\" << endl;\n  cout << M << \"\\n\" << endl;\n\n  string str = serialize(M);\n  cout << \"Serialized string\" << endl;\n  cout << str << \"\\n\" << endl;\n\n  m = deserialize<double>(str);\n  cout << \"Deserizlied matrix\" << endl;\n  cout << m << endl;\n\n  return 0;\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```\nTarget matrix\n  0.680375    0.59688  -0.329554    0.10794  -0.270431\n -0.211234   0.823295   0.536459 -0.0452059  0.0268018\n  0.566198  -0.604897  -0.444451   0.257742   0.904459\n\nSerialized string\n3,5,0.680375,0.59688,-0.329554,0.10794,-0.270431,-0.211234,0.823295,0.536459,-0.0452059,0.0268018,0.566198,-0.604897,-0.444451,0.257742,0.904459\n\nDeserizlied matrix\n  0.680375    0.59688  -0.329554    0.10794  -0.270431\n -0.211234   0.823295   0.536459 -0.0452059  0.0268018\n  0.566198  -0.604897  -0.444451   0.257742   0.904459\n```\n", "tags": ["C++", "C++11", "Eigen"]}