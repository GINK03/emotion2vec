{"context": "\n\n\u6982\u8981\nXamarin.Forms\u3067\u3001TimeLine\u306e\u8868\u793a\u3068\u30c4\u30a4\u30fc\u30c8\u304c\u3067\u304d\u308b\u7c21\u5358\u306aTwitter\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u4f5c\u6210\u3059\u308b\u904e\u7a0b\u3067\u898b\u3064\u3051\u305f\u4fbf\u5229\u306aPlugin\u3084\u5c0f\u30cd\u30bf\u3092\u30bd\u30fc\u30b9\u3092\u8ffd\u3044\u306a\u304c\u3089\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001UI\u3092XAML\u3067\u66f8\u3044\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u5c11\u306a\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u305d\u306e\u8fba\u308a\u3082\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u3081\u3063\u3061\u3083\u9577\u3044\u6295\u7a3f\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n\u5b8c\u6210\u54c1\nGitHub\u306b\u516c\u958b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\nTwitterSample\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002(\u4e21\u65b9\u3068\u3082\u5b9f\u6a5f\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3059\u304c\u3001\u4e00\u90e8\u307c\u304b\u3057\u3066\u3044\u307e\u3059\u3002)\niOS\n\nAndroid\n\n\n\u5236\u4f5c\u74b0\u5883\n\nMacOS X 10.11.5\nXamarin Studio Community 6.1(Alpha channel)\n\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7a2e\u985e\n\nXamarin.Forms FormApp\nShared Code\u306fPCL (Profile 7)\nProfile\u306f \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u306e\u4e00\u822c \u304b\u3089\u9078\u629e\u3067\u304d\u307e\u3059\u3002\nProfile\u306e\u8a73\u7d30\u306f\u3053\u3061\u3089\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u5c0e\u5165\u3057\u305fPlugin\n\u4e0b\u8a18\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n- CoreTweet\n- Corcav.Behaviors\n- Xam.Plugin.Iconize / Xam.FormsPlugin.Iconize / Xam.Plugin.Iconize.FontAwesome\n\nCoreTweet\n\u6709\u540d\u306a.Net\u5411\u3051\u306eTwitter\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nCorcav.Behaviors\nEvent\u3068Command\u3092\u7c21\u5358\u306b\u7d10\u3065\u3051\u305f\u308a(EventToCommand)\u3067\u304d\u308bBehavior Plugin\u3067\u3059\u3002\n\u3053\u308c\u3067\u7c21\u5358\u306bEvent\u6642(\u4f8b:Editor\u306eTextChanged\u30a4\u30d9\u30f3\u30c8)\u306b\u4f55\u304b\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nXam.Plugin.Iconize\nFont Awesome\u7b49\u306e\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u3092\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308bPlugin\u3067\u3059\u3002\nXamarin.Forms\u306e\u5834\u5408\u3001Button\u3084Image\u3001Label\u306b\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u305f\u308a\u3001\nTabbedPage\u3084ToolbarItem\u306e\u30a2\u30a4\u30b3\u30f3\u90e8\u5206\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u203bXamarin.Forms\u306e\u5834\u5408\u3001Xam.FormsPlugin.Iconize\u3082\u5fc5\u8981\u3067\u3059\u3002\n\u203b\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u306f\u3001Xam.Plugin.Iconize.FontAwesome\u3068\u3044\u3063\u305fPlugin\u306e\u5f62\u3067Nuget\u304b\u3089\u5c0e\u5165\u3057\u307e\u3059\u3002\n\u3000\u306a\u304a\u3001\u3053\u308c\u3089\u306e\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8Plugin\u306fPCL\u306b\u306f\u5c0e\u5165\u4e0d\u8981\u3067\u3059\u3002(\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093)\n\n\u30bd\u30fc\u30b9\n\nViewModelBase.cs\nViewModel\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nViewModelBase.cs\nusing System.ComponentModel;\n\nnamespace TwitterSample\n{\n    public class ViewModelBase : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        public void OnPropertyChanged(string info)\n        {\n            if (PropertyChanged != null)\n            {\n                PropertyChanged(this, new PropertyChangedEventArgs(info));\n            }\n        }\n    }\n}\n\n\n\nModel.cs\n\u3069\u3053\u306b\u66f8\u304f\u304b\u8ff7\u3044\u307e\u3057\u305f\u304c\u3001\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082TimeLine\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082Model\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u306a\u3069View\u3092\u307e\u305f\u3044\u3067\u4fdd\u6301\u3057\u305f\u3044\u60c5\u5831\u3082Model\u3067\u4fdd\u6301\u3057\u307e\u3059\u3002(\u305d\u306e\u305f\u3081\u306bSingleton\u306b\u3057\u307e\u3059)\nAPI Key\u3084Secret\u306fTwitter Application Management\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nModel.cs\nusing System;\nusing System.Threading.Tasks;\nusing CoreTweet;\nusing System.Collections.ObjectModel;\n\nnamespace TwitterSample\n{\n    public sealed class Model\n    {\n        // Singleton instance.\n        private static readonly Model _Model = new Model();\n\n        public static Model Instance\n        {\n            get { return _Model; }\n        }\n\n        private Model() { }\n\n        // Twitter API tokens. \u3053\u3053\u304b\u3089\u5165\u624b\u53ef(https://apps.twitter.com)\n        public readonly Tokens tokens = Tokens.Create(\"API key\",\n                                               \"API secret\",\n                                               \"Access token\",\n                                               \"Access token secret\");\n\n        public string TweetText;\n        public int WordCount;\n        public bool IsBusy;\n\n        public ObservableCollection<Data> TimeLine = new ObservableCollection<Data>();\n        public class Data\n        {\n            public string ScreenName { get; set; }\n            public string Name { get; set; }\n            public string Tweet { get; set; }\n            public string CreatedAt { get; set; }\n            public string Icon { get; set; }\n        }\n\n        async public Task TweetAsync(string TweetText)\n        {\n            await tokens.Statuses.UpdateAsync(status => TweetText);\n        }\n\n        async public Task FetchTimeLine()\n        {\n            try\n            {\n                var status = await tokens.Statuses.HomeTimelineAsync(count => 50);\n\n                TimeLine.Clear();\n                foreach (var tweet in status)\n                {\n                    TimeLine.Add(new Data\n                    {\n                        ScreenName = tweet.User.ScreenName,\n                        Name = tweet.User.Name,\n                        Tweet = tweet.Text,\n                        CreatedAt = tweet.CreatedAt.AddHours(9).ToString(\"f\"),\n                        Icon = tweet.User.ProfileImageUrl\n                    });\n                }\n            }\n            catch (Exception)\n            {\n                throw;\n            }\n        }\n    }\n}\n\n\n\nMainPage.xaml\nListView\u3067Twitter\u306eTimeLine\u306e\u3088\u3046\u306aUI\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001IsPullToRefreshEnabled\u3092true\u306b\u3059\u308b\u3068\u3001\u5f15\u3063\u5f35\u3063\u3066\u66f4\u65b0\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u969b\u306eCommand\u306fRefreshCommand\u306bBind\u3057\u307e\u3059\u3002\n\nMainPage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n             xmlns:behaviors=\"clr-namespace:Corcav.Behaviors;assembly=Corcav.Behaviors\" \n             xmlns:iconize=\"clr-namespace:FormsPlugin.Iconize;assembly=FormsPlugin.Iconize\" \n             x:Class=\"TwitterSample.MainPage\" Title=\"TimeLine\">\n    <ContentPage.Content>\n        <StackLayout Padding=\"10,0,10,0\">\n            <ListView ItemsSource=\"{Binding TimeLine}\" HasUnevenRows=\"true\" IsPullToRefreshEnabled=\"true\" IsRefreshing=\"{Binding IsBusy, Mode=TwoWay}\" RefreshCommand=\"{Binding FetchTimeLine}\">\n                <ListView.ItemTemplate>\n                    <DataTemplate>\n                        <ViewCell>\n                            <StackLayout Orientation=\"Horizontal\" Padding=\"5,5,5,5\">\n                                <Image Source=\"{Binding Icon}\" WidthRequest=\"55\" HeightRequest=\"55\" VerticalOptions=\"Start\" />\n                                <StackLayout Spacing=\"0\">\n                                    <StackLayout Orientation=\"Horizontal\">\n                                        <Label Text=\"{Binding Name}\" FontSize=\"13\" />\n                                        <Label Text=\"{Binding ScreenName}\" FontSize=\"10\" TextColor=\"Gray\" />\n                                    </StackLayout>\n                                    <Label Text=\"{Binding CreatedAt}\" FontSize=\"10\" TextColor=\"Gray\" />\n                                    <Label Text=\"{Binding Tweet}\" FontSize=\"12\" />\n                                </StackLayout>\n                            </StackLayout>\n                        </ViewCell>\n                    </DataTemplate>\n                </ListView.ItemTemplate>\n            </ListView>\n        </StackLayout>\n    </ContentPage.Content>\n</ContentPage>\n\n\n\nMainPage.xaml.cs\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3067OnAppearing()\u3092override\u3059\u308b\u3068\u3001View\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u306e\u6319\u52d5\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001MainPageViewModel\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nMainPage.xaml.cs\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class MainPage : ContentPage\n    {\n        public MainPage()\n        {\n            InitializeComponent();\n        }\n\n        protected override async void OnAppearing()\n        {\n            base.OnAppearing();\n\n            var ViewModel = BindingContext as MainPageViewModel;\n            await ViewModel.Initialize();\n        }\n    }\n}\n\n\n\nMainPageViewModel.cs\nInitialize\u30e1\u30bd\u30c3\u30c9\u3067Timeline\u306e\u66f4\u65b0\u3092\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067MainPageView\u3092\u8868\u793a\u3059\u308b\u5ea6\u306bTimeLine\u304c\u81ea\u52d5\u66f4\u65b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nMainPageViewModel.cs\nusing System;\nusing System.Collections.ObjectModel;\nusing System.Threading.Tasks;\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class MainPageViewModel : ViewModelBase\n    {\n        Model Model = Model.Instance;\n\n        public ICommand FetchTimeLine { get; set; }\n\n        public MainPageViewModel()\n        {\n            FetchTimeLine = new Command(async () =>\n            {\n                //ListView\u306eIsRefreshing\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u624b\u52d5\u3067\u66f4\u65b0\u3002\n                //\u672c\u6765\u3001\u81ea\u52d5\u3067\u66f4\u65b0\u3055\u308c\u308b\u305f\u3081\u4e0d\u8981\u3060\u304c\u3001\u81ea\u52d5\u306b\u3059\u308b\u3068\u66f4\u65b0\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u70ba\u8ffd\u52a0\u3002(\u539f\u56e0\u4e0d\u660e)\n                IsBusy = true;\n                try\n                {\n                    await Model.FetchTimeLine();\n                }\n                catch (Exception e)\n                {\n                    await Application.Current.MainPage.DisplayAlert(\"\u30a8\u30e9\u30fc\", e.ToString(), \"OK\");\n                }\n                IsBusy = false;\n            });\n        }\n\n        async public Task Initialize()\n        {\n            try\n            {\n                await Model.FetchTimeLine();\n            }\n            catch (Exception e)\n            {\n                await Application.Current.MainPage.DisplayAlert(\"\u30a8\u30e9\u30fc\", e.ToString(), \"OK\");\n            }\n        }\n\n        public ObservableCollection<Model.Data> TimeLine\n        {\n            get\n            {\n                return Model.TimeLine;\n            }\n            set\n            {\n                Model.TimeLine = value;\n            }\n        }\n\n        public bool IsBusy\n        {\n            get { return Model.IsBusy; }\n            set\n            {\n                Model.IsBusy = value;\n                OnPropertyChanged(\"IsBusy\");\n            }\n        }\n    }\n}\n\n\n\nTweetPage.xaml\n\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u753b\u9762\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u6570\u3092\u81ea\u52d5\u3067\u8868\u793a\u3055\u305b\u308b\u305f\u3081\u3001\u30c6\u30ad\u30b9\u30c8\u5165\u529b\u6b04(Editor)\u306eTextChanged\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u3001\n\u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092Command\u3068\u3057\u3066Bind\u3057\u3066\u3044\u307e\u3059\u3002(Corcav.Behaviors\u306e\u6a5f\u80fd\u3067\u3059)\n\u753b\u9762\u3092\u6a2a\u306b\u5411\u3051\u305f\u5834\u5408\u306a\u3069\u3001UI\u304c\u753b\u9762\u5916\u306b\u306f\u307f\u51fa\u305f\u6642\u306b\u64cd\u4f5c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\nStackLayout\u3092ScrollView\u3067\u56f2\u3093\u3067\u3044\u307e\u3059\u3002\niconize:IconButton\u3068\u3057\u305fButton\u3067\u306f\u3001Text\u30d7\u30ed\u30d1\u30c6\u30a3\u306bFont Awesome\u7b49\u306eclass\u540d\u3092\u5165\u308c\u308b\u3060\u3051\u3067\u3001\n\u305d\u3053\u304c\u30a2\u30a4\u30b3\u30f3\u306b\u306a\u3063\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u901a\u5e38\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u308c\u308b\u3068\u901a\u5e38\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001\u4e0b\u8a18\u3067\u5f53\u8a72\u306e\u30da\u30fc\u30b8\u540d\u306b\u9077\u79fb(\u9032\u3080)\u3057\u307e\u3059\u3002\nApplication.Current.MainPage.Navigation.PushAsync(new Page\u540d())\n\nTweetPage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n             xmlns:behaviors=\"clr-namespace:Corcav.Behaviors;assembly=Corcav.Behaviors\" \n             xmlns:iconize=\"clr-namespace:FormsPlugin.Iconize;assembly=FormsPlugin.Iconize\" \n             x:Class=\"TwitterSample.TweetPage\" \n             Title=\"Tweet\">\n    <ContentPage.Content>\n        <ScrollView>\n            <StackLayout Padding=\"2,0,2,0\">\n                <Editor Text=\"{Binding TweetText,Mode=TwoWay}\" HeightRequest=\"230\">\n                    <behaviors:Interaction.Behaviors>\n                        <behaviors:BehaviorCollection>\n                            <behaviors:EventToCommand EventName=\"TextChanged\" Command=\"{Binding CountWord}\" />\n                        </behaviors:BehaviorCollection>\n                    </behaviors:Interaction.Behaviors>\n                </Editor>\n                <Label Text=\"{Binding WordCount, StringFormat='{0}\u6587\u5b57' ,Mode=OneWay}\" HorizontalTextAlignment=\"End\" />\n                <iconize:IconButton Command=\"{Binding Tweet}\" Text=\"fa-twitter\" FontSize=\"40\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n                <Grid>\n                    <Grid.RowDefinitions>\n                        <RowDefinition Height=\"*\" />\n                        <RowDefinition Height=\"Auto\" />\n                    </Grid.RowDefinitions>\n                    <Grid.ColumnDefinitions>\n                        <ColumnDefinition Width=\"*\" />\n                        <ColumnDefinition Width=\"Auto\" />\n                    </Grid.ColumnDefinitions>\n                    <iconize:IconButton Command=\"{Binding GoToFixedPhrasePage}\" Text=\"\u5b9a\u5f62\u6587\" Grid.Column=\"0\" Grid.Row=\"1\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n                    <Button Command=\"{Binding Reset}\" Text=\"\u30af\u30ea\u30a2\" Grid.Column=\"2\" Grid.Row=\"1\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n                </Grid>\n            </StackLayout>\n        </ScrollView>\n    </ContentPage.Content>\n</ContentPage>\n\n\n\nTweetPage.xaml.cs\n\u3053\u3053\u3067\u306f\u3001TweetPageView\u3092\u8868\u793a\u3059\u308b\u5ea6\u306bTweetPageViewModel\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nMTweetPage.xaml.cs\nusing System;\nusing System.Collections.Generic;\n\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class TweetPage : ContentPage\n    {\n        public TweetPage()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnAppearing()\n        {\n            base.OnAppearing();\n\n            var ViewModel = BindingContext as TweetPageViewModel;\n            ViewModel.Initialize();\n        }\n    }\n}\n\n\n\nTweetPageViewModel.cs\nInitialize\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001Model\u306b\u4fdd\u6301\u3057\u305f\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3068\u6587\u5b57\u6570\u3092\u8aad\u307f\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u5f8c\u8ff0\u3059\u308b\u5b9a\u5f62\u6587\u306e\u547c\u3073\u51fa\u3057\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u5b9a\u5f62\u6587(\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8)\u3092\u3001View\u3092\u307e\u305f\u3044\u3067\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u51e6\u7406\u3067\u3059\u3002\n\nTweetPageViewModel\nusing System.Windows.Input;\nusing Xamarin.Forms;\nnamespace TwitterSample\n{\n    public class TweetPageViewModel : ViewModelBase\n    {\n        public ICommand CountWord { get; set; }\n        public ICommand Tweet { get; set; }\n        public ICommand GoToFixedPhrasePage { get; set; }\n        public ICommand Reset { get; set; }\n\n        Model Model = Model.Instance;\n\n        public TweetPageViewModel()\n        {\n            CountWord = new Command(() => WordCount = TweetText.Length);\n\n            Tweet = new Command(async () =>\n            {\n                var accepted = await Application.Current.MainPage.DisplayAlert(\"\u78ba\u8a8d\", \"Tweet\u3057\u307e\u3059\u304b\uff1f\", \"OK\", \"Cancel\");\n                if (accepted)\n                {\n                    await Model.TweetAsync(TweetText);\n                    await Application.Current.MainPage.DisplayAlert(\"(\uff40\u30fb\u03c9\u30fb\u00b4)\", \"Tweet\u3057\u307e\u3057\u305f\uff01\", \"OK\");\n                    TweetText = \"\";\n                }\n            });\n\n            GoToFixedPhrasePage = new Command(() => Application.Current.MainPage.Navigation.PushAsync(new FixedPhrasePage()));\n\n            Reset = new Command(() =>\n            {\n                TweetText = \"\";\n                WordCount = Model.WordCount;\n            });\n        }\n\n        public void Initialize()\n        {\n            TweetText = Model.TweetText;\n            WordCount = Model.WordCount;\n        }\n\n        public string TweetText\n        {\n            get { return Model.TweetText; }\n            set\n            {\n                Model.TweetText = value;\n                OnPropertyChanged(\"TweetText\");\n            }\n        }\n\n        public int WordCount\n        {\n            get { return Model.WordCount; }\n            set\n            {\n                Model.WordCount = value;\n                OnPropertyChanged(\"WordCount\");\n            }\n        }\n    }\n}\n\n\n\nFixedPhrasePage.xaml\n\u5b9a\u5f62\u6587\u3092\u9078\u629e\u3067\u304d\u308b\u30da\u30fc\u30b8\u3067\u3059\u3002\u3068\u308a\u3042\u3048\u305a2\u500b\u3060\u3051\u7f6e\u3044\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\nFixedPhrasePage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" \n             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n             x:Class=\"TwitterSample.FixedPhrasePage\" \n             Title=\"\u5b9a\u5f62\u6587\u3092\u9078\u3093\u3067\u306d\">\n    <ContentPage.Content>\n        <ScrollView Padding=\"10,20,10,0\">\n            <StackLayout>\n                <Button Command=\"{Binding SetFixedPhrase}\" Text=\"\u9032\u6357\u30c0\u30e1\u3067\u3059\" CommandParameter=\"\u9032\u6357\u30c0\u30e1\u3067\u3059\" />\n                <Button Command=\"{Binding SetFixedPhrase}\" Text=\"\u304a\u8179\u75db\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\" CommandParameter=\"\u304a\u8179\u75db\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\" />\n            </StackLayout>\n        </ScrollView>\n    </ContentPage.Content>\n</ContentPage>\n\n\n\nFixedPhrasePage.xaml.cs\n\u3053\u3053\u3067\u306fInitialize\u30e1\u30bd\u30c3\u30c9\u306f\u4e0d\u8981\u306a\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306b\u4e0b\u8a18\u3060\u3051\u3067\u3059\u3002\n\nFixedPhrasePage.xaml.cs\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class FixedPhrasePage : ContentPage\n    {\n        public FixedPhrasePage()\n        {\n            InitializeComponent();\n\n            BindingContext = new FixedPhrasePageViewModel();\n        }\n    }\n}\n\n\n\nFixedPhrasePageViewModel.cs\nTweetPageView\u306b\u5024\u3092\u53d7\u3051\u6e21\u3059\u305f\u3081\u3001SetFixedPhrase\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u5024\u3092\u5168\u3066Model\u306b\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u4e0b\u8a18\u3067\u9077\u79fb\u5143\u306e\u30da\u30fc\u30b8\u3078\u9077\u79fb(\u623b\u308b)\u3057\u307e\u3059\u3002\nApplication.Current.MainPage.Navigation.PopAsync()\n\nFixedPhrasePageViewModel\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class FixedPhrasePageViewModel : ViewModelBase\n    {\n        public ICommand SetFixedPhrase { get; set; }\n\n        Model Model = Model.Instance;\n\n        public FixedPhrasePageViewModel()\n        {\n            SetFixedPhrase = new Command<string>((arg) =>\n            {\n                Model.TweetText = arg;\n                Model.WordCount = Model.TweetText.Length;\n                Application.Current.MainPage.Navigation.PopAsync();\n            });\n        }\n    }\n}\n\n\n\nTwitterSample.cs\nTabbedpage\u306eIcon\u306bFontAwesome\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Iconize plugin\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u305d\u306eUI\u90e8\u5206\u3060\u3051C#\u3067\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u306a\u306e\u3067(\u3082\u3057\u304b\u3057\u305f\u3089XAML\u3067\u66f8\u3051\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093)C#\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n\u8ffd\u8a18\uff1aXAML\u3067\u3082\u66f8\u3051\u307e\u3057\u305f\u3002\nTabbedPage\u306eChildren\u3068\u3057\u3066\u3001MainPage\u3068TweetPage\u3092\u8ffd\u52a0\u3057\u3001\u305d\u308c\u305e\u308c\u306bIcon\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\n\nTwitterSample.cs\nusing FormsPlugin.Iconize;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class App : Application\n    {\n        public App()\n        {\n            // The root page of your application\n\n            //Iconize\u30e9\u30a4\u30d6\u30e9\u30ea\u306eIconTabbedPage\u3092\u4f7f\u7528\u3059\u308b\u70ba\u3001TabbedPage\u306e\u751f\u6210\u306e\u307fXAML\u3067\u306f\u306a\u304fC#\u3067\u8a18\u8f09\u3002\n            var TabbedPage = new IconTabbedPage { Title = \"Twitter\" };\n\n            foreach (var module in Plugin.Iconize.Iconize.Modules)\n            {\n                TabbedPage.Children.Add(new MainPage\n                {\n                    BindingContext = new MainPageViewModel(),\n                    Icon = \"fa-home\"\n                });\n\n                TabbedPage.Children.Add(new TweetPage\n                {\n                    BindingContext = new TweetPageViewModel(),\n                    Icon = \"fa-twitter\"\n                });\n            }\n\n            MainPage = new IconNavigationPage(TabbedPage);\n        }\n\n        protected override void OnStart()\n        {\n            // Handle when your app starts\n        }\n\n        protected override void OnSleep()\n        {\n            // Handle when your app sleeps\n        }\n\n        protected override void OnResume()\n        {\n            // Handle when your app resumes\n        }\n    }\n}\n\n\n\n\u307e\u3068\u3081\nXamarin.Forms\u3001\u307e\u3060\u307e\u3060\u60c5\u5831\u304c\u5c11\u306a\u304f\u3066\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u611f\u3058\u3082\u3057\u307e\u3059\u304c\u3001\n\u5358\u7d14\u306a\u30a2\u30d7\u30ea\u306a\u3089\u7c21\u5358\u306b\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u958b\u767a\u304c\u3067\u304d\u3066\u697d\u3057\u3044\u3067\u3059\u306d(\u2229\u00b4\u2200\uff40)\u2229\n#\u6982\u8981\nXamarin.Forms\u3067\u3001TimeLine\u306e\u8868\u793a\u3068\u30c4\u30a4\u30fc\u30c8\u304c\u3067\u304d\u308b\u7c21\u5358\u306aTwitter\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u4f5c\u6210\u3059\u308b\u904e\u7a0b\u3067\u898b\u3064\u3051\u305f\u4fbf\u5229\u306aPlugin\u3084\u5c0f\u30cd\u30bf\u3092\u30bd\u30fc\u30b9\u3092\u8ffd\u3044\u306a\u304c\u3089\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001UI\u3092XAML\u3067\u66f8\u3044\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u304c\u5c11\u306a\u3044\u6c17\u304c\u3059\u308b\u306e\u3067\u3001\u305d\u306e\u8fba\u308a\u3082\u3054\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\u3081\u3063\u3061\u3083\u9577\u3044\u6295\u7a3f\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n#\u5b8c\u6210\u54c1\nGitHub\u306b\u516c\u958b\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n[TwitterSample](https://github.com/t-miyake/XamarinForms/tree/master/TwitterSample)\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002(\u4e21\u65b9\u3068\u3082\u5b9f\u6a5f\u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u3067\u3059\u304c\u3001\u4e00\u90e8\u307c\u304b\u3057\u3066\u3044\u307e\u3059\u3002)\niOS\n<img width=\"894\" alt=\"iOS\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65764/f3e066e7-71b9-3e4e-c233-014725503355.png\">\nAndroid\n<img width=\"893\" alt=\"Android\" src=\"https://qiita-image-store.s3.amazonaws.com/0/65764/474872df-bb1b-c723-ccc2-fcb2dc056a0a.png\">\n\n\n#\u5236\u4f5c\u74b0\u5883\n- MacOS X 10.11.5\n- Xamarin Studio Community 6.1(Alpha channel)  \n\n#\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u7a2e\u985e\n- Xamarin.Forms FormApp\n- Shared Code\u306fPCL (Profile 7)  \nProfile\u306f \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u30d3\u30eb\u30c9\u306e\u4e00\u822c \u304b\u3089\u9078\u629e\u3067\u304d\u307e\u3059\u3002  \nProfile\u306e\u8a73\u7d30\u306f[\u3053\u3061\u3089](http://ytabuchi.hatenablog.com/entry/2016/01/31/223000)\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n#\u5c0e\u5165\u3057\u305fPlugin\n\u4e0b\u8a18\u3092\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n- CoreTweet\n- Corcav.Behaviors\n- Xam.Plugin.Iconize / Xam.FormsPlugin.Iconize / Xam.Plugin.Iconize.FontAwesome\n\n##CoreTweet\n\u6709\u540d\u306a.Net\u5411\u3051\u306eTwitter\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f[\u3053\u3061\u3089](https://github.com/CoreTweet/CoreTweet/wiki/Home(\u65e5\u672c\u8a9e))\u3067\u3059\u3002\n\n##Corcav.Behaviors\nEvent\u3068Command\u3092\u7c21\u5358\u306b\u7d10\u3065\u3051\u305f\u308a(EventToCommand)\u3067\u304d\u308bBehavior Plugin\u3067\u3059\u3002\n\u3053\u308c\u3067\u7c21\u5358\u306bEvent\u6642(\u4f8b:Editor\u306eTextChanged\u30a4\u30d9\u30f3\u30c8)\u306b\u4f55\u304b\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f[\u3053\u3061\u3089](https://github.com/corradocavalli/Corcav.Behaviors)\u3067\u3059\u3002\n\n##Xam.Plugin.Iconize\nFont Awesome\u7b49\u306e\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u3092\u7c21\u5358\u306b\u5229\u7528\u3067\u304d\u308bPlugin\u3067\u3059\u3002\nXamarin.Forms\u306e\u5834\u5408\u3001Button\u3084Image\u3001Label\u306b\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u305f\u308a\u3001\nTabbedPage\u3084ToolbarItem\u306e\u30a2\u30a4\u30b3\u30f3\u90e8\u5206\u306b\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\u8a73\u7d30\u3084\u4f7f\u3044\u65b9\u306f[\u3053\u3061\u3089](https://github.com/jsmarcus/Xamarin.Plugins/tree/master/Iconize)\u3067\u3059\u3002\n\u203bXamarin.Forms\u306e\u5834\u5408\u3001Xam.FormsPlugin.Iconize\u3082\u5fc5\u8981\u3067\u3059\u3002\n\u203b\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8\u306f\u3001Xam.Plugin.Iconize.FontAwesome\u3068\u3044\u3063\u305fPlugin\u306e\u5f62\u3067Nuget\u304b\u3089\u5c0e\u5165\u3057\u307e\u3059\u3002\n\u3000\u306a\u304a\u3001\u3053\u308c\u3089\u306e\u30a2\u30a4\u30b3\u30f3\u30d5\u30a9\u30f3\u30c8Plugin\u306fPCL\u306b\u306f\u5c0e\u5165\u4e0d\u8981\u3067\u3059\u3002(\u8ffd\u52a0\u3067\u304d\u307e\u305b\u3093)\n\n\n#\u30bd\u30fc\u30b9\n##ViewModelBase.cs\nViewModel\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```csharp:ViewModelBase.cs\nusing System.ComponentModel;\n\nnamespace TwitterSample\n{\n    public class ViewModelBase : INotifyPropertyChanged\n    {\n        public event PropertyChangedEventHandler PropertyChanged;\n\n        public void OnPropertyChanged(string info)\n        {\n            if (PropertyChanged != null)\n            {\n                PropertyChanged(this, new PropertyChangedEventArgs(info));\n            }\n        }\n    }\n}\n```\n\n##Model.cs\n\u3069\u3053\u306b\u66f8\u304f\u304b\u8ff7\u3044\u307e\u3057\u305f\u304c\u3001\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082TimeLine\u3092\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3082Model\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u306a\u3069View\u3092\u307e\u305f\u3044\u3067\u4fdd\u6301\u3057\u305f\u3044\u60c5\u5831\u3082Model\u3067\u4fdd\u6301\u3057\u307e\u3059\u3002(\u305d\u306e\u305f\u3081\u306bSingleton\u306b\u3057\u307e\u3059)\n\nAPI Key\u3084Secret\u306f[Twitter Application Management](https://apps.twitter.com/)\u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```csharp:Model.cs\nusing System;\nusing System.Threading.Tasks;\nusing CoreTweet;\nusing System.Collections.ObjectModel;\n\nnamespace TwitterSample\n{\n    public sealed class Model\n    {\n        // Singleton instance.\n        private static readonly Model _Model = new Model();\n\n        public static Model Instance\n        {\n            get { return _Model; }\n        }\n\n        private Model() { }\n\n        // Twitter API tokens. \u3053\u3053\u304b\u3089\u5165\u624b\u53ef(https://apps.twitter.com)\n        public readonly Tokens tokens = Tokens.Create(\"API key\",\n                                               \"API secret\",\n                                               \"Access token\",\n                                               \"Access token secret\");\n\n        public string TweetText;\n        public int WordCount;\n        public bool IsBusy;\n\n        public ObservableCollection<Data> TimeLine = new ObservableCollection<Data>();\n        public class Data\n        {\n            public string ScreenName { get; set; }\n            public string Name { get; set; }\n            public string Tweet { get; set; }\n            public string CreatedAt { get; set; }\n            public string Icon { get; set; }\n        }\n\n        async public Task TweetAsync(string TweetText)\n        {\n            await tokens.Statuses.UpdateAsync(status => TweetText);\n        }\n\n        async public Task FetchTimeLine()\n        {\n            try\n            {\n                var status = await tokens.Statuses.HomeTimelineAsync(count => 50);\n\n                TimeLine.Clear();\n                foreach (var tweet in status)\n                {\n                    TimeLine.Add(new Data\n                    {\n                        ScreenName = tweet.User.ScreenName,\n                        Name = tweet.User.Name,\n                        Tweet = tweet.Text,\n                        CreatedAt = tweet.CreatedAt.AddHours(9).ToString(\"f\"),\n                        Icon = tweet.User.ProfileImageUrl\n                    });\n                }\n            }\n            catch (Exception)\n            {\n                throw;\n            }\n        }\n    }\n}\n```\n\n##MainPage.xaml\nListView\u3067Twitter\u306eTimeLine\u306e\u3088\u3046\u306aUI\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u306a\u304a\u3001IsPullToRefreshEnabled\u3092true\u306b\u3059\u308b\u3068\u3001\u5f15\u3063\u5f35\u3063\u3066\u66f4\u65b0\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u969b\u306eCommand\u306fRefreshCommand\u306bBind\u3057\u307e\u3059\u3002\n\n```xml:MainPage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n\t\t\t xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n\t\t\t xmlns:behaviors=\"clr-namespace:Corcav.Behaviors;assembly=Corcav.Behaviors\" \n\t\t\t xmlns:iconize=\"clr-namespace:FormsPlugin.Iconize;assembly=FormsPlugin.Iconize\" \n\t\t\t x:Class=\"TwitterSample.MainPage\" Title=\"TimeLine\">\n\t<ContentPage.Content>\n\t\t<StackLayout Padding=\"10,0,10,0\">\n\t\t\t<ListView ItemsSource=\"{Binding TimeLine}\" HasUnevenRows=\"true\" IsPullToRefreshEnabled=\"true\" IsRefreshing=\"{Binding IsBusy, Mode=TwoWay}\" RefreshCommand=\"{Binding FetchTimeLine}\">\n\t\t\t\t<ListView.ItemTemplate>\n\t\t\t\t\t<DataTemplate>\n\t\t\t\t\t\t<ViewCell>\n\t\t\t\t\t\t\t<StackLayout Orientation=\"Horizontal\" Padding=\"5,5,5,5\">\n\t\t\t\t\t\t\t\t<Image Source=\"{Binding Icon}\" WidthRequest=\"55\" HeightRequest=\"55\" VerticalOptions=\"Start\" />\n\t\t\t\t\t\t\t\t<StackLayout Spacing=\"0\">\n\t\t\t\t\t\t\t\t\t<StackLayout Orientation=\"Horizontal\">\n\t\t\t\t\t\t\t\t\t\t<Label Text=\"{Binding Name}\" FontSize=\"13\" />\n\t\t\t\t\t\t\t\t\t\t<Label Text=\"{Binding ScreenName}\" FontSize=\"10\" TextColor=\"Gray\" />\n\t\t\t\t\t\t\t\t\t</StackLayout>\n\t\t\t\t\t\t\t\t\t<Label Text=\"{Binding CreatedAt}\" FontSize=\"10\" TextColor=\"Gray\" />\n\t\t\t\t\t\t\t\t\t<Label Text=\"{Binding Tweet}\" FontSize=\"12\" />\n\t\t\t\t\t\t\t\t</StackLayout>\n\t\t\t\t\t\t\t</StackLayout>\n\t\t\t\t\t\t</ViewCell>\n\t\t\t\t\t</DataTemplate>\n\t\t\t\t</ListView.ItemTemplate>\n\t\t\t</ListView>\n\t\t</StackLayout>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n##MainPage.xaml.cs\n\u30b3\u30fc\u30c9\u30d3\u30cf\u30a4\u30f3\u30c9\u3067OnAppearing()\u3092override\u3059\u308b\u3068\u3001View\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u306e\u6319\u52d5\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001MainPageViewModel\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:MainPage.xaml.cs\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class MainPage : ContentPage\n    {\n        public MainPage()\n        {\n            InitializeComponent();\n        }\n\n        protected override async void OnAppearing()\n        {\n            base.OnAppearing();\n\n            var ViewModel = BindingContext as MainPageViewModel;\n            await ViewModel.Initialize();\n        }\n    }\n}\n```\n\n##MainPageViewModel.cs\nInitialize\u30e1\u30bd\u30c3\u30c9\u3067Timeline\u306e\u66f4\u65b0\u3092\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067MainPageView\u3092\u8868\u793a\u3059\u308b\u5ea6\u306bTimeLine\u304c\u81ea\u52d5\u66f4\u65b0\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```csharp:MainPageViewModel.cs\nusing System;\nusing System.Collections.ObjectModel;\nusing System.Threading.Tasks;\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class MainPageViewModel : ViewModelBase\n    {\n        Model Model = Model.Instance;\n\n        public ICommand FetchTimeLine { get; set; }\n\n        public MainPageViewModel()\n        {\n            FetchTimeLine = new Command(async () =>\n            {\n                //ListView\u306eIsRefreshing\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u624b\u52d5\u3067\u66f4\u65b0\u3002\n                //\u672c\u6765\u3001\u81ea\u52d5\u3067\u66f4\u65b0\u3055\u308c\u308b\u305f\u3081\u4e0d\u8981\u3060\u304c\u3001\u81ea\u52d5\u306b\u3059\u308b\u3068\u66f4\u65b0\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u70ba\u8ffd\u52a0\u3002(\u539f\u56e0\u4e0d\u660e)\n                IsBusy = true;\n                try\n                {\n                    await Model.FetchTimeLine();\n                }\n                catch (Exception e)\n                {\n                    await Application.Current.MainPage.DisplayAlert(\"\u30a8\u30e9\u30fc\", e.ToString(), \"OK\");\n                }\n                IsBusy = false;\n            });\n        }\n\n        async public Task Initialize()\n        {\n            try\n            {\n                await Model.FetchTimeLine();\n            }\n            catch (Exception e)\n            {\n                await Application.Current.MainPage.DisplayAlert(\"\u30a8\u30e9\u30fc\", e.ToString(), \"OK\");\n            }\n        }\n\n        public ObservableCollection<Model.Data> TimeLine\n        {\n            get\n            {\n                return Model.TimeLine;\n            }\n            set\n            {\n                Model.TimeLine = value;\n            }\n        }\n\n        public bool IsBusy\n        {\n            get { return Model.IsBusy; }\n            set\n            {\n                Model.IsBusy = value;\n                OnPropertyChanged(\"IsBusy\");\n            }\n        }\n    }\n}\n```\n\n##TweetPage.xaml\n\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u753b\u9762\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u5165\u529b\u3055\u308c\u3066\u3044\u308b\u6587\u5b57\u6570\u3092\u81ea\u52d5\u3067\u8868\u793a\u3055\u305b\u308b\u305f\u3081\u3001\u30c6\u30ad\u30b9\u30c8\u5165\u529b\u6b04(Editor)\u306eTextChanged\u30a4\u30d9\u30f3\u30c8\u306b\u5bfe\u3057\u3066\u3001\n\u6587\u5b57\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092Command\u3068\u3057\u3066Bind\u3057\u3066\u3044\u307e\u3059\u3002(Corcav.Behaviors\u306e\u6a5f\u80fd\u3067\u3059)\n\n\u753b\u9762\u3092\u6a2a\u306b\u5411\u3051\u305f\u5834\u5408\u306a\u3069\u3001UI\u304c\u753b\u9762\u5916\u306b\u306f\u307f\u51fa\u305f\u6642\u306b\u64cd\u4f5c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\nStackLayout\u3092ScrollView\u3067\u56f2\u3093\u3067\u3044\u307e\u3059\u3002\n\niconize:IconButton\u3068\u3057\u305fButton\u3067\u306f\u3001Text\u30d7\u30ed\u30d1\u30c6\u30a3\u306bFont Awesome\u7b49\u306eclass\u540d\u3092\u5165\u308c\u308b\u3060\u3051\u3067\u3001\n\u305d\u3053\u304c\u30a2\u30a4\u30b3\u30f3\u306b\u306a\u3063\u3066\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u901a\u5e38\u306e\u30c6\u30ad\u30b9\u30c8\u3092\u5165\u308c\u308b\u3068\u901a\u5e38\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u4e0b\u8a18\u3067\u5f53\u8a72\u306e\u30da\u30fc\u30b8\u540d\u306b\u9077\u79fb(\u9032\u3080)\u3057\u307e\u3059\u3002\nApplication.Current.MainPage.Navigation.PushAsync(new Page\u540d())\n\n```xml:TweetPage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n\t\t\t xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n\t\t\t xmlns:behaviors=\"clr-namespace:Corcav.Behaviors;assembly=Corcav.Behaviors\" \n\t\t\t xmlns:iconize=\"clr-namespace:FormsPlugin.Iconize;assembly=FormsPlugin.Iconize\" \n\t\t\t x:Class=\"TwitterSample.TweetPage\" \n\t\t\t Title=\"Tweet\">\n\t<ContentPage.Content>\n\t\t<ScrollView>\n\t\t\t<StackLayout Padding=\"2,0,2,0\">\n\t\t\t\t<Editor Text=\"{Binding TweetText,Mode=TwoWay}\" HeightRequest=\"230\">\n\t\t\t\t\t<behaviors:Interaction.Behaviors>\n\t\t\t\t\t\t<behaviors:BehaviorCollection>\n\t\t\t\t\t\t\t<behaviors:EventToCommand EventName=\"TextChanged\" Command=\"{Binding CountWord}\" />\n\t\t\t\t\t\t</behaviors:BehaviorCollection>\n\t\t\t\t\t</behaviors:Interaction.Behaviors>\n\t\t\t\t</Editor>\n\t\t\t\t<Label Text=\"{Binding WordCount, StringFormat='{0}\u6587\u5b57' ,Mode=OneWay}\" HorizontalTextAlignment=\"End\" />\n\t\t\t\t<iconize:IconButton Command=\"{Binding Tweet}\" Text=\"fa-twitter\" FontSize=\"40\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.RowDefinitions>\n\t\t\t\t\t\t<RowDefinition Height=\"*\" />\n\t\t\t\t\t\t<RowDefinition Height=\"Auto\" />\n\t\t\t\t\t</Grid.RowDefinitions>\n\t\t\t\t\t<Grid.ColumnDefinitions>\n\t\t\t\t\t\t<ColumnDefinition Width=\"*\" />\n\t\t\t\t\t\t<ColumnDefinition Width=\"Auto\" />\n\t\t\t\t\t</Grid.ColumnDefinitions>\n\t\t\t\t\t<iconize:IconButton Command=\"{Binding GoToFixedPhrasePage}\" Text=\"\u5b9a\u5f62\u6587\" Grid.Column=\"0\" Grid.Row=\"1\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n\t\t\t\t\t<Button Command=\"{Binding Reset}\" Text=\"\u30af\u30ea\u30a2\" Grid.Column=\"2\" Grid.Row=\"1\" BorderColor=\"Gray\" BorderWidth=\"1\" />\n\t\t\t\t</Grid>\n\t\t\t</StackLayout>\n\t\t</ScrollView>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n##TweetPage.xaml.cs\n\u3053\u3053\u3067\u306f\u3001TweetPageView\u3092\u8868\u793a\u3059\u308b\u5ea6\u306bTweetPageViewModel\u306eInitialize\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:MTweetPage.xaml.cs\nusing System;\nusing System.Collections.Generic;\n\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class TweetPage : ContentPage\n    {\n        public TweetPage()\n        {\n            InitializeComponent();\n        }\n\n        protected override void OnAppearing()\n        {\n            base.OnAppearing();\n\n            var ViewModel = BindingContext as TweetPageViewModel;\n            ViewModel.Initialize();\n        }\n    }\n}\n```\n\n##TweetPageViewModel.cs\nInitialize\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001Model\u306b\u4fdd\u6301\u3057\u305f\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8\u3068\u6587\u5b57\u6570\u3092\u8aad\u307f\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u5f8c\u8ff0\u3059\u308b\u5b9a\u5f62\u6587\u306e\u547c\u3073\u51fa\u3057\u30da\u30fc\u30b8\u3067\u9078\u629e\u3057\u305f\u5b9a\u5f62\u6587(\u30c4\u30a4\u30fc\u30c8\u3059\u308b\u30c6\u30ad\u30b9\u30c8)\u3092\u3001View\u3092\u307e\u305f\u3044\u3067\u53d7\u3051\u53d6\u308b\u305f\u3081\u306e\u51e6\u7406\u3067\u3059\u3002\n\n```csharp:TweetPageViewModel\nusing System.Windows.Input;\nusing Xamarin.Forms;\nnamespace TwitterSample\n{\n\tpublic class TweetPageViewModel : ViewModelBase\n    {\n        public ICommand CountWord { get; set; }\n        public ICommand Tweet { get; set; }\n        public ICommand GoToFixedPhrasePage { get; set; }\n        public ICommand Reset { get; set; }\n\n        Model Model = Model.Instance;\n\n        public TweetPageViewModel()\n        {\n            CountWord = new Command(() => WordCount = TweetText.Length);\n\n            Tweet = new Command(async () =>\n            {\n                var accepted = await Application.Current.MainPage.DisplayAlert(\"\u78ba\u8a8d\", \"Tweet\u3057\u307e\u3059\u304b\uff1f\", \"OK\", \"Cancel\");\n                if (accepted)\n                {\n                    await Model.TweetAsync(TweetText);\n                    await Application.Current.MainPage.DisplayAlert(\"(\uff40\u30fb\u03c9\u30fb\u00b4)\", \"Tweet\u3057\u307e\u3057\u305f\uff01\", \"OK\");\n                    TweetText = \"\";\n                }\n            });\n\n            GoToFixedPhrasePage = new Command(() => Application.Current.MainPage.Navigation.PushAsync(new FixedPhrasePage()));\n\n            Reset = new Command(() =>\n            {\n                TweetText = \"\";\n                WordCount = Model.WordCount;\n            });\n        }\n\n        public void Initialize()\n        {\n            TweetText = Model.TweetText;\n            WordCount = Model.WordCount;\n        }\n\n        public string TweetText\n        {\n            get { return Model.TweetText; }\n            set\n            {\n                Model.TweetText = value;\n                OnPropertyChanged(\"TweetText\");\n            }\n        }\n\n        public int WordCount\n        {\n            get { return Model.WordCount; }\n            set\n            {\n                Model.WordCount = value;\n                OnPropertyChanged(\"WordCount\");\n            }\n        }\n    }\n}\n```\n\n##FixedPhrasePage.xaml\n\u5b9a\u5f62\u6587\u3092\u9078\u629e\u3067\u304d\u308b\u30da\u30fc\u30b8\u3067\u3059\u3002\u3068\u308a\u3042\u3048\u305a2\u500b\u3060\u3051\u7f6e\u3044\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\n```xml:FixedPhrasePage.xaml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<ContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\" \n\t\t\t xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\" \n\t\t\t x:Class=\"TwitterSample.FixedPhrasePage\" \n\t\t\t Title=\"\u5b9a\u5f62\u6587\u3092\u9078\u3093\u3067\u306d\">\n\t<ContentPage.Content>\n\t\t<ScrollView Padding=\"10,20,10,0\">\n\t\t\t<StackLayout>\n\t\t\t\t<Button Command=\"{Binding SetFixedPhrase}\" Text=\"\u9032\u6357\u30c0\u30e1\u3067\u3059\" CommandParameter=\"\u9032\u6357\u30c0\u30e1\u3067\u3059\" />\n\t\t\t\t<Button Command=\"{Binding SetFixedPhrase}\" Text=\"\u304a\u8179\u75db\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\" CommandParameter=\"\u304a\u8179\u75db\u3044(\u00b4\u30fb\u03c9\u30fb\uff40)\" />\n\t\t\t</StackLayout>\n\t\t</ScrollView>\n\t</ContentPage.Content>\n</ContentPage>\n```\n\n##FixedPhrasePage.xaml.cs\n\u3053\u3053\u3067\u306fInitialize\u30e1\u30bd\u30c3\u30c9\u306f\u4e0d\u8981\u306a\u306e\u3067\u30b7\u30f3\u30d7\u30eb\u306b\u4e0b\u8a18\u3060\u3051\u3067\u3059\u3002\n\n```csharp:FixedPhrasePage.xaml.cs\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public partial class FixedPhrasePage : ContentPage\n    {\n        public FixedPhrasePage()\n        {\n            InitializeComponent();\n\n            BindingContext = new FixedPhrasePageViewModel();\n        }\n    }\n}\n```\n\n##FixedPhrasePageViewModel.cs\nTweetPageView\u306b\u5024\u3092\u53d7\u3051\u6e21\u3059\u305f\u3081\u3001SetFixedPhrase\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u5024\u3092\u5168\u3066Model\u306b\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u4e0b\u8a18\u3067\u9077\u79fb\u5143\u306e\u30da\u30fc\u30b8\u3078\u9077\u79fb(\u623b\u308b)\u3057\u307e\u3059\u3002\nApplication.Current.MainPage.Navigation.PopAsync()\n\n```csharp:FixedPhrasePageViewModel\nusing System.Windows.Input;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class FixedPhrasePageViewModel : ViewModelBase\n    {\n        public ICommand SetFixedPhrase { get; set; }\n\n        Model Model = Model.Instance;\n\n        public FixedPhrasePageViewModel()\n        {\n            SetFixedPhrase = new Command<string>((arg) =>\n            {\n                Model.TweetText = arg;\n                Model.WordCount = Model.TweetText.Length;\n                Application.Current.MainPage.Navigation.PopAsync();\n            });\n        }\n    }\n}\n```\n\n##TwitterSample.cs\nTabbedpage\u306eIcon\u306bFontAwesome\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u3001Iconize plugin\u306e\u6a5f\u80fd\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u306f\u3001\u305d\u306eUI\u90e8\u5206\u3060\u3051C#\u3067\u306a\u3044\u3068\u30c0\u30e1\u306a\u3088\u3046\u306a\u306e\u3067(\u3082\u3057\u304b\u3057\u305f\u3089XAML\u3067\u66f8\u3051\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093)C#\u3067\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n\u8ffd\u8a18\uff1aXAML\u3067\u3082\u66f8\u3051\u307e\u3057\u305f\u3002\n\nTabbedPage\u306eChildren\u3068\u3057\u3066\u3001MainPage\u3068TweetPage\u3092\u8ffd\u52a0\u3057\u3001\u305d\u308c\u305e\u308c\u306bIcon\u3092\u5272\u308a\u5f53\u3066\u3066\u3044\u307e\u3059\u3002\n\n```csharp:TwitterSample.cs\nusing FormsPlugin.Iconize;\nusing Xamarin.Forms;\n\nnamespace TwitterSample\n{\n    public class App : Application\n    {\n        public App()\n        {\n            // The root page of your application\n\n            //Iconize\u30e9\u30a4\u30d6\u30e9\u30ea\u306eIconTabbedPage\u3092\u4f7f\u7528\u3059\u308b\u70ba\u3001TabbedPage\u306e\u751f\u6210\u306e\u307fXAML\u3067\u306f\u306a\u304fC#\u3067\u8a18\u8f09\u3002\n            var TabbedPage = new IconTabbedPage { Title = \"Twitter\" };\n\n            foreach (var module in Plugin.Iconize.Iconize.Modules)\n            {\n                TabbedPage.Children.Add(new MainPage\n                {\n                    BindingContext = new MainPageViewModel(),\n                    Icon = \"fa-home\"\n                });\n\n                TabbedPage.Children.Add(new TweetPage\n                {\n                    BindingContext = new TweetPageViewModel(),\n                    Icon = \"fa-twitter\"\n                });\n            }\n\n            MainPage = new IconNavigationPage(TabbedPage);\n        }\n\n        protected override void OnStart()\n        {\n            // Handle when your app starts\n        }\n\n        protected override void OnSleep()\n        {\n            // Handle when your app sleeps\n        }\n\n        protected override void OnResume()\n        {\n            // Handle when your app resumes\n        }\n    }\n}\n```\n\n#\u307e\u3068\u3081\nXamarin.Forms\u3001\u307e\u3060\u307e\u3060\u60c5\u5831\u304c\u5c11\u306a\u304f\u3066\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u611f\u3058\u3082\u3057\u307e\u3059\u304c\u3001\n\u5358\u7d14\u306a\u30a2\u30d7\u30ea\u306a\u3089\u7c21\u5358\u306b\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u958b\u767a\u304c\u3067\u304d\u3066\u697d\u3057\u3044\u3067\u3059\u306d(\u2229\u00b4\u2200\uff40)\u2229\n", "tags": ["Xamarin", "Xamarin.Forms"]}