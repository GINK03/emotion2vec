{"context": " More than 1 year has passed since last update.Vim\u306b\u306ftextmate\u3061\u3063\u304f\u306asnippet\u88dc\u5b8c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\nneocomplcache-snippets-complete, snipMate, UltiSnip\u306a\u3069\u306a\u3069\u3002\n\u79c1\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3001neocomplcache-snippets-complete\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u6642\u306e\u6d41\u308c\u306b\u3064\u3044\u3066\u306e\u8a71\u3067\u3059\u3002\nneocomplecache\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u88dc\u5b8c\u304c\u7d71\u5408\u3055\u308c\u308b\u306e\u3067\u3001neocomplecache\u30e6\u30fc\u30b6\u30fc\u306f\u5927\u4f53\u3053\u308c\u306b\u843d\u3061\u7740\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u8abf\u3079\u305f\u3068\u3053\u308d\u3060\u3068\u3001UltiSnip\u306f\u304b\u306a\u308a\u9ad8\u6a5f\u80fd\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001python\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5fc5\u8981\u3067\u3001\u3061\u3087\u3063\u3068\u8907\u96d1\u904e\u304e\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u8aad\u307f\u8fbc\u307f\u306e\u30eb\u30fc\u30eb\n\u73fe\u5728\u306eneocomplecache\u306f\u3001\u5185\u90e8\u3067vim\u306e\u30d0\u30c3\u30d5\u30a1\u304c\u6301\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3068\u306f\u5225\u306b\u3001\n\u72ec\u81ea\u306e\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u6700\u8fd1\u306b\u306a\u3063\u3066(8\u6708\u5f8c\u534a\u3050\u3089\u3044)\u3001NeoComplCacheSetFileType\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\nneocomplecache\u304c\u3069\u306efiletype\u3067\u88dc\u5b8c\u3092\u884c\u3046\u304b\u3092\u3001vim\u672c\u4f53\u306efiletype\u3068\u306f\u72ec\u7acb\u3057\u3066\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001neocomplecache\u3067\u306f\u8907\u5408\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3001\nruby.rails\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001ruby\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u306e\u88dc\u5b8c\u8a2d\u5b9a\u3068\u3001\nrails\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u306e\u88dc\u5b8c\u8a2d\u5b9a\u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e00\u65b9\u3067\u3001rails\u3067\u958b\u767a\u3092\u3057\u3066\u3044\u308b\u3068vim-rails\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u305d\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304crails\u3067\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001vim\u306efiletype\u3092ruby.rails\u306b\u3059\u308b\u3068\u3001\u305d\u306e\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3060\u3068\u3053\u308d\u3001filetype\u304cruby\u3058\u3083\u306a\u3044\u3068\u99c4\u76ee\u307f\u305f\u3044\u3067\u3001\u305d\u3046\u3044\u3046\u4ed5\u69d8\u306e\u3088\u3046\u3067\u3059\u3002\n\u306a\u306e\u3067\u3001rails\u3067\u66f8\u3044\u3066\u3044\u308b\u5834\u5408\u306f\u51fa\u6765\u308c\u3070\u8907\u5408\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\u3002\n\u3067\u3001\u4ee5\u524d\u306a\u3089\u3070\u3001snippet\u3092\u5168\u90e8\u3001ruby\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304f\u3068\u3044\u3046\u624b\u6bb5\u304c\u53d6\u308c\u305f\u306e\u3067\u3059\u304c\u3001\nrails\u5916\u3067\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u308b\u6642\u306brails\u306esnippet\u306f\u5fc5\u8981\u7121\u3044\u308f\u3051\u3067\u3001\u3069\u3046\u3082\u30b9\u30de\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\n\u305d\u3053\u3067\u3001NeoComplCacheSetFileType\u304c\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u8a2d\u5b9a\u4f8b\nvim-rails\u306f\u3001rails\u3063\u307d\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068b:rails_root\u3068\u3044\u3046\u30d0\u30c3\u30d5\u30a1\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u306e\u5909\u6570\u306e\u6709\u7121\u3067rails\u304b\u3069\u3046\u304b\u3092\u5bb9\u6613\u306b\u5224\u5225\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nautocmd BufEnter * if exists(\"b:rails_root\") | NeoComplCacheSetFileType ruby.rails | endif\nautocmd BufEnter * if (expand(\"%\") =~ \"_spec\\.rb$\") || (expand(\"%\") =~ \"^spec.*\\.rb$\") | NeoComplCacheSetFileType ruby.rspec | endif\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u304a\u3051\u3070\u3001rails\u306e\u6642\u3060\u3051\u3001neocomplecache\u306e\u307fruby\u3068rails\u306e\u4e21\u65b9\u306e\u88dc\u5b8c\u8a2d\u5b9a\u3092\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002\n\u4e0b\u306erspec\u5411\u3051\u306e\u8a2d\u5b9a\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3067rspec\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001ruby.snip\u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308bsnippet\u3082\u3001rails.snip\u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308bsnippet\u3082\u3001\n\u671b\u3080\u901a\u308a\u306e\u74b0\u5883\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nlet g:neocomplcache_snippets_dir = $HOME . '/.vim/snippets'\nnnoremap <Space>se :<C-U>NeoComplCacheEditSnippets<CR>\n\n\u5f8c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001snippet\u306e\u683c\u7d0d\u5834\u6240\u3092\u8a2d\u5b9a\u3057\u3001snippet\u7de8\u96c6\u7528\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3055\u3063\u3068\u547c\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u78ba\u8a8d\u3059\u308b\u306e\u3082\u697d\u3067\u3059\u3002\n\" SuperTab like snippets behavior.\nimap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? \"\\<Plug>(neocomplcache_snippets_expand)\" : pumvisible() ? \"\\<C-n>\" : \"\\<TAB>\"\n\n\u4eca\u306e\u3068\u3053\u308d\u3001snippet\u306e\u5c55\u958b\u306b\u3064\u3044\u3066\u306f\u3001neocomplecache\u306e\u8a2d\u5b9a\u4f8b\u306b\u3042\u308b\u3088\u3046\u306b\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307e\u3059\u3002\n\u5f8c\u306f\u3001\u79c1\u306esnippet\u306b\u3064\u3044\u3066\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u66f8\u5f0f\u306b\u3064\u3044\u3066\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nrails\u306esnip\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u3069\u3046\u3082\u8ca7\u5f31\u306a\u611f\u3058\u306a\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\u3057\u3066\u66f8\u304d\u63db\u3048\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e00\u90e8\u3001snipMate\u3084UltiSnip\u3092\u53c2\u8003\u306b\u30d1\u30af\u3063\u3066\u304d\u3066\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\nrspec\u5468\u308a\u306f\u30b3\u30d4\u30da\u30d9\u30fc\u30b9\u3067\u3001\u307e\u3060\u3061\u3087\u3063\u3068\u9069\u5f53\u306a\u306e\u3067\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\nruby.snip\nsnippet encutf\nabbr # coding: utf-8\n    # coding: utf-8\n\nalias encutf magic\n\nsnippet class\nabbr    class end\n    class ${1:name}\n      ${2}\n    end\n\nsnippet mod\nabbr    module end\n    module ${1:name}\n      ${2}\n    end\n\nsnippet defi\nabbr    def initialize(...\n    def initialize${1:(${2:args\\})}\n        ${3}\n    end\n\nsnippet unless\nabbr    unless end\n    unless ${1:condition}\n        ${2}\n    end\n\nsnippet ife\nabbr    if else end\n    if ${1:condition}\n        ${2}\n    else\n        ${3}\n    end\n\nsnippet ifei\nabbr    if elsif end\n    if ${1:condition}\n        ${2}\n    elsif ${3:condition}\n        ${4}\n    end\n\nsnippet case\nabbr    case when end\n    case ${1:var}\n    when ${2:expr}\n      ${3}\n    end\n\nalias case sw\n\nsnippet inj\nabbr    inject(n) do end\n    inject(${1:initial}) do |${2:acc}, ${3:val}|\n        ${4}\n    end\n\nsnippet injp\nabbr    inject(n, &:method)\n    inject(${1:initial}, &:${2:method})\n\nsnippet eacho\nabbr    each_with_object(obj) do end\n    each_with_object(${1:memoobj}) do |${2:val}, ${3:memoobj}|\n        ${4}\n    end\n\nsnippet map\nabbr    map do end\n    map do |${1:var}|\n        ${2}\n    end\n\nsnippet mapp\nabbr    map(&:method)\n    map(&:${1:method})\n\nsnippet sortby\nabbr    sort_by(&:method)\n    sort_by(&:${1:method})\n\nalias sortby sort_by\n\nsnippet sortbydo\nabbr    sort_by do end\n    sort_by do |${1:var}|\n        ${2}\n    end\n\nsnippet begin\nabbr    begin rescue end\n    begin\n        ${1:# TODO}\n    rescue\n        ${2:# TODO}\n    end\n\n\n\nrails.snip\nsnippet sc\nabbr    scope :method, lambda\nprev_word   '^'\n    scope :${1}, lambda { ${2} }\n\nsnippet dsc\nabbr    default_scope lambda\nprev_word   '^'\n    default_scope lambda { ${1} }\n\nsnippet bff\nabbr    before_filter\nprev_word   '^'\n    before_filter :${1:method}\n\ndelete      hm\nsnippet     hm\nabbr        has_many :objects\nprev_word   '^'\n    has_many :${1:objects}\n\nalias hm has_m\n\nsnippet     hmo\nabbr        has_many with options\nprev_word   '^'\n    has_many :${1:objects}${2:, class_name: \"${3\\}\", foreign_key: \"${4:reference\\}_id\"}\n\nsnippet     hmt\nabbr        has_many :objects, :through\nprev_word   '^'\n    has_many :${1:objects}, through: ${2:relation}\n\ndelete      ho\nsnippet     ho\nabbr        has_one :object\nprev_word   '^'\n    has_one :${1:object}\n\nalias ho has_o\n\ndelete      bt\nsnippet     bt\nabbr        belongs_to :object\nprev_word   '^'\n    belongs_to :${1:object}\n\nalias bt bel\n\nsnippet bto\nabbr        belongs_to with options\nprev_word   '^'\n    belongs_to :${1:object}${2:, class_name: \"${3\\}\", foreign_key: \"${4:reference\\}_id\"}\n\ndelete      logd\nsnippet     logd\nabbr        logger.debug\n    logger.debug(${1})\n\ndelete      logi\nsnippet     logi\nabbr        logger.info\n    logger.info(${1})\n\ndelete      logw\nsnippet     logw\nabbr        logger.warn\n    logger.warn(${1})\n\ndelete      loge\nsnippet     loge\nabbr        logger.error\n    logger.error(${1})\n\ndelete      logf\nsnippet     logf\nabbr        logger.fatal\n    logger.fatal(${1})\n\nsnippet     fla\nabbr        flash[...]\nprev_word   '^'\n    flash[:${1:notice}] = \"${2:Successfully created...}\"\n\nalias fla flash\n\nsnippet rep\nabbr redirect_to (path)\n    redirect_to ${1:model}_path${2:(${3:params\\})}\n\ndelete      va\nsnippet     va\nabbr        validates_associated\n    validates_associated :${1:attr}\n\ndelete      vb\nsnippet     vb\nabbr        validates_acceptance_of\n    validates_acceptance_of :${1:attr}\n\ndelete      vc\nsnippet     vc\nabbr        validates_confirmation_of\n    validates_confirmation_of :${1:attr}\n\ndelete      ve\nsnippet     ve\nabbr        validates_exclusion_of\n    validates_exclusion_of :${1:attr}, in: ${2:%w( ${3:mov avi\\} )}\n\ndelete      vf\nsnippet     vf\nabbr        validates_format_of\n    validates_format_of :${1:attr}, with: /${2:regexp}/\n\ndelete      vi\nsnippet     vi\nabbr        validates_inclusion_of\n    validates_inclusion_of :${1:attr}, in: ${2:%w( ${3:mov avi\\} )}\n\ndelete      vl\nsnippet     vl\nabbr        validates_length_of\n    validates_length_of :${1:attr}, within: ${2:3..20}\n\ndelete      vn\nsnippet     vn\nabbr        validates_numericality_of\n    validates_numericality_of :${1:attr}\n\nsnippet     vng\nabbr        validates_numericality_of greater_than: n\n    validates_numericality_of :${1:attr}, greater_than: ${2:num}\n\nsnippet     vnl\nabbr        validates_numericality_of less_than: n\n    validates_numericality_of :${1:attr}, less_than: ${2:num}\n\ndelete      vp\nsnippet     vp\nabbr        validates_presence_of\n    validates_presence_of :${1:attr}\n\ndelete      vu\nsnippet     vu\nabbr        validates_uniqueness_of\n    validates_uniqueness_of :${1:attr}\n\nsnippet     aln\nabbr        allow_nil\n    allow_nil: ${1:true}\n\ndelete      ra\nsnippet     ra\nabbr        render :action\n    render action: ${1}\n\ndelete      rc\nsnippet     rc\nabbr        render :controller\n    render controller: ${1}\n\ndelete      rf\nsnippet     rf\nabbr        render :file\n    render file: ${1}\n\ndelete      ri\nsnippet     ri\nabbr        render :inline\n    render inline: ${1}\n\ndelete      rj\nsnippet     rj\nabbr        render :json\n    render json: ${1}\n\ndelete      rl\nsnippet     rl\nabbr        render :layout\n    render layout: ${1}\n\ndelete      rp\nsnippet     rp\nabbr        render :partial\n    render partial: ${1}\n\ndelete      rt\nsnippet     rt\nabbr        render :text\n    render text: ${1}\n\ndelete      rx\nsnippet     rx\nabbr        render :xml\n    render xml: ${1}\n\ndelete id\n\ndelete object\n\ndelete partial\n\ndelete      action\nsnippet     action\nabbr        action: name\n    action: ${1}\n\nsnippet     tzn\nabbr        Time.zone.now\n  Time.zone.now\n\nsnippet     res\nabbr        resources\nprev_word   '^'\n    resources :${1:resources}\n\nalias res resources\n\ndelete      rst\nsnippet     rst\nabbr        respond_to\nprev_word   '^'\n    respond_to do |format|\n        format.html${1: { ${2\\} \\}}\n        format.json { render json: ${3} }\n    end\n\nsnippet     befs\nabbr        before_save\nprev_word   '^'\n    before_save :${1:method}\n\nsnippet     befc\nabbr        before_create\nprev_word   '^'\n    before_create :${1:method}\n\nsnippet     befu\nabbr        before_update\nprev_word   '^'\n    before_update :${1:method}\n\nsnippet     befv\nabbr        before_validation\nprev_word   '^'\n    before_validation :${1:method}\n\nsnippet     befvc\nabbr        before_validation_on_create\nprev_word   '^'\n    before_validation_on_create :${1:method}\n\nsnippet     befvu\nabbr        before_validation_on_update\nprev_word   '^'\n    before_validation_on_update :${1:method}\n\nsnippet     befd\nabbr        before_destroy\nprev_word   '^'\n    before_destroy :${1:method}\n\nsnippet     afts\nabbr        after_save\nprev_word   '^'\n    after_save :${1:method}\n\nsnippet     aftc\nabbr        after_create\nprev_word   '^'\n    after_create :${1:method}\n\nsnippet     aftu\nabbr        after_update\nprev_word   '^'\n    after_update :${1:method}\n\nsnippet     aftv\nabbr        after_validation\nprev_word   '^'\n    after_validation :${1:method}\n\nsnippet     aftvc\nabbr        after_validation_on_create\nprev_word   '^'\n    after_validation_on_create :${1:method}\n\nsnippet     aftvu\nabbr        after_validation_on_update\nprev_word   '^'\n    after_validation_on_update :${1:method}\n\nsnippet     aftd\nabbr        after_destroy\nprev_word   '^'\n    after_destroy :${1:method}\n\nsnippet     try\nabbr        try(:method)\n    try(:${1:method})\n\n\n\nrspec.snip\nsnippet desc\nabbr    describe end\nprev_word '^'\n    describe \"${1:name}\" do\n        ${2}\n    end\n\nsnippet desch\nabbr    spec_helper describe\n    require 'spec_helper'\n\n    describe ${1:`Snippet_RubySpecNameFromFilename()`} do\n        ${2}\n    end\n\nsnippet desccon\n    describe \"${1:GET|POST|PUT|DELETE} ${2:/some/path}${3}\" do\n        ${4}\n    end\n\nsnippet bef\n    before do\n        ${1}\n    end\n\nalias bef before\n\nsnippet befa\n    before(:all) do\n        ${1}\n    end\n\nalias befa beforeall\n\nsnippet aft\n    after do\n        ${1}\n    end\n\nalias aft after\n\nsnippet afta\n    after(:all) do\n        ${1}\n    end\n\nalias afta afterall\n\nsnippet con\n    context \"${1}\" do\n        ${2}\n    end\n\nalias con context\n\nsnippet cona\nabbr context after callback\n    context \"after #${1:save!}\" do\n        before do\n            subject.$1\n        end\n        ${2}\n    end\n\nsnippet subjc\n    subject { ${1:FactoryGirl.create(:${2:name\\})} }\n\nsnippet subjb\n    subject { ${1:FactoryGirl.build(:${2:name\\})} }\n\nsnippet it\n    it \"${1}\" do\n        ${2}\n    end\n\nsnippet itb\nabbr        it {}\n        it { ${1} }\n\nsnippet its\n    it \"should ${1:work correctly}\" do\n        ${2}\n    end\n\nsnippet is\n    it { should ${1} }\n\nsnippet isn\n    it { should_not ${1} }\n\nsnippet sh\n    should == ${1:value}\n    ${2}\n\nsnippet shn\n    should_not == ${1:value}\n    ${2}\n\nsnippet shs\n    should satisfy { |${1:obj}| ${2} }\n    ${3}\n\nsnippet shp\n    should be_${1:predicate}\n\nalias shp shbe\n\nsnippet shh\n    should have(${1:num}).${2:things}\n    ${3}\n\nsnippet she\n    should eq(${1:value})\n    ${3}\n\nsnippet shne\n    should_not eq(${1:value})\n    ${2}\n\nsnippet shnredt\n    response.should_not redirect_to(${1:url})\n    ${2}\n\nsnippet shbw\n    should be_within(${1:tolerance}).of(${2:result})\n    ${3}\n\nsnippet shnbw\n    should_not be_within(${1:tolerance}).of(${2:result})\n    ${4}\n\nsnippet shhal\n    should have_at_least(${1:num}).${2:things}\n    ${3}\n\nsnippet shhi\n    should have(${1:n}).records\n    ${2}\n\nsnippet shns\n    should_not satisfy { |${1:obj}| ${2} }\n    ${3}\n\nsnippet shbko\n    should be_a_kind_of(${1:class})\n    ${2}\n\nsnippet shnbko\n    should_not be_a_kind_of(${1:klass})\n    ${2}\n\nsnippet shnbe\n    .should_not be_${1:predicate}\n\nsnippet shre\n    should raise_error(${1:error})\n    ${2}\n\nsnippet shnre\n    should_not raise_error(${1:error})\n    ${2}\n\nalias shre shraise\n\nsnippet shc\n    expect {\n        ${1}\n    }.should change(${2:described_class}, :${3:count}).by(${4:1})\n\nalias shc exshc\n\nsnippet shnc\n    expect {\n        ${1}\n    }.should_not change(${2:target}, :${3:method})\n\nsnippet shrt\n    should respond_to(:${1:sym})\n    ${2}\n\nsnippet shnrt\n    should_not respond_to(:${1:sym})\n    ${2}\n\nsnippet shr\n    should_receive(:${1:message})${2}\n    ${3}\n\nsnippet shnr\n    should_not_receive(:${1:message})${2}\n    ${3}\n\nsnippet wia\n    with(${1:args})\n    ${2}\n\nsnippet shm\n    should match(/${1:regexp}/)\n    ${2}\n\nsnippet shnm\n    should_not match(/${1:regexp}/)\n    ${2}\n\nsnippet shredt\n    response.should redirect_to(${1:url})\n    ${2}\n\nsnippet shbr\n    response.should be_redirect\n    ${1}\n\nsnippet shnbr\n    response.should_not be_redirect\n    ${1}\n\nsnippet shbs\n    response.should be_success\n    ${1}\n\nsnippet shnbs\n    response.should_not be_success\n    ${1}\n\nsnippet shtemp\n    response.should render_template(:${1:template})\n    ${2}\n\nsnippet shbio\n    should be_instance_of(${1:class})\n    ${2}\n\nsnippet shnbio\n    should_not be_instance_of(${1:klass})\n    ${2}\n\nsnippet sc\nabbr shared_context do end\n    shared_context \"${1:condition}\" do\n        ${2}\n    end\n\nalias sc shared_context\n\nsnippet scm\nabbr shared_context with metadata\n    shared_context \"${1:condition}\", :${2:key} => ${3:value} do\n        ${4}\n    end\n\nsnippet inc\nabbr include_context\n    include_context \"${1}\"\n\nalias inc include_context\n\nsnippet se\nabbr shared_examples do end\n    shared_examples \"${1:do something}\" do\n        ${2}\n    end\n\nalias se shared_examples\n\nsnippet sed\n    shared_examples \"${1:}\" do\n        describe \"as $1\" do\n            ${2}\n        end\n    end\n\nsnippet ibl\nabbr it_behaves_like\n    it_behaves_like '${1}'\n\nalias ibl it_behaves\n\nsnippet ine\nabbr include_examples\n    include_examples \"${1}\"\n\nalias ine include_examples\n\nsnippet let\nabbr let {}\n    let(:${1}) { ${2} }\n\nsnippet let!\nabbr let! {}\n    let!(:${1}) { ${2} }\n\nsnippet letf\n    let(:${1:model}) do \n        FactoryGirl.create(:${2:$1})\n    end\n\nsnippet atl\n    at_least(${1:n}).times\n\nsnippet atm\n    at_most(${1:n}).times\n\nsnippet on\n    once\n\nsnippet tw\n    twice\n\nsnippet ber\n    be_redirect\n\nsnippet ex\n    exactly(${1:n}).times\n\nalias ex exact\n\nsnippet annot\n    any_number_of_times\n\nsnippet shham\n    ${1:target}.should have_at_most(${2:num}).${3:things}\n    ${4}\n\nsnippet ant\n    and_throw(${1:sym})\n\nsnippet any\n    and_yield(${1:values})\n\nsnippet mat\n    RSpec::Matchers.define :${1:matcher_name} do\n        match do |model|\n            # return Boolean\n            ${2}\n        end\n    end\n\nalias mat matcher\n\n\nsnippet anr\n    and_return(${1:value})\n\nsnippet anrb\n    and_return { ${1} }\n\nsnippet anra\n    and_raise(${1:exception})\n\nsnippet st\n    stub(:${1:method}).and_returns(${2:return})\n\nalias st stub\n\nsnippet sm\n    stub_model(${1:model}, {${2}})\nsnippet mm\n    mock_model(${1:model})${2}\n\nsnippet moc\n    ${1:var} = mock(\"${2:mock_name}\"${3:, :null_object => true})\n    ${4}\n\nsnippet facb\n    FactoryGirl.build(:${1})\n\nsnippet fac\n    FactoryGirl(:${1}, ${2})\n\nsnippet facc\n    FactoryGirl.create(:${1})\n\nsnippet facs\n    sequence(:${1}) {|n| \"${2}#{n}\"}\n\nsnippet facn\n    FactoryGirl.next(:${1:sequence-name})\n\nsnippet faca\n    f.${1:model} {|a| a.association(:${2:$1})}\n\nsnippet facd\n    FactoryGirl.define do\n        ${1}\n    end\n\nsnippet facf\n    factory ${1:name} do\n        ${2}\n    end\n\n\nVim\u306b\u306ftextmate\u3061\u3063\u304f\u306asnippet\u88dc\u5b8c\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\u3002\n[neocomplcache-snippets-complete](https://github.com/Shougo/neocomplcache-snippets-complete), [snipMate](https://github.com/garbas/vim-snipmate), [UltiSnip](https://github.com/guns/ultisnips)\u306a\u3069\u306a\u3069\u3002\n\n\u79c1\u304c\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306f\u3001neocomplcache-snippets-complete\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3059\u308b\u6642\u306e\u6d41\u308c\u306b\u3064\u3044\u3066\u306e\u8a71\u3067\u3059\u3002\nneocomplecache\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u3001\u88dc\u5b8c\u304c\u7d71\u5408\u3055\u308c\u308b\u306e\u3067\u3001neocomplecache\u30e6\u30fc\u30b6\u30fc\u306f\u5927\u4f53\u3053\u308c\u306b\u843d\u3061\u7740\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\u3061\u3087\u3063\u3068\u8abf\u3079\u305f\u3068\u3053\u308d\u3060\u3068\u3001UltiSnip\u306f\u304b\u306a\u308a\u9ad8\u6a5f\u80fd\u3063\u307d\u3044\u306e\u3067\u3059\u304c\u3001python\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5fc5\u8981\u3067\u3001\u3061\u3087\u3063\u3068\u8907\u96d1\u904e\u304e\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## \u8aad\u307f\u8fbc\u307f\u306e\u30eb\u30fc\u30eb\n\u73fe\u5728\u306eneocomplecache\u306f\u3001\u5185\u90e8\u3067vim\u306e\u30d0\u30c3\u30d5\u30a1\u304c\u6301\u3063\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3068\u306f\u5225\u306b\u3001\n\u72ec\u81ea\u306e\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\u6700\u8fd1\u306b\u306a\u3063\u3066(8\u6708\u5f8c\u534a\u3050\u3089\u3044)\u3001NeoComplCacheSetFileType\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3001\nneocomplecache\u304c\u3069\u306efiletype\u3067\u88dc\u5b8c\u3092\u884c\u3046\u304b\u3092\u3001vim\u672c\u4f53\u306efiletype\u3068\u306f\u72ec\u7acb\u3057\u3066\u8a2d\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u307e\u305f\u3001neocomplecache\u3067\u306f\u8907\u5408\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u3067\u3001\nruby.rails\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3059\u308c\u3070\u3001ruby\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u306e\u88dc\u5b8c\u8a2d\u5b9a\u3068\u3001\nrails\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306b\u3064\u3044\u3066\u306e\u88dc\u5b8c\u8a2d\u5b9a\u304c\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e00\u65b9\u3067\u3001rails\u3067\u958b\u767a\u3092\u3057\u3066\u3044\u308b\u3068vim-rails\u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\n\u305d\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304crails\u3067\u5ba3\u8a00\u7684\u306b\u8a18\u8ff0\u3059\u308b\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001vim\u306efiletype\u3092ruby.rails\u306b\u3059\u308b\u3068\u3001\u305d\u306e\u30cf\u30a4\u30e9\u30a4\u30c8\u304c\u6d88\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3060\u3068\u3053\u308d\u3001filetype\u304cruby\u3058\u3083\u306a\u3044\u3068\u99c4\u76ee\u307f\u305f\u3044\u3067\u3001\u305d\u3046\u3044\u3046\u4ed5\u69d8\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u306a\u306e\u3067\u3001rails\u3067\u66f8\u3044\u3066\u3044\u308b\u5834\u5408\u306f\u51fa\u6765\u308c\u3070\u8907\u5408\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306f\u4f7f\u3044\u305f\u304f\u306a\u3044\u3002\n\u3067\u3001\u4ee5\u524d\u306a\u3089\u3070\u3001snippet\u3092\u5168\u90e8\u3001ruby\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304f\u3068\u3044\u3046\u624b\u6bb5\u304c\u53d6\u308c\u305f\u306e\u3067\u3059\u304c\u3001\nrails\u5916\u3067\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u308b\u6642\u306brails\u306esnippet\u306f\u5fc5\u8981\u7121\u3044\u308f\u3051\u3067\u3001\u3069\u3046\u3082\u30b9\u30de\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\n\n\u305d\u3053\u3067\u3001NeoComplCacheSetFileType\u304c\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002\n\n## \u8a2d\u5b9a\u4f8b\nvim-rails\u306f\u3001rails\u3063\u307d\u3044\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068b:rails_root\u3068\u3044\u3046\u30d0\u30c3\u30d5\u30a1\u5909\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u3053\u306e\u5909\u6570\u306e\u6709\u7121\u3067rails\u304b\u3069\u3046\u304b\u3092\u5bb9\u6613\u306b\u5224\u5225\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```vim\nautocmd BufEnter * if exists(\"b:rails_root\") | NeoComplCacheSetFileType ruby.rails | endif\nautocmd BufEnter * if (expand(\"%\") =~ \"_spec\\.rb$\") || (expand(\"%\") =~ \"^spec.*\\.rb$\") | NeoComplCacheSetFileType ruby.rspec | endif\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u304a\u3051\u3070\u3001rails\u306e\u6642\u3060\u3051\u3001neocomplecache\u306e\u307fruby\u3068rails\u306e\u4e21\u65b9\u306e\u88dc\u5b8c\u8a2d\u5b9a\u3092\u6d3b\u7528\u3067\u304d\u307e\u3059\u3002\n\u4e0b\u306erspec\u5411\u3051\u306e\u8a2d\u5b9a\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3067rspec\u304b\u3069\u3046\u304b\u3092\u5224\u65ad\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001ruby.snip\u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308bsnippet\u3082\u3001rails.snip\u306b\u5b9a\u7fa9\u3057\u3066\u3042\u308bsnippet\u3082\u3001\n\u671b\u3080\u901a\u308a\u306e\u74b0\u5883\u3067\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```vim\nlet g:neocomplcache_snippets_dir = $HOME . '/.vim/snippets'\nnnoremap <Space>se :<C-U>NeoComplCacheEditSnippets<CR>\n```\n\n\u5f8c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3001snippet\u306e\u683c\u7d0d\u5834\u6240\u3092\u8a2d\u5b9a\u3057\u3001snippet\u7de8\u96c6\u7528\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3055\u3063\u3068\u547c\u3079\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u78ba\u8a8d\u3059\u308b\u306e\u3082\u697d\u3067\u3059\u3002\n\n\n```vim\n\" SuperTab like snippets behavior.\nimap <expr><TAB> neocomplcache#sources#snippets_complete#expandable() ? \"\\<Plug>(neocomplcache_snippets_expand)\" : pumvisible() ? \"\\<C-n>\" : \"\\<TAB>\"\n```\n\n\u4eca\u306e\u3068\u3053\u308d\u3001snippet\u306e\u5c55\u958b\u306b\u3064\u3044\u3066\u306f\u3001neocomplecache\u306e\u8a2d\u5b9a\u4f8b\u306b\u3042\u308b\u3088\u3046\u306b\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u307e\u3059\u3002\n\n\u5f8c\u306f\u3001\u79c1\u306esnippet\u306b\u3064\u3044\u3066\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u66f8\u5f0f\u306b\u3064\u3044\u3066\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nrails\u306esnip\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308b\u306e\u3067\u3059\u304c\u3001\n\u3069\u3046\u3082\u8ca7\u5f31\u306a\u611f\u3058\u306a\u306e\u3067\u3001\u4e00\u65e6\u524a\u9664\u3057\u3066\u66f8\u304d\u63db\u3048\u3066\u3044\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4e00\u90e8\u3001snipMate\u3084UltiSnip\u3092\u53c2\u8003\u306b\u30d1\u30af\u3063\u3066\u304d\u3066\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\nrspec\u5468\u308a\u306f\u30b3\u30d4\u30da\u30d9\u30fc\u30b9\u3067\u3001\u307e\u3060\u3061\u3087\u3063\u3068\u9069\u5f53\u306a\u306e\u3067\u3054\u4e86\u627f\u304f\u3060\u3055\u3044\u3002\n\n```snippet:ruby.snip\nsnippet encutf\nabbr # coding: utf-8\n    # coding: utf-8\n\nalias encutf magic\n\nsnippet class\nabbr    class end\n    class ${1:name}\n      ${2}\n    end\n\nsnippet mod\nabbr    module end\n    module ${1:name}\n      ${2}\n    end\n\nsnippet defi\nabbr    def initialize(...\n    def initialize${1:(${2:args\\})}\n        ${3}\n    end\n\nsnippet unless\nabbr    unless end\n    unless ${1:condition}\n        ${2}\n    end\n\nsnippet ife\nabbr    if else end\n    if ${1:condition}\n        ${2}\n    else\n        ${3}\n    end\n\nsnippet ifei\nabbr    if elsif end\n    if ${1:condition}\n        ${2}\n    elsif ${3:condition}\n        ${4}\n    end\n\nsnippet case\nabbr    case when end\n    case ${1:var}\n    when ${2:expr}\n      ${3}\n    end\n\nalias case sw\n\nsnippet inj\nabbr    inject(n) do end\n    inject(${1:initial}) do |${2:acc}, ${3:val}|\n        ${4}\n    end\n\nsnippet injp\nabbr    inject(n, &:method)\n    inject(${1:initial}, &:${2:method})\n\nsnippet eacho\nabbr    each_with_object(obj) do end\n    each_with_object(${1:memoobj}) do |${2:val}, ${3:memoobj}|\n        ${4}\n    end\n\nsnippet map\nabbr    map do end\n    map do |${1:var}|\n        ${2}\n    end\n\nsnippet mapp\nabbr    map(&:method)\n    map(&:${1:method})\n\nsnippet sortby\nabbr    sort_by(&:method)\n    sort_by(&:${1:method})\n\nalias sortby sort_by\n\nsnippet sortbydo\nabbr    sort_by do end\n    sort_by do |${1:var}|\n        ${2}\n    end\n\nsnippet begin\nabbr    begin rescue end\n    begin\n        ${1:# TODO}\n    rescue\n        ${2:# TODO}\n    end\n```\n\n```snippet:rails.snip\nsnippet sc\nabbr    scope :method, lambda\nprev_word   '^'\n    scope :${1}, lambda { ${2} }\n\nsnippet dsc\nabbr    default_scope lambda\nprev_word   '^'\n    default_scope lambda { ${1} }\n\nsnippet bff\nabbr    before_filter\nprev_word   '^'\n    before_filter :${1:method}\n\ndelete      hm\nsnippet     hm\nabbr        has_many :objects\nprev_word   '^'\n    has_many :${1:objects}\n\nalias hm has_m\n\nsnippet     hmo\nabbr        has_many with options\nprev_word   '^'\n    has_many :${1:objects}${2:, class_name: \"${3\\}\", foreign_key: \"${4:reference\\}_id\"}\n\nsnippet     hmt\nabbr        has_many :objects, :through\nprev_word   '^'\n    has_many :${1:objects}, through: ${2:relation}\n\ndelete      ho\nsnippet     ho\nabbr        has_one :object\nprev_word   '^'\n    has_one :${1:object}\n\nalias ho has_o\n\ndelete      bt\nsnippet     bt\nabbr        belongs_to :object\nprev_word   '^'\n    belongs_to :${1:object}\n\nalias bt bel\n\nsnippet bto\nabbr        belongs_to with options\nprev_word   '^'\n    belongs_to :${1:object}${2:, class_name: \"${3\\}\", foreign_key: \"${4:reference\\}_id\"}\n\ndelete      logd\nsnippet     logd\nabbr        logger.debug\n    logger.debug(${1})\n\ndelete      logi\nsnippet     logi\nabbr        logger.info\n    logger.info(${1})\n\ndelete      logw\nsnippet     logw\nabbr        logger.warn\n    logger.warn(${1})\n\ndelete      loge\nsnippet     loge\nabbr        logger.error\n    logger.error(${1})\n\ndelete      logf\nsnippet     logf\nabbr        logger.fatal\n    logger.fatal(${1})\n\nsnippet     fla\nabbr        flash[...]\nprev_word   '^'\n    flash[:${1:notice}] = \"${2:Successfully created...}\"\n\nalias fla flash\n\nsnippet rep\nabbr redirect_to (path)\n    redirect_to ${1:model}_path${2:(${3:params\\})}\n\ndelete      va\nsnippet     va\nabbr        validates_associated\n    validates_associated :${1:attr}\n\ndelete      vb\nsnippet     vb\nabbr        validates_acceptance_of\n    validates_acceptance_of :${1:attr}\n\ndelete      vc\nsnippet     vc\nabbr        validates_confirmation_of\n    validates_confirmation_of :${1:attr}\n\ndelete      ve\nsnippet     ve\nabbr        validates_exclusion_of\n    validates_exclusion_of :${1:attr}, in: ${2:%w( ${3:mov avi\\} )}\n\ndelete      vf\nsnippet     vf\nabbr        validates_format_of\n    validates_format_of :${1:attr}, with: /${2:regexp}/\n\ndelete      vi\nsnippet     vi\nabbr        validates_inclusion_of\n    validates_inclusion_of :${1:attr}, in: ${2:%w( ${3:mov avi\\} )}\n\ndelete      vl\nsnippet     vl\nabbr        validates_length_of\n    validates_length_of :${1:attr}, within: ${2:3..20}\n\ndelete      vn\nsnippet     vn\nabbr        validates_numericality_of\n    validates_numericality_of :${1:attr}\n\nsnippet     vng\nabbr        validates_numericality_of greater_than: n\n    validates_numericality_of :${1:attr}, greater_than: ${2:num}\n\nsnippet     vnl\nabbr        validates_numericality_of less_than: n\n    validates_numericality_of :${1:attr}, less_than: ${2:num}\n\ndelete      vp\nsnippet     vp\nabbr        validates_presence_of\n    validates_presence_of :${1:attr}\n\ndelete      vu\nsnippet     vu\nabbr        validates_uniqueness_of\n    validates_uniqueness_of :${1:attr}\n\nsnippet     aln\nabbr        allow_nil\n    allow_nil: ${1:true}\n\ndelete      ra\nsnippet     ra\nabbr        render :action\n    render action: ${1}\n\ndelete      rc\nsnippet     rc\nabbr        render :controller\n    render controller: ${1}\n\ndelete      rf\nsnippet     rf\nabbr        render :file\n    render file: ${1}\n\ndelete      ri\nsnippet     ri\nabbr        render :inline\n    render inline: ${1}\n\ndelete      rj\nsnippet     rj\nabbr        render :json\n    render json: ${1}\n\ndelete      rl\nsnippet     rl\nabbr        render :layout\n    render layout: ${1}\n\ndelete      rp\nsnippet     rp\nabbr        render :partial\n    render partial: ${1}\n\ndelete      rt\nsnippet     rt\nabbr        render :text\n    render text: ${1}\n\ndelete      rx\nsnippet     rx\nabbr        render :xml\n    render xml: ${1}\n\ndelete id\n\ndelete object\n\ndelete partial\n\ndelete      action\nsnippet     action\nabbr        action: name\n    action: ${1}\n\nsnippet     tzn\nabbr        Time.zone.now\n  Time.zone.now\n\nsnippet     res\nabbr        resources\nprev_word   '^'\n    resources :${1:resources}\n\nalias res resources\n\ndelete      rst\nsnippet     rst\nabbr        respond_to\nprev_word   '^'\n    respond_to do |format|\n        format.html${1: { ${2\\} \\}}\n        format.json { render json: ${3} }\n    end\n\nsnippet     befs\nabbr        before_save\nprev_word   '^'\n    before_save :${1:method}\n\nsnippet     befc\nabbr        before_create\nprev_word   '^'\n    before_create :${1:method}\n\nsnippet     befu\nabbr        before_update\nprev_word   '^'\n    before_update :${1:method}\n\nsnippet     befv\nabbr        before_validation\nprev_word   '^'\n    before_validation :${1:method}\n\nsnippet     befvc\nabbr        before_validation_on_create\nprev_word   '^'\n    before_validation_on_create :${1:method}\n\nsnippet     befvu\nabbr        before_validation_on_update\nprev_word   '^'\n    before_validation_on_update :${1:method}\n\nsnippet     befd\nabbr        before_destroy\nprev_word   '^'\n    before_destroy :${1:method}\n\nsnippet     afts\nabbr        after_save\nprev_word   '^'\n    after_save :${1:method}\n\nsnippet     aftc\nabbr        after_create\nprev_word   '^'\n    after_create :${1:method}\n\nsnippet     aftu\nabbr        after_update\nprev_word   '^'\n    after_update :${1:method}\n\nsnippet     aftv\nabbr        after_validation\nprev_word   '^'\n    after_validation :${1:method}\n\nsnippet     aftvc\nabbr        after_validation_on_create\nprev_word   '^'\n    after_validation_on_create :${1:method}\n\nsnippet     aftvu\nabbr        after_validation_on_update\nprev_word   '^'\n    after_validation_on_update :${1:method}\n\nsnippet     aftd\nabbr        after_destroy\nprev_word   '^'\n    after_destroy :${1:method}\n\nsnippet     try\nabbr        try(:method)\n    try(:${1:method})\n```\n\n```snippet:rspec.snip\nsnippet desc\nabbr    describe end\nprev_word '^'\n    describe \"${1:name}\" do\n        ${2}\n    end\n\nsnippet desch\nabbr    spec_helper describe\n    require 'spec_helper'\n\n    describe ${1:`Snippet_RubySpecNameFromFilename()`} do\n        ${2}\n    end\n\nsnippet desccon\n    describe \"${1:GET|POST|PUT|DELETE} ${2:/some/path}${3}\" do\n        ${4}\n    end\n\nsnippet bef\n    before do\n        ${1}\n    end\n\nalias bef before\n\nsnippet befa\n    before(:all) do\n        ${1}\n    end\n\nalias befa beforeall\n\nsnippet aft\n    after do\n        ${1}\n    end\n\nalias aft after\n\nsnippet afta\n    after(:all) do\n        ${1}\n    end\n\nalias afta afterall\n\nsnippet con\n    context \"${1}\" do\n        ${2}\n    end\n\nalias con context\n\nsnippet cona\nabbr context after callback\n    context \"after #${1:save!}\" do\n        before do\n            subject.$1\n        end\n        ${2}\n    end\n\nsnippet subjc\n    subject { ${1:FactoryGirl.create(:${2:name\\})} }\n\nsnippet subjb\n    subject { ${1:FactoryGirl.build(:${2:name\\})} }\n\nsnippet it\n    it \"${1}\" do\n        ${2}\n    end\n\nsnippet itb\nabbr        it {}\n        it { ${1} }\n\nsnippet its\n    it \"should ${1:work correctly}\" do\n        ${2}\n    end\n\nsnippet is\n    it { should ${1} }\n\nsnippet isn\n    it { should_not ${1} }\n\nsnippet sh\n    should == ${1:value}\n    ${2}\n\nsnippet shn\n    should_not == ${1:value}\n    ${2}\n\nsnippet shs\n    should satisfy { |${1:obj}| ${2} }\n    ${3}\n\nsnippet shp\n    should be_${1:predicate}\n\nalias shp shbe\n\nsnippet shh\n    should have(${1:num}).${2:things}\n    ${3}\n\nsnippet she\n    should eq(${1:value})\n    ${3}\n\nsnippet shne\n    should_not eq(${1:value})\n    ${2}\n\nsnippet shnredt\n    response.should_not redirect_to(${1:url})\n    ${2}\n\nsnippet shbw\n    should be_within(${1:tolerance}).of(${2:result})\n    ${3}\n\nsnippet shnbw\n    should_not be_within(${1:tolerance}).of(${2:result})\n    ${4}\n\nsnippet shhal\n    should have_at_least(${1:num}).${2:things}\n    ${3}\n\nsnippet shhi\n    should have(${1:n}).records\n    ${2}\n\nsnippet shns\n    should_not satisfy { |${1:obj}| ${2} }\n    ${3}\n\nsnippet shbko\n    should be_a_kind_of(${1:class})\n    ${2}\n\nsnippet shnbko\n    should_not be_a_kind_of(${1:klass})\n    ${2}\n\nsnippet shnbe\n    .should_not be_${1:predicate}\n\nsnippet shre\n    should raise_error(${1:error})\n    ${2}\n\nsnippet shnre\n    should_not raise_error(${1:error})\n    ${2}\n\nalias shre shraise\n\nsnippet shc\n    expect {\n        ${1}\n    }.should change(${2:described_class}, :${3:count}).by(${4:1})\n\nalias shc exshc\n\nsnippet shnc\n    expect {\n        ${1}\n    }.should_not change(${2:target}, :${3:method})\n\nsnippet shrt\n    should respond_to(:${1:sym})\n    ${2}\n\nsnippet shnrt\n    should_not respond_to(:${1:sym})\n    ${2}\n\nsnippet shr\n    should_receive(:${1:message})${2}\n    ${3}\n\nsnippet shnr\n    should_not_receive(:${1:message})${2}\n    ${3}\n\nsnippet wia\n    with(${1:args})\n    ${2}\n\nsnippet shm\n    should match(/${1:regexp}/)\n    ${2}\n\nsnippet shnm\n    should_not match(/${1:regexp}/)\n    ${2}\n\nsnippet shredt\n    response.should redirect_to(${1:url})\n    ${2}\n\nsnippet shbr\n    response.should be_redirect\n    ${1}\n\nsnippet shnbr\n    response.should_not be_redirect\n    ${1}\n\nsnippet shbs\n    response.should be_success\n    ${1}\n\nsnippet shnbs\n    response.should_not be_success\n    ${1}\n\nsnippet shtemp\n    response.should render_template(:${1:template})\n    ${2}\n\nsnippet shbio\n    should be_instance_of(${1:class})\n    ${2}\n\nsnippet shnbio\n    should_not be_instance_of(${1:klass})\n    ${2}\n\nsnippet sc\nabbr shared_context do end\n    shared_context \"${1:condition}\" do\n        ${2}\n    end\n\nalias sc shared_context\n\nsnippet scm\nabbr shared_context with metadata\n    shared_context \"${1:condition}\", :${2:key} => ${3:value} do\n        ${4}\n    end\n\nsnippet inc\nabbr include_context\n    include_context \"${1}\"\n\nalias inc include_context\n\nsnippet se\nabbr shared_examples do end\n    shared_examples \"${1:do something}\" do\n        ${2}\n    end\n\nalias se shared_examples\n\nsnippet sed\n    shared_examples \"${1:}\" do\n        describe \"as $1\" do\n            ${2}\n        end\n    end\n\nsnippet ibl\nabbr it_behaves_like\n    it_behaves_like '${1}'\n\nalias ibl it_behaves\n\nsnippet ine\nabbr include_examples\n    include_examples \"${1}\"\n\nalias ine include_examples\n\nsnippet let\nabbr let {}\n    let(:${1}) { ${2} }\n\nsnippet let!\nabbr let! {}\n    let!(:${1}) { ${2} }\n\nsnippet letf\n    let(:${1:model}) do \n        FactoryGirl.create(:${2:$1})\n    end\n\nsnippet atl\n    at_least(${1:n}).times\n\nsnippet atm\n    at_most(${1:n}).times\n\nsnippet on\n    once\n\nsnippet tw\n    twice\n\nsnippet ber\n    be_redirect\n\nsnippet ex\n    exactly(${1:n}).times\n\nalias ex exact\n\nsnippet annot\n    any_number_of_times\n\nsnippet shham\n    ${1:target}.should have_at_most(${2:num}).${3:things}\n    ${4}\n\nsnippet ant\n    and_throw(${1:sym})\n\nsnippet any\n    and_yield(${1:values})\n\nsnippet mat\n    RSpec::Matchers.define :${1:matcher_name} do\n        match do |model|\n            # return Boolean\n            ${2}\n        end\n    end\n\nalias mat matcher\n\n\nsnippet anr\n    and_return(${1:value})\n\nsnippet anrb\n    and_return { ${1} }\n\nsnippet anra\n    and_raise(${1:exception})\n\nsnippet st\n    stub(:${1:method}).and_returns(${2:return})\n\nalias st stub\n\nsnippet sm\n    stub_model(${1:model}, {${2}})\nsnippet mm\n    mock_model(${1:model})${2}\n\nsnippet moc\n    ${1:var} = mock(\"${2:mock_name}\"${3:, :null_object => true})\n    ${4}\n\nsnippet facb\n    FactoryGirl.build(:${1})\n\nsnippet fac\n    FactoryGirl(:${1}, ${2})\n\nsnippet facc\n    FactoryGirl.create(:${1})\n\nsnippet facs\n    sequence(:${1}) {|n| \"${2}#{n}\"}\n\nsnippet facn\n    FactoryGirl.next(:${1:sequence-name})\n\nsnippet faca\n    f.${1:model} {|a| a.association(:${2:$1})}\n\nsnippet facd\n    FactoryGirl.define do\n        ${1}\n    end\n\nsnippet facf\n    factory ${1:name} do\n        ${2}\n    end\n```\n\n", "tags": ["Ruby", "Vim", "\u958b\u767a\u74b0\u5883", "Rails", "RSpec"]}