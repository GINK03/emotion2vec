{"context": " More than 1 year has passed since last update.Chef\u30ec\u30b7\u30d4\u306e\u4e2d\u3067sshd\u306e\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3057\u305f\u6642\u3001\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3084login\u306e\u969b\u306b\u3001\u5909\u66f4\u524d\u5f8c\u3067test-kitchen\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u90fd\u5ea6\u5909\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u3001\u8907\u6570\u306essh\u30dd\u30fc\u30c8\u306e\u5019\u88dc\u304b\u3089\u63a5\u7d9a\u53ef\u80fd\u306a\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3060\u3057\u3066\u6c7a\u5b9a\u3059\u308b\u6a5f\u69cb\u304c\u306a\u3044\u304b\u63a2\u3057\u305f\u304c\u3001\u3061\u3087\u3063\u3068\u63a2\u3057\u305f\u611f\u3058\u3060\u3068\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u5f53\u3066\u3066\u9003\u3052\u305f\u3002\n\n\u5b9f\u88c5\nsshd\u306elisten\u30dd\u30fc\u30c8\u304c\n\n\n22 => 2222\n\n\n\u3068\u5909\u308f\u308b\u5834\u5408\u306b\u3001\n\n.kitchen.yml\ndriver:\n  name: vagrant\n  network:\n    - [\"forwarded_port\", {guest: 22, host: 2200}]\n    - [\"forwarded_port\", {guest: 2222, host: 2201}]\n\nprovisioner:\n  name: chef_solo\n\nplatforms:\n  - name: centos-6.4\n\n\n\u3068\u5909\u66f4\u524d\u5f8c\u306e\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5171\u306b\u8a2d\u5b9a\u3057\u305f\u4e0a\u3067\n# -*- encoding: utf-8 -*-\nmodule Kitchen\n  class SSH\n    def login_command\n      args  = %W{ -o UserKnownHostsFile=/dev/null }\n      args += %W{ -o StrictHostKeyChecking=no }\n      args += %W{ -o IdentitiesOnly=yes } if options[:keys]\n      args += %W{ -o LogLevel=#{logger.debug? ? \"VERBOSE\" : \"ERROR\"} }\n      args += %W{ -o ForwardAgent=#{options[:forward_agent] ? \"yes\" : \"no\"} } if options.key? :forward_agent\n      Array(options[:keys]).each { |ssh_key| args += %W{ -i #{ssh_key}} }\n      args += %W{ -p #{port}}\n      args += %W{ #{username}@#{hostname}}\n\n      LoginCommand.new([\"ssh\", *args])\n    end\n\n    private\n\n    def establish_connection\n      logger.debug(\"[SSH] opening connection to #{self}\")\n      Net::SSH.start(hostname, username, options.merge(port: port))\n    end\n\n    def port\n      rescue_exceptions = [\n        Errno::EACCES, Errno::EADDRINUSE, Errno::ECONNREFUSED,\n        Errno::ECONNRESET, Errno::ENETUNREACH, Errno::EHOSTUNREACH,\n        Net::SSH::Disconnect\n      ]\n\n      @__port ||= candidacy_ports.find do |port|\n        retries = 3\n\n        begin\n          Net::SSH.start(hostname, username, options.merge(port: port))\n          true\n        rescue *rescue_exceptions => e\n          if (retries -= 1) > 0\n            logger.info(\"[SSH] connection failed, retrying (#{e.inspect})\")\n            sleep 1\n            retry\n          else\n            logger.warn(\"[SSH] connection failed, terminating (#{e.inspect})\")\n            false\n          end\n        end\n      end\n\n      if @__port.nil?\n        raise SSHFailed.new('not found enable ssh ports')\n      end\n\n      @__port\n    end\n\n    def candidacy_ports\n      yaml = YAML.load(\n        ERB.new(\n          open(yaml_path).read\n        ).result\n      )\n      @_candidacy_ports ||= yaml['driver']['network'].map {|config| config[1]['host'] }\n    end\n\n    def yaml_path\n      File.expand_path(\n        File.join(\n          Dir.pwd,\n          ENV['KITCHEN_YAML'] || '.kitchen.yml'\n        )\n      )\n    end\n  end\nend\n\n\u3053\u306e\u30d1\u30c3\u30c1\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u5019\u88dc\u3068\u306a\u308b\u30dd\u30fc\u30c8\u3092\u30d5\u30a9\u30ef\u30fc\u30c9\u30dd\u30fc\u30c8\u306e\u4e2d\u304b\u3089\u63a2\u7d22\u3057\u3066\u3044\u304d\u3001\u6210\u529f\u3059\u308b\u3068\u4ee5\u5f8c\u5168\u3066\u306essh\u63a5\u7d9a\u3067\u6210\u529f\u30dd\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n$ kitchen login centos-64\n       [SSH] connection failed, retrying (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\n       [SSH] connection failed, retrying (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\n$$$$$$ [SSH] connection failed, terminating (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\nLast login: Sat Jul 19 17:01:24 2014 from 10.0.2.2\n[vagrant@centos-64 ~]$ \n\n\u660e\u3089\u304b\u306b\u5185\u90e8\u5b9f\u88c5\u306b\u8ffd\u5f93\u3067\u304d\u306a\u3044\u3057\u3001\u30d1\u30c3\u30c1\u306b\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u3067\u306f\u306a\u3044\u3093\u3060\u3051\u3069\u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\u3053\u3068\u3092\u512a\u5148\u3067\u3084\u3063\u305f\u3002\n\u306a\u306e\u3067\u3001test-kitchen\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u52d5\u304b\u306a\u3044\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u6ce8\u610f\u3002\nChef\u30ec\u30b7\u30d4\u306e\u4e2d\u3067sshd\u306e\u30dd\u30fc\u30c8\u3092\u5909\u66f4\u3057\u305f\u6642\u3001\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3084login\u306e\u969b\u306b\u3001\u5909\u66f4\u524d\u5f8c\u3067`test-kitchen`\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u90fd\u5ea6\u5909\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\n\u3081\u3093\u3069\u304f\u3055\u3044\u306e\u3067\u3001\u8907\u6570\u306essh\u30dd\u30fc\u30c8\u306e\u5019\u88dc\u304b\u3089\u63a5\u7d9a\u53ef\u80fd\u306a\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3060\u3057\u3066\u6c7a\u5b9a\u3059\u308b\u6a5f\u69cb\u304c\u306a\u3044\u304b\u63a2\u3057\u305f\u304c\u3001\u3061\u3087\u3063\u3068\u63a2\u3057\u305f\u611f\u3058\u3060\u3068\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u30e2\u30f3\u30ad\u30fc\u30d1\u30c3\u30c1\u5f53\u3066\u3066\u9003\u3052\u305f\u3002\n\n\n## \u5b9f\u88c5\n\n`sshd`\u306e`listen`\u30dd\u30fc\u30c8\u304c\n\n- `22` => `2222`\n\n\u3068\u5909\u308f\u308b\u5834\u5408\u306b\u3001\n\n```yaml:.kitchen.yml\ndriver:\n  name: vagrant\n  network:\n    - [\"forwarded_port\", {guest: 22, host: 2200}]\n    - [\"forwarded_port\", {guest: 2222, host: 2201}]\n\nprovisioner:\n  name: chef_solo\n\nplatforms:\n  - name: centos-6.4\n```\n\n\u3068\u5909\u66f4\u524d\u5f8c\u306e\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c7\u30a3\u30f3\u30b0\u3092\u5171\u306b\u8a2d\u5b9a\u3057\u305f\u4e0a\u3067\n\n```rb\n# -*- encoding: utf-8 -*-\nmodule Kitchen\n  class SSH\n    def login_command\n      args  = %W{ -o UserKnownHostsFile=/dev/null }\n      args += %W{ -o StrictHostKeyChecking=no }\n      args += %W{ -o IdentitiesOnly=yes } if options[:keys]\n      args += %W{ -o LogLevel=#{logger.debug? ? \"VERBOSE\" : \"ERROR\"} }\n      args += %W{ -o ForwardAgent=#{options[:forward_agent] ? \"yes\" : \"no\"} } if options.key? :forward_agent\n      Array(options[:keys]).each { |ssh_key| args += %W{ -i #{ssh_key}} }\n      args += %W{ -p #{port}}\n      args += %W{ #{username}@#{hostname}}\n\n      LoginCommand.new([\"ssh\", *args])\n    end\n\n    private\n\n    def establish_connection\n      logger.debug(\"[SSH] opening connection to #{self}\")\n      Net::SSH.start(hostname, username, options.merge(port: port))\n    end\n\n    def port\n      rescue_exceptions = [\n        Errno::EACCES, Errno::EADDRINUSE, Errno::ECONNREFUSED,\n        Errno::ECONNRESET, Errno::ENETUNREACH, Errno::EHOSTUNREACH,\n        Net::SSH::Disconnect\n      ]\n\n      @__port ||= candidacy_ports.find do |port|\n        retries = 3\n\n        begin\n          Net::SSH.start(hostname, username, options.merge(port: port))\n          true\n        rescue *rescue_exceptions => e\n          if (retries -= 1) > 0\n            logger.info(\"[SSH] connection failed, retrying (#{e.inspect})\")\n            sleep 1\n            retry\n          else\n            logger.warn(\"[SSH] connection failed, terminating (#{e.inspect})\")\n            false\n          end\n        end\n      end\n\n      if @__port.nil?\n        raise SSHFailed.new('not found enable ssh ports')\n      end\n\n      @__port\n    end\n\n    def candidacy_ports\n      yaml = YAML.load(\n        ERB.new(\n          open(yaml_path).read\n        ).result\n      )\n      @_candidacy_ports ||= yaml['driver']['network'].map {|config| config[1]['host'] }\n    end\n\n    def yaml_path\n      File.expand_path(\n        File.join(\n          Dir.pwd,\n          ENV['KITCHEN_YAML'] || '.kitchen.yml'\n        )\n      )\n    end\n  end\nend\n```\n\n\u3053\u306e\u30d1\u30c3\u30c1\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u5019\u88dc\u3068\u306a\u308b\u30dd\u30fc\u30c8\u3092\u30d5\u30a9\u30ef\u30fc\u30c9\u30dd\u30fc\u30c8\u306e\u4e2d\u304b\u3089\u63a2\u7d22\u3057\u3066\u3044\u304d\u3001\u6210\u529f\u3059\u308b\u3068\u4ee5\u5f8c\u5168\u3066\u306essh\u63a5\u7d9a\u3067\u6210\u529f\u30dd\u30fc\u30c8\u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n```bash\n$ kitchen login centos-64\n       [SSH] connection failed, retrying (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\n       [SSH] connection failed, retrying (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\n$$$$$$ [SSH] connection failed, terminating (#<Errno::ECONNREFUSED: Connection refused - connect(2) for \"127.0.0.1\" port 2200>)\nLast login: Sat Jul 19 17:01:24 2014 from 10.0.2.2\n[vagrant@centos-64 ~]$ \n```\n\n\u660e\u3089\u304b\u306b\u5185\u90e8\u5b9f\u88c5\u306b\u8ffd\u5f93\u3067\u304d\u306a\u3044\u3057\u3001\u30d1\u30c3\u30c1\u306b\u3059\u3079\u304d\u3067\u306f\u306a\u3044\u3067\u306f\u306a\u3044\u3093\u3060\u3051\u3069\u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\u3053\u3068\u3092\u512a\u5148\u3067\u3084\u3063\u305f\u3002\n\u306a\u306e\u3067\u3001`test-kitchen`\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u52d5\u304b\u306a\u3044\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u306e\u3067\u6ce8\u610f\u3002\n", "tags": ["test-kitchen1.2.1"]}