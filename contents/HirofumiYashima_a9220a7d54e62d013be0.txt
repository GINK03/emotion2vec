{"tags": ["Python", "python3", "numpy", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning"], "context": " More than 1 year has passed since last update.\nLogisticRegression\u30af\u30e9\u30b9 \u306e \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210\n\n\nPython3\nfrom sklearn.linear_model import LogisticRegression\nlr_eestimator = LogisticRegression()\nprint(lr_eestimator)\n\n\n\uff08\u751f\u6210\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u60c5\u5831\uff09\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5909\u6570\u306b\u591a\u304f\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\n\nLogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n          verbose=0, warm_start=False)\n\n\n\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3092 \u7528\u610f\n\n\nPython3\n# \u30c7\u30fc\u30bf\nlearn_dataset_data = [[1,2,3,4], [2,1,0,5], [1,1,9,2], [2,2,8,1]]\n# \u6b63\u89e3\u30e9\u30d9\u30eb\nlearn_dataset_label = [1, 0, 1, 0]\n\n\n\n\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3092\u7528\u3044\u3066 \u30e2\u30c7\u30eb\u5b66\u7fd2\n\n\nPython3\nlr_eestimator.fit(learn_dataset_data, learn_dataset_label)\n\n\nLogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n          verbose=0, warm_start=False)\n\n\n\u6c42\u3081\u3089\u308c\u305f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb \u306e \u5207\u7247\u3068\u4fc2\u6570 \u3092 \u78ba\u8a8d\n\n\nPython3\nprint(\"intercept : {intercept_val}  ,  coefficients : {coef_vals}\".\\\n      format(intercept_val=lr_eestimator.intercept_, coef_vals=lr_eestimator.coef_.ravel()))\n\n\nintercept : [-0.06412069]  ,  coefficients : [-0.81899322 -0.07553551  0.1743113   0.20328751]\n\n\n\u30e9\u30d9\u30eb\u5224\u5b9a\u3055\u305b\u305f\u3044\u65b0\u898f\u30c7\u30fc\u30bf \u3092 \u7528\u610f\n\n\nPython3\ntest_dataset_data = [9, 3, 4, 6]\n\n\n\n\n\u65b0\u898f\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb \u3092 \u5224\u5b9a\n\u65b0\u898f\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb \u304c 0\u3067\u3042\u308b\u78ba\u7387 \u3068 1\u3067\u3042\u308b\u78ba\u7387  \u3092\u51fa\u529b\n\n\n\nPython3\nlr_classification_result = lr_eestimator.predict_proba(test_dataset_data)\n\n\n/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/sklearn/utils/validation.py:386: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and willraise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.\n  DeprecationWarning)\n\n\nPython3\nprint(lr_classification_result)\n\n\n[[ 0.9968105  0.0031895]]\n\n\n\u8981\u7d20\u6570\uff11\u306e\u4e8c\u91cd\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e2d\u8eab\u3092\u51fa\u529b\n\nprint(lr_classification_result[0])\n\n[ 0.9968105  0.0031895]\n\n\n\nAnaconda Jupyter \u3067\u306e\u5b9f\u884c\u7d50\u679c \u753b\u9762\n\n\n\n\n\n\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30da\u30fc\u30b8 \u3011\n\n\nTERADATA \u30de\u30fc\u30b1\u30bf\u30fc\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u30fb\u30d2\u30c3\u30c1\u30cf\u30a4\u30af\u30ac\u30a4\u30c9 \u7b2c10\u56de\uff1a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790   \n\u30b2\u30fc\u30e0AI\u5099\u5fd8\u9332 \uff082015/08/07\uff09\u300csklearn\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u6c42\u3081\u305f\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\uff0e\n\u6a5f\u68b0\u5b66\u7fd2\u300d\ngash717\u3055\u3093 Qiita\u8a18\u4e8b\uff082016/01/11\uff09\u300cpython\u3068scikit-learn\u3067\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3092\u4f7f\u3063\u3066\u5206\u985e\u300d\nhik0107\u3055\u3093 Qiita\u8a18\u4e8b\uff082015/12/06\uff09\u300c\u7d71\u8a08\u306e\u7d20\u4eba\u3060\u3051\u3069Python\u3067\u6a5f\u4f1a\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3001\u305d\u3093\u306a\u4eba\u306e\u305f\u3081\u306e\u7b2c\u4e00\u6b69\u300d\nStatsFragments\uff082014/11/24\uff09\u300c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30 (\u52fe\u914d\u964d\u4e0b\u6cd5 / \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5) \u3092\u53ef\u8996\u5316\u3059\u308b\u300d\n\n\n* __LogisticRegression\u30af\u30e9\u30b9 \u306e \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210__\n\n```{python:Python3}\nfrom sklearn.linear_model import LogisticRegression\nlr_eestimator = LogisticRegression()\nprint(lr_eestimator)\n```\n\n__\uff08\u751f\u6210\u3055\u308c\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u60c5\u5831\uff09__\n\n* \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5909\u6570\u306b\u591a\u304f\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\n\n```\nLogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n          verbose=0, warm_start=False)\n```\t\t  \n\n* __\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3092 \u7528\u610f__\n\n\n```{python:Python3}\n# \u30c7\u30fc\u30bf\nlearn_dataset_data = [[1,2,3,4], [2,1,0,5], [1,1,9,2], [2,2,8,1]]\n# \u6b63\u89e3\u30e9\u30d9\u30eb\nlearn_dataset_label = [1, 0, 1, 0]\n```\n\n* __\u5b66\u7fd2\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8 \u3092\u7528\u3044\u3066 \u30e2\u30c7\u30eb\u5b66\u7fd2__\n\n```{python:Python3}\nlr_eestimator.fit(learn_dataset_data, learn_dataset_label)\n```\n\n```\nLogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,\n          intercept_scaling=1, max_iter=100, multi_class='ovr', n_jobs=1,\n          penalty='l2', random_state=None, solver='liblinear', tol=0.0001,\n          verbose=0, warm_start=False)\n```\n\n* __\u6c42\u3081\u3089\u308c\u305f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u30e2\u30c7\u30eb \u306e \u5207\u7247\u3068\u4fc2\u6570 \u3092 \u78ba\u8a8d__\n\n```{python:Python3}\nprint(\"intercept : {intercept_val}  ,  coefficients : {coef_vals}\".\\\n      format(intercept_val=lr_eestimator.intercept_, coef_vals=lr_eestimator.coef_.ravel()))\n```\n\n```\nintercept : [-0.06412069]  ,  coefficients : [-0.81899322 -0.07553551  0.1743113   0.20328751]\n```\n\n* __\u30e9\u30d9\u30eb\u5224\u5b9a\u3055\u305b\u305f\u3044\u65b0\u898f\u30c7\u30fc\u30bf \u3092 \u7528\u610f__\n\n```{python:Python3}\ntest_dataset_data = [9, 3, 4, 6]\n```\n\n* __\u65b0\u898f\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb \u3092 \u5224\u5b9a__\n__\u65b0\u898f\u30c7\u30fc\u30bf\u306e\u30e9\u30d9\u30eb \u304c 0\u3067\u3042\u308b\u78ba\u7387 \u3068 1\u3067\u3042\u308b\u78ba\u7387  \u3092\u51fa\u529b__\n\n```{python:Python3}\nlr_classification_result = lr_eestimator.predict_proba(test_dataset_data)\n```\n\n```\n/Users/hirofumi.yashima/anaconda/lib/python3.5/site-packages/sklearn/utils/validation.py:386: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and willraise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.\n  DeprecationWarning)\n```\n\n```{python:Python3}\nprint(lr_classification_result)\n```\n\n```\n[[ 0.9968105  0.0031895]]\n```\n\n* __\u8981\u7d20\u6570\uff11\u306e\u4e8c\u91cd\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4e2d\u8eab\u3092\u51fa\u529b__\n\n```print(lr_classification_result[0])\nprint(lr_classification_result[0])\n```\n\n```\n[ 0.9968105  0.0031895]\n```\n\n___\n\n###__Anaconda Jupyter \u3067\u306e\u5b9f\u884c\u7d50\u679c \u753b\u9762__\n\n<img width=\"1224\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-11 16.09.51.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/a17774d6-80e0-8b75-2650-6f869e5d8fd6.png\">\n\n<img width=\"1228\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-03-11 16.10.03.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/f76fdfa9-53a0-6f5e-d14d-9a2d0044e09e.png\">\n\n___\n\n###__\u3010 \u53c2\u8003\u30a6\u30a7\u30d6\u30da\u30fc\u30b8 \u3011__\n\n* [TERADATA \u30de\u30fc\u30b1\u30bf\u30fc\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30de\u30a4\u30cb\u30f3\u30b0\u30fb\u30d2\u30c3\u30c1\u30cf\u30a4\u30af\u30ac\u30a4\u30c9 \u7b2c10\u56de\uff1a\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5206\u6790   ](http://jpn.teradata.jp/library/ma/ins_1310a.html)\n* [\u30b2\u30fc\u30e0AI\u5099\u5fd8\u9332 \uff082015/08/07\uff09\u300csklearn\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u6c42\u3081\u305f\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\uff0e\n\u6a5f\u68b0\u5b66\u7fd2\u300d](http://tsuwabuki.hatenablog.com/entry/2015/08/07/100343)\n* [gash717\u3055\u3093 Qiita\u8a18\u4e8b\uff082016/01/11\uff09\u300cpython\u3068scikit-learn\u3067\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3092\u4f7f\u3063\u3066\u5206\u985e\u300d](http://qiita.com/gash717/items/5ad68ed192f802c6ad36)\n* [hik0107\u3055\u3093 Qiita\u8a18\u4e8b\uff082015/12/06\uff09\u300c\u7d71\u8a08\u306e\u7d20\u4eba\u3060\u3051\u3069Python\u3067\u6a5f\u4f1a\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3057\u305f\u3044\u3001\u305d\u3093\u306a\u4eba\u306e\u305f\u3081\u306e\u7b2c\u4e00\u6b69\u300d](http://qiita.com/hik0107/items/9b6e1e989f4eaefdc31d)\n* [StatsFragments\uff082014/11/24\uff09\u300c\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30 (\u52fe\u914d\u964d\u4e0b\u6cd5 / \u78ba\u7387\u7684\u52fe\u914d\u964d\u4e0b\u6cd5) \u3092\u53ef\u8996\u5316\u3059\u308b\u300d](http://sinhrks.hatenablog.com/entry/2014/11/24/205305)\n"}