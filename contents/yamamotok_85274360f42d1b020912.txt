{"context": " More than 1 year has passed since last update.\n\n\u6f22\u5b57\u3092\u5217\u6319\u3059\u308b\n\u4e0b\u8a18\u306b\u3088\u3046\u306a\u7d4c\u7def\u304c\u3042\u3063\u3066\u3001JIS\u7b2c\uff11\u6c34\u6e96\u30fbJIS\u7b2c\uff12\u6c34\u6e96\u306e\u6f22\u5b57\u3092\u5217\u6319\u3059\u308b\u5fc5\u8981\u304c\u751f\u3058\u307e\u3057\u3066\u3001Perl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n\u958b\u767a\u306e\u7d4c\u7def\u3068\u8981\u4ef6\n\n\u30e9\u30a4\u30bf\u30fc\u306b\u3001\u6587\u7ae0\u3092\u66f8\u304f\u3068\u304d\u3001\u308f\u308c\u308f\u308c\u304c\u8868\u793a\u7528\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u6587\u5b57\u3092\u767a\u898b\u3057\u3066\u3082\u3089\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\nJIS\u7b2c\uff11\u6c34\u6e96\u30fbJIS\u7b2c\uff12\u6c34\u6e96\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u8a31\u53ef\u6761\u4ef6\u3068\u3059\u308c\u3070\u5927\u4e08\u592b\u306a\u3088\u3046\u3060\u3002\n\u30c1\u30fc\u30e0\u5185\u3067\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u7dcf\u5f53\u308a\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u7c21\u6613\u306a\u65b9\u6cd5\u3067\u304b\u307e\u308f\u306a\u3044\u3002\n\u306a\u3089\u3070\u3001\u8a31\u53ef\u3059\u308b\u6f22\u5b57\u4e00\u89a7\u304c\u5fc5\u8981\u3060\u3002\n\n\n\u53c2\u8003\u6587\u732e\n\n\nCyber Librarian\n\u6f22\u5b57\u306e\u4e00\u89a7\u3068\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u77e5\u308b\u306b\u3042\u305f\u308a\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\n\nFont Navi\n\u30d5\u30a9\u30f3\u30c8\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u5f97\u307e\u3057\u305f\u3002\n\n#\n# JIS\u7b2c1\u6c34\u6e96\u30fb\u7b2c2\u6c34\u6e96\u306e\u6f22\u5b57\u3092\u3059\u3079\u3066\u51fa\u529b\u3059\u308b\n#\n# Get all Kanji characters that are listed in\n#   so called JIS-Dai-Ichi and JIS-Dai-Ni standards\n#\n# Reference:\n#   http://www.asahi-net.or.jp/~ax2s-kmtn/ref/jisx0208.html\n#   Thank you for a great reference about Kanji characters and codeset.\n#\n# Author: Keisuke Yamamoto\n# Since:  23 September 2015\n#\n\nuse utf8;\nuse strict;\nuse Encode qw/encode decode/;\nuse IO::File;\nuse constant {\n  BLOCK_MIN => 15,\n  BLOCK_MAX => 84\n};\n\n# Get Kanji characters in a block\nsub get_characters_in_block {\n  my ($block) = @_;\n\n  $block >= BLOCK_MIN && $block <= BLOCK_MAX or\n    die('param $block is out of range');\n\n  # Range of this block\n  my $begin = 0xB0A0 + ($block - 16) * 0x100;\n  my $end = $begin + 0x10 * 6 - 1;\n\n  # Some special blocks have a special range\n  if ($block == 47) {\n    $begin ++;\n    $end -= 44;  # blk47 has fewer characters\n  }\n  elsif ($block == 84) {\n    $begin ++;\n    $end = $begin + 5;  # blk84 has only 6 characters\n  }\n  # Usually, the first and the last characters are just empty\n  else {\n    $begin ++;\n    $end --;\n  }\n\n  # Generate all characters in this block\n  my $ret = [];\n  for (my $pos = $begin; $pos <= $end; $pos ++) {\n    my ($high_byte, $low_byte) = (int($pos / 0x100), $pos % 0x100);\n    my $str = pack(\"C*\", $high_byte, $low_byte);\n    my $utf8 = decode(\"euc-jp\", $str);\n    push @$ret, ($utf8);\n  }\n  return $ret;\n}\n\n# Get all Kanji characters\nsub get_all_characters {\n  my $ret = [];\n  for (my $i = BLOCK_MIN; $i <= BLOCK_MAX; $i ++) {\n    my $res = get_characters_in_block($i);\n    push @$ret, @$res;\n  }\n  return $ret;\n}\n\n# Print out the final result\nmy $all_characters = get_all_characters();\nfor (@$all_characters) {\n  print encode(\"utf-8\", $_);\n}\nprint \"\\n\";\n\n# Also save it in a file\nmy $fh = IO::File->new(\"> kanji.txt\");\nfor (@$all_characters) {\n  print $fh encode(\"utf-8\", $_);\n}\nprint $fh \"\\n\";\n$fh->close();\n\n## \u6f22\u5b57\u3092\u5217\u6319\u3059\u308b\n\n\u4e0b\u8a18\u306b\u3088\u3046\u306a\u7d4c\u7def\u304c\u3042\u3063\u3066\u3001JIS\u7b2c\uff11\u6c34\u6e96\u30fbJIS\u7b2c\uff12\u6c34\u6e96\u306e\u6f22\u5b57\u3092\u5217\u6319\u3059\u308b\u5fc5\u8981\u304c\u751f\u3058\u307e\u3057\u3066\u3001Perl\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n## \u958b\u767a\u306e\u7d4c\u7def\u3068\u8981\u4ef6\n\n- \u30e9\u30a4\u30bf\u30fc\u306b\u3001\u6587\u7ae0\u3092\u66f8\u304f\u3068\u304d\u3001\u308f\u308c\u308f\u308c\u304c\u8868\u793a\u7528\u306b\u4f7f\u7528\u3057\u3066\u3044\u308b\u30d5\u30a9\u30f3\u30c8\u306b\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u6587\u5b57\u3092\u767a\u898b\u3057\u3066\u3082\u3089\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u306e\u305f\u3081\u306e\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n- JIS\u7b2c\uff11\u6c34\u6e96\u30fbJIS\u7b2c\uff12\u6c34\u6e96\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u8a31\u53ef\u6761\u4ef6\u3068\u3059\u308c\u3070\u5927\u4e08\u592b\u306a\u3088\u3046\u3060\u3002\n- \u30c1\u30fc\u30e0\u5185\u3067\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u7dcf\u5f53\u308a\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\u7c21\u6613\u306a\u65b9\u6cd5\u3067\u304b\u307e\u308f\u306a\u3044\u3002\n- \u306a\u3089\u3070\u3001\u8a31\u53ef\u3059\u308b\u6f22\u5b57\u4e00\u89a7\u304c\u5fc5\u8981\u3060\u3002\n\n## \u53c2\u8003\u6587\u732e\n\n- [Cyber Librarian](http://www.asahi-net.or.jp/~ax2s-kmtn/ref/jisx0208.html)\n  \u6f22\u5b57\u306e\u4e00\u89a7\u3068\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u77e5\u308b\u306b\u3042\u305f\u308a\u3053\u3061\u3089\u306e\u30b5\u30a4\u30c8\u3092\u53c2\u7167\u3057\u307e\u3057\u305f\u3002\n- [Font Navi](http://fontnavi.jp/zakkuri/303-adobe-japan1.aspx)\n  \u30d5\u30a9\u30f3\u30c8\u306b\u542b\u307e\u308c\u308b\u6587\u5b57\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u3092\u5f97\u307e\u3057\u305f\u3002\n\n```pl\n#\n# JIS\u7b2c1\u6c34\u6e96\u30fb\u7b2c2\u6c34\u6e96\u306e\u6f22\u5b57\u3092\u3059\u3079\u3066\u51fa\u529b\u3059\u308b\n#\n# Get all Kanji characters that are listed in\n#   so called JIS-Dai-Ichi and JIS-Dai-Ni standards\n#\n# Reference:\n#   http://www.asahi-net.or.jp/~ax2s-kmtn/ref/jisx0208.html\n#   Thank you for a great reference about Kanji characters and codeset.\n#\n# Author: Keisuke Yamamoto\n# Since:  23 September 2015\n#\n\nuse utf8;\nuse strict;\nuse Encode qw/encode decode/;\nuse IO::File;\nuse constant {\n  BLOCK_MIN => 15,\n  BLOCK_MAX => 84\n};\n\n# Get Kanji characters in a block\nsub get_characters_in_block {\n  my ($block) = @_;\n\n  $block >= BLOCK_MIN && $block <= BLOCK_MAX or\n    die('param $block is out of range');\n\n  # Range of this block\n  my $begin = 0xB0A0 + ($block - 16) * 0x100;\n  my $end = $begin + 0x10 * 6 - 1;\n\n  # Some special blocks have a special range\n  if ($block == 47) {\n    $begin ++;\n    $end -= 44;  # blk47 has fewer characters\n  }\n  elsif ($block == 84) {\n    $begin ++;\n    $end = $begin + 5;  # blk84 has only 6 characters\n  }\n  # Usually, the first and the last characters are just empty\n  else {\n    $begin ++;\n    $end --;\n  }\n\n  # Generate all characters in this block\n  my $ret = [];\n  for (my $pos = $begin; $pos <= $end; $pos ++) {\n    my ($high_byte, $low_byte) = (int($pos / 0x100), $pos % 0x100);\n    my $str = pack(\"C*\", $high_byte, $low_byte);\n    my $utf8 = decode(\"euc-jp\", $str);\n    push @$ret, ($utf8);\n  }\n  return $ret;\n}\n\n# Get all Kanji characters\nsub get_all_characters {\n  my $ret = [];\n  for (my $i = BLOCK_MIN; $i <= BLOCK_MAX; $i ++) {\n    my $res = get_characters_in_block($i);\n    push @$ret, @$res;\n  }\n  return $ret;\n}\n\n# Print out the final result\nmy $all_characters = get_all_characters();\nfor (@$all_characters) {\n  print encode(\"utf-8\", $_);\n}\nprint \"\\n\";\n\n# Also save it in a file\nmy $fh = IO::File->new(\"> kanji.txt\");\nfor (@$all_characters) {\n  print $fh encode(\"utf-8\", $_);\n}\nprint $fh \"\\n\";\n$fh->close();\n```\n", "tags": ["\u6f22\u5b57", "\u6587\u5b57\u30b3\u30fc\u30c9", "Perl"]}