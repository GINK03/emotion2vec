{"context": "\u8272\u3005\u8abf\u3079\u3066\u307f\u305f\u3051\u3069\u3001Swift3\u7cfb\u3067\u305d\u306e\u307e\u307e\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u3068\u3057\u3066\u6b8b\u3057\u307e\u3059\u3002\n\n\u6e96\u5099\nObjective-C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u3067\u3001Swift \u3067\u4f7f\u3046\u5834\u5408\u306f\u3001Bridging-Header.h \u306b\u4e0b\u8a18\u306e\u884c\u3092\u8ffd\u52a0\n\nBridging-Header.h\n#import <CommonCrypto/CommonCrypto.h>\n\n\n\nsha1 \u306e\u5834\u5408\nlet data = \"\u6587\u5b57\u5217\".data(using: .utf8)!\nlet length = Int(CC_SHA1_DIGEST_LENGTH)\nvar digest = [UInt8](repeating: 0, count: length)\n_ = data.withUnsafeBytes { CC_SHA1($0, CC_LONG(data.count), &digest) }\nlet crypt = digest.map { String(format: \"%02x\", $0) }.joined(separator: \"\")\n\n\nMD5 \u306e\u5834\u5408\nlet data = \"\u6587\u5b57\u5217\".data(using: .utf8)!\nlet length = Int(CC_MD5_DIGEST_LENGTH)\nvar digest = [UInt8](repeating: 0, count: length)\n_ = data.withUnsafeBytes { CC_MD5($0, CC_LONG(data.count), &digest) }\nlet crypt = digest.map { String(format: \"%02x\", $0) }.joined(separator: \"\")\n\n\n\u89e3\u8aac\n\ndata.withUnsafeBytes \u306f\u623b\u308a\u5024\u3092 _ = \u3067\u6368\u3066\u3066\u3044\u307e\u3059\u3002\n\u7121\u3044\u3068 Result of call to 'withUnsafeBytes' is unused \u3068\u30ef\u30fc\u30cb\u30f3\u30b0\u51fa\u307e\u3059\u3002\nString(format: \"%02x\", $0) \u306e\u7b87\u6240\u3092\u3001String($0, raddix: 16) \u3068\u66f8\u3044\u3066\u308b\u8a18\u4e8b\u3082\u3042\u308a\u307e\u3059\u304c\u30010 \u304c\u6d88\u3048\u308b\u306e\u3067\u3001format \u6307\u5b9a\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8272\u3005\u8abf\u3079\u3066\u307f\u305f\u3051\u3069\u3001Swift3\u7cfb\u3067\u305d\u306e\u307e\u307e\u52d5\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u30e1\u30e2\u3068\u3057\u3066\u6b8b\u3057\u307e\u3059\u3002\n\n# \u6e96\u5099\n\nObjective-C \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u306e\u3067\u3001Swift \u3067\u4f7f\u3046\u5834\u5408\u306f\u3001`Bridging-Header.h` \u306b\u4e0b\u8a18\u306e\u884c\u3092\u8ffd\u52a0\n\n```objc:Bridging-Header.h\n#import <CommonCrypto/CommonCrypto.h>\n```\n\n# sha1 \u306e\u5834\u5408\n\n```swift\nlet data = \"\u6587\u5b57\u5217\".data(using: .utf8)!\nlet length = Int(CC_SHA1_DIGEST_LENGTH)\nvar digest = [UInt8](repeating: 0, count: length)\n_ = data.withUnsafeBytes { CC_SHA1($0, CC_LONG(data.count), &digest) }\nlet crypt = digest.map { String(format: \"%02x\", $0) }.joined(separator: \"\")\n```\n\n# MD5 \u306e\u5834\u5408\n\n```swift\nlet data = \"\u6587\u5b57\u5217\".data(using: .utf8)!\nlet length = Int(CC_MD5_DIGEST_LENGTH)\nvar digest = [UInt8](repeating: 0, count: length)\n_ = data.withUnsafeBytes { CC_MD5($0, CC_LONG(data.count), &digest) }\nlet crypt = digest.map { String(format: \"%02x\", $0) }.joined(separator: \"\")\n```\n\n# \u89e3\u8aac\n\n- `data.withUnsafeBytes` \u306f\u623b\u308a\u5024\u3092 `_ =` \u3067\u6368\u3066\u3066\u3044\u307e\u3059\u3002\n\u7121\u3044\u3068 `Result of call to 'withUnsafeBytes' is unused` \u3068\u30ef\u30fc\u30cb\u30f3\u30b0\u51fa\u307e\u3059\u3002\n\n- `String(format: \"%02x\", $0)` \u306e\u7b87\u6240\u3092\u3001`String($0, raddix: 16)` \u3068\u66f8\u3044\u3066\u308b\u8a18\u4e8b\u3082\u3042\u308a\u307e\u3059\u304c\u30010 \u304c\u6d88\u3048\u308b\u306e\u3067\u3001format \u6307\u5b9a\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n", "tags": ["Swift", "Swift3.0", "sha1", "md5"]}