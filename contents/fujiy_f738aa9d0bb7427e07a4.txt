{"context": "\u8ffd\u8a18\n\u8a18\u4e8b\u306b\u4e0d\u5099\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u672c\u6587\u306e\u4e0b\u306e\u8ffd\u8a18\u90e8\u5206\u3082\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002\n\n\u30cf\u30de\u3063\u305f\u70b9\n\u3042\u308b\u65e5\u306e\u3053\u3068\nGoogle App Engine (Python) \u3067Web\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\nWeb\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u3048\u308b\u6587\u5b57\u3092\u5224\u5b9a\u3057\u305f\u3044\u6642\u3063\u3066\u3042\u308a\u307e\u3059\u3088\u306d\uff1f\n\u8abf\u3079\u305f\u3089 \u6587\u5b57\u5217.isalnum() \u3067\u82f1\u6570\u5b57\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u3089\u308c\u308b\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u305f\u3093\u3067\u3059\u3002\n\u3057\u304b\u3057\u304a\u304b\u3057\u3044\u3002\npassword = 'abc123'\npassword.isalnum()  #--> True\n\npassword = u'\u3042\u3044\u3046'\npassword.isalnum()  #--> True  \u3048\u3063\uff1f\n\n\u3069\u3046\u3084\u3089\u5168\u89d2\u6587\u5b57\u306f isalnum \u30e1\u30bd\u30c3\u30c9\u3067\u306f True \u3068\u5224\u65ad\u3055\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\u3072\u3069\u3044...\n\n\u89e3\u6c7a\u7b56\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u8272\u3005\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nimport re\n\n\n#\u534a\u89d2\u5c0f\u6587\u5b57\nlowerReg = re.compile(r'^[a-z]+$')\ndef islower(s):\n    return lowerReg.match(s) is not None\n\n#\u534a\u89d2\u5927\u6587\u5b57\nupperReg = re.compile(r'^[A-Z]+$')\ndef isupper(s):\n    return upperReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u5b57\nalphaReg = re.compile(r'^[a-zA-Z]+$')\ndef isalpha(s):\n    return alphaReg.match(s) is not None\n\n#\u534a\u89d2\u6570\u5b57\ndigitReg = re.compile(r'^[0-9]+$')\ndef isdigit(s):\n    return digitReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u6570\u5b57\nalnumReg = re.compile(r'^[a-zA-Z0-9]+$')\ndef isalnum(s):\n    return alnumReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u6570\u5b57or\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\nalnum_Reg = re.compile(r'^[a-zA-Z0-9_]+$')\ndef isalnum_(s):\n    return alnum_Reg.match(s) is not None\n\n#\u534a\u89d2\u8a18\u53f7\nsymbolReg = re.compile(r'^[!-/:-@[-`{-~]+$')\ndef issymbol(s):\n    return symbolReg.match(s) is not None\n\n#ASCII\u6587\u5b57\nasciiReg = re.compile(r'^[!-~]+$')\ndef isascii(s):\n    return asciiReg.match(s) is not None\n\n\n\nisalnum('abc123')  #--> True\nisalnum(u'\u3042\u3044\u3046')  #--> False\n\n\u203b\u7a7a\u767d\u6587\u5b57\u306f False\n\u203b\u7a7a\u6587\u5b57\u5217\u306e\u3068\u304d\u306b\u3082 True \u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u6b63\u898f\u8868\u73fe\u306e r'^[ ... ]+$' \u3092 r'^[ ... ]*$' \u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\n\u60c5\u5831\u304c\u5c11\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\n\nhttp://docs.python.jp/2/library/re.html#module-re Python Documentation \u6b63\u898f\u8868\u73fe\n\n\n...\n\u4eca\u56de\u306e\u4ef6\u3068\u306f\u95a2\u4fc2\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u3001Google App Engine \u3067\u306f Python3 \u306f\u4eca\u306e\u6240\u4f7f\u3048\u307e\u305b\u3093 (Python 2.7\u307e\u3067) \u3002\n\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u304c Unicode \u3068 str \u306e2\u7a2e\u985e(\u6b63\u78ba\u306b\u306f\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3082)\u3042\u308a\u4e0d\u4fbf\u3067\u3059...\u3002\n\n\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\nisalnum \u30e1\u30bd\u30c3\u30c9\u304c\u3046\u307e\u304f\u50cd\u304b\u306a\u3044\u306e\u306funicode \u6587\u5b57\u5217\u306e\u5834\u5408\u306e\u3088\u3046\u3067\u3059\u3002\nUTF8 \u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u3068\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\nisalnum \u30e1\u30bd\u30c3\u30c9\u306e\u4ed6\u306b\u3001isalpha (\u82f1\u5b57)\u3001isdigit (\u6570\u5b57)\u3001islower (\u5c0f\u6587\u5b57)\u3001isupper (\u5927\u6587\u5b57) \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u306e\u5224\u5b9a(ASCII\u5224\u5b9a\u306a\u3069)\u306b\u3064\u3044\u3066\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u306e\u3067\u3001\u672c\u6587\u306e\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nPython 2.x \u306e\u5834\u5408\nstr \u6587\u5b57\u5217\u306e\u5834\u5408\u306f isalnum \u30e1\u30bd\u30c3\u30c9\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u305f\u3060 str \u6587\u5b57\u5217\u3067\u65e5\u672c\u8a9e\u306a\u3069\u306e\u5168\u89d2\u6587\u5b57\u3092\u6271\u3046\u3068\u3001\u6587\u5b57\u6570\u306e\u53d6\u5f97\u306a\u3069\u304c\u601d\u3044\u901a\u308a\u306b\u306a\u3089\u306a\u3044\u306e\u3067 unicode \u6587\u5b57\u5217\u3092\u4f7f\u3046\u65b9\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u305d\u306e\u6642\u306f str \u306b\u5909\u63db\u3057\u3066\u78ba\u304b\u3081\u307e\u3059\u3002\nu'\u3042\u3044\u3046'.encode('utf-8').isalnum()  #--> False\n\n\nPython 3.x \u306e\u5834\u5408\nPython 3.x \u7cfb\u3067\u306f str \u3068 unicode \u306f\u7d71\u5408\u3055\u308c\u3001str \u3068\u3044\u3046\u540d\u524d\u3067\u3059\u304c\u5b9f\u614b\u306f unicode \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u70ba\u3001\u666e\u901a\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u3082 utf-8 \u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n'\u3042\u3044\u3046'.encode('utf-8').isalnum()  #--> False\n\n\u4ee5\u4e0a \u8ffd\u8a18\n\n***\u8ffd\u8a18***\n\u8a18\u4e8b\u306b\u4e0d\u5099\u304c\u3042\u308a\u307e\u3057\u305f\u306e\u3067\u3001\u672c\u6587\u306e\u4e0b\u306e\u8ffd\u8a18\u90e8\u5206\u3082\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002\n\n## \u30cf\u30de\u3063\u305f\u70b9\n\n\u3042\u308b\u65e5\u306e\u3053\u3068\nGoogle App Engine (Python) \u3067Web\u30a2\u30d7\u30ea\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\nWeb\u30b5\u30fc\u30d3\u30b9\u3067\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u4f7f\u3048\u308b\u6587\u5b57\u3092\u5224\u5b9a\u3057\u305f\u3044\u6642\u3063\u3066\u3042\u308a\u307e\u3059\u3088\u306d\uff1f\n\n\u8abf\u3079\u305f\u3089 `\u6587\u5b57\u5217.isalnum()` \u3067\u82f1\u6570\u5b57\u304b\u3069\u3046\u304b\u78ba\u304b\u3081\u3089\u308c\u308b\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3063\u305f\u3093\u3067\u3059\u3002\n\n\u3057\u304b\u3057\u304a\u304b\u3057\u3044\u3002\n\n```py \npassword = 'abc123'\npassword.isalnum()  #--> True\n\npassword = u'\u3042\u3044\u3046'\npassword.isalnum()  #--> True  \u3048\u3063\uff1f\n```\n\n\u3069\u3046\u3084\u3089\u5168\u89d2\u6587\u5b57\u306f isalnum \u30e1\u30bd\u30c3\u30c9\u3067\u306f True \u3068\u5224\u65ad\u3055\u308c\u308b\u307f\u305f\u3044\u3067\u3059\u3002\n\u3072\u3069\u3044...\n\n## \u89e3\u6c7a\u7b56\n\n\u4ed5\u65b9\u306a\u3044\u306e\u3067\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u8272\u3005\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n```py\nimport re\n\n\n#\u534a\u89d2\u5c0f\u6587\u5b57\nlowerReg = re.compile(r'^[a-z]+$')\ndef islower(s):\n    return lowerReg.match(s) is not None\n\n#\u534a\u89d2\u5927\u6587\u5b57\nupperReg = re.compile(r'^[A-Z]+$')\ndef isupper(s):\n    return upperReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u5b57\nalphaReg = re.compile(r'^[a-zA-Z]+$')\ndef isalpha(s):\n    return alphaReg.match(s) is not None\n\n#\u534a\u89d2\u6570\u5b57\ndigitReg = re.compile(r'^[0-9]+$')\ndef isdigit(s):\n    return digitReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u6570\u5b57\nalnumReg = re.compile(r'^[a-zA-Z0-9]+$')\ndef isalnum(s):\n    return alnumReg.match(s) is not None\n\n#\u534a\u89d2\u82f1\u6570\u5b57or\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2\nalnum_Reg = re.compile(r'^[a-zA-Z0-9_]+$')\ndef isalnum_(s):\n    return alnum_Reg.match(s) is not None\n\n#\u534a\u89d2\u8a18\u53f7\nsymbolReg = re.compile(r'^[!-/:-@[-`{-~]+$')\ndef issymbol(s):\n    return symbolReg.match(s) is not None\n\n#ASCII\u6587\u5b57\nasciiReg = re.compile(r'^[!-~]+$')\ndef isascii(s):\n    return asciiReg.match(s) is not None\n\n\n\nisalnum('abc123')  #--> True\nisalnum(u'\u3042\u3044\u3046')  #--> False\n```\n\u203b\u7a7a\u767d\u6587\u5b57\u306f False\n\u203b\u7a7a\u6587\u5b57\u5217\u306e\u3068\u304d\u306b\u3082 True \u3092\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u6b63\u898f\u8868\u73fe\u306e `r'^[ ... ]+$'` \u3092 `r'^[ ... ]*$'` \u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\n\n\u60c5\u5831\u304c\u5c11\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n  \n## \u53c2\u8003\u30b5\u30a4\u30c8\n\n+ <http://docs.python.jp/2/library/re.html#module-re> Python Documentation \u6b63\u898f\u8868\u73fe\n\n\n## ...\n\n\u4eca\u56de\u306e\u4ef6\u3068\u306f\u95a2\u4fc2\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u304c\u3001Google App Engine \u3067\u306f Python3 \u306f\u4eca\u306e\u6240\u4f7f\u3048\u307e\u305b\u3093 (Python 2.7\u307e\u3067) \u3002\n\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u304c Unicode \u3068 str \u306e2\u7a2e\u985e(\u6b63\u78ba\u306b\u306f\u30d0\u30a4\u30c8\u6587\u5b57\u5217\u3082)\u3042\u308a\u4e0d\u4fbf\u3067\u3059...\u3002\n\n\n\n# \u8ffd\u8a18\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u3066\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\nisalnum \u30e1\u30bd\u30c3\u30c9\u304c\u3046\u307e\u304f\u50cd\u304b\u306a\u3044\u306e\u306funicode \u6587\u5b57\u5217\u306e\u5834\u5408\u306e\u3088\u3046\u3067\u3059\u3002\nUTF8 \u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u3068\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u3092\u3057\u307e\u3059\u3002\n\nisalnum \u30e1\u30bd\u30c3\u30c9\u306e\u4ed6\u306b\u3001isalpha (\u82f1\u5b57)\u3001isdigit (\u6570\u5b57)\u3001islower (\u5c0f\u6587\u5b57)\u3001isupper (\u5927\u6587\u5b57) \u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u306e\u4ed6\u306e\u5224\u5b9a(ASCII\u5224\u5b9a\u306a\u3069)\u306b\u3064\u3044\u3066\u306f\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u306e\u3067\u3001\u672c\u6587\u306e\u6b63\u898f\u8868\u73fe\u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n## Python 2.x \u306e\u5834\u5408\nstr \u6587\u5b57\u5217\u306e\u5834\u5408\u306f isalnum \u30e1\u30bd\u30c3\u30c9\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\u305f\u3060 str \u6587\u5b57\u5217\u3067\u65e5\u672c\u8a9e\u306a\u3069\u306e\u5168\u89d2\u6587\u5b57\u3092\u6271\u3046\u3068\u3001\u6587\u5b57\u6570\u306e\u53d6\u5f97\u306a\u3069\u304c\u601d\u3044\u901a\u308a\u306b\u306a\u3089\u306a\u3044\u306e\u3067 unicode \u6587\u5b57\u5217\u3092\u4f7f\u3046\u65b9\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u305d\u306e\u6642\u306f str \u306b\u5909\u63db\u3057\u3066\u78ba\u304b\u3081\u307e\u3059\u3002\n\n```\nu'\u3042\u3044\u3046'.encode('utf-8').isalnum()  #--> False\n```\n\n## Python 3.x \u306e\u5834\u5408\nPython 3.x \u7cfb\u3067\u306f str \u3068 unicode \u306f\u7d71\u5408\u3055\u308c\u3001str \u3068\u3044\u3046\u540d\u524d\u3067\u3059\u304c\u5b9f\u614b\u306f unicode \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u70ba\u3001\u666e\u901a\u306e\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u3082 utf-8 \u306b\u30a8\u30f3\u30b3\u30fc\u30c9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n'\u3042\u3044\u3046'.encode('utf-8').isalnum()  #--> False\n```\n\n***\u4ee5\u4e0a \u8ffd\u8a18***\n\n\n", "tags": ["Python", "python2.7", "\u6b63\u898f\u8868\u73fe"]}