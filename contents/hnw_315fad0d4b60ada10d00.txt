{"context": " More than 1 year has passed since last update.DS18B20\uff08\u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\uff09\u3092\u8cb7\u3063\u305f\u306e\u3067Arduino\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u306f1-Wire\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u63a5\u7d9a\u3059\u308b\u96fb\u5b50\u90e8\u54c1\u3067\u3059\u3002\n\n\nDS18B20 \u516c\u5f0f\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8 (PDF)\n\u305d\u306e\u548c\u8a33\n\n\n\u6e96\u5099\n\u307e\u305a\u3001\u4e0b\u8a182\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\nPaulStoffregen/OneWire\nmilesburton/Arduino-Temperature-Control-Library\n\n\u524d\u8005\u306fTeensy\uff08Arduino\u3068\u4e92\u63db\u6027\u306e\u9ad8\u3044\u72ec\u81ea\u306e\u958b\u767a\u30dc\u30fc\u30c9\uff09\u3092\u958b\u767a\u3057\u3066\u3044\u308bPJRC\u793e\u3067\u30e1\u30f3\u30c6\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u30011-Wire\u3092\u6271\u3046\u306a\u3089\u9244\u677f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u5f8c\u8005\u306fDS18B20\u5c02\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3088\u3046\u3067\u3001\u524d\u8005\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u304b\u306a\u308a\u6d3b\u767a\u306b\u30e1\u30f3\u30c6\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304b\u3089\u3001\u9078\u629e\u80a2\u3068\u3057\u3066\u306f\u60aa\u304f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\u914d\u7dda\nArduino\u5074\u306f2\u756a\u30d4\u30f3\u3068VCC\u3001GND\u3060\u3051\u3057\u304b\u4f7f\u3044\u307e\u305b\u3093\u3002\n\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306e\u56f3\u3067\u306fDS18B20\u306eDQ\u30d4\u30f3\u30924.7k\u03a9\u62b5\u6297\u3067\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u624b\u5143\u306b\u306a\u304b\u3063\u305f\u306e\u30675.1k\u03a9\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u300c\u30d1\u30e9\u30b5\u30a4\u30c8\u30d1\u30ef\u30fc\u300d\u30e2\u30fc\u30c9\u3092\u8a66\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001DS18B20\u306eGND\u30d4\u30f3VDD\u30d4\u30f3\u3068\u3082\u306bGND\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nmilesburton/Arduino-Temperature-Control-Library\u306eexamples/Simple/Simple.pde\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\n#include <OneWire.h>\n#include <DallasTemperature.h>\n\n// Data wire is plugged into port 2 on the Arduino\n#define ONE_WIRE_BUS 2\n\n// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)\nOneWire oneWire(ONE_WIRE_BUS);\n\n// Pass our oneWire reference to Dallas Temperature. \nDallasTemperature sensors(&oneWire);\n\nvoid setup(void)\n{\n  // start serial port\n  Serial.begin(9600);\n  Serial.println(\"Dallas Temperature IC Control Library Demo\");\n\n  // Start up the library\n  sensors.begin();\n}\n\nvoid loop(void)\n{ \n  // call sensors.requestTemperatures() to issue a global temperature \n  // request to all devices on the bus\n  Serial.print(\"Requesting temperatures...\");\n  sensors.requestTemperatures(); // Send the command to get temperatures\n  Serial.println(\"DONE\");\n\n  Serial.print(\"Temperature for the device 1 (index 0) is: \");\n  Serial.println(sensors.getTempCByIndex(0));\n\n  delay(500);\n}\n\n\u3053\u308c\u3067\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6e29\u5ea6\u304c\u5ef6\u3005\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 29.50\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 29.50\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 30.00\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 30.00\n\n\n\u8907\u6570\u500b\u306eDS18B20\u3092\u30d0\u30b9\u63a5\u7d9a\u3059\u308b\n\u6b21\u306b\u3001\u5225\u306eDS18B20\u3092\u4e26\u5217\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u306e\u72b6\u614b\u3067\u3001sensors.getTempCByIndex(1)\u3068\u3059\u308c\u30702\u500b\u76ee\u306eDS18B20\u306e\u5024\u304c\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n\u8907\u6570\u500b\u306eDS18B20\u3092\u8b58\u5225\u3059\u308b\n\u3068\u3053\u308d\u3067\u3001\u4e0a\u306e\u3084\u308a\u304b\u305f\u3067\u306f2\u3064\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u3046\u3061\u3069\u3061\u3089\u304c0\u756a\u3067\u3069\u3061\u3089\u304c1\u756a\u306a\u306e\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u533a\u5225\u3067\u304d\u308b\u306a\u3089\u3057\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\u5b9f\u306f\u3001DS18B20\u306b\u306f\u305d\u308c\u305e\u308c\u500b\u5225\u306e\u300c\u30a2\u30c9\u30ec\u30b9\u300d\u304c\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u308f\u304b\u308c\u3070\u3001\u7279\u5b9a\u306eDS18B20\u306e\u5024\u3092\u53d6\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n#include <OneWire.h>\n#include <DallasTemperature.h>\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\nDeviceAddress temp0 = { 0x28, 0xFF, 0xE0, 0x2E, 0x61, 0x15, 0x03, 0x08 };\nDeviceAddress temp1 = { 0x28, 0xFF, 0x70, 0x13, 0x61, 0x15, 0x03, 0x6a };\n\nvoid setup(void)\n{\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop(void)\n{\n  sensors.requestTemperatures();\n\n  Serial.println(sensors.getTempC(temp0));\n  Serial.println(sensors.getTempC(temp1));\n\n  delay(500);\n}\n\n\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u5b9f\u969b\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066DallasTemperature::getAddress()\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3057\u305f\u5024\u3092\u30e1\u30e2\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\nDS18B20\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f0.5\u2103\u523b\u307f\u3067\u6e29\u5ea6\u304c\u53d6\u308c\u307e\u3059\u304c\u3001DallasTemperature::setResolution()\u30e1\u30bd\u30c3\u30c9\u306e\u6307\u5b9a\u306b\u3088\u308a0.25\u2103\u30010.125\u2103\u30010.0625\u2103\u523b\u307f\u306e\u6e29\u5ea6\u3082\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u8a66\u3057\u306b\u3001\u30bb\u30f3\u30b5\u30fc5\u500b\u306e\u6e29\u5ea6\u30920.0625\u2103\u523b\u307f\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.62\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.62\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.62\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.62\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.56\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.56\n\n\u601d\u3063\u305f\u3088\u308a\u5024\u304c\u56fa\u307e\u3063\u3066\u3044\u307e\u3059\u3057\u3001\u6e2c\u5b9a\u3054\u3068\u306e\u30d6\u30ec\u3082\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u4e0a\u306f\u00b10.5\u2103\u306e\u8aa4\u5dee\u304c\u3042\u308b\u306e\u3067\u7cbe\u5ea6\u3092\u4e0a\u3052\u3066\u3082\u610f\u5473\u304c\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4e88\u60f3\u4ee5\u4e0a\u306b\u6b63\u78ba\u306a\u5024\u304c\u53d6\u308c\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nDS18B20\uff08\u30c7\u30b8\u30bf\u30eb\u6e29\u5ea6\u30bb\u30f3\u30b5\u30fc\uff09\u3092\u8cb7\u3063\u305f\u306e\u3067Arduino\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3053\u308c\u306f1-Wire\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u63a5\u7d9a\u3059\u308b\u96fb\u5b50\u90e8\u54c1\u3067\u3059\u3002\n\n- [DS18B20 \u516c\u5f0f\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8](http://datasheets.maximintegrated.com/en/ds/DS18B20.pdf) (PDF)\n- [\u305d\u306e\u548c\u8a33](http://www.ne.jp/asahi/shared/o-family/ElecRoom/AVRMCOM/DS18B20/DS18B20manual.html)\n\n# \u6e96\u5099\n\n\u307e\u305a\u3001\u4e0b\u8a182\u3064\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n- [PaulStoffregen/OneWire](https://github.com/PaulStoffregen/OneWire)\n- [milesburton/Arduino-Temperature-Control-Library](https://github.com/milesburton/Arduino-Temperature-Control-Library)\n\n\u524d\u8005\u306fTeensy\uff08Arduino\u3068\u4e92\u63db\u6027\u306e\u9ad8\u3044\u72ec\u81ea\u306e\u958b\u767a\u30dc\u30fc\u30c9\uff09\u3092\u958b\u767a\u3057\u3066\u3044\u308bPJRC\u793e\u3067\u30e1\u30f3\u30c6\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u30011-Wire\u3092\u6271\u3046\u306a\u3089\u9244\u677f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\u5f8c\u8005\u306fDS18B20\u5c02\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u3088\u3046\u3067\u3001\u524d\u8005\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f9d\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u304b\u306a\u308a\u6d3b\u767a\u306b\u30e1\u30f3\u30c6\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304b\u3089\u3001\u9078\u629e\u80a2\u3068\u3057\u3066\u306f\u60aa\u304f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n# \u914d\u7dda\n\nArduino\u5074\u306f2\u756a\u30d4\u30f3\u3068VCC\u3001GND\u3060\u3051\u3057\u304b\u4f7f\u3044\u307e\u305b\u3093\u3002\n\n\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u306e\u56f3\u3067\u306fDS18B20\u306eDQ\u30d4\u30f3\u30924.7k\u03a9\u62b5\u6297\u3067\u30d7\u30eb\u30a2\u30c3\u30d7\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u624b\u5143\u306b\u306a\u304b\u3063\u305f\u306e\u30675.1k\u03a9\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u3001\u300c\u30d1\u30e9\u30b5\u30a4\u30c8\u30d1\u30ef\u30fc\u300d\u30e2\u30fc\u30c9\u3092\u8a66\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001DS18B20\u306eGND\u30d4\u30f3VDD\u30d4\u30f3\u3068\u3082\u306bGND\u306b\u63a5\u7d9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n![ds18b20.png](https://qiita-image-store.s3.amazonaws.com/0/46856/2ac72add-ace8-7134-3072-d61ebda8947a.png)\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n[milesburton/Arduino-Temperature-Control-Library](https://github.com/milesburton/Arduino-Temperature-Control-Library)\u306eexamples/Simple/Simple.pde\u3092\u8a66\u3057\u307e\u3057\u305f\u3002\n\n```cpp\n#include <OneWire.h>\n#include <DallasTemperature.h>\n\n// Data wire is plugged into port 2 on the Arduino\n#define ONE_WIRE_BUS 2\n\n// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)\nOneWire oneWire(ONE_WIRE_BUS);\n\n// Pass our oneWire reference to Dallas Temperature. \nDallasTemperature sensors(&oneWire);\n\nvoid setup(void)\n{\n  // start serial port\n  Serial.begin(9600);\n  Serial.println(\"Dallas Temperature IC Control Library Demo\");\n\n  // Start up the library\n  sensors.begin();\n}\n\nvoid loop(void)\n{ \n  // call sensors.requestTemperatures() to issue a global temperature \n  // request to all devices on the bus\n  Serial.print(\"Requesting temperatures...\");\n  sensors.requestTemperatures(); // Send the command to get temperatures\n  Serial.println(\"DONE\");\n  \n  Serial.print(\"Temperature for the device 1 (index 0) is: \");\n  Serial.println(sensors.getTempCByIndex(0));\n\n  delay(500);\n}\n```\n\n\u3053\u308c\u3067\u30b7\u30ea\u30a2\u30eb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u6e29\u5ea6\u304c\u5ef6\u3005\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 29.50\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 29.50\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 30.00\nRequesting temperatures...DONE\nTemperature for the device 1 (index 0) is: 30.00\n```\n\n# \u8907\u6570\u500b\u306eDS18B20\u3092\u30d0\u30b9\u63a5\u7d9a\u3059\u308b\n\n\u6b21\u306b\u3001\u5225\u306eDS18B20\u3092\u4e26\u5217\u306b\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n![ds18b20_2.png](https://qiita-image-store.s3.amazonaws.com/0/46856/eb523375-4cc0-6150-d9c6-ad50f0a3bd47.png)\n\n\u3053\u306e\u72b6\u614b\u3067\u3001`sensors.getTempCByIndex(1)`\u3068\u3059\u308c\u30702\u500b\u76ee\u306eDS18B20\u306e\u5024\u304c\u53d6\u308a\u51fa\u305b\u307e\u3059\u3002\n\n# \u8907\u6570\u500b\u306eDS18B20\u3092\u8b58\u5225\u3059\u308b\n\n\u3068\u3053\u308d\u3067\u3001\u4e0a\u306e\u3084\u308a\u304b\u305f\u3067\u306f2\u3064\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u3046\u3061\u3069\u3061\u3089\u304c0\u756a\u3067\u3069\u3061\u3089\u304c1\u756a\u306a\u306e\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u3002\u533a\u5225\u3067\u304d\u308b\u306a\u3089\u3057\u305f\u3044\u3067\u3059\u3088\u306d\u3002\n\n\u5b9f\u306f\u3001DS18B20\u306b\u306f\u305d\u308c\u305e\u308c\u500b\u5225\u306e\u300c\u30a2\u30c9\u30ec\u30b9\u300d\u304c\u5272\u308a\u632f\u3089\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u304c\u308f\u304b\u308c\u3070\u3001\u7279\u5b9a\u306eDS18B20\u306e\u5024\u3092\u53d6\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp\n#include <OneWire.h>\n#include <DallasTemperature.h>\n\n#define ONE_WIRE_BUS 2\n\nOneWire oneWire(ONE_WIRE_BUS);\nDallasTemperature sensors(&oneWire);\nDeviceAddress temp0 = { 0x28, 0xFF, 0xE0, 0x2E, 0x61, 0x15, 0x03, 0x08 };\nDeviceAddress temp1 = { 0x28, 0xFF, 0x70, 0x13, 0x61, 0x15, 0x03, 0x6a };\n\nvoid setup(void)\n{\n  Serial.begin(9600);\n  sensors.begin();\n}\n\nvoid loop(void)\n{\n  sensors.requestTemperatures();\n\n  Serial.println(sensors.getTempC(temp0));\n  Serial.println(sensors.getTempC(temp1));\n\n  delay(500);\n}\n```\n\n\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\u5b9f\u969b\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066`DallasTemperature::getAddress()`\u30e1\u30bd\u30c3\u30c9\u3067\u53d6\u5f97\u3057\u305f\u5024\u3092\u30e1\u30e2\u3063\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u7cbe\u5ea6\u3092\u4e0a\u3052\u308b\n\nDS18B20\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f0.5\u2103\u523b\u307f\u3067\u6e29\u5ea6\u304c\u53d6\u308c\u307e\u3059\u304c\u3001`DallasTemperature::setResolution()`\u30e1\u30bd\u30c3\u30c9\u306e\u6307\u5b9a\u306b\u3088\u308a0.25\u2103\u30010.125\u2103\u30010.0625\u2103\u523b\u307f\u306e\u6e29\u5ea6\u3082\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u8a66\u3057\u306b\u3001\u30bb\u30f3\u30b5\u30fc5\u500b\u306e\u6e29\u5ea6\u30920.0625\u2103\u523b\u307f\u3067\u8868\u793a\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.62\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.62\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.62\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.62\nRequesting temperatures...DONE\nTemperature for the device 0 is: 29.56\nTemperature for the device 1 is: 29.81\nTemperature for the device 2 is: 29.87\nTemperature for the device 3 is: 29.50\nTemperature for the device 4 is: 29.56\n```\n\n\u601d\u3063\u305f\u3088\u308a\u5024\u304c\u56fa\u307e\u3063\u3066\u3044\u307e\u3059\u3057\u3001\u6e2c\u5b9a\u3054\u3068\u306e\u30d6\u30ec\u3082\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u30c7\u30fc\u30bf\u30b7\u30fc\u30c8\u4e0a\u306f\u00b10.5\u2103\u306e\u8aa4\u5dee\u304c\u3042\u308b\u306e\u3067\u7cbe\u5ea6\u3092\u4e0a\u3052\u3066\u3082\u610f\u5473\u304c\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u4e88\u60f3\u4ee5\u4e0a\u306b\u6b63\u78ba\u306a\u5024\u304c\u53d6\u308c\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n", "tags": ["Arduino", "\u96fb\u5b50\u5de5\u4f5c", "DS18B20"]}