{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u3068\u3042\u308b\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u3066\u7d4c\u8def\u63a2\u7d22\u304c\u5fc5\u8981\u305d\u3046\u306a\u306e\u3067\u3001A*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u307f\u305f\u8a71\u3067\u3059\u3002\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u3001\u95a2\u4fc2\u306a\u3044\u3051\u3069 tmlib.js \u3067\u4f5c\u3063\u3066\u308b\u306e\u3067 tmlib.js \u3068\u5408\u308f\u305b\u3066\u4f7f\u7528\u3002\u4ed6\u3067\u3082\u4f7f\u3048\u308b\u3068\u601d\u3046\u3002\nA*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306f\u3001\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3048\u3070\u3067\u304d\u308b\u3051\u3069\u2026\nwiki\u53c2\u7167\nhttp://ja.wikipedia.org/wiki/A*\n\u3084\u3063\u3071\u308a\u5927\u5909\u3060\u3057\u3001\u3059\u3067\u306b(JavaScript\u3067)\u5b9f\u88c5\u3057\u3066\u308b\u4eba\u304c\u3044\u306a\u3044\u304b\u306a\uff5e\uff1f\n\u3068\u3001\u691c\u7d22\u3057\u305f\u3089\u3042\u308a\u307e\u3057\u305f\u3002\n\u3063\u3066\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\njavascript-astar 0.4.0\nhttp://github.com/bgrins/javascript-astar\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306f\u3001MIT\n\u4f5c\u6210\u4e2d\u306e\u30b2\u30fc\u30e0\u3067\u306f\u30012D\u30de\u30c3\u30d7\u4e0a\u3067\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u53f3\u306b\uff11\u6b69\u9032\u3080\u5834\u5408\u306e\u30b3\u30b9\u30c8\u306f\u3001\uff11\u3067\u306f\u7121\u304f\u3001\u53f3\u3092\u5411\u3044\u3066\u304b\u3089\uff08\u30b3\u30b9\u30c8\uff11\uff09\u4e00\u6b69\u524d\u306b\u9032\u3080\uff08\u30b3\u30b9\u30c8\uff11\uff09\u3067\u5408\u8a08\u306e\u30b3\u30b9\u30c8\u304c\uff12\u306b\u306a\u308b\u611f\u3058\u3002\n\u3053\u308c\u304c\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7b49\u3067\u3088\u304f\u898b\u308b\u69d8\u306b\u3001\u30de\u30c3\u30d7\u304c\u30d8\u30af\u30b9\uff08\u516d\u89d2\u5f62\u306e\u5347\u76ee\uff09\u306b\u306a\u308b\u306e\u3067\u3001\u5411\u304d\u306f\uff16\u65b9\u5411\u3002\n\u5358\u7d14\u306a2D\u306e\u307e\u307e\u3067\u306f\u7d4c\u8def\u63a2\u7d22\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u3002\nAStar.js \u306e\u5b9f\u88c5\u306f\u3001\u5358\u7d14\u306a2D\u7528\u3067\u3059\u304c\u3001\u4e2d\u3092\u898b\u308b\u3068\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u306a\u304b\u306a\u304b\u304d\u308c\u3044\u306b\u4f5c\u3089\u308c\u3066\u308b\u5370\u8c61\u3002\u5c11\u3057\u5b9f\u88c5\u3059\u308c\u3070\u3001\u4eca\u56de\u3001\u3084\u308a\u305f\u3044\u7d4c\u8def\u63a2\u7d22\u306b\u3082\u5229\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u3084\u308a\u305f\u3044\u4e8b\u307e\u3068\u3081\n\n\u30de\u30c3\u30d7\u306f\u5358\u7d14\u306a2D\u3058\u3083\u306a\u304f\u3066\u3001\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f\uff16\u65b9\u5411\u306b\u79fb\u52d5\u304c\u53ef\u80fd\u306a\u30de\u30c3\u30d7\u3002\n\u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308a\u3001\uff11\u3064\u65b9\u5411\u3092\u5909\u3048\u308b\u306e\u306b\u3082\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\uff08\u5f8c\u308d\u3092\u5411\u304f\u306b\u306f\u3001\u30b3\u30b9\u30c8\uff13\uff09\n\u7279\u5b9a\u306e\u5834\u6240\u3067\u3001\u3042\u308b\u65b9\u5411\u3092\u5411\u3044\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u3001\u7279\u5b9a\u306e\u5834\u6240\u3078\u306e\u6700\u77ed\u7d4c\u8def\u3092\u6c42\u3081\u308b\u3002\n\u79fb\u52d5\u3067\u304d\u306a\u3044\u30de\u30b9\u304c\u3042\u3063\u305f\u308a\u30b3\u30b9\u30c8\u304c\u666e\u901a\u3088\u308a\u304b\u304b\u308b\u30de\u30b9\u304c\u3042\u308b\u306e\u306f\u3044\u3064\u3082\u901a\u308a\u2026\n\n\nAStar.js \u306e\u5b9f\u88c5\nA*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5927\u3056\u3063\u3071\u306b\u8a00\u3046\u3068\u2026\n\n\u3042\u308b\uff12\u3064\u306e\u4f4d\u7f6e\uff08\u30ce\u30fc\u30c9\uff09\u3092\u79fb\u52d5\u3059\u308b\u306e\u306b\u304b\u304b\u308b\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u4eee\u306b\u6c42\u3081\u308b\u95a2\u6570\n\u5404\u30ce\u30fc\u30c9\u306b\u96a3\u63a5\u3059\u308b\u30ce\u30fc\u30c9\n\u96a3\u63a5\u3057\u305f\u30ce\u30fc\u30c9\u9593\u306e\u30b3\u30b9\u30c8\n\n\u4ee5\u4e0a\u304c\u308f\u304b\u308c\u3070\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u52d5\u304d\u307e\u3059\u3002\n\u73fe\u5b9f\u306e\u5730\u56f3\u3067\u8a00\u3046\u3068\u4ea4\u5dee\u70b9\u304c\uff11\u30ce\u30fc\u30c9\u3067\u3001\u305d\u3053\u306b\u7e4b\u304c\u308b\u6b21\u306e\u4ea4\u5dee\u70b9\uff08\u96a3\u63a5\u30ce\u30fc\u30c9\uff09\u3068\u305d\u3053\u307e\u3067\u306e\u8ddd\u96e2\uff08\u30b3\u30b9\u30c8\uff09\u3001\u4eca\u306e\u4f4d\u7f6e\u304b\u3089\u3001\u76ee\u7684\u5730\u307e\u3067\u306e\u76f4\u7dda\u8ddd\u96e2\uff08\u4eee\u306e\u30b3\u30b9\u30c8\uff09\u304c\u308f\u304b\u308c\u3070\u3001\u6700\u77ed\u7d4c\u8def\u304c\u308f\u304b\u308b\u3068\u2026\u76ee\u7684\u5730\u307e\u3067\u5404\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3057\u3064\u3064\u7d4c\u8def\u3092\u63a2\u7d22\u3059\u308b\u3001\u305d\u3093\u306a\u611f\u3058\u3067\u3059\u3002\nAStar.js \u3082\u305d\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u3092\u4f7f\u3046\u69d8\u3067\u3059\u3002\n\nastar\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nGraph\u30af\u30e9\u30b9\nGridNode\u30af\u30e9\u30b9(\u5185\u90e8\u30af\u30e9\u30b9)\n\ngraph = new Graph [\n  [1,1,1,1]\n  [0,1,1,0]\n  [0,0,1,1]\n]\nstart   = graph.grid[0][0]\nend     = graph.grid[1][2]\noptions = {}\nresult  = astar.search(graph, start, end, options)\n\nGraph\u30af\u30e9\u30b9\u306f\u3001GridNode\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3001XY\u306e2D\u306e\u30ce\u30fc\u30c9\u30de\u30c3\u30d7\u3068\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u3066\u3001astar.search() \u306e graph \u306b\u3001Graph\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3002\nstart\u3068end\u306f\u3001graph \u3067\u7ba1\u7406\u3055\u308c\u3066\u308b\u30ce\u30fc\u30c9\u306e\u958b\u59cb\u4f4d\u7f6e\u3068\u7d42\u4e86\u4f4d\u7f6e\u306e\u30ce\u30fc\u30c9(GridNode)\u3092\u6307\u5b9a\u3059\u308b\u3002\noptions.heuristic \u306b funtion(node1, node2) \u3068\u3001GridNode\u3092\uff12\u3064\u3082\u3089\u3063\u3066\u4eee\u306e\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u3002\n\uff08\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5185\u90e8\u3067\u6301\u3063\u3066\u3044\u308bheuristic\u95a2\u6570\u3092\u5229\u7528\uff09\n\u7d50\u679c(result)\u306f\u3001\u6700\u77ed\u7d4c\u8def\u3092\u793a\u3057\u305f GridNode \u306e\u914d\u5217\u3067\u8fd4\u3055\u308c\u307e\u3059\u3002\n\u3068\u3001\u8a00\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u3001astar\u306f\u3001\u305d\u306e\u307e\u307e\u306b\u3001Graph\u3068GridNode\u3092\u3001\u518d\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u4e3b\u306b\u5fc5\u8981\u306b\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\nGraph.neighbors(node)  # node \u306b\u96a3\u63a5\u3059\u308b\u30ce\u30fc\u30c9\u3092 Array \u3067\u8fd4\u3059\nGraph.markDirty(node)  # \u7d4c\u8def\u63a2\u7d22\u306b\u4f7f\u7528\u3057\u305f node \u3092\u4fdd\u5b58\nGraph.cleanDirty()     # \u7d4c\u8def\u63a2\u7d22\u306b\u4f7f\u7528\u3057\u305f node \u3092\u30af\u30ea\u30a2\uff08\u521d\u671f\u5316\uff09astar.cleanNode(node) \u3092\u547c\u3076\nGridNode.getCost(node) # \u81ea\u30ce\u30fc\u30c9(this)\u306b\u3001\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9(node)\u304b\u3089\u79fb\u52d5\u3059\u308b\uff08\u5165\u308b\uff09\u5834\u5408\u306e\u30b3\u30b9\u30c8\nGridNode.isWall()      # \u81ea\u30ce\u30fc\u30c9(this)\u304c\u79fb\u52d5\u3067\u304d\u306a\u3044\u30ce\u30fc\u30c9\u306e\u5834\u5408 true\nheuristic(node1,node2) # \uff12\u3064\u306e\u30ce\u30fc\u30c9\u9593\u306e\u4eee\u30b3\u30b9\u30c8\n\n\nGraph\u30af\u30e9\u30b9\nGraph\u306f\u3001\u4eca\u56de\u306e\u5834\u5408\u3001\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f\u30de\u30b9\u306b\u3059\u308b\u306e\u3067\u305d\u308c\u3092\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u3068\u8a00\u3063\u3066\u3082\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u8003\u3048\u305a\u2026X\u5ea7\u6a19\u304c\u5076\u6570\u306e\u5834\u5408\u306b\u3001Y\u5ea7\u6a19\u3092\uff11\u3064\u5c11\u306a\u304f\u6301\u3064\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3002\n\u753b\u9762\u306b\u306f\u3001X\u5ea7\u6a19\u304c\u5076\u6570\u306e\u5834\u5408\u306f\u3001\u534a\u5206\u305a\u3089\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n\n\u554f\u984c\u306e neighbors \u3082\u5358\u7d14\u306b\u96a3\u63a5\u3059\u308b\uff16\u30ce\u30fc\u30c9\u3092\u63a2\u3057\u3066\u8fd4\u3059\u306e\u307f\nclass nz.Graph\n\n  constructor: (param = {}) ->\n    {\n      mapdata\n      chipdata\n    } = param\n    @nodes = []\n    @grid = []\n    @grid[x] = [] for x in [0...mapdata.width]\n    for y in [0...mapdata.height]\n      for x in [0...mapdata.width]\n        unless y == mapdata.height - 1 and x % 2 == 0\n          chipid = mapdata.data[y][x]\n          node = new nz.GridNode(x,y,chipdata[chipid])\n          @grid[x][y] = node\n          @nodes.push(node)\n    @clear()\n\n  neighbors: (node) ->\n    ret = []\n    x = node.x\n    y = node.y\n\n    if x % 2 == 0\n      ret.push(@grid[x  ][y-1]) if(@grid[x  ]?[y-1]?)\n      ret.push(@grid[x  ][y+1]) if(@grid[x  ]?[y+1]?)\n      ret.push(@grid[x-1][y  ]) if(@grid[x-1]?[y  ]?)\n      ret.push(@grid[x-1][y+1]) if(@grid[x-1]?[y+1]?)\n      ret.push(@grid[x+1][y  ]) if(@grid[x+1]?[y  ]?)\n      ret.push(@grid[x+1][y+1]) if(@grid[x+1]?[y+1]?)\n    else\n      ret.push(@grid[x  ][y-1]) if(@grid[x  ]?[y-1]?)\n      ret.push(@grid[x  ][y+1]) if(@grid[x  ]?[y+1]?)\n      ret.push(@grid[x-1][y  ]) if(@grid[x-1]?[y  ]?)\n      ret.push(@grid[x-1][y-1]) if(@grid[x-1]?[y-1]?)\n      ret.push(@grid[x+1][y  ]) if(@grid[x+1]?[y  ]?)\n      ret.push(@grid[x+1][y-1]) if(@grid[x+1]?[y-1]?)\n\n    # nz \u306a\u30ce\u30fc\u30c9\u3092\u8fd4\u3059\uff08\uff16\u3053\uff09\n    return ret\n\nmarkDirty\u3068cleanDirty\u306f\u3001\u307e\uff5e\u666e\u901a\u306b\u3001\u307b\u307c\u5143\u306e\u5b9f\u88c5\u306e\u307e\u307e\uff08\u7d99\u627f\u3057\u3066\u3082\u3044\u3044\u304f\u3089\u3044\uff09\n  cleanDirty: ->\n    for node in @dirtyNodes\n      node.clean()\n      astar.cleanNode(node)\n    @dirtyNodes = []\n\n  markDirty: (node) ->\n    if @dirtyNodes.indexOf(node) < 0\n      @dirtyNodes.push node\n\nA*\u306f\u3001\u5404\u30ce\u30fc\u30c9\u306b\u305d\u306e\u30ce\u30fc\u30c9\u307e\u3067\u306e\u30b3\u30b9\u30c8\u3092\u4fdd\u5b58\u3057\u306a\u304c\u3089\u7d4c\u8def\u63a2\u7d22\u3059\u308b\u306e\u3067\u3001\u518d\u5229\u7528\u6642\u306b\u6c5a\u3057\u3061\u3083\u3063\u305f\u30ce\u30fc\u30c9\u3092\u30af\u30ea\u30a2\u3057\u3066\u304a\u304d\u305f\u3044\u611f\u3058\u3067\u3059\u304b\u306d\u3002\n\u3067\u3001\u5168\u30ce\u30fc\u30c9\u30af\u30ea\u30a2\u3060\u3068\u91cf\u304c\u591a\u304f\u3066\u5927\u5909\u306a\u306e\u3067\u3001\u672c\u5f53\u306b\u89e6\u3063\u305f\u30ce\u30fc\u30c9\u3060\u3051\u30af\u30ea\u30a2\u3059\u308b\u3088\u3046\u306b\u30de\u30fc\u30af\u3057\u3066\u308b\u3068\u2026\n\u3042\u3068\u3001heuristic \u95a2\u6570\u3092\u5143\u306e\u5b9f\u88c5\u3067\u306f\u3001Graph\u306b\u4f5c\u6210\u3057\u3066\u3044\u305f\u306e\u3067\n\u4eca\u56de\u306e\u7d4c\u8def\u63a2\u7d22\u7528\u306e heuristic \u95a2\u6570\u3092\u3001Graph\u306b\u4f5c\u6210\u3002\nnz.Graph.heuristic = (node1,node2) ->\n  hx = Math.abs(node1.x - node2.x)\n  hy = Math.abs(node1.y - node2.y)\n  hr = Math.ceil(hx / 2)\n  direction = node1.calcDirectionTo(node2)\n  hd = node1.getDirectionCost(direction)\n  if hy == hr\n    hy = 0\n  else if hy < hr\n    if hy != 0\n      hy = 1\n      if hd == 1\n        hd = 0\n  else\n    hy -= hr\n  hx + hy + hd\n\n\u5b9f\u306f\u3001\u3053\u308c\u304c\u96e3\u3057\u3044\u2026\u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306b\u305d\u308c\u307d\u304f\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3051\u308c\u3069\n\u3053\u306e\u8fba\u306f\u3001\u5f8c\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3068\u8a00\u3046\u304b\u3001\u3061\u3083\u3093\u3068\u8a08\u7b97\u3057\u305f\u3044\u3002\n\u5927\u62b5\u306e\u5834\u5408\u306f\u3001\u76f4\u7dda\u8ddd\u96e2\u304c\u305d\u306e\u307e\u307e\u4eee\u30b3\u30b9\u30c8\u306b\u306a\u308b\u3093\u3060\u3051\u3069\u3001\u4eca\u56de\u306e\u5834\u5408\u306f\u3001\u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u4e00\u6b69\u524d\u3068\u4e00\u6b69\u5f8c\u308d\u3067\u306f\u3001\u76f4\u7dda\u8ddd\u96e2\u304c\u4e00\u7dd2\u3067\u3082\u30b3\u30b9\u30c8\u306f\u5168\u7136\u9055\u3046\u3063\u3066\u3053\u3068\u306b\u2026\n\u3053\u308c\u3092\u3061\u3083\u3093\u3068\u610f\u8b58\u3057\u306a\u3044\u3068\u3046\u307e\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u76ee\u7684\u306e\u30ce\u30fc\u30c9\u304c\u3069\u306e\u65b9\u5411\u306b\u3042\u308b\u306e\u304b\u78ba\u304b\u3081\u3066\u3001\u305d\u306e\u65b9\u5411\u3092\u5411\u304f\u306e\u306b\u304b\u304b\u308b\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3001\u3055\u3089\u306b\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f2D\u30de\u30c3\u30d7\u306e\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3088\u3046\u306a\u611f\u3058\u3067\u30b3\u30b9\u30c8\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\nhttp://ja.wikipedia.org/wiki/\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\ncalcDirectionTo(node2)\u306f\u3001\u3069\u306e\u65b9\u5411\u306b\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9(node2)\u304c\u3042\u308b\u304b\u6c42\u3081\u308b\u95a2\u6570\ngetDirectionCost(direction)\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u65b9\u5411\u306b\u5411\u304d\u3092\u5909\u3048\u308b\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3092\u6c42\u3081\u308b\u95a2\u6570\n\u3068\u3001AStar.js \u306b\u306f\u3001\u5143\u3005\u306a\u3044\u3051\u3069\u3001\u4eca\u56de\u5fc5\u8981\u306b\u306a\u308b\u51e6\u7406\u3068\u304b\u306f\u3001\u968f\u6642\u8ffd\u52a0\u2026\n\nGridNode\u30af\u30e9\u30b9\nGridNode\u306f\u3001\u30de\u30c3\u30d7\u4e0a\u306e\uff11\u3064\u306e\u30de\u30b9\uff08\u30ce\u30fc\u30c9\uff09\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u4f4d\u7f6e\u60c5\u5831\u3068\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u3002\n\u7d4c\u8def\u63a2\u7d22\u4e2d\u306b\u3069\u306e\u65b9\u5411\u3078\u306e\u79fb\u52d5\u304c\u4e00\u756a\u8fd1\u3044\u304b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u5411\u304d\u306e\u60c5\u5831\uff08direction\uff09\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3082\u8003\u616e\u3057\u3064\u3064\u3001\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308b\u611f\u3058\u3002\nclass nz.GridNode\n\n  :\n\n  getCost: (node) ->\n    cost = @weight\n    # \u79fb\u52d5\u5143\u304b\u3089\u306e\u65b9\u5411\n    direction = node.calcDirection(@)\n    # \u65b9\u5411\u8ee2\u63db\u306e\u30b3\u30b9\u30c8\n    cost += node.getDirectionCost(direction)\n    # \u3053\u3053\u307e\u3067\u306e\u30b3\u30b9\u30c8\u304c\u4eca\u307e\u3067\u306e\u30b3\u30b9\u30c8\u3088\u308a\u4f4e\u3044\u5834\u5408\u65b9\u5411\u3092\u66f4\u65b0\n    if not @visited or node.g + cost < @g\n      @direction = direction\n    return cost\n\n  isWall: ->\n    return @weight == 0\n\n\nisWall\u306f\u3001\u305d\u306e\u307e\u307e\u2026\n\u672c\u5f53\u306f\u3055\u3089\u306b\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u6bce\u306b\u6c34\u306f\u4fb5\u5165\u3057\u3084\u3059\u3044\u3068\u304b\u7279\u6027\u3092\u3064\u3051\u305f\u304b\u3063\u305f\u308a\u3059\u308b\u3051\u3069\u4eca\u306f\u30d1\u30b9\u3002\n\uff08\u4ed8\u3051\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u4f55\u3068\u304b\u3059\u308b\uff09\n\u3042\u3068\u3001\u524d\u9032\u304c\u30b3\u30b9\u30c8\uff11\u306a\u3089\u3001\u5f8c\u9000\uff08\u30d0\u30c3\u30af\uff09\u3057\u305f\u5834\u5408\u306f\u3001\u30b3\u30b9\u30c8\uff12\u3068\u304b\u8a00\u3046\u306e\u3082\u5165\u308c\u305f\u3044\u2026\u306a\n\u3068\u3001\u601d\u3063\u3066\u307e\u3059\u3002getCost \u3082\u76f4\u3055\u306a\u304d\u3083\u3060\u3051\u3069\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u3001heuristic\u3082\u76f4\u3055\u306a\u304d\u3083\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff08\u306e\u30fc\u3042\u3044\u3067\u3043\u3042\uff09\n\n\u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\n\u5143\u306e astar.search \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068 GridNode \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u95a2\u6570\u3092\u4f5c\u6210\u3002\n  # \u958b\u59cb\u6642\u306b\u5411\u3044\u3066\u3044\u308b\u65b9\u5411(sd)\u3001\u958b\u59cb\u4f4d\u7f6e(sx,sy),\u76ee\u6a19\u4f4d\u7f6e(ex,ey)\n  searchRoute: (sd,sx,sy,ex,ey,op={closest:false}) ->\n    route = []\n    start = @grid[sx][sy]\n    end   = @grid[ex][ey]\n    # \u58c1\u3058\u3083\u306a\u304b\u3063\u305f\u3089\u63a2\u7d22\n    if (not end.isWall()) or op.closest\n      # search \u306e\u4e2d\u3067\u3001dirty node \u3092\u30af\u30ea\u30a2\u3055\u308c\u308b\u306e\u3067\n      # \u4e8b\u524d\u306b\u958b\u59cb\u4f4d\u7f6e\u3060\u3051\u3001dirty node \u304b\u3089\u9664\u5916\u3057\u3066\u304a\u304f\n      start.clean()\n      astar.cleanNode(start)\n      start.direction = sd # \u30ce\u30fc\u30c9\u691c\u7d22\u6642\u306b\u5411\u304d\u304c\u91cd\u8981\u306a\u306e\u3067\u3001\u958b\u59cb\u4f4d\u7f6e\u306e\u5411\u304d\u3092\u30af\u30ea\u30a2\u3055\u308c\u308b\u3068\u56f0\u308b\u3002\n      i = @dirtyNodes.indexOf start\n      @dirtyNodes.splice(i, 1) if i >= 0\n\n      op.heuristic = nz.Graph.heuristic unless op.heuristic?\n\n      result = astar.search(@, start, end, op)\n      for node in result\n        route.push {\n          mapx: node.x\n          mapy: node.y\n          direction: node.direction\n          cost: node.g\n        }\n    return route\n\n\u3068\u3001\u8a00\u3046\u3053\u3068\u3067\u4e0a\u8a18\u306e\u5b9f\u88c5\u3067\u3001astar \u3092\u4f7f\u3044\u7d4c\u8def\u63a2\u7d22\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\nhttp://fukuyama.github.io/nineteen/astar-test/\n\u30de\u30c3\u30d7\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u305d\u306e\u5834\u6240\u307e\u3067\u306e\u7d4c\u8def\u3092\u63a2\u7d22\u3057\u3066\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u52d5\u304b\u3057\u3066\u307e\u3059\u3002\n\uff08\u3078\u3075\uff5e\u3002\u75b2\u308c\u305f\u2026\uff09\n# \u6982\u8981\n\n\u3068\u3042\u308b\u30b2\u30fc\u30e0\u3092\u4f5c\u3063\u3066\u3044\u3066\u7d4c\u8def\u63a2\u7d22\u304c\u5fc5\u8981\u305d\u3046\u306a\u306e\u3067\u3001A*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u307f\u305f\u8a71\u3067\u3059\u3002\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u7684\u306b\u306f\u3001\u95a2\u4fc2\u306a\u3044\u3051\u3069 tmlib.js \u3067\u4f5c\u3063\u3066\u308b\u306e\u3067 tmlib.js \u3068\u5408\u308f\u305b\u3066\u4f7f\u7528\u3002\u4ed6\u3067\u3082\u4f7f\u3048\u308b\u3068\u601d\u3046\u3002\n\nA*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u81ea\u4f53\u306f\u3001\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3048\u3070\u3067\u304d\u308b\u3051\u3069\u2026\nwiki\u53c2\u7167\nhttp://ja.wikipedia.org/wiki/A*\n\n\u3084\u3063\u3071\u308a\u5927\u5909\u3060\u3057\u3001\u3059\u3067\u306b(JavaScript\u3067)\u5b9f\u88c5\u3057\u3066\u308b\u4eba\u304c\u3044\u306a\u3044\u304b\u306a\uff5e\uff1f\n\u3068\u3001\u691c\u7d22\u3057\u305f\u3089\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u3063\u3066\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u3092\u4f7f\u308f\u305b\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\n\njavascript-astar 0.4.0\nhttp://github.com/bgrins/javascript-astar\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u306f\u3001MIT\n\n\u4f5c\u6210\u4e2d\u306e\u30b2\u30fc\u30e0\u3067\u306f\u30012D\u30de\u30c3\u30d7\u4e0a\u3067\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u306e\u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u53f3\u306b\uff11\u6b69\u9032\u3080\u5834\u5408\u306e\u30b3\u30b9\u30c8\u306f\u3001\uff11\u3067\u306f\u7121\u304f\u3001\u53f3\u3092\u5411\u3044\u3066\u304b\u3089\uff08\u30b3\u30b9\u30c8\uff11\uff09\u4e00\u6b69\u524d\u306b\u9032\u3080\uff08\u30b3\u30b9\u30c8\uff11\uff09\u3067\u5408\u8a08\u306e\u30b3\u30b9\u30c8\u304c\uff12\u306b\u306a\u308b\u611f\u3058\u3002\n\n\u3053\u308c\u304c\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7b49\u3067\u3088\u304f\u898b\u308b\u69d8\u306b\u3001\u30de\u30c3\u30d7\u304c\u30d8\u30af\u30b9\uff08\u516d\u89d2\u5f62\u306e\u5347\u76ee\uff09\u306b\u306a\u308b\u306e\u3067\u3001\u5411\u304d\u306f\uff16\u65b9\u5411\u3002\n\u5358\u7d14\u306a2D\u306e\u307e\u307e\u3067\u306f\u7d4c\u8def\u63a2\u7d22\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u5bfe\u51e6\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nAStar.js \u306e\u5b9f\u88c5\u306f\u3001\u5358\u7d14\u306a2D\u7528\u3067\u3059\u304c\u3001\u4e2d\u3092\u898b\u308b\u3068\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u306a\u304b\u306a\u304b\u304d\u308c\u3044\u306b\u4f5c\u3089\u308c\u3066\u308b\u5370\u8c61\u3002\u5c11\u3057\u5b9f\u88c5\u3059\u308c\u3070\u3001\u4eca\u56de\u3001\u3084\u308a\u305f\u3044\u7d4c\u8def\u63a2\u7d22\u306b\u3082\u5229\u7528\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n## \u3084\u308a\u305f\u3044\u4e8b\u307e\u3068\u3081\n\n* \u30de\u30c3\u30d7\u306f\u5358\u7d14\u306a2D\u3058\u3083\u306a\u304f\u3066\u3001\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f\uff16\u65b9\u5411\u306b\u79fb\u52d5\u304c\u53ef\u80fd\u306a\u30de\u30c3\u30d7\u3002\n* \u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308a\u3001\uff11\u3064\u65b9\u5411\u3092\u5909\u3048\u308b\u306e\u306b\u3082\u30b3\u30b9\u30c8\u304c\u304b\u304b\u308b\uff08\u5f8c\u308d\u3092\u5411\u304f\u306b\u306f\u3001\u30b3\u30b9\u30c8\uff13\uff09\n* \u7279\u5b9a\u306e\u5834\u6240\u3067\u3001\u3042\u308b\u65b9\u5411\u3092\u5411\u3044\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u3001\u7279\u5b9a\u306e\u5834\u6240\u3078\u306e\u6700\u77ed\u7d4c\u8def\u3092\u6c42\u3081\u308b\u3002\n* \u79fb\u52d5\u3067\u304d\u306a\u3044\u30de\u30b9\u304c\u3042\u3063\u305f\u308a\u30b3\u30b9\u30c8\u304c\u666e\u901a\u3088\u308a\u304b\u304b\u308b\u30de\u30b9\u304c\u3042\u308b\u306e\u306f\u3044\u3064\u3082\u901a\u308a\u2026\n\n\n# AStar.js \u306e\u5b9f\u88c5\n\nA*\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u3001\u5927\u3056\u3063\u3071\u306b\u8a00\u3046\u3068\u2026\n\n* \u3042\u308b\uff12\u3064\u306e\u4f4d\u7f6e\uff08\u30ce\u30fc\u30c9\uff09\u3092\u79fb\u52d5\u3059\u308b\u306e\u306b\u304b\u304b\u308b\u6700\u5c0f\u30b3\u30b9\u30c8\u3092\u4eee\u306b\u6c42\u3081\u308b\u95a2\u6570\n* \u5404\u30ce\u30fc\u30c9\u306b\u96a3\u63a5\u3059\u308b\u30ce\u30fc\u30c9\n* \u96a3\u63a5\u3057\u305f\u30ce\u30fc\u30c9\u9593\u306e\u30b3\u30b9\u30c8\n\n\u4ee5\u4e0a\u304c\u308f\u304b\u308c\u3070\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u52d5\u304d\u307e\u3059\u3002\n\n\u73fe\u5b9f\u306e\u5730\u56f3\u3067\u8a00\u3046\u3068\u4ea4\u5dee\u70b9\u304c\uff11\u30ce\u30fc\u30c9\u3067\u3001\u305d\u3053\u306b\u7e4b\u304c\u308b\u6b21\u306e\u4ea4\u5dee\u70b9\uff08\u96a3\u63a5\u30ce\u30fc\u30c9\uff09\u3068\u305d\u3053\u307e\u3067\u306e\u8ddd\u96e2\uff08\u30b3\u30b9\u30c8\uff09\u3001\u4eca\u306e\u4f4d\u7f6e\u304b\u3089\u3001\u76ee\u7684\u5730\u307e\u3067\u306e\u76f4\u7dda\u8ddd\u96e2\uff08\u4eee\u306e\u30b3\u30b9\u30c8\uff09\u304c\u308f\u304b\u308c\u3070\u3001\u6700\u77ed\u7d4c\u8def\u304c\u308f\u304b\u308b\u3068\u2026\u76ee\u7684\u5730\u307e\u3067\u5404\u30ce\u30fc\u30c9\u304b\u3089\u306e\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3057\u3064\u3064\u7d4c\u8def\u3092\u63a2\u7d22\u3059\u308b\u3001\u305d\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nAStar.js \u3082\u305d\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001\u5177\u4f53\u7684\u306b\u306f\u4ee5\u4e0b\u3092\u4f7f\u3046\u69d8\u3067\u3059\u3002\n\n* astar\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n* Graph\u30af\u30e9\u30b9\n* GridNode\u30af\u30e9\u30b9(\u5185\u90e8\u30af\u30e9\u30b9)\n\n```coffeescript\ngraph = new Graph [\n  [1,1,1,1]\n  [0,1,1,0]\n  [0,0,1,1]\n]\nstart   = graph.grid[0][0]\nend     = graph.grid[1][2]\noptions = {}\nresult  = astar.search(graph, start, end, options)\n```\n\nGraph\u30af\u30e9\u30b9\u306f\u3001GridNode\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3001XY\u306e2D\u306e\u30ce\u30fc\u30c9\u30de\u30c3\u30d7\u3068\u3057\u3066\u7ba1\u7406\u3057\u3066\u3044\u3066\u3001astar.search() \u306e graph \u306b\u3001Graph\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3002\nstart\u3068end\u306f\u3001graph \u3067\u7ba1\u7406\u3055\u308c\u3066\u308b\u30ce\u30fc\u30c9\u306e\u958b\u59cb\u4f4d\u7f6e\u3068\u7d42\u4e86\u4f4d\u7f6e\u306e\u30ce\u30fc\u30c9(GridNode)\u3092\u6307\u5b9a\u3059\u308b\u3002\noptions.heuristic \u306b funtion(node1, node2) \u3068\u3001GridNode\u3092\uff12\u3064\u3082\u3089\u3063\u3066\u4eee\u306e\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570\u3092\u6307\u5b9a\u3059\u308b\u3002\n\uff08\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5185\u90e8\u3067\u6301\u3063\u3066\u3044\u308bheuristic\u95a2\u6570\u3092\u5229\u7528\uff09\n\u7d50\u679c(result)\u306f\u3001\u6700\u77ed\u7d4c\u8def\u3092\u793a\u3057\u305f GridNode \u306e\u914d\u5217\u3067\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n\u3068\u3001\u8a00\u3046\u3053\u3068\u3067\u3001\u4eca\u56de\u306f\u3001astar\u306f\u3001\u305d\u306e\u307e\u307e\u306b\u3001Graph\u3068GridNode\u3092\u3001\u518d\u4f5c\u6210\u3059\u308b\u3053\u3068\u3067\u5bfe\u5fdc\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u4e3b\u306b\u5fc5\u8981\u306b\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n```coffeescript\nGraph.neighbors(node)  # node \u306b\u96a3\u63a5\u3059\u308b\u30ce\u30fc\u30c9\u3092 Array \u3067\u8fd4\u3059\nGraph.markDirty(node)  # \u7d4c\u8def\u63a2\u7d22\u306b\u4f7f\u7528\u3057\u305f node \u3092\u4fdd\u5b58\nGraph.cleanDirty()     # \u7d4c\u8def\u63a2\u7d22\u306b\u4f7f\u7528\u3057\u305f node \u3092\u30af\u30ea\u30a2\uff08\u521d\u671f\u5316\uff09astar.cleanNode(node) \u3092\u547c\u3076\nGridNode.getCost(node) # \u81ea\u30ce\u30fc\u30c9(this)\u306b\u3001\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9(node)\u304b\u3089\u79fb\u52d5\u3059\u308b\uff08\u5165\u308b\uff09\u5834\u5408\u306e\u30b3\u30b9\u30c8\nGridNode.isWall()      # \u81ea\u30ce\u30fc\u30c9(this)\u304c\u79fb\u52d5\u3067\u304d\u306a\u3044\u30ce\u30fc\u30c9\u306e\u5834\u5408 true\nheuristic(node1,node2) # \uff12\u3064\u306e\u30ce\u30fc\u30c9\u9593\u306e\u4eee\u30b3\u30b9\u30c8\n```\n\n# Graph\u30af\u30e9\u30b9\n\nGraph\u306f\u3001\u4eca\u56de\u306e\u5834\u5408\u3001\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f\u30de\u30b9\u306b\u3059\u308b\u306e\u3067\u305d\u308c\u3092\u7ba1\u7406\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u3068\u8a00\u3063\u3066\u3082\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u8003\u3048\u305a\u2026X\u5ea7\u6a19\u304c\u5076\u6570\u306e\u5834\u5408\u306b\u3001Y\u5ea7\u6a19\u3092\uff11\u3064\u5c11\u306a\u304f\u6301\u3064\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3002\n\u753b\u9762\u306b\u306f\u3001X\u5ea7\u6a19\u304c\u5076\u6570\u306e\u5834\u5408\u306f\u3001\u534a\u5206\u305a\u3089\u3057\u3066\u8868\u793a\u3059\u308b\u3002\n\n![ss20150414a.png](https://qiita-image-store.s3.amazonaws.com/0/30417/1e30da1a-01a8-a863-fcd4-5ec29021367f.png)\n\n\n\u554f\u984c\u306e neighbors \u3082\u5358\u7d14\u306b\u96a3\u63a5\u3059\u308b\uff16\u30ce\u30fc\u30c9\u3092\u63a2\u3057\u3066\u8fd4\u3059\u306e\u307f\n\n```coffeescript\nclass nz.Graph\n\n  constructor: (param = {}) ->\n    {\n      mapdata\n      chipdata\n    } = param\n    @nodes = []\n    @grid = []\n    @grid[x] = [] for x in [0...mapdata.width]\n    for y in [0...mapdata.height]\n      for x in [0...mapdata.width]\n        unless y == mapdata.height - 1 and x % 2 == 0\n          chipid = mapdata.data[y][x]\n          node = new nz.GridNode(x,y,chipdata[chipid])\n          @grid[x][y] = node\n          @nodes.push(node)\n    @clear()\n\n  neighbors: (node) ->\n    ret = []\n    x = node.x\n    y = node.y\n\n    if x % 2 == 0\n      ret.push(@grid[x  ][y-1]) if(@grid[x  ]?[y-1]?)\n      ret.push(@grid[x  ][y+1]) if(@grid[x  ]?[y+1]?)\n      ret.push(@grid[x-1][y  ]) if(@grid[x-1]?[y  ]?)\n      ret.push(@grid[x-1][y+1]) if(@grid[x-1]?[y+1]?)\n      ret.push(@grid[x+1][y  ]) if(@grid[x+1]?[y  ]?)\n      ret.push(@grid[x+1][y+1]) if(@grid[x+1]?[y+1]?)\n    else\n      ret.push(@grid[x  ][y-1]) if(@grid[x  ]?[y-1]?)\n      ret.push(@grid[x  ][y+1]) if(@grid[x  ]?[y+1]?)\n      ret.push(@grid[x-1][y  ]) if(@grid[x-1]?[y  ]?)\n      ret.push(@grid[x-1][y-1]) if(@grid[x-1]?[y-1]?)\n      ret.push(@grid[x+1][y  ]) if(@grid[x+1]?[y  ]?)\n      ret.push(@grid[x+1][y-1]) if(@grid[x+1]?[y-1]?)\n\n    # nz \u306a\u30ce\u30fc\u30c9\u3092\u8fd4\u3059\uff08\uff16\u3053\uff09\n    return ret\n```\n\nmarkDirty\u3068cleanDirty\u306f\u3001\u307e\uff5e\u666e\u901a\u306b\u3001\u307b\u307c\u5143\u306e\u5b9f\u88c5\u306e\u307e\u307e\uff08\u7d99\u627f\u3057\u3066\u3082\u3044\u3044\u304f\u3089\u3044\uff09\n\n```coffeescript\n  cleanDirty: ->\n    for node in @dirtyNodes\n      node.clean()\n      astar.cleanNode(node)\n    @dirtyNodes = []\n\n  markDirty: (node) ->\n    if @dirtyNodes.indexOf(node) < 0\n      @dirtyNodes.push node\n```\nA*\u306f\u3001\u5404\u30ce\u30fc\u30c9\u306b\u305d\u306e\u30ce\u30fc\u30c9\u307e\u3067\u306e\u30b3\u30b9\u30c8\u3092\u4fdd\u5b58\u3057\u306a\u304c\u3089\u7d4c\u8def\u63a2\u7d22\u3059\u308b\u306e\u3067\u3001\u518d\u5229\u7528\u6642\u306b\u6c5a\u3057\u3061\u3083\u3063\u305f\u30ce\u30fc\u30c9\u3092\u30af\u30ea\u30a2\u3057\u3066\u304a\u304d\u305f\u3044\u611f\u3058\u3067\u3059\u304b\u306d\u3002\n\u3067\u3001\u5168\u30ce\u30fc\u30c9\u30af\u30ea\u30a2\u3060\u3068\u91cf\u304c\u591a\u304f\u3066\u5927\u5909\u306a\u306e\u3067\u3001\u672c\u5f53\u306b\u89e6\u3063\u305f\u30ce\u30fc\u30c9\u3060\u3051\u30af\u30ea\u30a2\u3059\u308b\u3088\u3046\u306b\u30de\u30fc\u30af\u3057\u3066\u308b\u3068\u2026\n\n\n\u3042\u3068\u3001heuristic \u95a2\u6570\u3092\u5143\u306e\u5b9f\u88c5\u3067\u306f\u3001Graph\u306b\u4f5c\u6210\u3057\u3066\u3044\u305f\u306e\u3067\n\u4eca\u56de\u306e\u7d4c\u8def\u63a2\u7d22\u7528\u306e heuristic \u95a2\u6570\u3092\u3001Graph\u306b\u4f5c\u6210\u3002\n\n```coffeescript\nnz.Graph.heuristic = (node1,node2) ->\n  hx = Math.abs(node1.x - node2.x)\n  hy = Math.abs(node1.y - node2.y)\n  hr = Math.ceil(hx / 2)\n  direction = node1.calcDirectionTo(node2)\n  hd = node1.getDirectionCost(direction)\n  if hy == hr\n    hy = 0\n  else if hy < hr\n    if hy != 0\n      hy = 1\n      if hd == 1\n        hd = 0\n  else\n    hy -= hr\n  hx + hy + hd\n```\n\u5b9f\u306f\u3001\u3053\u308c\u304c\u96e3\u3057\u3044\u2026\u3068\u308a\u3042\u3048\u305a\u9069\u5f53\u306b\u305d\u308c\u307d\u304f\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3051\u308c\u3069\n\u3053\u306e\u8fba\u306f\u3001\u5f8c\u3067\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3068\u8a00\u3046\u304b\u3001\u3061\u3083\u3093\u3068\u8a08\u7b97\u3057\u305f\u3044\u3002\n\n\u5927\u62b5\u306e\u5834\u5408\u306f\u3001\u76f4\u7dda\u8ddd\u96e2\u304c\u305d\u306e\u307e\u307e\u4eee\u30b3\u30b9\u30c8\u306b\u306a\u308b\u3093\u3060\u3051\u3069\u3001\u4eca\u56de\u306e\u5834\u5408\u306f\u3001\u5411\u304d\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u4e00\u6b69\u524d\u3068\u4e00\u6b69\u5f8c\u308d\u3067\u306f\u3001\u76f4\u7dda\u8ddd\u96e2\u304c\u4e00\u7dd2\u3067\u3082\u30b3\u30b9\u30c8\u306f\u5168\u7136\u9055\u3046\u3063\u3066\u3053\u3068\u306b\u2026\n\n\u3053\u308c\u3092\u3061\u3083\u3093\u3068\u610f\u8b58\u3057\u306a\u3044\u3068\u3046\u307e\u304f\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u76ee\u7684\u306e\u30ce\u30fc\u30c9\u304c\u3069\u306e\u65b9\u5411\u306b\u3042\u308b\u306e\u304b\u78ba\u304b\u3081\u3066\u3001\u305d\u306e\u65b9\u5411\u3092\u5411\u304f\u306e\u306b\u304b\u304b\u308b\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3001\u3055\u3089\u306b\u30d8\u30af\u30b9\u72b6\u306b\u4e26\u3079\u3089\u308c\u305f2D\u30de\u30c3\u30d7\u306e\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u3088\u3046\u306a\u611f\u3058\u3067\u30b3\u30b9\u30c8\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttp://ja.wikipedia.org/wiki/\u30de\u30f3\u30cf\u30c3\u30bf\u30f3\u8ddd\u96e2\n\n\ncalcDirectionTo(node2)\u306f\u3001\u3069\u306e\u65b9\u5411\u306b\u6307\u5b9a\u3055\u308c\u305f\u30ce\u30fc\u30c9(node2)\u304c\u3042\u308b\u304b\u6c42\u3081\u308b\u95a2\u6570\ngetDirectionCost(direction)\u306f\u3001\u6307\u5b9a\u3055\u308c\u305f\u65b9\u5411\u306b\u5411\u304d\u3092\u5909\u3048\u308b\u5834\u5408\u306e\u30b3\u30b9\u30c8\u3092\u6c42\u3081\u308b\u95a2\u6570\n\n\u3068\u3001AStar.js \u306b\u306f\u3001\u5143\u3005\u306a\u3044\u3051\u3069\u3001\u4eca\u56de\u5fc5\u8981\u306b\u306a\u308b\u51e6\u7406\u3068\u304b\u306f\u3001\u968f\u6642\u8ffd\u52a0\u2026\n\n# GridNode\u30af\u30e9\u30b9\n\nGridNode\u306f\u3001\u30de\u30c3\u30d7\u4e0a\u306e\uff11\u3064\u306e\u30de\u30b9\uff08\u30ce\u30fc\u30c9\uff09\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u4f4d\u7f6e\u60c5\u5831\u3068\u30ce\u30fc\u30c9\u306e\u72b6\u614b\u3092\u4fdd\u6301\u3059\u308b\u3002\n\u7d4c\u8def\u63a2\u7d22\u4e2d\u306b\u3069\u306e\u65b9\u5411\u3078\u306e\u79fb\u52d5\u304c\u4e00\u756a\u8fd1\u3044\u304b\u4fdd\u5b58\u3059\u308b\u305f\u3081\u306b\u3001\u5411\u304d\u306e\u60c5\u5831\uff08direction\uff09\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3082\u8003\u616e\u3057\u3064\u3064\u3001\u30b3\u30b9\u30c8\u3092\u8a08\u7b97\u3059\u308b\u611f\u3058\u3002\n\n```coffeescript\nclass nz.GridNode\n\n  :\n\n  getCost: (node) ->\n    cost = @weight\n    # \u79fb\u52d5\u5143\u304b\u3089\u306e\u65b9\u5411\n    direction = node.calcDirection(@)\n    # \u65b9\u5411\u8ee2\u63db\u306e\u30b3\u30b9\u30c8\n    cost += node.getDirectionCost(direction)\n    # \u3053\u3053\u307e\u3067\u306e\u30b3\u30b9\u30c8\u304c\u4eca\u307e\u3067\u306e\u30b3\u30b9\u30c8\u3088\u308a\u4f4e\u3044\u5834\u5408\u65b9\u5411\u3092\u66f4\u65b0\n    if not @visited or node.g + cost < @g\n      @direction = direction\n    return cost\n\n  isWall: ->\n    return @weight == 0\n\n```\nisWall\u306f\u3001\u305d\u306e\u307e\u307e\u2026\n\n\u672c\u5f53\u306f\u3055\u3089\u306b\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u6bce\u306b\u6c34\u306f\u4fb5\u5165\u3057\u3084\u3059\u3044\u3068\u304b\u7279\u6027\u3092\u3064\u3051\u305f\u304b\u3063\u305f\u308a\u3059\u308b\u3051\u3069\u4eca\u306f\u30d1\u30b9\u3002\n\uff08\u4ed8\u3051\u308b\u5834\u5408\u306f\u3001\u3053\u3053\u3067\u4f55\u3068\u304b\u3059\u308b\uff09\n\u3042\u3068\u3001\u524d\u9032\u304c\u30b3\u30b9\u30c8\uff11\u306a\u3089\u3001\u5f8c\u9000\uff08\u30d0\u30c3\u30af\uff09\u3057\u305f\u5834\u5408\u306f\u3001\u30b3\u30b9\u30c8\uff12\u3068\u304b\u8a00\u3046\u306e\u3082\u5165\u308c\u305f\u3044\u2026\u306a\n\u3068\u3001\u601d\u3063\u3066\u307e\u3059\u3002getCost \u3082\u76f4\u3055\u306a\u304d\u3083\u3060\u3051\u3069\u3001\u3082\u3057\u304b\u3057\u305f\u3089\u3001heuristic\u3082\u76f4\u3055\u306a\u304d\u3083\u304b\u3082\u3057\u308c\u306a\u3044\u3002\uff08\u306e\u30fc\u3042\u3044\u3067\u3043\u3042\uff09\n\n# \u52d5\u4f5c\u30b5\u30f3\u30d7\u30eb\n\n\u5143\u306e astar.search \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068 GridNode \u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u95a2\u6570\u3092\u4f5c\u6210\u3002\n\n```coffeescript\n  # \u958b\u59cb\u6642\u306b\u5411\u3044\u3066\u3044\u308b\u65b9\u5411(sd)\u3001\u958b\u59cb\u4f4d\u7f6e(sx,sy),\u76ee\u6a19\u4f4d\u7f6e(ex,ey)\n  searchRoute: (sd,sx,sy,ex,ey,op={closest:false}) ->\n    route = []\n    start = @grid[sx][sy]\n    end   = @grid[ex][ey]\n    # \u58c1\u3058\u3083\u306a\u304b\u3063\u305f\u3089\u63a2\u7d22\n    if (not end.isWall()) or op.closest\n      # search \u306e\u4e2d\u3067\u3001dirty node \u3092\u30af\u30ea\u30a2\u3055\u308c\u308b\u306e\u3067\n      # \u4e8b\u524d\u306b\u958b\u59cb\u4f4d\u7f6e\u3060\u3051\u3001dirty node \u304b\u3089\u9664\u5916\u3057\u3066\u304a\u304f\n      start.clean()\n      astar.cleanNode(start)\n      start.direction = sd # \u30ce\u30fc\u30c9\u691c\u7d22\u6642\u306b\u5411\u304d\u304c\u91cd\u8981\u306a\u306e\u3067\u3001\u958b\u59cb\u4f4d\u7f6e\u306e\u5411\u304d\u3092\u30af\u30ea\u30a2\u3055\u308c\u308b\u3068\u56f0\u308b\u3002\n      i = @dirtyNodes.indexOf start\n      @dirtyNodes.splice(i, 1) if i >= 0\n\n      op.heuristic = nz.Graph.heuristic unless op.heuristic?\n\n      result = astar.search(@, start, end, op)\n      for node in result\n        route.push {\n          mapx: node.x\n          mapy: node.y\n          direction: node.direction\n          cost: node.g\n        }\n    return route\n```\n\n\n\u3068\u3001\u8a00\u3046\u3053\u3068\u3067\u4e0a\u8a18\u306e\u5b9f\u88c5\u3067\u3001astar \u3092\u4f7f\u3044\u7d4c\u8def\u63a2\u7d22\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nhttp://fukuyama.github.io/nineteen/astar-test/\n\n\u30de\u30c3\u30d7\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\u305d\u306e\u5834\u6240\u307e\u3067\u306e\u7d4c\u8def\u3092\u63a2\u7d22\u3057\u3066\u30ad\u30e3\u30e9\u30af\u30bf\u30fc\u3092\u52d5\u304b\u3057\u3066\u307e\u3059\u3002\n\n\uff08\u3078\u3075\uff5e\u3002\u75b2\u308c\u305f\u2026\uff09\n", "tags": ["tmlib.js0.5.0", "astar.js0.4.0"]}