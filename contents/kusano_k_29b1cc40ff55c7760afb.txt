{"tags": ["FPGA", "VerilogHDL", "\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"], "context": "\nFPGA DE0-CV\u3092\u3001\u9593\u9055\u3063\u3066\u4e8c\u91cd\u306b\u6ce8\u6587\u3057\u305f\u4eba\u304b\u3089\u8cb7\u3044\u53d6\u3063\u305f\u3002\u3061\u3087\u3063\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3001LED\u3092\u5149\u3089\u305b\u305f\u308a\u3001\u30b9\u30a4\u30c3\u30c1\u306b\u53cd\u5fdc\u3055\u305b\u305f\u308a\u3059\u308b\u306e\u3082\u697d\u3057\u3044\u3051\u308c\u3069\u3001\u305d\u308c\u306a\u3089\u3082\u3063\u3068\u5b89\u3044Arduino\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u3069\u3046\u305b\u306a\u3089\u3070FPGA\u306e\u8a08\u7b97\u80fd\u529b\u3092\u6d3b\u304b\u3057\u305f\u3044\u3002\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u3001\u3059\u3050\u306b\u601d\u3044\u3064\u304f\u89e3\u6cd5\u3067\u306f\u9593\u306b\u5408\u308f\u306a\u304f\u3066\u3001\u304c\u3093\u3070\u3063\u3066\u3082\u3063\u3068\u901f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8003\u3048\u308b\u3068\u3044\u3046\u6d41\u308c\u304c\u591a\u3044\u3002FPGA\u306f\u5358\u7d14\u306a\u51e6\u7406\u306e\u4e26\u5217\u8a08\u7b97\u304c\u5f97\u610f\u306a\u306e\u3067\u3001FPGA\u3092\u4f7f\u3044\u3053\u306a\u305b\u308c\u3070\u3001\u7c21\u5358\u306a\u89e3\u6cd5\u3067\u554f\u984c\u304c\u89e3\u3051\u3066\u6709\u5229\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u305f\u3002\u7d50\u5c40\u3001\u3042\u307e\u308a\u5f79\u306b\u306f\u7acb\u305f\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u3051\u3069\u3001\u8272\u3005\u3068\u8a66\u3057\u305f\u306e\u3067\u66f8\u3044\u3066\u304a\u304f\u3002\n\n\u554f\u984c\u306e\u9078\u629e\n\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u4f7f\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u3001\u305d\u3082\u305d\u3082\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u624b\u5143\u3067\u5b9f\u884c\u3059\u308b\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002Google Code Jam\uff08GCJ\uff09\u306f\u305d\u306e\u5f62\u5f0f\u3002\u3057\u304b\u3082\u3001GCJ\u306f1\u500b\u306e\u554f\u984c\u306bsmall\u3068large\u306e2\u500b\u306e\u5165\u529b\u304c\u3042\u308b\u3002small\u306e\u89e3\u6cd5\u3092\u305d\u306e\u307e\u307eFPGA\u306b\u5b9f\u88c5\u3057\u3066large\u304c\u89e3\u3051\u308c\u3070\u3068\u3066\u3082\u9762\u767d\u3044\u3002\u3068\u601d\u3063\u3066GCJ\u306e\u904e\u53bb\u554f\u3092\u63a2\u3057\u3066\u307f\u305f\u3051\u3069\u3001\u90fd\u5408\u306e\u826f\u3044\u554f\u984c\u304c\u7121\u304b\u3063\u305f\u3002small\u306f\u6307\u6570\u6642\u9593\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u89e3\u3051\u3066\u3001large\u306f\u305d\u308c\u3092\u591a\u9805\u5f0f\u6642\u9593\u306b\u76f4\u3059\u3068\u3044\u3046\u554f\u984c\u304c\u591a\u304b\u3063\u305f\u3002100\u500d\u30841000\u500d\u9ad8\u901f\u5316\u3059\u308b\u304f\u3089\u3044\u3067\u306f\u8ffd\u3044\u3064\u304b\u306a\u3044\u3002100\u500d\u7a0b\u5ea6\u306e\u901f\u5ea6\u3067\u89e3\u3051\u308b\u304b\u89e3\u3051\u306a\u3044\u304b\u304c\u5909\u308f\u308b\u3068\u3044\u3046\u306e\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u624b\u5143\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5f62\u5f0f\u3067\u306f\u4e0d\u9069\u5f53\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u305d\u306e\u304f\u3089\u3044\u306e\u9ad8\u901f\u5316\u3067\u89e3\u3051\u308b\u304b\u3069\u3046\u304b\u304c\u5909\u308f\u308b\u554f\u984c\u3068\u3044\u3046\u3053\u3068\u3067\u3001AtCoder Beginner Contest 038\u306e\u300cD - \u30d7\u30ec\u30bc\u30f3\u30c8\u300d\u3092\u9078\u3093\u3060\u3002AtCoder\u306f\u30b5\u30fc\u30d0\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5f62\u5f0f\u306a\u306e\u3067\u3001FPGA\u3067\u5b9f\u969b\u306b\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002AtCoder\u306bFPGA\u3092\u7f6e\u3044\u3066\u307b\u3057\u3044\u3002\nhttp://abc038.contest.atcoder.jp/tasks/abc038_d\n\n\u554f\u984c\u306e\u89e3\u6cd5\n\u7bb1\u3092\u4f55\u500b\u5165\u308c\u5b50\u306b\u3067\u304d\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u3002\u5404\u7bb1\u306b\u4ed6\u306e\u7bb1\u3092\u4f55\u500b\u5165\u308c\u3089\u308c\u308b\u304b\u3092\u899a\u3048\u3066\u304a\u304f\u3002\u7bb1a\u306e\u4e2d\u306b\u7bb1b\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u7bb1b\u306e\u4e2d\u306b\u4ed6\u306e\u7bb1\u3092k\u500b\u5165\u308c\u3089\u308c\u308b\u306e\u306a\u3089\u3070\u3001\u7bb1a\u306b\u306fk+1\u500b\u306e\u7bb1\u3092\u5165\u308c\u3089\u308c\u308b\u3002\u3053\u308c\u3092n\u56de\u7e70\u308a\u8fd4\u305b\u3070\u826f\u3044\u3002Python\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3002\nN = input()\nw = [0]*N\nh = [0]*N\nfor i in range(N):\n    w[i],h[i] = map(int, raw_input().split())\n\nn = [1]*N\nfor i in range(N):\n    for j in range(N):\n        for k in range(N):\n            if w[j]<w[k] and h[j]<h[k]:\n                n[k] = max(n[k], n[j]+1)\nprint hex(max(n))\n\n$O(n^3)$\u3002\u7bb1\u3092\u4e8b\u524d\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u3051\u3070\u7121\u99c4\u306a\u63a2\u7d22\u3092\u6e1b\u3089\u305b\u3066\u3001$O(n^2)$\u306b\u306a\u308a\u3001\u90e8\u5206\u70b9\u304c\u53d6\u308c\u308b\u3002\u6e80\u70b9\u3092\u53d6\u308b\u65b9\u6cd5\u306f\u672c\u5bb6\u306e\u89e3\u8aac\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\nhttp://abc038.contest.atcoder.jp/data/abc/038/editorial.pdf\n$O(n^3)$\u306e\u89e3\u6cd5\u306ej\u304bk\u306e\u30eb\u30fc\u30d7\u306f\u4e26\u5217\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002FPGA\u3067\u4e26\u5217\u306b\u8a08\u7b97\u3092\u3059\u308c\u3070\u3001\u3053\u306e\u89e3\u6cd5\u3067\u3082$O(n^2)$\u6642\u9593\u3067\u89e3\u3051\u308b\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\n\u53c2\u8003\u66f8\n\u30b0\u30b0\u308c\u3070Altera\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3082\u3001Verilog HDL\u306e\u89e3\u8aac\u3082\u51fa\u3066\u304f\u308b\u306e\u3060\u3051\u3069\u3001\u7d20\u4eba\u904e\u304e\u3066\u5168\u4f53\u50cf\u304c\u5206\u304b\u3089\u306a\u3044\u3002\u3068\u308a\u3042\u3048\u305a\u3001\u2193\u306e\u672c\u3092\u8cb7\u3063\u305f\u3002\n\u8d85\u5165\u9580\uff01FPGA\u30b9\u30bf\u30fc\u30bf\u30fb\u30ad\u30c3\u30c8DE0\u3067\u59cb\u3081\u308bVerilog HDL: \u3059\u3050\u59cb\u3081\u3089\u308c\u308b!USB\u5bfe\u5fdc\u30fb\u66f8\u304d\u8fbc\u307f\u5668\u4e0d\u8981\u30fb\u5927\u5bb9\u91cfFPGA\u642d\u8f09! (\u30c8\u30e9\u30a4\u30a2\u30eb\u30b7\u30ea\u30fc\u30ba) | \u82b9\u4e95 \u6ecb\u559c | \u672c | Amazon.co.jp\n\n\u5165\u51fa\u529b\u306e\u65b9\u6cd5\n\u51fa\u529b\u306f\u3001\u6570\u5024\u304c1\u500b\u3060\u3051\u306a\u306e\u3067\u30017\u30bb\u30b0LED\u306b\u51fa\u305b\u3070\u826f\u3044\u3002\n\u554f\u984c\u306f\u5165\u529b\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f\u3051\u3063\u3053\u3046\u6642\u9593\u304c\u639b\u304b\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5165\u529b\u3092\u57cb\u3081\u8fbc\u3080\u306e\u306f\u3044\u307e\u3044\u3061\u3002\u307e\u3055\u304bFPGA\u30dc\u30fc\u30c9\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u30dd\u30c1\u30dd\u30c1\u3057\u3066\u554f\u984c\u3092\u5165\u529b\u3059\u308b\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3002\u5b9f\u88c5\u304c\u7c21\u5358\u306a\u306e\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u304c\u5b9a\u8de1\u3089\u3057\u3044\u304c\u3001DE0-CV\u306b\u306f\u4ed8\u3044\u3066\u3044\u306a\u3044\u3002\nNios II\u3068\u3044\u3046FPGA\u3067\u52d5\u304fCPU\u304c\u3042\u308b\u3089\u3057\u3044\u3002\u3053\u306eCPU\u3067\u306fC\u3067\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u304b\u305b\u3066\u3001C\u306e\u30b3\u30fc\u30c9\u304b\u3089\u306f\u30de\u30af\u30ed\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3001FPGA\u5074\u306e\u5909\u6570\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001PC\u304b\u3089\u306f\u30c7\u30d0\u30c3\u30ac\u7d4c\u7531\u3067\u6a19\u6e96\u5165\u51fa\u529b\u304c\u6271\u3048\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\nQsys\nAltera\u306e\u958b\u767a\u30c4\u30fc\u30eb\u306b\u4ed8\u5c5e\u3059\u308bQsys\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3067\u3001\u3053\u306eCPU\u90e8\u5206\u3092\u4f5c\u308b\u3002\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u306f\u4e00\u5207\u7121\u304f\u3066\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4e26\u3073\u3066\u3001\u7dda\u3092\u7e4b\u3050\u3060\u3051\u3002nios2_gen2\u3068\u3044\u3046\u306e\u304c\u672c\u4f53\u3002\u3042\u3068\u306f\u3001onchip_memory\u3068jtag_uart\u3001\u51fa\u529b\u7528\u306epio\u3002\u5165\u529b\u306e\u30af\u30ed\u30c3\u30af\u3092pll\u306b\u5165\u308c\u3066100Mhz\u306b\u3057\u3001\u51fa\u529b\u306eclk\u3092\u305d\u306e\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30af\u30ed\u30c3\u30af\u306b\u7e4b\u3050\u3002nios2_gen2\u306edata_master\u3092\u4ed6\u306es1\u306a\u3069\u306b\u7e4b\u3050\u3002\u30e1\u30e2\u30ea\u304b\u3089\u547d\u4ee4\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3067\u3001instruction_master\u3082\u30e1\u30e2\u30ea\u306b\u7e4b\u3050\u3002\n\u300cFPGA\u30b9\u30bf\u30fc\u30bf\u30fb\u30ad\u30c3\u30c8DE0\u3067\u59cb\u3081\u308bVerilog HDL\u300d\u306b\u306f\u30e1\u30e2\u30ea\u306f16KB\u3067\u8db3\u308a\u308b\u3068\u66f8\u3044\u3066\u3042\u308b\u304c\u3001\u3053\u308c\u306fC\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Small C Library\u306b\u3057\u305f\u5834\u5408\u3002Small C Library\u306b\u306f\u5165\u529b\u7528\u306e\u95a2\u6570\u304c\u7121\u3044\uff08\u3069\u3053\u304b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306fscanf\u306a\u3069\u304c\u7121\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u3066\u3001gets\u306a\u3089\u3042\u308b\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u3001\u7121\u304b\u3063\u305f\uff09\u306e\u3067\u3001Small\u3067\u306f\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001128KB\u304f\u3089\u3044\u5fc5\u8981\u3060\u3063\u305f\u3002\n\n\nC\u30d7\u30ed\u30b0\u30e9\u30e0\nIOWR_32DIRECT\u3068\u3044\u3046\u30de\u30af\u30ed\u3067FPGA\u5074\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3081\u308b\u3089\u3057\u3044\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u53d6\u3063\u3066\u3001\u7bb1\u306e\u5e45\u3068\u9ad8\u3055\u3092\u66f8\u304d\u51fa\u3059\u3060\u3051\u3002\u5e45\u3060\u3051\u3092\u66f8\u304d\u51fa\u3057\u3066\u6642\u70b9\u3067FPGA\u5074\u304b\u3089\u8aad\u307f\u53d6\u3089\u308c\u3066\u3082\u56f0\u308b\u306e\u3067\u3001\u66f8\u304d\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u304b\u3069\u3046\u304b\u3092\u8868\u308f\u3059\u5909\u6570\u3082\u7528\u610f\u3057\u305f\u3002\u672c\u5f53\u306fFPGA\u5074\u3067\u8aad\u307f\u53d6\u308a\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3082\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u3051\u3069\u3001\u4eca\u56de\u306f\u6bce\u30af\u30ed\u30c3\u30af\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001CPU\u5074\u306e\u5b9f\u884c\u304c\u6b21\u306b\u9032\u3080\u3088\u308a\u3082\u8aad\u307f\u53d6\u308b\u65b9\u304c\u65e9\u3044\u306f\u305a\u3002n\u306e\u5024\u306f\u6e21\u3057\u3066\u3044\u3066\u3044\u306a\u3044\u3002FPGA\u5074\u306f\u8aad\u307f\u8fbc\u3093\u3060\u5206\u3060\u3051\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n#include \"alt_types.h\"\n#include \"altera_avalon_pio_regs.h\"\n#include \"sys/alt_irq.h\"\n#include \"system.h\"\n#include <stdio.h>\n#include <unistd.h>\n\nint main()\n{\n    printf(\"Hello from Nios II!\\n\");\n\n    int N, i;\n    scanf(\"%d\", &N);\n    printf(\"N=%d\\n\", N);\n\n    for (i=0; i<N; i++)\n    {\n        int w, h;\n        scanf(\"%d%d\", &w, &h);\n        printf(\"w=%d, h=%d\\n\", w, h);\n\n        IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0);\n        IOWR_32DIRECT(PIO_WIDTH_BASE, 0, w);\n        IOWR_32DIRECT(PIO_HEIGHT_BASE, 0, h);\n        IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0xffffffffu);\n    }\n\n    IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0);\n\n    return 0;\n}\n\n\nFPGA\u5074\u30d7\u30ed\u30b0\u30e9\u30e0\n\u52b9\u7387\u304c\u826f\u3044\u304b\u3069\u3046\u304b\u3068\u304b\u306f\u77e5\u3089\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3082\u306e\u3092\u66f8\u304f\u3060\u3051\u306a\u3089\u3070\u3001\u601d\u3063\u3066\u3044\u305f\u307b\u3069\u96e3\u3057\u304f\u306a\u304b\u3063\u305f\u3002\nalways\u306e\u4e2d\u4ee5\u5916\u3067\u306f\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7b49\u5f0f\u304c\u6210\u308a\u7acb\u3064\u3082\u306e\u3092\u7e4b\u3052\u3066\u3044\u304f\u3002\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u3002always\u306e\u4e2d\u3082\u4e0a\u304b\u3089\u9806\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5168\u3066\u306e\u4ee3\u5165\u304c\u540c\u6642\u306b\u884c\u308f\u308c\u308b\u3002\u51e6\u7406\u306b\u3088\u3063\u3066\u306f\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u66f8\u304d\u3084\u3059\u305d\u3046\u3002\nVerilog HDL\u306efor\u6587\u306f\u3001\u5185\u5bb9\u304c\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4e2d\u8eab\u304c\u5c55\u958b\u3055\u308c\u308b\u3002Boost\u306eBOOST_PP_REPEAT\u307f\u305f\u3044\u306a\u611f\u3058\u3002\nalways\u3068if\u3067\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u306a\u3063\u3066\u5acc\u3060\u3063\u305f\u3051\u3069\u3001\u3053\u308c\u306f\u3053\u3046\u66f8\u304f\u3057\u304b\u306a\u3044\u3089\u3057\u3044\u3002\n\nalways @(negedge rst) x <= 1'd0;always @(posedge clk) x <= 1'd1;\u3053\u308c\u3067\u3001\u300cx\u306e\u914d\u7dda\u3092\u3069\u3046\u3057\u305f\u3089\u826f\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u300d\u7684\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u304b\u3002\u306a\u308b\u307b\u3069\u3002\u2014 kusano\u3055\u3093@\u304c\u3093\u3070\u3089\u306a\u3044 (@kusano_k) 2016\u5e747\u670818\u65e5\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u8eab\u306f\u5358\u7d14\u3067\u3001\u5e45\u304b\u9ad8\u3055\u304c\u5909\u5316\u3057\u3066\u3044\u305f\u3089\u3001\u8aad\u307f\u8fbc\u3093\u3067\u521d\u671f\u5316\u3059\u308b\u3002\u5f8c\u306f1\u30af\u30ed\u30c3\u30af\u3054\u3068\u306b\u76f8\u624b\u306e\u7bb1\u3092\u5909\u3048\u306a\u304c\u3089\u3001\u7bb1\u306e\u4e2d\u306b\u76f8\u624b\u306e\u7bb1\u304c\u5165\u308b\u304b\u3092\u8abf\u3079\u308b\u3060\u3051\u3002\nmodule present(clk, rst, hled0, hled1, hled2, hled3, hled4, hled5);\n   input clk;\n   input rst;\n   output [6:0] hled0;\n   output [6:0] hled1;\n   output [6:0] hled2;\n   output [6:0] hled3;\n   output [6:0] hled4;\n   output [6:0] hled5;\n\n   parameter N = 100;\n\n   wire [31:0] width;\n   wire [31:0] height;\n   wire [31:0] avail;\n\n   reg [31:0] width_prev;\n   reg [31:0] height_prev;\n\n   reg [31:0] w [0:N-1];\n   reg [31:0] h [0:N-1];\n   reg [31:0] n [0:N-1];\n   reg [31:0] count;\n   reg [31:0] answer;\n   integer i;\n\n   present_core u0 (\n      .clk_clk                               (clk),\n      .reset_reset_n                         (rst),\n      .pio_width_external_connection_export  (width),\n      .pio_height_external_connection_export (height),\n      .pio_avail_external_connection_export  (avail)\n   );\n\n   always @(negedge rst or posedge clk) begin\n\n      //   \u521d\u671f\u5316\n      if (rst==1'd0) begin\n         for (i=0; i<N; i=i+1) begin\n            w[i] <= 32'd0;\n            h[i] <= 32'd0;\n            n[i] <= 32'd0;\n         end\n         count <= 32'd0;\n         answer <= 32'd0;\n\n      end else begin\n         //   \u5165\u529b\u304c\u524d\u56de\u3068\u5909\u5316\u3057\u3066\u3044\u308c\u3070\u5024\u3092\u8aad\u307f\u8fbc\u3080\n         if (avail[0] != 32'd0 &&\n             (width != width_prev || height != height_prev)) begin\n            width_prev <= width;\n            height_prev <= height;\n            w[0] <= width;\n            h[0] <= height;\n            n[0] <= 32'd1;\n            for (i=1; i<N; i=i+1) begin\n               w[i] <= w[i-1];\n               h[i] <= h[i-1];\n               n[i] <= 32'd1;\n            end\n            count <= 32'd0;\n            answer <= 32'd0;\n         end else begin\n            //   \u30b5\u30a4\u30ba\u304c\u6709\u52b9\u306a\u7bb1\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e2d\u306b\u5165\u308c\u3089\u308c\u308b\u306a\u3089\u3070\u5165\u308c\u308b\n            for (i=0; i<N; i=i+1) begin\n               if (w[i] != 32'd0 &&\n                   w[count] != 32'd0 &&\n                   w[i] > w[count] &&\n                   h[i] > h[count] &&\n                   n[i] < n[count]+1)\n                  n[i] <= n[count]+1;\n            end\n            if (answer < n[count])\n               answer <= n[count];\n\n            count <= count<N-1 ? count+1'b1 : 32'd0;\n         end\n      end\n   end\n\n   function [6:0] led;\n      input [3:0] v;\n   begin\n      case (v)\n         4'h0: led = 7'b1000000;\n         4'h1: led = 7'b1111001;\n         4'h2: led = 7'b0100100;\n         4'h3: led = 7'b0110000;\n         4'h4: led = 7'b0011001;\n         4'h5: led = 7'b0010010;\n         4'h6: led = 7'b0000010;\n         4'h7: led = 7'b1011000;\n         4'h8: led = 7'b0000000;\n         4'h9: led = 7'b0010000;\n         4'ha: led = 7'b0001000;\n         4'hb: led = 7'b0000011;\n         4'hc: led = 7'b1000110;\n         4'hd: led = 7'b0100001;\n         4'he: led = 7'b0000110;\n         4'hf: led = 7'b0001110;\n         default: led = 7'b0;\n      endcase\n   end\n   endfunction\n\n   assign hled0 = led(answer[ 3: 0]);\n   assign hled1 = led(answer[ 7: 4]);\n   assign hled2 = led(answer[11: 8]);\n   assign hled3 = led(answer[15:12]);\n   assign hled4 = led(answer[19:16]);\n   assign hled5 = led(answer[23:20]);\nendmodule\n\nw[i] > w[count]\uff08count\u306f\u5024\u304c\u5909\u5316\u3059\u308b\uff09\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u3092\u3059\u308b\u3068\u3001\u5168\u3066\u306ew\u3092\u914d\u7dda\u3067\u7d50\u3076\u5fc5\u8981\u304c\u3042\u3063\u3066\u30c0\u30e1\u306a\u306e\u304b\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u7279\u306b\u554f\u984c\u306f\u7121\u3044\u3089\u3057\u3044\u3002RTL\u304c\u306a\u3093\u304b\u3059\u3054\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u305f\u3051\u3069\u3002\n\n\u4e00\u5fdc\u3001\u305d\u306e\u3088\u3046\u306a\u6bd4\u8f03\u3092\u7121\u304f\u3057\u3066\u3001\u5404\u5909\u6570\u304c\u6c7a\u307e\u3063\u305f\u5909\u6570\u3068\u3060\u3051\u6bd4\u8f03\u3055\u308c\u308b\u3082\u306e\u3082\u66f8\u3044\u3066\u307f\u305f\u3002w1\u3068w2\u3092\u7528\u610f\u3057\u3066\u3001w2\u306e\u307b\u3046\u3092\u30af\u30ed\u30c3\u30af\u3054\u3068\u306b\u56de\u8ee2\u3055\u305b\u3066\u3044\u308b\u3002\u5358\u306b\u4f7f\u7528\u30b2\u30fc\u30c8\u6570\u304c\u5897\u3048\u305f\u3060\u3051\u3060\u3063\u305f\u3002\n\nmodule present(clk, rst, hled0, hled1, hled2, hled3, hled4, hled5);\n    input clk;\n    input rst;\n    output [6:0] hled0;\n    output [6:0] hled1;\n    output [6:0] hled2;\n    output [6:0] hled3;\n    output [6:0] hled4;\n    output [6:0] hled5;\n\n    parameter N = 100;\n\n    wire [31:0] width;\n    wire [31:0] height;\n    wire [31:0] avail;\n\n    reg [31:0] width_prev;\n    reg [31:0] height_prev;\n\n    reg [31:0] w1 [0:N-1];\n    reg [31:0] h1 [0:N-1];\n    reg [31:0] n1 [0:N-1];\n    reg [31:0] w2 [0:N-1];\n    reg [31:0] h2 [0:N-1];\n    reg [31:0] n2 [0:N-1];\n    reg [31:0] count;\n    reg [31:0] answer;\n    integer i;\n\n    present_core u0 (\n        .clk_clk                               (clk),\n        .reset_reset_n                         (rst),\n        .pio_width_external_connection_export  (width),\n        .pio_height_external_connection_export (height),\n        .pio_avail_external_connection_export  (avail)\n    );\n\n    always @(negedge rst or posedge clk) begin\n\n        //  \u521d\u671f\u5316\n        if (rst==1'd0) begin\n            width_prev = 32'd0;\n            height_prev = 32'd0;\n            for (i=0; i<N; i=i+1) begin\n                w1[i] <= 32'd0;\n                h1[i] <= 32'd0;\n                n1[i] <= 32'd0;\n                w2[i] <= 32'd0;\n                h2[i] <= 32'd0;\n                n2[i] <= 32'd0;\n            end\n            count <= 32'd0;\n            answer <= 32'd0;\n\n        end else begin\n            //  \u5165\u529b\u304c\u524d\u56de\u3068\u5909\u5316\u3057\u3066\u3044\u308c\u3070\u5024\u3092\u8aad\u307f\u8fbc\u3080\n            if (avail[0] != 32'd0 &&\n                 (width != width_prev || height != height_prev)) begin\n                width_prev <= width;\n                height_prev <= height;\n\n                w1[0] <= width;\n                h1[0] <= height;\n                n1[0] <= 32'd1;\n                w2[0] <= width;\n                h2[0] <= height;\n                n2[0] <= 32'd1;\n                for(i=1; i<N; i=i+1) begin\n                    w1[i] <= w1[i-1];\n                    h1[i] <= h1[i-1];\n                    n1[i] <= 32'd1;\n                    w2[i] <= w1[i-1];\n                    h2[i] <= h1[i-1];\n                    n2[i] <= 32'd1;\n                end\n                count <= 32'd0;\n                answer <= 32'd0;\n\n            end else begin\n                //  \u30b5\u30a4\u30ba\u304c\u6709\u52b9\u306a\u7bb1\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e2d\u306b\u5165\u308c\u3089\u308c\u308b\u306a\u3089\u3070\u5165\u308c\u308b\n                for (i=0; i<N; i=i+1) begin\n                    if (w1[i] != 32'd0 &&\n                         w2[i] != 32'd0 &&\n                         w1[i] > w2[i] &&\n                         h1[i] > h2[i] &&\n                         n1[i] < n2[i]+1)\n                        n1[i] <= n2[i]+1;\n                end\n\n                //  w2, h2, n2\u3092\u56de\u8ee2\u3055\u305b\u308b\n                //  count\u304c0\u306e\u3068\u304d\u306fn1\u3092n2\u306b\u30b3\u30d4\u30fc\n                w2[0] <= w2[N-1];\n                h2[0] <= h2[N-1];\n                n2[0] <= count!=32'd0 ? n2[N-1] : n1[N-1];\n                for (i=1; i<N; i=i+1) begin\n                    w2[i] <= w2[i-1];\n                    h2[i] <= h2[i-1];\n                    n2[i] <= count!=32'd0 ? n2[i-1] : n1[i-1];\n                end\n\n                if (answer < n2[0])\n                    answer = n2[0];\n\n                count <= count<N-1 ? count+1'b1 : 32'd0;\n            end\n        end\n    end\n\n    function [6:0] led;\n        input [3:0] v;\n    begin\n        case (v)\n            4'h0: led = 7'b1000000;\n            4'h1: led = 7'b1111001;\n            4'h2: led = 7'b0100100;\n            4'h3: led = 7'b0110000;\n            4'h4: led = 7'b0011001;\n            4'h5: led = 7'b0010010;\n            4'h6: led = 7'b0000010;\n            4'h7: led = 7'b1011000;\n            4'h8: led = 7'b0000000;\n            4'h9: led = 7'b0010000;\n            4'ha: led = 7'b0001000;\n            4'hb: led = 7'b0000011;\n            4'hc: led = 7'b1000110;\n            4'hd: led = 7'b0100001;\n            4'he: led = 7'b0000110;\n            4'hf: led = 7'b0001110;\n            default: led = 7'b0;\n        endcase\n    end\n    endfunction\n\n    assign hled0 = led(answer[ 3: 0]);\n    assign hled1 = led(answer[ 7: 4]);\n    assign hled2 = led(answer[11: 8]);\n    assign hled3 = led(answer[15:12]);\n    assign hled4 = led(answer[19:16]);\n    assign hled5 = led(answer[23:20]);\nendmodule\n\n\n\u5b9f\u884c\u7d50\u679c\n\u30b2\u30fc\u30c8\u6570\u304c\u8db3\u308a\u306a\u304f\u3066\u3001N\u306e\u6700\u5927\u5024\u3092100\u304f\u3089\u3044\u306b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3002\u305b\u3081\u30661000\u306b\u3067\u304d\u308c\u3070\u3001\u90e8\u5206\u70b9\u306f\u53d6\u308c\u308b\u306e\u3060\u3051\u3069\u2026\u2026\u3002100\u304f\u3089\u3044\u306a\u3089\u2191\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30821\u79d2\u3067\u7b54\u3048\u304c\u51fa\u308b\u3002\nNios II Software Build Tools for Eclipse\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u306f\u306a\u305c\u304b\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u304b\u3089\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\u3053\u3053\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306b\u3001altera_lite\\16.0\\quartus\\bin64\u306b\u5165\u3063\u3066\u3044\u308bNios2-terminal.exe\u3092\u4f7f\u3063\u305f\u3002\u4e00\u5ea6Eclipse\u304b\u3089\u5b9f\u884c\u3059\u308c\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306fFPGA\u30dc\u30fc\u30c9\u306b\u8ee2\u9001\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Nios2-terminal.exe\u3092\u8d77\u52d5\u3057\u3066FPGA\u30dc\u30fc\u30c9\u306e\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3059\u308b\u3002\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u6d41\u3057\u8fbc\u3093\u3067\u3082\u4e0a\u624b\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001DOS\u7a93\u306b\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u304b\u3089\u8cbc\u308a\u4ed8\u3051\u305f\u3002\n100\n96646 44074\n750 91098\n93927 58223\n67157 8394\n76649 23681\n3082 78878\n34609 62329\n61582 14856\n18310 11442\n1462 48676\n96491 6457\n54109 46590\n60147 8893\n57901 26959\n55644 64464\n48104 35524\n24916 93352\n45339 53017\n1930 50811\n579 14377\n47283 37735\n5418 58753\n16401 55734\n14425 93731\n77098 95694\n14123 30540\n3959 27679\n80652 17735\n15458 95472\n15456 83389\n4107 38619\n34960 34171\n81647 47594\n78290 47085\n81735 88157\n43960 78107\n81475 29568\n12388 18563\n43606 11947\n52980 82943\n48521 81774\n65640 64105\n34535 70266\n80995 15717\n90800 26934\n15485 84048\n72013 79357\n44668 7078\n39525 4774\n28614 3800\n50672 8767\n93283 69939\n31699 94506\n6623 25743\n7300 42631\n20190 39665\n70486 88736\n50052 81854\n36126 85869\n51504 70242\n17469 58452\n30178 81286\n53435 49959\n77333 54904\n33376 13094\n62451 92535\n84234 6975\n32529 171\n67470 63829\n75791 14828\n21704 43278\n73673 20712\n82284 38121\n87429 96003\n53749 92107\n42204 68528\n84691 83877\n9287 26032\n41026 85783\n27675 11374\n37535 21389\n71624 58751\n5250 87744\n44056 77689\n16533 30792\n7333 39500\n42892 68280\n47959 40052\n47797 28127\n36953 60050\n20607 51887\n92968 45742\n66832 65985\n80135 72556\n66071 10372\n36664 79407\n6520 14002\n90537 58802\n98017 75359\n99568 29862\n\n\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u30010x11\u3068\u3044\u3046\u7b54\u3048\u304c\u51fa\u305f\u306e\u304c\u6700\u521d\u306e\u5199\u771f\u3002\u6210\u529f\ud83c\udf89\ud83c\udf89\ud83c\udf89\ud83c\udf89\n\u5b9f\u884c\u4e2d\u306e\u69d8\u5b50\u3092\u898b\u3066\u3044\u308b\u3068\u3001\u4e00\u77ac\u3060\u304c\u3001\u6570\u5b57\u304c\u5897\u3048\u3066\u3044\u3063\u30660x11\u306b\u306a\u308b\u306e\u304c\u76ee\u3067\u898b\u3048\u308b\u300210000\u30af\u30ed\u30c3\u30af\u3067\u7b54\u3048\u304c\u51fa\u308b\u306f\u305a\u306a\u306e\u3067\u300150MHz\u306a\u3089\u30700.0002\u79d2\u3002\u672c\u5f53\u306b\u3053\u306e\u901f\u3055\u306a\u3089\u3001\u76ee\u306b\u306f\u898b\u3048\u306a\u3044\u306f\u305a\u3002\u304a\u305d\u3089\u304fFPGA\u3078\u306e\u5165\u529b\u306e\u8ee2\u9001\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3002\n\u4f55\u304b\u3068\u9762\u5012\u3060\u3057\u3001\u3053\u306eFPGA\u30dc\u30fc\u30c9\u3060\u3068\u4eca\u56de\u306e\u4f8b\u3067\u3082100\u4e26\u5217\u304f\u3089\u3044\u3060\u3057\u3001\u7d20\u76f4\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5de5\u592b\u3057\u3066PC\u3067\u89e3\u3044\u305f\u307b\u3046\u304c\u697d\u305d\u3046\u3002\n![20160917_2.jpg](https://qiita-image-store.s3.amazonaws.com/0/25276/ab950da5-ae1f-7992-db90-9e211f2bdd90.jpeg)\n\nFPGA DE0-CV\u3092\u3001\u9593\u9055\u3063\u3066\u4e8c\u91cd\u306b\u6ce8\u6587\u3057\u305f\u4eba\u304b\u3089\u8cb7\u3044\u53d6\u3063\u305f\u3002\u3061\u3087\u3063\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3001LED\u3092\u5149\u3089\u305b\u305f\u308a\u3001\u30b9\u30a4\u30c3\u30c1\u306b\u53cd\u5fdc\u3055\u305b\u305f\u308a\u3059\u308b\u306e\u3082\u697d\u3057\u3044\u3051\u308c\u3069\u3001\u305d\u308c\u306a\u3089\u3082\u3063\u3068\u5b89\u3044Arduino\u3067\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u3069\u3046\u305b\u306a\u3089\u3070FPGA\u306e\u8a08\u7b97\u80fd\u529b\u3092\u6d3b\u304b\u3057\u305f\u3044\u3002\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\u3001\u3059\u3050\u306b\u601d\u3044\u3064\u304f\u89e3\u6cd5\u3067\u306f\u9593\u306b\u5408\u308f\u306a\u304f\u3066\u3001\u304c\u3093\u3070\u3063\u3066\u3082\u3063\u3068\u901f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u8003\u3048\u308b\u3068\u3044\u3046\u6d41\u308c\u304c\u591a\u3044\u3002FPGA\u306f\u5358\u7d14\u306a\u51e6\u7406\u306e\u4e26\u5217\u8a08\u7b97\u304c\u5f97\u610f\u306a\u306e\u3067\u3001FPGA\u3092\u4f7f\u3044\u3053\u306a\u305b\u308c\u3070\u3001\u7c21\u5358\u306a\u89e3\u6cd5\u3067\u554f\u984c\u304c\u89e3\u3051\u3066\u6709\u5229\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u305f\u3002\u7d50\u5c40\u3001\u3042\u307e\u308a\u5f79\u306b\u306f\u7acb\u305f\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u3051\u3069\u3001\u8272\u3005\u3068\u8a66\u3057\u305f\u306e\u3067\u66f8\u3044\u3066\u304a\u304f\u3002\n\n# \u554f\u984c\u306e\u9078\u629e\n\n\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u4f7f\u3046\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u3001\u305d\u3082\u305d\u3082\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u624b\u5143\u3067\u5b9f\u884c\u3059\u308b\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002Google Code Jam\uff08GCJ\uff09\u306f\u305d\u306e\u5f62\u5f0f\u3002\u3057\u304b\u3082\u3001GCJ\u306f1\u500b\u306e\u554f\u984c\u306bsmall\u3068large\u306e2\u500b\u306e\u5165\u529b\u304c\u3042\u308b\u3002small\u306e\u89e3\u6cd5\u3092\u305d\u306e\u307e\u307eFPGA\u306b\u5b9f\u88c5\u3057\u3066large\u304c\u89e3\u3051\u308c\u3070\u3068\u3066\u3082\u9762\u767d\u3044\u3002\u3068\u601d\u3063\u3066GCJ\u306e\u904e\u53bb\u554f\u3092\u63a2\u3057\u3066\u307f\u305f\u3051\u3069\u3001\u90fd\u5408\u306e\u826f\u3044\u554f\u984c\u304c\u7121\u304b\u3063\u305f\u3002small\u306f\u6307\u6570\u6642\u9593\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u89e3\u3051\u3066\u3001large\u306f\u305d\u308c\u3092\u591a\u9805\u5f0f\u6642\u9593\u306b\u76f4\u3059\u3068\u3044\u3046\u554f\u984c\u304c\u591a\u304b\u3063\u305f\u3002100\u500d\u30841000\u500d\u9ad8\u901f\u5316\u3059\u308b\u304f\u3089\u3044\u3067\u306f\u8ffd\u3044\u3064\u304b\u306a\u3044\u3002100\u500d\u7a0b\u5ea6\u306e\u901f\u5ea6\u3067\u89e3\u3051\u308b\u304b\u89e3\u3051\u306a\u3044\u304b\u304c\u5909\u308f\u308b\u3068\u3044\u3046\u306e\u306f\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u624b\u5143\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5f62\u5f0f\u3067\u306f\u4e0d\u9069\u5f53\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u305d\u306e\u304f\u3089\u3044\u306e\u9ad8\u901f\u5316\u3067\u89e3\u3051\u308b\u304b\u3069\u3046\u304b\u304c\u5909\u308f\u308b\u554f\u984c\u3068\u3044\u3046\u3053\u3068\u3067\u3001AtCoder Beginner Contest 038\u306e\u300cD - \u30d7\u30ec\u30bc\u30f3\u30c8\u300d\u3092\u9078\u3093\u3060\u3002AtCoder\u306f\u30b5\u30fc\u30d0\u30fc\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u5f62\u5f0f\u306a\u306e\u3067\u3001FPGA\u3067\u5b9f\u969b\u306b\u554f\u984c\u3092\u89e3\u304f\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002AtCoder\u306bFPGA\u3092\u7f6e\u3044\u3066\u307b\u3057\u3044\u3002\n\nhttp://abc038.contest.atcoder.jp/tasks/abc038_d\n\n# \u554f\u984c\u306e\u89e3\u6cd5\n\n\u7bb1\u3092\u4f55\u500b\u5165\u308c\u5b50\u306b\u3067\u304d\u308b\u304b\u3068\u3044\u3046\u554f\u984c\u3002\u5404\u7bb1\u306b\u4ed6\u306e\u7bb1\u3092\u4f55\u500b\u5165\u308c\u3089\u308c\u308b\u304b\u3092\u899a\u3048\u3066\u304a\u304f\u3002\u7bb1a\u306e\u4e2d\u306b\u7bb1b\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u3067\u304d\u3066\u3001\u7bb1b\u306e\u4e2d\u306b\u4ed6\u306e\u7bb1\u3092k\u500b\u5165\u308c\u3089\u308c\u308b\u306e\u306a\u3089\u3070\u3001\u7bb1a\u306b\u306fk+1\u500b\u306e\u7bb1\u3092\u5165\u308c\u3089\u308c\u308b\u3002\u3053\u308c\u3092n\u56de\u7e70\u308a\u8fd4\u305b\u3070\u826f\u3044\u3002Python\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n```py\nN = input()\nw = [0]*N\nh = [0]*N\nfor i in range(N):\n    w[i],h[i] = map(int, raw_input().split())\n\nn = [1]*N\nfor i in range(N):\n    for j in range(N):\n        for k in range(N):\n            if w[j]<w[k] and h[j]<h[k]:\n                n[k] = max(n[k], n[j]+1)\nprint hex(max(n))\n```\n\n$O(n^3)$\u3002\u7bb1\u3092\u4e8b\u524d\u306b\u30bd\u30fc\u30c8\u3057\u3066\u304a\u3051\u3070\u7121\u99c4\u306a\u63a2\u7d22\u3092\u6e1b\u3089\u305b\u3066\u3001$O(n^2)$\u306b\u306a\u308a\u3001\u90e8\u5206\u70b9\u304c\u53d6\u308c\u308b\u3002\u6e80\u70b9\u3092\u53d6\u308b\u65b9\u6cd5\u306f\u672c\u5bb6\u306e\u89e3\u8aac\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\nhttp://abc038.contest.atcoder.jp/data/abc/038/editorial.pdf\n\n$O(n^3)$\u306e\u89e3\u6cd5\u306e`j`\u304b`k`\u306e\u30eb\u30fc\u30d7\u306f\u4e26\u5217\u306b\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002FPGA\u3067\u4e26\u5217\u306b\u8a08\u7b97\u3092\u3059\u308c\u3070\u3001\u3053\u306e\u89e3\u6cd5\u3067\u3082$O(n^2)$\u6642\u9593\u3067\u89e3\u3051\u308b\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\n# \u53c2\u8003\u66f8\n\n\u30b0\u30b0\u308c\u3070Altera\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3082\u3001Verilog HDL\u306e\u89e3\u8aac\u3082\u51fa\u3066\u304f\u308b\u306e\u3060\u3051\u3069\u3001\u7d20\u4eba\u904e\u304e\u3066\u5168\u4f53\u50cf\u304c\u5206\u304b\u3089\u306a\u3044\u3002\u3068\u308a\u3042\u3048\u305a\u3001\u2193\u306e\u672c\u3092\u8cb7\u3063\u305f\u3002\n\n[\u8d85\u5165\u9580\uff01FPGA\u30b9\u30bf\u30fc\u30bf\u30fb\u30ad\u30c3\u30c8DE0\u3067\u59cb\u3081\u308bVerilog HDL: \u3059\u3050\u59cb\u3081\u3089\u308c\u308b!USB\u5bfe\u5fdc\u30fb\u66f8\u304d\u8fbc\u307f\u5668\u4e0d\u8981\u30fb\u5927\u5bb9\u91cfFPGA\u642d\u8f09! (\u30c8\u30e9\u30a4\u30a2\u30eb\u30b7\u30ea\u30fc\u30ba) | \u82b9\u4e95 \u6ecb\u559c | \u672c | Amazon.co.jp](https://www.amazon.co.jp/dp/478983137X)\n\n# \u5165\u51fa\u529b\u306e\u65b9\u6cd5\n\n\u51fa\u529b\u306f\u3001\u6570\u5024\u304c1\u500b\u3060\u3051\u306a\u306e\u3067\u30017\u30bb\u30b0LED\u306b\u51fa\u305b\u3070\u826f\u3044\u3002\n\n\u554f\u984c\u306f\u5165\u529b\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f\u3051\u3063\u3053\u3046\u6642\u9593\u304c\u639b\u304b\u308b\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u5165\u529b\u3092\u57cb\u3081\u8fbc\u3080\u306e\u306f\u3044\u307e\u3044\u3061\u3002\u307e\u3055\u304bFPGA\u30dc\u30fc\u30c9\u306e\u30b9\u30a4\u30c3\u30c1\u3092\u30dd\u30c1\u30dd\u30c1\u3057\u3066\u554f\u984c\u3092\u5165\u529b\u3059\u308b\u308f\u3051\u306b\u306f\u3044\u304b\u306a\u3044\u3002\u5b9f\u88c5\u304c\u7c21\u5358\u306a\u306e\u3067\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u304c\u5b9a\u8de1\u3089\u3057\u3044\u304c\u3001DE0-CV\u306b\u306f\u4ed8\u3044\u3066\u3044\u306a\u3044\u3002\n\nNios II\u3068\u3044\u3046FPGA\u3067\u52d5\u304fCPU\u304c\u3042\u308b\u3089\u3057\u3044\u3002\u3053\u306eCPU\u3067\u306fC\u3067\u66f8\u3044\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u52d5\u304b\u305b\u3066\u3001C\u306e\u30b3\u30fc\u30c9\u304b\u3089\u306f\u30de\u30af\u30ed\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3001FPGA\u5074\u306e\u5909\u6570\u306e\u8aad\u307f\u66f8\u304d\u304c\u3067\u304d\u308b\u3002\u307e\u305f\u3001PC\u304b\u3089\u306f\u30c7\u30d0\u30c3\u30ac\u7d4c\u7531\u3067\u6a19\u6e96\u5165\u51fa\u529b\u304c\u6271\u3048\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u3002\n\n# Qsys\n\nAltera\u306e\u958b\u767a\u30c4\u30fc\u30eb\u306b\u4ed8\u5c5e\u3059\u308bQsys\u3068\u3044\u3046\u30bd\u30d5\u30c8\u3067\u3001\u3053\u306eCPU\u90e8\u5206\u3092\u4f5c\u308b\u3002\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u5fc5\u8981\u306f\u4e00\u5207\u7121\u304f\u3066\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4e26\u3073\u3066\u3001\u7dda\u3092\u7e4b\u3050\u3060\u3051\u3002nios2_gen2\u3068\u3044\u3046\u306e\u304c\u672c\u4f53\u3002\u3042\u3068\u306f\u3001onchip_memory\u3068jtag_uart\u3001\u51fa\u529b\u7528\u306epio\u3002\u5165\u529b\u306e\u30af\u30ed\u30c3\u30af\u3092pll\u306b\u5165\u308c\u3066100Mhz\u306b\u3057\u3001\u51fa\u529b\u306eclk\u3092\u305d\u306e\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30af\u30ed\u30c3\u30af\u306b\u7e4b\u3050\u3002nios2_gen2\u306edata_master\u3092\u4ed6\u306es1\u306a\u3069\u306b\u7e4b\u3050\u3002\u30e1\u30e2\u30ea\u304b\u3089\u547d\u4ee4\u3092\u8aad\u307f\u8fbc\u3080\u306e\u3067\u3001instruction_master\u3082\u30e1\u30e2\u30ea\u306b\u7e4b\u3050\u3002\n\n\u300cFPGA\u30b9\u30bf\u30fc\u30bf\u30fb\u30ad\u30c3\u30c8DE0\u3067\u59cb\u3081\u308bVerilog HDL\u300d\u306b\u306f\u30e1\u30e2\u30ea\u306f16KB\u3067\u8db3\u308a\u308b\u3068\u66f8\u3044\u3066\u3042\u308b\u304c\u3001\u3053\u308c\u306fC\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092Small C Library\u306b\u3057\u305f\u5834\u5408\u3002Small C Library\u306b\u306f\u5165\u529b\u7528\u306e\u95a2\u6570\u304c\u7121\u3044\uff08\u3069\u3053\u304b\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306fscanf\u306a\u3069\u304c\u7121\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u3066\u3001gets\u306a\u3089\u3042\u308b\u304b\u3068\u601d\u3063\u305f\u3051\u3069\u3001\u7121\u304b\u3063\u305f\uff09\u306e\u3067\u3001Small\u3067\u306f\u306a\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001128KB\u304f\u3089\u3044\u5fc5\u8981\u3060\u3063\u305f\u3002\n\n<a href=\"https://qiita-image-store.s3.amazonaws.com/0/25276/c6300b3c-fad5-abb8-6aef-0eba81e7e318.png\"><img width=\"480\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25276/c6300b3c-fad5-abb8-6aef-0eba81e7e318.png\"></a>\n\n# C\u30d7\u30ed\u30b0\u30e9\u30e0\n\n`IOWR_32DIRECT`\u3068\u3044\u3046\u30de\u30af\u30ed\u3067FPGA\u5074\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3081\u308b\u3089\u3057\u3044\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u307f\u53d6\u3063\u3066\u3001\u7bb1\u306e\u5e45\u3068\u9ad8\u3055\u3092\u66f8\u304d\u51fa\u3059\u3060\u3051\u3002\u5e45\u3060\u3051\u3092\u66f8\u304d\u51fa\u3057\u3066\u6642\u70b9\u3067FPGA\u5074\u304b\u3089\u8aad\u307f\u53d6\u3089\u308c\u3066\u3082\u56f0\u308b\u306e\u3067\u3001\u66f8\u304d\u8fbc\u307f\u304c\u7d42\u308f\u3063\u305f\u304b\u3069\u3046\u304b\u3092\u8868\u308f\u3059\u5909\u6570\u3082\u7528\u610f\u3057\u305f\u3002\u672c\u5f53\u306fFPGA\u5074\u3067\u8aad\u307f\u53d6\u308a\u304c\u5b8c\u4e86\u3057\u305f\u304b\u3069\u3046\u304b\u3082\u8abf\u3079\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046\u3051\u3069\u3001\u4eca\u56de\u306f\u6bce\u30af\u30ed\u30c3\u30af\u8aad\u307f\u8fbc\u3093\u3067\u3044\u308b\u306e\u3067\u3001CPU\u5074\u306e\u5b9f\u884c\u304c\u6b21\u306b\u9032\u3080\u3088\u308a\u3082\u8aad\u307f\u53d6\u308b\u65b9\u304c\u65e9\u3044\u306f\u305a\u3002`n`\u306e\u5024\u306f\u6e21\u3057\u3066\u3044\u3066\u3044\u306a\u3044\u3002FPGA\u5074\u306f\u8aad\u307f\u8fbc\u3093\u3060\u5206\u3060\u3051\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```c\n#include \"alt_types.h\"\n#include \"altera_avalon_pio_regs.h\"\n#include \"sys/alt_irq.h\"\n#include \"system.h\"\n#include <stdio.h>\n#include <unistd.h>\n\nint main()\n{\n    printf(\"Hello from Nios II!\\n\");\n\n    int N, i;\n    scanf(\"%d\", &N);\n    printf(\"N=%d\\n\", N);\n\n    for (i=0; i<N; i++)\n    {\n        int w, h;\n        scanf(\"%d%d\", &w, &h);\n        printf(\"w=%d, h=%d\\n\", w, h);\n\n        IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0);\n        IOWR_32DIRECT(PIO_WIDTH_BASE, 0, w);\n        IOWR_32DIRECT(PIO_HEIGHT_BASE, 0, h);\n        IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0xffffffffu);\n    }\n\n    IOWR_32DIRECT(PIO_AVAIL_BASE, 0, 0);\n\n    return 0;\n}\n```\n\n# FPGA\u5074\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u52b9\u7387\u304c\u826f\u3044\u304b\u3069\u3046\u304b\u3068\u304b\u306f\u77e5\u3089\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u3082\u306e\u3092\u66f8\u304f\u3060\u3051\u306a\u3089\u3070\u3001\u601d\u3063\u3066\u3044\u305f\u307b\u3069\u96e3\u3057\u304f\u306a\u304b\u3063\u305f\u3002\n\n`always`\u306e\u4e2d\u4ee5\u5916\u3067\u306f\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u7b49\u5f0f\u304c\u6210\u308a\u7acb\u3064\u3082\u306e\u3092\u7e4b\u3052\u3066\u3044\u304f\u3002\u95a2\u6570\u578b\u8a00\u8a9e\u3063\u307d\u3044\u3002`always`\u306e\u4e2d\u3082\u4e0a\u304b\u3089\u9806\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u5168\u3066\u306e\u4ee3\u5165\u304c\u540c\u6642\u306b\u884c\u308f\u308c\u308b\u3002\u51e6\u7406\u306b\u3088\u3063\u3066\u306f\u3053\u3061\u3089\u306e\u307b\u3046\u304c\u66f8\u304d\u3084\u3059\u305d\u3046\u3002\n\nVerilog HDL\u306e`for`\u6587\u306f\u3001\u5185\u5bb9\u304c\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u4e2d\u8eab\u304c\u5c55\u958b\u3055\u308c\u308b\u3002Boost\u306e[BOOST_PP_REPEAT](http://www.kmonos.net/alang/boost/classes/preprocessor.html)\u307f\u305f\u3044\u306a\u611f\u3058\u3002\n\n`always`\u3068`if`\u3067\u30cd\u30b9\u30c8\u304c\u6df1\u304f\u306a\u3063\u3066\u5acc\u3060\u3063\u305f\u3051\u3069\u3001\u3053\u308c\u306f\u3053\u3046\u66f8\u304f\u3057\u304b\u306a\u3044\u3089\u3057\u3044\u3002\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">always @(negedge rst) x &lt;= 1&#39;d0;<br>always @(posedge clk) x &lt;= 1&#39;d1;<br>\u3053\u308c\u3067\u3001\u300cx\u306e\u914d\u7dda\u3092\u3069\u3046\u3057\u305f\u3089\u826f\u3044\u304b\u5206\u304b\u3089\u306a\u3044\u300d\u7684\u306a\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u304b\u3002\u306a\u308b\u307b\u3069\u3002</p>&mdash; kusano\u3055\u3093@\u304c\u3093\u3070\u3089\u306a\u3044 (@kusano_k) <a href=\"https://twitter.com/kusano_k/status/755028273025777665\">2016\u5e747\u670818\u65e5</a></blockquote>\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u8eab\u306f\u5358\u7d14\u3067\u3001\u5e45\u304b\u9ad8\u3055\u304c\u5909\u5316\u3057\u3066\u3044\u305f\u3089\u3001\u8aad\u307f\u8fbc\u3093\u3067\u521d\u671f\u5316\u3059\u308b\u3002\u5f8c\u306f1\u30af\u30ed\u30c3\u30af\u3054\u3068\u306b\u76f8\u624b\u306e\u7bb1\u3092\u5909\u3048\u306a\u304c\u3089\u3001\u7bb1\u306e\u4e2d\u306b\u76f8\u624b\u306e\u7bb1\u304c\u5165\u308b\u304b\u3092\u8abf\u3079\u308b\u3060\u3051\u3002\n\n```verilog\nmodule present(clk, rst, hled0, hled1, hled2, hled3, hled4, hled5);\n   input clk;\n   input rst;\n   output [6:0] hled0;\n   output [6:0] hled1;\n   output [6:0] hled2;\n   output [6:0] hled3;\n   output [6:0] hled4;\n   output [6:0] hled5;\n   \n   parameter N = 100;\n   \n   wire [31:0] width;\n   wire [31:0] height;\n   wire [31:0] avail;\n   \n   reg [31:0] width_prev;\n   reg [31:0] height_prev;\n   \n   reg [31:0] w [0:N-1];\n   reg [31:0] h [0:N-1];\n   reg [31:0] n [0:N-1];\n   reg [31:0] count;\n   reg [31:0] answer;\n   integer i;\n   \n   present_core u0 (\n      .clk_clk                               (clk),\n      .reset_reset_n                         (rst),\n      .pio_width_external_connection_export  (width),\n      .pio_height_external_connection_export (height),\n      .pio_avail_external_connection_export  (avail)\n   );\n\n   always @(negedge rst or posedge clk) begin\n\n      //   \u521d\u671f\u5316\n      if (rst==1'd0) begin\n         for (i=0; i<N; i=i+1) begin\n            w[i] <= 32'd0;\n            h[i] <= 32'd0;\n            n[i] <= 32'd0;\n         end\n         count <= 32'd0;\n         answer <= 32'd0;\n\n      end else begin\n         //   \u5165\u529b\u304c\u524d\u56de\u3068\u5909\u5316\u3057\u3066\u3044\u308c\u3070\u5024\u3092\u8aad\u307f\u8fbc\u3080\n         if (avail[0] != 32'd0 &&\n             (width != width_prev || height != height_prev)) begin\n            width_prev <= width;\n            height_prev <= height;\n            w[0] <= width;\n            h[0] <= height;\n            n[0] <= 32'd1;\n            for (i=1; i<N; i=i+1) begin\n               w[i] <= w[i-1];\n               h[i] <= h[i-1];\n               n[i] <= 32'd1;\n            end\n            count <= 32'd0;\n            answer <= 32'd0;\n         end else begin\n            //   \u30b5\u30a4\u30ba\u304c\u6709\u52b9\u306a\u7bb1\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e2d\u306b\u5165\u308c\u3089\u308c\u308b\u306a\u3089\u3070\u5165\u308c\u308b\n            for (i=0; i<N; i=i+1) begin\n               if (w[i] != 32'd0 &&\n                   w[count] != 32'd0 &&\n                   w[i] > w[count] &&\n                   h[i] > h[count] &&\n                   n[i] < n[count]+1)\n                  n[i] <= n[count]+1;\n            end\n            if (answer < n[count])\n               answer <= n[count];\n            \n            count <= count<N-1 ? count+1'b1 : 32'd0;\n         end\n      end\n   end\n   \n   function [6:0] led;\n      input [3:0] v;\n   begin\n      case (v)\n         4'h0: led = 7'b1000000;\n         4'h1: led = 7'b1111001;\n         4'h2: led = 7'b0100100;\n         4'h3: led = 7'b0110000;\n         4'h4: led = 7'b0011001;\n         4'h5: led = 7'b0010010;\n         4'h6: led = 7'b0000010;\n         4'h7: led = 7'b1011000;\n         4'h8: led = 7'b0000000;\n         4'h9: led = 7'b0010000;\n         4'ha: led = 7'b0001000;\n         4'hb: led = 7'b0000011;\n         4'hc: led = 7'b1000110;\n         4'hd: led = 7'b0100001;\n         4'he: led = 7'b0000110;\n         4'hf: led = 7'b0001110;\n         default: led = 7'b0;\n      endcase\n   end\n   endfunction\n   \n   assign hled0 = led(answer[ 3: 0]);\n   assign hled1 = led(answer[ 7: 4]);\n   assign hled2 = led(answer[11: 8]);\n   assign hled3 = led(answer[15:12]);\n   assign hled4 = led(answer[19:16]);\n   assign hled5 = led(answer[23:20]);\nendmodule\n```\n\n`w[i] > w[count]`\uff08`count`\u306f\u5024\u304c\u5909\u5316\u3059\u308b\uff09\u307f\u305f\u3044\u306a\u66f8\u304d\u65b9\u3092\u3059\u308b\u3068\u3001\u5168\u3066\u306e`w`\u3092\u914d\u7dda\u3067\u7d50\u3076\u5fc5\u8981\u304c\u3042\u3063\u3066\u30c0\u30e1\u306a\u306e\u304b\u3068\u601d\u3063\u3066\u3044\u305f\u304c\u3001\u7279\u306b\u554f\u984c\u306f\u7121\u3044\u3089\u3057\u3044\u3002RTL\u304c\u306a\u3093\u304b\u3059\u3054\u3044\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u305f\u3051\u3069\u3002\n\n<a href\"https://qiita-image-store.s3.amazonaws.com/0/25276/3bfbb9aa-a9da-469e-554a-1485c3e790d6.png\"><img width=\"320\" src=\"https://qiita-image-store.s3.amazonaws.com/0/25276/3bfbb9aa-a9da-469e-554a-1485c3e790d6.png\"></a>\n\n\u4e00\u5fdc\u3001\u305d\u306e\u3088\u3046\u306a\u6bd4\u8f03\u3092\u7121\u304f\u3057\u3066\u3001\u5404\u5909\u6570\u304c\u6c7a\u307e\u3063\u305f\u5909\u6570\u3068\u3060\u3051\u6bd4\u8f03\u3055\u308c\u308b\u3082\u306e\u3082\u66f8\u3044\u3066\u307f\u305f\u3002`w1`\u3068`w2`\u3092\u7528\u610f\u3057\u3066\u3001`w2`\u306e\u307b\u3046\u3092\u30af\u30ed\u30c3\u30af\u3054\u3068\u306b\u56de\u8ee2\u3055\u305b\u3066\u3044\u308b\u3002\u5358\u306b\u4f7f\u7528\u30b2\u30fc\u30c8\u6570\u304c\u5897\u3048\u305f\u3060\u3051\u3060\u3063\u305f\u3002\n\n```verilog\n\nmodule present(clk, rst, hled0, hled1, hled2, hled3, hled4, hled5);\n    input clk;\n    input rst;\n    output [6:0] hled0;\n    output [6:0] hled1;\n    output [6:0] hled2;\n    output [6:0] hled3;\n    output [6:0] hled4;\n    output [6:0] hled5;\n\n    parameter N = 100;\n\n    wire [31:0] width;\n    wire [31:0] height;\n    wire [31:0] avail;\n\n    reg [31:0] width_prev;\n    reg [31:0] height_prev;\n\n    reg [31:0] w1 [0:N-1];\n    reg [31:0] h1 [0:N-1];\n    reg [31:0] n1 [0:N-1];\n    reg [31:0] w2 [0:N-1];\n    reg [31:0] h2 [0:N-1];\n    reg [31:0] n2 [0:N-1];\n    reg [31:0] count;\n    reg [31:0] answer;\n    integer i;\n\n    present_core u0 (\n        .clk_clk                               (clk),\n        .reset_reset_n                         (rst),\n        .pio_width_external_connection_export  (width),\n        .pio_height_external_connection_export (height),\n        .pio_avail_external_connection_export  (avail)\n    );\n\n    always @(negedge rst or posedge clk) begin\n\n        //  \u521d\u671f\u5316\n        if (rst==1'd0) begin\n            width_prev = 32'd0;\n            height_prev = 32'd0;\n            for (i=0; i<N; i=i+1) begin\n                w1[i] <= 32'd0;\n                h1[i] <= 32'd0;\n                n1[i] <= 32'd0;\n                w2[i] <= 32'd0;\n                h2[i] <= 32'd0;\n                n2[i] <= 32'd0;\n            end\n            count <= 32'd0;\n            answer <= 32'd0;\n\n        end else begin\n            //  \u5165\u529b\u304c\u524d\u56de\u3068\u5909\u5316\u3057\u3066\u3044\u308c\u3070\u5024\u3092\u8aad\u307f\u8fbc\u3080\n            if (avail[0] != 32'd0 &&\n                 (width != width_prev || height != height_prev)) begin\n                width_prev <= width;\n                height_prev <= height;\n                \n                w1[0] <= width;\n                h1[0] <= height;\n                n1[0] <= 32'd1;\n                w2[0] <= width;\n                h2[0] <= height;\n                n2[0] <= 32'd1;\n                for(i=1; i<N; i=i+1) begin\n                    w1[i] <= w1[i-1];\n                    h1[i] <= h1[i-1];\n                    n1[i] <= 32'd1;\n                    w2[i] <= w1[i-1];\n                    h2[i] <= h1[i-1];\n                    n2[i] <= 32'd1;\n                end\n                count <= 32'd0;\n                answer <= 32'd0;\n\n            end else begin\n                //  \u30b5\u30a4\u30ba\u304c\u6709\u52b9\u306a\u7bb1\u3092\u6bd4\u8f03\u3057\u3066\u3001\u4e2d\u306b\u5165\u308c\u3089\u308c\u308b\u306a\u3089\u3070\u5165\u308c\u308b\n                for (i=0; i<N; i=i+1) begin\n                    if (w1[i] != 32'd0 &&\n                         w2[i] != 32'd0 &&\n                         w1[i] > w2[i] &&\n                         h1[i] > h2[i] &&\n                         n1[i] < n2[i]+1)\n                        n1[i] <= n2[i]+1;\n                end\n                \n                //  w2, h2, n2\u3092\u56de\u8ee2\u3055\u305b\u308b\n                //  count\u304c0\u306e\u3068\u304d\u306fn1\u3092n2\u306b\u30b3\u30d4\u30fc\n                w2[0] <= w2[N-1];\n                h2[0] <= h2[N-1];\n                n2[0] <= count!=32'd0 ? n2[N-1] : n1[N-1];\n                for (i=1; i<N; i=i+1) begin\n                    w2[i] <= w2[i-1];\n                    h2[i] <= h2[i-1];\n                    n2[i] <= count!=32'd0 ? n2[i-1] : n1[i-1];\n                end\n                \n                if (answer < n2[0])\n                    answer = n2[0];\n            \n                count <= count<N-1 ? count+1'b1 : 32'd0;\n            end\n        end\n    end\n\n    function [6:0] led;\n        input [3:0] v;\n    begin\n        case (v)\n            4'h0: led = 7'b1000000;\n            4'h1: led = 7'b1111001;\n            4'h2: led = 7'b0100100;\n            4'h3: led = 7'b0110000;\n            4'h4: led = 7'b0011001;\n            4'h5: led = 7'b0010010;\n            4'h6: led = 7'b0000010;\n            4'h7: led = 7'b1011000;\n            4'h8: led = 7'b0000000;\n            4'h9: led = 7'b0010000;\n            4'ha: led = 7'b0001000;\n            4'hb: led = 7'b0000011;\n            4'hc: led = 7'b1000110;\n            4'hd: led = 7'b0100001;\n            4'he: led = 7'b0000110;\n            4'hf: led = 7'b0001110;\n            default: led = 7'b0;\n        endcase\n    end\n    endfunction\n\n    assign hled0 = led(answer[ 3: 0]);\n    assign hled1 = led(answer[ 7: 4]);\n    assign hled2 = led(answer[11: 8]);\n    assign hled3 = led(answer[15:12]);\n    assign hled4 = led(answer[19:16]);\n    assign hled5 = led(answer[23:20]);\nendmodule\n```\n\n# \u5b9f\u884c\u7d50\u679c\n\n\u30b2\u30fc\u30c8\u6570\u304c\u8db3\u308a\u306a\u304f\u3066\u3001`N`\u306e\u6700\u5927\u5024\u3092100\u304f\u3089\u3044\u306b\u3057\u304b\u3067\u304d\u306a\u304b\u3063\u305f\u3002\u305b\u3081\u30661000\u306b\u3067\u304d\u308c\u3070\u3001\u90e8\u5206\u70b9\u306f\u53d6\u308c\u308b\u306e\u3060\u3051\u3069\u2026\u2026\u3002100\u304f\u3089\u3044\u306a\u3089\u2191\u306ePython\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30821\u79d2\u3067\u7b54\u3048\u304c\u51fa\u308b\u3002\n\nNios II Software Build Tools for Eclipse\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u306f\u306a\u305c\u304b\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u304b\u3089\u8cbc\u308a\u4ed8\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002[\u3053\u3053](http://www.alteraforum.com/forum/showthread.php?t=26653)\u306b\u66f8\u3044\u3066\u3042\u308b\u3088\u3046\u306b\u3001altera_lite\\16.0\\quartus\\bin64\u306b\u5165\u3063\u3066\u3044\u308bNios2-terminal.exe\u3092\u4f7f\u3063\u305f\u3002\u4e00\u5ea6Eclipse\u304b\u3089\u5b9f\u884c\u3059\u308c\u3070\u30d7\u30ed\u30b0\u30e9\u30e0\u306fFPGA\u30dc\u30fc\u30c9\u306b\u8ee2\u9001\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001Nios2-terminal.exe\u3092\u8d77\u52d5\u3057\u3066FPGA\u30dc\u30fc\u30c9\u306e\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u958b\u59cb\u3059\u308b\u3002\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u6d41\u3057\u8fbc\u3093\u3067\u3082\u4e0a\u624b\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u306e\u3067\u3001DOS\u7a93\u306b\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u304b\u3089\u8cbc\u308a\u4ed8\u3051\u305f\u3002\n\n```\n100\n96646 44074\n750 91098\n93927 58223\n67157 8394\n76649 23681\n3082 78878\n34609 62329\n61582 14856\n18310 11442\n1462 48676\n96491 6457\n54109 46590\n60147 8893\n57901 26959\n55644 64464\n48104 35524\n24916 93352\n45339 53017\n1930 50811\n579 14377\n47283 37735\n5418 58753\n16401 55734\n14425 93731\n77098 95694\n14123 30540\n3959 27679\n80652 17735\n15458 95472\n15456 83389\n4107 38619\n34960 34171\n81647 47594\n78290 47085\n81735 88157\n43960 78107\n81475 29568\n12388 18563\n43606 11947\n52980 82943\n48521 81774\n65640 64105\n34535 70266\n80995 15717\n90800 26934\n15485 84048\n72013 79357\n44668 7078\n39525 4774\n28614 3800\n50672 8767\n93283 69939\n31699 94506\n6623 25743\n7300 42631\n20190 39665\n70486 88736\n50052 81854\n36126 85869\n51504 70242\n17469 58452\n30178 81286\n53435 49959\n77333 54904\n33376 13094\n62451 92535\n84234 6975\n32529 171\n67470 63829\n75791 14828\n21704 43278\n73673 20712\n82284 38121\n87429 96003\n53749 92107\n42204 68528\n84691 83877\n9287 26032\n41026 85783\n27675 11374\n37535 21389\n71624 58751\n5250 87744\n44056 77689\n16533 30792\n7333 39500\n42892 68280\n47959 40052\n47797 28127\n36953 60050\n20607 51887\n92968 45742\n66832 65985\n80135 72556\n66071 10372\n36664 79407\n6520 14002\n90537 58802\n98017 75359\n99568 29862\n```\n\n\u3092\u8cbc\u308a\u4ed8\u3051\u3066\u3001`0x11`\u3068\u3044\u3046\u7b54\u3048\u304c\u51fa\u305f\u306e\u304c\u6700\u521d\u306e\u5199\u771f\u3002\u6210\u529f\ud83c\udf89\ud83c\udf89\ud83c\udf89\ud83c\udf89\n\n\u5b9f\u884c\u4e2d\u306e\u69d8\u5b50\u3092\u898b\u3066\u3044\u308b\u3068\u3001\u4e00\u77ac\u3060\u304c\u3001\u6570\u5b57\u304c\u5897\u3048\u3066\u3044\u3063\u3066`0x11`\u306b\u306a\u308b\u306e\u304c\u76ee\u3067\u898b\u3048\u308b\u300210000\u30af\u30ed\u30c3\u30af\u3067\u7b54\u3048\u304c\u51fa\u308b\u306f\u305a\u306a\u306e\u3067\u300150MHz\u306a\u3089\u30700.0002\u79d2\u3002\u672c\u5f53\u306b\u3053\u306e\u901f\u3055\u306a\u3089\u3001\u76ee\u306b\u306f\u898b\u3048\u306a\u3044\u306f\u305a\u3002\u304a\u305d\u3089\u304fFPGA\u3078\u306e\u5165\u529b\u306e\u8ee2\u9001\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3002\n\n\u4f55\u304b\u3068\u9762\u5012\u3060\u3057\u3001\u3053\u306eFPGA\u30dc\u30fc\u30c9\u3060\u3068\u4eca\u56de\u306e\u4f8b\u3067\u3082100\u4e26\u5217\u304f\u3089\u3044\u3060\u3057\u3001\u7d20\u76f4\u306b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5de5\u592b\u3057\u3066PC\u3067\u89e3\u3044\u305f\u307b\u3046\u304c\u697d\u305d\u3046\u3002\n"}