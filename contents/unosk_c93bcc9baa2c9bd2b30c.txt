{"context": " More than 1 year has passed since last update.\u5f0a\u793e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304b\u3089\u306e\u8ee2\u8f09\u3067\u3059\nCarrierWave\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u306e\u6a2a\u5e45\u306a\u3069\u3092Validate\u3059\u308b\u65b9\u6cd5 @ heathrow.lab\n\u6700\u8fd1CarriweWave\u306e\u3053\u3068\u3070\u304b\u308a\u66f8\u3044\u3066\u308b\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u6c17\u306b\u305b\u305a\u4eca\u56de\u3082CarrierWave\u3067\u3059\u3002\n\u4f8b\u3048\u3070\u6a2a\u5e45100px\u672a\u6e80\u306e\u753b\u50cf\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306b\u3057\u305f\u3044\u3063\u3066\u3053\u3068\u3042\u308a\u307e\u3059\u3088\u306d\u3002\nCarrierWave\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u305d\u3046\u3044\u3046Validator\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u3082\u306a\u3044\u306e\u304c\u60a9\u307e\u3057\u3044\u3002\n\u3067\u306f\u3001\u3069\u3046\u3044\u3063\u305f\u65b9\u6cd5\u3067\u3084\u308c\u3070\u3044\u3044\u306e\u304b\u3002\n\u65e5\u672c\u8a9e\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u3088\u3046\u306e\u306a\u306e\u3067\u3001\u5f0a\u793e\u3067\u884c\u3063\u3066\u3044\u308b\u65b9\u6cd5\u3092\u5171\u6709\u3057\u3066\u307f\u307e\u3059\u3002\n# Rmagick\u4f7f\u3044\u307e\u3059\n\n\u4e0b\u6e96\u5099\n1.\u753b\u50cf\u306e\u6a2a\u5e45\u7e26\u5e45\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081CarrierWave::RMagick\u3092\u62e1\u5f35\n2.\u753b\u50cf\u306e\u6a2a\u5e45\u7e26\u5e45\u3092\u691c\u8a3c\u3059\u308bValidator\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\u307e\u305a\u3001CarrierWave::RMagic\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\n\u3053\u306eset_dimension\u3068\u3044\u3046\u95a2\u6570\u3067\n\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u3092Rmagick\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6a2a\u5e45\u7e26\u5e45\u3092@dimension\u4fdd\u5b58\u3055\u305b\u307e\u3059\u3002\n\nconfig/initializers/carrierwave.rb\nmodule CarrierWave\n  module RMagick\n    attr_reader :dimension\n\n    def set_dimension\n      image = Magick::Image.read(current_path).shift\n      @dimension = { width: image.columns, height: image.rows }\n    end\n  end\nend\n\n\n\u6b21\u306b\u3001Validator\u306e\u4f5c\u6210\u3067\u3059\u3002\n\u5148\u307b\u3069\u306e#set_dimension\u3067\u4fdd\u5b58\u3057\u305f\u6a2a\u5e45\u7e26\u5e45\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002\n\napp/validators/image_size_validator.rb\nclass ImageSizeValidator < ActiveModel::EachValidator\n  OPTIONS = {\n    width: {\n      field:    :width,\n      function: :'==',\n      message:  'invalid_image_width'\n    },\n    max_width: {\n      field:    :width,\n      function: :'<=',\n      message:  'invalid_image_max_width'\n    },\n    min_width: {\n      field:    :width,\n      function: :'>=',\n      message:  'invalid_image_min_width'\n    },\n    height: {\n      field:    :height,\n      function: :'==',\n      message:  'invalid_image_height'\n    },\n    max_height: {\n      field:    :height,\n      function: :'<=',\n      message:  'invalid_image_max_height'\n    },\n    min_height: {\n      field:    :height,\n      function: :'>=',\n      message:  'invalid_image_min_height'\n    }\n  }.freeze\n\n  def validate_each(object, attribute, value)\n    return if value.nil? || value.dimension.nil?\n\n    dimension = value.dimension\n    options.each do |key, val|\n      next unless OPTIONS.key? key\n      check = OPTIONS[key]\n      unless dimension[check[:field]].send check[:function], val\n        object.errors[attribute] << (options[:message] || I18n.t(\"activerecord.errors.messages.#{check[:message]%[val]}\"))\n      end\n    end\n  end\nend\n\n\n\n\u4f7f\u3044\u65b9\nUploader\u306b\u5bfe\u3057\u3066#set_dimension\u3092\u767b\u9332\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\napp/uploaders/image_uploader.rb\nclass ImageUploader < CarrierWave::Uploader::Base\n  include CarrierWave::RMagick\n\n  process :set_dimension\nend\n\n\nModel\u3067\u3053\u3093\u306a\u98a8\u306b\u304b\u3051\u307e\u3059\n\napp/models/photo.rb\nclass Photo < ActiveRecord::Base\n  mount_uploader :image1, ImageUploader\n  mount_uploader :image2, ImageUploader\n\n  # \u6a2a\u5e45640px\u3001\u7e26\u5e45920px\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n  validates :image1, presence: true, image_size: { width: 640, height: 920 }\n\n  # \u6a2a\u5e45\u304c100px\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n  validates :image2, presence: true, image_size: { min_width: 100 }\nend\n\n\n\n\u5f0a\u793e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304b\u3089\u306e\u8ee2\u8f09\u3067\u3059\nCarrierWave\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u306e\u6a2a\u5e45\u306a\u3069\u3092Validate\u3059\u308b\u65b9\u6cd5 @ heathrow.lab\n\u5f0a\u793e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304b\u3089\u306e\u8ee2\u8f09\u3067\u3059\n[CarrierWave\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u306e\u6a2a\u5e45\u306a\u3069\u3092Validate\u3059\u308b\u65b9\u6cd5](http://lab.heathrow.co.jp/2013/09/14/287) @ [heathrow.lab](http://lab.heathrow.co.jp)\n\n\u6700\u8fd1CarriweWave\u306e\u3053\u3068\u3070\u304b\u308a\u66f8\u3044\u3066\u308b\u6c17\u3082\u3057\u307e\u3059\u304c\u3001\u6c17\u306b\u305b\u305a\u4eca\u56de\u3082CarrierWave\u3067\u3059\u3002\n\n\u4f8b\u3048\u3070\u6a2a\u5e45100px\u672a\u6e80\u306e\u753b\u50cf\u304c\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u5834\u5408\u3001\u30a8\u30e9\u30fc\u306b\u3057\u305f\u3044\u3063\u3066\u3053\u3068\u3042\u308a\u307e\u3059\u3088\u306d\u3002\nCarrierWave\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u305d\u3046\u3044\u3046Validator\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308c\u3070\u3044\u3044\u3093\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u3082\u306a\u3044\u306e\u304c\u60a9\u307e\u3057\u3044\u3002\n\n\u3067\u306f\u3001\u3069\u3046\u3044\u3063\u305f\u65b9\u6cd5\u3067\u3084\u308c\u3070\u3044\u3044\u306e\u304b\u3002\n\u65e5\u672c\u8a9e\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u3088\u3046\u306e\u306a\u306e\u3067\u3001\u5f0a\u793e\u3067\u884c\u3063\u3066\u3044\u308b\u65b9\u6cd5\u3092\u5171\u6709\u3057\u3066\u307f\u307e\u3059\u3002\n\\# Rmagick\u4f7f\u3044\u307e\u3059\n\n## \u4e0b\u6e96\u5099\n1.\u753b\u50cf\u306e\u6a2a\u5e45\u7e26\u5e45\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081CarrierWave::RMagick\u3092\u62e1\u5f35\n2.\u753b\u50cf\u306e\u6a2a\u5e45\u7e26\u5e45\u3092\u691c\u8a3c\u3059\u308bValidator\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n\u307e\u305a\u3001CarrierWave::RMagic\u3092\u62e1\u5f35\u3057\u307e\u3059\u3002\n\u3053\u306eset_dimension\u3068\u3044\u3046\u95a2\u6570\u3067\n\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u3092Rmagick\u3067\u8aad\u307f\u8fbc\u3093\u3067\u3001\u6a2a\u5e45\u7e26\u5e45\u3092@dimension\u4fdd\u5b58\u3055\u305b\u307e\u3059\u3002\n\n```rb:config/initializers/carrierwave.rb\nmodule CarrierWave\n  module RMagick\n    attr_reader :dimension\n\n    def set_dimension\n      image = Magick::Image.read(current_path).shift\n      @dimension = { width: image.columns, height: image.rows }\n    end\n  end\nend\n```\n\n\u6b21\u306b\u3001Validator\u306e\u4f5c\u6210\u3067\u3059\u3002\n\u5148\u307b\u3069\u306e#set_dimension\u3067\u4fdd\u5b58\u3057\u305f\u6a2a\u5e45\u7e26\u5e45\u3092\u691c\u8a3c\u3057\u307e\u3059\u3002\n\n```rb:app/validators/image_size_validator.rb\nclass ImageSizeValidator < ActiveModel::EachValidator\n  OPTIONS = {\n    width: {\n      field:    :width,\n      function: :'==',\n      message:  'invalid_image_width'\n    },\n    max_width: {\n      field:    :width,\n      function: :'<=',\n      message:  'invalid_image_max_width'\n    },\n    min_width: {\n      field:    :width,\n      function: :'>=',\n      message:  'invalid_image_min_width'\n    },\n    height: {\n      field:    :height,\n      function: :'==',\n      message:  'invalid_image_height'\n    },\n    max_height: {\n      field:    :height,\n      function: :'<=',\n      message:  'invalid_image_max_height'\n    },\n    min_height: {\n      field:    :height,\n      function: :'>=',\n      message:  'invalid_image_min_height'\n    }\n  }.freeze\n\n  def validate_each(object, attribute, value)\n    return if value.nil? || value.dimension.nil?\n\n    dimension = value.dimension\n    options.each do |key, val|\n      next unless OPTIONS.key? key\n      check = OPTIONS[key]\n      unless dimension[check[:field]].send check[:function], val\n        object.errors[attribute] << (options[:message] || I18n.t(\"activerecord.errors.messages.#{check[:message]%[val]}\"))\n      end\n    end\n  end\nend\n```\n\n## \u4f7f\u3044\u65b9\nUploader\u306b\u5bfe\u3057\u3066#set_dimension\u3092\u767b\u9332\u3057\u3066\u3084\u308a\u307e\u3059\u3002\n\n```rb:app/uploaders/image_uploader.rb\nclass ImageUploader < CarrierWave::Uploader::Base\n  include CarrierWave::RMagick\n\n  process :set_dimension\nend\n```\n\nModel\u3067\u3053\u3093\u306a\u98a8\u306b\u304b\u3051\u307e\u3059\n\n```rb:app/models/photo.rb\nclass Photo < ActiveRecord::Base\n  mount_uploader :image1, ImageUploader\n  mount_uploader :image2, ImageUploader\n\n  # \u6a2a\u5e45640px\u3001\u7e26\u5e45920px\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n  validates :image1, presence: true, image_size: { width: 640, height: 920 }\n\n  # \u6a2a\u5e45\u304c100px\u4ee5\u4e0a\u3067\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n  validates :image2, presence: true, image_size: { min_width: 100 }\nend\n```\n\n***\n\u5f0a\u793e\u30d6\u30ed\u30b0\u8a18\u4e8b\u304b\u3089\u306e\u8ee2\u8f09\u3067\u3059\n[CarrierWave\u3067\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3055\u308c\u305f\u753b\u50cf\u306e\u6a2a\u5e45\u306a\u3069\u3092Validate\u3059\u308b\u65b9\u6cd5](http://lab.heathrow.co.jp/2013/09/14/287) @ [heathrow.lab](http://lab.heathrow.co.jp)", "tags": ["Rails", "carrierwave"]}