{"context": "\n\nCustomView\u306e\u57fa\u672c\nandroid\u8d85\u521d\u5fc3\u8005\u304cCustomView\u306e\u57fa\u672c\u3092\u5b66\u3073\u307e\u3057\u305f\n\u521d\u5fc3\u8005\u306a\u305f\u3081\u3001\u3053\u3053\u306f\u3053\u3046\u3057\u305f\u3089\u3044\u3044\u3001\u3053\u306e\u3084\u308a\u65b9\u306f\u826f\u304f\u306a\u3044\u306a\u3069\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u3068\u3066\u3082\u5b09\u3057\u3044\u3067\u3059\uff01\uff01\uff01\nRecycleView\u306e\u57fa\u672c\u306f\u3053\u3053\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\uff01\nMain Activity\u306e\u57fa\u672c(Recycler view\u7de8)\n\nCustomView\u3068\u306f\u4f55\u304b\n\nAndroid Framework\u306b\u306f\u591a\u304f\u306eview class\u304c\u3042\u308b\u304c\u3001\u3059\u3067\u306b\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u306f\u306a\u3044unique\u306aview\u3092\u4f5c\u308a\u305f\u3044\u6642\u306b\u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fview class\u306e\u3053\u3068\n\n\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f...\n\nActivity/Fragment\u306b\u306a\u3093\u3067\u3082\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3069\u3093\u3069\u3093Fat\u306b\u306a\u3063\u3066\u3044\u304f\u305f\u3081\u3001View\u306b\u4f9d\u5b58\u3059\u308b\u3082\u306e\u306fCustomView\u5185\u3067\u5b8c\u7d50\u3055\u305b\u3066\u3057\u307e\u3046\u3053\u3068\u3067Activity/Fragment\u306b\u66f8\u304f\u51e6\u7406\u304c\u6e1b\u308b\nxml\u30d5\u30a1\u30a4\u30eb\u306b\u7d44\u307f\u8fbc\u3093\u3067\u7e70\u308a\u8fd4\u3057\u4f7f\u3048\u308b\u305f\u3081\u4fbf\u5229\uff01\n\n\n\u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\n\n\u7c21\u5358\u306b\u753b\u9762\u306b\u8907\u6570\u306eImageView\u3092\u8868\u793a\u3055\u305b\u305f\u3060\u3051\u306e\u3082\u306e\nImageView\u306e\u679a\u6570\u306b\u3088\u3063\u3066\u30b5\u30a4\u30ba\u304c\u5909\u308f\u308b(1 ~ 4\u679a\u30015\u679a\u4ee5\u964d\u306f\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u306a\u3044)\n\n\n4\u679a\u306e\u5834\u5408\n\n\n3\u679a\u306e\u5834\u5408\n\n\n4\u679a\u76ee\u4ee5\u964d\u306f\u753b\u9762\u306b\u4e00\u5ea6\u306b\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n1\u679a\u306e\u5834\u5408\u306f\u753b\u9762\u4e00\u9762\u306b\u30012\u679a\u306e\u5834\u5408\u306f\u6a2a\u534a\u5206\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\n\n\n\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u306e\u304b\n\nattrs.xml\n\n\u5b9a\u7fa9\u3092\u66f8\u304f\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--xml\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046-->\n<resources>\n<attr name=\"scaleType\">\n        <enum name=\"matrix\" value=\"0\" />\n        <enum name=\"fitXY\" value=\"1\" />\n        <enum name=\"fitStart\" value=\"2\" />\n        <enum name=\"fitCenter\" value=\"3\" />\n        <enum name=\"fitEnd\" value=\"4\" />\n        <enum name=\"center\" value=\"5\" />\n        <enum name=\"centerCrop\" value=\"6\" />\n        <enum name=\"centerInside\" value=\"7\" />\n    </attr>\n</resources>\n\n\nTileLayout.java\u3000\n\n\u30d5\u30a1\u30a4\u30eb\u306b\u52d5\u7684\u306a\u90e8\u5206(\u679a\u6570\u306b\u3088\u3063\u3066\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5909\u3048\u308b)\u3092\u5b9f\u88c5\u3059\u308b\n\npublic class TileLayout extends ViewGroup {\n    public TileLayout(Context context) {\n        this(context, null);\n    }\n\n    public TileLayout(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public TileLayout(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n    //\u3053\u3053\u3067getChildCount()\u3067\u5e30\u3063\u3066\u304d\u305f\u5024\u306b\u5bfe\u3057\u3066\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        //\u5b50\u30d3\u30e5\u30fc\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\n        //padding\u5206\u3092\u5dee\u3057\u5f15\u3044\u3066\u5b50\u30d3\u30e5\u30fc\u306e\u9818\u57df\u3092\u6c42\u3081\u308b\n        int width = (r - l) - getPaddingLeft() - getPaddingRight();\n        int height = (b - t) - getPaddingTop() - getPaddingBottom();\n\n        int left = getPaddingLeft();\n        int top = getPaddingTop();\n        int right = left + width;\n        int bottom = top + height;\n\n        if (height > width) {\n            //\u7e26\u306e\u6642\n            layoutVertical(width, height, left, top, right, bottom);\n        } else {\n            layoutHorizontal(width, height, left, top, right, bottom);\n        }\n    }\n\n    private void layoutVertical(int width, int height, int left, int top, int right, int bottom) {\n//view\u304c1\u3064\u30fb2\u3064\u30fb3\u3064\u306e\u6642\u3068\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3066\u8868\u793a\u3059\u308b\n//\u305d\u308c\u305e\u308c\u306e\u6761\u4ef6\u306b\u5bfe\u3057\u3066\u4f4d\u7f6e\u3092childLayout()\u306b\u51fa\u529b\u3059\u308b\n}\nprivate void layoutHorizontal(int width, int height, int left, int top, int right, int bottom) {\n//Horizontal\u306e\u6642\u3082\u540c\u3058\u3088\u3046\u306b    \n    }\n\n//\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\nprivate void childLayout(View child, int l, int t, int r, int b) {\n        child.layout(l, t, r, b);\n    }\n\n//\u5b50\u30d3\u30e5\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        final int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n        final int heightMode = MeasureSpec.getMode(heightMeasureSpec);\n        //\u30ec\u30a4\u30a2\u30a6\u30c8\u30e2\u30fc\u30c9\u304cEXACTLY\u306e\u6642\u306f\u30a8\u30e9\u30fc\u306b\u3059\u308b\n        if (widthMode != MeasureSpec.EXACTLY || heightMode != MeasureSpec.EXACTLY) {\n            throw new IllegalStateException(\"Must measure with an exact width\");\n        }\n        //\u3053\u306eViewGroup\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\n        final int widthSize = MeasureSpec.getSize(widthMeasureSpec);\n        final int heightSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        //\u3053\u306eViewGroup\u306e\u30b5\u30a4\u30ba\u3092\u30bb\u30c3\u30c8\u3059\u308b\n        setMeasuredDimension(widthSize, heightSize);\n\n        //padding\u5206\u3092\u5dee\u3057\u5f15\u3044\u3066\u89aa\u306e\u5e45\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\n        int width = widthSize - getPaddingLeft() - getPaddingRight();\n        int height = heightSize - getPaddingTop() - getPaddingBottom();\n\n        boolean isVertical = height > width;\n\n        int childWidth1;\n        int childHeight1;\n        int childWidth2;\n        int childHeight2;\n        int childWidth3;\n        int childWidth4;\n        int childHeight3;\n        int childHeight4;\n        final int childCount = getChildCount();\n\n        //childCount\u3054\u3068\u306b\u6761\u4ef6\u5206\u5c90\u3057\u3001childWidth1~4\u3054\u3068\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n        for (int i = 0; i < childCount; i++) {\n            View child = getChildAt(i);\n\n            int childWidth = 0;\n            int childHeight = 0;\n            if (i == 0) {\n                //1\u756a\u76ee\u306e\u5b50\u30d3\u30e5\u30fc\n                childWidth = childWidth1;\n                childHeight = childHeight1;\n            } else if (i == 1) {\n            ...(\u7701\u7565)\n                //\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u5834\u5408\u3067\u306e\u5b50\u30d3\u30e5\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n\n             //\u6700\u7d42\u7684\u306b\u30b5\u30a4\u30ba\u3092\u51fa\u529b\n            //\u5b50\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066measure()\u3092\u547c\u3093\u3067\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n            //TileLayout\u306f\u5b50\u30d3\u30e5\u30fc\u3067\u306elayout_height\u3084layout_width\u306e\u6307\u5b9a\u306b\u95a2\u4fc2\u306a\u304f\n            //\u6c7a\u307e\u3063\u305f\u30b5\u30a4\u30ba\u3067\u914d\u7f6e\u3059\u308b\u306e\u3067MeasureSpec.EXACTLY\u306b\u3059\u308b\n\n            int childWidthMeasureSpec = MeasureSpec.makeMeasureSpec(childWidth, MeasureSpec.EXACTLY);\n            int childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(childHeight, MeasureSpec.EXACTLY);\n            child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n\n\n\nactivity_main.xml\u3000\n\n\u5b9f\u969b\u306bxml\u30d5\u30a1\u30a4\u30eb\u306b\u5148\u307b\u3069\u306eCustomView\u3092\u5c0e\u5165\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<neonankiti.recyclerviewsample.TileLayout\n//\u547c\u3073\u51fa\u3059\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n//\u4ee5\u4e0b\u306eImageView\u306e\u500b\u6570\u3067View\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u81ea\u52d5\u7684\u306b\u5909\u308f\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/view1\"/>\n...\n</neonankiti.recyclerviewsample.TileLayout>\n\n\nMainActivity.java\n\n\u753b\u9762\u3092\u51fa\u529b\n\n//\u6700\u7d42\u7684\u306b\u3053\u3053\u3067\u51fa\u529b\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n\n\n\u5168\u3066\u306efile\n\u4eca\u56de\u30b3\u30fc\u30c9\u304c\u9577\u304f\u3001\u7701\u7565\u3057\u3066\u3057\u307e\u3063\u305f\u90e8\u5206\u306f\u3053\u3053\u306b\u8f09\u305b\u3066\u3042\u308a\u307e\u3059\nhttps://gist.github.com/MihoSasaki/064051a55b10ae92b28631469eb9446a\n#CustomView\u306e\u57fa\u672c\nandroid\u8d85\u521d\u5fc3\u8005\u304cCustomView\u306e\u57fa\u672c\u3092\u5b66\u3073\u307e\u3057\u305f\n\u521d\u5fc3\u8005\u306a\u305f\u3081\u3001\u3053\u3053\u306f\u3053\u3046\u3057\u305f\u3089\u3044\u3044\u3001\u3053\u306e\u3084\u308a\u65b9\u306f\u826f\u304f\u306a\u3044\u306a\u3069\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u3044\u305f\u3060\u3051\u308b\u3068\u3068\u3066\u3082\u5b09\u3057\u3044\u3067\u3059\uff01\uff01\uff01\n\nRecycleView\u306e\u57fa\u672c\u306f\u3053\u3053\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\uff01\n[Main Activity\u306e\u57fa\u672c(Recycler view\u7de8)](http://qiita.com/hoonokonoko/items/bc107e758b286ba5690b)\n\n##CustomView\u3068\u306f\u4f55\u304b\n- Android Framework\u306b\u306f\u591a\u304f\u306eview class\u304c\u3042\u308b\u304c\u3001\u3059\u3067\u306b\u4f5c\u3089\u308c\u305f\u3082\u306e\u3067\u306f\u306a\u3044unique\u306aview\u3092\u4f5c\u308a\u305f\u3044\u6642\u306b\u81ea\u5206\u3067\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305fview class\u306e\u3053\u3068\n\n\n\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\u306f...\n\n- Activity/Fragment\u306b\u306a\u3093\u3067\u3082\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3069\u3093\u3069\u3093Fat\u306b\u306a\u3063\u3066\u3044\u304f\u305f\u3081\u3001View\u306b\u4f9d\u5b58\u3059\u308b\u3082\u306e\u306fCustomView\u5185\u3067\u5b8c\u7d50\u3055\u305b\u3066\u3057\u307e\u3046\u3053\u3068\u3067Activity/Fragment\u306b\u66f8\u304f\u51e6\u7406\u304c\u6e1b\u308b\n- xml\u30d5\u30a1\u30a4\u30eb\u306b\u7d44\u307f\u8fbc\u3093\u3067\u7e70\u308a\u8fd4\u3057\u4f7f\u3048\u308b\u305f\u3081\u4fbf\u5229\uff01\n\n##\u4eca\u56de\u4f5c\u3063\u305f\u3082\u306e\n- \u7c21\u5358\u306b\u753b\u9762\u306b\u8907\u6570\u306eImageView\u3092\u8868\u793a\u3055\u305b\u305f\u3060\u3051\u306e\u3082\u306e\n- ImageView\u306e\u679a\u6570\u306b\u3088\u3063\u3066\u30b5\u30a4\u30ba\u304c\u5909\u308f\u308b(1 ~ 4\u679a\u30015\u679a\u4ee5\u964d\u306f\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u306a\u3044)\n\n###4\u679a\u306e\u5834\u5408\n<img width=\"400px\" alt=\"4\u679a\u306e\u5834\u5408\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117537/a001a124-8901-aa6a-4541-ef51edf8e047.png\">\n\n###3\u679a\u306e\u5834\u5408\n<img width=\"400px\" alt=\"3\u679a\u306e\u5834\u5408\" src=\"https://qiita-image-store.s3.amazonaws.com/0/117537/f54a4c31-2473-d76e-78e0-09d880b83945.png\">\n\n- 4\u679a\u76ee\u4ee5\u964d\u306f\u753b\u9762\u306b\u4e00\u5ea6\u306b\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n- 1\u679a\u306e\u5834\u5408\u306f\u753b\u9762\u4e00\u9762\u306b\u30012\u679a\u306e\u5834\u5408\u306f\u6a2a\u534a\u5206\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\n\n##\u3069\u3046\u3084\u3063\u3066\u5b9f\u88c5\u3059\u308b\u306e\u304b\n###attrs.xml \n- \u5b9a\u7fa9\u3092\u66f8\u304f\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--xml\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3059\u308b\u3068\u304d\u306b\u4f7f\u3046-->\n<resources>\n<attr name=\"scaleType\">\n        <enum name=\"matrix\" value=\"0\" />\n        <enum name=\"fitXY\" value=\"1\" />\n        <enum name=\"fitStart\" value=\"2\" />\n        <enum name=\"fitCenter\" value=\"3\" />\n        <enum name=\"fitEnd\" value=\"4\" />\n        <enum name=\"center\" value=\"5\" />\n        <enum name=\"centerCrop\" value=\"6\" />\n        <enum name=\"centerInside\" value=\"7\" />\n    </attr>\n</resources>\n```\n\n###TileLayout.java\u3000\n- \u30d5\u30a1\u30a4\u30eb\u306b\u52d5\u7684\u306a\u90e8\u5206(\u679a\u6570\u306b\u3088\u3063\u3066\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5909\u3048\u308b)\u3092\u5b9f\u88c5\u3059\u308b\n\n```java\npublic class TileLayout extends ViewGroup {\n    public TileLayout(Context context) {\n        this(context, null);\n    }\n\n    public TileLayout(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public TileLayout(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n    }\n    //\u3053\u3053\u3067getChildCount()\u3067\u5e30\u3063\u3066\u304d\u305f\u5024\u306b\u5bfe\u3057\u3066\u6761\u4ef6\u5206\u5c90\u3092\u3059\u308b\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b) {\n        //\u5b50\u30d3\u30e5\u30fc\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\n        //padding\u5206\u3092\u5dee\u3057\u5f15\u3044\u3066\u5b50\u30d3\u30e5\u30fc\u306e\u9818\u57df\u3092\u6c42\u3081\u308b\n        int width = (r - l) - getPaddingLeft() - getPaddingRight();\n        int height = (b - t) - getPaddingTop() - getPaddingBottom();\n\n        int left = getPaddingLeft();\n        int top = getPaddingTop();\n        int right = left + width;\n        int bottom = top + height;\n\n        if (height > width) {\n            //\u7e26\u306e\u6642\n            layoutVertical(width, height, left, top, right, bottom);\n        } else {\n            layoutHorizontal(width, height, left, top, right, bottom);\n        }\n    }\n\n    private void layoutVertical(int width, int height, int left, int top, int right, int bottom) {\n//view\u304c1\u3064\u30fb2\u3064\u30fb3\u3064\u306e\u6642\u3068\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3066\u8868\u793a\u3059\u308b\n//\u305d\u308c\u305e\u308c\u306e\u6761\u4ef6\u306b\u5bfe\u3057\u3066\u4f4d\u7f6e\u3092childLayout()\u306b\u51fa\u529b\u3059\u308b\n}\nprivate void layoutHorizontal(int width, int height, int left, int top, int right, int bottom) {\n//Horizontal\u306e\u6642\u3082\u540c\u3058\u3088\u3046\u306b    \n    }\n\n//\u305d\u308c\u305e\u308c\u306e\u4f4d\u7f6e\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\nprivate void childLayout(View child, int l, int t, int r, int b) {\n        child.layout(l, t, r, b);\n    }\n\n//\u5b50\u30d3\u30e5\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u30e1\u30bd\u30c3\u30c9\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        final int widthMode = MeasureSpec.getMode(widthMeasureSpec);\n        final int heightMode = MeasureSpec.getMode(heightMeasureSpec);\n        //\u30ec\u30a4\u30a2\u30a6\u30c8\u30e2\u30fc\u30c9\u304cEXACTLY\u306e\u6642\u306f\u30a8\u30e9\u30fc\u306b\u3059\u308b\n        if (widthMode != MeasureSpec.EXACTLY || heightMode != MeasureSpec.EXACTLY) {\n            throw new IllegalStateException(\"Must measure with an exact width\");\n        }\n        //\u3053\u306eViewGroup\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u308b\u30b5\u30a4\u30ba\u3092\u53d6\u5f97\u3059\u308b\n        final int widthSize = MeasureSpec.getSize(widthMeasureSpec);\n        final int heightSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        //\u3053\u306eViewGroup\u306e\u30b5\u30a4\u30ba\u3092\u30bb\u30c3\u30c8\u3059\u308b\n        setMeasuredDimension(widthSize, heightSize);\n\n        //padding\u5206\u3092\u5dee\u3057\u5f15\u3044\u3066\u89aa\u306e\u5e45\u306e\u9ad8\u3055\u3092\u6c42\u3081\u308b\n        int width = widthSize - getPaddingLeft() - getPaddingRight();\n        int height = heightSize - getPaddingTop() - getPaddingBottom();\n        \n        boolean isVertical = height > width;\n\n        int childWidth1;\n        int childHeight1;\n        int childWidth2;\n        int childHeight2;\n        int childWidth3;\n        int childWidth4;\n        int childHeight3;\n        int childHeight4;\n        final int childCount = getChildCount();\n        \n        //childCount\u3054\u3068\u306b\u6761\u4ef6\u5206\u5c90\u3057\u3001childWidth1~4\u3054\u3068\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n        for (int i = 0; i < childCount; i++) {\n            View child = getChildAt(i);\n\n            int childWidth = 0;\n            int childHeight = 0;\n            if (i == 0) {\n                //1\u756a\u76ee\u306e\u5b50\u30d3\u30e5\u30fc\n                childWidth = childWidth1;\n                childHeight = childHeight1;\n            } else if (i == 1) {\n            ...(\u7701\u7565)\n\t\t\t\t//\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3001\u305d\u308c\u305e\u308c\u306e\u5834\u5408\u3067\u306e\u5b50\u30d3\u30e5\u30fc\u306e\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n\n    \t\t //\u6700\u7d42\u7684\u306b\u30b5\u30a4\u30ba\u3092\u51fa\u529b\n            //\u5b50\u30d3\u30e5\u30fc\u306b\u5bfe\u3057\u3066measure()\u3092\u547c\u3093\u3067\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\n            //TileLayout\u306f\u5b50\u30d3\u30e5\u30fc\u3067\u306elayout_height\u3084layout_width\u306e\u6307\u5b9a\u306b\u95a2\u4fc2\u306a\u304f\n            //\u6c7a\u307e\u3063\u305f\u30b5\u30a4\u30ba\u3067\u914d\u7f6e\u3059\u308b\u306e\u3067MeasureSpec.EXACTLY\u306b\u3059\u308b\n            \n            int childWidthMeasureSpec = MeasureSpec.makeMeasureSpec(childWidth, MeasureSpec.EXACTLY);\n            int childHeightMeasureSpec = MeasureSpec.makeMeasureSpec(childHeight, MeasureSpec.EXACTLY);\n            child.measure(childWidthMeasureSpec, childHeightMeasureSpec);\n\n```\n \n###activity_main.xml\u3000\n- \u5b9f\u969b\u306bxml\u30d5\u30a1\u30a4\u30eb\u306b\u5148\u307b\u3069\u306eCustomView\u3092\u5c0e\u5165\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<neonankiti.recyclerviewsample.TileLayout\n//\u547c\u3073\u51fa\u3059\u306b\u306f\u3053\u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n//\u4ee5\u4e0b\u306eImageView\u306e\u500b\u6570\u3067View\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u81ea\u52d5\u7684\u306b\u5909\u308f\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\n    <ImageView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:scaleType=\"centerCrop\"\n        android:src=\"@drawable/view1\"/>\n...\n</neonankiti.recyclerviewsample.TileLayout>\n```\n\n###MainActivity.java \n- \u753b\u9762\u3092\u51fa\u529b\n\n```java\n//\u6700\u7d42\u7684\u306b\u3053\u3053\u3067\u51fa\u529b\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n    }\n```\n\n##\u5168\u3066\u306efile\n\u4eca\u56de\u30b3\u30fc\u30c9\u304c\u9577\u304f\u3001\u7701\u7565\u3057\u3066\u3057\u307e\u3063\u305f\u90e8\u5206\u306f\u3053\u3053\u306b\u8f09\u305b\u3066\u3042\u308a\u307e\u3059\nhttps://gist.github.com/MihoSasaki/064051a55b10ae92b28631469eb9446a\n\n", "tags": ["Android", "android\u958b\u767a"]}