{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u73fe\u5f79\u306e\u5c02\u9580\u5b66\u6821\u5b66\u751f\u3055\u3093\u9054\u306bProcesing\u3092\u5b66\u3093\u3067\u3082\u3089\u3046\u305f\u3081\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u3001\u5c06\u6765\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u3001\u6559\u80b2\u306b\u95a2\u308f\u3063\u3066\u3044\u308b\u4eba\u9054\u306b\u4f55\u304b\u306e\u52a9\u3051\u306b\u306a\u308b\u3068\u3044\u3044\u306a\u3002\nprocessing\u306f\u3082\u3063\u3068\u8a55\u4fa1\u3055\u308c\u3066\u3044\u3044\u3068\u601d\u3046\u3002\n\n\u524d\u63d0\nhttps://processing.org/download/?processing\n\nhttp://qiita.com/ggggnonaka/items/5d66d555a398d55f6b28\n\n\u4eca\u56de\u306e\u76ee\u6a19\n\u8a00\u8a9e\u306e\u8ffd\u52a0\n\n\u8a00\u8a9e\u306e\u8ffd\u52a0\n\u753b\u9762\u53f3\u4e0a\u3000Add mode\u304b\u3089\u8ffd\u52a0\u3057\u3066\u518d\u8d77\u52d5\u3002\n\nprocessing\u3092\u518d\u8d77\u52d5\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u304a\u307e\u3051\n\u30b5\u30f3\u30d7\u30eb\u3092\u5c11\u3057\u5909\u66f4\u3002\n\n\nLetters.pde\n/**\n * Letters. \n * \n * Draws letters to the screen. This requires loading a font, \n * setting the font, and then drawing the letters.\n */\n\nPFont f;\n\nvoid setup() {\n  size(640, 360);\n  background(0);\n\n  // Create the font\n  printArray(PFont.list());\n  f = createFont(\"Georgia\", 20);\n  textFont(f);\n  textAlign(CENTER, CENTER);\n} \n\nvoid draw() {\n  background(0,60,0);\n\n  // Set the left and top margin\n  int margin = 10;\n  translate(margin*4, margin*4);\n\n  int gap = 46;\n  int counter = 35;\n\n  for (int y = 0; y < height-gap; y += gap) {\n    for (int x = 0; x < width-gap; x += gap) {\n\n      char letter = char(counter);\n\n      if (letter == 'A' || letter == 'E' || letter == 'I' || letter == 'O' || letter == 'U') {\n        fill(255, 204, 0);\n      } \n      else {\n        fill(255);\n      }\n\n      // Draw the letter to the screen\n      text(letter, x, y);\n\n      // Increment the counter\n      counter++;\n    }\n  }\n}\n\n\n\n#\u76ee\u7684\n\u73fe\u5f79\u306e\u5c02\u9580\u5b66\u6821\u5b66\u751f\u3055\u3093\u9054\u306bProcesing\u3092\u5b66\u3093\u3067\u3082\u3089\u3046\u305f\u3081\u306b\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u3044\u3067\u306b\u3001\u5c06\u6765\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u3001\u6559\u80b2\u306b\u95a2\u308f\u3063\u3066\u3044\u308b\u4eba\u9054\u306b\u4f55\u304b\u306e\u52a9\u3051\u306b\u306a\u308b\u3068\u3044\u3044\u306a\u3002\nprocessing\u306f\u3082\u3063\u3068\u8a55\u4fa1\u3055\u308c\u3066\u3044\u3044\u3068\u601d\u3046\u3002\n\n#\u524d\u63d0\n\nhttps://processing.org/download/?processing\n![kobito.1421330011.865512.png](https://qiita-image-store.s3.amazonaws.com/0/33317/706723c5-00a7-847f-54d2-7abb6f34dfa2.png \"kobito.1421330011.865512.png\")\n\nhttp://qiita.com/ggggnonaka/items/5d66d555a398d55f6b28\n\n#\u4eca\u56de\u306e\u76ee\u6a19\n\u8a00\u8a9e\u306e\u8ffd\u52a0\n\n##\u8a00\u8a9e\u306e\u8ffd\u52a0\n\u753b\u9762\u53f3\u4e0a\u3000Add mode\u304b\u3089\u8ffd\u52a0\u3057\u3066\u518d\u8d77\u52d5\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-01-17 13.14.26.png](https://qiita-image-store.s3.amazonaws.com/0/33317/9cbcc004-8706-01b6-81f2-ecf518040097.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-01-17 13.14.26.png\")\n\nprocessing\u3092\u518d\u8d77\u52d5\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n##\u304a\u307e\u3051\n\u30b5\u30f3\u30d7\u30eb\u3092\u5c11\u3057\u5909\u66f4\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-01-17 13.29.33.png](https://qiita-image-store.s3.amazonaws.com/0/33317/0213052f-df9d-fcd2-8eec-e30f94f76443.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-01-17 13.29.33.png\")\n\n```PDE:Letters.pde\n/**\n * Letters. \n * \n * Draws letters to the screen. This requires loading a font, \n * setting the font, and then drawing the letters.\n */\n\nPFont f;\n\nvoid setup() {\n  size(640, 360);\n  background(0);\n\n  // Create the font\n  printArray(PFont.list());\n  f = createFont(\"Georgia\", 20);\n  textFont(f);\n  textAlign(CENTER, CENTER);\n} \n\nvoid draw() {\n  background(0,60,0);\n\n  // Set the left and top margin\n  int margin = 10;\n  translate(margin*4, margin*4);\n\n  int gap = 46;\n  int counter = 35;\n  \n  for (int y = 0; y < height-gap; y += gap) {\n    for (int x = 0; x < width-gap; x += gap) {\n\n      char letter = char(counter);\n      \n      if (letter == 'A' || letter == 'E' || letter == 'I' || letter == 'O' || letter == 'U') {\n        fill(255, 204, 0);\n      } \n      else {\n        fill(255);\n      }\n\n      // Draw the letter to the screen\n      text(letter, x, y);\n\n      // Increment the counter\n      counter++;\n    }\n  }\n}\n```\n", "tags": ["education", "processing"]}