{"context": "\n\nTL;DR\n\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 Advent Calendar 2016\u30783\u672c\u76ee\u306e\u6295\u7a3f\u3067\u3059\u3002\nMacOS\u304cBSD\u7cfbUNIX\u3067\u3042\u308b\u3053\u3068\u3092\u6700\u5927\u9650\u6d3b\u304b\u3059\u3068\u3001\u30af\u30ea\u30a8\u30a3\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5c11\u3057\u697d\u306b\u306a\u308a\u307e\u3059\u3088\u3002\n\u300coF\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u308b\u3068\u304d\u306fofDirectory::createDirectory(const string &dirPath, bool bRelativeToData=true, bool recursive=false)\u2026?\u300d\u306a\u3093\u3066\u3084\u3089\u306a\u304f\u3066\u826f\u3044\u3093\u3067\u3059\u3002\n\u305d\u3046\u3001\u3044\u3064\u3082\u3068\u540c\u3058\u3088\u3046\u306bmkdir\u3067\u826f\u3044\u3093\u3067\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u2026\n\n\u65e5\u5225\u306b\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u6574\u7406\u3057\u305f\u3044 \u2192 mv, date\n\n\u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5727\u7e2e\u3057\u305f\u3044 \u2192 zip, tar\n\n\u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u901a\u77e5\u3092\u51fa\u3057\u305f\u3044 \u2192 terminal-notifier, osascript\n\n\u558b\u3089\u305b\u305f\u3044 \u2192 say\n\nWeb API\u3092\u53e9\u3044\u305f\u7d50\u679c\u304c\u6b32\u3057\u3044 \u2192 curl, wget, jq\n\n\u9069\u5f53\u306a\u30a2\u30d7\u30ea\u3067\u958b\u304d\u305f\u3044 \u2192 open\n\n\n\u6b63\u76f4\u3001osascript\u3067AppleScript\u304c\u53e9\u3051\u308c\u3070\u3001\u3059\u306a\u308f\u3061MacOS\u306e\u307b\u3068\u3093\u3069\u304c\u5236\u5fa1\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\n\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u5171\u6709\u3059\u308b\u306a\u308a\u3001\u30ab\u30fc\u30bd\u30eb\u3092\u52d5\u304b\u3059\u306a\u308a\u3001\u97f3\u91cf\u3092\u6700\u5927\u306b\u3059\u308b\u306a\u308a\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u3092\u524d\u9762\u306b\u6301\u3063\u3066\u304f\u308b\u306a\u308a\u3001\u306a\u3093\u3067\u3082\u3054\u3056\u308c\u3002\n\u3053\u3046\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u99c6\u4f7f\u3067\u304d\u308b\u304b\u3089\u30af\u30ea\u30a8\u30a3\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u6975\u529bMacOS\u3067\u3084\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003\u307e\u3067\u306b\u3001openFrameworks\u3068Max/MSP\u3001QuartzComposer\u304b\u3089\u30b7\u30a7\u30eb\u3092\u53e9\u304f\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nw/ openFrameworks\n\nofSystem()\u3092\u4f7f\u3046\n\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u306e\u306fofSystem\u3092\u4f7f\u3046\u65b9\u6cd5\u3002\nofSystem(\"say -v Kyoko \u3053\u3093\u306b\u3061\u306f\");\n\n\n\u3061\u3083\u3093\u3068PIPE\u3059\u308b\nofSystem()\u3067\u306f\u9014\u4e2d\u51fa\u529b\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u3057\u3001\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u306e\u3067\u3001\nBrett\u3055\u3093\u304cGist\u306b\u4e0a\u3052\u3066\u3044\u305f\u5b9f\u88c5\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\nSysCommand.h\n//\n//  SysCommand.h\n//\n//  Created by Brett Renfer on 2/22/12.\n//\n\n#pragma once\n#include \"ofThread.h\"\n\nclass SysCommand : private ofThread\n{\npublic:\n    ofEvent<string> commandComplete;\n\n    void callCommand( string command ){\n        cmd = command;\n        stopThread();\n        startThread();\n    }\n\n    // CALL THIS DIRECTLY FOR BLOCKING COMMAND\n    // thanks to: http://stackoverflow.com/questions/478898/how-to-execute-a-command-and-get-output-of-command-within-c\n    std::string exec(char* cmd) {\n        FILE* pipe = popen(cmd, \"r\");\n        if (!pipe) return \"ERROR\";\n        char buffer[128];\n        std::string result = \"\";\n        while(!feof(pipe)) {\n            if(fgets(buffer, 128, pipe) != NULL)\n                result += buffer;\n        }\n        pclose(pipe);\n        return result;\n    }\n\nprivate:\n    void threadedFunction(){\n        ofLog( OF_LOG_VERBOSE, \"call \"+cmd );\n        string result = exec( (char *) cmd.c_str() );\n        ofLog( OF_LOG_VERBOSE, \"RESULT \"+result );\n        stopThread();\n        ofNotifyEvent( commandComplete, result, this );\n    }\n    string cmd;\n};\n\n\n\nw/ Max/MSP\n\nBill\u6c0f\u306e\"shell\"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\n\n\u516c\u5f0f\u306e\u30d5\u30a9\u30fc\u30e9\u30e0\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u4e2d\u8eab\u3092\u898b\u308b\u3068C\u304b\u3089pthread\u3057\u3066\u307e\u3059\u306d\u3002\n\n\u8d64\u677e\u5148\u751f\u306e\"aka.shell\"\u3092\u4f7f\u3046\n\n\u8d64\u677e\u5148\u751f\u306eWeb\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u3053\u3061\u3089\u306fpopen\u3067\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3088\u308a\u30e1\u30b8\u30e3\u30fc\u306a\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u8a18\u4e8b\u304c\u305f\u304f\u3055\u3093\u898b\u3064\u304b\u308a\u307e\u3059\u3002\nQiita\u306b\u8a73\u3057\u3044\u8a18\u4e8b\u3082\u3042\u308a\u307e\u3057\u305f\u3002 \u2192 Unix\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u305fMax-\u5916\u90e8\u30a2\u30d7\u30ea\u9593\u306e\u9023\u643a\u65b9\u6cd5\n\nw/ Quartz Composer\n\nCommandLineTool\n\u30c7\u30da\u30ed\u30c3\u30d1\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u304b\u3089\u8b39\u88fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u624b\u306b\u5165\u308a\u307e\u3059\u3002\n\u53e4\u3044\u306e\u3067\u3001Xcode\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304b\u3089\u5fae\u4fee\u6b63\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u65e5\u672c\u8a9e\u3067\u66f8\u304b\u308c\u305f\u53c2\u8003\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002 \u2192 UNIX Command \u2013 execute in Quartz Composer\n\nShellCommand\u30d1\u30c3\u30c1\u3092\u4f7f\u3046\n\nKosada inc.\u304c\u516c\u958b\u3057\u3066\u3044\u308bShellCommand\u30d1\u30c3\u30c1\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\nKinema\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u3069\u306e\u30c4\u30fc\u30eb/\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3082\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3050\u3089\u3044\u5f37\u529b\u306a\u9023\u643a\u306a\u306e\u3067\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u300c\u3068\u3093\u3067\u3082\u306a\u3044\u5f15\u6570\u3092\u6e21\u3057\u3066\u305f\uff01\u300d\u300c\u30b3\u30de\u30f3\u30c9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\uff01\u300d\u3068\u3044\u3063\u305f\u30ea\u30b9\u30af&\u3042\u308b\u3042\u308b\u304c\u3042\u3063\u305f\u308a\u3057\u307e\u3059\u306e\u3067\u3001\u5fc3\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n# TL;DR\n[\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0 Advent Calendar 2016](http://qiita.com/advent-calendar/2016/creative-coding)\u30783\u672c\u76ee\u306e\u6295\u7a3f\u3067\u3059\u3002\n\nMacOS\u304cBSD\u7cfbUNIX\u3067\u3042\u308b\u3053\u3068\u3092\u6700\u5927\u9650\u6d3b\u304b\u3059\u3068\u3001\u30af\u30ea\u30a8\u30a3\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5c11\u3057\u697d\u306b\u306a\u308a\u307e\u3059\u3088\u3002\n\u300coF\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u308b\u3068\u304d\u306f[`ofDirectory::createDirectory(const string &dirPath, bool bRelativeToData=true, bool recursive=false)`](http://openframeworks.cc/documentation/utils/ofDirectory/#show_createDirectory)\u2026?\u300d\u306a\u3093\u3066\u3084\u3089\u306a\u304f\u3066\u826f\u3044\u3093\u3067\u3059\u3002\n\u305d\u3046\u3001\u3044\u3064\u3082\u3068\u540c\u3058\u3088\u3046\u306b`mkdir`\u3067\u826f\u3044\u3093\u3067\u3059\u3002\n\n## \u305f\u3068\u3048\u3070\u2026\n* \u65e5\u5225\u306b\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u6574\u7406\u3057\u305f\u3044 \u2192 [mv](https://ja.wikipedia.org/wiki/Mv_(UNIX)), [date](https://ja.wikipedia.org/wiki/Date_(UNIX))\n* \u66f8\u304d\u51fa\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u5727\u7e2e\u3057\u305f\u3044 \u2192 [zip](https://ja.wikipedia.org/wiki/ZIP_(\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8)), [tar](https://ja.wikipedia.org/wiki/Tar)\n* \u51e6\u7406\u304c\u7d42\u308f\u3063\u305f\u3089\u901a\u77e5\u3092\u51fa\u3057\u305f\u3044 \u2192 [terminal-notifier](https://github.com/julienXX/terminal-notifier), [osascript](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/osascript.1.html)\n* \u558b\u3089\u305b\u305f\u3044 \u2192 [say](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/say.1.html)\n* Web API\u3092\u53e9\u3044\u305f\u7d50\u679c\u304c\u6b32\u3057\u3044 \u2192 [curl](https://ja.wikipedia.org/wiki/CURL), [wget](https://ja.wikipedia.org/wiki/GNU_Wget), [jq](https://stedolan.github.io/jq/)\n* \u9069\u5f53\u306a\u30a2\u30d7\u30ea\u3067\u958b\u304d\u305f\u3044 \u2192 [open](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/open.1.html)\n\n\u6b63\u76f4\u3001`osascript`\u3067AppleScript\u304c\u53e9\u3051\u308c\u3070\u3001\u3059\u306a\u308f\u3061MacOS\u306e\u307b\u3068\u3093\u3069\u304c\u5236\u5fa1\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\n\u30af\u30ea\u30c3\u30d7\u30dc\u30fc\u30c9\u3092\u5171\u6709\u3059\u308b\u306a\u308a\u3001\u30ab\u30fc\u30bd\u30eb\u3092\u52d5\u304b\u3059\u306a\u308a\u3001\u97f3\u91cf\u3092\u6700\u5927\u306b\u3059\u308b\u306a\u308a\u3001\u4ed6\u306e\u30a2\u30d7\u30ea\u3092\u524d\u9762\u306b\u6301\u3063\u3066\u304f\u308b\u306a\u308a\u3001\u306a\u3093\u3067\u3082\u3054\u3056\u308c\u3002\n\u3053\u3046\u3044\u3063\u305f\u30b3\u30de\u30f3\u30c9\u3092\u99c6\u4f7f\u3067\u304d\u308b\u304b\u3089\u30af\u30ea\u30a8\u30a3\u30c6\u30a3\u30d6\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306f\u6975\u529bMacOS\u3067\u3084\u308a\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\u307e\u3067\u306b\u3001openFrameworks\u3068Max/MSP\u3001QuartzComposer\u304b\u3089\u30b7\u30a7\u30eb\u3092\u53e9\u304f\u65b9\u6cd5\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# w/ openFrameworks\n## ofSystem()\u3092\u4f7f\u3046\n\u3082\u3063\u3068\u3082\u7c21\u5358\u306a\u306e\u306f[`ofSystem`](http://openframeworks.cc/documentation/utils/ofUtils/#show_ofSystem)\u3092\u4f7f\u3046\u65b9\u6cd5\u3002\n\n```cpp\nofSystem(\"say -v Kyoko \u3053\u3093\u306b\u3061\u306f\");\n```\n\n## \u3061\u3083\u3093\u3068PIPE\u3059\u308b\n`ofSystem()`\u3067\u306f\u9014\u4e2d\u51fa\u529b\u3092\u53d7\u3051\u53d6\u308c\u306a\u3044\u3057\u3001\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067\u30b9\u30ec\u30c3\u30c9\u304c\u30d6\u30ed\u30c3\u30af\u3055\u308c\u308b\u306e\u3067\u3001\nBrett\u3055\u3093\u304c[Gist](https://gist.github.com/robotconscience/2554110)\u306b\u4e0a\u3052\u3066\u3044\u305f\u5b9f\u88c5\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n```cpp:SysCommand.h\n//\n//  SysCommand.h\n//\n//  Created by Brett Renfer on 2/22/12.\n//\n\n#pragma once\n#include \"ofThread.h\"\n\nclass SysCommand : private ofThread\n{\npublic:\n    ofEvent<string> commandComplete;\n    \n    void callCommand( string command ){\n        cmd = command;\n        stopThread();\n        startThread();\n    }\n    \n    // CALL THIS DIRECTLY FOR BLOCKING COMMAND\n    // thanks to: http://stackoverflow.com/questions/478898/how-to-execute-a-command-and-get-output-of-command-within-c\n    std::string exec(char* cmd) {\n        FILE* pipe = popen(cmd, \"r\");\n        if (!pipe) return \"ERROR\";\n        char buffer[128];\n        std::string result = \"\";\n        while(!feof(pipe)) {\n            if(fgets(buffer, 128, pipe) != NULL)\n                result += buffer;\n        }\n        pclose(pipe);\n        return result;\n    }\n    \nprivate:\n    void threadedFunction(){\n        ofLog( OF_LOG_VERBOSE, \"call \"+cmd );\n        string result = exec( (char *) cmd.c_str() );\n        ofLog( OF_LOG_VERBOSE, \"RESULT \"+result );\n        stopThread();\n        ofNotifyEvent( commandComplete, result, this );\n    }\n    string cmd;\n};\n```\n\n# w/ Max/MSP\n## Bill\u6c0f\u306e\"shell\"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\n<img width=\"520\" alt=\"Screen Shot 2016-12-08 at 22.12.40.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/13971/1675a8df-5961-cd78-fde1-8dda18033c5c.png\">\n\n[\u516c\u5f0f\u306e\u30d5\u30a9\u30fc\u30e9\u30e0](https://cycling74.com/toolbox/bernstein-shell/#.WElTtndh3ag)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u4e2d\u8eab\u3092\u898b\u308b\u3068C\u304b\u3089pthread\u3057\u3066\u307e\u3059\u306d\u3002\n\n## \u8d64\u677e\u5148\u751f\u306e\"aka.shell\"\u3092\u4f7f\u3046\n<img width=\"662\" alt=\"Screen Shot 2016-12-08 at 22.14.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/13971/12a03080-ed07-8f29-220d-5a142676ba30.png\">\n\n[\u8d64\u677e\u5148\u751f\u306eWeb](http://www.iamas.ac.jp/~aka/max/#aka_shell)\u3088\u308a\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\u3053\u3061\u3089\u306fpopen\u3067\u306e\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3088\u308a\u30e1\u30b8\u30e3\u30fc\u306a\u306e\u3067\u53c2\u8003\u306b\u306a\u308b\u8a18\u4e8b\u304c\u305f\u304f\u3055\u3093\u898b\u3064\u304b\u308a\u307e\u3059\u3002\nQiita\u306b\u8a73\u3057\u3044\u8a18\u4e8b\u3082\u3042\u308a\u307e\u3057\u305f\u3002 \u2192 [Unix\u30b3\u30de\u30f3\u30c9\u3092\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3068\u3057\u305fMax-\u5916\u90e8\u30a2\u30d7\u30ea\u9593\u306e\u9023\u643a\u65b9\u6cd5](http://qiita.com/tgck/items/f3d6a98fc1fa76a139f3)\n\n# w/ Quartz Composer\n## CommandLineTool\n[\u30c7\u30da\u30ed\u30c3\u30d1\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea](https://developer.apple.com/library/content/samplecode/CommandLineTool/Introduction/Intro.html)\u304b\u3089\u8b39\u88fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u624b\u306b\u5165\u308a\u307e\u3059\u3002\n\u53e4\u3044\u306e\u3067\u3001Xcode\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304b\u3089\u5fae\u4fee\u6b63\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u65e5\u672c\u8a9e\u3067\u66f8\u304b\u308c\u305f\u53c2\u8003\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3057\u305f\u3002 \u2192 [UNIX Command \u2013 execute in Quartz Composer](https://dasaq.wordpress.com/2009/05/21/command/)\n## ShellCommand\u30d1\u30c3\u30c1\u3092\u4f7f\u3046\n![shell-command-patch.png](https://qiita-image-store.s3.amazonaws.com/0/13971/7d52e5b3-ef9c-0607-7f50-de753767eac5.png)\n[Kosada inc.](http://kosada.com/SoftwareDevelopment/QuartzComposer/Kineme/ShellCommandPatch)\u304c\u516c\u958b\u3057\u3066\u3044\u308bShellCommand\u30d1\u30c3\u30c1\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\n[Kinema](http://kineme.net/ShellCommand)\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3067\u304d\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\u3069\u306e\u30c4\u30fc\u30eb/\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3082\u5916\u90e8\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u8907\u6570\u3042\u308a\u307e\u3059\u3002\n\u305d\u308c\u3050\u3089\u3044\u5f37\u529b\u306a\u9023\u643a\u306a\u306e\u3067\u3059\u304c\u3001\u3044\u305a\u308c\u3082\u300c\u3068\u3093\u3067\u3082\u306a\u3044\u5f15\u6570\u3092\u6e21\u3057\u3066\u305f\uff01\u300d\u300c\u30b3\u30de\u30f3\u30c9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\u3068\u52d5\u304b\u306a\u3044\uff01\u300d\u3068\u3044\u3063\u305f\u30ea\u30b9\u30af&\u3042\u308b\u3042\u308b\u304c\u3042\u3063\u305f\u308a\u3057\u307e\u3059\u306e\u3067\u3001\u5fc3\u3057\u3066\u304a\u4f7f\u3044\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n", "tags": ["openFrameworks", "Max-MSP", "QuartzComposer", "ShellScript", "AppleScript"]}