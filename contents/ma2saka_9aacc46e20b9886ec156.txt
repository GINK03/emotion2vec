{"context": " More than 1 year has passed since last update.\n\nWhat's Cement\npython \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\u30bb\u30e1\u30f3\u30c8\u3002\u65e5\u672c\u8a9e\u60c5\u5831\u304c\u3042\u3093\u307e\u308a\u306a\u3044\u306e\u3067\u81ea\u5206\u304c\u5f8c\u3067\u30b0\u30b0\u308b\u7528\u306b\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\nhttp://cement.readthedocs.org/\n\n\u300cA Framework, for the CLI Ninja.\u300d\u3063\u3066\u66f8\u3044\u3066\u308b\u3002\u30af\u30fc\u30eb\u306a\u3082\u306e\u306f\u5168\u90e8\u5fcd\u8005\u304b\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\npip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\npip install cement\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\u3053\u3093\u306a\u611f\u3058\u306e\u3084\u3064\u3002\u5358\u4e00\u6a5f\u80fd\u306e\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u306a\u3089\u3053\u306e\u30ec\u30d9\u30eb\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u3042\u308c\u3070\u5341\u5206\u4f7f\u3048\u308b\u3002\nmyapp1 -h\nmyapp1 --option <\u30aa\u30d7\u30b7\u30e7\u30f3>\nmyapp1 --option -F <\u5f15\u6570>\nmyapp1 --option -F <\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570>\nmyapp1 --option -F <\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570> .... \n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u4e00\u3064\u3002\u500b\u5225\u306b\u5b9a\u7fa9\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306f -F\u3068--option\u3002\u3042\u3068\u5fc5\u9808\u306e\u5f15\u6570\u304c\u4e00\u3064\u3002\u4efb\u610f\u306e\u6570\u6307\u5b9a\u3067\u304d\u308b\u5f15\u6570\u3002\n\nmyapp.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n        arguments = [\n            ( ['-o', '--option'],\n              dict(action='store', default=\"default option value\",help='option\u3092\u6307\u5b9a\u3059\u308b\u3088') ),\n            ( ['-F'],\n              dict(action='store_true', help='\u5927\u6587\u5b57F\u30aa\u30d7\u30b7\u30e7\u30f3\u3060\u3088') ),\n            (['param1'], dict(action='store', nargs=1, help = \"\u7b2c\u4e00\u5f15\u6570\u3060\u3088\")),\n            (['param2'], dict(action='store', nargs=\"*\", metavar=\"PARAM2\", help = \"\u7b2c\u4e8c\u5f15\u6570\u3060\u3088\", default = [\"default ext value\"])),\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        if self.app.pargs.option:\n            print \"option \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f <%s>\" % self.app.pargs.option\n\n        if self.app.pargs.F:\n            print \"F \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3055\u308c\u305f\u3088\"\n\n        if self.app.pargs.param1:\n            print \"\u5f15\u6570 : %s\" % self.app.pargs.param1[0]\n\n        if self.app.pargs.param2:\n            print \"\u5f15\u6570 : %s\" % self.app.pargs.param2[0]\n\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406\")\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController]\n\nwith App() as app:\n    app.run()\n\n\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9(subcommand)\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f @exporse() \u3092\u3064\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u3002default \u30e1\u30bd\u30c3\u30c9\u304c\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u7701\u7565\u3057\u305f\u969b\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002\n    @expose(aliases=[\"y!\", \"sb\"], help=\"default \u30e1\u30bd\u30c3\u30c9\u306e\u8aac\u660e\")\n    def yahoo(self):\n        self.app.log.info(\"yahoo \u51e6\u7406\")\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u3060\u3088\")\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u304b\u30dd\u30b8\u30b7\u30e7\u30f3\u5f15\u6570\u306f\u4f7f\u3044\u3069\u3053\u308d\u304c\u96e3\u3057\u3044\u3002\u306a\u305c\u306a\u3089\u5f15\u6570\u3068\u304b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u304c\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u5358\u4f4d\u3060\u3057\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u5f15\u6570\u304c\u3076\u3064\u304b\u308b\u3068\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3061\u3083\u3046\u304b\u3089\u3060\u3002\u305f\u3068\u3048\u3070\u4e0a\u306e\u4f8b\u3060\u3068\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u7701\u7565\u3057\u3066\u7b2c\u4e00\u5f15\u6570\u3068\u3057\u3066 default\u3068\u304byahoo \u3092\u6e21\u305d\u3046\u3068\u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\u3053\u308c\u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u5f0f\u306eCLI\u3092\u8a2d\u8a08\u3059\u308b\u3068\u3069\u3046\u3057\u3066\u3082\u76f4\u9762\u3059\u308b\u306e\u3067\u4ed5\u65b9\u304c\u306a\u3044\u3068\u3053\u308d\u3067\u306f\u3042\u308b\u3002\n\u3061\u306a\u307f\u306b\u540c\u3058\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f\u5f15\u6570\u306e\u5b9a\u7fa9\u306f\u5171\u901a\u3067\u3042\u308b\u3002\u3060\u304b\u3089\u3001\u5fc5\u9808\u5f15\u6570\u3092\u4e00\u3064\u6301\u3064\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u4e2d\u3067\u306f\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306f\u5b9a\u7fa9\u3067\u304d\u306a\u3044\u3002\n\u305d\u3046\u3044\u3046\u8a2d\u8a08\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u5f8c\u8ff0\u306e Namespace (\u30cd\u30b9\u30c8\u3057\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9) \u3092\u5229\u7528\u3059\u308b\u3002\n\n\u540d\u524d\u7a7a\u9593(Namespace)\nNamespace \u3068\u3057\u3066\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u30cd\u30b9\u30c8\u3067\u304d\u308b\u3002Example - Multiple Stacked Controllers \u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u4f53\u7cfb\u3092\u4f5c\u308b\u3002\nmyapp2.py <\u5f15\u6570>\nmyapp2.py sub\nmyapp2.py sub hello\nmyapp2.py sub world\n\n\u7d20\u306e myapp2.py \u306e\u547c\u3073\u51fa\u3057(\u3064\u307e\u308a MainController) \u3067\u306f\u7b2c\u4e00\u5f15\u6570\u304c\u5fc5\u9808\u3060\u304c\u3001\u540d\u524d\u7a7a\u9593 sub \u3067\u306f\u5f15\u6570\u304c\u4e0d\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3059\u308b\u3002hello\u3068world\u306f\u3044\u305a\u308c\u3082\u540d\u524d\u7a7a\u9593 sub \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3042\u308a\u5f15\u6570\u3067\u306f\u306a\u3044\u3002\n\nmyapp2.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u30d9\u30fc\u30b9\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n\n\nclass MainController(CementBaseController):\n    class Meta:\n        label = 'main'\n        description = \"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u8aac\u660e\u3060\u3088\"\n        stacked_on = 'base'\n        stacked_type = 'embedded'\n        arguments = [\n            (['param1'], dict(action='store', nargs=1, help=\"\u5fc5\u9808\u306e\u7b2c\u4e00\u5f15\u6570\"))\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        print \"\u5f15\u6570 : %s\" % self.app.pargs.param1[0]\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406\")\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass SubController(CementBaseController):\n    class Meta:\n        label = 'sub'\n        description = \"\u30b5\u30d6\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u8aac\u660e\u3060\u3088\"\n        stacked_on = 'base'\n        stacked_type = 'nested'\n\n        arguments = [ ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.info(\"\u30b5\u30d6\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u51e6\u7406\")\n\n    @expose()\n    def hello(self):\n        self.app.log.info(\"hello world\")\n\n    @expose()\n    def world(self):\n        self.app.log.info(\"the world\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController, MainController, SubController]\n\nwith App() as app:\n    app.run()\n\n\n\u307e\u3042\u3057\u304b\u3057\u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u5074\u304b\u3089\u3059\u308b\u3068\u3069\u3046\u8003\u3048\u3066\u3082 sub \u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3060\u3088\u306a\u3041\u3002\n\n\u4efb\u610f\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\napp.exit_code \u306b\u5024\u3092\u4ee3\u5165\u3057\u3066\u304a\u3051\u3070\u3088\u3044\u3002\n    @expose(hide=True)\n    def default(self):\n        self.app.log.error('\u307e\u3060\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093')\n        self.app.exit_code = 1\n\n\u3046\u3063\u304b\u308a\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u623b\u308a\u5024\u304c\u30b3\u30de\u30f3\u30c9\u5168\u4f53\u306e\u623b\u308a\u5024\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u6301\u3061\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u6ce8\u610f\u3059\u308b\u3053\u3068\u3002\n\n\u30d1\u30a4\u30d7\u3067\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n\u30d1\u30a4\u30d7\u3068\u30d5\u30a1\u30a4\u30eb\u6307\u5b9a\u3001\u3069\u3061\u3089\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\ncement3.py hello.txt\ncat hello.txt | cement3.py\n\nargparse.FileType\u3068default=sys.stdin\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u3002nargs=\"?\"\u3067\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u5f15\u6570\u306b\u3067\u304d\u308b\u3002\n\ncement3.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\nimport argparse\nimport sys\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n        arguments = [\n            ([\"input\"], dict(nargs='?', type=argparse.FileType('r'), default=sys.stdin ))\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        for line in self.app.pargs.input:\n          print \">>> %s\" % line\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController]\n\nwith App() as app:\n    app.run()\n\n\n\n\u307e\u3068\u3081\n\ncement \u76f8\u5f53\u30af\u30fc\u30eb\u306a\u8a2d\u8a08\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u4f7f\u3044\u5012\u3057\u3066\u304b\u3063\u3053\u3044\u3044CLI\u3092\u4f5c\u308d\u3046\u3002\n\n\u62e1\u5f35\u6a5f\u80fd\u3068\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u5316\u3068\u304b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u308b\u3002\n\u5f15\u6570\u306e\u51e6\u7406\u306f argparse \u304c\u5272\u3068\u305d\u306e\u307e\u307e\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3002 \n\nconf \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u8a2d\u5b9a\u306e\u8aad\u307f\u51fa\u3057\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\nmemcached\u30cf\u30f3\u30c9\u30e9\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u65b9\u5f0f\u3001\u51fa\u529b\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u306a\u3069\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u672c\u683c\u7684\u306a\u3067\u304b\u3044\u30a2\u30d7\u30ea\u958b\u767a\u306b\u3082\u5341\u5206\u4f7f\u3048\u308b\u3002\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30c4\u30fc\u30eb\u3092\u7d71\u4e00\u3055\u308c\u305f\u65b9\u5f0f\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u3088\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u5c0f\u898f\u6a21\u306a\u3068\u3053\u308d\u304b\u3089\u3058\u3083\u3093\u3058\u3083\u3093\u4f7f\u3063\u3066\u3044\u3051\u308b\u3068\u601d\u3046\u3002\n\n\n# What's Cement\n\npython \u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\u30bb\u30e1\u30f3\u30c8\u3002\u65e5\u672c\u8a9e\u60c5\u5831\u304c\u3042\u3093\u307e\u308a\u306a\u3044\u306e\u3067\u81ea\u5206\u304c\u5f8c\u3067\u30b0\u30b0\u308b\u7528\u306b\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\n- http://cement.readthedocs.org/\n\n\u300cA Framework, for the CLI Ninja.\u300d\u3063\u3066\u66f8\u3044\u3066\u308b\u3002\u30af\u30fc\u30eb\u306a\u3082\u306e\u306f\u5168\u90e8\u5fcd\u8005\u304b\u3002\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\npip\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3059\u3002\n\n```\npip install cement\n```\n\n \n# \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\n## \u30b7\u30f3\u30d7\u30eb\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u3084\u3064\u3002\u5358\u4e00\u6a5f\u80fd\u306e\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u306a\u3089\u3053\u306e\u30ec\u30d9\u30eb\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304c\u3042\u308c\u3070\u5341\u5206\u4f7f\u3048\u308b\u3002\n\n```\nmyapp1 -h\nmyapp1 --option <\u30aa\u30d7\u30b7\u30e7\u30f3>\nmyapp1 --option -F <\u5f15\u6570>\nmyapp1 --option -F <\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570>\nmyapp1 --option -F <\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570> <\u7701\u7565\u53ef\u80fd\u306a\u5f15\u6570> .... \n```\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u4e00\u3064\u3002\u500b\u5225\u306b\u5b9a\u7fa9\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306f `-F`\u3068`--option`\u3002\u3042\u3068\u5fc5\u9808\u306e\u5f15\u6570\u304c\u4e00\u3064\u3002\u4efb\u610f\u306e\u6570\u6307\u5b9a\u3067\u304d\u308b\u5f15\u6570\u3002\n\n```python:myapp.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n        arguments = [\n            ( ['-o', '--option'],\n              dict(action='store', default=\"default option value\",help='option\u3092\u6307\u5b9a\u3059\u308b\u3088') ),\n            ( ['-F'],\n              dict(action='store_true', help='\u5927\u6587\u5b57F\u30aa\u30d7\u30b7\u30e7\u30f3\u3060\u3088') ),\n            (['param1'], dict(action='store', nargs=1, help = \"\u7b2c\u4e00\u5f15\u6570\u3060\u3088\")),\n            (['param2'], dict(action='store', nargs=\"*\", metavar=\"PARAM2\", help = \"\u7b2c\u4e8c\u5f15\u6570\u3060\u3088\", default = [\"default ext value\"])),\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        if self.app.pargs.option:\n            print \"option \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f <%s>\" % self.app.pargs.option\n\n        if self.app.pargs.F:\n            print \"F \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u6307\u5b9a\u3055\u308c\u305f\u3088\"\n\n        if self.app.pargs.param1:\n            print \"\u5f15\u6570 : %s\" % self.app.pargs.param1[0]\n\n        if self.app.pargs.param2:\n            print \"\u5f15\u6570 : %s\" % self.app.pargs.param2[0]\n\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406\")\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController]\n\nwith App() as app:\n    app.run()\n```\n\n## \u30b5\u30d6\u30b3\u30de\u30f3\u30c9(subcommand)\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f `@exporse()` \u3092\u3064\u3051\u305f\u30e1\u30bd\u30c3\u30c9\u304c\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u308b\u3002`default` \u30e1\u30bd\u30c3\u30c9\u304c\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u7701\u7565\u3057\u305f\u969b\u306b\u547c\u3070\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3042\u308b\u3002\n\n```\n    @expose(aliases=[\"y!\", \"sb\"], help=\"default \u30e1\u30bd\u30c3\u30c9\u306e\u8aac\u660e\")\n    def yahoo(self):\n        self.app.log.info(\"yahoo \u51e6\u7406\")\n        \n    @expose(hide=True)\n    def default(self):\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u51e6\u7406\u3060\u3088\")\n```\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u304b\u30dd\u30b8\u30b7\u30e7\u30f3\u5f15\u6570\u306f\u4f7f\u3044\u3069\u3053\u308d\u304c\u96e3\u3057\u3044\u3002\u306a\u305c\u306a\u3089\u5f15\u6570\u3068\u304b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u304c\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u5358\u4f4d\u3060\u3057\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u5f15\u6570\u304c\u3076\u3064\u304b\u308b\u3068\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3061\u3083\u3046\u304b\u3089\u3060\u3002\u305f\u3068\u3048\u3070\u4e0a\u306e\u4f8b\u3060\u3068\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u7701\u7565\u3057\u3066\u7b2c\u4e00\u5f15\u6570\u3068\u3057\u3066 `default`\u3068\u304b`yahoo` \u3092\u6e21\u305d\u3046\u3068\u3057\u3066\u3082\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u89e3\u91c8\u3055\u308c\u3066\u3057\u307e\u3046\u3002\n\n\u3053\u308c\u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u5f0f\u306eCLI\u3092\u8a2d\u8a08\u3059\u308b\u3068\u3069\u3046\u3057\u3066\u3082\u76f4\u9762\u3059\u308b\u306e\u3067\u4ed5\u65b9\u304c\u306a\u3044\u3068\u3053\u308d\u3067\u306f\u3042\u308b\u3002\n\n\u3061\u306a\u307f\u306b\u540c\u3058\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3067\u306f\u5f15\u6570\u306e\u5b9a\u7fa9\u306f\u5171\u901a\u3067\u3042\u308b\u3002\u3060\u304b\u3089\u3001\u5fc5\u9808\u5f15\u6570\u3092\u4e00\u3064\u6301\u3064\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u4e2d\u3067\u306f\u5f15\u6570\u3092\u6301\u305f\u306a\u3044\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306f\u5b9a\u7fa9\u3067\u304d\u306a\u3044\u3002\n\n\u305d\u3046\u3044\u3046\u8a2d\u8a08\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u5f8c\u8ff0\u306e Namespace (\u30cd\u30b9\u30c8\u3057\u305f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9) \u3092\u5229\u7528\u3059\u308b\u3002\n\n## \u540d\u524d\u7a7a\u9593(Namespace)\n\nNamespace \u3068\u3057\u3066\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u3092\u30cd\u30b9\u30c8\u3067\u304d\u308b\u3002[Example - Multiple Stacked Controllers ](http://builtoncement.com/2.6/examples/multiple_stacked_controllers.html#multiple-stacked-controllers)\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u4f53\u7cfb\u3092\u4f5c\u308b\u3002\n\n```\nmyapp2.py <\u5f15\u6570>\nmyapp2.py sub\nmyapp2.py sub hello\nmyapp2.py sub world\n```\n\n\b\u7d20\u306e myapp2.py \u306e\u547c\u3073\u51fa\u3057\b(\u3064\u307e\u308a `MainController`) \u3067\u306f\u7b2c\u4e00\u5f15\u6570\u304c\u5fc5\u9808\u3060\u304c\u3001\u540d\u524d\u7a7a\u9593 `sub` \u3067\u306f\u5f15\u6570\u304c\u4e0d\u8981\u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3059\u308b\u3002`hello`\u3068`world`\u306f\u3044\u305a\u308c\u3082\u540d\u524d\u7a7a\u9593 `sub` \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3042\u308a\u5f15\u6570\u3067\u306f\u306a\u3044\u3002\n\t\n```python:myapp2.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u30d9\u30fc\u30b9\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n\n\nclass MainController(CementBaseController):\n    class Meta:\n        label = 'main'\n        description = \"\u30e1\u30a4\u30f3\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u8aac\u660e\u3060\u3088\"\n        stacked_on = 'base'\n        stacked_type = 'embedded'\n        arguments = [\n            (['param1'], dict(action='store', nargs=1, help=\"\u5fc5\u9808\u306e\u7b2c\u4e00\u5f15\u6570\"))\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        print \"\u5f15\u6570 : %s\" % self.app.pargs.param1[0]\n        self.app.log.info(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406\")\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass SubController(CementBaseController):\n    class Meta:\n        label = 'sub'\n        description = \"\u30b5\u30d6\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u8aac\u660e\u3060\u3088\"\n        stacked_on = 'base'\n        stacked_type = 'nested'\n\n        arguments = [ ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.info(\"\u30b5\u30d6\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u306e\u51e6\u7406\")\n\n    @expose()\n    def hello(self):\n        self.app.log.info(\"hello world\")\n\n    @expose()\n    def world(self):\n        self.app.log.info(\"the world\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController, MainController, SubController]\n\nwith App() as app:\n    app.run()\n```\n\n\u307e\u3042\u3057\u304b\u3057\u30b3\u30de\u30f3\u30c9\u306e\u5229\u7528\u5074\u304b\u3089\u3059\u308b\u3068\u3069\u3046\u8003\u3048\u3066\u3082 `sub` \u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3060\u3088\u306a\u3041\u3002\n\n## \u4efb\u610f\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\n\napp.exit_code \u306b\u5024\u3092\u4ee3\u5165\u3057\u3066\u304a\u3051\u3070\u3088\u3044\u3002\n\n```\n    @expose(hide=True)\n    def default(self):\n        self.app.log.error('\u307e\u3060\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093')\n        self.app.exit_code = 1\n```\n\n\u3046\u3063\u304b\u308a\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u623b\u308a\u5024\u304c\u30b3\u30de\u30f3\u30c9\u5168\u4f53\u306e\u623b\u308a\u5024\u306b\u306a\u308a\u305d\u3046\u306a\u6c17\u6301\u3061\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u306e\u3067\u6ce8\u610f\u3059\u308b\u3053\u3068\u3002\n\n## \u30d1\u30a4\u30d7\u3067\u5165\u529b\u3092\u53d7\u3051\u53d6\u308b\n \n\u30d1\u30a4\u30d7\u3068\u30d5\u30a1\u30a4\u30eb\u6307\u5b9a\u3001\u3069\u3061\u3089\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```\ncement3.py hello.txt\ncat hello.txt | cement3.py\n```\n\n`argparse.FileType`\u3068`default=sys.stdin`\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3068\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u3002nargs=\"?\"\u3067\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306a\u5f15\u6570\u306b\u3067\u304d\u308b\u3002\n\n\n```python:cement3.py\n#-*- coding:utf-8 -*-\nfrom cement.core.foundation import CementApp\nfrom cement.core.controller import CementBaseController, expose\nfrom cement.core import handler\nimport argparse\nimport sys\n\nclass BaseController(CementBaseController):\n    class Meta:\n        label = 'base'\n        description = \"\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\u3060\u3088\"\n        arguments = [\n            ([\"input\"], dict(nargs='?', type=argparse.FileType('r'), default=sys.stdin ))\n            ]\n\n    @expose(hide=True)\n    def default(self):\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u958b\u59cb\")\n        for line in self.app.pargs.input:\n          print \">>> %s\" % line\n        self.app.log.debug(\"\u30c7\u30d5\u30a9\u30eb\u30c8\u51e6\u7406 - \u7d42\u4e86\")\n\nclass App(CementApp):\n    class Meta:\n        label = 'app'\n        base_controller = 'base'\n        handlers = [BaseController]\n\nwith App() as app:\n    app.run()\n```\n\n# \u307e\u3068\u3081\n\n- cement \u76f8\u5f53\u30af\u30fc\u30eb\u306a\u8a2d\u8a08\u306b\u306a\u3063\u3066\u308b\u306e\u3067\u4f7f\u3044\u5012\u3057\u3066\u304b\u3063\u3053\u3044\u3044CLI\u3092\u4f5c\u308d\u3046\u3002\n- [\u62e1\u5f35\u6a5f\u80fd\u3068\u3057\u3066\u30c7\u30fc\u30e2\u30f3\u5316](http://builtoncement.com/2.6/api/ext/ext_daemon.html)\u3068\u304b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u308b\u3002\n- \u5f15\u6570\u306e\u51e6\u7406\u306f [argparse \u304c\u5272\u3068\u305d\u306e\u307e\u307e\u4f7f\u308f\u308c\u3066\u3044\u308b](http://docs.python.jp/2/library/argparse.html#metavar)\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3002 \n- [conf \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u306e\u8a2d\u5b9a\u306e\u8aad\u307f\u51fa\u3057\u3092\u30b5\u30dd\u30fc\u30c8](http://builtoncement.com/2.6/dev/interfaces_and_handlers.html#hander-default-configuration-settings)\u3057\u3066\u3044\u308b\u3002\n- memcached\u30cf\u30f3\u30c9\u30e9\u3084\u30d7\u30e9\u30b0\u30a4\u30f3\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u65b9\u5f0f\u3001\u51fa\u529b\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u65b9\u6cd5\u306a\u3069\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u3066\u3001\u672c\u683c\u7684\u306a\u3067\u304b\u3044\u30a2\u30d7\u30ea\u958b\u767a\u306b\u3082\u5341\u5206\u4f7f\u3048\u308b\u3002\u304c\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30c4\u30fc\u30eb\u3092\u7d71\u4e00\u3055\u308c\u305f\u65b9\u5f0f\u3067\u958b\u767a\u3059\u308b\u305f\u3081\u306e\u3088\u3044\u30e9\u30a4\u30d6\u30e9\u30ea\u306a\u306e\u3067\u5c0f\u898f\u6a21\u306a\u3068\u3053\u308d\u304b\u3089\u3058\u3083\u3093\u3058\u3083\u3093\u4f7f\u3063\u3066\u3044\u3051\u308b\u3068\u601d\u3046\u3002\n", "tags": ["Python", "cli", "cement"]}