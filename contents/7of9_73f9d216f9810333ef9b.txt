{"context": "\n\nLink\nhttp://qiita.com/7of9/items/527b87a63aeb2ce51828\n\u3067\u8abf\u3079\u3066\u3044\u305fwatchdog reset\u304c\u304b\u304b\u308b\u75c7\u72b6\u3002\n\u8fd1\u3044\u75c7\u72b6\u306e\u4f8b\u304c\u4ee5\u4e0b\u306b\u898b\u3064\u304b\u3063\u305f\u3002\nhttp://www.esp8266.com/viewtopic.php?f=8&t=4089\n\nand tried to write a simple blink code as follow:\n\nL\u30c1\u30ab\u3060\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067watchdog reset\u304c\u304b\u304b\u308b\u3068\u3044\u3046\u3002\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u306e\u56de\u7b54\u304c\n\nProbably it is coming from the Wifi thread not able to start due to corrupted configs store in flash.\nMaybe you should upload blank.bin to both 7C000h and 7E000h addresses or initialize Wifi using API. \n\n\u5bfe\u7b56\u3068\u3057\u3066blank.bin\u30677C000h\u30687E000h\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3046\u3001\u3068\u3042\u308b\u304c\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u3059\u308b\u306e\u3067\u3082\u3044\u3044\u3068\u306e\u3053\u3068\u3002\n\nInstead, if you look at examples of ESP8266WiFi, you can initialize it in AP mode, and then do nothing with it, until your decide to get it further. \n\nWiFi.softAP(\"MyESPAP\", \"MyPassword\");\nWiFi.mode(WIFI_AP);\n\n\n\u8a66\u3057\u3066\u307f\u305f\n\u4e0a\u8a18\u3092\u8a66\u3057\u3066\u307f\u305f\u3002\n\n\nv0.2 @ github\u304b\u3089\u554f\u984c\u3092\u751f\u3058\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53d6\u5f97\nWiFi_setup()\u5185\u306e#if 1\u306e\u5b9a\u7fa9\u3092#if 0\u306b\u5909\u66f4\n\u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u8fbc\u307f\n\u4e0a\u8a18\u306e\u5bfe\u7b56\u3092\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0(\u4e0b\u8a18)\u3092\u66f8\u8fbc\u307f\n\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  WiFi.softAP(\"MyESPAP\", \"MyPassword\");\n  WiFi.mode(WIFI_AP);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  char szbuf[] = \"hello\";\n\n  Serial.println(szbuf);\n  delay(3000);\n}\n\n\u78ba\u304b\u306bwatchdog reset\u304c\u304b\u304b\u3089\u306a\u304f\u306a\u3063\u305f\u3002\n\nWiFi.disconnect()\n\u500b\u4eba\u7684\u306b\u306fWiFi.disconnect()\u3067\u3082\u3044\u3044\u306e\u3067\u306f\u3068\u601d\u3046\u3002\n\u8a66\u3057\u3066\u307f\u305f\u3002\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  WiFi.disconnect();\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  char szbuf[] = \"hello\";\n\n  Serial.println(szbuf);\n  delay(3000);\n}\n\n\u3053\u3061\u3089\u3082\u3067watchdog reset\u304c\u304b\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3002\n## Link\n\nhttp://qiita.com/7of9/items/527b87a63aeb2ce51828\n\u3067\u8abf\u3079\u3066\u3044\u305fwatchdog reset\u304c\u304b\u304b\u308b\u75c7\u72b6\u3002\n\u8fd1\u3044\u75c7\u72b6\u306e\u4f8b\u304c\u4ee5\u4e0b\u306b\u898b\u3064\u304b\u3063\u305f\u3002\nhttp://www.esp8266.com/viewtopic.php?f=8&t=4089\n> and tried to write a simple blink code as follow:\n\nL\u30c1\u30ab\u3060\u3051\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067watchdog reset\u304c\u304b\u304b\u308b\u3068\u3044\u3046\u3002\n\n\u305d\u308c\u306b\u5bfe\u3057\u3066\u306e\u56de\u7b54\u304c\n\n> Probably it is coming from the Wifi thread not able to start due to corrupted configs store in flash.\nMaybe you should upload blank.bin to both 7C000h and 7E000h addresses or initialize Wifi using API. \n\n\u5bfe\u7b56\u3068\u3057\u3066blank.bin\u30677C000h\u30687E000h\u3092\u4e0a\u66f8\u304d\u3057\u3066\u3057\u307e\u3046\u3001\u3068\u3042\u308b\u304c\u4ed6\u306e\u65b9\u6cd5\u3068\u3057\u3066\u4ee5\u4e0b\u3092\u3059\u308b\u306e\u3067\u3082\u3044\u3044\u3068\u306e\u3053\u3068\u3002\n\n> Instead, if you look at examples of ESP8266WiFi, you can initialize it in AP mode, and then do nothing with it, until your decide to get it further. \n\n```\nWiFi.softAP(\"MyESPAP\", \"MyPassword\");\nWiFi.mode(WIFI_AP);\n```\n\n## \u8a66\u3057\u3066\u307f\u305f \n\n\u4e0a\u8a18\u3092\u8a66\u3057\u3066\u307f\u305f\u3002\n\n1. [v0.2 @ github](https://github.com/yasokada/esp8266_160625_watchdogReset/releases/tag/v0.2)\u304b\u3089\u554f\u984c\u3092\u751f\u3058\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u53d6\u5f97\n2. WiFi_setup()\u5185\u306e`#if 1`\u306e\u5b9a\u7fa9\u3092`#if 0`\u306b\u5909\u66f4\n3. \u30d7\u30ed\u30b0\u30e9\u30e0\u66f8\u8fbc\u307f\n4. \u4e0a\u8a18\u306e\u5bfe\u7b56\u3092\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0(\u4e0b\u8a18)\u3092\u66f8\u8fbc\u307f\n\n```c\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  WiFi.softAP(\"MyESPAP\", \"MyPassword\");\n  WiFi.mode(WIFI_AP);\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  char szbuf[] = \"hello\";\n\n  Serial.println(szbuf);\n  delay(3000);\n}\n```\n\n\u78ba\u304b\u306bwatchdog reset\u304c\u304b\u304b\u3089\u306a\u304f\u306a\u3063\u305f\u3002\n\n## WiFi.disconnect()\n\n\u500b\u4eba\u7684\u306b\u306fWiFi.disconnect()\u3067\u3082\u3044\u3044\u306e\u3067\u306f\u3068\u601d\u3046\u3002\n\n\u8a66\u3057\u3066\u307f\u305f\u3002\n\n```c\n#include <ESP8266WiFi.h>\n\nvoid setup() {\n  WiFi.disconnect();\n  Serial.begin(115200);\n}\n\nvoid loop() {\n  char szbuf[] = \"hello\";\n\n  Serial.println(szbuf);\n  delay(3000);\n}\n```\n\n\u3053\u3061\u3089\u3082\u3067watchdog reset\u304c\u304b\u304b\u3089\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u305f\u3002\n\n", "tags": ["ESP8266", "borgSensorSystem1", "watchdog"]}