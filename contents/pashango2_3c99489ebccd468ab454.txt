{"context": "PIL/Pillow\u306e\u307f\u3092\u4f7f\u3063\u3066PhotoShop\u306a\u3069\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\u7c21\u5358\u306b\u601d\u3044\u3064\u304f\u65b9\u6cd5\u306fImage.getpixel/putpixel\u3092\u4f7f\u3046\u65b9\u6cd5\u3060\u304c\u3001\u975e\u5e38\u306b\u9045\u3044\u3002\nnumpy\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304c\u3001\u30c4\u30fc\u30eb\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6975\u529b\u5c11\u306a\u304f\u3057\u305f\u3044\u3002\n\u306a\u304a\u3001\u63cf\u753b\u30e2\u30fc\u30c9\u306e\u6570\u306f\u975e\u5e38\u306b\u591a\u3044\u305f\u3081\u5168\u3066\u306f\u5217\u6319\u3057\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u672c\u7a3f\u3092\u8aad\u3081\u3070\u4ed6\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3082\u5bb9\u6613\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3060\u308d\u3046\u3002\n\nImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\nImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6c17\u8efd\u306b\u753b\u50cf\u5408\u6210\u304c\u3067\u304d\u308b\u3002\nfrom PIL import Image, ImageChops\n\nimg = Image.open(\"sample.png\")\neffect_img = Image.open(\"effect.png\")\n\n \n\u5de6\u304c\u5143\u753b\u50cf\u3001\u53f3\u304c\u30a8\u30d5\u30a7\u30af\u30c8\u7528\u753b\u50cf\u3067\u3042\u308b\u3001\u3053\u306e\uff12\u3064\u306e\u753b\u50cf\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u304f\u3002\n\n\u8986\u3044\u713c\u304d\uff08\u30ea\u30cb\u30a2\uff09\nImageChops.add(img, effect_img)\n\n\n\n\u6e1b\u7b97\nImageChops.subtract(img, effect_img)\n\n\n\n\u4e57\u7b97\nImageChops.multiply(img, effect_img)\n\n\n\n\u30b9\u30af\u30ea\u30fc\u30f3\nImageChops.screen(img, effect_img)\n\n\n\n\u6bd4\u8f03\uff08\u660e\uff09\uff0f\u6bd4\u8f03\uff08\u6697\uff09\nImageChops.lighter(img, effect_img)\nImageChops.darker(img, effect_img)\n\n \n\n\u5dee\u306e\u7d76\u5bfe\u5024\nImageChops.difference(img, effect_img)\n\n\n\n\u30aa\u30d5\u30bb\u30c3\u30c8\nImageChops.offset(img, 100, 100)\n\n\n\nImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\nImageChops\u306b\u306f\u306a\u3044\u63cf\u753b\u30e2\u30fc\u30c9\u306fImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9f\u88c5\u3059\u308b\u3002\nImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u975e\u5e38\u306b\u30af\u30bb\u304c\u3042\u308b\u304c\u3001\u6163\u308c\u3066\u3057\u307e\u3048\u3070\u81ea\u7531\u306a\u753b\u50cf\u5909\u63db\u3092\u9ad8\u901f\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9Image\u306e\u307f\u6f14\u7b97\u53ef\u80fd\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9Image\u306fImage.split\u3067\u5206\u5272\u3059\u308b\nfloat\u3067\u6f14\u7b97\u3082\u53ef\u80fd\u3060\u304c\u3001\u5024\u306e\u7bc4\u56f2\u306f0.0\uff5e1.0\u3067\u306f\u306a\u304f0.0\uff5e255.0\n\u6f14\u7b97\u4e2d\u306eImage\u306fmode\u304c\"I\"(int)\u3001\u307e\u305f\u306f\"F\"(float)\u306b\u306a\u308b\u3001\u6700\u5f8c\u306bmode\u3092\"L\"\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\n\u5404\u7a2e\u6f14\u7b97(+,-,,/,*,%)\u3092\u3059\u308b\u3054\u3068\u306b\u65b0\u3057\u3044Image\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\u6f14\u7b97\u306f\u30d4\u30af\u30bb\u30eb\u3054\u3068\u3067\u306f\u306a\u304fImage\u3054\u3068\u306b\u884c\u308f\u308c\u308b\u3002\n\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001R\u30d0\u30f3\u30c9\u306b\u5bfe\u3057\u3066\u6bd4\u8f03\uff08\u660e\uff09\u3092\u3059\u308b\u4f8b\u3067\u3042\u308b\u3002\nfrom PIL import ImageMath\n\nimg_r = img.split()[0]\neff_r = effect_img.split()[0]\n\nImageMath.eval(\"convert(max(a, b), 'L')\", a=img_r, b=eff_r)\n\n\n\u7b49\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306f\u5024\u304c0\u307e\u305f\u306f1\u306b\u306a\u308b\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u5024\u304c128\u4ee5\u4e0b\u306e\u30d4\u30af\u30bb\u30eb\u306b\u5024100\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\nImageMath.eval(\"(a < 128) * 100\", a=img_r).convert(\"L\")\n\n\nPython\u95a2\u6570\u547c\u3073\u51fa\u3057\u3082\u53ef\u80fd\u3060\u304c\u3001\u5f15\u6570\u3067\u6e21\u3055\u308c\u308bImage\u306f\u30d4\u30af\u30bb\u30eb\u306e\u6570\u5024\u3067\u306f\u306a\u304f\u6f14\u7b97\u30aa\u30d6\u30b8\u30a7\u30af\u30c8(ImageMath._Operand)\u3067\u3042\u308b\u3053\u3068\u306b\u7559\u610f\u3059\u3079\u3057\u3002\n\u6570\u5024\u3067\u306f\u306a\u3044\u305f\u3081\u30d4\u30af\u30bb\u30eb\u306e\u5024\u306b\u3088\u3063\u3066if\u6587\u3067\u51e6\u7406\u3092\u5206\u3051\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3002 \u30d4\u30af\u30bb\u30eb\u306e\u5024\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u30de\u30b9\u30af\u5408\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u306f\u5024\u304c128\u4ee5\u4e0a\u3068\u4ee5\u4e0b\u3067\u51e6\u7406\u3092\u5206\u3051\u308b\u4f8b\u3067\u3042\u308b\u3002\ndef _threshold(a):\n    # \u5024\u304c128\u4ee5\u4e0b\u306a\u3089255\u3001128\u4ee5\u4e0a\u306a\u30891/2\u306b\u3059\u308b\n    div2 = a / 2 * (a >= 128)\n    white = (a < 128) * 255\n    return div2 + white\n\nImageMath.eval(\"func(a)\", a=img_r, func=_threshold).convert(\"L\")\n\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u3057\u304b\u6271\u3048\u306a\u3044\u306e\u3067\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9\u3092\u5206\u89e3\u3001\u51e6\u7406\u3001\u7d71\u5408\u3059\u308b\u4e00\u9023\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u3002\nfloat\u6f14\u7b97\u306e\u65b9\u304c\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3001\u3064\u3044\u3067\u306bfloat\u306b\u5909\u63db\u3057\u3066\u304a\u304f\u3002\ndef _blend_f(bands1, bands2, func):\n    blend = \"convert(func(float(a), float(b)), 'L')\"\n    bands = [\n        ImageMath.eval(\n            blend,\n            a=a,\n            b=b,\n            func=func\n        )\n        for a, b in zip(bands1, bands2)\n    ]\n    return Image.merge(\"RGB\", bands)\n\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u3001\u8907\u96d1\u306a\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\n\n\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\ndef _over_lay(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2 * (a + b - a * b / 255) - 255\n    return _cl * (a < 128) + _ch * (a >= 128)\n\n_blend_f(img.split(), effect_img.split(), _over_lay)\n\n\n\n\u30bd\u30d5\u30c8\u30e9\u30a4\u30c8\ndef _soft_light(a, b):\n    _cl = (a / 255) ** ((255 - b) / 128) * 255\n    _ch = (a / 255) ** (128 / b) * 255\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img.split(), effect_img.split(), _soft_light)\n\n\n\n\u30cf\u30fc\u30c9\u30e9\u30a4\u30c8\ndef _hard_light(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2.0 * (a + b - a * b / 255.0) - 255.0\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img.split(), effect_img.split(), _hard_light)\n\n\n\n\u51e6\u7406\u901f\u5ea6\u306b\u3064\u3044\u3066\n\u51e6\u7406\u901f\u5ea6\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\u3092Image.putpixel\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\ndef _put_pixel_overlay(a, b):\n    c = Image.new(a.mode, a.size)\n    for x in range(a.size[0]):\n        for y in range(b.size[1]):\n            cola = a.getpixel((x, y))\n            colb = b.getpixel((x, y))\n\n            colc = [\n                _a * _b * 2 / 255 if _a < 128 else (2 *(_a + _b - _a * _b / 255) - 255)\n                for _a, _b in zip(cola, colb)\n            ]\n            c.putpixel((x, y), tuple(int(_) for _ in colc))\n    return c\n\n\u5b9f\u884c\u901f\u5ea6\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n%timeit _put_pixel_overlay(img, effect_img)\n1 loop, best of 3: 663 ms per loop\n\n%timeit _blend_f(img.split(), effect_img.split(), _over_lay)\n100 loops, best of 3: 5.63 ms per loop\n\nImageMath\u7248\u306e\u65b9\u304c100\u500d\u4ee5\u4e0a\u3001\u9ad8\u901f\u3067\u3042\u308b\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3057\u307e\u3057\u305f\nPhotoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/pashango2/Image4Layer\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u3067\u7c21\u5358\u306b\u884c\u306a\u3048\u307e\u3059\u3002\npip install image4layer\n\n\n\u6700\u5f8c\u306b\n\u5df7\u306ePIL\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u308b\u3068Image.getpixel/putpixel\u3092\u4f7f\u7528\u3059\u308b\u5834\u9762\u304c\u6563\u898b\u3055\u308c\u308b\u3002\nImage.getpixel/putpixel\u306f\u753b\u50cf\u4f5c\u6210\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u753b\u50cf\u5909\u63db\u3067\u4f7f\u7528\u3059\u308b\u306e\u306f\u6700\u7d42\u624b\u6bb5\u3067\u3042\u308b\u3002\nnumpy\u3092\u4f7f\u7528\u3057\u3066\u753b\u50cf\u5909\u63db\u3092\u3059\u308b\u4f8b\u3082\u3042\u308b\u304c\u3001\u3084\u306f\u308aPIL\u306e\u307f\u306e\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u5b9f\u88c5\u306f\u9b45\u529b\u7684\u3067\u3042\u308b\u3002\nPIL\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u304c\u3089\u3001\u975e\u5e38\u306b\u5f37\u529b\u3067\u9ad8\u901f\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\n\u826f\u3044PIL\u30e9\u30a4\u30d5\u3092\u3002\nPIL/Pillow\u306e\u307f\u3092\u4f7f\u3063\u3066PhotoShop\u306a\u3069\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u7c21\u5358\u306b\u601d\u3044\u3064\u304f\u65b9\u6cd5\u306fImage.getpixel/putpixel\u3092\u4f7f\u3046\u65b9\u6cd5\u3060\u304c\u3001\u975e\u5e38\u306b\u9045\u3044\u3002\nnumpy\u3092\u4f7f\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304c\u3001\u30c4\u30fc\u30eb\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u308b\u3068\u4f9d\u5b58\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6975\u529b\u5c11\u306a\u304f\u3057\u305f\u3044\u3002\n\n\u306a\u304a\u3001\u63cf\u753b\u30e2\u30fc\u30c9\u306e\u6570\u306f\u975e\u5e38\u306b\u591a\u3044\u305f\u3081\u5168\u3066\u306f\u5217\u6319\u3057\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u672c\u7a3f\u3092\u8aad\u3081\u3070\u4ed6\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3082\u5bb9\u6613\u304f\u5b9f\u88c5\u3067\u304d\u308b\u3060\u308d\u3046\u3002\n\n## ImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\nImageChops\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u6c17\u8efd\u306b\u753b\u50cf\u5408\u6210\u304c\u3067\u304d\u308b\u3002\n\n```python\nfrom PIL import Image, ImageChops\n\nimg = Image.open(\"sample.png\")\neffect_img = Image.open(\"effect.png\")\n```\n![B9BSxGZmEQpmAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/aab8183a-2ea7-445a-28fe-85406f2b0f00.png) ![kL+ySM465ToAlAAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/f9d5991d-1090-21ee-c029-b1b48b47556f.png)\n\n\u5de6\u304c\u5143\u753b\u50cf\u3001\u53f3\u304c\u30a8\u30d5\u30a7\u30af\u30c8\u7528\u753b\u50cf\u3067\u3042\u308b\u3001\u3053\u306e\uff12\u3064\u306e\u753b\u50cf\u3092\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u4f7f\u7528\u3057\u3066\u3044\u304f\u3002\n\n\n#### \u8986\u3044\u713c\u304d\uff08\u30ea\u30cb\u30a2\uff09\n```python\nImageChops.add(img, effect_img)\n```\n![wE7Grw7M8iQMgAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/2dc58d5b-b3ff-6b86-470f-d83a5f5073ba.png)\n\n#### \u6e1b\u7b97\n```\nImageChops.subtract(img, effect_img)\n```\n![X+81Pf98mz2EwAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/5e8d9011-2519-21b9-39c2-b50c4d31e200.png)\n\n#### \u4e57\u7b97\n```\nImageChops.multiply(img, effect_img)\n```\n![8yo3kAAAAASUVORK5CYII=.png](https://qiita-image-store.s3.amazonaws.com/0/140075/4f2288f2-dbe2-9170-c1a6-7b29a98a72f1.png)\n\n#### \u30b9\u30af\u30ea\u30fc\u30f3\n```\nImageChops.screen(img, effect_img)\n```\n![P8BtLqhlqZTLrgAAAAASUVORK5CYII=.png](https://qiita-image-store.s3.amazonaws.com/0/140075/9d4f989f-cee7-a819-c8aa-f5cd19f5ba25.png)\n\n#### \u6bd4\u8f03\uff08\u660e\uff09\uff0f\u6bd4\u8f03\uff08\u6697\uff09\n```\nImageChops.lighter(img, effect_img)\nImageChops.darker(img, effect_img)\n```\n![X+81Pf98mz2EwAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/9ed4a37e-bb2f-e93e-5606-59ab936ccc93.png) ![wDMatqtY+79MgAAAABJRU5ErkJggg==.png](https://qiita-image-store.s3.amazonaws.com/0/140075/762c19be-c549-3900-de95-a9ec06907f2b.png)\n\n#### \u5dee\u306e\u7d76\u5bfe\u5024\n```python\nImageChops.difference(img, effect_img)\n```\n![diff.png](https://qiita-image-store.s3.amazonaws.com/0/140075/69d9c338-59ab-0ef1-c27a-0f12ea12b817.png)\n\n#### \u30aa\u30d5\u30bb\u30c3\u30c8\n```python\nImageChops.offset(img, 100, 100)\n```\n![offset.png](https://qiita-image-store.s3.amazonaws.com/0/140075/388aa659-b6ed-da57-bab9-b1f121b6ba54.png)\n\n## ImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\nImageChops\u306b\u306f\u306a\u3044\u63cf\u753b\u30e2\u30fc\u30c9\u306fImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u5b9f\u88c5\u3059\u308b\u3002\nImageMath\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u975e\u5e38\u306b\u30af\u30bb\u304c\u3042\u308b\u304c\u3001\u6163\u308c\u3066\u3057\u307e\u3048\u3070\u81ea\u7531\u306a\u753b\u50cf\u5909\u63db\u3092\u9ad8\u901f\u306b\u884c\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u70b9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n- \u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9Image\u306e\u307f\u6f14\u7b97\u53ef\u80fd\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9Image\u306fImage.split\u3067\u5206\u5272\u3059\u308b\n- float\u3067\u6f14\u7b97\u3082\u53ef\u80fd\u3060\u304c\u3001\u5024\u306e\u7bc4\u56f2\u306f0.0\uff5e1.0\u3067\u306f\u306a\u304f0.0\uff5e255.0\n- \u6f14\u7b97\u4e2d\u306eImage\u306fmode\u304c\"I\"(int)\u3001\u307e\u305f\u306f\"F\"(float)\u306b\u306a\u308b\u3001\u6700\u5f8c\u306bmode\u3092\"L\"\u306b\u30b3\u30f3\u30d0\u30fc\u30c8\u3059\u308b\n- \u5404\u7a2e\u6f14\u7b97(+,-,*,/,**,%)\u3092\u3059\u308b\u3054\u3068\u306b\u65b0\u3057\u3044Image\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n- \u6f14\u7b97\u306f\u30d4\u30af\u30bb\u30eb\u3054\u3068\u3067\u306f\u306a\u304fImage\u3054\u3068\u306b\u884c\u308f\u308c\u308b\u3002\n\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u3001R\u30d0\u30f3\u30c9\u306b\u5bfe\u3057\u3066\u6bd4\u8f03\uff08\u660e\uff09\u3092\u3059\u308b\u4f8b\u3067\u3042\u308b\u3002\n\n```python\nfrom PIL import ImageMath\n\nimg_r = img.split()[0]\neff_r = effect_img.split()[0]\n\nImageMath.eval(\"convert(max(a, b), 'L')\", a=img_r, b=eff_r)\n```\n![AX6XflESotN9AAAAAElFTkSuQmCC.png](https://qiita-image-store.s3.amazonaws.com/0/140075/137fde5e-6bba-0170-8780-749532bc46f2.png)\n\n\u7b49\u53f7\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3001\u305d\u306e\u5834\u5408\u306f\u5024\u304c0\u307e\u305f\u306f1\u306b\u306a\u308b\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f\u5024\u304c128\u4ee5\u4e0b\u306e\u30d4\u30af\u30bb\u30eb\u306b\u5024100\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n\n```python\nImageMath.eval(\"(a < 128) * 100\", a=img_r).convert(\"L\")\n```\n![fill.png](https://qiita-image-store.s3.amazonaws.com/0/140075/22ce2264-e1b5-c5c3-a63c-eb4c97452c4a.png)\n\nPython\u95a2\u6570\u547c\u3073\u51fa\u3057\u3082\u53ef\u80fd\u3060\u304c\u3001\u5f15\u6570\u3067\u6e21\u3055\u308c\u308bImage\u306f\u30d4\u30af\u30bb\u30eb\u306e\u6570\u5024\u3067\u306f\u306a\u304f\u6f14\u7b97\u30aa\u30d6\u30b8\u30a7\u30af\u30c8(ImageMath._Operand)\u3067\u3042\u308b\u3053\u3068\u306b\u7559\u610f\u3059\u3079\u3057\u3002\n\n \u6570\u5024\u3067\u306f\u306a\u3044\u305f\u3081\u30d4\u30af\u30bb\u30eb\u306e\u5024\u306b\u3088\u3063\u3066if\u6587\u3067\u51e6\u7406\u3092\u5206\u3051\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u3067\u3042\u308b\u3002 \u30d4\u30af\u30bb\u30eb\u306e\u5024\u306b\u3088\u3063\u3066\u51e6\u7406\u3092\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u30de\u30b9\u30af\u5408\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4ee5\u4e0b\u306f\u5024\u304c128\u4ee5\u4e0a\u3068\u4ee5\u4e0b\u3067\u51e6\u7406\u3092\u5206\u3051\u308b\u4f8b\u3067\u3042\u308b\u3002\n\n```python\ndef _threshold(a):\n    # \u5024\u304c128\u4ee5\u4e0b\u306a\u3089255\u3001128\u4ee5\u4e0a\u306a\u30891/2\u306b\u3059\u308b\n    div2 = a / 2 * (a >= 128)\n    white = (a < 128) * 255\n    return div2 + white\n\nImageMath.eval(\"func(a)\", a=img_r, func=_threshold).convert(\"L\")\n```\n![white.png](https://qiita-image-store.s3.amazonaws.com/0/140075/14c678c3-a074-1bab-9840-df4300439284.png)\n\n\u30b7\u30f3\u30b0\u30eb\u30d0\u30f3\u30c9\u3057\u304b\u6271\u3048\u306a\u3044\u306e\u3067\u3001\u30de\u30eb\u30c1\u30d0\u30f3\u30c9\u3092\u5206\u89e3\u3001\u51e6\u7406\u3001\u7d71\u5408\u3059\u308b\u4e00\u9023\u306e\u95a2\u6570\u3092\u4f5c\u6210\u3059\u308b\u3002\nfloat\u6f14\u7b97\u306e\u65b9\u304c\u81ea\u7531\u5ea6\u304c\u9ad8\u3044\u306e\u3067\u3001\u3064\u3044\u3067\u306bfloat\u306b\u5909\u63db\u3057\u3066\u304a\u304f\u3002\n\n```python\ndef _blend_f(bands1, bands2, func):\n    blend = \"convert(func(float(a), float(b)), 'L')\"\n    bands = [\n        ImageMath.eval(\n            blend,\n            a=a,\n            b=b,\n            func=func\n        )\n        for a, b in zip(bands1, bands2)\n    ]\n    return Image.merge(\"RGB\", bands)\n```\n\n\u4ee5\u4e0a\u3092\u8e0f\u307e\u3048\u3066\u3001\u8907\u96d1\u306a\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304f\u3002\n\n#### \u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\n```python\ndef _over_lay(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2 * (a + b - a * b / 255) - 255\n    return _cl * (a < 128) + _ch * (a >= 128)\n\n_blend_f(img.split(), effect_img.split(), _over_lay)\n```\n![overlay.png](https://qiita-image-store.s3.amazonaws.com/0/140075/570a1743-0fcc-4aa8-4a76-a469e6b00abf.png)\n\n#### \u30bd\u30d5\u30c8\u30e9\u30a4\u30c8\n```python\ndef _soft_light(a, b):\n    _cl = (a / 255) ** ((255 - b) / 128) * 255\n    _ch = (a / 255) ** (128 / b) * 255\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img.split(), effect_img.split(), _soft_light)\n```\n![softlight.png](https://qiita-image-store.s3.amazonaws.com/0/140075/2572e2bb-445d-f0dc-ee6d-dd533337bb4b.png)\n\n#### \u30cf\u30fc\u30c9\u30e9\u30a4\u30c8\n```python\ndef _hard_light(a, b):\n    _cl = 2 * a * b / 255\n    _ch = 2.0 * (a + b - a * b / 255.0) - 255.0\n    return _cl * (b < 128) + _ch * (b >= 128)\n\n_blend_f(img.split(), effect_img.split(), _hard_light)\n```\n![hardlight.png](https://qiita-image-store.s3.amazonaws.com/0/140075/a01426b8-a2f7-ec13-2c89-21d585f204dc.png)\n\n## \u51e6\u7406\u901f\u5ea6\u306b\u3064\u3044\u3066\n\u51e6\u7406\u901f\u5ea6\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b\u30aa\u30fc\u30d0\u30fc\u30ec\u30a4\u3092Image.putpixel\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u3002\n\n```python\ndef _put_pixel_overlay(a, b):\n    c = Image.new(a.mode, a.size)\n    for x in range(a.size[0]):\n        for y in range(b.size[1]):\n            cola = a.getpixel((x, y))\n            colb = b.getpixel((x, y))\n            \n            colc = [\n                _a * _b * 2 / 255 if _a < 128 else (2 *(_a + _b - _a * _b / 255) - 255)\n                for _a, _b in zip(cola, colb)\n            ]\n            c.putpixel((x, y), tuple(int(_) for _ in colc))\n    return c\n```\n\n\u5b9f\u884c\u901f\u5ea6\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```\n%timeit _put_pixel_overlay(img, effect_img)\n1 loop, best of 3: 663 ms per loop\n\n%timeit _blend_f(img.split(), effect_img.split(), _over_lay)\n100 loops, best of 3: 5.63 ms per loop\n```\n\nImageMath\u7248\u306e\u65b9\u304c100\u500d\u4ee5\u4e0a\u3001\u9ad8\u901f\u3067\u3042\u308b\u3002\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3057\u307e\u3057\u305f\n\nPhotoshop\u306e\u63cf\u753b\u30e2\u30fc\u30c9\u3092\u5b9f\u88c5\u3057\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a2\u30c3\u30d7\u3057\u307e\u3057\u305f\u3002\n\nhttps://github.com/pashango2/Image4Layer\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306fpip\u3067\u7c21\u5358\u306b\u884c\u306a\u3048\u307e\u3059\u3002\n\n```\npip install image4layer\n```\n\n# \u6700\u5f8c\u306b\n\u5df7\u306ePIL\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u308b\u3068Image.getpixel/putpixel\u3092\u4f7f\u7528\u3059\u308b\u5834\u9762\u304c\u6563\u898b\u3055\u308c\u308b\u3002\n\nImage.getpixel/putpixel\u306f\u753b\u50cf\u4f5c\u6210\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u753b\u50cf\u5909\u63db\u3067\u4f7f\u7528\u3059\u308b\u306e\u306f\u6700\u7d42\u624b\u6bb5\u3067\u3042\u308b\u3002\nnumpy\u3092\u4f7f\u7528\u3057\u3066\u753b\u50cf\u5909\u63db\u3092\u3059\u308b\u4f8b\u3082\u3042\u308b\u304c\u3001\u3084\u306f\u308aPIL\u306e\u307f\u306e\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u5b9f\u88c5\u306f\u9b45\u529b\u7684\u3067\u3042\u308b\u3002\nPIL\u306f\u30b3\u30f3\u30d1\u30af\u30c8\u306a\u304c\u3089\u3001\u975e\u5e38\u306b\u5f37\u529b\u3067\u9ad8\u901f\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\n\u826f\u3044PIL\u30e9\u30a4\u30d5\u3092\u3002\n", "tags": ["Python", "pillow", "\u753b\u50cf\u51e6\u7406", "PIL"]}