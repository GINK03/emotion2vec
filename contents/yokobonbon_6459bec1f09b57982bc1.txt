{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSpring Framework\u306b\u306fSpring Security\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u3001\u8a8d\u8a3c\u3084\u8a8d\u53ef\u306a\u3069\u306e\u4ed5\u7d44\u307f\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001Spring Security\u3092\u7528\u3044\u3066\u3001\u30e6\u30fc\u30b6\u8a8d\u8a3c\u3092\u884c\u3046\u4f8b\u3092\u5b9f\u73fe\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://projects.spring.io/spring-security/\nSpring Framework\u306e\u57fa\u672c\u3092\u3054\u5b58\u77e5\u306a\u3044\u65b9\u306f\u3001\u3053\u306e\u8a18\u4e8b\u306e\u524d\u306b\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u76ee\u3092\u901a\u3057\u3066\u304a\u3044\u3066\u9802\u3051\u308b\u3068\u5f8c\u306e\u8a18\u4e8b\u304c\u5e7e\u5206\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://qiita.com/yokobonbon/items/c0c6f8d9e7b80afdf986\n\nSpring Security\u6700\u521d\u306e\u4e00\u6b69\n\u307e\u305a\u3001build.gradle\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001Spring Security\u3092\u4f7f\u7528\u53ef\u80fd\u3068\u3057\u307e\u3059\u3002\ndependencies {\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"org.springframework.boot:spring-boot-starter-security\")\n    compile(\"org.springframework.boot:spring-boot-starter-freemarker\")\n}\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u63d0\u4f9b\u3059\u308b\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u6642\u306bID, Password\u3092\u6c42\u3081\u308b\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3068\u3066\u3082\u7c21\u5358\u3067\u3001@EnableWebSecurity\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aSecurityConfig\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u826f\u3044\u3060\u3051\u3067\u3059\u3002 \u4ee5\u4e0b\u306f\u3001ID:user, Password:password\u3092\u6c42\u3081\u308b\u4f8b\u3067\u3059\uff08\u5168\u3066\u306e\u30da\u30fc\u30b8\u306b\u5bfe\u3057\u3066)\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n}\n\nLogin\u30da\u30fc\u30b8\u306e\u8a18\u8ff0\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001Spring Security\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001ID, Password\u3092\u6c42\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\nID, Password\u3092\u9593\u9055\u3063\u305f\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u3082\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n\u30ed\u30b0\u30a4\u30f3\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\n\u5148\u307b\u3069\u306fSpring Security\u304c\u4f5c\u6210\u3057\u3066\u304f\u308c\u308b\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ed\u30b0\u30a4\u30f3UI\u3092\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u6b21\u306f\u3001\u81ea\u524d\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u8a2d\u5b9a\u3082\u884c\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a2d\u5b9a\u306b\u306f\u3001HttpSecurity\u30af\u30e9\u30b9\u3092\u7528\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fSecurityConfig\u30af\u30e9\u30b9\u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u4e0b\u3055\u3044\u3002@Override\u3067\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001configure\u30e1\u30bd\u30c3\u30c9\u306f\u3001WebSecurityConfigurerAdapter\u30af\u30e9\u30b9\u306b\u542b\u307e\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests().anyRequest().authenticated()\n                .and()\n                .formLogin().loginPage(\"/login\").failureUrl(\"/login?error\").permitAll()\n                .and()\n                .logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\");\n    }\n\n\u307e\u305a\u4e00\u884c\u76ee\u306ehttp.authorizedRequests().anyRequest().authenticated()\u3067\u539f\u5247\u3001\u30da\u30fc\u30b8\u306e\u30a2\u30af\u30bb\u30b9\u306b\u8a8d\u8a3c\u304c\u5fc5\u8981\u3068\u3044\u3046\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306b .formLogin().loginPage(\"/login).failureUrl(\"login?error\").permitAll()\u3067\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u304c\u3053\u308c\u304b\u3089\u7528\u610f\u3059\u308b/login\u30da\u30fc\u30b8\u3067\u3042\u308b\u3053\u3068\u3001\u5931\u6557\u6642\u306f/login?error\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3001\u305d\u3057\u3066\u3053\u306e\u30da\u30fc\u30b8\u306b\u95a2\u3057\u3066\u306f\u8a8d\u8a3c\u306a\u3057\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b.logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\")\u3067\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u305f\u3081\u306e\u30d1\u30b9\u304c/logout\u3067\u3042\u308a\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u7d42\u4e86\u5f8c\u306b/login\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306b/login\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306eController\u306e\u8a18\u8ff0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nLoginController.java\n@Controller\npublic class LoginController {\n    @RequestMapping(value = \"/login\", method = RequestMethod.GET)\n    public ModelAndView showLoginPage(@RequestParam Optional<String> error) {\n        return new ModelAndView(\"login\", \"error\", error);\n    }\n}\n\nModelAndView\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5148\u307b\u3069\u306e\u8a2d\u5b9a\u3067ID, Password\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306b/login?error\u306b\u9077\u79fb\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6642\u306b?error\u306e\u90e8\u5206\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u53d7\u3051\u3066\u3001\u305d\u308c\u3092\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306eUI\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u6b21\u306bUsername, Password\u3092\u5165\u529b\u3059\u308bLogin\u30da\u30fc\u30b8\u3067\u3059\u3002\nlogin.ftl\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Hello Spring</title>\n    </head>\n    <body>\n        <h1> My Login Page </h1>\n        <form role=\"form\" action=\"/login\" method=\"post\">\n            <div>\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\"/>\n            </div>\n            <div>\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\"/>\n            </div>\n            <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n            <button type=\"submit\" class=\"btn\">Log in</button>\n        </form>\n        <#if error.isPresent()>\n            <p>The username or password you have entered is invalid, try again.</p>\n        </#if>\n    </body>\n</html>\n\nform\u3067\u6307\u5b9a\u3057\u3066\u3044\u308busername, password\u306fSpring Security\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u3067\u3059\u3002\u3053\u308c\u4ee5\u5916\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u5148\u307b\u3069\u306eHttpSecurity\u306e\u8a2d\u5b9a\u3092\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002(\u4ee5\u4e0b\u306e\u4f8b\u306f\u3001username\u3092email\u306b\u3057\u305f\u3044\u5834\u5408\u3002\n.usernameParameter(\"email\")\n\n<#if error.isPresent()>\u306e\u90e8\u5206\u3067\u3001/login?error\u3067\u8d77\u52d5\u3055\u308c\u305f\u5834\u5408\u306f\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3059\u3002\n\u6700\u5f8c\u306bWeb App\u306e/\u306b\u3042\u305f\u308bindex.ftl\u306bLogout\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nindex.ftl\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Hello Spring</title>\n    </head>\n    <body>\n        <h1> Welcome To Top Page </h1>\n        <form action=\"/logout\" method=\"post\">\n            <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n            <button type=\"submit\">Log out</button>\n        </form>\n    </body>\n</html>\n\nform\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3067/logout\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067/logout\u51e6\u7406\u304c\u306a\u3055\u308c\u307e\u3059\n\n\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u753b\u9762\u9077\u79fb\n\u4ee5\u4e0b\u6b63\u5e38\u30b1\u30fc\u30b9\u306e\u5834\u5408\u3067\u3059\u3002\u30ed\u30b0\u30a4\u30f3 -> \u30db\u30fc\u30e0 -> \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u623b\u308b\u3067\u3059\nhttp://localhost:8080/login\n\nhttp://localhost:8080\n\nLog out\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u623b\u308b\nhttp://localhost:8080/login\n\nusername, password\u3092\u9593\u9055\u3048\u308b\u3068\n\nhttp://localhost:8080/login?error \u306b\u9077\u79fb\u3059\u308b\n\n\n\u30ed\u30fc\u30eb\u306b\u3088\u308b\u5236\u5fa1\n\u5148\u307b\u3069\u306eHttpSecurity\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u5168\u3066\u306e\u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\u304c\u5747\u4e00\u3067\u3057\u305f\u3002HttpSecurity\u3067\u306f\u3001\u30e6\u30fc\u30b6\u306e\u30ed\u30fc\u30eb\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30da\u30fc\u30b8\u306e\u5909\u66f4\u304c\u53ef\u80fd\u3067\u3059\u3002\u4ee3\u8868\u7684\u306a\u3068\u3053\u308d\u3067\u306f\u3001Administrator\u306e\u307f\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305a\u30ed\u30fc\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\uff08\u3053\u308c\u306f\u4fbf\u5b9c\u4e0aEnum\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u6700\u7d42\u7684\u306b\u6587\u5b57\u5217\u306b\u306a\u308c\u3070\u4f55\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\uff09\npublic enum Role {\n    USER, ADMIN\n}\n\u5148\u307b\u3069\u306eSecurityConfig\u306badmin\u30e6\u30fc\u30b6\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3057\u307e\u3059\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(Role.USER.name())\n                .and()\n                .withUser(\"admin\").password(\"admin\").roles(Role.USER.name(), Role.ADMIN.name());\n    }\n\n\u305d\u3057\u3066\u3001/admin\u30da\u30fc\u30b8\u306fADMIN\u30ed\u30fc\u30eb\u3092\u6301\u3064\u30e6\u30fc\u30b6\u306e\u307f\u306bhasRole()\u95a2\u6570\u3092\u7528\u3044\u3066\u884c\u3044\u307e\u3059\u3002\u307e\u305f/\u30da\u30fc\u30b8\u306fUSER\u30ed\u30fc\u30eb\u3067\u3082\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3068\u3057\u307e\u3059\u3002admin\u30e6\u30fc\u30b6\u306fUSER\u30ed\u30fc\u30eb\u3082\u6301\u3061\u307e\u3059\u306e\u3067\u3001/\u306b\u30a2\u30af\u30bb\u30b9\u3082\u53ef\u80fd\u3067\u3059\u3002\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(\"/admin\").hasRole(Role.ADMIN.name())\n                .antMatchers(\"/\").hasRole(Role.USER.name())\n                .and()\n                .formLogin().loginPage(\"/login\").failureUrl(\"/login?error\").permitAll()\n                .and()\n                .logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\");\n    }\n\n# \u306f\u3058\u3081\u306b\nSpring Framework\u306b\u306fSpring Security\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308a\u3001\u8a8d\u8a3c\u3084\u8a8d\u53ef\u306a\u3069\u306e\u4ed5\u7d44\u307f\u3092\u7c21\u5358\u306b\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u3001Spring Security\u3092\u7528\u3044\u3066\u3001\u30e6\u30fc\u30b6\u8a8d\u8a3c\u3092\u884c\u3046\u4f8b\u3092\u5b9f\u73fe\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nhttp://projects.spring.io/spring-security/\n\nSpring Framework\u306e\u57fa\u672c\u3092\u3054\u5b58\u77e5\u306a\u3044\u65b9\u306f\u3001\u3053\u306e\u8a18\u4e8b\u306e\u524d\u306b\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u76ee\u3092\u901a\u3057\u3066\u304a\u3044\u3066\u9802\u3051\u308b\u3068\u5f8c\u306e\u8a18\u4e8b\u304c\u5e7e\u5206\u8aad\u307f\u3084\u3059\u304f\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nhttp://qiita.com/yokobonbon/items/c0c6f8d9e7b80afdf986\n\n# Spring Security\u6700\u521d\u306e\u4e00\u6b69\n\u307e\u305a\u3001build.gradle\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001Spring Security\u3092\u4f7f\u7528\u53ef\u80fd\u3068\u3057\u307e\u3059\u3002\n\n```java\ndependencies {\n    compile(\"org.springframework.boot:spring-boot-starter-web\")\n    compile(\"org.springframework.boot:spring-boot-starter-security\")\n    compile(\"org.springframework.boot:spring-boot-starter-freemarker\")\n}\n```\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u63d0\u4f9b\u3059\u308b\u30da\u30fc\u30b8\u306b\u30a2\u30af\u30bb\u30b9\u6642\u306bID, Password\u3092\u6c42\u3081\u308b\u5b9f\u88c5\u3092\u884c\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3068\u3066\u3082\u7c21\u5358\u3067\u3001@EnableWebSecurity\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u52a0\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306aSecurityConfig\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3059\u308c\u3070\u826f\u3044\u3060\u3051\u3067\u3059\u3002 \u4ee5\u4e0b\u306f\u3001ID:user, Password:password\u3092\u6c42\u3081\u308b\u4f8b\u3067\u3059\uff08\u5168\u3066\u306e\u30da\u30fc\u30b8\u306b\u5bfe\u3057\u3066)\n\n```java\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n}\n```\n\nLogin\u30da\u30fc\u30b8\u306e\u8a18\u8ff0\u306f\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001Spring Security\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3001ID, Password\u3092\u6c42\u3081\u3066\u304f\u308c\u307e\u3059\u3002\n\n<img width=\"292\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 11.47.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/c955524b-699d-7d8b-3395-4f916a8e1bd3.png\">\n\nID, Password\u3092\u9593\u9055\u3063\u305f\u5834\u5408\u306f\u3001\u30a8\u30e9\u30fc\u3082\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n<img width=\"316\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 11.49.27.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/9e9fa804-6537-7761-02f0-3129a9d5c616.png\">\n\n# \u30ed\u30b0\u30a4\u30f3\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\n\u5148\u307b\u3069\u306fSpring Security\u304c\u4f5c\u6210\u3057\u3066\u304f\u308c\u308b\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u5b9f\u969b\u306e\u30b1\u30fc\u30b9\u3067\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30ed\u30b0\u30a4\u30f3UI\u3092\u4f7f\u3046\u3053\u3068\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u6b21\u306f\u3001\u81ea\u524d\u306e\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u4f7f\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\u307e\u305f\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u8a2d\u5b9a\u3082\u884c\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u8a2d\u5b9a\u306b\u306f\u3001HttpSecurity\u30af\u30e9\u30b9\u3092\u7528\u3044\u307e\u3059\u3002\u5148\u307b\u3069\u4f5c\u6210\u3057\u305fSecurityConfig\u30af\u30e9\u30b9\u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u4e0b\u3055\u3044\u3002@Override\u3067\u8a18\u8ff0\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u3001configure\u30e1\u30bd\u30c3\u30c9\u306f\u3001WebSecurityConfigurerAdapter\u30af\u30e9\u30b9\u306b\u542b\u307e\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\n```java\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests().anyRequest().authenticated()\n                .and()\n                .formLogin().loginPage(\"/login\").failureUrl(\"/login?error\").permitAll()\n                .and()\n                .logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\");\n    }\n```\n\n\u307e\u305a\u4e00\u884c\u76ee\u306ehttp.authorizedRequests().anyRequest().authenticated()\u3067\u539f\u5247\u3001\u30da\u30fc\u30b8\u306e\u30a2\u30af\u30bb\u30b9\u306b\u8a8d\u8a3c\u304c\u5fc5\u8981\u3068\u3044\u3046\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b .formLogin().loginPage(\"/login).failureUrl(\"login?error\").permitAll()\u3067\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u304c\u3053\u308c\u304b\u3089\u7528\u610f\u3059\u308b/login\u30da\u30fc\u30b8\u3067\u3042\u308b\u3053\u3068\u3001\u5931\u6557\u6642\u306f/login?error\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3001\u305d\u3057\u3066\u3053\u306e\u30da\u30fc\u30b8\u306b\u95a2\u3057\u3066\u306f\u8a8d\u8a3c\u306a\u3057\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6700\u5f8c\u306b.logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\")\u3067\u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u5b9f\u65bd\u3059\u308b\u305f\u3081\u306e\u30d1\u30b9\u304c/logout\u3067\u3042\u308a\u3001\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u7d42\u4e86\u5f8c\u306b/login\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3059\u308b\u3053\u3068\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306b/login\u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306eController\u306e\u8a18\u8ff0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nLoginController.java\n\n```java\n@Controller\npublic class LoginController {\n    @RequestMapping(value = \"/login\", method = RequestMethod.GET)\n    public ModelAndView showLoginPage(@RequestParam Optional<String> error) {\n        return new ModelAndView(\"login\", \"error\", error);\n    }\n}\n```\n\nModelAndView\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u5148\u307b\u3069\u306e\u8a2d\u5b9a\u3067ID, Password\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u306b/login?error\u306b\u9077\u79fb\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u305d\u306e\u6642\u306b?error\u306e\u90e8\u5206\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u53d7\u3051\u3066\u3001\u305d\u308c\u3092\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306eUI\u306b\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6b21\u306bUsername, Password\u3092\u5165\u529b\u3059\u308bLogin\u30da\u30fc\u30b8\u3067\u3059\u3002\n\nlogin.ftl\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Hello Spring</title>\n    </head>\n    <body>\n        <h1> My Login Page </h1>\n        <form role=\"form\" action=\"/login\" method=\"post\">\n            <div>\n                <label for=\"username\">Username</label>\n                <input type=\"text\" id=\"username\" name=\"username\"/>\n            </div>\n            <div>\n                <label for=\"password\">Password</label>\n                <input type=\"password\" id=\"password\" name=\"password\"/>\n            </div>\n            <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n            <button type=\"submit\" class=\"btn\">Log in</button>\n        </form>\n        <#if error.isPresent()>\n            <p>The username or password you have entered is invalid, try again.</p>\n        </#if>\n    </body>\n</html>\n```\n\nform\u3067\u6307\u5b9a\u3057\u3066\u3044\u308busername, password\u306fSpring Security\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u5909\u6570\u3067\u3059\u3002\u3053\u308c\u4ee5\u5916\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u5148\u307b\u3069\u306eHttpSecurity\u306e\u8a2d\u5b9a\u3092\u3057\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002(\u4ee5\u4e0b\u306e\u4f8b\u306f\u3001username\u3092email\u306b\u3057\u305f\u3044\u5834\u5408\u3002\n\n```java\n.usernameParameter(\"email\")\n```\n\n<#if error.isPresent()>\u306e\u90e8\u5206\u3067\u3001/login?error\u3067\u8d77\u52d5\u3055\u308c\u305f\u5834\u5408\u306f\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u307e\u3059\u3002\n\n\u6700\u5f8c\u306bWeb App\u306e/\u306b\u3042\u305f\u308bindex.ftl\u306bLogout\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nindex.ftl\n\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Hello Spring</title>\n    </head>\n    <body>\n        <h1> Welcome To Top Page </h1>\n        <form action=\"/logout\" method=\"post\">\n            <input type=\"hidden\" name=\"${_csrf.parameterName}\" value=\"${_csrf.token}\"/>\n            <button type=\"submit\">Log out</button>\n        </form>\n    </body>\n</html>\n```\n\nform\u306e\u30a2\u30af\u30b7\u30e7\u30f3\u3067/logout\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067/logout\u51e6\u7406\u304c\u306a\u3055\u308c\u307e\u3059\n\n# \u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u753b\u9762\u9077\u79fb\n\u4ee5\u4e0b\u6b63\u5e38\u30b1\u30fc\u30b9\u306e\u5834\u5408\u3067\u3059\u3002\u30ed\u30b0\u30a4\u30f3 -> \u30db\u30fc\u30e0 -> \u30ed\u30b0\u30a4\u30f3\u753b\u9762\u306b\u623b\u308b\u3067\u3059\n\nhttp://localhost:8080/login\n<img width=\"253\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 23.09.13.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/3091c201-0b12-db47-7582-0863650a1c90.png\">\n\nhttp://localhost:8080\n<img width=\"307\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 23.09.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/b4c95063-477a-2a26-087e-4723d271ecea.png\">\n\nLog out\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u623b\u308b\nhttp://localhost:8080/login\n<img width=\"217\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 23.09.36.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/a090e7d3-b71f-cb3e-d775-bb9374f139e4.png\">\n\nusername, password\u3092\u9593\u9055\u3048\u308b\u3068\n<img width=\"209\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 23.09.49.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/75c72ef4-ada1-4037-1357-94e49afa18bc.png\">\n\nhttp://localhost:8080/login?error \u306b\u9077\u79fb\u3059\u308b\n<img width=\"419\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-02-15 23.09.55.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/85182/415cd992-eab0-daa1-f16a-784b08d7a483.png\">\n\n# \u30ed\u30fc\u30eb\u306b\u3088\u308b\u5236\u5fa1\n\u5148\u307b\u3069\u306eHttpSecurity\u306e\u8a2d\u5b9a\u3067\u306f\u3001\u5168\u3066\u306e\u30da\u30fc\u30b8\u306e\u8a2d\u5b9a\u304c\u5747\u4e00\u3067\u3057\u305f\u3002HttpSecurity\u3067\u306f\u3001\u30e6\u30fc\u30b6\u306e\u30ed\u30fc\u30eb\u306b\u3088\u3063\u3066\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30da\u30fc\u30b8\u306e\u5909\u66f4\u304c\u53ef\u80fd\u3067\u3059\u3002\u4ee3\u8868\u7684\u306a\u3068\u3053\u308d\u3067\u306f\u3001Administrator\u306e\u307f\u304c\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u30da\u30fc\u30b8\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u304c\u3042\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u30ed\u30fc\u30eb\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\uff08\u3053\u308c\u306f\u4fbf\u5b9c\u4e0aEnum\u306b\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u6700\u7d42\u7684\u306b\u6587\u5b57\u5217\u306b\u306a\u308c\u3070\u4f55\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\uff09\n\npublic enum Role {\n    USER, ADMIN\n}\n\n\u5148\u307b\u3069\u306eSecurityConfig\u306badmin\u30e6\u30fc\u30b6\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8ffd\u52a0\u3057\u307e\u3059\n\n```java\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(Role.USER.name())\n                .and()\n                .withUser(\"admin\").password(\"admin\").roles(Role.USER.name(), Role.ADMIN.name());\n    }\n```\n\n\u305d\u3057\u3066\u3001/admin\u30da\u30fc\u30b8\u306fADMIN\u30ed\u30fc\u30eb\u3092\u6301\u3064\u30e6\u30fc\u30b6\u306e\u307f\u306bhasRole()\u95a2\u6570\u3092\u7528\u3044\u3066\u884c\u3044\u307e\u3059\u3002\u307e\u305f/\u30da\u30fc\u30b8\u306fUSER\u30ed\u30fc\u30eb\u3067\u3082\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u3068\u3057\u307e\u3059\u3002admin\u30e6\u30fc\u30b6\u306fUSER\u30ed\u30fc\u30eb\u3082\u6301\u3061\u307e\u3059\u306e\u3067\u3001/\u306b\u30a2\u30af\u30bb\u30b9\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```java\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(\"/admin\").hasRole(Role.ADMIN.name())\n                .antMatchers(\"/\").hasRole(Role.USER.name())\n                .and()\n                .formLogin().loginPage(\"/login\").failureUrl(\"/login?error\").permitAll()\n                .and()\n                .logout().logoutUrl(\"/logout\").logoutSuccessUrl(\"/login\");\n    }\n```\n", "tags": ["Java", "spring-boot", "spring", "freemarker", "spring-security"]}