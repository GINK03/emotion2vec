{"context": "\u524d v3.12.0 | \u6b21 v3.14.0\n\nESLint v3.13.0 has been released: https://t.co/HcvHViG8Ih\u2014 ESLint (@geteslint) 2017\u5e741\u67086\u65e5\n\nESLint 3.13.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u8ffd\u52a0\u30fb\u30d0\u30b0\u4fee\u6b63\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\u8cea\u554f\u3084\u30d0\u30b0\u5831\u544a\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u304a\u6c17\u8efd\u306b\u3053\u3061\u3089\u307e\u3067\u304a\u5bc4\u305b\u304f\u3060\u3055\u3044\u3002\n\n\n \u65e5\u672c\u8a9e Issue \u7ba1\u7406\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\n \u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8\n\n\n \u672c\u5bb6\u30ea\u30dd\u30b8\u30c8\u30ea\n\n\n \u672c\u5bb6\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8\n\n\n\n\n \u65b0\u3057\u3044\u30eb\u30fc\u30eb\n\n#6053: prefer-destructuring\n\n JSCS \u4e92\u63db\u30eb\u30fc\u30eb\u3067\u3059\u3002\n\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4ee3\u5165\u3059\u308b\u969b\u306b\u5206\u5272\u4ee3\u5165 (Destructuring Declarations/Assignments) \u3092\u512a\u5148\u3057\u3066\u4f7f\u304a\u3046\u3001\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u30fb\u30eb\u30fc\u30eb\u3067\u3059\u3002\n\n\u4f8b\n/*eslint prefer-destructuring: error */\n\n//\u2714 GOOD\nconst {foo, bar} = obj\n\n//\u2718 BAD\nconst foo = obj.foo\nconst bar = obj.bar\n\n\n\n \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30eb\n\n#7564: object-shorthand avoidExplicitReturnArrows\n\u95a2\u6570\u672c\u6587\u304c\u30d6\u30ed\u30c3\u30af\u3067\u3042\u308b\u30a2\u30ed\u30fc\u95a2\u6570\u3082\u30e1\u30bd\u30c3\u30c9\u8a18\u6cd5\u3067\u66f8\u304f\u3079\u3057\u3001\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u4f8b\n/*eslint object-shorthand: [error, always, {avoidExplicitReturnArrows: true}] */\n\n//\u2714 GOOD\nconst a = {\n    foo() {\n        // do something.\n    },\n    bar: () => doSomething(),\n}\n\n//\u2718 BAD\nconst b = {\n    foo: () => {\n        // do something.\n    },\n}\n\n\n\n eslint --fix \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u30eb\u30fc\u30eb\n\n#7540: no-unneeded-ternary\n\n\n\u4f8b\nconst foo = bar === 1 ? true : false\nconst baz = qux ? qux : boop\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nconst foo = bar === 1\nconst baz = qux || boop\n\n\n\n#7702: operator-linebreak\n\n\n\u4f8b\nfoo\n  && bar;\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nfoo &&\n  bar\n\n\n\n#7740: object-property-newline\n\n\n\u4f8b\nconst w = {x,\n    y, z\n}\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nconst w = {\n    x,\n    y,\n    z\n}\n\n\n\n#7840: no-extra-label\n\n\n\u4f8b\nA: while (true) {\n    doSomething()\n    break A\n}\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nwhile (true) {\n    doSomething()\n    break\n}\n\n\n\u524d [v3.12.0] | \u6b21 [v3.14.0]\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"en\" dir=\"ltr\">ESLint v3.13.0 has been released: <a href=\"https://t.co/HcvHViG8Ih\">https://t.co/HcvHViG8Ih</a></p>&mdash; ESLint (@geteslint) <a href=\"https://twitter.com/geteslint/status/817474123345592321\">2017\u5e741\u67086\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nESLint 3.13.0 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002\n\u3044\u304f\u3064\u304b\u306e\u6a5f\u80fd\u8ffd\u52a0\u30fb\u30d0\u30b0\u4fee\u6b63\u304c\u884c\u308f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u8cea\u554f\u3084\u30d0\u30b0\u5831\u544a\u7b49\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u304a\u6c17\u8efd\u306b\u3053\u3061\u3089\u307e\u3067\u304a\u5bc4\u305b\u304f\u3060\u3055\u3044\u3002\n\n- :globe_with_meridians: [\u65e5\u672c\u8a9e Issue \u7ba1\u7406\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/eslint/eslint-jp)\n- :speech_balloon: [\u65e5\u672c\u8a9e\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8](https://gitter.im/eslint/eslint-jp)\n- :globe_with_meridians: [\u672c\u5bb6\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/eslint/eslint)\n- :speech_balloon: [\u672c\u5bb6\u30b5\u30dd\u30fc\u30c8 \u30c1\u30e3\u30c3\u30c8](https://gitter.im/eslint/eslint)\n\n----\n\n# :bulb: \u65b0\u3057\u3044\u30eb\u30fc\u30eb\n\n## [#6053]: [prefer-destructuring]\n\n![JSCS Icon](http://jscs.info/favicon.ico) JSCS \u4e92\u63db\u30eb\u30fc\u30eb\u3067\u3059\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u306b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4ee3\u5165\u3059\u308b\u969b\u306b\u5206\u5272\u4ee3\u5165 (Destructuring Declarations/Assignments) \u3092\u512a\u5148\u3057\u3066\u4f7f\u304a\u3046\u3001\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u30fb\u30eb\u30fc\u30eb\u3067\u3059\u3002\n\n```js:\u4f8b\n/*eslint prefer-destructuring: error */\n\n//\u2714 GOOD\nconst {foo, bar} = obj\n\n//\u2718 BAD\nconst foo = obj.foo\nconst bar = obj.bar\n```\n\n# :wrench: \u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u30eb\u30fc\u30eb\n\n## [#7564]: [object-shorthand] avoidExplicitReturnArrows\n\n\u95a2\u6570\u672c\u6587\u304c\u30d6\u30ed\u30c3\u30af\u3067\u3042\u308b\u30a2\u30ed\u30fc\u95a2\u6570\u3082\u30e1\u30bd\u30c3\u30c9\u8a18\u6cd5\u3067\u66f8\u304f\u3079\u3057\u3001\u3068\u3044\u3046\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\n```js:\u4f8b\n/*eslint object-shorthand: [error, always, {avoidExplicitReturnArrows: true}] */\n\n//\u2714 GOOD\nconst a = {\n    foo() {\n        // do something.\n    },\n    bar: () => doSomething(),\n}\n\n//\u2718 BAD\nconst b = {\n    foo: () => {\n        // do something.\n    },\n}\n```\n\n# :pencil: `eslint --fix` \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u305f\u30eb\u30fc\u30eb\n\n## [#7540]: [no-unneeded-ternary]\n\n```js:\u4f8b\nconst foo = bar === 1 ? true : false\nconst baz = qux ? qux : boop\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nconst foo = bar === 1\nconst baz = qux || boop\n```\n\n## [#7702]: [operator-linebreak]\n\n```js:\u4f8b\nfoo\n  && bar;\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nfoo &&\n  bar\n```\n\n## [#7740]: [object-property-newline]\n\n```js:\u4f8b\nconst w = {x,\n    y, z\n}\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nconst w = {\n    x,\n    y,\n    z\n}\n```\n\n## [#7840]: [no-extra-label]\n\n```js:\u4f8b\nA: while (true) {\n    doSomething()\n    break A\n}\n\n// \u2193\u2193\u2193 gets fixed to \u2193\u2193\u2193\n\nwhile (true) {\n    doSomething()\n    break\n}\n```\n\n[v3.12.0]: http://qiita.com/mysticatea/items/c8fd8ddca83093dab573\n[v3.14.0]: http://qiita.com/mysticatea/items/82a6686cd9550dc010d5\n[#6053]: https://github.com/eslint/eslint/issues/6053\n[#7540]: https://github.com/eslint/eslint/issues/7540\n[#7564]: https://github.com/eslint/eslint/issues/7564\n[#7702]: https://github.com/eslint/eslint/issues/7702\n[#7740]: https://github.com/eslint/eslint/issues/7740\n[#7840]: https://github.com/eslint/eslint/issues/7840\n[#9999]: https://github.com/eslint/eslint/issues/9999\n[no-extra-label]: http://eslint.org/docs/rules/no-extra-label\n[no-unneeded-ternary]: http://eslint.org/docs/rules/no-unneeded-ternary\n[object-property-newline]: http://eslint.org/docs/rules/object-property-newline\n[object-shorthand]: http://eslint.org/docs/rules/object-shorthand\n[operator-linebreak]: http://eslint.org/docs/rules/operator-linebreak\n[prefer-destructuring]: http://eslint.org/docs/rules/prefer-destructuring\n[xxxx]: http://eslint.org/docs/rules/xxxx\n\n\n", "tags": ["ESLint", "JavaScript", "Node.js"]}