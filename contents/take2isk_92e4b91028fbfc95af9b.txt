{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u30c4\u30a4\u30fc\u30c8\u306b\u969b\u3057\u3066\u306f\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u53d6\u5f97\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nRuby\u3067gem\u3092\u4f7f\u308f\u305a\u306b\u3001twitter\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u203b\u3042\u304f\u307e\u3067\u52d5\u304b\u3059\u3088\u3046\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u30b9\u30c6\u30fc\u30bf\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u304d\u3061\u3093\u3068\u3084\u3063\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\u203b\u4eca\u56de\u306f\u884c\u3063\u3066\u307e\u305b\u3093\u304c\u3001\u6295\u7a3f\u306e\u969b\u3001\u6587\u5b57\u9577\u306e\u30c1\u30a7\u30c3\u30af\u304c\u672c\u6765\u5fc5\u8981\u3067\u3059\u3002\n\u203btwitter\u306e\u4ed5\u69d8\u3067\u9023\u7d9a\u3057\u3066\u540c\u3058\u5185\u5bb9\u306e\u6295\u7a3f\u306f\u3067\u304d\u307e\u305b\u3093\u3002\uff08403\u304c\u5e30\u3063\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u304b\u3063\u305f\u304b\u306a\uff1f\uff09\n\npost_tweet.rb\n\n  def post_tweet\n    #\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\n    oauth_token = \"194485223--oauth_token --ynck19\"\n    #\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\n    oauth_token_secret = \"BopAEWj--oauth_token_secret--DKy2iei\"\n    res = post_time_line(oauth_token, oauth_token_secret)\n\u3000\u3000#\u753b\u9762\u306b\u6295\u7a3f\u6587\u304c\u8868\u793a\u3055\u308c\u308b\n    render text: res[\"text\"]\n  end\n\n  def post_time_line(oauth_token, oauth_token_secret)\n    api_key = 'hogehogehogehoge'\n    api_secret = 'fugofugofugofugo'\n    post_params = {\n      ## \u30c1\u30eb\u30c0\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3089\u3057\u3044\n      ##ERB::Util\u306f~\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u2192RFC3986\u3060\u3068\u3057\u306a\u3044\u306e\u304c\u6b63\u3057\u3044\n      \"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")\n    }\n    oauth_params = {\n        \"oauth_consumer_key\" => URI.escape(api_key),\n        \"oauth_nonce\" => URI.escape(SecureRandom.uuid),\n        \"oauth_signature_method\" => URI.escape('HMAC-SHA1'), \n        \"oauth_timestamp\" => URI.escape(Time.now.to_i.to_s),\n        \"oauth_token\" => oauth_token,\n        \"oauth_version\" => URI.escape('1.0')\n    }\n    params = post_params.merge(oauth_params)\n    signature_key = \"#{URI.escape(api_secret)}&#{URI.escape(oauth_token_secret)}\"\n    method = 'POST'\n    request_url = \"https://api.twitter.com/1.1/statuses/update.json\"\n    request_params  = sort_and_concat(params, \"&\")\n    ## \u30c1\u30eb\u30c0\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3089\u3057\u3044\n    signature_data = \"#{URI.escape(method)}&#{escape(request_url)}&#{escape(request_params).gsub(\"%7E\", \"~\")}\"\n    hash = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, signature_key, signature_data)\n    signature = escape(Base64.urlsafe_encode64(hash))\n    params[\"oauth_signature\"] = signature\n    header_params = sort_and_concat(params, ',')\n    twitter_uri = URI.parse(request_url)\n    https = Net::HTTP.new(twitter_uri.host, twitter_uri.port)\n    https.use_ssl = true\n    https.verify_mode =  OpenSSL::SSL::VERIFY_NONE\n    req = Net::HTTP::Post.new(twitter_uri)\n    req[\"Authorization\"] = \"OAuth #{header_params}\"\n    https.set_debug_output $stderr\n    res = https.request(req, body = sort_and_concat(post_params, '&'))\n    json = JSON.parse(res.body)\n    return json\n  end\n\n  def sort_and_concat(params, delimiter)\n    params = params.sort\n    str = params.collect{|k, v| \"#{k}=#{v}\"}.join(delimiter)\n    return str\n  end\n\n  def escape(str)\n    return ERB::Util.url_encode(str)\n  end\n\n\n\n\n\u306f\u307e\u3063\u305f\u3053\u3068\n\n\u6295\u7a3f\u3059\u308b\u6587\u7ae0\u306b\u3088\u3063\u3066\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\n\u5f53\u521d\u3001\u6295\u7a3f\u5185\u5bb9\u3092\n\"status\" => \"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\"\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\n+&=~ \u3092\u6295\u7a3f\u6587\u306b\u5165\u308c\u308b\n\u2192401\u30a8\u30e9\u30fc\n{\"errors\":[{\"code\":32,\"message\":\"Could not authenticate you.\"}]}\n% \u3092\u6295\u7a3f\u6587\u306b\u5165\u308c\u308b\n\u2192:400\u30a8\u30e9\u30fc\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u3002\n\n\u8a18\u53f7\u5468\u308a\u3060\u304b\u3089\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u554f\u984c\u3060\u308d\u3068\u3044\u3046\u3053\u3068\u3067\n\"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3057\u305f\u3002\n\u30c1\u30eb\u30c0(~)\u4ee5\u5916\u3001\u554f\u984c\u306a\u304f\u52d5\u304f\u304c\u3001\u30c1\u30eb\u30c0\u3060\u3051\u306f\u30a8\u30e9\u30fc\n401\u30a8\u30e9\u30fc\n{\"errors\":[{\"code\":32,\"message\":\"Could not authenticate you.\"}]}\n\n\u8abf\u3079\u305f\u7d50\u679c\u3001\u30c1\u30eb\u30c0\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u554f\u984c\u3089\u3057\u304f\u3001\u4ee5\u4e0b\u306b\u843d\u3061\u7740\u304f\n\"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")\n\u4eca\u56de\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306fERB::Util.url_encode\u3092\u5229\u7528\u3057\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u306e\u5b50\u300ca\uff5ez\u3001A\uff5eZ\u30010\uff5e9\u3001_(\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2) -\uff08\u30cf\u30a4\u30d5\u30f3\uff09.\uff08\u30d4\u30ea\u30aa\u30c9\uff09\u300d\u4ee5\u5916\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3089\u3057\u3044\u3002\nRFC3986\u306b\u3088\u308b\u3068\n\nURIs that differ in the replacement of an unreserved character with\nits corresponding percent-encoded US-ASCII octet are equivalent: they\nidentify the same resource.  However, URI comparison implementations\ndo not always perform normalization prior to comparison (see Section\n6).  For consistency, percent-encoded octets in the ranges of ALPHA\n(%41-%5A and %61-%7A), DIGIT (%30-%39), hyphen (%2D), period (%2E),\nunderscore (%5F), or tilde (%7E) should not be created by URI\nproducers and, when found in a URI, should be decoded to their\ncorresponding unreserved characters by URI normalizers.\n\n\u3069\u3046\u3082\u300ca\uff5ez\u3001A\uff5eZ\u30010\uff5e9\u3001_(\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2) -\uff08\u30cf\u30a4\u30d5\u30f3\uff09.\uff08\u30d4\u30ea\u30aa\u30c9\uff09 ~(\u30c1\u30eb\u30c0)\u300d\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u3079\u304d\u3058\u3083\u306a\u3044\u3088\u3068\u8a00\u3063\u3066\u308b\u306e\u304b\u306a\uff1f\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4e0a\u8a18\u8a18\u8ff0\u3067\u554f\u984c\u306f\u306a\u3055\u305d\u3046\u3002\n\u3053\u3053\u306b\u66f8\u3044\u3066\u601d\u3063\u305f\u3051\u3069\u3001escape\u30e1\u30bd\u30c3\u30c9\u306b\u5207\u308a\u51fa\u3057\u3066\u308b\u3093\u3060\u304b\u3089\u3001\u305d\u3063\u3061\u306bgsub\u3064\u3051\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u306e\u304b\u306a\u2026\n#\u306f\u3058\u3081\u306b\n\u30c4\u30a4\u30fc\u30c8\u306b\u969b\u3057\u3066\u306f\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3068\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\u53d6\u5f97\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u306e\u30bd\u30fc\u30b9\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n[Ruby\u3067gem\u3092\u4f7f\u308f\u305a\u306b\u3001twitter\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97](http://qiita.com/take2isk/items/95f44c107e32c892ac9b)\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u203b\u3042\u304f\u307e\u3067\u52d5\u304b\u3059\u3088\u3046\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\u30b9\u30c6\u30fc\u30bf\u30b9\u30c1\u30a7\u30c3\u30af\u306f\u304d\u3061\u3093\u3068\u3084\u3063\u3066\u304f\u3060\u3055\u3044\u306d\u3002\n\u203b\u4eca\u56de\u306f\u884c\u3063\u3066\u307e\u305b\u3093\u304c\u3001\u6295\u7a3f\u306e\u969b\u3001\u6587\u5b57\u9577\u306e\u30c1\u30a7\u30c3\u30af\u304c\u672c\u6765\u5fc5\u8981\u3067\u3059\u3002\n\u203btwitter\u306e\u4ed5\u69d8\u3067\u9023\u7d9a\u3057\u3066\u540c\u3058\u5185\u5bb9\u306e\u6295\u7a3f\u306f\u3067\u304d\u307e\u305b\u3093\u3002\uff08403\u304c\u5e30\u3063\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u304b\u3063\u305f\u304b\u306a\uff1f\uff09\n\n```rb:post_tweet.rb\n\n  def post_tweet\n    #\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\n    oauth_token = \"194485223--oauth_token --ynck19\"\n    #\u30e6\u30fc\u30b6\u30fc\u5225\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\n    oauth_token_secret = \"BopAEWj--oauth_token_secret--DKy2iei\"\n    res = post_time_line(oauth_token, oauth_token_secret)\n\u3000\u3000#\u753b\u9762\u306b\u6295\u7a3f\u6587\u304c\u8868\u793a\u3055\u308c\u308b\n    render text: res[\"text\"]\n  end\n\n  def post_time_line(oauth_token, oauth_token_secret)\n    api_key = 'hogehogehogehoge'\n    api_secret = 'fugofugofugofugo'\n    post_params = {\n      ## \u30c1\u30eb\u30c0\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3089\u3057\u3044\n      ##ERB::Util\u306f~\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u2192RFC3986\u3060\u3068\u3057\u306a\u3044\u306e\u304c\u6b63\u3057\u3044\n      \"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")\n    }\n    oauth_params = {\n        \"oauth_consumer_key\" => URI.escape(api_key),\n        \"oauth_nonce\" => URI.escape(SecureRandom.uuid),\n        \"oauth_signature_method\" => URI.escape('HMAC-SHA1'), \n        \"oauth_timestamp\" => URI.escape(Time.now.to_i.to_s),\n        \"oauth_token\" => oauth_token,\n        \"oauth_version\" => URI.escape('1.0')\n    }\n    params = post_params.merge(oauth_params)\n    signature_key = \"#{URI.escape(api_secret)}&#{URI.escape(oauth_token_secret)}\"\n    method = 'POST'\n    request_url = \"https://api.twitter.com/1.1/statuses/update.json\"\n    request_params  = sort_and_concat(params, \"&\")\n    ## \u30c1\u30eb\u30c0\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u306a\u3044\u65b9\u304c\u3088\u3044\u3089\u3057\u3044\n    signature_data = \"#{URI.escape(method)}&#{escape(request_url)}&#{escape(request_params).gsub(\"%7E\", \"~\")}\"\n    hash = OpenSSL::HMAC.digest(OpenSSL::Digest::SHA1.new, signature_key, signature_data)\n    signature = escape(Base64.urlsafe_encode64(hash))\n    params[\"oauth_signature\"] = signature\n    header_params = sort_and_concat(params, ',')\n    twitter_uri = URI.parse(request_url)\n    https = Net::HTTP.new(twitter_uri.host, twitter_uri.port)\n    https.use_ssl = true\n    https.verify_mode =  OpenSSL::SSL::VERIFY_NONE\n    req = Net::HTTP::Post.new(twitter_uri)\n    req[\"Authorization\"] = \"OAuth #{header_params}\"\n    https.set_debug_output $stderr\n    res = https.request(req, body = sort_and_concat(post_params, '&'))\n    json = JSON.parse(res.body)\n    return json\n  end\n\n  def sort_and_concat(params, delimiter)\n    params = params.sort\n    str = params.collect{|k, v| \"#{k}=#{v}\"}.join(delimiter)\n    return str\n  end\n  \n  def escape(str)\n    return ERB::Util.url_encode(str)\n  end\n\n```\n#\u306f\u307e\u3063\u305f\u3053\u3068\n\n##\u6295\u7a3f\u3059\u308b\u6587\u7ae0\u306b\u3088\u3063\u3066\u3001\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\n\n\u5f53\u521d\u3001\u6295\u7a3f\u5185\u5bb9\u3092\n\n*\"status\" => \"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\"*\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u3066\u3044\u305f\u3068\u3053\u308d\u3001\n\n**+&=~ \u3092\u6295\u7a3f\u6587\u306b\u5165\u308c\u308b**\n\u2192401\u30a8\u30e9\u30fc\n{\"errors\":[{\"code\":32,\"message\":\"Could not authenticate you.\"}]}\n\n**% \u3092\u6295\u7a3f\u6587\u306b\u5165\u308c\u308b**\n\u2192:400\u30a8\u30e9\u30fc\n\n\u3068\u3044\u3063\u305f\u5177\u5408\u306b\u3046\u307e\u304f\u52d5\u304b\u306a\u3044\u3002\n\n* * *\n\u8a18\u53f7\u5468\u308a\u3060\u304b\u3089\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u554f\u984c\u3060\u308d\u3068\u3044\u3046\u3053\u3068\u3067\n\n*\"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")*\n\n\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u307e\u3057\u305f\u3002\n\n**\u30c1\u30eb\u30c0(~)\u4ee5\u5916\u3001\u554f\u984c\u306a\u304f\u52d5\u304f\u304c\u3001\u30c1\u30eb\u30c0\u3060\u3051\u306f\u30a8\u30e9\u30fc**\n\n401\u30a8\u30e9\u30fc\n{\"errors\":[{\"code\":32,\"message\":\"Could not authenticate you.\"}]}\n\n* * *\n\u8abf\u3079\u305f\u7d50\u679c\u3001\u30c1\u30eb\u30c0\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u306e\u554f\u984c\u3089\u3057\u304f\u3001\u4ee5\u4e0b\u306b\u843d\u3061\u7740\u304f\n\n*\"status\" => escape(\"API_TEST ~+ \u3061\u308b\u3060\u30d7\u30e9\u30b9\u5165\u308c\u305f\u308d!\").gsub(\"%7E\", \"~\")*\n\n\u4eca\u56de\u3001\u30a8\u30b9\u30b1\u30fc\u30d7\u306f**ERB::Util.url_encode**\u3092\u5229\u7528\u3057\u305f\u306e\u3067\u3059\u304c\u3001\n\u3053\u306e\u5b50\u300ca\uff5ez\u3001A\uff5eZ\u30010\uff5e9\u3001_(\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2) -\uff08\u30cf\u30a4\u30d5\u30f3\uff09.\uff08\u30d4\u30ea\u30aa\u30c9\uff09\u300d\u4ee5\u5916\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3089\u3057\u3044\u3002\n\n[RFC3986](https://www.ietf.org/rfc/rfc3986.txt)\u306b\u3088\u308b\u3068\n\n>URIs that differ in the replacement of an unreserved character with\n>its corresponding percent-encoded US-ASCII octet are equivalent: they\n>identify the same resource.  However, URI comparison implementations\n>do not always perform normalization prior to comparison (see Section\n>6).  For consistency, percent-encoded octets in the ranges of ALPHA\n>(%41-%5A and %61-%7A), DIGIT (%30-%39), hyphen (%2D), period (%2E),\n>underscore (%5F), or tilde (%7E) should not be created by URI\n>producers and, when found in a URI, should be decoded to their\n>corresponding unreserved characters by URI normalizers.\n\n\u3069\u3046\u3082\u300ca\uff5ez\u3001A\uff5eZ\u30010\uff5e9\u3001_(\u30a2\u30f3\u30c0\u30fc\u30b9\u30b3\u30a2) -\uff08\u30cf\u30a4\u30d5\u30f3\uff09.\uff08\u30d4\u30ea\u30aa\u30c9\uff09 **~(\u30c1\u30eb\u30c0)**\u300d\u306f**\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u3079\u304d\u3058\u3083\u306a\u3044\u3088**\u3068\u8a00\u3063\u3066\u308b\u306e\u304b\u306a\uff1f\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u4e0a\u8a18\u8a18\u8ff0\u3067\u554f\u984c\u306f\u306a\u3055\u305d\u3046\u3002\n\n\u3053\u3053\u306b\u66f8\u3044\u3066\u601d\u3063\u305f\u3051\u3069\u3001escape\u30e1\u30bd\u30c3\u30c9\u306b\u5207\u308a\u51fa\u3057\u3066\u308b\u3093\u3060\u304b\u3089\u3001\u305d\u3063\u3061\u306bgsub\u3064\u3051\u305f\u65b9\u304c\u3088\u304b\u3063\u305f\u306e\u304b\u306a\u2026\n\n", "tags": ["Ruby", "Twitter", "TwitterAPI"]}