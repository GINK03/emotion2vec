{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nOS X Mavericks\u306b\u306a\u3063\u3066\u3001\u3072\u3055\u3057\u3076\u308a\u306bOpenCV\u3068OpenNI2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u30e1\u30e2\u3092\u8a18\u9332\u3057\u3066\u304a\u304f\u3002\u3053\u308c\u307e\u3067\u306fSimpleOpenNI\u7d4c\u7531\u3067\u3001OpenNI_NITE_Installer\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u304c\u3001\u3059\u3079\u3066Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u306b\u306a\u3063\u3066\u3001\u3059\u3063\u304d\u308a\u3057\u305f\u306e\u306f\u5f37\u8abf\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u3002\u307e\u305f\u3001\u5927\u62b5\u306e\u30d6\u30ed\u30b0\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u3067\u3067\u30d3\u30eb\u30c9\u4f8b\u304c\u8f09\u3063\u3066\u304a\u3089\u305a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u30d1\u30b9\u306a\u3069\u3092\u81ea\u5206\u3067\u8abf\u3079\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u4e0d\u4fbf\u306a\u306e\u3067\u3001\u305d\u3053\u307e\u3067\u3057\u3063\u304b\u308a\u3068\u30ea\u30de\u30a4\u30f3\u30c0\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304f\u3002\n\u306a\u304a\u3001OpenNI2\u3092\u3068\u308a\u3042\u3048\u305a\u4f7f\u3063\u3066\u307f\u305f\u3044\u3060\u3051\u306e\u4eba\u306b\u306f\u3001Processing + SimpleOpenNi\u304c\u9762\u5012\u306a\u4f5c\u696d\u304c\u5fc5\u8981\u306a\u304f\u4f7f\u3044\u3084\u3059\u3044\u306e\u3067\u3001\u304a\u3059\u3059\u3081\u3002\n\nhttps://code.google.com/p/simple-openni/\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u3059\u3079\u3066Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\u3053\u308c\u304b\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u30d3\u30eb\u30c9\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n\nXCode Command Line Tools\ncmake\n\n$ xcode-select --install\n$ brew install cmake\n\n\u306a\u304a\u3001Homebrew\u3092\u5165\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3002\n\nHomebrew\n\nMacPorts\u3068\u9055\u3044\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6975\u529b\u4f7f\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u9593\u304c\u77ed\u3044\u3068\u3044\u3046\u3053\u3068\u3001\u6700\u8fd1\u3001\u306f\u3084\u308a\u306a\u306e\u3067\u3001\u601d\u3044\u5207\u3063\u3066\u4f7f\u3063\u3066\u307f\u3066\u306f\u3002\u8a73\u3057\u304f\u306f\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3067\n\nOpenCV\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nHomebrew\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001opencv\u306f\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001science\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n$ brew tap homebrew/science\n$ brew install opencv\n\n\nOpenNI2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nOpenNI2\u3082\u540c\u69d8\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001openni\u30ea\u30dd\u30b8\u30c8\u30ea\u3057\u3066\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n$ brew tap totakke/openni2\n$ brew install openni2\n\nKinect for XBox360\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n$ brew install openni2-freenectdriver\n\n\u539f\u5178\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u306e\u3053\u3068\n\nhttps://github.com/totakke/homebrew-openni2\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30d3\u30eb\u30c9\n\u4ee5\u4e0b\u306f\u3001OpenNI2\u3068OpenCV\u306e\u4e21\u65b9\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3060\u3002\u4ee5\u4e0b\u306b\u6dfb\u4ed8\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u7528\u306e\u3088\u3046\u306b\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3001cmake\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n.\n\u251c\u2500\u2500 CMakeLists.txt\n\u2514\u2500\u2500 main.cpp\n\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3059\u308c\u3070\u3001\u554f\u984c\u306a\u3057\u3002\u4ee5\u4e0b\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068cmake\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u30bd\u30fc\u30b9\u3092\u6301\u3063\u3066\u304d\u3066\u3001ubuntu\u7528\u306b\u4fee\u6b63\u3057\u305f\u3082\u306e\u3060\u3002\n\nhttp://www.naturalsoftware.jp/blog/8001\n\n\nmain.cpp\n#include <OpenNI.h>\n#include <opencv2/opencv.hpp>\n#include <vector>\n\nint main()\n{\n    try {\n        openni::OpenNI::initialize();\n\n        openni::Device device;\n        int ret = device.open( openni::ANY_DEVICE );\n        if ( ret != openni::STATUS_OK ) {\n     \u3000\u3000\u3000\u3000return -1;\n        }\n\n        openni::VideoStream colorStream;\n        colorStream.create(device, openni::SENSOR_COLOR);\n        colorStream.start();\n\n        openni::Recorder recorder;\n        recorder.create( \"kinect.oni\" );\n        recorder.attach( colorStream );\n        recorder.start();\n\n        std::vector<openni::VideoStream*> streams;\n        streams.push_back( &colorStream );\n\n        cv::Mat colorImage;\n\n        while ( 1 ) {\n            int changedIndex;\n            openni::OpenNI::waitForAnyStream( &streams[0], streams.size(), &changedIndex );\n            if ( changedIndex == 0 ) {\n                openni::VideoFrameRef colorFrame;\n                colorStream.readFrame( &colorFrame );\n                if ( colorFrame.isValid() ) {\n                    colorImage = cv::Mat( colorStream.getVideoMode().getResolutionY(), \n                        colorStream.getVideoMode().getResolutionX(),\n                        CV_8UC3, (char*)colorFrame.getData() );\n                    cv::cvtColor( colorImage, colorImage, CV_BGR2RGB );\n\n                    cv::imshow( \"Color Camera\", colorImage );\n                }\n            }\n\n            int key = cv::waitKey( 10 );\n            if ( key == 'q' ) {\n                break;\n            }\n        }\n    }\n    catch ( std::exception& ) {\n        std::cout << openni::OpenNI::getExtendedError() << std::endl;\n    }\n}\n\n\ncmake\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30b9\u30af\u30e9\u30c3\u30c1\u3067\u66f8\u3044\u305f\u3002OpenNI2\u306e\u30d1\u30b9\u306e\u63a2\u3057\u65b9\u306f\u81ea\u5df1\u6d41\u306a\u306e\u3067\u3001\u9069\u5b9c\u5909\u66f4\u3057\u3066\u307b\u3057\u3044\u3002\u5927\u62b5\u306fPaths\u306b\u30d8\u30c3\u30c0\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308c\u3070\u52d5\u304f\u3002\u4eca\u56de\u306f\u3001\u4e0a\u8ff0\u306e\u3088\u3046\u306b/usr/local/lib/ni2\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3001/usr/local/include/ni2\u306b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u3044\u3046\u524d\u63d0\u3067\u8a2d\u5b9a\u3092\u7de8\u96c6\u3057\u305f\u3002\n\nCMakeLists.txt\n# -*- CMakeLists.txt -*-\n\ncmake_minimum_required (VERSION 2.8)\n\n if(COMMAND cmake_policy)\n    cmake_policy(SET CMP0003 NEW)\n endif(COMMAND cmake_policy)\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8ffd\u52a0\nadd_executable(view main.cpp)\n\n# CFLAGS\u306e\u8ffd\u52a0\nset (CMAKE_CXX_FLAGS \"-Wall -g -I${PROJECT_SRC_DIRECTORY}/include\")\n\n# LDFLAGS\u306e\u8ffd\u52a0\nset (CMAKE_EXE_LINKER_FLAGS ${PLATFORM_LDFLAGS})\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\ninclude_directories ( /usr/local/include/ni2 )\nlink_directories ( /usr/local/lib/ni2 )\nfind_package (OpenCV REQUIRED)\n\nfind_path(OpenNI2_INCLUDE_PATH NAMES OpenNI.h\n  PATH_SUFFIXES ni2\n  PATHS\n    /usr/include\n    /usr/local/include)\n\nfind_library(OpenNI2_LIBRARY NAMES OpenNI2 libOpenNI2\n  PATHS\n    /usr/lib\n    /usr/local/lib\n    /usr/local/lib/ni2)\n\ntarget_link_libraries (view ${OpenCV_LIBS} ${OpenNI2_LIBRARY} stdc++)\n\n# \u30af\u30ea\u30fc\u30f3\u5bfe\u8c61\u306e\u8ffd\u52a0\nset_directory_properties (\n  PROPERTIES\n  ADDITIONAL_MAKE_CLEAN_FILES\n  \"*~\"\n  )\n\n\n\n## \u306f\u3058\u3081\u306b\n\nOS X Mavericks\u306b\u306a\u3063\u3066\u3001\u3072\u3055\u3057\u3076\u308a\u306bOpenCV\u3068OpenNI2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u3057\u305f\u306e\u3067\u3001\u305d\u306e\u30e1\u30e2\u3092\u8a18\u9332\u3057\u3066\u304a\u304f\u3002\u3053\u308c\u307e\u3067\u306fSimpleOpenNI\u7d4c\u7531\u3067\u3001OpenNI_NITE_Installer\u3092\u4f7f\u3063\u305f\u65b9\u304c\u826f\u304b\u3063\u305f\u308a\u3057\u305f\u306e\u304c\u3001\u3059\u3079\u3066Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u306b\u306a\u3063\u3066\u3001\u3059\u3063\u304d\u308a\u3057\u305f\u306e\u306f\u5f37\u8abf\u3057\u3066\u304a\u304d\u305f\u3044\u3068\u3053\u308d\u3060\u3002\u307e\u305f\u3001\u5927\u62b5\u306e\u30d6\u30ed\u30b0\u3067\u306f\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u3067\u3067\u30d3\u30eb\u30c9\u4f8b\u304c\u8f09\u3063\u3066\u304a\u3089\u305a\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30ea\u30f3\u30af\u30d1\u30b9\u306a\u3069\u3092\u81ea\u5206\u3067\u8abf\u3079\u308b\u3053\u3068\u306b\u306a\u3063\u3066\u4e0d\u4fbf\u306a\u306e\u3067\u3001\u305d\u3053\u307e\u3067\u3057\u3063\u304b\u308a\u3068\u30ea\u30de\u30a4\u30f3\u30c0\u3068\u3057\u3066\u6b8b\u3057\u3066\u304a\u304f\u3002\n\n\u306a\u304a\u3001OpenNI2\u3092\u3068\u308a\u3042\u3048\u305a\u4f7f\u3063\u3066\u307f\u305f\u3044\u3060\u3051\u306e\u4eba\u306b\u306f\u3001Processing + SimpleOpenNi\u304c\u9762\u5012\u306a\u4f5c\u696d\u304c\u5fc5\u8981\u306a\u304f\u4f7f\u3044\u3084\u3059\u3044\u306e\u3067\u3001\u304a\u3059\u3059\u3081\u3002\n\n* https://code.google.com/p/simple-openni/\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u3059\u3079\u3066Homebrew\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\u3053\u308c\u304b\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u30d3\u30eb\u30c9\u306e\u305f\u3081\u306b\u4ee5\u4e0b\u306e\u30bd\u30d5\u30c8\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n\n* XCode Command Line Tools\n* cmake\n\n```\n$ xcode-select --install\n$ brew install cmake\n```\n\n\u306a\u304a\u3001Homebrew\u3092\u5165\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3002\n\n* [Homebrew](http://brew.sh/)\n\nMacPorts\u3068\u9055\u3044\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6975\u529b\u4f7f\u3046\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6642\u9593\u304c\u77ed\u3044\u3068\u3044\u3046\u3053\u3068\u3001\u6700\u8fd1\u3001\u306f\u3084\u308a\u306a\u306e\u3067\u3001\u601d\u3044\u5207\u3063\u3066\u4f7f\u3063\u3066\u307f\u3066\u306f\u3002\u8a73\u3057\u304f\u306f\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3067\n\n### OpenCV\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nHomebrew\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001opencv\u306f\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001science\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30a2\u30af\u30c6\u30a3\u30d9\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```\n$ brew tap homebrew/science\n$ brew install opencv\n```\n\n### OpenNI2\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nOpenNI2\u3082\u540c\u69d8\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u5165\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001openni\u30ea\u30dd\u30b8\u30c8\u30ea\u3057\u3066\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```\n$ brew tap totakke/openni2\n$ brew install openni2\n```\n\nKinect for XBox360\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n\n```\n$ brew install openni2-freenectdriver\n```\n\n\u539f\u5178\u306f\u4ee5\u4e0b\u3092\u53c2\u7167\u306e\u3053\u3068\n\n* https://github.com/totakke/homebrew-openni2\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30d3\u30eb\u30c9\n\n\u4ee5\u4e0b\u306f\u3001OpenNI2\u3068OpenCV\u306e\u4e21\u65b9\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u30d5\u30a1\u30a4\u30eb\u3060\u3002\u4ee5\u4e0b\u306b\u6dfb\u4ed8\u3057\u3066\u3044\u308b\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u7528\u306e\u3088\u3046\u306b\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u914d\u7f6e\u3057\u3001cmake\u3067\u30d3\u30eb\u30c9\u3059\u308b\u3002\n\n> .\n> \u251c\u2500\u2500 CMakeLists.txt\n> \u2514\u2500\u2500 main.cpp\n\n```\n$ mkdir build\n$ cd build\n$ cmake ..\n$ make\n```\n\n\u30d3\u30eb\u30c9\u304c\u6210\u529f\u3059\u308c\u3070\u3001\u554f\u984c\u306a\u3057\u3002\u4ee5\u4e0b\u3001\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3068cmake\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u6dfb\u4ed8\u3059\u308b\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306e\u30bd\u30fc\u30b9\u3092\u6301\u3063\u3066\u304d\u3066\u3001ubuntu\u7528\u306b\u4fee\u6b63\u3057\u305f\u3082\u306e\u3060\u3002\n\n* http://www.naturalsoftware.jp/blog/8001\n\n\n```main.cpp\n#include <OpenNI.h>\n#include <opencv2/opencv.hpp>\n#include <vector>\n \nint main()\n{\n    try {\n        openni::OpenNI::initialize();\n \n        openni::Device device;\n        int ret = device.open( openni::ANY_DEVICE );\n        if ( ret != openni::STATUS_OK ) {\n\t \u3000\u3000\u3000\u3000return -1;\n        }\n \n        openni::VideoStream colorStream;\n        colorStream.create(device, openni::SENSOR_COLOR);\n        colorStream.start();\n \n        openni::Recorder recorder;\n        recorder.create( \"kinect.oni\" );\n        recorder.attach( colorStream );\n        recorder.start();\n \n        std::vector<openni::VideoStream*> streams;\n        streams.push_back( &colorStream );\n \n        cv::Mat colorImage;\n \n        while ( 1 ) {\n            int changedIndex;\n            openni::OpenNI::waitForAnyStream( &streams[0], streams.size(), &changedIndex );\n            if ( changedIndex == 0 ) {\n                openni::VideoFrameRef colorFrame;\n                colorStream.readFrame( &colorFrame );\n                if ( colorFrame.isValid() ) {\n                    colorImage = cv::Mat( colorStream.getVideoMode().getResolutionY(), \n                        colorStream.getVideoMode().getResolutionX(),\n                        CV_8UC3, (char*)colorFrame.getData() );\n                    cv::cvtColor( colorImage, colorImage, CV_BGR2RGB );\n \n                    cv::imshow( \"Color Camera\", colorImage );\n                }\n            }\n \n            int key = cv::waitKey( 10 );\n            if ( key == 'q' ) {\n                break;\n            }\n        }\n    }\n    catch ( std::exception& ) {\n        std::cout << openni::OpenNI::getExtendedError() << std::endl;\n    }\n}\n```\n\ncmake\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u3001\u30b9\u30af\u30e9\u30c3\u30c1\u3067\u66f8\u3044\u305f\u3002OpenNI2\u306e\u30d1\u30b9\u306e\u63a2\u3057\u65b9\u306f\u81ea\u5df1\u6d41\u306a\u306e\u3067\u3001\u9069\u5b9c\u5909\u66f4\u3057\u3066\u307b\u3057\u3044\u3002\u5927\u62b5\u306fPaths\u306b\u30d8\u30c3\u30c0\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u30d1\u30b9\u3092\u8ffd\u52a0\u3059\u308c\u3070\u52d5\u304f\u3002\u4eca\u56de\u306f\u3001\u4e0a\u8ff0\u306e\u3088\u3046\u306b/usr/local/lib/ni2\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u3001/usr/local/include/ni2\u306b\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u3068\u3044\u3046\u524d\u63d0\u3067\u8a2d\u5b9a\u3092\u7de8\u96c6\u3057\u305f\u3002\n\n```CMakeLists.txt\n# -*- CMakeLists.txt -*-\n\ncmake_minimum_required (VERSION 2.8)\n\n if(COMMAND cmake_policy)\n \tcmake_policy(SET CMP0003 NEW)\n endif(COMMAND cmake_policy)\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8ffd\u52a0\nadd_executable(view main.cpp)\n\n# CFLAGS\u306e\u8ffd\u52a0\nset (CMAKE_CXX_FLAGS \"-Wall -g -I${PROJECT_SRC_DIRECTORY}/include\")\n\n# LDFLAGS\u306e\u8ffd\u52a0\nset (CMAKE_EXE_LINKER_FLAGS ${PLATFORM_LDFLAGS})\n\n# \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8ffd\u52a0\ninclude_directories ( /usr/local/include/ni2 )\nlink_directories ( /usr/local/lib/ni2 )\nfind_package (OpenCV REQUIRED)\n\nfind_path(OpenNI2_INCLUDE_PATH NAMES OpenNI.h\n  PATH_SUFFIXES ni2\n  PATHS\n    /usr/include\n    /usr/local/include)\n\nfind_library(OpenNI2_LIBRARY NAMES OpenNI2 libOpenNI2\n  PATHS\n    /usr/lib\n    /usr/local/lib\n    /usr/local/lib/ni2)\n\ntarget_link_libraries (view ${OpenCV_LIBS} ${OpenNI2_LIBRARY} stdc++)\n\n# \u30af\u30ea\u30fc\u30f3\u5bfe\u8c61\u306e\u8ffd\u52a0\nset_directory_properties (\n  PROPERTIES\n  ADDITIONAL_MAKE_CLEAN_FILES\n  \"*~\"\n  )\n```\n\n\n\n\n\n\n", "tags": ["mavericks", "OpenCV", "homebrew", "OpenNI2"]}