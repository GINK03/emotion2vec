{"tags": ["C#", "\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3"], "context": "\n\n\u6982\u8981\n@hyuki \u5148\u751f\u8457\u306e\u300eJava\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300f\uff082004\u5e74\u3001SB Creative\uff09\u306e1\u7ae0\u305a\u3064\u3092\u30d9\u30fc\u30b9\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092C#\u3067\u7f6e\u304d\u63db\u3048\u306a\u304c\u3089\u52c9\u5f37\u3057\u3066\u3044\u304f\u8a18\u4e8b\u3067\u3059\u3002\n\u203b\u8457\u8005\u306e @hyuki \u5148\u751f\u306b\u306f\u9069\u5207\u306b\u66f8\u7c4d\u3078\u306e\u53c2\u7167\u3092\u5165\u308c\u308c\u3070\u554f\u984c\u306a\u3044\u65e8\u3054\u78ba\u8a8d\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u672c\u984c\nDecorator\u30d1\u30bf\u30fc\u30f3\n\u7b2c12\u56de\u306fDecorator\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002Decorator\u30d1\u30bf\u30fc\u30f3\u306f\u300c\u5916\u67a0\uff08\u98fe\u308a\u3001Decoration\uff09\u3092\u518d\u5e30\u7684\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u6838\u3068\u306a\u308b\u90e8\u5206\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\u300d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u65e9\u901f\u5177\u4f53\u7684\u306a\u4e8b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u300eJava\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300f\uff082004\u5e74\u3001SB Creative\uff09\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092C#\u3067\uff08\u5927\u4f53\uff09\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace DecoratorPattern\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Display b1 = new StringDisplay(\"Hello, world.\");\n            Display b2 = new SideBorder(b1, '#');\n            Display b3 = new FullBorder(b2);\n            b1.Show();\n\u3000\u3000\u3000\u3000\u3000\u3000 // => Hello, world.\n            b2.Show();\n            // => #Hello, world.#\n            b3.Show();\n            // => \n            // +---------------+\n            // |#Hello, world.#|\n            // +---------------+\n            Display b4 =\n                new SideBorder(\n                    new FullBorder(\n                        new SideBorder(\n                            new FullBorder(\n                                new StringDisplay(\"\u3053\u3093\u306b\u3061\u306f\u3002\")\n                                ),\n                                '*')\n                            ),\n                            '/'\n                        );\n            b4.Show();\n            // =>\n            // /+----------------+/\n            // /|*+------------+*|/\n            // /|*|\u3053\u3093\u306b\u3061\u306f\u3002|*|/\n            // /|*+------------+*|/\n            // /+----------------+/\n\n            // \u5b9f\u884c\u304c\u4e00\u77ac\u3067\u7d42\u308f\u3063\u3066\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30ad\u30fc\u306e\u5165\u529b\u3092\u5f85\u3061\u307e\u3059\n            Console.ReadLine();\n        }\n    }\n\n    // Component\n    // \u30fb\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306e\u6838\n    public abstract class Display\n    {\n        public abstract int Columns { get; }\n        public abstract int Rows { get; }\n        public abstract string GetRowText(int row);\n        public void Show()\n        {\n            for(int i = 0; i < Rows; i++)\n            {\n                Console.WriteLine(GetRowText(i));\n            }\n        }\n    }\n\n    // ConcreteComponent\n    // \u30fbComponent\u3092\u5b9f\u88c5\n    public class StringDisplay : Display\n    {\n        private string str;\n        public StringDisplay(string str)\n        {\n            this.str = str;\n        }\n        public override int Columns\n        {\n            get\n            {\n                Encoding sjisEnc = Encoding.GetEncoding(\"shift_jis\");\n                return sjisEnc.GetByteCount(str);\n            }\n        }\n\n        public override int Rows\n        {\n            get { return 1; }\n        }\n\n        public override string GetRowText(int row)\n        {\n            if (row == 0)\n            {\n                return str;\n            }\n            else\n            {\n                return null;\n            }\n        }\n    }\n\n    // Decorator\n    // \u30fbComponent\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08API\uff09\u3092\u6301\u3064\n    // \u30fb\u98fe\u308b\u5bfe\u8c61\u3068\u306a\u308bComponent\u3092\u6301\u3064\n    public abstract class Border : Display\n    {\n        protected Display display;\n        protected Border(Display display)\n        {\n            this.display = display;\n        }\n    }\n\n    // ConcreteDecorator\n    // \u30fbDecorator\u3092\u5b9f\u88c5\n    public class SideBorder : Border\n    {\n        private char borderChar;\n        public SideBorder(Display display, char ch) : base(display)\n        {\n            this.borderChar = ch;\n\n        }\n        public override int Columns\n        {\n            get\n            {\n                return 1 + display.Columns + 1;\n            }\n        }\n\n        public override int Rows\n        {\n            get\n            {\n                return display.Rows;\n            }\n        }\n\n        public override string GetRowText(int row)\n        {\n            return borderChar + display.GetRowText(row) + borderChar;\n        }\n    }\n\n    // ConcreteDecorator\n    // \u30fbDecorator\u3092\u5b9f\u88c5\n    public class FullBorder : Border\n    {\n        public FullBorder(Display display) : base(display) { }\n        public override int Columns\n        {\n            get\n            {\n                return 1 + display.Columns + 1;\n            }\n        }\n\n        public override int Rows\n        {\n            get\n            {\n                return 1 + display.Rows + 1;\n            }\n        }\n\n        public override string GetRowText(int row)\n        {\n            if (row == 0)\n            {\n                return \"+\" + MakeLine('-', display.Columns) + \"+\";\n            }\n            else if (row == display.Rows + 1)\n            {\n                return \"+\" + MakeLine('-', display.Columns) + \"+\";\n            }\n            else\n            {\n                return \"|\" + display.GetRowText(row - 1) + \"|\";\n            }\n        }\n\n        private string MakeLine(char ch, int count)\n        {\n            StringBuilder sb = new StringBuilder();\n            for (int i = 0; i < count; i++)\n            {\n                sb.Append(ch);\n            }\n            return sb.ToString();\n        }\n    }\n}\n\n\n\u52b9\u80fd\n\n\u5305\u307e\u308c\u308b\u3082\u306e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u59d4\u8b72\u306b\u3088\u308a\u30af\u30e9\u30b9\u9593\u304c\u3086\u308b\u304f\u7d50\u5408\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30bd\u30fc\u30b9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u9593\u306e\u95a2\u4fc2\u3092\u5909\u3048\u305f\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nConcreteDecorator\u3092\u5897\u3084\u305b\u3070\u591a\u69d8\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3067\u304d\u308b\n\n\n\u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\n\n\u3088\u304f\u4f3c\u3066\u3044\u308b\u5c0f\u3055\u306a\u30af\u30e9\u30b9\u304c\u3067\u304d\u3066\u3057\u307e\u3046\n\n\n\u95a2\u9023\u3057\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\n\nAdapter\u30d1\u30bf\u30fc\u30f3\n[Strategy\u30d1\u30bf\u30fc\u30f3](http://qiita.com/toshi0607/items/72829d34ef9595f5b3b0\n\n\n\n\u611f\u60f3\u3001\u7591\u554f\u3001\u30e1\u30e2\n\n\u98fe\u308a\u67a0\u3092\u4f7f\u3063\u3066\u4e2d\u8eab\u3092\u96a0\u3057\u3066\u3082\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08\u30b5\u30f3\u30d7\u30eb\u3067\u306fColumns\u3001Rows\u3001GetRowText()\uff09\u306f\u96a0\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3053\u306e\u72b6\u614b\u3092\u300c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08API\uff09\u304c\u900f\u904e\u7684\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u3002\njava\u306e\u6a19\u6e96\u30af\u30e9\u30b9\u3060\u3068java.io\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u306bDecorator\u30d1\u30bf\u30fc\u30f3\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\u6a5f\u80fd\u62e1\u5f35 = \u7d99\u627f\u3001\u306e\u524d\u306b\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\nC#\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\n\u2460Iterator\n\u2461Adapter\n\u2462Template Method\n\u2463Factory Method\n\u2464Singleton\n\u2465Prototype\n\u2466Builder\n\u2467AbstractFactory\n\u2468Bridge\n\u2469Strategy Pattern\n\u246aComposite Pattern\n\u246bDecorator Pattern\n## \u6982\u8981\n@hyuki \u5148\u751f\u8457\u306e[\u300eJava\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300f\uff082004\u5e74\u3001SB Creative\uff09](http://www.hyuki.com/dp/)\u306e1\u7ae0\u305a\u3064\u3092\u30d9\u30fc\u30b9\u306b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092C#\u3067\u7f6e\u304d\u63db\u3048\u306a\u304c\u3089\u52c9\u5f37\u3057\u3066\u3044\u304f\u8a18\u4e8b\u3067\u3059\u3002\n\n\u203b\u8457\u8005\u306e @hyuki \u5148\u751f\u306b\u306f\u9069\u5207\u306b\u66f8\u7c4d\u3078\u306e\u53c2\u7167\u3092\u5165\u308c\u308c\u3070\u554f\u984c\u306a\u3044\u65e8\u3054\u78ba\u8a8d\u3044\u305f\u3060\u3044\u3066\u3044\u307e\u3059\u3002\n\n\n## \u672c\u984c\n<b>Decorator\u30d1\u30bf\u30fc\u30f3</b>\n\u7b2c12\u56de\u306fDecorator\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002Decorator\u30d1\u30bf\u30fc\u30f3\u306f\u300c\u5916\u67a0\uff08\u98fe\u308a\u3001Decoration\uff09\u3092\u518d\u5e30\u7684\u306b\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067\u6838\u3068\u306a\u308b\u90e8\u5206\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304f\u300d\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\n\n### \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u65e9\u901f\u5177\u4f53\u7684\u306a\u4e8b\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002[\u300eJava\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\u300f\uff082004\u5e74\u3001SB Creative\uff09](http://www.hyuki.com/dp/)\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092C#\u3067\uff08\u5927\u4f53\uff09\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n```C#\n\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\n\nnamespace DecoratorPattern\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            Display b1 = new StringDisplay(\"Hello, world.\");\n            Display b2 = new SideBorder(b1, '#');\n            Display b3 = new FullBorder(b2);\n            b1.Show();\n\u3000\u3000\u3000\u3000\u3000\u3000 // => Hello, world.\n            b2.Show();\n            // => #Hello, world.#\n            b3.Show();\n            // => \n            // +---------------+\n            // |#Hello, world.#|\n            // +---------------+\n            Display b4 =\n                new SideBorder(\n                    new FullBorder(\n                        new SideBorder(\n                            new FullBorder(\n                                new StringDisplay(\"\u3053\u3093\u306b\u3061\u306f\u3002\")\n                                ),\n                                '*')\n                            ),\n                            '/'\n                        );\n            b4.Show();\n            // =>\n            // /+----------------+/\n            // /|*+------------+*|/\n            // /|*|\u3053\u3093\u306b\u3061\u306f\u3002|*|/\n            // /|*+------------+*|/\n            // /+----------------+/\n\n            // \u5b9f\u884c\u304c\u4e00\u77ac\u3067\u7d42\u308f\u3063\u3066\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30ad\u30fc\u306e\u5165\u529b\u3092\u5f85\u3061\u307e\u3059\n            Console.ReadLine();\n        }\n    }\n\n    // Component\n    // \u30fb\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u306e\u6838\n    public abstract class Display\n    {\n        public abstract int Columns { get; }\n        public abstract int Rows { get; }\n        public abstract string GetRowText(int row);\n        public void Show()\n        {\n            for(int i = 0; i < Rows; i++)\n            {\n                Console.WriteLine(GetRowText(i));\n            }\n        }\n    }\n\n    // ConcreteComponent\n    // \u30fbComponent\u3092\u5b9f\u88c5\n    public class StringDisplay : Display\n    {\n        private string str;\n        public StringDisplay(string str)\n        {\n            this.str = str;\n        }\n        public override int Columns\n        {\n            get\n            {\n                Encoding sjisEnc = Encoding.GetEncoding(\"shift_jis\");\n                return sjisEnc.GetByteCount(str);\n            }\n        }\n\n        public override int Rows\n        {\n            get { return 1; }\n        }\n\n        public override string GetRowText(int row)\n        {\n            if (row == 0)\n            {\n                return str;\n            }\n            else\n            {\n                return null;\n            }\n        }\n    }\n\n    // Decorator\n    // \u30fbComponent\u3068\u540c\u3058\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08API\uff09\u3092\u6301\u3064\n    // \u30fb\u98fe\u308b\u5bfe\u8c61\u3068\u306a\u308bComponent\u3092\u6301\u3064\n    public abstract class Border : Display\n    {\n        protected Display display;\n        protected Border(Display display)\n        {\n            this.display = display;\n        }\n    }\n\n    // ConcreteDecorator\n    // \u30fbDecorator\u3092\u5b9f\u88c5\n    public class SideBorder : Border\n    {\n        private char borderChar;\n        public SideBorder(Display display, char ch) : base(display)\n        {\n            this.borderChar = ch;\n\n        }\n        public override int Columns\n        {\n            get\n            {\n                return 1 + display.Columns + 1;\n            }\n        }\n\n        public override int Rows\n        {\n            get\n            {\n                return display.Rows;\n            }\n        }\n\n        public override string GetRowText(int row)\n        {\n            return borderChar + display.GetRowText(row) + borderChar;\n        }\n    }\n\n    // ConcreteDecorator\n    // \u30fbDecorator\u3092\u5b9f\u88c5\n    public class FullBorder : Border\n    {\n        public FullBorder(Display display) : base(display) { }\n        public override int Columns\n        {\n            get\n            {\n                return 1 + display.Columns + 1;\n            }\n        }\n\n        public override int Rows\n        {\n            get\n            {\n                return 1 + display.Rows + 1;\n            }\n        }\n\n        public override string GetRowText(int row)\n        {\n            if (row == 0)\n            {\n                return \"+\" + MakeLine('-', display.Columns) + \"+\";\n            }\n            else if (row == display.Rows + 1)\n            {\n                return \"+\" + MakeLine('-', display.Columns) + \"+\";\n            }\n            else\n            {\n                return \"|\" + display.GetRowText(row - 1) + \"|\";\n            }\n        }\n\n        private string MakeLine(char ch, int count)\n        {\n            StringBuilder sb = new StringBuilder();\n            for (int i = 0; i < count; i++)\n            {\n                sb.Append(ch);\n            }\n            return sb.ToString();\n        }\n    }\n}\n```\n\n\n\n### \u52b9\u80fd\n* \u5305\u307e\u308c\u308b\u3082\u306e\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u6a5f\u80fd\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n* \u59d4\u8b72\u306b\u3088\u308a\u30af\u30e9\u30b9\u9593\u304c\u3086\u308b\u304f\u7d50\u5408\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306e\u30bd\u30fc\u30b9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u306a\u304f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u9593\u306e\u95a2\u4fc2\u3092\u5909\u3048\u305f\u65b0\u3057\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n* ConcreteDecorator\u3092\u5897\u3084\u305b\u3070\u591a\u69d8\u306a\u6a5f\u80fd\u3092\u8ffd\u52a0\u3067\u304d\u308b\n\n### \u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\n* \u3088\u304f\u4f3c\u3066\u3044\u308b\u5c0f\u3055\u306a\u30af\u30e9\u30b9\u304c\u3067\u304d\u3066\u3057\u307e\u3046\n\n### \u95a2\u9023\u3057\u3066\u3044\u308b\u30d1\u30bf\u30fc\u30f3\n\n* [Adapter\u30d1\u30bf\u30fc\u30f3](http://qiita.com/toshi0607/items/374373a8bd656f7188d4)\n* [Strategy\u30d1\u30bf\u30fc\u30f3](http://qiita.com/toshi0607/items/72829d34ef9595f5b3b0\n\n### \u611f\u60f3\u3001\u7591\u554f\u3001\u30e1\u30e2\n* \u98fe\u308a\u67a0\u3092\u4f7f\u3063\u3066\u4e2d\u8eab\u3092\u96a0\u3057\u3066\u3082\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08\u30b5\u30f3\u30d7\u30eb\u3067\u306fColumns\u3001Rows\u3001GetRowText()\uff09\u306f\u96a0\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3053\u306e\u72b6\u614b\u3092\u300c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\uff08API\uff09\u304c\u900f\u904e\u7684\u3067\u3042\u308b\u300d\u3068\u3044\u3046\u3002\n* java\u306e\u6a19\u6e96\u30af\u30e9\u30b9\u3060\u3068java.io\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u306bDecorator\u30d1\u30bf\u30fc\u30f3\u304c\u63a1\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n* \u6a5f\u80fd\u62e1\u5f35 = \u7d99\u627f\u3001\u306e\u524d\u306b\u691c\u8a0e\u3059\u308b\u3068\u3088\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n### C#\u3067\u5b66\u3076\u30c7\u30b6\u30a4\u30f3\u30d1\u30bf\u30fc\u30f3\u5165\u9580\n[\u2460Iterator](http://qiita.com/toshi0607/items/cdc589c58f21c0fc513d)\n[\u2461Adapter](http://qiita.com/toshi0607/items/374373a8bd656f7188d4)\n[\u2462Template Method](http://qiita.com/toshi0607/items/cc8a87a3049bd7af52df)\n[\u2463Factory Method](http://qiita.com/toshi0607/items/d95bdd31da363e0f04a9)\n[\u2464Singleton](http://qiita.com/toshi0607/items/c172bb4478e72ae6ced7)\n[\u2465Prototype](http://qiita.com/toshi0607/items/f4358020befca048d2e0)\n[\u2466Builder](http://qiita.com/toshi0607/items/13e37d54e04b61bc69b5)\n[\u2467AbstractFactory](http://qiita.com/toshi0607/items/b8a19a4328849cdf1d99)\n[\u2468Bridge](http://qiita.com/toshi0607/items/580988e25f25fea9216e)\n[\u2469Strategy Pattern](http://qiita.com/toshi0607/items/72829d34ef9595f5b3b0)\n\u246aComposite Pattern\n[\u246bDecorator Pattern](http://qiita.com/toshi0607/items/a65d1abb95a97970ab8c)\n"}