{"context": " More than 1 year has passed since last update.cluster\u69cb\u6210\u3067\u3001remote\u306eround robin router\u3092\u4f7f\u3046\u5834\u5408\u306e\n\u8a2d\u5b9a\u3001\u5b9f\u88c5\nround robin\u3092\u4f7f\u3046\u5834\u5408\u306econf\n\napplication.conf\nakka {\n  actor {\n    provider = \"akka.cluster.ClusterActorRefProvider\"\n\n    deployment {\n      /clusterrouter {\n        router = round-robin-pool\n        nr-of-instances = 10\n        target.nodes = [\n          \"akka.tcp://MetaInfoScraperCluster@\u306a\u3093\u304b:2550\",\n          \"akka.tcp://MetaInfoScraperCluster@\u3042\u308c\u304b:2550\"\n        ]\n      }\n    }\n  }\n\n  remote {\n    log-remote-lifecycle-events = on\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0\n    }\n  }\n\n  cluster {\n    seed-nodes = [\n      \"akka.tcp://MetaInfoScraperCluster@\u306a\u3093\u304b:2550\",\n      \"akka.tcp://MetaInfoScraperCluster@\u3042\u308c\u304b:2550\"\n    ]\n    auto-down-unreachable-after = 10s\n    //auto-down = on\n  }\n}\n\n\ncluster\u306e\u751f\u6210\nval system = ActorSystem(\"MetaInfoScraperCluster\")\nval clusterListener = system.actorOf(Props[ClusterListener],\n      name = \"clusterListener\")\nCluster(system).subscribe(clusterListener, classOf[ClusterDomainEvent])\n\nrouter\u306e\u751f\u6210\n    val router = system.actorOf(FromConfig.props(Props[MetaInfoScraper]),    \"clusterrouter\")\n\n      val urls = Source.fromFile(input).getLines()\n      urls.filter(!_.startsWith(\"#\")).zipWithIndex.foreach {\n        case (url, i) => {\n          println(s\"!! url: $url\")\n          // HashingRouter\n          //router.tell(ConsistentHashableEnvelope(Request(url),i), clusterListener)\n          router.tell(Request(url), clusterListener)\n        }\n      }\n\n\ncluster\u69cb\u6210\u3067\u3001remote\u306eround robin router\u3092\u4f7f\u3046\u5834\u5408\u306e\n\u8a2d\u5b9a\u3001\u5b9f\u88c5\n\n\nround robin\u3092\u4f7f\u3046\u5834\u5408\u306econf\n\n```application.conf\nakka {\n  actor {\n    provider = \"akka.cluster.ClusterActorRefProvider\"\n\n    deployment {\n      /clusterrouter {\n        router = round-robin-pool\n        nr-of-instances = 10\n        target.nodes = [\n          \"akka.tcp://MetaInfoScraperCluster@\u306a\u3093\u304b:2550\",\n          \"akka.tcp://MetaInfoScraperCluster@\u3042\u308c\u304b:2550\"\n        ]\n      }\n    }\n  }\n\n  remote {\n    log-remote-lifecycle-events = on\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0\n    }\n  }\n\n  cluster {\n    seed-nodes = [\n      \"akka.tcp://MetaInfoScraperCluster@\u306a\u3093\u304b:2550\",\n      \"akka.tcp://MetaInfoScraperCluster@\u3042\u308c\u304b:2550\"\n    ]\n    auto-down-unreachable-after = 10s\n    //auto-down = on\n  }\n}\n```\n\n\ncluster\u306e\u751f\u6210\n\n```\nval system = ActorSystem(\"MetaInfoScraperCluster\")\nval clusterListener = system.actorOf(Props[ClusterListener],\n      name = \"clusterListener\")\nCluster(system).subscribe(clusterListener, classOf[ClusterDomainEvent])\n```\n\nrouter\u306e\u751f\u6210\n\n```\n    val router = system.actorOf(FromConfig.props(Props[MetaInfoScraper]),    \"clusterrouter\")\n\n      val urls = Source.fromFile(input).getLines()\n      urls.filter(!_.startsWith(\"#\")).zipWithIndex.foreach {\n        case (url, i) => {\n          println(s\"!! url: $url\")\n          // HashingRouter\n          //router.tell(ConsistentHashableEnvelope(Request(url),i), clusterListener)\n          router.tell(Request(url), clusterListener)\n        }\n      }\n```\n\n", "tags": ["Akka"]}