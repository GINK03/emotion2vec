{"context": "\n\n\u554f\u984c\u306e\u78ba\u8a8d\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\n$f(\\alpha) = tan\\ \\alpha - \\alpha$\n\u306e\u9006\u95a2\u6570 $f^{-1}$\u3092\u6c42\u3081\u307e\u3059\u3002\n\n\u8a73\u3057\u3044\u5185\u5bb9\u306f\u5c0e\u5165\u7de8\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3042\u308b\u95a2\u6570\u306e\u9006\u95a2\u6570\u3092\u6570\u5024\u7684\u306b\u4f5c\u308b\u3044\u308d\u3044\u308d\u306a\u65b9\u6cd5\u3000\u5c0e\u5165\u7de8 - Qiita\n\n\u9006\u95a2\u6570\u3092\u8868\u3059\u65b9\u6cd5\n\u6700\u521d\u306b\u601d\u3044\u3064\u3044\u305f\u65b9\u6cd5\u306f\u591a\u9805\u5f0f\u306b\u3088\u308b\u8fd1\u4f3c\u3067\u3057\u305f\u3002\n\u6c42\u3081\u305f\u3044\u9006\u95a2\u6570\u306f\u5358\u8abf\u5897\u52a0\u95a2\u6570\u3060\u3057\u3001\u591a\u9805\u5f0f\u3067\u3082\u305d\u3053\u305d\u3053\u306e\u7cbe\u5ea6\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u3064\u307e\u308a\u3001\u9006\u95a2\u6570\u3092\n$ y = a_0 + a_1x + a_2x^{2} + ...$\n\u3068\u3044\u3046\u3088\u3046\u306b\u8868\u3059\u3053\u3068\u3067\u3001\u8fd1\u3044\u5024\u3092\u5f97\u3089\u308c\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u76ee\u8ad6\u898b\u3067\u3059\u3002\n\n\u591a\u9805\u5f0f\u306e\u6c42\u3081\u65b9\n\u554f\u984c\u3068\u306a\u308b\u306e\u306f\u591a\u9805\u5f0f\u306e\u4fc2\u6570 $a_0, a_1, a_2, ...$\u3092\u6c7a\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u591a\u9805\u5f0f\u3067\u5f97\u3089\u308c\u308b$y$\u306e\u5024\u3068\u771f\u306e\u5024\u3068\u306e\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u4fc2\u6570\u3092\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nscikit-learn\u306f\u6a5f\u68b0\u5b66\u7fd2\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u591a\u9805\u5f0f\u306e\u4fc2\u6570\u3092\u81ea\u52d5\u7684\u306b\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u751f\u6210\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u306e\u305f\u3081\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nNotebook\ndef involute(\u03b1):\n    return np.tan(\u03b1) - \u03b1\n\n\n\nNotebook\ny = np.linspace(- np.pi / 4, np.pi / 4, 1000)\nx = involute(y)\n\n\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u6163\u4f8b\u306b\u5408\u308f\u305b\u3066\u5165\u529b\uff08$inv\\alpha$\uff09\u3092$x$\u3001\u51fa\u529b\uff08$\\alpha$\uff09\u3092$y$\u3068\u3057\u3066\u3044\u307e\u3059\u3002$y$\uff08$\\alpha$\uff09\u306e\u5024\u3092\u5148\u306b\u7528\u610f\u3057\u3066\u3001\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\u3092\u4f7f\u3063\u3066$x$\uff08$inv\\alpha$\uff09\u306e\u5024\u3092\u6c42\u3081\u3066\u3001\u305d\u308c\u3092\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u3057\u307e\u3059\u3002\n\nscikit-learn\u3092\u4f7f\u3063\u305f\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\nscikit-learn\u3092\u4f7f\u3046\u3068\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\u3092\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\nNotebook\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import make_pipeline\n\n\n\u4e0a\u3067\u751f\u6210\u3057\u305f\u8a13\u7df4\u30c7\u30fc\u30bf\u306f1\u6b21\u5143\u914d\u5217\u3067\u3059\u304c\u3001scikit-learn\u3067\u306f\u30c7\u30fc\u30bf\u306f\u5217\u30d9\u30af\u30c8\u30eb\u304c\u57fa\u672c\u306a\u306e\u3067\u5217\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\nNotebook\nx_column = x.reshape(-1, 1)\ny_column = y.reshape(-1, 1)\n\n\n\u307e\u305a\u306f10\u6b21\u591a\u9805\u5f0f\u3092\u30d5\u30a3\u30c3\u30c8\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\nNotebook\nmodel_poly = make_pipeline(PolynomialFeatures(degree=10), LinearRegression())\nmodel_poly.fit(x_column, y_column)\nmodel_poly.score(x_column, y_column)\n\n\n\noutput\n0.95581676585298314\n\n\nPolynomialFeatures(degree=10)\u306f10\u6b21\u591a\u9805\u5f0f\u3078\u306e\u5909\u63db\u3001LinearRegression()\u306f\u7dda\u5f62\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u751f\u6210\u3067\u3001\u305d\u308c\u3089\u3092make_pipeline\u95a2\u6570\u3067\u7d44\u307f\u5408\u308f\u305b\u3066\u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306efit\u30e1\u30bd\u30c3\u30c9\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3066\u3001\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\nscore\u30e1\u30bd\u30c3\u30c9\u306f\u3069\u306e\u7a0b\u5ea6\u306e\u63a8\u5b9a\u7cbe\u5ea6\u304c\u3042\u308b\u304b\u3092\u6570\u5024\u3067\u8a55\u4fa1\u3057\u307e\u3059\u3002\u3053\u306e\u5024\u304c1.0\u306a\u3089\u5b8c\u74a7\u306b\u63a8\u5b9a\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u306b\u3088\u308b\u63a8\u5b9a\u5024\u306e\u30d7\u30ed\u30c3\u30c8\n\u3067\u306f\u3001\u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u3067\u63a8\u5b9a\u3057\u305f\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nNotebook\ny_pred = model_poly.predict(x_column).flatten()\nfig = figure(width=400, height=400)\nfig.scatter(x, np.degrees(y), size=1, legend='\u771f\u5024')\nfig.line(x, np.degrees(y_pred), line_color='orange', legend='\u63a8\u5b9a\u5024')\nfig.xaxis.axis_label = 'inv\u03b1'\nfig.yaxis.axis_label = '\u5727\u529b\u89d2\u03b1 (deg)'\nfig.legend.location = 'top_left'\nshow(fig)\n\n\n\npredict\u30e1\u30bd\u30c3\u30c9\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u63a8\u5b9a\u5024\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\u5f97\u3089\u308c\u305f\u63a8\u5b9a\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u7d50\u679c\u304c\u4e0a\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u63a8\u5b9a\u7cbe\u5ea6\u304c\u60aa\u3059\u304e\u307e\u3059\u306d\u3002\n\u6b21\u6570\u309220\u6b21\u306b\u5897\u3084\u3057\u3066\u307f\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\nNotebook\nmodel_poly = make_pipeline(PolynomialFeatures(degree=20), LinearRegression())\nmodel_poly.fit(x_column, y_column)\nmodel_poly.score(x_column, y_column)\n\n\n\noutput\n0.97492606041826035\n\n\n\nNotebook\ny_pred = model_poly.predict(x_column).flatten()\nfig = figure(width=400, height=400)\nfig.scatter(x, np.degrees(y), size=1, legend='\u771f\u5024')\nfig.line(x, np.degrees(y_pred), line_color='orange', legend='\u63a8\u5b9a\u5024')\nfig.xaxis.axis_label = 'inv\u03b1'\nfig.yaxis.axis_label = '\u5727\u529b\u89d2\u03b1 (deg)'\nfig.legend.location = 'top_left'\nshow(fig)\n\n\n\n20\u6b21\u306b\u5897\u3084\u3057\u3066\u3082\u5909\u52d5\u306e\u6ce2\u304c\u5c0f\u523b\u307f\u306b\u306a\u308b\u3060\u3051\u3067\u3001\u3042\u307e\u308a\u6539\u5584\u306f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u306e\u307e\u307e\u6b21\u6570\u3092\u5897\u3084\u3057\u3066\u3082\u826f\u304f\u306a\u308a\u305d\u3046\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u591a\u9805\u5f0f\u56de\u5e30\u3067\u306f\u3046\u307e\u304f\u63a8\u5b9a\u3067\u304d\u306a\u3044\u7406\u7531\n\u539f\u70b9\u4ed8\u8fd1\u306e\u52fe\u914d\u304c\u5927\u304d\u3044\u3053\u3068\u304c\u591a\u9805\u5f0f\u56de\u5e30\u3067\u3046\u307e\u304f\u63a8\u5b9a\u3067\u304d\u306a\u3044\u539f\u56e0\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570\u306f\u539f\u70b9\u3067\u52fe\u914d\u304c\u7121\u9650\u5927\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u591a\u9805\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\u7d76\u5bfe\u306b\u7121\u9650\u5927\u306e\u52fe\u914d\u306f\u8868\u73fe\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u8aac\u660e\u306b\u4f7f\u3063\u305fNotebook\u306fGist\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570\u306e\u63a8\u5b9a_\u591a\u9805\u5f0f\u56de\u5e30.ipynb\n## \u554f\u984c\u306e\u78ba\u8a8d\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\n$f(\\alpha) = tan\\ \\alpha - \\alpha$\n\u306e\u9006\u95a2\u6570 $f^{-1}$\u3092\u6c42\u3081\u307e\u3059\u3002\n\n<img width=\"413\" alt=\"\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/4c9853b4-04dc-8fea-3c8d-aaf9a9a770c6.png\">\n\n\u8a73\u3057\u3044\u5185\u5bb9\u306f\u5c0e\u5165\u7de8\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n[\u3042\u308b\u95a2\u6570\u306e\u9006\u95a2\u6570\u3092\u6570\u5024\u7684\u306b\u4f5c\u308b\u3044\u308d\u3044\u308d\u306a\u65b9\u6cd5\u3000\u5c0e\u5165\u7de8 - Qiita](http://qiita.com/alchemist/items/5c32f2c38f2db3ea74bd)\n\n\n## \u9006\u95a2\u6570\u3092\u8868\u3059\u65b9\u6cd5\n\u6700\u521d\u306b\u601d\u3044\u3064\u3044\u305f\u65b9\u6cd5\u306f\u591a\u9805\u5f0f\u306b\u3088\u308b\u8fd1\u4f3c\u3067\u3057\u305f\u3002\n\u6c42\u3081\u305f\u3044\u9006\u95a2\u6570\u306f\u5358\u8abf\u5897\u52a0\u95a2\u6570\u3060\u3057\u3001\u591a\u9805\u5f0f\u3067\u3082\u305d\u3053\u305d\u3053\u306e\u7cbe\u5ea6\u3067\u8fd1\u4f3c\u3067\u304d\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\u3064\u307e\u308a\u3001\u9006\u95a2\u6570\u3092\n$ y = a_0 + a_1x + a_2x^{2} + ...$\n\u3068\u3044\u3046\u3088\u3046\u306b\u8868\u3059\u3053\u3068\u3067\u3001\u8fd1\u3044\u5024\u3092\u5f97\u3089\u308c\u308b\u3060\u308d\u3046\u3068\u3044\u3046\u76ee\u8ad6\u898b\u3067\u3059\u3002\n\n\n## \u591a\u9805\u5f0f\u306e\u6c42\u3081\u65b9\n\u554f\u984c\u3068\u306a\u308b\u306e\u306f\u591a\u9805\u5f0f\u306e\u4fc2\u6570 $a_0, a_1, a_2, ...$\u3092\u6c7a\u5b9a\u3059\u308b\u65b9\u6cd5\u3067\u3059\u3002\u591a\u9805\u5f0f\u3067\u5f97\u3089\u308c\u308b$y$\u306e\u5024\u3068\u771f\u306e\u5024\u3068\u306e\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u4fc2\u6570\u3092\u6c7a\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nscikit-learn\u306f\u6a5f\u68b0\u5b66\u7fd2\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u3053\u308c\u3092\u4f7f\u3048\u3070\u591a\u9805\u5f0f\u306e\u4fc2\u6570\u3092\u81ea\u52d5\u7684\u306b\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n### \u8a13\u7df4\u30c7\u30fc\u30bf\u306e\u751f\u6210\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u306e\u305f\u3081\u306e\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```py3:Notebook\ndef involute(\u03b1):\n    return np.tan(\u03b1) - \u03b1\n```\n\n```py3:Notebook\ny = np.linspace(- np.pi / 4, np.pi / 4, 1000)\nx = involute(y)\n```\n\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u6163\u4f8b\u306b\u5408\u308f\u305b\u3066\u5165\u529b\uff08$inv\\alpha$\uff09\u3092$x$\u3001\u51fa\u529b\uff08$\\alpha$\uff09\u3092$y$\u3068\u3057\u3066\u3044\u307e\u3059\u3002$y$\uff08$\\alpha$\uff09\u306e\u5024\u3092\u5148\u306b\u7528\u610f\u3057\u3066\u3001\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u95a2\u6570\u3092\u4f7f\u3063\u3066$x$\uff08$inv\\alpha$\uff09\u306e\u5024\u3092\u6c42\u3081\u3066\u3001\u305d\u308c\u3092\u8a13\u7df4\u30c7\u30fc\u30bf\u3068\u3057\u307e\u3059\u3002\n\n### scikit-learn\u3092\u4f7f\u3063\u305f\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\nscikit-learn\u3092\u4f7f\u3046\u3068\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\u3092\u7c21\u5358\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n\n```py3:Notebook\nfrom sklearn.preprocessing import PolynomialFeatures\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.pipeline import make_pipeline\n```\n\n\u4e0a\u3067\u751f\u6210\u3057\u305f\u8a13\u7df4\u30c7\u30fc\u30bf\u306f1\u6b21\u5143\u914d\u5217\u3067\u3059\u304c\u3001scikit-learn\u3067\u306f\u30c7\u30fc\u30bf\u306f\u5217\u30d9\u30af\u30c8\u30eb\u304c\u57fa\u672c\u306a\u306e\u3067\u5217\u30d9\u30af\u30c8\u30eb\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```py3:Notebook\nx_column = x.reshape(-1, 1)\ny_column = y.reshape(-1, 1)\n```\n\n\u307e\u305a\u306f10\u6b21\u591a\u9805\u5f0f\u3092\u30d5\u30a3\u30c3\u30c8\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\n```py3:Notebook\nmodel_poly = make_pipeline(PolynomialFeatures(degree=10), LinearRegression())\nmodel_poly.fit(x_column, y_column)\nmodel_poly.score(x_column, y_column)\n```\n\n```:output\n0.95581676585298314\n```\n\n`PolynomialFeatures(degree=10)`\u306f10\u6b21\u591a\u9805\u5f0f\u3078\u306e\u5909\u63db\u3001`LinearRegression()`\u306f\u7dda\u5f62\u56de\u5e30\u30e2\u30c7\u30eb\u306e\u751f\u6210\u3067\u3001\u305d\u308c\u3089\u3092make_pipeline\u95a2\u6570\u3067\u7d44\u307f\u5408\u308f\u305b\u3066\u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u3044\u307e\u3059\u3002\n\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306efit\u30e1\u30bd\u30c3\u30c9\u306b\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3066\u3001\u591a\u9805\u5f0f\u306e\u30d5\u30a3\u30c3\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\nscore\u30e1\u30bd\u30c3\u30c9\u306f\u3069\u306e\u7a0b\u5ea6\u306e\u63a8\u5b9a\u7cbe\u5ea6\u304c\u3042\u308b\u304b\u3092\u6570\u5024\u3067\u8a55\u4fa1\u3057\u307e\u3059\u3002\u3053\u306e\u5024\u304c1.0\u306a\u3089\u5b8c\u74a7\u306b\u63a8\u5b9a\u3067\u304d\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u306b\u3088\u308b\u63a8\u5b9a\u5024\u306e\u30d7\u30ed\u30c3\u30c8\n\u3067\u306f\u3001\u591a\u9805\u5f0f\u56de\u5e30\u30e2\u30c7\u30eb\u3067\u63a8\u5b9a\u3057\u305f\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```py3:Notebook\ny_pred = model_poly.predict(x_column).flatten()\nfig = figure(width=400, height=400)\nfig.scatter(x, np.degrees(y), size=1, legend='\u771f\u5024')\nfig.line(x, np.degrees(y_pred), line_color='orange', legend='\u63a8\u5b9a\u5024')\nfig.xaxis.axis_label = 'inv\u03b1'\nfig.yaxis.axis_label = '\u5727\u529b\u89d2\u03b1 (deg)'\nfig.legend.location = 'top_left'\nshow(fig)\n```\n<img width=\"411\" alt=\"\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570_10\u6b21\u591a\u9805\u5f0f.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/db685f0f-6c98-05a7-ce7b-562451d9764f.png\">\n\npredict\u30e1\u30bd\u30c3\u30c9\u306b\u5165\u529b\u5024\u3092\u4e0e\u3048\u3066\u63a8\u5b9a\u5024\u3092\u6c42\u3081\u3066\u3044\u307e\u3059\u3002\n\u5f97\u3089\u308c\u305f\u63a8\u5b9a\u5024\u3092\u30d7\u30ed\u30c3\u30c8\u3057\u305f\u7d50\u679c\u304c\u4e0a\u306e\u30b0\u30e9\u30d5\u3067\u3059\u3002\n\u63a8\u5b9a\u7cbe\u5ea6\u304c\u60aa\u3059\u304e\u307e\u3059\u306d\u3002\n\n\u6b21\u6570\u309220\u6b21\u306b\u5897\u3084\u3057\u3066\u307f\u308b\u3068\u3069\u3046\u3067\u3057\u3087\u3046\u304b\u3002\n\n```py3:Notebook\nmodel_poly = make_pipeline(PolynomialFeatures(degree=20), LinearRegression())\nmodel_poly.fit(x_column, y_column)\nmodel_poly.score(x_column, y_column)\n```\n```:output\n0.97492606041826035\n```\n```py3:Notebook\ny_pred = model_poly.predict(x_column).flatten()\nfig = figure(width=400, height=400)\nfig.scatter(x, np.degrees(y), size=1, legend='\u771f\u5024')\nfig.line(x, np.degrees(y_pred), line_color='orange', legend='\u63a8\u5b9a\u5024')\nfig.xaxis.axis_label = 'inv\u03b1'\nfig.yaxis.axis_label = '\u5727\u529b\u89d2\u03b1 (deg)'\nfig.legend.location = 'top_left'\nshow(fig)\n```\n<img width=\"411\" alt=\"\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570_20\u6b21\u591a\u9805\u5f0f.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/16dc5b27-4fbd-de16-8b5a-816ec1a35090.png\">\n\n20\u6b21\u306b\u5897\u3084\u3057\u3066\u3082\u5909\u52d5\u306e\u6ce2\u304c\u5c0f\u523b\u307f\u306b\u306a\u308b\u3060\u3051\u3067\u3001\u3042\u307e\u308a\u6539\u5584\u306f\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u306e\u307e\u307e\u6b21\u6570\u3092\u5897\u3084\u3057\u3066\u3082\u826f\u304f\u306a\u308a\u305d\u3046\u306b\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n## \u591a\u9805\u5f0f\u56de\u5e30\u3067\u306f\u3046\u307e\u304f\u63a8\u5b9a\u3067\u304d\u306a\u3044\u7406\u7531\n\u539f\u70b9\u4ed8\u8fd1\u306e\u52fe\u914d\u304c\u5927\u304d\u3044\u3053\u3068\u304c\u591a\u9805\u5f0f\u56de\u5e30\u3067\u3046\u307e\u304f\u63a8\u5b9a\u3067\u304d\u306a\u3044\u539f\u56e0\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570\u306f\u539f\u70b9\u3067\u52fe\u914d\u304c\u7121\u9650\u5927\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u591a\u9805\u5f0f\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\u7d76\u5bfe\u306b\u7121\u9650\u5927\u306e\u52fe\u914d\u306f\u8868\u73fe\u3067\u304d\u307e\u305b\u3093\u3002\n\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u8aac\u660e\u306b\u4f7f\u3063\u305fNotebook\u306fGist\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n[\u30a4\u30f3\u30dc\u30ea\u30e5\u30fc\u30c8\u9006\u95a2\u6570\u306e\u63a8\u5b9a_\u591a\u9805\u5f0f\u56de\u5e30.ipynb](http://nbviewer.jupyter.org/gist/yin-yang-alchemist/c00dcc305c74f96a339ca144117d3871)\n", "tags": ["Python", "scikit-learn", "\u6570\u5b66"]}