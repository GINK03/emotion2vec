{"context": " More than 1 year has passed since last update.\u6bce\u56deURLConnection\u3092\u958b\u304d\u76f4\u3057\u3066\u308b\u306e\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3067\u767a\u884c\u3055\u308c\u308bCookie\u304c\u7dad\u6301\u3067\u304d\u306a\u3044\n\u306a\u306e\u3067CookieManager\u3092\u4f7f\u3063\u3066Cookie\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\njson_client.groovy\nimport groovy.swing.SwingBuilder\nimport groovy.json.JsonOutput\nimport groovy.beans.Bindable\nimport javax.swing.*\nimport java.awt.*\nimport java.net.*\n\ndef manager = new CookieManager()\nmanager.cookiePolicy = CookiePolicy.ACCEPT_ALL\nCookieHandler.default = manager\n\n@Bindable\nclass Model {\n    String method = 'GET'\n    String url = ''\n    String params = ''\n    String json = ''\n}\ndef model = new Model()\n\ndef tabPane\n\ndef prettyPrint = { text ->\n    def result = JsonOutput.prettyPrint(text)\n    (result =~ /\\\\u[0-9a-zA-Z]{4}/).each { match ->\n        def code = match[2..5]\n        def encTxt = new String([Integer.parseInt(code, 16)] as int[], 0, 1)\n        result = result.replaceAll(/\\\\u${code}/, encTxt)\n    }\n    result\n}\n\ndef sendRequest = {\n    model.json = ''\n\n    def method = model.method\n    def url = model.url\n    def params = URLEncoder.encode(model.params, 'utf-8').replaceAll('%3D', '=').replaceAll('%26', '&')\n    if (method == 'GET') {\n        url = \"${url}?${params}\"\n    }\n\n    def conn = url.toURL().openConnection()\n    conn.requestMethod = method\n    if (method == 'POST') {\n        conn.doOutput = true\n        conn.outputStream << params\n    }\n\n    model.json = prettyPrint(conn.inputStream.getText('utf-8'))\n    tabPane.selectedIndex = 1\n}\n\nnew SwingBuilder().frame(title:'json\u3092\u53d6\u5f97\u3001\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3', defaultCloseOperation:JFrame.EXIT_ON_CLOSE,\n                        size: [800, 600], show:true) {\n    lookAndFeel('nimbus')\n    borderLayout()\n    hbox(constraints: BorderLayout.NORTH) {\n        comboBox(items:['GET', 'POST'], selectedItem:bind(source: model, sourceProperty: 'method', mutual: true))\n        textField(text:bind(source: model, sourceProperty: 'url', mutual: true))\n        button(text:'\u9001\u4fe1', actionPerformed:sendRequest)\n    }\n    tabPane = tabbedPane(constraints: BorderLayout.CENTER) {\n        scrollPane(name:'\u30d1\u30e9\u30e1\u30fc\u30bf') {\n            textArea(text:bind(source: model, sourceProperty: 'params', mutual: true))\n        }\n        scrollPane(name:'\u30ec\u30b9\u30dd\u30f3\u30b9') {\n            textArea(editable:false, text:bind {model.json})\n        }\n    }\n}\n\n\n\n\u6bce\u56deURLConnection\u3092\u958b\u304d\u76f4\u3057\u3066\u308b\u306e\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u3067\u767a\u884c\u3055\u308c\u308bCookie\u304c\u7dad\u6301\u3067\u304d\u306a\u3044\n\u306a\u306e\u3067CookieManager\u3092\u4f7f\u3063\u3066Cookie\u3092\u53d7\u3051\u5165\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n```groovy:json_client.groovy\nimport groovy.swing.SwingBuilder\nimport groovy.json.JsonOutput\nimport groovy.beans.Bindable\nimport javax.swing.*\nimport java.awt.*\nimport java.net.*\n\ndef manager = new CookieManager()\nmanager.cookiePolicy = CookiePolicy.ACCEPT_ALL\nCookieHandler.default = manager\n\n@Bindable\nclass Model {\n\tString method = 'GET'\n\tString url = ''\n\tString params = ''\n\tString json = ''\n}\ndef model = new Model()\n\ndef tabPane\n\ndef prettyPrint = { text ->\n\tdef result = JsonOutput.prettyPrint(text)\n\t(result =~ /\\\\u[0-9a-zA-Z]{4}/).each { match ->\n\t\tdef code = match[2..5]\n\t\tdef encTxt = new String([Integer.parseInt(code, 16)] as int[], 0, 1)\n\t\tresult = result.replaceAll(/\\\\u${code}/, encTxt)\n\t}\n\tresult\n}\n\ndef sendRequest = {\n\tmodel.json = ''\n\t\n\tdef method = model.method\n\tdef url = model.url\n\tdef params = URLEncoder.encode(model.params, 'utf-8').replaceAll('%3D', '=').replaceAll('%26', '&')\n\tif (method == 'GET') {\n\t\turl = \"${url}?${params}\"\n\t}\n\t\n\tdef conn = url.toURL().openConnection()\n\tconn.requestMethod = method\n\tif (method == 'POST') {\n\t\tconn.doOutput = true\n\t\tconn.outputStream << params\n\t}\n\t\n\tmodel.json = prettyPrint(conn.inputStream.getText('utf-8'))\n\ttabPane.selectedIndex = 1\n}\n\nnew SwingBuilder().frame(title:'json\u3092\u53d6\u5f97\u3001\u8868\u793a\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3', defaultCloseOperation:JFrame.EXIT_ON_CLOSE,\n\t\t\t\t\t\tsize: [800, 600], show:true) {\n\tlookAndFeel('nimbus')\n\tborderLayout()\n\thbox(constraints: BorderLayout.NORTH) {\n\t\tcomboBox(items:['GET', 'POST'], selectedItem:bind(source: model, sourceProperty: 'method', mutual: true))\n\t\ttextField(text:bind(source: model, sourceProperty: 'url', mutual: true))\n\t\tbutton(text:'\u9001\u4fe1', actionPerformed:sendRequest)\n\t}\n\ttabPane = tabbedPane(constraints: BorderLayout.CENTER) {\n\t\tscrollPane(name:'\u30d1\u30e9\u30e1\u30fc\u30bf') {\n\t\t\ttextArea(text:bind(source: model, sourceProperty: 'params', mutual: true))\n\t\t}\n\t\tscrollPane(name:'\u30ec\u30b9\u30dd\u30f3\u30b9') {\n\t\t\ttextArea(editable:false, text:bind {model.json})\n\t\t}\n\t}\n}\n```\n\n![qiita-008.png](https://qiita-image-store.s3.amazonaws.com/0/17179/41b70ff0-4171-0fa5-c842-c19b7459169a.png)\n", "tags": ["Groovy"]}