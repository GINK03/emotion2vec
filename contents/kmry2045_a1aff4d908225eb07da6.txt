{"context": " More than 1 year has passed since last update.\u606f\u9577\u304fNeo4J\u3092\u8a66\u3057\u3066\u3044\u3053\u3046\u3001\u306escala\u7de8\nNeo4J\u306e\u30af\u30a8\u30ea\u8a00\u8a9eCypher\u305d\u306e\u3082\u306e\u304cscala\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u3001\u4e00\u756a\u5bb9\u6613\u306b\u6271\u3048\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\u3001github\u4e0a\u3067\u306f\u3001\u30de\u30a4\u30ca\u30fc\u306a\"\u3055\u3044\u304d\u3087\u3046DSL\"\u304c\u3044\u304f\u3064\u3082\u51fa\u3067\u304d\u3066\u4f7f\u3044\u65b9\u306b\u8ff7\u3046\u3002RDB\u3068\u306f\u4f5c\u308a\u304c\u9055\u3046\u308f\u3051\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u8005\u306e\u7686\u3055\u3093\u3082\u8a66\u884c\u932f\u8aa4\u3057\u306a\u304c\u3089\u306a\u306e\u3060\u308d\u3046\u3002\n\u4eca\u56de\u306f\u3001\u305d\u306e\u4e2d\u3067\u7121\u96e3\u305d\u3046\u306aAnormCypher\u3092\u8a66\u3059(Anorm\u306f\u3001Scala/Java\u306eWAF Play!\u306e\u6a19\u6e96ORM\u306e\u540d\u524d)\u3002\n\n1) AnormCypher\u304a\u8a66\u3057\n\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u52d5\u304b\u306a\u3044\u3092\u7d4c\u9a13\u3057\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\n\u5fc5\u8981\u306b\u5fdc\u3058\u624b\u3092\u5165\u308c\u308b\u6c17\u6e80\u3005\u3067\u3001\u305d\u306e\u307e\u307eclone\u3057\u3066\u3057\u307e\u3046\u3002\n\ngit clone https://github.com/AnormCypher/AnormCypher\n\n\u3056\u3063\u3068\u773a\u3081\u308b\u3068\u3001Neo4jREST\u30af\u30e9\u30b9\u3067Neo4J\u306eJSON API\u306b\u63a5\u7d9a\u3059\u308b\u3089\u3057\u3044\u3002\n\nsrc/main/scala/org/anormcypher/Neo4jREST.scala\npackage org.anormcypher\n\nimport play.api.libs.json._, Json._\nimport play.api.libs.ws._\nimport scala.concurrent._\n\nclass Neo4jREST(wsclient: WSClient,\n  val host: String = \"localhost\", val port: Int = 7474, val path: String = \"/db/data/\",\n                val username: String = \"\", val password: String = \"\",\n                val cypherEndpoint: String = \"cypher\", val https: Boolean = false) {\n\n  private val headers = Seq(\n    \"Accept\" -> \"application/json\",\n    \"Content-Type\" -> \"application/json\",\n    \"X-Stream\" -> \"true\",\n    \"User-Agent\" -> \"AnormCypher/0.7.0\"\n  )\n(\u7565)\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6587\u66f8\u3082\u53c2\u8003\u306b\u3001\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u76f4\u4e0b\u3042\u305f\u308a\u306b\u3001\u304a\u8a66\u3057\u6e96\u5099\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\notameshi.scala\npackage kmr\nimport org.anormcypher._\nimport play.api.libs.ws._\n\nobject TEST {\n\n  // Provide an instance of WSClient\n  val wsclient = ning.NingWSClient()\n\n  // Setup the Rest Client\n  implicit val connection = Neo4jREST(username=\"neo4j\", password=\"aggrega4\")(wsclient)\n\n  // Provide an ExecutionContext\n  implicit val ec = scala.concurrent.ExecutionContext.global\n\n  // create some test nodes\n  val result = Cypher(\"\"\"\n    create (germany {name:\"Germany\", population:81726000, type:\"Nation\", code:\"DEU\"}),\n          (france {name:\"France\", population:65436552, type:\"Nation\", code:\"FRA\", indepYear:1790}),\n          (japan {name:\"\u65e5\u672c\", population:115436552, type:\"Nation\", code:\"JPN\", indepYear:790}),\n           (monaco {name:\"Monaco\", population:32000, type:\"Nation\", code:\"MCO\"});\n    \"\"\").execute()\n  val allNations = Cypher(\"start n=node(*) where n.type = 'Nation' return n.code as code, n.name as name\")\n\n  lazy val nations = allNations.apply().map(row =>\n    row[String](\"code\") -> row[String](\"name\")\n  ).toList\n\n  // shut down WSClient\n  def close ()= wsclient.close()\n}\n\n\nsbt\u3067REPL console\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002\n\nsbt console\n\n(\u3053\u3053\u3067\u3001\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7d9a\u3005\u3068\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b)\nREPL\u3067\u306f\u3001\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u304a\u8a66\u3057\u304c\u3067\u304d\u308b(\u65e5\u672c\u8a9e\u3082\u554f\u984c\u306a\u304f\u6c38\u7d9a\u5316\u3067\u304d\u3066\u3044\u308b)\u3002\nscala> import kmr._\nimport kmr._\n\nscala> val nations_lst = TEST.nations\nnations_lst: List[(String, String)] = List((DEU,Germany), (FRA,France), (JPN,\u65e5\u672c), (MCO,Monaco))\n\nscala> nations_lst foreach print _\n(DEU,Germany)(FRA,France)(JPN,\u65e5\u672c)(MCO,Monaco)\n\nNeo4J\u306e\u30d6\u30e9\u30a6\u30b6\u5074\u304b\u3089\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b5\u30fc\u30c8\u72b6\u6cc1\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\nMATCH (n) WHERE n.type = \"Nation\" RETURN n;\n\n...\u8907\u6570\u56de\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u56de\u6570\u5206\u3060\u3051\u30a4\u30f3\u30b5\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3001\u3001\u3001\n\n2) Play!\u3067redis+neo4J !?\n\"Authentication & Social Graph API built on top of Redis, Neo4J and Play!\"\n\u3068\u3044\u3046\u3001social-graph-api\u3092\u8a66\u3057\u3066\u306f\u308b\u3002\u3053\u3061\u3089\u3001\u88cf\u3067anormcypher\u3092\u4f7f\u3063\u3066\u3044\u308b\n\n\u6e96\u5099\u4f5c\u696d\nredis\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001\u7acb\u3061\u4e0a\u3052\u3066\u304a\u304f(Mac\u3067\u306fbrew\u3067\u7c21\u5358\u306b\u5165\u308b)\u3002\nneo4J\u3082\u7acb\u3061\u4e0a\u3052\u305f\u307e\u307e\u3002\n\u305d\u306e\u4e0a\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6301\u3063\u3066\u304d\u3066\u3001\n\ngit clone https://github.com/gvolpe/social-graph-api\n\n\u5404\u7a2e\u8a2d\u5b9a\u3092conf\u306b\u9069\u5207\u306b\u66f8\u304f\u3002\n\n\u624b\u76f4\u3057\u306a\u3069...\nactivator\u3092\u7acb\u3061\u4e0a\u3052\u3066run\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3060\u304c\u3001anormcypher\u304c\u5165\u3089\u306a\u3044\u3068\u6012\u3089\u308c\u308b\u3002\n\u4f55\u304b\u3068\u3044\u3046\u3068\u3001sbt\u304c\u898b\u306b\u884c\u304fanormcypher\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u843d\u3061\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067build.sbt\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3002\n\n//  \"org.anormcypher\" %% \"anormcypher\" % \"\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u53e4\u304b\u3063\u305f\",\n\n\u5148\u307b\u3069\u306eanormcypher\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089sbt package\u3057\u3066jar\u3092\u751f\u6210\u3057\u3066\u3001social-graph-api\u5074\u306elib\u30d5\u30a9\u30eb\u30c0\u306b\u3044\u308c\u308b(Play!\u306e\u4f1d\u7d71\u7684\u306abad practice)\u3002\n\u3055\u3089\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u9055\u3044\u3067\u3001org.anormcypher.Neo4jREST\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3082\u4e00\u90e8\u5909\u66f4\u3002\n\u3061\u3087\u3046\u3069\u3001Play!\u5074\u304b\u3089Neo4J\u3092REST\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3068\u3057\u3066\u53c2\u8003\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3082\u3042\u308b\u306e\u3067\u3001\u8f09\u305b\u3066\u304a\u304f:\n\n\u6539\u8a02\u7248_app/repository/Neo4JConnection.scala\npackage repository\n\nimport org.anormcypher.Neo4jREST\nimport play.api.Play\nimport play.api.Play.current\nimport play.api.libs.ws.ning.NingWSClient\nimport com.ning.http.client.AsyncHttpClientConfig\nobject Neo4JConnection {\n\n  // \u3053\u306e\u90e8\u5206\u306e\u5b9f\u88c5\u304c\u8fd1\u6642\u5909\u308f\u3063\u305f\u3089\u3057\u3044\n  val builder = new AsyncHttpClientConfig.Builder()\n  val wsclient = new NingWSClient(builder.build())\n\n  def apply(): Neo4jREST = {\n    val config = Neo4JConfig()\n    if (config.path.isDefined && config.username.isDefined)\n      Neo4jREST(\n        host = config.host,\n        port = config.port,\n        path = config.path.getOrElse(\"/db/data/\"),\n        username = config.username.getOrElse(\"\"),\n        password = config.password.getOrElse(\"\"),\n        cypherEndpoint = config.cypherEndpoint.getOrElse(\"cypher\"),\n        https = config.https.getOrElse(false))(wsclient)\n    else\n      Neo4jREST()(wsclient)\n\n  }\n(\u4ee5\u4e0b\u306f\u5143\u30bd\u30fc\u30b9\u3068\u540c\u3058)\n\n\n\n\u304a\u8a66\u3057\u30bf\u30a4\u30e0\n(\u524d\u63d0)\u3000Play!2.4.3 Redis3.0.5 Neo4J\u304c\u3044\u305a\u308c\u3082\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u306e\u30dd\u30fc\u30c8\u3067\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u3002\nlive Demo\u3082\u3042\u308b\u306e\u3060\u304c : https://social-graph-api.herokuapp.com/\n\u8a8d\u8a3c\u5468\u308a\u304c\u52d5\u3044\u3066\u3044\u306a\u3044(\u304a\u305d\u3089\u304f\u3001redis\u306e\u8a2d\u5b9a\u3042\u305f\u308a)\nAPI\u4e00\u89a7\u306f\u3053\u3093\u306a\u611f\u3058:\n\nconf.routes\n# Authentication\n\nPOST    /auth/signin                        controllers.AuthController.signIn\nPOST    /auth/signup                        controllers.AuthController.signUp\nGET     /auth/admin                         controllers.AuthController.adminAction\n\n# Users API\n\nGET     /api/v1/users                       controllers.UserController.findUsers\nGET     /api/v1/users/:id                   controllers.UserController.findUserById(id: Long)\nPOST    /api/v1/users                       controllers.UserController.createUser\nDELETE  /api/v1/users/:id                   controllers.UserController.deleteUser(id: Long)\n\n# Social Graph API\n\nGET     /api/v1/followers/:id               controllers.RelationshipController.findFollowers(id: Long)\nGET     /api/v1/friends/:id                 controllers.RelationshipController.findFriends(id: Long)\nPOST    /api/v1/friendship                  controllers.RelationshipController.createFriendship\nDELETE  /api/v1/friendship                  controllers.RelationshipController.deleteFriendship\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file                       controllers.Assets.at(path=\"/public\", file)\n\n\nREST API\u30a2\u30d7\u30ea\u306a\u306e\u3067\u3001\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u884c\u3046\u3002\n\ncurl -X POST -H \"Content-Type: application/json\" -d '{ \"identifier\": \"kmry@github.com\", \"password\":\"123456\" }' http://localhost:9000/auth/signup\n\n\u518d\u5ea6\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u306f\u3053\u3061\u3089\u3002\n\ncurl -X POST -H \"Content-Type: application/json\" -d '{ \"identifier\": \"kmry@github.com\", \"password\":\"123456\" }' http://localhost:9000/auth/signin\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u3001token\u304c\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u3053\u307e\u3067\u306f\u52d5\u4f5c\u3057\u305f\u306e\u3060\u304c\u3001token\u306e\u51e6\u7406\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3089\u3057\u304f\u3001\nUsers API&Social Graph API\u304c\u6b8b\u5ff5\u306a\u304c\u3089\u4f7f\u3048\u306a\u3044\u3002\n\nsilhouette\u30e9\u30a4\u30d6\u30e9\u30ea\n\u5927\u4f53\u306e\u51e6\u7406\u306e\u6d41\u308c\u306f\u308f\u304b\u3063\u305f\u306e\u3067\u3001\u672c\u30a2\u30d7\u30ea\u306e\u8a8d\u8a3c\u5468\u308a\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308bsilhouette\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u672c\u5bb6\u306b\u3044\u3063\u3066\u307f\u308b\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3055\u307e\u3056\u307e\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3063\u305f\u4f8b\u984c\u304c\u4e26\u3093\u3067\u3044\u308b(\u5272\u5408\u3068\u30e1\u30b8\u30e3\u30fc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3089\u3057\u3044)\u3002\nhttp://silhouette.mohiva.com/v3.0/docs/examples\n\n3) \u6b21\u56de : Play!\u3067\u3001Postgres+Neo4J\nsilhouette\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u306a\u304b\u306a\u304b\u3057\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u306e\u3067\u7d99\u7d9a\u5229\u7528\u3055\u305b\u3066\u3082\u3089\u3046\u3053\u3068\u3068\u3057\u305f\u3002\u305f\u3060\u3057\u3001redis\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068neo4j\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3068\u3057\u305f\u3044(\u3044\u305a\u308c\u306fNeo4J\u5358\u4f53\u3067\u8a8d\u8a3c\u5468\u308a\u3092\u6271\u3046\u306e\u3082\u3042\u308a\u306a\u306e\u304b\u306a...)\u3002\n\u307e\u305a\u306f\u3001\n\"a reactive web application built on Play 2.4, ScalaJS, Silhouette, and postgres-async.\"\u3068\u3044\u3046\u3001\u6c17\u5408\u306e\u5165\u3063\u305f\u69cb\u6210\u306e\u4ee5\u4e0b\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u8a66\u3057\u3066\u3044\u304f\u3002\nhttps://github.com/KyleU/boilerplay\n\u4e8b\u524d\u6e96\u5099\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u3067postgres\u3092\u7acb\u3061\u4e0a\u3052\u3001psql\u7b49\u3067\u30e6\u30fc\u30b6\u30fc\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u7528\u610f\u3059\u308b\u3060\u3051:\nCREATE ROLE boilerplay WITH LOGIN PASSWORD 'password';\nCREATE DATABASE boilerplay;\nGRANT ALL PRIVILEGES ON DATABASE boilerplay TO boilerplay;\n\n\n\u672cboilerplay\u306f\u3001Play!\u672c\u5bb6\u3068\u7570\u306a\u308a\u3001sbt\u306e\u307f\u3067\u6271\u3048\u308b\u3002\n\u5f8c\u6094\u3057\u306a\u3044Play Framework 2\u306ebad parts\u306e\u907f\u3051\u65b9\u306e\u7b2c\u4e00bad parts\u3067\u3042\u308b\n\u72ec\u81eaactivator\u306f\u89e6\u3089\u306a\u304f\u3066\u826f\u3055\u305d\u3046\u3060\u3002\ngit clone https://github.com/KyleU/boilerplay\ncd biolerplay\nsbt run\n\nlocalhost:9000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b:\n\n\u4e00\u901a\u308a\u7121\u96e3\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\u3055\u3066\u3001\u3053\u308c\u3092\u5148\u307b\u3069\u306esocial-graph-api\u3092\u53c2\u8003\u306b\u3001\u3069\u3046\u6599\u7406\u3057\u3066\u3044\u304f\u304b...(\u7d9a\u304f)\n\u606f\u9577\u304fNeo4J\u3092\u8a66\u3057\u3066\u3044\u3053\u3046\u3001\u306escala\u7de8\n\nNeo4J\u306e\u30af\u30a8\u30ea\u8a00\u8a9eCypher\u305d\u306e\u3082\u306e\u304cscala\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u308f\u3051\u3067\u3001\u4e00\u756a\u5bb9\u6613\u306b\u6271\u3048\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\u3001github\u4e0a\u3067\u306f\u3001\u30de\u30a4\u30ca\u30fc\u306a\"\u3055\u3044\u304d\u3087\u3046DSL\"\u304c\u3044\u304f\u3064\u3082\u51fa\u3067\u304d\u3066\u4f7f\u3044\u65b9\u306b\u8ff7\u3046\u3002RDB\u3068\u306f\u4f5c\u308a\u304c\u9055\u3046\u308f\u3051\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u4f5c\u8005\u306e\u7686\u3055\u3093\u3082\u8a66\u884c\u932f\u8aa4\u3057\u306a\u304c\u3089\u306a\u306e\u3060\u308d\u3046\u3002\n\n\u4eca\u56de\u306f\u3001\u305d\u306e\u4e2d\u3067\u7121\u96e3\u305d\u3046\u306aAnormCypher\u3092\u8a66\u3059(Anorm\u306f\u3001Scala/Java\u306eWAF Play!\u306e\u6a19\u6e96ORM\u306e\u540d\u524d)\u3002\n\n#1) AnormCypher\u304a\u8a66\u3057\n\n\u4ed6\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u52d5\u304b\u306a\u3044\u3092\u7d4c\u9a13\u3057\u305f\u3070\u304b\u308a\u306a\u306e\u3067\u3001\n\u5fc5\u8981\u306b\u5fdc\u3058\u624b\u3092\u5165\u308c\u308b\u6c17\u6e80\u3005\u3067\u3001\u305d\u306e\u307e\u307eclone\u3057\u3066\u3057\u307e\u3046\u3002\n> git clone https://github.com/AnormCypher/AnormCypher\n\n\u3056\u3063\u3068\u773a\u3081\u308b\u3068\u3001Neo4jREST\u30af\u30e9\u30b9\u3067Neo4J\u306eJSON API\u306b\u63a5\u7d9a\u3059\u308b\u3089\u3057\u3044\u3002\n\n```src/main/scala/org/anormcypher/Neo4jREST.scala\npackage org.anormcypher\n\nimport play.api.libs.json._, Json._\nimport play.api.libs.ws._\nimport scala.concurrent._\n\nclass Neo4jREST(wsclient: WSClient,\n  val host: String = \"localhost\", val port: Int = 7474, val path: String = \"/db/data/\",\n                val username: String = \"\", val password: String = \"\",\n                val cypherEndpoint: String = \"cypher\", val https: Boolean = false) {\n\n  private val headers = Seq(\n    \"Accept\" -> \"application/json\",\n    \"Content-Type\" -> \"application/json\",\n    \"X-Stream\" -> \"true\",\n    \"User-Agent\" -> \"AnormCypher/0.7.0\"\n  )\n(\u7565)\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6587\u66f8\u3082\u53c2\u8003\u306b\u3001\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u30d5\u30a9\u30eb\u30c0\u76f4\u4e0b\u3042\u305f\u308a\u306b\u3001\u304a\u8a66\u3057\u6e96\u5099\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\n```otameshi.scala\npackage kmr\nimport org.anormcypher._\nimport play.api.libs.ws._\n\nobject TEST {\n\n  // Provide an instance of WSClient\n  val wsclient = ning.NingWSClient()\n\n  // Setup the Rest Client\n  implicit val connection = Neo4jREST(username=\"neo4j\", password=\"aggrega4\")(wsclient)\n\n  // Provide an ExecutionContext\n  implicit val ec = scala.concurrent.ExecutionContext.global\n\n  // create some test nodes\n  val result = Cypher(\"\"\"\n    create (germany {name:\"Germany\", population:81726000, type:\"Nation\", code:\"DEU\"}),\n          (france {name:\"France\", population:65436552, type:\"Nation\", code:\"FRA\", indepYear:1790}),\n          (japan {name:\"\u65e5\u672c\", population:115436552, type:\"Nation\", code:\"JPN\", indepYear:790}),\n           (monaco {name:\"Monaco\", population:32000, type:\"Nation\", code:\"MCO\"});\n    \"\"\").execute()\n  val allNations = Cypher(\"start n=node(*) where n.type = 'Nation' return n.code as code, n.name as name\")\n\n  lazy val nations = allNations.apply().map(row =>\n    row[String](\"code\") -> row[String](\"name\")\n  ).toList\n\n  // shut down WSClient\n  def close ()= wsclient.close()\n}\n```\n\nsbt\u3067REPL console\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002\n\n> sbt console\n\n(\u3053\u3053\u3067\u3001\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7d9a\u3005\u3068\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b)\n\nREPL\u3067\u306f\u3001\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u304a\u8a66\u3057\u304c\u3067\u304d\u308b(\u65e5\u672c\u8a9e\u3082\u554f\u984c\u306a\u304f\u6c38\u7d9a\u5316\u3067\u304d\u3066\u3044\u308b)\u3002\n\n```scala\nscala> import kmr._\nimport kmr._\n\nscala> val nations_lst = TEST.nations\nnations_lst: List[(String, String)] = List((DEU,Germany), (FRA,France), (JPN,\u65e5\u672c), (MCO,Monaco))\n\nscala> nations_lst foreach print _\n(DEU,Germany)(FRA,France)(JPN,\u65e5\u672c)(MCO,Monaco)\n```\n\nNeo4J\u306e\u30d6\u30e9\u30a6\u30b6\u5074\u304b\u3089\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b5\u30fc\u30c8\u72b6\u6cc1\u304c\u78ba\u8a8d\u3067\u304d\u308b\u3002\n>MATCH (n) WHERE n.type = \"Nation\" RETURN n;\n\n...\u8907\u6570\u56de\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u56de\u6570\u5206\u3060\u3051\u30a4\u30f3\u30b5\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3001\u3001\u3001\n\n#2) Play!\u3067redis+neo4J !?\n\n\"Authentication & Social Graph API built on top of Redis, Neo4J and Play!\"\n\u3068\u3044\u3046\u3001social-graph-api\u3092\u8a66\u3057\u3066\u306f\u308b\u3002\u3053\u3061\u3089\u3001\u88cf\u3067anormcypher\u3092\u4f7f\u3063\u3066\u3044\u308b\n## \u6e96\u5099\u4f5c\u696d\nredis\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001\u7acb\u3061\u4e0a\u3052\u3066\u304a\u304f(Mac\u3067\u306fbrew\u3067\u7c21\u5358\u306b\u5165\u308b)\u3002\nneo4J\u3082\u7acb\u3061\u4e0a\u3052\u305f\u307e\u307e\u3002\n\n\u305d\u306e\u4e0a\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u6301\u3063\u3066\u304d\u3066\u3001\n> git clone https://github.com/gvolpe/social-graph-api\n\n\u5404\u7a2e\u8a2d\u5b9a\u3092conf\u306b\u9069\u5207\u306b\u66f8\u304f\u3002\n\n\n##\u624b\u76f4\u3057\u306a\u3069...\nactivator\u3092\u7acb\u3061\u4e0a\u3052\u3066run\u3057\u3088\u3046\u3068\u3059\u308b\u306e\u3060\u304c\u3001anormcypher\u304c\u5165\u3089\u306a\u3044\u3068\u6012\u3089\u308c\u308b\u3002\n\u4f55\u304b\u3068\u3044\u3046\u3068\u3001sbt\u304c\u898b\u306b\u884c\u304fanormcypher\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u843d\u3061\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\n\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067build.sbt\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3002\n> //  \"org.anormcypher\" %% \"anormcypher\" % \"\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u53e4\u304b\u3063\u305f\",\n\n\u5148\u307b\u3069\u306eanormcypher\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089sbt package\u3057\u3066jar\u3092\u751f\u6210\u3057\u3066\u3001social-graph-api\u5074\u306elib\u30d5\u30a9\u30eb\u30c0\u306b\u3044\u308c\u308b(Play!\u306e\u4f1d\u7d71\u7684\u306abad practice)\u3002\n\u3055\u3089\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u9055\u3044\u3067\u3001org.anormcypher.Neo4jREST\u304c\u52d5\u304b\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3082\u4e00\u90e8\u5909\u66f4\u3002\n\u3061\u3087\u3046\u3069\u3001Play!\u5074\u304b\u3089Neo4J\u3092REST\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3059\u30b3\u30fc\u30c9\u3068\u3057\u3066\u53c2\u8003\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u3082\u3042\u308b\u306e\u3067\u3001\u8f09\u305b\u3066\u304a\u304f:\n\n```\u6539\u8a02\u7248_app/repository/Neo4JConnection.scala\npackage repository\n\nimport org.anormcypher.Neo4jREST\nimport play.api.Play\nimport play.api.Play.current\nimport play.api.libs.ws.ning.NingWSClient\nimport com.ning.http.client.AsyncHttpClientConfig\nobject Neo4JConnection {\n\n  // \u3053\u306e\u90e8\u5206\u306e\u5b9f\u88c5\u304c\u8fd1\u6642\u5909\u308f\u3063\u305f\u3089\u3057\u3044\n  val builder = new AsyncHttpClientConfig.Builder()\n  val wsclient = new NingWSClient(builder.build())\n\n  def apply(): Neo4jREST = {\n    val config = Neo4JConfig()\n    if (config.path.isDefined && config.username.isDefined)\n      Neo4jREST(\n        host = config.host,\n        port = config.port,\n        path = config.path.getOrElse(\"/db/data/\"),\n        username = config.username.getOrElse(\"\"),\n        password = config.password.getOrElse(\"\"),\n        cypherEndpoint = config.cypherEndpoint.getOrElse(\"cypher\"),\n        https = config.https.getOrElse(false))(wsclient)\n    else\n      Neo4jREST()(wsclient)\n\n  }\n(\u4ee5\u4e0b\u306f\u5143\u30bd\u30fc\u30b9\u3068\u540c\u3058)\n```\n\n##\u304a\u8a66\u3057\u30bf\u30a4\u30e0\n\n(\u524d\u63d0)\u3000Play!2.4.3 Redis3.0.5 Neo4J\u304c\u3044\u305a\u308c\u3082\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u306e\u30dd\u30fc\u30c8\u3067\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308b\u3002\n\n*live Demo\u3082\u3042\u308b\u306e\u3060\u304c : https://social-graph-api.herokuapp.com/\n\u8a8d\u8a3c\u5468\u308a\u304c\u52d5\u3044\u3066\u3044\u306a\u3044(\u304a\u305d\u3089\u304f\u3001redis\u306e\u8a2d\u5b9a\u3042\u305f\u308a)*\n\nAPI\u4e00\u89a7\u306f\u3053\u3093\u306a\u611f\u3058:\n\n```conf.routes\n# Authentication\n\nPOST    /auth/signin                        controllers.AuthController.signIn\nPOST    /auth/signup                        controllers.AuthController.signUp\nGET     /auth/admin                         controllers.AuthController.adminAction\n\n# Users API\n\nGET     /api/v1/users                       controllers.UserController.findUsers\nGET     /api/v1/users/:id                   controllers.UserController.findUserById(id: Long)\nPOST    /api/v1/users                       controllers.UserController.createUser\nDELETE  /api/v1/users/:id                   controllers.UserController.deleteUser(id: Long)\n\n# Social Graph API\n\nGET     /api/v1/followers/:id               controllers.RelationshipController.findFollowers(id: Long)\nGET     /api/v1/friends/:id                 controllers.RelationshipController.findFriends(id: Long)\nPOST    /api/v1/friendship                  controllers.RelationshipController.createFriendship\nDELETE  /api/v1/friendship                  controllers.RelationshipController.deleteFriendship\n\n# Map static resources from the /public folder to the /assets URL path\nGET     /assets/*file                       controllers.Assets.at(path=\"/public\", file)\n```\n\nREST API\u30a2\u30d7\u30ea\u306a\u306e\u3067\u3001\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u884c\u3046\u3002\n> curl -X POST -H \"Content-Type: application/json\" -d '{ \"identifier\": \"kmry@github.com\", \"password\":\"123456\" }' http://localhost:9000/auth/signup\n\n\u518d\u5ea6\u306e\u30b5\u30a4\u30f3\u30a4\u30f3\u306f\u3053\u3061\u3089\u3002\n> curl -X POST -H \"Content-Type: application/json\" -d '{ \"identifier\": \"kmry@github.com\", \"password\":\"123456\" }' http://localhost:9000/auth/signin\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u3001token\u304c\u8fd4\u3055\u308c\u308b\u3002\n\u3053\u3053\u307e\u3067\u306f\u52d5\u4f5c\u3057\u305f\u306e\u3060\u304c\u3001token\u306e\u51e6\u7406\u304c\u3046\u307e\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3089\u3057\u304f\u3001\nUsers API&Social Graph API\u304c\u6b8b\u5ff5\u306a\u304c\u3089\u4f7f\u3048\u306a\u3044\u3002\n\n##silhouette\u30e9\u30a4\u30d6\u30e9\u30ea\n\u5927\u4f53\u306e\u51e6\u7406\u306e\u6d41\u308c\u306f\u308f\u304b\u3063\u305f\u306e\u3067\u3001\u672c\u30a2\u30d7\u30ea\u306e\u8a8d\u8a3c\u5468\u308a\u3092\u63d0\u4f9b\u3057\u3066\u304f\u308c\u3066\u3044\u308bsilhouette\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u672c\u5bb6\u306b\u3044\u3063\u3066\u307f\u308b\u3068\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u3055\u307e\u3056\u307e\u306a\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3063\u305f\u4f8b\u984c\u304c\u4e26\u3093\u3067\u3044\u308b(\u5272\u5408\u3068\u30e1\u30b8\u30e3\u30fc\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3089\u3057\u3044)\u3002\nhttp://silhouette.mohiva.com/v3.0/docs/examples\n\n#3) \u6b21\u56de : Play!\u3067\u3001Postgres+Neo4J\n\nsilhouette\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u306a\u304b\u306a\u304b\u3057\u3063\u304b\u308a\u3057\u3066\u3044\u308b\u306e\u3067\u7d99\u7d9a\u5229\u7528\u3055\u305b\u3066\u3082\u3089\u3046\u3053\u3068\u3068\u3057\u305f\u3002\u305f\u3060\u3057\u3001redis\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068neo4j\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3068\u3057\u305f\u3044(\u3044\u305a\u308c\u306fNeo4J\u5358\u4f53\u3067\u8a8d\u8a3c\u5468\u308a\u3092\u6271\u3046\u306e\u3082\u3042\u308a\u306a\u306e\u304b\u306a...)\u3002\n\n\u307e\u305a\u306f\u3001\n\"a reactive web application built on Play 2.4, ScalaJS, Silhouette, and postgres-async.\"\u3068\u3044\u3046\u3001\u6c17\u5408\u306e\u5165\u3063\u305f\u69cb\u6210\u306e\u4ee5\u4e0b\u3092\u30d9\u30fc\u30b9\u3068\u3057\u3066\u8a66\u3057\u3066\u3044\u304f\u3002\n\nhttps://github.com/KyleU/boilerplay\n\n\u4e8b\u524d\u6e96\u5099\u306f\u3001\u30ed\u30fc\u30ab\u30eb\u3067postgres\u3092\u7acb\u3061\u4e0a\u3052\u3001psql\u7b49\u3067\u30e6\u30fc\u30b6\u30fc\u3068\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u7528\u610f\u3059\u308b\u3060\u3051:\n\n```\nCREATE ROLE boilerplay WITH LOGIN PASSWORD 'password';\nCREATE DATABASE boilerplay;\nGRANT ALL PRIVILEGES ON DATABASE boilerplay TO boilerplay;\n```\n\n##\u672cboilerplay\u306f\u3001Play!\u672c\u5bb6\u3068\u7570\u306a\u308a\u3001sbt\u306e\u307f\u3067\u6271\u3048\u308b\u3002\n[\u5f8c\u6094\u3057\u306a\u3044Play Framework 2\u306ebad parts\u306e\u907f\u3051\u65b9](http://qiita.com/bigwheel/items/44cb874ced4be204c09c)\u306e\u7b2c\u4e00bad parts\u3067\u3042\u308b\n\u72ec\u81eaactivator\u306f\u89e6\u3089\u306a\u304f\u3066\u826f\u3055\u305d\u3046\u3060\u3002\n\n```shell-session\ngit clone https://github.com/KyleU/boilerplay\ncd biolerplay\nsbt run\n```\n\nlocalhost:9000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b:\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-15 9.51.35.png](https://qiita-image-store.s3.amazonaws.com/0/16455/f4911725-5919-2e75-6cc7-794b88e9566b.png)\n\n\u4e00\u901a\u308a\u7121\u96e3\u306b\u52d5\u4f5c\u3059\u308b\u3002\n\u3055\u3066\u3001\u3053\u308c\u3092\u5148\u307b\u3069\u306esocial-graph-api\u3092\u53c2\u8003\u306b\u3001\u3069\u3046\u6599\u7406\u3057\u3066\u3044\u304f\u304b...(\u7d9a\u304f)\n", "tags": ["AnormCypher", "neo4j", "PlayFramework", "silhouette", "PostgreSQL"]}