{"context": " More than 1 year has passed since last update.\u3061\u3087\u3063\u3068\u524d\u306b\u6d41\u884c\u3063\u305f\"\u3053\u308c\u304c\u89e3\u3051\u305f\u3089IQ150\"\u307f\u305f\u3044\u306a\u8a08\u7b97\u554f\u984c\n\nhttp://matome.naver.jp/odai/2137952246025001301\n5 + 3 = 28\n6 + 4 = 210\n\n\u3053\u308c\u3089\u306f\u3001\u5de6\u8fba\u306e\u901a\u5e38\u306e\u8db3\u3057\u7b97\u201d\uff0b\u201d\u306e\u7d50\u679c\u3068\u306f\u7570\u306a\u308b\u51e6\u7406\u7d50\u679c\u304c\u3001\u53f3\u8fba\u3068\u306a\u308b\u7b49\u5f0f\u3002\n\n \u2191\u306e\u201d\u901a\u5e38\u300c+\u300d\u3068\u7570\u306a\u308b\u51e6\u7406\u201d\u3068\u3044\u3046\u70b9\u306f\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3063\u307d\u3044\nruby2.1\u306erefinement\u3063\u3066\u3069\u3046\u3084\u3063\u3066\u304b\u304f\u3093\u3060\u3063\u3051\n\n\u3068\u3044\u3046\u5185\u5bb9\u306e\u30e1\u30e2\u3092\u4e0b\u8a18\u3057\u307e\u3059\u3002\n\n\u5f15\u3044\u305f\u306e\u3068\u8db3\u3057\u305f\u306e\u3092\u6587\u5b57\u5217\u7d50\u5408\u3059\u308b\u3042\u308c\n\n6 + 4 = 210\n9 + 2 = 711\n8 + 5 = 313\n5 + 2 = 37\n7 + 6 = 113\n\n\u300c+\u300d\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u3084\u308b\u3093\u3060\u3051\u3069\u3001\u306a\u305c\u304b\u3057\u3089\u3093\u304c\u3001ruby2.1 \u304b\u3089\u306erefinements\u3067\u306a\u3044\u3068\u3067\u304d\u3093\u304b\u3063\u305f\u3002\n\nminus_plus.rb\n# ruby2.1 \u306erefinements\u3092\u4f7f\u3046Fixnum\u62e1\u5f35\nmodule FixnumExtensions\n  refine ::Fixnum do\n    alias_method(:orig_plus, :+)\n    def +(n)\n      \"#{self - n}#{self.orig_plus(n)}\".to_i\n    end\n  end\nend\n\n[[6, 4],\n [9, 2],\n [8, 5],\n [5, 2],\n [7, 6]].each do |a, b|\n  using FixnumExtensions\n  puts \"#{a} + #{b} = #{a + b}\"\nend\n\n\n\n\u6570\u5b57\u306e\u25cb\u306e\u6570\u3092\u6570\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\u5c0f\u5b66\u751f\u5411\u3051\u306e\u5b50\u4f9b\u756a\u7d44\u7b49\u3067\u983b\u51fa\u3059\u308b\u3068\u601d\u308f\u308c\u308b\u30af\u30a4\u30ba\n\n8 + 8 = 4\n1 + 0 = 1\n5 + 5 = 0\n66 + 99 = 4\n333 + 222 = 0\n\n\u6570\u5b57\u306e\u898b\u305f\u76ee\u306b\u542b\u307e\u308c\u308b\u300c\u4e38\u300d\u306e\u6570\u3092\u6570\u3048\u308b\u3068\u3044\u3046\u4ed5\u69d8\u3002\n\nmaru.rb\nmodule FixnumExtensions\n  def maru_count(num_str)\n    case num_str\n    when '8' then return 2\n    when /^[069]$/ then return 1\n    end\n    0\n  end\n\n  module_function :maru_count\n\n  refine ::Fixnum do\n    alias :orig_plus :+\n\n    def to_maru_count\n      self.to_s.each_char.map{|n| FixnumExtensions.maru_count(n)}.inject(:+)\n    end\n\n    def +(other)\n      self.to_maru_count.orig_plus(other.to_maru_count)\n    end\n  end\nend\n\nmodule Maru\n  using FixnumExtensions\n\n  module_function\n  def process\n\n    [\n     [8, 8],\n     [1, 0],\n     [5, 5],\n     [66, 99],\n     [333, 222],\n     [0, 0],\n     [2, 3],\n     [9, 9],\n     [8, 36],\n     [8, 0],\n     [22, 347],\n     [80, 123],\n    ].each do |a, b|\n      puts \"#{a} + #{b} = #{a + b}\"\n    end\n\n  end\nend\n\nif __FILE__ == $0\n  Maru::process\nend\n\n\n\u3061\u3087\u3063\u3068\u524d\u306b\u6d41\u884c\u3063\u305f\"\u3053\u308c\u304c\u89e3\u3051\u305f\u3089IQ150\"\u307f\u305f\u3044\u306a\u8a08\u7b97\u554f\u984c\n\n> http://matome.naver.jp/odai/2137952246025001301\n> 5 + 3 = 28\n> 6 + 4 = 210\n\n\u3053\u308c\u3089\u306f\u3001\u5de6\u8fba\u306e\u901a\u5e38\u306e\u8db3\u3057\u7b97\u201d\uff0b\u201d\u306e\u7d50\u679c\u3068\u306f\u7570\u306a\u308b\u51e6\u7406\u7d50\u679c\u304c\u3001\u53f3\u8fba\u3068\u306a\u308b\u7b49\u5f0f\u3002\n\n-  \u2191\u306e\u201d\u901a\u5e38\u300c+\u300d\u3068\u7570\u306a\u308b\u51e6\u7406\u201d\u3068\u3044\u3046\u70b9\u306f\u3001\u6f14\u7b97\u5b50\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3063\u307d\u3044\n- ruby2.1\u306erefinement\u3063\u3066\u3069\u3046\u3084\u3063\u3066\u304b\u304f\u3093\u3060\u3063\u3051\n\n\u3068\u3044\u3046\u5185\u5bb9\u306e\u30e1\u30e2\u3092\u4e0b\u8a18\u3057\u307e\u3059\u3002\n\n## \u5f15\u3044\u305f\u306e\u3068\u8db3\u3057\u305f\u306e\u3092\u6587\u5b57\u5217\u7d50\u5408\u3059\u308b\u3042\u308c\n> 6 + 4 = 210\n> 9 + 2 = 711\n> 8 + 5 = 313\n> 5 + 2 = 37\n> 7 + 6 = 113\n\n\u300c+\u300d\u6f14\u7b97\u5b50\u306e\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3092\u3084\u308b\u3093\u3060\u3051\u3069\u3001\u306a\u305c\u304b\u3057\u3089\u3093\u304c\u3001ruby2.1 \u304b\u3089\u306erefinements\u3067\u306a\u3044\u3068\u3067\u304d\u3093\u304b\u3063\u305f\u3002\n\n```ruby:minus_plus.rb\n# ruby2.1 \u306erefinements\u3092\u4f7f\u3046Fixnum\u62e1\u5f35\nmodule FixnumExtensions\n  refine ::Fixnum do\n    alias_method(:orig_plus, :+)\n    def +(n)\n      \"#{self - n}#{self.orig_plus(n)}\".to_i\n    end\n  end\nend\n\n[[6, 4],\n [9, 2],\n [8, 5],\n [5, 2],\n [7, 6]].each do |a, b|\n  using FixnumExtensions\n  puts \"#{a} + #{b} = #{a + b}\"\nend\n```\n\n## \u6570\u5b57\u306e\u25cb\u306e\u6570\u3092\u6570\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\u5c0f\u5b66\u751f\u5411\u3051\u306e\u5b50\u4f9b\u756a\u7d44\u7b49\u3067\u983b\u51fa\u3059\u308b\u3068\u601d\u308f\u308c\u308b\u30af\u30a4\u30ba\n> 8 + 8 = 4\n> 1 + 0 = 1\n> 5 + 5 = 0\n> 66 + 99 = 4\n> 333 + 222 = 0\n\n\u6570\u5b57\u306e\u898b\u305f\u76ee\u306b\u542b\u307e\u308c\u308b\u300c\u4e38\u300d\u306e\u6570\u3092\u6570\u3048\u308b\u3068\u3044\u3046\u4ed5\u69d8\u3002\n\n```ruby:maru.rb\nmodule FixnumExtensions\n  def maru_count(num_str)\n    case num_str\n    when '8' then return 2\n    when /^[069]$/ then return 1\n    end\n    0\n  end\n  \n  module_function :maru_count\n  \n  refine ::Fixnum do\n    alias :orig_plus :+\n    \n    def to_maru_count\n      self.to_s.each_char.map{|n| FixnumExtensions.maru_count(n)}.inject(:+)\n    end\n    \n    def +(other)\n      self.to_maru_count.orig_plus(other.to_maru_count)\n    end\n  end\nend\n\nmodule Maru\n  using FixnumExtensions\n  \n  module_function\n  def process\n\n    [\n     [8, 8],\n     [1, 0],\n     [5, 5],\n     [66, 99],\n     [333, 222],\n     [0, 0],\n     [2, 3],\n     [9, 9],\n     [8, 36],\n     [8, 0],\n     [22, 347],\n     [80, 123],\n    ].each do |a, b|\n      puts \"#{a} + #{b} = #{a + b}\"\n    end\n\n  end\nend\n\nif __FILE__ == $0\n  Maru::process\nend\n```\n", "tags": ["Ruby", "\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "ruby2.1"]}