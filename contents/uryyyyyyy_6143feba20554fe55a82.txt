{"context": "\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/30733e9cd140e60c52bd\n\n\u554f\u984c\u63d0\u8d77\n\u4eca\u6642\u3001\u578b\u306e\u306a\u3044\u8a00\u8a9e\u3068\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff01\uff08JSer\u306b\u30b1\u30f3\u30ab\u58f2\u308b\u6328\u62f6\uff09\n\u4eca\u56de\u306ftodoList\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u901a\u3058\u3066\u3001immutableJS\u306e\u826f\u3055\u3092\u518d\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u74b0\u5883\n\nNodeJS 5.x~\nReact 15.1\nTypeScript 1.8\n\n\n\u69cb\u6210\n\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/immutable\n\nImmutable.js\u3068\u306f\nJS\u3067List\u3084Map\u306a\u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3048\u308b\u3082\u306e\u3002\nTypeScript\u3067\u4f7f\u3046\u3068\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306eArray\u3084Object\u3068\u6bd4\u3079\u3066\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5897\u3048\u308b\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\uff08\u9006\u306bJS\u3067\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u578b\u3068\u6df7\u540c\u3057\u304c\u3061\u306a\u306e\u3067lodash\u3068\u304b\u306e\u65b9\u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\uff09\nnpm install immutable --save\ntypings install dt~immutable --global --save\n\n\n\u30cd\u30a4\u30c6\u30a3\u30d6\u578b\u306e\u5834\u5408\nlet list:number[] = [1, 2]\n\n//\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u3002\nlist.isEmpty()\n\nlist.push(3)\nlist // [1,2,3]\u3000\u7834\u58ca\u7684\u30e1\u30bd\u30c3\u30c9\u30b3\u30ef\u30a4\n\n\nImmutable.js\u306eList\u578b\u306e\u5834\u5408\nimport {List} from \"immutable\";\n\nlet list:List<number> = List.of<number>(1, 2)\n\n//\u3042\u308b\uff01\nlist.isEmpty()\n\nlet newList = list.push(3)\nlist // [1,2]\u3000Immutable!\n\n\nImmutable.js\u3067TodoList\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/immutablejs\n\u57fa\u672c\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3082\u3089\u3063\u305f\u307b\u3046\u304c\u65e9\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u304c\u3001\u8981\u70b9\u3060\u3051\u3002\n\nsrc/todo/Reducer.ts\n\nconst initialState:TodoState = {todos: List.of<Todo>(), marks: marks};\n\nexport function todoReduce(state: TodoState = initialState, action: MyAction): TodoState {\n\n    function changeStatus(state: TodoState, action: MyAction):TodoState {\n        const newTodos = state.todos.map(v => {\n            if (v.id === action.id) return new Todo(v.id, v.text, !v.isComplete);\n            return v\n        });\n        return objectAssign({}, state, {todos: newTodos});\n    }\n\n    function addTodo(state: TodoState, action: MyAction):TodoState {\n        let newNumber = 1;\n        if(!state.todos.isEmpty()) newNumber = state.todos.map(v => v.id).max() + 1;\n        const newTodo = new Todo(newNumber, action.text, false);\n        return objectAssign({}, state, {todos: state.todos.push(newTodo)});\n    }\n\n    function deleteTodo(state:TodoState, action:MyAction):TodoState {\n        return objectAssign({}, state, {todos: state.todos.filter(item => item.id !== action.id)});\n    }\n}\n\n\n\nsrc/todo/TodoItem.tsx\nexport interface Props {\n    /* ... */\n    marks: Map<boolean, string>\n}\n\nrender () {\n        return (\n            <li>\n                <span>{this.props.marks.get(this.props.item.isComplete)}:  {this.props.item.text} </span>\n         /* ... */\n        );\n    }\n\n\n\u3069\u3046\u3067\u3059\u304b\u3002Immutable.List\u306e\u304a\u304b\u3052\u3067\u7dba\u9e97\u306b\u66f8\u3051\u3066\u308b\u6c17\u304c\u3057\u307e\u305b\u3093\u304b\uff1f\n\uff08\u3046\u30fc\u3093\u3002\u3002\u3053\u306e\u4f8b\u3060\u3068\u8a00\u3046\u307b\u3069\u4fbf\u5229\u3058\u3083\u306a\u3055\u305d\u3046\u304b\u3082\uff1f\u307e\u3041\u3001Set\u3084Stack\u306a\u3069\u8272\u3005\u306a\u4fbf\u5229\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u7cfb\u306b\u6163\u308c\u3066\u3044\u308b\u65b9\u3060\u3068\u304b\u306a\u308a\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001json\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u3067\u6765\u308bjson\u306f\u52dd\u624b\u306bImmutable.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u90fd\u5ea6\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n  const json: TodoInterface[] = [\n    {id: 1, text: \"todo 1\", isComplete: true},\n    {id: 2, text: \"todo 2\", isComplete: false}\n  ];\n  const todos: List<TodoInterface> = List.of(...json);\n\n\u9006\u306bimmutable.js\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089json\u3078\u306e\u5909\u63db\u306f\u671f\u5f85\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://facebook.github.io/immutable-js/#converts-back-to-raw-javascript-objects-\n\n\u3053\u3061\u3089\u306e\u8a18\u4e8b\u306e\u7d9a\u7de8\u3067\u3059\u3002\nhttp://qiita.com/uryyyyyyy/items/30733e9cd140e60c52bd\n\n## \u554f\u984c\u63d0\u8d77\n\n\u4eca\u6642\u3001\u578b\u306e\u306a\u3044\u8a00\u8a9e\u3068\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff01\uff08JSer\u306b\u30b1\u30f3\u30ab\u58f2\u308b\u6328\u62f6\uff09\n\u4eca\u56de\u306ftodoList\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u901a\u3058\u3066\u3001immutableJS\u306e\u826f\u3055\u3092\u518d\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n## \u74b0\u5883\n\n- NodeJS 5.x~\n- React 15.1\n- TypeScript 1.8\n\n## \u69cb\u6210\n\n\u3053\u3061\u3089\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/immutable\n\n## Immutable.js\u3068\u306f\n\nJS\u3067List\u3084Map\u306a\u3069\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6271\u3048\u308b\u3082\u306e\u3002\nTypeScript\u3067\u4f7f\u3046\u3068\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306eArray\u3084Object\u3068\u6bd4\u3079\u3066\u4f7f\u3048\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5897\u3048\u308b\u306e\u3067\u30aa\u30b9\u30b9\u30e1\u3067\u3059\u3002\n\uff08\u9006\u306bJS\u3067\u4f7f\u3046\u306e\u3067\u3042\u308c\u3070\u3001\u30cd\u30a4\u30c6\u30a3\u30d6\u306e\u578b\u3068\u6df7\u540c\u3057\u304c\u3061\u306a\u306e\u3067lodash\u3068\u304b\u306e\u65b9\u304c\u826f\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\uff1f\uff09\n\n```\nnpm install immutable --save\ntypings install dt~immutable --global --save\n```\n\n### \u30cd\u30a4\u30c6\u30a3\u30d6\u578b\u306e\u5834\u5408\n\n```ts\nlet list:number[] = [1, 2]\n\n//\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u3002\nlist.isEmpty()\n\nlist.push(3)\nlist // [1,2,3]\u3000\u7834\u58ca\u7684\u30e1\u30bd\u30c3\u30c9\u30b3\u30ef\u30a4\n```\n\n### Immutable.js\u306eList\u578b\u306e\u5834\u5408\n\n```ts\nimport {List} from \"immutable\";\n\nlet list:List<number> = List.of<number>(1, 2)\n\n//\u3042\u308b\uff01\nlist.isEmpty()\n\nlet newList = list.push(3)\nlist // [1,2]\u3000Immutable!\n```\n\n## Immutable.js\u3067TodoList\n\nhttps://github.com/uryyyyyyy/react-redux-sample/tree/immutablejs\n\n\u57fa\u672c\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3082\u3089\u3063\u305f\u307b\u3046\u304c\u65e9\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u304c\u3001\u8981\u70b9\u3060\u3051\u3002\n\n```ts:src/todo/Reducer.ts\n\nconst initialState:TodoState = {todos: List.of<Todo>(), marks: marks};\n\nexport function todoReduce(state: TodoState = initialState, action: MyAction): TodoState {\n\n    function changeStatus(state: TodoState, action: MyAction):TodoState {\n        const newTodos = state.todos.map(v => {\n            if (v.id === action.id) return new Todo(v.id, v.text, !v.isComplete);\n            return v\n        });\n        return objectAssign({}, state, {todos: newTodos});\n    }\n\n    function addTodo(state: TodoState, action: MyAction):TodoState {\n        let newNumber = 1;\n        if(!state.todos.isEmpty()) newNumber = state.todos.map(v => v.id).max() + 1;\n        const newTodo = new Todo(newNumber, action.text, false);\n        return objectAssign({}, state, {todos: state.todos.push(newTodo)});\n    }\n\n    function deleteTodo(state:TodoState, action:MyAction):TodoState {\n        return objectAssign({}, state, {todos: state.todos.filter(item => item.id !== action.id)});\n    }\n}\n```\n\n```ts:src/todo/TodoItem.tsx\nexport interface Props {\n    /* ... */\n    marks: Map<boolean, string>\n}\n\nrender () {\n        return (\n            <li>\n                <span>{this.props.marks.get(this.props.item.isComplete)}:  {this.props.item.text} </span>\n         /* ... */\n        );\n    }\n```\n\n\u3069\u3046\u3067\u3059\u304b\u3002Immutable.List\u306e\u304a\u304b\u3052\u3067\u7dba\u9e97\u306b\u66f8\u3051\u3066\u308b\u6c17\u304c\u3057\u307e\u305b\u3093\u304b\uff1f\n\uff08\u3046\u30fc\u3093\u3002\u3002\u3053\u306e\u4f8b\u3060\u3068\u8a00\u3046\u307b\u3069\u4fbf\u5229\u3058\u3083\u306a\u3055\u305d\u3046\u304b\u3082\uff1f\u307e\u3041\u3001Set\u3084Stack\u306a\u3069\u8272\u3005\u306a\u4fbf\u5229\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u7cfb\u306b\u6163\u308c\u3066\u3044\u308b\u65b9\u3060\u3068\u304b\u306a\u308a\u4fbf\u5229\u304b\u3068\u601d\u3044\u307e\u3059\u3002\uff09\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u3001json\u30b5\u30fc\u30d0\u30fc\u3068\u306e\u901a\u4fe1\u3067\u6765\u308bjson\u306f\u52dd\u624b\u306bImmutable.js\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u90fd\u5ea6\u5909\u63db\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```ts\n  const json: TodoInterface[] = [\n    {id: 1, text: \"todo 1\", isComplete: true},\n    {id: 2, text: \"todo 2\", isComplete: false}\n  ];\n  const todos: List<TodoInterface> = List.of(...json);\n```\n\n\u9006\u306bimmutable.js\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089json\u3078\u306e\u5909\u63db\u306f\u671f\u5f85\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u3002\n\nhttps://facebook.github.io/immutable-js/#converts-back-to-raw-javascript-objects-\n\n", "tags": ["redux", "TypeScript", "immutable-js", "reactjs"]}