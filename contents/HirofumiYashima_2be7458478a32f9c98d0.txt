{"context": "\n\n\u53d6\u308a\u6271\u3046 DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\nPython 3.5\n>>> type(test_df_2)\n<class 'pandas.core.frame.DataFrame'>\n>>> \n\n\n\nPython 3.5\n>>> test_df_2.head()\n   sin_wave  cos_wave  sin + cos\n0  0.000000  1.000000   1.000000\n1 -0.587785 -0.809017  -1.396802\n2  0.951057  0.309017   1.260074\n3 -0.951057  0.309017  -0.642040\n4  0.587785 -0.809017  -0.221232\n>>>\n\n\n\nPython 3.5\n>>> test_df_2.describe()\n           sin_wave      cos_wave     sin + cos\ncount  1.000000e+03  1.000000e+03  1.000000e+03\nmean   1.676564e-14  9.442447e-15  2.620437e-14\nstd    7.074606e-01  7.074606e-01  1.000500e+00\nmin   -9.510565e-01 -8.090170e-01 -1.396802e+00\n25%   -5.877853e-01 -8.090170e-01 -6.420395e-01\n50%   -4.799254e-14  3.090170e-01 -2.212317e-01\n75%    5.877853e-01  3.090170e-01  1.000000e+00\nmax    9.510565e-01  1.000000e+00  1.260074e+00\n>>>\n\n\n\nPython 3.5\n>>> test_df_2.shape\n(1000, 3)\n>>> \n\n\n\nPython 3.5\n>>> column_name_list = test_df_2.columns\n>>> pprint(column_name_list)\nIndex(['sin_wave', 'cos_wave', 'sin + cos'], dtype='object')\n>>>\n\n\n\nPython 3.5\n>>> type(test_df_2[column_name_list[0]])\n<class 'pandas.core.series.Series'>\n>>>\n\n\n\n1\u5217\u53d6\u308a\u51fa\u3057\u3066\u3001pandas.Series\u578b => list\u578b => numpy.array\u578b \u306b \u578b\u5909\u63db\u3057\u3066np.array\uff11\u6b21\u5143\u914d\u5217 \u3092 \u53d6\u5f97\n\n\nPython 3.5\n>>> sin_wave_array = np.array(list(test_df_2[column_name_list[0]]))\n>>> \n>>> pprint(sin_wave_array)\narray([  0.00000000e+00,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -7.34788079e-16,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -1.46957616e-15,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -2.20436424e-15,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -2.93915232e-15,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n\n                              \uff08 \u4e2d\u7565 \uff09\n\n        -1.41079311e-13,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,   2.16107299e-14,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -2.70446580e-13,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -1.07756539e-13,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,   5.49335024e-14,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -2.37123807e-13,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -7.44337662e-14,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -3.66491076e-13,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01])\n>>> \n\n\n\nnumpy.ndarray\u578b \u306e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u3057\u3066 \u5f97\u3089\u308c\u305f\n\n\nPython 3.5\n>>> type(sin_wave_array) \n<class 'numpy.ndarray'>\n>>> \n\n\n\n\uff12\u5217\u53d6\u308a\u51fa\u3057\u3066\u3001pandas.Series\u578b => list\u578b => numpy.array\u578b \u306b \u578b\u5909\u63db\u3057\u3066np.array\uff12\u6b21\u5143\u914d\u5217 \u3092 \u53d6\u5f97\n\n\n2\u5217\u306e\u307f \u53d6\u308a\u51fa\u3059\n\n\nPython 3.5\n>>> \n>>> test_df_2[column_name_list[0:2]]\n         sin_wave  cos_wave\n0    0.000000e+00  1.000000\n1   -5.877853e-01 -0.809017\n2    9.510565e-01  0.309017\n3   -9.510565e-01  0.309017\n4    5.877853e-01 -0.809017\n5   -7.347881e-16  1.000000\n6   -5.877853e-01 -0.809017\n7    9.510565e-01  0.309017\n8   -9.510565e-01  0.309017\n9    5.877853e-01 -0.809017\n10  -1.469576e-15  1.000000\n11  -5.877853e-01 -0.809017\n12   9.510565e-01  0.309017\n13  -9.510565e-01  0.309017\n14   5.877853e-01 -0.809017\n15  -2.204364e-15  1.000000\n16  -5.877853e-01 -0.809017\n17   9.510565e-01  0.309017\n18  -9.510565e-01  0.309017\n19   5.877853e-01 -0.809017\n20  -2.939152e-15  1.000000\n21  -5.877853e-01 -0.809017\n22   9.510565e-01  0.309017\n23  -9.510565e-01  0.309017\n24   5.877853e-01 -0.809017\n25  -1.077937e-14  1.000000\n26  -5.877853e-01 -0.809017\n27   9.510565e-01  0.309017\n28  -9.510565e-01  0.309017\n29   5.877853e-01 -0.809017\n..            ...       ...\n970 -2.704466e-13  1.000000\n971 -5.877853e-01 -0.809017\n972  9.510565e-01  0.309017\n973 -9.510565e-01  0.309017\n974  5.877853e-01 -0.809017\n975 -1.077565e-13  1.000000\n976 -5.877853e-01 -0.809017\n977  9.510565e-01  0.309017\n978 -9.510565e-01  0.309017\n979  5.877853e-01 -0.809017\n980  5.493350e-14  1.000000\n981 -5.877853e-01 -0.809017\n982  9.510565e-01  0.309017\n983 -9.510565e-01  0.309017\n984  5.877853e-01 -0.809017\n985 -2.371238e-13  1.000000\n986 -5.877853e-01 -0.809017\n987  9.510565e-01  0.309017\n988 -9.510565e-01  0.309017\n989  5.877853e-01 -0.809017\n990 -7.443377e-14  1.000000\n991 -5.877853e-01 -0.809017\n992  9.510565e-01  0.309017\n993 -9.510565e-01  0.309017\n994  5.877853e-01 -0.809017\n995 -3.664911e-13  1.000000\n996 -5.877853e-01 -0.809017\n997  9.510565e-01  0.309017\n998 -9.510565e-01  0.309017\n999  5.877853e-01 -0.809017\n\n[1000 rows x 2 columns]\n>>> \n\n\n\nPython 3.5\n>>> second_dimensiton_numpy_array = np.array(test_df_2[column_name_list[0:2]])\n\n\n\nnumpy.ndarray\u578b \u306e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u3057\u3066 \u5f97\u3089\u308c\u305f\n\n\nPython 3.5\n>>> type(second_dimensiton_numpy_array)\n<class 'numpy.ndarray'>\n>>>\n\n\n\nPython 3.5\n>>> pprint(second_dimensiton_numpy_array)\narray([[ 0.        ,  1.        ],\n       [-0.58778525, -0.80901699],\n       [ 0.95105652,  0.30901699],\n       ..., \n       [ 0.95105652,  0.30901699],\n       [-0.95105652,  0.30901699],\n       [ 0.58778525, -0.80901699]])\n>>>\n\n\n\n\u4e0a\u3068\u4e0b \u306f \u540c\u3058\n\n\nPython 3.5\n>>> test_df_2[column_name_list[0:2]].head()\n   sin_wave  cos_wave\n0  0.000000  1.000000\n1 -0.587785 -0.809017\n2  0.951057  0.309017\n3 -0.951057  0.309017\n4  0.587785 -0.809017\n>>> \n\n\n\n\n\u3010 \u4ed8\u9332 \u3011\n\n\n\u5404\u5217 \u306e \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u9593 \u306e \u76f8\u95a2\u4fc2\u6570 \u3092 \u7b97\u51fa\u3057\u3066\u307f\u308b\n\n\n\uff08 \u65b9\u6cd5\uff11 \uff09\n\n\nDataFrame \u304b\u3089 1\u6b21\u5143array \u3092 \u53d6\u5f97\u3057\u3066\u3001Numpy.corrcoef()\u30e1\u30bd\u30c3\u30c9\u306b\uff11\u6b21\u5143\u914d\u5217 2\u3064 \u3092 \u6e21\u3059\n\n\nPython 3.5\n>>> sin_wave_array = np.array(list(test_df_2[column_name_list[0]]))\n>>> cos_wave_array = np.array(list(test_df_2[column_name_list[1]]))\n>>> \n>>> type(sin_wave_array)\n<class 'numpy.ndarray'>\n>>> \n>>> type(cos_wave_array)\n<class 'numpy.ndarray'>\n>>> \n>>> sin_wave_array[0:10]\narray([  0.00000000e+00,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -7.34788079e-16,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01])\n>>> \n>>> cos_wave_array[0:10]\narray([ 1.        , -0.80901699,  0.30901699,  0.30901699, -0.80901699,\n        1.        , -0.80901699,  0.30901699,  0.30901699, -0.80901699])\n>>> \n>>> np.size(sin_wave_array)\n1000\n>>> \n>>> np.size(cos_wave_array)\n1000\n>>> \n\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\nHatena::Diary Pashango's Blog \uff082009/07/14\uff09 \u300c\u9ad8\u901f\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u300cNumpy\u300d\u899a\u66f8\u304d\u300d \n\n\n\u76f8\u95a2\u4fc2\u6570\uff06\u76f8\u95a2\u4fc2\u6570\u884c\u5217\n\n\nPython 3.5\n>>> np.corrcoef(sin_wave_array, cos_wave_array) \narray([[  1.00000000e+00,   3.44299758e-14],\n       [  3.44299758e-14,   1.00000000e+00]])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[0]   \narray([  1.00000000e+00,   3.44299758e-14])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[0][1]\n3.4429975774482769e-14\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[1]\narray([  3.44299758e-14,   1.00000000e+00])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[1][0]\n3.4429975774482769e-14\n>>> \n\n\n\n\uff08 \u65b9\u6cd52 \uff09\n\n\nDataFrame.corr() \u30e1\u30bd\u30c3\u30c9 \u3092 \u4f7f\u3046\n\n\nPython 3.5\n>>> test_df_2.corr()\n               sin_wave      cos_wave  sin + cos\nsin_wave   1.000000e+00  3.443057e-14   0.707107\ncos_wave   3.443057e-14  1.000000e+00   0.707107\nsin + cos  7.071068e-01  7.071068e-01   1.000000\n>>>\n\n\n\uff08 \u7d50\u679c \u3082 DataFrame\u578b \uff09\n\nPython 3.5\n>>> type(test_df_2.corr())\n<class 'pandas.core.frame.DataFrame'>\n>>> \n\n\n\uff08 \u7d50\u679c \u3092 as_matrix()\u30e1\u30bd\u30c3\u30c9 \u3067 \u591a\u6b21\u5143array\u578b \u306b \u5909\u63db\u3059\u308b \uff09\n\nPython 3.5\n>>> test_df_2.corr().as_matrix()\narray([[  1.00000000e+00,   3.44305695e-14,   7.07106781e-01],\n       [  3.44305695e-14,   1.00000000e+00,   7.07106781e-01],\n       [  7.07106781e-01,   7.07106781e-01,   1.00000000e+00]])\n>>>\n\n\n\nPython 3.5\n>>> corr_matrix_array = test_df_2.corr().as_matrix()\n>>> pprint(corr_matrix_array)\narray([[  1.00000000e+00,   3.44305695e-14,   7.07106781e-01],\n       [  3.44305695e-14,   1.00000000e+00,   7.07106781e-01],\n       [  7.07106781e-01,   7.07106781e-01,   1.00000000e+00]])\n>>> \n\n\n\nPython 3.5\n>>> type(corr_matrix_array)\n<class 'numpy.ndarray'>\n>>> \n\n\n\n\u300c\u898b\u305b\u304b\u3051\u306e\u76f8\u95a2\u300d\u3092\u306a\u304f\u3059\u305f\u3081\u306b\u306f\u3001\u30c7\u30fc\u30bf\u3092\u57fa\u6e96\u5316\u3057\u3001\u3055\u3089\u306bADF\u691c\u5b9a\u3092\u7d4c\u3066\u300c\u5b9a\u5e38\u904e\u7a0b\u300d\u306b\u623b\u3059\uff08\u5bfe\u6570\u3092\u3068\u308b\u3001\u968e\u5dee\u3092\u3068\u308b\u7b49\uff09\u30b9\u30c6\u30c3\u30d7 \u304c \u5fc5\u8981\n\n\uff08 \u30c7\u30fc\u30bf\u306e\u300c\u6a19\u6e96\u5316\u300d\u306b\u3064\u3044\u3066 \u53c2\u8003 \uff09\n\nFiS Project \u300c\u3010NumPy\u3011Python\u3067\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u3010SciPy\u3011\u300d\nCUBE SUGAR CONTAINER \uff082016/07/06\uff09 \u300cPython: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6a19\u6e96\u5316\u306b\u3064\u3044\u3066\u300d\nHatena Blog Time waits for no Man \uff082016/01/04\uff09 \u300cnumpy\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u300d\n\n\uff08 ADF\u691c\u5b9a\u306b\u3064\u3044\u3066 \uff09\n\nHirofumiYashima Qiita\u8a18\u4e8b\u300c\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u5206\u6790\u306e\u521d\u5fc3\u8005\u306b\u5fc5\u305a\u77e5\u3063\u3066\u3082\u3089\u3044\u305f\u3044\u91cd\u8981\u30dd\u30a4\u30f3\u30c8 \uff5e \u56de\u5e30\u5206\u6790 \u30fb\u76f8\u95a2\u95a2\u4fc2 \u5206\u6790\u3092\u884c\u3046\u524d\u306b\u5fc5\u305a\u3084\u308b\u3079\u304d\u3053\u3068\uff08\u30c7\u30fc\u30bf\u306e\u5f62\u306e\u30c1\u30a7\u30c3\u30af\u3068\u5909\u5f62\uff09\u300d\nHirofumiYashima Qiita\u8a18\u4e8b \u300c\u3010 Python \u6642\u7cfb\u5217\u89e3\u6790 \u3011Yahoo Finance \u304b\u3089 FTSE\u30ed\u30f3\u30c9\u30f3\u682a\u4fa1\u30c7\u30fc\u30bf \u3092 \u53d6\u5f97\u3057\u3066\u3001\u7d4c\u6e08\u6642\u7cfb\u5217\u89e3\u6790 \u306e \u4f5c\u696d\u624b\u9806 \u3092\u901a\u3057\u3067\u884c\u3063\u3066\u307f\u308b \u301c \u30c7\u30fc\u30bf\u306e\u5b9a\u5e38\u6027\u691c\u5b9a \u304b\u3089\uff08G\uff09ARCH\u30e2\u30c7\u30eb\u63a8\u5b9a \u307e\u3067\u300d\n\n\nNumpy.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306f list\u578b \u306b \u578b\u5909\u63db\u3067\u304d\u308b \u306e\u3067\u3001list\u578b \u3057\u304b \u53d6\u308a\u6271\u3048\u306a\u3044 \u7d71\u8a08\u95a2\u6570 \u306b\u3082 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b\u3002\n\n\nPython 3.5\n>>> type(list(sin_wave_array))\n<class 'list'>\n>>> \n>>> print(list(sin_wave_array)[0:10])\n[0.0, -0.58778525229247303, 0.95105651629515342, -0.95105651629515431, 0.58778525229247369, -7.3478807948841188e-16, -0.58778525229246947, 0.9510565162951532, -0.95105651629515398, 0.58778525229247414]\n>>> \n\n\n###__\u53d6\u308a\u6271\u3046 DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8__\n\n```{python:Python 3.5}\n>>> type(test_df_2)\n<class 'pandas.core.frame.DataFrame'>\n>>> \n```\n\n```{python:Python 3.5}\n>>> test_df_2.head()\n   sin_wave  cos_wave  sin + cos\n0  0.000000  1.000000   1.000000\n1 -0.587785 -0.809017  -1.396802\n2  0.951057  0.309017   1.260074\n3 -0.951057  0.309017  -0.642040\n4  0.587785 -0.809017  -0.221232\n>>>\n```\n\n```{python:Python 3.5}\n>>> test_df_2.describe()\n           sin_wave      cos_wave     sin + cos\ncount  1.000000e+03  1.000000e+03  1.000000e+03\nmean   1.676564e-14  9.442447e-15  2.620437e-14\nstd    7.074606e-01  7.074606e-01  1.000500e+00\nmin   -9.510565e-01 -8.090170e-01 -1.396802e+00\n25%   -5.877853e-01 -8.090170e-01 -6.420395e-01\n50%   -4.799254e-14  3.090170e-01 -2.212317e-01\n75%    5.877853e-01  3.090170e-01  1.000000e+00\nmax    9.510565e-01  1.000000e+00  1.260074e+00\n>>>\n```\n\n```{python:Python 3.5} \n>>> test_df_2.shape\n(1000, 3)\n>>> \n```\n\n\n\n```{python:Python 3.5}\n>>> column_name_list = test_df_2.columns\n>>> pprint(column_name_list)\nIndex(['sin_wave', 'cos_wave', 'sin + cos'], dtype='object')\n>>>\n```\n\n```{python:Python 3.5}\n>>> type(test_df_2[column_name_list[0]])\n<class 'pandas.core.series.Series'>\n>>>\n```\n\n###__1\u5217\u53d6\u308a\u51fa\u3057\u3066\u3001pandas.Series\u578b => list\u578b => numpy.array\u578b \u306b \u578b\u5909\u63db\u3057\u3066np.array\uff11\u6b21\u5143\u914d\u5217 \u3092 \u53d6\u5f97__\n\n```{python:Python 3.5}\n>>> sin_wave_array = np.array(list(test_df_2[column_name_list[0]]))\n>>> \n>>> pprint(sin_wave_array)\narray([  0.00000000e+00,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -7.34788079e-16,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -1.46957616e-15,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -2.20436424e-15,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -2.93915232e-15,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n \n \t\t\t\t\t\t      \uff08 \u4e2d\u7565 \uff09\n \n        -1.41079311e-13,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,   2.16107299e-14,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -2.70446580e-13,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -1.07756539e-13,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,   5.49335024e-14,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01,  -2.37123807e-13,  -5.87785252e-01,\n         9.51056516e-01,  -9.51056516e-01,   5.87785252e-01,\n        -7.44337662e-14,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -3.66491076e-13,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01])\n>>> \n```\n\n* numpy.ndarray\u578b \u306e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u3057\u3066 \u5f97\u3089\u308c\u305f\n\n```{python:Python 3.5}\n>>> type(sin_wave_array) \n<class 'numpy.ndarray'>\n>>> \n```\n\n###__\uff12\u5217\u53d6\u308a\u51fa\u3057\u3066\u3001pandas.Series\u578b => list\u578b => numpy.array\u578b \u306b \u578b\u5909\u63db\u3057\u3066np.array\uff12\u6b21\u5143\u914d\u5217 \u3092 \u53d6\u5f97__\n\n* 2\u5217\u306e\u307f \u53d6\u308a\u51fa\u3059\n\n```{python:Python 3.5}\n>>> \n>>> test_df_2[column_name_list[0:2]]\n         sin_wave  cos_wave\n0    0.000000e+00  1.000000\n1   -5.877853e-01 -0.809017\n2    9.510565e-01  0.309017\n3   -9.510565e-01  0.309017\n4    5.877853e-01 -0.809017\n5   -7.347881e-16  1.000000\n6   -5.877853e-01 -0.809017\n7    9.510565e-01  0.309017\n8   -9.510565e-01  0.309017\n9    5.877853e-01 -0.809017\n10  -1.469576e-15  1.000000\n11  -5.877853e-01 -0.809017\n12   9.510565e-01  0.309017\n13  -9.510565e-01  0.309017\n14   5.877853e-01 -0.809017\n15  -2.204364e-15  1.000000\n16  -5.877853e-01 -0.809017\n17   9.510565e-01  0.309017\n18  -9.510565e-01  0.309017\n19   5.877853e-01 -0.809017\n20  -2.939152e-15  1.000000\n21  -5.877853e-01 -0.809017\n22   9.510565e-01  0.309017\n23  -9.510565e-01  0.309017\n24   5.877853e-01 -0.809017\n25  -1.077937e-14  1.000000\n26  -5.877853e-01 -0.809017\n27   9.510565e-01  0.309017\n28  -9.510565e-01  0.309017\n29   5.877853e-01 -0.809017\n..            ...       ...\n970 -2.704466e-13  1.000000\n971 -5.877853e-01 -0.809017\n972  9.510565e-01  0.309017\n973 -9.510565e-01  0.309017\n974  5.877853e-01 -0.809017\n975 -1.077565e-13  1.000000\n976 -5.877853e-01 -0.809017\n977  9.510565e-01  0.309017\n978 -9.510565e-01  0.309017\n979  5.877853e-01 -0.809017\n980  5.493350e-14  1.000000\n981 -5.877853e-01 -0.809017\n982  9.510565e-01  0.309017\n983 -9.510565e-01  0.309017\n984  5.877853e-01 -0.809017\n985 -2.371238e-13  1.000000\n986 -5.877853e-01 -0.809017\n987  9.510565e-01  0.309017\n988 -9.510565e-01  0.309017\n989  5.877853e-01 -0.809017\n990 -7.443377e-14  1.000000\n991 -5.877853e-01 -0.809017\n992  9.510565e-01  0.309017\n993 -9.510565e-01  0.309017\n994  5.877853e-01 -0.809017\n995 -3.664911e-13  1.000000\n996 -5.877853e-01 -0.809017\n997  9.510565e-01  0.309017\n998 -9.510565e-01  0.309017\n999  5.877853e-01 -0.809017\n\n[1000 rows x 2 columns]\n>>> \n```\n\n\n\n```{python:Python 3.5}\n>>> second_dimensiton_numpy_array = np.array(test_df_2[column_name_list[0:2]])\n```\n\n* numpy.ndarray\u578b \u306e \u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u3068\u3057\u3066 \u5f97\u3089\u308c\u305f\n\n```{python:Python 3.5}\n>>> type(second_dimensiton_numpy_array)\n<class 'numpy.ndarray'>\n>>>\n```\n\n```{python:Python 3.5} \n>>> pprint(second_dimensiton_numpy_array)\narray([[ 0.        ,  1.        ],\n       [-0.58778525, -0.80901699],\n       [ 0.95105652,  0.30901699],\n       ..., \n       [ 0.95105652,  0.30901699],\n       [-0.95105652,  0.30901699],\n       [ 0.58778525, -0.80901699]])\n>>>\n```\n \n* \u4e0a\u3068\u4e0b \u306f \u540c\u3058\n\n```{python:Python 3.5}\n>>> test_df_2[column_name_list[0:2]].head()\n   sin_wave  cos_wave\n0  0.000000  1.000000\n1 -0.587785 -0.809017\n2  0.951057  0.309017\n3 -0.951057  0.309017\n4  0.587785 -0.809017\n>>> \n```\n\n\n___\n\n\n###__\u3010 \u4ed8\u9332 \u3011__\n\n###__\u5404\u5217 \u306e \u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u9593 \u306e \u76f8\u95a2\u4fc2\u6570 \u3092 \u7b97\u51fa\u3057\u3066\u307f\u308b__\n\n####__\uff08 \u65b9\u6cd5\uff11 \uff09__\n\n* __DataFrame \u304b\u3089 1\u6b21\u5143array \u3092 \u53d6\u5f97\u3057\u3066\u3001Numpy.corrcoef()\u30e1\u30bd\u30c3\u30c9\u306b\uff11\u6b21\u5143\u914d\u5217 2\u3064 \u3092 \u6e21\u3059__\n\n```{python:Python 3.5}\n>>> sin_wave_array = np.array(list(test_df_2[column_name_list[0]]))\n>>> cos_wave_array = np.array(list(test_df_2[column_name_list[1]]))\n>>> \n>>> type(sin_wave_array)\n<class 'numpy.ndarray'>\n>>> \n>>> type(cos_wave_array)\n<class 'numpy.ndarray'>\n>>> \n>>> sin_wave_array[0:10]\narray([  0.00000000e+00,  -5.87785252e-01,   9.51056516e-01,\n        -9.51056516e-01,   5.87785252e-01,  -7.34788079e-16,\n        -5.87785252e-01,   9.51056516e-01,  -9.51056516e-01,\n         5.87785252e-01])\n>>> \n>>> cos_wave_array[0:10]\narray([ 1.        , -0.80901699,  0.30901699,  0.30901699, -0.80901699,\n        1.        , -0.80901699,  0.30901699,  0.30901699, -0.80901699])\n>>> \n>>> np.size(sin_wave_array)\n1000\n>>> \n>>> np.size(cos_wave_array)\n1000\n>>> \n```\n\n####__\uff08 \u53c2\u8003 \uff09__\n\n* [Hatena::Diary Pashango's Blog \uff082009/07/14\uff09 \u300c\u9ad8\u901f\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u300cNumpy\u300d\u899a\u66f8\u304d\u300d ](http://d.hatena.ne.jp/pashango_p/20090714/1247590272)\n\n> __\u76f8\u95a2\u4fc2\u6570\uff06\u76f8\u95a2\u4fc2\u6570\u884c\u5217__\n\n```{python:Python 3.5}\n>>> np.corrcoef(sin_wave_array, cos_wave_array) \narray([[  1.00000000e+00,   3.44299758e-14],\n       [  3.44299758e-14,   1.00000000e+00]])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[0]   \narray([  1.00000000e+00,   3.44299758e-14])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[0][1]\n3.4429975774482769e-14\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[1]\narray([  3.44299758e-14,   1.00000000e+00])\n>>> \n>>> np.corrcoef(sin_wave_array, cos_wave_array)[1][0]\n3.4429975774482769e-14\n>>> \n```\n\n####__\uff08 \u65b9\u6cd52 \uff09__\n\n* __DataFrame.corr() \u30e1\u30bd\u30c3\u30c9 \u3092 \u4f7f\u3046__\n\n```{python:Python 3.5}\n>>> test_df_2.corr()\n               sin_wave      cos_wave  sin + cos\nsin_wave   1.000000e+00  3.443057e-14   0.707107\ncos_wave   3.443057e-14  1.000000e+00   0.707107\nsin + cos  7.071068e-01  7.071068e-01   1.000000\n>>>\n```\n\n__\uff08 \u7d50\u679c \u3082 DataFrame\u578b \uff09__\n\n```{python:Python 3.5}\n>>> type(test_df_2.corr())\n<class 'pandas.core.frame.DataFrame'>\n>>> \n```\n\n__\uff08 \u7d50\u679c \u3092 as_matrix()\u30e1\u30bd\u30c3\u30c9 \u3067 \u591a\u6b21\u5143array\u578b \u306b \u5909\u63db\u3059\u308b \uff09__\n\n```{python:Python 3.5}\n>>> test_df_2.corr().as_matrix()\narray([[  1.00000000e+00,   3.44305695e-14,   7.07106781e-01],\n       [  3.44305695e-14,   1.00000000e+00,   7.07106781e-01],\n       [  7.07106781e-01,   7.07106781e-01,   1.00000000e+00]])\n>>>\n```\n\n```{python:Python 3.5}\n>>> corr_matrix_array = test_df_2.corr().as_matrix()\n>>> pprint(corr_matrix_array)\narray([[  1.00000000e+00,   3.44305695e-14,   7.07106781e-01],\n       [  3.44305695e-14,   1.00000000e+00,   7.07106781e-01],\n       [  7.07106781e-01,   7.07106781e-01,   1.00000000e+00]])\n>>> \n```\n\n```{python:Python 3.5}\n>>> type(corr_matrix_array)\n<class 'numpy.ndarray'>\n>>> \n```\n\n###__\u300c\u898b\u305b\u304b\u3051\u306e\u76f8\u95a2\u300d\u3092\u306a\u304f\u3059\u305f\u3081\u306b\u306f\u3001\u30c7\u30fc\u30bf\u3092\u57fa\u6e96\u5316\u3057\u3001\u3055\u3089\u306bADF\u691c\u5b9a\u3092\u7d4c\u3066\u300c\u5b9a\u5e38\u904e\u7a0b\u300d\u306b\u623b\u3059\uff08\u5bfe\u6570\u3092\u3068\u308b\u3001\u968e\u5dee\u3092\u3068\u308b\u7b49\uff09\u30b9\u30c6\u30c3\u30d7 \u304c \u5fc5\u8981__\n\n\n__\uff08 \u30c7\u30fc\u30bf\u306e\u300c\u6a19\u6e96\u5316\u300d\u306b\u3064\u3044\u3066 \u53c2\u8003 \uff09__\n\n* [FiS Project \u300c\u3010NumPy\u3011Python\u3067\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u3010SciPy\u3011\u300d](http://www.fisproject.jp/2016/06/data-standardization-using-python/)\n* [CUBE SUGAR CONTAINER \uff082016/07/06\uff09 \u300cPython: \u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u6a19\u6e96\u5316\u306b\u3064\u3044\u3066\u300d](http://blog.amedama.jp/entry/2016/07/06/000918)\n* [Hatena Blog Time waits for no Man \uff082016/01/04\uff09 \u300cnumpy\u3092\u4f7f\u3063\u305f\u30c7\u30fc\u30bf\u306e\u6a19\u6e96\u5316\u300d](http://yuzatakujp1013.hatenablog.com/entry/2016/01/04/132426)\n\n__\uff08 ADF\u691c\u5b9a\u306b\u3064\u3044\u3066 \uff09__\n\n* [HirofumiYashima Qiita\u8a18\u4e8b\u300c\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u5206\u6790\u306e\u521d\u5fc3\u8005\u306b\u5fc5\u305a\u77e5\u3063\u3066\u3082\u3089\u3044\u305f\u3044\u91cd\u8981\u30dd\u30a4\u30f3\u30c8 \uff5e \u56de\u5e30\u5206\u6790 \u30fb\u76f8\u95a2\u95a2\u4fc2 \u5206\u6790\u3092\u884c\u3046\u524d\u306b\u5fc5\u305a\u3084\u308b\u3079\u304d\u3053\u3068\uff08\u30c7\u30fc\u30bf\u306e\u5f62\u306e\u30c1\u30a7\u30c3\u30af\u3068\u5909\u5f62\uff09\u300d](http://qiita.com/HirofumiYashima/items/b6dabe412c868d271410)\n* [HirofumiYashima Qiita\u8a18\u4e8b \u300c\u3010 Python \u6642\u7cfb\u5217\u89e3\u6790 \u3011Yahoo Finance \u304b\u3089 FTSE\u30ed\u30f3\u30c9\u30f3\u682a\u4fa1\u30c7\u30fc\u30bf \u3092 \u53d6\u5f97\u3057\u3066\u3001\u7d4c\u6e08\u6642\u7cfb\u5217\u89e3\u6790 \u306e \u4f5c\u696d\u624b\u9806 \u3092\u901a\u3057\u3067\u884c\u3063\u3066\u307f\u308b \u301c \u30c7\u30fc\u30bf\u306e\u5b9a\u5e38\u6027\u691c\u5b9a \u304b\u3089\uff08G\uff09ARCH\u30e2\u30c7\u30eb\u63a8\u5b9a \u307e\u3067\u300d](http://qiita.com/HirofumiYashima/items/a5d92607bedf3d58944d)\n\n\n####__Numpy.array\u578b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8 \u306f list\u578b \u306b \u578b\u5909\u63db\u3067\u304d\u308b \u306e\u3067\u3001list\u578b \u3057\u304b \u53d6\u308a\u6271\u3048\u306a\u3044 \u7d71\u8a08\u95a2\u6570 \u306b\u3082 \u6e21\u3059\u3053\u3068 \u304c \u3067\u304d\u308b\u3002__\n\n```{python:Python 3.5}\n>>> type(list(sin_wave_array))\n<class 'list'>\n>>> \n>>> print(list(sin_wave_array)[0:10])\n[0.0, -0.58778525229247303, 0.95105651629515342, -0.95105651629515431, 0.58778525229247369, -7.3478807948841188e-16, -0.58778525229246947, 0.9510565162951532, -0.95105651629515398, 0.58778525229247414]\n>>> \n```\n", "tags": ["Python", "python3", "pandas", "numpy", "array"]}