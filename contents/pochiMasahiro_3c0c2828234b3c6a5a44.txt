{"context": "\n\nOpenMPI\u306e\u5c0e\u5165\napt\u3092\u4f7f\u3063\u3066OpenMPI\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5b9f\u884c\u74b0\u5883\uff1f\u3092\u5c0e\u5165\u3059\u308b\u3002\u3050\u3050\u308b\u3068\u3059\u3050\u51fa\u3066\u304f\u308b\u3051\u3069\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304c\u5909\u308f\u3063\u305f(openmpi-dev\u304clibopenmpi-dev\u306b\u306a\u3063\u305f\uff1f)\u307f\u305f\u3044\u306a\u3093\u3067\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u5c0e\u5165\u3059\u308b\u3002\n$sudo apt-get install openmpi-doc openmpi-bin libopenmpi-dev\n\n\n\u3068\u308a\u3042\u3048\u305a\u4e26\u5217\u51e6\u7406\u3067Hello, World\n\u3068\u308a\u3042\u3048\u305a\u4e26\u5217\u51e6\u7406\u3067Hello, World\u3092\u3057\u3066\u307f\u308b\u3002\u30d7\u30ed\u30bb\u30b9\u756a\u53f7\u3068Hello, World\u3092\u8868\u793a\u3059\u308b\u3002\u8a00\u8a9e\u306fC\u8a00\u8a9e\u3067\u66f8\u304d\u307e\u3059\u3002Fortran\u306e\u4eba\u3082\u305d\u3093\u306a\u306b\u5909\u308f\u3089\u306a\u3044\u304b\u3068\u2026\n\nHello.c\n#include <mpi.h>\n#include <stdio.h>\n\nint main( int args, char **argv )\n{\n   int rank, size;\n   MPI_Init( &args, &argv ); // \u4e26\u5217\u51e6\u7406\u306e\u958b\u59cb\n   MPI_Comm_rank( MPI_COMM_WORLD, &rank ); // \u30e9\u30f3\u30af(\u30d7\u30ed\u30bb\u30b9\u756a\u53f7\u306e\u3088\u3046\u306a\u3082\u306e)\u306e\u53d6\u5f97\n   MPI_Comm_size( MPI_COMM_WORLD, &size ); // \u5168\u30e9\u30f3\u30af\u6570\u306e\u53d6\u5f97\n   fprintf( stdout, \"Hello, World from proc: [%d].\\n\", rank );\n   MPI_Finalize(); // \u4e26\u5217\u51e6\u7406\u306e\u7d42\u308f\u308a\n   return 0;\n}\n\n\n\u3053\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306fmpicc\u3092\u4f7f\u3046\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u306fgcc\u3068\u540c\u3058\u611f\u3058\u306a\u306e\u304b\u306a\uff1f\n\u3068\u308a\u3042\u3048\u305a-Wall\u3068-o\u306f\u4f7f\u3048\u307e\u3057\u305f\u3002\n$mpicc Hello.c -o hello -Wall\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u305f\u3089\u5b9f\u884c\u3059\u308b\u3002\u5b9f\u884c\u3059\u308b\u306b\u306fmpirun\u3092\u4f7f\u3046\u3002\n$mpirun -np 4 ./hello\nHello, world from proc: 1.\nHello, world from proc: 0.\nHello, world from proc: 2.\nHello, world from proc: 3.\n\n-np\u306f\u4e26\u5217\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u6570\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u3002\u4eca\u56de\u306f4\u3092\u6307\u5b9a\u3057\u305f\u306e\u30674\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u3001\u305d\u308c\u305e\u308cfprintf\u3092\u5b9f\u884c\u3059\u308b\u306e\u30674\u3064\u8868\u793a\u3055\u308c\u308b\u3002\u7dba\u9e97\u306b0\u304b\u30893\u307e\u3067\u4e26\u3070\u306a\u3044\u306e\u306f\u3001\u4e26\u5217\u51e6\u7406\u3057\u3066\u308b\u304b\u3089\u3067\u3001\u305d\u308c\u305e\u308c\u306bstdout\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3089\u3002Linux\u306e\u6392\u4ed6\u5236\u5fa1\u306f\u3088\u304f\u3057\u3089\u306a\u3044\u3051\u3069\u3001\u305f\u3076\u3093Mutex\u7684\u306a\u3082\u306e\u306a\u6c17\u304c\u3059\u308b\u304b\u3089\u3001\u5148\u306b\u53d6\u5f97\u3057\u305f\u9806\u306b\u8868\u793a\u3057\u3066\u308b\u6c17\u304c\u3059\u308b\u3002\u8868\u793a\u3055\u308c\u308b\u9806\u756a\u306f\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u5909\u308f\u308a\u307e\u3059\u3002\n\u3075\u3064\u3046\u306b./hello\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e26\u5217\u51e6\u7406\u304c\u3055\u308c\u306a\u3044\u3088\u3002\n\n\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u7df4\u7fd2\u3067n!\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u308b\nOpenMPI\u3067\u306f\u4e26\u5217\u5316\u3059\u308b\u3068\u304d\u306b\u305d\u308c\u305e\u308c\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u30e9\u30f3\u30af\u3068\u547c\u3070\u308c\u308b\u756a\u53f7\u304c\u3064\u3051\u3089\u308c\u308b\u3002\u3053\u306e\u30e9\u30f3\u30af\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30bb\u30b9\u9593\u306e\u901a\u4fe1\u304c\u3067\u304d\u308b\u3002\u4eca\u56de\u306f\u30e9\u30f3\u30af0\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u307e\u3068\u3081\u5f79\u30d7\u30ed\u30bb\u30b9\u306b\u3057\u3066\u3001\u30e9\u30f3\u30af1~n\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30e9\u30f3\u30af0\u306b\u81ea\u8eab\u306e\u30e9\u30f3\u30af\u3092\u9001\u4fe1\u3057\u3066\u3001\u30e9\u30f3\u30af0\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u52a0\u7b97\u3057\u3066\u3044\u304f\u3053\u3068\u3067n!\u3092\u6c42\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\nfactorial.c\n#include <mpi.h>\n#include <stdio.h>\n\nint main( int argc, char **argv )\n{\n    int my_rank;\n    int size;\n    int local_result;\n    int result = 0;\n    MPI_Status status;\n\n    int count;\n\n    const int TAG = 0;\n    const int LOAD = 0;\n    const int DESTINATION = 0;\n\n    MPI_Init( &argc, &argv );\n    MPI_Comm_rank( MPI_COMM_WORLD, &my_rank );\n    MPI_Comm_size( MPI_COMM_WORLD, &size );\n\n    if( my_rank == 0 ) // \u307e\u3068\u3081\u5f79\u30d7\u30ed\u30bb\u30b9\u3067\u306e\u51e6\u7406\u3002 1~n\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u52a0\u7b97\u3002\n        for( count = 0; count < size; count++ ) {\n            MPI_Recv( &local_result, LOAD, MPI_INT, cnt, TAG, MPI_COMM_WORLD, &status );\n            fprintf( stdout, \"Proc[%d]\\n\", local_result );\n            result += local_result;\n        }\n        fprintf( stdout, \"Total: %d.\\n\", result ;\n    }\n    else { // 1~n\u30d7\u30ed\u30bb\u30b9\u3067\u306e\u51e6\u7406\u3002\u3000\u30e9\u30f3\u30af0\u30d7\u30ed\u30bb\u30b9\u306b\u5411\u304b\u3063\u3066\u81ea\u8eab\u306e\u30e9\u30f3\u30af\u3092\u9001\u4fe1\u3002\n        MPI_Send( &my_rank, LOAD, MPI_INT, DESTINATION, TAG, MPI_COMM_WORLD );\n    }\n\n    MPI_Finalise();\n\n    return 0;\n}\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30bb\u30b9\u6570\uff0d1\u304cn\u306a\u308a\u307e\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306b\n$mpirun -np 11 factrial\n\n\u3063\u3066\u3059\u308b\u3068\u3001\nTotal: 55.\n\n\u3068\u3001\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nLinux\u3067fork\u3068\u304b\u3057\u305f\u3053\u3068\u3042\u308b\u4eba\u306f\u306a\u306b\u3084\u3063\u3066\u308b\u304b\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u52d5\u4f5c\u3092\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nMPI_Init\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u6642\u70b9\u304b\u3089\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001MPI_Init\u4ee5\u964d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u751f\u6210\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u305d\u308c\u305e\u308c\u3067\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3067\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001MPI_Comm_rank\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u30d7\u30ed\u30bb\u30b9\u306e\u30e9\u30f3\u30af\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u30e9\u30f3\u30af\u3092if\u3067\u6bd4\u8f03\u3059\u308b\u3053\u3068\u3067\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u51e6\u7406\u3092\u5206\u5c90\u3057\u307e\u3059\u3002\n\n\u30e9\u30f3\u30af0\u3067\u3042\u308c\u3070\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u5f85\u3064\u3002\n\u30e9\u30f3\u30af0\u4ee5\u5916\u3067\u3042\u308c\u3070\u3001\u30e9\u30f3\u30af0\u30d7\u30ed\u30bb\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3002\n\n\u4eca\u56de\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306b\u306fMPI_Send\u3068MPI_Recv\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u578b\u306e\u901a\u4fe1\u95a2\u6570\u3067\u3059\u3002\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3068\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u306f\u305d\u306e\u624b\u306e\u30d7\u30ed\u306e\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3046\u306e\u3067\u3053\u3053\u3067\u306f\u6df1\u3044\u8aac\u660e\u306f\u907f\u3051\u307e\u3059\u304c\u3001\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u901a\u4fe1\u306e\u51e6\u7406\u304c\u7d42\u4e86\u3059\u308b\u307e\u3067\u5168\u4f53\u306e\u51e6\u7406\u304c\u305d\u3053\u3067\u505c\u6b62\u3057\u307e\u3059\u3002\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u901a\u4fe1\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u306a\u304f\u3066\u3082\u6b21\u306e\u51e6\u7406\u306b\u9032\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u3002\nMPI_Send\u3068MPI_Recv\u306e\u5f15\u6570\u306f\u3001\n\n\nMPI_Send(void *buf, int count, MPI_Datatype type, int dest, int tag, MPI_Comm comm)\n\n\u30c7\u30fc\u30bf, \u30c7\u30fc\u30bf\u306e\u500b\u6570, \u30c7\u30fc\u30bf\u578b, \u5b9b\u5148\u306e\u30e9\u30f3\u30af\u756a\u53f7, \u8377\u7269\u306e\u30bf\u30b0, \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30bf(\u307e\u3041MPI_COMM_WORLD\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026)\n\n\n\nMPI_Recv(void *buf, int count, MPI_Datatype type, int source, int tag, MPI_Comm comm, MPI_Status *status)\n\n\u30c7\u30fc\u30bf, \u30c7\u30fc\u30bf\u306e\u500b\u6570, \u30c7\u30fc\u30bf\u578b, \u9001\u4fe1\u5143\u306e\u30e9\u30f3\u30af\u756a\u53f7, \u8377\u7269\u306e\u30bf\u30b0, \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30bf(\u307e\u3041MPI_COMM_WORLD\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026), \u30b9\u30c6\u30fc\u30bf\u30b9(Fortran\u306e\u307f)\n\n\n\n\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n#OpenMPI\u306e\u5c0e\u5165\napt\u3092\u4f7f\u3063\u3066OpenMPI\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u5b9f\u884c\u74b0\u5883\uff1f\u3092\u5c0e\u5165\u3059\u308b\u3002\u3050\u3050\u308b\u3068\u3059\u3050\u51fa\u3066\u304f\u308b\u3051\u3069\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u304c\u5909\u308f\u3063\u305f(openmpi-dev\u304clibopenmpi-dev\u306b\u306a\u3063\u305f\uff1f)\u307f\u305f\u3044\u306a\u3093\u3067\u3001\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3067\u5c0e\u5165\u3059\u308b\u3002\n\n```shell\n$sudo apt-get install openmpi-doc openmpi-bin libopenmpi-dev\n```\n\n#\u3068\u308a\u3042\u3048\u305a\u4e26\u5217\u51e6\u7406\u3067Hello, World\n\u3068\u308a\u3042\u3048\u305a\u4e26\u5217\u51e6\u7406\u3067Hello, World\u3092\u3057\u3066\u307f\u308b\u3002\u30d7\u30ed\u30bb\u30b9\u756a\u53f7\u3068Hello, World\u3092\u8868\u793a\u3059\u308b\u3002\u8a00\u8a9e\u306fC\u8a00\u8a9e\u3067\u66f8\u304d\u307e\u3059\u3002Fortran\u306e\u4eba\u3082\u305d\u3093\u306a\u306b\u5909\u308f\u3089\u306a\u3044\u304b\u3068\u2026\n\n```c:Hello.c\n#include <mpi.h>\n#include <stdio.h>\n\nint main( int args, char **argv )\n{\n   int rank, size;\n   MPI_Init( &args, &argv ); // \u4e26\u5217\u51e6\u7406\u306e\u958b\u59cb\n   MPI_Comm_rank( MPI_COMM_WORLD, &rank ); // \u30e9\u30f3\u30af(\u30d7\u30ed\u30bb\u30b9\u756a\u53f7\u306e\u3088\u3046\u306a\u3082\u306e)\u306e\u53d6\u5f97\n   MPI_Comm_size( MPI_COMM_WORLD, &size ); // \u5168\u30e9\u30f3\u30af\u6570\u306e\u53d6\u5f97\n   fprintf( stdout, \"Hello, World from proc: [%d].\\n\", rank );\n   MPI_Finalize(); // \u4e26\u5217\u51e6\u7406\u306e\u7d42\u308f\u308a\n   return 0;\n}\n```\n\n\u3053\u308c\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306fmpicc\u3092\u4f7f\u3046\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3068\u304b\u306fgcc\u3068\u540c\u3058\u611f\u3058\u306a\u306e\u304b\u306a\uff1f\n\u3068\u308a\u3042\u3048\u305a`-Wall`\u3068`-o`\u306f\u4f7f\u3048\u307e\u3057\u305f\u3002\n\n```shell-session\n$mpicc Hello.c -o hello -Wall\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u305f\u3089\u5b9f\u884c\u3059\u308b\u3002\u5b9f\u884c\u3059\u308b\u306b\u306f`mpirun`\u3092\u4f7f\u3046\u3002\n\n```shell-session\n$mpirun -np 4 ./hello\nHello, world from proc: 1.\nHello, world from proc: 0.\nHello, world from proc: 2.\nHello, world from proc: 3.\n```\n\n`-np`\u306f\u4e26\u5217\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u306e\u6570\u3092\u6307\u5b9a\u3059\u308b\u3082\u306e\u3002\u4eca\u56de\u306f4\u3092\u6307\u5b9a\u3057\u305f\u306e\u30674\u3064\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u3001\u305d\u308c\u305e\u308c`fprintf`\u3092\u5b9f\u884c\u3059\u308b\u306e\u30674\u3064\u8868\u793a\u3055\u308c\u308b\u3002\u7dba\u9e97\u306b0\u304b\u30893\u307e\u3067\u4e26\u3070\u306a\u3044\u306e\u306f\u3001\u4e26\u5217\u51e6\u7406\u3057\u3066\u308b\u304b\u3089\u3067\u3001\u305d\u308c\u305e\u308c\u306bstdout\u306b\u66f8\u304d\u8fbc\u3080\u304b\u3089\u3002Linux\u306e\u6392\u4ed6\u5236\u5fa1\u306f\u3088\u304f\u3057\u3089\u306a\u3044\u3051\u3069\u3001\u305f\u3076\u3093Mutex\u7684\u306a\u3082\u306e\u306a\u6c17\u304c\u3059\u308b\u304b\u3089\u3001\u5148\u306b\u53d6\u5f97\u3057\u305f\u9806\u306b\u8868\u793a\u3057\u3066\u308b\u6c17\u304c\u3059\u308b\u3002\u8868\u793a\u3055\u308c\u308b\u9806\u756a\u306f\u5b9f\u884c\u3059\u308b\u305f\u3073\u306b\u5909\u308f\u308a\u307e\u3059\u3002\n\u3075\u3064\u3046\u306b`./hello`\u3067\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e26\u5217\u51e6\u7406\u304c\u3055\u308c\u306a\u3044\u3088\u3002\n\n#\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u7df4\u7fd2\u3067n!\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u308b\nOpenMPI\u3067\u306f\u4e26\u5217\u5316\u3059\u308b\u3068\u304d\u306b\u305d\u308c\u305e\u308c\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u30e9\u30f3\u30af\u3068\u547c\u3070\u308c\u308b\u756a\u53f7\u304c\u3064\u3051\u3089\u308c\u308b\u3002\u3053\u306e\u30e9\u30f3\u30af\u3092\u4f7f\u3063\u3066\u30d7\u30ed\u30bb\u30b9\u9593\u306e\u901a\u4fe1\u304c\u3067\u304d\u308b\u3002\u4eca\u56de\u306f\u30e9\u30f3\u30af0\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u307e\u3068\u3081\u5f79\u30d7\u30ed\u30bb\u30b9\u306b\u3057\u3066\u3001\u30e9\u30f3\u30af1~n\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30e9\u30f3\u30af0\u306b\u81ea\u8eab\u306e\u30e9\u30f3\u30af\u3092\u9001\u4fe1\u3057\u3066\u3001\u30e9\u30f3\u30af0\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u9001\u3089\u308c\u3066\u304d\u305f\u30c7\u30fc\u30bf\u3092\u52a0\u7b97\u3057\u3066\u3044\u304f\u3053\u3068\u3067n!\u3092\u6c42\u3081\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\n```c:factorial.c\n#include <mpi.h>\n#include <stdio.h>\n\nint main( int argc, char **argv )\n{\n    int my_rank;\n    int size;\n    int local_result;\n    int result = 0;\n    MPI_Status status;\n\n    int count;\n\n    const int TAG = 0;\n    const int LOAD = 0;\n    const int DESTINATION = 0;\n\n    MPI_Init( &argc, &argv );\n    MPI_Comm_rank( MPI_COMM_WORLD, &my_rank );\n    MPI_Comm_size( MPI_COMM_WORLD, &size );\n\n    if( my_rank == 0 ) // \u307e\u3068\u3081\u5f79\u30d7\u30ed\u30bb\u30b9\u3067\u306e\u51e6\u7406\u3002 1~n\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u3063\u3066\u52a0\u7b97\u3002\n        for( count = 0; count < size; count++ ) {\n            MPI_Recv( &local_result, LOAD, MPI_INT, cnt, TAG, MPI_COMM_WORLD, &status );\n            fprintf( stdout, \"Proc[%d]\\n\", local_result );\n            result += local_result;\n        }\n        fprintf( stdout, \"Total: %d.\\n\", result ;\n    }\n    else { // 1~n\u30d7\u30ed\u30bb\u30b9\u3067\u306e\u51e6\u7406\u3002\u3000\u30e9\u30f3\u30af0\u30d7\u30ed\u30bb\u30b9\u306b\u5411\u304b\u3063\u3066\u81ea\u8eab\u306e\u30e9\u30f3\u30af\u3092\u9001\u4fe1\u3002\n        MPI_Send( &my_rank, LOAD, MPI_INT, DESTINATION, TAG, MPI_COMM_WORLD );\n    }\n\n    MPI_Finalise();\n\n    return 0;\n}\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30bb\u30b9\u6570\uff0d1\u304cn\u306a\u308a\u307e\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u306b\n\n```shell-session\n$mpirun -np 11 factrial\n```\n\n\u3063\u3066\u3059\u308b\u3068\u3001\n\n```shell-session\nTotal: 55.\n```\n\n\u3068\u3001\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nLinux\u3067`fork`\u3068\u304b\u3057\u305f\u3053\u3068\u3042\u308b\u4eba\u306f\u306a\u306b\u3084\u3063\u3066\u308b\u304b\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u52d5\u4f5c\u3092\u8aac\u660e\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n`MPI_Init`\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u305d\u306e\u6642\u70b9\u304b\u3089\u5b9f\u884c\u6642\u306b\u6307\u5b9a\u3057\u305f\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\u3053\u3053\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001`MPI_Init`\u4ee5\u964d\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u751f\u6210\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30b9\u305d\u308c\u305e\u308c\u3067\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3067\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001`MPI_Comm_rank`\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001\u81ea\u30d7\u30ed\u30bb\u30b9\u306e\u30e9\u30f3\u30af\u3092\u53d6\u5f97\u3057\u3066\u3001\u305d\u306e\u30e9\u30f3\u30af\u3092`if`\u3067\u6bd4\u8f03\u3059\u308b\u3053\u3068\u3067\u30d7\u30ed\u30bb\u30b9\u3054\u3068\u306b\u51e6\u7406\u3092\u5206\u5c90\u3057\u307e\u3059\u3002\n\n- \u30e9\u30f3\u30af0\u3067\u3042\u308c\u3070\u3001\u4ed6\u306e\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306e\u30c7\u30fc\u30bf\u3092\u5f85\u3064\u3002\n- \u30e9\u30f3\u30af0\u4ee5\u5916\u3067\u3042\u308c\u3070\u3001\u30e9\u30f3\u30af0\u30d7\u30ed\u30bb\u30b9\u306b\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3002\n\n\u4eca\u56de\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306b\u306f`MPI_Send`\u3068`MPI_Recv`\u3092\u4f7f\u7528\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u578b\u306e\u901a\u4fe1\u95a2\u6570\u3067\u3059\u3002\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3068\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u306f\u305d\u306e\u624b\u306e\u30d7\u30ed\u306e\u65b9\u304c\u3044\u3089\u3063\u3057\u3083\u308b\u3068\u601d\u3046\u306e\u3067\u3053\u3053\u3067\u306f\u6df1\u3044\u8aac\u660e\u306f\u907f\u3051\u307e\u3059\u304c\u3001\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u901a\u4fe1\u306e\u51e6\u7406\u304c\u7d42\u4e86\u3059\u308b\u307e\u3067\u5168\u4f53\u306e\u51e6\u7406\u304c\u305d\u3053\u3067\u505c\u6b62\u3057\u307e\u3059\u3002\u30ce\u30f3\u30d6\u30ed\u30c3\u30ad\u30f3\u30b0\u3067\u306f\u901a\u4fe1\u51e6\u7406\u304c\u5b8c\u4e86\u3057\u306a\u304f\u3066\u3082\u6b21\u306e\u51e6\u7406\u306b\u9032\u3093\u3067\u3057\u307e\u3044\u307e\u3059\u3002\n\n`MPI_Send`\u3068`MPI_Recv`\u306e\u5f15\u6570\u306f\u3001\n\n- `MPI_Send(void *buf, int count, MPI_Datatype type, int dest, int tag, MPI_Comm comm)`\n\t- \u30c7\u30fc\u30bf, \u30c7\u30fc\u30bf\u306e\u500b\u6570, \u30c7\u30fc\u30bf\u578b, \u5b9b\u5148\u306e\u30e9\u30f3\u30af\u756a\u53f7, \u8377\u7269\u306e\u30bf\u30b0, \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30bf(\u307e\u3041MPI_COMM_WORLD\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026)\n- `MPI_Recv(void *buf, int count, MPI_Datatype type, int source, int tag, MPI_Comm comm, MPI_Status *status)`\n\t- \u30c7\u30fc\u30bf, \u30c7\u30fc\u30bf\u306e\u500b\u6570, \u30c7\u30fc\u30bf\u578b, \u9001\u4fe1\u5143\u306e\u30e9\u30f3\u30af\u756a\u53f7, \u8377\u7269\u306e\u30bf\u30b0, \u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30bf(\u307e\u3041MPI_COMM_WORLD\u3067\u3044\u3044\u3093\u3058\u3083\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u2026), \u30b9\u30c6\u30fc\u30bf\u30b9(Fortran\u306e\u307f)\n\n\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n", "tags": ["\u4e26\u5217\u51e6\u7406", "openmpi"]}