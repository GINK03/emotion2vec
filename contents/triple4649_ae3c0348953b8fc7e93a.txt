{"context": "\n\n\u59cb\u3081\u306b\n\u30cd\u30c3\u30c8\u4e0a\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u304c\u3044\u307e\u3044\u3061\u3074\u3093\u3068\u6765\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u306a\u308a\u306b\u307e\u3068\u3081\u305f\u8a18\u4e8b\u3092\u30a2\u30c3\u30d7\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u65b9\u91dd\u306f\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u89e3\u8aac\u3067\u3088\u304f\u53d6\u308a\u4e0a\u3052\u3089\u308c\u308b\u3001\u8981\u7d20\u306e\u5206\u89e3\u3068\u518d\u96c6\u7d04\u3092\u63a1\u7528\u3057\u3001Java\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u304c\u547d\u4ee4\u578b\u8a00\u8a9e\u3067\u3069\u306e\u304f\u3089\u3044\u9762\u5012\u304f\u3055\u3044\u304b\u78ba\u8a8d\u3057\u3066\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\n\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u8003\u3048\u65b9\n\u4f8b\u3068\u3057\u3066\u3001[6,1,8,5,9]\u3068\u3044\u3046\u6570\u5b57\u306e\u96c6\u5408\u306e\u30bd\u30fc\u30c8\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u308b\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3092\u884c\u3046\u6642\u3001\u8981\u7d20\u3092\u5206\u5272\u3059\u308b\u57fa\u6e96\u304c\u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u305d\u306e\u57fa\u6e96\u306b\u96c6\u5408\u306e1\u756a\u76ee\u306e\u8981\u7d20\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\n\n\u30ea\u30b9\u30c8\u306e\u5206\u89e3\u30a4\u30e1\u30fc\u30b8\n\n\n\u5206\u89e3\u5f8c\u306e\u30ea\u30b9\u30c8\u306e\u96c6\u7d04\u306e\u30a4\u30e1\u30fc\u30b8\n\n\n\u5b9f\u88c5\u30b3\u30fc\u30c9\n\nQsort.java\npackage test;\n\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.List;\n\npublic class QSort {\n\n    public static void main(String args[]){\n        System.out.println(qsort(Arrays.asList(1,5,6,2,11,9,4)));\n    }\n\n    public static List<Integer> qsort(List<Integer>list){\n        if(list.size()==1){\n            //\u914d\u5217\u306e\u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u4e00\u3064\u306a\u3089\u3070\u3001\u518d\u5e30\u51e6\u7406\u3092\u629c\u3051\u308b\n            return new ArrayList<Integer>(list) ;\n        }else{\n            //\u30ea\u30b9\u30c8\u5185\u306e\u8981\u7d20\u3092\u5206\u5272\u3059\u308b\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\n            Divive div = splitList(list);\n            //\u5206\u5272\u5f8c\u306e\u914d\u5217\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n            List<Integer>newList = new ArrayList<Integer>();\n            //\u5c0f\u3055\u3044\u6570\u306e\u96c6\u5408\u3092\u518d\u5ea6\u3001\u5207\u308a\u5206\u3051\u308b\u305f\u3081\u306b\u518d\u5e30\u51e6\u7406\u3092\u884c\u3046\n            newList.addAll(qsort(div.leftList));\n            //\u5927\u304d\u3044\u6570\u306e\u96c6\u5408\u3092\u518d\u5ea6\u3001\u5207\u308a\u5206\u3051\u308b\u305f\u3081\u306b\u518d\u5e30\u51e6\u7406\u3092\u884c\u3046\n            newList.addAll(qsort(div.rightList));\n            return newList ;\n        }\n    }\n\n    //\u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\u95a2\u6570\n    public static Divive splitList(List<Integer>list){\n        int size =list.size();\n        Divive div = new Divive();\n        //\u8981\u7d20\u6570\u304c\u4e8c\u3064\u306e\u5834\u5408\u306f\u3001\u8981\u7d20\u9593\u306e\u5927\u5c0f\u3092\u6bd4\u8f03\u3057\u3066\u8981\u7d20\u5206\u5272\u3092\u884c\u3046\n        if(size==2){\n            if(list.get(0)<=list.get(1)){\n                div.leftList.add(list.get(0))  ;\n                div.rightList.add(list.get(1))  ;\n            }else{\n                div.leftList.add(list.get(1))  ;\n                div.rightList.add(list.get(0))  ;\n            }\n            return div;\n        }\n\n        int pivot = list.get(0);\n        List<Integer>smallIntList =new ArrayList<Integer>();\n        List<Integer>largeIntList =new ArrayList<Integer>();\n        //\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u6240\u5b9a\u306e\u57fa\u6e96\u306b\u5f93\u3063\u3066\u3001\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5927\u304d\u3044\u96c6\u5408\u306b\u5206\u3051\u308b\n        for(int i=0;i<size;i++){\n            //\u57fa\u6e96\u3088\u308a\u5c0f\u3055\u3044\u6570\u306e\u96c6\u5408\u3092\u751f\u6210\u3059\u308b\n            if(pivot>=list.get(i))smallIntList.add(list.get(i));\n            //\u57fa\u6e96\u3088\u308a\u5927\u304d\u3044\u6570\u306e\u96c6\u5408\u3092\u751f\u6210\u3059\u308b\n            if(pivot<list.get(size - 1- i))largeIntList.add(list.get(size - 1- i));\n        }\n\n        //\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u306e\u5f15\u6570\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u5206\u5272\u3057\u305f\u30ea\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u3059\n        if(smallIntList.size()!=list.size()){\n            div.leftList.addAll(smallIntList);\n            div.rightList.addAll(largeIntList);\n        }\n        //\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u306e\u5f15\u6570\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u57fa\u6e96\u3068\u306a\u308b\u6570\u5b57\u304c\u4e00\u756a\u5c0f\u3055\u3044\u306e\u3067\u3001\n        //\u30ea\u30b9\u30c8\u306e\u4e00\u756a\u5de6\u3068\u305d\u308c\u4ee5\u5916\u3067\u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\n        else{\n            Deque<Integer> que  = new ArrayDeque<Integer>(smallIntList);\n            div.leftList.add(que.pop()) ;\n            div.rightList.addAll(new ArrayList<Integer>(que))  ;\n        }\n        return div;\n    }\n\n    //Java\u306f\u623b\u308a\u5024\u306b2\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u5206\u5272\u5f8c\u306e\u96c6\u5408\u3092\u8868\u3059\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    static public class Divive{\n        List<Integer>leftList =new ArrayList<Integer>();\n        List<Integer>rightList =new ArrayList<Integer>();\n    }\n}\n\n\n#\u59cb\u3081\u306b\n\u30cd\u30c3\u30c8\u4e0a\u3067\u89e3\u8aac\u3057\u3066\u3044\u308b\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u304c\u3044\u307e\u3044\u3061\u3074\u3093\u3068\u6765\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u306a\u308a\u306b\u307e\u3068\u3081\u305f\u8a18\u4e8b\u3092\u30a2\u30c3\u30d7\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u65b9\u91dd\u306f\u95a2\u6570\u578b\u8a00\u8a9e\u306e\u89e3\u8aac\u3067\u3088\u304f\u53d6\u308a\u4e0a\u3052\u3089\u308c\u308b\u3001\u8981\u7d20\u306e\u5206\u89e3\u3068\u518d\u96c6\u7d04\u3092\u63a1\u7528\u3057\u3001Java\u3067\u5b9f\u88c5\u3057\u3066\u307f\u3066\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u5b9f\u88c5\u304c\u547d\u4ee4\u578b\u8a00\u8a9e\u3067\u3069\u306e\u304f\u3089\u3044\u9762\u5012\u304f\u3055\u3044\u304b\u78ba\u8a8d\u3057\u3066\u898b\u308b\u3053\u3068\u306b\u3057\u307e\u3059\n#\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u306e\u8003\u3048\u65b9\n\u4f8b\u3068\u3057\u3066\u3001[6,1,8,5,9]\u3068\u3044\u3046\u6570\u5b57\u306e\u96c6\u5408\u306e\u30bd\u30fc\u30c8\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u308b\n\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8\u3092\u884c\u3046\u6642\u3001\u8981\u7d20\u3092\u5206\u5272\u3059\u308b\u57fa\u6e96\u304c\u5fc5\u8981\u306b\u306a\u308b\u304c\u3001\u3053\u3053\u3067\u306f\u305d\u306e\u57fa\u6e96\u306b\u96c6\u5408\u306e1\u756a\u76ee\u306e\u8981\u7d20\u3092\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\n## \u30ea\u30b9\u30c8\u306e\u5206\u89e3\u30a4\u30e1\u30fc\u30b8\n![image](https://qiita-image-store.s3.amazonaws.com/0/136860/dc120638-53eb-c0c5-3de7-ddde0ead7ccc.png)\n\n## \u5206\u89e3\u5f8c\u306e\u30ea\u30b9\u30c8\u306e\u96c6\u7d04\u306e\u30a4\u30e1\u30fc\u30b8\n![image](https://qiita-image-store.s3.amazonaws.com/0/136860/3905ab4a-2014-b7b8-e43b-3308f89ea1e7.png)\n\n\n#\u5b9f\u88c5\u30b3\u30fc\u30c9\n\n```Qsort.java\npackage test;\n\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.List;\n\npublic class QSort {\n\n\tpublic static void main(String args[]){\n\t\tSystem.out.println(qsort(Arrays.asList(1,5,6,2,11,9,4)));\n\t}\n\n\tpublic static List<Integer> qsort(List<Integer>list){\n\t\tif(list.size()==1){\n\t\t\t//\u914d\u5217\u306e\u542b\u307e\u308c\u308b\u8981\u7d20\u304c\u4e00\u3064\u306a\u3089\u3070\u3001\u518d\u5e30\u51e6\u7406\u3092\u629c\u3051\u308b\n\t\t\treturn new ArrayList<Integer>(list) ;\n\t\t}else{\n\t\t\t//\u30ea\u30b9\u30c8\u5185\u306e\u8981\u7d20\u3092\u5206\u5272\u3059\u308b\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\n\t\t\tDivive div = splitList(list);\n\t\t\t//\u5206\u5272\u5f8c\u306e\u914d\u5217\u3092\u683c\u7d0d\u3059\u308b\u30ea\u30b9\u30c8\u3092\u751f\u6210\u3059\u308b\n\t\t\tList<Integer>newList = new ArrayList<Integer>();\n\t\t\t//\u5c0f\u3055\u3044\u6570\u306e\u96c6\u5408\u3092\u518d\u5ea6\u3001\u5207\u308a\u5206\u3051\u308b\u305f\u3081\u306b\u518d\u5e30\u51e6\u7406\u3092\u884c\u3046\n\t\t\tnewList.addAll(qsort(div.leftList));\n\t\t\t//\u5927\u304d\u3044\u6570\u306e\u96c6\u5408\u3092\u518d\u5ea6\u3001\u5207\u308a\u5206\u3051\u308b\u305f\u3081\u306b\u518d\u5e30\u51e6\u7406\u3092\u884c\u3046\n\t\t\tnewList.addAll(qsort(div.rightList));\n\t\t\treturn newList ;\n\t\t}\n\t}\n\n\t//\u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\u95a2\u6570\n\tpublic static Divive splitList(List<Integer>list){\n\t\tint size =list.size();\n\t\tDivive div = new Divive();\n\t\t//\u8981\u7d20\u6570\u304c\u4e8c\u3064\u306e\u5834\u5408\u306f\u3001\u8981\u7d20\u9593\u306e\u5927\u5c0f\u3092\u6bd4\u8f03\u3057\u3066\u8981\u7d20\u5206\u5272\u3092\u884c\u3046\n\t\tif(size==2){\n\t\t\tif(list.get(0)<=list.get(1)){\n\t\t\t\tdiv.leftList.add(list.get(0))  ;\n\t\t\t\tdiv.rightList.add(list.get(1))  ;\n\t\t\t}else{\n\t\t\t\tdiv.leftList.add(list.get(1))  ;\n\t\t\t\tdiv.rightList.add(list.get(0))  ;\n\t\t\t}\n\t\t\treturn div;\n\t\t}\n\n\t\tint pivot = list.get(0);\n\t\tList<Integer>smallIntList =new ArrayList<Integer>();\n\t\tList<Integer>largeIntList =new ArrayList<Integer>();\n\t\t//\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u6240\u5b9a\u306e\u57fa\u6e96\u306b\u5f93\u3063\u3066\u3001\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5927\u304d\u3044\u96c6\u5408\u306b\u5206\u3051\u308b\n\t\tfor(int i=0;i<size;i++){\n\t\t\t//\u57fa\u6e96\u3088\u308a\u5c0f\u3055\u3044\u6570\u306e\u96c6\u5408\u3092\u751f\u6210\u3059\u308b\n\t\t\tif(pivot>=list.get(i))smallIntList.add(list.get(i));\n\t\t\t//\u57fa\u6e96\u3088\u308a\u5927\u304d\u3044\u6570\u306e\u96c6\u5408\u3092\u751f\u6210\u3059\u308b\n\t\t\tif(pivot<list.get(size - 1- i))largeIntList.add(list.get(size - 1- i));\n\t\t}\n\t\t\n\t\t//\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u306e\u5f15\u6570\u304c\u4e00\u81f4\u3057\u306a\u3044\u5834\u5408\u3001\u5206\u5272\u3057\u305f\u30ea\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b\u3092\u547c\u3073\u51fa\u3057\u5143\u306b\u623b\u3059\n\t\tif(smallIntList.size()!=list.size()){\n\t\t\tdiv.leftList.addAll(smallIntList);\n\t\t\tdiv.rightList.addAll(largeIntList);\n\t\t}\n\t\t//\u5c0f\u3055\u3044\u96c6\u5408\u3068\u5f15\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u306e\u5f15\u6570\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306f\u57fa\u6e96\u3068\u306a\u308b\u6570\u5b57\u304c\u4e00\u756a\u5c0f\u3055\u3044\u306e\u3067\u3001\n\t\t//\u30ea\u30b9\u30c8\u306e\u4e00\u756a\u5de6\u3068\u305d\u308c\u4ee5\u5916\u3067\u30ea\u30b9\u30c8\u3092\u5206\u5272\u3059\u308b\n\t\telse{\n\t\t\tDeque<Integer> que  = new ArrayDeque<Integer>(smallIntList);\n\t\t\tdiv.leftList.add(que.pop()) ;\n\t\t\tdiv.rightList.addAll(new ArrayList<Integer>(que))  ;\n\t\t}\n\t\treturn div;\n\t}\n\t\n\t//Java\u306f\u623b\u308a\u5024\u306b2\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u5206\u5272\u5f8c\u306e\u96c6\u5408\u3092\u8868\u3059\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n\tstatic public class Divive{\n\t\tList<Integer>leftList =new ArrayList<Integer>();\n\t\tList<Integer>rightList =new ArrayList<Integer>();\n\t}\n}\n", "tags": ["\u30af\u30a4\u30c3\u30af\u30bd\u30fc\u30c8", "Java", "\u95a2\u6570\u578b\u8a00\u8a9e"]}