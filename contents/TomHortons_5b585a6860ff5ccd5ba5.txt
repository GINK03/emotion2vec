{"context": "\n\n\u306f\u3058\u3081\u306b\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5, seaborn 0.7, pandas 0.17\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e(%matplotlib inline\u306f\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044)\nseaborn\u306eboxplot, violinplot\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\n\n\u76ee\u6b21\n\n\u30c7\u30fc\u30bf\u306e\u751f\u6210\nBoxplot\nViolinplot\n\u6700\u5f8c\u306b\n\u53c2\u8003\n\n\n1. \u30c7\u30fc\u30bf\u306e\u751f\u6210\n\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u3053\u3053\u306f\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\u3053\u3061\u3089\u306emake_classification\u3092\u7528\u3044\u30662\u6b21\u51432\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u30921000\u30b5\u30f3\u30d7\u30eb\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\u3055\u3089\u306b2\u3064\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u305d\u308c\u305e\u308cA, B\u3068\u3057\uff0c\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092sex\u3068\u3057\u307e\u3059\uff0e\n\u52a0\u3048\u3066numpy.random.binomial()\u30670, 1, 2\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u751f\u6210\u3057\uff0c\u305d\u308c\u3092\u9023\u7d50\u3057types\u3068\u3057\u307e\u3059\uff0e\n\nmake_classification.py\nimport numpy as np\nfrom sklearn.datasets import make_classification\nimport pandas as pd\n\nx, y = make_classification(n_samples=1000, n_features=2, n_redundant=0, n_informative=2,n_clusters_per_class=2, n_classes=2)\ndata = np.c_[np.c_[x, y], np.random.binomial(2, .5, len(x))]\ndata = pd.DataFrame(data).rename(columns={0:'A', 1:'B', 2:'sex', 3:'types'})\n\n\ndata\u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\n          A         B  sex  types\n0  2.131411 -1.754907    0      1\n1 -0.046614 -1.009540    0      2\n2  0.136387 -0.236662    1      1\n3 -3.515190  2.117925    1      1\n4 -2.099287  1.647548    1      1\n5 -0.536360 -0.920529    0      0\n6  0.281726 -0.572448    1      2\n7  2.202351 -3.214435    0      1\n8 -0.825666  0.847394    1      0\n9 -1.602873  1.338847    1      2\n\n\u3053\u308c\u3067\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u30602\u3064\u306e\u6570\u5024\u30c7\u30fc\u30bf\u304c\u751f\u6210\u3067\u304d\u307e\u3057\u305f\uff0e\n\n2. Boxplot\n2\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u3060\u6570\u5024\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u53ef\u8996\u5316\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\uff0e\nseaborn\u306eboxplot\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\n\nboxplot.py\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.boxplot(x='types', y=\"A\", hue='sex', data=data, palette=\"PRGn\")\nsns.despine(offset=10, trim=True)\n\n\n\nsex, type\u3054\u3068\u306b\u7bb1\u3072\u3052\u56f3\u304c\u66f8\u3051\u307e\u3057\u305f\uff0e\nwikipedia\u306b\u3042\u308b\u3088\u3046\u306b\uff0c\u771f\u3093\u4e2d\u306e\u7dda\u306f\u4e2d\u592e\u5024\uff0c\u7bb1\u306e\u4e0a\u4e0b\u306f\u305d\u308c\u305e\u308c\u7b2c\uff11\u30fb\u7b2c\uff13\u56db\u5206\u4f4d\u70b9\uff0c\u30d2\u30b2\u306e\u4e0a\u4e0b\u306f\u305d\u308c\u305e\u308c\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u306a\u308a\u307e\u3059\uff0e\u4e0a\u4e0b\u306e\u70b9\u306f\uff0c\u7b2c1\u30fb\u7b2c\uff13\u56db\u5206\u4f4d\u70b9\u304b\u3089\u5224\u65ad\u3057\u305f\u5834\u5408\u306e\u300c\u5916\u308c\u5024\u300d\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4ed6\u306e\u6570\u5024B\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n\u6570\u5024B\u304c\u9855\u8457\u306b\u6027\u5225\u5dee\u3092\u8868\u3057\u3066\u3044\u305d\u3046\u3067\u3059\uff0e(data\u306f\u751f\u6210\u3059\u308b\u305f\u3073\u7570\u306a\u308a\u307e\u3059)\n\u30bf\u30a4\u30d7\u306b\u95a2\u3057\u3066\u306f\uff0c\u3053\u306e\u30c7\u30fc\u30bf\u3092\u898b\u308b\u3060\u3051\u3067\u306f\u5206\u985e\u306f\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u3053\u306e\u3088\u3046\u306b\uff0cboxplot\u3092\u7528\u3044\u308b\u3068\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e\n\n3. violinplot\nboxplot\u3068\u540c\u69d8\u306b\uff0c\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u3060\u6570\u5024\u30c7\u30fc\u30bf\u306e\u9055\u3044\u3092\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\u3053\u3061\u3089\u306f\u5404\u6570\u5024\u30c7\u30fc\u30bf\u3092\u5206\u5e03\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\uff0e\n\n\u30c7\u30fc\u30bf\u306e\u4e0b\u51e6\u7406\npandas\u306emelt\u95a2\u6570\u3092\u7528\u3044\u3066\uff0cDataFrame\u3092\u5909\u5f62\u3057\u307e\u3059\uff0e\n\nmelt.py\ndata_batch = pd.melt(data, id_vars = ['types', 'sex'], value_vars = data.columns[:-2].tolist())\nprint data_batch[:10]\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\uff0cDataFrame\u3092\"Unpivot\"\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u5b9f\u884c\u7d50\u679c\u304c\u3053\u3061\u3089\uff0e\n   types  sex variable     value\n0      1    0        A  2.131411\n1      2    0        A -0.046614\n2      1    1        A  0.136387\n3      1    1        A -3.515190\n4      1    1        A -2.099287\n5      0    0        A -0.536360\n6      2    1        A  0.281726\n7      1    0        A  2.202351\n8      0    1        A -0.825666\n9      2    1        A -1.602873\n\n\u6570\u5024\u30c7\u30fc\u30bf\u306e\u30ab\u30e9\u30e0\u540d\u304cvariable\uff0c\u6570\u5024\u304cvalue\u3068\u306a\u308a\u307e\u3057\u305f\uff0e\n\nviolinplot\u3092\u4f5c\u6210\n\u6e96\u5099\u3057\u305f\"Unpivot\"\u30c7\u30fc\u30bf\u3092violinplot\u3092\u7528\u3044\u3066\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\nviolinplot.py\ndata_batch_A = data_batch[data_batch.variable=='A']\nsns.violinplot(x = 'types',  y = 'value', hue = 'sex', data = data_batch_A, split=True)\nsns.despine(offset=10, trim=True)\n\n\n\n\u5de6\u53f3\u306e\u5bfe\u8c61\u3055\u304c\u5f37\u8abf\u3055\u308c\u305f\u3088\u3046\u306a\u30d7\u30ed\u30c3\u30c8\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nboxplot\u3067\u306f\u4e2d\u592e\u5024\u30fb\u56db\u5206\u4f4d\u70b9\u3067\u898b\u3066\u3044\u305f\u305f\u3081\uff0c\u5168\u4f53\u304c\u6b63\u898f\u5206\u5e03\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\uff0e\n\u4e00\u65b9\uff0cviolinplot\u306f\u7d2f\u7a4d\u5024\u305d\u306e\u3082\u306e\u3092\u53ef\u8996\u5316\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u5404\u30bf\u30a4\u30d7\u306e\u30c7\u30fc\u30bf\u306b\u8907\u6570\u306e\u5c71(\u591a\u5cf0\u6027)\u3092\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u540c\u69d8\u306bB\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\nboxplot\u3068\u540c\u69d8\u306b\uff0c\u6570\u5024B\u306fsex\u3054\u3068\u306b\u5206\u5e03\u304c\u306f\u3063\u304d\u308a\u3068\u5206\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u30bf\u30a4\u30d7\u306b\u95a2\u3057\u3066\u306f\uff0c\u5206\u5e03\u306e\u5f62\u3092\u898b\u308c\u3070\u5206\u985e\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304b\u306a\uff1f\u3068\u611f\u3058\u307e\u3059\uff0e\n\n\u6700\u5f8c\u306b\nboxplot\u3068violinplot\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u56db\u5206\u4f4d\u70b9\u3068\u4e2d\u592e\u5024\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u3044\u5834\u5408\u306fboxplot\uff0c\u5206\u5e03\u306e\u5f62\u3084\u591a\u5cf0\u6027\u3092\u898b\u305f\u3044\u5834\u5408\u306fviolinplot\u304c\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u3069\u3061\u3089\u306b\u3057\u3066\u3082\uff0c\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u95a2\u4fc2\u3092\u8003\u616e\u305b\u305a\u72ec\u7acb\u5909\u6570\u3068\u3057\u3066\u898b\u305f\u5834\u5408\u306e\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316\u306b\u306f\u4fbf\u5229\u3067\u3059\uff0e\n\n\u53c2\u8003\n\u89e3\u6790\u7cfb\u8a18\u4e8b\u3092\u66f8\u304f\u969b\u306b\u6d3b\u7528\u3067\u304d\u308bscikit-learn\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u307e\u3068\u3081\nboxplot\nviolinplot\n# \u306f\u3058\u3081\u306b\n\u672c\u8a18\u4e8b\u306fPython2.7, numpy 1.11, scipy 0.17, scikit-learn 0.18, matplotlib 1.5, seaborn 0.7, pandas 0.17\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\njupyter notebook\u4e0a\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u307f\u3067\u3059\uff0e(%matplotlib inline\u306f\u9069\u5f53\u306b\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044)\nseaborn\u306eboxplot, violinplot\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\n\n# \u76ee\u6b21\n1. \u30c7\u30fc\u30bf\u306e\u751f\u6210\n2. Boxplot\n3. Violinplot\n4. \u6700\u5f8c\u306b\n5. \u53c2\u8003\n\n# 1. \u30c7\u30fc\u30bf\u306e\u751f\u6210\n\u81ea\u524d\u306e\u30c7\u30fc\u30bf\u304c\u3042\u308c\u3070\u3053\u3053\u306f\u7121\u8996\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\n[\u3053\u3061\u3089](http://qiita.com/TomHortons/items/683e6fc7e57f76472d68)\u306emake_classification\u3092\u7528\u3044\u30662\u6b21\u51432\u30af\u30e9\u30b9\u306e\u30c7\u30fc\u30bf\u30921000\u30b5\u30f3\u30d7\u30eb\u4f5c\u6210\u3057\u307e\u3059\uff0e\n\u3055\u3089\u306b2\u3064\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u305d\u308c\u305e\u308cA, B\u3068\u3057\uff0c\u30e9\u30d9\u30eb\u30c7\u30fc\u30bf\u3092sex\u3068\u3057\u307e\u3059\uff0e\n\u52a0\u3048\u3066[numpy.random.binomial()](https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.binomial.html)\u30670, 1, 2\u3092\u30e9\u30f3\u30c0\u30e0\u3067\u751f\u6210\u3057\uff0c\u305d\u308c\u3092\u9023\u7d50\u3057types\u3068\u3057\u307e\u3059\uff0e\n\n```make_classification.py\nimport numpy as np\nfrom sklearn.datasets import make_classification\nimport pandas as pd\n\nx, y = make_classification(n_samples=1000, n_features=2, n_redundant=0, n_informative=2,n_clusters_per_class=2, n_classes=2)\ndata = np.c_[np.c_[x, y], np.random.binomial(2, .5, len(x))]\ndata = pd.DataFrame(data).rename(columns={0:'A', 1:'B', 2:'sex', 3:'types'})\n```\n\ndata\u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\n\n```\n          A         B  sex  types\n0  2.131411 -1.754907    0      1\n1 -0.046614 -1.009540    0      2\n2  0.136387 -0.236662    1      1\n3 -3.515190  2.117925    1      1\n4 -2.099287  1.647548    1      1\n5 -0.536360 -0.920529    0      0\n6  0.281726 -0.572448    1      2\n7  2.202351 -3.214435    0      1\n8 -0.825666  0.847394    1      0\n9 -1.602873  1.338847    1      2\n```\n\n\u3053\u308c\u3067\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u30602\u3064\u306e\u6570\u5024\u30c7\u30fc\u30bf\u304c\u751f\u6210\u3067\u304d\u307e\u3057\u305f\uff0e\n\n# 2. Boxplot\n2\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u3060\u6570\u5024\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u53ef\u8996\u5316\u3059\u308b\u306e\u306b\u9069\u3057\u3066\u3044\u307e\u3059\uff0e\nseaborn\u306e[boxplot](http://seaborn.pydata.org/examples/grouped_boxplot.html)\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\n\n```boxplot.py\nimport seaborn as sns\nimport pandas as pd\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\nsns.boxplot(x='types', y=\"A\", hue='sex', data=data, palette=\"PRGn\")\nsns.despine(offset=10, trim=True)\n```\n\n![download (2).png](https://qiita-image-store.s3.amazonaws.com/0/72093/5388c291-8151-3a28-a751-38e79515b2b5.png)\n\nsex, type\u3054\u3068\u306b\u7bb1\u3072\u3052\u56f3\u304c\u66f8\u3051\u307e\u3057\u305f\uff0e\n[wikipedia](https://ja.wikipedia.org/wiki/%E7%AE%B1%E3%81%B2%E3%81%92%E5%9B%B3)\u306b\u3042\u308b\u3088\u3046\u306b\uff0c\u771f\u3093\u4e2d\u306e\u7dda\u306f\u4e2d\u592e\u5024\uff0c\u7bb1\u306e\u4e0a\u4e0b\u306f\u305d\u308c\u305e\u308c\u7b2c\uff11\u30fb\u7b2c\uff13\u56db\u5206\u4f4d\u70b9\uff0c\u30d2\u30b2\u306e\u4e0a\u4e0b\u306f\u305d\u308c\u305e\u308c\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u306a\u308a\u307e\u3059\uff0e\u4e0a\u4e0b\u306e\u70b9\u306f\uff0c\u7b2c1\u30fb\u7b2c\uff13\u56db\u5206\u4f4d\u70b9\u304b\u3089\u5224\u65ad\u3057\u305f\u5834\u5408\u306e\u300c\u5916\u308c\u5024\u300d\u3092\u610f\u5473\u3057\u3066\u3044\u307e\u3059\uff0e\n\u4ed6\u306e\u6570\u5024B\u3082\u53ef\u8996\u5316\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n![download (1).png](https://qiita-image-store.s3.amazonaws.com/0/72093/f1cda742-9915-e12f-505f-9da559afe7bd.png)\n\n\n\u6570\u5024B\u304c\u9855\u8457\u306b\u6027\u5225\u5dee\u3092\u8868\u3057\u3066\u3044\u305d\u3046\u3067\u3059\uff0e(data\u306f\u751f\u6210\u3059\u308b\u305f\u3073\u7570\u306a\u308a\u307e\u3059)\n\u30bf\u30a4\u30d7\u306b\u95a2\u3057\u3066\u306f\uff0c\u3053\u306e\u30c7\u30fc\u30bf\u3092\u898b\u308b\u3060\u3051\u3067\u306f\u5206\u985e\u306f\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u3053\u306e\u3088\u3046\u306b\uff0cboxplot\u3092\u7528\u3044\u308b\u3068\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u73fe\u3067\u304d\u307e\u3059\uff0e\n\n# 3. violinplot\nboxplot\u3068\u540c\u69d8\u306b\uff0c\uff12\u7a2e\u985e\u306e\u30ab\u30c6\u30b4\u30ea\u30c7\u30fc\u30bf\u3092\u542b\u3093\u3060\u6570\u5024\u30c7\u30fc\u30bf\u306e\u9055\u3044\u3092\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\u3053\u3061\u3089\u306f\u5404\u6570\u5024\u30c7\u30fc\u30bf\u3092\u5206\u5e03\u3068\u3057\u3066\u8868\u73fe\u3057\u307e\u3059\uff0e\n\n### \u30c7\u30fc\u30bf\u306e\u4e0b\u51e6\u7406\npandas\u306e[melt\u95a2\u6570]()\u3092\u7528\u3044\u3066\uff0cDataFrame\u3092\u5909\u5f62\u3057\u307e\u3059\uff0e\n\n```melt.py\ndata_batch = pd.melt(data, id_vars = ['types', 'sex'], value_vars = data.columns[:-2].tolist())\nprint data_batch[:10]\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\uff0cDataFrame\u3092\"Unpivot\"\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u5b9f\u884c\u7d50\u679c\u304c\u3053\u3061\u3089\uff0e\n\n```\n   types  sex variable     value\n0      1    0        A  2.131411\n1      2    0        A -0.046614\n2      1    1        A  0.136387\n3      1    1        A -3.515190\n4      1    1        A -2.099287\n5      0    0        A -0.536360\n6      2    1        A  0.281726\n7      1    0        A  2.202351\n8      0    1        A -0.825666\n9      2    1        A -1.602873\n```\n\n\u6570\u5024\u30c7\u30fc\u30bf\u306e\u30ab\u30e9\u30e0\u540d\u304cvariable\uff0c\u6570\u5024\u304cvalue\u3068\u306a\u308a\u307e\u3057\u305f\uff0e\n\n### violinplot\u3092\u4f5c\u6210\n\u6e96\u5099\u3057\u305f\"Unpivot\"\u30c7\u30fc\u30bf\u3092[violinplot](http://seaborn.pydata.org/examples/grouped_violinplots.html)\u3092\u7528\u3044\u3066\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\n```violinplot.py\ndata_batch_A = data_batch[data_batch.variable=='A']\nsns.violinplot(x = 'types',  y = 'value', hue = 'sex', data = data_batch_A, split=True)\nsns.despine(offset=10, trim=True)\n```\n\n![download (3).png](https://qiita-image-store.s3.amazonaws.com/0/72093/e84bc916-6506-57d8-91c7-1861c7bec86f.png)\n\n\u5de6\u53f3\u306e\u5bfe\u8c61\u3055\u304c\u5f37\u8abf\u3055\u308c\u305f\u3088\u3046\u306a\u30d7\u30ed\u30c3\u30c8\u306b\u306a\u308a\u307e\u3057\u305f\uff0e\nboxplot\u3067\u306f\u4e2d\u592e\u5024\u30fb\u56db\u5206\u4f4d\u70b9\u3067\u898b\u3066\u3044\u305f\u305f\u3081\uff0c\u5168\u4f53\u304c\u6b63\u898f\u5206\u5e03\u306e\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\uff0e\n\u4e00\u65b9\uff0cviolinplot\u306f\u7d2f\u7a4d\u5024\u305d\u306e\u3082\u306e\u3092\u53ef\u8996\u5316\u3057\u3066\u3044\u308b\u305f\u3081\uff0c\u5404\u30bf\u30a4\u30d7\u306e\u30c7\u30fc\u30bf\u306b\u8907\u6570\u306e\u5c71(\u591a\u5cf0\u6027)\u3092\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e\n\u540c\u69d8\u306bB\u306e\u6570\u5024\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u3057\u307e\u3059\uff0e\n\n![download (4).png](https://qiita-image-store.s3.amazonaws.com/0/72093/d0cf2424-4246-d674-aee6-c30b506e2817.png)\n\nboxplot\u3068\u540c\u69d8\u306b\uff0c\u6570\u5024B\u306fsex\u3054\u3068\u306b\u5206\u5e03\u304c\u306f\u3063\u304d\u308a\u3068\u5206\u304b\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u30bf\u30a4\u30d7\u306b\u95a2\u3057\u3066\u306f\uff0c\u5206\u5e03\u306e\u5f62\u3092\u898b\u308c\u3070\u5206\u985e\u3067\u304d\u306a\u304f\u306f\u306a\u3044\u304b\u306a\uff1f\u3068\u611f\u3058\u307e\u3059\uff0e\n\n# \u6700\u5f8c\u306b\nboxplot\u3068violinplot\u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\uff0e\n\u56db\u5206\u4f4d\u70b9\u3068\u4e2d\u592e\u5024\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u305f\u3044\u5834\u5408\u306fboxplot\uff0c\u5206\u5e03\u306e\u5f62\u3084\u591a\u5cf0\u6027\u3092\u898b\u305f\u3044\u5834\u5408\u306fviolinplot\u304c\u4fbf\u5229\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u3069\u3061\u3089\u306b\u3057\u3066\u3082\uff0c\u30c7\u30fc\u30bf\u9593\u306e\u76f8\u95a2\u95a2\u4fc2\u3092\u8003\u616e\u305b\u305a\u72ec\u7acb\u5909\u6570\u3068\u3057\u3066\u898b\u305f\u5834\u5408\u306e\u30c7\u30fc\u30bf\u306e\u53ef\u8996\u5316\u306b\u306f\u4fbf\u5229\u3067\u3059\uff0e\n\n# \u53c2\u8003\n[\u89e3\u6790\u7cfb\u8a18\u4e8b\u3092\u66f8\u304f\u969b\u306b\u6d3b\u7528\u3067\u304d\u308bscikit-learn\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u307e\u3068\u3081](http://qiita.com/TomHortons/items/683e6fc7e57f76472d68)\n[boxplot](http://seaborn.pydata.org/examples/grouped_boxplot.html)\n[violinplot](http://seaborn.pydata.org/examples/grouped_violinplots.html)\n", "tags": ["Python", "analytics", "pandas", "matplotlib", "seaborn"]}