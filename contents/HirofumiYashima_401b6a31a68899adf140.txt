{"context": " More than 1 year has passed since last update.\n\n\u3010 \u6700\u7d42\u7684\u306a\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8 \u3011\n\n\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u3042\u3066\u305f\u5dde\u306e\u60c5\u5831\u3092\u4f1d\u3048\u308b\u6587\u5b57\u5217\u304c\u3001\u4ed8\u8fd1\u306e\u5186\u3084\u6587\u5b57\u5217\u3068\u91cd\u306a\u3089\u305a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n\n( \u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af \uff09\n\n YouTube \u300cProcessing\u8a00\u8a9e\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30fb\u30c7\u30fc\u30bf\u30fb\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \uff5eO'Reilly \u672c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u904a\u3093\u3067\u307f\u308b \uff08\u305d\u306e\uff14\uff09\u300d\n\n\n\n\uff08 \u30b3\u30de\u9001\u308a\u753b\u50cf \uff09\n\n\n\n\n\u3053\u3053\u3067\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n\n\u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n\nO'Reilly \u51fa\u7248 Ben Fry \u8457\uff08\u548c\u8a33\u7248\uff09\u300e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b8\u30f3\u30b0\u30fb\u30c7\u30fc\u30bf\u300f   Chap.3  \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u89e3\u8aad\u3057\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\u3000\n\n\n\u3010 O'Reilly \u672c \u30b5\u30dd\u30fc\u30c8\u30da\u30fc\u30b8\u304b\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u53d6\u5f97 \u3011\n\n \uff08\u30ea\u30f3\u30af\u5148\uff09\u82f1\u8a9e\u539f\u8457\u8005 Ben Fry \u6c0f\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 \n\n\n\n\uff08 Chapter.3 \u306e\u8d64\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 Zip. \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n\n\nZip. \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306b\u306a\u308b\n\nch03-usmap \u30d5\u30a9\u30eb\u30c0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304f\n\n\nstep11_randomize_on_keypress \u30d5\u30a9\u30eb\u30c0\u3092\u9078\u629e\u3059\u308b\n\n\n\u81ea\u5206\u306e PC \uff08\u30ed\u30fc\u30ab\u30eb\uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u3001\u7a7a\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u7528\u610f\u3059\u308b\uff08\u30d5\u30a9\u30eb\u30c0\u540d\uff1a Processing \uff09\n\nProcessing \u30d5\u30a9\u30eb\u30c0\u306e\u306a\u304b\u306b\u3001\u7a7a\u306e Chap.3 \u30d5\u30a9\u30eb\u30c0\u3092\u3064\u304f\u308b\n\nChap.3 \u30d5\u30a9\u30eb\u30c0\u306b\u3001   step11_randomize_on_keypress \u30d5\u30a9\u30eb\u30c0\u3092\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\n\n\uff08\u7d50\u679c\uff09 Chap.3 \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u8eab\n\n\nstep11_randomize_on_keypress \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n\npde \u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3001\u3055\u3089\u306b\u3001 data \u30d5\u30a9\u30eb\u30c0\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n\n\n\u203b Processing \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\uff08 pde\u3000\u30d5\u30a1\u30a4\u30eb\uff09\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u3001 pde \u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3001 data \u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u81ea\u52d5\u7684\u306b\u63a2\u3057\u3001\u898b\u3064\u3051\u305f\u5834\u5408\u306f\u3001data \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u3080\u3064\u304f\u308a\u306b\u306a\u3063\u3066\u3044\u308b\n\ndata \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\n\n\n(1) map/png \u30d5\u30a1\u30a4\u30eb\uff08\u5168\u7c73\u5730\u56f3\u30d5\u30a1\u30a4\u30eb\uff09\n\n\n(2) locations.tsv \u30d5\u30a1\u30a4\u30eb\n\n\n\u5168\u7c7350\u5dde \u5404\u5dde\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u306e\u4e2d\u5fc3\u5ea7\u6a19\u5024\uff08\u7def\u5ea6\uff0f\u7d4c\u5ea6 \u5024\uff09\u304c\u8a18\u8f09\uff08\u683c\u7d0d\uff09\u3055\u308c\u3066\u3044\u308b\n\n locations.tsv\nAL  439 270\nAK  94  325\nAZ  148 241\nAR  368 247\nCA  56  176\nCO  220 183\nCT  576 120\nDE  556 166\nFL  510 331\nGA  478 267\nHI  232 380\nID  143 101\nIL  405 168\nIN  437 165\nIA  357 147\nKS  302 194\nKY  453 203\nLA  371 302\nME  595 59\nMD  538 162\nMA  581 108\nMI  446 120\nMN  339 86\nMS  406 274\nMO  365 197\nMT  194 61\nNE  286 151\nNV  102 157\nNH  580 89\nNJ  561 143\nNM  208 245\nNY  541 107\nNC  519 221\nND  283 65\nOH  472 160\nOK  309 239\nOR  74  86\nPA  523 144\nRI  589 117\nSC  506 251\nSD  286 109\nTN  441 229\nTX  291 299\nUT  154 171\nVT  567 86\nVA  529 189\nWA  92  38\nWV  496 178\nWI  392 103\nWY  207 125\n\n\n\n(3) names.tsv \u30d5\u30a1\u30a4\u30eb\n\n\n\u5168\u7c7350\u5dde\u306e\u5dde\u540d\uff08\u82f1\u6587\u5b57\u30d5\u30eb\u30b9\u30da\u30eb\uff09\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\n\n names.tsv\nAL  Alabama\nAK  Alaska\nAZ  Arizona\nAR  Arkansas\nCA  California\nCO  Colorado\nCT  Connecticut\nDE  Delaware\nFL  Florida\nGA  Georgia\nHI  Hawaii\nID  Idaho\nIL  Illinois\nIN  Indiana\nIA  Iowa\nKS  Kansas\nKY  Kentucky\nLA  Louisiana\nME  Maine\nMD  Maryland\nMA  Massachusetts\nMI  Michigan\nMN  Minnesota\nMS  Mississippi\nMO  Missouri\nMT  Montana\nNE  Nebraska\nNV  Nevada\nNH  New Hampshire\nNJ  New Jersey\nNM  New Mexico\nNY  New York\nNC  North Carolina\nND  North Dakota\nOH  Ohio\nOK  Oklahoma\nOR  Oregon\nPA  Pennsylvania\nRI  Rhode Island\nSC  South Carolina\nSD  South Dakota\nTN  Tennessee\nTX  Texas\nUT  Utah\nVT  Vermont\nVA  Virginia\nWA  Washington\nWV  West Virginia\nWI  Wisconsin\nWY  Wyoming\n\n\n\n(4) random.tsv \u30d5\u30a1\u30a4\u30eb\n\n\n\u5168\u7c7350\u5dde \u5404\u5dde\u3054\u3068\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\uff08\u4e71\u6570\u5024\uff09\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\n\n random.tsv\nAL  0.1\nAK  -5.3\nAZ  3\nAR  7\nCA  11\nCO  1.5\nCT  -6.7\nDE  -4\nFL  9\nGA  2\nHI  -3.3\nID  6.6\nIL  7.2\nIN  7.1\nIA  6.9\nKS  6\nKY  1.8\nLA  7.5\nME  -4\nMD  0.1\nMA  -6\nMI  1.7\nMN  -2\nMS  -4.4\nMO  -2\nMT  1.0\nNE  1.2\nNV  1.6\nNH  0.5\nNJ  0.2\nNM  8.8\nNY  1.4\nNC  9.7\nND  5.4\nOH  3.2\nOK  6\nOR  -4\nPA  -7\nRI  -2\nSC  1\nSD  6\nTN  5\nTX  -3.4\nUT  2.3\nVT  4.8\nVA  3\nWA  2.2\nWV  5.4\nWI  3.1\nWY  -6\n\n\n\nstep11_randomize_on_keypress.pde \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 Processing \u30b3\u30fc\u30c9\u7de8\u96c6\u753b\u9762 (pde ) \u3092\u8d77\u52d5\u3059\u308b\n\n\u30d5\u30a9\u30eb\u30c0\u306b\u7f6e\u304b\u308c\u305f pde \u30d5\u30a1\u30a4\u30eb\u306f\uff12\u3064\u3042\u3063\u305f \u21d2  pde \u753b\u9762\u306e\u4e0a\u90e8\u306b\u30bf\u30d6\u304c\uff12\u3064\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n\n\n\u3010 \u30b3\u30fc\u30c9 \u3011 \u203b \u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u306f\u3001\u8ffd\u3063\u3066\u8a18\u8f09\u3057\u307e\u3059\n\n Processing(step11_randomize_on_keypress\u30bf\u30d6)\nPImage mapImage;\nTable locationTable;\nTable nameTable;\nint rowCount;\n\nTable dataTable;\nfloat dataMin = -10;\nfloat dataMax = 10;\n\n\nvoid setup() {\n  size(640, 400);\n  mapImage = loadImage(\"map.png\");\n  locationTable = new Table(\"locations.tsv\");\n  nameTable = new Table(\"names.tsv\");\n  rowCount = locationTable.getRowCount();\n\n  dataTable = new Table(\"random.tsv\");\n\n  PFont font = loadFont(\"Univers-Bold-12.vlw\");\n  textFont(font);\n\n  smooth();\n  noStroke();  \n}\n\nfloat closestDist;\nString closestText;\nfloat closestTextX;\nfloat closestTextY;\n\n\nvoid draw() {\n  background(255);\n  image(mapImage, 0, 0);\n\n  closestDist = width*height;  // abritrarily high\n\n  for (int row = 0; row < rowCount; row++) {\n    String abbrev = dataTable.getRowName(row);\n    float x = locationTable.getFloat(abbrev, 1);\n    float y = locationTable.getFloat(abbrev, 2);\n    drawData(x, y, abbrev);\n  }\n\n  if (closestDist != width*height) {\n    fill(0);\n    textAlign(CENTER);\n    text(closestText, closestTextX, closestTextY);\n  }\n}\n\n\nvoid drawData(float x, float y, String abbrev) {\n  float value = dataTable.getFloat(abbrev, 1);  \n  float radius = 0;\n  if (value >= 0) {\n    radius = map(value, 0, dataMax, 1.5, 15);\n    fill(#333366);  // blue\n  } else {\n    radius = map(value, 0, dataMin, 1.5, 15);\n    fill(#ec5166);  // red\n  }\n  ellipseMode(RADIUS);\n  ellipse(x, y, radius, radius);\n\n  float d = dist(x, y, mouseX, mouseY);\n  if ((d < radius + 2) && (d < closestDist)) {\n    closestDist = d;\n    String name = nameTable.getString(abbrev, 1);\n    closestText = name + \" \" + value;\n    closestTextX = x;\n    closestTextY = y-radius-4;\n  }\n}\n\n\nvoid keyPressed() {\n  if (key == ' ') {\n    updateTable();\n  }\n}\n\n\nvoid updateTable() {  \n  for (int row = 0; row < rowCount; row++) {\n    float newValue = random(-10, 10);\n    dataTable.setFloat(row, 1, newValue);\n  }\n}\n\n\n\nTable \u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b \uff08\u203b \u30d5\u30a9\u30eb\u30c0\u306b\u3042\u3063\u305f Table.pde \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u8868\u793a\u3055\u308c\u308b\uff09\n\n\n\u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u306f\u3001 data \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u7f6e\u304b\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u3092\u53d7\u3051\u6301\u3063\u3066\u3044\u308b\n\n Processing(Table\u30bf\u30d6)\nclass Table {\n  int rowCount;\n  String[][] data;\n\n\n  Table(String filename) {\n    String[] rows = loadStrings(filename);\n    data = new String[rows.length][];\n\n    for (int i = 0; i < rows.length; i++) {\n      if (trim(rows[i]).length() == 0) {\n        continue; // skip empty rows\n      }\n      if (rows[i].startsWith(\"#\")) {\n        continue;  // skip comment lines\n      }\n\n      // split the row on the tabs\n      String[] pieces = split(rows[i], TAB);\n      // copy to the table array\n      data[rowCount] = pieces;\n      rowCount++;\n\n      // this could be done in one fell swoop via:\n      //data[rowCount++] = split(rows[i], TAB);\n    }\n    // resize the 'data' array as necessary\n    data = (String[][]) subset(data, 0, rowCount);\n  }\n\n\n  int getRowCount() {\n    return rowCount;\n  }\n\n\n  // find a row by its name, returns -1 if no row found\n  int getRowIndex(String name) {\n    for (int i = 0; i < rowCount; i++) {\n      if (data[i][0].equals(name)) {\n        return i;\n      }\n    }\n    println(\"No row named '\" + name + \"' was found\");\n    return -1;\n  }\n\n\n  String getRowName(int row) {\n    return getString(row, 0);\n  }\n\n\n  String getString(int rowIndex, int column) {\n    return data[rowIndex][column];\n  }\n\n\n  String getString(String rowName, int column) {\n    return getString(getRowIndex(rowName), column);\n  }\n\n\n  int getInt(String rowName, int column) {\n    return parseInt(getString(rowName, column));\n  }\n\n\n  int getInt(int rowIndex, int column) {\n    return parseInt(getString(rowIndex, column));\n  }\n\n\n  float getFloat(String rowName, int column) {\n    return parseFloat(getString(rowName, column));\n  }\n\n\n  float getFloat(int rowIndex, int column) {\n    return parseFloat(getString(rowIndex, column));\n  }\n\n\n  void setRowName(int row, String what) {\n    data[row][0] = what;\n  }\n\n\n  void setString(int rowIndex, int column, String what) {\n    data[rowIndex][column] = what;\n  }\n\n\n  void setString(String rowName, int column, String what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = what;\n  }\n\n\n  void setInt(int rowIndex, int column, int what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setInt(String rowName, int column, int what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(int rowIndex, int column, float what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(String rowName, int column, float what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }  \n}\n\n\n\n\u753b\u9762\u4e0a\u90e8\u306e\u4e09\u89d2\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\n\u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u3042\u3066\u305f\u5dde\u306e\u60c5\u5831\u3092\u4f1d\u3048\u308b\u6587\u5b57\u5217\u304c\u3001\u4ed8\u8fd1\u306e\u5186\u3084\u6587\u5b57\u5217\u3068\u91cd\u306a\u3089\u305a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n\n( \u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af \uff09\n\n YouTube \u300cProcessing\u8a00\u8a9e\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30fb\u30c7\u30fc\u30bf\u30fb\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \uff5eO'Reilly \u672c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u904a\u3093\u3067\u307f\u308b \uff08\u305d\u306e\uff14\uff09\u300d\n\n\n\n\uff08 \u30b3\u30de\u9001\u308a\u753b\u50cf \uff09\n\n\n\n\n\u3053\u3053\u3067\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n\n\u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n\n\n\n\u3082\u3046\uff11\u5ea6\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n\n\u518d\u5ea6\u3001\u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n\n\n\n# \u3010 \u6700\u7d42\u7684\u306a\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8 \u3011\n### \u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u3042\u3066\u305f\u5dde\u306e\u60c5\u5831\u3092\u4f1d\u3048\u308b\u6587\u5b57\u5217\u304c\u3001\u4ed8\u8fd1\u306e\u5186\u3084\u6587\u5b57\u5217\u3068\u91cd\u306a\u3089\u305a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n\n### ( \u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af \uff09\n### [ _YouTube_ \u300cProcessing\u8a00\u8a9e\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30fb\u30c7\u30fc\u30bf\u30fb\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \uff5eO'Reilly \u672c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u904a\u3093\u3067\u307f\u308b \uff08\u305d\u306e\uff14\uff09\u300d](https://www.youtube.com/watch?v=_h-tgLkWW_w)\n![movie.pic.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2c34de76-f940-2213-e0a3-c5161f06add3.png)\n\n\n### \uff08 \u30b3\u30de\u9001\u308a\u753b\u50cf \uff09\n![14.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3e5d5191-e1c6-0e53-f406-f6fc5eae2773.png)\n\n![15.png](https://qiita-image-store.s3.amazonaws.com/0/43487/346dca95-52dd-acbd-d3c2-a74d1ca5a204.png)\n\n![16.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f528e082-b3ba-2c9e-a38c-ff538bfd191b.png)\n\n### \u3053\u3053\u3067\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n### \u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n![17.png](https://qiita-image-store.s3.amazonaws.com/0/43487/a2190fda-817e-eaa6-dfde-3a05a44319d5.png)\n\n## _O'Reilly_ \u51fa\u7248 _Ben Fry_ \u8457\uff08\u548c\u8a33\u7248\uff09\u300e\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30b8\u30f3\u30b0\u30fb\u30c7\u30fc\u30bf\u300f   _Chap.3_  \u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u89e3\u8aad\u3057\u3066\u3001\u5b9f\u884c\u3057\u3066\u307f\u308b\u3000\n\n![book.gif](https://qiita-image-store.s3.amazonaws.com/0/43487/824876f0-53db-7a1a-849d-0148f53b7c4c.gif)\n\n###\u3010 _O'Reilly_ \u672c \u30b5\u30dd\u30fc\u30c8\u30da\u30fc\u30b8\u304b\u3089\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u53d6\u5f97 \u3011\n### [ \uff08\u30ea\u30f3\u30af\u5148\uff09\u82f1\u8a9e\u539f\u8457\u8005 _Ben Fry_ \u6c0f\u306e\u30a6\u30a7\u30d6\u30b5\u30a4\u30c8 ](http://benfry.com/writing/archives/category/examples)\n![ref.1.png](https://qiita-image-store.s3.amazonaws.com/0/43487/7fb65bfa-8e7f-67ca-da61-1d5368f3733d.png)\n\n#### \uff08 _Chapter.3_ \u306e\u8d64\u6587\u5b57\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 _Zip._ \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n![ref.2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/b28f2979-9aba-5490-c933-1ab437c59030.png)\n\n#### _Zip._ \u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\u3068\u4ee5\u4e0b\u306e\u753b\u9762\u306b\u306a\u308b\n#### _ch03-usmap_ \u30d5\u30a9\u30eb\u30c0\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u958b\u304f\n![\uff11.png](https://qiita-image-store.s3.amazonaws.com/0/43487/ab8ed4b5-8d71-c41d-86a8-fa5c38948793.png)\n\n####  _step11_randomize_on_keypress_ \u30d5\u30a9\u30eb\u30c0\u3092\u9078\u629e\u3059\u308b\n![2.png](https://qiita-image-store.s3.amazonaws.com/0/43487/8a4baf2a-9d8b-a9e1-c6af-d6d836dfe33f.png)\n\n\n### \u81ea\u5206\u306e _PC_ \uff08\u30ed\u30fc\u30ab\u30eb\uff09\u306e\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306b\u3001\u7a7a\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u7528\u610f\u3059\u308b\uff08\u30d5\u30a9\u30eb\u30c0\u540d\uff1a _Processing_ \uff09\n### _Processing_ \u30d5\u30a9\u30eb\u30c0\u306e\u306a\u304b\u306b\u3001\u7a7a\u306e _Chap.3_ \u30d5\u30a9\u30eb\u30c0\u3092\u3064\u304f\u308b\n\n### _Chap.3_ \u30d5\u30a9\u30eb\u30c0\u306b\u3001   _step11_randomize_on_keypress_ \u30d5\u30a9\u30eb\u30c0\u3092\u30de\u30a6\u30b9\u3067\u30c9\u30e9\u30c3\u30b0\u3059\u308b\n\n#### \uff08\u7d50\u679c\uff09 _Chap.3_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u8eab\n![5.png](https://qiita-image-store.s3.amazonaws.com/0/43487/499f9bab-592c-0d5f-ef4d-78e843833873.png)\n\n\n####  _step11_randomize_on_keypress_ \u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304f\n#### _pde_ \u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3001\u3055\u3089\u306b\u3001 _data_ \u30d5\u30a9\u30eb\u30c0\u304c\u7f6e\u304b\u308c\u3066\u3044\u308b\n![6.png](https://qiita-image-store.s3.amazonaws.com/0/43487/be1922c9-3746-979c-2011-6e3c354df949.png)\n\n\n\n### \u203b _Processing_ \u306e\u30d7\u30ed\u30b0\u30e9\u30e0\uff08 _pde_\u3000\u30d5\u30a1\u30a4\u30eb\uff09\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u6642\u306b\u3001 _pde_ \u30d5\u30a1\u30a4\u30eb\u304c\u7f6e\u304b\u308c\u305f\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3001 _data_ \u30d5\u30a9\u30eb\u30c0\u304c\u3042\u308b\u304b\u3069\u3046\u304b\u81ea\u52d5\u7684\u306b\u63a2\u3057\u3001\u898b\u3064\u3051\u305f\u5834\u5408\u306f\u3001_data_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u3042\u308b\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u4e00\u5f0f\u3092\u81ea\u52d5\u3067\u8aad\u307f\u8fbc\u3080\u3064\u304f\u308a\u306b\u306a\u3063\u3066\u3044\u308b\n\n\n### _data_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\n![7.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f4962dd8-fc8d-b8de-f980-d220c0862dc2.png)\n\n### (1) _map/png_ \u30d5\u30a1\u30a4\u30eb\uff08\u5168\u7c73\u5730\u56f3\u30d5\u30a1\u30a4\u30eb\uff09\n![11.png](https://qiita-image-store.s3.amazonaws.com/0/43487/1d92f3b1-511c-63d4-29b3-18ece2e1fc0d.png)\n\n### (2) _locations.tsv_ \u30d5\u30a1\u30a4\u30eb\n![8.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f3a75dc2-4eac-9239-5825-5249c380fe0c.png)\n\n### \u5168\u7c7350\u5dde \u5404\u5dde\u306e\u7def\u5ea6\u30fb\u7d4c\u5ea6\u306e\u4e2d\u5fc3\u5ea7\u6a19\u5024\uff08\u7def\u5ea6\uff0f\u7d4c\u5ea6 \u5024\uff09\u304c\u8a18\u8f09\uff08\u683c\u7d0d\uff09\u3055\u308c\u3066\u3044\u308b\n\n```{data: locations.tsv}\nAL\t439\t270\nAK\t94\t325\nAZ\t148\t241\nAR\t368\t247\nCA\t56\t176\nCO\t220\t183\nCT\t576\t120\nDE\t556\t166\nFL\t510\t331\nGA\t478\t267\nHI\t232\t380\nID\t143\t101\nIL\t405\t168\nIN\t437\t165\nIA\t357\t147\nKS\t302\t194\nKY\t453\t203\nLA\t371\t302\nME\t595\t59\nMD\t538\t162\nMA\t581\t108\nMI\t446\t120\nMN\t339\t86\nMS\t406\t274\nMO\t365\t197\nMT\t194\t61\nNE\t286\t151\nNV\t102\t157\nNH\t580\t89\nNJ\t561\t143\nNM\t208\t245\nNY\t541\t107\nNC\t519\t221\nND\t283\t65\nOH\t472\t160\nOK\t309\t239\nOR\t74\t86\nPA\t523\t144\nRI\t589\t117\nSC\t506\t251\nSD\t286\t109\nTN\t441\t229\nTX\t291\t299\nUT\t154\t171\nVT\t567\t86\nVA\t529\t189\nWA\t92\t38\nWV\t496\t178\nWI\t392\t103\nWY\t207\t125\n```\n\n### (3) _names.tsv_ \u30d5\u30a1\u30a4\u30eb\n![9.png](https://qiita-image-store.s3.amazonaws.com/0/43487/dcb39786-5a97-c73e-8624-4ada30e165ea.png)\n\n### \u5168\u7c7350\u5dde\u306e\u5dde\u540d\uff08\u82f1\u6587\u5b57\u30d5\u30eb\u30b9\u30da\u30eb\uff09\u304c\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\n```{data: names.tsv}\nAL\tAlabama\nAK\tAlaska\nAZ\tArizona\nAR\tArkansas\nCA\tCalifornia\nCO\tColorado\nCT\tConnecticut\nDE\tDelaware\nFL\tFlorida\nGA\tGeorgia\nHI\tHawaii\nID\tIdaho\nIL\tIllinois\nIN\tIndiana\nIA\tIowa\nKS\tKansas\nKY\tKentucky\nLA\tLouisiana\nME\tMaine\nMD\tMaryland\nMA\tMassachusetts\nMI\tMichigan\nMN\tMinnesota\nMS\tMississippi\nMO\tMissouri\nMT\tMontana\nNE\tNebraska\nNV\tNevada\nNH\tNew Hampshire\nNJ\tNew Jersey\nNM\tNew Mexico\nNY\tNew York\nNC\tNorth Carolina\nND\tNorth Dakota\nOH\tOhio\nOK\tOklahoma\nOR\tOregon\nPA\tPennsylvania\nRI\tRhode Island\nSC\tSouth Carolina\nSD\tSouth Dakota\nTN\tTennessee\nTX\tTexas\nUT\tUtah\nVT\tVermont\nVA\tVirginia\nWA\tWashington\nWV\tWest Virginia\nWI\tWisconsin\nWY\tWyoming\n```\n\n### (4) _random.tsv_ \u30d5\u30a1\u30a4\u30eb\n![10.png](https://qiita-image-store.s3.amazonaws.com/0/43487/4eb65ed3-74a6-9f80-4ca8-dfa39fde758e.png)\n\n### \u5168\u7c7350\u5dde \u5404\u5dde\u3054\u3068\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u30e9\u30f3\u30c0\u30e0\u306a\u5024\uff08\u4e71\u6570\u5024\uff09\u304c\u8a18\u8ff0\u3055\u308c\u3066\u3044\u308b\n```{data: random.tsv}\nAL\t0.1\nAK\t-5.3\nAZ\t3\nAR\t7\nCA\t11\nCO\t1.5\nCT\t-6.7\nDE\t-4\nFL\t9\nGA\t2\nHI\t-3.3\nID\t6.6\nIL\t7.2\nIN\t7.1\nIA\t6.9\nKS\t6\nKY\t1.8\nLA\t7.5\nME\t-4\nMD\t0.1\nMA\t-6\nMI\t1.7\nMN\t-2\nMS\t-4.4\nMO\t-2\nMT\t1.0\nNE\t1.2\nNV\t1.6\nNH\t0.5\nNJ\t0.2\nNM\t8.8\nNY\t1.4\nNC\t9.7\nND\t5.4\nOH\t3.2\nOK\t6\nOR\t-4\nPA\t-7\nRI\t-2\nSC\t1\nSD\t6\nTN\t5\nTX\t-3.4\nUT\t2.3\nVT\t4.8\nVA\t3\nWA\t2.2\nWV\t5.4\nWI\t3.1\nWY\t-6\n```\n\n####    _step11_randomize_on_keypress.pde_ \u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 _Processing_ \u30b3\u30fc\u30c9\u7de8\u96c6\u753b\u9762 (_pde_ ) \u3092\u8d77\u52d5\u3059\u308b\n\n### \u30d5\u30a9\u30eb\u30c0\u306b\u7f6e\u304b\u308c\u305f _pde_ \u30d5\u30a1\u30a4\u30eb\u306f\uff12\u3064\u3042\u3063\u305f \u21d2  _pde_ \u753b\u9762\u306e\u4e0a\u90e8\u306b\u30bf\u30d6\u304c\uff12\u3064\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n![12.png](https://qiita-image-store.s3.amazonaws.com/0/43487/d6c498b5-e32b-5c92-0fc9-6fad5113f0df.png)\n\n\n# \u3010 \u30b3\u30fc\u30c9 \u3011 \u203b \u30b3\u30fc\u30c9\u306e\u89e3\u8aac\u306f\u3001\u8ffd\u3063\u3066\u8a18\u8f09\u3057\u307e\u3059\n```{Processing: Processing(step11_randomize_on_keypress\u30bf\u30d6)}\nPImage mapImage;\nTable locationTable;\nTable nameTable;\nint rowCount;\n\nTable dataTable;\nfloat dataMin = -10;\nfloat dataMax = 10;\n\n\nvoid setup() {\n  size(640, 400);\n  mapImage = loadImage(\"map.png\");\n  locationTable = new Table(\"locations.tsv\");\n  nameTable = new Table(\"names.tsv\");\n  rowCount = locationTable.getRowCount();\n  \n  dataTable = new Table(\"random.tsv\");\n  \n  PFont font = loadFont(\"Univers-Bold-12.vlw\");\n  textFont(font);\n\n  smooth();\n  noStroke();  \n}\n\nfloat closestDist;\nString closestText;\nfloat closestTextX;\nfloat closestTextY;\n\n\nvoid draw() {\n  background(255);\n  image(mapImage, 0, 0);\n  \n  closestDist = width*height;  // abritrarily high\n  \n  for (int row = 0; row < rowCount; row++) {\n    String abbrev = dataTable.getRowName(row);\n    float x = locationTable.getFloat(abbrev, 1);\n    float y = locationTable.getFloat(abbrev, 2);\n    drawData(x, y, abbrev);\n  }\n  \n  if (closestDist != width*height) {\n    fill(0);\n    textAlign(CENTER);\n    text(closestText, closestTextX, closestTextY);\n  }\n}\n\n\nvoid drawData(float x, float y, String abbrev) {\n  float value = dataTable.getFloat(abbrev, 1);  \n  float radius = 0;\n  if (value >= 0) {\n    radius = map(value, 0, dataMax, 1.5, 15);\n    fill(#333366);  // blue\n  } else {\n    radius = map(value, 0, dataMin, 1.5, 15);\n    fill(#ec5166);  // red\n  }\n  ellipseMode(RADIUS);\n  ellipse(x, y, radius, radius);\n\n  float d = dist(x, y, mouseX, mouseY);\n  if ((d < radius + 2) && (d < closestDist)) {\n    closestDist = d;\n    String name = nameTable.getString(abbrev, 1);\n    closestText = name + \" \" + value;\n    closestTextX = x;\n    closestTextY = y-radius-4;\n  }\n}\n\n\nvoid keyPressed() {\n  if (key == ' ') {\n    updateTable();\n  }\n}\n\n\nvoid updateTable() {  \n  for (int row = 0; row < rowCount; row++) {\n    float newValue = random(-10, 10);\n    dataTable.setFloat(row, 1, newValue);\n  }\n}\n```\n\n### _Table_ \u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b \uff08\u203b \u30d5\u30a9\u30eb\u30c0\u306b\u3042\u3063\u305f _Table.pde_ \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u8868\u793a\u3055\u308c\u308b\uff09\n![13.png](https://qiita-image-store.s3.amazonaws.com/0/43487/d87f2c6f-e41b-329c-4ab4-1c88d7825ebd.png)\n\n\n# \u3053\u3061\u3089\u306e\u30b3\u30fc\u30c9\u306f\u3001 _data_ \u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u7f6e\u304b\u308c\u305f\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u306e\u51e6\u7406\u3092\u53d7\u3051\u6301\u3063\u3066\u3044\u308b\n```{Processing: Processing(Table\u30bf\u30d6)}\nclass Table {\n  int rowCount;\n  String[][] data;\n  \n  \n  Table(String filename) {\n    String[] rows = loadStrings(filename);\n    data = new String[rows.length][];\n    \n    for (int i = 0; i < rows.length; i++) {\n      if (trim(rows[i]).length() == 0) {\n        continue; // skip empty rows\n      }\n      if (rows[i].startsWith(\"#\")) {\n        continue;  // skip comment lines\n      }\n      \n      // split the row on the tabs\n      String[] pieces = split(rows[i], TAB);\n      // copy to the table array\n      data[rowCount] = pieces;\n      rowCount++;\n      \n      // this could be done in one fell swoop via:\n      //data[rowCount++] = split(rows[i], TAB);\n    }\n    // resize the 'data' array as necessary\n    data = (String[][]) subset(data, 0, rowCount);\n  }\n  \n  \n  int getRowCount() {\n    return rowCount;\n  }\n  \n  \n  // find a row by its name, returns -1 if no row found\n  int getRowIndex(String name) {\n    for (int i = 0; i < rowCount; i++) {\n      if (data[i][0].equals(name)) {\n        return i;\n      }\n    }\n    println(\"No row named '\" + name + \"' was found\");\n    return -1;\n  }\n  \n  \n  String getRowName(int row) {\n    return getString(row, 0);\n  }\n\n\n  String getString(int rowIndex, int column) {\n    return data[rowIndex][column];\n  }\n\n  \n  String getString(String rowName, int column) {\n    return getString(getRowIndex(rowName), column);\n  }\n\n  \n  int getInt(String rowName, int column) {\n    return parseInt(getString(rowName, column));\n  }\n\n  \n  int getInt(int rowIndex, int column) {\n    return parseInt(getString(rowIndex, column));\n  }\n\n  \n  float getFloat(String rowName, int column) {\n    return parseFloat(getString(rowName, column));\n  }\n\n  \n  float getFloat(int rowIndex, int column) {\n    return parseFloat(getString(rowIndex, column));\n  }\n  \n  \n  void setRowName(int row, String what) {\n    data[row][0] = what;\n  }\n\n\n  void setString(int rowIndex, int column, String what) {\n    data[rowIndex][column] = what;\n  }\n\n  \n  void setString(String rowName, int column, String what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = what;\n  }\n\n  \n  void setInt(int rowIndex, int column, int what) {\n    data[rowIndex][column] = str(what);\n  }\n\n  \n  void setInt(String rowName, int column, int what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }\n\n  \n  void setFloat(int rowIndex, int column, float what) {\n    data[rowIndex][column] = str(what);\n  }\n\n\n  void setFloat(String rowName, int column, float what) {\n    int rowIndex = getRowIndex(rowName);\n    data[rowIndex][column] = str(what);\n  }  \n}\n```\n# \u753b\u9762\u4e0a\u90e8\u306e\u4e09\u89d2\u306e\u5b9f\u884c\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\n\n## \u30de\u30a6\u30b9\u30dd\u30a4\u30f3\u30bf\u3092\u3042\u3066\u305f\u5dde\u306e\u60c5\u5831\u3092\u4f1d\u3048\u308b\u6587\u5b57\u5217\u304c\u3001\u4ed8\u8fd1\u306e\u5186\u3084\u6587\u5b57\u5217\u3068\u91cd\u306a\u3089\u305a\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\n\n## ( \u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af \uff09\n## [ _YouTube_ \u300cProcessing\u8a00\u8a9e\u3067\u30a4\u30f3\u30bf\u30e9\u30af\u30c6\u30a3\u30d6\u30fb\u30c7\u30fc\u30bf\u30fb\u30d3\u30b8\u30e5\u30a2\u30e9\u30a4\u30bc\u30fc\u30b7\u30e7\u30f3 \uff5eO'Reilly \u672c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u904a\u3093\u3067\u307f\u308b \uff08\u305d\u306e\uff14\uff09\u300d](https://www.youtube.com/watch?v=_h-tgLkWW_w)\n![movie.pic.png](https://qiita-image-store.s3.amazonaws.com/0/43487/2c34de76-f940-2213-e0a3-c5161f06add3.png)\n\n\n## \uff08 \u30b3\u30de\u9001\u308a\u753b\u50cf \uff09\n![14.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3e5d5191-e1c6-0e53-f406-f6fc5eae2773.png)\n\n![15.png](https://qiita-image-store.s3.amazonaws.com/0/43487/346dca95-52dd-acbd-d3c2-a74d1ca5a204.png)\n\n![16.png](https://qiita-image-store.s3.amazonaws.com/0/43487/f528e082-b3ba-2c9e-a38c-ff538bfd191b.png)\n\n## \u3053\u3053\u3067\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n## \u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n![17.png](https://qiita-image-store.s3.amazonaws.com/0/43487/a2190fda-817e-eaa6-dfde-3a05a44319d5.png)\n\n![18.png](https://qiita-image-store.s3.amazonaws.com/0/43487/5b3165c5-898b-3ae0-a15a-df27bc52713a.png)\n\n![19.png](https://qiita-image-store.s3.amazonaws.com/0/43487/938b3794-406e-d55e-86fd-1a9cbf593691.png)\n\n## \u3082\u3046\uff11\u5ea6\u3001\u30b9\u30da\u30fc\u30b9\u30ad\u30fc\u3092\uff11\u56de\u62bc\u3059\u3002\n## \u518d\u5ea6\u3001\u5168\u5dde\u306e\u30c7\u30fc\u30bf\u5185\u5bb9\u3092\u8868\u3059\u5186\u306e\u72b6\u614b\u304c\u3001\u4e00\u6319\u306b\u5909\u5316\u3057\u305f\uff08\u30e9\u30f3\u30c0\u30e0\u5909\u5316\uff09\n\n![20.png](https://qiita-image-store.s3.amazonaws.com/0/43487/acdf51ac-f63c-8920-52c8-ca86de0dfa85.png)\n\n![21.png](https://qiita-image-store.s3.amazonaws.com/0/43487/4f34701b-5559-9ec2-8b6c-4cf30297cc96.png)\n\n![22.png](https://qiita-image-store.s3.amazonaws.com/0/43487/3418468e-dd3b-8f86-3715-957cb400b6f4.png)\n", "tags": ["processing", "Processing2", "DataVisualization", "\u30c7\u30fc\u30bf\u53ef\u8996\u5316", "\u30c7\u30fc\u30bf\u8996\u899a\u5316"]}