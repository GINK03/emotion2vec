{"context": "Scene\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092Chapter\u3068\u5b9a\u7fa9\u3059\u308b\n\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306b\u306fPub/Sub\u3092\u63a1\u7528\npubsub-js\u306e\u4f7f\u3044\u65b9\nhttp://qiita.com/mo4_9/items/2ac77bdc7399600bc2d4\n\n\u51e6\u7406\u306e\u6d41\u308c\n\nChapterManager.js - setChapter | \u73fe\u5728\u306eChapter\u3092\u6c7a\u5b9a\nChapterManager.js - handleClick | \u73fe\u5728\u306eChapter\u306ehandleClick()\u3092\u5b9f\u884c\nChapter1.js - PubSub.publish | \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5fdc\u3058\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\nChapterManager.js - PubSub.subscribe | \u8cfc\u8aad\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u901a\u77e5\n\n\nChapter*.js\nrender\u3092\u542b\u307e\u306a\u3044\u5404Chapter\u3092\u7528\u610f\nChapter1.js , Chapter2.js , Chapter3.js\n\n./lib/Chapter1.js\nimport PubSub from 'pubsub-js';\n\nexport default class Chapter1 {\n  constructor(opts = {}) {\n\n    this.TOPIC_NAMESPACE = 'Chapter1';\n\n    this.width = opts.width || window.innerWidth;\n    this.height = opts.height || window.innerHeight;\n\n    this.init();\n  }\n\n  init() {\n    { // scene\n      this.scene = new THREE.Scene();\n    }\n    { // camera\n      this.camera = new THREE.PerspectiveCamera( 45, this.width / this.height, 1, 10000 ); // fov(\u8996\u91ce\u89d2),aspect,near,far\n      this.camera.position.set(100, 100, 100);\n      this.camera.up.set(0, 1, 0);\n      this.camera.lookAt({ x:0, y:0, z:0 });\n    }\n    { // controls\n      this.controls = new THREE.OrbitControls(this.camera);\n    }\n    { // lights\n      const ambientLight = new THREE.AmbientLight(0xffffff);\n      this.scene.add(ambientLight);\n    }\n    { // axis\n      const axis = new THREE.AxisHelper(1000);\n      axis.position.set(0,0,0);\n      this.scene.add(axis);\n    }\n    { // grid\n      const grid = new THREE.GridHelper(50, 10); // size, step\n      this.scene.add(grid);\n    }\n    { // cube\n      const cgeometry = new THREE.CubeGeometry(20, 20, 20);\n      const cmaterial = new THREE.MeshLambertMaterial({ color: 0xffcc66 });\n      this.cube = new THREE.Mesh(cgeometry, cmaterial);\n      this.cube.name = `cube-${this.TOPIC_NAMESPACE}`;\n      this.scene.add(this.cube);\n    }\n    { // sphere\n      const sgeometry = new THREE.SphereGeometry(10, 30, 30);\n      const smaterial = new THREE.MeshLambertMaterial({ color: 0x66ccff });\n      this.sphere = new THREE.Mesh(sgeometry, smaterial);\n      this.sphere.name = `sphere-${this.TOPIC_NAMESPACE}`;\n      this.sphere.position.set(10,50,-10);\n      this.scene.add(this.sphere);\n    }\n  }\n\n  handleClick(objs) {\n    // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5fdc\u3058\u3066\u3001\u767a\u884c\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u5206\u5c90\u3059\u308b\n    const isCubeClick = objs.some(obj => obj.object.name == 'cube-Chapter1'); // name\u3067\u5224\u5b9a\n    const isSphereClick = objs.some(obj => obj.object == this.sphere); // object\u3067\u5224\u5b9a\n    console.log(objs, isCubeClick, isSphereClick);\n    if (isCubeClick) {\n      PubSub.publish(`nextObjClick.${this.TOPIC_NAMESPACE}`);\n    }\n    if (isSphereClick) {\n      PubSub.publish(`prevObjClick.${this.TOPIC_NAMESPACE}`);\n    }\n  }\n}\n\n\n\nChapterManager.js\n\n./lib/ChapterManager.js\nimport PubSub from 'pubsub-js';\nimport './OrbitControls';\nimport Chapter1 from './Chapter1';\nimport Chapter2 from './Chapter2';\nimport Chapter3 from './Chapter3';\n\nexport default class ChapterManager{\n  constructor(opts = {}) {\n    this.RENDER_INTERVAL = 30;\n    this.TICK_INTERVAL = 1500;\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.container = opts.container || document.createElement('div');\n\n    this.chapterList = [\n      new Chapter1({\n        width: this.width,\n        height: this.height,\n      }),\n      new Chapter2({\n        width: this.width,\n        height: this.height,\n      }),\n      new Chapter3({\n        width: this.width,\n        height: this.height,\n      }),\n    ];\n\n    this.init();\n    this.setEvent();\n    this.setChapter();\n  }\n\n  init() {\n    { // renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setClearColor( 0x222222 ); // \u80cc\u666f\u8272\n      this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n      this.renderer.setSize( this.width, this.height );\n      this.container.appendChild( this.renderer.domElement );\n    }\n  }\n\n  setEvent() {\n    const rect = this.renderer.domElement.getBoundingClientRect();\n\n    this.renderer.domElement.addEventListener('mousedown', (evt) => {\n      const mouseX = evt.clientX - rect.left;\n      const mouseY = evt.clientY - rect.top;\n      const position = {\n        x: (mouseX / rect.width) * 2 - 1, // -1 ~ +1 \u306e\u5ea7\u6a19\n        y: -(mouseY / rect.height) * 2 + 1, // -1 ~ +1 \u306e\u5ea7\u6a19\n      };\n      const objs = this.getIntersectObjects(position.x, position.y);\n\n      if (objs.length > 0) {\n        if (!this.currentChapter.handleClick) {\n          return;\n        }\n        this.currentChapter.handleClick(objs);\n      }\n    }, false);\n\n    PubSub.subscribe('nextObjClick.Chapter1', () => {\n      this.setChapter(1);\n    });\n    PubSub.subscribe('prevObjClick.Chapter1', () => {\n      this.setChapter(2);\n    });\n\n    PubSub.subscribe('nextObjClick.Chapter2', () => {\n      this.setChapter(2);\n    });\n    PubSub.subscribe('prevObjClick.Chapter2', () => {\n      this.setChapter(0);\n    });\n\n    PubSub.subscribe('nextObjClick.Chapter3', () => {\n      this.setChapter(0);\n    });\n    PubSub.subscribe('prevObjClick.Chapter3', () => {\n      this.setChapter(1);\n    });\n  }\n\n  // scene\u3068camera\u3092\u73fe\u5728\u306echapter\u306b\u66f4\u65b0\u3059\u308b\n  setChapter(id = 0) {\n    this.currentChapter = this.chapterList[id];\n    console.log(this.currentChapter);\n    this.scene = this.currentChapter.scene;\n    console.log(this.scene);\n    this.camera = this.currentChapter.camera;\n  }\n\n  getIntersectObjects(x, y) {\n    const vector = new THREE.Vector3(x, y, 1);\n    vector.unproject(this.camera);\n\n    const ray = new THREE.Raycaster(this.camera.position, vector.sub(this.camera.position).normalize());\n    const objs = ray.intersectObjects(this.scene.children);\n\n    return objs;\n  }\n\n  start() {\n    const startTime = Date.now();\n    let previousTime = startTime;\n    let previousRenderTime = previousTime;\n    let previousTickTime = previousTime;\n    this.loopId;\n\n    const loop = (timestamp) => {\n      const nowTime = Date.now();\n      const elapsedTime = nowTime - startTime;\n      const deltaTime = nowTime - previousTime;\n      const deltaRenderTime = nowTime - previousRenderTime;\n      const deltaTickTime = nowTime - previousTickTime;\n\n      if (deltaRenderTime > this.RENDER_INTERVAL) {\n        previousRenderTime = nowTime;\n        this.render();\n      }\n      if (deltaTickTime > this.TICK_INTERVAL) {\n        previousTickTime = nowTime;\n        this.tick();\n      }\n\n      previousTime = nowTime;\n      this.loopId = requestAnimationFrame(loop);\n    };\n\n    loop();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.loopId);\n  }\n\n  tick() {\n  }\n\n  render() {\n    this.renderer.render( this.scene, this.camera );\n  }\n}\n\n\n\nscript.js\nimport ChapterManager from './lib/ChapterManager';\n\n(() => {\n  const chapterManager = new ChapterManager({\n    container: document.getElementById('canvas-container'),\n  });\n\n  chapterManager.start();\n})();\n\n\n\n\nScene\u3092\u307e\u3068\u3081\u305f\u3082\u306e\u3092Chapter\u3068\u5b9a\u7fa9\u3059\u308b\n\n\u30a4\u30d9\u30f3\u30c8\u51e6\u7406\u306b\u306fPub/Sub\u3092\u63a1\u7528\n[pubsub-js](https://github.com/mroderick/PubSubJS)\u306e\u4f7f\u3044\u65b9\nhttp://qiita.com/mo4_9/items/2ac77bdc7399600bc2d4\n\n\n## \u51e6\u7406\u306e\u6d41\u308c\n\n1. ChapterManager.js - setChapter | \u73fe\u5728\u306eChapter\u3092\u6c7a\u5b9a\n2. ChapterManager.js - handleClick | \u73fe\u5728\u306eChapter\u306ehandleClick()\u3092\u5b9f\u884c\n3. Chapter1.js - PubSub.publish | \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5fdc\u3058\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u884c\n4. ChapterManager.js - PubSub.subscribe | \u8cfc\u8aad\u4e2d\u306e\u30a4\u30d9\u30f3\u30c8\u306b\u901a\u77e5\n\n\n## Chapter*.js\n\nrender\u3092\u542b\u307e\u306a\u3044\u5404Chapter\u3092\u7528\u610f\n`Chapter1.js` , `Chapter2.js` , `Chapter3.js`\n\n```javascript:./lib/Chapter1.js\nimport PubSub from 'pubsub-js';\n\nexport default class Chapter1 {\n  constructor(opts = {}) {\n\n    this.TOPIC_NAMESPACE = 'Chapter1';\n\n    this.width = opts.width || window.innerWidth;\n    this.height = opts.height || window.innerHeight;\n\n    this.init();\n  }\n\n  init() {\n    { // scene\n      this.scene = new THREE.Scene();\n    }\n    { // camera\n      this.camera = new THREE.PerspectiveCamera( 45, this.width / this.height, 1, 10000 ); // fov(\u8996\u91ce\u89d2),aspect,near,far\n      this.camera.position.set(100, 100, 100);\n      this.camera.up.set(0, 1, 0);\n      this.camera.lookAt({ x:0, y:0, z:0 });\n    }\n    { // controls\n      this.controls = new THREE.OrbitControls(this.camera);\n    }\n    { // lights\n      const ambientLight = new THREE.AmbientLight(0xffffff);\n      this.scene.add(ambientLight);\n    }\n    { // axis\n      const axis = new THREE.AxisHelper(1000);\n      axis.position.set(0,0,0);\n      this.scene.add(axis);\n    }\n    { // grid\n      const grid = new THREE.GridHelper(50, 10); // size, step\n      this.scene.add(grid);\n    }\n    { // cube\n      const cgeometry = new THREE.CubeGeometry(20, 20, 20);\n      const cmaterial = new THREE.MeshLambertMaterial({ color: 0xffcc66 });\n      this.cube = new THREE.Mesh(cgeometry, cmaterial);\n      this.cube.name = `cube-${this.TOPIC_NAMESPACE}`;\n      this.scene.add(this.cube);\n    }\n    { // sphere\n      const sgeometry = new THREE.SphereGeometry(10, 30, 30);\n      const smaterial = new THREE.MeshLambertMaterial({ color: 0x66ccff });\n      this.sphere = new THREE.Mesh(sgeometry, smaterial);\n      this.sphere.name = `sphere-${this.TOPIC_NAMESPACE}`;\n      this.sphere.position.set(10,50,-10);\n      this.scene.add(this.sphere);\n    }\n  }\n\n  handleClick(objs) {\n    // \u30af\u30ea\u30c3\u30af\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5fdc\u3058\u3066\u3001\u767a\u884c\u3059\u308b\u30a4\u30d9\u30f3\u30c8\u3092\u5206\u5c90\u3059\u308b\n    const isCubeClick = objs.some(obj => obj.object.name == 'cube-Chapter1'); // name\u3067\u5224\u5b9a\n    const isSphereClick = objs.some(obj => obj.object == this.sphere); // object\u3067\u5224\u5b9a\n    console.log(objs, isCubeClick, isSphereClick);\n    if (isCubeClick) {\n      PubSub.publish(`nextObjClick.${this.TOPIC_NAMESPACE}`);\n    }\n    if (isSphereClick) {\n      PubSub.publish(`prevObjClick.${this.TOPIC_NAMESPACE}`);\n    }\n  }\n}\n```\n\n## ChapterManager.js\n\n```javascript:./lib/ChapterManager.js\nimport PubSub from 'pubsub-js';\nimport './OrbitControls';\nimport Chapter1 from './Chapter1';\nimport Chapter2 from './Chapter2';\nimport Chapter3 from './Chapter3';\n\nexport default class ChapterManager{\n  constructor(opts = {}) {\n    this.RENDER_INTERVAL = 30;\n    this.TICK_INTERVAL = 1500;\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.container = opts.container || document.createElement('div');\n\n    this.chapterList = [\n      new Chapter1({\n        width: this.width,\n        height: this.height,\n      }),\n      new Chapter2({\n        width: this.width,\n        height: this.height,\n      }),\n      new Chapter3({\n        width: this.width,\n        height: this.height,\n      }),\n    ];\n\n    this.init();\n    this.setEvent();\n    this.setChapter();\n  }\n\n  init() {\n    { // renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setClearColor( 0x222222 ); // \u80cc\u666f\u8272\n      this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n      this.renderer.setSize( this.width, this.height );\n      this.container.appendChild( this.renderer.domElement );\n    }\n  }\n\n  setEvent() {\n    const rect = this.renderer.domElement.getBoundingClientRect();\n\n    this.renderer.domElement.addEventListener('mousedown', (evt) => {\n      const mouseX = evt.clientX - rect.left;\n      const mouseY = evt.clientY - rect.top;\n      const position = {\n        x: (mouseX / rect.width) * 2 - 1, // -1 ~ +1 \u306e\u5ea7\u6a19\n        y: -(mouseY / rect.height) * 2 + 1, // -1 ~ +1 \u306e\u5ea7\u6a19\n      };\n      const objs = this.getIntersectObjects(position.x, position.y);\n\n      if (objs.length > 0) {\n        if (!this.currentChapter.handleClick) {\n          return;\n        }\n        this.currentChapter.handleClick(objs);\n      }\n    }, false);\n\n    PubSub.subscribe('nextObjClick.Chapter1', () => {\n      this.setChapter(1);\n    });\n    PubSub.subscribe('prevObjClick.Chapter1', () => {\n      this.setChapter(2);\n    });\n\n    PubSub.subscribe('nextObjClick.Chapter2', () => {\n      this.setChapter(2);\n    });\n    PubSub.subscribe('prevObjClick.Chapter2', () => {\n      this.setChapter(0);\n    });\n\n    PubSub.subscribe('nextObjClick.Chapter3', () => {\n      this.setChapter(0);\n    });\n    PubSub.subscribe('prevObjClick.Chapter3', () => {\n      this.setChapter(1);\n    });\n  }\n\n  // scene\u3068camera\u3092\u73fe\u5728\u306echapter\u306b\u66f4\u65b0\u3059\u308b\n  setChapter(id = 0) {\n    this.currentChapter = this.chapterList[id];\n    console.log(this.currentChapter);\n    this.scene = this.currentChapter.scene;\n    console.log(this.scene);\n    this.camera = this.currentChapter.camera;\n  }\n\n  getIntersectObjects(x, y) {\n    const vector = new THREE.Vector3(x, y, 1);\n    vector.unproject(this.camera);\n\n    const ray = new THREE.Raycaster(this.camera.position, vector.sub(this.camera.position).normalize());\n    const objs = ray.intersectObjects(this.scene.children);\n\n    return objs;\n  }\n\n  start() {\n    const startTime = Date.now();\n    let previousTime = startTime;\n    let previousRenderTime = previousTime;\n    let previousTickTime = previousTime;\n    this.loopId;\n\n    const loop = (timestamp) => {\n      const nowTime = Date.now();\n      const elapsedTime = nowTime - startTime;\n      const deltaTime = nowTime - previousTime;\n      const deltaRenderTime = nowTime - previousRenderTime;\n      const deltaTickTime = nowTime - previousTickTime;\n\n      if (deltaRenderTime > this.RENDER_INTERVAL) {\n        previousRenderTime = nowTime;\n        this.render();\n      }\n      if (deltaTickTime > this.TICK_INTERVAL) {\n        previousTickTime = nowTime;\n        this.tick();\n      }\n\n      previousTime = nowTime;\n      this.loopId = requestAnimationFrame(loop);\n    };\n\n    loop();\n  }\n\n  stop() {\n    cancelAnimationFrame(this.loopId);\n  }\n\n  tick() {\n  }\n\n  render() {\n    this.renderer.render( this.scene, this.camera );\n  }\n}\n```\n\n```javascript:script.js\nimport ChapterManager from './lib/ChapterManager';\n\n(() => {\n  const chapterManager = new ChapterManager({\n    container: document.getElementById('canvas-container'),\n  });\n\n  chapterManager.start();\n})();\n```\n", "tags": ["three.js", "es6", "JavaScript"]}