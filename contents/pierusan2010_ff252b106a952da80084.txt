{"context": " More than 1 year has passed since last update.\n\nCSV,TSV \u3092\u64cd\u4f5c\u3059\u308bC#\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\nCST, TSV \u7b49\u3001\u6587\u5b57\u533a\u5207\u308a\u30d5\u30a1\u30a4\u30eb\u3092\u304a\u624b\u8efd\u306b\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/pierre3/HandyUtilities.Xsv\n\u7c21\u5358\u306a\u6a5f\u80fd\u30fb\u4f7f\u3044\u65b9\u7b49\u306fReadme\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u7d30\u90e8\u306e\u4f5c\u308a\u8fbc\u307f(\u7279\u306b\u3001\u8aad\u307f\u8fbc\u307f\u5f8c\u306e\u30c7\u30fc\u30bf\u64cd\u4f5c\u3068\u304b)\u306f\u307e\u3060\u3053\u308c\u304b\u3089\u3067\u3059\u304c\u3001\u8aad\u307f\u66f8\u304d\u306f\u666e\u901a\u306b\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u4f7f\u3063\u3066\u3044\u308b\u3061\u3087\u3063\u3068\u4fbf\u5229\u306a\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u95a2\u3059\u308b\u30cd\u30bf\u3067\u3059\u3002\n\n\u6587\u5b57\u5217\u3092\u6570\u5024\u3078\u5909\u63db\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\nC#\u3067\u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db\u3059\u308b\u51e6\u7406\u3068\u3044\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3092\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n    //1. \u5909\u63db\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u4f8b\u5916\u5410\u304f\u5834\u5408\n    var str = \"123\";\n    var intValue = int.Parse(str);\n\n    //2. \u5909\u63db\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u306a\u306b\u304b(\u898f\u5b9a\u5024\u3092\u8a2d\u5b9a\u3068\u304b\u3092)\u3057\u305f\u3044\u5834\u5408\n    int intValue2;\n    if(!int.Parse(str,out intValue2))\n    {\n        intValue2 = -1;\n    }\n\n\n\u3053\u308c\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3042\u3093\u307e\u308a\u30b9\u30de\u30fc\u30c8\u3058\u3083\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\u7279\u306b2.\u306e\u65b9\u306f\u3082\u306e\u3059\u3054\u304f\u9762\u5012\u304f\u3055\u3044\u3067\u3059\u3002\n\u3053\u3046\u3044\u3046\u6642\u306f\u3001\u9762\u5012\u306a\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\uff01\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e\u4ed6\u306b\u3082null\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3082\u6b32\u3057\u3044\u3067\u3059\u306d\u3002\npublic static int ToInt32(this string s)\n{\n    return int.Parse(s);\n}\n\npublic static int? ToInt32OrNull(this string s)\n{\n    int result;\n    if(int.TryParse(s,out result))\n    {\n        return result;\n    }\n    return null;\n}\n\npublic static int ToInt32OrDefault(this string s, int defaultValue = default(int))\n{\n    int result;\n    if(int.TryParse(s,out result))\n    {\n        return result;\n    }\n    return defaultValue;\n}\n\n\nParse()\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3082\u3061\u3083\u3093\u3068\u5bfe\u5fdc\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u3067\u6016\u3044\u3082\u306e\u306a\u3057\u3067\u3059\u3002\n//\u5931\u6557\u3057\u305f\u3089\u4f8b\u5916\u6295\u3052\u308b\nstatic int ToInt32(this string s);\nstatic int ToInt32(this string s, IFormatProvider formatProvider)\nstatic int ToInt32(this string s, NumberStyles numberStyles)\nstatic int ToInt32(this string s, NumberStyles numberStyles, IFormatProvider formatProvider)\n\n//\u5931\u6557\u3057\u305f\u3089\u898f\u5b9a\u5024\u3092\u8fd4\u3059\u3002\u898f\u5b9a\u5024\u306f\u660e\u793a\u3057\u306a\u3051\u308c\u3070default(T) \u306b\u306a\u308a\u307e\u3059\u3002\nstatic int ToInt32OrDefault(this string s, int defaultValue = default(int))\nstatic int ToInt32OrDefault(this string s, NumberStyles numberStyles, int defaultValue = default(int))\nstatic int ToInt32OrDefault(this string s, NumberStyles numberStyles, IFormatProvider formatProvider, int defaultValue = default(int))\n\n//\u5931\u6557\u3057\u305f\u3089Null\u3092\u8fd4\u3059\nstatic int? ToInt32OrNull(this string s)\nstatic int? ToInt32OrNull(this string s, NumberStyles numberStyles)\nstatic int? ToInt32OrNull(this string s, NumberStyles numberStyles, IFormatProvider formatProvider)\n\n\n\u4ed6\u306e\u57fa\u672c\u578b\u306b\u3064\u3044\u3066\u3082\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3057\u305f\u3044\n\u306e\u3067\u3059\u304c\u3001\u3059\u3079\u3066\u306e\u57fa\u672c\u578b\u306b\u3064\u3044\u30661\u30641\u3064\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3044\u304b\u306b\u3082\u5927\u5909\u305d\u3046\u3067\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u304c\u4f7f\u3048\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001Parse()\u3001TryParse()\u30e1\u30bd\u30c3\u30c9\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3082\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3082\u306a\u3044\u306e\u3067\u3053\u308c\u3082\u7121\u7406\u3067\u3059\u3002\n//\u3053\u3093\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308c\u3070\npublic interface IParsable\n{\n    static IParsable Parse(string s);\n    static bool TryParse(string s, out IParsable);\n}\n\n//\u3053\u3046\u66f8\u3051\u308b\u306e\u3060\u3051\u308c\u3069\u3082\nstatic T Parse<T> (this string s) where T: IParseable\n{\n    return T.Parse(s);\n}\n\n\n\u3067\u306f\u3001\u3069\u3046\u3059\u308b\u304b\uff1f\n...\n...\n...\n\u529b\u6280\u3067\u30b4\u30ea\u30b4\u30ea\u66f8\u304d\u307e\u3057\u3087\u3046\uff01 \u305d\u306e\u7d50\u679c\u304c\u3053\u3061\u3089 \u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u306b1000\u884c\u4ee5\u4e0a\u306b\u53ca\u3076\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u304a\u304b\u3052\u3067\u8171\u9798\u708e\u306b... \n\u3068\u3044\u3046\u306e\u306f\u3046\u305d\u3067\u3059\u3002\u3053\u3046\u3044\u3046\u6642\u306f T4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8  \u306e\u51fa\u756a\u3067\u3059\u3002\n\nT4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u751f\u6210\u3059\u308b\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3001\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306f \u4e00\u90e8\u3001Parse()\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u306a\u304b\u3063\u305f\u308a\u3001\u5f15\u6570\u304c\u9055\u3063\u305f\u308a\u3059\u308b\u3082\u306e\u3082\u3042\u3063\u3066\u3082\u3046\u5c11\u3057\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u578b\u540d\u3067\u56de\u3057\u3066\u3001\u540d\u524d\u306e\u90e8\u5206\u3092\u5dee\u3057\u63db\u3048\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n<#@ template debug=\"false\" hostspecific=\"false\" language=\"C#\" #>\n<#@ assembly name=\"System.Core\" #>\n<#@ import namespace=\"System.Linq\" #>\n<#@ import namespace=\"System.Text\" #>\n<#@ import namespace=\"System.Collections.Generic\" #>\n<#@ import namespace=\"System.Globalization\" #>\n<#@ output extension=\".cs\" #>\n<# \n\nvar types = new Dictionary<string,string>()\n{\n        {\"sbyte\",\"SByte\"},\n        {\"byte\",\"Byte\"},\n        {\"char\",\"Char\"},\n        {\"short\",\"Int16\"},\n        {\"ushort\",\"UInt16\"},\n        {\"int\",\"Int32\"},\n        {\"uint\",\"UInt32\"},\n        {\"long\",\"Int64\"},\n        {\"ulong\",\"UInt64\"},\n        {\"float\",\"Float\"},\n        {\"double\",\"Double\"},\n        {\"decimal\",\"Decimal\"},\n        {\"DateTime\",\"DateTime\"},\n        {\"bool\",\"Boolean\"}\n};\n\n\n#>\nusing System;\nusing System.Linq;\nusing System.Text;\nusing System.Collections.Generic;\nusing System.Globalization;\n\nnamespace HandyUtil.Extensions.System\n{\n    public static partial class StringExt\n    {\n<# foreach(var typeName in types){ #>\n\n        public static <#= typeName.Key #> To<#= typeName.Value #>(this string s)\n        {\n            return <#= typeName.Key #>.Parse(s);\n        }\n\n        public static <#= typeName.Key #>? To<#= typeName.Value #>OrNull(this string s)\n        {\n                <#= typeName.Key #> result;\n                if(<#= typeName.Key #>.TryParse(s,out result))\n                {\n                        return result;\n                }\n                return null;\n        }\n\n        public static <#= typeName.Key #> To<#= typeName.Value #>OrDefault(this string s, \n            <#= typeName.Key #> defaultValue = default(<#= typeName.Key #>))\n        {\n                <#= typeName.Key #> result;\n                if(<#= typeName.Key #>.TryParse(s,out result))\n                {\n                        return result;\n                }\n                return defaultValue;\n        }\n<# } #>\n    }\n}\n\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b8c\u5168\u7248\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002StringExt.t4.tt\n\n\u304a\u307e\u3051\nenum \u7248 \u3082\u3042\u308a\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u624b\u66f8\u304d\u3067\u3059\u3002\n# CSV,TSV \u3092\u64cd\u4f5c\u3059\u308bC#\u30af\u30e9\u30b9\u30e9\u30a4\u30d6\u30e9\u30ea\nCST, TSV \u7b49\u3001\u6587\u5b57\u533a\u5207\u308a\u30d5\u30a1\u30a4\u30eb\u3092\u304a\u624b\u8efd\u306b\u8aad\u307f\u66f8\u304d\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/pierre3/HandyUtilities.Xsv\n\n\u7c21\u5358\u306a\u6a5f\u80fd\u30fb\u4f7f\u3044\u65b9\u7b49\u306fReadme\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\u7d30\u90e8\u306e\u4f5c\u308a\u8fbc\u307f(\u7279\u306b\u3001\u8aad\u307f\u8fbc\u307f\u5f8c\u306e\u30c7\u30fc\u30bf\u64cd\u4f5c\u3068\u304b)\u306f\u307e\u3060\u3053\u308c\u304b\u3089\u3067\u3059\u304c\u3001\u8aad\u307f\u66f8\u304d\u306f\u666e\u901a\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u4f7f\u3063\u3066\u3044\u308b\u3061\u3087\u3063\u3068\u4fbf\u5229\u306a\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u95a2\u3059\u308b\u30cd\u30bf\u3067\u3059\u3002\n\n## \u6587\u5b57\u5217\u3092\u6570\u5024\u3078\u5909\u63db\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\n\nC#\u3067\u6587\u5b57\u5217\u304b\u3089\u6570\u5024\u3078\u5909\u63db\u3059\u308b\u51e6\u7406\u3068\u3044\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u8ff0\u3092\u3059\u308b\u306e\u304c\u4e00\u822c\u7684\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n```csharp\n    //1. \u5909\u63db\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u4f8b\u5916\u5410\u304f\u5834\u5408\n    var str = \"123\";\n    var intValue = int.Parse(str);\n    \n    //2. \u5909\u63db\u3067\u304d\u306a\u304b\u3063\u305f\u3089\u306a\u306b\u304b(\u898f\u5b9a\u5024\u3092\u8a2d\u5b9a\u3068\u304b\u3092)\u3057\u305f\u3044\u5834\u5408\n    int intValue2;\n    if(!int.Parse(str,out intValue2))\n    {\n        intValue2 = -1;\n    }\n    \n```\n\u3053\u308c\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u3042\u3093\u307e\u308a\u30b9\u30de\u30fc\u30c8\u3058\u3083\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\u7279\u306b2.\u306e\u65b9\u306f\u3082\u306e\u3059\u3054\u304f\u9762\u5012\u304f\u3055\u3044\u3067\u3059\u3002\n\u3053\u3046\u3044\u3046\u6642\u306f\u3001\u9762\u5012\u306a\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u306b\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\uff01\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306e\u4ed6\u306b\u3082null\u3092\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u3082\u6b32\u3057\u3044\u3067\u3059\u306d\u3002\n\n```csharp\npublic static int ToInt32(this string s)\n{\n    return int.Parse(s);\n}\n\npublic static int? ToInt32OrNull(this string s)\n{\n    int result;\n    if(int.TryParse(s,out result))\n    {\n        return result;\n    }\n    return null;\n}\n                \npublic static int ToInt32OrDefault(this string s, int defaultValue = default(int))\n{\n    int result;\n    if(int.TryParse(s,out result))\n    {\n        return result;\n    }\n    return defaultValue;\n}\n\n```\nParse()\u30e1\u30bd\u30c3\u30c9\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3082\u3061\u3083\u3093\u3068\u5bfe\u5fdc\u3057\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u3067\u6016\u3044\u3082\u306e\u306a\u3057\u3067\u3059\u3002\n\n```csharp\n//\u5931\u6557\u3057\u305f\u3089\u4f8b\u5916\u6295\u3052\u308b\nstatic int ToInt32(this string s);\nstatic int ToInt32(this string s, IFormatProvider formatProvider)\nstatic int ToInt32(this string s, NumberStyles numberStyles)\nstatic int ToInt32(this string s, NumberStyles numberStyles, IFormatProvider formatProvider)\n\n//\u5931\u6557\u3057\u305f\u3089\u898f\u5b9a\u5024\u3092\u8fd4\u3059\u3002\u898f\u5b9a\u5024\u306f\u660e\u793a\u3057\u306a\u3051\u308c\u3070default(T) \u306b\u306a\u308a\u307e\u3059\u3002\nstatic int ToInt32OrDefault(this string s, int defaultValue = default(int))\nstatic int ToInt32OrDefault(this string s, NumberStyles numberStyles, int defaultValue = default(int))\nstatic int ToInt32OrDefault(this string s, NumberStyles numberStyles, IFormatProvider formatProvider, int defaultValue = default(int))\n\n//\u5931\u6557\u3057\u305f\u3089Null\u3092\u8fd4\u3059\nstatic int? ToInt32OrNull(this string s)\nstatic int? ToInt32OrNull(this string s, NumberStyles numberStyles)\nstatic int? ToInt32OrNull(this string s, NumberStyles numberStyles, IFormatProvider formatProvider)\n```\n## \u4ed6\u306e\u57fa\u672c\u578b\u306b\u3064\u3044\u3066\u3082\u307e\u3068\u3081\u3066\u5b9a\u7fa9\u3057\u305f\u3044\n\u306e\u3067\u3059\u304c\u3001\u3059\u3079\u3066\u306e\u57fa\u672c\u578b\u306b\u3064\u3044\u30661\u30641\u3064\u5b9a\u7fa9\u3059\u308b\u306e\u306f\u3044\u304b\u306b\u3082\u5927\u5909\u305d\u3046\u3067\u3059\u3002\n\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u304c\u4f7f\u3048\u308c\u3070\u826f\u3044\u306e\u3067\u3059\u304c\u3001Parse()\u3001TryParse()\u30e1\u30bd\u30c3\u30c9\u306f\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u3082\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3082\u306a\u3044\u306e\u3067\u3053\u308c\u3082\u7121\u7406\u3067\u3059\u3002\n\n```csharp\n//\u3053\u3093\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308c\u3070\npublic interface IParsable\n{\n    static IParsable Parse(string s);\n    static bool TryParse(string s, out IParsable);\n}\n\n//\u3053\u3046\u66f8\u3051\u308b\u306e\u3060\u3051\u308c\u3069\u3082\nstatic T Parse<T> (this string s) where T: IParseable\n{\n    return T.Parse(s);\n}\n\n```\n\u3067\u306f\u3001\u3069\u3046\u3059\u308b\u304b\uff1f\n...\n...\n...\n\u529b\u6280\u3067\u30b4\u30ea\u30b4\u30ea\u66f8\u304d\u307e\u3057\u3087\u3046\uff01 \u305d\u306e\u7d50\u679c\u304c[\u3053\u3061\u3089](https://github.com/pierre3/HandyUtilities.Xsv/blob/master/HandyUtil.Extensions/System/StringExt.t4.cs) \u306b\u306a\u308a\u307e\u3059\u3002\u5b9f\u306b1000\u884c\u4ee5\u4e0a\u306b\u53ca\u3076\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u304a\u304b\u3052\u3067\u8171\u9798\u708e\u306b... \n  \n\u3068\u3044\u3046\u306e\u306f\u3046\u305d\u3067\u3059\u3002\u3053\u3046\u3044\u3046\u6642\u306f [T4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8] (http://msdn.microsoft.com/ja-jp/library/bb126445.aspx)  \u306e\u51fa\u756a\u3067\u3059\u3002\n\n### T4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u751f\u6210\u3059\u308b\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3001\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n \u5b9f\u969b\u306f \u4e00\u90e8\u3001Parse()\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u304c\u306a\u304b\u3063\u305f\u308a\u3001\u5f15\u6570\u304c\u9055\u3063\u305f\u308a\u3059\u308b\u3082\u306e\u3082\u3042\u3063\u3066\u3082\u3046\u5c11\u3057\u8907\u96d1\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f\u578b\u540d\u3067\u56de\u3057\u3066\u3001\u540d\u524d\u306e\u90e8\u5206\u3092\u5dee\u3057\u63db\u3048\u308b\u3060\u3051\u3067OK\u3067\u3059\u3002\n\n```csharp\n<#@ template debug=\"false\" hostspecific=\"false\" language=\"C#\" #>\n<#@ assembly name=\"System.Core\" #>\n<#@ import namespace=\"System.Linq\" #>\n<#@ import namespace=\"System.Text\" #>\n<#@ import namespace=\"System.Collections.Generic\" #>\n<#@ import namespace=\"System.Globalization\" #>\n<#@ output extension=\".cs\" #>\n<# \n\nvar types = new Dictionary<string,string>()\n{\n        {\"sbyte\",\"SByte\"},\n        {\"byte\",\"Byte\"},\n        {\"char\",\"Char\"},\n        {\"short\",\"Int16\"},\n        {\"ushort\",\"UInt16\"},\n        {\"int\",\"Int32\"},\n        {\"uint\",\"UInt32\"},\n        {\"long\",\"Int64\"},\n        {\"ulong\",\"UInt64\"},\n        {\"float\",\"Float\"},\n        {\"double\",\"Double\"},\n        {\"decimal\",\"Decimal\"},\n        {\"DateTime\",\"DateTime\"},\n        {\"bool\",\"Boolean\"}\n};\n\n\n#>\nusing System;\nusing System.Linq;\nusing System.Text;\nusing System.Collections.Generic;\nusing System.Globalization;\n\nnamespace HandyUtil.Extensions.System\n{\n    public static partial class StringExt\n    {\n<# foreach(var typeName in types){ #>\n    \n        public static <#= typeName.Key #> To<#= typeName.Value #>(this string s)\n        {\n            return <#= typeName.Key #>.Parse(s);\n        }\n\n        public static <#= typeName.Key #>? To<#= typeName.Value #>OrNull(this string s)\n        {\n                <#= typeName.Key #> result;\n                if(<#= typeName.Key #>.TryParse(s,out result))\n                {\n                        return result;\n                }\n                return null;\n        }\n        \n        public static <#= typeName.Key #> To<#= typeName.Value #>OrDefault(this string s, \n            <#= typeName.Key #> defaultValue = default(<#= typeName.Key #>))\n        {\n                <#= typeName.Key #> result;\n                if(<#= typeName.Key #>.TryParse(s,out result))\n                {\n                        return result;\n                }\n                return defaultValue;\n        }\n<# } #>\n    }\n}\n\n```\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5b8c\u5168\u7248\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002[StringExt.t4.tt]  (https://github.com/pierre3/HandyUtilities.Xsv/blob/master/HandyUtil.Extensions/System/StringExt.t4.tt)\n\n## \u304a\u307e\u3051\n[enum \u7248] (https://github.com/pierre3/HandyUtilities.Xsv/blob/master/HandyUtil.Extensions/System/StringExt.cs) \u3082\u3042\u308a\u307e\u3059\u3002\u3053\u3061\u3089\u306f\u624b\u66f8\u304d\u3067\u3059\u3002\n\n\n\n", "tags": ["C#", ".NET", "CSV"]}