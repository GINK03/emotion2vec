{"context": " More than 1 year has passed since last update.\n\n\u74b0\u5883\n\nOSX 10.10.2 (Yosemite)\nPython 2.7.9 (OSX\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u308bPython)\n\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u203b \u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u3053\u308c\u3092\u5165\u308c\u306a\u3044\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\n$ brew install gmp\n$ sudo pip install pycrypto\n\n\n\u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\u30b9\u30af\u30ea\u30d7\u30c8\u3068ini\u3092\u53d6\u5f97\n$ wget https://github.com/ansible/ansible/blob/devel/plugins/inventory/gce.ini -P ~/.ansible\n$ wget https://raw.githubusercontent.com/ansible/ansible/devel/plugins/inventory/gce.py -P ~/.ansible\n$ chmod 755 ~/.ansible/gce.py\n\n\ngce.ini\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0(libcloud\u3092\u4f7f\u308f\u306a\u3044)\n#!/usr/bin/python\n# Copyright 2013 Google Inc.\n#\n# This file is part of Ansible\n#\n\n...\n\n[gce]\n# GCE Service Account configuration information can be stored in the\n# libcloud 'secrets.py' file.  Ideally, the 'secrets.py' file will already\n# exist in your PYTHONPATH and be picked up automatically with an import\n# statement in the inventory script.  However, you can specify an absolute\n# path to the secrets.py file with 'libcloud_secrets' parameter.\nlibcloud_secrets = \n\n# If you are not going to use a 'secrets.py' file, you can set the necessary\n# authorization parameters here.\ngce_service_account_email_address = example@developer.gserviceaccount.com\ngce_service_account_pem_file_path = ~/.ansible/example.pem\ngce_project_id = example-test-12345\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n$ ~/.ansible/gce.py | jq .\n\n{\n  \"tag_http-server\": [\n    \"example\"\n  ],\n  \"asia-east1-a\": [\n    \"example\"\n  ],\n  \"f1-micro\": [\n    \"example\"\n  ],\n  \"status_running\": [\n    \"example\"\n  ],\n  \"persistent_disk\": [\n    \"example\"\n  ],\n  \"network_default\": [\n    \"example\"\n  ],\n  \"_meta\": {\n    \"hostvars\": {\n      \"example\": {\n        \"gce_uuid\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n        \"gce_public_ip\": \"000.000.000.000\",\n        \"ansible_ssh_host\": \"000.000.000.000\",\n        \"gce_private_ip\": \"00.000.00.0\",\n        \"gce_id\": \"aaaaaaaaaaaaaaaaaaaa\",\n        \"gce_image\": null,\n        \"gce_description\": null,\n        \"gce_machine_type\": \"f1-micro\",\n        \"gce_tags\": [\n          \"http-server\"\n        ],\n        \"gce_name\": \"example\",\n        \"gce_zone\": \"asia-east1-a\",\n        \"gce_status\": \"RUNNING\",\n        \"gce_network\": \"default\",\n        \"gce_metadata\": {\n          \"os\": \"example\"\n        }\n      }\n    }\n  }\n}\n\n# \u74b0\u5883\n- OSX 10.10.2 (Yosemite)\n- Python 2.7.9 (OSX\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u308bPython)\n\n# \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u203b \u81ea\u5206\u306e\u74b0\u5883\u3067\u306f\u3053\u308c\u3092\u5165\u308c\u306a\u3044\u3068\u52d5\u304b\u306a\u304b\u3063\u305f\n\n```console\n$ brew install gmp\n$ sudo pip install pycrypto\n```\n\n# \u30a4\u30f3\u30d9\u30f3\u30c8\u30ea\u30b9\u30af\u30ea\u30d7\u30c8\u3068ini\u3092\u53d6\u5f97\n\n```console\n$ wget https://github.com/ansible/ansible/blob/devel/plugins/inventory/gce.ini -P ~/.ansible\n$ wget https://raw.githubusercontent.com/ansible/ansible/devel/plugins/inventory/gce.py -P ~/.ansible\n$ chmod 755 ~/.ansible/gce.py\n```\n\n# `gce.ini`\u306b\u8a2d\u5b9a\u3092\u8a18\u8ff0(`libcloud`\u3092\u4f7f\u308f\u306a\u3044)\n\n```ini\n#!/usr/bin/python\n# Copyright 2013 Google Inc.\n#\n# This file is part of Ansible\n#\n\n...\n\n[gce]\n# GCE Service Account configuration information can be stored in the\n# libcloud 'secrets.py' file.  Ideally, the 'secrets.py' file will already\n# exist in your PYTHONPATH and be picked up automatically with an import\n# statement in the inventory script.  However, you can specify an absolute\n# path to the secrets.py file with 'libcloud_secrets' parameter.\nlibcloud_secrets = \n\n# If you are not going to use a 'secrets.py' file, you can set the necessary\n# authorization parameters here.\ngce_service_account_email_address = example@developer.gserviceaccount.com\ngce_service_account_pem_file_path = ~/.ansible/example.pem\ngce_project_id = example-test-12345\n```\n\n# \u52d5\u4f5c\u78ba\u8a8d\n\n```console\n$ ~/.ansible/gce.py | jq .\n\n{\n  \"tag_http-server\": [\n    \"example\"\n  ],\n  \"asia-east1-a\": [\n    \"example\"\n  ],\n  \"f1-micro\": [\n    \"example\"\n  ],\n  \"status_running\": [\n    \"example\"\n  ],\n  \"persistent_disk\": [\n    \"example\"\n  ],\n  \"network_default\": [\n    \"example\"\n  ],\n  \"_meta\": {\n    \"hostvars\": {\n      \"example\": {\n        \"gce_uuid\": \"aaaaaaaaaaaaaaaaaaaaaaaaaaa\",\n        \"gce_public_ip\": \"000.000.000.000\",\n        \"ansible_ssh_host\": \"000.000.000.000\",\n        \"gce_private_ip\": \"00.000.00.0\",\n        \"gce_id\": \"aaaaaaaaaaaaaaaaaaaa\",\n        \"gce_image\": null,\n        \"gce_description\": null,\n        \"gce_machine_type\": \"f1-micro\",\n        \"gce_tags\": [\n          \"http-server\"\n        ],\n        \"gce_name\": \"example\",\n        \"gce_zone\": \"asia-east1-a\",\n        \"gce_status\": \"RUNNING\",\n        \"gce_network\": \"default\",\n        \"gce_metadata\": {\n          \"os\": \"example\"\n        }\n      }\n    }\n  }\n}\n```\n", "tags": ["GoogleCloudPlatform", "googlecomputeengine", "Ansible", "OSX", "Yosemite"]}