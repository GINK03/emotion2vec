{"context": " More than 1 year has passed since last update.\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://www.erlang.org/doc/design_principles/sup_princ.html\n\nshutdown\n-type shutdown() :: brutal_kill | timeout().\n\n\nbrutal_kill\n\u76f4\u3050\u306b kill\nerlang\nexit(Child, kill)\n\n\nTimeout::integer()\n\nexit(Child, shutdown)\n\uff08Timeout\u30df\u30ea\u79d2\u5f85\u3064\uff09\nexit(Child, kill)\n\n\ninfinity\n\u305a\u3063\u3068\u5f85\u3064\n\u5b50\u30d7\u30ed\u30bb\u30b9\u304cSupervisor\u306e\u5834\u5408\u3001 infinity \u3067\u826f\u3044\u3002\n\uff08 \u5b50\u30d7\u30ed\u30bb\u30b9\u304cWorker\u306e\u5834\u5408\u306f\u6c17\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044 \uff09\n\nChildSpec\u3092map\u3067\u6307\u5b9a\u3057shutdown\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\n1. type\u304c worker \u306e\u5834\u5408\u306f 5000\n2. type\u304c supervisor \u306e\u5834\u5408\u306f infinity\n\nsupervisor:terminate_child/2\n-spec terminate_child(SupRef, Id) -> Result when\n    SupRef :: supervisor:sup_ref(),\n    Id :: pid() | supervisor:child_id(),\n    Result :: ok | {error, Error},\n    Error :: not_found | simple_one_for_one.\n\n\u3053\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 shutdown \u306e\u6307\u5b9a\u306b\u5f93\u3063\u3066\u505c\u6b62\u3055\u308c\u308b\u3002\nId \u306e\u5024\u306f simple_one_for_one \u4ee5\u5916 \u306e\u5834\u5408\u306f supervisor:child_id() (not pid() )\u3001\n( pid() \u3092\u6307\u5b9a\u3059\u308b\u3068 {error, not_found} \u304c\u8fd4\u308b\uff09\nsimple_one_for_one \u306e\u5834\u5408\u306f pid() \u3092\u6307\u5b9a\u3059\u308b\n( supervisor:child_id() \u3092\u6307\u5b9a\u3059\u308b\u3068 {error, simple_one_for_one} \u304c\u8fd4\u308b)\n(\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u304c\u5bfe\u79f0\u7684\u3067\u306f\u306a\u3044\u306e\u304c\u60b2\u3057\u3044\u2026)\n\nsimple_one_for_one \u306e\u505c\u6b62\nsimple_one_for_one \u306eSupervisor\u3067\u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u505c\u6b62\u3055\u305b\u308b\u5834\u5408\u306f supervisor:terminate_child(SupRef, Id). \u3092\u5b9f\u884c\u3059\u308b\u3002\n\u3053\u306e\u5834\u5408\u306e Id \u306f pid() \u3057\u304b\u4f7f\u3048\u306a\u3044\u3002\n\uff08 child_id() \uff08\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068 {error, simple_one_for_one} \u304c\u5909\u3048\u308b\u3002\uff09\nsimple_one_for_one \u306e\u5834\u5408\u306f supervisor:terminate_child(SupRef, Id) \u3057\u305f\u6642\u70b9\u3067Supervisor\u304b\u3089ChildSpec\u304c\u524a\u9664\u3055\u308c\u308b\n\uff08  supervisor:delete_child(SupRef, Id) \u3092\u547c\u3076\u5fc5\u8981\u304c\u306a\u3044\uff09\n\uff08\u3061\u306a\u307f\u306b\u3001delete_child\u306e Id \u306fterminate_child\u306e Id::pid()|supervisor:child_id() \u3068\u9055\u3044 Id::child_id() \u3067\u3042\u308b\u3002 simple_one_for_one \u306e\u6642\u306b terminate_child \u3068 delete_child \u306e\u3069\u3063\u3061\u3092\u547c\u3093\u3060\u3089\u3044\u3044\u304b\u8ff7\u3063\u305f\u6642\u306f\u3053\u306e\u8fba\u308a\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u308c\u3070\u308f\u304b\u308b\u304b\u3082\u3057\u308c\u306a\u3044\uff08\u9006\u3082\u307e\u305f\u7136\u308a\uff09\uff09\n# \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://www.erlang.org/doc/design_principles/sup_princ.html\n\n# shutdown\n```erlang\n-type shutdown() :: brutal_kill | timeout().\n```\n\n## brutal_kill\n\u76f4\u3050\u306b `kill`\n```erlang\nexit(Child, kill)\n```\n\n## Timeout::integer()\n1. `exit(Child, shutdown)`\n2. \uff08Timeout\u30df\u30ea\u79d2\u5f85\u3064\uff09\n3. `exit(Child, kill)`\n\n## infinity\n\u305a\u3063\u3068\u5f85\u3064\n\n\u5b50\u30d7\u30ed\u30bb\u30b9\u304cSupervisor\u306e\u5834\u5408\u3001 `infinity` \u3067\u826f\u3044\u3002\n\uff08 _\u5b50\u30d7\u30ed\u30bb\u30b9\u304cWorker\u306e\u5834\u5408\u306f\u6c17\u3092\u4ed8\u3051\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044_ \uff09\n\n---\n\nChildSpec\u3092map\u3067\u6307\u5b9a\u3057shutdown\u3092\u7701\u7565\u3057\u305f\u5834\u5408\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f\n1. type\u304c `worker` \u306e\u5834\u5408\u306f `5000`\n2. type\u304c `supervisor` \u306e\u5834\u5408\u306f `infinity`\n\n# supervisor:terminate_child/2\n```erlang\n-spec terminate_child(SupRef, Id) -> Result when\n    SupRef :: supervisor:sup_ref(),\n    Id :: pid() | supervisor:child_id(),\n    Result :: ok | {error, Error},\n    Error :: not_found | simple_one_for_one.\n```\n\n\u3053\u306e\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 `shutdown` \u306e\u6307\u5b9a\u306b\u5f93\u3063\u3066\u505c\u6b62\u3055\u308c\u308b\u3002\n\n`Id` \u306e\u5024\u306f `simple_one_for_one` **\u4ee5\u5916** \u306e\u5834\u5408\u306f `supervisor:child_id()` (not `pid()` )\u3001\n( `pid()` \u3092\u6307\u5b9a\u3059\u308b\u3068 `{error, not_found}` \u304c\u8fd4\u308b\uff09\n`simple_one_for_one` \u306e\u5834\u5408\u306f `pid()` \u3092\u6307\u5b9a\u3059\u308b\n( `supervisor:child_id()` \u3092\u6307\u5b9a\u3059\u308b\u3068 `{error, simple_one_for_one}` \u304c\u8fd4\u308b)\n(\u30a8\u30e9\u30fc\u306e\u5185\u5bb9\u304c\u5bfe\u79f0\u7684\u3067\u306f\u306a\u3044\u306e\u304c\u60b2\u3057\u3044\u2026)\n\n# simple_one_for_one \u306e\u505c\u6b62\n`simple_one_for_one` \u306eSupervisor\u3067\u5b50\u30d7\u30ed\u30bb\u30b9\u3092\u505c\u6b62\u3055\u305b\u308b\u5834\u5408\u306f `supervisor:terminate_child(SupRef, Id).` \u3092\u5b9f\u884c\u3059\u308b\u3002\n\n\u3053\u306e\u5834\u5408\u306e `Id` \u306f `pid()` \u3057\u304b\u4f7f\u3048\u306a\u3044\u3002\n\uff08 `child_id()` \uff08\u306e\u3088\u3046\u306a\u3082\u306e\uff09\u3092\u4f7f\u304a\u3046\u3068\u3059\u308b\u3068 `{error, simple_one_for_one}` \u304c\u5909\u3048\u308b\u3002\uff09\n\n`simple_one_for_one` \u306e\u5834\u5408\u306f `supervisor:terminate_child(SupRef, Id)` \u3057\u305f\u6642\u70b9\u3067Supervisor\u304b\u3089ChildSpec\u304c\u524a\u9664\u3055\u308c\u308b\n\uff08 :left_right_arrow: `supervisor:delete_child(SupRef, Id)` \u3092\u547c\u3076\u5fc5\u8981\u304c\u306a\u3044\uff09\n\uff08\u3061\u306a\u307f\u306b\u3001delete_child\u306e `Id` \u306fterminate_child\u306e `Id::pid()|supervisor:child_id()` \u3068\u9055\u3044 `Id::child_id()` \u3067\u3042\u308b\u3002 `simple_one_for_one` \u306e\u6642\u306b `terminate_child` \u3068 `delete_child` \u306e\u3069\u3063\u3061\u3092\u547c\u3093\u3060\u3089\u3044\u3044\u304b\u8ff7\u3063\u305f\u6642\u306f\u3053\u306e\u8fba\u308a\u3092\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u307f\u308c\u3070\u308f\u304b\u308b\u304b\u3082\u3057\u308c\u306a\u3044\uff08\u9006\u3082\u307e\u305f\u7136\u308a\uff09\uff09\n", "tags": ["Erlang"]}