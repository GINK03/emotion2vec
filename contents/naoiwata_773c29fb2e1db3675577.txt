{"context": " More than 1 year has passed since last update.javascript \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u59cb\u3081\u3066 4 \u65e5\u76ee\u306e\u3057\u3087\u3057\u3093\u3057\u3083\u3067\u3059.\n\u3044\u308d\u3044\u308d\u306a\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8abf\u3079\u306a\u304c\u3089\u4eca\u66f4? \u307f\u305f\u3044\u306a\u3053\u3068\u3070\u304b\u308a\u3067\u3059\u304c\u6574\u7406\u304c\u3066\u3089\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059.\n\u4ee5\u4e0b\u66f8\u304d\u8db3\u308a\u306a\u3044\u6240\u3082\u591a\u3044\u306e\u3067\u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059.\n\n\n\u6bd4\u8f03\n\n\n\n\u8a00\u8a9e\n\u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u30c4\u30fc\u30eb\n\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\u901a\u4fe1\u307e\u308f\u308a(API \u306e\u30c6\u30b9\u30c8\u3068\u304b)\n\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\n\n\n\n\nPython\npip, easy_install\nunittest, py.test\nrequests\nmock\n\n\nnode.js\nnpm\nmocha, chai\nsupertest, superagent\nsinon\n\n\n\n\u3044\u307e\u3084\u3063\u3068\u89e6\u3063\u305f\u306e\u306f\u3053\u308c\u304f\u3089\u3044\u3067\u3059. testem \u3068\u304b phantomjs \u3068\u304b\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u307e\u3060\u8ffd\u3044\u3064\u3044\u3066\u3044\u307e\u305b\u3093(\u6d99)\n\n\u30c6\u30b9\u30c8\u74b0\u5883\u69cb\u7bc9\n\u5916\u90e8\u4f9d\u5b58\u3057\u306a\u3044\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059.\n\nPython\nPython \u306f virtualenv \u3068 pip \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059.\nmkdir PROJECT\ncd PROJECT\nvirtualenv -p python2.7 venv\nsource venv/bin/activate\npip install py.test requests mock\n\n\nnode.js\nnode.js \u306f npm \u3067\u3059\u306d! \u8a73\u3057\u3044\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3092\u30d6\u30ed\u30b0\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f. \u53c2\u8003\u306b\u306a\u308c\u3070.\n\u305d\u3046\u3044\u3048\u3070 coffeescript \u3067\u66f8\u3044\u3066\u3044\u307e\u3059.\nmkdir PROJECT\ncd PROJECT\nnpm init\nnpm install coffee-script mocha chai supertest superagent sinon --save-dev\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u308b\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4f8b\u306f\u4ee5\u4e0b API \u53d6\u5f97\u30c6\u30b9\u30c8, \u30e2\u30c3\u30af\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u306b\u66f8\u3044\u3066\u3044\u304d\u307e\u3059. \n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f test/ \u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3044\u308b\u60f3\u5b9a\u3067\u3059.\n\nPython\nsource venv/bin/activate\npy.test tests/*.py -v -k\n\n\nnode.js\n./node_modules/mocha/bin/mocha test/*.coffee --compilers coffee:coffee-script/register -R list \n\n\u3061\u306a\u307f\u306b coffee-script \u306e version-1.7.0 \u304b\u3089, \u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u304d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f coffee-script/register \u306b\u5909\u66f4\u3057\u306a\u3044\u3068\u307f\u305f\u3044\u3067\u3059\u306d. \n\n\u901a\u4fe1\u5468\u308a\u306e\u30c6\u30b9\u30c8\n\nPython\n# API \u53d6\u5f97\u30c6\u30b9\u30c8\nimport unittest\nimport requests\n\nclass TestAPI(unittest.TestCase):\n\n    def get_api(self):\n        res = requests.get(\n            '/api/status',\n            headers={'Content-Type': 'application/json'},\n            data='{\"name\":\"hoge\"}'\n        )\n        return res\n\n    def test_sample(self):\n        res = self.get_api()\n        self.assertEqual(res.status_code, 200)\n        self.assertIsInstance(res.json()['age'], int)\n        self.assertEqual(res.json()['age'], 25)\n\n\nnode.js\n# API \u53d6\u5f97\u30c6\u30b9\u30c8\nassert = require('assert')\nrequest = require('superagent')\n\ndescribe 'test: ', ->\n  it 'testing for API', (done) ->\n    request.get('/api/status')\n      .set('Content-Type', 'application/json')\n      .end (error, res) ->\n        if error\n          return done(err)\n        assert.equal(res.status, 200)\n        assert.typeOf(res.body['age'], 'number')\n        assert.equal(res.body['age'], 25)\n        done()\n        return\n\n\n\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u3092\u8fd4\u3059\u95a2\u6570\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408, \u30e9\u30f3\u30c0\u30e0\u95a2\u6570\u3092\u5b9a\u6570\u306b\u8fd4\u3059\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u30a2\u30b5\u30fc\u30c8\u3059\u308b\u4f8b\u3092\u66f8\u304d\u307e\u3059.\n\nPython\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\nfrom random import random\ndef foo(x):\n    return random() * x\n\n# \u30c6\u30b9\u30c8\nimport unittest\nfrom mock import Mock\n\nclass TestMock(unittest.TestCase):\n\n    def test_sample(self):\n        random = Mock()\n        random.return_value = 0.5\n        self.assertEqual(foo(10), 5) \n\n\nnode.js\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\nfoo = (x) ->\n    return Math.random() * x\n\n# \u30c6\u30b9\u30c8\nassert = require('assert')\nsinon = require('sinon')\n\ndescribe 'test: ', ->\n  it 'testing for foo()', (done) ->\n    stub = sinon.stub(Math, 'random')\n    stub.returns(0.5)\n    assert.equal(foo(10), 5)\n    done()\n    return\n\n\u3056\u3063\u304f\u308a\u76f8\u95a2\u3057\u3066\u307f\u307e\u3057\u305f. GUI \u307e\u308f\u308a\u306e\u30c6\u30b9\u30c8\u306f\u3053\u308c\u304b\u3089\u66f8\u304f\u306e\u3067\u624b\u63a2\u308a\u3067\u8abf\u3079\u3066\u3044\u304d\u307e\u3059. ruby \u306e RSpec \u306e\u30c6\u30b9\u30c8\u3082\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3044\u306a\u3041. \u6c17\u304c\u5411\u3044\u305f\u6642\u306b\u30d6\u30ed\u30b0\u306b\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093.\njavascript \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u59cb\u3081\u3066 4 \u65e5\u76ee\u306e\u3057\u3087\u3057\u3093\u3057\u3083\u3067\u3059.\n\u3044\u308d\u3044\u308d\u306a\u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u8abf\u3079\u306a\u304c\u3089\u4eca\u66f4? \u307f\u305f\u3044\u306a\u3053\u3068\u3070\u304b\u308a\u3067\u3059\u304c\u6574\u7406\u304c\u3066\u3089\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059.\n\n```\n\u4ee5\u4e0b\u66f8\u304d\u8db3\u308a\u306a\u3044\u6240\u3082\u591a\u3044\u306e\u3067\u968f\u6642\u66f4\u65b0\u3057\u3066\u3044\u304d\u307e\u3059.\n```\n\n## \u6bd4\u8f03\n\n| \u8a00\u8a9e | \u30e9\u30a4\u30d6\u30e9\u30ea\u7ba1\u7406\u30c4\u30fc\u30eb | \u30c6\u30b9\u30c8\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af | \u901a\u4fe1\u307e\u308f\u308a(API \u306e\u30c6\u30b9\u30c8\u3068\u304b) | \u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea |\n|:-----------|:------------:|:------------:|:------------:|:------------:|\n| Python | pip, easy_install | unittest, py.test | requests | mock |\n| node.js | npm | mocha, chai | supertest, superagent | sinon |\n\n\u3044\u307e\u3084\u3063\u3068\u89e6\u3063\u305f\u306e\u306f\u3053\u308c\u304f\u3089\u3044\u3067\u3059. testem \u3068\u304b phantomjs \u3068\u304b\u4ed6\u306b\u3082\u3044\u308d\u3044\u308d\u3042\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u307e\u3060\u8ffd\u3044\u3064\u3044\u3066\u3044\u307e\u305b\u3093(\u6d99)\n\n## \u30c6\u30b9\u30c8\u74b0\u5883\u69cb\u7bc9\n\n\u5916\u90e8\u4f9d\u5b58\u3057\u306a\u3044\u74b0\u5883\u3092\u4f5c\u308a\u307e\u3059.\n\n### Python\n\nPython \u306f virtualenv \u3068 pip \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059.\n\n```\nmkdir PROJECT\ncd PROJECT\nvirtualenv -p python2.7 venv\nsource venv/bin/activate\npip install py.test requests mock\n```\n\n### node.js\n\nnode.js \u306f npm \u3067\u3059\u306d! \u8a73\u3057\u3044\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u3092[\u30d6\u30ed\u30b0](http://pydiary.bitbucket.org/blog/html/2014/01/01/nodejs.html)\u306b\u66f8\u3044\u305f\u3053\u3068\u304c\u3042\u308a\u307e\u3057\u305f. \u53c2\u8003\u306b\u306a\u308c\u3070.\n\u305d\u3046\u3044\u3048\u3070 coffeescript \u3067\u66f8\u3044\u3066\u3044\u307e\u3059.\n\n```\nmkdir PROJECT\ncd PROJECT\nnpm init\nnpm install coffee-script mocha chai supertest superagent sinon --save-dev\n```\n\n## \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u8d70\u3089\u305b\u308b\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u4f8b\u306f\u4ee5\u4e0b API \u53d6\u5f97\u30c6\u30b9\u30c8, \u30e2\u30c3\u30af\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u306b\u66f8\u3044\u3066\u3044\u304d\u307e\u3059. \n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f test/ \u4ee5\u4e0b\u306b\u7f6e\u3044\u3066\u3044\u308b\u60f3\u5b9a\u3067\u3059.\n\n### Python\n\n``` \nsource venv/bin/activate\npy.test tests/*.py -v -k\n```\n\n### node.js\n\n```\n./node_modules/mocha/bin/mocha test/*.coffee --compilers coffee:coffee-script/register -R list \n```\n\n\u3061\u306a\u307f\u306b `coffee-script` \u306e version-1.7.0 \u304b\u3089, \u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u304d\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f [coffee-script/register](http://coffeescript.org/#changelog) \u306b\u5909\u66f4\u3057\u306a\u3044\u3068\u307f\u305f\u3044\u3067\u3059\u306d. \n\n## \u901a\u4fe1\u5468\u308a\u306e\u30c6\u30b9\u30c8\n\n### Python\n\n```py\n# API \u53d6\u5f97\u30c6\u30b9\u30c8\nimport unittest\nimport requests\n\nclass TestAPI(unittest.TestCase):\n    \n    def get_api(self):\n        res = requests.get(\n            '/api/status',\n            headers={'Content-Type': 'application/json'},\n            data='{\"name\":\"hoge\"}'\n        )\n        return res\n        \n    def test_sample(self):\n        res = self.get_api()\n        self.assertEqual(res.status_code, 200)\n        self.assertIsInstance(res.json()['age'], int)\n        self.assertEqual(res.json()['age'], 25)\n```\n\n### node.js\n\n```coffeescript\n# API \u53d6\u5f97\u30c6\u30b9\u30c8\nassert = require('assert')\nrequest = require('superagent')\n\ndescribe 'test: ', ->\n  it 'testing for API', (done) ->\n    request.get('/api/status')\n      .set('Content-Type', 'application/json')\n      .end (error, res) ->\n        if error\n          return done(err)\n        assert.equal(res.status, 200)\n        assert.typeOf(res.body['age'], 'number')\n        assert.equal(res.body['age'], 25)\n        done()\n        return\n```\n\n\n## \u30e2\u30c3\u30af\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u3092\u8fd4\u3059\u95a2\u6570\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u5834\u5408, \u30e9\u30f3\u30c0\u30e0\u95a2\u6570\u3092\u5b9a\u6570\u306b\u8fd4\u3059\u3088\u3046\u306b\u30e2\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u3066\u30a2\u30b5\u30fc\u30c8\u3059\u308b\u4f8b\u3092\u66f8\u304d\u307e\u3059.\n\n### Python\n\n```py\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\nfrom random import random\ndef foo(x):\n    return random() * x\n\n# \u30c6\u30b9\u30c8\nimport unittest\nfrom mock import Mock\n\nclass TestMock(unittest.TestCase):\n\n    def test_sample(self):\n        random = Mock()\n        random.return_value = 0.5\n        self.assertEqual(foo(10), 5) \n```\n\n### node.js\n\n```coffeescript\n# \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u95a2\u6570\nfoo = (x) ->\n    return Math.random() * x\n\n# \u30c6\u30b9\u30c8\nassert = require('assert')\nsinon = require('sinon')\n\ndescribe 'test: ', ->\n  it 'testing for foo()', (done) ->\n    stub = sinon.stub(Math, 'random')\n    stub.returns(0.5)\n    assert.equal(foo(10), 5)\n    done()\n    return\n```\n\n\u3056\u3063\u304f\u308a\u76f8\u95a2\u3057\u3066\u307f\u307e\u3057\u305f. GUI \u307e\u308f\u308a\u306e\u30c6\u30b9\u30c8\u306f\u3053\u308c\u304b\u3089\u66f8\u304f\u306e\u3067\u624b\u63a2\u308a\u3067\u8abf\u3079\u3066\u3044\u304d\u307e\u3059. ruby \u306e RSpec \u306e\u30c6\u30b9\u30c8\u3082\u6bd4\u8f03\u3057\u3066\u307f\u305f\u3044\u306a\u3041. \u6c17\u304c\u5411\u3044\u305f\u6642\u306b[\u30d6\u30ed\u30b0](http://pydiary.bitbucket.org/)\u306b\u66f8\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093.", "tags": ["Python2.7~", "Node.js0.10~", "CoffeeScript1.7.0~", "mocha", "Sinon.JS"]}