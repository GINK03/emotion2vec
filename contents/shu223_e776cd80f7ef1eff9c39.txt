{"context": " More than 1 year has passed since last update.vImage\u3068\u306f\u3001iOS5\u304b\u3089Accelerate.framework\u306b\u8ffd\u52a0\u3055\u308c\u305f\u9ad8\u901f\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u7279\u5fb4\u306f\u4f55\u3068\u3044\u3063\u3066\u3082\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5411\u3051\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u3066\u9ad8\u901f\u3068\u3044\u3046\u70b9\u3067\u3059\u3002WWDC2011\u306e\u30bb\u30c3\u30b7\u30e7\u30f3209 \"Inside the Accelerate Framework\" \u306b\u3088\u308b\u3068\u3001vImage\u3092\u4f7f\u308f\u306a\u3044\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3088\u308a\u308214\u500d\u9ad8\u901f\u3068\u3044\u3046\u7d50\u679c\u304c\u51fa\u3066\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u540c\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u8cc7\u6599\u306b\u306f\u3001\u6d88\u8cbb\u96fb\u529b\u304c\u6291\u3048\u3089\u308c\u308b\u3068\u3044\u3046\u5831\u544a\u3082\u3042\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u753b\u50cf\u51e6\u7406\u306e\u57fa\u672c\u6f14\u7b97\u3067\u3042\u308b\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3046\u95a2\u6570vImageConvolve_ARGB8888\u3092\u7528\u3044\u3066\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u6e96\u5099\n\nAccelerate\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\nAccelerate.h\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n\n#import <Accelerate/Accelerate.h>\n\n\n\u5165\u529b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\nvImageConvolve_ARGB8888\u306e\u5f15\u6570\u306b\u6e21\u3059\u305f\u3081\u3001UIImage\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3060\u5165\u529b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nconst size_t width = self.size.width;\nconst size_t height = self.size.height;\nconst size_t bytesPerRow = width * 4;\n\nCGColorSpaceRef space = CGColorSpaceCreateDeviceRGB();\nCGBitmapInfo bitmapInfo = kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedFirst;\nCGContextRef bmContext = CGBitmapContextCreate(NULL, width, height, 8,\n                                               bytesPerRow, space,\n                                               bitmapInfo);\nCGColorSpaceRelease(space);\n\nif (!bmContext) {\n    return nil;\n}\n\nCGRect dstRect = CGRectMake(0, 0, width, height);\nCGContextDrawImage(bmContext, dstRect, self.CGImage);\n\nUInt8 *data = (UInt8 *)CGBitmapContextGetData(bmContext);\nif (!data) {\n    CGContextRelease(bmContext);\n    return nil;\n}\n\nvImage_Buffer src = {data, height, width, bytesPerRow};\n\n\n\u51fa\u529b\u753b\u50cf\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u78ba\u4fdd\n\u5165\u529b\u753b\u50cf\u3068\u540c\u30b5\u30a4\u30ba\u306e\u51fa\u529b\u753b\u50cf\u7528\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\nconst size_t dstSize = sizeof(UInt8) * width * height * 4;\nvoid *dstData = malloc(dstSize);\nvImage_Buffer dst = {dstData, height, width, bytesPerRow};\n\n\n\u7573\u307f\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u884c\nvImageConvolve_ARGB8888\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5f15\u6570\u304c\u591a\u304f\u8907\u96d1\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u3069\u308c\u3082\u7573\u307f\u8fbc\u307f\u51e6\u7406\u306b\u3042\u308b\u7a0b\u5ea6\u6c4e\u7528\u6027\u3092\u6301\u305f\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u5fc5\u8981\u306a\u3082\u306e\u3070\u304b\u308a\u3067\u3059\u3002\n\u4e0b\u8a18\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3001\u753b\u50cf\u5168\u4f53\u306b\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\nvImageConvolve_ARGB8888(&src,   // const vImage_Buffer *src\n                        &dst,   // const vImage_Buffer *dest\n                        NULL,   // void *tempBuffer\n                        0,      // vImagePixelCount srcOffsetToROI_X\n                        0,      // vImagePixelCount srcOffsetToROI_Y\n                        gaussianblur_kernel,    // const int16_t *kernel\n                        5,      // uint32_t kernel_height\n                        5,      // uint32_t kernel_width\n                        256,    // int32_t divisor\n                        NULL,   // Pixel_8888 backgroundColor\n                        kvImageCopyInPlace  // vImage_Flags flags\n                        );\n\n\n\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u5f15\u6570\u306b\u7d5e\u3063\u3066\u88dc\u8db3\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001\u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u306f\u3001\u305d\u308c\u305e\u308c\u5165\u529b\u753b\u50cf\u3068\u51fa\u529b\u753b\u50cf\u306evImage_Buffer\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u524d\u9805\u3068\u524d\u3005\u9805\u3067\u7528\u610f\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066\u91cd\u8981\u306a\u306e\u304c\u7b2c6\u5f15\u6570\"kernel\"\u3067\u3001\u6e21\u3057\u3066\u3044\u308b\u5024gaussianblur_kernel\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\nstatic int16_t gaussianblur_kernel[25] = {\n    1, 4, 6, 4, 1, \n    4, 16, 24, 16, 4,\n    6, 24, 36, 24, 6,\n    4, 16, 24, 16, 4,\n    1, 4, 6, 4, 1\n};\n\n5x5\u306e\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u30d5\u30a3\u30eb\u30bf\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u7b2c7\u3001\u7b2c8\u5f15\u6570\u306f\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u9ad8\u3055\u3068\u5e45\u3001\u7b2c9\u5f15\u6570\"divisor\"\u306f\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u306e\u5408\u8a08\u5024\u3067\u3059\u3002\"divisor\"\u306f\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u969b\u306b\u5024\u3092\u6b63\u898f\u5316\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u51e6\u7406\u7d50\u679c\u3092UIImage\u306b\u5909\u63db\n\u51e6\u7406\u5f8c\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u304b\u3089CGBitmapContextCreateImage\u95a2\u6570\u3092\u7528\u3044\u3066CGImageRef\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u305d\u3053\u304b\u3089imageWithCGImage:\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066UIImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nmemcpy(data, dstData, dstSize);\nfree(dstData);\n\nCGImageRef blurredImageRef = CGBitmapContextCreateImage(bmContext);\nUIImage* blurred = [UIImage imageWithCGImage:blurredImageRef];\n\nCGImageRelease(blurredImageRef);\nCGContextRelease(bmContext);\n\n\u4ee5\u4e0a\u304c\u3001\u5165\u529b\u753b\u50cf\u306eUIImage\u304b\u3089\u3001vImage\u306evImageConvolve_ARGB8888\u95a2\u6570\u3092\u7528\u3044\u3066\u7573\u307f\u8fbc\u307f\u51e6\u7406\u3092\u884c\u3063\u305f\u51fa\u529b\u753b\u50cf\u3092UIImage\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3067\u3059\u3002\n\n\n\u4ed6\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3092\u884c\u3046\n\u540c\u3058vImageConvolve_ARGB8888\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u7b2c6\u5f15\u6570\"kernel\"\u306e\u914d\u5217\u3092\u3044\u308d\u3044\u308d\u3068\u5909\u3048\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306a\u30d5\u30a3\u30eb\u30bf\u52b9\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u306f\u30ab\u30fc\u30cd\u30eb\u306e\u914d\u5217\u3068\u3001vImageConvolve_ARGB8888\u3092\u30b3\u30fc\u30eb\u3059\u308b\u90e8\u5206\u306e\u307f\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u307e\u3059\u3002\u30ab\u30fc\u30cd\u30eb\u306e\u914d\u5217\u306b\u5408\u308f\u305b\u3066vImageConvolve_ARGB8888\u306e\u7b2c7\u301c\u7b2c9\u5f15\u6570\u3092\u5909\u3048\u3066\u3044\u308b\u70b9\u306b\u3054\u6ce8\u76ee\u304f\u3060\u3055\u3044\u3002\n\u30a8\u30f3\u30dc\u30b9\n\nstatic int16_t emboss_kernel[9] = {\n    -2, 0, 0, \n    0, 1, 0, \n    0, 0, 2\n};\n\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        emboss_kernel,\n                        3,\n                        3,\n                        1,\n                        NULL,\n                        kvImageCopyInPlace);\n\n\u5148\u92ed\u5316\n\nstatic int16_t sharpen_kernel[9] = {\n    -1, -1, -1, \n    -1, 9, -1, \n    -1, -1, -1\n};\n\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        sharpen_kernel,\n                        3,\n                        3,\n                        1,\n                        NULL,\n                        kvImageCopyInPlace);\n\n\n\u30a8\u30c3\u30b8\u691c\u51fa\n(\u5f8c\u307b\u3069\u753b\u50cf\u3092\u8cbc\u4ed8\u3051\u307e\u3059)\nstatic int16_t edgedetect_kernel[9] = {\n -1, -1, -1, \n -1, 8, -1, \n -1, -1, -1\n };\n\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        edgedetect_kernel,\n                        3,\n                        3,\n                        1,\n                        backgroundColorBlack,\n                        kvImageCopyInPlace);\n\n\u203b\u51e6\u7406\u7d50\u679c\u3092\u8996\u8a8d\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u7b2c10\u5f15\u6570\u3067\u80cc\u666f\u8272\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nvImageCategory\u3068\u3044\u3046\u3001vImage\u306b\u3088\u308b\u753b\u50cf\u51e6\u7406\u3092\u884c\u3048\u308b\u30af\u30e9\u30b9\u3068\u3001\u305d\u306e\u30c7\u30e2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e0b\u8a18\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3066\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/shu223/vImageCategory\nUIImage \u306e\u30ab\u30c6\u30b4\u30ea\u3068\u3057\u3066\u4f5c\u3063\u3066\u3042\u3063\u3066API\u3082\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n// Convolution Oprations\n- (UIImage *)gaussianBlur;\n- (UIImage *)edgeDetection;\n- (UIImage *)emboss;\n- (UIImage *)sharpen;\n- (UIImage *)unsharpen;\n\n// Geometric Operations\n- (UIImage *)rotateInRadians:(float)radians;\n\n// Morphological Operations\n- (UIImage *)dilate;\n- (UIImage *)erode;\n- (UIImage *)dilateWithIterations:(int)iterations;\n- (UIImage *)erodeWithIterations:(int)iterations;\n- (UIImage *)gradientWithIterations:(int)iterations;\n- (UIImage *)tophatWithIterations:(int)iterations;\n- (UIImage *)blackhatWithIterations:(int)iterations;\n\n// Histogram Operations\n- (UIImage *)equalization;\n\n\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044\u3001\u56de\u8ee2\u3084\u81a8\u5f35\u3001\u53ce\u7e2e\u306e\u6a5f\u80fd\u3082\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u7528\u3059\u308b\u969b\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3082\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nvImage\u3068\u306f\u3001iOS5\u304b\u3089Accelerate.framework\u306b\u8ffd\u52a0\u3055\u308c\u305f\u9ad8\u901f\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\u7279\u5fb4\u306f\u4f55\u3068\u3044\u3063\u3066\u3082**\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5411\u3051\u306b\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u3066\u9ad8\u901f**\u3068\u3044\u3046\u70b9\u3067\u3059\u3002WWDC2011\u306e\u30bb\u30c3\u30b7\u30e7\u30f3209 \"Inside the Accelerate Framework\" \u306b\u3088\u308b\u3068\u3001vImage\u3092\u4f7f\u308f\u306a\u3044\u3067\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3088\u308a\u308214\u500d\u9ad8\u901f\u3068\u3044\u3046\u7d50\u679c\u304c\u51fa\u3066\u3044\u307e\u3057\u305f\u3002\u307e\u305f\u540c\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u8cc7\u6599\u306b\u306f\u3001\u6d88\u8cbb\u96fb\u529b\u304c\u6291\u3048\u3089\u308c\u308b\u3068\u3044\u3046\u5831\u544a\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u753b\u50cf\u51e6\u7406\u306e\u57fa\u672c\u6f14\u7b97\u3067\u3042\u308b\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u3092\u884c\u3046\u95a2\u6570`vImageConvolve_ARGB8888`\u3092\u7528\u3044\u3066\u753b\u50cf\u306b\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n##\u6e96\u5099\n1. Accelerate\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3059\u308b\n2. Accelerate.h\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n\n````\n#import <Accelerate/Accelerate.h>\n````\n\n##\u5165\u529b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\n`vImageConvolve_ARGB8888`\u306e\u5f15\u6570\u306b\u6e21\u3059\u305f\u3081\u3001UIImage\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3060\u5165\u529b\u753b\u50cf\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n````\nconst size_t width = self.size.width;\nconst size_t height = self.size.height;\nconst size_t bytesPerRow = width * 4;\n\nCGColorSpaceRef space = CGColorSpaceCreateDeviceRGB();\nCGBitmapInfo bitmapInfo = kCGBitmapByteOrderDefault | kCGImageAlphaPremultipliedFirst;\nCGContextRef bmContext = CGBitmapContextCreate(NULL, width, height, 8,\n                                               bytesPerRow, space,\n                                               bitmapInfo);\nCGColorSpaceRelease(space);\n\nif (!bmContext) {\n    return nil;\n}\n\nCGRect dstRect = CGRectMake(0, 0, width, height);\nCGContextDrawImage(bmContext, dstRect, self.CGImage);\n\nUInt8 *data = (UInt8 *)CGBitmapContextGetData(bmContext);\nif (!data) {\n    CGContextRelease(bmContext);\n    return nil;\n}\n\nvImage_Buffer src = {data, height, width, bytesPerRow};\n````\n\n\n##\u51fa\u529b\u753b\u50cf\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u78ba\u4fdd\n\u5165\u529b\u753b\u50cf\u3068\u540c\u30b5\u30a4\u30ba\u306e\u51fa\u529b\u753b\u50cf\u7528\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\n\n````\nconst size_t dstSize = sizeof(UInt8) * width * height * 4;\nvoid *dstData = malloc(dstSize);\nvImage_Buffer dst = {dstData, height, width, bytesPerRow};\n````\n\n\n##\u7573\u307f\u8fbc\u307f\u51e6\u7406\u3092\u5b9f\u884c\n`vImageConvolve_ARGB8888`\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u5f15\u6570\u304c\u591a\u304f\u8907\u96d1\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u3069\u308c\u3082\u7573\u307f\u8fbc\u307f\u51e6\u7406\u306b\u3042\u308b\u7a0b\u5ea6\u6c4e\u7528\u6027\u3092\u6301\u305f\u305b\u3088\u3046\u3068\u3059\u308b\u3068\u5fc5\u8981\u306a\u3082\u306e\u3070\u304b\u308a\u3067\u3059\u3002\n\n\u4e0b\u8a18\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3001\u753b\u50cf\u5168\u4f53\u306b\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u30d5\u30a3\u30eb\u30bf\u3092\u304b\u3051\u308b\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\n\n````\nvImageConvolve_ARGB8888(&src,   // const vImage_Buffer *src\n                        &dst,   // const vImage_Buffer *dest\n                        NULL,   // void *tempBuffer\n                        0,      // vImagePixelCount srcOffsetToROI_X\n                        0,      // vImagePixelCount srcOffsetToROI_Y\n                        gaussianblur_kernel,    // const int16_t *kernel\n                        5,      // uint32_t kernel_height\n                        5,      // uint32_t kernel_width\n                        256,    // int32_t divisor\n                        NULL,   // Pixel_8888 backgroundColor\n                        kvImageCopyInPlace  // vImage_Flags flags\n                        );\n\n````\n\n\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u5f15\u6570\u306b\u7d5e\u3063\u3066\u88dc\u8db3\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u7b2c1\u5f15\u6570\u3068\u7b2c2\u5f15\u6570\u306f\u3001\u305d\u308c\u305e\u308c\u5165\u529b\u753b\u50cf\u3068\u51fa\u529b\u753b\u50cf\u306evImage_Buffer\u69cb\u9020\u4f53\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\u524d\u9805\u3068\u524d\u3005\u9805\u3067\u7528\u610f\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u91cd\u8981\u306a\u306e\u304c\u7b2c6\u5f15\u6570\"kernel\"\u3067\u3001\u6e21\u3057\u3066\u3044\u308b\u5024gaussianblur_kernel\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3055\u308c\u305f\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3059\u3002\n\n````\nstatic int16_t gaussianblur_kernel[25] = {\n\t1, 4, 6, 4, 1, \n\t4, 16, 24, 16, 4,\n\t6, 24, 36, 24, 6,\n\t4, 16, 24, 16, 4,\n\t1, 4, 6, 4, 1\n};\n````\n\n5x5\u306e\u30ac\u30a6\u30b7\u30a2\u30f3\u30d6\u30e9\u30fc\u30d5\u30a3\u30eb\u30bf\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7b2c7\u3001\u7b2c8\u5f15\u6570\u306f\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u9ad8\u3055\u3068\u5e45\u3001\u7b2c9\u5f15\u6570\"divisor\"\u306f\u3053\u306e\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u306e\u5408\u8a08\u5024\u3067\u3059\u3002\"divisor\"\u306f\u7573\u307f\u8fbc\u307f\u6f14\u7b97\u306e\u969b\u306b\u5024\u3092\u6b63\u898f\u5316\u3059\u308b\u305f\u3081\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n##\u51e6\u7406\u7d50\u679c\u3092UIImage\u306b\u5909\u63db\n\u51e6\u7406\u5f8c\u306e\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u30c7\u30fc\u30bf\u304b\u3089`CGBitmapContextCreateImage`\u95a2\u6570\u3092\u7528\u3044\u3066CGImageRef\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u3001\u305d\u3053\u304b\u3089`imageWithCGImage:`\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066UIImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n````\nmemcpy(data, dstData, dstSize);\nfree(dstData);\n\nCGImageRef blurredImageRef = CGBitmapContextCreateImage(bmContext);\nUIImage* blurred = [UIImage imageWithCGImage:blurredImageRef];\n\nCGImageRelease(blurredImageRef);\nCGContextRelease(bmContext);\n````\n\n\u4ee5\u4e0a\u304c\u3001\u5165\u529b\u753b\u50cf\u306eUIImage\u304b\u3089\u3001vImage\u306e`vImageConvolve_ARGB8888`\u95a2\u6570\u3092\u7528\u3044\u3066\u7573\u307f\u8fbc\u307f\u51e6\u7406\u3092\u884c\u3063\u305f\u51fa\u529b\u753b\u50cf\u3092UIImage\u3068\u3057\u3066\u53d6\u5f97\u3059\u308b\u307e\u3067\u306e\u624b\u9806\u3067\u3059\u3002\n\n![\u30d6\u30e9\u30fc\u30b5\u30f3\u30d7\u30eb](http://f.cl.ly/items/400a1U3z3v0q3e0E1B03/vImage_blur.png)\n\n##\u4ed6\u306e\u30d5\u30a3\u30eb\u30bf\u51e6\u7406\u3092\u884c\u3046\n\u540c\u3058`vImageConvolve_ARGB8888`\u95a2\u6570\u3092\u7528\u3044\u3066\u3001\u7b2c6\u5f15\u6570\"kernel\"\u306e\u914d\u5217\u3092\u3044\u308d\u3044\u308d\u3068\u5909\u3048\u308b\u3053\u3068\u3067\u3001\u69d8\u3005\u306a\u30d5\u30a3\u30eb\u30bf\u52b9\u679c\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u30ab\u30fc\u30cd\u30eb\u306e\u914d\u5217\u3068\u3001`vImageConvolve_ARGB8888`\u3092\u30b3\u30fc\u30eb\u3059\u308b\u90e8\u5206\u306e\u307f\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u307e\u3059\u3002\u30ab\u30fc\u30cd\u30eb\u306e\u914d\u5217\u306b\u5408\u308f\u305b\u3066`vImageConvolve_ARGB8888`\u306e\u7b2c7\u301c\u7b2c9\u5f15\u6570\u3092\u5909\u3048\u3066\u3044\u308b\u70b9\u306b\u3054\u6ce8\u76ee\u304f\u3060\u3055\u3044\u3002\n\n**\u30a8\u30f3\u30dc\u30b9**\n\n![\u30a8\u30f3\u30dc\u30b9\u30b5\u30f3\u30d7\u30eb](http://f.cl.ly/items/281o1H1g2w403D051u44/vImage_emboss.png)\n\n````\nstatic int16_t emboss_kernel[9] = {\n\t-2, 0, 0, \n\t0, 1, 0, \n\t0, 0, 2\n};\n````\n\n````\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        emboss_kernel,\n                        3,\n                        3,\n                        1,\n                        NULL,\n                        kvImageCopyInPlace);\n````\n\n**\u5148\u92ed\u5316**\n\n![\u5148\u92ed\u5316\u30b5\u30f3\u30d7\u30eb](http://f.cl.ly/items/1s191B3z0e2h3C3t171S/vImage_sharpen.png)\n\n````\nstatic int16_t sharpen_kernel[9] = {\n\t-1, -1, -1, \n\t-1, 9, -1, \n\t-1, -1, -1\n};\n````\n\n````\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        sharpen_kernel,\n                        3,\n                        3,\n                        1,\n                        NULL,\n                        kvImageCopyInPlace);\n\n````\n\n**\u30a8\u30c3\u30b8\u691c\u51fa**\n\n(\u5f8c\u307b\u3069\u753b\u50cf\u3092\u8cbc\u4ed8\u3051\u307e\u3059)\n\n````\nstatic int16_t edgedetect_kernel[9] = {\n -1, -1, -1, \n -1, 8, -1, \n -1, -1, -1\n };\n````\n\n````\nvImageConvolve_ARGB8888(&src,\n                        &dst,\n                        NULL,\n                        0,\n                        0,\n                        edgedetect_kernel,\n                        3,\n                        3,\n                        1,\n                        backgroundColorBlack,\n                        kvImageCopyInPlace);\n````\n\n\u203b\u51e6\u7406\u7d50\u679c\u3092\u8996\u8a8d\u3057\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u7b2c10\u5f15\u6570\u3067\u80cc\u666f\u8272\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n##\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nvImageCategory\u3068\u3044\u3046\u3001vImage\u306b\u3088\u308b\u753b\u50cf\u51e6\u7406\u3092\u884c\u3048\u308b\u30af\u30e9\u30b9\u3068\u3001\u305d\u306e\u30c7\u30e2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4e0b\u8a18\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u3066\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/shu223/vImageCategory\n\nUIImage \u306e\u30ab\u30c6\u30b4\u30ea\u3068\u3057\u3066\u4f5c\u3063\u3066\u3042\u3063\u3066API\u3082\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n````\n// Convolution Oprations\n- (UIImage *)gaussianBlur;\n- (UIImage *)edgeDetection;\n- (UIImage *)emboss;\n- (UIImage *)sharpen;\n- (UIImage *)unsharpen;\n\n// Geometric Operations\n- (UIImage *)rotateInRadians:(float)radians;\n\n// Morphological Operations\n- (UIImage *)dilate;\n- (UIImage *)erode;\n- (UIImage *)dilateWithIterations:(int)iterations;\n- (UIImage *)erodeWithIterations:(int)iterations;\n- (UIImage *)gradientWithIterations:(int)iterations;\n- (UIImage *)tophatWithIterations:(int)iterations;\n- (UIImage *)blackhatWithIterations:(int)iterations;\n\n// Histogram Operations\n- (UIImage *)equalization;\n````\n\n\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u3066\u3044\u306a\u3044\u3001**\u56de\u8ee2\u3084\u81a8\u5f35\u3001\u53ce\u7e2e**\u306e\u6a5f\u80fd\u3082\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092\u4f7f\u7528\u3059\u308b\u969b\u306e\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u3082\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n![\u51e6\u7406\u7d50\u679c\u30b5\u30f3\u30d7\u30eb](http://f.cl.ly/items/0K3c3f1024342m0X1t3o/vImage_demo_r1_c1.png)\n", "tags": ["Objective-C", "iOS", "iPhone", "Xcode", "\u753b\u50cf\u51e6\u7406"]}