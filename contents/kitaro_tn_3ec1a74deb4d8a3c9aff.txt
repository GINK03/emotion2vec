{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u30d3\u30c3\u30af\u30c7\u30fc\u30bf\u306b\u5411\u3051\u305f\u6d41\u884c? \u306a\u306e\u304bRDBMS\u3088\u308aKVS\u306b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u3066\u304a\u308a\u3001\n\u3055\u3063\u3068ruby\u3067(Rails\u3067)\u6271\u3044\u305f\u3044\u306a\u301c\u3063\u3066\u601d\u3063\u3066\u305f\u3093\u3060\u3051\u3069\u3001\nruby + DynomoDB\u306b\u95a2\u3059\u308b\u65e5\u672c\u8a9e\u306e\u30b5\u30a4\u30c8\u3063\u3066\u5c11\u306a\u3044\u306a\u3063\u3066\u601d\u3044\u3001\n\u5c11\u3057\u8abf\u3079\u3066\u307f\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u25a0\u672c\u5bb6 aws-sdk dynamoDB\u30af\u30e9\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/AWSRubySDK/latest/AWS/DynamoDB.html\n# encoding : utf-8\nrequire \"aws-sdk\"\ndynamo_db = AWS::DynamoDB.new(\n  :access_key_id  => \"AWS \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\",\n  :secret_access_key => \"AWS \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\",\n  :dynamo_db_endpoint => \"DynamoDB endpoint\",\n  :region => \"DynamoDB region\"\n)\n\n# create table \ntable = dynamo_db.tables.create(\n  'blog',1,2,  # table\u540d,read capacity,write capacity\n  :hash_key => {:id => :string},\n  :range_key => {:user_id => :string}\n)\n\n# table count\np table.count\n\n# Hash Key\nputs table.hash_key.name\nputs table.hash_key.type\n\n# Range Key\nputs table.range_key.name\nputs table.range_key.type\n\n# read capacity\nputs table.read_capacity_units\n# write capacity\nputs table.write_capacity_units\n\nwhile true\n  puts table.status\n  str = table.status.to_s\n  if str == \"active\"\n    break\n  end\n  sleep 3\nend\n\n# insert\ntable.items.create(\n  'id' => '000000001',\n  'user_id' => '000000001',\n  'user_name' => 'kuwata',\n  'blog_title' => 'apo',\n  'blog_body' => 'apoapoapoapo...apo?'\n)\n\n# table item count\nputs table.items.count\n\n# item \u5168\u4ef6\u306e\u5185\u5bb9\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u51fa\u529b\ntable.items.each do |item|\n  puts item.attributes.to_hash\nend\n\ntable.items.create(\n  'id' => '000000001',\n  'user_id' => '000000002',\n  'user_name' => 'hagakure',\n  'blog_title' => 'dabe',\n  'blog_body' => '\u6a21\u64ec\u5200\u306e\u5148\u5236\u653b\u6483\u3060\u3079!!!'\n)\n\n# query\ntable.items.query(:hash_value => \"000000001\").each do |item|\n  puts item.attributes.to_hash\nend\n\n# query count\nputs table.items.query(:hash_value => \"000000001\").count\n\n# table delete\ntable.delete\n\n\n\u6700\u8fd1\u30d3\u30c3\u30af\u30c7\u30fc\u30bf\u306b\u5411\u3051\u305f\u6d41\u884c? \u306a\u306e\u304bRDBMS\u3088\u308aKVS\u306b\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u591a\u304f\u306a\u3063\u3066\u304d\u3066\u304a\u308a\u3001\n\u3055\u3063\u3068ruby\u3067(Rails\u3067)\u6271\u3044\u305f\u3044\u306a\u301c\u3063\u3066\u601d\u3063\u3066\u305f\u3093\u3060\u3051\u3069\u3001\nruby + DynomoDB\u306b\u95a2\u3059\u308b\u65e5\u672c\u8a9e\u306e\u30b5\u30a4\u30c8\u3063\u3066\u5c11\u306a\u3044\u306a\u3063\u3066\u601d\u3044\u3001\n\u5c11\u3057\u8abf\u3079\u3066\u307f\u305f\u306e\u3067\u3001\u7c21\u5358\u306b\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u25a0\u672c\u5bb6 aws-sdk dynamoDB\u30af\u30e9\u30b9\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nhttp://docs.aws.amazon.com/AWSRubySDK/latest/AWS/DynamoDB.html\n\n```rb\n# encoding : utf-8\nrequire \"aws-sdk\"\ndynamo_db = AWS::DynamoDB.new(\n  :access_key_id  => \"AWS \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\",\n  :secret_access_key => \"AWS \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\",\n  :dynamo_db_endpoint => \"DynamoDB endpoint\",\n  :region => \"DynamoDB region\"\n)\n\n# create table \ntable = dynamo_db.tables.create(\n  'blog',1,2,  # table\u540d,read capacity,write capacity\n  :hash_key => {:id => :string},\n  :range_key => {:user_id => :string}\n)\n\n# table count\np table.count\n\n# Hash Key\nputs table.hash_key.name\nputs table.hash_key.type\n\n# Range Key\nputs table.range_key.name\nputs table.range_key.type\n\n# read capacity\nputs table.read_capacity_units\n# write capacity\nputs table.write_capacity_units\n\nwhile true\n  puts table.status\n  str = table.status.to_s\n  if str == \"active\"\n    break\n  end\n  sleep 3\nend\n\n# insert\ntable.items.create(\n  'id' => '000000001',\n  'user_id' => '000000001',\n  'user_name' => 'kuwata',\n  'blog_title' => 'apo',\n  'blog_body' => 'apoapoapoapo...apo?'\n)\n\n# table item count\nputs table.items.count\n\n# item \u5168\u4ef6\u306e\u5185\u5bb9\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u51fa\u529b\ntable.items.each do |item|\n  puts item.attributes.to_hash\nend\n\ntable.items.create(\n  'id' => '000000001',\n  'user_id' => '000000002',\n  'user_name' => 'hagakure',\n  'blog_title' => 'dabe',\n  'blog_body' => '\u6a21\u64ec\u5200\u306e\u5148\u5236\u653b\u6483\u3060\u3079!!!'\n)\n\n# query\ntable.items.query(:hash_value => \"000000001\").each do |item|\n  puts item.attributes.to_hash\nend\n\n# query count\nputs table.items.query(:hash_value => \"000000001\").count\n\n# table delete\ntable.delete\n\n```\n\n", "tags": ["Ruby", "DynamoDB"]}