{"context": "\u524d\u63d0\u6761\u4ef6\u3068\u3057\u3066YoutubeDataApi\u306e\u30ad\u30fc\u304c\u5fc5\u8981\u3002\u30b0\u30b0\u3063\u3066\u5404\u81ea\u53d6\u308b\u3068\u3088\u3044\u3002python\u306eyoutube-dl\u3082\u5fc5\u8981\n\u4f7f\u3044\u65b9\n\nyoutube-dl.ps1\n& youtube-dl.ps1 -playlistId \"PLwDaeL3aOb-x8wxSdbJvG0zOPGYLGz0tD\"  -downloadLog list.txt -filePrefix \"red-\"\n\n\n\u3053\u3093\u306a\u611f\u3058\u3002playListId\u306f\u5fc5\u9808\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3002\u305d\u308c\u4ee5\u5916\u306f\u4efb\u610f\u3002\u305f\u3060\u3057\u3001downloadLog\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u4ed8\u3051\u306a\u3044\u3068\u6bce\u56de\u5168\u3066\u306e\u52d5\u753b\u3092DL\u3059\u308b\u4e8b\u306b\u306a\u308b\u304b\u3089\u6ce8\u610f\u3002\n-filePrefix\u306f\u305d\u306e\u901a\u308a\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u982d\u306b\u3064\u3051\u308b\u3002\u305d\u306e\u8fba\u306f\u5404\u81ea\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u306d\n\u52d5\u4f5c\u3068\u3057\u3066\u3001YoutubeAPI\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u306e\u30d7\u30ec\u30a4\u30ea\u30b9\u30c8\u306e\u52d5\u753b\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u2192downloadLog\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30d5\u30a1\u30a4\u30ebID\u304c\u3042\u3063\u305f\u3089\u30b9\u30ad\u30c3\u30d7\u2192\u30d5\u30a1\u30a4\u30ebID\u304c\u7121\u3044\u6642\u306f\u305d\u308c\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3002\u3063\u3066\u611f\u3058\u3002\u3053\u308c\u3092cron\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3068\u3066\u3082\u7f8e\u5473\u3057\u3044\n# utf16\u3067\u3059\nParam(\n    [Parameter(mandatory)][string]$playlistId = \"\" ,\n    [string]$downloadLog = \"\" ,\n    [string]$filePrefix=\"\" \n)\n$script:apiKey=\"\";#\u5404\u81ea\u3088\u308d\u3057\u304f\n\nfunction Main{\n    $vids = getDownloadVideoIdList\n    $vids | foreach{\n    #   \"line=[$_] \"+$_.getType()\n    }\n    getAllSnippet $playlistId  | foreach {\n        $videoId=$_.resourceId | foreach videoId\n        if ( $videoId -eq $null ){\n            return\n        }\n        if ( $vids -contains $videoId){\n            return\n        }\n        $argument = \"-o `\"${filePrefix}%(title)s[%(display_id)s].%(ext)s`\" --no-check-certificate --no-mtime `\"${videoId}`\"\"\n        $r=Start-Process -FilePath \"youtube-dl\" -ArgumentList $argument -Wait -NoNewWindow  -PassThru\n        if ( $r.exitCode -eq 0 -and $downloadLog -ne \"\" ){\n            $videoId >> $downloadLog\n        }\n        if($r.exitCode -ne 0){\n        }\n    }\n}\nfunction getAllSnippet($psID){\n    while($true){\n        if( $nextToken -eq \"\" ){\n            $url=\"https://content.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${playlistId}&key=${apiKey}\"\n        }else{\n            $url=\"https://content.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${playlistId}&pageToken=${nextToken}&key=${apiKey}\"\n        }\n        $url\n        $responce=Invoke-RestMethod -Method Get -Uri $url\n        $nextToken = $responce.nextPageToken\n        $videoIds=$responce.items | foreach snippet\n        # | foreach resourceId | foreach videoId\n        $videoIds\n        if ( $nextToken -eq $null ){\n            return\n        }\n    }\n}\nfunction getDownloadVideoIdList{\n    $videoIds = @()\n    if( $downloadLog -ne \"\" -and ( Test-Path -path $downloadLog) ){\n        Get-Content $downloadLog -Encoding UTF8 | ForEach-Object {\n            $videoIds+=$_\n        }\n    }\n    $videoIds\n}\nMain\n\n\n\u524d\u63d0\u6761\u4ef6\u3068\u3057\u3066YoutubeDataApi\u306e\u30ad\u30fc\u304c\u5fc5\u8981\u3002\u30b0\u30b0\u3063\u3066\u5404\u81ea\u53d6\u308b\u3068\u3088\u3044\u3002[python\u306eyoutube-dl](https://rg3.github.io/youtube-dl/)\u3082\u5fc5\u8981\n\n\u4f7f\u3044\u65b9\n\n```ps1:youtube-dl.ps1\n& youtube-dl.ps1 -playlistId \"PLwDaeL3aOb-x8wxSdbJvG0zOPGYLGz0tD\"  -downloadLog list.txt -filePrefix \"red-\"\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3002playListId\u306f\u5fc5\u9808\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3002\u305d\u308c\u4ee5\u5916\u306f\u4efb\u610f\u3002\u305f\u3060\u3057\u3001downloadLog\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u4ed8\u3051\u306a\u3044\u3068\u6bce\u56de\u5168\u3066\u306e\u52d5\u753b\u3092DL\u3059\u308b\u4e8b\u306b\u306a\u308b\u304b\u3089\u6ce8\u610f\u3002\n-filePrefix\u306f\u305d\u306e\u901a\u308a\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u982d\u306b\u3064\u3051\u308b\u3002\u305d\u306e\u8fba\u306f\u5404\u81ea\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u306d\n\n\u52d5\u4f5c\u3068\u3057\u3066\u3001YoutubeAPI\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u306e\u30d7\u30ec\u30a4\u30ea\u30b9\u30c8\u306e\u52d5\u753b\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u2192downloadLog\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30d5\u30a1\u30a4\u30ebID\u304c\u3042\u3063\u305f\u3089\u30b9\u30ad\u30c3\u30d7\u2192\u30d5\u30a1\u30a4\u30ebID\u304c\u7121\u3044\u6642\u306f\u305d\u308c\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3002\u3063\u3066\u611f\u3058\u3002\u3053\u308c\u3092cron\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u3068\u3066\u3082\u7f8e\u5473\u3057\u3044\n\n```ps1\n# utf16\u3067\u3059\nParam(\n\t[Parameter(mandatory)][string]$playlistId = \"\" ,\n\t[string]$downloadLog = \"\" ,\n\t[string]$filePrefix=\"\" \n)\n$script:apiKey=\"\";#\u5404\u81ea\u3088\u308d\u3057\u304f\n\nfunction Main{\n\t$vids = getDownloadVideoIdList\n\t$vids | foreach{\n\t#\t\"line=[$_] \"+$_.getType()\n\t}\n\tgetAllSnippet $playlistId  | foreach {\n\t\t$videoId=$_.resourceId | foreach videoId\n\t\tif ( $videoId -eq $null ){\n\t\t\treturn\n\t\t}\n\t\tif ( $vids -contains $videoId){\n\t\t\treturn\n\t\t}\n\t\t$argument = \"-o `\"${filePrefix}%(title)s[%(display_id)s].%(ext)s`\" --no-check-certificate --no-mtime `\"${videoId}`\"\"\n\t\t$r=Start-Process -FilePath \"youtube-dl\" -ArgumentList $argument -Wait -NoNewWindow  -PassThru\n\t\tif ( $r.exitCode -eq 0 -and $downloadLog -ne \"\" ){\n\t\t\t$videoId >> $downloadLog\n\t\t}\n\t\tif($r.exitCode -ne 0){\n\t\t}\n\t}\n}\nfunction getAllSnippet($psID){\n\twhile($true){\n\t\tif( $nextToken -eq \"\" ){\n\t\t\t$url=\"https://content.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${playlistId}&key=${apiKey}\"\n\t\t}else{\n\t\t\t$url=\"https://content.googleapis.com/youtube/v3/playlistItems?part=snippet&maxResults=50&playlistId=${playlistId}&pageToken=${nextToken}&key=${apiKey}\"\n\t\t}\n\t\t$url\n\t\t$responce=Invoke-RestMethod -Method Get -Uri $url\n\t\t$nextToken = $responce.nextPageToken\n\t\t$videoIds=$responce.items | foreach snippet\n\t\t# | foreach resourceId | foreach videoId\n\t\t$videoIds\n\t\tif ( $nextToken -eq $null ){\n\t\t\treturn\n\t\t}\n\t}\n}\nfunction getDownloadVideoIdList{\n\t$videoIds = @()\n\tif( $downloadLog -ne \"\" -and ( Test-Path -path $downloadLog) ){\n\t\tGet-Content $downloadLog -Encoding UTF8 | ForEach-Object {\n\t\t\t$videoIds+=$_\n\t\t}\n\t}\n\t$videoIds\n}\nMain\n\n```\n", "tags": ["PowerShell", "YouTube", "YouTubeAPI", "Python"]}