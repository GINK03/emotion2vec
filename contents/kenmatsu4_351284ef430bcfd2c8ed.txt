{"context": " More than 1 year has passed since last update.\n\n1.\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3068\u306f\n\u7d71\u8a08\u5b66\u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u3068\u3001\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3068\u3044\u3046\u4f55\u3084\u3089\u304a\u5805\u3044\u540d\u524d\u306e\u5b9a\u7406\u304c\u51fa\u3066\u304d\u307e\u3059\u3002Wikipedia\u5148\u751f\u306b\u3088\u308b\u3068\u3001\n\n\u5927\u6570\u306e\u6cd5\u5247\u306b\u3088\u308b\u3068\u3001\u3042\u308b\u6bcd\u96c6\u56e3\u304b\u3089\u7121\u4f5c\u70ba\u62bd\u51fa\u3055\u308c\u305f\u6a19\u672c\u5e73\u5747\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u771f\u306e\u5e73\u5747\u306b\u8fd1\u3065\u304f\u3002\u3053\u308c\u306b\u5bfe\u3057\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u306f\u6a19\u672c\u5e73\u5747\u3068\u771f\u306e\u5e73\u5747\u3068\u306e\u8aa4\u5dee\u3092\u8ad6\u305a\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u5834\u5408\u3001\u6bcd\u96c6\u56e3\u306e\u5206\u5e03\u304c\u3069\u3093\u306a\u5206\u5e03\u3067\u3042\u3063\u3066\u3082\u3001\u305d\u306e\u8aa4\u5dee\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3057\u305f\u3068\u304d\u8fd1\u4f3c\u7684\u306b\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u3002\nhttp://ja.wikipedia.org/wiki/\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\n\n\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u306d\uff3e\uff3e\uff1b\n\u5143\u306e\u5206\u5e03\u304c\u3001\u3069\u3093\u306a\u5f62\u3067\u3042\u308c\u3001\u305d\u3053\u304b\u3089\u53d6\u308a\u51fa\u3057\u305f\u6a19\u672c\u306e\u6a19\u672c\u5e73\u5747\u306f\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3082\u306e\u306b\u306a\u308b\u3001\u3068\u8a00\u3046\u3053\u3068\u3067\u3059\u306d\u3002\u6a19\u672c\u5206\u6563\u3082\u540c\u3058\u304f\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3082\u306e\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\uff08\u6b63\u78ba\u306b\u8a00\u3046\u3068\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u306b\u5f93\u3044N\u304c\u591a\u3044\u3068\u6b63\u898f\u5206\u5e03\u3067\u8fd1\u4f3c\u3067\u304d\u308b\uff09\n\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u3001\u6570\u5f0f\u3067\u8a3c\u660e\u3057\u305f(\u7a4d\u7387\u6bcd\u95a2\u6570\u304c\u4e00\u81f4\u3059\u308b\u3068\u304b\u306a\u3093\u3068\u304b)\u3068\u3057\u3066\u3082\u76f4\u611f\u7684\u306b\u306f\u3088\u304f\u7406\u89e3\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u7406\u89e3\u3057\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\u3067\u3059\u3002\n\n2. \u30b0\u30e9\u30d5\u63cf\u753b\u7528\u306e\u6e96\u5099\nPython\u3092\u3064\u304b\u3063\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u305d\u306e\u305f\u3081\u306e\u6e96\u5099\u51e6\u7406\u304c\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\u5404\u7a2e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u3001\u30b0\u30e9\u30d5\u63cf\u753b\u306e\u95a2\u6570\u3092\u6e96\u5099\u3057\u3066\u3044\u307e\u3059\u3002\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport numpy.random as rd\nimport matplotlib.mlab as mlab\nimport scipy.stats as st\n\n# \u30b5\u30f3\u30d7\u30eb\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\nn = 10000\nsample_size = 10000\n\n# \u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306e\u5e73\u5747\u3001\u5206\u6563\u3092\u7b97\u51fa\u3059\u308b\u95a2\u6570\ndef sample_to_mean_var(sample):\n    mean = np.mean(sample)\n    var  = np.var(sample)\n    return [mean, var]\n\n# \u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u63cf\u753b\u3059\u308b\u95a2\u6570\ndef plot_mean_var(stats, dist_name=\"\"):\n    mu = stats[:,0]\n    var = stats[:,1]\n    bins = 40\n\n    # \u6a19\u672c\u5e73\u5747\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n    plt.figure(figsize=(7,5))\n    plt.hist(mu, bins=bins, normed=True, color=\"plum\")\n    plt.title(\"mu from %s distribution\"%(dist_name))\n    plt.show()\n\n    # \u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n    plt.figure(figsize=(7,5))\n    plt.hist(var, bins=bins, color=\"lightblue\", normed=True)\n    plt.title(\"var from %s distribution\"%(dist_name))\n    plt.show()\n\ndef plot_dist(data, bins, title =\"\"):\n    plt.figure(figsize=(7,5))\n    plt.title(title)\n    plt.hist(data, bins, color=\"lightgreen\", normed=True)\n    plt.show()\n\n\n3.\u63cf\u753b\u3059\u308b\n\n3-1. \u6307\u6570\u5206\u5e03\n\u307e\u305a\u306f\u6307\u6570\u5206\u5e03\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u6307\u6570\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u03bb\u03bb\\lambda\u30920.1\u300110,000\u500b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u751f\u6210\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u3082\u306e\u304c\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\u53f3\u306b\u88fe\u304c\u9577\u3044\u5b8c\u5168\u306b\u5de6\u53f3\u975e\u5bfe\u79f0\u306a\u5206\u5e03\u3067\u3059\u3002\n# \u6307\u6570\u5206\u5e03\u306e\u30b0\u30e9\u30d5\u63cf\u753b\nlam = 0.1  \nx = rd.exponential(1./lam, size=sample_size)\nplot_dist(x, 100, \"exponential dist\")\n\n\n\u3053\u306e\u300110,000\u500b\u306e\u30b5\u30f3\u30d7\u30eb\u30921\u30bb\u30c3\u30c8\u3068\u3057\u3066\u3001\u3053\u3053\u304b\u3089\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u3055\u3089\u306b10,000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u305d\u306e\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n# \u6307\u6570\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\u3057\u3066\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u63cf\u753b\nlam = 0.1\nstats = np.array([sample_to_mean_var(rd.exponential(1./lam, size=sample_size)) for i in range(n)])\nplot_mean_var(stats, dist_name=\"exponential\")\n\n\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u3001\u5143\u306e\u5206\u5e03\u306f\u304b\u306a\u308a\u6b6a\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306f\u7dba\u9e97\u306a\u5de6\u53f3\u5bfe\u79f0\u306e\u91e3\u9418\u578b\u306b\u306a\u3063\u3066\u3044\u305d\u3046\u3067\u3059\u306d\u3002\u3053\u308c\u304c\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3063\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u304c\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u306a\u306e\u3067\u3059\u3002\n\u4ee5\u4e0b\u3001\u4ed6\u306e\u6b6a\u3093\u3060\u30b0\u30e9\u30d5\u3067\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n3-1. \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\n\u6b21\u306b\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u3067\u3059\u3002\u3053\u308c\u3082\u7d50\u69cb\u6b6a\u3093\u3067\u3044\u307e\u3059\u3002\n# \u81ea\u7531\u5ea65\u306e\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\ndf = 5\nx = rd.chisquare(df, sample_size)\nplot_dist(x, 50, \"chi square dist\")\n\n\n# \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u306e\u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\ndf = 5   # \u81ea\u7531\u5ea6\n\n# \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\nchi_stats = np.array([sample_to_mean_var(rd.chisquare(df, sample_size)) for i in range(n)])\nplot_mean_var(chi_stats, dist_name=\"chi square\")\n\n\u3053\u308c\u3082\u3084\u306f\u308a\u3001\u5de6\u53f3\u5bfe\u79f0\u306a\u91e3\u9418\u578b\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u304c\u66f8\u3051\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n\n3-1. \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\n\u5c71\u304c\uff12\u3064\u3042\u308b\u3088\u3046\u306a\u5909\u306a\u5f62\u306e\u5206\u5e03\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\ndef generate_bimodal_norm():\n    x = np.random.normal(0, 4, sample_size)\n    y = np.random.normal(25, 8, sample_size)\n    return np.append(x,y)\n\nz = generate_bimodal_norm()\nplot_dist(z, 70, \"bi-modal normal dist\")\n\n\n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\nbinorm_stats = np.array([sample_to_mean_var(generate_bimodal_norm()) for i in range(n)])\nplot_mean_var(binorm_stats, dist_name=\"bi-modal normal\")\n\n\u3053\u3093\u306a\u5206\u5e03\u3067\u3055\u3048\u3001\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306f\u6b63\u898f\u5206\u5e03\u3059\u308b\u306e\u3067\u3059\u3002\u3059\u3054\u3044\u3067\u3059\u306d\u3001\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406w\n\n\n\n4.\u304a\u308f\u308a\u306b\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6570\u5f0f\u3084\u8a3c\u660e\u3092\u898b\u308b\u3068\u96e3\u3057\u305d\u3046\u306a\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u3067\u898b\u3066\u76f4\u611f\u7684\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u3066\u307f\u307e\u3057\u305f\u3002\u7d71\u8a08\u5b66\u3067\u6b63\u898f\u5206\u5e03\u304c\u91cd\u8981\u3068\u8a00\u308f\u308c\u308b\u6240\u4ee5\u306f\u3053\u3053\u306b\u3042\u308b\u3088\u3046\u3067\u3059\u306d  \n#1.\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3068\u306f#\n\n\u7d71\u8a08\u5b66\u3092\u52c9\u5f37\u3057\u3066\u3044\u308b\u3068\u3001\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3068\u3044\u3046\u4f55\u3084\u3089\u304a\u5805\u3044\u540d\u524d\u306e\u5b9a\u7406\u304c\u51fa\u3066\u304d\u307e\u3059\u3002Wikipedia\u5148\u751f\u306b\u3088\u308b\u3068\u3001\n\n>\u5927\u6570\u306e\u6cd5\u5247\u306b\u3088\u308b\u3068\u3001\u3042\u308b\u6bcd\u96c6\u56e3\u304b\u3089\u7121\u4f5c\u70ba\u62bd\u51fa\u3055\u308c\u305f\u6a19\u672c\u5e73\u5747\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3059\u308b\u3068\u771f\u306e\u5e73\u5747\u306b\u8fd1\u3065\u304f\u3002\u3053\u308c\u306b\u5bfe\u3057\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u306f\u6a19\u672c\u5e73\u5747\u3068\u771f\u306e\u5e73\u5747\u3068\u306e\u8aa4\u5dee\u3092\u8ad6\u305a\u308b\u3082\u306e\u3067\u3042\u308b\u3002\u591a\u304f\u306e\u5834\u5408\u3001\u6bcd\u96c6\u56e3\u306e\u5206\u5e03\u304c\u3069\u3093\u306a\u5206\u5e03\u3067\u3042\u3063\u3066\u3082\u3001\u305d\u306e\u8aa4\u5dee\u306f\u30b5\u30f3\u30d7\u30eb\u306e\u30b5\u30a4\u30ba\u3092\u5927\u304d\u304f\u3057\u305f\u3068\u304d\u8fd1\u4f3c\u7684\u306b\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3046\u3002\nhttp://ja.wikipedia.org/wiki/\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\n\n\u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3067\u3059\u306d\uff3e\uff3e\uff1b\n\u5143\u306e\u5206\u5e03\u304c\u3001\u3069\u3093\u306a\u5f62\u3067\u3042\u308c\u3001\u305d\u3053\u304b\u3089\u53d6\u308a\u51fa\u3057\u305f\u6a19\u672c\u306e\u6a19\u672c\u5e73\u5747\u306f\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3082\u306e\u306b\u306a\u308b\u3001\u3068\u8a00\u3046\u3053\u3068\u3067\u3059\u306d\u3002\u6a19\u672c\u5206\u6563\u3082\u540c\u3058\u304f\u6b63\u898f\u5206\u5e03\u306b\u8fd1\u3044\u3082\u306e\u306b\u306a\u308b\u305d\u3046\u3067\u3059\u3002\uff08\u6b63\u78ba\u306b\u8a00\u3046\u3068\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u306b\u5f93\u3044N\u304c\u591a\u3044\u3068\u6b63\u898f\u5206\u5e03\u3067\u8fd1\u4f3c\u3067\u304d\u308b\uff09\n\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u3001\u6570\u5f0f\u3067\u8a3c\u660e\u3057\u305f(\u7a4d\u7387\u6bcd\u95a2\u6570\u304c\u4e00\u81f4\u3059\u308b\u3068\u304b\u306a\u3093\u3068\u304b)\u3068\u3057\u3066\u3082\u76f4\u611f\u7684\u306b\u306f\u3088\u304f\u7406\u89e3\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u306e\u3067\u3001\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u7406\u89e3\u3057\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\u3067\u3059\u3002\n\n#2. \u30b0\u30e9\u30d5\u63cf\u753b\u7528\u306e\u6e96\u5099#\n\nPython\u3092\u3064\u304b\u3063\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u304c\u3001\u305d\u306e\u305f\u3081\u306e\u6e96\u5099\u51e6\u7406\u304c\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\u5404\u7a2e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u3068\u3001\u30b0\u30e9\u30d5\u63cf\u753b\u306e\u95a2\u6570\u3092\u6e96\u5099\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py\n%matplotlib inline\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport numpy.random as rd\nimport matplotlib.mlab as mlab\nimport scipy.stats as st\n\n# \u30b5\u30f3\u30d7\u30eb\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\nn = 10000\nsample_size = 10000\n\n# \u30b5\u30f3\u30d7\u30eb\u3054\u3068\u306e\u5e73\u5747\u3001\u5206\u6563\u3092\u7b97\u51fa\u3059\u308b\u95a2\u6570\ndef sample_to_mean_var(sample):\n    mean = np.mean(sample)\n    var  = np.var(sample)\n    return [mean, var]\n    \n# \u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u63cf\u753b\u3059\u308b\u95a2\u6570\ndef plot_mean_var(stats, dist_name=\"\"):\n    mu = stats[:,0]\n    var = stats[:,1]\n    bins = 40\n    \n    # \u6a19\u672c\u5e73\u5747\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n    plt.figure(figsize=(7,5))\n    plt.hist(mu, bins=bins, normed=True, color=\"plum\")\n    plt.title(\"mu from %s distribution\"%(dist_name))\n    plt.show()\n    \n    # \u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n    plt.figure(figsize=(7,5))\n    plt.hist(var, bins=bins, color=\"lightblue\", normed=True)\n    plt.title(\"var from %s distribution\"%(dist_name))\n    plt.show()\n    \ndef plot_dist(data, bins, title =\"\"):\n    plt.figure(figsize=(7,5))\n    plt.title(title)\n    plt.hist(data, bins, color=\"lightgreen\", normed=True)\n    plt.show()\n```\n#3.\u63cf\u753b\u3059\u308b#\n\n##3-1. \u6307\u6570\u5206\u5e03##\n\n\u307e\u305a\u306f[\u6307\u6570\u5206\u5e03](http://qiita.com/kenmatsu4/items/c1a64cf69bc8c9e07aa2#geometricp-sizenone---\u5e7e\u4f55\u5206\u5e03)\u3092\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\u6307\u6570\u5206\u5e03\u306e\u30d1\u30e9\u30e1\u30fc\u30bf$\\lambda$\u30920.1\u300110,000\u500b\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u751f\u6210\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u3044\u305f\u3082\u306e\u304c\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\u53f3\u306b\u88fe\u304c\u9577\u3044\u5b8c\u5168\u306b\u5de6\u53f3\u975e\u5bfe\u79f0\u306a\u5206\u5e03\u3067\u3059\u3002\n\n```py\n# \u6307\u6570\u5206\u5e03\u306e\u30b0\u30e9\u30d5\u63cf\u753b\nlam = 0.1  \nx = rd.exponential(1./lam, size=sample_size)\nplot_dist(x, 100, \"exponential dist\")\n```\n\n![Unknown-7-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/bcf9247c-32b9-e5c6-0d35-05e4a99cf82a.png)\n\n\n\u3053\u306e\u300110,000\u500b\u306e\u30b5\u30f3\u30d7\u30eb\u30921\u30bb\u30c3\u30c8\u3068\u3057\u3066\u3001\u3053\u3053\u304b\u3089\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\u3053\u308c\u3092\u3055\u3089\u306b10,000\u56de\u7e70\u308a\u8fd4\u3057\u3066\u305d\u306e\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py \n# \u6307\u6570\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\u3057\u3066\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u63cf\u753b\nlam = 0.1\nstats = np.array([sample_to_mean_var(rd.exponential(1./lam, size=sample_size)) for i in range(n)])\nplot_mean_var(stats, dist_name=\"exponential\")\n```\n\n![exp_mean-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/7680255e-432e-aa79-30c5-8db18c7ff511.png)\n\n![exp_var.png](https://qiita-image-store.s3.amazonaws.com/0/50670/e22a6543-54fb-4142-f98e-73024d00ddf8.png)\n\n\u3069\u3046\u3067\u3057\u3087\u3046\u3001\u5143\u306e\u5206\u5e03\u306f\u304b\u306a\u308a\u6b6a\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u3001\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306f\u7dba\u9e97\u306a\u5de6\u53f3\u5bfe\u79f0\u306e\u91e3\u9418\u578b\u306b\u306a\u3063\u3066\u3044\u305d\u3046\u3067\u3059\u306d\u3002\u3053\u308c\u304c\u6b63\u898f\u5206\u5e03\u306b\u5f93\u3063\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u304c\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u306a\u306e\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u3001\u4ed6\u306e\u6b6a\u3093\u3060\u30b0\u30e9\u30d5\u3067\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n##3-1. \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03##\n\n\u6b21\u306b[\u30ab\u30a4](http://qiita.com/kenmatsu4/items/c1a64cf69bc8c9e07aa2#chisquaredf-sizenone---\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03)\u4e8c\u4e57\u5206\u5e03\u3067\u3059\u3002\u3053\u308c\u3082\u7d50\u69cb\u6b6a\u3093\u3067\u3044\u307e\u3059\u3002\n\n```py \n# \u81ea\u7531\u5ea65\u306e\u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\ndf = 5\nx = rd.chisquare(df, sample_size)\nplot_dist(x, 50, \"chi square dist\")\n```\n\n![chi2-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/50d746b4-8b89-b199-9047-70910576c877.png)\n\n\n```py \n# \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u306e\u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\ndf = 5   # \u81ea\u7531\u5ea6\n\n# \u30ab\u30a4\u4e8c\u4e57\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\nchi_stats = np.array([sample_to_mean_var(rd.chisquare(df, sample_size)) for i in range(n)])\nplot_mean_var(chi_stats, dist_name=\"chi square\")\n```\n\n\u3053\u308c\u3082\u3084\u306f\u308a\u3001\u5de6\u53f3\u5bfe\u79f0\u306a\u91e3\u9418\u578b\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u304c\u66f8\u3051\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n![chi2_mean-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/498132ba-04d8-7b7f-35c5-0eb85b8fcb13.png)\n![chi2_var-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/93eec8a2-4111-4a41-9081-e96d6e143f5f.png)\n\n\n##3-1. \u53cc\u5cf0\u6b63\u898f\u5206\u5e03##\n\n\u5c71\u304c\uff12\u3064\u3042\u308b\u3088\u3046\u306a\u5909\u306a\u5f62\u306e\u5206\u5e03\u3082\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py\n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\ndef generate_bimodal_norm():\n    x = np.random.normal(0, 4, sample_size)\n    y = np.random.normal(25, 8, sample_size)\n    return np.append(x,y)\n\nz = generate_bimodal_norm()\nplot_dist(z, 70, \"bi-modal normal dist\")\n```\n\n![binorm-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/fe227e9b-91a2-d617-db8d-74127f089f70.png)\n\n\n\n```py \n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\u306e\u5e73\u5747\u3001\u5206\u6563\u306e\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\n\n# \u53cc\u5cf0\u6b63\u898f\u5206\u5e03\u3092\u305f\u304f\u3055\u3093\u751f\u6210\nbinorm_stats = np.array([sample_to_mean_var(generate_bimodal_norm()) for i in range(n)])\nplot_mean_var(binorm_stats, dist_name=\"bi-modal normal\")\n```\n\n\u3053\u3093\u306a\u5206\u5e03\u3067\u3055\u3048\u3001\u6a19\u672c\u5e73\u5747\u3001\u6a19\u672c\u5206\u6563\u306f\u6b63\u898f\u5206\u5e03\u3059\u308b\u306e\u3067\u3059\u3002\u3059\u3054\u3044\u3067\u3059\u306d\u3001\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406w\n\n![binorm_mean-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/f7dcdbc8-cf28-747b-0a49-46077cd5c221.png)\n![binorm_var-compressor.png](https://qiita-image-store.s3.amazonaws.com/0/50670/077caceb-f5ab-0346-c979-c77310ab0ec0.png)\n\n\n#4.\u304a\u308f\u308a\u306b#\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u6570\u5f0f\u3084\u8a3c\u660e\u3092\u898b\u308b\u3068\u96e3\u3057\u305d\u3046\u306a\u4e2d\u5fc3\u6975\u9650\u5b9a\u7406\u3067\u3059\u304c\u3001\u30b0\u30e9\u30d5\u3067\u898b\u3066\u76f4\u611f\u7684\u306b\u7406\u89e3\u3059\u308b\u3053\u3068\u3092\u8a66\u307f\u3066\u307f\u307e\u3057\u305f\u3002\u7d71\u8a08\u5b66\u3067\u6b63\u898f\u5206\u5e03\u304c\u91cd\u8981\u3068\u8a00\u308f\u308c\u308b\u6240\u4ee5\u306f\u3053\u3053\u306b\u3042\u308b\u3088\u3046\u3067\u3059\u306d :smile: \n", "tags": ["statistics", "Python2.7", "\u7d71\u8a08\u5b66"]}