{"context": "Unity\u3092\u4f7f\u3046\u3068\u3001\u30ab\u30e1\u30e9\u5de6\u53f3\u306b\u4e26\u3079\u308b\u3060\u3051\u3067\u7c21\u5358\u306bVR\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u6628\u4eca\u306e\u30b9\u30de\u30db\u306f\u5927\u304d\u3044\u306e\u3067\u3001\u666e\u901a\u306b\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u5de6\u53f3\u306b\u4e26\u3079\u305f\u753b\u50cf\u306e\u4e2d\u5fc3\u304c\u76ee\u306e\u8ddd\u96e2\u3088\u308a\u5927\u304d\u304f\u306a\u308a\u3001\u7acb\u4f53\u8996\u304c\u3057\u306b\u304f\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u305d\u3093\u306a\u6642\u306f\u30ab\u30e1\u30e9\u306e\u6d88\u5931\u70b9\u3092\u79fb\u52d5\u3055\u305b\u308b\u3053\u3068\u3067\u9055\u548c\u611f\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\nCamera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\nCameraUtils.cs\n//http://docs.unity3d.com/ScriptReference/Camera-projectionMatrix.html\n\nusing UnityEngine;\nusing System.Collections;\n\n[ExecuteInEditMode]\n[RequireComponent(typeof (Camera))]\npublic class CameraUtils : MonoBehaviour {\n    [SerializeField, Range(-0.05f, 0.05f)]\n    private float offsetX;\n    void LateUpdate() {\n        Camera cam = gameObject.GetComponent<Camera>();\n        SetVanishingPoint (Vector2.right * offsetX, cam);\n    }\n\n    static public Matrix4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float near, float far){\n        float x =  (2f * near)      / (right - left);\n        float y =  (2f * near)      / (top - bottom);\n        float a =  (right + left)   / (right - left);\n        float b =  (top + bottom)   / (top - bottom);\n        float c = -(far + near)     / (far - near);\n        float d = -(2f * far * near)/ (far - near);\n        float e = -1f;\n        Matrix4x4 m = new Matrix4x4();\n        m[0,0] =  x;  m[0,1] = 0f;  m[0,2] = a;   m[0,3] = 0f;\n        m[1,0] = 0f;  m[1,1] =  y;  m[1,2] = b;   m[1,3] = 0f;\n        m[2,0] = 0f;  m[2,1] = 0f;  m[2,2] = c;   m[2,3] =  d;\n        m[3,0] = 0f;  m[3,1] = 0f;  m[3,2] = e;   m[3,3] = 0f;\n        return m;\n    }\n\n    static public void SetVanishingPoint(Vector2 perspectiveOffset,Camera cam){\n        cam.ResetProjectionMatrix();\n        Matrix4x4 m = cam.projectionMatrix;\n        float w = 2f*cam.nearClipPlane/m.m00;\n        float h = 2f*cam.nearClipPlane/m.m11;\n        float left = -w/2f - perspectiveOffset.x;\n        float right = left+w;\n        float bottom = -h/2f - perspectiveOffset.y;\n        float  top = bottom+h;\n        cam.projectionMatrix = PerspectiveOffCenter(left, right, bottom, top, cam.nearClipPlane, cam.farClipPlane);\n    }\n}\n\n\n\n\nVR\u4ee5\u5916\u3067\u3082\u3001\u300c\u753b\u9762\u5168\u4f53\u306b\uff13D\u7a7a\u9593\u3092\u8868\u793a\u3057\u3066\u304a\u304d\u305f\u3044\u3051\u3069\u3001\u53f3\u534a\u5206\u306b\u306fUI\u304c\u305f\u304f\u3055\u3093\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u6d88\u5931\u70b9\u3092\u5de6\u306e\u307b\u3046\u306b\u5bc4\u305b\u305f\u3044\u300d\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\nUnity\u3092\u4f7f\u3046\u3068\u3001\u30ab\u30e1\u30e9\u5de6\u53f3\u306b\u4e26\u3079\u308b\u3060\u3051\u3067[\u7c21\u5358\u306bVR\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u4f5c\u6210\u3059\u308b](http://qiita.com/ELIXIR/items/084839ae0824985fcfaf)\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305f\u3060\u6628\u4eca\u306e\u30b9\u30de\u30db\u306f\u5927\u304d\u3044\u306e\u3067\u3001\u666e\u901a\u306b\u753b\u9762\u306b\u8868\u793a\u3059\u308b\u3068\u5de6\u53f3\u306b\u4e26\u3079\u305f\u753b\u50cf\u306e\u4e2d\u5fc3\u304c\u76ee\u306e\u8ddd\u96e2\u3088\u308a\u5927\u304d\u304f\u306a\u308a\u3001\u7acb\u4f53\u8996\u304c\u3057\u306b\u304f\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u6642\u306f[\u30ab\u30e1\u30e9\u306e\u6d88\u5931\u70b9\u3092\u79fb\u52d5\u3055\u305b\u308b](http://docs.unity3d.com/ScriptReference/Camera-projectionMatrix.html)\u3053\u3068\u3067\u9055\u548c\u611f\u3092\u7de9\u548c\u3067\u304d\u307e\u3059\u3002\n\n*Camera\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u4e0b\u8a18\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002*\n\n```c#:CameraUtils.cs\n//http://docs.unity3d.com/ScriptReference/Camera-projectionMatrix.html\n\nusing UnityEngine;\nusing System.Collections;\n\n[ExecuteInEditMode]\n[RequireComponent(typeof (Camera))]\npublic class CameraUtils : MonoBehaviour {\n\t[SerializeField, Range(-0.05f, 0.05f)]\n\tprivate float offsetX;\n\tvoid LateUpdate() {\n\t\tCamera cam = gameObject.GetComponent<Camera>();\n\t\tSetVanishingPoint (Vector2.right * offsetX, cam);\n\t}\n\n\tstatic public Matrix4x4 PerspectiveOffCenter(float left, float right, float bottom, float top, float near, float far){\n\t\tfloat x =  (2f * near)      / (right - left);\n\t\tfloat y =  (2f * near)      / (top - bottom);\n\t\tfloat a =  (right + left)   / (right - left);\n\t\tfloat b =  (top + bottom)   / (top - bottom);\n\t\tfloat c = -(far + near)     / (far - near);\n\t\tfloat d = -(2f * far * near)/ (far - near);\n\t\tfloat e = -1f;\n\t\tMatrix4x4 m = new Matrix4x4();\n\t\tm[0,0] =  x;  m[0,1] = 0f;  m[0,2] = a;   m[0,3] = 0f;\n\t\tm[1,0] = 0f;  m[1,1] =  y;  m[1,2] = b;   m[1,3] = 0f;\n\t\tm[2,0] = 0f;  m[2,1] = 0f;  m[2,2] = c;   m[2,3] =  d;\n\t\tm[3,0] = 0f;  m[3,1] = 0f;  m[3,2] = e;   m[3,3] = 0f;\n\t\treturn m;\n\t}\n\n\tstatic public void SetVanishingPoint(Vector2 perspectiveOffset,Camera cam){\n\t\tcam.ResetProjectionMatrix();\n\t\tMatrix4x4 m = cam.projectionMatrix;\n\t\tfloat w = 2f*cam.nearClipPlane/m.m00;\n\t\tfloat h = 2f*cam.nearClipPlane/m.m11;\n\t\tfloat left = -w/2f - perspectiveOffset.x;\n\t\tfloat right = left+w;\n\t\tfloat bottom = -h/2f - perspectiveOffset.y;\n\t\tfloat  top = bottom+h;\n\t\tcam.projectionMatrix = PerspectiveOffCenter(left, right, bottom, top, cam.nearClipPlane, cam.farClipPlane);\n\t}\n}\n```\n\n![ss0.png](https://qiita-image-store.s3.amazonaws.com/0/59911/c29414f6-8431-05ba-14c5-ac27ad296668.png)\n\n![ss1.png](https://qiita-image-store.s3.amazonaws.com/0/59911/66dc4763-d3a5-1f34-8ffc-fd8ea9a82075.png)\n\nVR\u4ee5\u5916\u3067\u3082\u3001\u300c\u753b\u9762\u5168\u4f53\u306b\uff13D\u7a7a\u9593\u3092\u8868\u793a\u3057\u3066\u304a\u304d\u305f\u3044\u3051\u3069\u3001\u53f3\u534a\u5206\u306b\u306fUI\u304c\u305f\u304f\u3055\u3093\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u6d88\u5931\u70b9\u3092\u5de6\u306e\u307b\u3046\u306b\u5bc4\u305b\u305f\u3044\u300d\u3068\u3044\u3063\u305f\u5834\u5408\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n", "tags": ["Unity", "3D"]}