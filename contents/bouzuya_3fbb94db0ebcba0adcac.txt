{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 15 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 15 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u6628\u65e5\u307e\u3067\u3067 ReactiveX \u306e Operators By Category \u3092\u3056\u3063\u3068\u898b\u305f\u306e\u3067\u3001\u4eca\u65e5\u304b\u3089\u306f\u3082\u3046\u3059\u3053\u3057\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u307f\u307e\u3059\u3002\n\u4eca\u65e5\u306f subscribe \u306e\u52d5\u304d\u3092\u6539\u3081\u3066\u8ffd\u3046\u2026\u2026\u3064\u3082\u308a\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u6642\u9593\u304c\u306a\u3044\u306e\u3067\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3060\u3051\u306b\u306a\u308b\u3088\u3046\u524a\u304e\u843d\u3068\u3057\u305f Observable \u5b9f\u88c5\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nOperator \u306b\u3088\u3063\u3066 Observable \u306e\u30c1\u30a7\u30fc\u30f3\u3092\u3064\u304f\u308a\u3001\u305d\u3053\u3092 subscribe \u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u308a observer \u304c\u6e21\u3055\u308c\u3066\u3044\u304f\u90e8\u5206\u306f\u5143\u306e\u3082\u306e\u3092\u306a\u308b\u3079\u304f\u6b8b\u3059\u3088\u3046\u306b\u3057\u305f\u3064\u3082\u308a\u3067\u3059\u3002\n\u6b63\u78ba\u306a\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f RxJS 4.0.7 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u8a66\u3057\u3066\u3044\u307e\u3059\u3002\n$ npm i rx babel-cli babel-preset-es2015\n$ $(npm bin)/babel --presets es2015 index.js -o out.js && node out.js\n\n\n\u76ee\u6307\u3059\u30b3\u30fc\u30c9\nRxJS \u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3067\u3059\u3002\u3053\u308c\u306b\u8fd1\u3044\u3082\u306e\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(value => console.log(`onNext: ${value}`));\n\n\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f RxJS \u304b\u3089 Disposable / Scheduler / Observer \u306e onError \u3068 onCompleted / \u4eca\u56de\u306e\u5b9f\u88c5\u306b\u4e0d\u8981\u306a\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u9664\u304f\u65b9\u91dd\u3067\u9032\u3081\u307e\u3059\u3002\u4e00\u90e8\u3001\u5b9f\u88c5\u306e\u90fd\u5408\u3067\u5909\u66f4\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\n\nObservable\n\u307e\u305a\u306f Observable \u3067\u3059\u3002\n\nObservable > ObservableBase > FromObservable\nObservable > ObservableBase > MapObservable\n\n\u4eca\u56de\u306f\u4e0a\u8a18\u306e\u4ed6\u306b Observer / MapObserver \u304c\u51fa\u3066\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u306f\u4eee\u306b\u7f6e\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u4eca\u56de\u306f Observable \u3068\u305d\u306e\u5b50\u30af\u30e9\u30b9\u306e\u3064\u306a\u304c\u308a\u3092\u898b\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3059\u3002\n\nclass Observable {\n  // `Observable.from`\n  // https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/from.js#L130\n  static from(array) {\n    return new FromObservable(array);\n  }\n\n  // `Observable.prototype.map`\n  // https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/map.js#L55\n  map(selector) {\n    return new MapObservable(this, selector);\n  }\n\n  subscribe(observer) {\n    return this._subscribe(observer);\n  }\n\n  _subscribe(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\nObservable.from \u304a\u3088\u3073 Observable.prototype.map \u304a\u3088\u3073 Observable.prototype.subscribe \u304c\u751f\u3048\u3066\u3044\u307e\u3059\u3002 _subscribe \u306f\u5b50\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002\nmap \u306e MapObservable \u306e\u751f\u6210\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u81ea\u8eab (this) \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f62\u3067\u81ea\u8eab\u3092\u53c2\u7167\u3059\u308b\u5f8c\u7d9a\u306e Observable \u3092\u8fd4\u3059\u3053\u3068\u3067 Observable \u306e\u30c1\u30a7\u30fc\u30f3\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\u307e\u305f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u8a18\u8f09\u3057\u305f\u3068\u304a\u308a Observable.* \u306e\u307b\u3068\u3093\u3069\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\nObservableBase\n\n\u6b21\u306f ObservableBase \u3067\u3059\u3002\n\nObservable > ObservableBase > FromObservable\nObservable > ObservableBase > MapObservable\n\n\u4e2d\u9593\u306e\u5b9f\u88c5\u5171\u6709\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\nclass ObservableBase extends Observable {\n  // override\n  _subscribe(observer) {\n    this.subscribeCore(observer);\n  }\n\n  subscribeCore(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\n\u4eca\u56de\u306f\u4f8b\u5916\u51e6\u7406\u3082\u306a\u3044\u306e\u3067\u3001\u7279\u306b\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\nFromObservable\n\n\u6b21\u306f FromObservable \u3067\u3059\u3002\n\nObservable > ObservableBase > FromObservable\n\nclass FromObservable extends ObservableBase {\n  constructor(array) {\n    super();\n    this.array = array;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.array.forEach(value => observer.onNext(value));\n  }\n}\n\n\u5b9f\u969b\u306b\u306f Array \u3067\u306f\u306a\u304f Iterable \u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u3057\u305f\u304c\u3063\u3066\u8d70\u67fb\u3057\u307e\u3059\u3002\nsubscribeCore \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002FromObservable \u306f\u81ea\u8eab\u306e\u3082\u3064 array \u306e\u5404\u8981\u7d20\u3092\u53d7\u3051\u53d6\u3063\u305f observer \u306b\u6d41\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nMapObservable\n\n\u6b21\u306f MapObservable \u3067\u3059\u3002\n\nObservable > ObservableBase > MapObservable\n\n\u4eee\u7f6e\u304d\u306e Observer \u3092\u542b\u307f\u307e\u3059\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\nclass MapObservable extends ObservableBase {\n  constructor(source, selector) {\n    super();\n    this.source = source;\n    this.selector = selector;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.source.subscribe(new MapObserver(observer, this.selector));\n  }\n}\n\n// Observer \u306f\u4eee\u306b\u7f6e\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u5b9f\u969b\u3068\u306f\u5927\u304d\u304f\u7570\u306a\u308b\u3002\nclass Observer {\n  static create(onNext) {\n    return { onNext };\n  }\n}\n\nclass MapObserver {\n  constructor(observer, selector) {\n    this.observer = observer;\n    this.selector = selector;\n  }\n\n  onNext(value) {\n    this.observer.onNext(this.selector(value));\n  }\n}\n\nFromObservable \u540c\u69d8\u306b subscribeCore \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002MapObservable \u306f\u81ea\u8eab\u304c\u30c7\u30fc\u30bf\u3092\u6301\u3064\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3068\u306a\u308b Observable \u306b\u300c Map \u6a5f\u80fd\u3092\u6301\u3064 Observer \u300d\u3092\u767b\u9332\u3057\u3066\u3001\u6d41\u308c\u3066\u304f\u308b\u5024\u3092\u53d7\u3051\u53d6\u308a\u5909\u63db\u3057\u3066 Observer \u306b\u6e21\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u300c Map \u6a5f\u80fd\u3092\u6301\u3064 Observer \u300d\u3092 MapObserver \u3068\u3044\u3046\u540d\u524d\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u300c MapObservable.InnerObserver \u300d\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nMapObserver \u306f\u524d\u8ff0\u306e\u901a\u308a Observer \u3068\u3057\u3066 onNext \u3067\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u5909\u63db\u3057\u3066 Observer (\u5f8c\u7d9a\u306e Observable \u304c\u767b\u9332\u3057\u305f\u3082\u306e) \u306b\u7d50\u679c\u306e\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a subscribe \u306f Observable \u306b observer \u3092\u767b\u9332\u3057\u3066\u3044\u304f\u51e6\u7406\u3067\u3059\u3002\n\u767b\u9332\u3059\u308b observer \u306f Map \u306a\u3089 selector \u3092\u4f7f\u3063\u3066\u5909\u63db\u3057\u305f\u308a\u3059\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\n\u5b9f\u884c\n\nclass Observable {\n  static from(array) {\n    return new FromObservable(array);\n  }\n\n  map(selector) {\n    return new MapObservable(this, selector);\n  }\n\n  subscribe(observer) {\n    return this._subscribe(observer);\n  }\n\n  _subscribe(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\nclass ObservableBase extends Observable {\n  // override\n  _subscribe(observer) {\n    this.subscribeCore(observer);\n  }\n\n  subscribeCore(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\nclass FromObservable extends ObservableBase {\n  constructor(array) {\n    super();\n    this.array = array;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.array.forEach(value => observer.onNext(value));\n  }\n}\n\nclass MapObservable extends ObservableBase {\n  constructor(source, selector) {\n    super();\n    this.source = source;\n    this.selector = selector;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.source.subscribe(new MapObserver(observer, this.selector));\n  }\n}\n\nclass Observer {\n  static create(onNext) {\n    return { onNext };\n  }\n}\n\nclass MapObserver {\n  constructor(observer, selector) {\n    this.observer = observer;\n    this.selector = selector;\n  }\n\n  onNext(value) {\n    this.observer.onNext(this.selector(value));\n  }\n}\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(Observer.create(value => console.log(`onNext: ${value}`)));\n// onNext: 2\n// onNext: 4\n// onNext: 6\n\n\n\u304a\u308f\u308a\u306b\nRxJS \u306e Observable \u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3055\u3059\u304c\u306b\u6a5f\u80fd\u3092\u524a\u308a\u3059\u304e\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092 Observable \u3068\u547c\u3076\u306b\u306f\u7121\u7406\u306f\u3042\u308a\u307e\u3059\u304c\u2026\u2026\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 15 \u65e5\u76ee\u304b\u3064 [RxJS Advent Calendar 2015](http://qiita.com/advent-calendar/2015/rxjs) \u306e 15 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u6628\u65e5\u307e\u3067\u3067 [ReactiveX \u306e Operators By Category](http://reactivex.io/documentation/operators.html) \u3092\u3056\u3063\u3068\u898b\u305f\u306e\u3067\u3001\u4eca\u65e5\u304b\u3089\u306f\u3082\u3046\u3059\u3053\u3057\u5b9f\u88c5\u3092\u8aad\u3093\u3067\u307f\u307e\u3059\u3002\n\n\u4eca\u65e5\u306f `subscribe` \u306e\u52d5\u304d\u3092\u6539\u3081\u3066\u8ffd\u3046\u2026\u2026\u3064\u3082\u308a\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u500b\u4eba\u7684\u306b\u6642\u9593\u304c\u306a\u3044\u306e\u3067\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3068\u305d\u308c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3060\u3051\u306b\u306a\u308b\u3088\u3046\u524a\u304e\u843d\u3068\u3057\u305f `Observable` \u5b9f\u88c5\u3092\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nOperator \u306b\u3088\u3063\u3066 `Observable` \u306e\u30c1\u30a7\u30fc\u30f3\u3092\u3064\u304f\u308a\u3001\u305d\u3053\u3092 `subscribe` \u306e\u547c\u3073\u51fa\u3057\u306b\u3088\u308a `observer` \u304c\u6e21\u3055\u308c\u3066\u3044\u304f\u90e8\u5206\u306f\u5143\u306e\u3082\u306e\u3092\u306a\u308b\u3079\u304f\u6b8b\u3059\u3088\u3046\u306b\u3057\u305f\u3064\u3082\u308a\u3067\u3059\u3002\n\n\u6b63\u78ba\u306a\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u8a66\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n$ npm i rx babel-cli babel-preset-es2015\n$ $(npm bin)/babel --presets es2015 index.js -o out.js && node out.js\n```\n\n# \u76ee\u6307\u3059\u30b3\u30fc\u30c9\n\nRxJS \u306e\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3067\u3059\u3002\u3053\u308c\u306b\u8fd1\u3044\u3082\u306e\u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(value => console.log(`onNext: ${value}`));\n```\n\n# \u66f8\u3044\u305f\u30b3\u30fc\u30c9\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f RxJS \u304b\u3089 `Disposable` / `Scheduler` / `Observer` \u306e `onError` \u3068 `onCompleted` / \u4eca\u56de\u306e\u5b9f\u88c5\u306b\u4e0d\u8981\u306a\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u9664\u304f\u65b9\u91dd\u3067\u9032\u3081\u307e\u3059\u3002\u4e00\u90e8\u3001\u5b9f\u88c5\u306e\u90fd\u5408\u3067\u5909\u66f4\u3057\u3066\u3044\u308b\u90e8\u5206\u304c\u3042\u308a\u307e\u3059\u3002\n\n## Observable\n\n\u307e\u305a\u306f [`Observable`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/observable.js) \u3067\u3059\u3002\n\n- Observable > ObservableBase > FromObservable\n- Observable > ObservableBase > MapObservable\n\n\u4eca\u56de\u306f\u4e0a\u8a18\u306e\u4ed6\u306b Observer / MapObserver \u304c\u51fa\u3066\u304d\u307e\u3059\u304c\u3001\u3053\u308c\u3089\u306f\u4eee\u306b\u7f6e\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n\u4eca\u56de\u306f `Observable` \u3068\u305d\u306e\u5b50\u30af\u30e9\u30b9\u306e\u3064\u306a\u304c\u308a\u3092\u898b\u308b\u3053\u3068\u304c\u76ee\u6a19\u3067\u3059\u3002\n\n```js\n\nclass Observable {\n  // `Observable.from`\n  // https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/from.js#L130\n  static from(array) {\n    return new FromObservable(array);\n  }\n  \n  // `Observable.prototype.map`\n  // https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/map.js#L55\n  map(selector) {\n    return new MapObservable(this, selector);\n  }\n\n  subscribe(observer) {\n    return this._subscribe(observer);\n  }\n  \n  _subscribe(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n```\n\n`Observable.from` \u304a\u3088\u3073 `Observable.prototype.map` \u304a\u3088\u3073 `Observable.prototype.subscribe` \u304c\u751f\u3048\u3066\u3044\u307e\u3059\u3002 `_subscribe` \u306f\u5b50\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3055\u308c\u307e\u3059\u3002\n\n`map` \u306e `MapObservable` \u306e\u751f\u6210\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u81ea\u8eab (`this`) \u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5f62\u3067\u81ea\u8eab\u3092\u53c2\u7167\u3059\u308b\u5f8c\u7d9a\u306e `Observable` \u3092\u8fd4\u3059\u3053\u3068\u3067 `Observable` \u306e\u30c1\u30a7\u30fc\u30f3\u3092\u3064\u304f\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u8a18\u8f09\u3057\u305f\u3068\u304a\u308a `Observable.*` \u306e\u307b\u3068\u3093\u3069\u306f\u5225\u306e\u30d5\u30a1\u30a4\u30eb\u3067\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\n## `ObservableBase`\n\n\u6b21\u306f [`ObservableBase`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/observablebase.js) \u3067\u3059\u3002\n\n- Observable > ObservableBase > FromObservable\n- Observable > ObservableBase > MapObservable\n\n\u4e2d\u9593\u306e\u5b9f\u88c5\u5171\u6709\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```js\nclass ObservableBase extends Observable {\n  // override\n  _subscribe(observer) {\n    this.subscribeCore(observer);\n  }\n\n  subscribeCore(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n```\n\n\u4eca\u56de\u306f\u4f8b\u5916\u51e6\u7406\u3082\u306a\u3044\u306e\u3067\u3001\u7279\u306b\u4f55\u3082\u3057\u307e\u305b\u3093\u3002\n\n## `FromObservable`\n\n\u6b21\u306f [`FromObservable`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/from.js) \u3067\u3059\u3002\n\n- Observable > ObservableBase > FromObservable\n\n```js\nclass FromObservable extends ObservableBase {\n  constructor(array) {\n    super();\n    this.array = array;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.array.forEach(value => observer.onNext(value));\n  }\n}\n```\n\n\u5b9f\u969b\u306b\u306f `Array` \u3067\u306f\u306a\u304f `Iterable` \u306b\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306b\u3057\u305f\u304c\u3063\u3066\u8d70\u67fb\u3057\u307e\u3059\u3002\n\n`subscribeCore` \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002`FromObservable` \u306f\u81ea\u8eab\u306e\u3082\u3064 `array` \u306e\u5404\u8981\u7d20\u3092\u53d7\u3051\u53d6\u3063\u305f `observer` \u306b\u6d41\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## `MapObservable`\n\n\u6b21\u306f [`MapObservable`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/map.js) \u3067\u3059\u3002\n\n- Observable > ObservableBase > MapObservable\n\n\u4eee\u7f6e\u304d\u306e `Observer` \u3092\u542b\u307f\u307e\u3059\u304c\u3001\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n```js\nclass MapObservable extends ObservableBase {\n  constructor(source, selector) {\n    super();\n    this.source = source;\n    this.selector = selector;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.source.subscribe(new MapObserver(observer, this.selector));\n  }\n}\n\n// Observer \u306f\u4eee\u306b\u7f6e\u3044\u3066\u3044\u308b\u3060\u3051\u3067\u3001\u5b9f\u969b\u3068\u306f\u5927\u304d\u304f\u7570\u306a\u308b\u3002\nclass Observer {\n  static create(onNext) {\n    return { onNext };\n  }\n}\n\nclass MapObserver {\n  constructor(observer, selector) {\n    this.observer = observer;\n    this.selector = selector;\n  }\n  \n  onNext(value) {\n    this.observer.onNext(this.selector(value));\n  }\n}\n```\n\n`FromObservable` \u540c\u69d8\u306b `subscribeCore` \u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002`MapObservable` \u306f\u81ea\u8eab\u304c\u30c7\u30fc\u30bf\u3092\u6301\u3064\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u30bd\u30fc\u30b9\u3068\u306a\u308b `Observable` \u306b\u300c `Map` \u6a5f\u80fd\u3092\u6301\u3064 `Observer` \u300d\u3092\u767b\u9332\u3057\u3066\u3001\u6d41\u308c\u3066\u304f\u308b\u5024\u3092\u53d7\u3051\u53d6\u308a\u5909\u63db\u3057\u3066 `Observer` \u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u300c `Map` \u6a5f\u80fd\u3092\u6301\u3064 `Observer` \u300d\u3092 `MapObserver` \u3068\u3044\u3046\u540d\u524d\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u306f\u300c `MapObservable.InnerObserver` \u300d\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n`MapObserver` \u306f\u524d\u8ff0\u306e\u901a\u308a `Observer` \u3068\u3057\u3066 `onNext` \u3067\u5024\u3092\u53d7\u3051\u53d6\u308a\u3001\u5909\u63db\u3057\u3066 `Observer` (\u5f8c\u7d9a\u306e `Observable` \u304c\u767b\u9332\u3057\u305f\u3082\u306e) \u306b\u7d50\u679c\u306e\u5024\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3064\u307e\u308a `subscribe` \u306f `Observable` \u306b `observer` \u3092\u767b\u9332\u3057\u3066\u3044\u304f\u51e6\u7406\u3067\u3059\u3002\n\n\u767b\u9332\u3059\u308b `observer` \u306f `Map` \u306a\u3089 `selector` \u3092\u4f7f\u3063\u3066\u5909\u63db\u3057\u305f\u308a\u3059\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\n\n## \u5b9f\u884c\n\n```js\n\nclass Observable {\n  static from(array) {\n    return new FromObservable(array);\n  }\n\n  map(selector) {\n    return new MapObservable(this, selector);\n  }\n\n  subscribe(observer) {\n    return this._subscribe(observer);\n  }\n  \n  _subscribe(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\nclass ObservableBase extends Observable {\n  // override\n  _subscribe(observer) {\n    this.subscribeCore(observer);\n  }\n\n  subscribeCore(observer) {\n    throw new Error('Not Implemented');\n  }\n}\n\nclass FromObservable extends ObservableBase {\n  constructor(array) {\n    super();\n    this.array = array;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.array.forEach(value => observer.onNext(value));\n  }\n}\n\nclass MapObservable extends ObservableBase {\n  constructor(source, selector) {\n    super();\n    this.source = source;\n    this.selector = selector;\n  }\n\n  // override\n  subscribeCore(observer) {\n    this.source.subscribe(new MapObserver(observer, this.selector));\n  }\n}\n\nclass Observer {\n  static create(onNext) {\n    return { onNext };\n  }\n}\n\nclass MapObserver {\n  constructor(observer, selector) {\n    this.observer = observer;\n    this.selector = selector;\n  }\n  \n  onNext(value) {\n    this.observer.onNext(this.selector(value));\n  }\n}\n\nObservable\n  .from([1, 2, 3])\n  .map(value => value * 2)\n  .subscribe(Observer.create(value => console.log(`onNext: ${value}`)));\n// onNext: 2\n// onNext: 4\n// onNext: 6\n```\n\n# \u304a\u308f\u308a\u306b\n\nRxJS \u306e Observable \u3092\u30b7\u30f3\u30d7\u30eb\u306b\u3057\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3055\u3059\u304c\u306b\u6a5f\u80fd\u3092\u524a\u308a\u3059\u304e\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092 Observable \u3068\u547c\u3076\u306b\u306f\u7121\u7406\u306f\u3042\u308a\u307e\u3059\u304c\u2026\u2026\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}