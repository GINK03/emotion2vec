{"context": " More than 1 year has passed since last update.\u6628\u65e5 python-tcptest \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308aPython3\u7cfb\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n(\u3068\u3044\u3063\u3066\u3082\u81ea\u5206\u3067\u3077\u308b\u308a\u304f\u3093\u6295\u3052\u305f\u3093\u3060\u3051\u3069)\n\u305d\u306e\u8a18\u5ff5\u306btcptest\u3092\u4f7f\u3063\u3066Elasticsearch\u3092\u4f7f\u3063\u3066\u308bPython\u306e\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\ntcptest\u3063\u3066\uff1f\n\n\u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3066\n\u305d\u306e\u30dd\u30fc\u30c8\u3067\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u3066\n\u30c6\u30b9\u30c8\u304c\u7d42\u308f\u3063\u305f\u3089\u305d\u306e\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u843d\u3068\u3059\n\n\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e3\u70b9\u304c\u3042\u308a\u304c\u305f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u306e\u5b9f\u7269\u3092\u4f7f\u3046\u306e\u3067\u30e2\u30c3\u30af\u3068\u5b9f\u7269\u306e\u9055\u3044\u3092\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\nDB\u306b\u30c6\u30b9\u30c8\u7528\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u304c\u6df7\u3058\u3063\u3066\u3066\u9593\u9055\u3048\u3066\u4e00\u7dd2\u306b\u6d88\u3057\u3061\u3083\u3063\u305f\u307f\u305f\u3044\u306a\u30df\u30b9\u304c\u306a\u304f\u306a\u308b\n\u308f\u3056\u308f\u3056\u30c6\u30b9\u30c8\u7528\u306b\u81ea\u5206\u3067\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u7acb\u3066\u305f\u308a\u843d\u3068\u3057\u305f\u308a\u3057\u306a\u304f\u3066\u3044\u3044 (\u4eba\u624b\u306e\u6e29\u3082\u308a\u304c\u306a\u3044)\n\n\npython-tcptest\u306e\u5165\u308c\u65b9\n\n$ pip install tcptest\n\n\npython-tcptest\u306e\u6d41\u308c\n\n\u958b\u59cb\u6642\n\n\nTestServer.__init__: \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u304b\u8a2d\u5b9a\u3059\u308b (\u8d77\u52d5\u306b\u6642\u9593\u639b\u304b\u308b\u3082\u306e\u306f\u9577\u3081\u306b\u3059\u308b\u3068\u3088\u3044\u3067\u3059)\n\nTestServer._before_start: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u524d\u306b\u3084\u308b\u51e6\u7406 (\u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\u3068\u304b) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\nTestServer.start: \u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3066 TestServer.build_command\u306e\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304d\u307e\u3059\u3002\n\nTestServer._after_start: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u76f4\u5f8c\u306b\u3084\u308b\u51e6\u7406 (\u521d\u671f\u8a2d\u5b9a\u3092\u3057\u305f\u308a\u3068\u304b) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\n\n\u7d42\u4e86\u6642\n\n\nTestServer._before_stop: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7d42\u4e86\u524d\u306b\u3084\u308b\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\nTestServer.stop: \u30b5\u30fc\u30d0\u30fc\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\n\nTestServer._after_start: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7d42\u4e86\u5f8c\u306b\u3084\u308b\u51e6\u7406 (\u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6d88\u3057\u305f\u308a) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\n\nElasticsearch\u7528\u306b\u66f8\u3044\u3066\u307f\u3088\u3046\npython-tcptest \u306f\u3001\u6700\u521d\u304b\u3089Redis\u3068Fluentd\u3068memcached\u306e\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u304c\u5165\u3063\u3066\u307e\u3059\u3002\u4eca\u56de\u306fElasticsearch\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u306e\u3067\u81ea\u5206\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\nimport os\nimport shutil\nimport tempfile\nimport tcptest\n\n\nclass ESTestServer(tcptest.TestServer):\n\n    def build_command(self):\n        return ('elasticsearch',\n                '-Des.network.bind_host=127.0.0.1',\n                '-Des.network.host=127.0.0.1',\n                '-Des.http.port=%s' % self.port,\n                \"-Des.node.master=true\",\n                \"-Des.node.local=true\",\n                '-Des.path.data=%s' % self.data_dir,\n                '-Des.path.logs=%s' % self.logs_dir\n               )\n\n    def _before_start(self):\n        self.data_dir = tempfile.mkdtemp(prefix='esdata')\n        self.logs_dir = tempfile.mkdtemp(prefix='eslogs')\n\n    def _after_stop(self):\n        for path in filter(os.path.exists, (self.data_dir, self.logs_dir)):\n            shutil.rmtree(path)\n\ntcptest.TestServer \u3092\u7d99\u627f\u3057\u30663\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\uff01\n\n\u78ba\u8a8d\u7528\u30b3\u30fc\u30c9\nelasticsearch-py\u306eexample \u3092\u30d9\u30fc\u30b9\u306b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\nfrom datetime import datetime\nimport os\nfrom elasticsearch import Elasticsearch\n\n\nwith ESTestServer(timeout=30) as server:\n    es = Elasticsearch(['localhost:%s' % server.port])\n    print(es.transport.hosts)\n\n    # from https://elasticsearch-py.readthedocs.org/en/master/#example-usage\n    doc = {\n        'author': 'kimchy',\n        'text': 'Elasticsearch: cool. bonsai cool.',\n        'timestamp': datetime.now(),\n    }\n    res = es.index(index=\"test-index\", doc_type='tweet', id=1, body=doc)\n    print(res['created'])\n\n    res = es.get(index=\"test-index\", doc_type='tweet', id=1)\n    print(res['_source'])\n\n    es.indices.refresh(index=\"test-index\")\n\n    res = es.search(index=\"test-index\", body={\"query\": {\"match_all\": {}}})\n    print(\"Got %d Hits:\" % res['hits']['total'])\n    for hit in res['hits']['hits']:\n        print(\"%(timestamp)s %(author)s: %(text)s\" % hit[\"_source\"])\n\n    print('data_dir contains:', os.listdir(server.data_dir))\n    print('logs_dir contains:', os.listdir(server.logs_dir))\n    data_dir = server.data_dir\n    logs_dir = server.logs_dir\n\nprint('data_dir exists:', os.path.exists(data_dir))\nprint('logs_dir exists:', os.path.exists(logs_dir))\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u98a8\u306b\u306a\u308a\u307e\u3059\u2193\n[{'port': 55003, 'host': 'localhost'}]\nTrue\n{'timestamp': '2015-10-30T14:10:16.703556', 'author': 'kimchy', 'text': 'Elasticsearch: cool. bonsai cool.'}\nGot 1 Hits:\n2015-10-30T14:10:16.703556 kimchy: Elasticsearch: cool. bonsai cool.\ndata_dir contains: ['elasticsearch_brew']\nlogs_dir contains: ['elasticsearch_brew.log', 'elasticsearch_brew_index_indexing_slowlog.log', 'elasticsearch_brew_index_search_slowlog.log']\ndata_dir exists: False\nlogs_dir exists: False\n\n\u306a\u3093\u304b\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u306bElasticsearch\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001\u3066\u304d\u3068\u30fc\u306a\u3068\u3053\u308d\u306b\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30ed\u30b0\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u3001\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u3089\u7dba\u9e97\u306b\u306a\u3063\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u4ee5\u4e0a\u3067\u3059\u3002\n\u6628\u65e5 [python-tcptest](https://pypi.python.org/pypi/tcptest) \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308aPython3\u7cfb\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n(\u3068\u3044\u3063\u3066\u3082\u81ea\u5206\u3067\u3077\u308b\u308a\u304f\u3093\u6295\u3052\u305f\u3093\u3060\u3051\u3069)\n\n\u305d\u306e\u8a18\u5ff5\u306btcptest\u3092\u4f7f\u3063\u3066Elasticsearch\u3092\u4f7f\u3063\u3066\u308bPython\u306e\u30b3\u30fc\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n### tcptest\u3063\u3066\uff1f\n\n1. \u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3066\n2. \u305d\u306e\u30dd\u30fc\u30c8\u3067\u6307\u5b9a\u3057\u305f\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u7acb\u3061\u4e0a\u3052\u3066\n3. \u30c6\u30b9\u30c8\u304c\u7d42\u308f\u3063\u305f\u3089\u305d\u306e\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u843d\u3068\u3059\n\n\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e3\u70b9\u304c\u3042\u308a\u304c\u305f\u3044\u3093\u3058\u3083\u306a\u3044\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n- \u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u306e\u5b9f\u7269\u3092\u4f7f\u3046\u306e\u3067\u30e2\u30c3\u30af\u3068\u5b9f\u7269\u306e\u9055\u3044\u3092\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\n- DB\u306b\u30c6\u30b9\u30c8\u7528\u4ee5\u5916\u306e\u30c7\u30fc\u30bf\u304c\u6df7\u3058\u3063\u3066\u3066\u9593\u9055\u3048\u3066\u4e00\u7dd2\u306b\u6d88\u3057\u3061\u3083\u3063\u305f\u307f\u305f\u3044\u306a\u30df\u30b9\u304c\u306a\u304f\u306a\u308b\n- \u308f\u3056\u308f\u3056\u30c6\u30b9\u30c8\u7528\u306b\u81ea\u5206\u3067\u30b5\u30fc\u30d0\u30fc\u30bd\u30d5\u30c8\u3092\u7acb\u3066\u305f\u308a\u843d\u3068\u3057\u305f\u308a\u3057\u306a\u304f\u3066\u3044\u3044 (\u4eba\u624b\u306e\u6e29\u3082\u308a\u304c\u306a\u3044)\n\n### python-tcptest\u306e\u5165\u308c\u65b9\n```bash\n\n$ pip install tcptest\n```\n\n### python-tcptest\u306e\u6d41\u308c\n#### \u958b\u59cb\u6642\n1. `TestServer.__init__`: \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u304b\u8a2d\u5b9a\u3059\u308b (\u8d77\u52d5\u306b\u6642\u9593\u639b\u304b\u308b\u3082\u306e\u306f\u9577\u3081\u306b\u3059\u308b\u3068\u3088\u3044\u3067\u3059)\n2. `TestServer._before_start`: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u524d\u306b\u3084\u308b\u51e6\u7406 (\u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\u3068\u304b) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n3. `TestServer.start`: \u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u3092\u63a2\u3057\u3066 `TestServer.build_command`\u306e\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u304d\u307e\u3059\u3002\n4. `TestServer._after_start`: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7acb\u3061\u4e0a\u3052\u76f4\u5f8c\u306b\u3084\u308b\u51e6\u7406 (\u521d\u671f\u8a2d\u5b9a\u3092\u3057\u305f\u308a\u3068\u304b) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\n#### \u7d42\u4e86\u6642\n1. `TestServer._before_stop`: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7d42\u4e86\u524d\u306b\u3084\u308b\u51e6\u7406\u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n2. `TestServer.stop`: \u30b5\u30fc\u30d0\u30fc\u3092\u7d42\u4e86\u3057\u307e\u3059\u3002\n3. `TestServer._after_start`: \u3053\u3053\u306b\u30b5\u30fc\u30d0\u30fc\u7d42\u4e86\u5f8c\u306b\u3084\u308b\u51e6\u7406 (\u4e00\u6642\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6d88\u3057\u305f\u308a) \u3092\u66f8\u304d\u307e\u3059 (\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u4f55\u3082\u3057\u306a\u3044)\n\n### Elasticsearch\u7528\u306b\u66f8\u3044\u3066\u307f\u3088\u3046\npython-tcptest \u306f\u3001\u6700\u521d\u304b\u3089Redis\u3068Fluentd\u3068memcached\u306e\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u304c\u5165\u3063\u3066\u307e\u3059\u3002\u4eca\u56de\u306fElasticsearch\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u306e\u3067\u81ea\u5206\u3067\u30af\u30e9\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n```py3\n\nimport os\nimport shutil\nimport tempfile\nimport tcptest\n\n\nclass ESTestServer(tcptest.TestServer):\n\n    def build_command(self):\n        return ('elasticsearch',\n                '-Des.network.bind_host=127.0.0.1',\n                '-Des.network.host=127.0.0.1',\n                '-Des.http.port=%s' % self.port,\n                \"-Des.node.master=true\",\n                \"-Des.node.local=true\",\n                '-Des.path.data=%s' % self.data_dir,\n                '-Des.path.logs=%s' % self.logs_dir\n               )\n\n    def _before_start(self):\n        self.data_dir = tempfile.mkdtemp(prefix='esdata')\n        self.logs_dir = tempfile.mkdtemp(prefix='eslogs')\n\n    def _after_stop(self):\n        for path in filter(os.path.exists, (self.data_dir, self.logs_dir)):\n            shutil.rmtree(path)\n```\n\n`tcptest.TestServer` \u3092\u7d99\u627f\u3057\u30663\u3064\u30e1\u30bd\u30c3\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3060\u3051\uff01\n\n### \u78ba\u8a8d\u7528\u30b3\u30fc\u30c9\n[elasticsearch-py\u306eexample](https://elasticsearch-py.readthedocs.org/en/master/#example-usage) \u3092\u30d9\u30fc\u30b9\u306b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3\n\nfrom datetime import datetime\nimport os\nfrom elasticsearch import Elasticsearch\n\n\nwith ESTestServer(timeout=30) as server:\n    es = Elasticsearch(['localhost:%s' % server.port])\n    print(es.transport.hosts)\n\n    # from https://elasticsearch-py.readthedocs.org/en/master/#example-usage\n    doc = {\n        'author': 'kimchy',\n        'text': 'Elasticsearch: cool. bonsai cool.',\n        'timestamp': datetime.now(),\n    }\n    res = es.index(index=\"test-index\", doc_type='tweet', id=1, body=doc)\n    print(res['created'])\n\n    res = es.get(index=\"test-index\", doc_type='tweet', id=1)\n    print(res['_source'])\n\n    es.indices.refresh(index=\"test-index\")\n\n    res = es.search(index=\"test-index\", body={\"query\": {\"match_all\": {}}})\n    print(\"Got %d Hits:\" % res['hits']['total'])\n    for hit in res['hits']['hits']:\n        print(\"%(timestamp)s %(author)s: %(text)s\" % hit[\"_source\"])\n\n    print('data_dir contains:', os.listdir(server.data_dir))\n    print('logs_dir contains:', os.listdir(server.logs_dir))\n    data_dir = server.data_dir\n    logs_dir = server.logs_dir\n\nprint('data_dir exists:', os.path.exists(data_dir))\nprint('logs_dir exists:', os.path.exists(logs_dir))\n```\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3053\u3093\u306a\u98a8\u306b\u306a\u308a\u307e\u3059\u2193\n\n```\n[{'port': 55003, 'host': 'localhost'}]\nTrue\n{'timestamp': '2015-10-30T14:10:16.703556', 'author': 'kimchy', 'text': 'Elasticsearch: cool. bonsai cool.'}\nGot 1 Hits:\n2015-10-30T14:10:16.703556 kimchy: Elasticsearch: cool. bonsai cool.\ndata_dir contains: ['elasticsearch_brew']\nlogs_dir contains: ['elasticsearch_brew.log', 'elasticsearch_brew_index_indexing_slowlog.log', 'elasticsearch_brew_index_search_slowlog.log']\ndata_dir exists: False\nlogs_dir exists: False\n```\n\u306a\u3093\u304b\u3088\u304f\u308f\u304b\u3093\u306a\u3044\u7a7a\u3044\u3066\u308b\u30dd\u30fc\u30c8\u306bElasticsearch\u3092\u7acb\u3061\u4e0a\u3052\u3066\u3001\u3066\u304d\u3068\u30fc\u306a\u3068\u3053\u308d\u306b\u30c7\u30fc\u30bf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30ed\u30b0\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u3001\u3061\u3083\u3093\u3068\u52d5\u4f5c\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u3089\u7dba\u9e97\u306b\u306a\u3063\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u4ee5\u4e0a\u3067\u3059\u3002\n", "tags": ["Python", "Elasticsearch", "tcptest", "\u30c6\u30b9\u30c8"]}