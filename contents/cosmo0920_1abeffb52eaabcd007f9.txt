{"context": "\n\n\u306f\u3058\u3081\u306b\nYesod\u306f\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u306eWeb Application Framework\u3067\u3042\u308b\u305f\u3081\u3001\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u6a5f\u69cb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u62e1\u5f35\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nYesod\u3067\u306f\u57fa\u672c\u7684\u306b Yesod.Auth \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u305d\u306e\u62e1\u5f35\u306b\u4e57\u3063\u304b\u3063\u305f\u5f62\u3067\u8a8d\u8a3c\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u3072\u306a\u5f62\n\u307e\u305a\u306f\u3001\u3072\u306a\u5f62\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nstack.yaml:\nresolver: lts-6.27\n\npackages:\n  - '.'\n\nextra-deps:\n  - load-env-0.1.1\n\nflags: {}\n\nextra-package-dbs: []\n\n\nyesod-auth-sample.cabal:\nname:              yesod-auth-sample\nversion:           0.1.0.0\ncabal-version:     >= 1.8\nbuild-type:        Simple\n\nFlag dev\n    Description:   Turn on development settings, like auto-reload templates.\n    Default:       False\n\nexecutable         yesod-auth-sample\n    main-is:           yesod-auth-sample.hs\n    hs-source-dirs:    .\n    build-depends:     base\n                     , yesod                         >= 1.4        && < 1.5\n                     , yesod-core                    >= 1.4        && < 1.5\n                     , yesod-auth                    >= 1.4        && < 1.5\n                     , yesod-form                    >= 1.3        && < 1.5\n                     , template-haskell\n                     , text                          >= 0.11       && < 2.0\n                     , shakespeare                   >= 2.0        && < 2.1\n                     , http-conduit                  >= 2.1        && < 2.2\n                     , data-default\n                     , conduit                       >= 1.0        && < 2.0\n                     , load-env\n\n    ghc-options:       -threaded -O2\n\n\nyesod-auth-sample.hs:\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE OverloadedStrings     #-}\n{-# LANGUAGE QuasiQuotes           #-}\n{-# LANGUAGE TemplateHaskell       #-}\n{-# LANGUAGE TypeFamilies          #-}\nimport           Data.Default                (def)\nimport           Data.Text                   (Text)\nimport           Network.HTTP.Client.Conduit (Manager, newManager)\nimport           Yesod\nimport           Yesod.Auth\nimport           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n\ndata App = App\n    { httpManager :: Manager\n    }\n\nmkYesod \"App\" [parseRoutes|\n/ HomeR GET\n/auth AuthR Auth getAuth\n|]\n\ninstance Yesod App where\n    -- Note: In order to log in with BrowserID, you must correctly\n    -- set your hostname here.\n    approot = ApprootStatic \"http://localhost:3000\"\n\ninstance YesodAuth App where\n    type AuthId App = Text\n    getAuthId = return . Just . credsIdent\n\n    loginDest _ = HomeR\n    logoutDest _ = HomeR\n\n    authPlugins m =\n        [ authOpenId Claimed []\n        ]\n\n    authHttpManager = httpManager\n\n    -- The default maybeAuthId assumes a Persistent database. We're going for a\n    -- simpler AuthId, so we'll just do a direct lookup in the session.\n    maybeAuthId = lookupSession \"_ID\"\n\ninstance RenderMessage App FormMessage where\n    renderMessage _ _ = defaultFormMessage\n\ngetHomeR :: Handler Html\ngetHomeR = do\n    maid <- maybeAuthId\n    defaultLayout\n        [whamlet|\n            <p>Your current auth ID: #{show maid}\n            $maybe _ <- maid\n                <p>\n                    <a href=@{AuthR LogoutR}>Logout\n            $nothing\n                <p>\n                    <a href=@{AuthR LoginR}>Go to the login page\n        |]\n\nmain :: IO ()\nmain = do\n    man <- newManager\n    warp 3000 $ App man\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n% ls\nyesod-auth-sample.cabal    stack.yaml\nyesod-auth-sample.hs\n\nstack\u3092\u7528\u3044\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n% stack build\nyesod-auth-sample-0.1.0.0: configure (exe)\nConfiguring yesod-auth-sample-0.1.0.0...\nyesod-auth-sample-0.1.0.0: build (exe)\nPreprocessing executable 'yesod-auth-sample' for yesod-auth-sample-0.1.0.0...\n[1 of 1] Compiling Main             ( yesod-auth-sample.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample-tmp/Main.o )\nLinking .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample ...\nyesod-auth-sample-0.1.0.0: copy/register\nInstalling executable(s) in\n/media/Data2/Gitrepo/yesod-authentication-example/.stack-work/install/x86_64-linux/lts-3.11/7.10.2/bin\n\n\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n% stack exec yesod-auth-sample\n20/Dec/2016:23:10:59 +0900 [Info#yesod-core] Application launched @(yesod_83PxojfItaB8w9Rj9nFdZm:Yesod.Core.Dispatch ./Yesod/Core/Dispatch.hs:157:11)\n\n\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\"Go to the login page\"\u306e\u6587\u5b57\u304c\u898b\u3048\u307e\u3059\u3002\n\n\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\n\nyahoo.com\u3067OpenID\u8a8d\u8a3c\u3092\u8a66\u307f\u308b\u3068\u3001Top page\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u3001Just\u306e\u3042\u3068\u306e\u6587\u5b57\u5217\u306bmaid\u304c\u5165\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u307c\u304b\u3057\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\nYesod\u306e\u8a8d\u8a3c\u306fOpenID\u4ee5\u5916\u306b\u3082GoogleEmail2\u7b49\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u304a\u3001Yesod 1.2\u6642\u4ee3\u304b\u3089Yesod\u306b\u6163\u308c\u89aa\u3057\u3093\u3067\u3044\u308b\u65b9\u3005\u306b\u306f\u304a\u306a\u3058\u307f\u306e Yesod.Auth.BrowserID (Mozilla Persona) \u3084 Yesod.Auth.GoogleEmail \u306f\u975e\u63a8\u5968\u3068\u306a\u308a\u3001\u65e2\u306b\u8a8d\u8a3c\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u4e8b\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nGoogleEmail2\nOpenID\u3067\u306e\u8a8d\u8a3c\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u306emaid\u306b\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u304c\u5165\u3063\u3066\u304f\u308b\u305f\u3081\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u3063\u3066\u7ba1\u7406\u8005\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u5206\u3051\u308b\u51e6\u7406\u306b\u306f\u4e0d\u5411\u304d\u3067\u3057\u3087\u3046\u3002GoogleEmail2\u3067\u306fmaid\u306e\u60c5\u5831\u3068\u3057\u3066\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001GoogleEmail2\u3092\u4f7f\u3063\u3066\u578b\u3060\u3051\u3092\u5408\u308f\u305b\u3066\u307f\u307e\u3059\u3002\u3053\u306e\u6642\u70b9\u3067\u306fGoogle\u306e\u8a8d\u8a3c\u57fa\u76e4\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u60c5\u5831\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u5909\u3057\u307e\u3059\u3002\ndiff --git a/yesod-auth-sample.hs b/yesod-auth-sample.hs\nindex 0a2a96c..3c5d0cd 100644\n--- a/yesod-auth-sample.hs\n+++ b/yesod-auth-sample.hs\n@@ -8,8 +8,17 @@ import           Data.Text                   (Text)\n import           Network.HTTP.Client.Conduit (Manager, newManager)\n import           Yesod\n import           Yesod.Auth\n+import           Yesod.Auth.GoogleEmail2\n import           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n\n+-- Replace with Google client ID.\n+clientId :: Text\n+clientId = \"\"\n+\n+-- Replace with Google secret ID.\n+clientSecret :: Text\n+clientSecret = \"\"\n+\n data App = App\n     { httpManager :: Manager\n     }\n@@ -33,6 +42,7 @@ instance YesodAuth App where\n\n     authPlugins m =\n         [ authOpenId Claimed []\n+        , authGoogleEmail clientId clientSecret\n         ]\n\n     authHttpManager = httpManager\n\n\u3059\u308b\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306bLogin via Google\u306e\u30ea\u30f3\u30af\u304c\u51fa\u73fe\u3057\u307e\u3059\u3002\n\nYesod\u306e\u8a8d\u8a3c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\nYesod\u306e\u8a8d\u8a3c\u5468\u308a\u306fHackage\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001YesodAuth\u578b\u30af\u30e9\u30b9\u306e authPlugins :: master -> [AuthPlugin master]\u30e1\u30bd\u30c3\u30c9\u306e [AuthPlugin master] \u90e8\u5206\u306b\u5165\u308a\u8fbc\u3080\u5f62\u3067\u4e0e\u3048\u3066\u3084\u308b\u3068\u826f\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001Yesod.Auth.OpenId \u3068 Yesod.Auth.GoogleEmail2 \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001authGoogleEmail \u95a2\u6570\u3068 authOpenId \u95a2\u6570\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\nauthGoogleEmail :: YesodAuth m\n                => Text -- ^ client ID\n                -> Text -- ^ client secret\n                -> AuthPlugin m\n\nauthOpenId :: YesodAuth master\n           => IdentifierType\n           -> [(Text, Text)] -- ^ extension fields\n           -> AuthPlugin master\n\n\u3069\u3061\u3089\u3082 AuthPlugin master \u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002authPlugins\u95a2\u6570\u306b\u3053\u308c\u3089\u306eYesod\u306e\u8a8d\u8a3c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u60c5\u5831\u3092\u914d\u5217\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u3067\u578b\u304c\u5408\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u767a\u5c55\u7de8\n\u3053\u3053\u307e\u3067\u306fYesod\u3067\u306e\u8a8d\u8a3c\u306e\u4ed5\u7d44\u307f\u306e\u3042\u3089\u307e\u3057\u3092\u8fbf\u308a\u307e\u3057\u305f\u3002\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c8\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u671b\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u306fdotenv\u3068\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u6301\u3063\u305fload-env\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u3044\u3066\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5b9f\u884c\u6642\u306b\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\ndiff --git a/yesod-auth-sample.hs b/yesod-auth-sample.hs\nindex 3c5d0cd..ce3f086 100644\n--- a/yesod-auth-sample.hs\n+++ b/yesod-auth-sample.hs\n\n@@ -10,17 +10,18 @@ import           Yesod\n import           Yesod.Auth\n import           Yesod.Auth.GoogleEmail2\n import           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n+import           LoadEnv\n+import           System.Environment          (getEnv)\n+import qualified Data.Text as T\n\n--- Replace with Google client ID.\n-clientId :: Text\n-clientId = \"\"\n-\n--- Replace with Google secret ID.\n-clientSecret :: Text\n-clientSecret = \"\"\n+data GoogleLoginKeys = GoogleLoginKeys\n+    { googleLoginClientId :: Text\n+    , googleLoginClientSecret :: Text\n+    }\n\n data App = App\n     { httpManager :: Manager\n+    , googleLoginKeys :: GoogleLoginKeys\n     }\n\n mkYesod \"App\" [parseRoutes|\n@@ -42,7 +43,7 @@ instance YesodAuth App where\n\n     authPlugins m =\n         [ authOpenId Claimed []\n-        , authGoogleEmail clientId clientSecret\n+        , authGoogleEmail (googleLoginClientId $ googleLoginKeys m) (googleLoginClientSecret $ googleLoginKeys m)\n         ]\n\n     authHttpManager = httpManager\n@@ -70,5 +71,15 @@ getHomeR = do\n\n main :: IO ()\n main = do\n+    loadEnv -- load from .env\n+    googleLoginKeys <- getGoogleLoginKeys\n+\n     man <- newManager\n-    warp 3000 $ App man\n+    warp 3000 $ App man googleLoginKeys\n+      where\n+        getGoogleLoginKeys :: IO GoogleLoginKeys\n+        getGoogleLoginKeys = GoogleLoginKeys\n+          <$> getEnvT \"GOOGLE_LOGIN_CLIENT_ID\"\n+          <*> getEnvT \"GOOGLE_LOGIN_CLIENT_SECRET\"\n+          where\n+            getEnvT = fmap T.pack . getEnv\n\n\u307e\u305f\u3001.env\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u7528\u610f\u3057\u307e\u3059\u30021\nGOOGLE_LOGIN_CLIENT_ID=YOUR_CLIENT_ID\nGOOGLE_LOGIN_CLIENT_SECRET=YOUR_CLIENT_SECRET\n\n\u3053\u3053\u307e\u3067\u306e\u5909\u66f4\u3092\u9069\u7528\u3057\u3001\u3082\u3046\u4e00\u5ea6stack\u3067\u30d3\u30eb\u30c9\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n% stack build\nyesod-auth-sample-0.1.0.0: configure (exe)\nConfiguring yesod-auth-sample-0.1.0.0...\nyesod-auth-sample-0.1.0.0: build (exe)\nPreprocessing executable 'yesod-auth-sample' for yesod-auth-sample-0.1.0.0...\n[1 of 1] Compiling Main             ( yesod-auth-sample.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample-tmp/Main.o )\nLinking .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample ...\nyesod-auth-sample-0.1.0.0: copy/register\nInstalling executable(s) in\n/media/Data2/Gitrepo/yesod-authentication-example/.stack-work/install/x86_64-linux/lts-3.11/7.10.2/bin\n\nGoogleEmail2\u7d4c\u7531\u3067\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u308c\u3070Just\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308bmaid\u306e\u6587\u5b57\u5217\u304c\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u307e\u3068\u3081\nYesod\u306e\u8a8d\u8a3c\u5468\u308a\u306e\u89e3\u8aac\u3092\u8a66\u307f\u307e\u3057\u305f\u3002Yesod\u306eScaffold\u306b\u3088\u308b\u89e3\u8aac\u3068\u30d5\u30a1\u30a4\u30eb\u4e00\u679a\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u308b\u89e3\u8aac\u3068\u3069\u3061\u3089\u306e\u65b9\u91dd\u3067\u884c\u3046\u304b\u3092\u60a9\u307f\u307e\u3057\u305f\u304c\u3001\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30eb\u4e00\u679a\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u89e3\u8aac\u3068\u3057\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306eYesod\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7d44\u307f\u8fbc\u3093\u3067\u307f\u305f\u5b9f\u969b\u306e\u4f8b\u306f\u3053\u3061\u30892\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u89e3\u8aac\u306b\u7528\u3044\u305f\u30b3\u30fc\u30c9\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u30893\u3067\u3059\u3002\n\n\n\n\nYOUR_CLIENT_ID\u3068YOUR_CLIENT_SECRET\u306fGoogle\u306e\u30c7\u30a3\u30d9\u30ed\u30c3\u30d1\u30fc\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u5024\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u00a0\u21a9\n\n\nhttps://github.com/cosmo0920/Ahblog/compare/13c2691421...1b11b4d\u00a0\u21a9\n\n\nhttps://github.com/cosmo0920/yesod-authentication-example\u00a0\u21a9\n\n\n\n## \u306f\u3058\u3081\u306b\n\nYesod\u306f\u30d5\u30eb\u30b9\u30bf\u30c3\u30af\u306eWeb Application Framework\u3067\u3042\u308b\u305f\u3081\u3001\u30ed\u30b0\u30a4\u30f3\u30fb\u30ed\u30b0\u30a2\u30a6\u30c8\u306e\u6a5f\u69cb\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306e\u3067\u304d\u308b\u62e1\u5f35\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nYesod\u3067\u306f\u57fa\u672c\u7684\u306b `Yesod.Auth` \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u305d\u306e\u62e1\u5f35\u306b\u4e57\u3063\u304b\u3063\u305f\u5f62\u3067\u8a8d\u8a3c\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n## \u3072\u306a\u5f62\n\n\u307e\u305a\u306f\u3001\u3072\u306a\u5f62\u3068\u3057\u3066\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n#### stack.yaml:\n\n```yaml\nresolver: lts-6.27\n\npackages:\n  - '.'\n\nextra-deps:\n  - load-env-0.1.1\n\nflags: {}\n\nextra-package-dbs: []\n```\n\n#### yesod-auth-sample.cabal:\n\n```\nname:              yesod-auth-sample\nversion:           0.1.0.0\ncabal-version:     >= 1.8\nbuild-type:        Simple\n\nFlag dev\n    Description:   Turn on development settings, like auto-reload templates.\n    Default:       False\n\nexecutable         yesod-auth-sample\n    main-is:           yesod-auth-sample.hs\n    hs-source-dirs:    .\n    build-depends:     base\n                     , yesod                         >= 1.4        && < 1.5\n                     , yesod-core                    >= 1.4        && < 1.5\n                     , yesod-auth                    >= 1.4        && < 1.5\n                     , yesod-form                    >= 1.3        && < 1.5\n                     , template-haskell\n                     , text                          >= 0.11       && < 2.0\n                     , shakespeare                   >= 2.0        && < 2.1\n                     , http-conduit                  >= 2.1        && < 2.2\n                     , data-default\n                     , conduit                       >= 1.0        && < 2.0\n                     , load-env\n\n    ghc-options:       -threaded -O2\n```\n\n#### yesod-auth-sample.hs:\n\n```haskell\n{-# LANGUAGE MultiParamTypeClasses #-}\n{-# LANGUAGE OverloadedStrings     #-}\n{-# LANGUAGE QuasiQuotes           #-}\n{-# LANGUAGE TemplateHaskell       #-}\n{-# LANGUAGE TypeFamilies          #-}\nimport           Data.Default                (def)\nimport           Data.Text                   (Text)\nimport           Network.HTTP.Client.Conduit (Manager, newManager)\nimport           Yesod\nimport           Yesod.Auth\nimport           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n\ndata App = App\n    { httpManager :: Manager\n    }\n\nmkYesod \"App\" [parseRoutes|\n/ HomeR GET\n/auth AuthR Auth getAuth\n|]\n\ninstance Yesod App where\n    -- Note: In order to log in with BrowserID, you must correctly\n    -- set your hostname here.\n    approot = ApprootStatic \"http://localhost:3000\"\n\ninstance YesodAuth App where\n    type AuthId App = Text\n    getAuthId = return . Just . credsIdent\n\n    loginDest _ = HomeR\n    logoutDest _ = HomeR\n\n    authPlugins m =\n        [ authOpenId Claimed []\n        ]\n\n    authHttpManager = httpManager\n\n    -- The default maybeAuthId assumes a Persistent database. We're going for a\n    -- simpler AuthId, so we'll just do a direct lookup in the session.\n    maybeAuthId = lookupSession \"_ID\"\n\ninstance RenderMessage App FormMessage where\n    renderMessage _ _ = defaultFormMessage\n\ngetHomeR :: Handler Html\ngetHomeR = do\n    maid <- maybeAuthId\n    defaultLayout\n        [whamlet|\n            <p>Your current auth ID: #{show maid}\n            $maybe _ <- maid\n                <p>\n                    <a href=@{AuthR LogoutR}>Logout\n            $nothing\n                <p>\n                    <a href=@{AuthR LoginR}>Go to the login page\n        |]\n\nmain :: IO ()\nmain = do\n    man <- newManager\n    warp 3000 $ App man\n```\n\n\u4e0a\u8a18\u30d5\u30a1\u30a4\u30eb\u3092\u540c\u3058\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```\n% ls\nyesod-auth-sample.cabal    stack.yaml\nyesod-auth-sample.hs\n````\nstack\u3092\u7528\u3044\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```bash\n% stack build\nyesod-auth-sample-0.1.0.0: configure (exe)\nConfiguring yesod-auth-sample-0.1.0.0...\nyesod-auth-sample-0.1.0.0: build (exe)\nPreprocessing executable 'yesod-auth-sample' for yesod-auth-sample-0.1.0.0...\n[1 of 1] Compiling Main             ( yesod-auth-sample.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample-tmp/Main.o )\nLinking .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample ...\nyesod-auth-sample-0.1.0.0: copy/register\nInstalling executable(s) in\n/media/Data2/Gitrepo/yesod-authentication-example/.stack-work/install/x86_64-linux/lts-3.11/7.10.2/bin\n```\n\n\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n% stack exec yesod-auth-sample\n20/Dec/2016:23:10:59 +0900 [Info#yesod-core] Application launched @(yesod_83PxojfItaB8w9Rj9nFdZm:Yesod.Core.Dispatch ./Yesod/Core/Dispatch.hs:157:11)\n````\n\n\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\"Go to the login page\"\u306e\u6587\u5b57\u304c\u898b\u3048\u307e\u3059\u3002\n\n![Screenshot from 2016-12-20 23:13:34.png](https://qiita-image-store.s3.amazonaws.com/0/42706/1e48b721-fe47-9002-86b1-20a0db070d7d.png)\n\n\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\n\n![Screenshot from 2016-12-20 23:13:17.png](https://qiita-image-store.s3.amazonaws.com/0/42706/ae1f3d13-0197-8337-836e-15fa7cbdda1b.png)\n\nyahoo.com\u3067OpenID\u8a8d\u8a3c\u3092\u8a66\u307f\u308b\u3068\u3001Top page\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u3001Just\u306e\u3042\u3068\u306e\u6587\u5b57\u5217\u306bmaid\u304c\u5165\u3063\u3066\u304d\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u307c\u304b\u3057\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\n![Screenshot from 2016-12-20 23:18:36.png](https://qiita-image-store.s3.amazonaws.com/0/42706/ae1d855b-cb23-b645-333e-a8dbff08e410.png)\n\nYesod\u306e\u8a8d\u8a3c\u306fOpenID\u4ee5\u5916\u306b\u3082GoogleEmail2\u7b49\u304c\u3042\u308a\u307e\u3059\u3002\u306a\u304a\u3001Yesod 1.2\u6642\u4ee3\u304b\u3089Yesod\u306b\u6163\u308c\u89aa\u3057\u3093\u3067\u3044\u308b\u65b9\u3005\u306b\u306f\u304a\u306a\u3058\u307f\u306e `Yesod.Auth.BrowserID` (Mozilla Persona) \u3084 `Yesod.Auth.GoogleEmail` \u306f\u975e\u63a8\u5968\u3068\u306a\u308a\u3001\u65e2\u306b\u8a8d\u8a3c\u306b\u7528\u3044\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u3063\u3066\u3044\u308b\u4e8b\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n## GoogleEmail2\n\nOpenID\u3067\u306e\u8a8d\u8a3c\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u306emaid\u306b\u8a8d\u8a3c\u30c8\u30fc\u30af\u30f3\u304c\u5165\u3063\u3066\u304f\u308b\u305f\u3081\u3001\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u3088\u3063\u3066\u7ba1\u7406\u8005\u304b\u305d\u3046\u3067\u306a\u3044\u304b\u3092\u5206\u3051\u308b\u51e6\u7406\u306b\u306f\u4e0d\u5411\u304d\u3067\u3057\u3087\u3046\u3002GoogleEmail2\u3067\u306fmaid\u306e\u60c5\u5831\u3068\u3057\u3066\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001GoogleEmail2\u3092\u4f7f\u3063\u3066\u578b\u3060\u3051\u3092\u5408\u308f\u305b\u3066\u307f\u307e\u3059\u3002\u3053\u306e\u6642\u70b9\u3067\u306fGoogle\u306e\u8a8d\u8a3c\u57fa\u76e4\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8ID\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u306e\u60c5\u5831\u304c\u4e0d\u8db3\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8a8d\u8a3c\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u6539\u5909\u3057\u307e\u3059\u3002\n\n```diff\ndiff --git a/yesod-auth-sample.hs b/yesod-auth-sample.hs\nindex 0a2a96c..3c5d0cd 100644\n--- a/yesod-auth-sample.hs\n+++ b/yesod-auth-sample.hs\n@@ -8,8 +8,17 @@ import           Data.Text                   (Text)\n import           Network.HTTP.Client.Conduit (Manager, newManager)\n import           Yesod\n import           Yesod.Auth\n+import           Yesod.Auth.GoogleEmail2\n import           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n \n+-- Replace with Google client ID.\n+clientId :: Text\n+clientId = \"\"\n+\n+-- Replace with Google secret ID.\n+clientSecret :: Text\n+clientSecret = \"\"\n+\n data App = App\n     { httpManager :: Manager\n     }\n@@ -33,6 +42,7 @@ instance YesodAuth App where\n \n     authPlugins m =\n         [ authOpenId Claimed []\n+        , authGoogleEmail clientId clientSecret\n         ]\n \n     authHttpManager = httpManager\n```\n\n\u3059\u308b\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306bLogin via Google\u306e\u30ea\u30f3\u30af\u304c\u51fa\u73fe\u3057\u307e\u3059\u3002\n\n## Yesod\u306e\u8a8d\u8a3c\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\nYesod\u306e\u8a8d\u8a3c\u5468\u308a\u306fHackage\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001YesodAuth\u578b\u30af\u30e9\u30b9\u306e [authPlugins :: master -> [AuthPlugin master]]( https://hackage.haskell.org/package/yesod-auth-1.4.15/docs/Yesod-Auth.html#v:authPlugins)\u30e1\u30bd\u30c3\u30c9\u306e `[AuthPlugin master]` \u90e8\u5206\u306b\u5165\u308a\u8fbc\u3080\u5f62\u3067\u4e0e\u3048\u3066\u3084\u308b\u3068\u826f\u3044\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u3001`Yesod.Auth.OpenId` \u3068 `Yesod.Auth.GoogleEmail2` \u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001`authGoogleEmail` \u95a2\u6570\u3068 `authOpenId` \u95a2\u6570\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u30b7\u30b0\u30cd\u30c1\u30e3\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\n```haskell\nauthGoogleEmail :: YesodAuth m\n                => Text -- ^ client ID\n                -> Text -- ^ client secret\n                -> AuthPlugin m\n```\n\n```haskell\nauthOpenId :: YesodAuth master\n           => IdentifierType\n           -> [(Text, Text)] -- ^ extension fields\n           -> AuthPlugin master\n```\n\n\u3069\u3061\u3089\u3082 `AuthPlugin master` \u3092\u8fd4\u3059\u95a2\u6570\u3068\u3057\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002authPlugins\u95a2\u6570\u306b\u3053\u308c\u3089\u306eYesod\u306e\u8a8d\u8a3c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u60c5\u5831\u3092\u914d\u5217\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u3067\u578b\u304c\u5408\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n## \u767a\u5c55\u7de8\n\n\u3053\u3053\u307e\u3067\u306fYesod\u3067\u306e\u8a8d\u8a3c\u306e\u4ed5\u7d44\u307f\u306e\u3042\u3089\u307e\u3057\u3092\u8fbf\u308a\u307e\u3057\u305f\u3002\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c8\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u671b\u307e\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u3053\u3067\u306fdotenv\u3068\u540c\u7b49\u306e\u6a5f\u80fd\u3092\u6301\u3063\u305f[load-env](https://github.com/pbrisbin/load-env)\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u3044\u3066\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u5b9f\u884c\u6642\u306b\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```diff\ndiff --git a/yesod-auth-sample.hs b/yesod-auth-sample.hs\nindex 3c5d0cd..ce3f086 100644\n--- a/yesod-auth-sample.hs\n+++ b/yesod-auth-sample.hs\n\n@@ -10,17 +10,18 @@ import           Yesod\n import           Yesod.Auth\n import           Yesod.Auth.GoogleEmail2\n import           Yesod.Auth.OpenId           (authOpenId, IdentifierType (Claimed))\n+import           LoadEnv\n+import           System.Environment          (getEnv)\n+import qualified Data.Text as T\n \n--- Replace with Google client ID.\n-clientId :: Text\n-clientId = \"\"\n-\n--- Replace with Google secret ID.\n-clientSecret :: Text\n-clientSecret = \"\"\n+data GoogleLoginKeys = GoogleLoginKeys\n+    { googleLoginClientId :: Text\n+    , googleLoginClientSecret :: Text\n+    }\n \n data App = App\n     { httpManager :: Manager\n+    , googleLoginKeys :: GoogleLoginKeys\n     }\n \n mkYesod \"App\" [parseRoutes|\n@@ -42,7 +43,7 @@ instance YesodAuth App where\n \n     authPlugins m =\n         [ authOpenId Claimed []\n-        , authGoogleEmail clientId clientSecret\n+        , authGoogleEmail (googleLoginClientId $ googleLoginKeys m) (googleLoginClientSecret $ googleLoginKeys m)\n         ]\n \n     authHttpManager = httpManager\n@@ -70,5 +71,15 @@ getHomeR = do\n \n main :: IO ()\n main = do\n+    loadEnv -- load from .env\n+    googleLoginKeys <- getGoogleLoginKeys\n+\n     man <- newManager\n-    warp 3000 $ App man\n+    warp 3000 $ App man googleLoginKeys\n+      where\n+        getGoogleLoginKeys :: IO GoogleLoginKeys\n+        getGoogleLoginKeys = GoogleLoginKeys\n+          <$> getEnvT \"GOOGLE_LOGIN_CLIENT_ID\"\n+          <*> getEnvT \"GOOGLE_LOGIN_CLIENT_SECRET\"\n+          where\n+            getEnvT = fmap T.pack . getEnv\n```\n\n\u307e\u305f\u3001.env\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067\u7528\u610f\u3057\u307e\u3059\u3002[^1]\n\n[^1]: YOUR_CLIENT_ID\u3068YOUR_CLIENT_SECRET\u306fGoogle\u306e\u30c7\u30a3\u30d9\u30ed\u30c3\u30d1\u30fc\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\u3057\u305f\u5024\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\nGOOGLE_LOGIN_CLIENT_ID=YOUR_CLIENT_ID\nGOOGLE_LOGIN_CLIENT_SECRET=YOUR_CLIENT_SECRET\n```\n\n\u3053\u3053\u307e\u3067\u306e\u5909\u66f4\u3092\u9069\u7528\u3057\u3001\u3082\u3046\u4e00\u5ea6stack\u3067\u30d3\u30eb\u30c9\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n```bash\n% stack build\nyesod-auth-sample-0.1.0.0: configure (exe)\nConfiguring yesod-auth-sample-0.1.0.0...\nyesod-auth-sample-0.1.0.0: build (exe)\nPreprocessing executable 'yesod-auth-sample' for yesod-auth-sample-0.1.0.0...\n[1 of 1] Compiling Main             ( yesod-auth-sample.hs, .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample-tmp/Main.o )\nLinking .stack-work/dist/x86_64-linux/Cabal-1.22.4.0/build/yesod-auth-sample/yesod-auth-sample ...\nyesod-auth-sample-0.1.0.0: copy/register\nInstalling executable(s) in\n/media/Data2/Gitrepo/yesod-authentication-example/.stack-work/install/x86_64-linux/lts-3.11/7.10.2/bin\n```\n\nGoogleEmail2\u7d4c\u7531\u3067\u30ed\u30b0\u30a4\u30f3\u304c\u3067\u304d\u308c\u3070Just\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308bmaid\u306e\u6587\u5b57\u5217\u304c\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n## \u307e\u3068\u3081\n\nYesod\u306e\u8a8d\u8a3c\u5468\u308a\u306e\u89e3\u8aac\u3092\u8a66\u307f\u307e\u3057\u305f\u3002Yesod\u306eScaffold\u306b\u3088\u308b\u89e3\u8aac\u3068\u30d5\u30a1\u30a4\u30eb\u4e00\u679a\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u308b\u89e3\u8aac\u3068\u3069\u3061\u3089\u306e\u65b9\u91dd\u3067\u884c\u3046\u304b\u3092\u60a9\u307f\u307e\u3057\u305f\u304c\u3001\u8aac\u660e\u3092\u7c21\u5358\u306b\u3059\u308b\u305f\u3081\u306b\u30d5\u30a1\u30a4\u30eb\u4e00\u679a\u306e\u30b9\u30b1\u30eb\u30c8\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u306e\u89e3\u8aac\u3068\u3057\u307e\u3057\u305f\u3002\n\n\u5b9f\u969b\u306eYesod\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u7d44\u307f\u8fbc\u3093\u3067\u307f\u305f\u5b9f\u969b\u306e\u4f8b\u306f\u3053\u3061\u3089[^2]\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u89e3\u8aac\u306b\u7528\u3044\u305f\u30b3\u30fc\u30c9\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089[^3]\u3067\u3059\u3002\n\n[^2]: https://github.com/cosmo0920/Ahblog/compare/13c2691421...1b11b4d\n\n[^3]: https://github.com/cosmo0920/yesod-authentication-example\n", "tags": ["Haskell", "yesod"]}