{"tags": ["pyramid", "OAuth"], "context": "pyramid\u3067\u306etwitter OAuth\u306b\u624b\u63a2\u308a\u3067\u6311\u6226\u3057\u305f\u8a18\u9332\n\u53c2\u8003: http://peterhudec.github.io/authomatic/examples/pyramid-simple.html\n\n\u6e96\u5099\n\ntwitter\u306b\u30a2\u30d7\u30ea\u767b\u9332\nhttps://apps.twitter.com/\n\u3053\u3053\u3067\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3057\u3001Consumer Key, Consumer Secret\u3092\u53d6\u5f97\n\uff08\u96fb\u8a71\u756a\u53f7\u3092twitter\u306b\u767b\u9332\u3057\u3066\u3044\u306a\u3044\u4eba\u306f\u767b\u9332\u3092\u8981\u6c42\u3055\u308c\u308b\u306e\u3067\u6ce8\u610f\uff09\n\npyramid\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4eca\u56de\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.7a1\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n$ $VENV/bin/pcreate oauthtut\n\nOAuth\u306b\u306fAuthomatic\u3092\u5229\u7528\u3057\u305f\n\nsetup.py\n@@ -17,6 +17,7 @@ requires = [                                                                                                                                                                                                                \n     'transaction',                                                                                                                                                                                                                           \n     'zope.sqlalchemy',                                                                                                                                                                                                                       \n     'waitress',                                                                                                                                                                                                                              \n+    'authomatic',                                                                                                                                                                                                                            \n     ]                                                                                                                                                                                                                                        \n\n tests_require = [\n\n\n$ $VENV/bin/python setup.py develop\n\n\n\u30e1\u30f3\u30d0\u30fc\u7528\u30da\u30fc\u30b8\u4f5c\u6210\n/for_member\u4f5c\u6210\u3002\u5f8c\u3067\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u5834\u5408\u306e\u307f\u898b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\noauthtut/routes.py\n@@ -1,3 +1,4 @@                                                                                                                                                                                                                               \n def includeme(config):                                                                                                                                                                                                                       \n     config.add_static_view('static', 'static', cache_max_age=3600)                                                                                                                                                                           \n     config.add_route('home', '/')                                                                                                                                                                                                            \n+    config.add_route('for_member', '/for_member')\n\n\n\noauthtut/routes.py\n@@ -31,3 +31,10 @@ might be caused by one of the following things:                                                                                                                                                                            \n After you fix the problem, please restart the Pyramid application to                                                                                                                                                                         \n try it again.                                                                                                                                                                                                                                \n \"\"\"                                                                                                                                                                                                                                          \n+                                                                                                                                                                                                                                             \n+@view_config(route_name='for_member')                                                                                                                                                                                   \n+def for_member(request):                                                                                                                                                                                                                     \n+    response = Response()                                                                                                                                                                                                                    \n+    response.write(u'<h1>Hi {0}</h1>'.format(request.authenticated_userid))                                                                                                                                                                  \n+                                                                                                                                                                                                                                             \n+    return response\n\n\n\n\u30b5\u30fc\u30d0\u8d77\u52d5\n$ $VENV/bin/pserve development --reload\n\n\u3053\u306e\u6642\u70b9\u3067http://localhost:6543\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\nHi None\n\n\u3068\u8868\u793a\u3055\u308c\u308b\n\n\u8a8d\u8a3c\u306e\u8a2d\u5b9a\npyramid\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u5468\u308a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u304c\u3053\u306e\u6642\u70b9\u3067\u306fAuthomatic\u306f\u51fa\u3066\u3053\u305a\u5909\u66f4\u5185\u5bb9\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306e\u305d\u308c\u306b\u8fd1\u3044\n\noauthtut/models/__init__.py\n@@ -3,15 +3,31 @@ from sqlalchemy.orm import sessionmaker                                                                                                                                                                                     \n from sqlalchemy.orm import configure_mappers                                                                                                                                                                                                 \n import zope.sqlalchemy                                                                                                                                                                                                                       \n\n+from pyramid.authentication import AuthTktAuthenticationPolicy                                                                                                                                                                               \n+from pyramid.authorization import ACLAuthorizationPolicy                                                                                                                                                                                     \n+                                                                                                                                                                                                                                             \n # import or define all models here to ensure they are attached to the                                                                                                                                                                        \n # Base.metadata prior to any initialization routines                                                                                                                                                                                         \n from .mymodel import MyModel # flake8: noqa                                                                                                                                                                                                  \n\n+from .security import groupfinder                                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n # run configure_mappers after defining all of the models to ensure                                                                                                                                                                           \n # all relationships can be setup                                                                                                                                                                                                             \n configure_mappers()                                                                                                                                                                                                                          \n\n\n+from pyramid.security import (                                                                                                                                                                                                               \n+    Allow,                                                                                                                                                                                                                                   \n+    Everyone,                                                                                                                                                                                                                                \n+)                                                                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n+class RootFactory(object):                                                                                                                                                                                                                   \n+    __acl__ = [ (Allow, Everyone, 'guest'),                                                                                                                                                                                                  \n+                (Allow, 'group:member', 'member')]                                                                                                                                                                                           \n+    def __init__(self,request):                                                                                                                                                                                                              \n+        pass                                                                                                                                                                                                                                 \n+                                                                                                                                                                                                                                             \n def get_engine(settings, prefix='sqlalchemy.'):                                                                                                                                                                                              \n     return engine_from_config(settings, prefix)                                                                                                                                                                                              \n\n@@ -58,6 +74,15 @@ def includeme(config):                                                                                                                                                                                                     \n     \"\"\"                                                                                                                                                                                                                                      \n     settings = config.get_settings()                                                                                                                                                                                                         \n\n+    config.set_root_factory('oauthtut.models.RootFactory')                                                                                                                                                                                   \n+                                                                                                                                                                                                                                             \n+    authn_policy = AuthTktAuthenticationPolicy(                                                                                                                                                                                              \n+        'sosecret', callback=groupfinder, hashalg='sha512')                                                                                                                                                                                  \n+    authz_policy = ACLAuthorizationPolicy()                                                                                                                                                                                                  \n+                                                                                                                                                                                                                                             \n+    config.set_authentication_policy(authn_policy)                                                                                                                                                                                           \n+    config.set_authorization_policy(authz_policy)                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n     # use pyramid_tm to hook the transaction lifecycle to the request                                                                                                                                                                        \n     config.include('pyramid_tm')\n\n\nAuthTktAuthenticationPolicy\u751f\u6210\u6642\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308bgroupfinder\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u7d10\u4ed8\u3051\u308b\u3002\u4eca\u56de\u306f\u30ed\u30b0\u30a4\u30f3\u3055\u3048\u3067\u304d\u3066\u3044\u308c\u3070\u3001group:member\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u4e0e\u3048\u3066\u3044\u308b\u3002\n\noauth/models/security.py\nGROUPS = {'member':['group:member']}\n\ndef groupfinder(userid, request):\n    if userid:\n        return ['group:member']\n    return []\n\n\n/for_member\u3092\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\n\noauthtut/views/default.py\n@@ -32,7 +32,7 @@ After you fix the problem, please restart the Pyramid application to                                                                                                                                                        \n try it again.                                                                                                                                                                                                                                \n \"\"\"                                                                                                                                                                                                                                          \n\n-@view_config(route_name='for_member')                                                                                                                                                                                                        \n+@view_config(route_name='for_member', permission='member')                                                                                                                                                                                   \n def for_member(request):                                                                                                                                                                                                                     \n     response = Response()                                                                                                                                                                                                                    \n     response.write(u'<h1>Hi {0}</h1>'.format(request.authenticated_userid))\n\n\n\u3053\u308c\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3044\u3067/for_member\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068403\u3068\u306a\u308b\n\n\u30ed\u30b0\u30a4\u30f3/\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u8ffd\u52a0\n\u4ee5\u4e0b\u306e\u5909\u66f4\u3067/for_member\u30a2\u30af\u30bb\u30b9\u6642\u306bOAuth\u304c\u8d70\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\noauthtut/routes.py\n@@ -2,3 +2,5 @@ def includeme(config):                                                                                                                                                                                                        \n     config.add_static_view('static', 'static', cache_max_age=3600)                                                                                                                                                                           \n     config.add_route('home', '/')                                                                                                                                                                                                            \n     config.add_route('for_member', '/for_member')                                                                                                                                                                                            \n+    config.add_route('login', '/login')                                                                                                                                                                                                      \n+    config.add_route('logout', '/logout')\n\n\n\noauthtut/views/login.py\nfrom pyramid.response import Response\nfrom authomatic import Authomatic\nfrom authomatic.adapters import WebObAdapter\n\nfrom pyramid.httpexceptions import (\n    HTTPFound,\n    HTTPForbidden,\n    HTTPBadGateway,\n)\n\nfrom pyramid.view import (\n    view_config,\n    forbidden_view_config,\n)\n\nfrom pyramid.security import (\n    remember,\n    forget,\n)\n\nfrom ..config import CONFIG\n\nauthomatic = Authomatic(config=CONFIG, secret='some random secret string')\n\n@view_config(route_name='login')\n@forbidden_view_config()\ndef login(request):\n    response = Response()\n\n    login_url = request.route_url('login')\n    referrer = request.url\n    came_from = request.params.get('came_from', referrer)\n\n    result = authomatic.login(WebObAdapter(request, response), 'tw')\n\n    if result:\n        if result.error:\n            return HTTPBadGateway()\n        elif result.user:\n            if not (result.user.name and result.user.id):\n                result.user.update()\n\n            headers = remember(request, result.user.id)\n            return HTTPFound(location=came_from,\n                             headers=headers)\n\n    return response\n\n@view_config(route_name='logout')\ndef logout(request):\n    headers = forget(request)\n    return HTTPFound(location = request.route_url('home'),\n                     headers = headers)\n\n\n\noauthtut/config.py\nfrom authomatic.providers import oauth1\n\nCONFIG = {\n    'tw': {\n        'class_': oauth1.Twitter,\n\n        'consumer_key': 'XXXXXXXXXXXXXXXXXXXXXX',\n        'consumer_secret': 'XXXXXXXXXXXXXXXXXXXXXX',\n    },\n}\n\n\n\npyramid\u3067\u306etwitter OAuth\u306b\u624b\u63a2\u308a\u3067\u6311\u6226\u3057\u305f\u8a18\u9332\n\n\u53c2\u8003: http://peterhudec.github.io/authomatic/examples/pyramid-simple.html\n\n# \u6e96\u5099\n\n## twitter\u306b\u30a2\u30d7\u30ea\u767b\u9332\nhttps://apps.twitter.com/\n\u3053\u3053\u3067\u30a2\u30d7\u30ea\u3092\u767b\u9332\u3057\u3001Consumer Key, Consumer Secret\u3092\u53d6\u5f97\n\uff08\u96fb\u8a71\u756a\u53f7\u3092twitter\u306b\u767b\u9332\u3057\u3066\u3044\u306a\u3044\u4eba\u306f\u767b\u9332\u3092\u8981\u6c42\u3055\u308c\u308b\u306e\u3067\u6ce8\u610f\uff09\n\n\n## [pyramid\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb](http://docs.pylonsproject.org/projects/pyramid/en/latest/quick_tutorial/requirements.html)\n\n\u4eca\u56de\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.7a1\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n```bash\n$ $VENV/bin/pcreate oauthtut\n```\n\nOAuth\u306b\u306f[Authomatic](http://peterhudec.github.io/authomatic/index.html)\u3092\u5229\u7528\u3057\u305f\n\n```diff:setup.py\n@@ -17,6 +17,7 @@ requires = [                                                                                                                                                                                                                \n     'transaction',                                                                                                                                                                                                                           \n     'zope.sqlalchemy',                                                                                                                                                                                                                       \n     'waitress',                                                                                                                                                                                                                              \n+    'authomatic',                                                                                                                                                                                                                            \n     ]                                                                                                                                                                                                                                        \n                                                                                                                                                                                                                                              \n tests_require = [\n```\n\n```bash\n$ $VENV/bin/python setup.py develop\n```\n\n# \u30e1\u30f3\u30d0\u30fc\u7528\u30da\u30fc\u30b8\u4f5c\u6210\n\n`/for_member`\u4f5c\u6210\u3002\u5f8c\u3067\u30ed\u30b0\u30a4\u30f3\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u5834\u5408\u306e\u307f\u898b\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n```diff:oauthtut/routes.py\n@@ -1,3 +1,4 @@                                                                                                                                                                                                                               \n def includeme(config):                                                                                                                                                                                                                       \n     config.add_static_view('static', 'static', cache_max_age=3600)                                                                                                                                                                           \n     config.add_route('home', '/')                                                                                                                                                                                                            \n+    config.add_route('for_member', '/for_member')\n```\n\n```diff:oauthtut/routes.py\n@@ -31,3 +31,10 @@ might be caused by one of the following things:                                                                                                                                                                            \n After you fix the problem, please restart the Pyramid application to                                                                                                                                                                         \n try it again.                                                                                                                                                                                                                                \n \"\"\"                                                                                                                                                                                                                                          \n+                                                                                                                                                                                                                                             \n+@view_config(route_name='for_member')                                                                                                                                                                                   \n+def for_member(request):                                                                                                                                                                                                                     \n+    response = Response()                                                                                                                                                                                                                    \n+    response.write(u'<h1>Hi {0}</h1>'.format(request.authenticated_userid))                                                                                                                                                                  \n+                                                                                                                                                                                                                                             \n+    return response\n```\n\n## \u30b5\u30fc\u30d0\u8d77\u52d5\n\n```base\n$ $VENV/bin/pserve development --reload\n```\n\n\u3053\u306e\u6642\u70b9\u3067`http://localhost:6543`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\n\n```\nHi None\n```\n\n\u3068\u8868\u793a\u3055\u308c\u308b\n\n# \u8a8d\u8a3c\u306e\u8a2d\u5b9a\n\npyramid\u306b\u5bfe\u3057\u3066\u8a8d\u8a3c\u5468\u308a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u304c\u3053\u306e\u6642\u70b9\u3067\u306fAuthomatic\u306f\u51fa\u3066\u3053\u305a\u5909\u66f4\u5185\u5bb9\u306f[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://docs.pylonsproject.org/projects/pyramid/en/latest/tutorials/wiki2/authorization.html)\u306e\u305d\u308c\u306b\u8fd1\u3044\n\n```diff:oauthtut/models/__init__.py\n@@ -3,15 +3,31 @@ from sqlalchemy.orm import sessionmaker                                                                                                                                                                                     \n from sqlalchemy.orm import configure_mappers                                                                                                                                                                                                 \n import zope.sqlalchemy                                                                                                                                                                                                                       \n                                                                                                                                                                                                                                              \n+from pyramid.authentication import AuthTktAuthenticationPolicy                                                                                                                                                                               \n+from pyramid.authorization import ACLAuthorizationPolicy                                                                                                                                                                                     \n+                                                                                                                                                                                                                                             \n # import or define all models here to ensure they are attached to the                                                                                                                                                                        \n # Base.metadata prior to any initialization routines                                                                                                                                                                                         \n from .mymodel import MyModel # flake8: noqa                                                                                                                                                                                                  \n                                                                                                                                                                                                                                              \n+from .security import groupfinder                                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n # run configure_mappers after defining all of the models to ensure                                                                                                                                                                           \n # all relationships can be setup                                                                                                                                                                                                             \n configure_mappers()                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                              \n                                                                                                                                                                                                                                              \n+from pyramid.security import (                                                                                                                                                                                                               \n+    Allow,                                                                                                                                                                                                                                   \n+    Everyone,                                                                                                                                                                                                                                \n+)                                                                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n+class RootFactory(object):                                                                                                                                                                                                                   \n+    __acl__ = [ (Allow, Everyone, 'guest'),                                                                                                                                                                                                  \n+                (Allow, 'group:member', 'member')]                                                                                                                                                                                           \n+    def __init__(self,request):                                                                                                                                                                                                              \n+        pass                                                                                                                                                                                                                                 \n+                                                                                                                                                                                                                                             \n def get_engine(settings, prefix='sqlalchemy.'):                                                                                                                                                                                              \n     return engine_from_config(settings, prefix)                                                                                                                                                                                              \n                                                                                                                                                                                                                                              \n@@ -58,6 +74,15 @@ def includeme(config):                                                                                                                                                                                                     \n     \"\"\"                                                                                                                                                                                                                                      \n     settings = config.get_settings()                                                                                                                                                                                                         \n                                                                                                                                                                                                                                              \n+    config.set_root_factory('oauthtut.models.RootFactory')                                                                                                                                                                                   \n+                                                                                                                                                                                                                                             \n+    authn_policy = AuthTktAuthenticationPolicy(                                                                                                                                                                                              \n+        'sosecret', callback=groupfinder, hashalg='sha512')                                                                                                                                                                                  \n+    authz_policy = ACLAuthorizationPolicy()                                                                                                                                                                                                  \n+                                                                                                                                                                                                                                             \n+    config.set_authentication_policy(authn_policy)                                                                                                                                                                                           \n+    config.set_authorization_policy(authz_policy)                                                                                                                                                                                            \n+                                                                                                                                                                                                                                             \n     # use pyramid_tm to hook the transaction lifecycle to the request                                                                                                                                                                        \n     config.include('pyramid_tm')\n```\n\n`AuthTktAuthenticationPolicy`\u751f\u6210\u6642\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b`groupfinder`\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u3068\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u7d10\u4ed8\u3051\u308b\u3002\u4eca\u56de\u306f\u30ed\u30b0\u30a4\u30f3\u3055\u3048\u3067\u304d\u3066\u3044\u308c\u3070\u3001`group:member`\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u4e0e\u3048\u3066\u3044\u308b\u3002\n\n```py3:oauth/models/security.py\nGROUPS = {'member':['group:member']}\n\ndef groupfinder(userid, request):\n    if userid:\n        return ['group:member']\n    return []\n```\n\n`/for_member`\u3092\u306e\u30d1\u30fc\u30df\u30c3\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3059\u308b\n\n```diff:oauthtut/views/default.py\n@@ -32,7 +32,7 @@ After you fix the problem, please restart the Pyramid application to                                                                                                                                                        \n try it again.                                                                                                                                                                                                                                \n \"\"\"                                                                                                                                                                                                                                          \n                                                                                                                                                                                                                                              \n-@view_config(route_name='for_member')                                                                                                                                                                                                        \n+@view_config(route_name='for_member', permission='member')                                                                                                                                                                                   \n def for_member(request):                                                                                                                                                                                                                     \n     response = Response()                                                                                                                                                                                                                    \n     response.write(u'<h1>Hi {0}</h1>'.format(request.authenticated_userid))\n```\n\n\u3053\u308c\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3044\u3067`/for_member`\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068403\u3068\u306a\u308b\n\n# \u30ed\u30b0\u30a4\u30f3/\u30ed\u30b0\u30a2\u30a6\u30c8\u51e6\u7406\u8ffd\u52a0\n\n\u4ee5\u4e0b\u306e\u5909\u66f4\u3067`/for_member`\u30a2\u30af\u30bb\u30b9\u6642\u306bOAuth\u304c\u8d70\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n````diff:oauthtut/routes.py\n@@ -2,3 +2,5 @@ def includeme(config):                                                                                                                                                                                                        \n     config.add_static_view('static', 'static', cache_max_age=3600)                                                                                                                                                                           \n     config.add_route('home', '/')                                                                                                                                                                                                            \n     config.add_route('for_member', '/for_member')                                                                                                                                                                                            \n+    config.add_route('login', '/login')                                                                                                                                                                                                      \n+    config.add_route('logout', '/logout')\n```\n\n```py3:oauthtut/views/login.py\nfrom pyramid.response import Response\nfrom authomatic import Authomatic\nfrom authomatic.adapters import WebObAdapter\n\nfrom pyramid.httpexceptions import (\n    HTTPFound,\n    HTTPForbidden,\n    HTTPBadGateway,\n)\n\nfrom pyramid.view import (\n    view_config,\n    forbidden_view_config,\n)\n\nfrom pyramid.security import (\n    remember,\n    forget,\n)\n\nfrom ..config import CONFIG\n\nauthomatic = Authomatic(config=CONFIG, secret='some random secret string')\n\n@view_config(route_name='login')\n@forbidden_view_config()\ndef login(request):\n    response = Response()\n\n    login_url = request.route_url('login')\n    referrer = request.url\n    came_from = request.params.get('came_from', referrer)\n\n    result = authomatic.login(WebObAdapter(request, response), 'tw')\n\n    if result:\n        if result.error:\n            return HTTPBadGateway()\n        elif result.user:\n            if not (result.user.name and result.user.id):\n                result.user.update()\n\n            headers = remember(request, result.user.id)\n            return HTTPFound(location=came_from,\n                             headers=headers)\n\n    return response\n\n@view_config(route_name='logout')\ndef logout(request):\n    headers = forget(request)\n    return HTTPFound(location = request.route_url('home'),\n                     headers = headers)\n```\n\n```py3:oauthtut/config.py\nfrom authomatic.providers import oauth1\n\nCONFIG = {\n    'tw': {\n        'class_': oauth1.Twitter,\n\n        'consumer_key': 'XXXXXXXXXXXXXXXXXXXXXX',\n        'consumer_secret': 'XXXXXXXXXXXXXXXXXXXXXX',\n    },\n}\n```\n"}