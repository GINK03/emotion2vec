{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nVisual Studio \u3092\u4f7f\u3048\u3070 Web \u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u52d5\u4f5c\u3059\u308b JavaScript \u304b\u3089 Web \u30b5\u30fc\u30d0\u30fc\u4e0a\u306b\u3042\u308b C# \u306e\u30b3\u30fc\u30c9(\u30e1\u30bd\u30c3\u30c9)\u3092\u5bb9\u6613\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u3001\u7c21\u5358\u306b\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u30ea\u30e2\u30fc\u30c8\u547c\u3073\u51fa\u3057(Ajax \u547c\u3073\u51fa\u3057)\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\njQuery \u304b\u3089 C# \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u57fa\u672c\u7684\u306a\u3084\u308a\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\nAjax+JSONP\u3067\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u306b\u5916\u90e8API\u3068\u9023\u643a\u3059\u308b\u65b9\u6cd5\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\u4eca\u56de\u306f\u3001\u30ec\u30b3\u30fc\u30c9\u306e\u914d\u5217\u3092\u8fd4\u3059 C# \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\n\u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\nCREATE TABLE [Employees] (\n  [Employee ID] int IDENTITY (1,1) NOT NULL\n, [Last Name] nvarchar(20) NOT NULL\n, [First Name] nvarchar(10) NOT NULL\n, [Title] nvarchar(30) NULL\n, [Birth Date] datetime NULL\n, [Hire Date] datetime NULL\n, [Address] nvarchar(60) NULL\n, [City] nvarchar(15) NULL\n, [Region] nvarchar(15) NULL\n, [Postal Code] nvarchar(10) NULL\n, [Country] nvarchar(15) NULL\n, [Home Phone] nvarchar(24) NULL\n, [Extension] nvarchar(4) NULL\n, [Photo] image NULL\n, [Notes] ntext NULL\n, [Reports To] int NULL\n);\n\n\n\u30ec\u30b3\u30fc\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\n\u30af\u30e9\u30b9(RecEmployee)\u306e\u5b9a\u7fa9\u3067\u3059\u3002\u30af\u30e9\u30b9\u540d\u306b DataContract \u5c5e\u6027\u304c\u3064\u3051\u3066\u3042\u308a\u307e\u3059\u3002\u5404\u30d5\u30a3\u30fc\u30eb\u30c9(\u30d7\u30ed\u30d1\u30c6\u30a3)\u306b\u306f DataMember \u5c5e\u6027\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u30ec\u30b3\u30fc\u30c9\u306e\u578b\u3068\u3057\u3066jQuery (JavaScript) \u3068 C# \u306e\u9593\u3067\u30c7\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u3092\u884c\u3044\u307e\u3059\u3002\n\nRecEmployeecs\nusing System;\nusing System.Diagnostics;\nusing System.Reflection;\nusing System.Runtime.Serialization;\n\nnamespace Northwind\n{\n    [DataContract]\n    public class RecEmployee\n    {\n        public RecEmployee()\n        {\n        }\n        public RecEmployee(Employee e)\n        {\n            PropUtil.CopyToFrom(this, e);\n        }\n        [DataMember]\n        public int Employee_ID { get; set; }\n        [DataMember]\n        public string Last_Name { get; set; }\n        [DataMember]\n        public string First_Name { get; set; }\n        [DataMember]\n        public string Title { get; set; }\n        [DataMember]\n        public Nullable<System.DateTime> Birth_Date { get; set; }\n        [DataMember]\n        public Nullable<System.DateTime> Hire_Date { get; set; }\n        [DataMember]\n        public string Address { get; set; }\n        [DataMember]\n        public string City { get; set; }\n        [DataMember]\n        public string Region { get; set; }\n        [DataMember]\n        public string Postal_Code { get; set; }\n        [DataMember]\n        public string Country { get; set; }\n        [DataMember]\n        public string Home_Phone { get; set; }\n        [DataMember]\n        public string Extension { get; set; }\n        //[DataMember]\n        //public byte[] Photo { get; set; }\n        [DataMember]\n        public string Notes { get; set; }\n        [DataMember]\n        public Nullable<int> Reports_To { get; set; }\n    }\n    public class PropUtil\n    {\n        public static void CopyToFrom(object o1, object o2)\n        {\n            if (o1 == null) return;\n            if (o2 == null) return;\n            Type t1 = o1.GetType();\n            Type t2 = o2.GetType();\n            PropertyInfo[] members = t1.GetProperties();\n            foreach (PropertyInfo p in members)\n            {\n                try\n                {\n                    t1.InvokeMember(\n                        p.Name,\n                        BindingFlags.SetProperty,\n                        null,\n                        o1,\n                        new object[] {\n                        t2.InvokeMember(p.Name, BindingFlags.GetProperty, null, o2, null)\n                    });\n                }\n                catch (Exception /*ex*/)\n                {\n                    Debug.WriteLine(p.Name + \"\u306e\u30b3\u30d4\u30fc\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\");\n                }\n            }\n        }\n    }\n}\n\n\n\n\u547c\u3073\u51fa\u3055\u308c\u308b\u5074(C#)\u306e\u30b3\u30fc\u30c9\n\nService1.svc.cs\nusing System.Collections.Generic;\nusing System.ServiceModel;\nusing System.ServiceModel.Activation;\nusing System.ServiceModel.Web;\n\nnamespace Northwind\n{\n    [ServiceContract(Namespace = \"\")]\n    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]\n    [ServiceBehavior(IncludeExceptionDetailInFaults = true)]\n    public class Service1\n    {\n        // \u8ffd\u52a0\u306e\u64cd\u4f5c\u3092\u3053\u3053\u306b\u8ffd\u52a0\u3057\u3066\u3001[OperationContract] \u3068\u30de\u30fc\u30af\u3057\u3066\u304f\u3060\u3055\u3044\n        [OperationContract, WebInvoke(Method = \"GET\")]\n        public List<RecEmployee> SelectEmployees(int maxResults)\n        {\n            WebOperationContext.Current.OutgoingResponse.Headers.Add(\n                \"Cache-Control\", \"no-cache\");\n            System.Diagnostics.Debug.WriteLine(\"[maxResults]=\" + maxResults);\n            List<RecEmployee> result = new List<RecEmployee>();\n            int count = 0;\n            using (var db = new NorthwindEntities())\n            {\n                foreach (var emp in db.Employees)\n                {\n                    if (count >= maxResults) break;\n                    RecEmployee rec = new RecEmployee();\n                    PropUtil.CopyToFrom(rec, emp);\n                    result.Add(rec);\n                    count++;\n                    System.Diagnostics.Debug.WriteLine(\"[count]=\"+count);\n                }\n            }\n            return result;\n        }\n    }\n}\n\n\n\n\u547c\u3073\u51fa\u3059\u5074(JavaScript/jQuery)\u306e\u30b3\u30fc\u30c9\n\nViews/Home/Index.cshtml\n@{\n    ViewBag.Title = \"AJAX \u30c6\u30b9\u30c8\";\n}\n<h3>@ViewBag.Title</h3>\n<input id=\"buttonSelectEmployees\" type=\"button\" value=\"buttonSelectEmployees\" />\n<br />\n<b>\u623b\u308a\u5024</b><div id=\"result\"></div>\n@section scripts {\n<script>\n    function onSuccess(data) {\n        $(\"#result\").text(JSON.stringify(data.d));\n    }\n    function onError(xhr) {\n        alert(\"Error: \" + xhr.responseText);\n    }\n    $(\"#buttonSelectEmployees\").click(function () {\n        $.ajax({\n            type: \"GET\",\n            url: '@VirtualPathUtility.ToAbsolute(\"~/Service1.svc/SelectEmployees\")',\n            data: { maxResults: 5 },\n            success: onSuccess,\n            error: onError\n        });\n    });\n</script>\n}\n\n\n# \u306f\u3058\u3081\u306b\nVisual Studio \u3092\u4f7f\u3048\u3070 `Web \u30d6\u30e9\u30a6\u30b6`\u4e0a\u3067\u52d5\u4f5c\u3059\u308b JavaScript \u304b\u3089 `Web \u30b5\u30fc\u30d0\u30fc`\u4e0a\u306b\u3042\u308b C# \u306e\u30b3\u30fc\u30c9(\u30e1\u30bd\u30c3\u30c9)\u3092\u5bb9\u6613\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u5b9f\u969b\u306b\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u3001\u7c21\u5358\u306b\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u30ea\u30e2\u30fc\u30c8\u547c\u3073\u51fa\u3057(Ajax \u547c\u3073\u51fa\u3057)\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\n* jQuery \u304b\u3089 C# \u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u57fa\u672c\u7684\u306a\u3084\u308a\u65b9\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/akmiyoshi/items/16c4a65731f8ec32e233)\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n* Ajax+JSONP\u3067\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u306b\u5916\u90e8API\u3068\u9023\u643a\u3059\u308b\u65b9\u6cd5\u306f[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/akmiyoshi/items/64ea9c3b7d8ed0de4eb9)\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002\n\n* \u4eca\u56de\u306f\u3001\u30ec\u30b3\u30fc\u30c9\u306e\u914d\u5217\u3092\u8fd4\u3059 C# \u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u30b5\u30f3\u30d7\u30eb\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n# \u30c6\u30fc\u30d6\u30eb\u5b9a\u7fa9\n```sql\nCREATE TABLE [Employees] (\n  [Employee ID] int IDENTITY (1,1) NOT NULL\n, [Last Name] nvarchar(20) NOT NULL\n, [First Name] nvarchar(10) NOT NULL\n, [Title] nvarchar(30) NULL\n, [Birth Date] datetime NULL\n, [Hire Date] datetime NULL\n, [Address] nvarchar(60) NULL\n, [City] nvarchar(15) NULL\n, [Region] nvarchar(15) NULL\n, [Postal Code] nvarchar(10) NULL\n, [Country] nvarchar(15) NULL\n, [Home Phone] nvarchar(24) NULL\n, [Extension] nvarchar(4) NULL\n, [Photo] image NULL\n, [Notes] ntext NULL\n, [Reports To] int NULL\n);\n```\n\n# \u30ec\u30b3\u30fc\u30c9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b9a\u7fa9\n\u30af\u30e9\u30b9(RecEmployee)\u306e\u5b9a\u7fa9\u3067\u3059\u3002\u30af\u30e9\u30b9\u540d\u306b DataContract \u5c5e\u6027\u304c\u3064\u3051\u3066\u3042\u308a\u307e\u3059\u3002\u5404\u30d5\u30a3\u30fc\u30eb\u30c9(\u30d7\u30ed\u30d1\u30c6\u30a3)\u306b\u306f DataMember \u5c5e\u6027\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30af\u30e9\u30b9\u3092\u30ec\u30b3\u30fc\u30c9\u306e\u578b\u3068\u3057\u3066jQuery (JavaScript) \u3068 C# \u306e\u9593\u3067\u30c7\u30fc\u30bf\u306e\u53d7\u3051\u6e21\u3057\u3092\u884c\u3044\u307e\u3059\u3002\n\n```csharp:RecEmployeecs\nusing System;\nusing System.Diagnostics;\nusing System.Reflection;\nusing System.Runtime.Serialization;\n\nnamespace Northwind\n{\n    [DataContract]\n    public class RecEmployee\n    {\n        public RecEmployee()\n        {\n        }\n        public RecEmployee(Employee e)\n        {\n            PropUtil.CopyToFrom(this, e);\n        }\n        [DataMember]\n        public int Employee_ID { get; set; }\n        [DataMember]\n        public string Last_Name { get; set; }\n        [DataMember]\n        public string First_Name { get; set; }\n        [DataMember]\n        public string Title { get; set; }\n        [DataMember]\n        public Nullable<System.DateTime> Birth_Date { get; set; }\n        [DataMember]\n        public Nullable<System.DateTime> Hire_Date { get; set; }\n        [DataMember]\n        public string Address { get; set; }\n        [DataMember]\n        public string City { get; set; }\n        [DataMember]\n        public string Region { get; set; }\n        [DataMember]\n        public string Postal_Code { get; set; }\n        [DataMember]\n        public string Country { get; set; }\n        [DataMember]\n        public string Home_Phone { get; set; }\n        [DataMember]\n        public string Extension { get; set; }\n        //[DataMember]\n        //public byte[] Photo { get; set; }\n        [DataMember]\n        public string Notes { get; set; }\n        [DataMember]\n        public Nullable<int> Reports_To { get; set; }\n    }\n    public class PropUtil\n    {\n        public static void CopyToFrom(object o1, object o2)\n        {\n            if (o1 == null) return;\n            if (o2 == null) return;\n            Type t1 = o1.GetType();\n            Type t2 = o2.GetType();\n            PropertyInfo[] members = t1.GetProperties();\n            foreach (PropertyInfo p in members)\n            {\n                try\n                {\n                    t1.InvokeMember(\n                        p.Name,\n                        BindingFlags.SetProperty,\n                        null,\n                        o1,\n                        new object[] {\n                        t2.InvokeMember(p.Name, BindingFlags.GetProperty, null, o2, null)\n                    });\n                }\n                catch (Exception /*ex*/)\n                {\n                    Debug.WriteLine(p.Name + \"\u306e\u30b3\u30d4\u30fc\u306b\u5931\u6557\u3057\u307e\u3057\u305f\u3002\");\n                }\n            }\n        }\n    }\n}\n```\n\n# \u547c\u3073\u51fa\u3055\u308c\u308b\u5074(C#)\u306e\u30b3\u30fc\u30c9\n\n```csharp:Service1.svc.cs\nusing System.Collections.Generic;\nusing System.ServiceModel;\nusing System.ServiceModel.Activation;\nusing System.ServiceModel.Web;\n\nnamespace Northwind\n{\n    [ServiceContract(Namespace = \"\")]\n    [AspNetCompatibilityRequirements(RequirementsMode = AspNetCompatibilityRequirementsMode.Allowed)]\n    [ServiceBehavior(IncludeExceptionDetailInFaults = true)]\n    public class Service1\n    {\n        // \u8ffd\u52a0\u306e\u64cd\u4f5c\u3092\u3053\u3053\u306b\u8ffd\u52a0\u3057\u3066\u3001[OperationContract] \u3068\u30de\u30fc\u30af\u3057\u3066\u304f\u3060\u3055\u3044\n        [OperationContract, WebInvoke(Method = \"GET\")]\n        public List<RecEmployee> SelectEmployees(int maxResults)\n        {\n            WebOperationContext.Current.OutgoingResponse.Headers.Add(\n                \"Cache-Control\", \"no-cache\");\n            System.Diagnostics.Debug.WriteLine(\"[maxResults]=\" + maxResults);\n            List<RecEmployee> result = new List<RecEmployee>();\n            int count = 0;\n            using (var db = new NorthwindEntities())\n            {\n                foreach (var emp in db.Employees)\n                {\n                    if (count >= maxResults) break;\n                    RecEmployee rec = new RecEmployee();\n                    PropUtil.CopyToFrom(rec, emp);\n                    result.Add(rec);\n                    count++;\n                    System.Diagnostics.Debug.WriteLine(\"[count]=\"+count);\n                }\n            }\n            return result;\n        }\n    }\n}\n```\n\n# \u547c\u3073\u51fa\u3059\u5074(JavaScript/jQuery)\u306e\u30b3\u30fc\u30c9\n\n```html:Views/Home/Index.cshtml\n@{\n    ViewBag.Title = \"AJAX \u30c6\u30b9\u30c8\";\n}\n<h3>@ViewBag.Title</h3>\n<input id=\"buttonSelectEmployees\" type=\"button\" value=\"buttonSelectEmployees\" />\n<br />\n<b>\u623b\u308a\u5024</b><div id=\"result\"></div>\n@section scripts {\n<script>\n    function onSuccess(data) {\n        $(\"#result\").text(JSON.stringify(data.d));\n    }\n    function onError(xhr) {\n        alert(\"Error: \" + xhr.responseText);\n    }\n    $(\"#buttonSelectEmployees\").click(function () {\n        $.ajax({\n            type: \"GET\",\n            url: '@VirtualPathUtility.ToAbsolute(\"~/Service1.svc/SelectEmployees\")',\n            data: { maxResults: 5 },\n            success: onSuccess,\n            error: onError\n        });\n    });\n</script>\n}\n```\n", "tags": ["JavaScript", "C#", "ASP.NET", "jQuery", ".NET"]}