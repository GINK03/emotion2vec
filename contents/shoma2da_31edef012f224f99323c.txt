{"context": " More than 1 year has passed since last update.\u4eca\u5e74\u306eAdvent Calendar\u3001Swift\u3067\u7533\u3057\u8fbc\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u6700\u8fd1\u306f\u3082\u3063\u3071\u3089Android\u958b\u767a\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u7121\u7406\u3084\u308aAndroid\u95a2\u9023\u306e\u8a18\u4e8b\u306b\u6301\u3061\u8fbc\u3093\u3067\u3057\u307e\u304a\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nSwift\u3067Android??\n\u4eca\u5e74\u306e6\u6708\u306b\u767a\u8868\u3055\u308c\u305fSwift\u3001\u500b\u4eba\u7684\u306a\u6240\u611f\u3068\u3057\u3066\u306f\u8272\u3005\u306a\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u53d6\u308a\u3067\u3001\u826f\u3044\u610f\u5473\u3067\u7279\u5fb4\u304c\u306a\u304f\u3059\u3093\u306a\u308a\u3068\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u3068\u3066\u3082\u826f\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3093\u306aSwift\u3067Android\u304c\u66f8\u3051\u308b\uff1f\uff1f\n\u3055\u3059\u304c\u306b\u305d\u3053\u307e\u3067\u90fd\u5408\u3088\u304f\u306f\u3044\u304d\u307e\u305b\u3093...\u3002\n\u4eca\u56de\u3054\u7d39\u4ecb\u3059\u308b\u306e\u304cKotlin\uff08\u3053\u3068\u308a\u3093\uff09\u3068\u3044\u3046\u8a00\u8a9e\u3067\u3059\u3002\nSwift\u3068\u7d30\u304b\u306a\u8a18\u8ff0\u65b9\u6cd5\u306e\u9055\u3044\u3053\u305d\u3042\u308b\u3082\u306e\u306e\u3001\u8272\u3005\u306a\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u53d6\u308a\u3067\u3042\u308a\u3068\u3066\u3082\u4f3c\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\nKotlin\u3063\u3066\u3069\u3093\u306a\u8a00\u8a9e\uff1f\n\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f\u3053\u3061\u3089\u3067\u3059\u3002\nIntelliJ\u306e\u958b\u767a\u5143\u3067\u3042\u308b\u30b8\u30a7\u30c3\u30c8\u30d6\u30ec\u30fc\u30f3\u30ba\u793e\u3067\u958b\u767a\u3055\u308c\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\u578b\u63a8\u8ad6\u3084\u30af\u30ed\u30fc\u30b8\u30e3\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306a\u3069\u95a2\u6570\u578b\u306e\u7279\u5fb4\u3082\u968f\u6240\u306b\u53d6\u308a\u5165\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u8a00\u8a9e\u3067\u3059\u3002\n\nKotlin\u3067Android\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u306b\u306f\n\u3082\u306e\u3059\u3063\u3054\u3044\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\uff08\u521d\u3081\u3066\u306a\u3089\uff09Android Studio\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\nAndroid Studio\u3092\u7acb\u3061\u4e0a\u3052\u3066New Project\u3059\u308b\n\nKotlin\u306e\u5c0e\u5165\u65b9\u6cd5\u3092\u53c2\u8003\u306b\u3001build.gradle\u306b\u6570\u884c\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u8db3\u3059\nKotlin\u3092\u66f8\u3044\u3066\u5b9f\u884c\uff01\uff01\n\n\n\u8a00\u8a9e\u306e\u6bd4\u8f03\n\u305d\u308c\u3067\u306fSwift\u3068\u306e\u9055\u3044\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\nThe Swift Programming Language\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u6bd4\u8f03\u3057\u3066\u3044\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u5909\u6570\u5ba3\u8a00\n\u4e0d\u5909\u306e\u5024\u306e\u5ba3\u8a00\u304clet\u304bval\u304b\u306e\u9055\u3044\u3067\u3059\u3002\n\nSwift\n\nvar myVariable = 42\nmyVariable = 50\nlet myConstant = 42\n\n\nKotlin\n\nvar myVariable = 42\nmyVariable = 50\nval myConstant = 42\n\n\n\n\u6587\u5b57\u5217\u5185\u3067\u306e\u5909\u6570\u5c55\u958b\n\\\u304b$\u306e\u9055\u3044\u3067\u3059\u306d\n\nSwift\n\nlet apples = 3\nlet oranges = 5\nlet appleSummary = \"I have \\(apples) apples.\"\nlet fruitSummary = \"I have \\(apples + oranges) pieces of fruit.\"\n\n\nKotlin\n\nval apples = 3\nval oranges = 5\nval appleSummary = \"I have $apples apples.\"\nval fruitSummary = \"I have ${apples + oranges} pieces of fruit.\"\n\n\n\n\u914d\u5217\u3068\u8f9e\u66f8\u914d\u5217\n\u5c11\u3057\u3060\u3051\u9055\u3044\u307e\u3059\u306d\u3002\n\nSwift\n\nvar shoppingList = [\"catfish\", \"water\", \"tulips\", \"blue paint\"]\nshoppingList[1] = \"bottle of water\"\n\nvar occupations = [\n    \"Malcolm\": \"Captain\",\n    \"Kaylee\": \"Mechanic\",\n]\noccupations[\"Jayne\"] = \"Public Relations\u201d\n\n\nKotlin\n\nvar shoppingList = array(\"catfish\", \"water\", \"tulips\", \"blue paint\")\nshoppingList[1] = \"bottle of water\"\n\nvar occupations = hashMapOf(\n    \"Malcolm\" to \"Captain\",\n    \"Kaylee\" to \"Mechanic\"\n)\noccupations[\"Jayne\"] = \"Public Relations\"\n\n\n\nfor\nSwift\u306f\u5834\u6240\u306b\u3088\u3063\u3066\u306f()\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u304cKotlin\u3060\u3068\u57fa\u672c\u7684\u306b\u306f\u5fc5\u9808\u3067\u3059\u3002\n\nSwift\n\nlet individualScores = [75, 43, 103, 87, 12]\nvar teamScore = 0\nfor score in individualScores {\n    if score > 50 {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nteamScore\n\n\nKotlin\n\nval individualScores = listOf(75, 43, 103, 87, 12)\nvar teamScore = 0\nfor (score in individualScores) {\n    if (score > 50) {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nteamScore\n\n\n\nOptinal Value\n\u3053\u306e\u3042\u305f\u308a\u304b\u3089\u8a00\u8a9e\u306e\u7279\u5fb4\u304c\u51fa\u3066\u304d\u307e\u3059\u306d\u3002\nnull\u306b\u5bfe\u3059\u308b\u5bfe\u5fdc\u3068\u3057\u3066\u3069\u3061\u3089\u3082?\u3092\u4f7f\u3063\u305f\u6587\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nSwift\n\nvar optionalString: String? = \"Hello\"\noptionalString == nil\n\nvar optionalName: String? = \"John Appleseed\"\nvar greeting = \"Hello!\"\nif let name = optionalName {\n    greeting = \"Hello, \\(name)\"\n}\n\n\nKotlin\n\nvar optionalString: String? = \"Hello\"\noptionalString == null\n\nvar optionalName: String? = \"John Appleseed\"\nvar greeting = \"Hello!\"\nif (optionalName != null) {\n    greeting = \"Hello, $optionalName\"\n}\n\n\n\n\u5024\u306e\u675f\u7e1b\n\u3069\u3061\u3089\u3082\u307b\u307c\u540c\u3058\u3067\u3059\n\nSwift\n\nlet interestingNumbers = [\n    \"Prime\": [2, 3, 5, 7, 11, 13],\n    \"Fibonacci\": [1, 1, 2, 3, 5, 8],\n    \"Square\": [1, 4, 9, 16, 25],\n]\nvar largest = 0\nfor (kind, numbers) in interestingNumbers {\n    for number in numbers {\n        if number > largest {\n            largest = number\n        }\n    }\n}\nlargest\n\n\nKotlin\n\nval interestingNumbers = mapOf(\n    \"Prime\" to array(2, 3, 5, 7, 11, 13),\n    \"Fibonacci\" to array(1, 1, 2, 3, 5, 8),\n    \"Square\" to array(1, 4, 9, 16, 25)\n)\nvar largest = 0\nfor ((kind, numbers) in interestingNumbers) {\n    for (number in numbers) {\n        if (number > largest) {\n            largest = number\n        }\n    }\n}\nlargest\n\n\n\nRange\n\u5168\u304f\u4e00\u7dd2\u3067\u3059\n\nSwift\n\nvar firstForLoop = 0\nfor i in 0..3 {\n    firstForLoop += i\n}\nfirstForLoop\n\n\nKotlin\n\nvar firstForLoop = 0\nfor (i in (0..3)) {\n    firstForLoop += i\n}\nfirstForLoop\n\n\n\nFunction\n\u8fd4\u5374\u5024\u5468\u308a\u304c\u308f\u305a\u304b\u306b\u9055\u3044\u307e\u3059\u304c\u307b\u307c\u4e00\u7dd2\u3067\u3059\u306d\u3002\n\nSwift\n\nfunc greet(name: String, day: String) -> String {\n    return \"Hello \\(name), today is \\(day).\"\n}\ngreet(\"Bob\", \"Tuesday\")\n\n\nKotlin\n\nfun greet(name: String, day: String):String {\n    return \"Hello $name, today is $day.\"\n}\ngreet(\"Bob\", \"Tuesday\")\n\n\n\nFunction\u306e\u30cd\u30b9\u30c8\n\nSwift\n\n\u3069\u3061\u3089\u306e\u8a00\u8a9e\u3082function\u306e\u4e2d\u306bfunction\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\nfunc returnFifteen() -> Int {\n    var y = 10\n    func add() {\n        y += 5\n    }\n    add()\n    return y\n}\nreturnFifteen()\n\n\nKotlin\n\nfun returnFifteen():Int {\n    var y = 10\n    fun add() {\n        y += 5\n    }\n    add()\n    return y\n}\nreturnFifteen()\n\n\n\nFunction\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\u66f8\u304d\u65b9\u306f\u8272\u3005\u3068\u9055\u3063\u3066\u304d\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u540c\u3058\u3067\u3059\n\nSwift\n\nfunc hasAnyMatches(list: [Int], condition: Int -> Bool) -> Bool {\n    for item in list {\n        if condition(item) {\n            return true\n        }\n    }\n    return false\n}\nfunc lessThanTen(number: Int) -> Bool {\n    return number < 10\n}\nvar numbers = [20, 19, 7, 12]\nhasAnyMatches(numbers, lessThanTen)\n\n\nKotlin\n\nfun hasAnyMatches(list: Array<Int>, condition:(Int) -> Boolean): Boolean {\n    for (item in list) {\n        if (condition(item)) {\n            return true\n        }\n    }\n    return false\n}\nval lessThanTen:(Int) -> Boolean =  { number ->\n    number < 10\n}\nvar numbers = array(20, 19, 7, 12)\nhasAnyMatches(numbers, lessThanTen)\n\n\n\n\u7121\u540d\u95a2\u6570\n\u307b\u307c\u4e00\u7dd2\u3067\u3059\u306d\n\nSwift\n\nvar numbers = [20, 19, 7, 12]\nnumbers.map({\n    (number: Int) -> Int in\n    let result = 3 * number\n    return result\n})\n\n\nKotlin\n\nvar numbers = array(20, 19, 7, 12)\nnumbers.map({\n    val result = 3 * it\n    result\n})\n\n\n\n\u5358\u7d14\u306a\u30af\u30e9\u30b9\n\nSwift\n\nclass Shape {\n    var numberOfSides = 0\n    func simpleDescription() -> String {\n        return \"A shape with \\(numberOfSides) sides.\"\n    }\n}\nvar shape = Shape()\nshape.numberOfSides = 7\nvar shapeDescription = shape.simpleDescription()\n\n\nKotlin\n\nclass Shape {\n    var numberOfSides = 0\n    fun simpleDescription():String {\n        return \"A shape with $numberOfSides sides.\"\n    }\n}\nvar shape = Shape()\nshape.numberOfSides = 7\nvar shapeDescription = shape.simpleDescription()\n\n\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ed8\u304d\u30af\u30e9\u30b9\nKotlin\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30af\u30e9\u30b9\u540d\u306e\u76f4\u5f8c\u306b\u66f8\u3051\u308b\u306e\u3067\u7c21\u5358\u306a\u3082\u306e\u3067\u3042\u308c\u3070\u77ed\u304f\u306a\u308a\u307e\u3059\n\nSwift\n\nclass NamedShape {\n    var numberOfSides: Int = 0\n    var name: String\n\n    init(name: String) {\n        self.name = name\n    }\n\n    func simpleDescription() -> String {\n        return \"A shape with \\(numberOfSides) sides.\"\n    }\n}\n\n\nKotlin\n\nclass NamedShape(var name:String) {\n    var numberOfSides: Int = 0\n\n    fun simpleDescription():String {\n        return \"A shape with $numberOfSides sides.\"\n    }\n}\n\n\n\u307e\u3068\u3081\n\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u3042\u305f\u308a\u307e\u3067\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\u3002\nSwift\u3068Kotlin\u3001\u5229\u7528\u30b7\u30fc\u30f3\u306fiOS\u3068Android\u3068\u306a\u3063\u3066\u304a\u308a\u9055\u3063\u3066\u3044\u307e\u3059\u304c\u975e\u5e38\u306b\u4f3c\u305f\u3088\u3046\u306a\u7279\u5fb4\u3092\u6301\u3063\u305f\u8a00\u8a9e\u3067\u3057\u305f\u3002\n\u4eca\u56de\u306f\u7701\u304d\u307e\u3057\u305f\u304c\u7d99\u627f\u5468\u308a\u3084Function\u306e\u3082\u3046\u5c11\u3057\u8fbc\u307f\u5165\u3063\u305f\u3068\u3053\u308d\u3067\u3082\u8003\u3048\u65b9\u306f\u307b\u307c\u4e00\u7dd2\u306a\u306e\u3067\u3059\u3093\u306a\u308a\u3068\u5165\u3063\u3066\u3044\u3051\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3092\u6a5f\u306biOS\u306a\u307f\u306a\u3055\u307e\u304cAndroid\u306b\u3082\u3069\u3093\u3069\u3093\u3068\u624b\u3092\u5e83\u3052\u3066\u3044\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u305d\u308c\u3067\u306f\u307f\u306a\u3055\u307e\u826f\u3044\u304a\u5e74\u3092\uff01\uff01(\u2579\u25e1\u2579)\n\n\u4eca\u5e74\u306eAdvent Calendar\u3001Swift\u3067\u7533\u3057\u8fbc\u3093\u3067\u3044\u307e\u3057\u305f\u304c\u6700\u8fd1\u306f\u3082\u3063\u3071\u3089Android\u958b\u767a\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u7121\u7406\u3084\u308aAndroid\u95a2\u9023\u306e\u8a18\u4e8b\u306b\u6301\u3061\u8fbc\u3093\u3067\u3057\u307e\u304a\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Swift\u3067Android??\n\n\u4eca\u5e74\u306e6\u6708\u306b\u767a\u8868\u3055\u308c\u305fSwift\u3001\u500b\u4eba\u7684\u306a\u6240\u611f\u3068\u3057\u3066\u306f\u8272\u3005\u306a\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u53d6\u308a\u3067\u3001\u826f\u3044\u610f\u5473\u3067\u7279\u5fb4\u304c\u306a\u304f\u3059\u3093\u306a\u308a\u3068\u66f8\u304d\u59cb\u3081\u3089\u308c\u308b\u3068\u3066\u3082\u826f\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306aSwift\u3067Android\u304c\u66f8\u3051\u308b\uff1f\uff1f\n\u3055\u3059\u304c\u306b\u305d\u3053\u307e\u3067\u90fd\u5408\u3088\u304f\u306f\u3044\u304d\u307e\u305b\u3093...\u3002\n\n\u4eca\u56de\u3054\u7d39\u4ecb\u3059\u308b\u306e\u304cKotlin\uff08\u3053\u3068\u308a\u3093\uff09\u3068\u3044\u3046\u8a00\u8a9e\u3067\u3059\u3002\nSwift\u3068\u7d30\u304b\u306a\u8a18\u8ff0\u65b9\u6cd5\u306e\u9055\u3044\u3053\u305d\u3042\u308b\u3082\u306e\u306e\u3001\u8272\u3005\u306a\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u53d6\u308a\u3067\u3042\u308a\u3068\u3066\u3082\u4f3c\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u3066\u3044\u307e\u3059\u3002\n\n## Kotlin\u3063\u3066\u3069\u3093\u306a\u8a00\u8a9e\uff1f\n\n\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u306f[\u3053\u3061\u3089](http://kotlinlang.org/)\u3067\u3059\u3002\n\nIntelliJ\u306e\u958b\u767a\u5143\u3067\u3042\u308b\u30b8\u30a7\u30c3\u30c8\u30d6\u30ec\u30fc\u30f3\u30ba\u793e\u3067\u958b\u767a\u3055\u308c\u305f\u8a00\u8a9e\u3067\u3059\u3002\n\n\u578b\u63a8\u8ad6\u3084\u30af\u30ed\u30fc\u30b8\u30e3\u3001\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u306a\u3069\u95a2\u6570\u578b\u306e\u7279\u5fb4\u3082\u968f\u6240\u306b\u53d6\u308a\u5165\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u601d\u8003\u8a00\u8a9e\u3067\u3059\u3002\n\n## Kotlin\u3067Android\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u306b\u306f\n\n\u3082\u306e\u3059\u3063\u3054\u3044\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n1. \uff08\u521d\u3081\u3066\u306a\u3089\uff09[Android Studio](http://developer.android.com/sdk/index.html)\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n2. Android Studio\u3092\u7acb\u3061\u4e0a\u3052\u3066New Project\u3059\u308b\n3. [Kotlin\u306e\u5c0e\u5165\u65b9\u6cd5](http://kotlinlang.org/docs/reference/using-gradle.html)\u3092\u53c2\u8003\u306b\u3001build.gradle\u306b\u6570\u884c\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u8db3\u3059\n4. Kotlin\u3092\u66f8\u3044\u3066\u5b9f\u884c\uff01\uff01\n\n## \u8a00\u8a9e\u306e\u6bd4\u8f03\n\n\u305d\u308c\u3067\u306fSwift\u3068\u306e\u9055\u3044\u3092\u898b\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n[The Swift Programming Language](https://itunes.apple.com/jp/book/swift-programming-language/id881256329?mt=11)\u306e\u6d41\u308c\u306b\u6cbf\u3063\u3066\u6bd4\u8f03\u3057\u3066\u3044\u3063\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n------------\n\n### \u5909\u6570\u5ba3\u8a00\n\n\u4e0d\u5909\u306e\u5024\u306e\u5ba3\u8a00\u304c`let`\u304b`val`\u304b\u306e\u9055\u3044\u3067\u3059\u3002\n\n* Swift\n\n```swift\nvar myVariable = 42\nmyVariable = 50\nlet myConstant = 42\n```\n\n* Kotlin\n\n```kotlin\nvar myVariable = 42\nmyVariable = 50\nval myConstant = 42\n```\n\n------------\n\n### \u6587\u5b57\u5217\u5185\u3067\u306e\u5909\u6570\u5c55\u958b\n\n`\\`\u304b`$`\u306e\u9055\u3044\u3067\u3059\u306d\n\n* Swift\n\n```swift\nlet apples = 3\nlet oranges = 5\nlet appleSummary = \"I have \\(apples) apples.\"\nlet fruitSummary = \"I have \\(apples + oranges) pieces of fruit.\"\n```\n\n* Kotlin\n\n```kotlin\nval apples = 3\nval oranges = 5\nval appleSummary = \"I have $apples apples.\"\nval fruitSummary = \"I have ${apples + oranges} pieces of fruit.\"\n```\n\n------------\n\n### \u914d\u5217\u3068\u8f9e\u66f8\u914d\u5217\n\n\u5c11\u3057\u3060\u3051\u9055\u3044\u307e\u3059\u306d\u3002\n\n* Swift\n\n```swift\nvar shoppingList = [\"catfish\", \"water\", \"tulips\", \"blue paint\"]\nshoppingList[1] = \"bottle of water\"\n \nvar occupations = [\n    \"Malcolm\": \"Captain\",\n    \"Kaylee\": \"Mechanic\",\n]\noccupations[\"Jayne\"] = \"Public Relations\u201d\n```\n\n* Kotlin\n\n```kotlin\nvar shoppingList = array(\"catfish\", \"water\", \"tulips\", \"blue paint\")\nshoppingList[1] = \"bottle of water\"\n\nvar occupations = hashMapOf(\n    \"Malcolm\" to \"Captain\",\n    \"Kaylee\" to \"Mechanic\"\n)\noccupations[\"Jayne\"] = \"Public Relations\"\n```\n------------\n\n### for\n\nSwift\u306f\u5834\u6240\u306b\u3088\u3063\u3066\u306f`()`\u3092\u7701\u7565\u3067\u304d\u307e\u3059\u304cKotlin\u3060\u3068\u57fa\u672c\u7684\u306b\u306f\u5fc5\u9808\u3067\u3059\u3002\n\n* Swift\n\n```swift\nlet individualScores = [75, 43, 103, 87, 12]\nvar teamScore = 0\nfor score in individualScores {\n    if score > 50 {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nteamScore\n```\n\n* Kotlin\n\n```kotlin\nval individualScores = listOf(75, 43, 103, 87, 12)\nvar teamScore = 0\nfor (score in individualScores) {\n    if (score > 50) {\n        teamScore += 3\n    } else {\n        teamScore += 1\n    }\n}\nteamScore\n```\n------------\n\n\n### Optinal Value\n\n\u3053\u306e\u3042\u305f\u308a\u304b\u3089\u8a00\u8a9e\u306e\u7279\u5fb4\u304c\u51fa\u3066\u304d\u307e\u3059\u306d\u3002\nnull\u306b\u5bfe\u3059\u308b\u5bfe\u5fdc\u3068\u3057\u3066\u3069\u3061\u3089\u3082`?`\u3092\u4f7f\u3063\u305f\u6587\u6cd5\u3092\u63a1\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n* Swift\n\n```swift\nvar optionalString: String? = \"Hello\"\noptionalString == nil\n\nvar optionalName: String? = \"John Appleseed\"\nvar greeting = \"Hello!\"\nif let name = optionalName {\n    greeting = \"Hello, \\(name)\"\n}\n```\n\n* Kotlin\n\n```kotlin\nvar optionalString: String? = \"Hello\"\noptionalString == null\n\nvar optionalName: String? = \"John Appleseed\"\nvar greeting = \"Hello!\"\nif (optionalName != null) {\n    greeting = \"Hello, $optionalName\"\n}\n```\n------------\n\n### \u5024\u306e\u675f\u7e1b\n\n\u3069\u3061\u3089\u3082\u307b\u307c\u540c\u3058\u3067\u3059\n\n* Swift\n\n```swift\nlet interestingNumbers = [\n    \"Prime\": [2, 3, 5, 7, 11, 13],\n    \"Fibonacci\": [1, 1, 2, 3, 5, 8],\n    \"Square\": [1, 4, 9, 16, 25],\n]\nvar largest = 0\nfor (kind, numbers) in interestingNumbers {\n    for number in numbers {\n        if number > largest {\n            largest = number\n        }\n    }\n}\nlargest\n```\n\n* Kotlin\n\n```kotlin\nval interestingNumbers = mapOf(\n    \"Prime\" to array(2, 3, 5, 7, 11, 13),\n    \"Fibonacci\" to array(1, 1, 2, 3, 5, 8),\n    \"Square\" to array(1, 4, 9, 16, 25)\n)\nvar largest = 0\nfor ((kind, numbers) in interestingNumbers) {\n    for (number in numbers) {\n        if (number > largest) {\n            largest = number\n        }\n    }\n}\nlargest\n```\n------------\n\n### Range\n\n\u5168\u304f\u4e00\u7dd2\u3067\u3059\n\n* Swift\n\n```swift\nvar firstForLoop = 0\nfor i in 0..3 {\n    firstForLoop += i\n}\nfirstForLoop\n```\n\n* Kotlin\n\n```kotlin\nvar firstForLoop = 0\nfor (i in (0..3)) {\n    firstForLoop += i\n}\nfirstForLoop\n```\n------------\n\n### Function\n\n\u8fd4\u5374\u5024\u5468\u308a\u304c\u308f\u305a\u304b\u306b\u9055\u3044\u307e\u3059\u304c\u307b\u307c\u4e00\u7dd2\u3067\u3059\u306d\u3002\n\n* Swift\n\n```swift\nfunc greet(name: String, day: String) -> String {\n    return \"Hello \\(name), today is \\(day).\"\n}\ngreet(\"Bob\", \"Tuesday\")\n```\n\n* Kotlin\n\n```kotlin\nfun greet(name: String, day: String):String {\n    return \"Hello $name, today is $day.\"\n}\ngreet(\"Bob\", \"Tuesday\")\n```\n\n------------\n\n### Function\u306e\u30cd\u30b9\u30c8\n\n* Swift\n\n\u3069\u3061\u3089\u306e\u8a00\u8a9e\u3082function\u306e\u4e2d\u306bfunction\u3092\u5ba3\u8a00\u3067\u304d\u307e\u3059\n\n```swift\nfunc returnFifteen() -> Int {\n    var y = 10\n    func add() {\n        y += 5\n    }\n    add()\n    return y\n}\nreturnFifteen()\n```\n\n* Kotlin\n\n```kotlin\nfun returnFifteen():Int {\n    var y = 10\n    fun add() {\n        y += 5\n    }\n    add()\n    return y\n}\nreturnFifteen()\n```\n\n------------\n\n### Function\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\u66f8\u304d\u65b9\u306f\u8272\u3005\u3068\u9055\u3063\u3066\u304d\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306a\u8003\u3048\u65b9\u306f\u540c\u3058\u3067\u3059\n\n* Swift\n\n```swift\nfunc hasAnyMatches(list: [Int], condition: Int -> Bool) -> Bool {\n    for item in list {\n        if condition(item) {\n            return true\n        }\n    }\n    return false\n}\nfunc lessThanTen(number: Int) -> Bool {\n    return number < 10\n}\nvar numbers = [20, 19, 7, 12]\nhasAnyMatches(numbers, lessThanTen)\n```\n\n* Kotlin\n\n```kotlin\nfun hasAnyMatches(list: Array<Int>, condition:(Int) -> Boolean): Boolean {\n    for (item in list) {\n        if (condition(item)) {\n            return true\n        }\n    }\n    return false\n}\nval lessThanTen:(Int) -> Boolean =  { number ->\n    number < 10\n}\nvar numbers = array(20, 19, 7, 12)\nhasAnyMatches(numbers, lessThanTen)\n```\n\n------------\n\n### \u7121\u540d\u95a2\u6570\n\n\u307b\u307c\u4e00\u7dd2\u3067\u3059\u306d\n\n* Swift\n\n```swift\nvar numbers = [20, 19, 7, 12]\nnumbers.map({\n    (number: Int) -> Int in\n    let result = 3 * number\n    return result\n})\n```\n\n* Kotlin\n\n```kotlin\nvar numbers = array(20, 19, 7, 12)\nnumbers.map({\n    val result = 3 * it\n    result\n})\n```\n\n------------\n\n### \u5358\u7d14\u306a\u30af\u30e9\u30b9\n\n* Swift\n\n```swift\nclass Shape {\n    var numberOfSides = 0\n    func simpleDescription() -> String {\n        return \"A shape with \\(numberOfSides) sides.\"\n    }\n}\nvar shape = Shape()\nshape.numberOfSides = 7\nvar shapeDescription = shape.simpleDescription()\n```\n\n* Kotlin\n\n```kotlin\nclass Shape {\n    var numberOfSides = 0\n    fun simpleDescription():String {\n        return \"A shape with $numberOfSides sides.\"\n    }\n}\nvar shape = Shape()\nshape.numberOfSides = 7\nvar shapeDescription = shape.simpleDescription()\n```\n\n------------\n\n### \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u4ed8\u304d\u30af\u30e9\u30b9\n\nKotlin\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f\u30af\u30e9\u30b9\u540d\u306e\u76f4\u5f8c\u306b\u66f8\u3051\u308b\u306e\u3067\u7c21\u5358\u306a\u3082\u306e\u3067\u3042\u308c\u3070\u77ed\u304f\u306a\u308a\u307e\u3059\n\n* Swift\n\n```swift\nclass NamedShape {\n    var numberOfSides: Int = 0\n    var name: String\n    \n    init(name: String) {\n        self.name = name\n    }\n    \n    func simpleDescription() -> String {\n        return \"A shape with \\(numberOfSides) sides.\"\n    }\n}\n```\n\n* Kotlin\n\n```kotlin\nclass NamedShape(var name:String) {\n    var numberOfSides: Int = 0\n\n    fun simpleDescription():String {\n        return \"A shape with $numberOfSides sides.\"\n    }\n}\n```\n\n## \u307e\u3068\u3081\n\n\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u3042\u305f\u308a\u307e\u3067\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\u3002\n\nSwift\u3068Kotlin\u3001\u5229\u7528\u30b7\u30fc\u30f3\u306fiOS\u3068Android\u3068\u306a\u3063\u3066\u304a\u308a\u9055\u3063\u3066\u3044\u307e\u3059\u304c\u975e\u5e38\u306b\u4f3c\u305f\u3088\u3046\u306a\u7279\u5fb4\u3092\u6301\u3063\u305f\u8a00\u8a9e\u3067\u3057\u305f\u3002\n\n\u4eca\u56de\u306f\u7701\u304d\u307e\u3057\u305f\u304c\u7d99\u627f\u5468\u308a\u3084Function\u306e\u3082\u3046\u5c11\u3057\u8fbc\u307f\u5165\u3063\u305f\u3068\u3053\u308d\u3067\u3082\u8003\u3048\u65b9\u306f\u307b\u307c\u4e00\u7dd2\u306a\u306e\u3067\u3059\u3093\u306a\u308a\u3068\u5165\u3063\u3066\u3044\u3051\u307e\u3059\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3092\u6a5f\u306biOS\u306a\u307f\u306a\u3055\u307e\u304cAndroid\u306b\u3082\u3069\u3093\u3069\u3093\u3068\u624b\u3092\u5e83\u3052\u3066\u3044\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\n***\u305d\u308c\u3067\u306f\u307f\u306a\u3055\u307e\u826f\u3044\u304a\u5e74\u3092\uff01\uff01(\u2579\u25e1\u2579)***\n", "tags": ["Kotlin", "Swift"]}