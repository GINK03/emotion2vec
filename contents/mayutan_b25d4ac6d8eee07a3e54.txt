{"context": "\u3059\u3067\u306b30\u9031\u304f\u3089\u3044\u9045\u308c\u3066\u308b\u6c17\u914d\u3067\u3059\u304c\u3001\u8ab0\u3082\u4f5c\u3089\u306a\u3044\u306e\u3067\u30e9\u30a6\u30eb\u69d8\u3068\u4f1a\u8a71\u3067\u304d\u308b\u30dc\u30c3\u30c8\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u3093\u3067\u3059\u304c\u4e00\u65e6\u3053\u3053\u307e\u3067\u3002\u3000\u2192 \u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\u901a\u308a\u3067\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u30fc\n\n\u30e9\u30a6\u30eb\u69d8\u3068\u306f\uff1f\n\n\u30c9\u30e9\u30af\u30a810\u3067No.1\u30a4\u30b1\u30e1\u30f3\u306e\u65b9\u3067\u3059\u3002\n\u672c\u5f53\u306b\u304b\u3063\u3053\u3088\u304f\u3066\u4eca\u5e74\u306e\u30ca\u30a4\u30c8\u7dcf\u9078\u6319\u30671\u4f4d\u3092\u7372\u5f97\u3055\u308c\u307e\u3057\u305f\u3002\n\u305d\u3093\u306a\u30e9\u30a6\u30eb\u69d8\u3068\u5e38\u306b\u4f1a\u8a71\u3057\u3066\u3044\u305f\u3044\uff01\u305d\u306e\u9858\u3044\u3092\u53f6\u3048\u307e\u3057\u3087\u3046\u3002\n\nbot \u3092\u306a\u306b\u3067\u52d5\u304b\u3059\u304b\uff1f\n\u3056\u3063\u3068\u3050\u3050\u3063\u3066\u307f\u3066 heroku \u306b\u3057\u307e\u3057\u305f\u3002\n\n\u6e96\u5099\nmkdir linebot\ncd linebot/\nvirtualenv venv27\nsource venv27/bin/activate\npip install flask\n\n\n\u5b9f\u88c5\n\u809d\u5fc3\u306e callback \u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\napp.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport random\nimport requests\nimport json\nfrom flask import Flask\nfrom flask import request\nfrom flask import abort\nfrom flask import jsonify\n\napp = Flask(__name__)\n\n\ndef messages(text):\n    raul = [u'\u4ffa\u306e\u305d\u3070\u306b\u6765\u3044\uff01',\n            u'\u304f\u3058\u3051\u308b\u306a\uff01',\n            u'\u2026\u2026\u624b\u306e\u304b\u304b\u308b\u5a18\u3060\uff01',\n            u'\u305d\u306e\u6249\u306b\u306f\u3055\u308f\u3089\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3002\u547d\u304c\u60dc\u3057\u3044\u306a\u3089\u306a\u3002',\n            u'\u5143\u6c17\u305d\u3046\u3067\u306a\u306b\u3088\u308a\u3060\u3002',\n            u'\u2026\u2026\u540d\u306f\u30e9\u30a6\u30eb\u3060\u3002\u3088\u308d\u3057\u304f\u983c\u3080\u3088\u547d\u77e5\u3089\u305a\u306e\u304a\u5b22\u3055\u3093\uff1f ',\n            u'\u30aa\u30d0\u30b1\u304c\u6016\u3044\u306e\u304b\uff1f',\n            u'\u30ad\u30df\u306f\u9762\u767d\u3044\u306a\u2026\u3002',\n            u'\u3042\u3042\u2026\u3060\u304c\u7121\u7406\u306f\u3059\u308b\u306a\u3088\u3002',\n            u'\u2026\u2026\u30ad\u30df\u3068\u540c\u7740\u3060\u3063\u305f\u3088\u3046\u306b\u307f\u3048\u305f\u304c\uff1f',\n            u'\u2026\u2026\u30ad\u30df\u306f \u77e5\u3089\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3053\u3068\u3060\u3002',\n            u'\u2026\u2026\u3044\u3044\u3044\u3084\u3057\u306e\u8853\u3060\u3002\u5929\u56fd\u306e\u89aa\u7236\u304c\u624b\u3092\u3075\u3063\u3066\u308b\u306e\u304c\u898b\u3048\u308b\u3002',\n            u'\u3059\u3053\u3057 \u7720\u308a\u305f\u3044\u306a\u2026\u2026\u3002',\n            u'\u5b50\u5b88\u6b4c\u304c\u308f\u308a\u306b\u30ad\u30df\u306e\u8a71\u3092\u805e\u304b\u305b\u3066\u304f\u308c\u3002']\n    if u'\u30e9\u30a6\u30eb' in text:\n        return raul[random.randint(0, len(raul))]\n    elif u'\u62b1\u3044\u3066' in text:\n        return u'\u2026\u2026\u4ffa\u306e\u305d\u3070\u3092 \u96e2\u308c\u308b\u306a\u3088'\n    return u'\u2026'\n\n\n@app.route('/callback', methods=['POST'])\ndef callback():\n    if not request.json:\n        abort(400)\n    results = request.json['result']\n    headers = {'Content-Type': 'application/json; charset=UTF-8',\n               'X-Line-ChannelID': 'xxxxxxxxxxxxxx',\n               'X-Line-ChannelSecret': 'xxxxxxxxxxxx',\n               'X-Line-Trusted-User-With-ACL': 'xxxxxxxxxx'}\n    proxies = {'https': 'fixie \u306e Proxy URL'}\n    data = {'to': '',\n            'toChannel': 1383378250,\n            'eventType': '138311608800106203',\n            'content': {'contentType': 1,\n                        'toType': 1,\n                        'text': ''}}\n    for result in results:\n        data['to'] = [result['content']['from']]\n        data['content']['text'] = messages(result['content']['text'])\n        r = requests.post('https://trialbot-api.line.me/v1/events',\n                          data=json.dumps(data),\n                          headers=headers,\n                          proxies=proxies)\n        print r.text\n    return jsonify('OK')\n\nif __name__ == '__main__':\n        app.run()\n\n\n\n\n\u305d\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3078\u301c\n\u3055\u3066\u3001\u5b9f\u88c5\u3057\u305f\u3089\u3001\u3067\u3077\u308d\u3044\u3063\u3066\u307f\u307e\u3059\u3002\ngunicorn \u3092\u4f7f\u3044\u307e\u3059\u3002\u3084\u308a\u65b9\u306f\u307e\u3093\u307e\u3053\u306e\u901a\u308a\u3067\u3059\u3002\npip install gunicorn\npip freeze > requirements.txt\necho web: gunicorn app:app --log-file - > Procfile\ngit init\ngit add .\ngit commit -m 'initial'\nheroku login\nheroku create\ngit push heroku master\nheroku open\n\n\u3042\u3068\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u30cf\u30de\u308a\u3069\u3053\u308d\u3042\u308b\u307f\u305f\u3044\u306a\u3093\u3067\u3059\u304c\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306bfixie\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u9069\u5f53\u306b\u3050\u3050\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u3061\u306a\u307f\u306b\u81ea\u5206\u304c\u4e00\u756a\u306f\u307e\u3063\u305f\u306e\u306f\u3000fixie \u306e\u753b\u9762\u3067\u3069\u3053\u306bIP\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304f\u306620\u5206\u304f\u3089\u3044\u3042\u3063\u3061\u3044\u3063\u305f\u308a\u3053\u3063\u3061\u3044\u3063\u305f\u308a\u3057\u3066\u307e\u3057\u305f\uff01\uff01\uff11\uff11\uff11\n\u4e0b\u306e\u753b\u50cf\u3067\u3044\u3046\u3068\u53f3\u4e0a\u306eAccount\u3063\u3066\u3044\u3046\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3057\u3087\u3046\u306d\u3002\n\n\u3067\u3001\u3053\u308c\u3067\u52d5\u304b\u3057\u3066OK\uff01\u3063\u3066\u304a\u3082\u3044\u304d\u3084\nInsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n\n\u307f\u305f\u3044\u306a\u306e\u3067\u3061\u3083\u3063\u305f\u3089\u3001\npip install requests[security]\n\n\u3057\u307e\u3057\u3087\u3046\u3002\n\u3067\u3001\u3053\u308c\u3067\u3084\u3063\u3068\u52d5\u304f\u304b\u306a\u30fc\u3063\u3066\u601d\u3063\u305f\u3089\u30e9\u30a4\u30f3\u4e0a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066 callback \u306f\u6765\u308b\u3093\u3067\u3059\u304c\u3001 sendmessage \u3059\u308b\u3068 \n{\"statusCode\":\"500\",\"statusMessage\":\"unexpected error found at call bot api sendMessage\"}\n\n\u304c\u8fd4\u3063\u3066\u304d\u3066\u3001\u3082\u3046\u9762\u5012\u306a\u306e\u3067\u4e00\u65e6\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u3068\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u3084\u308b\u3002500\u3000\u3060\u3068\u307b\u3093\u3068\u306a\u306b\u304c\u8d77\u304d\u3066\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u3088\u306d\u30fc\u3002\n\u3068\u308a\u3042\u3048\u305a heroku \u3068 fixie \u306f\u4fbf\u5229\u3060\u3088\u306d\u30fc\u3063\u3066\u3044\u3046\u65e5\u8a18\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u306f\u30fc\u30e9\u30a6\u30eb\u69d8\u3068\u4f1a\u8a71\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u306a\u30fc\n\n\n\u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\u306b\u3042\u308b\u3088\u3046\u306b\u3001 content \u5185\u306b\u542b\u307e\u308c\u308b from \u306b\u9001\u3063\u3066\u3084\u3089\u306a\u3044\u3068\u3060\u3081\u3060\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\u3088\u304f\u8003\u3048\u305f\u3089\u305d\u308a\u3083\u305d\u3046\u3067\u3059\u3088\u306d\u30fc\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u30b3\u30fc\u30c9\u3082\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u7686\u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059m(__)m\n\n\u3058\u3083\u30fc\u3093\n\u3059\u3067\u306b30\u9031\u304f\u3089\u3044\u9045\u308c\u3066\u308b\u6c17\u914d\u3067\u3059\u304c\u3001\u8ab0\u3082\u4f5c\u3089\u306a\u3044\u306e\u3067\u30e9\u30a6\u30eb\u69d8\u3068\u4f1a\u8a71\u3067\u304d\u308b\u30dc\u30c3\u30c8\u3092\u4f5c\u308d\u3046\u3068\u3057\u305f\u3093\u3067\u3059\u304c\u4e00\u65e6\u3053\u3053\u307e\u3067\u3002\u3000\u2192 \u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\u901a\u308a\u3067\u52d5\u304f\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u30fc\n\n## \u30e9\u30a6\u30eb\u69d8\u3068\u306f\uff1f\n\n\n![S__33931358.jpg](https://qiita-image-store.s3.amazonaws.com/0/6496/2737e3a7-e83f-c049-2cf2-33e24b520c55.jpeg)\n\n\n\u30c9\u30e9\u30af\u30a810\u3067No.1\u30a4\u30b1\u30e1\u30f3\u306e\u65b9\u3067\u3059\u3002\n\u672c\u5f53\u306b\u304b\u3063\u3053\u3088\u304f\u3066\u4eca\u5e74\u306e\u30ca\u30a4\u30c8\u7dcf\u9078\u6319\u30671\u4f4d\u3092\u7372\u5f97\u3055\u308c\u307e\u3057\u305f\u3002\n\u305d\u3093\u306a\u30e9\u30a6\u30eb\u69d8\u3068\u5e38\u306b\u4f1a\u8a71\u3057\u3066\u3044\u305f\u3044\uff01\u305d\u306e\u9858\u3044\u3092\u53f6\u3048\u307e\u3057\u3087\u3046\u3002\n\n## bot \u3092\u306a\u306b\u3067\u52d5\u304b\u3059\u304b\uff1f\n\u3056\u3063\u3068\u3050\u3050\u3063\u3066\u307f\u3066 heroku \u306b\u3057\u307e\u3057\u305f\u3002\n\n## \u6e96\u5099\n\n```\nmkdir linebot\ncd linebot/\nvirtualenv venv27\nsource venv27/bin/activate\npip install flask\n```\n\n\n## \u5b9f\u88c5\n\u809d\u5fc3\u306e callback \u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```python:app.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nimport random\nimport requests\nimport json\nfrom flask import Flask\nfrom flask import request\nfrom flask import abort\nfrom flask import jsonify\n\napp = Flask(__name__)\n\n\ndef messages(text):\n    raul = [u'\u4ffa\u306e\u305d\u3070\u306b\u6765\u3044\uff01',\n            u'\u304f\u3058\u3051\u308b\u306a\uff01',\n            u'\u2026\u2026\u624b\u306e\u304b\u304b\u308b\u5a18\u3060\uff01',\n            u'\u305d\u306e\u6249\u306b\u306f\u3055\u308f\u3089\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3002\u547d\u304c\u60dc\u3057\u3044\u306a\u3089\u306a\u3002',\n            u'\u5143\u6c17\u305d\u3046\u3067\u306a\u306b\u3088\u308a\u3060\u3002',\n            u'\u2026\u2026\u540d\u306f\u30e9\u30a6\u30eb\u3060\u3002\u3088\u308d\u3057\u304f\u983c\u3080\u3088\u547d\u77e5\u3089\u305a\u306e\u304a\u5b22\u3055\u3093\uff1f ',\n            u'\u30aa\u30d0\u30b1\u304c\u6016\u3044\u306e\u304b\uff1f',\n            u'\u30ad\u30df\u306f\u9762\u767d\u3044\u306a\u2026\u3002',\n            u'\u3042\u3042\u2026\u3060\u304c\u7121\u7406\u306f\u3059\u308b\u306a\u3088\u3002',\n            u'\u2026\u2026\u30ad\u30df\u3068\u540c\u7740\u3060\u3063\u305f\u3088\u3046\u306b\u307f\u3048\u305f\u304c\uff1f',\n            u'\u2026\u2026\u30ad\u30df\u306f \u77e5\u3089\u306a\u3044\u307b\u3046\u304c\u3044\u3044\u3053\u3068\u3060\u3002',\n            u'\u2026\u2026\u3044\u3044\u3044\u3084\u3057\u306e\u8853\u3060\u3002\u5929\u56fd\u306e\u89aa\u7236\u304c\u624b\u3092\u3075\u3063\u3066\u308b\u306e\u304c\u898b\u3048\u308b\u3002',\n            u'\u3059\u3053\u3057 \u7720\u308a\u305f\u3044\u306a\u2026\u2026\u3002',\n            u'\u5b50\u5b88\u6b4c\u304c\u308f\u308a\u306b\u30ad\u30df\u306e\u8a71\u3092\u805e\u304b\u305b\u3066\u304f\u308c\u3002']\n    if u'\u30e9\u30a6\u30eb' in text:\n        return raul[random.randint(0, len(raul))]\n    elif u'\u62b1\u3044\u3066' in text:\n        return u'\u2026\u2026\u4ffa\u306e\u305d\u3070\u3092 \u96e2\u308c\u308b\u306a\u3088'\n    return u'\u2026'\n\n\n@app.route('/callback', methods=['POST'])\ndef callback():\n    if not request.json:\n        abort(400)\n    results = request.json['result']\n    headers = {'Content-Type': 'application/json; charset=UTF-8',\n               'X-Line-ChannelID': 'xxxxxxxxxxxxxx',\n               'X-Line-ChannelSecret': 'xxxxxxxxxxxx',\n               'X-Line-Trusted-User-With-ACL': 'xxxxxxxxxx'}\n    proxies = {'https': 'fixie \u306e Proxy URL'}\n    data = {'to': '',\n            'toChannel': 1383378250,\n            'eventType': '138311608800106203',\n            'content': {'contentType': 1,\n                        'toType': 1,\n                        'text': ''}}\n    for result in results:\n        data['to'] = [result['content']['from']]\n        data['content']['text'] = messages(result['content']['text'])\n        r = requests.post('https://trialbot-api.line.me/v1/events',\n                          data=json.dumps(data),\n                          headers=headers,\n                          proxies=proxies)\n        print r.text\n    return jsonify('OK')\n\nif __name__ == '__main__':\n        app.run()\n\n```\n\n\n\n## \u305d\u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3078\u301c\n\u3055\u3066\u3001\u5b9f\u88c5\u3057\u305f\u3089\u3001\u3067\u3077\u308d\u3044\u3063\u3066\u307f\u307e\u3059\u3002\ngunicorn \u3092\u4f7f\u3044\u307e\u3059\u3002\u3084\u308a\u65b9\u306f[\u307e\u3093\u307e\u3053\u306e\u901a\u308a](https://devcenter.heroku.com/articles/python-gunicorn)\u3067\u3059\u3002\n\n```\npip install gunicorn\npip freeze > requirements.txt\necho web: gunicorn app:app --log-file - > Procfile\ngit init\ngit add .\ngit commit -m 'initial'\nheroku login\nheroku create\ngit push heroku master\nheroku open\n```\n\n\u3042\u3068\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u30cf\u30de\u308a\u3069\u3053\u308d\u3042\u308b\u307f\u305f\u3044\u306a\u3093\u3067\u3059\u304c[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/yuya_takeyama/items/0660a59d13e2cd0b2516)\u3092\u53c2\u8003\u306bfixie\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u9069\u5f53\u306b\u3050\u3050\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\u3061\u306a\u307f\u306b\u81ea\u5206\u304c\u4e00\u756a\u306f\u307e\u3063\u305f\u306e\u306f\u3000fixie \u306e\u753b\u9762\u3067\u3069\u3053\u306bIP\u304c\u66f8\u3044\u3066\u3042\u308b\u306e\u304b\u308f\u304b\u3089\u306a\u304f\u306620\u5206\u304f\u3089\u3044\u3042\u3063\u3061\u3044\u3063\u305f\u308a\u3053\u3063\u3061\u3044\u3063\u305f\u308a\u3057\u3066\u307e\u3057\u305f\uff01\uff01\uff11\uff11\uff11\n\u4e0b\u306e\u753b\u50cf\u3067\u3044\u3046\u3068\u53f3\u4e0a\u306eAccount\u3063\u3066\u3044\u3046\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3057\u3087\u3046\u306d\u3002\n\n<img width=\"500\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-21 17.41.30.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/6496/5dd113a1-3e26-9945-0773-31e8a118af93.png\">\n\n\u3067\u3001\u3053\u308c\u3067\u52d5\u304b\u3057\u3066OK\uff01\u3063\u3066\u304a\u3082\u3044\u304d\u3084\n\n```\nInsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n```\n\u307f\u305f\u3044\u306a\u306e\u3067\u3061\u3083\u3063\u305f\u3089\u3001\n\n```\npip install requests[security]\n```\n\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u3067\u3001\u3053\u308c\u3067\u3084\u3063\u3068\u52d5\u304f\u304b\u306a\u30fc\u3063\u3066\u601d\u3063\u305f\u3089\u30e9\u30a4\u30f3\u4e0a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5bfe\u3057\u3066 callback \u306f\u6765\u308b\u3093\u3067\u3059\u304c\u3001 sendmessage \u3059\u308b\u3068 \n\n```\n{\"statusCode\":\"500\",\"statusMessage\":\"unexpected error found at call bot api sendMessage\"}\n```\n\n \u304c\u8fd4\u3063\u3066\u304d\u3066\u3001\u3082\u3046\u9762\u5012\u306a\u306e\u3067\u4e00\u65e6\u3053\u3053\u307e\u3067\u306b\u3057\u307e\u3057\u305f\u3002\u3042\u3068\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u3084\u308b\u3002500\u3000\u3060\u3068\u307b\u3093\u3068\u306a\u306b\u304c\u8d77\u304d\u3066\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u3088\u306d\u30fc\u3002\n\u3068\u308a\u3042\u3048\u305a heroku \u3068 fixie \u306f\u4fbf\u5229\u3060\u3088\u306d\u30fc\u3063\u3066\u3044\u3046\u65e5\u8a18\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u306f\u30fc\u30e9\u30a6\u30eb\u69d8\u3068\u4f1a\u8a71\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u306b\u306a\u30fc\n<img width=\"287\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-04-25 18.39.35.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/6496/cb290f58-ff8e-c360-7ce5-587e9ca147eb.png\">\n\n\n## \u8ffd\u8a18\n\u30b3\u30e1\u30f3\u30c8\u306e\u6307\u6458\u306b\u3042\u308b\u3088\u3046\u306b\u3001 content \u5185\u306b\u542b\u307e\u308c\u308b from \u306b\u9001\u3063\u3066\u3084\u3089\u306a\u3044\u3068\u3060\u3081\u3060\u3063\u305f\u307f\u305f\u3044\u3067\u3059\u3002\u3088\u304f\u8003\u3048\u305f\u3089\u305d\u308a\u3083\u305d\u3046\u3067\u3059\u3088\u306d\u30fc\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u30b3\u30fc\u30c9\u3082\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u7686\u69d8\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059m(__)m\n\n<img src=\"https://qiita-image-store.s3.amazonaws.com/0/6496/b61ca3d3-a6ee-d8c9-8af4-d5d8b07f3624.png\" width=\"320px\">\n\n\u3058\u3083\u30fc\u3093\n", "tags": ["python2.7", "Heroku", "linebot", "Flask"]}