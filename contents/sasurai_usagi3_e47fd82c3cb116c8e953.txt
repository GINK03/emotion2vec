{"context": "Swift3.0\u3067coredata\u4f7f\u3063\u3066\u308f\u3055\u308f\u3055\u3059\u308b\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u307e\u3057\u305f!\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u308b\u969b\u306b\u3001Use Core Data\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066\u3044\u306a\u3044\u4f53\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059!\n\n\u6e96\u5099\u7de8\ncore data\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u98db\u3070\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046!\n\ncore data\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53f3\u30af\u30ea\u30c3\u30af > New File... > Core Data > Data Model\n\u3092\u9078\u629e\u3057\u3066\u3001\u9069\u5f53\u306b\u540d\u524d(\u3053\u3053\u3067\u306fMyModel.xcdatamodeld\u3068\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046)\u3092\u6c7a\u3081\u3066\u4fdd\u5b58\u3059\u308b\u3002\n\nEntity\u3068Attribute\u306e\u6e96\u5099\nMyModel.xcdatamodeld\u3092\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059!\nAdd Entity\u3084Add Attribute\u3067\u4f5c\u3063\u3066\u3044\u3051\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001Entity\u3068\u3057\u3066Tweet\u3001Attribute\u3068\u3057\u3066body(String\u578b)\u30fbcreated_at(Date\u578b)\u3092\u4f5c\u3063\u305f\u3053\u3068\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nEntity\u3068\u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\nMyModel.xcdatamodeld\u3092\u958b\u3044\u305f\u72b6\u614b\u3067\u3001\n\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc > Editor > Create NSManagedObject Subclass\n\u3092\u9078\u629e\u3059\u308b\u3002\n\u3053\u3053\u3082\u5168\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066Next\u3057\u3066\u3044\u3051\u3070\u7d42\u308f\u308b\u306e\u3067\u7d30\u304b\u306a\u8aac\u660e\u306f\u3001\u306f\u3057\u3087\u308a\u307e\u3059\u3002\n2\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059!\n\nTweet+CoreDataClass.swift\nimport Foundation\nimport CoreData\n\n\npublic class Tweet: NSManagedObject {\n\n}\n\n\n\nTweet+CoreDataProperties.swift\nimport Foundation\nimport CoreData\n\n\nextension Tweet {\n\n    @nonobjc public class func fetchRequest() -> NSFetchRequest<Tweet> {\n        return NSFetchRequest<Tweet>(entityName: \"Tweet\");\n    }\n\n    @NSManaged public var body: String?\n    @NSManaged public var created_at: NSDate?\n\n}\n\n\n\ncore data\u3068\u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\n\u4eca\u56de\u306f\u3001Use Core Data\u306b\u30c1\u30a7\u30c3\u30af\u3064\u3051\u306a\u304b\u3063\u305f\u4f53\u3067\u9032\u3081\u3066\u3044\u308b\u306e\u3067\u3001\u30c1\u30a7\u30c3\u30af\u3064\u3051\u305f\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u307e\u3059\u3002\nAppDelegate.swift\u306eAppDelegate\u30af\u30e9\u30b9\u306b\u6b21\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059!\n\nAppDelegate.swift\n    // MARK: - Core Data stack\n\n    lazy var persistentContainer: NSPersistentContainer = {\n        /*\n         The persistent container for the application. This implementation\n         creates and returns a container, having loaded the store for the\n         application to it. This property is optional since there are legitimate\n         error conditions that could cause the creation of the store to fail.\n         */\n        let container = NSPersistentContainer(name: \"MyModel\") //\u3053\u3053\u3092\u4f5c\u3063\u305fcore data\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u5909\u66f4(\u62e1\u5f35\u5b50\u4e0d\u8981)\n        container.loadPersistentStores(completionHandler: { (storeDescription, error) in\n            if let error = error as NSError? {\n                // Replace this implementation with code to handle the error appropriately.\n                // fatalError() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n\n                /*\n                 Typical reasons for an error here include:\n                 * The parent directory does not exist, cannot be created, or disallows writing.\n                 * The persistent store is not accessible, due to permissions or data protection when the device is locked.\n                 * The device is out of space.\n                 * The store could not be migrated to the current model version.\n                 Check the error message to determine what the actual problem was.\n                 */\n                fatalError(\"Unresolved error \\(error), \\(error.userInfo)\")\n            }\n        })\n        return container\n    }()\n\n    // MARK: - Core Data Saving support\n\n    func saveContext () {\n        let context = persistentContainer.viewContext\n        if context.hasChanges {\n            do {\n                try context.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // fatalError() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                fatalError(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n            }\n        }\n    }\n\n\n\n\u3053\u3053\u304b\u3089\u672c\u984c\nViewController\u306bimport CoreData\u3092\u5fd8\u308c\u305a\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046!\n\nCreate(\u30ec\u30b3\u30fc\u30c9\u306e\u65b0\u898f\u4f5c\u6210)\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet tweet = NSEntityDescription.entity(forEntityName: \"Tweet\", in: viewContext)\nlet newRecord = NSManagedObject(entity: tweet!, insertInto: viewContext)\nnewRecord.setValue(\"\u5024\", forKey: \"body\") //\u5024\u3092\u4ee3\u5165\nnewRecord.setValue(Date(), forKey: \"created_at\")//\u5024\u3092\u4ee3\u5165\n\ndo {\n    try mapper.save()\n} catch {\n}\n\n\nRead(\u30ec\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u51fa\u3057)\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet query: NSFetchRequest<Tweet> = Tweet.fetchRequest()\n\ndo {\n    let fetchResults = try viewContext.fetch(query)\n    for result: AnyObject in fetchResults {\n        let body: String? = result.value(forKey: \"body\") as? String\n        let created_at: Date? = result.value(forKey: \"created_at\") as? Date\n    }\n} catch {\n}\n\n\nUpdate(\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0)\nSQL\u306e\u3088\u3046\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u3054\u3063\u305d\u308a\u3068\u66f8\u304d\u63db\u3048\u3066\u3044\u304d\u307e\u3059!\u3046\u307e\u304f\u691c\u7d22\u3092\u884c\u3044\u307e\u3057\u3087\u3046!\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet request: NSFetchRequest<Tweet> = Tweet.fetchRequest()\ndo {\n    let fetchResults = try viewContext.fetch(request)\n    for result: AnyObject in fetchResults {\n        let record = result as! NSManagedObject\n        record.setValue(Date(), forKey: \"created_at\")\n    }\n    try viewContext.save()\n} catch {\n}\n\n\nDelete(\u30ec\u30b3\u30fc\u30c9\u306e\u524a\u9664)\n\u3053\u308c\u3082SQL\u306e\u3088\u3046\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u3054\u3063\u305d\u308a\u3068\u524a\u9664\u3092\u884c\u3044\u307e\u3059\u3002\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet request: NSFetchRequest<Tweet> = tweet.fetchRequest()\ndo {\n    let fetchResults = try viewContext.fetch(request)\n    for result: AnyObject in fetchResults {\n        let record = result as! NSManagedObject\n        viewContext.delete(record)\n    }\n    try viewContext.save()\n} catch {\n}\n\nSwift3.0\u3067coredata\u4f7f\u3063\u3066\u308f\u3055\u308f\u3055\u3059\u308b\u30b3\u30fc\u30c9\u3092\u307e\u3068\u3081\u307e\u3057\u305f!\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u308b\u969b\u306b\u3001`Use Core Data`\u306b\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066\u3044\u306a\u3044\u4f53\u3067\u9032\u3081\u3066\u3044\u304d\u307e\u3059!\n\n# \u6e96\u5099\u7de8\ncore data\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3044\u308b\u5834\u5408\u306f\u98db\u3070\u3057\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046!\n\n## core data\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308b\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u53f3\u30af\u30ea\u30c3\u30af > New File... > Core Data > Data Model\n\u3092\u9078\u629e\u3057\u3066\u3001\u9069\u5f53\u306b\u540d\u524d(\u3053\u3053\u3067\u306f`MyModel.xcdatamodeld`\u3068\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046)\u3092\u6c7a\u3081\u3066\u4fdd\u5b58\u3059\u308b\u3002\n\n## Entity\u3068Attribute\u306e\u6e96\u5099\n`MyModel.xcdatamodeld`\u3092\u3044\u3058\u3063\u3066\u3044\u304d\u307e\u3059!\n`Add Entity`\u3084`Add Attribute`\u3067\u4f5c\u3063\u3066\u3044\u3051\u3070\u3044\u3044\u3060\u3051\u306a\u306e\u3067\u8aac\u660e\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001Entity\u3068\u3057\u3066`Tweet`\u3001Attribute\u3068\u3057\u3066`body`(String\u578b)\u30fb`created_at`(Date\u578b)\u3092\u4f5c\u3063\u305f\u3053\u3068\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## Entity\u3068\u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\n`MyModel.xcdatamodeld`\u3092\u958b\u3044\u305f\u72b6\u614b\u3067\u3001\n\u4e0a\u306e\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc > Editor > Create NSManagedObject Subclass\n\u3092\u9078\u629e\u3059\u308b\u3002\n\u3053\u3053\u3082\u5168\u30c1\u30a7\u30c3\u30af\u3092\u3064\u3051\u3066Next\u3057\u3066\u3044\u3051\u3070\u7d42\u308f\u308b\u306e\u3067\u7d30\u304b\u306a\u8aac\u660e\u306f\u3001\u306f\u3057\u3087\u308a\u307e\u3059\u3002\n\n2\u3064\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u4e0a\u304c\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059!\n\n```swift:Tweet+CoreDataClass.swift\nimport Foundation\nimport CoreData\n\n\npublic class Tweet: NSManagedObject {\n\n}\n```\n\n```swift:Tweet+CoreDataProperties.swift\nimport Foundation\nimport CoreData\n\n\nextension Tweet {\n\n    @nonobjc public class func fetchRequest() -> NSFetchRequest<Tweet> {\n        return NSFetchRequest<Tweet>(entityName: \"Tweet\");\n    }\n\n    @NSManaged public var body: String?\n    @NSManaged public var created_at: NSDate?\n\n}\n```\n\n# core data\u3068\u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0\u3059\u308b\n\u4eca\u56de\u306f\u3001`Use Core Data`\u306b\u30c1\u30a7\u30c3\u30af\u3064\u3051\u306a\u304b\u3063\u305f\u4f53\u3067\u9032\u3081\u3066\u3044\u308b\u306e\u3067\u3001\u30c1\u30a7\u30c3\u30af\u3064\u3051\u305f\u6642\u306b\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u30b3\u30fc\u30c9\u3092\u81ea\u5206\u3067\u8ffd\u52a0\u3057\u307e\u3059\u3002\nAppDelegate.swift\u306eAppDelegate\u30af\u30e9\u30b9\u306b\u6b21\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059!\n\n```swift:AppDelegate.swift\n    // MARK: - Core Data stack\n    \n    lazy var persistentContainer: NSPersistentContainer = {\n        /*\n         The persistent container for the application. This implementation\n         creates and returns a container, having loaded the store for the\n         application to it. This property is optional since there are legitimate\n         error conditions that could cause the creation of the store to fail.\n         */\n        let container = NSPersistentContainer(name: \"MyModel\") //\u3053\u3053\u3092\u4f5c\u3063\u305fcore data\u306e\u30d5\u30a1\u30a4\u30eb\u540d\u306b\u5909\u66f4(\u62e1\u5f35\u5b50\u4e0d\u8981)\n        container.loadPersistentStores(completionHandler: { (storeDescription, error) in\n            if let error = error as NSError? {\n                // Replace this implementation with code to handle the error appropriately.\n                // fatalError() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                \n                /*\n                 Typical reasons for an error here include:\n                 * The parent directory does not exist, cannot be created, or disallows writing.\n                 * The persistent store is not accessible, due to permissions or data protection when the device is locked.\n                 * The device is out of space.\n                 * The store could not be migrated to the current model version.\n                 Check the error message to determine what the actual problem was.\n                 */\n                fatalError(\"Unresolved error \\(error), \\(error.userInfo)\")\n            }\n        })\n        return container\n    }()\n    \n    // MARK: - Core Data Saving support\n    \n    func saveContext () {\n        let context = persistentContainer.viewContext\n        if context.hasChanges {\n            do {\n                try context.save()\n            } catch {\n                // Replace this implementation with code to handle the error appropriately.\n                // fatalError() causes the application to generate a crash log and terminate. You should not use this function in a shipping application, although it may be useful during development.\n                let nserror = error as NSError\n                fatalError(\"Unresolved error \\(nserror), \\(nserror.userInfo)\")\n            }\n        }\n    }\n```\n\n# \u3053\u3053\u304b\u3089\u672c\u984c\n`ViewController`\u306b`import CoreData`\u3092\u5fd8\u308c\u305a\u306b**\u8ffd\u52a0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046**!\n\n## Create(\u30ec\u30b3\u30fc\u30c9\u306e\u65b0\u898f\u4f5c\u6210)\n```swift\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet tweet = NSEntityDescription.entity(forEntityName: \"Tweet\", in: viewContext)\nlet newRecord = NSManagedObject(entity: tweet!, insertInto: viewContext)\nnewRecord.setValue(\"\u5024\", forKey: \"body\") //\u5024\u3092\u4ee3\u5165\nnewRecord.setValue(Date(), forKey: \"created_at\")//\u5024\u3092\u4ee3\u5165\n                \ndo {\n    try mapper.save()\n} catch {\n}\n```\n\n\n## Read(\u30ec\u30b3\u30fc\u30c9\u306e\u8aad\u307f\u51fa\u3057)\n\n```swift\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet query: NSFetchRequest<Tweet> = Tweet.fetchRequest()\n        \ndo {\n    let fetchResults = try viewContext.fetch(query)\n    for result: AnyObject in fetchResults {\n        let body: String? = result.value(forKey: \"body\") as? String\n        let created_at: Date? = result.value(forKey: \"created_at\") as? Date\n    }\n} catch {\n}\n```\n\n## Update(\u30ec\u30b3\u30fc\u30c9\u306e\u66f4\u65b0)\nSQL\u306e\u3088\u3046\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u3054\u3063\u305d\u308a\u3068\u66f8\u304d\u63db\u3048\u3066\u3044\u304d\u307e\u3059!\u3046\u307e\u304f\u691c\u7d22\u3092\u884c\u3044\u307e\u3057\u3087\u3046!\n\n```swift\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet request: NSFetchRequest<Tweet> = Tweet.fetchRequest()\ndo {\n    let fetchResults = try viewContext.fetch(request)\n    for result: AnyObject in fetchResults {\n        let record = result as! NSManagedObject\n        record.setValue(Date(), forKey: \"created_at\")\n    }\n    try viewContext.save()\n} catch {\n}\n```\n\n## Delete(\u30ec\u30b3\u30fc\u30c9\u306e\u524a\u9664)\n\u3053\u308c\u3082SQL\u306e\u3088\u3046\u306b\u3001\u30d5\u30a7\u30c3\u30c1\u3057\u3066\u3054\u3063\u305d\u308a\u3068\u524a\u9664\u3092\u884c\u3044\u307e\u3059\u3002\n\n```swift\nlet appDelegate: AppDelegate = UIApplication.shared.delegate as! AppDelegate\nlet viewContext = appDelegate.persistentContainer.viewContext\nlet request: NSFetchRequest<Tweet> = tweet.fetchRequest()\ndo {\n    let fetchResults = try viewContext.fetch(request)\n    for result: AnyObject in fetchResults {\n        let record = result as! NSManagedObject\n        viewContext.delete(record)\n    }\n    try viewContext.save()\n} catch {\n}\n```\n", "tags": ["Swift3.0", "swift3"]}