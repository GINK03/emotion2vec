{"context": " More than 1 year has passed since last update.\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u9805\u308f\u3056\uff0c\u6b63\u898f\u5206\u5e03\u3084\u30ac\u30f3\u30de\u5206\u5e03\u3092\u4f7f\u3046GLM\u3092\u6271\u3046\uff0e\n\n\u3055\u307e\u3056\u307e\u306a\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3092\u5fdc\u7528\u3067\u304d\u308bGLM\n\u78ba\u7387\u5206\u5e03\u30fb\u30ea\u30f3\u30af\u95a2\u6570\u30fb\u7dda\u5f62\u4e88\u6e2c\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u3063\u3066\uff0cGLM\u3067\u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e\u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3067\u304d\u308b\uff0e\nPython\u5185\u3067\u306eGLM\u69cb\u7bc9\u306b\u4f7f\u3048\u308b\u78ba\u7387\u5206\u5e03\u306e\u4e00\u90e8\n\u4e71\u6570\u751f\u6210\u306fscipy.stats.X\uff0cglm()\u306efamily\u306fstatsmodels.api.families.X\u3067\u6307\u5b9a\u3059\u308b\uff0e\n\n\n\n\u3000\n\u78ba\u7387\u5206\u5e03\n\u4e71\u6570\u751f\u6210\nglm()\u306efamily\u6307\u5b9a\n\u3088\u304f\u4f7f\u3046\u30ea\u30f3\u30af\u95a2\u6570\n\n\n\n\n\uff08\u96e2\u6563\uff09\n\u4e8c\u9805\u5206\u5e03\nbinom.rvs()\nBinomial()\nlogit\n\n\n\u3000\n\u30dd\u30a2\u30bd\u30f3\u5206\u5e03\npoisson.rvs()\nPoisson()\nlog\n\n\n\u3000\n\u8ca0\u306e\u4e8c\u9805\u5206\u5e03\nnbinom.rvs()\nNegativeGaussian()\nlog\n\n\n\uff08\u9023\u7d9a\uff09\n\u30ac\u30f3\u30de\u5206\u5e03\ngamma.rvs()\nGanma()\nlog?\n\n\n\u3000\n\u6b63\u898f\u5206\u5e03\nnorm.rvs()\nGaussian()\nidentity\n\n\n\n\n\u4e8c\u9805\u5206\u5e03\u3092\u4f7f\u3063\u305fGLM\n\u4e8c\u9805\u5206\u5e03\u306f\uff0c\u4e0a\u9650\u306e\u3042\u308b\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf\uff08\u5fdc\u7b54\u5909\u6570\u304c$y \\in  \\{ 0, 1, 2, \\dots, N \\} $\uff09\u306e\u3068\u304d\u306b\u7528\u3044\u308b\uff0e\n\nN\u500b\u4f53\u306e\u5b9f\u9a13\u5bfe\u8c61\u306b\u540c\u3058\u51e6\u7406\u3092\u3057\u305f\u3089\uff0c$y$\u500b\u4f53\u3067\u53cd\u5fdc\u304c\u967d\u6027\uff0c$N-y$\u500b\u4f53\u3067\u306f\u9670\u6027\u3060\u3063\u305f\n\n\u4eca\u56de\u306e\u4f8b\u984c\u306f\uff0c\n\u300c\u3042\u308b\u67b6\u7a7a\u690d\u7269\u306e\u500b\u4f53$i$\u305d\u308c\u305e\u308c\u306b\u304a\u3044\u3066\uff0c$N_i$\u500b\u306e\u89b3\u5bdf\u7a2e\u5b50\u306e\u3046\u3061\u751f\u304d\u3066\u3044\u3066\u767a\u82bd\u80fd\u529b\u304c\u3042\u308b\u3082\u306e\u306f$y_i$\u500b\uff0c\u6b7b\u3093\u3060\u7a2e\u5b50\u306f$N_i-y_i$\u500b\u300d\n\u3068\u3044\u3046\u89b3\u6e2c\u30c7\u30fc\u30bf\u3067\uff0c\u5168\u90e8\u3067100\u500b\u4f53\u306e\u690d\u7269\u3092\u8abf\u3079\u305f\u3068\u3059\u308b\uff0e\n\u203b\u306a\u304a\uff0c\u89b3\u5bdf\u7a2e\u5b50\u6570$N_i$\u306f\u3069\u306e\u500b\u4f53\u3067\u30828\u500b\u3068\u3059\u308b\uff0e\n\n\u5fdc\u7b54\u5909\u6570\u306b\u3064\u3044\u3066\n\u5fdc\u7b54\u5909\u6570\u3067\u3042\u308b\u751f\u5b58\u7a2e\u5b50\u6570\u306e\u3068\u308a\u3046\u308b\u5024\u306f\uff0c$y_i \\in \\{0, 1, 2, 3, \\dots, 8 \\}$\u3068\u306a\u308a\uff0c\n\u5168\u90e8\u751f\u5b58\u3057\u3066\u3044\u305f\u5834\u5408\u306f$y_i = 8$\uff0c\u5168\u8da3\u65e8\u304c\u6b7b\u4ea1\u3057\u3066\u3044\u305f\u5834\u5408\u306f$y_i=0$\u3068\u306a\u308b\uff0e\n\u300c\u3042\u308b\u500b\u4f53$i$\u304b\u3089\u5f97\u3089\u308c\u305f\u4e00\u500b\u306e\u7a2e\u5b50\u304c\u751f\u304d\u3066\u3044\u308b\u78ba\u7387\u300d\u3092$q_i$\u3068\u3059\u308b\uff0e\n\n\u8aac\u660e\u5909\u6570\u306b\u3064\u3044\u3066\n\u500b\u4f53\u306e\u5927\u304d\u3055\u3092\u8868\u3059\u4f53\u30b5\u30a4\u30ba$x_i$\u306b\u3088\u3063\u3066\uff0c\u751f\u5b58\u78ba\u7387$q_i$\u304c\u4e0a\u4e0b\u3059\u308b\uff0e\n\u307e\u305f\uff0c\u5168100\u500b\u4f53\u306e\u3046\u306150\u500b\u4f53\uff08$i \\in \\{1, 2, \\dots, 50 \\}$\uff09\u306f\u7121\u51e6\u7406\uff08$f_i = C$\uff09,\n\u6b8b\u308a\u306e50\u500b\u4f53\uff08$i \\in \\{ 51, 52, \\dots, 100 \\}$\uff09\u306f\u65bd\u80a5\u51e6\u7406\uff08$f_i = T$\uff09\u3068\u3059\u308b\uff0e \n>>> import pandas\n>>> import matplotlib.pyplot as plt\n>>> d = pandas.read_csv(\"data4a.csv\")\n>>> d.describe()\n         N           y           x\ncount  100  100.000000  100.000000\nmean     8    5.080000    9.967200\nstd      0    2.743882    1.088954\nmin      8    0.000000    7.660000\n25%      8    3.000000    9.337500\n50%      8    6.000000    9.965000\n75%      8    8.000000   10.770000\nmax      8    8.000000   12.440000\n>>> plt.plot(d.x[d.f == 'C'], d.y[d.f == 'C'], 'bo')\n>>> plt.plot(d.x[d.f == 'T'], d.y[d.f == 'T'], 'ro')\n>>> plt.show()\n\n\n\u56f3\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u3068\u3057\u3066\n\n\u4f53\u30b5\u30a4\u30ba$x_i$\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u751f\u5b58\u7a2e\u5b50\u6570$y_i$\u304c\u591a\u304f\u306a\u308b\u3089\u3057\u3044\n\u80a5\u6599\u3092\u3084\u308b\u3068\uff08$f_i=T$\uff09\u751f\u5b58\u7a2e\u5b50\u6570$y_i$\u304c\u591a\u304f\u306a\u308b\u3089\u3057\u3044\n\n\n\u4e8c\u9805\u5206\u5e03\np(y|N, q) = \\left( \\begin{array}{c}\n      N \\\\\n      y \n    \\end{array}\n    \\right) q^y (1-q)^{N-y}\n$${p(y|N, q) = \\left( \\begin{array}{c}\n      N \\\\\n      y \n    \\end{array}\n    \\right) q^y (1-q)^{N-y}\n}$$\n>>> import math\n>>> p = lambda y, N, q: (math.factorial(N) / (math.factorial(y) * math.factorial(N-y))) * (q ** y) * ((1-q) ** (N-y))\n>>> p1 = [p(i, 8, 0.1) for i in y]\n>>> p2 = [p(i, 8, 0.3) for i in y]\n>>> p3 = [p(i, 8, 0.8) for i in y]\n>>> plt.plot(y, p1, 'b-o')\n>>> plt.plot(y, p2, 'r-o')\n>>> plt.plot(y, p3, 'g-o')\n>>> plt.show()\n\n\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u30ed\u30b8\u30c3\u30c8\u30ea\u30f3\u30af\u95a2\u6570\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u306f\uff0c\n\n\u78ba\u7387\u5206\u5e03\uff1a\u4e8c\u9805\u5206\u5e03\n\n\u30ea\u30f3\u30af\u95a2\u6570\uff1a\u30ed\u30b8\u30c3\u30c8\u30ea\u30f3\u30af\u95a2\u6570\uff08logit link function\uff09\n\n\u3092\u7528\u3044\u308b\uff0e\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306b\u3064\u3044\u3066\nq_i = logistic(z_i) = \\frac{1}{1+\\exp(-z_i)}\n$${q_i = logistic(z_i) = \\frac{1}{1+\\exp(-z_i)}\n}$$\n\u3068\u5b9a\u7fa9\u3055\u308c\uff0c\u5909\u6570$z_i$\u306f\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i = \\beta_1 + \\beta_2 x_1 + \\dots$\u3067\u3042\u308b\uff0e\n>>> logistic = lambda z: 1 / (1 + numpy.exp(-z))\n>>> z = numpy.arange(-6, 6, 0.1)\n>>> plt.plot(z, logistic(z))\n>>> plt.show()\n\n\n\u751f\u5b58\u78ba\u7387$q_i$\u304c$z_i$\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3068\uff0c\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i$\u304c\u3069\u3093\u306a\u5024\u3067\u3082\uff0c$0 \\leq q_i \\leq 1$\u3068\u306a\u308b\uff0e\n\u751f\u5b58\u78ba\u7387$q_i$\u304c\u4f53\u30b5\u30a4\u30ba$x_i$\u3060\u3051\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3068\uff0c\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i=\\beta_1 + \\beta_2 x_i$\u3068\u306a\u308b\uff0e\n\n$q_i$\u3068$x_i$\u304c$\\beta_1$\u3068$\\beta_2$\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u69d8\u5b50\n>>> plt.subplot(121)\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(0 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'b-', label='beta1=0')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(2 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'r-', label='beta1=2')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(-3 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'g-', label='beta1=-3')\n>>> plt.legend(loc='middle right')\n>>> plt.subplot(122)\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(2 * x)))\n>>> plt.plot(z, logistic(z), 'b-', label='beta2=2')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(4 * x)))\n>>> plt.plot(z, logistic(z), 'r-', label='beta2=4')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(-1 * x)))\n>>> plt.plot(z, logistic(z), 'g-', label='beta2=-1')\n>>> plt.legend(loc='middle right')\n>>> plt.show()\n\n\n\n\n\u30ed\u30b8\u30c3\u30c8\u95a2\u6570\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u3092\u5909\u5f62\u3059\u308b\uff0e\n\\begin{eqnarray}\nq_i &=& \\frac{1}{1+\\exp(-z_i)} \\\\\nq_i + q_i \\exp(-z_i) &=& 1 \\\\\n1 - q_i &=& q_i \\exp (-z_i)\\\\\n\\frac{1 - q_i}{q_i} &=& \\exp (-z_i) \\\\\n\\log \\frac{1 - q_i}{q_i} &=& -z_i \\\\\n\\log \\frac{q_i}{1 - q_i} &=& z_i\n\\end{eqnarray}\n$${\\begin{eqnarray}\nq_i &=& \\frac{1}{1+\\exp(-z_i)} \\\\\nq_i + q_i \\exp(-z_i) &=& 1 \\\\\n1 - q_i &=& q_i \\exp (-z_i)\\\\\n\\frac{1 - q_i}{q_i} &=& \\exp (-z_i) \\\\\n\\log \\frac{1 - q_i}{q_i} &=& -z_i \\\\\n\\log \\frac{q_i}{1 - q_i} &=& z_i\n\\end{eqnarray}\n}$$\n\u5de6\u8fba\u3092\u30ed\u30b8\u30c3\u30c8\u95a2\u6570\u3068\u3088\u3076\uff0e\nlogit(q_i) = \\log \\frac{q_i}{1 - q_i}\n$${logit(q_i) = \\log \\frac{q_i}{1 - q_i}\n}$$\n\u203b\u30ed\u30b8\u30c3\u30c8\u95a2\u6570\u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u9006\u95a2\u6570\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\n\u751f\u5b58\u78ba\u7387$q_i$\u306e\u3082\u3068\u3067\u306e(\u5bfe\u6570)\u5c24\u5ea6\u3092\u6700\u5927\u5316\u3055\u305b\u308b\uff0e\n\\begin{eqnarray}\nL(q) &=& \\prod_i p(y_i | N_i, q_i) \\\\\n&=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\\\\nL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} (\\because logit(q_i) = z_i = \\beta_1 + \\beta_2 x_i + \\beta_3 d_i) \\\\\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\log \\left\\{\\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + \\log q_i^{y_i} + \\log (1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + (y_i)\\log q_i + (N_i-y_i)\\log (1-q_i) \\right\\} \\\\\n\\end{eqnarray}\n$${\\begin{eqnarray}\nL(q) &=& \\prod_i p(y_i | N_i, q_i) \\\\\n&=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\\\\nL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} (\\because logit(q_i) = z_i = \\beta_1 + \\beta_2 x_i + \\beta_3 d_i) \\\\\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\log \\left\\{\\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + \\log q_i^{y_i} + \\log (1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + (y_i)\\log q_i + (N_i-y_i)\\log (1-q_i) \\right\\} \\\\\n\\end{eqnarray}\n}$$\n>>> import statsmodels.formula.api as smf\n>>> import statsmodels.api as sm\n>>> import pandas\n>>> d = pandas.read_csv(\"data4a.csv\")\n# glm(cbind(y, N-y) ~ x + f, data=d, family=binomial)\n>>> model = smf.glm('y + I(N-y) ~ x + f', data=d, family=sm.families.Binomial())\n>>> fit = model.fit()\n>>> fit.summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:      ['y', 'I(N - y)']   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       97\nModel Family:                Binomial   Df Model:                            2\nLink Function:                  logit   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -133.11\nDate:                Sat, 06 Jun 2015   Deviance:                       123.03\nTime:                        12:06:47   Pearson chi2:                     109.\nNo. Iterations:                     8\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept    -19.5361      1.414    -13.818      0.000       -22.307   -16.765\nf[T.T]         2.0215      0.231      8.740      0.000         1.568     2.475\nx              1.9524      0.139     14.059      0.000         1.680     2.225\n==============================================================================\n\n\n\n\u30aa\u30c3\u30ba\u306b\u3064\u3044\u3066\n\uff08\u751f\u5b58\u3059\u308b\u78ba\u7387\uff09/ (\u751f\u5b58\u3057\u306a\u3044\u78ba\u7387\uff09\u3068\u3044\u3046\u6bd4\u3092\u30aa\u30c3\u30ba\u3068\u3088\u3076\uff0e\n\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &=& \\exp(\u7dda\u5f62\u4e88\u6e2c\u5b50) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\beta_3 f_i) \\\\\n&=& \\exp(\\beta_1)\\exp(\\beta_2 x_i)\\exp(\\beta_3 f_i)\n\\end{eqnarray}\n\n$${\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &=& \\exp(\u7dda\u5f62\u4e88\u6e2c\u5b50) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\beta_3 f_i) \\\\\n&=& \\exp(\\beta_1)\\exp(\\beta_2 x_i)\\exp(\\beta_3 f_i)\n\\end{eqnarray}\n\n}$$\n\u4eca\u56de\u63a8\u5b9a\u3057\u305f$\\{\\beta_2, \\beta_3 \\}$\u306b\u7740\u76ee\u3059\u308b\u3068\n\\frac{q_i}{1-q_i} \\propto \\exp(1.95x_i)\\exp(2.02f_i)\n\n$${\\frac{q_i}{1-q_i} \\propto \\exp(1.95x_i)\\exp(2.02f_i)\n\n}$$\n\u3068\u5404\u8aac\u660e\u5909\u6570\u3068\u6bd4\u4f8b\u95a2\u4fc2\u306b\u306a\u308b\uff0e\n\u4f53\u30b5\u30a4\u30ba$x_i$\u306e\u5f71\u97ff\u306f\uff0c\n\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &\\propto& \\exp(1.95(x_i + 1))\\exp(2.02f_i) \\\\\n&\\propto& \\exp(1.95x_i)\\exp(1.95)\\exp(2.02f_i)\n\\end{eqnarray}\n$${\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &\\propto& \\exp(1.95(x_i + 1))\\exp(2.02f_i) \\\\\n&\\propto& \\exp(1.95x_i)\\exp(1.95)\\exp(2.02f_i)\n\\end{eqnarray}\n}$$\n\u304b\u3089$\\exp(1.95) \\approx 7.03$\u500d\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\u540c\u69d8\u306b\u65bd\u80a5\u52b9\u679c\u3082$exp(2.02) \\approx 7.54$\u500d\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\n\u30aa\u30c3\u30ba\u6bd4\u306b\u3064\u3044\u3066\n\u8981\u56e0$X$\u306e\u52b9\u679c\uff08$\\beta_x=1.95$\uff09\u3092\u793a\u3059\uff0e\n\\begin{eqnarray}\n\\frac{X\u306e\u30aa\u30c3\u30ba}{\u975eX\u306e\u30aa\u30c3\u30ba} &=& \\frac{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 1)}{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 0)} \\\\\n&=& exp(1.95) \\approx 7.03\n\\end{eqnarray}\n$${\\begin{eqnarray}\n\\frac{X\u306e\u30aa\u30c3\u30ba}{\u975eX\u306e\u30aa\u30c3\u30ba} &=& \\frac{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 1)}{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 0)} \\\\\n&=& exp(1.95) \\approx 7.03\n\\end{eqnarray}\n}$$\n\n\u30e2\u30c7\u30eb\u9078\u629e\nAIC\u306b\u3088\u308b\u30e2\u30c7\u30eb\u9078\u629e\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u306e\u9078\u629e\n\n\u4e00\u5b9a\u30e2\u30c7\u30eb\uff08\u5207\u7247\u306e\u307f\uff09\nx\u30e2\u30c7\u30eb\uff08\u4f53\u30b5\u30a4\u30ba\u306e\u307f\uff09\nf\u30e2\u30c7\u30eb\uff08\u65bd\u80a5\u52b9\u679c\u306e\u307f\uff09\nx+f\u30e2\u30c7\u30eb\uff08\u4f53\u30b5\u30a4\u30ba\uff0b\u65bd\u80a5\u52b9\u679c\uff09\n\nR\u306b\u306fMASS package\u306estepAIC()\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\uff0e\n\u3068\u308a\u3042\u3048\u305a\u524d\u56de\u3068\u540c\u69d8\u306b\u3059\u308b\u3068\uff0cx+f\u30e2\u30c7\u30eb\u304c\u6700\u3082AIC\u304c\u4f4e\u304f\u306a\u308a\uff0c\u826f\u3044\u30e2\u30c7\u30eb\u3068\u306a\u308b\uff0e\n\n\u4ea4\u4e92\u4f5c\u7528\u9805\n\u4f53\u30b5\u30a4\u30ba\u3068\u65bd\u80a5\u52b9\u679c\u306e\u639b\u3051\u5408\u308f\u305b\u306b\u3088\u308b\u52b9\u679c\u3092\u8003\u3048\u308b\uff0e\n\u3064\u307e\u308a\uff0c\nlogit(q_i) = \\beta_1 + \\beta_2 x_i + \\beta_3 f_i + \\beta_4 x_i f_i\n$${logit(q_i) = \\beta_1 + \\beta_2 x_i + \\beta_3 f_i + \\beta_4 x_i f_i\n}$$\n\u3092\u8003\u3048\u308b\uff0e\n# glm(cbind(y, N-y) ~ x * f, data=d, family=binomial)\n>>> model = smf.glm('y + I(N-y) ~ x * f', data=d, family=sm.families.Binomial())\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:      ['y', 'I(N - y)']   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       96\nModel Family:                Binomial   Df Model:                            3\nLink Function:                  logit   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -132.81\nDate:                 \u571f, 06  6 2015   Deviance:                       122.43\nTime:                        13:44:31   Pearson chi2:                     13.6\nNo. Iterations:                     8\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept    -18.5233      5.335     -3.472      0.001       -28.979    -8.067\nf[T.T]        -0.0638      7.647     -0.008      0.993       -15.052    14.924\nx              1.8525      0.525      3.529      0.000         0.824     2.881\nx:f[T.T]       0.2163      0.792      0.273      0.785        -1.336     1.769\n==============================================================================\n\n\u3068\u4eca\u56de\u306fAIC\u304c\u4e0a\u304c\u3063\u3066\u3057\u307e\u3063\u305f\u305f\u3081\uff0c\u4ea4\u4e92\u4f5c\u7528\u306f\u306a\u304b\u3063\u305f\u3068\u3044\u3046\u3053\u3068\uff0e\n\n\u5272\u7b97\u5024\u306e\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u306f\u3084\u3081\u308b\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u30e1\u30ea\u30c3\u30c8\u306e\u4e00\u3064\u306b\uff0c$(\u89b3\u6e2c\u30c7\u30fc\u30bf) / (\u89b3\u6e2c\u30c7\u30fc\u30bf)$\u3068\u3044\u3046\u5272\u7b97\u5024\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u306a\u3044\uff0e\n\u5272\u7b97\u5730\u306f\u4eca\u56de\u306e\u4f8b\u984c\u3067\u3044\u3046\u300c\u7a2e\u5b50\u306e\u751f\u5b58\u78ba\u7387\u304c\u4f55\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u300d\u3092\u77e5\u308a\u305f\u3044\u3068\u304d\u306b\u3064\u304f\u308a\u304c\u3061\uff0e\n\u30c7\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\n\n\n\u60c5\u5831\u304c\u5931\u308f\u308c\u308b\uff1a\u4f8b\u3068\u3057\u3066\u91ce\u7403\u306e\u6253\u7387\uff0e1000\u6253\u6570300\u5b89\u6253\u3068100\u6253\u657030\u5b89\u6253\u306f\u5171\u306b3\u5272\u6253\u8005\u3060\u304c\uff0c\u540c\u69d8\u306b\u78ba\u304b\u3089\u3057\u3044\u3068\u3044\u3048\u308b\u3060\u308d\u3046\u304b\uff1f\n\n\u5909\u63db\u3055\u308c\u305f\u5024\u306e\u5206\u5e03\u306f\uff1f\uff1a\u8aa4\u5dee\u304c\u5165\u3063\u305f\u6570\u91cf\u3069\u3046\u3057\u3067\u4f5c\u3089\u308c\u305f\u5272\u7b97\u5024\u306f\u3069\u3093\u306a\u78ba\u7387\u5206\u5e03\u306b\u3057\u305f\u304c\u3046\u306e\u304b\uff1f\n\n\n\u5272\u7b97\u5024\u3044\u3089\u305a\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u9805\u308f\u3056\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u67b6\u7a7a\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\n\n\u68ee\u6797\u306e\u3042\u3061\u3053\u3061\u306b\u8abf\u67fb\u5730100\u7b87\u6240\u3092\u8a2d\u5b9a\u3057\u305f\uff08$i \\in \\{ 1, 2, \\dots, 100\\}$\uff09\n\u8abf\u67fb\u5730$i$\u3054\u3068\u306b\u305d\u306e\u9762\u7a4d$A_i$\u304c\u7570\u306a\u308b\n\u8abf\u67fb\u5730$i$\u306e\u300c\u660e\u308b\u3055\u300d$x_i$\u3092\u6e2c\u3063\u3066\u3044\u308b\n\u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u690d\u7269\u500b\u4f53\u6570$y_i$\u3092\u8a18\u9332\u3057\u305f\n\uff08\u89e3\u6790\u76ee\u7684\uff09\u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u690d\u7269\u500b\u4f53\u306e\u300c\u4eba\u53e3\u5bc6\u5ea6\u300d\u304c\u300c\u660e\u308b\u3055\u300d$x_i$\u306b\u3069\u3046\u5f71\u97ff\u3055\u308c\u3066\u3044\u308b\u304b\u77e5\u308a\u305f\u3044\n\n\u9762\u7a4d$A_i$\u3067\u3042\u308b\u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u4eba\u53e3\u5bc6\u5ea6\u306f\uff0c\n\\frac{\u5e73\u5747\u500b\u4f53\u6570\\lambda_i}{A_i} = \u4eba\u53e3\u5bc6\u5ea6\n$${\\frac{\u5e73\u5747\u500b\u4f53\u6570\\lambda_i}{A_i} = \u4eba\u53e3\u5bc6\u5ea6\n}$$\n\u3067\u3042\u308b\uff0e\u4eba\u53e3\u5bc6\u5ea6\u306f\u6b63\u306e\u91cf\u3060\u304b\u3089\uff0c\u6307\u6570\u95a2\u6570\u3068\u660e\u308b\u3055$x_i$\u4f9d\u5b58\u6027\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\uff0c\n\\begin{eqnarray}\n\\lambda_i &=& A_i \\times \u4eba\u53e3\u5bc6\u5ea6 \\\\\n&=& A_i \\exp(\\beta_1 + \\beta_2 x_i) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\log A_i)\n\\end{eqnarray}\n$${\\begin{eqnarray}\n\\lambda_i &=& A_i \\times \u4eba\u53e3\u5bc6\u5ea6 \\\\\n&=& A_i \\exp(\\beta_1 + \\beta_2 x_i) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\log A_i)\n\\end{eqnarray}\n}$$\n\u3068\u306a\u308a\uff0c$z_i=\\beta_1 + \\beta_2 x_i + \\log A_i$\u3092\u7dda\u5f62\u4e88\u6e2c\u5b50\u3068\u3059\u308b\u5bfe\u6570\u30ea\u30f3\u30af\u95a2\u6570\u30fb\u30dd\u30a2\u30bd\u30f3\u5206\u5e03\u306eGLM\u306b\u306a\u308b\uff0e\n>>> d = pandas.read_csv(\"data4b.csv\")\n>>> model = smf.glm('y ~ x', offset=numpy.log(d.A), data=d, family=sm.families.Poisson())\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       98\nModel Family:                 Poisson   Df Model:                            1\nLink Function:                    log   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -323.17\nDate:                Sat, 06 Jun 2015   Deviance:                       81.608\nTime:                        14:45:24   Pearson chi2:                     81.5\nNo. Iterations:                     7\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept      0.9731      0.045     21.600      0.000         0.885     1.061\nx              1.0383      0.078     13.364      0.000         0.886     1.191\n==============================================================================\n\n\n\u6b63\u898f\u5206\u5e03\u3068\u305d\u306e\u5c24\u5ea6\n\u9023\u7d9a\u5024\u306e\u30c7\u30fc\u30bf\u3092\u7d71\u8a08\u30e2\u30c7\u30eb\u3067\u6271\u3046\u305f\u3081\u306e\u78ba\u7387\u5206\u5e03\uff0e\n\u30ac\u30a6\u30b9\u5206\u5e03\uff08Gaussian distribution\uff09\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308b\uff0e\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\n\n\u5e73\u5747\u5024$\\mu$\uff1a$\\pm\\infty$\u306e\u7bc4\u56f2\u3067\u81ea\u7531\u306b\u5909\u5316\u3067\u304d\u308b\uff0e\n\u6a19\u6e96\u504f\u5dee$\\sigma$\uff1a\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u6307\u5b9a\u3067\u304d\u308b\uff0e\n\np(y| \\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2} \\right\\}\n$${p(y| \\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2} \\right\\}\n}$$\n# y <- seq(-5, 5, 0.1)\n# plot(y, dnorm(y, mean=0, sd=1), type=\"l\")\nplt.subplot(131)\nplt.plot(y, sct.norm.pdf(y, loc=0, scale=1))\nplt.title('$\\mu=0, \\sigma=1$')\nplt.subplot(132)\nplt.plot(y, sct.norm.pdf(y, loc=0, scale=3))\nplt.title('$\\mu=0, \\sigma=3$')\nplt.subplot(133)\nplt.plot(y, sct.norm.pdf(y, loc=2, scale=1))\nplt.title('$\\mu=2, \\sigma=1$')\nplt.show()\n\n\nR\u3067\u306f$\\mu$\u304cmean, $\\sigma$\u304csd\u3068\u306a\u3063\u3066\u3044\u308b\u304c\uff0c\npython\u3067\u306f\uff0c$\\mu$\u306floc\uff0c$\\sigma$\u306fscale\u3068\u306a\u3063\u3066\u3044\u308b\uff0e\n\n\n\u305d\u308c\u305e\u308c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u7bc0\u3057\u305f\u3082\u306e\uff0e\u7e26\u8ef8\u306f\u78ba\u7387\u5bc6\u5ea6\u3092\u793a\u3057\u3066\u3044\u308b\uff0e\n\u8d64\u8272\u3067\u5857\u3089\u308c\u305f\u90e8\u5206\u306f\uff0c$1.2 \\leq y \\leq 1.8$\u3068\u306a\u308b\u78ba\u7387\u306e\u5927\u5c0f\u304c\u9762\u7a4d\u3068\u3057\u3066\u8868\u3055\u308c\u3066\u3044\u308b\uff0e\n\u6b63\u898f\u5206\u5e03\u306e\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570\u3092$p(y|\\mu, \\sigma)$\u3068\u3059\u308b\u3068\uff0c\n$p(1.2 \\leq y \\leq 1.8| \\mu, \\sigma) = \\int_{1.2}^{1.8}p(y| \\mu, \\sigma)dy \n$${$p(1.2 \\leq y \\leq 1.8| \\mu, \\sigma) = \\int_{1.2}^{1.8}p(y| \\mu, \\sigma)dy \n}$$\n# \u7d2f\u7a4d\u5206\u5e03\n# pnorm(1.8, 0, 1) - pnorm(1.2, 0, 1)\n>>> sct.norm.cdf(1.8, 0, 1) - sct.norm.cdf(1.2, 0, 1)\n0.079139351108782452\n\n\u78ba\u7387\u306f\u9762\u7a4d\u3067\u3042\u308b\u3053\u3068\u304b\u3089\uff0c\uff0c\u9577\u65b9\u5f62\u3067\u3042\u308b\u3068\u8fd1\u4f3c\u3059\u308b\uff0e\n\u3053\u306e\u5834\u5408\uff0c\u9ad8\u3055\u306f$p(y=1.5|0, 1)$\uff0c\u5e45\u3092$\\Delta y = 1.8-1.2 = 0.6$\u3068\u3059\u308c\u3070\uff0c\n# \u78ba\u7387\u5bc6\u5ea6\n# dnorm(1.5, 0, 1) * 0.6\n>>> sct.norm.pdf(1.5, 0, 1) * 0.6\n0.077710557399535043\n\n\u3068\u8fd1\u4f3c\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\n\u6700\u5c24\u63a8\u5b9a\n$\u78ba\u7387=\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570 \\times \\Delta y$\u306b\u57fa\u3065\u304f\uff0e\n$N$\u4eba\u306e\u4eba\u9593\u96c6\u56e3\u306e\u8eab\u9577\u30c7\u30fc\u30bf\u3092${\\bf Y} = \\{ y_i \\}$\u3068\u3059\u308b\uff0e\n\u3042\u308b$y_i$\u304c$y_i-0.5\\Delta y \\leq y_i \\leq y_i + 0.5\\Delta y$\u3067\u3042\u308b\u78ba\u7387\u306f\uff0c\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570$p(y_i|0, 1)$\u3068\u533a\u9593\u5e45$\\Delta y$\u306e\u5e2d\u3067\u3042\u308b\u3068\u8fd1\u4f3c\u3067\u304d\u308b\u304b\u3089\uff0c\n\u6b63\u898f\u5206\u5e03\u3092\u4f7f\u3063\u305f\u7d71\u8a08\u30e2\u30c7\u30eb\u306e\uff08\u5bfe\u6570\uff09\u5c24\u5ea6\u95a2\u6570\u306f\uff0e\n\\begin{eqnarray}\nL(\\mu, \\sigma) &=& \\prod_i p(y_i|\\mu, \\sigma)\\times \\Delta y \\\\\n&=& \\prod_i \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2}\\right\\}  \\Delta y \\\\\nlog L(\\mu, \\sigma) &=& \\sum_i \\left\\{-\\log \\sqrt{2\\pi\\sigma^2} + \\log \\Delta y - \\frac{(y-\\mu)^2}{2\\sigma^2}    \\right\\} \\\\\n&=& -0.5N\\log(2\\pi\\sigma^2) + N\\log \\Delta y - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n\\end{eqnarray}\n$${\\begin{eqnarray}\nL(\\mu, \\sigma) &=& \\prod_i p(y_i|\\mu, \\sigma)\\times \\Delta y \\\\\n&=& \\prod_i \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2}\\right\\}  \\Delta y \\\\\nlog L(\\mu, \\sigma) &=& \\sum_i \\left\\{-\\log \\sqrt{2\\pi\\sigma^2} + \\log \\Delta y - \\frac{(y-\\mu)^2}{2\\sigma^2}    \\right\\} \\\\\n&=& -0.5N\\log(2\\pi\\sigma^2) + N\\log \\Delta y - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n\\end{eqnarray}\n}$$\n\u3068\u306a\u308b\uff0e\u306a\u304a$\\Delta y$\u306f\u5b9a\u6570\u3067\u3042\u308a\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\uff04\\{\\mu, \\sigma\\}\uff04\u306b\u5f71\u97ff\u3057\u306a\u3044\u305f\u3081\uff0c\n\u4e0a\u5f0f\u3067\u3082\u7121\u8996\u3059\u308b\uff0e\n\u3057\u305f\u304c\u3063\u3066\uff0c\nlog L(\\mu, \\sigma) = -0.5N\\log(2\\pi\\sigma^2)  - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n$${log L(\\mu, \\sigma) = -0.5N\\log(2\\pi\\sigma^2)  - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n}$$\n\u3068\u306a\u308b\uff0e\n\n\u30ac\u30f3\u30de\u5206\u5e03\u306eGLM\n\u30ac\u30f3\u30de\u5206\u5e03\u306f\uff0c\u78ba\u7387\u5909\u6570\u306e\u53d6\u308a\u3046\u308b\u7bc4\u56f2\u304c\uff10\u4ee5\u4e0a\u306e\u9023\u7d9a\u78ba\u7387\u5206\u5e03\uff0e\n\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570\u306f\uff0e\np(y|s, r) = \\frac{r^s}{\\Gamma(s)}y^{s-1}\\exp(-ry) \n$${p(y|s, r) = \\frac{r^s}{\\Gamma(s)}y^{s-1}\\exp(-ry) \n}$$\n$s$\u306fshape\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c$r$\u306frate\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c$\\frac{1}{r}$\u306fscale\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3088\u3073\uff0c$\\Gamma(s)$\u306f\u30ac\u30f3\u30de\u95a2\u6570\u3067\u3042\u308b\uff0e\n\u5e73\u5747\u306f$\\frac{s}{r}$\uff0c\u5206\u6563\u306f$\\frac{s}{r^2}$\u3068\u306a\u308b\uff0e\n\u307e\u305f$s=1$\u306e\u3068\u304d\uff0c\u6307\u6570\u5206\u5e03\u3068\u306a\u308b\uff0e\n# dgamma(y, shape, rate)\n# 1/rate = scale\n>>> y = numpy.arange(0, 5, 0.05)\n>>> plt.subplot(131)\n>>> plt.plot(y, sct.gamma.pdf(y, a=1, scale=1))\n>>> plt.title('$s=1, scale=1/r=1$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=1, scale=1), color='r')\n>>> plt.subplot(132)\n>>> plt.plot(y, sct.gamma.pdf(y, a=5, scale=0.2))\n>>> plt.title('$s=5, scale=1/r=1/5=0.2$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=5, scale=0.2), color='r')\n>>> plt.subplot(133)\n>>> plt.plot(y, sct.gamma.pdf(y, a=0.1, scale=10))\n>>> plt.title('$s=0.1, scale=1/r=1/0.1=10$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=0.1, scale=10), color='r')\n>>> plt.show()\n\n\n\n\u4f8b\u984c\uff1a\u67b6\u7a7a\u690d\u7269\u306e\u8449\u306e\u91cd\u91cf\u3068\u82b1\u306e\u91cd\u91cf\u306e\u95a2\u4fc2\n$x_i$\u304c\u5927\u304d\u304f\u306a\u308b\u306b\u3064\u308c\u3066\uff0c$y_i\uff04\u3082\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3059\uff0e\n\\begin{eqnarray}\n\\mu_i &=& Ax_i^b \\\\\n&=&\\exp(a)x_i^b = \\exp(a+b\\log x_i) (\\because A = \\exp(a)) \\\\\n\\log\\mu_i &=& a+blogx_i\n\n\\end{eqnarray}\n$${\\begin{eqnarray}\n\\mu_i &=& Ax_i^b \\\\\n&=&\\exp(a)x_i^b = \\exp(a+b\\log x_i) (\\because A = \\exp(a)) \\\\\n\\log\\mu_i &=& a+blogx_i\n\n\\end{eqnarray}\n}$$\n>>> model = smf.glm('y ~ numpy.log(x)', data=d, family=sm.families.Gamma(link=sm.families.links.log))\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                   50\nModel:                            GLM   Df Residuals:                       48\nModel Family:                   Gamma   Df Model:                            1\nLink Function:                    log   Scale:                  0.325084605974\nMethod:                          IRLS   Log-Likelihood:                 58.471\nDate:                Sat, 06 Jun 2015   Deviance:                       17.251\nTime:                        20:38:39   Pearson chi2:                     15.6\nNo. Iterations:                    12\n================================================================================\n                   coef    std err          z      P>|z|      [95.0% Conf. Int.]\n--------------------------------------------------------------------------------\nIntercept       -1.0403      0.119     -8.759      0.000        -1.273    -0.808\nnumpy.log(x)     0.6832      0.068      9.992      0.000         0.549     0.817\n================================================================================\n\nget_y_mean = lambda b1, b2, x: numpy.exp(b1 + b2 * numpy.log(x))\nmodel = smf.glm('y ~ numpy.log(x)', data=d, family=sm.families.Gamma(link=sm.families.links.log))\nvc = model.fit().params\n\nax = plt.figure().add_subplot(111)\nax.plot(d.x, d.y, 'o')\nax.plot(d.x, get_y_mean(-1, 0.7, d.x),'--')\nax.plot(d.x, get_y_mean(vc[0], vc[1], d.x))\n\n\nphi = model.fit().scale\nm = get_y_mean(vc[0], vc[1], d.x)\nscale = [(i * phi) for i in m]\nshape = 1 / phi\ndef plot_pi(q):\n    x = numpy.r_[numpy.array(d.x), numpy.array(d.x)[::-1]]\n    y = numpy.r_[sct.gamma.ppf(q, a=shape, scale=scale), sct.gamma.ppf(1-q, a=shape, scale=scale)[::-1]]\n    pair = [(x[i], y[i]) for i in range(len(x))]\n    poly = plt.Polygon(pair, alpha=0.2, edgecolor='none')\n    return poly\nax.add_patch(plot_pi(0.05))\nax.add_patch(plot_pi(0.25))\n\nplt.show()\n\n\n\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\u30dd\u30a2\u30bd\u30f3\u56de\u5e30\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u9805\u308f\u3056\uff0c\u6b63\u898f\u5206\u5e03\u3084\u30ac\u30f3\u30de\u5206\u5e03\u3092\u4f7f\u3046GLM\u3092\u6271\u3046\uff0e\n\n# \u3055\u307e\u3056\u307e\u306a\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u3092\u5fdc\u7528\u3067\u304d\u308bGLM\n\n\u78ba\u7387\u5206\u5e03\u30fb\u30ea\u30f3\u30af\u95a2\u6570\u30fb\u7dda\u5f62\u4e88\u6e2c\u5b50\u306e\u7d44\u307f\u5408\u308f\u305b\u306b\u3088\u3063\u3066\uff0cGLM\u3067\u69d8\u3005\u306a\u30bf\u30a4\u30d7\u306e\u30c7\u30fc\u30bf\u3092\u8868\u73fe\u3067\u304d\u308b\uff0e\n\nPython\u5185\u3067\u306eGLM\u69cb\u7bc9\u306b\u4f7f\u3048\u308b\u78ba\u7387\u5206\u5e03\u306e\u4e00\u90e8\n\u4e71\u6570\u751f\u6210\u306f`scipy.stats.X`\uff0cglm()\u306efamily\u306f`statsmodels.api.families.X`\u3067\u6307\u5b9a\u3059\u308b\uff0e\n\n\n| \u3000|\u78ba\u7387\u5206\u5e03 |\u4e71\u6570\u751f\u6210|glm()\u306efamily\u6307\u5b9a|\u3088\u304f\u4f7f\u3046\u30ea\u30f3\u30af\u95a2\u6570|\n|:-:|:-:|:-:|:-:|:-:|:-:|\n|\uff08\u96e2\u6563\uff09|\u4e8c\u9805\u5206\u5e03|binom.rvs()|Binomial()|logit|\n|\u3000| \u30dd\u30a2\u30bd\u30f3\u5206\u5e03 | poisson.rvs() | Poisson() | log |\n|\u3000|\u8ca0\u306e\u4e8c\u9805\u5206\u5e03|nbinom.rvs()|NegativeGaussian()|log|\n|\uff08\u9023\u7d9a\uff09| \u30ac\u30f3\u30de\u5206\u5e03 | gamma.rvs()|Ganma()| log?|\n|\u3000| \u6b63\u898f\u5206\u5e03 | norm.rvs() | Gaussian() | identity|\n\n\n# \u4e8c\u9805\u5206\u5e03\u3092\u4f7f\u3063\u305fGLM\n\n\u4e8c\u9805\u5206\u5e03\u306f\uff0c**\u4e0a\u9650\u306e\u3042\u308b\u30ab\u30a6\u30f3\u30c8\u30c7\u30fc\u30bf**\uff08\u5fdc\u7b54\u5909\u6570\u304c$y \\in  \\\\{ 0, 1, 2, \\dots, N \\\\} $\uff09\u306e\u3068\u304d\u306b\u7528\u3044\u308b\uff0e\n\n> N\u500b\u4f53\u306e\u5b9f\u9a13\u5bfe\u8c61\u306b\u540c\u3058\u51e6\u7406\u3092\u3057\u305f\u3089\uff0c$y$\u500b\u4f53\u3067\u53cd\u5fdc\u304c\u967d\u6027\uff0c$N-y$\u500b\u4f53\u3067\u306f\u9670\u6027\u3060\u3063\u305f\n\n\u4eca\u56de\u306e\u4f8b\u984c\u306f\uff0c\n\n\u300c\u3042\u308b\u67b6\u7a7a\u690d\u7269\u306e\u500b\u4f53$i$\u305d\u308c\u305e\u308c\u306b\u304a\u3044\u3066\uff0c$N_i$\u500b\u306e\u89b3\u5bdf\u7a2e\u5b50\u306e\u3046\u3061\u751f\u304d\u3066\u3044\u3066\u767a\u82bd\u80fd\u529b\u304c\u3042\u308b\u3082\u306e\u306f$y_i$\u500b\uff0c\u6b7b\u3093\u3060\u7a2e\u5b50\u306f$N_i-y_i$\u500b\u300d\n\n\u3068\u3044\u3046\u89b3\u6e2c\u30c7\u30fc\u30bf\u3067\uff0c\u5168\u90e8\u3067100\u500b\u4f53\u306e\u690d\u7269\u3092\u8abf\u3079\u305f\u3068\u3059\u308b\uff0e\n\u203b\u306a\u304a\uff0c\u89b3\u5bdf\u7a2e\u5b50\u6570$N_i$\u306f\u3069\u306e\u500b\u4f53\u3067\u30828\u500b\u3068\u3059\u308b\uff0e\n\n### \u5fdc\u7b54\u5909\u6570\u306b\u3064\u3044\u3066\n\n\u5fdc\u7b54\u5909\u6570\u3067\u3042\u308b\u751f\u5b58\u7a2e\u5b50\u6570\u306e\u3068\u308a\u3046\u308b\u5024\u306f\uff0c$y_i \\in \\\\{0, 1, 2, 3, \\dots, 8 \\\\}$\u3068\u306a\u308a\uff0c\n\u5168\u90e8\u751f\u5b58\u3057\u3066\u3044\u305f\u5834\u5408\u306f$y_i = 8$\uff0c\u5168\u8da3\u65e8\u304c\u6b7b\u4ea1\u3057\u3066\u3044\u305f\u5834\u5408\u306f$y_i=0$\u3068\u306a\u308b\uff0e\n\n\n\u300c\u3042\u308b\u500b\u4f53$i$\u304b\u3089\u5f97\u3089\u308c\u305f\u4e00\u500b\u306e\u7a2e\u5b50\u304c\u751f\u304d\u3066\u3044\u308b\u78ba\u7387\u300d\u3092$q_i$\u3068\u3059\u308b\uff0e\n\n### \u8aac\u660e\u5909\u6570\u306b\u3064\u3044\u3066\n\n\u500b\u4f53\u306e\u5927\u304d\u3055\u3092\u8868\u3059\u4f53\u30b5\u30a4\u30ba$x_i$\u306b\u3088\u3063\u3066\uff0c\u751f\u5b58\u78ba\u7387$q_i$\u304c\u4e0a\u4e0b\u3059\u308b\uff0e\n\u307e\u305f\uff0c\u5168100\u500b\u4f53\u306e\u3046\u306150\u500b\u4f53\uff08$i \\in \\\\{1, 2, \\dots, 50 \\\\}$\uff09\u306f\u7121\u51e6\u7406\uff08$f_i = C$\uff09,\n\u6b8b\u308a\u306e50\u500b\u4f53\uff08$i \\in \\\\{ 51, 52, \\dots, 100 \\\\}$\uff09\u306f\u65bd\u80a5\u51e6\u7406\uff08$f_i = T$\uff09\u3068\u3059\u308b\uff0e \n\n```pycon\n>>> import pandas\n>>> import matplotlib.pyplot as plt\n>>> d = pandas.read_csv(\"data4a.csv\")\n>>> d.describe()\n         N           y           x\ncount  100  100.000000  100.000000\nmean     8    5.080000    9.967200\nstd      0    2.743882    1.088954\nmin      8    0.000000    7.660000\n25%      8    3.000000    9.337500\n50%      8    6.000000    9.965000\n75%      8    8.000000   10.770000\nmax      8    8.000000   12.440000\n>>> plt.plot(d.x[d.f == 'C'], d.y[d.f == 'C'], 'bo')\n>>> plt.plot(d.x[d.f == 'T'], d.y[d.f == 'T'], 'ro')\n>>> plt.show()\n```\n\n![Screen Shot 2015-06-06 at 00.18.47.png](https://qiita-image-store.s3.amazonaws.com/0/48856/7d2f242a-182f-c144-81d3-1198e6a142e7.png \"Screen Shot 2015-06-06 at 00.18.47.png\")\n\n\u56f3\u304b\u3089\u308f\u304b\u308b\u3053\u3068\u3068\u3057\u3066\n\n- \u4f53\u30b5\u30a4\u30ba$x_i$\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u751f\u5b58\u7a2e\u5b50\u6570$y_i$\u304c\u591a\u304f\u306a\u308b\u3089\u3057\u3044\n- \u80a5\u6599\u3092\u3084\u308b\u3068\uff08$f_i=T$\uff09\u751f\u5b58\u7a2e\u5b50\u6570$y_i$\u304c\u591a\u304f\u306a\u308b\u3089\u3057\u3044\n\n## \u4e8c\u9805\u5206\u5e03\n\n```math\np(y|N, q) = \\left( \\begin{array}{c}\n      N \\\\\n      y \n    \\end{array}\n    \\right) q^y (1-q)^{N-y}\n```\n\n```pycon\n>>> import math\n>>> p = lambda y, N, q: (math.factorial(N) / (math.factorial(y) * math.factorial(N-y))) * (q ** y) * ((1-q) ** (N-y))\n>>> p1 = [p(i, 8, 0.1) for i in y]\n>>> p2 = [p(i, 8, 0.3) for i in y]\n>>> p3 = [p(i, 8, 0.8) for i in y]\n>>> plt.plot(y, p1, 'b-o')\n>>> plt.plot(y, p2, 'r-o')\n>>> plt.plot(y, p3, 'g-o')\n>>> plt.show()\n```\n![Screen Shot 2015-06-06 at 10.34.58.png](https://qiita-image-store.s3.amazonaws.com/0/48856/fd568876-b7a0-b7ad-a7ae-f27a5226ab92.png \"Screen Shot 2015-06-06 at 10.34.58.png\")\n\n\n\n## \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u30ed\u30b8\u30c3\u30c8\u30ea\u30f3\u30af\u95a2\u6570\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3067\u306f\uff0c\n\n- \u78ba\u7387\u5206\u5e03\uff1a**\u4e8c\u9805\u5206\u5e03**\n- \u30ea\u30f3\u30af\u95a2\u6570\uff1a**\u30ed\u30b8\u30c3\u30c8\u30ea\u30f3\u30af\u95a2\u6570**\uff08logit link function\uff09\n\n\u3092\u7528\u3044\u308b\uff0e\n\n### **\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570**\u306b\u3064\u3044\u3066\n\n```math\nq_i = logistic(z_i) = \\frac{1}{1+\\exp(-z_i)}\n```\n\n\u3068\u5b9a\u7fa9\u3055\u308c\uff0c\u5909\u6570$z_i$\u306f\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i = \\beta_1 + \\beta_2 x_1 + \\dots$\u3067\u3042\u308b\uff0e\n\n```pycon\n>>> logistic = lambda z: 1 / (1 + numpy.exp(-z))\n>>> z = numpy.arange(-6, 6, 0.1)\n>>> plt.plot(z, logistic(z))\n>>> plt.show()\n```\n\n![Screen Shot 2015-06-06 at 10.50.15.png](https://qiita-image-store.s3.amazonaws.com/0/48856/04a1183a-f110-554a-bcd9-10c0a0e77923.png \"Screen Shot 2015-06-06 at 10.50.15.png\")\n\n\u751f\u5b58\u78ba\u7387$q_i$\u304c$z_i$\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3068\uff0c\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i$\u304c\u3069\u3093\u306a\u5024\u3067\u3082\uff0c$0 \\leq q_i \\leq 1$\u3068\u306a\u308b\uff0e\n\n\u751f\u5b58\u78ba\u7387$q_i$\u304c\u4f53\u30b5\u30a4\u30ba$x_i$\u3060\u3051\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u3068\u4eee\u5b9a\u3059\u308b\u3068\uff0c\u7dda\u5f62\u4e88\u6e2c\u5b50$z_i=\\beta_1 + \\beta_2 x_i$\u3068\u306a\u308b\uff0e\n\n### $q_i$\u3068$x_i$\u304c$\\beta_1$\u3068$\\beta_2$\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u69d8\u5b50\n\n```pycon\n>>> plt.subplot(121)\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(0 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'b-', label='beta1=0')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(2 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'r-', label='beta1=2')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(-3 + 2 * x)))\n>>> plt.plot(z, logistic(z), 'g-', label='beta1=-3')\n>>> plt.legend(loc='middle right')\n>>> plt.subplot(122)\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(2 * x)))\n>>> plt.plot(z, logistic(z), 'b-', label='beta2=2')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(4 * x)))\n>>> plt.plot(z, logistic(z), 'r-', label='beta2=4')\n>>> logistic = lambda x: 1 / (1 + numpy.exp(-(-1 * x)))\n>>> plt.plot(z, logistic(z), 'g-', label='beta2=-1')\n>>> plt.legend(loc='middle right')\n>>> plt.show()\n\n```\n\n![Screen Shot 2015-06-06 at 11.18.09.png](https://qiita-image-store.s3.amazonaws.com/0/48856/d44d3aff-ed1c-5264-e63e-e15dbb5ccb0c.png \"Screen Shot 2015-06-06 at 11.18.09.png\")\n\n\n### \u30ed\u30b8\u30c3\u30c8\u95a2\u6570\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u3092\u5909\u5f62\u3059\u308b\uff0e\n\n```math\n\\begin{eqnarray}\nq_i &=& \\frac{1}{1+\\exp(-z_i)} \\\\\nq_i + q_i \\exp(-z_i) &=& 1 \\\\\n1 - q_i &=& q_i \\exp (-z_i)\\\\\n\\frac{1 - q_i}{q_i} &=& \\exp (-z_i) \\\\\n\\log \\frac{1 - q_i}{q_i} &=& -z_i \\\\\n\\log \\frac{q_i}{1 - q_i} &=& z_i\n\\end{eqnarray}\n```\n\n\u5de6\u8fba\u3092**\u30ed\u30b8\u30c3\u30c8\u95a2\u6570**\u3068\u3088\u3076\uff0e\n\n```math\nlogit(q_i) = \\log \\frac{q_i}{1 - q_i}\n```\n\n\u203b\u30ed\u30b8\u30c3\u30c8\u95a2\u6570\u306f\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u9006\u95a2\u6570\n\n\n\n## \u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\n\n\u751f\u5b58\u78ba\u7387$q_i$\u306e\u3082\u3068\u3067\u306e(\u5bfe\u6570)\u5c24\u5ea6\u3092\u6700\u5927\u5316\u3055\u305b\u308b\uff0e\n\n\n```math\n\\begin{eqnarray}\nL(q) &=& \\prod_i p(y_i | N_i, q_i) \\\\\n&=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\\\\nL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\prod_i \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} (\\because logit(q_i) = z_i = \\beta_1 + \\beta_2 x_i + \\beta_3 d_i) \\\\\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\log \\left\\{\\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right)q_i^{y_i}(1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + \\log q_i^{y_i} + \\log (1-q_i)^{N_i-y_i} \\right\\} \\\\\n\nlogL(\\{\\beta_1, \\beta_2, \\beta_3\\}) &=& \\sum_i \\left\\{ \\log \\left( \\begin{array}{c}\n      N_i \\\\\n      y_i \n    \\end{array}\n    \\right) + (y_i)\\log q_i + (N_i-y_i)\\log (1-q_i) \\right\\} \\\\\n\\end{eqnarray}\n```\n\n\n```pycon\n>>> import statsmodels.formula.api as smf\n>>> import statsmodels.api as sm\n>>> import pandas\n>>> d = pandas.read_csv(\"data4a.csv\")\n# glm(cbind(y, N-y) ~ x + f, data=d, family=binomial)\n>>> model = smf.glm('y + I(N-y) ~ x + f', data=d, family=sm.families.Binomial())\n>>> fit = model.fit()\n>>> fit.summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:      ['y', 'I(N - y)']   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       97\nModel Family:                Binomial   Df Model:                            2\nLink Function:                  logit   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -133.11\nDate:                Sat, 06 Jun 2015   Deviance:                       123.03\nTime:                        12:06:47   Pearson chi2:                     109.\nNo. Iterations:                     8\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept    -19.5361      1.414    -13.818      0.000       -22.307   -16.765\nf[T.T]         2.0215      0.231      8.740      0.000         1.568     2.475\nx              1.9524      0.139     14.059      0.000         1.680     2.225\n==============================================================================\n```\n\n\n![Screen Shot 2015-06-06 at 12.56.03.png](https://qiita-image-store.s3.amazonaws.com/0/48856/8441e09e-2c45-0a4e-c3de-f6594f9ae12f.png \"Screen Shot 2015-06-06 at 12.56.03.png\")\n\n\n### \u30aa\u30c3\u30ba\u306b\u3064\u3044\u3066\n\n\uff08\u751f\u5b58\u3059\u308b\u78ba\u7387\uff09/ (\u751f\u5b58\u3057\u306a\u3044\u78ba\u7387\uff09\u3068\u3044\u3046\u6bd4\u3092**\u30aa\u30c3\u30ba**\u3068\u3088\u3076\uff0e\n\n```math\n\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &=& \\exp(\u7dda\u5f62\u4e88\u6e2c\u5b50) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\beta_3 f_i) \\\\\n&=& \\exp(\\beta_1)\\exp(\\beta_2 x_i)\\exp(\\beta_3 f_i)\n\\end{eqnarray}\n\n```\n\n\n\u4eca\u56de\u63a8\u5b9a\u3057\u305f$\\\\{\\beta_2, \\beta_3 \\\\}$\u306b\u7740\u76ee\u3059\u308b\u3068\n\n```math\n\\frac{q_i}{1-q_i} \\propto \\exp(1.95x_i)\\exp(2.02f_i)\n\n```\n\n\u3068\u5404\u8aac\u660e\u5909\u6570\u3068\u6bd4\u4f8b\u95a2\u4fc2\u306b\u306a\u308b\uff0e\n\n\u4f53\u30b5\u30a4\u30ba$x_i$\u306e\u5f71\u97ff\u306f\uff0c\n\n```math\n\\begin{eqnarray}\n\\frac{q_i}{1-q_i} &\\propto& \\exp(1.95(x_i + 1))\\exp(2.02f_i) \\\\\n&\\propto& \\exp(1.95x_i)\\exp(1.95)\\exp(2.02f_i)\n\\end{eqnarray}\n```\n\n\u304b\u3089$\\exp(1.95) \\approx 7.03$\u500d\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\u540c\u69d8\u306b\u65bd\u80a5\u52b9\u679c\u3082$exp(2.02) \\approx 7.54$\u500d\u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\n### \u30aa\u30c3\u30ba\u6bd4\u306b\u3064\u3044\u3066\n\n\u8981\u56e0$X$\u306e\u52b9\u679c\uff08$\\beta_x=1.95$\uff09\u3092\u793a\u3059\uff0e\n\n```math\n\\begin{eqnarray}\n\\frac{X\u306e\u30aa\u30c3\u30ba}{\u975eX\u306e\u30aa\u30c3\u30ba} &=& \\frac{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 1)}{\\exp(X\\bullet\u975eX\u306e\u5171\u901a\u90e8\u5206)\\times \\exp(1.95 \\times 0)} \\\\\n&=& exp(1.95) \\approx 7.03\n\\end{eqnarray}\n```\n\n\n## \u30e2\u30c7\u30eb\u9078\u629e\n\nAIC\u306b\u3088\u308b\u30e2\u30c7\u30eb\u9078\u629e\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u30cd\u30b9\u30c8\u3057\u3066\u3044\u308b\u30e2\u30c7\u30eb\u306e\u9078\u629e\n\n- \u4e00\u5b9a\u30e2\u30c7\u30eb\uff08\u5207\u7247\u306e\u307f\uff09\n- x\u30e2\u30c7\u30eb\uff08\u4f53\u30b5\u30a4\u30ba\u306e\u307f\uff09\n- f\u30e2\u30c7\u30eb\uff08\u65bd\u80a5\u52b9\u679c\u306e\u307f\uff09\n- x+f\u30e2\u30c7\u30eb\uff08\u4f53\u30b5\u30a4\u30ba\uff0b\u65bd\u80a5\u52b9\u679c\uff09\n\nR\u306b\u306f`MASS package`\u306e`stepAIC()`\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\uff0e\n\u3068\u308a\u3042\u3048\u305a\u524d\u56de\u3068\u540c\u69d8\u306b\u3059\u308b\u3068\uff0cx+f\u30e2\u30c7\u30eb\u304c\u6700\u3082AIC\u304c\u4f4e\u304f\u306a\u308a\uff0c\u826f\u3044\u30e2\u30c7\u30eb\u3068\u306a\u308b\uff0e\n\n## \u4ea4\u4e92\u4f5c\u7528\u9805\n\n\u4f53\u30b5\u30a4\u30ba\u3068\u65bd\u80a5\u52b9\u679c\u306e\u639b\u3051\u5408\u308f\u305b\u306b\u3088\u308b\u52b9\u679c\u3092\u8003\u3048\u308b\uff0e\n\u3064\u307e\u308a\uff0c\n\n```math\nlogit(q_i) = \\beta_1 + \\beta_2 x_i + \\beta_3 f_i + \\beta_4 x_i f_i\n```\n\n\u3092\u8003\u3048\u308b\uff0e\n\n```pycon\n# glm(cbind(y, N-y) ~ x * f, data=d, family=binomial)\n>>> model = smf.glm('y + I(N-y) ~ x * f', data=d, family=sm.families.Binomial())\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:      ['y', 'I(N - y)']   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       96\nModel Family:                Binomial   Df Model:                            3\nLink Function:                  logit   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -132.81\nDate:                 \u571f, 06  6 2015   Deviance:                       122.43\nTime:                        13:44:31   Pearson chi2:                     13.6\nNo. Iterations:                     8\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept    -18.5233      5.335     -3.472      0.001       -28.979    -8.067\nf[T.T]        -0.0638      7.647     -0.008      0.993       -15.052    14.924\nx              1.8525      0.525      3.529      0.000         0.824     2.881\nx:f[T.T]       0.2163      0.792      0.273      0.785        -1.336     1.769\n==============================================================================\n```\n\n\u3068\u4eca\u56de\u306fAIC\u304c\u4e0a\u304c\u3063\u3066\u3057\u307e\u3063\u305f\u305f\u3081\uff0c\u4ea4\u4e92\u4f5c\u7528\u306f\u306a\u304b\u3063\u305f\u3068\u3044\u3046\u3053\u3068\uff0e\n\n\n\n\n# \u5272\u7b97\u5024\u306e\u7d71\u8a08\u30e2\u30c7\u30ea\u30f3\u30b0\u306f\u3084\u3081\u308b\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u306e\u30e1\u30ea\u30c3\u30c8\u306e\u4e00\u3064\u306b\uff0c$(\u89b3\u6e2c\u30c7\u30fc\u30bf) / (\u89b3\u6e2c\u30c7\u30fc\u30bf)$\u3068\u3044\u3046\u5272\u7b97\u5024\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u306a\u3044\uff0e\n\u5272\u7b97\u5730\u306f\u4eca\u56de\u306e\u4f8b\u984c\u3067\u3044\u3046\u300c\u7a2e\u5b50\u306e\u751f\u5b58\u78ba\u7387\u304c\u4f55\u306b\u4f9d\u5b58\u3057\u3066\u3044\u308b\u304b\u300d\u3092\u77e5\u308a\u305f\u3044\u3068\u304d\u306b\u3064\u304f\u308a\u304c\u3061\uff0e\n\n\u30c7\u30e1\u30ea\u30c3\u30c8\u3068\u3057\u3066\n\n- **\u60c5\u5831\u304c\u5931\u308f\u308c\u308b**\uff1a\u4f8b\u3068\u3057\u3066\u91ce\u7403\u306e\u6253\u7387\uff0e1000\u6253\u6570300\u5b89\u6253\u3068100\u6253\u657030\u5b89\u6253\u306f\u5171\u306b3\u5272\u6253\u8005\u3060\u304c\uff0c\u540c\u69d8\u306b\u78ba\u304b\u3089\u3057\u3044\u3068\u3044\u3048\u308b\u3060\u308d\u3046\u304b\uff1f\n- **\u5909\u63db\u3055\u308c\u305f\u5024\u306e\u5206\u5e03\u306f\uff1f**\uff1a\u8aa4\u5dee\u304c\u5165\u3063\u305f\u6570\u91cf\u3069\u3046\u3057\u3067\u4f5c\u3089\u308c\u305f\u5272\u7b97\u5024\u306f\u3069\u3093\u306a\u78ba\u7387\u5206\u5e03\u306b\u3057\u305f\u304c\u3046\u306e\u304b\uff1f\n\n## \u5272\u7b97\u5024\u3044\u3089\u305a\u306e\u30aa\u30d5\u30bb\u30c3\u30c8\u9805\u308f\u3056\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u67b6\u7a7a\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\n\n- \u68ee\u6797\u306e\u3042\u3061\u3053\u3061\u306b\u8abf\u67fb\u5730100\u7b87\u6240\u3092\u8a2d\u5b9a\u3057\u305f\uff08$i \\in \\\\{ 1, 2, \\dots, 100\\\\}$\uff09\n- \u8abf\u67fb\u5730$i$\u3054\u3068\u306b\u305d\u306e\u9762\u7a4d$A_i$\u304c\u7570\u306a\u308b\n- \u8abf\u67fb\u5730$i$\u306e\u300c\u660e\u308b\u3055\u300d$x_i$\u3092\u6e2c\u3063\u3066\u3044\u308b\n- \u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u690d\u7269\u500b\u4f53\u6570$y_i$\u3092\u8a18\u9332\u3057\u305f\n- \uff08\u89e3\u6790\u76ee\u7684\uff09\u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u690d\u7269\u500b\u4f53\u306e\u300c\u4eba\u53e3\u5bc6\u5ea6\u300d\u304c\u300c\u660e\u308b\u3055\u300d$x_i$\u306b\u3069\u3046\u5f71\u97ff\u3055\u308c\u3066\u3044\u308b\u304b\u77e5\u308a\u305f\u3044\n\n\u9762\u7a4d$A_i$\u3067\u3042\u308b\u8abf\u67fb\u5730$i$\u306b\u304a\u3051\u308b\u4eba\u53e3\u5bc6\u5ea6\u306f\uff0c\n\n```math\n\\frac{\u5e73\u5747\u500b\u4f53\u6570\\lambda_i}{A_i} = \u4eba\u53e3\u5bc6\u5ea6\n```\n\n\u3067\u3042\u308b\uff0e\u4eba\u53e3\u5bc6\u5ea6\u306f\u6b63\u306e\u91cf\u3060\u304b\u3089\uff0c\u6307\u6570\u95a2\u6570\u3068\u660e\u308b\u3055$x_i$\u4f9d\u5b58\u6027\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\uff0c\n\n```math\n\\begin{eqnarray}\n\\lambda_i &=& A_i \\times \u4eba\u53e3\u5bc6\u5ea6 \\\\\n&=& A_i \\exp(\\beta_1 + \\beta_2 x_i) \\\\\n&=& \\exp(\\beta_1 + \\beta_2 x_i + \\log A_i)\n\\end{eqnarray}\n```\n\n\u3068\u306a\u308a\uff0c$z_i=\\beta_1 + \\beta_2 x_i + \\log A_i$\u3092\u7dda\u5f62\u4e88\u6e2c\u5b50\u3068\u3059\u308b\u5bfe\u6570\u30ea\u30f3\u30af\u95a2\u6570\u30fb\u30dd\u30a2\u30bd\u30f3\u5206\u5e03\u306eGLM\u306b\u306a\u308b\uff0e\n\n```pycon\n>>> d = pandas.read_csv(\"data4b.csv\")\n>>> model = smf.glm('y ~ x', offset=numpy.log(d.A), data=d, family=sm.families.Poisson())\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                  100\nModel:                            GLM   Df Residuals:                       98\nModel Family:                 Poisson   Df Model:                            1\nLink Function:                    log   Scale:                             1.0\nMethod:                          IRLS   Log-Likelihood:                -323.17\nDate:                Sat, 06 Jun 2015   Deviance:                       81.608\nTime:                        14:45:24   Pearson chi2:                     81.5\nNo. Iterations:                     7\n==============================================================================\n                 coef    std err          z      P>|z|      [95.0% Conf. Int.]\n------------------------------------------------------------------------------\nIntercept      0.9731      0.045     21.600      0.000         0.885     1.061\nx              1.0383      0.078     13.364      0.000         0.886     1.191\n==============================================================================\n```\n\n\n\n\n\n\n# \u6b63\u898f\u5206\u5e03\u3068\u305d\u306e\u5c24\u5ea6\n\n\u9023\u7d9a\u5024\u306e\u30c7\u30fc\u30bf\u3092\u7d71\u8a08\u30e2\u30c7\u30eb\u3067\u6271\u3046\u305f\u3081\u306e\u78ba\u7387\u5206\u5e03\uff0e\n**\u30ac\u30a6\u30b9\u5206\u5e03**\uff08**Gaussian distribution**\uff09\u3068\u547c\u3070\u308c\u308b\u3053\u3068\u3082\u3042\u308b\uff0e\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\n\n- \u5e73\u5747\u5024$\\mu$\uff1a$\\pm\\infty$\u306e\u7bc4\u56f2\u3067\u81ea\u7531\u306b\u5909\u5316\u3067\u304d\u308b\uff0e\n- \u6a19\u6e96\u504f\u5dee$\\sigma$\uff1a\u30c7\u30fc\u30bf\u306e\u3070\u3089\u3064\u304d\u3092\u6307\u5b9a\u3067\u304d\u308b\uff0e\n\n```math\np(y| \\mu, \\sigma) = \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2} \\right\\}\n```\n\n```pycon\n# y <- seq(-5, 5, 0.1)\n# plot(y, dnorm(y, mean=0, sd=1), type=\"l\")\nplt.subplot(131)\nplt.plot(y, sct.norm.pdf(y, loc=0, scale=1))\nplt.title('$\\mu=0, \\sigma=1$')\nplt.subplot(132)\nplt.plot(y, sct.norm.pdf(y, loc=0, scale=3))\nplt.title('$\\mu=0, \\sigma=3$')\nplt.subplot(133)\nplt.plot(y, sct.norm.pdf(y, loc=2, scale=1))\nplt.title('$\\mu=2, \\sigma=1$')\nplt.show()\n```\n\n> R\u3067\u306f$\\mu$\u304c`mean`, $\\sigma$\u304c`sd`\u3068\u306a\u3063\u3066\u3044\u308b\u304c\uff0c\n> python\u3067\u306f\uff0c$\\mu$\u306f`loc`\uff0c$\\sigma$\u306f`scale`\u3068\u306a\u3063\u3066\u3044\u308b\uff0e\n\n\n\n![Screen Shot 2015-06-06 at 18.42.33.png](https://qiita-image-store.s3.amazonaws.com/0/48856/ef860aed-065c-9e87-299f-1ff133404684.png \"Screen Shot 2015-06-06 at 18.42.33.png\")\n\n\n\u305d\u308c\u305e\u308c\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u7bc0\u3057\u305f\u3082\u306e\uff0e\u7e26\u8ef8\u306f**\u78ba\u7387\u5bc6\u5ea6**\u3092\u793a\u3057\u3066\u3044\u308b\uff0e\n\u8d64\u8272\u3067\u5857\u3089\u308c\u305f\u90e8\u5206\u306f\uff0c$1.2 \\leq y \\leq 1.8$\u3068\u306a\u308b\u78ba\u7387\u306e\u5927\u5c0f\u304c\u9762\u7a4d\u3068\u3057\u3066\u8868\u3055\u308c\u3066\u3044\u308b\uff0e\n\n\n\u6b63\u898f\u5206\u5e03\u306e\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570\u3092$p(y|\\mu, \\sigma)$\u3068\u3059\u308b\u3068\uff0c\n\n```math\n$p(1.2 \\leq y \\leq 1.8| \\mu, \\sigma) = \\int_{1.2}^{1.8}p(y| \\mu, \\sigma)dy \n```\n\n```pycon\n# \u7d2f\u7a4d\u5206\u5e03\n# pnorm(1.8, 0, 1) - pnorm(1.2, 0, 1)\n>>> sct.norm.cdf(1.8, 0, 1) - sct.norm.cdf(1.2, 0, 1)\n0.079139351108782452\n```\n\n\u78ba\u7387\u306f\u9762\u7a4d\u3067\u3042\u308b\u3053\u3068\u304b\u3089\uff0c\uff0c\u9577\u65b9\u5f62\u3067\u3042\u308b\u3068\u8fd1\u4f3c\u3059\u308b\uff0e\n\u3053\u306e\u5834\u5408\uff0c\u9ad8\u3055\u306f$p(y=1.5|0, 1)$\uff0c\u5e45\u3092$\\Delta y = 1.8-1.2 = 0.6$\u3068\u3059\u308c\u3070\uff0c\n\n```pycon\n# \u78ba\u7387\u5bc6\u5ea6\n# dnorm(1.5, 0, 1) * 0.6\n>>> sct.norm.pdf(1.5, 0, 1) * 0.6\n0.077710557399535043\n```\n\n\u3068\u8fd1\u4f3c\u304c\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\uff0e\n\n\n## \u6700\u5c24\u63a8\u5b9a\n\n$\u78ba\u7387=\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570 \\times \\Delta y$\u306b\u57fa\u3065\u304f\uff0e\n\n$N$\u4eba\u306e\u4eba\u9593\u96c6\u56e3\u306e\u8eab\u9577\u30c7\u30fc\u30bf\u3092${\\bf Y} = \\\\{ y_i \\\\}$\u3068\u3059\u308b\uff0e\n\u3042\u308b$y_i$\u304c$y_i-0.5\\Delta y \\leq y_i \\leq y_i + 0.5\\Delta y$\u3067\u3042\u308b\u78ba\u7387\u306f\uff0c\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570$p(y_i|0, 1)$\u3068\u533a\u9593\u5e45$\\Delta y$\u306e\u5e2d\u3067\u3042\u308b\u3068\u8fd1\u4f3c\u3067\u304d\u308b\u304b\u3089\uff0c\n\u6b63\u898f\u5206\u5e03\u3092\u4f7f\u3063\u305f\u7d71\u8a08\u30e2\u30c7\u30eb\u306e\uff08\u5bfe\u6570\uff09\u5c24\u5ea6\u95a2\u6570\u306f\uff0e\n\n```math\n\\begin{eqnarray}\nL(\\mu, \\sigma) &=& \\prod_i p(y_i|\\mu, \\sigma)\\times \\Delta y \\\\\n&=& \\prod_i \\frac{1}{\\sqrt{2\\pi\\sigma^2}}\\exp \\left\\{ -\\frac{(y-\\mu)^2}{2\\sigma^2}\\right\\}  \\Delta y \\\\\nlog L(\\mu, \\sigma) &=& \\sum_i \\left\\{-\\log \\sqrt{2\\pi\\sigma^2} + \\log \\Delta y - \\frac{(y-\\mu)^2}{2\\sigma^2}    \\right\\} \\\\\n&=& -0.5N\\log(2\\pi\\sigma^2) + N\\log \\Delta y - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n\\end{eqnarray}\n```\n\n\u3068\u306a\u308b\uff0e\u306a\u304a$\\Delta y$\u306f\u5b9a\u6570\u3067\u3042\u308a\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\uff04\\\\{\\mu, \\sigma\\\\}\uff04\u306b\u5f71\u97ff\u3057\u306a\u3044\u305f\u3081\uff0c\n\u4e0a\u5f0f\u3067\u3082\u7121\u8996\u3059\u308b\uff0e\n\u3057\u305f\u304c\u3063\u3066\uff0c\n\n```math\nlog L(\\mu, \\sigma) = -0.5N\\log(2\\pi\\sigma^2)  - \\frac{1}{2\\sigma^2}\\sum_i (y-\\mu)^2\n```\n\n\u3068\u306a\u308b\uff0e\n\n# \u30ac\u30f3\u30de\u5206\u5e03\u306eGLM\n\n**\u30ac\u30f3\u30de\u5206\u5e03**\u306f\uff0c\u78ba\u7387\u5909\u6570\u306e\u53d6\u308a\u3046\u308b\u7bc4\u56f2\u304c\uff10\u4ee5\u4e0a\u306e\u9023\u7d9a\u78ba\u7387\u5206\u5e03\uff0e\n\u78ba\u7387\u5bc6\u5ea6\u95a2\u6570\u306f\uff0e\n\n\n```math\np(y|s, r) = \\frac{r^s}{\\Gamma(s)}y^{s-1}\\exp(-ry) \n```\n\n\n$s$\u306fshape\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c$r$\u306frate\u30d1\u30e9\u30e1\u30fc\u30bf\uff0c$\\frac{1}{r}$\u306fscale\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3088\u3073\uff0c$\\Gamma(s)$\u306f\u30ac\u30f3\u30de\u95a2\u6570\u3067\u3042\u308b\uff0e\n\u5e73\u5747\u306f$\\frac{s}{r}$\uff0c\u5206\u6563\u306f$\\frac{s}{r^2}$\u3068\u306a\u308b\uff0e\n\u307e\u305f$s=1$\u306e\u3068\u304d\uff0c**\u6307\u6570\u5206\u5e03**\u3068\u306a\u308b\uff0e\n\n\n```pycon\n# dgamma(y, shape, rate)\n# 1/rate = scale\n>>> y = numpy.arange(0, 5, 0.05)\n>>> plt.subplot(131)\n>>> plt.plot(y, sct.gamma.pdf(y, a=1, scale=1))\n>>> plt.title('$s=1, scale=1/r=1$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=1, scale=1), color='r')\n>>> plt.subplot(132)\n>>> plt.plot(y, sct.gamma.pdf(y, a=5, scale=0.2))\n>>> plt.title('$s=5, scale=1/r=1/5=0.2$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=5, scale=0.2), color='r')\n>>> plt.subplot(133)\n>>> plt.plot(y, sct.gamma.pdf(y, a=0.1, scale=10))\n>>> plt.title('$s=0.1, scale=1/r=1/0.1=10$')\n>>> plt.fill_between(numpy.arange(1.2, 1.8, 0.05), sct.gamma.pdf(numpy.arange(1.2, 1.8, 0.05), a=0.1, scale=10), color='r')\n>>> plt.show()\n```\n![Screen Shot 2015-06-06 at 20.12.07.png](https://qiita-image-store.s3.amazonaws.com/0/48856/94fd1fa4-9f8e-bd6f-5753-09fdbcbf18da.png)\n\n\n## \u4f8b\u984c\uff1a\u67b6\u7a7a\u690d\u7269\u306e\u8449\u306e\u91cd\u91cf\u3068\u82b1\u306e\u91cd\u91cf\u306e\u95a2\u4fc2\n\n$x_i$\u304c\u5927\u304d\u304f\u306a\u308b\u306b\u3064\u308c\u3066\uff0c$y_i\uff04\u3082\u5927\u304d\u304f\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3059\uff0e\n\n```math\n\\begin{eqnarray}\n\\mu_i &=& Ax_i^b \\\\\n&=&\\exp(a)x_i^b = \\exp(a+b\\log x_i) (\\because A = \\exp(a)) \\\\\n\\log\\mu_i &=& a+blogx_i\n\n\\end{eqnarray}\n```\n\n\n```pycon\n>>> model = smf.glm('y ~ numpy.log(x)', data=d, family=sm.families.Gamma(link=sm.families.links.log))\n>>> model.fit().summary()\n                 Generalized Linear Model Regression Results\n==============================================================================\nDep. Variable:                      y   No. Observations:                   50\nModel:                            GLM   Df Residuals:                       48\nModel Family:                   Gamma   Df Model:                            1\nLink Function:                    log   Scale:                  0.325084605974\nMethod:                          IRLS   Log-Likelihood:                 58.471\nDate:                Sat, 06 Jun 2015   Deviance:                       17.251\nTime:                        20:38:39   Pearson chi2:                     15.6\nNo. Iterations:                    12\n================================================================================\n                   coef    std err          z      P>|z|      [95.0% Conf. Int.]\n--------------------------------------------------------------------------------\nIntercept       -1.0403      0.119     -8.759      0.000        -1.273    -0.808\nnumpy.log(x)     0.6832      0.068      9.992      0.000         0.549     0.817\n================================================================================\n```\n\n\n```py\nget_y_mean = lambda b1, b2, x: numpy.exp(b1 + b2 * numpy.log(x))\nmodel = smf.glm('y ~ numpy.log(x)', data=d, family=sm.families.Gamma(link=sm.families.links.log))\nvc = model.fit().params\n\nax = plt.figure().add_subplot(111)\nax.plot(d.x, d.y, 'o')\nax.plot(d.x, get_y_mean(-1, 0.7, d.x),'--')\nax.plot(d.x, get_y_mean(vc[0], vc[1], d.x))\n\n\nphi = model.fit().scale\nm = get_y_mean(vc[0], vc[1], d.x)\nscale = [(i * phi) for i in m]\nshape = 1 / phi\ndef plot_pi(q):\n    x = numpy.r_[numpy.array(d.x), numpy.array(d.x)[::-1]]\n    y = numpy.r_[sct.gamma.ppf(q, a=shape, scale=scale), sct.gamma.ppf(1-q, a=shape, scale=scale)[::-1]]\n    pair = [(x[i], y[i]) for i in range(len(x))]\n    poly = plt.Polygon(pair, alpha=0.2, edgecolor='none')\n    return poly\nax.add_patch(plot_pi(0.05))\nax.add_patch(plot_pi(0.25))\n\nplt.show()\n```\n\n\n![Screen Shot 2015-06-06 at 22.55.20.png](https://qiita-image-store.s3.amazonaws.com/0/48856/6e8c5343-1d4b-deb7-d31c-0bf4f30b928c.png)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["matplotlib", "pandas", "numpy", "Python"]}