{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cBitVisor \u3092\u4f7f\u3063\u3066\uff0cHPET \u306b\u5c11\u3057\u7d30\u5de5\u3092\u3059\u308b\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n\u6ce8\u610f\u4e8b\u9805\n\u4eca\u56de\u66f8\u3044\u305f\u8a18\u4e8b\u306b\u8f09\u305b\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0cBitVisor 1.3 \u306e\u9803\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3057\u304b\u3082\uff0c\u52d5\u4f5c\u78ba\u8a8d\u3082\u305b\u305a\uff0c\u5fc5\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u5207\u308a\u51fa\u3057\u3066\u308b\u306e\u3067\uff0c\u305d\u306e\u307e\u307e\u52d5\u304f\u4fdd\u8a3c\u304c\u306a\u3044\u3067\u3059...\n(\u8a66\u305d\u3046\u3068\u3057\u305f\u3089\uff0c\u4f7f\u3048\u308b\u30de\u30b7\u30f3\u306bHPET \u3089\u3057\u304d\u3082\u306e\u304c\u7121\u304f\u3066\uff0c\u52d5\u4f5c\u78ba\u8a8d\u3092\u65ad\u5ff5\u3057\u307e\u3057\u305f\uff0c\u3054\u3081\u3093\u306a\u3055\u3044.)\n\n\u305d\u3082\u305d\u3082HPET \u3063\u3066\u4f55?\n\nWikipedia \u306e\u30da\u30fc\u30b8 https://ja.wikipedia.org/wiki/High_Precision_Event_Timer\n\n\u4ed5\u69d8\u66f8 http://www.intel.com/content/dam/www/public/us/en/documents/technical-specifications/software-developers-hpet-spec-1-0a.pdf\n\n\nHPET \u306fHigh Precision Event Timer \u306e\u7565\u3067\uff0c\u30bf\u30a4\u30de\u30c7\u30d0\u30a4\u30b9\u306e\u4e00\u3064\u3067\u3059\uff0e\n\n\u4f59\u8ac7\nHPET \uff0c\u4eca\u306f\u3042\u307e\u308a\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u3066\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\uff0e\nLinux \u306f\u3069\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304b\u77e5\u308a\u307e\u305b\u3093\u304c\uff0c\u6700\u3082\u7cbe\u5ea6\u304c\u3088\u3044\u30bf\u30a4\u30de\u3092\u63a2\u3057\uff0c\u305d\u308c\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\nNehalem \u4e16\u4ee3\u306eCPU \u3060\u3068\uff0cTSC \u304cTurbo boost \u306e\u5f71\u97ff\u3067\u63fa\u308c\u3066\u3044\u305f\u306e\u3067\uff0cHPET \u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u9ad8\u304f\uff0cclocksource \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u305f\u306e\u3092\u898b\u307e\u3057\u305f\uff0e\n\u3057\u304b\u3057\uff0csandy bridge \u4e16\u4ee3\u4ee5\u964d\u306eCPU \u3060\u3068\uff0cTSC \u304c\u5b89\u5b9a\u3057\uff0cclocksource \u3068\u3057\u3066\u306fTSC \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\uff0e\n\n\u3069\u3093\u306a\u60aa\u622f\u3092\u3059\u308b\u306e\u304b?\nHPET \u306f\u30bf\u30a4\u30de(\u6b63\u78ba\u306b\u306f\u30b3\u30f3\u30d1\u30ec\u30fc\u30bf)\u3092\u8907\u6570\u6301\u3066\u308b\u3088\u3046\u306a\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\ndmesg | grep -i hpet \u306a\u3093\u3066\u3084\u308b\u3068\uff0cHPET \u95a2\u9023\u306edmesg \u306e\u4e2d\u3067\uff0c\u305d\u306e\u30bf\u30a4\u30de\u306e\u6570\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3053\u306e\u30bf\u30a4\u30de\u306e\u6570\u3092\u4e00\u3064\u6e1b\u3089\u3057\u3066\u898b\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n$ dmesg | grep -i hpet\n[    0.000000] ACPI: HPET 00000000cffba760 000038 (v01 DELL   OEMHPET  20100910 MSFT 00000097)\n[    0.000000] ACPI: HPET id: 0x8300 base: 0xfed00000\n[    0.000000] hpet clockevent registered\n[    0.016000] tsc: using HPET reference calibration\n[    0.284014] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0, 0\n[    0.284016] hpet0: 4 comparators, 32-bit 14.318180 MHz counter\n[    0.287141] Switched to clocksource hpet\n[    1.465067] rtc_cmos 00:02: alarms up to one month, y3k, 114 bytes nvram, hpet irqs\n\n[    0.284016] hpet0: 4 comparators, 32-bit 14.318180 MHz counter \u304b\u3089\uff0c4\u3064\u306e\u30bf\u30a4\u30de\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u3053\u308c\u3092\uff0cBitVisor \u3092\u4f7f\u3063\u30663\u500b\u306b\u898b\u305b\u308b\u3068\u3044\u3046\u5730\u5473\u306a\u60aa\u622f\u3067\u3059\uff0e\n\n\u306a\u305c\u305d\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u304f\u306e\u304b?\n(\u6614\uff0c\u958b\u767a\u306e\u7df4\u7fd2\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u305d\u306e\u307e\u307e\u30cd\u30bf\u3068\u3057\u3066\u66f8\u3044\u30661\u65e5\u5206\u3054\u307e\u304b\u305d\u3046\u3068\u304b\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u306f\uff0c\u3044\u3048\u3067\u3059\u306d\uff0c\u306f\u3044\uff0e)\n\u307e\u3041\uff0cBitVisor \u3067MMIO \u3092\u30d5\u30c3\u30af\u3057\u3066\uff0c\u305d\u306e\u4e2d\u8eab\u3092\u5165\u308c\u66ff\u3048\u308b\u4f8b\u3068\u3057\u3066\u5358\u7d14\u3067\u3061\u3087\u3046\u3069\u826f\u3044\u304b\u306a\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\uff0e\n\u5185\u5bb9\u306f\u5730\u5473\u3067\u3059\u304c\uff0c\u5bb9\u6613\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3057\uff0cMMIO \u306e\u30d5\u30c3\u30af\u4ee5\u5916\u306b\u8907\u96d1\u306a\u64cd\u4f5c\u304c\u5fc5\u8981\u306a\u3044\u306e\u3067\uff0e\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u8ffd\u52a0\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n(\u8981\u3089\u306a\u3044printf \u3084\u3089\u30de\u30af\u30ed\u3084\u3089\u304c\u305f\u304f\u3055\u3093\u6b8b\u3063\u305f\u307e\u307e\u3067\u3059...)\n\ncore/hpet.h\n#define HPET_BASE_ADDR 0xfed00000\n#define HPET_COUNTER 0x0f0\n#define HPET_Tn_CMP(n) (0x108+0x20*n)\n#define HPET_HZ (14.318180*1e6)\n#define s2ms(s) (s*1e3)\n#define s2us(s) (s*1e6)\n#define s2ns(s) (s*1e9)\nvoid reg_hpet_mm_handler(void);\n\n\n\ncore/hpet.c\n#include \"mmio.h\"\n#include \"../crypto/chelp.h\"\n#include \"printf.h\"\n#include \"mm.h\"\n#include \"current.h\"\n#include \"gmm_access.h\"\n#include \"initfunc.h\"\n#include \"spinlock.h\"\n#include \"hpet_hook.h\"\n\nspinlock_t hpet_lock;\n\nunion hpet_gcidr{\n  struct {\n    unsigned int rev_id : 8;\n    unsigned int num_tim_cap : 5;\n    unsigned int count_size_cap : 1;\n    unsigned int reserved : 1;\n    unsigned int leg_route_cap : 1;\n    unsigned int vender_id : 16;\n  }s;\n  u32 v;\n}typedef hpet_gcidr;\n\nstatic int \nhpet_mm_handler(void *data, phys_t gphys, bool wr, void *buf, uint len, u32 flags){\n\n    unsigned int ret_data;\n    phys_t hphys;\n    hpet_gcidr gcidr;\n    printf(\"guest's physical address is 0x%016x\\n\", (unsigned int)gphys);\n    hphys = current->gmm.gp2hp (gphys, NULL);\n    printf(\" VMM's physical address is 0x%016x\\n\", (unsigned int)hphys);\n    printf(\"I/O type: %s\\n\", (wr) ? \"WRITE\" : \"READ\");\n    printf(\"Length is: %d\\n\", len);\n    printf(\"Flags is: 0x%016x\\n\", flags);\n\n    if(buf == NULL){\n        printf(\"buf is NULL pointer\\n\");\n        return 0;\n    }\n    if(!wr){\n        if (len == 1)\n        {\n            read_hphys_b(hphys, &ret_data, flags);\n            *((unsigned char*)buf) = (unsigned char)ret_data;\n        }\n        else if (len == 2)\n        {\n            read_hphys_w(hphys, &ret_data, flags);\n            *((unsigned short *)buf) = (unsigned short)ret_data;\n        }\n        else if (len == 4)\n        {\n            read_hphys_l(hphys, &ret_data, flags);\n            printf(\"[by fukai] Read data is 0x%08x\\n\", ret_data);\n            gcidr.v = (u32)ret_data;\n            printf(\"[by fukai] number of Timer is 0x%d\\n\", gcidr.s.num_tim_cap);\n            gcidr.s.num_tim_cap --;\n            *((unsigned int *)buf) = (unsigned int)gcidr.v;\n            printf(\"[by fukai] return data is 0x%08x\\n\",(unsigned int)gcidr.v);\n        }\n\n        else if (len == 8)\n        {\n            read_hphys_q(hphys, &ret_data, flags);\n            *((unsigned long int *)buf) = (unsigned long int)ret_data;\n        }\n\n        return 1;\n    }else{\n        printf(\"[by fukai] debug point 999\\n\"); \n        return 0;\n    }\n}\n\n\nvoid \nreg_hpet_mm_handler(void){\n    mmio_register(0xFED00000, 0x4, hpet_mm_handler, NULL);\n}\n\n\n\n\u3053\u308c\u3067\uff0creg_hpet_mm_handler() \u95a2\u6570\u3092BitVisor \u306e\u521d\u671f\u5316\u306e\u9069\u5f53\u306a\u3068\u3053\u308d(vt_mainloop() \u306ewhile \u30eb\u30fc\u30d7\u524d\u3068\u304b) \u306b\u5dee\u3057\u8fbc\u3081\u3070\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u8aac\n\nreg_hpet_mm_handler()\n\u4e2d\u8eab\u306f1\u884c\uff0c mmio_register(0xFED00000, 0x4, hpet_mm_handler, NULL); \u3060\u3051\u3067\u3059\uff0e\n\u3053\u306e\uff0c mmio_register()  \u3068\u3046\u306e\u304c\uff0cMMIO \u30d5\u30c3\u30af\u306e\u9375\u3067\u3059\uff0e\n- \u7b2c1\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u3044MMIO \u306e\u958b\u59cb\u30a2\u30c9\u30ec\u30b9\n- \u7b2c2\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u3044MMIO \u9818\u57df\u306e\u9577\u3055\n- \u7b2c3\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n- \u7b2c4\u5f15\u6570\u306f\uff0c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u6e21\u3059\u30c7\u30fc\u30bf(\u3060\u3068\u601d\u3044\u307e\u3059)\nHPET\u306b\u304b\u304e\u3089\u305a\u3067\u3059\u304c\uff0c\u30d5\u30c3\u30af\u3059\u308b\u3079\u304dMMIO\u306e\u30a2\u30c9\u30ec\u30b9\u306f\uff0c\u4ed5\u69d8\u306b\u6cbf\u3063\u3066\u6c7a\u307e\u3063\u3066\u3044\u305f\u308a\uff0c\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3057\u304b\u3057\uff0c\u305d\u308c\u304c\u9762\u5012\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u76ee\u306e\u524d\u306e\u30de\u30b7\u30f3\u3067\u8a66\u3057\u305f\u3044\u3068\u3044\u3046\u6642\u306f\uff0c\u5b9f\u9a13\u7528\u30de\u30b7\u30f3\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u3066\uff0cMMIO\u306e\u4e00\u89a7\u3092\u51fa\u3059\u3068\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n$ cat /proc/iomem | grep -i hpet\nfed00000-fed003ff : HPET 2\n\n\u3053\u308c\u3092\u898b\u308b\u3068\uff0cHPET\u306eMMIO\u306f0xFED00000 \u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u3069\u3046\u3057\u3066\u9577\u3055\u304c4\u306a\u306e\u304b\u3068\u3044\u3046\u3068\uff0c\u4eca\u56de\u306e\u51e6\u7406\u3067\u306f\uff0c\u6700\u521d4byte \u3060\u3051\u30d5\u30c3\u30af\u3067\u304d\u308c\u3070\u3044\u3044\u304b\u3089\u3067\u3059\uff0e\n\u3053\u306e\u6700\u521d4byte \u3068\u3044\u3046\u306e\u306f\uff0cHPET \u306eGeneral Capabilities and ID Register \u3068\u3044\u3046\u30ec\u30b8\u30b9\u30bf\u304c\u30de\u30c3\u30d7\u3055\u308c\u3066\u304a\u308a\uff0c\u3053\u3053\u306bHPET\u306e\u30bf\u30a4\u30de\u306e\u6570\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\uff0e\n\u4eca\u56de\u306f\uff0c\u3053\u306e\u5024\u3092OS\u304c\u8aad\u307f\u306b\u6765\u305f\u6642\u306b\uff0c\u305d\u306e\u5024\u30921\u6e1b\u3089\u3057\u3066\u30b2\u30b9\u30c8\u306b\u8fd4\u3059\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u307e\u3059\uff0e\n\nhpet_mm_handler()\n\u30d5\u30c3\u30af\u3057\u305f\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3067\u3059\uff0e\n\u307e\u305a\u306f\u5f15\u6570\u306b\u3064\u3044\u3066\n- \u7b2c1\u5f15\u6570\u306f\uff0c\u4f55\u304b\u3057\u3089\u306e\u30c7\u30fc\u30bf\u3067\u3059\uff0e\u591a\u5206\uff0cmmio_register() \u306e\u7b2c4\u5f15\u6570\u304c\u3053\u3053\u306b\u6765\u307e\u3059\uff0e\n- \u7b2c2\u5f15\u6570\u306f\uff0c\u5b9f\u969b\u306b\u30d5\u30c3\u30af\u3057\u305fMMIO \u306e\u30a2\u30c9\u30ec\u30b9\uff0e\u30a2\u30c9\u30ec\u30b9\u306f\uff0cguest physical \u30a2\u30c9\u30ec\u30b9\u3067\u3059\uff0e\n- \u7b2c3\u5f15\u6570\u306f\uff0cMMIO \u304cwrite \u304bread \u304b\u3092\u793a\u3059\u3082\u306e\u3067\u3059\uff0etrue \u306a\u3089write \u3067\u3059\uff0e\n- \u7b2c4\u5f15\u6570\u306f\uff0cMMIO \u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3057\u3059\u308b\u305f\u3081\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3059\uff0eread \u306a\u3089\uff0c\u3053\u306e\u5024\u3092\u3061\u3087\u308d\u307e\u304b\u3059\u3068\uff0c\u305d\u306e\u5024\u304c\u30b2\u30b9\u30c8\u306b\u898b\u3048\u307e\u3059\uff0e\u307e\u305f\uff0cwrite \u306a\u3089\uff0c\u3053\u306e\u5024\u3092\u3061\u3087\u308d\u307e\u304b\u3057\u3066\u304a\u304f\u3068\uff0c\u30c7\u30d0\u30a4\u30b9\u306b\u306f\u3061\u3087\u308d\u307e\u304b\u3057\u305f\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\uff0e\n- \u7b2c5\u5f15\u6570\u306f\uff0cMMIO \u306eread or write \u306e\u9577\u3055\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0cmovq \u306a\u3089 8byte \u5358\u4f4d\u306e\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306a\u306e\u3067\uff0c8\u304c\u5165\u308a\u307e\u3059\uff0e\n- \u7b2c6\u5f15\u6570\u306f\uff0c... \u306a\u3093\u3060\u3063\u3051? \u3069\u5fd8\u308c\u3057\u307e\u3057\u305f\uff0c\u6642\u9593\u304c\u3042\u308c\u3070\u8ffd\u8a18\u3057\u3068\u304d\u307e\u3059\uff0e\n\u6b21\u306b\u3053\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u3064\u3044\u3066\u3067\u3059\uff0e\n- 0 \u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u304b\u3089\u51e6\u7406\u304c\u623b\u3063\u305f\u3042\u3068\uff0cBitVisor \u304c\u30d5\u30c3\u30af\u3057\u305f MMIO \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u3059\uff0e\n- \u975e\u96f6\u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u304b\u3089\u51e6\u7406\u304c\u623b\u3063\u305f\u3042\u3068\uff0cBitVisor \u306f MMIO \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u305b\u3093\uff0e\n\u3067\u306f\uff0c\u4e2d\u306e\u51e6\u7406\u3092\u9806\u306b\u898b\u307e\u3059\uff0e\nprintf () \u306e\u547c\u3073\u51fa\u3057\u306b\u3064\u3044\u3066\u306f\uff0c\u7121\u8996\u3067\uff0e\nhpet_gcidr gcidr; \u3068\u3044\u3046\u306e\u306f\uff0cGeneral Capabilities and ID Register \u306e\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5408\u308f\u305b\u305f\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5909\u6570\u3067\u3059\uff0e\nhphys = current->gmm.gp2hp (gphys, NULL); \u3067hphys \u3068\u3044\u3046\u5909\u6570\u306b gphys \u306b\u5bfe\u5fdc\u3059\u308b host phisycal \u30a2\u30c9\u30ec\u30b9\u304c\u5165\u308a\u307e\u3059\uff0e\n\u3061\u306a\u307f\u306b\uff0chphys \u306fhost physical, gphys \u306fguest physical \u306e\u7565\u3067\u3059\uff0e\n\u4eca\u56de\uff0c\u5bfe\u8c61\u306b\u3059\u308b\u306e\u306f\uff0c4byte \u5358\u4f4d\u306eread \u3060\u3051\u3067\u3059\uff0e\n\u306a\u305c\u306a\u3089\uff0cGeneral Capabilities and ID Register \u306f4byte \u306e\u30ec\u30b8\u30b9\u30bf\u3067\uff0c4byte \u5358\u4f4d\u306e\u30a2\u30af\u30bb\u30b9\u3092\u3055\u308c\u308b\u304b\u3089\u3067\u3059\uff0e\n\u3053\u306e\u95a2\u6570\u3067\u306f\uff0cOS\u304c 4byte \u3067 read \u3057\u3066\u304d\u305f\u6642\uff0c\u305d\u306e\u5024\u3092\u8aad\u307f\u3060\u3057\u3066\uff0cGeneral Capabilities and ID Register \u306e NUM_TIM_CAP \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u4e00\u3064\u6e1b\u3089\u3057\u305f\u5f8c\uff0c\u5024\u3092buf \u306b\u683c\u7d0d\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c1byte, 2byte, 8byte \u5358\u4f4d\u306e read \u306f\u5358\u7d14\u306b\u5024\u3092\u8aad\u307f\u3060\u3057\u3066\uff0cbuf \u306b\u5165\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u3059\uff0e\nread \u306e\u969b\u306f\uff0creturn 1 \u3068\u3057\uff0c\u3053\u306e\u95a2\u6570\u3092\u629c\u3051\u305f\u5f8c\u306bMMIO\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\u3053\u306e\u95a2\u6570\u306e\u306a\u304b\u3067\uff0c\u65e2\u306b\u30d5\u30c3\u30af\u3057\u305fMMIO\u306b\u5909\u308f\u308b\u51e6\u7406\u3092\u884c\u3063\u305f\u305f\u3081\u3067\u3059\uff0e\n\u4e00\u65b9\uff0cwrite \u306e\u969b\u306f return 0 \u3068\u3057\u3066\uff0c\u3053\u306e\u95a2\u6570\u3092\u629c\u3051\u305f\u5f8c\u306bMMIO\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n\u304a\u308f\u308a\u306b\n\u6c17\u304c\u3064\u3044\u305f\u3089\uff0c\u6642\u9593\u304c\u306a\u304f\uff0c\u614c\u3066\u3066\u66f8\u3044\u305f\u306e\u3067\uff0c\u5b8c\u5168\u306b\u99c4\u6587\u3067\u3059\uff0c\u3054\u3081\u3093\u306a\u3055\u3044\uff0e\n\u6642\u9593\u304c\u3042\u308b\u3068\u304d\u306b\u76f4\u3057\u307e\u3059\uff0e\n# \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\uff0cBitVisor \u3092\u4f7f\u3063\u3066\uff0cHPET \u306b\u5c11\u3057\u7d30\u5de5\u3092\u3059\u308b\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\uff0e\n\n## \u6ce8\u610f\u4e8b\u9805\n\u4eca\u56de\u66f8\u3044\u305f\u8a18\u4e8b\u306b\u8f09\u305b\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\uff0cBitVisor 1.3 \u306e\u9803\u306b\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\u3057\u304b\u3082\uff0c\u52d5\u4f5c\u78ba\u8a8d\u3082\u305b\u305a\uff0c\u5fc5\u8981\u305d\u3046\u306a\u3068\u3053\u308d\u3060\u3051\u5207\u308a\u51fa\u3057\u3066\u308b\u306e\u3067\uff0c\u305d\u306e\u307e\u307e\u52d5\u304f\u4fdd\u8a3c\u304c\u306a\u3044\u3067\u3059...\n(\u8a66\u305d\u3046\u3068\u3057\u305f\u3089\uff0c\u4f7f\u3048\u308b\u30de\u30b7\u30f3\u306bHPET \u3089\u3057\u304d\u3082\u306e\u304c\u7121\u304f\u3066\uff0c\u52d5\u4f5c\u78ba\u8a8d\u3092\u65ad\u5ff5\u3057\u307e\u3057\u305f\uff0c\u3054\u3081\u3093\u306a\u3055\u3044.)\n\n\n# \u305d\u3082\u305d\u3082HPET \u3063\u3066\u4f55?\n\n- Wikipedia \u306e\u30da\u30fc\u30b8 https://ja.wikipedia.org/wiki/High_Precision_Event_Timer\n- \u4ed5\u69d8\u66f8 http://www.intel.com/content/dam/www/public/us/en/documents/technical-specifications/software-developers-hpet-spec-1-0a.pdf\n\n\nHPET \u306fHigh Precision Event Timer \u306e\u7565\u3067\uff0c\u30bf\u30a4\u30de\u30c7\u30d0\u30a4\u30b9\u306e\u4e00\u3064\u3067\u3059\uff0e\n\n### \u4f59\u8ac7\nHPET \uff0c\u4eca\u306f\u3042\u307e\u308a\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u3066\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3057\u307e\u3059\uff0e\nLinux \u306f\u3069\u3046\u3044\u3046\u4ed5\u7d44\u307f\u304b\u77e5\u308a\u307e\u305b\u3093\u304c\uff0c\u6700\u3082\u7cbe\u5ea6\u304c\u3088\u3044\u30bf\u30a4\u30de\u3092\u63a2\u3057\uff0c\u305d\u308c\u3092\u4f7f\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\nNehalem \u4e16\u4ee3\u306eCPU \u3060\u3068\uff0cTSC \u304cTurbo boost \u306e\u5f71\u97ff\u3067\u63fa\u308c\u3066\u3044\u305f\u306e\u3067\uff0cHPET \u306e\u65b9\u304c\u7cbe\u5ea6\u304c\u9ad8\u304f\uff0cclocksource \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u3068\u3057\u3066\u4f7f\u308f\u308c\u3066\u3044\u305f\u306e\u3092\u898b\u307e\u3057\u305f\uff0e\n\u3057\u304b\u3057\uff0csandy bridge \u4e16\u4ee3\u4ee5\u964d\u306eCPU \u3060\u3068\uff0cTSC \u304c\u5b89\u5b9a\u3057\uff0cclocksource \u3068\u3057\u3066\u306fTSC \u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3088\u3046\u3067\u3059\uff0e\n\n# \u3069\u3093\u306a\u60aa\u622f\u3092\u3059\u308b\u306e\u304b?\nHPET \u306f\u30bf\u30a4\u30de(\u6b63\u78ba\u306b\u306f\u30b3\u30f3\u30d1\u30ec\u30fc\u30bf)\u3092\u8907\u6570\u6301\u3066\u308b\u3088\u3046\u306a\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n`dmesg | grep -i hpet` \u306a\u3093\u3066\u3084\u308b\u3068\uff0cHPET \u95a2\u9023\u306edmesg \u306e\u4e2d\u3067\uff0c\u305d\u306e\u30bf\u30a4\u30de\u306e\u6570\u3092\u898b\u3064\u3051\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3053\u306e\u30bf\u30a4\u30de\u306e\u6570\u3092\u4e00\u3064\u6e1b\u3089\u3057\u3066\u898b\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n\n```\n$ dmesg | grep -i hpet\n[    0.000000] ACPI: HPET 00000000cffba760 000038 (v01 DELL   OEMHPET  20100910 MSFT 00000097)\n[    0.000000] ACPI: HPET id: 0x8300 base: 0xfed00000\n[    0.000000] hpet clockevent registered\n[    0.016000] tsc: using HPET reference calibration\n[    0.284014] hpet0: at MMIO 0xfed00000, IRQs 2, 8, 0, 0\n[    0.284016] hpet0: 4 comparators, 32-bit 14.318180 MHz counter\n[    0.287141] Switched to clocksource hpet\n[    1.465067] rtc_cmos 00:02: alarms up to one month, y3k, 114 bytes nvram, hpet irqs\n```\n\n`[    0.284016] hpet0: 4 comparators, 32-bit 14.318180 MHz counter` \u304b\u3089\uff0c4\u3064\u306e\u30bf\u30a4\u30de\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u3053\u308c\u3092\uff0cBitVisor \u3092\u4f7f\u3063\u30663\u500b\u306b\u898b\u305b\u308b\u3068\u3044\u3046\u5730\u5473\u306a\u60aa\u622f\u3067\u3059\uff0e\n\n# \u306a\u305c\u305d\u3093\u306a\u8a18\u4e8b\u3092\u66f8\u304f\u306e\u304b?\n(\u6614\uff0c\u958b\u767a\u306e\u7df4\u7fd2\u3067\u3084\u3063\u305f\u3053\u3068\u3092\u305d\u306e\u307e\u307e\u30cd\u30bf\u3068\u3057\u3066\u66f8\u3044\u30661\u65e5\u5206\u3054\u307e\u304b\u305d\u3046\u3068\u304b\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u306f\uff0c\u3044\u3048\u3067\u3059\u306d\uff0c\u306f\u3044\uff0e)\n\u307e\u3041\uff0cBitVisor \u3067MMIO \u3092\u30d5\u30c3\u30af\u3057\u3066\uff0c\u305d\u306e\u4e2d\u8eab\u3092\u5165\u308c\u66ff\u3048\u308b\u4f8b\u3068\u3057\u3066\u5358\u7d14\u3067\u3061\u3087\u3046\u3069\u826f\u3044\u304b\u306a\u3068\u601d\u3063\u305f\u304b\u3089\u3067\u3059\uff0e\n\u5185\u5bb9\u306f\u5730\u5473\u3067\u3059\u304c\uff0c\u5bb9\u6613\u306b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3057\uff0cMMIO \u306e\u30d5\u30c3\u30af\u4ee5\u5916\u306b\u8907\u96d1\u306a\u64cd\u4f5c\u304c\u5fc5\u8981\u306a\u3044\u306e\u3067\uff0e\n\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u8ffd\u52a0\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\uff0e\n(\u8981\u3089\u306a\u3044printf \u3084\u3089\u30de\u30af\u30ed\u3084\u3089\u304c\u305f\u304f\u3055\u3093\u6b8b\u3063\u305f\u307e\u307e\u3067\u3059...)\n\n``` c:core/hpet.h\n#define HPET_BASE_ADDR 0xfed00000\n#define HPET_COUNTER 0x0f0\n#define HPET_Tn_CMP(n) (0x108+0x20*n)\n#define HPET_HZ (14.318180*1e6)\n#define s2ms(s) (s*1e3)\n#define s2us(s) (s*1e6)\n#define s2ns(s) (s*1e9)\nvoid reg_hpet_mm_handler(void);\n```\n\n\n``` c:core/hpet.c\n#include \"mmio.h\"\n#include \"../crypto/chelp.h\"\n#include \"printf.h\"\n#include \"mm.h\"\n#include \"current.h\"\n#include \"gmm_access.h\"\n#include \"initfunc.h\"\n#include \"spinlock.h\"\n#include \"hpet_hook.h\"\n\nspinlock_t hpet_lock;\n\nunion hpet_gcidr{\n  struct {\n    unsigned int rev_id : 8;\n    unsigned int num_tim_cap : 5;\n    unsigned int count_size_cap : 1;\n    unsigned int reserved : 1;\n    unsigned int leg_route_cap : 1;\n    unsigned int vender_id : 16;\n  }s;\n  u32 v;\n}typedef hpet_gcidr;\n  \nstatic int \nhpet_mm_handler(void *data, phys_t gphys, bool wr, void *buf, uint len, u32 flags){\n\n\tunsigned int ret_data;\n\tphys_t hphys;\n\thpet_gcidr gcidr;\n\tprintf(\"guest's physical address is 0x%016x\\n\", (unsigned int)gphys);\n\thphys = current->gmm.gp2hp (gphys, NULL);\n\tprintf(\" VMM's physical address is 0x%016x\\n\", (unsigned int)hphys);\n\tprintf(\"I/O type: %s\\n\", (wr) ? \"WRITE\" : \"READ\");\n\tprintf(\"Length is: %d\\n\", len);\n\tprintf(\"Flags is: 0x%016x\\n\", flags);\n\t\n\tif(buf == NULL){\n\t\tprintf(\"buf is NULL pointer\\n\");\n\t\treturn 0;\n\t}\n\tif(!wr){\n\t\tif (len == 1)\n\t\t{\n\t\t\tread_hphys_b(hphys, &ret_data, flags);\n\t\t\t*((unsigned char*)buf) = (unsigned char)ret_data;\n\t\t}\n\t\telse if (len == 2)\n\t\t{\n\t\t\tread_hphys_w(hphys, &ret_data, flags);\n\t\t\t*((unsigned short *)buf) = (unsigned short)ret_data;\n\t\t}\n\t\telse if (len == 4)\n\t\t{\n\t\t\tread_hphys_l(hphys, &ret_data, flags);\n\t\t\tprintf(\"[by fukai] Read data is 0x%08x\\n\", ret_data);\n\t\t\tgcidr.v = (u32)ret_data;\n\t\t\tprintf(\"[by fukai] number of Timer is 0x%d\\n\", gcidr.s.num_tim_cap);\n\t\t\tgcidr.s.num_tim_cap --;\n\t\t\t*((unsigned int *)buf) = (unsigned int)gcidr.v;\n\t\t\tprintf(\"[by fukai] return data is 0x%08x\\n\",(unsigned int)gcidr.v);\n\t\t}\n\n\t\telse if (len == 8)\n\t\t{\n\t\t\tread_hphys_q(hphys, &ret_data, flags);\n\t\t\t*((unsigned long int *)buf) = (unsigned long int)ret_data;\n\t\t}\n\t\t\n\t\treturn 1;\n\t}else{\n\t\tprintf(\"[by fukai] debug point 999\\n\");\t\n\t\treturn 0;\n\t}\n}\n\n\nvoid \nreg_hpet_mm_handler(void){\n\tmmio_register(0xFED00000, 0x4, hpet_mm_handler, NULL);\n}\n\n```\n\n\u3053\u308c\u3067\uff0creg_hpet_mm_handler() \u95a2\u6570\u3092BitVisor \u306e\u521d\u671f\u5316\u306e\u9069\u5f53\u306a\u3068\u3053\u308d(vt_mainloop() \u306ewhile \u30eb\u30fc\u30d7\u524d\u3068\u304b) \u306b\u5dee\u3057\u8fbc\u3081\u3070\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\uff0e\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u8aac\n## reg_hpet_mm_handler()\n\u4e2d\u8eab\u306f1\u884c\uff0c `mmio_register(0xFED00000, 0x4, hpet_mm_handler, NULL);` \u3060\u3051\u3067\u3059\uff0e\n\u3053\u306e\uff0c `mmio_register()`  \u3068\u3046\u306e\u304c\uff0cMMIO \u30d5\u30c3\u30af\u306e\u9375\u3067\u3059\uff0e\n- \u7b2c1\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u3044MMIO \u306e\u958b\u59cb\u30a2\u30c9\u30ec\u30b9\n- \u7b2c2\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u3044MMIO \u9818\u57df\u306e\u9577\u3055\n- \u7b2c3\u5f15\u6570\u306f\uff0c\u30d5\u30c3\u30af\u3057\u305f\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\n- \u7b2c4\u5f15\u6570\u306f\uff0c\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306b\u6e21\u3059\u30c7\u30fc\u30bf(\u3060\u3068\u601d\u3044\u307e\u3059)\n\nHPET\u306b\u304b\u304e\u3089\u305a\u3067\u3059\u304c\uff0c\u30d5\u30c3\u30af\u3059\u308b\u3079\u304dMMIO\u306e\u30a2\u30c9\u30ec\u30b9\u306f\uff0c\u4ed5\u69d8\u306b\u6cbf\u3063\u3066\u6c7a\u307e\u3063\u3066\u3044\u305f\u308a\uff0c\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\uff0e\n\u3057\u304b\u3057\uff0c\u305d\u308c\u304c\u9762\u5012\u3067\uff0c\u3068\u308a\u3042\u3048\u305a\u76ee\u306e\u524d\u306e\u30de\u30b7\u30f3\u3067\u8a66\u3057\u305f\u3044\u3068\u3044\u3046\u6642\u306f\uff0c\u5b9f\u9a13\u7528\u30de\u30b7\u30f3\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u3066\uff0cMMIO\u306e\u4e00\u89a7\u3092\u51fa\u3059\u3068\u826f\u3044\u304b\u3068\u601d\u3044\u307e\u3059\uff0e\n\n```\n$ cat /proc/iomem | grep -i hpet\nfed00000-fed003ff : HPET 2\n```\n\n\u3053\u308c\u3092\u898b\u308b\u3068\uff0cHPET\u306eMMIO\u306f0xFED00000 \u304b\u3089\u59cb\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u3069\u3046\u3057\u3066\u9577\u3055\u304c4\u306a\u306e\u304b\u3068\u3044\u3046\u3068\uff0c\u4eca\u56de\u306e\u51e6\u7406\u3067\u306f\uff0c\u6700\u521d4byte \u3060\u3051\u30d5\u30c3\u30af\u3067\u304d\u308c\u3070\u3044\u3044\u304b\u3089\u3067\u3059\uff0e\n\u3053\u306e\u6700\u521d4byte \u3068\u3044\u3046\u306e\u306f\uff0cHPET \u306eGeneral Capabilities and ID Register \u3068\u3044\u3046\u30ec\u30b8\u30b9\u30bf\u304c\u30de\u30c3\u30d7\u3055\u308c\u3066\u304a\u308a\uff0c\u3053\u3053\u306bHPET\u306e\u30bf\u30a4\u30de\u306e\u6570\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u304b\u3089\u3067\u3059\uff0e\n\u4eca\u56de\u306f\uff0c\u3053\u306e\u5024\u3092OS\u304c\u8aad\u307f\u306b\u6765\u305f\u6642\u306b\uff0c\u305d\u306e\u5024\u30921\u6e1b\u3089\u3057\u3066\u30b2\u30b9\u30c8\u306b\u8fd4\u3059\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u307e\u3059\uff0e\n\n\n# hpet_mm_handler()\n\u30d5\u30c3\u30af\u3057\u305f\u6642\u306b\u547c\u3070\u308c\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3067\u3059\uff0e\n\n\u307e\u305a\u306f\u5f15\u6570\u306b\u3064\u3044\u3066\n- \u7b2c1\u5f15\u6570\u306f\uff0c\u4f55\u304b\u3057\u3089\u306e\u30c7\u30fc\u30bf\u3067\u3059\uff0e\u591a\u5206\uff0cmmio_register() \u306e\u7b2c4\u5f15\u6570\u304c\u3053\u3053\u306b\u6765\u307e\u3059\uff0e\n- \u7b2c2\u5f15\u6570\u306f\uff0c\u5b9f\u969b\u306b\u30d5\u30c3\u30af\u3057\u305fMMIO \u306e\u30a2\u30c9\u30ec\u30b9\uff0e\u30a2\u30c9\u30ec\u30b9\u306f\uff0cguest physical \u30a2\u30c9\u30ec\u30b9\u3067\u3059\uff0e\n- \u7b2c3\u5f15\u6570\u306f\uff0cMMIO \u304cwrite \u304bread \u304b\u3092\u793a\u3059\u3082\u306e\u3067\u3059\uff0etrue \u306a\u3089write \u3067\u3059\uff0e\n- \u7b2c4\u5f15\u6570\u306f\uff0cMMIO \u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3057\u3059\u308b\u305f\u3081\u306e\u30d0\u30c3\u30d5\u30a1\u3067\u3059\uff0eread \u306a\u3089\uff0c\u3053\u306e\u5024\u3092\u3061\u3087\u308d\u307e\u304b\u3059\u3068\uff0c\u305d\u306e\u5024\u304c\u30b2\u30b9\u30c8\u306b\u898b\u3048\u307e\u3059\uff0e\u307e\u305f\uff0cwrite \u306a\u3089\uff0c\u3053\u306e\u5024\u3092\u3061\u3087\u308d\u307e\u304b\u3057\u3066\u304a\u304f\u3068\uff0c\u30c7\u30d0\u30a4\u30b9\u306b\u306f\u3061\u3087\u308d\u307e\u304b\u3057\u305f\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u307e\u3059\uff0e\n- \u7b2c5\u5f15\u6570\u306f\uff0cMMIO \u306eread or write \u306e\u9577\u3055\u3067\u3059\uff0e\u4f8b\u3048\u3070\uff0cmovq \u306a\u3089 8byte \u5358\u4f4d\u306e\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306a\u306e\u3067\uff0c8\u304c\u5165\u308a\u307e\u3059\uff0e\n- \u7b2c6\u5f15\u6570\u306f\uff0c... \u306a\u3093\u3060\u3063\u3051? \u3069\u5fd8\u308c\u3057\u307e\u3057\u305f\uff0c\u6642\u9593\u304c\u3042\u308c\u3070\u8ffd\u8a18\u3057\u3068\u304d\u307e\u3059\uff0e\n\n\u6b21\u306b\u3053\u306e\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u3064\u3044\u3066\u3067\u3059\uff0e\n- 0 \u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u304b\u3089\u51e6\u7406\u304c\u623b\u3063\u305f\u3042\u3068\uff0cBitVisor \u304c\u30d5\u30c3\u30af\u3057\u305f MMIO \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u3059\uff0e\n- \u975e\u96f6\u306a\u3089\uff0c\u3053\u306e\u95a2\u6570\u304b\u3089\u51e6\u7406\u304c\u623b\u3063\u305f\u3042\u3068\uff0cBitVisor \u306f MMIO \u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u307e\u305b\u3093\uff0e\n\n\u3067\u306f\uff0c\u4e2d\u306e\u51e6\u7406\u3092\u9806\u306b\u898b\u307e\u3059\uff0e\nprintf () \u306e\u547c\u3073\u51fa\u3057\u306b\u3064\u3044\u3066\u306f\uff0c\u7121\u8996\u3067\uff0e\nhpet_gcidr gcidr; \u3068\u3044\u3046\u306e\u306f\uff0cGeneral Capabilities and ID Register \u306e\u30d3\u30c3\u30c8\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u5408\u308f\u305b\u305f\u30e6\u30cb\u30aa\u30f3\u578b\u306e\u5909\u6570\u3067\u3059\uff0e\n\n`hphys = current->gmm.gp2hp (gphys, NULL);` \u3067hphys \u3068\u3044\u3046\u5909\u6570\u306b gphys \u306b\u5bfe\u5fdc\u3059\u308b host phisycal \u30a2\u30c9\u30ec\u30b9\u304c\u5165\u308a\u307e\u3059\uff0e\n\u3061\u306a\u307f\u306b\uff0chphys \u306fhost physical, gphys \u306fguest physical \u306e\u7565\u3067\u3059\uff0e\n\n\u4eca\u56de\uff0c\u5bfe\u8c61\u306b\u3059\u308b\u306e\u306f\uff0c4byte \u5358\u4f4d\u306eread \u3060\u3051\u3067\u3059\uff0e\n\u306a\u305c\u306a\u3089\uff0cGeneral Capabilities and ID Register \u306f4byte \u306e\u30ec\u30b8\u30b9\u30bf\u3067\uff0c4byte \u5358\u4f4d\u306e\u30a2\u30af\u30bb\u30b9\u3092\u3055\u308c\u308b\u304b\u3089\u3067\u3059\uff0e\n\u3053\u306e\u95a2\u6570\u3067\u306f\uff0cOS\u304c 4byte \u3067 read \u3057\u3066\u304d\u305f\u6642\uff0c\u305d\u306e\u5024\u3092\u8aad\u307f\u3060\u3057\u3066\uff0cGeneral Capabilities and ID Register \u306e NUM_TIM_CAP \u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u5024\u3092\u4e00\u3064\u6e1b\u3089\u3057\u305f\u5f8c\uff0c\u5024\u3092buf \u306b\u683c\u7d0d\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c1byte, 2byte, 8byte \u5358\u4f4d\u306e read \u306f\u5358\u7d14\u306b\u5024\u3092\u8aad\u307f\u3060\u3057\u3066\uff0cbuf \u306b\u5165\u308c\u3066\u3044\u308b\u3060\u3051\u3067\u3059\uff0e\n\nread \u306e\u969b\u306f\uff0creturn 1 \u3068\u3057\uff0c\u3053\u306e\u95a2\u6570\u3092\u629c\u3051\u305f\u5f8c\u306bMMIO\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3092\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\u3053\u306e\u95a2\u6570\u306e\u306a\u304b\u3067\uff0c\u65e2\u306b\u30d5\u30c3\u30af\u3057\u305fMMIO\u306b\u5909\u308f\u308b\u51e6\u7406\u3092\u884c\u3063\u305f\u305f\u3081\u3067\u3059\uff0e\n\u4e00\u65b9\uff0cwrite \u306e\u969b\u306f return 0 \u3068\u3057\u3066\uff0c\u3053\u306e\u95a2\u6570\u3092\u629c\u3051\u305f\u5f8c\u306bMMIO\u306e\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3092\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\n\n# \u304a\u308f\u308a\u306b\n\u6c17\u304c\u3064\u3044\u305f\u3089\uff0c\u6642\u9593\u304c\u306a\u304f\uff0c\u614c\u3066\u3066\u66f8\u3044\u305f\u306e\u3067\uff0c\u5b8c\u5168\u306b\u99c4\u6587\u3067\u3059\uff0c\u3054\u3081\u3093\u306a\u3055\u3044\uff0e\n\u6642\u9593\u304c\u3042\u308b\u3068\u304d\u306b\u76f4\u3057\u307e\u3059\uff0e\n", "tags": ["BitVisor"]}