{"context": " More than 1 year has passed since last update.##\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\u203b2015/03/10\u6642\u70b9\n\n\nNode.js v0.12\nexpress v4.12.2\noauth(Node.js\u30e2\u30b8\u30e5\u30fc\u30eb) v0.9.12\n\n\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1tumblr\u306e\u9023\u643a\u3092\u8272\u3005\u8abf\u3079\u3066\u307e\u3059\u3002API\u7d4c\u7531\u3067POST\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u305f\u306e\u3067\u3059\u304c\u3001twitter\u3068\u304b\u3067\u3088\u304f\u3042\u308bOAuth\u306a\u8a8d\u8a3c\u3089\u3057\u304f\u3001\n\nConsumer Key\nConsumer Secret\nAccess Token\nAccess Token Secret\n\n\u304c\u5fc5\u8981\u307f\u305f\u3044\u3067\u3059\u306d\u3002twitter bot \u3068\u304b\u4f5c\u308b\u3068\u304d\u306b\u3088\u304f\u307f\u308b\u30a2\u30ec\u3067\u3059\u3002\n\u53c2\u8003: OAuth\u3068\u306f\uff1f\u2015OAuth\u306e\u6982\u5ff5\u3068OAuth\u3067\u3067\u304d\u308b\u3053\u3068\n\nConsumer Key\u3068Consumer Secret\u306e\u53d6\u5f97\n\u3053\u3061\u3089\u304b\u3089\u30a2\u30d7\u30ea\u767b\u9332\u3092\u3057\u3066\u9032\u3081\u3066\u3044\u3051\u3070\u3053\u306e\u4e8c\u3064\u306e\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nAccess Token \u3068 Access Token Secret\u306e\u53d6\u5f97\n\u3053\u3053\u304c\u9762\u5012\u304f\u3055\u3044\u3068\u3053\u308d\u3067\u3059\u3002Twitter\u3060\u3068\u30a2\u30d7\u30ea\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089\u3053\u306e\u4e8c\u3064\u306e\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u307e\u3059\u304c\u3001Tumblr\u306f\u72ec\u81ea\u3067\u5b9f\u88c5\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3002\n\nNode.js\u304b\u3089\u53d6\u5f97\u3057\u3066\u307f\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\nPHP\u3068\u304b\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3088\u304f\u898b\u308b\u3093\u3067\u3059\u3051\u3069\u3001Node.js\u30b5\u30f3\u30d7\u30eb\u306f\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\nTumblr API\u306eAccess-Token\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002 \u3068\u3084\u3063\u3066\u3044\u308b\u4eba\u3082\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u624b\u304f\u52d5\u3044\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u6c57\n\u5185\u5bb9\u898b\u308b\u3068\u7c21\u5358\u305d\u3046\u306a\u306e\u3067\u30b5\u30af\u30c3\u3068\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u5b9f\u88c5\n\u53c2\u8003: http://www.blake-anderson.com/post/50e7db311e31c2020000000a\n\u53c2\u8003\u30b5\u30a4\u30c8\u306e\u30b3\u30fc\u30c9\u306fexpress\u306e\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3089\u3057\u304f\u3001\u3053\u3061\u3089\u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\u30e2\u30b8\u30e5\u30fc\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ npm i --save express oauth\n\ntumblrConsumerKey\u3068tumblrConsumerSecret\u306b\u305d\u308c\u305e\u308c\u53d6\u5f97\u3057\u305fConsumer Key\u3068Consumer Secret\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3042\u3068\u306f\u30b3\u30d4\u30da\u3067\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\napp.js\nvar express = require('express'),\n    oauth = require('oauth'),\n    http = require('http');\n\nvar app = express();\napp.set('port', process.env.PORT || 3000);\n\nvar tumblrConsumerKey = \"****************\",\n    tumblrConsumerSecret = \"*******************\",\n    tumblrOauthAccessToken = undefined,\n    tumblrOauthAccessTokenSecret = undefined,\n    oauthRequestToken,\n    oauthRequestTokenSecret;\n\n//OAuth\u7528\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nvar consumer = new oauth.OAuth(\n  \"http://www.tumblr.com/oauth/request_token\",\n  \"http://www.tumblr.com/oauth/access_token\",\n  tumblrConsumerKey,\n  tumblrConsumerSecret,\n  \"1.0A\",\n  \"http://localhost:3000/auth/callback\",\n  \"HMAC-SHA1\"\n);\n\n//\u30ea\u30af\u30a8\u30b9\u30c8\u30c8\u30fc\u30af\u30f3\u751f\u6210\napp.get('/', function (req, res) {\n  consumer.getOAuthRequestToken(function(error, oauthToken, oauthTokenSecret){\n    if (error) {\n      res.send(\"Error getting OAuth request token: \" + error, 500);\n    } else {\n      oauthRequestToken = oauthToken,\n      oauthRequestTokenSecret = oauthTokenSecret;\n\n      res.redirect(\"http://www.tumblr.com/oauth/authorize?oauth_token=\" + oauthRequestToken);\n    }\n  });\n});\n\n//\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\napp.get('/auth/callback', function (req, res) {\n  consumer.getOAuthAccessToken(oauthRequestToken, oauthRequestTokenSecret, req.query.oauth_verifier, function(error, _oauthAccessToken, _oauthAccessTokenSecret) {\n    if (error) {\n      res.send(\"Error getting OAuth access token: \" + error, 500);\n    } else {\n      tumblrOauthAccessToken = _oauthAccessToken;\n      tumblrOauthAccessTokenSecret = _oauthAccessTokenSecret;\n      //AccessToken\u3068AccessTokenSecret\u3092\u8868\u793a\n      res.send('Access Token:' + tumblrOauthAccessToken +'<br/>Access Token Secret:'+tumblrOauthAccessTokenSecret);\n    }\n  });\n});\n\nhttp.createServer(app).listen(app.get('port'), function () {\n  console.log('Express server listening on port ' + app.get('port'));\n});\n\n\n\n\n\u5b9f\u884c\n$ node app.js\nExpress server listening on port 3000\n\nhttp://localhost:3000 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 \nAllow \u3092\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002\nAccess Token:*******************************\nAccess Token Secret:***************************\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4e8c\u3064\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\u3042\u3068\u306fAPI\u7d4c\u7531\u3067POST\u3057\u305f\u308a\u8272\u3005\u3067\u304d\u307e\u3059\u306d\u3002\n\n\u0010##\u30d0\u30fc\u30b8\u30e7\u30f3\n\n> \u203b2015/03/10\u6642\u70b9\n\n* Node.js v0.12\n* express v4.12.2\n* oauth(Node.js\u30e2\u30b8\u30e5\u30fc\u30eb) v0.9.12\n\n![](http://i.gyazo.com/02359a5cac18eaf7810ce77ff9a92b35.png)\n\n##\u306f\u3058\u3081\u306b\n\n\u6700\u8fd1tumblr\u306e\u9023\u643a\u3092\u8272\u3005\u8abf\u3079\u3066\u307e\u3059\u3002API\u7d4c\u7531\u3067POST\u3059\u308b\u65b9\u6cd5\u3092\u8abf\u3079\u3066\u305f\u306e\u3067\u3059\u304c\u3001twitter\u3068\u304b\u3067\u3088\u304f\u3042\u308bOAuth\u306a\u8a8d\u8a3c\u3089\u3057\u304f\u3001\n\n* Consumer Key\n* Consumer Secret\n* Access Token\n* Access Token Secret\n\n\u304c\u5fc5\u8981\u307f\u305f\u3044\u3067\u3059\u306d\u3002twitter bot \u3068\u304b\u4f5c\u308b\u3068\u304d\u306b\u3088\u304f\u307f\u308b\u30a2\u30ec\u3067\u3059\u3002\n\n\u53c2\u8003: [OAuth\u3068\u306f\uff1f\u2015OAuth\u306e\u6982\u5ff5\u3068OAuth\u3067\u3067\u304d\u308b\u3053\u3068](http://gihyo.jp/dev/feature/01/oauth/0001)\n\n### Consumer Key\u3068Consumer Secret\u306e\u53d6\u5f97\n\n[\u3053\u3061\u3089\u304b\u3089](https://www.tumblr.com/oauth/apps)\u30a2\u30d7\u30ea\u767b\u9332\u3092\u3057\u3066\u9032\u3081\u3066\u3044\u3051\u3070\u3053\u306e\u4e8c\u3064\u306e\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n### Access Token \u3068 Access Token Secret\u306e\u53d6\u5f97\n\n\u3053\u3053\u304c\u9762\u5012\u304f\u3055\u3044\u3068\u3053\u308d\u3067\u3059\u3002Twitter\u3060\u3068\u30a2\u30d7\u30ea\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089\u3053\u306e\u4e8c\u3064\u306e\u60c5\u5831\u306f\u53d6\u5f97\u3067\u304d\u307e\u3059\u304c\u3001Tumblr\u306f\u72ec\u81ea\u3067\u5b9f\u88c5\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3002\n\n### Node.js\u304b\u3089\u53d6\u5f97\u3057\u3066\u307f\u308b\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\n[PHP\u3068\u304b\u306e\u30b5\u30f3\u30d7\u30eb](http://ameblo.jp/itboy/entry-10660222356.html)\u306f\u3088\u304f\u898b\u308b\u3093\u3067\u3059\u3051\u3069\u3001Node.js\u30b5\u30f3\u30d7\u30eb\u306f\u3042\u307e\u308a\u306a\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n[Tumblr API\u306eAccess-Token\u3092\u53d6\u5f97\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002](http://d.hatena.ne.jp/gelegele/20120626/1340715983) \u3068\u3084\u3063\u3066\u3044\u308b\u4eba\u3082\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u624b\u304f\u52d5\u3044\u3066\u307e\u305b\u3093\u3067\u3057\u305f\u6c57\n\n\u5185\u5bb9\u898b\u308b\u3068\u7c21\u5358\u305d\u3046\u306a\u306e\u3067\u30b5\u30af\u30c3\u3068\u4f5c\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n## \u5b9f\u88c5\n\n\u53c2\u8003: http://www.blake-anderson.com/post/50e7db311e31c2020000000a\n\n\u53c2\u8003\u30b5\u30a4\u30c8\u306e\u30b3\u30fc\u30c9\u306fexpress\u306e\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u3089\u3057\u304f\u3001\u3053\u3061\u3089\u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ npm i --save express oauth\n```\n\ntumblrConsumerKey\u3068tumblrConsumerSecret\u306b\u305d\u308c\u305e\u308c\u53d6\u5f97\u3057\u305fConsumer Key\u3068Consumer Secret\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u3042\u3068\u306f\u30b3\u30d4\u30da\u3067\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002\n\n```app.js\nvar express = require('express'),\n    oauth = require('oauth'),\n    http = require('http');\n\nvar app = express();\napp.set('port', process.env.PORT || 3000);\n\nvar tumblrConsumerKey = \"****************\",\n    tumblrConsumerSecret = \"*******************\",\n    tumblrOauthAccessToken = undefined,\n    tumblrOauthAccessTokenSecret = undefined,\n    oauthRequestToken,\n    oauthRequestTokenSecret;\n\n//OAuth\u7528\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nvar consumer = new oauth.OAuth(\n  \"http://www.tumblr.com/oauth/request_token\",\n  \"http://www.tumblr.com/oauth/access_token\",\n  tumblrConsumerKey,\n  tumblrConsumerSecret,\n  \"1.0A\",\n  \"http://localhost:3000/auth/callback\",\n  \"HMAC-SHA1\"\n);\n\n//\u30ea\u30af\u30a8\u30b9\u30c8\u30c8\u30fc\u30af\u30f3\u751f\u6210\napp.get('/', function (req, res) {\n  consumer.getOAuthRequestToken(function(error, oauthToken, oauthTokenSecret){\n    if (error) {\n      res.send(\"Error getting OAuth request token: \" + error, 500);\n    } else {\n      oauthRequestToken = oauthToken,\n      oauthRequestTokenSecret = oauthTokenSecret;\n\n      res.redirect(\"http://www.tumblr.com/oauth/authorize?oauth_token=\" + oauthRequestToken);\n    }\n  });\n});\n\n//\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\napp.get('/auth/callback', function (req, res) {\n  consumer.getOAuthAccessToken(oauthRequestToken, oauthRequestTokenSecret, req.query.oauth_verifier, function(error, _oauthAccessToken, _oauthAccessTokenSecret) {\n    if (error) {\n      res.send(\"Error getting OAuth access token: \" + error, 500);\n    } else {\n      tumblrOauthAccessToken = _oauthAccessToken;\n      tumblrOauthAccessTokenSecret = _oauthAccessTokenSecret;\n      //AccessToken\u3068AccessTokenSecret\u3092\u8868\u793a\n      res.send('Access Token:' + tumblrOauthAccessToken +'<br/>Access Token Secret:'+tumblrOauthAccessTokenSecret);\n    }\n  });\n});\n\nhttp.createServer(app).listen(app.get('port'), function () {\n  console.log('Express server listening on port ' + app.get('port'));\n});\n\n```\n\n###\u5b9f\u884c\n\n```\n$ node app.js\nExpress server listening on port 3000\n```\n\nhttp://localhost:3000 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\n\n![](http://i.gyazo.com/03ccdbdb5b3146339bc5eefe1877a5b8.png)\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u307e\u3059\u3002 \n\n**Allow** \u3092\u9078\u629e\u3057\u307e\u3057\u3087\u3046\u3002\n\n```\nAccess Token:*******************************\nAccess Token Secret:***************************\n```\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4e8c\u3064\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3042\u3068\u306fAPI\u7d4c\u7531\u3067POST\u3057\u305f\u308a\u8272\u3005\u3067\u304d\u307e\u3059\u306d\u3002\n", "tags": ["JavaScript", "Node.js", "tumblr", "OAuth", "Express"]}