{"context": "\n\n\u6982\u8981\n\u4f1a\u793e\u3067\u4f5c\u3063\u3066\u516c\u958b\u3067\u304d\u308b\u3082\u306e\u3092\u6b8b\u3057\u3066\u3044\u3053\u3046\u304b\u306a\u30fc\u3063\u3066\n\u6b86\u3069\u304c\u52e4\u3081\u5148\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044DB\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3060\u3063\u305f\u308a\u3001\u793e\u5185\u7528\u306e\u30c4\u30fc\u30eb\u306e\u305f\u3081\u306e\u30d0\u30c3\u30c1\u3060\u3063\u305f\u308a\u3059\u308b\u4e2d\u3001\u4ed6\u3067\u3082\u4f7f\u3048\u308b\u304b\u3082\u3068\u3044\u3046\u3082\u306e\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30c4\u30fc\u30eb\u7cfb\n\n\u30d7\u30ed\u30bb\u30b9\u5f37\u5236\u7d42\u4e86\nVB\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3059\u3002\n\u4f1a\u793e\u306e\u30d1\u30bd\u30b3\u30f3\u3063\u3066\u306a\u3093\u304b\u8272\u3005\u306f\u3044\u3063\u3066\u308b\u3093\u3067\u3059\u3088\u306d\u3001\u3001\u3001\n\u306a\u306e\u3067\u3001\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u306b\u3053\u306eexe\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3092\u7a81\u3063\u8fbc\u3093\u3067\u3001\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u8272\u3005\u3057\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\n\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u8d77\u52d5\u30d7\u30b7\u30e7\u30f3\n\n\u8d77\u52d5\u30d7\u30b7\u30e7\u30f3\u306e /***= \u4ee5\u5916\u306f\u3059\u3079\u3066\u30d7\u30ed\u30bb\u30b9\u540d\u3068\u3057\u3066\u8a8d\u8b58\u3059\u308b\u306e\u3067\u3001\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u4e0d\u8981\u306a\u3082\u306e\u3092\u3054\u3063\u305d\u308a\u5165\u308c\u308b\u611f\u3058\u3067\u3059\u3002\nImports System.ComponentModel\n\nModule Module1\n\n    Sub Main()\n        Dim tasklist As New List(Of Diagnostics.Process)\n        Dim waitparamnm As String = \"/wait=\", '\u51e6\u7406\u958b\u59cb\u5f85\u3061\n        hidewaitparamnm As String = \"/hidewait=\", '\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u9589\u3058\u5f85\u3061\n        retryparamnm As String = \"/retry=\",'\u30ea\u30c8\u30e9\u30a4\u56de\u6570\n        retrywaitparamnm As String = \"/retrywait=\" '\u30ea\u30c8\u30e9\u30a4\u958b\u59cb\u5f85\u3061\n\n        Dim waittime As Integer = 0,\n        hidewaittime As Integer = 0,\n        retrycount As Integer = 0,\n        retrywaittime As Integer = 0\n\n        Try\n            'wait\n            For Each args As String In My.Application.CommandLineArgs\n                Select Case True\n                    Case args.ToLower.StartsWith(waitparamnm.ToLower())\n                        waittime = Integer.Parse(\"0\" & args.Remove(0, waitparamnm.Length)) * 1000\n                End Select\n            Next\n\n            Console.WriteLine(\"Wait \" & waittime)\n            Threading.Thread.Sleep(waittime)\n\n            'run\n            For Each args As String In My.Application.CommandLineArgs\n                Select Case True\n                    Case args.ToLower.StartsWith(waitparamnm.ToLower())\n                        'waittime = Integer.Parse(\"0\" & args.Remove(0, waitparamnm.Length)) * 1000\n\n                    Case args.ToLower.StartsWith(hidewaitparamnm.ToLower())\n                        hidewaittime = Integer.Parse(\"0\" & args.Remove(0, hidewaitparamnm.Length)) * 1000\n\n                    Case args.ToLower.StartsWith(retryparamnm.ToLower())\n                        retrycount = Integer.Parse(\"0\" & args.Remove(0, retryparamnm.Length))\n\n                    Case args.ToLower.StartsWith(retrywaitparamnm.ToLower())\n                        retrywaittime = Integer.Parse(\"0\" & args.Remove(0, retrywaitparamnm.Length)) * 1000\n\n                    Case Else\n                        tasklist.AddRange((Diagnostics.Process.GetProcessesByName(args)))\n                End Select\n            Next\n\n            'kill + retry\n            If tasklist.Count > 0 Then\n                For i As Integer = 0 To retrycount\n                    If i > 0 Then\n                        Console.WriteLine(\"Retry \" & i)\n                        Console.WriteLine(\"RetryWait \" &\n                        retrywaittime)\n                        Threading.Thread.Sleep(retrywaittime)\n                    End If\n\n                    kill(p_TaskList:=tasklist)\n                    If tasklist.Count <= 0 Then Exit For\n                Next\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n\n        Console.WriteLine(\"End.\")\n        Threading.Thread.Sleep(hidewaittime)\n\n    End Sub\n\n    Private Sub kill(ByRef p_TaskList As List(Of Diagnostics.Process))\n        Dim killedtaskidlist As New List(Of Integer)\n\n        For Each task As System.Diagnostics.Process In p_TaskList\n            Try\n                Dim processno As Integer = 0\n\n                Console.Write(task.MainModule.ModuleName & \":\")\n                '\u30d7\u30ed\u30bb\u30b9\u3092\u5f37\u5236\u7684\u306b\u7d42\u4e86\u3055\u305b\u308b\n                task.Kill()\n\n                killedtaskidlist.Add(task.Id)\n\n                Console.WriteLine(\"Killed.\")\n            Catch ex As Win32Exception\n                Console.WriteLine(\"Dont Killed\")\n            Catch ex As NotSupportedException\n                Console.WriteLine(\"Non Supported\")\n            Catch ex As InvalidOperationException\n                Console.WriteLine(\"PS Not Found\")\n            End Try\n        Next\n\n        p_TaskList.RemoveAll(Function(ps As Diagnostics.Process)\n                                 Return killedtaskidlist.Contains(ps.Id)\n                             End Function)\n    End Sub\n\nEnd Module\n\n\u4e0a\u8a18\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u3082\u306e\u3092\u4e0b\u8a18\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u6c17\u5206\u6b21\u7b2c\uff57\uff09\nSkyDrive\n\n\u30b5\u30af\u30e9\u30a8\u30c7\u30a3\u30bf\u306e\u30de\u30af\u30ed\n\u57fa\u672c\u30aa\u30e9\u30af\u30eb\u30fb.Net\u7cfb\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306a\u3069\u3067\u4f7f\u3063\u305f\u30b5\u30af\u30e9\u30a8\u30c7\u30a3\u30bf\u7528\u306e\u30de\u30af\u30ed\u304c\u4e0b\u8a18\u3067\u3059\u3002\n\nSQL_In\n\u30a8\u30af\u30bb\u30eb\u306e\u30c7\u30fc\u30bf\u3092In\u306e\u6761\u4ef6\u306b\u5165\u308c\u305f\u3044\u3068\u304d\u3068\u304b\u306f\u3001\u6539\u884c\u3054\u3068\u306b\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u304a\u3057\u308a\u306b\u30ab\u30f3\u30de\u3092\u5165\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u30de\u30af\u30ed\u3067\u3059\u3002\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('$|^', '\\'', 164); // \u3059\u3079\u3066\u7f6e\u63db\nS_ReplaceAll('$', ',', 164);    // \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);    // \u518d\u63cf\u753b\n\n\nTrim\n\u30fb\u30fb\u30fbTrim\u3067\u3059\u3002\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('^\\\\s+|\\\\s+$', '', 36);    // \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);    // \u518d\u63cf\u753b\n\n\nNULL_DEL\n\u7121\u99c4\u306a\u6539\u884c\u3068\u304b\u3092\u6d88\u3057\u3066\u884c\u3092\u8a70\u3081\u308b\u611f\u3058\u306e\u3084\u3064\u3067\u3059\u3002\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('^[[ \\\\t][\\\\r\\\\n]]+', '', 164);    // \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);    // \u518d\u63cf\u753b\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u7cfb\n\n\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u96fb\u6e90\u3092\u5207\u308b\u6642\u9593\u8abf\u6574\n\u4f1a\u793e\u3046\u308b\u3055\u3044\u3093\u3067\u3059\u3001\u3001\u3001PC\u3064\u3044\u3066\u308b\u3068\u307e\u3060\u4f1a\u793e\u306b\u3044\u308b\u3068\u601d\u308f\u308c\u308b\u3057\u3001\u7701\u30a8\u30cd\u3069\u3046\u306e\u3053\u3046\u306e\u3068\u3001\u3001\u3001\n\u3067\u3082\u5e30\u5b85\u3059\u308b\u3068\u304d\u4e00\u3005\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u308b\u3068\u3001\u3084\u308a\u304b\u3051\u306e\u30bd\u30fc\u30b9\u3059\u3079\u3066\u9589\u3058\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3067\u3059\u3088\u306d\u3001\u3001\u3001\nVisual Studio\u3068\u304b\u4f1a\u793e\u306e\u53e4\u304f\u3066\u91cd\u3044\u3057\u3001\u3001\u3001\u30ce\u30fc\u30c8PC\u3060\u3057\u3001\u3001\u3001\n\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\u3042\u305f\u304b\u3082\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u308b\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u96fb\u6e90\u3060\u3051\u5207\u308b\u3088\u3046\u306a\u5c0f\u7d30\u5de5\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u30b9\u30ea\u30fc\u30d7\u3084\u4f11\u6b62\u72b6\u614b\u3082\u3042\u308a\u3060\u3051\u3069\u3001\u306a\u3093\u304b\u597d\u304d\u3058\u3083\u306a\u3044\u3093\u3067\u3059\u3001\u304b\u3068\u8a00\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30bb\u30a4\u30d0\u30fc\u3067\u9ed2\u304f\u3057\u3066\u3082\u3001\u30d0\u30c3\u30af\u30e9\u30a4\u30c8\u751f\u304d\u3066\u308b\u304b\u3089\u30d0\u30ec\u3061\u3083\u3046\u3057\uff09\n@echo off\n\n:LOOP\nrem \"Monitor Power-off timeout\"\nset /P OT=\"Min Num (memo: q -> exit) = \"\necho %OT%\nif %OT% == q goto :EXIT\n\npowercfg.exe -X /monitor-timeout-ac %OT%\ngoto :LOOP\n\n:EXIT\n\nexit /b 0\n\n\u3053\u306e\u30d0\u30c3\u30c1\u3092\u8d77\u52d5\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u5207\u308b\u6642\u9593\u3092\u5206\u5358\u4f4d\u3067\u554f\u3044\u5408\u308f\u305b\u7d9a\u3051\u307e\u3059\u3002\n\uff08\u554f\u3044\u5408\u308f\u305b\u7d9a\u3051\u308b\u306e\u306f\u3001\u4f1a\u793e\u6765\u305f\u6642\u306b0\u3092\u5165\u308c\u3066\u5207\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u304b\u3089\uff09\n\n\n\n#\u6982\u8981\n\n\u4f1a\u793e\u3067\u4f5c\u3063\u3066\u516c\u958b\u3067\u304d\u308b\u3082\u306e\u3092\u6b8b\u3057\u3066\u3044\u3053\u3046\u304b\u306a\u30fc\u3063\u3066\n\u6b86\u3069\u304c\u52e4\u3081\u5148\u3067\u3057\u304b\u4f7f\u3048\u306a\u3044DB\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3060\u3063\u305f\u308a\u3001\u793e\u5185\u7528\u306e\u30c4\u30fc\u30eb\u306e\u305f\u3081\u306e\u30d0\u30c3\u30c1\u3060\u3063\u305f\u308a\u3059\u308b\u4e2d\u3001\u4ed6\u3067\u3082\u4f7f\u3048\u308b\u304b\u3082\u3068\u3044\u3046\u3082\u306e\u3092\u66f8\u3044\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n#\u30c4\u30fc\u30eb\u7cfb\n\n##\u30d7\u30ed\u30bb\u30b9\u5f37\u5236\u7d42\u4e86\n\nVB\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3059\u3002\n\u4f1a\u793e\u306e\u30d1\u30bd\u30b3\u30f3\u3063\u3066\u306a\u3093\u304b\u8272\u3005\u306f\u3044\u3063\u3066\u308b\u3093\u3067\u3059\u3088\u306d\u3001\u3001\u3001\n\u306a\u306e\u3067\u3001\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u306b\u3053\u306eexe\u306e\u30b7\u30e7\u30fc\u30c8\u30ab\u30c3\u30c8\u3092\u7a81\u3063\u8fbc\u3093\u3067\u3001\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u8272\u3005\u3057\u3066\u3044\u308b\u611f\u3058\u3067\u3059\u3002\n\n\u8d77\u52d5\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n###\u8d77\u52d5\u30d7\u30b7\u30e7\u30f3\n\n ![kill.png](https://qiita-image-store.s3.amazonaws.com/0/32577/8abb9aa4-186f-406f-5fba-ed2bc5851000.png)\n\n\u8d77\u52d5\u30d7\u30b7\u30e7\u30f3\u306e **/\\*\\*\\*=** \u4ee5\u5916\u306f\u3059\u3079\u3066\u30d7\u30ed\u30bb\u30b9\u540d\u3068\u3057\u3066\u8a8d\u8b58\u3059\u308b\u306e\u3067\u3001\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u4e0d\u8981\u306a\u3082\u306e\u3092\u3054\u3063\u305d\u308a\u5165\u308c\u308b\u611f\u3058\u3067\u3059\u3002\n\n```vbnet\nImports System.ComponentModel\n\nModule Module1\n\n    Sub Main()\n        Dim tasklist As New List(Of Diagnostics.Process)\n        Dim waitparamnm As String = \"/wait=\", '\u51e6\u7406\u958b\u59cb\u5f85\u3061\n        hidewaitparamnm As String = \"/hidewait=\", '\u51e6\u7406\u5b8c\u4e86\u5f8c\u306e\u9589\u3058\u5f85\u3061\n        retryparamnm As String = \"/retry=\",'\u30ea\u30c8\u30e9\u30a4\u56de\u6570\n        retrywaitparamnm As String = \"/retrywait=\" '\u30ea\u30c8\u30e9\u30a4\u958b\u59cb\u5f85\u3061\n\n        Dim waittime As Integer = 0,\n        hidewaittime As Integer = 0,\n        retrycount As Integer = 0,\n        retrywaittime As Integer = 0\n\n        Try\n            'wait\n            For Each args As String In My.Application.CommandLineArgs\n                Select Case True\n                    Case args.ToLower.StartsWith(waitparamnm.ToLower())\n                        waittime = Integer.Parse(\"0\" & args.Remove(0, waitparamnm.Length)) * 1000\n                End Select\n            Next\n\n            Console.WriteLine(\"Wait \" & waittime)\n            Threading.Thread.Sleep(waittime)\n\n            'run\n            For Each args As String In My.Application.CommandLineArgs\n                Select Case True\n                    Case args.ToLower.StartsWith(waitparamnm.ToLower())\n                        'waittime = Integer.Parse(\"0\" & args.Remove(0, waitparamnm.Length)) * 1000\n\n                    Case args.ToLower.StartsWith(hidewaitparamnm.ToLower())\n                        hidewaittime = Integer.Parse(\"0\" & args.Remove(0, hidewaitparamnm.Length)) * 1000\n\n                    Case args.ToLower.StartsWith(retryparamnm.ToLower())\n                        retrycount = Integer.Parse(\"0\" & args.Remove(0, retryparamnm.Length))\n\n                    Case args.ToLower.StartsWith(retrywaitparamnm.ToLower())\n                        retrywaittime = Integer.Parse(\"0\" & args.Remove(0, retrywaitparamnm.Length)) * 1000\n\n                    Case Else\n                        tasklist.AddRange((Diagnostics.Process.GetProcessesByName(args)))\n                End Select\n            Next\n\n            'kill + retry\n            If tasklist.Count > 0 Then\n                For i As Integer = 0 To retrycount\n                    If i > 0 Then\n                        Console.WriteLine(\"Retry \" & i)\n                        Console.WriteLine(\"RetryWait \" &\n                        retrywaittime)\n                        Threading.Thread.Sleep(retrywaittime)\n                    End If\n\n                    kill(p_TaskList:=tasklist)\n                    If tasklist.Count <= 0 Then Exit For\n                Next\n            End If\n\n        Catch ex As Exception\n            Console.WriteLine(ex.Message)\n        End Try\n\n        Console.WriteLine(\"End.\")\n        Threading.Thread.Sleep(hidewaittime)\n\n    End Sub\n\n    Private Sub kill(ByRef p_TaskList As List(Of Diagnostics.Process))\n        Dim killedtaskidlist As New List(Of Integer)\n\n        For Each task As System.Diagnostics.Process In p_TaskList\n            Try\n                Dim processno As Integer = 0\n\n                Console.Write(task.MainModule.ModuleName & \":\")\n                '\u30d7\u30ed\u30bb\u30b9\u3092\u5f37\u5236\u7684\u306b\u7d42\u4e86\u3055\u305b\u308b\n                task.Kill()\n\n                killedtaskidlist.Add(task.Id)\n\n                Console.WriteLine(\"Killed.\")\n            Catch ex As Win32Exception\n                Console.WriteLine(\"Dont Killed\")\n            Catch ex As NotSupportedException\n                Console.WriteLine(\"Non Supported\")\n            Catch ex As InvalidOperationException\n                Console.WriteLine(\"PS Not Found\")\n            End Try\n        Next\n\n        p_TaskList.RemoveAll(Function(ps As Diagnostics.Process)\n                                 Return killedtaskidlist.Contains(ps.Id)\n                             End Function)\n    End Sub\n\nEnd Module\n```\n\n\u4e0a\u8a18\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u3082\u306e\u3092\u4e0b\u8a18\u306b\u304a\u3044\u3066\u304a\u304d\u307e\u3059\u3002\uff08\u6c17\u5206\u6b21\u7b2c\uff57\uff09\n[SkyDrive](https://1drv.ms/f/s!Ai50VZiXVnDdg_8eCyckAuzrKROATQ)\n\n##\u30b5\u30af\u30e9\u30a8\u30c7\u30a3\u30bf\u306e\u30de\u30af\u30ed\n\n\u57fa\u672c\u30aa\u30e9\u30af\u30eb\u30fb.Net\u7cfb\u306a\u306e\u3067\u3001\u305d\u308c\u3089\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306a\u3069\u3067\u4f7f\u3063\u305f\u30b5\u30af\u30e9\u30a8\u30c7\u30a3\u30bf\u7528\u306e\u30de\u30af\u30ed\u304c\u4e0b\u8a18\u3067\u3059\u3002\n\n###SQL_In\n\n\u30a8\u30af\u30bb\u30eb\u306e\u30c7\u30fc\u30bf\u3092In\u306e\u6761\u4ef6\u306b\u5165\u308c\u305f\u3044\u3068\u304d\u3068\u304b\u306f\u3001\u6539\u884c\u3054\u3068\u306b\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3068\u304a\u3057\u308a\u306b\u30ab\u30f3\u30de\u3092\u5165\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u30de\u30af\u30ed\u3067\u3059\u3002\n\n```\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('$|^', '\\'', 164);\t// \u3059\u3079\u3066\u7f6e\u63db\nS_ReplaceAll('$', ',', 164);\t// \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);\t// \u518d\u63cf\u753b\n```\n\n###Trim\n\n\u30fb\u30fb\u30fbTrim\u3067\u3059\u3002\n\n```\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('^\\\\s+|\\\\s+$', '', 36);\t// \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);\t// \u518d\u63cf\u753b\n```\n\n###NULL_DEL\n\n\u7121\u99c4\u306a\u6539\u884c\u3068\u304b\u3092\u6d88\u3057\u3066\u884c\u3092\u8a70\u3081\u308b\u611f\u3058\u306e\u3084\u3064\u3067\u3059\u3002\n\n```\n//\u30ad\u30fc\u30dc\u30fc\u30c9\u30de\u30af\u30ed\u306e\u30d5\u30a1\u30a4\u30eb\nS_ReplaceAll('^[[ \\\\t][\\\\r\\\\n]]+', '', 164);\t// \u3059\u3079\u3066\u7f6e\u63db\nS_ReDraw(0);\t// \u518d\u63cf\u753b\n```\n\n#\u30b9\u30af\u30ea\u30d7\u30c8\u7cfb\n\n##\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u96fb\u6e90\u3092\u5207\u308b\u6642\u9593\u8abf\u6574\n\n\u4f1a\u793e\u3046\u308b\u3055\u3044\u3093\u3067\u3059\u3001\u3001\u3001PC\u3064\u3044\u3066\u308b\u3068\u307e\u3060\u4f1a\u793e\u306b\u3044\u308b\u3068\u601d\u308f\u308c\u308b\u3057\u3001\u7701\u30a8\u30cd\u3069\u3046\u306e\u3053\u3046\u306e\u3068\u3001\u3001\u3001\n\u3067\u3082\u5e30\u5b85\u3059\u308b\u3068\u304d\u4e00\u3005\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u308b\u3068\u3001\u3084\u308a\u304b\u3051\u306e\u30bd\u30fc\u30b9\u3059\u3079\u3066\u9589\u3058\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3067\u3059\u3088\u306d\u3001\u3001\u3001\nVisual Studio\u3068\u304b\u4f1a\u793e\u306e\u53e4\u304f\u3066\u91cd\u3044\u3057\u3001\u3001\u3001\u30ce\u30fc\u30c8PC\u3060\u3057\u3001\u3001\u3001\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\u3042\u305f\u304b\u3082\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u305b\u304b\u3051\u308b\u305f\u3081\u3001\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u306e\u96fb\u6e90\u3060\u3051\u5207\u308b\u3088\u3046\u306a\u5c0f\u7d30\u5de5\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u30b9\u30ea\u30fc\u30d7\u3084\u4f11\u6b62\u72b6\u614b\u3082\u3042\u308a\u3060\u3051\u3069\u3001\u306a\u3093\u304b\u597d\u304d\u3058\u3083\u306a\u3044\u3093\u3067\u3059\u3001\u304b\u3068\u8a00\u3063\u3066\u30b9\u30af\u30ea\u30fc\u30f3\u30bb\u30a4\u30d0\u30fc\u3067\u9ed2\u304f\u3057\u3066\u3082\u3001\u30d0\u30c3\u30af\u30e9\u30a4\u30c8\u751f\u304d\u3066\u308b\u304b\u3089\u30d0\u30ec\u3061\u3083\u3046\u3057\uff09\n\n```bat\n@echo off\n\n:LOOP\nrem \"Monitor Power-off timeout\"\nset /P OT=\"Min Num (memo: q -> exit) = \"\necho %OT%\nif %OT% == q goto :EXIT\n\npowercfg.exe -X /monitor-timeout-ac %OT%\ngoto :LOOP\n\n:EXIT\n\nexit /b 0\n```\n\n\u3053\u306e\u30d0\u30c3\u30c1\u3092\u8d77\u52d5\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u3092\u5207\u308b\u6642\u9593\u3092\u5206\u5358\u4f4d\u3067\u554f\u3044\u5408\u308f\u305b\u7d9a\u3051\u307e\u3059\u3002\n\uff08\u554f\u3044\u5408\u308f\u305b\u7d9a\u3051\u308b\u306e\u306f\u3001\u4f1a\u793e\u6765\u305f\u6642\u306b0\u3092\u5165\u308c\u3066\u5207\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u304b\u3089\uff09\n\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/32577/a07f7807-d457-293f-abb9-4f547f699f02.png)\n\n![60.png](https://qiita-image-store.s3.amazonaws.com/0/32577/6889a278-4f80-9cd0-7aeb-f5f3b919ea71.png)\n\n![0.png](https://qiita-image-store.s3.amazonaws.com/0/32577/19b26f73-7ccd-ca00-7b21-619e5056cae2.png)\n", "tags": ["VB.Net", "bat", "batch"]}