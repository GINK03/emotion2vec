{"context": "MessagePack-RPC\u3092\u4f7f\u3063\u3066Ruby\u304b\u3089Python\uff08\u307e\u305f\u306f\u305d\u306e\u9006\uff09\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\u3002\n\nRuby\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001Python\u306enumpy\u3084matplotlib\u306a\u3069\u306e\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u305f\u3044\nPython\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u4e00\u90e8\u3067Rails\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u305f\u3044\n\n\u3068\u3044\u3063\u305f\u7528\u9014\u3067\u4f7f\u3048\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u308d\u3092\u5229\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n\u524d\u63d0\n\nRuby 2.3.1\n\n\nmsgpack-rpc 0.5.4\n\n\nPython 3.5.2\n\n\nmsgpack-rpc-python 0.4\n\n\n\n\nMessagePack-RPC\u3068\u306f\nRemote Procedure Call \u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3002MessagePack\u3092\u4f7f\u3063\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3002\n\u4ed5\u69d8\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3053\u3053\u3092\u53c2\u7167\u3002\n\nhttps://github.com/msgpack-rpc/msgpack-rpc\n\n\u69d8\u3005\u306a\u8a00\u8a9e\u3067MessagePack-RPC\u3092\u5b9f\u88c5\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\nRuby,Python\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\uff12\u3064\u3002\u4ed6\u306b\u3082\u8272\u3005\u306a\u8a00\u8a9e\u306e\u5b9f\u88c5\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\n\nhttps://github.com/msgpack-rpc/msgpack-rpc-ruby\nhttps://github.com/msgpack-rpc/msgpack-rpc-python\n\n\u3061\u306a\u307f\u306bneovim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306fMessagePack-RPC\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3067\u304d\u308b\u3089\u3057\u3044\u3002\nMessagePack-RPC\u306e\u4ed5\u69d8\u306b\u6cbf\u3063\u3066\u3055\u3048\u3044\u308c\u3070\u3088\u3044\u306e\u3067\u3001\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3002\nRuby\u7248\u306f\u516c\u5f0f\u306egithub\u30da\u30fc\u30b8\u3092\u898b\u3066\u3082\u307b\u3068\u3093\u3069README\u306b\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u7c21\u5358\u306b\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3002\n\n\u30df\u30cb\u30de\u30eb\u306a\u4f8b\n\u307e\u305a\u306fRuby\u7248\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\n\nserver.rb\n\nrequire 'msgpack/rpc'\n\nclass MyHandler\n  def add(x,y)\n    return x+y\n  end\nend\n\nsvr = MessagePack::RPC::Server.new\nsvr.listen('localhost', 18800, MyHandler.new)\nsvr.run\n\n\nRuby\u7248\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b\n\nclient.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\nresult = c.call(:add, 1, 2)\nputs result\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3002\nruby server.rb &   # server\u3092\u8d77\u52d5\nruby client.rb     # \u6f14\u7b97\u306e\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\n\n\u5168\u304f\u540c\u3058\u3088\u3046\u306bPython\u3067\u3082\u8a18\u8ff0\u53ef\u80fd\u3002\n\nserver.py\nimport msgpackrpc\n\nclass MyHandler(object):\n\n    def add(self, x, y):\n        return x+y\n\nsvr = msgpackrpc.Server( MyHandler(), unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n\n\n\nclient.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nresult = client.call('add', 1, 2)\nprint( result )\n\n\n\u5f53\u7136\u306a\u304c\u3089\u3001Ruby\u306eserver\u3068Python\u306eclient \uff08\u307e\u305f\u306f\u9006\uff09\u3092\u5b9f\u884c\u3057\u3066\u3082\u5168\u304f\u540c\u3058\u7d50\u679c\u306b\u306a\u308b\u3002\nPython\u306e\u5834\u5408\u306b\u306f\u6c17\u3092\u3064\u3051\u308b\u3079\u304d\u70b9\u3068\u3057\u3066\u3001Client\u307e\u305f\u306fServer\u3092\u521d\u671f\u5316\u3059\u308b\u6642\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306funpack_encoding='None'\u3068\u306a\u3063\u3066\u3044\u3066\u3001\u8ee2\u9001\u3055\u308c\u3066\u304f\u308b\u30c7\u30fc\u30bf\u3092\u30d0\u30a4\u30c8\u5217\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u3002\n\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u6570\u5024\u3092\u9001\u53d7\u4fe1\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u554f\u984c\u306a\u3044\u304c\u3001\u6587\u5b57\u5217\u3092\u9001\u53d7\u4fe1\u3057\u305f\u3044\u5834\u5408\u306b\u306f unpack_encoding='utf-8' \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306f\u30d0\u30a4\u30c8\u5217\u3068\u306a\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\u660e\u793a\u7684\u306b .decode('utf-8') \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u308a\u305f\u3044\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 unpack_encoding='utf-8' \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\n\u975e\u540c\u671f\u5b9f\u884c\nserver\u5074\u306e\u51e6\u7406\u306f\u4e00\u77ac\u3067\u7d42\u308f\u308b\u5834\u5408\u3070\u304b\u308a\u3068\u306f\u9650\u3089\u305a\u3001\u6642\u9593\u304c\u304b\u304b\u308b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3082\u8003\u3048\u3089\u308c\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306e\u305f\u3081\u306b\u975e\u540c\u671f\u5b9f\u884c\u306e\u4ed5\u7d44\u307f\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\ncall_async \u3067\u547c\u3093\u3060\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3050\u306b\u51e6\u7406\u304c\u8fd4\u308a\u3001future\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u308b\u3002\nFuture\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f#get\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067server\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u305d\u306e\u5024\u3092\u8fd4\u3059\u3002\n\u3082\u3057server\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u306a\u3051\u308c\u3070\u3001server\u304b\u3089\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u307e\u3067\u5f85\u3064\u3002\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u308b\u306e\u304c\u65e9\u3044\u3060\u308d\u3046\u3002\n\nasync_client.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\n\nputs \"async call\"\nfuture1 = c.call_async(:delayed_add, 1, 1, 2)\nfuture2 = c.call_async(:delayed_add, 1, 2, 3)\nputs future2.get     # \u9806\u756a\u306f\u304b\u306a\u3089\u305a\u3057\u3082call\u3057\u305f\u9806\u756a\u3067\u306a\u304f\u3066\u3082\u3088\u3044\nputs future1.get\n\n\n\nasync_server.rb\nrequire 'msgpack/rpc'\n\nclass MyHandler\n  def delayed_add(t,x,y)\n    puts \"delayed_add is called\"\n    as = MessagePack::RPC::AsyncResult.new\n    Thread.new do\n      sleep t\n      as.result(x+y)\n    end\n    as\n  end\nend\n\n\nPython\u306b\u3064\u3044\u3066\u3082\u540c\u3058\u3088\u3046\u306b future.get() \u3067\u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\nasync_client.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nfuture = client.call_async('delayed_add', 3, 1, 2)\nprint( future.get() )\n\n\n\nasync_server.py\nimport msgpackrpc\nimport threading, time\n\nclass MyHandler(object):\n    def delayed_add(self, t, x, y):\n        print(\"delayed_add is called\")\n        ar = msgpackrpc.server.AsyncResult()\n        def sleep_add():\n            time.sleep(t)\n            ar.set_result(x+y)\n        thread = threading.Thread(target=sleep_add)\n        thread.start()\n        return ar\n\nsvr = msgpackrpc.Server( MyHandler(), unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n\n\n\nRuby\u304b\u3089matplotlib\u3092\u547c\u3076\n\u3082\u3046\u5c11\u3057\u5b9f\u7528\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001Ruby\u306e\u6570\u5024\u914d\u5217\u3092Python\u306ematplotlib\u3067\u63cf\u753b\u3059\u308b\u4f8b\u3092\u793a\u3059\u3002\n\nplot_server.py\nimport msgpackrpc\nimport matplotlib.pyplot as plt\n\nsvr = msgpackrpc.Server( plt, unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n\n\n\n\nplot_client.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\nc.timeout = Float::INFINITY\n\nxs = -3.14.step(3.14, 0.1).to_a\nys = xs.map {|x| Math.sin(x) }\nc.call( :scatter, xs, ys )\nc.call( :show )\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306awindow\u304c\u51fa\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u63cf\u753b\u3055\u308c\u305f\u30a6\u30a4\u30f3\u30c9\u30a6\u304c\u9589\u3058\u3089\u308c\u308b\u307e\u3067server\u304b\u3089\u51e6\u7406\u304c\u8fd4\u3063\u3066\u3053\u306a\u3044\u3002\n\u305d\u306e\u307e\u307e\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066client\u5074\u3067\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u3001c.timeout = Float::INFINITY\u3068\u3057\u3066\u3044\u308b\u3002\n\u3053\u3053\u3067\u306f\u30b7\u30a7\u30eb\u304b\u3089\u624b\u52d5\u3067\u304b\u3089Ruby\u3068Python\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u304c\u3001Ruby\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067Python\u3092\u5916\u90e8\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5\u3057\u305f\u65b9\u304c\u3001\u76f4\u63a5Ruby\u304b\u3089plot\u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3059\u3063\u304d\u308a\u3057\u305d\u3046\u3002\n\nPython\u304b\u3089Rails\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\n\u9006\u65b9\u5411\u306e\u4f8b\u3068\u3057\u3066\u3001Python\u304b\u3089Rails\u30a2\u30d7\u30ea\u306e\u4e2d\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\nrails_server.rb\nrequire 'msgpack/rpc'\nrequire File.join( ENV['RAILS_ROOT'], 'config/environment' )\n\nObject.class_eval do\n  def to_msgpack(*args)  # to_msgpack\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001to_s\u3092\u547c\u3093\u3067\u304b\u3089msgpack\u306b\u5909\u63db\u3059\u308b\u4ed5\u69d8\u306b\u3059\u308b\n    to_s.to_msgpack(*args)\n  end\nend\n\nclass MyRailsHandler\n  def get_book(name)\n    Book.where(name: name).first.as_json\n    # as_json\u3067Hash\u306b\u3059\u308b\u3002\n  end\nend\n\nsvr = MessagePack::RPC::Server.new\nsvr.listen('localhost', 18800, MyRailsHandler.new)\nsvr.run\n\n\n\nrails_client.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nresult = client.call('get_book', 'echo')   # result\u306fdictionary\nprint( result )\n\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Object\u306b\u5bfe\u3057\u3066to_msgpack(*args)\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3002\nto_msgpack\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u306f\u3001\u3053\u3053\u3067\u5b9a\u7fa9\u3057\u305fObject#to_msgpack(*args)\u304c\u547c\u3070\u308c\u308b\u3002\u3053\u308c\u306b\u3088\u308aTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u3082\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\nRPC\u3067\u306f\u5b9f\u73fe\u304c\u96e3\u3057\u3044\u51e6\u7406\n\u4eca\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306a\uff11\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u306e\u5358\u7d14\u306a\u51e6\u7406\u306a\u3089\u3070RPC\u3067\u51e6\u7406\u3067\u304d\u308b\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5834\u5408\u306fRPC\u3067\u306f\u7c21\u5358\u306b\u306f\u89e3\u6c7a\u3057\u306a\u3055\u305d\u3046\n\n\u95a2\u6570\u306bblock\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\n\n\n\u4f8b\u3048\u3070 array.map {|x| f(x) } \u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d\u306bf\u3092RPC\u3067\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\nmsgpack\u3067\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u306a\u3044\u306e\u3067\u539f\u7406\u7684\u306b\u7121\u7406\n\n\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3059\u308b\u5834\u5408\n\n\n\u4f8b\u3048\u3070\u3001Ruby\u3067\u826f\u304f\u898b\u304b\u3051\u308b Books.where(author: \"foo\").asc(:price).first \u3068\u3044\u3046\u3088\u3046\u306a\u51e6\u7406\u3002Python\u304b\u3089Rails\u306eAPI\u3092\u547c\u3073\u305f\u3044\u5834\u5408\u306b\u5236\u9650\u304c\u591a\u304f\u306a\u308a\u305d\u3046\u3002\n\u4f55\u5ea6\u304b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u3082\u826f\u3044\u304c\u3001\u4e2d\u9593\u306e\u72b6\u614b\u3092server\u5074\u3067\u4fdd\u6301\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u306e\u304c\u6c17\u6301\u3061\u60aa\u3044\n\n\n\nMessagePack-RPC\u3092\u4f7f\u3063\u3066Ruby\u304b\u3089Python\uff08\u307e\u305f\u306f\u305d\u306e\u9006\uff09\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u307e\u3068\u3081\u3002\n\n- Ruby\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001Python\u306enumpy\u3084matplotlib\u306a\u3069\u306e\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u305f\u3044\n- Python\u3092\u4e3b\u306b\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u4e00\u90e8\u3067Rails\u30a2\u30d7\u30ea\u3092\u64cd\u4f5c\u3057\u305f\u3044\n\n\u3068\u3044\u3063\u305f\u7528\u9014\u3067\u4f7f\u3048\u3070\u3001\u305d\u308c\u305e\u308c\u306e\u8a00\u8a9e\u306e\u826f\u3044\u3068\u3053\u308d\u3092\u5229\u7528\u3067\u304d\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\n# \u524d\u63d0\n\n- Ruby 2.3.1\n    - msgpack-rpc 0.5.4\n- Python 3.5.2\n    - msgpack-rpc-python 0.4\n\n# MessagePack-RPC\u3068\u306f\n\nRemote Procedure Call \u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3002MessagePack\u3092\u4f7f\u3063\u3066\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3002\n\n\u4ed5\u69d8\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u3053\u3053\u3092\u53c2\u7167\u3002\n\n- https://github.com/msgpack-rpc/msgpack-rpc\n\n\u69d8\u3005\u306a\u8a00\u8a9e\u3067MessagePack-RPC\u3092\u5b9f\u88c5\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\nRuby,Python\u3067\u5b9f\u88c5\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u306e\uff12\u3064\u3002\u4ed6\u306b\u3082\u8272\u3005\u306a\u8a00\u8a9e\u306e\u5b9f\u88c5\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3002\n\n- https://github.com/msgpack-rpc/msgpack-rpc-ruby\n- https://github.com/msgpack-rpc/msgpack-rpc-python\n\n\u3061\u306a\u307f\u306bneovim\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306fMessagePack-RPC\u3092\u4f7f\u3063\u3066\u5b9f\u88c5\u3067\u304d\u308b\u3089\u3057\u3044\u3002\nMessagePack-RPC\u306e\u4ed5\u69d8\u306b\u6cbf\u3063\u3066\u3055\u3048\u3044\u308c\u3070\u3088\u3044\u306e\u3067\u3001\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5b9f\u88c5\u3067\u304d\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308b\u3002\n\nRuby\u7248\u306f\u516c\u5f0f\u306egithub\u30da\u30fc\u30b8\u3092\u898b\u3066\u3082\u307b\u3068\u3093\u3069README\u306b\u60c5\u5831\u304c\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u7c21\u5358\u306b\u4f7f\u3044\u65b9\u3092\u307e\u3068\u3081\u3066\u304a\u304f\u3002\n\n# \u30df\u30cb\u30de\u30eb\u306a\u4f8b\n\n\u307e\u305a\u306fRuby\u7248\u306e\u30b5\u30fc\u30d0\u30fc\u306e\u4f8b\n\n```rb:server.rb\n\nrequire 'msgpack/rpc'\n\nclass MyHandler\n  def add(x,y)\n    return x+y\n  end\nend\n\nsvr = MessagePack::RPC::Server.new\nsvr.listen('localhost', 18800, MyHandler.new)\nsvr.run\n```\n\nRuby\u7248\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f8b\n\n```rb:client.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\nresult = c.call(:add, 1, 2)\nputs result\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u884c\u3059\u308b\u3002\n\n```\nruby server.rb &   # server\u3092\u8d77\u52d5\nruby client.rb     # \u6f14\u7b97\u306e\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\n```\n\n\u5168\u304f\u540c\u3058\u3088\u3046\u306bPython\u3067\u3082\u8a18\u8ff0\u53ef\u80fd\u3002\n\n```py3:server.py\nimport msgpackrpc\n\nclass MyHandler(object):\n\n    def add(self, x, y):\n        return x+y\n\nsvr = msgpackrpc.Server( MyHandler(), unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n```\n\n```py3:client.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nresult = client.call('add', 1, 2)\nprint( result )\n```\n\n\u5f53\u7136\u306a\u304c\u3089\u3001Ruby\u306eserver\u3068Python\u306eclient \uff08\u307e\u305f\u306f\u9006\uff09\u3092\u5b9f\u884c\u3057\u3066\u3082\u5168\u304f\u540c\u3058\u7d50\u679c\u306b\u306a\u308b\u3002\n\nPython\u306e\u5834\u5408\u306b\u306f\u6c17\u3092\u3064\u3051\u308b\u3079\u304d\u70b9\u3068\u3057\u3066\u3001Client\u307e\u305f\u306fServer\u3092\u521d\u671f\u5316\u3059\u308b\u6642\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f`unpack_encoding='None'`\u3068\u306a\u3063\u3066\u3044\u3066\u3001\u8ee2\u9001\u3055\u308c\u3066\u304f\u308b\u30c7\u30fc\u30bf\u3092\u30d0\u30a4\u30c8\u5217\u3068\u3057\u3066\u89e3\u91c8\u3059\u308b\u3002\n\u4e0a\u8a18\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u6570\u5024\u3092\u9001\u53d7\u4fe1\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067\u554f\u984c\u306a\u3044\u304c\u3001\u6587\u5b57\u5217\u3092\u9001\u53d7\u4fe1\u3057\u305f\u3044\u5834\u5408\u306b\u306f `unpack_encoding='utf-8'` \u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305d\u3046\u3057\u306a\u3044\u3068\u53d7\u4fe1\u3057\u305f\u30c7\u30fc\u30bf\u306f\u30d0\u30a4\u30c8\u5217\u3068\u306a\u308a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\u660e\u793a\u7684\u306b `.decode('utf-8')` \u3092\u547c\u3076\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u3092\u9001\u308a\u305f\u3044\u5834\u5408\u3092\u9664\u3044\u3066\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 `unpack_encoding='utf-8'` \u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\n# \u975e\u540c\u671f\u5b9f\u884c\n\nserver\u5074\u306e\u51e6\u7406\u306f\u4e00\u77ac\u3067\u7d42\u308f\u308b\u5834\u5408\u3070\u304b\u308a\u3068\u306f\u9650\u3089\u305a\u3001\u6642\u9593\u304c\u304b\u304b\u308b\u51e6\u7406\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u3082\u8003\u3048\u3089\u308c\u308b\u3002\n\u305d\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u306e\u305f\u3081\u306b\u975e\u540c\u671f\u5b9f\u884c\u306e\u4ed5\u7d44\u307f\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\n\n`call_async` \u3067\u547c\u3093\u3060\u30e1\u30bd\u30c3\u30c9\u306f\u3059\u3050\u306b\u51e6\u7406\u304c\u8fd4\u308a\u3001`future`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u308b\u3002\nFuture\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f`#get`\u304c\u547c\u3070\u308c\u305f\u6642\u70b9\u3067server\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u305d\u306e\u5024\u3092\u8fd4\u3059\u3002\n\u3082\u3057server\u304b\u3089\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u306a\u3051\u308c\u3070\u3001server\u304b\u3089\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u307e\u3067\u5f85\u3064\u3002\n\n\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u898b\u308b\u306e\u304c\u65e9\u3044\u3060\u308d\u3046\u3002\n\n```rb:async_client.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\n\nputs \"async call\"\nfuture1 = c.call_async(:delayed_add, 1, 1, 2)\nfuture2 = c.call_async(:delayed_add, 1, 2, 3)\nputs future2.get     # \u9806\u756a\u306f\u304b\u306a\u3089\u305a\u3057\u3082call\u3057\u305f\u9806\u756a\u3067\u306a\u304f\u3066\u3082\u3088\u3044\nputs future1.get\n```\n\n```rb:async_server.rb\nrequire 'msgpack/rpc'\n\nclass MyHandler\n  def delayed_add(t,x,y)\n    puts \"delayed_add is called\"\n    as = MessagePack::RPC::AsyncResult.new\n    Thread.new do\n      sleep t\n      as.result(x+y)\n    end\n    as\n  end\nend\n```\n\nPython\u306b\u3064\u3044\u3066\u3082\u540c\u3058\u3088\u3046\u306b `future.get()` \u3067\u7d50\u679c\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n```py3:async_client.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nfuture = client.call_async('delayed_add', 3, 1, 2)\nprint( future.get() )\n```\n\n```py3:async_server.py\nimport msgpackrpc\nimport threading, time\n\nclass MyHandler(object):\n    def delayed_add(self, t, x, y):\n        print(\"delayed_add is called\")\n        ar = msgpackrpc.server.AsyncResult()\n        def sleep_add():\n            time.sleep(t)\n            ar.set_result(x+y)\n        thread = threading.Thread(target=sleep_add)\n        thread.start()\n        return ar\n\nsvr = msgpackrpc.Server( MyHandler(), unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n```\n\n\n# Ruby\u304b\u3089matplotlib\u3092\u547c\u3076\n\n\u3082\u3046\u5c11\u3057\u5b9f\u7528\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001Ruby\u306e\u6570\u5024\u914d\u5217\u3092Python\u306ematplotlib\u3067\u63cf\u753b\u3059\u308b\u4f8b\u3092\u793a\u3059\u3002\n\n```py3:plot_server.py\nimport msgpackrpc\nimport matplotlib.pyplot as plt\n\nsvr = msgpackrpc.Server( plt, unpack_encoding='utf-8' )\nsvr.listen( msgpackrpc.Address('localhost',18800) )\nsvr.start()\n\n```\n\n```rb:plot_client.rb\nrequire 'msgpack/rpc'\nc = MessagePack::RPC::Client.new('localhost',18800)\nc.timeout = Float::INFINITY\n\nxs = -3.14.step(3.14, 0.1).to_a\nys = xs.map {|x| Math.sin(x) }\nc.call( :scatter, xs, ys )\nc.call( :show )\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306awindow\u304c\u51fa\u3066\u3001\u30d7\u30ed\u30c3\u30c8\u304c\u63cf\u753b\u3055\u308c\u308b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/28792/2b86ca53-46f6-72fc-88f9-4d40dcde8859.png)\n\n\u6ce8\u610f\u70b9\u3068\u3057\u3066\u3001\u63cf\u753b\u3055\u308c\u305f\u30a6\u30a4\u30f3\u30c9\u30a6\u304c\u9589\u3058\u3089\u308c\u308b\u307e\u3067server\u304b\u3089\u51e6\u7406\u304c\u8fd4\u3063\u3066\u3053\u306a\u3044\u3002\n\u305d\u306e\u307e\u307e\u3067\u306f\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066client\u5074\u3067\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u306e\u3067\u3001`c.timeout = Float::INFINITY`\u3068\u3057\u3066\u3044\u308b\u3002\n\n\u3053\u3053\u3067\u306f\u30b7\u30a7\u30eb\u304b\u3089\u624b\u52d5\u3067\u304b\u3089Ruby\u3068Python\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u3066\u3044\u308b\u304c\u3001Ruby\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067Python\u3092\u5916\u90e8\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u8d77\u52d5\u3057\u305f\u65b9\u304c\u3001\u76f4\u63a5Ruby\u304b\u3089plot\u3057\u3066\u3044\u308b\u304b\u306e\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u306a\u3063\u3066\u3059\u3063\u304d\u308a\u3057\u305d\u3046\u3002\n\n# Python\u304b\u3089Rails\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3076\n\n\u9006\u65b9\u5411\u306e\u4f8b\u3068\u3057\u3066\u3001Python\u304b\u3089Rails\u30a2\u30d7\u30ea\u306e\u4e2d\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\n```rb:rails_server.rb\nrequire 'msgpack/rpc'\nrequire File.join( ENV['RAILS_ROOT'], 'config/environment' )\n\nObject.class_eval do\n  def to_msgpack(*args)  # to_msgpack\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001to_s\u3092\u547c\u3093\u3067\u304b\u3089msgpack\u306b\u5909\u63db\u3059\u308b\u4ed5\u69d8\u306b\u3059\u308b\n    to_s.to_msgpack(*args)\n  end\nend\n\nclass MyRailsHandler\n  def get_book(name)\n    Book.where(name: name).first.as_json\n    # as_json\u3067Hash\u306b\u3059\u308b\u3002\n  end\nend\n\nsvr = MessagePack::RPC::Server.new\nsvr.listen('localhost', 18800, MyRailsHandler.new)\nsvr.run\n```\n\n```py3:rails_client.py\nimport msgpackrpc\n\nclient = msgpackrpc.Client(msgpackrpc.Address(\"localhost\", 18800), unpack_encoding='utf-8')\nresult = client.call('get_book', 'echo')   # result\u306fdictionary\nprint( result )\n```\n\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Object\u306b\u5bfe\u3057\u3066`to_msgpack(*args)`\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3002\n`to_msgpack`\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u30af\u30e9\u30b9\u306b\u5bfe\u3057\u3066\u306f\u3001\u3053\u3053\u3067\u5b9a\u7fa9\u3057\u305f`Object#to_msgpack(*args)`\u304c\u547c\u3070\u308c\u308b\u3002\u3053\u308c\u306b\u3088\u308aTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u3069\u3082\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n# RPC\u3067\u306f\u5b9f\u73fe\u304c\u96e3\u3057\u3044\u51e6\u7406\n\n\u4eca\u307e\u3067\u898b\u3066\u304d\u305f\u3088\u3046\u306a\uff11\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u306e\u5358\u7d14\u306a\u51e6\u7406\u306a\u3089\u3070RPC\u3067\u51e6\u7406\u3067\u304d\u308b\u3002\u3057\u304b\u3057\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5834\u5408\u306fRPC\u3067\u306f\u7c21\u5358\u306b\u306f\u89e3\u6c7a\u3057\u306a\u3055\u305d\u3046\n\n- \u95a2\u6570\u306bblock\u3092\u6e21\u3057\u305f\u3044\u5834\u5408\n    - \u4f8b\u3048\u3070 `array.map {|x| f(x) }` \u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d\u306bf\u3092RPC\u3067\u6e21\u3059\u3053\u3068\u306f\u3067\u304d\u306a\u3044\n    - msgpack\u3067\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u306a\u3044\u306e\u3067\u539f\u7406\u7684\u306b\u7121\u7406\n- \u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3059\u308b\u5834\u5408\n    - \u4f8b\u3048\u3070\u3001Ruby\u3067\u826f\u304f\u898b\u304b\u3051\u308b `Books.where(author: \"foo\").asc(:price).first` \u3068\u3044\u3046\u3088\u3046\u306a\u51e6\u7406\u3002Python\u304b\u3089Rails\u306eAPI\u3092\u547c\u3073\u305f\u3044\u5834\u5408\u306b\u5236\u9650\u304c\u591a\u304f\u306a\u308a\u305d\u3046\u3002\n    - \u4f55\u5ea6\u304b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u3063\u3066\u3082\u826f\u3044\u304c\u3001\u4e2d\u9593\u306e\u72b6\u614b\u3092server\u5074\u3067\u4fdd\u6301\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u306e\u304c\u6c17\u6301\u3061\u60aa\u3044\n", "tags": ["MessagePack", "messagepack-rpc", "Ruby", "Python", "matplotlib"]}