{"tags": ["Java1.8.0", "JVM1.8.0"], "context": " More than 1 year has passed since last update.\n\n\u7d50\u8ad6\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001JVM\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059\u3002\njava -XX:+PrintFlagsFinal -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions\n\n\u5c1a\u3001\u8a73\u7d30\u304c\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001\u3053\u306e\u8fba\u308a\u3092\u773a\u3081\u308b\u3068\u3088\u308a\u5177\u4f53\u7684\u306b\u5206\u304b\u308a\u307e\u3059\u3002\n\nsrc/share/vm/runtime/globals.hpp#l481\n\n\n\u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\n\n-XX:+PrintFlagsFinal\n\n\n-XX\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u6a19\u6e96\u51fa\u529b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n\n-XX:+UnlockDiagnosticVMOptions\n\n\n\u4eee\u60f3\u30de\u30b7\u30f3\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u70ba\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u4ee5\u4e0b\u306b\u793a\u3059\u30ea\u30b9\u30c8\u3067\u306f {diagnostic}\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u3063\u3066\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n-XX:+UnlockExperimentalVMOptions\n\n\n\u5c06\u6765\u30b5\u30dd\u30fc\u30c8\u4e88\u5b9a\u3067\u3042\u308b\u3082\u306e\u306e\u6a5f\u80fd\u6027\u304c\u4e0d\u5b89\u5b9a\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u6700\u5148\u7aef\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u5148\u9032\u7684\u306a\u30e6\u30fc\u30b6\u306e\u70ba\u306b\u3042\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u672c\u6765-XX\u306f\u30b5\u30dd\u30fc\u30c8\u7121\u3057\u306e\u96a0\u3057\u30aa\u30d7\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3053\u305d\u304c \u771f\u306e \u30a2\u30f3\u30b5\u30dd\u30fc\u30c6\u30c3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u4ee5\u4e0b\u306b\u793a\u3059\u30ea\u30b9\u30c8\u3067\u306f {experimental}\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u3063\u3066\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\nunix/java\nwindows/java\n\n\n\u50d5\u306e\u74b0\u5883\u306b\u3064\u3044\u3066\n> java -version\njava version \"1.8.0\"\nJava(TM) SE Runtime Environment (build 1.8.0-b132)\nJava HotSpot(TM) 64-Bit Server VM (build 25.0-b70, mixed mode)\n\n\u3067\u3059\u3002\n\n\u50d5\u306e\u74b0\u5883\u306b\u304a\u3051\u308bJVM\u30aa\u30d7\u30b7\u30e7\u30f3\u4e00\u89a7\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306f 806 \u500b\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n[Global flags]\n    uintx AdaptiveSizeDecrementScaleFactor          = 4               {product}\n    uintx AdaptiveSizeMajorGCDecayTimeScale         = 10              {product}\n    uintx AdaptiveSizePausePolicy                   = 0               {product}\n    uintx AdaptiveSizePolicyCollectionCostMargin    = 50              {product}\n    uintx AdaptiveSizePolicyInitializingSteps       = 20              {product}\n    uintx AdaptiveSizePolicyOutputInterval          = 0               {product}\n    uintx AdaptiveSizePolicyWeight                  = 10              {product}\n    uintx AdaptiveSizeThroughPutPolicy              = 0               {product}\n    uintx AdaptiveTimeWeight                        = 25              {product}\n     bool AdjustConcurrency                         = false           {product}\n     bool AggressiveOpts                            = false           {product}\n     bool AggressiveUnboxing                        = false           {C2 experimental}\n     intx AliasLevel                                = 3               {C2 product}\n     bool AlignVector                               = true            {C2 product}\n     intx AllocateInstancePrefetchLines             = 1               {product}\n     intx AllocatePrefetchDistance                  = 256             {product}\n     intx AllocatePrefetchInstr                     = 0               {product}\n     intx AllocatePrefetchLines                     = 3               {product}\n     intx AllocatePrefetchStepSize                  = 64              {product}\n     intx AllocatePrefetchStyle                     = 1               {product}\n     bool AllowJNIEnvProxy                          = false           {product}\n     bool AllowNonVirtualCalls                      = false           {product}\n     bool AllowParallelDefineClass                  = false           {product}\n     bool AllowUserSignalHandlers                   = false           {product}\n     bool AlwaysActAsServerClassMachine             = false           {product}\n     bool AlwaysCompileLoopMethods                  = false           {product}\n     bool AlwaysLockClassLoader                     = false           {product}\n     bool AlwaysPreTouch                            = false           {product}\n     bool AlwaysRestoreFPU                          = false           {product}\n     bool AlwaysTenure                              = false           {product}\n    uintx ArrayAllocatorMallocLimit                 = 4294967295      {experimental}\n     bool AssertOnSuspendWaitFailure                = false           {product}\n     bool AssumeMP                                  = false           {product}\n     intx AutoBoxCacheMax                           = 128             {C2 product}\n    uintx AutoGCSelectPauseMillis                   = 5000            {product}\n     bool AutoShutdownNMT                           = true            {diagnostic}\n     intx BCEATraceLevel                            = 0               {product}\n     intx BackEdgeThreshold                         = 100000          {pd product}\n     bool BackgroundCompilation      \n\n## \u7d50\u8ad6\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001JVM\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u95b2\u89a7\u3067\u304d\u307e\u3059\u3002\n\n    java -XX:+PrintFlagsFinal -XX:+UnlockDiagnosticVMOptions -XX:+UnlockExperimentalVMOptions\n\n\u5c1a\u3001\u8a73\u7d30\u304c\u77e5\u308a\u305f\u3044\u65b9\u306f\u3001\u3053\u306e\u8fba\u308a\u3092\u773a\u3081\u308b\u3068\u3088\u308a\u5177\u4f53\u7684\u306b\u5206\u304b\u308a\u307e\u3059\u3002\n\n* [src/share/vm/runtime/globals.hpp#l481](http://hg.openjdk.java.net/jdk8/awt/hotspot/file/5df2666e4573/src/share/vm/runtime/globals.hpp#l481)\n\n### \u30b3\u30de\u30f3\u30c9\u306e\u8aac\u660e\n\n* -XX:+PrintFlagsFinal\n    * -XX\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4e00\u89a7\u3092\u6a19\u6e96\u51fa\u529b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n* -XX:+UnlockDiagnosticVMOptions\n    * \u4eee\u60f3\u30de\u30b7\u30f3\u3092\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u3059\u308b\u70ba\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n    * \u4ee5\u4e0b\u306b\u793a\u3059\u30ea\u30b9\u30c8\u3067\u306f __{diagnostic}__\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u3063\u3066\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n* -XX:+UnlockExperimentalVMOptions\n    * \u5c06\u6765\u30b5\u30dd\u30fc\u30c8\u4e88\u5b9a\u3067\u3042\u308b\u3082\u306e\u306e\u6a5f\u80fd\u6027\u304c\u4e0d\u5b89\u5b9a\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n    * \u6700\u5148\u7aef\u306e\u6a5f\u80fd\u3092\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u5148\u9032\u7684\u306a\u30e6\u30fc\u30b6\u306e\u70ba\u306b\u3042\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n    * \u672c\u6765-XX\u306f\u30b5\u30dd\u30fc\u30c8\u7121\u3057\u306e\u96a0\u3057\u30aa\u30d7\u30b7\u30e7\u30f3\u306a\u306e\u3067\u3059\u304c\u3001\u3053\u308c\u3053\u305d\u304c __\u771f\u306e__ \u30a2\u30f3\u30b5\u30dd\u30fc\u30c6\u30c3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u3002\n    * \u4ee5\u4e0b\u306b\u793a\u3059\u30ea\u30b9\u30c8\u3067\u306f __{experimental}__\u3068\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u304c\u3053\u306e\u30d5\u30e9\u30b0\u306b\u3088\u3063\u3066\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n* [unix/java](http://docs.oracle.com/javase/8/docs/technotes/tools/unix/java.html)\n* [windows/java](http://docs.oracle.com/javase/8/docs/technotes/tools/windows/java.html)\n\n## \u50d5\u306e\u74b0\u5883\u306b\u3064\u3044\u3066\n\n    > java -version\n    java version \"1.8.0\"\n    Java(TM) SE Runtime Environment (build 1.8.0-b132)\n    Java HotSpot(TM) 64-Bit Server VM (build 25.0-b70, mixed mode)\n\n\u3067\u3059\u3002\n\n## \u50d5\u306e\u74b0\u5883\u306b\u304a\u3051\u308bJVM\u30aa\u30d7\u30b7\u30e7\u30f3\u4e00\u89a7\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306f __806__ \u500b\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n    [Global flags]\n        uintx AdaptiveSizeDecrementScaleFactor          = 4               {product}\n        uintx AdaptiveSizeMajorGCDecayTimeScale         = 10              {product}\n        uintx AdaptiveSizePausePolicy                   = 0               {product}\n        uintx AdaptiveSizePolicyCollectionCostMargin    = 50              {product}\n        uintx AdaptiveSizePolicyInitializingSteps       = 20              {product}\n        uintx AdaptiveSizePolicyOutputInterval          = 0               {product}\n        uintx AdaptiveSizePolicyWeight                  = 10              {product}\n        uintx AdaptiveSizeThroughPutPolicy              = 0               {product}\n        uintx AdaptiveTimeWeight                        = 25              {product}\n         bool AdjustConcurrency                         = false           {product}\n         bool AggressiveOpts                            = false           {product}\n         bool AggressiveUnboxing                        = false           {C2 experimental}\n         intx AliasLevel                                = 3               {C2 product}\n         bool AlignVector                               = true            {C2 product}\n         intx AllocateInstancePrefetchLines             = 1               {product}\n         intx AllocatePrefetchDistance                  = 256             {product}\n         intx AllocatePrefetchInstr                     = 0               {product}\n         intx AllocatePrefetchLines                     = 3               {product}\n         intx AllocatePrefetchStepSize                  = 64              {product}\n         intx AllocatePrefetchStyle                     = 1               {product}\n         bool AllowJNIEnvProxy                          = false           {product}\n         bool AllowNonVirtualCalls                      = false           {product}\n         bool AllowParallelDefineClass                  = false           {product}\n         bool AllowUserSignalHandlers                   = false           {product}\n         bool AlwaysActAsServerClassMachine             = false           {product}\n         bool AlwaysCompileLoopMethods                  = false           {product}\n         bool AlwaysLockClassLoader                     = false           {product}\n         bool AlwaysPreTouch                            = false           {product}\n         bool AlwaysRestoreFPU                          = false           {product}\n         bool AlwaysTenure                              = false           {product}\n        uintx ArrayAllocatorMallocLimit                 = 4294967295      {experimental}\n         bool AssertOnSuspendWaitFailure                = false           {product}\n         bool AssumeMP                                  = false           {product}\n         intx AutoBoxCacheMax                           = 128             {C2 product}\n        uintx AutoGCSelectPauseMillis                   = 5000            {product}\n         bool AutoShutdownNMT                           = true            {diagnostic}\n         intx BCEATraceLevel                            = 0               {product}\n         intx BackEdgeThreshold                         = 100000          {pd product}\n         bool BackgroundCompilation      "}