{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nBIOS\u74b0\u5883\u3084EFI\u74b0\u5883\uff0864bit\uff09\u3067BitVisor\u3092\u8d77\u52d5\u3067\u304d\u308bUSB\u30e1\u30e2\u30ea\u306e\u4f5c\u308a\u65b9\u3067\u3059\u3002\nUSB\u30e1\u30e2\u30ea\u304b\u3089\u5148\u306b\u8d77\u52d5\u3059\u308b\u8a2d\u5b9a\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001USB\u30e1\u30e2\u30ea\u3092\u5dee\u3057\u8fbc\u3080\u3060\u3051\u3067 BitVisor \u3092\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u30011\u3064\u306eUSB\u30e1\u30e2\u30ea\u3067BIOS\u74b0\u5883\u3068EFI\u74b0\u5883\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001Linux, Windows, Mac \u3067 BitVisor \u3092\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002\nUSB\u30e1\u30e2\u30ea\u306b\u3059\u308b\u3053\u3068\u3067\u30ed\u30fc\u30ab\u30eb\u30c7\u30a3\u30b9\u30af\u306e\u5909\u66f4\u304c\u4e0d\u8981\u306b\u306a\u308b\u307b\u304b\u3001\n\u5fc5\u8981\u306a\u3068\u304d\u3060\u3051BitVisor\u3092\u8d77\u52d5\u3057\u305f\u308a\u4e0d\u8981\u306a\u3068\u304d\u306b\u5916\u3057\u305f\u308a\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u6e96\u5099\n\nUSB\u30e1\u30e2\u30ea\n\u5185\u5bb9\u304c\u58ca\u308c\u3066\u3082\u3044\u3044USB\u30e1\u30e2\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u30d0\u30a4\u30ca\u30ea\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e BitVisor \u306e\u30d0\u30a4\u30ca\u30ea\uff08bitvisor.efl\uff09\u3084\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\uff08bootloaderusb, loadvmm.efi\uff09\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b9\u30af\u30ea\u30d7\u30c8\uff08install.sh\uff09\u3092\u7528\u610f\u3057\u307e\u3059\u3002\nBitVisor Advent Calendar 2015 \u306e8\u65e5\u76ee\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u65b9\u6cd5\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u8aac\u660e\u306e\u90fd\u5408\u4e0a\u3001\u4e0a\u8a18\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3042\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n$ cd\n$ cp bitvisor/bitvisor.elf .\n$ cp bitvisor/boot/loader/bootloaderusb .\n$ cp bitvisor/boot/loader/install.sh .\n$ cp bitvisor/uefi-loader/loadvmm .\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u74b0\u5883\u304c\u306a\u3044\u5834\u5408\u3084\u9762\u5012\u306a\u5834\u5408\u306f\u3001www.bitvisor.org \u306b\u304a\u3044\u3066\u3042\u308b Nightly Build \u3092\u4f7f\u3046\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n$ wget http://www.bitvisor.org/bitvisor/bitvisor.elf\n$ wget http://www.bitvisor.org/bitvisor/boot/loader/bootloaderusb\n$ wget http://www.bitvisor.org/bitvisor/boot/loader/install.sh\n$ wget http://www.bitvisor.org/bitvisor/boot/uefi-loader/loadvmm.efi\n\n\nLinux\n\n\u57fa\u672c\u7de8\n\nUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u53d6\u5f97\nUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\uff08sd?\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\ndmseg \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u305f\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u9593\u9055\u3048\u306a\u3044\u3088\u3046\u306b\u5341\u5206\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ cd /sys/block; for dev in sd?; do echo $dev:; cat $dev/device/vendor $dev/device/model; echo $(($(cat $dev/size)/2048))MiB; done; cd\n\n\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u3053\u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u304c sdb \u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u518d\u4f5c\u6210\nBIOS\u74b0\u5883\u3067\u8d77\u52d5\u3059\u308b bitvisor.elf \u3068\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\u3092\u683c\u7d0d\u3059\u308b\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\n\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u5207\u308a\u76f4\u3057\u3066\u3001\u5148\u982d\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u524d\u306b128MiB\u306e\u7a7a\u304d\u9818\u57df\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ sudo dd if=/dev/zero of=/dev/sdb bs=512 count=1\n$ sudo parted /dev/sdb mklabel msdos\n$ sudo parted /dev/sdb \"mkpart p fat32 262144s -0\"\n$ sudo mkfs.vfat -c /dev/sdb1\n\n\nEFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nFAT \u9818\u57df\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001loadvmm.efi \u3068 bitvisor.elf \u3092 EFI \u74b0\u5883\u3067\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n$ mkdir /tmp/mnt\n$ sudo mount /dev/sdb1 /tmp/mnt\n$ sudo mkdir -p /tmp/mnt/EFI/BOOT\n$ sudo cp ./loadvmm.efi /tmp/mnt/EFI/BOOT/BOOTX64.EFI\n$ sudo cp ./bitvisor.elf /tmp/mnt/EFI/BOOT/BITVISOR.ELF\n$ sudo umount /tmp/mnt\n$ rmdir /tmp/mnt\n\n\nBIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbitvisor.elf \u3068\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\uff08bootloaderusb\uff09\u3092USB\u30e1\u30e2\u30ea\u306e\u5148\u982d\u90e8\u5206\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n$ sudo ./install.sh -f /dev/sdb 0 8 ./bootloaderusb ./bitvisor.elf\n\n2\u56de\u76ee\u4ee5\u964d\u306b\u66f8\u304d\u8fbc\u3080\u3068\u304d\u306f\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n\u5f8c\u51e6\u7406\n\u5ff5\u306e\u305f\u3081 sync \u3057\u3066\u304b\u3089 eject \u3057\u307e\u3059\u3002\n$ sync\n$ eject /dev/sdb\n\n\n\u767a\u5c55\u7de8\n\u57fa\u672c\u7de8\u306e\u3084\u308a\u65b9\u3060\u3068\u3001bitvisor.elf \u304cUSB\u30e1\u30e2\u30ea\u306e\u5148\u982d\u3068FAT\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3068\u306e2\u7b87\u6240\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u7121\u99c4\u306a\u611f\u3058\u304c\u3059\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\nUSB\u30e1\u30e2\u30ea\u306e\u6e96\u5099\n\u666e\u901a\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307fUSB\u30e1\u30e2\u30ea\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\u57fa\u672c\u7de8\u3067\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u5143\u306b\u623b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n$ sudo dd if=/dev/zero of=/dev/sdb bs=512 count=1\n$ sudo parted /dev/sdb mklabel msdos\n$ sudo parted /dev/sdb \"mkpart p fat32 2048s -0\"\n$ sudo mkfs.vfat -c /dev/sdb1\n\n\n\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3001install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\ncopyelf.sh\ngetbsssize(){\n    bsssize=0\n    if ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n        grep -q '^0000000 042577 043114'\n    then\n        echo \"ELF header not found in \\`$elf'.\" >&2\n        exit 1\n    fi\n    set -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n    phoff=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n    phentsize=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n    phnum=$2\n    while test $phnum -gt 0\n    do\n        phnum=$(($phnum-1))\n        set -- $(($phoff+$phentsize*$phnum))\n        set -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        case \"$3\" in\n        1)  ;;\n        *)  continue;;\n        esac\n        set -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        set -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        bsssize=$(($bsssize+$3-$1))\n    done\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n\n{\n    cat \"$1\"\n    shift\n    if test $bsssize -ge 512\n    then\n        dd if=/dev/zero count=$(($bsssize/512))\n        bsssize=$(($bsssize%512))\n    fi\n    if test $bsssize -gt 0\n    then\n        dd if=/dev/zero bs=1 count=$bsssize\n    fi\n} | dd of=\"$device\" conv=notrunc\n\n\n\nEFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304b\u3089\u3001loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n$ mkdir /tmp/mnt\n$ sudo mount /dev/sdb1 /tmp/mnt\n$ sudo mkdir -p /tmp/mnt/EFI/BOOT\n$ sudo cp ./loadvmm.efi /tmp/mnt/EFI/BOOT/BOOTX64.EFI\n$ sudo sh copyelf.sh ./bitvisor.elf /tmp/mnt/EFI/BOOT/BITVISOR.ELF\n\n\nbitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\nbitvisor.elf \u304c\u3069\u3053\u306b\u683c\u7d0d\u3055\u308c\u305f\u304b LBA \u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n$ sudo hdparm --fibmap /tmp/mnt/EFI/BOOT/BITVISOR.ELF \n\n\u51fa\u529b\u7d50\u679c\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n/tmp/mnt/EFI/BOOT/BITVISOR.ELF:\n filesystem blocksize 512, begins at LBA 2048; assuming 512 byte sectors.\n byte_offset  begin_LBA    end_LBA    sectors\n           0       2728      49135      46408\n\nbegin_LBA \u306e\u9805\u76ee\u306b\u66f8\u3044\u3066\u3042\u308b\u5024\uff082728\uff09\u304c\u3053\u306e\u5834\u5408\u306e LBA \u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u8907\u6570\u306e\u884c\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u304d\u306f\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3046\u307e\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u30c7\u30d5\u30e9\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nBIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbitvisor.elf \u306e LBA \u306e\u5024\u3092 install.sh \u306e3\u756a\u3081\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\n$ sudo ./install.sh /dev/sdb 0 2728 ./bootloaderusb ./bitvisor.elf\n\n\n\u5f8c\u51e6\u7406\n\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001USB\u30e1\u30e2\u30ea\u3092\u629c\u304d\u307e\u3059\u3002\n$ sudo umount /tmp/mnt\n$ rmdir /tmp/mnt\n$ sync\n$ sudo eject /dev/sdb\n\n\nWindows\nBitVisor Advent Calendar 2015 \u306e8\u65e5\u76ee\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u305f\u65b9\u6cd5\u3067 MSYS2 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3042\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\nLinux\u3068\u9055\u3044\u3001\u3044\u304d\u306a\u308a\u767a\u5c55\u7de8\u3067\u3084\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f USB \u30e1\u30e2\u30ea\u306e\u30c9\u30e9\u30a4\u30d6\u540d\u306f D: \u30c9\u30e9\u30a4\u30d6\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\ncopyelf.sh\ngetbsssize(){\n    bsssize=0\n    if ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n        grep -q '^0000000 042577 043114'\n    then\n        echo \"ELF header not found in \\`$elf'.\" >&2\n        exit 1\n    fi\n    set -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n    phoff=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n    phentsize=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n    phnum=$2\n    while test $phnum -gt 0\n    do\n        phnum=$(($phnum-1))\n        set -- $(($phoff+$phentsize*$phnum))\n        set -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        case \"$3\" in\n        1)  ;;\n        *)  continue;;\n        esac\n        set -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        set -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        bsssize=$(($bsssize+$3-$1))\n    done\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n\n{\n    cat \"$1\"\n    shift\n    if test $bsssize -ge 512\n    then\n        dd if=/dev/zero count=$(($bsssize/512))\n        bsssize=$(($bsssize%512))\n    fi\n    if test $bsssize -gt 0\n    then\n        dd if=/dev/zero bs=1 count=$bsssize\n    fi\n} | dd of=\"$device\" conv=notrunc\n\n\n\nEFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u306b loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n$ mkdir -p d:/EFI/BOOT\n$ cp ./loadvmm.efi d:/EFI/BOOT/BOOTX64.EFI\n$ sh ./copyelf.sh ./bitvisor.elf d:/EFI/BOOT/BITVISOR.ELF\n\n\nbitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 getlba.c \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ngetlba.c\n#include <stdio.h>\n#include <string.h>\n#include <windows.h>\n\nint main(int argc, char *argv[])\n{\n    BOOL success = TRUE;\n    DWORD byte, spc, bps;\n    TCHAR vol[MAX_PATH], drive[] = \"\\\\\\\\.\\\\D:\", fs[MAX_PATH];\n    UCHAR bs[512];\n\n    success &= GetVolumePathName(argv[1], vol, sizeof(vol));\n    success &= GetVolumeInformation(vol, NULL, 0, NULL, NULL, NULL,\n                                    fs, sizeof(fs));\n    success &= (strncmp(fs, \"FAT\", 3) == 0);\n    drive[4] = vol[0];\n    HANDLE vhandle = CreateFile(drive, GENERIC_READ,\n                                FILE_SHARE_READ | FILE_SHARE_WRITE,\n                                NULL, OPEN_EXISTING, 0, NULL);\n    success &= ReadFile(vhandle, &bs, sizeof(bs), &byte, NULL);\n    success &= (byte == 512);\n    ULONG sz16 = *(USHORT*)&bs[22], sz32 = *(ULONG*)&bs[36];\n    ULONG sz = sz16 != 0 ? sz16 : sz32;\n    ULONG start = *(USHORT*)&bs[14] + sz * bs[16]\n        + (*(USHORT*)&bs[17] * 32) / 512;\n    HANDLE handle = CreateFile (argv[1], GENERIC_READ,\n                                FILE_SHARE_READ|FILE_SHARE_WRITE,\n                                NULL, OPEN_EXISTING, 0, NULL);\n    STARTING_VCN_INPUT_BUFFER vcn = {0};\n    RETRIEVAL_POINTERS_BUFFER rp;\n    success &= DeviceIoControl(handle, FSCTL_GET_RETRIEVAL_POINTERS,\n                               &vcn, sizeof(vcn), &rp, sizeof(rp),\n                               NULL, NULL);\n    success &= GetDiskFreeSpace(vol, &spc, &bps, NULL, NULL);\n    byte = GetFileSize(handle, NULL);\n    success &= (byte <= rp.Extents[0].NextVcn.QuadPart * spc * bps);\n    LONGLONG loff = rp.Extents[0].Lcn.QuadPart * spc * bps;\n    struct {\n        ULONG    NumberOfPhysicalOffsets;\n        struct {\n            ULONG    DiskNumber;\n            LONGLONG Offset;\n        };\n    } poff;\n    success &= DeviceIoControl(vhandle, IOCTL_VOLUME_LOGICAL_TO_PHYSICAL,\n                               &loff, sizeof(loff), &poff, sizeof(poff),\n                               NULL, NULL);\n    if (success)\n        printf(\"LBA: %d\\n\", start + poff.Offset / bps);\n}\n\n\ngcc \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001BITVISOR.ELF \u306e\u30d1\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001MSYS \u306e\u30d1\u30b9\u540d\uff08\"/d/\" \u306a\u3069\uff09\u3092\u4f7f\u308f\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n$ gcc getlba.c -o getlba\n$ ./getlba.exe d:/EFI/BOOT/BITVISOR.ELF\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u3070\u3001LBA\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070\u3001\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001getlba.c \u3092\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u7a81\u304d\u6b62\u3081\u3066\u304f\u3060\u3055\u3044\u3002\nLBA: 2728\n\n\n\u30c7\u30d0\u30a4\u30b9\u540d\u306e\u7279\u5b9a\n\u307e\u305a\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9ID\uff08\\\\.\\PhysicalDrive?\uff09\u3092\u7279\u5b9a\u3057\u307e\u3059\n$ wmic diskdrive list brief\n\n\u7d50\u679c\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001USB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9ID\u306f \\\\.\\PHYSICALDRIVE1 \u3067\u3059\u3002\nCaption                            DeviceID            Model                              Partitions  Size          \nSAMSUNG MZHPU512HCGL-00004         \\\\.\\PHYSICALDRIVE0  SAMSUNG MZHPU512HCGL-00004         3           512105932800  \nUt165 USB2FlashStorage USB Device  \\\\.\\PHYSICALDRIVE1  Ut165 USB2FlashStorage USB Device  1           1003484160    \n\n/dev \u306e\u4e0b\u306b\u3042\u308b\u30c7\u30d0\u30a4\u30b9ID\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u307e\u3059\u3002\\\\.\\PHYSICALDRIVE0 \u306a\u3089 /dev/sda\u3001\\\\.\\PHYSICALDRIVE1 \u306a\u3089 /dev/sdb \u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\u3053\u3053\u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u304c /dev/sdb \u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nBIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u7279\u5b9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3068 LBA \u3092\u6307\u5b9a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\nELF\u30d8\u30c3\u30c0\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067 -f \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308d\u3068\u8a00\u308f\u308c\u305f\u5834\u5408\u306f LBA \u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n$ ./install.sh /dev/sdb 0 2728 ./bootloaderusb ./bitvisor.elf\n\n\n\u5f8c\u51e6\u7406\nWindows \u306e Explorer \u3067USB\u30e1\u30e2\u30ea\u306e\u53d6\u308a\u5916\u3057\u51e6\u7406\u3092\u3057\u3066\u304b\u3089USB\u30e1\u30e2\u30ea\u3092\u53d6\u308a\u5916\u3057\u307e\u3059\u3002\n\nMac\n\nUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u53d6\u5f97\nUSB\u30e1\u30e2\u30ea\u3092\u633f\u3057\u307e\u3059\u3002Mac \u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u540d\u3068\u540c\u3058\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c /Volumes \u4ee5\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u3066\u3001\u305d\u3053\u306bUSB\u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u307e\u3059\u3002\n$ ls /Volumes\nBITVISOR    Macintosh HD\n\n\u3053\u3053\u3067\u306f\u3001\u30dc\u30ea\u30e5\u30fc\u30e0\u540d\u306f BITVISOR \u3067\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\u6b21\u306b\u3001\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306b df \u30b3\u30de\u30f3\u30c9\u306e\u5f15\u6570\u306b\u30de\u30a6\u30f3\u30c8\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n$ df /Volumes/BITVISOR\nFilesystem   512-blocks  Used Available Capacity iused ifree %iused  Mounted on\n/dev/disk2s1   62554112 23488  62530624     1%       0     0  100%   /Volumes/BITVISOR\n\n\"Filesystem\" \u306e\u9805\u76ee\u306b\u3042\u308b /dev/disk2s1 \u304b\u3089 s1 \u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u304c\u30c7\u30d0\u30a4\u30b9\u540d\u3067\u3059\u3002\u3053\u3053\u3067\u306f disk2 \u3068\u3057\u307e\u3059\u3002\n\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5fc5\u8981\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066USB\u30e1\u30e2\u30ea\u3092\u518d\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndiskutil eraseDisk FAT32 BITVISOR MBR disk2\n\n\n\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3092 Mac \u5411\u3051\u306b\u5c11\u3057\u4fee\u6b63\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\ncopyelf.sh\ngetbsssize(){\n    bsssize=0\n    if ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n        egrep '^0000000\\s+042577\\s+043114'\n    then\n        echo \"ELF header not found in \\`$elf'.\" >&2\n        exit 1\n    fi\n    set -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n    phoff=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n    phentsize=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n    phnum=$2\n    while test $phnum -gt 0\n    do\n        phnum=$(($phnum-1))\n        set -- $(($phoff+$phentsize*$phnum))\n        set -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        case \"$3\" in\n        1)  ;;\n        *)  continue;;\n        esac\n        set -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        set -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        bsssize=$(($bsssize+$3-$1))\n    done\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n{\n    cat \"$1\"\n    shift\n    if test $bsssize -ge 512\n    then\n        dd if=/dev/zero count=$(($bsssize/512))\n        bsssize=$(($bsssize%512))\n    fi\n    if test $bsssize -gt 0\n    then\n        dd if=/dev/zero bs=1 count=$bsssize\n    fi\n} | dd of=\"$device\" conv=notrunc\n\n\n\nEFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u306b loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n$ mkdir -p /Volumes/BITVISOR/EFI/BOOT\n$ cp ./loadvmm.efi /Volumes/BITVISOR/EFI/BOOT/BOOTX64.EFI\n$ sh ./copyelf.sh ./bitvisor.elf /Volumes/BITVISOR/EFI/BOOT/BITVISOR.ELF\n\n\nbitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 getlba.c \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ngetlba.c\n#include <stdio.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <sys/param.h>\n#include <sys/mount.h>\n\nint main(int argc, char *argv[])\n{\n    int fd, status;\n    off_t lba = 0, filesize, offset;\n    struct log2phys phys;\n    struct statfs stat;\n    char mbr[512];\n\n    fd = open(argv[1], O_RDONLY); if (fd < 0) return 1;\n    filesize = lseek(fd, 0, SEEK_END); if (filesize < 0) return 2;\n    for (offset = 0; offset < filesize; offset += 4096) {\n        offset = lseek(fd, offset, SEEK_SET); if (offset < 0) return 3;\n        status = fcntl(fd, F_LOG2PHYS, &phys); if (status < 0) return 4;\n        if (lba != 0) {\n            if (phys.l2p_devoffset - offset != lba)\n            { printf(\"fragmented\\n\"); return 5; }\n        } else\n            lba = phys.l2p_devoffset;\n    }\n\n    status = statfs(argv[1], &stat); if (status < 0) return 6;\n    stat.f_mntfromname[10] = '\\0';\n    fd = open(stat.f_mntfromname, O_RDONLY); if (fd < 0) return 7;\n    status = read(fd, mbr, sizeof(mbr)); if (status < 512) return 8;\n    offset = *(uint32_t *)&mbr[0x1c6];\n\n    printf(\"LBA: %lld\\n\", offset + lba / 512);\n}\n\n\ngcc \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001BITVISOR.ELF \u306e\u30d1\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ gcc getlba.c -o getlba\n$ sudo ./getlba /Volumes/BITVISOR/EFI/BOOT/BITVISOR.ELF\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u3070\u3001LBA\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070\u3001\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001getlba.c \u3092\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u7a81\u304d\u6b62\u3081\u3066\u304f\u3060\u3055\u3044\u3002\nLBA: 90220\n\nMac \u306e\u5834\u5408\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3059\u78ba\u7387\u304c\u9ad8\u3044\u3088\u3046\u3067\u3059\u3002\u305d\u3053\u3067\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u305f\u6642\u3060\u3051\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u305f\u6642\u306f\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u306a\u304f\u306a\u308b\u307e\u3067 bitvisor.elf \u3092\u5225\u306e\u540d\u524d\u3067\u30b3\u30d4\u30fc\u3092\u7e70\u308a\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ path=/Volumes/BITVISOR/EFI/BOOT/\n$ for i in {0..9}; do f=$path/BITVISOR${i}.ELF; sh ./copyelf.sh ./bitvisor.elf $f >& /dev/null; sudo ./getlba $f && break; done\n$ mv $f $path/BITVISOR.ELF\n$ rm $path/BITVISOR?.ELF\n\n\u6700\u7d42\u7684\u306b\u8868\u793a\u3055\u308c\u305f LBA \u3092\u899a\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\nBIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304b\u3089\u3001\u7279\u5b9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3068 LBA \u3092\u6307\u5b9a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\nELF\u30d8\u30c3\u30c0\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067 -f \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308d\u3068\u8a00\u308f\u308c\u305f\u5834\u5408\u306f LBA \u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n$ diskutil umountDisk /dev/disk2\n$ ./install.sh /dev/disk2 0 90220 ./bootloaderusb ./bitvisor.elf\n\n\n\u5f8c\u51e6\u7406\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089 USB \u30e1\u30e2\u30ea\u3092\u53d6\u308a\u5916\u3057\u307e\u3059\u3002\ndiskutil eject /dev/disk2\n\n#\u306f\u3058\u3081\u306b\nBIOS\u74b0\u5883\u3084EFI\u74b0\u5883\uff0864bit\uff09\u3067BitVisor\u3092\u8d77\u52d5\u3067\u304d\u308bUSB\u30e1\u30e2\u30ea\u306e\u4f5c\u308a\u65b9\u3067\u3059\u3002\n\nUSB\u30e1\u30e2\u30ea\u304b\u3089\u5148\u306b\u8d77\u52d5\u3059\u308b\u8a2d\u5b9a\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001USB\u30e1\u30e2\u30ea\u3092\u5dee\u3057\u8fbc\u3080\u3060\u3051\u3067 BitVisor \u3092\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u30011\u3064\u306eUSB\u30e1\u30e2\u30ea\u3067BIOS\u74b0\u5883\u3068EFI\u74b0\u5883\u306e\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001Linux, Windows, Mac \u3067 BitVisor \u3092\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002\n\nUSB\u30e1\u30e2\u30ea\u306b\u3059\u308b\u3053\u3068\u3067\u30ed\u30fc\u30ab\u30eb\u30c7\u30a3\u30b9\u30af\u306e\u5909\u66f4\u304c\u4e0d\u8981\u306b\u306a\u308b\u307b\u304b\u3001\n\u5fc5\u8981\u306a\u3068\u304d\u3060\u3051BitVisor\u3092\u8d77\u52d5\u3057\u305f\u308a\u4e0d\u8981\u306a\u3068\u304d\u306b\u5916\u3057\u305f\u308a\u304c\u7c21\u5358\u306b\u3067\u304d\u307e\u3059\u3002\n\n#\u6e96\u5099\n###USB\u30e1\u30e2\u30ea\n\u5185\u5bb9\u304c\u58ca\u308c\u3066\u3082\u3044\u3044USB\u30e1\u30e2\u30ea\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n###\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u30d0\u30a4\u30ca\u30ea\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6e08\u307f\u306e BitVisor \u306e\u30d0\u30a4\u30ca\u30ea\uff08bitvisor.efl\uff09\u3084\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\uff08bootloaderusb, loadvmm.efi\uff09\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u7528\u30b9\u30af\u30ea\u30d7\u30c8\uff08install.sh\uff09\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n[BitVisor Advent Calendar 2015](http://qiita.com/advent-calendar/2015/bitvisor) \u306e[8\u65e5\u76ee\u306e\u8a18\u4e8b](http://qiita.com/shina/items/8579d1c17962b0842431)\u306b\u66f8\u3044\u305f\u65b9\u6cd5\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u8aac\u660e\u306e\u90fd\u5408\u4e0a\u3001\u4e0a\u8a18\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30b3\u30d4\u30fc\u3057\u3066\u3042\u308b\u3053\u3068\u3068\u3057\u307e\u3059\u3002\n\n```bash\n$ cd\n$ cp bitvisor/bitvisor.elf .\n$ cp bitvisor/boot/loader/bootloaderusb .\n$ cp bitvisor/boot/loader/install.sh .\n$ cp bitvisor/uefi-loader/loadvmm .\n```\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u74b0\u5883\u304c\u306a\u3044\u5834\u5408\u3084\u9762\u5012\u306a\u5834\u5408\u306f\u3001[www.bitvisor.org](http://www.bitvisor.org) \u306b\u304a\u3044\u3066\u3042\u308b Nightly Build \u3092\u4f7f\u3046\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n\n```bash\n$ wget http://www.bitvisor.org/bitvisor/bitvisor.elf\n$ wget http://www.bitvisor.org/bitvisor/boot/loader/bootloaderusb\n$ wget http://www.bitvisor.org/bitvisor/boot/loader/install.sh\n$ wget http://www.bitvisor.org/bitvisor/boot/uefi-loader/loadvmm.efi\n```\n\n#Linux\n##\u57fa\u672c\u7de8\n###USB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u53d6\u5f97\n\nUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\uff08sd?\uff09\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\ndmseg \u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u305f\u308a\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5165\u529b\u3059\u308b\u306a\u3069\u3057\u3066\u3001\u9593\u9055\u3048\u306a\u3044\u3088\u3046\u306b\u5341\u5206\u306b\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n$ cd /sys/block; for dev in sd?; do echo $dev:; cat $dev/device/vendor $dev/device/model; echo $(($(cat $dev/size)/2048))MiB; done; cd\n```\n\n**\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002**\n\n\u3053\u3053\u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u304c sdb \u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n###\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u518d\u4f5c\u6210\n\nBIOS\u74b0\u5883\u3067\u8d77\u52d5\u3059\u308b bitvisor.elf \u3068\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\u3092\u683c\u7d0d\u3059\u308b\u9818\u57df\u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\n\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u5207\u308a\u76f4\u3057\u3066\u3001\u5148\u982d\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u306e\u524d\u306b128MiB\u306e\u7a7a\u304d\u9818\u57df\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```bash\n$ sudo dd if=/dev/zero of=/dev/sdb bs=512 count=1\n$ sudo parted /dev/sdb mklabel msdos\n$ sudo parted /dev/sdb \"mkpart p fat32 262144s -0\"\n$ sudo mkfs.vfat -c /dev/sdb1\n```\n\n###EFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nFAT \u9818\u57df\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001loadvmm.efi \u3068 bitvisor.elf \u3092 EFI \u74b0\u5883\u3067\u8d77\u52d5\u3067\u304d\u308b\u3088\u3046\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\n```bash\n$ mkdir /tmp/mnt\n$ sudo mount /dev/sdb1 /tmp/mnt\n$ sudo mkdir -p /tmp/mnt/EFI/BOOT\n$ sudo cp ./loadvmm.efi /tmp/mnt/EFI/BOOT/BOOTX64.EFI\n$ sudo cp ./bitvisor.elf /tmp/mnt/EFI/BOOT/BITVISOR.ELF\n$ sudo umount /tmp/mnt\n$ rmdir /tmp/mnt\n```\n\n###BIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nbitvisor.elf \u3068\u30d6\u30fc\u30c8\u30ed\u30fc\u30c0\uff08bootloaderusb\uff09\u3092USB\u30e1\u30e2\u30ea\u306e\u5148\u982d\u90e8\u5206\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002\n\n```bash\n$ sudo ./install.sh -f /dev/sdb 0 8 ./bootloaderusb ./bitvisor.elf\n```\n\n2\u56de\u76ee\u4ee5\u964d\u306b\u66f8\u304d\u8fbc\u3080\u3068\u304d\u306f\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n###\u5f8c\u51e6\u7406\n\u5ff5\u306e\u305f\u3081 sync \u3057\u3066\u304b\u3089 eject \u3057\u307e\u3059\u3002\n\n```bash\n$ sync\n$ eject /dev/sdb\n```\n\n##\u767a\u5c55\u7de8\n\n\u57fa\u672c\u7de8\u306e\u3084\u308a\u65b9\u3060\u3068\u3001bitvisor.elf \u304cUSB\u30e1\u30e2\u30ea\u306e\u5148\u982d\u3068FAT\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3068\u306e2\u7b87\u6240\u306b\u683c\u7d0d\u3055\u308c\u3066\u3044\u3066\u7121\u99c4\u306a\u611f\u3058\u304c\u3059\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u3092\u4e00\u3064\u306b\u307e\u3068\u3081\u3066\u307f\u307e\u3059\u3002\n\n###USB\u30e1\u30e2\u30ea\u306e\u6e96\u5099\n\n\u666e\u901a\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u6e08\u307fUSB\u30e1\u30e2\u30ea\u3092\u6e96\u5099\u3057\u307e\u3059\u3002\u57fa\u672c\u7de8\u3067\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3092\u5909\u66f4\u3057\u305f\u5834\u5408\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3057\u3066\u5143\u306b\u623b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\n$ sudo dd if=/dev/zero of=/dev/sdb bs=512 count=1\n$ sudo parted /dev/sdb mklabel msdos\n$ sudo parted /dev/sdb \"mkpart p fat32 2048s -0\"\n$ sudo mkfs.vfat -c /dev/sdb1\n```\n\n###\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f\u3001install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n```bash:copyelf.sh\ngetbsssize(){\n\tbsssize=0\n\tif ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n\t\tgrep -q '^0000000 042577 043114'\n\tthen\n\t\techo \"ELF header not found in \\`$elf'.\" >&2\n\t\texit 1\n\tfi\n\tset -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n\tphoff=$2\n\tset -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n\tphentsize=$2\n\tset -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n\tphnum=$2\n\twhile test $phnum -gt 0\n\tdo\n\t\tphnum=$(($phnum-1))\n\t\tset -- $(($phoff+$phentsize*$phnum))\n\t\tset -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tcase \"$3\" in\n\t\t1)\t;;\n\t\t*)\tcontinue;;\n\t\tesac\n\t\tset -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tset -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tbsssize=$(($bsssize+$3-$1))\n\tdone\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n\n{\n\tcat \"$1\"\n\tshift\n\tif test $bsssize -ge 512\n\tthen\n\t\tdd if=/dev/zero count=$(($bsssize/512))\n\t\tbsssize=$(($bsssize%512))\n\tfi\n\tif test $bsssize -gt 0\n\tthen\n\t\tdd if=/dev/zero bs=1 count=$bsssize\n\tfi\n} | dd of=\"$device\" conv=notrunc\n```\n\n###EFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u3092\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304b\u3089\u3001loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n```bash\n$ mkdir /tmp/mnt\n$ sudo mount /dev/sdb1 /tmp/mnt\n$ sudo mkdir -p /tmp/mnt/EFI/BOOT\n$ sudo cp ./loadvmm.efi /tmp/mnt/EFI/BOOT/BOOTX64.EFI\n$ sudo sh copyelf.sh ./bitvisor.elf /tmp/mnt/EFI/BOOT/BITVISOR.ELF\n```\n\n###bitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\n\nbitvisor.elf \u304c\u3069\u3053\u306b\u683c\u7d0d\u3055\u308c\u305f\u304b LBA \u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\n\n```bash\n$ sudo hdparm --fibmap /tmp/mnt/EFI/BOOT/BITVISOR.ELF \n```\n\n\u51fa\u529b\u7d50\u679c\u306f\u3001\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n/tmp/mnt/EFI/BOOT/BITVISOR.ELF:\n filesystem blocksize 512, begins at LBA 2048; assuming 512 byte sectors.\n byte_offset  begin_LBA    end_LBA    sectors\n           0       2728      49135      46408\n```\n\nbegin_LBA \u306e\u9805\u76ee\u306b\u66f8\u3044\u3066\u3042\u308b\u5024\uff082728\uff09\u304c\u3053\u306e\u5834\u5408\u306e LBA \u306e\u5024\u306b\u306a\u308a\u307e\u3059\u3002\n\u8907\u6570\u306e\u884c\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u304d\u306f\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u3046\u307e\u304f\u52d5\u4f5c\u3057\u307e\u305b\u3093\u3002\u30c7\u30d5\u30e9\u30b0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n###BIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nbitvisor.elf \u306e LBA \u306e\u5024\u3092 install.sh \u306e3\u756a\u3081\u306e\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n```bash\n$ sudo ./install.sh /dev/sdb 0 2728 ./bootloaderusb ./bitvisor.elf\n```\n\n###\u5f8c\u51e6\u7406\n\n\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\u3057\u3066\u3001USB\u30e1\u30e2\u30ea\u3092\u629c\u304d\u307e\u3059\u3002\n\n```bash\n$ sudo umount /tmp/mnt\n$ rmdir /tmp/mnt\n$ sync\n$ sudo eject /dev/sdb\n```\n\n# Windows\n\n[BitVisor Advent Calendar 2015](http://qiita.com/advent-calendar/2015/bitvisor) \u306e[8\u65e5\u76ee\u306e\u8a18\u4e8b](http://qiita.com/shina/items/8579d1c17962b0842431)\u306b\u66f8\u3044\u305f\u65b9\u6cd5\u3067 MSYS2 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3042\u308b\u3053\u3068\u304c\u524d\u63d0\u3067\u3059\u3002\nLinux\u3068\u9055\u3044\u3001\u3044\u304d\u306a\u308a\u767a\u5c55\u7de8\u3067\u3084\u308a\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f USB \u30e1\u30e2\u30ea\u306e\u30c9\u30e9\u30a4\u30d6\u540d\u306f D: \u30c9\u30e9\u30a4\u30d6\u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n###\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n```bash:copyelf.sh\ngetbsssize(){\n\tbsssize=0\n\tif ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n\t\tgrep -q '^0000000 042577 043114'\n\tthen\n\t\techo \"ELF header not found in \\`$elf'.\" >&2\n\t\texit 1\n\tfi\n\tset -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n\tphoff=$2\n\tset -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n\tphentsize=$2\n\tset -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n\tphnum=$2\n\twhile test $phnum -gt 0\n\tdo\n\t\tphnum=$(($phnum-1))\n\t\tset -- $(($phoff+$phentsize*$phnum))\n\t\tset -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tcase \"$3\" in\n\t\t1)\t;;\n\t\t*)\tcontinue;;\n\t\tesac\n\t\tset -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tset -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n\t\tbsssize=$(($bsssize+$3-$1))\n\tdone\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n\n{\n\tcat \"$1\"\n\tshift\n\tif test $bsssize -ge 512\n\tthen\n\t\tdd if=/dev/zero count=$(($bsssize/512))\n\t\tbsssize=$(($bsssize%512))\n\tfi\n\tif test $bsssize -gt 0\n\tthen\n\t\tdd if=/dev/zero bs=1 count=$bsssize\n\tfi\n} | dd of=\"$device\" conv=notrunc\n```\n\n###EFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u306b loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n```\n$ mkdir -p d:/EFI/BOOT\n$ cp ./loadvmm.efi d:/EFI/BOOT/BOOTX64.EFI\n$ sh ./copyelf.sh ./bitvisor.elf d:/EFI/BOOT/BITVISOR.ELF\n```\n\n###bitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\n\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 getlba.c \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:getlba.c\n#include <stdio.h>\n#include <string.h>\n#include <windows.h>\n\nint main(int argc, char *argv[])\n{\n    BOOL success = TRUE;\n    DWORD byte, spc, bps;\n    TCHAR vol[MAX_PATH], drive[] = \"\\\\\\\\.\\\\D:\", fs[MAX_PATH];\n    UCHAR bs[512];\n\n    success &= GetVolumePathName(argv[1], vol, sizeof(vol));\n    success &= GetVolumeInformation(vol, NULL, 0, NULL, NULL, NULL,\n                                    fs, sizeof(fs));\n    success &= (strncmp(fs, \"FAT\", 3) == 0);\n    drive[4] = vol[0];\n    HANDLE vhandle = CreateFile(drive, GENERIC_READ,\n                                FILE_SHARE_READ | FILE_SHARE_WRITE,\n                                NULL, OPEN_EXISTING, 0, NULL);\n    success &= ReadFile(vhandle, &bs, sizeof(bs), &byte, NULL);\n    success &= (byte == 512);\n    ULONG sz16 = *(USHORT*)&bs[22], sz32 = *(ULONG*)&bs[36];\n    ULONG sz = sz16 != 0 ? sz16 : sz32;\n    ULONG start = *(USHORT*)&bs[14] + sz * bs[16]\n        + (*(USHORT*)&bs[17] * 32) / 512;\n    HANDLE handle = CreateFile (argv[1], GENERIC_READ,\n                                FILE_SHARE_READ|FILE_SHARE_WRITE,\n                                NULL, OPEN_EXISTING, 0, NULL);\n    STARTING_VCN_INPUT_BUFFER vcn = {0};\n    RETRIEVAL_POINTERS_BUFFER rp;\n    success &= DeviceIoControl(handle, FSCTL_GET_RETRIEVAL_POINTERS,\n                               &vcn, sizeof(vcn), &rp, sizeof(rp),\n                               NULL, NULL);\n    success &= GetDiskFreeSpace(vol, &spc, &bps, NULL, NULL);\n    byte = GetFileSize(handle, NULL);\n    success &= (byte <= rp.Extents[0].NextVcn.QuadPart * spc * bps);\n    LONGLONG loff = rp.Extents[0].Lcn.QuadPart * spc * bps;\n    struct {\n        ULONG    NumberOfPhysicalOffsets;\n        struct {\n            ULONG    DiskNumber;\n            LONGLONG Offset;\n        };\n    } poff;\n    success &= DeviceIoControl(vhandle, IOCTL_VOLUME_LOGICAL_TO_PHYSICAL,\n                               &loff, sizeof(loff), &poff, sizeof(poff),\n                               NULL, NULL);\n    if (success)\n        printf(\"LBA: %d\\n\", start + poff.Offset / bps);\n}\n```\n\ngcc \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001BITVISOR.ELF \u306e\u30d1\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001MSYS \u306e\u30d1\u30b9\u540d\uff08\"/d/\" \u306a\u3069\uff09\u3092\u4f7f\u308f\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n```bash\n$ gcc getlba.c -o getlba\n$ ./getlba.exe d:/EFI/BOOT/BITVISOR.ELF\n```\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u3070\u3001LBA\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070\u3001\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001getlba.c \u3092\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u7a81\u304d\u6b62\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n```bash\nLBA: 2728\n```\n\n###\u30c7\u30d0\u30a4\u30b9\u540d\u306e\u7279\u5b9a\n\n\u307e\u305a\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9ID\uff08\\\\\\\\.\\\\PhysicalDrive?\uff09\u3092\u7279\u5b9a\u3057\u307e\u3059\n\n```bash\n$ wmic diskdrive list brief\n```\n\n\u7d50\u679c\u306f\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u5834\u5408\u3001USB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9ID\u306f \\\\\\\\.\\\\PHYSICALDRIVE1 \u3067\u3059\u3002\n\n```\nCaption                            DeviceID            Model                              Partitions  Size          \nSAMSUNG MZHPU512HCGL-00004         \\\\.\\PHYSICALDRIVE0  SAMSUNG MZHPU512HCGL-00004         3           512105932800  \nUt165 USB2FlashStorage USB Device  \\\\.\\PHYSICALDRIVE1  Ut165 USB2FlashStorage USB Device  1           1003484160    \n```\n\n/dev \u306e\u4e0b\u306b\u3042\u308b\u30c7\u30d0\u30a4\u30b9ID\u306b\u5bfe\u5fdc\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u898b\u3064\u3051\u307e\u3059\u3002\\\\\\\\.\\\\PHYSICALDRIVE0 \u306a\u3089 /dev/sda\u3001\\\\\\\\.\\\\PHYSICALDRIVE1 \u306a\u3089 /dev/sdb \u306b\u306a\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3053\u3053\u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u304c /dev/sdb \u3067\u3042\u308b\u3068\u4eee\u5b9a\u3057\u307e\u3059\u3002\n\n**\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002**\n\n###BIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u7279\u5b9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3068 LBA \u3092\u6307\u5b9a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\nELF\u30d8\u30c3\u30c0\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067 -f \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308d\u3068\u8a00\u308f\u308c\u305f\u5834\u5408\u306f LBA \u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n```bash\n$ ./install.sh /dev/sdb 0 2728 ./bootloaderusb ./bitvisor.elf\n```\n\n###\u5f8c\u51e6\u7406\n\nWindows \u306e Explorer \u3067USB\u30e1\u30e2\u30ea\u306e\u53d6\u308a\u5916\u3057\u51e6\u7406\u3092\u3057\u3066\u304b\u3089USB\u30e1\u30e2\u30ea\u3092\u53d6\u308a\u5916\u3057\u307e\u3059\u3002\n\n#Mac\n###USB\u30e1\u30e2\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u540d\u53d6\u5f97\nUSB\u30e1\u30e2\u30ea\u3092\u633f\u3057\u307e\u3059\u3002Mac \u3067\u306fUSB\u30e1\u30e2\u30ea\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u540d\u3068\u540c\u3058\u540d\u524d\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c /Volumes \u4ee5\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u3066\u3001\u305d\u3053\u306bUSB\u30e1\u30e2\u30ea\u306e\u5185\u5bb9\u304c\u30de\u30a6\u30f3\u30c8\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ ls /Volumes\nBITVISOR\tMacintosh HD\n```\n\n\u3053\u3053\u3067\u306f\u3001\u30dc\u30ea\u30e5\u30fc\u30e0\u540d\u306f BITVISOR \u3067\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\n\u6b21\u306b\u3001\u30c7\u30d0\u30a4\u30b9\u540d\u3092\u7279\u5b9a\u3057\u307e\u3059\u3002\u6b21\u306e\u3088\u3046\u306b df \u30b3\u30de\u30f3\u30c9\u306e\u5f15\u6570\u306b\u30de\u30a6\u30f3\u30c8\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```bash\n$ df /Volumes/BITVISOR\nFilesystem   512-blocks  Used Available Capacity iused ifree %iused  Mounted on\n/dev/disk2s1   62554112 23488  62530624     1%       0     0  100%   /Volumes/BITVISOR\n```\n\n\"Filesystem\" \u306e\u9805\u76ee\u306b\u3042\u308b /dev/disk2s1 \u304b\u3089 s1 \u3092\u53d6\u308a\u9664\u3044\u305f\u3082\u306e\u304c\u30c7\u30d0\u30a4\u30b9\u540d\u3067\u3059\u3002\u3053\u3053\u3067\u306f disk2 \u3068\u3057\u307e\u3059\u3002\n\n**\u30c7\u30d0\u30a4\u30b9\u540d\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u30b7\u30b9\u30c6\u30e0\u3092\u7834\u58ca\u3059\u308b\u5371\u967a\u6027\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u5341\u5206\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002**\n\n\u5fc5\u8981\u306a\u3089\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066USB\u30e1\u30e2\u30ea\u3092\u518d\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash\ndiskutil eraseDisk FAT32 BITVISOR MBR disk2\n```\n\n###\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210\n\nbitvisor.elf \u3092\u30b3\u30d4\u30fc\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092 copyelf.sh \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3053\u308c\u306f install.sh \u304b\u3089\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3092 Mac \u5411\u3051\u306b\u5c11\u3057\u4fee\u6b63\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n```bash:copyelf.sh\ngetbsssize(){\n    bsssize=0\n    if ! dd if=\"$elf\" bs=1 skip=0 count=4 | od |\n        egrep '^0000000\\s+042577\\s+043114'\n    then\n        echo \"ELF header not found in \\`$elf'.\" >&2\n        exit 1\n    fi\n    set -- $(dd if=\"$elf\" bs=1 skip=28 count=4 | od -i)\n    phoff=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=42 count=2 | od -i)\n    phentsize=$2\n    set -- $(dd if=\"$elf\" bs=1 skip=44 count=2 | od -i)\n    phnum=$2\n    while test $phnum -gt 0\n    do\n        phnum=$(($phnum-1))\n        set -- $(($phoff+$phentsize*$phnum))\n        set -- $(($1+16)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        case \"$3\" in\n        1)  ;;\n        *)  continue;;\n        esac\n        set -- $(($1+4)) $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        set -- \"$3\" $(dd if=\"$elf\" bs=1 skip=$1 count=4 | od -i)\n        bsssize=$(($bsssize+$3-$1))\n    done\n}\n\nelf=$1\ndevice=$2\n\ngetbsssize\n{\n    cat \"$1\"\n    shift\n    if test $bsssize -ge 512\n    then\n        dd if=/dev/zero count=$(($bsssize/512))\n        bsssize=$(($bsssize%512))\n    fi\n    if test $bsssize -gt 0\n    then\n        dd if=/dev/zero bs=1 count=$bsssize\n    fi\n} | dd of=\"$device\" conv=notrunc\n```\n\n###EFI\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066FAT\u9818\u57df\u306b loadvmm.efi \u3068 bitvisor.elf \u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\n```\n$ mkdir -p /Volumes/BITVISOR/EFI/BOOT\n$ cp ./loadvmm.efi /Volumes/BITVISOR/EFI/BOOT/BOOTX64.EFI\n$ sh ./copyelf.sh ./bitvisor.elf /Volumes/BITVISOR/EFI/BOOT/BITVISOR.ELF\n```\n\n###bitvisor.elf \u306e\u5834\u6240\uff08LBA\uff09\u306e\u7279\u5b9a\n\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 getlba.c \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:getlba.c\n#include <stdio.h>\n#include <unistd.h>\n#include <fcntl.h>\n#include <sys/param.h>\n#include <sys/mount.h>\n\nint main(int argc, char *argv[])\n{\n    int fd, status;\n    off_t lba = 0, filesize, offset;\n    struct log2phys phys;\n    struct statfs stat;\n    char mbr[512];\n\n    fd = open(argv[1], O_RDONLY); if (fd < 0) return 1;\n    filesize = lseek(fd, 0, SEEK_END); if (filesize < 0) return 2;\n    for (offset = 0; offset < filesize; offset += 4096) {\n        offset = lseek(fd, offset, SEEK_SET); if (offset < 0) return 3;\n        status = fcntl(fd, F_LOG2PHYS, &phys); if (status < 0) return 4;\n        if (lba != 0) {\n            if (phys.l2p_devoffset - offset != lba)\n            { printf(\"fragmented\\n\"); return 5; }\n        } else\n            lba = phys.l2p_devoffset;\n    }\n\n    status = statfs(argv[1], &stat); if (status < 0) return 6;\n    stat.f_mntfromname[10] = '\\0';\n    fd = open(stat.f_mntfromname, O_RDONLY); if (fd < 0) return 7;\n    status = read(fd, mbr, sizeof(mbr)); if (status < 512) return 8;\n    offset = *(uint32_t *)&mbr[0x1c6];\n    \n    printf(\"LBA: %lld\\n\", offset + lba / 512);\n}\n```\n\ngcc \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u3001BITVISOR.ELF \u306e\u30d1\u30b9\u540d\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\n$ gcc getlba.c -o getlba\n$ sudo ./getlba /Volumes/BITVISOR/EFI/BOOT/BITVISOR.ELF\n```\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u306a\u3051\u308c\u3070\u3001LBA\u306e\u5024\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070\u3001\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001getlba.c \u3092\u9069\u5f53\u306b\u66f8\u304d\u63db\u3048\u3066\u30a8\u30e9\u30fc\u306e\u539f\u56e0\u3092\u7a81\u304d\u6b62\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n```bash\nLBA: 90220\n```\nMac \u306e\u5834\u5408\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u3053\u3059\u78ba\u7387\u304c\u9ad8\u3044\u3088\u3046\u3067\u3059\u3002\u305d\u3053\u3067\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u305f\u6642\u3060\u3051\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u305f\u6642\u306f\u3001\u30d5\u30e9\u30b0\u30e1\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8d77\u304d\u306a\u304f\u306a\u308b\u307e\u3067 bitvisor.elf \u3092\u5225\u306e\u540d\u524d\u3067\u30b3\u30d4\u30fc\u3092\u7e70\u308a\u8fd4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u4f8b\u3048\u3070\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\n$ path=/Volumes/BITVISOR/EFI/BOOT/\n$ for i in {0..9}; do f=$path/BITVISOR${i}.ELF; sh ./copyelf.sh ./bitvisor.elf $f >& /dev/null; sudo ./getlba $f && break; done\n$ mv $f $path/BITVISOR.ELF\n$ rm $path/BITVISOR?.ELF\n```\n\u6700\u7d42\u7684\u306b\u8868\u793a\u3055\u308c\u305f LBA \u3092\u899a\u3048\u3066\u304a\u304d\u307e\u3059\u3002\n\n###BIOS\u74b0\u5883\u306e\u305f\u3081\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u30a2\u30f3\u30de\u30a6\u30f3\u30c8\u3057\u3066\u304b\u3089\u3001\u7279\u5b9a\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u540d\u3068 LBA \u3092\u6307\u5b9a\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\u65e2\u306b bitvisor.elf \u304c\u66f8\u304d\u8fbc\u307e\u308c\u3066\u3044\u308b\u3068\u3053\u308d\u306b\u4e0a\u66f8\u304d\u3059\u308b\u306e\u3067\u3001-f \u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u4e0d\u8981\u3067\u3059\u3002\nELF\u30d8\u30c3\u30c0\u304c\u898b\u3064\u304b\u3089\u306a\u3044\u306e\u3067 -f \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u308d\u3068\u8a00\u308f\u308c\u305f\u5834\u5408\u306f LBA \u304c\u9593\u9055\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n```bash\n$ diskutil umountDisk /dev/disk2\n$ ./install.sh /dev/disk2 0 90220 ./bootloaderusb ./bitvisor.elf\n```\n\n###\u5f8c\u51e6\u7406\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304b\u3089 USB \u30e1\u30e2\u30ea\u3092\u53d6\u308a\u5916\u3057\u307e\u3059\u3002\n\n```bash\ndiskutil eject /dev/disk2\n```\n\n", "tags": ["BitVisor", "installation"]}