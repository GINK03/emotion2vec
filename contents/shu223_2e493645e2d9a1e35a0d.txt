{"tags": ["Metal", "iOS", "Swift", "\u753b\u50cf\u51e6\u7406", "\u6a5f\u68b0\u5b66\u7fd2"], "context": "Metal\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u6d3b\u304d\u308b\u4f8b\u3068\u3057\u3066\u306f\u3001\u52d5\u753b\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406\u3067\u3059\u3002\u52d5\u753b\u64ae\u5f71\u4e2d\u306b30fps\u306a\u308a60fps\u306a\u308a\u3067\u6e21\u3055\u308c\u3066\u304f\u308b\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092Metal\u3067\u753b\u50cf\u51e6\u7406\u3057\u3001Metal\u3067\u63cf\u753b\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u308a\u307e\u3059\u3002\n\n\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b\n\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u3059\u308b\u5b9f\u88c5\u306f\u3001\u4f55\u3082\u65b0\u3057\u3044\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u3002AVFoundation\u306eAVCaptureSession\u3092\u7528\u3044\u308b\u304a\u306a\u3058\u307f\u306e\u3082\u306e\u3067\u3059\u3002iOS-10-Sampler\u306b\u3082\u305d\u3046\u3044\u3046\u5b9f\u88c5\u304c\u3042\u308b\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\u95a2\u9023\uff1a\n\niOS\u3067\u306e\u52d5\u753b\u51e6\u7406\u306b\u304a\u3051\u308b\u300c\u56de\u8ee2\u300d\u300c\u5411\u304d\u300d\u306e\u53d6\u308a\u6271\u3044\u3067\u3082\u3046\u6df7\u4e71\u3057\u305f\u304f\u306a\u3044 - Qiita\nAV Foundation\u3067240fps\u30b9\u30ed\u30fc\u30e2\u30fc\u30b7\u30e7\u30f3\u52d5\u753b\u64ae\u5f71\u3092\u5b9f\u88c5\u3059\u308b - Qiita\n\nAVCaptureVideoDataOutputSampleBufferDelegate \u30d7\u30ed\u30c8\u30b3\u30eb\u306e captureOutput:didOutputSampleBuffer:fromConnection: \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u304cCMSampleBuffer \u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u304d\u307e\u3059\u3002\nfunc captureOutput(_ captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!)\n\n\u3053\u3053\u304b\u3089 CMSampleBufferGetImageBuffer() \u3092\u7528\u3044\u3066\u3001 CVImageBuffer (CVPixelBuffer)\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\nlet imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer)\n\n\u3053\u3053\u307e\u3067\u306fiOS\u30c7\u30d0\u30a4\u30b9\u3067\u30ab\u30e1\u30e9\u5165\u529b\u306b\u5bfe\u3057\u3066\u4f55\u304b\u3084\u308a\u305f\u3044\u3068\u304d\u306b\u306f\u5fc5\u305a\u901a\u308b\u3001\u304a\u306a\u3058\u307f\u306e\u624b\u9806\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nCVImageBuffer -> MTLTexture\n\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3067\u3001Metal\u3067\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u3001 CVImageBuffer (CVPixelBuffer) \u304b\u3089MTLTexture\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n1.CVMetalTextureCache\u3092\u751f\u6210\n\u307e\u305a\u3001CVMetalTextureCache\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(Swift)\nvar textureCache : CVMetalTextureCache?\n\nCVMetalTextureCacheCreate(kCFAllocatorDefault, nil, device, nil, &textureCache)\n\n(ObjC)\nCVMetalTextureCacheRef textureCache;\n\nCVMetalTextureCacheCreate(kCFAllocatorDefault,\n                          nil,\n                          device,\n                          nil,\n                          &textureCache);\n\n\uff08device\u306fMTLDevice\uff09\nCVMetalTextureCache\u306f\u3001CVMetalTexture\u578b\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u751f\u6210\u30fb\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u4ee5\u4e0b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3088\u308a\u5f15\u7528\u3002\n\nA CoreVideo Metal texture cache creates and manages CVMetalTexture textures. You use a CVMetalTextureCache object to directly read from or write to GPU-based CoreVideo image buffers in rendering or GPU compute tasks that use the Metal framework. \n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3064\u304f\u308b\u305f\u3073\u306b\u751f\u6210\u3057\u306a\u304a\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n2. CVImageBuffer -> CVMetalTexture\n\u3053\u3053\u304b\u3089\u306f\u3001\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\uff08CMSampleBuffer\uff09\u3092\u5f97\u308b\u305f\u3073\u306b\u884c\u3046\u51e6\u7406\u3067\u3059\u3002\nCVMetalTextureCache\u3092\u7528\u3044\u3066\u3001 CVImageBuffer \u304b\u3089\u3001 CVMetalTexture \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nswift\nlet width = CVPixelBufferGetWidth(imageBuffer)\nlet height = CVPixelBufferGetHeight(imageBuffer)\n\nvar imageTexture: CVMetalTexture?\n\nlet result = CVMetalTextureCacheCreateTextureFromImage(kCFAllocatorDefault, textureCache, imageBuffer, nil, pixelFormat, width, height, 0, &imageTexture)\n\n\n\nobjc\nCVMetalTextureRef imageTexture;\nCVReturn result = CVMetalTextureCacheCreateTextureFromImage(kCFAllocatorDefault,\n                                                            textureCache,\n                                                            imageBuffer,\n                                                            nil,\n                                                            MTLPixelFormatBGRA8Unorm,\n                                                            width, height, 0,\n                                                            &imageTexture);\n\n\n\u6210\u529f\u3059\u308c\u3070\u3001\u623b\u308a\u5024\u306f kCVReturnSuccess \u3068\u306a\u308a\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001CVMetalTexture\u3068\u306f\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u300cMetal\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306etexture-based\u306a\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u300d\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\nA texture-based image buffer that supplies source image data for use with the Metal framework.\n\n\n3. CVMetalTexture -> MTLTexture\n\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u304b\u3089\u3001MTLTexture \u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\nswift\nlet texture = CVMetalTextureGetTexture(imageTexture)\n\n\n\nobjc\nid<MTLTexture> texture = CVMetalTextureGetTexture(imageTexture);\nCFRelease(imageTexture);\n\n\nObjective-C\u306e\u5834\u5408\u306f\u660e\u793a\u7684\u306bCVMetalTexture\u3092\u89e3\u653e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3002\n\nMTLTexture -> Metal\u3067\u51e6\u7406\nMetal\u306e\u30b7\u30a7\u30fc\u30c0\u3067\u4f55\u304b\u3057\u3089\u306e\u51e6\u7406\u3092\u884c\u3046\u8a71\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3001\n\nMetal\u30b7\u30a7\u30fc\u30c0\u3053\u3068\u306f\u3058\u3081 - WebGL/GLSL\u306e\u8c4a\u5bcc\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u3059\u308b - Qiita\nMetal\u30b7\u30a7\u30fc\u30c0\u3067SceneKit\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u63cf\u753b\u3059\u308b - Qiita\n\n\u307e\u305f\u3001Metal Performance Shaders\u3067\u30ea\u30b5\u30a4\u30ba\u3084\u30d6\u30e9\u30fc\u51e6\u7406\u3092\u884c\u3046\u8a71\u306f\u3053\u3061\u3089\u306b\u3001\n\nMetal\u3067\u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b - Qiita\nMetal\u9006\u5f15\u304d\u30ec\u30b7\u30d4 - Qiita\n\nMTLTexture\u306b\u5bfe\u3057\u3066\uff08Metal\u3067\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\uff09Core Image\u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046\u8a71\u306f\u4e0b\u8a18\u8a18\u4e8b\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\nMetal\u306e\u6069\u6075\u306f\u53d7\u3051\u3064\u3064Core Image\u3067\u300c\u624b\u8efd\u306b\u300d\u753b\u50cf\u51e6\u7406 - Qiita\n\n\nMTLTexture -> MTKView\u3067\u8868\u793a\uff08\u63cf\u753b)\nMTLTexture\u3092MTKView\u3067\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u8a18\u4e8b\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\nMetal\u3067UIImageView\u30e9\u30a4\u30af\u306b\u753b\u50cf\u3092\u8868\u793a\u3059\u308b - \u6700\u5c0f\u5b9f\u88c5\u7de8 - Qiita\n\n\n\u51fa\u6765\u4e0a\u304c\u308a\n\uff08AnimatedGIF\u3092\u8f09\u305b\u308b\u4e88\u5b9a\uff09\n\n\u4eca\u5f8c\u306e\u5c55\u671b\n\u3053\u306e\u3078\u3093\u306e\u77e5\u898b\u306f\u3001Metal Performance Shaders\u3067\u306eCNN\u3092\u4f7f\u3046\u969b\u306b\u3082\u6d3b\u304d\u3066\u304f\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n\niOS 10\u306e\u65b0\u6a5f\u80fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u96c6\u300ciOS 10 Sampler\u300d - Qiita\n\n\u8fd1\u65e5\u4e2d\u306b\u8a18\u4e8b\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\nMetal\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u304c\u308f\u304b\u308a\u3084\u3059\u304f\u6d3b\u304d\u308b\u4f8b\u3068\u3057\u3066\u306f\u3001\u52d5\u753b\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u51e6\u7406\u3067\u3059\u3002\u52d5\u753b\u64ae\u5f71\u4e2d\u306b**30fps\u306a\u308a60fps\u306a\u308a\u3067\u6e21\u3055\u308c\u3066\u304f\u308b\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092Metal\u3067\u753b\u50cf\u51e6\u7406\u3057\u3001Metal\u3067\u63cf\u753b\u3059\u308b**\u3001\u3068\u3044\u3046\u3053\u3068\u3092\u3084\u308a\u307e\u3059\u3002\n\n\n##\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092\u53d6\u5f97\u3059\u308b\n\n\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u53d7\u3051\u53d6\u308b\u3088\u3046\u306b\u3059\u308b\u5b9f\u88c5\u306f\u3001\u4f55\u3082\u65b0\u3057\u3044\u3053\u3068\u306f\u306a\u3044\u306e\u3067\u3053\u3053\u3067\u306f\u7701\u7565\u3057\u307e\u3059\u3002AVFoundation\u306e`AVCaptureSession`\u3092\u7528\u3044\u308b\u304a\u306a\u3058\u307f\u306e\u3082\u306e\u3067\u3059\u3002[iOS-10-Sampler](https://github.com/shu223/iOS-10-Sampler)\u306b\u3082\u305d\u3046\u3044\u3046\u5b9f\u88c5\u304c\u3042\u308b\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u95a2\u9023\uff1a\n\n- [iOS\u3067\u306e\u52d5\u753b\u51e6\u7406\u306b\u304a\u3051\u308b\u300c\u56de\u8ee2\u300d\u300c\u5411\u304d\u300d\u306e\u53d6\u308a\u6271\u3044\u3067\u3082\u3046\u6df7\u4e71\u3057\u305f\u304f\u306a\u3044 - Qiita](http://qiita.com/shu223/items/057351d41229861251af)\n- [AV Foundation\u3067240fps\u30b9\u30ed\u30fc\u30e2\u30fc\u30b7\u30e7\u30f3\u52d5\u753b\u64ae\u5f71\u3092\u5b9f\u88c5\u3059\u308b - Qiita](http://qiita.com/shu223/items/51f764101e6fd5c2161b)\n\n\n`AVCaptureVideoDataOutputSampleBufferDelegate` \u30d7\u30ed\u30c8\u30b3\u30eb\u306e ` captureOutput:didOutputSampleBuffer:fromConnection:` \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\u304c`CMSampleBuffer` \u3068\u3057\u3066\u6e21\u3055\u308c\u3066\u304d\u307e\u3059\u3002\n\n```swift\nfunc captureOutput(_ captureOutput: AVCaptureOutput!, didOutputSampleBuffer sampleBuffer: CMSampleBuffer!, from connection: AVCaptureConnection!)\n```\n\n\u3053\u3053\u304b\u3089 `CMSampleBufferGetImageBuffer()` \u3092\u7528\u3044\u3066\u3001 `CVImageBuffer` (`CVPixelBuffer`)\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\n```swift\nlet imageBuffer = CMSampleBufferGetImageBuffer(sampleBuffer)\n```\n\n\u3053\u3053\u307e\u3067\u306f**iOS\u30c7\u30d0\u30a4\u30b9\u3067\u30ab\u30e1\u30e9\u5165\u529b\u306b\u5bfe\u3057\u3066\u4f55\u304b\u3084\u308a\u305f\u3044\u3068\u304d\u306b\u306f\u5fc5\u305a\u901a\u308b\u3001\u304a\u306a\u3058\u307f\u306e\u624b\u9806**\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n##CVImageBuffer -> MTLTexture\n\n\u3053\u3053\u304b\u3089\u304c\u672c\u756a\u3067\u3001Metal\u3067\u51e6\u7406\u3059\u308b\u305f\u3081\u306b\u3001 `CVImageBuffer` (`CVPixelBuffer`) \u304b\u3089MTLTexture\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n###1.`CVMetalTextureCache`\u3092\u751f\u6210\n \n\u307e\u305a\u3001`CVMetalTextureCache`\u3092\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n(Swift)\n\n```swift\nvar textureCache : CVMetalTextureCache?\n```\n\n```swift\nCVMetalTextureCacheCreate(kCFAllocatorDefault, nil, device, nil, &textureCache)\n```\n\n(ObjC)\n\n```objc\nCVMetalTextureCacheRef textureCache;\n```\n\n```objc\nCVMetalTextureCacheCreate(kCFAllocatorDefault,\n                          nil,\n                          device,\n                          nil,\n                          &textureCache);\n```\n\n\n\uff08`device`\u306f`MTLDevice`\uff09\n\n`CVMetalTextureCache`\u306f\u3001**`CVMetalTexture`\u578b\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u751f\u6210\u30fb\u7ba1\u7406**\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u4ee5\u4e0b\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3088\u308a\u5f15\u7528\u3002\n\n> A CoreVideo Metal texture cache creates and manages CVMetalTexture textures. You use a CVMetalTextureCache object to directly read from or write to GPU-based CoreVideo image buffers in rendering or GPU compute tasks that use the Metal framework. \n\n\u30c6\u30af\u30b9\u30c1\u30e3\u3092\u3064\u304f\u308b\u305f\u3073\u306b\u751f\u6210\u3057\u306a\u304a\u3059\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n###2. CVImageBuffer -> CVMetalTexture\n\n\u3053\u3053\u304b\u3089\u306f\u3001\u30ab\u30e1\u30e9\u304b\u3089\u306e\u5165\u529b\uff08CMSampleBuffer\uff09\u3092\u5f97\u308b\u305f\u3073\u306b\u884c\u3046\u51e6\u7406\u3067\u3059\u3002\n\n`CVMetalTextureCache`\u3092\u7528\u3044\u3066\u3001 `CVImageBuffer` \u304b\u3089\u3001 `CVMetalTexture` \u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```swift:swift\nlet width = CVPixelBufferGetWidth(imageBuffer)\nlet height = CVPixelBufferGetHeight(imageBuffer)\n    \nvar imageTexture: CVMetalTexture?\n    \nlet result = CVMetalTextureCacheCreateTextureFromImage(kCFAllocatorDefault, textureCache, imageBuffer, nil, pixelFormat, width, height, 0, &imageTexture)\n```\n\n```objc:objc\nCVMetalTextureRef imageTexture;\nCVReturn result = CVMetalTextureCacheCreateTextureFromImage(kCFAllocatorDefault,\n                                                            textureCache,\n                                                            imageBuffer,\n                                                            nil,\n                                                            MTLPixelFormatBGRA8Unorm,\n                                                            width, height, 0,\n                                                            &imageTexture);\n```\n\n\u6210\u529f\u3059\u308c\u3070\u3001\u623b\u308a\u5024\u306f `kCVReturnSuccess` \u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001`CVMetalTexture`\u3068\u306f\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u3068\u3044\u3046\u3068\u3001\u300cMetal\u3067\u5229\u7528\u3059\u308b\u305f\u3081\u306etexture-based\u306a\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u300d\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n> A texture-based image buffer that supplies source image data for use with the Metal framework.\n\n###3. CVMetalTexture -> MTLTexture\n\n\u30a4\u30e1\u30fc\u30b8\u30d0\u30c3\u30d5\u30a1\u304b\u3089\u3001`MTLTexture` \u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n\n```swift:swift\nlet texture = CVMetalTextureGetTexture(imageTexture)\n```\n\n```objc:objc\nid<MTLTexture> texture = CVMetalTextureGetTexture(imageTexture);\nCFRelease(imageTexture);\n```\n\n**Objective-C\u306e\u5834\u5408\u306f\u660e\u793a\u7684\u306bCVMetalTexture\u3092\u89e3\u653e**\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3002\n\n##MTLTexture -> Metal\u3067\u51e6\u7406\n\n**Metal\u306e\u30b7\u30a7\u30fc\u30c0**\u3067\u4f55\u304b\u3057\u3089\u306e\u51e6\u7406\u3092\u884c\u3046\u8a71\u306f\u4ee5\u4e0b\u306e\u8a18\u4e8b\u306b\u3001\n\n- [Metal\u30b7\u30a7\u30fc\u30c0\u3053\u3068\u306f\u3058\u3081 - WebGL/GLSL\u306e\u8c4a\u5bcc\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u53c2\u8003\u306b\u3059\u308b - Qiita](http://qiita.com/shu223/items/dd5a53b8c291abe30fc2)\n- [Metal\u30b7\u30a7\u30fc\u30c0\u3067SceneKit\u306e\u30de\u30c6\u30ea\u30a2\u30eb\u3092\u63cf\u753b\u3059\u308b - Qiita](http://qiita.com/shu223/items/b5729fdf1d95721d07b7)\n\n\u307e\u305f\u3001**Metal Performance Shaders\u3067\u30ea\u30b5\u30a4\u30ba\u3084\u30d6\u30e9\u30fc**\u51e6\u7406\u3092\u884c\u3046\u8a71\u306f\u3053\u3061\u3089\u306b\u3001\n\n- [Metal\u3067\u753b\u50cf\u3092\u30ea\u30b5\u30a4\u30ba\u3059\u308b - Qiita](http://qiita.com/shu223/items/19ac718dcd561a891689)\n- [Metal\u9006\u5f15\u304d\u30ec\u30b7\u30d4 - Qiita](http://qiita.com/shu223/items/7ed4efd54d03f0babbe0)\n\nMTLTexture\u306b\u5bfe\u3057\u3066**\uff08Metal\u3067\u30b7\u30fc\u30e0\u30ec\u30b9\u306b\uff09Core Image\u3067\u753b\u50cf\u51e6\u7406**\u3092\u884c\u3046\u8a71\u306f\u4e0b\u8a18\u8a18\u4e8b\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\n- [Metal\u306e\u6069\u6075\u306f\u53d7\u3051\u3064\u3064Core Image\u3067\u300c\u624b\u8efd\u306b\u300d\u753b\u50cf\u51e6\u7406 - Qiita](http://qiita.com/shu223/items/4c0f8073477f787e1627)\n\n\n##MTLTexture -> MTKView\u3067\u8868\u793a\uff08\u63cf\u753b)\n\nMTLTexture\u3092MTKView\u3067\u63cf\u753b\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u8a18\u4e8b\u306b\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n- [Metal\u3067UIImageView\u30e9\u30a4\u30af\u306b\u753b\u50cf\u3092\u8868\u793a\u3059\u308b - \u6700\u5c0f\u5b9f\u88c5\u7de8 - Qiita](http://qiita.com/shu223/items/3301a1e64757c0bd73ef)\n\n\n##\u51fa\u6765\u4e0a\u304c\u308a\n\n\uff08AnimatedGIF\u3092\u8f09\u305b\u308b\u4e88\u5b9a\uff09\n\n##\u4eca\u5f8c\u306e\u5c55\u671b\n\n\u3053\u306e\u3078\u3093\u306e\u77e5\u898b\u306f\u3001Metal Performance Shaders\u3067\u306eCNN\u3092\u4f7f\u3046\u969b\u306b\u3082\u6d3b\u304d\u3066\u304f\u308b\u4e88\u5b9a\u3067\u3059\u3002\n\n![](https://github.com/shu223/iOS-10-Sampler/blob/master/README_resources/imagerecog.gif?raw=true)\n\n- [iOS 10\u306e\u65b0\u6a5f\u80fd\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u96c6\u300ciOS 10 Sampler\u300d - Qiita](http://qiita.com/shu223/items/f371655c2b101f1b0218)\n\n\u8fd1\u65e5\u4e2d\u306b\u8a18\u4e8b\u3092\u66f8\u304f\u4e88\u5b9a\u3067\u3059\u3002\n\n"}