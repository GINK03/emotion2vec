{"context": " More than 1 year has passed since last update.\n\nCodeIQ \u306e\u554f\u984c\u3092\u89e3\u304f (2)\n\u6628\u65e5\u306b\u5f15\u304d\u7d9a\u304d CodeIQ \u306b\u63b2\u8f09\u3055\u308c\u305f\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\u300c\u6a5f\u68b0\u5b66\u7fd2\u57fa\u790e\u300d\u7c21\u5358\u306a\u554f\u984c\u3092\u89e3\u3044\u3066\u7406\u89e3\u3057\u3088\u3046\uff01\u524d\u7bc7\nhttp://next.rikunabi.com/tech/docs/ct_s03600.jsp?p=002315\n\u4eca\u65e5\u306f\u7b2c 2 \u554f\u3092\u89e3\u304d\u307e\u3059\u3002\n\n\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n\u554f\u984c\n\u6d77\u8cca\u8239\u3067\u50ac\u3055\u308c\u305fPRML\u8aad\u66f8\u4f1a\u306f\u697d\u3057\u304b\u3063\u305f\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u4e8b\u3082\u5c11\u3057\u306f\u308f\u304b\u3063\u305f\u6c17\u304c\u3059\u308b\u3057\u3001\u91d1\u8ca8\u3082\u6ca2\u5c71\u8cb0\u3048\u305f\u3002\u507d\u91d1\u8ca8\u3082\u305a\u3044\u3076\u3093\u6df7\u3056\u3063\u3066\u3044\u305f\u304c\u3002\n\u672c\u7269\u3068\u308f\u304b\u3063\u305f\u91d1\u8ca8\u3092\u4f55\u679a\u304b\u8cb4\u91d1\u5c5e\u5e97\u3067\u58f2\u3063\u3066\u5c0f\u91d1\u304c\u3067\u304d\u305f\u3002\n\u8cb4\u91d1\u5c5e\u5e97\u306e\u5e97\u4e3b\u306f\u6d77\u8cca\u8239\u3067\u306e\u8aad\u66f8\u4f1a\u306e\u8a71\u3082\u305d\u3053\u3067\u91d1\u8ca8\u3092\u8cb0\u3063\u305f\u4e8b\u3082\u4fe1\u3058\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u304c\u3001\n\u305d\u306e\u3046\u3061\u4f55\u679a\u304b\u306f\u767e\u5e74\u524d\u306b\u5317\u5927\u897f\u6d0b\u3067\u6c88\u6ca1\u3057\u305f\u8c6a\u83ef\u5ba2\u8239\u306b\u7a4d\u307e\u308c\u3066\u3044\u305f\u5e7b\u306e\u91d1\u8ca8\u3060\u305d\u3046\u3067\u3001\u5e97\u4e3b\u3082\u307b\u304f\u307b\u304f\u3057\u3066\u3044\u305f\u3002\n\u3053\u308c\u3067\u30ab\u30fc\u30cd\u30eb\u591a\u5909\u91cf\u89e3\u6790\u306e\u672c\u3067\u3082\u8cb7\u304a\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u305fN\u541b\u306b\u3001\u6d77\u8cca\u8239\u306e\u8239\u9577\u304b\u3089\u30e1\u30fc\u30eb\u304c\u5c4a\u3044\u305f\u3002\n\u300c\u592a\u5e73\u6d0b\u306e\u3042\u308b\u5cf6\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u3002\u5cf6\u306f\u5bb6\u304b\u3089\u9053\u8def\u304b\u3089\u4f55\u3082\u304b\u3082\u91d1\u3067\u3067\u304d\u3066\u3044\u308b\u3002\u300d\n\u3082\u3057\u304b\u3057\u3066\u3042\u306e\u300c\u30b8\u30d1\u30f3\u30b0\u300d\u3067\u3059\u304b\uff1f\n\u300c\u3057\u304b\u3057\u3001\u3053\u306e\u5cf6\u306b\u306f\u8ab0\u3082\u4f4f\u3093\u3067\u304a\u3089\u305a\u3001\u3042\u308b\u3082\u306e\u3068\u3044\u3048\u3070\u91d1\u3070\u304b\u308a\u3067\u98df\u6599\u304c\u5168\u304f\u306a\u3044\u3002\n\u3000\u98df\u7528\u306b\u306a\u308a\u305d\u3046\u306a\u306e\u306f\u9053\u7aef\u306b\u751f\u3048\u3066\u3044\u308b\u30ad\u30ce\u30b3\u3050\u3089\u3044\u3060\u300d\n\u300c\u3053\u306e\u5cf6\u306e\u30ad\u30ce\u30b3\u306f\u898b\u305f\u3068\u3053\u308d3\u7a2e\u985e\u3042\u308b\u3088\u3046\u3060\u3002\u305d\u306e\u3046\u30612\u7a2e\u985e\u306f\u6bd2\u30ad\u30ce\u30b3\u3089\u3057\u3044\u3002\n\u3000\u8aa4\u3063\u3066\u98df\u3079\u305f\u968a\u54e1\u304c3\u65e53\u6669\u7b11\u3044\u8ee2\u3052\u305f\u308a\u6ce3\u304d\u53eb\u3093\u3060\u308a\u3057\u3066\u3044\u308b\u3002\n\u30003\u7a2e\u985e\u3068\u3082\u91d1\u8272\u306a\u306e\u3067\u8272\u3067\u306f\u533a\u5225\u304c\u3064\u304b\u306a\u3044\u3002\u300d\n\u3068\u308a\u3042\u3048\u305a\u6b7b\u4eba\u306f\u51fa\u3066\u3044\u306a\u3044\u3089\u3057\u3044\u3002\n\u300c\u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3068\u3001\u968a\u54e1\u304c\u98df\u3079\u305f\u30ad\u30ce\u30b3\u306e\u30c7\u30fc\u30bf\u3092\u9001\u308b\u304b\u3089\u3001\n\u3000\u98df\u3079\u3066\u3082\u5927\u4e08\u592b\u306a\u30ad\u30ce\u30b3\u3092\u6559\u3048\u3066\u307b\u3057\u3044\u300d\n\u30ad\u30ce\u30b3\u306e\u5098\u306e\u5927\u304d\u3055\u3068\u67c4\u306e\u9577\u3055\u304c\u8a18\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3001\u968a\u54e1\u304c\u98df\u3079\u305f\u6bd2\u30ad\u30ce\u30b3\u306e\u542b\u307e\u308c\u306a\u3044\u30b0\u30eb\u30fc\u30d7\u306e\u30ad\u30ce\u30b3\u3092\u8239\u9577\u306b\u6559\u3048\u3066\u3042\u3052\u3088\u3046\u3002\n\n\n\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u6628\u65e5\u306f\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u65e5\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\u25cb \u3068 \u00d7 \u3060\u3068\u6271\u3044\u3065\u3089\u3044\u306e\u3067 1 \u3068 0 \u306b\u3042\u3089\u304b\u3058\u3081\u5909\u63db\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nimport numpy as np\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n# \u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\ndata = np.genfromtxt('CodeIQ_data.txt', delimiter=' ')\n# \u968a\u54e1\u304c\u98df\u3079\u305f\u30ad\u30ce\u30b3\neaten = np.genfromtxt('CodeIQ_eaten.txt', delimiter=' ')\n\n\n\u30c7\u30fc\u30bf\u53ef\u8996\u5316\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\u3002\n# \u6563\u5e03\u56f3\u306b\u30d7\u30ed\u30c3\u30c8\u306e\u305f\u3081\u306e\u95a2\u6570\ndef plot(data, eaten):\n    # \u30ad\u30e3\u30f3\u30d0\u30b9\u3092\u63cf\u304f\n    fig = plt.figure()\n    ax = fig.add_subplot(1,1,1)\n\n    # \u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3092\u9752\u3067\u63cf\u753b\u3059\u308b\n    x1, y1 = np.array([[x[0], x[1]] for x in data]).T\n    ax.scatter(x1, y1, color='b')\n\n    # \u98df\u3079\u3066\u3082\u5927\u4e08\u592b\u306a\u30ad\u30ce\u30b3\u3092\u8d64\u3067\u63cf\u753b\u3059\u308b\n    x2, y2 = np.array([[x[0], x[1]] for x in eaten if x[2] == 1]).T\n    ax.scatter(x2, y2, color='r')\n\n    # \u98df\u3079\u3066\u306f\u3044\u3051\u306a\u3044\u30ad\u30ce\u30b3\u3092\u7dd1\u3067\u63cf\u753b\u3059\u308b\n    x3, y3 = np.array([[x[0], x[1]] for x in eaten if x[2] == 0]).T\n    ax.scatter(x3, y3, color='g')\n    plt.legend(loc='best')\n    plt.show()\n    plt.savefig(\"image.png\")\n\nplot(data, eaten)\n\n\n\u5143\u8a18\u4e8b\u3068\u540c\u3058\u3088\u3046\u306b\u30d7\u30ed\u30c3\u30c8\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u4e0a\u306e\u56f3\u3067\u8d64\u3044\u70b9\u304c\u5c5e\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u30bf\u304c\u98df\u3079\u3089\u308c\u308b\u30ad\u30ce\u30b3\u3067\u3059\u3002\nK-Means \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306f k \u500b\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30fc\u30bf\u3092\u308f\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002\u4eca\u56de\u306f 3 \u3064\u306e\u30af\u30e9\u30b9\u30bf\u306b\u5206\u3051\u307e\u3059\u304b\u3089 k=3 \u3068\u306a\u308a\u307e\u3059\u3002\n\n\u89e3\u6cd5\ndef kmeans(features):\n    # k=3, \u30e9\u30f3\u30c0\u30de\u30a4\u30ba\u3092 10 \u56de\u5b9f\u65bd\u3059\u308b\n    kmeans_model = KMeans(n_clusters=3, random_state=10).fit(features)\n    # \u30e9\u30d9\u30eb\u3092\u53d6\u308a\u51fa\u3059\n    labels = kmeans_model.labels_\n    return labels\n\n# K-Means \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\nlabels = kmeans(data)\n\n\u3053\u308c\u3067 labels \u306b 0,1,2 \u306e 3 \u3064\u306e\u30e9\u30d9\u30eb\u304c\u5e30\u308b\u308f\u3051\u3067\u3059\u3002\n\u3042\u3068\u306f\u5185\u5bb9\u3092\u8abf\u3079\u3066\u8d64\u306b\u6240\u5c5e\u3059\u308b\u30af\u30e9\u30b9\u30bf\u3092\u8868\u793a\u3059\u308c\u3070 OK \u3067\u3059\u3002\nfor label, feature in zip(labels, data):\n    if label == 0:\n        print(label, feature)\n\n\n\u7d50\u679c\n0 [ 13.54  16.63]\n0 [ 15.15  16.65]\n0 [ 16.87  13.99]\n0 [ 11.11  13.27]\n0 [ 16.62  16.67]\n0 [ 18.84  16.5 ]\n0 [ 15.21  14.97]\n0 [ 14.39  13.58]\n0 [ 13.88  12.54]\n0 [ 13.16  11.24]\n0 [ 14.45  14.39]\n0 [ 12.15  13.39]\n0 [ 13.3  12.8]\n0 [ 15.55  12.07]\n0 [ 12.1    9.86]\n0 [ 14.9   17.23]\n0 [ 16.5   14.32]\n0 [ 13.88  11.71]\n0 [ 15.73  15.06]\n0 [ 12.17  13.49]\n0 [ 10.45  11.46]\n0 [ 11.51  14.53]\n0 [ 15.51  17.25]\n0 [ 15.85  16.9 ]\n0 [ 14.64  14.53]\n0 [ 13.12  12.88]\n0 [ 11.66  10.9 ]\n0 [ 15.57  12.67]\n0 [ 16.35  15.72]\n0 [ 12.14  10.71]\n\n30 \u500b\u306e\u30ad\u30ce\u30b3\u3092\u304d\u308c\u3044\u306b\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n# CodeIQ \u306e\u554f\u984c\u3092\u89e3\u304f (2)\n\n[\u6628\u65e5](http://qiita.com/ynakayama/items/33231bf23d40d1c1f344)\u306b\u5f15\u304d\u7d9a\u304d CodeIQ \u306b\u63b2\u8f09\u3055\u308c\u305f\u554f\u984c\u3092\u89e3\u3044\u3066\u307f\u307e\u3059\u3002\n\n\u300c\u6a5f\u68b0\u5b66\u7fd2\u57fa\u790e\u300d\u7c21\u5358\u306a\u554f\u984c\u3092\u89e3\u3044\u3066\u7406\u89e3\u3057\u3088\u3046\uff01\u524d\u7bc7\nhttp://next.rikunabi.com/tech/docs/ct_s03600.jsp?p=002315\n\n\u4eca\u65e5\u306f\u7b2c 2 \u554f\u3092\u89e3\u304d\u307e\u3059\u3002\n\n## \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\n\n### \u554f\u984c\n\n```\n\u6d77\u8cca\u8239\u3067\u50ac\u3055\u308c\u305fPRML\u8aad\u66f8\u4f1a\u306f\u697d\u3057\u304b\u3063\u305f\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u4e8b\u3082\u5c11\u3057\u306f\u308f\u304b\u3063\u305f\u6c17\u304c\u3059\u308b\u3057\u3001\u91d1\u8ca8\u3082\u6ca2\u5c71\u8cb0\u3048\u305f\u3002\u507d\u91d1\u8ca8\u3082\u305a\u3044\u3076\u3093\u6df7\u3056\u3063\u3066\u3044\u305f\u304c\u3002\n\u672c\u7269\u3068\u308f\u304b\u3063\u305f\u91d1\u8ca8\u3092\u4f55\u679a\u304b\u8cb4\u91d1\u5c5e\u5e97\u3067\u58f2\u3063\u3066\u5c0f\u91d1\u304c\u3067\u304d\u305f\u3002\n\u8cb4\u91d1\u5c5e\u5e97\u306e\u5e97\u4e3b\u306f\u6d77\u8cca\u8239\u3067\u306e\u8aad\u66f8\u4f1a\u306e\u8a71\u3082\u305d\u3053\u3067\u91d1\u8ca8\u3092\u8cb0\u3063\u305f\u4e8b\u3082\u4fe1\u3058\u3066\u3044\u306a\u3044\u3088\u3046\u3060\u3063\u305f\u304c\u3001\n\u305d\u306e\u3046\u3061\u4f55\u679a\u304b\u306f\u767e\u5e74\u524d\u306b\u5317\u5927\u897f\u6d0b\u3067\u6c88\u6ca1\u3057\u305f\u8c6a\u83ef\u5ba2\u8239\u306b\u7a4d\u307e\u308c\u3066\u3044\u305f\u5e7b\u306e\u91d1\u8ca8\u3060\u305d\u3046\u3067\u3001\u5e97\u4e3b\u3082\u307b\u304f\u307b\u304f\u3057\u3066\u3044\u305f\u3002\n\u3053\u308c\u3067\u30ab\u30fc\u30cd\u30eb\u591a\u5909\u91cf\u89e3\u6790\u306e\u672c\u3067\u3082\u8cb7\u304a\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u305fN\u541b\u306b\u3001\u6d77\u8cca\u8239\u306e\u8239\u9577\u304b\u3089\u30e1\u30fc\u30eb\u304c\u5c4a\u3044\u305f\u3002\n\u300c\u592a\u5e73\u6d0b\u306e\u3042\u308b\u5cf6\u306b\u305f\u3069\u308a\u7740\u3044\u305f\u3002\u5cf6\u306f\u5bb6\u304b\u3089\u9053\u8def\u304b\u3089\u4f55\u3082\u304b\u3082\u91d1\u3067\u3067\u304d\u3066\u3044\u308b\u3002\u300d\n\u3082\u3057\u304b\u3057\u3066\u3042\u306e\u300c\u30b8\u30d1\u30f3\u30b0\u300d\u3067\u3059\u304b\uff1f\n\u300c\u3057\u304b\u3057\u3001\u3053\u306e\u5cf6\u306b\u306f\u8ab0\u3082\u4f4f\u3093\u3067\u304a\u3089\u305a\u3001\u3042\u308b\u3082\u306e\u3068\u3044\u3048\u3070\u91d1\u3070\u304b\u308a\u3067\u98df\u6599\u304c\u5168\u304f\u306a\u3044\u3002\n\u3000\u98df\u7528\u306b\u306a\u308a\u305d\u3046\u306a\u306e\u306f\u9053\u7aef\u306b\u751f\u3048\u3066\u3044\u308b\u30ad\u30ce\u30b3\u3050\u3089\u3044\u3060\u300d\n\u300c\u3053\u306e\u5cf6\u306e\u30ad\u30ce\u30b3\u306f\u898b\u305f\u3068\u3053\u308d3\u7a2e\u985e\u3042\u308b\u3088\u3046\u3060\u3002\u305d\u306e\u3046\u30612\u7a2e\u985e\u306f\u6bd2\u30ad\u30ce\u30b3\u3089\u3057\u3044\u3002\n\u3000\u8aa4\u3063\u3066\u98df\u3079\u305f\u968a\u54e1\u304c3\u65e53\u6669\u7b11\u3044\u8ee2\u3052\u305f\u308a\u6ce3\u304d\u53eb\u3093\u3060\u308a\u3057\u3066\u3044\u308b\u3002\n\u30003\u7a2e\u985e\u3068\u3082\u91d1\u8272\u306a\u306e\u3067\u8272\u3067\u306f\u533a\u5225\u304c\u3064\u304b\u306a\u3044\u3002\u300d\n\u3068\u308a\u3042\u3048\u305a\u6b7b\u4eba\u306f\u51fa\u3066\u3044\u306a\u3044\u3089\u3057\u3044\u3002\n\u300c\u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3068\u3001\u968a\u54e1\u304c\u98df\u3079\u305f\u30ad\u30ce\u30b3\u306e\u30c7\u30fc\u30bf\u3092\u9001\u308b\u304b\u3089\u3001\n\u3000\u98df\u3079\u3066\u3082\u5927\u4e08\u592b\u306a\u30ad\u30ce\u30b3\u3092\u6559\u3048\u3066\u307b\u3057\u3044\u300d\n\u30ad\u30ce\u30b3\u306e\u5098\u306e\u5927\u304d\u3055\u3068\u67c4\u306e\u9577\u3055\u304c\u8a18\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u3002\n\u3053\u306e\u30c7\u30fc\u30bf\u3092\u3082\u3068\u306b\u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3092\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3001\u968a\u54e1\u304c\u98df\u3079\u305f\u6bd2\u30ad\u30ce\u30b3\u306e\u542b\u307e\u308c\u306a\u3044\u30b0\u30eb\u30fc\u30d7\u306e\u30ad\u30ce\u30b3\u3092\u8239\u9577\u306b\u6559\u3048\u3066\u3042\u3052\u3088\u3046\u3002\n```\n\n### \u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\n\u6628\u65e5\u306f\u30b5\u30dd\u30fc\u30c8\u30d9\u30af\u30c8\u30eb\u30de\u30b7\u30f3\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u65e5\u306f\u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3057\u307e\u3059\u3002\n\n\u25cb \u3068 \u00d7 \u3060\u3068\u6271\u3044\u3065\u3089\u3044\u306e\u3067 1 \u3068 0 \u306b\u3042\u3089\u304b\u3058\u3081\u5909\u63db\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```py3\nimport numpy as np\nfrom sklearn.cluster import KMeans\nimport matplotlib.pyplot as plt\n\n# \u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\ndata = np.genfromtxt('CodeIQ_data.txt', delimiter=' ')\n# \u968a\u54e1\u304c\u98df\u3079\u305f\u30ad\u30ce\u30b3\neaten = np.genfromtxt('CodeIQ_eaten.txt', delimiter=' ')\n```\n\n### \u30c7\u30fc\u30bf\u53ef\u8996\u5316\n\n\u307e\u305a\u306f\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u307f\u307e\u3059\u3002\n\n```py3\n# \u6563\u5e03\u56f3\u306b\u30d7\u30ed\u30c3\u30c8\u306e\u305f\u3081\u306e\u95a2\u6570\ndef plot(data, eaten):\n    # \u30ad\u30e3\u30f3\u30d0\u30b9\u3092\u63cf\u304f\n    fig = plt.figure()\n    ax = fig.add_subplot(1,1,1)\n\n    # \u63a1\u3063\u3066\u304d\u305f\u30ad\u30ce\u30b3\u3092\u9752\u3067\u63cf\u753b\u3059\u308b\n    x1, y1 = np.array([[x[0], x[1]] for x in data]).T\n    ax.scatter(x1, y1, color='b')\n\n    # \u98df\u3079\u3066\u3082\u5927\u4e08\u592b\u306a\u30ad\u30ce\u30b3\u3092\u8d64\u3067\u63cf\u753b\u3059\u308b\n    x2, y2 = np.array([[x[0], x[1]] for x in eaten if x[2] == 1]).T\n    ax.scatter(x2, y2, color='r')\n\n    # \u98df\u3079\u3066\u306f\u3044\u3051\u306a\u3044\u30ad\u30ce\u30b3\u3092\u7dd1\u3067\u63cf\u753b\u3059\u308b\n    x3, y3 = np.array([[x[0], x[1]] for x in eaten if x[2] == 0]).T\n    ax.scatter(x3, y3, color='g')\n    plt.legend(loc='best')\n    plt.show()\n    plt.savefig(\"image.png\")\n\nplot(data, eaten)\n```\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/38501/be67185a-b6d7-db28-0a1c-db8b032eed01.png)\n\n\u5143\u8a18\u4e8b\u3068\u540c\u3058\u3088\u3046\u306b\u30d7\u30ed\u30c3\u30c8\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u4e0a\u306e\u56f3\u3067\u8d64\u3044\u70b9\u304c\u5c5e\u3057\u3066\u3044\u308b\u30af\u30e9\u30b9\u30bf\u304c\u98df\u3079\u3089\u308c\u308b\u30ad\u30ce\u30b3\u3067\u3059\u3002\n\nK-Means \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u306f k \u500b\u306e\u30af\u30e9\u30b9\u30bf\u306b\u30c7\u30fc\u30bf\u3092\u308f\u3051\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059\u3002\u4eca\u56de\u306f 3 \u3064\u306e\u30af\u30e9\u30b9\u30bf\u306b\u5206\u3051\u307e\u3059\u304b\u3089 k=3 \u3068\u306a\u308a\u307e\u3059\u3002\n\n### \u89e3\u6cd5\n\n```py3\ndef kmeans(features):\n    # k=3, \u30e9\u30f3\u30c0\u30de\u30a4\u30ba\u3092 10 \u56de\u5b9f\u65bd\u3059\u308b\n    kmeans_model = KMeans(n_clusters=3, random_state=10).fit(features)\n    # \u30e9\u30d9\u30eb\u3092\u53d6\u308a\u51fa\u3059\n    labels = kmeans_model.labels_\n    return labels\n\n# K-Means \u30af\u30e9\u30b9\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\nlabels = kmeans(data)\n```\n\n\u3053\u308c\u3067 labels \u306b 0,1,2 \u306e 3 \u3064\u306e\u30e9\u30d9\u30eb\u304c\u5e30\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u3042\u3068\u306f\u5185\u5bb9\u3092\u8abf\u3079\u3066\u8d64\u306b\u6240\u5c5e\u3059\u308b\u30af\u30e9\u30b9\u30bf\u3092\u8868\u793a\u3059\u308c\u3070 OK \u3067\u3059\u3002\n\n```py3\nfor label, feature in zip(labels, data):\n    if label == 0:\n        print(label, feature)\n```\n\n### \u7d50\u679c\n\n```\n0 [ 13.54  16.63]\n0 [ 15.15  16.65]\n0 [ 16.87  13.99]\n0 [ 11.11  13.27]\n0 [ 16.62  16.67]\n0 [ 18.84  16.5 ]\n0 [ 15.21  14.97]\n0 [ 14.39  13.58]\n0 [ 13.88  12.54]\n0 [ 13.16  11.24]\n0 [ 14.45  14.39]\n0 [ 12.15  13.39]\n0 [ 13.3  12.8]\n0 [ 15.55  12.07]\n0 [ 12.1    9.86]\n0 [ 14.9   17.23]\n0 [ 16.5   14.32]\n0 [ 13.88  11.71]\n0 [ 15.73  15.06]\n0 [ 12.17  13.49]\n0 [ 10.45  11.46]\n0 [ 11.51  14.53]\n0 [ 15.51  17.25]\n0 [ 15.85  16.9 ]\n0 [ 14.64  14.53]\n0 [ 13.12  12.88]\n0 [ 11.66  10.9 ]\n0 [ 15.57  12.67]\n0 [ 16.35  15.72]\n0 [ 12.14  10.71]\n```\n\n30 \u500b\u306e\u30ad\u30ce\u30b3\u3092\u304d\u308c\u3044\u306b\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n", "tags": ["MachineLearning", "scikit-learn", "kmeans", "Python", "matplotlib"]}