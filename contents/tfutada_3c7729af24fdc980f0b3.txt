{"context": "Mobile Hub \u306e NoSQL Database (DynamoDB)\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n(Mobile Hub\u3063\u3066\u306a\u306b\uff1f \u3068\u3044\u3046\u4eba\u306f\u307e\u305a\u3053\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002)\n\n\u8a2d\u5b9a\nMobile Hub \u306e Configure \u304b\u3089\u3001NoSQL Database \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089 Notes \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\n\u7c21\u5358\u306a DynamoDB \u306e\u8aac\u660e\nDynamoDB\u306f\u3001NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002MongoDB\u306e\u3088\u3046\u306bJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30ebDB\u7684\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\nRDB\u306e\u30ec\u30b3\u30fc\u30c9\n\nItem \u9805\u76ee\u3000(\u30a2\u30de\u30be\u30f3\u306e\u8a33\u3067\u306f\u3001\u9805\u76ee\u3067\u3059\u3002\u307e\u307e\u30a2\u30a4\u30c6\u30e0\u3067\u3088\u304f\u306a\u3044\uff1f)\n\nRDB\u306e\u30ab\u30e9\u30e0\n\nAttribute \u5c5e\u6027\n\nRDB\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\n\nPartition Key + Sort Key (\u30b3\u30f3\u30dd\u30b8\u30c3\u30c8\u30ad\u30fc)\n\nDynamoDB \u3067\u306f\u3001Partition \u3068 Sort \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u5404\u30a2\u30a4\u30c6\u30e0\u3092\u7269\u7406\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u3046\u307e\u3044\u5177\u5408\u306b\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u3053\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u30af\u30a8\u30ea\u30fc\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\nPartition\u30ad\u30fc\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u5024\u3067\u3001\u3069\u306e\u7269\u7406\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u30a2\u30a4\u30c6\u30e0\u3092\u683c\u7d0d\u3059\u308b\u304b\u6c7a\u307e\u308a\u307e\u3059\u3002\nSort\u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30a4\u30c6\u30e0\u3092\u30bd\u30fc\u30c8\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3067\u306f\u3001Partition\u30ad\u30fc\u306buserId\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306e Cognito IdentityID \u304c\u5165\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Sort\u30ad\u30fc\u306bnoteId\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\n\n\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Secondary Index Queries\n\u30d7\u30e9\u30a4\u30de\u30ea\u306e partition & sort \u30ad\u30fc\u3068\u306f\u5225\u306b\u3001\u30b5\u30d6\u306e partition & sort \u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u3044\u304f\u3064\u3082\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u3001\u30b9\u30af\u30b7\u30e7\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u5168\u30a2\u30a4\u30c6\u30e0\u3092\u30ac\u30b5\u30c3\u3068\u53d6\u5f97\u3057\u3001Swift\u5074\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u7b49\u306e\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u8aac\u660e\n\u57fa\u672c\u7684\u306b\u306f\u3001\uff12\u3064\u306eTableViewController\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\u5de6\u5074\u306e\u753b\u9762\u3067\u3001\u3069\u3093\u306a\u30af\u30a8\u30ea\u30fc\u3092\u6295\u3052\u308b\u304b\u9078\u629e\u3057\u307e\u3059\u3002\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001DynamoDB\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u3001\u691c\u7d22\u7d50\u679c\u3092\u53f3\u5074\u306e\u753b\u9762\u306b\u30ea\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\u30b9\u30af\u30b7\u30e7\u306e\u4f8b\u3067\u306f\u3001Partition Key\u304c\u6307\u5b9a\u306e\u5024(userId, Cognito IdentityID)\u306b\u30de\u30c3\u30c1\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u3059\u3079\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n(\u6ce8: \u5b9f\u884c\u524d\u306b\u3001\u5de6\u753b\u9762\u4e0b\u306eInsert Sample Data\u3092\u30bf\u30c3\u30d7\u3057\u3066\u3001\u30a2\u30a4\u30c6\u30e0\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002)\n\n\n\u3056\u3063\u304f\u308a\u5168\u4f53\u50cf\n\u306a\u3093\u3061\u3083\u3063\u3066\u30af\u30e9\u30b9\u56f3\u3067\u63cf\u304f\u3068\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002  \n\u5de6\u5074\u306eTableView NoSQLTableViewController\u4e0a\u3067\u7279\u5b9a\u306e\u30bb\u30eb\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001didSelectRowAtIndexPath:\u3067Dao NotesTable\u306egetItemWithCompletionHandler:\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u5185\u90e8\u3067DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u7d50\u679c\u30c7\u30fc\u30bf Entity [Notes]\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3057\u307e\u3059\u3002\nprepareForSegue:\u306b\u3066\u7d50\u679c\u30c7\u30fc\u30bf\u3092TableView NoSQLQueryResultViewController\u306b\u30bb\u30c3\u30c8\u3057\u3066\u30bb\u30b0\u30a8\u30a4\u3059\u308b\u3002\n\u3068\u3044\u3063\u305f\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\nNotesTable\u304cCRUD\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002Mobile Hub\u304c\u3001Dao\u3068Entity\u3092\u3001\u3088\u3057\u306a\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u306d  \u3068\u3044\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\n\u30b3\u30fc\u30c9\u306e\u8aac\u660e\n\nNoSQLTableViewController\n\u30bf\u30c3\u30d7\u6642\u306b\u547c\u3070\u308c\u308b tableView:didSelectRowAtIndexPath:\u306e\u51e6\u7406\u3067\u3059\u3002\n\u4f55\u884c\u76ee\u306e\u30bb\u30eb\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u304b\u307f\u3066\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f\u30af\u30a8\u30ea\u30fc\u3092DynamoDB\u306b\u6295\u3052\u307e\u3059\u3002\n\u4e00\u756a\u4e0a\u306e\u30bb\u30eb\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001getItemWithCompletionHandler:\u3092\u547c\u3073\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u691c\u7d22\u3067\u3001\u6307\u5b9a\u3057\u305f partition & sort\u30ad\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u4e00\u3064\u8fd4\u3057\u307e\u3059\u3002\n(\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30ad\u30fc\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u3042\u308a\u3001UI\u304b\u3089\u6307\u5b9a\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u9762\u5012\u3067\u3059\u3057\u3002)\n\u691c\u7d22\u7d50\u679c\u3092\u30d6\u30ed\u30c3\u30af\u3067\u51e6\u7406\u3057\u3001\u30bb\u30b0\u30a8\u30a4\u3092\u547c\u3073\u307e\u3059\u3002\n\nNoSQLTableViewController.swift\n    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        let showQueryResultSeque = \"NoSQLShowQueryResultSegue\"\n        let cell = tableView.cellForRowAtIndexPath(indexPath) as! NoSQLTableCell\n        activityIndicator.startAnimating()\n\n        // Get item\n        if indexPath.section == 0 {\n            table?.getItemWithCompletionHandler?({(response: AWSDynamoDBObjectModel?, error: NSError?) -> Void in\n                self.activityIndicator.stopAnimating()\n                if let error = error {\n                    self.showAlertWithTitle(\"Error\", message: \"Failed to load an item. \\(error.localizedDescription)\")\n                }\n                else if let response = response {\n                    self.performSegueWithIdentifier(showQueryResultSeque, sender: [response])\n                }\n\n\n\u9077\u79fb\u5148\u306e\u753b\u9762 NoSQLQueryResultViewController \u306e\u3001results : [AWSDynamoDBObjectModel]?\u306b\u3001\u691c\u7d22\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u7d50\u679c\u304c\u8907\u6570\u30a2\u30a4\u30c6\u30e0\u306e\u5834\u5408\u306f\u3001AWSDynamoDBPaginatedOutput\u3092\u8fd4\u3057\u307e\u3059\u3002\u4e00\u3064\u306e\u5834\u5408\u306f\u3001AWSDynamoDBObjectModel\n\nNoSQLTableViewController.swift\n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n        let indexPath = tableView.indexPathForSelectedRow\n        let cell = tableView.cellForRowAtIndexPath(indexPath!) as! NoSQLTableCell\n\n        if let queryResultViewController = segue.destinationViewController as? NoSQLQueryResultViewController {\n            queryResultViewController.queryType = cell.queryTypeLabel.text!\n            queryResultViewController.queryDescription = cell.queryDescriptionLabel.text!\n            queryResultViewController.table = self.table\n            if let sender = sender as? AWSDynamoDBPaginatedOutput {\n                let paginatedOutput: AWSDynamoDBPaginatedOutput = sender\n                queryResultViewController.results = paginatedOutput.items\n                queryResultViewController.paginatedOutput = paginatedOutput\n            }\n            else {\n                queryResultViewController.results = (sender as? [AWSDynamoDBObjectModel])\n            }\n        }\n    }\n\n\n\nNotesTable\nNotesTable \u30af\u30e9\u30b9\u306f\u3001\u4f5c\u6210\u3057\u305fDynamoDB.Notes \u30c6\u30fc\u30d6\u30eb\u3078\u306e Dao\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\ngetItemWithCompletionHandler:completionHandler:\u3067\u3001objectMapper.load\u3092\u547c\u3073\u3001DynamoDB\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u307e\u3059\u3002\nhashKey(partition\u30ad\u30fc)\u3068rangeKey(sort\u30ad\u30fc)\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306eCognito IdentityID\u3068\u3001noteId(\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9)\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u691c\u7d22\u7d50\u679c\u3092\u30d6\u30ed\u30c3\u30af\u3067\u51e6\u7406\u3057\u307e\u3059\u3002\n\nNotesTable.swift\n    func getItemWithCompletionHandler(completionHandler: (response: AWSDynamoDBObjectModel?, error: NSError?) -> Void) {\n        let objectMapper = AWSDynamoDBObjectMapper.defaultDynamoDBObjectMapper()\n        objectMapper.load(Notes.self, hashKey: AWSIdentityManager.defaultIdentityManager().identityId!, rangeKey: \"demo-noteId-500000\", completionHandler: {(response: AWSDynamoDBObjectModel?, error: NSError?) -> Void in\n            dispatch_async(dispatch_get_main_queue(), {\n                completionHandler(response: response, error: error)\n            })\n        })\n    }\n\n\n\u3061\u306a\u307f\u306b\u3053\u3061\u3089\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u3060\u3051\u3092\u6307\u5b9a\u3057\u3066\u3001\u8907\u6570\u30a2\u30a4\u30c6\u30e0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002AWSDynamoDBPaginatedOutput\n\u5185\u90e8\u3067objectMapper.query\u3092\u547c\u3093\u3067\u307e\u3059\u3002\n    func queryWithPartitionKeyWithCompletionHandler(completionHandler: (response: AWSDynamoDBPaginatedOutput?, error: NSError?) -> Void) {\n        let objectMapper = AWSDynamoDBObjectMapper.defaultDynamoDBObjectMapper()\n        let queryExpression = AWSDynamoDBQueryExpression()\n\n        queryExpression.keyConditionExpression = \"#userId = :userId\"\n        queryExpression.expressionAttributeNames = [\"#userId\": \"userId\",]\n        queryExpression.expressionAttributeValues = [\":userId\": AWSIdentityManager.defaultIdentityManager().identityId!,]\n\n        objectMapper.query(Notes.self, expression: queryExpression, completionHandler: {(response: AWSDynamoDBPaginatedOutput?, error: NSError?) -> Void in\n            dispatch_async(dispatch_get_main_queue(), {\n                completionHandler(response: response, error: error)\n            })\n        })\n    }\n\n\n\u307e\u3068\u3081\nDynamoDB\u306e\u30b9\u30ad\u30fc\u30de\u5909\u66f4\u3092\u3059\u308b\u5834\u5408\u3001Mobile Hub\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u518d\u5ea6Dao\u3001Entity\u3092\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nTeraform\u306a\u3069\u3067\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u81ea\u52d5\u5316\u3067\u304d\u308c\u3070\u826f\u3044\u3067\u3059\u304c\u3001\u307e\u3060\u305d\u306e\u3042\u305f\u308a\u304c\u6574\u5099\u3055\u308c\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001Dao\u30af\u30e9\u30b9\u304c\u3001\u6c4e\u7528\u6027\u306e\u3042\u308b\u4f5c\u308a\u3067\u306f\u306a\u304f\u3001\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u306e\u3067\u3001\u4fee\u6b63\u3092\u3057\u305f\u5834\u5408\u3001Mobile Hub\u306b\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u62e1\u5f35\u3067\u3082\u3046\u5c11\u3057\u6c4e\u7528\u7684\u306a\u4f5c\u308a\u306b\u3067\u304d\u306a\u3044\u304b\u306a\u3068\u304b\u611f\u3058\u307e\u3057\u305f\u3002\n\nMobile Hub \u306e NoSQL Database (DynamoDB)\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n(Mobile Hub\u3063\u3066\u306a\u306b\uff1f \u3068\u3044\u3046\u4eba\u306f\u307e\u305a[\u3053\u3061\u3089](http://qiita.com/tfutada/items/9428eef0ea3b67922f3d)\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002)\n\n## \u8a2d\u5b9a\n\nMobile Hub \u306e Configure \u304b\u3089\u3001NoSQL Database \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u306e\u30b9\u30ad\u30fc\u30de\u304c\u3044\u304f\u3064\u304b\u7528\u610f\u3055\u308c\u3066\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u4e2d\u304b\u3089 `Notes` \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![Screen Shot 2016-06-08 at 9.19.44 AM.png](https://qiita-image-store.s3.amazonaws.com/0/75231/a3fb4e04-67ac-5204-2599-c615e9da9f80.png)\n\n## \u7c21\u5358\u306a DynamoDB \u306e\u8aac\u660e\n\nDynamoDB\u306f\u3001NoSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002MongoDB\u306e\u3088\u3046\u306bJSON\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u683c\u7d0d\u3057\u307e\u3059\u3002\n\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30ebDB\u7684\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\n\nRDB\u306e\u30ec\u30b3\u30fc\u30c9\n> Item \u9805\u76ee\u3000(\u30a2\u30de\u30be\u30f3\u306e\u8a33\u3067\u306f\u3001`\u9805\u76ee`\u3067\u3059\u3002\u307e\u307e\u30a2\u30a4\u30c6\u30e0\u3067\u3088\u304f\u306a\u3044\uff1f)\n\nRDB\u306e\u30ab\u30e9\u30e0\n> Attribute \u5c5e\u6027\n\nRDB\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\n> Partition Key + Sort Key (\u30b3\u30f3\u30dd\u30b8\u30c3\u30c8\u30ad\u30fc)\n\nDynamoDB \u3067\u306f\u3001`Partition` \u3068 `Sort` \u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u5404\u30a2\u30a4\u30c6\u30e0\u3092\u7269\u7406\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u3046\u307e\u3044\u5177\u5408\u306b\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u3053\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f5c\u6210\u3057\u30af\u30a8\u30ea\u30fc\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nPartition\u30ad\u30fc\u306f\u3001\u30cf\u30c3\u30b7\u30e5\u5024\u3067\u3001\u3069\u306e\u7269\u7406\u30b9\u30c8\u30ec\u30fc\u30b8\u306b\u30a2\u30a4\u30c6\u30e0\u3092\u683c\u7d0d\u3059\u308b\u304b\u6c7a\u307e\u308a\u307e\u3059\u3002\nSort\u30ad\u30fc\u3092\u4f7f\u7528\u3057\u3066\u30a2\u30a4\u30c6\u30e0\u3092\u30bd\u30fc\u30c8\u3057\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3067\u306f\u3001Partition\u30ad\u30fc\u306b`userId`\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\u3053\u3053\u306b\u306f\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306e Cognito IdentityID \u304c\u5165\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001Sort\u30ad\u30fc\u306b`noteId`\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\n\n## \u30a4\u30f3\u30c7\u30c3\u30af\u30b9 Secondary Index Queries\n\n\u30d7\u30e9\u30a4\u30de\u30ea\u306e `partition` & `sort` \u30ad\u30fc\u3068\u306f\u5225\u306b\u3001\u30b5\u30d6\u306e `partition` & `sort` \u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u3044\u304f\u3064\u3082\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\u30af\u30a8\u30ea\u30fc\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u306f\u3001\u30b9\u30af\u30b7\u30e7\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u7528\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u305d\u3046\u3067\u306a\u3051\u308c\u3070\u3001\u5168\u30a2\u30a4\u30c6\u30e0\u3092\u30ac\u30b5\u30c3\u3068\u53d6\u5f97\u3057\u3001Swift\u5074\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u7b49\u306e\u51e6\u7406\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n![Screen Shot 2016-06-08 at 5.41.35 PM.png](https://qiita-image-store.s3.amazonaws.com/0/75231/ba6e1372-af0b-2781-7615-d94cc0e0c002.png)\n\n\n## \u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u306e\u8aac\u660e\n\n\u57fa\u672c\u7684\u306b\u306f\u3001\uff12\u3064\u306eTableViewController\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\u5de6\u5074\u306e\u753b\u9762\u3067\u3001\u3069\u3093\u306a\u30af\u30a8\u30ea\u30fc\u3092\u6295\u3052\u308b\u304b\u9078\u629e\u3057\u307e\u3059\u3002\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001DynamoDB\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u3001\u691c\u7d22\u7d50\u679c\u3092\u53f3\u5074\u306e\u753b\u9762\u306b\u30ea\u30b9\u30c8\u3067\u8868\u793a\u3057\u307e\u3059\u3002\n\u30b9\u30af\u30b7\u30e7\u306e\u4f8b\u3067\u306f\u3001Partition Key\u304c\u6307\u5b9a\u306e\u5024(userId, Cognito IdentityID)\u306b\u30de\u30c3\u30c1\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u3059\u3079\u3066\u53d6\u5f97\u3057\u307e\u3059\u3002\n(\u6ce8: \u5b9f\u884c\u524d\u306b\u3001\u5de6\u753b\u9762\u4e0b\u306e`Insert Sample Data`\u3092\u30bf\u30c3\u30d7\u3057\u3066\u3001\u30a2\u30a4\u30c6\u30e0\u3092\u30a4\u30f3\u30b5\u30fc\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002)\n![Screen Shot 2016-06-09 at 8.07.03 AM.png](https://qiita-image-store.s3.amazonaws.com/0/75231/fe5c05a6-2b9b-8e24-075a-d9672d1ef730.png)\n\n## \u3056\u3063\u304f\u308a\u5168\u4f53\u50cf\n\n\u306a\u3093\u3061\u3083\u3063\u3066\u30af\u30e9\u30b9\u56f3\u3067\u63cf\u304f\u3068\u3053\u3093\u306a\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002 :sweat_drops: \n\u5de6\u5074\u306e`TableView NoSQLTableViewController`\u4e0a\u3067\u7279\u5b9a\u306e\u30bb\u30eb\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001`didSelectRowAtIndexPath:`\u3067`Dao NotesTable`\u306e`getItemWithCompletionHandler:`\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u3053\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u5185\u90e8\u3067DynamoDB\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3001\u7d50\u679c\u30c7\u30fc\u30bf `Entity [Notes]`\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u6e21\u3057\u307e\u3059\u3002\n`prepareForSegue:`\u306b\u3066\u7d50\u679c\u30c7\u30fc\u30bf\u3092`TableView NoSQLQueryResultViewController`\u306b\u30bb\u30c3\u30c8\u3057\u3066\u30bb\u30b0\u30a8\u30a4\u3059\u308b\u3002\n\u3068\u3044\u3063\u305f\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n`NotesTable`\u304cCRUD\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u3002Mobile Hub\u304c\u3001Dao\u3068Entity\u3092\u3001\u3088\u3057\u306a\u306b\u751f\u6210\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u306d :grinning: \u3068\u3044\u3046\u611f\u3058\u3067\u3057\u3087\u3046\u304b\uff1f\n\n![Screen Shot 2016-06-09 at 7.59.51 AM.png](https://qiita-image-store.s3.amazonaws.com/0/75231/4959e625-f3ff-7eaa-ade3-42fd3e8a01cf.png)\n\n## \u30b3\u30fc\u30c9\u306e\u8aac\u660e\n\n### NoSQLTableViewController\n\n\u30bf\u30c3\u30d7\u6642\u306b\u547c\u3070\u308c\u308b `tableView:didSelectRowAtIndexPath:`\u306e\u51e6\u7406\u3067\u3059\u3002\n\u4f55\u884c\u76ee\u306e\u30bb\u30eb\u304c\u30bf\u30c3\u30d7\u3055\u308c\u305f\u304b\u307f\u3066\u3001\u305d\u308c\u306b\u5fdc\u3058\u305f\u30af\u30a8\u30ea\u30fc\u3092DynamoDB\u306b\u6295\u3052\u307e\u3059\u3002\n\u4e00\u756a\u4e0a\u306e\u30bb\u30eb\u3092\u30bf\u30c3\u30d7\u3059\u308b\u3068\u3001`getItemWithCompletionHandler:`\u3092\u547c\u3073\u307e\u3059\u3002\n\u3053\u308c\u306f\u3001\u30d7\u30e9\u30a4\u30de\u30ea\u30ad\u30fc\u691c\u7d22\u3067\u3001\u6307\u5b9a\u3057\u305f partition & sort\u30ad\u30fc\u306b\u30de\u30c3\u30c1\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u3092\u4e00\u3064\u8fd4\u3057\u307e\u3059\u3002\n(\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30ad\u30fc\u306f\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u3042\u308a\u3001UI\u304b\u3089\u6307\u5b9a\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u9762\u5012\u3067\u3059\u3057\u3002)\n\u691c\u7d22\u7d50\u679c\u3092\u30d6\u30ed\u30c3\u30af\u3067\u51e6\u7406\u3057\u3001\u30bb\u30b0\u30a8\u30a4\u3092\u547c\u3073\u307e\u3059\u3002\n\n```swift:NoSQLTableViewController.swift\n    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        let showQueryResultSeque = \"NoSQLShowQueryResultSegue\"\n        let cell = tableView.cellForRowAtIndexPath(indexPath) as! NoSQLTableCell\n        activityIndicator.startAnimating()\n        \n        // Get item\n        if indexPath.section == 0 {\n            table?.getItemWithCompletionHandler?({(response: AWSDynamoDBObjectModel?, error: NSError?) -> Void in\n                self.activityIndicator.stopAnimating()\n                if let error = error {\n                    self.showAlertWithTitle(\"Error\", message: \"Failed to load an item. \\(error.localizedDescription)\")\n                }\n                else if let response = response {\n                    self.performSegueWithIdentifier(showQueryResultSeque, sender: [response])\n                }\n```\n\n\u9077\u79fb\u5148\u306e\u753b\u9762 `NoSQLQueryResultViewController` \u306e\u3001`results : [AWSDynamoDBObjectModel]?`\u306b\u3001\u691c\u7d22\u7d50\u679c\u306e\u30ea\u30b9\u30c8\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u7d50\u679c\u304c\u8907\u6570\u30a2\u30a4\u30c6\u30e0\u306e\u5834\u5408\u306f\u3001AWSDynamoDBPaginatedOutput\u3092\u8fd4\u3057\u307e\u3059\u3002\u4e00\u3064\u306e\u5834\u5408\u306f\u3001AWSDynamoDBObjectModel\n\n```swift:NoSQLTableViewController.swift\n    override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {\n        let indexPath = tableView.indexPathForSelectedRow\n        let cell = tableView.cellForRowAtIndexPath(indexPath!) as! NoSQLTableCell\n        \n        if let queryResultViewController = segue.destinationViewController as? NoSQLQueryResultViewController {\n            queryResultViewController.queryType = cell.queryTypeLabel.text!\n            queryResultViewController.queryDescription = cell.queryDescriptionLabel.text!\n            queryResultViewController.table = self.table\n            if let sender = sender as? AWSDynamoDBPaginatedOutput {\n                let paginatedOutput: AWSDynamoDBPaginatedOutput = sender\n                queryResultViewController.results = paginatedOutput.items\n                queryResultViewController.paginatedOutput = paginatedOutput\n            }\n            else {\n                queryResultViewController.results = (sender as? [AWSDynamoDBObjectModel])\n            }\n        }\n    }\n```\n\n### NotesTable\n\n`NotesTable` \u30af\u30e9\u30b9\u306f\u3001\u4f5c\u6210\u3057\u305f`DynamoDB.Notes` \u30c6\u30fc\u30d6\u30eb\u3078\u306e Dao\u30af\u30e9\u30b9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n`getItemWithCompletionHandler:completionHandler:`\u3067\u3001objectMapper.load\u3092\u547c\u3073\u3001DynamoDB\u306b\u30af\u30a8\u30ea\u3092\u6295\u3052\u307e\u3059\u3002\nhashKey(partition\u30ad\u30fc)\u3068rangeKey(sort\u30ad\u30fc)\u306b\u3001\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u306eCognito IdentityID\u3068\u3001noteId(\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9)\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\n\u691c\u7d22\u7d50\u679c\u3092\u30d6\u30ed\u30c3\u30af\u3067\u51e6\u7406\u3057\u307e\u3059\u3002\n\n```swift:NotesTable.swift\n    func getItemWithCompletionHandler(completionHandler: (response: AWSDynamoDBObjectModel?, error: NSError?) -> Void) {\n        let objectMapper = AWSDynamoDBObjectMapper.defaultDynamoDBObjectMapper()\n        objectMapper.load(Notes.self, hashKey: AWSIdentityManager.defaultIdentityManager().identityId!, rangeKey: \"demo-noteId-500000\", completionHandler: {(response: AWSDynamoDBObjectModel?, error: NSError?) -> Void in\n            dispatch_async(dispatch_get_main_queue(), {\n                completionHandler(response: response, error: error)\n            })\n        })\n    }\n```\n\n\u3061\u306a\u307f\u306b\u3053\u3061\u3089\u306e\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\u306f\u3001\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u3060\u3051\u3092\u6307\u5b9a\u3057\u3066\u3001\u8907\u6570\u30a2\u30a4\u30c6\u30e0\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002`AWSDynamoDBPaginatedOutput`\n\u5185\u90e8\u3067`objectMapper.query`\u3092\u547c\u3093\u3067\u307e\u3059\u3002\n\n```\n    func queryWithPartitionKeyWithCompletionHandler(completionHandler: (response: AWSDynamoDBPaginatedOutput?, error: NSError?) -> Void) {\n        let objectMapper = AWSDynamoDBObjectMapper.defaultDynamoDBObjectMapper()\n        let queryExpression = AWSDynamoDBQueryExpression()\n        \n        queryExpression.keyConditionExpression = \"#userId = :userId\"\n        queryExpression.expressionAttributeNames = [\"#userId\": \"userId\",]\n        queryExpression.expressionAttributeValues = [\":userId\": AWSIdentityManager.defaultIdentityManager().identityId!,]\n\n        objectMapper.query(Notes.self, expression: queryExpression, completionHandler: {(response: AWSDynamoDBPaginatedOutput?, error: NSError?) -> Void in\n            dispatch_async(dispatch_get_main_queue(), {\n                completionHandler(response: response, error: error)\n            })\n        })\n    }\n```\n\n## \u307e\u3068\u3081\n\nDynamoDB\u306e\u30b9\u30ad\u30fc\u30de\u5909\u66f4\u3092\u3059\u308b\u5834\u5408\u3001Mobile Hub\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u753b\u9762\u304b\u3089\u518d\u5ea6Dao\u3001Entity\u3092\u30b8\u30a7\u30cd\u30ec\u30fc\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nTeraform\u306a\u3069\u3067\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u3092\u81ea\u52d5\u5316\u3067\u304d\u308c\u3070\u826f\u3044\u3067\u3059\u304c\u3001\u307e\u3060\u305d\u306e\u3042\u305f\u308a\u304c\u6574\u5099\u3055\u308c\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u3001Dao\u30af\u30e9\u30b9\u304c\u3001\u6c4e\u7528\u6027\u306e\u3042\u308b\u4f5c\u308a\u3067\u306f\u306a\u304f\u3001\u3042\u304f\u307e\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u306e\u3067\u3001\u4fee\u6b63\u3092\u3057\u305f\u5834\u5408\u3001Mobile Hub\u306b\u4e0a\u66f8\u304d\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30c8\u30b3\u30eb\u62e1\u5f35\u3067\u3082\u3046\u5c11\u3057\u6c4e\u7528\u7684\u306a\u4f5c\u308a\u306b\u3067\u304d\u306a\u3044\u304b\u306a\u3068\u304b\u611f\u3058\u307e\u3057\u305f\u3002\n\n\n", "tags": ["AWS", "DynamoDB", "nosql", "Mobile", "hub"]}