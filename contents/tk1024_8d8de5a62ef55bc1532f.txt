{"context": "React Advent Calendar 25\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\nDraft.js\n\u516c\u5f0f\u30b5\u30a4\u30c8: Draft.js\nGithub: facebook/draft-js\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: Docs\n\nDraft.js \u3068\u306f\nDraft.js \u3068\u306fReact\u88fd\u306e\u30ea\u30c3\u30c1\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\nFacebook\u304c\u51fa\u3057\u3066\u3044\u308bOSS\u3067\u3059\u3002\n\n\u5177\u4f53\u7684\u306b\u3069\u3093\u306a\u7269\u304b\n\u516c\u5f0f\u30b5\u30a4\u30c8\u306bDEMO\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u3088\u304f\u3042\u308b\u30ea\u30c3\u30c1\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u4f5c\u308c\u307e\u3059\u3002\n\n\u5b9f\u969b\u306b\u8a66\u3059\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u5404\u30b5\u30f3\u30d7\u30eb\u30d5\u30a9\u30eb\u30c0\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u4e8b\u3067\u5b9f\u969b\u306b\u898b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002(Mac)\nnpm install\nnode_modelus/.bin/webpack\nopen index.html\n\n\n\u6700\u5c0f\u9650\u306e\u69cb\u6210(\u30b5\u30f3\u30d7\u30eb1)\n\u307e\u305a\u306f\u4f55\u306e\u88c5\u98fe\u306a\u3044\u305f\u3060\u306e\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n/1/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState} from 'draft-js';\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  render() {\n    return (\n        <Editor editorState={this.state.editorState} onChange={this.onChange} />\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n\n\n\nRichUtils\u3092\u4f7f\u3063\u3066\u592a\u5b57\u3084\u659c\u4f53\u3092\u8ffd\u52a0\u3059\u308b(\u30b5\u30f3\u30d7\u30eb2)\n\u81ea\u5206\u3067\u30e9\u30d9\u30eb\u3092\u4f5c\u3063\u3066\u81ea\u7531\u306bCSS\u5f53\u3066\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u6a19\u6e96\u3067RichUtils\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30e9\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u592a\u5b57\u3084\u659c\u4f53\u306a\u3069\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n/2/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils} from 'draft-js';\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n\n\n\n\n\u81ea\u7531\u306b\u30b9\u30bf\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b(\u30b5\u30f3\u30d7\u30eb3)\noriginal\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f\u30b9\u30bf\u30a4\u30eb\u304c\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n/3/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils, convertToRaw} from 'draft-js';\n\nconst colorStyleMap = {\n  original: {\n    color: \"white\",\n    textShadow: \"0 0 5px black\",\n    fontSize: \"50px\"\n  }\n};\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    console.log( this.state.editorState.getCurrentContent() );\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  _onOriginalClick() {\n    const {editorState} = this.state;\n    const selection = editorState.getSelection();\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    let nextEditorState = EditorState.push(\n      editorState,\n      editorState.getCurrentContent(),\n      'change-inline-style'\n    );\n\n    if(!currentStyle.has('original')) {\n      nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, 'original');\n    }\n\n    this.onChange(nextEditorState);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <button onClick={this._onOriginalClick.bind(this)}>Original</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} customStyleMap={colorStyleMap} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n\n\n\nHTML\u3068\u3057\u3066\u51fa\u529b\u3059\u308b(\u30b5\u30f3\u30d7\u30eb4)\n\u3069\u3093\u306a\u306b\u7de8\u96c6\u3067\u304d\u3066\u3082HTML\u306a\u3069\u306b\u51fa\u529b\u3067\u304d\u306a\u3051\u308c\u3070\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nDraft.js\u81ea\u4f53\u306bHTML\u306a\u3069\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u306f\u306a\u3044\u306e\u3067\u3001\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044Draft.js\u304c\u5185\u90e8\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u3089HTML\u306a\u3069\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306fHTML\u3092\u51fa\u529b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u3067\u6bd4\u8f03\u7684\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308bsstur/draft-js-export-html\n\u3092\u4f7f\u3063\u3066\u8a66\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n/4/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils, convertToRaw} from 'draft-js';\nimport {stateToHTML} from 'draft-js-export-html';\n\nconst colorStyleMap = {\n  original: {\n    color: \"white\",\n    textShadow: \"0 0 5px black\",\n    fontSize: \"50px\"\n  }\n};\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    console.log( this.state.editorState.getCurrentContent() );\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  _onOriginalClick() {\n    const {editorState} = this.state;\n    const selection = editorState.getSelection();\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    let nextEditorState = EditorState.push(\n      editorState,\n      editorState.getCurrentContent(),\n      'change-inline-style'\n    );\n\n    if(!currentStyle.has('original')) {\n      nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, 'original');\n    }\n\n    this.onChange(nextEditorState);\n  }\n  output() {\n    let options = {\n      inlineStyles: {\n        'original': {\n          attributes: {class: 'original-style'},\n        }\n      },\n    };\n    return stateToHTML(this.state.editorState.getCurrentContent(), options);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <button onClick={this._onOriginalClick.bind(this)}>Original</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} customStyleMap={colorStyleMap} />\n        <h1>HTML\u51fa\u529b\u7d50\u679c</h1>\n        <pre>{this.output()}</pre>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n\n\n\n\u57fa\u672c\u7684\u306b\u306f\u30e9\u30d9\u30eb\u306b\u5bfe\u3057\u3066\u3001HTML\u3092\u3069\u3046\u51fa\u529b\u3059\u308b\u306e\u304b\u66f8\u3044\u3066\u3044\u304f\u3068\u305d\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u304c\u3001RichUtils\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4e00\u822c\u7684\u306a\u7269\u306f\u4f55\u3082\u66f8\u304b\u306a\u304f\u3066\u3082\u9069\u5f53\u306b\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4eca\u56de\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f original \u30e9\u30d9\u30eb\u306fattributes: {class: 'original-style'}\u3068\u66f8\u304f\u3053\u3068\u3067\u300c<span class=\"original-style\"></span>\u300d\u3068\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3042\u3068\u304c\u304d\n\u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\uff01\uff01\n\u50ed\u8d8a\u306a\u304c\u3089\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u6700\u7d42\u65e5\u66f8\u304b\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\u6700\u7d42\u65e5\u3060\u304b\u308912\u6708\u4e2d\u306b\u3086\u3063\u304f\u308a\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3063\u305f\u3089\u5f53\u65e5\u307e\u3067\u307b\u307c\u4f55\u3082\u66f8\u3044\u3066\u306a\u304f\u3066\u304b\u306a\u308a\u7aef\u6298\u3063\u305f\u8aac\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u4e8b\u306f\u7533\u3057\u8a33\u306a\u3044\u3067\u3059...\nQiita\u306bDraft.js\u306e\u8a18\u4e8b\u306f\u307e\u3060\u6570\u672c\u3057\u304b\u4e0a\u304c\u3063\u3066\u3044\u306a\u3044\u306e\u3067React\u754c\u9688\u3067\u306f\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u306f\u3042\u307e\u308a\u306a\u3044\u306e\u304b\u306a\u3041... \u3068\u601d\u3044\u3064\u3064\u3082\u4eca\u5e74\u3001\u5b9f\u969b\u306b\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u3092\u5c11\u3057\u3067\u3082\u5897\u3084\u3059\u3079\u304f\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3067\u3042\u308a\u307e\u3059\u3002\n\u8208\u5473\u3092\u6301\u3063\u305f\u3001\u5b9f\u969b\u306b\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u306a\u3063\u305f\u3001\u306a\u3069\u306e\u969b\u306b\u306f\u305c\u3072\u4f7f\u3063\u3066\u307f\u3066\u4e0b\u3055\u3044\uff01\nReact Advent Calendar 25\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# Draft.js\n\u516c\u5f0f\u30b5\u30a4\u30c8: [Draft.js](https://facebook.github.io/draft-js/)\nGithub: [facebook/draft-js](https://github.com/facebook/draft-js)\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: [Docs](https://facebook.github.io/draft-js/docs/overview.html#content)\n\n# Draft.js \u3068\u306f\nDraft.js \u3068\u306fReact\u88fd\u306e\u30ea\u30c3\u30c1\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\u3002\nFacebook\u304c\u51fa\u3057\u3066\u3044\u308bOSS\u3067\u3059\u3002\n\n# \u5177\u4f53\u7684\u306b\u3069\u3093\u306a\u7269\u304b\n[\u516c\u5f0f\u30b5\u30a4\u30c8](https://facebook.github.io/draft-js/)\u306bDEMO\u304c\u3042\u308a\u307e\u3059\u3002\n<img width=\"511\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-12 21.10.55.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74405/b20bc2ba-1070-751c-8d0f-0a1c11c16d19.png\">\n\u3053\u3093\u306a\u611f\u3058\u306e\u3088\u304f\u3042\u308b\u30ea\u30c3\u30c1\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u4f5c\u308c\u307e\u3059\u3002\n\n# \u5b9f\u969b\u306b\u8a66\u3059\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f[\u3053\u3061\u3089](https://github.com/tk1024/advent2016-draft)\u306b\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u5404\u30b5\u30f3\u30d7\u30eb\u30d5\u30a9\u30eb\u30c0\u3067\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u4e8b\u3067\u5b9f\u969b\u306b\u898b\u308b\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002(Mac)\n\n```bash\nnpm install\nnode_modelus/.bin/webpack\nopen index.html\n```\n\n## \u6700\u5c0f\u9650\u306e\u69cb\u6210(\u30b5\u30f3\u30d7\u30eb1)\n\u307e\u305a\u306f\u4f55\u306e\u88c5\u98fe\u306a\u3044\u305f\u3060\u306e\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u51fa\u3057\u3066\u307f\u307e\u3059\u3002\n\n```js:/1/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState} from 'draft-js';\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  render() {\n    return (\n        <Editor editorState={this.state.editorState} onChange={this.onChange} />\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n```\n<img width=\"415\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-25 17.37.56.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74405/7fb1519a-7e6a-7ab5-059d-4f9b1fb635c9.png\">\n\n\n## RichUtils\u3092\u4f7f\u3063\u3066\u592a\u5b57\u3084\u659c\u4f53\u3092\u8ffd\u52a0\u3059\u308b(\u30b5\u30f3\u30d7\u30eb2)\n\u81ea\u5206\u3067\u30e9\u30d9\u30eb\u3092\u4f5c\u3063\u3066\u81ea\u7531\u306bCSS\u5f53\u3066\u308b\u4e8b\u3082\u51fa\u6765\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u6a19\u6e96\u3067RichUtils\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u30e9\u30d9\u30eb\u3092\u4f7f\u3063\u3066\u592a\u5b57\u3084\u659c\u4f53\u306a\u3069\u3092\u8ffd\u52a0\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```js:/2/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils} from 'draft-js';\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n```\n<img width=\"383\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-25 17.38.51.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74405/9d824aed-cdfa-ced3-6404-01584bdb121e.png\">\n\n\n## \u81ea\u7531\u306b\u30b9\u30bf\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u3066\u307f\u308b(\u30b5\u30f3\u30d7\u30eb3)\noriginal\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f\u30b9\u30bf\u30a4\u30eb\u304c\u9069\u7528\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```js:/3/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils, convertToRaw} from 'draft-js';\n\nconst colorStyleMap = {\n  original: {\n    color: \"white\",\n    textShadow: \"0 0 5px black\",\n    fontSize: \"50px\"\n  }\n};\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    console.log( this.state.editorState.getCurrentContent() );\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  _onOriginalClick() {\n    const {editorState} = this.state;\n    const selection = editorState.getSelection();\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    let nextEditorState = EditorState.push(\n      editorState,\n      editorState.getCurrentContent(),\n      'change-inline-style'\n    );\n\n    if(!currentStyle.has('original')) {\n      nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, 'original');\n    }\n\n    this.onChange(nextEditorState);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <button onClick={this._onOriginalClick.bind(this)}>Original</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} customStyleMap={colorStyleMap} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n```\n<img width=\"383\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-25 17.40.24.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74405/35096c44-dd25-8572-6546-9b78fb2f08cc.png\">\n\n\n## HTML\u3068\u3057\u3066\u51fa\u529b\u3059\u308b(\u30b5\u30f3\u30d7\u30eb4)\n\u3069\u3093\u306a\u306b\u7de8\u96c6\u3067\u304d\u3066\u3082HTML\u306a\u3069\u306b\u51fa\u529b\u3067\u304d\u306a\u3051\u308c\u3070\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002\nDraft.js\u81ea\u4f53\u306bHTML\u306a\u3069\u3092\u51fa\u529b\u3059\u308b\u6a5f\u80fd\u306f\u306a\u3044\u306e\u3067\u3001\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044Draft.js\u304c\u5185\u90e8\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u3089HTML\u306a\u3069\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u306fHTML\u3092\u51fa\u529b\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4e2d\u3067\u6bd4\u8f03\u7684\u4f7f\u308f\u308c\u3066\u3044\u308b\u3068\u601d\u308f\u308c\u308b[sstur/draft-js-export-html\n](https://github.com/sstur/draft-js-export-html)\u3092\u4f7f\u3063\u3066\u8a66\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```js:/4/src/app.jsx\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Editor, EditorState, RichUtils, convertToRaw} from 'draft-js';\nimport {stateToHTML} from 'draft-js-export-html';\n\nconst colorStyleMap = {\n  original: {\n    color: \"white\",\n    textShadow: \"0 0 5px black\",\n    fontSize: \"50px\"\n  }\n};\n\nclass MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = (editorState) => this.setState({editorState});\n  }\n  _onBoldClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'BOLD'));\n    console.log( this.state.editorState.getCurrentContent() );\n  }\n  _onItalicClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'ITALIC'));\n  }\n  _onUnderlineClick() {\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, 'UNDERLINE'));\n  }\n  _onOriginalClick() {\n    const {editorState} = this.state;\n    const selection = editorState.getSelection();\n    const currentStyle = editorState.getCurrentInlineStyle();\n\n    let nextEditorState = EditorState.push(\n      editorState,\n      editorState.getCurrentContent(),\n      'change-inline-style'\n    );\n\n    if(!currentStyle.has('original')) {\n      nextEditorState = RichUtils.toggleInlineStyle(nextEditorState, 'original');\n    }\n\n    this.onChange(nextEditorState);\n  }\n  output() {\n    let options = {\n      inlineStyles: {\n        'original': {\n          attributes: {class: 'original-style'},\n        }\n      },\n    };\n    return stateToHTML(this.state.editorState.getCurrentContent(), options);\n  }\n  render() {\n    return (\n      <div>\n        <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n        <button onClick={this._onItalicClick.bind(this)}>Italic</button>\n        <button onClick={this._onUnderlineClick.bind(this)}>Underline</button>\n        <button onClick={this._onOriginalClick.bind(this)}>Original</button>\n        <Editor editorState={this.state.editorState} onChange={this.onChange} customStyleMap={colorStyleMap} />\n        <h1>HTML\u51fa\u529b\u7d50\u679c</h1>\n        <pre>{this.output()}</pre>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <MyEditor />,\n  document.getElementById(\"app\")\n);\n\n```\n<img width=\"469\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-25 17.44.15.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/74405/1e335dce-4e79-23dd-ea83-3388ed236b07.png\">\n\n\n\u57fa\u672c\u7684\u306b\u306f\u30e9\u30d9\u30eb\u306b\u5bfe\u3057\u3066\u3001HTML\u3092\u3069\u3046\u51fa\u529b\u3059\u308b\u306e\u304b\u66f8\u3044\u3066\u3044\u304f\u3068\u305d\u306e\u901a\u308a\u306b\u306a\u308a\u307e\u3059\u304c\u3001RichUtils\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u4e00\u822c\u7684\u306a\u7269\u306f\u4f55\u3082\u66f8\u304b\u306a\u304f\u3066\u3082\u9069\u5f53\u306b\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u4eca\u56de\u3001\u72ec\u81ea\u306b\u5b9a\u7fa9\u3057\u305f original \u30e9\u30d9\u30eb\u306f`attributes: {class: 'original-style'}`\u3068\u66f8\u304f\u3053\u3068\u3067\u300c```<span class=\"original-style\"></span>```\u300d\u3068\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n## \u3042\u3068\u304c\u304d\n\u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\uff01\uff01\n\n\u50ed\u8d8a\u306a\u304c\u3089\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u6700\u7d42\u65e5\u66f8\u304b\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\u6700\u7d42\u65e5\u3060\u304b\u308912\u6708\u4e2d\u306b\u3086\u3063\u304f\u308a\u66f8\u3044\u3066\u3044\u3053\u3046\u3068\u601d\u3063\u305f\u3089\u5f53\u65e5\u307e\u3067\u307b\u307c\u4f55\u3082\u66f8\u3044\u3066\u306a\u304f\u3066\u304b\u306a\u308a\u7aef\u6298\u3063\u305f\u8aac\u660e\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u4e8b\u306f\u7533\u3057\u8a33\u306a\u3044\u3067\u3059...\n\nQiita\u306bDraft.js\u306e\u8a18\u4e8b\u306f\u307e\u3060\u6570\u672c\u3057\u304b\u4e0a\u304c\u3063\u3066\u3044\u306a\u3044\u306e\u3067React\u754c\u9688\u3067\u306f\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u306f\u3042\u307e\u308a\u306a\u3044\u306e\u304b\u306a\u3041... \u3068\u601d\u3044\u3064\u3064\u3082\u4eca\u5e74\u3001\u5b9f\u969b\u306b\u4f7f\u3046\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067\u65e5\u672c\u8a9e\u306e\u8a18\u4e8b\u3092\u5c11\u3057\u3067\u3082\u5897\u3084\u3059\u3079\u304f\u66f8\u3044\u3066\u307f\u305f\u6b21\u7b2c\u3067\u3042\u308a\u307e\u3059\u3002\n\n\u8208\u5473\u3092\u6301\u3063\u305f\u3001\u5b9f\u969b\u306b\u30a8\u30c7\u30a3\u30bf\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u306b\u306a\u3063\u305f\u3001\u306a\u3069\u306e\u969b\u306b\u306f\u305c\u3072\u4f7f\u3063\u3066\u307f\u3066\u4e0b\u3055\u3044\uff01\n", "tags": ["reactjs", "React", "Draft.js", "es6", "JavaScript"]}