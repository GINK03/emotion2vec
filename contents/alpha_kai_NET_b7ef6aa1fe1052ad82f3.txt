{"tags": ["dlang", "D\u8a00\u8a9e"], "context": "D\u8a00\u8a9e\u306b\u306f\u6587\u5b57\u5217mixin\u3068\u3044\u3046\u6a5f\u80fd\u304c\u3042\u308b\u3002\n\u3053\u308c\u306f\u3001\u52d5\u7684\u306a\u8a00\u8a9e\u306b\u304a\u3051\u308beval\u95a2\u6570\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002\u3064\u307e\u308a\u3001\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217(D\u8a00\u8a9e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u59a5\u5f53\u306a\u30b3\u30fc\u30c9(\u3053\u308c\u306f\u305d\u306e\u5834\u306b\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\n\u4e00\u3064\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001D\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u59a5\u5f53\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001D\u8a00\u8a9e\u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3042\u308a\u3001\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u306a\u3044\u3002\n\u3082\u3061\u308d\u3093\u3001\u9759\u7684\u306a\u7bc4\u56f2\u3067\u306f\u901a\u5e38\u306eD\u306e\u30b3\u30fc\u30c9\u3057\u3066\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u308b\u304c\u3001\u52d5\u7684\u306a\u30a8\u30e9\u30fc\u306b\u3064\u3044\u3066\u306f\u3001\u666e\u901a\u306eD\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u3001\u5b9f\u884c\u6642\u306b\u3057\u304b\u767a\u751f\u3057\u306a\u3044)\u3002\n\u305f\u3060\u3057\u3001D\u8a00\u8a9e\u306f\u5f37\u3044\u9759\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u3067\u3042\u308b\u304b\u3089\u3001\u5168\u3066\u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u304c\u6c7a\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3064\u307e\u308a\u3001\u52d5\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u306e\u3088\u3046\u306b\u6a19\u6e96\u5165\u529b\u3092eval\u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\u6587\u5b57\u5217mixin\u306b\u306f\u5e7e\u3064\u304b\u306e\u4f7f\u3044\u65b9\u304c\u3042\u308b\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3042\u308b\u304c\u3001\u3042\u308b\u610f\u5473C\u8a00\u8a9e\u306e\u30de\u30af\u30ed\u7684\u306a\u4f7f\u3044\u65b9\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\n\u3053\u3053\u3067\u306f\u3001\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3068\u30de\u30af\u30ed\u7684\u306a\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3092\u884c\u3046\u3002\n\n\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\n\u8a55\u4fa1\u5f0f\u3068\u3044\u3046\u306e\u3092\u3001\u6761\u4ef6\u5f0f\u3068\u8aad\u307f\u66ff\u3048\u3066\u3082\u826f\u3044\u3002\u5373\u3061\u3001a < b, a == b\u306a\u3069\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002\n\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3068\u4f55\u304c\u5b09\u3057\u3044\u306e\u3060\u308d\u3046\u3002\u305d\u306e\u7b54\u3048\u306f\u95a2\u6570\u3092\u6c4e\u7528\u7684\u306b\u6271\u3046\u3053\u3068\u3001\u3059\u306a\u308f\u3061\u62bd\u8c61\u5316\u51fa\u6765\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u3042\u308b\u3002\n\u305f\u3068\u3048\u3070\u30012\u9805\u6f14\u7b97(\u5f15\u304d\u6570\u304c2\u3064\u306e\u624b\u7d9a\u304d)\u3092\u884c\u3046binFun\u3092\u8003\u3048\u3066\u307f\u3088\u3046\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u6700\u3082\u7c21\u5358\u304b\u3064\u8eab\u8fd1\u3067\u3042\u308a\u306a\u304c\u3089\u3001\u3042\u307e\u308a\u591a\u304f\u306e\u4eba\u304c2\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u624b\u7d9a\u304d\u3068\u3057\u3066\u610f\u8b58\u3057\u3066\u3044\u308b\u3053\u3068\u306f\u5c11\u306a\u3044\u3067\u3042\u308d\u3046\u6f14\u7b97\u3068\u3044\u3048\u3070\u3001\u56db\u5247\u6f14\u7b97\u304c\u3042\u308b\u3060\u308d\u3046\u3002\n\u3059\u306a\u308f\u3061\u3001a + b, a - b, a * b, a / b\u3002\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u56db\u5247\u6f14\u7b97\u3082\u95a2\u6570\u306e\u3088\u3046\u306b\u8003\u3048\u3088\u3046\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001+ (a, b), - (a, b), * (a, b), / (a, b)\u5de6\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u30dd\u30fc\u30e9\u30f3\u30c9\u8a18\u6cd5\u3067\u4e0a\u306e\u5f0f\u3092\u66f8\u304d\u76f4\u3057\u305f\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u3001\u56db\u5247\u6f14\u7b97\u30922\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u624b\u7d9a\u304d\u3068\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3060\u308d\u3046\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u4e00\u822c\u7684\u306a2\u5f15\u304d\u6570\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306b\u306f\u30012\u3064\u306e\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570f,g\u304c\u3042\u308b\u3068\u3057\u3066f (a, b), g (a, b)\u3068\u3057\u3066\u3088\u3073\u3060\u3059\u3060\u308d\u3046\u3002\n\u3055\u3066\u30012\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3092\u62bd\u8c61\u5316\u3057\u3088\u3046\u30022\u3064\u306e\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3092F\u3068\u3057\u3001\u305d\u306e\u5f15\u304d\u6570\u3068\u306a\u308b\u9805\u3092a, b\u3068\u3059\u308b\u3002\n\u62bd\u8c61\u5316\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nimport std.traits;//ReturnType, isCallable\n\nReturnType!f binFun(alias f, T, U)(T a, U b) if (isCallable!f){\n  return f(a, b);\n}\n\nunittest {\n  int f(int a, int b) {\n    return a * b;\n  }\n\n  string g(string a, string b) {\n    return a ~ b;\n  }\n\n\n  assert (binFun!f(10, 20) == 200);\n  assert (binFun!g(\"abc\", \"def\") == \"abcdef\");\n}\n\n\u3055\u3066\u3001\u3053\u3053\u3067\u4e00\u3064\u554f\u984c\u304c\u751f\u305a\u308b\u3002\n\u5148\u307b\u3069\u3001\u50d5\u306f\u56db\u5247\u6f14\u7b97\u3092\u95a2\u6570\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u305f\u304c\u3001\u3053\u308c\u3092D\u306e\u30b3\u30fc\u30c9\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u5931\u6557\u3059\u308b\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001binFun!+(10, 20) == 30\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u3068\u3057\u3066\u59a5\u5f53\u306a\u30b3\u30fc\u30c9\u3067\u306f\u306a\u3044\u3002\n\u3068\u3044\u3046\u306e\u3082\u3001D\u8a00\u8a9e\u3067\u306f+,-,*,/\u306f\u95a2\u6570\u3068\u3057\u3066\u306f\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3088\u3063\u3066\u3001+\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5f15\u304d\u6570\u3068\u3057\u3066\u306f\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3002\u3067\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u89e3\u6c7a\u3059\u308c\u3070\u3088\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\u3053\u3053\u3067\u3001\u30e9\u30e0\u30c0\u5f0f(\u7121\u540d\u95a2\u6570)\u306e\u5229\u7528\u304c\u601d\u3044\u6d6e\u304b\u3076\u3053\u3068\u3060\u308d\u3046\u3002\n\u3059\u306a\u308f\u3061\u3001binFun!+(10, 20)\u306e\u304b\u308f\u308a\u306b\u3001  binFun!((int a, int b) => a + b)(10, 20)\u3068\u304b\u3051\u3070\u3088\u3044\u3002\n\u307e\u3060\u6587\u5b57\u5217mixin\u304c\u51fa\u3066\u304d\u3066\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u62bd\u8c61\u5316\u51fa\u6765\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3060\u308d\u3046\u3002\n\u3055\u3066\u3001\u6b21\u306f\u6587\u5b57\u5217mixin\u3092\u7528\u3044\u305f\u8aac\u660e\u3092\u884c\u3046\u3002\n\u4e0a\u306e\u4f8b\u3067\u898b\u305f\u3088\u3046\u306b\u3001\u56db\u5247\u6f14\u7b97(\u3046\u3048\u3067\u306f\u8aac\u660e\u3057\u306a\u304b\u3063\u305f\u304c\u3001\u52a0\u3048\u3066\u6bd4\u8f03\u6f14\u7b97\u5b50\u3082\u540c\u69d8)\u3092\u8a55\u4fa1\u5f0f\u3068\u3057\u3066\u6e21\u3059\u5834\u5408\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u305b\u3070\u3001\u4e0a\u306e\u4f8b\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u3001\u88cf\u3092\u8fd4\u305b\u3070\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u304b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3042\u308b\u3002\nD\u8a00\u8a9e\u306b\u306f\u578b\u63a8\u8ad6\u3082\u3042\u308a\u3001\u9759\u7684\u306a\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u53ef\u80fd\u306a\u8a00\u8a9e\u3067\u3042\u308b\u305f\u3081\u3001\u6587\u5b57\u5217mixin\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30e9\u30e0\u30c0\u5f0f\u306e\u4ee3\u308f\u308a\u306b\u3001\u8a55\u4fa1\u5f0f\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3060\u3002\n\u307e\u3060\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u6b21\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u73fe\u6642\u70b9\u3067\u306f\u52d5\u304b\u306a\u3044\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b:\nbinFun!\"a + b\"(10, 20) == 30\n\u3067\u306f\u3001\u5b9f\u88c5\u3092\u884c\u304a\u3046\u3002\nD\u8a00\u8a9e\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u578b\u63a8\u8ad6\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u73fe\u53ef\u80fd\u306b\u306a\u308b\u3002\n\u5b9f\u88c5\u306f\u6b21\u306e\u901a\u308a:\nauto binFun(string s, T, U)(T a, U b) if (is(typeof(mixin(s)))) {\n  return mixin(s);\n}\n\n\u3053\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u3059\u308b\u3053\u3068\u3067\u3001binFun!\"a + b\"\u3068\u3044\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\u3058\u3064\u306f\u3001\u4e0a\u306b\u66f8\u3044\u305f\u3088\u3046\u306abinFun\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u304f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304cD\u8a00\u8a9e\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067std.functional.binaryFun\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u3044\u3053\u3046\u3002\n\u307e\u305a\u3001binFun\u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066(\u6587\u5b57\u5217s, \u578bT, \u578bU)\u3092\u8981\u6c42\u3059\u308b\u3002\u8981\u6c42\u3068\u66f8\u3044\u305f\u304c\u3001\u63a8\u8ad6\u53ef\u80fd\u306a\u578b\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u7701\u7565\u53ef\u80fd\u306a\u306e\u3067\u3001\u5b9f\u8cea\u7684\u306b\u6587\u5b57\u5217s\u3092\u6e21\u3059\u3053\u3068\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u90e8\u5206\u306f\u89e3\u6c7a\u3059\u308b\u3002\n\u307e\u305f\u3001binFun\u306f\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u306e\u3067\u3001\u95a2\u6570\u3068\u3057\u3066\u306e\u5f15\u6570\u3082\u8981\u6c42\u3057\u3001\u305d\u308c\u306f(T\u578b\u306ea, U\u578b\u306eb)\u3067\u3042\u308b\u3002\n\u305d\u3057\u3066\u3001\u305d\u306e\u5f8c\u306b\u7d9a\u304fif\u306fTemplateConstraint\u3068\u3088\u3070\u308c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b\u5bfe\u3059\u308b\u5236\u7d04\u3092\u8ab2\u3059\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u5236\u7d04\u3068\u306fif\u306e\u4e2d\u306e\u5f0f\u3067\u3042\u308b\u3002\n\u534a\u3070\u30a4\u30c7\u30a3\u30aa\u30e0\u7684\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304cis(typeof(expr))\u3068\u306f\u3001expr\u304cD\u8a00\u8a9e\u3068\u3057\u3066\u59a5\u5f53\u306a\u5f0f\u3067\u3042\u308b\u5834\u5408\u306b\u3001true\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067\u306f\u3001s\u3068\u3044\u3046\u6587\u5b57\u5217\u3067\u4e0e\u3048\u3089\u308c\u305f\u5f0f\u304cD\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u89e3\u91c8\u53ef\u80fd\u304b\u3092\u5224\u65ad\u3057\u3066\u3044\u308b\u3002\u3053\u3053\u3067\u3088\u3046\u3084\u304fmixin\u304c\u767b\u5834\u3059\u308b\u3002\n\u4e0a\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u6587\u5b57\u5217mixin\u306f\u305d\u306e\u5834\u306b\u6587\u5b57\u5217\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3088\u3063\u3066\u3001binFun!\"a+b\"\u3068\u66f8\u3044\u305f\u5834\u5408\u3001if(is(typeof(a + b)))\u3068\u3044\u3046\u3088\u3046\u306b\u5c55\u958b\u3055\u308c\u308b\u3002\n\u3053\u3053\u3067\u30012\u3064\u306e\u5909\u6570\u3092\u8db3\u3059\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u306e\u5f0f\u3068\u3057\u3066\u59a5\u5f53\u3067\u3042\u308b\u305f\u3081\u3001a + b\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u59a5\u5f53\u3067\u3042\u308b\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u306f\u3001typeof(expr)\u306fexpr\u306e\u578b\u3092\u8fd4\u3059\u3002\u3088\u3063\u3066\u3053\u3053\u3067\u306fa + b\u306e\u578b\u3092\u8fd4\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u65b9\u304c\u59a5\u5f53\u3067\u3042\u308b\u5834\u5408is\u304c\u771f\u3092\u8fd4\u3059\u3002\u3042\u304f\u307e\u3067\u3082Template Constraint\u306b\u306f\u578b\u306b\u95a2\u3059\u308b\u6761\u4ef6\u306e\u307f\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3088\u3063\u3066\u3001\u305d\u306e\u5909\u6570\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044(a * b < 20\u307f\u305f\u3044\u306a\u5f0f\u306f\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3068\u3044\u3046\u3053\u3068)\u3002\u7406\u7531\u306f\u5358\u7d14\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u304b\u3089\u3060\u3002\nTemplate Constraint\u306e\u5834\u6240\u3068\u540c\u69d8\u306b\u3001\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u672c\u4f53\u3001return\u306e\u3068\u3053\u308d\u306b\u3082mixin(s)\u3068\u3042\u308b\u304c\u3001\u3053\u3053\u3082\u540c\u69d8\u306ba + b\u3068\u5c55\u958b\u3055\u308c\u308b\u3002\nD\u8a00\u8a9e\u306e\u591a\u304f\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u5148\u307b\u3069\u306e\u6587\u5b57\u5217\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3067\u6e21\u3059\u3053\u3068\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\n\u3068\u304f\u306b\u3001std.algorithm\u306e\u95a2\u6570\u3092\u4f7f\u3046\u6642\u306f\u6709\u7528\u3067\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u3001std.algorithm.iteration\u306emap\u3084filter\u306a\u3069\u983b\u51fa\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u975e\u5e38\u306b\u6709\u7528\u3060\u3002\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nvoid main() {\n  /*\n    N.iota\u306f[0, N)\n  */\n  //E = {a | 0 <= a< 100, a %2 == 0}\n  writeln(100.iota.filter!\"!(a%2)\");\n  //O = {a | 0 <= a< 100, a %2 == 1}\n  writeln(100.iota.filter!\"a%2\");\n}\n\n\u4e00\u3064\u3060\u3051\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u8a55\u4fa1\u5f0f\u306b\u65e2\u5b58\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3081\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\u3002\n\u305f\u3068\u3048\u3070\u3001\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nbool f(int x) {\n  return true;\n}\n\nvoid main() {\n  writeln(100.iota.filter!\"f(a)\");\n}\n\n\u3053\u308c\u3092\u3059\u308b\u3068f\u304cundefined\u3068\u306a\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\n\u3053\u306e\u5834\u5408\u306f\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nbool f(int x) {\n  return true;\n}\n\nvoid main() {\n  writeln(100.iota.filter!(x => f(a)));\n}\n\n\u3068\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3053\u306e\u3088\u3046\u306a\u3001\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u3088\u3046\u306a\u95a2\u6570\u3092\u9ad8\u968e\u95a2\u6570\u3068\u3044\u3046\u3002\u95a2\u6570\u3092\u9ad8\u968e\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Flexible\u306b\u3057\u3001\u62bd\u8c61\u5316\u3092\u3082\u305f\u3089\u3057\u3001\u518d\u5229\u7528\u6027\u304c\u5411\u4e0a\u3059\u308b\u3002\n\n\u6587\u5b57\u5217mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u3046\n\u3053\u3053\u307e\u3067\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308b\u3068\u3001mixin\u304c\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u306f\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u3051\u305f\u3060\u308d\u3046\u3002\n\u3055\u3066\u3001\u6587\u5b57\u5217mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u304a\u3046\u3002\n\u3064\u307e\u308a\u3001\u3042\u3068\u3067mixin\u3059\u308b\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308bCTFE\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u4f5c\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u306b\u3064\u3044\u3066\u3001\u8272\u3005\u3068\u4f8b\u3092\u4e0a\u3052\u3066\u307f\u3088\u3046\u3002\u305d\u3057\u3066\u6700\u5f8c\u306b\u3001\u6587\u5b57\u5217mixin\u3092\u5fdc\u7528\u3057\u305f\u4f8b\u3068\u3057\u3066\u7121\u540d\u30af\u30e9\u30b9(D\u8a00\u8a9e\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u306f\u5b58\u5728\u3059\u308b)\u3092\u5b9f\u73fe\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u3055\u3089\u306b\u9759\u7684\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6d3b\u7528\u3057\u305f\u4f8b\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002\n\u7c21\u5358\u306a\u4f8b\u3092\u898b\u3066\u307f\u3088\u3046\u3002\nimport std.stdio;\n\nstring generateFunction_0(string funcName, string functionBody) {\n  return\n    \"auto \" ~ funcName ~ \"() {\"\n    ~ functionBody\n  ~ \"}\";\n}\n\nmixin(generateFunction_0(\"f\", \"return 100 * 200;\"));\n\nvoid main() {\n  writeln(f);\n}\n\n\u3053\u308c\u306f\u3001\u5f15\u304d\u6570\u3092\u53d6\u3089\u306a\u3044\u95a2\u6570\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u3042\u308a\u3001\u305d\u306e\u95a2\u6570\u304c\u8fd4\u3059\u6587\u5b57\u5217\u3092mixin\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u95a2\u6570f\u3092\u751f\u6210\u3057\u3001mixin\u3067\u305d\u308c\u3092\u5b9f\u4f53\u5316\u3057\u3066\u3044\u308b\u3002\n\u3082\u3061\u308d\u3093\u3001UFCS\u304c\u4f7f\u3048\u308b\u304b\u3089\n\"g\".generateFunction_0(\"return 100 * 200;\")\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3060\u3063\u3066\u51fa\u6765\u308b\u306e\u3060\u3002\n\u3055\u3066\u3001\u3053\u308c\u3092\u5f15\u304d\u6570\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u6c4e\u7528\u7684\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002\n\ngenerateFunction.d\nimport std.stdio;\nimport std.algorithm,\n       std.typecons,\n       std.array,\n       std.conv;\n\nstatic string generateFunction(string funcName, string functionBody) {\n  return\n    \"auto \" ~ funcName ~ \"() {\"\n    ~ functionBody\n  ~ \"}\";\n}\n\nstatic string generateFunction(ArgsList)(string funcName, string functionBody) {\n  static if ({\n    foreach (field; ArgsList.fieldNames) {\n      if (field == \"\") {\n        throw new Error(\"Invalid ArgsList was given\");\n      }\n    }\n\n    return true;\n  }()) {\n    enum argsLabels = {\n      string[] argsLabels;\n\n      foreach (field; ArgsList.fieldNames)\n        argsLabels ~= field;\n\n      return argsLabels;\n    }();\n\n    return generateFunction!(ArgsList, argsLabels)(funcName, functionBody);\n  }\n}\n\nstatic string generateFunctionParameters(ArgsList, string[] argsLabels)() {\n  enum types = {\n    string temp;\n\n    foreach (i, type; ArgsList.Types) {\n      temp ~= (i ? \",\" : \"\") ~ type.stringof;\n    }\n\n    return temp;\n  }().split(\",\");\n\n  enum parameters = {\n    string temp;\n\n    foreach (i, argLabel; argsLabels) {\n      temp ~= (i ? \", \" : \"\") ~ types[i] ~ \" \" ~ argLabel;\n    }\n\n    return temp;\n  }();\n\n  return parameters;\n}\n\nstatic string generateDelegate(string functionBody) {\n  return \"{\" ~ functionBody ~ \"};\";\n}\n\nstatic string generateDelegate(ArgsList, string[] argsLabels)(string functionBody) {\n  enum parameters = generateFunctionParameters!(ArgsList, argsLabels);\n\n  return \"(\" ~ parameters ~ \") {\"\n        ~  functionBody\n        ~ \"}\";\n}\n\nstatic string generateFunction(ArgsList, string[] argsLabels)(string funcName, string functionBody) {\n  return \"auto \" ~ funcName ~ generateDelegate!(ArgsList, argsLabels)(functionBody);\n}\n\nvoid main() {\n  mixin(generateFunction(\"f\", \"return 100 * 200;\"));\n  writeln(f());\n  mixin(\"g\".generateFunction(\"return 100 * 200;\"));\n  writeln(g());\n\n  alias ixiy = Tuple!(int, \"x\", int, \"y\");\n  alias ii   = Tuple!(int, int);\n\n  mixin(generateFunction!(ii, [\"x\", \"y\"])(\"Z1\", \"return x * y;\"));\n  Z1(20, 20).writeln;\n\n  mixin(generateFunction!(ixiy)(\"Z2\", \"return x * y;\"));\n  Z2(30, 30).writeln;\n\n  mixin(\"auto dlg = \" ~ generateDelegate(`return \"abc\";`));\n  writeln(dlg());\n}\n\n\n\u3048\u3063\u3068... \u6c17\u304c\u3064\u3044\u305f\u3089\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u5b8c\u6210\u3057\u3066\u3044\u305f...\n\u3053\u308c\u306f\u6c4e\u7528\u7684\u306a\u95a2\u6570\u3068delegate\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7fa4\u3067\u3042\u308b\u3002\n\u4f7f\u3044\u65b9\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u901a\u308a\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067enum\u306a\u5024\u3092\u3084\u308a\u53d6\u308a\u3057\u3066\u3044\u308b\u306e\u306fCTFE\u306e\u305f\u3081\u3002\n\u3053\u306e\u4f8b\u306f\u308f\u304b\u308a\u306b\u304f\u3044(\u3044\u304d\u306a\u308a\u5fdc\u7528\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f)\u306e\u3067\u3001\u5225\u306e\u4f8b\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u62d9\u4f5c\u306eJSON\u30d1\u30fc\u30b5\u30fc\u3067D\u5074\u306e\u5185\u90e8\u8868\u73fe\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u969b\u306b\u3082mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3002\nprivate static genSetValueString(T, alias R, alias L, R2)() {\n    return \"void setValue(\" ~ T.stringof ~ \" value) {\"\n         ~ \"this.type        = JSONNodeValueType.\" ~ R.stringof ~ \";\"\n         ~ \"this.\" ~ L.stringof ~ \" = new \" ~ R2.stringof ~ \"(value);\"\n         ~ \"}\";\n  }\n\n  private static genSetValueString(T, alias R, alias L)() {\n    return \"void setValue(\" ~ T.stringof ~ \" value) {\"\n         ~ \"this.type        = JSONNodeValueType.\" ~ R.stringof ~ \";\"\n         ~ \"this.\" ~ L.stringof ~ \" = value;\"\n         ~ \"}\";\n  }\n\n  mixin(genSetValueString!(float,  JSONNodeValueType.Numeric, jsonNumeric, JSONNumeric));\n  mixin(genSetValueString!(string, JSONNodeValueType.String,  jsonString,  JSONString));\n  mixin(genSetValueString!(bool,   JSONNodeValueType.Boolean, jsonBoolean, JSONBoolean));\n  void setValue(JSONNULL   value) { this.type = JSONNodeValueType.NULL; }\n  mixin(genSetValueString!(JSONArray,  JSONNodeValueType.Array,      jsonArray));\n  mixin(genSetValueString!(JSONObject, JSONNodeValueType.JSONObject, jsonObject));\n\n\u30af\u30e9\u30b9\u306esetter\u3068\u304bgetter\u3092\u66f8\u304f\u5834\u5408\u306b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3060\u3068\u601d\u3046\u3002\n\u4e0a\u3067\u65e2\u306b\u9759\u7684\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u6587\u5b57\u5217mixin\u3092\u5fdc\u7528\u3057\u305f\u4f8b\u3092\u63d0\u793a\u3057\u3066\u3057\u307e\u3063\u305f\u305f\u3081(\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u6587\u5b57\u5217mixin)\u3001\u3055\u3089\u306a\u308b\u5fdc\u7528\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u304c\u305d\u306e\u4ed6\u306e\u4f8b\u3068\u3057\u3066\u7121\u540d\u30af\u30e9\u30b9\u3092\u6587\u5b57\u5217mixin\u3067\u5b9f\u73fe\u3057\u3066\u307f\u305f\u4f8b\u3068\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6700\u5f8c\u306b\u4ed8\u9332\u3068\u3057\u3066\u63b2\u8f09\u3059\u308b\u3002\n\n\u7121\u540d\u30af\u30e9\u30b9\u3092\u6587\u5b57\u5217mixin\u3067\u5b9f\u73fe\u3059\u308b\u4f8b\nimport std.algorithm,\n       std.typecons,\n       std.string,\n       std.array,\n       std.range,\n       std.conv;\n\nprivate class EmptyArgument {}\n\nprivate template AnonymousClassImpl(\n    string BaseClassName,\n    string bodyString,\n    alias  arguments = tuple()\n  ) {\n  enum AnonymousClassImpl = () {\n\n    string generateString(\n          string parameters      = null,\n          string argumentLabels  = null,\n          string argumentValues  = null\n        ) {\n      if (\n          parameters     !is null\n       && argumentLabels !is null\n       && argumentValues !is null) {\n        return \n          \"{\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this(\" ~ parameters ~ \") {\"\n        ~       \"super(\" ~ argumentLabels ~ \");\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n        ~ \"}()\";\n      } else {\n        return \n          \"{\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this() {\"\n        ~       \"super();\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain();\"\n        ~ \"}()\";\n      }\n    }\n\n    static if (arguments.length == 0) {\n      return generateString;\n    } else {\n      immutable types = {\n        string temp;\n\n        foreach (i, argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n        }\n\n        return temp;\n      }().split(\",\");\n      immutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n      immutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n      immutable parameters = {\n        string temp;\n\n        foreach (i, argument; arguments) {\n          temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ argumentLabels[i];\n        }\n\n        return temp;\n      }();\n\n      return generateString(\n            parameters,\n            argumentLabels.join(\",\"),\n            argumentValues\n          );\n    }\n  }();\n}\n\nauto AnonymousClass(\n      string BaseClassName,\n      string bodyString,\n      alias  arguments = tuple()\n    )() {\n  static if (arguments.length == 0) {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString));\n  } else {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString, arguments));\n  }\n}\n\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n  void func() {}\n}\n\nvoid main() {\n  T1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      },\n      tuple(\"T2\"));\n  Tx1 tx = AnonymousClass!(\"Tx1\", q{\n      override void func() {\n          writeln(\"Overrided Tx2.func!\");\n      }\n    });\n\n  t.func;\n  tx.func;\n}\n\n\n\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\nimport std.algorithm,\n       std.conv,\n       std.range,\n       std.traits;\n\ntemplate curry(alias func){ \n  immutable lambdaStr = {\n    alias argsintuple = ParameterTypeTuple!func;\n    enum  lamArgs     = argsintuple.length.iota.map!(i => \"arg\" ~ i.to!string);\n    string temp;\n\n    foreach(i, e; argsintuple) {\n      temp ~= \"(\" ~ e.stringof ~ \" \" ~ lamArgs[i] ~ \") => \";\n    }\n\n    return temp ~ \"func(\" ~ lamArgs.join(\", \") ~ \")\";\n  }();\n\n  enum curry = mixin(lambdaStr);\n}\n\nint f(int x, int y, int z) {\n  return x * y * z;\n}\n\nvoid main() {\n  import std.stdio;\n  writeln(curry!f(1)(2)(3) == 6);\n}\n\n\nD\u8a00\u8a9e\u306b\u306f`\u6587\u5b57\u5217mixin`\u3068\u3044\u3046\u6a5f\u80fd\u304c\u3042\u308b\u3002\n\u3053\u308c\u306f\u3001\u52d5\u7684\u306a\u8a00\u8a9e\u306b\u304a\u3051\u308beval\u95a2\u6570\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002\u3064\u307e\u308a\u3001\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217(D\u8a00\u8a9e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u59a5\u5f53\u306a\u30b3\u30fc\u30c9(\u3053\u308c\u306f\u305d\u306e\u5834\u306b\u5b9f\u969b\u306b\u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3057\u305f\u5834\u5408\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u53ef\u80fd\u3067\u3042\u308b\u3053\u3068\u3092\u610f\u5473\u3059\u308b\u3002\n\u4e00\u3064\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001D\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u59a5\u5f53\u3067\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u306f\u3001D\u8a00\u8a9e\u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u3044\u308b\u3053\u3068\u3067\u3042\u308a\u3001\u30a8\u30e9\u30fc\u304c\u8d77\u304d\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u306a\u3044\u3002\n\u3082\u3061\u308d\u3093\u3001\u9759\u7684\u306a\u7bc4\u56f2\u3067\u306f\u901a\u5e38\u306eD\u306e\u30b3\u30fc\u30c9\u3057\u3066\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u306f\u884c\u308f\u308c\u308b\u304c\u3001\u52d5\u7684\u306a\u30a8\u30e9\u30fc\u306b\u3064\u3044\u3066\u306f\u3001\u666e\u901a\u306eD\u30b3\u30fc\u30c9\u3068\u540c\u69d8\u3001\u5b9f\u884c\u6642\u306b\u3057\u304b\u767a\u751f\u3057\u306a\u3044)\u3002\n\u305f\u3060\u3057\u3001D\u8a00\u8a9e\u306f\u5f37\u3044\u9759\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u3067\u3042\u308b\u304b\u3089\u3001\u5168\u3066\u306e\u578b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6c7a\u5b9a\u3055\u308c\u308b\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u4e0e\u3048\u3089\u308c\u305f\u6587\u5b57\u5217\u304c\u6c7a\u5b9a\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\n\u3064\u307e\u308a\u3001\u52d5\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u306e\u3088\u3046\u306b\u6a19\u6e96\u5165\u529b\u3092eval\u3059\u308b\u3068\u3044\u3046\u3088\u3046\u306a\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002\n\u6587\u5b57\u5217mixin\u306b\u306f\u5e7e\u3064\u304b\u306e\u4f7f\u3044\u65b9\u304c\u3042\u308b\u3002\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3082\u3088\u304f\u4f7f\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3042\u308b\u304c\u3001\u3042\u308b\u610f\u5473C\u8a00\u8a9e\u306e\u30de\u30af\u30ed\u7684\u306a\u4f7f\u3044\u65b9\u3082\u53ef\u80fd\u3067\u3042\u308b\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3068\u30de\u30af\u30ed\u7684\u306a\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3092\u884c\u3046\u3002\n\n##\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\n\u8a55\u4fa1\u5f0f\u3068\u3044\u3046\u306e\u3092\u3001\u6761\u4ef6\u5f0f\u3068\u8aad\u307f\u66ff\u3048\u3066\u3082\u826f\u3044\u3002\u5373\u3061\u3001`a < b`, `a == b`\u306a\u3069\u3068\u3044\u3063\u305f\u3088\u3046\u306a\u3082\u306e\u3067\u3042\u308b\u3002\n\u8a55\u4fa1\u5f0f\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u3068\u4f55\u304c\u5b09\u3057\u3044\u306e\u3060\u308d\u3046\u3002\u305d\u306e\u7b54\u3048\u306f\u95a2\u6570\u3092\u6c4e\u7528\u7684\u306b\u6271\u3046\u3053\u3068\u3001\u3059\u306a\u308f\u3061\u62bd\u8c61\u5316\u51fa\u6765\u308b\u3068\u3044\u3046\u3053\u3068\u306b\u3042\u308b\u3002\n\n\u305f\u3068\u3048\u3070\u30012\u9805\u6f14\u7b97(\u5f15\u304d\u6570\u304c2\u3064\u306e\u624b\u7d9a\u304d)\u3092\u884c\u3046`binFun`\u3092\u8003\u3048\u3066\u307f\u3088\u3046\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u6700\u3082\u7c21\u5358\u304b\u3064\u8eab\u8fd1\u3067\u3042\u308a\u306a\u304c\u3089\u3001\u3042\u307e\u308a\u591a\u304f\u306e\u4eba\u304c2\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u624b\u7d9a\u304d\u3068\u3057\u3066\u610f\u8b58\u3057\u3066\u3044\u308b\u3053\u3068\u306f\u5c11\u306a\u3044\u3067\u3042\u308d\u3046\u6f14\u7b97\u3068\u3044\u3048\u3070\u3001\u56db\u5247\u6f14\u7b97\u304c\u3042\u308b\u3060\u308d\u3046\u3002\n\u3059\u306a\u308f\u3061\u3001`a + b`, `a - b`, `a * b`, `a / b`\u3002\u3053\u3053\u3067\u306f\u3001\u3053\u306e\u56db\u5247\u6f14\u7b97\u3082\u95a2\u6570\u306e\u3088\u3046\u306b\u8003\u3048\u3088\u3046\u3002\n\u305d\u3046\u3059\u308b\u3068\u3001`+ (a, b)`, `- (a, b)`, `* (a, b)`, `/ (a, b)`\u5de6\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u3001\u30dd\u30fc\u30e9\u30f3\u30c9\u8a18\u6cd5\u3067\u4e0a\u306e\u5f0f\u3092\u66f8\u304d\u76f4\u3057\u305f\u3088\u3046\u306a\u611f\u3058\u306b\u306a\u308b\u3002\u3053\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u3001\u56db\u5247\u6f14\u7b97\u30922\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u624b\u7d9a\u304d\u3068\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3060\u308d\u3046\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u304a\u3044\u3066\u4e00\u822c\u7684\u306a2\u5f15\u304d\u6570\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u5834\u5408\u306b\u306f\u30012\u3064\u306e\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570`f`,`g`\u304c\u3042\u308b\u3068\u3057\u3066`f (a, b)`, `g (a, b)`\u3068\u3057\u3066\u3088\u3073\u3060\u3059\u3060\u308d\u3046\u3002\n\n\u3055\u3066\u30012\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3092\u62bd\u8c61\u5316\u3057\u3088\u3046\u30022\u3064\u306e\u9805\u3092\u5f15\u6570\u306b\u53d6\u308b\u95a2\u6570\u3092F\u3068\u3057\u3001\u305d\u306e\u5f15\u304d\u6570\u3068\u306a\u308b\u9805\u3092`a, b`\u3068\u3059\u308b\u3002\n\u62bd\u8c61\u5316\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```d\nimport std.traits;//ReturnType, isCallable\n\nReturnType!f binFun(alias f, T, U)(T a, U b) if (isCallable!f){\n  return f(a, b);\n}\n\nunittest {\n  int f(int a, int b) {\n    return a * b;\n  }\n\n  string g(string a, string b) {\n    return a ~ b;\n  }\n\n\n  assert (binFun!f(10, 20) == 200);\n  assert (binFun!g(\"abc\", \"def\") == \"abcdef\");\n}\n```\n\n\u3055\u3066\u3001\u3053\u3053\u3067\u4e00\u3064\u554f\u984c\u304c\u751f\u305a\u308b\u3002\n\n\u5148\u307b\u3069\u3001\u50d5\u306f\u56db\u5247\u6f14\u7b97\u3092\u95a2\u6570\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u307f\u305f\u304c\u3001\u3053\u308c\u3092D\u306e\u30b3\u30fc\u30c9\u3067\u3084\u308d\u3046\u3068\u3059\u308b\u3068\u5931\u6557\u3059\u308b\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001`binFun!+(10, 20) == 30`\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u3068\u3057\u3066\u59a5\u5f53\u306a\u30b3\u30fc\u30c9\u3067\u306f\u306a\u3044\u3002\n\u3068\u3044\u3046\u306e\u3082\u3001D\u8a00\u8a9e\u3067\u306f`+,-,*,/`\u306f\u95a2\u6570\u3068\u3057\u3066\u306f\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u3002\u3088\u3063\u3066\u3001`+`\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5f15\u304d\u6570\u3068\u3057\u3066\u306f\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3002\u3067\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u89e3\u6c7a\u3059\u308c\u3070\u3088\u3044\u306e\u3060\u308d\u3046\u304b\u3002\n\n\u3053\u3053\u3067\u3001\u30e9\u30e0\u30c0\u5f0f(\u7121\u540d\u95a2\u6570)\u306e\u5229\u7528\u304c\u601d\u3044\u6d6e\u304b\u3076\u3053\u3068\u3060\u308d\u3046\u3002\n\u3059\u306a\u308f\u3061\u3001`binFun!+(10, 20)`\u306e\u304b\u308f\u308a\u306b\u3001  `binFun!((int a, int b) => a + b)(10, 20)`\u3068\u304b\u3051\u3070\u3088\u3044\u3002\n\n\u307e\u3060\u6587\u5b57\u5217mixin\u304c\u51fa\u3066\u304d\u3066\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u62bd\u8c61\u5316\u51fa\u6765\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u3066\u3044\u305f\u3060\u3051\u305f\u3060\u308d\u3046\u3002\n\n\u3055\u3066\u3001\u6b21\u306f\u6587\u5b57\u5217mixin\u3092\u7528\u3044\u305f\u8aac\u660e\u3092\u884c\u3046\u3002\n\n\u4e0a\u306e\u4f8b\u3067\u898b\u305f\u3088\u3046\u306b\u3001\u56db\u5247\u6f14\u7b97(\u3046\u3048\u3067\u306f\u8aac\u660e\u3057\u306a\u304b\u3063\u305f\u304c\u3001\u52a0\u3048\u3066\u6bd4\u8f03\u6f14\u7b97\u5b50\u3082\u540c\u69d8)\u3092\u8a55\u4fa1\u5f0f\u3068\u3057\u3066\u6e21\u3059\u5834\u5408\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u305b\u3070\u3001\u4e0a\u306e\u4f8b\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u305f\u3002\u3057\u304b\u3057\u3001\u88cf\u3092\u8fd4\u305b\u3070\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u305b\u306d\u3070\u306a\u3089\u306a\u3044\u3001\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u304b\u306d\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3042\u308b\u3002\nD\u8a00\u8a9e\u306b\u306f\u578b\u63a8\u8ad6\u3082\u3042\u308a\u3001\u9759\u7684\u306a\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3082\u53ef\u80fd\u306a\u8a00\u8a9e\u3067\u3042\u308b\u305f\u3081\u3001\u6587\u5b57\u5217mixin\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u30e9\u30e0\u30c0\u5f0f\u306e\u4ee3\u308f\u308a\u306b\u3001\u8a55\u4fa1\u5f0f\u305d\u306e\u3082\u306e\u3092\u6e21\u3059\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u306e\u3060\u3002\n\u307e\u3060\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u6b21\u306b\u66f8\u304f\u30b3\u30fc\u30c9\u306f\u73fe\u6642\u70b9\u3067\u306f\u52d5\u304b\u306a\u3044\u304c\u3001\u3053\u306e\u3088\u3046\u306a\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b:\n`binFun!\"a + b\"(10, 20) == 30`\n\n\u3067\u306f\u3001\u5b9f\u88c5\u3092\u884c\u304a\u3046\u3002\nD\u8a00\u8a9e\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u578b\u63a8\u8ad6\u3092\u6d3b\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u4e0a\u306e\u30b3\u30fc\u30c9\u304c\u5b9f\u73fe\u53ef\u80fd\u306b\u306a\u308b\u3002\n\n\u5b9f\u88c5\u306f\u6b21\u306e\u901a\u308a:\n\n```d\nauto binFun(string s, T, U)(T a, U b) if (is(typeof(mixin(s)))) {\n  return mixin(s);\n}\n```\n\n\u3053\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u3059\u308b\u3053\u3068\u3067\u3001`binFun!\"a + b\"`\u3068\u3044\u3046\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002\n\u3058\u3064\u306f\u3001\u4e0a\u306b\u66f8\u3044\u305f\u3088\u3046\u306a`binFun`\u3068\u540c\u3058\u3088\u3046\u306b\u52d5\u304f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304cD\u8a00\u8a9e\u306e\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067`std.functional.binaryFun`\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002\n\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u3044\u3053\u3046\u3002\n\u307e\u305a\u3001binFun\u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3068\u3057\u3066(\u6587\u5b57\u5217s, \u578bT, \u578bU)\u3092\u8981\u6c42\u3059\u308b\u3002\u8981\u6c42\u3068\u66f8\u3044\u305f\u304c\u3001\u63a8\u8ad6\u53ef\u80fd\u306a\u578b\u306b\u95a2\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306f\u7701\u7565\u53ef\u80fd\u306a\u306e\u3067\u3001\u5b9f\u8cea\u7684\u306b\u6587\u5b57\u5217s\u3092\u6e21\u3059\u3053\u3068\u3067\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306e\u90e8\u5206\u306f\u89e3\u6c7a\u3059\u308b\u3002\n\u307e\u305f\u3001binFun\u306f\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306a\u306e\u3067\u3001\u95a2\u6570\u3068\u3057\u3066\u306e\u5f15\u6570\u3082\u8981\u6c42\u3057\u3001\u305d\u308c\u306f(T\u578b\u306ea, U\u578b\u306eb)\u3067\u3042\u308b\u3002\n\u305d\u3057\u3066\u3001\u305d\u306e\u5f8c\u306b\u7d9a\u304fif\u306f`TemplateConstraint`\u3068\u3088\u3070\u308c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u306b\u5bfe\u3059\u308b\u5236\u7d04\u3092\u8ab2\u3059\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u5236\u7d04\u3068\u306fif\u306e\u4e2d\u306e\u5f0f\u3067\u3042\u308b\u3002\n\u534a\u3070\u30a4\u30c7\u30a3\u30aa\u30e0\u7684\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u304c`is(typeof(expr))`\u3068\u306f\u3001expr\u304cD\u8a00\u8a9e\u3068\u3057\u3066\u59a5\u5f53\u306a\u5f0f\u3067\u3042\u308b\u5834\u5408\u306b\u3001true\u3092\u8fd4\u3059\u3002\u3053\u3053\u3067\u306f\u3001s\u3068\u3044\u3046\u6587\u5b57\u5217\u3067\u4e0e\u3048\u3089\u308c\u305f\u5f0f\u304cD\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u89e3\u91c8\u53ef\u80fd\u304b\u3092\u5224\u65ad\u3057\u3066\u3044\u308b\u3002\u3053\u3053\u3067\u3088\u3046\u3084\u304fmixin\u304c\u767b\u5834\u3059\u308b\u3002\n\u4e0a\u3067\u8ff0\u3079\u305f\u3088\u3046\u306b\u3001\u6587\u5b57\u5217mixin\u306f\u305d\u306e\u5834\u306b\u6587\u5b57\u5217\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3088\u3063\u3066\u3001`binFun!\"a+b\"`\u3068\u66f8\u3044\u305f\u5834\u5408\u3001`if(is(typeof(a + b)))`\u3068\u3044\u3046\u3088\u3046\u306b\u5c55\u958b\u3055\u308c\u308b\u3002\n\u3053\u3053\u3067\u30012\u3064\u306e\u5909\u6570\u3092\u8db3\u3059\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u306e\u5f0f\u3068\u3057\u3066\u59a5\u5f53\u3067\u3042\u308b\u305f\u3081\u3001`a + b`\u3068\u3044\u3046\u30b3\u30fc\u30c9\u306fD\u8a00\u8a9e\u306e\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306f\u59a5\u5f53\u3067\u3042\u308b\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u306f\u3001`typeof(expr)`\u306fexpr\u306e`\u578b`\u3092\u8fd4\u3059\u3002\u3088\u3063\u3066\u3053\u3053\u3067\u306f`a + b`\u306e\u578b\u3092\u8fd4\u3059\u3002\u305d\u3057\u3066\u3001\u305d\u306e\u65b9\u304c\u59a5\u5f53\u3067\u3042\u308b\u5834\u5408is\u304c\u771f\u3092\u8fd4\u3059\u3002\u3042\u304f\u307e\u3067\u3082Template Constraint\u306b\u306f\u578b\u306b\u95a2\u3059\u308b\u6761\u4ef6\u306e\u307f\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3088\u3063\u3066\u3001\u305d\u306e\u5909\u6570\u306e\u5024\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044(a * b < 20\u307f\u305f\u3044\u306a\u5f0f\u306f\u66f8\u304f\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u3068\u3044\u3046\u3053\u3068)\u3002\u7406\u7531\u306f\u5358\u7d14\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u306a\u3044\u304b\u3089\u3060\u3002\n\nTemplate Constraint\u306e\u5834\u6240\u3068\u540c\u69d8\u306b\u3001\u95a2\u6570\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u672c\u4f53\u3001return\u306e\u3068\u3053\u308d\u306b\u3082`mixin(s)`\u3068\u3042\u308b\u304c\u3001\u3053\u3053\u3082\u540c\u69d8\u306b`a + b`\u3068\u5c55\u958b\u3055\u308c\u308b\u3002\n\nD\u8a00\u8a9e\u306e\u591a\u304f\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u5148\u307b\u3069\u306e\u6587\u5b57\u5217\u3092\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5f15\u6570\u3067\u6e21\u3059\u3053\u3068\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002\n\u3068\u304f\u306b\u3001`std.algorithm`\u306e\u95a2\u6570\u3092\u4f7f\u3046\u6642\u306f\u6709\u7528\u3067\u3042\u308b\u3002\n\u4f8b\u3048\u3070\u3001`std.algorithm.iteration`\u306e`map`\u3084`filter`\u306a\u3069\u983b\u51fa\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f\u975e\u5e38\u306b\u6709\u7528\u3060\u3002\n\n```d\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nvoid main() {\n  /*\n    N.iota\u306f[0, N)\n  */\n  //E = {a | 0 <= a< 100, a %2 == 0}\n  writeln(100.iota.filter!\"!(a%2)\");\n  //O = {a | 0 <= a< 100, a %2 == 1}\n  writeln(100.iota.filter!\"a%2\");\n}\n```\n\n\u4e00\u3064\u3060\u3051\u6ce8\u610f\u304c\u5fc5\u8981\u306a\u306e\u306f\u3001\u6587\u5b57\u5217\u3068\u3057\u3066\u6e21\u3059\u8a55\u4fa1\u5f0f\u306b\u65e2\u5b58\u306e\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u3092\u542b\u3081\u308b\u3053\u3068\u306f\u51fa\u6765\u306a\u3044\u3002\n\u305f\u3068\u3048\u3070\u3001\n\n```d\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nbool f(int x) {\n  return true;\n}\n\nvoid main() {\n  writeln(100.iota.filter!\"f(a)\");\n}\n```\n\n\u3053\u308c\u3092\u3059\u308b\u3068f\u304cundefined\u3068\u306a\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u3002\n\u3053\u306e\u5834\u5408\u306f\n\n```d\nimport std.algorithm,//filter\n       std.range,//iota\n       std.stdio;\n\nbool f(int x) {\n  return true;\n}\n\nvoid main() {\n  writeln(100.iota.filter!(x => f(a)));\n}\n```\n\n\u3068\u30e9\u30e0\u30c0\u5f0f\u3092\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u3001\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u3088\u3046\u306a\u95a2\u6570\u3092\u9ad8\u968e\u95a2\u6570\u3068\u3044\u3046\u3002\u95a2\u6570\u3092\u9ad8\u968e\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Flexible\u306b\u3057\u3001\u62bd\u8c61\u5316\u3092\u3082\u305f\u3089\u3057\u3001\u518d\u5229\u7528\u6027\u304c\u5411\u4e0a\u3059\u308b\u3002\n\n\n##\u6587\u5b57\u5217mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u3046\n\u3053\u3053\u307e\u3067\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308b\u3068\u3001mixin\u304c\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u306f\u7406\u89e3\u3057\u3066\u3044\u305f\u3060\u3051\u305f\u3060\u308d\u3046\u3002\n\u3055\u3066\u3001\u6587\u5b57\u5217mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u304a\u3046\u3002\n\u3064\u307e\u308a\u3001\u3042\u3068\u3067mixin\u3059\u308b\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308bCTFE\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u6570\u3092\u4f5c\u308c\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3068\u4f55\u304c\u5b09\u3057\u3044\u304b\u306b\u3064\u3044\u3066\u3001\u8272\u3005\u3068\u4f8b\u3092\u4e0a\u3052\u3066\u307f\u3088\u3046\u3002\u305d\u3057\u3066\u6700\u5f8c\u306b\u3001\u6587\u5b57\u5217mixin\u3092\u5fdc\u7528\u3057\u305f\u4f8b\u3068\u3057\u3066\u7121\u540d\u30af\u30e9\u30b9(D\u8a00\u8a9e\u306b\u3082\u7121\u540d\u30af\u30e9\u30b9\u306f\u5b58\u5728\u3059\u308b)\u3092\u5b9f\u73fe\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3068\u3001\u3055\u3089\u306b\u9759\u7684\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u6d3b\u7528\u3057\u305f\u4f8b\u3068\u3057\u3066\u3001\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306b\u3064\u3044\u3066\u8aac\u660e\u3059\u308b\u3002\n\n\u7c21\u5358\u306a\u4f8b\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\n```d\nimport std.stdio;\n\nstring generateFunction_0(string funcName, string functionBody) {\n  return\n    \"auto \" ~ funcName ~ \"() {\"\n    ~ functionBody\n  ~ \"}\";\n}\n\nmixin(generateFunction_0(\"f\", \"return 100 * 200;\"));\n\nvoid main() {\n  writeln(f);\n}\n```\n\n\u3053\u308c\u306f\u3001\u5f15\u304d\u6570\u3092\u53d6\u3089\u306a\u3044\u95a2\u6570\u306e\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u3042\u308a\u3001\u305d\u306e\u95a2\u6570\u304c\u8fd4\u3059\u6587\u5b57\u5217\u3092mixin\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u95a2\u6570`f`\u3092\u751f\u6210\u3057\u3001mixin\u3067\u305d\u308c\u3092\u5b9f\u4f53\u5316\u3057\u3066\u3044\u308b\u3002\n\u3082\u3061\u308d\u3093\u3001UFCS\u304c\u4f7f\u3048\u308b\u304b\u3089\n\n```d\n\"g\".generateFunction_0(\"return 100 * 200;\")\n```\n\u3068\u3044\u3046\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3060\u3063\u3066\u51fa\u6765\u308b\u306e\u3060\u3002\n\n\u3055\u3066\u3001\u3053\u308c\u3092\u5f15\u304d\u6570\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u6c4e\u7528\u7684\u306a\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u3002\n\n\n```d:generateFunction.d\nimport std.stdio;\nimport std.algorithm,\n       std.typecons,\n       std.array,\n       std.conv;\n\nstatic string generateFunction(string funcName, string functionBody) {\n  return\n    \"auto \" ~ funcName ~ \"() {\"\n    ~ functionBody\n  ~ \"}\";\n}\n\nstatic string generateFunction(ArgsList)(string funcName, string functionBody) {\n  static if ({\n    foreach (field; ArgsList.fieldNames) {\n      if (field == \"\") {\n        throw new Error(\"Invalid ArgsList was given\");\n      }\n    }\n\n    return true;\n  }()) {\n    enum argsLabels = {\n      string[] argsLabels;\n\n      foreach (field; ArgsList.fieldNames)\n        argsLabels ~= field;\n\n      return argsLabels;\n    }();\n\n    return generateFunction!(ArgsList, argsLabels)(funcName, functionBody);\n  }\n}\n\nstatic string generateFunctionParameters(ArgsList, string[] argsLabels)() {\n  enum types = {\n    string temp;\n\n    foreach (i, type; ArgsList.Types) {\n      temp ~= (i ? \",\" : \"\") ~ type.stringof;\n    }\n\n    return temp;\n  }().split(\",\");\n\n  enum parameters = {\n    string temp;\n\n    foreach (i, argLabel; argsLabels) {\n      temp ~= (i ? \", \" : \"\") ~ types[i] ~ \" \" ~ argLabel;\n    }\n\n    return temp;\n  }();\n\n  return parameters;\n}\n\nstatic string generateDelegate(string functionBody) {\n  return \"{\" ~ functionBody ~ \"};\";\n}\n\nstatic string generateDelegate(ArgsList, string[] argsLabels)(string functionBody) {\n  enum parameters = generateFunctionParameters!(ArgsList, argsLabels);\n\n  return \"(\" ~ parameters ~ \") {\"\n        ~  functionBody\n        ~ \"}\";\n}\n\nstatic string generateFunction(ArgsList, string[] argsLabels)(string funcName, string functionBody) {\n  return \"auto \" ~ funcName ~ generateDelegate!(ArgsList, argsLabels)(functionBody);\n}\n\nvoid main() {\n  mixin(generateFunction(\"f\", \"return 100 * 200;\"));\n  writeln(f());\n  mixin(\"g\".generateFunction(\"return 100 * 200;\"));\n  writeln(g());\n\n  alias ixiy = Tuple!(int, \"x\", int, \"y\");\n  alias ii   = Tuple!(int, int);\n\n  mixin(generateFunction!(ii, [\"x\", \"y\"])(\"Z1\", \"return x * y;\"));\n  Z1(20, 20).writeln;\n  \n  mixin(generateFunction!(ixiy)(\"Z2\", \"return x * y;\"));\n  Z2(30, 30).writeln;\n\n  mixin(\"auto dlg = \" ~ generateDelegate(`return \"abc\";`));\n  writeln(dlg());\n}\n```\n\n\u3048\u3063\u3068... \u6c17\u304c\u3064\u3044\u305f\u3089\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u5b8c\u6210\u3057\u3066\u3044\u305f...\n\u3053\u308c\u306f\u6c4e\u7528\u7684\u306a\u95a2\u6570\u3068delegate\u3092\u751f\u6210\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u7fa4\u3067\u3042\u308b\u3002\n\u4f7f\u3044\u65b9\u306f\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b\u901a\u308a\u3002\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067enum\u306a\u5024\u3092\u3084\u308a\u53d6\u308a\u3057\u3066\u3044\u308b\u306e\u306fCTFE\u306e\u305f\u3081\u3002\n\n\u3053\u306e\u4f8b\u306f\u308f\u304b\u308a\u306b\u304f\u3044(\u3044\u304d\u306a\u308a\u5fdc\u7528\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f)\u306e\u3067\u3001\u5225\u306e\u4f8b\u3092\u898b\u3066\u307f\u3088\u3046\u3002\n\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u62d9\u4f5c\u306eJSON\u30d1\u30fc\u30b5\u30fc\u3067D\u5074\u306e\u5185\u90e8\u8868\u73fe\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u3092\u5b9f\u88c5\u3057\u305f\u969b\u306b\u3082mixin\u3092\u30de\u30af\u30ed\u7684\u306b\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3002\n\n```d\nprivate static genSetValueString(T, alias R, alias L, R2)() {\n    return \"void setValue(\" ~ T.stringof ~ \" value) {\"\n         ~ \"this.type        = JSONNodeValueType.\" ~ R.stringof ~ \";\"\n         ~ \"this.\" ~ L.stringof ~ \" = new \" ~ R2.stringof ~ \"(value);\"\n         ~ \"}\";\n  }\n\n  private static genSetValueString(T, alias R, alias L)() {\n    return \"void setValue(\" ~ T.stringof ~ \" value) {\"\n         ~ \"this.type        = JSONNodeValueType.\" ~ R.stringof ~ \";\"\n         ~ \"this.\" ~ L.stringof ~ \" = value;\"\n         ~ \"}\";\n  }\n\n  mixin(genSetValueString!(float,  JSONNodeValueType.Numeric, jsonNumeric, JSONNumeric));\n  mixin(genSetValueString!(string, JSONNodeValueType.String,  jsonString,  JSONString));\n  mixin(genSetValueString!(bool,   JSONNodeValueType.Boolean, jsonBoolean, JSONBoolean));\n  void setValue(JSONNULL   value) { this.type = JSONNodeValueType.NULL; }\n  mixin(genSetValueString!(JSONArray,  JSONNodeValueType.Array,      jsonArray));\n  mixin(genSetValueString!(JSONObject, JSONNodeValueType.JSONObject, jsonObject));\n```\n  \n\u30af\u30e9\u30b9\u306esetter\u3068\u304bgetter\u3092\u66f8\u304f\u5834\u5408\u306b\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3060\u3068\u601d\u3046\u3002\n\n\n\u4e0a\u3067\u65e2\u306b\u9759\u7684\u30ea\u30d5\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u6587\u5b57\u5217mixin\u3092\u5fdc\u7528\u3057\u305f\u4f8b\u3092\u63d0\u793a\u3057\u3066\u3057\u307e\u3063\u305f\u305f\u3081(\u95a2\u6570\u3092\u751f\u6210\u3059\u308b\u6587\u5b57\u5217mixin)\u3001\u3055\u3089\u306a\u308b\u5fdc\u7528\u3068\u3044\u3046\u308f\u3051\u3067\u306f\u306a\u3044\u304c\u305d\u306e\u4ed6\u306e\u4f8b\u3068\u3057\u3066\u7121\u540d\u30af\u30e9\u30b9\u3092\u6587\u5b57\u5217mixin\u3067\u5b9f\u73fe\u3057\u3066\u307f\u305f\u4f8b\u3068\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6700\u5f8c\u306b\u4ed8\u9332\u3068\u3057\u3066\u63b2\u8f09\u3059\u308b\u3002\n\n####\u7121\u540d\u30af\u30e9\u30b9\u3092\u6587\u5b57\u5217mixin\u3067\u5b9f\u73fe\u3059\u308b\u4f8b\n\n```d\nimport std.algorithm,\n       std.typecons,\n       std.string,\n       std.array,\n       std.range,\n       std.conv;\n\nprivate class EmptyArgument {}\n\nprivate template AnonymousClassImpl(\n    string BaseClassName,\n    string bodyString,\n    alias  arguments = tuple()\n  ) {\n  enum AnonymousClassImpl = () {\n    \n    string generateString(\n          string parameters      = null,\n          string argumentLabels  = null,\n          string argumentValues  = null\n        ) {\n      if (\n          parameters     !is null\n       && argumentLabels !is null\n       && argumentValues !is null) {\n        return \n          \"{\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this(\" ~ parameters ~ \") {\"\n        ~       \"super(\" ~ argumentLabels ~ \");\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain(\" ~ argumentValues ~ \");\"\n        ~ \"}()\";\n      } else {\n        return \n          \"{\"\n        ~   \"class AnonymousClassMain : \" ~ BaseClassName ~ \"{\"\n        ~     \"this() {\"\n        ~       \"super();\"\n        ~     \"}\"\n        ~     bodyString\n        ~   \"}\"\n        ~   \"return new AnonymousClassMain();\"\n        ~ \"}()\";\n      }\n    }\n    \n    static if (arguments.length == 0) {\n      return generateString;\n    } else {\n      immutable types = {\n        string temp;\n\n        foreach (i, argument; arguments.Types) {\n          temp ~= (i ? \",\" : \"\") ~ argument.stringof;\n        }\n\n        return temp;\n      }().split(\",\");\n      immutable argumentLabels = arguments.length.iota.map!(i => \" arg\" ~ i.to!string).array;\n      immutable argumentValues = arguments.stringof.replace(\"Tuple\", \"\");\n      immutable parameters = {\n        string temp;\n\n        foreach (i, argument; arguments) {\n          temp ~= (i ? \",\" : \"\") ~ types[i].to!string ~ argumentLabels[i];\n        }\n\n        return temp;\n      }();\n\n      return generateString(\n            parameters,\n            argumentLabels.join(\",\"),\n            argumentValues\n          );\n    }\n  }();\n}\n\nauto AnonymousClass(\n      string BaseClassName,\n      string bodyString,\n      alias  arguments = tuple()\n    )() {\n  static if (arguments.length == 0) {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString));\n  } else {\n    return mixin(AnonymousClassImpl!(BaseClassName, bodyString, arguments));\n  }\n}\n\nimport std.stdio;\n\nclass T1 {\n  this(string v) {\n    writeln(\"T1! - \", v);\n  }\n\n  void func() {}\n}\n\nclass Tx1 {\n  this() {\n    writeln(\"Tx1\");\n  }\n  void func() {}\n}\n\nvoid main() {\n  T1 t = AnonymousClass!(\"T1\", q{\n        override void func() {\n          writeln(\"Overrided T2.func!\");\n        }\n      },\n      tuple(\"T2\"));\n  Tx1 tx = AnonymousClass!(\"Tx1\", q{\n      override void func() {\n          writeln(\"Overrided Tx2.func!\");\n      }\n    });\n\n  t.func;\n  tx.func;\n}\n```\n\n####\u4efb\u610f\u306e\u95a2\u6570\u3092\u30ab\u30ea\u30fc\u5316\u3059\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\n```d\nimport std.algorithm,\n       std.conv,\n       std.range,\n       std.traits;\n\ntemplate curry(alias func){ \n  immutable lambdaStr = {\n    alias argsintuple = ParameterTypeTuple!func;\n    enum  lamArgs \t  = argsintuple.length.iota.map!(i => \"arg\" ~ i.to!string);\n    string temp;\n    \n    foreach(i, e; argsintuple) {\n      temp ~= \"(\" ~ e.stringof ~ \" \" ~ lamArgs[i] ~ \") => \";\n    }\n \n    return temp ~ \"func(\" ~ lamArgs.join(\", \") ~ \")\";\n  }();\n \n  enum curry = mixin(lambdaStr);\n}\n\nint f(int x, int y, int z) {\n  return x * y * z;\n}\n\nvoid main() {\n  import std.stdio;\n  writeln(curry!f(1)(2)(3) == 6);\n}\n```\n"}