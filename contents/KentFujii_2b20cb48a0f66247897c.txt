{"context": "\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3044\u3064\u3082\u306emocha\u30b3\u30de\u30f3\u30c9\u3092\nmocha --compilers js:babel-core/register\n\n\u3068\u3059\u308c\u3070\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u304c\u8d70\u3063\u3066ES6\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\n\n\u4f8b\n\u4f8b\u3048\u3070\u3053\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\n\nReceiveParameter.es6\n\nexport default class RecieveParameter {\n  constructor(e) {\n    const req = JSON.parse(e.postData.contents);\n    const payload = req.payload;\n    this.status = payload.status;\n    this.subject = payload.subject;\n    this.build_url = payload.build_url;\n    this.branch = payload.branch;\n    this.reponame = payload.reponame;\n    this.username = payload.username;\n  }\n\n  returnParams() {\n    return {\n      status: this.status,\n      subject: this.subject,\n      build_url: this.build_url,\n      branch: this.branch,\n      reponame: this.reponame,\n      username: this.username,\n    };\n  }\n}\n\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\nReceiveParameterSpec.es6\n\nimport chai from 'chai';\nimport ParameterClass from 'ReceiveParameter';\nlet should = chai.should();\n// import {should, expect} from 'chai';\n\ndescribe('ParameterClass', () => {\n  const contents = {\n    payload: {\n      status: 'fixed',\n      subject: '',\n      build_url: '',\n      branch: '',\n      reponame: '',\n      username: ''\n    }\n  };\n  const request = {\n    postData: {\n      contents: JSON.stringify(contents)\n    }\n  };\n  let params;\n\n  beforeEach(() => {\n    params = new ReceiveParameter(request);\n  });\n\n  context('this is first test script.', () => {\n    it('test!', () => {\n      const result = params.returnParams();\n      result.status.should.equal('fixed');\n    });\n  });\n});\n\n\n\n\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u3082import\u306e\u69d8\u306aes6\u69cb\u6587\u304c\u4f7f\u3048\u307e\u3059\u3002\n\u3042\u3068\u306fmocha\u3068chai\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\nmocha --compilers js:babel-core/register\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001babel\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\u81ea\u5206\u306e\u5834\u5408\u3001babel-preset-latest\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\nes6\u306b\u3088\u308aJavaScript\u304c\u3088\u308aOOP\u3057\u3084\u3059\u3044\u8a00\u8a9e\u3068\u306a\u308a\u3001\u30c6\u30b9\u30c8\u30fb\u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\u3068\u76f8\u6027\u304c\u3088\u304f\u306a\u3063\u305f\u5370\u8c61\u3067\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\n\nProblem: Instructions on mocha testing integration no longer correct with babel 6\nBabel6\u3067Mocha\u3068Chai\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u66f8\u304f\nMocha + Chai.js unit testing for ES6 with Istanbul code coverage\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3044\u3064\u3082\u306emocha\u30b3\u30de\u30f3\u30c9\u3092\n\n```\nmocha --compilers js:babel-core/register\n```\n\n\u3068\u3059\u308c\u3070\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u304c\u8d70\u3063\u3066ES6\u3092\u30c6\u30b9\u30c8\u3067\u304d\u307e\u3059\u3002\n\n## \u4f8b\n\n\u4f8b\u3048\u3070\u3053\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u3068\u3057\u307e\u3059\n\n```ReceiveParameter.es6\n\nexport default class RecieveParameter {\n  constructor(e) {\n    const req = JSON.parse(e.postData.contents);\n    const payload = req.payload;\n    this.status = payload.status;\n    this.subject = payload.subject;\n    this.build_url = payload.build_url;\n    this.branch = payload.branch;\n    this.reponame = payload.reponame;\n    this.username = payload.username;\n  }\n\n  returnParams() {\n    return {\n      status: this.status,\n      subject: this.subject,\n      build_url: this.build_url,\n      branch: this.branch,\n      reponame: this.reponame,\n      username: this.username,\n    };\n  }\n}\n\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u4ee5\u4e0b\u3068\u306a\u308a\u307e\u3059\u3002\n\n```ReceiveParameterSpec.es6\n\nimport chai from 'chai';\nimport ParameterClass from 'ReceiveParameter';\nlet should = chai.should();\n// import {should, expect} from 'chai';\n\ndescribe('ParameterClass', () => {\n  const contents = {\n    payload: {\n      status: 'fixed',\n      subject: '',\n      build_url: '',\n      branch: '',\n      reponame: '',\n      username: ''\n    }\n  };\n  const request = {\n    postData: {\n      contents: JSON.stringify(contents)\n    }\n  };\n  let params;\n\n  beforeEach(() => {\n    params = new ReceiveParameter(request);\n  });\n\n  context('this is first test script.', () => {\n    it('test!', () => {\n      const result = params.returnParams();\n      result.status.should.equal('fixed');\n    });\n  });\n});\n\n```\n\n\u30c6\u30b9\u30c8\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u3082`import`\u306e\u69d8\u306aes6\u69cb\u6587\u304c\u4f7f\u3048\u307e\u3059\u3002\n\n\u3042\u3068\u306f`mocha`\u3068`chai`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\n\n```\nmocha --compilers js:babel-core/register\n```\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u306f\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u306e\u3067\u3001babel\u306e\u8a2d\u5b9a\u3092\u5fd8\u308c\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\n\n\u81ea\u5206\u306e\u5834\u5408\u3001`babel-preset-latest`\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\n\nes6\u306b\u3088\u308aJavaScript\u304c\u3088\u308aOOP\u3057\u3084\u3059\u3044\u8a00\u8a9e\u3068\u306a\u308a\u3001\u30c6\u30b9\u30c8\u30fb\u632f\u308b\u821e\u3044\u99c6\u52d5\u958b\u767a\u3068\u76f8\u6027\u304c\u3088\u304f\u306a\u3063\u305f\u5370\u8c61\u3067\u3059\u3002\n\n## \u53c2\u8003\u6587\u732e\n\n* [Problem: Instructions on mocha testing integration no longer correct with babel 6](https://github.com/babel/babel/issues/2685)\n* [Babel6\u3067Mocha\u3068Chai\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u3092\u66f8\u304f](http://qiita.com/ymdu/items/9885c9e126648cd8c5e3)\n* [Mocha + Chai.js unit testing for ES6 with Istanbul code coverage](https://onsen.io/blog/mocha-chaijs-unit-test-coverage-es6/)\n", "tags": ["mocha", "chai", "es6", "babel", "JavaScript"]}