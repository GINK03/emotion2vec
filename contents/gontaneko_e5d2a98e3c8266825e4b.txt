{"context": " More than 1 year has passed since last update.\u4f59\u3063\u3066\u3044\u308b32bit\u30d1\u30bd\u30b3\u30f3\u306bDocker\u74b0\u5883\u3092\u4f5c\u3063\u3066\u3001Mattermost\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u524d\u63d0\n\n32bit Windows\u30d1\u30bd\u30b3\u30f3\u3057\u304b\u4f59\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3002\nVirtual Box\u306f\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n\nUbuntu Server 14.04\u3067\u4eee\u60f3\u30b5\u30fc\u30d0\u7acb\u3066\u307e\u3057\u305f\u3002\n\n\nDocker\u3092\u5c0e\u5165\n\ngolfing\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngolang\u306e32bit\u30a4\u30e1\u30fc\u30b8\u3092\u53d6\u5f97\u3057\u9069\u5f53\u306a\u5834\u6240\u306b\u89e3\u51cd\u3002\n\u89e3\u51cd\u5f8c\u3001GOROOT,GOPATH\u3092\u6307\u5b9a\u3002\n$ pwd\n/home/hoge\n$ wget https://storage.googleapis.com/golang/go1.5.3.linux-386.tar.gz\n$ tar zxvf go1.5.3.linux-386.tar.gz\n$ export GOROOT=$HOME/go\n$ mkdir gocode\n$ export GOPATH=$HOME/gocode\n$ export PATH=$GOPATH/bin:$PATH:$GOROOT/bin\n\n\ndocker\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u3082\u306e\u3092apt-get instal\n$ sudo apt-get -y install git linux-image-extra-$(uname -r) lxc xz-utils\n\n\ndocker\u3068ubuntu32bit\u30a4\u30e1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ndocker-32bit/ubuntu\u306ebuild-image.sh\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u203bproxy\u74b0\u5883\u3067\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bsh\u3092\u4fee\u6b63\u3057\u3066\u5b9f\u884c\n#!/bin/bash -ex\n### Build a docker image for ubuntu i386.\n\n### settings\narch=i386\nsuite=${1:-trusty}\nchroot_dir=\"/var/chroot/$suite\"\napt_mirror='http://archive.ubuntu.com/ubuntu'\ndocker_image=\"32bit/ubuntu:${1:-14.04}\"\n##########\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0###########\nexport http_proxy=http://proxy.hogehoge:8080\n##########################################\n\n### make sure that the required tools are installed\npackages=\"debootstrap dchroot\"\nwhich docker || packages=\"$packages docker.io\"\napt-get install -y $packages\n\n### install a minbase system with debootstrap\nexport DEBIAN_FRONTEND=noninteractive\n########## \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63 ################\n# debootstrap --variant=minbase --arch=$arch\nhttp_proxy=$http_proxy debootstrap --variant=minbase --arch=$arch \n#########################################\n$suite $chroot_dir $apt_mirror\n\n\u4ee5\u4e0b\u7701\u7565\n\n\nmattermost\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306anode,rpm\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo apt-get install npm\n$ sudo apt-get install build-essential libssl-dev\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.2/install.sh | bash\n$ . ~/.bashrc\n$ nvm install 5.5.0\n\n\nmattermost\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306aruby,compass\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ sudo apt-get update\n$ sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties\n$ sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev\n$ curl -sSL https://rvm.io/mpapis.asc | gpg --import -\n$ curl -L https://get.rvm.io | bash -s stable\n$ source ~/.rvm/scripts/rvm\n$ echo \"source ~/.rvm/scripts/rvm\" >> ~/.bashrc\n$ rvm install 2.1.2\n$ rvm use 2.1.2 --default\n$ ruby -v\n$ gem install compass\n\n\nmattemost\u309232bit\u74b0\u5883\u3067\u30d3\u30eb\u30c9\ndocker image\u3067\u306f64bit\u3067\u30d3\u30eb\u30c9\u3057\u305f\u3082\u306e\u3057\u304b\u306a\u3044\u306e\u3067\u3001github\u304b\u3089\nclone\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ go get github.com/kr/godep\n$ mkdir -p $GOPATH/src/github.com/mattermost/platform\n$ git clone https://github.com/mattermost/platform $GOPATH/src/github.com/mattermost/platform\n$ cd $GOPATH/src/github.com/mattermost/platform\n$ make dist\n\n\nmattemost\u3092docker build\u3057\u3066image\u69cb\u7bc9\n\u6700\u5f8c\u306bmattermost\u306edocker image\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001docker build\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u96c6\u3081\u307e\u3059\u3002\n$ cd\n$ mkdir mattermost\n$ cd mattermost\n$ cp $GOPATH/src/github.com/mattermost/platform/docker/1.4/Dockerfile ./.\n$ cp $GOPATH//src/github.com/mattermost/platform/docker/1.4/config_docker.json ./.\n$ cp $GOPATH//src/github.com/mattermost/platform/docker/1.4/docker-entry.sh ./.\n\n\u3053\u3053\u3067Dockerfile\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n# Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n# See License.txt for license information.\n################\u5143\u3068\u306a\u308bubuntu\u306e\u30a4\u30e1\u30fc\u30b8\u309232bit\u306b\u5909\u66f4#############\n#FROM ubuntu:14.04\nFROM 32bit/ubuntu:14.04\n################################################################\n\n#\n# Install SQL\n#\n\nENV MYSQL_ROOT_PASSWORD=mostest\nENV MYSQL_USER=mmuser\nENV MYSQL_PASSWORD=mostest\nENV MYSQL_DATABASE=mattermost_test\n\n###########\u8ffd\u52a0#############\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ls -l /sbin/initctl.distrib\nRUN ln -s /bin/true /sbin/initctl\n###########################\n\n\uff5e\u9014\u4e2d\u7565\uff5e\n# Copy over files\n############# mattersoft\u306e\u30d0\u30a4\u30ca\u30ea\u306e\u53d6\u5f97\u5143\u3092\u5909\u66f4##########################\n#ADD https://github.com/mattermost/platform/releases/download/v1.4.0/mattermost.tar.gz /\nCOPY mattermost.tar.gz /\n########################################################################\nRUN tar -zxvf /mattermost.tar.gz --strip-components=1 && rm /mattermost.tar.gz\nADD config_docker.json /\nADD docker-entry.sh /\n\nRUN chmod +x /docker-entry.sh\nENTRYPOINT /docker-entry.sh\n\uff5e\u4ee5\u4e0b\u7565\uff5e\n\n\u6700\u5f8c\u306bdocker build\u3057\u3066\u3001\u8d77\u52d5\n$ cd\n$ sudo docker build -t local/mattermost:1.0.0 mattermost\n$ sudo docker run --name mattermost-dev -d --publish 8065:80 local/mattermost:1.0.0\n\n\u3053\u308c\u3067\u30d6\u30e9\u30a6\u30b6\u304b\u3089http://localhost:8065\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070mattermost\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\u4f59\u3063\u3066\u3044\u308b32bit\u30d1\u30bd\u30b3\u30f3\u306bDocker\u74b0\u5883\u3092\u4f5c\u3063\u3066\u3001Mattermost\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3059\u3002\n\n# \u524d\u63d0\n* 32bit Windows\u30d1\u30bd\u30b3\u30f3\u3057\u304b\u4f59\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3002\n* Virtual Box\u306f\u5c0e\u5165\u3057\u307e\u3057\u305f\u3002\n* [Ubuntu Server 14.04](http://releases.ubuntu.com/14.04/ubuntu-14.04.3-server-i386.iso)\u3067\u4eee\u60f3\u30b5\u30fc\u30d0\u7acb\u3066\u307e\u3057\u305f\u3002\n\n# Docker\u3092\u5c0e\u5165\n\n## golfing\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n[golang\u306e32bit\u30a4\u30e1\u30fc\u30b8](https://storage.googleapis.com/golang/go1.5.3.linux-386.tar.gz)\u3092\u53d6\u5f97\u3057\u9069\u5f53\u306a\u5834\u6240\u306b\u89e3\u51cd\u3002\n\u89e3\u51cd\u5f8c\u3001GOROOT,GOPATH\u3092\u6307\u5b9a\u3002\n\n```\n$ pwd\n/home/hoge\n$ wget https://storage.googleapis.com/golang/go1.5.3.linux-386.tar.gz\n$ tar zxvf go1.5.3.linux-386.tar.gz\n$ export GOROOT=$HOME/go\n$ mkdir gocode\n$ export GOPATH=$HOME/gocode\n$ export PATH=$GOPATH/bin:$PATH:$GOROOT/bin\n```\n\n## docker\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306a\u3082\u306e\u3092apt-get instal\n```\n$ sudo apt-get -y install git linux-image-extra-$(uname -r) lxc xz-utils\n``` \n\n## docker\u3068ubuntu32bit\u30a4\u30e1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n[docker-32bit/ubuntu](https://github.com/docker-32bit/ubuntu)\u306ebuild-image.sh\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u203bproxy\u74b0\u5883\u3067\u5b9f\u884c\u3059\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bsh\u3092\u4fee\u6b63\u3057\u3066\u5b9f\u884c\n\n```\n#!/bin/bash -ex\n### Build a docker image for ubuntu i386.\n\n### settings\narch=i386\nsuite=${1:-trusty}\nchroot_dir=\"/var/chroot/$suite\"\napt_mirror='http://archive.ubuntu.com/ubuntu'\ndocker_image=\"32bit/ubuntu:${1:-14.04}\"\n##########\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u74b0\u5883\u5909\u6570\u3092\u8ffd\u52a0###########\nexport http_proxy=http://proxy.hogehoge:8080\n##########################################\n\n### make sure that the required tools are installed\npackages=\"debootstrap dchroot\"\nwhich docker || packages=\"$packages docker.io\"\napt-get install -y $packages\n\n### install a minbase system with debootstrap\nexport DEBIAN_FRONTEND=noninteractive\n########## \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63 ################\n# debootstrap --variant=minbase --arch=$arch\nhttp_proxy=$http_proxy debootstrap --variant=minbase --arch=$arch \n#########################################\n$suite $chroot_dir $apt_mirror\n\n\u4ee5\u4e0b\u7701\u7565\n```\n\n## mattermost\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306anode,rpm\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ sudo apt-get install npm\n$ sudo apt-get install build-essential libssl-dev\n$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.25.2/install.sh | bash\n$ . ~/.bashrc\n$ nvm install 5.5.0\n```\n\n## mattermost\u306e\u30d3\u30eb\u30c9\u306b\u5fc5\u8981\u306aruby,compass\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```\n$ sudo apt-get update\n$ sudo apt-get install git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties\n$ sudo apt-get install libgdbm-dev libncurses5-dev automake libtool bison libffi-dev\n$ curl -sSL https://rvm.io/mpapis.asc | gpg --import -\n$ curl -L https://get.rvm.io | bash -s stable\n$ source ~/.rvm/scripts/rvm\n$ echo \"source ~/.rvm/scripts/rvm\" >> ~/.bashrc\n$ rvm install 2.1.2\n$ rvm use 2.1.2 --default\n$ ruby -v\n$ gem install compass\n```\n\n## mattemost\u309232bit\u74b0\u5883\u3067\u30d3\u30eb\u30c9\ndocker image\u3067\u306f64bit\u3067\u30d3\u30eb\u30c9\u3057\u305f\u3082\u306e\u3057\u304b\u306a\u3044\u306e\u3067\u3001github\u304b\u3089\nclone\u3057\u3066\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```\n$ go get github.com/kr/godep\n$ mkdir -p $GOPATH/src/github.com/mattermost/platform\n$ git clone https://github.com/mattermost/platform $GOPATH/src/github.com/mattermost/platform\n$ cd $GOPATH/src/github.com/mattermost/platform\n$ make dist\n```\n\n## mattemost\u3092docker build\u3057\u3066image\u69cb\u7bc9\n\u6700\u5f8c\u306bmattermost\u306edocker image\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001docker build\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u3092\u96c6\u3081\u307e\u3059\u3002\n\n```\n$ cd\n$ mkdir mattermost\n$ cd mattermost\n$ cp $GOPATH/src/github.com/mattermost/platform/docker/1.4/Dockerfile ./.\n$ cp $GOPATH//src/github.com/mattermost/platform/docker/1.4/config_docker.json ./.\n$ cp $GOPATH//src/github.com/mattermost/platform/docker/1.4/docker-entry.sh ./.\n```\n\n\u3053\u3053\u3067Dockerfile\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```\n# Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n# See License.txt for license information.\n################\u5143\u3068\u306a\u308bubuntu\u306e\u30a4\u30e1\u30fc\u30b8\u309232bit\u306b\u5909\u66f4#############\n#FROM ubuntu:14.04\nFROM 32bit/ubuntu:14.04\n################################################################\n\n#\n# Install SQL\n#\n\nENV MYSQL_ROOT_PASSWORD=mostest\nENV MYSQL_USER=mmuser\nENV MYSQL_PASSWORD=mostest\nENV MYSQL_DATABASE=mattermost_test\n\n###########\u8ffd\u52a0#############\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ls -l /sbin/initctl.distrib\nRUN ln -s /bin/true /sbin/initctl\n###########################\n\n\uff5e\u9014\u4e2d\u7565\uff5e\n# Copy over files\n############# mattersoft\u306e\u30d0\u30a4\u30ca\u30ea\u306e\u53d6\u5f97\u5143\u3092\u5909\u66f4##########################\n#ADD https://github.com/mattermost/platform/releases/download/v1.4.0/mattermost.tar.gz /\nCOPY mattermost.tar.gz /\n########################################################################\nRUN tar -zxvf /mattermost.tar.gz --strip-components=1 && rm /mattermost.tar.gz\nADD config_docker.json /\nADD docker-entry.sh /\n\nRUN chmod +x /docker-entry.sh\nENTRYPOINT /docker-entry.sh\n\uff5e\u4ee5\u4e0b\u7565\uff5e\n```\n\n\u6700\u5f8c\u306bdocker build\u3057\u3066\u3001\u8d77\u52d5\n\n```\n$ cd\n$ sudo docker build -t local/mattermost:1.0.0 mattermost\n$ sudo docker run --name mattermost-dev -d --publish 8065:80 local/mattermost:1.0.0\n```\n\n\u3053\u308c\u3067\u30d6\u30e9\u30a6\u30b6\u304b\u3089http\\://localhost:8065\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070mattermost\u3092\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n", "tags": ["docker", "Mattermost", "32bit"]}