{"context": "\nreadCsvNumbers.h\n/// CSV\u5f62\u5f0f\u306edouble\uff11\u884c\u3092\u8aad\u307f\u53d6\u308b\n/// \u5f15\u7528\u7b26\u3067\u56f2\u3093\u3060\u6587\u5b57\u5217\u306b\u306f\u5bfe\u5fdc\u305b\u305a\n\n///\u2014\u2014 \u5ba3\u8a00\n#include <iostream>\n// CSV\u5f62\u5f0f\u306e\u6570\u5024\uff11\u884c\u3092\u6700\u5927(nMaxItem)\u30ab\u30e9\u30e0\u6570\u307e\u3067\n//double\u306e\u914d\u5217\u306b\u8aad\u307f\u8fbc\u307f\u3001\u8aad\u307f\u8fbc\u307f\u6570\u3092\u8fd4\u3059\u3002\nint  readCsvNumbers(std::istream &is,double *pd,int nMaxItem);\n\n\n\nreadCsvNumbers.cpp\n///\u2014\u2014 \u5b9f\u88c5\nint readCsvNumbers(std::istream &is,double *pd,int nMaxItem)\n{\n    char comma;//\",\"\u3092\u8aad\u307f\u98db\u3070\u3059\u70ba\n    int nGet=0;\n    //\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u7d42\u308f\u308c\u3070EOF\n    if(is.eof()) return -1;\n    for(int iItem=0;iItem<nMaxItem;iItem++){\n        //\u6570\u5b57\u8aad\u307f\u8fbc\u307f\n        is>>pd[iItem];\n        //\u884c\u672b\u304b\u6570\u5b57\u4ee5\u5916\u306a\u3089\u7d42\u4e86\u3002\n        if(is.fail()) break;\n        if(iItem<nMaxItem-1){\n            is>>comma;\n        }\n        if(is.fail()) break;\n        nGet++;\n    }\n    return nGet;\n}\n\n\n\nsample.cpp\n///\u2014\u2014 \u4f7f\u3044\u65b9\u306e\u4f8b\n/// \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u3080\u5834\u5408\u3002\n#define nCol (10)\nint main(int ac,char *av[]){\n\n    double *din=new double[nCol];\n\n    while(!std::cin.eof() && !std::cin.fail()){\n        //\uff23\uff33\uff36\u30c7\u30fc\u30bf\u30921\u884c\u8aad\u307f\u51fa\u3057\n        int nR; \n        nR=readCsvNumbers(std::cin,din,nCol);\n        //\u8aad\u307f\u8fbc\u3093\u3060\u30ab\u30e9\u30e0\u6570\u3092\u78ba\u8a8d\n        //\u4e0d\u8db3\u3067\u7d42\u4e86\n        if(nR!=\u671f\u5f85\u3057\u305f\u6570)\n            break;\n        if(nR<0) //EOF\n            break;\n\n        //\u884c\u6bce\u306e\u51e6\u7406\u3002\n        //for(int i=0;i<nR;i++){\n            //std::cout<<d[i]<<\" \";\n        //}\n        //std::cout <<std::endl;\n    }\n    //\n    delete [] din;\n    return 0;\n}\n\n\n/// \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u3080\u5834\u5408\u306f\nstd::ifstream ifs;\nifs.open(tapFile,std::ifstream::in);\n\u3068\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u3001\nstd::cin\u306e\u4ee3\u308f\u308a\u306bifs\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```cpp:readCsvNumbers.h\n/// CSV\u5f62\u5f0f\u306edouble\uff11\u884c\u3092\u8aad\u307f\u53d6\u308b\n/// \u5f15\u7528\u7b26\u3067\u56f2\u3093\u3060\u6587\u5b57\u5217\u306b\u306f\u5bfe\u5fdc\u305b\u305a\n\n///\u2014\u2014 \u5ba3\u8a00\n#include <iostream>\n// CSV\u5f62\u5f0f\u306e\u6570\u5024\uff11\u884c\u3092\u6700\u5927(nMaxItem)\u30ab\u30e9\u30e0\u6570\u307e\u3067\n//double\u306e\u914d\u5217\u306b\u8aad\u307f\u8fbc\u307f\u3001\u8aad\u307f\u8fbc\u307f\u6570\u3092\u8fd4\u3059\u3002\nint  readCsvNumbers(std::istream &is,double *pd,int nMaxItem);\n```\n```cpp:readCsvNumbers.cpp\n///\u2014\u2014 \u5b9f\u88c5\nint readCsvNumbers(std::istream &is,double *pd,int nMaxItem)\n{\n\tchar comma;//\",\"\u3092\u8aad\u307f\u98db\u3070\u3059\u70ba\n\tint nGet=0;\n\t//\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u7d42\u308f\u308c\u3070EOF\n\tif(is.eof()) return -1;\n\tfor(int iItem=0;iItem<nMaxItem;iItem++){\n\t\t//\u6570\u5b57\u8aad\u307f\u8fbc\u307f\n\t\tis>>pd[iItem];\n\t\t//\u884c\u672b\u304b\u6570\u5b57\u4ee5\u5916\u306a\u3089\u7d42\u4e86\u3002\n\t\tif(is.fail()) break;\n\t\tif(iItem<nMaxItem-1){\n\t\t\tis>>comma;\n\t\t}\n\t\tif(is.fail()) break;\n\t\tnGet++;\n\t}\n\treturn nGet;\n}\n```\n```xpp:sample.cpp\n///\u2014\u2014 \u4f7f\u3044\u65b9\u306e\u4f8b\n/// \u6a19\u6e96\u5165\u529b\u304b\u3089\u8aad\u3080\u5834\u5408\u3002\n#define nCol (10)\nint main(int ac,char *av[]){\n\n\tdouble *din=new double[nCol];\n\n\twhile(!std::cin.eof() && !std::cin.fail()){\n\t\t//\uff23\uff33\uff36\u30c7\u30fc\u30bf\u30921\u884c\u8aad\u307f\u51fa\u3057\n\t\tint nR; \n\t\tnR=readCsvNumbers(std::cin,din,nCol);\n\t\t//\u8aad\u307f\u8fbc\u3093\u3060\u30ab\u30e9\u30e0\u6570\u3092\u78ba\u8a8d\n\t\t//\u4e0d\u8db3\u3067\u7d42\u4e86\n\t\tif(nR!=\u671f\u5f85\u3057\u305f\u6570)\n\t\t\tbreak;\n\t\tif(nR<0) //EOF\n\t\t\tbreak;\n\n\t\t//\u884c\u6bce\u306e\u51e6\u7406\u3002\n\t\t//for(int i=0;i<nR;i++){\n\t\t\t//std::cout<<d[i]<<\" \";\n\t\t//}\n\t\t//std::cout <<std::endl;\n\t}\n\t//\n\tdelete [] din;\n\treturn 0;\n}\n```\n/// \u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u3080\u5834\u5408\u306f\nstd::ifstream ifs;\nifs.open(tapFile,std::ifstream::in);\n\u3068\u3057\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3057\u3066\u3001\nstd::cin\u306e\u4ee3\u308f\u308a\u306bifs\u3092\u4f7f\u3044\u307e\u3059\u3002\n", "tags": ["C++", "CSV"]}