{"context": " More than 1 year has passed since last update.\n\nAuto Scaling\u306e\u57fa\u6e96\u306b\u30ab\u30b9\u30bf\u30e0\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u4f7f\u3046\nAmazon CloudWatch Monitoring Scripts for Linux \u304b\u3089\u5f97\u3089\u308c\u308b\u60c5\u5831\u3092\u4f7f\u3063\u3066\u3001 Auto Scaling \u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u6e1b\u3055\u305b\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30e2\u30ea\u91cf\u306b\u3064\u3044\u3066\u5c11\u3057\u8003\u3048\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u30e1\u30e2\u3092\u6b8b\u3059\u3002\nhttp://www.slideshare.net/AmazonWebServicesJapan/aws-black-belt-tech-amazon-cloudwatch-auto-scaling/14\nhttp://docs.aws.amazon.com/ja_jp/AmazonCloudWatch/latest/DeveloperGuide/mon-scripts-perl.html\n\n\u7a7a\u304d\u30e1\u30e2\u30ea\u3068\u306f\u4f55\u304b\n\u4e0b\u8a18\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30fc\u30c9(mon-put-instance-data.pl)\u3092\u8aad\u3093\u3067\u307f\u308b\u3068\u3001\u30e1\u30e2\u30ea\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f /proc/meminfo \u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001 MemFree + Cached + Buffers \u306e\u5024\u304c\u3001 Memory Available \u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001 Cached \u3068 Buffers \u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f Available \u306a\u9818\u57df\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\nhttp://aws.amazon.com/code/8720044071969977\n  # meminfo values are in kilobytes\n  my $mem_total = $meminfo{'MemTotal'} * KILO;\n  my $mem_free = $meminfo{'MemFree'} * KILO;\n  my $mem_cached = $meminfo{'Cached'} * KILO;\n  my $mem_buffers = $meminfo{'Buffers'} * KILO;\n  my $mem_avail = $mem_free;\n  if (!defined($mem_used_incl_cache_buff)) {\n     $mem_avail += $mem_cached + $mem_buffers;\n  }\n  my $mem_used = $mem_total - $mem_avail;\n  my $swap_total = $meminfo{'SwapTotal'} * KILO;\n  my $swap_free = $meminfo{'SwapFree'} * KILO;  \n  my $swap_used = $swap_total - $swap_free;\n\n  if ($report_mem_util) {\n    my $mem_util = 0;\n    $mem_util = 100 * $mem_used / $mem_total if ($mem_total > 0);\n    add_metric('MemoryUtilization', 'Percent', $mem_util);\n  }\n  if ($report_mem_used) {\n    add_metric('MemoryUsed', $mem_units, $mem_used / $mem_unit_div);\n  }\n  if ($report_mem_avail) {\n    add_metric('MemoryAvailable', $mem_units, $mem_avail / $mem_unit_div);\n  }\n\n  if ($report_swap_util) {\n    my $swap_util = 0;\n    $swap_util = 100 * $swap_used / $swap_total if ($swap_total > 0);\n    add_metric('SwapUtilization', 'Percent', $swap_util);\n  }\n  if ($report_swap_used) {\n    add_metric('SwapUsed', $mem_units, $swap_used / $mem_unit_div);\n  }\n\n\u4e00\u65b9\u3001Linux\u4e0a\u3067\u904b\u7528\u3059\u308b dentry cache \u306f\u4e0a\u8a18\u306e Cached + Buffers \u306b\u306f\u542b\u307e\u308c\u306a\u3044\u3002dentry cache \u304c\u5897\u3048\u3066\u3044\u304f\u3068\u3001MemFree\u304c\u6e1b\u3063\u3066\u3044\u304f\u306e\u3060\u304c\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306f\u305d\u308c\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002Memory Available \u304c\u6e1b\u3063\u3066\u3044\u3066\u3082 dentry cache \u304c\u9069\u5207\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3067\u306f\u3001\u3053\u306e\u5024\u3092\u57fa\u6e96\u306b\u3057\u305fAuto Scaling\u306b\u3088\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5897\u6e1b\u304c\u672c\u5f53\u306b\u554f\u984c\u304c\u306a\u3044\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306a\u610f\u56f3\u3057\u306a\u3044 negative dentry \u5897\u5927\u5316\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u3053\u306e\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30af\u30b9\u304b\u3089\u53d6\u5f97\u3067\u304d\u308bMemory Available\u3067\u306f\u9069\u5207\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u6e1b\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\nhttp://qiita.com/kentaost/items/a2e882d2978fba9e17d3\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306b\u3064\u3044\u3066\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u7b97\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3002\n##Auto Scaling\u306e\u57fa\u6e96\u306b\u30ab\u30b9\u30bf\u30e0\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u3092\u4f7f\u3046\nAmazon CloudWatch Monitoring Scripts for Linux \u304b\u3089\u5f97\u3089\u308c\u308b\u60c5\u5831\u3092\u4f7f\u3063\u3066\u3001 Auto Scaling \u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u6e1b\u3055\u305b\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u304d\u306b\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30e2\u30ea\u91cf\u306b\u3064\u3044\u3066\u5c11\u3057\u8003\u3048\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u30e1\u30e2\u3092\u6b8b\u3059\u3002\n\nhttp://www.slideshare.net/AmazonWebServicesJapan/aws-black-belt-tech-amazon-cloudwatch-auto-scaling/14\nhttp://docs.aws.amazon.com/ja_jp/AmazonCloudWatch/latest/DeveloperGuide/mon-scripts-perl.html\n\n\n##\u7a7a\u304d\u30e1\u30e2\u30ea\u3068\u306f\u4f55\u304b\n\u4e0b\u8a18\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u30b3\u30fc\u30c9(mon-put-instance-data.pl)\u3092\u8aad\u3093\u3067\u307f\u308b\u3068\u3001\u30e1\u30e2\u30ea\u306b\u95a2\u3059\u308b\u60c5\u5831\u306f /proc/meminfo \u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\u307e\u305f\u3001 MemFree + Cached + Buffers \u306e\u5024\u304c\u3001 Memory Available \u306b\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u3053\u306e\u3053\u3068\u304b\u3089\u3001 Cached \u3068 Buffers \u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f Available \u306a\u9818\u57df\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n\nhttp://aws.amazon.com/code/8720044071969977\n\n```pl\n  # meminfo values are in kilobytes\n  my $mem_total = $meminfo{'MemTotal'} * KILO;\n  my $mem_free = $meminfo{'MemFree'} * KILO;\n  my $mem_cached = $meminfo{'Cached'} * KILO;\n  my $mem_buffers = $meminfo{'Buffers'} * KILO;\n  my $mem_avail = $mem_free;\n  if (!defined($mem_used_incl_cache_buff)) {\n     $mem_avail += $mem_cached + $mem_buffers;\n  }\n  my $mem_used = $mem_total - $mem_avail;\n  my $swap_total = $meminfo{'SwapTotal'} * KILO;\n  my $swap_free = $meminfo{'SwapFree'} * KILO;  \n  my $swap_used = $swap_total - $swap_free;\n  \n  if ($report_mem_util) {\n    my $mem_util = 0;\n    $mem_util = 100 * $mem_used / $mem_total if ($mem_total > 0);\n    add_metric('MemoryUtilization', 'Percent', $mem_util);\n  }\n  if ($report_mem_used) {\n    add_metric('MemoryUsed', $mem_units, $mem_used / $mem_unit_div);\n  }\n  if ($report_mem_avail) {\n    add_metric('MemoryAvailable', $mem_units, $mem_avail / $mem_unit_div);\n  }\n\n  if ($report_swap_util) {\n    my $swap_util = 0;\n    $swap_util = 100 * $swap_used / $swap_total if ($swap_total > 0);\n    add_metric('SwapUtilization', 'Percent', $swap_util);\n  }\n  if ($report_swap_used) {\n    add_metric('SwapUsed', $mem_units, $swap_used / $mem_unit_div);\n  }\n```\n\n\u4e00\u65b9\u3001Linux\u4e0a\u3067\u904b\u7528\u3059\u308b dentry cache \u306f\u4e0a\u8a18\u306e Cached + Buffers \u306b\u306f\u542b\u307e\u308c\u306a\u3044\u3002dentry cache \u304c\u5897\u3048\u3066\u3044\u304f\u3068\u3001MemFree\u304c\u6e1b\u3063\u3066\u3044\u304f\u306e\u3060\u304c\u3001\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u304b\u3089\u306f\u305d\u308c\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002Memory Available \u304c\u6e1b\u3063\u3066\u3044\u3066\u3082 dentry cache \u304c\u9069\u5207\u306b\u5229\u7528\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3067\u306f\u3001\u3053\u306e\u5024\u3092\u57fa\u6e96\u306b\u3057\u305fAuto Scaling\u306b\u3088\u308b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5897\u6e1b\u304c\u672c\u5f53\u306b\u554f\u984c\u304c\u306a\u3044\u304b\u8003\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u305f\u3068\u3048\u3070\u4e0b\u8a18\u306e\u3088\u3046\u306a\u610f\u56f3\u3057\u306a\u3044 negative dentry \u5897\u5927\u5316\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u3053\u306e\u30ab\u30b9\u30bf\u30e0\u30e1\u30c8\u30ea\u30af\u30b9\u304b\u3089\u53d6\u5f97\u3067\u304d\u308bMemory Available\u3067\u306f\u9069\u5207\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5897\u6e1b\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\n\nhttp://qiita.com/kentaost/items/a2e882d2978fba9e17d3\n\n\u30e1\u30e2\u30ea\u4f7f\u7528\u91cf\u306b\u3064\u3044\u3066\u306f\u3001\u3069\u306e\u3088\u3046\u306b\u7b97\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u304b\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3068\u826f\u3044\u3002\n", "tags": ["Linux", "AWS", "CloudWatch", "kernel", "AutoScaling"]}