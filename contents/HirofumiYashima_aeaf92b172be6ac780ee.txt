{"context": "\n\n1. DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7528\u610f\n\n\nPython REPL\nimport pandas as pd\nimport numpy as np\n\ndf_sample = pd.read_csv(\"sample_data.csv\")\ncol_name_list = list(df_sample.columns)\n\n\n\n\n2. \u5024\u306e9\u5272\u4ee5\u4e0a \u304c NULL \u3067\u3042\u308b\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210\n\n\nPython REPL\ntarget_colname_list = []\n\nfor col_name in col_name_list:\n    null_check_boolean_list = list(df_sample[col_name].isnull().values) \n    null_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n    all_value_count = len(list(df_sample[col_name]))\n    if float(null_value_count) / float(all_value_count) >= 0.9:\n        target_colname_list.append(col_name)\n\n\n\n\n\n\nNULL \u3092 \u4e00\u5b9a\u5272\u5408\u4ee5\u4e0a\u3001\u542b\u3080\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210\n\n\n\u4e0a\u8a18 \u3092 \u30e1\u30bd\u30c3\u30c9\u306b\u3059\u308b\uff08\u5f15\u6570\uff1a\u4e00\u5b9a\u5272\u5408 \u306e float\u5024\uff09\n\n\nPython REPL\ndef get_colname_list_null_rownum_over_ratio(df_obj, ratio_float):\n    output_list = []\n    col_name_list = list(df_obj.columns)\n    for col_name in col_name_list:\n        null_check_boolean_list = list(df_obj[col_name].isnull().values) \n        null_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n        all_value_count = len(list(df_obj[col_name]))\n        if float(null_value_count) / float(all_value_count) >= float(ratio_float):\n            output_list.append(col_name)\n    return output_list\n\n\n\n\nPython REPL\n#target_colname_list = []\n\ntarget_colname_list = get_colname_list_null_rownum_over_ratio(df_sample, 0.9)\n\n# len(target_colname_list)\n# pprint(target_colname_list[0:10])\n\n\n\n\nNULL \u3092 \u4e00\u5b9a\u5272\u5408\u672a\u6e80\u3001\u542b\u3080\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210\n\n\nNULL\u3092\uff11\u4ef6\u4ee5\u4e0a\u542b\u3080\nNULL\u306e\u5272\u5408\u306f\u4e00\u5b9a\u5272\u5408\u672a\u6e80\n\n\u3064\u307e\u308a\u3001\n\nNULL\u3092\uff11\u4ef6\u3082\u542b\u307e\u306a\u3044\u5217\u306e\u5217\u540d\u306f\u53d6\u5f97\u3057\u306a\u3044\n\n\nPython REPL\ndef get_colname_list_null_rownum_lt_ratio(df_obj, ratio_float):\n    output_list = []\n    col_name_list = list(df_obj.columns)\n    for col_name in col_name_list:\n        null_check_boolean_list = list(df_obj[col_name].isnull().values)\n        null_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n        all_value_count = len(list(df_obj[col_name]))\n        if any(null_check_boolean_list) and ((float(null_value_count) / float(all_value_count)) < float(ratio_float)):\n            output_list.append(col_name)\n    return output_list\n\n\n\n\nPython REPL\n#target_colname_list = []\n\ntarget_colname_list = get_colname_list_null_rownum_lt_ratio(df_sample, 0.9)\n\n# len(target_colname_list)\n# pprint(target_colname_list[0:10])\n\n\n\n\n\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b\n\n\ncriteria_1 : NULL\u3092\uff11\u4ef6\u4ee5\u4e0a\u542b\u3080\ncriteria_2 : NULL\u306e\u5272\u5408\u306f\u4e00\u5b9a\u5272\u5408\u672a\u6e80\n\n\nPython REPL\ndef get_colname_list_null_rownum_lt_ratio2(df_obj, ratio_float):\n    output_list = []\n    col_name_list = list(df_obj.columns)\n    for col_name in col_name_list:\n        null_check_boolean_list = list(df_obj[col_name].isnull().values)\n        null_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n        all_value_count = len(list(df_obj[col_name]))\n        criteria_1 = any(null_check_boolean_list)\n        criteria_2 = (float(null_value_count) / float(all_value_count)) < float(ratio_float)\n        if criteria_1 and criteria_2:\n            output_list.append(col_name)\n    return output_list\n\n\n\n\n\nPython REPL\n#target_colname_list2 = []\n\ntarget_colname_list2 = get_colname_list_null_rownum_lt_ratio2(df_sample, 0.9)\n\n# target_colname_list2 == target_colname_list # True\n# len(target_colname_list2)\n# pprint(target_colname_list2[0:10])\n\n\n\n\n\uff08 \u53c2\u8003 \uff09\n\n\nPython REPL\n>>> import types\n>>> type(float(2))\n<type 'float'>\n>>>\n>>> type(float(0.02))\n<type 'float'>\n>>>\n>>> print(float(2))\n2.0\n>>>\n>>> print(float(0.02))\n0.02\n>>>\n\n\n\nPython REPL\n>>> any([True, False, False])\nTrue\n>>>\n>>> all([True, False, False])\nFalse\n>>>\n>>> any([False, False, False])\nFalse\n>>>\n\n\n\nPython REPL\n>>> 1 / 2\n0\n>>> float(1 / 2)\n0.0\n>>>\n>>> float(1) / 2\n0.5\n>>>\n>>> float(1) / float(2)\n0.5\n>>>\n\n\n##__1. DataFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u7528\u610f__\n\n```{python:Python REPL}\nimport pandas as pd\nimport numpy as np\n\ndf_sample = pd.read_csv(\"sample_data.csv\")\ncol_name_list = list(df_sample.columns)\n```\n___\n\n##__2. \u5024\u306e9\u5272\u4ee5\u4e0a \u304c NULL \u3067\u3042\u308b\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210__\n\n\n```{python:Python REPL}\ntarget_colname_list = []\n\nfor col_name in col_name_list:\n\tnull_check_boolean_list = list(df_sample[col_name].isnull().values) \n\tnull_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n\tall_value_count = len(list(df_sample[col_name]))\n\tif float(null_value_count) / float(all_value_count) >= 0.9:\n\t\ttarget_colname_list.append(col_name)\n\n\n```\n___\n\n\n##__NULL \u3092 \u4e00\u5b9a\u5272\u5408\u4ee5\u4e0a\u3001\u542b\u3080\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210__\n\n####__\u4e0a\u8a18 \u3092 \u30e1\u30bd\u30c3\u30c9\u306b\u3059\u308b\uff08\u5f15\u6570\uff1a\u4e00\u5b9a\u5272\u5408 \u306e float\u5024\uff09__\n\n```{python:Python REPL}\ndef get_colname_list_null_rownum_over_ratio(df_obj, ratio_float):\n\toutput_list = []\n\tcol_name_list = list(df_obj.columns)\n\tfor col_name in col_name_list:\n\t\tnull_check_boolean_list = list(df_obj[col_name].isnull().values) \n\t\tnull_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n\t\tall_value_count = len(list(df_obj[col_name]))\n\t\tif float(null_value_count) / float(all_value_count) >= float(ratio_float):\n\t\t\toutput_list.append(col_name)\n\treturn output_list\n\n```\n\n\n```{python:Python REPL}\n#target_colname_list = []\n\ntarget_colname_list = get_colname_list_null_rownum_over_ratio(df_sample, 0.9)\n\n# len(target_colname_list)\n# pprint(target_colname_list[0:10])\n```\n\n___\n\n\n##__NULL \u3092 \u4e00\u5b9a\u5272\u5408\u672a\u6e80\u3001\u542b\u3080\u5217 \u306e \u5217\u540d\u30ea\u30b9\u30c8 \u751f\u6210__\n\n* NULL\u3092\uff11\u4ef6\u4ee5\u4e0a\u542b\u3080\n* NULL\u306e\u5272\u5408\u306f\u4e00\u5b9a\u5272\u5408\u672a\u6e80\n\n\u3064\u307e\u308a\u3001\n\n* NULL\u3092\uff11\u4ef6\u3082\u542b\u307e\u306a\u3044\u5217\u306e\u5217\u540d\u306f\u53d6\u5f97\u3057\u306a\u3044\n\n```{python:Python REPL}\ndef get_colname_list_null_rownum_lt_ratio(df_obj, ratio_float):\n\toutput_list = []\n\tcol_name_list = list(df_obj.columns)\n\tfor col_name in col_name_list:\n\t\tnull_check_boolean_list = list(df_obj[col_name].isnull().values)\n\t\tnull_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n\t\tall_value_count = len(list(df_obj[col_name]))\n\t\tif any(null_check_boolean_list) and ((float(null_value_count) / float(all_value_count)) < float(ratio_float)):\n\t\t\toutput_list.append(col_name)\n\treturn output_list\n\n```\n\n```{python:Python REPL}\n#target_colname_list = []\n\ntarget_colname_list = get_colname_list_null_rownum_lt_ratio(df_sample, 0.9)\n\n# len(target_colname_list)\n# pprint(target_colname_list[0:10])\n```\n\n___\n\n####__\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b__\n\n* criteria_1 : NULL\u3092\uff11\u4ef6\u4ee5\u4e0a\u542b\u3080\n* criteria_2 : NULL\u306e\u5272\u5408\u306f\u4e00\u5b9a\u5272\u5408\u672a\u6e80\n\n```{python:Python REPL}\ndef get_colname_list_null_rownum_lt_ratio2(df_obj, ratio_float):\n\toutput_list = []\n\tcol_name_list = list(df_obj.columns)\n\tfor col_name in col_name_list:\n\t\tnull_check_boolean_list = list(df_obj[col_name].isnull().values)\n\t\tnull_value_count = len([elem for elem in null_check_boolean_list if elem == True])\n\t\tall_value_count = len(list(df_obj[col_name]))\n\t\tcriteria_1 = any(null_check_boolean_list)\n\t\tcriteria_2 = (float(null_value_count) / float(all_value_count)) < float(ratio_float)\n\t\tif criteria_1 and criteria_2:\n\t\t\toutput_list.append(col_name)\n\treturn output_list\n\n\n```\n\n\n```{python:Python REPL}\n#target_colname_list2 = []\n\ntarget_colname_list2 = get_colname_list_null_rownum_lt_ratio2(df_sample, 0.9)\n\n# target_colname_list2 == target_colname_list # True\n# len(target_colname_list2)\n# pprint(target_colname_list2[0:10])\n```\n\n___\n\n\n###__\uff08 \u53c2\u8003 \uff09__\n\n```{python:Python REPL}\n>>> import types\n>>> type(float(2))\n<type 'float'>\n>>>\n>>> type(float(0.02))\n<type 'float'>\n>>>\n>>> print(float(2))\n2.0\n>>>\n>>> print(float(0.02))\n0.02\n>>>\n```\n\n```{python:Python REPL}\n>>> any([True, False, False])\nTrue\n>>>\n>>> all([True, False, False])\nFalse\n>>>\n>>> any([False, False, False])\nFalse\n>>>\n```\n\n```{python:Python REPL}\n>>> 1 / 2\n0\n>>> float(1 / 2)\n0.0\n>>>\n>>> float(1) / 2\n0.5\n>>>\n>>> float(1) / float(2)\n0.5\n>>>\n```\n\n", "tags": ["Python", "python2.7", "DataFrame", "pandas", "\u30c7\u30fc\u30bf\u5206\u6790"]}