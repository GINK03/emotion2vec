{"tags": ["gdb", "C++", "C"], "context": "Tips for Productive Debugging with GDB\nhttps://metricpanda.com/tips-for-productive-debugging-with-gdb\n\u306e\u6284\u8a33\u3002\n\nTips 1: GDB Dashboard\u3092\u4f7f\u304a\u3046\nGDB Dashboard\u306f\u5358\u4e00\u306e.gdbinit\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u6b62\u307e\u308b\u305f\u3073\u306b\u4e0b\u56f3\u306e\u3088\u3046\u306a\u30af\u30fc\u30eb\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3002\nhttps://github.com/cyrus-and/gdb-dashboard\n\n\nTips 2: \u30b0\u30ed\u30fc\u30d0\u30eb\u306f.gdbinit\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6bce\u306e.gdbinit\u3092\u4f7f\u304a\u3046\n~/.gdbinit\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u3002\u3055\u3089\u306b\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u3068\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e.gdbinit\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3002\nset auto-load local-gdbinit\n\n\nTips 3: \u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3067\u69cb\u9020\u4f53\u3084\u30af\u30e9\u30b9\u3092\u898b\u3084\u3059\u304f\u8868\u793a\u3057\u3088\u3046\n4x4\u306e\u884c\u5217\u3092\u8868\u793a\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u306e\u4f5c\u308a\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\uff1a\nclass MPEMatrixPrinter:\n  \"\"\"Print a 4x4 matrix.\"\"\"\n\n  def __init__(self, val, size):\n    self.val = val\n    self.size = int(size)\n\n  def to_string(self):\n    return (\"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\") % \\\n                (float(self.val[\"flat\"][0]), float(self.val[\"flat\"][1]), float(self.val[\"flat\"][2]), float(self.val[\"flat\"][3]),\n                float(self.val[\"flat\"][4]), float(self.val[\"flat\"][5]), float(self.val[\"flat\"][6]), float(self.val[\"flat\"][7]),\n                float(self.val[\"flat\"][8]), float(self.val[\"flat\"][9]), float(self.val[\"flat\"][10]), float(self.val[\"flat\"][11]),\n                float(self.val[\"flat\"][12]), float(self.val[\"flat\"][13]), float(self.val[\"flat\"][14]), float(self.val[\"flat\"][15]))\n\ndef project_type_lookups(val):\n  lookup_tag = val.type.tag\n  if lookup_tag == None:\n    return None\n\n  match = re.match(r\"^MPEMatrix(\\d)$\", lookup_tag)\n  if match:\n    return MPEMatrixPrinter(val, match.group(1))\n\ngdb.pretty_printers.append(project_type_lookups)\n\n\nTips 4: \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u304a\u3046\n\u30b7\u30a7\u30eb\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3060\u3002\nalias -a w = dashboard expression watch\n\n\nTips 5: \u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u308b\u5909\u6570$1...\u3092\u4f7f\u304a\u3046\nprint\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3068\u81ea\u52d5\u7684\u306b\u305d\u306e\u5024\u304c\u5909\u6570$1...\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002\nirb\u306e_\u307f\u305f\u3044\u306a\u3082\u306e\u3060\u3002\n\nTips 6: \u914d\u5217\u3092\u8868\u793a\u3059\u308b\n>>> print *Array@10\n\n\u3067\u30dd\u30a4\u30f3\u30bfArray\u304b\u308910\u500b\u306e\u8981\u7d20\u3092\u8868\u793a\u3059\u308b\u3002\n\nTips 7: \u30c7\u30d0\u30c3\u30ac\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u51fa\u3059\u308b\u3002\nWindows\u306a\u3089IsDebuggerPresent\u304c\u4f7f\u3048\u308b\u3002Unix\u3067\u306f\u4e0b\u8a18\u304c\u4f7f\u3048\u308b:\n  #ifndef _WIN32\n  #include <sys/ptrace.h>\n  static int IsDebuggerPresent()\n  {\n    static int Detected;\n    static int RunningUnderDebugger;\n    if (!Detected)\n    {\n      Detected = 1;\n      RunningUnderDebugger = ptrace(PTRACE_TRACEME, 0, 0, 0) == -1;\n    }\n    return RunningUnderDebugger;\n  }\n  #endif\n\nTips for Productive Debugging with GDB\nhttps://metricpanda.com/tips-for-productive-debugging-with-gdb\n\u306e\u6284\u8a33\u3002\n\n## Tips 1: GDB Dashboard\u3092\u4f7f\u304a\u3046\n\nGDB Dashboard\u306f\u5358\u4e00\u306e`.gdbinit`\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u30d6\u30ec\u30fc\u30af\u30dd\u30a4\u30f3\u30c8\u3067\u6b62\u307e\u308b\u305f\u3073\u306b\u4e0b\u56f3\u306e\u3088\u3046\u306a\u30af\u30fc\u30eb\u306a\u60c5\u5831\u3092\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3002\nhttps://github.com/cyrus-and/gdb-dashboard\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/79394/e77ccb4d-a4ea-aaf8-f3df-12350861f0ce.png)\n\n\n## Tips 2: \u30b0\u30ed\u30fc\u30d0\u30eb\u306f.gdbinit\u3068\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u6bce\u306e.gdbinit\u3092\u4f7f\u304a\u3046\n\n~/.gdbinit\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u3002\u3055\u3089\u306b\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u304a\u304f\u3068\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304b\u3089\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e.gdbinit\u3092\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3002\n\n```\nset auto-load local-gdbinit\n```\n\n\n## Tips 3: \u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u3067\u69cb\u9020\u4f53\u3084\u30af\u30e9\u30b9\u3092\u898b\u3084\u3059\u304f\u8868\u793a\u3057\u3088\u3046\n\n4x4\u306e\u884c\u5217\u3092\u8868\u793a\u3059\u308b\u30ab\u30b9\u30bf\u30e0\u30d5\u30a9\u30fc\u30de\u30c3\u30bf\u306e\u4f5c\u308a\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\uff1a\n\n```py\nclass MPEMatrixPrinter:\n  \"\"\"Print a 4x4 matrix.\"\"\"\n\n  def __init__(self, val, size):\n    self.val = val\n    self.size = int(size)\n\n  def to_string(self):\n    return (\"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\"\n            \"\\n\\t[ %3g %3g %3g %3g ]\") % \\\n                (float(self.val[\"flat\"][0]), float(self.val[\"flat\"][1]), float(self.val[\"flat\"][2]), float(self.val[\"flat\"][3]),\n                float(self.val[\"flat\"][4]), float(self.val[\"flat\"][5]), float(self.val[\"flat\"][6]), float(self.val[\"flat\"][7]),\n                float(self.val[\"flat\"][8]), float(self.val[\"flat\"][9]), float(self.val[\"flat\"][10]), float(self.val[\"flat\"][11]),\n                float(self.val[\"flat\"][12]), float(self.val[\"flat\"][13]), float(self.val[\"flat\"][14]), float(self.val[\"flat\"][15]))\n\ndef project_type_lookups(val):\n  lookup_tag = val.type.tag\n  if lookup_tag == None:\n    return None\n\n  match = re.match(r\"^MPEMatrix(\\d)$\", lookup_tag)\n  if match:\n    return MPEMatrixPrinter(val, match.group(1))\n\ngdb.pretty_printers.append(project_type_lookups)\n```\n\n## Tips 4: \u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u4f7f\u304a\u3046\n\n\u30b7\u30a7\u30eb\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3068\u540c\u3058\u3088\u3046\u306a\u3082\u306e\u3060\u3002\n\n```\nalias -a w = dashboard expression watch\n```\n\n\n## Tips 5: \u81ea\u52d5\u3067\u30bb\u30c3\u30c8\u3055\u308c\u308b\u5909\u6570`$1`...\u3092\u4f7f\u304a\u3046\n\n`print`\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3068\u81ea\u52d5\u7684\u306b\u305d\u306e\u5024\u304c\u5909\u6570`$1`...\u306b\u683c\u7d0d\u3055\u308c\u308b\u3002\nirb\u306e`_`\u307f\u305f\u3044\u306a\u3082\u306e\u3060\u3002\n\n\n## Tips 6: \u914d\u5217\u3092\u8868\u793a\u3059\u308b\n\n```\n>>> print *Array@10\n```\n\n\u3067\u30dd\u30a4\u30f3\u30bf`Array`\u304b\u308910\u500b\u306e\u8981\u7d20\u3092\u8868\u793a\u3059\u308b\u3002\n\n\n## Tips 7: \u30c7\u30d0\u30c3\u30ac\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u691c\u51fa\u3059\u308b\u3002\n\nWindows\u306a\u3089`IsDebuggerPresent`\u304c\u4f7f\u3048\u308b\u3002Unix\u3067\u306f\u4e0b\u8a18\u304c\u4f7f\u3048\u308b:\n\n```c\n  #ifndef _WIN32\n  #include <sys/ptrace.h>\n  static int IsDebuggerPresent()\n  {\n    static int Detected;\n    static int RunningUnderDebugger;\n    if (!Detected)\n    {\n      Detected = 1;\n      RunningUnderDebugger = ptrace(PTRACE_TRACEME, 0, 0, 0) == -1;\n    }\n    return RunningUnderDebugger;\n  }\n  #endif\n```\n"}