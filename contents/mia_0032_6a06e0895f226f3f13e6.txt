{"context": " More than 1 year has passed since last update.\u30ea\u30af\u30eb\u30fc\u30c8\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb Advent Calendar 2015\u306e21\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u4ed5\u4e8b\u3067\u306f\u5168\u30b5\u30fc\u30d3\u30b9\u6a2a\u65ad\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ed\u30b0\u53ce\u96c6\u30fb\u53ef\u8996\u5316\u30fb\u5206\u6790\u57fa\u76e4\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u904b\u7528\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n1. \u4f55\u3092\u3084\u308b\uff1f\n\u6700\u8fd1\u8a71\u984c\u306eApache Spark MLlib\u3092\u4f7f\u3063\u3066\u6a5f\u68b0\u5b66\u7fd2\u3057\u3001Spark Streaming\u3067\u305d\u306e\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\n\u5168\u4f53\u56f3\n\n\n\n\u4f53\u306b\u53d6\u308a\u4ed8\u3051\u305f\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u304b\u3089\u3001\u3064\u3051\u3066\u3044\u308b\u4eba\u304c\u300c\u7acb\u3063\u3066\u3044\u308b\u300d\u304b\u300c\u5ea7\u3063\u3066\u3044\u308b\u300d\u304b\u3092\u6a5f\u68b0\u5b66\u7fd2\u3057\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u305d\u306e\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u6d41\u3057\u3001\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u300c\u7acb\u3061\u300d\u300c\u5ea7\u308a\u300d\u72b6\u614b\u3092\u4e88\u6e2c\u3057\u3088\u3046\u3068\u3044\u3046\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u306e\u9001\u4fe1\u306b\u306f\u5c0f\u578b\u3067Linux\u304c\u52d5\u304f\u30dc\u30fc\u30c9\u306eIntel Edsion\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n1.1. \u306a\u305c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3067\u5224\u5b9a\u3067\u304d\u308b\u306e\u304b\uff1f\n\n\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u306f\u5730\u9762\u306e\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u91cd\u529b\u52a0\u901f\u5ea6\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\u91cd\u529b\u52a0\u901f\u5ea6\u306f\u3001\u6c34\u5e73\u306b\u7f6e\u3044\u305f\u72b6\u614b\u3067\u306f\u5de6\u56f3\u306e\u3088\u3046\u306b\u30bb\u30f3\u30b5\u30fc\u306eY\u8ef8\u65b9\u5411\u306b\u304b\u304b\u308a\u3001\u5782\u76f4\u306b\u7f6e\u3044\u305f\u5834\u5408\u306b\u306f\u53f3\u56f3\u306e\u3088\u3046\u306bX\u8ef8\u65b9\u5411\u306b\u304b\u304b\u308a\u307e\u3059\u3002\n\u4e0a\u56f3\u3067\u306f\u7c21\u7565\u5316\u306e\u305f\u3081\u306b2\u8ef8\u3067\u63cf\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u306fZ\u8ef8\u65b9\u5411\u3082\u3042\u308a\u307e\u3059\u3002\n\u592a\u3082\u3082\u306e\u3042\u305f\u308a\u306b\u30bb\u30f3\u30b5\u30fc\u3092\u53d6\u308a\u4ed8\u3051\u308b\u3068\u300c\u7acb\u3063\u3066\u3044\u308b\u300d\u304b\u300c\u5ea7\u3063\u3066\u3044\u308b\u300d\u304b\u3067\u30bb\u30f3\u30b5\u30fc\u306e\u5411\u304d\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\u5411\u304d\u304c\u5909\u308f\u308c\u3070\u91cd\u529b\u52a0\u901f\u5ea6\u306e\u304b\u304b\u308b\u5411\u304d\u3082\u5909\u308f\u308a\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u52a0\u901f\u5ea6\u306e\u304b\u304b\u3063\u3066\u3044\u308b\u65b9\u5411\u3055\u3048\u7279\u5b9a\u3067\u304d\u308c\u3070\u300c\u7acb\u3061\u300d\u304b\u300c\u5ea7\u308a\u300d\u304b\u304c\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n2. \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u4f5c\u308b\n\n2.1. \u7528\u610f\u3059\u308b\u3082\u306e\nIntel Edison + \u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u7248Eaglet\n\nEdison\u306fLinux\u304c\u52d5\u304fSD\u30ab\u30fc\u30c9\u30b5\u30a4\u30ba\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\u3059\u3002\n2\u30b3\u30a2500MHz\u306eAtom CPU\u30011GB\u306e\u30e1\u30e2\u30ea\u306b\u52a0\u3048\u3066WiFi\u3082\u642d\u8f09\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u306e\u5c0f\u3055\u3055\u3067\u3042\u308a\u306a\u304c\u3089\u4e00\u6614\u524d\u306e\u30d1\u30bd\u30b3\u30f3\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u30b9\u30da\u30c3\u30af\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\nEdison\u306f\u88cf\u5074\u306b\u30bb\u30f3\u30b5\u30fc\u306a\u3069\u3092\u3064\u306a\u3050\u305f\u3081\u306e\u30b3\u30cd\u30af\u30bf\u304c\u51fa\u3066\u3044\u307e\u3059\u304c\u3001\u975e\u5e38\u306b\u7d30\u304b\u3044\u30b3\u30cd\u30af\u30bf\u3067\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u5de5\u4f5c\u306b\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u5225\u9014\u3001\u62e1\u5f35\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u62e1\u5f35\u30dc\u30fc\u30c9\u306b\u306f\u7d14\u6b63\u306eEdison\u30ad\u30c3\u30c8 for Arduino\u3084Edison Breakout \u30dc\u30fc\u30c9\u30ad\u30c3\u30c8\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u5404\u7a2e\u30bb\u30f3\u30b5\u30fc\u304c\u30b1\u30fc\u30d6\u30eb1\u3064\u3067\u63a5\u7d9a\u3067\u304d\u308bGrove\u3092\u63a5\u7d9a\u3067\u304d\u308b\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u7248Eaglet\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nGROVE - I2C \u4e09\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5 ADXL345\u642d\u8f09\n\n\u30bb\u30f3\u30b5\u30fc\u306b\u306f\u5148\u307b\u3069\u8aac\u660e\u3057\u305fGrove\u30b7\u30ea\u30fc\u30ba\u3092\u4f7f\u3044\u307e\u3059\u3002\nEaglet\u3068\u306e\u63a5\u7d9a\u306f\u30b1\u30fc\u30d6\u30eb\u3092\u633f\u3057\u3053\u3080\u3060\u3051\u3067OK\u3067\u3059\u3002\u9006\u65b9\u5411\u306b\u306f\u523a\u3055\u308a\u307e\u305b\u3093\u3002\n\n\n2.2 Kinesis\u3078\u30c7\u30fc\u30bf\u3092\u6d41\u3059\nEdison\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066Kinesis\u306b\u6d41\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/mia-0032/edsion-adxl345-to-kinesis\nEdison\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3084\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f7f\u3044\u65b9\u306a\u3069\u306fEaglet + Intel Edison\u304b\u3089Kinesis\u3078\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u9001\u308b - Qiita\u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\nroot@myedison:~# python sender.py <your_stream_name>\n\n\u3068\u3059\u308c\u3070Kinesis\u306b\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u5ef6\u3005\u3068\u6d41\u308c\u307e\u3059\u3002\n\n2.3. \u4f53\u3078\u306e\u53d6\u308a\u4ed8\u3051\n\u3053\u3093\u306a\u611f\u3058\u3067\u3055\u304f\u3063\u3068\u53d6\u308a\u4ed8\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u3082\u3057\u5e38\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u30b1\u30fc\u30b9\u306b\u5165\u308c\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u5b9f\u9a13\u306a\u306e\u3067\u30c6\u30fc\u30d7\u3067\u56fa\u5b9a\u3057\u3066USB\u304b\u3089\u7d66\u96fb\u3057\u3066\u3044\u307e\u3059\u3002\nEdison\u3068\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3082\u4e21\u9762\u30c6\u30fc\u30d7\u3067\u677f\u306b\u304f\u3063\u3064\u3051\u305f\u3060\u3051\u3067\u3059\u3002\n\u898b\u305f\u76ee\u306f\u3088\u304f\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u5b8c\u6210\u3067\u3059\uff01\n\n3. Spark\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\nSpark MLlib, Spark Streaming\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/mia-0032/spark-ml-adxl345-from-kinesis\n\n3.1. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6d41\u308c\n\u5927\u304d\u304f\u5206\u3051\u308b\u3068\u30d0\u30c3\u30c1\u51e6\u7406\u90e8\u5206\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u90e8\u5206\u306b\u308f\u304b\u308c\u307e\u3059\u3002\n\n\u300c\u7acb\u3061\u300d\u300c\u5ea7\u308a\u300d\u72b6\u614b\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u305f\u52a0\u901f\u5ea6\u30c7\u30fc\u30bf\u3092MLlib\u306e\u6c7a\u5b9a\u6728\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u3057\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n\n\n\u7acb\u3061\u30c7\u30fc\u30bf: https://github.com/mia-0032/spark-ml-adxl345-from-kinesis/blob/master/data/standing.json\n\n\u5ea7\u308a\u30c7\u30fc\u30bf: https://github.com/mia-0032/spark-ml-adxl345-from-kinesis/blob/master/data/sitting.json\n\n\n\n\u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306bStreaming\u3067\u53d7\u3051\u305f\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3001\u73fe\u5728\u306e\u72b6\u614b\u3092\u5224\u5b9a\n\n\u306a\u304a\u3001Spark 1.5.2\u3060\u3068Kinesis\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081\u30011.4.1\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n3.2. \u6c7a\u5b9a\u6728\u306b\u3064\u3044\u3066\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\u6c7a\u5b9a\u6728\u306f\u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\u306eIF\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u3069\u3046\u3044\u3046\u6761\u4ef6\u3067\u5206\u5c90\u3057\u3066\u3044\u3051\u3070\u3001\u76ee\u7684\u3068\u3059\u308b\u7d50\u679c\u306b\u305f\u3069\u308a\u7740\u304f\u304b\u3092\u30c7\u30fc\u30bf\u304b\u3089\u5c0e\u304f\u624b\u6cd5\u3067\u3059\u3002\nWikipedia\u306e\u89e3\u8aac( https://ja.wikipedia.org/wiki/%E6%B1%BA%E5%AE%9A%E6%9C%A8 )\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u56f3\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n3.3. \u30b3\u30fc\u30c9\n\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\n\u5404\u51e6\u7406\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\nApp.scala\nobject App {\n  def main(args: Array[String]): Unit = {\n    /**\n     \u521d\u671f\u5316\u51e6\u7406\n    */\n    val conf = new SparkConf().setAppName(\"SensorValueDecisionTree\")\n    val ssc = new StreamingContext(conf, Seconds(2))\n    val sc = ssc.sparkContext\n    Logger.getRootLogger.setLevel(Level.WARN)\n\n    val standingDataPath = args(0)\n    val sittingDataPath = args(1)\n    val streamName = args(2)\n\n    /**\n     \u4e8b\u524d\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\n    */\n    val standingData = loadTrainingData(standingDataPath, sc, \"standing\")\n    val sittingData = loadTrainingData(sittingDataPath, sc, \"sitting\")\n    val data = standingData.union(sittingData)\n\n    /**\n     \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u3051\u308b\n    */\n    val splits = data.randomSplit(Array(0.8, 0.2))\n    val (trainingData, testData) = (splits(0), splits(1))\n\n    /**\n     \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n    */\n    val model = createDecisionTreeModel(trainingData)\n\n    /**\n     \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u3092\u78ba\u8a8d\n    */\n    testMSE(testData, model)\n\n    /**\n     \u30e2\u30c7\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3066\u72b6\u614b\u306e\u51fa\u529b\u3092\u884c\u3046\n    */\n    val dStream = createDStream(streamName, ssc)\n    dStream.foreachRDD { rdd =>\n      model.predict(rdd).foreach { p =>\n        val s = p match {\n          case 1.0 => \"standing\"\n          case 0.0 => \"sitting\"\n        }\n        println(s)\n      }\n    }\n\n    ssc.start()\n    ssc.awaitTermination()\n  }\n\n  def loadTrainingData(filePath: String, sc: SparkContext, state: String): RDD[LabeledPoint] = {\n    sc.textFile(filePath)\n      .map { l =>\n        // JSON\u3092\u30d1\u30fc\u30b9\n        implicit val formats = DefaultFormats\n        parse(l).extract[Acceleration]\n      }.map { a => LabeledPoint(\n        // \u76ee\u7684\u5909\u6570\u3092\u6307\u5b9a\n        state match {\n          case \"standing\" => 1.0\n          case \"sitting\" => 0.0\n        },\n        // \u8aac\u660e\u5909\u6570\u3092\u6307\u5b9a\n        Vectors.dense(a.X, a.Y, a.Z)\n      )}\n  }\n\n  def createDecisionTreeModel(trainingData: RDD[LabeledPoint]): DecisionTreeModel = {\n    // \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u304c\u3042\u308b\u5834\u5408\u306f\u6307\u5b9a\u3002\u4eca\u56de\u306f\u306a\u3057\u3002\n    val categoricalFeaturesInfo = Map[Int, Int]()\n    // \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a\n    val impurity = \"variance\"\n    // \u30c4\u30ea\u30fc\u306e\u5206\u5c90\u306e\u6700\u5927\u5024\u3092\u6307\u5b9a\n    val maxDepth = 5\n    val maxBins = 32\n\n    // \u5b66\u7fd2\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4f5c\u6210(MLlib\u306fLabeledPoint\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b)\n    val model = DecisionTree.trainRegressor(\n      trainingData, categoricalFeaturesInfo, impurity, maxDepth, maxBins\n    )\n\n    // \u30e2\u30c7\u30eb\u3092\u63cf\u753b\n    println(\"Learned regression tree model:\\n\" + model.toDebugString)\n    model\n  }\n\n  def testMSE(testData: RDD[LabeledPoint], model: DecisionTreeModel): Unit = {\n    // \u8aa4\u5dee\u306e\u81ea\u4e57\u5024\u304b\u3089\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u3092\u307f\u308b\n    val labelsAndPredictions = testData.map { point =>\n      val prediction = model.predict(point.features)\n      (point.label, prediction)\n    }\n    val testMSE = labelsAndPredictions.map{ case(v, p) => math.pow(v - p, 2)}.mean()\n    println(\"Test Mean Squared Error = \" + testMSE)\n  }\n\n  def createDStream(streamName: String, ssc: StreamingContext): DStream[Vector] = {\n    // Kinesis\u304b\u3089\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\n    KinesisUtils.createStream(\n      ssc,\n      \"spark-ml-adxl345-from-kinesis\",\n      streamName,\n      \"kinesis.ap-northeast-1.amazonaws.com\",\n      \"ap-northeast-1\",\n      InitialPositionInStream.TRIM_HORIZON,\n      Seconds(2),\n      StorageLevel.MEMORY_AND_DISK_2\n    ).map(s => new String(s))\n    .map { l =>\n      implicit val formats = DefaultFormats\n      println(l)\n      parse(l).extract[Acceleration]\n    }.map{ a =>\n      Vectors.dense(a.X, a.Y, a.Z)\n    }\n  }\n}\n\n\n\n3.4. \u5b9f\u884c\u7d50\u679c\n\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nLearned regression tree model:\nDecisionTreeModel regressor of depth 4 with 9 nodes\n  If (feature 1 <= -0.2377357929944992)\n   If (feature 2 <= 0.7265625)\n    If (feature 1 <= -0.8792451024055481)\n     Predict: 1.0\n    Else (feature 1 > -0.8792451024055481)\n     If (feature 2 <= -0.33203125)\n      Predict: 1.0\n     Else (feature 2 > -0.33203125)\n      Predict: 0.0\n   Else (feature 2 > 0.7265625)\n    Predict: 0.0\n  Else (feature 1 > -0.2377357929944992)\n   Predict: 0.0\n\nTest Mean Squared Error = 0.0\n\nfeature 1\u304cY\u8ef8\u65b9\u5411\u3001feature 2\u306fZ\u8ef8\u65b9\u5411\u306e\u52a0\u901f\u5ea6\u3067\u3059\u3002\nPredict\u306f\u30011.0\u306e\u3068\u304d\u7acb\u3063\u3066\u3044\u308b\u30010.0\u306e\u3068\u304d\u5ea7\u3063\u3066\u3044\u308b\u72b6\u614b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nY\u8ef8\u65b9\u5411\u306e\u52a0\u901f\u5ea6\u304c-0.2377357929944992\u4ee5\u4e0b\u3067\u3001\u3055\u3089\u306bZ\u8ef8\u65b9\u5411\u304c0.7265625\u4ee5\u4e0b\u3067\u30fb\u30fb\u30fb\u3068\u3044\u3046\u611f\u3058\u306b\u8aad\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\u3056\u3063\u3068\u30c7\u30fc\u30bf\u3092\u898b\u308b\u9650\u308a\u3067\u306f\u6761\u4ef6\u3092\u5165\u308c\u5b50\u306b\u3057\u306a\u304f\u3066\u3082\u5224\u5b9a\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u51fa\u529b\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u975e\u5e38\u306b\u968e\u5c64\u306e\u6df1\u3044\u30e2\u30c7\u30eb\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u904e\u5b66\u7fd2\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u5b66\u7fd2\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u308c\u3070\u5c11\u3057\u7d50\u679c\u306f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3053\u306e\u30e2\u30c7\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3060\u3068\u304d\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n{\"Y\": -0.98113185167312622, \"X\": -0.041509423404932022, \"Z\": 0.01171875}\nstanding\n{\"Y\": -0.97735828161239624, \"X\": -0.045283008366823196, \"Z\": 0.015625}\nstanding\n{\"Y\": -0.97735828161239624, \"X\": -0.060377344489097595, \"Z\": 0.00390625}\nstanding\n...\n{\"Y\": -0.052830174565315247, \"X\": -0.11320751905441284, \"Z\": 0.9453125}\nsitting\n{\"Y\": -0.045283008366823196, \"X\": -0.11320751905441284, \"Z\": 0.94140625}\nsitting\n{\"Y\": -0.049056593328714371, \"X\": -0.11320751905441284, \"Z\": 0.94140625}\nsitting\n\nY\u8ef8\u65b9\u5411\u306e\u5024\u3092\u898b\u308b\u3060\u3051\u3067\u3082-1\u4ed8\u8fd1\u306e\u3068\u304d\u306f\u300c\u7acb\u3061\u300d\u30010\u4ed8\u8fd1\u306e\u6642\u306f\u300c\u5ea7\u308a\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u5224\u5b9a\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n4. \u307e\u3068\u3081\nSpark\u306f\u30d0\u30c3\u30c1\u51e6\u7406\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u307e\u3067\u4e00\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u5b8c\u7d50\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u3044\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u305d\u306e\u7279\u5fb4\u3092\u3046\u307e\u304f\u4f7f\u3063\u305f\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u306f\u305d\u306e\u5024\u3060\u3051\u3067\u306f\u4f55\u3092\u3057\u3066\u3044\u308b\u3068\u304d\u306e\u30c7\u30fc\u30bf\u306a\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u304f\u3001\u5b9f\u969b\u306b\u30b5\u30fc\u30d3\u30b9\u306b\u5fdc\u7528\u3059\u308b\u306b\u306f\u307e\u3060\u96e3\u3057\u3044\u90e8\u5206\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306f\u5224\u5b9a\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3060\u3051\u53d6\u5f97\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u697d\u3067\u3057\u305f\u3002\n\u300c\u8d70\u3063\u3066\u3044\u308b\u300d\u300c\u6b69\u3044\u3066\u3044\u308b\u300d\u3042\u305f\u308a\u306b\u306a\u308b\u3068\u3001\u6642\u7cfb\u5217\u3067\u306e\u30c7\u30fc\u30bf\u306e\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3067\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u6700\u8fd1\u306f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u4f7f\u3048\u308b\u5c0f\u578b\u30dc\u30fc\u30c9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\n\u4e2d\u306b\u306fJavascript\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u305f\u308a\u3001Linux\u306e\u77e5\u8b58\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u308a\u3068\u3001Web\u958b\u767a\u306e\u77e5\u8b58\u304c\u6d3b\u304b\u305b\u308b\u30dc\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\n\u6614\u306b\u6bd4\u3079\u308b\u3068\u3001\u7269\u3092\u4f5c\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n[\u30ea\u30af\u30eb\u30fc\u30c8\u30e9\u30a4\u30d5\u30b9\u30bf\u30a4\u30eb Advent Calendar 2015](http://qiita.com/advent-calendar/2015/recruitlifestyle)\u306e21\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u4ed5\u4e8b\u3067\u306f[\u5168\u30b5\u30fc\u30d3\u30b9\u6a2a\u65ad\u306e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30ed\u30b0\u53ce\u96c6\u30fb\u53ef\u8996\u5316\u30fb\u5206\u6790\u57fa\u76e4](http://www.slideshare.net/RecruitLifestyle/ss-55766242)\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u767a\u904b\u7528\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n## 1. \u4f55\u3092\u3084\u308b\uff1f\n\n\u6700\u8fd1\u8a71\u984c\u306e[Apache Spark](http://spark.apache.org/) MLlib\u3092\u4f7f\u3063\u3066\u6a5f\u68b0\u5b66\u7fd2\u3057\u3001Spark Streaming\u3067\u305d\u306e\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u3092\u4f7f\u3063\u3066\u5224\u5b9a\u3057\u307e\u3059\u3002\n\n- \u5168\u4f53\u56f3\n![spark-edison.001.jpeg](https://qiita-image-store.s3.amazonaws.com/0/59581/eb6b318d-38d2-1a4c-798f-07c6f9bccc38.jpeg)\n\n\u4f53\u306b\u53d6\u308a\u4ed8\u3051\u305f\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u304b\u3089\u3001\u3064\u3051\u3066\u3044\u308b\u4eba\u304c\u300c\u7acb\u3063\u3066\u3044\u308b\u300d\u304b\u300c\u5ea7\u3063\u3066\u3044\u308b\u300d\u304b\u3092\u6a5f\u68b0\u5b66\u7fd2\u3057\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u305d\u306e\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u6d41\u3057\u3001\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u304b\u3089\u300c\u7acb\u3061\u300d\u300c\u5ea7\u308a\u300d\u72b6\u614b\u3092\u4e88\u6e2c\u3057\u3088\u3046\u3068\u3044\u3046\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u306e\u9001\u4fe1\u306b\u306f\u5c0f\u578b\u3067Linux\u304c\u52d5\u304f\u30dc\u30fc\u30c9\u306e[Intel Edsion](http://edison-lab.jp/edison/)\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n### 1.1. \u306a\u305c\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3067\u5224\u5b9a\u3067\u304d\u308b\u306e\u304b\uff1f\n\n![acceleration_001.png](https://qiita-image-store.s3.amazonaws.com/0/59581/e96d7df7-bad4-a904-a824-1d8225d19384.png)\n\n\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306b\u306f\u5730\u9762\u306e\u65b9\u5411\u306b\u5411\u304b\u3063\u3066\u91cd\u529b\u52a0\u901f\u5ea6\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\u91cd\u529b\u52a0\u901f\u5ea6\u306f\u3001\u6c34\u5e73\u306b\u7f6e\u3044\u305f\u72b6\u614b\u3067\u306f\u5de6\u56f3\u306e\u3088\u3046\u306b\u30bb\u30f3\u30b5\u30fc\u306eY\u8ef8\u65b9\u5411\u306b\u304b\u304b\u308a\u3001\u5782\u76f4\u306b\u7f6e\u3044\u305f\u5834\u5408\u306b\u306f\u53f3\u56f3\u306e\u3088\u3046\u306bX\u8ef8\u65b9\u5411\u306b\u304b\u304b\u308a\u307e\u3059\u3002\n\u4e0a\u56f3\u3067\u306f\u7c21\u7565\u5316\u306e\u305f\u3081\u306b2\u8ef8\u3067\u63cf\u3044\u3066\u3044\u307e\u3059\u304c\u3001\u5b9f\u969b\u306b\u306fZ\u8ef8\u65b9\u5411\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u592a\u3082\u3082\u306e\u3042\u305f\u308a\u306b\u30bb\u30f3\u30b5\u30fc\u3092\u53d6\u308a\u4ed8\u3051\u308b\u3068\u300c\u7acb\u3063\u3066\u3044\u308b\u300d\u304b\u300c\u5ea7\u3063\u3066\u3044\u308b\u300d\u304b\u3067\u30bb\u30f3\u30b5\u30fc\u306e\u5411\u304d\u304c\u5909\u308f\u308a\u307e\u3059\u3002\n\u5411\u304d\u304c\u5909\u308f\u308c\u3070\u91cd\u529b\u52a0\u901f\u5ea6\u306e\u304b\u304b\u308b\u5411\u304d\u3082\u5909\u308f\u308a\u307e\u3059\u3002\n\u3057\u305f\u304c\u3063\u3066\u3001\u52a0\u901f\u5ea6\u306e\u304b\u304b\u3063\u3066\u3044\u308b\u65b9\u5411\u3055\u3048\u7279\u5b9a\u3067\u304d\u308c\u3070\u300c\u7acb\u3061\u300d\u304b\u300c\u5ea7\u308a\u300d\u304b\u304c\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n## 2. \u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u3092\u4f5c\u308b\n\n### 2.1. \u7528\u610f\u3059\u308b\u3082\u306e\n\nIntel Edison + [\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u7248Eaglet](https://www.switch-science.com/catalog/2070/)\n\n![edsion-eaglet.png](https://qiita-image-store.s3.amazonaws.com/0/59581/92d7c953-87b3-93cf-8989-774b6d49eb0b.png)\n\nEdison\u306fLinux\u304c\u52d5\u304fSD\u30ab\u30fc\u30c9\u30b5\u30a4\u30ba\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u3067\u3059\u3002\n2\u30b3\u30a2500MHz\u306eAtom CPU\u30011GB\u306e\u30e1\u30e2\u30ea\u306b\u52a0\u3048\u3066WiFi\u3082\u642d\u8f09\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u306e\u5c0f\u3055\u3055\u3067\u3042\u308a\u306a\u304c\u3089\u4e00\u6614\u524d\u306e\u30d1\u30bd\u30b3\u30f3\u3068\u540c\u3058\u304f\u3089\u3044\u306e\u30b9\u30da\u30c3\u30af\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n\nEdison\u306f\u88cf\u5074\u306b\u30bb\u30f3\u30b5\u30fc\u306a\u3069\u3092\u3064\u306a\u3050\u305f\u3081\u306e\u30b3\u30cd\u30af\u30bf\u304c\u51fa\u3066\u3044\u307e\u3059\u304c\u3001\u975e\u5e38\u306b\u7d30\u304b\u3044\u30b3\u30cd\u30af\u30bf\u3067\u3001\u305d\u306e\u307e\u307e\u3067\u306f\u5de5\u4f5c\u306b\u4f7f\u3048\u307e\u305b\u3093\u3002\n\u5225\u9014\u3001\u62e1\u5f35\u30dc\u30fc\u30c9\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u62e1\u5f35\u30dc\u30fc\u30c9\u306b\u306f\u7d14\u6b63\u306e[Edison\u30ad\u30c3\u30c8 for Arduino](http://edison-lab.jp/edison-arduino/)\u3084[Edison Breakout \u30dc\u30fc\u30c9\u30ad\u30c3\u30c8](http://edison-lab.jp/edison-breakout/)\u306a\u3069\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\u5404\u7a2e\u30bb\u30f3\u30b5\u30fc\u304c\u30b1\u30fc\u30d6\u30eb1\u3064\u3067\u63a5\u7d9a\u3067\u304d\u308b[Grove](http://www.seeedstudio.com/depot/s/grovefamily.html)\u3092\u63a5\u7d9a\u3067\u304d\u308b\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u7248Eaglet\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n[GROVE - I2C \u4e09\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5 ADXL345\u642d\u8f09](https://www.switch-science.com/catalog/972/)\n![grove_ ADXL345.png](https://qiita-image-store.s3.amazonaws.com/0/59581/31cfdc41-6d81-beef-6baf-7f1f2a76f49a.png)\n\n\u30bb\u30f3\u30b5\u30fc\u306b\u306f\u5148\u307b\u3069\u8aac\u660e\u3057\u305fGrove\u30b7\u30ea\u30fc\u30ba\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nEaglet\u3068\u306e\u63a5\u7d9a\u306f\u30b1\u30fc\u30d6\u30eb\u3092\u633f\u3057\u3053\u3080\u3060\u3051\u3067OK\u3067\u3059\u3002\u9006\u65b9\u5411\u306b\u306f\u523a\u3055\u308a\u307e\u305b\u3093\u3002\n![edison-grove-connect.png](https://qiita-image-store.s3.amazonaws.com/0/59581/de3246bc-8745-c306-a0c5-3381a68d2853.png)\n\n### 2.2 Kinesis\u3078\u30c7\u30fc\u30bf\u3092\u6d41\u3059\n\nEdison\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u53d6\u5f97\u3057\u3066Kinesis\u306b\u6d41\u3059\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u4ee5\u4e0b\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u304a\u3044\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/mia-0032/edsion-adxl345-to-kinesis\n\nEdison\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u624b\u9806\u3084\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4f7f\u3044\u65b9\u306a\u3069\u306f[Eaglet + Intel Edison\u304b\u3089Kinesis\u3078\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3092\u9001\u308b - Qiita](http://qiita.com/mia_0032/items/d94d16db8b475300aec3)\u306b\u307e\u3068\u3081\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n```bash\nroot@myedison:~# python sender.py <your_stream_name>\n```\n\n\u3068\u3059\u308c\u3070Kinesis\u306b\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u5ef6\u3005\u3068\u6d41\u308c\u307e\u3059\u3002\n\n### 2.3. \u4f53\u3078\u306e\u53d6\u308a\u4ed8\u3051\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3055\u304f\u3063\u3068\u53d6\u308a\u4ed8\u3051\u3066\u3057\u307e\u3044\u307e\u3057\u3087\u3046\u3002\n\n![edison-attach.png](https://qiita-image-store.s3.amazonaws.com/0/59581/13a80190-703a-706f-5fc0-1f8107e19d78.png)\n\n\u3082\u3057\u5e38\u7528\u3059\u308b\u306e\u3067\u3042\u308c\u3070\u30b1\u30fc\u30b9\u306b\u5165\u308c\u305f\u65b9\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u5b9f\u9a13\u306a\u306e\u3067\u30c6\u30fc\u30d7\u3067\u56fa\u5b9a\u3057\u3066USB\u304b\u3089\u7d66\u96fb\u3057\u3066\u3044\u307e\u3059\u3002\nEdison\u3068\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30fc\u3082\u4e21\u9762\u30c6\u30fc\u30d7\u3067\u677f\u306b\u304f\u3063\u3064\u3051\u305f\u3060\u3051\u3067\u3059\u3002\n\n\u898b\u305f\u76ee\u306f\u3088\u304f\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u308c\u3067\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u306f\u5b8c\u6210\u3067\u3059\uff01\n\n## 3. Spark\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\n\nSpark MLlib, Spark Streaming\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306b\u516c\u958b\u3057\u307e\u3057\u305f\u3002\nhttps://github.com/mia-0032/spark-ml-adxl345-from-kinesis\n\n### 3.1. \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u6d41\u308c\n\n\u5927\u304d\u304f\u5206\u3051\u308b\u3068\u30d0\u30c3\u30c1\u51e6\u7406\u90e8\u5206\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u306e\u90e8\u5206\u306b\u308f\u304b\u308c\u307e\u3059\u3002\n\n1. \u300c\u7acb\u3061\u300d\u300c\u5ea7\u308a\u300d\u72b6\u614b\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u305f\u52a0\u901f\u5ea6\u30c7\u30fc\u30bf\u3092MLlib\u306e\u6c7a\u5b9a\u6728\u3092\u4f7f\u3063\u3066\u5b66\u7fd2\u3057\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n  - \u7acb\u3061\u30c7\u30fc\u30bf: https://github.com/mia-0032/spark-ml-adxl345-from-kinesis/blob/master/data/standing.json\n  - \u5ea7\u308a\u30c7\u30fc\u30bf: https://github.com/mia-0032/spark-ml-adxl345-from-kinesis/blob/master/data/sitting.json\n2. \u4f5c\u6210\u3057\u305f\u30e2\u30c7\u30eb\u306bStreaming\u3067\u53d7\u3051\u305f\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3001\u73fe\u5728\u306e\u72b6\u614b\u3092\u5224\u5b9a\n\n\u306a\u304a\u3001Spark 1.5.2\u3060\u3068Kinesis\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u306a\u304b\u3063\u305f\u305f\u3081\u30011.4.1\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n### 3.2. \u6c7a\u5b9a\u6728\u306b\u3064\u3044\u3066\n\n\u7c21\u5358\u306b\u8aac\u660e\u3059\u308b\u3068\u3001\u6c7a\u5b9a\u6728\u306f\u30d5\u30ed\u30fc\u30c1\u30e3\u30fc\u30c8\u306eIF\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u3069\u3046\u3044\u3046\u6761\u4ef6\u3067\u5206\u5c90\u3057\u3066\u3044\u3051\u3070\u3001\u76ee\u7684\u3068\u3059\u308b\u7d50\u679c\u306b\u305f\u3069\u308a\u7740\u304f\u304b\u3092\u30c7\u30fc\u30bf\u304b\u3089\u5c0e\u304f\u624b\u6cd5\u3067\u3059\u3002\n\nWikipedia\u306e\u89e3\u8aac( https://ja.wikipedia.org/wiki/%E6%B1%BA%E5%AE%9A%E6%9C%A8 )\u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u56f3\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u3002\n\n### 3.3. \u30b3\u30fc\u30c9\n\n\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u306f\u4ee5\u4e0b\u306e\u90e8\u5206\u3067\u3059\u3002\n\u5404\u51e6\u7406\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u3064\u3051\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```scala:App.scala\nobject App {\n  def main(args: Array[String]): Unit = {\n    /**\n     \u521d\u671f\u5316\u51e6\u7406\n    */\n    val conf = new SparkConf().setAppName(\"SensorValueDecisionTree\")\n    val ssc = new StreamingContext(conf, Seconds(2))\n    val sc = ssc.sparkContext\n    Logger.getRootLogger.setLevel(Level.WARN)\n\n    val standingDataPath = args(0)\n    val sittingDataPath = args(1)\n    val streamName = args(2)\n\n    /**\n     \u4e8b\u524d\u306b\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u305f\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\n    */\n    val standingData = loadTrainingData(standingDataPath, sc, \"standing\")\n    val sittingData = loadTrainingData(sittingDataPath, sc, \"sitting\")\n    val data = standingData.union(sittingData)\n\n    /**\n     \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3068\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u5206\u3051\u308b\n    */\n    val splits = data.randomSplit(Array(0.8, 0.2))\n    val (trainingData, testData) = (splits(0), splits(1))\n\n    /**\n     \u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u3092\u4f5c\u6210\n    */\n    val model = createDecisionTreeModel(trainingData)\n    \n    /**\n     \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u3092\u78ba\u8a8d\n    */\n    testMSE(testData, model)\n\n    /**\n     \u30e2\u30c7\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u3066\u72b6\u614b\u306e\u51fa\u529b\u3092\u884c\u3046\n    */\n    val dStream = createDStream(streamName, ssc)\n    dStream.foreachRDD { rdd =>\n      model.predict(rdd).foreach { p =>\n        val s = p match {\n          case 1.0 => \"standing\"\n          case 0.0 => \"sitting\"\n        }\n        println(s)\n      }\n    }\n\n    ssc.start()\n    ssc.awaitTermination()\n  }\n\n  def loadTrainingData(filePath: String, sc: SparkContext, state: String): RDD[LabeledPoint] = {\n    sc.textFile(filePath)\n      .map { l =>\n        // JSON\u3092\u30d1\u30fc\u30b9\n        implicit val formats = DefaultFormats\n        parse(l).extract[Acceleration]\n      }.map { a => LabeledPoint(\n        // \u76ee\u7684\u5909\u6570\u3092\u6307\u5b9a\n        state match {\n          case \"standing\" => 1.0\n          case \"sitting\" => 0.0\n        },\n        // \u8aac\u660e\u5909\u6570\u3092\u6307\u5b9a\n        Vectors.dense(a.X, a.Y, a.Z)\n      )}\n  }\n\n  def createDecisionTreeModel(trainingData: RDD[LabeledPoint]): DecisionTreeModel = {\n    // \u30ab\u30c6\u30b4\u30ea\u5909\u6570\u304c\u3042\u308b\u5834\u5408\u306f\u6307\u5b9a\u3002\u4eca\u56de\u306f\u306a\u3057\u3002\n    val categoricalFeaturesInfo = Map[Int, Int]()\n    // \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6307\u5b9a\n    val impurity = \"variance\"\n    // \u30c4\u30ea\u30fc\u306e\u5206\u5c90\u306e\u6700\u5927\u5024\u3092\u6307\u5b9a\n    val maxDepth = 5\n    val maxBins = 32\n\n    // \u5b66\u7fd2\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4f5c\u6210(MLlib\u306fLabeledPoint\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b)\n    val model = DecisionTree.trainRegressor(\n      trainingData, categoricalFeaturesInfo, impurity, maxDepth, maxBins\n    )\n    \n    // \u30e2\u30c7\u30eb\u3092\u63cf\u753b\n    println(\"Learned regression tree model:\\n\" + model.toDebugString)\n    model\n  }\n\n  def testMSE(testData: RDD[LabeledPoint], model: DecisionTreeModel): Unit = {\n    // \u8aa4\u5dee\u306e\u81ea\u4e57\u5024\u304b\u3089\u30e2\u30c7\u30eb\u306e\u5f53\u3066\u306f\u307e\u308a\u3092\u307f\u308b\n    val labelsAndPredictions = testData.map { point =>\n      val prediction = model.predict(point.features)\n      (point.label, prediction)\n    }\n    val testMSE = labelsAndPredictions.map{ case(v, p) => math.pow(v - p, 2)}.mean()\n    println(\"Test Mean Squared Error = \" + testMSE)\n  }\n\n  def createDStream(streamName: String, ssc: StreamingContext): DStream[Vector] = {\n    // Kinesis\u304b\u3089\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308b\n    KinesisUtils.createStream(\n      ssc,\n      \"spark-ml-adxl345-from-kinesis\",\n      streamName,\n      \"kinesis.ap-northeast-1.amazonaws.com\",\n      \"ap-northeast-1\",\n      InitialPositionInStream.TRIM_HORIZON,\n      Seconds(2),\n      StorageLevel.MEMORY_AND_DISK_2\n    ).map(s => new String(s))\n    .map { l =>\n      implicit val formats = DefaultFormats\n      println(l)\n      parse(l).extract[Acceleration]\n    }.map{ a =>\n      Vectors.dense(a.X, a.Y, a.Z)\n    }\n  }\n}\n```\n\n### 3.4. \u5b9f\u884c\u7d50\u679c\n\n\u5b66\u7fd2\u3057\u305f\u30e2\u30c7\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\nLearned regression tree model:\nDecisionTreeModel regressor of depth 4 with 9 nodes\n  If (feature 1 <= -0.2377357929944992)\n   If (feature 2 <= 0.7265625)\n    If (feature 1 <= -0.8792451024055481)\n     Predict: 1.0\n    Else (feature 1 > -0.8792451024055481)\n     If (feature 2 <= -0.33203125)\n      Predict: 1.0\n     Else (feature 2 > -0.33203125)\n      Predict: 0.0\n   Else (feature 2 > 0.7265625)\n    Predict: 0.0\n  Else (feature 1 > -0.2377357929944992)\n   Predict: 0.0\n\nTest Mean Squared Error = 0.0\n```\n\n`feature 1`\u304cY\u8ef8\u65b9\u5411\u3001`feature 2`\u306fZ\u8ef8\u65b9\u5411\u306e\u52a0\u901f\u5ea6\u3067\u3059\u3002\n`Predict`\u306f\u3001`1.0`\u306e\u3068\u304d\u7acb\u3063\u3066\u3044\u308b\u3001`0.0`\u306e\u3068\u304d\u5ea7\u3063\u3066\u3044\u308b\u72b6\u614b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nY\u8ef8\u65b9\u5411\u306e\u52a0\u901f\u5ea6\u304c`-0.2377357929944992`\u4ee5\u4e0b\u3067\u3001\u3055\u3089\u306bZ\u8ef8\u65b9\u5411\u304c`0.7265625`\u4ee5\u4e0b\u3067\u30fb\u30fb\u30fb\u3068\u3044\u3046\u611f\u3058\u306b\u8aad\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n\u3056\u3063\u3068\u30c7\u30fc\u30bf\u3092\u898b\u308b\u9650\u308a\u3067\u306f\u6761\u4ef6\u3092\u5165\u308c\u5b50\u306b\u3057\u306a\u304f\u3066\u3082\u5224\u5b9a\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u51fa\u529b\u3055\u308c\u305f\u30e2\u30c7\u30eb\u306f\u975e\u5e38\u306b\u968e\u5c64\u306e\u6df1\u3044\u30e2\u30c7\u30eb\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u904e\u5b66\u7fd2\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u3002\u5b66\u7fd2\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u308c\u3070\u5c11\u3057\u7d50\u679c\u306f\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u3053\u306e\u30e2\u30c7\u30eb\u306b\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u30c7\u30fc\u30bf\u3092\u6d41\u3057\u8fbc\u3093\u3060\u3068\u304d\u306e\u51fa\u529b\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n{\"Y\": -0.98113185167312622, \"X\": -0.041509423404932022, \"Z\": 0.01171875}\nstanding\n{\"Y\": -0.97735828161239624, \"X\": -0.045283008366823196, \"Z\": 0.015625}\nstanding\n{\"Y\": -0.97735828161239624, \"X\": -0.060377344489097595, \"Z\": 0.00390625}\nstanding\n...\n{\"Y\": -0.052830174565315247, \"X\": -0.11320751905441284, \"Z\": 0.9453125}\nsitting\n{\"Y\": -0.045283008366823196, \"X\": -0.11320751905441284, \"Z\": 0.94140625}\nsitting\n{\"Y\": -0.049056593328714371, \"X\": -0.11320751905441284, \"Z\": 0.94140625}\nsitting\n```\n\nY\u8ef8\u65b9\u5411\u306e\u5024\u3092\u898b\u308b\u3060\u3051\u3067\u3082-1\u4ed8\u8fd1\u306e\u3068\u304d\u306f\u300c\u7acb\u3061\u300d\u30010\u4ed8\u8fd1\u306e\u6642\u306f\u300c\u5ea7\u308a\u300d\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3061\u3083\u3093\u3068\u5224\u5b9a\u3067\u304d\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n## 4. \u307e\u3068\u3081\n\nSpark\u306f\u30d0\u30c3\u30c1\u51e6\u7406\u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u307e\u3067\u4e00\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u4e2d\u3067\u5b8c\u7d50\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u3044\u306e\u304c\u7279\u5fb4\u3067\u3059\u3002\n\u4eca\u56de\u4f5c\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u305d\u306e\u7279\u5fb4\u3092\u3046\u307e\u304f\u4f7f\u3063\u305f\u69cb\u6210\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u306f\u305d\u306e\u5024\u3060\u3051\u3067\u306f\u4f55\u3092\u3057\u3066\u3044\u308b\u3068\u304d\u306e\u30c7\u30fc\u30bf\u306a\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u304f\u3001\u5b9f\u969b\u306b\u30b5\u30fc\u30d3\u30b9\u306b\u5fdc\u7528\u3059\u308b\u306b\u306f\u307e\u3060\u96e3\u3057\u3044\u90e8\u5206\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u4eca\u56de\u306f\u5224\u5b9a\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u30bb\u30f3\u30b5\u30fc\u306e\u5024\u3060\u3051\u53d6\u5f97\u3059\u308c\u3070\u3088\u3044\u306e\u3067\u697d\u3067\u3057\u305f\u3002\n\u300c\u8d70\u3063\u3066\u3044\u308b\u300d\u300c\u6b69\u3044\u3066\u3044\u308b\u300d\u3042\u305f\u308a\u306b\u306a\u308b\u3068\u3001\u6642\u7cfb\u5217\u3067\u306e\u30c7\u30fc\u30bf\u306e\u51e6\u7406\u304c\u5fc5\u8981\u306b\u306a\u308a\u305d\u3046\u3067\u96e3\u3057\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u6700\u8fd1\u306f\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u306b\u4f7f\u3048\u308b\u5c0f\u578b\u30dc\u30fc\u30c9\u304c\u5897\u3048\u3066\u3044\u307e\u3059\u3002\n\u4e2d\u306b\u306fJavascript\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3051\u305f\u308a\u3001Linux\u306e\u77e5\u8b58\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u305f\u308a\u3068\u3001Web\u958b\u767a\u306e\u77e5\u8b58\u304c\u6d3b\u304b\u305b\u308b\u30dc\u30fc\u30c9\u3082\u3042\u308a\u307e\u3059\u3002\n\u6614\u306b\u6bd4\u3079\u308b\u3068\u3001\u7269\u3092\u4f5c\u308a\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u305c\u3072\u8a66\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Edison", "Eaglet", "Kinesis", "Spark", "Scala"]}