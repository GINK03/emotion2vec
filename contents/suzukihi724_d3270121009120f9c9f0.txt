{"context": "kubernetes\u3092AWS EC2\u306eCentOS7\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u305f\u3002\nMaster\uff11\u53f0\u3001Minion\uff12\u53f0\u306e\u8a08\uff13\u53f0\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\u3002\n\u203bAWS\u7528\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b(http://kubernetes.io/v1.1/docs/getting-started-guides/aws.html) \u304c\u3001\u3053\u3053\u3067\u306f\u624b\u52d5\u3067\u30c8\u30e9\u30a4\u3002\n\u203b\uff11\u53f0\u306e\u307f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u53c2\u7167\nhttp://qiita.com/suzukihi724/items/4e120fdc66b014cfa972\n\u53c2\u8003\nhttp://qiita.com/HommaHomma/items/3b83c6cc5a09980e0d85\n\n1.AWS EC2\u3067CentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\nCentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001AWS Marketplace\u304b\u3089\u6307\u5b9a\u3059\u308b\nhttps://www.youtube.com/watch?v=_tWa5cIhO-k\nCentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u30e6\u30fc\u30b6\u540d\u304cec2-user\u3067\u306f\u306a\u304fcentos\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\nt2-micro1\u306e\u5834\u5408\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001t2-large\u306b\u3057\u3066\u307f\u305f\u3002\n\n2.kubernetes/docker/etcd/flannel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum update -y\nsudo yum install -y docker\ndocker\u3092\u8d77\u52d5\nsudo systemctl start docker\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3001libdevmapper\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u518d\u5b9f\u884c\nJob for docker.service failed because the control process exited with error code. See \"systemctl status docker.service\" and \"journalctl -xe\" for details.\n\nsudo yum -y install libdevmapper.so.1.02\n\u6b21\u306bkubernetes\u306a\u3069\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum install -y kubernetes etcd flannel\n\u203betcd\u306fmaster node\u306e\u307f\u3067OK\n\n3.hosts\u30d5\u30a1\u30a4\u30eb\u4fee\u6b63\uff08\u5168\u30af\u30e9\u30b9\u30bf\u5171\u901a\uff09\nsudo vi /etc/hosts\n172.31.25.XX master\n172.31.25.XX minion1\n172.31.25.XX minion2\n\n\u203bIP\u30a2\u30c9\u30ec\u30b9\u306f\u9069\u5b9c\u5909\u66f4\u3002\u4eca\u56de\u306fMaster\uff11\u53f0\u3001Minion\uff12\u53f0\u306e\u8a08\uff13\u53f0\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\n\n4.Master Node\u306e\u8a2d\u5b9a\n(1)/etc/kubernetes/config\u306e\u7de8\u96c6\nsudo vi /etc/kubernetes/config\nKUBE_MASTER=\u306b\u3001hosts\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u305fmaster node\u306e\u30db\u30b9\u30c8\u540d\u3092\u8a18\u8f09\nKUBE_MASTER=\"--master=http://master:8080\"\n(2)kube-apiserver\u8a2d\u5b9a\uff08/etc/kubernetes/apiserver\u306e\u7de8\u96c6\uff09\nsudo vi /etc/kubernetes/apiserver\nKUBE_API_ADDRESS=\"--address=0.0.0.0\"\nKUBE_API_PORT=\"--port=8080\"\nKUBE_ETCD_SERVERS=\"--etcd_servers=http://master:2379\"\n\n\u203bKUBE_ETCD_SERVERS=\u306b\u3001hosts\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u305fmaster node\u306e\u30db\u30b9\u30c8\u540d\u3092\u8a18\u8f09\n\u203bKUBE_ADMISSION_CONTROL=\u306eServiceAccount\u3092\u524a\u9664\n\u4f8b\n###\n# kubernetes system config\n#\n# The following values are used to configure the kube-apiserver\n#\n\n# The address on the local server to listen to.\nKUBE_API_ADDRESS=\"--address=0.0.0.0\"\n\n# The port on the local server to listen on.\nKUBE_API_PORT=\"--port=8080\"\n\n# Port minions listen on\n# KUBELET_PORT=\"--kubelet_port=10250\"\n\n# Comma separated list of nodes in the etcd cluster\nKUBE_ETCD_SERVERS=\"--etcd_servers=http://master:2379\"\n\n# Address range to use for services\nKUBE_SERVICE_ADDRESSES=\"--service-cluster-ip-range=10.254.0.0/16\"\n\n# default admission control policies\nKUBE_ADMISSION_CONTROL=\"--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota\"\n\n# Add your own!\nKUBE_API_ARGS=\"\"\n\n(3)controller-manager\u8a2d\u5b9a\uff08/etc/kubernetes/controller-manager \u3092\u7de8\u96c6\uff09\nsudo vi /etc/kubernetes/controller-manager\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\nKUBELET_ADDRESSES=\"--machines=master,minion1,minion2\"\n\u203bmachine\u540d\u306fhosts\u30d5\u30a1\u30a4\u30eb\u3067\u898f\u5b9a\u3057\u305f\u30db\u30b9\u30c8\u540d\n(4)ETCD\u8a2d\u5b9a\uff08/etc/etcd/etcd.conf \u3092\u7de8\u96c6\uff09\nsudo vi /etc/etcd/etcd.conf\nETCD_LISTEN_PEER_URLS=\"http://localhost:2380\"\nETCD_LISTEN_CLIENT_URLS=\"http://0.0.0.0:2379\"\n\n(5)Flannel\u8a2d\u5b9a\nFlannel\u306f\u3001\u30db\u30b9\u30c8\u3092\u8de8\u3044\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u9593\u901a\u4fe1\u3092\u53ef\u80fd\u306b\u3059\u308b\u4eee\u60f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(\u30b5\u30d6\u30cd\u30c3\u30c8)\u3092\u5f62\u6210\u3059\u308b\u3002\u5358\u4e00\u30db\u30b9\u30c8\u4e0a\u3067\u306e\u30af\u30e9\u30b9\u30bf\u5f62\u6210\u3067\u306f\u4e0d\u8981\u3002\nConfig\u60c5\u5831\u306e\u683c\u7d0d\u5834\u6240\u3068\u3057\u3066etcd\u3092\u5229\u7528\u3059\u308b\u3002\nhttps://github.com/coreos/flannel/blob/master/README.md\n\u2460/etc/sysconfig/flanneld\u3092\u7de8\u96c6\nsudo vi /etc/sysconfig/flanneld\n# Flanneld configuration options\n\n# etcd url location.  Point this to the server where etcd runs\nFLANNEL_ETCD=\"http://master:2379\"\n\n# etcd config key.  This is the configuration key that flannel queries\n# For address range assignment\nFLANNEL_ETCD_KEY=\"/flannel/network\"\n\n# Any additional options that you want to pass\nFLANNEL_OPTIONS=\"eth0\"\n\n\u2461config\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\nsudo vi /root/flannel-config.json\n{\n \"Network\": \"10.100.0.0/16\",\n \"SubnetLen\": 24,\n \"SubnetMin\": \"10.100.50.0\",\n \"SubnetMax\": \"10.100.199.0\",\n \"Backend\": {\n \"Type\": \"vxlan\",\n \"VNI\": 1\n }\n}\n\netcd\u306bflannel\u8a2d\u5b9a\uff08json\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u53cd\u6620\u3059\u308b\uff08etcd\u306eapi\u3067\uff09\n\u307e\u305a\u306fetcd\u3092\u8d77\u52d5\nsudo systemctl start etcd\nsudo curl -L http://master:2379/v2/keys/flannel/network/config -XPUT --data-urlencode value@/root/flannel-config.json\netcd api\u3067\u8a2d\u5b9a\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\nhttp://<etcd\u30ce\u30fc\u30c9IP\uff1aport>/v2/keys/<key\u540d>\n\u4f8b\uff09\ncurl -L http://master:2379/v2/keys/flannel/network\nhttps://coreos.com/etcd/docs/0.4.7/etcd-api/\n(6) \u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\n#!/sh/bin\n\nfor SERVICES in docker etcd kube-apiserver kube-controller-manager kube-scheduler flanneld; do  \n    systemctl restart $SERVICES\n    systemctl enable $SERVICES\n    systemctl status $SERVICES \ndone\n\n\n5.Minion Node\u306e\u8a2d\u5b9a\n(1) docker kubernetes flannel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo yum update -y\nsudo yum -y install docker kubernetes flannel\n(2) /etc/hosts\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\n\u203b\u5168\u30ce\u30fc\u30c9\u5171\u901a\n(3) flannel\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\nsudo vi /etc/sysconfig/flanneld\nMaster\u8a2d\u5b9a 4(5)\u3068\u540c\u3058\n# Flanneld configuration options\n\n# etcd url location.  Point this to the server where etcd runs\nFLANNEL_ETCD=\"http://master:2379\"\n\n# etcd config key.  This is the configuration key that flannel queries\n# For address range assignment\nFLANNEL_ETCD_KEY=\"/flannel/network\"\n\n# Any additional options that you want to pass\nFLANNEL_OPTIONS=\"eth0\"\n\n(4) kubelet\u8a2d\u5b9a\nsudo vi /etc/kubernetes/kubelet\n###\n# kubernetes kubelet (minion) config\n\n# The address for the info server to serve on (set to 0.0.0.0 or \"\" for all interfaces)\nKUBELET_ADDRESS=\"--address=0.0.0.0\"\n\n# The port for the info server to serve on\nKUBELET_PORT=\"--port=10250\"\n\n# You may leave this blank to use the actual hostname\nKUBELET_HOSTNAME=\"\"\n\n# location of the api-server\nKUBELET_API_SERVER=\"--api_servers=http://master:8080\"\n\n# Add your own!\nKUBELET_ARGS=\"\"\n\n(5) \u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n#!/sh/bin\n\nfor SERVICES in kube-proxy kubelet docker flanneld; do \n    systemctl restart $SERVICES\n    systemctl enable $SERVICES\n    systemctl status $SERVICES \ndone\n\n(6) Minion Node\u3092\u5897\u3084\u3059\n\u3053\u306e\u8a2d\u5b9a\u3092\u3057\u305fNode\u3092\u4f5c\u6210\u3057\u3066\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001ETCD\u3092\u901a\u3058\u3066Master\u30ce\u30fc\u30c9\u5074\u3067Minion\u3092\u691c\u77e5\u3057\u3066\u304f\u308c\u308b\u3002\n\uff11\u53f0Minion\u306e\u8a2d\u7f6e\u30a2\u30c3\u30d7\u3092\u3057\u305f\u3089AMI\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001\u305d\u306eAMI\u3092\u5143\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Minion\u306e\u91cf\u7523\u304c\u5bb9\u6613\u3002\n\u2460\u5168\u30ce\u30fc\u30c9\u306ehosts\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\n\u2461Master\u30ce\u30fc\u30c9\u3067controller-manager\u8a2d\u5b9a\uff08\u65b0minion\u8ffd\u52a0\uff09\n\u2462\u65b0\u898f\u8ffd\u52a0\u3057\u305f\u30ce\u30fc\u30c9\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\n\n6.\u52d5\u4f5c\u78ba\u8a8d\n\u6b63\u5e38\u306bkuber\u30af\u30e9\u30b9\u30bf\u304c\u8d77\u52d5\u3055\u308c\u3001\u30db\u30b9\u30c8\u9593\u306e\u9023\u643a\u304c\u3067\u304d\u3066\u3044\u308c\u3070\u3001master\u306b\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001minion\u30ce\u30fc\u30c9\u3092\u8a8d\u8b58\u3067\u304d\u308b\u3002\n\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u4e0a\u8a18\u8a2d\u5b9a\u3092\u518d\u5ea6\u898b\u76f4\u3059\u304b\u3001AWS\u306eEC2\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u7b49\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3059\u308b\u3002\n$ kubectl get nodes\nNAME              LABELS                                   STATUS    AGE\nip-172-31-28-50   kubernetes.io/hostname=ip-172-31-28-50   Ready     30s\n\n(1)master\u30ce\u30fc\u30c9\u3067\u30b5\u30f3\u30d7\u30ebpod\u3092\u4f5c\u6210\u3059\u308b\n$kubectl create -f sample.yaml\n\u30b5\u30f3\u30d7\u30ebpod(sample.yaml)\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx\n      ports:\n      - containerPort: 80\n\n(2)pod\u306e\u7a3c\u50cd\u72b6\u6cc1\u78ba\u8a8d\n$ kubectl get pod\nNAME        READY     STATUS    RESTARTS   AGE\nnginx-pod   1/1       Running   0          3h\n\npod\u306e\u7a3c\u50cd\u30ce\u30fc\u30c9\u3092\u8abf\u3079\u308b\n\u203bget pod\u306e\u5f15\u6570\u306bpod NAME\u3068-o\u3092\u6307\u5b9a\u3002\u51fa\u529b\u5f62\u5f0f\u306fyaml\u304bjson\u3067\u6307\u5b9a\u53ef\u80fd\n$ kubectl get pod nginx-pod -o yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: 2016-02-15T07:32:25Z\n  name: nginx-pod\n  namespace: default\n  resourceVersion: \"7101\"\n  selfLink: /api/v1/namespaces/default/pods/nginx-pod\n  uid: 426e8595-d3b6-11e5-a2a4-066cb91d9daf\n\n\u3000\uff08\u7701\u7565\uff09\n\n    lastState: {}\n    name: nginx-container\n    ready: true\n    restartCount: 0\n    state:\n      running:\n        startedAt: 2016-02-15T07:32:45Z\n  hostIP: 172.31.31.79\n  phase: Running\n  podIP: 172.17.0.1\n  startTime: 2016-02-15T07:32:25Z\n\npodIP\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u3001pod\u4f5c\u6210\u6642\u306eyaml\u3067\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8(80)\u3067\u7a3c\u50cd\u3057\u3066\u3044\u308b\u3002\n\u4e0a\u8a18\u3067\u306f\u3001hostIP172.31.31.79\u306eminion\u4e0a\u3067\u3001\ncurl http://172.17.0.1:80/\n\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\u5225\u306apod\u3092\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u3068\u3001\u8907\u6570\u306eMinion\u30ce\u30fc\u30c9\u304c\u6709\u308b\u5834\u5408\u30011Pod\u3065\u3064\u5206\u6563\u5b9f\u884c\u3055\u308c\u308b\u3002\nkubernetes\u3092AWS EC2\u306eCentOS7\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u305f\u3002\n\nMaster\uff11\u53f0\u3001Minion\uff12\u53f0\u306e\u8a08\uff13\u53f0\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\u3002\n\n\u203bAWS\u7528\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u30b9\u30af\u30ea\u30d7\u30c8\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b(http://kubernetes.io/v1.1/docs/getting-started-guides/aws.html) \u304c\u3001\u3053\u3053\u3067\u306f\u624b\u52d5\u3067\u30c8\u30e9\u30a4\u3002\n\n\u203b\uff11\u53f0\u306e\u307f\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u306f\u4ee5\u4e0b\u53c2\u7167\nhttp://qiita.com/suzukihi724/items/4e120fdc66b014cfa972\n\n\u53c2\u8003\nhttp://qiita.com/HommaHomma/items/3b83c6cc5a09980e0d85\n\n\n##1.AWS EC2\u3067CentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\nCentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001AWS Marketplace\u304b\u3089\u6307\u5b9a\u3059\u308b\nhttps://www.youtube.com/watch?v=_tWa5cIhO-k\n\nCentOS7\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3001\u30e6\u30fc\u30b6\u540d\u304cec2-user\u3067\u306f\u306a\u304fcentos\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u6ce8\u610f\u3002\nt2-micro1\u306e\u5834\u5408\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001t2-large\u306b\u3057\u3066\u307f\u305f\u3002\n\n##2.kubernetes/docker/etcd/flannel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n`sudo yum update -y`\n\n`sudo yum install -y docker`\n\ndocker\u3092\u8d77\u52d5\n\n`sudo systemctl start docker`\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u5834\u5408\u306f\u3001libdevmapper\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u518d\u5b9f\u884c\n\n```\nJob for docker.service failed because the control process exited with error code. See \"systemctl status docker.service\" and \"journalctl -xe\" for details.\n```\n\n`sudo yum -y install libdevmapper.so.1.02`\n\n\n\u6b21\u306bkubernetes\u306a\u3069\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n`sudo yum install -y kubernetes etcd flannel`\n\n\u203betcd\u306fmaster node\u306e\u307f\u3067OK\n\n##3.hosts\u30d5\u30a1\u30a4\u30eb\u4fee\u6b63\uff08\u5168\u30af\u30e9\u30b9\u30bf\u5171\u901a\uff09\n\n`sudo vi /etc/hosts`\n\n\n```\n172.31.25.XX master\n172.31.25.XX minion1\n172.31.25.XX minion2\n```\n\u203bIP\u30a2\u30c9\u30ec\u30b9\u306f\u9069\u5b9c\u5909\u66f4\u3002\u4eca\u56de\u306fMaster\uff11\u53f0\u3001Minion\uff12\u53f0\u306e\u8a08\uff13\u53f0\u69cb\u6210\u30d1\u30bf\u30fc\u30f3\n\n\n##4.Master Node\u306e\u8a2d\u5b9a\n\n(1)/etc/kubernetes/config\u306e\u7de8\u96c6\n\n`sudo vi /etc/kubernetes/config`\n\nKUBE_MASTER=\u306b\u3001hosts\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u305fmaster node\u306e\u30db\u30b9\u30c8\u540d\u3092\u8a18\u8f09\n\n`KUBE_MASTER=\"--master=http://master:8080\"`\n\n\n(2)kube-apiserver\u8a2d\u5b9a\uff08/etc/kubernetes/apiserver\u306e\u7de8\u96c6\uff09\n\n`sudo vi /etc/kubernetes/apiserver`\n\n\n```\nKUBE_API_ADDRESS=\"--address=0.0.0.0\"\nKUBE_API_PORT=\"--port=8080\"\nKUBE_ETCD_SERVERS=\"--etcd_servers=http://master:2379\"\n```\n\u203bKUBE_ETCD_SERVERS=\u306b\u3001hosts\u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u305fmaster node\u306e\u30db\u30b9\u30c8\u540d\u3092\u8a18\u8f09\n\n\u203bKUBE_ADMISSION_CONTROL=\u306eServiceAccount\u3092\u524a\u9664\n\n\n\u4f8b\n\n```\n###\n# kubernetes system config\n#\n# The following values are used to configure the kube-apiserver\n#\n\n# The address on the local server to listen to.\nKUBE_API_ADDRESS=\"--address=0.0.0.0\"\n\n# The port on the local server to listen on.\nKUBE_API_PORT=\"--port=8080\"\n\n# Port minions listen on\n# KUBELET_PORT=\"--kubelet_port=10250\"\n\n# Comma separated list of nodes in the etcd cluster\nKUBE_ETCD_SERVERS=\"--etcd_servers=http://master:2379\"\n\n# Address range to use for services\nKUBE_SERVICE_ADDRESSES=\"--service-cluster-ip-range=10.254.0.0/16\"\n\n# default admission control policies\nKUBE_ADMISSION_CONTROL=\"--admission_control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ResourceQuota\"\n\n# Add your own!\nKUBE_API_ARGS=\"\"\n```\n\n\n\n\n(3)controller-manager\u8a2d\u5b9a\uff08/etc/kubernetes/controller-manager \u3092\u7de8\u96c6\uff09\n`sudo vi /etc/kubernetes/controller-manager`\n\n\u4ee5\u4e0b\u3092\u8ffd\u8a18\n`KUBELET_ADDRESSES=\"--machines=master,minion1,minion2\"`\n\u203bmachine\u540d\u306fhosts\u30d5\u30a1\u30a4\u30eb\u3067\u898f\u5b9a\u3057\u305f\u30db\u30b9\u30c8\u540d\n\n(4)ETCD\u8a2d\u5b9a\uff08/etc/etcd/etcd.conf \u3092\u7de8\u96c6\uff09\n\n`sudo vi /etc/etcd/etcd.conf`\n\n```\nETCD_LISTEN_PEER_URLS=\"http://localhost:2380\"\nETCD_LISTEN_CLIENT_URLS=\"http://0.0.0.0:2379\"\n```\n\n(5)Flannel\u8a2d\u5b9a\nFlannel\u306f\u3001\u30db\u30b9\u30c8\u3092\u8de8\u3044\u3067\u306e\u30b3\u30f3\u30c6\u30ca\u9593\u901a\u4fe1\u3092\u53ef\u80fd\u306b\u3059\u308b\u4eee\u60f3\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(\u30b5\u30d6\u30cd\u30c3\u30c8)\u3092\u5f62\u6210\u3059\u308b\u3002\u5358\u4e00\u30db\u30b9\u30c8\u4e0a\u3067\u306e\u30af\u30e9\u30b9\u30bf\u5f62\u6210\u3067\u306f\u4e0d\u8981\u3002\nConfig\u60c5\u5831\u306e\u683c\u7d0d\u5834\u6240\u3068\u3057\u3066etcd\u3092\u5229\u7528\u3059\u308b\u3002\nhttps://github.com/coreos/flannel/blob/master/README.md\n\n\u2460/etc/sysconfig/flanneld\u3092\u7de8\u96c6\n\n`sudo vi /etc/sysconfig/flanneld`\n\n```\n# Flanneld configuration options\n\n# etcd url location.  Point this to the server where etcd runs\nFLANNEL_ETCD=\"http://master:2379\"\n\n# etcd config key.  This is the configuration key that flannel queries\n# For address range assignment\nFLANNEL_ETCD_KEY=\"/flannel/network\"\n\n# Any additional options that you want to pass\nFLANNEL_OPTIONS=\"eth0\"\n```\n\n\u2461config\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n\n`sudo vi /root/flannel-config.json`\n\n```\n{\n \"Network\": \"10.100.0.0/16\",\n \"SubnetLen\": 24,\n \"SubnetMin\": \"10.100.50.0\",\n \"SubnetMax\": \"10.100.199.0\",\n \"Backend\": {\n \"Type\": \"vxlan\",\n \"VNI\": 1\n }\n}\n```\n\netcd\u306bflannel\u8a2d\u5b9a\uff08json\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u53cd\u6620\u3059\u308b\uff08etcd\u306eapi\u3067\uff09\n\u307e\u305a\u306fetcd\u3092\u8d77\u52d5\n`sudo systemctl start etcd`\n\n`sudo curl -L http://master:2379/v2/keys/flannel/network/config -XPUT --data-urlencode value@/root/flannel-config.json`\n\n\netcd api\u3067\u8a2d\u5b9a\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u308b\n\n`http://<etcd\u30ce\u30fc\u30c9IP\uff1aport>/v2/keys/<key\u540d>`\n\n\u4f8b\uff09\n`curl -L http://master:2379/v2/keys/flannel/network`\n\nhttps://coreos.com/etcd/docs/0.4.7/etcd-api/\n\n(6) \u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u306e\u8d77\u52d5\n\n```\n#!/sh/bin\n\nfor SERVICES in docker etcd kube-apiserver kube-controller-manager kube-scheduler flanneld; do  \n    systemctl restart $SERVICES\n    systemctl enable $SERVICES\n    systemctl status $SERVICES \ndone\n```\n\n\n##5.Minion Node\u306e\u8a2d\u5b9a\n\n(1) docker kubernetes flannel\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n`sudo yum update -y`\n\n`sudo yum -y install docker kubernetes flannel`\n\n\n(2) /etc/hosts\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\n\u203b\u5168\u30ce\u30fc\u30c9\u5171\u901a\n\n(3) flannel\u30d5\u30a1\u30a4\u30eb\u3092\u7de8\u96c6\n\n`sudo vi /etc/sysconfig/flanneld`\n\nMaster\u8a2d\u5b9a 4(5)\u3068\u540c\u3058\n\n```\n# Flanneld configuration options\n\n# etcd url location.  Point this to the server where etcd runs\nFLANNEL_ETCD=\"http://master:2379\"\n\n# etcd config key.  This is the configuration key that flannel queries\n# For address range assignment\nFLANNEL_ETCD_KEY=\"/flannel/network\"\n\n# Any additional options that you want to pass\nFLANNEL_OPTIONS=\"eth0\"\n```\n\n(4) kubelet\u8a2d\u5b9a\n\n`sudo vi /etc/kubernetes/kubelet`\n\n```\n###\n# kubernetes kubelet (minion) config\n\n# The address for the info server to serve on (set to 0.0.0.0 or \"\" for all interfaces)\nKUBELET_ADDRESS=\"--address=0.0.0.0\"\n\n# The port for the info server to serve on\nKUBELET_PORT=\"--port=10250\"\n\n# You may leave this blank to use the actual hostname\nKUBELET_HOSTNAME=\"\"\n\n# location of the api-server\nKUBELET_API_SERVER=\"--api_servers=http://master:8080\"\n\n# Add your own!\nKUBELET_ARGS=\"\"\n```\n\n(5) \u5404\u7a2e\u30b5\u30fc\u30d3\u30b9\u8d77\u52d5\n\n```\n#!/sh/bin\n\nfor SERVICES in kube-proxy kubelet docker flanneld; do \n    systemctl restart $SERVICES\n    systemctl enable $SERVICES\n    systemctl status $SERVICES \ndone\n```\n\n(6) Minion Node\u3092\u5897\u3084\u3059\n\u3053\u306e\u8a2d\u5b9a\u3092\u3057\u305fNode\u3092\u4f5c\u6210\u3057\u3066\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001ETCD\u3092\u901a\u3058\u3066Master\u30ce\u30fc\u30c9\u5074\u3067Minion\u3092\u691c\u77e5\u3057\u3066\u304f\u308c\u308b\u3002\n\n\uff11\u53f0Minion\u306e\u8a2d\u7f6e\u30a2\u30c3\u30d7\u3092\u3057\u305f\u3089AMI\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u3066\u304a\u304d\u3001\u305d\u306eAMI\u3092\u5143\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3068\u3001Minion\u306e\u91cf\u7523\u304c\u5bb9\u6613\u3002\n\n\u2460\u5168\u30ce\u30fc\u30c9\u306ehosts\u30d5\u30a1\u30a4\u30eb\u306e\u66f4\u65b0\n\u2461Master\u30ce\u30fc\u30c9\u3067controller-manager\u8a2d\u5b9a\uff08\u65b0minion\u8ffd\u52a0\uff09\n\u2462\u65b0\u898f\u8ffd\u52a0\u3057\u305f\u30ce\u30fc\u30c9\u3067\u5404\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\n\n\n##6.\u52d5\u4f5c\u78ba\u8a8d\n\n\u6b63\u5e38\u306bkuber\u30af\u30e9\u30b9\u30bf\u304c\u8d77\u52d5\u3055\u308c\u3001\u30db\u30b9\u30c8\u9593\u306e\u9023\u643a\u304c\u3067\u304d\u3066\u3044\u308c\u3070\u3001master\u306b\u3066\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001minion\u30ce\u30fc\u30c9\u3092\u8a8d\u8b58\u3067\u304d\u308b\u3002\n\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3044\u5834\u5408\u306f\u3001\u4e0a\u8a18\u8a2d\u5b9a\u3092\u518d\u5ea6\u898b\u76f4\u3059\u304b\u3001AWS\u306eEC2\u306e\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30dd\u30ea\u30b7\u30fc\u7b49\u306e\u8a2d\u5b9a\u3092\u78ba\u8a8d\u3059\u308b\u3002\n\n```\n$ kubectl get nodes\nNAME              LABELS                                   STATUS    AGE\nip-172-31-28-50   kubernetes.io/hostname=ip-172-31-28-50   Ready     30s\n```\n(1)master\u30ce\u30fc\u30c9\u3067\u30b5\u30f3\u30d7\u30ebpod\u3092\u4f5c\u6210\u3059\u308b\n\n`$kubectl create -f sample.yaml`\n\n\u30b5\u30f3\u30d7\u30ebpod(sample.yaml)\n\n```\napiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx-pod\nspec:\n  containers:\n    - name: nginx-container\n      image: nginx\n      ports:\n      - containerPort: 80\n```\n\n(2)pod\u306e\u7a3c\u50cd\u72b6\u6cc1\u78ba\u8a8d\n\n```\n$ kubectl get pod\nNAME        READY     STATUS    RESTARTS   AGE\nnginx-pod   1/1       Running   0          3h\n```\n\npod\u306e\u7a3c\u50cd\u30ce\u30fc\u30c9\u3092\u8abf\u3079\u308b\n\u203bget pod\u306e\u5f15\u6570\u306bpod NAME\u3068-o\u3092\u6307\u5b9a\u3002\u51fa\u529b\u5f62\u5f0f\u306fyaml\u304bjson\u3067\u6307\u5b9a\u53ef\u80fd\n\n```\n$ kubectl get pod nginx-pod -o yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: 2016-02-15T07:32:25Z\n  name: nginx-pod\n  namespace: default\n  resourceVersion: \"7101\"\n  selfLink: /api/v1/namespaces/default/pods/nginx-pod\n  uid: 426e8595-d3b6-11e5-a2a4-066cb91d9daf\n\n\u3000\uff08\u7701\u7565\uff09\n\n    lastState: {}\n    name: nginx-container\n    ready: true\n    restartCount: 0\n    state:\n      running:\n        startedAt: 2016-02-15T07:32:45Z\n  hostIP: 172.31.31.79\n  phase: Running\n  podIP: 172.17.0.1\n  startTime: 2016-02-15T07:32:25Z\n```\n\npodIP\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u3001pod\u4f5c\u6210\u6642\u306eyaml\u3067\u6307\u5b9a\u3057\u305f\u30dd\u30fc\u30c8(80)\u3067\u7a3c\u50cd\u3057\u3066\u3044\u308b\u3002\n\u4e0a\u8a18\u3067\u306f\u3001hostIP172.31.31.79\u306eminion\u4e0a\u3067\u3001\n`curl http://172.17.0.1:80/`\n\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n\u5225\u306apod\u3092\u65b0\u305f\u306b\u4f5c\u6210\u3059\u308b\u3068\u3001\u8907\u6570\u306eMinion\u30ce\u30fc\u30c9\u304c\u6709\u308b\u5834\u5408\u30011Pod\u3065\u3064\u5206\u6563\u5b9f\u884c\u3055\u308c\u308b\u3002\n", "tags": ["kubernetes", "docker", "AWS", "centos7", "k8s"]}