{"context": " More than 1 year has passed since last update.\n\nRust\u304b\u3089C\u3092\u4f7f\u3046\n\u3053\u3053\u3092\u8aad\u3093\u3067\u4e0b\u3055\u3044\n\nC\u304b\u3089Rust\u3092\u4f7f\u3046\n\n\n\u4e0a\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3082\u307b\u3093\u306e\u5c11\u3057\u89e6\u308c\u3066\u3044\u308b\u304c\u3001\u95a2\u6570\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3060\u3051\nRust\u306e\u69cb\u9020\u4f53\u4f7f\u3044\u305f\u3044\n\n\n\u7d14\u7c8b\u306aC\u3060\u3068\u3042\u307e\u308a\u6069\u6075\u304c\u306a\u3055\u305d\u3046\u3060\u304c\u3001Objective-C\u3084Swift\u3001C++\u3068\u306e\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\n\n\n\n\nRust\u306e\u30b3\u30fc\u30c9\nuse std::mem;\n\n/// Rust\u306e\u69cb\u9020\u4f53\npub struct Greeter {\n    name: String,\n}\n\nimpl Greeter {\n    fn new(name: &str) -> Greeter {\n        Greeter {\n            name: name.to_string()\n        }\n    }\n\n    fn greet(&self) {\n        println!(\"Hello, {}.\", self.name);\n    }\n}\n\n/// \u30d2\u30fc\u30d7\u9818\u57df\u304b\u3089\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066C\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u8fd4\u3059\n#[no_mangle]\npub unsafe extern fn new_greeter(name: *const i8) -> *const Greeter {\n\n    use std::ffi::CStr;\n    use std::str;\n\n    let b = Box::new(\n        Greeter::new(\n            str::from_utf8(\n                CStr::from_ptr(name).to_bytes()\n            ).unwrap()\n        )\n    );\n\n    mem::transmute(b)\n}\n\n#[no_mangle]\npub unsafe extern fn greet(greeter: *const Greeter) {\n    (*greeter).greet();\n}\n\n/// \u30e1\u30e2\u30ea\u306e\u89e3\u653e\n#[no_mangle]\npub unsafe extern fn free_greeter(greeter: *mut Greeter) {\n    // Box\u306b\u623b\u3057\u3066\u304b\u3089\u89e3\u653e\u3055\u305b\u308b\uff08\u30b9\u30b3\u30fc\u30d7\u304c\u7d42\u4e86\u3059\u308b\u3068Box\u3082\u89e3\u653e\u3055\u308c\u308b\uff09\n    let _: Box<Greeter> = mem::transmute(greeter); \n}\n\n\nC\u306e\u30b3\u30fc\u30c9\n/// C\u5074\u304b\u3089\u306fOpaque\u30dd\u30a4\u30f3\u30bf\u30d1\u30bf\u30fc\u30f3\u3067Greeter\u3092\u4f7f\u3046\nstruct Greeter;\ntypedef struct Greeter* greeter_ref;\n\n/// Rust\u5074\u3068\u95a2\u6570\u540d\u3001\u8fd4\u308a\u5024\u578b\u3001\u5f15\u6570\u578b\u3092\u5408\u308f\u305b\u308b\nextern greeter_ref new_greeter(const char* name);\nextern void greet(const greeter_ref greeter);\nextern void free_greeter(greeter_ref greeter);\n\nint main(void) {\n\n    greeter_ref g = new_greeter(\"moriturus\");\n    greet(g);\n    free_greeter(g);\n\n    return 0;\n}\n\n\n\u8ffd\u8a18\n\u4e0a\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306eTargeting callbacks to Rust objects\u306b\u3082\u66f8\u3044\u3066\u307e\u308a\u307e\u3057\u305f\nvoid*\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3061\u3087\u3063\u3068\u6c17\u6301\u3061\u60aa\u3044\u3067\u3059\u304c\n# Rust\u304b\u3089C\u3092\u4f7f\u3046\n\n[\u3053\u3053](https://doc.rust-lang.org/stable/book/ffi.html)\u3092\u8aad\u3093\u3067\u4e0b\u3055\u3044\n\n# C\u304b\u3089Rust\u3092\u4f7f\u3046\n\n- [\u4e0a\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://doc.rust-lang.org/stable/book/ffi.html)\u3082\u307b\u3093\u306e\u5c11\u3057\u89e6\u308c\u3066\u3044\u308b\u304c\u3001\u95a2\u6570\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308b\u3060\u3051\n- Rust\u306e\u69cb\u9020\u4f53\u4f7f\u3044\u305f\u3044\n    - \u7d14\u7c8b\u306aC\u3060\u3068\u3042\u307e\u308a\u6069\u6075\u304c\u306a\u3055\u305d\u3046\u3060\u304c\u3001Objective-C\u3084Swift\u3001C++\u3068\u306e\u30d6\u30ea\u30c3\u30b8\u30f3\u30b0\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\n\n## Rust\u306e\u30b3\u30fc\u30c9\n\n```rust\nuse std::mem;\n\n/// Rust\u306e\u69cb\u9020\u4f53\npub struct Greeter {\n    name: String,\n}\n\nimpl Greeter {\n    fn new(name: &str) -> Greeter {\n        Greeter {\n            name: name.to_string()\n        }\n    }\n\n    fn greet(&self) {\n        println!(\"Hello, {}.\", self.name);\n    }\n}\n\n/// \u30d2\u30fc\u30d7\u9818\u57df\u304b\u3089\u30e1\u30e2\u30ea\u3092\u78ba\u4fdd\u3057\u3066C\u306e\u30dd\u30a4\u30f3\u30bf\u578b\u3092\u8fd4\u3059\n#[no_mangle]\npub unsafe extern fn new_greeter(name: *const i8) -> *const Greeter {\n\n    use std::ffi::CStr;\n    use std::str;\n\n    let b = Box::new(\n        Greeter::new(\n            str::from_utf8(\n                CStr::from_ptr(name).to_bytes()\n            ).unwrap()\n        )\n    );\n\n    mem::transmute(b)\n}\n\n#[no_mangle]\npub unsafe extern fn greet(greeter: *const Greeter) {\n    (*greeter).greet();\n}\n\n/// \u30e1\u30e2\u30ea\u306e\u89e3\u653e\n#[no_mangle]\npub unsafe extern fn free_greeter(greeter: *mut Greeter) {\n    // Box\u306b\u623b\u3057\u3066\u304b\u3089\u89e3\u653e\u3055\u305b\u308b\uff08\u30b9\u30b3\u30fc\u30d7\u304c\u7d42\u4e86\u3059\u308b\u3068Box\u3082\u89e3\u653e\u3055\u308c\u308b\uff09\n    let _: Box<Greeter> = mem::transmute(greeter); \n}\n```\n\n## C\u306e\u30b3\u30fc\u30c9\n\n```c\n/// C\u5074\u304b\u3089\u306fOpaque\u30dd\u30a4\u30f3\u30bf\u30d1\u30bf\u30fc\u30f3\u3067Greeter\u3092\u4f7f\u3046\nstruct Greeter;\ntypedef struct Greeter* greeter_ref;\n\n/// Rust\u5074\u3068\u95a2\u6570\u540d\u3001\u8fd4\u308a\u5024\u578b\u3001\u5f15\u6570\u578b\u3092\u5408\u308f\u305b\u308b\nextern greeter_ref new_greeter(const char* name);\nextern void greet(const greeter_ref greeter);\nextern void free_greeter(greeter_ref greeter);\n\nint main(void) {\n\n    greeter_ref g = new_greeter(\"moriturus\");\n    greet(g);\n    free_greeter(g);\n\n    return 0;\n}\n```\n\n# \u8ffd\u8a18\n\n[\u4e0a\u8a18\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://doc.rust-lang.org/stable/book/ffi.html)\u306e[Targeting callbacks to Rust objects](https://doc.rust-lang.org/book/ffi.html#targeting-callbacks-to-rust-objects)\u306b\u3082\u66f8\u3044\u3066\u307e\u308a\u307e\u3057\u305f\n`void*`\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066\u308b\u306e\u3067\u3061\u3087\u3063\u3068\u6c17\u6301\u3061\u60aa\u3044\u3067\u3059\u304c\n", "tags": ["C", "rust"]}