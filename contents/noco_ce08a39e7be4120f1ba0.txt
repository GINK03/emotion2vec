{"context": "C/C++\u7528\u306e\u30a6\u30a7\u30d6\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afcrow\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\ncrow\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n$ mkdir crow_example\n$ cd crow_example\n\n\ncrow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nchppl\u304c\u4f7f\u3048\u308b\u4eba\nhttp://qiita.com/noco/items/4e4ca6c6abac99d19619\n\n$ chppl download crow\n\n\n\u4f7f\u3048\u306a\u3044\u4eba\ncrow\u306eGitHub\u304b\u3089crow_all.h\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\n\ntest_app.cpp\u4f5c\u6210\n\ntest_app.cpp\n#include \"crow_all.h\"\n\nint main() {\n  crow::SimpleApp app;\n\n  CROW_ROUTE(app, \"/\")([](){\n      return \"Hello, World!\";\n  });\n\n  app.port(8080).multithreaded().run();\n}\n\n\n\nCMakeLists.txt\u4f5c\u6210\n\nCMakeLists.txt\ncmake_minimum_required(VERSION 2.8)\nproject (crow_examples)\n\nfind_package(Threads)\n\nif (NOT CMAKE_BUILD_TYPE)\n    message(STATUS \"No build type selected, default to Release\")\n    set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\n\nif (MSVC)\nset(Boost_USE_STATIC_LIBS \"On\")\nfind_package( Boost 1.52 COMPONENTS date_time filesystem system thread regex REQUIRED )\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -std=c++1y\")\nfind_package( Boost 1.52 COMPONENTS date_time filesystem system thread REQUIRED )\nendif()\n\ninclude_directories( ${Boost_INCLUDE_DIR} )\n\nset(PROJECT_INCLUDE_DIR\n${PROJECT_SOURCE_DIR}/include\n)\n\ninclude_directories(\"${PROJECT_INCLUDE_DIR}\")\ninclude_directories(\"${PROJECT_SOURCE_DIR}\")\n\nadd_executable(test_app test_app.cpp)\ntarget_link_libraries(test_app ${Boost_LIBRARIES})\ntarget_link_libraries(test_app ${CMAKE_THREAD_LIBS_INIT})\n\n\n\n\u30d3\u30eb\u30c9\n$ cmake .\n$ make\n\n\n\u8d77\u52d5\n$ ./test_app\n\nhttp://localhost:8080\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\"Hello, World!\"\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\u4ee5\u4e0a\u3067\u7d42\u4e86\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\nC/C++\u7528\u306e\u30a6\u30a7\u30d6\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afcrow\u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002  \n[crow](https://github.com/ipkn/crow)\n\n###\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n```\n$ mkdir crow_example\n$ cd crow_example\n```\n\n###crow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n####[chppl](https://github.com/nocotan/chppl-tool)\u304c\u4f7f\u3048\u308b\u4eba\nhttp://qiita.com/noco/items/4e4ca6c6abac99d19619\n```\n$ chppl download crow\n```\n####\u4f7f\u3048\u306a\u3044\u4eba\ncrow\u306eGitHub\u304b\u3089crow_all.h\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u304f\u308b\n\n###test_app.cpp\u4f5c\u6210\n\n```test_app.cpp\n#include \"crow_all.h\"\n\nint main() {\n  crow::SimpleApp app;\n\n  CROW_ROUTE(app, \"/\")([](){\n      return \"Hello, World!\";\n  });\n\n  app.port(8080).multithreaded().run();\n}\n```\n\n#CMakeLists.txt\u4f5c\u6210\n```CMakeLists.txt\ncmake_minimum_required(VERSION 2.8)\nproject (crow_examples)\n\nfind_package(Threads)\n\nif (NOT CMAKE_BUILD_TYPE)\n    message(STATUS \"No build type selected, default to Release\")\n    set(CMAKE_BUILD_TYPE \"Release\")\nendif()\n\n\nif (MSVC)\nset(Boost_USE_STATIC_LIBS \"On\")\nfind_package( Boost 1.52 COMPONENTS date_time filesystem system thread regex REQUIRED )\nelse()\n  set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wall -std=c++1y\")\nfind_package( Boost 1.52 COMPONENTS date_time filesystem system thread REQUIRED )\nendif()\n\ninclude_directories( ${Boost_INCLUDE_DIR} )\n\nset(PROJECT_INCLUDE_DIR\n${PROJECT_SOURCE_DIR}/include\n)\n\ninclude_directories(\"${PROJECT_INCLUDE_DIR}\")\ninclude_directories(\"${PROJECT_SOURCE_DIR}\")\n\nadd_executable(test_app test_app.cpp)\ntarget_link_libraries(test_app ${Boost_LIBRARIES})\ntarget_link_libraries(test_app ${CMAKE_THREAD_LIBS_INIT})\n```\n\n###\u30d3\u30eb\u30c9\n```\n$ cmake .\n$ make\n```\n\n###\u8d77\u52d5\n```\n$ ./test_app\n```\nhttp://localhost:8080\n\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\"Hello, World!\"\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\u4ee5\u4e0a\u3067\u7d42\u4e86\u3067\u3059\u3002\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n", "tags": ["C++", "crow", "chppl", "Flask", "CMake"]}