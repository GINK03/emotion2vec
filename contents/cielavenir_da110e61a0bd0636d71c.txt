{"context": " More than 1 year has passed since last update.C++\u306b\u304a\u3051\u308bstdio.h\u30d8\u30c3\u30c0\u306b\u3064\u3044\u3066\nI wondered why I can use cstdio API with including only iostream.\niostream\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3060\u3051\u3067cstdio\u304c\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u70b9\u306b\u3064\u3044\u3066\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\nOSX (BSD)\nI browsed c++ headers and found following path:\n\nclang++-6.0\niostream -> ostream -> ios -> iosfwd -> wchar.h -> stdio.h\n\n\n\nllvm-g++-4.2\niostream -> ostream -> ios -> iosfwd -> bits/c++io.h -> cstdio -> stdio.h\n\n\n\ng++-mp-4.8\niostream -> ostream -> ios -> iosfwd -> bits/postypes.h -> cwchar -> wchar.h -> stdio.h\n\n\nAlso I have found this very interesting path:\n\nclang++-6.0\nqueue -> vector -> memory -> iterator -> iosfwd\n\n\n\nllvm-g++-4.2\nqueue -> vector -> bits/stl_algobase.h -> iosfwd\niterator -> ostream\n\n\n\ng++-mp-4.8\niterator -> ostream\n\n\nSo, including iostream, ios or iterator is enough for stdio...\n\nLinux (glibc)\nSince glibc's stdio.h is guarded, the path is little bit different.\nglibc\u306estdio.h\u306f\u30ac\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7d4c\u8def\u306f\u5c11\u3057\u7570\u306a\u308a\u307e\u3059\u3002\n# 3.3\niostream -> ostream -> ios -> iosfwd -> bits/fpos.h -> bits/c++io.h -> cstdio -> stdio.h\n# 3.4,4.1,4.2\niostream -> ostream -> ios -> iosfwd -> bits/c++io.h -> cstdio -> stdio.h\n# 4.3\niostream -> ostream -> ios -> bits/char_traits.h -> cstdio -> stdio.h\n\nThe path iosfwd -> bits/c++io.h and bits/char_traits.h -> cstdio has disappeared from g++ 4.4.\nThat's why we need to include cstdio separately.\niosfwd -> bits/c++io.h\u304a\u3088\u3073bits/char_traits.h -> cstdio\u306e\u7d4c\u8def\u306fg++ 4.4\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u306e\u305f\u3081cstdio\u3092\u5225\u9014\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u3002\nOn the other hand,\niostream -> ostream -> ios -> __locale -> string -> cstdio -> stdio.h\n\nthis path is available (also on OSX). Really funny...\n\u4e0a\u8a18\u7d4c\u8def\u306fLinux\u306b\u3082OSX\u306b\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\n\nDigression\n\u4ee5\u4e0b\u4f59\u8ac7\u3002\n\nMinGW\niostream -> ostream -> ios -> bits/localefwd.h -> bits/c++locale.h -> clocale -> locale.h -> stdio.h\n\nwchar.h does not include stdio.h, but locale.h does...\n\nAndroid NDK\nstdio.h exists in include-fixed and it is not guarded, so the path of g++-mp-4.8 should be available. Confirmed with 4.4.3.\n\nnewlib\nSo firm, the implementation looks the wisest.\n\u3057\u3063\u304b\u308a\u3057\u305f\u4f5c\u308a\u3002\u4e00\u756a\u8ce2\u3044\u5b9f\u88c5\u306a\u611f\u3058\u3002\n\nC++\u306b\u304a\u3051\u308bstdio.h\u30d8\u30c3\u30c0\u306b\u3064\u3044\u3066\n\nI wondered why I can use cstdio API with including **only iostream**.\n\niostream\u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305f\u3060\u3051\u3067cstdio\u304c\u4f7f\u7528\u53ef\u80fd\u306b\u306a\u308b\u70b9\u306b\u3064\u3044\u3066\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n## OSX (BSD)\n\nI browsed c++ headers and found following path:\n\n```clang++-6.0\niostream -> ostream -> ios -> iosfwd -> wchar.h -> stdio.h\n```\n\n```llvm-g++-4.2\niostream -> ostream -> ios -> iosfwd -> bits/c++io.h -> cstdio -> stdio.h\n```\n\n```g++-mp-4.8\niostream -> ostream -> ios -> iosfwd -> bits/postypes.h -> cwchar -> wchar.h -> stdio.h\n```\n\nAlso I have found this very interesting path:\n\n```clang++-6.0\nqueue -> vector -> memory -> iterator -> iosfwd\n```\n\n```llvm-g++-4.2\nqueue -> vector -> bits/stl_algobase.h -> iosfwd\niterator -> ostream\n```\n\n```g++-mp-4.8\niterator -> ostream\n```\n\nSo, including `iostream`, `ios` or `iterator` is enough for stdio...\n\n## Linux (glibc)\nSince glibc's stdio.h is guarded, the path is little bit different.\n\nglibc\u306estdio.h\u306f\u30ac\u30fc\u30c9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u7d4c\u8def\u306f\u5c11\u3057\u7570\u306a\u308a\u307e\u3059\u3002\n\n```g++\n# 3.3\niostream -> ostream -> ios -> iosfwd -> bits/fpos.h -> bits/c++io.h -> cstdio -> stdio.h\n# 3.4,4.1,4.2\niostream -> ostream -> ios -> iosfwd -> bits/c++io.h -> cstdio -> stdio.h\n# 4.3\niostream -> ostream -> ios -> bits/char_traits.h -> cstdio -> stdio.h\n```\n\nThe path `iosfwd -> bits/c++io.h` and `bits/char_traits.h -> cstdio` has disappeared from g++ 4.4.\n**That's why we need to include cstdio separately.**\n\n `iosfwd -> bits/c++io.h`\u304a\u3088\u3073`bits/char_traits.h -> cstdio`\u306e\u7d4c\u8def\u306fg++ 4.4\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n**\u3053\u306e\u305f\u3081cstdio\u3092\u5225\u9014\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u3067\u3059\u3002**\n\nOn the other hand,\n\n```clang++_-stdlib=libc++\niostream -> ostream -> ios -> __locale -> string -> cstdio -> stdio.h\n```\n\nthis path is available (also on OSX). Really funny...\n\u4e0a\u8a18\u7d4c\u8def\u306fLinux\u306b\u3082OSX\u306b\u3082\u5b58\u5728\u3057\u307e\u3059\u3002\n\n## Digression\n\u4ee5\u4e0b\u4f59\u8ac7\u3002\n\n### MinGW\n\n```\niostream -> ostream -> ios -> bits/localefwd.h -> bits/c++locale.h -> clocale -> locale.h -> stdio.h\n```\n\nwchar.h does not include stdio.h, but locale.h does...\n\n### Android NDK\nstdio.h exists in include-fixed and it is not guarded, so the path of g++-mp-4.8 should be available. Confirmed with 4.4.3.\n\n### newlib\nSo firm, the implementation looks the wisest.\n\u3057\u3063\u304b\u308a\u3057\u305f\u4f5c\u308a\u3002\u4e00\u756a\u8ce2\u3044\u5b9f\u88c5\u306a\u611f\u3058\u3002\n", "tags": ["C++", "OSX", "Linux", "MinGW"]}