{"context": "\u3053\u306e\u6295\u7a3f (Docker Swarm Cluster without docker-machine)\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u306b\u601d\u3063\u305f\u3002Swarm\u30d7\u30ed\u30bb\u30b9\u3092HA\u3067\u8907\u6570\u7acb\u3061\u4e0a\u3052\u3066\u3082\u3001\u3053\u306e\u69cb\u6210\u3067\u306fConsul\u30d7\u30ed\u30bb\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u304b\u3089Consul\u304c\u6b7b\u3093\u3060\u3089\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3060\u3068\u3002Consul\u81ea\u4f53\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3067\u904b\u7528\u3067\u304d\u308b (\u8a73\u3057\u304f\u306f\u3053\u3061\u3089)\u306e\u3067\u3001\u4eca\u56de\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3067\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308bConsul\u3068Swarm\u3092\u3069\u306e\u3088\u3046\u306b\u7d44\u307f\u5408\u308f\u305b\u308b\u304b\u5b9f\u9a13\u3057\u3066\u307f\u305f\u3002\n\u7d50\u8ad6\u304b\u3089\u8a00\u3063\u3066\u3057\u307e\u3046\u3068\u3001Swarm\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u6642\u306b\u7d10\u4ed8\u3051\u308bConsul\u30ce\u30fc\u30c9\u306f\u4e00\u3064\u3057\u304b\u8a18\u8ff0\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3002Docker Swarm Discovery\u306e\u4f8b\u306bEtcd\u306fswarm join --advertise=<node_ip:2375> etcd://<etcd_addr1>,<etcd_addr2>/<optional path prefix>\u3068\u3042\u308b\u306e\u306b\u5bfe\u3057\u3001Consul\u3067\u306fswarm join --advertise=<node_ip:2375> consul://<consul_addr>/<optional path prefix>\u3068\u3042\u308a\u3001\u3044\u304b\u306b\u3082\u8907\u6570\u30ce\u30fc\u30c9\u8a18\u8ff0\u3067\u304d\u306a\u305d\u3046\u3002\u5b9f\u969b\u306bdocker/libkv/store/consul/consul.go\u306b\u6b21\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3042\u308b\u3002\nvar (\n    // ErrMultipleEndpointsUnsupported is thrown when there are\n    // multiple endpoints specified for Consul\n    ErrMultipleEndpointsUnsupported = errors.New(\"consul does not support multiple endpoints\")\n\n    // ErrSessionRenew is thrown when the session can't be\n    // renewed because the Consul version does not support sessions\n    ErrSessionRenew = errors.New(\"cannot set or renew session for ttl, unable to operate on sessions\")\n)\n<snip>\nfunc New(endpoints []string, options *store.Config) (store.Store, error) {\n    if len(endpoints) > 1 {\n        return nil, ErrMultipleEndpointsUnsupported\n    }\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Swarm\u8d77\u52d5\u6642\u306b\u7d10\u4ed8\u3051\u305fConsul\u30ce\u30fc\u30c9\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u30ce\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u305fSwarm\u30d7\u30ed\u30bb\u30b9\u306fService Discovery\u3092\u51fa\u6765\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u3053\u308c\u3067\u306f\u8a71\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001Consul\u30ce\u30fc\u30c9\u3092Server\u3068Client\u306e\u7d44\u5408\u305b\u3068\u3057\u3001Consul\u306eClient\u30ce\u30fc\u30c9\u3092proxy\u3068\u3057\u3066\u898b\u7acb\u3066\u3066Swarm\u30d7\u30ed\u30bb\u30b9\u3068\u7d10\u4ed8\u3051\u308b\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u305f\u3002proxy\u304c\u843d\u3061\u308c\u3070\u3001\u305d\u306eproxy\u3068\u7d10\u4ed8\u3051\u3089\u308c\u305fSwarm\u3082\u3082\u3061\u308d\u3093\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3068\u306a\u308b\u3002\u69cb\u6210\u56f3\u306f\u6b21\u306e\u901a\u308a\u3002\n\n7\u3064\u306eVM\u3092\u5229\u7528\u3059\u308b\u3002Consul\u7528\u306b10.0.1.0/24\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u3002\u4e00\u89a7\u306f\u6b21\u306e\u901a\u308a\u3002\n\n\n\nVM name\nIP address\nIP address for consul\n\n\n\n\nconsul-server1\n192.168.209.168\n10.0.1.129\n\n\nconsul-server2\n192.168.209.169\n10.0.1.130\n\n\nconsul-server3\n192.168.209.171\n10.0.1.134\n\n\nconsul-client\n192.168.209.170\n10.0.1.131\n\n\nswarm-mgr\n192.168.209.138\n10.0.1.128\n\n\nswarm-node1\n192.168.209.166\n10.0.1.132\n\n\nswarm-node2\n192.168.209.167\n10.0.1.133\n\n\n\n(\u3042\u3042\u3001\u3081\u3093\u3069\u304f\u3055\u3044\u3002)\n\u3067\u306f\u3001\u65e9\u901fConsul\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002\n\nconsul-server1\n$ docker run --rm progrium/consul cmd:run 10.0.1.129 -d\neval docker run --name consul -h $HOSTNAME      -p 10.0.1.129:8300:8300         \\\n-p 10.0.1.129:8301:8301         -p 10.0.1.129:8301:8301/udp     -p 10.0.1.129:8302:8302 \\\n-p 10.0.1.129:8302:8302/udp      -p 10.0.1.129:8400:8400         -p 10.0.1.129:8500:8500 \\\n-p 172.17.0.1:53:53     -p 172.17.0.1:53:53/udp         -d      progrium/consul \\\n-server -advertise 10.0.1.129 -bootstrap-expect 3\n\n\nprogrium/consul cmd:run\u3067\u3053\u306e\u3088\u3046\u306beval\u306a\u5f62\u3067\u5b9f\u884c\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u3002\u4ee5\u4e0b\u3092\u5b9f\u969b\u306b\u306f\u5b9f\u884c\u3059\u308b\u3002\n\nconsul-server1\n$ docker run --name consul1 -p 10.0.1.129:8300:8300 \\\n                            -p 10.0.1.129:8301:8301 \\\n                            -p 10.0.1.129:8301:8301/udp \\\n                            -p 10.0.1.129:8302:8302 \\\n                            -p 10.0.1.129:8302:8302/udp \\\n                            -p 10.0.1.129:8400:8400 \\\n                            -p 10.0.1.129:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.129 \\\n                            -bootstrap-expect 3\n\n\nconsul-server2\u3068consul-server3\u3092Consul\u30af\u30e9\u30b9\u30bf\u30fc\u306bjoin\u3055\u305b\u308b\u3002\n\nconsul-server2\n$ docker run --name consul2 -p 10.0.1.130:8300:8300 \\\n                            -p 10.0.1.130:8301:8301 \\\n                            -p 10.0.1.130:8301:8301/udp \\\n                            -p 10.0.1.130:8302:8302 \\\n                            -p 10.0.1.130:8302:8302/udp \\\n                            -p 10.0.1.130:8400:8400 \\\n                            -p 10.0.1.130:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.130 \\\n                            -join 10.0.1.129\n\n\n\nconsul-server3\n$ docker run --name consul3 -p 10.0.1.134:8300:8300 \\\n                            -p 10.0.1.134:8301:8301 \\\n                            -p 10.0.1.134:8301:8301/udp \\\n                            -p 10.0.1.134:8302:8302 \\\n                            -p 10.0.1.134:8302:8302/udp \\\n                            -p 10.0.1.134:8400:8400 \\\n                            -p 10.0.1.134:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.134 \\\n                            -join 10.0.1.129\n\n\n\u6700\u5f8c\u306bconsul-clinet\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066join\u3055\u305b\u308b\u3002-server\u306e\u6307\u5b9a\u304c\u306a\u304f\u306a\u3063\u305f\u3060\u3051\u3002\n\nconsul-client\n$ docker run --name consul-cli -p 10.0.1.131:8300:8300 \\\n                               -p 10.0.1.131:8301:8301 \\\n                               -p 10.0.1.131:8301:8301/udp \\\n                               -p 10.0.1.131:8302:8302 \\\n                               -p 10.0.1.131:8302:8302/udp \\\n                               -p 10.0.1.131:8400:8400 \\\n                               -p 10.0.1.131:8500:8500 \\\n                               -p 172.17.0.1:53:53 \\\n                               -p 172.17.0.1:53:53/udp \\\n                               -d progrium/consul -advertise 10.0.1.131 \\\n                               -join 10.0.1.129\n\n\nConsul\u30af\u30e9\u30b9\u30bf\u30fc\u306emember\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\u5927\u4e08\u592b\u305d\u3046\u3002\n\nconsul-server1\n$ docker exec consul1 consul members\nNode          Address          Status  Type    Build  Protocol  DC\n1011d34dc1c5  10.0.1.129:8301  alive   server  0.5.2  2         dc1\nb0d93c5dd007  10.0.1.130:8301  alive   server  0.5.2  2         dc1\nc277ab2f8165  10.0.1.134:8301  alive   server  0.5.2  2         dc1\n375a31f7fb52  10.0.1.131:8301  alive   client  0.5.2  2         dc1\n\n\n\u3067\u306f\u3044\u3088\u3044\u3088Swarm Manager\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002Consul\u306ebinding\u306b\u306fconsul-client (10.0.1.131)\u3092\u6307\u5b9a\u3059\u308b\u3002\n\nswarm-manager\n$ docker run --restart=unless-stopped -d -p 3375:2375 swarm manage \\\n--replication --advertise 192.168.209.138:3375 consul://10.0.1.131:8500\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n6461f48b1b04        swarm               \"/swarm manage --repl\"   4 seconds ago       Up 3 seconds        0.0.0.0:3375->2375/tcp   tiny_raman\n\n\n\u6700\u5f8c\u306bswarm node\u3092\u8ffd\u52a0\u3059\u308b\u3002docker info\u306e\u7d50\u679c\u304b\u3089\u304d\u3061\u3093\u3068\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\nswarm-manager\n$ docker -H=tcp://192.168.209.166:2375 run -d swarm join \\\n--advertise=192.168.209.166:2375 consul://10.0.1.131:8500\n$ docker -H=tcp://192.168.209.167:2375 run -d swarm join \\\n--advertise=192.168.209.167:2375 consul://10.0.1.131:8500\n$ DOCKER_HOST=192.168.209.138:3375 docker info\nContainers: 27\n Running: 2\n Paused: 0\n Stopped: 25\nImages: 14\nServer Version: swarm/1.2.0\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 2\n ubu-swarm-node1: 192.168.209.166:2375\n  \u2514 Status: Healthy\n  \u2514 Containers: 15\n  \u2514 Reserved CPUs: 0 / 2\n  \u2514 Reserved Memory: 1 GiB / 4.047 GiB\n  \u2514 Labels: executiondriver=, kernelversion=3.13.0-85-generic, operatingsystem=Ubuntu 14.04.4 LTS, storagedriver=aufs\n  \u2514 Error: (none)\n  \u2514 UpdatedAt: 2016-05-02T14:49:12Z\n  \u2514 ServerVersion: 1.11.0\n ubu-swarm-node2: 192.168.209.167:2375\n  \u2514 Status: Healthy\n  \u2514 Containers: 12\n  \u2514 Reserved CPUs: 0 / 2\n  \u2514 Reserved Memory: 1 GiB / 4.047 GiB\n  \u2514 Labels: executiondriver=, kernelversion=3.13.0-85-generic, operatingsystem=Ubuntu 14.04.4 LTS, storagedriver=aufs\n  \u2514 Error: (none)\n  \u2514 UpdatedAt: 2016-05-02T14:48:49Z\n  \u2514 ServerVersion: 1.11.0\nPlugins:\n Volume:\n Network:\nKernel Version: 3.13.0-85-generic\nOperating System: linux\nArchitecture: amd64\nCPUs: 4\nTotal Memory: 8.094 GiB\nName: 6461f48b1b04\nDocker Root Dir:\nDebug mode (client): false\nDebug mode (server): false\nWARNING: No kernel memory limit support\n\n\n\u9069\u5f53\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u307f\u308b\u3002\n\nswarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker run -dit ubuntu /bin/bash\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n9bd2e4eccc01        ubuntu              \"/bin/bash\"         5 seconds ago       Up 4 seconds                            ubu-swarm-node2/hungry_archimedes\n$ DOCKER_HOST=192.168.209.138:3375 docker exec -it ubu-swarm-node2/hungry_archimedes bash\nroot@9bd2e4eccc01:/#\n\n\nconsul-server1\u306econsul\u3092\u843d\u3068\u3057\u3066\u307f\u308b\u3002\n\nconsul-server1\n$ docker stop consul1\n\n\n\u6b21\u306e\u3088\u3046\u306b\u3001\u843d\u3068\u3057\u305f\u76f4\u5f8c\u306fError\u304c\u8fd4\u3063\u3066\u304f\u308b\u304c\u3001leader election\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u51e6\u7406\u3092\u7d99\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u3061\u306a\u307f\u306bConsul\u30b5\u30fc\u30d0\u30fc\u304c2\u53f0\u69cb\u6210\u306e\u5834\u5408\u30011\u3064\u3092\u843d\u3068\u3059\u3068leader election\u304c\u51fa\u6765\u305aswarm\u306e\u51e6\u7406\u306f\u505c\u6b62\u3057\u3066\u3057\u307e\u3046\u30023\u53f0\u4ee5\u4e0a\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\nswarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nError response from daemon: No elected primary cluster manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n66a76e873e51        ubuntu              \"/bin/bash\"         56 seconds ago      Up 55 seconds                           ubu-swarm-node2/drunk_galileo\n\n\nconsul-cli\u306econsul\u3092\u843d\u3068\u3057\u3066\u307f\u308b\u3002\n\nconsul-cli\n$ docker stop consul-cli\n\n\n\u5192\u982d\u306b\u8ff0\u3079\u305f\u3088\u3046\u306b\u3053\u306e\u5834\u5408\u306fswarm\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3067\u304d\u306a\u3044\u3002\n\nswarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nError response from daemon: No elected primary cluster manager\n\n\n\u304a\u3057\u307e\u3044\u3002\n[\u3053\u306e\u6295\u7a3f (Docker Swarm Cluster without docker-machine)](http://qiita.com/hisak/items/c6c69b0825efc67a0cf4)\u3092\u66f8\u3044\u3066\u3044\u308b\u6642\u306b\u601d\u3063\u305f\u3002Swarm\u30d7\u30ed\u30bb\u30b9\u3092HA\u3067\u8907\u6570\u7acb\u3061\u4e0a\u3052\u3066\u3082\u3001\u3053\u306e\u69cb\u6210\u3067\u306fConsul\u30d7\u30ed\u30bb\u30b9\u304c\u4e00\u3064\u3057\u304b\u306a\u3044\u304b\u3089Consul\u304c\u6b7b\u3093\u3060\u3089\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3060\u3068\u3002Consul\u81ea\u4f53\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3067\u904b\u7528\u3067\u304d\u308b (\u8a73\u3057\u304f\u306f[\u3053\u3061\u3089](https://hub.docker.com/r/progrium/consul/))\u306e\u3067\u3001\u4eca\u56de\u306f\u8907\u6570\u30ce\u30fc\u30c9\u3067\u7acb\u3061\u4e0a\u304c\u3063\u3066\u3044\u308bConsul\u3068Swarm\u3092\u3069\u306e\u3088\u3046\u306b\u7d44\u307f\u5408\u308f\u305b\u308b\u304b\u5b9f\u9a13\u3057\u3066\u307f\u305f\u3002\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3063\u3066\u3057\u307e\u3046\u3068\u3001Swarm\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u6642\u306b\u7d10\u4ed8\u3051\u308bConsul\u30ce\u30fc\u30c9\u306f\u4e00\u3064\u3057\u304b\u8a18\u8ff0\u3067\u304d\u306a\u3044\u3088\u3046\u3060\u3002[Docker Swarm Discovery](https://github.com/hisaki/swarm/blob/master/docs/discovery.md)\u306e\u4f8b\u306bEtcd\u306f`swarm join --advertise=<node_ip:2375> etcd://<etcd_addr1>,<etcd_addr2>/<optional path prefix>`\u3068\u3042\u308b\u306e\u306b\u5bfe\u3057\u3001Consul\u3067\u306f`swarm join --advertise=<node_ip:2375> consul://<consul_addr>/<optional path prefix>`\u3068\u3042\u308a\u3001\u3044\u304b\u306b\u3082\u8907\u6570\u30ce\u30fc\u30c9\u8a18\u8ff0\u3067\u304d\u306a\u305d\u3046\u3002\u5b9f\u969b\u306b[docker/libkv/store/consul/consul.go](https://github.com/docker/libkv/blob/master/store/consul/consul.go)\u306b\u6b21\u306e\u3088\u3046\u306a\u8a18\u8ff0\u304c\u3042\u308b\u3002\n\n```go\nvar (\n\t// ErrMultipleEndpointsUnsupported is thrown when there are\n\t// multiple endpoints specified for Consul\n\tErrMultipleEndpointsUnsupported = errors.New(\"consul does not support multiple endpoints\")\n\n\t// ErrSessionRenew is thrown when the session can't be\n\t// renewed because the Consul version does not support sessions\n\tErrSessionRenew = errors.New(\"cannot set or renew session for ttl, unable to operate on sessions\")\n)\n<snip>\nfunc New(endpoints []string, options *store.Config) (store.Store, error) {\n\tif len(endpoints) > 1 {\n\t\treturn nil, ErrMultipleEndpointsUnsupported\n\t}\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001Swarm\u8d77\u52d5\u6642\u306b\u7d10\u4ed8\u3051\u305fConsul\u30ce\u30fc\u30c9\u304c\u884c\u65b9\u4e0d\u660e\u306b\u306a\u3063\u305f\u5834\u5408\u3001\u305d\u306e\u30ce\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066\u3044\u305fSwarm\u30d7\u30ed\u30bb\u30b9\u306fService Discovery\u3092\u51fa\u6765\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u3053\u308c\u3067\u306f\u8a71\u304c\u7d42\u308f\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001Consul\u30ce\u30fc\u30c9\u3092Server\u3068Client\u306e\u7d44\u5408\u305b\u3068\u3057\u3001Consul\u306eClient\u30ce\u30fc\u30c9\u3092proxy\u3068\u3057\u3066\u898b\u7acb\u3066\u3066Swarm\u30d7\u30ed\u30bb\u30b9\u3068\u7d10\u4ed8\u3051\u308b\u3053\u3068\u3092\u8a66\u3057\u3066\u307f\u305f\u3002proxy\u304c\u843d\u3061\u308c\u3070\u3001\u305d\u306eproxy\u3068\u7d10\u4ed8\u3051\u3089\u308c\u305fSwarm\u3082\u3082\u3061\u308d\u3093\u30b5\u30fc\u30d3\u30b9\u505c\u6b62\u3068\u306a\u308b\u3002\u69cb\u6210\u56f3\u306f\u6b21\u306e\u901a\u308a\u3002\n\n![swarm-consul2.PNG](https://qiita-image-store.s3.amazonaws.com/0/32090/9df5964e-e9fc-0667-7fa7-21eaab00f28c.png)\n\n7\u3064\u306eVM\u3092\u5229\u7528\u3059\u308b\u3002Consul\u7528\u306b10.0.1.0/24\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u5272\u308a\u5f53\u3066\u305f\u3002\u4e00\u89a7\u306f\u6b21\u306e\u901a\u308a\u3002\n\n| VM name | IP address | IP address for consul |\n|:-----------|:------------:|:------------:|\n| consul-server1 | 192.168.209.168 | 10.0.1.129 |\n| consul-server2 | 192.168.209.169 | 10.0.1.130 |\n| consul-server3 | 192.168.209.171 | 10.0.1.134 |\n| consul-client | 192.168.209.170 | 10.0.1.131 |\n| swarm-mgr | 192.168.209.138 | 10.0.1.128 |\n| swarm-node1 | 192.168.209.166 | 10.0.1.132 |\n| swarm-node2 | 192.168.209.167 | 10.0.1.133 |\n\n(\u3042\u3042\u3001\u3081\u3093\u3069\u304f\u3055\u3044\u3002)\n\n\u3067\u306f\u3001\u65e9\u901fConsul\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002\n\n```shell-session:consul-server1\n$ docker run --rm progrium/consul cmd:run 10.0.1.129 -d\neval docker run --name consul -h $HOSTNAME      -p 10.0.1.129:8300:8300         \\\n-p 10.0.1.129:8301:8301         -p 10.0.1.129:8301:8301/udp     -p 10.0.1.129:8302:8302 \\\n-p 10.0.1.129:8302:8302/udp      -p 10.0.1.129:8400:8400         -p 10.0.1.129:8500:8500 \\\n-p 172.17.0.1:53:53     -p 172.17.0.1:53:53/udp         -d      progrium/consul \\\n-server -advertise 10.0.1.129 -bootstrap-expect 3\n```\n\n`progrium/consul cmd:run`\u3067\u3053\u306e\u3088\u3046\u306beval\u306a\u5f62\u3067\u5b9f\u884c\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u3002\u4ee5\u4e0b\u3092\u5b9f\u969b\u306b\u306f\u5b9f\u884c\u3059\u308b\u3002\n\n```shell-session:consul-server1\n$ docker run --name consul1 -p 10.0.1.129:8300:8300 \\\n                            -p 10.0.1.129:8301:8301 \\\n                            -p 10.0.1.129:8301:8301/udp \\\n                            -p 10.0.1.129:8302:8302 \\\n                            -p 10.0.1.129:8302:8302/udp \\\n                            -p 10.0.1.129:8400:8400 \\\n                            -p 10.0.1.129:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.129 \\\n                            -bootstrap-expect 3\n```\n\n`consul-server2`\u3068`consul-server3`\u3092Consul\u30af\u30e9\u30b9\u30bf\u30fc\u306bjoin\u3055\u305b\u308b\u3002\n\n```shell-session:consul-server2\n$ docker run --name consul2 -p 10.0.1.130:8300:8300 \\\n                            -p 10.0.1.130:8301:8301 \\\n                            -p 10.0.1.130:8301:8301/udp \\\n                            -p 10.0.1.130:8302:8302 \\\n                            -p 10.0.1.130:8302:8302/udp \\\n                            -p 10.0.1.130:8400:8400 \\\n                            -p 10.0.1.130:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.130 \\\n                            -join 10.0.1.129\n```\n\n```shell-session:consul-server3\n$ docker run --name consul3 -p 10.0.1.134:8300:8300 \\\n                            -p 10.0.1.134:8301:8301 \\\n                            -p 10.0.1.134:8301:8301/udp \\\n                            -p 10.0.1.134:8302:8302 \\\n                            -p 10.0.1.134:8302:8302/udp \\\n                            -p 10.0.1.134:8400:8400 \\\n                            -p 10.0.1.134:8500:8500 \\\n                            -p 172.17.0.1:53:53 \\\n                            -p 172.17.0.1:53:53/udp \\\n                            -d progrium/consul -server -advertise 10.0.1.134 \\\n                            -join 10.0.1.129\n```\n\n\u6700\u5f8c\u306b`consul-clinet`\u3092\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u3057\u3066join\u3055\u305b\u308b\u3002`-server`\u306e\u6307\u5b9a\u304c\u306a\u304f\u306a\u3063\u305f\u3060\u3051\u3002\n\n```shell-session:consul-client\n$ docker run --name consul-cli -p 10.0.1.131:8300:8300 \\\n                               -p 10.0.1.131:8301:8301 \\\n                               -p 10.0.1.131:8301:8301/udp \\\n                               -p 10.0.1.131:8302:8302 \\\n                               -p 10.0.1.131:8302:8302/udp \\\n                               -p 10.0.1.131:8400:8400 \\\n                               -p 10.0.1.131:8500:8500 \\\n                               -p 172.17.0.1:53:53 \\\n                               -p 172.17.0.1:53:53/udp \\\n                               -d progrium/consul -advertise 10.0.1.131 \\\n                               -join 10.0.1.129\n```\n\nConsul\u30af\u30e9\u30b9\u30bf\u30fc\u306emember\u3092\u78ba\u8a8d\u3057\u3066\u307f\u308b\u3002\u5927\u4e08\u592b\u305d\u3046\u3002\n\n```shell-session:consul-server1\n$ docker exec consul1 consul members\nNode          Address          Status  Type    Build  Protocol  DC\n1011d34dc1c5  10.0.1.129:8301  alive   server  0.5.2  2         dc1\nb0d93c5dd007  10.0.1.130:8301  alive   server  0.5.2  2         dc1\nc277ab2f8165  10.0.1.134:8301  alive   server  0.5.2  2         dc1\n375a31f7fb52  10.0.1.131:8301  alive   client  0.5.2  2         dc1\n```\n\n\u3067\u306f\u3044\u3088\u3044\u3088Swarm Manager\u3092\u7acb\u3061\u4e0a\u3052\u308b\u3002Consul\u306ebinding\u306b\u306f`consul-client (10.0.1.131)`\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n```shell-session:swarm-manager\n$ docker run --restart=unless-stopped -d -p 3375:2375 swarm manage \\\n--replication --advertise 192.168.209.138:3375 consul://10.0.1.131:8500\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES\n6461f48b1b04        swarm               \"/swarm manage --repl\"   4 seconds ago       Up 3 seconds        0.0.0.0:3375->2375/tcp   tiny_raman\n```\n\n\u6700\u5f8c\u306bswarm node\u3092\u8ffd\u52a0\u3059\u308b\u3002`docker info`\u306e\u7d50\u679c\u304b\u3089\u304d\u3061\u3093\u3068\u8ffd\u52a0\u3055\u308c\u305f\u3053\u3068\u304c\u5206\u304b\u308b\u3002\n\n```shell-session:swarm-manager\n$ docker -H=tcp://192.168.209.166:2375 run -d swarm join \\\n--advertise=192.168.209.166:2375 consul://10.0.1.131:8500\n$ docker -H=tcp://192.168.209.167:2375 run -d swarm join \\\n--advertise=192.168.209.167:2375 consul://10.0.1.131:8500\n$ DOCKER_HOST=192.168.209.138:3375 docker info\nContainers: 27\n Running: 2\n Paused: 0\n Stopped: 25\nImages: 14\nServer Version: swarm/1.2.0\nRole: primary\nStrategy: spread\nFilters: health, port, dependency, affinity, constraint\nNodes: 2\n ubu-swarm-node1: 192.168.209.166:2375\n  \u2514 Status: Healthy\n  \u2514 Containers: 15\n  \u2514 Reserved CPUs: 0 / 2\n  \u2514 Reserved Memory: 1 GiB / 4.047 GiB\n  \u2514 Labels: executiondriver=, kernelversion=3.13.0-85-generic, operatingsystem=Ubuntu 14.04.4 LTS, storagedriver=aufs\n  \u2514 Error: (none)\n  \u2514 UpdatedAt: 2016-05-02T14:49:12Z\n  \u2514 ServerVersion: 1.11.0\n ubu-swarm-node2: 192.168.209.167:2375\n  \u2514 Status: Healthy\n  \u2514 Containers: 12\n  \u2514 Reserved CPUs: 0 / 2\n  \u2514 Reserved Memory: 1 GiB / 4.047 GiB\n  \u2514 Labels: executiondriver=, kernelversion=3.13.0-85-generic, operatingsystem=Ubuntu 14.04.4 LTS, storagedriver=aufs\n  \u2514 Error: (none)\n  \u2514 UpdatedAt: 2016-05-02T14:48:49Z\n  \u2514 ServerVersion: 1.11.0\nPlugins:\n Volume:\n Network:\nKernel Version: 3.13.0-85-generic\nOperating System: linux\nArchitecture: amd64\nCPUs: 4\nTotal Memory: 8.094 GiB\nName: 6461f48b1b04\nDocker Root Dir:\nDebug mode (client): false\nDebug mode (server): false\nWARNING: No kernel memory limit support\n```\n\n\u9069\u5f53\u306b\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u3066\u307f\u308b\u3002\n\n```shell-session:swarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker run -dit ubuntu /bin/bash\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n9bd2e4eccc01        ubuntu              \"/bin/bash\"         5 seconds ago       Up 4 seconds                            ubu-swarm-node2/hungry_archimedes\n$ DOCKER_HOST=192.168.209.138:3375 docker exec -it ubu-swarm-node2/hungry_archimedes bash\nroot@9bd2e4eccc01:/#\n```\n\n`consul-server1`\u306econsul\u3092\u843d\u3068\u3057\u3066\u307f\u308b\u3002\n\n```shell-session:consul-server1\n$ docker stop consul1\n```\n\n\u6b21\u306e\u3088\u3046\u306b\u3001\u843d\u3068\u3057\u305f\u76f4\u5f8c\u306fError\u304c\u8fd4\u3063\u3066\u304f\u308b\u304c\u3001leader election\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u51e6\u7406\u3092\u7d99\u7d9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u3061\u306a\u307f\u306bConsul\u30b5\u30fc\u30d0\u30fc\u304c2\u53f0\u69cb\u6210\u306e\u5834\u5408\u30011\u3064\u3092\u843d\u3068\u3059\u3068leader election\u304c\u51fa\u6765\u305aswarm\u306e\u51e6\u7406\u306f\u505c\u6b62\u3057\u3066\u3057\u307e\u3046\u30023\u53f0\u4ee5\u4e0a\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u5fc5\u8981\u3089\u3057\u3044\u3002\n\n```shell-session:swarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nError response from daemon: No elected primary cluster manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES\n66a76e873e51        ubuntu              \"/bin/bash\"         56 seconds ago      Up 55 seconds                           ubu-swarm-node2/drunk_galileo\n```\n\n`consul-cli`\u306econsul\u3092\u843d\u3068\u3057\u3066\u307f\u308b\u3002\n\n```shell-session:consul-cli\n$ docker stop consul-cli\n```\n\n\u5192\u982d\u306b\u8ff0\u3079\u305f\u3088\u3046\u306b\u3053\u306e\u5834\u5408\u306fswarm\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3067\u304d\u306a\u3044\u3002\n\n```shell-session:swarm-manager\n$ DOCKER_HOST=192.168.209.138:3375 docker ps\nError response from daemon: No elected primary cluster manager\n```\n\n\u304a\u3057\u307e\u3044\u3002\n", "tags": ["DockerSwarm", "consul", "docker"]}