{"context": "\n\n\u672cQiita\u306b\u95a2\u3057\u3066\nREST\u3067\u306e\u63a5\u7d9a\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n\n\u95a2\u9023Qiita\n\nDayDream\u958b\u767a\u6a5f\u306e\u8a2d\u5b9a\nUnity\u3067\u306eDayDream\u30c7\u30e2\u30a2\u30d7\u30ea\u306eBuild\nDayDream Ready\u306e\u30b9\u30de\u30d5\u30a9\nDayDream\u958b\u767a\u6a5f\u306e\u4f5c\u308a\u65b9\nDayDream\u95a2\u9023\u30ea\u30f3\u30af\nUnity\u5411\u3051\u306eWebSocket\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7d44\u307f\u8fbc\u307f\nUnity\u306eJsonUtility\u3067JSON\u914d\u5217\u3092\u51e6\u7406\u3059\u308b\n\n\nREST\nUnity\u306eC#\u3067REST\u3067\u305f\u305f\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001UnityWebRequest\u3092\u5229\u7528\u3059\u308b\u3002\nhttps://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.html\n\nGET\n   public IEnumerator Get (string url) {\n        var request = new UnityWebRequest();\n        request.downloadHandler = new DownloadHandlerBuffer();\n        request.url = url;\n        request.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n        request.method = UnityWebRequest.kHttpVerbGET;\n        yield return request.Send();\n\n        if(request.isError) {\n            Debug.Log(request.error);\n        }\n        else {\n            if (request.responseCode == 200) {\n                Debug.Log (\"success\");\n                Debug.Log(request.downloadHandler.text);\n            } else {\n                Debug.Log (\"failed\");\n            }\n        }\n    }\n\n\nPOST\n    public IEnumerator Post (string url, string jsonStr) {\n        var request = new UnityWebRequest();\n        request.url = url;\n        byte[] body = Encoding.UTF8.GetBytes(jsonStr);\n        request.uploadHandler = new UploadHandlerRaw(body);\n        request.downloadHandler = new DownloadHandlerBuffer();\n        request.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n        request.method = UnityWebRequest.kHttpVerbPOST;\n        yield return request.Send();\n\n        if(request.isError) {\n            Debug.Log(request.error);\n        }\n        else {\n            if (request.responseCode == 200) {\n                Debug.Log (\"success\");\n                Debug.Log(request.downloadHandler.text);\n            } else {\n                Debug.Log (\"failed\");\n            }\n        }\n    }\n\n\nDELETE\n    public IEnumerator Delete (string url) {\n        var request = new UnityWebRequest();\n        request.url = url;\n        request.downloadHandler = new DownloadHandlerBuffer();\n        request.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n        request.method = UnityWebRequest.kHttpVerbDELETE;\n        yield return request.Send();\n\n        if(request.isError) {\n            Debug.Log(request.error);\n        }\n        else {\n            if (request.responseCode == 200) {\n                Debug.Log (\"success\");\n                Debug.Log(request.downloadHandler.text);\n            } else {\n                Debug.Log (\"failed\");\n            }\n        }\n    }\n\n\nPUT\n    public IEnumerator Put (string url, string jsonStr) {\n        var request = new UnityWebRequest();\n        request.url = url;\n        byte[] body = Encoding.UTF8.GetBytes(jsonStr);\n        request.uploadHandler = new UploadHandlerRaw(body);\n        request.downloadHandler = new DownloadHandlerBuffer();\n        request.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n        request.method = UnityWebRequest.kHttpVerbPUT;\n        yield return request.Send();\n\n        if(request.isError) {\n            Debug.Log(request.error);\n        }\n        else {\n            if (request.responseCode == 200) {\n                Debug.Log (\"success\");\n                Debug.Log(request.downloadHandler.text);\n            } else {\n                Debug.Log (\"failed\");\n            }\n        }\n    }\n\n# \u672cQiita\u306b\u95a2\u3057\u3066\n\nREST\u3067\u306e\u63a5\u7d9a\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n\n# \u95a2\u9023Qiita\n\n* [DayDream\u958b\u767a\u6a5f\u306e\u8a2d\u5b9a](http://qiita.com/akira-sasaki/items/582d84b6e3e717aaf661)\n* [Unity\u3067\u306eDayDream\u30c7\u30e2\u30a2\u30d7\u30ea\u306eBuild](http://qiita.com/akira-sasaki/items/6065e926b76620c12424)\n* [DayDream Ready\u306e\u30b9\u30de\u30d5\u30a9](http://qiita.com/akira-sasaki/items/4d648f9da28ff89973d4)\n* [DayDream\u958b\u767a\u6a5f\u306e\u4f5c\u308a\u65b9](http://qiita.com/akira-sasaki/items/78e86d82dd307c494596)\n* [DayDream\u95a2\u9023\u30ea\u30f3\u30af](http://qiita.com/akira-sasaki/items/3f37d7908be802191705)\n* [Unity\u5411\u3051\u306eWebSocket\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7d44\u307f\u8fbc\u307f](http://qiita.com/akira-sasaki/items/18a72f6b99acaa9601b8)\n* [Unity\u306eJsonUtility\u3067JSON\u914d\u5217\u3092\u51e6\u7406\u3059\u308b](http://qiita.com/akira-sasaki/items/71c13374698b821c4d73)\n\n# REST\n\nUnity\u306eC#\u3067REST\u3067\u305f\u305f\u304d\u305f\u3044\u5834\u5408\u306b\u306f\u3001UnityWebRequest\u3092\u5229\u7528\u3059\u308b\u3002\n\nhttps://docs.unity3d.com/ScriptReference/Networking.UnityWebRequest.html\n\n# GET\n\n```csharp\n   public IEnumerator Get (string url) {\n\t\tvar request = new UnityWebRequest();\n\t\trequest.downloadHandler = new DownloadHandlerBuffer();\n\t\trequest.url = url;\n\t\trequest.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\t\trequest.method = UnityWebRequest.kHttpVerbGET;\n\t\tyield return request.Send();\n\n\t\tif(request.isError) {\n\t\t\tDebug.Log(request.error);\n\t\t}\n\t\telse {\n\t\t\tif (request.responseCode == 200) {\n\t\t\t\tDebug.Log (\"success\");\n\t\t\t\tDebug.Log(request.downloadHandler.text);\n\t\t\t} else {\n\t\t\t\tDebug.Log (\"failed\");\n\t\t\t}\n\t\t}\n\t}\n```\n\n# POST\n\n```csharp\n    public IEnumerator Post (string url, string jsonStr) {\n\t\tvar request = new UnityWebRequest();\n\t\trequest.url = url;\n\t\tbyte[] body = Encoding.UTF8.GetBytes(jsonStr);\n\t\trequest.uploadHandler = new UploadHandlerRaw(body);\n\t\trequest.downloadHandler = new DownloadHandlerBuffer();\n\t\trequest.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\t\trequest.method = UnityWebRequest.kHttpVerbPOST;\n\t\tyield return request.Send();\n\n\t\tif(request.isError) {\n\t\t\tDebug.Log(request.error);\n\t\t}\n\t\telse {\n\t\t\tif (request.responseCode == 200) {\n\t\t\t\tDebug.Log (\"success\");\n\t\t\t\tDebug.Log(request.downloadHandler.text);\n\t\t\t} else {\n\t\t\t\tDebug.Log (\"failed\");\n\t\t\t}\n\t\t}\n\t}\n```\n\n# DELETE\n```csharp\n\tpublic IEnumerator Delete (string url) {\n\t\tvar request = new UnityWebRequest();\n\t\trequest.url = url;\n\t\trequest.downloadHandler = new DownloadHandlerBuffer();\n\t\trequest.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\t\trequest.method = UnityWebRequest.kHttpVerbDELETE;\n\t\tyield return request.Send();\n\n\t\tif(request.isError) {\n\t\t\tDebug.Log(request.error);\n\t\t}\n\t\telse {\n\t\t\tif (request.responseCode == 200) {\n\t\t\t\tDebug.Log (\"success\");\n\t\t\t\tDebug.Log(request.downloadHandler.text);\n\t\t\t} else {\n\t\t\t\tDebug.Log (\"failed\");\n\t\t\t}\n\t\t}\n\t}\n```\n\n# PUT\n```csharp\n\tpublic IEnumerator Put (string url, string jsonStr) {\n\t\tvar request = new UnityWebRequest();\n\t\trequest.url = url;\n\t\tbyte[] body = Encoding.UTF8.GetBytes(jsonStr);\n\t\trequest.uploadHandler = new UploadHandlerRaw(body);\n\t\trequest.downloadHandler = new DownloadHandlerBuffer();\n\t\trequest.SetRequestHeader(\"Content-Type\", \"application/json; charset=UTF-8\");\n\t\trequest.method = UnityWebRequest.kHttpVerbPUT;\n\t\tyield return request.Send();\n\n\t\tif(request.isError) {\n\t\t\tDebug.Log(request.error);\n\t\t}\n\t\telse {\n\t\t\tif (request.responseCode == 200) {\n\t\t\t\tDebug.Log (\"success\");\n\t\t\t\tDebug.Log(request.downloadHandler.text);\n\t\t\t} else {\n\t\t\t\tDebug.Log (\"failed\");\n\t\t\t}\n\t\t}\n\t}\n```\n", "tags": ["daydream", "Android", "VR", "Unity"]}