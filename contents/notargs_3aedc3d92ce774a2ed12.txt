{"context": "\n\n\u304d\u3063\u304b\u3051\n\n\u5148\u306b\u8a00\u3063\u3066\u304a\u304d\u307e\u3059\u304c\u3001\u79c1\u306f\u4eca\u65e5\u306f\u9593\u306b\u5408\u3044\u307e\u305b\u3093\u306e\u3067\u8ab0\u304b\u304a\u9858\u3044\u3057\u307e\u3059\u2014 h_doxas (@h_doxas) 2016\u5e7412\u67086\u65e5\n\n\n\u3060\u308c\u304b\uff01 \u304a\u5ba2\u69d8\u306e\u306a\u304b\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u66f8\u304d\u305f\u304f\u3066\u3057\u3087\u3046\u304c\u306a\u3044\u30de\u30f3\u306f\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u305b\u3093\u304b\uff01\uff1f\uff01\uff1f\uff01\uff1f\uff01\uff1f\u2014 h_doxas (@h_doxas) 2016\u5e7412\u67086\u65e5\n\n\u3057\u3083\u3042\u306a\u3044\u96d1\u306b\u66f8\u304f\u304b  \n\n\u53c2\u8003\nhttp://qiita.com/edo_m18/items/e8efac43a93641c37ad2\n\n\u52d5\u4f5c\n\n\nGLSL Sandbox\nhttp://glslsandbox.com/e#37120.9\n\n\u30b3\u30fc\u30c9\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\nvec2 tex(vec2 uv)\n{\n    return texture2D(backbuffer, uv).xy - 0.5;\n}\n\nvoid main( void ) {\n\n    vec2 pos = ( gl_FragCoord.xy - resolution.xy / 2.0) / resolution.y - mouse + 0.5;\n    vec2 uv =  ( gl_FragCoord.xy / resolution.xy );\n    vec2 prev = tex(uv);\n    vec2 pixel = 1./resolution;\n\n    // \u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u3067\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\n    float accel =\n        tex(uv + pixel * vec2(1, 0)).x +\n        tex(uv - pixel * vec2(1, 0)).x +\n        tex(uv + pixel * vec2(0, 1)).x +\n        tex(uv - pixel * vec2(0, 1)).x -\n        prev.x * 4.0;\n\n    // \u4f1d\u64ad\u901f\u5ea6\u3092\u639b\u3051\u308b\n    accel *= 0.2;\n\n    // \u73fe\u5728\u306e\u901f\u5ea6\u306b\u52a0\u901f\u5ea6\u3092\u8db3\u3057\u3001\u3055\u3089\u306b\u6e1b\u8870\u7387\u3092\u639b\u3051\u308b\n    float velocity = (prev.y + accel) * 0.95;\n\n    // \u9ad8\u3055\u3092\u66f4\u65b0\n    float height = prev.x + velocity;\n\n    // \u30de\u30a6\u30b9\u4f4d\u7f6e\u306b\u6ce2\u7d0b\u3092\u51fa\u3059\n    height += max(0.0, 1.0 - length(pos) * 30.0);\n\n    gl_FragColor = vec4(height + 0.5, velocity + 0.5, 0, 1);\n\n}\n\n# \u304d\u3063\u304b\u3051\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u5148\u306b\u8a00\u3063\u3066\u304a\u304d\u307e\u3059\u304c\u3001\u79c1\u306f\u4eca\u65e5\u306f\u9593\u306b\u5408\u3044\u307e\u305b\u3093\u306e\u3067\u8ab0\u304b\u304a\u9858\u3044\u3057\u307e\u3059</p>&mdash; h_doxas (@h_doxas) <a href=\"https://twitter.com/h_doxas/status/806056486984003584\">2016\u5e7412\u67086\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n<blockquote class=\"twitter-tweet\" data-lang=\"ja\"><p lang=\"ja\" dir=\"ltr\">\u3060\u308c\u304b\uff01 \u304a\u5ba2\u69d8\u306e\u306a\u304b\u306b\u3001\u30b7\u30a7\u30fc\u30c0\u66f8\u304d\u305f\u304f\u3066\u3057\u3087\u3046\u304c\u306a\u3044\u30de\u30f3\u306f\u3044\u3089\u3063\u3057\u3083\u3044\u307e\u305b\u3093\u304b\uff01\uff1f\uff01\uff1f\uff01\uff1f\uff01\uff1f</p>&mdash; h_doxas (@h_doxas) <a href=\"https://twitter.com/h_doxas/status/806063920335073280\">2016\u5e7412\u67086\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u3057\u3083\u3042\u306a\u3044\u96d1\u306b\u66f8\u304f\u304b :innocent: \n\n# \u53c2\u8003\nhttp://qiita.com/edo_m18/items/e8efac43a93641c37ad2\n\n# \u52d5\u4f5c\n![\u7121\u984c.gif](https://qiita-image-store.s3.amazonaws.com/0/52576/73e19e35-f2b0-819a-9123-aa026330c8ec.gif)\n\n# GLSL Sandbox\nhttp://glslsandbox.com/e#37120.9\n\n# \u30b3\u30fc\u30c9\n\n```glsl\n#ifdef GL_ES\nprecision mediump float;\n#endif\n\n#extension GL_OES_standard_derivatives : enable\n\nuniform float time;\nuniform vec2 mouse;\nuniform vec2 resolution;\nuniform sampler2D backbuffer;\n\nvec2 tex(vec2 uv)\n{\n\treturn texture2D(backbuffer, uv).xy - 0.5;\n}\n\nvoid main( void ) {\n\n\tvec2 pos = ( gl_FragCoord.xy - resolution.xy / 2.0) / resolution.y - mouse + 0.5;\n\tvec2 uv =  ( gl_FragCoord.xy / resolution.xy );\n\tvec2 prev = tex(uv);\n\tvec2 pixel = 1./resolution;\n\n\t// \u30e9\u30d7\u30e9\u30b7\u30a2\u30f3\u30d5\u30a3\u30eb\u30bf\u3067\u52a0\u901f\u5ea6\u3092\u8a08\u7b97\n\tfloat accel =\n\t\ttex(uv + pixel * vec2(1, 0)).x +\n\t\ttex(uv - pixel * vec2(1, 0)).x +\n\t\ttex(uv + pixel * vec2(0, 1)).x +\n\t\ttex(uv - pixel * vec2(0, 1)).x -\n\t\tprev.x * 4.0;\n\n\t// \u4f1d\u64ad\u901f\u5ea6\u3092\u639b\u3051\u308b\n\taccel *= 0.2;\n\n\t// \u73fe\u5728\u306e\u901f\u5ea6\u306b\u52a0\u901f\u5ea6\u3092\u8db3\u3057\u3001\u3055\u3089\u306b\u6e1b\u8870\u7387\u3092\u639b\u3051\u308b\n\tfloat velocity = (prev.y + accel) * 0.95;\n\n\t// \u9ad8\u3055\u3092\u66f4\u65b0\n\tfloat height = prev.x + velocity;\n\n\t// \u30de\u30a6\u30b9\u4f4d\u7f6e\u306b\u6ce2\u7d0b\u3092\u51fa\u3059\n\theight += max(0.0, 1.0 - length(pos) * 30.0);\n\t\n\tgl_FragColor = vec4(height + 0.5, velocity + 0.5, 0, 1);\n\n}\n```\n\n", "tags": ["GLSLSandbox", "\u6ce2\u52d5\u65b9\u7a0b\u5f0f", "GPGPU"]}