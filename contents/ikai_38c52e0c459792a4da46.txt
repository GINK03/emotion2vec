{"context": " More than 1 year has passed since last update.Boto 3 \u3067\u3001S3 Buckets \u4e0a\u306b\u3042\u308b key \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\u3001list_objects() \u3092\u4f7f\u3044\u307e\u3059\u3002prefix \u3092\u6307\u5b9a\u3057\u3066\u3001\u6761\u4ef6\u3092\u7d5e\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002S3 \u3067 key \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\u3088\u304f\u4f7f\u308f\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306a\u4f7f\u3044\u304b\u305f\n\u305f\u3068\u3048\u3070\u3001\u30d0\u30b1\u30c3\u30c8\u540d: hoge-bucket \u306b\u3042\u308b\u3001\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9: xx/yy \u306e key \u3092\u5168\u3066\u53d6\u5f97\u3057\u305f\u3044\u6642\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nsample1.py\nfrom boto3 import Session\ns3client = Session().client('s3')\n\nresponse = s3client.list_objects(\n    Bucket='hoge-bucket',\n    Prefix='xx/yy/'\n)\n\nif 'Contents' in response:  # \u8a72\u5f53\u3059\u308b key \u304c\u306a\u3044\u3068 response \u306b 'Contents' \u304c\u542b\u307e\u308c\u306a\u3044\n    keys = [content['Key'] for content in response['Contents']]\n\n\n\u3053\u308c\u3067\u3001Prefix \u3067\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u306e key \u304c\u3042\u308c\u3070\u3001keys \u306b\u306f \n>>> keys\n['xx/yy/a1', 'xx/yy/a2', 'xx/yy/a3', 'xx/yy/b1']\n\n\u306e\u3088\u3046\u306b key \u6587\u5b57\u5217\u306e\u914d\u5217\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001Prefix \u306f'xx/yy/a' \u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8fd4\u308a\u307e\u3059\u3002\n>>> keys\n['xx/yy/a1', 'xx/yy/a2', 'xx/yy/a3']\n\n\n\u6ce8\u610f\u70b9\nlist_objects() \u306b\u306f (\u6b63\u78ba\u306b\u306f Amazon S3 API \u306b\u306f)\u3001\u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u306e\u306f 1000 key \u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\u5358\u7d14\u306b\u3001\u30d0\u30b1\u30c3\u30c8\u306e\u4e0b\u306b\u3042\u308b\u30011000 \u4ef6\u4ee5\u4e0a\u306e key \u3092\u5168\u3066\u53d6\u5f97\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\n\nsample2.py\nfrom boto3 import Session\ns3res = Session().resource('s3')\n\nbucket = s3res.Bucket('hoge-bucket')\nkeys = [obj.key for obj in bucket.objects.all()]\n\n\n\u3067\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\nPrefix \u6761\u4ef6\u3092\u3064\u3051\u3066 1000 \u4ef6\u4ee5\u4e0a\u306e key \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\n\u305f\u3060\u3001\u3082\u3057 Prefix \u3092\u6307\u5b9a\u3057\u305f\u3044\u3068\u304d\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\uff1f \u4e0a\u8ff0\u3057\u305f sample1.py \u3067\u306f\u3001keys \u306b\u4ee3\u5165\u3055\u308c\u308b\u306e\u306f\u591a\u304f\u3066\u3082 1000 \u4ef6\u3067\u3059\u3002\u5f15\u6570\u306e MaxKeys \u306b 1000000 \u3092\u6307\u5b9a\u3057\u3088\u3046\u3068\u3082\u3001\u4ed5\u69d8\u306b\u3088\u308a 1000 \u4ef6\u4ee5\u4e0a\u306f\u8fd4\u3063\u3066\u304d\u307e\u305b\u3093\u3002\n\n\u65b9\u6cd51: \u4e00\u5ea6\u5168\u4ef6\u53d6\u5f97\u3057\u3066\u304b\u3089\u30d5\u30a3\u30eb\u30bf\u3059\u308b\nhoge-bucket \u306e\u4e0b\u306b\u3042\u308b key \u304c\u5c11\u306a\u3044\u3068\u304d\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3084\u308a\u65b9\u3067\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nsample3.py\nfrom boto3 import Session\ns3res = Session().resource('s3')\n\nbucket = s3res.Bucket('hoge-bucket')\nkeys = [obj.key for obj in bucket.objects.all() if obj.key.startswith(\"xx/yy/\")]\n\n\n\u305f\u3060\u3001\u3082\u3057 key \u304c\u4f55\u4e07\u3001\u4f55\u5341\u4e07\u3068\u3042\u308b\u3068\u3001\u7d50\u679c\u3092\u5f97\u308b\u305f\u3081\u306b\u304b\u306a\u308a\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u3067\u51fa\u6765\u308b\u90e8\u5206\u306f\u6975\u529b\u30e2\u30c7\u30eb\u306b\u4efb\u305b\u305f\u3044\u6240\u3067\u3059\u3002\n\n\u65b9\u6cd52: list_objects() \u3067 Marker \u3092\u4f7f\u3046\nlist_objects() \u306e\u8fd4\u308a\u5024\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u306e\u30cf\u30c3\u30b7\u30e5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n{\n    'IsTruncated': True|False,  # \u7d50\u679c\u304c\u5bf8\u65ad\u3055\u308c\u305f\u304b\u3002\u3055\u308c\u3066\u3044\u308c\u3070 True\n    'Marker': 'string',\n    'NextMarker': 'string',\n    'Contents': [\n        {\n            'Key': 'string',\n            'LastModified': datetime(2015, 1, 1),\n            'ETag': 'string',\n            'Size': 123,\n            'StorageClass': 'STANDARD'|'REDUCED_REDUNDANCY'|'GLACIER',\n            'Owner': {\n                'DisplayName': 'string',\n                'ID': 'string'\n            }\n        },\n    ],\n    'Name': 'string',\n    'Prefix': 'string',\n    'Delimiter': 'string',\n    'MaxKeys': 123,\n    'CommonPrefixes': [\n        {\n            'Prefix': 'string'\n        },\n    ],\n    'EncodingType': 'url'\n}\n\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f IsTruncated \u3067\u3059\u3002\u3082\u3057\u7d50\u679c\u304c 1000 \u4ef6\u4ee5\u4e0a\u3042\u308b\u306e\u306b\u30011000 \u4ef6\u3057\u304b\u8fd4\u305b\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3053\u306e IsTruncated \u304c True \u306b\u306a\u308a\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3001'Contents' \u914d\u5217\u306f\u3001\u5e38\u306b 'Key' \u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u3092\u57fa\u6e96\u306b\u6607\u9806\u3067\u4e26\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f list_objects() \u306b\u306f\u3001Marker \u3068\u3044\u3046\u5f15\u6570\u304c\u3042\u308a\u3001\u6307\u5b9a\u3057\u305f key \u3092 1 \u4ef6\u76ee\u3068\u3057\u3066\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u5f79\u8005\u306f\u63c3\u3044\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u306f list_objects() \u3092\u30e9\u30c3\u30d7\u3057\u3066\u4f5c\u3063\u305f\u3001\u4ef6\u6570\u3092\u554f\u308f\u305a\u6307\u5b9a\u3057\u305f\u5168\u3066\u306e key \u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\nsample4.py\nfrom boto3 import Session\ns3client = Session().client('s3')\n\ndef get_all_keys(bucket: str='', prefix: str='', keys: []=[], marker: str='') -> [str]:\n    \"\"\"\n    \u6307\u5b9a\u3057\u305f prefix \u306e\u3059\u3079\u3066\u306e key \u306e\u914d\u5217\u3092\u8fd4\u3059\n    \"\"\"\n    response = s3client.list_objects(Bucket=bucket, Prefix=prefix, Marker=marker)\n    if 'Contents' in response:  # \u8a72\u5f53\u3059\u308b key \u304c\u306a\u3044\u3068 response \u306b 'Contents' \u304c\u542b\u307e\u308c\u306a\u3044\n        keys.extend([content['Key'] for content in response['Contents']])\n        if 'IsTruncated' in response:\n            return get_all_keys(bucket=bucket, prefix=prefix, keys=keys, marker=keys[-1])\n    return keys\n\n\nif 'IsTruncated' in response: \u3067\u3001\u3082\u3057 IsTruncated \u3067\u3042\u308c\u3070\u3001keys \u306e\u30b1\u30c4 (keys[-1]) \u3092 marker \u306b\u3057\u3066\u81ea\u5206\u81ea\u8eab\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002response \u306b Contents \u304c\u306a\u304f\u306a\u3063\u305f\u3089\u3001\u3042\u308b\u3044\u306f IsTruncated \u3067\u306a\u304f\u306a\u308c\u3070\u4e00\u6c17\u306b\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3001\u4ef6\u6570\u3092\u6c17\u306b\u305b\u305a\u306b\u3001S3 \u4e0a\u306e key \u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f!\nBoto 3 \u3067\u3001S3 Buckets \u4e0a\u306b\u3042\u308b key \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\u3001`list_objects()` \u3092\u4f7f\u3044\u307e\u3059\u3002prefix \u3092\u6307\u5b9a\u3057\u3066\u3001\u6761\u4ef6\u3092\u7d5e\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002S3 \u3067 key \u3092\u53d6\u5f97\u3059\u308b\u3068\u304d\u306b\u306f\u3088\u304f\u4f7f\u308f\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u57fa\u672c\u7684\u306a\u4f7f\u3044\u304b\u305f\n\n\u305f\u3068\u3048\u3070\u3001\u30d0\u30b1\u30c3\u30c8\u540d: `hoge-bucket` \u306b\u3042\u308b\u3001\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9: `xx/yy` \u306e key \u3092\u5168\u3066\u53d6\u5f97\u3057\u305f\u3044\u6642\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```sample1.py\nfrom boto3 import Session\ns3client = Session().client('s3')\n\nresponse = s3client.list_objects(\n    Bucket='hoge-bucket',\n    Prefix='xx/yy/'\n)\n\nif 'Contents' in response:  # \u8a72\u5f53\u3059\u308b key \u304c\u306a\u3044\u3068 response \u306b 'Contents' \u304c\u542b\u307e\u308c\u306a\u3044\n    keys = [content['Key'] for content in response['Contents']]\n```\n\u3053\u308c\u3067\u3001Prefix \u3067\u6307\u5b9a\u3057\u305f\u6761\u4ef6\u306e key \u304c\u3042\u308c\u3070\u3001keys \u306b\u306f \n\n```\n>>> keys\n['xx/yy/a1', 'xx/yy/a2', 'xx/yy/a3', 'xx/yy/b1']\n```\n\u306e\u3088\u3046\u306b key \u6587\u5b57\u5217\u306e\u914d\u5217\u304c\u4ee3\u5165\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001Prefix \u306f`'xx/yy/a'` \u306e\u3088\u3046\u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8fd4\u308a\u307e\u3059\u3002\n\n```\n>>> keys\n['xx/yy/a1', 'xx/yy/a2', 'xx/yy/a3']\n```\n\n## \u6ce8\u610f\u70b9\n\n`list_objects()` \u306b\u306f (\u6b63\u78ba\u306b\u306f Amazon S3 API \u306b\u306f)\u3001\u4e00\u5ea6\u306b\u53d6\u5f97\u3067\u304d\u308b\u306e\u306f 1000 key \u307e\u3067\u3068\u3044\u3046\u5236\u9650\u304c\u3042\u308a\u307e\u3059\u3002\u5358\u7d14\u306b\u3001\u30d0\u30b1\u30c3\u30c8\u306e\u4e0b\u306b\u3042\u308b\u30011000 \u4ef6\u4ee5\u4e0a\u306e key \u3092\u5168\u3066\u53d6\u5f97\u3057\u305f\u3044\u306e\u3067\u3042\u308c\u3070\u3001\n\n```sample2.py\nfrom boto3 import Session\ns3res = Session().resource('s3')\n\nbucket = s3res.Bucket('hoge-bucket')\nkeys = [obj.key for obj in bucket.objects.all()]\n```\n\n\u3067\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n## Prefix \u6761\u4ef6\u3092\u3064\u3051\u3066 1000 \u4ef6\u4ee5\u4e0a\u306e key \u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\n\u305f\u3060\u3001\u3082\u3057 Prefix \u3092\u6307\u5b9a\u3057\u305f\u3044\u3068\u304d\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\uff1f \u4e0a\u8ff0\u3057\u305f sample1.py \u3067\u306f\u3001keys \u306b\u4ee3\u5165\u3055\u308c\u308b\u306e\u306f\u591a\u304f\u3066\u3082 1000 \u4ef6\u3067\u3059\u3002\u5f15\u6570\u306e MaxKeys \u306b `1000000` \u3092\u6307\u5b9a\u3057\u3088\u3046\u3068\u3082\u3001\u4ed5\u69d8\u306b\u3088\u308a 1000 \u4ef6\u4ee5\u4e0a\u306f\u8fd4\u3063\u3066\u304d\u307e\u305b\u3093\u3002\n\n### \u65b9\u6cd51: \u4e00\u5ea6\u5168\u4ef6\u53d6\u5f97\u3057\u3066\u304b\u3089\u30d5\u30a3\u30eb\u30bf\u3059\u308b\n\n`hoge-bucket` \u306e\u4e0b\u306b\u3042\u308b key \u304c\u5c11\u306a\u3044\u3068\u304d\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3084\u308a\u65b9\u3067\u3082\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```sample3.py\nfrom boto3 import Session\ns3res = Session().resource('s3')\n\nbucket = s3res.Bucket('hoge-bucket')\nkeys = [obj.key for obj in bucket.objects.all() if obj.key.startswith(\"xx/yy/\")]\n```\n\n\u305f\u3060\u3001\u3082\u3057 key \u304c\u4f55\u4e07\u3001\u4f55\u5341\u4e07\u3068\u3042\u308b\u3068\u3001\u7d50\u679c\u3092\u5f97\u308b\u305f\u3081\u306b\u304b\u306a\u308a\u306e\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\u30e2\u30c7\u30eb\u3067\u51fa\u6765\u308b\u90e8\u5206\u306f\u6975\u529b\u30e2\u30c7\u30eb\u306b\u4efb\u305b\u305f\u3044\u6240\u3067\u3059\u3002\n\n\n### \u65b9\u6cd52: `list_objects()` \u3067 `Marker` \u3092\u4f7f\u3046\n\n`list_objects()` \u306e\u8fd4\u308a\u5024\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u306e\u30cf\u30c3\u30b7\u30e5\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```py3\n{\n    'IsTruncated': True|False,  # \u7d50\u679c\u304c\u5bf8\u65ad\u3055\u308c\u305f\u304b\u3002\u3055\u308c\u3066\u3044\u308c\u3070 True\n    'Marker': 'string',\n    'NextMarker': 'string',\n    'Contents': [\n        {\n            'Key': 'string',\n            'LastModified': datetime(2015, 1, 1),\n            'ETag': 'string',\n            'Size': 123,\n            'StorageClass': 'STANDARD'|'REDUCED_REDUNDANCY'|'GLACIER',\n            'Owner': {\n                'DisplayName': 'string',\n                'ID': 'string'\n            }\n        },\n    ],\n    'Name': 'string',\n    'Prefix': 'string',\n    'Delimiter': 'string',\n    'MaxKeys': 123,\n    'CommonPrefixes': [\n        {\n            'Prefix': 'string'\n        },\n    ],\n    'EncodingType': 'url'\n}\n```\n\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f `IsTruncated` \u3067\u3059\u3002\u3082\u3057\u7d50\u679c\u304c 1000 \u4ef6\u4ee5\u4e0a\u3042\u308b\u306e\u306b\u30011000 \u4ef6\u3057\u304b\u8fd4\u305b\u306a\u304b\u3063\u305f\u5834\u5408\u3001\u3053\u306e `IsTruncated` \u304c `True` \u306b\u306a\u308a\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3001`'Contents'` \u914d\u5217\u306f\u3001\u5e38\u306b `'Key'` \u306e\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u9806\u3092\u57fa\u6e96\u306b\u6607\u9806\u3067\u4e26\u3079\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f `list_objects()` \u306b\u306f\u3001`Marker` \u3068\u3044\u3046\u5f15\u6570\u304c\u3042\u308a\u3001\u6307\u5b9a\u3057\u305f key \u3092 1 \u4ef6\u76ee\u3068\u3057\u3066\u3001\u7d50\u679c\u3092\u51fa\u529b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u3067\u5f79\u8005\u306f\u63c3\u3044\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u306f `list_objects()` \u3092\u30e9\u30c3\u30d7\u3057\u3066\u4f5c\u3063\u305f\u3001\u4ef6\u6570\u3092\u554f\u308f\u305a\u6307\u5b9a\u3057\u305f\u5168\u3066\u306e key \u3092\u53d6\u5f97\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n```sample4.py\nfrom boto3 import Session\ns3client = Session().client('s3')\n\ndef get_all_keys(bucket: str='', prefix: str='', keys: []=[], marker: str='') -> [str]:\n    \"\"\"\n    \u6307\u5b9a\u3057\u305f prefix \u306e\u3059\u3079\u3066\u306e key \u306e\u914d\u5217\u3092\u8fd4\u3059\n    \"\"\"\n    response = s3client.list_objects(Bucket=bucket, Prefix=prefix, Marker=marker)\n    if 'Contents' in response:  # \u8a72\u5f53\u3059\u308b key \u304c\u306a\u3044\u3068 response \u306b 'Contents' \u304c\u542b\u307e\u308c\u306a\u3044\n        keys.extend([content['Key'] for content in response['Contents']])\n        if 'IsTruncated' in response:\n            return get_all_keys(bucket=bucket, prefix=prefix, keys=keys, marker=keys[-1])\n    return keys\n```\n\n`if 'IsTruncated' in response:` \u3067\u3001\u3082\u3057 `IsTruncated` \u3067\u3042\u308c\u3070\u3001keys \u306e\u30b1\u30c4 (`keys[-1]`) \u3092 marker \u306b\u3057\u3066\u81ea\u5206\u81ea\u8eab\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002response \u306b Contents \u304c\u306a\u304f\u306a\u3063\u305f\u3089\u3001\u3042\u308b\u3044\u306f IsTruncated \u3067\u306a\u304f\u306a\u308c\u3070\u4e00\u6c17\u306b\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3001\u4ef6\u6570\u3092\u6c17\u306b\u305b\u305a\u306b\u3001S3 \u4e0a\u306e key \u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f!\n", "tags": ["Python", "boto3", "boto", "AWS", "AWS_SDK"]}