{"context": " More than 1 year has passed since last update.\u25cf\u4eee\u306bTestController\u3068\u3044\u3046Animator Controller\u3092\u4f5c\u6210\u3057\u3001Idle\u3068\u3044\u3046State\u3092\u4f5c\u6210\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u72b6\u614b\u306b\u3059\u308b\u3002\n\n\u25cf\u4eee\u306bTestAnime\u3068\u3044\u3046Animation\u3092\u4f5c\u6210\u3057\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u59cb\u70b9\u3068\u7d42\u70b9\u306b\u79fb\u52d5\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30ad\u30fc\u3092\u6253\u3064\n\n\n\u25cfTestController\u3092\u9078\u629e\u3057\u3001TestAnime\u3092[Animator View]\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n\u25cf[Animator View]\u4e0a\u3067Idle\u304b\u3089TestAnime\u306b\u5bfe\u3057\u3066\u6761\u4ef6\u306a\u3057\u306eTransition\u306e\u3092\u8a2d\u5b9a\n\n\u25cfTestController\u3092\u9078\u629e\u3057\u3001[Inspector]\u4e0a\u306b\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n\u25cfTestAnimationMethod.cs\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u3000\u203b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6700\u4e0b\u6bb5\u306b\u3042\u308a\n\u25cfTestAnimationMethod.cs\u3092\u9078\u629e\u3057\u3001[Inspector]\u4e0a\u306b\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n\n\u25cfTestAnime\u3092[Animation View]\u3067\u958b\u304d\u3001\u6642\u9593\u306e\u5c11\u3057\u4e0b\u3067\u30de\u30a6\u30b9\u306e\u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u3059\u3068\nAdd Animation Event\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\n\u25cf\u547c\u3073\u51fa\u3057\u5148(\u30c7\u30ea\u30b2\u30fc\u30c8\u5148)\u306e\u30e1\u30bd\u30c3\u30c9\u3092TestAnimationMethod.cs\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u9078\u629e\u3059\u308b\u3002\n\u3000\u203bpublic\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u9078\u629e\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\n\n\nTestAnimationMethod.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class TestAnimationMethod : MonoBehaviour {\n\n    private GameObject ParticleObject;\n\n    private Animator animator;\n    private int _plusVal = 0;\n    private float _blendTreeVal = 0.0f;\n\n    public void EndAnimationMethod()\n    {\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u53d6\u5f97\n        AnimatorStateInfo state = GetComponent<Animator>().GetCurrentAnimatorStateInfo(0);\n        // \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u53d6\u5f97\n        ParticleSystem particle = ParticleObject.GetComponent<ParticleSystem>();\n\n        Debug.Log(\"\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u307e\u3057\u305f\");\n\n        // Random \u30af\u30e9\u30b9\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n\n\n        // 0.0 \u4ee5\u4e0a 1.0 \u4ee5\u4e0b\u306e\u4e71\u6570\u3092\u53d6\u5f97\u3059\u308b\n        float redcolor = Random.Range(0.0f, 1.0f);\n        float greencolor = Random.Range(0.0f, 1.0f);\n        float bluecolor = Random.Range(0.0f, 1.0f);\n\n        particle.startColor = new Color(redcolor, greencolor, bluecolor);\n\n        // \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u30b9\u30bf\u30fc\u30c8\n        particle.Play();\n\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fIdle\u304b\uff1f\n        if(state.IsName(\"Idle\") == true)\n        {\n            Debug.Log(\"Idle\");\n        }\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fTestAnime\u304b\uff1f\n        else if (state.IsName(\"TestAnime\") == true)\n        {\n            Debug.Log(\"TestAnime\");\n        }\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fSetValue\u304b\uff1f\n        else if (state.IsName(\"SetValue\") == true)\n        {\n            Debug.Log(\"SetValue\");\n        }\n        else\n        {\n            Debug.Log(\"Not Exist\");\n        }\n\n\n        // tag1\u304b\uff1f\n        if (state.IsTag(\"tag1\") == true)\n        {\n            Debug.Log(\"tag1\");\n        }\n        // tag2\u304b\uff1f\n        else if (state.IsTag(\"tag2\") == true)\n        {\n            Debug.Log(\"tag2\");\n        }\n        // tag3\u304b\uff1f\n        else if (state.IsTag(\"tag3\") == true)\n        {\n            Debug.Log(\"tag3\");\n        }\n        else\n        {\n            Debug.Log(\"tag Not Exist\");\n        }\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        animator = GetComponent<Animator>();\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092True\u306b\u3059\u308b\u3002\n        //animator.enabled = true;\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        // \u4e0a\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\u3060\u3051\u30c6\u30b9\u30c8\u30a2\u30cb\u30e1\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n        if (Input.GetKey(KeyCode.UpArrow))\n        {\n            animator.SetBool(\"GoTestAnime\", true);\n            _plusVal++;\n            animator.SetInteger(\"SetText\", _plusVal);\n        }\n        // \u4e0b\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\u3060\u3051BlendTree\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n        else if (Input.GetKey(KeyCode.DownArrow))\n        {\n            _blendTreeVal = _blendTreeVal + 0.05f;\n            animator.SetFloat(\"BlendVal1\", _blendTreeVal);\n        }\n        // \u4e0a\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u306a\u3044\u9593\u306f\u52d5\u4f5c\u306a\u3057\n        else\n        {\n            if (_plusVal > 1000)\n            {\n                animator.SetBool(\"GoTestAnime\", false);\n                _plusVal = 0;\n            }\n        }\n    }\n}\n\n\n\u25cf\u4eee\u306b**TestController**\u3068\u3044\u3046**Animator Controller**\u3092\u4f5c\u6210\u3057\u3001Idle\u3068\u3044\u3046State\u3092\u4f5c\u6210\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u72b6\u614b\u306b\u3059\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-26 13.14.23.png](https://qiita-image-store.s3.amazonaws.com/0/17904/9b41c4e7-3d9b-a3f6-5011-dbb4e8f35335.png)\n\n\u25cf\u4eee\u306b**TestAnime**\u3068\u3044\u3046**Animation**\u3092\u4f5c\u6210\u3057\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u59cb\u70b9\u3068\u7d42\u70b9\u306b\u79fb\u52d5\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30ad\u30fc\u3092\u6253\u3064\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-26 13.15.30.png](https://qiita-image-store.s3.amazonaws.com/0/17904/8d5161f4-3878-e9ef-13b9-2778dc9e8659.png)\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-26 13.15.34.png](https://qiita-image-store.s3.amazonaws.com/0/17904/39a86a1a-906f-8171-f5c1-97e8dedae561.png)\n\n\u25cf**TestController**\u3092\u9078\u629e\u3057\u3001**TestAnime**\u3092**[Animator View]**\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n\u25cf**[Animator View]**\u4e0a\u3067**Idle**\u304b\u3089**TestAnime**\u306b\u5bfe\u3057\u3066\u6761\u4ef6\u306a\u3057\u306eTransition\u306e\u3092\u8a2d\u5b9a\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-26 13.28.23.png](https://qiita-image-store.s3.amazonaws.com/0/17904/0c13e0bc-389c-48b2-230b-7bf9506ae9d3.png)\n\n\u25cf**TestController**\u3092\u9078\u629e\u3057\u3001**[Inspector]**\u4e0a\u306b\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n\u25cf**TestAnimationMethod.cs**\u3068\u3044\u3046\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3059\u308b\u3002\n\u3000*\u203b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6700\u4e0b\u6bb5\u306b\u3042\u308a*\n\u25cf**TestAnimationMethod.cs**\u3092\u9078\u629e\u3057\u3001**[Inspector]**\u4e0a\u306b\u306b\u30c9\u30e9\u30c3\u30b0\u30a2\u30f3\u30c9\u30c9\u30ed\u30c3\u30d7\u3059\u308b\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-03-26 13.35.48.png](https://qiita-image-store.s3.amazonaws.com/0/17904/93f4c466-8657-8265-7b44-5a122d02f4fa.png)\n\n\u25cf**TestAnime**\u3092**[Animation View]**\u3067\u958b\u304d\u3001\u6642\u9593\u306e\u5c11\u3057\u4e0b\u3067\u30de\u30a6\u30b9\u306e\u53f3\u30af\u30ea\u30c3\u30af\u3092\u62bc\u3059\u3068\n **Add Animation Event**\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u30af\u30ea\u30c3\u30af\u3059\u308b\u3002\n\n![Animation1.png](https://qiita-image-store.s3.amazonaws.com/0/17904/490ce045-b3ed-c143-e9ca-ff4a9b62a856.png)\n\n\u25cf\u547c\u3073\u51fa\u3057\u5148(\u30c7\u30ea\u30b2\u30fc\u30c8\u5148)\u306e\u30e1\u30bd\u30c3\u30c9\u3092**TestAnimationMethod.cs**\u306e\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u9078\u629e\u3059\u308b\u3002\n\u3000**\u203bpublic\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u9078\u629e\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f**\n![Animation2.png](https://qiita-image-store.s3.amazonaws.com/0/17904/cc75a165-22c4-a149-fdbc-c3d0407a0938.png)\n\n\n```C#:TestAnimationMethod.cs\nusing UnityEngine;\nusing System.Collections;\n\npublic class TestAnimationMethod : MonoBehaviour {\n\n    private GameObject ParticleObject;\n\n    private Animator animator;\n    private int _plusVal = 0;\n    private float _blendTreeVal = 0.0f;\n\n    public void EndAnimationMethod()\n    {\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u72b6\u614b\u3092\u53d6\u5f97\n        AnimatorStateInfo state = GetComponent<Animator>().GetCurrentAnimatorStateInfo(0);\n        // \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u53d6\u5f97\n        ParticleSystem particle = ParticleObject.GetComponent<ParticleSystem>();\n\n        Debug.Log(\"\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u307e\u3057\u305f\");\n\n        // Random \u30af\u30e9\u30b9\u306e\u65b0\u3057\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\n        \n\n        // 0.0 \u4ee5\u4e0a 1.0 \u4ee5\u4e0b\u306e\u4e71\u6570\u3092\u53d6\u5f97\u3059\u308b\n        float redcolor = Random.Range(0.0f, 1.0f);\n        float greencolor = Random.Range(0.0f, 1.0f);\n        float bluecolor = Random.Range(0.0f, 1.0f);\n\n        particle.startColor = new Color(redcolor, greencolor, bluecolor);\n\n        // \u30d1\u30fc\u30c6\u30a3\u30af\u30eb\u3092\u30b9\u30bf\u30fc\u30c8\n        particle.Play();\n\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fIdle\u304b\uff1f\n        if(state.IsName(\"Idle\") == true)\n        {\n            Debug.Log(\"Idle\");\n        }\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fTestAnime\u304b\uff1f\n        else if (state.IsName(\"TestAnime\") == true)\n        {\n            Debug.Log(\"TestAnime\");\n        }\n        // \u30b9\u30c6\u30fc\u30bf\u30b9\u72b6\u614b\u306fSetValue\u304b\uff1f\n        else if (state.IsName(\"SetValue\") == true)\n        {\n            Debug.Log(\"SetValue\");\n        }\n        else\n        {\n            Debug.Log(\"Not Exist\");\n        }\n\n\n        // tag1\u304b\uff1f\n        if (state.IsTag(\"tag1\") == true)\n        {\n            Debug.Log(\"tag1\");\n        }\n        // tag2\u304b\uff1f\n        else if (state.IsTag(\"tag2\") == true)\n        {\n            Debug.Log(\"tag2\");\n        }\n        // tag3\u304b\uff1f\n        else if (state.IsTag(\"tag3\") == true)\n        {\n            Debug.Log(\"tag3\");\n        }\n        else\n        {\n            Debug.Log(\"tag Not Exist\");\n        }\n    }\n\n    // Use this for initialization\n    void Start()\n    {\n        animator = GetComponent<Animator>();\n        // \u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092True\u306b\u3059\u308b\u3002\n        //animator.enabled = true;\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        // \u4e0a\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\u3060\u3051\u30c6\u30b9\u30c8\u30a2\u30cb\u30e1\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n        if (Input.GetKey(KeyCode.UpArrow))\n        {\n            animator.SetBool(\"GoTestAnime\", true);\n            _plusVal++;\n            animator.SetInteger(\"SetText\", _plusVal);\n        }\n        // \u4e0b\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u308b\u9593\u3060\u3051BlendTree\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n        else if (Input.GetKey(KeyCode.DownArrow))\n        {\n            _blendTreeVal = _blendTreeVal + 0.05f;\n            animator.SetFloat(\"BlendVal1\", _blendTreeVal);\n        }\n        // \u4e0a\u77e2\u5370\u304c\u62bc\u3055\u308c\u3066\u3044\u306a\u3044\u9593\u306f\u52d5\u4f5c\u306a\u3057\n        else\n        {\n            if (_plusVal > 1000)\n            {\n                animator.SetBool(\"GoTestAnime\", false);\n                _plusVal = 0;\n            }\n        }\n    }\n}\n```\n", "tags": ["Unity3D"]}