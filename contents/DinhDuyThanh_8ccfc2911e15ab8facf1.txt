{"context": "[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Actions\n[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Reducers\n[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Stores\n\n\n1.\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b9\u30c8\u30a2\u30fc\u306b\u63a5\u7d9a\u3059\u308b\n\u3092\u4f7f\u3063\u3066\u3001\u30de\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08<App />\uff09\u3092\u30b9\u30c8\u30a2\u30fc\u306b\u63a5\u7d9a\u3059\u308b\nimport createApiClientStore from '../../stores/TagOGPStore';\n\nconst store = createApiClientStore();\n\nexport default class Root extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div>\n          <App />\n        </div>\n      </Provider>\n    );\n  }\n}\n\n\n2.\u30c7\u30fc\u30bf\u306e\u4fee\u7406\n<App />\u30d5\u30a1\u30a4\u30eb\nimport {setData, editTitle, editDescription, editImageId} from '../../actions/TagOGPActions'\n\nimport TagOGP from './TagOGP'\n\nclass App extends Component {\n\n\n  render() {\n    const {\n      tagOGP,\n      dispatch\n    } = this.props;\n\n    const actions = bindActionCreators({\n      setData,\n      editTitle,\n      editDescription,\n      editImageId\n    }, dispatch)\n\n    return (\n      <div>\n        <TagOGP tagOGP={tagOGP} actions={actions} dispatch={dispatch}/>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(\n  state => ({\n    tagOGP: state.tagOGP\n  })\n)(App);\n\n\u8a73\u7d30\uff1a\nexport default connect(\n  state => ({\n    tagOGP: state.tagOGP\n  })\n)(App)\n\n\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3059\u308b\u3068\u304d\u3001tagOGP\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u3001<App />\u306f\u518d\u5ea6\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\u3000\u3000const {\n          tagOGP,\n          dispatch\n        } = this.props;\n\n    const actions = bindActionCreators({\n      setData,\n      editTitle,\n      editDescription,\n      editImageId\n    }, dispatch)\n\n\u30c7\u30fc\u30bf\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6e96\u5099\u3057\u3066\u3001props\u3068\u3057\u3066\u5b50\u4f9b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u9001\u308b\u3002\n\n3.\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4fee\u7406\nclass TagOGP extends Component {\n  constructor(props) {\n    super(props)\n    this.handleInput = this.handleInput.bind(this)\n    this.fetchData = this.fetchData.bind(this)\n    this.updateData = this.updateData.bind(this)\n    this.handleDrop = this.handleDrop.bind(this)\n  }\n\n  componentWillMount() {\n    this.props.dispatch(this.fetchData);\n   }\n\n  fetchData(){\n    var that = this\n    var tag_ogp_root = document.getElementById('tag_ogp_edit');\n    if(tag_ogp_root) {\n      var _site_name = tag_ogp_root.getAttribute(\"site-name\");\n      var _tag_id = tag_ogp_root.getAttribute(\"tag-id\");\n      ArticleAPI.get_tag(_tag_id, _site_name, function(data) {\n        that.props.actions.setData(data.ogp.title, data.ogp.description, data.ogp.image_id.$oid)\n      });\n    }\n  }\n\n  updateData() {\n    ArticleAPI.update_tag(this.props.tagOGP, function(err, data){\n    });\n  }\n\n  handleInput(field) {\n    switch(field) {\n      case \"title\":\n        this.props.actions.editTitle(this.refs.tag_ogp_title.value)\n        break\n      case \"description\":\n        this.props.actions.editDescription(this.refs.tag_ogp_description.value)\n        break\n    }\n  }\n\n  handleDrop(image_id) {\n    var that = this;\n    ImageAPI.getUploadedImageOfSite(-1, function(data){\n      data = data && data.image_datas && data.image_datas.map(function(image){\n        image.attachment_id = image.id;\n        delete image.id;\n        return image;\n      });\n      ImageHelper.setImageOfPage(data);\n      that.props.actions.editImageId(image_id)\n    });\n  }\n\n  render() {\n    const {actions, tagOGP} = this.props\n    var image_id = tagOGP.ogp ? tagOGP.ogp.image_id : \"\";\n    var a = ImageHelper.getImageData(image_id)\n\n    return (\n      <div className='tag-ogp-setting'>\n        <div className=\"ogp-image\" style={{width: '65%'}}>\n          <div className=\"drop-ogp-image-area\">\n            <div className=\"setting-contpage\">\n              <DropImageArea onDrop={this.handleDrop} showButton={true}\n                image_data={ImageHelper.getImageData(image_id)}\n                max_dropable_image={1} type=\"ogp_image\" />\n            </div>\n          </div>\n          <div className=\"button-ogp-image\" style={{display: 'none', margin: '5px', marginLeft: '30%'}}>\n            <Button bsStyle=\"info\" style={{margin: '10px'}} onClick={this.showPageImage}>\u30e1\u30c7\u30a3\u30a2\u3092\u53c2\u7167</Button>\n          </div>\n        </div>\n    )\n  }\n}\n\nexport default DragDropContext(HTML5Backend)(TagOGP)\n\n\u8a73\u7d30\uff1a\nfetchData(){\n    var that = this\n    var tag_ogp_root = document.getElementById('tag_ogp_edit');\n    if(tag_ogp_root) {\n      var _site_name = tag_ogp_root.getAttribute(\"site-name\");\n      var _tag_id = tag_ogp_root.getAttribute(\"tag-id\");\n      ArticleAPI.get_tag(_tag_id, _site_name, function(data) {\n        that.props.actions.setData(data.ogp.title, data.ogp.description, data.ogp.image_id.$oid)\n      });\n    }\n  }\n\n\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002\nupdateData() {\n  ArticleAPI.update_tag(this.props.tagOGP, function(err, data){\n });\n\n\u3000}\n\u30c7\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002\n[[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Actions\n](http://qiita.com/DinhDuyThanh/items/b98128accd6d05de7bc8)[[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Reducers\n](http://qiita.com/DinhDuyThanh/items/79a7a973267e32cd8b93)[[Reflux\u3092Redux\u306b\u30ea\u30d7\u30ec\u30fc\u30b9\u3059\u308b] Stores\n](http://qiita.com/DinhDuyThanh/items/466b1ea78fc68966dc5d)\n#1.\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30b9\u30c8\u30a2\u30fc\u306b\u63a5\u7d9a\u3059\u308b\n <Provider />\u3092\u4f7f\u3063\u3066\u3001\u30de\u30a4\u30f3\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\uff08```<App />```\uff09\u3092\u30b9\u30c8\u30a2\u30fc\u306b\u63a5\u7d9a\u3059\u308b\n\n    import createApiClientStore from '../../stores/TagOGPStore';\n    \n    const store = createApiClientStore();\n    \n    export default class Root extends Component {\n      render() {\n        return (\n          <Provider store={store}>\n            <div>\n              <App />\n            </div>\n          </Provider>\n        );\n      }\n    }\n#2.\u30c7\u30fc\u30bf\u306e\u4fee\u7406\n```<App />```\u30d5\u30a1\u30a4\u30eb\n\n\n    import {setData, editTitle, editDescription, editImageId} from '../../actions/TagOGPActions'\n    \n    import TagOGP from './TagOGP'\n    \n    class App extends Component {\n    \n    \n      render() {\n        const {\n          tagOGP,\n          dispatch\n        } = this.props;\n    \n        const actions = bindActionCreators({\n          setData,\n          editTitle,\n          editDescription,\n          editImageId\n        }, dispatch)\n    \n        return (\n          <div>\n            <TagOGP tagOGP={tagOGP} actions={actions} dispatch={dispatch}/>\n          </div>\n        );\n      }\n    \n    }\n    \n    export default connect(\n      state => ({\n        tagOGP: state.tagOGP\n      })\n    )(App);\n\n**\u8a73\u7d30\uff1a**\n\n    export default connect(\n      state => ({\n        tagOGP: state.tagOGP\n      })\n    )(App)\n\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3059\u308b\u3068\u304d\u3001tagOGP\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u3066\u3001```<App />```\u306f\u518d\u5ea6\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\n    \u3000\u3000const {\n              tagOGP,\n              dispatch\n            } = this.props;\n        \n        const actions = bindActionCreators({\n          setData,\n          editTitle,\n          editDescription,\n          editImageId\n        }, dispatch)\n\u30c7\u30fc\u30bf\u3068\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u6e96\u5099\u3057\u3066\u3001props\u3068\u3057\u3066\u5b50\u4f9b\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u9001\u308b\u3002\n#3.\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u4fee\u7406\n\n    class TagOGP extends Component {\n      constructor(props) {\n        super(props)\n        this.handleInput = this.handleInput.bind(this)\n        this.fetchData = this.fetchData.bind(this)\n        this.updateData = this.updateData.bind(this)\n        this.handleDrop = this.handleDrop.bind(this)\n      }\n    \n      componentWillMount() {\n        this.props.dispatch(this.fetchData);\n       }\n    \n      fetchData(){\n        var that = this\n        var tag_ogp_root = document.getElementById('tag_ogp_edit');\n        if(tag_ogp_root) {\n          var _site_name = tag_ogp_root.getAttribute(\"site-name\");\n          var _tag_id = tag_ogp_root.getAttribute(\"tag-id\");\n          ArticleAPI.get_tag(_tag_id, _site_name, function(data) {\n            that.props.actions.setData(data.ogp.title, data.ogp.description, data.ogp.image_id.$oid)\n          });\n        }\n      }\n    \n      updateData() {\n        ArticleAPI.update_tag(this.props.tagOGP, function(err, data){\n        });\n      }\n    \n      handleInput(field) {\n        switch(field) {\n          case \"title\":\n            this.props.actions.editTitle(this.refs.tag_ogp_title.value)\n            break\n          case \"description\":\n            this.props.actions.editDescription(this.refs.tag_ogp_description.value)\n            break\n        }\n      }\n    \n      handleDrop(image_id) {\n        var that = this;\n        ImageAPI.getUploadedImageOfSite(-1, function(data){\n          data = data && data.image_datas && data.image_datas.map(function(image){\n            image.attachment_id = image.id;\n            delete image.id;\n            return image;\n          });\n          ImageHelper.setImageOfPage(data);\n          that.props.actions.editImageId(image_id)\n        });\n      }\n    \n      render() {\n        const {actions, tagOGP} = this.props\n        var image_id = tagOGP.ogp ? tagOGP.ogp.image_id : \"\";\n        var a = ImageHelper.getImageData(image_id)\n    \n        return (\n          <div className='tag-ogp-setting'>\n            <div className=\"ogp-image\" style={{width: '65%'}}>\n              <div className=\"drop-ogp-image-area\">\n                <div className=\"setting-contpage\">\n                  <DropImageArea onDrop={this.handleDrop} showButton={true}\n                    image_data={ImageHelper.getImageData(image_id)}\n                    max_dropable_image={1} type=\"ogp_image\" />\n                </div>\n              </div>\n              <div className=\"button-ogp-image\" style={{display: 'none', margin: '5px', marginLeft: '30%'}}>\n                <Button bsStyle=\"info\" style={{margin: '10px'}} onClick={this.showPageImage}>\u30e1\u30c7\u30a3\u30a2\u3092\u53c2\u7167</Button>\n              </div>\n            </div>\n        )\n      }\n    }\n    \n    export default DragDropContext(HTML5Backend)(TagOGP)\n\n**\u8a73\u7d30\uff1a**\n\n    fetchData(){\n        var that = this\n        var tag_ogp_root = document.getElementById('tag_ogp_edit');\n        if(tag_ogp_root) {\n          var _site_name = tag_ogp_root.getAttribute(\"site-name\");\n          var _tag_id = tag_ogp_root.getAttribute(\"tag-id\");\n          ArticleAPI.get_tag(_tag_id, _site_name, function(data) {\n            that.props.actions.setData(data.ogp.title, data.ogp.description, data.ogp.image_id.$oid)\n          });\n        }\n      }\n\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n    updateData() {\n      ArticleAPI.update_tag(this.props.tagOGP, function(err, data){\n     });\n   \u3000}\n\u30c7\u30fc\u30bf\u3092\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002\n          \n", "tags": ["redux"]}