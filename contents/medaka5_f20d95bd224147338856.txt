{"context": " More than 1 year has passed since last update.socket\u306e\u52c9\u5f37\u306e\u305f\u3081\u3001mac\u3067socket\u3067listen\u3057\u3066\u3001lsof\u3067\u78ba\u8a8d\u3057\u3088\u3046\u3068\u3057\u3066\u306f\u307e\u3063\u305f\u3002\nport:12345\u3092listen\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u306b\u3001lsof -n -i:12345\u3057\u3066\u3082\u4f55\u3082\u51fa\u3066\u3053\u306a\u3044\u3002\u6570\u6642\u9593\u306f\u307e\u3063\u305f\u304c\u3001\nsudo lsof -n -i:12345 -P\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\nsudo\u5fc5\u8981\u3067\u3057\u305f\u3002\n\u306a\u304a\u3001netstat\u3067\u306fnetstat -an\u3067\u3001sudo\u306a\u3057\u3067\u3082\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\u4ee5\u4e0b\u306f\u3001\u78ba\u8a8d\u306b\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u306bsudo\u3057\u3066\u3044\u308b\u306e\u3060\u304b\u3089\u3001lsof\u3082sudo\u5fc5\u8981\u306a\u306e\u306f\u3082\u3063\u3068\u65e9\u304f\u6c17\u304c\u3064\u304f\u3079\u304d\u3067\u3042\u3063\u305f\u3002\n\nlisten_test.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <unistd.h>\n\nint main(int argc, char **argv)\n{\n    int listenfd;\n    struct sockaddr_in servaddr;\n\n    listenfd = socket(AF_INET, SOCK_STREAM, 0);\n    if(listenfd < 0) {\n        perror(\"socket() err\");\n        exit(EXIT_FAILURE);\n    }\n\n    bzero(&servaddr, sizeof(servaddr));\n    servaddr.sin_family = AF_INET;\n    servaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n    servaddr.sin_port = htons(12345);\n    servaddr.sin_len = sizeof(servaddr);\n\n    if(bind(listenfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) < 0) {\n        perror(\"bind() err\");\n        exit(EXIT_FAILURE);\n    }\n\n    if(listen(listenfd, SOMAXCONN) < 0) {\n        perror(\"listen() err\");\n        exit(EXIT_FAILURE);\n    }\n    while(1);\n}\n\n\nsocket\u306e\u52c9\u5f37\u306e\u305f\u3081\u3001mac\u3067socket\u3067listen\u3057\u3066\u3001lsof\u3067\u78ba\u8a8d\u3057\u3088\u3046\u3068\u3057\u3066\u306f\u307e\u3063\u305f\u3002\nport:12345\u3092listen\u3057\u3066\u3044\u308b\u306f\u305a\u306a\u306e\u306b\u3001`lsof -n -i:12345`\u3057\u3066\u3082\u4f55\u3082\u51fa\u3066\u3053\u306a\u3044\u3002\u6570\u6642\u9593\u306f\u307e\u3063\u305f\u304c\u3001\n`sudo lsof -n -i:12345 -P`\u3067\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n`sudo`\u5fc5\u8981\u3067\u3057\u305f\u3002\n\u306a\u304a\u3001`netstat`\u3067\u306f`netstat -an`\u3067\u3001sudo\u306a\u3057\u3067\u3082\u5927\u4e08\u592b\u3067\u3057\u305f\u3002\n\n\n\n\u4ee5\u4e0b\u306f\u3001\u78ba\u8a8d\u306b\u4f7f\u3063\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3002\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u6642\u306b`sudo`\u3057\u3066\u3044\u308b\u306e\u3060\u304b\u3089\u3001`lsof`\u3082`sudo`\u5fc5\u8981\u306a\u306e\u306f\u3082\u3063\u3068\u65e9\u304f\u6c17\u304c\u3064\u304f\u3079\u304d\u3067\u3042\u3063\u305f\u3002\n\n```listen_test.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <sys/socket.h>\n#include <netinet/in.h>\n#include <unistd.h>\n\nint main(int argc, char **argv)\n{\n\tint listenfd;\n\tstruct sockaddr_in servaddr;\n\n\tlistenfd = socket(AF_INET, SOCK_STREAM, 0);\n\tif(listenfd < 0) {\n\t\tperror(\"socket() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tbzero(&servaddr, sizeof(servaddr));\n\tservaddr.sin_family = AF_INET;\n\tservaddr.sin_addr.s_addr = htonl(INADDR_ANY);\n\tservaddr.sin_port = htons(12345);\n\tservaddr.sin_len = sizeof(servaddr);\n\n\tif(bind(listenfd, (struct sockaddr*)&servaddr, sizeof(servaddr)) < 0) {\n\t\tperror(\"bind() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\n\tif(listen(listenfd, SOMAXCONN) < 0) {\n\t\tperror(\"listen() err\");\n\t\texit(EXIT_FAILURE);\n\t}\n\twhile(1);\n}\n```\n", "tags": ["socket", "C\u8a00\u8a9e"]}