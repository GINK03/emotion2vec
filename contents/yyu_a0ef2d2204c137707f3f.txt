{"context": " More than 1 year has passed since last update.\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\u3068\u3044\u3046\u672c\u306e\u4e2d\u306b\u3001\u6b63\u898f\u8868\u73fe\u306eJIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u3044\u3046\u6280\u8853\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3002VM\u578b\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u306f\u4ee5\u524d\u4f5c\u3063\u305f1\u306e\u3067\u3001\u3053\u308c\u3092LLVM\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308c\u3070\u304a\u3082\u3057\u308d\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3001\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u306a\u304a\u3001\u5b9f\u88c5\u306b\u306fScala\u3092\u7528\u3044\u305f\u3002\n\n\u8ffd\u8a18\uff1a\n\u307e\u305f\u3001JVM\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078JIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5b9f\u9a13\u3082\u66f8\u304d\u307e\u3057\u305f\u3002\n\u6b63\u898f\u8868\u73fe\u306eJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5b9f\u88c5\u3059\u308b\n\n\n\u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\nVM\u306e\u5b9f\u88c5\u306e\u6642\u306b\u7528\u3044\u305f\u3082\u306e\u3068\u540c\u3058\u304f\u3001\u6b21\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u7528\u3044\u308b\u3002\nsealed trait Regex\ncase object Empty                  extends Regex\ncase class Let(c: Char)            extends Regex\ncase class Con(a: Regex, b: Regex) extends Regex\ncase class Alt(a: Regex, b: Regex) extends Regex\ncase class Star(a: Regex)          extends Regex\n\n\u4f8b\u3048\u3070\u6b63\u898f\u8868\u73fesa*(ba*ba*)*a*e\u3092\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u578b\uff08\u62bd\u8c61\u69cb\u6587\u6728\uff09\u3067\u8868\u3059\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nCon(Con(Let('s'), Con(Con(Star(Let('a')), Star(Con(Con(Let('b'), Star(Let('a'))), Con(Let('b'), Star(Let('a')))))), Star(Let('a')))), Let('e'))\n\n\u6b63\u898f\u8868\u73fe\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u306e\u5909\u63db\u306f\u3001\u4eca\u56de\u3082\u4eba\u9593\u304c\u624b\u52d52\u3067\u884c\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\nLLVM\u6a5f\u68b0\u8a9e\u306e\u8868\u73fe\nLLVM\u306e\u6a5f\u68b0\u8a9e\u306e\u4e2d\u304b\u3089\u4eca\u56de\u4f7f\u3046\u3082\u306e\u3092\u9078\u3073\u3001\u305d\u308c\u3092\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\u4eca\u56de\u6271\u3046LLVM\u306e\u547d\u4ee4\u306f\u6728\u69cb\u9020\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u6b63\u898f\u8868\u73fe\uff08\u306e\u62bd\u8c61\u69cb\u6587\u6728\uff09\u304b\u3089\u76f4\u63a5\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3092\u751f\u6210\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u304c\u3001\u30c7\u30d0\u30c3\u30b0\u304c\u5927\u5909\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u305f\u306e\u3067\u4e00\u65e6LLVM\u306e\u6a5f\u68b0\u8a9e\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u3078\u3068\u5909\u63db\u3057\u3066\u304b\u3089\u3001\u305d\u308c\u3092\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u3053\u306e\u6a5f\u68b0\u8a9e\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u306e\u3053\u3068\u3092\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f \u6a5f\u68b0\u8a9e\u8868\u73fe \u3068\u547c\u3076\u3002\n\n\u30ec\u30b8\u30b9\u30bf\u3068\u5024\n\u307e\u305a\u3001\u30ec\u30b8\u30b9\u30bf\u3068\u5024\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u578b\u3092\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\nsealed trait Value\ncase class RInt(n: Int)            extends Value\ncase class RStr(s: String)         extends Value\ncase class VInt(n: Int)            extends Value\ncase class BA(f: String, l: Value) extends Value\n\n\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306a\u610f\u5473\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\nRInt(n)\nnnn\u756a\u76ee\u306e\u30ec\u30b8\u30b9\u30bf\uff08%10\u306a\u3069\uff09\n\nRStr(s)\n\u540d\u524d\u304c s \u306e\u30ec\u30b8\u30b9\u30bf\uff08%hoge\u306a\u3069\uff09\n\nVInt(n)\n\u6574\u6570\u5024nnn\nBA(f, l)\n\u30e9\u30d9\u30eb\u3092\u8868\u308f\u3059\u5024\n\n\n\u578b\n\u7d9a\u3044\u3066\u3001LLVM\u3067\u4eca\u56de\u6271\u3046\u578b\u3092\u30c7\u30fc\u30bf\u578b\u3067\u8868\u73fe\u3059\u308b\u3002\nsealed trait Type\ncase object I1   extends Type\ncase object I8   extends Type\ncase object I8P  extends Type\ncase object I64  extends Type\ncase object I64P extends Type\n\n\u305d\u308c\u305e\u308c\u6570\u5b57\u304c\u6574\u6570\u5024\u306e\u30d3\u30c3\u30c8\u9577\u3067\u3042\u308b\u3002P\u304c\u4ed8\u304f\u3082\u306e\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u3002\n\n\u6761\u4ef6\n\u6bd4\u8f03\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981\u306a\u6761\u4ef6\u3092\u8868\u3059\u30c7\u30fc\u30bf\u578b\u3067\u3042\u308b\u3002\nsealed trait Cond\ncase object Eq extends Cond\n\n\u5b9f\u88c5\u3057\u3066\u307f\u3066\u5206\u304b\u3063\u305f\u304c\u3001\u4eca\u56de\u306fEq\u3057\u304b\u4f7f\u308f\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u306e\u30c7\u30fc\u30bf\u578b\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u306f\u306a\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u547d\u4ee4\nLLVM\u306e\u547d\u4ee4\u306e\u4e2d\u3067\u3001\u4eca\u56de\u7528\u3044\u308b\u3082\u306e\u3092\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\nsealed trait Inst\ncase class Label(n: Value)                                    extends Inst\ncase class Assign(l: Value, r: Inst)                          extends Inst\ncase class Add(t: Type, v: Value, n: Int)                     extends Inst\ncase class Cmp(c: Cond, t: Type, a: Value, b: Value)          extends Inst\ncase class Br1(d: Value)                                      extends Inst\ncase class Br2(c: Value, t: Value, e: Value)                  extends Inst\ncase class Call(f: String, rt: Type, at: List[(Type, Value)]) extends Inst\ncase class Load(t: Type, p: Value)                            extends Inst\ncase class Store(vt: Type, v: Value, pt: Type, pv: Value)     extends Inst\ncase class GetElementPtr(t: Type, v: Value, i: Value)         extends Inst\n\n\u307e\u305a\u3001Br1\u3068Br2\u306f\u4e21\u65b9\u3068\u3082\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3092\u8868\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u3001Br1\u306f\u6307\u5b9a\u3055\u308c\u305f\u30e9\u30d9\u30eb\u306f\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001Br2\u306f\u307e\u305a\u4e8c\u5024\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u53d7\u3051\u3068\u308a\u3001\u305d\u306e\u7d50\u679c\u306b\u5fdc\u3058\u3066\u305d\u308c\u305e\u308c\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3042\u308b\u3002\n\u307e\u305f\u3001GetElementPtr\u306f\u914d\u5217\u306a\u3069\u304b\u3089\u30a4\u30f3\u30c7\u30c3\u30af\u30b9iii\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u547d\u4ee4\u3067\u3042\u308b\u3002\n\u305d\u306e\u4ed6\u306e\u547d\u4ee4\u306b\u3064\u3044\u3066\u306f\u3001\u305f\u3076\u3093\u306a\u3093\u3068\u306a\u304f\u5206\u304b\u308b\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3059\u308b\u3002\n\n\u6b63\u898f\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u306e\u5909\u63db\n\n\u5b9f\u88c5\u65b9\u91dd\u306e\u6982\u8981\n\u524d\u56de\u306e\u8a18\u4e8b\u3084Regular Expression Matching: the Virtual Machine Approach\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bVM\u306f\u4e8c\u3064\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\n\nPC\n\u6b21\u306b\u5b9f\u884c\u3059\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e\nSP\n\u30de\u30c3\u30c1\u3092\u884c\u3046\u6587\u5b57\u306e\u4f4d\u7f6e\n\n\u3053\u306eVM\u306f\u6b21\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u3002\n\n\nPC \u306e\u4f4d\u7f6e\u306b\u3042\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u51fa\u3059\uff08\u30d5\u30a7\u30c3\u30c1\uff09\n\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u547d\u4ee4char\u3001split\u3001jmp\u3001match\u306e\u3069\u308c\u304b\u3078\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\n\u547d\u4ee4\u306b\u5bfe\u5fdc\u3059\u308b\u51e6\u7406\u3092\u5b9f\u884c\n\nPC \u3092\u66f4\u65b0\n\n\u6a5f\u68b0\u8a9e\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u6a5f\u68b0\u8a9e\u306b\u306a\u308a\u3001\u305d\u308c\u3092CPU\u304b\u4f55\u304b\u304c\u5b9f\u884c\u3059\u308b\u5f62\u306b\u306a\u308b\u306e\u3067\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u306a\u308b\u3002\u3088\u3063\u3066 PC \u306f\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3067\u306fsplit\u3084jmp\u306e\u3088\u3046\u306b\u3001\u3069\u3053\u304b\u7279\u5b9a\u306e\u5834\u6240\u304b\u3089\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\u304f\u306a\u3063\u305f\u5834\u5408\u3001 PC \u306a\u3057\u3067\u3069\u3046\u3059\u308b\u306e\u304b\u7591\u554f\u306b\u601d\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u30de\u30c3\u30c1\u3092\u884c\u3046LLVM\u4e0a\u306e\u95a2\u6570\u306b\u30e9\u30d9\u30eb\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u597d\u304d\u306a\u5834\u6240\u304b\u3089\u547d\u4ee4\u3092\u958b\u59cb\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nLLVM\u4e0a\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u95a2\u6570\u3092@test\u3068\u3059\u308b\u3068\u3001\u305d\u308c\u306f\u6b21\u306e\u3088\u3046\u306a\u578b\u3092\u6301\u3064\u3002\ndefine i1 @test(i8* %str, i8* %l, i64 %sp_value)\n\n\u7b2c\u4e00\u5f15\u6570\u304c\u6587\u5b57\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u30e9\u30d9\u30eb\u306e\u30dd\u30a4\u30f3\u30bf\u3001\u305d\u3057\u3066\u7b2c\u4e09\u5f15\u6570\u304c SP \u3068\u306a\u308b\u3002\n\n\u88dc\u52a9\u95a2\u6570\n\u6b21\u306e\u3088\u3046\u306a\u88dc\u52a9\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\ndef nsp    = RStr(\"sp\")\ndef nstr   = RStr(\"str\")\ndef nmatch = RStr(\"match\")\ndef nmiss  = RStr(\"miss\")\n\ndef fname = \"@test\"\n\ndef assign(r: Inst, n: Int): (Inst, Int) = (Assign(RInt(n), r), n + 1)\ndef mk_label(n: Int): (Inst, Int) = (Label(RInt(n)), n + 1)\n\nn\u304b\u3089\u59cb\u307e\u308b\u3082\u306e\u306f\u6a5f\u68b0\u8a9e\u306e\u4e2d\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u5909\u6570\u3084\u30e9\u30d9\u30eb\u3067\u3042\u308b\u3002\n\n\u5b9f\u88c5\n\u6b63\u898f\u8868\u73fe\u306e\u7a2e\u985e\uff08\u6587\u5b57\u3001\u9023\u63a5\u3001\u9078\u629e\u3001\u7e70\u308a\u8fd4\u3057\uff09\u306b\u5bfe\u5fdc\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n\u6587\u5b57\ncase Let(c) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, n3) = assign(GetElementPtr(I8P, nstr, RInt(n1)), n2)\n  val (i4, n4) = assign(Add(I64, RInt(n1), 1), n3)\n  val  i5      = Store(I64, RInt(n3), I64P, nsp)\n  val (i6, n5) = assign(Load(I8P, RInt(n2)), n4)\n  val (i7, n6) = assign(Cmp(Eq, I8, RInt(n4), VInt(c.toInt)), n5)\n  val  i8      = Br2(RInt(n5), RInt(n6), nmiss)\n  (List(i1, i2, i3, i4, i5, i6, i7, i8), n6)\n\n\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n\u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n\u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b SP \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n\u6587\u5b57\u5217nstr\u306e\u4f4d\u7f6e SP \u306b\u3042\u308b\u6587\u5b57\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n\nSP \u306e\u5024\u306b111\u3092\u8db3\u3057\u3001\u305d\u308c\u3092\u30b9\u30bf\u30c3\u30af\u306e SP \u306b\u4fdd\u5b58\u3059\u308b\n(3)\u3067\u53d6\u5f97\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u3042\u308b\u6587\u5b57\u3092\u53d6\u5f97\u3059\u308b\n(5)\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u3068\u3001c\u3092\u6bd4\u8f033\u3059\u308b\n\u7b49\u3057\u3051\u308c\u3070\u6b21\u3078\u9077\u79fb\u3057\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089nmiss\u3078\u9077\u79fb\u3059\u308b\n\n\n\u9023\u63a5\ncase Con(a, b) =>\n  val (i1, n1) = loop(a, n)\n  val (i2, n2) = loop(b, n1)\n  (i1 ++ i2, n2)\n\n\u5358\u306b\u4e21\u5074\u306b\u3042\u308b\u6b63\u898f\u8868\u73fe\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u3089\u3092\u7d50\u5408\u3059\u308b\u3002\n\n\u9078\u629e\ncase Alt(a, b) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, _)  = assign(Call(fname, I1, List((I8P, BA(fname, RInt(n2 + 1))), (I64, RInt(n1)))), n2)\n  val (i4, n4) = loop(a, n2 + 1)\n  val (i5, n5) = mk_label(n4)\n  val (i6, n6) = loop(b, n5)\n  val i7       = Br1(RInt(n6))\n  val i8       = Br2(RInt(n2), nmatch, RInt(n5))\n  (List(i1, i2, i3, i8) ++ i4 ++ List(i5, i7) ++ i6, n6)\n\n\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n\u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n\u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b SP \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n\u9078\u629e\u306e\u5de6\u5074\uff08\u6b63\u898f\u8868\u73fea\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n(3)\u306e\u6a5f\u68b0\u8a9e\u8868\u73fe\u306b\u3001\u9078\u629e\u306e\u53f3\u5074\uff08b\uff09\u306e\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u8ffd\u52a0\u3059\u308b\n\u9078\u629e\u306e\u53f3\u5074\uff08\u6b63\u898f\u8868\u73feb\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n\n@test\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3002\u3053\u306e\u6642a\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3092\u6e21\u3059\n(5)\u304c\u6210\u529f\u3059\u308c\u3070\u30de\u30c3\u30c1\u6210\u529f\u3078\u9077\u79fb\u3057\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070b\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\n\n\u7e70\u308a\u8fd4\u3057\ncase Star(Star(r)) => loop(Star(r), n)\n\ncase Star(r) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, _)  = assign(Call(fname, I1, List((I8P, BA(fname, RInt(n2 + 1))), (I64, RInt(n1)))), n2)\n  val (i4, n3) = loop(r, n2 + 1)\n  val (i5, n4) = mk_label(n3)\n  val  i6      = Br1(RInt(n))\n  val  i7      = Br2(RInt(n2), nmatch, RInt(n4))\n  (List(i1, i2, i3, i7) ++ i4 ++ List(i5, i6), n4)\n\n\u307e\u305a\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u56de\u907f\u3059\u308b4\u305f\u3081\u306b\u3001\u4e8c\u91cd\u306b\u306a\u3063\u305f\u7e70\u308a\u8fd4\u3057\u3092\u9664\u53bb\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n\u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n\u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b SP \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n\u7e70\u308a\u8fd4\u3057\u306e\u4e2d\u8eab\uff08\u6b63\u898f\u8868\u73fer\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n(3)\u306e\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u672b\u5c3e\u306b\u3001(1)\u3067\u751f\u6210\u3057\u305f\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\n\n@test\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3002\u3053\u306e\u6642r\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3092\u6e21\u3059\n(5)\u304c\u6210\u529f\u3059\u308c\u3070\u30de\u30c3\u30c1\u6210\u529f\u3078\u9077\u79fb\u3057\u3001\u6b21\u306e\u547d\u4ee4\u306e\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\n\n\u6a5f\u68b0\u8a9e\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\u3078\u306e\u5909\u63db\n\u6a5f\u68b0\u8a9e\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3078\u5909\u63db\u3059\u308b\u30d7\u30ea\u30f3\u30bf\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\u6a5f\u68b0\u8a9e\u8868\u73fe\u306b\u5bfe\u5fdc\u3057\u3066\u8aac\u660e\u3059\u308b\u3002\n\n\u30ec\u30b8\u30b9\u30bf\u3068\u5024\nLLVM\u306e\u6a5f\u68b0\u8a9e\u3067\u306f\u30ec\u30b8\u30b9\u30bf\u3084\u30e9\u30d9\u30eb\u306e\u5148\u982d\u306b%\u3092\u4ed8\u3051\u308b\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u30e9\u30d9\u30eb\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u969b\u306f%\u3092\u4ed8\u3051\u306a\u3044\u3002\ndef label_of_value(v: Value): String = v match {\n  case RInt(n) => n.toString\n  case _       => throw new Exception()\n}\n\ndef var_of_value(v: Value): String = v match {\n  case RInt(n)  => \"%\" + n\n  case RStr(s)  => \"%\" + s\n  case VInt(n)  => n.toString\n  case BA(f, l) => \"blockaddress(\" + f + \", \" + var_of_value(l) + \")\"\n}\n\n\n\u6761\u4ef6\ndef pp_cond(c: Cond): String = c match {\n  case Eq => \"eq\"\n}\n\n\n\u578b\u3068\u578b\u306e\u30b5\u30a4\u30ba\n\u578b\u3068\u3001load\u3084store\u306e\u969b\u306b\u5fc5\u8981\u3068\u306a\u308b\u578b\u306e\u30b5\u30a4\u30ba\u306b\u95a2\u3059\u308b\u5909\u63db\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\ndef pp_type(t: Type): String = t match {\n  case I1   => \"i1\"\n  case I8   => \"i8\"\n  case I8P  => \"i8*\"\n  case I64  => \"i64\"\n  case I64P => \"i64*\"\n}\n\ndef align(t: Type): Int = t match {\n  case I8   => 1\n  case I8P  => 8\n  case I64  => 8\n  case I64P => 8\n  case I1   => throw new Exception()\n}\n\n\n\u547d\u4ee4\n\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u8a9e\u3078\u5909\u63db\u3059\u308b\u3002\ndef pp_inst(i: Inst, tab: String = \"\"): String =\n  tab + (i match {\n    case Label(n) =>\n      \"\\n; <label>:\" + label_of_value(n)\n    case Assign(l, r) =>\n      var_of_value(l) + \" = \" + pp_inst(r)\n    case Add(t, v, n) =>\n      \"add nsw \" + pp_type(t) + \" \" + var_of_value(v) + \", \" + n\n    case Cmp(c, t, a, b) =>\n      \"icmp \" + pp_cond(c) + \" \" + pp_type(t) + \" \" + var_of_value(a) + \", \" + var_of_value(b)\n    case Br1(d) =>\n      \"br label \" + var_of_value(d)\n    case Br2(c, t, e) =>\n      \"br i1 \" + var_of_value(c) + \", label \" + var_of_value(t) + \", label \" + var_of_value(e)\n    case Call(f, rt, a) =>\n      val s = a.foldLeft(\"i8* %str\")((x, y) => x + \", \" + pp_type(y._1) + \" \" + var_of_value(y._2))\n      \"call \" + pp_type(rt) + \" \" + f + \"(\" + s + \")\"\n    case Load(t, p) =>\n      \"load \" + pp_type(t) + \" \" + var_of_value(p) + \", align \" + align(t)\n    case Store(vt, v, pt, pv) =>\n      \"store \" + pp_type(vt) + \" \" + var_of_value(v) + \", \" + pp_type(pt) + \" \" +\n        var_of_value(pv) + \", align \" + align(vt)\n    case GetElementPtr(t, v, i) =>\n      \"getelementptr inbounds \" + pp_type(t) + \" \" + var_of_value(v) + \", i64 \" + var_of_value(i)\n  })\n\n\n\u6a5f\u68b0\u8a9e\u3068\u3057\u3066\u5fc5\u8981\u306a\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\n\u3053\u308c\u3067\u547d\u4ee4\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305f\u304c\u3001LLVM\u3068\u3057\u3066\u306e\u4f53\u88c1\u3092\u4fdd\u3064\u305f\u3081\u306b\u3044\u304f\u3064\u304b\u5fc5\u8981\u306a\u6a5f\u68b0\u8a9e\uff08\u4f8b\u3048\u3070main\u95a2\u6570\u3084\u3001printf\u95a2\u6570\u3092\u4f7f\u3046\u305f\u3081\u306e\u8af8\u3005\u306a\u3069\uff09\u3092\u8ffd\u52a0\u3059\u308bmake\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3002\ndef make(i: List[Inst]): String = {\n  val s =\n    \"@.match   = private unnamed_addr constant [7 x i8] c\\\"match\\\\0A\\\\00\\\", align 1\\n\"  +\n    \"@.unmatch = private unnamed_addr constant [9 x i8] c\\\"unmatch\\\\0A\\\\00\\\", align 1\\n\\n\" +\n    \"define i1 @test(i8* %str, i8* %l, i64 %sp_value) {\\n\" +\n    \"  %sp = alloca i64, align 8\\n\" +\n    \"  store i64 %sp_value, i64* %sp, align 8\\n\" +\n    \"  %isnull = icmp eq i8* %l, null\\n\" +\n    \"  br i1 %isnull, label %1, label %jump\\n\\n\" +\n    \"jump:\\n\" +\n    \"  indirectbr i8* %l, [\" +\n      i.foldRight(List[String]())((x, y) => x match {\n        case Label(n) => (\"label \" + var_of_value(n)) :: y\n        case _        => y\n      }).mkString(\", \") + \"]\\n\"\n\n  val llvmir = i.map(pp_inst(_, \"  \")).foldLeft(\"\")((x, y) => x + y + \"\\n\")\n\n  val e =\n    \"\\nmiss:\\n\" +\n    \"  ret i1 0\\n\\n\" +\n    \"match:\\n\" +\n    \"  ret i1 1\\n\" +\n    \"}\\n\\n\" +\n    \"define i32 @main(i32 %argc, i8** %argv) {\\n\" +\n    \"  %arg1 = getelementptr inbounds i8** %argv, i64 1\\n\" +\n    \"  %str  = load i8** %arg1, align 8\\n\" +\n    \"  %res  = call i1 @test(i8* %str, i8* null, i64 0)\\n\" +\n    \"  br i1 %res, label %match, label %unmatch\\n\\n\" +\n    \"match:\\n\" +\n    \"  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.match, i32 0, i32 0))\\n\" +\n    \"  br label %ret\\n\\n\" +\n    \"unmatch:\\n\" +\n    \"  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.unmatch, i32 0, i32 0))\\n\" +\n    \"  br label %ret\\n\\n\" +\n    \"ret:\\n\" +\n    \"  ret i32 0\\n\" +\n    \"}\\n\\n\" +\n    \"declare i32 @printf(i8*, ...)\"\n\n  s + llvmir + e\n}\n\n\n\u5177\u4f53\u4f8b\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306fGist\u306b\u7f6e\u3044\u3066\u3042\u308b\u307b\u304b\u3001ideone\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u8a66\u3057\u306b\u5076\u6570\u500b\u306e b \u3068\u4efb\u610f\u306e\u6570\u306e a \u304b\u3089\u306a\u308b\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u6b63\u898f\u8868\u73fesa*(ba*ba*)*a*e5\u306b\u5bfe\u5fdc\u3059\u308bLLVM\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3002\u307e\u305a\u3001\u3053\u306e\u6b63\u898f\u8868\u73fe\u3092\u6b21\u306e\u3088\u3046\u306a\u62bd\u8c61\u69cb\u6587\u6728\u3078\u624b\u52d52\u3067\u5909\u63db\u3059\u308b\u3002\nCon(Con(Let('s'), Con(Con(Star(Let('a')), Star(Con(Con(Let('b'), Star(Let('a'))), Con(Let('b'), Star(Let('a')))))), Star(Let('a')))), Let('e'))\n\n\u3053\u308c\u3092\u5148\u7a0b\u306eScala\u3067\u66f8\u3044\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6295\u5165\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306aLLVM\u306e\u30b3\u30fc\u30c9\u304c\u5f97\u3089\u308c\u308b\u3002\n@.match   = private unnamed_addr constant [7 x i8] c\"match\\0A\\00\", align 1\n@.unmatch = private unnamed_addr constant [9 x i8] c\"unmatch\\0A\\00\", align 1\n\ndefine i1 @test(i8* %str, i8* %l, i64 %sp_value) {\n  %sp = alloca i64, align 8\n  store i64 %sp_value, i64* %sp, align 8\n  %isnull = icmp eq i8* %l, null\n  br i1 %isnull, label %1, label %jump\n\njump:\n  indirectbr i8* %l, [label %1, label %7, label %10, label %16, label %17, label %20, label %26, label %29, label %35, label %36, label %42, label %45, label %51, label %52, label %53, label %56, label %62, label %63, label %69]\n\n; <label>:1\n  %2 = load i64* %sp, align 8\n  %3 = getelementptr inbounds i8* %str, i64 %2\n  %4 = add nsw i64 %2, 1\n  store i64 %4, i64* %sp, align 8\n  %5 = load i8* %3, align 8\n  %6 = icmp eq i8 %5, 115\n  br i1 %6, label %7, label %miss\n\n; <label>:7\n  %8 = load i64* %sp, align 8\n  %9 = call i1 @test(i8* %str, i8* blockaddress(@test, %10), i64 %8)\n  br i1 %9, label %match, label %17\n\n; <label>:10\n  %11 = load i64* %sp, align 8\n  %12 = getelementptr inbounds i8* %str, i64 %11\n  %13 = add nsw i64 %11, 1\n  store i64 %13, i64* %sp, align 8\n  %14 = load i8* %12, align 8\n  %15 = icmp eq i8 %14, 97\n  br i1 %15, label %16, label %miss\n\n; <label>:16\n  br label %7\n\n; <label>:17\n  %18 = load i64* %sp, align 8\n  %19 = call i1 @test(i8* %str, i8* blockaddress(@test, %20), i64 %18)\n  br i1 %19, label %match, label %53\n\n; <label>:20\n  %21 = load i64* %sp, align 8\n  %22 = getelementptr inbounds i8* %str, i64 %21\n  %23 = add nsw i64 %21, 1\n  store i64 %23, i64* %sp, align 8\n  %24 = load i8* %22, align 8\n  %25 = icmp eq i8 %24, 98\n  br i1 %25, label %26, label %miss\n\n; <label>:26\n  %27 = load i64* %sp, align 8\n  %28 = call i1 @test(i8* %str, i8* blockaddress(@test, %29), i64 %27)\n  br i1 %28, label %match, label %36\n\n; <label>:29\n  %30 = load i64* %sp, align 8\n  %31 = getelementptr inbounds i8* %str, i64 %30\n  %32 = add nsw i64 %30, 1\n  store i64 %32, i64* %sp, align 8\n  %33 = load i8* %31, align 8\n  %34 = icmp eq i8 %33, 97\n  br i1 %34, label %35, label %miss\n\n; <label>:35\n  br label %26\n\n; <label>:36\n  %37 = load i64* %sp, align 8\n  %38 = getelementptr inbounds i8* %str, i64 %37\n  %39 = add nsw i64 %37, 1\n  store i64 %39, i64* %sp, align 8\n  %40 = load i8* %38, align 8\n  %41 = icmp eq i8 %40, 98\n  br i1 %41, label %42, label %miss\n\n; <label>:42\n  %43 = load i64* %sp, align 8\n  %44 = call i1 @test(i8* %str, i8* blockaddress(@test, %45), i64 %43)\n  br i1 %44, label %match, label %52\n\n; <label>:45\n  %46 = load i64* %sp, align 8\n  %47 = getelementptr inbounds i8* %str, i64 %46\n  %48 = add nsw i64 %46, 1\n  store i64 %48, i64* %sp, align 8\n  %49 = load i8* %47, align 8\n  %50 = icmp eq i8 %49, 97\n  br i1 %50, label %51, label %miss\n\n; <label>:51\n  br label %42\n\n; <label>:52\n  br label %17\n\n; <label>:53\n  %54 = load i64* %sp, align 8\n  %55 = call i1 @test(i8* %str, i8* blockaddress(@test, %56), i64 %54)\n  br i1 %55, label %match, label %63\n\n; <label>:56\n  %57 = load i64* %sp, align 8\n  %58 = getelementptr inbounds i8* %str, i64 %57\n  %59 = add nsw i64 %57, 1\n  store i64 %59, i64* %sp, align 8\n  %60 = load i8* %58, align 8\n  %61 = icmp eq i8 %60, 97\n  br i1 %61, label %62, label %miss\n\n; <label>:62\n  br label %53\n\n; <label>:63\n  %64 = load i64* %sp, align 8\n  %65 = getelementptr inbounds i8* %str, i64 %64\n  %66 = add nsw i64 %64, 1\n  store i64 %66, i64* %sp, align 8\n  %67 = load i8* %65, align 8\n  %68 = icmp eq i8 %67, 101\n  br i1 %68, label %69, label %miss\n\n; <label>:69\n  br label %match\n\nmiss:\n  ret i1 0\n\nmatch:\n  ret i1 1\n}\n\ndefine i32 @main(i32 %argc, i8** %argv) {\n  %arg1 = getelementptr inbounds i8** %argv, i64 1\n  %str  = load i8** %arg1, align 8\n  %res  = call i1 @test(i8* %str, i8* null, i64 0)\n  br i1 %res, label %match, label %unmatch\n\nmatch:\n  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.match, i32 0, i32 0))\n  br label %ret\n\nunmatch:\n  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.unmatch, i32 0, i32 0))\n  br label %ret\n\nret:\n  ret i32 0\n}\n\ndeclare i32 @printf(i8*, ...)\n\n\u751f\u6210\u3055\u308c\u305fLLVM\u306e\u6a5f\u68b0\u8a9e\u3092\u30a8\u30c7\u30a3\u30bf\u306a\u3069\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u3001\u3053\u3053\u3067\u306f regex.ll \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3059\u308b\u3002\u305d\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306bLLVM\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n$ llc regex.ll && gcc regex.s\n\n\u6210\u529f\u3059\u308b\u3068 a.out \u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u305f\u3044\u6587\u5b57\u5217\u3092\u4e0e\u3048\u308c\u3070\u3001\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n$ ./a.out saabbaabbe\nmatch\n\n$ ./a.out saabbaabbabe\nunmatch\n\n\n\u307e\u3068\u3081\n\u6700\u5c0f\u306e\u6b63\u898f\u8868\u73fe\u3092LLVM\u3078\u5909\u63db\u3059\u308b\u30b3\u30fc\u30c9\u306f\u898f\u6a21\u3067\u8a00\u3048\u3070200\u884c\u7a0b\u5ea6\u306a\u306e\u3067\u3001\u5272\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u305f\u3068\u601d\u3046\u3002\u4eca\u56de\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19\u3060\u3063\u305f\u306e\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306a\u3069\u306f\u53d6\u3063\u3066\u3044\u306a\u3044\u304c\u3001\u4f55\u304b\u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3066\u307f\u308b\u306e\u3082\u304a\u3082\u3057\u308d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u53c2\u8003\u6587\u732e\n\n\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580\nRegular Expression Matching: the Virtual Machine Approach\n\u304d\u3064\u306d\u3055\u3093\u3067\u3082\u308f\u304b\u308bLLVM ~\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u81ea\u4f5c\u3059\u308b\u305f\u3081\u306e\u30ac\u30a4\u30c9\u30d6\u30c3\u30af~\nLLVM Language Reference Manual\n\n\n\u95a2\u9023\u6587\u732e\n\n\u6b63\u898f\u8868\u73fe\u306f\u304a\u597d\u304d?\nRuby\u306b\u3088\u308b\u6b63\u898f\u8868\u73fe\u30b3\u30f3\u30d1\u30a4\u30e9(\u305d\u306e2)\n\n\n\n\n\nVM\u578b\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u3092\u53c2\u7167\u3002\u00a0\u21a9\n\n\n@kmizu \u3055\u3093\u3068 @koizuka \u3055\u3093\u306b\u3001\u6b63\u898f\u8868\u73fe\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u306e\u30d1\u30fc\u30b5\u3092\u4f5c\u3063\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3088\u3044\u3002\u00a0\u21a9\n\n\nLLVM\u3067\u306f\u6587\u5b57\u3068\u6587\u5b57\u306e\u6bd4\u8f03\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001c\u3092ASCII\u30b3\u30fc\u30c9\u306b\u57fa\u3065\u304f\u6570\u5b57\u3078\u5909\u63db\u3057\u3066\u6570\u5b57\u3068\u6570\u5b57\u306e\u6bd4\u8f03\u3092\u884c\u3063\u3066\u3044\u308b\u3002\u00a0\u21a9\n\n\n\u524d\u56de\u306e\u8a18\u4e8b\uff08\u52a0\u7b46\u90e8\u5206\uff09\u3092\u53c2\u7167\u3002\u00a0\u21a9\n\n\n\u3053\u306e\u6b63\u898f\u8868\u73fe\u306b\u306f\u6587\u5b57\u5217\u306e\u958b\u59cb\u3084\u7d42\u7aef\u3092\u8868\u3059\u65b9\u6cd5\u304c\u306a\u3044\u306e\u3067\u3001\u4e0e\u3048\u3089\u308c\u308b\u6587\u5b57\u5217\u304c s \u304b\u3089\u59cb\u307e\u308a e \u3067\u7d42\u308f\u308b\u3068\u4eee\u5b9a\u3057\u958b\u59cb\u3068\u7d42\u7aef\u3092\u64ec\u4f3c\u7684\u306b\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\u00a0\u21a9\n\n\n\n[\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580](http://www.amazon.co.jp/dp/4774172707)\u3068\u3044\u3046\u672c\u306e\u4e2d\u306b\u3001\u6b63\u898f\u8868\u73fe\u306eJIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u3044\u3046\u6280\u8853\u304c\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u3002VM\u578b\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u306f\u4ee5\u524d\u4f5c\u3063\u305f[^vm_engine]\u306e\u3067\u3001\u3053\u308c\u3092LLVM\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308c\u3070\u304a\u3082\u3057\u308d\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u8003\u3048\u3066\u3001\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u306a\u304a\u3001\u5b9f\u88c5\u306b\u306fScala\u3092\u7528\u3044\u305f\u3002\n\n> \u8ffd\u8a18\uff1a\n> \u307e\u305f\u3001JVM\u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3078JIT\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u5b9f\u9a13\u3082\u66f8\u304d\u307e\u3057\u305f\u3002\n> [\u6b63\u898f\u8868\u73fe\u306eJIT\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u5b9f\u88c5\u3059\u308b](http://qiita.com/yyu/items/3c4deb39d6b0a7955572)\n\n[^vm_engine]: [VM\u578b\u306e\u6b63\u898f\u8868\u73fe\u30a8\u30f3\u30b8\u30f3\u3092\u5b9f\u88c5\u3059\u308b](http://qiita.com/yyu/items/84b1a00459408d1a7321)\u3092\u53c2\u7167\u3002\n\n# \u6b63\u898f\u8868\u73fe\u306e\u62bd\u8c61\u69cb\u6587\u6728\n\nVM\u306e\u5b9f\u88c5\u306e\u6642\u306b\u7528\u3044\u305f\u3082\u306e\u3068\u540c\u3058\u304f\u3001\u6b21\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u7528\u3044\u308b\u3002\n\n```scala\nsealed trait Regex\ncase object Empty                  extends Regex\ncase class Let(c: Char)            extends Regex\ncase class Con(a: Regex, b: Regex) extends Regex\ncase class Alt(a: Regex, b: Regex) extends Regex\ncase class Star(a: Regex)          extends Regex\n```\n\n\u4f8b\u3048\u3070\u6b63\u898f\u8868\u73fe`sa*(ba*ba*)*a*e`\u3092\u4e0a\u8a18\u306e\u30c7\u30fc\u30bf\u578b\uff08\u62bd\u8c61\u69cb\u6587\u6728\uff09\u3067\u8868\u3059\u3068\u6b21\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\n```\nCon(Con(Let('s'), Con(Con(Star(Let('a')), Star(Con(Con(Let('b'), Star(Let('a'))), Con(Let('b'), Star(Let('a')))))), Star(Let('a')))), Let('e'))\n```\n\n\u6b63\u898f\u8868\u73fe\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u306e\u5909\u63db\u306f\u3001\u4eca\u56de\u3082\u4eba\u9593\u304c\u624b\u52d5[^regex_parser]\u3067\u884c\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n[^regex_parser]: @kmizu \u3055\u3093\u3068 @koizuka \u3055\u3093\u306b\u3001\u6b63\u898f\u8868\u73fe\u304b\u3089\u62bd\u8c61\u69cb\u6587\u6728\u3078\u306e\u30d1\u30fc\u30b5\u3092\u4f5c\u3063\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u3002[\u30b3\u30e1\u30f3\u30c8](http://qiita.com/yyu/items/a0ef2d2204c137707f3f#comment-af7f9a78cf6fb5b0a84d)\u3092\u53c2\u8003\u306b\u3059\u308b\u3068\u3088\u3044\u3002\n\n# LLVM\u6a5f\u68b0\u8a9e\u306e\u8868\u73fe\n\nLLVM\u306e\u6a5f\u68b0\u8a9e\u306e\u4e2d\u304b\u3089\u4eca\u56de\u4f7f\u3046\u3082\u306e\u3092\u9078\u3073\u3001\u305d\u308c\u3092\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\u4eca\u56de\u6271\u3046LLVM\u306e\u547d\u4ee4\u306f\u6728\u69cb\u9020\u306b\u306a\u3089\u306a\u3044\u306e\u3067\u3001\u6b63\u898f\u8868\u73fe\uff08\u306e\u62bd\u8c61\u69cb\u6587\u6728\uff09\u304b\u3089\u76f4\u63a5\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3092\u751f\u6210\u3057\u3066\u3082\u3088\u304b\u3063\u305f\u304c\u3001\u30c7\u30d0\u30c3\u30b0\u304c\u5927\u5909\u306b\u306a\u308b\u3088\u3046\u306a\u6c17\u304c\u3057\u305f\u306e\u3067\u4e00\u65e6LLVM\u306e\u6a5f\u68b0\u8a9e\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u3078\u3068\u5909\u63db\u3057\u3066\u304b\u3089\u3001\u305d\u308c\u3092\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u3053\u306e\u6a5f\u68b0\u8a9e\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u306e\u3053\u3068\u3092\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f **\u6a5f\u68b0\u8a9e\u8868\u73fe** \u3068\u547c\u3076\u3002\n\n## \u30ec\u30b8\u30b9\u30bf\u3068\u5024\n\n\u307e\u305a\u3001\u30ec\u30b8\u30b9\u30bf\u3068\u5024\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u578b\u3092\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\n\n```scala\nsealed trait Value\ncase class RInt(n: Int)            extends Value\ncase class RStr(s: String)         extends Value\ncase class VInt(n: Int)            extends Value\ncase class BA(f: String, l: Value) extends Value\n```\n\n\u305d\u308c\u305e\u308c\u6b21\u306e\u3088\u3046\u306a\u610f\u5473\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n<dl>\n  <dt><code>RInt(n)</code></dt>\n  <dd>$n$\u756a\u76ee\u306e\u30ec\u30b8\u30b9\u30bf\uff08<code>%10</code>\u306a\u3069\uff09<dd>\n  <dt><code>RStr(s)</code></dt>\n  <dd>\u540d\u524d\u304c <i>s</s> \u306e\u30ec\u30b8\u30b9\u30bf\uff08<code>%hoge</code>\u306a\u3069\uff09</dd>\n  <dt><code>VInt(n)</code></dt>\n  <dd>\u6574\u6570\u5024$n$</dd>\n  <dt><code>BA(f, l)</code></dt>\n  <dd>\u30e9\u30d9\u30eb\u3092\u8868\u308f\u3059\u5024</dd>\n</dl>\n\n## \u578b\n\n\u7d9a\u3044\u3066\u3001LLVM\u3067\u4eca\u56de\u6271\u3046\u578b\u3092\u30c7\u30fc\u30bf\u578b\u3067\u8868\u73fe\u3059\u308b\u3002\n\n```scala\nsealed trait Type\ncase object I1   extends Type\ncase object I8   extends Type\ncase object I8P  extends Type\ncase object I64  extends Type\ncase object I64P extends Type\n```\n\n\u305d\u308c\u305e\u308c\u6570\u5b57\u304c\u6574\u6570\u5024\u306e\u30d3\u30c3\u30c8\u9577\u3067\u3042\u308b\u3002`P`\u304c\u4ed8\u304f\u3082\u306e\u306f\u30dd\u30a4\u30f3\u30bf\u3092\u8868\u3059\u3002\n\n## \u6761\u4ef6\n\n\u6bd4\u8f03\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981\u306a\u6761\u4ef6\u3092\u8868\u3059\u30c7\u30fc\u30bf\u578b\u3067\u3042\u308b\u3002\n\n```scala\nsealed trait Cond\ncase object Eq extends Cond\n```\n\n\u5b9f\u88c5\u3057\u3066\u307f\u3066\u5206\u304b\u3063\u305f\u304c\u3001\u4eca\u56de\u306f`Eq`\u3057\u304b\u4f7f\u308f\u306a\u304b\u3063\u305f\u306e\u3067\u3053\u306e\u30c7\u30fc\u30bf\u578b\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u306f\u306a\u304b\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n## \u547d\u4ee4\n\nLLVM\u306e\u547d\u4ee4\u306e\u4e2d\u3067\u3001\u4eca\u56de\u7528\u3044\u308b\u3082\u306e\u3092\u6b21\u306e\u3088\u3046\u306b\u8868\u73fe\u3059\u308b\u3002\n\n```scala\nsealed trait Inst\ncase class Label(n: Value)                                    extends Inst\ncase class Assign(l: Value, r: Inst)                          extends Inst\ncase class Add(t: Type, v: Value, n: Int)                     extends Inst\ncase class Cmp(c: Cond, t: Type, a: Value, b: Value)          extends Inst\ncase class Br1(d: Value)                                      extends Inst\ncase class Br2(c: Value, t: Value, e: Value)                  extends Inst\ncase class Call(f: String, rt: Type, at: List[(Type, Value)]) extends Inst\ncase class Load(t: Type, p: Value)                            extends Inst\ncase class Store(vt: Type, v: Value, pt: Type, pv: Value)     extends Inst\ncase class GetElementPtr(t: Type, v: Value, i: Value)         extends Inst\n```\n\n\u307e\u305a\u3001`Br1`\u3068`Br2`\u306f\u4e21\u65b9\u3068\u3082\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3092\u8868\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u3001`Br1`\u306f\u6307\u5b9a\u3055\u308c\u305f\u30e9\u30d9\u30eb\u306f\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3067\u3042\u308b\u306e\u306b\u5bfe\u3057\u3066\u3001`Br2`\u306f\u307e\u305a\u4e8c\u5024\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u53d7\u3051\u3068\u308a\u3001\u305d\u306e\u7d50\u679c\u306b\u5fdc\u3058\u3066\u305d\u308c\u305e\u308c\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3042\u308b\u3002\n\u307e\u305f\u3001`GetElementPtr`\u306f\u914d\u5217\u306a\u3069\u304b\u3089\u30a4\u30f3\u30c7\u30c3\u30af\u30b9$i$\u306e\u5024\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u547d\u4ee4\u3067\u3042\u308b\u3002\n\u305d\u306e\u4ed6\u306e\u547d\u4ee4\u306b\u3064\u3044\u3066\u306f\u3001\u305f\u3076\u3093\u306a\u3093\u3068\u306a\u304f\u5206\u304b\u308b\u3068\u601d\u3046\u306e\u3067\u7701\u7565\u3059\u308b\u3002\n\n# \u6b63\u898f\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u306e\u5909\u63db\n\n## \u5b9f\u88c5\u65b9\u91dd\u306e\u6982\u8981\n\n\u524d\u56de\u306e\u8a18\u4e8b\u3084[Regular Expression Matching: the Virtual Machine Approach](https://swtch.com/~rsc/regexp/regexp2.html)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bVM\u306f\u4e8c\u3064\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u4f7f\u3063\u3066\u3044\u305f\u3002\n\n<dl>\n  <dt>PC</dt>\n  <dd>\u6b21\u306b\u5b9f\u884c\u3059\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306e\u4f4d\u7f6e</dd>\n  <dt>SP</dt>\n  <dd>\u30de\u30c3\u30c1\u3092\u884c\u3046\u6587\u5b57\u306e\u4f4d\u7f6e</dd>\n</dl>\n\n\u3053\u306eVM\u306f\u6b21\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u3002\n\n1. _PC_ \u306e\u4f4d\u7f6e\u306b\u3042\u308b\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u53d6\u308a\u51fa\u3059\uff08\u30d5\u30a7\u30c3\u30c1\uff09\n2. \u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u547d\u4ee4`char`\u3001`split`\u3001`jmp`\u3001`match`\u306e\u3069\u308c\u304b\u3078\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\n3. \u547d\u4ee4\u306b\u5bfe\u5fdc\u3059\u308b\u51e6\u7406\u3092\u5b9f\u884c\n4. _PC_ \u3092\u66f4\u65b0\n\n\u6a5f\u68b0\u8a9e\u3078\u5909\u63db\u3059\u308b\u3053\u3068\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u304c\u6a5f\u68b0\u8a9e\u306b\u306a\u308a\u3001\u305d\u308c\u3092CPU\u304b\u4f55\u304b\u304c\u5b9f\u884c\u3059\u308b\u5f62\u306b\u306a\u308b\u306e\u3067\u3001\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u306a\u308b\u3002\u3088\u3063\u3066 _PC_ \u306f\u306a\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3067\u306f`split`\u3084`jmp`\u306e\u3088\u3046\u306b\u3001\u3069\u3053\u304b\u7279\u5b9a\u306e\u5834\u6240\u304b\u3089\u547d\u4ee4\u3092\u5b9f\u884c\u3057\u305f\u304f\u306a\u3063\u305f\u5834\u5408\u3001 _PC_ \u306a\u3057\u3067\u3069\u3046\u3059\u308b\u306e\u304b\u7591\u554f\u306b\u601d\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3053\u306e\u3088\u3046\u306a\u5834\u5408\u306f\u3001\u30de\u30c3\u30c1\u3092\u884c\u3046LLVM\u4e0a\u306e\u95a2\u6570\u306b**\u30e9\u30d9\u30eb**\u3092\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u3001\u305d\u308c\u3092\u4f7f\u3063\u3066\u597d\u304d\u306a\u5834\u6240\u304b\u3089\u547d\u4ee4\u3092\u958b\u59cb\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\nLLVM\u4e0a\u3067\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u95a2\u6570\u3092`@test`\u3068\u3059\u308b\u3068\u3001\u305d\u308c\u306f\u6b21\u306e\u3088\u3046\u306a\u578b\u3092\u6301\u3064\u3002\n\n```llvm\ndefine i1 @test(i8* %str, i8* %l, i64 %sp_value)\n```\n\n\u7b2c\u4e00\u5f15\u6570\u304c\u6587\u5b57\u5217\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u3001\u7b2c\u4e8c\u5f15\u6570\u304c\u30e9\u30d9\u30eb\u306e\u30dd\u30a4\u30f3\u30bf\u3001\u305d\u3057\u3066\u7b2c\u4e09\u5f15\u6570\u304c _SP_ \u3068\u306a\u308b\u3002\n\n## \u88dc\u52a9\u95a2\u6570\n\n\u6b21\u306e\u3088\u3046\u306a\u88dc\u52a9\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3002\n\n```scala\ndef nsp    = RStr(\"sp\")\ndef nstr   = RStr(\"str\")\ndef nmatch = RStr(\"match\")\ndef nmiss  = RStr(\"miss\")\n\ndef fname = \"@test\"\n\ndef assign(r: Inst, n: Int): (Inst, Int) = (Assign(RInt(n), r), n + 1)\ndef mk_label(n: Int): (Inst, Int) = (Label(RInt(n)), n + 1)\n```\n\n`n`\u304b\u3089\u59cb\u307e\u308b\u3082\u306e\u306f\u6a5f\u68b0\u8a9e\u306e\u4e2d\u3067\u3088\u304f\u4f7f\u308f\u308c\u308b\u5909\u6570\u3084\u30e9\u30d9\u30eb\u3067\u3042\u308b\u3002\n\n## \u5b9f\u88c5\n\n\u6b63\u898f\u8868\u73fe\u306e\u7a2e\u985e\uff08\u6587\u5b57\u3001\u9023\u63a5\u3001\u9078\u629e\u3001\u7e70\u308a\u8fd4\u3057\uff09\u306b\u5bfe\u5fdc\u3057\u3066\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n### \u6587\u5b57\n\n```scala\ncase Let(c) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, n3) = assign(GetElementPtr(I8P, nstr, RInt(n1)), n2)\n  val (i4, n4) = assign(Add(I64, RInt(n1), 1), n3)\n  val  i5      = Store(I64, RInt(n3), I64P, nsp)\n  val (i6, n5) = assign(Load(I8P, RInt(n2)), n4)\n  val (i7, n6) = assign(Cmp(Eq, I8, RInt(n4), VInt(c.toInt)), n5)\n  val  i8      = Br2(RInt(n5), RInt(n6), nmiss)\n  (List(i1, i2, i3, i4, i5, i6, i7, i8), n6)\n```\n\n\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n1. \u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n2. \u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b _SP_ \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n3. \u6587\u5b57\u5217`nstr`\u306e\u4f4d\u7f6e _SP_ \u306b\u3042\u308b\u6587\u5b57\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n4. _SP_ \u306e\u5024\u306b$1$\u3092\u8db3\u3057\u3001\u305d\u308c\u3092\u30b9\u30bf\u30c3\u30af\u306e _SP_ \u306b\u4fdd\u5b58\u3059\u308b\n5. (3)\u3067\u53d6\u5f97\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u3042\u308b\u6587\u5b57\u3092\u53d6\u5f97\u3059\u308b\n6. (5)\u3067\u53d6\u5f97\u3057\u305f\u6587\u5b57\u3068\u3001`c`\u3092\u6bd4\u8f03[^to_int]\u3059\u308b\n7. \u7b49\u3057\u3051\u308c\u3070\u6b21\u3078\u9077\u79fb\u3057\u3001\u9593\u9055\u3063\u3066\u3044\u305f\u3089`nmiss`\u3078\u9077\u79fb\u3059\u308b\n\n[^to_int]: LLVM\u3067\u306f\u6587\u5b57\u3068\u6587\u5b57\u306e\u6bd4\u8f03\u306f\u3067\u304d\u306a\u3044\u306e\u3067\u3001`c`\u3092ASCII\u30b3\u30fc\u30c9\u306b\u57fa\u3065\u304f\u6570\u5b57\u3078\u5909\u63db\u3057\u3066\u6570\u5b57\u3068\u6570\u5b57\u306e\u6bd4\u8f03\u3092\u884c\u3063\u3066\u3044\u308b\u3002\n\n### \u9023\u63a5\n\n```scala\ncase Con(a, b) =>\n  val (i1, n1) = loop(a, n)\n  val (i2, n2) = loop(b, n1)\n  (i1 ++ i2, n2)\n```\n\n\u5358\u306b\u4e21\u5074\u306b\u3042\u308b\u6b63\u898f\u8868\u73fe\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u5909\u63db\u3057\u3066\u3001\u305d\u308c\u3089\u3092\u7d50\u5408\u3059\u308b\u3002\n\n### \u9078\u629e\n\n```scala\ncase Alt(a, b) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, _)  = assign(Call(fname, I1, List((I8P, BA(fname, RInt(n2 + 1))), (I64, RInt(n1)))), n2)\n  val (i4, n4) = loop(a, n2 + 1)\n  val (i5, n5) = mk_label(n4)\n  val (i6, n6) = loop(b, n5)\n  val i7       = Br1(RInt(n6))\n  val i8       = Br2(RInt(n2), nmatch, RInt(n5))\n  (List(i1, i2, i3, i8) ++ i4 ++ List(i5, i7) ++ i6, n6)\n```\n\n\u3053\u308c\u306f\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n1. \u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n2. \u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b _SP_ \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n3. \u9078\u629e\u306e\u5de6\u5074\uff08\u6b63\u898f\u8868\u73fe`a`\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n4. (3)\u306e\u6a5f\u68b0\u8a9e\u8868\u73fe\u306b\u3001\u9078\u629e\u306e\u53f3\u5074\uff08`b`\uff09\u306e\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u8ffd\u52a0\u3059\u308b\n5. \u9078\u629e\u306e\u53f3\u5074\uff08\u6b63\u898f\u8868\u73fe`b`\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n6. `@test`\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3002\u3053\u306e\u6642`a`\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3092\u6e21\u3059\n7. (5)\u304c\u6210\u529f\u3059\u308c\u3070\u30de\u30c3\u30c1\u6210\u529f\u3078\u9077\u79fb\u3057\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070`b`\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\n### \u7e70\u308a\u8fd4\u3057\n\n```scala\ncase Star(Star(r)) => loop(Star(r), n)\n\ncase Star(r) =>\n  val (i1, n1) = mk_label(n)\n  val (i2, n2) = assign(Load(I64P, nsp), n1)\n  val (i3, _)  = assign(Call(fname, I1, List((I8P, BA(fname, RInt(n2 + 1))), (I64, RInt(n1)))), n2)\n  val (i4, n3) = loop(r, n2 + 1)\n  val (i5, n4) = mk_label(n3)\n  val  i6      = Br1(RInt(n))\n  val  i7      = Br2(RInt(n2), nmatch, RInt(n4))\n  (List(i1, i2, i3, i7) ++ i4 ++ List(i5, i6), n4)\n```\n\n\u307e\u305a\u3001\u7121\u9650\u30eb\u30fc\u30d7\u3092\u56de\u907f\u3059\u308b[^avoid_nonstop_loop]\u305f\u3081\u306b\u3001\u4e8c\u91cd\u306b\u306a\u3063\u305f\u7e70\u308a\u8fd4\u3057\u3092\u9664\u53bb\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u6b21\u306e\u3053\u3068\u3092\u3059\u308b\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u751f\u6210\u3059\u308b\u3002\n\n[^avoid_nonstop_loop]: [\u524d\u56de\u306e\u8a18\u4e8b\uff08\u52a0\u7b46\u90e8\u5206\uff09](http://qiita.com/yyu/items/84b1a00459408d1a7321#%E8%BF%BD%E8%A8%98%E4%BA%8C%E9%87%8D%E3%81%AE%E7%B9%B0%E3%82%8A%E8%BF%94%E3%81%97%E3%81%A7%E3%82%B9%E3%82%BF%E3%83%83%E3%82%AF%E3%82%AA%E3%83%BC%E3%83%90%E3%83%BC%E3%83%95%E3%83%AD%E3%83%BC)\u3092\u53c2\u7167\u3002\n\n1. \u30e9\u30d9\u30eb\u3092\u751f\u6210\u3059\u308b\n2. \u30b9\u30bf\u30c3\u30af\u306b\u3042\u308b _SP_ \u306e\u5024\u3092\u8aad\u307f\u8fbc\u3080\n3. \u7e70\u308a\u8fd4\u3057\u306e\u4e2d\u8eab\uff08\u6b63\u898f\u8868\u73fe`r`\uff09\u3092\u6a5f\u68b0\u8a9e\u8868\u73fe\u3078\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n4. (3)\u306e\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u672b\u5c3e\u306b\u3001(1)\u3067\u751f\u6210\u3057\u305f\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\n5. `@test`\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3002\u3053\u306e\u6642`r`\u3092\u8868\u3059\u6a5f\u68b0\u8a9e\u8868\u73fe\u306e\u30e9\u30d9\u30eb\u3092\u6e21\u3059\n6. (5)\u304c\u6210\u529f\u3059\u308c\u3070\u30de\u30c3\u30c1\u6210\u529f\u3078\u9077\u79fb\u3057\u3001\u6b21\u306e\u547d\u4ee4\u306e\u30e9\u30d9\u30eb\u3078\u30b8\u30e3\u30f3\u30d7\u3059\u308b\n\n# \u6a5f\u68b0\u8a9e\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\u3078\u306e\u5909\u63db\n\n\u6a5f\u68b0\u8a9e\u8868\u73fe\u304b\u3089\u6a5f\u68b0\u8a9e\uff08\u6587\u5b57\u5217\uff09\u3078\u5909\u63db\u3059\u308b\u30d7\u30ea\u30f3\u30bf\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\u6a5f\u68b0\u8a9e\u8868\u73fe\u306b\u5bfe\u5fdc\u3057\u3066\u8aac\u660e\u3059\u308b\u3002\n\n## \u30ec\u30b8\u30b9\u30bf\u3068\u5024\n\nLLVM\u306e\u6a5f\u68b0\u8a9e\u3067\u306f\u30ec\u30b8\u30b9\u30bf\u3084\u30e9\u30d9\u30eb\u306e\u5148\u982d\u306b`%`\u3092\u4ed8\u3051\u308b\u306e\u3067\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3002\u305f\u3060\u3057\u3001\u30e9\u30d9\u30eb\u3092\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u969b\u306f`%`\u3092\u4ed8\u3051\u306a\u3044\u3002\n\n```scala\ndef label_of_value(v: Value): String = v match {\n  case RInt(n) => n.toString\n  case _       => throw new Exception()\n}\n\ndef var_of_value(v: Value): String = v match {\n  case RInt(n)  => \"%\" + n\n  case RStr(s)  => \"%\" + s\n  case VInt(n)  => n.toString\n  case BA(f, l) => \"blockaddress(\" + f + \", \" + var_of_value(l) + \")\"\n}\n```\n\n## \u6761\u4ef6\n\n```scala\ndef pp_cond(c: Cond): String = c match {\n  case Eq => \"eq\"\n}\n```\n\n## \u578b\u3068\u578b\u306e\u30b5\u30a4\u30ba\n\n\u578b\u3068\u3001`load`\u3084`store`\u306e\u969b\u306b\u5fc5\u8981\u3068\u306a\u308b\u578b\u306e\u30b5\u30a4\u30ba\u306b\u95a2\u3059\u308b\u5909\u63db\u3092\u6b21\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308b\u3002\n\n```scala\ndef pp_type(t: Type): String = t match {\n  case I1   => \"i1\"\n  case I8   => \"i8\"\n  case I8P  => \"i8*\"\n  case I64  => \"i64\"\n  case I64P => \"i64*\"\n}\n\ndef align(t: Type): Int = t match {\n  case I8   => 1\n  case I8P  => 8\n  case I64  => 8\n  case I64P => 8\n  case I1   => throw new Exception()\n}\n```\n\n## \u547d\u4ee4\n\n\u6a5f\u68b0\u8a9e\u8868\u73fe\u3092\u6b21\u306e\u3088\u3046\u306b\u6a5f\u68b0\u8a9e\u3078\u5909\u63db\u3059\u308b\u3002\n\n```scala\ndef pp_inst(i: Inst, tab: String = \"\"): String =\n  tab + (i match {\n    case Label(n) =>\n      \"\\n; <label>:\" + label_of_value(n)\n    case Assign(l, r) =>\n      var_of_value(l) + \" = \" + pp_inst(r)\n    case Add(t, v, n) =>\n      \"add nsw \" + pp_type(t) + \" \" + var_of_value(v) + \", \" + n\n    case Cmp(c, t, a, b) =>\n      \"icmp \" + pp_cond(c) + \" \" + pp_type(t) + \" \" + var_of_value(a) + \", \" + var_of_value(b)\n    case Br1(d) =>\n      \"br label \" + var_of_value(d)\n    case Br2(c, t, e) =>\n      \"br i1 \" + var_of_value(c) + \", label \" + var_of_value(t) + \", label \" + var_of_value(e)\n    case Call(f, rt, a) =>\n      val s = a.foldLeft(\"i8* %str\")((x, y) => x + \", \" + pp_type(y._1) + \" \" + var_of_value(y._2))\n      \"call \" + pp_type(rt) + \" \" + f + \"(\" + s + \")\"\n    case Load(t, p) =>\n      \"load \" + pp_type(t) + \" \" + var_of_value(p) + \", align \" + align(t)\n    case Store(vt, v, pt, pv) =>\n      \"store \" + pp_type(vt) + \" \" + var_of_value(v) + \", \" + pp_type(pt) + \" \" +\n        var_of_value(pv) + \", align \" + align(vt)\n    case GetElementPtr(t, v, i) =>\n      \"getelementptr inbounds \" + pp_type(t) + \" \" + var_of_value(v) + \", i64 \" + var_of_value(i)\n  })\n```\n\n## \u6a5f\u68b0\u8a9e\u3068\u3057\u3066\u5fc5\u8981\u306a\u547d\u4ee4\u3092\u8ffd\u52a0\u3059\u308b\n\n\u3053\u308c\u3067\u547d\u4ee4\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u305f\u304c\u3001LLVM\u3068\u3057\u3066\u306e\u4f53\u88c1\u3092\u4fdd\u3064\u305f\u3081\u306b\u3044\u304f\u3064\u304b\u5fc5\u8981\u306a\u6a5f\u68b0\u8a9e\uff08\u4f8b\u3048\u3070`main`\u95a2\u6570\u3084\u3001`printf`\u95a2\u6570\u3092\u4f7f\u3046\u305f\u3081\u306e\u8af8\u3005\u306a\u3069\uff09\u3092\u8ffd\u52a0\u3059\u308b`make`\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```scala\ndef make(i: List[Inst]): String = {\n  val s =\n    \"@.match   = private unnamed_addr constant [7 x i8] c\\\"match\\\\0A\\\\00\\\", align 1\\n\"  +\n    \"@.unmatch = private unnamed_addr constant [9 x i8] c\\\"unmatch\\\\0A\\\\00\\\", align 1\\n\\n\" +\n    \"define i1 @test(i8* %str, i8* %l, i64 %sp_value) {\\n\" +\n    \"  %sp = alloca i64, align 8\\n\" +\n    \"  store i64 %sp_value, i64* %sp, align 8\\n\" +\n    \"  %isnull = icmp eq i8* %l, null\\n\" +\n    \"  br i1 %isnull, label %1, label %jump\\n\\n\" +\n    \"jump:\\n\" +\n    \"  indirectbr i8* %l, [\" +\n      i.foldRight(List[String]())((x, y) => x match {\n        case Label(n) => (\"label \" + var_of_value(n)) :: y\n        case _        => y\n      }).mkString(\", \") + \"]\\n\"\n\n  val llvmir = i.map(pp_inst(_, \"  \")).foldLeft(\"\")((x, y) => x + y + \"\\n\")\n\n  val e =\n    \"\\nmiss:\\n\" +\n    \"  ret i1 0\\n\\n\" +\n    \"match:\\n\" +\n    \"  ret i1 1\\n\" +\n    \"}\\n\\n\" +\n    \"define i32 @main(i32 %argc, i8** %argv) {\\n\" +\n    \"  %arg1 = getelementptr inbounds i8** %argv, i64 1\\n\" +\n    \"  %str  = load i8** %arg1, align 8\\n\" +\n    \"  %res  = call i1 @test(i8* %str, i8* null, i64 0)\\n\" +\n    \"  br i1 %res, label %match, label %unmatch\\n\\n\" +\n    \"match:\\n\" +\n    \"  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.match, i32 0, i32 0))\\n\" +\n    \"  br label %ret\\n\\n\" +\n    \"unmatch:\\n\" +\n    \"  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.unmatch, i32 0, i32 0))\\n\" +\n    \"  br label %ret\\n\\n\" +\n    \"ret:\\n\" +\n    \"  ret i32 0\\n\" +\n    \"}\\n\\n\" +\n    \"declare i32 @printf(i8*, ...)\"\n\n  s + llvmir + e\n}\n```\n\n# \u5177\u4f53\u4f8b\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\u306f[Gist](https://gist.github.com/yoshimuraYuu/8fba01232bfcc05656c5)\u306b\u7f6e\u3044\u3066\u3042\u308b\u307b\u304b\u3001[ideone](https://ideone.com/ahuaWI)\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\u8a66\u3057\u306b\u5076\u6570\u500b\u306e _b_ \u3068\u4efb\u610f\u306e\u6570\u306e _a_ \u304b\u3089\u306a\u308b\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308b\u6b63\u898f\u8868\u73fe`sa*(ba*ba*)*a*e`[^s_and_e]\u306b\u5bfe\u5fdc\u3059\u308bLLVM\u306e\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u3002\u307e\u305a\u3001\u3053\u306e\u6b63\u898f\u8868\u73fe\u3092\u6b21\u306e\u3088\u3046\u306a\u62bd\u8c61\u69cb\u6587\u6728\u3078\u624b\u52d5[^regex_parser]\u3067\u5909\u63db\u3059\u308b\u3002\n\n[^s_and_e]: \u3053\u306e\u6b63\u898f\u8868\u73fe\u306b\u306f\u6587\u5b57\u5217\u306e\u958b\u59cb\u3084\u7d42\u7aef\u3092\u8868\u3059\u65b9\u6cd5\u304c\u306a\u3044\u306e\u3067\u3001\u4e0e\u3048\u3089\u308c\u308b\u6587\u5b57\u5217\u304c _s_ \u304b\u3089\u59cb\u307e\u308a _e_ \u3067\u7d42\u308f\u308b\u3068\u4eee\u5b9a\u3057\u958b\u59cb\u3068\u7d42\u7aef\u3092\u64ec\u4f3c\u7684\u306b\u8868\u73fe\u3057\u3066\u3044\u308b\u3002\n\n```\nCon(Con(Let('s'), Con(Con(Star(Let('a')), Star(Con(Con(Let('b'), Star(Let('a'))), Con(Let('b'), Star(Let('a')))))), Star(Let('a')))), Let('e'))\n```\n\n\u3053\u308c\u3092\u5148\u7a0b\u306eScala\u3067\u66f8\u3044\u305f\u30b3\u30f3\u30d1\u30a4\u30e9\u306b\u6295\u5165\u3059\u308b\u3068\u3001\u6b21\u306e\u3088\u3046\u306aLLVM\u306e\u30b3\u30fc\u30c9\u304c\u5f97\u3089\u308c\u308b\u3002\n\n```llvm\n@.match   = private unnamed_addr constant [7 x i8] c\"match\\0A\\00\", align 1\n@.unmatch = private unnamed_addr constant [9 x i8] c\"unmatch\\0A\\00\", align 1\n\ndefine i1 @test(i8* %str, i8* %l, i64 %sp_value) {\n  %sp = alloca i64, align 8\n  store i64 %sp_value, i64* %sp, align 8\n  %isnull = icmp eq i8* %l, null\n  br i1 %isnull, label %1, label %jump\n\njump:\n  indirectbr i8* %l, [label %1, label %7, label %10, label %16, label %17, label %20, label %26, label %29, label %35, label %36, label %42, label %45, label %51, label %52, label %53, label %56, label %62, label %63, label %69]\n  \n; <label>:1\n  %2 = load i64* %sp, align 8\n  %3 = getelementptr inbounds i8* %str, i64 %2\n  %4 = add nsw i64 %2, 1\n  store i64 %4, i64* %sp, align 8\n  %5 = load i8* %3, align 8\n  %6 = icmp eq i8 %5, 115\n  br i1 %6, label %7, label %miss\n  \n; <label>:7\n  %8 = load i64* %sp, align 8\n  %9 = call i1 @test(i8* %str, i8* blockaddress(@test, %10), i64 %8)\n  br i1 %9, label %match, label %17\n  \n; <label>:10\n  %11 = load i64* %sp, align 8\n  %12 = getelementptr inbounds i8* %str, i64 %11\n  %13 = add nsw i64 %11, 1\n  store i64 %13, i64* %sp, align 8\n  %14 = load i8* %12, align 8\n  %15 = icmp eq i8 %14, 97\n  br i1 %15, label %16, label %miss\n  \n; <label>:16\n  br label %7\n  \n; <label>:17\n  %18 = load i64* %sp, align 8\n  %19 = call i1 @test(i8* %str, i8* blockaddress(@test, %20), i64 %18)\n  br i1 %19, label %match, label %53\n  \n; <label>:20\n  %21 = load i64* %sp, align 8\n  %22 = getelementptr inbounds i8* %str, i64 %21\n  %23 = add nsw i64 %21, 1\n  store i64 %23, i64* %sp, align 8\n  %24 = load i8* %22, align 8\n  %25 = icmp eq i8 %24, 98\n  br i1 %25, label %26, label %miss\n  \n; <label>:26\n  %27 = load i64* %sp, align 8\n  %28 = call i1 @test(i8* %str, i8* blockaddress(@test, %29), i64 %27)\n  br i1 %28, label %match, label %36\n  \n; <label>:29\n  %30 = load i64* %sp, align 8\n  %31 = getelementptr inbounds i8* %str, i64 %30\n  %32 = add nsw i64 %30, 1\n  store i64 %32, i64* %sp, align 8\n  %33 = load i8* %31, align 8\n  %34 = icmp eq i8 %33, 97\n  br i1 %34, label %35, label %miss\n  \n; <label>:35\n  br label %26\n  \n; <label>:36\n  %37 = load i64* %sp, align 8\n  %38 = getelementptr inbounds i8* %str, i64 %37\n  %39 = add nsw i64 %37, 1\n  store i64 %39, i64* %sp, align 8\n  %40 = load i8* %38, align 8\n  %41 = icmp eq i8 %40, 98\n  br i1 %41, label %42, label %miss\n  \n; <label>:42\n  %43 = load i64* %sp, align 8\n  %44 = call i1 @test(i8* %str, i8* blockaddress(@test, %45), i64 %43)\n  br i1 %44, label %match, label %52\n  \n; <label>:45\n  %46 = load i64* %sp, align 8\n  %47 = getelementptr inbounds i8* %str, i64 %46\n  %48 = add nsw i64 %46, 1\n  store i64 %48, i64* %sp, align 8\n  %49 = load i8* %47, align 8\n  %50 = icmp eq i8 %49, 97\n  br i1 %50, label %51, label %miss\n  \n; <label>:51\n  br label %42\n  \n; <label>:52\n  br label %17\n  \n; <label>:53\n  %54 = load i64* %sp, align 8\n  %55 = call i1 @test(i8* %str, i8* blockaddress(@test, %56), i64 %54)\n  br i1 %55, label %match, label %63\n  \n; <label>:56\n  %57 = load i64* %sp, align 8\n  %58 = getelementptr inbounds i8* %str, i64 %57\n  %59 = add nsw i64 %57, 1\n  store i64 %59, i64* %sp, align 8\n  %60 = load i8* %58, align 8\n  %61 = icmp eq i8 %60, 97\n  br i1 %61, label %62, label %miss\n  \n; <label>:62\n  br label %53\n  \n; <label>:63\n  %64 = load i64* %sp, align 8\n  %65 = getelementptr inbounds i8* %str, i64 %64\n  %66 = add nsw i64 %64, 1\n  store i64 %66, i64* %sp, align 8\n  %67 = load i8* %65, align 8\n  %68 = icmp eq i8 %67, 101\n  br i1 %68, label %69, label %miss\n  \n; <label>:69\n  br label %match\n\nmiss:\n  ret i1 0\n\nmatch:\n  ret i1 1\n}\n\ndefine i32 @main(i32 %argc, i8** %argv) {\n  %arg1 = getelementptr inbounds i8** %argv, i64 1\n  %str  = load i8** %arg1, align 8\n  %res  = call i1 @test(i8* %str, i8* null, i64 0)\n  br i1 %res, label %match, label %unmatch\n\nmatch:\n  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([7 x i8]* @.match, i32 0, i32 0))\n  br label %ret\n\nunmatch:\n  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([9 x i8]* @.unmatch, i32 0, i32 0))\n  br label %ret\n\nret:\n  ret i32 0\n}\n\ndeclare i32 @printf(i8*, ...)\n```\n\n\u751f\u6210\u3055\u308c\u305fLLVM\u306e\u6a5f\u68b0\u8a9e\u3092\u30a8\u30c7\u30a3\u30bf\u306a\u3069\u306b\u8cbc\u308a\u4ed8\u3051\u3066\u3001\u3053\u3053\u3067\u306f _regex.ll_ \u3068\u3044\u3046\u540d\u524d\u3067\u4fdd\u5b58\u3059\u308b\u3002\u305d\u3057\u3066\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u306bLLVM\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6b21\u306e\u3088\u3046\u306a\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\n\n```console\n$ llc regex.ll && gcc regex.s\n```\n\n\u6210\u529f\u3059\u308b\u3068 _a.out_ \u3068\u3044\u3046\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3067\u304d\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u306e\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u30de\u30c3\u30c1\u3055\u305b\u305f\u3044\u6587\u5b57\u5217\u3092\u4e0e\u3048\u308c\u3070\u3001\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```console\n$ ./a.out saabbaabbe\nmatch\n\n$ ./a.out saabbaabbabe\nunmatch\n```\n\n# \u307e\u3068\u3081\n\n\u6700\u5c0f\u306e\u6b63\u898f\u8868\u73fe\u3092LLVM\u3078\u5909\u63db\u3059\u308b\u30b3\u30fc\u30c9\u306f\u898f\u6a21\u3067\u8a00\u3048\u3070200\u884c\u7a0b\u5ea6\u306a\u306e\u3067\u3001\u5272\u3068\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u305f\u3068\u601d\u3046\u3002\u4eca\u56de\u306f\u30b7\u30f3\u30d7\u30eb\u306b\u5b9f\u88c5\u3059\u308b\u3053\u3068\u304c\u76ee\u6a19\u3060\u3063\u305f\u306e\u3067\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306a\u3069\u306f\u53d6\u3063\u3066\u3044\u306a\u3044\u304c\u3001\u4f55\u304b\u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3066\u307f\u308b\u306e\u3082\u304a\u3082\u3057\u308d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n# \u53c2\u8003\u6587\u732e\n\n- [\u6b63\u898f\u8868\u73fe\u6280\u8853\u5165\u9580](http://www.amazon.co.jp/dp/4774172707)\n- [Regular Expression Matching: the Virtual Machine Approach](https://swtch.com/~rsc/regexp/regexp2.html)\n- [\u304d\u3064\u306d\u3055\u3093\u3067\u3082\u308f\u304b\u308bLLVM ~\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u81ea\u4f5c\u3059\u308b\u305f\u3081\u306e\u30ac\u30a4\u30c9\u30d6\u30c3\u30af~](http://www.amazon.co.jp/dp/4844334158)\n- [LLVM Language Reference Manual](http://llvm.org/docs/LangRef.html)\n\n# \u95a2\u9023\u6587\u732e\n\n- [\u6b63\u898f\u8868\u73fe\u306f\u304a\u597d\u304d?](http://steps.dodgson.org/bn/2007/12/15/)\n- [Ruby\u306b\u3088\u308b\u6b63\u898f\u8868\u73fe\u30b3\u30f3\u30d1\u30a4\u30e9(\u305d\u306e2)](http://d.hatena.ne.jp/miura1729/20080925/1222330236)\n", "tags": ["\u6b63\u898f\u8868\u73fe", "LLVM", "Scala", "\u30b3\u30f3\u30d1\u30a4\u30e9"]}