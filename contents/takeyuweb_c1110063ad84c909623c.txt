{"context": " More than 1 year has passed since last update.AWS SDK for Ruby V2\u306eCognitoIdentity::Client\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nlogins = {\n    'graph.facebook.com' => 'facebook_oauth2_access_token',\n    'api.twitter.com' => ['twitter_user_token', 'twitter_user_secret'].join(';')\n}\n\ncognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\nresp = cognito.get_id(\n    identity_pool_id: 'us-east-1:XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX',\n    logins: logins\n)\npp resp.identity_id # => \"us-east-1:YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY\"\n\n\n\u8aac\u660e\n\u307e\u305a\u3001Cognito\u3092\u4f7f\u3046\u3068\u304d\u3001Facebook\u3084Twitter\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u64cd\u4f5c\u306f\u3001\u81ea\u524d\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08Amazon Cognito\u5074\u3067\u306f\u306a\u3044\uff09\n\u5229\u7528\u3059\u308b\u969b\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092Cognito\u306b\u6e21\u3059\u3053\u3068\u3067\u3001Cognito\u306e\u5074\u3067\u30e6\u30fc\u30b6\u30fcID\u7b49\u3092\u53d6\u5f97\u3057\u3066\u3001Cognito ID\u3092\u5272\u308a\u5f53\u3066\u3066\u304f\u308c\u307e\u3059\u3002\n\u305d\u306e\u969b\u306b\u3001\u8907\u6570\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u6e21\u3059\u3053\u3068\u3067\u3001\u305d\u308c\u3089\u30921\u3064\u306eCognito ID\u306b\u5272\u308a\u5f53\u3066\u308b\u51e6\u7406\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u306f\u3053\u306eCognito ID\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u3092\u8b58\u5225\u3059\u308b\u3053\u3068\u3067\u3001\u7c21\u5358\u306b\u540d\u5bc4\u305b\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u30d7\u30ed\u30d0\u30a4\u30c0\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e96\u5099\nlogins = {\n    'graph.facebook.com' => 'facebook_oauth2_access_token',\n    'api.twitter.com' => ['twitter_user_token', 'twitter_user_secret'].join(';')\n}\n\n'\u30d7\u30ed\u30d0\u30a4\u30c0' => '\u30c8\u30fc\u30af\u30f3'\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u308a\u307e\u3059\u3002\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u304c\u3001Twitter\u306b\u3064\u3044\u3066\u306fAPI\u304b\u3089\u5f97\u3089\u308c\u308btoken\u3068secret\u3092;\u3067\u3064\u306a\u3044\u3060\u6587\u5b57\u5217\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nAws::CognitoIdentity::Client\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CognitoIdentity/Client.html#initialize-instance_method\ncognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\n\n\nAws::CognitoIdentity::Client#get_id\u3067Cognito ID\u3092\u5f97\u308b\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CognitoIdentity/Client.html#get_id-instance_method\nresp = cognito.get_id(\n    identity_pool_id: 'us-east-1:XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX',\n    logins: logins\n)\npp resp.identity_id # => \"us-east-1:YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY\"\n\n\u4e8b\u524d\u306b\u4f5c\u6210\u3057\u3066\u304a\u3044\u305fIdentity Pool\u306eID\uff08REGION:GUID\u5f62\u5f0f\uff09\u3068\u3001\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3057\u307e\u3059\u3002\n\u5fdc\u7b54\u306e#identity_id\u3067REGION:GUID\u5f62\u5f0f\u306eCognitoID\u3092\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u3053\u306eAPI\u306f\u516c\u958bAPI\u306a\u306e\u3067\u3001AWS\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u4e0d\u8981\u3068\u306e\u3053\u3068\u3002\n\nRails + Omniauth\u3067\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u3001\u5b9f\u969b\u306b\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u3092\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nclass AuthController < ApplicationController\n  # GET /auth/:provider/callback\n  def callback\n    # current_user.logins\n    # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306a\u3089\u30e6\u30fc\u30b6\u30fc\u306e\uff08\u6709\u52b9\u671f\u9650\u5185\u306e\uff09\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u5f97\u308b\u3001\n    # \u672a\u30ed\u30b0\u30a4\u30f3\u306a\u3089\u7a7a\u306e\u914d\u5217\u3092\u7528\u610f\u3059\u308b\n    logins = current_user.present? ? current_user.logins : {}\n    # \u4eca\u56de\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30c8\u30fc\u30af\u30f3\u3092\u6e96\u5099\u3059\u308b\n    case omniauth[:provider]\n      when 'facebook'\n        logins['graph.facebook.com']  = omniauth[:credentials][:token]\n      when 'twitter'\n        logins['api.twitter.com']  = [omniauth[:credentials][:token], omniauth[:credentials][:secret]].join(';')\n      else\n        raise 'Unknown Provider'\n    end\n\n    # Cognito ID\u306e\u53d6\u5f97\u3057\u3001\u305d\u308c\u3092\u30e6\u30fc\u30b6\u30fc\u306e\u8b58\u5225\u306b\u4f7f\u3046\n    cognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\n    resp = cognito.get_id(\n        identity_pool_id: Rails.application.secrets.aws_cognito_identity_pool_id,\n        logins: logins,\n    )\n    identity_id= resp.identity_id\n    Rails.logger.debug \"Cognito IdentityID: #{identity_id}\"\n    user = User.where(identity: identity_id).first_or_create\n\n    # Credential.provide_for(provider_name)\n    # \u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u5bfe\u5fdc\u3059\u308bSTI\u30af\u30e9\u30b9\uff08TwitterCredential\u3068\u304bFacebookCredential\u3068\u304b\u3092\u8fd4\u3059\uff09\n    if provider_class = Credential.provide_for(omniauth[:provider])\n      # \u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3002\u540c\u4e00\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u53e4\u3044\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308c\u3070\u524a\u9664\u3002\n      # \uff08\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u30b5\u30fc\u30d0\u3067\u6301\u3063\u3066\u7f6e\u3044\u3066\u5fc5\u8981\u306a\u6642\u3084\u540d\u5bc4\u305b\u306e\u6642\u306b\u4f7f\u3044\u307e\u3059\uff09\n      provider_class.from_user_omniauth(\n          user: user,\n          omniauth: omniauth)\n    else\n      Rails.logger.error \"Unsupported provider: #{omniauth[:provider]}\"\n    end\n\n    # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5165\u308c\u3066\u304a\u304f\n    session[:user_id] = user.id\n\n    redirect_to root_url\n  end\n\n  def logout\n    session.delete(:user_id)\n    redirect_to root_url\n  end\n\n  private\n  def omniauth\n    request.env['omniauth.auth']\n  end\nend\n\n\n\n\u611f\u60f3\nCognito\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5272\u3068\u9762\u5012\u306a\u540d\u5bc4\u305b\u3092\u4e0a\u624b\u304f\u5b9f\u88c5\u3067\u304d\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\nTokyo\u30ea\u30fc\u30b8\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u7528\u9014\u7684\u306b\u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u500b\u4eba\u7684\u306b\u306f\u591a\u5c11\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u9ad8\u3055\u306f\u6c17\u306b\u306a\u3089\u306a\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n[AWS SDK for Ruby V2](http://docs.aws.amazon.com/sdkforruby/api/)\u306eCognitoIdentity::Client\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n```rb\nlogins = {\n    'graph.facebook.com' => 'facebook_oauth2_access_token',\n    'api.twitter.com' => ['twitter_user_token', 'twitter_user_secret'].join(';')\n}\n\ncognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\nresp = cognito.get_id(\n    identity_pool_id: 'us-east-1:XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX',\n    logins: logins\n)\npp resp.identity_id # => \"us-east-1:YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY\"\n```\n\n## \u8aac\u660e\n\n\u307e\u305a\u3001Cognito\u3092\u4f7f\u3046\u3068\u304d\u3001Facebook\u3084Twitter\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\u64cd\u4f5c\u306f\u3001\u81ea\u524d\u3067\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\uff08Amazon Cognito\u5074\u3067\u306f\u306a\u3044\uff09\n\n\u5229\u7528\u3059\u308b\u969b\u306f\u4e8b\u524d\u306b\u53d6\u5f97\u3057\u305f\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092Cognito\u306b\u6e21\u3059\u3053\u3068\u3067\u3001Cognito\u306e\u5074\u3067\u30e6\u30fc\u30b6\u30fcID\u7b49\u3092\u53d6\u5f97\u3057\u3066\u3001Cognito ID\u3092\u5272\u308a\u5f53\u3066\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u305d\u306e\u969b\u306b\u3001\u8907\u6570\u306e\u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30c8\u30fc\u30af\u30f3\u3092\u30cf\u30c3\u30b7\u30e5\u3067\u6e21\u3059\u3053\u3068\u3067\u3001\u305d\u308c\u3089\u30921\u3064\u306eCognito ID\u306b\u5272\u308a\u5f53\u3066\u308b\u51e6\u7406\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u3067\u306f\u3053\u306eCognito ID\u3092\u4f7f\u3063\u3066\u30e6\u30fc\u30b6\u30fc\u3092\u8b58\u5225\u3059\u308b\u3053\u3068\u3067\u3001\u7c21\u5358\u306b\u540d\u5bc4\u305b\u3092\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n### \u30d7\u30ed\u30d0\u30a4\u30c0\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e96\u5099\n\n```rb\nlogins = {\n    'graph.facebook.com' => 'facebook_oauth2_access_token',\n    'api.twitter.com' => ['twitter_user_token', 'twitter_user_secret'].join(';')\n}\n```\n\n`'\u30d7\u30ed\u30d0\u30a4\u30c0' => '\u30c8\u30fc\u30af\u30f3'`\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u308a\u307e\u3059\u3002[\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.aws.amazon.com/cognito/devguide/identity/external-providers/twitter/)\u306b\u8a18\u8f09\u304c\u3042\u308a\u307e\u3059\u304c\u3001Twitter\u306b\u3064\u3044\u3066\u306fAPI\u304b\u3089\u5f97\u3089\u308c\u308b`token`\u3068`secret`\u3092`;`\u3067\u3064\u306a\u3044\u3060\u6587\u5b57\u5217\u3092\u4f7f\u3046\u5fc5\u8981\u304c\u3042\u308b\u70b9\u306b\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n### Aws::CognitoIdentity::Client\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\n\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CognitoIdentity/Client.html#initialize-instance_method\n\n```rb \ncognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\n```\n\n### Aws::CognitoIdentity::Client#get_id\u3067Cognito ID\u3092\u5f97\u308b\n\nhttp://docs.aws.amazon.com/sdkforruby/api/Aws/CognitoIdentity/Client.html#get_id-instance_method\n\n```rb \nresp = cognito.get_id(\n    identity_pool_id: 'us-east-1:XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX',\n    logins: logins\n)\npp resp.identity_id # => \"us-east-1:YYYYYYYY-YYYY-YYYY-YYYY-YYYYYYYYYYYY\"\n```\n\n\u4e8b\u524d\u306b\u4f5c\u6210\u3057\u3066\u304a\u3044\u305fIdentity Pool\u306eID\uff08REGION:GUID\u5f62\u5f0f\uff09\u3068\u3001\u5148\u307b\u3069\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3057\u307e\u3059\u3002\n\n\u5fdc\u7b54\u306e`#identity_id`\u3067REGION:GUID\u5f62\u5f0f\u306eCognitoID\u3092\u5f97\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u306a\u304a\u3001\u3053\u306eAPI\u306f\u516c\u958bAPI\u306a\u306e\u3067\u3001AWS\u306e\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u4e0d\u8981\u3068\u306e\u3053\u3068\u3002\n\n## Rails + Omniauth\u3067\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u3001\u5b9f\u969b\u306b\u5b9f\u9a13\u3057\u305f\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u3092\u5f35\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n```rb \nclass AuthController < ApplicationController\n  # GET /auth/:provider/callback\n  def callback\n    # current_user.logins\n    # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306a\u3089\u30e6\u30fc\u30b6\u30fc\u306e\uff08\u6709\u52b9\u671f\u9650\u5185\u306e\uff09\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u5f97\u308b\u3001\n    # \u672a\u30ed\u30b0\u30a4\u30f3\u306a\u3089\u7a7a\u306e\u914d\u5217\u3092\u7528\u610f\u3059\u308b\n    logins = current_user.present? ? current_user.logins : {}\n    # \u4eca\u56de\u30ed\u30b0\u30a4\u30f3\u3057\u305f\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u30c8\u30fc\u30af\u30f3\u3092\u6e96\u5099\u3059\u308b\n    case omniauth[:provider]\n      when 'facebook'\n        logins['graph.facebook.com']  = omniauth[:credentials][:token]\n      when 'twitter'\n        logins['api.twitter.com']  = [omniauth[:credentials][:token], omniauth[:credentials][:secret]].join(';')\n      else\n        raise 'Unknown Provider'\n    end\n\n    # Cognito ID\u306e\u53d6\u5f97\u3057\u3001\u305d\u308c\u3092\u30e6\u30fc\u30b6\u30fc\u306e\u8b58\u5225\u306b\u4f7f\u3046\n    cognito = Aws::CognitoIdentity::Client.new(region: 'us-east-1')\n    resp = cognito.get_id(\n        identity_pool_id: Rails.application.secrets.aws_cognito_identity_pool_id,\n        logins: logins,\n    )\n    identity_id= resp.identity_id\n    Rails.logger.debug \"Cognito IdentityID: #{identity_id}\"\n    user = User.where(identity: identity_id).first_or_create\n\n    # Credential.provide_for(provider_name)\n    # \u8a8d\u8a3c\u30d7\u30ed\u30d0\u30a4\u30c0\u306b\u5bfe\u5fdc\u3059\u308bSTI\u30af\u30e9\u30b9\uff08TwitterCredential\u3068\u304bFacebookCredential\u3068\u304b\u3092\u8fd4\u3059\uff09\n    if provider_class = Credential.provide_for(omniauth[:provider])\n      # \u30e6\u30fc\u30b6\u30fc\u3068\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u3092\u95a2\u9023\u4ed8\u3051\u308b\u3002\u540c\u4e00\u30d7\u30ed\u30d0\u30a4\u30c0\u306e\u53e4\u3044\u30c8\u30fc\u30af\u30f3\u304c\u3042\u308c\u3070\u524a\u9664\u3002\n      # \uff08\u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306f\u30b5\u30fc\u30d0\u3067\u6301\u3063\u3066\u7f6e\u3044\u3066\u5fc5\u8981\u306a\u6642\u3084\u540d\u5bc4\u305b\u306e\u6642\u306b\u4f7f\u3044\u307e\u3059\uff09\n      provider_class.from_user_omniauth(\n          user: user,\n          omniauth: omniauth)\n    else\n      Rails.logger.error \"Unsupported provider: #{omniauth[:provider]}\"\n    end\n\n    # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\u30fc\u3092\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u5165\u308c\u3066\u304a\u304f\n    session[:user_id] = user.id\n\n    redirect_to root_url\n  end\n\n  def logout\n    session.delete(:user_id)\n    redirect_to root_url\n  end\n\n  private\n  def omniauth\n    request.env['omniauth.auth']\n  end\nend\n\n```\n\n## \u611f\u60f3\n\nCognito\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5272\u3068\u9762\u5012\u306a\u540d\u5bc4\u305b\u3092\u4e0a\u624b\u304f\u5b9f\u88c5\u3067\u304d\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\n\nTokyo\u30ea\u30fc\u30b8\u30e7\u30f3\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001\u7528\u9014\u7684\u306b\u983b\u7e41\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u500b\u4eba\u7684\u306b\u306f\u591a\u5c11\u306e\u30ec\u30a4\u30c6\u30f3\u30b7\u306e\u9ad8\u3055\u306f\u6c17\u306b\u306a\u3089\u306a\u3044\u304b\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "tags": ["Ruby", "AWS", "cognito"]}