{"context": " More than 1 year has passed since last update.Symfony2\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u3067\u6bce\u56de\u3044\u3061\u3044\u3061\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nconfig.yml, parameters.yml, ExceptionListener\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\napp/config/config.yml\nacme.exception_listener:\n        class: Acme\\AppBundle\\EventListener\\ExceptionListener\n        arguments:\n            - %admin_emails%\n            - @mailer\n            - @logger\n        tags:\n            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: +255 }\n\n\napp/config/paramerters.yml\nparameters:\n    mailer_transport:  sendmail\n    mailer_host:       localhost\n    mailer_user:       ~\n    mailer_password:   ~\n\n    admin_emails: ['foo@example.org', 'bar@example.org']\n\n\nsrc\\Acme\\AppBundle\\EventListener\\ExceptionListener.php\n<?php\n\nnamespace Acme\\AppBundle\\EventListener;\n\nuse Symfony\\Component\\HttpKernel\\Event\\GetResponseForExceptionEvent;\nuse Symfony\\Component\\HttpKernel\\KernelEvents;\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nuse Monolog\\Logger;\n\nclass ExceptionListener implements EventSubscriberInterface\n{\n    /**\n     * @var array\n     */\n    private $recipients;\n\n    /**\n     * @var \\Swift_Mailer\n     */\n    private $mailer;\n\n    /**\n     * @var \\Monolog\\Logger\n     */\n    private $logger;\n\n    public function __construct(Array $recipients, \\Swift_Mailer $mailer, Logger $logger)\n    {\n        $this->recipients = $recipients;\n\n        $this->mailer = $mailer;\n        $this->logger = $logger;\n    }\n\n    public function onKernelException(GetResponseForExceptionEvent $event)\n    {\n        $e = $event->getException();\n\n        $message = \\Swift_Message::newInstance()\n          ->setSubject($e->getMessage())\n          ->setBody($e->__toString())\n          ->setTo($this->recipients)\n          ->setFrom(\"error@example.com\");\n\n        try {\n            $this->mailer->send($message);\n            $this->logger->crit(\"send exception to administrator\");\n        } catch (\\Exception $e) {\n            // oops.. mail send won't work... (in japanese says \u4e07\u7b56\u5c3d\u304d\u305f! \u5207\u8179(seppuku) !)\n            $this->logger->crit(\"!!! EMERGENCY HELP ME !!! We can't notify to a human administrator!\");\n        }\n\n        $event->setResponse(new Response());\n\n        return false;\n    }\n\n    public static function getSubscribedEvents()\n    {\n        return array(\n            KernelEvents::EXCEPTION => array('onKernelException', +255),\n        );\n    }\n}\n\n\n\u53c2\u8003\nhttp://symfony.com/doc/2.0/cookbook/email/email.html\nhttp://symfony.com/doc/current/cookbook/service_container/event_listener.html\nhttp://symfony.com/doc/2.0/reference/dic_tags.html#kernel-exception\n\nSymfony2\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u4f8b\u5916\u30cf\u30f3\u30c9\u30e9\u3092\u8ffd\u52a0\u3057\u3066\u3001\u30a2\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u3067\u6bce\u56de\u3044\u3061\u3044\u3061\u4f8b\u5916\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nconfig.yml, parameters.yml, ExceptionListener\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n## app/config/config.yml\n```yaml\nacme.exception_listener:\n        class: Acme\\AppBundle\\EventListener\\ExceptionListener\n        arguments:\n            - %admin_emails%\n            - @mailer\n            - @logger\n        tags:\n            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException, priority: +255 }\n```\n\n## app/config/paramerters.yml\n```yaml\nparameters:\n    mailer_transport:  sendmail\n    mailer_host:       localhost\n    mailer_user:       ~\n    mailer_password:   ~\n\n    admin_emails: ['foo@example.org', 'bar@example.org']\n```\n\n## src\\Acme\\AppBundle\\EventListener\\ExceptionListener.php\n\n```php\n<?php\n\nnamespace Acme\\AppBundle\\EventListener;\n\nuse Symfony\\Component\\HttpKernel\\Event\\GetResponseForExceptionEvent;\nuse Symfony\\Component\\HttpKernel\\KernelEvents;\nuse Symfony\\Component\\EventDispatcher\\EventSubscriberInterface;\nuse Symfony\\Component\\HttpFoundation\\Response;\n\nuse Monolog\\Logger;\n\nclass ExceptionListener implements EventSubscriberInterface\n{\n    /**\n     * @var array\n     */\n    private $recipients;\n\n    /**\n     * @var \\Swift_Mailer\n     */\n    private $mailer;\n\n    /**\n     * @var \\Monolog\\Logger\n     */\n    private $logger;\n\n    public function __construct(Array $recipients, \\Swift_Mailer $mailer, Logger $logger)\n    {\n        $this->recipients = $recipients;\n\n        $this->mailer = $mailer;\n        $this->logger = $logger;\n    }\n\n    public function onKernelException(GetResponseForExceptionEvent $event)\n    {\n        $e = $event->getException();\n\n        $message = \\Swift_Message::newInstance()\n          ->setSubject($e->getMessage())\n          ->setBody($e->__toString())\n          ->setTo($this->recipients)\n          ->setFrom(\"error@example.com\");\n\n        try {\n            $this->mailer->send($message);\n            $this->logger->crit(\"send exception to administrator\");\n        } catch (\\Exception $e) {\n            // oops.. mail send won't work... (in japanese says \u4e07\u7b56\u5c3d\u304d\u305f! \u5207\u8179(seppuku) !)\n            $this->logger->crit(\"!!! EMERGENCY HELP ME !!! We can't notify to a human administrator!\");\n        }\n\n        $event->setResponse(new Response());\n\n        return false;\n    }\n\n    public static function getSubscribedEvents()\n    {\n        return array(\n            KernelEvents::EXCEPTION => array('onKernelException', +255),\n        );\n    }\n}\n```\n\n\n## \u53c2\u8003\nhttp://symfony.com/doc/2.0/cookbook/email/email.html\nhttp://symfony.com/doc/current/cookbook/service_container/event_listener.html\nhttp://symfony.com/doc/2.0/reference/dic_tags.html#kernel-exception", "tags": ["Symfony2", "PHP"]}