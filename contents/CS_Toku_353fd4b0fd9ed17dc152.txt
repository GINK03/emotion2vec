{"tags": ["Python2", "python3", "Python"], "context": "\n\n\u521d\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u3001Python \u305d\u306e2 Advent Calendar 2015\u306e9\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u308f\u3051\n\u50d5\u304cPython\u521d\u3081\u3066\u66f8\u3044\u305f\u306e\u304c4\u5e74\u524d\u3067\u3068\u3066\u3082\u3088\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3044\u3001\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u306a\u3069\u306f\u3044\u3064\u3082Python\u3067\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\u521d\u3081\u306b\u66f8\u3044\u305f\u306e\u306fPython2.7\u3067\u3057\u305f\u304c\u3001\u8abf\u3079\u3066\u3044\u305f\u3089Python3\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u3001\u65b0\u3057\u3044\u3082\u306e\u597d\u304d\u3060\u3063\u305f\u306e\u3067\u672c\u6c17\u3067\u5b66\u307c\u3046\u3068\u3057\u59cb\u3081\u305f\u6642\u306fPython3.3\u3092\u4f7f\u3063\u3066\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u30012\u7cfb\u306e\u8a71\u306a\u3069\u306f\u307b\u3068\u3093\u3069\u77e5\u3089\u305a\u3001\u308f\u3056\u308f\u3056\u53e4\u3044(\u3068\u3044\u3063\u3066\u3082\u5f53\u6642\u306f2\u7cfb\u304c\u30e1\u30a4\u30f3\u3067\u3057\u305f\u304c)\u3082\u306e\u3092\u5b66\u3076\u5fc5\u8981\u3082\u306a\u3044\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u3002\n\u304c\u3002\n2\u7cfb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c3\u7cfb\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u30012\u7cfb\u3067\u66f8\u304b\u308c\u3066\u3044\u30663\u7cfb\u306b\u81ea\u5206\u3067\u7f6e\u304d\u63db\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306a\u3069\u8272\u3005\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\u3068\u307e\u3041\u3001\u3068\u306b\u304b\u304f2\u7cfb\u30683\u7cfb\u306e\u9055\u3044\u3092\u5b66\u7fd2\u3064\u3044\u3067\u306b\u307e\u3068\u3081\u3066\u898b\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n(\u3059\u3067\u306b3\u7cfb\u304c\u3067\u3066\u304b\u30897\u5e74\u4f4d\u7d4c\u3063\u3066\u3044\u308b\u306e\u306f\u7f6e\u3044\u3068\u3044\u3066\u30fb\u30fb\u30fb)\n(\u3055\u3089\u306b\u3001\u4ed6\u306e\u7d20\u6674\u3089\u3057\u3044\u65b9\u3005\u304c\u7d20\u6674\u3089\u3057\u3044\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u3089\u3063\u3057\u3083\u308b\u306e\u3082\u7f6e\u3044\u3068\u3044\u3066\u30fb\u30fb\u30fb(T_T))\n\n\u672c\u984c\u306b\u5165\u308b\u524d\u306b\u30fb\u30fb\n\n\u66f8\u304d\u59cb\u3081\u305f\u969b\u306fPython2\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Python3.0\u307e\u3067\u3067\u304b\u306a\u308a\u306e\u9577\u3055\u306b\u306a\u3063\u305f\u306e\u3067Python3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306f\u5225\u8a18\u4e8b\u306b\u66f8\u304d\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5de6\u4e0a\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nPython\u306e\u77e5\u8b58\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9\u5411\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3061\u3087\u308d\u3063\u3068\u89e6\u3063\u305f\u3053\u3068\u3042\u308b\u65b9\u306a\u3089\u591a\u5206\u5927\u4e08\u592b\uff01\n\u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u7a81\u5982\u51fa\u3066\u304f\u308b\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u306f\u4e00\u3064\u524d\u306e\u5b9f\u884c\u7d50\u679c\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\nPython3\n>>> 1+1\n2\n>>> _\n2\n>>> 2+3\n5\n>>> _ -3\n2\n>>> type(_)\n<class 'int'>\n>>> _\n<class 'int'>\n\n\n\u305d\u308c\u3067\u306f\u3001\u7d50\u69cb\u9577\u3044\u3067\u3059\u304c\uff08\u7b11\uff09\n\u9811\u5f35\u3063\u3066\u304d\u307e\u3057\u3087\u3046\uff01\n\nPython2 -> Python3.0\n\nprint\u304c\u6587\u304b\u3089\u95a2\u6570\u306b\u5909\u66f4\n\nPython2\n>>> print 'Hello'\nHello\n\n\n\nPython3\n>>> print('Hello')\nHello\n\n\nPython3\u3067\u306e\u5b9a\u7fa9\u306f\u3053\u3093\u306a\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\ndef print(*args, sep=' ', end='\\n', file=None)\n\n\u30bf\u30d7\u30eb\u3092\u8868\u793a\u3055\u305b\u3088\u3046\u3068\u3057\u305f\u6642\u3068\u304b\u56f0\u308b\u306e\u304b\u306a\u3002\n\nPython2\n>>> print ('item1', 'item2')\n('item1', 'item2')\n\n\n\nPython3\n>>> print ('item1', 'item2')\nitem1 item2\n>>> print(('item1', 'item2'), )\n('item1', 'item2')\n\n\n\n\u30ea\u30b9\u30c8\u306e\u4ee3\u308f\u308a\u306bViews\u3084\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\nViews\u3063\u3066\u30ca\u30f3\u30ce\u30b3\u30c3\u30c1\u30e3\u3002\n\u307e\u3041\u3001\u7d50\u679c\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\ndict\u306e\u30e1\u30bd\u30c3\u30c9\u3001keys, items, values\u306fViews\u3092\u8fd4\u3059\n\nPython2\n>>> d = {\"key1\": \"value1\"}\n>>> d.keys()\n['key1']\n>>> type(_)\n<type 'list'>\n>>> d.values()\n['value1']\n>>> d.items()\n[('key1', 'value1')]\n\n\n\nPython3\n>>> d = {\"key1\": \"value1\"}\n>>> d.keys()\n<dict_keys object at 0x7f0da5268e18>\n>>> type(_)\n<class 'dict_keys'>\n>>> d.values()\n<dict_values object at 0x7f0da5268e18>\n>>> d.items()\n<dict_items object at 0x7f0da3a44638>\n\n\nPython2\u3067\u306f\u5168\u3066\u30ea\u30b9\u30c8\u3067\u3001Python3\u3067\u306fdict_keys\u306a\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u8fd4\u3063\u3066\u304d\u3066\u307e\u3059\u306d\u3002\n\u3053\u308c\u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u3053\u308c\u3092Views\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\nPython3\u3067\u30ea\u30b9\u30c8\u3068\u3057\u3066\u6b32\u3057\u3051\u308c\u3070list()\u3067\u30e9\u30c3\u30d7\u3057\u307e\u3057\u3087\u3046\u3002\n\nPython3\n>>> list(d.keys())\n['key1']\n\n\n\ndict\u306e\u30e1\u30bd\u30c3\u30c9\u3001iterkeys, iteritems, itervalues\u306e\u5ec3\u6b62\n\nPython2\n>>> d.iterkeys()\n<dictionary-keyiterator object at 0x7f5b586155d0>\n>>> type(_)\n<type 'dictionary-keyiterator'>\n\n\n\nPython3\n>>> d.iterkeys()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'dict' object has no attribute 'iterkeys'\n\n\n\u307e\u30fc\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\u3002keys\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u8fd4\u3059\u3093\u3067\u3059\u304b\u3089\u3002\n\nmap, filter\u95a2\u6570\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3059\n\nPython2\n>>> f1 = lambda x : x + 1\n>>> f2 = lambda x : x%2 == 0\n>>> l = [1, 2, 3]\n>>> map(f1, l)\n[2, 3, 4]\n>>> type(_)\n<type 'list'>\n>>> filter(f2, l)\n[2]\n>>> type(_)\n<type 'list'>\n\n\n\nPython3\n>>> iter_check = lambda obj : hasattr(obj, '__iter__') and hasattr(obj, '__next__')\n>>> isIterable = lambda obj : hasattr(obj, '__iter__')\n>>> f1 = lambda x : x + 1\n>>> f2 = lambda x : x%2 == 0\n>>> l = [1, 2, 3]\n>>> map(f1, l)\n<map object at 0x7f0da5261950>\n>>> map_obj = _\n>>> type(map_obj)\n<class 'map'>\n>>> iter_check(map_obj)\nTrue\n>>>\n>>> filter(f2, l)\n<filter object at 0x7f0da52619d0>\n>>> filter_obj = _\n>>> type(filter_obj)\n<class 'filter'>\n>>> iter_check(filter_obj)\nTrue\n\n\nlambda\u306e\u6240\u306e\u5185\u5bb9\u306f\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\uff08\u7b11\uff09\n\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u304b\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306a\u306e\u304b\u306a\u3069\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\nPython2\u3067\u306f\u30ea\u30b9\u30c8\u3001Pyhton3\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u304c\u8fd4\u3063\u3066\u304d\u3066\u307e\u3059\u306d\u3002\n\nPython3\u306erange\u95a2\u6570\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059(Python2\u3067\u306exrange)\u3002xrange\u306f\u5ec3\u6b62\n\nPython2\n>>> iter_check = lambda obj : hasattr(obj, '__iter__') and hasattr(obj, '__next__')\n>>> isIterable = lambda obj : hasattr(obj, '__iter__')\n>>> type(range(1,10))\n<type 'list'>\n>>> type(xrange(1,10))\n<type 'xrange'>\n>>> iter_check(xrange(1,10))\nFalse\n>>> isIterable(xrange(1,10))\nTrue\n\n\n\nPython3\n>>> type(range(1,10))\n<class 'range'>\n>>> type(iter(range(1,10)))\n<class 'range_iterator'>\n>>> xrange(1,10)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'xrange' is not defined\n\n\nPython3\u3067\u306frange\u304c\u30ea\u30b9\u30c8\u3067\u306f\u306a\u304f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066xrange\u306f\u304a\u4ea1\u304f\u306a\u308a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff81\uff70\uff9d\n\nzip\u95a2\u6570\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3059\n\nPython2\n>>> zip([1,2,3], [2,3,4])\n[(1, 2), (2, 3), (3, 4)]\n>>> type(_)\n<type 'list'>\n\n\n\nPython3\n>>> zip([1,2,3], [2,3,4])\n<zip object at 0x7f0da3a40cf8>\n>>> iter_check(_)\nTrue\n\n\nPython3\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u9806\u5e8f\u6bd4\u8f03\n\n\u6bd4\u8f03\u6f14\u7b97\u5b50(<, >, <=, >=)\u306f\u3001\u305d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u81ea\u7136\u306a\u9806\u5e8f\u4ed8\u3051\u3092\u6301\u305f\u306a\u3044\u5834\u5408TypeError\u3092\u9001\u51fa\u3059\u308b\n\nPython2\n>>> 1 < 'a'\nTrue\n>>> 0 > None\nTrue\n>>> len <= len\nTrue\n>>> None < None\nFalse\n\n\n\nPython3\n>>> 1 < 'a'\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: int() < str()\n>>> 0 > None\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: int() > NoneType()\n>>> len <= len\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: builtin_function_or_method() <= builtin_function_or_method()\n>>> None < None\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: NoneType() < NoneType()\n\n\n\u3053\u308c\u3001\u81ea\u5206\u521d\u3081\u3066\u77e5\u308a\u307e\u3057\u305f\u3002Python2\u3072\u3069\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\n\u3067\u3059\u304cPython3\u3067\u306f\u3057\u3063\u304b\u308a\u4f8b\u5916\u3092\u6295\u3052\u3066\u304f\u308c\u308b\u306e\u3067\u5b89\u5fc3\u3067\u3059\u306d\uff01\n\nsorted\u95a2\u6570\u3068list\u306esort\u30e1\u30bd\u30c3\u30c9\u306f\u6bd4\u8f03\u95a2\u6570\u3092\u4e0e\u3048\u308bcmp\u5f15\u6570\u3092\u53d6\u3089\u306a\u304f\u306a\u3063\u305f\nPython2\u3067\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\nsorted(iterable[, cmp[, key[, reverse]]])\ns.sort([cmp[, key[, reverse]]])\nPython3\u3067\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\nsorted(iterable[, key][, reverse])\nsort(*, key=None, reverse=None)\ncmp\u5f15\u6570\u3001\u306a\u304f\u306a\u3063\u3066\u307e\u3059\u306d\u3002\n\u307e\u305f\u3001Python3\u3067\u306elist\u306esort\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\ncmp\u95a2\u6570\u306f\u5ec3\u6b62\u3055\u308c\u3001__cmp__\u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\n\u3053\u308c\u306f\u4f8b\u3092\u51fa\u3059\u3068\u304b\u3067\u306f\u306a\u3044\u3067\u3059\u3088\u306d\u30fc\u3002\n\u30bd\u30fc\u30c8\u306b\u306f__lt__\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u304f\u308c\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n\u6574\u6570\u306b\u3064\u3044\u3066\n\n\u57fa\u672c\u7684\u306blong\u306fint\u306b\u6539\u540d\u3055\u308c\u305f(\u304c\u3001\u53e4\u3044long\u578b\u3068\u307b\u307c\u540c\u69d8\u306b\u632f\u308b\u821e\u3046)\n\nPython2\n>>> type(10**100)\n<type 'long'>\n\n\n\nPython3\n>>> type(10**100)\n<class 'int'>\n\n\nPython\u3067\u306fint\u578b\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n1/2\u306e\u3088\u3046\u306a\u5f0f\u306ffloat\u3092\u578b\u3092\u8fd4\u3059\u3002\u5c11\u6570\u70b9\u4ee5\u4e0b\u5207\u6368\u3066\u5834\u5408\u306f1//2\u306e\u3088\u3046\u306a\u5f0f\u306b\u3059\u308b\u3053\u3068\n\nPython2\n>>> 1/2\n0\n>>> type(1/2)\n<type 'int'>\n\n\n\nPython3\n>>> type(1/2)\n<class 'float'>\n>>> 1//2\n0\n>>> type(1//2)\n<class 'int'>\n\n\nPython3\u3067\u9664\u7b97\u3092\u884c\u3044int\u3067\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f//\u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n\u6574\u6570\u306e\u4e0a\u9650\u304c\u306a\u304f\u306a\u3063\u305f\u305f\u3081sys.maxint\u5b9a\u6570\u306f\u524a\u9664\u3055\u308c\u305f\n\nPython2\n>>> sys.maxint\n9223372036854775807\n\n\n\nPython3\n>>> sys.maxint\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'module' object has no attribute 'maxint'\n\n\n\u524a\u9664\u3055\u308c\u3066\u307e\u3059\u306d\u3002\n\nlong\u6574\u6570\u306erepr\u30e1\u30bd\u30c3\u30c9\u306f\u672b\u5c3e\u306bL\u3092\u3064\u3051\u306a\u3044\n\nPython2\n>>> 10**20\n100000000000000000000L\n\n\n\nPython3\n>>> 10**20\n100000000000000000000\n\n\nPython3\u3067\u306fL\u304c\u672b\u5c3e\u306b\u3064\u3044\u3066\u3044\u307e\u305b\u3093\u306d\u3002\n\n8\u9032\u6570\u30ea\u30c6\u30e9\u30eb\u304c0720\u306e\u3088\u3046\u306a\u8868\u8a18\u304b\u30890o720\u3068\u3044\u3046\u3088\u3046\u306a\u8868\u8a18\u306b\u5909\u66f4\n\nPython2\n>>> 0720\n464\n>>> 0o720\n464\n\n\n\nPython3\n>>> 0720\n  File \"<stdin>\", line 1\n    0720\n       ^\nSyntaxError: invalid token\n>>> 0o720\n464\n\n\n\u3053\u308c\u306f0x\u30840b\u306a\u3069\u306e\u8868\u8a18\u306b\u7d71\u4e00\u3055\u308c\u305f\u5f62\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u30e6\u30cb\u30b3\u30fc\u30c9\u30688bit\u306e\u4ee3\u308f\u308a\u306b\u30c6\u30ad\u30b9\u30c8\u3068\u30c7\u30fc\u30bf\u3078\n\n\u5168\u3066\u306e\u30c6\u30ad\u30b9\u30c8\u306fUnicode\u306b\n\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u4ee5\u524d\u307e\u3067\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30c6\u30e9\u30ebu\"...\"\u306f\u4f7f\u7528\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3002\n\nPython2\n>>> u\"unicode\"\nu'unicode'\n\n\n\nPython3\n>>> u\"unicode\"\n  File \"<stdin>\", line 1\n    u\"unicode\"\n             ^\nSyntaxError: invalid syntax\n\n\n\n\u30c6\u30ad\u30b9\u30c8\u306fstr\u578b\u3001data\u306fbytes\u578b\n\nPython3\n>>> type(\"test\")\n<class 'str'>\n>>> type(b\"test\")\n<class 'bytes'>\n\n\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u30ea\u30c6\u30e9\u30eb\u306b\u306fb\"...\"\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u3068data\u3092\u6df7\u305c\u308b\u3068TypeError\u3092\u9001\u51fa\u3059\u308b\n\nPython2\n>>> \"str\" + b\"bytes\"\n'strbytes'\n\n\n\nPython3\n>>> \"str\" + b\"bytes\"\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: Can't convert 'bytes' object to str implicitly\n\n\nPython2\u307e\u3058\u304b\u3088\u30fb\u30fb\uff082\u56de\u76ee\uff09\n\u3053\u3093\u306a\u306e\u767a\u72c2\u3082\u306e\u3067\u3059\u306d\u3002\u3002Python3\u30a8\u30e9\u3044\uff01\n\n\u30c6\u30ad\u30b9\u30c8\u3068data\u9593\u306e\u660e\u793a\u7684\u5909\u63db\n\nPython3\n>>> \"str\".encode()\nb'str'\n>>> bytes(\"str\", \"utf-8\")\nb'str'\n>>> \n>>> b\"bytes\".decode()\n'bytes'\n>>> str(b\"bytes\", \"utf-8\")\n'bytes'\n\n\nstr, bytes\u9593\u306e\u5909\u63db\u3067\u3059\u306d\u3002\n\u307e\u3041\u3001Python\u3067\u306eencode\u3001decode\u306e\u8a18\u4e8b\u306f\u5c71\u307b\u3069\u3042\u308a\u307e\u3059\u304b\u3089\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u30fb\u30fb\u30fb\u3002\n\nraw\u6587\u5b57\u5217\u5185\u3067\u3082\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306f\u305d\u306e\u307e\u307e\u306e\u6587\u5b57\u3067\u89e3\u91c8\u3055\u308c\u308b\n\nPython2\n>>> print(ur\"\\u20ac\")\n\u20ac\n\n\n\nPython3\n>>> print(r\"\\u20ac\")\n\\u20ac\n\n\nPython2\u307e\u3058\u304b\u3088\u3001\u3068\u307e\u3067\u306f\u8a00\u3044\u307e\u305b\u3093\u304c\u3001\u304a\u3044\u3063\uff01\n\u3063\u3066\u611f\u3058\u3067\u3059\u306d\u3002raw\u6587\u5b57\u5217\u306e\u3044\u307f\u306d\u30fc\u3058\u3083\u3093\uff01\n\u307e\u3041\u3001\u3053\u3046\u3044\u3046\u6319\u52d5\u3092\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304cPython3\u306e\u6319\u52d5\u306e\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3088\u306d\u30fc\u3002\n\nbasestring\u3068\u3044\u3046\u62bd\u8c61\u30af\u30e9\u30b9\u304c\u524a\u9664\n\nPython2\n>>> str.__base__\n<type 'basestring'>\n>>> bytes.__base__\n<type 'basestring'>\n\n\n\nPython3\n>>> str.__base__\n<class 'object'>\n>>> bytes.__base__\n<class 'object'>\n\n\nPython2\u3067\u306fbasestring\u3068\u3044\u3046\u62bd\u8c61\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u306d\u3002\u305d\u308c\u3092\u7d99\u627f\u3057\u3066str\u3001bytes\u578b\u304c\u3067\u304d\u3066\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\nPython3\u3067\u306f\u76f4\u63a5\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u69cb\u6587\u306e\u5909\u66f4\u306e\u6982\u8981\n\n\u95a2\u6570\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\n\nPython3\n>>> def f(a: \"int_value\", b: \"int_value default value one\" = 1) -> \"added_value\":\n...   return a+b\n... \n>>> f.__annotations__\n{'a': 'int_value', 'b': 'int_value default value one', 'return': 'added_value'}\n\n\n\u95a2\u6570\u306e\u5f15\u6570\u3084\u8fd4\u308a\u5024\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u3067\u306f\u6587\u5b57\u5217\u3060\u3051\u3067\u3059\u304c\u3001\u5f0f\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u30011+1\u3084int\u306a\u3069\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nPython3\n>>> i=2\n>>> j=3\n>>> def f(a: i*j, b: i+j) -> 1+1:\n...  return a+b\n... \n>>> f.__annotations__\n{'a': 6, 'b': 5, 'return': 2}\n>>> i=10\n>>> j=10\n>>> f.__annotations__\n{'a': 6, 'b': 5, 'return': 2}\n\n\n\u5f0f\u306f\u95a2\u6570\u5b9a\u7fa9\u6642\u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u5f53\u305f\u308a\u524d\u3063\u3061\u3083\u5f53\u305f\u308a\u524d\u3067\u3059\u306d\u3002\u3002\n\n\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u307f\u306e\u5f15\u6570\n\nPython3\n>>> def f(a, *, b):\n...   return a+b\n... \n>>> def g(*, a, b):\n...   return a*b\n... \n>>> f(1, 2)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: f() takes exactly 1 positional argument (2 given)\n>>> f(1, b=2)\n3\n>>> g(1, b=2)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: g() takes exactly 0 non-keyword positional arguments (1 given)\n>>> g(a=1, b=2)\n2\n>>> g(b=1, a=2)\n2\n\n\n\u30a2\u30b9\u30bf\u30ea\u30b9\u30af*\u3092\u4f7f\u7528\u3057\u3066\u305d\u308c\u4ee5\u964d\u306b\u5217\u6319\u3055\u308c\u308b\u5f15\u6570\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u9650\u5b9a\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u65e5\u672c\u8a9e\u306e\u6587\u732e\u3059\u3063\u3054\u304f\u5c11\u306a\u304f\u3063\u3066\u6700\u521d\u898b\u305f\u6642\u306f\u968f\u5206\u3068\u56f0\u308a\u307e\u3057\u305f(\u7b11)\n\n\u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30ea\u30b9\u30c8\u306e\u5f8c\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u6e21\u305b\u308b\n\nPython3\n>>> class MClass(type):\n...  def __new__(cls, name, bases, namespace, **kwds):\n...   result = type.__new__(cls, name, bases, dict(namespace))\n...   result.members = tuple(namespace)\n...   return result\n...  def __init__(self, *args, **kargs):\n...   print(\"args: \" + str(args))\n...   print(\"kargs: \" + str(kargs))\n... \n>>> class A(object, metaclass=MClass, a=1, b=2, c=3):\n...   def one(self): pass\n... \nargs: ('A', (<class 'object'>,), {'__module__': '__main__', 'one': <function one at 0x7f62d071c408>})\nkargs: {'a': 1, 'c': 3, 'b': 2}\n\n\n\u3053\u308c\u3001\u5185\u5bb9\u304c\u5c11\u3057\u30d8\u30d3\u30fc\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\n\u3068\u3082\u304b\u304f\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5f8c\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001type\u3067\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306ametaclass\u3092\u81ea\u4f5c\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u304c\u3002\u3002(MClass\u304c\u305d\u308c\u3067\u3059)\n\nnonlocal\u6587\n\nPython3\n>>> def counter(init=0):\n...  def cntup():\n...   nonlocal init\n...   init+=1\n...   return init\n...  return cntup\n...\n>>> c = counter()\n>>> c()\n1\n>>> c()\n2\n>>> c()\n3\n\n\nnonlocal\u6587\u306f\u6307\u5b9a\u3055\u308c\u305f\u8b58\u5225\u5b50\u3092\u4e00\u3064\u4e0a\u306e\u30b9\u30b3\u30fc\u30d7\u306b\u3042\u308b\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u8981\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u3059\u304b\u306d\u3002\n\u4f8b\u3067\u306fcounter\u95a2\u6570\u306e\u5f15\u6570init\u3092nonlocal\u6587\u3067\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u306d\u3002\nPython2\u3067\u306flist\u306a\u3069\u3092\u7528\u3044\u3066\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u306a\u3051\u308c\u3070\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001Python3\u3067\u306f\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u306d\u3002\n(\u53c2\u7167\u3059\u308b\u3060\u3051\u3067\u3042\u308c\u3070nonlocal\u3084Python2\u3067\u306elist\u306a\u3069\u306f\u5fc5\u8981\u306a\u3044\u3002\u5916\u5074\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u5909\u6570\u306b\u675f\u7e1b\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981)\n\nPython3\n>>> c.__closure__\n(<cell at 0x7f62d071d5c8: int object at 0x7a3e20>,)\n>>> c.__closure__[0].cell_contents\n3\n\n\n\u3064\u3044\u3067\u306b\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n\u62e1\u5f35Iterable Unpacking\n\nPython3\n>>> a, *rest, b = range(5)\n>>> a\n0\n>>> rest\n[1, 2, 3]\n>>> b\n4\n\n\nrest\u306ba\u3068b\u306bUnpack\u5f8c\u3001\u4f59\u3063\u305f\u3082\u306e\u3092\u30ea\u30b9\u30c8\u3068\u3057\u3066Unpack\u3055\u308c\u308b\u3002\n\u3053\u306erest\u306f\u7a7a\u30ea\u30b9\u30c8\u3068\u3057\u3066Unpack\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3002\n\nPython3\n>>> a, *rest, b = range(2)\n>>> a\n0\n>>> rest\n[]\n>>> b\n1\n\n\n\u3053\u308c\u306f\u3059\u3054\u3044\u30fb\u30fb\u30fb\u3002\n\n\u5909\u66f4\u3055\u308c\u305f\u69cb\u6587\n\n\u4f8b\u5916\u306e\u30ad\u30e3\u30c3\u30c1\u306e\u69cb\u6587\n\nPython2\n>>> try:\n...  raise Exception(\"test\")\n... except Exception, e:\n...  print \"catch exception!\"\n... \ncatch exception!\n\n\n\nPython3\n>>> try:\n...  raise Exception(\"test\")\n... except Exception as e:\n...  print(\"catch exception!\")\n... \ncatch exception!\n\n\n\u30ab\u30f3\u30de\u304b\u3089as\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u65b0\u305f\u306araise\u6587\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\n\nPython3\n>>> try:\n...  raise Exception(\"test\")\n... except Exception as e:\n...  raise RuntimeError(\"catch exception!\") from e\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\nException: test\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 4, in <module>\nRuntimeError: catch exception!\n\n\nfrom\u7bc0\u304c\u8ffd\u52a0\u3055\u308c\u3001\u4f8b\u5916\u306e\u9023\u9396\u3092\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001except\u7bc0\u3067\u4f8b\u5916\u304c\u9001\u51fa\u3055\u308c\u305f\u5834\u5408\u3082\u6697\u9ed9\u7684\u306b\u50cd\u304f\u305d\u3046\u3067\u3059\u3088\u3002\n\nPython3\n>>> try:\n...  1/0\n... except Exception as e:\n...  raise RuntimeError(\"raise exception.\")\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\nZeroDivisionError: int division or modulo by zero\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 4, in <module>\nRuntimeError: raise exception.\n\n\n\nTrue, False\u304c\u4e88\u7d04\u8a9e\u306b\n\nPython2\n>>> True = 0\n>>> False = 1\n>>> True\n0\n>>> False\n1\n>>> True and True\n0\n\n\n\nPython3\n>>> True=0\n  File \"<stdin>\", line 1\nSyntaxError: assignment to keyword\n>>> False=1\n  File \"<stdin>\", line 1\nSyntaxError: assignment to keyword\n\n\n\u6050\u6016\uff01\uff01\n\u3063\u3066\u304b\u307e\u3041True,False\u306b\u4ee3\u5165\u3057\u305f\u308a\u3001\u666e\u901a\u306f\uff01\u3057\u306a\u3044\u3067\u3059\u3051\u3069\u306d\u3002\n\n\u30e1\u30bf\u30af\u30e9\u30b9\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u5909\u66f4\n\nPython2\n>>> class M(type):\n...  pass\n... \n>>> class C:\n...  __metaclass__ = M\n... \n>>> C.__class__\n<class '__main__.M'>\n\n\n\nPython3\n>>> class M(type):\n...  pass\n... \n>>> class C(metaclass=M):\n...  pass\n... \n>>> C.__class__\n<class '__main__.M'>\n\n\nPython2\u3067\u306f__metaclass__\u5909\u6570\u3001Python3\u3067\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3068\u3053\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\nPython3\u3067\u306fPython2\u306e\u3088\u3046\u306a\u624b\u6bb5\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u521d\u3081\u3066\u77e5\u3063\u305f\u306e\u304c\u3001Python2\u3067\u306fclass\u3067object\u3092\u660e\u793a\u7684\u306b\u7d99\u627f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e1\u30bf\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067object\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3057\u305f\u3002\u306a\u308b\u307b\u3069\uff01\n\nPython2\n>>> class A:\n...  pass\n... \n>>> A.__bases__\n()\n>>> class C:\n...  __metaclass__ = type\n... \n>>> C.__bases__\n(<type 'object'>,)\n\n\n\nellipsis\u306f\u3069\u3053\u3067\u3067\u3082\u539f\u59cb\u7684\u306a\u5f0f\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\n\nPython3\n>>> ...\nEllipsis\n>>> def e():\n...  ...\n\n\n\u7701\u7565\u3002(\u307e\u3058\u3067\u8a00\u3046\u3053\u3068\u304c\u306a\u3044\u30fb\u30fb\u30fb)\n\n\u524a\u9664\u3055\u308c\u305f\u64cd\u4f5c\n\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u306a\u306e\u3067\u3055\u30fc\u3063\u3068\u3044\u304d\u307e\u3059\u3002\n\n\u30bf\u30d7\u30eb\u5f15\u6570\u306e\u30a2\u30f3\u30d1\u30c3\u30af\n\nPython2\n>>> def foo(a, (b,c)):\n...  return a+b+c\n... \n>>> t = 2,3\n>>> foo(1, t)\n6\n\n\n\nPython3\n>>> def foo(a, (b,c)):\n  File \"<stdin>\", line 1\n    def foo(a, (b,c)):\n               ^\nSyntaxError: invalid syntax\n\n\n\u8aad\u307f\u3065\u3089\u3044\u3067\u3059\u306d\u3047\u30fb\u30fb\u30fb\u3002\nPython3\u3067\u306f1\u884c\u76ee\u304b\u3089\u6012\u3089\u308c\u307e\u3059\u3002\n\n\u30d0\u30c3\u30af\u30af\u30aa\u30fc\u30c8\u306b\u3064\u3044\u3066\n\nPython2\n>>> i = 123\n>>> `i`\n'123'\n\n\n\nPython3\n>>> i=123\n>>> `i`\n  File \"<stdin>\", line 1\n    `i`\n    ^\nSyntaxError: invalid syntax\n\n\n\u3069\u3046\u3084\u3089__repr__\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\n\nexec\u306b\u3064\u3044\u3066\n\nPython2\n>>> exec \"print('python2')\"\npython2\n>>> exec(\"print('python2')\")\npython2\n\n\n\nPython3\n>>> exec \"print('python3')\"\n  File \"<stdin>\", line 1\n    exec \"print('python3')\"\n                          ^\nSyntaxError: invalid syntax\n>>> exec(\"print('python3')\")\npython3\n\n\nPython2\u3067\u306fexec\u6587\u3067\u3057\u305f\u3002\u95a2\u6570\u8868\u8a18\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\nPython3\u3067\u306f\u4e88\u7d04\u8a9e\u3067\u306f\u306a\u304f\u306a\u308a\u3001\u95a2\u6570\u3068\u3057\u3066\u6b8b\u308a\u307e\u3057\u305f\u3002\n\n<>\u6f14\u7b97\u5b50\n\nPython2\n>>> 1 <> 2\nTrue\n>>> 1 <> 1\nFalse\n\n\n\nPython3\n>>> 1 <> 2\n  File \"<stdin>\", line 1\n    1 <> 2\n       ^\nSyntaxError: invalid syntax\n\n\n!=\u3067\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u306d\u3047\u3002\n\n\u30ea\u30c6\u30e9\u30eb\u5468\u308a\n\nPython2\n>>> u\"python2\"\nu'python2'\n>>> 100L\n100L\n\n\n\nPython3\n>>> u\"python3\"\n  File \"<stdin>\", line 1\n    u\"python3\"\n             ^\nSyntaxError: invalid syntax\n>>> 100L\n  File \"<stdin>\", line 1\n    100L\n       ^\nSyntaxError: invalid syntax\n\n\n\u4e0a\u306e\u65b9\u3067\u65e2\u306b\u8ff0\u3079\u3066\u3044\u308b\u5185\u5bb9\u3067\u3059\u306d\u3002\n\n\u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u4ee5\u5916\u3067\u306efrom module import *\u306b\u3064\u3044\u3066\n\nPython2\n>>> from sys import *\n>>> def f():\n...  from os import *\n... \n<stdin>:1: SyntaxWarning: import * only allowed at module level\n\n\n\nPython3\n>>> from sys import *\n>>> def f():\n...  from os import *\n... \n  File \"<stdin>\", line 1\nSyntaxError: import * only allowed at module level\n\n\nWarning\u304b\u3089Error\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u3002\u306a\u3093\u3067Python2\u306fWarning\u3067\u6b62\u3081\u305f\u3093\u3060\u308d\u3046\u304b\u30fb\u30fb\u30fb\n\n\u305d\u306e\u4ed6\u306e\u5909\u66f4\n\n\u6f14\u7b97\u5b50\u3068\u7279\u6b8a\u30e1\u30bd\u30c3\u30c9\n\n!=\u306f==\u3068\u9006\u306e\u7d50\u679c\u3092\u8fd4\u3059(==\u304cNotImplemented\u3092\u8fd4\u3055\u306a\u3044\u5834\u5408\u306f)\n\nPython2\n>>> class C:\n...  def __init__(self, a):\n...   self.a = a\n...\n...  def __eq__(self, other):\n...   return self.a == other.a\n...\n>>> a = C(1)\n>>> b = C(1)\n>>> c = C(2)\n>>> a == b\nTrue\n>>> a == c\nFalse\n>>> a != b\nTrue\n>>> a != c\nTrue\n\n\n\nPython3\n>>> class C:\n...  def __init__(self, a):\n...   self.a = a\n...\n...  def __eq__(self, other):\n...   return self.a == other.a\n...\n>>> a = C(1)\n>>> b = C(1)\n>>> c = C(2)\n>>> a == b\nTrue\n>>> a != b\nFalse\n>>> a == c\nFalse\n>>> a != c\nTrue\n\n\n\u3053\u308c\u3061\u3087\u3063\u3068\u610f\u5916\u3067\u3057\u305f\u3002\nPython2\u306e!=\u306f__ne__()\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u540c\u4e00\u306e\u3082\u306e\u304b\u3092\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\na, b, c\u306f\u3069\u308c\u3082\u5225\u7269\u306a\u306e\u3067\u7d50\u679c\u304cTrue\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u81ea\u5206\u306f\u3066\u3063\u304d\u308aAttributeError\u304c\u51fa\u308b\u306e\u304b\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\u5c11\u3057\u8003\u3048\u308c\u3070\u5206\u304b\u308b\u8a71\u3067\u3057\u305f\u306d\u3002\n\nunbound methods\u304b\u3089function object\u3078\n\nPython2\n>>> class C:\n...  def f(self):\n...   pass\n...\n>>> C.f\n<unbound method C.f>\n\n\n\nPython3\n>>> class C:\n...  def f(self):\n...   pass\n...\n>>> C.f\n<function f at 0x100a35270>\n\n\n\u306f\u3044\u3002Python3\u304c\u305f\u3060\u306e\u95a2\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u307e\u3059\u3002\nunbound method\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\nPython3\u306e\u307b\u3046\u304c\u5358\u7d14\u660e\u5feb\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\n\n__getslice__()\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u524a\u9664\u3055\u308c\u3001__getitem__()\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306bslice\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u308b\n\nPython2\n>>> class C:\n...  def __getslice__(self, i, j):\n...   print i, j\n...   raise NotImplementedError()\n...\n>>> a = C()\n>>> a[0:2]\n0 2\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 4, in __getslice__\nNotImplementedError\n\n\n\nPython3\n>>> class C:\n...  def __getitem__(self, obj):\n...   print(obj)\n...   print(type(obj))\n...   raise NotImplementedError()\n...\n>>> a = C()\n>>> a[0:2]\nslice(0, 2, None)\n<class 'slice'>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 5, in __getitem__\nNotImplementedError\n\n\n\ngetslice\nsetslice\ndelslice\n\n\u304c\n\ngetitem\nsetitem\ndelitem\n\n\u3092\u4ee3\u308f\u308a\u306b\u547c\u3076\u3088\u3046\u306b\u306a\u308a\u3001\u30b9\u30e9\u30a4\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u308b\u3088\u3046\u306b\u5909\u308f\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3067\u306f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u5f15\u6570\u306b\u30b9\u30e9\u30a4\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\nnext()\u30e1\u30bd\u30c3\u30c9\u306f__next__()\u306b\u6539\u540d\u3055\u308c\u305f\n\nPython2\n>>> class C:\n...  def __iter__(self):\n...   return self\n...\n...  def next(self):\n...   return 0\n...\n>>> a = C()\n>>> i = iter(a)\n>>> next(i)\n0\n>>> i.next()\n0\n\n\n\nPython3\n>>> class C:\n...  def __iter__(self):\n...   return self\n...\n...  def __next__(self):\n...   return 0\n...\n>>> a = C()\n>>> i = iter(a)\n>>> next(a)\n0\n>>> i.__next__()\n0\n\n\nnext()\u304b\u3089__next__()\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\n__oct__()\u3068__hex__()\u306f\u524a\u9664\u3055\u308c\u3001__index__()\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\n\nPython2\n>>> class C:\n...  def __oct__(self):\n...   return \"07\"\n...\n...  def __hex__(self):\n...   return \"0x7\"\n...\n>>> a = C()\n>>> hex(a)\n'0x7'\n>>> oct(a)\n'07'\n\n\n\nPython3\n>>> class C:\n...  def __index__(self):\n...   return 7\n...\n>>> a = C()\n>>> hex(a)\n'0x7'\n>>> oct(a)\n'0o7'\n\n\n__oct__()\u3001__hex__()\u306f\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3059\u304c\u3001__index__()\u306f\u6570\u5024\u3092\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\u5f8c\u306fPython\u304c\u826f\u3057\u306a\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nPython3\u7d20\u6674\u3089\u3057\u3044\u301c\u3002\n(\u4f8b\u306f\u5b9a\u6570\u8fd4\u3057\u3066\u307e\u3059\u304c\u3054\u52d8\u5f01\u3092\u30fb\u30fb\u30fb)\n\n__nonzero__()\u306f__bool__()\u306b\u6539\u540d\u3055\u308c\u305f\n\nPython2\n>>> class C:\n...  def __nonzero__(self):\n...   return True\n...\n>>> a = C()\n>>> bool(a)\nTrue\n\n\n\nPython3\n>>> class C:\n...  def __bool__(self):\n...   return True\n...\n>>> a = C()\n>>> bool(a)\nTrue\n\n\n__nonzero__()\u3063\u3066\u3069\u3046\u3044\u3046\u6d41\u308c\u3067\u540d\u524d\u304c\u6c7a\u307e\u3063\u305f\u3093\u3067\u3059\u304b\u306d\u30fb\u30fb\u30fb\u3002\nPython3\u3067\u306f__bool__()\u304c\u547c\u3070\u308c\u3066\u3044\u307e\u3059\u3002\u5206\u304b\u308a\u3084\u3059\u3044\u3002\n\nBuiltins\n\nsuper()\u306e\u8ffd\u52a0\n\nPython3\n>>> class SuperClass:\n...  pass\n... \n>>> class SubClass(SuperClass):\n...  def findSuperClass(self):\n...   print(\"call super(): \", super())\n...   print(\"call super(SubClass, self)\", super(SubClass, self))\n...\n>>> i = SubClass()\n>>> i.findSuperClass()\ncall super():  <super: <class 'SubClass'>, <SubClass object>>\ncall super(SubClass, self) <super: <class 'SubClass'>, <SubClass object>>\n\n\nsuper()\u306f\u5f15\u6570\u7121\u3057\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u9069\u5207\u306a\u30af\u30e9\u30b9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u81ea\u52d5\u7684\u306b\u9078\u3093\u3067\u304f\u308c\u307e\u3059\u3002\n\u5f15\u6570\u304c\u3042\u308b\u6642\u3068\u51e6\u7406\u306f\u7279\u306b\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\nraw_input()\u304cinput()\u306b\u6539\u540d\n\nPython3\n>>> input()\ntest\n'test'\n\n\ninput()\u306f\u6a19\u6e96\u5165\u529b\u304b\u30891\u884c\u8aad\u307f\u53d6\u308a\u3001\u6539\u884c\u3092\u9664\u3044\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\nPython2\u3067\u306einput()\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306feval(input())\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u3076\u3063\u3061\u3083\u3051Python3\u3067\u306f\n\nprint\u304c\u95a2\u6570\u306b\nkeys, items, values\u30e1\u30bd\u30c3\u30c9\u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\n\u6587\u5b57\u5217\u306e\u6a19\u6e96\u304cUnicode\u306b\u306a\u308a\u578b\u304cstr\n\nxrange\u304crange\u306b\n\n\u8fba\u308a\u3092\u899a\u3048\u3066\u304a\u3051\u3070\u6b86\u3069\u652f\u969c\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7701\u3044\u305f\u5909\u66f4\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u30cb\u30c3\u30c1\u306a\u5185\u5bb9\u3067\u3042\u307e\u308a\u91cd\u8981\u3067\u306a\u3044\u6c17\u304c\u3057\u305f\u3082\u306e\u3092\u5168\u4f53\u306e1\u5272\u307b\u3069\u524a\u3063\u3066\u3044\u307e\u3059\u3002\u77e5\u308a\u305f\u3044\u65b9\u306fWhat's New in Python3.0\u8aad\u3093\u3067\u304f\u3060\u3055\u3044(\u4e38\u6295\u3052)\u3002\n\n\u7d42\u308f\u308a\u306b\n\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3066\u601d\u3063\u305f\u3053\u3068\u3067\u3059\u304c\u3001Python2\u3067\u7f60\u306b\u30cf\u30de\u308a\u305d\u3046\u306a\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u3063\u3066\u3073\u3063\u304f\u308a\u3057\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3067\u3084\u308a\u59cb\u3081\u305f\u306e\u304cPython3\u304b\u3089\u3067\u826f\u304b\u3063\u305f\u3067\u3059\uff08\u7b11\uff09\n\u305d\u3057\u3066\u307e\u3060Python2\u304b\u3089\u4e57\u308a\u63db\u3048\u3066\u306a\u3044\u65b9\u306f\u4fbf\u5229\u306b\u3053\u308c\u3092\u6a5f\u4f1a\u306b\u899a\u3048\u3066\u3044\u305f\u3060\u3044\u3066Python3\u306b\u4e57\u308a\u63db\u3048\u308b\u3068\u5e78\u305b\u306aPython\u30e9\u30a4\u30d5\u304c\u5f85\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b(\u7b11)\n(Python2\u304b\u30893\u3068\u304b\u3082\u3046\u968f\u5206\u305f\u3063\u3066\u3066\u307e\u3068\u3081\u7cfb\u306e\u8a18\u4e8b\u306f\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304c\u30fb\u30fb\u30fb)\n\u5192\u982d\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001Python3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306f\u5225\u8a18\u4e8b\u3067\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nPython3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306fPython \u305d\u306e2 Advent Calendar \u306e16\u65e5\u306b\u306e\u305b\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\u307e\u305f\u3001\u5909\u306a\u70b9\u3084\u9593\u9055\u3044\u3001\u3053\u3046\u3057\u305f\u65b9\u304c\u826f\u3044\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\uff01\n\u660e\u65e5\u306f\u7a7a\u304d\u3067\u300111\u65e5\u306f@FGtatsuro\u3067\u3059\uff01\n\u305d\u308c\u3067\u306f\u826f\u304dPython3\u30e9\u30a4\u30d5\u3092\uff01\uff01\n\n# \u521d\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001[Python \u305d\u306e2 Advent Calendar 2015](http://qiita.com/advent-calendar/2015/yet_another_python)\u306e9\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n## \u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u308f\u3051\n\n\u50d5\u304cPython\u521d\u3081\u3066\u66f8\u3044\u305f\u306e\u304c4\u5e74\u524d\u3067\u3068\u3066\u3082\u3088\u3044\u8a00\u8a9e\u3060\u3068\u601d\u3044\u3001\u7c21\u5358\u306a\u30b3\u30fc\u30c9\u306a\u3069\u306f\u3044\u3064\u3082Python\u3067\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\u521d\u3081\u306b\u66f8\u3044\u305f\u306e\u306fPython2.7\u3067\u3057\u305f\u304c\u3001\u8abf\u3079\u3066\u3044\u305f\u3089Python3\u306a\u308b\u3082\u306e\u304c\u3042\u308a\u3001\u65b0\u3057\u3044\u3082\u306e\u597d\u304d\u3060\u3063\u305f\u306e\u3067\u672c\u6c17\u3067\u5b66\u307c\u3046\u3068\u3057\u59cb\u3081\u305f\u6642\u306fPython3.3\u3092\u4f7f\u3063\u3066\u307e\u3057\u305f\u3002\n\u306a\u306e\u3067\u30012\u7cfb\u306e\u8a71\u306a\u3069\u306f\u307b\u3068\u3093\u3069\u77e5\u3089\u305a\u3001\u308f\u3056\u308f\u3056\u53e4\u3044(\u3068\u3044\u3063\u3066\u3082\u5f53\u6642\u306f2\u7cfb\u304c\u30e1\u30a4\u30f3\u3067\u3057\u305f\u304c)\u3082\u306e\u3092\u5b66\u3076\u5fc5\u8981\u3082\u306a\u3044\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u3002\n\u304c\u3002\n2\u7cfb\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c3\u7cfb\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\u30012\u7cfb\u3067\u66f8\u304b\u308c\u3066\u3044\u30663\u7cfb\u306b\u81ea\u5206\u3067\u7f6e\u304d\u63db\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306a\u3069\u8272\u3005\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u3068\u307e\u3041\u3001\u3068\u306b\u304b\u304f2\u7cfb\u30683\u7cfb\u306e\u9055\u3044\u3092\u5b66\u7fd2\u3064\u3044\u3067\u306b\u307e\u3068\u3081\u3066\u898b\u3088\u3046\u3068\u601d\u3063\u305f\u6b21\u7b2c\u3067\u3059\u3002\n(\u3059\u3067\u306b3\u7cfb\u304c\u3067\u3066\u304b\u30897\u5e74\u4f4d\u7d4c\u3063\u3066\u3044\u308b\u306e\u306f\u7f6e\u3044\u3068\u3044\u3066\u30fb\u30fb\u30fb)\n(\u3055\u3089\u306b\u3001\u4ed6\u306e\u7d20\u6674\u3089\u3057\u3044\u65b9\u3005\u304c\u7d20\u6674\u3089\u3057\u3044\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3044\u3089\u3063\u3057\u3083\u308b\u306e\u3082\u7f6e\u3044\u3068\u3044\u3066\u30fb\u30fb\u30fb(T_T))\n\n## \u672c\u984c\u306b\u5165\u308b\u524d\u306b\u30fb\u30fb\n\n- \u66f8\u304d\u59cb\u3081\u305f\u969b\u306fPython2\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001Python3.0\u307e\u3067\u3067\u304b\u306a\u308a\u306e\u9577\u3055\u306b\u306a\u3063\u305f\u306e\u3067Python3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306f\u5225\u8a18\u4e8b\u306b\u66f8\u304d\u307e\u3059\u3002\n- \u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5de6\u4e0a\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n- Python\u306e\u77e5\u8b58\u304c\u3042\u308b\u7a0b\u5ea6\u3042\u308b\u65b9\u5411\u3051\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3061\u3087\u308d\u3063\u3068\u89e6\u3063\u305f\u3053\u3068\u3042\u308b\u65b9\u306a\u3089\u591a\u5206\u5927\u4e08\u592b\uff01\n- \u30b3\u30fc\u30c9\u306e\u4e2d\u306b\u7a81\u5982\u51fa\u3066\u304f\u308b\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u306f\u4e00\u3064\u524d\u306e\u5b9f\u884c\u7d50\u679c\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```pycon:Python3\n>>> 1+1\n2\n>>> _\n2\n>>> 2+3\n5\n>>> _ -3\n2\n>>> type(_)\n<class 'int'>\n>>> _\n<class 'int'>\n```\n\n\u305d\u308c\u3067\u306f\u3001\u7d50\u69cb\u9577\u3044\u3067\u3059\u304c\uff08\u7b11\uff09\n\u9811\u5f35\u3063\u3066\u304d\u307e\u3057\u3087\u3046\uff01\n\n\n# Python2 -> Python3.0\n\n## print\u304c\u6587\u304b\u3089\u95a2\u6570\u306b\u5909\u66f4\n\n```pycon:Python2\n>>> print 'Hello'\nHello\n```\n\n```pycon:Python3\n>>> print('Hello')\nHello\n```\n\nPython3\u3067\u306e\u5b9a\u7fa9\u306f\u3053\u3093\u306a\u611f\u3058\u3089\u3057\u3044\u3067\u3059\u3002\n\n```py3\ndef print(*args, sep=' ', end='\\n', file=None)\n```\n\n\u30bf\u30d7\u30eb\u3092\u8868\u793a\u3055\u305b\u3088\u3046\u3068\u3057\u305f\u6642\u3068\u304b\u56f0\u308b\u306e\u304b\u306a\u3002\n\n```pycon:Python2\n>>> print ('item1', 'item2')\n('item1', 'item2')\n```\n\n```pycon:Python3\n>>> print ('item1', 'item2')\nitem1 item2\n>>> print(('item1', 'item2'), )\n('item1', 'item2')\n```\n\n## \u30ea\u30b9\u30c8\u306e\u4ee3\u308f\u308a\u306bViews\u3084\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u8fd4\u3059\n\nViews\u3063\u3066\u30ca\u30f3\u30ce\u30b3\u30c3\u30c1\u30e3\u3002\n\u307e\u3041\u3001\u7d50\u679c\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u3002\n\n### dict\u306e\u30e1\u30bd\u30c3\u30c9\u3001keys, items, values\u306fViews\u3092\u8fd4\u3059\n\n```pycon:Python2\n>>> d = {\"key1\": \"value1\"}\n>>> d.keys()\n['key1']\n>>> type(_)\n<type 'list'>\n>>> d.values()\n['value1']\n>>> d.items()\n[('key1', 'value1')]\n```\n\n```pycon:Python3\n>>> d = {\"key1\": \"value1\"}\n>>> d.keys()\n<dict_keys object at 0x7f0da5268e18>\n>>> type(_)\n<class 'dict_keys'>\n>>> d.values()\n<dict_values object at 0x7f0da5268e18>\n>>> d.items()\n<dict_items object at 0x7f0da3a44638>\n```\n\nPython2\u3067\u306f\u5168\u3066\u30ea\u30b9\u30c8\u3067\u3001Python3\u3067\u306f`dict_keys`\u306a\u3069\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u8fd4\u3063\u3066\u304d\u3066\u307e\u3059\u306d\u3002\n\u3053\u308c\u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001\u3053\u308c\u3092Views\u3068\u547c\u3093\u3067\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u3002\n\nPython3\u3067\u30ea\u30b9\u30c8\u3068\u3057\u3066\u6b32\u3057\u3051\u308c\u3070`list()`\u3067\u30e9\u30c3\u30d7\u3057\u307e\u3057\u3087\u3046\u3002\n\n```pycon:Python3\n>>> list(d.keys())\n['key1']\n```\n\n### dict\u306e\u30e1\u30bd\u30c3\u30c9\u3001iterkeys, iteritems, itervalues\u306e\u5ec3\u6b62\n\n```pycon:Python2\n>>> d.iterkeys()\n<dictionary-keyiterator object at 0x7f5b586155d0>\n>>> type(_)\n<type 'dictionary-keyiterator'>\n```\n\n```pycon:Python3\n>>> d.iterkeys()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'dict' object has no attribute 'iterkeys'\n```\n\n\u307e\u30fc\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\u3002keys\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u8fd4\u3059\u3093\u3067\u3059\u304b\u3089\u3002\n\n### map, filter\u95a2\u6570\u304c\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3059\n```pycon:Python2\n>>> f1 = lambda x : x + 1\n>>> f2 = lambda x : x%2 == 0\n>>> l = [1, 2, 3]\n>>> map(f1, l)\n[2, 3, 4]\n>>> type(_)\n<type 'list'>\n>>> filter(f2, l)\n[2]\n>>> type(_)\n<type 'list'>\n```\n\n```pycon:Python3\n>>> iter_check = lambda obj : hasattr(obj, '__iter__') and hasattr(obj, '__next__')\n>>> isIterable = lambda obj : hasattr(obj, '__iter__')\n>>> f1 = lambda x : x + 1\n>>> f2 = lambda x : x%2 == 0\n>>> l = [1, 2, 3]\n>>> map(f1, l)\n<map object at 0x7f0da5261950>\n>>> map_obj = _\n>>> type(map_obj)\n<class 'map'>\n>>> iter_check(map_obj)\nTrue\n>>>\n>>> filter(f2, l)\n<filter object at 0x7f0da52619d0>\n>>> filter_obj = _\n>>> type(filter_obj)\n<class 'filter'>\n>>> iter_check(filter_obj)\nTrue\n```\n\nlambda\u306e\u6240\u306e\u5185\u5bb9\u306f\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u304f\u3066\u5927\u4e08\u592b\u3067\u3059\uff08\u7b11\uff09\n\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306a\u306e\u304b\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u306a\u306e\u304b\u306a\u3069\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\nPython2\u3067\u306f\u30ea\u30b9\u30c8\u3001Pyhton3\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u304c\u8fd4\u3063\u3066\u304d\u3066\u307e\u3059\u306d\u3002\n\n\n### Python3\u306erange\u95a2\u6570\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059(Python2\u3067\u306exrange)\u3002xrange\u306f\u5ec3\u6b62\n\n```pycon:Python2\n>>> iter_check = lambda obj : hasattr(obj, '__iter__') and hasattr(obj, '__next__')\n>>> isIterable = lambda obj : hasattr(obj, '__iter__')\n>>> type(range(1,10))\n<type 'list'>\n>>> type(xrange(1,10))\n<type 'xrange'>\n>>> iter_check(xrange(1,10))\nFalse\n>>> isIterable(xrange(1,10))\nTrue\n```\n\n```pycon:Python3\n>>> type(range(1,10))\n<class 'range'>\n>>> type(iter(range(1,10)))\n<class 'range_iterator'>\n>>> xrange(1,10)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nNameError: name 'xrange' is not defined\n```\n\nPython3\u3067\u306frange\u304c\u30ea\u30b9\u30c8\u3067\u306f\u306a\u304f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066xrange\u306f\u304a\u4ea1\u304f\u306a\u308a\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff81\uff70\uff9d\n\n### zip\u95a2\u6570\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3059\n```pycon:Python2\n>>> zip([1,2,3], [2,3,4])\n[(1, 2), (2, 3), (3, 4)]\n>>> type(_)\n<type 'list'>\n```\n\n```pycon:Python3\n>>> zip([1,2,3], [2,3,4])\n<zip object at 0x7f0da3a40cf8>\n>>> iter_check(_)\nTrue\n```\nPython3\u3067\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u30fc\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u306d\u3002\n\n\n## \u9806\u5e8f\u6bd4\u8f03\n### \u6bd4\u8f03\u6f14\u7b97\u5b50(<, >, <=, >=)\u306f\u3001\u305d\u306e\u30aa\u30da\u30e9\u30f3\u30c9\u304c\u81ea\u7136\u306a\u9806\u5e8f\u4ed8\u3051\u3092\u6301\u305f\u306a\u3044\u5834\u5408TypeError\u3092\u9001\u51fa\u3059\u308b\n```pycon:Python2\n>>> 1 < 'a'\nTrue\n>>> 0 > None\nTrue\n>>> len <= len\nTrue\n>>> None < None\nFalse\n```\n\n```pycon:Python3\n>>> 1 < 'a'\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: int() < str()\n>>> 0 > None\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: int() > NoneType()\n>>> len <= len\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: builtin_function_or_method() <= builtin_function_or_method()\n>>> None < None\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: unorderable types: NoneType() < NoneType()\n```\n\n\u3053\u308c\u3001\u81ea\u5206\u521d\u3081\u3066\u77e5\u308a\u307e\u3057\u305f\u3002Python2\u3072\u3069\u3044\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\n\u3067\u3059\u304cPython3\u3067\u306f\u3057\u3063\u304b\u308a\u4f8b\u5916\u3092\u6295\u3052\u3066\u304f\u308c\u308b\u306e\u3067\u5b89\u5fc3\u3067\u3059\u306d\uff01\n\n### sorted\u95a2\u6570\u3068list\u306esort\u30e1\u30bd\u30c3\u30c9\u306f\u6bd4\u8f03\u95a2\u6570\u3092\u4e0e\u3048\u308bcmp\u5f15\u6570\u3092\u53d6\u3089\u306a\u304f\u306a\u3063\u305f\n\nPython2\u3067\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n`sorted(iterable[, cmp[, key[, reverse]]])`\n`s.sort([cmp[, key[, reverse]]])`\n\nPython3\u3067\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n`sorted(iterable[, key][, reverse])`\n`sort(*, key=None, reverse=None)`\n\ncmp\u5f15\u6570\u3001\u306a\u304f\u306a\u3063\u3066\u307e\u3059\u306d\u3002\n\u307e\u305f\u3001Python3\u3067\u306elist\u306esort\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### cmp\u95a2\u6570\u306f\u5ec3\u6b62\u3055\u308c\u3001`__cmp__`\u30e1\u30bd\u30c3\u30c9\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\n\u3053\u308c\u306f\u4f8b\u3092\u51fa\u3059\u3068\u304b\u3067\u306f\u306a\u3044\u3067\u3059\u3088\u306d\u30fc\u3002\n\u30bd\u30fc\u30c8\u306b\u306f`__lt__`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3057\u3066\u304f\u308c\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n\n## \u6574\u6570\u306b\u3064\u3044\u3066\n### \u57fa\u672c\u7684\u306blong\u306fint\u306b\u6539\u540d\u3055\u308c\u305f(\u304c\u3001\u53e4\u3044long\u578b\u3068\u307b\u307c\u540c\u69d8\u306b\u632f\u308b\u821e\u3046)\n\n```pycon:Python2\n>>> type(10**100)\n<type 'long'>\n```\n\n```pycon:Python3\n>>> type(10**100)\n<class 'int'>\n```\n\nPython\u3067\u306fint\u578b\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n### 1/2\u306e\u3088\u3046\u306a\u5f0f\u306ffloat\u3092\u578b\u3092\u8fd4\u3059\u3002\u5c11\u6570\u70b9\u4ee5\u4e0b\u5207\u6368\u3066\u5834\u5408\u306f1//2\u306e\u3088\u3046\u306a\u5f0f\u306b\u3059\u308b\u3053\u3068\n\n```pycon:Python2\n>>> 1/2\n0\n>>> type(1/2)\n<type 'int'>\n```\n\n```pycon:Python3\n>>> type(1/2)\n<class 'float'>\n>>> 1//2\n0\n>>> type(1//2)\n<class 'int'>\n```\n\nPython3\u3067\u9664\u7b97\u3092\u884c\u3044int\u3067\u8fd4\u3057\u305f\u3044\u5834\u5408\u306f//\u6f14\u7b97\u5b50\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\n### \u6574\u6570\u306e\u4e0a\u9650\u304c\u306a\u304f\u306a\u3063\u305f\u305f\u3081sys.maxint\u5b9a\u6570\u306f\u524a\u9664\u3055\u308c\u305f\n\n```pycon:Python2\n>>> sys.maxint\n9223372036854775807\n```\n\n```pycon:Python3\n>>> sys.maxint\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nAttributeError: 'module' object has no attribute 'maxint'\n```\n\n\u524a\u9664\u3055\u308c\u3066\u307e\u3059\u306d\u3002\n\n### long\u6574\u6570\u306erepr\u30e1\u30bd\u30c3\u30c9\u306f\u672b\u5c3e\u306bL\u3092\u3064\u3051\u306a\u3044\n```pycon:Python2\n>>> 10**20\n100000000000000000000L\n```\n\n```pycon:Python3\n>>> 10**20\n100000000000000000000\n```\n\nPython3\u3067\u306fL\u304c\u672b\u5c3e\u306b\u3064\u3044\u3066\u3044\u307e\u305b\u3093\u306d\u3002\n\n### 8\u9032\u6570\u30ea\u30c6\u30e9\u30eb\u304c0720\u306e\u3088\u3046\u306a\u8868\u8a18\u304b\u30890o720\u3068\u3044\u3046\u3088\u3046\u306a\u8868\u8a18\u306b\u5909\u66f4\n\n```pycon:Python2\n>>> 0720\n464\n>>> 0o720\n464\n```\n\n```pycon:Python3\n>>> 0720\n  File \"<stdin>\", line 1\n    0720\n       ^\nSyntaxError: invalid token\n>>> 0o720\n464\n```\n\n\u3053\u308c\u306f0x\u30840b\u306a\u3069\u306e\u8868\u8a18\u306b\u7d71\u4e00\u3055\u308c\u305f\u5f62\u3067\u3057\u3087\u3046\u304b\u3002\n\n## \u30e6\u30cb\u30b3\u30fc\u30c9\u30688bit\u306e\u4ee3\u308f\u308a\u306b\u30c6\u30ad\u30b9\u30c8\u3068\u30c7\u30fc\u30bf\u3078\n\n### \u5168\u3066\u306e\u30c6\u30ad\u30b9\u30c8\u306fUnicode\u306b\n\n\u30bf\u30a4\u30c8\u30eb\u901a\u308a\u3002\n\u3053\u308c\u306b\u3088\u3063\u3066\u4ee5\u524d\u307e\u3067\u306e\u30e6\u30cb\u30b3\u30fc\u30c9\u30c6\u30ad\u30b9\u30c8\u306e\u30ea\u30c6\u30e9\u30eb`u\"...\"`\u306f\u4f7f\u7528\u3067\u304d\u306a\u304f\u306a\u3063\u305f\u3002\n\n```pycon:Python2\n>>> u\"unicode\"\nu'unicode'\n```\n\n```pycon:Python3\n>>> u\"unicode\"\n  File \"<stdin>\", line 1\n    u\"unicode\"\n             ^\nSyntaxError: invalid syntax\n```\n\n### \u30c6\u30ad\u30b9\u30c8\u306fstr\u578b\u3001data\u306fbytes\u578b\n\n```pycon:Python3\n>>> type(\"test\")\n<class 'str'>\n>>> type(b\"test\")\n<class 'bytes'>\n```\n\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u30ea\u30c6\u30e9\u30eb\u306b\u306f`b\"...\"`\u3092\u4f7f\u7528\u3059\u308b\u3002\n\n### \u30c6\u30ad\u30b9\u30c8\u3068data\u3092\u6df7\u305c\u308b\u3068TypeError\u3092\u9001\u51fa\u3059\u308b\n\n```pycon:Python2\n>>> \"str\" + b\"bytes\"\n'strbytes'\n```\n\n```pycon:Python3\n>>> \"str\" + b\"bytes\"\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: Can't convert 'bytes' object to str implicitly\n```\n\nPython2\u307e\u3058\u304b\u3088\u30fb\u30fb\uff082\u56de\u76ee\uff09\n\u3053\u3093\u306a\u306e\u767a\u72c2\u3082\u306e\u3067\u3059\u306d\u3002\u3002Python3\u30a8\u30e9\u3044\uff01\n\n### \u30c6\u30ad\u30b9\u30c8\u3068data\u9593\u306e\u660e\u793a\u7684\u5909\u63db\n\n```pycon:Python3\n>>> \"str\".encode()\nb'str'\n>>> bytes(\"str\", \"utf-8\")\nb'str'\n>>> \n>>> b\"bytes\".decode()\n'bytes'\n>>> str(b\"bytes\", \"utf-8\")\n'bytes'\n```\n\nstr, bytes\u9593\u306e\u5909\u63db\u3067\u3059\u306d\u3002\n\u307e\u3041\u3001Python\u3067\u306eencode\u3001decode\u306e\u8a18\u4e8b\u306f\u5c71\u307b\u3069\u3042\u308a\u307e\u3059\u304b\u3089\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u30fb\u30fb\u30fb\u3002\n\n\n### raw\u6587\u5b57\u5217\u5185\u3067\u3082\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u306f\u305d\u306e\u307e\u307e\u306e\u6587\u5b57\u3067\u89e3\u91c8\u3055\u308c\u308b\n\n```pycon:Python2\n>>> print(ur\"\\u20ac\")\n\u20ac\n```\n\n```pycon:Python3\n>>> print(r\"\\u20ac\")\n\\u20ac\n```\n\nPython2\u307e\u3058\u304b\u3088\u3001\u3068\u307e\u3067\u306f\u8a00\u3044\u307e\u305b\u3093\u304c\u3001\u304a\u3044\u3063\uff01\n\u3063\u3066\u611f\u3058\u3067\u3059\u306d\u3002raw\u6587\u5b57\u5217\u306e\u3044\u307f\u306d\u30fc\u3058\u3083\u3093\uff01\n\u307e\u3041\u3001\u3053\u3046\u3044\u3046\u6319\u52d5\u3092\u3057\u3066\u6b32\u3057\u3044\u5834\u5408\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304cPython3\u306e\u6319\u52d5\u306e\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3088\u306d\u30fc\u3002\n\n\n### basestring\u3068\u3044\u3046\u62bd\u8c61\u30af\u30e9\u30b9\u304c\u524a\u9664\n\n```pycon:Python2\n>>> str.__base__\n<type 'basestring'>\n>>> bytes.__base__\n<type 'basestring'>\n```\n\n```pycon:Python3\n>>> str.__base__\n<class 'object'>\n>>> bytes.__base__\n<class 'object'>\n```\n\nPython2\u3067\u306fbasestring\u3068\u3044\u3046\u62bd\u8c61\u30af\u30e9\u30b9\u304c\u3042\u3063\u305f\u306e\u3067\u3059\u306d\u3002\u305d\u308c\u3092\u7d99\u627f\u3057\u3066str\u3001bytes\u578b\u304c\u3067\u304d\u3066\u305f\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\nPython3\u3067\u306f\u76f4\u63a5\u305d\u308c\u305e\u308c\u306e\u30af\u30e9\u30b9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\n## \u69cb\u6587\u306e\u5909\u66f4\u306e\u6982\u8981\n\n### \u95a2\u6570\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u8ffd\u52a0\n\n```pycon:Python3\n>>> def f(a: \"int_value\", b: \"int_value default value one\" = 1) -> \"added_value\":\n...   return a+b\n... \n>>> f.__annotations__\n{'a': 'int_value', 'b': 'int_value default value one', 'return': 'added_value'}\n```\n\n\u95a2\u6570\u306e\u5f15\u6570\u3084\u8fd4\u308a\u5024\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4e0a\u306e\u4f8b\u3067\u306f\u6587\u5b57\u5217\u3060\u3051\u3067\u3059\u304c\u3001\u5f0f\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001`1+1`\u3084`int`\u306a\u3069\u3092\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```pycon:Python3\n>>> i=2\n>>> j=3\n>>> def f(a: i*j, b: i+j) -> 1+1:\n...  return a+b\n... \n>>> f.__annotations__\n{'a': 6, 'b': 5, 'return': 2}\n>>> i=10\n>>> j=10\n>>> f.__annotations__\n{'a': 6, 'b': 5, 'return': 2}\n```\n\n\u5f0f\u306f\u95a2\u6570\u5b9a\u7fa9\u6642\u306b\u8a55\u4fa1\u3055\u308c\u307e\u3059\u3002\u5f53\u305f\u308a\u524d\u3063\u3061\u3083\u5f53\u305f\u308a\u524d\u3067\u3059\u306d\u3002\u3002\n\n\n### \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u307f\u306e\u5f15\u6570\n\n```pycon:Python3\n>>> def f(a, *, b):\n...   return a+b\n... \n>>> def g(*, a, b):\n...   return a*b\n... \n>>> f(1, 2)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: f() takes exactly 1 positional argument (2 given)\n>>> f(1, b=2)\n3\n>>> g(1, b=2)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\nTypeError: g() takes exactly 0 non-keyword positional arguments (1 given)\n>>> g(a=1, b=2)\n2\n>>> g(b=1, a=2)\n2\n```\n\n\u30a2\u30b9\u30bf\u30ea\u30b9\u30af`*`\u3092\u4f7f\u7528\u3057\u3066\u305d\u308c\u4ee5\u964d\u306b\u5217\u6319\u3055\u308c\u308b\u5f15\u6570\u3092\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u9650\u5b9a\u3068\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u65e5\u672c\u8a9e\u306e\u6587\u732e\u3059\u3063\u3054\u304f\u5c11\u306a\u304f\u3063\u3066\u6700\u521d\u898b\u305f\u6642\u306f\u968f\u5206\u3068\u56f0\u308a\u307e\u3057\u305f(\u7b11)\n\n### \u30af\u30e9\u30b9\u5b9a\u7fa9\u306e\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u30ea\u30b9\u30c8\u306e\u5f8c\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u6e21\u305b\u308b\n\n```pycon:Python3\n>>> class MClass(type):\n...  def __new__(cls, name, bases, namespace, **kwds):\n...   result = type.__new__(cls, name, bases, dict(namespace))\n...   result.members = tuple(namespace)\n...   return result\n...  def __init__(self, *args, **kargs):\n...   print(\"args: \" + str(args))\n...   print(\"kargs: \" + str(kargs))\n... \n>>> class A(object, metaclass=MClass, a=1, b=2, c=3):\n...   def one(self): pass\n... \nargs: ('A', (<class 'object'>,), {'__module__': '__main__', 'one': <function one at 0x7f62d071c408>})\nkargs: {'a': 1, 'c': 3, 'b': 2}\n```\n\n\u3053\u308c\u3001\u5185\u5bb9\u304c\u5c11\u3057\u30d8\u30d3\u30fc\u3067\u3059\u306d\u30fb\u30fb\u30fb\u3002\n\u3068\u3082\u304b\u304f\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5f8c\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001type\u3067\u306f\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3092\u53d7\u3051\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u53d7\u3051\u53d6\u308c\u308b\u3088\u3046\u306ametaclass\u3092\u81ea\u4f5c\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u307e\u305b\u3093\u304c\u3002\u3002(MClass\u304c\u305d\u308c\u3067\u3059)\n\n### nonlocal\u6587\n\n```pycon:Python3\n>>> def counter(init=0):\n...  def cntup():\n...   nonlocal init\n...   init+=1\n...   return init\n...  return cntup\n...\n>>> c = counter()\n>>> c()\n1\n>>> c()\n2\n>>> c()\n3\n```\n\nnonlocal\u6587\u306f\u6307\u5b9a\u3055\u308c\u305f\u8b58\u5225\u5b50\u3092\u4e00\u3064\u4e0a\u306e\u30b9\u30b3\u30fc\u30d7\u306b\u3042\u308b\u5909\u6570\u3092\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u8981\u306f\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3067\u3059\u304b\u306d\u3002\n\u4f8b\u3067\u306fcounter\u95a2\u6570\u306e\u5f15\u6570init\u3092nonlocal\u6587\u3067\u53c2\u7167\u3057\u3066\u3044\u307e\u3059\u306d\u3002\nPython2\u3067\u306flist\u306a\u3069\u3092\u7528\u3044\u3066\u30b4\u30cb\u30e7\u30b4\u30cb\u30e7\u3057\u306a\u3051\u308c\u3070\u3067\u304d\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001Python3\u3067\u306f\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u306d\u3002\n(\u53c2\u7167\u3059\u308b\u3060\u3051\u3067\u3042\u308c\u3070nonlocal\u3084Python2\u3067\u306elist\u306a\u3069\u306f\u5fc5\u8981\u306a\u3044\u3002\u5916\u5074\u306e\u30b9\u30b3\u30fc\u30d7\u306e\u5909\u6570\u306b\u675f\u7e1b\u3092\u884c\u3046\u969b\u306b\u5fc5\u8981)\n\n```pycon:Python3\n>>> c.__closure__\n(<cell at 0x7f62d071d5c8: int object at 0x7a3e20>,)\n>>> c.__closure__[0].cell_contents\n3\n```\n\u3064\u3044\u3067\u306b\u3053\u306e\u3088\u3046\u306a\u5f62\u3067\u30af\u30ed\u30fc\u30b8\u30e3\u30fc\u3092\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\n\n### \u62e1\u5f35Iterable Unpacking\n\n```pycon:Python3\n>>> a, *rest, b = range(5)\n>>> a\n0\n>>> rest\n[1, 2, 3]\n>>> b\n4\n```\n\nrest\u306ba\u3068b\u306bUnpack\u5f8c\u3001\u4f59\u3063\u305f\u3082\u306e\u3092\u30ea\u30b9\u30c8\u3068\u3057\u3066Unpack\u3055\u308c\u308b\u3002\n\u3053\u306erest\u306f\u7a7a\u30ea\u30b9\u30c8\u3068\u3057\u3066Unpack\u3055\u308c\u308b\u3053\u3068\u3082\u3042\u308b\u3002\n\n```pycon:Python3\n>>> a, *rest, b = range(2)\n>>> a\n0\n>>> rest\n[]\n>>> b\n1\n```\n\u3053\u308c\u306f\u3059\u3054\u3044\u30fb\u30fb\u30fb\u3002\n\n\n## \u5909\u66f4\u3055\u308c\u305f\u69cb\u6587\n\n### \u4f8b\u5916\u306e\u30ad\u30e3\u30c3\u30c1\u306e\u69cb\u6587\n\n```pycon:Python2\n>>> try:\n...  raise Exception(\"test\")\n... except Exception, e:\n...  print \"catch exception!\"\n... \ncatch exception!\n```\n\n```pycon:Python3\n>>> try:\n...  raise Exception(\"test\")\n... except Exception as e:\n...  print(\"catch exception!\")\n... \ncatch exception!\n```\n\n\u30ab\u30f3\u30de\u304b\u3089as\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u5909\u66f4\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\n### \u65b0\u305f\u306araise\u6587\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\n\n```pycon:Python3\n>>> try:\n...  raise Exception(\"test\")\n... except Exception as e:\n...  raise RuntimeError(\"catch exception!\") from e\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\nException: test\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 4, in <module>\nRuntimeError: catch exception!\n```\n\nfrom\u7bc0\u304c\u8ffd\u52a0\u3055\u308c\u3001\u4f8b\u5916\u306e\u9023\u9396\u3092\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001except\u7bc0\u3067\u4f8b\u5916\u304c\u9001\u51fa\u3055\u308c\u305f\u5834\u5408\u3082\u6697\u9ed9\u7684\u306b\u50cd\u304f\u305d\u3046\u3067\u3059\u3088\u3002\n\n```pycon:Python3\n>>> try:\n...  1/0\n... except Exception as e:\n...  raise RuntimeError(\"raise exception.\")\n... \nTraceback (most recent call last):\n  File \"<stdin>\", line 2, in <module>\nZeroDivisionError: int division or modulo by zero\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 4, in <module>\nRuntimeError: raise exception.\n```\n\n\n### True, False\u304c\u4e88\u7d04\u8a9e\u306b\n\n```pycon:Python2\n>>> True = 0\n>>> False = 1\n>>> True\n0\n>>> False\n1\n>>> True and True\n0\n```\n\n```pycon:Python3\n>>> True=0\n  File \"<stdin>\", line 1\nSyntaxError: assignment to keyword\n>>> False=1\n  File \"<stdin>\", line 1\nSyntaxError: assignment to keyword\n```\n\n\u6050\u6016\uff01\uff01\n\u3063\u3066\u304b\u307e\u3041True,False\u306b\u4ee3\u5165\u3057\u305f\u308a\u3001\u666e\u901a\u306f\uff01\u3057\u306a\u3044\u3067\u3059\u3051\u3069\u306d\u3002\n\n\n### \u30e1\u30bf\u30af\u30e9\u30b9\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u306e\u5909\u66f4\n\n```pycon:Python2\n>>> class M(type):\n...  pass\n... \n>>> class C:\n...  __metaclass__ = M\n... \n>>> C.__class__\n<class '__main__.M'>\n```\n\n```pycon:Python3\n>>> class M(type):\n...  pass\n... \n>>> class C(metaclass=M):\n...  pass\n... \n>>> C.__class__\n<class '__main__.M'>\n```\n\nPython2\u3067\u306f\\_\\_metaclass\\_\\_\u5909\u6570\u3001Python3\u3067\u306f\u57fa\u5e95\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3059\u308b\u3068\u3053\u306b\u30ad\u30fc\u30ef\u30fc\u30c9\u5f15\u6570\u3068\u3057\u3066\u6e21\u3057\u307e\u3059\u3002\nPython3\u3067\u306fPython2\u306e\u3088\u3046\u306a\u624b\u6bb5\u306f\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u3053\u3053\u3067\u521d\u3081\u3066\u77e5\u3063\u305f\u306e\u304c\u3001Python2\u3067\u306fclass\u3067object\u3092\u660e\u793a\u7684\u306b\u7d99\u627f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u30e1\u30bf\u30af\u30e9\u30b9\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067object\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u304c\u3067\u304d\u308b\u3053\u3068\u3067\u3057\u305f\u3002\u306a\u308b\u307b\u3069\uff01\n\n```pycon:Python2\n>>> class A:\n...  pass\n... \n>>> A.__bases__\n()\n>>> class C:\n...  __metaclass__ = type\n... \n>>> C.__bases__\n(<type 'object'>,)\n```\n\n### ellipsis\u306f\u3069\u3053\u3067\u3067\u3082\u539f\u59cb\u7684\u306a\u5f0f\u3068\u3057\u3066\u4f7f\u7528\u3067\u304d\u308b\n\n```pycon:Python3\n>>> ...\nEllipsis\n>>> def e():\n...  ...\n```\n\n\u7701\u7565\u3002(\u307e\u3058\u3067\u8a00\u3046\u3053\u3068\u304c\u306a\u3044\u30fb\u30fb\u30fb)\n\n\n## \u524a\u9664\u3055\u308c\u305f\u64cd\u4f5c\n\n\u524a\u9664\u3055\u308c\u305f\u3082\u306e\u306a\u306e\u3067\u3055\u30fc\u3063\u3068\u3044\u304d\u307e\u3059\u3002\n\n### \u30bf\u30d7\u30eb\u5f15\u6570\u306e\u30a2\u30f3\u30d1\u30c3\u30af\n\n```pycon:Python2\n>>> def foo(a, (b,c)):\n...  return a+b+c\n... \n>>> t = 2,3\n>>> foo(1, t)\n6\n```\n\n```pycon:Python3\n>>> def foo(a, (b,c)):\n  File \"<stdin>\", line 1\n    def foo(a, (b,c)):\n               ^\nSyntaxError: invalid syntax\n```\n\n\u8aad\u307f\u3065\u3089\u3044\u3067\u3059\u306d\u3047\u30fb\u30fb\u30fb\u3002\nPython3\u3067\u306f1\u884c\u76ee\u304b\u3089\u6012\u3089\u308c\u307e\u3059\u3002\n\n### \u30d0\u30c3\u30af\u30af\u30aa\u30fc\u30c8\u306b\u3064\u3044\u3066\n\n```pycon:Python2\n>>> i = 123\n>>> `i`\n'123'\n```\n\n```pycon:Python3\n>>> i=123\n>>> `i`\n  File \"<stdin>\", line 1\n    `i`\n    ^\nSyntaxError: invalid syntax\n```\n\n\u3069\u3046\u3084\u3089\\_\\_repr\\_\\_\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u3066\u3044\u305f\u3088\u3046\u3067\u3059\u3002\n\n### exec\u306b\u3064\u3044\u3066\n\n```pycon:Python2\n>>> exec \"print('python2')\"\npython2\n>>> exec(\"print('python2')\")\npython2\n```\n\n```pycon:Python3\n>>> exec \"print('python3')\"\n  File \"<stdin>\", line 1\n    exec \"print('python3')\"\n                          ^\nSyntaxError: invalid syntax\n>>> exec(\"print('python3')\")\npython3\n```\n\nPython2\u3067\u306fexec\u6587\u3067\u3057\u305f\u3002\u95a2\u6570\u8868\u8a18\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\nPython3\u3067\u306f\u4e88\u7d04\u8a9e\u3067\u306f\u306a\u304f\u306a\u308a\u3001\u95a2\u6570\u3068\u3057\u3066\u6b8b\u308a\u307e\u3057\u305f\u3002\n\n### <>\u6f14\u7b97\u5b50\n\n```pycon:Python2\n>>> 1 <> 2\nTrue\n>>> 1 <> 1\nFalse\n```\n\n```pycon:Python3\n>>> 1 <> 2\n  File \"<stdin>\", line 1\n    1 <> 2\n       ^\nSyntaxError: invalid syntax\n```\n\n!=\u3067\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u306d\u3047\u3002\n\n### \u30ea\u30c6\u30e9\u30eb\u5468\u308a\n\n```pycon:Python2\n>>> u\"python2\"\nu'python2'\n>>> 100L\n100L\n```\n\n```pycon:Python3\n>>> u\"python3\"\n  File \"<stdin>\", line 1\n    u\"python3\"\n             ^\nSyntaxError: invalid syntax\n>>> 100L\n  File \"<stdin>\", line 1\n    100L\n       ^\nSyntaxError: invalid syntax\n```\n\n\u4e0a\u306e\u65b9\u3067\u65e2\u306b\u8ff0\u3079\u3066\u3044\u308b\u5185\u5bb9\u3067\u3059\u306d\u3002\n\n### \u30c8\u30c3\u30d7\u30ec\u30d9\u30eb\u4ee5\u5916\u3067\u306efrom module import *\u306b\u3064\u3044\u3066\n\n```pycon:Python2\n>>> from sys import *\n>>> def f():\n...  from os import *\n... \n<stdin>:1: SyntaxWarning: import * only allowed at module level\n```\n\n```pycon:Python3\n>>> from sys import *\n>>> def f():\n...  from os import *\n... \n  File \"<stdin>\", line 1\nSyntaxError: import * only allowed at module level\n```\n\nWarning\u304b\u3089Error\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u3002\u306a\u3093\u3067Python2\u306fWarning\u3067\u6b62\u3081\u305f\u3093\u3060\u308d\u3046\u304b\u30fb\u30fb\u30fb\n\n\n## \u305d\u306e\u4ed6\u306e\u5909\u66f4\n\n### \u6f14\u7b97\u5b50\u3068\u7279\u6b8a\u30e1\u30bd\u30c3\u30c9\n#### `!=`\u306f`==`\u3068\u9006\u306e\u7d50\u679c\u3092\u8fd4\u3059(`==`\u304cNotImplemented\u3092\u8fd4\u3055\u306a\u3044\u5834\u5408\u306f)\n\n```pycon:Python2\n>>> class C:\n...  def __init__(self, a):\n...   self.a = a\n...\n...  def __eq__(self, other):\n...   return self.a == other.a\n...\n>>> a = C(1)\n>>> b = C(1)\n>>> c = C(2)\n>>> a == b\nTrue\n>>> a == c\nFalse\n>>> a != b\nTrue\n>>> a != c\nTrue\n```\n\n```pycon:Python3\n>>> class C:\n...  def __init__(self, a):\n...   self.a = a\n...\n...  def __eq__(self, other):\n...   return self.a == other.a\n...\n>>> a = C(1)\n>>> b = C(1)\n>>> c = C(2)\n>>> a == b\nTrue\n>>> a != b\nFalse\n>>> a == c\nFalse\n>>> a != c\nTrue\n```\n\n\u3053\u308c\u3061\u3087\u3063\u3068\u610f\u5916\u3067\u3057\u305f\u3002\nPython2\u306e`!=`\u306f`__ne__()`\u3092\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u540c\u4e00\u306e\u3082\u306e\u304b\u3092\u6bd4\u8f03\u3057\u3066\u3044\u307e\u3059\u3002\na, b, c\u306f\u3069\u308c\u3082\u5225\u7269\u306a\u306e\u3067\u7d50\u679c\u304cTrue\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u81ea\u5206\u306f\u3066\u3063\u304d\u308aAttributeError\u304c\u51fa\u308b\u306e\u304b\u3068\u601d\u3063\u3066\u307e\u3057\u305f\u30fb\u30fb\u30fb\u3002\u5c11\u3057\u8003\u3048\u308c\u3070\u5206\u304b\u308b\u8a71\u3067\u3057\u305f\u306d\u3002\n\n#### unbound methods\u304b\u3089function object\u3078\n```pycon:Python2\n>>> class C:\n...  def f(self):\n...   pass\n...\n>>> C.f\n<unbound method C.f>\n```\n\n```pycon:Python3\n>>> class C:\n...  def f(self):\n...   pass\n...\n>>> C.f\n<function f at 0x100a35270>\n```\n\n\u306f\u3044\u3002Python3\u304c\u305f\u3060\u306e\u95a2\u6570\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3044\u307e\u3059\u3002\nunbound method\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u3002\nPython3\u306e\u307b\u3046\u304c\u5358\u7d14\u660e\u5feb\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u3067\u3059\u306d\n\n#### `__getslice__()`\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u524a\u9664\u3055\u308c\u3001`__getitem__()`\u7cfb\u306e\u30e1\u30bd\u30c3\u30c9\u306bslice\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u308b\n\n```pycon:Python2\n>>> class C:\n...  def __getslice__(self, i, j):\n...   print i, j\n...   raise NotImplementedError()\n...\n>>> a = C()\n>>> a[0:2]\n0 2\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 4, in __getslice__\nNotImplementedError\n```\n\n```pycon:Python3\n>>> class C:\n...  def __getitem__(self, obj):\n...   print(obj)\n...   print(type(obj))\n...   raise NotImplementedError()\n...\n>>> a = C()\n>>> a[0:2]\nslice(0, 2, None)\n<class 'slice'>\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<stdin>\", line 5, in __getitem__\nNotImplementedError\n```\n\n- __getslice__\n- __setslice__\n- __delslice__\n\n\u304c\n\n- __getitem__\n- __setitem__\n- __delitem__\n\n\u3092\u4ee3\u308f\u308a\u306b\u547c\u3076\u3088\u3046\u306b\u306a\u308a\u3001\u30b9\u30e9\u30a4\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u308b\u3088\u3046\u306b\u5909\u308f\u308a\u307e\u3057\u305f\u3002\n\u4f8b\u3067\u306f\u5b9f\u88c5\u3092\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u5f15\u6570\u306b\u30b9\u30e9\u30a4\u30b9\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6e21\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\n#### `next()`\u30e1\u30bd\u30c3\u30c9\u306f`__next__()`\u306b\u6539\u540d\u3055\u308c\u305f\n\n```pycon:Python2\n>>> class C:\n...  def __iter__(self):\n...   return self\n...\n...  def next(self):\n...   return 0\n...\n>>> a = C()\n>>> i = iter(a)\n>>> next(i)\n0\n>>> i.next()\n0\n```\n\n```pycon:Python3\n>>> class C:\n...  def __iter__(self):\n...   return self\n...\n...  def __next__(self):\n...   return 0\n...\n>>> a = C()\n>>> i = iter(a)\n>>> next(a)\n0\n>>> i.__next__()\n0\n```\n\n`next()`\u304b\u3089`__next__()`\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u5909\u308f\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\n#### `__oct__()`\u3068`__hex__()`\u306f\u524a\u9664\u3055\u308c\u3001`__index__()`\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\n\n```pycon:Python2\n>>> class C:\n...  def __oct__(self):\n...   return \"07\"\n...\n...  def __hex__(self):\n...   return \"0x7\"\n...\n>>> a = C()\n>>> hex(a)\n'0x7'\n>>> oct(a)\n'07'\n```\n\n```pycon:Python3\n>>> class C:\n...  def __index__(self):\n...   return 7\n...\n>>> a = C()\n>>> hex(a)\n'0x7'\n>>> oct(a)\n'0o7'\n```\n\n`__oct__()`\u3001`__hex__()`\u306f\u6570\u5024\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u3066\u8fd4\u3059\u30e1\u30bd\u30c3\u30c9\u306a\u306e\u3067\u3059\u304c\u3001`__index__()`\u306f\u6570\u5024\u3092\u8fd4\u3059\u3060\u3051\u3067\u3059\u3002\u5f8c\u306fPython\u304c\u826f\u3057\u306a\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nPython3\u7d20\u6674\u3089\u3057\u3044\u301c\u3002\n(\u4f8b\u306f\u5b9a\u6570\u8fd4\u3057\u3066\u307e\u3059\u304c\u3054\u52d8\u5f01\u3092\u30fb\u30fb\u30fb)\n\n#### `__nonzero__()`\u306f`__bool__()`\u306b\u6539\u540d\u3055\u308c\u305f\n\n```pycon:Python2\n>>> class C:\n...  def __nonzero__(self):\n...   return True\n...\n>>> a = C()\n>>> bool(a)\nTrue\n```\n\n```pycon:Python3\n>>> class C:\n...  def __bool__(self):\n...   return True\n...\n>>> a = C()\n>>> bool(a)\nTrue\n```\n\n`__nonzero__()`\u3063\u3066\u3069\u3046\u3044\u3046\u6d41\u308c\u3067\u540d\u524d\u304c\u6c7a\u307e\u3063\u305f\u3093\u3067\u3059\u304b\u306d\u30fb\u30fb\u30fb\u3002\nPython3\u3067\u306f`__bool__()`\u304c\u547c\u3070\u308c\u3066\u3044\u307e\u3059\u3002\u5206\u304b\u308a\u3084\u3059\u3044\u3002\n\n### Builtins\n\n#### `super()`\u306e\u8ffd\u52a0\n\n```pycon:Python3\n>>> class SuperClass:\n...  pass\n... \n>>> class SubClass(SuperClass):\n...  def findSuperClass(self):\n...   print(\"call super(): \", super())\n...   print(\"call super(SubClass, self)\", super(SubClass, self))\n...\n>>> i = SubClass()\n>>> i.findSuperClass()\ncall super():  <super: <class 'SubClass'>, <SubClass object>>\ncall super(SubClass, self) <super: <class 'SubClass'>, <SubClass object>>\n```\n\n`super()`\u306f\u5f15\u6570\u7121\u3057\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u3001\u9069\u5207\u306a\u30af\u30e9\u30b9\u3068\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u81ea\u52d5\u7684\u306b\u9078\u3093\u3067\u304f\u308c\u307e\u3059\u3002\n\u5f15\u6570\u304c\u3042\u308b\u6642\u3068\u51e6\u7406\u306f\u7279\u306b\u306f\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n#### `raw_input()`\u304c`input()`\u306b\u6539\u540d\n\n```pycon:Python3\n>>> input()\ntest\n'test'\n```\n\n`input()`\u306f\u6a19\u6e96\u5165\u529b\u304b\u30891\u884c\u8aad\u307f\u53d6\u308a\u3001\u6539\u884c\u3092\u9664\u3044\u305f\u6587\u5b57\u5217\u3092\u8fd4\u3057\u307e\u3059\u3002\nPython2\u3067\u306e`input()`\u3092\u5b9f\u884c\u3057\u305f\u3044\u5834\u5408\u306f`eval(input())`\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\n# \u307e\u3068\u3081\n\u3076\u3063\u3061\u3083\u3051Python3\u3067\u306f\n\n- print\u304c\u95a2\u6570\u306b\n- keys, items, values\u30e1\u30bd\u30c3\u30c9\u306f\u30a4\u30c6\u30ec\u30fc\u30c8\u53ef\u80fd\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059\n- \u6587\u5b57\u5217\u306e\u6a19\u6e96\u304cUnicode\u306b\u306a\u308a\u578b\u304c`str`\n- xrange\u304crange\u306b\n\n\u8fba\u308a\u3092\u899a\u3048\u3066\u304a\u3051\u3070\u6b86\u3069\u652f\u969c\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u3067\u7701\u3044\u305f\u5909\u66f4\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u30cb\u30c3\u30c1\u306a\u5185\u5bb9\u3067\u3042\u307e\u308a\u91cd\u8981\u3067\u306a\u3044\u6c17\u304c\u3057\u305f\u3082\u306e\u3092\u5168\u4f53\u306e1\u5272\u307b\u3069\u524a\u3063\u3066\u3044\u307e\u3059\u3002\u77e5\u308a\u305f\u3044\u65b9\u306f[What's New in Python3.0](https://docs.python.org/3/whatsnew/3.0.html)\u8aad\u3093\u3067\u304f\u3060\u3055\u3044(\u4e38\u6295\u3052)\u3002\n\n# \u7d42\u308f\u308a\u306b\n\n\u8a18\u4e8b\u3092\u66f8\u3044\u3066\u3066\u601d\u3063\u305f\u3053\u3068\u3067\u3059\u304c\u3001Python2\u3067\u7f60\u306b\u30cf\u30de\u308a\u305d\u3046\u306a\u70b9\u304c\u3044\u304f\u3064\u304b\u3042\u3063\u3066\u3073\u3063\u304f\u308a\u3057\u307e\u3057\u305f\u3002\n\u81ea\u5206\u3067\u3084\u308a\u59cb\u3081\u305f\u306e\u304cPython3\u304b\u3089\u3067\u826f\u304b\u3063\u305f\u3067\u3059\uff08\u7b11\uff09\n\n\u305d\u3057\u3066\u307e\u3060Python2\u304b\u3089\u4e57\u308a\u63db\u3048\u3066\u306a\u3044\u65b9\u306f\u4fbf\u5229\u306b\u3053\u308c\u3092\u6a5f\u4f1a\u306b\u899a\u3048\u3066\u3044\u305f\u3060\u3044\u3066Python3\u306b\u4e57\u308a\u63db\u3048\u308b\u3068\u5e78\u305b\u306aPython\u30e9\u30a4\u30d5\u304c\u5f85\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b(\u7b11)\n(Python2\u304b\u30893\u3068\u304b\u3082\u3046\u968f\u5206\u305f\u3063\u3066\u3066\u307e\u3068\u3081\u7cfb\u306e\u8a18\u4e8b\u306f\u6ca2\u5c71\u3042\u308a\u307e\u3059\u304c\u30fb\u30fb\u30fb)\n\n\u5192\u982d\u3067\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001Python3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306f\u5225\u8a18\u4e8b\u3067\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\nPython3.0\u304b\u3089Python3.5\u307e\u3067\u306e\u7d4c\u904e\u306fPython \u305d\u306e2 Advent Calendar \u306e16\u65e5\u306b\u306e\u305b\u308b\u3064\u3082\u308a\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u5909\u306a\u70b9\u3084\u9593\u9055\u3044\u3001\u3053\u3046\u3057\u305f\u65b9\u304c\u826f\u3044\u306a\u3069\u3042\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u308b\u3068\u3042\u308a\u304c\u305f\u3044\u3067\u3059\uff01\n\n\u660e\u65e5\u306f\u7a7a\u304d\u3067\u300111\u65e5\u306f@FGtatsuro\u3067\u3059\uff01\n\n**\u305d\u308c\u3067\u306f\u826f\u304dPython3\u30e9\u30a4\u30d5\u3092\uff01\uff01**\n"}