{"context": " More than 1 year has passed since last update..NET \u306e Task<T> \u306f\u3001Reactive Extensions \u304c\u63d0\u4f9b\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9 ToObservable() \u3067 IObservable<T> \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\u306a\u306b\u3082\u8003\u3048\u305a\u306b ToObservable() \u3092\u9023\u767a\u3057\u3066\u3044\u305f\u3089\u3001\u76db\u5927\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\nTask.Run().ToObservable() \u3068\u304b\u3001\u610f\u5473\u306a\u3044\u3063\u3057\u3087\n\u30c0\u30e1\u306a\u30b3\u30fc\u30c9\u3002\nvar i = 0;\nIObservable<int> incrementObservable = Task.Run (() => {\n    i++;\n    Debug.WriteLine($\"increment! - {i}\");\n    return i;\n})\n.ToObservable ();\n\nDebug.WriteLine(\"Ready...\");\n\nincrementObservable // \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    .Repeat(3) // \uff13\u56de\u7e70\u308a\u8fd4\u3059\n    .Subscribe(\n        x  => Debug.WriteLine($\"OnNext({x})\"),\n        ex => Debug.WriteLine($\"OnError({ex.ToString()})\"),\n        () => Debug.WriteLine(\"OnCompleted\"));\n\n\nincrementObservable \u306f\u3001\u526f\u4f5c\u7528\u3042\u308a\u3042\u308a\u3067\u3059\u304c\u3001\u5916\u90e8\u5909\u6570 i \u3092 +1 \u3057\u3066\u5f8c\u7d9a\u306b\u6d41\u3059 IObservable<int> \u3067\u3059\u3002\n\u3000\u3053\u308c\u3092 .Repeat(3) \u3057\u3066 .Subscribe \u3057\u3066\u307e\u3059\u304b\u3089\u3001\n\u3000\n\nReady...\nincrement! - 1\nOnNext(1)\nincrement! - 2\nOnNext(2)\nincrement! - 3\nOnNext(3)\nOnCompleted\n\n\u3068\u3044\u3046\u51fa\u529b\u3092\u671f\u5f85\u3057\u3066\u307e\u3057\u305f\u3002\n\u304c\u3001\u5b9f\u969b\u306e\u51fa\u529b\u306f\u3053\u3046\u3002\n\nincrement! - 1\nReady...\nOnNext(1)\nOnNext(1)\nOnNext(1)\nOnCompleted\n\nSubscribe \u3059\u308b\u524d\u306b Task \u304c\u5b9f\u884c\u3055\u308c\u3066\u308b\u3057\u3001 repeat \u3057\u3066\u308b\u306e\u306b increment \u3055\u308c\u306a\u3044\u3002\u3002\u3002\n\u300c\u30fb\u30fb\u30fb\u3093\uff1f Task.Run().ToObservable() \u3063\u3066\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092 IObservable \u5316\u3057\u3066\u308b\u3060\u3051\u3058\u3083\u306d\uff1f\u300d\n\u30b3\u30fc\u30c9\u898b\u305f\u307e\u3093\u307e\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u6c17\u3065\u304f\u306e\u306b\uff11\u6642\u9593\u304b\u304b\u308a\u307e\u3057\u305f\u3002\u3002\u3002\n\u671f\u5f85\u901a\u308a\u52d5\u304f\u306e\u306f\u3053\u3046\u2193\u3002\nvar i = 0;\nIObservable<int> incrementObservable = Observable.FromAsync(()=>Task.Run(() => {\n    i++;\n    Debug.WriteLine($\"increment! - {i}\");\n    return i;\n}));\n\nDebug.WriteLine(\"Ready...\");\n\nincrementObservable // \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n    .Repeat(3) // \uff13\u56de\u7e70\u308a\u8fd4\u3059\n    .Subscribe(\n        x  => Debug.WriteLine($\"OnNext({x})\"),\n        ex => Debug.WriteLine($\"OnError({ex.ToString()})\"),\n        () => Debug.WriteLine(\"OnCompleted\"));\n\n\nObservable.FromAsync \u3067 Task \u306e\u5b9f\u884c\u305d\u306e\u3082\u306e\u3092 IObservable \u5316\u3057\u307e\u3059\u3002\n\u3053\u308c\u306e\u7d50\u679c\u306f\u6b63\u3057\u304f\u3053\u3046\u2193\u306a\u308a\u307e\u3057\u305f\u3002\n\nReady...\nincrement! - 1\nOnNext(1)\nincrement! - 2\nOnNext(2)\nincrement! - 3\nOnNext(3)\nOnCompleted\n\n\nTask \u306f\uff11\u56de\u3057\u304b\u5b9f\u884c\u3067\u304d\u306a\u3044\n\u3068\u3053\u308d\u3067\u3001 Task<T> \u306f\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u3068\u3001\uff12\u5ea6\u76ee\u306f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\uff08Furure \u3084 Promise \u3082\u305d\u3046\u3060\u3063\u3051\uff09\nvar i = 0;\nTask<int> incrementTask = new Task<int>(() => {\n    i++;\n    Debug.WriteLine($\"increment! - {i}\");\n    return i;\n});\n\nincrementTask.RunSynchronously();\nincrementTask.RunSynchronously(); \n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\uff12\u56de\u76ee\u306e RunSynchronously() \u3067\u4f8b\u5916\u304c\u3067\u307e\u3059\u3002\n\u3068\u306a\u308b\u3068\u3001 incrementTask.ToObservable() \u3057\u305f\u3068\u3057\u3066\u3082\u3001\u671f\u5f85\u901a\u308a\u52d5\u3044\u3066\u304f\u308c\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\uff08\u305d\u3082\u305d\u3082 Task \u306f Start \u306a\u3069\u3057\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001Observable \u306e\u30c1\u30a7\u30a4\u30f3\u306e\u4e2d\u3067\u3044\u3064\u547c\u3076\u306e\uff1f\uff09\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001 Task.ToObservable() \u306f\u3001\u3069\u3046\u3044\u3046\u6642\u306b\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3060\u308c\u304b\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\uff08\u6c57\uff09\n\n.NET \u306e ``Task<T>`` \u306f\u3001Reactive Extensions \u304c\u63d0\u4f9b\u3059\u308b\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9 ``ToObservable()`` \u3067 ``IObservable<T>`` \u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\n\u306a\u306b\u3082\u8003\u3048\u305a\u306b ``ToObservable()`` \u3092\u9023\u767a\u3057\u3066\u3044\u305f\u3089\u3001\u76db\u5927\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n## Task.Run().ToObservable() \u3068\u304b\u3001\u610f\u5473\u306a\u3044\u3063\u3057\u3087\n\n\u30c0\u30e1\u306a\u30b3\u30fc\u30c9\u3002\n\n```C#\nvar i = 0;\nIObservable<int> incrementObservable = Task.Run (() => {\n\ti++;\n\tDebug.WriteLine($\"increment! - {i}\");\n\treturn i;\n})\n.ToObservable ();\n\nDebug.WriteLine(\"Ready...\");\n\nincrementObservable // \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n\t.Repeat(3) // \uff13\u56de\u7e70\u308a\u8fd4\u3059\n\t.Subscribe(\n\t\tx  => Debug.WriteLine($\"OnNext({x})\"),\n\t\tex => Debug.WriteLine($\"OnError({ex.ToString()})\"),\n\t\t() => Debug.WriteLine(\"OnCompleted\"));\n\n```\n\n``incrementObservable`` \u306f\u3001\u526f\u4f5c\u7528\u3042\u308a\u3042\u308a\u3067\u3059\u304c\u3001\u5916\u90e8\u5909\u6570 i \u3092 +1 \u3057\u3066\u5f8c\u7d9a\u306b\u6d41\u3059 ``IObservable<int>`` \u3067\u3059\u3002\n\u3000\u3053\u308c\u3092 ``.Repeat(3)`` \u3057\u3066 ``.Subscribe`` \u3057\u3066\u307e\u3059\u304b\u3089\u3001\n\u3000\n> Ready...\n> increment! - 1\n> OnNext(1)\n> increment! - 2\n> OnNext(2)\n> increment! - 3\n> OnNext(3)\n> OnCompleted\n\n\u3068\u3044\u3046\u51fa\u529b\u3092\u671f\u5f85\u3057\u3066\u307e\u3057\u305f\u3002\n\u304c\u3001\u5b9f\u969b\u306e\u51fa\u529b\u306f\u3053\u3046\u3002\n\n> increment! - 1\n> Ready...\n> OnNext(1)\n> OnNext(1)\n> OnNext(1)\n> OnCompleted\n\nSubscribe \u3059\u308b\u524d\u306b Task \u304c\u5b9f\u884c\u3055\u308c\u3066\u308b\u3057\u3001 repeat \u3057\u3066\u308b\u306e\u306b increment \u3055\u308c\u306a\u3044\u3002\u3002\u3002\n\n\u300c\u30fb\u30fb\u30fb\u3093\uff1f Task.Run().ToObservable() \u3063\u3066\u3001\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092 IObservable \u5316\u3057\u3066\u308b\u3060\u3051\u3058\u3083\u306d\uff1f\u300d\n\n\u30b3\u30fc\u30c9\u898b\u305f\u307e\u3093\u307e\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u306b\u6c17\u3065\u304f\u306e\u306b\uff11\u6642\u9593\u304b\u304b\u308a\u307e\u3057\u305f\u3002\u3002\u3002\n\n\u671f\u5f85\u901a\u308a\u52d5\u304f\u306e\u306f\u3053\u3046\u2193\u3002\n\n```C#\nvar i = 0;\nIObservable<int> incrementObservable = Observable.FromAsync(()=>Task.Run(() => {\n\ti++;\n\tDebug.WriteLine($\"increment! - {i}\");\n\treturn i;\n}));\n\nDebug.WriteLine(\"Ready...\");\n\nincrementObservable // \u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\n\t.Repeat(3) // \uff13\u56de\u7e70\u308a\u8fd4\u3059\n\t.Subscribe(\n\t\tx  => Debug.WriteLine($\"OnNext({x})\"),\n\t\tex => Debug.WriteLine($\"OnError({ex.ToString()})\"),\n\t\t() => Debug.WriteLine(\"OnCompleted\"));\n\n```\n\n``Observable.FromAsync`` \u3067 Task \u306e\u5b9f\u884c\u305d\u306e\u3082\u306e\u3092 IObservable \u5316\u3057\u307e\u3059\u3002\n\u3053\u308c\u306e\u7d50\u679c\u306f\u6b63\u3057\u304f\u3053\u3046\u2193\u306a\u308a\u307e\u3057\u305f\u3002\n\n> Ready...\n> increment! - 1\n> OnNext(1)\n> increment! - 2\n> OnNext(2)\n> increment! - 3\n> OnNext(3)\n> OnCompleted\n\n\n## Task \u306f\uff11\u56de\u3057\u304b\u5b9f\u884c\u3067\u304d\u306a\u3044\n\n\u3068\u3053\u308d\u3067\u3001 ``Task<T>`` \u306f\u4e00\u5ea6\u5b9f\u884c\u3059\u308b\u3068\u3001\uff12\u5ea6\u76ee\u306f\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\uff08Furure \u3084 Promise \u3082\u305d\u3046\u3060\u3063\u3051\uff09\n\n```C#\nvar i = 0;\nTask<int> incrementTask = new Task<int>(() => {\n\ti++;\n\tDebug.WriteLine($\"increment! - {i}\");\n\treturn i;\n});\n\nincrementTask.RunSynchronously();\nincrementTask.RunSynchronously(); \n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306f\uff12\u56de\u76ee\u306e ``RunSynchronously()`` \u3067\u4f8b\u5916\u304c\u3067\u307e\u3059\u3002\n\n\u3068\u306a\u308b\u3068\u3001 ``incrementTask.ToObservable()`` \u3057\u305f\u3068\u3057\u3066\u3082\u3001\u671f\u5f85\u901a\u308a\u52d5\u3044\u3066\u304f\u308c\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\uff08\u305d\u3082\u305d\u3082 Task \u306f ``Start`` \u306a\u3069\u3057\u306a\u3044\u3068\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u3067\u3001Observable \u306e\u30c1\u30a7\u30a4\u30f3\u306e\u4e2d\u3067\u3044\u3064\u547c\u3076\u306e\uff1f\uff09\n\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u3001 ``Task.ToObservable()`` \u306f\u3001\u3069\u3046\u3044\u3046\u6642\u306b\u4f7f\u3048\u3070\u3044\u3044\u306e\u304b\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u3060\u308c\u304b\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\uff08\u6c57\uff09\n", "tags": ["ReactiveX", "C#"]}