{"context": " More than 1 year has passed since last update.socket.io\u3092\u4f7f\u3063\u3066\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306e\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\u8a18\u4e8b\nhttp://qiita.com/mito_log/items/a6207d2b43189687d750\nhttp://stackoverflow.com/questions/23619015/creating-a-private-chat-between-a-key-using-a-node-js-and-socket-io\nhttp://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n\n\u958b\u767a\u74b0\u5883\nubuntu14.04 + nginx + unicorn\nnode + express + socket.io\n\n\u3056\u3063\u304f\u308a\u3068\u3057\u305f\u6d41\u308c\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067RoomId\u3092\u751f\u6210\uff08\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c1\u30e3\u30c3\u30c8\u30e6\u30fc\u30b6\u30fc\u9593\u3067RoomId\u3092\u5171\u6709\u3059\u308b\uff09\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067roomId\u3092\u4f7f\u3063\u3066join\u3059\u308b\n\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u6642\u306b\u3001\u30c6\u30ad\u30b9\u30c8\u3068RoomId\u3092\u30b5\u30fc\u30d0\u306b\u9001\u4fe1\u3059\u308b\n\u30b5\u30fc\u30d0\u5074\u3067to\u3067\u30eb\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u3001emit\u3059\u308b\n\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n\nindex.js\nvar app = require('express')();\napp.get('/',function(req, res) {\n  res.sendFile('socket.html',{root:'./'});\n  console.log(\"hosting socket.html\");\n});\n\nvar http = require('http').Server(app);\nhttp.listen(1337, function() {\n  console.log(\"listening on *:1337\");\n});\n\nvar io = require('socket.io')(http);\nio.on('connection', function(socket){\n  socket.on('joinRoom', function(roomId) {\n    socket.join(roomId, function(){\n      console.log('joined test room: '+ roomId);\n    }); \n  }); \n  socket.on('disconnect', function(){\n    console.log('user disconnected');\n    io.emit('chatMessage','user disconnected');\n  }); \n  socket.on('chatMessage', function(data) {\n    console.log('message: '+data.message);\n    //4. \u30b5\u30fc\u30d0\u5074\u3067to\u3067\u30eb\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u3001emit\u3059\u308b\n    io.to(data.room).emit('chatMessage', data.message);\n  }); \n});\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n\nsocket.html\n<!doctype html>\n<html>\n  <head>\n    <title>Socket.IO chat</title>\n    <style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body { font: 13px Helvetica, Arial; }\n    form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }\n    form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }\n    form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }\n#messages { list-style-type: none; margin: 0; padding: 0; }\n#messages li { padding: 5px 10px; }\n#messages li:nth-child(odd) { background: #eee; }\n    </style>\n    <script src=\"https://cdn.socket.io/socket.io-1.3.5.js\"></script>\n    <script src=\"http://code.jquery.com/jquery-1.11.1.js\"></script>\n\n  </head>\n  <body>\n    <ul id=\"messages\"></ul>\n    <form action=\"\">\n      <input id=\"m\" autocomplete=\"off\" /><button>Send</button>\n    </form>\n    <script>\n      var socket = io.connect('/');\n      var roomId = 'testRoom';\n      socket.emit('joinRoom', roomId);\n      $('form').submit(function(){\n          socket.emit('chatMessage' ,{message:$('#m').val(),room:roomId});\n          $('#m').val('');\n          return false;\n      });\n      socket.on('chatMessage', function (msg) {\n        $('#messages').append($('<li>').text(msg));\n      });\n    </script>\n  </body>\n</html>\n\n\nsocket.io\u3092\u4f7f\u3063\u3066\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306e\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n## \u53c2\u8003\u8a18\u4e8b\nhttp://qiita.com/mito_log/items/a6207d2b43189687d750\nhttp://stackoverflow.com/questions/23619015/creating-a-private-chat-between-a-key-using-a-node-js-and-socket-io\nhttp://socket.io/docs/rooms-and-namespaces/#joining-and-leaving\n\n## \u958b\u767a\u74b0\u5883\nubuntu14.04 + nginx + unicorn\nnode + express + socket.io\n\n\n## \u3056\u3063\u304f\u308a\u3068\u3057\u305f\u6d41\u308c\n\n1. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067RoomId\u3092\u751f\u6210\uff08\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30c1\u30e3\u30c3\u30c8\u30e6\u30fc\u30b6\u30fc\u9593\u3067RoomId\u3092\u5171\u6709\u3059\u308b\uff09\n2. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3067roomId\u3092\u4f7f\u3063\u3066join\u3059\u308b\n3. \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u6642\u306b\u3001\u30c6\u30ad\u30b9\u30c8\u3068RoomId\u3092\u30b5\u30fc\u30d0\u306b\u9001\u4fe1\u3059\u308b\n4. \u30b5\u30fc\u30d0\u5074\u3067to\u3067\u30eb\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u3001emit\u3059\u308b\n\n\n\n\n\n\n## \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n```index.js\nvar app = require('express')();\napp.get('/',function(req, res) {\n  res.sendFile('socket.html',{root:'./'});\n  console.log(\"hosting socket.html\");\n});\n\nvar http = require('http').Server(app);\nhttp.listen(1337, function() {\n  console.log(\"listening on *:1337\");\n});\n\nvar io = require('socket.io')(http);\nio.on('connection', function(socket){\n  socket.on('joinRoom', function(roomId) {\n    socket.join(roomId, function(){\n      console.log('joined test room: '+ roomId);\n    }); \n  }); \n  socket.on('disconnect', function(){\n    console.log('user disconnected');\n    io.emit('chatMessage','user disconnected');\n  }); \n  socket.on('chatMessage', function(data) {\n    console.log('message: '+data.message);\n    //4. \u30b5\u30fc\u30d0\u5074\u3067to\u3067\u30eb\u30fc\u30e0\u3092\u6307\u5b9a\u3057\u3066\u3001emit\u3059\u308b\n    io.to(data.room).emit('chatMessage', data.message);\n  }); \n});\n```\n\n\n## \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\n```socket.html\n<!doctype html>\n<html>\n  <head>\n    <title>Socket.IO chat</title>\n    <style>\n    * { margin: 0; padding: 0; box-sizing: border-box; }\n    body { font: 13px Helvetica, Arial; }\n    form { background: #000; padding: 3px; position: fixed; bottom: 0; width: 100%; }\n    form input { border: 0; padding: 10px; width: 90%; margin-right: .5%; }\n    form button { width: 9%; background: rgb(130, 224, 255); border: none; padding: 10px; }\n#messages { list-style-type: none; margin: 0; padding: 0; }\n#messages li { padding: 5px 10px; }\n#messages li:nth-child(odd) { background: #eee; }\n    </style>\n    <script src=\"https://cdn.socket.io/socket.io-1.3.5.js\"></script>\n    <script src=\"http://code.jquery.com/jquery-1.11.1.js\"></script>\n\n  </head>\n  <body>\n    <ul id=\"messages\"></ul>\n    <form action=\"\">\n      <input id=\"m\" autocomplete=\"off\" /><button>Send</button>\n    </form>\n    <script>\n      var socket = io.connect('/');\n      var roomId = 'testRoom';\n      socket.emit('joinRoom', roomId);\n      $('form').submit(function(){\n          socket.emit('chatMessage' ,{message:$('#m').val(),room:roomId});\n          $('#m').val('');\n          return false;\n      });\n      socket.on('chatMessage', function (msg) {\n        $('#messages').append($('<li>').text(msg));\n      });\n    </script>\n  </body>\n</html>\n```\n\n", "tags": ["Socket.io", "Node.js"]}