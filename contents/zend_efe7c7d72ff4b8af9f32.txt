{"context": " More than 1 year has passed since last update.\n\nTWE-Lite\u306e\u30bf\u30a4\u30de\n\nTWE-Lite\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u30de\u30a4\u30b3\u30f3JN5164\u306b\u306f\u901a\u5e38\u306e\u30bf\u30a4\u30de\u3068\u9ad8\u7cbe\u5ea6\u30bf\u30a4\u30de(TickTimer)\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\n\n\u901a\u5e38\u306e\u30bf\u30a4\u30de\u3068TickTimer\uff0c\u3069\u308c\u304f\u3089\u3044\u5dee\u304c\u3042\u308b\u306e\u304b\u6c17\u306b\u306a\u308b\u306e\u3067\u898b\u3066\u307f\u305f\n\u305f\u3060\u3057\uff0c\u4f7f\u7528\u3057\u305f\u6a5f\u6750\u306fToCoStick\n\n\n\n\u76ee\u7684\n\nTIMER\u5272\u308a\u8fbc\u307f\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\uff0e\n\u3064\u3044\u3067\u306bTickTimer\u3068\u306e\u8aa4\u5dee\u3082\u307f\u308b\uff0e\n\n\n\u691c\u8a3c\u7528\u30d7\u30ed\u30b0\u30e9\u30e0\n\nmain.c\n#include <AppHardwareApi.h>\n#include \"utils.h\"\n#include \"serial.h\"\n#include \"sprintf.h\"\n#include \"ToCoNet.h\"\n#include <string.h>\n\n#define UART_BAUD 115200 // \u30b7\u30ea\u30a2\u30eb\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\n\n\nstatic tsFILE sSerStream;          // \u30b7\u30ea\u30a2\u30eb\u7528\u30b9\u30c8\u30ea\u30fc\u30e0\nstatic tsSerialPortSetup sSerPort; // \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\n\nstatic tsTimerContext timer0;\n\n\n// \u30c7\u30d0\u30c3\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\u7528\n#define DBG\n#ifdef DBG\n#define dbg(...) vfPrintf(&sSerStream, LB __VA_ARGS__)\n#else\n#define dbg(...)\n#endif\n\n// \u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u7528\u306b UART \u3092\u521d\u671f\u5316\nstatic void vSerialInit() {\n    static uint8 au8SerialTxBuffer[96];\n    static uint8 au8SerialRxBuffer[32];\n\n    sSerPort.pu8SerialRxQueueBuffer = au8SerialRxBuffer;\n    sSerPort.pu8SerialTxQueueBuffer = au8SerialTxBuffer;\n    sSerPort.u32BaudRate = UART_BAUD;\n    sSerPort.u16AHI_UART_RTS_LOW = 0xffff;\n    sSerPort.u16AHI_UART_RTS_HIGH = 0xffff;\n    sSerPort.u16SerialRxQueueSize = sizeof(au8SerialRxBuffer);\n    sSerPort.u16SerialTxQueueSize = sizeof(au8SerialTxBuffer);\n    sSerPort.u8SerialPort = E_AHI_UART_0;\n    sSerPort.u8RX_FIFO_LEVEL = E_AHI_UART_FIFO_LEVEL_1;\n    SERIAL_vInit(&sSerPort);\n\n    sSerStream.bPutChar = SERIAL_bTxChar;\n    sSerStream.u8Device = E_AHI_UART_0;\n}\n\n\nstatic void vInitTimer()\n{\n    memset(&timer0, 0, sizeof(tsTimerContext));\n    timer0.u8Device = E_AHI_DEVICE_TIMER0; // timer0\u4f7f\u7528\n\n    timer0.u16Hz = 1000;        // 1000Hz\n    timer0.u8PreScale = 1;      // \u30d7\u30ea\u30b9\u30b1\u30fc\u30e91/2\n    timer0.bDisableInt = FALSE; // \u5272\u308a\u8fbc\u307f\u7981\u6b62\n\n\n    vTimerConfig(&timer0); // \u30bf\u30a4\u30de\u8a2d\u5b9a\u66f8\u304d\u8fbc\u307f\n    vTimerStart(&timer0);  // \u30bf\u30a4\u30de\u30b9\u30bf\u30fc\u30c8\n\n}\n\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u521d\u671f\u5316\nstatic void vInitHardware()\n{\n    vSerialInit();                      //  \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u8a2d\u5b9a\n    ToCoNet_vDebugInit(&sSerStream);\n    ToCoNet_vDebugLevel(0);\n}\n\nstatic int sum = 0;\n\n// \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\nstatic void vProcessEvCore(tsEvent *pEv, teEvent eEvent, uint32 u32evarg)\n{\n\n    // 1 \u79d2\u5468\u671f\u306e\u30b7\u30b9\u30c6\u30e0\u30bf\u30a4\u30de\u901a\u77e5\n   if(eEvent == E_EVENT_TICK_SECOND)\n   {\n        dbg(\"%d\\t%d\",u32TickCount_ms,sum);      //  Tick\u30bf\u30a4\u30de\u304c\u6570\u3048\u3066\u308b\uff08\u3089\u3057\u3044\uff09ms\u3068\uff0cTIMER0\u306b\u3088\u308bms\u3092\u51fa\u529b\n   }\n\n    return;\n}\n\n\nvoid cbToCoNet_vMain(void)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vRxEvent(tsRxDataApp *pRx)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vTxEvent(uint8 u8CbId, uint8 bStatus)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vNwkEvent(teEvent eEvent, uint32 u32arg)\n{\n    return;\n}\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5272\u308a\u8fbc\u307f\u306e\u9045\u5ef6\u5b9f\u884c\u90e8\nvoid cbToCoNet_vHwEvent(uint32 u32DeviceId, uint32 u32ItemBitmap)\n{\n    if(u32DeviceId == E_AHI_DEVICE_TIMER0)  //  TIMER0\u3067\u5272\u308a\u8fbc\u307e\u308c\u305f\u3089\n    {\n        sum++;\n    }\n    return;\n}\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5272\u308a\u8fbc\u307f\u767a\u751f\u6642\nuint8 cbToCoNet_u8HwInt(uint32 u32DeviceId, uint32 u32ItemBitmap)\n{\n\n    return FALSE;\n}\n\n// \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u6642\nvoid cbAppColdStart(bool_t bAfterAhiInit)\n{\n\n    sToCoNet_AppContext.u8CPUClk = 3;       //  CPU\u30af\u30ed\u30c3\u30af\u306f\u6700\u9ad8\u306e32MHz\n    sToCoNet_AppContext.u16TickHz = 250;    //  TickTimer\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e250Hz\n    ToCoNet_vRfConfig();                    //  \u8a2d\u5b9a\u9069\u7528\uff0e\u7121\u304f\u3066\u3082\u3044\u3044\u6c17\u304c\u3059\u308b\uff08\u672a\u691c\u8a3c\uff09\n    if (!bAfterAhiInit) {\n    } else {\n        // \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u767b\u9332\n        ToCoNet_Event_Register_State_Machine(vProcessEvCore);\n        vInitHardware();\n        vInitTimer();\n    }\n}\n\n// \u30a6\u30a9\u30fc\u30e0\u30b9\u30bf\u30fc\u30c8\u6642\nvoid cbAppWarmStart(bool_t bAfterAhiInit)\n{\n    return;\n}\n\n\n\n\n\nTIMER0\u30671000Hz\u306e\u5272\u308a\u8fbc\u307f\u3092\u304b\u3051\u3066\uff0c\u5272\u308a\u8fbc\u307f\u6642\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\uff0e\n\uff11\u79d2\u304a\u304d\u306b\uff0cTickTimer\u304c\u6570\u3048\u3066\u308b\uff08\u3089\u3057\u304d\uff091ms\u30ab\u30a6\u30f3\u30bf\u3068TIMER0\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u6570\u5024\u3092\u6bd4\u8f03\n\n1\u79d2\u306e\u8aa4\u5dee\u304c\u51fa\u308b\u307e\u3067\u3072\u305f\u3059\u3089\u5f85\u3064\n\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u90e8\u306b\u3064\u3044\u3066\u306f\uff0c\u3053\u3061\u3089\u306eklab\u69d8\u306e\u8a18\u4e8b\n\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff0e\n\n\n\u52d5\u3044\u3066\u308b\u3068\u3053\n\n\n\u7d50\u679c\n\nTIMER0\u306fTickTimer\u306b\u6bd4\u3079\uff0c64024\u79d2\u306b1\u79d2\u306e\u9045\u308c\u304c\u3042\u308a\u307e\u3057\u305f\u3068\u3055\uff0e\n\u3069\u3063\u3061\u306e\u304c\u7cbe\u5ea6\u3044\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3051\u3069\uff0c\u516c\u5f0f\u6587\u66f8\uff08\u30de\u30a4\u30b3\u30f3\u306e\u65b9\uff09\u3092\u8aad\u3080\u9650\u308a\u306fTickTimer\u306e\u304c\u826f\u3044\u3063\u307d\u3044.\n\u305f\u3060\u3057ToCoNet\u3092\u5229\u7528\u3059\u308b\u306a\u3089\uff0cTickTimer\u306f\u6291\u3048\u3089\u308c\u3066\u3044\u308b\uff08\u4e00\u5fdc\u5272\u308a\u8fbc\u307f\u5468\u671f\u306e\u5909\u66f4\u306f\u3067\u304d\u308b\uff09\n\n\n\u5f8c\u8a18\n\nTWE-Lite\uff0c\u9762\u767d\u3044\u306e\u306b\u3042\u3093\u307e\u308a\u6d41\u884c\u3063\u3066\u306a\u3044\u6c17\u304c\u3059\u308b\uff0e\n\n\nC\u3057\u304b\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u75db\u3044\uff0eC++\u304c\u4f7f\u3048\u305f\u3089\u3089\u306a\u3042\u2026\uff0e\n\u3068\u3044\u3046\u304b\u516c\u5f0f\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3082\u7d50\u69cb\u96d1\uff06\u4fdd\u8b77\u306e\u305b\u3044\u3067\u4f7f\u3044\u3065\u3089\u3044\nBluetooth\u3068\u9055\u3063\u3066\u8272\u3093\u306a\u7269\u306b\u7e4b\u3052\u306a\u3044\u306e\u3082\u539f\u56e0\u306e\u3072\u3068\u3064\u304b\n\u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306e\u6027\u80fd\u3082\u898b\u3066\u3044\u304d\u305f\u3044\n\n\n\n\n# TWE-Lite\u306e\u30bf\u30a4\u30de\n\n- TWE-Lite\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u30de\u30a4\u30b3\u30f3JN5164\u306b\u306f\u901a\u5e38\u306e\u30bf\u30a4\u30de\u3068\u9ad8\u7cbe\u5ea6\u30bf\u30a4\u30de(TickTimer)\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\n- **\u901a\u5e38\u306e\u30bf\u30a4\u30de\u3068TickTimer\uff0c\u3069\u308c\u304f\u3089\u3044\u5dee\u304c\u3042\u308b\u306e\u304b**\u6c17\u306b\u306a\u308b\u306e\u3067\u898b\u3066\u307f\u305f\n- \u305f\u3060\u3057\uff0c\u4f7f\u7528\u3057\u305f\u6a5f\u6750\u306f**ToCoStick**\n\n# \u76ee\u7684\n\n- **TIMER\u5272\u308a\u8fbc\u307f\u3092\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\uff0e**\n- \u3064\u3044\u3067\u306bTickTimer\u3068\u306e\u8aa4\u5dee\u3082\u307f\u308b\uff0e\n\n\n\n# \u691c\u8a3c\u7528\u30d7\u30ed\u30b0\u30e9\u30e0\n\n```c:main.c\n#include <AppHardwareApi.h>\n#include \"utils.h\"\n#include \"serial.h\"\n#include \"sprintf.h\"\n#include \"ToCoNet.h\"\n#include <string.h>\n\n#define UART_BAUD 115200 // \u30b7\u30ea\u30a2\u30eb\u306e\u30dc\u30fc\u30ec\u30fc\u30c8\n\n\nstatic tsFILE sSerStream;          // \u30b7\u30ea\u30a2\u30eb\u7528\u30b9\u30c8\u30ea\u30fc\u30e0\nstatic tsSerialPortSetup sSerPort; // \u30b7\u30ea\u30a2\u30eb\u30dd\u30fc\u30c8\u30c7\u30b9\u30af\u30ea\u30d7\u30bf\n\nstatic tsTimerContext timer0;\n\n\n// \u30c7\u30d0\u30c3\u30b0\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\u7528\n#define DBG\n#ifdef DBG\n#define dbg(...) vfPrintf(&sSerStream, LB __VA_ARGS__)\n#else\n#define dbg(...)\n#endif\n\n// \u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u7528\u306b UART \u3092\u521d\u671f\u5316\nstatic void vSerialInit() {\n    static uint8 au8SerialTxBuffer[96];\n    static uint8 au8SerialRxBuffer[32];\n\n    sSerPort.pu8SerialRxQueueBuffer = au8SerialRxBuffer;\n    sSerPort.pu8SerialTxQueueBuffer = au8SerialTxBuffer;\n    sSerPort.u32BaudRate = UART_BAUD;\n    sSerPort.u16AHI_UART_RTS_LOW = 0xffff;\n    sSerPort.u16AHI_UART_RTS_HIGH = 0xffff;\n    sSerPort.u16SerialRxQueueSize = sizeof(au8SerialRxBuffer);\n    sSerPort.u16SerialTxQueueSize = sizeof(au8SerialTxBuffer);\n    sSerPort.u8SerialPort = E_AHI_UART_0;\n    sSerPort.u8RX_FIFO_LEVEL = E_AHI_UART_FIFO_LEVEL_1;\n    SERIAL_vInit(&sSerPort);\n\n    sSerStream.bPutChar = SERIAL_bTxChar;\n    sSerStream.u8Device = E_AHI_UART_0;\n}\n\n\nstatic void vInitTimer()\n{\n\tmemset(&timer0, 0, sizeof(tsTimerContext));\n\ttimer0.u8Device = E_AHI_DEVICE_TIMER0; // timer0\u4f7f\u7528\n\n\ttimer0.u16Hz = 1000;        // 1000Hz\n\ttimer0.u8PreScale = 1;      // \u30d7\u30ea\u30b9\u30b1\u30fc\u30e91/2\n\ttimer0.bDisableInt = FALSE; // \u5272\u308a\u8fbc\u307f\u7981\u6b62\n\n\n\tvTimerConfig(&timer0); // \u30bf\u30a4\u30de\u8a2d\u5b9a\u66f8\u304d\u8fbc\u307f\n\tvTimerStart(&timer0);  // \u30bf\u30a4\u30de\u30b9\u30bf\u30fc\u30c8\n\n}\n\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u521d\u671f\u5316\nstatic void vInitHardware()\n{\n    vSerialInit();\t\t\t\t\t\t//\t\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u306e\u8a2d\u5b9a\n    ToCoNet_vDebugInit(&sSerStream);\n    ToCoNet_vDebugLevel(0);\n}\n\nstatic int sum = 0;\n\n// \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\nstatic void vProcessEvCore(tsEvent *pEv, teEvent eEvent, uint32 u32evarg)\n{\n\n    // 1 \u79d2\u5468\u671f\u306e\u30b7\u30b9\u30c6\u30e0\u30bf\u30a4\u30de\u901a\u77e5\n   if(eEvent == E_EVENT_TICK_SECOND)\n   {\n\t\tdbg(\"%d\\t%d\",u32TickCount_ms,sum);\t\t//\tTick\u30bf\u30a4\u30de\u304c\u6570\u3048\u3066\u308b\uff08\u3089\u3057\u3044\uff09ms\u3068\uff0cTIMER0\u306b\u3088\u308bms\u3092\u51fa\u529b\n   }\n\n    return;\n}\n\n\nvoid cbToCoNet_vMain(void)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vRxEvent(tsRxDataApp *pRx)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vTxEvent(uint8 u8CbId, uint8 bStatus)\n{\n    return;\n}\n\n\nvoid cbToCoNet_vNwkEvent(teEvent eEvent, uint32 u32arg)\n{\n    return;\n}\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5272\u308a\u8fbc\u307f\u306e\u9045\u5ef6\u5b9f\u884c\u90e8\nvoid cbToCoNet_vHwEvent(uint32 u32DeviceId, uint32 u32ItemBitmap)\n{\n\tif(u32DeviceId == E_AHI_DEVICE_TIMER0)\t//\tTIMER0\u3067\u5272\u308a\u8fbc\u307e\u308c\u305f\u3089\n\t{\n\t\tsum++;\n\t}\n    return;\n}\n\n// \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u5272\u308a\u8fbc\u307f\u767a\u751f\u6642\nuint8 cbToCoNet_u8HwInt(uint32 u32DeviceId, uint32 u32ItemBitmap)\n{\n\n    return FALSE;\n}\n\n// \u30b3\u30fc\u30eb\u30c9\u30b9\u30bf\u30fc\u30c8\u6642\nvoid cbAppColdStart(bool_t bAfterAhiInit)\n{\n\n    sToCoNet_AppContext.u8CPUClk = 3;\t\t//\tCPU\u30af\u30ed\u30c3\u30af\u306f\u6700\u9ad8\u306e32MHz\n    sToCoNet_AppContext.u16TickHz = 250;\t//\tTickTimer\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e250Hz\n    ToCoNet_vRfConfig();\t\t\t\t\t//\t\u8a2d\u5b9a\u9069\u7528\uff0e\u7121\u304f\u3066\u3082\u3044\u3044\u6c17\u304c\u3059\u308b\uff08\u672a\u691c\u8a3c\uff09\n    if (!bAfterAhiInit) {\n    } else {\n        // \u30e6\u30fc\u30b6\u5b9a\u7fa9\u306e\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u3092\u767b\u9332\n        ToCoNet_Event_Register_State_Machine(vProcessEvCore);\n        vInitHardware();\n        vInitTimer();\n    }\n}\n\n// \u30a6\u30a9\u30fc\u30e0\u30b9\u30bf\u30fc\u30c8\u6642\nvoid cbAppWarmStart(bool_t bAfterAhiInit)\n{\n    return;\n}\n\n\n```\n\n- TIMER0\u30671000Hz\u306e\u5272\u308a\u8fbc\u307f\u3092\u304b\u3051\u3066\uff0c\u5272\u308a\u8fbc\u307f\u6642\u306b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u3066\u3044\u304f\uff0e\n- \uff11\u79d2\u304a\u304d\u306b\uff0cTickTimer\u304c\u6570\u3048\u3066\u308b\uff08\u3089\u3057\u304d\uff091ms\u30ab\u30a6\u30f3\u30bf\u3068TIMER0\u3067\u30ab\u30a6\u30f3\u30c8\u3057\u305f\u6570\u5024\u3092\u6bd4\u8f03\n- **1\u79d2\u306e\u8aa4\u5dee**\u304c\u51fa\u308b\u307e\u3067\u3072\u305f\u3059\u3089\u5f85\u3064\n- \u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u90e8\u306b\u3064\u3044\u3066\u306f\uff0c[\u3053\u3061\u3089\u306eklab\u69d8\u306e\u8a18\u4e8b](http://dsas.blog.klab.org/archives/52201101.html)\n\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\uff0e\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\uff0e\n\n# \u52d5\u3044\u3066\u308b\u3068\u3053\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-01-21 15.10.48.png](https://qiita-image-store.s3.amazonaws.com/0/81908/dd70f9b5-47bf-c750-49e5-fc28d60766c3.png)\n\n# \u7d50\u679c\n\n- TIMER0\u306fTickTimer\u306b\u6bd4\u3079\uff0c**64024\u79d2\u306b1\u79d2**\u306e\u9045\u308c\u304c\u3042\u308a\u307e\u3057\u305f\u3068\u3055\uff0e\n- \u3069\u3063\u3061\u306e\u304c\u7cbe\u5ea6\u3044\u3044\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3051\u3069\uff0c\u516c\u5f0f\u6587\u66f8\uff08\u30de\u30a4\u30b3\u30f3\u306e\u65b9\uff09\u3092\u8aad\u3080\u9650\u308a\u306fTickTimer\u306e\u304c\u826f\u3044\u3063\u307d\u3044.\n- \u305f\u3060\u3057ToCoNet\u3092\u5229\u7528\u3059\u308b\u306a\u3089\uff0cTickTimer\u306f\u6291\u3048\u3089\u308c\u3066\u3044\u308b\uff08\u4e00\u5fdc\u5272\u308a\u8fbc\u307f\u5468\u671f\u306e\u5909\u66f4\u306f\u3067\u304d\u308b\uff09\n\n\n\n### \u5f8c\u8a18\n\n- TWE-Lite\uff0c\u9762\u767d\u3044\u306e\u306b\u3042\u3093\u307e\u308a\u6d41\u884c\u3063\u3066\u306a\u3044\u6c17\u304c\u3059\u308b\uff0e\n    - C\u3057\u304b\u4f7f\u3048\u306a\u3044\u306e\u304c\u7d50\u69cb\u75db\u3044\uff0eC++\u304c\u4f7f\u3048\u305f\u3089\u3089\u306a\u3042\u2026\uff0e\n    - \u3068\u3044\u3046\u304b\u516c\u5f0f\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3082\u7d50\u69cb\u96d1\uff06\u4fdd\u8b77\u306e\u305b\u3044\u3067\u4f7f\u3044\u3065\u3089\u3044\n    - Bluetooth\u3068\u9055\u3063\u3066\u8272\u3093\u306a\u7269\u306b\u7e4b\u3052\u306a\u3044\u306e\u3082\u539f\u56e0\u306e\u3072\u3068\u3064\u304b\n    - \u901a\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3057\u3066\u306e\u6027\u80fd\u3082\u898b\u3066\u3044\u304d\u305f\u3044\n", "tags": ["TWE-Lite"]}