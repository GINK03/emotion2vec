{"context": "\u4f55\u304b\u3092\u63a2\u3059\u306a\u3089find\u307f\u305f\u3044\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3057\u3001filter\u307f\u305f\u3044\u306b\u3082\u4f7f\u3048\u306a\u3044\u3057\u3001\ntakewhile\u3068dropwhile\u3063\u3066\u3044\u3064\u4f7f\u3046\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u305f\n\u3051\u3069\u5148\u65e5\u3046\u307e\u304f(?)\u4f7f\u3048\u305f\u6c17\u304c\u3057\u305f\u306e\u3067\u5c0f\u30cd\u30bf\u3068\u3057\u3066\u3076\u3093\u6295\u3052\u3066\u304a\u304f\u3088\n\n\u9577\u3044\u524d\u7f6e\u304d\n\n\u3053\u3093\u306a\u30d1\u30b9\u304c\u6587\u5b57\u5217\u3067\u3042\u3063\u3066\ndata/output/user/contract.csv\n\n\n\u4efb\u610f\u306e\u90e8\u5206\u304c\u6b32\u3057\u3044\noutput\u307e\u3067\u306e\u90e8\u5206(base\u3068\u3059\u308b)\u3068user\u306e\u90e8\u5206(dir\u3068\u3059\u308b)\u3068\u3059\u308b\n\n\u3068\u308a\u3042\u3048\u305a\u3053\u306e\u5b9f\u88c5\u3067\u52d5\u3044\u3066\u305f\ndef base = path.split('/')[0..1].join('/') // data/output\ndef dir = path.split('/')[2]               // user\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u3082\u3063\u3068\u5207\u308a\u305f\u304f\u306a\u3063\u3061\u3083\u3063\u305f\uff01\ndata/ver1.0/output/user/contract.csv\n\n\u3080\u3080...\u6dfb\u3048\u5b57\u305a\u3089\u3057\u305f\u305c...\ndef base = path.split('/')[0..2].join('/') // data/ver1.0/output\ndef dir = path.split('/')[3]               // user\n\n\n\u30c4\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u66f8\u3053\u3046\u305c\uff01\n\u30c6\u30b9\u30c8\u3067\u4f7f\u3046\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u306f\u3053\u308c\u306a\uff01\ntest/data/ver1.0/output/user/contract.csv\n\ni...if\u4f7f\u3048\u3070\u826f\u3044\u3093\u3060\u308d...\u306f\u306f...\nif (isTest) {\n  def base = path.split('/')[0..3].join('/') // test/data/ver1.0/output\n  def dir = path.split('/')[4]               // user\n\n} else {\n  def base = path.split('/')[0..2].join('/') // data/ver1.0/output\n  def dir = path.split('/')[3]               // user\n}\n\n\n\u3044\u304f\u3089\u306a\u3093\u3067\u3082\u3053\u306e\u5b9f\u88c5\u306f\u306a\u3044\u306d\n\u6dfb\u3048\u5b57\u30a2\u30af\u30bb\u30b9\u3058\u3083\u3042\u308f\u304b\u308a\u3065\u3089\u3044\u3057\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306e\u5909\u5316\u306b\u5168\u304f\u8010\u3048\u3089\u308c\u3066\u306a\u3044\n\u3057\u304b\u3082\u30d5\u30e9\u30b0\u3067\u6dfb\u3048\u5b57\u3092\u5909\u3048\u308b\u306a\u3093\u3066\u30b5\u30a4\u30c6\u30fc\u3060\uff01\n\n\u305d\u3053\u3067takewhile/dropwhile\u3060\uff01\n.../output\u307e\u3067\u304c\u6b32\u3057\u3044\u306a\u3089takewhile\u3067\u3001\noutput\u306e\u6b21\u304c\u6b32\u3057\u3044\u306a\u3089dropwhile\u3067\u826f\u304b\u3063\u305f\u3093\u3060\uff01\ndef base = path.split('/').takeWhile {it != 'output'}.join('/').concat('/output') // data/ver1.0/output\ndef dir = path.split('/').dropWhile {it != 'output'}[1]                           // user\n\n\u3053\u308c\u306a\u3089\u3042\u308b\u7a0b\u5ea6\u306f\u67d4\u8edf\u306b\u81ea\u52d5\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u306d\uff08\u30c4\u30fc\u30eb\u8a2d\u8a08\u4e0a\u306e\u7406\u7531\u7b49\u3067output\u4ee5\u4e0b\u306e\u69cb\u6210\u306f\u5909\u308f\u3089\u306a\u3044\u5834\u5408\u3060\u3051\u3069\uff09\n\u305d\u308c\u306b\u3057\u3066\u3082\u3001\u5b9f\u306ftakewhile\u306f\u521d\u3081\u3066\u66f8\u3044\u3066\u307f\u305f\u3093\u3060\u3051\u3069\u3001output\u306f\u542b\u307e\u306a\u3044\u3093\u3060\u306d...\u305d\u3053\u3060\u3051\u3061\u3087\u3044\u6b8b\u5ff5\u304b\u306a...\n\n\u304a\u307e\u3051\n\nGroovy\n\u66f8\u304d\u3084\u3059\u3044\u306d\u3001\u4f8b\u306e\u901a\u308a\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30a4\u30f3\u306f\u8aad\u307f\u3084\u3059\u3044\u3057\u3001\u7121\u540d\u95a2\u6570\u66f8\u304f\u306e\u3082\u697d\u3067\u30d9\u30cd\n\nPython\npath = 'data/ver1.0/output/user/contract.csv'\n\nimport itertools\n\ntaken_iter = itertools.takewhile(lambda x: x != 'output', path.split('/'))\nprint '/'.join(list(taken_iter)) + '/output' # data/ver1.0/output\n\ndropped_iter = itertools.dropwhile(lambda x: x != 'output', path.split('/'))\nprint list(dropped_iter)[1]                  # user\n\nPython\u597d\u304d\u3060\u3051\u3069\u3001\u3061\u3087\u3063\u3068\u6b8b\u5ff5\u304b\u306a...\nxxxwhile\u304cimport\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3063\u3066\u306e\u3068\u3001\u7d50\u679c\u306blist()\u3084join()\u304b\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\n1\u884c\u3067\u66f8\u304f\u3068....))))\u306b\u306a\u3063\u3066\u3057\u307e\u3046\n\u7121\u540d\u95a2\u6570\u3082Groovy\u3084Scala\u3068\u6bd4\u3079\u308b\u3068\u3084\u3084\u8aad\u307f\u3065\u3089\u304f\u3001\u5168\u4f53\u7684\u306b\u4f55\u3057\u3066\u3044\u308b\u304b\u6d41\u308c\u304c\u308f\u304b\u308a\u3065\u3089\u3044\u3001\u7121\u5ff5\uff01\n\nHaskell\nimport Data.List\nimport Data.List.Split\n\nmain = do\n    let path = \"data/ver1.0/output/user/contract.csv\"\n\n    print $ (intercalate \"/\"  $ (takeWhile (/= \"output\") $ splitOn \"/\" path)) ++ \"/output\"\n    print $ (dropWhile (/= \"output\") $ splitOn \"/\" path) !! 1\n\n\u3084\u306f\u308a\u3084\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u304b\u3001(...)\u304c\u591a\u304f\u306a\u3063\u3066\u3057\u307e\u3046...\n\u3042\u3068\u672c\u984c\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069\u3001splitOn\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u4f7f\u3048\u306a\u3044\u3063\u3066\u3069\u3046\u306a\u306e\uff01\n\u7d50\u69cb\u3088\u304f\u4f7f\u3046\u3093\u3060\u3051\u3069\uff01\n\nHaskell2\nimport Data.List\nimport Data.List.Split\n\nmain = do\n    let path = \"data/ver1.0/output/user/contract.csv\"\n\n    let reversed = reverse $ splitOn \"/\" path\n    print $ intercalate \"/\" $ reverse $ dropWhile (/= \"output\") reversed\n    print $ last $ takeWhile (/= \"output\") $ reversed\n\ntakeWhile\u3060\u3068\u809d\u5fc3\u306eoutput\u304c\u7d50\u679c\u306b\u542b\u307e\u308c\u306a\u3044\u306e\u3067\u3001\u8981\u7d20\u3092\u9006\u9806\u306b\u3057\u3066\u307f\u305f\n\u3059\u3063\u304d\u308a\u3057\u305f\u304b\u306a\uff01\n\u4ed6\u306b\u3082PHP\u3068\u304b\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u76ee\u7acb\u3063\u305f\u5dee\u5206\u304c\u51fa\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u7701\u7565\u3001Java\u306f\u9762\u5012\u305d\u3046\uff08\u504f\u898b\uff09\u3060\u304b\u3089\u5374\u4e0b\n\u8272\u3093\u306a\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u307f\u308b\u3068\u8272\u3093\u306a\u95a2\u6570\u3092\u77e5\u308c\u3066\u826f\u3044\u306d\uff01\n\u3069\u3046\u3057\u3066\u3044\u3064\u3082\u3053\u3093\u3060\u3051\u306e\u5c0f\u30cd\u30bf\u3067\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u304b...\n\u3067\u3082\u3001\u4fbf\u5229\u3055\u3092\u4f1d\u3048\u308b\u306b\u306f\u30c0\u30b5\u3055\u304b\u3089\u3060\u3088\u306d\uff01\n\u3042\u3068\u306d\u3001\u300c\u6587\u5b57\u5217\u306e\u307e\u307e\u306e\u30d1\u30b9\u300d\u3092\u300coutput\u300d\u3067\u5206\u5272\u3059\u308c\u3070\u826f\u3044\u3068\u304b\u8a00\u3046\u610f\u898b\u306f\u306a\u3057\u306d\uff01\n\n\u4f55\u304b\u3092\u63a2\u3059\u306a\u3089`find`\u307f\u305f\u3044\u306a\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3057\u3001`filter`\u307f\u305f\u3044\u306b\u3082\u4f7f\u3048\u306a\u3044\u3057\u3001\n`takewhile`\u3068`dropwhile`\u3063\u3066\u3044\u3064\u4f7f\u3046\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u305f\n\n\u3051\u3069\u5148\u65e5\u3046\u307e\u304f(?)\u4f7f\u3048\u305f\u6c17\u304c\u3057\u305f\u306e\u3067\u5c0f\u30cd\u30bf\u3068\u3057\u3066\u3076\u3093\u6295\u3052\u3066\u304a\u304f\u3088\n\n### \u9577\u3044\u524d\u7f6e\u304d\n#### \u3053\u3093\u306a\u30d1\u30b9\u304c\u6587\u5b57\u5217\u3067\u3042\u3063\u3066\n```\ndata/output/user/contract.csv\n```\n\n#### \u4efb\u610f\u306e\u90e8\u5206\u304c\u6b32\u3057\u3044\n`output\u307e\u3067`\u306e\u90e8\u5206(base\u3068\u3059\u308b)\u3068`user`\u306e\u90e8\u5206(dir\u3068\u3059\u308b)\u3068\u3059\u308b\n\n#### \u3068\u308a\u3042\u3048\u305a\u3053\u306e\u5b9f\u88c5\u3067\u52d5\u3044\u3066\u305f\n```Groovy\ndef base = path.split('/')[0..1].join('/') // data/output\ndef dir = path.split('/')[2]               // user\n```\n\n#### \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3001\u3082\u3063\u3068\u5207\u308a\u305f\u304f\u306a\u3063\u3061\u3083\u3063\u305f\uff01\n```\ndata/ver1.0/output/user/contract.csv\n```\n\n\u3080\u3080...\u6dfb\u3048\u5b57\u305a\u3089\u3057\u305f\u305c...\n\n```Groovy\ndef base = path.split('/')[0..2].join('/') // data/ver1.0/output\ndef dir = path.split('/')[3]               // user\n```\n\n#### \u30c4\u30fc\u30eb\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u66f8\u3053\u3046\u305c\uff01\n\u30c6\u30b9\u30c8\u3067\u4f7f\u3046\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u306f\u3053\u308c\u306a\uff01\n\n```\ntest/data/ver1.0/output/user/contract.csv\n```\n\ni...if\u4f7f\u3048\u3070\u826f\u3044\u3093\u3060\u308d...\u306f\u306f...\n\n```Groovy\nif (isTest) {\n  def base = path.split('/')[0..3].join('/') // test/data/ver1.0/output\n  def dir = path.split('/')[4]               // user\n\n} else {\n  def base = path.split('/')[0..2].join('/') // data/ver1.0/output\n  def dir = path.split('/')[3]               // user\n}\n```\n\n#### \u3044\u304f\u3089\u306a\u3093\u3067\u3082\u3053\u306e\u5b9f\u88c5\u306f\u306a\u3044\u306d\n\u6dfb\u3048\u5b57\u30a2\u30af\u30bb\u30b9\u3058\u3083\u3042\u308f\u304b\u308a\u3065\u3089\u3044\u3057\u3001\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\u306e\u5909\u5316\u306b\u5168\u304f\u8010\u3048\u3089\u308c\u3066\u306a\u3044\n\u3057\u304b\u3082\u30d5\u30e9\u30b0\u3067\u6dfb\u3048\u5b57\u3092\u5909\u3048\u308b\u306a\u3093\u3066\u30b5\u30a4\u30c6\u30fc\u3060\uff01\n\n### \u305d\u3053\u3067takewhile/dropwhile\u3060\uff01\n`.../output`\u307e\u3067\u304c\u6b32\u3057\u3044\u306a\u3089takewhile\u3067\u3001\n`output\u306e\u6b21`\u304c\u6b32\u3057\u3044\u306a\u3089dropwhile\u3067\u826f\u304b\u3063\u305f\u3093\u3060\uff01\n\n```Groovy\ndef base = path.split('/').takeWhile {it != 'output'}.join('/').concat('/output') // data/ver1.0/output\ndef dir = path.split('/').dropWhile {it != 'output'}[1]                           // user\n```\n\n\u3053\u308c\u306a\u3089\u3042\u308b\u7a0b\u5ea6\u306f\u67d4\u8edf\u306b\u81ea\u52d5\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u306d\uff08\u30c4\u30fc\u30eb\u8a2d\u8a08\u4e0a\u306e\u7406\u7531\u7b49\u3067`output`\u4ee5\u4e0b\u306e\u69cb\u6210\u306f\u5909\u308f\u3089\u306a\u3044\u5834\u5408\u3060\u3051\u3069\uff09\n\u305d\u308c\u306b\u3057\u3066\u3082\u3001\u5b9f\u306f`takewhile`\u306f\u521d\u3081\u3066\u66f8\u3044\u3066\u307f\u305f\u3093\u3060\u3051\u3069\u3001`output`\u306f\u542b\u307e\u306a\u3044\u3093\u3060\u306d...\u305d\u3053\u3060\u3051\u3061\u3087\u3044\u6b8b\u5ff5\u304b\u306a...\n\n### \u304a\u307e\u3051\n#### Groovy\n\u66f8\u304d\u3084\u3059\u3044\u306d\u3001\u4f8b\u306e\u901a\u308a\n\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30a4\u30f3\u306f\u8aad\u307f\u3084\u3059\u3044\u3057\u3001\u7121\u540d\u95a2\u6570\u66f8\u304f\u306e\u3082\u697d\u3067\u30d9\u30cd\n\n#### Python\n```Python\npath = 'data/ver1.0/output/user/contract.csv'\n\nimport itertools\n\ntaken_iter = itertools.takewhile(lambda x: x != 'output', path.split('/'))\nprint '/'.join(list(taken_iter)) + '/output' # data/ver1.0/output\n\ndropped_iter = itertools.dropwhile(lambda x: x != 'output', path.split('/'))\nprint list(dropped_iter)[1]                  # user\n```\n\nPython\u597d\u304d\u3060\u3051\u3069\u3001\u3061\u3087\u3063\u3068\u6b8b\u5ff5\u304b\u306a...\nxxxwhile\u304cimport\u3057\u3066\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u3063\u3066\u306e\u3068\u3001\u7d50\u679c\u306b`list()`\u3084`join()`\u304b\u3051\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3067\n1\u884c\u3067\u66f8\u304f\u3068`....))))`\u306b\u306a\u3063\u3066\u3057\u307e\u3046\n\u7121\u540d\u95a2\u6570\u3082Groovy\u3084Scala\u3068\u6bd4\u3079\u308b\u3068\u3084\u3084\u8aad\u307f\u3065\u3089\u304f\u3001\u5168\u4f53\u7684\u306b\u4f55\u3057\u3066\u3044\u308b\u304b\u6d41\u308c\u304c\u308f\u304b\u308a\u3065\u3089\u3044\u3001\u7121\u5ff5\uff01\n\n#### Haskell\n```Haskell\nimport Data.List\nimport Data.List.Split\n\nmain = do\n    let path = \"data/ver1.0/output/user/contract.csv\"\n\n    print $ (intercalate \"/\"  $ (takeWhile (/= \"output\") $ splitOn \"/\" path)) ++ \"/output\"\n    print $ (dropWhile (/= \"output\") $ splitOn \"/\" path) !! 1\n```\n\n\u3084\u306f\u308a\u3084\u308b\u3053\u3068\u304c\u591a\u3044\u304b\u3089\u304b\u3001`(...)`\u304c\u591a\u304f\u306a\u3063\u3066\u3057\u307e\u3046...\n\u3042\u3068\u672c\u984c\u3068\u306f\u95a2\u4fc2\u306a\u3044\u3051\u3069\u3001`splitOn`\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u4f7f\u3048\u306a\u3044\u3063\u3066\u3069\u3046\u306a\u306e\uff01\n\u7d50\u69cb\u3088\u304f\u4f7f\u3046\u3093\u3060\u3051\u3069\uff01\n\n#### Haskell2\n```Haskell\nimport Data.List\nimport Data.List.Split\n\nmain = do\n    let path = \"data/ver1.0/output/user/contract.csv\"\n\n    let reversed = reverse $ splitOn \"/\" path\n    print $ intercalate \"/\" $ reverse $ dropWhile (/= \"output\") reversed\n    print $ last $ takeWhile (/= \"output\") $ reversed\n```\n\ntakeWhile\u3060\u3068\u809d\u5fc3\u306e`output`\u304c\u7d50\u679c\u306b\u542b\u307e\u308c\u306a\u3044\u306e\u3067\u3001\u8981\u7d20\u3092\u9006\u9806\u306b\u3057\u3066\u307f\u305f\n\u3059\u3063\u304d\u308a\u3057\u305f\u304b\u306a\uff01\n\n\u4ed6\u306b\u3082PHP\u3068\u304b\u8003\u3048\u3066\u307f\u305f\u3051\u3069\u76ee\u7acb\u3063\u305f\u5dee\u5206\u304c\u51fa\u306a\u3055\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u7701\u7565\u3001Java\u306f\u9762\u5012\u305d\u3046\uff08\u504f\u898b\uff09\u3060\u304b\u3089\u5374\u4e0b\n\u8272\u3093\u306a\u8a00\u8a9e\u3067\u66f8\u3044\u3066\u307f\u308b\u3068\u8272\u3093\u306a\u95a2\u6570\u3092\u77e5\u308c\u3066\u826f\u3044\u306d\uff01\n\n\u3069\u3046\u3057\u3066\u3044\u3064\u3082\u3053\u3093\u3060\u3051\u306e\u5c0f\u30cd\u30bf\u3067\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u304b...\n\u3067\u3082\u3001\u4fbf\u5229\u3055\u3092\u4f1d\u3048\u308b\u306b\u306f\u30c0\u30b5\u3055\u304b\u3089\u3060\u3088\u306d\uff01\n\n\u3042\u3068\u306d\u3001\u300c\u6587\u5b57\u5217\u306e\u307e\u307e\u306e\u30d1\u30b9\u300d\u3092\u300coutput\u300d\u3067\u5206\u5272\u3059\u308c\u3070\u826f\u3044\u3068\u304b\u8a00\u3046\u610f\u898b\u306f\u306a\u3057\u306d\uff01\n", "tags": ["Groovy", "Haskell", "Python", "list"]}