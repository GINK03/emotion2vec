{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u307e\u305a\u306f\u5148\u306b\u4e8c\u3064\u306e\u8a18\u4e8b\u3092\u3069\u3046\u305e\n\nDynamoDB HTTP API \u304c\u72ec\u7279\u306a\u4ed5\u69d8\u306a\u306e\u3067\u7d39\u4ecb\nPython \u306e JSON Schema \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n\u3055\u3066\u3001 \u6700\u8fd1\u306f JSON \u3092\u53d7\u3051\u53d6\u3063\u3066 JSON \u3092\u8fd4\u3059\u3001\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u591a\u3044\u306e\u3067\u3059\u304c\u3001HTTP \u30d9\u30fc\u30b9\u3068\u306a\u308b\u3068\u8272\u3005\u8f9b\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002URL \u306e\u8a2d\u8a08\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u9078\u629e\u306a\u3069\u306a\u3069\u3002\u3082\u3046\u9762\u5012\u304f\u3055\u3044\u304b\u3089 URL \u3084 \u30e1\u30bd\u30c3\u30c9\u306f\u7d71\u4e00\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u6a5f\u80fd\u5224\u5b9a\u306f HTTP \u306e\u72ec\u81ea\u5b9a\u7fa9\u3057\u305f\u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u3046\n\n\nX-Amz-Target: DynamoDB_20120810.PutItem \nX-<\u4f1a\u793e\u540d\uff1f>-Target: \u30b5\u30fc\u30d3\u30b9\u540d_\u65e5\u4ed8.\u6a5f\u80fd\u540d\n\n\nURL \u306f / \u306e\u307f\n\u30e1\u30bd\u30c3\u30c9\u306f POST \u306e\u307f\n\u5168\u3066\u306e\u3084\u308a\u3068\u308a\u306f JSON \u3067\n\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306f Req/Res \u4e21\u65b9\u3092 JSON \u30b9\u30ad\u30fc\u30de\u3092\u4f7f\u3046\n\n\u3068\u306b\u304b\u304f\u9811\u5f35\u3089\u306a\u3044\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6e96\u5099\nPython 2.7 \u7cfb\u3064\u304b\u3063\u3066\u307e\u3059\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n$ pip install jsonschema flask\n\n\n\u3068\u308a\u3042\u3048\u305a\u5b9f\u88c5\u3057\u3066\u307f\u305f\n\u9811\u5f35\u3063\u3066\u306a\u3044\u90e8\u5206\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306e JSON \u306f\u30ce\u30fc\u30c1\u30a7\u30c3\u30af\n\u30ed\u30b8\u30c3\u30af\u306f\u66f8\u3044\u3066\u306a\u3044\nJSON \u30b9\u30ad\u30fc\u30de\u306f\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u3067\u306f\u306a\u3044\n\u30b9\u30ad\u30fc\u30de\u30fc\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u6642\u306b\u3057\u3066\u306a\u3044\n\n\n\u30b3\u30fc\u30c9\n# coding=utf8\n\nfrom jsonschema import Draft4Validator, validate\nfrom jsonschema.exceptions import ValidationError\n\nfrom flask import Flask, request, jsonify, abort\n\napp = Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef index():\n    # 0.11 \u304b\u3089\u306e\u6a5f\u80fd\u3060\u3063\u305f ...\n    # if request.is_json():\n    #     print request.headers['Content-Type']\n    #     return abort(400)\n\n    target = request.headers['x-app-target']\n    print target\n\n    if target == 'App_20140624.CreateUser':\n        return create_user(request.json)\n    elif target == 'App_20140624.DeleteUser':\n        return delete_user(request.json)\n    else:\n        return abort(400)\n\n\ndef create_user(instance):\n    # TODO: schema \u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306b\u3057\u305f\u3044\n    schema = {\"type\": \"object\",\n              \"required\": [\"user_name\", \"password\", \"age\"],\n              \"properties\": {\n                  \"user_name\": {\"type\": \"string\"},\n                  \"password\": {\"type\": \"string\"},\n                  \"age\": {\"type\": \"integer\"},\n              },\n             }\n    try:\n        validate(instance, schema)\n        # \u3053\u3053\u306b\u30ed\u30b8\u30c3\u30af\u304c\u5165\u308b\n        return jsonify(res='ok')\n    except ValidationError:\n        return error_messages(schema, instance)\n\n\ndef delete_user(instance):\n    # TODO: schema \u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306b\u3057\u305f\u3044\n    schema = {\"type\": \"object\",\n              \"required\": [\"user_name\"],\n              \"properties\": {\n                  \"user_name\": {\"type\": \"string\"},\n              },\n             }\n    try:\n        validate(instance, schema)\n        # \u3053\u3053\u306b\u30ed\u30b8\u30c3\u30af\u304c\u5165\u308b\n        return jsonify(res='ok')\n    except ValidationError:\n        return error_messages(schema, instance)\n\ndef error_messages(schema, instance):\n    v = Draft4Validator(schema)\n    errors = sorted(v.iter_errors(instance), key=lambda e: e.path)\n    return jsonify(error_messages=[error.message for error in errors])\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n\n\u52d5\u4f5c\u4f8b\n\u3042\u3048\u3066\u30a8\u30e9\u30fc\u51fa\u3057\u3066\u307f\u3066\u3044\u307e\u3059\n$ http POST 127.0.0.1:5000/ \"x-app-target:App_20140624.CreateUser\" password=pass age=10 -vvv\nPOST / HTTP/1.1\nAccept: application/json\nAccept-Encoding: gzip, deflate\nContent-Length: 33\nContent-Type: application/json; charset=utf-8\nHost: 127.0.0.1:5000\nUser-Agent: HTTPie/0.7.2\nx-app-target: App_20140624.CreateUser\n\n{\n    \"age\": \"10\",\n    \"password\": \"pass\"\n}\n\nHTTP/1.0 200 OK\nContent-Length: 108\nContent-Type: application/json\nDate: Mon, 23 Jun 2014 16:13:10 GMT\nServer: Werkzeug/0.9.6 Python/2.7.7\n\n{\n    \"error_messages\": [\n        \"'user_name' is a required property\",\n        \"u'10' is not of type 'integer'\"\n    ]\n}\n\n\n\u307e\u3068\u3081\n\u9762\u5012\u306a URL \u8a2d\u8a08\u304b\u3089\u89e3\u653e\u3055\u308c\u305f\u5b9f\u88c5\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002JSON \u30b9\u30ad\u30fc\u30de\u3092\u4f7f\u3046\u4e8b\u3067 JSON \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u9762\u5012\u306a\u90e8\u5206\u3092\u4e00\u901a\u308a\u5438\u53ce\u3067\u304d\u307e\u3059\u3002JSON \u30b9\u30ad\u30fc\u30de\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ee3\u308f\u308a\u3082\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3042\u308a\u304c\u305f\u3044\u3053\u3068\u3067\u3059\u306d\u3002\nRESTful \u306b\u75b2\u308c\u305f\u4eba\u306b\u30aa\u30b9\u30b9\u30e1\u306e\u4e00\u54c1\u3067\u3059\u3002\n\n## \u6982\u8981\n\n\u307e\u305a\u306f\u5148\u306b\u4e8c\u3064\u306e\u8a18\u4e8b\u3092\u3069\u3046\u305e\n\n- [DynamoDB HTTP API \u304c\u72ec\u7279\u306a\u4ed5\u69d8\u306a\u306e\u3067\u7d39\u4ecb](http://qiita.com/voluntas/items/a3ee5b0e2843d589d45f)\n- [Python \u306e JSON Schema \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u307f\u308b](http://qiita.com/voluntas/items/cce3bd72fd6db0f3b359)\n\n\u3055\u3066\u3001 \u6700\u8fd1\u306f JSON \u3092\u53d7\u3051\u53d6\u3063\u3066 JSON \u3092\u8fd4\u3059\u3001\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5b9f\u88c5\u3059\u308b\u4e8b\u304c\u591a\u3044\u306e\u3067\u3059\u304c\u3001HTTP \u30d9\u30fc\u30b9\u3068\u306a\u308b\u3068\u8272\u3005\u8f9b\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u3002URL \u306e\u8a2d\u8a08\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u9078\u629e\u306a\u3069\u306a\u3069\u3002\u3082\u3046\u9762\u5012\u304f\u3055\u3044\u304b\u3089 URL \u3084 \u30e1\u30bd\u30c3\u30c9\u306f\u7d71\u4e00\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n- \u6a5f\u80fd\u5224\u5b9a\u306f HTTP \u306e\u72ec\u81ea\u5b9a\u7fa9\u3057\u305f\u30d8\u30c3\u30c0\u30fc\u3092\u4f7f\u3046\n    - X-Amz-Target: DynamoDB_20120810.PutItem \n    - X-<\u4f1a\u793e\u540d\uff1f>-Target: \u30b5\u30fc\u30d3\u30b9\u540d_\u65e5\u4ed8.\u6a5f\u80fd\u540d\n- URL \u306f / \u306e\u307f\n- \u30e1\u30bd\u30c3\u30c9\u306f POST \u306e\u307f\n- \u5168\u3066\u306e\u3084\u308a\u3068\u308a\u306f JSON \u3067\n- \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306f Req/Res \u4e21\u65b9\u3092 JSON \u30b9\u30ad\u30fc\u30de\u3092\u4f7f\u3046\n\n\u3068\u306b\u304b\u304f\u9811\u5f35\u3089\u306a\u3044\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6e96\u5099\n\nPython 2.7 \u7cfb\u3064\u304b\u3063\u3066\u307e\u3059\u3001\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\n```\n$ pip install jsonschema flask\n```\n\n## \u3068\u308a\u3042\u3048\u305a\u5b9f\u88c5\u3057\u3066\u307f\u305f\n\n**\u9811\u5f35\u3063\u3066\u306a\u3044\u90e8\u5206**\n\n- \u30ec\u30b9\u30dd\u30f3\u30b9\u306e JSON \u306f\u30ce\u30fc\u30c1\u30a7\u30c3\u30af\n- \u30ed\u30b8\u30c3\u30af\u306f\u66f8\u3044\u3066\u306a\u3044\n- JSON \u30b9\u30ad\u30fc\u30de\u306f\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\u3067\u306f\u306a\u3044\n- \u30b9\u30ad\u30fc\u30de\u30fc\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u8d77\u52d5\u6642\u306b\u3057\u3066\u306a\u3044\n\n### \u30b3\u30fc\u30c9\n\n```python\n# coding=utf8\n\nfrom jsonschema import Draft4Validator, validate\nfrom jsonschema.exceptions import ValidationError\n\nfrom flask import Flask, request, jsonify, abort\n\napp = Flask(__name__)\n\n@app.route('/', methods=['POST'])\ndef index():\n    # 0.11 \u304b\u3089\u306e\u6a5f\u80fd\u3060\u3063\u305f ...\n    # if request.is_json():\n    #     print request.headers['Content-Type']\n    #     return abort(400)\n\n    target = request.headers['x-app-target']\n    print target\n\n    if target == 'App_20140624.CreateUser':\n        return create_user(request.json)\n    elif target == 'App_20140624.DeleteUser':\n        return delete_user(request.json)\n    else:\n        return abort(400)\n\n\ndef create_user(instance):\n    # TODO: schema \u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306b\u3057\u305f\u3044\n    schema = {\"type\": \"object\",\n              \"required\": [\"user_name\", \"password\", \"age\"],\n              \"properties\": {\n                  \"user_name\": {\"type\": \"string\"},\n                  \"password\": {\"type\": \"string\"},\n                  \"age\": {\"type\": \"integer\"},\n              },\n             }\n    try:\n        validate(instance, schema)\n        # \u3053\u3053\u306b\u30ed\u30b8\u30c3\u30af\u304c\u5165\u308b\n        return jsonify(res='ok')\n    except ValidationError:\n        return error_messages(schema, instance)\n\n\ndef delete_user(instance):\n    # TODO: schema \u306f\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u307f\u306b\u3057\u305f\u3044\n    schema = {\"type\": \"object\",\n              \"required\": [\"user_name\"],\n              \"properties\": {\n                  \"user_name\": {\"type\": \"string\"},\n              },\n             }\n    try:\n        validate(instance, schema)\n        # \u3053\u3053\u306b\u30ed\u30b8\u30c3\u30af\u304c\u5165\u308b\n        return jsonify(res='ok')\n    except ValidationError:\n        return error_messages(schema, instance)\n\ndef error_messages(schema, instance):\n    v = Draft4Validator(schema)\n    errors = sorted(v.iter_errors(instance), key=lambda e: e.path)\n    return jsonify(error_messages=[error.message for error in errors])\n\n\nif __name__ == '__main__':\n    app.run(debug=True)\n```\n\n## \u52d5\u4f5c\u4f8b\n\n\u3042\u3048\u3066\u30a8\u30e9\u30fc\u51fa\u3057\u3066\u307f\u3066\u3044\u307e\u3059\n\n```\n$ http POST 127.0.0.1:5000/ \"x-app-target:App_20140624.CreateUser\" password=pass age=10 -vvv\nPOST / HTTP/1.1\nAccept: application/json\nAccept-Encoding: gzip, deflate\nContent-Length: 33\nContent-Type: application/json; charset=utf-8\nHost: 127.0.0.1:5000\nUser-Agent: HTTPie/0.7.2\nx-app-target: App_20140624.CreateUser\n\n{\n    \"age\": \"10\",\n    \"password\": \"pass\"\n}\n\nHTTP/1.0 200 OK\nContent-Length: 108\nContent-Type: application/json\nDate: Mon, 23 Jun 2014 16:13:10 GMT\nServer: Werkzeug/0.9.6 Python/2.7.7\n\n{\n    \"error_messages\": [\n        \"'user_name' is a required property\",\n        \"u'10' is not of type 'integer'\"\n    ]\n}\n```\n\n## \u307e\u3068\u3081\n\n\u9762\u5012\u306a URL \u8a2d\u8a08\u304b\u3089\u89e3\u653e\u3055\u308c\u305f\u5b9f\u88c5\u3068\u3044\u3046\u3053\u3068\u306b\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002JSON \u30b9\u30ad\u30fc\u30de\u3092\u4f7f\u3046\u4e8b\u3067 JSON \u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u9762\u5012\u306a\u90e8\u5206\u3092\u4e00\u901a\u308a\u5438\u53ce\u3067\u304d\u307e\u3059\u3002JSON \u30b9\u30ad\u30fc\u30de\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u4ee3\u308f\u308a\u3082\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3042\u308a\u304c\u305f\u3044\u3053\u3068\u3067\u3059\u306d\u3002\n\nRESTful \u306b\u75b2\u308c\u305f\u4eba\u306b\u30aa\u30b9\u30b9\u30e1\u306e\u4e00\u54c1\u3067\u3059\u3002\n", "tags": ["jsonschema", "Python", "Flask"]}