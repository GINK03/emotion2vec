{"tags": ["Jupyter", "matplotlib", "plotly", "Mayavi", "\u53ef\u8996\u5316"], "context": "\n\n3\u6b21\u5143\u306e\u66f2\u7dda\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\nNotebook\nimport numpy as np\ntheta = np.linspace(-4 * np.pi, 4 * np.pi, 100)\nz = np.linspace(-2, 2, 100)\nr = z**2 + 1\nx = r * np.sin(theta)\ny = r * np.cos(theta)\n\n\n\n\nMatplotlib\n\nNotebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot(x, y, z)\nplt.show()\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aLine plots - mplot3d tutorial\n\n\nPlotly\n\nNotebook\nfrom plotly.graph_objs import Scatter3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nscatter = Scatter3d(x=x, y=y, z=z, mode='lines')\niplot([scatter])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a3D Line Plots in Python\n\n\nMayavi\n\nNotebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.plot3d(x, y, z, tube_radius=0.1)    # tube_radius\u306f\u7dda\u306e\u592a\u3055\uff08\u7701\u7565\u53ef\uff09\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aplot3d - Plotting functions\n\n\n3\u6b21\u5143\u306e\u6563\u5e03\u56f3\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\nNotebook\nimport numpy as np\nX = np.random.uniform(-10, 10, 200)\nY = np.random.uniform(-10, 10, 200)\nZ = np.random.uniform(-10, 10, 200)\n\n\n\n\nMatplotlib\n\nNotebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nscatter = ax.scatter3D(X, Y, Z,\n                       s=5,                    # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n                       c=Z,                    # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n                       cmap=plt.cm.viridis)    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\nplt.colorbar(scatter)                          # \u30ab\u30e9\u30fc\u30d0\u30fc\u3092\u8868\u793a\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aScatter plots - mplot3d tutorial\n\n\nPlotly\n\nNotebook\nfrom plotly.graph_objs import Scatter3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\n# color\u3001colorscale\u3001showscale\u306f\u7701\u7565\u53ef\nscatter = Scatter3d(x=X, y=Y, z=Z, mode='markers',\n                    marker=dict(size=1,                  # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n                                color=Z,                 # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n                                colorscale='Viridis',    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n                                showscale=True)          # \u30ab\u30e9\u30fc\u30d0\u30fc\u3092\u8868\u793a\n                   )\n\niplot([scatter])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a3D Scatter Plots in Python\n\n\nMayavi\n\nNotebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.points3d(X, Y, Z,\n              Z,                     # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n              scale_mode='none',     # \u30de\u30fc\u30ab\u30fc\u3092\u540c\u3058\u30b5\u30a4\u30ba\u3067\u8868\u793a\n              scale_factor=0.5,      # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n              colormap='viridis')    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1apoints3d - Plotting functions\n\n\n\u683c\u5b50\u72b6\u306b\u4e26\u3093\u30602.5\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\nNotebook\nfrom mpl_toolkits.mplot3d.axes3d import get_test_data\nX, Y, Z = get_test_data()\n\n\n\n\nMatplotlib\n\nNotebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot_surface(X, Y, Z,\n                cmap=plt.cm.viridis)    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aSurface plots - mplot3d tutorial\n\n\nPlotly\n\nNotebook\nfrom plotly.graph_objs import Surface\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nsurface = Surface(x=X, y=Y, z=Z,\n                  colorscale='Viridis')    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\niplot([surface])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a3D Surface Plots in Python\n\n\nMayavi\n\nNotebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.surf(Z,\n          colormap='viridis',    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n          warp_scale='auto')     # Z\u8ef8\u306e\u30b9\u30b1\u30fc\u30eb\u3092\u81ea\u52d5\u7684\u306b\u8abf\u6574\u3059\u308b\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1asurf - Plotting functions\n\n\n\u4e0d\u898f\u5247\u306b\u4e26\u3093\u30602.5\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\nNotebook\nimport numpy as np\nX = np.random.uniform(-10, 10, 1000)\nY = np.random.uniform(-10, 10, 1000)\nZ = X ** 2 + Y ** 2\n\n\n\n\nMatplotlib\n\nNotebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')                    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot_trisurf(X, Y, Z, cmap=plt.cm.viridis)    # cmap\u306f\u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aTri-Surface plots - mplot3d tutorial\n\n\nPlotly\n\nNotebook\nfrom plotly.graph_objs import Mesh3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmesh = Mesh3d(x=X, y=Y, z=Z,\n              delaunayaxis='z')    # \u4e09\u89d2\u5f62\u5206\u5272\u3059\u308b\u6642\u306b\u6295\u5f71\u3059\u308b\u65b9\u5411\niplot([mesh])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n\n\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1aSurface Triangulation in Python\n\n\u53c2\u8003\u30ea\u30f3\u30af\nJupyter notebook\u3067Mayavi\u3092\u4f7f\u3046\u6642\u306e\u8a2d\u5b9a - Qiita\nPython\u306e\u53ef\u8996\u5316\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f7f\u3044\u5206\u3051 - Qiita\n\u306a\u3093\u3067\u3082\u304b\u3093\u3067\u3082Jupyter Notebook\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\u3000\uff12\u6b21\u5143\u30d7\u30ed\u30c3\u30c8\u7de8 - Qiita\n# 3\u6b21\u5143\u306e\u66f2\u7dda\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\n```py3:Notebook\nimport numpy as np\ntheta = np.linspace(-4 * np.pi, 4 * np.pi, 100)\nz = np.linspace(-2, 2, 100)\nr = z**2 + 1\nx = r * np.sin(theta)\ny = r * np.cos(theta)\n```\n\n\n---\n## Matplotlib\n\n```py3:Notebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot(x, y, z)\nplt.show()\n```\n<img width=\"367\" alt=\"3D\u66f2\u7dda_Matplotlib.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/b4b4db96-fa14-fe63-da8c-9c2704cc38a7.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[Line plots - mplot3d tutorial](http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#line-plots)\n\n\n---\n## Plotly\n```py3:Notebook\nfrom plotly.graph_objs import Scatter3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nscatter = Scatter3d(x=x, y=y, z=z, mode='lines')\niplot([scatter])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n```\n<img width=\"419\" alt=\"3D\u66f2\u7dda_Plotly.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/31ac93bb-857e-24ca-dea8-8580753b3c6d.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[3D Line Plots in Python](https://plot.ly/python/3d-line-plots/)\n\n\n---\n## Mayavi\n```py3:Notebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.plot3d(x, y, z, tube_radius=0.1)    # tube_radius\u306f\u7dda\u306e\u592a\u3055\uff08\u7701\u7565\u53ef\uff09\n```\n<img width=\"493\" alt=\"3D\u66f2\u7dda_Mayavi.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/c234e055-5df5-3bfb-4c77-15bb3591b9d6.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[plot3d - Plotting functions](http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html#plot3d)\n\n\n---\n# 3\u6b21\u5143\u306e\u6563\u5e03\u56f3\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\n```py3:Notebook\nimport numpy as np\nX = np.random.uniform(-10, 10, 200)\nY = np.random.uniform(-10, 10, 200)\nZ = np.random.uniform(-10, 10, 200)\n```\n\n\n---\n## Matplotlib\n```py3:Notebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nscatter = ax.scatter3D(X, Y, Z,\n                       s=5,                    # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n                       c=Z,                    # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n                       cmap=plt.cm.viridis)    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\nplt.colorbar(scatter)                          # \u30ab\u30e9\u30fc\u30d0\u30fc\u3092\u8868\u793a\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n```\n<img width=\"375\" alt=\"3D\u6563\u5e03\u56f3_Matplotlib.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/dc93a5b7-fc6d-a1d5-17e1-ce7260879348.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[Scatter plots - mplot3d tutorial](http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#scatter-plots)\n\n\n---\n## Plotly\n```py3:Notebook\nfrom plotly.graph_objs import Scatter3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\n# color\u3001colorscale\u3001showscale\u306f\u7701\u7565\u53ef\nscatter = Scatter3d(x=X, y=Y, z=Z, mode='markers',\n                    marker=dict(size=1,                  # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n                                color=Z,                 # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n                                colorscale='Viridis',    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n                                showscale=True)          # \u30ab\u30e9\u30fc\u30d0\u30fc\u3092\u8868\u793a\n                   )\n\niplot([scatter])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n```\n<img width=\"411\" alt=\"3D\u6563\u5e03\u56f3_Plotly.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/ba8779f6-8e6e-a661-104e-9d8459b8dda2.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[3D Scatter Plots in Python](https://plot.ly/python/3d-scatter-plots/)\n\n\n---\n## Mayavi\n```py3:Notebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.points3d(X, Y, Z,\n              Z,                     # \u8272\u5206\u3051\u306b\u4f7f\u3046\u6570\u5024\uff08\u4efb\u610f\u306e\u6570\u5024\u3092\u6307\u5b9a\u53ef\uff09\n              scale_mode='none',     # \u30de\u30fc\u30ab\u30fc\u3092\u540c\u3058\u30b5\u30a4\u30ba\u3067\u8868\u793a\n              scale_factor=0.5,      # \u30de\u30fc\u30ab\u30fc\u306e\u30b5\u30a4\u30ba\n              colormap='viridis')    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n```\n<img width=\"493\" alt=\"3D\u6563\u5e03\u56f3_Mayavi.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/d18a5722-fd68-0a0f-d838-1220b7bf55c3.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[points3d - Plotting functions](http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html#points3d)\n\n\n---\n# \u683c\u5b50\u72b6\u306b\u4e26\u3093\u30602.5\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\n```py3:Notebook\nfrom mpl_toolkits.mplot3d.axes3d import get_test_data\nX, Y, Z = get_test_data()\n```\n\n\n---\n## Matplotlib\n```py3:Notebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot_surface(X, Y, Z,\n                cmap=plt.cm.viridis)    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n```\n<img width=\"363\" alt=\"3D\u30b5\u30fc\u30d5\u30a7\u30b9_Matplotlib.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/95cf536b-6924-c087-3a61-17a3952ea52d.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[Surface plots - mplot3d tutorial](http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#surface-plots)\n\n\n---\n## Plotly\n```py3:Notebook\nfrom plotly.graph_objs import Surface\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nsurface = Surface(x=X, y=Y, z=Z,\n                  colorscale='Viridis')    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\niplot([surface])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n```\n<img width=\"403\" alt=\"3D\u30b5\u30fc\u30d5\u30a7\u30b9_Plotly.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/f30b2ece-953e-f6d5-4213-05144cbd5370.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[3D Surface Plots in Python](https://plot.ly/python/3d-surface-plots/)\n\n\n---\n## Mayavi\n```py3:Notebook\nfrom mayavi import mlab\nmlab.init_notebook()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmlab.figure()\nmlab.surf(Z,\n          colormap='viridis',    # \u8272\u306e\u30d1\u30bf\u30fc\u30f3\n          warp_scale='auto')     # Z\u8ef8\u306e\u30b9\u30b1\u30fc\u30eb\u3092\u81ea\u52d5\u7684\u306b\u8abf\u6574\u3059\u308b\n```\n<img width=\"491\" alt=\"3D\u30b5\u30fc\u30d5\u30a7\u30b9_Mayavi.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/ce97352c-4faf-560e-f1de-2b5b58f33219.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[surf - Plotting functions](http://docs.enthought.com/mayavi/mayavi/auto/mlab_helper_functions.html#surf)\n\n\n---\n# \u4e0d\u898f\u5247\u306b\u4e26\u3093\u30602.5\u6b21\u5143\u30c7\u30fc\u30bf\u3092\u30d7\u30ed\u30c3\u30c8\n\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30c7\u30fc\u30bf\u306f\u3053\u308c\n\n```py3:Notebook\nimport numpy as np\nX = np.random.uniform(-10, 10, 1000)\nY = np.random.uniform(-10, 10, 1000)\nZ = X ** 2 + Y ** 2\n```\n\n\n---\n## Matplotlib\n```py3:Notebook\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import axes3d    # <- \u660e\u793a\u7684\u306b\u306f\u4f7f\u308f\u306a\u3044\u304c\u3001\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n# Notebook\u51fa\u529b\u306b\u306f\u6b21\u306e\uff11\u884c\u304c\u5fc5\u8981\uff08%matplotlib inline\u3060\u3068\u30b0\u30e9\u30d5\u3092\u56de\u8ee2\u3067\u304d\u306a\u3044\uff09\n%matplotlib notebook\n\nfig = plt.figure()\nax = fig.gca(projection='3d')                    # <- axes3d\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\nax.plot_trisurf(X, Y, Z, cmap=plt.cm.viridis)    # cmap\u306f\u8272\u306e\u30d1\u30bf\u30fc\u30f3\uff08\u7701\u7565\u53ef\uff09\nplt.show()\n```\n<img width=\"362\" alt=\"3D\u30e1\u30c3\u30b7\u30e5_Matplotlib.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/0599c84c-d5b3-3630-0e95-78e286414d20.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[Tri-Surface plots - mplot3d tutorial](http://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html#tri-surface-plots)\n\n\n---\n## Plotly\n```py3:Notebook\nfrom plotly.graph_objs import Mesh3d\nfrom plotly.offline import init_notebook_mode, iplot\ninit_notebook_mode()    # <- Notebook\u51fa\u529b\u306b\u306f\u3053\u306e\uff11\u884c\u304c\u5fc5\u8981\n\nmesh = Mesh3d(x=X, y=Y, z=Z,\n              delaunayaxis='z')    # \u4e09\u89d2\u5f62\u5206\u5272\u3059\u308b\u6642\u306b\u6295\u5f71\u3059\u308b\u65b9\u5411\niplot([mesh])    # <- Notebook\u306b\u51fa\u529b\u3059\u308b\u306b\u306fiplot\u95a2\u6570\u3092\u4f7f\u3046\n```\n<img width=\"316\" alt=\"3D\u30e1\u30c3\u30b7\u30e5_Plotly.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/37701/8431811e-4cf9-96ca-1854-5d8ae0d8c7a4.png\">\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff1a[Surface Triangulation in Python](https://plot.ly/python/surface-triangulation/)\n\n\n# \u53c2\u8003\u30ea\u30f3\u30af\n[Jupyter notebook\u3067Mayavi\u3092\u4f7f\u3046\u6642\u306e\u8a2d\u5b9a - Qiita](http://qiita.com/2dod/items/9fbf1fc052d74bef12cd)\n[Python\u306e\u53ef\u8996\u5316\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f7f\u3044\u5206\u3051 - Qiita](http://qiita.com/alchemist/items/544d45480ce9c1ca2c16)\n[\u306a\u3093\u3067\u3082\u304b\u3093\u3067\u3082Jupyter Notebook\u306b\u8868\u793a\u3059\u308b\u305f\u3081\u306e\u30c1\u30fc\u30c8\u30b7\u30fc\u30c8\u3000\uff12\u6b21\u5143\u30d7\u30ed\u30c3\u30c8\u7de8 - Qiita](http://qiita.com/alchemist/items/f528e77f195eb65a04df)\n"}