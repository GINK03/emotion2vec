{"tags": ["Hubot", "Slack"], "context": "\n\n\u80cc\u666f\n\u793e\u5185\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3092Slack\u306b\u79fb\u884c\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u7121\u6599\u7248\u3067\u306f\u300c\u30ed\u30b0\u306e\u691c\u7d22\u3068\u95b2\u89a7\u304c10,000\u4ef6\u307e\u3067\u300d\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\u30e1\u30f3\u30d0\u5185\u306b\u306f\u300c\u30ed\u30b0\u304c\u6b8b\u3089\u306a\u3044\u306e\u304c\uff5e\uff5e\uff5e\u300d\u3068\u3044\u3046\u4eba\u3082\u3044\u305f\u305f\u3081\u3001\u5143\u3005\u9023\u643a\u3055\u305b\u3066\u3044\u308bHubot\u3068SlackAPI\u3092\u5229\u7528\u3057\u3066\u3001\u4eca\u65e51\u65e5\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nHubot\u306e\u74b0\u5883\u69cb\u7bc9\u3084SlackAPI\u306e\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u65b9\u6cd5\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\nslack.coffee\n\nslack.coffee\n# Description:\n#   Example scripts for you to examine and try out.\n#\n# Notes:\n#   They are commented out by default, because most of them are pretty silly and\n#   wouldn't be useful and amusing enough for day to day huboting.\n#   Uncomment the ones you want to try and experiment with.\n#\n#   These are from the scripting documentation: https://github.com/github/hubot/blob/master/docs/scripting.md\n\nmodule.exports = (robot) ->\n    # Slack API\n    token = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n    Slack = require 'slack-node'\n    slack = new Slack token\n\n    fs = require('fs')\n\n    # \u5e73\u65e5\u306e23\u664255\u5206\u306b\u5b9a\u671f\u5b9f\u884c\n    Cron = require('cron').CronJob\n    cronJob = new Cron '0 55 23 * * 1-5', ->\n        outputLog()\n\n    cronJob.start()\n\n    # \u30ed\u30b0\u51fa\u529b\u30e1\u30bd\u30c3\u30c9\n    outputLog = ->\n        # archive\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u9664\u5916\n        channelsListParams = {exclude_archived: 1}\n\n        getChannelsList channelsListParams, (channels) ->\n            userListParams = {}\n\n            getUserList userListParams, (members) ->\n                # oldest\u306b\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n                todayTs = getTodayTimeStamp()\n\n                for channelId, channel of channels\n                    historyParams = {channel: \"#{channelId}\", oldest: todayTs, count: 1000}\n                    getHistory historyParams, (messages, params) ->\n                        roomName = channels[\"#{params.channel}\"].name\n                        now = new Date()\n                        folderPath = \"./#{now.getFullYear()}#{now.getMonth() + 1}#{now.getDate()}\"\n                        fileName = \"#{roomName}.log\"\n\n                        # \u30d5\u30a9\u30eb\u30c0\u4f5c\u6210\n                        if !fs.existsSync(folderPath)\n                            fs.mkdirSync(folderPath)\n\n                        # \u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u8fbc\u307f\n                        for message in messages\n                            # \u30a4\u30d9\u30f3\u30c8\u306f\u7121\u8996\n                            if message.type is \"message\"\n                                userName = members[\"#{message.user}\"].name\n                                time = getTime message.ts\n\n                                fs.appendFileSync \"#{folderPath}/#{fileName}\", \"(#{userName}) (#{time}) #{message.text} \\n\", \"utf8\"\n\n    # \u30c1\u30e3\u30f3\u30cd\u30eb\u30ea\u30b9\u30c8\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n    getChannelsList = (params, successHandler, errorHandler) ->\n        slack.api \"channels.list\", params, (err, res) ->\n            if res.ok\n                # ID\u30d9\u30fc\u30b9\u3067\u30de\u30c3\u30d7\u3092\u4f5c\u308b\n                channelsMap = {}\n                for channel in res.channels\n                    channelsMap[\"#{channel.id}\"] = channel\n\n                successHandler channelsMap\n            else\n                errorHandler()\n\n    # \u30e6\u30fc\u30b6\u30fc\u30ea\u30b9\u30c8\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n    getUserList = (params, successHandler, errorHandler) ->\n        slack.api \"users.list\", params, (err, res) ->\n            if res.ok\n                # ID\u30d9\u30fc\u30b9\u3067\u30de\u30c3\u30d7\u3092\u4f5c\u308b\n                membersMap = {}\n                for member in res.members\n                    membersMap[\"#{member.id}\"] = member\n\n                successHandler membersMap\n            else\n                errorHandler()\n\n    # \u5c65\u6b74\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n    getHistory = (params, successHandler, errorHandler) ->\n        messagesBuf = []\n\n        # \u518d\u5e30\u7684\u306b\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n        getHistoryRecursively = (params, successHandler, errorHandler) ->\n            slack.api \"channels.history\", params, (err, res) ->\n                if res.ok\n                    # \u65b0\u3057\u3044\u65b9\u304b\u3089\u914d\u5217\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u9006\u9806\u3067\u683c\u7d0d\n                    messagesBuf = messagesBuf.concat res.messages.reverse()\n\n                    if res.has_more\n                        # 1\u56de\u3067\u53d6\u5f97\u3057\u304d\u308c\u306a\u3044\u5834\u5408\u306f\u518d\u5e30\u7684\u306b\u53d6\u5f97\n                        newParams = params\n                        newParams.oldest = res.messages[0].ts\n\n                        getHistoryRecursively newParams, successHandler, errorHandler\n                    else\n                        successHandler messagesBuf, params\n                else\n                    errorHandler()\n\n        getHistoryRecursively params, successHandler, errorHandler\n\n    # \u4eca\u65e5\u306e0\u6642\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n    getTodayTimeStamp = ->\n        today = new Date()\n        today.setHours(0)\n        today.setMinutes(0)\n        today.setSeconds(0)\n        today.setMilliseconds(0)\n\n        return today.getTime() / 1000\n\n    # \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u6642\u9593\u3092\u53d6\u5f97\n    getTime = (ts) ->\n        date = new Date(ts*1000)\n        hour = date.getHours()\n        minutes = date.getMinutes()\n\n        # 2\u6841\u30670\u57cb\u3081\u3059\u308b\n        if \"#{hour}\".length is 1\n            hour = \"0#{hour}\"\n\n        if \"#{minutes}\".length is 1\n            minutes = \"0#{minutes}\"\n\n        return \"#{hour}:#{minutes}\"\n\n\n\n\n\u7d50\u679c\n\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u3066\u3044\u306a\u3044\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30ed\u30b0\u304c[\u65e5\u4ed8]/[\u30c1\u30e3\u30f3\u30cd\u30eb\u540d].log\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u30b9\u30ec\u30c3\u30c9\u3084\u7d30\u304b\u3044\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u306f\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u306a\u3044\u3067\u3059\u304c\u3001\u5927\u307e\u304b\u306a\u30c1\u30e3\u30c3\u30c8\u306e\u3084\u308a\u3068\u308a\u306f\u5206\u304b\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\ngeneral.log\n(nagasaku) (11:08) aaa \n(nagasaku) (11:10) hubot log \n(nagasaku) (11:14) hubot log \n(nagasaku) (11:15) hubot log \n(nagasaku) (11:25) hubot log \n(nagasaku) (11:26) hubot log \n(nagasaku) (11:29) hubot log \n(nagasaku) (11:30) hubot log \n(nagasaku) (11:32) hubot lo \n(nagasaku) (11:32) hubot log \n(hubot) (12:24) Log ouput started. \n(nagasaku) (12:34) \u30c6\u30b9\u30c8 \n\n\n## \u80cc\u666f\n\u793e\u5185\u306e\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u30c4\u30fc\u30eb\u3092Slack\u306b\u79fb\u884c\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u7121\u6599\u7248\u3067\u306f\u300c\u30ed\u30b0\u306e\u691c\u7d22\u3068\u95b2\u89a7\u304c10,000\u4ef6\u307e\u3067\u300d\u3068\u306e\u3053\u3068\u3067\u3059\u3002   \n\u30e1\u30f3\u30d0\u5185\u306b\u306f\u300c\u30ed\u30b0\u304c\u6b8b\u3089\u306a\u3044\u306e\u304c\uff5e\uff5e\uff5e\u300d\u3068\u3044\u3046\u4eba\u3082\u3044\u305f\u305f\u3081\u3001\u5143\u3005\u9023\u643a\u3055\u305b\u3066\u3044\u308bHubot\u3068SlackAPI\u3092\u5229\u7528\u3057\u3066\u3001\u4eca\u65e51\u65e5\u306e\u30ed\u30b0\u3092\u51fa\u529b\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nHubot\u306e\u74b0\u5883\u69cb\u7bc9\u3084SlackAPI\u306e\u30c8\u30fc\u30af\u30f3\u53d6\u5f97\u65b9\u6cd5\u306a\u3069\u306b\u3064\u3044\u3066\u306f\u7701\u7565\u3057\u307e\u3059\u3002\n\n## slack.coffee\n``` slack.coffee\n# Description:\n#   Example scripts for you to examine and try out.\n#\n# Notes:\n#   They are commented out by default, because most of them are pretty silly and\n#   wouldn't be useful and amusing enough for day to day huboting.\n#   Uncomment the ones you want to try and experiment with.\n#\n#   These are from the scripting documentation: https://github.com/github/hubot/blob/master/docs/scripting.md\n\nmodule.exports = (robot) ->\n\t# Slack API\n\ttoken = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"\n\tSlack = require 'slack-node'\n\tslack = new Slack token\n\t\n\tfs = require('fs')\n\t\n\t# \u5e73\u65e5\u306e23\u664255\u5206\u306b\u5b9a\u671f\u5b9f\u884c\n\tCron = require('cron').CronJob\n\tcronJob = new Cron '0 55 23 * * 1-5', ->\n\t\toutputLog()\n\t\t\n\tcronJob.start()\n\t\n\t# \u30ed\u30b0\u51fa\u529b\u30e1\u30bd\u30c3\u30c9\n\toutputLog = ->\n\t\t# archive\u30c1\u30e3\u30f3\u30cd\u30eb\u306f\u9664\u5916\n\t\tchannelsListParams = {exclude_archived: 1}\n\t\t\n\t\tgetChannelsList channelsListParams, (channels) ->\n\t\t\tuserListParams = {}\n\t\t\t\n\t\t\tgetUserList userListParams, (members) ->\n\t\t\t\t# oldest\u306b\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n\t\t\t\ttodayTs = getTodayTimeStamp()\n\t\t\t\t\n\t\t\t\tfor channelId, channel of channels\n\t\t\t\t\thistoryParams = {channel: \"#{channelId}\", oldest: todayTs, count: 1000}\n\t\t\t\t\tgetHistory historyParams, (messages, params) ->\n\t\t\t\t\t\troomName = channels[\"#{params.channel}\"].name\n\t\t\t\t\t\tnow = new Date()\n\t\t\t\t\t\tfolderPath = \"./#{now.getFullYear()}#{now.getMonth() + 1}#{now.getDate()}\"\n\t\t\t\t\t\tfileName = \"#{roomName}.log\"\n\t\t\t\t\t\t\n\t\t\t\t\t\t# \u30d5\u30a9\u30eb\u30c0\u4f5c\u6210\n\t\t\t\t\t\tif !fs.existsSync(folderPath)\n\t\t\t\t\t\t\tfs.mkdirSync(folderPath)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t# \u30d5\u30a1\u30a4\u30eb\u66f8\u304d\u8fbc\u307f\n\t\t\t\t\t\tfor message in messages\n\t\t\t\t\t\t\t# \u30a4\u30d9\u30f3\u30c8\u306f\u7121\u8996\n\t\t\t\t\t\t\tif message.type is \"message\"\n\t\t\t\t\t\t\t\tuserName = members[\"#{message.user}\"].name\n\t\t\t\t\t\t\t\ttime = getTime message.ts\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfs.appendFileSync \"#{folderPath}/#{fileName}\", \"(#{userName}) (#{time}) #{message.text} \\n\", \"utf8\"\n\t\t\t\t\t\t\t\t\n\t# \u30c1\u30e3\u30f3\u30cd\u30eb\u30ea\u30b9\u30c8\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n\tgetChannelsList = (params, successHandler, errorHandler) ->\n\t\tslack.api \"channels.list\", params, (err, res) ->\n\t\t\tif res.ok\n\t\t\t\t# ID\u30d9\u30fc\u30b9\u3067\u30de\u30c3\u30d7\u3092\u4f5c\u308b\n\t\t\t\tchannelsMap = {}\n\t\t\t\tfor channel in res.channels\n\t\t\t\t\tchannelsMap[\"#{channel.id}\"] = channel\n\t\t\t\t\t\n\t\t\t\tsuccessHandler channelsMap\n\t\t\telse\n\t\t\t\terrorHandler()\n\t\t\t\t\n\t# \u30e6\u30fc\u30b6\u30fc\u30ea\u30b9\u30c8\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n\tgetUserList = (params, successHandler, errorHandler) ->\n\t\tslack.api \"users.list\", params, (err, res) ->\n\t\t\tif res.ok\n\t\t\t\t# ID\u30d9\u30fc\u30b9\u3067\u30de\u30c3\u30d7\u3092\u4f5c\u308b\n\t\t\t\tmembersMap = {}\n\t\t\t\tfor member in res.members\n\t\t\t\t\tmembersMap[\"#{member.id}\"] = member\n\t\t\t\t\t\n\t\t\t\tsuccessHandler membersMap\n\t\t\telse\n\t\t\t\terrorHandler()\n\t\t\t\t\n\t# \u5c65\u6b74\u53d6\u5f97\u30e1\u30bd\u30c3\u30c9\n\tgetHistory = (params, successHandler, errorHandler) ->\n\t\tmessagesBuf = []\n\t\t\n\t\t# \u518d\u5e30\u7684\u306b\u53d6\u5f97\u3059\u308b\u30e1\u30bd\u30c3\u30c9\n\t\tgetHistoryRecursively = (params, successHandler, errorHandler) ->\n\t\t\tslack.api \"channels.history\", params, (err, res) ->\n\t\t\t\tif res.ok\n\t\t\t\t\t# \u65b0\u3057\u3044\u65b9\u304b\u3089\u914d\u5217\u306b\u5165\u3063\u3066\u3044\u308b\u306e\u3067\u9006\u9806\u3067\u683c\u7d0d\n\t\t\t\t\tmessagesBuf = messagesBuf.concat res.messages.reverse()\n\t\t\t\t\t\n\t\t\t\t\tif res.has_more\n\t\t\t\t\t\t# 1\u56de\u3067\u53d6\u5f97\u3057\u304d\u308c\u306a\u3044\u5834\u5408\u306f\u518d\u5e30\u7684\u306b\u53d6\u5f97\n\t\t\t\t\t\tnewParams = params\n\t\t\t\t\t\tnewParams.oldest = res.messages[0].ts\n\t\t\t\t\t\t\n\t\t\t\t\t\tgetHistoryRecursively newParams, successHandler, errorHandler\n\t\t\t\t\telse\n\t\t\t\t\t\tsuccessHandler messagesBuf, params\n\t\t\t\telse\n\t\t\t\t\terrorHandler()\n\t\t\n\t\tgetHistoryRecursively params, successHandler, errorHandler\n\t\t\n\t# \u4eca\u65e5\u306e0\u6642\u306e\u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\n\tgetTodayTimeStamp = ->\n\t\ttoday = new Date()\n\t\ttoday.setHours(0)\n\t\ttoday.setMinutes(0)\n\t\ttoday.setSeconds(0)\n\t\ttoday.setMilliseconds(0)\n\t\t\n\t\treturn today.getTime() / 1000\n\t\t\n\t# \u30bf\u30a4\u30e0\u30b9\u30bf\u30f3\u30d7\u304b\u3089\u6642\u9593\u3092\u53d6\u5f97\n\tgetTime = (ts) ->\n\t\tdate = new Date(ts*1000)\n\t\thour = date.getHours()\n\t\tminutes = date.getMinutes()\n\t\t\n\t\t# 2\u6841\u30670\u57cb\u3081\u3059\u308b\n\t\tif \"#{hour}\".length is 1\n\t\t\thour = \"0#{hour}\"\n\t\t\t\n\t\tif \"#{minutes}\".length is 1\n\t\t\tminutes = \"0#{minutes}\"\n\t\t\t\n\t\treturn \"#{hour}:#{minutes}\"\n\n```\n\n## \u7d50\u679c\n\u30a2\u30fc\u30ab\u30a4\u30d6\u3055\u308c\u3066\u3044\u306a\u3044\u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30ed\u30b0\u304c`[\u65e5\u4ed8]/[\u30c1\u30e3\u30f3\u30cd\u30eb\u540d].log`\u306b\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u30b9\u30ec\u30c3\u30c9\u3084\u7d30\u304b\u3044\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u306f\u5bfe\u5fdc\u3067\u304d\u3066\u3044\u306a\u3044\u3067\u3059\u304c\u3001\u5927\u307e\u304b\u306a\u30c1\u30e3\u30c3\u30c8\u306e\u3084\u308a\u3068\u308a\u306f\u5206\u304b\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n``` general.log\n(nagasaku) (11:08) aaa \n(nagasaku) (11:10) hubot log \n(nagasaku) (11:14) hubot log \n(nagasaku) (11:15) hubot log \n(nagasaku) (11:25) hubot log \n(nagasaku) (11:26) hubot log \n(nagasaku) (11:29) hubot log \n(nagasaku) (11:30) hubot log \n(nagasaku) (11:32) hubot lo \n(nagasaku) (11:32) hubot log \n(hubot) (12:24) Log ouput started. \n(nagasaku) (12:34) \u30c6\u30b9\u30c8 \n```\n"}