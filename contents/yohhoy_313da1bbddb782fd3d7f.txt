{"context": " More than 1 year has passed since last update.\ncamcap.cpp\n#include <iostream>\n#include <opencv2/opencv.hpp>\n\nint main()\n{\n    const char * const window = \"Capture (Press ESC to exit)\";\n    const double scale = 0.75;\n    const int delay = 32;   // [msec]\n\n    cv::VideoCapture cap(0);\n    if (!cap.isOpened()) {\n        std::cerr << \"fail to open cv::VideoCapture\" << std::endl;\n        return 2; \n    }\n\n    const double width = cap.get(cv::CAP_PROP_FRAME_WIDTH) * scale;\n    const double height = cap.get(cv::CAP_PROP_FRAME_HEIGHT) * scale;\n    cap.set(cv::CAP_PROP_FRAME_WIDTH, width);\n    cap.set(cv::CAP_PROP_FRAME_HEIGHT, height);\n    std::cout << \"frame=\" << width << 'x' << height << std::endl;\n\n    cv::namedWindow(window);\n    cv::Mat frame;\n    do {\n        cap >> frame;\n        cv::imshow(window, frame);\n    } while (cv::waitKey(delay) != '\\x1b');\n\n    return 0;\n}\n\n\n$ brew install science/opencv3\n...\n$ clang++ -std=c++14 -W -Wall -O2 -o camcap camcap.cpp -I/usr/local/opt/opencv3/include -L/usr/local/opt/opencv3/lib -lopencv_core -lopencv_highgui -lopencv_videoio\n$ ./camcap\n\n```cpp:camcap.cpp\n#include <iostream>\n#include <opencv2/opencv.hpp>\n\nint main()\n{\n    const char * const window = \"Capture (Press ESC to exit)\";\n    const double scale = 0.75;\n    const int delay = 32;   // [msec]\n\n    cv::VideoCapture cap(0);\n    if (!cap.isOpened()) {\n        std::cerr << \"fail to open cv::VideoCapture\" << std::endl;\n        return 2; \n    }\n\n    const double width = cap.get(cv::CAP_PROP_FRAME_WIDTH) * scale;\n    const double height = cap.get(cv::CAP_PROP_FRAME_HEIGHT) * scale;\n    cap.set(cv::CAP_PROP_FRAME_WIDTH, width);\n    cap.set(cv::CAP_PROP_FRAME_HEIGHT, height);\n    std::cout << \"frame=\" << width << 'x' << height << std::endl;\n\n    cv::namedWindow(window);\n    cv::Mat frame;\n    do {\n        cap >> frame;\n        cv::imshow(window, frame);\n    } while (cv::waitKey(delay) != '\\x1b');\n\n    return 0;\n}\n```\n\n```\n$ brew install science/opencv3\n...\n$ clang++ -std=c++14 -W -Wall -O2 -o camcap camcap.cpp -I/usr/local/opt/opencv3/include -L/usr/local/opt/opencv3/lib -lopencv_core -lopencv_highgui -lopencv_videoio\n$ ./camcap\n```\n", "tags": ["OpenCV3.0.0", "C++", "Mac", "homebrew"]}