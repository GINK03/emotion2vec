{"context": "\n\n\u306f\u3058\u3081\u306b\n\u7b49\u6d41\u3068\u306f\uff0c\u6642\u9593\u7684\u30fb\u5834\u6240\u7684\u306b\u65ad\u9762\u5f62\u72b6\uff0c\u6cb3\u5e8a\u52fe\u914d\uff0c\u6c34\u6df1\uff0c\u6d41\u91cf\u304c\u5909\u5316\u3057\u306a\u3044\u6d41\u308c\u3067\u3042\u308a\uff0c\u6cb3\u5ddd\u95a2\u4fc2\u3067\u306fManning\u306e\u5e73\u5747\u6d41\u901f\u516c\u5f0f\u3092\u7528\u3044\u3066\u89e3\u6790\u3055\u308c\u308b\u5834\u5408\u304c\u591a\u3044\uff0e\n\u89e3\u6790\u306b\u7528\u3044\u308b\u306e\u306f\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u3042\u308b\uff0e\nv=1nR2/3I1/2R=ASQ=A\u22c5v \nv=\\cfrac{1}{n} R^{2/3} I^{1/2} \\qquad R=\\cfrac{A}{S} \\qquad Q=A \\cdot v \n\n\nvv : \u5e73\u5747\u6d41\u901f\nnn : \u7c97\u5ea6\u4fc2\u6570\nRR : \u52d5\u6c34\u534a\u5f84\nII : \u6cb3\u5e8a\u52fe\u914d\nAA : \u6d41\u6c34\u65ad\u9762\u7a4d\nSS : \u6f64\u8fba\nQQ : \u6d41\u91cf\n\n\u6d41\u6c34\u65ad\u9762\u7a4d\u304a\u3088\u3073\u6f64\u8fba\u306f\uff0c\u6c34\u6df1\u306e\u95a2\u6570\u3068\u306a\u308b\u306e\u3067\uff0c\u6700\u521d\u306b\u6c34\u6df1hh\uff08\u3082\u3057\u304f\u306f\u6c34\u4f4d\u6a19\u9ad8\uff09\u3092\u4eee\u5b9a\u3057\uff0c\u305d\u306e\u6c34\u6df1\u3067\u306e\u6d41\u4e0b\u91cfQQ\u3092\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u304c\uff0c\u8a08\u7b97\u904e\u7a0b\u304c\u5358\u7d14\u3067\u3042\u308b\uff0e\n\n\u5b9f\u884c\u7528\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\u5b9f\u884c\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\uff0c\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\uff0e\n\npy_eng_uniflow.py \uff1a \u4e0d\u7b49\u6d41\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\npy_eng_uni_figHQ.py \uff1a \u6c34\u4f4d\u30fc\u6d41\u91cf\u66f2\u7dda\u63cf\u753b\npy_eng_uni_figsec.py \uff1a \u89e3\u6790\u65ad\u9762\u63cf\u753b\n\n\u5b9f\u884c\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u672c\u6587\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\na_py_uni.txt\npython3 py_eng_uniflow.py inp_sec1.txt > out_PSHQ1.txt\n\npython3 py_eng_uni_figHQ.py out_PSHQ1.txt fig_PSHQ1.png\n\npython3 py_eng_uni_figsec.py inp_sec1.txt fig_sec1_PS.png n=0.04,i=0.001 79.4\n\n\n\n\u5165\u529b\u30c7\u30fc\u30bf\n1\u884c\u76ee\uff1a1\u5217\u76ee\u7c97\u5ea6\u4fc2\u6570nn\uff0c2\u5217\u76ee\u6cb3\u5e8a\u52fe\u914dII\n2\u884c\u76ee\u4ee5\u964d\uff1a1\u5217\u76ee\u6cb3\u5e8ax\u5ea7\u6a19\uff08\u5de6\u5cb8\u304b\u3089\u53f3\u5cb8\u3078\uff09\uff0cy\u5ea7\u6a19\uff08\u6a19\u9ad8\uff09\n\ninp_sec1.txt\n0.04 0.001\n-138 100\n-114  90\n -70  80\n -45  70\n -32  62\n   0  61.5\n  32  62\n  60  70\n  80  80\n  98  84\n 120  84\n\n\n\n\u51fa\u529b\u30c7\u30fc\u30bf\n\u51fa\u529b\u30c7\u30fc\u30bf\u4e26\u3073\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\u7b49\u6d41\u89e3\u6790\u306e\u307f\u3067\u3042\u308c\u3070\uff0c\u6d41\u91cf\u3068\u6a19\u9ad8\u3082\u3057\u304f\u306f\u6c34\u6df1\u306e\u95a2\u4fc2\u304c\u308f\u304b\u308c\u3070\u826f\u3044\u304c\uff0c\u4e0d\u7b49\u6d41\u89e3\u6790\u306e\u5165\u529b\u6761\u4ef6\u4f5c\u6210\u306e\u76ee\u7684\u3082\u517c\u306d\uff0c\u6d41\u6c34\u65ad\u9762\u7a4d\uff0c\u6f64\u8fba\uff0c\u6c34\u9762\u5e45\u3082\u51fa\u529b\u3055\u305b\u3066\u3044\u308b\uff0e\u3061\u306a\u307f\u306b\u6c34\u9762\u5e45\u306f\u9650\u754c\u6c34\u6df1\u7b97\u5b9a\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3067\u3042\u308b\uff0e\n\n1\u5217\u76ee\uff1a\u6d41\u91cf\n2\u5217\u76ee\uff1a\u6c34\u4f4d\u6a19\u9ad8\n3\u5217\u76ee\uff1a\u6c34\u6df1\n4\u5217\u76ee\uff1a\u6d41\u6c34\u65ad\u9762\u7a4d\n5\u5217\u76ee\uff1a\u6f64\u8fba\n6\u5217\u76ee\uff1a\u6c34\u9762\u5e45\n\n\nout_PSHQ1.txt\n         Q         WL          h          A          S        wsw\n     0.000     61.500      0.000      0.000      0.000      0.000\n     0.069     61.600      0.100      0.640     12.802     12.800\n     0.436     61.700      0.200      2.560     25.603     25.600\n     1.285     61.800      0.300      5.760     38.405     38.400\n     2.768     61.900      0.400     10.240     51.206     51.200\n     5.019     62.000      0.500     16.000     64.008     64.000\n     8.760     62.100      0.600     22.426     64.563     64.513\n..........      ..........\n\n\n\n\u7b49\u6d41\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\uff0c\u65ad\u9762\u7a4dAA\u3068\u6f64\u8fbaSS\u306e\u8a08\u7b97\u3092\u884c\u3063\u3066\u3044\u308b\uff0e\n\u3053\u308c\u306f\u4e0b\u56f3\u3092\u53c2\u7167\u3057\u3066\uff0c\u5de6\u5cb8\uff08\u5de6\u5074\uff09\u304b\u3089\uff0c\u5165\u529b\u3055\u308c\u305f\u5730\u5f62\u3092\u8868\u3059\u7dda\u5206\u3092\u8ffd\u3063\u3066\u3044\u304d\uff0c\u6307\u5b9a\u3057\u305f\u6a19\u9ad8\u30e9\u30a4\u30f3\uff08el\uff09\u3068\u5730\u5f62\u7dda\u306b\u56f2\u307e\u308c\u305f\u90e8\u5206\u306e\u9762\u7a4d\u304a\u3088\u3073\u5730\u5f62\u7dda\u9577\u3055\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\uff0e\n\n\npy_eng_uniflow.py\nimport numpy as np\nfrom math import *\nimport sys\nimport matplotlib.pyplot as plt\n\ndef INTERSEC(x1,y1,x2,y2,el):\n    xx=1.0e10\n    if 0.0<abs(y2-y1):\n        a=(y2-y1)/(x2-x1)\n        b=(x2*y1-x1*y2)/(x2-x1)\n        xx=(el-b)/a\n    return xx\n\n# Main routine\nparam=sys.argv\nfnameR=param[1]\n\n# Input data\nx=[]\ny=[]\nfin=open(fnameR,'r')\ntext=fin.readline()\ntext=text.strip()\ntext=text.split()\nrn=float(text[0]) # Manning roughness coefficient\ngi=float(text[1]) # Gradient of river bed\nwhile 1:\n    text=fin.readline()\n    if not text: break\n    text=text.strip()\n    text=text.split()\n    x=x+[float(text[0])]\n    y=y+[float(text[1])]\nfin.close()\nnn=len(x)\n\nprint('{0:>10s} {1:>10s} {2:>10s} {3:>10s} {4:>10s} {5:>10s}'.format('Q','WL','h','A','S','wsw'))\nymin=min(y)\nymax=max(y)\ndy=0.1\nyy=np.arange(ymin,ymax+dy,dy)\nfor el in yy:\n    S=0.0\n    A=0.0\n    xxl=0.0\n    xxr=0.0\n    for i in range(0,nn-1):\n        x1=x[i]\n        y1=y[i]\n        x2=x[i+1]\n        y2=y[i+1]\n        xx=INTERSEC(x1,y1,x2,y2,el)\n        dS=0.0\n        dA=0.0\n        if y1<el and y2<el:\n            dS=sqrt((x2-x1)**2+(y2-y1)**2)\n            dA=0.5*(2.0*el-y1-y2)*(x2-x1)\n        if x1<=xx and xx<=x2:\n            if y2<=el and el<=y1:\n                dS=sqrt((x2-xx)**2+(y2-el)**2)\n                dA=0.5*(x2-xx)*(el-y2)\n                xxl=xx\n            if y1<=el and el<=y2:\n                dS=sqrt((xx-x1)**2+(el-y1)**2)\n                dA=0.5*(xx-x1)*(el-y1)\n                xxr=xx\n        S=S+dS\n        A=A+dA\n    if 0.0<S:\n        R=A/S\n        v=1.0/rn*R**(2/3)*sqrt(gi)\n        Q=A*v\n    else:\n        R=0.0\n        v=0.0\n        Q=0.0\n    h=el-ymin\n    wsw=xxr-xxl\n    print('{0:10.3f} {1:10.3f} {2:10.3f} {3:10.3f} {4:10.3f} {5:10.3f}'.format(Q,el,h,A,S,wsw))\n\n\n\n\u6c34\u4f4d\u30fc\u6d41\u91cf\u66f2\u7dda\u63cf\u753b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u3053\u308c\u306f\uff0c\u6a19\u6e96\u7684\u306a\uff12\u6b21\u5143\u30b0\u30e9\u30d5\u4f5c\u6210\u306e\u624b\u9806\u306b\u5247\u3063\u3066\u3044\u308b\uff0e\n\npy_eng_uni_figHQ.py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sys\n\ndef DINP(fnameR):\n    data=np.loadtxt(fnameR,skiprows=1,usecols=(0,1))\n    QQ=data[:,0]\n    EL=data[:,1]\n    return QQ,EL\n\n# Parameter setting\nparam=sys.argv\nfnameR=param[1]     # input filename\nfnameF=param[2]     # output image file name\n\nqmin=0.0;qmax=10000.0;dq=1000\nemin=60.0;emax=90.0;de=2.0\n# Input data\nQQ,EL=DINP(fnameR)\n# Plot\nfig=plt.figure()\nplt.plot(QQ,EL,color='black',lw=2.0,label='PS (n=0.04, i=0.001)')\nplt.xlabel('Discharge (m$^3$/s)')\nplt.ylabel('Elevation (EL.m)')\nplt.xlim(qmin,qmax)\nplt.ylim(emin,emax)\nplt.xticks(np.arange(qmin,qmax+dq,dq))\nplt.yticks(np.arange(emin,emax+de,de))\nplt.grid()\nplt.legend(shadow=True,loc='upper left',handlelength=3)\nplt.savefig(fnameF,dpi=200,, bbox_inches=\"tight\", pad_inches=0.2)\nplt.show()\nplt.close()\n\n\n\n\u51fa\u529b\u753b\u50cf\n\n\n\u8a08\u7b97\u65ad\u9762\u63cf\u753b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u898b\u304b\u3051\u306e\u554f\u984c\u3067\u3042\u308b\u304c\uff0cfill_between\u3092\u7528\u3044\u3066\u6c34\u9762\u4e0b\u3092\u6c34\u8272\u3067\u5857\u308a\u3064\u3076\u3057\u3066\u3044\u308b\uff0e\n\npy_eng_uni_figsec.py\nimport numpy as np\n#from math import *\nimport sys\nimport matplotlib.pyplot as plt\n\n# Main routine\nparam=sys.argv\nfnameR=param[1]     # input filename\nfnameF=param[2]     # output image file name\nstrt=param[3]       # graph title (strings)\nfwl=float(param[4]) # target flood water level\n\n# Input data\nx=[]\ny=[]\nfin=open(fnameR,'r')\ntext=fin.readline()\ntext=text.strip()\ntext=text.split()\nrn=float(text[0])\ngi=float(text[1])\nwhile 1:\n    text=fin.readline()\n    if not text: break\n    text=text.strip()\n    text=text.split()\n    x=x+[float(text[0])]\n    y=y+[float(text[1])]\nfin.close()\nxx=np.array(x)\nyy=np.array(y)\n\n# plot\nxmin=-150\nxmax=150.0\nymin=50.0\nymax=100\nfig = plt.figure()\nax=fig.add_subplot(111)\nax.plot(xx,yy,color='black',lw=1.0,label='ground surface')\nax.fill_between(xx,yy,fwl,where=yy<=fwl,facecolor='cyan',alpha=0.3,interpolate=True)\nax.text(0,fwl,'10,000 years flood (EL.'+str(fwl)+')',fontsize=10,color='black',ha='center',va='top')\nax.set_title(strt)\nax.set_xlabel('Distance (m)')\nax.set_ylabel('Elevation (EL.m)')\nax.set_xlim(xmin,xmax)\nax.set_ylim(ymin,ymax)\naspect=1.0*(ymax-ymin)/(xmax-xmin)*(ax.get_xlim()[1] - ax.get_xlim()[0]) / (ax.get_ylim()[1] - ax.get_ylim()[0])\nax.set_aspect(aspect)\nplt.savefig(fnameF,dpi=200,, bbox_inches=\"tight\", pad_inches=0.2)\nplt.show()\nplt.close()\n\n\n\n\u51fa\u529b\u753b\u50cf\n\n\u4ee5\u4e0a\n# \u306f\u3058\u3081\u306b\n\u7b49\u6d41\u3068\u306f\uff0c\u6642\u9593\u7684\u30fb\u5834\u6240\u7684\u306b\u65ad\u9762\u5f62\u72b6\uff0c\u6cb3\u5e8a\u52fe\u914d\uff0c\u6c34\u6df1\uff0c\u6d41\u91cf\u304c\u5909\u5316\u3057\u306a\u3044\u6d41\u308c\u3067\u3042\u308a\uff0c\u6cb3\u5ddd\u95a2\u4fc2\u3067\u306fManning\u306e\u5e73\u5747\u6d41\u901f\u516c\u5f0f\u3092\u7528\u3044\u3066\u89e3\u6790\u3055\u308c\u308b\u5834\u5408\u304c\u591a\u3044\uff0e\n\u89e3\u6790\u306b\u7528\u3044\u308b\u306e\u306f\uff0c\u4ee5\u4e0b\u306e\u5f0f\u3067\u3042\u308b\uff0e\n\n$$\nv=\\cfrac{1}{n} R^{2/3} I^{1/2} \\qquad R=\\cfrac{A}{S} \\qquad Q=A \\cdot v\n$$\n\n+ $v$ : \u5e73\u5747\u6d41\u901f\n+ $n$ : \u7c97\u5ea6\u4fc2\u6570\n+ $R$ : \u52d5\u6c34\u534a\u5f84\n+ $I$ : \u6cb3\u5e8a\u52fe\u914d\n+ $A$ : \u6d41\u6c34\u65ad\u9762\u7a4d\n+ $S$ : \u6f64\u8fba\n+ $Q$ : \u6d41\u91cf\n\n\u6d41\u6c34\u65ad\u9762\u7a4d\u304a\u3088\u3073\u6f64\u8fba\u306f\uff0c\u6c34\u6df1\u306e\u95a2\u6570\u3068\u306a\u308b\u306e\u3067\uff0c\u6700\u521d\u306b\u6c34\u6df1$h$\uff08\u3082\u3057\u304f\u306f\u6c34\u4f4d\u6a19\u9ad8\uff09\u3092\u4eee\u5b9a\u3057\uff0c\u305d\u306e\u6c34\u6df1\u3067\u306e\u6d41\u4e0b\u91cf$Q$\u3092\u8a08\u7b97\u3059\u308b\u65b9\u6cd5\u304c\uff0c\u8a08\u7b97\u904e\u7a0b\u304c\u5358\u7d14\u3067\u3042\u308b\uff0e\n\n\n# \u5b9f\u884c\u7528\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\n\u5b9f\u884c\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\uff0c\u4ee5\u4e0b\u306e\uff13\u3064\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3044\u308b\uff0e\n\n+ py_eng_uniflow.py \uff1a \u4e0d\u7b49\u6d41\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\u672c\u4f53\n+ py_eng_uni_figHQ.py \uff1a \u6c34\u4f4d\u30fc\u6d41\u91cf\u66f2\u7dda\u63cf\u753b\n+ py_eng_uni_figsec.py \uff1a \u89e3\u6790\u65ad\u9762\u63cf\u753b\n\n\u5b9f\u884c\u7528\u30b9\u30af\u30ea\u30d7\u30c8\u672c\u6587\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\n```text:a_py_uni.txt\npython3 py_eng_uniflow.py inp_sec1.txt > out_PSHQ1.txt\n\npython3 py_eng_uni_figHQ.py out_PSHQ1.txt fig_PSHQ1.png\n\npython3 py_eng_uni_figsec.py inp_sec1.txt fig_sec1_PS.png n=0.04,i=0.001 79.4\n```\n\n# \u5165\u529b\u30c7\u30fc\u30bf\n1\u884c\u76ee\uff1a1\u5217\u76ee\u7c97\u5ea6\u4fc2\u6570$n$\uff0c2\u5217\u76ee\u6cb3\u5e8a\u52fe\u914d$I$\n2\u884c\u76ee\u4ee5\u964d\uff1a1\u5217\u76ee\u6cb3\u5e8ax\u5ea7\u6a19\uff08\u5de6\u5cb8\u304b\u3089\u53f3\u5cb8\u3078\uff09\uff0cy\u5ea7\u6a19\uff08\u6a19\u9ad8\uff09\n\n```text:inp_sec1.txt\n0.04 0.001\n-138 100\n-114  90\n -70  80\n -45  70\n -32  62\n   0  61.5\n  32  62\n  60  70\n  80  80\n  98  84\n 120  84\n```\n\n\n# \u51fa\u529b\u30c7\u30fc\u30bf\n\u51fa\u529b\u30c7\u30fc\u30bf\u4e26\u3073\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n\u7b49\u6d41\u89e3\u6790\u306e\u307f\u3067\u3042\u308c\u3070\uff0c\u6d41\u91cf\u3068\u6a19\u9ad8\u3082\u3057\u304f\u306f\u6c34\u6df1\u306e\u95a2\u4fc2\u304c\u308f\u304b\u308c\u3070\u826f\u3044\u304c\uff0c\u4e0d\u7b49\u6d41\u89e3\u6790\u306e\u5165\u529b\u6761\u4ef6\u4f5c\u6210\u306e\u76ee\u7684\u3082\u517c\u306d\uff0c\u6d41\u6c34\u65ad\u9762\u7a4d\uff0c\u6f64\u8fba\uff0c\u6c34\u9762\u5e45\u3082\u51fa\u529b\u3055\u305b\u3066\u3044\u308b\uff0e\u3061\u306a\u307f\u306b\u6c34\u9762\u5e45\u306f\u9650\u754c\u6c34\u6df1\u7b97\u5b9a\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3067\u3042\u308b\uff0e\n\n+ 1\u5217\u76ee\uff1a\u6d41\u91cf\n+ 2\u5217\u76ee\uff1a\u6c34\u4f4d\u6a19\u9ad8\n+ 3\u5217\u76ee\uff1a\u6c34\u6df1\n+ 4\u5217\u76ee\uff1a\u6d41\u6c34\u65ad\u9762\u7a4d\n+ 5\u5217\u76ee\uff1a\u6f64\u8fba\n+ 6\u5217\u76ee\uff1a\u6c34\u9762\u5e45\n\n\n```text:out_PSHQ1.txt\n         Q         WL          h          A          S        wsw\n     0.000     61.500      0.000      0.000      0.000      0.000\n     0.069     61.600      0.100      0.640     12.802     12.800\n     0.436     61.700      0.200      2.560     25.603     25.600\n     1.285     61.800      0.300      5.760     38.405     38.400\n     2.768     61.900      0.400     10.240     51.206     51.200\n     5.019     62.000      0.500     16.000     64.008     64.000\n     8.760     62.100      0.600     22.426     64.563     64.513\n..........      ..........\n```\n\n# \u7b49\u6d41\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\n\u30d7\u30ed\u30b0\u30e9\u30e0\u5185\u3067\uff0c\u65ad\u9762\u7a4d$A$\u3068\u6f64\u8fba$S$\u306e\u8a08\u7b97\u3092\u884c\u3063\u3066\u3044\u308b\uff0e\n\u3053\u308c\u306f\u4e0b\u56f3\u3092\u53c2\u7167\u3057\u3066\uff0c\u5de6\u5cb8\uff08\u5de6\u5074\uff09\u304b\u3089\uff0c\u5165\u529b\u3055\u308c\u305f\u5730\u5f62\u3092\u8868\u3059\u7dda\u5206\u3092\u8ffd\u3063\u3066\u3044\u304d\uff0c\u6307\u5b9a\u3057\u305f\u6a19\u9ad8\u30e9\u30a4\u30f3\uff08el\uff09\u3068\u5730\u5f62\u7dda\u306b\u56f2\u307e\u308c\u305f\u90e8\u5206\u306e\u9762\u7a4d\u304a\u3088\u3073\u5730\u5f62\u7dda\u9577\u3055\u3092\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\uff0e\n\n![fig_test.png](https://qiita-image-store.s3.amazonaws.com/0/129300/0878982a-00de-d2cf-67d2-c1fe10d1e022.png)\n\n\n\n```python:py_eng_uniflow.py\nimport numpy as np\nfrom math import *\nimport sys\nimport matplotlib.pyplot as plt\n\ndef INTERSEC(x1,y1,x2,y2,el):\n    xx=1.0e10\n    if 0.0<abs(y2-y1):\n        a=(y2-y1)/(x2-x1)\n        b=(x2*y1-x1*y2)/(x2-x1)\n        xx=(el-b)/a\n    return xx\n\n# Main routine\nparam=sys.argv\nfnameR=param[1]\n\n# Input data\nx=[]\ny=[]\nfin=open(fnameR,'r')\ntext=fin.readline()\ntext=text.strip()\ntext=text.split()\nrn=float(text[0]) # Manning roughness coefficient\ngi=float(text[1]) # Gradient of river bed\nwhile 1:\n    text=fin.readline()\n    if not text: break\n    text=text.strip()\n    text=text.split()\n    x=x+[float(text[0])]\n    y=y+[float(text[1])]\nfin.close()\nnn=len(x)\n\nprint('{0:>10s} {1:>10s} {2:>10s} {3:>10s} {4:>10s} {5:>10s}'.format('Q','WL','h','A','S','wsw'))\nymin=min(y)\nymax=max(y)\ndy=0.1\nyy=np.arange(ymin,ymax+dy,dy)\nfor el in yy:\n    S=0.0\n    A=0.0\n    xxl=0.0\n    xxr=0.0\n    for i in range(0,nn-1):\n        x1=x[i]\n        y1=y[i]\n        x2=x[i+1]\n        y2=y[i+1]\n        xx=INTERSEC(x1,y1,x2,y2,el)\n        dS=0.0\n        dA=0.0\n        if y1<el and y2<el:\n            dS=sqrt((x2-x1)**2+(y2-y1)**2)\n            dA=0.5*(2.0*el-y1-y2)*(x2-x1)\n        if x1<=xx and xx<=x2:\n            if y2<=el and el<=y1:\n                dS=sqrt((x2-xx)**2+(y2-el)**2)\n                dA=0.5*(x2-xx)*(el-y2)\n                xxl=xx\n            if y1<=el and el<=y2:\n                dS=sqrt((xx-x1)**2+(el-y1)**2)\n                dA=0.5*(xx-x1)*(el-y1)\n                xxr=xx\n        S=S+dS\n        A=A+dA\n    if 0.0<S:\n        R=A/S\n        v=1.0/rn*R**(2/3)*sqrt(gi)\n        Q=A*v\n    else:\n        R=0.0\n        v=0.0\n        Q=0.0\n    h=el-ymin\n    wsw=xxr-xxl\n    print('{0:10.3f} {1:10.3f} {2:10.3f} {3:10.3f} {4:10.3f} {5:10.3f}'.format(Q,el,h,A,S,wsw))\n```\n# \u6c34\u4f4d\u30fc\u6d41\u91cf\u66f2\u7dda\u63cf\u753b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u3053\u308c\u306f\uff0c\u6a19\u6e96\u7684\u306a\uff12\u6b21\u5143\u30b0\u30e9\u30d5\u4f5c\u6210\u306e\u624b\u9806\u306b\u5247\u3063\u3066\u3044\u308b\uff0e\n\n```python:py_eng_uni_figHQ.py\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport sys\n\ndef DINP(fnameR):\n    data=np.loadtxt(fnameR,skiprows=1,usecols=(0,1))\n    QQ=data[:,0]\n    EL=data[:,1]\n    return QQ,EL\n\n# Parameter setting\nparam=sys.argv\nfnameR=param[1]     # input filename\nfnameF=param[2]     # output image file name\n\nqmin=0.0;qmax=10000.0;dq=1000\nemin=60.0;emax=90.0;de=2.0\n# Input data\nQQ,EL=DINP(fnameR)\n# Plot\nfig=plt.figure()\nplt.plot(QQ,EL,color='black',lw=2.0,label='PS (n=0.04, i=0.001)')\nplt.xlabel('Discharge (m$^3$/s)')\nplt.ylabel('Elevation (EL.m)')\nplt.xlim(qmin,qmax)\nplt.ylim(emin,emax)\nplt.xticks(np.arange(qmin,qmax+dq,dq))\nplt.yticks(np.arange(emin,emax+de,de))\nplt.grid()\nplt.legend(shadow=True,loc='upper left',handlelength=3)\nplt.savefig(fnameF,dpi=200,, bbox_inches=\"tight\", pad_inches=0.2)\nplt.show()\nplt.close()\n```\n\n## \u51fa\u529b\u753b\u50cf\n\n![fig_PSHQ1.png](https://qiita-image-store.s3.amazonaws.com/0/129300/2918dbf9-e72c-1deb-2694-8866a8f9a705.png)\n\n\n# \u8a08\u7b97\u65ad\u9762\u63cf\u753b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u898b\u304b\u3051\u306e\u554f\u984c\u3067\u3042\u308b\u304c\uff0cfill_between\u3092\u7528\u3044\u3066\u6c34\u9762\u4e0b\u3092\u6c34\u8272\u3067\u5857\u308a\u3064\u3076\u3057\u3066\u3044\u308b\uff0e\n\n```python:py_eng_uni_figsec.py\nimport numpy as np\n#from math import *\nimport sys\nimport matplotlib.pyplot as plt\n\n# Main routine\nparam=sys.argv\nfnameR=param[1]     # input filename\nfnameF=param[2]     # output image file name\nstrt=param[3]       # graph title (strings)\nfwl=float(param[4]) # target flood water level\n\n# Input data\nx=[]\ny=[]\nfin=open(fnameR,'r')\ntext=fin.readline()\ntext=text.strip()\ntext=text.split()\nrn=float(text[0])\ngi=float(text[1])\nwhile 1:\n    text=fin.readline()\n    if not text: break\n    text=text.strip()\n    text=text.split()\n    x=x+[float(text[0])]\n    y=y+[float(text[1])]\nfin.close()\nxx=np.array(x)\nyy=np.array(y)\n\n# plot\nxmin=-150\nxmax=150.0\nymin=50.0\nymax=100\nfig = plt.figure()\nax=fig.add_subplot(111)\nax.plot(xx,yy,color='black',lw=1.0,label='ground surface')\nax.fill_between(xx,yy,fwl,where=yy<=fwl,facecolor='cyan',alpha=0.3,interpolate=True)\nax.text(0,fwl,'10,000 years flood (EL.'+str(fwl)+')',fontsize=10,color='black',ha='center',va='top')\nax.set_title(strt)\nax.set_xlabel('Distance (m)')\nax.set_ylabel('Elevation (EL.m)')\nax.set_xlim(xmin,xmax)\nax.set_ylim(ymin,ymax)\naspect=1.0*(ymax-ymin)/(xmax-xmin)*(ax.get_xlim()[1] - ax.get_xlim()[0]) / (ax.get_ylim()[1] - ax.get_ylim()[0])\nax.set_aspect(aspect)\nplt.savefig(fnameF,dpi=200,, bbox_inches=\"tight\", pad_inches=0.2)\nplt.show()\nplt.close()\n```\n\n## \u51fa\u529b\u753b\u50cf\n\n![fig_sec1_PS.png](https://qiita-image-store.s3.amazonaws.com/0/129300/bbf14e25-9e2e-8037-a1d4-1542ca27fca3.png)\n\n\n\n\u4ee5\u4e0a\n\n", "tags": ["Python", "matplotlib", "\u958b\u6c34\u8def", "\u4e0d\u7b49\u6d41\u89e3\u6790"]}