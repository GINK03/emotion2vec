{"context": "\n\nVAddy\u3068CSRF\u30c8\u30fc\u30af\u30f3\nVAddy\u306f\u8106\u5f31\u6027\u8a3a\u65ad\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u3001CSRF\u30c8\u30fc\u30af\u30f3\u3092\u6700\u65b0\u306e\u3082\u306e\u306b\u66f4\u65b0\u3057\u306a\u304c\u3089\u52d5\u4f5c\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u300c\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304cCSRF\u30c8\u30fc\u30af\u30f3\u304b\uff1f\u300d\u3092\u5224\u65ad\u3059\u308b\u30ed\u30b8\u30c3\u30af\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u8fd1\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u5f8c\u8ff0\uff09\u306b\u3064\u3044\u3066\u300cCSRF\u30c8\u30fc\u30af\u30f3\u3092\u6b63\u3057\u304f\u8a8d\u8b58\u3067\u304d\u306a\u3044\u300d\u3068\u3044\u3046\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u826f\u3044\u6a5f\u4f1a\u306a\u306e\u3067\u30e1\u30b8\u30e3\u30fc\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084CMS\u3092\u4e2d\u5fc3\u306bCSRF\u30c8\u30fc\u30af\u30f3\u306e\u5b9f\u88c5\u3092\u3056\u3063\u3068\u8ffd\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4e00\u89a7\u306b\u3057\u3066\u3082\u9762\u767d\u304f\u306a\u3044\u306e\u3067\u3001\u4eee\u60f3\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u5f62\u5f0f\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002GitHub\u4e0a\u3067\u8efd\u304f\u8ffd\u3063\u305f\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306a\u304b\u3063\u305f\u308a\u3001\u89e3\u91c8\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305d\u308c\u3067\u306f\u3001\u3069\u3046\u305e\u3002\n\nRuby on Rails\n\u91d1\u5e8a(\u4ee5\u4e0b\u3001\u91d1)\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u3088\u3046\u3053\u305d\u3002\u300d\nRoR\u300c\u3053\u3093\u306b\u3061\u306f\u300d\n\u91d1\u300c\u76f8\u5909\u308f\u3089\u305a\u30b7\u30a7\u30a2\u9ad8\u3044\u3088\u3046\u3067\u3059\u306d\u3002\u300d\nRoR\u300c\u306f\u3044\u3001\u304a\u304b\u3052\u3055\u307e\u3067\u3002\u3053\u306e\u9593\u306f\u30eb\u30de\u30f324\u6642\u9593\u8010\u4e45\u30ec\u30fc\u30b9 \u30a2\u30de\u306e\u90e8\u3067\u52dd\u5229\u3057\u307e\u3057\u305f\u3002\u300d\n\u91d1\u300c\u3055\u3063\u305d\u304f\u672c\u984c\u306a\u3093\u3067\u3059\u304c\u3001\u306a\u3093\u304b\u3042\u306a\u305f\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3001\u3061\u3087\u3063\u3068\u5909\u3067\u3059\u3088\u306d\u3002\u3066\u3044\u3046\u304b\u30012\u3064\u3042\u308a\u307e\u3059\u3088\u306d\uff1f\u300d\nRoR\u300c\u3055\u3059\u304c\u3001\u3088\u304f\u3054\u5b58\u77e5\u3067\u3059\u306d\u300d\n\u91d1\u300c\u3053\u3061\u3089\u304c\u3068\u308a\u3042\u3048\u305a\u624b\u5143\u306eRedmine\u304b\u3089\u6301\u3063\u3066\u304d\u305f\u4f8b\u306a\u3093\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305ameta\u30bf\u30b0\u306b\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u300d\n<meta name=\"csrf-param\" content=\"authenticity_token\" /> \n<meta name=\"csrf-token\" content=\"OGjn8n1qaV0(\u7565)lZKu4z3bkXY6Q==\" />\n\n\u91d1\u300c\u3055\u3089\u306b\u3001\u6b21\u306e\u3088\u3046\u306binput\u3068\u3057\u3066\u3082\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3044\u307e\u3059\u3088\u306d\u300d\n<input type=\"hidden\" name=\"authenticity_token\" value=\"qrH7NiMO(\u7565)f7B1YBg==\" />\n\nRoR\u300c\u305f\u3076\u3093\u3001JS\u3067\u30d8\u30c3\u30c0\u304b\u3089CSRF\u30c8\u30fc\u30af\u30f3\u3092\u9001\u308b\u5834\u5408\u3068\u3001\u5358\u306b\u30d5\u30a9\u30fc\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u3067\u9055\u3046\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3057\u304b\u3057\u305f\u3089\u9055\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u300d\n\u91d1\u300c\u3044\u304f\u3064\u304b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u898b\u307e\u3057\u305f\u304c\u3001RoR\u306e\u5b9f\u88c5\u306f\u975e\u5e38\u306b\u5909\u308f\u3063\u3066\u307e\u3059\u306d\u300d\nRoR\u300c\u307e\u3041\u3001\u57fa\u672c\u7684\u306b\u306f\u6df1\u304f\u8003\u3048\u305a\u306b\u7528\u610f\u3055\u308c\u305f\u4ed5\u7d44\u307f\u306b\u4e57\u3063\u304b\u3063\u3066\u304f\u308c\u308c\u3070\u3046\u307e\u304f\u52d5\u304f\u3093\u30672\u3064\u3042\u308b\u3053\u3068\u306f\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u300d\n\u91d1\u300cRails\u3060\u3051\u306b\uff1f\u300d\nRoR\u300cRails\u3060\u3051\u306b\u3002\u300d\n\u91d1\u300cBase64\u3063\u307d\u3044\u6587\u5b57\u5217\u3067\u3059\u306d\u3002\u300d\nRoR\u300c\u306f\u3044\u3002\u3053\u3053\u3089\u3078\u3093\u3067\u51e6\u7406\u3057\u3066\u307e\u3059\u300d\n      def real_csrf_token(session)\n        session[:_csrf_token] ||= SecureRandom.base64(AUTHENTICITY_TOKEN_LENGTH)\n        Base64.strict_decode64(session[:_csrf_token])\n      end\n\n\u91d1\u300c\u306a\u308b\u307b\u3069SecureRandom\u3067\u3059\u304b\u3002\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\nRoR\u300c\u306f\u3044\u3002\u4eca\u65e5\u306f\u547c\u3093\u3067\u3044\u305f\u3060\u3044\u3066\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\n\nOWASP CSRFGuard\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d\nOCG\u300c\u3069\u3046\u3082\u3001\u79c1\u306fCSRF\u5bfe\u7b56\u3060\u3051\u5c02\u9580\u3067\u3084\u3063\u3066\u307e\u3059\u3002\u4eca\u65e5\u306f\u547c\u3093\u3067\u3082\u3089\u3048\u3066\u3046\u308c\u3057\u3044\u3067\u3059\u3002\u300d\n\u91d1\u300c\u5b9f\u306fOCG\u3055\u3093\u306e\u3053\u3068\u306f\u3042\u307e\u308a\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001JPCERT\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306a\u3093\u304b\u3067\u3082\u7d39\u4ecb\u3055\u308c\u3066\u307e\u3059\u306d\u3002\u300d\nOCG\u300c\u4e00\u5fdcOWASP\u306a\u3093\u3067\u3001\u305d\u308c\u306a\u308a\u306b\u4eba\u306e\u76ee\u306b\u4ed8\u304f\u307f\u305f\u3044\u3067\u3059\u300d\n\u91d1\u300cOCG\u3055\u3093\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3069\u3046\u3084\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u300d\nOCG\u300c\u3044\u308f\u3086\u308bJavaEE\u306e\u30d5\u30a3\u30eb\u30bf\u306a\u3093\u3067\u3001Java\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306b\u6163\u308c\u3066\u3044\u308b\u4eba\u3060\u3063\u305f\u3089\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u300d\n\u91d1\u300c\u306a\u308b\u307b\u3069\u3002HTML\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308bCSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u3088\u3046\u3067\u3059\u306d\u3002\u300d\n<input type=\"hidden\" id=\"OWASP_CSRFTOKEN\" name=\"OWASP_CSRFTOKEN\" value=\"KBS8-DLOB-(\u7565)-39TX-I8DB-RB7Z\"/>\n\nOCG\u300c\u306f\u3044\u3002\u300d\n\u91d1\u300c\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306fUUID\u7531\u6765\u3068\u304b\u305d\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\nOCG\u300c\u3044\u3048\u3001\u306a\u3093\u3068\u306a\u304f\u305d\u308c\u3063\u307d\u3044\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3002\u51e6\u7406\u306f\u3053\u306e\u3078\u3093\u3067\u3084\u3063\u3066\u307e\u3059\u300d\n    public static String generateRandomId(SecureRandom sr, int len) {\n        StringBuilder sb = new StringBuilder();\n\n        for (int i = 1; i < len + 1; i++) {\n            int index = sr.nextInt(CHARSET.length);\n            char c = CHARSET[index];\n            sb.append(c);\n\n            if ((i % 4) == 0 && i != 0 && i < len) {\n                sb.append('-');\n            }\n        }\n\n        return sb.toString();\n    }\n\n\u91d1\u300c\u3053\u308c\u3001\u3076\u3063\u3061\u3083\u3051\u30cf\u30a4\u30d5\u30f3\u3044\u3089\u306a\u3044\u3067\u3059\u306d\u2026\u300d\nOCG\u300c\u5225\u306b\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u2026\u300d\n\u91d1\u300cSecureRandom\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u738b\u9053\u3067\u3059\u3088\u306d\u3002\u300d\nOCG\u300c\u306f\u3044\u3002Java\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u300d\n\u91d1\u300c\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u3084\u3059\u3044\u3093\u3067CSRF\u5bfe\u7b56\u306b\u8208\u5473\u304c\u3042\u308bJava\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u306f\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\u300d\nOCG\u300c\u3067\u3059\u306d\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\n\nLaravel\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u2026\u6c17\u3065\u304d\u307e\u3057\u305f\uff1f\u300d\nLrv\u300c\u3048\uff1f\u4f55\u304c\u3067\u3059\u304b\uff1f\u300d\n\u91d1\u300c\u5b9f\u306fVAddy\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306fLaravel\u306a\u3093\u3067\u3059\u3088\u3002\u300d\nLrv\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u306d\u3001\u3054\u5229\u7528\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u300d\n\u91d1\u300c\u3067\u306f\u3055\u3063\u305d\u304f\u672c\u984c\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3067\u3059\u304c\u3001Laravel\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u306d\u300d\n<input name=\"_token\" type=\"hidden\" value=\"TqMhR6ARyGz4OKC4GKvus9h8CTlvDWGzgDtt6yQV\">\n\nLrv\u300c\u306f\u3044\u3002\u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u306a\u5f62\u3067\u3057\u3087\uff1f\u300d\n\u91d1\u300c\u5b9f\u88c5\u306f\u3053\u306e\u3078\u3093\u3067\u3059\u306d\u3002\u300d\n    /**\n     * Regenerate the CSRF token value.\n     *\n     * @return void\n     */\n    public function regenerateToken()\n    {\n        $this->put('_token', Str::random(40));\n    }\n\n\u91d1\u300cPHP\u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3059\u304c\u3001Str\u30af\u30e9\u30b9\u306erandom\u95a2\u6570\u3068\u3044\u3046\u306e\u306f\u30bb\u30ad\u30e5\u30a2\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\nLrv\u300cStr\u30af\u30e9\u30b9\u306fPHP\u6a19\u6e96\u306b\u5b58\u5728\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3066\u3001Laravel\u306e\u72ec\u81ea\u5b9f\u88c5\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u5b9f\u969b\u306e\u5024\u306e\u751f\u6210\u306f\u3053\u3053\u304b\u3089PHP\u306e\u6a19\u6e96\u95a2\u6570\u3067\u3042\u308brandom_bytes\u3092\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u300d\n    /**\n     * Generate a more truly \"random\" alpha-numeric string.\n     *\n     * @param  int  $length\n     * @return string\n     */\n    public static function random($length = 16)\n    {\n        $string = '';\n        while (($len = strlen($string)) < $length) {\n            $size = $length - $len;\n            $bytes = random_bytes($size);\n            $string .= substr(str_replace(['/', '+', '='], '', base64_encode($bytes)), 0, $size);\n        }\n        return $string;\n    }\n\n\u91d1\u300c\u306a\u308b\u307b\u3069\u3001\u5b9f\u969b\u306b\u306fBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u5024\u306a\u306e\u306b\u3001=\u306a\u3069\u3092\u6d88\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u305d\u308c\u304c\u308f\u304b\u308a\u306b\u304f\u304f\u306a\u3063\u3066\u308b\u3093\u3067\u3059\u306d\u300d\nLrv\u300c\u306f\u3044\u3002\u300d\n\u91d1\u300c\u4e2d\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u306b\u308f\u3056\u308f\u3056-\u3092\u5165\u308c\u308b\u5b9f\u88c5\u3082\u3042\u308b\u306e\u3067\u3001\u306a\u304b\u306a\u304b\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\u300d\nLrv\u300c\u305d\u3046\u3044\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3093\u3067\u3059\u306d\u3002\u300d\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u4eca\u5f8c\u3082\u304a\u4e16\u8a71\u306b\u306a\u308a\u307e\u3059\u3002\u300d\nLrv\u300c\u4f55\u304b\u304a\u56f0\u308a\u306e\u70b9\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3044\u3064\u3067\u3082\u30d8\u30eb\u30d7\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u300d\n\nWordPress\n\u91d1\u300c\u5927\u5fa1\u6240\u306e\u30ef\u30fc\u30c9\u30d7\u30ec\u30b9\u3055\u3093\u306b\u304a\u8d8a\u3057\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3053\u3093\u306b\u3061\u306f\u3002\u300d\nWP\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d\n\u91d1\u300cWP\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u300d\n<input type=\"hidden\" id=\"_wpnonce\" name=\"_wpnonce\" value=\"5825e1f473\" />\n\n\u91d1\u300c_wpnonce\u306e_wp\u306f\u30ef\u30fc\u30c9\u30d7\u30ec\u30b9\u3068\u3044\u3046\u610f\u5473\u3001\u5f8c\u534a\u306f\u3044\u308f\u3086\u308b\"number used once\"\u306e\u7565\u306enonce\u3067\u3059\u3088\u306d\u300d\nWP\u300c\u306f\u3044\u300d\n\u91d1\u300c\u3068\u306a\u308b\u3068\u3001WP\u3067\u306fCSRF\u30c8\u30fc\u30af\u30f3\u306f\u30ef\u30f3\u30bf\u30a4\u30e0\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\nWP\u300c\u3044\u3048\u3001\u5b9f\u306f\u305d\u3046\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3001\u3053\u3061\u3089\u306e\u30da\u30fc\u30b8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u300d\n\u91d1\u300c\u5b9f\u88c5\u306f\u3053\u3061\u3089\u3067\u3059\u306d\u3002\u300d\n/**\n * Creates a cryptographic token tied to a specific action, user, user session,\n * and window of time.\n *\n * @since 2.0.3\n * @since 4.0.0 Session tokens were integrated with nonce creation\n *\n * @param string|int $action Scalar value to add context to the nonce.\n * @return string The token.\n */\nfunction wp_create_nonce($action = -1) {\n        $user = wp_get_current_user();\n        $uid = (int) $user->ID;\n        if ( ! $uid ) {\n                /** This filter is documented in wp-includes/pluggable.php */\n                $uid = apply_filters( 'nonce_user_logged_out', $uid, $action );\n        }\n        $token = wp_get_session_token();\n        $i = wp_nonce_tick();\n        return substr( wp_hash( $i . '|' . $action . '|' . $uid . '|' . $token, 'nonce' ), -12, 10 );\n}\nendif;\n\n\u91d1\u300c\u5358\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u96f0\u56f2\u6c17\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u300d\nWP\u300c\u306f\u3044\u3001wp_verify_nonce\u306e\u65b9\u3082\u8aad\u3093\u3067\u3082\u3089\u3048\u308c\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001nonce\u306e\u5024\u304b\u3089\u6709\u52b9\u671f\u9650\u306b\u3064\u3044\u3066\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u300d\n\u91d1\u300c\u305d\u3046\u306a\u3093\u3059\u304b\u2026\u300d\n\u91d1\u300c\u3067\u306f\u3001\u672c\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u58f2\u308c\u3063\u5b50\u3067\u5fd9\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u4eca\u65e5\u306f\u3053\u306e\u3078\u3093\u3067\u3002\u300d\nWP\u300c\u306f\u3044\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\n\nMovableType\n\u91d1\u300c\u3072\u3055\u3057\u3076\u308a\u306bPerl\u3092\u8aad\u307f\u307e\u3057\u305f\u300d\nMT\u300c\u3044\u304d\u306a\u308a\u5931\u793c\u306a\u65b9\u3067\u3059\u306d\u300d\n\u91d1\u300cMT\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u306f\u305f\u3076\u3093\u3053\u308c\u3067\u3059\u3088\u306d\u300d\n<input type=\"hidden\" name=\"magic_token\" value=\"7G2Pziy2jV1tRW70DcIiHzPJ7hzxu3Idk27WhwPO\" />\n\nMT\u300c\u306f\u3044\u3002magic_token\u3063\u3066\u3044\u3046\u540d\u524d\u3001\u3044\u3044\u3067\u3057\u3087\uff1f\u5b9f\u88c5\u306f\u3053\u306e\u3078\u3093\u3067\u3059\u3002\u300d\nsub magic_token {\n    my $auth = shift;\n    require MT::Util;\n    my $pw = $auth->column('password');\n    if ( $pw eq '(none)' ) {\n        $pw\n            = $auth->id . ';'\n            . $auth->name . ';'\n            . ( $auth->email || '' ) . ';'\n            . ( $auth->hint  || '' );\n    }\n    require MT::Util;\n    MT::Util::perl_sha1_digest_hex($pw);\n}\n\n\u91d1\u300c\u3053\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u9650\u308a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5143\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u306d\u3002\u5927\u4e08\u592b\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\nMT\u300cSHA1\u3067\u3059\u304c\u3001\u3053\u306e\u5024\u306f\u305d\u3082\u305d\u3082\u30e6\u30fc\u30b6\u306b\u3057\u304b\u898b\u3048\u306a\u3044\u3082\u306e\u306a\u306e\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u300d\n\u91d1\u300c\u306a\u308b\u307b\u3069\u300d\n\u91d1\u300c\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u3054\u6307\u6458\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306f\u9593\u9055\u3044\u3067\u3001CSRF\u5bfe\u7b56\u306emagic_token\u306e\u751f\u6210\u306f\u3053\u3061\u3089\u304c\u6b63\u89e3\u306e\u3088\u3046\u3067\u3059\u306d\u300d\nsub make_magic_token {\n    my @alpha = ( 'a' .. 'z', 'A' .. 'Z', 0 .. 9 );\n    my $token = join '', map $alpha[ rand @alpha ], 1 .. 40;\n    $token;\n}\n\nMT\u300c\u3057\u3063\u304b\u308a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3063\u3068\u666e\u6bb5\u304b\u3089Perl\u3092\u8aad\u307e\u306a\u3044\u3068\u300d\n\u91d1\u300c\u53cd\u7701\u3057\u3066\u307e\u3059\u300d\n\u91d1\u300c\u3067\u306f\u3001\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\nMT\u300c\u307e\u305f\u547c\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u300d\n\nCakePHP\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u300d\nCake\u300cVAddy\u30a8\u30f3\u30b8\u30cb\u30a2\u306e\u5e02\u5ddd\u3055\u3093\u3044\u307e\u3059\u304b\uff1f\u300d\n\u91d1\u300c\u3044\u3084\u3001\u5f7c\u306f\u4eca\u798f\u5ca1\u3067\u3059\u306d\u300d\nCake\u300c\u5e02\u5ddd\u3055\u3093\u3001id\u306fcakephper\u306a\u306e\u306b\u6700\u8fd1\u304a\u4f1a\u3044\u3057\u3066\u306a\u304f\u3066\u300d\n\u91d1\u300c\u305d\u3046\u3044\u3046\u5185\u8f2a\u30cd\u30bf\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066CSRF\u30c8\u30fc\u30af\u30f3\u306e\u8a71\u3092\u3057\u307e\u3057\u3087\u3046\u300d\n<input type=\"hidden\" name=\"_csrfToken\" value=\"58d2264fdee47c834b5f(\u7565)d07bd6808cb60919\"/>\n\n\u91d1\u300c\u540d\u524d\u304c_csrfToken\u3068\u306a\u3063\u3066\u3044\u3066\u975e\u5e38\u306b\u660e\u78ba\u3067\u3059\u306d\u300d\nCake\u300c\u306f\u3044\u300d\n\u91d1\u300c\u5024\u304c\u975e\u5e38\u306b\u9577\u3044\u3067\u3059\u3088\u306d\u300d\nCake\u300c\u5b9f\u969b\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u306f16\u30d0\u30a4\u30c8\u306a\u3093\u3067\u3059\u304c\u3001sha512\u3092\u4f7f\u3063\u3066128\u30d0\u30a4\u30c8\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u57cb\u3081\u8fbc\u3093\u3067\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306f\u3053\u306e\u3078\u3093\u3067\u3059\u3002\u300d\n    /**\n     * Set the cookie in the response.\n     *\n     * Also sets the request->params['_csrfToken'] so the newly minted\n     * token is available in the request data.\n     *\n     * @param \\Cake\\Network\\Request $request The request object.\n     * @param \\Cake\\Network\\Response $response The response object.\n     * @return void\n     */\n    protected function _setCookie(Request $request, Response $response)\n    {\n        $expiry = new Time($this->_config['expiry']);\n        $value = hash('sha512', Security::randomBytes(16), false);\n        $request->params['_csrfToken'] = $value;\n        $response->cookie([\n            'name' => $this->_config['cookieName'],\n            'value' => $value,\n            'expire' => $expiry->format('U'),\n            'path' => $request->webroot,\n            'secure' => $this->_config['secure'],\n            'httpOnly' => $this->_config['httpOnly'],\n        ]);\n    }\n\n\u91d1\u300cSecurity::randomBytes(16)\u3068\u3044\u3046\u306e\u306f\u5b9f\u969b\u306b\u306f\u4f55\u306e\u5b9f\u88c5\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\nCake\u300c\u57fa\u672c\u7684\u306b\u306fPHP\u6a19\u6e96\u306erandom_bytes\u3067\u3059\u3002\u3053\u3053\u3067\u3059\u306d\u300d\n\u91d1\u300cLaravel\u3068\u540c\u3058\u3067\u3059\u306d\u300d\nCake\u300cLaravel\u306e\u8a71\u306f\u304d\u304d\u305f\u304f\u306a\u3044\u300d\n\u91d1\u300c\u4eca\u65e5\u306f\u308f\u3056\u308f\u3056\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\nCake\u300c\u5e02\u5ddd\u3055\u3093\u306b\u3088\u308d\u3057\u304f\u300d\n\nDrupal\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u300d\nDpl\u300c\u3053\u3093\u306b\u3061\u306f\u300d\n\u91d1\u300c\u65e9\u901f\u3067\u3059\u304c\u3001CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u300d\n<input type=\"hidden\" name=\"form_token\" value=\"dQGBMO3QEJ5DjKakM1wSFlId9VLQ5HVBR9Ak0YqsVo0\" />\n\nDpl\u300c\u306f\u3044\u3001\u3053\u3053\u3089\u3078\u3093\u3092\u898b\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u300d\n  /**\n   * Generates a token based on $value, the user session, and the private key.\n   *\n   * The generated token is based on the session of the current user. Normally,\n   * anonymous users do not have a session, so the generated token will be\n   * different on every page request. To generate a token for users without a\n   * session, manually start a session prior to calling this function.\n   *\n   * @param string $value\n   *   (optional) An additional value to base the token on.\n   *\n   * @return string\n   *   A 43-character URL-safe token for validation, based on the token seed,\n   *   the hash salt provided by Settings::getHashSalt(), and the\n   *   'drupal_private_key' configuration variable.\n   *\n   * @see \\Drupal\\Core\\Site\\Settings::getHashSalt()\n   * @see \\Symfony\\Component\\HttpFoundation\\Session\\SessionInterface::start()\n   */\n  public function get($value = '') {\n    $seed = $this->sessionMetadata->getCsrfTokenSeed();\n    if (empty($seed)) {\n      $seed = Crypt::randomBytesBase64();\n      $this->sessionMetadata->setCsrfTokenSeed($seed);\n    }\n\n    return $this->computeToken($seed, $value);\n  }\n\n\u91d1\u300c\u305f\u307e\u306b\u5024\u306b\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u304c\u5165\u308a\u307e\u3059\u3088\u306d\uff1f\u300d\nDpl\u300c\u305d\u308c\u306f\u3053\u306e\u3078\u3093\u306e\u7f6e\u63db\u51e6\u7406\u306b\u3088\u308b\u3082\u306e\u3067\u3059\u306d\u3002\u300d\npublic static function hmacBase64($data, $key) {\n  // $data and $key being strings here is necessary to avoid empty string\n  // results of the hash function if they are not scalar values. As this\n  // function is used in security-critical contexts like token validation it\n  // is important that it never returns an empty string.\n  if (!is_scalar($data) || !is_scalar($key)) {\n    throw new \\InvalidArgumentException('Both parameters passed to \\Drupal\\Component\\Utility\\Crypt::hmacBase64 must be scalar values.');\n  }\n\n  $hmac = base64_encode(hash_hmac('sha256', $data, $key, TRUE));\n  // Modify the hmac so it's safe to use in URLs.\n  return str_replace(['+', '/', '='], ['-', '_', ''], $hmac);\n}\n\n\u91d1\u300cCrypt::randomBytesBase64\u306e\u4e2d\u3067\u547c\u3070\u308c\u308bstatic::randomBytes\u3068\u3044\u3046\u306e\u306f\u3001\u5b9f\u88c5\u306f\u3084\u306f\u308aPHP\u6a19\u6e96\u306erandom_bytes\u3067\u3059\u304b\uff1f\u300d\nDpl\u300c\u306f\u3044\u3001\u305d\u306e\u3068\u304a\u308a\u3067\u3059\u300d\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002Drupal\u3055\u3093\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u304b\u3089\u30cf\u30a4\u30d1\u30fc\u30ea\u30f3\u30af\u3067\u30bd\u30fc\u30b9\u3092\u8fbf\u308a\u3084\u3059\u304f\u3066\u3044\u3044\u3067\u3059\u306d\u3002\u300d\nDpl\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\u3067\u306f\u307e\u305f\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u300d\n\nJoomla\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d\nJml\u300c\u3053\u3093\u306b\u3061\u306f\u300d\n\u91d1\u300c\u6700\u8fd1\u5fd9\u3057\u305d\u3046\u3067\u3059\u306d\u300d\nJml\u300c\u7acb\u3066\u7d9a\u3051\u306b\u8106\u5f31\u6027\u304c\u51fa\u3061\u3083\u3063\u3066\u2026\u9762\u76ee\u306a\u3044\u3067\u3059\u300d\n\u91d1\u300c\u3042\u306ejform[id]\u306e\u3084\u3064\u3067\u3059\u304b\uff1f\u300d\nJml\u300c\u4eca\u65e5\u306f\u305d\u306e\u8a71\u306f\u3057\u305f\u304f\u306a\u3044\u3067\u3059\u3002CSRF\u30c8\u30fc\u30af\u30f3\u306e\u8a71\u3092\u3057\u307e\u3057\u3087\u3046\u300d\n\u91d1\u300cJoomla\u306e\u5834\u5408CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u300d\n<input type=\"hidden\" name=\"bbbb8070c831e37bbd16514ebc4911e0\" value=\"1\" />\n\n\u91d1\u300c\u3053\u308c\u306f\u4eca\u65e5\u304a\u8d8a\u3057\u3044\u305f\u3060\u3044\u305f\u30b2\u30b9\u30c8\u306e\u4e2d\u3067\u3082\u304b\u306a\u308a\u30ad\u30e3\u30e9\u304c\u7acb\u3063\u3066\u308b\u307b\u3046\u3067\u3059\u306d\u300d\nJml\u300c\u305d\u3046\u3067\u3057\u3087\u3046\u306d\u300d\n\u91d1\u300cCSRF\u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210\u306f\u3053\u306e\u3078\u3093\u3067\u3059\u306d\u3002\u547c\u3073\u51fa\u3057\u5143\u304c\u3053\u3061\u3089\u3067\u3059\u3002\u300d\n    /**\n     * Generate a random password\n     *\n     * @param   integer  $length  Length of the password to generate\n     *\n     * @return  string  Random Password\n     *\n     * @since   11.1\n     */\n    public static function genRandomPassword($length = 8)\n    {\n        $salt = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n        $base = strlen($salt);\n        $makepass = '';\n        /*\n         * Start with a cryptographic strength random string, then convert it to\n         * a string with the numeric base of the salt.\n         * Shift the base conversion on each character so the character\n         * distribution is even, and randomize the start shift so it's not\n         * predictable.\n         */\n        $random = JCrypt::genRandomBytes($length + 1);\n        $shift = ord($random[0]);\n        for ($i = 1; $i <= $length; ++$i)\n        {\n            $makepass .= $salt[($shift + ord($random[$i])) % $base];\n            $shift += ord($random[$i]);\n        }\n        return $makepass;\n    }\n\nJml\u300c\u4e0a\u8a18\u306eJCrypt::genRandomBytes\u3067\u306f\u3001\u6700\u7d42\u7684\u306b\u306fPHP\u6a19\u6e96\u95a2\u6570\u306erandom_bytes\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u300d\n\u91d1\u300cPHP\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3054\u304f\u666e\u901a\u306e\u5b9f\u88c5\u3067\u3059\u306d\u300d\n\u91d1\u300c\u2026\u5024\u304c1\u3067\u3059\u3088\u306d\u300d\nJml\u300c\u306f\u3044\u3001\u5024\u306f1\u3067\u3059\u300d\n\u91d1\u300c\u3084\u306f\u308a\u30011\u306b\u306f\u3053\u3060\u308f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u3088\u306d\uff1f2\u3058\u3083\u3060\u3081\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\nJml\u300c\u3044\u3044\u8cea\u554f\u3067\u3059\u306d\u300d\n\u91d1\u300c\u2026(\u30b4\u30af\u30ea)\u300d\nJml\u300c\u5b9f\u306f\u3054\u671f\u5f85\u306b\u6dfb\u3048\u305a\u6b8b\u5ff5\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3001\u5024\u304c2\u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u300d\n\u91d1\u300c\u672c\u5f53\u3067\u3059\u304b\uff1f\u3053\u308c\u306fJoomla\u754c\u3092\u63fa\u308b\u304c\u3059\u5927\u30b9\u30ad\u30e3\u30f3\u30c0\u30eb\u306a\u306e\u3067\u306f\uff1f\u300d\nJml\u300c\u3053\u306e\u3078\u3093\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u308f\u304b\u308b\u3088\u3046\u306b\u3001PHP\u3067\u30d6\u30fc\u30ea\u30a2\u30f3\u5024\u306b\u5909\u63db\u3057\u305f\u7d50\u679c\u304cfalse\u3067\u306a\u3051\u308c\u3070OK\u3067\u3059\u300d\n    /**\n     * Checks for a form token in the request.\n     *\n     * Use in conjunction with JHtml::_('form.token') or JSession::getFormToken.\n     *\n     * @param   string  $method  The request method in which to look for the token key.\n     *\n     * @return  boolean  True if found and valid, false otherwise.\n     *\n     * @since   12.1\n     */\n    public static function checkToken($method = 'post')\n    {\n        $token = self::getFormToken();\n        $app = JFactory::getApplication();\n        if (!$app->input->$method->get($token, '', 'alnum'))\n        {\n            if (JFactory::getSession()->isNew())\n            {\n                // Redirect to login screen.\n                $app->enqueueMessage(JText::_('JLIB_ENVIRONMENT_SESSION_EXPIRED'), 'warning');\n                $app->redirect(JRoute::_('index.php'));\n                return true;\n            }\n            return false;\n        }\n        return true;\n    }\n\n\u91d1\u300c\u306a\u308b\u307b\u3069\u30021\u30842\u3060\u3068OK\u3067\u3059\u304c\u30010\u3060\u3068\u30c0\u30e1\u305d\u3046\u3067\u3059\u306d\u300d\nJml\u300c0\u306ffalse\u306b\u306a\u3063\u3061\u3083\u3046\u3093\u3067\u30c0\u30e1\u3067\u3059\u300d\n\u91d1\u300c\u4eca\u65e5\u306f\u4e00\u756a\u6c17\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u3092\u76f4\u63a5\u8a0a\u304f\u3053\u3068\u304c\u3067\u304d\u3066\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\nJml\u300c\u305d\u308c\u3067\u306f\u5931\u793c\u3057\u307e\u3059\u300d\n\nSpring\n\u91d1\u300c\u6700\u5f8c\u306e\u30b2\u30b9\u30c8\u306eSpring\u3055\u3093\u306b\u304a\u8d8a\u3057\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u300d\nSpring\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u306f\u3058\u3081\u307e\u3057\u3066\u300d\n\u91d1\u300c\u5b9f\u306f\u3064\u3044\u5148\u65e5\u307e\u3067\u306eVAddy\u306fSpring\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3092\u9069\u5207\u306b\u6271\u3048\u305a\u3001\u304a\u5ba2\u69d8\u304c\u30b5\u30dd\u30fc\u30c8\u306b\u9023\u7d61\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u306e\u3067\u5bfe\u5fdc\u3067\u304d\u305f\u3093\u3067\u3059\u3088\u300d\nSpring\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u306d\u3002\u7279\u306b\u305d\u308c\u307b\u3069\u5909\u308f\u3063\u305f\u3053\u3068\u306f\u3084\u3063\u3066\u3044\u306a\u3044\u3064\u3082\u308a\u3067\u3059\u304c\u300d\n\u91d1\u300c\u304a\u3063\u3057\u3083\u308b\u3068\u304a\u308a\u3067\u3059\u306d\u3002CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u300d\n<input type=\"hidden\" name=\"_csrf\" value=\"2a0e43b3-f6c2-4d74-8e61-62765c71e1e2\"/>\n\n\u91d1\u300c\u540d\u524d\u3082\u975e\u5e38\u306b\u660e\u5feb\u306b_csrf\u3067\u3059\u3057\u3002\u5f53\u6642\u306eVAddy\u306f\u5024\u306b\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3093\u3067\u3044\u308b\u30b1\u30fc\u30b9\u3092\u3046\u307e\u304f\u8a8d\u8b58\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u300d\nSpring\u300c\u306a\u308b\u307b\u3069\u3002\u3067\u3082CSRF\u30c8\u30fc\u30af\u30f3\u306e\u5024\u304c\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3080\u30b1\u30fc\u30b9\u3063\u3066\u3001\u305d\u308c\u307b\u3069\u73cd\u3057\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\u300d\n\u91d1\u300c\u306f\u3044\u3001\u4eca\u56de\u306e\u8abf\u67fb\u3067\u3082\u660e\u3089\u304b\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u3068\u304a\u308a\u3067\u3059\u300d\n\u91d1\u300cSpring\u306e\u5834\u5408\u3001CSRF\u95a2\u4fc2\u306e\u30af\u30e9\u30b9\u3060\u3051\u3067\u5927\u91cf\u306b\u3042\u308a\u307e\u3059\u306d\u3002\u672c\u5f53\u306b\u3053\u3093\u306a\u306b\u5fc5\u8981\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\nSpring\u300cJava\u306e\u60aa\u3044\u7656\u3067\u3059\u300d\n\u91d1\u300c\u5b9f\u969b\u306b\u306f\u3069\u3053\u3067\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\nSpring\u300c\u3053\u3053\u3067\u3059\u300d\n    private String createNewToken() {\n        return UUID.randomUUID().toString();\n    }\n\n\u91d1\u300c\u306a\u308b\u307b\u3069UUID\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\u30af\u30e9\u30b9\u306f12\u500b\u3082\u3042\u308b\u306e\u306b\u300d\nSpring\u300c\u307e\u3041\u30af\u30e9\u30b9\u3058\u3083\u306a\u304f\u3066\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3082\u3042\u308b\u3093\u3067\u3059\u3051\u3069\u306d\u300d\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\nSpring\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\n## VAddy\u3068CSRF\u30c8\u30fc\u30af\u30f3\n[VAddy](https://vaddy.net/ja/)\u306f\u8106\u5f31\u6027\u8a3a\u65ad\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u3001CSRF\u30c8\u30fc\u30af\u30f3\u3092\u6700\u65b0\u306e\u3082\u306e\u306b\u66f4\u65b0\u3057\u306a\u304c\u3089\u52d5\u4f5c\u3057\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u300c\u3069\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304cCSRF\u30c8\u30fc\u30af\u30f3\u304b\uff1f\u300d\u3092\u5224\u65ad\u3059\u308b\u30ed\u30b8\u30c3\u30af\u304c\u5b58\u5728\u3057\u3066\u3044\u307e\u3059\u3002\u6700\u8fd1\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\uff08\u5f8c\u8ff0\uff09\u306b\u3064\u3044\u3066\u300cCSRF\u30c8\u30fc\u30af\u30f3\u3092\u6b63\u3057\u304f\u8a8d\u8b58\u3067\u304d\u306a\u3044\u300d\u3068\u3044\u3046\u30d0\u30b0\u3092\u4fee\u6b63\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u826f\u3044\u6a5f\u4f1a\u306a\u306e\u3067\u30e1\u30b8\u30e3\u30fc\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3084CMS\u3092\u4e2d\u5fc3\u306bCSRF\u30c8\u30fc\u30af\u30f3\u306e\u5b9f\u88c5\u3092\u3056\u3063\u3068\u8ffd\u3063\u3066\u307f\u307e\u3057\u305f\u3002\u4e00\u89a7\u306b\u3057\u3066\u3082\u9762\u767d\u304f\u306a\u3044\u306e\u3067\u3001\u4eee\u60f3\u30a4\u30f3\u30bf\u30d3\u30e5\u30fc\u5f62\u5f0f\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002GitHub\u4e0a\u3067\u8efd\u304f\u8ffd\u3063\u305f\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306a\u304b\u3063\u305f\u308a\u3001\u89e3\u91c8\u304c\u9593\u9055\u3063\u3066\u3044\u308b\u7b87\u6240\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u305d\u308c\u3067\u306f\u3001\u3069\u3046\u305e\u3002\n\n\n## Ruby on Rails\n\n\u91d1\u5e8a(\u4ee5\u4e0b\u3001\u91d1)\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u3088\u3046\u3053\u305d\u3002\u300d\n**RoR\u300c\u3053\u3093\u306b\u3061\u306f\u300d**\n\n\u91d1\u300c\u76f8\u5909\u308f\u3089\u305a\u30b7\u30a7\u30a2\u9ad8\u3044\u3088\u3046\u3067\u3059\u306d\u3002\u300d\n**RoR\u300c\u306f\u3044\u3001\u304a\u304b\u3052\u3055\u307e\u3067\u3002\u3053\u306e\u9593\u306f[\u30eb\u30de\u30f324\u6642\u9593\u8010\u4e45\u30ec\u30fc\u30b9 \u30a2\u30de\u306e\u90e8\u3067\u52dd\u5229](https://tech.a-listers.jp/2014/06/16/dhh-won-lemans/)\u3057\u307e\u3057\u305f\u3002\u300d**\n\n\u91d1\u300c\u3055\u3063\u305d\u304f\u672c\u984c\u306a\u3093\u3067\u3059\u304c\u3001\u306a\u3093\u304b\u3042\u306a\u305f\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3001\u3061\u3087\u3063\u3068\u5909\u3067\u3059\u3088\u306d\u3002\u3066\u3044\u3046\u304b\u30012\u3064\u3042\u308a\u307e\u3059\u3088\u306d\uff1f\u300d\n**RoR\u300c\u3055\u3059\u304c\u3001\u3088\u304f\u3054\u5b58\u77e5\u3067\u3059\u306d\u300d**\n\n\u91d1\u300c\u3053\u3061\u3089\u304c\u3068\u308a\u3042\u3048\u305a\u624b\u5143\u306eRedmine\u304b\u3089\u6301\u3063\u3066\u304d\u305f\u4f8b\u306a\u3093\u3067\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305ameta\u30bf\u30b0\u306b\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3042\u308a\u307e\u3059\u3002\u300d\n\n```html\n<meta name=\"csrf-param\" content=\"authenticity_token\" /> \n<meta name=\"csrf-token\" content=\"OGjn8n1qaV0(\u7565)lZKu4z3bkXY6Q==\" />\n```\n\n\u91d1\u300c\u3055\u3089\u306b\u3001\u6b21\u306e\u3088\u3046\u306binput\u3068\u3057\u3066\u3082\u305d\u308c\u3063\u307d\u3044\u306e\u304c\u3044\u307e\u3059\u3088\u306d\u300d\n\n```html\n<input type=\"hidden\" name=\"authenticity_token\" value=\"qrH7NiMO(\u7565)f7B1YBg==\" />\n```\n\n**RoR\u300c\u305f\u3076\u3093\u3001JS\u3067\u30d8\u30c3\u30c0\u304b\u3089CSRF\u30c8\u30fc\u30af\u30f3\u3092\u9001\u308b\u5834\u5408\u3068\u3001\u5358\u306b\u30d5\u30a9\u30fc\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u304d\u3067\u9055\u3046\u3093\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3057\u304b\u3057\u305f\u3089\u9055\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u300d**\n\n\u91d1\u300c\u3044\u304f\u3064\u304b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u898b\u307e\u3057\u305f\u304c\u3001RoR\u306e\u5b9f\u88c5\u306f\u975e\u5e38\u306b\u5909\u308f\u3063\u3066\u307e\u3059\u306d\u300d\n**RoR\u300c\u307e\u3041\u3001\u57fa\u672c\u7684\u306b\u306f\u6df1\u304f\u8003\u3048\u305a\u306b\u7528\u610f\u3055\u308c\u305f\u4ed5\u7d44\u307f\u306b\u4e57\u3063\u304b\u3063\u3066\u304f\u308c\u308c\u3070\u3046\u307e\u304f\u52d5\u304f\u3093\u30672\u3064\u3042\u308b\u3053\u3068\u306f\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u300d**\n\n\u91d1\u300cRails\u3060\u3051\u306b\uff1f\u300d\n**RoR\u300cRails\u3060\u3051\u306b\u3002\u300d**\n\n\u91d1\u300cBase64\u3063\u307d\u3044\u6587\u5b57\u5217\u3067\u3059\u306d\u3002\u300d\n**RoR\u300c\u306f\u3044\u3002[\u3053\u3053](https://github.com/rails/rails/blob/60c6b538170ce35cc8ff8382bef2f082868b4b09/actionpack/lib/action_controller/metal/request_forgery_protection.rb#L368)\u3089\u3078\u3093\u3067\u51e6\u7406\u3057\u3066\u307e\u3059\u300d**\n\n```ruby\n      def real_csrf_token(session)\n        session[:_csrf_token] ||= SecureRandom.base64(AUTHENTICITY_TOKEN_LENGTH)\n        Base64.strict_decode64(session[:_csrf_token])\n      end\n```\n\n\u91d1\u300c\u306a\u308b\u307b\u3069SecureRandom\u3067\u3059\u304b\u3002\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\n**RoR\u300c\u306f\u3044\u3002\u4eca\u65e5\u306f\u547c\u3093\u3067\u3044\u305f\u3060\u3044\u3066\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d**\n\n\n## OWASP CSRFGuard\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d\n**OCG\u300c\u3069\u3046\u3082\u3001\u79c1\u306fCSRF\u5bfe\u7b56\u3060\u3051\u5c02\u9580\u3067\u3084\u3063\u3066\u307e\u3059\u3002\u4eca\u65e5\u306f\u547c\u3093\u3067\u3082\u3089\u3048\u3066\u3046\u308c\u3057\u3044\u3067\u3059\u3002\u300d**\n\n\u91d1\u300c\u5b9f\u306fOCG\u3055\u3093\u306e\u3053\u3068\u306f\u3042\u307e\u308a\u77e5\u3089\u306a\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001[JPCERT\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://www.jpcert.or.jp/securecoding/AntiCSRF-201510.pdf)\u306a\u3093\u304b\u3067\u3082\u7d39\u4ecb\u3055\u308c\u3066\u307e\u3059\u306d\u3002\u300d\n**OCG\u300c\u4e00\u5fdcOWASP\u306a\u3093\u3067\u3001\u305d\u308c\u306a\u308a\u306b\u4eba\u306e\u76ee\u306b\u4ed8\u304f\u307f\u305f\u3044\u3067\u3059\u300d**\n\n\u91d1\u300cOCG\u3055\u3093\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3069\u3046\u3084\u308c\u3070\u3088\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u300d\n**OCG\u300c\u3044\u308f\u3086\u308bJavaEE\u306e\u30d5\u30a3\u30eb\u30bf\u306a\u3093\u3067\u3001Java\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8\u306b\u6163\u308c\u3066\u3044\u308b\u4eba\u3060\u3063\u305f\u3089\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u300d**\n\n\u91d1\u300c\u306a\u308b\u307b\u3069\u3002HTML\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308bCSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u306e\u3088\u3046\u3067\u3059\u306d\u3002\u300d\n\n```html\n<input type=\"hidden\" id=\"OWASP_CSRFTOKEN\" name=\"OWASP_CSRFTOKEN\" value=\"KBS8-DLOB-(\u7565)-39TX-I8DB-RB7Z\"/>\n```\n\n**OCG\u300c\u306f\u3044\u3002\u300d**\n\n\u91d1\u300c\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3093\u3067\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306fUUID\u7531\u6765\u3068\u304b\u305d\u3046\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\n**OCG\u300c\u3044\u3048\u3001\u306a\u3093\u3068\u306a\u304f\u305d\u308c\u3063\u307d\u3044\u304b\u306a\uff1f\u3068\u601d\u3063\u3066\u3002\u51e6\u7406\u306f[\u3053\u306e\u3078\u3093](https://github.com/esheri3/OWASP-CSRFGuard/blob/master/csrfguard/src/main/java/org/owasp/csrfguard/util/RandomGenerator.java#L57)\u3067\u3084\u3063\u3066\u307e\u3059\u300d**\n\n```Java\n\tpublic static String generateRandomId(SecureRandom sr, int len) {\n\t\tStringBuilder sb = new StringBuilder();\n\n\t\tfor (int i = 1; i < len + 1; i++) {\n\t\t\tint index = sr.nextInt(CHARSET.length);\n\t\t\tchar c = CHARSET[index];\n\t\t\tsb.append(c);\n\n\t\t\tif ((i % 4) == 0 && i != 0 && i < len) {\n\t\t\t\tsb.append('-');\n\t\t\t}\n\t\t}\n\n\t\treturn sb.toString();\n\t}\n```\n\n\u91d1\u300c\u3053\u308c\u3001\u3076\u3063\u3061\u3083\u3051\u30cf\u30a4\u30d5\u30f3\u3044\u3089\u306a\u3044\u3067\u3059\u306d\u2026\u300d\n**OCG\u300c\u5225\u306b\u3044\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u304b\u2026\u300d**\n\n\u91d1\u300cSecureRandom\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u738b\u9053\u3067\u3059\u3088\u306d\u3002\u300d\n**OCG\u300c\u306f\u3044\u3002Java\u306e\u5b9f\u88c5\u306f\u3053\u308c\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u304c\u591a\u3044\u3068\u601d\u3044\u307e\u3059\u300d**\n\n\u91d1\u300c\u30b7\u30f3\u30d7\u30eb\u306a\u5b9f\u88c5\u3067\u30b3\u30fc\u30c9\u3092\u8aad\u307f\u3084\u3059\u3044\u3093\u3067CSRF\u5bfe\u7b56\u306b\u8208\u5473\u304c\u3042\u308bJava\u30d7\u30ed\u30b0\u30e9\u30de\u306b\u306f\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\u300d\n**OCG\u300c\u3067\u3059\u306d\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d**\n\n\n## Laravel\n\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u2026\u6c17\u3065\u304d\u307e\u3057\u305f\uff1f\u300d\n**Lrv\u300c\u3048\uff1f\u4f55\u304c\u3067\u3059\u304b\uff1f\u300d**\n\n\u91d1\u300c\u5b9f\u306fVAddy\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u306fLaravel\u306a\u3093\u3067\u3059\u3088\u3002\u300d\n**Lrv\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u306d\u3001\u3054\u5229\u7528\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u300d**\n\n\u91d1\u300c\u3067\u306f\u3055\u3063\u305d\u304f\u672c\u984c\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3067\u3059\u304c\u3001Laravel\u3067\u306f\u6b21\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u306d\u300d\n\n```html\n<input name=\"_token\" type=\"hidden\" value=\"TqMhR6ARyGz4OKC4GKvus9h8CTlvDWGzgDtt6yQV\">\n```\n\n**Lrv\u300c\u306f\u3044\u3002\u30aa\u30fc\u30bd\u30c9\u30c3\u30af\u30b9\u306a\u5f62\u3067\u3057\u3087\uff1f\u300d**\n\n\u91d1\u300c\u5b9f\u88c5\u306f[\u3053\u306e\u3078\u3093](https://github.com/illuminate/session/blob/master/Store.php#L700)\u3067\u3059\u306d\u3002\u300d\n\n```php\n    /**\n     * Regenerate the CSRF token value.\n     *\n     * @return void\n     */\n    public function regenerateToken()\n    {\n        $this->put('_token', Str::random(40));\n    }\n```\n\n\n\u91d1\u300cPHP\u3042\u307e\u308a\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3059\u304c\u3001Str\u30af\u30e9\u30b9\u306erandom\u95a2\u6570\u3068\u3044\u3046\u306e\u306f\u30bb\u30ad\u30e5\u30a2\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\n**Lrv\u300cStr\u30af\u30e9\u30b9\u306fPHP\u6a19\u6e96\u306b\u5b58\u5728\u3059\u308b\u308f\u3051\u3067\u306f\u306a\u304f\u3066\u3001Laravel\u306e\u72ec\u81ea\u5b9f\u88c5\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\u5b9f\u969b\u306e\u5024\u306e\u751f\u6210\u306f[\u3053\u3053](https://github.com/illuminate/support/blob/master/Str.php#L230)\u304b\u3089PHP\u306e\u6a19\u6e96\u95a2\u6570\u3067\u3042\u308brandom_bytes\u3092\u547c\u3093\u3067\u3044\u307e\u3059\u3002\u300d**\n\n```php\n    /**\n     * Generate a more truly \"random\" alpha-numeric string.\n     *\n     * @param  int  $length\n     * @return string\n     */\n    public static function random($length = 16)\n    {\n        $string = '';\n        while (($len = strlen($string)) < $length) {\n            $size = $length - $len;\n            $bytes = random_bytes($size);\n            $string .= substr(str_replace(['/', '+', '='], '', base64_encode($bytes)), 0, $size);\n        }\n        return $string;\n    }\n```\n\n\u91d1\u300c\u306a\u308b\u307b\u3069\u3001\u5b9f\u969b\u306b\u306fBase64\u30a8\u30f3\u30b3\u30fc\u30c9\u3057\u305f\u5024\u306a\u306e\u306b\u3001=\u306a\u3069\u3092\u6d88\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5c11\u3057\u305d\u308c\u304c\u308f\u304b\u308a\u306b\u304f\u304f\u306a\u3063\u3066\u308b\u3093\u3067\u3059\u306d\u300d\n**Lrv\u300c\u306f\u3044\u3002\u300d**\n\n\u91d1\u300c\u4e2d\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u306b\u308f\u3056\u308f\u3056-\u3092\u5165\u308c\u308b\u5b9f\u88c5\u3082\u3042\u308b\u306e\u3067\u3001\u306a\u304b\u306a\u304b\u8208\u5473\u6df1\u3044\u3067\u3059\u3002\u300d\n**Lrv\u300c\u305d\u3046\u3044\u3046\u65b9\u3082\u3044\u3089\u3063\u3057\u3083\u308b\u3093\u3067\u3059\u306d\u3002\u300d**\n\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u4eca\u5f8c\u3082\u304a\u4e16\u8a71\u306b\u306a\u308a\u307e\u3059\u3002\u300d\n**Lrv\u300c\u4f55\u304b\u304a\u56f0\u308a\u306e\u70b9\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3044\u3064\u3067\u3082\u30d8\u30eb\u30d7\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u300d**\n\n\n## WordPress\n\u91d1\u300c\u5927\u5fa1\u6240\u306e\u30ef\u30fc\u30c9\u30d7\u30ec\u30b9\u3055\u3093\u306b\u304a\u8d8a\u3057\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3053\u3093\u306b\u3061\u306f\u3002\u300d\n**WP\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d**\n\n\u91d1\u300cWP\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u306d\u300d\n\n```html\n<input type=\"hidden\" id=\"_wpnonce\" name=\"_wpnonce\" value=\"5825e1f473\" />\n```\n\n\u91d1\u300c_wpnonce\u306e_wp\u306f\u30ef\u30fc\u30c9\u30d7\u30ec\u30b9\u3068\u3044\u3046\u610f\u5473\u3001\u5f8c\u534a\u306f\u3044\u308f\u3086\u308b\"number used once\"\u306e\u7565\u306enonce\u3067\u3059\u3088\u306d\u300d\n**WP\u300c\u306f\u3044\u300d**\n\n\u91d1\u300c\u3068\u306a\u308b\u3068\u3001WP\u3067\u306fCSRF\u30c8\u30fc\u30af\u30f3\u306f\u30ef\u30f3\u30bf\u30a4\u30e0\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\n**WP\u300c\u3044\u3048\u3001\u5b9f\u306f\u305d\u3046\u3067\u306f\u306a\u3044\u3067\u3059\u3002\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3001[\u3053\u3061\u3089\u306e\u30da\u30fc\u30b8](https://codex.wordpress.org/WordPress_Nonces)\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3059\u307f\u307e\u305b\u3093\u300d**\n\n\u91d1\u300c\u5b9f\u88c5\u306f[\u3053\u3061\u3089](https://core.trac.wordpress.org/browser/tags/4.7/src/wp-includes/pluggable.php#L1905)\u3067\u3059\u306d\u3002\u300d\n\n```php\n/**\n * Creates a cryptographic token tied to a specific action, user, user session,\n * and window of time.\n *\n * @since 2.0.3\n * @since 4.0.0 Session tokens were integrated with nonce creation\n *\n * @param string|int $action Scalar value to add context to the nonce.\n * @return string The token.\n */\nfunction wp_create_nonce($action = -1) {\n        $user = wp_get_current_user();\n        $uid = (int) $user->ID;\n        if ( ! $uid ) {\n                /** This filter is documented in wp-includes/pluggable.php */\n                $uid = apply_filters( 'nonce_user_logged_out', $uid, $action );\n        }\n        $token = wp_get_session_token();\n        $i = wp_nonce_tick();\n        return substr( wp_hash( $i . '|' . $action . '|' . $uid . '|' . $token, 'nonce' ), -12, 10 );\n}\nendif;\n```\n\n\u91d1\u300c\u5358\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u96f0\u56f2\u6c17\u3067\u306f\u306a\u3044\u3067\u3059\u306d\u300d\n**WP\u300c\u306f\u3044\u3001[wp_verify_nonce](https://core.trac.wordpress.org/browser/trunk/src/wp-includes/pluggable.php#L1842)\u306e\u65b9\u3082\u8aad\u3093\u3067\u3082\u3089\u3048\u308c\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001nonce\u306e\u5024\u304b\u3089\u6709\u52b9\u671f\u9650\u306b\u3064\u3044\u3066\u3082\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u307e\u3059\u300d**\n\u91d1\u300c\u305d\u3046\u306a\u3093\u3059\u304b\u2026\u300d\n\n\u91d1\u300c\u3067\u306f\u3001\u672c\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u58f2\u308c\u3063\u5b50\u3067\u5fd9\u3057\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u4eca\u65e5\u306f\u3053\u306e\u3078\u3093\u3067\u3002\u300d\n**WP\u300c\u306f\u3044\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d**\n\n\n## MovableType\n\u91d1\u300c\u3072\u3055\u3057\u3076\u308a\u306bPerl\u3092\u8aad\u307f\u307e\u3057\u305f\u300d\n**MT\u300c\u3044\u304d\u306a\u308a\u5931\u793c\u306a\u65b9\u3067\u3059\u306d\u300d**\n\n\u91d1\u300cMT\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u306f\u305f\u3076\u3093\u3053\u308c\u3067\u3059\u3088\u306d\u300d\n\n```html\n<input type=\"hidden\" name=\"magic_token\" value=\"7G2Pziy2jV1tRW70DcIiHzPJ7hzxu3Idk27WhwPO\" />\n```\n\n**MT\u300c\u306f\u3044\u3002magic_token\u3063\u3066\u3044\u3046\u540d\u524d\u3001\u3044\u3044\u3067\u3057\u3087\uff1f\u5b9f\u88c5\u306f[\u3053\u306e\u3078\u3093](https://github.com/movabletype/movabletype/blob/master/lib/MT/BasicAuthor.pm#L73)\u3067\u3059\u3002\u300d**\n\n```perl\nsub magic_token {\n    my $auth = shift;\n    require MT::Util;\n    my $pw = $auth->column('password');\n    if ( $pw eq '(none)' ) {\n        $pw\n            = $auth->id . ';'\n            . $auth->name . ';'\n            . ( $auth->email || '' ) . ';'\n            . ( $auth->hint  || '' );\n    }\n    require MT::Util;\n    MT::Util::perl_sha1_digest_hex($pw);\n}\n```\n\n\u91d1\u300c\u3053\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u9650\u308a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5143\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u306d\u3002\u5927\u4e08\u592b\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\n**MT\u300cSHA1\u3067\u3059\u304c\u3001\u3053\u306e\u5024\u306f\u305d\u3082\u305d\u3082\u30e6\u30fc\u30b6\u306b\u3057\u304b\u898b\u3048\u306a\u3044\u3082\u306e\u306a\u306e\u3067\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u300d**\n\u91d1\u300c\u306a\u308b\u307b\u3069\u300d\n\n\u91d1\u300c\u30b3\u30e1\u30f3\u30c8\u6b04\u3067\u3054\u6307\u6458\u9802\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306f\u9593\u9055\u3044\u3067\u3001CSRF\u5bfe\u7b56\u306emagic_token\u306e\u751f\u6210\u306f[\u3053\u3061\u3089](https://github.com/movabletype/movabletype/blob/master/lib/MT/App.pm##L1431-L1435)\u304c\u6b63\u89e3\u306e\u3088\u3046\u3067\u3059\u306d\u300d\n\n```perl\nsub make_magic_token {\n    my @alpha = ( 'a' .. 'z', 'A' .. 'Z', 0 .. 9 );\n    my $token = join '', map $alpha[ rand @alpha ], 1 .. 40;\n    $token;\n}\n```\n\n**MT\u300c\u3057\u3063\u304b\u308a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3063\u3068\u666e\u6bb5\u304b\u3089Perl\u3092\u8aad\u307e\u306a\u3044\u3068\u300d**\n\u91d1\u300c\u53cd\u7701\u3057\u3066\u307e\u3059\u300d\n\n\u91d1\u300c\u3067\u306f\u3001\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\n**MT\u300c\u307e\u305f\u547c\u3093\u3067\u304f\u3060\u3055\u3044\u3002\u300d**\n\n\n## CakePHP\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u300d\n**Cake\u300cVAddy\u30a8\u30f3\u30b8\u30cb\u30a2\u306e[\u5e02\u5ddd\u3055\u3093](https://twitter.com/cakephper)\u3044\u307e\u3059\u304b\uff1f\u300d**\n\u91d1\u300c\u3044\u3084\u3001\u5f7c\u306f\u4eca\u798f\u5ca1\u3067\u3059\u306d\u300d\n**Cake\u300c\u5e02\u5ddd\u3055\u3093\u3001id\u306fcakephper\u306a\u306e\u306b\u6700\u8fd1\u304a\u4f1a\u3044\u3057\u3066\u306a\u304f\u3066\u300d**\n\u91d1\u300c\u305d\u3046\u3044\u3046\u5185\u8f2a\u30cd\u30bf\u306f\u7f6e\u3044\u3066\u304a\u3044\u3066CSRF\u30c8\u30fc\u30af\u30f3\u306e\u8a71\u3092\u3057\u307e\u3057\u3087\u3046\u300d\n\n```html\n<input type=\"hidden\" name=\"_csrfToken\" value=\"58d2264fdee47c834b5f(\u7565)d07bd6808cb60919\"/>\n```\n\n\u91d1\u300c\u540d\u524d\u304c_csrfToken\u3068\u306a\u3063\u3066\u3044\u3066\u975e\u5e38\u306b\u660e\u78ba\u3067\u3059\u306d\u300d\n**Cake\u300c\u306f\u3044\u300d**\n\n\u91d1\u300c\u5024\u304c\u975e\u5e38\u306b\u9577\u3044\u3067\u3059\u3088\u306d\u300d\n**Cake\u300c\u5b9f\u969b\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u306f16\u30d0\u30a4\u30c8\u306a\u3093\u3067\u3059\u304c\u3001sha512\u3092\u4f7f\u3063\u3066128\u30d0\u30a4\u30c8\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u57cb\u3081\u8fbc\u3093\u3067\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306f[\u3053\u306e\u3078\u3093](https://github.com/cakephp/cakephp/blob/f6e5cbb124fbd3f45870b3123c21a83bbfd987b4/src/Controller/Component/CsrfComponent.php#L128)\u3067\u3059\u3002\u300d**\n\n```php\n    /**\n     * Set the cookie in the response.\n     *\n     * Also sets the request->params['_csrfToken'] so the newly minted\n     * token is available in the request data.\n     *\n     * @param \\Cake\\Network\\Request $request The request object.\n     * @param \\Cake\\Network\\Response $response The response object.\n     * @return void\n     */\n    protected function _setCookie(Request $request, Response $response)\n    {\n        $expiry = new Time($this->_config['expiry']);\n        $value = hash('sha512', Security::randomBytes(16), false);\n        $request->params['_csrfToken'] = $value;\n        $response->cookie([\n            'name' => $this->_config['cookieName'],\n            'value' => $value,\n            'expire' => $expiry->format('U'),\n            'path' => $request->webroot,\n            'secure' => $this->_config['secure'],\n            'httpOnly' => $this->_config['httpOnly'],\n        ]);\n    }\n```\n\n\u91d1\u300cSecurity::randomBytes(16)\u3068\u3044\u3046\u306e\u306f\u5b9f\u969b\u306b\u306f\u4f55\u306e\u5b9f\u88c5\u306a\u3093\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\n**Cake\u300c\u57fa\u672c\u7684\u306b\u306fPHP\u6a19\u6e96\u306erandom_bytes\u3067\u3059\u3002[\u3053\u3053](https://github.com/cakephp/cakephp/blob/df1b9b8aa75ece32dbe5e5343a249f3058ba1f3f/src/Utility/Security.php#L103)\u3067\u3059\u306d\u300d**\n\u91d1\u300cLaravel\u3068\u540c\u3058\u3067\u3059\u306d\u300d\n**Cake\u300cLaravel\u306e\u8a71\u306f\u304d\u304d\u305f\u304f\u306a\u3044\u300d**\n\n\u91d1\u300c\u4eca\u65e5\u306f\u308f\u3056\u308f\u3056\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\n**Cake\u300c\u5e02\u5ddd\u3055\u3093\u306b\u3088\u308d\u3057\u304f\u300d**\n\n\n## Drupal\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u300d\n**Dpl\u300c\u3053\u3093\u306b\u3061\u306f\u300d**\n\n\u91d1\u300c\u65e9\u901f\u3067\u3059\u304c\u3001CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u300d\n\n```html\n<input type=\"hidden\" name=\"form_token\" value=\"dQGBMO3QEJ5DjKakM1wSFlId9VLQ5HVBR9Ak0YqsVo0\" />\n```\n\n**Dpl\u300c\u306f\u3044\u3001[\u3053\u3053](https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21Access%21CsrfTokenGenerator.php/8.3.x)\u3089\u3078\u3093\u3092\u898b\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u300d**\n\n```php\n  /**\n   * Generates a token based on $value, the user session, and the private key.\n   *\n   * The generated token is based on the session of the current user. Normally,\n   * anonymous users do not have a session, so the generated token will be\n   * different on every page request. To generate a token for users without a\n   * session, manually start a session prior to calling this function.\n   *\n   * @param string $value\n   *   (optional) An additional value to base the token on.\n   *\n   * @return string\n   *   A 43-character URL-safe token for validation, based on the token seed,\n   *   the hash salt provided by Settings::getHashSalt(), and the\n   *   'drupal_private_key' configuration variable.\n   *\n   * @see \\Drupal\\Core\\Site\\Settings::getHashSalt()\n   * @see \\Symfony\\Component\\HttpFoundation\\Session\\SessionInterface::start()\n   */\n  public function get($value = '') {\n    $seed = $this->sessionMetadata->getCsrfTokenSeed();\n    if (empty($seed)) {\n      $seed = Crypt::randomBytesBase64();\n      $this->sessionMetadata->setCsrfTokenSeed($seed);\n    }\n\n    return $this->computeToken($seed, $value);\n  }\n```\n\n\n\u91d1\u300c\u305f\u307e\u306b\u5024\u306b\u30a2\u30f3\u30c0\u30fc\u30d0\u30fc\u304c\u5165\u308a\u307e\u3059\u3088\u306d\uff1f\u300d\n**Dpl\u300c\u305d\u308c\u306f[\u3053\u306e\u3078\u3093](https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Component%21Utility%21Crypt.php/function/Crypt%3A%3AhmacBase64/8.3.x)\u306e\u7f6e\u63db\u51e6\u7406\u306b\u3088\u308b\u3082\u306e\u3067\u3059\u306d\u3002\u300d**\n\n```php\npublic static function hmacBase64($data, $key) {\n  // $data and $key being strings here is necessary to avoid empty string\n  // results of the hash function if they are not scalar values. As this\n  // function is used in security-critical contexts like token validation it\n  // is important that it never returns an empty string.\n  if (!is_scalar($data) || !is_scalar($key)) {\n    throw new \\InvalidArgumentException('Both parameters passed to \\Drupal\\Component\\Utility\\Crypt::hmacBase64 must be scalar values.');\n  }\n\n  $hmac = base64_encode(hash_hmac('sha256', $data, $key, TRUE));\n  // Modify the hmac so it's safe to use in URLs.\n  return str_replace(['+', '/', '='], ['-', '_', ''], $hmac);\n}\n```\n\n\u91d1\u300cCrypt::randomBytesBase64\u306e\u4e2d\u3067\u547c\u3070\u308c\u308bstatic::randomBytes\u3068\u3044\u3046\u306e\u306f\u3001\u5b9f\u88c5\u306f\u3084\u306f\u308aPHP\u6a19\u6e96\u306erandom_bytes\u3067\u3059\u304b\uff1f\u300d\n**Dpl\u300c\u306f\u3044\u3001\u305d\u306e\u3068\u304a\u308a\u3067\u3059\u300d**\n\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002Drupal\u3055\u3093\u306f\u30de\u30cb\u30e5\u30a2\u30eb\u304b\u3089\u30cf\u30a4\u30d1\u30fc\u30ea\u30f3\u30af\u3067\u30bd\u30fc\u30b9\u3092\u8fbf\u308a\u3084\u3059\u304f\u3066\u3044\u3044\u3067\u3059\u306d\u3002\u300d\n**Dpl\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\u3067\u306f\u307e\u305f\u6a5f\u4f1a\u304c\u3042\u308c\u3070\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u3002\u300d**\n\n\n##Joomla\n\u91d1\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u300d\n**Jml\u300c\u3053\u3093\u306b\u3061\u306f\u300d**\n\n\u91d1\u300c\u6700\u8fd1\u5fd9\u3057\u305d\u3046\u3067\u3059\u306d\u300d\n**Jml\u300c\u7acb\u3066\u7d9a\u3051\u306b\u8106\u5f31\u6027\u304c\u51fa\u3061\u3083\u3063\u3066\u2026\u9762\u76ee\u306a\u3044\u3067\u3059\u300d**\n\u91d1\u300c\u3042\u306ejform[id]\u306e\u3084\u3064\u3067\u3059\u304b\uff1f\u300d\n**Jml\u300c\u4eca\u65e5\u306f\u305d\u306e\u8a71\u306f\u3057\u305f\u304f\u306a\u3044\u3067\u3059\u3002CSRF\u30c8\u30fc\u30af\u30f3\u306e\u8a71\u3092\u3057\u307e\u3057\u3087\u3046\u300d**\n\n\u91d1\u300cJoomla\u306e\u5834\u5408CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u300d\n\n```html\n<input type=\"hidden\" name=\"bbbb8070c831e37bbd16514ebc4911e0\" value=\"1\" />\n```\n\n\u91d1\u300c\u3053\u308c\u306f\u4eca\u65e5\u304a\u8d8a\u3057\u3044\u305f\u3060\u3044\u305f\u30b2\u30b9\u30c8\u306e\u4e2d\u3067\u3082\u304b\u306a\u308a\u30ad\u30e3\u30e9\u304c\u7acb\u3063\u3066\u308b\u307b\u3046\u3067\u3059\u306d\u300d\n**Jml\u300c\u305d\u3046\u3067\u3057\u3087\u3046\u306d\u300d**\n\n\u91d1\u300cCSRF\u30c8\u30fc\u30af\u30f3\u306e\u751f\u6210\u306f[\u3053\u306e\u3078\u3093](https://github.com/joomla/joomla-cms/blob/91749f845dcf20e097801ecd75da8e4665075a18/libraries/joomla/user/helper.php#L644)\u3067\u3059\u306d\u3002\u547c\u3073\u51fa\u3057\u5143\u304c[\u3053\u3061\u3089](https://github.com/joomla/joomla-cms/blob/d9e1f90b17caa668584e218572fb04ef56825f3d/libraries/joomla/session/session.php#L827)\u3067\u3059\u3002\u300d\n\n```php\n\t/**\n\t * Generate a random password\n\t *\n\t * @param   integer  $length  Length of the password to generate\n\t *\n\t * @return  string  Random Password\n\t *\n\t * @since   11.1\n\t */\n\tpublic static function genRandomPassword($length = 8)\n\t{\n\t\t$salt = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n\t\t$base = strlen($salt);\n\t\t$makepass = '';\n\t\t/*\n\t\t * Start with a cryptographic strength random string, then convert it to\n\t\t * a string with the numeric base of the salt.\n\t\t * Shift the base conversion on each character so the character\n\t\t * distribution is even, and randomize the start shift so it's not\n\t\t * predictable.\n\t\t */\n\t\t$random = JCrypt::genRandomBytes($length + 1);\n\t\t$shift = ord($random[0]);\n\t\tfor ($i = 1; $i <= $length; ++$i)\n\t\t{\n\t\t\t$makepass .= $salt[($shift + ord($random[$i])) % $base];\n\t\t\t$shift += ord($random[$i]);\n\t\t}\n\t\treturn $makepass;\n\t}\n```\n\n**Jml\u300c\u4e0a\u8a18\u306eJCrypt::genRandomBytes\u3067\u306f\u3001\u6700\u7d42\u7684\u306b\u306fPHP\u6a19\u6e96\u95a2\u6570\u306erandom_bytes\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u300d**\n\u91d1\u300cPHP\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3054\u304f\u666e\u901a\u306e\u5b9f\u88c5\u3067\u3059\u306d\u300d\n\n\n\u91d1\u300c\u2026\u5024\u304c1\u3067\u3059\u3088\u306d\u300d\n**Jml\u300c\u306f\u3044\u3001\u5024\u306f1\u3067\u3059\u300d**\n\n\u91d1\u300c\u3084\u306f\u308a\u30011\u306b\u306f\u3053\u3060\u308f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u3088\u306d\uff1f2\u3058\u3083\u3060\u3081\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\n**Jml\u300c\u3044\u3044\u8cea\u554f\u3067\u3059\u306d\u300d**\n\u91d1\u300c\u2026(\u30b4\u30af\u30ea)\u300d\n**Jml\u300c\u5b9f\u306f\u3054\u671f\u5f85\u306b\u6dfb\u3048\u305a\u6b8b\u5ff5\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3001\u5024\u304c2\u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u300d**\n\u91d1\u300c\u672c\u5f53\u3067\u3059\u304b\uff1f\u3053\u308c\u306fJoomla\u754c\u3092\u63fa\u308b\u304c\u3059\u5927\u30b9\u30ad\u30e3\u30f3\u30c0\u30eb\u306a\u306e\u3067\u306f\uff1f\u300d\n**Jml\u300c[\u3053\u306e\u3078\u3093](https://github.com/joomla/joomla-cms/blob/b687a798ce5390e32ec78d52ae4ebed83423aeb9/libraries/joomla/session/session.php#L314)\u306e\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u308f\u304b\u308b\u3088\u3046\u306b\u3001PHP\u3067\u30d6\u30fc\u30ea\u30a2\u30f3\u5024\u306b\u5909\u63db\u3057\u305f\u7d50\u679c\u304cfalse\u3067\u306a\u3051\u308c\u3070OK\u3067\u3059\u300d**\n\n```php\n\t/**\n\t * Checks for a form token in the request.\n\t *\n\t * Use in conjunction with JHtml::_('form.token') or JSession::getFormToken.\n\t *\n\t * @param   string  $method  The request method in which to look for the token key.\n\t *\n\t * @return  boolean  True if found and valid, false otherwise.\n\t *\n\t * @since   12.1\n\t */\n\tpublic static function checkToken($method = 'post')\n\t{\n\t\t$token = self::getFormToken();\n\t\t$app = JFactory::getApplication();\n\t\tif (!$app->input->$method->get($token, '', 'alnum'))\n\t\t{\n\t\t\tif (JFactory::getSession()->isNew())\n\t\t\t{\n\t\t\t\t// Redirect to login screen.\n\t\t\t\t$app->enqueueMessage(JText::_('JLIB_ENVIRONMENT_SESSION_EXPIRED'), 'warning');\n\t\t\t\t$app->redirect(JRoute::_('index.php'));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n```\n\n\u91d1\u300c\u306a\u308b\u307b\u3069\u30021\u30842\u3060\u3068OK\u3067\u3059\u304c\u30010\u3060\u3068\u30c0\u30e1\u305d\u3046\u3067\u3059\u306d\u300d\n**Jml\u300c0\u306ffalse\u306b\u306a\u3063\u3061\u3083\u3046\u3093\u3067\u30c0\u30e1\u3067\u3059\u300d**\n\n\u91d1\u300c\u4eca\u65e5\u306f\u4e00\u756a\u6c17\u306b\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u3092\u76f4\u63a5\u8a0a\u304f\u3053\u3068\u304c\u3067\u304d\u3066\u3059\u3063\u304d\u308a\u3057\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\u300d\n**Jml\u300c\u305d\u308c\u3067\u306f\u5931\u793c\u3057\u307e\u3059\u300d**\n\n\n## Spring\n\u91d1\u300c\u6700\u5f8c\u306e\u30b2\u30b9\u30c8\u306eSpring\u3055\u3093\u306b\u304a\u8d8a\u3057\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u300d\n**Spring\u300c\u3053\u3093\u306b\u3061\u306f\u3002\u306f\u3058\u3081\u307e\u3057\u3066\u300d**\n\n\u91d1\u300c\u5b9f\u306f\u3064\u3044\u5148\u65e5\u307e\u3067\u306eVAddy\u306fSpring\u3055\u3093\u306eCSRF\u30c8\u30fc\u30af\u30f3\u3092\u9069\u5207\u306b\u6271\u3048\u305a\u3001\u304a\u5ba2\u69d8\u304c\u30b5\u30dd\u30fc\u30c8\u306b\u9023\u7d61\u3057\u3066\u304f\u3060\u3055\u3063\u305f\u306e\u3067\u5bfe\u5fdc\u3067\u304d\u305f\u3093\u3067\u3059\u3088\u300d\n**Spring\u300c\u305d\u3046\u306a\u3093\u3067\u3059\u306d\u3002\u7279\u306b\u305d\u308c\u307b\u3069\u5909\u308f\u3063\u305f\u3053\u3068\u306f\u3084\u3063\u3066\u3044\u306a\u3044\u3064\u3082\u308a\u3067\u3059\u304c\u300d**\n\n\u91d1\u300c\u304a\u3063\u3057\u3083\u308b\u3068\u304a\u308a\u3067\u3059\u306d\u3002CSRF\u30c8\u30fc\u30af\u30f3\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u306d\u3002\u300d\n\n```html\n<input type=\"hidden\" name=\"_csrf\" value=\"2a0e43b3-f6c2-4d74-8e61-62765c71e1e2\"/>\n```\n\n\u91d1\u300c\u540d\u524d\u3082\u975e\u5e38\u306b\u660e\u5feb\u306b_csrf\u3067\u3059\u3057\u3002\u5f53\u6642\u306eVAddy\u306f\u5024\u306b\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3093\u3067\u3044\u308b\u30b1\u30fc\u30b9\u3092\u3046\u307e\u304f\u8a8d\u8b58\u3067\u304d\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u300d\n**Spring\u300c\u306a\u308b\u307b\u3069\u3002\u3067\u3082CSRF\u30c8\u30fc\u30af\u30f3\u306e\u5024\u304c\u30cf\u30a4\u30d5\u30f3\u3092\u542b\u3080\u30b1\u30fc\u30b9\u3063\u3066\u3001\u305d\u308c\u307b\u3069\u73cd\u3057\u304f\u306a\u3044\u3067\u3059\u3088\u306d\uff1f\u300d**\n\u91d1\u300c\u306f\u3044\u3001\u4eca\u56de\u306e\u8abf\u67fb\u3067\u3082\u660e\u3089\u304b\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u305d\u306e\u3068\u304a\u308a\u3067\u3059\u300d\n\n\u91d1\u300cSpring\u306e\u5834\u5408\u3001[CSRF\u95a2\u4fc2\u306e\u30af\u30e9\u30b9](https://github.com/spring-projects/spring-security/tree/master/web/src/main/java/org/springframework/security/web/csrf)\u3060\u3051\u3067\u5927\u91cf\u306b\u3042\u308a\u307e\u3059\u306d\u3002\u672c\u5f53\u306b\u3053\u3093\u306a\u306b\u5fc5\u8981\u306a\u3093\u3067\u3059\u304b\uff1f\u300d\n**Spring\u300cJava\u306e\u60aa\u3044\u7656\u3067\u3059\u300d**\n\n\u91d1\u300c\u5b9f\u969b\u306b\u306f\u3069\u3053\u3067\u30c8\u30fc\u30af\u30f3\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u300d\n**Spring\u300c[\u3053\u3053](https://github.com/spring-projects/spring-security/blob/master/web/src/main/java/org/springframework/security/web/csrf/HttpSessionCsrfTokenRepository.java#L126)\u3067\u3059\u300d**\n\n```java\n\tprivate String createNewToken() {\n\t\treturn UUID.randomUUID().toString();\n\t}\n```\n\n\u91d1\u300c\u306a\u308b\u307b\u3069UUID\u3092\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3044\u308b\u3093\u3067\u3059\u306d\u3002\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d\u3002\u30af\u30e9\u30b9\u306f12\u500b\u3082\u3042\u308b\u306e\u306b\u300d\n**Spring\u300c\u307e\u3041\u30af\u30e9\u30b9\u3058\u3083\u306a\u304f\u3066\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3082\u3042\u308b\u3093\u3067\u3059\u3051\u3069\u306d\u300d**\n\n\u91d1\u300c\u4eca\u65e5\u306f\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d\n**Spring\u300c\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u300d**\n\n\n\n\n\n\n", "tags": ["csrf", "VAddy", "Security", "Rails", "WordPress"]}