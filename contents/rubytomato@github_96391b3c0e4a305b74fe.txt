{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nApache Oltu\u3092\u4f7f\u3063\u305fOAuth\u8a8d\u8a3c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u691c\u8a3c\u76ee\u7684\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u74b0\u5883\n\nWindows7 (64bit)\nJava 1.8.0_65\nSpring-Boot 1.3.0\nApache Oltu 1.0.1\n\n\u53c2\u8003\n\nApache Oltu\nWorking example on OAuth2 + Spring Security + Apache Oltu\nOAuth 2.0 Scopes for Google APIs\nUsing OAuth 2.0 for Web Server Applications\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\npom.xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.example.sbsns.oltu</groupId>\n  <artifactId>sbsns-oltu-example</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>sbsns-oltu-example</name>\n  <url>http://maven.apache.org</url>\n\n  <properties>\n    <java.version>1.8</java.version>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.0.RELEASE</version>\n  </parent>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-thymeleaf</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>org.apache.oltu.oauth2</groupId>\n      <artifactId>org.apache.oltu.oauth2.client</artifactId>\n      <version>1.0.1</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.codehaus.jackson</groupId>\n      <artifactId>jackson-core-asl</artifactId>\n      <version>1.9.13</version>\n    </dependency>\n\n    <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-lang3</artifactId>\n      <version>3.4</version>\n    </dependency>\n\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\napplication.yml\n# EMBEDDED SERVER CONFIGURATION (ServerProperties)\nserver:\n  port: 9000\n\nspring:\n# PROFILES\n  profiles:\n    active: dev\n# THYMELEAF (ThymeleafAutoConfiguration)\n  thymeleaf:\n    enabled: true\n    cache: false\n\nfacebook:\n  app-id: <facebook-app-id>\n  app-secret: <faceboo-app-secret>\ngoogle:\n  app-id: <google-app-id>\n  app-secret: <google-app-secret>\n\n\nGoogle\u306e\u30b5\u30f3\u30d7\u30eb\n\nConfig\npackage com.example.sbsns.oltu;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class GoogleConfig {\n\n  @Value(\"${google.app-id}\")\n  private String appId;\n  @Value(\"${google.app-secret}\")\n  private String appSecret;\n\n  public String getAppId() {\n    return appId;\n  }\n  public String getAppSecret() {\n    return appSecret;\n  }\n}\n\n\nForm\npackage com.example.sbsns.oltu.web;\n\npublic class GoogleOAuthCallbackForm {\n\n  private String code;\n  private String state;\n  private String error;\n\n  public String getCode() {\n    return code;\n  }\n  public void setCode(String code) {\n    this.code = code;\n  }\n  public String getState() {\n    return state;\n  }\n  public void setState(String state) {\n    this.state = state;\n  }\n  public String getError() {\n    return error;\n  }\n  public void setError(String error) {\n    this.error = error;\n  }\n\n  @Override\n  public String toString() {\n    return \"GoogleAuthCallbackForm [code=\" + code + \", state=\" + state\n        + \", error=\" + error + \"]\";\n  }\n\n}\n\n\nController\npackage com.example.sbsns.oltu.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.oltu.oauth2.client.OAuthClient;\nimport org.apache.oltu.oauth2.client.URLConnectionClient;\nimport org.apache.oltu.oauth2.client.request.OAuthBearerClientRequest;\nimport org.apache.oltu.oauth2.client.request.OAuthClientRequest;\nimport org.apache.oltu.oauth2.client.response.OAuthAccessTokenResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthAuthzResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthResourceResponse;\nimport org.apache.oltu.oauth2.common.OAuthProviderType;\nimport org.apache.oltu.oauth2.common.exception.OAuthProblemException;\nimport org.apache.oltu.oauth2.common.exception.OAuthSystemException;\nimport org.apache.oltu.oauth2.common.message.types.GrantType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.example.sbsns.oltu.GoogleConfig;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\n@RequestMapping(value = \"/google\")\npublic class GoogleOAuthController {\n  private static Logger logger = LoggerFactory.getLogger(GoogleOAuthController.class);\n\n  @Autowired\n  private GoogleConfig config;\n\n  private static final String REDIRECT_URI = \"http://localhost:9000/google/callback\";\n\n  private static final String API_USER_INFO_ENDPOINT = \"https://www.googleapis.com/oauth2/v1/userinfo\";\n  private static final String API_REVOKE_ENDPOINT = \"https://accounts.google.com/o/oauth2/revoke\";\n  //private static final String API_GOOGLE_PLUS_ENDPOINT = \"https://www.googleapis.com/plus/v1/people/me\";\n\n  @RequestMapping(value = \"/signin\", method = RequestMethod.GET)\n  public void signin(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException {\n    logger.info(\"signin\");\n\n    String state = \"abc123xyz456\";\n\n    OAuthClientRequest clientRequest = OAuthClientRequest\n        .authorizationProvider(OAuthProviderType.GOOGLE)\n        .setClientId(config.getAppId())\n        .setRedirectURI(REDIRECT_URI)\n        .setResponseType(\"code\")\n        .setState(state)\n        .setScope(\"https://www.googleapis.com/auth/userinfo.email\")\n        .buildQueryMessage();\n\n    String redirectURL = clientRequest.getLocationUri();\n    logger.info(\"locationURL:{}\", redirectURL);\n\n    response.sendRedirect(clientRequest.getLocationUri());\n  }\n\n  @RequestMapping(value = \"/callback\", method = RequestMethod.GET)\n  public String callback(\n      GoogleOAuthCallbackForm form,\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthProblemException, OAuthSystemException {\n    logger.info(\"callback\");\n    logger.info(\"form:{}\", form);\n\n    String code;\n    String state;\n    try {\n      OAuthAuthzResponse oar = OAuthAuthzResponse.oauthCodeAuthzResponse(request);\n      code = oar.getCode();\n      state = oar.getState();\n      logger.info(\"code:{}\", code);\n      logger.info(\"state:{}\", state);\n    } catch (OAuthProblemException e) {\n      logger.error(\"OAuth response error\", e);\n      return \"redirect:/\";\n    }\n\n    OAuthClientRequest oauthRequest = OAuthClientRequest\n        .tokenProvider(OAuthProviderType.GOOGLE)\n        .setClientId(config.getAppId())\n        .setClientSecret(config.getAppSecret())\n        .setRedirectURI(REDIRECT_URI)\n        .setGrantType(GrantType.AUTHORIZATION_CODE)\n        .setCode(code)\n        .buildBodyMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient()); \n    final OAuthAccessTokenResponse oAuthResponse = oAuthClient.accessToken(oauthRequest, \"POST\");\n\n    String accessToken = oAuthResponse.getAccessToken();\n    String scope = oAuthResponse.getScope();\n    long expiresIn = oAuthResponse.getExpiresIn();\n\n    logger.info(\"oAuthResponse:{}\", oAuthResponse.toString());\n    logger.info(\"accessToken:{}\", accessToken);\n    logger.info(\"scope:{}\", scope);\n    logger.info(\"expiresIn:{}\", expiresIn);\n\n    request.getSession().setAttribute(\"accessToken\", accessToken);\n\n    return \"google/callback\";\n  }\n\n  @RequestMapping(value = \"/user\", method = RequestMethod.GET)\n  public String user(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthSystemException, OAuthProblemException {\n    logger.info(\"user\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(API_USER_INFO_ENDPOINT)\n              .setAccessToken(accessToken)\n              .buildQueryMessage();\n\n    logger.info(\"locationURL:{}\", bearerClientRequest.getLocationUri());\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n\n    String userinfoJSON = resourceResponse.getBody();\n    logger.info(\"json:{}\", userinfoJSON);\n\n    try {\n      GoogleUserProfile userProfile = new ObjectMapper().readValue(userinfoJSON, GoogleUserProfile.class);\n      model.addAttribute(\"userProfile\", userProfile);\n      logger.info(\"{}\", userProfile.toString());\n    } catch (IOException e) {\n      logger.error(\"Json parse error\", e);\n      return \"redirect:/\";\n    }\n\n    return \"google/user\";\n  }\n\n  @RequestMapping(value = \"/signout\", method = RequestMethod.GET)\n  public String signout(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException, OAuthProblemException {\n    logger.info(\"signout\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(API_REVOKE_ENDPOINT + \"?token=\" + accessToken)\n             .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n    String json = resourceResponse.getBody();\n    logger.info(\"json:{}\", json);\n\n    return \"index\";\n  }\n\n}\n\n\nResponse Object\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class GoogleUserProfile implements Serializable {\n\n  private static final long serialVersionUID = 3543234712791418623L;\n\n  @JsonProperty(\"id\")\n  private String id;\n  @JsonProperty(\"name\")\n  private String name;\n  @JsonProperty(\"gender\")\n  private String gender;\n  @JsonProperty(\"given_name\")\n  private String givenName;\n  @JsonProperty(\"family_name\")\n  private String familyName;\n  @JsonProperty(\"verified_email\")\n  private boolean verifiedEmail;\n  @JsonProperty(\"email\")\n  private String email;\n  @JsonProperty(\"picture\")\n  private String picture;\n  @JsonProperty(\"link\")\n  private String link;\n\n  public String getId() {\n    return id;\n  }\n  public void setId(String id) {\n    this.id = id;\n  }\n  public String getName() {\n    return name;\n  }\n  public void setName(String name) {\n    this.name = name;\n  }\n  public String getGender() {\n    return gender;\n  }\n  public void setGender(String gender) {\n    this.gender = gender;\n  }\n  public String getGivenName() {\n    return givenName;\n  }\n  public void setGivenName(String givenName) {\n    this.givenName = givenName;\n  }\n  public String getFamilyName() {\n    return familyName;\n  }\n  public void setFamilyName(String familyName) {\n    this.familyName = familyName;\n  }\n  public boolean isVerifiedEmail() {\n    return verifiedEmail;\n  }\n  public void setVerifiedEmail(boolean verifiedEmail) {\n    this.verifiedEmail = verifiedEmail;\n  }\n  public String getEmail() {\n    return email;\n  }\n  public void setEmail(String email) {\n    this.email = email;\n  }\n  public String getPicture() {\n    return picture;\n  }\n  public void setPicture(String picture) {\n    this.picture = picture;\n  }\n  public String getLink() {\n    return link;\n  }\n  public void setLink(String link) {\n    this.link = link;\n  }\n\n  @Override\n  public String toString() {\n    return \"GoogleUserProfile [id=\" + id + \", name=\" + name + \", gender=\"\n        + gender + \", givenName=\" + givenName + \", familyName=\" + familyName\n        + \", verifiedEmail=\" + verifiedEmail + \", email=\" + email\n        + \", picture=\" + picture + \", link=\" + link + \"]\";\n  }\n\n}\n\n\nFacebook\u306e\u30b5\u30f3\u30d7\u30eb\n\nConfig\npackage com.example.sbsns.oltu;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class FacebookConfig {\n\n  @Value(\"${facebook.app-id}\")\n  private String appID;\n  @Value(\"${facebook.app-secret}\")\n  private String appSecret;\n\n  public String getAppID() {\n    return appID;\n  }\n  public String getAppSecret() {\n    return appSecret;\n  }\n}\n\n\nForm\npackage com.example.sbsns.oltu.web;\n\npublic class FacebookOAuthCallbackForm {\n\n  private String code;\n  private String state;\n  private String error;\n  private String error_code;\n  private String error_description;\n  private String error_reason;\n\n  public String getCode() {\n    return code;\n  }\n  public void setCode(String code) {\n    this.code = code;\n  }\n  public String getState() {\n    return state;\n  }\n  public void setState(String state) {\n    this.state = state;\n  }\n  public String getError() {\n    return error;\n  }\n  public void setError(String error) {\n    this.error = error;\n  }\n  public String getError_code() {\n    return error_code;\n  }\n  public void setError_code(String error_code) {\n    this.error_code = error_code;\n  }\n  public String getError_description() {\n    return error_description;\n  }\n  public void setError_description(String error_description) {\n    this.error_description = error_description;\n  }\n  public String getError_reason() {\n    return error_reason;\n  }\n  public void setError_reason(String error_reason) {\n    this.error_reason = error_reason;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookAuthCallbackForm [code=\" + code + \", state=\" + state\n        + \", error=\" + error + \", error_code=\" + error_code\n        + \", error_description=\" + error_description + \", error_reason=\"\n        + error_reason + \"]\";\n  }\n\n}\n\n\nController\npackage com.example.sbsns.oltu.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.oltu.oauth2.client.OAuthClient;\nimport org.apache.oltu.oauth2.client.URLConnectionClient;\nimport org.apache.oltu.oauth2.client.request.OAuthBearerClientRequest;\nimport org.apache.oltu.oauth2.client.request.OAuthClientRequest;\nimport org.apache.oltu.oauth2.client.response.GitHubTokenResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthAuthzResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthResourceResponse;\nimport org.apache.oltu.oauth2.common.OAuthProviderType;\nimport org.apache.oltu.oauth2.common.exception.OAuthProblemException;\nimport org.apache.oltu.oauth2.common.exception.OAuthSystemException;\nimport org.apache.oltu.oauth2.common.message.types.GrantType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.example.sbsns.oltu.FacebookConfig;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\n@RequestMapping(value = \"/facebook\")\npublic class FacebookOAuthController {\n  private static Logger logger = LoggerFactory.getLogger(FacebookOAuthController.class);\n\n  @Autowired\n  private FacebookConfig config;\n\n  private static final String REDIRECT_URI = \"http://localhost:9000/facebook/callback\";\n\n  @RequestMapping(value = \"/signin\", method = RequestMethod.GET)\n  public void signin(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException {\n    logger.info(\"signin\");\n\n    String state = \"abc123xyz456\";\n\n    OAuthClientRequest clientRequest = OAuthClientRequest\n        .authorizationProvider(OAuthProviderType.FACEBOOK)\n        .setClientId(config.getAppID())\n        .setRedirectURI(REDIRECT_URI)\n        .setResponseType(\"code\")\n        .setScope(\"public_profile,user_friends,user_birthday,email,user_photos,user_about_me\")\n        .setState(state)\n        .buildQueryMessage();\n\n    String redirectURL = clientRequest.getLocationUri();\n    logger.info(\"redirectURL:{}\", redirectURL);\n\n    response.sendRedirect(clientRequest.getLocationUri());\n  }\n\n  @RequestMapping(value = \"/callback\", method = RequestMethod.GET)\n  public String callback(\n      FacebookOAuthCallbackForm form,\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthProblemException, OAuthSystemException {\n    logger.info(\"callback\");\n    logger.info(\"form:{}\", form);\n\n    String code;\n    String state;\n    try {\n      OAuthAuthzResponse oar = OAuthAuthzResponse.oauthCodeAuthzResponse(request);\n      code = oar.getCode();\n      state = oar.getState();\n      logger.info(\"code:{}\",code);\n      logger.info(\"state:{}\",state);\n    } catch (OAuthProblemException e) {\n      logger.error(\"OAuth response error\", e);\n      return \"redirect:/\";\n    }\n\n    OAuthClientRequest oauthRequest = OAuthClientRequest\n        .tokenProvider(OAuthProviderType.FACEBOOK)\n        .setClientId(config.getAppID())\n        .setClientSecret(config.getAppSecret())\n        .setRedirectURI(REDIRECT_URI)\n        .setGrantType(GrantType.AUTHORIZATION_CODE)\n        .setCode(code)\n        .buildBodyMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    GitHubTokenResponse oAuthResponse = oAuthClient.accessToken(oauthRequest, GitHubTokenResponse.class);\n\n    String accessToken = oAuthResponse.getAccessToken();\n    String scope = oAuthResponse.getScope();\n    String expiresIn = oAuthResponse.getParam(\"expires\");\n\n    logger.info(\"oAuthResponse:{}\", oAuthResponse.toString());\n    logger.info(\"accessToken:{}\",accessToken);\n    logger.info(\"scope:{}\",scope);\n    logger.info(\"expire:{}\",expiresIn);\n\n    request.getSession().setAttribute(\"accessToken\", accessToken);\n\n    return \"facebook/callback\";\n  }\n\n  @RequestMapping(value = \"/user\", method = RequestMethod.GET)\n  public String user(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthSystemException, OAuthProblemException {\n    logger.info(\"user\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(\"https://graph.facebook.com/me?fields=id,first_name,last_name,picture,email\")\n            .setAccessToken(accessToken)\n            .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n    String userinfoJSON = resourceResponse.getBody();\n    logger.info(\"json:{}\", userinfoJSON);\n\n    try {\n      FacebookUserProfile userProfile = new ObjectMapper().readValue(userinfoJSON, FacebookUserProfile.class);\n      request.getSession().setAttribute(\"facebookId\", userProfile.getId());\n      model.addAttribute(\"userProfile\", userProfile);\n      logger.info(\"{}\", userProfile.toString());\n    } catch (IOException e) {\n      logger.error(\"Json parse error\", e);\n      return \"redirect:/\";\n    }\n\n    return \"facebook/user\";\n  }\n\n  @RequestMapping(value = \"/signout\", method = RequestMethod.GET)\n  public String signout(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException, OAuthProblemException {\n    logger.info(\"signout\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n    String facebookId = (String) request.getSession().getAttribute(\"facebookId\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(\"https://graph.facebook.com/\" + facebookId + \"/permissions\")\n            .setAccessToken(accessToken)\n            .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"DELETE\", OAuthResourceResponse.class);\n    String json = resourceResponse.getBody();\n    logger.info(\"json:{}\", json);\n\n    return \"index\";\n  }\n\n}\n\n\nResponse Object\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookUserProfile implements Serializable {\n\n  private static final long serialVersionUID = 7957841067903054430L;\n\n  @JsonProperty(\"id\")\n  private String id;\n  @JsonProperty(\"last_name\")\n  private String lastName;\n  @JsonProperty(\"first_name\")\n  private String firstName;\n  @JsonProperty(\"email\")\n  private String email;\n  @JsonProperty(\"picture\")\n  private FacebookPicture picture;\n\n  public String getId() {\n    return id;\n  }\n  public void setId(String id) {\n    this.id = id;\n  }\n  public String getLastName() {\n    return lastName;\n  }\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n  public String getFirstName() {\n    return firstName;\n  }\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n  public String getEmail() {\n    return email;\n  }\n  public void setEmail(String email) {\n    this.email = email;\n  }\n  public FacebookPicture getPicture() {\n    return picture;\n  }\n  public void setPicture(FacebookPicture picture) {\n    this.picture = picture;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookUserProfile [id=\" + id + \", lastName=\" + lastName\n        + \", firstName=\" + firstName + \", email=\" + email + \", picture=\"\n        + picture + \"]\";\n  }\n}\n\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookPicture implements Serializable {\n\n  private static final long serialVersionUID = 5591928605444403203L;\n\n  @JsonProperty(\"data\")\n  private FacebookPictureData data;\n\n  public FacebookPictureData getData() {\n    return data;\n  }\n  public void setData(FacebookPictureData data) {\n    this.data = data;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookPicture [data=\" + data + \"]\";\n  }\n}\n\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookPictureData implements Serializable {\n\n  private static final long serialVersionUID = -857548118195277215L;\n\n  @JsonProperty(\"is_silhouette\")\n  private boolean isSilhouette;\n  @JsonProperty(\"url\")\n  private String url;\n\n  public boolean isSilhouette() {\n    return isSilhouette;\n  }\n  public void setSilhouette(boolean isSilhouette) {\n    this.isSilhouette = isSilhouette;\n  }\n  public String getUrl() {\n    return url;\n  }\n  public void setUrl(String url) {\n    this.url = url;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookPictureData [isSilhouette=\" + isSilhouette + \", url=\" + url\n        + \"]\";\n  }\n}\n\n# \u6982\u8981\n\nApache Oltu\u3092\u4f7f\u3063\u305fOAuth\u8a8d\u8a3c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u691c\u8a3c\u76ee\u7684\u306b\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n**\u74b0\u5883**\n\n* Windows7 (64bit)\n* Java 1.8.0_65\n* Spring-Boot 1.3.0\n* Apache Oltu 1.0.1\n\n**\u53c2\u8003**\n\n* [Apache Oltu] (https://oltu.apache.org/)\n* [Working example on OAuth2 + Spring Security + Apache Oltu] (http://yfrankfeng.blogspot.jp/2015/07/working-example-on-oauth2-spring.html)\n* [OAuth 2.0 Scopes for Google APIs] (https://developers.google.com/identity/protocols/googlescopes)\n* [Using OAuth 2.0 for Web Server Applications] (https://developers.google.com/identity/protocols/OAuth2WebServer)\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n### pom.xml\n\n```xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.example.sbsns.oltu</groupId>\n  <artifactId>sbsns-oltu-example</artifactId>\n  <version>0.0.1-SNAPSHOT</version>\n  <packaging>jar</packaging>\n\n  <name>sbsns-oltu-example</name>\n  <url>http://maven.apache.org</url>\n\n  <properties>\n    <java.version>1.8</java.version>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <parent>\n    <groupId>org.springframework.boot</groupId>\n    <artifactId>spring-boot-starter-parent</artifactId>\n    <version>1.3.0.RELEASE</version>\n  </parent>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-web</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-thymeleaf</artifactId>\n    </dependency>\n\n    <dependency>\n      <groupId>org.apache.oltu.oauth2</groupId>\n      <artifactId>org.apache.oltu.oauth2.client</artifactId>\n      <version>1.0.1</version>\n    </dependency>\n\n    <dependency>\n      <groupId>org.codehaus.jackson</groupId>\n      <artifactId>jackson-core-asl</artifactId>\n      <version>1.9.13</version>\n    </dependency>\n\n    <dependency>\n      <groupId>commons-collections</groupId>\n      <artifactId>commons-collections</artifactId>\n    </dependency>\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-lang3</artifactId>\n      <version>3.4</version>\n    </dependency>\n\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n</project>\n```\n\n### application.yml\n\n```text\n# EMBEDDED SERVER CONFIGURATION (ServerProperties)\nserver:\n  port: 9000\n\nspring:\n# PROFILES\n  profiles:\n    active: dev\n# THYMELEAF (ThymeleafAutoConfiguration)\n  thymeleaf:\n    enabled: true\n    cache: false\n\nfacebook:\n  app-id: <facebook-app-id>\n  app-secret: <faceboo-app-secret>\ngoogle:\n  app-id: <google-app-id>\n  app-secret: <google-app-secret>\n````\n\n\n### Google\u306e\u30b5\u30f3\u30d7\u30eb\n\n#### Config\n\n```java\npackage com.example.sbsns.oltu;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class GoogleConfig {\n\n  @Value(\"${google.app-id}\")\n  private String appId;\n  @Value(\"${google.app-secret}\")\n  private String appSecret;\n\n  public String getAppId() {\n    return appId;\n  }\n  public String getAppSecret() {\n    return appSecret;\n  }\n}\n```\n\n#### Form\n\n```java\npackage com.example.sbsns.oltu.web;\n\npublic class GoogleOAuthCallbackForm {\n\n  private String code;\n  private String state;\n  private String error;\n\n  public String getCode() {\n    return code;\n  }\n  public void setCode(String code) {\n    this.code = code;\n  }\n  public String getState() {\n    return state;\n  }\n  public void setState(String state) {\n    this.state = state;\n  }\n  public String getError() {\n    return error;\n  }\n  public void setError(String error) {\n    this.error = error;\n  }\n\n  @Override\n  public String toString() {\n    return \"GoogleAuthCallbackForm [code=\" + code + \", state=\" + state\n        + \", error=\" + error + \"]\";\n  }\n\n}\n```\n\n#### Controller\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.oltu.oauth2.client.OAuthClient;\nimport org.apache.oltu.oauth2.client.URLConnectionClient;\nimport org.apache.oltu.oauth2.client.request.OAuthBearerClientRequest;\nimport org.apache.oltu.oauth2.client.request.OAuthClientRequest;\nimport org.apache.oltu.oauth2.client.response.OAuthAccessTokenResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthAuthzResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthResourceResponse;\nimport org.apache.oltu.oauth2.common.OAuthProviderType;\nimport org.apache.oltu.oauth2.common.exception.OAuthProblemException;\nimport org.apache.oltu.oauth2.common.exception.OAuthSystemException;\nimport org.apache.oltu.oauth2.common.message.types.GrantType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.example.sbsns.oltu.GoogleConfig;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\n@RequestMapping(value = \"/google\")\npublic class GoogleOAuthController {\n  private static Logger logger = LoggerFactory.getLogger(GoogleOAuthController.class);\n\n  @Autowired\n  private GoogleConfig config;\n\n  private static final String REDIRECT_URI = \"http://localhost:9000/google/callback\";\n\n  private static final String API_USER_INFO_ENDPOINT = \"https://www.googleapis.com/oauth2/v1/userinfo\";\n  private static final String API_REVOKE_ENDPOINT = \"https://accounts.google.com/o/oauth2/revoke\";\n  //private static final String API_GOOGLE_PLUS_ENDPOINT = \"https://www.googleapis.com/plus/v1/people/me\";\n\n  @RequestMapping(value = \"/signin\", method = RequestMethod.GET)\n  public void signin(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException {\n    logger.info(\"signin\");\n\n    String state = \"abc123xyz456\";\n\n    OAuthClientRequest clientRequest = OAuthClientRequest\n        .authorizationProvider(OAuthProviderType.GOOGLE)\n        .setClientId(config.getAppId())\n        .setRedirectURI(REDIRECT_URI)\n        .setResponseType(\"code\")\n        .setState(state)\n        .setScope(\"https://www.googleapis.com/auth/userinfo.email\")\n        .buildQueryMessage();\n\n    String redirectURL = clientRequest.getLocationUri();\n    logger.info(\"locationURL:{}\", redirectURL);\n\n    response.sendRedirect(clientRequest.getLocationUri());\n  }\n\n  @RequestMapping(value = \"/callback\", method = RequestMethod.GET)\n  public String callback(\n      GoogleOAuthCallbackForm form,\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthProblemException, OAuthSystemException {\n    logger.info(\"callback\");\n    logger.info(\"form:{}\", form);\n\n    String code;\n    String state;\n    try {\n      OAuthAuthzResponse oar = OAuthAuthzResponse.oauthCodeAuthzResponse(request);\n      code = oar.getCode();\n      state = oar.getState();\n      logger.info(\"code:{}\", code);\n      logger.info(\"state:{}\", state);\n    } catch (OAuthProblemException e) {\n      logger.error(\"OAuth response error\", e);\n      return \"redirect:/\";\n    }\n\n    OAuthClientRequest oauthRequest = OAuthClientRequest\n        .tokenProvider(OAuthProviderType.GOOGLE)\n        .setClientId(config.getAppId())\n        .setClientSecret(config.getAppSecret())\n        .setRedirectURI(REDIRECT_URI)\n        .setGrantType(GrantType.AUTHORIZATION_CODE)\n        .setCode(code)\n        .buildBodyMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient()); \n    final OAuthAccessTokenResponse oAuthResponse = oAuthClient.accessToken(oauthRequest, \"POST\");\n\n    String accessToken = oAuthResponse.getAccessToken();\n    String scope = oAuthResponse.getScope();\n    long expiresIn = oAuthResponse.getExpiresIn();\n\n    logger.info(\"oAuthResponse:{}\", oAuthResponse.toString());\n    logger.info(\"accessToken:{}\", accessToken);\n    logger.info(\"scope:{}\", scope);\n    logger.info(\"expiresIn:{}\", expiresIn);\n\n    request.getSession().setAttribute(\"accessToken\", accessToken);\n\n    return \"google/callback\";\n  }\n\n  @RequestMapping(value = \"/user\", method = RequestMethod.GET)\n  public String user(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthSystemException, OAuthProblemException {\n    logger.info(\"user\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(API_USER_INFO_ENDPOINT)\n              .setAccessToken(accessToken)\n              .buildQueryMessage();\n\n    logger.info(\"locationURL:{}\", bearerClientRequest.getLocationUri());\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n\n    String userinfoJSON = resourceResponse.getBody();\n    logger.info(\"json:{}\", userinfoJSON);\n\n    try {\n      GoogleUserProfile userProfile = new ObjectMapper().readValue(userinfoJSON, GoogleUserProfile.class);\n      model.addAttribute(\"userProfile\", userProfile);\n      logger.info(\"{}\", userProfile.toString());\n    } catch (IOException e) {\n      logger.error(\"Json parse error\", e);\n      return \"redirect:/\";\n    }\n\n    return \"google/user\";\n  }\n\n  @RequestMapping(value = \"/signout\", method = RequestMethod.GET)\n  public String signout(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException, OAuthProblemException {\n    logger.info(\"signout\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(API_REVOKE_ENDPOINT + \"?token=\" + accessToken)\n             .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n    String json = resourceResponse.getBody();\n    logger.info(\"json:{}\", json);\n\n    return \"index\";\n  }\n\n}\n```\n\n#### Response Object\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class GoogleUserProfile implements Serializable {\n\n  private static final long serialVersionUID = 3543234712791418623L;\n\n  @JsonProperty(\"id\")\n  private String id;\n  @JsonProperty(\"name\")\n  private String name;\n  @JsonProperty(\"gender\")\n  private String gender;\n  @JsonProperty(\"given_name\")\n  private String givenName;\n  @JsonProperty(\"family_name\")\n  private String familyName;\n  @JsonProperty(\"verified_email\")\n  private boolean verifiedEmail;\n  @JsonProperty(\"email\")\n  private String email;\n  @JsonProperty(\"picture\")\n  private String picture;\n  @JsonProperty(\"link\")\n  private String link;\n\n  public String getId() {\n    return id;\n  }\n  public void setId(String id) {\n    this.id = id;\n  }\n  public String getName() {\n    return name;\n  }\n  public void setName(String name) {\n    this.name = name;\n  }\n  public String getGender() {\n    return gender;\n  }\n  public void setGender(String gender) {\n    this.gender = gender;\n  }\n  public String getGivenName() {\n    return givenName;\n  }\n  public void setGivenName(String givenName) {\n    this.givenName = givenName;\n  }\n  public String getFamilyName() {\n    return familyName;\n  }\n  public void setFamilyName(String familyName) {\n    this.familyName = familyName;\n  }\n  public boolean isVerifiedEmail() {\n    return verifiedEmail;\n  }\n  public void setVerifiedEmail(boolean verifiedEmail) {\n    this.verifiedEmail = verifiedEmail;\n  }\n  public String getEmail() {\n    return email;\n  }\n  public void setEmail(String email) {\n    this.email = email;\n  }\n  public String getPicture() {\n    return picture;\n  }\n  public void setPicture(String picture) {\n    this.picture = picture;\n  }\n  public String getLink() {\n    return link;\n  }\n  public void setLink(String link) {\n    this.link = link;\n  }\n\n  @Override\n  public String toString() {\n    return \"GoogleUserProfile [id=\" + id + \", name=\" + name + \", gender=\"\n        + gender + \", givenName=\" + givenName + \", familyName=\" + familyName\n        + \", verifiedEmail=\" + verifiedEmail + \", email=\" + email\n        + \", picture=\" + picture + \", link=\" + link + \"]\";\n  }\n\n}\n```\n\n\n### Facebook\u306e\u30b5\u30f3\u30d7\u30eb\n\n#### Config\n\n```java\npackage com.example.sbsns.oltu;\n\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.context.annotation.Configuration;\n\n@Configuration\npublic class FacebookConfig {\n\n  @Value(\"${facebook.app-id}\")\n  private String appID;\n  @Value(\"${facebook.app-secret}\")\n  private String appSecret;\n\n  public String getAppID() {\n    return appID;\n  }\n  public String getAppSecret() {\n    return appSecret;\n  }\n}\n```\n\n#### Form\n\n```java\npackage com.example.sbsns.oltu.web;\n\npublic class FacebookOAuthCallbackForm {\n\n  private String code;\n  private String state;\n  private String error;\n  private String error_code;\n  private String error_description;\n  private String error_reason;\n\n  public String getCode() {\n    return code;\n  }\n  public void setCode(String code) {\n    this.code = code;\n  }\n  public String getState() {\n    return state;\n  }\n  public void setState(String state) {\n    this.state = state;\n  }\n  public String getError() {\n    return error;\n  }\n  public void setError(String error) {\n    this.error = error;\n  }\n  public String getError_code() {\n    return error_code;\n  }\n  public void setError_code(String error_code) {\n    this.error_code = error_code;\n  }\n  public String getError_description() {\n    return error_description;\n  }\n  public void setError_description(String error_description) {\n    this.error_description = error_description;\n  }\n  public String getError_reason() {\n    return error_reason;\n  }\n  public void setError_reason(String error_reason) {\n    this.error_reason = error_reason;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookAuthCallbackForm [code=\" + code + \", state=\" + state\n        + \", error=\" + error + \", error_code=\" + error_code\n        + \", error_description=\" + error_description + \", error_reason=\"\n        + error_reason + \"]\";\n  }\n\n}\n```\n\n#### Controller\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.IOException;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\nimport org.apache.oltu.oauth2.client.OAuthClient;\nimport org.apache.oltu.oauth2.client.URLConnectionClient;\nimport org.apache.oltu.oauth2.client.request.OAuthBearerClientRequest;\nimport org.apache.oltu.oauth2.client.request.OAuthClientRequest;\nimport org.apache.oltu.oauth2.client.response.GitHubTokenResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthAuthzResponse;\nimport org.apache.oltu.oauth2.client.response.OAuthResourceResponse;\nimport org.apache.oltu.oauth2.common.OAuthProviderType;\nimport org.apache.oltu.oauth2.common.exception.OAuthProblemException;\nimport org.apache.oltu.oauth2.common.exception.OAuthSystemException;\nimport org.apache.oltu.oauth2.common.message.types.GrantType;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.example.sbsns.oltu.FacebookConfig;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\n@RequestMapping(value = \"/facebook\")\npublic class FacebookOAuthController {\n  private static Logger logger = LoggerFactory.getLogger(FacebookOAuthController.class);\n\n  @Autowired\n  private FacebookConfig config;\n\n  private static final String REDIRECT_URI = \"http://localhost:9000/facebook/callback\";\n\n  @RequestMapping(value = \"/signin\", method = RequestMethod.GET)\n  public void signin(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException {\n    logger.info(\"signin\");\n\n    String state = \"abc123xyz456\";\n\n    OAuthClientRequest clientRequest = OAuthClientRequest\n        .authorizationProvider(OAuthProviderType.FACEBOOK)\n        .setClientId(config.getAppID())\n        .setRedirectURI(REDIRECT_URI)\n        .setResponseType(\"code\")\n        .setScope(\"public_profile,user_friends,user_birthday,email,user_photos,user_about_me\")\n        .setState(state)\n        .buildQueryMessage();\n\n    String redirectURL = clientRequest.getLocationUri();\n    logger.info(\"redirectURL:{}\", redirectURL);\n\n    response.sendRedirect(clientRequest.getLocationUri());\n  }\n\n  @RequestMapping(value = \"/callback\", method = RequestMethod.GET)\n  public String callback(\n      FacebookOAuthCallbackForm form,\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthProblemException, OAuthSystemException {\n    logger.info(\"callback\");\n    logger.info(\"form:{}\", form);\n\n    String code;\n    String state;\n    try {\n      OAuthAuthzResponse oar = OAuthAuthzResponse.oauthCodeAuthzResponse(request);\n      code = oar.getCode();\n      state = oar.getState();\n      logger.info(\"code:{}\",code);\n      logger.info(\"state:{}\",state);\n    } catch (OAuthProblemException e) {\n      logger.error(\"OAuth response error\", e);\n      return \"redirect:/\";\n    }\n\n    OAuthClientRequest oauthRequest = OAuthClientRequest\n        .tokenProvider(OAuthProviderType.FACEBOOK)\n        .setClientId(config.getAppID())\n        .setClientSecret(config.getAppSecret())\n        .setRedirectURI(REDIRECT_URI)\n        .setGrantType(GrantType.AUTHORIZATION_CODE)\n        .setCode(code)\n        .buildBodyMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    GitHubTokenResponse oAuthResponse = oAuthClient.accessToken(oauthRequest, GitHubTokenResponse.class);\n\n    String accessToken = oAuthResponse.getAccessToken();\n    String scope = oAuthResponse.getScope();\n    String expiresIn = oAuthResponse.getParam(\"expires\");\n\n    logger.info(\"oAuthResponse:{}\", oAuthResponse.toString());\n    logger.info(\"accessToken:{}\",accessToken);\n    logger.info(\"scope:{}\",scope);\n    logger.info(\"expire:{}\",expiresIn);\n\n    request.getSession().setAttribute(\"accessToken\", accessToken);\n\n    return \"facebook/callback\";\n  }\n\n  @RequestMapping(value = \"/user\", method = RequestMethod.GET)\n  public String user(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws OAuthSystemException, OAuthProblemException {\n    logger.info(\"user\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(\"https://graph.facebook.com/me?fields=id,first_name,last_name,picture,email\")\n            .setAccessToken(accessToken)\n            .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"GET\", OAuthResourceResponse.class);\n    String userinfoJSON = resourceResponse.getBody();\n    logger.info(\"json:{}\", userinfoJSON);\n\n    try {\n      FacebookUserProfile userProfile = new ObjectMapper().readValue(userinfoJSON, FacebookUserProfile.class);\n      request.getSession().setAttribute(\"facebookId\", userProfile.getId());\n      model.addAttribute(\"userProfile\", userProfile);\n      logger.info(\"{}\", userProfile.toString());\n    } catch (IOException e) {\n      logger.error(\"Json parse error\", e);\n      return \"redirect:/\";\n    }\n\n    return \"facebook/user\";\n  }\n\n  @RequestMapping(value = \"/signout\", method = RequestMethod.GET)\n  public String signout(\n      HttpServletRequest request,\n      HttpServletResponse response,\n      Model model) throws IOException, OAuthSystemException, OAuthProblemException {\n    logger.info(\"signout\");\n\n    String accessToken = (String) request.getSession().getAttribute(\"accessToken\");\n    String facebookId = (String) request.getSession().getAttribute(\"facebookId\");\n\n    OAuthClientRequest bearerClientRequest =\n        new OAuthBearerClientRequest(\"https://graph.facebook.com/\" + facebookId + \"/permissions\")\n            .setAccessToken(accessToken)\n            .buildQueryMessage();\n\n    OAuthClient oAuthClient = new OAuthClient(new URLConnectionClient());\n    OAuthResourceResponse resourceResponse = oAuthClient.resource(bearerClientRequest, \"DELETE\", OAuthResourceResponse.class);\n    String json = resourceResponse.getBody();\n    logger.info(\"json:{}\", json);\n\n    return \"index\";\n  }\n\n}\n```\n\n#### Response Object\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookUserProfile implements Serializable {\n\n  private static final long serialVersionUID = 7957841067903054430L;\n\n  @JsonProperty(\"id\")\n  private String id;\n  @JsonProperty(\"last_name\")\n  private String lastName;\n  @JsonProperty(\"first_name\")\n  private String firstName;\n  @JsonProperty(\"email\")\n  private String email;\n  @JsonProperty(\"picture\")\n  private FacebookPicture picture;\n\n  public String getId() {\n    return id;\n  }\n  public void setId(String id) {\n    this.id = id;\n  }\n  public String getLastName() {\n    return lastName;\n  }\n  public void setLastName(String lastName) {\n    this.lastName = lastName;\n  }\n  public String getFirstName() {\n    return firstName;\n  }\n  public void setFirstName(String firstName) {\n    this.firstName = firstName;\n  }\n  public String getEmail() {\n    return email;\n  }\n  public void setEmail(String email) {\n    this.email = email;\n  }\n  public FacebookPicture getPicture() {\n    return picture;\n  }\n  public void setPicture(FacebookPicture picture) {\n    this.picture = picture;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookUserProfile [id=\" + id + \", lastName=\" + lastName\n        + \", firstName=\" + firstName + \", email=\" + email + \", picture=\"\n        + picture + \"]\";\n  }\n}\n```\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookPicture implements Serializable {\n\n  private static final long serialVersionUID = 5591928605444403203L;\n\n  @JsonProperty(\"data\")\n  private FacebookPictureData data;\n\n  public FacebookPictureData getData() {\n    return data;\n  }\n  public void setData(FacebookPictureData data) {\n    this.data = data;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookPicture [data=\" + data + \"]\";\n  }\n}\n```\n\n```java\npackage com.example.sbsns.oltu.web;\n\nimport java.io.Serializable;\n\nimport com.fasterxml.jackson.annotation.JsonIgnoreProperties;\nimport com.fasterxml.jackson.annotation.JsonProperty;\n\n@JsonIgnoreProperties(ignoreUnknown=true)\npublic class FacebookPictureData implements Serializable {\n\n  private static final long serialVersionUID = -857548118195277215L;\n\n  @JsonProperty(\"is_silhouette\")\n  private boolean isSilhouette;\n  @JsonProperty(\"url\")\n  private String url;\n\n  public boolean isSilhouette() {\n    return isSilhouette;\n  }\n  public void setSilhouette(boolean isSilhouette) {\n    this.isSilhouette = isSilhouette;\n  }\n  public String getUrl() {\n    return url;\n  }\n  public void setUrl(String url) {\n    this.url = url;\n  }\n\n  @Override\n  public String toString() {\n    return \"FacebookPictureData [isSilhouette=\" + isSilhouette + \", url=\" + url\n        + \"]\";\n  }\n}\n```\n", "tags": ["Java", "OAuth", "Oltu"]}