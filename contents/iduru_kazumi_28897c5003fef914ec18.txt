{"tags": ["dlang2.061"], "context": " More than 1 year has passed since last update.\n\n\u72af\u884c\u52d5\u6a5f\u3001\u304b\u304f\u8a9e\u308c\u308a\n\n\u3000D\u8a00\u8a9e\u306e\u914d\u5217\u304c\u4ed8\u3051\u8db3\u3057\u7b49\u306b\u3088\u3063\u3066\u3001\u3069\u306e\u3088\u3046\u306b\u5ef6\u9577\u3055\u308c\u308b\u306e\u304b\uff1f\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3000\u914d\u5217\u3092\u63a5\u7d9a\u3057\u305f\u969b\u3001\u30e1\u30e2\u30ea\u304c\u3069\u308c\u3060\u3051\u614c\u305f\u3060\u3057\u304f\u52d5\u304f\u306e\u304b\uff1f\u3092\u77e5\u3063\u3066\u304a\u304d\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u3002\n\n\u691c\u8a3c\n\n\u3000\u5185\u5bb9\u306f\u81f3\u3063\u3066\u7c21\u5358\u3002\n\nbyte\u578b\u52d5\u7684\u914d\u5217(buffer)\u306b1\u8981\u7d20(=1\u30d0\u30a4\u30c8)\u305a\u3064\u8db3\u3057\u3066\u3044\u304f\u3002\n\u914d\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9(buffer.ptr)\u304b\u3089\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u60c5\u5831(BlkAttr)\u3092\u3001GC.query\u95a2\u6570\u3067\u53d6\u308a\u51fa\u3059\u3002\n\u78ba\u4fdd\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u306e\u9577\u3055\u304c\u5909\u308f\u3063\u305f\u3089\u3001\u6a19\u6e96\u51fa\u529b\u3002\n\u51fa\u529b\u7d50\u679c\u3092\u3058\u3063\u304f\u308a\u305f\u3063\u3077\u308a\u306d\u3076\u308a\u3042\u3052\u308b\u3088\u3046\u306b\u89b3\u5bdf\u3002\n\n\u3000\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\ntestcode.d\nimport\n    core.memory ,\n    std.stdio ;\n\nvoid main()\n{\n    byte[] buffer;\n    void*  base = GC.query(buffer.ptr).base;\n    size_t size = GC.query(buffer.ptr).size;\n\n    writefln( \"length=% 8d, ptr=xxxxxxxx -> %08X, length=% 8d\",\n              buffer.length,\n              base,\n              size\n            );\n\n    foreach( i ; 0 .. 1024*1024 ){\n        buffer ~= 0;\n\n        auto bi = GC.query(buffer.ptr);\n\n        if( base != bi.base || size != bi.size ){\n            writefln( \"length=% 8d, ptr=%08X -> %08X, length=% 8d(% +8d)\",\n                      buffer.length,\n                      base,\n                      bi.base,\n                      bi.size,\n                      bi.size - size\n                    );\n            base = bi.base;\n            size = bi.size;\n        }\n    }\n}\n\n\n\n\u7d50\u679c\n\n\noutput:\nlength=       0, ptr=xxxxxxxx -> null, length=       0\nlength=       1, ptr=null -> 009D1FE0, length=      16(     +16)\nlength=      16, ptr=009D1FE0 -> 009D2FE0, length=      32(     +16)\nlength=      32, ptr=009D2FE0 -> 009D3FC0, length=      64(     +32)\nlength=      64, ptr=009D3FC0 -> 009D0F00, length=     128(     +64)\nlength=     128, ptr=009D0F00 -> 009D4F00, length=     256(    +128)\nlength=     256, ptr=009D4F00 -> 009D5E00, length=     512(    +256)\nlength=     511, ptr=009D5E00 -> 009D6C00, length=    1024(    +512)\nlength=    1023, ptr=009D6C00 -> 009D7800, length=    2048(   +1024)\nlength=    2047, ptr=009D7800 -> 00BD0000, length=    4096(   +2048)\nlength=    4080, ptr=00BD0000 -> 00BD0000, length=    8192(   +4096)\nlength=    8176, ptr=00BD0000 -> 00BD0000, length=   16384(   +8192)\nlength=   16368, ptr=00BD0000 -> 00BD0000, length=   28672(  +12288)\nlength=   28656, ptr=00BD0000 -> 00BD0000, length=   49152(  +20480)\nlength=   49136, ptr=00BD0000 -> 00BD0000, length=   65536(  +16384)\nlength=   65520, ptr=00BD0000 -> 00BD0000, length=   69632(   +4096)\nlength=   69616, ptr=00BD0000 -> 00BD0000, length=  110592(  +40960)\nlength=  110576, ptr=00BD0000 -> 00BD0000, length=  131072(  +20480)\nlength=  131056, ptr=00BD0000 -> 00BD0000, length=  135168(   +4096)\nlength=  135152, ptr=00BD0000 -> 00BD0000, length=  212992(  +77824)\nlength=  212976, ptr=00BD0000 -> 00BD0000, length=  262144(  +49152)\nlength=  262128, ptr=00BD0000 -> 00BD0000, length=  266240(   +4096)\nlength=  266224, ptr=00BD0000 -> 00BD0000, length=  405504( +139264)\nlength=  405488, ptr=00BD0000 -> 00BD0000, length=  458752(  +53248)\nlength=  458736, ptr=00BD0000 -> 00BD0000, length=  462848(   +4096)\nlength=  462832, ptr=00BD0000 -> 00BD0000, length=  704512( +241664)\nlength=  704496, ptr=00BD0000 -> 00BD0000, length=  720896(  +16384)\nlength=  720880, ptr=00BD0000 -> 00CD0000, length= 1081344( +360448)\n\n\n\u63a8\u5bdf(\u30bd\u30fc\u30b9\u3092\u898b\u305a\u306b)\n\n\n\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u9818\u57df\u3092\u305d\u306e\u5834\u304b\u3089\u4f38\u5f35\u3067\u304d\u308b\u5834\u5408\u3001\u4f38\u3070\u3059\uff08\u81ea\u52d5\u3067\u4f38\u3070\u3059\u9577\u3055\u306b\u6cd5\u5247\u6027\u304c\u898b\u51fa\u3060\u305b\u305a\uff09\u3002\n\u4f38\u5f35\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u518d\u78ba\u4fdd+\u914d\u5217\u30b3\u30d4\u30fc\u3092\u5b9f\u65bd\u3002\n\n\n\u307e\u3060\u8abf\u3079\u305f\u3044\u3053\u3068\n\n\u3000\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u74b0\u5883\u4e0b\u3067\u306e\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u6027\u80fd\u3068\u304b\u3082\u6c17\u306b\u306a\u308b\u6240\u3002\u3068\u306f\u3044\u3048\u3001\u5b9f\u884c\u901f\u5ea6\u306b\u30bb\u30f3\u30b7\u30c6\u30a3\u30d6\u306a\u904b\u7528\uff08\u30b2\u30fc\u30e0\u30e6\u30fc\u30b9\u3068\u304b\uff09\u3060\u3068\u3001\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u7cfb\u547d\u4ee4\u306e\u5b9f\u884c\u6a5f\u4f1a\u6700\u5c0f\u5316\u3092\u76ee\u6307\u3059\u5de5\u592b\u304c\u5fc5\u8981\u304b\u3082\u3002\n#\u72af\u884c\u52d5\u6a5f\u3001\u304b\u304f\u8a9e\u308c\u308a\n---\n\u3000D\u8a00\u8a9e\u306e\u914d\u5217\u304c\u4ed8\u3051\u8db3\u3057\u7b49\u306b\u3088\u3063\u3066\u3001\u3069\u306e\u3088\u3046\u306b\u5ef6\u9577\u3055\u308c\u308b\u306e\u304b\uff1f\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3000\u914d\u5217\u3092\u63a5\u7d9a\u3057\u305f\u969b\u3001\u30e1\u30e2\u30ea\u304c\u3069\u308c\u3060\u3051\u614c\u305f\u3060\u3057\u304f\u52d5\u304f\u306e\u304b\uff1f\u3092\u77e5\u3063\u3066\u304a\u304d\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u3002\n\n#\u691c\u8a3c\n---\n\u3000\u5185\u5bb9\u306f\u81f3\u3063\u3066\u7c21\u5358\u3002\n\n1. byte\u578b\u52d5\u7684\u914d\u5217(buffer)\u306b1\u8981\u7d20(=1\u30d0\u30a4\u30c8)\u305a\u3064\u8db3\u3057\u3066\u3044\u304f\u3002\n2. \u914d\u5217\u306e\u5148\u982d\u30a2\u30c9\u30ec\u30b9(buffer.ptr)\u304b\u3089\u30e1\u30e2\u30ea\u30d6\u30ed\u30c3\u30af\u60c5\u5831(BlkAttr)\u3092\u3001GC.query\u95a2\u6570\u3067\u53d6\u308a\u51fa\u3059\u3002\n3. \u78ba\u4fdd\u5148\u982d\u30a2\u30c9\u30ec\u30b9\u3068\u305d\u306e\u9577\u3055\u304c\u5909\u308f\u3063\u305f\u3089\u3001\u6a19\u6e96\u51fa\u529b\u3002\n4. \u51fa\u529b\u7d50\u679c\u3092\u3058\u3063\u304f\u308a\u305f\u3063\u3077\u308a\u306d\u3076\u308a\u3042\u3052\u308b\u3088\u3046\u306b\u89b3\u5bdf\u3002\n\n\u3000\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n```d:testcode.d\nimport\n    core.memory ,\n    std.stdio ;\n\nvoid main()\n{\n    byte[] buffer;\n    void*  base = GC.query(buffer.ptr).base;\n    size_t size = GC.query(buffer.ptr).size;\n    \n    writefln( \"length=% 8d, ptr=xxxxxxxx -> %08X, length=% 8d\",\n              buffer.length,\n              base,\n              size\n            );\n    \n    foreach( i ; 0 .. 1024*1024 ){\n        buffer ~= 0;\n        \n        auto bi = GC.query(buffer.ptr);\n        \n        if( base != bi.base || size != bi.size ){\n            writefln( \"length=% 8d, ptr=%08X -> %08X, length=% 8d(% +8d)\",\n                      buffer.length,\n                      base,\n                      bi.base,\n                      bi.size,\n                      bi.size - size\n                    );\n            base = bi.base;\n            size = bi.size;\n        }\n    }\n}\n```\n\n#\u7d50\u679c\n---\n> output:\n> length=       0, ptr=xxxxxxxx -> null, length=       0\n> length=       1, ptr=null -> 009D1FE0, length=      16(     +16)\n> length=      16, ptr=009D1FE0 -> 009D2FE0, length=      32(     +16)\n> length=      32, ptr=009D2FE0 -> 009D3FC0, length=      64(     +32)\n> length=      64, ptr=009D3FC0 -> 009D0F00, length=     128(     +64)\n> length=     128, ptr=009D0F00 -> 009D4F00, length=     256(    +128)\n> length=     256, ptr=009D4F00 -> 009D5E00, length=     512(    +256)\n> length=     511, ptr=009D5E00 -> 009D6C00, length=    1024(    +512)\n> length=    1023, ptr=009D6C00 -> 009D7800, length=    2048(   +1024)\n> length=    2047, ptr=009D7800 -> 00BD0000, length=    4096(   +2048)\n> length=    4080, ptr=00BD0000 -> 00BD0000, length=    8192(   +4096)\n> length=    8176, ptr=00BD0000 -> 00BD0000, length=   16384(   +8192)\n> length=   16368, ptr=00BD0000 -> 00BD0000, length=   28672(  +12288)\n> length=   28656, ptr=00BD0000 -> 00BD0000, length=   49152(  +20480)\n> length=   49136, ptr=00BD0000 -> 00BD0000, length=   65536(  +16384)\n> length=   65520, ptr=00BD0000 -> 00BD0000, length=   69632(   +4096)\n> length=   69616, ptr=00BD0000 -> 00BD0000, length=  110592(  +40960)\n> length=  110576, ptr=00BD0000 -> 00BD0000, length=  131072(  +20480)\n> length=  131056, ptr=00BD0000 -> 00BD0000, length=  135168(   +4096)\n> length=  135152, ptr=00BD0000 -> 00BD0000, length=  212992(  +77824)\n> length=  212976, ptr=00BD0000 -> 00BD0000, length=  262144(  +49152)\n> length=  262128, ptr=00BD0000 -> 00BD0000, length=  266240(   +4096)\n> length=  266224, ptr=00BD0000 -> 00BD0000, length=  405504( +139264)\n> length=  405488, ptr=00BD0000 -> 00BD0000, length=  458752(  +53248)\n> length=  458736, ptr=00BD0000 -> 00BD0000, length=  462848(   +4096)\n> length=  462832, ptr=00BD0000 -> 00BD0000, length=  704512( +241664)\n> length=  704496, ptr=00BD0000 -> 00BD0000, length=  720896(  +16384)\n> length=  720880, ptr=00BD0000 -> 00CD0000, length= 1081344( +360448)\n\n#\u63a8\u5bdf(\u30bd\u30fc\u30b9\u3092\u898b\u305a\u306b)\n---\n1. \u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u9818\u57df\u3092\u305d\u306e\u5834\u304b\u3089\u4f38\u5f35\u3067\u304d\u308b\u5834\u5408\u3001\u4f38\u3070\u3059\uff08\u81ea\u52d5\u3067\u4f38\u3070\u3059\u9577\u3055\u306b\u6cd5\u5247\u6027\u304c\u898b\u51fa\u3060\u305b\u305a\uff09\u3002\n2. \u4f38\u5f35\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u518d\u78ba\u4fdd+\u914d\u5217\u30b3\u30d4\u30fc\u3092\u5b9f\u65bd\u3002\n\n#\u307e\u3060\u8abf\u3079\u305f\u3044\u3053\u3068\n---\n\u3000\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u74b0\u5883\u4e0b\u3067\u306e\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u6027\u80fd\u3068\u304b\u3082\u6c17\u306b\u306a\u308b\u6240\u3002\u3068\u306f\u3044\u3048\u3001\u5b9f\u884c\u901f\u5ea6\u306b\u30bb\u30f3\u30b7\u30c6\u30a3\u30d6\u306a\u904b\u7528\uff08\u30b2\u30fc\u30e0\u30e6\u30fc\u30b9\u3068\u304b\uff09\u3060\u3068\u3001\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u7cfb\u547d\u4ee4\u306e\u5b9f\u884c\u6a5f\u4f1a\u6700\u5c0f\u5316\u3092\u76ee\u6307\u3059\u5de5\u592b\u304c\u5fc5\u8981\u304b\u3082\u3002"}