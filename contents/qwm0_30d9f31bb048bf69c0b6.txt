{"context": "Backlog\u306b\u6bce\u6708\u306e\u30eb\u30fc\u30c1\u30f3\u30ef\u30fc\u30af\u7b49\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u4f8b\u3067\u3059\u3002\nBackloglib\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001DueDate\u306e\u5024\u6e21\u3057\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3001Backlog API v1(XML-RPC)\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u305f\u3081\u30e6\u30fc\u30b6/\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u305d\u3046\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u3067HTTP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002HTTP\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066Requests\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u8a8d\u8a3c\u306b\u3064\u3044\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u6bce\u306bAPI Key\u3092\u98db\u3070\u3059\u65b9\u5f0f\u3092\u5229\u7528\u3001API Key\u306e\u767a\u884c\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306fBackLog API\u306e\u8a2d\u5b9a\u3092\u53c2\u7167\u3002\n\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8(priorityId\u306a\u3069)\u306e\u53d6\u308a\u3046\u308b\u5024\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3002\nprojectId\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u753b\u9762\u306eURL https://(yourspace).backlog.jp/EditProject.action?project.id=123456789\u306eproject.id\u304b\u3089\u3001\ncategoryId[]\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u753b\u9762\u306eURL https://(yourspace).backlog.jp/EditComponent.action?component.id=123456789\u306ecomponent.id\u304b\u3089\u62fe\u3048\u307e\u3059\u3002\nPython 2.7.10, requests 2.5.0\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u3002\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport requests\nimport datetime\nfrom time import sleep\n\ndef addIssue(summary,due_date):\n    # Set the API endpoint\n    # Backlog API v2\n    url = \"https://(yourspace).backlog.jp/api/v2/issues\"\n    payload = {\n            'apiKey':      'your api key',\n            'issueTypeId': 1,\n            'projectId':   (your project ID),\n            'summary':     summary,\n            'priorityId':  3,\n            'description': u'\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3088\u308b\u81ea\u52d5\u6295\u7a3f\u3067\u3059\u3002',\n            'categoryId[]':(your category ID),\n            'dueDate':     due_date,\n    }\n    r = requests.post(url, params=payload)\n    print(r.text)\n\n# example: batch addition using for loop\nfor iterator_month in range(5,10):\n    # create summary and due_date\n    cursor_date    = datetime.date(2016,iterator_month,1)\n    summary  = u'\u30b5\u30f3\u30d7\u30eb\u30bf\u30b9\u30af(' +  cursor_date.strftime(\"%Y/%m\") + u'\u7528)'\n    due_date = cursor_date.strftime(\"%Y-%m-%d\") \n    # add issue\n    addIssue(summary,due_date)\n    # just in case\n    sleep(1)\n\nBacklog\u306b\u6bce\u6708\u306e\u30eb\u30fc\u30c1\u30f3\u30ef\u30fc\u30af\u7b49\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u4f8b\u3067\u3059\u3002\n[Backloglib](https://github.com/tksmd/backloglib)\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u304c\u3001DueDate\u306e\u5024\u6e21\u3057\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3001Backlog API v1(XML-RPC)\u306e\u30e9\u30c3\u30d1\u30fc\u306e\u305f\u3081\u30e6\u30fc\u30b6/\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u304c\u5fc5\u8981\u305d\u3046\u3001\u3068\u3044\u3046\u3068\u3053\u308d\u3067HTTP\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002HTTP\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066[Requests](http://requests-docs-ja.readthedocs.org/en/latest/user/quickstart/)\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u8a8d\u8a3c\u306b\u3064\u3044\u3066\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u6bce\u306bAPI Key\u3092\u98db\u3070\u3059\u65b9\u5f0f\u3092\u5229\u7528\u3001API Key\u306e\u767a\u884c\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f[BackLog API\u306e\u8a2d\u5b9a](http://www.backlog.jp/help/usersguide/personal-settings/userguide2378.html)\u3092\u53c2\u7167\u3002\n\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](http://developer.nulab-inc.com/ja/docs/backlog/api/2/add-issue)\u3092\u53c2\u7167\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4e00\u90e8(priorityId\u306a\u3069)\u306e\u53d6\u308a\u3046\u308b\u5024\u306b\u3064\u3044\u3066\u306f[\u3053\u3061\u3089](https://www.backlog.jp/developer/api/xml-rpc/method3_3.html)\u3092\u53c2\u7167\u3002\nprojectId\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u753b\u9762\u306eURL `https://(yourspace).backlog.jp/EditProject.action?project.id=123456789`\u306eproject.id\u304b\u3089\u3001\ncategoryId[]\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u8a2d\u5b9a\u753b\u9762\u306eURL `https://(yourspace).backlog.jp/EditComponent.action?component.id=123456789`\u306ecomponent.id\u304b\u3089\u62fe\u3048\u307e\u3059\u3002\n\nPython 2.7.10, requests 2.5.0\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\u3002\n\n```\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport requests\nimport datetime\nfrom time import sleep\n\ndef addIssue(summary,due_date):\n    # Set the API endpoint\n    # Backlog API v2\n    url = \"https://(yourspace).backlog.jp/api/v2/issues\"\n    payload = {\n    \t\t'apiKey':      'your api key',\n    \t\t'issueTypeId': 1,\n    \t\t'projectId':   (your project ID),\n    \t\t'summary':     summary,\n    \t\t'priorityId':  3,\n    \t\t'description': u'\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u3088\u308b\u81ea\u52d5\u6295\u7a3f\u3067\u3059\u3002',\n    \t\t'categoryId[]':(your category ID),\n    \t\t'dueDate':     due_date,\n    }\n    r = requests.post(url, params=payload)\n    print(r.text)\n\n# example: batch addition using for loop\nfor iterator_month in range(5,10):\n    # create summary and due_date\n    cursor_date    = datetime.date(2016,iterator_month,1)\n    summary  = u'\u30b5\u30f3\u30d7\u30eb\u30bf\u30b9\u30af(' +  cursor_date.strftime(\"%Y/%m\") + u'\u7528)'\n    due_date = cursor_date.strftime(\"%Y-%m-%d\") \n    # add issue\n    addIssue(summary,due_date)\n    # just in case\n    sleep(1)\n```\n", "tags": ["backlog"]}