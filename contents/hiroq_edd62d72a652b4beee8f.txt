{"context": "\n\n\u306f\u3058\u3081\u306b\nRxJava\u306e\u30ea\u30c8\u30e9\u30a4\u304c\u3044\u3044\u611f\u3058\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001RxJava\u30b9\u30bf\u30a4\u30eb\u306eAndroid\u5411\u3051WebSocketClient\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\u304a\u8a71\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\nRxWebSocketClient\n\n\u4f5c\u6210\u306e\u80cc\u666f\n\u6700\u8fd1RxJava\u3092\u5c0e\u5165\u3057\u306f\u3058\u3081\u3066\u3044\u3066\u3001\u975e\u5e38\u306b\u4f7f\u3044\u52dd\u624b\u304c\u826f\u304f\u3066\u898b\u901a\u3057\u304c\u826f\u304f\u306a\u308b\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308c\u3070\u3001\u7121\u7406\u306bRx\u306b\u3053\u3060\u308f\u3063\u3066\u610f\u5473\u4e0d\u660e\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001\u9069\u6750\u9069\u6240\u304c\u91cd\u8981\u3060\u3068\u3064\u304f\u3065\u304f\u601d\u3046\u3002\n\u305d\u3093\u306a\u4e2dRxJava\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u8aad\u3093\u3067\u3001RxJava\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u306a\u304b\u306a\u304b\u8208\u5473\u6df1\u3044\u306a\u3068\u601d\u3063\u305f\u3002\n\u4f8b\u3048\u3070\u3001\u305a\u30fc\u3063\u3068\u63a5\u7d9a\u3057\u3063\u3071\u306a\u3057\u306b\u3057\u305f\u3044\u74b0\u5883\u306b\u304a\u3044\u3066\u3001\u9014\u4e2d\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u3001\u518d\u5ea6\u63a5\u7d9a\u3092\u3057\u76f4\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u601d\u3046\u3068\u610f\u5916\u3068\u7169\u96d1\u306b\u306a\u308b\u3002\uff08\u3072\u3068\u6614\u524d\u306a\u3089goto\u6587\u3067GO!\u3068\u98db\u3070\u3059\u306e\u3060\u308d\u3046\u3051\u3069\u3002\u3002\u3002\uff09\n\u5148\u306b\u7d39\u4ecb\u3057\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30da\u30fc\u30b8\u306b\u3088\u308c\u3070\u3001\u629c\u7c8b\u3067\u306f\u3042\u308b\u304c\u51e6\u7406\u3092\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u305f\u3044\u5834\u5408\u3001\u6982\u306d\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3002\nObservable\n    .create(new Observable.OnSubscribe<String>() {\n    })\n    .retry(new Func2<Integer, Throwable, Boolean>() {\n        @Override\n        public Boolean call(Integer count, Throwable throwable) {\n            // \u30a8\u30e9\u30fc\u6642\u306e\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\uff08true\u306a\u3089\u3070\u3001create\u304b\u3089\u3084\u308a\u76f4\u3057\u3001\u6700\u59275\u56de\u307e\u3067\uff09\n            if(count < 5){\n                return true;\n            } else {\n                return false;\n            }\n        }\n     })\n     .subscribe(new Subscriber<String>() {\n         // \u30e1\u30a4\u30f3\u51e6\u7406\n      });\n\n\u91cd\u8981\u306a\u306e\u306f\u3001retry\u30e1\u30bd\u30c3\u30c9\u306b\u660e\u793a\u7684\u306a\u51e6\u7406\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u3042\u308b\u3068\u601d\u3046\u3002\u7d50\u679c\u7684\u306b\u3001\u672c\u6765\u3084\u308b\u3079\u304d\u51e6\u7406\u304csubscribe\u3001\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u306fretry(retryWhen)\u3068\u7dba\u9e97\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3057\u3001\u30ea\u30c8\u30e9\u30a4\u306e\u7e70\u308a\u8fd4\u3057\u3082retry(retryWhen)\u306b\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3067\u304d\u3066\u3044\u308b\u3002\n\n\u30ea\u30c8\u30e9\u30a4\u306b\u6e21\u3059Func\u306e\u5f15\u6570\u304c\u5206\u304b\u308a\u3065\u3089\u3044\u3068\u3044\u306e\u306f\u6307\u6458\u3068\u3057\u3066\u5341\u5206\u306b\u3042\u308b\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3002\u3002\u3002\n\n\u305d\u3093\u306a\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u5e38\u6642\u63a5\u7d9a\u3001\u5207\u308c\u305f\u3089\u518d\u63a5\u7d9a\u306e\u3088\u3046\u306a\u8981\u4ef6\u306e\u901a\u4fe1\u30d7\u30ed\u30b0\u30e9\u30e0\u306bRxJava\u306f\u76f8\u6027\u304c\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5e38\u6642\u63a5\u7d9a\u304c\u671f\u5f85\u3055\u308c\u308bWebSocket\u306eClient\u3092RxJava\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u3044\u3046\u306e\u304c\u3001\u3053\u3068\u306e\u80cc\u666f\u3002\n\n\u4f7f\u7528\u4f8b\n\u4ee5\u4e0b\u306f\u3001WebSocket\u306eEvent\u304c\u6d41\u308c\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092subscribe\u3067\u51e6\u7406\u3057\u3066\u3001\u901a\u4fe1\u65ad\u3092\u4f34\u3046\u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001retryWhen\u306b\u30661\u79d2\u5f8c\u306b\u518d\u63a5\u7d9a\u3092\u884c\u3046\u53c2\u8003\u5b9f\u88c5\u3060\u3002\nretryWhen\u306e\u4e2d\u3067flatMap\u3057\u3066\u308b\u3042\u305f\u308a\u304a\u4e16\u8f9e\u306b\u3082\u7dba\u9e97\u306a\u30b3\u30fc\u30c9\u304b\u3068\u8a00\u308f\u308c\u308b\u3068\u602a\u3057\u3044\u3002\u3060\u3051\u3069\u3001RxJava\u3092\u4f7f\u308f\u305a\u9045\u5ef6\u30ed\u30b8\u30c3\u30af\u3092\u542b\u3093\u3060\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3046\u3068\u3001\u30bf\u30a4\u30de\u30fc\u3092\u4f75\u7528\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u5f80\u3005\u306b\u3057\u3066\u4e0d\u5177\u5408\u306e\u6e29\u5e8a\u3068\u306a\u308a\u305d\u3046\u306a\u30b3\u30fc\u30c9\u306a\u306e\u306f\u5b89\u6613\u306b\u60f3\u50cf\u3067\u304d\u308b\u308f\u3051\u3067\u3001\u597d\u304d\u5acc\u3044\u306f\u5206\u304b\u308c\u308b\u306b\u305b\u3088\u3001\u3053\u306e\u3059\u3063\u304d\u308a\u611f\u306f\u60aa\u304f\u306a\u3044\u3002\uff08lambda\u3092\u4f7f\u3048\u3070\u3082\u3046\u5c11\u3057\u3059\u3063\u304d\u308a\uff09\n\n\u3053\u306e\u4f8b\u3067\u306f1\u79d2\u306e\u9045\u5ef6\u3092\u5165\u308c\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u306e\u3067retryWhen\u3092\u4f7f\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u3059\u3050\u306b\u30ea\u30c8\u30e9\u30a4\u3092\u3057\u305f\u3051\u308c\u3070\u3001\u524d\u8ff0\u306eretry\u3092\u4f7f\u3048\u3070\u3088\u3044\n\nmSocketClient = new RxWebSocketClient();\nmSubscription = mSocketClient.connect(Uri.parse(\"ws://hogehoge\"))\n        .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n            @Override\n            public Observable<?> call(final Observable<? extends Throwable> observable) {\n                return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(Throwable throwable) {\n                        // \u901a\u4fe1\u30a8\u30e9\u30fc\u306e\u5834\u5408\u30011\u79d2\u5f8c\u306b\u518d\u63a5\u7d9a\n                        if (throwable instanceof ConnectionException) {\n                            Log.d(TAG, \"retry with delay\");\n                            return Observable.timer(1, TimeUnit.SECONDS);\n                        }else {\n                            // \u901a\u4fe1\u30a8\u30e9\u30fc\u4ee5\u5916\u306fonError\u306b\u56de\u3059\n                            return Observable.error(throwable);\n                        }\n                    }\n                });\n            }\n        })\n        .subscribeOn(Schedulers.newThread())\n        .observeOn(AndroidSchedulers.mainThread())\n        .subscribe(new Action1<RxWebSocketClient.Event>() {\n            @Override\n            public void call(RxWebSocketClient.Event event) {\n                // WebSocket\u3067\u884c\u3044\u305f\u3044\u30e1\u30a4\u30f3\u306e\u51e6\u7406\n                Log.d(TAG, \"== onNext ==\");\n                switch (event.getType()) {\n                    case CONNECT:\n                        Log.d(TAG, \"  CONNECT\");\n                        mSocketClient.send(\"test\");\n                        break;\n                    case DISCONNECT:\n                        Log.d(TAG, \"  DISCONNECT\");\n                        break;\n                    case MESSAGE_BINARY:\n                        Log.d(TAG, \"  MESSAGE_BINARY : bytes = \" + event.getBytes().length);\n                        break;\n                    case MESSAGE_STRING:\n                        Log.d(TAG, \"  MESSAGE_STRING = \" + event.getString());\n                        break;\n                }\n            }\n        }, new Action1<Throwable>() {\n            @Override\n            public void call(Throwable throwable) {\n                // \u901a\u4fe1\u30a8\u30e9\u30fc\u4ee5\u5916\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n                Log.d(TAG, \"== onError ==\");\n                throwable.printStackTrace();\n            }\n        });\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5ba3\u4f1d\u3061\u3063\u304f\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u7c21\u6613\u306eWebSocket\u30b5\u30fc\u30d0\u540c\u68b1\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u3042\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u306fRxWebSocketClient\u3078\u3002\n\n\u6700\u5f8c\u306b\n\u307e\u3060RxJava\u6b74\u306f\u77ed\u3044\u306e\u3067\u3001Rx\u306e\u4f7f\u3044\u65b9\u9593\u9055\u3063\u3066\u308b\u3088\uff01\u3068\u304b\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u3044\u307e\u3059\uff01\n# \u306f\u3058\u3081\u306b\nRxJava\u306e\u30ea\u30c8\u30e9\u30a4\u304c\u3044\u3044\u611f\u3058\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3001RxJava\u30b9\u30bf\u30a4\u30eb\u306eAndroid\u5411\u3051WebSocketClient\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u307f\u305f\u304a\u8a71\n\n# \u30ea\u30dd\u30b8\u30c8\u30ea\n[RxWebSocketClient](https://github.com/hiroq/RxWebSocketClient)\n\n# \u4f5c\u6210\u306e\u80cc\u666f\n\u6700\u8fd1RxJava\u3092\u5c0e\u5165\u3057\u306f\u3058\u3081\u3066\u3044\u3066\u3001\u975e\u5e38\u306b\u4f7f\u3044\u52dd\u624b\u304c\u826f\u304f\u3066\u898b\u901a\u3057\u304c\u826f\u304f\u306a\u308b\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u308c\u3070\u3001\u7121\u7406\u306bRx\u306b\u3053\u3060\u308f\u3063\u3066\u610f\u5473\u4e0d\u660e\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3053\u3068\u3082\u3042\u308b\u306e\u3067\u3001\u9069\u6750\u9069\u6240\u304c\u91cd\u8981\u3060\u3068\u3064\u304f\u3065\u304f\u601d\u3046\u3002\n\u305d\u3093\u306a\u4e2d[RxJava\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0](http://qiita.com/boohbah/items/108b378c5cb593c666e6)\u3092\u8aad\u3093\u3067\u3001RxJava\u306e\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u306a\u304b\u306a\u304b\u8208\u5473\u6df1\u3044\u306a\u3068\u601d\u3063\u305f\u3002\n\n\u4f8b\u3048\u3070\u3001\u305a\u30fc\u3063\u3068\u63a5\u7d9a\u3057\u3063\u3071\u306a\u3057\u306b\u3057\u305f\u3044\u74b0\u5883\u306b\u304a\u3044\u3066\u3001\u9014\u4e2d\u4f55\u3089\u304b\u306e\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u3063\u305f\u5834\u5408\u3001\u518d\u5ea6\u63a5\u7d9a\u3092\u3057\u76f4\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3053\u3046\u3068\u601d\u3046\u3068\u610f\u5916\u3068\u7169\u96d1\u306b\u306a\u308b\u3002\uff08\u3072\u3068\u6614\u524d\u306a\u3089goto\u6587\u3067GO!\u3068\u98db\u3070\u3059\u306e\u3060\u308d\u3046\u3051\u3069\u3002\u3002\u3002\uff09\n\n\u5148\u306b\u7d39\u4ecb\u3057\u305f\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u30da\u30fc\u30b8\u306b\u3088\u308c\u3070\u3001\u629c\u7c8b\u3067\u306f\u3042\u308b\u304c\u51e6\u7406\u3092\u30ea\u30c8\u30e9\u30a4\u3055\u305b\u305f\u3044\u5834\u5408\u3001\u6982\u306d\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u306b\u306a\u308b\u3002\n\n```java\nObservable\n    .create(new Observable.OnSubscribe<String>() {\n    })\n    .retry(new Func2<Integer, Throwable, Boolean>() {\n        @Override\n        public Boolean call(Integer count, Throwable throwable) {\n            // \u30a8\u30e9\u30fc\u6642\u306e\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\uff08true\u306a\u3089\u3070\u3001create\u304b\u3089\u3084\u308a\u76f4\u3057\u3001\u6700\u59275\u56de\u307e\u3067\uff09\n            if(count < 5){\n                return true;\n            } else {\n                return false;\n            }\n        }\n     })\n     .subscribe(new Subscriber<String>() {\n         // \u30e1\u30a4\u30f3\u51e6\u7406\n      });\n```\n\n\u91cd\u8981\u306a\u306e\u306f\u3001retry\u30e1\u30bd\u30c3\u30c9\u306b\u660e\u793a\u7684\u306a\u51e6\u7406\u3092\u6e21\u3059\u3053\u3068\u3067\u3001\u30ea\u30c8\u30e9\u30a4\u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u3053\u3068\u306b\u3042\u308b\u3068\u601d\u3046\u3002\u7d50\u679c\u7684\u306b\u3001\u672c\u6765\u3084\u308b\u3079\u304d\u51e6\u7406\u304csubscribe\u3001\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u306fretry(retryWhen)\u3068\u7dba\u9e97\u306b\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3057\u3001\u30ea\u30c8\u30e9\u30a4\u306e\u7e70\u308a\u8fd4\u3057\u3082retry(retryWhen)\u306b\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3067\u304d\u3066\u3044\u308b\u3002\n\n> \u30ea\u30c8\u30e9\u30a4\u306b\u6e21\u3059Func\u306e\u5f15\u6570\u304c\u5206\u304b\u308a\u3065\u3089\u3044\u3068\u3044\u306e\u306f\u6307\u6458\u3068\u3057\u3066\u5341\u5206\u306b\u3042\u308b\u3068\u601d\u3046\u306e\u3060\u3051\u3069\u3002\u3002\u3002\n\n\u305d\u3093\u306a\u3053\u3068\u3092\u8003\u3048\u3066\u3044\u305f\u3068\u3053\u308d\u3001\u5e38\u6642\u63a5\u7d9a\u3001\u5207\u308c\u305f\u3089\u518d\u63a5\u7d9a\u306e\u3088\u3046\u306a\u8981\u4ef6\u306e\u901a\u4fe1\u30d7\u30ed\u30b0\u30e9\u30e0\u306bRxJava\u306f\u76f8\u6027\u304c\u3044\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5e38\u6642\u63a5\u7d9a\u304c\u671f\u5f85\u3055\u308c\u308bWebSocket\u306eClient\u3092RxJava\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3063\u305f\u3068\u3044\u3046\u306e\u304c\u3001\u3053\u3068\u306e\u80cc\u666f\u3002\n\n\n# \u4f7f\u7528\u4f8b\n\u4ee5\u4e0b\u306f\u3001WebSocket\u306eEvent\u304c\u6d41\u308c\u308b\u30b9\u30c8\u30ea\u30fc\u30e0\u3092subscribe\u3067\u51e6\u7406\u3057\u3066\u3001\u901a\u4fe1\u65ad\u3092\u4f34\u3046\u901a\u4fe1\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306f\u3001retryWhen\u306b\u30661\u79d2\u5f8c\u306b\u518d\u63a5\u7d9a\u3092\u884c\u3046\u53c2\u8003\u5b9f\u88c5\u3060\u3002\nretryWhen\u306e\u4e2d\u3067flatMap\u3057\u3066\u308b\u3042\u305f\u308a\u304a\u4e16\u8f9e\u306b\u3082\u7dba\u9e97\u306a\u30b3\u30fc\u30c9\u304b\u3068\u8a00\u308f\u308c\u308b\u3068\u602a\u3057\u3044\u3002\u3060\u3051\u3069\u3001RxJava\u3092\u4f7f\u308f\u305a\u9045\u5ef6\u30ed\u30b8\u30c3\u30af\u3092\u542b\u3093\u3060\u30ea\u30c8\u30e9\u30a4\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u3088\u3046\u3068\u601d\u3046\u3068\u3001\u30bf\u30a4\u30de\u30fc\u3092\u4f75\u7528\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\u5f80\u3005\u306b\u3057\u3066\u4e0d\u5177\u5408\u306e\u6e29\u5e8a\u3068\u306a\u308a\u305d\u3046\u306a\u30b3\u30fc\u30c9\u306a\u306e\u306f\u5b89\u6613\u306b\u60f3\u50cf\u3067\u304d\u308b\u308f\u3051\u3067\u3001\u597d\u304d\u5acc\u3044\u306f\u5206\u304b\u308c\u308b\u306b\u305b\u3088\u3001\u3053\u306e\u3059\u3063\u304d\u308a\u611f\u306f\u60aa\u304f\u306a\u3044\u3002\uff08lambda\u3092\u4f7f\u3048\u3070\u3082\u3046\u5c11\u3057\u3059\u3063\u304d\u308a\uff09\n\n> \u3053\u306e\u4f8b\u3067\u306f1\u79d2\u306e\u9045\u5ef6\u3092\u5165\u308c\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u306e\u3067retryWhen\u3092\u4f7f\u3063\u3066\u3044\u308b\u3051\u3069\u3001\u3059\u3050\u306b\u30ea\u30c8\u30e9\u30a4\u3092\u3057\u305f\u3051\u308c\u3070\u3001\u524d\u8ff0\u306eretry\u3092\u4f7f\u3048\u3070\u3088\u3044\n\n```java\nmSocketClient = new RxWebSocketClient();\nmSubscription = mSocketClient.connect(Uri.parse(\"ws://hogehoge\"))\n        .retryWhen(new Func1<Observable<? extends Throwable>, Observable<?>>() {\n            @Override\n            public Observable<?> call(final Observable<? extends Throwable> observable) {\n                return observable.flatMap(new Func1<Throwable, Observable<?>>() {\n                    @Override\n                    public Observable<?> call(Throwable throwable) {\n                        // \u901a\u4fe1\u30a8\u30e9\u30fc\u306e\u5834\u5408\u30011\u79d2\u5f8c\u306b\u518d\u63a5\u7d9a\n                        if (throwable instanceof ConnectionException) {\n                            Log.d(TAG, \"retry with delay\");\n                            return Observable.timer(1, TimeUnit.SECONDS);\n                        }else {\n                            // \u901a\u4fe1\u30a8\u30e9\u30fc\u4ee5\u5916\u306fonError\u306b\u56de\u3059\n                            return Observable.error(throwable);\n                        }\n                    }\n                });\n            }\n        })\n        .subscribeOn(Schedulers.newThread())\n        .observeOn(AndroidSchedulers.mainThread())\n        .subscribe(new Action1<RxWebSocketClient.Event>() {\n            @Override\n            public void call(RxWebSocketClient.Event event) {\n                // WebSocket\u3067\u884c\u3044\u305f\u3044\u30e1\u30a4\u30f3\u306e\u51e6\u7406\n                Log.d(TAG, \"== onNext ==\");\n                switch (event.getType()) {\n                    case CONNECT:\n                        Log.d(TAG, \"  CONNECT\");\n                        mSocketClient.send(\"test\");\n                        break;\n                    case DISCONNECT:\n                        Log.d(TAG, \"  DISCONNECT\");\n                        break;\n                    case MESSAGE_BINARY:\n                        Log.d(TAG, \"  MESSAGE_BINARY : bytes = \" + event.getBytes().length);\n                        break;\n                    case MESSAGE_STRING:\n                        Log.d(TAG, \"  MESSAGE_STRING = \" + event.getString());\n                        break;\n                }\n            }\n        }, new Action1<Throwable>() {\n            @Override\n            public void call(Throwable throwable) {\n                // \u901a\u4fe1\u30a8\u30e9\u30fc\u4ee5\u5916\u306e\u30a8\u30e9\u30fc\u51e6\u7406\n                Log.d(TAG, \"== onError ==\");\n                throwable.printStackTrace();\n            }\n        });\n```\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u5ba3\u4f1d\u3061\u3063\u304f\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u3051\u3069\u3001\u7c21\u6613\u306eWebSocket\u30b5\u30fc\u30d0\u540c\u68b1\u306e\u30b5\u30f3\u30d7\u30eb\u3082\u3042\u308b\u306e\u3067\u3001\u8a73\u3057\u304f\u306f[RxWebSocketClient](https://github.com/hiroq/RxWebSocketClient)\u3078\u3002\n\n# \u6700\u5f8c\u306b\n\u307e\u3060RxJava\u6b74\u306f\u77ed\u3044\u306e\u3067\u3001Rx\u306e\u4f7f\u3044\u65b9\u9593\u9055\u3063\u3066\u308b\u3088\uff01\u3068\u304b\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u3044\u307e\u3059\uff01\n", "tags": ["Android", "websocket", "RxJava", "RxAndroid"]}