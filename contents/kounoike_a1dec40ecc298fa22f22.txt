{"context": " More than 1 year has passed since last update.\n\n\u767b\u9332\nhttps://www.openshift.com/ \u304b\u3089\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3001\u78ba\u8a8d\u30e1\u30fc\u30eb\u3067\u767b\u9332\u624b\u7d9a\u304d\u5b8c\u4e86\u3002\n\n\u6e96\u5099\nopenshift \u306e CLI \u3068\u3057\u3066\u3001Ruby \u306e rhc \u3068\u3044\u3046 gem \u3092\u5165\u308c\u308b\u3002\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5165\u308c\u308b\u306e\u3082\u5acc\u306a\u306e\u3067\u3001gemset \u3092\u4f5c\u3063\u3066\u5165\u308c\u3066\u307f\u308b\uff08Ruby \u306f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u5206\u304b\u3063\u3066\u3044\u306a\u3044\uff09\u3002\n$ mkdir openshift\n$ cd openshift\n$ rbenv install 2.2.1\n$ rbenv rehash\n$ rbenv local 2.2.1\n$ rbenv gemset create 2.2.1 openshift\n$ echo openshift > .rbenv-gemsets\n$ rbenv gemset active\n$ gem install rhc\n\nrhc \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d\u306b\u300c\u6700\u521d\u306f rhc setup \u3057\u308d\u3088\u300d\u307f\u305f\u3044\u306b\u8a00\u308f\u308c\u308b\u306e\u3067\u8a00\u3046\u901a\u308a\u306b\u3059\u308b\u3002\n$ rhc setup\nOpenShift Client Tools (RHC) Setup Wizard\n\nThis wizard will help you upload your SSH keys, set your application namespace, and check that other programs like Git are properly installed.\n\nIf you have your own OpenShift server, you can specify it now. Just hit enter to use the server for OpenShift Online: openshift.redhat.com.\nEnter the server hostname: |openshift.redhat.com| \n\nYou can add more servers later using 'rhc server'.\n\nLogin to openshift.redhat.com: \uff1c\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\uff1e\nPassword: ********\n\nOpenShift can create and store a token on disk which allows to you to access the server without using your password. The key is stored in your\nhome directory and should be kept secret.  You can delete the key at any time by running 'rhc logout'.\nGenerate a token now? (yes|no) yes\nGenerating an authorization token for this client ... lasts about 1 month\n\nSaving configuration to /Users/kounoike/.openshift/express.conf ... done\n\nChecking for git ... found git version 2.3.2\n\nChecking common problems .. done\n\nChecking for a domain ... typemiss\n\nChecking for applications ... none\n\nRun 'rhc create-app' to create your first application.\n\n  Do-It-Yourself 0.1                      rhc create-app <app name> diy-0.1\n  JBoss Application Server 7              rhc create-app <app name> jbossas-7\n  JBoss Data Virtualization 6             rhc create-app <app name> jboss-dv-6.1.0\n  JBoss Data Virtualization 6             rhc create-app <app name> jboss-dv-6.0.0\n  JBoss Enterprise Application Platform 6 rhc create-app <app name> jbosseap-6\n  JBoss Unified Push Server 1.0.0.Beta1   rhc create-app <app name> jboss-unified-push-1\n  Jenkins Server                          rhc create-app <app name> jenkins-1\n  Node.js 0.10                            rhc create-app <app name> nodejs-0.10\n  PHP 5.3                                 rhc create-app <app name> php-5.3\n  PHP 5.4                                 rhc create-app <app name> php-5.4\n  PHP 5.4 with Zend Server 6.1            rhc create-app <app name> zend-6.1\n  Perl 5.10                               rhc create-app <app name> perl-5.10\n  Python 2.6                              rhc create-app <app name> python-2.6\n  Python 2.7                              rhc create-app <app name> python-2.7\n  Python 3.3                              rhc create-app <app name> python-3.3\n  Ruby 1.8                                rhc create-app <app name> ruby-1.8\n  Ruby 1.9                                rhc create-app <app name> ruby-1.9\n  Ruby 2.0                                rhc create-app <app name> ruby-2.0\n  Tomcat 6 (JBoss EWS 1.0)                rhc create-app <app name> jbossews-1.0\n  Tomcat 7 (JBoss EWS 2.0)                rhc create-app <app name> jbossews-2.0\n  Vert.x 2.1                              rhc create-app <app name> jboss-vertx-2.1\n  WildFly Application Server 8.2.0.Final  rhc create-app <app name> jboss-wildfly-8\n\n  You are using 0 of 3 total gears\n  The following gear sizes are available to you: small\n\nYour client tools are now configured.\n\nJenkins \u30b5\u30fc\u30d0\u3068\u304b\u72ec\u7279\u3067\u3059\u306d\u3002\u3069\u3093\u306a\u611f\u3058\u306a\u306e\u304b\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u306f\u3042\u308a\u307e\u3059\u3002\n\nFlask \u30a2\u30d7\u30ea\u306e\u3072\u306a\u5f62\u306e\u4f5c\u6210\n$ rhc app create myflaskapp python-2.7 --from-code=https://github.com/openshift-quickstart/flask-base.git\nApplication Options\n-------------------\nDomain:      typemiss\nCartridges:  python-2.7\nSource Code: https://github.com/openshift-quickstart/flask-base.git\nGear Size:   default\nScaling:     no\n\nCreating application 'myflaskapp' ... done\n\n\nWaiting for your DNS name to be available ... done\n\nCloning into 'myflaskapp'...\nThe authenticity of host 'myflaskapp-typemiss.rhcloud.com (23.20.119.74)' can't be established.\nRSA key fingerprint is \uff1cRSA\u30ad\u30fc\u6307\u7d0b\uff1e.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'myflaskapp-typemiss.rhcloud.com,23.20.119.74' (RSA) to the list of known hosts.\n\nYour application 'myflaskapp' is now available.\n\n  URL:        http://myflaskapp-typemiss.rhcloud.com/\n  SSH to:     \uff1cSSH\u30e6\u30fc\u30b6\u540d\uff1f\uff1e@myflaskapp-typemiss.rhcloud.com\n  Git remote: ssh://\uff1cSSH\u30e6\u30fc\u30b6\u540d\uff1f\uff1e@myflaskapp-typemiss.rhcloud.com/~/git/myflaskapp.git/\n  Cloned to:  /Users/kounoike/openshift/pythontest/myflaskapp\n\nRun 'rhc show-app myflaskapp' for more details about your app.\n\ngit \u6307\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3082\u5206\u304b\u308b\u901a\u308a\u3001myflaskapp\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u306a\u5f62\u304c\u7f6e\u304b\u308c\u307e\u3059\u3002git \u6307\u5b9a\u3057\u306a\u3044\u3068\u304d\u3082\u540c\u3058\u3067\u3001\u30a2\u30d7\u30ea\u540d\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u305f\u4e0a\u3067\u305d\u306e\u4e2d\u306b git \u3067\u7ba1\u7406\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u306a\u5f62\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\n\u307e\u305f\u3001flask \u3072\u306a\u5f62\u3067\u3082\u3072\u306a\u5f62\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u3001index \u30da\u30fc\u30b8\u306b OpenShift \u306e\u6848\u5185\u307f\u305f\u3044\u306a\u30da\u30fc\u30b8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\u521d\u671f\u306e app.py \u306f\u7d50\u69cb\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\napp.py\n#!/usr/bin/python\n\n# This file may be used instead of Apache mod_wsgi to run your python\n# web application in a different framework.  A few examples are\n# provided (cherrypi, gevent), but this file may be altered to run\n# whatever framework is desired - or a completely customized service.\n#\nimport imp\nimport os\nimport sys\n\ntry:\n  virtenv = os.path.join(os.environ.get('OPENSHIFT_PYTHON_DIR','.'), 'virtenv')\n  python_version = \"python\"+str(sys.version_info[0])+\".\"+str(sys.version_info[1]) \n  os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib', python_version, 'site-packages')\n  virtualenv = os.path.join(virtenv, 'bin','activate_this.py')\n  if(sys.version_info[0] < 3):\n    execfile(virtualenv, dict(__file__=virtualenv))\n  else:\n    exec(open(virtualenv).read(), dict(__file__=virtualenv))\n\nexcept IOError:\n  pass\n\n#\n# IMPORTANT: Put any additional includes below this line.  If placed above this\n# line, it's possible required libraries won't be in your searchable path\n#\n\n\n#\n#  main():\n#\nif __name__ == '__main__':\n  application = imp.load_source('app', 'flaskapp.py')\n  port = application.app.config['PORT']\n  ip = application.app.config['IP']\n  app_name = application.app.config['APP_NAME']\n  host_name = application.app.config['HOST_NAME']\n\n  fwtype=\"wsgiref\"\n  for fw in (\"gevent\", \"cherrypy\", \"flask\"):\n    try:\n      imp.find_module(fw)\n      fwtype = fw\n    except ImportError:\n      pass\n\n  print('Starting WSGIServer type %s on %s:%d ... ' % (fwtype, ip, port))\n  if fwtype == \"gevent\":\n    from gevent.pywsgi import WSGIServer\n    WSGIServer((ip, port), application.app).serve_forever()\n\n  elif fwtype == \"cherrypy\":\n    from cherrypy import wsgiserver\n    server = wsgiserver.CherryPyWSGIServer(\n      (ip, port), application.app, server_name=host_name)\n    server.start()\n\n  elif fwtype == \"flask\":\n    from flask import Flask\n    server = Flask(__name__)\n    server.wsgi_app = application.app\n    server.run(host=ip, port=port)\n\n  else:\n    from wsgiref.simple_server import make_server\n    make_server(ip, port, application.app).serve_forever()\n\n\n\u4e00\u65b9\u3001flaskapp.py \u306f\u5358\u7d14\u306a flask \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\nflaskapp.py\nimport os\nfrom datetime import datetime\nfrom flask import Flask, request, flash, url_for, redirect, \\\n     render_template, abort, send_from_directory\n\napp = Flask(__name__)\napp.config.from_pyfile('flaskapp.cfg')\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/<path:resource>')\ndef serveStaticResource(resource):\n    return send_from_directory('static/', resource)\n\n@app.route(\"/test\")\ndef test():\n    return \"<strong>It's Alive!</strong>\"\n\nif __name__ == '__main__':\n    app.run()\n\n\napp.route \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u901a\u308a\u3001\u30eb\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u9b31\u9676\u3057\u3044 index \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002/test \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068 It's Alive! \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u30ed\u30fc\u30ab\u30eb\u3067\u30c7\u30d0\u30c3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u4eca\u5f8c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u8ffd\u52a0\u306b\u5099\u3048\u3066 virtualenv \u3067\u3059\u3002\n$ pyenv virtualenv 2.7.9 openshift-myflaskapp\n$ pyenv local openshift-myflaskapp\n$ echo .python-version >> .gitignore\n\n\u7d9a\u3044\u3066\u306f flask \u3092 virtualenv \u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u3059\u3002\n$ pip install flask\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ python app.py\n\n8080 \u30dd\u30fc\u30c8\u304c\u4f7f\u7528\u4e2d\u306e\u5834\u5408\u306f flastkapp.cfg \u3092\u7de8\u96c6\u3057\u3066\u5225\u306e\u30dd\u30fc\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u8ffd\u52a0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5165\u308c\u65b9\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u3066\u3044\u308b\u3068 setup.py \u306b\u66f8\u304f\u3084\u308a\u65b9\u3068 requirements.txt \u306b\u66f8\u304f\u3084\u308a\u65b9\u306e\u4e21\u65b9\u304c\u3042\u308b\u307f\u305f\u3044\u3002\u3053\u3053\u3067\u306f Heroku \u3067\u306a\u3058\u3093\u3060 requirements.txt \u3092\u4f7f\u3046\u3084\u308a\u65b9\u3092\u7528\u3044\u308b\u3002\nrequiments.txt \u304c\u4f7f\u3048\u308b\u306e\u3067\u3001pip install matplotlib \u3057\u3066 pip freeze > requirements.txt \u3059\u308c\u3070\u826f\u3044\u30fb\u30fb\u30fb\u306e\u304b\u3068\u601d\u3063\u305f\u3089\u843d\u3068\u3057\u7a74\u304c\u3002\n\u3069\u3046\u3084\u3089 OpenShift \u3067\u4f7f\u3046 pip \u306f\u82e5\u5e72\u53e4\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u3089\u3057\u3044\u3002\u307e\u305a matplotlib==1.4.3 \u304c\u7121\u3044\u3068\u6587\u53e5\u3092\u8a00\u308f\u308c\u308b\uff08git push \u3057\u305f\u3068\u304d\u306b\uff09\u3002\u3053\u3093\u306a\u611f\u3058\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\nremote:   Could not find a version that satisfies the requirement matplotlib==1.4.3 (from -r /var/lib/openshift/\uff1c\u306a\u3093\u304b\u610f\u5473\u306a\u3044\u6587\u5b57\u5217\uff1e/app-root/runtime/repo/requirements.txt (line 5)) (from versions: 0.86.1, 0.86.2, 0.86, 0.91.0, 0.91.1, 1.0.1, 1.1.0, 1.1.1, 1.3.1, 1.4.0, 1.4.1, 1.4.1rc1, 1.4.2, 1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.4.1rc1, 1.4.2, dev)\nremote: Cleaning up...\nremote: No distributions matching the version for matplotlib==1.4.3 (from -r /var/lib/openshift/\uff1c\u306a\u3093\u304b\u610f\u5473\u306a\u3044\u6587\u5b57\u5217\uff1e/app-root/runtime/repo/requirements.txt (line 5))\n\n\u305d\u3057\u3066 nose \u3084 pytz\u3001python-dateutil \u3060\u306e Werkzeug \u3060\u306e\u3082\u53e4\u3044\u306e\u3057\u304b\u7121\u3044\u3002\uff11\u500b\uff11\u500b\u3053\u308c\u3092\u89e3\u6c7a\u3057\u3066\u3044\u304f\u306e\u306f\u9aa8\u304c\u6298\u308c\u308b\u30fb\u30fb\u30fb\n\u5e78\u3044 SSH \u304c\u51fa\u6765\u308b\u3053\u3068\u3060\u3057\u3001\u30ea\u30e2\u30fc\u30c8\u30de\u30b7\u30f3\u4e0a\u306b \u3082\u3046\uff11\u500b virtualenv \u3092\u4f5c\u3063\u3066\u305d\u3053\u3067 pip install / freeze \u3057\u305f\u65b9\u304c\u65e9\u3044\u304b\u3082\u3002\n\n\u96d1\u611f\n\u4e0a\u306e pip \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u554f\u984c\u306f\u5272\u3068\u6df1\u523b\u3067\u3001\u958b\u767a\u306e\u30b9\u30c8\u30ec\u30b9\u306b\u3057\u304b\u306a\u3089\u306a\u3044\u3002\u305d\u308c\u3068\u3001git push \u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u3001Heroku \u3068\u9055\u3063\u3066\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3059\u308b\u69d8\u5b50\u3060\u3002\n\n\u7d50\u8ad6\nHeroku \u306e\u65b9\u304c\u697d\u3060\u3068\u601d\u3046\u3002\n# \u767b\u9332\nhttps://www.openshift.com/ \u304b\u3089\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u5165\u529b\u3001\u78ba\u8a8d\u30e1\u30fc\u30eb\u3067\u767b\u9332\u624b\u7d9a\u304d\u5b8c\u4e86\u3002\n\n# \u6e96\u5099\nopenshift \u306e CLI \u3068\u3057\u3066\u3001Ruby \u306e rhc \u3068\u3044\u3046 gem \u3092\u5165\u308c\u308b\u3002\u30b0\u30ed\u30fc\u30d0\u30eb\u306b\u5165\u308c\u308b\u306e\u3082\u5acc\u306a\u306e\u3067\u3001gemset \u3092\u4f5c\u3063\u3066\u5165\u308c\u3066\u307f\u308b\uff08Ruby \u306f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3042\u307e\u308a\u5206\u304b\u3063\u3066\u3044\u306a\u3044\uff09\u3002\n\n```shell-session\n$ mkdir openshift\n$ cd openshift\n$ rbenv install 2.2.1\n$ rbenv rehash\n$ rbenv local 2.2.1\n$ rbenv gemset create 2.2.1 openshift\n$ echo openshift > .rbenv-gemsets\n$ rbenv gemset active\n$ gem install rhc\n```\n\nrhc \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u4e2d\u306b\u300c\u6700\u521d\u306f rhc setup \u3057\u308d\u3088\u300d\u307f\u305f\u3044\u306b\u8a00\u308f\u308c\u308b\u306e\u3067\u8a00\u3046\u901a\u308a\u306b\u3059\u308b\u3002\n\n```shell-session\n$ rhc setup\nOpenShift Client Tools (RHC) Setup Wizard\n\nThis wizard will help you upload your SSH keys, set your application namespace, and check that other programs like Git are properly installed.\n\nIf you have your own OpenShift server, you can specify it now. Just hit enter to use the server for OpenShift Online: openshift.redhat.com.\nEnter the server hostname: |openshift.redhat.com| \n\nYou can add more servers later using 'rhc server'.\n\nLogin to openshift.redhat.com: \uff1c\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\uff1e\nPassword: ********\n\nOpenShift can create and store a token on disk which allows to you to access the server without using your password. The key is stored in your\nhome directory and should be kept secret.  You can delete the key at any time by running 'rhc logout'.\nGenerate a token now? (yes|no) yes\nGenerating an authorization token for this client ... lasts about 1 month\n\nSaving configuration to /Users/kounoike/.openshift/express.conf ... done\n\nChecking for git ... found git version 2.3.2\n\nChecking common problems .. done\n\nChecking for a domain ... typemiss\n\nChecking for applications ... none\n\nRun 'rhc create-app' to create your first application.\n\n  Do-It-Yourself 0.1                      rhc create-app <app name> diy-0.1\n  JBoss Application Server 7              rhc create-app <app name> jbossas-7\n  JBoss Data Virtualization 6             rhc create-app <app name> jboss-dv-6.1.0\n  JBoss Data Virtualization 6             rhc create-app <app name> jboss-dv-6.0.0\n  JBoss Enterprise Application Platform 6 rhc create-app <app name> jbosseap-6\n  JBoss Unified Push Server 1.0.0.Beta1   rhc create-app <app name> jboss-unified-push-1\n  Jenkins Server                          rhc create-app <app name> jenkins-1\n  Node.js 0.10                            rhc create-app <app name> nodejs-0.10\n  PHP 5.3                                 rhc create-app <app name> php-5.3\n  PHP 5.4                                 rhc create-app <app name> php-5.4\n  PHP 5.4 with Zend Server 6.1            rhc create-app <app name> zend-6.1\n  Perl 5.10                               rhc create-app <app name> perl-5.10\n  Python 2.6                              rhc create-app <app name> python-2.6\n  Python 2.7                              rhc create-app <app name> python-2.7\n  Python 3.3                              rhc create-app <app name> python-3.3\n  Ruby 1.8                                rhc create-app <app name> ruby-1.8\n  Ruby 1.9                                rhc create-app <app name> ruby-1.9\n  Ruby 2.0                                rhc create-app <app name> ruby-2.0\n  Tomcat 6 (JBoss EWS 1.0)                rhc create-app <app name> jbossews-1.0\n  Tomcat 7 (JBoss EWS 2.0)                rhc create-app <app name> jbossews-2.0\n  Vert.x 2.1                              rhc create-app <app name> jboss-vertx-2.1\n  WildFly Application Server 8.2.0.Final  rhc create-app <app name> jboss-wildfly-8\n\n  You are using 0 of 3 total gears\n  The following gear sizes are available to you: small\n\nYour client tools are now configured.\n```\n\nJenkins \u30b5\u30fc\u30d0\u3068\u304b\u72ec\u7279\u3067\u3059\u306d\u3002\u3069\u3093\u306a\u611f\u3058\u306a\u306e\u304b\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3067\u306f\u3042\u308a\u307e\u3059\u3002\n\n\n# Flask \u30a2\u30d7\u30ea\u306e\u3072\u306a\u5f62\u306e\u4f5c\u6210\n\n```shell-session\n$ rhc app create myflaskapp python-2.7 --from-code=https://github.com/openshift-quickstart/flask-base.git\nApplication Options\n-------------------\nDomain:      typemiss\nCartridges:  python-2.7\nSource Code: https://github.com/openshift-quickstart/flask-base.git\nGear Size:   default\nScaling:     no\n\nCreating application 'myflaskapp' ... done\n\n\nWaiting for your DNS name to be available ... done\n\nCloning into 'myflaskapp'...\nThe authenticity of host 'myflaskapp-typemiss.rhcloud.com (23.20.119.74)' can't be established.\nRSA key fingerprint is \uff1cRSA\u30ad\u30fc\u6307\u7d0b\uff1e.\nAre you sure you want to continue connecting (yes/no)? yes\nWarning: Permanently added 'myflaskapp-typemiss.rhcloud.com,23.20.119.74' (RSA) to the list of known hosts.\n\nYour application 'myflaskapp' is now available.\n\n  URL:        http://myflaskapp-typemiss.rhcloud.com/\n  SSH to:     \uff1cSSH\u30e6\u30fc\u30b6\u540d\uff1f\uff1e@myflaskapp-typemiss.rhcloud.com\n  Git remote: ssh://\uff1cSSH\u30e6\u30fc\u30b6\u540d\uff1f\uff1e@myflaskapp-typemiss.rhcloud.com/~/git/myflaskapp.git/\n  Cloned to:  /Users/kounoike/openshift/pythontest/myflaskapp\n\nRun 'rhc show-app myflaskapp' for more details about your app.\n```\n\ngit \u6307\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3082\u5206\u304b\u308b\u901a\u308a\u3001`myflaskapp`\u3068\u3044\u3046\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u3066\u305d\u306e\u4e2d\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u306a\u5f62\u304c\u7f6e\u304b\u308c\u307e\u3059\u3002git \u6307\u5b9a\u3057\u306a\u3044\u3068\u304d\u3082\u540c\u3058\u3067\u3001\u30a2\u30d7\u30ea\u540d\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u3063\u305f\u4e0a\u3067\u305d\u306e\u4e2d\u306b git \u3067\u7ba1\u7406\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3072\u306a\u5f62\u304c\u4f5c\u3089\u308c\u307e\u3059\u3002\n\n\u307e\u305f\u3001flask \u3072\u306a\u5f62\u3067\u3082\u3072\u306a\u5f62\u3092\u6307\u5b9a\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u3067\u3082\u3001index \u30da\u30fc\u30b8\u306b OpenShift \u306e\u6848\u5185\u307f\u305f\u3044\u306a\u30da\u30fc\u30b8\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n![index \u306e\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8](https://qiita-image-store.s3.amazonaws.com/0/53147/56ebf837-5c23-32aa-5ea0-0a67afc2f899.png)\n\n\u521d\u671f\u306e app.py \u306f\u7d50\u69cb\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n```py:app.py\n#!/usr/bin/python\n\n# This file may be used instead of Apache mod_wsgi to run your python\n# web application in a different framework.  A few examples are\n# provided (cherrypi, gevent), but this file may be altered to run\n# whatever framework is desired - or a completely customized service.\n#\nimport imp\nimport os\nimport sys\n\ntry:\n  virtenv = os.path.join(os.environ.get('OPENSHIFT_PYTHON_DIR','.'), 'virtenv')\n  python_version = \"python\"+str(sys.version_info[0])+\".\"+str(sys.version_info[1]) \n  os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib', python_version, 'site-packages')\n  virtualenv = os.path.join(virtenv, 'bin','activate_this.py')\n  if(sys.version_info[0] < 3):\n    execfile(virtualenv, dict(__file__=virtualenv))\n  else:\n    exec(open(virtualenv).read(), dict(__file__=virtualenv))\n    \nexcept IOError:\n  pass\n\n#\n# IMPORTANT: Put any additional includes below this line.  If placed above this\n# line, it's possible required libraries won't be in your searchable path\n#\n\n\n#\n#  main():\n#\nif __name__ == '__main__':\n  application = imp.load_source('app', 'flaskapp.py')\n  port = application.app.config['PORT']\n  ip = application.app.config['IP']\n  app_name = application.app.config['APP_NAME']\n  host_name = application.app.config['HOST_NAME']\n\n  fwtype=\"wsgiref\"\n  for fw in (\"gevent\", \"cherrypy\", \"flask\"):\n    try:\n      imp.find_module(fw)\n      fwtype = fw\n    except ImportError:\n      pass\n\n  print('Starting WSGIServer type %s on %s:%d ... ' % (fwtype, ip, port))\n  if fwtype == \"gevent\":\n    from gevent.pywsgi import WSGIServer\n    WSGIServer((ip, port), application.app).serve_forever()\n\n  elif fwtype == \"cherrypy\":\n    from cherrypy import wsgiserver\n    server = wsgiserver.CherryPyWSGIServer(\n      (ip, port), application.app, server_name=host_name)\n    server.start()\n\n  elif fwtype == \"flask\":\n    from flask import Flask\n    server = Flask(__name__)\n    server.wsgi_app = application.app\n    server.run(host=ip, port=port)\n\n  else:\n    from wsgiref.simple_server import make_server\n    make_server(ip, port, application.app).serve_forever()\n```\n\n\u4e00\u65b9\u3001flaskapp.py \u306f\u5358\u7d14\u306a flask \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\n\n```py:flaskapp.py\nimport os\nfrom datetime import datetime\nfrom flask import Flask, request, flash, url_for, redirect, \\\n     render_template, abort, send_from_directory\n\napp = Flask(__name__)\napp.config.from_pyfile('flaskapp.cfg')\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\n@app.route('/<path:resource>')\ndef serveStaticResource(resource):\n    return send_from_directory('static/', resource)\n\n@app.route(\"/test\")\ndef test():\n    return \"<strong>It's Alive!</strong>\"\n\nif __name__ == '__main__':\n    app.run()\n```\n\napp.route \u3067\u6307\u5b9a\u3057\u3066\u3044\u308b\u901a\u308a\u3001\u30eb\u30fc\u30c8\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u9b31\u9676\u3057\u3044 index \u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002/test \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068 It's Alive! \u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u30c7\u30d0\u30c3\u30b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306f\u4eca\u5f8c\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u8ffd\u52a0\u306b\u5099\u3048\u3066 virtualenv \u3067\u3059\u3002\n\n```shell-session\n$ pyenv virtualenv 2.7.9 openshift-myflaskapp\n$ pyenv local openshift-myflaskapp\n$ echo .python-version >> .gitignore\n```\n\n\u7d9a\u3044\u3066\u306f flask \u3092 virtualenv \u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u3059\u3002\n\n```shell-session\n$ pip install flask\n```\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```shell-session\n$ python app.py\n```\n\n8080 \u30dd\u30fc\u30c8\u304c\u4f7f\u7528\u4e2d\u306e\u5834\u5408\u306f flastkapp.cfg \u3092\u7de8\u96c6\u3057\u3066\u5225\u306e\u30dd\u30fc\u30c8\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n# \u8ffd\u52a0\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u5165\u308c\u65b9\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u898b\u3066\u3044\u308b\u3068 setup.py \u306b\u66f8\u304f\u3084\u308a\u65b9\u3068 requirements.txt \u306b\u66f8\u304f\u3084\u308a\u65b9\u306e\u4e21\u65b9\u304c\u3042\u308b\u307f\u305f\u3044\u3002\u3053\u3053\u3067\u306f Heroku \u3067\u306a\u3058\u3093\u3060 requirements.txt \u3092\u4f7f\u3046\u3084\u308a\u65b9\u3092\u7528\u3044\u308b\u3002\n\nrequiments.txt \u304c\u4f7f\u3048\u308b\u306e\u3067\u3001`pip install matplotlib` \u3057\u3066 `pip freeze > requirements.txt` \u3059\u308c\u3070\u826f\u3044\u30fb\u30fb\u30fb\u306e\u304b\u3068\u601d\u3063\u305f\u3089\u843d\u3068\u3057\u7a74\u304c\u3002\n\n\u3069\u3046\u3084\u3089 OpenShift \u3067\u4f7f\u3046 pip \u306f\u82e5\u5e72\u53e4\u3044\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30af\u30ed\u30fc\u30f3\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u3089\u3057\u3044\u3002\u307e\u305a matplotlib==1.4.3 \u304c\u7121\u3044\u3068\u6587\u53e5\u3092\u8a00\u308f\u308c\u308b\uff08git push \u3057\u305f\u3068\u304d\u306b\uff09\u3002\u3053\u3093\u306a\u611f\u3058\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u3002\n\n```shell-session\nremote:   Could not find a version that satisfies the requirement matplotlib==1.4.3 (from -r /var/lib/openshift/\uff1c\u306a\u3093\u304b\u610f\u5473\u306a\u3044\u6587\u5b57\u5217\uff1e/app-root/runtime/repo/requirements.txt (line 5)) (from versions: 0.86.1, 0.86.2, 0.86, 0.91.0, 0.91.1, 1.0.1, 1.1.0, 1.1.1, 1.3.1, 1.4.0, 1.4.1, 1.4.1rc1, 1.4.2, 1.2.0, 1.2.1, 1.3.0, 1.3.1, 1.4.0, 1.4.1, 1.4.1rc1, 1.4.2, dev)\nremote: Cleaning up...\nremote: No distributions matching the version for matplotlib==1.4.3 (from -r /var/lib/openshift/\uff1c\u306a\u3093\u304b\u610f\u5473\u306a\u3044\u6587\u5b57\u5217\uff1e/app-root/runtime/repo/requirements.txt (line 5))\n```\n\n\u305d\u3057\u3066 nose \u3084 pytz\u3001python-dateutil \u3060\u306e Werkzeug \u3060\u306e\u3082\u53e4\u3044\u306e\u3057\u304b\u7121\u3044\u3002\uff11\u500b\uff11\u500b\u3053\u308c\u3092\u89e3\u6c7a\u3057\u3066\u3044\u304f\u306e\u306f\u9aa8\u304c\u6298\u308c\u308b\u30fb\u30fb\u30fb\n\n\u5e78\u3044 SSH \u304c\u51fa\u6765\u308b\u3053\u3068\u3060\u3057\u3001\u30ea\u30e2\u30fc\u30c8\u30de\u30b7\u30f3\u4e0a\u306b \u3082\u3046\uff11\u500b virtualenv \u3092\u4f5c\u3063\u3066\u305d\u3053\u3067 pip install / freeze \u3057\u305f\u65b9\u304c\u65e9\u3044\u304b\u3082\u3002\n\n# \u96d1\u611f\n\n\u4e0a\u306e pip \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u554f\u984c\u306f\u5272\u3068\u6df1\u523b\u3067\u3001\u958b\u767a\u306e\u30b9\u30c8\u30ec\u30b9\u306b\u3057\u304b\u306a\u3089\u306a\u3044\u3002\u305d\u308c\u3068\u3001git push \u3057\u3066\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u3001Heroku \u3068\u9055\u3063\u3066\u30c0\u30a6\u30f3\u30bf\u30a4\u30e0\u304c\u767a\u751f\u3059\u308b\u69d8\u5b50\u3060\u3002\n\n# \u7d50\u8ad6\n\nHeroku \u306e\u65b9\u304c\u697d\u3060\u3068\u601d\u3046\u3002\n", "tags": ["openshift", "python2.7", "Flask", "Heroku"]}