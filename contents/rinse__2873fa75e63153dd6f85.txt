{"context": "\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3067\u3059\u3002\n\u6b63\u76f4\u8ab0\u5f97\u3067\u3059\u3002\n\u306a\u3093\u3068\u3001std::unique_ptr\u306b\u306f->*\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306fget()\u95a2\u6570\u3092\u631f\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3044\u3051\u306a\u3044\uff01\uff01\u3000\u307f\u3093\u306a\u56f0\u3063\u3066\u3044\u308b\uff01\uff01\uff01\u3000\u3053\u308c\u3092\u89e3\u6c7a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff01\uff01\nstd::unique_ptr < foo > pFoo( new foo() );\n( pFoo.get()->*&foo::bar )(); // \u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066bar\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n\n\u3057\u304b\u3057\u3053\u308c\u3067\u306f\u76f4\u611f\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u305d\u3082\u305d\u3082\u3069\u3046\u3057\u3066\u3082\u3069\u3053\u304b\u3078\u751f\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u305f\u3044\u3068\u304d\u3060\u3051\u3057\u304bget()\u95a2\u6570\u3092\u4f7f\u3046\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u306b\u30a2\u30ed\u30fc\u6f14\u7b97\u5b50\u3082\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u306d\u3002\n\u305d\u3053\u3067\u3001->*\u6f14\u7b97\u5b50\u3092\u8db3\u3057\u305funique_ptr\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n#include <functional> // for std::bind\n#include <memory> // for std::unique_ptr\n\ntemplate < class Ty1, class Ty2 = std::default_delete < Ty1 > >\nclass unique_ptr\n  : public std::unique_ptr < Ty1, Ty2 >\n{\npublic:\n  using base = std::unique_ptr < Ty1, Ty2 >;\n  using base::unique_ptr;\n\n  template < class ret, class... args >\n  auto operator ->* ( ret( Ty1::*mem_ptr )( args... ) )\n  {\n    return std::bind( mem_ptr, *this->get() );\n  }\n};\n\nstd::unique_ptr\u3092\u3054\u3063\u305d\u308a\u6d41\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3053\u306e\u901a\u308a\u6f14\u7b97\u5b50\u3060\u3051\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u6e08\u307f\u307e\u3059\u3002\n->*\u6f14\u7b97\u5b50\u306f\u304b\u306a\u308a\u7279\u6b8a\u306a\u6f14\u7b97\u5b50\u3067\u305d\u306e\u307e\u307e\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u306f\u3067\u304d\u306a\u3044(\u5024\u3067\u306f\u306a\u3044)\u306e\u3067\u3001std::bind\u3067\u675f\u7e1b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\nunique_ptr < foo > pFoo( new foo() );\n( pFoo->*&foo::bar )(); // \u76f4\u611f\u7684\n\n\u76f4\u611f\u7684\u304b\u3069\u3046\u304b\u306f\u5fae\u5999\u306a\u3068\u3053\u308d\u3001\u3068\u3044\u3046\u304b->*\u6f14\u7b97\u5b50(\u9593\u63a5\u30e1\u30f3\u30d0\u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u3089\u3057\u3044\u3067\u3059)\u81ea\u4f53\u4f7f\u3046\u3053\u3068\u304c\u6ec5\u591a\u306b\u306a\u304f\u3001\u5b58\u5728\u3082\u77e5\u3089\u306a\u304b\u3063\u305f\u3068\u3044\u3046\u4eba\u3082\u3044\u305d\u3046\u306a\u3082\u306e\u306a\u306e\u3067\u76f4\u611f\u7684\u3082\u3078\u3063\u305f\u304f\u308c\u3082\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u304c\u4f4e\u304f\u3066\u30ab\u30c3\u30b3\u3067\u304f\u304f\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u3002\nauto baz = &foo::bar; // \u672c\u5f53\u306f\u3053\u306e\u3088\u3046\u306b\u4e00\u5ea6\u3069\u3053\u304b\u3078\u4ee3\u5165\u3055\u308c\u305f\u308a\u95a2\u6570\u306e\u5f15\u6570\u3092\u7d4c\u305f\u308a\u3059\u308b\n( pFoo->*baz )(); // baz\u7d4c\u7531\u3067bar\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u3044\u3066\u6050\u7e2e\u306a\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u3053\u308c\u3001\u91cd\u5927\u306a\u6b20\u9665\u304c\u3042\u308a\u307e\u3057\u3066\u3001\u5f15\u6570\u3092\u53d6\u308b\u3082\u306e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002std::bind\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3092\u7f6e\u304b\u306a\u3044\u3068\u306a\u3089\u306a\u3044\u304b\u3089\u3067\u3042\u308a\u3001\u305d\u308c\u3092\u89e3\u6c7a\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306fstd::placeholders::_1\u304b\u3089_20\u307e\u3067\u3042\u308a\u3001\u6700\u592720\u306e\u5f15\u6570\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u99c6\u4f7f\u3059\u308c\u3070\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u5272\u306b\u5408\u308f\u306a\u3044\u624b\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\u30cd\u30bf\u8a18\u4e8b\u3067\u3057\u305f\u3002\n\u308f\u305f\u3057\u81ea\u8eab\u3042\u307e\u308a\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u5468\u308a\u306f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3044\u7b49\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306e\u307b\u3046\u3078\u304a\u9858\u3044\u81f4\u3057\u307e\u3059\u3002\n=> @kktk-KO \u3055\u3093\u3088\u308a\u3001C++14\u306e\u30e9\u30e0\u30c0\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u89e3\u6c7a\u3067\u304d\u308b\u3053\u3068\u3092\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\ntemplate < class Ty1, class Ty2 = std::default_delete < Ty1 > >\nclass unique_ptr\n  : public std::unique_ptr < Ty1, Ty2 >\n{\n  /* \u7701\u7565... */\n  template < class Ret, class... Args >\n  auto operator ->* ( Ret( Ty1::*mem_ptr )( Args... ) )\n  {\n    return [this , mem_ptr] ( Args&&... args )\n    {\n      return ( this->get()->*mem_ptr )( std::forward < Args... > ( args )... );\n    };\n  }\n};\n\n\u30bf\u30a4\u30c8\u30eb\u306e\u901a\u308a\u3067\u3059\u3002\n~~\u6b63\u76f4\u8ab0\u5f97\u3067\u3059\u3002~~\n\n\u306a\u3093\u3068\u3001std::unique_ptr\u306b\u306f->\\*\u6f14\u7b97\u5b50\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u304a\u3089\u305a\u3001\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u306b\u306fget()\u95a2\u6570\u3092\u631f\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u306f\u3044\u3051\u306a\u3044\uff01\uff01\u3000\u307f\u3093\u306a\u56f0\u3063\u3066\u3044\u308b\uff01\uff01\uff01\u3000\u3053\u308c\u3092\u89e3\u6c7a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\uff01\uff01\n\n```cpp\nstd::unique_ptr < foo > pFoo( new foo() );\n( pFoo.get()->*&foo::bar )(); // \u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4f7f\u3063\u3066bar\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n```\n\n\u3057\u304b\u3057\u3053\u308c\u3067\u306f\u76f4\u611f\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3057\u3001\u305d\u3082\u305d\u3082\u3069\u3046\u3057\u3066\u3082\u3069\u3053\u304b\u3078\u751f\u306e\u30dd\u30a4\u30f3\u30bf\u3092\u6e21\u3057\u305f\u3044\u3068\u304d\u3060\u3051\u3057\u304bget()\u95a2\u6570\u3092\u4f7f\u3046\u3079\u304d\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u306e\u305f\u3081\u306b\u30a2\u30ed\u30fc\u6f14\u7b97\u5b50\u3082\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3055\u308c\u3066\u3044\u307e\u3059\u3057\u306d\u3002\n\n\u305d\u3053\u3067\u3001->\\*\u6f14\u7b97\u5b50\u3092\u8db3\u3057\u305funique_ptr\u3092\u4f5c\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n```cpp\n#include <functional> // for std::bind\n#include <memory> // for std::unique_ptr\n\ntemplate < class Ty1, class Ty2 = std::default_delete < Ty1 > >\nclass unique_ptr\n  : public std::unique_ptr < Ty1, Ty2 >\n{\npublic:\n  using base = std::unique_ptr < Ty1, Ty2 >;\n  using base::unique_ptr;\n  \n  template < class ret, class... args >\n  auto operator ->* ( ret( Ty1::*mem_ptr )( args... ) )\n  {\n    return std::bind( mem_ptr, *this->get() );\n  }\n};\n```\n\nstd::unique_ptr\u3092\u3054\u3063\u305d\u308a\u6d41\u7528\u3057\u3066\u3044\u308b\u306e\u3067\u3053\u306e\u901a\u308a\u6f14\u7b97\u5b50\u3060\u3051\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u6e08\u307f\u307e\u3059\u3002\n->*\u6f14\u7b97\u5b50\u306f\u304b\u306a\u308a\u7279\u6b8a\u306a\u6f14\u7b97\u5b50\u3067\u305d\u306e\u307e\u307e\u95a2\u6570\u306e\u623b\u308a\u5024\u306b\u306f\u3067\u304d\u306a\u3044(\u5024\u3067\u306f\u306a\u3044)\u306e\u3067\u3001std::bind\u3067\u675f\u7e1b\u3057\u305f\u3082\u306e\u3092\u8fd4\u3057\u3066\u3044\u307e\u3059\u3002\n\n```cpp\nunique_ptr < foo > pFoo( new foo() );\n( pFoo->*&foo::bar )(); // \u76f4\u611f\u7684\n```\n\n\u76f4\u611f\u7684\u304b\u3069\u3046\u304b\u306f\u5fae\u5999\u306a\u3068\u3053\u308d\u3001\u3068\u3044\u3046\u304b->\\*\u6f14\u7b97\u5b50(\u9593\u63a5\u30e1\u30f3\u30d0\u30dd\u30a4\u30f3\u30bf\u3068\u3044\u3046\u3089\u3057\u3044\u3067\u3059)\u81ea\u4f53\u4f7f\u3046\u3053\u3068\u304c\u6ec5\u591a\u306b\u306a\u304f\u3001\u5b58\u5728\u3082\u77e5\u3089\u306a\u304b\u3063\u305f\u3068\u3044\u3046\u4eba\u3082\u3044\u305d\u3046\u306a\u3082\u306e\u306a\u306e\u3067\u76f4\u611f\u7684\u3082\u3078\u3063\u305f\u304f\u308c\u3082\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u6f14\u7b97\u5b50\u306e\u512a\u5148\u9806\u4f4d\u304c\u4f4e\u304f\u3066\u30ab\u30c3\u30b3\u3067\u304f\u304f\u3089\u306a\u304d\u3083\u3044\u3051\u306a\u3044\u3093\u3067\u3059\u3088\u306d\u3002\n\n```cpp\nauto baz = &foo::bar; // \u672c\u5f53\u306f\u3053\u306e\u3088\u3046\u306b\u4e00\u5ea6\u3069\u3053\u304b\u3078\u4ee3\u5165\u3055\u308c\u305f\u308a\u95a2\u6570\u306e\u5f15\u6570\u3092\u7d4c\u305f\u308a\u3059\u308b\n( pFoo->*baz )(); // baz\u7d4c\u7531\u3067bar\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n```\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u3044\u305f\u3060\u3044\u3066\u6050\u7e2e\u306a\u306e\u3067\u3059\u304c\u3001\u5b9f\u306f\u3053\u308c\u3001\u91cd\u5927\u306a\u6b20\u9665\u304c\u3042\u308a\u307e\u3057\u3066\u3001\u5f15\u6570\u3092\u53d6\u308b\u3082\u306e\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002std::bind\u306b\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u3092\u7f6e\u304b\u306a\u3044\u3068\u306a\u3089\u306a\u3044\u304b\u3089\u3067\u3042\u308a\u3001\u305d\u308c\u3092\u89e3\u6c7a\u3057\u3066\u3044\u306a\u3044\u304b\u3089\u3067\u3059\u3002\u30d7\u30ec\u30fc\u30b9\u30db\u30eb\u30c0\u30fc\u306fstd::placeholders::_1\u304b\u3089_20\u307e\u3067\u3042\u308a\u3001\u6700\u592720\u306e\u5f15\u6570\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30e1\u30bf\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u99c6\u4f7f\u3059\u308c\u3070\u89e3\u6c7a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u304c\u3001\u5272\u306b\u5408\u308f\u306a\u3044\u624b\u9593\u304c\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3084\u3081\u307e\u3057\u305f\u3002\u3054\u3081\u3093\u306a\u3055\u3044\u3002\n\n\u30cd\u30bf\u8a18\u4e8b\u3067\u3057\u305f\u3002\n\n\u308f\u305f\u3057\u81ea\u8eab\u3042\u307e\u308a\u30e1\u30f3\u30d0\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u5468\u308a\u306f\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u9593\u9055\u3044\u7b49\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u306e\u307b\u3046\u3078\u304a\u9858\u3044\u81f4\u3057\u307e\u3059\u3002\n\n=> @kktk-KO \u3055\u3093\u3088\u308a\u3001C++14\u306e\u30e9\u30e0\u30c0\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u89e3\u6c7a\u3067\u304d\u308b\u3053\u3068\u3092\u6559\u3048\u3066\u3082\u3089\u3044\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\uff01\n\n```cpp\ntemplate < class Ty1, class Ty2 = std::default_delete < Ty1 > >\nclass unique_ptr\n  : public std::unique_ptr < Ty1, Ty2 >\n{\n  /* \u7701\u7565... */\n  template < class Ret, class... Args >\n  auto operator ->* ( Ret( Ty1::*mem_ptr )( Args... ) )\n  {\n    return [this , mem_ptr] ( Args&&... args )\n    {\n      return ( this->get()->*mem_ptr )( std::forward < Args... > ( args )... );\n    };\n  }\n};\n```\n\n", "tags": ["C++", "C++11"]}