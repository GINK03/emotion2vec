{"context": "\n\n\u4f8b\u984c\u306e\u624b\u76f4\u3057\u306b\u6311\u6226\n\u524d\u56de\u898b\u305fPlay Scala\u306e\u7c21\u5358REST\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afPlay'R\u3001\u826f\u3055\u6c17\u3060\u3063\u305f\u306e\u3060\u3051\u308c\u3069\u3001\u4f8b\u984c\u306e\u66f4\u65b0\u7cfb(PUT/POST)\u304c\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\u3071\u3063\u3068\u898b\u3001\u4f55\u3089\u304b\u306e\u7406\u7531\u3067\u3001Json\u5468\u308a\u306e\u51e6\u7406\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u307d\u3044\u3063\u306e\u3067\u3001\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3053\u3046\u3002\n\nPUT\u30e1\u30bd\u30c3\u30c9\u306e\u624b\u76f4\u3057\n\u306f\u3058\u3081\u306f\u3001Person\u306e\u66f8\u304d\u63db\u3048(PUT)\u306b\u95a2\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u624b\u76f4\u3057\u3059\u308b:\n\ncontroller/PersonController.scala\n  def write(person: Person) = Action { request =>\n    request.body.asText match {\n      case Some(name) if (name.length > 0) => Ok(personContainer.update(person.copy(name=name)).name)\n      case _                               => BadRequest(\"Invalid name\")\n    }\n  }\n\n\n\u524d\u56de\u540c\u69d8\u3001httpie\u3092\u4f7f\u3063\u3066PUT\u306e\u6319\u52d5\u3092\u898b\u3066\u304a\u3053\u3046\u3002\n\nPUT\u30e1\u30bd\u30c3\u30c9\u3067\u3001Jane\u304cJIRO\u306b\u5909\u308f\u3063\u3066\u304f\u308c\u306a\u3044\u3053\u3068\u304c\u554f\u984c\u3002\n\u3053\u308c\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u4e2d\u3067\u306eAnyContentAsJson\u30af\u30e9\u30b9\u306e\u6271\u3044\u304c\u4e0d\u9069\u5207\u306a\u3053\u3068\u306b\u3088\u308b\u3002\n\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u3001print\u6587\u30c7\u30d0\u30c3\u30af\u3067\u8a66\u3057\u3066\u304a\u3053\u3046\u3002\n\ncontroller/PersonController.scala\n  def write(person: Person) = Action { request =>\n    println(\"!!!!!!!!!AnyContentAsJson\u306e\u6319\u52d5\u3060\u3088!!!!!!!!!\")\n    println(\"request.body =\"+request.body)\n    println(\"request.body.asJson =\"+request.body.asJson)\n    println(\"request.body.asText =\"+request.body.asText)\n    println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n    request.body.asText match {\n      case Some(name) if (name.length > 0) => Ok(personContainer.update(person.copy(name=name)).name)\n      case _                               => BadRequest(\"Invalid name\")\n    }\n  }\n\n\nplay\u5074\u306e\u30ed\u30b0\u3092\u898b\u3066\u307f\u308b\u3068\u3001request.body.asText\u306e\u5909\u63db\u304c\u7121\u610f\u5473\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b:\n\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306basJson\u3092\u7528\u3044\u308b\u5f62\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u308b:\n\ncontroller/PersonController\u6539.scala\n\n//json\u306e\u6271\u3044\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\nimport play.api.libs.json._\nimport play.api.libs.functional.syntax._\n...\n  def write(person: Person) = Action { request =>\n    request.body.asJson match {\n      case Some(jsObj) =>\n        val name = (jsObj \\\\ \"name\").head.toString\n        Ok(personContainer.update(person.copy(name=name)).name)\n      case _    => BadRequest(\"Invalid name\")\n    }\n  }\n\n\n\n\u52d5\u4f5c\u3057\u305f\u3002\n\nPOST\u30e1\u30bd\u30c3\u30c9\u306e\u624b\u76f4\u3057\n\u540c\u69d8\u306b\u3001\u65b0\u898f\u767b\u9332\u306b\u95a2\u3059\u308bcreate\u30e1\u30bd\u30c3\u30c9\u3092\u624b\u76f4\u3057\u3057\u3066\u304a\u304f(\u5143\u30b3\u30fc\u30c9\u306f\u7701\u7565)\u3002\n\ncontroller/PersonController\u6539.scala\n  def create = Action { request =>\n    request.body.asJson match {\n      case Some(jsObj) =>\n        val name = (jsObj \\\\ \"name\").head.toString\n        Created(personContainer.add(name).name)\n      case _                       => BadRequest(\"Invalid name\")\n    }\n  }\n\n\n\n...ID\u304c\u4e00\u3064\u98db\u3093\u30676\u756a\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u3001\u52d5\u4f5c\u3057\u305f\u3002\n\n\u611f\u60f3\u3068\u3001\u6b21\u56de\u306e\u53d6\u7d44\u307f\nHttpie(\u3082\u3057\u304f\u306fcurl)\u3068\u3001play\u306e\u52d5\u7684\u30b3\u30f3\u30d1\u30a4\u30eb\u6a5f\u80fd\u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4f8b\u984c\u3092\u5bb9\u6613\u306b\u4fee\u6b63\u3067\u304d\u305f\u3002\u53d6\u308a\u6025\u304e\u306e\u5c11\u3057\u7121\u7406\u3084\u308a\u306a\u4fee\u6b63\u3060\u3063\u305f\u306e\u3067\u3001\u6b21\u56de\u306f\u3001PlayFramework\u306eplay-json\u306e\u6f14\u7fd2\u3092\u517c\u306d\u3066\u3001\u3082\u3046\u5c11\u3057\u4e01\u5be7\u306a\u624b\u76f4\u3057\u306b\u53d6\u308a\u7d44\u3093\u3067\u307f\u305f\u3044\u3002\n#\u4f8b\u984c\u306e\u624b\u76f4\u3057\u306b\u6311\u6226\n\n[\u524d\u56de](http://qiita.com/kmry2045/items/3aa09eec99277b5b14e7)\u898b\u305fPlay Scala\u306e\u7c21\u5358REST\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30afPlay'R\u3001\u826f\u3055\u6c17\u3060\u3063\u305f\u306e\u3060\u3051\u308c\u3069\u3001\u4f8b\u984c\u306e\u66f4\u65b0\u7cfb(PUT/POST)\u304c\u52d5\u304b\u306a\u304b\u3063\u305f\u3002\u3071\u3063\u3068\u898b\u3001\u4f55\u3089\u304b\u306e\u7406\u7531\u3067\u3001Json\u5468\u308a\u306e\u51e6\u7406\u304c\u66f8\u304b\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u307d\u3044\u3063\u306e\u3067\u3001\u30c7\u30fc\u30bf\u3092\u66f4\u65b0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u3053\u3046\u3002\n\n# PUT\u30e1\u30bd\u30c3\u30c9\u306e\u624b\u76f4\u3057\n\n\u306f\u3058\u3081\u306f\u3001Person\u306e\u66f8\u304d\u63db\u3048(PUT)\u306b\u95a2\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u624b\u76f4\u3057\u3059\u308b:\n\n```controller/PersonController.scala\n  def write(person: Person) = Action { request =>\n    request.body.asText match {\n      case Some(name) if (name.length > 0) => Ok(personContainer.update(person.copy(name=name)).name)\n      case _                               => BadRequest(\"Invalid name\")\n    }\n  }\n```\n\n\u524d\u56de\u540c\u69d8\u3001httpie\u3092\u4f7f\u3063\u3066PUT\u306e\u6319\u52d5\u3092\u898b\u3066\u304a\u3053\u3046\u3002\n\n![jane.PNG](https://qiita-image-store.s3.amazonaws.com/0/16455/71b47dc0-d30d-ab34-8ba1-104a4fa44261.png)\n\nPUT\u30e1\u30bd\u30c3\u30c9\u3067\u3001Jane\u304cJIRO\u306b\u5909\u308f\u3063\u3066\u304f\u308c\u306a\u3044\u3053\u3068\u304c\u554f\u984c\u3002\n\n\u3053\u308c\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u4e2d\u3067\u306e[AnyContentAsJson\u30af\u30e9\u30b9](https://www.playframework.com/documentation/2.0/api/scala/play/api/mvc/AnyContentAsJson.html)\u306e\u6271\u3044\u304c\u4e0d\u9069\u5207\u306a\u3053\u3068\u306b\u3088\u308b\u3002\n\n\u4f55\u304c\u8d77\u304d\u3066\u3044\u308b\u306e\u304b\u3092\u3001print\u6587\u30c7\u30d0\u30c3\u30af\u3067\u8a66\u3057\u3066\u304a\u3053\u3046\u3002\n\n```controller/PersonController.scala\n  def write(person: Person) = Action { request =>\n    println(\"!!!!!!!!!AnyContentAsJson\u306e\u6319\u52d5\u3060\u3088!!!!!!!!!\")\n    println(\"request.body =\"+request.body)\n    println(\"request.body.asJson =\"+request.body.asJson)\n    println(\"request.body.asText =\"+request.body.asText)\n    println(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n    request.body.asText match {\n      case Some(name) if (name.length > 0) => Ok(personContainer.update(person.copy(name=name)).name)\n      case _                               => BadRequest(\"Invalid name\")\n    }\n  }\n```\n\nplay\u5074\u306e\u30ed\u30b0\u3092\u898b\u3066\u307f\u308b\u3068\u3001request.body.asText\u306e\u5909\u63db\u304c\u7121\u610f\u5473\u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u308b:\n\n![some.PNG](https://qiita-image-store.s3.amazonaws.com/0/16455/881e1f20-99bc-eb9f-556d-1c2bfe5c2b70.png)\n\n\u305d\u3053\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306basJson\u3092\u7528\u3044\u308b\u5f62\u306b\u66f8\u304d\u63db\u3048\u3066\u307f\u308b:\n\n```controller/PersonController\u6539.scala\n\n//json\u306e\u6271\u3044\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304a\u304f\nimport play.api.libs.json._\nimport play.api.libs.functional.syntax._\n...\n  def write(person: Person) = Action { request =>\n    request.body.asJson match {\n      case Some(jsObj) =>\n        val name = (jsObj \\\\ \"name\").head.toString\n        Ok(personContainer.update(person.copy(name=name)).name)\n      case _    => BadRequest(\"Invalid name\")\n    }\n  }\n```\n\n![jiro.PNG](https://qiita-image-store.s3.amazonaws.com/0/16455/e4c7c9a6-5c7d-1d3d-4bad-0bc3ebd78493.png)\n\n\u52d5\u4f5c\u3057\u305f\u3002\n\n# POST\u30e1\u30bd\u30c3\u30c9\u306e\u624b\u76f4\u3057\n\n\u540c\u69d8\u306b\u3001\u65b0\u898f\u767b\u9332\u306b\u95a2\u3059\u308bcreate\u30e1\u30bd\u30c3\u30c9\u3092\u624b\u76f4\u3057\u3057\u3066\u304a\u304f(\u5143\u30b3\u30fc\u30c9\u306f\u7701\u7565)\u3002\n\n```controller/PersonController\u6539.scala\n  def create = Action { request =>\n    request.body.asJson match {\n      case Some(jsObj) =>\n        val name = (jsObj \\\\ \"name\").head.toString\n        Created(personContainer.add(name).name)\n      case _                       => BadRequest(\"Invalid name\")\n    }\n  }\n```\n\n![genji.PNG](https://qiita-image-store.s3.amazonaws.com/0/16455/bc61e47d-63df-22ee-224a-e613e3a4a50e.png)\n\n...ID\u304c\u4e00\u3064\u98db\u3093\u30676\u756a\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u3001\u52d5\u4f5c\u3057\u305f\u3002\n\n#\u611f\u60f3\u3068\u3001\u6b21\u56de\u306e\u53d6\u7d44\u307f\n\nHttpie(\u3082\u3057\u304f\u306fcurl)\u3068\u3001play\u306e\u52d5\u7684\u30b3\u30f3\u30d1\u30a4\u30eb\u6a5f\u80fd\u3068\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4f8b\u984c\u3092\u5bb9\u6613\u306b\u4fee\u6b63\u3067\u304d\u305f\u3002\u53d6\u308a\u6025\u304e\u306e\u5c11\u3057\u7121\u7406\u3084\u308a\u306a\u4fee\u6b63\u3060\u3063\u305f\u306e\u3067\u3001\u6b21\u56de\u306f\u3001PlayFramework\u306eplay-json\u306e\u6f14\u7fd2\u3092\u517c\u306d\u3066\u3001\u3082\u3046\u5c11\u3057\u4e01\u5be7\u306a\u624b\u76f4\u3057\u306b\u53d6\u308a\u7d44\u3093\u3067\u307f\u305f\u3044\u3002\n", "tags": ["Scala", "PlayFramework", "PlayR", "httpie"]}