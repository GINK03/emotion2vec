{"context": "\n\nwindow function code\n\nwindow function\u3092\u8a66\u3057\u305f\nrolling\u3092\u4f7f\u3063\u305f\u79fb\u52d5\u7cfb\u96c6\u8a08\ntransform\u3092\u4f7f\u3063\u305fWindow function\n\n\nwindow\u5185\u5168\u4f53\u306b\u540c\u3058\u7d50\u679c\n\u7d2f\u7a4d\u3084\u79fb\u52d5\u7cfb\u306e\u96c6\u8a08\n\n\n\n\npandas_window_function.py\nimport pandas as pd\nimport seaborn as sns\n\n\n# http://pandas.pydata.org/pandas-docs/version/0.18.1/whatsnew.html\niris = sns.load_dataset(\"iris\")\niris = pd.concat([iris.head(3), iris.ix[50:52], iris.ix[100:102]]).reset_index(drop=True)\n\nres = pd.concat([\n        iris.sepal_length,\n        iris.sepal_length.shift(),\n        iris.sepal_length.shift(periods=-1),\n        iris.sepal_length.cumsum(),\n        iris.sepal_length.rolling(window=3).sum(),\n        iris.sepal_length.rolling(window=3, center=True).sum(),\n        iris.sepal_length.rolling(window=4, center=True).sum(),\n        iris.sepal_length.expanding().sum(),\n        iris.groupby(\"species\")[\"sepal_length\"].transform(np.sum),\n        iris.groupby(\"species\")[\"sepal_length\"].transform(pd.Series.cumsum),\n        iris.groupby(\"species\").apply(lambda x: x.expanding().sepal_length.sum()).reset_index(drop=True),\n        iris.groupby(\"species\").expanding().sepal_length.sum().reset_index(level=0, drop=True),\n        iris.groupby(\"species\").sepal_length.shift(),\n        iris.groupby(\"species\").sepal_length.shift(periods=-1),\n    ], axis=1)\nres.columns = [\n    \"default\",\n    \"shift_down\",\n    \"shift_up\",\n    \"cumsum\",\n    \"roll3_sum\",\n    \"roll3_sum_c\",\n    \"roll4_sum_c\", # \u5076\u6570\u306e\u5834\u5408, \u3069\u306e\u7bc4\u56f2\u306b\u306a\u308b\u304b\u306e\u78ba\u8a8d\u306e\u305f\u3081\n    \"ex_sum\",      # cumsum\n    \"trans_sum\",   # SQL Window\u95a2\u6570\u306b\u304a\u3051\u308bGroup\u5185\u3059\u3079\u3066\u3068\u540c\u69d8 \n    \"trans_cumsum\",# group\u5185cumsum\n    \"g_ex_old_sum\",\n    \"g_ex_sum\",    # group\u5185cumsum\n    \"g_shift_down\",# group\u5185shift\n    \"g_shift_up\",\n]\n\nimport tabulate\nprint(tabulate.tabulate(res, headers=\"keys\", tablefmt=\"pipe\"))\nres\n\n\n\nwindow function\u306e\u7d50\u679c\n\n\n\n\ndefault\nshift_down\nshift_up\ncumsum\nroll3_sum\nroll3_sum_c\nroll4_sum_c\nex_sum\ntrans_sum\ntrans_cumsum\ng_ex_old_sum\ng_ex_sum\ng_shift_down\ng_shift_up\n\n\n\n\n0\n5.1\nnan\n4.9\n5.1\nnan\nnan\nnan\n5.1\n14.7\n5.1\n5.1\n5.1\nnan\n4.9\n\n\n1\n4.9\n5.1\n4.7\n10\nnan\n14.7\nnan\n10\n14.7\n10\n10\n10\n5.1\n4.7\n\n\n2\n4.7\n4.9\n7\n14.7\n14.7\n16.6\n21.7\n14.7\n14.7\n14.7\n14.7\n14.7\n4.9\nnan\n\n\n3\n7\n4.7\n6.4\n21.7\n16.6\n18.1\n23\n21.7\n20.3\n7\n7\n7\nnan\n6.4\n\n\n4\n6.4\n7\n6.9\n28.1\n18.1\n20.3\n25\n28.1\n20.3\n13.4\n13.4\n13.4\n7\n6.9\n\n\n5\n6.9\n6.4\n6.3\n35\n20.3\n19.6\n26.6\n35\n20.3\n20.3\n20.3\n20.3\n6.4\nnan\n\n\n6\n6.3\n6.9\n5.8\n41.3\n19.6\n19\n25.4\n41.3\n19.2\n6.3\n6.3\n6.3\nnan\n5.8\n\n\n7\n5.8\n6.3\n7.1\n47.1\n19\n19.2\n26.1\n47.1\n19.2\n12.1\n12.1\n12.1\n6.3\n7.1\n\n\n8\n7.1\n5.8\nnan\n54.2\n19.2\nnan\nnan\n54.2\n19.2\n19.2\n19.2\n19.2\n5.8\nnan\n\n\n\n\n\u6761\u4ef6\u4ed8\u304dgroupby\u96c6\u8a08\n\n\u4eca\u56de\u306e\u4f8b\u306fsum(case when x % 2 = 0 then x else 0 end)\n\nhaving\u306f\u96c6\u8a08\u5f8c\u306efiltering\u306a\u306e\u3067\u9055\u3046\n\n\npandas_conditional_aggregation_using_groupby.py\ndf = pd.DataFrame(\n    {\n        \"type\": list(\"aaaabbbbcccc\"),\n        \"v\": range(12),\n    }\n)\nprint(df.groupby(\"type\")[\"v\"].apply(lambda x: x[x%2==0].sum()))\n\"\"\"\ntype\na     2\nb    10\nc    18\nName: v, dtype: int64\n\"\"\"\n\ndef _t(x):\n    x[x%2!=0] = 0\n    return x.cumsum()\n\nconditional_df = pd.concat(\n    [\n        df,\n        df[\"v\"].apply(lambda x: x if x%2==0 else 0),\n        df[\"v\"].apply(lambda x: x if x%2==0 else 0).cumsum(),\n        df.groupby(\"type\")[\"v\"].transform(lambda x: x[x%2==0].sum()),\n        df.groupby(\"type\")[\"v\"].transform(lambda x: x[x%2==0].cumsum()),\n        df.groupby(\"type\")[\"v\"].transform(_t),\n    ], axis=1)\nconditional_df.columns = [\"type\", \"v\", \"\u5947\u6570\u306f0(\u4ee5\u5f8c\u540c\u69d8\u306b0)\", \"cumsum\", \"group sum\",  \"group cumsum(\u671f\u5f85\u5024\u3068\u7570\u306a\u308b)\", \"group cumsum\"]\nconditional_df\n\n\n\n\u7d50\u679c\n\n\n\n\ntype\nv\n\u5947\u6570\u306f0(\u4ee5\u5f8c\u540c\u69d8\u306b0)\ncumsum\ngroup sum\ngroup cumsum(\u671f\u5f85\u5024\u3068\u7570\u306a\u308b)\ngroup cumsum\n\n\n\n\n0\na\n0\n0\n0\n2\n0\n0\n\n\n1\na\n1\n0\n0\n2\n2\n0\n\n\n2\na\n2\n2\n2\n2\n0\n2\n\n\n3\na\n3\n0\n2\n2\n2\n2\n\n\n4\nb\n4\n4\n6\n10\n4\n4\n\n\n5\nb\n5\n0\n6\n10\n10\n4\n\n\n6\nb\n6\n6\n12\n10\n4\n10\n\n\n7\nb\n7\n0\n12\n10\n10\n10\n\n\n8\nc\n8\n8\n20\n18\n8\n8\n\n\n9\nc\n9\n0\n20\n18\n18\n8\n\n\n10\nc\n10\n10\n30\n18\n8\n18\n\n\n11\nc\n11\n0\n30\n18\n18\n18\n\n\n\n\n\u304a\u307e\u3051ranking\n\npandas_series_rank.py\ns = pd.Series([1,2,2,3,4])\nrank_df = pd.DataFrame().assign(value=s)\nrank_df = rank_df.assign(\n    default=s.rank(),\n    first_rank=s.rank(method=\"first\"),\n    dense=s.rank(method=\"dense\"),\n    min_rank=s.rank(method=\"min\"),\n    max_rank=s.rank(method=\"max\")\n).astype(int)\n\nimport tabulate\nprint(tabulate.tabulate(rank_df, headers=\"keys\", tablefmt=\"pipe\"))\nrank_df\n# \u4e00\u5ea6\u306b\u8907\u6570assign\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30ab\u30e9\u30e0\u306f\u540d\u524d\u306esort\u9806\u306b\u306a\u308b\n# => dict\u304b\u3089DataFrame\u3092\u4f5c\u3063\u305f\u3068\u304d\u3068\u540c\u3058\n\n\n\npandas_series_rank_result.md\n|    |   value |   default |   dense |   first_rank |   max_rank |   min_rank |\n|---:|--------:|----------:|--------:|-------------:|-----------:|-----------:|\n|  0 |       1 |         1 |       1 |            1 |          1 |          1 |\n|  1 |       2 |         2 |       2 |            2 |          3 |          2 |\n|  2 |       2 |         2 |       2 |            3 |          3 |          2 |\n|  3 |       3 |         4 |       3 |            4 |          4 |          4 |\n|  4 |       4 |         5 |       4 |            5 |          5 |          5 |\n\n\n## window function code\n\n- window function\u3092\u8a66\u3057\u305f\n- rolling\u3092\u4f7f\u3063\u305f\u79fb\u52d5\u7cfb\u96c6\u8a08\n- transform\u3092\u4f7f\u3063\u305fWindow function\n    - window\u5185\u5168\u4f53\u306b\u540c\u3058\u7d50\u679c\n    - \u7d2f\u7a4d\u3084\u79fb\u52d5\u7cfb\u306e\u96c6\u8a08\n\n```py3:pandas_window_function.py\nimport pandas as pd\nimport seaborn as sns\n\n\n# http://pandas.pydata.org/pandas-docs/version/0.18.1/whatsnew.html\niris = sns.load_dataset(\"iris\")\niris = pd.concat([iris.head(3), iris.ix[50:52], iris.ix[100:102]]).reset_index(drop=True)\n\nres = pd.concat([\n        iris.sepal_length,\n        iris.sepal_length.shift(),\n        iris.sepal_length.shift(periods=-1),\n        iris.sepal_length.cumsum(),\n        iris.sepal_length.rolling(window=3).sum(),\n        iris.sepal_length.rolling(window=3, center=True).sum(),\n        iris.sepal_length.rolling(window=4, center=True).sum(),\n        iris.sepal_length.expanding().sum(),\n        iris.groupby(\"species\")[\"sepal_length\"].transform(np.sum),\n        iris.groupby(\"species\")[\"sepal_length\"].transform(pd.Series.cumsum),\n        iris.groupby(\"species\").apply(lambda x: x.expanding().sepal_length.sum()).reset_index(drop=True),\n        iris.groupby(\"species\").expanding().sepal_length.sum().reset_index(level=0, drop=True),\n        iris.groupby(\"species\").sepal_length.shift(),\n        iris.groupby(\"species\").sepal_length.shift(periods=-1),\n    ], axis=1)\nres.columns = [\n    \"default\",\n    \"shift_down\",\n    \"shift_up\",\n    \"cumsum\",\n    \"roll3_sum\",\n    \"roll3_sum_c\",\n    \"roll4_sum_c\", # \u5076\u6570\u306e\u5834\u5408, \u3069\u306e\u7bc4\u56f2\u306b\u306a\u308b\u304b\u306e\u78ba\u8a8d\u306e\u305f\u3081\n    \"ex_sum\",      # cumsum\n    \"trans_sum\",   # SQL Window\u95a2\u6570\u306b\u304a\u3051\u308bGroup\u5185\u3059\u3079\u3066\u3068\u540c\u69d8 \n    \"trans_cumsum\",# group\u5185cumsum\n    \"g_ex_old_sum\",\n    \"g_ex_sum\",    # group\u5185cumsum\n    \"g_shift_down\",# group\u5185shift\n    \"g_shift_up\",\n]\n\nimport tabulate\nprint(tabulate.tabulate(res, headers=\"keys\", tablefmt=\"pipe\"))\nres\n```\n\n### window function\u306e\u7d50\u679c\n|    |   default |   shift_down |   shift_up |   cumsum |   roll3_sum |   roll3_sum_c |   roll4_sum_c |   ex_sum |   trans_sum |   trans_cumsum |   g_ex_old_sum |   g_ex_sum |   g_shift_down |   g_shift_up |\n|---:|----------:|-------------:|-----------:|---------:|------------:|--------------:|--------------:|---------:|------------:|---------------:|---------------:|-----------:|---------------:|-------------:|\n|  0 |       5.1 |        nan   |        4.9 |      5.1 |       nan   |         nan   |         nan   |      5.1 |        14.7 |            5.1 |            5.1 |        5.1 |          nan   |          4.9 |\n|  1 |       4.9 |          5.1 |        4.7 |     10   |       nan   |          14.7 |         nan   |     10   |        14.7 |           10   |           10   |       10   |            5.1 |          4.7 |\n|  2 |       4.7 |          4.9 |        7   |     14.7 |        14.7 |          16.6 |          21.7 |     14.7 |        14.7 |           14.7 |           14.7 |       14.7 |            4.9 |        nan   |\n|  3 |       7   |          4.7 |        6.4 |     21.7 |        16.6 |          18.1 |          23   |     21.7 |        20.3 |            7   |            7   |        7   |          nan   |          6.4 |\n|  4 |       6.4 |          7   |        6.9 |     28.1 |        18.1 |          20.3 |          25   |     28.1 |        20.3 |           13.4 |           13.4 |       13.4 |            7   |          6.9 |\n|  5 |       6.9 |          6.4 |        6.3 |     35   |        20.3 |          19.6 |          26.6 |     35   |        20.3 |           20.3 |           20.3 |       20.3 |            6.4 |        nan   |\n|  6 |       6.3 |          6.9 |        5.8 |     41.3 |        19.6 |          19   |          25.4 |     41.3 |        19.2 |            6.3 |            6.3 |        6.3 |          nan   |          5.8 |\n|  7 |       5.8 |          6.3 |        7.1 |     47.1 |        19   |          19.2 |          26.1 |     47.1 |        19.2 |           12.1 |           12.1 |       12.1 |            6.3 |          7.1 |\n|  8 |       7.1 |          5.8 |      nan   |     54.2 |        19.2 |         nan   |         nan   |     54.2 |        19.2 |           19.2 |           19.2 |       19.2 |            5.8 |        nan   |\n\n## \u6761\u4ef6\u4ed8\u304dgroupby\u96c6\u8a08\n- \u4eca\u56de\u306e\u4f8b\u306f`sum(case when x % 2 = 0 then x else 0 end)`\n- having\u306f\u96c6\u8a08\u5f8c\u306efiltering\u306a\u306e\u3067\u9055\u3046\n\n```py3:pandas_conditional_aggregation_using_groupby.py\ndf = pd.DataFrame(\n    {\n        \"type\": list(\"aaaabbbbcccc\"),\n        \"v\": range(12),\n    }\n)\nprint(df.groupby(\"type\")[\"v\"].apply(lambda x: x[x%2==0].sum()))\n\"\"\"\ntype\na     2\nb    10\nc    18\nName: v, dtype: int64\n\"\"\"\n\ndef _t(x):\n    x[x%2!=0] = 0\n    return x.cumsum()\n\nconditional_df = pd.concat(\n    [\n        df,\n        df[\"v\"].apply(lambda x: x if x%2==0 else 0),\n        df[\"v\"].apply(lambda x: x if x%2==0 else 0).cumsum(),\n        df.groupby(\"type\")[\"v\"].transform(lambda x: x[x%2==0].sum()),\n        df.groupby(\"type\")[\"v\"].transform(lambda x: x[x%2==0].cumsum()),\n        df.groupby(\"type\")[\"v\"].transform(_t),\n    ], axis=1)\nconditional_df.columns = [\"type\", \"v\", \"\u5947\u6570\u306f0(\u4ee5\u5f8c\u540c\u69d8\u306b0)\", \"cumsum\", \"group sum\",  \"group cumsum(\u671f\u5f85\u5024\u3068\u7570\u306a\u308b)\", \"group cumsum\"]\nconditional_df\n```\n\n### \u7d50\u679c\n|    | type   |   v |   \u5947\u6570\u306f0(\u4ee5\u5f8c\u540c\u69d8\u306b0) |   cumsum |   group sum |   group cumsum(\u671f\u5f85\u5024\u3068\u7570\u306a\u308b) |   group cumsum |\n|---:|:-------|----:|---------------:|---------:|------------:|------------------------:|---------------:|\n|  0 | a      |   0 |              0 |        0 |           2 |                       0 |              0 |\n|  1 | a      |   1 |              0 |        0 |           2 |                       2 |              0 |\n|  2 | a      |   2 |              2 |        2 |           2 |                       0 |              2 |\n|  3 | a      |   3 |              0 |        2 |           2 |                       2 |              2 |\n|  4 | b      |   4 |              4 |        6 |          10 |                       4 |              4 |\n|  5 | b      |   5 |              0 |        6 |          10 |                      10 |              4 |\n|  6 | b      |   6 |              6 |       12 |          10 |                       4 |             10 |\n|  7 | b      |   7 |              0 |       12 |          10 |                      10 |             10 |\n|  8 | c      |   8 |              8 |       20 |          18 |                       8 |              8 |\n|  9 | c      |   9 |              0 |       20 |          18 |                      18 |              8 |\n| 10 | c      |  10 |             10 |       30 |          18 |                       8 |             18 |\n| 11 | c      |  11 |              0 |       30 |          18 |                      18 |             18 |\n\n## \u304a\u307e\u3051ranking\n```pandas_series_rank.py\ns = pd.Series([1,2,2,3,4])\nrank_df = pd.DataFrame().assign(value=s)\nrank_df = rank_df.assign(\n    default=s.rank(),\n    first_rank=s.rank(method=\"first\"),\n    dense=s.rank(method=\"dense\"),\n    min_rank=s.rank(method=\"min\"),\n    max_rank=s.rank(method=\"max\")\n).astype(int)\n\nimport tabulate\nprint(tabulate.tabulate(rank_df, headers=\"keys\", tablefmt=\"pipe\"))\nrank_df\n# \u4e00\u5ea6\u306b\u8907\u6570assign\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30ab\u30e9\u30e0\u306f\u540d\u524d\u306esort\u9806\u306b\u306a\u308b\n# => dict\u304b\u3089DataFrame\u3092\u4f5c\u3063\u305f\u3068\u304d\u3068\u540c\u3058\n```\n\n```pandas_series_rank_result.md\n|    |   value |   default |   dense |   first_rank |   max_rank |   min_rank |\n|---:|--------:|----------:|--------:|-------------:|-----------:|-----------:|\n|  0 |       1 |         1 |       1 |            1 |          1 |          1 |\n|  1 |       2 |         2 |       2 |            2 |          3 |          2 |\n|  2 |       2 |         2 |       2 |            3 |          3 |          2 |\n|  3 |       3 |         4 |       3 |            4 |          4 |          4 |\n|  4 |       4 |         5 |       4 |            5 |          5 |          5 |\n```\n", "tags": ["memo"]}