{"context": " More than 1 year has passed since last update.\n\nTcl\u3067flymake\u3092\u4f7f\u3046\n\n\u6e96\u5099\n\nAcitiveState\u304b\u3089Tcl Dev Kit\u3092\u8cfc\u5165\u3059\u308b\u3002\u3053\u3053\u304c\u4e00\u756a\u96e3\u6613\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u3002\ntclchecker.exe\u306bPATH\u3092\u901a\u3059\n\n\nflymake.el\u3092\u4fee\u6b63\u3059\u308b\u3002\nwarning \u306e\u6587\u5b57\u5217\u5b9a\u7fa9\u3092\u4fee\u6b63\u3002\u4ed6\u306e\u8a00\u8a9e\u306eWanring\u3092\u5b8c\u5168\u306b\u6bba\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u601d\u3044\u5207\u308a\u304c\u5fc5\u8981\u3067\u3059\u3002\n963c963,964\n<         (if (and err-text (string-match \"^[wW]arning\" err-text))\n---\n> ;       (if (and err-text (string-match \"^[wW]arning\" err-text))\n>         (if (and err-text (string-match \"^(warn\" err-text))\n\n\n.emacs\u306b\u8ffd\u52a0\ntclchecker\u3078\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n.emacs\n(require 'flymake)\n(setq flymake-allowed-file-name-masks (cons '(\".+\\\\.tcl$\" flymake-simple-make-init) flymake-allowed-file-name-masks))\n(defun flymake-get-make-cmdline (source base-dir)\n  (list \"tclchecker\" (list \"-quiet\" \"-W3\" \"-suppress\" \"nonPortFile\" \"-suppress\" \"nonPortCmd\"  (concat base-dir source))))\n(setq flymake-err-line-patterns\n (cons\n  '(\"\\\\(.+\\\\):\\\\([0-9]+\\\\) \\\\(.+\\\\)\" 1 2 nil 3)\n  flymake-err-line-patterns))\n\n\n\n\u5b9f\u884c\u306e\u69d8\u5b50\n\n# Tcl\u3067flymake\u3092\u4f7f\u3046\n## \u6e96\u5099\n- AcitiveState\u304b\u3089Tcl Dev Kit\u3092\u8cfc\u5165\u3059\u308b\u3002\u3053\u3053\u304c\u4e00\u756a\u96e3\u6613\u5ea6\u304c\u9ad8\u3044\u3067\u3059\u3002\n- tclchecker.exe\u306bPATH\u3092\u901a\u3059\n\n## flymake.el\u3092\u4fee\u6b63\u3059\u308b\u3002\nwarning \u306e\u6587\u5b57\u5217\u5b9a\u7fa9\u3092\u4fee\u6b63\u3002\u4ed6\u306e\u8a00\u8a9e\u306eWanring\u3092\u5b8c\u5168\u306b\u6bba\u3057\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u601d\u3044\u5207\u308a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n```diff\n963c963,964\n<         (if (and err-text (string-match \"^[wW]arning\" err-text))\n---\n> ;       (if (and err-text (string-match \"^[wW]arning\" err-text))\n>         (if (and err-text (string-match \"^(warn\" err-text))\n```\n\n## .emacs\u306b\u8ffd\u52a0\ntclchecker\u3078\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3044\u308d\u3044\u308d\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```common-lisp:.emacs\n(require 'flymake)\n(setq flymake-allowed-file-name-masks (cons '(\".+\\\\.tcl$\" flymake-simple-make-init) flymake-allowed-file-name-masks))\n(defun flymake-get-make-cmdline (source base-dir)\n  (list \"tclchecker\" (list \"-quiet\" \"-W3\" \"-suppress\" \"nonPortFile\" \"-suppress\" \"nonPortCmd\"  (concat base-dir source))))\n(setq flymake-err-line-patterns\n (cons\n  '(\"\\\\(.+\\\\):\\\\([0-9]+\\\\) \\\\(.+\\\\)\" 1 2 nil 3)\n  flymake-err-line-patterns))\n```\n\n## \u5b9f\u884c\u306e\u69d8\u5b50\n![\u5b9f\u884c\u4e2d](https://www.evernote.com/shard/s25/sh/5eabd813-8aee-4c4a-8ed8-05d38327a99f/4d95819026aacaa40e6146faa5592eb0/res/f785dbcc-06d7-4550-954c-455af08da5c2/ScreenClip.png)", "tags": ["Tcl", "Emacs"]}