{"context": "\n\n\u5bfe\u51e6\ncase class\u304c\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u3060\u3063\u305f\u6642\u306bcreated_at\u3084updated_at\u306eDateTime\u304corg.joda.time.DateTime\u3078\u306e\u5909\u63db\u304c\u51fa\u6765\u306a\u3044\u3089\u3057\u304fimplicit val\u3067\u5909\u63db\u3055\u305b\u308b\u65b9\u6cd5\u3067\u5bfe\u51e6\u3057\u307e\u3057\u305f\ncase class Article (\n  id: Int,\n  title: String,\n  url: String,\n  created_at: DateTime,\n  updated_at: DateTime\n)\n\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\n\nSource doesn't know how to decode 'u.page_created_at: org.joda.time.DateTime'\n\n\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\u306e\u3067\ndb.run()\u3092\u4f7f\u3063\u3066\u3044\u308b\u30b9\u30b3\u30fc\u30d7\u5185\u306b\n  implicit val decodeDateTime = mappedEncoding[Date, DateTime](new DateTime(_))\n  implicit val encodeDateTime = mappedEncoding[DateTime, Date](_.toDate)\n\n  def findById() = {\n    db.run( ArticleDao.find(1) )\n  }\n\n\n\u3068\u66f8\u3044\u3066\u304a\u3051\u3070DB\u304b\u3089\u53d6\u5f97\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067JodaTime\u3078\u306e\u5909\u63db\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\n\n\u53c2\u8003\ngetquill/quill java8 date apis #111\n\n##\u5bfe\u51e6\n\ncase class\u304c\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u3060\u3063\u305f\u6642\u306bcreated_at\u3084updated_at\u306eDateTime\u304c`org.joda.time.DateTime`\u3078\u306e\u5909\u63db\u304c\u51fa\u6765\u306a\u3044\u3089\u3057\u304fimplicit val\u3067\u5909\u63db\u3055\u305b\u308b\u65b9\u6cd5\u3067\u5bfe\u51e6\u3057\u307e\u3057\u305f\n\n\n```scala\ncase class Article (\n  id: Int,\n  title: String,\n  url: String,\n  created_at: DateTime,\n  updated_at: DateTime\n)\n```\n\n\u3053\u308c\u3092\u305d\u306e\u307e\u307e\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\n\n> Source doesn't know how to decode 'u.page_created_at: org.joda.time.DateTime'\n\n\u306e\u3088\u3046\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\n\n\u306e\u3067\n\n`db.run()`\u3092\u4f7f\u3063\u3066\u3044\u308b\u30b9\u30b3\u30fc\u30d7\u5185\u306b\n\n```scala\n  implicit val decodeDateTime = mappedEncoding[Date, DateTime](new DateTime(_))\n  implicit val encodeDateTime = mappedEncoding[DateTime, Date](_.toDate)\n  \n  def findById() = {\n    db.run( ArticleDao.find(1) )\n  }\n  \n```\n\n\u3068\u66f8\u3044\u3066\u304a\u3051\u3070DB\u304b\u3089\u53d6\u5f97\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067JodaTime\u3078\u306e\u5909\u63db\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3057\u305f\n\n\n##\u53c2\u8003\n[getquill/quill java8 date apis #111](https://github.com/getquill/quill/issues/111 \"getquill/quill java8 date apis #111\")\n", "tags": ["Scala", "Quill", "ORM"]}