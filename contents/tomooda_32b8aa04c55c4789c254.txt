{"tags": ["Phratch", "Pharo3.0"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u6982\u8981\nScratch \u306e Pharo \u30dd\u30fc\u30c8\u3067\u3042\u308bPhratch \u306b Smalltalk \u3067\u6a5f\u80fd\u62e1\u5f35\u3057\u3066\u30d6\u30ed\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u9806\u30e1\u30e2\u3067\u3059\u3002\u672c\u5bb6\u306e based on Scratch \u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3001\u62e1\u5f35\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u62e1\u5f35\u306e\u6982\u8981\nPhratch \u306b\u300cDesign\u300d\u3068\u3044\u3046\u30ab\u30bf\u30ed\u30b0\u3092\u8ffd\u52a0\u3057\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\uff08pre-condition, post-condition, assert\uff09\u306e\u305f\u3081\u306e\u30d6\u30ed\u30c3\u30af\u30924\u3064\uff08pre \u30d6\u30ed\u30c3\u30af\u3001post \u30d6\u30ed\u30c3\u30af\u3001pre-post \u30d6\u30ed\u30c3\u30af\u3001assert \u30d6\u30ed\u30c3\u30af\uff09\u4f5c\u6210\u3057\u767b\u9332\u3057\u307e\u3059\u3002\n\n\nPhratch \u3092\u5165\u624b\u3059\u308b\nPhratch \u306f smalltalkhub\u4e0a\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u3068\u3057\u3066\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001 \u30d7\u30ea\u30d1\u30c3\u30b1\u30fc\u30b8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 \u3054\u3068\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306e\u304c\u697d\u3067\u3059\u3002\n\u8d77\u52d5\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3001\u6700\u521d\u304b\u3089 Phratch \u304c\u4f7f\u3048\u308b\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nMacOSX \u4e0a\u306e\u5834\u5408\u3001shift-option-click \u3067\u30e2\u30fc\u30d5\u306e Halo \u3092\u51fa\u305b\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a Phratch\u5168\u4f53\u306e\u30e2\u30fc\u30d5 \u3092 delete \u3059\u308c\u3070\u3001\u666e\u901a\u306e Pharo \u306e\u958b\u767a\u74b0\u5883\u3068\u3057\u3066\u4f7f\u3048\u307e\u3059\u3002\n\nPhratchProcess \u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u6a5f\u80fd\u306f Pharo \u3067\u306f\u307e\u3060\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u306f\u51e6\u7406\u7cfb\u306b\u305d\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Phratch \u306e\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f PhratchProcess \u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nPhratchProcess \u30af\u30e9\u30b9\u306e private-special forms \u30e1\u30c3\u30bb\u30fc\u30b8\u30ab\u30c6\u30b4\u30ea\u306b doIf \u7b49\u306e\u53c2\u8003\u306b\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305a\u306f assert \u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nPhratchProcess\ndoAssert\n    \"Evaluate the current expression (which must be an assertion).\"\n\n    | block arguments argExp |\n    block := stackFrame expression.\n    arguments := stackFrame arguments.\n    \"Evaluate the arg if we haven't already.\"\n    arguments size = 0\n        ifTrue: [ \n            argExp := block argumentAt: 1.\n            ^ self pushStackFrame: (PhratchStackFrame new expression: argExp) ].\n    \"We can pop this expression off the stack either way.\"\n    self popStackFrame. \"If the predicate was false, just return.\"\n    arguments first = true\n        ifFalse: [ ^ self assertionError: block ]\n\n\nPhratch \u306e\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u306b\u306a\u3063\u3066\u3044\u3066\u3001 expression \u306b\u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30d6\u30ed\u30c3\u30af\uff08Morph\uff09\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30d6\u30ed\u30c3\u30af\u306e\u5f15\u6570\u3082\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305a\u306f\u3001\u5b9f\u5f15\u6570\u304c\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u5f15\u6570\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\u3001\u5f15\u6570\u30d6\u30ed\u30c3\u30af\u3092\u30b9\u30bf\u30c3\u30af\u306b\u4e57\u305b\u3066\u3001\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3055\u305b\u307e\u3059\u3002\uff08arguments size = 0 ifTrue: [...]\u306e\u3042\u305f\u308a\uff09\n\u3059\u308b\u3068\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u305f\u5f15\u6570\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308a\u51fa\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\u3044\u3064\u304b\u3001assert \u30d6\u30ed\u30c3\u30af\u304c\u30b9\u30bf\u30c3\u30af\u306etop\u306b\u306a\u3063\u305f\u3089\u307e\u305f\u3053\u306e doAssert \u304c\u5b9f\u884c\u3055\u308c\u3066\u3001\u4eca\u5ea6\u306f\u30b9\u30bf\u30c3\u30af\u4e0a\u306b\u5f15\u6570\u304c\u4e57\u3063\u3066\u304f\u308b\u306e\u3067\u3001arguments size = 0 ifTrue: [...]\u3092\u901a\u904e\u3057\u3066\u3001\u3044\u3088\u3044\u3088 assert \u306e\u51e6\u7406\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\nself popStackFrame\u3067\u81ea\u5206\u81ea\u8eab\u3092\u30b9\u30bf\u30c3\u30af\u304b\u3089\u53d6\u308a\u6255\u3063\u3066\u3001\u3082\u3057\u5b9f\u5f15\u6570\u304ctrue\u3067\u3042\u308c\u3070\u691c\u67fb\u5408\u683c\u3067\u3059\u3002\u4f55\u3082\u3059\u308b\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u3082\u3057true\u3067\u306a\u3051\u308c\u3070\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u306e\u51e6\u7406\u7528\u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nPhratchProcess\nassertionError: aPhratchBlock\n    aPhratchBlock hasError: true.\n    aPhratchBlock showError.\n    aPhratchBlock changed\n\n\n\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3001doPre, doPost, doPrePost\u3082\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u30d6\u30ed\u30c3\u30af\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n\u6b21\u306b\u3001\u51e6\u7406\u7cfb\u306b doAssert \u3092\u5b9f\u884c\u3055\u305b\u308b\u30d6\u30ed\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nPhratch\u3067\u306f BlockMorph \u306e\u3069\u3053\u304b\u9069\u5207\u306a\u30b5\u30d6\u30af\u30e9\u30b9\u304b\u3089\u7d99\u627f\u3059\u308b\u3068\u697d\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 assert \u306e\u5834\u5408\u306b\u306f\u3001\u5358\u4f53\u306e\u547d\u4ee4\u30d6\u30ed\u30c3\u30af\u306a\u306e\u3067 CommandBlockMorph \u304c\u9069\u5207\u306a\u9078\u629e\u306b\u306a\u308a\u307e\u3059\u3002\n\nclass-definition\nCommandBlockMorph subclass: #AssertBlockMorph\n    instanceVariableNames: 'hasError'\n    classVariableNames: ''\n    category: 'Assertch-Core'\n\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u7ba1\u7406\u306e\u305f\u3081\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 hasError \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u306f PhratchProcess \u306e assertionError: \u3067\u4f7f\u3063\u305f hasError:\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nAssertBlockMorph\nhasError: aBoolean\n    hasError := aBoolean = true\n\n\n\u3064\u3044\u3067\u306b\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u554f\u3044\u5408\u308f\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\nAssertBlockMorph\nhasError\n    ^ hasError = true\n\n\n\nAssertBlockMorph\nresetError\n    self hasError: false.\n    self color: PhratchCategoryAssertions color.\n    self changed.\n\n\n\u3055\u3089\u306b\u3001\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3067\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\u307e\u305a\u306f\u30e1\u30cb\u30e5\u30fc\u306b reset error \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nAssertBlockMorph\nrightButtonMenu\n    | menu choice |\n    menu := MenuMorph new defaultTarget: self.\n    menu add: 'help' value: #presentHelpScreen.\n    owner isPhratchBlockPaletteMorph\n        ifFalse: [ \n            menu addLine.\n            self hasError\n                ifTrue: [ \n                    menu add: 'reset error' value: #resetError.\n                    menu addLine ].\n            menu add: 'duplicate' value: #duplicate.\n            self owner isBlockMorph\n                ifFalse: [ \n                    \"we can't yet delete a blocks inside a script\"\n                    menu add: 'delete' value: #delete ].\n            menu add: 'show algorithm' value: #showCodeString ].\n    menu\n        localize;\n        invokeModal.\n    choice := menu selectedValue ifNil: [ ^ self ].\n    self perform: choice\n\n\n\u5b9f\u969b\u306b\u8ffd\u52a0\u3059\u308b\u306e\u306f self hasError ifTrue: [...] \u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\n\u3055\u3066\u3001\u6700\u5f8c\u306b\u3053\u306e\u30d6\u30ed\u30c3\u30af\u306e\u300c\u51e6\u7406\u300d\u306f PhratchProcess\u306b\u62e1\u5f35\u3057\u305fdoAssert\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\nAssertBlockMorph-class\nblockTypeOn: aScriptablePhratchMorph spec: spec color: blockColor\n\n    |block|\n    block :=  self new isSpecialForm: true.\n    ^block\n\n\nisSpecialForm: true\u3092\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u30d6\u30ed\u30c3\u30af\u306fPhratchProcess\u306e\u5c02\u7528\u547d\u4ee4doAssert\u3067\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nAssertchPreBlockMorph, AssertchPostBlockMorph, AssertchPrePostBlockMorph\u3082\u540c\u69d8\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u30ab\u30bf\u30ed\u30b0\u3092\u4f5c\u6210\u3059\u308b\n\u3055\u3066\u3001\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u30d6\u30ed\u30c3\u30af\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u30ab\u30bf\u30ed\u30b0\u306b\u8f09\u305b\u307e\u3057\u3087\u3046\u3002\n\u30ab\u30bf\u30ed\u30b0\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001PhratchCategory \u30af\u30e9\u30b9\u304b\u3089\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n\nclass-definition\nPhratchCategory subclass: #PhratchCategoryAssertions\n    instanceVariableNames: ''\n    classVariableNames: ''\n    category: 'Assertch-Core'\n\n\n\u30ab\u30bf\u30ed\u30b0\u306e\u8272\u3001\u540d\u524d\u3001\u9806\u4f4d\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\nPhratchCategoryAssertions-class\ncolor\n    ^(Color r: 0.02 g: 0.02 b: 0.02)\n\n\n\nPhratchCategoryAssertions-class\nlabel\n    ^'design'\n\n\n\nPhratchCategoryAssertions-class\norder\n    ^2.26\n\n\n\u30ab\u30bf\u30ed\u30b0\u306b\u30d6\u30ed\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306b\u306f\u3001 ScriptablePhratchMorph \u306bpragma\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nScriptablePhratchMorph\ndoAssert\n    <phratchItem: 'here should hold $Boolean$' kind: #AssertBlockMorph category: 'design' defaultValues: #() subCategory: #inv special: #()>\n\n\nphratchItem \u306b\u30d6\u30ed\u30c3\u30af\u4e0a\u306e\u30e9\u30d9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u5f15\u6570\u306fboolean\u306a\u306e\u3067\u3001\u4eee\u5f15\u6570\u3068\u3057\u3066 $Boolean$ \u3068\u66f8\u3044\u3066\u304a\u304f\u3068\u3001\u771f\u507d\u5024\u304c\u5165\u308b\u7a74\u3092\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u3042\u3068\u306f\u3060\u3044\u305f\u3044\u898b\u3066\u306e\u901a\u308a\u3067\u3059\u3002\n\u4ed6\u306e\u30d6\u30ed\u30c3\u30af\u3082\u540c\u69d8\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\npre-post \u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3063\u305f\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u304f\u3068\u3001\nset x to 10\nbecause x >= 0, make x < 0 by\n    set x to neg x\n\n\u3068\u306a\u308a\u307e\u3059\u3002\nbecause ...\u306e\u90e8\u5206\u304c\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\u3053\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u306f\n\nset x to neg x \u3068\u3044\u3046\u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u610f\u56f3\u3068\u3057\u3066\u3001\u300c x >= 0 \u304c\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u304b\u3089\u3001set x to neg x \u3059\u308b\u3053\u3068\u3067\u3001 x < 0 \u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u8aac\u660e\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u6642\u306b\u3001set x to neg x \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b x >= 0 \u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u3001\u3055\u3089\u306b\u3001set x to neg x \u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306b\u306f x < 0 \u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n\u3068\u3044\u30462\u3064\u306e\u5f79\u5272\u304c\u3042\u308a\u307e\u3059\u3002\n\u304a\u6c17\u4ed8\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002x >= 0\u3092\u7406\u7531\u3068\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u306f\u3001x >= 0 \u3092\u6e80\u305f\u3059\u5168\u3066\u306e x \u306b\u3064\u3044\u3066\u3001set x to neg x\u3059\u308b\u3068 x < 0 \u3068\u306a\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001x = 0 \u306e\u6642\u306b\u306f\u3001\u6210\u308a\u7acb\u3061\u307e\u305b\u3093\u3002\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u5931\u6557\u3057\u3001\u30d6\u30ed\u30c3\u30af\u304c\u8d64\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u30a8\u30e9\u30fc\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\nAssertchProcess \u306e assertionError: \u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3088\u308a\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30d6\u30ed\u30c3\u30af\u304c\u30a8\u30e9\u30fc\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u53f3\u30af\u30ea\u30c3\u30af\u30e1\u30cb\u30e5\u30fc\u3067 reset error \u3092\u9078\u3076\u3068\u3001\n\n\u9ed2\u306b\u623b\u308a\u307e\u3059\u3002\n\n\n\u516c\u958b\u3059\u308b\nmonticello\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f Assertch \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u4e0d\u57d2\u306aPhratch\u306b\u30a2\u30b5\u30c3\u30c6\u306aAssertch\u3092\u62e1\u5f35\u3057\u307e\u3057\u305f\u3002\n\u672c\u5bb6\u306e based on Scratch \u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3001\u5165\u5ff5\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u306b\u3001\u62e1\u5f35\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002based on Scratch\u306b\u30d6\u30ed\u30c3\u30af\u3092\u62e1\u5f35\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u8272\u3005\u306a\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002Phratch\u3067\u306f\u3001\u5909\u66f4\u7b87\u6240\u304c\u3068\u3066\u3082\u826f\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u65b0\u898f\u30ab\u30bf\u30ed\u30b0\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3067\u304d\u305f\u308a\u3001\u3055\u3089\u306b\u30d6\u30ed\u30c3\u30af\u3092pragma\u306b\u3088\u308b\u7c21\u5358\u306a\u5ba3\u8a00\u3067\u30ab\u30bf\u30ed\u30b0\u306b\u767b\u9332\u3067\u304d\u308b\u306a\u3069\u3001\u6c17\u8efd\u306b\u72ec\u81ea\u30ab\u30bf\u30ed\u30b0\u3001\u72ec\u81ea\u30d6\u30ed\u30c3\u30af\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u62e1\u5f35\u6027\u306f\u3068\u3066\u3082\u5927\u304d\u306a\u9b45\u529b\u3067\u3059\u3002Scratch\u7684\u306a\u30d6\u30ed\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u6642\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u3057\u3066\u6709\u529b\u306a\u5019\u88dc\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u6982\u8981\n---\n[Scratch](http://scratch.mit.edu/) \u306e [Pharo](http://pharo.org/) \u30dd\u30fc\u30c8\u3067\u3042\u308b[Phratch](http://www.phratch.com/) \u306b Smalltalk \u3067\u6a5f\u80fd\u62e1\u5f35\u3057\u3066\u30d6\u30ed\u30c3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\u624b\u9806\u30e1\u30e2\u3067\u3059\u3002\u672c\u5bb6\u306e based on Scratch \u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3001\u62e1\u5f35\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u62e1\u5f35\u306e\u6982\u8981\n---\n\nPhratch \u306b\u300cDesign\u300d\u3068\u3044\u3046\u30ab\u30bf\u30ed\u30b0\u3092\u8ffd\u52a0\u3057\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\uff08pre-condition, post-condition, assert\uff09\u306e\u305f\u3081\u306e\u30d6\u30ed\u30c3\u30af\u30924\u3064\uff08pre \u30d6\u30ed\u30c3\u30af\u3001post \u30d6\u30ed\u30c3\u30af\u3001pre-post \u30d6\u30ed\u30c3\u30af\u3001assert \u30d6\u30ed\u30c3\u30af\uff09\u4f5c\u6210\u3057\u767b\u9332\u3057\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 6.18.35.png](https://qiita-image-store.s3.amazonaws.com/0/59918/a6a0b1c1-bc83-2261-fb5c-1b28abcdb2bf.png)\n\n\nPhratch \u3092\u5165\u624b\u3059\u308b\n---\nPhratch \u306f [smalltalkhub\u4e0a\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8](http://smalltalkhub.com/#!/~JLaval/Phratch) \u3068\u3057\u3066\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001 [\u30d7\u30ea\u30d1\u30c3\u30b1\u30fc\u30b8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3](http://www.phratch.com/phratch/phratchinstall) \u3054\u3068\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u306e\u304c\u697d\u3067\u3059\u3002\n\n\u8d77\u52d5\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3001\u6700\u521d\u304b\u3089 Phratch \u304c\u4f7f\u3048\u308b\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 5.49.47.png](https://qiita-image-store.s3.amazonaws.com/0/59918/873eb2f4-72a7-c5df-6bb8-b6bdb9a06613.png)\n\nMacOSX \u4e0a\u306e\u5834\u5408\u3001shift-option-click \u3067\u30e2\u30fc\u30d5\u306e Halo \u3092\u51fa\u305b\u308b\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a Phratch\u5168\u4f53\u306e\u30e2\u30fc\u30d5 \u3092 delete \u3059\u308c\u3070\u3001\u666e\u901a\u306e Pharo \u306e\u958b\u767a\u74b0\u5883\u3068\u3057\u3066\u4f7f\u3048\u307e\u3059\u3002\n\nPhratchProcess \u306b\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3059\u308b\u3002\n---\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306e\u6a5f\u80fd\u306f Pharo \u3067\u306f\u307e\u3060\u63d0\u4f9b\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u307e\u305a\u306f\u51e6\u7406\u7cfb\u306b\u305d\u306e\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002Phratch \u306e\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f PhratchProcess \u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nPhratchProcess \u30af\u30e9\u30b9\u306e private-special forms \u30e1\u30c3\u30bb\u30fc\u30b8\u30ab\u30c6\u30b4\u30ea\u306b doIf \u7b49\u306e\u53c2\u8003\u306b\u306a\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\u307e\u305a\u306f assert \u6a5f\u80fd\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```smalltalk:PhratchProcess\ndoAssert\n\t\"Evaluate the current expression (which must be an assertion).\"\n\n\t| block arguments argExp |\n\tblock := stackFrame expression.\n\targuments := stackFrame arguments.\n\t\"Evaluate the arg if we haven't already.\"\n\targuments size = 0\n\t\tifTrue: [ \n\t\t\targExp := block argumentAt: 1.\n\t\t\t^ self pushStackFrame: (PhratchStackFrame new expression: argExp) ].\n\t\"We can pop this expression off the stack either way.\"\n\tself popStackFrame.\t\"If the predicate was false, just return.\"\n\targuments first = true\n\t\tifFalse: [ ^ self assertionError: block ]\n```\n\nPhratch \u306e\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f\u30b9\u30bf\u30c3\u30af\u30de\u30b7\u30f3\u306b\u306a\u3063\u3066\u3044\u3066\u3001 ```expression``` \u306b\u73fe\u5728\u5b9f\u884c\u4e2d\u306e\u30d6\u30ed\u30c3\u30af\uff08Morph\uff09\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u30d6\u30ed\u30c3\u30af\u306e\u5f15\u6570\u3082\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u3066\u3044\u307e\u3059\u3002\u307e\u305a\u306f\u3001\u5b9f\u5f15\u6570\u304c\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u5b9f\u5f15\u6570\u3092\u5f97\u308b\u305f\u3081\u306b\u306f\u3001\u5f15\u6570\u30d6\u30ed\u30c3\u30af\u3092\u30b9\u30bf\u30c3\u30af\u306b\u4e57\u305b\u3066\u3001\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306e\u51e6\u7406\u3092\u7d99\u7d9a\u3055\u305b\u307e\u3059\u3002\uff08```arguments size = 0 ifTrue: [...]```\u306e\u3042\u305f\u308a\uff09\n\n\u3059\u308b\u3068\u5b9f\u884c\u30a8\u30f3\u30b8\u30f3\u306f\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307e\u308c\u305f\u5f15\u6570\u30d6\u30ed\u30c3\u30af\u3092\u53d6\u308a\u51fa\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\u3044\u3064\u304b\u3001assert \u30d6\u30ed\u30c3\u30af\u304c\u30b9\u30bf\u30c3\u30af\u306etop\u306b\u306a\u3063\u305f\u3089\u307e\u305f\u3053\u306e doAssert \u304c\u5b9f\u884c\u3055\u308c\u3066\u3001\u4eca\u5ea6\u306f\u30b9\u30bf\u30c3\u30af\u4e0a\u306b\u5f15\u6570\u304c\u4e57\u3063\u3066\u304f\u308b\u306e\u3067\u3001```arguments size = 0 ifTrue: [...]```\u3092\u901a\u904e\u3057\u3066\u3001\u3044\u3088\u3044\u3088 assert \u306e\u51e6\u7406\u672c\u4f53\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```self popStackFrame```\u3067\u81ea\u5206\u81ea\u8eab\u3092\u30b9\u30bf\u30c3\u30af\u304b\u3089\u53d6\u308a\u6255\u3063\u3066\u3001\u3082\u3057\u5b9f\u5f15\u6570\u304c```true```\u3067\u3042\u308c\u3070\u691c\u67fb\u5408\u683c\u3067\u3059\u3002\u4f55\u3082\u3059\u308b\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\u3082\u3057```true```\u3067\u306a\u3051\u308c\u3070\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u3068\u3057\u3066\u51e6\u7406\u3057\u307e\u3059\u3002\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30a8\u30e9\u30fc\u306e\u51e6\u7406\u7528\u306b\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```smalltalk:PhratchProcess\nassertionError: aPhratchBlock\n\taPhratchBlock hasError: true.\n\taPhratchBlock showError.\n\taPhratchBlock changed\n```\n\n\u540c\u69d8\u306e\u65b9\u6cd5\u3067\u3001doPre, doPost, doPrePost\u3082\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u30d6\u30ed\u30c3\u30af\u306e\u5b9f\u88c5\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\n---\n\n\u6b21\u306b\u3001\u51e6\u7406\u7cfb\u306b doAssert \u3092\u5b9f\u884c\u3055\u305b\u308b\u30d6\u30ed\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nPhratch\u3067\u306f BlockMorph \u306e\u3069\u3053\u304b\u9069\u5207\u306a\u30b5\u30d6\u30af\u30e9\u30b9\u304b\u3089\u7d99\u627f\u3059\u308b\u3068\u697d\u306b\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 assert \u306e\u5834\u5408\u306b\u306f\u3001\u5358\u4f53\u306e\u547d\u4ee4\u30d6\u30ed\u30c3\u30af\u306a\u306e\u3067 CommandBlockMorph \u304c\u9069\u5207\u306a\u9078\u629e\u306b\u306a\u308a\u307e\u3059\u3002\n\n```smalltalk:class-definition\nCommandBlockMorph subclass: #AssertBlockMorph\n\tinstanceVariableNames: 'hasError'\n\tclassVariableNames: ''\n\tcategory: 'Assertch-Core'\n```\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u304c\u5931\u6557\u3057\u305f\u5834\u5408\u306e\u7ba1\u7406\u306e\u305f\u3081\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570 ```hasError``` \u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u306f ```PhratchProcess``` \u306e ```assertionError:``` \u3067\u4f7f\u3063\u305f ```hasError:```\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```smalltalk:AssertBlockMorph\nhasError: aBoolean\n\thasError := aBoolean = true\n```\n\n\u3064\u3044\u3067\u306b\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u554f\u3044\u5408\u308f\u305b\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```smalltalk:AssertBlockMorph\nhasError\n\t^ hasError = true\n```\n\n```smalltalk:AssertBlockMorph\nresetError\n\tself hasError: false.\n\tself color: PhratchCategoryAssertions color.\n\tself changed.\n```\n\n\u3055\u3089\u306b\u3001\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3057\u305f\u30d6\u30ed\u30c3\u30af\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3067\u30a8\u30e9\u30fc\u72b6\u614b\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u305f\u3081\u306e\u6a5f\u80fd\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\u307e\u305a\u306f\u30e1\u30cb\u30e5\u30fc\u306b reset error \u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```smalltalk:AssertBlockMorph\nrightButtonMenu\n\t| menu choice |\n\tmenu := MenuMorph new defaultTarget: self.\n\tmenu add: 'help' value: #presentHelpScreen.\n\towner isPhratchBlockPaletteMorph\n\t\tifFalse: [ \n\t\t\tmenu addLine.\n\t\t\tself hasError\n\t\t\t\tifTrue: [ \n\t\t\t\t\tmenu add: 'reset error' value: #resetError.\n\t\t\t\t\tmenu addLine ].\n\t\t\tmenu add: 'duplicate' value: #duplicate.\n\t\t\tself owner isBlockMorph\n\t\t\t\tifFalse: [ \n\t\t\t\t\t\"we can't yet delete a blocks inside a script\"\n\t\t\t\t\tmenu add: 'delete' value: #delete ].\n\t\t\tmenu add: 'show algorithm' value: #showCodeString ].\n\tmenu\n\t\tlocalize;\n\t\tinvokeModal.\n\tchoice := menu selectedValue ifNil: [ ^ self ].\n\tself perform: choice\n```\n\n\u5b9f\u969b\u306b\u8ffd\u52a0\u3059\u308b\u306e\u306f ```self hasError ifTrue: [...]``` \u306e\u90e8\u5206\u3060\u3051\u3067\u3059\u3002\n\n\u3055\u3066\u3001\u6700\u5f8c\u306b\u3053\u306e\u30d6\u30ed\u30c3\u30af\u306e\u300c\u51e6\u7406\u300d\u306f ```PhratchProcess```\u306b\u62e1\u5f35\u3057\u305f```doAssert```\u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046\u3002\n\n```smalltalk:AssertBlockMorph-class\nblockTypeOn: aScriptablePhratchMorph spec: spec color: blockColor\n\t\n\t|block|\n\tblock :=  self new isSpecialForm: true.\n\t^block\n```\n\n```isSpecialForm: true```\u3092\u3059\u308b\u3053\u3068\u3067\u3001\u3053\u306e\u30d6\u30ed\u30c3\u30af\u306f```PhratchProcess```\u306e\u5c02\u7528\u547d\u4ee4```doAssert```\u3067\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```AssertchPreBlockMorph```, ```AssertchPostBlockMorph```, ```AssertchPrePostBlockMorph```\u3082\u540c\u69d8\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\u30ab\u30bf\u30ed\u30b0\u3092\u4f5c\u6210\u3059\u308b\n---\n\n\u3055\u3066\u3001\u3067\u306f\u30e6\u30fc\u30b6\u30fc\u306b\u30d6\u30ed\u30c3\u30af\u3092\u63d0\u4f9b\u3059\u308b\u305f\u3081\u306b\u30ab\u30bf\u30ed\u30b0\u306b\u8f09\u305b\u307e\u3057\u3087\u3046\u3002\n\u30ab\u30bf\u30ed\u30b0\u7528\u306e\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u306b\u306f\u3001```PhratchCategory``` \u30af\u30e9\u30b9\u304b\u3089\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n\n```smalltalk:class-definition\nPhratchCategory subclass: #PhratchCategoryAssertions\n\tinstanceVariableNames: ''\n\tclassVariableNames: ''\n\tcategory: 'Assertch-Core'\n```\n\n\u30ab\u30bf\u30ed\u30b0\u306e\u8272\u3001\u540d\u524d\u3001\u9806\u4f4d\u3092\u5b9a\u7fa9\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\n```smalltalk:PhratchCategoryAssertions-class\ncolor\n\t^(Color r: 0.02 g: 0.02 b: 0.02)\n```\n\n```smalltalk:PhratchCategoryAssertions-class\nlabel\n\t^'design'\n```\n\n```smalltalk:PhratchCategoryAssertions-class\norder\n\t^2.26\n```\n\n\u30ab\u30bf\u30ed\u30b0\u306b\u30d6\u30ed\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306b\u306f\u3001 ```ScriptablePhratchMorph``` \u306bpragma\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```smalltalk:ScriptablePhratchMorph\ndoAssert\n\t<phratchItem: 'here should hold $Boolean$' kind: #AssertBlockMorph category: 'design' defaultValues: #() subCategory: #inv special: #()>\n```\n\n```phratchItem``` \u306b\u30d6\u30ed\u30c3\u30af\u4e0a\u306e\u30e9\u30d9\u30eb\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\u4eca\u56de\u306f\u5f15\u6570\u306fboolean\u306a\u306e\u3067\u3001\u4eee\u5f15\u6570\u3068\u3057\u3066 ```$Boolean$``` \u3068\u66f8\u3044\u3066\u304a\u304f\u3068\u3001\u771f\u507d\u5024\u304c\u5165\u308b\u7a74\u3092\u4f5c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u3042\u3068\u306f\u3060\u3044\u305f\u3044\u898b\u3066\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u4ed6\u306e\u30d6\u30ed\u30c3\u30af\u3082\u540c\u69d8\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n\u4f7f\u3063\u3066\u307f\u308b\n---\n\npre-post \u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3063\u305f\u4f8b\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u307e\u305a\u306f\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 6.48.21.png](https://qiita-image-store.s3.amazonaws.com/0/59918/05201a87-67a3-86b1-d92d-4ce9877e2810.png)\n\n\u30c6\u30ad\u30b9\u30c8\u3067\u66f8\u304f\u3068\u3001\n\n```\nset x to 10\nbecause x >= 0, make x < 0 by\n    set x to neg x\n```\n\n\u3068\u306a\u308a\u307e\u3059\u3002\nbecause ...\u306e\u90e8\u5206\u304c\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\u3053\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u306f\n\n * set x to neg x \u3068\u3044\u3046\u30d6\u30ed\u30c3\u30af\u3092\u4f7f\u3046\u610f\u56f3\u3068\u3057\u3066\u3001\u300c x >= 0 \u304c\u6210\u308a\u7acb\u3063\u3066\u3044\u308b\u304b\u3089\u3001set x to neg x \u3059\u308b\u3053\u3068\u3067\u3001 x < 0 \u3092\u5b9f\u73fe\u3057\u3066\u3044\u308b\u300d\u3068\u3044\u3046\u8aac\u660e\n * \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u6642\u306b\u3001set x to neg x \u3092\u5b9f\u884c\u3059\u308b\u524d\u306b x >= 0 \u304b\u3069\u3046\u304b\u3092\u30c6\u30b9\u30c8\u3057\u3001\u3055\u3089\u306b\u3001set x to neg x \u3092\u5b9f\u884c\u3057\u305f\u5f8c\u306b\u306f x < 0 \u3092\u30c6\u30b9\u30c8\u3059\u308b\n\n\u3068\u3044\u30462\u3064\u306e\u5f79\u5272\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u304a\u6c17\u4ed8\u304d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3053\u306e\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u306f\u30d0\u30b0\u304c\u3042\u308a\u307e\u3059\u3002x >= 0\u3092\u7406\u7531\u3068\u3057\u3066\u3044\u308b\u4ee5\u4e0a\u306f\u3001x >= 0 \u3092\u6e80\u305f\u3059\u5168\u3066\u306e x \u306b\u3064\u3044\u3066\u3001set x to neg x\u3059\u308b\u3068 x < 0 \u3068\u306a\u3089\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001x = 0 \u306e\u6642\u306b\u306f\u3001\u6210\u308a\u7acb\u3061\u307e\u305b\u3093\u3002\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 6.55.40.png](https://qiita-image-store.s3.amazonaws.com/0/59918/bc5b3b34-18f2-f9b4-a731-fd5f0ebb54e4.png)\n\n\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u306b\u5931\u6557\u3057\u3001\u30d6\u30ed\u30c3\u30af\u304c\u8d64\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u304c\u30a8\u30e9\u30fc\u3092\u8868\u3057\u3066\u3044\u307e\u3059\u3002\n```AssertchProcess``` \u306e ```assertionError:``` \u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3088\u308a\u3001\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u30d6\u30ed\u30c3\u30af\u304c\u30a8\u30e9\u30fc\u72b6\u614b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u53f3\u30af\u30ea\u30c3\u30af\u30e1\u30cb\u30e5\u30fc\u3067 reset error \u3092\u9078\u3076\u3068\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 6.58.04.png](https://qiita-image-store.s3.amazonaws.com/0/59918/fe4dbfc0-e655-b9f4-5fba-ec5ad9d930a7.png)\n\n\u9ed2\u306b\u623b\u308a\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-23 6.58.27.png](https://qiita-image-store.s3.amazonaws.com/0/59918/286ddcd9-4a40-d71a-8aea-92f1f2f3b564.png)\n\n\u516c\u958b\u3059\u308b\n---\n\nmonticello\u3067\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u516c\u958b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306f [Assertch](http://smalltalkhub.com/#!/~tomooda/Assertch) \u3067\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n---\n\n\u4e0d\u57d2\u306aPhratch\u306b\u30a2\u30b5\u30c3\u30c6\u306aAssertch\u3092\u62e1\u5f35\u3057\u307e\u3057\u305f\u3002\n\u672c\u5bb6\u306e based on Scratch \u306e\u5b9f\u88c5\u3068\u6bd4\u3079\u3001\u5165\u5ff5\u306b\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u306b\u3001\u62e1\u5f35\u304c\u3057\u3084\u3059\u304f\u306a\u3063\u3066\u3044\u307e\u3059\u3002based on Scratch\u306b\u30d6\u30ed\u30c3\u30af\u3092\u62e1\u5f35\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u8272\u3005\u306a\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\u3002Phratch\u3067\u306f\u3001\u5909\u66f4\u7b87\u6240\u304c\u3068\u3066\u3082\u826f\u304f\u6574\u7406\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u65b0\u898f\u30ab\u30bf\u30ed\u30b0\u3092\u30af\u30e9\u30b9\u3068\u3057\u3066\u5b9a\u7fa9\u3067\u304d\u305f\u308a\u3001\u3055\u3089\u306b\u30d6\u30ed\u30c3\u30af\u3092pragma\u306b\u3088\u308b\u7c21\u5358\u306a\u5ba3\u8a00\u3067\u30ab\u30bf\u30ed\u30b0\u306b\u767b\u9332\u3067\u304d\u308b\u306a\u3069\u3001\u6c17\u8efd\u306b\u72ec\u81ea\u30ab\u30bf\u30ed\u30b0\u3001\u72ec\u81ea\u30d6\u30ed\u30c3\u30af\u3092\u62e1\u5f35\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u62e1\u5f35\u6027\u306f\u3068\u3066\u3082\u5927\u304d\u306a\u9b45\u529b\u3067\u3059\u3002Scratch\u7684\u306a\u30d6\u30ed\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u6642\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3068\u3057\u3066\u6709\u529b\u306a\u5019\u88dc\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n"}