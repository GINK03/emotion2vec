{"context": "\n\nPostGIS\u30673\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\n\n\u5fd9\u3057\u3044\u4eba\u7528\uff1a\u81ea\u4f5c\u95a2\u6570\u306b\u3088\u308b3\u89d2\u63cf\u753b\uff08\u7d4c\u5ea6\u3001\u7def\u5ea6\u3001\u5916\u63a5\u5186\u306e\u534a\u5f84\uff09\n\u7b2c1\u5f15\u6570\u306e\u7d4c\u5ea6\u3001\u7b2c2\u5f15\u6570\u306e\u7def\u5ea6\u3067\u6307\u5b9a\u3055\u308c\u305f\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\u3001\u7b2c3\u5f15\u6570\uff52\u3067\u6307\u5b9a\u3057\u305f\u534a\u5f84\u306e\u5186\u306e\u4e2d\u306b\u3042\u308b\u6b63\u4e09\u89d2\u5f62\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\ncreate_function_st_triangle.sql\n/**\n * Create triangle geometry.\n * @param lon double precision center point WGS84 SRID:4326\n * @param lat double precision WGS84 SRID:4326\n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( lon double precision, lat double precision , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n    ORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n\n\n\n\u30c7\u30e2\uff1a\u6771\u4eac\u99c5\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u3001\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n\ntest_st_triangle.sql\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,50) ) \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,100) ) \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,150) )  \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,200) )  \n\n\n\n\n\nPostGIS\u3067\u4e09\u89d2\u5f62\u3092\u4f5c\u753b\u3059\u308b\u306b\u306f\n\n\u4efb\u610f\u306e\u5927\u304d\u3055\u306e\u4f5c\u56f3\u3092\u5b9f\u73fe\u3059\u308bST_Buffer\u306e\u5229\u7528\n\u4ee5\u524d\u306e\u6295\u7a3fPostGIS\u306eST_Buffer\u3067\u5186\u3092\u63cf\u753b\u3059\u308b\u3067\u3001ST\uff3fBuffer\u3067\u4f5c\u6210\u3057\u305f\u5186\u306f\u3001\u534a\u5f84\u306b\u95a2\u308f\u3089\u305a32\u89d2\u3067\u3042\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u3001\uff13\uff12\u89d2\u306e\u7279\u5b9a\u306e\u89d2\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308c\u3070\u3001\u4e09\u89d2\u5f62\u304c\u4f5c\u6210\u51fa\u6765\u308b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\nST_Buffer\u306e\u88dc\u9593\u70b9\u306e\u51fa\u529b\u306e\u89b3\u5bdf\n\u88dc\u9593\u70b9\u3092QGIS\u3067\u8868\u793a\u3057\u3066\u89b3\u5bdf\u3057\u3066\u307f\u308b\u3068\u3001\u6700\u3082\u6771\u306e\u70b9\u304b\u3089\u6642\u8a08\u56de\u308a\u3067\u51fa\u529b\u3055\u308c\u3044\u307e\u3059\u3002\n\n\u771f\u5317\u306b\u9802\u70b9\u3092\u6301\u3064\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u300c\uff12\uff15\u2192\uff14\u2192\uff11\uff14\u2192\uff12\uff15\u300d\u306e\u9806\u756a\u3067\u70b9\u3092\u7d50\u3076\u3068\u30dd\u30ea\u30b4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n\n32\u89d2\u304b\u3089\u3001\uff12\uff15\u3068\uff14\u3068\uff11\uff14\u3068\uff12\uff15\u3092\u5217\u6319\u3059\u308b\n\nwith t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\n\n\n\u5186\u304b\u3089\u88dc\u9593\u70b9\u3092\u62bd\u51fa\u3057\u3001t_plist\u306en\u5217\u3067\u6307\u5b9a\u3057\u305f\u756a\u53f7\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u62bd\u51fa\n\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n\nPostGIS\u306e\u95a2\u6570\u306e\u7c21\u5358\u306a\u89e3\u8aac\nST_POINT : \u7def\u5ea6\u7d4c\u5ea6\u304b\u3089\u30dd\u30a4\u30f3\u30c8\u578b\u306e\u5730\u7269\u3092\u4f5c\u6210\u3059\u308b\nST_Buffer : \u5730\u7269\u306e\u5468\u308a\u306b\u9762\u3092\u4ed8\u4e0e\u3059\u308b\nST_ExteriorRing : \u30dd\u30ea\u30b4\u30f3\u5f62\u72b6\u306e\u5916\u67a0\u3092\u7dda\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\nST_dumppoints : \u5730\u7269\u306e\u88dc\u9593\u70b9\u3092\u5217\u6319\u3059\u308b\n\n\u95a2\u6570\u5316\nSQL\u306b\u3088\u308b\u30b9\u30c8\u30a2\u30c9\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\uff08\u81ea\u4f5c\u95a2\u6570\uff09\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\nPostgreSQL\u306e\u5834\u5408\u3001\u95a2\u6570\u540d\u304c\u540c\u3058\u3067\u3082\u5f15\u6570\u3068\u623b\u308a\u5024\u304c\u7570\u306a\u308b\u3068\u3001\u540c\u4e00\u540d\u79f0\u3067\u3082\u8907\u6570\u500b\u306e\u767b\u9332\u304c\u53ef\u80fd\u3067\u3059\u3002\nCREATE OR REPLACE FUNCTION \u95a2\u6570\u540d( \u5f15\u6570\u540d \u578b )\nRETURNS \u623b\u308a\u5024\u306e\u578b\nAS '\u3053\u3053\u306bSQL\u3092\u8a18\u8ff0\u3059\u308b\u3002 \u5f15\u6570\u306f$1\u3067\u547c\u3073\u51fa\u3057\u53ef\u80fd'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n\u6298\u89d2\u306a\u306e\u3067\u3001\uff13\u30bf\u30a4\u30d7\u7a0b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u540c\u3058\u540d\u79f0\u3067\u3059\u304c\u3001\uff11\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u540c\u5c45\u53ef\u80fd\u3067\u3059\u3002\n\n\u95a2\u65701\uff1a\u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u95a2\u6570\n\ncreate_function_st_triangle_1.sql\n/**\n * Create triangle geometry.\n * @param lon double precision center point WGS84 SRID:4326\n * @param lat double precision WGS84 SRID:4326\n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( lon double precision, lat double precision , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n    ORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n\n\n\n\u95a2\u6570\uff12\u3000\uff1aGEOMETRY\u578b\u3068\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30d7\n\ncreate_function_st_triangle_2.sql\n/**\n * Create triangle geometry.\n * @param center_point geometry \n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( center_point geometry , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_Transform( $1 , 4326)::geography , $2 )::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n    ORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n\n\n\n\u95a2\u65703\u3000\uff1aGEOGRAPHY\u578b\u3068\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30d7\n\ncreate_function_st_triangle_3.sql\n/**\n * Create triangle geometry.\n * @param center_point geography \n * @param r double precision circumradius by the meter\n * @return geography\n **/\nCREATE OR REPLACE FUNCTION st_triangle( center_point geography , r double precision )\nRETURNS geography\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer($1 , $2 )::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n    ORDER BY t_plist.id\n) AS a ) ) ) , 4326 )::geography ;'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n\n\n#PostGIS\u30673\u89d2\u5f62\u3092\u63cf\u753b\u3059\u308b\n\n##\u5fd9\u3057\u3044\u4eba\u7528\uff1a\u81ea\u4f5c\u95a2\u6570\u306b\u3088\u308b3\u89d2\u63cf\u753b\uff08\u7d4c\u5ea6\u3001\u7def\u5ea6\u3001\u5916\u63a5\u5186\u306e\u534a\u5f84\uff09\n\u7b2c1\u5f15\u6570\u306e\u7d4c\u5ea6\u3001\u7b2c2\u5f15\u6570\u306e\u7def\u5ea6\u3067\u6307\u5b9a\u3055\u308c\u305f\u4e2d\u5fc3\u70b9\u3092\u6301\u3064\u3001\u7b2c3\u5f15\u6570\uff52\u3067\u6307\u5b9a\u3057\u305f\u534a\u5f84\u306e\u5186\u306e\u4e2d\u306b\u3042\u308b\u6b63\u4e09\u89d2\u5f62\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\n```sql:create_function_st_triangle.sql\n/**\n * Create triangle geometry.\n * @param lon double precision center point WGS84 SRID:4326\n * @param lat double precision WGS84 SRID:4326\n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( lon double precision, lat double precision , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n\tSELECT\n\t  id, geom\n\tFROM\n\t ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n\t , t_plist\n\tWHERE \n\t t_plist.n = path[1]\n\tORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n```\n\n###\u30c7\u30e2\uff1a\u6771\u4eac\u99c5\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u3001\u4e09\u89d2\u5f62\u306e\u63cf\u753b\n\n```sql:test_st_triangle.sql\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,50) ) \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,100) ) \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,150) )  \nUNION\nSELECT ST_AsText( st_triangle( 139.76719 , 35.6811 ,200) )  \n\n```\n![3.3.png](https://qiita-image-store.s3.amazonaws.com/0/53918/58ea7c68-ec2c-c0e5-b96a-2bef33124cd1.png)\n\n\n#PostGIS\u3067\u4e09\u89d2\u5f62\u3092\u4f5c\u753b\u3059\u308b\u306b\u306f\n##\u4efb\u610f\u306e\u5927\u304d\u3055\u306e\u4f5c\u56f3\u3092\u5b9f\u73fe\u3059\u308bST_Buffer\u306e\u5229\u7528\n\u4ee5\u524d\u306e\u6295\u7a3f[PostGIS\u306eST_Buffer\u3067\u5186\u3092\u63cf\u753b\u3059\u308b](http://qiita.com/takahi/items/37c0a096d2073646ba62)\u3067\u3001ST\uff3fBuffer\u3067\u4f5c\u6210\u3057\u305f\u5186\u306f\u3001\u534a\u5f84\u306b\u95a2\u308f\u3089\u305a32\u89d2\u3067\u3042\u308b\u4e8b\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u3001\uff13\uff12\u89d2\u306e\u7279\u5b9a\u306e\u89d2\u3092\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308c\u3070\u3001\u4e09\u89d2\u5f62\u304c\u4f5c\u6210\u51fa\u6765\u308b\u3068\u8003\u3048\u307e\u3057\u305f\u3002\n\n##ST_Buffer\u306e\u88dc\u9593\u70b9\u306e\u51fa\u529b\u306e\u89b3\u5bdf\n\u88dc\u9593\u70b9\u3092QGIS\u3067\u8868\u793a\u3057\u3066\u89b3\u5bdf\u3057\u3066\u307f\u308b\u3068\u3001\u6700\u3082\u6771\u306e\u70b9\u304b\u3089\u6642\u8a08\u56de\u308a\u3067\u51fa\u529b\u3055\u308c\u3044\u307e\u3059\u3002\n![3.2.png](https://qiita-image-store.s3.amazonaws.com/0/53918/0bc62755-5dfa-93a8-275f-d3840a83f30f.png)\n\n\u771f\u5317\u306b\u9802\u70b9\u3092\u6301\u3064\u6b63\u4e09\u89d2\u5f62\u3092\u4f5c\u6210\u3059\u308b\u306b\u306f\u3001\u300c\uff12\uff15\u2192\uff14\u2192\uff11\uff14\u2192\uff12\uff15\u300d\u306e\u9806\u756a\u3067\u70b9\u3092\u7d50\u3076\u3068\u30dd\u30ea\u30b4\u30f3\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n<img width=\"307\" alt=\"18.09.29.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/53918/fcd62d1b-203c-6d8f-8df4-e7fd033c5703.png\">\n\n\n\n- 32\u89d2\u304b\u3089\u3001\uff12\uff15\u3068\uff14\u3068\uff11\uff14\u3068\uff12\uff15\u3092\u5217\u6319\u3059\u308b\n\n\n```sql\nwith t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\n```\n\n- \u5186\u304b\u3089\u88dc\u9593\u70b9\u3092\u62bd\u51fa\u3057\u3001`t_plist`\u306en\u5217\u3067\u6307\u5b9a\u3057\u305f\u756a\u53f7\u306e\u30dd\u30a4\u30f3\u30c8\u3092\u62bd\u51fa\n\n```sql\n    SELECT\n      id, geom\n    FROM\n     ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n     , t_plist\n    WHERE \n     t_plist.n = path[1]\n```\nPostGIS\u306e\u95a2\u6570\u306e\u7c21\u5358\u306a\u89e3\u8aac\n`ST_POINT` : \u7def\u5ea6\u7d4c\u5ea6\u304b\u3089\u30dd\u30a4\u30f3\u30c8\u578b\u306e\u5730\u7269\u3092\u4f5c\u6210\u3059\u308b\n`ST_Buffer` : \u5730\u7269\u306e\u5468\u308a\u306b\u9762\u3092\u4ed8\u4e0e\u3059\u308b\n`ST_ExteriorRing` : \u30dd\u30ea\u30b4\u30f3\u5f62\u72b6\u306e\u5916\u67a0\u3092\u7dda\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\n`ST_dumppoints` : \u5730\u7269\u306e\u88dc\u9593\u70b9\u3092\u5217\u6319\u3059\u308b\n\n# \u95a2\u6570\u5316\n\nSQL\u306b\u3088\u308b\u30b9\u30c8\u30a2\u30c9\u30d5\u30a1\u30f3\u30af\u30b7\u30e7\u30f3\uff08\u81ea\u4f5c\u95a2\u6570\uff09\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\nPostgreSQL\u306e\u5834\u5408\u3001\u95a2\u6570\u540d\u304c\u540c\u3058\u3067\u3082\u5f15\u6570\u3068\u623b\u308a\u5024\u304c\u7570\u306a\u308b\u3068\u3001\u540c\u4e00\u540d\u79f0\u3067\u3082\u8907\u6570\u500b\u306e\u767b\u9332\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n```sql:\nCREATE OR REPLACE FUNCTION \u95a2\u6570\u540d( \u5f15\u6570\u540d \u578b )\nRETURNS \u623b\u308a\u5024\u306e\u578b\nAS '\u3053\u3053\u306bSQL\u3092\u8a18\u8ff0\u3059\u308b\u3002 \u5f15\u6570\u306f$1\u3067\u547c\u3073\u51fa\u3057\u53ef\u80fd'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n```\n\n\u6298\u89d2\u306a\u306e\u3067\u3001\uff13\u30bf\u30a4\u30d7\u7a0b\u95a2\u6570\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\u540c\u3058\u540d\u79f0\u3067\u3059\u304c\u3001\uff11\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u540c\u5c45\u53ef\u80fd\u3067\u3059\u3002\n\n##\u95a2\u65701\uff1a\u7def\u5ea6\u3001\u7d4c\u5ea6\u3001\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u95a2\u6570\n\n```sql:create_function_st_triangle_1.sql\n/**\n * Create triangle geometry.\n * @param lon double precision center point WGS84 SRID:4326\n * @param lat double precision WGS84 SRID:4326\n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( lon double precision, lat double precision , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n\tSELECT\n\t  id, geom\n\tFROM\n\t ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_POINT( $1 , $2)::geography , $3)::geometry  ) )  AS c\n\t , t_plist\n\tWHERE \n\t t_plist.n = path[1]\n\tORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n```\n\n\n##\u95a2\u6570\uff12\u3000\uff1aGEOMETRY\u578b\u3068\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30d7\n\n```sql:create_function_st_triangle_2.sql\n/**\n * Create triangle geometry.\n * @param center_point geometry \n * @param r double precision circumradius by the meter\n * @return geometry\n **/\nCREATE OR REPLACE FUNCTION st_triangle( center_point geometry , r double precision )\nRETURNS geometry\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n\tSELECT\n\t  id, geom\n\tFROM\n\t ST_dumppoints( ST_ExteriorRing( ST_Buffer( ST_Transform( $1 , 4326)::geography , $2 )::geometry  ) )  AS c\n\t , t_plist\n\tWHERE \n\t t_plist.n = path[1]\n\tORDER BY t_plist.id\n) AS a ) ) ) , 4326 );'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n```\n\n##\u95a2\u65703\u3000\uff1aGEOGRAPHY\u578b\u3068\u5916\u63a5\u5186\u306e\u534a\u5f84\u3092\u6307\u5b9a\u3059\u308b\u30bf\u30a4\u30d7\n\n```sql:create_function_st_triangle_3.sql\n/**\n * Create triangle geometry.\n * @param center_point geography \n * @param r double precision circumradius by the meter\n * @return geography\n **/\nCREATE OR REPLACE FUNCTION st_triangle( center_point geography , r double precision )\nRETURNS geography\nAS 'with t_plist(id,n)as (\n    values (1, 25 ) , (2, 4 ) , (3, 14 ) ,(4, 25 ) )\nSELECT\n ST_SetSRID( ST_MakePolygon(ST_MakeLine( array( SELECT geom \nFROM\n(\n\tSELECT\n\t  id, geom\n\tFROM\n\t ST_dumppoints( ST_ExteriorRing( ST_Buffer($1 , $2 )::geometry  ) )  AS c\n\t , t_plist\n\tWHERE \n\t t_plist.n = path[1]\n\tORDER BY t_plist.id\n) AS a ) ) ) , 4326 )::geography ;'\nLANGUAGE SQL\nIMMUTABLE\nRETURNS NULL ON NULL INPUT;\n\n```\n", "tags": ["PostGIS", "GIS", "PostgreSQL"]}