{"context": "\n\n\u554f\u984c\u63d0\u8d77\nHadoop\u7cfb\u3067MapReduce\u3059\u308b\u969b\u306f\u3001\u4e00\u822c\u7684\u306b\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u8272\u3005\u3068\u8907\u96d1\u3067\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304f\u306a\u308b\u6642\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001RDD\u3067\u306fKey\u3060\u3051\u3082\u3089\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u5b9f\u969b\u306b\u306fDB\u304b\u3089\u305d\u306eKey\u306eValue\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059\u3002\n\u7406\u60f3\u3092\u8a00\u3048\u3070\u3001DriverNode\u306e\u51e6\u7406\u306e\u4e2d\u3067\u5168\u30c7\u30fc\u30bf\u3092\u4e00\u62ec\u53d6\u5f97\u3067\u304d\u308c\u3070\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u30c7\u30fc\u30bf\u91cf\u306b\u3088\u3063\u3066\u306fExecutor\u3078\u8ee2\u9001\u3059\u308b\u91cf\u304c\u591a\u3059\u304e\u3066\u9045\u3044\u3068\u304b\u3001\u305d\u3082\u305d\u3082Driver\u306e\u30e1\u30e2\u30ea\u306b\u4e57\u308a\u5207\u3089\u306a\u3044\u3068\u3044\u3063\u305f\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u89e3\u6c7a\u6cd5\nExecutor\u306e\u4e2d\u3067\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\u307e\u3041\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\u3002\n\u305f\u3060\u3001\u666e\u901a\u306e\u3084\u308a\u65b9\u3067\u306f\u3088\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\nmapReduce\u5185\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001RDD\u306e\u5404\u8981\u7d20\u6bce\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u306e\u3067\u9045\u3044\uff06\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u8ca0\u8377\u304c\u304b\u304b\u308b\u3002\nDriverNode\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3068\u3001\u305d\u308c\u3092Executor\u306b\u914d\u5e03\u3059\u308b\u3053\u3068\u304c\uff08\u540c\u4e00\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u56de\u3057\u3001\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u4e0d\u53ef\u80fd\u306a\u3069\u306e\u7406\u7531\u3067\uff09\u96e3\u3057\u3044\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u3053\u3068\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3084\u308a\u65b9\n\u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001lazy val\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066DynamoDB\u3078\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308b\u3084\u308a\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001AccessKey\u306a\u3069\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067Driver, Executor\u306b\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nspark-submit <\u8272\u3005> --conf spark.executorEnv.AWS_ACCESS_KEY_ID=hoge --conf spark.executorEnv.AWS_SECRET_ACCESS_KEY=hogehoge <\u8272\u3005>\n\nGithub\u3067\u898b\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/uryyyyyyy/hadoopSample/blob/master/spark/scala_2.11/batch_dynamo/src/main/scala/com/github/uryyyyyyy/hadoop/spark/batch/scala2_11/Hello.scala\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.regions.{Region, Regions}\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient\nimport com.amazonaws.services.dynamodbv2.document.{DynamoDB, PrimaryKey}\nimport org.apache.spark.{SparkConf, SparkContext}\n\nobject Hello {\n    def main(args: Array[String]): Unit = {\n        val conf = new SparkConf().setAppName(\"Simple Application\")\n        val sc = new SparkContext(conf)\n        val rdd = sc.range(1, 1000, 1)\n        val accessKey = sys.env(\"AWS_ACCESS_KEY_ID\")\n        val secretKey = sys.env(\"AWS_SECRET_ACCESS_KEY\")\n        val file = args(0)\n        lazy val dynamo = DynamoUtils.setupDynamoClientConnection(accessKey, secretKey)\n\n        println(\"----Start----\")\n        rdd.map(v => {\n            val table = dynamo.getTable(\"sample\")\n\n            val key = new PrimaryKey(\"id\", 1)\n            val ss = table.getItem(key)\n            ss.toString\n        }).saveAsTextFile(file)\n\n    }\n}\n\nobject DynamoUtils {\n\n    def setupDynamoClientConnection(accessKey:String, secretKey:String): DynamoDB = {\n        val credentials = new BasicAWSCredentials(accessKey,secretKey)\n        val client = new AmazonDynamoDBClient(credentials)\n        client.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n        val dynamoDB = new DynamoDB(client)\n\n        val table = dynamoDB.getTable(\"sample\")\n\n        val expressionAttributeNames = new util.HashMap[String,String]()\n        expressionAttributeNames.put(\"#p\", \"pageCount\")\n\n        val expressionAttributeValues = new util.HashMap[String,Object]()\n        val num = 1.asInstanceOf[Object]\n        expressionAttributeValues.put(\":val\", num)\n\n        val outcome = table.updateItem(\n            \"id\", 1,\n            \"set #p = #p + :val\",\n            expressionAttributeNames,\n            expressionAttributeValues)\n        dynamoDB\n    }\n}\n\n\nlazy val dynamo = DynamoUtils.setupDynamoClientConnection(accessKey, secretKey) \u3068\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u30ad\u30e2\u3067\u3059\u3002\n\u3053\u3046\u66f8\u3044\u3066\u3042\u3052\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u306eExecutor\u306e\u4e2d\u3067\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u3066\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u8cbc\u308b\u969b\u306bDynamo\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066atomic count\u306e\u64cd\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306eBatch\u3092spark\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u8a72\u5f53\u30ec\u30b3\u30fc\u30c9\u306e\u5024\u306fExecutor\u306e\u5206\u3060\u3051\uff08ExecutorNode\u306e\u6570\u3060\u3051\uff1f\uff09\u5897\u3048\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\u672c\u7b4b\u3068\u95a2\u4fc2\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u53d6\u308b\u306e\u306fDriverNode\uff08val\u306b\u306a\u3063\u3066\u308b\u306e\u3067\uff09\u3067\u3001\u305d\u306e\u5024\u304c\u5404Executor\u306bbroadcast\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u305d\u306e\u5024\u3092\u4f7f\u3063\u3066Dynamo\u306b\u7e4b\u304e\u306b\u884c\u304f\u306e\u306f\u3001\u4e0a\u3067\u8ff0\u3079\u3066\u308b\u3088\u3046\u306b\u5404Executor\u3067\u3059\u3002\uff08lazy val\u306e\u305f\u3081\u3002\uff09\n\n\u6ce8\u610f\u70b9\nExecutor\u306e\u6570\u304c\u5897\u3048\u308b\u307b\u3069\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5897\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u304a\u305d\u3089\u304f\u4e26\u5217\u3067\u540c\u6642\u306b\u5927\u91cf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u98db\u3076\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u305d\u306e\u8fba\u308a\u306e\u8ca0\u8377\u3092\u6c17\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u53c2\u7167\nhttps://github.com/snowplow/spark-streaming-example-project/\n\n## \u554f\u984c\u63d0\u8d77\n\nHadoop\u7cfb\u3067MapReduce\u3059\u308b\u969b\u306f\u3001\u4e00\u822c\u7684\u306b\u306f\u7d14\u7c8b\u306a\u95a2\u6570\u306b\u3059\u308b\u3053\u3068\u304c\u63a8\u5968\u3055\u308c\u307e\u3059\u3002\u3057\u304b\u3057\u3001\u5b9f\u969b\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u8272\u3005\u3068\u8907\u96d1\u3067\u3001\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u304f\u306a\u308b\u6642\u304c\u591a\u3005\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001RDD\u3067\u306fKey\u3060\u3051\u3082\u3089\u3063\u3066\u304f\u308b\u3051\u3069\u3001\u5b9f\u969b\u306b\u306fDB\u304b\u3089\u305d\u306eKey\u306eValue\u3092\u53d6\u5f97\u3057\u3066\u304b\u3089\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u3067\u3059\u3002\n\u7406\u60f3\u3092\u8a00\u3048\u3070\u3001DriverNode\u306e\u51e6\u7406\u306e\u4e2d\u3067\u5168\u30c7\u30fc\u30bf\u3092\u4e00\u62ec\u53d6\u5f97\u3067\u304d\u308c\u3070\u3044\u3044\u306e\u3067\u3057\u3087\u3046\u304c\u3001\u30c7\u30fc\u30bf\u91cf\u306b\u3088\u3063\u3066\u306fExecutor\u3078\u8ee2\u9001\u3059\u308b\u91cf\u304c\u591a\u3059\u304e\u3066\u9045\u3044\u3068\u304b\u3001\u305d\u3082\u305d\u3082Driver\u306e\u30e1\u30e2\u30ea\u306b\u4e57\u308a\u5207\u3089\u306a\u3044\u3068\u3044\u3063\u305f\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u89e3\u6c7a\u6cd5\n\n**Executor\u306e\u4e2d\u3067\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002**\n\n\u307e\u3041\u5f53\u305f\u308a\u524d\u3067\u3059\u3088\u306d\u3002\n\n\u305f\u3060\u3001\u666e\u901a\u306e\u3084\u308a\u65b9\u3067\u306f\u3088\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\n- mapReduce\u5185\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308b\u51e6\u7406\u3092\u66f8\u3044\u3066\u3057\u307e\u3046\u3068\u3001RDD\u306e\u5404\u8981\u7d20\u6bce\u306b\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u306e\u3067\u9045\u3044\uff06\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u8ca0\u8377\u304c\u304b\u304b\u308b\u3002\n- DriverNode\u3067\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3068\u3001\u305d\u308c\u3092Executor\u306b\u914d\u5e03\u3059\u308b\u3053\u3068\u304c\uff08\u540c\u4e00\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u306e\u4f7f\u3044\u56de\u3057\u3001\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u4e0d\u53ef\u80fd\u306a\u3069\u306e\u7406\u7531\u3067\uff09\u96e3\u3057\u3044\u3002\n\n\u305d\u306e\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u7279\u6b8a\u306a\u3053\u3068\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u3084\u308a\u65b9\n\n\u4e00\u8a00\u3067\u8a00\u3046\u3068\u3001lazy val\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066DynamoDB\u3078\u306e\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u5f35\u308b\u3084\u308a\u65b9\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001AccessKey\u306a\u3069\u306e\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u5b9f\u884c\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u65b9\u6cd5\u3067Driver, Executor\u306b\u6e21\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```\nspark-submit <\u8272\u3005> --conf spark.executorEnv.AWS_ACCESS_KEY_ID=hoge --conf spark.executorEnv.AWS_SECRET_ACCESS_KEY=hogehoge <\u8272\u3005>\n```\n\nGithub\u3067\u898b\u305f\u3044\u65b9\u306f\u3053\u3061\u3089\u3002\nhttps://github.com/uryyyyyyy/hadoopSample/blob/master/spark/scala_2.11/batch_dynamo/src/main/scala/com/github/uryyyyyyy/hadoop/spark/batch/scala2_11/Hello.scala\n\n```scala\nimport com.amazonaws.auth.BasicAWSCredentials\nimport com.amazonaws.regions.{Region, Regions}\nimport com.amazonaws.services.dynamodbv2.AmazonDynamoDBClient\nimport com.amazonaws.services.dynamodbv2.document.{DynamoDB, PrimaryKey}\nimport org.apache.spark.{SparkConf, SparkContext}\n\nobject Hello {\n\tdef main(args: Array[String]): Unit = {\n\t\tval conf = new SparkConf().setAppName(\"Simple Application\")\n\t\tval sc = new SparkContext(conf)\n\t\tval rdd = sc.range(1, 1000, 1)\n\t\tval accessKey = sys.env(\"AWS_ACCESS_KEY_ID\")\n\t\tval secretKey = sys.env(\"AWS_SECRET_ACCESS_KEY\")\n\t\tval file = args(0)\n\t\tlazy val dynamo = DynamoUtils.setupDynamoClientConnection(accessKey, secretKey)\n\n\t\tprintln(\"----Start----\")\n\t\trdd.map(v => {\n\t\t\tval table = dynamo.getTable(\"sample\")\n\n\t\t\tval key = new PrimaryKey(\"id\", 1)\n\t\t\tval ss = table.getItem(key)\n\t\t\tss.toString\n\t\t}).saveAsTextFile(file)\n\n\t}\n}\n\nobject DynamoUtils {\n\n\tdef setupDynamoClientConnection(accessKey:String, secretKey:String): DynamoDB = {\n\t\tval credentials = new BasicAWSCredentials(accessKey,secretKey)\n\t\tval client = new AmazonDynamoDBClient(credentials)\n\t\tclient.setRegion(Region.getRegion(Regions.AP_NORTHEAST_1))\n\t\tval dynamoDB = new DynamoDB(client)\n\n\t\tval table = dynamoDB.getTable(\"sample\")\n\n\t\tval expressionAttributeNames = new util.HashMap[String,String]()\n\t\texpressionAttributeNames.put(\"#p\", \"pageCount\")\n\n\t\tval expressionAttributeValues = new util.HashMap[String,Object]()\n\t\tval num = 1.asInstanceOf[Object]\n\t\texpressionAttributeValues.put(\":val\", num)\n\n\t\tval outcome = table.updateItem(\n\t\t\t\"id\", 1,\n\t\t\t\"set #p = #p + :val\",\n\t\t\texpressionAttributeNames,\n\t\t\texpressionAttributeValues)\n\t\tdynamoDB\n\t}\n}\n\n```\n\n`lazy val dynamo = DynamoUtils.setupDynamoClientConnection(accessKey, secretKey)` \u3068\u306a\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u30ad\u30e2\u3067\u3059\u3002\n\n\u3053\u3046\u66f8\u3044\u3066\u3042\u3052\u308b\u3068\u3001\u305d\u308c\u305e\u308c\u306eExecutor\u306e\u4e2d\u3067\u4e00\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u3066\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u4f8b\u3068\u3057\u3066\u3001\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u8cbc\u308b\u969b\u306bDynamo\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066atomic count\u306e\u64cd\u4f5c\u3092\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306eBatch\u3092spark\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u8a72\u5f53\u30ec\u30b3\u30fc\u30c9\u306e\u5024\u306fExecutor\u306e\u5206\u3060\u3051\uff08ExecutorNode\u306e\u6570\u3060\u3051\uff1f\uff09\u5897\u3048\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u672c\u7b4b\u3068\u95a2\u4fc2\u306a\u3044\u3067\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u74b0\u5883\u5909\u6570\u3092\u8aad\u307f\u53d6\u308b\u306e\u306fDriverNode\uff08val\u306b\u306a\u3063\u3066\u308b\u306e\u3067\uff09\u3067\u3001\u305d\u306e\u5024\u304c\u5404Executor\u306bbroadcast\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\u305d\u306e\u5024\u3092\u4f7f\u3063\u3066Dynamo\u306b\u7e4b\u304e\u306b\u884c\u304f\u306e\u306f\u3001\u4e0a\u3067\u8ff0\u3079\u3066\u308b\u3088\u3046\u306b\u5404Executor\u3067\u3059\u3002\uff08lazy val\u306e\u305f\u3081\u3002\uff09\n\n## \u6ce8\u610f\u70b9\n\nExecutor\u306e\u6570\u304c\u5897\u3048\u308b\u307b\u3069\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u304c\u5897\u3048\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u304a\u305d\u3089\u304f\u4e26\u5217\u3067\u540c\u6642\u306b\u5927\u91cf\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u5916\u90e8\u30ea\u30bd\u30fc\u30b9\u306b\u98db\u3076\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u305d\u306e\u8fba\u308a\u306e\u8ca0\u8377\u3092\u6c17\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## \u53c2\u7167\n\nhttps://github.com/snowplow/spark-streaming-example-project/\n", "tags": ["EMR", "hadoop", "Spark"]}