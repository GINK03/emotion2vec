{"context": "\u4eca\u56de\u306f \u30a4\u30de\u30c9\u30ad \u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u72b6\u614b\u7ba1\u7406\u306e\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\n\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u304c\u5897\u3048\u3059\u304e\u308b\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u72b6\u614b\u4fdd\u6301\u306e\u51e6\u7406\u306e\u6240\u5728\u304c\u4e0d\u660e\u77ad\u3060\u3057\u3001\u3069\u3046\u3084\u308c\u3070\u3044\u3044\u306e\uff1f\n\u30af\u30e9\u30b9\u30bf\u306e\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3067\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\u3068\u304d\u306b\u3001\u3069\u3046\u3084\u3063\u3066\u7ba1\u7406\u3059\u308b\u306e\uff1f\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u96e3\u3057\u305d\u3046\u3060\u3057\u3001\u30a4\u30de\u30c9\u30ad\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u3053\u3089\u8fba\u307e\u3067\u30e6\u30fc\u30b6\u30fc\u3092\u697d\u306b\u3057\u3066\u304f\u308c\u308b\u306e\u304b\uff1f\n\n\u306e\u3088\u3046\u306a\u7591\u554f\u306b\u7b54\u3048\u308b\u5185\u5bb9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u6700\u65b0\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3042\u308bService Fabric\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u7ba1\u7406\u65b9\u6cd5\u304b\u3089\u3001\u4eca\u5f8c\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u306f\u4f55\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u304b\u3001\u4eca\u5f8c\u3055\u3089\u306b\u5e02\u5834\u306b\u767b\u5834\u3059\u308b\u3067\u3042\u308d\u3046\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5411\u3051\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u3053\u307e\u3067\u30e6\u30fc\u30b6\u30fc\u306e\u4f53\u9a13\u3092\u5411\u4e0a\u3055\u305b\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u8003\u3048\u308b\u305f\u3081\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306fService Fabric\u3068\u3044\u3046\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u306e\u305f\u3081\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u306f\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3044\u3066\u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u72b6\u614b\u306e\u7ba1\u7406\u306f\u5f93\u6765\u578b\u306e\u30ad\u30e5\u30fc\u3084\u30c6\u30fc\u30d6\u30eb\u4ee5\u5916\u306b\u3001\u30ea\u30e9\u30a4\u30a2\u30d6\u30eb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u5f37\u529b\u306a\u65b9\u6cd5\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306fgithub\u3067\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3001WordCount\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089\u3001Service Fabric\u3068\u3044\u3046\u30a4\u30de\u30c9\u30ad\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u3092\u3082\u3061\u3001\u3069\u306e\u3088\u3046\u306b\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3067\u60c5\u5831\u3092\u3084\u308a\u53d6\u308a\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u305d\u3082\u305d\u3082Service Fabric\u3068\u306f\n\nService Fabric\u306f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3067\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3001\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u6301\u3061\u307e\u3059\u3002\n\n\u9ad8\u3044\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n\u9ad8\u3044\u4fe1\u983c\u6027\n\u5bb9\u6613\u306a\u7ba1\u7406\n\n\u307e\u305f\u3001Azure Service Fabric\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u3000(\uff1d\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\uff09\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u3053\u3068\u3067\u3059\u3002\n\n\u958b\u767a\u8005\u304c\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u7ba1\u7406\u4f5c\u696d\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306e\u7c21\u7d20\u5316\u304c\u5b9f\u73fe\u3067\u304d\u308b\n\u5206\u5272\u7d71\u6cbb\u304c\u53ef\u80fd\uff08\u975e\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u3067\u3001\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30a2\u30d7\u30ea\u4f5c\u6210\uff09\n\u9867\u5ba2\u306b\u4fa1\u5024\u3092\u63d0\u4f9b\u3059\u308b\u6a5f\u80fd\u958b\u767a\u306b\u5c02\u5ff5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\n\n\u3067\u306f\u3055\u3063\u305d\u304f\u306bWordCount\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u304b\u3089\u3001\u305d\u306e\u5b9f\u614b\u306b\u8feb\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30f3\u30d7\u30eb\u304c\u3084\u308a\u305f\u3044\u3053\u3068\n\u4eca\u56de\u306f\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001\u4ee5\u4e0b\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u624b\u5143\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9/\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3057\u3087\u3046\u3002\n\nhttps://github.com/Azure-Samples/service-fabric-dotnet-getting-started\n\u4eca\u56de\u8a66\u3059\u306e\u306f\u300cservice-fabric-dotnet-getting-started/Services/WordCount/\u300d\u306e\u30d1\u30b9\u306b\u3042\u308b\u300cWordCount.sln\u300d\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3092\u3053\u306e\u307e\u307e\u89e3\u51cd\u3057\u3066VS\u3067\u30d3\u30eb\u30c9\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u300cservice-fabric-dotnet-getting-started\u300d\u3068\u3044\u3046\u540d\u524d\u304c\u9577\u3059\u304e\u3066\u30a8\u30e9\u30fc\u3092\u5410\u304f\u306e\u3067\u3001\u300csf\u300d\u306a\u3069\u3068\u30d5\u30a9\u30eb\u30c0\u306e\u540d\u524d\u3092\u30ea\u30cd\u30fc\u30e0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3069\u3093\u306a\u30b5\u30f3\u30d7\u30eb\u304b\u306fgithub\u306eREADME.md\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nWordCount provides an introduction to using reliable collections and to partitioning stateful services. A client-side JavaScript function generates random five-character strings, which are then sent to the application via an ASP.NET WebAPI to be counted. The stateless web service resolves the endpoint for the stateful service's partition based on the first character of the string. The stateful service maintains a backlog of words to count in a ReliableQueue and then keeps track of their count in a ReliableDictionary. The total count, plus a per-partition count, are shown in the web UI at http://:8081/WordCount/.\n\n\u3053\u308c\u3092\u610f\u8a33\u3057\u3066\u3082\u3001\u305f\u3076\u3093\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u969b\u306b\u89e6\u3063\u3066\u307f\u306a\u3044\u3068\u4f55\u3092\u610f\u5473\u3059\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u8aac\u660e\u306a\u306e\u3067\u3001\u88dc\u8db3\u3057\u306a\u304c\u3089\u8a33\u3059\u3068\u4ee5\u4e0b\u3067\u3059\u3002\n\nWordCount\u306f\u30ea\u30e9\u30a4\u30a2\u30d6\u30eb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5229\u7528\u3068\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3051\u308b\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u3092\u7d39\u4ecb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306fJavaScrip\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u304b\u3089\u6210\u308b5\u6587\u5b57\u306e\u6587\u5b57\u5217\u30920.2\u79d2\u304a\u304d\u306b\u751f\u6210\u3057\u30d5\u30e9\u30c3\u30b7\u30e5\u306e\u3088\u3046\u306bWEB\u30b5\u30a4\u30c8\u306b\u8868\u793a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u753b\u9762\u3092\u898b\u308b\u30681-3(a-c), 4-6(d-f), 7-9(g-i)\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u5148\u307b\u3069\u751f\u6210\u3055\u308c\u305f\u6587\u5b57\u5217\u306e\u982d\u6587\u5b57\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u982d\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u30ef\u30fc\u30c9\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u306e\u304b\u3001\u7bc4\u56f2\uff08\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u5225\uff09\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\u305d\u306e\u300c\u4f55\u56de\u753b\u9762\u306b\u6587\u5b57\u304c\u73fe\u308c\u305f\u304b\u300d\u3068\u3044\u3046\u30ab\u30a6\u30f3\u30c8\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6587\u5b57\u5217\u306a\u3069\u306e\u60c5\u5831\u306fASP.NET\u306eWebAPI\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3078\u9001\u3089\u308c\u307e\u3059\u3002\n\u4e00\u65b9\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306eWEB\u30b5\u30fc\u30d3\u30b9\u306f\u9001\u3089\u308c\u3066\u304d\u305f\u6587\u5b57\u5217\u306e\u982d\u6587\u5b57\u304b\u3089\u3001\u3069\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u51e6\u7406\u3092\u6295\u3052\u308b\u306e\u304b\u3092\u5224\u5225\u3057\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u89e3\u6c7a\u3092\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306f\u30ef\u30fc\u30c9\u306e\u51fa\u73fe\u56de\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092ReliabuleQueue\u3092\u7528\u3044\u3066\u51e6\u7406\u3092\u9069\u5207\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3001ReliableDictionary\u3092\u7528\u3044\u3066\u305d\u308c\u3089\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30c8\u30fc\u30bf\u30eb\u306e\u51fa\u73fe\u56de\u6570\u3068\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092http://:8081/WordCount/\u3000\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\u30a2\u30d7\u30ea\u306eUI\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3068\u3044\u3063\u3066\u3082\u5177\u4f53\u7684\u306b\u3069\u306e\u3088\u3046\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3069\u306e\u3088\u3046\u306b\u3084\u308a\u53d6\u308a\u304c\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u3084\u308a\u3068\u308a\u306e\u56f3\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8aad\u3093\u3067\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u56f3\u3092\u66f8\u304d\u8d77\u3053\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u3067\u306f\u30d5\u30ed\u30fc\u3092\u958b\u8a2d\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u57fa\u672c\u7684\u306a\u51e6\u7406\n\n\u2460\u2461 \u4e00\u756a\u6700\u521d\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002ASP.NET\u306ewwwroot\u306e\u4e2d\u306b\u3042\u308bindex.html\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306fjavascript\u306e\u51e6\u7406\u304c\u66f8\u304b\u308c\u305f\u3060\u3051\u306e\u771f\u3063\u767d\u306a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n\u2462 js\u304c\u767a\u706b\u3057\u59cb\u3081\u307e\u3059\u3002\njs\u306f\u5177\u4f53\u7684\u306b\u4ee5\u4e0b\u306e\u95a2\u6570\u3067200\u30df\u30ea\u79d2\u304a\u304d\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u30ef\u30fc\u30c9\u3092\u4f5c\u3063\u3066WebAPI\u306b\u9001\u308b\u51e6\u7406\u3001350\u30df\u30ea\u79d2\u304a\u304d\u306bWebAPI\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u73fe\u5728\u306e\u51fa\u73fe\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\nIndex.html\n        $(function () {\n            var CountTask = setInterval(function () { Count(); }, 350);\n            var AddWordTask = setInterval(function () { SendWords(); }, 200);\n        });\n\n        function SendWords()\n        {\n            $.ajax({\n                url: serviceUrl + '/api/AddWord/' + randomWord(),\n                method: 'POST'\n            })\n           .done(function (wordResult) {\n               $('#sendResult').html(wordResult);\n           });\n        }\n\n        function Count()\n        {\n            $.ajax({\n                url: serviceUrl + '/api/Count?c=' + Math.random(),\n                dataType: 'text',\n                method: 'GET'\n            })\n           .done(function (countResult) {\n                $('#count').html(countResult)\n           });\n        }\n\n        function randomWord()\n        {\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n            for( var i=0; i < 5; i++ )\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n            return text;   \n\n\n\n\u30ef\u30fc\u30c9\u51fa\u73fe\u56de\u6570\u306e\u51e6\u7406\n\n\u2463-1,\u2463-2  Count\u95a2\u6570\u3067\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u2192\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u554f\u3044\u5408\u308f\u305b\n\u3053\u306e\u51e6\u7406\u3067\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3067\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306aASP.NET\u306eWordCountWebService\u3068\u3044\u3046WebAPI\u304b\u3089\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308bWprdCountService\u306b\u554f\u3044\u5408\u308f\u305b\u3092\u3057\u3066\u3044\u307e\u3059\u3002\nserviceUri = new Uri(FabricRuntime.GetActivationContext().ApplicationName + \"/WordCountService\");\n\u306e\u90e8\u5206\u3067URI\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\u305d\u3057\u3066\nHttpResponseMessage response = await client.HttpClient.GetAsync(new Uri(client.Url, \"Count\"));\n\u306e\u90e8\u5206\u3067\u306fWordCountWebService\u5074\u306eCount()\u5185\u3067\u3001WordCountService\u306eAPI\u3067\u3042\u308bCount\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\n\u3053\u306e\u6642\u70b9\u3067\u306fReliableCollection\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u3002ReliableCollection\u3092\u64cd\u4f5c\u3057\u3066\u3044\u308b\u306e\u306fWordCountService\u306e\u65b9\u306a\u306e\u3067\u3001\u73fe\u5728\u306e\u6642\u70b9\u3067WordCountWebService\u306f\u300c\u30ef\u30fc\u30c9\u3092\u6301\u3063\u3066\u304d\u305f\u304b\u3089\u63a5\u7d9a\u3057\u3066\u9001\u308b\u306d\u3002\u300d\u3068\u3044\u3046\u51e6\u7406\u3092\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\nDefaultController.cs(WordCountWebService)\n    static DefaultController()\n        {\n            serviceUri = new Uri(FabricRuntime.GetActivationContext().ApplicationName + \"/WordCountService\");\n\n            backoffQueryDelay = TimeSpan.FromSeconds(3);\n\n            fabricClient = new FabricClient();\n\n            communicationFactory = new HttpCommunicationClientFactory(new ServicePartitionResolver(() => fabricClient));\n        }\n...\n\n        [HttpGet]\n        [Route(\"Count\")]\n        public async Task<HttpResponseMessage> Count()\n        {\n            // For each partition client, keep track of partition information and the number of words\n            ConcurrentDictionary<Int64RangePartitionInformation, long> totals = new ConcurrentDictionary<Int64RangePartitionInformation, long>();\n            IList<Task> tasks = new List<Task>();\n\n            foreach (Int64RangePartitionInformation partition in await this.GetServicePartitionKeysAsync())\n            {\n                try\n                {\n                    ServicePartitionClient<HttpCommunicationClient> partitionClient\n                        = new ServicePartitionClient<HttpCommunicationClient>(communicationFactory, serviceUri, new ServicePartitionKey(partition.LowKey));\n\n                    await partitionClient.InvokeWithRetryAsync(\n                        async (client) =>\n                        {\n                            HttpResponseMessage response = await client.HttpClient.GetAsync(new Uri(client.Url, \"Count\"));\n                            string content = await response.Content.ReadAsStringAsync();\n                            totals[partition] = Int64.Parse(content.Trim());\n                        });\n                }\n                catch (Exception ex)\n                {\n                    // Sample code: print exception\n                    ServiceEventSource.Current.OperationFailed(ex.Message, \"Count - run web request\");\n                }\n            }\n\n            StringBuilder sb = new StringBuilder();\n            sb.Append(\"<h1> Total:\");\n            sb.Append(totals.Aggregate<KeyValuePair<Int64RangePartitionInformation, long>, long>(0, (total, next) => next.Value + total));\n            sb.Append(\"</h1>\");\n            sb.Append(\"<table><tr><td>Partition ID</td><td>Key Range</td><td>Total</td></tr>\");\n            foreach (KeyValuePair<Int64RangePartitionInformation, long> partitionData in totals.OrderBy(partitionData => partitionData.Key.LowKey))\n            {\n                sb.Append(\"<tr><td>\");\n                sb.Append(partitionData.Key.Id);\n                sb.Append(\"</td><td>\");\n                sb.AppendFormat(\"{0} - {1}\", partitionData.Key.LowKey, partitionData.Key.HighKey);\n                sb.Append(\"</td><td>\");\n                sb.Append(partitionData.Value);\n                sb.Append(\"</td></tr>\");\n            }\n\n            sb.Append(\"</table>\");\n\n            return new HttpResponseMessage()\n            {\n                Content = new StringContent(sb.ToString(), Encoding.UTF8, \"text/html\")\n            };\n        }\n\n\n\n\n        private async Task<IList<Int64RangePartitionInformation>> GetServicePartitionKeysAsync()\n        {\n            for (int i = 0; i < MaxQueryRetryCount; i++)\n            {\n                try\n                {\n                    // Get the list of partitions up and running in the service.\n                    ServicePartitionList partitionList = await fabricClient.QueryManager.GetPartitionListAsync(serviceUri);\n\n                    // For each partition, build a service partition client used to resolve the low key served by the partition.\n                    IList<Int64RangePartitionInformation> partitionKeys = new List<Int64RangePartitionInformation>(partitionList.Count);\n                    foreach (Partition partition in partitionList)\n                    {\n                        Int64RangePartitionInformation partitionInfo = partition.PartitionInformation as Int64RangePartitionInformation;\n                        if (partitionInfo == null)\n                        {\n                            throw new InvalidOperationException(\n                                string.Format(\n                                    \"The service {0} should have a uniform Int64 partition. Instead: {1}\",\n                                    serviceUri.ToString(),\n                                    partition.PartitionInformation.Kind));\n                        }\n\n                        partitionKeys.Add(partitionInfo);\n                    }\n\n                    return partitionKeys;\n                }\n                catch (FabricTransientException ex)\n                {\n                    ServiceEventSource.Current.OperationFailed(ex.Message, \"create representative partition clients\");\n                    if (i == MaxQueryRetryCount - 1)\n                    {\n                        throw;\n                    }\n                }\n\n                await Task.Delay(backoffQueryDelay);\n            }\n\n            throw new TimeoutException(\"Retry timeout is exhausted and creating representative partition clients wasn't successful\");\n        }\n\n\n\n\n\u2463-3,\u2463-4 \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u30ab\u30a6\u30f3\u30c8\u51e6\u7406\u3092\u3059\u308b\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u898b\u901a\u3057\u304c\u3060\u3044\u3076\u826f\u3044\u3067\u3059\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306eWordCountService\u3067\u306f\u30ef\u30fc\u30c9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u308bReliableDictionary\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u60c5\u5831\u3092\u53d6\u3063\u3066\u304d\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\nDefaultController.cs(WordCountService)\n        [HttpGet]\n        [Route(\"Count\")]\n        public async Task<IHttpActionResult> Count()\n        {\n            IReliableDictionary<string, long> statsDictionary = await this.stateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"statsDictionary\");\n\n            using (ITransaction tx = this.stateManager.CreateTransaction())\n            {\n                ConditionalValue<long> result = await statsDictionary.TryGetValueAsync(tx, \"Number of Words Processed\");\n\n                if (result.HasValue)\n                {\n                    return this.Ok(result.Value);\n                }\n            }\n\n            return this.Ok(0);\n        }\n\n\n\n\u30ef\u30fc\u30c9\u767b\u9332\u306e\u51e6\u7406\n\n\u2464-1,\u2464-2  AddWord\u95a2\u6570\u3067\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u2192\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u30ef\u30fc\u30c9\u3092\u308f\u305f\u3059\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u51e6\u7406\u306b\u6bd4\u3079\u308b\u3068\u5e7e\u5206\u304b\u898b\u3084\u3059\u3044\u3067\u3059\u3002\nasync (client) => { await client.HttpClient.PutAsync(new Uri(client.Url, \"AddWord/\" + word), new StringContent(String.Empty)); });\n\u3053\u3061\u3089\u3082\u3053\u306e\u6587\u5b57\u5217\u304b\u3089WordCountWebService\u304b\u3089WordCountService\u306eAddWord/{word}\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u8907\u96d1\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3088\u308a\u306f\u305f\u3060\u305f\u3093\u306b\u30ad\u30e5\u30fc\u306b\u30ef\u30fc\u30c9\u3092\u6295\u3052\u8fbc\u3080\u3060\u3051\u306e\u7c21\u5358\u306a\u51e6\u7406\u3067\u3059\u3002\n\nDefaultController.cs(WordCountWebService)\n\n        [HttpPost]\n        [Route(\"AddWord/{word}\")]\n        public async Task<HttpResponseMessage> AddWord(string word)\n        {\n            // Determine the partition key that should handle the request\n            long partitionKey = GetPartitionKey(word);\n\n            ServicePartitionClient<HttpCommunicationClient> partitionClient\n                = new ServicePartitionClient<HttpCommunicationClient>(communicationFactory, serviceUri, new ServicePartitionKey(partitionKey));\n\n            await\n                partitionClient.InvokeWithRetryAsync(\n                    async (client) => { await client.HttpClient.PutAsync(new Uri(client.Url, \"AddWord/\" + word), new StringContent(String.Empty)); });\n\n            return new HttpResponseMessage()\n            {\n                Content = new StringContent(\n                    String.Format(\"<h1>{0}</h1> added to partition with key <h2>{1}</h2>\", word, partitionKey),\n                    Encoding.UTF8,\n                    \"text/html\")\n            };\n        }\n\n...\n        private static long GetPartitionKey(string word)\n        {\n            return ((long) char.ToUpper(word[0])) - 64;\n        }\n\n\n\n\n\u2464-3,\u2464-4  AddWord\u95a2\u6570\u3067\u30ad\u30e5\u30fc\u306b\u30ef\u30fc\u30c9\u3092\u653e\u308a\u8fbc\u3080\n\u3053\u3061\u3089\u306e\u51e6\u7406\u3067\u306fReliableQueue\u306b\u30ef\u30fc\u30c9\u3092\u30a8\u30f3\u30ad\u30e5\u30fc\u3057\u3066\u3044\u308b\u51e6\u7406\u3067\u3042\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\n\nDefaultController.cs(WordCountService)\n        [HttpPut]\n        [Route(\"AddWord/{word}\")]\n        public async Task<IHttpActionResult> AddWord(string word)\n        {\n            IReliableQueue<string> queue = await this.stateManager.GetOrAddAsync<IReliableQueue<string>>(\"inputQueue\");\n\n            using (ITransaction tx = this.stateManager.CreateTransaction())\n            {\n                await queue.EnqueueAsync(tx, word);\n\n                await tx.CommitAsync();\n            }\n\n            return this.Ok();\n        }\n\n\n\u3053\u308c\u3067WordCount\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3001Word\u3092Add\u3059\u308b\u51e6\u7406\u306e\u6d41\u308c\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u809d\u5fc3\u306aReliableQueue\u304b\u3089\u30c7\u30ad\u30e5\u30fc\u3057\u3066ReliableDictionary\u306b\u79fb\u3059\u51e6\u7406\u306f\u3069\u3053\u3067\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u306e\u51e6\u7406\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u306f WordCountService\u306eWordCountService.cs\u3067\u3059\u3002\n\nReliableQueue \u2192 ReliableDictionary\nwhile(true)\u3068\u306a\u3063\u3066\u3044\u3066\u308f\u304b\u308b\u901a\u308a\u3001\u51e6\u7406\u3092\u305a\u3063\u3068\u7d9a\u3051\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\nQueue\u3092\u898b\u3066\u3001\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3057\u305f\u3089\u30c7\u30ad\u30e5\u30fc\u3057\u3066ReliableDictionary\u306b\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\nWordCountService.cs\n  protected override async Task RunAsync(CancellationToken cancellationToken)\n        {\n            ServiceEventSource.Current.RunAsyncInvoked(ServiceEventSourceName);\n\n\n            IReliableQueue<string> inputQueue = await this.StateManager.GetOrAddAsync<IReliableQueue<string>>(\"inputQueue\");\n            IReliableDictionary<string, long> wordCountDictionary =\n                await this.StateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"wordCountDictionary\");\n            IReliableDictionary<string, long> statsDictionary = await this.StateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"statsDictionary\");\n\n\n            while (true)\n            {\n                cancellationToken.ThrowIfCancellationRequested();\n\n                try\n                {\n                    using (ITransaction tx = this.StateManager.CreateTransaction())\n                    {\n                        ConditionalValue<string> dequeuReply = await inputQueue.TryDequeueAsync(tx);\n\n                        if (dequeuReply.HasValue)\n                        {\n                            string word = dequeuReply.Value;\n\n                            long count = await wordCountDictionary.AddOrUpdateAsync(\n                                tx,\n                                word,\n                                1,\n                                (key, oldValue) => oldValue + 1);\n\n                            long numberOfProcessedWords = await statsDictionary.AddOrUpdateAsync(\n                                tx,\n                                \"Number of Words Processed\",\n                                1,\n                                (key, oldValue) => oldValue + 1);\n\n                            long queueLength = await inputQueue.GetCountAsync(tx);\n\n                            await tx.CommitAsync();\n\n                            ServiceEventSource.Current.RunAsyncStatus(\n                                this.Partition.PartitionInfo.Id,\n                                numberOfProcessedWords,\n                                queueLength,\n                                word,\n                                count);\n                        }\n                    }\n\n                    await Task.Delay(TimeSpan.FromMilliseconds(100), cancellationToken);\n                }\n                catch (TimeoutException)\n                {\n                    //Service Fabric uses timeouts on collection operations to prevent deadlocks.\n                    //If this exception is thrown, it means that this transaction was waiting the default\n                    //amount of time (4 seconds) but was unable to acquire the lock. In this case we simply\n                    //retry after a random backoff interval. You can also control the timeout via a parameter\n                    //on the collection operation.\n                    Thread.Sleep(TimeSpan.FromSeconds(new Random().Next(100, 300)));\n\n                    continue;\n                }\n                catch (Exception exception)\n                {\n                    //For sample code only: simply trace the exception.\n                    ServiceEventSource.Current.MessageEvent(exception.ToString());\n                }\n            }\n\n\n\u3053\u308c\u3067\u5168\u4f53\u306e\u30d5\u30ed\u30fc\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u3002Reliable\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u3060\u3044\u3076\u7c21\u5358\u306b\u9ad8\u4fe1\u983c\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u304c\u904b\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30ad\u30e5\u30fc vs ReliableCollection\n\u300c\u30ad\u30e5\u30fc vs ReliableCollection\u300d \u3068\u306f\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u3001ReliableCollection\u306e\u4e2d\u306b\u306f\u3082\u3061\u308d\u3093\u30ad\u30e5\u30fc\u306e\u4ed5\u7d44\u307f\u3067\u3042\u308bReliableQueue\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3044\u3046\u30ad\u30e5\u30fc\u306f\u5f93\u6765\u578b\u306e\u30ad\u30e5\u30fc\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u3082\u305d\u3082\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u30ad\u30e5\u30fc\u304c\u5fc5\u8981\u306a\u7406\u7531\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308c\u3070\u72b6\u614b\u3092\u4fdd\u6301\u3057\u306a\u3044\u306e\u3067\u3001\u30ad\u30e5\u30fc\u3092\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u6b63\u3057\u304f\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u304c\u51fa\u6765\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u4e00\u898b\u3001\u308f\u3056\u308f\u3056\u30ad\u30e5\u30fc\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306a\u3069\u3092\u7ba1\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u3082\u898b\u3048\u307e\u3059\u3002\n\n\u3067\u306f\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u306f\uff1f\n\n\u300c\u30b5\u30fc\u30d3\u30b9\u306e\u7d99\u7d9a\u300d\u3068\u3044\u3046\u89b3\u70b9\u3067\u8003\u3048\u308b\u3068\u7b54\u3048\u306f\u898b\u3048\u3066\u304d\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30bf\u30b9\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u305f\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u6b62\u307e\u3063\u305f\u3068\u304d\u306b\u5b58\u5728\u3057\u305f\u60c5\u5831\u306f\u3069\u3053\u304b\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u6c17\u306b\u3057\u307e\u305b\u3093\u3002\u6c17\u306b\u3059\u308b\u306e\u306f\u300c\u30b5\u30fc\u30d3\u30b9\u304c\u6b62\u307e\u308b\u3053\u3068\u300d\u3067\u3059\u3002\n\u300c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u3001\u3061\u3083\u3093\u3068\u4e07\u304c\u4e00\u306e\u4e8b\u614b\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u304b\uff1f\u300d\u3068\u8003\u3048\u305f\u3068\u304d\u306b\u30b5\u30fc\u30d0\u30fc\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u72b6\u614b\u3092\u30d7\u30e9\u30a4\u30de\u30ea\u3068\u3057\u3066\u8003\u3048\u308b\u3068\u5c11\u3057\u4e0d\u5b89\u304c\u6b8b\u308b\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u3082\u305d\u308c\u304c\u30df\u30c3\u30b7\u30e7\u30f3\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u3060\u3068\u306a\u304a\u3055\u3089\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\u3001\u30ad\u30e5\u30fc\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3092\u30d7\u30e9\u30a4\u30de\u30ea\u3068\u3068\u3089\u3048\u3066\u904b\u7528\u3059\u308b\u65b9\u6cd5\u3082\u898b\u3048\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u3068\u30ad\u30e5\u30fc\u306e2\u3064\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u307e\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30af\u30e9\u30a6\u30c9\u3060\u3068\u7279\u306b\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306a\u3069\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u308c\u306f\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u898b\u3048\u306a\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n\u3067\u306f\u30ad\u30e5\u30fc\u306f\u7d50\u5c40\u5916\u3067\u69cb\u3048\u305f\u65b9\u304c\u826f\u3044\u306e\u304b\uff1f\n\nService Fabric\u3067\u306f\u305d\u308c\u306f\u305a\u3070\u308a\u300c\u5916\u3067\u69cb\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u300d\u3068\u8a00\u3048\u307e\u3059\u3002\nReliable\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u306a\u305cReliable\u306a\u306e\u304b\u3001\u3068\u3044\u3046\u8a71\u3092\u8003\u3048\u308b\u3068\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531\u304c\u898b\u3048\u3066\u304d\u307e\u3059\u3002\nService Fabric\u3067\u306e\u5178\u578b\u7684\u306a\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb/\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5\u4f8b\u304c\u4e0b\u306e\u56f3\u3067\u3059\uff08\u5de6\u304c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3001\u53f3\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\uff09\u3002\n\u78ba\u304b\u306b\u5de6\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306e\u56f3\u3092\u898b\u308b\u3068\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306b\u95a2\u3057\u3066\u306f\u5c11\u3057\u983c\u308a\u306a\u3044\u3088\u3046\u306b\u3082\u611f\u3058\u307e\u3059\u304c\u3001ReliableCollection\u304c\u3042\u308b\u9650\u308a\u305d\u3046\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4e0b\u306e\u56f3\u306fService Fabric\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u3059\u3002\n\u4e0a\u306e\u6c34\u8272\u306e\u70b9\u7dda\u3067\u56f2\u308f\u308c\u305f\u90e8\u5206\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5207\u308a\u53e3\u3067\u898b\u305f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4fdd\u6301\u3059\u308bReliableCollection\u3001\n\u4e0b\u306e\u30aa\u30ec\u30f3\u30b8\u8272\u306e\u90e8\u5206\u304c\u5404Node\u306b\u5206\u6563\u3055\u308c\u3066\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u305fReliableCollection\u3067\u3059\u3002\n1\u3064\u306eReliableCollection\u304cPrimary x 1, ActiveSecondary x 2\u306e\u69cb\u6210\u3067\u5404Node\u306b\u5206\u6563\u3055\u308c\u3001\u30ce\u30fc\u30c9\u304c1\u3064\u843d\u3061\u3066\u3082\u7c21\u5358\u306b\u5fa9\u65e7\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u4f8b\u3048\u3070\u7279\u5b9a\u306e\u30c7\u30fc\u30bf(ReliableCollection)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066Read\u3057\u305f\u3044\u3068\u304d\u306b\u3001Primary\u306eReliableCollection\u3092\u4fdd\u6301\u3059\u308b\u30ce\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u304c\u5272\u308a\u632f\u3089\u308c\u3001\u30ce\u30fc\u30c9\u4e0a\u306b\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u540c\u30de\u30b7\u30f3\u5185\u306ePrimaryReliableCollection\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u8aad\u307f\u8fbc\u307f\u306f\u9ad8\u901f\u3067\u3059\u3002\n\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f\u300cService Fabric Reliable Services \u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u5206\u5272\u300d\u304c\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u8aad\u3093\u3067\u307f\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3069\u306e\u3088\u3046\u306bReliableCollection\u304c\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u308b\u306e\u304b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001ReliableCollection\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\u306f\u30ad\u30e5\u30fc\u3092\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u307e\u308a\u306a\u3044\u3067\u3059\u3002\nReliableCollection\u306e\u5834\u5408\u3001\u8aad\u307f\u53d6\u308a\u306f\u540c\u3058\u30ce\u30fc\u30c9\u5185\u3067\u6700\u901f\u306b\u884c\u3048\u3066\u3001\u30ce\u30fc\u30c9\u9593\u306e\u66f8\u304d\u8fbc\u307f\u3082\u9ad8\u901f\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u3067\u30ad\u30e5\u30fc\u306b\u884c\u3063\u3066\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u304c\u6b63\u3057\u3044\u306e\u304b\u306a\u3069\u306e\u691c\u8a3c\u3092\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u6642\u9593\u3082\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u672c\u672b\u8ee2\u5012\u3067\u3042\u308b\u3068\u3082\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3082\u3063\u3068\u3082\u3082\u3001\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3084\u3001\u3055\u3089\u306a\u308b\u4fe1\u983c\u6027\u304c\u6c42\u3081\u3089\u308c\u308b\u5834\u5408\u306b\u306f\u4e00\u6982\u306b\u8a00\u3048\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308b\u306e\u3067\u3001\n\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u300c\u305b\u3063\u304b\u304fReliableCollection\u304c\u3042\u308b\u306e\u3060\u304b\u3089\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u3001\u591a\u304f\u306e\u30b1\u30fc\u30b9\u3067\u6e80\u8db3\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u300d\u3068\u3044\u3046\u611f\u3058\u306b\u3068\u3089\u3048\u3066\u9802\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\nReliableCollection\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u30b5\u30fc\u30d3\u30b9\u304c\u5206\u5272\u3055\u308c\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u3042\u308a\u304b\u304c\u4e0d\u660e\u77ad\u306b\u306a\u3063\u305f\u308a\u3001\u7ba1\u7406\u304c\u5927\u5909\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30ce\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u3057\u305f\u6642\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7d99\u7d9a\u306b\u7559\u610f\u3057\u305f\u3044\u3068\u304d\u3001ReliableCollection\u306f\u305d\u308c\u3089\u3092\u7ba1\u7406\u3059\u308b\u6b66\u5668\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306f\u3082\u3061\u308d\u3093\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u4ee5\u5916\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u7279\u5b9a\u306e\u30d0\u30c3\u30c1\u51e6\u7406\u306e\u7d50\u679c\u3092\u3069\u3093\u3069\u3093ReliableDictionary\u306a\u3069\u306b\u5165\u308c\u3066\u3044\u304f\u3068\u540c\u6642\u306b\u3001\u305d\u308c\u3089\u306eReliableDictionary\u306e\u30c7\u30fc\u30bf\u306f\u8907\u6570\u53f0\u306e\u30ce\u30fc\u30c9\u306b\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u9014\u4e2d\u3067\u3082\u3057\u3082\u30ce\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u3057\u3066\u3082\u3001\u4ed6\u306e\u30ce\u30fc\u30c9\u304c\u300c\u51e6\u7406\u306e\u9014\u4e2d\u304b\u3089\u300d\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3068\u3066\u3082\u96e3\u3057\u3044\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5897\u3084\u3057\u3066\u8a00\u3063\u305f\u6319\u53e530\u500b\u306e\u30b5\u30fc\u30d3\u30b9/\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u767a\u751f\u3057\u305f\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\u304f\u3089\u3044\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u9023\u643a\u306e\u30b3\u30fc\u30c9\u3084\u30ed\u30b8\u30c3\u30af\u306f\u3067\u304d\u308b\u9650\u308a\u7c21\u7565\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u4eba\u9593\u304c\u884c\u3046\u306e\u306f\u3068\u3066\u3082\u5927\u5909\u3067\u3001\u6700\u521d\u306e\u6bb5\u968e\u3067\u8155\u5229\u304d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u305d\u3046\u3044\u3063\u305f\u51e6\u7406\u3092\u4e00\u62ec\u3057\u3066\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u59d4\u4efb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u3089\u3069\u3093\u306a\u306b\u7d20\u6674\u3089\u3057\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u4f8b\u3048\u3070\u4eca\u56de\u306fQueue\u306e\u7ba1\u7406\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f\u3084Queue\u306e\u4ed5\u7d44\u307f\u306a\u3069\u3001\u305d\u3046\u3044\u3063\u305f\u9762\u5012\u306a\u51e6\u7406\u306f\u3069\u3093\u3069\u3093\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u304f\u3079\u304d\u3068\u3053\u308d\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\u305d\u306e\u5148\u99c6\u3051\u3068\u3057\u3066\u51fa\u305fService Fabric\u3068\u305d\u306e\u4e3b\u8981\u306a\u6a5f\u80fd\u3067\u3042\u308bReliableCollection\u3001\u662f\u975e\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306f **\u30a4\u30de\u30c9\u30ad** \u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u72b6\u614b\u7ba1\u7406\u306e\u65b9\u6cd5\u3092\u8003\u3048\u307e\u3059\u3002\n\n\n\u5177\u4f53\u7684\u306b\u306f\n\n- \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3063\u3066\u30b5\u30fc\u30d3\u30b9\u304c\u5897\u3048\u3059\u304e\u308b\u3057\u3001\u30e6\u30fc\u30b6\u30fc\u306b\u5bfe\u3059\u308b\u72b6\u614b\u4fdd\u6301\u306e\u51e6\u7406\u306e\u6240\u5728\u304c\u4e0d\u660e\u77ad\u3060\u3057\u3001\u3069\u3046\u3084\u308c\u3070\u3044\u3044\u306e\uff1f\n- \u30af\u30e9\u30b9\u30bf\u306e\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3067\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u7ba1\u7406\u3059\u308b\u3068\u304d\u306b\u3001\u3069\u3046\u3084\u3063\u3066\u7ba1\u7406\u3059\u308b\u306e\uff1f\n- \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306f\u96e3\u3057\u305d\u3046\u3060\u3057\u3001\u30a4\u30de\u30c9\u30ad\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u3053\u3089\u8fba\u307e\u3067\u30e6\u30fc\u30b6\u30fc\u3092\u697d\u306b\u3057\u3066\u304f\u308c\u308b\u306e\u304b\uff1f\n\n\u306e\u3088\u3046\u306a\u7591\u554f\u306b\u7b54\u3048\u308b\u5185\u5bb9\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u304c\u63d0\u4f9b\u3057\u3066\u3044\u308b\u6700\u65b0\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3042\u308bService Fabric\u3067\u5b9f\u73fe\u3055\u308c\u3066\u3044\u308b\u7ba1\u7406\u65b9\u6cd5\u304b\u3089\u3001\u4eca\u5f8c\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u306f\u4f55\u3092\u3084\u3063\u3066\u304f\u308c\u308b\u306e\u304b\u3001\u4eca\u5f8c\u3055\u3089\u306b\u5e02\u5834\u306b\u767b\u5834\u3059\u308b\u3067\u3042\u308d\u3046\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u5411\u3051\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u3053\u307e\u3067\u30e6\u30fc\u30b6\u30fc\u306e\u4f53\u9a13\u3092\u5411\u4e0a\u3055\u305b\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u8003\u3048\u308b\u305f\u3081\u306e\u4e00\u52a9\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\n\u30de\u30a4\u30af\u30ed\u30bd\u30d5\u30c8\u306fService Fabric\u3068\u3044\u3046\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u306e\u305f\u3081\u306e\u30de\u30cd\u30fc\u30b8\u30c9\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u3053\u3067\u306f\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3044\u3066\u306f\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u3084\u72b6\u614b\u306e\u7ba1\u7406\u306f\u5f93\u6765\u578b\u306e\u30ad\u30e5\u30fc\u3084\u30c6\u30fc\u30d6\u30eb\u4ee5\u5916\u306b\u3001\u30ea\u30e9\u30a4\u30a2\u30d6\u30eb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u5f37\u529b\u306a\u65b9\u6cd5\u304c\u63a8\u5968\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4eca\u56de\u306fgithub\u3067\u3082\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3001WordCount\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304b\u3089\u3001Service Fabric\u3068\u3044\u3046**\u30a4\u30de\u30c9\u30ad**\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306f\u3069\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u3092\u3082\u3061\u3001\u3069\u306e\u3088\u3046\u306b\u8907\u6570\u306e\u30ce\u30fc\u30c9\u3067\u60c5\u5831\u3092\u3084\u308a\u53d6\u308a\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\n# \u305d\u3082\u305d\u3082Service Fabric\u3068\u306f\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/2c841813-aeaa-c569-4e61-be0c614240ae.png)\n\nService Fabric\u306f\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306b\u9069\u3057\u305f\u30b9\u30b1\u30fc\u30e9\u30d6\u30eb\u3067\u4fe1\u983c\u6027\u306e\u9ad8\u3044\u5206\u6563\u30b7\u30b9\u30c6\u30e0\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u3001\u4ee5\u4e0b\u306e\u7279\u5fb4\u3092\u6301\u3061\u307e\u3059\u3002\n\n- \u9ad8\u3044\u30b9\u30b1\u30fc\u30e9\u30d3\u30ea\u30c6\u30a3\n- \u9ad8\u3044\u4fe1\u983c\u6027\n- \u5bb9\u6613\u306a\u7ba1\u7406\n\n\u307e\u305f\u3001Azure Service Fabric\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\u3000(\uff1d\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u5b9f\u73fe\u3067\u304d\u308b\u3053\u3068\uff09\u306f\u4ee5\u4e0b\u306e\u69d8\u306a\u3053\u3068\u3067\u3059\u3002\n\n- \u958b\u767a\u8005\u304c\u30a4\u30f3\u30d5\u30e9\u30b9\u30c8\u30e9\u30af\u30c1\u30e3\u306e\u7ba1\u7406\u4f5c\u696d\u304b\u3089\u89e3\u653e\u3055\u308c\u308b\n- \u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u4f7f\u7528\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u306e\u7c21\u7d20\u5316\u304c\u5b9f\u73fe\u3067\u304d\u308b\n- \u5206\u5272\u7d71\u6cbb\u304c\u53ef\u80fd\uff08\u975e\u30e2\u30ce\u30ea\u30b7\u30c3\u30af\u3067\u3001\u8907\u6570\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u30a2\u30d7\u30ea\u4f5c\u6210\uff09\n- \u9867\u5ba2\u306b\u4fa1\u5024\u3092\u63d0\u4f9b\u3059\u308b\u6a5f\u80fd\u958b\u767a\u306b\u5c02\u5ff5\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\n\n\n\u3067\u306f\u3055\u3063\u305d\u304f\u306bWordCount\u306e\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u30ea\u30fc\u30c7\u30a3\u30f3\u30b0\u304b\u3089\u3001\u305d\u306e\u5b9f\u614b\u306b\u8feb\u3063\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n# \u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b5\u30f3\u30d7\u30eb\u304c\u3084\u308a\u305f\u3044\u3053\u3068\n\u4eca\u56de\u306f\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001\u4ee5\u4e0b\u304b\u3089\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u624b\u5143\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9/\u30af\u30ed\u30fc\u30f3\u3057\u307e\u3057\u3087\u3046\u3002\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/a7d01bcf-6f15-92ef-69e1-44cdf6514e49.png)\n\nhttps://github.com/Azure-Samples/service-fabric-dotnet-getting-started\n\n\u4eca\u56de\u8a66\u3059\u306e\u306f\u300cservice-fabric-dotnet-getting-started/Services/WordCount/\u300d\u306e\u30d1\u30b9\u306b\u3042\u308b\u300cWordCount.sln\u300d\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fzip\u5f62\u5f0f\u306b\u306a\u3063\u3066\u3044\u308b\u30d5\u30a9\u30eb\u30c0\u3092\u3053\u306e\u307e\u307e\u89e3\u51cd\u3057\u3066VS\u3067\u30d3\u30eb\u30c9\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u300cservice-fabric-dotnet-getting-started\u300d\u3068\u3044\u3046\u540d\u524d\u304c\u9577\u3059\u304e\u3066\u30a8\u30e9\u30fc\u3092\u5410\u304f\u306e\u3067\u3001\u300csf\u300d\u306a\u3069\u3068\u30d5\u30a9\u30eb\u30c0\u306e\u540d\u524d\u3092\u30ea\u30cd\u30fc\u30e0\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/380e77e0-c828-8a86-4fec-60ea202c9fdd.png)\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u3069\u3093\u306a\u30b5\u30f3\u30d7\u30eb\u304b\u306fgithub\u306eREADME.md\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n\n> WordCount provides an introduction to using reliable collections and to partitioning stateful services. A client-side JavaScript function generates random five-character strings, which are then sent to the application via an ASP.NET WebAPI to be counted. The stateless web service resolves the endpoint for the stateful service's partition based on the first character of the string. The stateful service maintains a backlog of words to count in a ReliableQueue and then keeps track of their count in a ReliableDictionary. The total count, plus a per-partition count, are shown in the web UI at http://<clusteraddress>:8081/WordCount/.\n\n\n\u3053\u308c\u3092\u610f\u8a33\u3057\u3066\u3082\u3001\u305f\u3076\u3093\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u969b\u306b\u89e6\u3063\u3066\u307f\u306a\u3044\u3068\u4f55\u3092\u610f\u5473\u3059\u308b\u304b\u5206\u304b\u3089\u306a\u3044\u8aac\u660e\u306a\u306e\u3067\u3001\u88dc\u8db3\u3057\u306a\u304c\u3089\u8a33\u3059\u3068\u4ee5\u4e0b\u3067\u3059\u3002\n\n\n> WordCount\u306f\u30ea\u30e9\u30a4\u30a2\u30d6\u30eb\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5229\u7528\u3068\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u304a\u3051\u308b\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30cb\u30f3\u30b0\u3092\u7d39\u4ecb\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u306fJavaScrip\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u304b\u3089\u6210\u308b5\u6587\u5b57\u306e\u6587\u5b57\u5217\u30920.2\u79d2\u304a\u304d\u306b\u751f\u6210\u3057\u30d5\u30e9\u30c3\u30b7\u30e5\u306e\u3088\u3046\u306bWEB\u30b5\u30a4\u30c8\u306b\u8868\u793a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u753b\u9762\u3092\u898b\u308b\u30681-3(a-c), 4-6(d-f), 7-9(g-i)\u3068\u3044\u3046\u3088\u3046\u306b\u3001\u5148\u307b\u3069\u751f\u6210\u3055\u308c\u305f\u6587\u5b57\u5217\u306e\u982d\u6587\u5b57\u306b\u5bfe\u5fdc\u3057\u3066\u3001\u305d\u308c\u305e\u308c\u306e\u982d\u6587\u5b57\u304b\u3089\u59cb\u307e\u308b\u30ef\u30fc\u30c9\u304c\u4f55\u56de\u51fa\u73fe\u3057\u305f\u306e\u304b\u3001\u7bc4\u56f2\uff08\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u5225\uff09\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u898b\u3048\u308b\u306f\u305a\u3067\u3059\u3002\n\u305d\u306e\u300c\u4f55\u56de\u753b\u9762\u306b\u6587\u5b57\u304c\u73fe\u308c\u305f\u304b\u300d\u3068\u3044\u3046\u30ab\u30a6\u30f3\u30c8\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306b\u3001\u6587\u5b57\u5217\u306a\u3069\u306e\u60c5\u5831\u306fASP.NET\u306eWebAPI\u3092\u7d4c\u7531\u3057\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3078\u9001\u3089\u308c\u307e\u3059\u3002\n>\u4e00\u65b9\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306eWEB\u30b5\u30fc\u30d3\u30b9\u306f\u9001\u3089\u308c\u3066\u304d\u305f\u6587\u5b57\u5217\u306e\u982d\u6587\u5b57\u304b\u3089\u3001\u3069\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u51e6\u7406\u3092\u6295\u3052\u308b\u306e\u304b\u3092\u5224\u5225\u3057\u3001\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u306e\u89e3\u6c7a\u3092\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306f\u30ef\u30fc\u30c9\u306e\u51fa\u73fe\u56de\u6570\u306e\u30ab\u30a6\u30f3\u30c8\u3092ReliabuleQueue\u3092\u7528\u3044\u3066\u51e6\u7406\u3092\u9069\u5207\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u3001ReliableDictionary\u3092\u7528\u3044\u3066\u305d\u308c\u3089\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u30c8\u30fc\u30bf\u30eb\u306e\u51fa\u73fe\u56de\u6570\u3068\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51fa\u73fe\u56de\u6570\u3092http://<clusteraddress>:8081/WordCount/\u3000\u306b\u8fd4\u3057\u307e\u3059\u3002\n\n\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\u30a2\u30d7\u30ea\u306eUI\u306f\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/57680ec4-5cbb-90c5-1ed9-0ae981097851.png)\n\n\u3068\u3044\u3063\u3066\u3082\u5177\u4f53\u7684\u306b\u3069\u306e\u3088\u3046\u306b\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3069\u306e\u3088\u3046\u306b\u3084\u308a\u53d6\u308a\u304c\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n# \u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u3084\u308a\u3068\u308a\u306e\u56f3\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u8aad\u3093\u3067\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u56f3\u3092\u66f8\u304d\u8d77\u3053\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/a13bfc68-db4f-9a5e-c7c6-a6a21a1c7a06.png)\n\n\n\u305d\u308c\u3067\u306f\u30d5\u30ed\u30fc\u3092\u958b\u8a2d\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n##  \u57fa\u672c\u7684\u306a\u51e6\u7406\n### \u2460\u2461 \u4e00\u756a\u6700\u521d\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30af\u30bb\u30b9\nHTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u308a\u307e\u3059\u3002ASP.NET\u306ewwwroot\u306e\u4e2d\u306b\u3042\u308bindex.html\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306fjavascript\u306e\u51e6\u7406\u304c\u66f8\u304b\u308c\u305f\u3060\u3051\u306e\u771f\u3063\u767d\u306a\u30d5\u30a1\u30a4\u30eb\u3067\u3059\u3002\n\n### \u2462 js\u304c\u767a\u706b\u3057\u59cb\u3081\u307e\u3059\u3002\njs\u306f\u5177\u4f53\u7684\u306b\u4ee5\u4e0b\u306e\u95a2\u6570\u3067200\u30df\u30ea\u79d2\u304a\u304d\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u30ef\u30fc\u30c9\u3092\u4f5c\u3063\u3066WebAPI\u306b\u9001\u308b\u51e6\u7406\u3001350\u30df\u30ea\u79d2\u304a\u304d\u306bWebAPI\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u73fe\u5728\u306e\u51fa\u73fe\u56de\u6570\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```javascript:Index.html\n        $(function () {\n            var CountTask = setInterval(function () { Count(); }, 350);\n            var AddWordTask = setInterval(function () { SendWords(); }, 200);\n        });\n\n        function SendWords()\n        {\n            $.ajax({\n                url: serviceUrl + '/api/AddWord/' + randomWord(),\n                method: 'POST'\n            })\n           .done(function (wordResult) {\n               $('#sendResult').html(wordResult);\n           });\n        }\n\n        function Count()\n        {\n            $.ajax({\n                url: serviceUrl + '/api/Count?c=' + Math.random(),\n                dataType: 'text',\n                method: 'GET'\n            })\n           .done(function (countResult) {\n                $('#count').html(countResult)\n           });\n        }\n\n        function randomWord()\n        {\n            var text = \"\";\n            var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\n\n            for( var i=0; i < 5; i++ )\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n            return text;   \n```\n## \u30ef\u30fc\u30c9\u51fa\u73fe\u56de\u6570\u306e\u51e6\u7406\n### \u2463-1,\u2463-2  Count\u95a2\u6570\u3067\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u2192\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u554f\u3044\u5408\u308f\u305b\n\u3053\u306e\u51e6\u7406\u3067\u306f\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u3067\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u306aASP.NET\u306eWordCountWebService\u3068\u3044\u3046WebAPI\u304b\u3089\u3001\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308bWprdCountService\u306b\u554f\u3044\u5408\u308f\u305b\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n```serviceUri = new Uri(FabricRuntime.GetActivationContext().ApplicationName + \"/WordCountService\"); ```\n\u306e\u90e8\u5206\u3067URI\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u306d\u3002\n\u305d\u3057\u3066\n```HttpResponseMessage response = await client.HttpClient.GetAsync(new Uri(client.Url, \"Count\"));```\n\u306e\u90e8\u5206\u3067\u306fWordCountWebService\u5074\u306eCount()\u5185\u3067\u3001WordCountService\u306eAPI\u3067\u3042\u308bCount\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u6642\u70b9\u3067\u306fReliableCollection\u306f\u95a2\u4fc2\u306a\u3044\u3067\u3059\u3002ReliableCollection\u3092\u64cd\u4f5c\u3057\u3066\u3044\u308b\u306e\u306fWordCountService\u306e\u65b9\u306a\u306e\u3067\u3001\u73fe\u5728\u306e\u6642\u70b9\u3067WordCountWebService\u306f\u300c\u30ef\u30fc\u30c9\u3092\u6301\u3063\u3066\u304d\u305f\u304b\u3089\u63a5\u7d9a\u3057\u3066\u9001\u308b\u306d\u3002\u300d\u3068\u3044\u3046\u51e6\u7406\u3092\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n```csharp:DefaultController.cs(WordCountWebService)\n    static DefaultController()\n        {\n            serviceUri = new Uri(FabricRuntime.GetActivationContext().ApplicationName + \"/WordCountService\");\n\n            backoffQueryDelay = TimeSpan.FromSeconds(3);\n\n            fabricClient = new FabricClient();\n\n            communicationFactory = new HttpCommunicationClientFactory(new ServicePartitionResolver(() => fabricClient));\n        }\n...\n\n        [HttpGet]\n        [Route(\"Count\")]\n        public async Task<HttpResponseMessage> Count()\n        {\n            // For each partition client, keep track of partition information and the number of words\n            ConcurrentDictionary<Int64RangePartitionInformation, long> totals = new ConcurrentDictionary<Int64RangePartitionInformation, long>();\n            IList<Task> tasks = new List<Task>();\n\n            foreach (Int64RangePartitionInformation partition in await this.GetServicePartitionKeysAsync())\n            {\n                try\n                {\n                    ServicePartitionClient<HttpCommunicationClient> partitionClient\n                        = new ServicePartitionClient<HttpCommunicationClient>(communicationFactory, serviceUri, new ServicePartitionKey(partition.LowKey));\n\n                    await partitionClient.InvokeWithRetryAsync(\n                        async (client) =>\n                        {\n                            HttpResponseMessage response = await client.HttpClient.GetAsync(new Uri(client.Url, \"Count\"));\n                            string content = await response.Content.ReadAsStringAsync();\n                            totals[partition] = Int64.Parse(content.Trim());\n                        });\n                }\n                catch (Exception ex)\n                {\n                    // Sample code: print exception\n                    ServiceEventSource.Current.OperationFailed(ex.Message, \"Count - run web request\");\n                }\n            }\n\n            StringBuilder sb = new StringBuilder();\n            sb.Append(\"<h1> Total:\");\n            sb.Append(totals.Aggregate<KeyValuePair<Int64RangePartitionInformation, long>, long>(0, (total, next) => next.Value + total));\n            sb.Append(\"</h1>\");\n            sb.Append(\"<table><tr><td>Partition ID</td><td>Key Range</td><td>Total</td></tr>\");\n            foreach (KeyValuePair<Int64RangePartitionInformation, long> partitionData in totals.OrderBy(partitionData => partitionData.Key.LowKey))\n            {\n                sb.Append(\"<tr><td>\");\n                sb.Append(partitionData.Key.Id);\n                sb.Append(\"</td><td>\");\n                sb.AppendFormat(\"{0} - {1}\", partitionData.Key.LowKey, partitionData.Key.HighKey);\n                sb.Append(\"</td><td>\");\n                sb.Append(partitionData.Value);\n                sb.Append(\"</td></tr>\");\n            }\n\n            sb.Append(\"</table>\");\n\n            return new HttpResponseMessage()\n            {\n                Content = new StringContent(sb.ToString(), Encoding.UTF8, \"text/html\")\n            };\n        }\n\n\n\n\n        private async Task<IList<Int64RangePartitionInformation>> GetServicePartitionKeysAsync()\n        {\n            for (int i = 0; i < MaxQueryRetryCount; i++)\n            {\n                try\n                {\n                    // Get the list of partitions up and running in the service.\n                    ServicePartitionList partitionList = await fabricClient.QueryManager.GetPartitionListAsync(serviceUri);\n\n                    // For each partition, build a service partition client used to resolve the low key served by the partition.\n                    IList<Int64RangePartitionInformation> partitionKeys = new List<Int64RangePartitionInformation>(partitionList.Count);\n                    foreach (Partition partition in partitionList)\n                    {\n                        Int64RangePartitionInformation partitionInfo = partition.PartitionInformation as Int64RangePartitionInformation;\n                        if (partitionInfo == null)\n                        {\n                            throw new InvalidOperationException(\n                                string.Format(\n                                    \"The service {0} should have a uniform Int64 partition. Instead: {1}\",\n                                    serviceUri.ToString(),\n                                    partition.PartitionInformation.Kind));\n                        }\n\n                        partitionKeys.Add(partitionInfo);\n                    }\n\n                    return partitionKeys;\n                }\n                catch (FabricTransientException ex)\n                {\n                    ServiceEventSource.Current.OperationFailed(ex.Message, \"create representative partition clients\");\n                    if (i == MaxQueryRetryCount - 1)\n                    {\n                        throw;\n                    }\n                }\n\n                await Task.Delay(backoffQueryDelay);\n            }\n\n            throw new TimeoutException(\"Retry timeout is exhausted and creating representative partition clients wasn't successful\");\n        }\n\n```\n\n### \u2463-3,\u2463-4 \u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u30ab\u30a6\u30f3\u30c8\u51e6\u7406\u3092\u3059\u308b\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u898b\u901a\u3057\u304c\u3060\u3044\u3076\u826f\u3044\u3067\u3059\u3002\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306eWordCountService\u3067\u306f\u30ef\u30fc\u30c9\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u3066\u3044\u308bReliableDictionary\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u60c5\u5831\u3092\u53d6\u3063\u3066\u304d\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n```csharp:DefaultController.cs(WordCountService)\n        [HttpGet]\n        [Route(\"Count\")]\n        public async Task<IHttpActionResult> Count()\n        {\n            IReliableDictionary<string, long> statsDictionary = await this.stateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"statsDictionary\");\n\n            using (ITransaction tx = this.stateManager.CreateTransaction())\n            {\n                ConditionalValue<long> result = await statsDictionary.TryGetValueAsync(tx, \"Number of Words Processed\");\n\n                if (result.HasValue)\n                {\n                    return this.Ok(result.Value);\n                }\n            }\n\n            return this.Ok(0);\n        }\n```\n\n\n##  \u30ef\u30fc\u30c9\u767b\u9332\u306e\u51e6\u7406\n\n### \u2464-1,\u2464-2  AddWord\u95a2\u6570\u3067\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u2192\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306b\u30ef\u30fc\u30c9\u3092\u308f\u305f\u3059\n\n\u30ef\u30fc\u30c9\u30ab\u30a6\u30f3\u30c8\u306e\u51e6\u7406\u306b\u6bd4\u3079\u308b\u3068\u5e7e\u5206\u304b\u898b\u3084\u3059\u3044\u3067\u3059\u3002\n```async (client) => { await client.HttpClient.PutAsync(new Uri(client.Url, \"AddWord/\" + word), new StringContent(String.Empty)); });```\n\u3053\u3061\u3089\u3082\u3053\u306e\u6587\u5b57\u5217\u304b\u3089WordCountWebService\u304b\u3089WordCountService\u306eAddWord/{word}\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001\u3053\u3061\u3089\u306f\u8907\u96d1\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3088\u308a\u306f\u305f\u3060\u305f\u3093\u306b\u30ad\u30e5\u30fc\u306b\u30ef\u30fc\u30c9\u3092\u6295\u3052\u8fbc\u3080\u3060\u3051\u306e\u7c21\u5358\u306a\u51e6\u7406\u3067\u3059\u3002\n\n```csharp:DefaultController.cs(WordCountWebService)\n\n        [HttpPost]\n        [Route(\"AddWord/{word}\")]\n        public async Task<HttpResponseMessage> AddWord(string word)\n        {\n            // Determine the partition key that should handle the request\n            long partitionKey = GetPartitionKey(word);\n\n            ServicePartitionClient<HttpCommunicationClient> partitionClient\n                = new ServicePartitionClient<HttpCommunicationClient>(communicationFactory, serviceUri, new ServicePartitionKey(partitionKey));\n\n            await\n                partitionClient.InvokeWithRetryAsync(\n                    async (client) => { await client.HttpClient.PutAsync(new Uri(client.Url, \"AddWord/\" + word), new StringContent(String.Empty)); });\n\n            return new HttpResponseMessage()\n            {\n                Content = new StringContent(\n                    String.Format(\"<h1>{0}</h1> added to partition with key <h2>{1}</h2>\", word, partitionKey),\n                    Encoding.UTF8,\n                    \"text/html\")\n            };\n        }\n\n...\n        private static long GetPartitionKey(string word)\n        {\n            return ((long) char.ToUpper(word[0])) - 64;\n        }\n\n```\n\n\n### \u2464-3,\u2464-4  AddWord\u95a2\u6570\u3067\u30ad\u30e5\u30fc\u306b\u30ef\u30fc\u30c9\u3092\u653e\u308a\u8fbc\u3080\n\u3053\u3061\u3089\u306e\u51e6\u7406\u3067\u306fReliableQueue\u306b\u30ef\u30fc\u30c9\u3092\u30a8\u30f3\u30ad\u30e5\u30fc\u3057\u3066\u3044\u308b\u51e6\u7406\u3067\u3042\u308b\u3068\u308f\u304b\u308a\u307e\u3059\u3002\n\n```csharp:DefaultController.cs(WordCountService)\n        [HttpPut]\n        [Route(\"AddWord/{word}\")]\n        public async Task<IHttpActionResult> AddWord(string word)\n        {\n            IReliableQueue<string> queue = await this.stateManager.GetOrAddAsync<IReliableQueue<string>>(\"inputQueue\");\n\n            using (ITransaction tx = this.stateManager.CreateTransaction())\n            {\n                await queue.EnqueueAsync(tx, word);\n\n                await tx.CommitAsync();\n            }\n\n            return this.Ok();\n        }\n```\n\n\u3053\u308c\u3067WordCount\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406\u3001Word\u3092Add\u3059\u308b\u51e6\u7406\u306e\u6d41\u308c\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001\u809d\u5fc3\u306aReliableQueue\u304b\u3089\u30c7\u30ad\u30e5\u30fc\u3057\u3066ReliableDictionary\u306b\u79fb\u3059\u51e6\u7406\u306f\u3069\u3053\u3067\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\u305d\u306e\u51e6\u7406\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u306f WordCountService\u306eWordCountService.cs\u3067\u3059\u3002\n\n## ReliableQueue \u2192 ReliableDictionary\nwhile(true)\u3068\u306a\u3063\u3066\u3044\u3066\u308f\u304b\u308b\u901a\u308a\u3001\u51e6\u7406\u3092\u305a\u3063\u3068\u7d9a\u3051\u3066\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\nQueue\u3092\u898b\u3066\u3001\u30c7\u30fc\u30bf\u304c\u5b58\u5728\u3057\u305f\u3089\u30c7\u30ad\u30e5\u30fc\u3057\u3066ReliableDictionary\u306b\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n```csharp:WordCountService.cs\n  protected override async Task RunAsync(CancellationToken cancellationToken)\n        {\n            ServiceEventSource.Current.RunAsyncInvoked(ServiceEventSourceName);\n            \n\n            IReliableQueue<string> inputQueue = await this.StateManager.GetOrAddAsync<IReliableQueue<string>>(\"inputQueue\");\n            IReliableDictionary<string, long> wordCountDictionary =\n                await this.StateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"wordCountDictionary\");\n            IReliableDictionary<string, long> statsDictionary = await this.StateManager.GetOrAddAsync<IReliableDictionary<string, long>>(\"statsDictionary\");\n\n\n            while (true)\n            {\n                cancellationToken.ThrowIfCancellationRequested();\n\n                try\n                {\n                    using (ITransaction tx = this.StateManager.CreateTransaction())\n                    {\n                        ConditionalValue<string> dequeuReply = await inputQueue.TryDequeueAsync(tx);\n\n                        if (dequeuReply.HasValue)\n                        {\n                            string word = dequeuReply.Value;\n\n                            long count = await wordCountDictionary.AddOrUpdateAsync(\n                                tx,\n                                word,\n                                1,\n                                (key, oldValue) => oldValue + 1);\n\n                            long numberOfProcessedWords = await statsDictionary.AddOrUpdateAsync(\n                                tx,\n                                \"Number of Words Processed\",\n                                1,\n                                (key, oldValue) => oldValue + 1);\n\n                            long queueLength = await inputQueue.GetCountAsync(tx);\n\n                            await tx.CommitAsync();\n\n                            ServiceEventSource.Current.RunAsyncStatus(\n                                this.Partition.PartitionInfo.Id,\n                                numberOfProcessedWords,\n                                queueLength,\n                                word,\n                                count);\n                        }\n                    }\n\n                    await Task.Delay(TimeSpan.FromMilliseconds(100), cancellationToken);\n                }\n                catch (TimeoutException)\n                {\n                    //Service Fabric uses timeouts on collection operations to prevent deadlocks.\n                    //If this exception is thrown, it means that this transaction was waiting the default\n                    //amount of time (4 seconds) but was unable to acquire the lock. In this case we simply\n                    //retry after a random backoff interval. You can also control the timeout via a parameter\n                    //on the collection operation.\n                    Thread.Sleep(TimeSpan.FromSeconds(new Random().Next(100, 300)));\n\n                    continue;\n                }\n                catch (Exception exception)\n                {\n                    //For sample code only: simply trace the exception.\n                    ServiceEventSource.Current.MessageEvent(exception.ToString());\n                }\n            }\n```\n\n\u3053\u308c\u3067\u5168\u4f53\u306e\u30d5\u30ed\u30fc\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u3002Reliable\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u3060\u3044\u3076\u7c21\u5358\u306b\u9ad8\u4fe1\u983c\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u304c\u904b\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n# \u30ad\u30e5\u30fc vs ReliableCollection \n\n\u300c\u30ad\u30e5\u30fc vs ReliableCollection\u300d \u3068\u306f\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u3001ReliableCollection\u306e\u4e2d\u306b\u306f\u3082\u3061\u308d\u3093\u30ad\u30e5\u30fc\u306e\u4ed5\u7d44\u307f\u3067\u3042\u308bReliableQueue\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u3044\u3046\u30ad\u30e5\u30fc\u306f\u5f93\u6765\u578b\u306e\u30ad\u30e5\u30fc\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u305d\u3082\u305d\u3082\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306b\u30ad\u30e5\u30fc\u304c\u5fc5\u8981\u306a\u7406\u7531\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30b5\u30fc\u30d3\u30b9\u3067\u3042\u308c\u3070\u72b6\u614b\u3092\u4fdd\u6301\u3057\u306a\u3044\u306e\u3067\u3001\u30ad\u30e5\u30fc\u3092\u7528\u610f\u3057\u306a\u3051\u308c\u3070\u6b63\u3057\u304f\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u304c\u51fa\u6765\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u4e00\u898b\u3001\u308f\u3056\u308f\u3056\u30ad\u30e5\u30fc\u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306a\u3069\u3092\u7ba1\u7406\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u3088\u3046\u306b\u3082\u898b\u3048\u307e\u3059\u3002\n\n\n## **\u3067\u306f\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u306f\uff1f**\n\n\u300c\u30b5\u30fc\u30d3\u30b9\u306e\u7d99\u7d9a\u300d\u3068\u3044\u3046\u89b3\u70b9\u3067\u8003\u3048\u308b\u3068\u7b54\u3048\u306f\u898b\u3048\u3066\u304d\u307e\u3059\u3002\n\u30b5\u30fc\u30d0\u30fc\u304c\u30b9\u30c6\u30fc\u30bf\u30b9\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u3092\u6301\u3063\u3066\u3044\u305f\u3089\u3001\u30b5\u30fc\u30d0\u30fc\u304c\u6b62\u307e\u3063\u305f\u3068\u304d\u306b\u5b58\u5728\u3057\u305f\u60c5\u5831\u306f\u3069\u3053\u304b\u306b\u884c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u30b5\u30fc\u30d0\u30fc\u304c\u6b62\u307e\u308b\u3053\u3068\u306f\u6c17\u306b\u3057\u307e\u305b\u3093\u3002\u6c17\u306b\u3059\u308b\u306e\u306f\u300c\u30b5\u30fc\u30d3\u30b9\u304c\u6b62\u307e\u308b\u3053\u3068\u300d\u3067\u3059\u3002\n\u300c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u3001\u3061\u3083\u3093\u3068\u4e07\u304c\u4e00\u306e\u4e8b\u614b\u306b\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u304b\uff1f\u300d\u3068\u8003\u3048\u305f\u3068\u304d\u306b\u30b5\u30fc\u30d0\u30fc\u304c\u4fdd\u6301\u3057\u3066\u3044\u308b\u72b6\u614b\u3092\u30d7\u30e9\u30a4\u30de\u30ea\u3068\u3057\u3066\u8003\u3048\u308b\u3068\u5c11\u3057\u4e0d\u5b89\u304c\u6b8b\u308b\u3067\u3057\u3087\u3046\u3002\u3082\u3057\u3082\u305d\u308c\u304c\u30df\u30c3\u30b7\u30e7\u30f3\u30af\u30ea\u30c6\u30a3\u30ab\u30eb\u306a\u30b5\u30fc\u30d3\u30b9\u3060\u3068\u306a\u304a\u3055\u3089\u3067\u3059\u3002\u305d\u3046\u3059\u308b\u3068\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u72b6\u614b\u3092\u4fdd\u6301\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u3082\u3001\u30ad\u30e5\u30fc\u306b\u3042\u308b\u30c7\u30fc\u30bf\u3092\u30d7\u30e9\u30a4\u30de\u30ea\u3068\u3068\u3089\u3048\u3066\u904b\u7528\u3059\u308b\u65b9\u6cd5\u3082\u898b\u3048\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u3068\u30ad\u30e5\u30fc\u306e2\u3064\u306e\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3092\u304b\u307e\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u30af\u30e9\u30a6\u30c9\u3060\u3068\u7279\u306b\u305d\u3046\u306a\u306e\u3067\u3059\u304c\u3001\u4f8b\u3048\u3070\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u306b\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u306a\u3069\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u305f\u3068\u3057\u305f\u3089\u3001\u305d\u308c\u306f\u30d6\u30e9\u30c3\u30af\u30dc\u30c3\u30af\u30b9\u3067\u898b\u3048\u306a\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n\n## **\u3067\u306f\u30ad\u30e5\u30fc\u306f\u7d50\u5c40\u5916\u3067\u69cb\u3048\u305f\u65b9\u304c\u826f\u3044\u306e\u304b\uff1f**\nService Fabric\u3067\u306f\u305d\u308c\u306f\u305a\u3070\u308a\u300c\u5916\u3067\u69cb\u3048\u308b\u5fc5\u8981\u306f\u306a\u3044\u300d\u3068\u8a00\u3048\u307e\u3059\u3002\nReliable\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u306a\u305cReliable\u306a\u306e\u304b\u3001\u3068\u3044\u3046\u8a71\u3092\u8003\u3048\u308b\u3068\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531\u304c\u898b\u3048\u3066\u304d\u307e\u3059\u3002\nService Fabric\u3067\u306e\u5178\u578b\u7684\u306a\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb/\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\u30b5\u30fc\u30d3\u30b9\u306e\u5b9f\u88c5\u4f8b\u304c\u4e0b\u306e\u56f3\u3067\u3059\uff08\u5de6\u304c\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u3001\u53f3\u304c\u30b9\u30c6\u30fc\u30c8\u30ec\u30b9\uff09\u3002\n\u78ba\u304b\u306b\u5de6\u306e\u30b9\u30c6\u30fc\u30c8\u30d5\u30eb\u30b5\u30fc\u30d3\u30b9\u306e\u56f3\u3092\u898b\u308b\u3068\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u306b\u95a2\u3057\u3066\u306f\u5c11\u3057\u983c\u308a\u306a\u3044\u3088\u3046\u306b\u3082\u611f\u3058\u307e\u3059\u304c\u3001ReliableCollection\u304c\u3042\u308b\u9650\u308a\u305d\u3046\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/5848ddeb-658c-9e67-557f-902703eb2955.png)\n\n\n\n\u4e0b\u306e\u56f3\u306fService Fabric\u306e\u30af\u30e9\u30b9\u30bf\u30fc\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc\u3067\u3059\u3002\n\u4e0a\u306e\u6c34\u8272\u306e\u70b9\u7dda\u3067\u56f2\u308f\u308c\u305f\u90e8\u5206\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5207\u308a\u53e3\u3067\u898b\u305f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4fdd\u6301\u3059\u308bReliableCollection\u3001\n\u4e0b\u306e\u30aa\u30ec\u30f3\u30b8\u8272\u306e\u90e8\u5206\u304c\u5404Node\u306b\u5206\u6563\u3055\u308c\u3066\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u305fReliableCollection\u3067\u3059\u3002\n1\u3064\u306eReliableCollection\u304cPrimary x 1, ActiveSecondary x 2\u306e\u69cb\u6210\u3067\u5404Node\u306b\u5206\u6563\u3055\u308c\u3001\u30ce\u30fc\u30c9\u304c1\u3064\u843d\u3061\u3066\u3082\u7c21\u5358\u306b\u5fa9\u65e7\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u5834\u5408\u3001\u4f8b\u3048\u3070\u7279\u5b9a\u306e\u30c7\u30fc\u30bf(ReliableCollection)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066Read\u3057\u305f\u3044\u3068\u304d\u306b\u3001Primary\u306eReliableCollection\u3092\u4fdd\u6301\u3059\u308b\u30ce\u30fc\u30c9\u306b\u30a2\u30af\u30bb\u30b9\u304c\u5272\u308a\u632f\u3089\u308c\u3001\u30ce\u30fc\u30c9\u4e0a\u306b\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u540c\u30de\u30b7\u30f3\u5185\u306ePrimaryReliableCollection\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u8aad\u307f\u8fbc\u307f\u306f\u9ad8\u901f\u3067\u3059\u3002\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/2f51c2a2-ecbd-482e-7db1-acf2166f1470.png)\n\n\u3053\u308c\u306b\u95a2\u3057\u3066\u306f[\u300cService Fabric Reliable Services \u306e\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u5206\u5272\u300d](https://azure.microsoft.com/ja-jp/documentation/articles/service-fabric-concepts-partitioning/)\u304c\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u8aad\u3093\u3067\u307f\u308b\u3068\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3069\u306e\u3088\u3046\u306bReliableCollection\u304c\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u308b\u306e\u304b\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n![image.png](https://qiita-image-store.s3.amazonaws.com/0/131046/699329a0-d98e-f64d-9f6a-df3a086b44da.png)\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001ReliableCollection\u3092\u4f7f\u3063\u3066\u3044\u308b\u9650\u308a\u306f\u30ad\u30e5\u30fc\u3092\u4f7f\u3046\u5fc5\u8981\u306f\u3042\u307e\u308a\u306a\u3044\u3067\u3059\u3002\nReliableCollection\u306e\u5834\u5408\u3001\u8aad\u307f\u53d6\u308a\u306f\u540c\u3058\u30ce\u30fc\u30c9\u5185\u3067\u6700\u901f\u306b\u884c\u3048\u3066\u3001\u30ce\u30fc\u30c9\u9593\u306e\u66f8\u304d\u8fbc\u307f\u3082\u9ad8\u901f\u5316\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u3067\u30ad\u30e5\u30fc\u306b\u884c\u3063\u3066\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u60c5\u5831\u304c\u6b63\u3057\u3044\u306e\u304b\u306a\u3069\u306e\u691c\u8a3c\u3092\u3057\u3066\u3044\u305f\u5834\u5408\u3001\u6642\u9593\u3082\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u672c\u672b\u8ee2\u5012\u3067\u3042\u308b\u3068\u3082\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\n\u3082\u3063\u3068\u3082\u3082\u3001\u8907\u96d1\u306a\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u3084\u3001\u3055\u3089\u306a\u308b\u4fe1\u983c\u6027\u304c\u6c42\u3081\u3089\u308c\u308b\u5834\u5408\u306b\u306f\u4e00\u6982\u306b\u8a00\u3048\u306a\u3044\u30b1\u30fc\u30b9\u3082\u3042\u308b\u306e\u3067\u3001\n\u3069\u3061\u3089\u304b\u3068\u3044\u3046\u3068\u300c\u305b\u3063\u304b\u304fReliableCollection\u304c\u3042\u308b\u306e\u3060\u304b\u3089\u3001\u305d\u308c\u3092\u4f7f\u3048\u3070\u3001\u591a\u304f\u306e\u30b1\u30fc\u30b9\u3067\u6e80\u8db3\u306e\u7d50\u679c\u304c\u5f97\u3089\u308c\u307e\u3059\u300d\u3068\u3044\u3046\u611f\u3058\u306b\u3068\u3089\u3048\u3066\u9802\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n\n# ReliableCollection\u3068\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\n\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u3067\u306f\u30b5\u30fc\u30d3\u30b9\u304c\u5206\u5272\u3055\u308c\u3066\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u3042\u308a\u304b\u304c\u4e0d\u660e\u77ad\u306b\u306a\u3063\u305f\u308a\u3001\u7ba1\u7406\u304c\u5927\u5909\u306b\u306a\u3063\u305f\u308a\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30ce\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u3057\u305f\u6642\u3084\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u7d99\u7d9a\u306b\u7559\u610f\u3057\u305f\u3044\u3068\u304d\u3001ReliableCollection\u306f\u305d\u308c\u3089\u3092\u7ba1\u7406\u3059\u308b\u6b66\u5668\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u3082\u3061\u308d\u3093\u30bb\u30c3\u30b7\u30e7\u30f3\u7ba1\u7406\u4ee5\u5916\u306b\u3082\u5229\u7528\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u7279\u5b9a\u306e\u30d0\u30c3\u30c1\u51e6\u7406\u306e\u7d50\u679c\u3092\u3069\u3093\u3069\u3093ReliableDictionary\u306a\u3069\u306b\u5165\u308c\u3066\u3044\u304f\u3068\u540c\u6642\u306b\u3001\u305d\u308c\u3089\u306eReliableDictionary\u306e\u30c7\u30fc\u30bf\u306f\u8907\u6570\u53f0\u306e\u30ce\u30fc\u30c9\u306b\u30ec\u30d7\u30ea\u30b1\u30fc\u30c8\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u9014\u4e2d\u3067\u3082\u3057\u3082\u30ce\u30fc\u30c9\u304c\u30c0\u30a6\u30f3\u3057\u3066\u3082\u3001\u4ed6\u306e\u30ce\u30fc\u30c9\u304c\u300c\u51e6\u7406\u306e\u9014\u4e2d\u304b\u3089\u300d\u51e6\u7406\u3092\u518d\u958b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u3068\u3066\u3082\u96e3\u3057\u3044\u3067\u3059\u3002\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u3092\u5897\u3084\u3057\u3066\u8a00\u3063\u305f\u6319\u53e530\u500b\u306e\u30b5\u30fc\u30d3\u30b9/\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u767a\u751f\u3057\u305f\u3068\u3044\u3046\u8a71\u3082\u3042\u308b\u304f\u3089\u3044\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u9023\u643a\u306e\u30b3\u30fc\u30c9\u3084\u30ed\u30b8\u30c3\u30af\u306f\u3067\u304d\u308b\u9650\u308a\u7c21\u7565\u306b\u8a18\u8ff0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u3044\u3063\u305f\u3053\u3068\u3092\u4eba\u9593\u304c\u884c\u3046\u306e\u306f\u3068\u3066\u3082\u5927\u5909\u3067\u3001\u6700\u521d\u306e\u6bb5\u968e\u3067\u8155\u5229\u304d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u305d\u3046\u3044\u3063\u305f\u51e6\u7406\u3092\u4e00\u62ec\u3057\u3066\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u59d4\u4efb\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u305f\u3089\u3069\u3093\u306a\u306b\u7d20\u6674\u3089\u3057\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u4f8b\u3048\u3070\u4eca\u56de\u306fQueue\u306e\u7ba1\u7406\u306b\u30d5\u30a9\u30fc\u30ab\u30b9\u3055\u308c\u307e\u3057\u305f\u304c\u3001\u30ec\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4ed5\u7d44\u307f\u3084Queue\u306e\u4ed5\u7d44\u307f\u306a\u3069\u3001\u305d\u3046\u3044\u3063\u305f\u9762\u5012\u306a\u51e6\u7406\u306f\u3069\u3093\u3069\u3093\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u306b\u3088\u3063\u3066\u62bd\u8c61\u5316\u3055\u308c\u3066\u3044\u304f\u3079\u304d\u3068\u3053\u308d\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u305d\u306e\u5148\u99c6\u3051\u3068\u3057\u3066\u51fa\u305fService Fabric\u3068\u305d\u306e\u4e3b\u8981\u306a\u6a5f\u80fd\u3067\u3042\u308bReliableCollection\u3001\u662f\u975e\u4f53\u9a13\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n\n", "tags": ["Azure", ".NET", "C#", "\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9", "\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3"]}