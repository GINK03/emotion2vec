{"tags": ["Erlang"], "context": " More than 1 year has passed since last update.Erlang\u3067\u306f\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u540d:\u95a2\u6570\u540d(\u5f15\u6570, \u2026) \u3068\u66f8\u304f\u4ee3\u308f\u308a\u306b\u3001\u4efb\u610f\u306e\u30bf\u30d7\u30eb {\u30e2\u30b8\u30e5\u30fc\u30eb\u540d, \u4efb\u610f\u306e\u8981\u7d20, \u2026} \u3092\u4f7f\u3063\u3066\u3001{\u30e2\u30b8\u30e5\u30fc\u30eb\u540d, \u4efb\u610f\u306e\u8981\u7d20, \u2026}:\u95a2\u6570\u540d(\u5f15\u6570, \u2026) \u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u3092\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\uff08tuple module\uff09\u3068\u547c\u3076\u3002\n\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u95a2\u6570\u306b\u306f\u3001\u6700\u5f8c\u306e\u5f15\u6570\u306b\u305d\u306e\u30bf\u30d7\u30eb\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3002\n\u4f8b\uff1a\n\nmy_module.erl\n-module(my_module).\n-export([my_fun/3]).\n\nmy_fun(X, Y, Tup) ->\n  {X, Y, Tup}.\n\n\n\u5b9f\u884c\u7d50\u679c\n> {my_module, a, b}:my_fun(1, 2).\n{1,2,{my_module,a,b}}.\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3001\u5171\u901a\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\uff08API\uff09\u3092\u63d0\u4f9b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001\u305d\u306eAPI\u3092\u5b9f\u88c5\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5206\u96e2\u3057\u3066\u307f\u3088\u3046\u3002\n\nordmaps\uff1a\u6c4e\u7528\u7684\u306aOrdered Map\n\u3053\u3053\u3067\u306f\u3001\u4f8b\u3068\u3057\u3066\u3001\u8981\u7d20\u304c\u30ad\u30fc\u306e\u6607\u9806\u3067\u30bd\u30fc\u30c8\u3055\u308c\u305fmap\u3092\u63d0\u4f9b\u3059\u308b\u6c4e\u7528\u7684\u306aAPI ordmaps \u3092\u5b9a\u7fa9\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u305d\u306eAPI\u3092\u3001stdlib\u306e gb_trees \u3068\u3001Erlang/OTP 17\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u578b\u306e map \u306e\uff12\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\nordmaps \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u7528\u4f8b\n01: M0 = ordmaps:new(gb_tree),\n02: M1 = M0:add(b, 1),\n03: M2 = M1:add(a, 1),\n04: M3 = M2:update(b, 2),\n05: ?assertEqual({ok, 1}, M3:find(a)),\n06: ?assertEqual([a, b], M3:keys()),    %% \u30ad\u30fc\u304c\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n\n01\u884c\u306e\u3088\u3046\u306b\u3001ordmaps:new(gb_tree) \u3068\u3059\u308b\u3068\u3001gb_trees \u306b\u3088\u308b\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u308b\u3002\u307e\u305f\u3001ordmaps:new(map) \u3068\u3059\u308c\u3070\u3001map\u3092\u7528\u3044\u305f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u308b\u3002\n\u3069\u3061\u3089\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408\u3067\u3082\u3001\n\n\u547c\u3073\u51fa\u3057\u5074\u306e\u30b3\u30fc\u30c9\u306b\u4e00\u5207\u5909\u66f4\u304c\u5fc5\u8981\u306a\u3044\n\u547c\u3073\u51fa\u3057\u5074\u3067\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u3001\u4f55\u3082\u77e5\u308b\u5fc5\u8981\u304c\u306a\u3044\n\n\u3068\u3053\u308d\u304c\u3001\u30dd\u30a4\u30f3\u30c8\u3060\u3002\n\u3053\u3046\u3059\u308c\u3070\u3001\u4f8b\u3048\u3070\u3001\u74b0\u5883\u3084\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5207\u308a\u66ff\u3048\u308b\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u3001\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\nordmaps\u306eAPI\nordmaps \u306espec\u3092\u898b\u3066\u307f\u3088\u3046\u3002\u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u305f\u3002\n\nordmaps.erl\n-module(ordmaps).\n\n-export(\n   [new/1,\n    add/3,\n    update/3,\n    find/2,\n    remove/2,\n    keys/1,\n    to_list/1\n   ]).\n\n-spec new(map_type()) -> ordmap().\n-spec add(key(), value(), ordmap()) -> ordmap() | no_return().\n-spec update(key(), value(), ordmap()) -> ordmap() | no_return().\n-spec find(key(), ordmap()) -> {ok, value()} | not_found.\n-spec remove(key(), ordmap()) -> ordmap().\n-spec keys(ordmap()) -> [key()].\n-spec to_list(ordmap()) -> [key()].\n\n\n\u578b map_type/0\u3001ordmap/0\u3001key/0 \u306a\u3069\u306e\u5b9a\u7fa9\u306f\u3053\u3046\u306a\u308b\u3002\n\nordmaps.erl\n-record(?MODULE, {\n           impl_mod :: module(),\n           data :: term()\n          }).\n\n-type map_type() :: map | gb_tree.\n-type ordmap()   :: #?MODULE{}.\n-type key()      :: term().\n-type value()    :: term().\n-type data()     :: map() | gb_tree().\n\n\n?MODULE \u306e\u90e8\u5206\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d ordmaps \u3067\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u3053\u3046\u66f8\u304f\u306e\u3068\u540c\u3058\u3060\u3002\n\nordmaps.erl\n-record(ordmaps, {\n           impl_mod :: module(),\n           data :: term()\n          }).\n-type ordmap() :: #ordmaps{}.\n\n\n\u3053\u306e\u30ec\u30b3\u30fc\u30c9\u304c\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306a\u308b\u3002impl_mod \u306b\u306f\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u540d\u524d\u3092\u3001data \u306b\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\uff08gb_tree\u3001\u307e\u305f\u306f\u3001map\u30c7\u30fc\u30bf\uff09\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002\n\u4f8b\uff1agb_trees\u306e\u5834\u5408\n{ordmaps,\n ordmaps_impl_gb_trees,\n {3,{{b,name},\"b\",\n      {{b,count},2,\n        {{a,name},\"a\",nil,...},\n        nil},\n      nil}}}\n\n\u4f8b\uff1amap\u306e\u5834\u5408\n{ordmaps, \n ordmaps_impl_maps,\n #{{a,name} => \"a\",{b,count} => 2,{b,name} => \"b\"}}\n\n\nordmaps\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u5b9a\u7fa9\n\nordmaps:new/1\n\u307e\u305a\u3001ordmaps:new/1 \u3092\u5b9a\u7fa9\u3057\u3088\u3046\u3002\n\nordmaps.erl\n-spec new(map_type()) -> ordmap().\nnew(map) ->\n    ImplMod = ordmaps_impl_maps,\n    Data = ImplMod:new(),\n    #?MODULE{impl_mod=ImplMod, data=Data};\nnew(gb_tree) ->\n    ImplMod = ordmaps_impl_gb_trees,\n    Data = ImplMod:new(),\n    #?MODULE{impl_mod=ImplMod, data=Data}.\n\n\n\u5f15\u6570 map_type \u306b\u3088\u3063\u3066\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb ordmaps_impl_maps \u307e\u305f\u306f ordmaps_impl_gb_trees \u3092\u9078\u629e\u3057\u3001\u4e00\u65b9\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e new/0 \u3092\u547c\u3093\u3067\u3001\u7a7a\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u6210\u3059\u308b\u3002\u6700\u5f8c\u306b\u305d\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u5074\u306b\u8fd4\u3059\u3002\n\nordmaps_impl_gb_trees:new/0\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u3088\u3044\u3002\n\nordmaps_impl_gb_trees.erl\n-spec new() -> ordmaps:data().\nnew() ->\n    gb_trees:empty().\n\n\n\nordmaps_impl_maps:new/0\nmap\u306b\u3088\u308b\u5b9f\u88c5\u306f\u3053\u306e\u3068\u304a\u308a\u3002#{} \u306f\u7a7a\u306emap\u3002\n\nordmaps_impl_maps.erl\n-spec new() -> ordmaps:data().\nnew() ->\n    #{}.\n\n\n\nordmaps:add/3\n\u6b21\u306f ordmaps:add/3 \u306e\u5b9a\u7fa9\u3002\n\nordmaps.erl\n-spec add(key(), value(), ordmap()) -> ordmap() | no_return().\nadd(Key, Val, #?MODULE{impl_mod=ImplMod, data=Data}=Ordmap) ->\n    Data1 = ImplMod:add(Key, Val, Data),\n    Ordmap#?MODULE{data=Data1}.\n\n\n\uff13\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u6e21\u3055\u308c\u308b\u306e\u3067\u3001ImplMod \u3068 Data \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002ImplMod:add/3 \u3067\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u66f4\u65b0\u3055\u308c\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e data \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u8fd4\u3059\u3002\n\nordmaps_impl_gb_trees:add/3\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u306e\u5b9a\u7fa9\u3002\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u306f\u306a\u3044\u3002\n\nordmaps_impl_gb_trees.erl\n-spec add(ordmaps:key(), ordmaps:value(), ordmaps:data())\n         -> ordmaps:data() | no_return().\nadd(Key, Val, Tree) ->\n    gb_trees:insert(Key, Val, Tree).\n\n\n\nordmaps_impl_maps:add/3\nmap\u5074\u306e\u5b9a\u7fa9\u3002\u3053\u3061\u3089\u306f maps:is_key/2 \u306b\u3088\u308b\u30ad\u30fc\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u304c\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u5358\u7d14\u306a\u5b9f\u88c5\u3060\u3002\n\nordmaps_impl_maps.erl\n-spec add(ordmaps:key(), ordmaps:value(), ordmaps:data())\n         -> ordmaps:data() | no_return().\nadd(Key, Val, Map) ->\n    case maps:is_key(Key, Map) of\n        true ->\n            error({key_exists, Key});\n        false ->\n            maps:put(Key, Val, Map)\n    end.\n\n\n\u3042\u3068\u306f\u3001\u3053\u308c\u306e\u7e70\u308a\u8fd4\u3057\u3060\u3002\n\n\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 GitHub\u306e tatsuya6502/erlang-examples/ \u306b\u7f6e\u3044\u305f\u306e\u3067\u3001\u305c\u3072\u5b9f\u884c\u3057\u3066\u307f\u3066\u307b\u3057\u3044\u3002\n$ git clone https://github.com/tatsuya6502/erlang-examples.git\n\n\u30b3\u30fc\u30c9\u3060\u3051\u8aad\u307f\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30ea\u30f3\u30af\u304b\u3089\uff1a\n\nordmaps.erl\nordmaps_impl_gb_trees.erl\nordmaps_impl_maps.erl\ntest/eunit/ordmaps_tests.erl\n\n\u4eca\u56de\u306f Erlang/OTP 17\u306e map\u578b\u3092\u4f7f\u7528\u3057\u305f\u306e\u3067\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e ordmaps_impl_maps \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f\u3001Erlang/OTP 17A\u306eRC1\u4ee5\u964d\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\u305d\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u306b\u66f8\u3044\u305f\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002\n\u9006\u306b\u300117\u3088\u308a\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\ntuple-module/src/ordmaps_impl_maps.erl\u3092\u524a\u9664\u3059\u308b\ntuple-module/rebar.config \u4e2d\u306e {require_otp_vsn, \"17\"} \u3092 {require_otp_vsn, \"R15|R16|17\"} \u306b\u5909\u66f4\u3059\u308b\u3002\n\n\n\u30d3\u30eb\u30c9\u3068EUnit\u30b1\u30fc\u30b9\u306e\u5b9f\u884c\nmake clean eunit \u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u3001\u4e0a\u8a18\u306e ordmaps_tests.erl \u3078\u306e\u30ea\u30f3\u30af\u3092\u53c2\u7167\u3002\n$ cd erlang-examples/tuple-module/\n$ make clean eunit\n...\n\ntest/eunit/ordmaps_test.erl:37:<0.58.0>: M = {ordmaps,ordmaps_impl_maps,#{}}\ntest/eunit/ordmaps_test.erl:48:<0.58.0>: M6 = {ordmaps,ordmaps_impl_maps,#{{a,name} => \"a\",{b,count} => 2,{b,name} => \"b\"}}\ntest/eunit/ordmaps_test.erl:37:<0.58.0>: M = {ordmaps,ordmaps_impl_gb_trees,{0,nil}}\ntest/eunit/ordmaps_test.erl:48:<0.58.0>: M6 = {ordmaps,ordmaps_impl_gb_trees,\n              {3,{{b,name},\"b\",{{b,count},2,{{a,name},\"a\",nil,...},nil},nil}}}\n  All 2 tests passed\n\n\n\u4ed5\u4e0a\u3052\uff11\uff1abehaviour\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u5f37\u5316\u3059\u308b\n\u3053\u306e\u307e\u307e\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u306e\u3060\u304c\u3001\u3082\u3057\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u95a2\u6570\u540d\u3084arity\uff08\u5f15\u6570\u306e\u6570\uff09\u3092\u9593\u9055\u3048\u3066\u3057\u307e\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u3060\u308d\u3046\u304b\uff1f\u3000\u4f8b\u3048\u3070\u3001add(Key, Val, Map) \u3068\u3059\u308b\u3068\u3053\u308d\u3001add(Key, Val) \u3068\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u305f\u3089\uff1f\u3000Erlang\u306f\u52d5\u7684\u578b\u4ed8\u304d\u8a00\u8a9e\u306a\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u3042\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3067\u304d\u306a\u3044\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3001\u521d\u3081\u3066\u30a8\u30e9\u30fc\u306b\u6c17\u4ed8\u304f\u3002\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3057\u3063\u304b\u308a\u66f8\u3051\u3070\u554f\u984c\u306a\u3044\u3001\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u304c\u3001\u3053\u3053\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u691c\u51fa\u3055\u305b\u305f\u3044\u3068\u3053\u308d\u3060\u3002Erlang\u306b\u306f\u3001\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u4ed5\u7d44\u307f\u306e\u4e00\u3064\u3068\u3057\u3066\u3001behavior\u304c\u3042\u308b\u3002\n\nordmaps\u306ebehaviour\u5b9a\u7fa9\n\u307e\u305a ordmaps \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001callback\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nordmaps.erl\n-callback new() -> data().\n-callback add(key(), value(), data()) -> data() | no_return().\n-callback update(key(), value(), data()) -> data() | no_return().\n-callback find(key(), data()) -> {ok, value()} | key_not_found.\n-callback remove(key(), data()) -> data().\n-callback keys(data()) -> [key()].\n-callback to_list(data()) -> [{key(), value()}].\n\n\n\u306a\u304a\u3001\u3053\u306e callback \u3092\u4f7f\u3063\u305f\u8868\u8a18\u6cd5\u306f Erlang/OTP R15B \u3067\u5c0e\u5165\u3055\u308c\u305f\u306e\u3067\u3001\u305d\u308c\u3088\u308a\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\u305d\u308c\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001behaviour_info/0\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3088\u3044\u3002\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u3001behaviour\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u306f\u3001ordmaps \u306ebehaviour\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3059\u308b\u3002\n\nordmaps_impl_gb_trees.erl\n-behaviour(ordmaps).\n\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u6f0f\u308c\u3001\u95a2\u6570\u540d\u3084arity\u306e\u9593\u9055\u3044\u3092\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u691c\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\nTODO: \u30a8\u30e9\u30fc\u691c\u51fa\u306e\u4f8b\n\n\u4ed5\u4e0a\u3052\uff12\uff1aspec\u3092\u66f8\u3044\u3066\u3001Dialyzer\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\u6b8b\u5ff5\u306a\u304c\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306f\u95a2\u6570\u306earity\uff08\u5f15\u6570\u306e\u6570\uff09\u307e\u3067\u3057\u304b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u306a\u3044\u306e\u3067\u3001behaviour\u306b\u3088\u308b\u65b9\u6cd5\u3060\u3051\u3067\u306f\u3001\u578b\u306e\u9593\u9055\u3044\u307e\u3067\u306f\u691c\u51fa\u3067\u304d\u306a\u3044\u3002\u4f8b\u3048\u3070 add(Key, Val, Map) \u3068\u3059\u308b\u3068\u3053\u308d\u3092\u3001add(Map, Key, Val) \u3068\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u901a\u3063\u3066\u3057\u307e\u3046\u3002\n\u3053\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306f\u3001Dialyzer\u3067\u691c\u51fa\u3067\u304d\u308b\u3002Dialyzer\u306fErlang/OTP\u306b\u4ed8\u5c5e\u3059\u308b\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u3067\u3001\u95a2\u6570\u306e\u5f15\u6570\u3084\u623b\u308a\u5024\u306e\u578b\u3092\u4e2d\u5fc3\u306b\u3001\u69d8\u3005\u306a\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3060\u3057\u3001Dialyzer\u3067\u7cbe\u5ea6\u306e\u9ad8\u3044\u89e3\u6790\u3092\u884c\u3046\u306b\u306f\u3001type\u5b9a\u7fa9\u3084\u3001\u95a2\u6570\u306espec\u3092\u3067\u304d\u308b\u3060\u3051\u5177\u4f53\u7684\u306b\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002GitHub\u4e0a\u306e\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3053\u306e\u3042\u305f\u308a\u304c\u3057\u3063\u304b\u308a\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u500b\u4eba\u7684\u306b\u306f\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\u3001spec\u3092\u66f8\u304f\u306e\u304c\u304a\u6c17\u306b\u5165\u308a\u306e\u3084\u308a\u304b\u305f\u3060\u3002\nDialyzer\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u306f make dialyze \u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\u3082\u3057\u3001HOME\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b .dialyzer_plt.17 \u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u69cb\u7bc9\u306b\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u30b3\u30fc\u30d2\u30fc\u3067\u3082\u98f2\u307f\u306a\u304c\u3089\u5f85\u3063\u3066\u307b\u3057\u3044\u3002\n$ cd erlang-examples/tuple-module\n$ make dialyze    \n...\n\ndialyzer --plt /home/tatsuya/.dialyzer_plt.17 -Wunmatched_returns -r ./ebin\n  Checking whether the PLT /home/tatsuya/.dialyzer_plt.17 is up-to-date... yes\n  Proceeding with analysis... done in 0m0.39s\ndone (passed successfully)\n\nTODO: \u30a8\u30e9\u30fc\u691c\u51fa\u306e\u4f8b\n\n\u307e\u3068\u3081\n\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304b\u3089\u5b9f\u88c5\u3092\u5206\u96e2\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u305f\u3002\u3042\u308b\u7a0b\u5ea6\u306e\u898f\u6a21\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u306a\u308b\u3068\u3001\u3053\u306e\u3088\u3046\u306a\u624b\u6cd5\u3092\u4f7f\u3046\u5834\u9762\u304c\u591a\u304f\u3042\u308b\u306f\u305a\u3060\u3002\n\u307e\u305f\u3001behaviour\u3084Dialyzer\u3092\u4f7f\u3063\u3066\u3001\u30d3\u30eb\u30c9\u6642\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u9593\u306e\u5b9f\u88c5\u30a8\u30e9\u30fc\u3092\u691c\u51fa\u3059\u308b\u65b9\u6cd5\u3082\u89e3\u8aac\u3057\u305f\u3002\u79c1\u306e\u3044\u308b\u30c1\u30fc\u30e0\u3067\u306f\u3001Dialyzer\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\uff08\u3068\u3001\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u306a\u304b\u3063\u305f Erlang QuickCheck\u306e\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30fc\u30f3\u306b\u3088\u308b\u30c6\u30b9\u30c8\uff09\u306f\u5fc5\u9808\u30a2\u30a4\u30c6\u30e0\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u3068\u3066\u3082\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u305c\u3072\u6d3b\u7528\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\nErlang\u3067\u306f\u3001\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u969b\u306b\u3001`\u30e2\u30b8\u30e5\u30fc\u30eb\u540d:\u95a2\u6570\u540d(\u5f15\u6570, \u2026)` \u3068\u66f8\u304f\u4ee3\u308f\u308a\u306b\u3001\u4efb\u610f\u306e\u30bf\u30d7\u30eb `{\u30e2\u30b8\u30e5\u30fc\u30eb\u540d, \u4efb\u610f\u306e\u8981\u7d20, \u2026}` \u3092\u4f7f\u3063\u3066\u3001`{\u30e2\u30b8\u30e5\u30fc\u30eb\u540d, \u4efb\u610f\u306e\u8981\u7d20, \u2026}:\u95a2\u6570\u540d(\u5f15\u6570, \u2026)` \u3068\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u66f8\u304d\u65b9\u3092\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\uff08tuple module\uff09\u3068\u547c\u3076\u3002\n\n\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u547c\u3073\u51fa\u3055\u308c\u305f\u95a2\u6570\u306b\u306f\u3001\u6700\u5f8c\u306e\u5f15\u6570\u306b\u305d\u306e\u30bf\u30d7\u30eb\u304c\u30d0\u30a4\u30f3\u30c9\u3055\u308c\u308b\u3002\n\n\u4f8b\uff1a\n\n```erlang:my_module.erl\n-module(my_module).\n-export([my_fun/3]).\n\nmy_fun(X, Y, Tup) ->\n  {X, Y, Tup}.\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```erl\n> {my_module, a, b}:my_fun(1, 2).\n{1,2,{my_module,a,b}}.\n```\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3001\u5171\u901a\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\uff08API\uff09\u3092\u63d0\u4f9b\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3001\u305d\u306eAPI\u3092\u5b9f\u88c5\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5206\u96e2\u3057\u3066\u307f\u3088\u3046\u3002\n\n# ordmaps\uff1a\u6c4e\u7528\u7684\u306aOrdered Map\n\n\u3053\u3053\u3067\u306f\u3001\u4f8b\u3068\u3057\u3066\u3001\u8981\u7d20\u304c\u30ad\u30fc\u306e\u6607\u9806\u3067\u30bd\u30fc\u30c8\u3055\u308c\u305fmap\u3092\u63d0\u4f9b\u3059\u308b\u6c4e\u7528\u7684\u306aAPI `ordmaps` \u3092\u5b9a\u7fa9\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u305d\u306eAPI\u3092\u3001stdlib\u306e `gb_trees` \u3068\u3001Erlang/OTP 17\u306e\u7d44\u307f\u8fbc\u307f\u30c7\u30fc\u30bf\u578b\u306e `map` \u306e\uff12\u7a2e\u985e\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u5b9f\u88c5\u3059\u308b\u3002\n\n## ordmaps \u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u4f7f\u7528\u4f8b\n\n```erlang\n01: M0 = ordmaps:new(gb_tree),\n02: M1 = M0:add(b, 1),\n03: M2 = M1:add(a, 1),\n04: M3 = M2:update(b, 2),\n05: ?assertEqual({ok, 1}, M3:find(a)),\n06: ?assertEqual([a, b], M3:keys()),    %% \u30ad\u30fc\u304c\u30bd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3002\n```\n\n01\u884c\u306e\u3088\u3046\u306b\u3001`ordmaps:new(gb_tree)` \u3068\u3059\u308b\u3068\u3001`gb_trees` \u306b\u3088\u308b\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u308b\u3002\u307e\u305f\u3001`ordmaps:new(map)` \u3068\u3059\u308c\u3070\u3001map\u3092\u7528\u3044\u305f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u308f\u308c\u308b\u3002\n\n\u3069\u3061\u3089\u306e\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u5834\u5408\u3067\u3082\u3001\n\n1. \u547c\u3073\u51fa\u3057\u5074\u306e\u30b3\u30fc\u30c9\u306b\u4e00\u5207\u5909\u66f4\u304c\u5fc5\u8981\u306a\u3044\n2. \u547c\u3073\u51fa\u3057\u5074\u3067\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u3001\u4f55\u3082\u77e5\u308b\u5fc5\u8981\u304c\u306a\u3044\n\n\u3068\u3053\u308d\u304c\u3001\u30dd\u30a4\u30f3\u30c8\u3060\u3002\n\n\u3053\u3046\u3059\u308c\u3070\u3001\u4f8b\u3048\u3070\u3001\u74b0\u5883\u3084\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5207\u308a\u66ff\u3048\u308b\u3001\u3068\u3044\u3063\u305f\u3053\u3068\u304c\u3001\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u5b9f\u73fe\u3067\u304d\u308b\u3002\n\n# ordmaps\u306eAPI\n\n`ordmaps` \u306espec\u3092\u898b\u3066\u307f\u3088\u3046\u3002\u3068\u308a\u3042\u3048\u305a\u4ee5\u4e0b\u306e\u95a2\u6570\u3092\u7528\u610f\u3057\u305f\u3002\n\n```erlang:ordmaps.erl\n-module(ordmaps).\n\n-export(\n   [new/1,\n    add/3,\n    update/3,\n    find/2,\n    remove/2,\n    keys/1,\n    to_list/1\n   ]).\n\n-spec new(map_type()) -> ordmap().\n-spec add(key(), value(), ordmap()) -> ordmap() | no_return().\n-spec update(key(), value(), ordmap()) -> ordmap() | no_return().\n-spec find(key(), ordmap()) -> {ok, value()} | not_found.\n-spec remove(key(), ordmap()) -> ordmap().\n-spec keys(ordmap()) -> [key()].\n-spec to_list(ordmap()) -> [key()].\n```\n\n\u578b `map_type/0`\u3001`ordmap/0`\u3001`key/0` \u306a\u3069\u306e\u5b9a\u7fa9\u306f\u3053\u3046\u306a\u308b\u3002\n\n```erlang:ordmaps.erl\n-record(?MODULE, {\n           impl_mod :: module(),\n           data :: term()\n          }).\n\n-type map_type() :: map | gb_tree.\n-type ordmap()   :: #?MODULE{}.\n-type key()      :: term().\n-type value()    :: term().\n-type data()     :: map() | gb_tree().\n```\n\n`?MODULE` \u306e\u90e8\u5206\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d `ordmaps` \u3067\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u306e\u3067\u3001\u3053\u3046\u66f8\u304f\u306e\u3068\u540c\u3058\u3060\u3002\n\n```erlang:ordmaps.erl\n-record(ordmaps, {\n           impl_mod :: module(),\n           data :: term()\n          }).\n-type ordmap() :: #ordmaps{}.\n```\n\n\u3053\u306e\u30ec\u30b3\u30fc\u30c9\u304c\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306a\u308b\u3002`impl_mod` \u306b\u306f\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u540d\u524d\u3092\u3001`data` \u306b\u306f\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u4f7f\u7528\u3059\u308b\u30c7\u30fc\u30bf\uff08gb_tree\u3001\u307e\u305f\u306f\u3001map\u30c7\u30fc\u30bf\uff09\u3092\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002\n\n**\u4f8b\uff1agb_trees\u306e\u5834\u5408**\n\n```erlang\n{ordmaps,\n ordmaps_impl_gb_trees,\n {3,{{b,name},\"b\",\n      {{b,count},2,\n        {{a,name},\"a\",nil,...},\n        nil},\n      nil}}}\n```\n\n**\u4f8b\uff1amap\u306e\u5834\u5408**\n\n```erlang\n{ordmaps, \n ordmaps_impl_maps,\n #{{a,name} => \"a\",{b,count} => 2,{b,name} => \"b\"}}\n```\n\n# ordmaps\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u95a2\u6570\u5b9a\u7fa9\n\n## ordmaps:new/1\n\n\u307e\u305a\u3001`ordmaps:new/1` \u3092\u5b9a\u7fa9\u3057\u3088\u3046\u3002\n\n```erlang:ordmaps.erl\n-spec new(map_type()) -> ordmap().\nnew(map) ->\n    ImplMod = ordmaps_impl_maps,\n    Data = ImplMod:new(),\n    #?MODULE{impl_mod=ImplMod, data=Data};\nnew(gb_tree) ->\n    ImplMod = ordmaps_impl_gb_trees,\n    Data = ImplMod:new(),\n    #?MODULE{impl_mod=ImplMod, data=Data}.\n```\n\n\u5f15\u6570 `map_type` \u306b\u3088\u3063\u3066\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb `ordmaps_impl_maps` \u307e\u305f\u306f `ordmaps_impl_gb_trees` \u3092\u9078\u629e\u3057\u3001\u4e00\u65b9\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306e `new/0` \u3092\u547c\u3093\u3067\u3001\u7a7a\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u4f5c\u6210\u3059\u308b\u3002\u6700\u5f8c\u306b\u305d\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u3092\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u5074\u306b\u8fd4\u3059\u3002\n\n## ordmaps_impl_gb_trees:new/0\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u306f\u3053\u306e\u3088\u3046\u306b\u5b9a\u7fa9\u3059\u308c\u3070\u3088\u3044\u3002\n\n```erlang:ordmaps_impl_gb_trees.erl\n-spec new() -> ordmaps:data().\nnew() ->\n    gb_trees:empty().\n```\n\n## ordmaps_impl_maps:new/0\n\nmap\u306b\u3088\u308b\u5b9f\u88c5\u306f\u3053\u306e\u3068\u304a\u308a\u3002`#{}` \u306f\u7a7a\u306emap\u3002\n\n```erlang:ordmaps_impl_maps.erl\n-spec new() -> ordmaps:data().\nnew() ->\n    #{}.\n```\n\n## ordmaps:add/3\n\n\u6b21\u306f `ordmaps:add/3` \u306e\u5b9a\u7fa9\u3002\n\n```erlang:ordmaps.erl\n-spec add(key(), value(), ordmap()) -> ordmap() | no_return().\nadd(Key, Val, #?MODULE{impl_mod=ImplMod, data=Data}=Ordmap) ->\n    Data1 = ImplMod:add(Key, Val, Data),\n    Ordmap#?MODULE{data=Data1}.\n```\n\n\uff13\u756a\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u6e21\u3055\u308c\u308b\u306e\u3067\u3001`ImplMod` \u3068 `Data` \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u3002`ImplMod:add/3` \u3067\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3068\u3001\u66f4\u65b0\u3055\u308c\u305f\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u306e `data` \u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u30bb\u30c3\u30c8\u3057\u3066\u3001\u547c\u3073\u51fa\u3057\u5143\u306b\u8fd4\u3059\u3002\n\n## ordmaps_impl_gb_trees:add/3\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u306e\u5b9a\u7fa9\u3002\u7279\u306b\u96e3\u3057\u3044\u3068\u3053\u308d\u306f\u306a\u3044\u3002\n\n```erlang:ordmaps_impl_gb_trees.erl\n-spec add(ordmaps:key(), ordmaps:value(), ordmaps:data())\n         -> ordmaps:data() | no_return().\nadd(Key, Val, Tree) ->\n    gb_trees:insert(Key, Val, Tree).\n```\n\n## ordmaps_impl_maps:add/3\n\nmap\u5074\u306e\u5b9a\u7fa9\u3002\u3053\u3061\u3089\u306f `maps:is_key/2` \u306b\u3088\u308b\u30ad\u30fc\u306e\u5b58\u5728\u30c1\u30a7\u30c3\u30af\u304c\u5165\u3063\u3066\u3044\u308b\u3082\u306e\u306e\u3001\u5358\u7d14\u306a\u5b9f\u88c5\u3060\u3002\n\n```erlang:ordmaps_impl_maps.erl\n-spec add(ordmaps:key(), ordmaps:value(), ordmaps:data())\n         -> ordmaps:data() | no_return().\nadd(Key, Val, Map) ->\n    case maps:is_key(Key, Map) of\n        true ->\n            error({key_exists, Key});\n        false ->\n            maps:put(Key, Val, Map)\n    end.\n```\n\n\u3042\u3068\u306f\u3001\u3053\u308c\u306e\u7e70\u308a\u8fd4\u3057\u3060\u3002\n\n# \u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092 GitHub\u306e [tatsuya6502/erlang-examples/](https://github.com/tatsuya6502/erlang-examples/) \u306b\u7f6e\u3044\u305f\u306e\u3067\u3001\u305c\u3072\u5b9f\u884c\u3057\u3066\u307f\u3066\u307b\u3057\u3044\u3002\n\n```shell-session\n$ git clone https://github.com/tatsuya6502/erlang-examples.git\n```\n\n\u30b3\u30fc\u30c9\u3060\u3051\u8aad\u307f\u305f\u3044\u5834\u5408\u306f\u3001\u3053\u306e\u30ea\u30f3\u30af\u304b\u3089\uff1a\n\n- [ordmaps.erl](https://github.com/tatsuya6502/erlang-examples/blob/master/tuple-module/src/ordmaps.erl)\n- [ordmaps_impl_gb_trees.erl](https://github.com/tatsuya6502/erlang-examples/blob/master/tuple-module/src/ordmaps_impl_gb_trees.erl)\n- [ordmaps_impl_maps.erl](https://github.com/tatsuya6502/erlang-examples/blob/master/tuple-module/src/ordmaps_impl_maps.erl)\n- [test/eunit/ordmaps_tests.erl](https://github.com/tatsuya6502/erlang-examples/blob/master/tuple-module/test/eunit/ordmaps_test.erl)\n\n\u4eca\u56de\u306f Erlang/OTP 17\u306e map\u578b\u3092\u4f7f\u7528\u3057\u305f\u306e\u3067\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u306e ordmaps_impl_maps \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f\u3001Erlang/OTP 17A\u306eRC1\u4ee5\u964d\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u306b\u306a\u308b\u3002\u305d\u306e\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001[\u3053\u3061\u3089](http://qiita.com/tatsuya6502/items/1fd14a8a7527e0fcca47)\u306b\u66f8\u3044\u305f\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u307b\u3057\u3044\u3002\n\n\u9006\u306b\u300117\u3088\u308a\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3002\n\n1. tuple-module/src/ordmaps_impl_maps.erl\u3092\u524a\u9664\u3059\u308b\n2. tuple-module/rebar.config \u4e2d\u306e `{require_otp_vsn, \"17\"}` \u3092 `{require_otp_vsn, \"R15|R16|17\"}` \u306b\u5909\u66f4\u3059\u308b\u3002\n\n## \u30d3\u30eb\u30c9\u3068EUnit\u30b1\u30fc\u30b9\u306e\u5b9f\u884c\n\n`make clean eunit` \u3067\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u3001\u4e0a\u8a18\u306e ordmaps_tests.erl \u3078\u306e\u30ea\u30f3\u30af\u3092\u53c2\u7167\u3002\n\n```shell-session\n$ cd erlang-examples/tuple-module/\n$ make clean eunit\n...\n\ntest/eunit/ordmaps_test.erl:37:<0.58.0>: M = {ordmaps,ordmaps_impl_maps,#{}}\ntest/eunit/ordmaps_test.erl:48:<0.58.0>: M6 = {ordmaps,ordmaps_impl_maps,#{{a,name} => \"a\",{b,count} => 2,{b,name} => \"b\"}}\ntest/eunit/ordmaps_test.erl:37:<0.58.0>: M = {ordmaps,ordmaps_impl_gb_trees,{0,nil}}\ntest/eunit/ordmaps_test.erl:48:<0.58.0>: M6 = {ordmaps,ordmaps_impl_gb_trees,\n              {3,{{b,name},\"b\",{{b,count},2,{{a,name},\"a\",nil,...},nil},nil}}}\n  All 2 tests passed\n```\n\n\n# \u4ed5\u4e0a\u3052\uff11\uff1abehaviour\u3092\u5b9a\u7fa9\u3057\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u3092\u5f37\u5316\u3059\u308b\n\n\u3053\u306e\u307e\u307e\u3067\u3082\u554f\u984c\u306a\u304f\u52d5\u304f\u306e\u3060\u304c\u3001\u3082\u3057\u3001\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u3092\u5fd8\u308c\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u95a2\u6570\u540d\u3084arity\uff08\u5f15\u6570\u306e\u6570\uff09\u3092\u9593\u9055\u3048\u3066\u3057\u307e\u3063\u305f\u3089\u3069\u3046\u306a\u308b\u3060\u308d\u3046\u304b\uff1f\u3000\u4f8b\u3048\u3070\u3001`add(Key, Val, Map)` \u3068\u3059\u308b\u3068\u3053\u308d\u3001`add(Key, Val)` \u3068\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u305f\u3089\uff1f\u3000Erlang\u306f\u52d5\u7684\u578b\u4ed8\u304d\u8a00\u8a9e\u306a\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u3042\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u691c\u51fa\u3067\u304d\u306a\u3044\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u3001\u521d\u3081\u3066\u30a8\u30e9\u30fc\u306b\u6c17\u4ed8\u304f\u3002\n\n\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u3092\u3057\u3063\u304b\u308a\u66f8\u3051\u3070\u554f\u984c\u306a\u3044\u3001\u3068\u3044\u3046\u610f\u898b\u3082\u3042\u308b\u304c\u3001\u3053\u3053\u306f\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u691c\u51fa\u3055\u305b\u305f\u3044\u3068\u3053\u308d\u3060\u3002Erlang\u306b\u306f\u3001\u3053\u308c\u3092\u5b9f\u73fe\u3059\u308b\u4ed5\u7d44\u307f\u306e\u4e00\u3064\u3068\u3057\u3066\u3001behavior\u304c\u3042\u308b\u3002\n\n## ordmaps\u306ebehaviour\u5b9a\u7fa9\n\n\u307e\u305a `ordmaps` \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3001callback\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```erlang:ordmaps.erl\n-callback new() -> data().\n-callback add(key(), value(), data()) -> data() | no_return().\n-callback update(key(), value(), data()) -> data() | no_return().\n-callback find(key(), data()) -> {ok, value()} | key_not_found.\n-callback remove(key(), data()) -> data().\n-callback keys(data()) -> [key()].\n-callback to_list(data()) -> [{key(), value()}].\n```\n\n\u306a\u304a\u3001\u3053\u306e callback \u3092\u4f7f\u3063\u305f\u8868\u8a18\u6cd5\u306f Erlang/OTP R15B \u3067\u5c0e\u5165\u3055\u308c\u305f\u306e\u3067\u3001\u305d\u308c\u3088\u308a\u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u4f7f\u7528\u3067\u304d\u306a\u3044\u3002\u305d\u308c\u3089\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u306f\u3001`behaviour_info/0`\u3068\u3044\u3046\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u3088\u3044\u3002\n\n## \u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u3001behaviour\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\n\n\u5b9f\u88c5\u30e2\u30b8\u30e5\u30fc\u30eb\u5074\u3067\u306f\u3001`ordmaps` \u306ebehaviour\u3092\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3092\u5ba3\u8a00\u3059\u308b\u3002\n\n```erlang:ordmaps_impl_gb_trees.erl\n-behaviour(ordmaps).\n```\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u6570\u306e\u5b9f\u88c5\u6f0f\u308c\u3001\u95a2\u6570\u540d\u3084arity\u306e\u9593\u9055\u3044\u3092\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u304c\u691c\u51fa\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n**TODO**: \u30a8\u30e9\u30fc\u691c\u51fa\u306e\u4f8b\n\n\n# \u4ed5\u4e0a\u3052\uff12\uff1aspec\u3092\u66f8\u3044\u3066\u3001Dialyzer\u3067\u30c1\u30a7\u30c3\u30af\u3059\u308b\n\n\u6b8b\u5ff5\u306a\u304c\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306f\u95a2\u6570\u306earity\uff08\u5f15\u6570\u306e\u6570\uff09\u307e\u3067\u3057\u304b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u306a\u3044\u306e\u3067\u3001behaviour\u306b\u3088\u308b\u65b9\u6cd5\u3060\u3051\u3067\u306f\u3001\u578b\u306e\u9593\u9055\u3044\u307e\u3067\u306f\u691c\u51fa\u3067\u304d\u306a\u3044\u3002\u4f8b\u3048\u3070 `add(Key, Val, Map)` \u3068\u3059\u308b\u3068\u3053\u308d\u3092\u3001`add(Map, Key, Val)` \u3068\u5b9a\u7fa9\u3057\u3066\u3057\u307e\u3063\u3066\u3082\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u901a\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u3053\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u306f\u3001Dialyzer\u3067\u691c\u51fa\u3067\u304d\u308b\u3002Dialyzer\u306fErlang/OTP\u306b\u4ed8\u5c5e\u3059\u308b\u9759\u7684\u30b3\u30fc\u30c9\u89e3\u6790\u30c4\u30fc\u30eb\u3067\u3001\u95a2\u6570\u306e\u5f15\u6570\u3084\u623b\u308a\u5024\u306e\u578b\u3092\u4e2d\u5fc3\u306b\u3001\u69d8\u3005\u306a\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u305f\u3060\u3057\u3001Dialyzer\u3067\u7cbe\u5ea6\u306e\u9ad8\u3044\u89e3\u6790\u3092\u884c\u3046\u306b\u306f\u3001type\u5b9a\u7fa9\u3084\u3001\u95a2\u6570\u306espec\u3092\u3067\u304d\u308b\u3060\u3051\u5177\u4f53\u7684\u306b\u66f8\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002GitHub\u4e0a\u306e\u5b8c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u3053\u306e\u3042\u305f\u308a\u304c\u3057\u3063\u304b\u308a\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\u500b\u4eba\u7684\u306b\u306f\u3001\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u524d\u306b\u3001spec\u3092\u66f8\u304f\u306e\u304c\u304a\u6c17\u306b\u5165\u308a\u306e\u3084\u308a\u304b\u305f\u3060\u3002\n\nDialyzer\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\u306f `make dialyze` \u3067\u5b9f\u884c\u3067\u304d\u308b\u3002\u3082\u3057\u3001HOME\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b `.dialyzer_plt.17` \u30d5\u30a1\u30a4\u30eb\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u305d\u306e\u69cb\u7bc9\u306b\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\u306e\u3067\u3001\u30b3\u30fc\u30d2\u30fc\u3067\u3082\u98f2\u307f\u306a\u304c\u3089\u5f85\u3063\u3066\u307b\u3057\u3044\u3002\n\n```shell-session\n$ cd erlang-examples/tuple-module\n$ make dialyze    \n...\n\ndialyzer --plt /home/tatsuya/.dialyzer_plt.17 -Wunmatched_returns -r ./ebin\n  Checking whether the PLT /home/tatsuya/.dialyzer_plt.17 is up-to-date... yes\n  Proceeding with analysis... done in 0m0.39s\ndone (passed successfully)\n```\n\n**TODO**: \u30a8\u30e9\u30fc\u691c\u51fa\u306e\u4f8b\n\n# \u307e\u3068\u3081\n\n\u30bf\u30d7\u30eb\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u304b\u3089\u5b9f\u88c5\u3092\u5206\u96e2\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u305f\u3002\u3042\u308b\u7a0b\u5ea6\u306e\u898f\u6a21\u306e\u30b7\u30b9\u30c6\u30e0\u306b\u306a\u308b\u3068\u3001\u3053\u306e\u3088\u3046\u306a\u624b\u6cd5\u3092\u4f7f\u3046\u5834\u9762\u304c\u591a\u304f\u3042\u308b\u306f\u305a\u3060\u3002\n\n\u307e\u305f\u3001behaviour\u3084Dialyzer\u3092\u4f7f\u3063\u3066\u3001\u30d3\u30eb\u30c9\u6642\u306b\u30e2\u30b8\u30e5\u30fc\u30eb\u9593\u306e\u5b9f\u88c5\u30a8\u30e9\u30fc\u3092\u691c\u51fa\u3059\u308b\u65b9\u6cd5\u3082\u89e3\u8aac\u3057\u305f\u3002\u79c1\u306e\u3044\u308b\u30c1\u30fc\u30e0\u3067\u306f\u3001Dialyzer\u306b\u3088\u308b\u30c1\u30a7\u30c3\u30af\uff08\u3068\u3001\u3053\u3053\u3067\u306f\u7d39\u4ecb\u3057\u306a\u304b\u3063\u305f Erlang QuickCheck\u306e\u30b9\u30c6\u30fc\u30c8\u30de\u30b7\u30fc\u30f3\u306b\u3088\u308b\u30c6\u30b9\u30c8\uff09\u306f\u5fc5\u9808\u30a2\u30a4\u30c6\u30e0\u3068\u306a\u3063\u3066\u3044\u308b\u3002\u3068\u3066\u3082\u4fbf\u5229\u306a\u30c4\u30fc\u30eb\u306a\u306e\u3067\u3001\u305c\u3072\u6d3b\u7528\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u3002\n"}