{"tags": ["OpenCV3", "python3", "\u9854\u8a8d\u8b58"], "context": "\n\n\u306f\u3058\u3081\u306b\n\u79c1\u611f\u3067\u5927\u5909\u6050\u7e2e\u306a\u306e\u3067\u3059\u304c\u3001\u4eca\u5f8c\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u7279\u5fb4\u91cf\u5206\u6790\u306e\u9700\u8981\u304c\u9ad8\u307e\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u4eca\u5e74\u306e\u590f\u9803\u306e\u8ee2\u8077\u6d3b\u52d5\u4e2d\u306b\u611f\u3058\u305f\u306e\u3067\u3059\u304c\u3001\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306f\u3001\u3084\u308a\u305f\u3044\u3051\u3069\u30ea\u30bd\u30fc\u30b9\u304c\u7121\u3044\u7b49\u306e\u4e8b\u60c5\u3067\u3001\u624b\u304c\u51fa\u305b\u306a\u3044\u3068\u3044\u3046\u306e\u304c\u5b9f\u60c5\u306e\u3088\u3046\u306b\u601d\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u52d5\u6a5f\u306f\u3001Python\u3092\u4f7f\u3063\u305f\u753b\u50cf\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u3001\u81ea\u5206\u81ea\u8eab\u306e\u52c9\u5f37\u3068\u77e5\u8b58\u306e\u6574\u7406\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u3044\u308d\u3044\u308d\u3068\u30c4\u30c3\u30b3\u30df\u3069\u3053\u308d\u306f\u6e80\u8f09\u3067\u3059\u304c\u3001\u6696\u304b\u3044\u76ee\u3067\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\nOpenCV3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3044\u307e\u3057\u305f\u3002\nmacOS 10.12.1\nPython 3.5.2\nanaconda3-4.1.1\nJupyter\n\n\u307e\u305f\u3001pyenv\u306b\u3088\u308banaconda\u306e\u4eee\u60f3\u74b0\u5883\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3082\u66f8\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u5272\u611b\u3057\u307e\u3059\u3002\nOpenCV3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u3053\u308d\u3067\u30cf\u30de\u3063\u305f\u306e\u3067\u3059\u304c\u3001conda\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\nconda install --channel https://conda.anaconda.org/menpo opencv3\n\n\nOpenCV3\u306e\u52d5\u4f5c\u78ba\u8a8d\n\u307e\u305a\u3001\u6b63\u3057\u304fOpenCV3\u304cimport\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n#-*- coding: utf-8 -*-\nimport numpy as np\nimport cv2, matplotlib\nimport matplotlib.pyplot as plt\n\nprint(cv2.__version__)\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u305aversion\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n\n\u753b\u50cf\u5165\u529b\u3068\u753b\u50cf\u8868\u793a\n\u307e\u305a\u3001\u4eca\u56de\u306fjupyter\u3067\u52d5\u304b\u3057\u306a\u304c\u3089\u3001\u753b\u50cf\u306e\u57cb\u3081\u8fbc\u307f\u8868\u793a\u3092\u884c\u3044\u307e\u3059\u3002matplotlib\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u304a\u307e\u3058\u306a\u3044\u3092\u66f8\u304d\u307e\u3059\u3002\n%matplotlib inline\n\n\u6b21\u306b\u3001\u753b\u50cf\u5206\u91ce\u3067\u826f\u304f\u4f7f\u308f\u308c\u3066\u3044\u308blenna\u306e\u753b\u50cf\u3092\u30b0\u30b0\u3063\u3066\u5165\u624b\u3057\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3057\u307e\u3059\u3002\nRGB\u3078\u306e\u5909\u63db\u3082\u5fc5\u8981\u3067\u3059\u3002\n%matplotlib inline\ndef read_img(name_i):\n    img = cv2.imread(name_i)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    return img\n\n# \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nimg = read_img('lenna.png')\n\n# \u753b\u50cf\u306e\u8868\u793a\nplt.imshow(img)\n\n\nlenna\u3055\u3093\u304c\u7121\u4e8b\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u9854\u8a8d\u8b58\u3068\u9854\u5ea7\u6a19\u306e\u691c\u51fa\n\u5f15\u6570:\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d,\u9854\u8a8d\u8b58\u306e\u7279\u5fb4\u91cf\u30d1\u30b9\n\u8fd4\u308a\u5024:\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u691c\u51fa\u3055\u308c\u305f\u9854\u753b\u50cf\u306e\u914d\u5217\n\u3067\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\u30fb\u753b\u50cf\u5165\u529b\n\u30fb\u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u753b\u50cf\u306b\u5909\u63db\n\u30fb\u9854\u8a8d\u8b58\u5b9f\u884c\u3002\u7279\u5fb4\u91cf\u306epath\u3092\u5f15\u6570\u304b\u3089\u5165\u529b\u3002\n\u30fb\u691c\u51fa\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u4f5c\u6210\u3057\u3001\uff11\u679a\u306e\u753b\u50cf\u305a\u3064\u3001\u914d\u5217\u3078\u8ffd\u52a0\u3002\n\u30fb\u753b\u50cf\u306b\u67a0\u3092\u67a0\u3092\u66f8\u304f\n\u30fb\u753b\u50cf\u306e\u8868\u793a\n\ndef detect_face(img_name , cascade_path):\n    #\u753b\u50cf\u5165\u529b\n    img = read_img(img_name)\n    width = img.shape[1]\n    height = img.shape[0]\n    img = cv2.resize(img , (width , height))\n\n    #\u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u753b\u50cf\u306b\u5909\u63db    \n    gry = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n\n    #\u9854\u8a8d\u8b58\u5b9f\u884c\u3002\u7279\u5fb4\u91cf\u306epath\u3092\u5f15\u6570\u304b\u3089\u5165\u529b\u3002\n    cascade = cv2.CascadeClassifier(cascade_path)\n\n    #minNeighbors=20, minSize=(30, 30)\u2192\u691c\u51fa\u67a0\u304c\u8fd1\u3059\u304e\u308b\u306e\u3068\u3001\u5c0f\u3055\u3059\u304e\u308b\u306e\u306f\u9593\u5f15\u304f\u3002\n    facerect = cascade.detectMultiScale(gry, scaleFactor=1.05, minNeighbors=20, minSize=(30, 30))\n    dst_img = []\n    if len(facerect) > 0:\n        color = (255, 0, 0)\n        for rect in facerect:\n            x = rect[0]\n            y = rect[1]\n            w = rect[2]\n            h = rect[3]\n            #\u691c\u51fa\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u4f5c\u6210\u3057\u3001\uff11\u679a\u306e\u753b\u50cf\u305a\u3064\u8ffd\u52a0\u3002\n            add_image = cv2.resize(img[y : y+h , x : x + w] , (64 , 64))\n            dst_img.append(add_image)\n\n            #\u753b\u50cf\u306b\u67a0\u3092\u67a0\u3092\u66f8\u304f\n            cv2.rectangle(img, tuple(rect[0:2]),tuple(rect[0:2]+rect[2:4]), color, thickness=2)\n        # \u753b\u50cf\u306e\u8868\u793a\n        plt.imshow(img)\n\n    return dst_img\n\n\u4ee5\u4e0b\u3001openCV\u3067\u3042\u3089\u304b\u3058\u3081\u6301\u3063\u3066\u3044\u308b\u5b66\u7fd2\u6e08\u307f\u9854\u7279\u5fb4\u91cf\u3092\u6307\u5b9a\u3057\u3001\u5b9f\u884c\u3002\ncascade_path = '/usr/local/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml'\nres_images = detect_face(\"lenna.png\" ,  cascade_path)\n\n\nlenna\u3055\u3093\u306e\u9854\u304c\u8d64\u3044\u67a0\u3067\u56f2\u307e\u308c\u307e\u3057\u305f\u3002\n\u6b21\u306b\u3001\u9854\u691c\u51fa\u306e\u753b\u50cf\u306e\u307f\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4eca\u56de\u306f1\u753b\u50cf\u304b\u3089\u691c\u51fa\u9854\u3092\uff11\u3064\u306a\u306e\u3067\u3001index\u306f0\u756a\u76ee\u3067\u3059\u3002\nplt.imshow(res_images[0])\n\n\n\n1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u9854\u691c\u51fa\n1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u9854\u306e\u691c\u51fa\u3092\u884c\u3046\u5834\u5408\u3067\u3059\u3002\n\u753b\u50cf\u306e\u5f15\u7528\u5143\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://www.pakutaso.com/model.html\nres_images = detect_face(\"sample.png\" , cascade_path)\n\n\n\u3053\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u771f\u6b63\u9762\u3067\u306a\u3044\u3068\u691c\u51fa\u3055\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u3001\u8907\u6570\u306e\u753b\u50cf\u3092\u4fdd\u6301\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u306e\u305f\u3081\u30010\u756a\u76ee\u4ee5\u5916\u306e\u753b\u50cf\u3067\u8868\u793a\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4eca\u56de\u306findex\u304c1\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\nplt.imshow(res_images[1])\n\n\n\n\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u7b97\u51fa\u3068\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u306e\u7b97\u51fa\n\u3054\u304f\u57fa\u672c\u306a\u7d71\u8a08\u91cf\u306b\u6ce8\u76ee\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n#Green\u753b\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3057\u3001Green\u753b\u50cf\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u7b97\u51fa\nRGB =cv2.split(res_images[1])\nGr = RGB[1]\nhist = cv2.calcHist([Gr],[0],None,[256],[0,256])\nhist\n\n\n\u914d\u5217\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6b21\u306b\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\u3002\n\nplt.plot(hist)\nplt.xlim([0,256])\nplt.show()\n\n\n\u30b5\u30c1\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u304b\u3001\u660e\u308b\u3081\u306e\u753b\u50cf\u306a\u306e\u3067\u3001\u771f\u9762\u76ee\u306b\u5206\u6790\u3092\u884c\u3044\u969b\u306b\u306f\u3001\u6b63\u898f\u5316\u3082\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\u5f97\u3089\u308c\u305f\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306b\u5bfe\u3057\u3066\u3001\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u3092\u898b\u3066\u898b\u307e\u3059\u3002\nprint(\"\u7a4d\u7b97\u5024:\", np.sum(hist))\nprint(\"\u6700\u5927\u5024:\", np.max(hist))\nprint(\"\u6700\u5c0f\u5024:\", np.min(hist))\nprint(\"\u5e73\u5747\u5024:\", np.mean(hist))\nprint(\"\u4e2d\u592e\u5024:\", np.median(hist))\nprint(\"\u5206\u6563\u5024:\", np.var(hist))\n\n\n\n\u4eca\u56de\u306f\u3053\u3053\u3067\u7d42\u308f\u308a\u3067\u3059\nOpenCV\u306e\u3061\u3087\u3063\u3068\u3057\u305f\u52d5\u4f5c\u78ba\u8a8d\u3082\u884c\u3044\u3064\u3064\u3001\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u307e\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u304c\u5206\u6790\u306b\u4f7f\u3048\u308b\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u3053\u3053\u304b\u3089\u3001pandas\u306b\u3076\u3063\u3053\u3093\u3067\u96c6\u8a08\u3092\u884c\u3063\u305f\u308a\u3001\u753b\u50cf\u306b\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066scikit-learn\u3067\u6a5f\u68b0\u5b66\u7fd2\u3092\u304b\u3051\u305f\u308a\u3068\u5206\u6790\u3063\u307d\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5206\u6790\u306e\u5b9f\u52d9\u7684\u306a\u3068\u3053\u308d\u306f\u3001\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u3067\u7d39\u4ecb\u3067\u304d\u305f\u3089\u3068\u601d\u3044\u307e\u3059\u3002\n#\u306f\u3058\u3081\u306b\n\n\u79c1\u611f\u3067\u5927\u5909\u6050\u7e2e\u306a\u306e\u3067\u3059\u304c\u3001\u4eca\u5f8c\u3001\u753b\u50cf\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u7279\u5fb4\u91cf\u5206\u6790\u306e\u9700\u8981\u304c\u9ad8\u307e\u308b\u6c17\u304c\u3057\u307e\u3059\u3002\u4eca\u5e74\u306e\u590f\u9803\u306e\u8ee2\u8077\u6d3b\u52d5\u4e2d\u306b\u611f\u3058\u305f\u306e\u3067\u3059\u304c\u3001\u753b\u50cf\u306e\u30c7\u30fc\u30bf\u5206\u6790\u306f\u3001\u3084\u308a\u305f\u3044\u3051\u3069\u30ea\u30bd\u30fc\u30b9\u304c\u7121\u3044\u7b49\u306e\u4e8b\u60c5\u3067\u3001\u624b\u304c\u51fa\u305b\u306a\u3044\u3068\u3044\u3046\u306e\u304c\u5b9f\u60c5\u306e\u3088\u3046\u306b\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306e\u8a18\u4e8b\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u305f\u52d5\u6a5f\u306f\u3001Python\u3092\u4f7f\u3063\u305f\u753b\u50cf\u306e\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306b\u3064\u3044\u3066\u3001\u81ea\u5206\u81ea\u8eab\u306e\u52c9\u5f37\u3068\u77e5\u8b58\u306e\u6574\u7406\u3068\u3044\u3046\u3053\u3068\u3082\u3042\u308a\u3001\u3044\u308d\u3044\u308d\u3068\u30c4\u30c3\u30b3\u30df\u3069\u3053\u308d\u306f\u6e80\u8f09\u3067\u3059\u304c\u3001\u6696\u304b\u3044\u76ee\u3067\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\n#OpenCV3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u884c\u3044\u307e\u3057\u305f\u3002\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\nmacOS 10.12.1\nPython 3.5.2\nanaconda3-4.1.1\nJupyter\n</pre></div></div>\n\n\n\u307e\u305f\u3001pyenv\u306b\u3088\u308banaconda\u306e\u4eee\u60f3\u74b0\u5883\u8a2d\u5b9a\u306b\u3064\u3044\u3066\u3082\u66f8\u304d\u305f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\nOpenCV3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u3053\u308d\u3067\u30cf\u30de\u3063\u305f\u306e\u3067\u3059\u304c\u3001conda\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u89e3\u6c7a\u3057\u307e\u3057\u305f\u3002\n<div class=\"code-frame\" data-lang=\"text\"><div class=\"highlight\"><pre>\nconda install --channel https://conda.anaconda.org/menpo opencv3\n</pre></div></div>\n\n\n\n\n#OpenCV3\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n\u307e\u305a\u3001\u6b63\u3057\u304fOpenCV3\u304cimport\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```py\n#-*- coding: utf-8 -*-\nimport numpy as np\nimport cv2, matplotlib\nimport matplotlib.pyplot as plt\n\nprint(cv2.__version__)\n```\n\n\u30a8\u30e9\u30fc\u304c\u51fa\u305aversion\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.46.16.png](https://qiita-image-store.s3.amazonaws.com/0/151217/d32619fc-b689-0a1c-ccb1-d1cbb93f7b55.png)\n\n#\u753b\u50cf\u5165\u529b\u3068\u753b\u50cf\u8868\u793a\n\u307e\u305a\u3001\u4eca\u56de\u306fjupyter\u3067\u52d5\u304b\u3057\u306a\u304c\u3089\u3001\u753b\u50cf\u306e\u57cb\u3081\u8fbc\u307f\u8868\u793a\u3092\u884c\u3044\u307e\u3059\u3002matplotlib\u3092\u4f7f\u3044\u307e\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u304a\u307e\u3058\u306a\u3044\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```py\n%matplotlib inline\n```\n\n\u6b21\u306b\u3001\u753b\u50cf\u5206\u91ce\u3067\u826f\u304f\u4f7f\u308f\u308c\u3066\u3044\u308blenna\u306e\u753b\u50cf\u3092\u30b0\u30b0\u3063\u3066\u5165\u624b\u3057\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8868\u793a\u3057\u307e\u3059\u3002\nRGB\u3078\u306e\u5909\u63db\u3082\u5fc5\u8981\u3067\u3059\u3002\n\n```py\n%matplotlib inline\ndef read_img(name_i):\n    img = cv2.imread(name_i)\n    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n    return img\n\n# \u753b\u50cf\u306e\u8aad\u307f\u8fbc\u307f\nimg = read_img('lenna.png')\n    \n# \u753b\u50cf\u306e\u8868\u793a\nplt.imshow(img)\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.46.55.png](https://qiita-image-store.s3.amazonaws.com/0/151217/9f38a431-e28d-2034-299c-e5a6c47a567d.png)\n\nlenna\u3055\u3093\u304c\u7121\u4e8b\u306b\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n#\u9854\u8a8d\u8b58\u3068\u9854\u5ea7\u6a19\u306e\u691c\u51fa\n\u5f15\u6570:\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u540d,\u9854\u8a8d\u8b58\u306e\u7279\u5fb4\u91cf\u30d1\u30b9\n\u8fd4\u308a\u5024:\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u691c\u51fa\u3055\u308c\u305f\u9854\u753b\u50cf\u306e\u914d\u5217\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u30fb\u753b\u50cf\u5165\u529b\n\u30fb\u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u753b\u50cf\u306b\u5909\u63db\n\u30fb\u9854\u8a8d\u8b58\u5b9f\u884c\u3002\u7279\u5fb4\u91cf\u306epath\u3092\u5f15\u6570\u304b\u3089\u5165\u529b\u3002\n\u30fb\u691c\u51fa\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u4f5c\u6210\u3057\u3001\uff11\u679a\u306e\u753b\u50cf\u305a\u3064\u3001\u914d\u5217\u3078\u8ffd\u52a0\u3002\n\u30fb\u753b\u50cf\u306b\u67a0\u3092\u67a0\u3092\u66f8\u304f\n\u30fb\u753b\u50cf\u306e\u8868\u793a\n\n```py3\n\ndef detect_face(img_name , cascade_path):\n    #\u753b\u50cf\u5165\u529b\n    img = read_img(img_name)\n    width = img.shape[1]\n    height = img.shape[0]\n    img = cv2.resize(img , (width , height))\n\n    #\u5165\u529b\u753b\u50cf\u3092\u30b0\u30ec\u30fc\u753b\u50cf\u306b\u5909\u63db    \n    gry = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)\n\n    #\u9854\u8a8d\u8b58\u5b9f\u884c\u3002\u7279\u5fb4\u91cf\u306epath\u3092\u5f15\u6570\u304b\u3089\u5165\u529b\u3002\n    cascade = cv2.CascadeClassifier(cascade_path)\n    \n    #minNeighbors=20, minSize=(30, 30)\u2192\u691c\u51fa\u67a0\u304c\u8fd1\u3059\u304e\u308b\u306e\u3068\u3001\u5c0f\u3055\u3059\u304e\u308b\u306e\u306f\u9593\u5f15\u304f\u3002\n    facerect = cascade.detectMultiScale(gry, scaleFactor=1.05, minNeighbors=20, minSize=(30, 30))\n    dst_img = []\n    if len(facerect) > 0:\n        color = (255, 0, 0)\n        for rect in facerect:\n            x = rect[0]\n            y = rect[1]\n            w = rect[2]\n            h = rect[3]\n            #\u691c\u51fa\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u4f5c\u6210\u3057\u3001\uff11\u679a\u306e\u753b\u50cf\u305a\u3064\u8ffd\u52a0\u3002\n            add_image = cv2.resize(img[y : y+h , x : x + w] , (64 , 64))\n            dst_img.append(add_image)\n            \n            #\u753b\u50cf\u306b\u67a0\u3092\u67a0\u3092\u66f8\u304f\n            cv2.rectangle(img, tuple(rect[0:2]),tuple(rect[0:2]+rect[2:4]), color, thickness=2)\n        # \u753b\u50cf\u306e\u8868\u793a\n        plt.imshow(img)\n            \n    return dst_img\n```\n\n\u4ee5\u4e0b\u3001openCV\u3067\u3042\u3089\u304b\u3058\u3081\u6301\u3063\u3066\u3044\u308b\u5b66\u7fd2\u6e08\u307f\u9854\u7279\u5fb4\u91cf\u3092\u6307\u5b9a\u3057\u3001\u5b9f\u884c\u3002\n\n```py3\ncascade_path = '/usr/local/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml'\nres_images = detect_face(\"lenna.png\" ,  cascade_path)\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.47.08.png](https://qiita-image-store.s3.amazonaws.com/0/151217/917ce62f-3758-3b7d-a250-cdd960fe7fb4.png)\n\n\nlenna\u3055\u3093\u306e\u9854\u304c\u8d64\u3044\u67a0\u3067\u56f2\u307e\u308c\u307e\u3057\u305f\u3002\n\n\u6b21\u306b\u3001\u9854\u691c\u51fa\u306e\u753b\u50cf\u306e\u307f\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u4eca\u56de\u306f1\u753b\u50cf\u304b\u3089\u691c\u51fa\u9854\u3092\uff11\u3064\u306a\u306e\u3067\u3001index\u306f0\u756a\u76ee\u3067\u3059\u3002\n\n```py3\nplt.imshow(res_images[0])\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.47.17.png](https://qiita-image-store.s3.amazonaws.com/0/151217/762cab08-3959-1e11-606e-a49e5456b232.png)\n\n\n#1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u9854\u691c\u51fa\n\n1\u679a\u306e\u753b\u50cf\u304b\u3089\u8907\u6570\u9854\u306e\u691c\u51fa\u3092\u884c\u3046\u5834\u5408\u3067\u3059\u3002\n\u753b\u50cf\u306e\u5f15\u7528\u5143\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nhttps://www.pakutaso.com/model.html\n\n\n\n```py3\nres_images = detect_face(\"sample.png\" , cascade_path)\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.47.24.png](https://qiita-image-store.s3.amazonaws.com/0/151217/1a20626f-9d76-2415-cf7a-815d986c3c10.png)\n\u3053\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u771f\u6b63\u9762\u3067\u306a\u3044\u3068\u691c\u51fa\u3055\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u8907\u6570\u306e\u753b\u50cf\u3092\u4fdd\u6301\u3067\u304d\u3066\u3044\u308b\u304b\u306e\u78ba\u8a8d\u306e\u305f\u3081\u30010\u756a\u76ee\u4ee5\u5916\u306e\u753b\u50cf\u3067\u8868\u793a\u3055\u308c\u308b\u304b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u4eca\u56de\u306findex\u304c1\u3067\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```py3\nplt.imshow(res_images[1])\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.47.41.png](https://qiita-image-store.s3.amazonaws.com/0/151217/474372ef-fbf2-fa34-a3c5-e28b9f35558a.png)\n\n#\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u7b97\u51fa\u3068\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u306e\u7b97\u51fa\n\u3054\u304f\u57fa\u672c\u306a\u7d71\u8a08\u91cf\u306b\u6ce8\u76ee\u3059\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u7b97\u51fa\u3057\u307e\u3059\u3002\n\n```py3\n#Green\u753b\u7d20\u306e\u307f\u3092\u62bd\u51fa\u3057\u3001Green\u753b\u50cf\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u7b97\u51fa\nRGB =cv2.split(res_images[1])\nGr = RGB[1]\nhist = cv2.calcHist([Gr],[0],None,[256],[0,256])\nhist\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.47.59.png](https://qiita-image-store.s3.amazonaws.com/0/151217/7926ef84-2e8f-c11f-881d-19a1ff91ce34.png)\n\u914d\u5217\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6b21\u306b\u30d7\u30ed\u30c3\u30c8\u3057\u307e\u3059\u3002\n\n```py3\n\nplt.plot(hist)\nplt.xlim([0,256])\nplt.show()\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.48.10.png](https://qiita-image-store.s3.amazonaws.com/0/151217/031c2d11-cfd8-24c5-2729-83011c1023dc.png)\n\n\u30b5\u30c1\u3063\u3066\u3044\u308b\u3068\u3044\u3046\u304b\u3001\u660e\u308b\u3081\u306e\u753b\u50cf\u306a\u306e\u3067\u3001\u771f\u9762\u76ee\u306b\u5206\u6790\u3092\u884c\u3044\u969b\u306b\u306f\u3001\u6b63\u898f\u5316\u3082\u5fc5\u8981\u306b\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n\u5f97\u3089\u308c\u305f\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306b\u5bfe\u3057\u3066\u3001\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u3092\u898b\u3066\u898b\u307e\u3059\u3002\n\n```py3\nprint(\"\u7a4d\u7b97\u5024:\", np.sum(hist))\nprint(\"\u6700\u5927\u5024:\", np.max(hist))\nprint(\"\u6700\u5c0f\u5024:\", np.min(hist))\nprint(\"\u5e73\u5747\u5024:\", np.mean(hist))\nprint(\"\u4e2d\u592e\u5024:\", np.median(hist))\nprint(\"\u5206\u6563\u5024:\", np.var(hist))\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-18 22.48.17.png](https://qiita-image-store.s3.amazonaws.com/0/151217/8b8567b4-884e-2aaa-8fa3-e5c21e17e1aa.png)\n\n\n#\u4eca\u56de\u306f\u3053\u3053\u3067\u7d42\u308f\u308a\u3067\u3059\nOpenCV\u306e\u3061\u3087\u3063\u3068\u3057\u305f\u52d5\u4f5c\u78ba\u8a8d\u3082\u884c\u3044\u3064\u3064\u3001\u57fa\u672c\u7684\u306a\u7d71\u8a08\u91cf\u3092\u7b97\u51fa\u3059\u308b\u3053\u3068\u307e\u3067\u3067\u304d\u307e\u3057\u305f\u3002\n\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u304c\u5206\u6790\u306b\u4f7f\u3048\u308b\u304b\u306f\u3055\u3066\u304a\u304d\u3001\u3053\u3053\u304b\u3089\u3001pandas\u306b\u3076\u3063\u3053\u3093\u3067\u96c6\u8a08\u3092\u884c\u3063\u305f\u308a\u3001\u753b\u50cf\u306b\u30e9\u30d9\u30eb\u4ed8\u3051\u3057\u3066scikit-learn\u3067\u6a5f\u68b0\u5b66\u7fd2\u3092\u304b\u3051\u305f\u308a\u3068\u5206\u6790\u3063\u307d\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u5206\u6790\u306e\u5b9f\u52d9\u7684\u306a\u3068\u3053\u308d\u306f\u3001\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u3067\u7d39\u4ecb\u3067\u304d\u305f\u3089\u3068\u601d\u3044\u307e\u3059\u3002\n"}