{"context": " More than 1 year has passed since last update.\n\nrelease news\nErlang Programming Language Erlang/OTP 18.0 has been released\n\nrelease news \u306e\u65e5\u672c\u8a9e\u8a33\n\u3010\u7ffb\u8a33\u3011Erlang/OTP 18.0 has been released #Erlang - Qiita\n\n\u30e9\u30a4\u30bb\u30f3\u30b9\u304cAPL2.0\u306b\u5909\u308f\u3063\u305f\nAPL\u306fApache Public License\u306e\u7565\u3002\n\u8a73\u3057\u304f\u306fWikipedia\u3067\u3002\n\uff08\u5618\u3092\u8a00\u3063\u3066\u3044\u3066\u3082\u6016\u3044\u306e\u3067\u2026\u3002\uff09\n\u5143\u3005\u306fErlang Public License\u3068\u3044\u3046\u72ec\u81ea\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u3002\n\u3053\u306e\u3042\u305f\u308a\u306b\u65e5\u672c\u8a9e\u3067\u60c5\u5831\u304c\u66f8\u304b\u308c\u3066\u3044\u305f\u3002\n\nerts: \u6642\u9593\u6a5f\u80fd\u306e\u62e1\u5f35\nhttp://www.erlang.org/doc/apps/erts/time_correction.html\n\n\u65b0\u3057\u3044\u6642\u9593\u306b\u95a2\u3059\u308bAPI\n\n\u4e92\u63db\u6027\u306e\u305f\u3081\u306b erlang:now/0 \u306f\u6b8b\u3059\u304c\u3001\u6975\u529b\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\n\n\u65b0\u3057\u3044BIF\n\nerlang:convert_time_unit/3\nerlang:monotonic_time/0\nerlang:monotonic_time/1\nerlang:system_time/0\nerlang:system_time/1\nerlang:time_offset/0\nerlang:time_offset/1\nerlang:timestamp/0\nerlang:unique_integer/0\nerlang:unique_integer/1\nos:system_time/0\nos:system_time/1\n\n\n\u62e1\u5f35\u3055\u308c\u305f\u65e2\u5b58\u306eBIF\n\nerlang:monitor(time_offset, clock_service)\nerlang:system_flag(time_offset, finalize)\nerlang:system_info(os_monotonic_time_source)\nerlang:system_info(os_system_time_source)\nerlang:system_info(time_offset)\nerlang:system_info(time_warp_mode)\nerlang:system_info(time_correction)\nerlang:system_info(start_time)\nerlang:system_info(end_time)\n\n\ntime warp modes\n\n\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u9593\u304c\u5909\u308f\u3063\u305f\u6642\u306b\u30b7\u30b9\u30c6\u30e0\u306e\u6319\u52d5\u3092\u5909\u3048\u308b\n\n\n2.6 Time Warp Modes | time correction\nhttp://www.erlang.org/doc/apps/erts/time_correction.html#Time_Warp_Modes\n\n\u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u3092\u7528\u3044\u3066Erlang monotonic time\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\n\u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u306f\u4f7f\u7528\u3059\u308b\u30bf\u30a4\u30e0\u30ef\u30fc\u30d7\u30e2\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u7570\u306a\u3063\u305f\u7ba1\u7406\u3092\u884c\u3046\n\nerl \u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f +C [no_time_warp | single_time_warp | multi_time_warp]\n\n\n\nNo Time Warp Mode\n\n\u30e9\u30f3\u30bf\u30a4\u30e0\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u59cb\u6642\u306b\u6c7a\u5b9a\u3057\u3001\u305d\u306e\u5f8c\u306f\u5909\u3048\u306a\u3044\n\u30c7\u30d5\u30a9\u30eb\u30c8\n\n\n\u4eca\u307e\u3067\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u3053\u306e\u6319\u52d5\u3068\u540c\u3058\n\u3060\u304b\u3089\u4ed5\u65b9\u306a\u304f\u30c7\u30d5\u30a9\u30eb\u30c8\u2026\n\n\n\n\nSingle Time Warp Mode\n\nPreliminary Phase\n\n\n\u6642\u9593\u88dc\u6b63\u304c\u6709\u52b9\u306a\u5834\u5408\n\n\nOS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u306f\u5225\u306b\u4e00\u5b9a\u5468\u6ce2\u6570\u306b\u306a\u308b\u3088\u3046\u306bErlang monotonic clock\u3092\u8abf\u6574\u3059\u308b\nOS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u4e56\u96e2\u3059\u308b\u53ef\u80fd\u6027\u306f\u3042\u308b\n\n\n\u6642\u9593\u88dc\u6b63\u304c\u7121\u52b9\u306a\u5834\u5408\n\n\nNo Time Warp Mode\u3068\u540c\u3058\n\n\n\n\nFinal Phase\n\n\n\nerlang:system_frag(time_offset, finalize)\u3067\u6642\u9593\u3092\u78ba\u5b9a\u3055\u305b\u308b\n\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30ba\u306f\u4e00\u5ea6\u3060\u3051\u884c\u308f\u308c\u308b\nOS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u5408\u3046\u3088\u3046\u306b\u30aa\u30d5\u30bb\u30c3\u30c8\u304c\u8abf\u6574\u3055\u308c\u308b\n\u3053\u306e\u6a5f\u80fd\u3092\u9069\u5207\u306b\u4f7f\u3046\u306b\u306f2\u3064\u306e\u8981\u4ef6\u304c\u3042\u308b\n\n\n\u524d\u65b9\u306b\u30ef\u30fc\u30d7\u3067\u304d\u308b\u3053\u3068\nOS\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u9593\u304c\u6b63\u78ba\u3067\u3042\u308b\u3053\u3068\n\n\nMulti Time Warp Mode\n\n\u3088\u308a\u597d\u307e\u3057\u3044\u69cb\u6210\n\u307b\u307c\u3059\u3079\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u826f\u3044\u52d5\u4f5c\u3001\u826f\u3044\u30b9\u30b1\u30fc\u30eb\u3092\u884c\u3048\u308b\n\u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u306f\u3044\u3064\u3067\u3082\u5909\u66f4\u3057\u3046\u308b\n\n\n\u3088\u308a\u6b63\u78ba\u306a\u6642\u9593\u3092\u4f7f\u3048\u308b\n\n\n\n\u6642\u9593\u88dc\u6b63\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\n\nOS\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u304c\u524d\u65b9\u306b\u30ef\u30fc\u30d7\u3059\u308b\u3068Erlang monotonic clock\u3082\u524d\u65b9\u306b\u30ef\u30fc\u30d7\nOS\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u304c\u5f8c\u65b9\u306b\u30ef\u30fc\u30d7\u3059\u308b\u3068Erlang monotonic \u6642\u9593\u3092\u77ed\u6642\u9593\u505c\u6b62\u3055\u305b\u308b\u505c\u6b62\n\n\n-dialyzer() \u5c5e\u6027\nhttp://www.erlang.org/doc/man/dialyzer.html#id60919\n* dialyze\u6642\u306b\u8b66\u544a\u3092\u6291\u5236\u3059\u308b\u305f\u3081\u306b\u4f7f\u3048\u308b\n\n\u3042\u308b\u95a2\u6570\u306e\u8b66\u544a\u3092\u6291\u5236\n-dialyzer({nowarn_function, f/0}).\n\n\nimproper lists \u306b\u5bfe\u3059\u308b\u8b66\u544a\u3092\u6291\u5236\n-dialyzer(no_improper_lists).\n\n\nwarning\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6291\u5236\n-dialyzer({no_improper_lists, g/0}).\n-dialyzer({[no_return, no_match], [g/0, h/0]}).\n\n\n\u8b66\u544a\u3092\u30aa\u30f3\u306b\u3059\u308b\n-dialyzer(unmatched_returns).\n\n\nPOODLE\u8106\u5f31\u6027\u306e\u305f\u3081\u306eTLS-1.0\nTODO: \u66f8\u304f\n\nstdlib: supervisor\u306eflags\u3068child specs\u3067map\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n-spec Module:init(Args) -> Result when\n    Args :: term(),\n    Result :: {ok,{SupFlags,[ChildSpec]}} | ignore,\n    SupFlags :: sup_flags(),\n    ChildSpec :: child_spec().\n\n-type sup_flags() :: #{strategy => strategy(),         % optional(default: one_for_one)\n                       intensity => non_neg_integer(), % optional(default: 1)\n                       period => pos_integer()}        % optional(default: 5)\n                    | {RestartStrategy :: strategy(),\n                       Intensity :: non_neg_integer(),\n                       Period :: pos_integer()}\n\n-type child_spec() = #{id => child_id(),       % mandatory\n                       start => mfargs(),      % mandatory\n                       restart => restart(),   % optional(default: permanent)\n                       shutdown => shutdown(), % optional(default: 5000 if worker, infinity if supervisor)\n                       type => worker(),       % optional(default: worker)\n                       modules => modules()}   % optional(default: mfargs()\u306eM)\n                    | {Id :: child_id(),\n                       StartFunc :: mfargs(),\n                       Restart :: restart(),\n                       Shutdown :: shutdown(),\n                       Type :: worker(),\n                       Modules :: modules()}\n\n\nstdlib: ets\u306e\u65b0\u6a5f\u80fd\n\nets:take/2\n\nhttp://www.erlang.org/doc/man/ets.html#take-2\nets:delete/2 \u3068\u540c\u3058\u3088\u3046\u306b\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\n\u9055\u3044\u306f \u524a\u9664\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059 \u3068\u3053\u308d\n-spec delete(Tab, Key) -> true when\n      Tab :: ets:tab(),\n      Key :: term().\n\n-spec take(Tab, Key) -> [Object] when\n      Tab :: ets:tab(),\n      Key :: term(),\n      Object :: tuple().\n\n\nets:update_counter/4\n\nhttp://www.erlang.org/doc/man/ets.html#update_counter-4\n\u5f15\u6570\u3068\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\uff08\u3053\u306e\u8fba\u308a\u5168\u7136\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u3053\u306e\u95a2\u6570\u304c\u4f55\u306a\u306e\u304b\u3001\u4f55\u304c\u5909\u308f\u3063\u305f\u306e\u304b\u2026\uff1b\uff09\n## release news\n[Erlang Programming Language Erlang/OTP 18.0 has been released](http://www.erlang.org/news/88)\n\n## release news \u306e\u65e5\u672c\u8a9e\u8a33\n[\u3010\u7ffb\u8a33\u3011Erlang/OTP 18.0 has been released #Erlang - Qiita](http://qiita.com/KOU_CHANG/items/b54887313533396ccbe1)\n\n## \u30e9\u30a4\u30bb\u30f3\u30b9\u304cAPL2.0\u306b\u5909\u308f\u3063\u305f\nAPL\u306fApache Public License\u306e\u7565\u3002\n\u8a73\u3057\u304f\u306f[Wikipedia](https://ja.wikipedia.org/wiki/Apache_License)\u3067\u3002\n\uff08\u5618\u3092\u8a00\u3063\u3066\u3044\u3066\u3082\u6016\u3044\u306e\u3067\u2026\u3002\uff09\n\u5143\u3005\u306fErlang Public License\u3068\u3044\u3046\u72ec\u81ea\u306e\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u4f7f\u308f\u308c\u3066\u3044\u305f\u3002\n[\u3053\u306e\u3042\u305f\u308a](https://erlang.g.hatena.ne.jp/kuenishi/20090418/1240028987)\u306b\u65e5\u672c\u8a9e\u3067\u60c5\u5831\u304c\u66f8\u304b\u308c\u3066\u3044\u305f\u3002\n\n## erts: \u6642\u9593\u6a5f\u80fd\u306e\u62e1\u5f35\nhttp://www.erlang.org/doc/apps/erts/time_correction.html\n\n### [\u65b0\u3057\u3044\u6642\u9593\u306b\u95a2\u3059\u308bAPI](http://www.erlang.org/doc/apps/erts/time_correction.html#The_New_Time_API)\n\u4e92\u63db\u6027\u306e\u305f\u3081\u306b `erlang:now/0` \u306f\u6b8b\u3059\u304c\u3001\u6975\u529b\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\n\n#### \u65b0\u3057\u3044BIF\n* [`erlang:convert_time_unit/3`](http://www.erlang.org/doc/man/erlang.html#convert_time_unit-3)\n* [`erlang:monotonic_time/0`](http://www.erlang.org/doc/man/erlang.html#monotonic_time-0)\n* [`erlang:monotonic_time/1`](http://www.erlang.org/doc/man/erlang.html#monotonic_time-1)\n* [`erlang:system_time/0`](http://www.erlang.org/doc/man/erlang.html#system_time-0)\n* [`erlang:system_time/1`](http://www.erlang.org/doc/man/erlang.html#system_time-1)\n* [`erlang:time_offset/0`](http://www.erlang.org/doc/man/erlang.html#time_offset-0)\n* [`erlang:time_offset/1`](http://www.erlang.org/doc/man/erlang.html#time_offset-1)\n* [`erlang:timestamp/0`](http://www.erlang.org/doc/man/erlang.html#timestamp-0)\n* [`erlang:unique_integer/0`](http://www.erlang.org/doc/man/erlang.html#unique_integer-0)\n* [`erlang:unique_integer/1`](http://www.erlang.org/doc/man/erlang.html#unique_integer-1)\n* [`os:system_time/0`](http://www.erlang.org/doc/man/os.html#system_time-0)\n* [`os:system_time/1`](http://www.erlang.org/doc/man/os.html#system_time-1)\n\n#### \u62e1\u5f35\u3055\u308c\u305f\u65e2\u5b58\u306eBIF\n* [`erlang:monitor(time_offset, clock_service)`](http://www.erlang.org/doc/man/erlang.html#monitor-2)\n* [`erlang:system_flag(time_offset, finalize)`](http://www.erlang.org/doc/man/erlang.html#system_flag_time_offset)\n* [`erlang:system_info(os_monotonic_time_source)`](http://www.erlang.org/doc/man/erlang.html#system_info_os_monotonic_time_source)\n* [`erlang:system_info(os_system_time_source)`](http://www.erlang.org/doc/man/erlang.html#system_info_os_system_time_source)\n* [`erlang:system_info(time_offset)`](http://www.erlang.org/doc/man/erlang.html#system_info_time_offset)\n* [`erlang:system_info(time_warp_mode)`](http://www.erlang.org/doc/man/erlang.html#system_info_time_warp_mode)\n* [`erlang:system_info(time_correction)`](http://www.erlang.org/doc/man/erlang.html#system_info_time_correction)\n* [`erlang:system_info(start_time)`](http://www.erlang.org/doc/man/erlang.html#system_info_start_time)\n* [`erlang:system_info(end_time)`](http://www.erlang.org/doc/man/erlang.html#system_info_end_time)\n\n### time warp modes\n* \u30b7\u30b9\u30c6\u30e0\u306e\u6642\u9593\u304c\u5909\u308f\u3063\u305f\u6642\u306b\u30b7\u30b9\u30c6\u30e0\u306e\u6319\u52d5\u3092\u5909\u3048\u308b\n\n#### 2.6 Time Warp Modes | time correction\nhttp://www.erlang.org/doc/apps/erts/time_correction.html#Time_Warp_Modes\n\n* \u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u3092\u7528\u3044\u3066Erlang monotonic time\u3092\u52a0\u7b97\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u6c42\u3081\u308b\n* \u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u306f\u4f7f\u7528\u3059\u308b\u30bf\u30a4\u30e0\u30ef\u30fc\u30d7\u30e2\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u7570\u306a\u3063\u305f\u7ba1\u7406\u3092\u884c\u3046\n* `erl` \u30b3\u30de\u30f3\u30c9\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f `+C [no_time_warp | single_time_warp | multi_time_warp]`\n\n##### No Time Warp Mode\n* \u30e9\u30f3\u30bf\u30a4\u30e0\u30b7\u30b9\u30c6\u30e0\u306e\u958b\u59cb\u6642\u306b\u6c7a\u5b9a\u3057\u3001\u305d\u306e\u5f8c\u306f\u5909\u3048\u306a\u3044\n* \u30c7\u30d5\u30a9\u30eb\u30c8\n    * \u4eca\u307e\u3067\u306e\u30b7\u30b9\u30c6\u30e0\u306f\u3053\u306e\u6319\u52d5\u3068\u540c\u3058\n    * _\u3060\u304b\u3089\u4ed5\u65b9\u306a\u304f\u30c7\u30d5\u30a9\u30eb\u30c8\u2026_\n\n##### Single Time Warp Mode\n* Preliminary Phase\n    * \u6642\u9593\u88dc\u6b63\u304c\u6709\u52b9\u306a\u5834\u5408\n        * OS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u306f\u5225\u306b\u4e00\u5b9a\u5468\u6ce2\u6570\u306b\u306a\u308b\u3088\u3046\u306bErlang monotonic clock\u3092\u8abf\u6574\u3059\u308b\n        * OS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u4e56\u96e2\u3059\u308b\u53ef\u80fd\u6027\u306f\u3042\u308b\n    * \u6642\u9593\u88dc\u6b63\u304c\u7121\u52b9\u306a\u5834\u5408\n        * No Time Warp Mode\u3068\u540c\u3058\n* Final Phase\n    * `erlang:system_frag(time_offset, finalize)`\u3067\u6642\u9593\u3092\u78ba\u5b9a\u3055\u305b\u308b\n    * \u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30ba\u306f\u4e00\u5ea6\u3060\u3051\u884c\u308f\u308c\u308b\n    * OS\u306e\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u3068\u5408\u3046\u3088\u3046\u306b\u30aa\u30d5\u30bb\u30c3\u30c8\u304c\u8abf\u6574\u3055\u308c\u308b\n\u3053\u306e\u6a5f\u80fd\u3092\u9069\u5207\u306b\u4f7f\u3046\u306b\u306f2\u3064\u306e\u8981\u4ef6\u304c\u3042\u308b\n1. \u524d\u65b9\u306b\u30ef\u30fc\u30d7\u3067\u304d\u308b\u3053\u3068\n2. OS\u306e\u30b7\u30b9\u30c6\u30e0\u306e\u6642\u9593\u304c\u6b63\u78ba\u3067\u3042\u308b\u3053\u3068\n\n###### Multi Time Warp Mode\n* \u3088\u308a\u597d\u307e\u3057\u3044\u69cb\u6210\n* \u307b\u307c\u3059\u3079\u3066\u306e\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3067\u826f\u3044\u52d5\u4f5c\u3001\u826f\u3044\u30b9\u30b1\u30fc\u30eb\u3092\u884c\u3048\u308b\n* \u30aa\u30d5\u30bb\u30c3\u30c8\u6642\u9593\u306f\u3044\u3064\u3067\u3082\u5909\u66f4\u3057\u3046\u308b\n    * \u3088\u308a\u6b63\u78ba\u306a\u6642\u9593\u3092\u4f7f\u3048\u308b\n\n\u6642\u9593\u88dc\u6b63\u304c\u7121\u52b9\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\n\n* OS\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u304c\u524d\u65b9\u306b\u30ef\u30fc\u30d7\u3059\u308b\u3068Erlang monotonic clock\u3082\u524d\u65b9\u306b\u30ef\u30fc\u30d7\n* OS\u30b7\u30b9\u30c6\u30e0\u6642\u9593\u304c\u5f8c\u65b9\u306b\u30ef\u30fc\u30d7\u3059\u308b\u3068Erlang monotonic \u6642\u9593\u3092\u77ed\u6642\u9593\u505c\u6b62\u3055\u305b\u308b\u505c\u6b62\n\n## `-dialyzer()` \u5c5e\u6027\nhttp://www.erlang.org/doc/man/dialyzer.html#id60919\n* dialyze\u6642\u306b\u8b66\u544a\u3092\u6291\u5236\u3059\u308b\u305f\u3081\u306b\u4f7f\u3048\u308b\n\n### \u3042\u308b\u95a2\u6570\u306e\u8b66\u544a\u3092\u6291\u5236\n```erlang\n-dialyzer({nowarn_function, f/0}).\n```\n\n### improper lists \u306b\u5bfe\u3059\u308b\u8b66\u544a\u3092\u6291\u5236\n```erlang\n-dialyzer(no_improper_lists).\n```\n\n### warning\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6291\u5236\n```erlang\n-dialyzer({no_improper_lists, g/0}).\n-dialyzer({[no_return, no_match], [g/0, h/0]}).\n```\n\n### \u8b66\u544a\u3092\u30aa\u30f3\u306b\u3059\u308b\n```erlang\n-dialyzer(unmatched_returns).\n```\n\n## POODLE\u8106\u5f31\u6027\u306e\u305f\u3081\u306eTLS-1.0\nTODO: \u66f8\u304f\n\n## stdlib: supervisor\u306eflags\u3068child specs\u3067map\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n```erlang\n-spec Module:init(Args) -> Result when\n    Args :: term(),\n    Result :: {ok,{SupFlags,[ChildSpec]}} | ignore,\n    SupFlags :: sup_flags(),\n    ChildSpec :: child_spec().\n```\n\n```erlang\n-type sup_flags() :: #{strategy => strategy(),         % optional(default: one_for_one)\n                       intensity => non_neg_integer(), % optional(default: 1)\n                       period => pos_integer()}        % optional(default: 5)\n                    | {RestartStrategy :: strategy(),\n                       Intensity :: non_neg_integer(),\n                       Period :: pos_integer()}\n```\n\n```erlang\n-type child_spec() = #{id => child_id(),       % mandatory\n                       start => mfargs(),      % mandatory\n                       restart => restart(),   % optional(default: permanent)\n                       shutdown => shutdown(), % optional(default: 5000 if worker, infinity if supervisor)\n                       type => worker(),       % optional(default: worker)\n                       modules => modules()}   % optional(default: mfargs()\u306eM)\n                    | {Id :: child_id(),\n                       StartFunc :: mfargs(),\n                       Restart :: restart(),\n                       Shutdown :: shutdown(),\n                       Type :: worker(),\n                       Modules :: modules()}\n```\n\n## stdlib: ets\u306e\u65b0\u6a5f\u80fd\n### `ets:take/2`\nhttp://www.erlang.org/doc/man/ets.html#take-2\n\n`ets:delete/2` \u3068\u540c\u3058\u3088\u3046\u306b\u8981\u7d20\u3092\u524a\u9664\u3059\u308b\u3002\n\u9055\u3044\u306f **\u524a\u9664\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u8fd4\u3059** \u3068\u3053\u308d\n\n```erlang\n-spec delete(Tab, Key) -> true when\n      Tab :: ets:tab(),\n      Key :: term().\n      \n-spec take(Tab, Key) -> [Object] when\n      Tab :: ets:tab(),\n      Key :: term(),\n      Object :: tuple().\n```\n\n### `ets:update_counter/4`\nhttp://www.erlang.org/doc/man/ets.html#update_counter-4\n\u5f15\u6570\u3068\u3057\u3066\u30c7\u30d5\u30a9\u30eb\u30c8\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\uff08\u3053\u306e\u8fba\u308a\u5168\u7136\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u305d\u3082\u305d\u3082\u3053\u306e\u95a2\u6570\u304c\u4f55\u306a\u306e\u304b\u3001\u4f55\u304c\u5909\u308f\u3063\u305f\u306e\u304b\u2026\uff1b\uff09\n", "tags": ["Erlang"]}