{"context": " More than 1 year has passed since last update.\u30b0\u30ea\u30fc\u30f3\u3001\u30a4\u30a8\u30ed\u30fc\u3001\u30ec\u30c3\u30c9\u306e\u9806\u306b\u70b9\u706f\u3002\npackage main\nimport(\n    \"fmt\"\n    \"time\"\n    \"sync\"\n)\nvar mutex sync.Mutex\nfunc A() {\n    for {\n        mutex.Lock()\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"green on\")\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"green off\")\n        mutex.Unlock()\n        time.Sleep(1500 * time.Millisecond)\n    }\n}\nfunc B() {\n    for {\n        mutex.Lock()\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"yellow on\")\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"yellow off\")\n        mutex.Unlock()\n        time.Sleep(1500 * time.Millisecond)\n    }\n}\nfunc C() {\n    for {\n        mutex.Lock()\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"red on\")\n        time.Sleep(500 * time.Millisecond)\n        fmt.Println(\"red off\")\n        mutex.Unlock()\n        time.Sleep(1500 * time.Millisecond)\n    }\n}\nfunc main() {\n    go A()\n    go B()\n    go C()\n    var input string\n    fmt.Scanln(&input)\n}\n\n\u30b0\u30ea\u30fc\u30f3\u3001\u30a4\u30a8\u30ed\u30fc\u3001\u30ec\u30c3\u30c9\u306e\u9806\u306b\u70b9\u706f\u3002\n\n\n```\npackage main\nimport(\n\t\"fmt\"\n\t\"time\"\n\t\"sync\"\n)\nvar mutex sync.Mutex\nfunc A() {\n\tfor {\n\t\tmutex.Lock()\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"green on\")\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"green off\")\n\t\tmutex.Unlock()\n\t\ttime.Sleep(1500 * time.Millisecond)\n\t}\n}\nfunc B() {\n\tfor {\n\t\tmutex.Lock()\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"yellow on\")\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"yellow off\")\n\t\tmutex.Unlock()\n\t\ttime.Sleep(1500 * time.Millisecond)\n\t}\n}\nfunc C() {\n\tfor {\n\t\tmutex.Lock()\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"red on\")\n\t\ttime.Sleep(500 * time.Millisecond)\n\t\tfmt.Println(\"red off\")\n\t\tmutex.Unlock()\n\t\ttime.Sleep(1500 * time.Millisecond)\n\t}\n}\nfunc main() {\n\tgo A()\n\tgo B()\n\tgo C()\n\tvar input string\n\tfmt.Scanln(&input)\n}\n```\n", "tags": ["Go", "L\u30c1\u30ab"]}