{"context": "\n\n\u306f\u3058\u3081\u306b\niciql\u3067PostGIS\u306egeometry\u578b\u3092\u6271\u3046\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u899a\u3048\u66f8\u304d\u3067\u3059\u3002\n\n\u691c\u8a3c\u74b0\u5883\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u691c\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002 \n\u30fbJDK ... 8\n\u30fbPostgreSQL ... 9.6\n\u30fbPostGIS ... 2.3.1\n\u30fbiciql ... 2.1.1\n\u30fb\u305d\u306e\u4ed6\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\n\u3000postgresql-9.4.1211.jar\n\u3000postgis-jdbc-2.2.0.jar\n\nDataTypeAdapter\u306e\u5b9f\u88c5\nDataTypeAdapter\u3092\u4f7f\u3044\u307e\u3059\u3002\nhttp://iciql.com/dta/\npackage sample.iciql;\n\nimport org.postgis.PGgeometry;\n\nimport com.iciql.Iciql.DataTypeAdapter;\nimport com.iciql.Iciql.Mode;\n\npublic class PgGeometryAdapter implements DataTypeAdapter<PGgeometry> {\n    Mode mode;\n\n    /* (non-Javadoc)\n     * @see com.iciql.Iciql.DataTypeAdapter#getDataType()\n     */\n    @Override\n    public String getDataType() {\n        return \"geometry\";\n    }\n\n    /* (non-Javadoc)\n     * @see com.iciql.Iciql.DataTypeAdapter#getJavaType()\n     */\n    @Override\n    public Class<PGgeometry> getJavaType() {\n        return PGgeometry.class;\n    }\n\n    /* (non-Javadoc)\n     * @see com.iciql.Iciql.DataTypeAdapter#setMode(com.iciql.Iciql.Mode)\n     */\n    @Override\n    public void setMode(Mode mode) {\n        this.mode = mode;\n    }\n\n    /* (non-Javadoc)\n     * @see com.iciql.Iciql.DataTypeAdapter#serialize(java.lang.Object)\n     */\n    @Override\n    public Object serialize(PGgeometry value) {\n        return value;\n    }\n\n    /* (non-Javadoc)\n     * @see com.iciql.Iciql.DataTypeAdapter#deserialize(java.lang.Object)\n     */\n    @Override\n    public PGgeometry deserialize(Object value) {\n        return (PGgeometry)value;\n    }\n\n\n\n}\n\n\nModel\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\npackage sample.iciql;\n\nimport java.io.Serializable;\nimport org.postgis.PGgeometry;\nimport com.iciql.Iciql.IQColumn;\nimport com.iciql.Iciql.IQSchema;\nimport com.iciql.Iciql.IQTable;\nimport com.iciql.Iciql.TypeAdapter;\n\n@IQSchema(\"sample\")\n@IQTable(\n        name=\"sample_table\", \n        primaryKey={ \"id\" })\npublic class SampleModel implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @IQColumn(nullable=false)\n    public Integer id;\n\n    @IQColumn(nullable=true)\n    @TypeAdapter(PgGeometryAdapter.class)\n    public PGgeometry geometry;\n\n    public SampleModel() {\n    }\n}\n\n\n\u30ec\u30b3\u30fc\u30c9\u633f\u5165\u306e\u30b5\u30f3\u30d7\u30eb\npackage sample.iciql;\n\nimport org.postgis.PGgeometry;\nimport com.iciql.Db;\n\npublic class IciqlSample {\n\n    public static void main(String[] args) throws Exception {\n        String url = \"jdbc:postgresql://localhost:5432/sample\";\n        String user = \"sample\";\n        String password = \"xxxx\";\n        try (Db db = Db.open(url, user, password)) {\n            SampleModel rec = new SampleModel();\n            rec.id = 1;\n            rec.geometry = new PGgeometry(\"POINT(10 11\");\n            db.insert(rec);\n        }\n    }\n\n}\n\n# \u306f\u3058\u3081\u306b\niciql\u3067PostGIS\u306egeometry\u578b\u3092\u6271\u3046\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306e\u899a\u3048\u66f8\u304d\u3067\u3059\u3002\n\n# \u691c\u8a3c\u74b0\u5883\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u691c\u8a3c\u3057\u3066\u3044\u307e\u3059\u3002 \n\u30fbJDK ... 8\n\u30fbPostgreSQL ... 9.6\n\u30fbPostGIS ... 2.3.1\n\u30fbiciql ... 2.1.1\n\u30fb\u305d\u306e\u4ed6\u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\n\u3000postgresql-9.4.1211.jar\n\u3000postgis-jdbc-2.2.0.jar\n\n# DataTypeAdapter\u306e\u5b9f\u88c5\nDataTypeAdapter\u3092\u4f7f\u3044\u307e\u3059\u3002\nhttp://iciql.com/dta/\n\n```java\npackage sample.iciql;\n\nimport org.postgis.PGgeometry;\n\nimport com.iciql.Iciql.DataTypeAdapter;\nimport com.iciql.Iciql.Mode;\n\npublic class PgGeometryAdapter implements DataTypeAdapter<PGgeometry> {\n\tMode mode;\n\n\t/* (non-Javadoc)\n\t * @see com.iciql.Iciql.DataTypeAdapter#getDataType()\n\t */\n\t@Override\n\tpublic String getDataType() {\n\t\treturn \"geometry\";\n\t}\n\n\t/* (non-Javadoc)\n\t * @see com.iciql.Iciql.DataTypeAdapter#getJavaType()\n\t */\n\t@Override\n\tpublic Class<PGgeometry> getJavaType() {\n\t\treturn PGgeometry.class;\n\t}\n\n\t/* (non-Javadoc)\n\t * @see com.iciql.Iciql.DataTypeAdapter#setMode(com.iciql.Iciql.Mode)\n\t */\n\t@Override\n\tpublic void setMode(Mode mode) {\n\t\tthis.mode = mode;\n\t}\n\n\t/* (non-Javadoc)\n\t * @see com.iciql.Iciql.DataTypeAdapter#serialize(java.lang.Object)\n\t */\n\t@Override\n\tpublic Object serialize(PGgeometry value) {\n\t\treturn value;\n\t}\n\n\t/* (non-Javadoc)\n\t * @see com.iciql.Iciql.DataTypeAdapter#deserialize(java.lang.Object)\n\t */\n\t@Override\n\tpublic PGgeometry deserialize(Object value) {\n\t\treturn (PGgeometry)value;\n\t}\n\t\n\t\n\n}\n```\n\n# Model\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n```java\npackage sample.iciql;\n\nimport java.io.Serializable;\nimport org.postgis.PGgeometry;\nimport com.iciql.Iciql.IQColumn;\nimport com.iciql.Iciql.IQSchema;\nimport com.iciql.Iciql.IQTable;\nimport com.iciql.Iciql.TypeAdapter;\n\n@IQSchema(\"sample\")\n@IQTable(\n        name=\"sample_table\", \n        primaryKey={ \"id\" })\npublic class SampleModel implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n    @IQColumn(nullable=false)\n    public Integer id;\n\n    @IQColumn(nullable=true)\n    @TypeAdapter(PgGeometryAdapter.class)\n    public PGgeometry geometry;\n\n    public SampleModel() {\n    }\n}\n```\n\n# \u30ec\u30b3\u30fc\u30c9\u633f\u5165\u306e\u30b5\u30f3\u30d7\u30eb\n```java\npackage sample.iciql;\n\nimport org.postgis.PGgeometry;\nimport com.iciql.Db;\n\npublic class IciqlSample {\n\t\n\tpublic static void main(String[] args) throws Exception {\n\t\tString url = \"jdbc:postgresql://localhost:5432/sample\";\n\t\tString user = \"sample\";\n\t\tString password = \"xxxx\";\n\t\ttry (Db db = Db.open(url, user, password)) {\n\t\t\tSampleModel rec = new SampleModel();\n\t\t\trec.id = 1;\n\t\t\trec.geometry = new PGgeometry(\"POINT(10 11\");\n\t\t\tdb.insert(rec);\n\t\t}\n\t}\n\n}\n```\n", "tags": ["iciql", "PostGIS"]}