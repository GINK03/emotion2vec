{"context": "\n\n\u691c\u8a3c\u74b0\u5883\n\nCPU: Pentium Dual Core CPU E6300 (2.80GHz)\n\u30e1\u30e2\u30ea: 2.00GB\nOS: Windows 10(32 bit)\nOffice: Excel 2016\n\n\n\u4e3b\u306a\u6a5f\u80fd\n\n\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b574\u6841(\u6307\u5b9a\u6841\u6570\u5206\uff09\u3092\u5de60\u57cb\u3081\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\n100\u56de\u51e6\u7406\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u5f8c\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002O(n)\u3067\u306e\u6700\u901f\u51e6\u7406\u3092\u76ee\u6307\u3057\u307e\u3057\u305f\u3002\n\n\n\u4f5c\u6210\u306e\u80cc\u666f\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u306e\u30c4\u30fc\u30eb\u3068\u3057\u3066\u3001\u5171\u901a\u90e8\u6570\u7a2e\u985e\u3068\u672b\u5c3e\u90e8\u6570\u5b574\u6841\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u751f\u6210\u3057\u305f\u3044\u305f\u3081\n\u8ffd\u52a0\uff1a\u6c4e\u7528\u6027\u3092\u3082\u305f\u305b\u308b\u305f\u3081\u3001\u751f\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u82e5\u5e72\u5909\u66f4\n\n\n\u4eca\u5f8c\u3067\u304d\u305d\u3046\u306a\u3053\u3068\n\n\n\u9577\u3044\u6587\u5b57\u5217\u3078\u306e\u5bfe\u5fdc\uff08\u73fe\u57284\u6841\u307e\u3067\u30014\u6841\u4ee5\u4e0a\u306f\u30eb\u30fc\u30d7\u3055\u305b\u3066\u5207\u308a\u51fa\u3057\uff09\uff08\u5b8c\u4e86\uff09\n\u2192\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5927\u5e45\u6539\u5584\u3057\u3001\u51e6\u7406\u901f\u5ea6\u304c\u7d0450\u500d\uff5e5\u500d\u306b\u7e2e\u5c0f\u3002\u305f\u3060\u3057\u6587\u5b57\u5217\u9577\u4f9d\u5b58\u306eO(n)\u306b\u3002\n\u2192\u305f\u3060\u30011\u6587\u5b57\u3042\u305f\u308a\u306e\u5897\u52a0\u7387\u304c\u591a\u304f\u3066\u308210%\u7a0b\u5ea6\u3067\u30011000\u6587\u5b57\u3067\u63a8\u5b9a\u7d0420(s)\u3002\n16\u9032\u6570\u5bfe\u5fdc\n\u82f1\u6570\u5b57\u5bfe\u5fdc\uff08\u5927\u6587\u5b57\u306e\u307f\u2192\u5c0f\u6587\u5b57\u542b\u3080\u3082\u306e\u3078\u62e1\u5f35\uff09\n\n\n\u30e1\u30a4\u30f3\u306e\u30bd\u30fc\u30b9\n\nGetRandomDigitsUtil.bas\nPublic Function GetRandom4Digit(Optional ByVal digit As Integer = 4) As String\n    Dim longVal As Long\n    Dim passStr As String\n    Dim charVal As String\n    Dim charIdx As Long, loopCount As Integer\n\n    passStr = \"\"\n    longVal = 0\n\n    Do While Len(GetRandom4Digit) < digit\n        Randomize\n        passStr = CStr(Rnd)\n        Randomize\n        passStr = passStr & CStr(Rnd)\n        passStr = Replace(passStr, \"0.\", \"\")\n        passStr = Replace(passStr, \".\", \"\")\n        passStr = Replace(passStr, \"E-\", \"\")\n\n        ' \u524d\u56de\u306e\u3053\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u524d\u534a\u3092\u6d41\u7528\n        For charIdx = 1 To Len(passStr)\n            ' \u3053\u3053\u3067\u3082\u30464\u6841\u5206\u3092\u6570\u5024\u5316\u3001For\u6587\u30671\u6587\u5b57(1\u6841)\u305a\u3064\u30b7\u30d5\u30c8\n            longVal = longVal + CLng(Mid$(passStr, charIdx, 4))\n\n            ' 5\u6841\u306b\u306a\u3063\u305f\u3089\u4e0b1\u6841\u3092\u7d50\u679c\u306b\u8ffd\u8a18\u3001\u53f31\u6841\u30b7\u30d5\u30c8\u3057\u305f\u3082\u306e\u3092\u65b0\u305f\u306a\u5024\u3068\u3059\u308b\n            If longVal >= 10000 Then\n                GetRandom4Digit = GetRandom4Digit & Right(CStr(longVal), 1)\n                longVal = CLng(Left(CStr(longVal), Len(CStr(longVal)) - 1))\n            End If\n            DoEvents\n        Next\n    Loop\n\n    GetRandom4Digit = Left(GetRandom4Digit, digit)\nEnd Function\n\n\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c6\u30b9\u30c8\n\n100\u56de\u5206\u306e\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\uff08\u7d50\u679c\u306e\u8868\u306f25\u6587\u5b57\u4ee5\u964d\u306f30\u304b\u308910\u3054\u3068\uff09\n\n\n\u7d50\u679c\n\n\uff08\u6587\u5b57\u5217\u9577-\u51e6\u7406\u6642\u9593/100\u56de-\u524d\u56de\u6bd4\uff09\n\n\n\n\u751f\u6210\u6587\u5b57\u5217\u9577\n\u51e6\u7406\u6642\u9593(s)\n\u524d\u56de\u6bd4\n\n\n\n\n1\n0.320\n-\n\n\n2\n0.227\n-29.27%\n\n\n3\n0.266\n17.24%\n\n\n4\n0.242\n-8.82%\n\n\n5\n0.258\n6.45%\n\n\n6\n0.313\n21.21%\n\n\n7\n0.313\n0.00%\n\n\n8\n0.313\n0.00%\n\n\n9\n0.344\n10.00%\n\n\n10\n0.375\n9.09%\n\n\n11\n0.398\n6.25%\n\n\n12\n0.414\n3.92%\n\n\n13\n0.430\n3.77%\n\n\n14\n0.445\n3.64%\n\n\n15\n0.453\n1.75%\n\n\n16\n0.477\n5.17%\n\n\n17\n0.555\n16.39%\n\n\n18\n0.531\n-4.23%\n\n\n19\n0.547\n2.94%\n\n\n20\n0.563\n2.86%\n\n\n21\n0.594\n5.56%\n\n\n22\n0.609\n2.63%\n\n\n23\n0.609\n0.00%\n\n\n24\n0.656\n7.69%\n\n\n25\n0.672\n2.38%\n\n\n30\n0.758\n-\n\n\n40\n0.953\n-\n\n\n50\n1.125\n-\n\n\n60\n1.367\n-\n\n\n70\n1.563\n-\n\n\n80\n1.750\n-\n\n\n90\n2.008\n-\n\n\n100\n2.156\n-\n\n\n\n\n\n\u30c6\u30b9\u30c8\u7528\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\n\nTestProc.bas\n'\u30c6\u30b9\u30c8\u7528\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3(100\u56de\u30c6\u30b9\u30c8)\nPrivate Sub Test(ByVal lenLimit As Integer, ByVal rng As Range)\n    Dim startTime As Single, beginProc As Single, endProc As Single, timeProc As Single\n    Dim idx As Integer\n    Dim offsetLimit As Integer, sampleDigit As Long\n    Dim resultStr As String, tempLng As Long\n    Dim y0 As Integer, y1 As Single, x0 As Single, x1 As Single\n    Dim nextRate As Single\n    resultStr = \"\"\n\n    offsetLimit = WorksheetFunction.Min(lenLimit, 0)\n\n    startTime = Timer\n    beginProc = 0\n\n    sampleDigit = 100\n\n    For idx = 1 To 100\n        resultStr = \"\"\n        beginProc = Timer\n\n        Do\n            resultStr = resultStr & GetRandom4Digit(lenLimit)\n        Loop While Len(resultStr) < lenLimit\n\n        resultStr = Left(resultStr, lenLimit)\n        Debug.Print \"Result: \" & resultStr & \"(\" & Len(resultStr) & \")\"\n\n        endProc = Timer\n        timeProc = endProc - beginProc\n    Next\n\n    With rng\n        .Offset(0, 1).NumberFormat = \"0.000\"\n        .Offset(0, 1).Value = (Timer - startTime)\n        If .Row = 2 Then\n            .Offset(0, 2).Value = \"-\"\n        Else\n            .Offset(0, 2).NumberFormat = \"0.00%\"\n            .Offset(0, 2).Value = (.Offset(0, 1).Value / .Offset(-1, 1).Value) - 1\n        End If\n    End With\nEnd Sub\n\nPublic Sub TestMain()\n    Dim wkSht As Worksheet, rng As Range\n    Dim lenCount As Integer\n    Call FindSheet(\"benchmarkTest\", wkSht, False, True, ThisWorkbook)\n\n    Set rng = wkSht.Cells(1, 1)\n    With rng\n        .Value = \"len\"\n        .Offset(0, 1).Value = \"Time(s)\"\n        .Offset(0, 2).Value = \"rate\"\n    End With\n\n    For lenCount = 1 To 100\n        Set rng = wkSht.Cells(lenCount + 1, 1)\n        With rng\n            .Value = lenCount\n            .Interior.Color = RGB(192, 192, 128)\n            .Offset(0, 1).Interior.Color = RGB(192, 192, 128)\n        End With\n\n        Call Test(lenCount, rng)\n\n        With rng\n            .Interior.ColorIndex = 0\n            .Offset(0, 1).Interior.ColorIndex = 0\n        End With\n    Next\n\n    wkSht.Activate\nEnd Sub\n\n\n\n#\u691c\u8a3c\u74b0\u5883\n \n- CPU: Pentium Dual Core CPU E6300 (2.80GHz)\n- \u30e1\u30e2\u30ea: 2.00GB\n- OS: Windows 10(32 bit)\n- Office: Excel 2016\n\n#\u4e3b\u306a\u6a5f\u80fd\n- \u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57~~4\u6841~~(\u6307\u5b9a\u6841\u6570\u5206\uff09\u3092\u5de60\u57cb\u3081\u306e\u6587\u5b57\u5217\u3068\u3057\u3066\u51fa\u529b\u3059\u308b\n- 100\u56de\u51e6\u7406\u306e\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c6\u30b9\u30c8\u7d50\u679c\u3092\u5f8c\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002O(n)\u3067\u306e\u6700\u901f\u51e6\u7406\u3092\u76ee\u6307\u3057\u307e\u3057\u305f\u3002\n\n##\u4f5c\u6210\u306e\u80cc\u666f\n- \u30d1\u30b9\u30ef\u30fc\u30c9\u7ba1\u7406\u306e\u30c4\u30fc\u30eb\u3068\u3057\u3066\u3001\u5171\u901a\u90e8\u6570\u7a2e\u985e\u3068\u672b\u5c3e\u90e8\u6570\u5b574\u6841\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u751f\u6210\u3057\u305f\u3044\u305f\u3081\n- \u8ffd\u52a0\uff1a\u6c4e\u7528\u6027\u3092\u3082\u305f\u305b\u308b\u305f\u3081\u3001\u751f\u6210\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u82e5\u5e72\u5909\u66f4\n\n##\u4eca\u5f8c\u3067\u304d\u305d\u3046\u306a\u3053\u3068\n- ~~\u9577\u3044\u6587\u5b57\u5217\u3078\u306e\u5bfe\u5fdc\uff08\u73fe\u57284\u6841\u307e\u3067\u30014\u6841\u4ee5\u4e0a\u306f\u30eb\u30fc\u30d7\u3055\u305b\u3066\u5207\u308a\u51fa\u3057\uff09~~\uff08\u5b8c\u4e86\uff09\n- \u2192\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5927\u5e45\u6539\u5584\u3057\u3001\u51e6\u7406\u901f\u5ea6\u304c\u7d0450\u500d\uff5e5\u500d\u306b\u7e2e\u5c0f\u3002\u305f\u3060\u3057\u6587\u5b57\u5217\u9577\u4f9d\u5b58\u306eO(n)\u306b\u3002\n- \u2192\u305f\u3060\u30011\u6587\u5b57\u3042\u305f\u308a\u306e\u5897\u52a0\u7387\u304c\u591a\u304f\u3066\u308210%\u7a0b\u5ea6\u3067\u30011000\u6587\u5b57\u3067\u63a8\u5b9a\u7d0420(s)\u3002\n- 16\u9032\u6570\u5bfe\u5fdc\n- \u82f1\u6570\u5b57\u5bfe\u5fdc\uff08\u5927\u6587\u5b57\u306e\u307f\u2192\u5c0f\u6587\u5b57\u542b\u3080\u3082\u306e\u3078\u62e1\u5f35\uff09\n\n\n##\u30e1\u30a4\u30f3\u306e\u30bd\u30fc\u30b9\n```VB.net:GetRandomDigitsUtil.bas\nPublic Function GetRandom4Digit(Optional ByVal digit As Integer = 4) As String\n    Dim longVal As Long\n    Dim passStr As String\n    Dim charVal As String\n    Dim charIdx As Long, loopCount As Integer\n\n    passStr = \"\"\n    longVal = 0\n\n    Do While Len(GetRandom4Digit) < digit\n        Randomize\n        passStr = CStr(Rnd)\n        Randomize\n        passStr = passStr & CStr(Rnd)\n        passStr = Replace(passStr, \"0.\", \"\")\n        passStr = Replace(passStr, \".\", \"\")\n        passStr = Replace(passStr, \"E-\", \"\")\n        \n        ' \u524d\u56de\u306e\u3053\u306e\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\u306e\u524d\u534a\u3092\u6d41\u7528\n        For charIdx = 1 To Len(passStr)\n            ' \u3053\u3053\u3067\u3082\u30464\u6841\u5206\u3092\u6570\u5024\u5316\u3001For\u6587\u30671\u6587\u5b57(1\u6841)\u305a\u3064\u30b7\u30d5\u30c8\n            longVal = longVal + CLng(Mid$(passStr, charIdx, 4))\n            \n            ' 5\u6841\u306b\u306a\u3063\u305f\u3089\u4e0b1\u6841\u3092\u7d50\u679c\u306b\u8ffd\u8a18\u3001\u53f31\u6841\u30b7\u30d5\u30c8\u3057\u305f\u3082\u306e\u3092\u65b0\u305f\u306a\u5024\u3068\u3059\u308b\n            If longVal >= 10000 Then\n                GetRandom4Digit = GetRandom4Digit & Right(CStr(longVal), 1)\n                longVal = CLng(Left(CStr(longVal), Len(CStr(longVal)) - 1))\n            End If\n            DoEvents\n        Next\n    Loop\n    \n    GetRandom4Digit = Left(GetRandom4Digit, digit)\nEnd Function\n```\n\n#\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u30c6\u30b9\u30c8\n- 100\u56de\u5206\u306e\u51e6\u7406\u6642\u9593\u3092\u8a08\u6e2c\uff08\u7d50\u679c\u306e\u8868\u306f25\u6587\u5b57\u4ee5\u964d\u306f30\u304b\u308910\u3054\u3068\uff09\n\n##\u7d50\u679c\n###\uff08\u6587\u5b57\u5217\u9577-\u51e6\u7406\u6642\u9593/100\u56de-\u524d\u56de\u6bd4\uff09\n|\u751f\u6210\u6587\u5b57\u5217\u9577|\u51e6\u7406\u6642\u9593(s)|\u524d\u56de\u6bd4|\n|-----------:|-----------:|-----:|\n|1|0.320|-|\n|2|0.227|-29.27%|\n|3|0.266|17.24%|\n|4|0.242|-8.82%|\n|5|0.258|6.45%|\n|6|0.313|21.21%|\n|7|0.313|0.00%|\n|8|0.313|0.00%|\n|9|0.344|10.00%|\n|10|0.375|9.09%|\n|11|0.398|6.25%|\n|12|0.414|3.92%|\n|13|0.430|3.77%|\n|14|0.445|3.64%|\n|15|0.453|1.75%|\n|16|0.477|5.17%|\n|17|0.555|16.39%|\n|18|0.531|-4.23%|\n|19|0.547|2.94%|\n|20|0.563|2.86%|\n|21|0.594|5.56%|\n|22|0.609|2.63%|\n|23|0.609|0.00%|\n|24|0.656|7.69%|\n|25|0.672|2.38%|\n|30|0.758|-|\n|40|0.953|-|\n|50|1.125|-|\n|60|1.367|-|\n|70|1.563|-|\n|80|1.750|-|\n|90|2.008|-|\n|100|2.156|-|\n\n![ScreenClip (1).png](https://qiita-image-store.s3.amazonaws.com/0/114324/9fbb3530-d234-78f4-b979-ebbfdc3ef941.png)\n\n###\u30c6\u30b9\u30c8\u7528\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3\n```Vb.net:TestProc.bas\n'\u30c6\u30b9\u30c8\u7528\u30d7\u30ed\u30b7\u30fc\u30b8\u30e3(100\u56de\u30c6\u30b9\u30c8)\nPrivate Sub Test(ByVal lenLimit As Integer, ByVal rng As Range)\n    Dim startTime As Single, beginProc As Single, endProc As Single, timeProc As Single\n    Dim idx As Integer\n    Dim offsetLimit As Integer, sampleDigit As Long\n    Dim resultStr As String, tempLng As Long\n    Dim y0 As Integer, y1 As Single, x0 As Single, x1 As Single\n    Dim nextRate As Single\n    resultStr = \"\"\n    \n    offsetLimit = WorksheetFunction.Min(lenLimit, 0)\n\n    startTime = Timer\n    beginProc = 0\n    \n    sampleDigit = 100\n    \n    For idx = 1 To 100\n        resultStr = \"\"\n        beginProc = Timer\n        \n        Do\n            resultStr = resultStr & GetRandom4Digit(lenLimit)\n        Loop While Len(resultStr) < lenLimit\n        \n        resultStr = Left(resultStr, lenLimit)\n        Debug.Print \"Result: \" & resultStr & \"(\" & Len(resultStr) & \")\"\n        \n        endProc = Timer\n        timeProc = endProc - beginProc\n    Next\n    \n    With rng\n        .Offset(0, 1).NumberFormat = \"0.000\"\n        .Offset(0, 1).Value = (Timer - startTime)\n        If .Row = 2 Then\n            .Offset(0, 2).Value = \"-\"\n        Else\n            .Offset(0, 2).NumberFormat = \"0.00%\"\n            .Offset(0, 2).Value = (.Offset(0, 1).Value / .Offset(-1, 1).Value) - 1\n        End If\n    End With\nEnd Sub\n\nPublic Sub TestMain()\n    Dim wkSht As Worksheet, rng As Range\n    Dim lenCount As Integer\n    Call FindSheet(\"benchmarkTest\", wkSht, False, True, ThisWorkbook)\n    \n    Set rng = wkSht.Cells(1, 1)\n    With rng\n        .Value = \"len\"\n        .Offset(0, 1).Value = \"Time(s)\"\n        .Offset(0, 2).Value = \"rate\"\n    End With\n    \n    For lenCount = 1 To 100\n        Set rng = wkSht.Cells(lenCount + 1, 1)\n        With rng\n            .Value = lenCount\n            .Interior.Color = RGB(192, 192, 128)\n            .Offset(0, 1).Interior.Color = RGB(192, 192, 128)\n        End With\n        \n        Call Test(lenCount, rng)\n        \n        With rng\n            .Interior.ColorIndex = 0\n            .Offset(0, 1).Interior.ColorIndex = 0\n        End With\n    Next\n    \n    wkSht.Activate\nEnd Sub\n\n```\n", "tags": ["Excel", "ExcelVBA"]}