{"context": "\n\n\uff08\uff11\uff09GHCi\u74b0\u5883 \u3067 \u8907\u6570\u884c\u5165\u529b \u3059\u308b \u65b9\u6cd5\n\n\u3044\u304f\u3064\u304b \u3084\u308a\u65b9 \u304c \u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u6574\u7406\u3057\u3066 \u5217\u6319\u3057\u307e\u3059\u3002\n\n\n\uff08 \u65b9\u6cd5\uff11 )\n\n\n:set +m\n\n\u3067\u3001GHCi \u3092\u3001\u8907\u6570\u884c \u5165\u529b\u3067\u304d\u308b\u30e2\u30fc\u30c9 \u306b \u8a2d\u5b9a\u3059\u308b\n\nsmellman\u3055\u3093 Qiita\u8a18\u4e8b\u300cghci\u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u300d\n\n\uff08 \uff11\u884c\u76ee \u306b \u30a4\u30f3\u30c7\u30f3\u30c8\u4f4d\u7f6e \u3092 \u63c3\u3048\u306a\u3044\u3068\u3001\u30a8\u30e9\u30fc \u306b \u306a\u308b \uff09\n\nGHCi\nPrelude> :set +m\nPrelude> let square :: Int -> Int\nPrelude| square x = x * x\n\n<interactive>:49:1: parse error on input \u2018square\u2019\n\n\n\nGHCi\nPrelude> let square :: Int -> Int\nPrelude|  square x = x * x\n\n<interactive>:51:2: parse error on input \u2018square\u2019\n\n\n\nsquare \u306e s\u5b57\u4f4d\u7f6e \u306e \u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u63c3\u3048\u308b\u3068\u3001OK\n\nGHCi\nPrelude> let square :: Int -> Int\nPrelude|     square x = x * x\nPrelude| \nPrelude> \nPrelude> :t square\nsquare :: Int -> Int\nPrelude>\n\n\n\n\n\uff08 \u65b9\u6cd5\uff12 )\n\n\u5f0f\u306e\u9014\u4e2d\u3067\u3001\u30bb\u30df\u30b3\u30ed\u30f3 \u3092 \u4ed8\u3051\u308b\u3002\n\nshuhei\u3055\u3093 Qiita\u8a18\u4e8b \u300cGHCI \u3067\u95a2\u6570\u306e\u578b\u5ba3\u8a00\u3092\u3059\u308b\u300d\n\n\n\n\uff08 \u65b9\u6cd5\uff13 )\n\n\n:{\n\n\u3068\n\n:}\n\n\u3067\u3001\u5f0f\u5168\u4f53 \u3092 \u56f2\u3080\u3002\n\nHatena::Ddiary\u300csirocco \u306e\u66f8\u3044\u3066\u3082\u3059\u3050\u306b\u5fd8\u308c\u308b\u30e1\u30e2\u300dGHCi\u3067\u8907\u6570\u884c\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\nSarabande.jp \u300cHaskell: GHCi \u306e\u4e2d\u3067\u95a2\u6570\u306e\u578b\u5ba3\u8a00\u3092\u3059\u308b\u300d\n\n\n\n\uff08\uff12\uff09\u95a2\u6570\u30b7\u30b0\u30cd\u30c1\u30e3 & \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5f0f\u30fb\u30ac\u30fc\u30c9\u6761\u4ef6\u5f0f \u3092 \u542b\u3080 \u95a2\u6570\u5b9a\u7fa9\u3092 \u66f8\u304f\n\n\u65b9\u6cd5\uff11\u3067\u3001\u4ee5\u4e0b\u306e\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n\n\n\u95a2\u6570\u30b7\u30b0\u30cd\u30c1\u30e3\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5f0f\n\u30ac\u30fc\u30c9\u6761\u4ef6\u5f0f\n\n\n\u4ed8\u304d \u306e \u95a2\u6570\u5b9a\u7fa9 \u3092 \u66f8\u3044\u3066\u307f\u308b\u3002\n\n\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc Haskell > \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\n\n( \u95a2\u6570\u5b9a\u7fa9 )\n\n\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 \u3068 \u30ac\u30fc\u30c9\u5f0f \u3092 \u542b\u3080\u95a2\u6570 \u3092 \u5b9a\u7fa9\n\n\nGHCi\nPrelude> let power :: Int -> Double -> Double\nPrelude|     power 0 _             = 1.0\nPrelude|     power x y | x > 0     = y * power (x - 1) y\nPrelude|               | otherwise = 1.0 / power (- x) y\nPrelude| \nPrelude>\n\n\n( \u95a2\u6570\u306e\u578b \u78ba\u8a8d )\n\nGHCi\nPrelude> :t power\npower :: Int -> Double -> Double\n>\n\n\n( \u95a2\u6570\u306e\u6319\u52d5 \u78ba\u8a8d )\n\nGHCi\nPrelude> power 3 4\n64.0\nPrelude> power 1 4\n4.0\nPrelude> power 4 1\n1.0\nPrelude> power 100 1\n1.0\nPrelude> power 0 1\n1.0\nPrelude> power 2 3\n9.0\nPrelude> power 4 3\n81.0\nPrelude> \n\n\n\n##__\uff08\uff11\uff09GHCi\u74b0\u5883 \u3067 \u8907\u6570\u884c\u5165\u529b \u3059\u308b \u65b9\u6cd5__\n\n\u3044\u304f\u3064\u304b \u3084\u308a\u65b9 \u304c \u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u6574\u7406\u3057\u3066 \u5217\u6319\u3057\u307e\u3059\u3002\n___\n\n####__\uff08 \u65b9\u6cd5\uff11 )__\n\n> :set +m\n\n\u3067\u3001GHCi \u3092\u3001\u8907\u6570\u884c \u5165\u529b\u3067\u304d\u308b\u30e2\u30fc\u30c9 \u306b \u8a2d\u5b9a\u3059\u308b\n\n* [smellman\u3055\u3093 Qiita\u8a18\u4e8b\u300cghci\u3067\u306e\u95a2\u6570\u5b9a\u7fa9\u300d](http://qiita.com/smellman/items/708be678df00d4f7529c)\n\n__\uff08 \uff11\u884c\u76ee \u306b \u30a4\u30f3\u30c7\u30f3\u30c8\u4f4d\u7f6e \u3092 \u63c3\u3048\u306a\u3044\u3068\u3001\u30a8\u30e9\u30fc \u306b \u306a\u308b \uff09__\n\n```{haskell:GHCi}\nPrelude> :set +m\nPrelude> let square :: Int -> Int\nPrelude| square x = x * x\n\n<interactive>:49:1: parse error on input \u2018square\u2019\n```\n\n\n```{haskell:GHCi}\nPrelude> let square :: Int -> Int\nPrelude|  square x = x * x\n\n<interactive>:51:2: parse error on input \u2018square\u2019\n```\n\n___\n\nsquare \u306e s\u5b57\u4f4d\u7f6e \u306e \u30a4\u30f3\u30c7\u30f3\u30c8\u3092\u63c3\u3048\u308b\u3068\u3001OK\n\n```{haskell:GHCi}\nPrelude> let square :: Int -> Int\nPrelude|     square x = x * x\nPrelude| \nPrelude> \nPrelude> :t square\nsquare :: Int -> Int\nPrelude>\n```\n\n___\n\n####__\uff08 \u65b9\u6cd5\uff12 )__\n\n\u5f0f\u306e\u9014\u4e2d\u3067\u3001\u30bb\u30df\u30b3\u30ed\u30f3 \u3092 \u4ed8\u3051\u308b\u3002\n\n* [shuhei\u3055\u3093 Qiita\u8a18\u4e8b \u300cGHCI \u3067\u95a2\u6570\u306e\u578b\u5ba3\u8a00\u3092\u3059\u308b\u300d](http://qiita.com/shuhei/items/be8a0d280197a08f303b)\n\n___\n\n####__\uff08 \u65b9\u6cd5\uff13 )__\n\n> :{\n\n\u3068\n\n> :}\n\n\u3067\u3001\u5f0f\u5168\u4f53 \u3092 \u56f2\u3080\u3002\n\n* [Hatena::Ddiary\u300csirocco \u306e\u66f8\u3044\u3066\u3082\u3059\u3050\u306b\u5fd8\u308c\u308b\u30e1\u30e2\u300dGHCi\u3067\u8907\u6570\u884c\u306e\u95a2\u6570\u3092\u5b9a\u7fa9](http://d.hatena.ne.jp/sirocco/20090417/1239994537)\n\n* [Sarabande.jp \u300cHaskell: GHCi \u306e\u4e2d\u3067\u95a2\u6570\u306e\u578b\u5ba3\u8a00\u3092\u3059\u308b\u300d](http://blog.sarabande.jp/post/13651885099)\n\n___\n\n##__\uff08\uff12\uff09\u95a2\u6570\u30b7\u30b0\u30cd\u30c1\u30e3 & \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5f0f\u30fb\u30ac\u30fc\u30c9\u6761\u4ef6\u5f0f \u3092 \u542b\u3080 \u95a2\u6570\u5b9a\u7fa9\u3092 \u66f8\u304f__\n\n\u65b9\u6cd5\uff11\u3067\u3001\u4ee5\u4e0b\u306e\u30a6\u30a7\u30d6\u30da\u30fc\u30b8\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\n\n___\n\n* \u95a2\u6570\u30b7\u30b0\u30cd\u30c1\u30e3\n* \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u5f0f\n* \u30ac\u30fc\u30c9\u6761\u4ef6\u5f0f\n\n___\n\n\u4ed8\u304d \u306e \u95a2\u6570\u5b9a\u7fa9 \u3092 \u66f8\u3044\u3066\u307f\u308b\u3002\n\n* [\u30a6\u30a9\u30fc\u30af\u30b9\u30eb\u30fc Haskell > \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0](http://walk.wgag.net/haskell/pattern.html)\n\n__( \u95a2\u6570\u5b9a\u7fa9 )__\n\n* \u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1 \u3068 \u30ac\u30fc\u30c9\u5f0f \u3092 \u542b\u3080\u95a2\u6570 \u3092 \u5b9a\u7fa9\n\n```{haskell:GHCi}\nPrelude> let power :: Int -> Double -> Double\nPrelude|     power 0 _             = 1.0\nPrelude|     power x y | x > 0     = y * power (x - 1) y\nPrelude|               | otherwise = 1.0 / power (- x) y\nPrelude| \nPrelude>\n```\n\n__( \u95a2\u6570\u306e\u578b \u78ba\u8a8d )__\n \n```{haskell:GHCi}\nPrelude> :t power\npower :: Int -> Double -> Double\n>\n```\n\n__( \u95a2\u6570\u306e\u6319\u52d5 \u78ba\u8a8d )__\n \n```{haskell:GHCi}\nPrelude> power 3 4\n64.0\nPrelude> power 1 4\n4.0\nPrelude> power 4 1\n1.0\nPrelude> power 100 1\n1.0\nPrelude> power 0 1\n1.0\nPrelude> power 2 3\n9.0\nPrelude> power 4 3\n81.0\nPrelude> \n```\n", "tags": ["Haskell", "ghci", "\u95a2\u6570\u578b\u8a00\u8a9e", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}