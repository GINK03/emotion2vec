{"context": " More than 1 year has passed since last update.ghc-7.8\u3067\u578b\u30ec\u30d9\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u304c\u5165\u3063\u305f\u306e\u3067\u3001\u3068\u3066\u3082\u7c21\u5358\u306b\u9577\u3055\u4ed8\u304d\u30ea\u30b9\u30c8\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u307e\u305a\u306fghci\u3067\u578b\u30ec\u30d9\u30eb\u81ea\u7136\u6570\u306e\u6f14\u7b97\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nghci\n$ ghci -XDataKinds -XTypeOperators\n> :m GHC.TypeLits Data.Proxy\n\n> :t Proxy :: Proxy (12 + 43)\nProxy :: Proxy (12 + 43) :: Proxy 55\n\n> :t Proxy :: Proxy (50 - 43)\nProxy :: Proxy (50 - 43) :: Proxy 7\n\n> :t Proxy :: Proxy (2 * 8)\nProxy :: Proxy (2 * 8) :: Proxy 16\n\n> :t Proxy :: Proxy (2 ^ 8)\nProxy :: Proxy (2 ^ 8) :: Proxy 256\n\n\n\u3061\u3083\u3093\u3068\u8a08\u7b97\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u306d\u3002\u30b3\u30ec\u3092\u7528\u3044\u3066\u9577\u3055\u4ed8\u304d\u30ea\u30b9\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\n\nlist.hs\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport Prelude (undefined, Show)\nimport GHC.TypeLits\n\ndata List (len :: Nat) a where\n    Null :: List 0 a\n    Cons :: a -> List len a -> List (len + 1) a\n\nderiving instance Show a => Show (List l a)\n\ninfixr `Cons`\n\nhead :: (1 <= l) => List l a -> a\nhead (Cons a _) = a\nhead _          = undefined -- Warning\u3092\u6291\u3048\u308b\u305f\u3081\u3002\u547c\u3070\u308c\u308b\u3053\u3068\u306f\u7121\u3044\u306f\u305a\n\n\n\n\n\u3068\u308a\u3042\u3048\u305ahead\u3060\u3051\u3067\u3059\u3002\nghci\u306b\u8aad\u307f\u8fbc\u3093\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nghci\n$ ghci -XDataKinds -XTypeOperators list.hs\n> Null\nNull\n> 4 `Cons` Null\nCons 4 Null\n> 2 `Cons` 4 `Cons` Null\nCons 2 (Cons 4 Null)\n\n> head (4 `Cons` Null)\n4\n> head (2 `Cons` 4 `Cons` Null)\n2\n> head Null\n\n<interactive>:8:1:\n    Couldn't match type \u2018'GHC.Types.False\u2019 with \u2018'GHC.Types.True\u2019\n    Expected type: 'GHC.Types.True\n      Actual type: 1 <=? 0\n    In the expression: head Null\n    In an equation for \u2018it\u2019: it = head Null\n\n\n\u3053\u306e\u3088\u3046\u306b\u3061\u3083\u3093\u3068Null\u3092\u4e0e\u3048\u305f\u3068\u304d\u3060\u3051\u578b\u30a8\u30e9\u30fc\u3067\u5f3e\u3044\u3066\u304f\u308c\u307e\u3057\u305f\uff01\u3084\u3063\u305f\u306d\uff01\nghc-7.8\u3067\u578b\u30ec\u30d9\u30eb\u30ea\u30c6\u30e9\u30eb\u306b\u5bfe\u3059\u308b\u6f14\u7b97\u304c\u5165\u3063\u305f\u306e\u3067\u3001\u3068\u3066\u3082\u7c21\u5358\u306b\u9577\u3055\u4ed8\u304d\u30ea\u30b9\u30c8\u3092\u8868\u73fe\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u307e\u305a\u306fghci\u3067\u578b\u30ec\u30d9\u30eb\u81ea\u7136\u6570\u306e\u6f14\u7b97\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```hs:ghci\n$ ghci -XDataKinds -XTypeOperators\n> :m GHC.TypeLits Data.Proxy\n\n> :t Proxy :: Proxy (12 + 43)\nProxy :: Proxy (12 + 43) :: Proxy 55\n\n> :t Proxy :: Proxy (50 - 43)\nProxy :: Proxy (50 - 43) :: Proxy 7\n\n> :t Proxy :: Proxy (2 * 8)\nProxy :: Proxy (2 * 8) :: Proxy 16\n\n> :t Proxy :: Proxy (2 ^ 8)\nProxy :: Proxy (2 ^ 8) :: Proxy 256\n```\n\u3061\u3083\u3093\u3068\u8a08\u7b97\u3057\u3066\u304f\u308c\u3066\u307e\u3059\u306d\u3002\u30b3\u30ec\u3092\u7528\u3044\u3066\u9577\u3055\u4ed8\u304d\u30ea\u30b9\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3057\u3087\u3046\u3002\n\n```hs:list.hs\n{-# LANGUAGE DataKinds #-}\n{-# LANGUAGE GADTs #-}\n{-# LANGUAGE TypeOperators #-}\n{-# LANGUAGE KindSignatures #-}\n{-# LANGUAGE NoImplicitPrelude #-}\n{-# LANGUAGE StandaloneDeriving #-}\n\nimport Prelude (undefined, Show)\nimport GHC.TypeLits\n\ndata List (len :: Nat) a where\n    Null :: List 0 a\n    Cons :: a -> List len a -> List (len + 1) a\n\nderiving instance Show a => Show (List l a)\n\ninfixr `Cons`\n\nhead :: (1 <= l) => List l a -> a\nhead (Cons a _) = a\nhead _          = undefined -- Warning\u3092\u6291\u3048\u308b\u305f\u3081\u3002\u547c\u3070\u308c\u308b\u3053\u3068\u306f\u7121\u3044\u306f\u305a\n\n\n```\n\n\u3068\u308a\u3042\u3048\u305ahead\u3060\u3051\u3067\u3059\u3002\nghci\u306b\u8aad\u307f\u8fbc\u3093\u3067\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```hs:ghci\n$ ghci -XDataKinds -XTypeOperators list.hs\n> Null\nNull\n> 4 `Cons` Null\nCons 4 Null\n> 2 `Cons` 4 `Cons` Null\nCons 2 (Cons 4 Null)\n\n> head (4 `Cons` Null)\n4\n> head (2 `Cons` 4 `Cons` Null)\n2\n> head Null\n\n<interactive>:8:1:\n    Couldn't match type \u2018'GHC.Types.False\u2019 with \u2018'GHC.Types.True\u2019\n    Expected type: 'GHC.Types.True\n      Actual type: 1 <=? 0\n    In the expression: head Null\n    In an equation for \u2018it\u2019: it = head Null\n```\n\n\u3053\u306e\u3088\u3046\u306b\u3061\u3083\u3093\u3068Null\u3092\u4e0e\u3048\u305f\u3068\u304d\u3060\u3051\u578b\u30a8\u30e9\u30fc\u3067\u5f3e\u3044\u3066\u304f\u308c\u307e\u3057\u305f\uff01\u3084\u3063\u305f\u306d\uff01\n", "tags": ["Haskell", "ghc7.8.2"]}