{"context": "\n\nCSV\u30d5\u30a1\u30a4\u30eb\u306emecab, natto\u306b\u3088\u308b\u5f62\u614b\u7d20\u89e3\u6790\n\u4e0b\u8a18\u6295\u7a3f\u3068\u540c\u69d8\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30eacsv\u3067CSV\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u3081\u306a\u3044\u554f\u984c\u304c\u767a\u751f\u3057\u3001open\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3084\u308a\u307e\u3057\u305f\u3002\nhttp://qiita.com/kinushu/items/46567bcb1a31e2721c92\n\nmorpho.rb\nrequire \"mecab\"\nrequire \"natto\"\nrequire \"pp\"\nresults = []\nopen(\"test.csv\", encoding: \"Shift_JIS:UTF-8\") do |f|\n  f.each_line do |line|\n    nm = Natto::MeCab.new\n    nm.parse(line) do |n|\n      s = n.surface ? n.surface : \"-\"\n      results << s\n    end\n  end\nend\nwords_and_count = []\nresults.uniq.map do |word|\n  words_and_count[words_and_count.size] = [\"#{word}\", \"#{results.grep(word).count}\"] if word\nend\npp words_and_count.sort_by {|word_and_count| word_and_count[1].to_i}.reverse\n\n\n### CSV\u30d5\u30a1\u30a4\u30eb\u306emecab, natto\u306b\u3088\u308b\u5f62\u614b\u7d20\u89e3\u6790\n\n\u4e0b\u8a18\u6295\u7a3f\u3068\u540c\u69d8\u3001\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30eacsv\u3067CSV\u30d5\u30a1\u30a4\u30eb\u304c\u8aad\u3081\u306a\u3044\u554f\u984c\u304c\u767a\u751f\u3057\u3001open\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3084\u308a\u307e\u3057\u305f\u3002\nhttp://qiita.com/kinushu/items/46567bcb1a31e2721c92\n\n```ruby:morpho.rb\nrequire \"mecab\"\nrequire \"natto\"\nrequire \"pp\"\nresults = []\nopen(\"test.csv\", encoding: \"Shift_JIS:UTF-8\") do |f|\n  f.each_line do |line|\n    nm = Natto::MeCab.new\n    nm.parse(line) do |n|\n      s = n.surface ? n.surface : \"-\"\n      results << s\n    end\n  end\nend\nwords_and_count = []\nresults.uniq.map do |word|\n  words_and_count[words_and_count.size] = [\"#{word}\", \"#{results.grep(word).count}\"] if word\nend\npp words_and_count.sort_by {|word_and_count| word_and_count[1].to_i}.reverse\n```\n", "tags": ["Ruby", "CSV", "mecab", "natto"]}