{"tags": ["Erlang", "rebar3", "\u521d\u5fc3\u8005", "\u5165\u9580"], "context": "Ubuntu 16.04\u3067Erlang\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u307e\u3067\u884c\u3063\u3066\u307f\u307e\u3059\u3002\n\nErlang\u958b\u767a\u74b0\u5883\u69cb\u7bc9\uff08\u521d\u671f\u8a2d\u5b9a\uff09\n\n\u4f9d\u5b58\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nsudo apt-get install build-essential libncurses5-dev openssl libssl-dev\nsudo apt-get install curl git-core\n\n\nErlang\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3001Kerl\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nmkdir -p ~/local/bin\ncd ~/local/bin\ncurl -O https://raw.githubusercontent.com/kerl/kerl/master/kerl\nchmod a+x kerl\n\n\nkerl\u3067Erlang 19.1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n./kerl list releases\n./kerl install 19.1 19.1\n./kerl build 19.1 19.1\n./kerl install 19.1 ~/erlang/19.1\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f Erlang 19.1 \u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\n. ~/erlang/19.1/activate\n\nwhich\u3067erl\u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u308b\u4e8b\u304c\u5206\u304b\u308a\u958b\u767a\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\u3002\nwhich erl\n# /home/username/erlang/19.1/bin/erl\n\n\n\u7c21\u5358\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\nErlang\u3067\u7c21\u5358\u306ahttpd\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u306erebar\u3092\u4f7f\u3046\nrebar\u3092\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3001\u914d\u5e03\u7528\u306etar.gz\u306e\u4f5c\u6210\u306a\u3069\u304c\u30b3\u30de\u30f3\u30c9\u4e00\u3064\u3067\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\nmkdir project\ncd project\nwget https://s3.amazonaws.com/rebar3/rebar3\nchmod 0755 rebar3\n\n\nrebar\u3067\u5b9a\u5f62\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n./rebar3 new app httpd\n# ===> Writing httpd/src/httpd_app.erl\n# ===> Writing httpd/src/httpd_sup.erl\n# ===> Writing httpd/src/httpd.app.src\n# ===> Writing httpd/rebar.config\n# ===> Writing httpd/.gitignore\n# ===> Writing httpd/LICENSE\n# ===> Writing httpd/README.md\n\n\n\u5b9f\u88c5\n\u4eca\u56de\u306f\u7c21\u5358\u306ahttp\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u30a4\u30e1\u30fc\u30b8\u3002\n\nhttpd_tcp_listener \u304c\u65b0\u898f\u63a5\u7d9a\u3057\u3066\u304d\u305fHTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u53d7\u4ed8\nhttpd_tcp_worker_sup \u306e start_child() \u30671\u3064\u306eTCP\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\uff08Erlang\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30de\u30a4\u30af\u30ed\u30b9\u30ec\u30c3\u30c9\u3092\u610f\u5473\u3057\u307e\u3059\uff09\n\u8d77\u52d5\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306f httpd_tcp_worker \u306e start_link() \u3067TCP\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u66f8\u304d\u8fbc\u3080\n\n\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nsrc/httpd_tcp_listener.erl\n-module(httpd_tcp_listener).\n\n-export([start_link/0]).\n\nstart_link() ->\n    Pid = spawn_link(fun init/0),\n    {ok, Pid}.\n\ninit() ->\n    Port = 8888,\n    Backlog = 10244,\n    Options = [binary,\n              inet6, % support both ipv4 and ipv6\n              {active, false},\n              {reuseaddr, true},\n              {backlog, Backlog}\n             ],\n    {ok, Listen} = gen_tcp:listen(Port, Options),\n    accept(Listen).\n\naccept(Listen) ->\n    case gen_tcp:accept(Listen) of\n        {ok, Socket} ->\n            {ok, Pid} = httpd_tcp_worker_sup:start_child(Socket),\n            gen_tcp:controlling_process(Socket, Pid);\n        {error, Reason} ->\n            io:format(\"fail accept ~p~n\", [Reason])\n    end,\n    accept(Listen).\n\n\n\nsrc/httpd_tcp_worker.erl\n-module(httpd_tcp_worker).\n\n-export([start_link/1]).\n\nstart_link(Socket)->\n    Pid = spawn_link(fun() -> process(Socket, 0, 30 * 1000) end),\n    {ok, Pid}.\n\nprocess(Socket, Size, Timeout) ->\n    case gen_tcp:recv(Socket, Size, Timeout) of\n        {ok, Packet} ->\n            Response = response(Packet),\n            gen_tcp:send(Socket, Response),\n            gen_tcp:close(Socket);\n        {error, Reason} ->\n            io:format(\"fail recv ~p~n\", [Reason]),\n            gen_tcp:close(Socket)\n    end.\n\nresponse(_Request) ->\n    <<\"HTTP/1.0 200 OK\\r\\nDate: Tue, 25 Oct 2016 10:21:33 GMT\\r\\nConnection: close\\r\\nContent-Type: text/plain; charset=utf-8\\r\\nContent-Length: 11\\r\\n\\r\\nhello world\">>.\n\n\n\nsrc/httpd_tcp_worker_sup.erl\n-module(httpd_tcp_worker_sup).\n\n-export([start_link/0, start_child/1, init/1]).\n\nstart_link() ->\n    supervisor:start_link({local, ?MODULE}, ?MODULE, []).\n\nstart_child(Socket) ->\n    supervisor:start_child(?MODULE, [Socket]).\n\ninit([]) ->\n    Children = [\n                {\"httpd_tcp_worker\", {httpd_tcp_worker, start_link, []}, temporary, 5, worker, []}\n               ],\n    {ok, {{simple_one_for_one, 0, 1}, Children}}.\n\n\n\u307e\u305f httpd_sup.erl \u306e init([]) \u3092\u7de8\u96c6\u3057\u3001\u8ffd\u52a0\u5b9f\u88c5\u3057\u305f\u90e8\u5206\u306e\u8d77\u52d5\u51e6\u7406\u3092\u52a0\u3048\u307e\u3059\u3002\n\nsrc/httpd_sup.erl\n%% ...(\u7701\u7565)...\ninit([]) ->\n    Children = [\n                {\"httpd_tcp_listener\", {httpd_tcp_listener, start_link, []}, permanent, 5, worker, []},\n                {\"httpd_tcp_worker_sup\", {httpd_tcp_worker_sup, start_link, []}, permanent, 5, supervisor, []}\n               ],\n    {ok, { {one_for_all, 0, 1}, Children} }.\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n../rebar3 compile && erl -pa _build/default/lib/*/ebin -eval 'application:start(httpd).' -noshell\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068hello world\u3068\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n\u307e\u3068\u3081\nErlang\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u5370\u8c61\u3067\u3059\u3002\n\u305f\u3060supervisor\u3092\u7406\u89e3\u3057\u3066\u4f7f\u3044\u3053\u306a\u3059\u306e\u306f\u3042\u308b\u7a0b\u5ea6\u306e\u7d4c\u9a13\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\n\nUbuntu 16.04\u3067Erlang\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304b\u3089\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u307e\u3067\u884c\u3063\u3066\u307f\u307e\u3059\u3002\n\n## Erlang\u958b\u767a\u74b0\u5883\u69cb\u7bc9\uff08\u521d\u671f\u8a2d\u5b9a\uff09\n\n### \u4f9d\u5b58\u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell-session\nsudo apt-get install build-essential libncurses5-dev openssl libssl-dev\nsudo apt-get install curl git-core\n```\n\n### Erlang\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u3001Kerl\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell-session\nmkdir -p ~/local/bin\ncd ~/local/bin\ncurl -O https://raw.githubusercontent.com/kerl/kerl/master/kerl\nchmod a+x kerl\n```\n\n### kerl\u3067Erlang 19.1\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```shell-session\n./kerl list releases\n./kerl install 19.1 19.1\n./kerl build 19.1 19.1\n./kerl install 19.1 ~/erlang/19.1\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f Erlang 19.1 \u3092\u6709\u52b9\u5316\u3057\u307e\u3059\u3002\n\n```shell-session\n. ~/erlang/19.1/activate\n```\n\nwhich\u3067erl\u30b3\u30de\u30f3\u30c9\u304c\u4f7f\u3048\u308b\u4e8b\u304c\u5206\u304b\u308a\u958b\u767a\u74b0\u5883\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\n```shell-session\nwhich erl\n# /home/username/erlang/19.1/bin/erl\n```\n\n## \u7c21\u5358\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u958b\u767a\nErlang\u3067\u7c21\u5358\u306ahttpd\u30b5\u30fc\u30d0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\n\n### \u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u306erebar\u3092\u4f7f\u3046\nrebar\u3092\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3001\u914d\u5e03\u7528\u306etar.gz\u306e\u4f5c\u6210\u306a\u3069\u304c\u30b3\u30de\u30f3\u30c9\u4e00\u3064\u3067\u3067\u304d\u308b\u306e\u3067\u4fbf\u5229\u3067\u3059\u3002\n\n```shell-session\nmkdir project\ncd project\nwget https://s3.amazonaws.com/rebar3/rebar3\nchmod 0755 rebar3\n```\n\n### rebar\u3067\u5b9a\u5f62\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210\n\n```shell-session\n./rebar3 new app httpd\n# ===> Writing httpd/src/httpd_app.erl\n# ===> Writing httpd/src/httpd_sup.erl\n# ===> Writing httpd/src/httpd.app.src\n# ===> Writing httpd/rebar.config\n# ===> Writing httpd/.gitignore\n# ===> Writing httpd/LICENSE\n# ===> Writing httpd/README.md\n```\n\n## \u5b9f\u88c5\n\u4eca\u56de\u306f\u7c21\u5358\u306ahttp\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u30a4\u30e1\u30fc\u30b8\u3002\n\n1. httpd_tcp_listener \u304c\u65b0\u898f\u63a5\u7d9a\u3057\u3066\u304d\u305fHTTP\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u53d7\u4ed8\n2. httpd_tcp_worker_sup \u306e start_child() \u30671\u3064\u306eTCP\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\uff08Erlang\u306e\u30d7\u30ed\u30bb\u30b9\u306f\u30de\u30a4\u30af\u30ed\u30b9\u30ec\u30c3\u30c9\u3092\u610f\u5473\u3057\u307e\u3059\uff09\n3. \u8d77\u52d5\u3057\u305f\u30d7\u30ed\u30bb\u30b9\u306f httpd_tcp_worker \u306e start_link() \u3067TCP\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8aad\u307f\u8fbc\u307f\u3001HTTP\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u66f8\u304d\u8fbc\u3080\n\n\u4ee5\u4e0b\u306e3\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```erlang:src/httpd_tcp_listener.erl\n-module(httpd_tcp_listener).\n\n-export([start_link/0]).\n\nstart_link() ->\n    Pid = spawn_link(fun init/0),\n    {ok, Pid}.\n\ninit() ->\n    Port = 8888,\n    Backlog = 10244,\n    Options = [binary,\n              inet6, % support both ipv4 and ipv6\n              {active, false},\n              {reuseaddr, true},\n              {backlog, Backlog}\n             ],\n    {ok, Listen} = gen_tcp:listen(Port, Options),\n    accept(Listen).\n\naccept(Listen) ->\n    case gen_tcp:accept(Listen) of\n        {ok, Socket} ->\n            {ok, Pid} = httpd_tcp_worker_sup:start_child(Socket),\n            gen_tcp:controlling_process(Socket, Pid);\n        {error, Reason} ->\n            io:format(\"fail accept ~p~n\", [Reason])\n    end,\n    accept(Listen).\n```\n\n```erlang:src/httpd_tcp_worker.erl\n-module(httpd_tcp_worker).\n\n-export([start_link/1]).\n\nstart_link(Socket)->\n    Pid = spawn_link(fun() -> process(Socket, 0, 30 * 1000) end),\n    {ok, Pid}.\n\nprocess(Socket, Size, Timeout) ->\n    case gen_tcp:recv(Socket, Size, Timeout) of\n        {ok, Packet} ->\n            Response = response(Packet),\n            gen_tcp:send(Socket, Response),\n            gen_tcp:close(Socket);\n        {error, Reason} ->\n            io:format(\"fail recv ~p~n\", [Reason]),\n            gen_tcp:close(Socket)\n    end.\n\nresponse(_Request) ->\n    <<\"HTTP/1.0 200 OK\\r\\nDate: Tue, 25 Oct 2016 10:21:33 GMT\\r\\nConnection: close\\r\\nContent-Type: text/plain; charset=utf-8\\r\\nContent-Length: 11\\r\\n\\r\\nhello world\">>.\n```\n\n```erlang:src/httpd_tcp_worker_sup.erl\n-module(httpd_tcp_worker_sup).\n\n-export([start_link/0, start_child/1, init/1]).\n\nstart_link() ->\n    supervisor:start_link({local, ?MODULE}, ?MODULE, []).\n\nstart_child(Socket) ->\n    supervisor:start_child(?MODULE, [Socket]).\n\ninit([]) ->\n    Children = [\n                {\"httpd_tcp_worker\", {httpd_tcp_worker, start_link, []}, temporary, 5, worker, []}\n               ],\n    {ok, {{simple_one_for_one, 0, 1}, Children}}.\n```\n\n\u307e\u305f httpd_sup.erl \u306e init([]) \u3092\u7de8\u96c6\u3057\u3001\u8ffd\u52a0\u5b9f\u88c5\u3057\u305f\u90e8\u5206\u306e\u8d77\u52d5\u51e6\u7406\u3092\u52a0\u3048\u307e\u3059\u3002\n\n```erlang:src/httpd_sup.erl\n%% ...(\u7701\u7565)...\ninit([]) ->\n    Children = [\n                {\"httpd_tcp_listener\", {httpd_tcp_listener, start_link, []}, permanent, 5, worker, []},\n                {\"httpd_tcp_worker_sup\", {httpd_tcp_worker_sup, start_link, []}, permanent, 5, supervisor, []}\n               ],\n    {ok, { {one_for_all, 0, 1}, Children} }.\n```\n\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5b9f\u88c5\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u8d77\u52d5\u3057\u3066\u307f\u307e\u3059\u3002\n\n```shell-session\n../rebar3 compile && erl -pa _build/default/lib/*/ebin -eval 'application:start(httpd).' -noshell\n```\n\n\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068hello world\u3068\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n![hello_world.png](https://qiita-image-store.s3.amazonaws.com/0/39587/986a234b-d268-b499-6806-0aedc98279c6.png)\n\n## \u307e\u3068\u3081\nErlang\u3067\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30fb\u30b5\u30fc\u30d0\u3092\u5b9f\u88c5\u3059\u308b\u306e\u306f\u96e3\u3057\u304f\u306a\u3044\u5370\u8c61\u3067\u3059\u3002\n\u305f\u3060supervisor\u3092\u7406\u89e3\u3057\u3066\u4f7f\u3044\u3053\u306a\u3059\u306e\u306f\u3042\u308b\u7a0b\u5ea6\u306e\u7d4c\u9a13\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\n"}