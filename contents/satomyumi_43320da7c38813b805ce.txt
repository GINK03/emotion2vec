{"tags": ["Perl", "Beginner"], "context": " More than 1 year has passed since last update.You can see source code like below in the file as module.\n\ntest.pl\n#!/usr/bin/perl -w\n\npackage Stone;\n\nsub new{\n     my $pkg = shift;\n     my $hash = {\n          name     =>     shift,\n          weight     =>     shift\n     };\n     bless $hash, $pkg;\n}\n\n\nThis is \"Constructor\" which is exists to generate Object.\nOf course, you can name this one which is not \"new\".\nBut in many other languages, constructor is named new.\nThen watch this code carefully.\n     my $pkg = shift;\n\nshift is inserted into pkg.ThismeansargumentofConstructor\"new\"isprovidedtopkg. This means argument of Constructor \"new\" is provided to pkg.\nThen watch the call of new.\npackage main;\n\nuse Stonge;\nmy $obj = Stone->new('brick','100');\n\nThis code means...\nby PACKAGE NAME->SUBROUTINE NAME, searching subroutine in the package, and provide argument.\n\nand ATTENTION!! fundamentally first argument is apapted to the package name.\nso code above can be rewritten like below.\n$obj = Stone::new('Stone','brick','100');\n\nand watch receive-side code again.\n# 1st argument of Stone module is inserted here.\nmy $pkg = shift;\n\n# 2nd and 3rd arguments are inserted here.\nmy $hash = {\n     # 2nd argument\n     name => shift;\n     # 3rd argument\n     weight => shift;\n};\nbless $hash, $pkg;\n\nYou can see source code like below in the file as module.\n\n````test.pl\n#!/usr/bin/perl -w\n\npackage Stone;\n\nsub new{\n     my $pkg = shift;\n     my $hash = {\n          name     =>     shift,\n          weight     =>     shift\n     };\n     bless $hash, $pkg;\n}\n````\n\nThis is \"Constructor\" which is exists to generate Object.\nOf course, you can name this one which is not \"new\".\nBut in many other languages, constructor is named new.\n\n\nThen watch this code carefully.\n\n````\n     my $pkg = shift;\n````\n\nshift is inserted into $pkg. This means argument of Constructor \"new\" is provided to $pkg.\n\nThen watch the call of new.\n\n````\npackage main;\n\nuse Stonge;\nmy $obj = Stone->new('brick','100');\n````\n\nThis code means...\nby **PACKAGE NAME->SUBROUTINE NAME**, searching subroutine in the package, and provide argument.\n\n####and ATTENTION!! fundamentally first argument is apapted to the package name.\n\nso code above can be rewritten like below.\n\n````\n$obj = Stone::new('Stone','brick','100');\n````\n\nand watch receive-side code again.\n\n````\n# 1st argument of Stone module is inserted here.\nmy $pkg = shift;\n\n# 2nd and 3rd arguments are inserted here.\nmy $hash = {\n     # 2nd argument\n     name => shift;\n     # 3rd argument\n     weight => shift;\n};\nbless $hash, $pkg;\n````\n"}