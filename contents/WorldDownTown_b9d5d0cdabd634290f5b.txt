{"context": "\n\n\u6982\u8981\nXcode7.3\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3053\u3068\u3067\u3001Swift\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c2.2\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u308a\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5927\u91cf\u306bWarning, Error\u304c\u51fa\u305f\u306e\u3067\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nWarning\u306e\u307b\u3068\u3093\u3069\u304cSwift 3\u306b\u5411\u3051\u3066deprecated\u306b\u306a\u3063\u305f\u3082\u306e\u306e\u8b66\u544a\u3067\u3057\u305f\u3002\n\u3053\u3053\u306b\u3042\u308b\u4ee5\u5916\u306eWarning\u306b\u3064\u3044\u3066\u3082\u3001GitHub\u306eapple/swift-evolution \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u539f\u56e0\u304c\u308f\u304b\u308b\u601d\u3044\u307e\u3059\u3002\n\nWarning\n\n'var' parameters are deprecated and will be removed in Swift 3\nswift-evolution: SE-0003\n\n\u4fee\u6b63\u524d\nfunc sayHelloTo(var name: String) {\n    name = \"Hello, \\(name).\"\n    print(name)\n}\n\n\n\u4fee\u6b63\u5f8c\nfunc sayHelloTo(name: String) {\n    var name = name\n    name = \"Hello, \\(name).\"\n    print(name)\n}\n\n\n'++' is deprecated: it will be removed in Swift 3\nswift-evolution: SE-0007\n\n\u4fee\u6b63\u524d\nvar index: Int = 0\nindex++\n\n\n\u4fee\u6b63\u5f8c\nvar index: Int = 0\nindex += 1\n\n--\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u3002\n\nC-style for statement is deprecated and will be removed in a future version of Swift\nswift-evolution: SE-0007\n\n\u4fee\u6b63\u524d\n// \u6607\u9806\u30eb\u30fc\u30d7\nlet array1: [Int] = [10, 20, 30, 40, 50]\nfor var i = 0; i < array1.count; i++ {\n    print(\"\\(i): \\(array1[i])\")\n}\n\n\n// \u964d\u9806\u30eb\u30fc\u30d7\nvar array2: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor var i = array2.count - 1; i >= 0; i -= 1 {\n    array2.removeAtIndex(i)\n}\nprint(array2)   // []\n\n\n\u4fee\u6b63\u5f8c\n\u5bfe\u5fdc\u65b9\u6cd5\u306f\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n// \u6607\u9806\u30eb\u30fc\u30d7\nlet array1: [Int] = [10, 20, 30, 40, 50]\n\n// 0 ..< array1.count \u306e Range\u306b\u5bfe\u3057\u3066 for-in\nfor index in 0 ..< array1.count {\n    print(\"\\(index): \\(element)\")\n}\n\n// array1.enumerate()\u306b\u5bfe\u3057\u3066 for-in\nfor (index, element) in array1.enumerate() {\n    print(\"\\(index): \\(element)\")\n}\n\n// array1.enumerate()\u306b\u5bfe\u3057\u3066 forEach\narray1.enumerate().forEach { (index, element) in\n    print(\"\\(index): \\(element)\")\n}\n\n\n// \u964d\u9806\u30eb\u30fc\u30d7\nvar array2: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor i in (0 ..< array2.count).reverse() {\n    array2.removeAtIndex(i)\n}\nprint(array2)   // []\n\n// \u914d\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u914d\u5217\u3092\u9006\u9806\u306bforEach\nvar array3: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\narray3.indices.reverse().forEach {\n    array3.removeAtIndex($0)\n}\nprint(array3)   // []\n\n\nUse '#selector' instead of explicitly constructing a 'Selector'\n\nUse of string literal for Objective-C selectors is deprecated; use '#selector' instead\nswift-evolution: SE-0022\nNSNotificationCenter \u3084 UIControl \u306a\u3069\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6e21\u3059\u65b9\u6cd5\u304c\u5909\u66f4\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4fee\u6b63\u5185\u5bb9\n\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3092#selector(<Class>.<MethodName>)\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u307e\u3067\u306f\u6587\u5b57\u5217\u3060\u3051\u3067\u53c2\u7167\u3055\u308c\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3001Xcode\u4e0a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u6355\u6349\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001#selector()\u306b\u5909\u308f\u308b\u3053\u3068\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4fee\u6b63\u524d\nclass SomeTableViewController: UITableViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        refreshControl = UIRefreshControl()\n        refreshControl.addTarget(\n            self,\n            action: \"refresh\",\n            forControlEvents: .ValueChanged)\n        tableView.addSubview(refreshControl)\n    }\n\n    func refresh() {\n    }\n\n\n\u4fee\u6b63\u5f8c\nclass SomeTableViewController: UITableViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        refreshControl = UIRefreshControl()\n        refreshControl.addTarget(\n            self,\n            action: #selector(SomeTableViewController.refresh),\n            forControlEvents: .ValueChanged)\n        tableView.addSubview(refreshControl)\n    }\n\n    func refresh() {\n    }\n\n\n__FILE__ is deprecated and will be removed in Swift 3. please use #file\n\n__LINE__ is deprecated and will be removed in Swift 3. please use #line\n\n__FUNCTION__ is deprecated and will be removed in Swift 3. please use #function\nswift-evolution: SE-0028\n\u30c7\u30d0\u30c3\u30b0\u7528\u8b58\u5225\u5b50\u306e\u547c\u3073\u51fa\u3057\u304c\u5909\u308f\u3063\u305f\u3002\n\nThis proposal renames the following identifiers:\n__FILE__ -> #file\n__LINE__ -> #line\n__COLUMN__ -> #column\n__FUNCTION__ -> #function (Added during review)\n__DSO_HANDLE__ -> #dsohandle\n\n\n\u4fee\u6b63\u524d\nprint(\"\\(__FILE__), \\(__FUNCTION__), \\(__LINE__)\")\n\n\n\u4fee\u6b63\u5f8c\nprint(\"\\(#file), \\(#function), \\(#line)\")\n\n\nError\n\nUse of unresolved identifier 'SomeEnumType'\nObjective-C\u306e .h \u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b enum \u304c Swift\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53c2\u7167\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n@interface\u306e\u5185\u5074\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001\u5916\u5074\u306b\u79fb\u52d5\u3055\u305b\u308b\u3068\u30a8\u30e9\u30fc\u304c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4fee\u6b63\u524d\n@interface Feedback : NSObject\n\ntypedef NS_ENUM(NSInteger, SomeEnumType) {\n    SomeEnumTypeNone = 0,\n    SomeEnumTypeA    = 1,\n    SomeEnumTypeB    = 2,\n    SomeEnumTypeC    = 3,\n}\n\n\n\u4fee\u6b63\u5f8c\ntypedef NS_ENUM(NSInteger, SomeEnumType) {\n    SomeEnumTypeNone = 0,\n    SomeEnumTypeA    = 1,\n    SomeEnumTypeB    = 2,\n    SomeEnumTypeC    = 3,\n}\n\n@interface Feedback : NSObject\n\n\n'(name: String, size: CGSize) -> UIFont' is not convertible to '(name: String, size: CGFloat) -> UIFont?'\nUILabel\u306efont\u30d7\u30ed\u30d1\u30c6\u30a3\u306bUIFont\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\u539f\u56e0\u306f\u4e0d\u660e\u3002\n\n\u4fee\u6b63\u524d\nlet label = UILabel()\nif let font = UIFont(name: \"AvenirNext-Medium\", size: 12.0) { // UIFont\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3067\u30a8\u30e9\u30fc\n    label.font = font\n}\n\n\n\u4fee\u6b63\u5f8c\nlet label = UILabel()\nlet descriptor = UIFontDescriptor(name: \"AvenirNext-Medium\", size: 12.0)\nlabel.font = UIFont(descriptor: descriptor, size: 12.0)\n\n# \u6982\u8981\nXcode7.3\u306b\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u3053\u3068\u3067\u3001Swift\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c2.2\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3053\u308c\u306b\u3088\u308a\u65e2\u5b58\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5927\u91cf\u306bWarning, Error\u304c\u51fa\u305f\u306e\u3067\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\nWarning\u306e\u307b\u3068\u3093\u3069\u304cSwift 3\u306b\u5411\u3051\u3066deprecated\u306b\u306a\u3063\u305f\u3082\u306e\u306e\u8b66\u544a\u3067\u3057\u305f\u3002\n\u3053\u3053\u306b\u3042\u308b\u4ee5\u5916\u306eWarning\u306b\u3064\u3044\u3066\u3082\u3001GitHub\u306e[apple/swift-evolution](https://github.com/apple/swift-evolution/tree/master/proposals) \u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3068\u539f\u56e0\u304c\u308f\u304b\u308b\u601d\u3044\u307e\u3059\u3002\n\n# Warning\n## 'var' parameters are deprecated and will be removed in Swift 3\n\nswift-evolution: [SE-0003](https://github.com/apple/swift-evolution/blob/master/proposals/0003-remove-var-parameters.md)\n\n### \u4fee\u6b63\u524d\n```swift\nfunc sayHelloTo(var name: String) {\n    name = \"Hello, \\(name).\"\n    print(name)\n}\n```\n\n### \u4fee\u6b63\u5f8c\n```swift\nfunc sayHelloTo(name: String) {\n    var name = name\n    name = \"Hello, \\(name).\"\n    print(name)\n}\n```\n\n\n## '++' is deprecated: it will be removed in Swift 3\n\nswift-evolution: [SE-0007](https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md)\n\n### \u4fee\u6b63\u524d\n\n```swift\nvar index: Int = 0\nindex++\n```\n\n### \u4fee\u6b63\u5f8c\n\n```swift\nvar index: Int = 0\nindex += 1\n```\n\n`--`\u306b\u3064\u3044\u3066\u3082\u540c\u69d8\u3002\n\n\n## C-style for statement is deprecated and will be removed in a future version of Swift\n\nswift-evolution: [SE-0007](https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md)\n\n### \u4fee\u6b63\u524d\n```swift\n// \u6607\u9806\u30eb\u30fc\u30d7\nlet array1: [Int] = [10, 20, 30, 40, 50]\nfor var i = 0; i < array1.count; i++ {\n    print(\"\\(i): \\(array1[i])\")\n}\n\n\n// \u964d\u9806\u30eb\u30fc\u30d7\nvar array2: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor var i = array2.count - 1; i >= 0; i -= 1 {\n    array2.removeAtIndex(i)\n}\nprint(array2)\t// []\n```\n\n### \u4fee\u6b63\u5f8c\n\u5bfe\u5fdc\u65b9\u6cd5\u306f\u305f\u304f\u3055\u3093\u3042\u308a\u307e\u3059\u3002\n\n```swift\n// \u6607\u9806\u30eb\u30fc\u30d7\nlet array1: [Int] = [10, 20, 30, 40, 50]\n\n// 0 ..< array1.count \u306e Range\u306b\u5bfe\u3057\u3066 for-in\nfor index in 0 ..< array1.count {\n    print(\"\\(index): \\(element)\")\n}\n\n// array1.enumerate()\u306b\u5bfe\u3057\u3066 for-in\nfor (index, element) in array1.enumerate() {\n    print(\"\\(index): \\(element)\")\n}\n\n// array1.enumerate()\u306b\u5bfe\u3057\u3066 forEach\narray1.enumerate().forEach { (index, element) in\n    print(\"\\(index): \\(element)\")\n}\n\n\n// \u964d\u9806\u30eb\u30fc\u30d7\nvar array2: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\nfor i in (0 ..< array2.count).reverse() {\n    array2.removeAtIndex(i)\n}\nprint(array2)\t// []\n\n// \u914d\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u914d\u5217\u3092\u9006\u9806\u306bforEach\nvar array3: [Int] = [1, 2, 3, 4, 5, 6, 7, 8, 9]\narray3.indices.reverse().forEach {\n    array3.removeAtIndex($0)\n}\nprint(array3)\t// []\n```\n\n## Use '#selector' instead of explicitly constructing a 'Selector'\n## Use of string literal for Objective-C selectors is deprecated; use '#selector' instead\nswift-evolution: [SE-0022](https://github.com/apple/swift-evolution/blob/master/proposals/0022-objc-selectors.md)\n\nNSNotificationCenter \u3084 UIControl \u306a\u3069\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6e21\u3059\u65b9\u6cd5\u304c\u5909\u66f4\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u4fee\u6b63\u5185\u5bb9\n\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u540d\u3092`#selector(<Class>.<MethodName>)`\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u307e\u3067\u306f\u6587\u5b57\u5217\u3060\u3051\u3067\u53c2\u7167\u3055\u308c\u3066\u3044\u305f\u30e1\u30bd\u30c3\u30c9\u306f\u3001Xcode\u4e0a\u3067\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u6355\u6349\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001`#selector()`\u306b\u5909\u308f\u308b\u3053\u3068\u3067\u3001\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n### \u4fee\u6b63\u524d\n```swift\nclass SomeTableViewController: UITableViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        refreshControl = UIRefreshControl()\n        refreshControl.addTarget(\n            self,\n            action: \"refresh\",\n            forControlEvents: .ValueChanged)\n        tableView.addSubview(refreshControl)\n    }\n\n    func refresh() {\n    }\n```\n\n### \u4fee\u6b63\u5f8c\n```swift\nclass SomeTableViewController: UITableViewController {\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        refreshControl = UIRefreshControl()\n        refreshControl.addTarget(\n            self,\n            action: #selector(SomeTableViewController.refresh),\n            forControlEvents: .ValueChanged)\n        tableView.addSubview(refreshControl)\n    }\n\n    func refresh() {\n    }\n```\n\n## \\_\\_FILE__ is deprecated and will be removed in Swift 3. please use #file\n## \\_\\_LINE__ is deprecated and will be removed in Swift 3. please use #line\n## \\_\\_FUNCTION__ is deprecated and will be removed in Swift 3. please use #function\nswift-evolution: [SE-0028](https://github.com/apple/swift-evolution/blob/master/proposals/0028-modernizing-debug-identifiers.md)\n\u30c7\u30d0\u30c3\u30b0\u7528\u8b58\u5225\u5b50\u306e\u547c\u3073\u51fa\u3057\u304c\u5909\u308f\u3063\u305f\u3002\n\n> This proposal renames the following identifiers:\n>\n\\_\\_FILE__ -> #file\n\\_\\_LINE__ -> #line\n\\_\\_COLUMN__ -> #column\n\\_\\_FUNCTION__ -> #function (Added during review)\n\\_\\_DSO_HANDLE__ -> #dsohandle\n\n### \u4fee\u6b63\u524d\n```swift\nprint(\"\\(__FILE__), \\(__FUNCTION__), \\(__LINE__)\")\n```\n\n### \u4fee\u6b63\u5f8c\n```swift\nprint(\"\\(#file), \\(#function), \\(#line)\")\n```\n\n\n# Error\n## Use of unresolved identifier 'SomeEnumType'\nObjective-C\u306e .h \u30d5\u30a1\u30a4\u30eb\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u308b enum \u304c Swift\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u53c2\u7167\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n`@interface`\u306e\u5185\u5074\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u305f\u3082\u306e\u3092\u3001\u5916\u5074\u306b\u79fb\u52d5\u3055\u305b\u308b\u3068\u30a8\u30e9\u30fc\u304c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u4fee\u6b63\u524d\n\n```objc\n@interface Feedback : NSObject\n\ntypedef NS_ENUM(NSInteger, SomeEnumType) {\n    SomeEnumTypeNone = 0,\n    SomeEnumTypeA    = 1,\n    SomeEnumTypeB    = 2,\n    SomeEnumTypeC    = 3,\n}\n```\n\n### \u4fee\u6b63\u5f8c\n\n```objc\ntypedef NS_ENUM(NSInteger, SomeEnumType) {\n    SomeEnumTypeNone = 0,\n    SomeEnumTypeA    = 1,\n    SomeEnumTypeB    = 2,\n    SomeEnumTypeC    = 3,\n}\n\n@interface Feedback : NSObject\n```\n\n## '(name: String, size: CGSize) -> UIFont' is not convertible to '(name: String, size: CGFloat) -> UIFont?'\n\n`UILabel`\u306e`font`\u30d7\u30ed\u30d1\u30c6\u30a3\u306bUIFont\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\u539f\u56e0\u306f\u4e0d\u660e\u3002\n\n### \u4fee\u6b63\u524d\n```swift\nlet label = UILabel()\nif let font = UIFont(name: \"AvenirNext-Medium\", size: 12.0) { // UIFont\u306e\u30a4\u30cb\u30b7\u30e3\u30e9\u30a4\u30b6\u3067\u30a8\u30e9\u30fc\n    label.font = font\n}\n```\n\n### \u4fee\u6b63\u5f8c\n```swift\nlet label = UILabel()\nlet descriptor = UIFontDescriptor(name: \"AvenirNext-Medium\", size: 12.0)\nlabel.font = UIFont(descriptor: descriptor, size: 12.0)\n```\n", "tags": ["iOS", "Swift", "\u79fb\u884c\u5fdc\u63f4"]}