{"tags": ["myLineMonitor"], "context": " More than 1 year has passed since last update.line monitor\nhttp://qiita.com/7of9/items/028556c5a819a6a8de96\nhttp://qiita.com/7of9/items/5e6a8c9f60b758c3e640\n\u306b\u3066\u554f\u984c\u306e\u3042\u3063\u305f<ACK>\u306a\u3069\u306e\u6271\u3044\u3092\u5bfe\u5fdc\u3002\n\u95a2\u9023 http://qiita.com/7of9/items/eee48db0127ad68790f2\n\ncode (v0.9)\nv0.9 @ github\n\n\u5909\u66f4\u524d\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n\n\n\u5909\u66f4\u5f8c\ndef isControlCharOtherThanCRLF(code):\n    if ord(code) == 13 or ord(code) == 10:\n        return False\n    return ord(code) < 32 \n\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if len(str1) > 0 and isControlCharOtherThanCRLF(str1):\n        print \"rcvd:control char:\" + str(ord(str1))\n        dstcom.write(rcvd)\n        return \".\", True # new line = true\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n\n\n\u5099\u8003\n\n\n<ACK>\u306a\u3069\u3092\u53d7\u3051\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u53cd\u5bfe\u5074\u306eRS-232C\u3078\u9001\u4fe1\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\nUDP\u3078\u306e\u9001\u4fe1\u306f\".\"\u3068\u3044\u3046\u6587\u5b57\u306b\u3057\u3066\u3044\u308b\u304c\u3001TODO\u306b\u3042\u308b\u3088\u3046\u306b\"<ACK>\"\u306a\u3069\u306e\u6587\u5b57\u3068\u3057\u305f\u3044\u6c17\u304c\u3059\u308b\n\u307e\u305f\u306fUnity\u5074\u306e\u30bd\u30d5\u30c8\u5bfe\u5fdc\u3067\"\"\u306b\u5909\u63db\u3059\u308b\u306a\u3069\u3082\u5fc5\u8981\u304b\u3082\n\n\u3068\u308a\u3042\u3048\u305a\u660e\u65e5\u4f7f\u3044\u305f\u3044\u306e\u3067\u4e0a\u8a18\u3067\u5bfe\u5fdc\u3068\u3059\u308b\u3002\n\nfix bug\n\u9001\u4fe1\u51e6\u7406\u304c\u9593\u9055\u3063\u3066\u3044\u305f\u3002\nv0.9\u30bf\u30b0\u3092\u4ed8\u3051\u76f4\u3057\u305f\u3002\nv0.9 @ github\n\u4ee5\u4e0b\u304c\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3002\nstr1\u3092\u9001\u4fe1\u3059\u308b\u3079\u304d\u3068\u3053\u308d\u3092rcvd\u3092\u9001\u4fe1\u3057\u3066\u3044\u305f\u3002\ndef isControlCharOtherThanCRLF(code):\n    if ord(code) == 13 or ord(code) == 10:\n        return False\n    return ord(code) < 32 \n\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if len(str1) > 0 and isControlCharOtherThanCRLF(str1):\n        print \"rcvd:control char:\" + str(ord(str1))\n        dstcom.write(str1)\n        return \".\", True # new line = true\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n\nline monitor\nhttp://qiita.com/7of9/items/028556c5a819a6a8de96\n\nhttp://qiita.com/7of9/items/5e6a8c9f60b758c3e640\n\u306b\u3066\u554f\u984c\u306e\u3042\u3063\u305f`<ACK>`\u306a\u3069\u306e\u6271\u3044\u3092\u5bfe\u5fdc\u3002\n\n\u95a2\u9023 http://qiita.com/7of9/items/eee48db0127ad68790f2\n\n### code (v0.9)\n\n[v0.9 @ github](https://github.com/yasokada/python-151113-lineMonitor/releases/tag/v0.9)\n\n\n### \u5909\u66f4\u524d\n\n```py\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n```\n\n### \u5909\u66f4\u5f8c\n\n```py\ndef isControlCharOtherThanCRLF(code):\n    if ord(code) == 13 or ord(code) == 10:\n        return False\n    return ord(code) < 32 \n\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if len(str1) > 0 and isControlCharOtherThanCRLF(str1):\n        print \"rcvd:control char:\" + str(ord(str1))\n        dstcom.write(rcvd)\n        return \".\", True # new line = true\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n```\n\n### \u5099\u8003\n\n- `<ACK>`\u306a\u3069\u3092\u53d7\u3051\u305f\u3089\u3068\u308a\u3042\u3048\u305a\u53cd\u5bfe\u5074\u306eRS-232C\u3078\u9001\u4fe1\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n- UDP\u3078\u306e\u9001\u4fe1\u306f\".\"\u3068\u3044\u3046\u6587\u5b57\u306b\u3057\u3066\u3044\u308b\u304c\u3001TODO\u306b\u3042\u308b\u3088\u3046\u306b`\"<ACK>\"`\u306a\u3069\u306e\u6587\u5b57\u3068\u3057\u305f\u3044\u6c17\u304c\u3059\u308b\n- \u307e\u305f\u306fUnity\u5074\u306e\u30bd\u30d5\u30c8\u5bfe\u5fdc\u3067\"<ACK>\"\u306b\u5909\u63db\u3059\u308b\u306a\u3069\u3082\u5fc5\u8981\u304b\u3082\n\n\u3068\u308a\u3042\u3048\u305a\u660e\u65e5\u4f7f\u3044\u305f\u3044\u306e\u3067\u4e0a\u8a18\u3067\u5bfe\u5fdc\u3068\u3059\u308b\u3002\n\n### fix bug\n\n\u9001\u4fe1\u51e6\u7406\u304c\u9593\u9055\u3063\u3066\u3044\u305f\u3002\nv0.9\u30bf\u30b0\u3092\u4ed8\u3051\u76f4\u3057\u305f\u3002\n\n[v0.9 @ github](https://github.com/yasokada/python-151113-lineMonitor/releases/tag/v0.9)\n\n\u4ee5\u4e0b\u304c\u52d5\u4f5c\u3059\u308b\u30b3\u30fc\u30c9\u3002\nstr1\u3092\u9001\u4fe1\u3059\u308b\u3079\u304d\u3068\u3053\u308d\u3092rcvd\u3092\u9001\u4fe1\u3057\u3066\u3044\u305f\u3002\n\n```py\ndef isControlCharOtherThanCRLF(code):\n    if ord(code) == 13 or ord(code) == 10:\n        return False\n    return ord(code) < 32 \n\ndef comrelay(rcvd, srccom, dstcom):\n    str1 = srccom.read()\n    if len(str1) > 0 and isControlCharOtherThanCRLF(str1):\n        print \"rcvd:control char:\" + str(ord(str1))\n        dstcom.write(str1)\n        return \".\", True # new line = true\n    if (len(str1) > 0):\n        rcvd = rcvd + str1\n    if \"\\n\" in rcvd or \"\\r\" in rcvd:\n        print \"rcvd=\", rcvd\n        dstcom.write(rcvd)\n        return rcvd, True # new line = true\n\n    return rcvd, False # new line = false\n```\n"}