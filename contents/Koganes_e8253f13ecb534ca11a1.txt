{"tags": ["Android", "Security"], "context": "\n\n\u3053\u306e\u8a18\u4e8b\u306e\u6982\u8981\n\nAPI Level 23 (Android 6.0) \u306b\u306a\u3063\u3066Android Keystore \u304c\u8272\u3005\u3068\u5f37\u5316\u3055\u308c\u305f\n\u3068\u540c\u6642\u306bAPI Level 18 (Android 4.3) \u6642\u4ee3\u306e\u5b9f\u88c5\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u516c\u5f0f\u304b\u3089\u6d88\u3048\u305f\n4.3\u3067\u3082\u4f7f\u3048\u306a\u304d\u3083\u56f0\u308b\u3002\u3067\u3082\u8a73\u3057\u3044\u66f8\u304d\u65b9\u8f09\u3063\u3066\u306a\u3044\u3002\u3060\u304b\u3089\u66f8\u304d\u8a18\u3059\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3060\u3051\u3042\u308c\u3070\u5145\u5206\u3068\u3044\u3046\u65b9\u306f\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\nAndroid Keystore \u3068\u306f\nAndroid 4.3 \u304b\u3089\u767b\u5834\u3057\u305f\u9375\u7ba1\u7406\u306e\u4ed5\u7d44\u307f\u3002\u30a2\u30d7\u30ea\u5185\u306b\u306a\u3093\u3089\u304b\u306e\u6a5f\u5bc6\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u5834\u5408\u3001\u4f8b\u3048\u6697\u53f7\u5316\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3082\u9375\u304c\u898b\u3064\u304b\u3063\u3066\u3057\u307e\u3046\u3068\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u81ea\u524d\u3067\u9375\u3092\u30bb\u30ad\u30e5\u30a2\u306b\u7ba1\u7406\u3059\u308b\u306e\u306f\u306a\u304b\u306a\u304b\u96e3\u5100\u3067\u3059\u3002Android Keystore\u3092\u4f7f\u3048\u3070\u9375\u306e\u751f\u6210\u3084\u4fdd\u6301\u3092\u3069\u3063\u304b\u5b89\u5168\u306a\u5834\u6240\u3067Android\u304c\u3046\u307e\u3044\u3053\u3068\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff08\u3088\u304f\u3057\u3089\u306a\u3044\uff09\u3002\u3053\u306e\u9375\u306f\u3001\u9375\u304c\u751f\u6210\u3055\u308c\u305f\u30a2\u30d7\u30ea\uff06\u30c7\u30d0\u30a4\u30b9\u306e\u307f\u3067\u6709\u52b9\u306a\u3001\u307e\u3055\u306b\u30a2\u30d7\u30ea\u5185\u4fdd\u5b58\u306b\u7279\u5316\u3057\u305f\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u203b \u4ed5\u7d44\u307f\u3068\u3057\u3066\u306fiOS\u306eKeychain\u3068\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\uff08\u3042\u3061\u3089\u306f\u30a2\u30d7\u30ea\u9593\u3067\u9375\u306e\u5171\u6709\u3082\u3067\u304d\u308b\u3051\u3069\uff09\u3002\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306bAndroid\u306b\u3082Keychain\u3068\u3044\u3046API\u304c\u3042\u308a\u307e\u3059\u304c\u3001iOS\u306eKeychain\u3068\u306f\u610f\u5473\u5408\u3044\u304c\u9055\u3046\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\nAndroid 4.3 -> Android 6.0 \u3067API\u306f\u3069\u3046\u5909\u308f\u3063\u305f\u304b\n\u5185\u90e8\u7684\u306b\u306f\u6955\u5186\u66f2\u7dda\u6697\u53f7\u306a\u3069\u306e\u65b0\u305f\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3001\u3088\u3046\u3084\u304f\u5171\u901a\u9375\u6697\u53f7\u306b\u5bfe\u5fdc\u3057\u305f\u308a\u3068\u8272\u3005\u5f37\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b3\u30fc\u30c9\u4e0a\u306e\u5927\u304d\u306a\u9055\u3044\u306f\u4ee5\u4e0b\u306e2\u3064\u3067\u3059\u3002\n\n\nKeyPairGeneratorSpec\u304cdeprecated\u306b\u306a\u308a\u3001\u4ee3\u308f\u308a\u306bKeyGenParameterSpec\u304c\u7528\u610f\u3055\u308c\u305f\n\nKeyProperties\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3001\u4eca\u307e\u3067\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u76f4\u6253\u3061\u3057\u3066\u3044\u305f\u5f15\u6570\u306e\u5024\u7b49\u304c\u5b9a\u6570\u5316\u3055\u308c\u305f\n\n4.3\u6642\u4ee3\u3068\u6bd4\u3079\u308b\u3068\u5e7e\u5206\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306fAPI Level 23\u4ee5\u964d\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\uff08\u7279\u5b9a\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3001\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u305d\u306e\u3082\u306e\u304c23\u4ee5\u964d\u306b\u3057\u304b\u306a\u3044\uff09\u30022016/05/04 \u73fe\u5728\u3001Android 6.0 \u306e\u30b7\u30a7\u30a2\u306f7.5%\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3089deprecated\u3068\u8a00\u308f\u308c\u3066\u3082\u3001\u3053\u3093\u306a\u72b6\u6cc1\u3067Android 6.0\u672a\u6e80\u3092\u5207\u308a\u6368\u3066\u3089\u308c\u308b\u8c6a\u5091\u306f\u305d\u3046\u305d\u3046\u3044\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\nAndroid 4.3\u3067\u3082\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\n\u3082\u3068\u3082\u3068Android 4.3\u304b\u3089\u4f7f\u3048\u308bAPI\u306a\u306e\u3067\u300c4.3\u3067\u3082\u52d5\u304f\u300d\u3068\u3044\u3046\u306e\u306f\u5c11\u3057\u5909\u306a\u306e\u3067\u3059\u304c\u3001\u516c\u5f0f\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306f\u3059\u3063\u304b\u308a\u6700\u65b0\u7248\u306eAPI Level 23\u306e\u3082\u306e\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u30014.3\u6642\u4ee3\u306e\u66f8\u304d\u65b9\u306fWeb Archive\u306b\u3059\u3089\u6b8b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u3068\u3044\u3046\u308f\u3051\u3067deprecated\u306b\u306a\u3063\u305f\u65e7\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u304d\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u306b\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306fKeyPair\u3092\u4f5c\u308b\u3068\u3053\u308d\u3002\nprivate KeyPair createKeyPair() {\n    KeyPairGenerator kpg = null;\n    try {\n        kpg = KeyPairGenerator.getInstance(\"RSA\", \"AndroidKeyStore\");\n        kpg.initialize(createKeyPairGeneratorSpec());\n    } catch (Exception e) {\n        e.printStackTrace();\n        return null;\n    }\n    return kpg.generateKeyPair();\n}\n\n\u623b\u308a\u5024\u304c\u683c\u7d0d\u3055\u308c\u305f\u5909\u6570\u3092keyPair\u3068\u3059\u308b\u3068\u3001keyPair.getPublic()\u3067\u516c\u958b\u9375\u3001keyPair.getPrivate()\u3067\u79d8\u5bc6\u9375\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u9375\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3060\u3051\u306e\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u4fdd\u5b58\u307e\u3067\u7d42\u308f\u3063\u3066\u3044\u307e\u3059\u3002\"RSA\"\u3068\"AndroidKeyStore\"\u306f\u56fa\u5b9a\u306e\u6587\u5b57\u5217\u3067\u3059\u3002API Level 18\u3067\u306fRSA\u4ee5\u5916\u306e\u9078\u629e\u80a2\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u203b \u7d50\u69cb\u8272\u3005\u306a\u691c\u67fb\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u500b\u5225\u306ecatch\u306f\u5272\u611b\u3057\u3066\u3044\u307e\u3059\u3002\n\u7d9a\u3044\u3066createKeyPairGeneratorSpec()\u306e\u4e2d\u8eab\u3067\u3059\u3002KeyPairGenerator\u306e\u521d\u671f\u5316\u306b\u4f7f\u3046KeyPairGeneratorSpec\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3044\u308f\u3086\u308b\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u3059\u3002\nprivate KeyPairGeneratorSpec createKeyPairGeneratorSpec() {\n    Calendar start = Calendar.getInstance();\n    Calendar end = Calendar.getInstance();\n    end.add(Calendar.YEAR, 100);\n\n    KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(mContext)\n            .setAlias(KEY_STORE_ALIAS)\n            .setSubject(new X500Principal(String.format(\"CN=%s\", KEY_STORE_ALIAS)))\n            .setSerialNumber(BigInteger.valueOf(1000000))\n            .setStartDate(start.getTime())\n            .setEndDate(end.getTime())\n            .build();\n\n    return spec;\n}\n\n\u6697\u53f7\u5316\u306e\u305f\u3081\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u8a3c\u660e\u66f8\u3060\u3068\u601d\u3046\u306e\u3067setAlias(KEY_STORE_ALIAS)\u4ee5\u5916\u306e\u5024\u306f\u30c6\u30ad\u30c8\u30fc\u3067\u3059\u3002\u6709\u52b9\u671f\u9593\u306f\u306a\u3093\u3068\u306a\u304f100\u5e74\u306b\u3057\u3068\u304d\u307e\u3057\u305f\u3002Alias\u306f\u6b21\u56de\u4ee5\u964dKeyStore\u304b\u3089\u9375\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\u9762\u5012\u306a\u306e\u306fBuilder\u306bContext\u3092\u6e21\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u8868\u793a\uff08\u304c\u5fc5\u8981\u306a\u3068\u304d\uff09\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001Activity\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u53d6\u5f97\u3057\u306b\u304f\u3044\u3068\u304d\u306fApplication Context\u3067\u3082\u6e21\u3057\u3066\u304a\u3051\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\u203b \u56e0\u307f\u306bAPI Level 23\u306eKeyGenParameterSpec.Builder\u3067\u306f\u3053\u306e\u8fba\u308a\u306f\u7c21\u7565\u5316\u3055\u308c\u3001\u6307\u5b9a\u304c\u7121\u3051\u308c\u3070\u8a3c\u660e\u66f8\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3063\u3066\u52dd\u624b\u306b\u4f5c\u3063\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u308a\u307e\u3057\u305f\u3002Context\u3082\u4e0d\u8981\u3067\u3057\u305f\u3002\n\u6700\u5f8c\u306b\u3001Android Keystore\u304b\u3089\u305d\u308c\u305e\u308c\u306e\u9375\u3092\u53d6\u308a\u51fa\u3059\u90e8\u5206\u3067\u3059\u3002\nKeyStore keyStore = KeyStore.getInstance(\"AndroidKeyStore\");\nkeyStore.load(null);\nPublicKey  publicKey  = keyStore.getCertificate(KEY_STORE_ALIAS).getPublicKey();\nPrivateKey privateKey = keyStore.getKey(KEY_STORE_ALIAS, null);\n\nkeyStore.getKey()\u306e\u7b2c2\u5f15\u6570\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5165\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001Android Keystore\u306e\u5834\u5408\u306f\u5f53\u7136\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u306e\u3067\uff08\u3042\u3063\u305f\u3089\u610f\u5473\u7121\u3044\uff09null\u3067\u826f\u3044\u3063\u307d\u3044\u3067\u3059\u3002\u3053\u306ePublicKey\u3084PrivateKey\u306fCipher\u3067\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u3070\u4efb\u610f\u306ebyte\u5217\u3092\u6697\u53f7\u5316/\u5fa9\u53f7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nstatic private final String CIPHER_ALGORITHM = \"RSA/ECB/PKCS1Padding\";\n\npublic byte[] encrypt(byte[] bytes, PublicKey publicKey) {\n    try {\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.ENCRYPT_MODE, publicKey);\n\n        return cipher.doFinal(bytes);\n\n    } catch (GeneralSecurityException e) {\n        e.printStackTrace();\n        throw new RuntimeException(\"Encryption failed.\");\n    }\n}\n\npublic byte[] decrypt(byte[] bytes, PrivateKey privateKey) {\n    try {\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.DECRYPT_MODE, privateKey);\n\n        return cipher.doFinal(bytes);\n\n    } catch (GeneralSecurityException e) {\n        e.printStackTrace();\n        throw new RuntimeException(\"Decryption failed.\");\n    }\n}\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u3053\u3061\u3089\u304b\u3089\u3069\u3046\u305e\u3002\n\u203b \u8a18\u4e8b\u306b\u8f09\u305b\u305f\u30b3\u30fc\u30c9\u3068\u306f\u7d30\u90e8\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\n\u4ee5\u4e0b\u306e\u884c\u3092\u9069\u5f53\u306a\u6587\u5b57\u5217\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nstatic private final String KEY_STORE_ALIAS = \"sample_alias\"; // Change me\n\n\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\nencrypt(byte[] bytes) decrypt(byte[] bytes) getPublicKey() getPrivateKey()\n\u9375\u306e\u751f\u6210\u3068\u304b\u6c17\u306b\u305b\u305a\u3001\u3044\u304d\u306a\u308a\u30b3\u30fc\u30eb\u3057\u3066OK\u3067\u3059\u3002\u521d\u56de\u306a\u3089\u9375\u306e\u751f\u6210\u30012\u56de\u76ee\u304b\u3089\u306f\u53d6\u308a\u51fa\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002getPublicKey()\u3068getPrivateKey()\u306fCipher\u4ee5\u5916\u3067\u9375\u3092\u4f7f\u3046\u5834\u5408\u306a\u3069\u306b\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n// \u4f7f\u7528\u4f8b\nprivate AndroidKeyStoreManager mKeyStoreManager;\n\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    mKeyStoreManager = AndroidKeyStoreManager.getInstance(this);\n    test();\n}\n\nprivate void test() {\n    String plainText = \"hogehoge\";\n    byte[] encryptedBytes = mKeyStoreManager.encrypt(plainText.getBytes());\n    byte[] decryptedBytes = mKeyStoreManager.decrypt(encryptedBytes);\n    String decryptedText = new String(decryptedBytes);\n    Log.d(\"KeyStoreTest\", decryptedText);\u3000// -> hogehoge\n}\n\n#\u3053\u306e\u8a18\u4e8b\u306e\u6982\u8981\n- API Level 23 (Android 6.0) \u306b\u306a\u3063\u3066Android Keystore \u304c\u8272\u3005\u3068\u5f37\u5316\u3055\u308c\u305f\n- \u3068\u540c\u6642\u306bAPI Level 18 (Android 4.3) \u6642\u4ee3\u306e\u5b9f\u88c5\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u516c\u5f0f\u304b\u3089\u6d88\u3048\u305f\n- 4.3\u3067\u3082\u4f7f\u3048\u306a\u304d\u3083\u56f0\u308b\u3002\u3067\u3082\u8a73\u3057\u3044\u66f8\u304d\u65b9\u8f09\u3063\u3066\u306a\u3044\u3002\u3060\u304b\u3089\u66f8\u304d\u8a18\u3059\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3060\u3051\u3042\u308c\u3070\u5145\u5206\u3068\u3044\u3046\u65b9\u306f[\u3053\u3061\u3089](https://gist.github.com/k-ohkura/22a61981b2d42bd3d7d8f314fc30e582)\u304b\u3089\u3069\u3046\u305e\u3002\n\n#Android Keystore \u3068\u306f\nAndroid 4.3 \u304b\u3089\u767b\u5834\u3057\u305f\u9375\u7ba1\u7406\u306e\u4ed5\u7d44\u307f\u3002\u30a2\u30d7\u30ea\u5185\u306b\u306a\u3093\u3089\u304b\u306e\u6a5f\u5bc6\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u5834\u5408\u3001\u4f8b\u3048\u6697\u53f7\u5316\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3082\u9375\u304c\u898b\u3064\u304b\u3063\u3066\u3057\u307e\u3046\u3068\u610f\u5473\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u3057\u304b\u3057\u3001\u81ea\u524d\u3067\u9375\u3092\u30bb\u30ad\u30e5\u30a2\u306b\u7ba1\u7406\u3059\u308b\u306e\u306f[\u306a\u304b\u306a\u304b\u96e3\u5100](http://d.hatena.ne.jp/ockeghem/20120213/p1)\u3067\u3059\u3002Android Keystore\u3092\u4f7f\u3048\u3070\u9375\u306e\u751f\u6210\u3084\u4fdd\u6301\u3092\u3069\u3063\u304b\u5b89\u5168\u306a\u5834\u6240\u3067Android\u304c\u3046\u307e\u3044\u3053\u3068\u3084\u3063\u3066\u304f\u308c\u307e\u3059\uff08\u3088\u304f\u3057\u3089\u306a\u3044\uff09\u3002\u3053\u306e\u9375\u306f\u3001\u9375\u304c\u751f\u6210\u3055\u308c\u305f\u30a2\u30d7\u30ea\uff06\u30c7\u30d0\u30a4\u30b9\u306e\u307f\u3067\u6709\u52b9\u306a\u3001\u307e\u3055\u306b\u30a2\u30d7\u30ea\u5185\u4fdd\u5b58\u306b\u7279\u5316\u3057\u305f\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u203b \u4ed5\u7d44\u307f\u3068\u3057\u3066\u306fiOS\u306eKeychain\u3068\u3088\u304f\u4f3c\u3066\u3044\u307e\u3059\uff08\u3042\u3061\u3089\u306f\u30a2\u30d7\u30ea\u9593\u3067\u9375\u306e\u5171\u6709\u3082\u3067\u304d\u308b\u3051\u3069\uff09\u3002\u3084\u3084\u3053\u3057\u3044\u3053\u3068\u306bAndroid\u306b\u3082Keychain\u3068\u3044\u3046API\u304c\u3042\u308a\u307e\u3059\u304c\u3001iOS\u306eKeychain\u3068\u306f\u610f\u5473\u5408\u3044\u304c\u9055\u3046\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\n## Android 4.3 -> Android 6.0 \u3067API\u306f\u3069\u3046\u5909\u308f\u3063\u305f\u304b\n\u5185\u90e8\u7684\u306b\u306f\u6955\u5186\u66f2\u7dda\u6697\u53f7\u306a\u3069\u306e\u65b0\u305f\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u304c\u8ffd\u52a0\u3055\u308c\u305f\u308a\u3001\u3088\u3046\u3084\u304f\u5171\u901a\u9375\u6697\u53f7\u306b\u5bfe\u5fdc\u3057\u305f\u308a\u3068\u8272\u3005\u5f37\u5316\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u30b3\u30fc\u30c9\u4e0a\u306e\u5927\u304d\u306a\u9055\u3044\u306f\u4ee5\u4e0b\u306e2\u3064\u3067\u3059\u3002\n\n- [`KeyPairGeneratorSpec`](http://developer.android.com/intl/ja/reference/android/security/KeyPairGeneratorSpec.html)\u304cdeprecated\u306b\u306a\u308a\u3001\u4ee3\u308f\u308a\u306b[`KeyGenParameterSpec`](http://developer.android.com/intl/ja/reference/android/security/keystore/KeyGenParameterSpec.html)\u304c\u7528\u610f\u3055\u308c\u305f\n- [`KeyProperties`](http://developer.android.com/intl/ja/reference/android/security/keystore/KeyProperties.html)\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3001\u4eca\u307e\u3067\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u3067\u76f4\u6253\u3061\u3057\u3066\u3044\u305f\u5f15\u6570\u306e\u5024\u7b49\u304c\u5b9a\u6570\u5316\u3055\u308c\u305f\n\n4.3\u6642\u4ee3\u3068\u6bd4\u3079\u308b\u3068\u5e7e\u5206\u30b9\u30de\u30fc\u30c8\u306b\u66f8\u3051\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u306fAPI Level 23\u4ee5\u964d\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\uff08\u7279\u5b9a\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3001\u3067\u306f\u306a\u304f\u30af\u30e9\u30b9\u305d\u306e\u3082\u306e\u304c23\u4ee5\u964d\u306b\u3057\u304b\u306a\u3044\uff09\u30022016/05/04 \u73fe\u5728\u3001[Android 6.0 \u306e\u30b7\u30a7\u30a2](http://developer.android.com/intl/ja/about/dashboards/index.html)\u306f7.5%\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3044\u304f\u3089deprecated\u3068\u8a00\u308f\u308c\u3066\u3082\u3001\u3053\u3093\u306a\u72b6\u6cc1\u3067Android 6.0\u672a\u6e80\u3092\u5207\u308a\u6368\u3066\u3089\u308c\u308b\u8c6a\u5091\u306f\u305d\u3046\u305d\u3046\u3044\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n#Android 4.3\u3067\u3082\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\n\u3082\u3068\u3082\u3068Android 4.3\u304b\u3089\u4f7f\u3048\u308bAPI\u306a\u306e\u3067\u300c4.3\u3067\u3082\u52d5\u304f\u300d\u3068\u3044\u3046\u306e\u306f\u5c11\u3057\u5909\u306a\u306e\u3067\u3059\u304c\u3001[\u516c\u5f0f\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](http://developer.android.com/intl/ja/training/articles/keystore.html)\u306f\u3059\u3063\u304b\u308a\u6700\u65b0\u7248\u306eAPI Level 23\u306e\u3082\u306e\u306b\u66f8\u304d\u63db\u3048\u3089\u308c\u30014.3\u6642\u4ee3\u306e\u66f8\u304d\u65b9\u306f[Web Archive](https://archive.org/)\u306b\u3059\u3089\u6b8b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u3068\u3044\u3046\u308f\u3051\u3067deprecated\u306b\u306a\u3063\u305f\u65e7\u5f0f\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u304d\u8a18\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c8\u30c3\u30d7\u30c0\u30a6\u30f3\u306b\u3044\u304d\u307e\u3057\u3087\u3046\u3002\u307e\u305a\u306fKeyPair\u3092\u4f5c\u308b\u3068\u3053\u308d\u3002\n\n```java\nprivate KeyPair createKeyPair() {\n    KeyPairGenerator kpg = null;\n    try {\n        kpg = KeyPairGenerator.getInstance(\"RSA\", \"AndroidKeyStore\");\n        kpg.initialize(createKeyPairGeneratorSpec());\n    } catch (Exception e) {\n        e.printStackTrace();\n        return null;\n    }\n    return kpg.generateKeyPair();\n}\n```\n\u623b\u308a\u5024\u304c\u683c\u7d0d\u3055\u308c\u305f\u5909\u6570\u3092`keyPair`\u3068\u3059\u308b\u3068\u3001`keyPair.getPublic()`\u3067\u516c\u958b\u9375\u3001`keyPair.getPrivate()`\u3067\u79d8\u5bc6\u9375\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\u9375\u3092\u751f\u6210\u3057\u3066\u3044\u308b\u3060\u3051\u306e\u3088\u3046\u306b\u898b\u3048\u307e\u3059\u304c\u3001\u4fdd\u5b58\u307e\u3067\u7d42\u308f\u3063\u3066\u3044\u307e\u3059\u3002`\"RSA\"`\u3068`\"AndroidKeyStore\"`\u306f\u56fa\u5b9a\u306e\u6587\u5b57\u5217\u3067\u3059\u3002API Level 18\u3067\u306f[RSA\u4ee5\u5916\u306e\u9078\u629e\u80a2\u304c\u3042\u308a\u307e\u305b\u3093](http://developer.android.com/intl/ja/training/articles/keystore.html#SupportedAlgorithms)\u3002\n\u203b \u7d50\u69cb\u8272\u3005\u306a\u691c\u67fb\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\u3057\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u500b\u5225\u306ecatch\u306f\u5272\u611b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u7d9a\u3044\u3066`createKeyPairGeneratorSpec()`\u306e\u4e2d\u8eab\u3067\u3059\u3002KeyPairGenerator\u306e\u521d\u671f\u5316\u306b\u4f7f\u3046KeyPairGeneratorSpec\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\u3044\u308f\u3086\u308b\u30aa\u30ec\u30aa\u30ec\u8a3c\u660e\u66f8\u3067\u3059\u3002\n\n```java\nprivate KeyPairGeneratorSpec createKeyPairGeneratorSpec() {\n    Calendar start = Calendar.getInstance();\n    Calendar end = Calendar.getInstance();\n    end.add(Calendar.YEAR, 100);\n\n    KeyPairGeneratorSpec spec = new KeyPairGeneratorSpec.Builder(mContext)\n            .setAlias(KEY_STORE_ALIAS)\n            .setSubject(new X500Principal(String.format(\"CN=%s\", KEY_STORE_ALIAS)))\n            .setSerialNumber(BigInteger.valueOf(1000000))\n            .setStartDate(start.getTime())\n            .setEndDate(end.getTime())\n            .build();\n\n    return spec;\n}\n```\n\u6697\u53f7\u5316\u306e\u305f\u3081\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u8a3c\u660e\u66f8\u3060\u3068\u601d\u3046\u306e\u3067`setAlias(KEY_STORE_ALIAS)`\u4ee5\u5916\u306e\u5024\u306f\u30c6\u30ad\u30c8\u30fc\u3067\u3059\u3002\u6709\u52b9\u671f\u9593\u306f\u306a\u3093\u3068\u306a\u304f100\u5e74\u306b\u3057\u3068\u304d\u307e\u3057\u305f\u3002Alias\u306f\u6b21\u56de\u4ee5\u964dKeyStore\u304b\u3089\u9375\u3092\u53d6\u308a\u51fa\u3059\u3068\u304d\u306b\u4f7f\u3044\u307e\u3059\u3002\u9762\u5012\u306a\u306e\u306fBuilder\u306bContext\u3092\u6e21\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u3067\u3059\u3002\u30c0\u30a4\u30a2\u30ed\u30b0\u306e\u8868\u793a\uff08\u304c\u5fc5\u8981\u306a\u3068\u304d\uff09\u306b\u3057\u304b\u4f7f\u308f\u308c\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001Activity\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u53d6\u5f97\u3057\u306b\u304f\u3044\u3068\u304d\u306fApplication Context\u3067\u3082\u6e21\u3057\u3066\u304a\u3051\u3070\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\u203b \u56e0\u307f\u306bAPI Level 23\u306e[`KeyGenParameterSpec.Builder`](http://developer.android.com/intl/ja/reference/android/security/keystore/KeyGenParameterSpec.Builder.html)\u3067\u306f\u3053\u306e\u8fba\u308a\u306f\u7c21\u7565\u5316\u3055\u308c\u3001\u6307\u5b9a\u304c\u7121\u3051\u308c\u3070\u8a3c\u660e\u66f8\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u4f7f\u3063\u3066\u52dd\u624b\u306b\u4f5c\u3063\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u308a\u307e\u3057\u305f\u3002Context\u3082\u4e0d\u8981\u3067\u3057\u305f\u3002\n\n\u6700\u5f8c\u306b\u3001Android Keystore\u304b\u3089\u305d\u308c\u305e\u308c\u306e\u9375\u3092\u53d6\u308a\u51fa\u3059\u90e8\u5206\u3067\u3059\u3002\n\n```java\nKeyStore keyStore = KeyStore.getInstance(\"AndroidKeyStore\");\nkeyStore.load(null);\nPublicKey  publicKey  = keyStore.getCertificate(KEY_STORE_ALIAS).getPublicKey();\nPrivateKey privateKey = keyStore.getKey(KEY_STORE_ALIAS, null);\n```\n\n`keyStore.getKey()`\u306e\u7b2c2\u5f15\u6570\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u5165\u308b\u307f\u305f\u3044\u3067\u3059\u304c\u3001Android Keystore\u306e\u5834\u5408\u306f\u5f53\u7136\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u306e\u3067\uff08\u3042\u3063\u305f\u3089\u610f\u5473\u7121\u3044\uff09null\u3067\u826f\u3044\u3063\u307d\u3044\u3067\u3059\u3002\u3053\u306e`PublicKey`\u3084`PrivateKey`\u306f[`Cipher`](https://docs.oracle.com/javase/7/docs/api/javax/crypto/Cipher.html)\u3067\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u305b\u3070\u4efb\u610f\u306ebyte\u5217\u3092\u6697\u53f7\u5316/\u5fa9\u53f7\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\nstatic private final String CIPHER_ALGORITHM = \"RSA/ECB/PKCS1Padding\";\n\npublic byte[] encrypt(byte[] bytes, PublicKey publicKey) {\n    try {\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.ENCRYPT_MODE, publicKey);\n\n        return cipher.doFinal(bytes);\n\n    } catch (GeneralSecurityException e) {\n        e.printStackTrace();\n        throw new RuntimeException(\"Encryption failed.\");\n    }\n}\n\npublic byte[] decrypt(byte[] bytes, PrivateKey privateKey) {\n    try {\n        Cipher cipher = Cipher.getInstance(CIPHER_ALGORITHM);\n        cipher.init(Cipher.DECRYPT_MODE, privateKey);\n\n        return cipher.doFinal(bytes);\n\n    } catch (GeneralSecurityException e) {\n        e.printStackTrace();\n        throw new RuntimeException(\"Decryption failed.\");\n    }\n}\n```\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n[\u3053\u3061\u3089](https://gist.github.com/k-ohkura/22a61981b2d42bd3d7d8f314fc30e582)\u304b\u3089\u3069\u3046\u305e\u3002\n\u203b \u8a18\u4e8b\u306b\u8f09\u305b\u305f\u30b3\u30fc\u30c9\u3068\u306f\u7d30\u90e8\u304c\u7570\u306a\u3063\u3066\u3044\u307e\u3059\n\n\u4ee5\u4e0b\u306e\u884c\u3092\u9069\u5f53\u306a\u6587\u5b57\u5217\u306b\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```java\nstatic private final String KEY_STORE_ALIAS = \"sample_alias\"; // Change me\n```\n\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f7f\u3048\u307e\u3059\u3002\n`encrypt(byte[] bytes)` `decrypt(byte[] bytes)` `getPublicKey()` `getPrivateKey()`\n\u9375\u306e\u751f\u6210\u3068\u304b\u6c17\u306b\u305b\u305a\u3001\u3044\u304d\u306a\u308a\u30b3\u30fc\u30eb\u3057\u3066OK\u3067\u3059\u3002\u521d\u56de\u306a\u3089\u9375\u306e\u751f\u6210\u30012\u56de\u76ee\u304b\u3089\u306f\u53d6\u308a\u51fa\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002`getPublicKey()`\u3068`getPrivateKey()`\u306fCipher\u4ee5\u5916\u3067\u9375\u3092\u4f7f\u3046\u5834\u5408\u306a\u3069\u306b\u3054\u5229\u7528\u304f\u3060\u3055\u3044\u3002\n\n```java\n// \u4f7f\u7528\u4f8b\nprivate AndroidKeyStoreManager mKeyStoreManager;\n\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_main);\n\n    mKeyStoreManager = AndroidKeyStoreManager.getInstance(this);\n    test();\n}\n\nprivate void test() {\n    String plainText = \"hogehoge\";\n    byte[] encryptedBytes = mKeyStoreManager.encrypt(plainText.getBytes());\n    byte[] decryptedBytes = mKeyStoreManager.decrypt(encryptedBytes);\n    String decryptedText = new String(decryptedBytes);\n    Log.d(\"KeyStoreTest\", decryptedText);\u3000// -> hogehoge\n}\n```\n\n"}