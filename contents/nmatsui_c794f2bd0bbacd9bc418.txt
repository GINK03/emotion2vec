{"context": " More than 1 year has passed since last update.Intel Edison Arduino Board\u306eGPIO\u3092\u5229\u7528\u3057\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u53d7\u4fe1\u3092\u884c\u3046\u3002\u4eca\u56de\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u306fPL-IRM0101\u3092\u7528\u3044\u305f\u3002\n\n\u8d64\u5916\u7dda\u30bb\u30f3\u30b5\u30fc\u306e\u63a5\u7d9a\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u3044Intel Edison Arduino Board\u3068PL-IRM0101\u3092\u63a5\u7d9a\u3059\u308b\u3002\nPL-IRM0101 \u306e\u30d4\u30f3\u306f\u5411\u304b\u3063\u3066\u5de6\u5074\u304b\u3089 Vout\uff084.5\u301c5.5V\uff09\u3001 GND \u3001 VCC \uff084.5\u301c5.5V\uff09\u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u5de6\u5074\u306e\u30d4\u30f3\u3092\u30c7\u30b8\u30bf\u30eb\u5165\u51fa\u529b8\u3078\u3001\u771f\u3093\u4e2d\u306e\u30d4\u30f3\u3092GND\u3078\u3001\u53f3\u5074\u306e\u30d4\u30f3\u3092Power 5V\u3078\u63a5\u7d9a\u3059\u308b\u3002\n\n\n\n\n\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306fRFP\u7b49\u3067\u660e\u78ba\u306b\u5b9a\u3081\u3089\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u304c\u3001\u56fd\u5185\u3067\u306f\u304a\u304a\u3088\u305dNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002\u5404\u3005\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8a73\u7d30\u306f\u3001\u6b21\u306e\u8cc7\u6599\u304c\u53c2\u8003\u306b\u306a\u308b\u3002\nhttp://akizukidenshi.com/download/k4174_format.pdf\n\u4eca\u56de\u306fpython2.7\u3067\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u9001\u3089\u308c\u305f\u30b3\u30de\u30f3\u30c9\u306e\u89e3\u6790\u90e8\u5206\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\nIntel Edison\u306e\u30c7\u30d5\u30a9\u30eb\u30c8OS\u306b\u306f\u3001Intel\u304c\u63d0\u4f9b\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u62bd\u8c61\u5316\u30e9\u30a4\u30d6\u30e9\u30ea MRAA \u304c\u6700\u521d\u304b\u3089\u642d\u8f09\u3055\u308c\u3066\u304a\u308a\u3001Python\u304b\u3089\u3082\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u304b\u306e\u3088\u3046\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nirsensor.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport mraa\nimport time\n\nPIN = 8          # Vout\u3092\u63a5\u7d9a\u3057\u305fArudino Board\u306eGPIO\u756a\u53f7\nBUF = 0.35       # HIGH/LOW\u7d99\u7d9a\u6642\u9593\u306e\u8a31\u5bb9\u30d6\u30ec\u5e45 [ms]\nFLAME_SPACE = 50 # \u4e00\u9023\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u5224\u65ad\u3059\u308bLOW\u304c\u7d99\u7d9a\u3059\u308b\u6642\u9593 [ms]\n\nHIGH, LOW = 1, 0\n\n\nclass KadenkyoDecoder(object):\n    L_HIGH = 3.2   # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308bHIGH\u7d99\u7d9a\u6642\u9593 [ms]\n    L_LOW = 1.6    # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308bLOW\u7d99\u7d9a\u6642\u9593 [ms]\n\n    D_LOW_0 = 0.4  # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u30010\u306e\u5834\u5408\u306eLOW\u7d99\u7d9a\u6642\u9593 [ms]\n    D_LOW_1 = 1.2  # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u30011\u306e\u5834\u5408\u306eLOW\u7d99\u7d9a\u6642\u9593 [ms]\n\n    def __init__(self, code):\n        self.code = code\n\n    def decode(self):\n        if len(self.code) <= 3: # \u53d7\u4fe1\u3057\u305fHIGH/LOW\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u304c3\u4ee5\u4e0b\u306e\u5834\u5408\u306f\u30ce\u30a4\u30ba\u3068\u307f\u306a\u3059\n            return \"UNKNOWN\"\n\n        paired = self.__make_pair(self.code[:-1])\n\n        if not self.__is_valid_format(paired[0]):\n            return \"UNKNOWN\"\n        else:\n            return \"\".join(map(str, map(self.__make_bit, paired[1:])))\n\n    def __make_pair(self, code): # HIGH/LOW\u7d99\u7d9a\u6642\u9593\u306e\u30ea\u30b9\u30c8\u3092HIGH & LOW\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n        def pair(l):\n            for i in xrange(0, len(l), 2):\n                yield {\"H\": l[i][\"len\"], \"L\": l[i + 1][\"len\"]}\n        return list(pair(code))\n\n    def __is_valid_format(self, lc): # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u5408\u81f4\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        h = self.L_HIGH - BUF <= lc[\"H\"] <= self.L_HIGH + BUF\n        l = self.L_LOW - BUF <= lc[\"L\"] <= self.L_LOW + BUF\n        return h and l\n\n    def __make_bit(self, dc): # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306e\u5b9a\u7fa9\u306b\u5f93\u3044\u3001HIGH & LOW\u306e\u30da\u30a2\u30920 or 1\u306b\u5909\u63db\u3059\u308b\n        if self.D_LOW_0 - BUF <= dc[\"L\"] <= self.D_LOW_0 + BUF:\n            return 0\n        elif self.D_LOW_1 - BUF <= dc[\"L\"] <= self.D_LOW_1 + BUF:\n            return 1\n        else:\n            return 9\n\n\ndef print_code(code):\n    for i, elem in enumerate(code):\n        s = \"LOW \" if elem[\"state\"] == HIGH else \"HIGH\"\n        print \"%03d: %s %5.2f[ms]\" % (i, s, round(elem[\"len\"], 2))\n\n\ndef main():\n    ir = mraa.Gpio(PIN) # Intel\u306eMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u3066\u6307\u5b9a\u3057\u305fGPIO\u306e\u96fb\u5727\u72b6\u614b\u3092\u53d6\u5f97\u3059\u308b\n    ir.dir(mraa.DIR_IN)\n\n    recv, last, st, nt, code = False, LOW, 0, 0, []\n    while True:\n        current = not ir.read()  # PL-IRM0101\u306f\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306b0\u3092\u8fd4\u3059\u306e\u3067\u30d3\u30c3\u30c8\u53cd\u8ee2\n        nt = time.time() * 1000\n        if last != current: # HIGH\u3068LOW\u304c\u53cd\u8ee2\u3057\u305f\u30a8\u30c3\u30b8\u304b\u3089\u30a8\u30c3\u30b8\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\n            last = current\n            if not recv:\n                recv = True\n                st = time.time() * 1000\n                continue\n            code.append({\"state\": last, \"len\": nt - st})\n            st = nt\n        if recv and last == LOW and nt - st > FLAME_SPACE: # FLAME_SPACE\u306e\u9593\u7d99\u7d9a\u3057\u3066LOW\u306e\u5834\u5408\u3001\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\n            # print_code(code)\n            s = KadenkyoDecoder(code).decode()\n            print s\n            recv, last, st, nt, code = False, LOW, 0, 0, []\n\nif __name__ == \"__main__\":\n    try:\n        print \"start\"\n        main()\n    except KeyboardInterrupt as err: # Ctrl-C\u304c\u5165\u529b\u3055\u308c\u305f\u3089\u7d42\u4e86\n        print \"end\"\n\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001\u3056\u3063\u304f\u308a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u3066\u3044\u308b\uff08\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u307e\u3063\u305f\u304f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8ffd\u52a0\u3059\u308b\u65b9\u304c\u826f\u3044\uff09\u3002\n\nmain() : \u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u306eVout\u306e\u96fb\u5727\u5909\u5316\u304b\u3089\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\uff08HIGH\uff09\u306e\u6642\u9593\u3068\u53d7\u4fe1\u3057\u3066\u3044\u306a\u3044\uff08LOW\uff09\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u30ea\u30b9\u30c8\u5316\nKadenkyoDecoder(code).decode() : \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u5b9a\u7fa9\u306b\u7167\u3089\u3057\u3042\u308f\u305b\u3066\u3001\u5f97\u3089\u308c\u305f\u8d64\u5916\u7dda\u30d1\u30eb\u30b9\u3092\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u30fb\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u306b\u5206\u89e3\n\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u3066\u3044\u305f\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u90e8\u5206\u309248\u30d3\u30c3\u30c8\u306e\u30d3\u30c3\u30c8\u914d\u5217\u306b\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u8fd4\u3059\n\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\"UNKNOWN\"\u3092\u8fd4\u3059\n\n\nPL-IRM0101 \u304b\u3089\u5f97\u3089\u308c\u308bVout\u306f\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\u6642\u306b0\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u306a\u3044\u6642\u306b1\u304c\u8fd4\u308b\u306e\u3067\u6ce8\u610f\n\nPIN\u756a\u53f7\u3084BUF\u79d2\u6570\u3001FLAME_SPACE\u79d2\u6570\u306f\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u3068\u601d\u308f\u308c\u308b\u3002\u30a4\u30a4\u30ab\u30f3\u30b8\u306b\u8abf\u6574\u3057\u3066\u307b\u3057\u3044\u3002\n\n\u5b9f\u884c\u7d50\u679c\n\n\u5b9f\u884c\u7d50\u679c\nroot@edison:~# ./irsensor.py \nstart\n010000000000010000000001000000001011110010111101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000000010110000101101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010110010101101\nUNKNOWN\nUNKNOWN\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010110010101101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010000010100001\nUNKNOWN\nUNKNOWN\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001011110010111101\nUNKNOWN\nUNKNOWN\n^Cend\n\n\n\u3068\u3042\u308b\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u7528\u306e\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u3092\u30bb\u30f3\u30b5\u30fc\u306b\u5411\u3051\u3001\u3044\u304f\u3064\u304b\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u3063\u305f\u3002\n\u3053\u306e\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u7528\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u3067\u306f\u3001\u30c6\u30ec\u30d3\u81ea\u8eab\u3092\u64cd\u4f5c\u3059\u308b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u305f4\u7a2e\u306e\u30b3\u30de\u30f3\u30c9\u3068\u3001\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u308f\u306a\u3044\u306e\u8907\u6570\u306e\u30b3\u30de\u30f3\u30c9\u304c\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\n\u9001\u4fe1\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u3068\u30c6\u30ec\u30d3\u64cd\u4f5c\u7528\u30dc\u30bf\u30f3\u306e\u5bfe\u5fdc\n010000000000010000000001000000001011110010111101  => \u96fb\u6e90ON/OFF\n010000000000010000000001000000000010110000101101  => \u30c1\u30e3\u30f3\u30cd\u30eb\u4e0a\n010000000000010000000001000000001010110010101101  => \u30c1\u30e3\u30f3\u30cd\u30eb\u4e0b\n010000000000010000000001000000001010000010100001  => \u5165\u529b\u30bd\u30fc\u30b9\u5207\u66ff\n\n\n\n\u307e\u3068\u3081\n\u4eca\u56de\u306fntel Edison Arduino Board\u3068\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u3092\u89e3\u6790\u3057\u305f\u3002\n\u4eca\u5f8c\u306fNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3078\u306e\u5bfe\u5fdc\u3084\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3063\u3071\u306a\u3057\u306b\u3057\u305f\u5834\u5408\u3078\u306e\u5bfe\u5fdc\u3001\u307e\u305f\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u5b66\u7fd2\u6a5f\u80fd\u306a\u3069\u306b\u5bfe\u5fdc\u3059\u308b\u3068\u9762\u767d\u3044\u3060\u308d\u3046\u3002\nIntel Edison Arduino Board\u306eGPIO\u3092\u5229\u7528\u3057\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u53d7\u4fe1\u3092\u884c\u3046\u3002\u4eca\u56de\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u306f[PL-IRM0101](http://akizukidenshi.com/download/ds/paralight/DS-27-01-0001%20PL-IRM0101-3%20B1.pdf)\u3092\u7528\u3044\u305f\u3002\n\n# \u8d64\u5916\u7dda\u30bb\u30f3\u30b5\u30fc\u306e\u63a5\u7d9a\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\u3092\u4f7f\u3044Intel Edison Arduino Board\u3068`PL-IRM0101`\u3092\u63a5\u7d9a\u3059\u308b\u3002\n\n`PL-IRM0101` \u306e\u30d4\u30f3\u306f\u5411\u304b\u3063\u3066\u5de6\u5074\u304b\u3089 **Vout**\uff084.5\u301c5.5V\uff09\u3001 **GND** \u3001 **VCC** \uff084.5\u301c5.5V\uff09\u3068\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u5de6\u5074\u306e\u30d4\u30f3\u3092\u30c7\u30b8\u30bf\u30eb\u5165\u51fa\u529b8\u3078\u3001\u771f\u3093\u4e2d\u306e\u30d4\u30f3\u3092GND\u3078\u3001\u53f3\u5074\u306e\u30d4\u30f3\u3092Power 5V\u3078\u63a5\u7d9a\u3059\u308b\u3002\n\n![irsensor.png](https://qiita-image-store.s3.amazonaws.com/0/37648/74f79f92-144e-0805-eff1-33204c8c6d61.png)\n\n![DSC_0219.JPG](https://qiita-image-store.s3.amazonaws.com/0/37648/dcb61dd5-b602-50d3-1bbc-296e39894335.jpeg)\n\n![DSC_0220.JPG](https://qiita-image-store.s3.amazonaws.com/0/37648/2e0e66e3-e7b4-e7fb-cdd1-0a1456282917.jpeg)\n\n# \u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306fRFP\u7b49\u3067\u660e\u78ba\u306b\u5b9a\u3081\u3089\u308c\u3066\u3044\u308b\u3082\u306e\u3067\u306f\u306a\u3044\u304c\u3001\u56fd\u5185\u3067\u306f\u304a\u304a\u3088\u305dNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u6e96\u62e0\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3042\u308b\u3002\u5404\u3005\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u8a73\u7d30\u306f\u3001\u6b21\u306e\u8cc7\u6599\u304c\u53c2\u8003\u306b\u306a\u308b\u3002\n\nhttp://akizukidenshi.com/download/k4174_format.pdf\n\n\u4eca\u56de\u306fpython2.7\u3067\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u9001\u3089\u308c\u305f\u30b3\u30de\u30f3\u30c9\u306e\u89e3\u6790\u90e8\u5206\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\n# \u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u89e3\u6790\u30d7\u30ed\u30b0\u30e9\u30e0\n\nIntel Edison\u306e\u30c7\u30d5\u30a9\u30eb\u30c8OS\u306b\u306f\u3001Intel\u304c\u63d0\u4f9b\u3059\u308b\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u62bd\u8c61\u5316\u30e9\u30a4\u30d6\u30e9\u30ea **MRAA** \u304c\u6700\u521d\u304b\u3089\u642d\u8f09\u3055\u308c\u3066\u304a\u308a\u3001Python\u304b\u3089\u3082\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u304b\u306e\u3088\u3046\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```python:irsensor.py\n#! /usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport mraa\nimport time\n\nPIN = 8          # Vout\u3092\u63a5\u7d9a\u3057\u305fArudino Board\u306eGPIO\u756a\u53f7\nBUF = 0.35       # HIGH/LOW\u7d99\u7d9a\u6642\u9593\u306e\u8a31\u5bb9\u30d6\u30ec\u5e45 [ms]\nFLAME_SPACE = 50 # \u4e00\u9023\u306e\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u5224\u65ad\u3059\u308bLOW\u304c\u7d99\u7d9a\u3059\u308b\u6642\u9593 [ms]\n\nHIGH, LOW = 1, 0\n\n\nclass KadenkyoDecoder(object):\n    L_HIGH = 3.2   # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308bHIGH\u7d99\u7d9a\u6642\u9593 [ms]\n    L_LOW = 1.6    # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u304a\u3051\u308bLOW\u7d99\u7d9a\u6642\u9593 [ms]\n\n    D_LOW_0 = 0.4  # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u30010\u306e\u5834\u5408\u306eLOW\u7d99\u7d9a\u6642\u9593 [ms]\n    D_LOW_1 = 1.2  # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306b\u304a\u3044\u3066\u30011\u306e\u5834\u5408\u306eLOW\u7d99\u7d9a\u6642\u9593 [ms]\n\n    def __init__(self, code):\n        self.code = code\n\n    def decode(self):\n        if len(self.code) <= 3: # \u53d7\u4fe1\u3057\u305fHIGH/LOW\u30ea\u30b9\u30c8\u306e\u30b5\u30a4\u30ba\u304c3\u4ee5\u4e0b\u306e\u5834\u5408\u306f\u30ce\u30a4\u30ba\u3068\u307f\u306a\u3059\n            return \"UNKNOWN\"\n\n        paired = self.__make_pair(self.code[:-1])\n\n        if not self.__is_valid_format(paired[0]):\n            return \"UNKNOWN\"\n        else:\n            return \"\".join(map(str, map(self.__make_bit, paired[1:])))\n\n    def __make_pair(self, code): # HIGH/LOW\u7d99\u7d9a\u6642\u9593\u306e\u30ea\u30b9\u30c8\u3092HIGH & LOW\u306e\u30da\u30a2\u306e\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\n        def pair(l):\n            for i in xrange(0, len(l), 2):\n                yield {\"H\": l[i][\"len\"], \"L\": l[i + 1][\"len\"]}\n        return list(pair(code))\n\n    def __is_valid_format(self, lc): # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u306b\u5408\u81f4\u3059\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        h = self.L_HIGH - BUF <= lc[\"H\"] <= self.L_HIGH + BUF\n        l = self.L_LOW - BUF <= lc[\"L\"] <= self.L_LOW + BUF\n        return h and l\n\n    def __make_bit(self, dc): # \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u306e\u5b9a\u7fa9\u306b\u5f93\u3044\u3001HIGH & LOW\u306e\u30da\u30a2\u30920 or 1\u306b\u5909\u63db\u3059\u308b\n        if self.D_LOW_0 - BUF <= dc[\"L\"] <= self.D_LOW_0 + BUF:\n            return 0\n        elif self.D_LOW_1 - BUF <= dc[\"L\"] <= self.D_LOW_1 + BUF:\n            return 1\n        else:\n            return 9\n\n\ndef print_code(code):\n    for i, elem in enumerate(code):\n        s = \"LOW \" if elem[\"state\"] == HIGH else \"HIGH\"\n        print \"%03d: %s %5.2f[ms]\" % (i, s, round(elem[\"len\"], 2))\n\n\ndef main():\n    ir = mraa.Gpio(PIN) # Intel\u306eMRAA\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u3044\u3066\u6307\u5b9a\u3057\u305fGPIO\u306e\u96fb\u5727\u72b6\u614b\u3092\u53d6\u5f97\u3059\u308b\n    ir.dir(mraa.DIR_IN)\n\n    recv, last, st, nt, code = False, LOW, 0, 0, []\n    while True:\n        current = not ir.read()  # PL-IRM0101\u306f\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u305f\u5834\u5408\u306b0\u3092\u8fd4\u3059\u306e\u3067\u30d3\u30c3\u30c8\u53cd\u8ee2\n        nt = time.time() * 1000\n        if last != current: # HIGH\u3068LOW\u304c\u53cd\u8ee2\u3057\u305f\u30a8\u30c3\u30b8\u304b\u3089\u30a8\u30c3\u30b8\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3059\u308b\n            last = current\n            if not recv:\n                recv = True\n                st = time.time() * 1000\n                continue\n            code.append({\"state\": last, \"len\": nt - st})\n            st = nt\n        if recv and last == LOW and nt - st > FLAME_SPACE: # FLAME_SPACE\u306e\u9593\u7d99\u7d9a\u3057\u3066LOW\u306e\u5834\u5408\u3001\u30b3\u30de\u30f3\u30c9\u304c\u7d42\u4e86\u3057\u305f\u3068\u5224\u65ad\u3059\u308b\n            # print_code(code)\n            s = KadenkyoDecoder(code).decode()\n            print s\n            recv, last, st, nt, code = False, LOW, 0, 0, []\n\nif __name__ == \"__main__\":\n    try:\n        print \"start\"\n        main()\n    except KeyboardInterrupt as err: # Ctrl-C\u304c\u5165\u529b\u3055\u308c\u305f\u3089\u7d42\u4e86\n        print \"end\"\n```\n\n\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u306f\u3001\u3056\u3063\u304f\u308a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u51e6\u7406\u3092\u3057\u3066\u3044\u308b\uff08\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u307e\u3063\u305f\u304f\u5b9f\u88c5\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8ffd\u52a0\u3059\u308b\u65b9\u304c\u826f\u3044\uff09\u3002\n\n1. main() : \u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u306eVout\u306e\u96fb\u5727\u5909\u5316\u304b\u3089\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\uff08HIGH\uff09\u306e\u6642\u9593\u3068\u53d7\u4fe1\u3057\u3066\u3044\u306a\u3044\uff08LOW\uff09\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u3066\u30ea\u30b9\u30c8\u5316\n2. KadenkyoDecoder(code).decode() : \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u5b9a\u7fa9\u306b\u7167\u3089\u3057\u3042\u308f\u305b\u3066\u3001\u5f97\u3089\u308c\u305f\u8d64\u5916\u7dda\u30d1\u30eb\u30b9\u3092\u30ea\u30fc\u30c0\u30fc\u30b3\u30fc\u30c9\u30fb\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u30fb\u30b9\u30c8\u30c3\u30d7\u30d3\u30c3\u30c8\u306b\u5206\u89e3\n3. \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u3066\u3044\u305f\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30b3\u30fc\u30c9\u90e8\u5206\u309248\u30d3\u30c3\u30c8\u306e\u30d3\u30c3\u30c8\u914d\u5217\u306b\u30c7\u30b3\u30fc\u30c9\u3057\u3066\u8fd4\u3059\n4. \u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u3001\"UNKNOWN\"\u3092\u8fd4\u3059\n\n> `PL-IRM0101` \u304b\u3089\u5f97\u3089\u308c\u308bVout\u306f\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u308b\u6642\u306b0\u3001\u8d64\u5916\u7dda\u3092\u53d7\u4fe1\u3057\u3066\u3044\u306a\u3044\u6642\u306b1\u304c\u8fd4\u308b\u306e\u3067\u6ce8\u610f\n\nPIN\u756a\u53f7\u3084BUF\u79d2\u6570\u3001FLAME_SPACE\u79d2\u6570\u306f\u3001\u74b0\u5883\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u3068\u601d\u308f\u308c\u308b\u3002\u30a4\u30a4\u30ab\u30f3\u30b8\u306b\u8abf\u6574\u3057\u3066\u307b\u3057\u3044\u3002\n\n# \u5b9f\u884c\u7d50\u679c\n\n```text:\u5b9f\u884c\u7d50\u679c\nroot@edison:~# ./irsensor.py \nstart\n010000000000010000000001000000001011110010111101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000000010110000101101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010110010101101\nUNKNOWN\nUNKNOWN\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010110010101101\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001010000010100001\nUNKNOWN\nUNKNOWN\nUNKNOWN\nUNKNOWN\n010000000000010000000001000000001011110010111101\nUNKNOWN\nUNKNOWN\n^Cend\n```\n\n\u3068\u3042\u308b\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u7528\u306e\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u3092\u30bb\u30f3\u30b5\u30fc\u306b\u5411\u3051\u3001\u3044\u304f\u3064\u304b\u306e\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u4e0a\u8a18\u306e\u3088\u3046\u306a\u7d50\u679c\u306b\u306a\u3063\u305f\u3002\n\n\u3053\u306e\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u7528\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u3067\u306f\u3001\u30c6\u30ec\u30d3\u81ea\u8eab\u3092\u64cd\u4f5c\u3059\u308b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u3063\u305f4\u7a2e\u306e\u30b3\u30de\u30f3\u30c9\u3068\u3001\u30bb\u30c3\u30c8\u30c8\u30c3\u30d7\u30dc\u30c3\u30af\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5f93\u308f\u306a\u3044\u306e\u8907\u6570\u306e\u30b3\u30de\u30f3\u30c9\u304c\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u3067\u3042\u308b\u3002\n\n```text:\u9001\u4fe1\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u3068\u30c6\u30ec\u30d3\u64cd\u4f5c\u7528\u30dc\u30bf\u30f3\u306e\u5bfe\u5fdc\n010000000000010000000001000000001011110010111101  => \u96fb\u6e90ON/OFF\n010000000000010000000001000000000010110000101101  => \u30c1\u30e3\u30f3\u30cd\u30eb\u4e0a\n010000000000010000000001000000001010110010101101  => \u30c1\u30e3\u30f3\u30cd\u30eb\u4e0b\n010000000000010000000001000000001010000010100001  => \u5165\u529b\u30bd\u30fc\u30b9\u5207\u66ff\n```\n\n# \u307e\u3068\u3081\n\n\u4eca\u56de\u306fntel Edison Arduino Board\u3068\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u53d7\u4fe1\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u7528\u3044\u3066\u3001\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u5bb6\u96fb\u5354\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u30b3\u30de\u30f3\u30c9\u3092\u89e3\u6790\u3057\u305f\u3002\n\n\u4eca\u5f8c\u306fNEC\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3078\u306e\u5bfe\u5fdc\u3084\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3063\u3071\u306a\u3057\u306b\u3057\u305f\u5834\u5408\u3078\u306e\u5bfe\u5fdc\u3001\u307e\u305f\u8d64\u5916\u7dda\u30ea\u30e2\u30b3\u30f3\u306e\u30b3\u30de\u30f3\u30c9\u5b66\u7fd2\u6a5f\u80fd\u306a\u3069\u306b\u5bfe\u5fdc\u3059\u308b\u3068\u9762\u767d\u3044\u3060\u308d\u3046\u3002\n", "tags": ["Edison", "Python", "python2.7"]}