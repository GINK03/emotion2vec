{"context": "AWS\u3084Cloudn\u3092API\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308bCLI\u30c4\u30fc\u30ebCloudStack cloudmonkey CLI\u3067\u3082\u6b8b\u5ff5\u306a\u304c\u3089Python2\u3002\u305d\u3053\u3067\u3001\u52c9\u5f37\u306e\u305f\u3081\u306bPython3\u3067\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3002\u3000\n\u307e\u3060\u6210\u529f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u30e1\u30e2\u3068\u3057\u3066\u5229\u7528\u4e2d\u3002\n\nPython3\u5316\n\u3061\u3087\u3063\u3068\u8abf\u3079\u305f\u3068\u3053\u308d\u4e00\u822c\u7684\u306b\u306f\u3001\uff12\u30d1\u30bf\u30fc\u30f3\u3042\u308a\u3001\u5f15\u304d\u7d9a\u304dpython2\u3067\u3082\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\u3001\u300cPolyglot\u300d\u3068\u3001\u305d\u308c\u4ee5\u964d\u306fPython2\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u300cPort\u300d\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\u65b9\u5411\u6027\n\u3000\u3000python2\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067Port\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\nPython3\u5316\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\ndiveintopython\n\nPython3\u5316\u30c4\u30fc\u30eb\n2\u304b\u30893\u306b\u79fb\u884c\u3059\u308b\u306e\u306f\u3088\u304f\u3042\u308b\u307f\u305f\u3044\u3067\u3001\u3059\u3050\u306b\u5e7e\u3064\u304b\u30c4\u30fc\u30eb\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n2to3\nFuturize\nSix\n\n\u4f5c\u696d\u5c65\u6b74\n\n\u4f5c\u696d\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u305d\u3053\u306b\u79fb\u52d5\n$ mkdir porting\n$ cd porting\n\n\n\u4f5c\u696d\u7528\u306e\u74b0\u5883\u3092\u6e96\u5099\u3057\u3066\n$ pyvenv ven\n$ source ven/bin/activate\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u6b21\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nreadline\nrequests\nPygments\nprettytable\n\nargcomplete\n\n$ pip install --upgrade readline requests Pygments prettytable argcomplete\n\n$ pip freeze\n\n\nargcomplete==1.4.1\nprettytable==0.7.2\nPygments==2.1.3\nreadline==6.2.4.1\nrequests==2.11.1\n```\n\u305d\u308c\u3089\u306b\u8ffd\u52a0\u3057\u3066\u30dd\u30fc\u30c8\u3059\u308b\u306e\u306bfuture\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install future\n\n\u30b3\u30fc\u30c9\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u305d\u3053\u306b\u79fb\u52d5\n$ git clone https://github.com/apache/cloudstack-cloudmonkey.git\ncd cloudstack-cloudmonkey\n\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\n$ ls\n\n\nCHANGES.md        LICENSE           NOTICE            cloudmonkey       docs              setup.cfg\nDockerfile        Makefile          README.md         config.docker     performrelease.sh setup.py\n\n\n\u65e9\u901f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u308b\n$ python setup.py develop\n\n  File \"setup.py\", line 50\n    print \"If you're upgrading, run the following to enable parameter completion:\"\n                                                                                 ^\nSyntaxError: Missing parentheses in call to 'print'\n\n\u307e\u3042\u3001\u5931\u6557\u3057\u307e\u3059\u306d\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u3092\u306f\u5f8c\u3067\u8aad\u307f\u76f4\u3059\u3068\u3057\u3066\u3000\u3001futurize --stage1\u3000futurize --stage2\u3063\u3066\u5b9f\u884c\u3059\u308b\u3068python3 \u306e\u30b3\u30fc\u30c9\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u308c\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u3002\u307e\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3088\u3046\u306bsetup.py\u3092pytho3\u306e\u30b3\u30fc\u30c9\u306b\u5909\u63db\n$ futurize --stage1 -w setup.py\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored setup.py\n--- setup.py    (original)\n+++ setup.py    (refactored)\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -47,10 +48,10 @@\n         requires.append('readline')\n\n # Upgrade notes for 5.3.0\n-print \"If you're upgrading, run the following to enable parameter completion:\"\n-print \"  cloudmonkey sync\"\n-print \"  cloudmonkey set paramcompletion true\"\n-print \"Parameter completion may fail, if the above is not run!\"\n+print(\"If you're upgrading, run the following to enable parameter completion:\")\n+print(\"  cloudmonkey sync\")\n+print(\"  cloudmonkey set paramcompletion true\")\n+print(\"Parameter completion may fail, if the above is not run!\")\n\n setup(\n     name = 'cloudmonkey',\nRefactoringTool: Files that were modified:\nRefactoringTool: setup.py\n\n$ futurize --stage2 -w setup.py\nRefactoringTool: Refactored setup.py\n--- setup.py    (original)\n+++ setup.py    (refactored)\n@@ -1,4 +1,5 @@\n from __future__ import print_function\n+from builtins import str\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\nRefactoringTool: Files that were modified:\nRefactoringTool: setup.py\n\n\u4f5c\u696d\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30fc\u30eb\u3092\u5b9f\u884c\u3057\u305f\u304c\n$ python setup.py develop\nTraceback (most recent call last):\n  File \"setup.py\", line 29, in <module>\n    from cloudmonkey import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/__init__.py\", line 22\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n\ninit.py\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u7d42\u4e86\u3001\u4eca\u5ea6\u306finit.py\u3092\u5909\u63db\u3057\u3066\u307f\u308b\u3002\n$ futurize --stage1 -w cloudmonkey/init.py\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored cloudmonkey/__init__.py\n--- cloudmonkey/__init__.py     (original)\n+++ cloudmonkey/__init__.py     (refactored)\n@@ -1,3 +1,5 @@\n+from __future__ import print_function\n+from __future__ import absolute_import\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -16,8 +18,8 @@\n # under the License.\n\n try:\n-    from config import __version__, __description__\n-    from config import __maintainer__, __maintaineremail__\n-    from config import __project__, __projecturl__, __projectemail__\n-except ImportError, e:\n-    print e\n+    from .config import __version__, __description__\n+    from .config import __maintainer__, __maintaineremail__\n+    from .config import __project__, __projecturl__, __projectemail__\n+except ImportError as e:\n+    print(e)\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/__init__.py\n\n$ futurize --stage2 -w cloudmonkey/init.py\nRefactoringTool: No files need to be modified.\n\n\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u308b\u3068\u3002\n$ python setup.py develop\nTraceback (most recent call last):\n  File \"setup.py\", line 29, in <module>\n    from cloudmonkey import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/__init__.py\", line 21, in <module>\n    from .config import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/config.py\", line 33\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n\n\u4eca\u5ea6\u306fconfig.py\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u7d42\u4e86\u3001config.py\u3092\u5909\u63db\u3057\u3066\u307f\u308b\u3002\n$ futurize --stage1 -w cloudmonkey/config.py\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored cloudmonkey/config.py\n--- cloudmonkey/config.py       (original)\n+++ cloudmonkey/config.py       (refactored)\n@@ -16,6 +16,8 @@\n # specific language governing permissions and limitations\n # under the License.\n\n+from __future__ import print_function\n+from functools import reduce\n __version__ = \"5.3.3\"\n __description__ = \"Command Line Interface for Apache CloudStack\"\n __maintainer__ = \"The Apache CloudStack Team\"\n@@ -30,8 +32,8 @@\n\n     from ConfigParser import ConfigParser\n     from os.path import expanduser\n-except ImportError, e:\n-    print \"ImportError\", e\n+except ImportError as e:\n+    print(\"ImportError\", e)\n\n param_type = ['boolean', 'date', 'float', 'integer', 'short', 'list',\n               'long', 'object', 'map', 'string', 'tzdate', 'uuid']\n@@ -84,18 +86,18 @@\n         try:\n             with open(config_file, 'r') as cfg:\n                 config.readfp(cfg)\n-        except IOError, e:\n-            print \"Error: config_file not found\", e\n+        except IOError as e:\n+            print(\"Error: config_file not found\", e)\n\n     profile = None\n     try:\n         profile = get_attr('profile')\n-    except AttributeError, e:\n+    except AttributeError as e:\n         pass\n     if profile is None or profile == '':\n         profile = default_profile_name\n     if profile in mandatory_sections:\n-        print \"Server profile name cannot be '%s'\" % profile\n+        print(\"Server profile name cannot be '%s'\" % profile)\n         sys.exit(1)\n\n     has_profile_changed = False\n@@ -117,8 +119,8 @@\n                 else:\n                     for key in config_fields[section].keys():\n                         config.set(section, key, config_fields[section][key])\n-            except ValueError, e:\n-                print \"Server profile name cannot be\", profile\n+            except ValueError as e:\n+                print(\"Server profile name cannot be\", profile)\n                 sys.exit(1)\n         if section in mandatory_sections:\n             section_keys = config_fields[section].keys()\n@@ -150,13 +152,13 @@\n         try:\n             with open(config_file, 'r') as cfg:\n                 config.readfp(cfg)\n-        except IOError, e:\n-            print \"Error: config_file not found\", e\n+        except IOError as e:\n+            print(\"Error: config_file not found\", e)\n     else:\n         config = write_config(get_attr, config_file)\n-        print \"Welcome! Use the `set` command to configure options\"\n-        print \"Config file:\", config_file\n-        print \"After setting up, run the `sync` command to sync apis\\n\"\n+        print(\"Welcome! Use the `set` command to configure options\")\n+        print(\"Config file:\", config_file)\n+        print(\"After setting up, run the `sync` command to sync apis\\n\")\n\n     missing_keys = []\n     if config.has_option('core', 'profile'):\n@@ -166,19 +168,19 @@\n         profile = default_profile_name\n\n     if profile is None or profile == '' or profile in mandatory_sections:\n-        print \"Server profile cannot be\", profile\n+        print(\"Server profile cannot be\", profile)\n         sys.exit(1)\n\n     set_attr(\"profile_names\", filter(lambda x: x != \"core\" and x != \"ui\",\n                                      config.sections()))\n\n     if not config.has_section(profile):\n-        print (\"Selected profile (%s) does not exist,\" +\n-               \" using default values\") % profile\n+        print((\"Selected profile (%s) does not exist,\" +\n+               \" using default values\") % profile)\n         try:\n             config.add_section(profile)\n-        except ValueError, e:\n-            print \"Server profile name cannot be\", profile\n+        except ValueError as e:\n+            print(\"Server profile name cannot be\", profile)\n             sys.exit(1)\n         for key in default_profile.keys():\n             config.set(profile, key, default_profile[key])\n@@ -191,7 +193,7 @@\n         for key in section_keys:\n             try:\n                 set_attr(key, config.get(section, key))\n-            except Exception, e:\n+            except Exception as e:\n                 if section in mandatory_sections:\n                     set_attr(key, config_fields[section][key])\n                 else:\n@@ -202,8 +204,8 @@\n                 set_attr(key, get_attr('prompt').strip() + \" \")\n\n     if len(missing_keys) > 0:\n-        print \"Missing configuration was set using default values for keys:\"\n-        print \"`%s` in %s\" % (', '.join(missing_keys), config_file)\n+        print(\"Missing configuration was set using default values for keys:\")\n+        print(\"`%s` in %s\" % (', '.join(missing_keys), config_file))\n         write_config(get_attr, config_file)\n\n     return config_options\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/config.py\n\n$ futurize --stage2 -w cloudmonkey/config.py\nRefactoringTool: Refactored cloudmonkey/config.py\n--- cloudmonkey/config.py       (original)\n+++ cloudmonkey/config.py       (refactored)\n@@ -17,6 +17,8 @@\n # under the License.\n\n from __future__ import print_function\n+from future import standard_library\n+standard_library.install_aliases()\n from functools import reduce\n __version__ = \"5.3.3\"\n __description__ = \"Command Line Interface for Apache CloudStack\"\n@@ -30,7 +32,7 @@\n     import os\n     import sys\n\n-    from ConfigParser import ConfigParser\n+    from configparser import ConfigParser\n     from os.path import expanduser\n except ImportError as e:\n     print(\"ImportError\", e)\n@@ -114,18 +116,18 @@\n             try:\n                 config.add_section(section)\n                 if section not in mandatory_sections:\n-                    for key in default_profile.keys():\n+                    for key in list(default_profile.keys()):\n                         config.set(section, key, default_profile[key])\n                 else:\n-                    for key in config_fields[section].keys():\n+                    for key in list(config_fields[section].keys()):\n                         config.set(section, key, config_fields[section][key])\n             except ValueError as e:\n                 print(\"Server profile name cannot be\", profile)\n                 sys.exit(1)\n         if section in mandatory_sections:\n-            section_keys = config_fields[section].keys()\n+            section_keys = list(config_fields[section].keys())\n         else:\n-            section_keys = default_profile.keys()\n+            section_keys = list(default_profile.keys())\n         for key in section_keys:\n             try:\n                 if not (has_profile_changed and section == profile):\n@@ -143,9 +145,8 @@\n     if not os.path.exists(config_dir):\n         os.makedirs(config_dir)\n\n-    config_options = reduce(lambda x, y: x + y, map(lambda x:\n-                            config_fields[x].keys(), config_fields.keys()))\n-    config_options += default_profile.keys()\n+    config_options = reduce(lambda x, y: x + y, [list(config_fields[x].keys()) for x in list(config_fields.keys())])\n+    config_options += list(default_profile.keys())\n\n     config = ConfigParser()\n     if os.path.exists(config_file):\n@@ -171,8 +172,7 @@\n         print(\"Server profile cannot be\", profile)\n         sys.exit(1)\n\n-    set_attr(\"profile_names\", filter(lambda x: x != \"core\" and x != \"ui\",\n-                                     config.sections()))\n+    set_attr(\"profile_names\", [x for x in config.sections() if x != \"core\" and x != \"ui\"])\n\n     if not config.has_section(profile):\n         print((\"Selected profile (%s) does not exist,\" +\n@@ -182,14 +182,14 @@\n         except ValueError as e:\n             print(\"Server profile name cannot be\", profile)\n             sys.exit(1)\n-        for key in default_profile.keys():\n+        for key in list(default_profile.keys()):\n             config.set(profile, key, default_profile[key])\n\n     for section in (mandatory_sections + [profile]):\n         if section in mandatory_sections:\n-            section_keys = config_fields[section].keys()\n+            section_keys = list(config_fields[section].keys())\n         else:\n-            section_keys = default_profile.keys()\n+            section_keys = list(default_profile.keys())\n         for key in section_keys:\n             try:\n                 set_attr(key, config.get(section, key))\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/config.py\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u518d\u5ea6\u6311\u6226\n$ python setup.py develop\nIf you're upgrading, run the following to enable parameter completion:\n  cloudmonkey sync\n  cloudmonkey set paramcompletion true\nParameter completion may fail, if the above is not run!\nrunning develop\nrunning egg_info\ncreating cloudmonkey.egg-info\nwriting dependency_links to cloudmonkey.egg-info/dependency_links.txt\nwriting cloudmonkey.egg-info/PKG-INFO\nwriting entry points to cloudmonkey.egg-info/entry_points.txt\nwriting top-level names to cloudmonkey.egg-info/top_level.txt\nwriting requirements to cloudmonkey.egg-info/requires.txt\nwriting manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nreading manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nwriting manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nrunning build_ext\nCreating /Users/kentaro/porting/ven/lib/python3.5/site-packages/cloudmonkey.egg-link (link to .)\nAdding cloudmonkey 5.3.3 to easy-install.pth file\nInstalling cloudmonkey script to /Users/kentaro/porting/ven/bin\n\nInstalled /Users/kentaro/porting/cloudstack-cloudmonkey\nProcessing dependencies for cloudmonkey==5.3.3\nSearching for requests-toolbelt\nReading https://pypi.python.org/simple/requests-toolbelt/\nBest match: requests-toolbelt 0.7.0\nDownloading https://pypi.python.org/packages/59/78/1d391d30ebf74079a8e4de6ab66fdca5362903ef2df64496f4697e9bb626/requests-toolbelt-0.7.0.tar.gz#md5=bfe2009905f460f4764c32cfbbf4205f\nProcessing requests-toolbelt-0.7.0.tar.gz\nWriting /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-l6qjdcgd/requests-toolbelt-0.7.0/setup.cfg\nRunning requests-toolbelt-0.7.0/setup.py -q bdist_egg --dist-dir /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-l6qjdcgd/requests-toolbelt-0.7.0/egg-dist-tmp-xbz2yomj\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*.py[cdo]' found anywhere in distribution\nwarning: no previously-included files matching '__pycache__' found anywhere in distribution\nwarning: no previously-included files matching '*.so' found anywhere in distribution\nwarning: no previously-included files matching '*.pyd' found anywhere in distribution\nzip_safe flag not set; analyzing archive contents...\nCopying requests_toolbelt-0.7.0-py3.5.egg to /Users/kentaro/porting/ven/lib/python3.5/site-packages\nAdding requests-toolbelt 0.7.0 to easy-install.pth file\n\nInstalled /Users/kentaro/porting/ven/lib/python3.5/site-packages/requests_toolbelt-0.7.0-py3.5.egg\nSearching for dicttoxml\nReading https://pypi.python.org/simple/dicttoxml/\nBest match: dicttoxml 1.7.4\nDownloading https://pypi.python.org/packages/74/36/534db111db9e7610a41641a1f6669a964aacaf51858f466de264cc8dcdd9/dicttoxml-1.7.4.tar.gz#md5=ec5643a048cf32dad3c28db236b923e4\nProcessing dicttoxml-1.7.4.tar.gz\nWriting /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-3yyvt_ku/dicttoxml-1.7.4/setup.cfg\nRunning dicttoxml-1.7.4/setup.py -q bdist_egg --dist-dir /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-3yyvt_ku/dicttoxml-1.7.4/egg-dist-tmp-1oj02owk\nzip_safe flag not set; analyzing archive contents...\nCopying dicttoxml-1.7.4-py3.5.egg to /Users/kentaro/porting/ven/lib/python3.5/site-packages\nAdding dicttoxml 1.7.4 to easy-install.pth file\n\nInstalled /Users/kentaro/porting/ven/lib/python3.5/site-packages/dicttoxml-1.7.4-py3.5.egg\nSearching for requests==2.11.1\nBest match: requests 2.11.1\nAdding requests 2.11.1 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for prettytable==0.7.2\nBest match: prettytable 0.7.2\nAdding prettytable 0.7.2 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for argcomplete==1.4.1\nBest match: argcomplete 1.4.1\nAdding argcomplete 1.4.1 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for Pygments==2.1.3\nBest match: Pygments 2.1.3\nAdding Pygments 2.1.3 to easy-install.pth file\nInstalling pygmentize script to /Users/kentaro/porting/ven/bin\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nFinished processing dependencies for cloudmonkey==5.3.3\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u6210\u529f\u3057\u305f\u3002\n$ cloudmonkey\nTraceback (most recent call last):\n  File \"/Users/kentaro/porting/ven/bin/cloudmonkey\", line 9, in <module>\n    load_entry_point('cloudmonkey', 'console_scripts', 'cloudmonkey')()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 542, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2569, in load_entry_point\n    return ep.load()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2229, in load\n    return self.resolve()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2235, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/cloudmonkey.py\", line 48\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n\n\u3067\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\n\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3002\nAWS\u3084Cloudn\u3092\bAPI\u3067\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308bCLI\u30c4\u30fc\u30eb[CloudStack cloudmonkey CLI](https://cwiki.apache.org/confluence/display/CLOUDSTACK/CloudStack+cloudmonkey+CLI)\u3067\u3082\u6b8b\u5ff5\u306a\u304c\u3089Python2\u3002\u305d\u3053\u3067\u3001\u52c9\u5f37\u306e\u305f\u3081\u306bPython3\u3067\u52d5\u304f\u3088\u3046\u306b\u3057\u3066\u307f\u308b\u3002\u3000\n\n**\u307e\u3060\u6210\u529f\u3057\u3066\u3044\u307e\u305b\u3093\u3001\u30e1\u30e2\u3068\u3057\u3066\u5229\u7528\u4e2d\u3002**\n\n# Python3\u5316\n\u3061\u3087\u3063\u3068\u8abf\u3079\u305f\u3068\u3053\u308d\u4e00\u822c\u7684\u306b\u306f\u3001\uff12\u30d1\u30bf\u30fc\u30f3\u3042\u308a\u3001\u5f15\u304d\u7d9a\u304dpython2\u3067\u3082\u52d5\u304f\u3088\u3046\u306b\u3059\u308b\u3001\u300cPolyglot\u300d\u3068\u3001\u305d\u308c\u4ee5\u964d\u306fPython2\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u306a\u3044\u300cPort\u300d\u304c\u3042\u308b\u3089\u3057\u3044\u3002\n\n\u65b9\u5411\u6027\n\u3000\u3000python2\u306f\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067**Port**\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n# Python3\u5316\u306b\u95a2\u3059\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n[diveintopython](http://diveintopython3-ja.rdy.jp/porting-code-to-python-3-with-2to3.html)\n# Python3\u5316\u30c4\u30fc\u30eb\n2\u304b\u30893\u306b\u79fb\u884c\u3059\u308b\u306e\u306f\u3088\u304f\u3042\u308b\u307f\u305f\u3044\u3067\u3001\b\u3059\u3050\u306b\u5e7e\u3064\u304b\u30c4\u30fc\u30eb\u304c\u898b\u3064\u304b\u3063\u305f\u3002\n[2to3](https://docs.python.org/3.5/library/2to3.html)\n[Futurize](http://python-future.org/)\n[Six](https://pythonhosted.org/six/)\n\n# \u4f5c\u696d\u5c65\u6b74\n\n## \u4f5c\u696d\u7528\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u305d\u3053\u306b\u79fb\u52d5\n\n```sh\n$ mkdir porting\n$ cd porting\n```\n## \u4f5c\u696d\u7528\u306e\u74b0\u5883\u3092\u6e96\u5099\u3057\u3066\n\n```sh\n$ pyvenv ven\n$ source ven/bin/activate\n```\n\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u6b21\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u5fc5\u8981\u3060\u3063\u305f\u306e\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\nreadline\nrequests\nPygments\nprettytable\n \nargcomplete\n```\n\n```sh\n$ pip install --upgrade readline requests Pygments prettytable argcomplete\n\n$ pip freeze\n\n```\nargcomplete==1.4.1\nprettytable==0.7.2\nPygments==2.1.3\nreadline==6.2.4.1\nrequests==2.11.1\n```\n\n\u305d\u308c\u3089\u306b\u8ffd\u52a0\u3057\u3066\b\u30dd\u30fc\u30c8\u3059\u308b\u306e\u306bfuture\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install future\n\n## \u30b3\u30fc\u30c9\u3092\u30af\u30ed\u30fc\u30f3\u3057\u3066\u305d\u3053\u306b\u79fb\u52d5\n$ git clone https://github.com/apache/cloudstack-cloudmonkey.git\ncd cloudstack-cloudmonkey\n\n\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\n\n```sh\n$ ls\n```\n\n```shell-session\n\nCHANGES.md        LICENSE           NOTICE            cloudmonkey       docs              setup.cfg\nDockerfile        Makefile          README.md         config.docker     performrelease.sh setup.py\n```\n\n## \u65e9\u901f\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u308b\n```sh\n$ python setup.py develop\n```\n\n\n```\n  File \"setup.py\", line 50\n    print \"If you're upgrading, run the following to enable parameter completion:\"\n                                                                                 ^\nSyntaxError: Missing parentheses in call to 'print'\n```\n\n\u307e\u3042\u3001\u5931\u6557\u3057\u307e\u3059\u306d\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u3092\u306f\u5f8c\u3067\u8aad\u307f\u76f4\u3059\u3068\u3057\u3066\u3000\b\u3001futurize --stage1\u3000futurize --stage2\u3063\u3066\u5b9f\u884c\u3059\u308b\u3068python3 \u306e\u30b3\u30fc\u30c9\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u308c\u308b\u307f\u305f\u3044\u306a\u306e\u3067\u3002\u307e\u305a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3088\u3046\u306bsetup.py\u3092pytho3\u306e\u30b3\u30fc\u30c9\u306b\u5909\u63db\n\n$ futurize --stage1 -w setup.py\n\n```\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored setup.py\n--- setup.py   \t(original)\n+++ setup.py   \t(refactored)\n@@ -1,3 +1,4 @@\n+from __future__ import print_function\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -47,10 +48,10 @@\n         requires.append('readline')\n\n # Upgrade notes for 5.3.0\n-print \"If you're upgrading, run the following to enable parameter completion:\"\n-print \"  cloudmonkey sync\"\n-print \"  cloudmonkey set paramcompletion true\"\n-print \"Parameter completion may fail, if the above is not run!\"\n+print(\"If you're upgrading, run the following to enable parameter completion:\")\n+print(\"  cloudmonkey sync\")\n+print(\"  cloudmonkey set paramcompletion true\")\n+print(\"Parameter completion may fail, if the above is not run!\")\n\n setup(\n     name = 'cloudmonkey',\nRefactoringTool: Files that were modified:\nRefactoringTool: setup.py\n```\n\n$ futurize --stage2 -w setup.py\n\n```\nRefactoringTool: Refactored setup.py\n--- setup.py   \t(original)\n+++ setup.py   \t(refactored)\n@@ -1,4 +1,5 @@\n from __future__ import print_function\n+from builtins import str\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\nRefactoringTool: Files that were modified:\nRefactoringTool: setup.py\n```\n\n\u4f5c\u696d\u304c\u7d42\u308f\u3063\u305f\u306e\u3067\u3001\u30a4\u30f3\u30b9\u30fc\u30eb\u3092\u5b9f\u884c\u3057\u305f\u304c\n$ python setup.py develop\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 29, in <module>\n    from cloudmonkey import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/__init__.py\", line 22\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n```\n__init__.py\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u7d42\u4e86\u3001\u4eca\u5ea6\u306f__init__.py\u3092\u5909\u63db\u3057\u3066\u307f\u308b\u3002\n$ futurize --stage1 -w cloudmonkey/__init__.py\n\n```\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored cloudmonkey/__init__.py\n--- cloudmonkey/__init__.py    \t(original)\n+++ cloudmonkey/__init__.py    \t(refactored)\n@@ -1,3 +1,5 @@\n+from __future__ import print_function\n+from __future__ import absolute_import\n # Licensed to the Apache Software Foundation (ASF) under one\n # or more contributor license agreements.  See the NOTICE file\n # distributed with this work for additional information\n@@ -16,8 +18,8 @@\n # under the License.\n\n try:\n-    from config import __version__, __description__\n-    from config import __maintainer__, __maintaineremail__\n-    from config import __project__, __projecturl__, __projectemail__\n-except ImportError, e:\n-    print e\n+    from .config import __version__, __description__\n+    from .config import __maintainer__, __maintaineremail__\n+    from .config import __project__, __projecturl__, __projectemail__\n+except ImportError as e:\n+    print(e)\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/__init__.py\n```\n\n$ futurize --stage2 -w cloudmonkey/__init__.py\n\n```\nRefactoringTool: No files need to be modified.\n```\n\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u307f\u308b\u3068\u3002\n$ python setup.py develop\n\n```\nTraceback (most recent call last):\n  File \"setup.py\", line 29, in <module>\n    from cloudmonkey import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/__init__.py\", line 21, in <module>\n    from .config import __version__, __description__\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/config.py\", line 33\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n```\n\n\u4eca\u5ea6\u306fconfig.py\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308a\u3001\u7d42\u4e86\u3001config.py\u3092\u5909\u63db\u3057\u3066\u307f\u308b\u3002\n$ futurize --stage1 -w cloudmonkey/config.py\n\n```\nRefactoringTool: Skipping optional fixer: idioms\nRefactoringTool: Skipping optional fixer: ws_comma\nRefactoringTool: Refactored cloudmonkey/config.py\n--- cloudmonkey/config.py      \t(original)\n+++ cloudmonkey/config.py      \t(refactored)\n@@ -16,6 +16,8 @@\n # specific language governing permissions and limitations\n # under the License.\n\n+from __future__ import print_function\n+from functools import reduce\n __version__ = \"5.3.3\"\n __description__ = \"Command Line Interface for Apache CloudStack\"\n __maintainer__ = \"The Apache CloudStack Team\"\n@@ -30,8 +32,8 @@\n\n     from ConfigParser import ConfigParser\n     from os.path import expanduser\n-except ImportError, e:\n-    print \"ImportError\", e\n+except ImportError as e:\n+    print(\"ImportError\", e)\n\n param_type = ['boolean', 'date', 'float', 'integer', 'short', 'list',\n               'long', 'object', 'map', 'string', 'tzdate', 'uuid']\n@@ -84,18 +86,18 @@\n         try:\n             with open(config_file, 'r') as cfg:\n                 config.readfp(cfg)\n-        except IOError, e:\n-            print \"Error: config_file not found\", e\n+        except IOError as e:\n+            print(\"Error: config_file not found\", e)\n\n     profile = None\n     try:\n         profile = get_attr('profile')\n-    except AttributeError, e:\n+    except AttributeError as e:\n         pass\n     if profile is None or profile == '':\n         profile = default_profile_name\n     if profile in mandatory_sections:\n-        print \"Server profile name cannot be '%s'\" % profile\n+        print(\"Server profile name cannot be '%s'\" % profile)\n         sys.exit(1)\n\n     has_profile_changed = False\n@@ -117,8 +119,8 @@\n                 else:\n                     for key in config_fields[section].keys():\n                         config.set(section, key, config_fields[section][key])\n-            except ValueError, e:\n-                print \"Server profile name cannot be\", profile\n+            except ValueError as e:\n+                print(\"Server profile name cannot be\", profile)\n                 sys.exit(1)\n         if section in mandatory_sections:\n             section_keys = config_fields[section].keys()\n@@ -150,13 +152,13 @@\n         try:\n             with open(config_file, 'r') as cfg:\n                 config.readfp(cfg)\n-        except IOError, e:\n-            print \"Error: config_file not found\", e\n+        except IOError as e:\n+            print(\"Error: config_file not found\", e)\n     else:\n         config = write_config(get_attr, config_file)\n-        print \"Welcome! Use the `set` command to configure options\"\n-        print \"Config file:\", config_file\n-        print \"After setting up, run the `sync` command to sync apis\\n\"\n+        print(\"Welcome! Use the `set` command to configure options\")\n+        print(\"Config file:\", config_file)\n+        print(\"After setting up, run the `sync` command to sync apis\\n\")\n\n     missing_keys = []\n     if config.has_option('core', 'profile'):\n@@ -166,19 +168,19 @@\n         profile = default_profile_name\n\n     if profile is None or profile == '' or profile in mandatory_sections:\n-        print \"Server profile cannot be\", profile\n+        print(\"Server profile cannot be\", profile)\n         sys.exit(1)\n\n     set_attr(\"profile_names\", filter(lambda x: x != \"core\" and x != \"ui\",\n                                      config.sections()))\n\n     if not config.has_section(profile):\n-        print (\"Selected profile (%s) does not exist,\" +\n-               \" using default values\") % profile\n+        print((\"Selected profile (%s) does not exist,\" +\n+               \" using default values\") % profile)\n         try:\n             config.add_section(profile)\n-        except ValueError, e:\n-            print \"Server profile name cannot be\", profile\n+        except ValueError as e:\n+            print(\"Server profile name cannot be\", profile)\n             sys.exit(1)\n         for key in default_profile.keys():\n             config.set(profile, key, default_profile[key])\n@@ -191,7 +193,7 @@\n         for key in section_keys:\n             try:\n                 set_attr(key, config.get(section, key))\n-            except Exception, e:\n+            except Exception as e:\n                 if section in mandatory_sections:\n                     set_attr(key, config_fields[section][key])\n                 else:\n@@ -202,8 +204,8 @@\n                 set_attr(key, get_attr('prompt').strip() + \" \")\n\n     if len(missing_keys) > 0:\n-        print \"Missing configuration was set using default values for keys:\"\n-        print \"`%s` in %s\" % (', '.join(missing_keys), config_file)\n+        print(\"Missing configuration was set using default values for keys:\")\n+        print(\"`%s` in %s\" % (', '.join(missing_keys), config_file))\n         write_config(get_attr, config_file)\n\n     return config_options\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/config.py\n```\n\n$ futurize --stage2 -w cloudmonkey/config.py\n\n```\nRefactoringTool: Refactored cloudmonkey/config.py\n--- cloudmonkey/config.py      \t(original)\n+++ cloudmonkey/config.py      \t(refactored)\n@@ -17,6 +17,8 @@\n # under the License.\n\n from __future__ import print_function\n+from future import standard_library\n+standard_library.install_aliases()\n from functools import reduce\n __version__ = \"5.3.3\"\n __description__ = \"Command Line Interface for Apache CloudStack\"\n@@ -30,7 +32,7 @@\n     import os\n     import sys\n\n-    from ConfigParser import ConfigParser\n+    from configparser import ConfigParser\n     from os.path import expanduser\n except ImportError as e:\n     print(\"ImportError\", e)\n@@ -114,18 +116,18 @@\n             try:\n                 config.add_section(section)\n                 if section not in mandatory_sections:\n-                    for key in default_profile.keys():\n+                    for key in list(default_profile.keys()):\n                         config.set(section, key, default_profile[key])\n                 else:\n-                    for key in config_fields[section].keys():\n+                    for key in list(config_fields[section].keys()):\n                         config.set(section, key, config_fields[section][key])\n             except ValueError as e:\n                 print(\"Server profile name cannot be\", profile)\n                 sys.exit(1)\n         if section in mandatory_sections:\n-            section_keys = config_fields[section].keys()\n+            section_keys = list(config_fields[section].keys())\n         else:\n-            section_keys = default_profile.keys()\n+            section_keys = list(default_profile.keys())\n         for key in section_keys:\n             try:\n                 if not (has_profile_changed and section == profile):\n@@ -143,9 +145,8 @@\n     if not os.path.exists(config_dir):\n         os.makedirs(config_dir)\n\n-    config_options = reduce(lambda x, y: x + y, map(lambda x:\n-                            config_fields[x].keys(), config_fields.keys()))\n-    config_options += default_profile.keys()\n+    config_options = reduce(lambda x, y: x + y, [list(config_fields[x].keys()) for x in list(config_fields.keys())])\n+    config_options += list(default_profile.keys())\n\n     config = ConfigParser()\n     if os.path.exists(config_file):\n@@ -171,8 +172,7 @@\n         print(\"Server profile cannot be\", profile)\n         sys.exit(1)\n\n-    set_attr(\"profile_names\", filter(lambda x: x != \"core\" and x != \"ui\",\n-                                     config.sections()))\n+    set_attr(\"profile_names\", [x for x in config.sections() if x != \"core\" and x != \"ui\"])\n\n     if not config.has_section(profile):\n         print((\"Selected profile (%s) does not exist,\" +\n@@ -182,14 +182,14 @@\n         except ValueError as e:\n             print(\"Server profile name cannot be\", profile)\n             sys.exit(1)\n-        for key in default_profile.keys():\n+        for key in list(default_profile.keys()):\n             config.set(profile, key, default_profile[key])\n\n     for section in (mandatory_sections + [profile]):\n         if section in mandatory_sections:\n-            section_keys = config_fields[section].keys()\n+            section_keys = list(config_fields[section].keys())\n         else:\n-            section_keys = default_profile.keys()\n+            section_keys = list(default_profile.keys())\n         for key in section_keys:\n             try:\n                 set_attr(key, config.get(section, key))\nRefactoringTool: Files that were modified:\nRefactoringTool: cloudmonkey/config.py\n```\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u518d\u5ea6\u6311\u6226\n$ python setup.py develop\n\n```\nIf you're upgrading, run the following to enable parameter completion:\n  cloudmonkey sync\n  cloudmonkey set paramcompletion true\nParameter completion may fail, if the above is not run!\nrunning develop\nrunning egg_info\ncreating cloudmonkey.egg-info\nwriting dependency_links to cloudmonkey.egg-info/dependency_links.txt\nwriting cloudmonkey.egg-info/PKG-INFO\nwriting entry points to cloudmonkey.egg-info/entry_points.txt\nwriting top-level names to cloudmonkey.egg-info/top_level.txt\nwriting requirements to cloudmonkey.egg-info/requires.txt\nwriting manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nreading manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nwriting manifest file 'cloudmonkey.egg-info/SOURCES.txt'\nrunning build_ext\nCreating /Users/kentaro/porting/ven/lib/python3.5/site-packages/cloudmonkey.egg-link (link to .)\nAdding cloudmonkey 5.3.3 to easy-install.pth file\nInstalling cloudmonkey script to /Users/kentaro/porting/ven/bin\n\nInstalled /Users/kentaro/porting/cloudstack-cloudmonkey\nProcessing dependencies for cloudmonkey==5.3.3\nSearching for requests-toolbelt\nReading https://pypi.python.org/simple/requests-toolbelt/\nBest match: requests-toolbelt 0.7.0\nDownloading https://pypi.python.org/packages/59/78/1d391d30ebf74079a8e4de6ab66fdca5362903ef2df64496f4697e9bb626/requests-toolbelt-0.7.0.tar.gz#md5=bfe2009905f460f4764c32cfbbf4205f\nProcessing requests-toolbelt-0.7.0.tar.gz\nWriting /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-l6qjdcgd/requests-toolbelt-0.7.0/setup.cfg\nRunning requests-toolbelt-0.7.0/setup.py -q bdist_egg --dist-dir /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-l6qjdcgd/requests-toolbelt-0.7.0/egg-dist-tmp-xbz2yomj\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*.py[cdo]' found anywhere in distribution\nwarning: no previously-included files matching '__pycache__' found anywhere in distribution\nwarning: no previously-included files matching '*.so' found anywhere in distribution\nwarning: no previously-included files matching '*.pyd' found anywhere in distribution\nzip_safe flag not set; analyzing archive contents...\nCopying requests_toolbelt-0.7.0-py3.5.egg to /Users/kentaro/porting/ven/lib/python3.5/site-packages\nAdding requests-toolbelt 0.7.0 to easy-install.pth file\n\nInstalled /Users/kentaro/porting/ven/lib/python3.5/site-packages/requests_toolbelt-0.7.0-py3.5.egg\nSearching for dicttoxml\nReading https://pypi.python.org/simple/dicttoxml/\nBest match: dicttoxml 1.7.4\nDownloading https://pypi.python.org/packages/74/36/534db111db9e7610a41641a1f6669a964aacaf51858f466de264cc8dcdd9/dicttoxml-1.7.4.tar.gz#md5=ec5643a048cf32dad3c28db236b923e4\nProcessing dicttoxml-1.7.4.tar.gz\nWriting /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-3yyvt_ku/dicttoxml-1.7.4/setup.cfg\nRunning dicttoxml-1.7.4/setup.py -q bdist_egg --dist-dir /var/folders/vl/nj7qbspd7hlgll3chjfgvl400000gn/T/easy_install-3yyvt_ku/dicttoxml-1.7.4/egg-dist-tmp-1oj02owk\nzip_safe flag not set; analyzing archive contents...\nCopying dicttoxml-1.7.4-py3.5.egg to /Users/kentaro/porting/ven/lib/python3.5/site-packages\nAdding dicttoxml 1.7.4 to easy-install.pth file\n\nInstalled /Users/kentaro/porting/ven/lib/python3.5/site-packages/dicttoxml-1.7.4-py3.5.egg\nSearching for requests==2.11.1\nBest match: requests 2.11.1\nAdding requests 2.11.1 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for prettytable==0.7.2\nBest match: prettytable 0.7.2\nAdding prettytable 0.7.2 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for argcomplete==1.4.1\nBest match: argcomplete 1.4.1\nAdding argcomplete 1.4.1 to easy-install.pth file\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nSearching for Pygments==2.1.3\nBest match: Pygments 2.1.3\nAdding Pygments 2.1.3 to easy-install.pth file\nInstalling pygmentize script to /Users/kentaro/porting/ven/bin\n\nUsing /Users/kentaro/porting/ven/lib/python3.5/site-packages\nFinished processing dependencies for cloudmonkey==5.3.3\n```\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u6210\u529f\u3057\u305f\u3002\n\n$ cloudmonkey\n\n```\nTraceback (most recent call last):\n  File \"/Users/kentaro/porting/ven/bin/cloudmonkey\", line 9, in <module>\n    load_entry_point('cloudmonkey', 'console_scripts', 'cloudmonkey')()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 542, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2569, in load_entry_point\n    return ep.load()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2229, in load\n    return self.resolve()\n  File \"/Users/kentaro/porting/ven/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2235, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/Users/kentaro/porting/cloudstack-cloudmonkey/cloudmonkey/cloudmonkey.py\", line 48\n    except ImportError, e:\n                      ^\nSyntaxError: invalid syntax\n```\n\n\u3067\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3063\u3066\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\n\n\u4eca\u65e5\u306f\u3053\u3053\u307e\u3067\u3002\n", "tags": ["Python", "python3", "CloudStack", "Cloudn", "AWS"]}