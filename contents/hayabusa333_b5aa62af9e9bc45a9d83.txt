{"tags": ["Elixir", "cowboy"], "context": "\n\n\u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u3092\u76f4\u63a5\u52d5\u304b\u3059\u305f\u3081\u306e\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b\u3067\u306f\u3001JSON\u3092\u8fd4\u3059API\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u3092HTML\u306b\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nCowboy1.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\nCowboy2.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\ncowboy 1.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nVersion\n\n\n\n\nElixir\n1.3.2\n\n\nErlang\n19.2\n\n\nCowboy\n1.0.4\n\n\n\n\ncowboy 2.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\n\n\n\nVersion\n\n\n\n\nElixir\n1.3.2\n\n\nErlang\n19.2\n\n\nCowboy\n2.0.0-pre4\n\n\n\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u304b\u3089HTML\u3092\u4f5c\u6210\n\u4eca\u56de\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d7\u3051\u53d6\u3063\u305f\u5185\u5bb9\u3092HTML\u5f62\u5f0f\u306b\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3059\u5185\u5bb9\u3068\u306a\u308a\u307e\u3059\u3002\n\ncowboy 1.0\u306e\u5834\u5408\n\nlib/elixir_cowboy_example/dynamic_page_handler.ex\ndefmodule ElixirCowboyExample.DynamicPageHandler do\n  def init({:tcp, :http}, req, opts) do\n    {:ok, req, opts}\n  end\n\n  def handle(req, state) do\n    {method, req} = :cowboy_req.method(req)\n    {param, req} = :cowboy_req.binding(:html, req)\n    {:ok, req} = html_example(method, req)\n    {:ok, req, state}\n  end\n\n  def html_example(method, req) do\n    # url \u3092\u53d6\u5f97\u3059\u308b\n    {url, req} = :cowboy_req.url(req)\n    # \u901a\u4fe1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\n    {version, req} = :cowboy_req.version(req)\n    headers = [{\"content-type\", \"text/html\"}]\n    body = \"\"\"\n      <html>\n        <head>\n          <meta charset=\\\"utf-8\\\">\n            <title>Cowboy Hello!</title>\n        </head>\n        <body>\n          <h1>Cowboy Hello!!</h1>\n          <h2>url = #{url}</h2>\n          <h2>method = #{method}</h2>\n          <h2>version = #{version}</h2>\n        </body>\n      </html>\n    \"\"\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n  end\n\n  def terminate(_reason, _req, _state) do\n    :ok\n  end\nend\n\n\n\nlib/elixir_cowboy_example.ex\n  def run do\n    # http://localhost:4000/dynamic \u306b\u65b0\u898f\u306eHandler\u3092\u8ffd\u52a0\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []}\n    ]\n\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    opts = [port: 4000]\n    env = [dispatch: dispatch]\n\n    {:ok, _pid} = :cowboy.start_http(:http, 100, opts, [env: env])\n  end\n\n\n\ncowboy 2.0\u306e\u5834\u5408\n\nlib/elixir_cowboy_example/dynamic_page_handler.ex\ndefmodule ElixirCowboyExample.DynamicPageHandler do\n  def init(req, opts) do\n    method = :cowboy_req.method(req)\n    param = :cowboy_req.binding(:html, req)\n    {:ok, resp} = html_example(method, req)\n    {:ok, resp, opts}\n  end\n\n  def html_example(method, req) do\n    headers = %{\"content-type\" => \"text/html\"}\n    # cowboy2.0\u3067\u306furi\u306b\u3066url\u306e\u60c5\u5831\u3092\u30ea\u30b9\u30c8\u306b\u3066\u53d6\u5f97\u3082\u3067\u304d\u308b\n    IO.inspect :cowboy_req.uri(req)\n    # \u901a\u4fe1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\n    version = :cowboy_req.version(req)\n    # cowboy2.0\u3067\u306f\u3001url\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306a\uff11\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067url\u3092\u6587\u5b57\u5217\u5f62\u5f0f\u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5185\u5bb9\u306a\u306e\u3067\u3001\u8907\u6570\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u8a2d\u5b9a\n    body = \"\"\"\n      <html>\n        <head>\n          <meta charset=\\\"utf-8\\\">\n                <title>Cowboy Hello!</title>\n        </head>\n        <body>\n          <h1>Cowboy Hello!!</h1>\n          <h2>url = #{:cowboy_req.scheme(req)}//#{:cowboy_req.host(req)}:#{:cowboy_req.port(req)}#{:cowboy_req.path(req)}#{:cowboy_req.qs(req)}</h2>\n          <h2>method = #{method}</h2>\n          <h2>version = #{version}</h2>\n        </body>\n      </html>\n    \"\"\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n  end\nend\n\n\n\nlib/elixir_cowboy_example.ex\n  def run do\n    # http://localhost:4000/dynamic \u306b\u65b0\u898f\u306eHandler\u3092\u8ffd\u52a0\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []}\n    ]\n\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    opts = [{:port, 4000}]\n    env = %{dispatch: dispatch}\n\n    {:ok, _pid} = :cowboy.start_clear(:http, 100, opts, %{env: env})\n  end\n\n\n\n\u8a18\u8f09\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a iex -S mix \u306b\u3066 cowboy \u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u3001http://localhost:4000/dynamic\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d6\u30e9\u30a6\u30b6\u306e\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n\n\u6700\u5f8c\u306b\n\u4eca\u56de\u306f\u53d7\u3051\u53d6\u3063\u305f\u5185\u5bb9\u306b\u3066\u753b\u9762\u8868\u793a\u306e\u5185\u5bb9\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306eHTML\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u304b\u3089\u53d6\u5f97\u3057\u305f\u5185\u5bb9\u3092\u66f8\u304d\u63db\u3048\u308b\u306a\u3069\u3057\u306a\u3044\u3068\u4f7f\u3048\u306a\u3044\u3067\u3059\u304c\u3001\u3044\u304b\u304c\u3060\u3063\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nCowboy User Guide\nCowboy User Guide\n# \u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u3092\u76f4\u63a5\u52d5\u304b\u3059\u305f\u3081\u306e\u8a18\u4e8b\u3068\u306a\u308a\u307e\u3059\u3002\n[\u524d\u56de](http://qiita.com/hayabusa333/items/db582cba560bd1fda927)\u306e\u8a18\u4e8b\u3067\u306f\u3001JSON\u3092\u8fd4\u3059API\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u60c5\u5831\u3092HTML\u306b\u8868\u793a\u3059\u308b\u5185\u5bb9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n[Cowboy1.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059](https://github.com/hayabusa333/elixir_cowboy_example/tree/dynamic_html_cowboy)\n\n[Cowboy2.0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059](https://github.com/hayabusa333/elixir_cowboy_example/tree/dynamic_html_cowboy_two_pre4)\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n## cowboy 1.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n|  | Version |\n|:-----------|--------:|\n| Elixir | 1.3.2 |\n| Erlang | 19.2 |\n| Cowboy | 1.0.4 |\n\n## cowboy 2.0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n|  | Version |\n|:-----------|--------:|\n| Elixir | 1.3.2 |\n| Erlang | 19.2 |\n| Cowboy | 2.0.0-pre4 |\n\n# \u30ea\u30af\u30a8\u30b9\u30c8\u60c5\u5831\u304b\u3089HTML\u3092\u4f5c\u6210\n\n\u4eca\u56de\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u3067\u53d7\u3051\u53d6\u3063\u305f\u5185\u5bb9\u3092HTML\u5f62\u5f0f\u306b\u3066\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u3059\u5185\u5bb9\u3068\u306a\u308a\u307e\u3059\u3002\n\n## cowboy 1.0\u306e\u5834\u5408\n\n``` elixir:lib/elixir_cowboy_example/dynamic_page_handler.ex\ndefmodule ElixirCowboyExample.DynamicPageHandler do\n  def init({:tcp, :http}, req, opts) do\n    {:ok, req, opts}\n  end\n\n  def handle(req, state) do\n    {method, req} = :cowboy_req.method(req)\n    {param, req} = :cowboy_req.binding(:html, req)\n    {:ok, req} = html_example(method, req)\n    {:ok, req, state}\n  end\n\n  def html_example(method, req) do\n    # url \u3092\u53d6\u5f97\u3059\u308b\n    {url, req} = :cowboy_req.url(req)\n    # \u901a\u4fe1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\n    {version, req} = :cowboy_req.version(req)\n    headers = [{\"content-type\", \"text/html\"}]\n    body = \"\"\"\n      <html>\n        <head>\n          <meta charset=\\\"utf-8\\\">\n        \t<title>Cowboy Hello!</title>\n        </head>\n        <body>\n          <h1>Cowboy Hello!!</h1>\n          <h2>url = #{url}</h2>\n          <h2>method = #{method}</h2>\n          <h2>version = #{version}</h2>\n        </body>\n      </html>\n    \"\"\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n  end\n\n  def terminate(_reason, _req, _state) do\n    :ok\n  end\nend\n```\n\n``` elixir:lib/elixir_cowboy_example.ex\n  def run do\n    # http://localhost:4000/dynamic \u306b\u65b0\u898f\u306eHandler\u3092\u8ffd\u52a0\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []}\n    ]\n\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    opts = [port: 4000]\n    env = [dispatch: dispatch]\n\n    {:ok, _pid} = :cowboy.start_http(:http, 100, opts, [env: env])\n  end\n```\n\n## cowboy 2.0\u306e\u5834\u5408\n\n``` elixir:lib/elixir_cowboy_example/dynamic_page_handler.ex\ndefmodule ElixirCowboyExample.DynamicPageHandler do\n  def init(req, opts) do\n    method = :cowboy_req.method(req)\n    param = :cowboy_req.binding(:html, req)\n    {:ok, resp} = html_example(method, req)\n    {:ok, resp, opts}\n  end\n\n  def html_example(method, req) do\n    headers = %{\"content-type\" => \"text/html\"}\n    # cowboy2.0\u3067\u306furi\u306b\u3066url\u306e\u60c5\u5831\u3092\u30ea\u30b9\u30c8\u306b\u3066\u53d6\u5f97\u3082\u3067\u304d\u308b\n    IO.inspect :cowboy_req.uri(req)\n    # \u901a\u4fe1\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u53d6\u5f97\u3059\u308b\n    version = :cowboy_req.version(req)\n    # cowboy2.0\u3067\u306f\u3001url\u30e1\u30bd\u30c3\u30c9\u306e\u3088\u3046\u306a\uff11\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u3067url\u3092\u6587\u5b57\u5217\u5f62\u5f0f\u3067\u53d6\u5f97\u3067\u304d\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u5185\u5bb9\u306a\u306e\u3067\u3001\u8907\u6570\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u8a2d\u5b9a\n    body = \"\"\"\n      <html>\n        <head>\n          <meta charset=\\\"utf-8\\\">\n                <title>Cowboy Hello!</title>\n        </head>\n        <body>\n          <h1>Cowboy Hello!!</h1>\n          <h2>url = #{:cowboy_req.scheme(req)}//#{:cowboy_req.host(req)}:#{:cowboy_req.port(req)}#{:cowboy_req.path(req)}#{:cowboy_req.qs(req)}</h2>\n          <h2>method = #{method}</h2>\n          <h2>version = #{version}</h2>\n        </body>\n      </html>\n    \"\"\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n  end\nend\n```\n\n``` elixir:lib/elixir_cowboy_example.ex\n  def run do\n    # http://localhost:4000/dynamic \u306b\u65b0\u898f\u306eHandler\u3092\u8ffd\u52a0\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []},\n      {\"/dynamic\", ElixirCowboyExample.DynamicPageHandler, []},\n      {\"/json\", ElixirCowboyExample.JsonHandler, []},\n      {\"/:html\", ElixirCowboyExample.Handler, []}\n    ]\n\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    opts = [{:port, 4000}]\n    env = %{dispatch: dispatch}\n\n    {:ok, _pid} = :cowboy.start_clear(:http, 100, opts, %{env: env})\n  end\n```\n\n# \u8a18\u8f09\u3057\u305f\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u306e\u3067\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u3044\u3064\u3082\u901a\u308a `iex -S mix` \u306b\u3066 cowboy \u3092\u5b9f\u884c\u3057\u3066\u3044\u304d\u3001`http://localhost:4000/dynamic`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d6\u30e9\u30a6\u30b6\u306e\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u3067\u3059\u3002\n\n<img width=\"1176\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-09 16.14.17.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/3014/057d2365-1a5d-3c1a-a81c-bf2fc59ccea5.png\">\n\n\n# \u6700\u5f8c\u306b\n\u4eca\u56de\u306f\u53d7\u3051\u53d6\u3063\u305f\u5185\u5bb9\u306b\u3066\u753b\u9762\u8868\u793a\u306e\u5185\u5bb9\u3092\u5909\u66f4\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u5b9f\u969b\u306b\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001\u30d5\u30a1\u30a4\u30eb\u306eHTML\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u304b\u3089\u53d6\u5f97\u3057\u305f\u5185\u5bb9\u3092\u66f8\u304d\u63db\u3048\u308b\u306a\u3069\u3057\u306a\u3044\u3068\u4f7f\u3048\u306a\u3044\u3067\u3059\u304c\u3001\u3044\u304b\u304c\u3060\u3063\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\n\u305d\u308c\u3067\u306f\u307e\u305f\u6b21\u56de\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n[Cowboy User Guide](https://ninenines.eu/docs/en/cowboy/1.0/guide/)\n[Cowboy User Guide](https://ninenines.eu/docs/en/cowboy/2.0/guide/)\n"}