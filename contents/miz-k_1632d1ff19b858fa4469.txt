{"tags": ["golang", "Go", "Angular2", "jsonp"], "context": "[ Japanse follows English | \u3056\u3063\u304f\u308a\u82f1\u8a9e\u306e\u5f8c\u306b\u3056\u3063\u304f\u308a\u65e5\u672c\u8a9e\u304c\u7d9a\u304d\u307e\u3059 ]\nWhen I develop web services with Angular2 and golang, and each is ran by node and go respectively. In this case, both URLs use the same localhost but the ports are different such as 3000, 8080, etc. \nWhen it comes to communicate each other from node to go or vice versa, we should go through cross domain issue even in this local environment. This article shows how to leverage JSONP for cross domain request.\nAngular2\u3068Go\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001node\u3068go\u305d\u308c\u305e\u308c\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u3066\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306e\u30b5\u30fc\u30d0\u30fc\u9593\u306e\u901a\u4fe1\u306fcross domain request\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u5bfe\u51e6\u3057\u306a\u3044\u3068\u305d\u3082\u305d\u3082\u901a\u4fe1\u3067\u304d\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306fJSONP\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\nJSONP vs CORS\nI don't know exactly both of specifications. When googled, CORS is better for handling request/response in a secure way. In practice, I've adopted CORS for my development. Having said that, both way should worth coding. Please check sample with CORS.\n\u305d\u3082\u305d\u3082JSONP\u3068CORS\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u6b63\u78ba\u306b\u7406\u89e3\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u6a5f\u5bc6\u60c5\u5831\u3092\u6271\u3046\u5834\u5408\u306fCORS\u3068\u3088\u304f\u898b\u304b\u3051\u307e\u3059\uff08\u3061\u3083\u3093\u3068\u7406\u89e3\u3067\u304d\u3066\u307e\u305b\u3093\u3002\u3002\uff09\u5b9f\u969b\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u306fCORS\u3067\u8a18\u8f09\u3057\u3066\u305f\u308a\u3057\u307e\u3059\u304c\u3001JSONP\u3082\u52c9\u5f37\u306e\u305f\u3081quick sample\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\u306a\u304a\u3001CORS\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\nEnvironment\n\nAngular2 RC1\nGo 1.6\n\n\nAngular2\nTaking advantage of Angular 2 Quick Start, would be great if you get Angular source from here.\nThen, please modify as below\n\napp.component.ts\nimport { Component } from '@angular/core';\nimport { JSONP_PROVIDERS, Jsonp, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map';\n\n\n\n@Component({\n  selector: 'my-app',\n  providers: [JSONP_PROVIDERS],\n  template: `\n    <div>\n      <h1>People</h1>\n      <ul>\n        <li *ngFor=\"let person of people\">\n          {{person.name}}\n        </li>\n      </ul>\n    </div>\n  `\n})\n\nexport class AppComponent {\n    people: Array<Object>; \n    constructor ( jsonp: Jsonp ){\n    jsonp\n        .request('http://localhost:8080/people?callback=JSONP_CALLBACK')\n        .subscribe (\n          res => {\n            this.people = res.json();\n          },\n          error => console.log(error)\n        );\n    }\n}\n\n\n\nGo\n\nserver.go\npackage main\n\nimport (\n    \"encoding/json\"\n    \"fmt\"\n    \"net/http\"\n)\n\ntype Person struct {\n    Name string `json:\"name\"`\n}\n\ntype People []Person\n\nfunc GetPeople(w http.ResponseWriter, r *http.Request) {\n\n    w.Header().Set(\"Content-Type\", \"application/javascript\")\n    callback := r.FormValue(\"callback\")\n\n    people := People{\n        Person{Name: \"John\"},\n        Person{Name: \"Mike\"},\n        Person{Name: \"Peter\"},\n    }\n\n    b, err := json.Marshal(&people)\n    if err != nil {\n        panic(err)\n    }\n    res := callback + \"(\" + string(b) + \")\"\n    fmt.Fprint(w, res)\n}\n\nfunc main() {\n    http.HandleFunc(\"/people\", GetPeople)\n    http.ListenAndServe(\":8080\", nil)\n}\n\n\n\nRun\nThen,\n$ cd <angular2 dir>\n$ npm install\n$ npm start\n\n$ cd <sever.go dir>\n$ go run server.go\n\nPlease jump to localhost:3000\nWould be great if the response could look like this\n\n\nReferences\nAngular2 Http\nAngular2 JSONP_PROVIDERS\nJSONP\u3067\u306e\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u30a2\u30af\u30bb\u30b9\nAngular2\u3067JSONP\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1\n[ Japanse follows English | \u3056\u3063\u304f\u308a\u82f1\u8a9e\u306e\u5f8c\u306b\u3056\u3063\u304f\u308a\u65e5\u672c\u8a9e\u304c\u7d9a\u304d\u307e\u3059 ]\n\nWhen I develop web services with Angular2 and golang, and each is ran by node and go respectively. In this case, both URLs use the same localhost but the ports are different such as 3000, 8080, etc. \nWhen it comes to communicate each other from node to go or vice versa, we should go through cross domain issue even in this local environment. This article shows how to leverage JSONP for cross domain request.\n\nAngular2\u3068Go\u3067\u958b\u767a\u3057\u3066\u3044\u308b\u3068\u3001node\u3068go\u305d\u308c\u305e\u308c\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u7acb\u3066\u3066\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u3088\u304f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306e\u30b5\u30fc\u30d0\u30fc\u9593\u306e\u901a\u4fe1\u306fcross domain request\u3068\u3057\u3066\u6271\u308f\u308c\u3001\u5bfe\u51e6\u3057\u306a\u3044\u3068\u305d\u3082\u305d\u3082\u901a\u4fe1\u3067\u304d\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3053\u3067\u306fJSONP\u3092\u4f7f\u3063\u305f\u65b9\u6cd5\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\n# JSONP vs CORS\n\nI don't know exactly both of specifications. When googled, CORS is better for handling request/response in a secure way. In practice, I've adopted CORS for my development. Having said that, both way should worth coding. Please check [sample with CORS](http://qiita.com/miz-k/items/6097332bc01e7216b400).\n\n\u305d\u3082\u305d\u3082JSONP\u3068CORS\u306e\u4ed5\u69d8\u306b\u3064\u3044\u3066\u6b63\u78ba\u306b\u7406\u89e3\u3057\u3066\u3044\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u8a73\u7d30\u306f\u30b0\u30b0\u3063\u3066\u3044\u305f\u3060\u304f\u3068\u3057\u3066\u3001\u6a5f\u5bc6\u60c5\u5831\u3092\u6271\u3046\u5834\u5408\u306fCORS\u3068\u3088\u304f\u898b\u304b\u3051\u307e\u3059\uff08\u3061\u3083\u3093\u3068\u7406\u89e3\u3067\u304d\u3066\u307e\u305b\u3093\u3002\u3002\uff09\u5b9f\u969b\u3001\u81ea\u5206\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u306fCORS\u3067\u8a18\u8f09\u3057\u3066\u305f\u308a\u3057\u307e\u3059\u304c\u3001JSONP\u3082\u52c9\u5f37\u306e\u305f\u3081quick sample\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\u306a\u304a\u3001CORS\u306e[\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u3061\u3089](http://qiita.com/miz-k/items/6097332bc01e7216b400)\u3067\u3059\u3002\n\n\n# Environment\n* Angular2 RC1\n* Go 1.6\n\n\n# Angular2\nTaking advantage of Angular 2 Quick Start, would be great if you get Angular source from [here](https://github.com/angular/quickstart/blob/master/README.md).\n\nThen, please modify as below\n\n```ts:app.component.ts\nimport { Component } from '@angular/core';\nimport { JSONP_PROVIDERS, Jsonp, URLSearchParams } from '@angular/http';\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map';\n\n\n\n@Component({\n  selector: 'my-app',\n  providers: [JSONP_PROVIDERS],\n  template: `\n    <div>\n      <h1>People</h1>\n      <ul>\n        <li *ngFor=\"let person of people\">\n          {{person.name}}\n        </li>\n      </ul>\n    </div>\n  `\n})\n\nexport class AppComponent {\n    people: Array<Object>; \n    constructor ( jsonp: Jsonp ){\n    jsonp\n        .request('http://localhost:8080/people?callback=JSONP_CALLBACK')\n        .subscribe (\n          res => {\n            this.people = res.json();\n          },\n          error => console.log(error)\n        );\n    }\n}\n```\n\n# Go\n\n```go:server.go\npackage main\n\nimport (\n\t\"encoding/json\"\n\t\"fmt\"\n\t\"net/http\"\n)\n\ntype Person struct {\n\tName string `json:\"name\"`\n}\n\ntype People []Person\n\nfunc GetPeople(w http.ResponseWriter, r *http.Request) {\n\n\tw.Header().Set(\"Content-Type\", \"application/javascript\")\n\tcallback := r.FormValue(\"callback\")\n\n\tpeople := People{\n\t\tPerson{Name: \"John\"},\n\t\tPerson{Name: \"Mike\"},\n\t\tPerson{Name: \"Peter\"},\n\t}\n\n\tb, err := json.Marshal(&people)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n\tres := callback + \"(\" + string(b) + \")\"\n\tfmt.Fprint(w, res)\n}\n\nfunc main() {\n\thttp.HandleFunc(\"/people\", GetPeople)\n\thttp.ListenAndServe(\":8080\", nil)\n}\n```\n\n# Run\n\nThen,\n\n```bash\n$ cd <angular2 dir>\n$ npm install\n$ npm start\n```\n\n```bash\n$ cd <sever.go dir>\n$ go run server.go\n```\n\nPlease jump to [localhost:3000](http://localhost:3000/)\nWould be great if the response could look like this\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-12 0.29.27.png](https://qiita-image-store.s3.amazonaws.com/0/105050/ff9e7d6e-f068-ba35-7778-3ff1024b218e.png)\n\n# References\n[Angular2 Http](https://angular.io/docs/js/latest/api/http/Http-class.html)\n[Angular2 JSONP_PROVIDERS](https://angular.io/docs/js/latest/api/http/JSONP_PROVIDERS-let.html)\n[JSONP\u3067\u306e\u30af\u30ed\u30b9\u30c9\u30e1\u30a4\u30f3\u30a2\u30af\u30bb\u30b9](http://gihyo.jp/dev/serial/01/web20sec/0003)\n[Angular2\u3067JSONP\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1](http://wordpress.honobono-life.info/code/angular2\u3067jsonp\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u901a\u4fe1/)\n"}