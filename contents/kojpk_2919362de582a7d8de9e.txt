{"context": "\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nsample.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom multiprocessing import Pool\nfrom collections import Counter\n\n# \u3053\u3053\u3092\u4e26\u5217\u51e6\u7406\u3059\u308b\ndef func(n, argument1, argument2):\n    # 2\u500d\u3057\u30665\u3092\u8db3\u3059\u51e6\u7406\n    return n * argument1 + argument2\n\ndef wrapper(args):\n    # args\u306f(i, 2, 5)\u3068\u306a\u3063\u3066\u3044\u308b\n    return func(*args)\n\ndef multi_process(sampleList):\n    # \u30d7\u30ed\u30bb\u30b9\u6570:8(8\u500b\u306ecpu\u3067\u4e26\u5217\u51e6\u7406)\n    p = Pool(8)\n    output = p.map(wrapper, sampleList)\n    # \u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86\n    p.close()\n    return output\n\nif __name__ == \"__main__\":\n    # 100\u56de\u306e\u51e6\u7406\u3092\u4e26\u5217\u51e6\u7406\u3067\u884c\u3046\n    num = 100\n\n    # (i, 2, 5)\u304c\u5f15\u6570\u306b\u306a\u308b\n    sampleList = [(i, 2, 5) for i in range(num)]\n\n    # sampleList\u306e\u8981\u7d20\u30922\u500d\u3057\u30665\u3092\u8db3\u3059\n    output = multi_process(sampleList)\n\n\n\n\u8aac\u660e\npython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.7.10\u3067\u3059\n\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\n\n\nmultiprocessing\u3092\u4f7f\u3063\u3066\u4e26\u5217\u51e6\u7406\u3092\u3059\u308b\u5834\u5408\u3001list\u306b\u3057\u3066\u6e21\u3059\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n\nwrapper()\u95a2\u6570\u3092\u9593\u306b\u631f\u3080\u3053\u3068\u3067\u8907\u6570\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306e\u8981\u7d20\u3092\u5168\u30662\u500d\u3057\u30665\u3092\u8db3\u3059\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86(Pool.close())\u3092\u5fd8\u308c\u3066\u3057\u307e\u3046\u3068\u30d7\u30ed\u30bb\u30b9\u3092\u958b\u304d\u3059\u304e\u3066Too many open files\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```py:sample.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\nfrom multiprocessing import Pool\nfrom collections import Counter\n\n# \u3053\u3053\u3092\u4e26\u5217\u51e6\u7406\u3059\u308b\ndef func(n, argument1, argument2):\n    # 2\u500d\u3057\u30665\u3092\u8db3\u3059\u51e6\u7406\n    return n * argument1 + argument2\n\ndef wrapper(args):\n    # args\u306f(i, 2, 5)\u3068\u306a\u3063\u3066\u3044\u308b\n    return func(*args)\n\ndef multi_process(sampleList):\n    # \u30d7\u30ed\u30bb\u30b9\u6570:8(8\u500b\u306ecpu\u3067\u4e26\u5217\u51e6\u7406)\n    p = Pool(8)\n    output = p.map(wrapper, sampleList)\n    # \u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86\n    p.close()\n    return output\n\nif __name__ == \"__main__\":\n    # 100\u56de\u306e\u51e6\u7406\u3092\u4e26\u5217\u51e6\u7406\u3067\u884c\u3046\n    num = 100\n\n    # (i, 2, 5)\u304c\u5f15\u6570\u306b\u306a\u308b\n    sampleList = [(i, 2, 5) for i in range(num)]\n\n    # sampleList\u306e\u8981\u7d20\u30922\u500d\u3057\u30665\u3092\u8db3\u3059\n    output = multi_process(sampleList)\n```\n# \u8aac\u660e\npython\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f2.7.10\u3067\u3059\n\u30b3\u30fc\u30c9\u3092\u898b\u308c\u3070\u308f\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\n\n- **multiprocessing**\u3092\u4f7f\u3063\u3066\u4e26\u5217\u51e6\u7406\u3092\u3059\u308b\u5834\u5408\u3001list\u306b\u3057\u3066\u6e21\u3059\u306e\u304c\u7c21\u5358\u3067\u3059\u3002\n- **wrapper()**\u95a2\u6570\u3092\u9593\u306b\u631f\u3080\u3053\u3068\u3067\u8907\u6570\u306e\u5f15\u6570\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n- \u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u30ea\u30b9\u30c8\u306e\u6700\u521d\u306e\u8981\u7d20\u3092\u5168\u30662\u500d\u3057\u30665\u3092\u8db3\u3059\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n- \u30d7\u30ed\u30bb\u30b9\u306e\u7d42\u4e86(**Pool.close()**)\u3092\u5fd8\u308c\u3066\u3057\u307e\u3046\u3068\u30d7\u30ed\u30bb\u30b9\u3092\u958b\u304d\u3059\u304e\u3066`Too many open files`\u3068\u3044\u3046\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n", "tags": ["Python", "multiprocessing", "MultiThread", "\u4e26\u5217\u51e6\u7406"]}