{"tags": ["RxSwift", "Swift", "rxtest", "iOS"], "context": "\u8ffd\u8a18 @ 11/18\n\u7b2c3\u56deRxSwift\u52c9\u5f37\u4f1a \u3067\u3053\u306e\u8a18\u4e8b\u3092\u5143\u30cd\u30bf\u306b\u767a\u8868\u3057\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u304c\u305d\u306e\u6642\u306b\u4f7f\u3063\u305f\u30b9\u30e9\u30a4\u30c9\u3067\u3059\u3002\nhttps://speakerdeck.com/tasanobu/rxtestru-men\n\nRxTest\u3068\u306f\n\n\nRxTest \u306f RxSwift \u672c\u4f53\u3068\u306f\u5206\u96e2\u3055\u308c\u305f\u30c6\u30b9\u30c8\u7528\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\u4fbf\u5229\u306a\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\uff08\u5f8c\u8ff0\uff09\nCocoapods\u3067\u5229\u7528\u53ef\u80fd\u3002\n\n /// Add `RxTest` to a test target\n target 'SampleTests' do\n    pod 'RxSwift'\n    pod 'RxTests'\nend\n\n\n\u4e3b\u306a\u30af\u30e9\u30b9\nRxTest \u3067\u306f\u5b9f\u6642\u9593\u3068\u306f\u7570\u306a\u308b \u4eee\u60f3\u6642\u9593 \u306b\u57fa\u3065\u304d\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u4ed5\u7d44\u307f\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e3b\u306b\u6b21\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\n\nTestScheduler\n\n\u4eee\u60f3\u6642\u9593\u306b\u57fa\u3065\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3002\n\u4eee\u60f3\u6642\u523b\u3092\u6307\u5b9a\u3057\u3066\u4efb\u610f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\nTestableObservable TestableObserver \u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\n\n\nTestableObservable\n\n\u4eee\u60f3\u6642\u9593\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308bObservable\n\n\nTestableObserver\n\n\u53d7\u4fe1\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4eee\u60f3\u6642\u9593\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308bObserver\n\n\n\u5229\u7528\u4f8b\n\u4e0a\u8a18\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u3067\u306f\u3044\u307e\u3044\u3061\u30d4\u30f3\u3068\u3053\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRxSwift \u306e map\u30aa\u30da\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8 \u3092\u7c21\u7d20\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u4f8b\u306b\u3057\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\nfunc testMap() {\n    // \u4eee\u60f3\u6642\u523b 0 \u3092\u6307\u5b9a\u3057TestScheduler\u3092\u751f\u6210\n    let scheduler = TestScheduler(initialClock: 0)\n\n    // TestableObserver<Int> \u3092 `\u4eee\u60f3\u6642\u523b` `\u5024` \u3092\u6307\u5b9a\u3057\u3066\u751f\u6210\n    let xs = scheduler.createHotObservable([\n        next(150, 1),\n        next(210, 0),\n        next(240, 4),\n        completed(300)\n        ])\n\n    // TestableObserver<Int> \u3092\u751f\u6210\n    let observer = scheduler.createObserver(Int.self)\n\n    // \u4eee\u60f3\u6642\u523b `200` \u306b `observer` \u3092 `xs` \u306b subscribe \u3055\u305b\u308b\n    scheduler.scheduleAt(200) {\n        xs.map { $0 * 2 }\n            .subscribe(observer)\n            .addDisposableTo(disposeBag)\n    }\n\n    // scheduler\u3092\u958b\u59cb\n    scheduler.start()\n\n\n    /// TestableObserver \u304c\u53d7\u4fe1\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u691c\u8a3c\n    let expectedEvents = [\n        next(210, 0 * 2),\n        next(240, 4 * 2),\n        completed(300)\n    ]\n    XCTAssertEqual(observer.events, expectedEvents)\n\n\n    /// TestableObservable \u304c subscribe/unsubscribe \u3055\u308c\u305f\u4eee\u60f3\u6642\u523b\u3092\u691c\u8a3c\n    let expectedSubscriptions = [\n        Subscription(200, 300)\n    ]\n    XCTAssertEqual(xs.subscriptions, expectedSubscriptions)\n}\n\n\n\u307e\u3068\u3081\nRxTest\u306e\u6982\u8981\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u4f8b\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\nRxSwift\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u9762\u5012\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001RxTest\u3092\u4f7f\u3046\u3068\u610f\u5916\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u304b\u3051\u308b\u306a\u301c\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n**\u8ffd\u8a18** @ 11/18\n[\u7b2c3\u56deRxSwift\u52c9\u5f37\u4f1a](https://connpass.com/event/41478/) \u3067\u3053\u306e\u8a18\u4e8b\u3092\u5143\u30cd\u30bf\u306b\u767a\u8868\u3057\u307e\u3057\u305f\u3002\n\u4e0b\u8a18\u304c\u305d\u306e\u6642\u306b\u4f7f\u3063\u305f\u30b9\u30e9\u30a4\u30c9\u3067\u3059\u3002\nhttps://speakerdeck.com/tasanobu/rxtestru-men\n\n\n\n## RxTest\u3068\u306f\n- `RxTest` \u306f `RxSwift` \u672c\u4f53\u3068\u306f\u5206\u96e2\u3055\u308c\u305f\u30c6\u30b9\u30c8\u7528\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n- \u4fbf\u5229\u306a\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\uff08\u5f8c\u8ff0\uff09\n- Cocoapods\u3067\u5229\u7528\u53ef\u80fd\u3002\n \n```\n /// Add `RxTest` to a test target\n target 'SampleTests' do\n\tpod 'RxSwift'\n\tpod 'RxTests'\nend\n```\n\n## \u4e3b\u306a\u30af\u30e9\u30b9\n`RxTest` \u3067\u306f\u5b9f\u6642\u9593\u3068\u306f\u7570\u306a\u308b `\u4eee\u60f3\u6642\u9593` \u306b\u57fa\u3065\u304d\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u4ed5\u7d44\u307f\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u4e3b\u306b\u6b21\u306e\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\n\n#### TestScheduler\n- \u4eee\u60f3\u6642\u9593\u306b\u57fa\u3065\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3002\n- \u4eee\u60f3\u6642\u523b\u3092\u6307\u5b9a\u3057\u3066\u4efb\u610f\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n- `TestableObservable` `TestableObserver` \u306e\u30d5\u30a1\u30af\u30c8\u30ea\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\n\n#### TestableObservable\n- \u4eee\u60f3\u6642\u9593\u306b\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u751f\u3059\u308bObservable\n\n#### TestableObserver\n- \u53d7\u4fe1\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u4eee\u60f3\u6642\u9593\u3068\u3068\u3082\u306b\u4fdd\u6301\u3059\u308bObserver\n\n## \u5229\u7528\u4f8b\n\u4e0a\u8a18\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u3067\u306f\u3044\u307e\u3044\u3061\u30d4\u30f3\u3068\u3053\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nRxSwift \u306e [map\u30aa\u30da\u30ec\u30fc\u30bf\u306e\u30c6\u30b9\u30c8](https://github.com/ReactiveX/RxSwift/blob/master/Tests/RxSwiftTests/Observable+StandardSequenceOperatorsTest.swift#L754-L782) \u3092\u7c21\u7d20\u5316\u3057\u305f\u30b3\u30fc\u30c9\u3092\u4f8b\u306b\u3057\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\n```\nfunc testMap() {\n    // \u4eee\u60f3\u6642\u523b 0 \u3092\u6307\u5b9a\u3057TestScheduler\u3092\u751f\u6210\n    let scheduler = TestScheduler(initialClock: 0)\n\n    // TestableObserver<Int> \u3092 `\u4eee\u60f3\u6642\u523b` `\u5024` \u3092\u6307\u5b9a\u3057\u3066\u751f\u6210\n    let xs = scheduler.createHotObservable([\n        next(150, 1),\n        next(210, 0),\n        next(240, 4),\n        completed(300)\n        ])\n\n    // TestableObserver<Int> \u3092\u751f\u6210\n    let observer = scheduler.createObserver(Int.self)\n\n    // \u4eee\u60f3\u6642\u523b `200` \u306b `observer` \u3092 `xs` \u306b subscribe \u3055\u305b\u308b\n    scheduler.scheduleAt(200) {\n        xs.map { $0 * 2 }\n            .subscribe(observer)\n            .addDisposableTo(disposeBag)\n    }\n\n    // scheduler\u3092\u958b\u59cb\n    scheduler.start()\n\n\n    /// TestableObserver \u304c\u53d7\u4fe1\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u691c\u8a3c\n    let expectedEvents = [\n        next(210, 0 * 2),\n        next(240, 4 * 2),\n        completed(300)\n    ]\n    XCTAssertEqual(observer.events, expectedEvents)\n\n\n    /// TestableObservable \u304c subscribe/unsubscribe \u3055\u308c\u305f\u4eee\u60f3\u6642\u523b\u3092\u691c\u8a3c\n    let expectedSubscriptions = [\n        Subscription(200, 300)\n    ]\n    XCTAssertEqual(xs.subscriptions, expectedSubscriptions)\n}\n```\n\n## \u307e\u3068\u3081\nRxTest\u306e\u6982\u8981\u3068\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u4f8b\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\nRxSwift\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306f\u9762\u5012\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001RxTest\u3092\u4f7f\u3046\u3068\u610f\u5916\u306b\u30b7\u30f3\u30d7\u30eb\u306b\u304b\u3051\u308b\u306a\u301c\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n"}