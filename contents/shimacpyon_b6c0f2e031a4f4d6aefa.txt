{"context": " More than 1 year has passed since last update.\n\nNanoVG \u3063\u3066\u4f55\uff1f\nNanoVG \u306f C \u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\uff08\u73fe\u5728\u306a\u304a\u958b\u767a\u4e2d\u306e\uff092D \u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u7279\u5fb4\u3092\u66f8\u304f\u3002\n\nHTML5 Canvas \u306b\u8fd1\u3044 API \u3092\u6301\u3064\n\u672c\u4f53\u304c\u7d04 4000 \u884c\u7a0b\u5ea6\u3068\u30b3\u30f3\u30d1\u30af\u30c8\nOpenGL \u3092\u5229\u7528\u3057\u3066\u63cf\u753b\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u9ad8\u901f\n\n\nOpenGL 2/3 \u3068 OpenGL ES 2/3 \u306b\u305d\u308c\u305e\u308c\u6700\u521d\u304b\u3089\u5bfe\u5fdc\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u90e8\u5206\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3066\u5206\u96e2\u3055\u308c\u3066\u308b\u305f\u3081\u81ea\u4f5c\u53ef\u80fd\n\n\nzlib \u30e9\u30a4\u30bb\u30f3\u30b9\n\n\u3044\u304b\u306b\u5f37\u529b\u304b\u306f\u30d3\u30eb\u30c9\u3057\u3066\u51fa\u6765\u4e0a\u304c\u308b build/example_gl* \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u308f\u304b\u308b\u3060\u308d\u3046\u3002\n\nNanoVG \u3092\u30d3\u30eb\u30c9\u3059\u308b\n\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f premake4 \u3068 glfw3 \u304c\u305d\u308c\u305e\u308c\u5fc5\u8981\u306a\u306e\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u3053\u3053\u3067\u306f OSX \u3067\u304b\u3064 macports \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u3053\u3068\u524d\u63d0\u3067\u8a71\u3092\u9032\u3081\u308b\u3002\nsudo port install premake4 glfw\n# /opt/local \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u8cbc\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\n# sudo ln -s /opt/local/include/GLFW /usr/local/include/GLFW\n# sudo ln -s /opt/local/lib/libglfw.3.dylib /usr/local/lib/libglfw3.dylib\ngit clone https://github.com/memononen/nanovg.git\ncd nanovg\npremake4 gmake\ncd build\n# \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e OpenGL 2/3 \u306e\u307f\u30d3\u30eb\u30c9\u3059\u308b\nmake example_gl[23]*\n\n\n\u7c21\u5358\u306a\u51e6\u7406\u30d5\u30ed\u30fc\n/* \u5927\u304d\u3055\u306f\u3053\u3053\u3067\u306f\u9069\u5f53\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306f\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30b5\u30a4\u30ba\u3068\u30c7\u30d0\u30a4\u30b9\u306e\u30d4\u30af\u30bb\u30eb\u30ec\u30fc\u30c8\u3092\u6c42\u3081\u308b\u3060\u308d\u3046 */\nint width = 512;\nint height = 512;\nfloat pixelRatio = 1.0\n;\n/*\n\nNanoVG \u7528\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002HTML5 Canvas \u3067\u306f canvas \u30bf\u30b0\u306b id=\"canvas\" \u3092\u4ed8\u52a0\u3057\u305f\u60f3\u5b9a\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u76f8\u5f53\u3059\u308b\u3002\n\n  var context = document.getElementById(\"canvas\").getContext(\"2d\");\n\n\u547c\u3073\u51fa\u3059\u95a2\u6570\u306f\u5229\u7528\u3057\u305f\u3044 OpenGL \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f OpenGL2 \u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n */\nNVGcontext *context = nvgCreateGL2(width, height, NVG_ANTIALIAS);\n\nwhile (rendering) {\n    /* nvg* \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u304b\u306a\u3089\u305a nvgBeginFrame \u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b */\n    nvgBeginFrame(context, width, height, pixelRatio, NVG_PREMULTIPLIED_ALPHA);\n\n    /* \u3053\u3053\u3067 nvg* \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u5b9f\u969b\u306b\u51e6\u7406\u3092\u884c\u3046 */\n\n    /* \u5b8c\u4e86\u3057\u305f\u3089 nvgEndFrame \u3092\u547c\u3073\u51fa\u3057\u3066\u63cf\u753b\u3059\u308b */\n    nvgEndFrame(context);\n}\n\n/* \u7d42\u4e86\u6642\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u7834\u68c4\u3059\u308b */\nnvgDeleteGL2(context);\n\n\nNanoVG \u306b\u304a\u3051\u308b Q/A \u3063\u307d\u3044\u3082\u306e\n\nQ. \u65e5\u672c\u8a9e\u3082\u8868\u793a\u3067\u304d\u308b\uff1f A. \u30d5\u30a9\u30f3\u30c8\u304c\u3042\u308c\u3070\u8868\u793a\u3067\u304d\u308b\n\u307e\u305a\u4e88\u3081\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u3092 nvgCreateFont \u307e\u305f\u306f nvgCreateFontMem \u95a2\u6570\u3092\u4f7f\u3063\u3066\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u3060\u3057\u3066\u304a\u304d\u3001nvgFontFace \u3067\u6307\u5b9a\u3057\u3066 nvgBeginPath \u3092\u547c\u3073\u51fa\u3057\u3066\u304b\u3089 nvgText \u3092\u4f7f\u3046\u3068\u8868\u793a\u3067\u304d\u308b\u3002\nnvgCreateFont(context, \"japanese_font\", \"/path/to/japanese_font.ttf\");\nnvgFontFace(context, \"japanese_font\");\nnvgBeginPath(context);\n/* y \u306f\u4e2d\u5fc3\u4f4d\u7f6e\u306a\u3053\u3068\u306b\u6ce8\u610f\u3002\u5b9f\u969b\u3053\u3053\u306e\u90e8\u5206\u306f nvgTextBounds \u3084 nvgTextMetrics \u306a\u3069\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3066\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046 */\nint x = 0;\nint y = 10;\nnvgText(context, x, y, \"\u3053\u3093\u306b\u3061\u306f\u4e16\u754c\uff01\", NULL);\n\n\nQ. \u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u306e\uff1f A. NVGpattern + nvgFillPattern + nvgFill\n\u4ee5\u4e0b\u5373\u5e2d\u30b3\u30fc\u30c9\nstruct Image {\n    Image(NVGcontext *c)\n        : context2D(c),\n          handle(0),\n          width(0),\n          height(0)\n    {\n    }\n    ~Image() {\n        nvgDeleteImage(context2D, handle);\n        handle = 0;\n        context2D = 0;\n    }\n    void load(const char *filename) {\n        handle = nvgCreateImage(context2D, filename);\n        nvgImageSize(context2D, handle, &width, &height);\n        pattern = nvgImagePattern(context2D, 0, 0, width, height, 0, handle, 1);\n    }\n    void render() {\n        nvgBeginPath(context2D);\n        nvgRect(context2D, 0, 0, width, height);\n        nvgFillPaint(context2D, pattern);\n        nvgFill(context2D);\n    }\n    NVGcontext *context2D;\n    NVGpaint pattern;\n    int handle;\n    int width;\n    int height;\n};\n\n\u5185\u90e8\u7684\u306b\u306f stb_truetype.h \u306e API \u306e wrapper \u306a\u306e\u3067\u3001stb_truetype.h \u3067\u51fa\u6765\u306a\u3044\u3053\u3068\u306f NanoVG \u3067\u3082\u51fa\u6765\u306a\u3044\u3002\n\nNanoVG API \u3068 HTML5 Canvas API \u306e\u5bfe\u7167\u8868\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u306e API \u3060\u3051\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u3002\n\n\n\nNanoVG\nCanvas API\n\n\n\n\nnvgBeginPath(context)\nContext2D#beginPath()\n\n\nnvgMoveTo(context, x, y)\nContext2D#moveTo(x, y)\n\n\nnvgLineTo(context, x, y)\nContext2D#lineTo(x, y)\n\n\nnvgBezierTo(context, c1x, c1y, c2x, c2y, x, y)\nContext2D#bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)\n\n\nnvgArcTo(context, x1, y1, x2, y2, radius)\nContext2D#arcTo(x1, y1, x2, y2, radius)\n\n\nnvgClosePath(context)\nContext2D#closePath()\n\n\nnvgRect(context, x, y, w, h)\nContext2D#rect(x, y, w, h)\n\n\nnvgRoundedRect(context, x, y, w, h, r)\nContext2D#roundedRect(x, y, w, h, xradius, yradius)\n\n\nnvgEllipse(context, cx, cy, rx, ry)\nContext2D#ellipse(x, y, w, h)\n\n\nnvgFill(context)\nContext2D#fill()\n\n\nnvgStroke(context)\nContext2D#stroke()\n\n\nnvgStrokeColor(context, color)\nContext2D#strokeColor\n\n\nnvgFillColor(context, color)\nContext2D#fillColor\n\n\nnvgMiterLimit(context, limit)\nContext2D#miterLimit\n\n\nnvgStrokeWidth(context, width)\nContext2D#strokeWidth\n\n\nnvgLineCap(context, cap)\nContext2D#lineCap\n\n\nnvgLineJoin(context, join)\nContext2D#lineJoin\n\n\n\n\n2D \u306b\u95a2\u9023\u3059\u308b\u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u307e\u305f\u306f\u6a5f\u80fd\u53ca\u3073\u4ed5\u69d8\u306e\u4e00\u89a7\n\u305d\u308c\u305e\u308c API \u306f\u7570\u306a\u308b\u304c\u3001\u3044\u305a\u308c\u3082 HTML5 Canvas \u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u3042\u308b\u7a0b\u5ea6\u6301\u3063\u3066\u3044\u308b\u3002\n\n\nCairo (LGPL/MPL)\n\nSkia (3\u6761\u9805BSDL)\n\nQt (GPL/LGPL)\n\nAnti Grain Geometry (N/A)\n\n\n2.4 \u307e\u3067\u306f 3\u6761\u9805BSDL \u3060\u3063\u305f\u304c 2.5 \u304b\u3089 GPL\n2.4 \u3068 2.5 \u306f\u6a5f\u80fd\u7684\u306b\u540c\u3058\n\n\n\nOpenVG (N/A)\n\n\nOpenVG \u306f\u73fe\u5728\u4ed5\u69d8\u306e\u4fdd\u5b88\u306e\u307f\u3067\u65b0\u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u7b56\u5b9a\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\n\n\n\nNV_path_rendering (N/A)\n\n\nOpenGL \u306e\u62e1\u5f35\u3067\u3042\u308a\u3001\u73fe\u72b6 NVIDIA \u306e GPU \u3067\u3057\u304b\u5229\u7528\u3067\u304d\u306a\u3044\n\n\n\n\n# NanoVG \u3063\u3066\u4f55\uff1f\n\n[NanoVG](https://github.com/memononen/nanovg) \u306f C \u8a00\u8a9e\u3067\u66f8\u304b\u308c\u305f\uff08\u73fe\u5728\u306a\u304a\u958b\u767a\u4e2d\u306e\uff092D \u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002\u4ee5\u4e0b\u7279\u5fb4\u3092\u66f8\u304f\u3002\n\n - HTML5 Canvas \u306b\u8fd1\u3044 API \u3092\u6301\u3064\n - \u672c\u4f53\u304c\u7d04 4000 \u884c\u7a0b\u5ea6\u3068\u30b3\u30f3\u30d1\u30af\u30c8\n - OpenGL \u3092\u5229\u7528\u3057\u3066\u63cf\u753b\u3059\u308b\u305f\u3081\u975e\u5e38\u306b\u9ad8\u901f\n  - OpenGL 2/3 \u3068 OpenGL ES 2/3 \u306b\u305d\u308c\u305e\u308c\u6700\u521d\u304b\u3089\u5bfe\u5fdc\n  - \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u90e8\u5206\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3055\u308c\u3066\u5206\u96e2\u3055\u308c\u3066\u308b\u305f\u3081\u81ea\u4f5c\u53ef\u80fd\n - zlib \u30e9\u30a4\u30bb\u30f3\u30b9\n\n\u3044\u304b\u306b\u5f37\u529b\u304b\u306f\u30d3\u30eb\u30c9\u3057\u3066\u51fa\u6765\u4e0a\u304c\u308b build/example_gl* \u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u308f\u304b\u308b\u3060\u308d\u3046\u3002\n\n# NanoVG \u3092\u30d3\u30eb\u30c9\u3059\u308b\n\n\u30d3\u30eb\u30c9\u3059\u308b\u306b\u306f [premake4](http://industriousone.com/premake/) \u3068 [glfw3](http://glfw.org) \u304c\u305d\u308c\u305e\u308c\u5fc5\u8981\u306a\u306e\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\u3053\u3053\u3067\u306f OSX \u3067\u304b\u3064 macports \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u3053\u3068\u524d\u63d0\u3067\u8a71\u3092\u9032\u3081\u308b\u3002\n\n```bash\nsudo port install premake4 glfw\n# /opt/local \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u8cbc\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\n# sudo ln -s /opt/local/include/GLFW /usr/local/include/GLFW\n# sudo ln -s /opt/local/lib/libglfw.3.dylib /usr/local/lib/libglfw3.dylib\ngit clone https://github.com/memononen/nanovg.git\ncd nanovg\npremake4 gmake\ncd build\n# \u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e OpenGL 2/3 \u306e\u307f\u30d3\u30eb\u30c9\u3059\u308b\nmake example_gl[23]*\n```\n\n# \u7c21\u5358\u306a\u51e6\u7406\u30d5\u30ed\u30fc\n\n```c\n/* \u5927\u304d\u3055\u306f\u3053\u3053\u3067\u306f\u9069\u5f53\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u5b9f\u969b\u306f\u95a2\u6570\u3092\u4f7f\u3063\u3066\u30b5\u30a4\u30ba\u3068\u30c7\u30d0\u30a4\u30b9\u306e\u30d4\u30af\u30bb\u30eb\u30ec\u30fc\u30c8\u3092\u6c42\u3081\u308b\u3060\u308d\u3046 */\nint width = 512;\nint height = 512;\nfloat pixelRatio = 1.0\n;\n/*\n\nNanoVG \u7528\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002HTML5 Canvas \u3067\u306f canvas \u30bf\u30b0\u306b id=\"canvas\" \u3092\u4ed8\u52a0\u3057\u305f\u60f3\u5b9a\u3067\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306b\u76f8\u5f53\u3059\u308b\u3002\n\n  var context = document.getElementById(\"canvas\").getContext(\"2d\");\n\n\u547c\u3073\u51fa\u3059\u95a2\u6570\u306f\u5229\u7528\u3057\u305f\u3044 OpenGL \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u7570\u306a\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306f OpenGL2 \u306e\u95a2\u6570\u3092\u4f7f\u7528\u3059\u308b\n\n */\nNVGcontext *context = nvgCreateGL2(width, height, NVG_ANTIALIAS);\n\nwhile (rendering) {\n    /* nvg* \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u524d\u306b\u304b\u306a\u3089\u305a nvgBeginFrame \u3092\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308b */\n    nvgBeginFrame(context, width, height, pixelRatio, NVG_PREMULTIPLIED_ALPHA);\n\n    /* \u3053\u3053\u3067 nvg* \u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u3066\u5b9f\u969b\u306b\u51e6\u7406\u3092\u884c\u3046 */\n\n    /* \u5b8c\u4e86\u3057\u305f\u3089 nvgEndFrame \u3092\u547c\u3073\u51fa\u3057\u3066\u63cf\u753b\u3059\u308b */\n    nvgEndFrame(context);\n}\n\n/* \u7d42\u4e86\u6642\u306b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u7834\u68c4\u3059\u308b */\nnvgDeleteGL2(context);\n```\n\n# NanoVG \u306b\u304a\u3051\u308b Q/A \u3063\u307d\u3044\u3082\u306e\n\n## Q. \u65e5\u672c\u8a9e\u3082\u8868\u793a\u3067\u304d\u308b\uff1f A. \u30d5\u30a9\u30f3\u30c8\u304c\u3042\u308c\u3070\u8868\u793a\u3067\u304d\u308b\n\n\u307e\u305a\u4e88\u3081\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u3092 ``nvgCreateFont`` \u307e\u305f\u306f ``nvgCreateFontMem`` \u95a2\u6570\u3092\u4f7f\u3063\u3066\u30d5\u30a9\u30f3\u30c8\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u3060\u3057\u3066\u304a\u304d\u3001``nvgFontFace`` \u3067\u6307\u5b9a\u3057\u3066 ``nvgBeginPath`` \u3092\u547c\u3073\u51fa\u3057\u3066\u304b\u3089 ``nvgText`` \u3092\u4f7f\u3046\u3068\u8868\u793a\u3067\u304d\u308b\u3002\n\n\n```c\nnvgCreateFont(context, \"japanese_font\", \"/path/to/japanese_font.ttf\");\nnvgFontFace(context, \"japanese_font\");\nnvgBeginPath(context);\n/* y \u306f\u4e2d\u5fc3\u4f4d\u7f6e\u306a\u3053\u3068\u306b\u6ce8\u610f\u3002\u5b9f\u969b\u3053\u3053\u306e\u90e8\u5206\u306f nvgTextBounds \u3084 nvgTextMetrics \u306a\u3069\u3092\u4f7f\u3063\u3066\u8a08\u7b97\u3057\u3066\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3060\u308d\u3046 */\nint x = 0;\nint y = 10;\nnvgText(context, x, y, \"\u3053\u3093\u306b\u3061\u306f\u4e16\u754c\uff01\", NULL);\n```\n\n## Q. \u753b\u50cf\u3092\u8868\u793a\u3055\u305b\u305f\u3044\u5834\u5408\u306f\u3069\u3046\u3059\u308b\u306e\uff1f A. NVGpattern + nvgFillPattern + nvgFill\n\n\u4ee5\u4e0b\u5373\u5e2d\u30b3\u30fc\u30c9\n\n```cpp\nstruct Image {\n    Image(NVGcontext *c)\n        : context2D(c),\n          handle(0),\n          width(0),\n          height(0)\n    {\n    }\n    ~Image() {\n        nvgDeleteImage(context2D, handle);\n        handle = 0;\n        context2D = 0;\n    }\n    void load(const char *filename) {\n        handle = nvgCreateImage(context2D, filename);\n        nvgImageSize(context2D, handle, &width, &height);\n        pattern = nvgImagePattern(context2D, 0, 0, width, height, 0, handle, 1);\n    }\n    void render() {\n        nvgBeginPath(context2D);\n        nvgRect(context2D, 0, 0, width, height);\n        nvgFillPaint(context2D, pattern);\n        nvgFill(context2D);\n    }\n    NVGcontext *context2D;\n    NVGpaint pattern;\n    int handle;\n    int width;\n    int height;\n};\n```\n\n\u5185\u90e8\u7684\u306b\u306f stb_truetype.h \u306e API \u306e wrapper \u306a\u306e\u3067\u3001stb_truetype.h \u3067\u51fa\u6765\u306a\u3044\u3053\u3068\u306f NanoVG \u3067\u3082\u51fa\u6765\u306a\u3044\u3002\n\n# NanoVG API \u3068 HTML5 Canvas API \u306e\u5bfe\u7167\u8868\n\n\u57fa\u672c\u7684\u306a\u51e6\u7406\u306e API \u3060\u3051\u30d4\u30c3\u30af\u30a2\u30c3\u30d7\u3059\u308b\u3002\n\n|NanoVG|Canvas API|\n|---|---|\n|nvgBeginPath(context)|Context2D#beginPath()|\n|nvgMoveTo(context, x, y)|Context2D#moveTo(x, y)|\n|nvgLineTo(context, x, y)|Context2D#lineTo(x, y)|\n|nvgBezierTo(context, c1x, c1y, c2x, c2y, x, y)|Context2D#bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)|\n|nvgArcTo(context, x1, y1, x2, y2, radius)|Context2D#arcTo(x1, y1, x2, y2, radius)|\n|nvgClosePath(context)|Context2D#closePath()|\n|nvgRect(context, x, y, w, h)|Context2D#rect(x, y, w, h)|\n|nvgRoundedRect(context, x, y, w, h, r)|Context2D#roundedRect(x, y, w, h, xradius, yradius)|\n|nvgEllipse(context, cx, cy, rx, ry)|Context2D#ellipse(x, y, w, h)|\n|nvgFill(context)|Context2D#fill()|\n|nvgStroke(context)|Context2D#stroke()|\n|nvgStrokeColor(context, color)|Context2D#strokeColor|\n|nvgFillColor(context, color)|Context2D#fillColor|\n|nvgMiterLimit(context, limit)|Context2D#miterLimit|\n|nvgStrokeWidth(context, width)|Context2D#strokeWidth|\n|nvgLineCap(context, cap)|Context2D#lineCap|\n|nvgLineJoin(context, join)|Context2D#lineJoin|\n\n# 2D \u306b\u95a2\u9023\u3059\u308b\u63cf\u753b\u30e9\u30a4\u30d6\u30e9\u30ea\u307e\u305f\u306f\u6a5f\u80fd\u53ca\u3073\u4ed5\u69d8\u306e\u4e00\u89a7\n\n\u305d\u308c\u305e\u308c API \u306f\u7570\u306a\u308b\u304c\u3001\u3044\u305a\u308c\u3082 HTML5 Canvas \u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u3092\u3042\u308b\u7a0b\u5ea6\u6301\u3063\u3066\u3044\u308b\u3002\n\n - [Cairo](http://cairographics.org/) (LGPL/MPL)\n - [Skia](https://code.google.com/p/skia/) (3\u6761\u9805BSDL)\n - [Qt](http://qt-project.org/) (GPL/LGPL)\n - [Anti Grain Geometry](http://agg.sourceforge.net/antigrain.com/index.html) (N/A)\n  - 2.4 \u307e\u3067\u306f 3\u6761\u9805BSDL \u3060\u3063\u305f\u304c 2.5 \u304b\u3089 GPL\n  - 2.4 \u3068 2.5 \u306f\u6a5f\u80fd\u7684\u306b\u540c\u3058\n - [OpenVG](https://www.khronos.org/openvg/) (N/A)\n  - OpenVG \u306f\u73fe\u5728\u4ed5\u69d8\u306e\u4fdd\u5b88\u306e\u307f\u3067\u65b0\u6a5f\u80fd\u306b\u5bfe\u3059\u308b\u7b56\u5b9a\u306f\u884c\u308f\u308c\u3066\u3044\u306a\u3044\n - [NV_path_rendering](https://developer.nvidia.com/nv-path-rendering) (N/A)\n  - OpenGL \u306e\u62e1\u5f35\u3067\u3042\u308a\u3001\u73fe\u72b6 NVIDIA \u306e GPU \u3067\u3057\u304b\u5229\u7528\u3067\u304d\u306a\u3044\n", "tags": ["canvas", "OpenGL", "C"]}