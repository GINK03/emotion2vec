{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 11 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 11 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Conditional and Boolean Operators \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable.prototype.every\n\n\nReactiveX - All operator\nObservable.prototype.every API Document\nObservable.prototype.every Source Code\n\nReactiveX \u3067\u306f All \u3067\u3059\u304c\u3001RxJS \u3067\u306f every \u3067\u3059\u3002\nArray.prototype.every \u3068\u540c\u69d8\u306b\u3059\u3079\u3066\u306e\u5024\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u3068\u304d\u306b onNext(true) \u3057\u307e\u3059\u3002\u3072\u3068\u3064\u3067\u3082\u9055\u3048\u3070\u3001\u305d\u306e\u6642\u70b9\u3067 onNext(false) \u3057 onCompleted \u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4])\n  .do(value => console.log(`do: ${value}`))\n  .every(value => value < 3)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// do: 1\n// do: 2\n// do: 3\n// onNext: false\n// onCompleted\n\n\u3042\u3048\u3066 false \u306b\u306a\u308b\u4f8b\u3092\u3002\u9014\u4e2d\u3067\u6253\u3061\u5207\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3088\u3046\u306b do \u3092\u306f\u3055\u3093\u3067\u3044\u307e\u3059\u3002\n\nObservable.amb / Observable.prototype.amb\n\n\nReactiveX - Amb operator\nObservable.amb API Document\nObservable.amb Source Code\nObservable.prototype.amb API Document\nObservable.prototype.amb Source Code\n\n\u8907\u6570\u306e Observable \u3092\u53d6\u308a\u3001\u6700\u521d\u306b\u5024\u3092\u6d41\u3057\u305f Observable \u306e\u5024\u3092\u6b21\u306b\u6d41\u3057\u307e\u3059\u3002\nAPI \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068 amb \u306f ambiguous \u306e\u610f\u5473\u3060\u305d\u3046\u3067\u3059\u3002\nObservable.prototype.amb \u306f\u81ea\u8eab\u3068\u3082\u3046\u3072\u3068\u3064\u306e Observable \u3092\u53d6\u308a\u3001Observable.amb \u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306e\u3072\u3068\u3064\u3092\u9078\u3093\u3067\u5229\u7528\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .amb(\n    Observable.timer(500).map(() => '500'),\n    Observable.timer(300).map(() => '300')\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 300\n// onCompleted\n\n\nObservable.prototype.includes\n\n\nReactiveX - Includes operator\nObservable.prototype.includes API Document\nObservable.prototype.includes Source Code\n\nReactiveX \u3067\u306f Contains \u3067\u3059\u304c\u3001RxJS \u3067\u306f\u524a\u9664\u3055\u308c\u3066\u304a\u308a includes \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070 true \u3092\u306a\u3051\u308c\u3070 false \u3092 onNext \u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .includes(2)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: true\n// onCompleted\n\n\u3061\u306a\u307f\u306b Observable.prototype.indexOf \u3082\u3042\u308a\u307e\u3059\u3002\n\nObservable.prototype.defaultifempty\n\n\nReactiveX - DefaultIfEmpty operator\nObservable.prototype.defaultifempty API Document\nObservable.prototype.defaultifempty Source Code\n\nonCompleted \u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e00\u5ea6\u3082 onNext \u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b defaultValue \u3092\u6d41\u3057\u307e\u3059\u3002defaultValue \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 null \u3067\u3059\u3002\u4e0b\u8a18\u306e\u4f8b\u3067\u306f 123 \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .empty()\n  .defaultIfEmpty(123)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 123\n// onCompleted\n\n\nObservable.prototype.sequenceEqual\n\n\nReactiveX - SequenceEqual operator\nObservable.prototype.sequenceEqual API Document\nObservable.prototype.sequenceEqual Source Code\n\n\u3075\u305f\u3064\u306e Observable \u3067\u524d\u304b\u3089\u9806\u306b onNext \u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3059\u3079\u3066\u4e00\u81f4\u3059\u308c\u3070 true \u3092\u6d41\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .sequenceEqual(\n    Observable\n      .from([1, 2, 3])\n      .delay(100)\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: true\n// onCompleted\n\n\u4e0a\u8a18\u306e\u901a\u308a\u3001\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u305a\u308c\u3066\u3082 (delay(100)) \u3001\u6d41\u308c\u3066\u304f\u308b\u5024\u304c\u540c\u3058\u306a\u3089 true \u306b\u306a\u308a\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\nReactiveX \u306e Conditional and Boolean Operators \u3092\u898b\u3066\u3044\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u533a\u5206\u306e\u610f\u56f3\u306f\u3042\u307e\u308a\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\u30ea\u30b9\u30c8\u4e0a\u306f skipUntil / skipWhile / takeUntil / takeWhile \u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4ee5\u524d\u89e6\u308c\u305f\u306e\u3067\u5272\u611b\u3057\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 11 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 11 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Conditional and Boolean Operators](http://reactivex.io/documentation/operators.html#conditional) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3092\u8aad\u3093\u3060\u308a\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n## `Observable.prototype.every`\n\n- [ReactiveX - All operator](http://reactivex.io/documentation/operators/all.html)\n- [`Observable.prototype.every` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/every.md)\n- [`Observable.prototype.every` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/every.js)\n\nReactiveX \u3067\u306f All \u3067\u3059\u304c\u3001RxJS \u3067\u306f `every` \u3067\u3059\u3002\n\n`Array.prototype.every` \u3068\u540c\u69d8\u306b\u3059\u3079\u3066\u306e\u5024\u304c\u6761\u4ef6\u3092\u6e80\u305f\u3057\u305f\u3068\u304d\u306b `onNext(true)` \u3057\u307e\u3059\u3002\u3072\u3068\u3064\u3067\u3082\u9055\u3048\u3070\u3001\u305d\u306e\u6642\u70b9\u3067 `onNext(false)` \u3057 `onCompleted` \u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3, 4])\n  .do(value => console.log(`do: ${value}`))\n  .every(value => value < 3)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// do: 1\n// do: 2\n// do: 3\n// onNext: false\n// onCompleted\n```\n\n\u3042\u3048\u3066 `false` \u306b\u306a\u308b\u4f8b\u3092\u3002\u9014\u4e2d\u3067\u6253\u3061\u5207\u3063\u3066\u3044\u308b\u306e\u304c\u5206\u304b\u308b\u3088\u3046\u306b `do` \u3092\u306f\u3055\u3093\u3067\u3044\u307e\u3059\u3002\n\n## `Observable.amb` / `Observable.prototype.amb`\n\n- [ReactiveX - Amb operator](http://reactivex.io/documentation/operators/amb.html)\n- [`Observable.amb` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/amb.md)\n- [`Observable.amb` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/amb.js)\n- [`Observable.prototype.amb` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/ambproto.md)\n- [`Observable.prototype.amb` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/ambproto.js)\n\n\u8907\u6570\u306e `Observable` \u3092\u53d6\u308a\u3001\u6700\u521d\u306b\u5024\u3092\u6d41\u3057\u305f `Observable` \u306e\u5024\u3092\u6b21\u306b\u6d41\u3057\u307e\u3059\u3002\n\nAPI \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068 `amb` \u306f ambiguous \u306e\u610f\u5473\u3060\u305d\u3046\u3067\u3059\u3002\n\n`Observable.prototype.amb` \u306f\u81ea\u8eab\u3068\u3082\u3046\u3072\u3068\u3064\u306e `Observable` \u3092\u53d6\u308a\u3001`Observable.amb` \u3068\u540c\u69d8\u306b\u3001\u6700\u521d\u306e\u3072\u3068\u3064\u3092\u9078\u3093\u3067\u5229\u7528\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .amb(\n    Observable.timer(500).map(() => '500'),\n    Observable.timer(300).map(() => '300')\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 300\n// onCompleted\n```\n\n## `Observable.prototype.includes`\n\n- [ReactiveX - Includes operator](http://reactivex.io/documentation/operators/contains.html)\n- [`Observable.prototype.includes` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/includes.md)\n- [`Observable.prototype.includes` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/includes.js)\n\nReactiveX \u3067\u306f Contains \u3067\u3059\u304c\u3001RxJS \u3067\u306f\u524a\u9664\u3055\u308c\u3066\u304a\u308a includes \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6307\u5b9a\u3057\u305f\u8981\u7d20\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070 `true` \u3092\u306a\u3051\u308c\u3070 `false` \u3092 `onNext` \u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .includes(2)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: true\n// onCompleted\n```\n\n\u3061\u306a\u307f\u306b `Observable.prototype.indexOf` \u3082\u3042\u308a\u307e\u3059\u3002\n\n## `Observable.prototype.defaultifempty`\n\n- [ReactiveX - DefaultIfEmpty operator](http://reactivex.io/documentation/operators/defaultifempty.html)\n- [`Observable.prototype.defaultifempty` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/defaultifempty.md)\n- [`Observable.prototype.defaultifempty` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/defaultifempty.js)\n\n`onCompleted` \u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u4e00\u5ea6\u3082 `onNext` \u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306b `defaultValue` \u3092\u6d41\u3057\u307e\u3059\u3002`defaultValue` \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 `null` \u3067\u3059\u3002\u4e0b\u8a18\u306e\u4f8b\u3067\u306f `123` \u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .empty()\n  .defaultIfEmpty(123)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 123\n// onCompleted\n```\n\n## `Observable.prototype.sequenceEqual`\n\n- [ReactiveX - SequenceEqual operator](http://reactivex.io/documentation/operators/sequenceequal.html)\n- [`Observable.prototype.sequenceEqual` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/sequenceequal.md)\n- [`Observable.prototype.sequenceEqual` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/sequenceequal.js)\n\n\u3075\u305f\u3064\u306e `Observable` \u3067\u524d\u304b\u3089\u9806\u306b `onNext` \u306e\u5024\u3092\u6bd4\u8f03\u3057\u3066\u3059\u3079\u3066\u4e00\u81f4\u3059\u308c\u3070 `true` \u3092\u6d41\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .sequenceEqual(\n    Observable\n      .from([1, 2, 3])\n      .delay(100)\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: true\n// onCompleted\n```\n\n\u4e0a\u8a18\u306e\u901a\u308a\u3001\u30bf\u30a4\u30df\u30f3\u30b0\u304c\u305a\u308c\u3066\u3082 (`delay(100)`) \u3001\u6d41\u308c\u3066\u304f\u308b\u5024\u304c\u540c\u3058\u306a\u3089 `true` \u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\nReactiveX \u306e Conditional and Boolean Operators \u3092\u898b\u3066\u3044\u304d\u307e\u3057\u305f\u3002\u3053\u306e\u533a\u5206\u306e\u610f\u56f3\u306f\u3042\u307e\u308a\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u3002\n\n\u30ea\u30b9\u30c8\u4e0a\u306f `skipUntil` / `skipWhile` / `takeUntil` / `takeWhile` \u304c\u3042\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4ee5\u524d\u89e6\u308c\u305f\u306e\u3067\u5272\u611b\u3057\u307e\u3057\u305f\u3002\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}