{"tags": ["Python", "AWS", "aws-cli", "AutoScaling", "EC2"], "context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\nAutoScaling \u306e\u30b0\u30eb\u30fc\u30d7\u3059\u3079\u3066\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\nIP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u63a2\u3057\u305f\u304c\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\nfabric \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067 Python \u3067\u958b\u767a\n\nboto \u306f\u4f7f\u308f\u305a AWS \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u88c5\uff08aws \u306e --query \u3092\u4f7f\u3044\u305f\u3044\u305f\u3081\uff09\n\n\n\u30b3\u30fc\u30c9\u4f8b\nimport commands\nimport re\n\ndef ipv4_address(instance_id):\n  query = \"Reservations[].Instances[?InstanceId=='%(instance_id)s'].PublicIpAddress\" % locals()\n  cmdline = 'aws ec2 describe-instances --query \"%(query)s\" --output text' % locals()\n  return commands.getoutput(cmdline)\n\ndef autoscaling_instance_ids(group):\n  query = \"AutoScalingInstances[?AutoScalingGroupName=='%(group)s'].InstanceId\" % locals()\n  result = commands.getoutput('aws autoscaling describe-auto-scaling-instances --query \"%(query)s\" --output text' % locals())\n  regexp = re.compile(r'\\s+')\n  instance_ids = regexp.split(result)\n  return instance_ids\n\ndef ip_of_the_group(group):\n  ids = autoscaling_instance_ids(group)\n  return [ ipv4_address(instance_id) for instance_id in ids ]\n\n\n\u53c2\u8003\u6587\u732e\n\nhttp://stackoverflow.com/questions/4450592/string-interpolation-in-python\nhttp://stackoverflow.com/questions/1410976/equivalent-of-backticks-in-python\nhttp://stackoverflow.com/questions/13209288/python-split-string-based-on-regex\nhttp://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-instances.html\n\n## \u80cc\u666f\n* AutoScaling \u306e\u30b0\u30eb\u30fc\u30d7\u3059\u3079\u3066\u306e\u30db\u30b9\u30c8\u306b\u5bfe\u3057\u3066\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3044\n* IP\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u63a2\u3057\u305f\u304c\u898b\u3064\u3051\u3089\u308c\u306a\u304b\u3063\u305f\n* fabric \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067 Python \u3067\u958b\u767a\n* `boto` \u306f\u4f7f\u308f\u305a AWS \u30b3\u30de\u30f3\u30c9\u3067\u5b9f\u88c5\uff08`aws` \u306e `--query` \u3092\u4f7f\u3044\u305f\u3044\u305f\u3081\uff09\n\n## \u30b3\u30fc\u30c9\u4f8b\n\n```py\nimport commands\nimport re\n\ndef ipv4_address(instance_id):\n  query = \"Reservations[].Instances[?InstanceId=='%(instance_id)s'].PublicIpAddress\" % locals()\n  cmdline = 'aws ec2 describe-instances --query \"%(query)s\" --output text' % locals()\n  return commands.getoutput(cmdline)\n\ndef autoscaling_instance_ids(group):\n  query = \"AutoScalingInstances[?AutoScalingGroupName=='%(group)s'].InstanceId\" % locals()\n  result = commands.getoutput('aws autoscaling describe-auto-scaling-instances --query \"%(query)s\" --output text' % locals())\n  regexp = re.compile(r'\\s+')\n  instance_ids = regexp.split(result)\n  return instance_ids\n\ndef ip_of_the_group(group):\n  ids = autoscaling_instance_ids(group)\n  return [ ipv4_address(instance_id) for instance_id in ids ]\n```\n\n## \u53c2\u8003\u6587\u732e\n* http://stackoverflow.com/questions/4450592/string-interpolation-in-python\n* http://stackoverflow.com/questions/1410976/equivalent-of-backticks-in-python\n* http://stackoverflow.com/questions/13209288/python-split-string-based-on-regex\n* http://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-instances.html\n"}