{"context": "\n\nSapporo\u3068\u306f\nSapporo\u3068\u306f\uff0ciOS\u306eUICollectionView\u3092Cellmodel-driven\u3067\u6271\u3046\u305f\u3081\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\n\n\u74b0\u5883\n\nOSX El Captan\nXcode 7.3\niOS 8.0\nSwift 2.2\nSapporo 1.1\n\n\nViewController\u306e\u5b9f\u88c5\n\nViewController.swift\nimport UIKit\nimport Sapporo\n\nclass ViewController: UIViewController {\n\n    @IBOutlet var collectionView: UICollectionView!\n    lazy var sapporo: Sapporo = { [unowned self] in\n        return Sapporo(collectionView: self.collectionView)\n        }()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // \u4ee5\u4e0b\u306e\u3088\u3046\u306b\uff0crepeatedValue \u306b\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3068\u5b9f\u4f53\u306f1\u3064\u306e\u305f\u3081\u72b6\u614b\u304c\u5171\u6709\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u304d\u306f\u6ce8\u610f\n        let cellmodels: [MyCellModel] = Array(count: 4,  repeatedValue: MyCellModel())\n\n        let section = SASection()\n        section.inset = UIEdgeInsets(top: 30, left: 10, bottom: 10, right: 10)\n        section.minimumLineSpacing = 10\n\n        sapporo\n            .registerCellByNib(MyCell)\n            .setLayout(SAFlowLayout())\n\n        sapporo\n            .reset(section)\n            .bump()\n\n        section\n            .reset(cellmodels)\n            .bump()\n    }\n\n}\n\n\n\nCell\u3068CellModel\u306e\u5b9f\u88c5\n\nMyCell.swift\nimport UIKit\nimport Sapporo\n\nclass MyCellModel: SACellModel {\n\n    init(){\n        let size = CGSize(width: 100, height: 100)\n        super.init(cellType: MyCell.self, size: size, selectionHandler: nil)\n    }\n}\n\nclass MyCell: SACell, SACellType {\n    typealias CellModel = MyCellModel\n\n    override func configure() {\n        super.configure()\n\n    }\n}\n\n\n\n\u30bb\u30eb\u306e\u64cd\u4f5c\n\n\n\u8ffd\u52a0\nsection\n    .append(cellmodel)\n    .bump()\n\nsapporo[1]\n    .append(cellmodel)\n    .bump()\n\n\n\n\u633f\u5165\nsection\n    .insert(cellmodel)\n    .bump()\n\nsection\n    .insertBeforeLast(cellmodels)\n    .bump()\n\n\n\n\u30ea\u30bb\u30c3\u30c8\nsection\n    .reset(cellmodels)              \n    .bump()\n\nsection\n    .reset()                            \n    .bump()\n\n\n\n\u79fb\u52d5\nsection\n    .move(fromIndex: 5, toIndex: 1)\n    .bump()\n\n\n\n\u524a\u9664\nsection\n    .remove(1)\n    .bump()\n\nsection\n    .remove(cellmodel)\n    .bump()\n\nsection\n    .remove(2...5)\n    .bump()\n\nsection\n    .removeLast()\n    .bump()\n\n\n\n\u66f4\u65b0\nlet cellmodel = section[1]\ncellmodel.property = newData\ncellmodel.bump()\n\n\n\n\n\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u64cd\u4f5c\n\n\n\u633f\u5165\nsapporo\n    .insert(section, atIndex: 1)\n    .bump()\n\n\n\n\u79fb\u52d5\nsapporo\n    .move(fromIndex: 1, toIndex: 5)\n    .bump()\n\n\n\n\n## Sapporo\u3068\u306f\n\n[Sapporo](https://github.com/nghialv/Sapporo)\u3068\u306f\uff0ciOS\u306eUICollectionView\u3092Cellmodel-driven\u3067\u6271\u3046\u305f\u3081\u306e\u30de\u30cd\u30fc\u30b8\u30e3\u30fc\n\n## \u74b0\u5883\n\n- OSX El Captan\n- Xcode 7.3\n- iOS 8.0\n- Swift 2.2\n- Sapporo 1.1\n\n\n## ViewController\u306e\u5b9f\u88c5\n\n\n```swift:ViewController.swift\nimport UIKit\nimport Sapporo\n\nclass ViewController: UIViewController {\n    \n    @IBOutlet var collectionView: UICollectionView!\n    lazy var sapporo: Sapporo = { [unowned self] in\n        return Sapporo(collectionView: self.collectionView)\n        }()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n        // \u4ee5\u4e0b\u306e\u3088\u3046\u306b\uff0crepeatedValue \u306b\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3068\u5b9f\u4f53\u306f1\u3064\u306e\u305f\u3081\u72b6\u614b\u304c\u5171\u6709\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\uff0c\u5b9f\u969b\u306b\u4f7f\u3046\u3068\u304d\u306f\u6ce8\u610f\n        let cellmodels: [MyCellModel] = Array(count: 4,  repeatedValue: MyCellModel())\n        \n        let section = SASection()\n        section.inset = UIEdgeInsets(top: 30, left: 10, bottom: 10, right: 10)\n        section.minimumLineSpacing = 10\n        \n        sapporo\n            .registerCellByNib(MyCell)\n            .setLayout(SAFlowLayout())\n        \n        sapporo\n            .reset(section)\n            .bump()\n        \n        section\n            .reset(cellmodels)\n            .bump()\n    }\n\n}\n```\n\n## Cell\u3068CellModel\u306e\u5b9f\u88c5\n\n``` swift:MyCell.swift\nimport UIKit\nimport Sapporo\n\nclass MyCellModel: SACellModel {\n\n    init(){\n        let size = CGSize(width: 100, height: 100)\n        super.init(cellType: MyCell.self, size: size, selectionHandler: nil)\n    }\n}\n\nclass MyCell: SACell, SACellType {\n    typealias CellModel = MyCellModel\n    \n    override func configure() {\n        super.configure()\n        \n    }\n}\n```\n\n\n## \u30bb\u30eb\u306e\u64cd\u4f5c\n\n- \u8ffd\u52a0\n\n\t```\n\tsection\n\t\t.append(cellmodel)\n\t\t.bump()\n\n\tsapporo[1]\n\t\t.append(cellmodel)\n\t\t.bump()\n\t```\n\n- \u633f\u5165\n\n\t```\t\n\tsection\n\t\t.insert(cellmodel)\n\t\t.bump()\n\t\t\n\tsection\n        .insertBeforeLast(cellmodels)\n        .bump()\n\t```\n\t\n- \u30ea\u30bb\u30c3\u30c8\n\t\n\t```\n    section\n        .reset(cellmodels)              \n        .bump()\n\n    section\n        .reset()                            \n        .bump()\n    ```\n\n\n- \u79fb\u52d5\n\n\t```\n\tsection\n        .move(fromIndex: 5, toIndex: 1)\n        .bump()\n\t```\n\t\n\t\n- \u524a\u9664\n\t\n\t```\n\tsection\n        .remove(1)\n        .bump()\n\n    section\n        .remove(cellmodel)\n        .bump()\n\n    section\n        .remove(2...5)\n        .bump()\n\n    section\n        .removeLast()\n        .bump()\n\t```\n\t\n- \u66f4\u65b0\n\n\t```\n\tlet cellmodel = section[1]\n    cellmodel.property = newData\n    cellmodel.bump()\n\t```\n\t\n\n## \u30bb\u30af\u30b7\u30e7\u30f3\u306e\u64cd\u4f5c\n\n- \u633f\u5165\n\n\t```\n\tsapporo\n\t\t.insert(section, atIndex: 1)\n   \t\t.bump()\n\t```\n\t\n- \u79fb\u52d5\n\n\t```\n\tsapporo\n\t\t.move(fromIndex: 1, toIndex: 5)\n   \t\t.bump()\n\t```\n\t\n", "tags": ["Swift", "iOS", "\u30e9\u30a4\u30d6\u30e9\u30ea", "UICollectionView", "Sapporo"]}