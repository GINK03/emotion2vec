{"context": "\n\n\u6982\u8981\njsdo\u3067shadertoy\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u3002\nwave\u30c7\u30fc\u30bf\u3082\u4f7f\u3044\u305f\u3044\u3002\n\n\u6210\u679c\u7269\nhttp://jsdo.it/ohisama1/Mxnc\n\n\u5199\u771f\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iGlobalTime;\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\n\nfloat smootherSample(vec2 uv, float e) \n{\n    e *= 3.0; \n    return (texture2D(iChannel0, uv - vec2(e * -0.5, 0.0)).x + texture2D(iChannel0, uv - vec2(e * -0.4, 0.0)).x\n        + texture2D(iChannel0, uv - vec2(e * -0.3, 0.0)).x + texture2D(iChannel0, uv - vec2(e * -0.2, 0.0)).x\n        + texture2D(iChannel0, uv - vec2(e * -0.1, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.0, 0.0)).x\n        + texture2D(iChannel0, uv - vec2(e * +0.1, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.2, 0.0)).x\n        + texture2D(iChannel0, uv - vec2(e * +0.3, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.4, 0.0)).x\n        + texture2D(iChannel0, uv - vec2(e * +0.5, 0.0)).x) / 11.0;\n}\nfloat getWaveformValue(float x, float mode, float e)\n{\n    return smootherSample(vec2(x, mode), e);\n}\nfloat getWaveformDeriv(float x, float mode, float e)\n{\n    return (smootherSample(vec2(x + e * 0.5, mode), e) - smootherSample(vec2(x - e * 0.5, mode), e)) / e;\n}\nvec4 osc(float mode, float offset, float amp, vec2 uv, vec2 dudv)\n{\n    float base_width = 2.0 * dudv.y;\n    float height = amp * (getWaveformValue(uv.x, mode, dudv.x / iResolution.x) - 0.5);\n    float heightderiv = amp * getWaveformDeriv(uv.x, mode, dudv.x / iResolution.x);\n    float final_width = dot(vec2(base_width, abs(dudv.x * 0.6 * heightderiv)) / iResolution.xy, vec2(1.0, 1.0));\n    float value = ((height - uv.y + offset) / final_width);\n    float v = abs(value);\n    v = clamp(0.0, v, 1.0);\n    vec4 colorLCD;\n    float color_split = 1.0;\n    float color_power = 1.0 - color_split;\n    if ((heightderiv < 0.0 ^^ value < 0.0))\n    {\n        colorLCD.r = (1.0 + 2.0 * color_split) * v;\n        colorLCD.g = colorLCD.r * 0.5;\n        colorLCD.b = colorLCD.r - color_split;\n        colorLCD = clamp(vec4(0, 0, 0, 0), colorLCD, vec4(1, 1, 1, 1));\n    }\n    else\n    {\n        colorLCD.b = (1.0 + 2.0 * color_split) * v;\n        colorLCD.g = colorLCD.b * 0.5;\n        colorLCD.r = colorLCD.b - color_split;\n        colorLCD = clamp(vec4(0.0), colorLCD, vec4(1.0));\n    }   \n    return colorLCD;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n    vec2 uv = fragCoord.xy / iResolution.xy;\n    vec4 color = vec4(1, 1, 1, 1);\n    color *= osc(1.0, 0.83, 0.33, uv, vec2(1.0));\n    color *= osc(0.0, 0.50, 0.33, uv, vec2(1.0));\n    color *= osc(0.0, 0.17, 0.33, vec2(pow(uv.x, 2.0), uv.y),vec2(2.0 * (uv.x), 1.0));\n    fragColor = color;\n}\n\nvoid main() \n{\n    vec4 color;\n    mainImage(color, gl_FragCoord.xy);\n    color.w = 1.0;\n    gl_FragColor = color;\n}   \n\n\n\u8aac\u660e\niChannel0\u3001iChannel1\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\u4ed5\u7d44\u307f\u306f\u3001wave\u30c7\u30fc\u30bf\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306b\u6d41\u3057\u8fbc\u3080\u3002\n#\u6982\u8981\njsdo\u3067shadertoy\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u305f\u3044\u3002\nwave\u30c7\u30fc\u30bf\u3082\u4f7f\u3044\u305f\u3044\u3002\n#\u6210\u679c\u7269\nhttp://jsdo.it/ohisama1/Mxnc\n#\u5199\u771f\n![toy.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/7749ee06-c757-4d77-f0a7-8d99115d3e78.jpeg)\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\nprecision mediump float;\nuniform vec2 iResolution;\nuniform float iGlobalTime;\nuniform sampler2D iChannel0;\nuniform sampler2D iChannel1;\n\nfloat smootherSample(vec2 uv, float e) \n{\n\te *= 3.0; \n\treturn (texture2D(iChannel0, uv - vec2(e * -0.5, 0.0)).x + texture2D(iChannel0, uv - vec2(e * -0.4, 0.0)).x\n\t\t+ texture2D(iChannel0, uv - vec2(e * -0.3, 0.0)).x + texture2D(iChannel0, uv - vec2(e * -0.2, 0.0)).x\n\t\t+ texture2D(iChannel0, uv - vec2(e * -0.1, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.0, 0.0)).x\n\t\t+ texture2D(iChannel0, uv - vec2(e * +0.1, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.2, 0.0)).x\n\t\t+ texture2D(iChannel0, uv - vec2(e * +0.3, 0.0)).x + texture2D(iChannel0, uv - vec2(e * +0.4, 0.0)).x\n\t\t+ texture2D(iChannel0, uv - vec2(e * +0.5, 0.0)).x) / 11.0;\n}\nfloat getWaveformValue(float x, float mode, float e)\n{\n\treturn smootherSample(vec2(x, mode), e);\n}\nfloat getWaveformDeriv(float x, float mode, float e)\n{\n\treturn (smootherSample(vec2(x + e * 0.5, mode), e) - smootherSample(vec2(x - e * 0.5, mode), e)) / e;\n}\nvec4 osc(float mode, float offset, float amp, vec2 uv, vec2 dudv)\n{\n\tfloat base_width = 2.0 * dudv.y;\n\tfloat height = amp * (getWaveformValue(uv.x, mode, dudv.x / iResolution.x) - 0.5);\n\tfloat heightderiv = amp * getWaveformDeriv(uv.x, mode, dudv.x / iResolution.x);\n\tfloat final_width = dot(vec2(base_width, abs(dudv.x * 0.6 * heightderiv)) / iResolution.xy, vec2(1.0, 1.0));\n\tfloat value = ((height - uv.y + offset) / final_width);\n\tfloat v = abs(value);\n\tv = clamp(0.0, v, 1.0);\n    vec4 colorLCD;\n\tfloat color_split = 1.0;\n\tfloat color_power = 1.0 - color_split;\n\tif ((heightderiv < 0.0 ^^ value < 0.0))\n    {\n\t\tcolorLCD.r = (1.0 + 2.0 * color_split) * v;\n\t\tcolorLCD.g = colorLCD.r * 0.5;\n\t\tcolorLCD.b = colorLCD.r - color_split;\n\t\tcolorLCD = clamp(vec4(0, 0, 0, 0), colorLCD, vec4(1, 1, 1, 1));\n\t}\n\telse\n    {\n\t\tcolorLCD.b = (1.0 + 2.0 * color_split) * v;\n\t\tcolorLCD.g = colorLCD.b * 0.5;\n\t\tcolorLCD.r = colorLCD.b - color_split;\n\t\tcolorLCD = clamp(vec4(0.0), colorLCD, vec4(1.0));\n\t}\t\n\treturn colorLCD;\n}\nvoid mainImage(out vec4 fragColor, in vec2 fragCoord)\n{\n\tvec2 uv = fragCoord.xy / iResolution.xy;\n\tvec4 color = vec4(1, 1, 1, 1);\n\tcolor *= osc(1.0, 0.83, 0.33, uv, vec2(1.0));\n\tcolor *= osc(0.0, 0.50, 0.33, uv, vec2(1.0));\n\tcolor *= osc(0.0, 0.17, 0.33, vec2(pow(uv.x, 2.0), uv.y),vec2(2.0 * (uv.x), 1.0));\n\tfragColor = color;\n}\n\nvoid main() \n{\n    vec4 color;\n    mainImage(color, gl_FragCoord.xy);\n    color.w = 1.0;\n    gl_FragColor = color;\n}   \n```\n#\u8aac\u660e\niChannel0\u3001iChannel1\u3092\u5b9f\u88c5\u3057\u305f\u3002\n\u4ed5\u7d44\u307f\u306f\u3001wave\u30c7\u30fc\u30bf\u3092\u30c6\u30af\u30b9\u30c1\u30e3\u30fc\u306b\u6d41\u3057\u8fbc\u3080\u3002\n", "tags": ["jsdo", "shadertoy", "GLSL", "WebGL"]}