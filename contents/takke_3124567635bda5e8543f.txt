{"context": "Realm\u3092\u4f7f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3067\u306fAPK\u306e\u80a5\u5927\u5316\u3092\u9632\u3050\u305f\u3081\u306b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306bAPK\u3092\u5206\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u5b9a\u77f3\u3067\u3059\u3002\n\nRealm\u5c0e\u5165\u306b\u3088\u308bAPK\u80a5\u5927\u5316\u3092\u9632\u3050(Split APK) - Qiita\nApk Splits - Android Studio Project Site\nRealm Java\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u304c\u5909\u308f\u308a\u307e\u3059\n\n\u7570\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306eAPK\u3092Play\u30b9\u30c8\u30a2\u3067\u516c\u958b\u3059\u308b\u305f\u3081\u306b\u306fVersionCode\u3092\u5404\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u7570\u306a\u3063\u305f\u3082\u306e\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nMultiple APK Support | Android Developers\n\n\u305d\u3093\u306a\u30a2\u30d7\u30ea\u3067InstantRun\u3092\u6709\u52b9\u306b\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u306a\u305c\u304bABI\u304cx86\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\n\napp/build.gradle\n...\n    // \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\n    applicationVariants.all { variant ->\n        // assign different version code for each output\n        variant.outputs.each { output ->\n            def flavorName = variant.productFlavors[0].name\n            def buildTypeName = variant.buildType.name\n\n            def arch = output.getFilter(com.android.build.OutputFile.ABI)\n            output.versionCodeOverride = android.defaultConfig.versionCode * 10 + rootProject.ext.versionCodes.get(arch)\n\n            System.println(\"* override version code : [${android.defaultConfig.versionCode}] -> [${output.versionCodeOverride}] (${flavorName} ${buildTypeName} ${arch})\")\n        }\n    }\n\n\n\u3053\u3046\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u63db\u308f\u308a\u307e\u3059\u3002\n* override version code : [6] -> [62] (premium debug x86)\n* override version code : [6] -> [64] (premium debug armeabi-v7a)\n* override version code : [6] -> [62] (premium release x86)\n* override version code : [6] -> [64] (premium release armeabi-v7a)\n* override version code : [6] -> [62] (free debug x86)\n* override version code : [6] -> [64] (free debug armeabi-v7a)\n* override version code : [6] -> [62] (free release x86)\n* override version code : [6] -> [64] (free release armeabi-v7a)\n\n\u3053\u308c\u3092\u666e\u901a\u306bAndroidStudio\u304b\u3089\u5b9f\u884c\u3059\u308b\u3068 VersionCode=64 \u306e\u307b\u3046\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001InstantRun \u3092\u6709\u52b9\u306b\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068 VersionCode=64 \u306e\u307b\u3046\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u4fc3\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u8272\u3005\u8abf\u3079\u305f\u3068\u3053\u308d\u3001fabric \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u3053\u306e\u73fe\u8c61\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\nclasspath 'io.fabric.tools:gradle:1.21.7'\n\n\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b debug \u7248\u3067\u306f \u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u306e\u4e0b\u4e00\u6841\u3092 0 \u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\napp/build.gradle\n...\n    // \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\n    applicationVariants.all { variant ->\n        // assign different version code for each output\n        variant.outputs.each { output ->\n            def flavorName = variant.productFlavors[0].name\n            def buildTypeName = variant.buildType.name\n\n            def arch = output.getFilter(com.android.build.OutputFile.ABI)\n            def versionCode1 = rootProject.ext.versionCodes.get(arch)\n            if (buildTypeName == \"debug\") {\n                // InstantRun \u3092\u6709\u52b9\u306b\u3059\u308b\u3068 fabric \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5f71\u97ff\u3067 ABI \u304c \"x86\" \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\n                // InstantRun \u306e\u6709\u52b9/\u7121\u52b9\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u304c\u5909\u5316\u3057\u3066\u3057\u307e\u3046\u3002\u3053\u308c\u3092\u9632\u3050\u305f\u3081\u30c7\u30d0\u30c3\u30b0\u6642\u306f \"0\" \u306b\u3059\u308b\u3002\n                versionCode1 = 0;\n            }\n            output.versionCodeOverride = android.defaultConfig.versionCode * 10 + versionCode1\n\n            System.println(\"* override version code : [${android.defaultConfig.versionCode}] -> [${output.versionCodeOverride}] (${flavorName} ${buildTypeName} ${arch})\")\n        }\n    }\n\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u5927\u4e08\u592b\u305d\u3046\u3067\u3059\u3002\n* override version code : [6] -> [60] (premium debug x86)\n* override version code : [6] -> [60] (premium debug armeabi-v7a)\n* override version code : [6] -> [62] (premium release x86)\n* override version code : [6] -> [64] (premium release armeabi-v7a)\n* override version code : [6] -> [60] (free debug x86)\n* override version code : [6] -> [60] (free debug armeabi-v7a)\n* override version code : [6] -> [62] (free release x86)\n* override version code : [6] -> [64] (free release armeabi-v7a)\n\nRealm\u3092\u4f7f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3067\u306fAPK\u306e\u80a5\u5927\u5316\u3092\u9632\u3050\u305f\u3081\u306b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306bAPK\u3092\u5206\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u306e\u304c\u5b9a\u77f3\u3067\u3059\u3002\n\n- [Realm\u5c0e\u5165\u306b\u3088\u308bAPK\u80a5\u5927\u5316\u3092\u9632\u3050(Split APK) - Qiita](http://qiita.com/takke/items/8f7ca95d35e6f942eba2)\n- [Apk Splits - Android Studio Project Site](http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits)\n- [Realm Java\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u65b9\u6cd5\u304c\u5909\u308f\u308a\u307e\u3059](https://realm.io/jp/news/android-installation-change/)\n\n\u7570\u306a\u308b\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306eAPK\u3092Play\u30b9\u30c8\u30a2\u3067\u516c\u958b\u3059\u308b\u305f\u3081\u306b\u306fVersionCode\u3092\u5404\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u7570\u306a\u3063\u305f\u3082\u306e\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n- [Multiple APK Support | Android Developers](https://developer.android.com/google/play/publishing/multiple-apks.html)\n\n\u305d\u3093\u306a\u30a2\u30d7\u30ea\u3067InstantRun\u3092\u6709\u52b9\u306b\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u306a\u305c\u304bABI\u304cx86\u3068\u3057\u3066\u6271\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u5177\u4f53\u7684\u306b\u306f\n\n```groovy:app/build.gradle\n...\n    // \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\n    applicationVariants.all { variant ->\n        // assign different version code for each output\n        variant.outputs.each { output ->\n            def flavorName = variant.productFlavors[0].name\n            def buildTypeName = variant.buildType.name\n\n            def arch = output.getFilter(com.android.build.OutputFile.ABI)\n            output.versionCodeOverride = android.defaultConfig.versionCode * 10 + rootProject.ext.versionCodes.get(arch)\n\n            System.println(\"* override version code : [${android.defaultConfig.versionCode}] -> [${output.versionCodeOverride}] (${flavorName} ${buildTypeName} ${arch})\")\n        }\n    }\n```\n\n\u3053\u3046\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u304c\u66f8\u304d\u63db\u308f\u308a\u307e\u3059\u3002\n\n```\n* override version code : [6] -> [62] (premium debug x86)\n* override version code : [6] -> [64] (premium debug armeabi-v7a)\n* override version code : [6] -> [62] (premium release x86)\n* override version code : [6] -> [64] (premium release armeabi-v7a)\n* override version code : [6] -> [62] (free debug x86)\n* override version code : [6] -> [64] (free debug armeabi-v7a)\n* override version code : [6] -> [62] (free release x86)\n* override version code : [6] -> [64] (free release armeabi-v7a)\n```\n\n\u3053\u308c\u3092\u666e\u901a\u306bAndroidStudio\u304b\u3089\u5b9f\u884c\u3059\u308b\u3068 VersionCode=64 \u306e\u307b\u3046\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001InstantRun \u3092\u6709\u52b9\u306b\u3057\u3066\u5b9f\u884c\u3059\u308b\u3068 VersionCode=64 \u306e\u307b\u3046\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3057\u307e\u3044\u3001\u518d\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3092\u4fc3\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n![](https://i.gyazo.com/8a7c01019f2c9608df42d9d0325e081a.png)\n\n\u8272\u3005\u8abf\u3079\u305f\u3068\u3053\u308d\u3001fabric \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u3053\u306e\u73fe\u8c61\u304c\u767a\u751f\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n```groovy\nclasspath 'io.fabric.tools:gradle:1.21.7'\n```\n\n\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u3053\u308c\u3092\u89e3\u6d88\u3059\u308b\u305f\u3081\u306b debug \u7248\u3067\u306f \u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u306e\u4e0b\u4e00\u6841\u3092 0 \u306b\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```groovy:app/build.gradle\n...\n    // \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u6bce\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3059\u308b\n    applicationVariants.all { variant ->\n        // assign different version code for each output\n        variant.outputs.each { output ->\n            def flavorName = variant.productFlavors[0].name\n            def buildTypeName = variant.buildType.name\n\n            def arch = output.getFilter(com.android.build.OutputFile.ABI)\n            def versionCode1 = rootProject.ext.versionCodes.get(arch)\n            if (buildTypeName == \"debug\") {\n                // InstantRun \u3092\u6709\u52b9\u306b\u3059\u308b\u3068 fabric \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5f71\u97ff\u3067 ABI \u304c \"x86\" \u306b\u306a\u3063\u3066\u3057\u307e\u3044\u3001\n                // InstantRun \u306e\u6709\u52b9/\u7121\u52b9\u3067\u30d0\u30fc\u30b8\u30e7\u30f3\u30b3\u30fc\u30c9\u304c\u5909\u5316\u3057\u3066\u3057\u307e\u3046\u3002\u3053\u308c\u3092\u9632\u3050\u305f\u3081\u30c7\u30d0\u30c3\u30b0\u6642\u306f \"0\" \u306b\u3059\u308b\u3002\n                versionCode1 = 0;\n            }\n            output.versionCodeOverride = android.defaultConfig.versionCode * 10 + versionCode1\n\n            System.println(\"* override version code : [${android.defaultConfig.versionCode}] -> [${output.versionCodeOverride}] (${flavorName} ${buildTypeName} ${arch})\")\n        }\n    }\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u308f\u3063\u3066\u3044\u308b\u306e\u3067\u5927\u4e08\u592b\u305d\u3046\u3067\u3059\u3002\n\n```\n* override version code : [6] -> [60] (premium debug x86)\n* override version code : [6] -> [60] (premium debug armeabi-v7a)\n* override version code : [6] -> [62] (premium release x86)\n* override version code : [6] -> [64] (premium release armeabi-v7a)\n* override version code : [6] -> [60] (free debug x86)\n* override version code : [6] -> [60] (free debug armeabi-v7a)\n* override version code : [6] -> [62] (free release x86)\n* override version code : [6] -> [64] (free release armeabi-v7a)\n```\n\n", "tags": ["Android", "fabric", "InstantRun"]}