{"context": " More than 1 year has passed since last update.\n\n\u53c2\u8003\n\nGet started with multi-host networking\n\n\n\u69cb\u6210\u56f3\n\n\n\u624b\u9806\n\nConsul\u30b5\u30fc\u30d0\u4f5c\u6210\n\n\u4eee\u60f3\u30db\u30b9\u30c8\u300cmh-keystore\u300d\u4f5c\u6210\n\n\u4eee\u60f3\u30db\u30b9\u30c8\u300cmh-keystore\u300d\u4f5c\u6210\ndocker-machine create -d virtualbox mh-keystore\n\n\n\n\u300cmh-keystore\u300d\u4e0a\u306bconsul\u30b5\u30fc\u30d0\u30b3\u30f3\u30c6\u30ca\u4f5c\u6210\ndocker $(docker-machine config mh-keystore) run -d \\\n    -p \"8500:8500\" \\\n    -h \"consul\" \\\n    progrium/consul -server -bootstrap\n\n\n\n8500port\u3067\u5f85\u3061\u53d7\u3051\n\n\n\u4eee\u60f3\u30db\u30b9\u30c8\u300cmhs-demo0\u300d\u4f5c\u6210\ndocker-machine create \\\n  -d virtualbox \\\n  --swarm --swarm-image=\"swarm\" --swarm-master \\\n  --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n  --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n  --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  mhs-demo0\n\n\n\u4eee\u60f3\u30db\u30b9\u30c8\u300cmhs-demo1\u300d\u4f5c\u6210\ndocker-machine create -d virtualbox \\\n    --swarm --swarm-image=\"swarm:1.0.0-rc2\" \\\n    --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  mhs-demo1\n\n\u3053\u306e\u6642\u70b9\u3067Virutalbox\u306e\u72b6\u614b\u306f\u4ee5\u4e0b\n\n\ndocker network\n\nswarm\u4e0a\u306boverlay network\u300cmy-net\u300d\u4f5c\u6210\neval $(docker-machine env --swarm mhs-demo0)\ndocker network create --driver overlay my-net\n\n\nmhs-demo0\u4e0a\u3067nginx\u30b3\u30f3\u30c6\u30ca\u4f5c\u6210\u3001\u300cmy-net\u300d\u306b\u53c2\u52a0\neval $(docker-machine env mhs-demo0)\ndocker run -itd --name=web --net=my-net --env=\"constraint:node==mhs-demo0\" nginx\n\n\n\u5225\u30db\u30b9\u30c8\u3067\u3001\u300cmy-net\u300d\u7d4c\u7531\u3067nginx\u30b3\u30f3\u30c6\u30ca\u306b\u30a2\u30af\u30bb\u30b9\neval $(docker-machine env mhs-demo1)\ndocker run -it --rm --net=my-net --env=\"constraint:node==mhs-demo1\" busybox wget -O- http://web\n\n\n\u30a2\u30af\u30bb\u30b9\u3067\u304d\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\n\n\u5168\u30db\u30b9\u30c8\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u304b\u3089\u518d\u5ea6\u8d77\u52d5\u306e\u624b\u9806\n\nmy-net\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081 mhs-demo0 -> web\u3092\u8d77\u52d5\u3067\u304d\u306a\u3044\u3002\n\n\nmh-keystore\u4e0a\u306e cunsul\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\n\nmhs-demo0 -> web\u3092\u8d77\u52d5\n\neval \"$(docker-machine env mh-keystore)\"\ndocker ps -a\ndocker start `\u30b3\u30f3\u30c6\u30caID`\n\neval $(docker-machine env --swarm mhs-demo0)\ndocker start web\n\neval $(docker-machine env --swarm mhs-demo1)\ndocker run -it --rm --net=my-net --env=\"constraint:node==mhs-demo1\" busybox wget web -O-\n\n## \u53c2\u8003\n\n* [Get started with multi-host networking](http://docs.docker.com/engine/userguide/networking/get-started-overlay/)\n\n## \u69cb\u6210\u56f3\n\n![docker-swarm.png](https://qiita-image-store.s3.amazonaws.com/0/25728/05cb8556-e9af-fc11-1e01-19d1b6929b00.png)\n\n# \u624b\u9806\n\n## Consul\u30b5\u30fc\u30d0\u4f5c\u6210\n\n### \u4eee\u60f3\u30db\u30b9\u30c8\u300cmh-keystore\u300d\u4f5c\u6210\n\n```bash:\u4eee\u60f3\u30db\u30b9\u30c8\u300cmh-keystore\u300d\u4f5c\u6210\ndocker-machine create -d virtualbox mh-keystore\n```\n\n```bash:\u300cmh-keystore\u300d\u4e0a\u306bconsul\u30b5\u30fc\u30d0\u30b3\u30f3\u30c6\u30ca\u4f5c\u6210\ndocker $(docker-machine config mh-keystore) run -d \\\n    -p \"8500:8500\" \\\n    -h \"consul\" \\\n    progrium/consul -server -bootstrap\n```\n\n* 8500port\u3067\u5f85\u3061\u53d7\u3051\n\n\n### \u4eee\u60f3\u30db\u30b9\u30c8\u300cmhs-demo0\u300d\u4f5c\u6210\n\n```bash:\ndocker-machine create \\\n  -d virtualbox \\\n  --swarm --swarm-image=\"swarm\" --swarm-master \\\n  --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n  --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n  --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  mhs-demo0\n```\n\n### \u4eee\u60f3\u30db\u30b9\u30c8\u300cmhs-demo1\u300d\u4f5c\u6210\n\n```bash:\ndocker-machine create -d virtualbox \\\n    --swarm --swarm-image=\"swarm:1.0.0-rc2\" \\\n    --swarm-discovery=\"consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-store=consul://$(docker-machine ip mh-keystore):8500\" \\\n    --engine-opt=\"cluster-advertise=eth1:2376\" \\\n  mhs-demo1\n```\n\n\n\u3053\u306e\u6642\u70b9\u3067Virutalbox\u306e\u72b6\u614b\u306f\u4ee5\u4e0b\n\n\n![virtualbox.png](https://qiita-image-store.s3.amazonaws.com/0/25728/db8a85cd-ad2e-1b9f-2160-870cb0fd4f60.png)\n\n\n# docker network\n\n## swarm\u4e0a\u306boverlay network\u300cmy-net\u300d\u4f5c\u6210\n\n```bash:\neval $(docker-machine env --swarm mhs-demo0)\ndocker network create --driver overlay my-net\n```\n\n## mhs-demo0\u4e0a\u3067nginx\u30b3\u30f3\u30c6\u30ca\u4f5c\u6210\u3001\u300cmy-net\u300d\u306b\u53c2\u52a0\n\n```bash:\neval $(docker-machine env mhs-demo0)\ndocker run -itd --name=web --net=my-net --env=\"constraint:node==mhs-demo0\" nginx\n```\n\n\n## \u5225\u30db\u30b9\u30c8\u3067\u3001\u300cmy-net\u300d\u7d4c\u7531\u3067nginx\u30b3\u30f3\u30c6\u30ca\u306b\u30a2\u30af\u30bb\u30b9\n\n```bash:\neval $(docker-machine env mhs-demo1)\ndocker run -it --rm --net=my-net --env=\"constraint:node==mhs-demo1\" busybox wget -O- http://web\n```\n\n* \u30a2\u30af\u30bb\u30b9\u3067\u304d\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n---------------\n\n# \u5168\u30db\u30b9\u30c8\u30b7\u30e3\u30c3\u30c8\u30c0\u30a6\u30f3\u3057\u3066\u304b\u3089\u518d\u5ea6\u8d77\u52d5\u306e\u624b\u9806\n\n* my-net\u304c\u5b58\u5728\u3057\u306a\u3044\u305f\u3081 mhs-demo0 -> web\u3092\u8d77\u52d5\u3067\u304d\u306a\u3044\u3002\n    * mh-keystore\u4e0a\u306e cunsul\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n* mhs-demo0 -> web\u3092\u8d77\u52d5\n\n```bash:\neval \"$(docker-machine env mh-keystore)\"\ndocker ps -a\ndocker start `\u30b3\u30f3\u30c6\u30caID`\n\neval $(docker-machine env --swarm mhs-demo0)\ndocker start web\n\neval $(docker-machine env --swarm mhs-demo1)\ndocker run -it --rm --net=my-net --env=\"constraint:node==mhs-demo1\" busybox wget web -O-\n```\n", "tags": ["DockerSwarm", "docker1.9"]}