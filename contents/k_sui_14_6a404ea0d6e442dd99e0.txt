{"context": "\n\n0. \u306f\u3058\u3081\u306b\n\u524d\u56de(\u305d\u306e\u2462 \u96d1\u30b3\u30e9\u52d5\u753b\u4f5c\u6210)\u3067\u96d1\u30b3\u30e9\u52d5\u753b\u3092\u4f5c\u6210\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u307e\u3060\u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u304a\u304a\u3088\u305d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\nA. \u8907\u6570\u306e\u4eba\u7269\u304c\u3044\u308b\u5834\u5408\u3001\u5168\u54e1\u306e\u9854\u306b\u30aa\u30fc\u30d0\u30ec\u30a4\u3059\u308b(\u7279\u5b9a\u306e\u4eba\u7269\u3060\u3051\u3092\u9078\u3079\u306a\u3044)\nB. \u9854\u3067\u306a\u3044\u3082\u306e\u3092\u8aa4\u8a8d\u8b58\u3057\u3066\u3057\u307e\u3046(\u8a8d\u8b58\u7cbe\u5ea6)\nC. \u9854\u3092\u8a8d\u8b58\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b(\u8a8d\u8b58\u7cbe\u5ea6)\n\u3053\u308c\u3089\u306e\u89e3\u6c7a\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n1. \u65b9\u91dd\n\u307e\u305a\u3001A\u3001B\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u4eca\u56de\u306e\u96d1\u30b3\u30e9\u4f5c\u6210\u306e\u76ee\u7684\u306f\u300c\u7279\u5b9a\u306e\u4eba\u7269\u306e\u9854\u3060\u3051\u306b\u5225\u306e\u4eba\u306e\u9854\u3092\u4e0a\u66f8\u304d\u3059\u308b\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u8a8d\u8b58\u3057\u305f\u9854\u304b\u3089\u7279\u5b9a\u306e\u4eba\u7269\u3092\u81ea\u52d5\u7684\u306b\u9078\u3076\u3053\u3068\u306f\u7121\u7406\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u306f\u4eba\u306e\u624b\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3084\u308a\u65b9\u306f\u3001\n\u30fb\u8a8d\u8b58\u3057\u305f\u9854\u306bID\u3092\u632f\u3063\u3066\u52d5\u753b\u51fa\u529b\n\u30fb\u76ee\u8996\u3067\u4e0a\u66f8\u304d\u3057\u305f\u3044\u9854\u306eID\u3092\u78ba\u8a8d\n\u30fb\u305d\u306eID\u3092\u5165\u529b\u3059\u308b\n\u3068\u3044\u3046\u65b9\u6cd5\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u5358\u7d14\u306b\u898b\u3064\u304b\u3063\u305f\u9854\u5168\u3066\u306bID\u3092\u632f\u3063\u3066\u3044\u3066\u306f\u5165\u529b\u3059\u308bID\u306e\u6570\u304c\u975e\u5e38\u306b\u591a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\n\u3053\u3061\u3089\u306fC\u306e\u89e3\u6c7a\u3068\u5408\u308f\u305b\u3066\u5bfe\u5fdc\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nID\u306e\u6570\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001\u524d\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u3067\u4f4d\u7f6e\u3084\u5927\u304d\u3055\u304b\u3089\u9023\u7d9a\u3057\u305f\u9854\u3067\u3042\u308b\u304b\u3092\u5224\u65ad\u3057\u3001\u9023\u7d9a\u3057\u3066\u3044\u308c\u3070\u540c\u3058ID\u3092\u632f\u308a\u307e\u3059\u3002\n\u66f4\u306bX\u2192Y\u2192Z\u3068\u7d9a\u304f\u30d5\u30ec\u30fc\u30e0\u3067\u3001X\u3068Z\u3067\u306f\u9854\u304c\u8a8d\u8b58\u3055\u308c\u305f\u304c\u3001Y\u3067\u306f\u305d\u306e\u9854\u304c\u8a8d\u8b58\u304c\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Y\u306b\u3082\u305d\u306e\u9854\u304c\u3042\u308b\u3068\u3057\u3066\u88dc\u5b8c\u3057\u307e\u3059\u3002\n\n2. \u30af\u30e9\u30b9\u5b9f\u88c5(FacePostion\u3001FaceFrame)\n\u5b9f\u88c5\u306e\u305f\u3081\u306b\u4eca\u56de\u306f\u521d\u3081\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u30af\u30e9\u30b9\u306f\u5168\u3066frame_manager.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001FacePosition\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u3068\u8a00\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u9854\u306e\u5ea7\u6a19\u3001ID\u3092\u4fdd\u6301\u3059\u308b\u305f\u3060\u306e\u69cb\u9020\u4f53\u3067\u3059\u3002\n\nframe_manager.py(FacePosition)\nclass FacePosition:\n    '''\n    \u9854\u306e\u4f4d\u7f6e\u3068ID\u3092\u30bb\u30c3\u30c8\u3067\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\n    ID\u3068\u5ea7\u6a19\u3092\u9854\u306e\u5ea7\u6a19\u30fb\u30b5\u30a4\u30ba\u3092\u6301\u3064\u305f\u3060\u306e\u69cb\u9020\u4f53\n    '''\n\n    def __init__(self, id, coordinate):\n        self.id = id\n        self.coordinate = coordinate\n\n\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u9854\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\u6b21\u306b\u3001\u30d5\u30ec\u30fc\u30e0\u3068\u305d\u3053\u306b\u5b58\u5728\u3059\u308b\u9854\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9FaceFrame\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19(\u8907\u6570\u53ef)\u3092\u6e21\u3059\u3068\u3001\u9854\u306b\u521d\u671fID\u3092\u632f\u3063\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\u521d\u671fID\u304c\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306bStatic\u30a2\u30af\u30bb\u30b9\u7528\u306e\u5909\u6570\u3067\u3044\u307e\u307e\u3067\u5272\u308a\u632f\u3063\u305fID\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\n\nframe_manager.py(FaceFrame)\nclass FaceFrame:\n    '''\n    \u5404\u30d5\u30ec\u30fc\u30e0\u3067\u8a8d\u8b58\u3057\u305f\u9854\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\n    faceCount\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067ID\u304c\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u4f7f\u3063\u305fID\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306e\u5909\u6570\u306a\u306e\u3067\u3001\n    \u4f7f\u3046\u3068\u304d\u306f\u5fc5\u305aFaceFrame.faceCount\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\n    '''\n\n    faceCount = 0\n\n    def __init__(self, frame, coordinates):\n\n        '''\n        \u30d5\u30ec\u30fc\u30e0\u3068\u8a8d\u8b58\u3057\u305f\u9854\u306e\u5ea7\u6a19\u30fb\u30b5\u30a4\u30ba\u3092\u6e21\u3059\u3002\n        \u9854\u306e\u6570\u5206\u3060\u3051FacePoint\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n        coodinates: \u9854\u8a8d\u8b58\u7d50\u679c\u306e\u914d\u5217\u3002cascade.detectMultiScale\u306e\u7d50\u679c\u3092\u305d\u306e\u307e\u307e\u6e21\u3059\n        '''\n\n        # \u9854\u306e\u6570\u5206\u914d\u5217\u3092\u78ba\u4fdd\n        self.faces = [None]*len(coordinates)\n        self.frame = frame\n\n        # \u6e21\u3055\u308c\u305f\u9854\u305d\u308c\u305e\u308c\u306bid\u3092\u5272\u308a\u632f\u308a\u3001FacePosition\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n        for i in range(0, len(coordinates)):\n            self.faces[i] = FacePosition(FaceFrame.faceCount, coordinates[i])\n            FaceFrame.faceCount += 1\n\n    # \u30d5\u30ec\u30fc\u30e0\u5185\u306e\u9854\u3092\u5f8c\u304b\u3089\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\n    def append(self, faceId, coordinate):\n        self.faces.append(FacePosition(faceId, coordinate))\n\n\n\u3053\u308c\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5bfe\u5fdc\u3092\u4fdd\u6301\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n3. \u30af\u30e9\u30b9\u5b9f\u88c5(FrameManager)\n\u809d\u306e\u90e8\u5206\u3067\u3042\u308bFrameManager\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u5916\u304b\u3089\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u50cd\u304d\u3092\u3057\u307e\u3059\u3002\n\u25a0\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19\u60c5\u5831\u3092\u6e21\u3059\u3068\u3001ID\u306e\u5272\u308a\u632f\u308a\u3001\u8a8d\u8b58\u5931\u6557\u306e\u88dc\u5b8c\u3092\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u60c5\u5831(FaceFrame)\u3092\u8fd4\u3059\u3002\n\u305d\u306e\u305f\u3081\u306b\u3001\u53d7\u3051\u53d6\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u3092\u4e00\u65e6\u914d\u5217\u306b\u4fdd\u6301\u3057\u3001ID\u306e\u5272\u308a\u632f\u308a\u3001\u88dc\u5b8c\u304c\u7d42\u308f\u3063\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u914d\u5217\u306e\u9577\u3055\u306fLIST_SIZE\u3092\u5909\u3048\u308c\u3070\u5909\u66f4\u53ef\u80fd\u3067\u3059\u304c\u3053\u3053\u3067\u306f5\u3067\u3059\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30fb\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19\u60c5\u5831(\u8907\u6570\u53ef)\u3092\u53d7\u3051\u53d6\u308b\n\u30fb\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002\u3053\u306e\u6642\u3001\u914d\u5217\u5185\u306e\u6700\u3082\u53e4\u3044\u8981\u7d20\u304c\u8fd4\u308a\u5024\u3068\u306a\u308b\n(\u30fb\u914d\u5217\u306e\u771f\u3093\u4e2d\u306e\u30d5\u30ec\u30fc\u30e0(frameC)\u3092\u5883\u306b\u3001\u524d\u306e\u30d5\u30ec\u30fc\u30e0(frameFs)\u3068\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0(frameBs)\u3067\u5206\u3051\u308b)\n\u30fbframeF\u3068frameC\u306e\u9854\u306e\u4f4d\u7f6e\u3001\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3057\u3001\u9023\u7d9a\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3057\u305f\u3089\u540c\u3058ID\u3092\u632f\u308b\n\u30fbframeF\u3068frameB\u3092\u6bd4\u8f03\u3057\u3001\u9023\u7d9a\u3057\u305f\u9854\u304c\u3042\u308b\u304c\u3001\u305d\u308c\u304cframeC\u306b\u5b58\u5728\u3057\u306a\u3044\u306a\u3089\u3001\u305d\u308c\u3092frameC\u306b\u88dc\u5b8c\u3059\u308b\u3002\n\u30fbframeFs\u3068frameBs\u306e\u7d44\u307f\u5408\u308f\u305b\u5206\u7e70\u308a\u8fd4\u3059\u3002\n\u9854\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u3053\u3068\u306e\u5224\u5b9a\u306e\u969b\u306e\u8a31\u5bb9\u8aa4\u5dee\u306fALLOWED_GAP\u3067\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f5%\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n(frameF\u3068frameB\u306b\u306f\u8907\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u304c\u3042\u308b\u305f\u3081\u3001s\u306e\u6709\u7121\u3067\u500b\u5225\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3001\u30d5\u30ec\u30fc\u30e0\u7fa4\u5168\u4f53\u304b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002)\n\u4ee5\u4e0b\u304c\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\nframe_manager.py(FrameManager)\nclass FrameManager:\n\n    '''\n    \u6e21\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u8a8d\u8b58\u7d50\u679c\u3092\u5143\u306b\u9854\u306e\u9023\u7d9a\u6027\u3068\u629c\u3051\u305f\u9854\u306e\u88dc\u5b8c\u3092\u884c\u3046\u30af\u30e9\u30b9\n    \u9023\u7d9a\u3057\u3066\u3044\u308b\u9854\u306b\u306f\u540c\u3058ID\u3092\u5272\u308a\u632f\u308b\u3002\n    '''\n    #\u3044\u304f\u3064\u306eFaceFrame\u3092\u5143\u306b\u9854\u306e\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\u304b\u3092\u6307\u5b9a\n    LIST_SIZE = 5\n    CENTER_INDEX = int(LIST_SIZE/2)\n    # \u30d5\u30ec\u30fc\u30e0\u9593\u306e\u9854\u304c\u540c\u3058\u9854\u3067\u3042\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u969b\u306e\u3001\u4f4d\u7f6e\u3001\u30b5\u30a4\u30ba\u306e\u5dee\u3092\u3069\u3053\u307e\u3067\u8a8d\u3081\u308b\u304b\u3002%\u3067\u6307\u5b9a\n    ALLOWED_GAP = 5\n\n    def __init__(self, height, width):\n        '''\n        \u6271\u3046\u52d5\u753b\u306e\u9ad8\u3055\u3001\u5e45\u3092\u6307\u5b9a\u3059\u308b\n        '''\n        FrameManager.FRAME_HEIGHT = height\n        FrameManager.FRAME_WIDTH = width\n\n        self.__frames = [None]*self.LIST_SIZE\n\n\n    def put(self, frame, coordinates):\n        '''\n        \u6e21\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u8a8d\u8b58\u7d50\u679c\u3092\u5143\u306b\u30d5\u30ec\u30fc\u30e0\u3092\u8ffd\u52a0\u3059\u308b\n        \u8ffd\u52a0\u6642\u306bID\u306e\u5272\u308a\u632f\u308a\u3001\u9023\u7d9a\u6027\u78ba\u8a8d\u3001\u629c\u3051\u305f\u9854\u306e\u88dc\u5b8c\u3092\u3057\u3001LIST_SIZE\u756a\u76ee\u306eFaceFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\n        \u7d42\u4e86\u6642\u306e\u51e6\u7406\u3068\u3057\u3066\u3001\u5168\u3066\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u51e6\u7406\u3057\u7d42\u3048\u305f\u5f8c\u3001LIST_SIZE\u500b\u306e\u30d5\u30ec\u30fc\u30e0\u304cFrameManager\u5185\u306b\u6b8b\u308b\u306e\u3067\u3001\u6b8b\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u3092\u51fa\u3057\u7d42\u3048\u308b\u307e\u3067\u3001None\u3092\u8ffd\u52a0\u3057\u7d9a\u3051\u308b\u3053\u3068\u3002\n\n        return: FaceFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\u4f46\u3057\u3001LIST_SIZE\u756a\u76ee\u306bFaceFrame\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u306a\u3044\u5834\u5408\u306fNone\u3092\u8fd4\u3059\u3002\n        '''\n        # \u6700\u5f8c\u306b\u6b8b\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u51fa\u529b\u3059\u308b\u3068\u304d\u306bNone\u304c\u6e21\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3042faceFrame\u3082None\u3068\u3059\u308b\u3002\n        if frame is None:\n            faceFrame = None\n        else:\n            faceFrame = FaceFrame(frame, coordinates)\n\n        # \u30ea\u30b9\u30c8\u30921\u3064\u3065\u3064\u524d\u306b\u305a\u3089\u3057\u3001\u6700\u5f8c\u5c3e\u306b\u5f15\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u8ffd\u52a0\u3059\u308b\u3002\u5185\u90e8\u51e6\u7406\u306b\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u304c\u591a\u3044\u306e\u3067\u914d\u5217\u3067\u7ba1\u7406\u3059\u308b\u65b9\u304c\u671b\u307e\u3057\u3044\u3068\u601d\u3046\u3002\n        returnFrame = self.__frames[0]\n        for i in range(0,len(self.__frames)-1):\n            self.__frames[i] = self.__frames[i+1]\n        self.__frames[FrameManager.LIST_SIZE-1] = faceFrame\n\n        # \u524d\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\n        # CENTER_INDEX\u3092\u5883\u306b\u305d\u306e\u524d(i)\u5f8c(j)\u305d\u308c\u305e\u308c\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u9854\u306e\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\n        for i in range(0, FrameManager.CENTER_INDEX):\n            for j in range(FrameManager.CENTER_INDEX+1, FrameManager.LIST_SIZE):\n                # None\u306e\u90e8\u5206\u306f\u98db\u3070\u3059\n                if self.__frames[i] is not None and self.__frames[FrameManager.CENTER_INDEX] is not None and self.__frames[j] is not None:\n\n                    # \u9593\u306b\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u5168\u3066\u306b\u9023\u7d9a\u6027\u78ba\u8a8d\u3001\u88dc\u5b8c\u3092\u884c\u3046\n                    for k in range(i+1, j):\n                        self.connectFrame(self.__frames[i], self.__frames[k], self.__frames[j])\n\n        return returnFrame\n\n\n    def connectFrame(self, frameF, frameC, frameB):               \n        # frameF.faces\u3068frameC.faces\u3067\u9023\u7d9a\u3057\u3066\u3044\u308b\u9854\u304c\u3042\u308c\u3070\u540c\u3058id\u3092\u632f\u308b\u3002\u3000\n        # TODO \u540c\u3058id\u304c\u8907\u6570\u306e\u9854\u306b\u632f\u3089\u308c\u3046\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u305d\u3082\u305d\u3082\u3053\u306e\u5834\u5408\u3060\u3068\u4eca\u306e\u8a2d\u8a08\u3067\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u4e00\u65e6\u4fdd\u7559\u3002\n        frontFaceNum = len(frameF.faces)\n        centerFaceNum = len(frameC.faces)\n        backFaceNum = len(frameB.faces)\n        for i in range(0, frontFaceNum):\n            # \u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u4e2d\u306ei\u756a\u76ee\u306e\u9854\u304cframeC\u306e\u9854\u306e\u4e2d\u306e\u3069\u308c\u304b\u3068\u5408\u81f4\u3057\u305f\u304b\u3092\u4fdd\u6301\n            matched = False\n            for j in range(0, centerFaceNum):\n                # \u540c\u3058\u9854\u3068\u5224\u65ad\u3057\u305f\u3089\u540c\u3058ID\u306b\u3059\u308b\n                if self.compare(frameF.faces[i], frameC.faces[j]) == True:\n                    frameC.faces[j].id = frameF.faces[i].id\n                    matched = True\n                    break\n\n            # frameC\u306b\u7121\u304f\u3066\u3082frameF\u3068frameB\u306e\u4e21\u65b9\u306b\u3042\u308b\u5834\u5408\u306f\u9593\u306eframC\u306b\u3082\u305d\u306e\u9854\u304c\u3042\u308b\u3068\u307f\u306a\u3057\u3066\u88dc\u5b8c\u3059\u308b\u3002\n            if matched == False:\n                for k in range(0, backFaceNum):\n                    if self.compare(frameF.faces[i], frameB.faces[k]):\n                        # frameF\u3068frameB\u306e\u4e2d\u9593\u306e\u4f4d\u7f6e\u30fb\u30b5\u30a4\u30ba\u306b\u9854\u3092\u8ffd\u52a0\u3059\u308b\n                        frameC.append(frameF.faces[i].id, ((frameF.faces[i].coordinate + frameB.faces[k].coordinate)/2).astype(np.int))\n                        # \u9854\u306e\u6570\u30921\u5897\u3084\u3059\u3002(\u3042\u3068\u306e\u51e6\u7406\u3067\u3082\u30461\u3064\u9854\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306e\u305f\u3081)\n                        centerFaceNum += 1\n\n                        # \u7121\u9650\u30eb\u30fc\u30d7\u9632\u6b62\n                        if(centerFaceNum>10):\n                            break\n\n\n    def compare(self, face1, face2):\n        '''\n        face1\u3001face2\u304c\u9023\u7d9a\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u304b\u6bd4\u8f03\u3059\u308b\u3002\n        return: \u540c\u3058\u306a\u3089True\u3001\u9055\u3048\u3070False\n        '''\n        result = True\n        # \u5ea7\u6a19\u3001\u9854\u306e\u30b5\u30a4\u30ba\u306e\u9055\u3044\u304c\u8aa4\u5dee\u306e\u7bc4\u56f2\u306b\u53ce\u307e\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3001\u5168\u3066\u8aa4\u5dee(ALLOWED_GAP)\u5185\u3067\u3042\u308c\u3070\u540c\u3058\u9854\u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\n        # TODO \u30d5\u30ec\u30fc\u30e0\u9593\u304c\u96e2\u308c\u3066\u3044\u308b\u306a\u3089\u305d\u306e\u5206\u8a31\u5bb9\u8aa4\u5dee\u3082\u5927\u304d\u304f\u3057\u305f\u307b\u3046\u304c\u826f\u3044\n        for i in range(0,4):\n            if i%2 == 0:\n                gap = ((float(face1.coordinate[i])-float(face2.coordinate[i]))/FrameManager.FRAME_HEIGHT)*100\n            else:\n                gap = ((float(face1.coordinate[i])-float(face2.coordinate[i]))/FrameManager.FRAME_WIDTH)*100\n            if (-1*FrameManager.ALLOWED_GAP < gap < FrameManager.ALLOWED_GAP) == False:\n                result = False\n                break\n        return result\n\n\n\u3053\u308c\u3067\u4f7f\u3046\u4e0a\u3067\u306fFrameManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u60c5\u5831\u3092\u5165\u308c\u308c\u3070\u3001\nID\u3092\u632f\u3063\u305fFaceFrame\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u306a\u304a\u3001\u898b\u76f4\u3057\u3066\u307f\u308b\u3068ID\u306e\u9023\u7d9a\u6027\u3092\u540c\u3058\u30d5\u30ec\u30fc\u30e0\u9593\u3067\u8907\u6570\u56de\u78ba\u8a8d\u3057\u3066\u3057\u307e\u3044\u3001\u5197\u9577\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u304c\u3001\u5f8c\u8ff0\u3059\u308b\u7406\u7531\u306b\u3088\u308a\u76ee\u3092\u3064\u3076\u308a\u307e\u3059\u3002\n\n4. FrameManager\u306e\u7d44\u307f\u8fbc\u307f\n\u524d\u56de\u4f5c\u6210\u3057\u305foverlay_movie.py\u306b\u4f5c\u6210\u3057\u305fFrameManager\u30af\u30e9\u30b9\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u9854\u8a8d\u8b58\u3057\u305f\u5f8c\u3001\u307e\u305a\u8a8d\u8b58\u3057\u305f\u9854\u3092FrameManager\u306b\u5165\u308c\u3001\u51fa\u529b\u3055\u308c\u305fFaceFrame\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5143\u306b\u3001\u898b\u3064\u304b\u3063\u305f\u9854\u306bID\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\noverlay_movie2.py\n# -*- coding:utf-8 -*-\n\nimport cv2\nimport datetime\nimport numpy as np\nfrom PIL import Image\n\nimport frame_manager\n\ndef overlay_movie2():\n\n    # \u5165\u529b\u3059\u308b\u52d5\u753b\u3068\u51fa\u529b\u30d1\u30b9\u3092\u6307\u5b9a\u3002\n    target = \"target/test_input.mp4\"\n    result = \"result/test_output2.m4v\"  #.m4v\u306b\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\n\n    # \u52d5\u753b\u306e\u8aad\u307f\u8fbc\u307f\u3068\u52d5\u753b\u60c5\u5831\u306e\u53d6\u5f97\n    movie = cv2.VideoCapture(target) \n    fps    = movie.get(cv2.CAP_PROP_FPS)\n    height = movie.get(cv2.CAP_PROP_FRAME_HEIGHT)\n    width  = movie.get(cv2.CAP_PROP_FRAME_WIDTH)\n\n    # \u5f62\u5f0f\u306fMP4V\u3092\u6307\u5b9a\n    fourcc = cv2.VideoWriter_fourcc('m', 'p', '4', 'v')\n\n    # \u51fa\u529b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n    out = cv2.VideoWriter(result, int(fourcc), fps, (int(width), int(height)))\n\n    # \u30ab\u30b9\u30b1\u30fc\u30c9\u5206\u985e\u5668\u306e\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\u3059\u308b\n    cascade_path = \"haarcascades/haarcascade_frontalface_alt.xml\"\n    cascade = cv2.CascadeClassifier(cascade_path)\n\n    # FrameManager\u306e\u4f5c\u6210\n    frameManager = frame_manager.FrameManager(height, width)\n\n    #\u3000\u8a8d\u8b58\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u306e\u8272\u3092\u6307\u5b9a\u3002\u3053\u3053\u3067\u306f\u767d\u3002\n    color = (255, 255, 255) \n\n    # \u6700\u521d\u306e1\u30d5\u30ec\u30fc\u30e0\u3092\u8aad\u307f\u8fbc\u3080\n    if movie.isOpened() == True:\n        ret,frame = movie.read()\n    else:\n        ret = False\n\n    count = 0\n\n    # \u30d5\u30ec\u30fc\u30e0\u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u9593\u30d5\u30ec\u30fc\u30e0\u3092\u66f8\u304d\u51fa\u3057\u7d9a\u3051\u308b\n    while ret:\n\n        # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n        frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n        # \u9854\u8a8d\u8b58\u306e\u5b9f\u884c\n        facerecog = cascade.detectMultiScale(frame_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\n\n        # \u8a8d\u8b58\u3057\u305f\u9854\u3092FrameManager\u306b\u5165\u308c\u308b\n        managedFrame = frameManager.put(frame, facerecog)\n\n        # 5\u56de\u3081\u4ee5\u964d\u306fFrameManager\u304b\u3089\u30d5\u30ec\u30fc\u30e0\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\n        if managedFrame is not None:\n\n            # \u8a8d\u8b58\u3057\u305f\u9854\u306b\u756a\u53f7\u3092\u66f8\u304d\u52a0\u3048\u308b\n            for i in range(0,len(managedFrame.faces)):\n\n                # \u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u5909\u6570\u3092\u7528\u610f\n                tmpCoord = managedFrame.faces[i].coordinate\n                tmpId = managedFrame.faces[i].id\n\n                print(\"\u8a8d\u8b58\u3057\u305f\u9854\u306e\u6570(ID) = \"+str(tmpId))\n\n                # \u77e9\u5f62\u3067\u56f2\u3080\n                cv2.rectangle(managedFrame.frame, tuple(tmpCoord[0:2]),tuple(tmpCoord[0:2]+tmpCoord[2:4]), color, thickness=2)\n\n                # \u9854\u306eID\u3092\u66f8\u304d\u8fbc\u307f\n                cv2.putText(managedFrame.frame,str(tmpId),(tmpCoord[0],tmpCoord[1]),cv2.FONT_HERSHEY_TRIPLEX, 2, (100,200,255), thickness=2)\n\n            out.write(managedFrame.frame)\n        if count%10 == 0:\n            date = datetime.datetime.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            print(date + '\u73fe\u5728\u30d5\u30ec\u30fc\u30e0\u6570\uff1a'+str(count))\n\n        count += 1\n        ret,frame = movie.read()\n\n        # \u9014\u4e2d\u7d42\u4e86\n        if count > 200 :\n            break\n\n    print(\"\u51fa\u529b\u30d5\u30ec\u30fc\u30e0\u6570\uff1a\"+str(count))\n\n\nif __name__ == '__main__':\n    overlay_movie2()\n\n\n\n5. \u7d50\u679c\n\u7121\u4e8b\u306b\u9854\u306bID\u3092\u5272\u308a\u632f\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n\n\u8907\u6570\u4eba\u304b\u3089\u7279\u5b9a\u306e\u4eba\u3092ID\u3067\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u307e\u305f\u3001\u9023\u7d9a\u3057\u305f\u9854\u306f1\u3064\u306eID\u3067\u7279\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n6. \u6700\u5f8c\u306b\n\u5f8c\u306f\u4e0a\u66f8\u304d\u3057\u305f\u3044\u9854\u306eID\u3092\u5165\u529b\u3057\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u305f\u9854\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3001\n\u3068\u8a00\u3044\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u4f5c\u3063\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u76ee\u7684\u3092\u679c\u305f\u305b\u307e\u305b\u3093\u3002\n\u8a8d\u8b58\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u52d5\u753b\u5185\u306e\u9854\u306e\u8a8d\u8b58\u7cbe\u5ea6\u304c\u60aa\u304f\u3001\u9593\u3092\u88dc\u5b8c\u3057\u3066\u3082\u5bfe\u5fdc\u3057\u304d\u308c\u306a\u3044\u306e\u3067\u3059\u3002\n(\u8584\u3005\u611f\u3058\u3064\u3064\u3082\u76ee\u3092\u9038\u3089\u3057\u3066\u3044\u307e\u3057\u305f)\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u304a\u8535\u5165\u308a\u3068\u3057\u3066\u5225\u306e\u65b9\u91dd\u3092\u6a21\u7d22\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6b21\u56de\u306b\u7d9a\u304d\u307e\u3059\u3002\n##0. \u306f\u3058\u3081\u306b\n\u524d\u56de([\u305d\u306e\u2462 \u96d1\u30b3\u30e9\u52d5\u753b\u4f5c\u6210](http://qiita.com/k_sui_14/items/92fd84f35245ad0be464))\u3067\u96d1\u30b3\u30e9\u52d5\u753b\u3092\u4f5c\u6210\u3067\u304d\u307e\u3057\u305f\u304c\u3001\u307e\u3060\u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u304a\u304a\u3088\u305d\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\nA. \u8907\u6570\u306e\u4eba\u7269\u304c\u3044\u308b\u5834\u5408\u3001\u5168\u54e1\u306e\u9854\u306b\u30aa\u30fc\u30d0\u30ec\u30a4\u3059\u308b(\u7279\u5b9a\u306e\u4eba\u7269\u3060\u3051\u3092\u9078\u3079\u306a\u3044)\nB. \u9854\u3067\u306a\u3044\u3082\u306e\u3092\u8aa4\u8a8d\u8b58\u3057\u3066\u3057\u307e\u3046(\u8a8d\u8b58\u7cbe\u5ea6)\nC. \u9854\u3092\u8a8d\u8b58\u3067\u304d\u306a\u3044\u5834\u5408\u304c\u3042\u308b(\u8a8d\u8b58\u7cbe\u5ea6)\n\u3053\u308c\u3089\u306e\u89e3\u6c7a\u3092\u76ee\u6307\u3057\u307e\u3059\u3002\n\n##1. \u65b9\u91dd\n\u307e\u305a\u3001A\u3001B\u306b\u3064\u3044\u3066\u3067\u3059\u3002\n\u4eca\u56de\u306e\u96d1\u30b3\u30e9\u4f5c\u6210\u306e\u76ee\u7684\u306f\u300c\u7279\u5b9a\u306e\u4eba\u7269\u306e\u9854\u3060\u3051\u306b\u5225\u306e\u4eba\u306e\u9854\u3092\u4e0a\u66f8\u304d\u3059\u308b\u300d\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u3057\u304b\u3057\u3001\u8a8d\u8b58\u3057\u305f\u9854\u304b\u3089\u7279\u5b9a\u306e\u4eba\u7269\u3092\u81ea\u52d5\u7684\u306b\u9078\u3076\u3053\u3068\u306f\u7121\u7406\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u306f\u4eba\u306e\u624b\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u3084\u308a\u65b9\u306f\u3001\n\u30fb\u8a8d\u8b58\u3057\u305f\u9854\u306bID\u3092\u632f\u3063\u3066\u52d5\u753b\u51fa\u529b\n\u30fb\u76ee\u8996\u3067\u4e0a\u66f8\u304d\u3057\u305f\u3044\u9854\u306eID\u3092\u78ba\u8a8d\n\u30fb\u305d\u306eID\u3092\u5165\u529b\u3059\u308b\n\u3068\u3044\u3046\u65b9\u6cd5\u3067\u5b9f\u73fe\u3057\u307e\u3059\u3002\n\u305f\u3060\u3057\u3001\u5358\u7d14\u306b\u898b\u3064\u304b\u3063\u305f\u9854\u5168\u3066\u306bID\u3092\u632f\u3063\u3066\u3044\u3066\u306f\u5165\u529b\u3059\u308bID\u306e\u6570\u304c\u975e\u5e38\u306b\u591a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001\n\u3053\u3061\u3089\u306fC\u306e\u89e3\u6c7a\u3068\u5408\u308f\u305b\u3066\u5bfe\u5fdc\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nID\u306e\u6570\u3092\u6e1b\u3089\u3059\u305f\u3081\u3001\u524d\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u3067\u4f4d\u7f6e\u3084\u5927\u304d\u3055\u304b\u3089\u9023\u7d9a\u3057\u305f\u9854\u3067\u3042\u308b\u304b\u3092\u5224\u65ad\u3057\u3001\u9023\u7d9a\u3057\u3066\u3044\u308c\u3070\u540c\u3058ID\u3092\u632f\u308a\u307e\u3059\u3002\n\u66f4\u306bX\u2192Y\u2192Z\u3068\u7d9a\u304f\u30d5\u30ec\u30fc\u30e0\u3067\u3001X\u3068Z\u3067\u306f\u9854\u304c\u8a8d\u8b58\u3055\u308c\u305f\u304c\u3001Y\u3067\u306f\u305d\u306e\u9854\u304c\u8a8d\u8b58\u304c\u8a8d\u8b58\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u3001Y\u306b\u3082\u305d\u306e\u9854\u304c\u3042\u308b\u3068\u3057\u3066\u88dc\u5b8c\u3057\u307e\u3059\u3002\n\n##2. \u30af\u30e9\u30b9\u5b9f\u88c5(FacePostion\u3001FaceFrame)\n\u5b9f\u88c5\u306e\u305f\u3081\u306b\u4eca\u56de\u306f\u521d\u3081\u3066\u30af\u30e9\u30b9\u3092\u4f5c\u308a\u307e\u3059\u3002\u30af\u30e9\u30b9\u306f\u5168\u3066frame_manager.py\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u306b\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001**FacePosition**\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30af\u30e9\u30b9\u3068\u8a00\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u9854\u306e\u5ea7\u6a19\u3001ID\u3092\u4fdd\u6301\u3059\u308b\u305f\u3060\u306e\u69cb\u9020\u4f53\u3067\u3059\u3002\n\n```py3:frame_manager.py(FacePosition)\nclass FacePosition:\n    '''\n    \u9854\u306e\u4f4d\u7f6e\u3068ID\u3092\u30bb\u30c3\u30c8\u3067\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\n    ID\u3068\u5ea7\u6a19\u3092\u9854\u306e\u5ea7\u6a19\u30fb\u30b5\u30a4\u30ba\u3092\u6301\u3064\u305f\u3060\u306e\u69cb\u9020\u4f53\n    '''\n\n    def __init__(self, id, coordinate):\n        self.id = id\n        self.coordinate = coordinate\n```\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u9854\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3057\u307e\u3059\u3002\n\n\u6b21\u306b\u3001\u30d5\u30ec\u30fc\u30e0\u3068\u305d\u3053\u306b\u5b58\u5728\u3059\u308b\u9854\u306e\u60c5\u5831\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9**FaceFrame**\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19(\u8907\u6570\u53ef)\u3092\u6e21\u3059\u3068\u3001\u9854\u306b\u521d\u671fID\u3092\u632f\u3063\u3066\u683c\u7d0d\u3057\u307e\u3059\u3002\n\u521d\u671fID\u304c\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306bStatic\u30a2\u30af\u30bb\u30b9\u7528\u306e\u5909\u6570\u3067\u3044\u307e\u307e\u3067\u5272\u308a\u632f\u3063\u305fID\u3092\u30ab\u30a6\u30f3\u30c8\u3057\u307e\u3059\u3002\n\n```py3:frame_manager.py(FaceFrame)\nclass FaceFrame:\n    '''\n    \u5404\u30d5\u30ec\u30fc\u30e0\u3067\u8a8d\u8b58\u3057\u305f\u9854\u3092\u4fdd\u6301\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\n    faceCount\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5168\u4f53\u3067ID\u304c\u88ab\u3089\u306a\u3044\u3088\u3046\u306b\u4f7f\u3063\u305fID\u306e\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u305f\u3081\u306e\u5909\u6570\u306a\u306e\u3067\u3001\n    \u4f7f\u3046\u3068\u304d\u306f\u5fc5\u305aFaceFrame.faceCount\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\n    '''\n    \n    faceCount = 0\n\n    def __init__(self, frame, coordinates):\n\n        '''\n        \u30d5\u30ec\u30fc\u30e0\u3068\u8a8d\u8b58\u3057\u305f\u9854\u306e\u5ea7\u6a19\u30fb\u30b5\u30a4\u30ba\u3092\u6e21\u3059\u3002\n        \u9854\u306e\u6570\u5206\u3060\u3051FacePoint\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n        coodinates: \u9854\u8a8d\u8b58\u7d50\u679c\u306e\u914d\u5217\u3002cascade.detectMultiScale\u306e\u7d50\u679c\u3092\u305d\u306e\u307e\u307e\u6e21\u3059\n        '''\n        \n        # \u9854\u306e\u6570\u5206\u914d\u5217\u3092\u78ba\u4fdd\n        self.faces = [None]*len(coordinates)\n        self.frame = frame\n\n        # \u6e21\u3055\u308c\u305f\u9854\u305d\u308c\u305e\u308c\u306bid\u3092\u5272\u308a\u632f\u308a\u3001FacePosition\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\n        for i in range(0, len(coordinates)):\n            self.faces[i] = FacePosition(FaceFrame.faceCount, coordinates[i])\n            FaceFrame.faceCount += 1\n\n    # \u30d5\u30ec\u30fc\u30e0\u5185\u306e\u9854\u3092\u5f8c\u304b\u3089\u8ffd\u52a0\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\n    def append(self, faceId, coordinate):\n        self.faces.append(FacePosition(faceId, coordinate))\n```\n\u3053\u308c\u3067\u3001\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5bfe\u5fdc\u3092\u4fdd\u6301\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n##3. \u30af\u30e9\u30b9\u5b9f\u88c5(FrameManager)\n\u809d\u306e\u90e8\u5206\u3067\u3042\u308b**FrameManager**\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001\u5916\u304b\u3089\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u50cd\u304d\u3092\u3057\u307e\u3059\u3002\n\u25a0\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19\u60c5\u5831\u3092\u6e21\u3059\u3068\u3001ID\u306e\u5272\u308a\u632f\u308a\u3001\u8a8d\u8b58\u5931\u6557\u306e\u88dc\u5b8c\u3092\u3057\u305f\u30d5\u30ec\u30fc\u30e0\u60c5\u5831(FaceFrame)\u3092\u8fd4\u3059\u3002\n\n\u305d\u306e\u305f\u3081\u306b\u3001\u53d7\u3051\u53d6\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u3092\u4e00\u65e6\u914d\u5217\u306b\u4fdd\u6301\u3057\u3001ID\u306e\u5272\u308a\u632f\u308a\u3001\u88dc\u5b8c\u304c\u7d42\u308f\u3063\u305f\u3082\u306e\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u914d\u5217\u306e\u9577\u3055\u306fLIST_SIZE\u3092\u5909\u3048\u308c\u3070\u5909\u66f4\u53ef\u80fd\u3067\u3059\u304c\u3053\u3053\u3067\u306f5\u3067\u3059\u3002\n\u51e6\u7406\u306e\u6d41\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30fb\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u306e\u5ea7\u6a19\u60c5\u5831(\u8907\u6570\u53ef)\u3092\u53d7\u3051\u53d6\u308b\n\u30fb\u914d\u5217\u306b\u683c\u7d0d\u3059\u308b\u3002\u3053\u306e\u6642\u3001\u914d\u5217\u5185\u306e\u6700\u3082\u53e4\u3044\u8981\u7d20\u304c\u8fd4\u308a\u5024\u3068\u306a\u308b\n(\u30fb\u914d\u5217\u306e\u771f\u3093\u4e2d\u306e\u30d5\u30ec\u30fc\u30e0(frameC)\u3092\u5883\u306b\u3001\u524d\u306e\u30d5\u30ec\u30fc\u30e0(frameFs)\u3068\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0(frameBs)\u3067\u5206\u3051\u308b)\n\u30fbframeF\u3068frameC\u306e\u9854\u306e\u4f4d\u7f6e\u3001\u30b5\u30a4\u30ba\u3092\u78ba\u8a8d\u3057\u3001\u9023\u7d9a\u3057\u3066\u3044\u308b\u3068\u307f\u306a\u3057\u305f\u3089\u540c\u3058ID\u3092\u632f\u308b\n\u30fbframeF\u3068frameB\u3092\u6bd4\u8f03\u3057\u3001\u9023\u7d9a\u3057\u305f\u9854\u304c\u3042\u308b\u304c\u3001\u305d\u308c\u304cframeC\u306b\u5b58\u5728\u3057\u306a\u3044\u306a\u3089\u3001\u305d\u308c\u3092frameC\u306b\u88dc\u5b8c\u3059\u308b\u3002\n\u30fbframeFs\u3068frameBs\u306e\u7d44\u307f\u5408\u308f\u305b\u5206\u7e70\u308a\u8fd4\u3059\u3002\n\u9854\u304c\u9023\u7d9a\u3057\u3066\u3044\u308b\u3053\u3068\u306e\u5224\u5b9a\u306e\u969b\u306e\u8a31\u5bb9\u8aa4\u5dee\u306fALLOWED_GAP\u3067\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f5%\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n(frameF\u3068frameB\u306b\u306f\u8907\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u304c\u3042\u308b\u305f\u3081\u3001s\u306e\u6709\u7121\u3067\u500b\u5225\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3001\u30d5\u30ec\u30fc\u30e0\u7fa4\u5168\u4f53\u304b\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002)\n\u4ee5\u4e0b\u304c\u30bd\u30fc\u30b9\u3067\u3059\u3002\n\n```py3:frame_manager.py(FrameManager)\nclass FrameManager:\n    \n    '''\n    \u6e21\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u8a8d\u8b58\u7d50\u679c\u3092\u5143\u306b\u9854\u306e\u9023\u7d9a\u6027\u3068\u629c\u3051\u305f\u9854\u306e\u88dc\u5b8c\u3092\u884c\u3046\u30af\u30e9\u30b9\n    \u9023\u7d9a\u3057\u3066\u3044\u308b\u9854\u306b\u306f\u540c\u3058ID\u3092\u5272\u308a\u632f\u308b\u3002\n    '''\n    #\u3044\u304f\u3064\u306eFaceFrame\u3092\u5143\u306b\u9854\u306e\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\u304b\u3092\u6307\u5b9a\n    LIST_SIZE = 5\n    CENTER_INDEX = int(LIST_SIZE/2)\n    # \u30d5\u30ec\u30fc\u30e0\u9593\u306e\u9854\u304c\u540c\u3058\u9854\u3067\u3042\u308b\u304b\u3092\u5224\u65ad\u3059\u308b\u969b\u306e\u3001\u4f4d\u7f6e\u3001\u30b5\u30a4\u30ba\u306e\u5dee\u3092\u3069\u3053\u307e\u3067\u8a8d\u3081\u308b\u304b\u3002%\u3067\u6307\u5b9a\n    ALLOWED_GAP = 5\n        \n    def __init__(self, height, width):\n        '''\n        \u6271\u3046\u52d5\u753b\u306e\u9ad8\u3055\u3001\u5e45\u3092\u6307\u5b9a\u3059\u308b\n        '''\n        FrameManager.FRAME_HEIGHT = height\n        FrameManager.FRAME_WIDTH = width\n\n        self.__frames = [None]*self.LIST_SIZE\n        \n    \n    def put(self, frame, coordinates):\n        '''\n        \u6e21\u3055\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u8a8d\u8b58\u7d50\u679c\u3092\u5143\u306b\u30d5\u30ec\u30fc\u30e0\u3092\u8ffd\u52a0\u3059\u308b\n        \u8ffd\u52a0\u6642\u306bID\u306e\u5272\u308a\u632f\u308a\u3001\u9023\u7d9a\u6027\u78ba\u8a8d\u3001\u629c\u3051\u305f\u9854\u306e\u88dc\u5b8c\u3092\u3057\u3001LIST_SIZE\u756a\u76ee\u306eFaceFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u8fd4\u3059\n        \u7d42\u4e86\u6642\u306e\u51e6\u7406\u3068\u3057\u3066\u3001\u5168\u3066\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u51e6\u7406\u3057\u7d42\u3048\u305f\u5f8c\u3001LIST_SIZE\u500b\u306e\u30d5\u30ec\u30fc\u30e0\u304cFrameManager\u5185\u306b\u6b8b\u308b\u306e\u3067\u3001\u6b8b\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u3092\u51fa\u3057\u7d42\u3048\u308b\u307e\u3067\u3001None\u3092\u8ffd\u52a0\u3057\u7d9a\u3051\u308b\u3053\u3068\u3002\n\n        return: FaceFrame\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\u4f46\u3057\u3001LIST_SIZE\u756a\u76ee\u306bFaceFrame\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u306a\u3044\u5834\u5408\u306fNone\u3092\u8fd4\u3059\u3002\n        '''\n        # \u6700\u5f8c\u306b\u6b8b\u3063\u305f\u30d5\u30ec\u30fc\u30e0\u51fa\u529b\u3059\u308b\u3068\u304d\u306bNone\u304c\u6e21\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u3042faceFrame\u3082None\u3068\u3059\u308b\u3002\n        if frame is None:\n            faceFrame = None\n        else:\n            faceFrame = FaceFrame(frame, coordinates)\n\n        # \u30ea\u30b9\u30c8\u30921\u3064\u3065\u3064\u524d\u306b\u305a\u3089\u3057\u3001\u6700\u5f8c\u5c3e\u306b\u5f15\u6570\u306e\u30d5\u30ec\u30fc\u30e0\u3092\u8ffd\u52a0\u3059\u308b\u3002\u5185\u90e8\u51e6\u7406\u306b\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u304c\u591a\u3044\u306e\u3067\u914d\u5217\u3067\u7ba1\u7406\u3059\u308b\u65b9\u304c\u671b\u307e\u3057\u3044\u3068\u601d\u3046\u3002\n        returnFrame = self.__frames[0]\n        for i in range(0,len(self.__frames)-1):\n            self.__frames[i] = self.__frames[i+1]\n        self.__frames[FrameManager.LIST_SIZE-1] = faceFrame\n\n        # \u524d\u5f8c\u306e\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\n        # CENTER_INDEX\u3092\u5883\u306b\u305d\u306e\u524d(i)\u5f8c(j)\u305d\u308c\u305e\u308c\u306e\u7d44\u307f\u5408\u308f\u305b\u3067\u9854\u306e\u9023\u7d9a\u6027\u3092\u78ba\u8a8d\u3059\u308b\n        for i in range(0, FrameManager.CENTER_INDEX):\n            for j in range(FrameManager.CENTER_INDEX+1, FrameManager.LIST_SIZE):\n                # None\u306e\u90e8\u5206\u306f\u98db\u3070\u3059\n                if self.__frames[i] is not None and self.__frames[FrameManager.CENTER_INDEX] is not None and self.__frames[j] is not None:\n\n                    # \u9593\u306b\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u5168\u3066\u306b\u9023\u7d9a\u6027\u78ba\u8a8d\u3001\u88dc\u5b8c\u3092\u884c\u3046\n                    for k in range(i+1, j):\n                        self.connectFrame(self.__frames[i], self.__frames[k], self.__frames[j])\n\n        return returnFrame\n        \n        \n    def connectFrame(self, frameF, frameC, frameB):               \n        # frameF.faces\u3068frameC.faces\u3067\u9023\u7d9a\u3057\u3066\u3044\u308b\u9854\u304c\u3042\u308c\u3070\u540c\u3058id\u3092\u632f\u308b\u3002\u3000\n        # TODO \u540c\u3058id\u304c\u8907\u6570\u306e\u9854\u306b\u632f\u3089\u308c\u3046\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\u305d\u3082\u305d\u3082\u3053\u306e\u5834\u5408\u3060\u3068\u4eca\u306e\u8a2d\u8a08\u3067\u306f\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u3067\u4e00\u65e6\u4fdd\u7559\u3002\n        frontFaceNum = len(frameF.faces)\n        centerFaceNum = len(frameC.faces)\n        backFaceNum = len(frameB.faces)\n        for i in range(0, frontFaceNum):\n            # \u524d\u306e\u30d5\u30ec\u30fc\u30e0\u306e\u4e2d\u306ei\u756a\u76ee\u306e\u9854\u304cframeC\u306e\u9854\u306e\u4e2d\u306e\u3069\u308c\u304b\u3068\u5408\u81f4\u3057\u305f\u304b\u3092\u4fdd\u6301\n            matched = False\n            for j in range(0, centerFaceNum):\n                # \u540c\u3058\u9854\u3068\u5224\u65ad\u3057\u305f\u3089\u540c\u3058ID\u306b\u3059\u308b\n                if self.compare(frameF.faces[i], frameC.faces[j]) == True:\n                    frameC.faces[j].id = frameF.faces[i].id\n                    matched = True\n                    break\n                \n            # frameC\u306b\u7121\u304f\u3066\u3082frameF\u3068frameB\u306e\u4e21\u65b9\u306b\u3042\u308b\u5834\u5408\u306f\u9593\u306eframC\u306b\u3082\u305d\u306e\u9854\u304c\u3042\u308b\u3068\u307f\u306a\u3057\u3066\u88dc\u5b8c\u3059\u308b\u3002\n            if matched == False:\n                for k in range(0, backFaceNum):\n                    if self.compare(frameF.faces[i], frameB.faces[k]):\n                        # frameF\u3068frameB\u306e\u4e2d\u9593\u306e\u4f4d\u7f6e\u30fb\u30b5\u30a4\u30ba\u306b\u9854\u3092\u8ffd\u52a0\u3059\u308b\n                        frameC.append(frameF.faces[i].id, ((frameF.faces[i].coordinate + frameB.faces[k].coordinate)/2).astype(np.int))\n                        # \u9854\u306e\u6570\u30921\u5897\u3084\u3059\u3002(\u3042\u3068\u306e\u51e6\u7406\u3067\u3082\u30461\u3064\u9854\u304c\u898b\u3064\u304b\u3063\u305f\u5834\u5408\u306e\u305f\u3081)\n                        centerFaceNum += 1\n\n                        # \u7121\u9650\u30eb\u30fc\u30d7\u9632\u6b62\n                        if(centerFaceNum>10):\n                            break\n\n       \n    def compare(self, face1, face2):\n        '''\n        face1\u3001face2\u304c\u9023\u7d9a\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u304b\u6bd4\u8f03\u3059\u308b\u3002\n        return: \u540c\u3058\u306a\u3089True\u3001\u9055\u3048\u3070False\n        '''\n        result = True\n        # \u5ea7\u6a19\u3001\u9854\u306e\u30b5\u30a4\u30ba\u306e\u9055\u3044\u304c\u8aa4\u5dee\u306e\u7bc4\u56f2\u306b\u53ce\u307e\u308b\u304b\u3092\u78ba\u8a8d\u3057\u3001\u5168\u3066\u8aa4\u5dee(ALLOWED_GAP)\u5185\u3067\u3042\u308c\u3070\u540c\u3058\u9854\u3067\u3042\u308b\u3068\u5224\u65ad\u3059\u308b\n        # TODO \u30d5\u30ec\u30fc\u30e0\u9593\u304c\u96e2\u308c\u3066\u3044\u308b\u306a\u3089\u305d\u306e\u5206\u8a31\u5bb9\u8aa4\u5dee\u3082\u5927\u304d\u304f\u3057\u305f\u307b\u3046\u304c\u826f\u3044\n        for i in range(0,4):\n            if i%2 == 0:\n                gap = ((float(face1.coordinate[i])-float(face2.coordinate[i]))/FrameManager.FRAME_HEIGHT)*100\n            else:\n                gap = ((float(face1.coordinate[i])-float(face2.coordinate[i]))/FrameManager.FRAME_WIDTH)*100\n            if (-1*FrameManager.ALLOWED_GAP < gap < FrameManager.ALLOWED_GAP) == False:\n                result = False\n                break\n        return result\n```\n\n\n\u3053\u308c\u3067\u4f7f\u3046\u4e0a\u3067\u306fFrameManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u30d5\u30ec\u30fc\u30e0\u3068\u9854\u60c5\u5831\u3092\u5165\u308c\u308c\u3070\u3001\nID\u3092\u632f\u3063\u305fFaceFrame\u3092\u8fd4\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u898b\u76f4\u3057\u3066\u307f\u308b\u3068ID\u306e\u9023\u7d9a\u6027\u3092\u540c\u3058\u30d5\u30ec\u30fc\u30e0\u9593\u3067\u8907\u6570\u56de\u78ba\u8a8d\u3057\u3066\u3057\u307e\u3044\u3001\u5197\u9577\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u304c\u3001\u5f8c\u8ff0\u3059\u308b\u7406\u7531\u306b\u3088\u308a\u76ee\u3092\u3064\u3076\u308a\u307e\u3059\u3002\n\n##4. FrameManager\u306e\u7d44\u307f\u8fbc\u307f\n\u524d\u56de\u4f5c\u6210\u3057\u305foverlay_movie.py\u306b\u4f5c\u6210\u3057\u305fFrameManager\u30af\u30e9\u30b9\u3092\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n\u9854\u8a8d\u8b58\u3057\u305f\u5f8c\u3001\u307e\u305a\u8a8d\u8b58\u3057\u305f\u9854\u3092FrameManager\u306b\u5165\u308c\u3001\u51fa\u529b\u3055\u308c\u305fFaceFrame\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5143\u306b\u3001\u898b\u3064\u304b\u3063\u305f\u9854\u306bID\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3044\u304d\u307e\u3059\u3002\n\n```py3:overlay_movie2.py\n# -*- coding:utf-8 -*-\n\nimport cv2\nimport datetime\nimport numpy as np\nfrom PIL import Image\n\nimport frame_manager\n\ndef overlay_movie2():\n\n    # \u5165\u529b\u3059\u308b\u52d5\u753b\u3068\u51fa\u529b\u30d1\u30b9\u3092\u6307\u5b9a\u3002\n    target = \"target/test_input.mp4\"\n    result = \"result/test_output2.m4v\"  #.m4v\u306b\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\n\n    # \u52d5\u753b\u306e\u8aad\u307f\u8fbc\u307f\u3068\u52d5\u753b\u60c5\u5831\u306e\u53d6\u5f97\n    movie = cv2.VideoCapture(target) \n    fps    = movie.get(cv2.CAP_PROP_FPS)\n    height = movie.get(cv2.CAP_PROP_FRAME_HEIGHT)\n    width  = movie.get(cv2.CAP_PROP_FRAME_WIDTH)\n\n    # \u5f62\u5f0f\u306fMP4V\u3092\u6307\u5b9a\n    fourcc = cv2.VideoWriter_fourcc('m', 'p', '4', 'v')\n    \n    # \u51fa\u529b\u5148\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u958b\u304f\n    out = cv2.VideoWriter(result, int(fourcc), fps, (int(width), int(height)))\n\n    # \u30ab\u30b9\u30b1\u30fc\u30c9\u5206\u985e\u5668\u306e\u7279\u5fb4\u91cf\u3092\u53d6\u5f97\u3059\u308b\n    cascade_path = \"haarcascades/haarcascade_frontalface_alt.xml\"\n    cascade = cv2.CascadeClassifier(cascade_path)\n    \n    # FrameManager\u306e\u4f5c\u6210\n    frameManager = frame_manager.FrameManager(height, width)\n\n    #\u3000\u8a8d\u8b58\u3057\u305f\u9854\u3092\u56f2\u3080\u77e9\u5f62\u306e\u8272\u3092\u6307\u5b9a\u3002\u3053\u3053\u3067\u306f\u767d\u3002\n    color = (255, 255, 255) \n    \n    # \u6700\u521d\u306e1\u30d5\u30ec\u30fc\u30e0\u3092\u8aad\u307f\u8fbc\u3080\n    if movie.isOpened() == True:\n        ret,frame = movie.read()\n    else:\n        ret = False\n\n    count = 0\n\n    # \u30d5\u30ec\u30fc\u30e0\u306e\u8aad\u307f\u8fbc\u307f\u306b\u6210\u529f\u3057\u3066\u3044\u308b\u9593\u30d5\u30ec\u30fc\u30e0\u3092\u66f8\u304d\u51fa\u3057\u7d9a\u3051\u308b\n    while ret:\n        \n        # \u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\n        frame_gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)\n\n        # \u9854\u8a8d\u8b58\u306e\u5b9f\u884c\n        facerecog = cascade.detectMultiScale(frame_gray, scaleFactor=1.1, minNeighbors=1, minSize=(1, 1))\n            \n        # \u8a8d\u8b58\u3057\u305f\u9854\u3092FrameManager\u306b\u5165\u308c\u308b\n        managedFrame = frameManager.put(frame, facerecog)\n\n        # 5\u56de\u3081\u4ee5\u964d\u306fFrameManager\u304b\u3089\u30d5\u30ec\u30fc\u30e0\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\n        if managedFrame is not None:\n\n            # \u8a8d\u8b58\u3057\u305f\u9854\u306b\u756a\u53f7\u3092\u66f8\u304d\u52a0\u3048\u308b\n            for i in range(0,len(managedFrame.faces)):\n\n                # \u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u5909\u6570\u3092\u7528\u610f\n                tmpCoord = managedFrame.faces[i].coordinate\n                tmpId = managedFrame.faces[i].id\n                    \n                print(\"\u8a8d\u8b58\u3057\u305f\u9854\u306e\u6570(ID) = \"+str(tmpId))\n                                        \n                # \u77e9\u5f62\u3067\u56f2\u3080\n                cv2.rectangle(managedFrame.frame, tuple(tmpCoord[0:2]),tuple(tmpCoord[0:2]+tmpCoord[2:4]), color, thickness=2)\n                    \n                # \u9854\u306eID\u3092\u66f8\u304d\u8fbc\u307f\n                cv2.putText(managedFrame.frame,str(tmpId),(tmpCoord[0],tmpCoord[1]),cv2.FONT_HERSHEY_TRIPLEX, 2, (100,200,255), thickness=2)\n    \n            out.write(managedFrame.frame)\n        if count%10 == 0:\n            date = datetime.datetime.now().strftime(\"%Y/%m/%d %H:%M:%S\")\n            print(date + '\u73fe\u5728\u30d5\u30ec\u30fc\u30e0\u6570\uff1a'+str(count))\n        \n        count += 1\n        ret,frame = movie.read()\n\n        # \u9014\u4e2d\u7d42\u4e86\n        if count > 200 :\n            break\n\n    print(\"\u51fa\u529b\u30d5\u30ec\u30fc\u30e0\u6570\uff1a\"+str(count))\n\n    \nif __name__ == '__main__':\n    overlay_movie2()\n```\n\n\n##5. \u7d50\u679c\n\u7121\u4e8b\u306b\u9854\u306bID\u3092\u5272\u308a\u632f\u308b\u3053\u3068\u304c\u3067\u304d\u3001\n![ID\u5272\u308a\u632f\u308a1\u4eba.JPG](https://qiita-image-store.s3.amazonaws.com/0/3099/2b431152-c932-6587-dd80-2b808d899f8b.jpeg)\n\n\u8907\u6570\u4eba\u304b\u3089\u7279\u5b9a\u306e\u4eba\u3092ID\u3067\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u307e\u305f\u3001\u9023\u7d9a\u3057\u305f\u9854\u306f1\u3064\u306eID\u3067\u7279\u5b9a\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n![ID\u5272\u308a\u632f\u308a3\u4eba.JPG](https://qiita-image-store.s3.amazonaws.com/0/3099/d546f4c8-9df9-a361-e350-5faefddbd112.jpeg)\n\n##6. \u6700\u5f8c\u306b\n\u5f8c\u306f\u4e0a\u66f8\u304d\u3057\u305f\u3044\u9854\u306eID\u3092\u5165\u529b\u3057\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u305f\u9854\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3088\u3046\u306b\u3059\u308b\u3060\u3051\u3001\n\u3068\u8a00\u3044\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u305d\u3046\u306f\u3044\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u3053\u3053\u307e\u3067\u4f5c\u3063\u3066\u304a\u3044\u3066\u306a\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u76ee\u7684\u3092\u679c\u305f\u305b\u307e\u305b\u3093\u3002\n\u8a8d\u8b58\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u52d5\u753b\u5185\u306e\u9854\u306e\u8a8d\u8b58\u7cbe\u5ea6\u304c\u60aa\u304f\u3001\u9593\u3092\u88dc\u5b8c\u3057\u3066\u3082\u5bfe\u5fdc\u3057\u304d\u308c\u306a\u3044\u306e\u3067\u3059\u3002\n(\u8584\u3005\u611f\u3058\u3064\u3064\u3082\u76ee\u3092\u9038\u3089\u3057\u3066\u3044\u307e\u3057\u305f)\n\u3068\u3044\u3046\u308f\u3051\u3067\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u304a\u8535\u5165\u308a\u3068\u3057\u3066\u5225\u306e\u65b9\u91dd\u3092\u6a21\u7d22\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u6b21\u56de\u306b\u7d9a\u304d\u307e\u3059\u3002\n\n", "tags": ["OpenCV", "\u753b\u50cf\u51e6\u7406", "\u9854\u8a8d\u8b58", "Python", "python3"]}