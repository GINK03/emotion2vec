{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 23 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 23 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f Promise \u3068 Obervable \u3068\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\nObservable \u3068 Promise\nPromise \u306f ES2015 \u3067\u6a19\u6e96\u5316\u3055\u308c\u3001\u5404\u7a2e Web browser \u3067\u5b9f\u88c5\u3055\u308c\u3066\u3001 JavaScript \u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ee3\u8868\u7684\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nRxJS \u306e Observable \u306f Promise \u304b\u3089\u306e\u5909\u63db\u3084 Promise \u3078\u306e\u5909\u63db\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 Promise \u306e\u6271\u3044\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nPromise to Observable\n\nObservable.fromPromise\n\nObservable.fromPromise API Document\nObservable.fromPromise Source Code\n\nPromise \u304b\u3089 Observable \u306b\u5909\u63db\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .fromPromise(Promise.resolve(42))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 42\n// onCompleted\n\nonNext \u306e\u3042\u3068 onCompleted \u304c\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nconst promise = new Promise((resolve) => {\n  setTimeout(() => resolve(100), 1000);\n});\n\nObservable\n  .fromPromise(promise)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 100\n// onCompleted\n\nsetTimeout \u3092\u306f\u3055\u3093\u3067\u3082\u52d5\u304d\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nconst promise = new Promise((_, reject) => {\n  setTimeout(() => reject(new Error('ERROR!')), 1000);\n});\n\nObservable\n  .fromPromise(promise)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onError: Error: ERROR!\n\nError \u3082\u671f\u5f85\u901a\u308a\u306b\u52d5\u304d\u307e\u3059\u3002\n\nObservable.prototype.flatMap / Observable.prototype.mergeAll\n\nObservable.prototype.flatMap API Document\nObservable.prototype.flatMap Source Code\nFlatMapObservable Source Code\nObservable.prototype.mergeAll API Document\nObservable.prototype.mergeAll Source Code\n\nflatMap \u3084 mergeAll \u306a\u3069\u306e Observable \u3092 flat \u306b\u3059\u308b\u52d5\u4f5c\u306f Observable \u3060\u3051\u3067\u306a\u304f Promise \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002Observable \u3067\u306f\u306a\u304f Promise \u304c\u8fd4\u3055\u308c\u305f\u5834\u5408\u306b\u306f\u3001\u305d\u308c\u3092 Observable.fromPromise \u3067\u5909\u63db\u3057\u3066 Observable \u3068\u3057\u3066\u51e6\u7406\u3057\u3066\u304f\u308c\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  // .map(x => Observable.fromPromise(Promise.resolve(x * 10)))\n  .map(x => Promise.resolve(x * 10)) \n  .mergeAll()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 10\n// onNext: 20\n// onNext: 30\n// onCompleted\n\nURL \u3092 fetch \u3059\u308b\u3068 Promise \u3092\u8fd4\u3059\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u3053\u306e\u6319\u52d5\u306f\u3088\u304f\u4f7f\u3044\u307e\u3059\u3002\nimport fetch from 'node-fetch';\nimport { Observable } from 'rx';\n\nObservable\n  .of('http://example.com')\n  // fetch(url) returns Promise<Response>\n  .flatMap(url => fetch(url))\n  // response.text() returns Promise<String>\n  .flatMap(response => response.text())\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: <!doctype html> ...\n// onCompleted\n\n\nObservable.prototype.toPromise\n\nObservable.prototype.toPromise API Document\nObservable.prototype.toPromise Source Code\n\nObservable \u304b\u3089 Promise \u306b\u5909\u63db\u3057\u307e\u3059\u3002Observable \u306e onCompleted \u306e\u969b\u306b\u6700\u5f8c\u306e onNext \u306e\u5024\u304c\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toPromise()\n  .then(value => console.log(`fulfilled: ${value}`));\n// fulfilled: 3\n\n\n\u304a\u308f\u308a\u306b\nRxJS \u306e Observable \u306f Promise \u304b\u3089\u306e\u5909\u63db\u3084 Promise \u3078\u306e\u5909\u63db\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n\u3053\u3046\u3044\u3046\u5358\u7d14\u306a\u60c5\u5831\u306f\u610f\u5916\u3068\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u3001\u6539\u3081\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) 23 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 23 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f Promise \u3068 Obervable \u3068\u3092\u76f8\u4e92\u5909\u63db\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\n# Observable \u3068 Promise\n\nPromise \u306f ES2015 \u3067\u6a19\u6e96\u5316\u3055\u308c\u3001\u5404\u7a2e Web browser \u3067\u5b9f\u88c5\u3055\u308c\u3066\u3001 JavaScript \u306e\u975e\u540c\u671f\u51e6\u7406\u306e\u4ee3\u8868\u7684\u306a\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nRxJS \u306e Observable \u306f Promise \u304b\u3089\u306e\u5909\u63db\u3084 Promise \u3078\u306e\u5909\u63db\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002 Promise \u306e\u6271\u3044\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n## Promise to Observable\n\n### Observable.fromPromise\n\n- [`Observable.fromPromise` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/frompromise.md)\n- [`Observable.fromPromise` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/frompromise.js)\n\n`Promise` \u304b\u3089 `Observable` \u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .fromPromise(Promise.resolve(42))\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 42\n// onCompleted\n```\n\n`onNext` \u306e\u3042\u3068 `onCompleted` \u304c\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nconst promise = new Promise((resolve) => {\n  setTimeout(() => resolve(100), 1000);\n});\n\nObservable\n  .fromPromise(promise)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 100\n// onCompleted\n```\n\n`setTimeout` \u3092\u306f\u3055\u3093\u3067\u3082\u52d5\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nconst promise = new Promise((_, reject) => {\n  setTimeout(() => reject(new Error('ERROR!')), 1000);\n});\n\nObservable\n  .fromPromise(promise)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onError: Error: ERROR!\n```\n\n`Error` \u3082\u671f\u5f85\u901a\u308a\u306b\u52d5\u304d\u307e\u3059\u3002\n\n### Observable.prototype.flatMap / Observable.prototype.mergeAll\n\n- [`Observable.prototype.flatMap` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/selectmany.md)\n- [`Observable.prototype.flatMap` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/flatmap.js)\n- [`FlatMapObservable` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/flatmapbase.js)\n- [`Observable.prototype.mergeAll` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/mergeall.md)\n- [`Observable.prototype.mergeAll` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/mergeall.js)\n\n`flatMap` \u3084 `mergeAll` \u306a\u3069\u306e `Observable` \u3092 flat \u306b\u3059\u308b\u52d5\u4f5c\u306f `Observable` \u3060\u3051\u3067\u306a\u304f `Promise` \u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002`Observable` \u3067\u306f\u306a\u304f `Promise` \u304c\u8fd4\u3055\u308c\u305f\u5834\u5408\u306b\u306f\u3001\u305d\u308c\u3092 `Observable.fromPromise` \u3067\u5909\u63db\u3057\u3066 `Observable` \u3068\u3057\u3066\u51e6\u7406\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  // .map(x => Observable.fromPromise(Promise.resolve(x * 10)))\n  .map(x => Promise.resolve(x * 10)) \n  .mergeAll()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: 10\n// onNext: 20\n// onNext: 30\n// onCompleted\n```\n\nURL \u3092 `fetch` \u3059\u308b\u3068 `Promise` \u3092\u8fd4\u3059\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u3053\u306e\u6319\u52d5\u306f\u3088\u304f\u4f7f\u3044\u307e\u3059\u3002\n\n```js\nimport fetch from 'node-fetch';\nimport { Observable } from 'rx';\n\nObservable\n  .of('http://example.com')\n  // fetch(url) returns Promise<Response>\n  .flatMap(url => fetch(url))\n  // response.text() returns Promise<String>\n  .flatMap(response => response.text())\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\n// onNext: <!doctype html> ...\n// onCompleted\n```\n\n### Observable.prototype.toPromise\n\n- [`Observable.prototype.toPromise` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/topromise.md)\n- [`Observable.prototype.toPromise` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/master/src/core/linq/observable/topromise.js)\n\n`Observable` \u304b\u3089 `Promise` \u306b\u5909\u63db\u3057\u307e\u3059\u3002`Observable` \u306e `onCompleted` \u306e\u969b\u306b\u6700\u5f8c\u306e `onNext` \u306e\u5024\u304c\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .toPromise()\n  .then(value => console.log(`fulfilled: ${value}`));\n// fulfilled: 3\n```\n\n# \u304a\u308f\u308a\u306b\n\nRxJS \u306e Observable \u306f Promise \u304b\u3089\u306e\u5909\u63db\u3084 Promise \u3078\u306e\u5909\u63db\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u3046\u3044\u3046\u5358\u7d14\u306a\u60c5\u5831\u306f\u610f\u5916\u3068\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u6c17\u304c\u3057\u305f\u306e\u3067\u3001\u6539\u3081\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n", "tags": ["RxJS", "Rx", "ReactiveExtensions"]}