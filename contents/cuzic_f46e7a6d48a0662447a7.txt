{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\nAmazon CloudWatch \u3092\u4f7f\u3063\u3066\u30011\u6642\u9593\u3054\u3068\u306e\u5206\u3042\u305f\u308a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u306e\u5e73\u5747\u3001\u6700\u5927\u3001\u6700\u5c0f\u3092\u6c42\u3081\u305f\u304b\u3063\u305f\n\u30cd\u30c3\u30c8\u3067\u691c\u7d22\u3057\u3066\u3082\u826f\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\n\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u4f5c\u3057\u305f\u306e\u3067\u3001\u516c\u958b\u3059\u308b\n\n\n\u30b9\u30af\u30ea\u30d7\u30c8\u4f8b\n\nget-cloudwatch-metric.sh\n#!/bin/sh\n\nfor hour in $(seq 24 -1 0); do\n  begin=$(date -u -d \"$((hour + 1)) hour ago\" +%FT%H:00:00)\n  finish=$(date -u -d \"${hour} hour ago\" +%FT%H:00:00)\n\n  echo \"$begin - $finish\"\n  aws cloudwatch get-metric-statistics \\\n    --metric-name RequestCount \\\n    --start-time $begin \\\n    --end-time $finish \\\n    --period 60 \\\n    --namespace AWS/ELB \\\n    --statistics Sum \\\n    --dimensions Name=LoadBalancerName,Value=your-target-elb \\\n    --query \"Datapoints[]\" \\\n    --output text | awk '\n      BEGIN {min = 99999}\n      {\n        if(max<$1){max = $1; max_time = $2;}\n        if(min>$1){min = $1; min_time = $2;}\n        sum += $1;\n      }\n      END {\n        print max_time, \"max: \", max;\n        print min_time, \"min: \", min;\n        print \"sum: \", sum;\n      }\n    '\n  echo\ndone\n\n\n\n\u89e3\u8aac\n\n\u4f7f\u3046\u3068\u304d\u306f your-target-elb \u3092\u81ea\u5206\u306e ELB \u306e\u540d\u524d\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\n\u540d\u524d\u7a7a\u9593 AWS/ELB \u306b\u3042\u308b RequestCount \u3068\u3044\u3046 CloudWatch \u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\nbash \u306e for \u6587\u3092\u4f7f\u3046\u3068\u304d\u306f\u3001seq \u3092\u4f7f\u3046\u306e\u304c\u30aa\u30ec\u30aa\u30ec\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\n\u76f4\u8fd1\u304b\u3089 24\u6642\u9593\u524d\u307e\u3067\u306e \u8a0825\u6642\u9593\u5206\u306e\u96c6\u8a08\u7d50\u679c\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\n\ndate \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u6708\u521d\u3001\u5e74\u521d\u306a\u3069\u306e\u5883\u754c\u6761\u4ef6\u3092\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u304f\u3066\u6e08\u3080\u306e\u3067\u3001\u4fbf\u5229\nELB \u306f AZ \u3054\u3068\u306b\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u3082\u30461\u6bb5\u968e\u6df1\u304f\u3001ELB \u3054\u3068\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u96c6\u8a08\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\uff08\u3053\u3053\u3067\u306f\u3084\u3063\u3066\u306a\u3044\u3051\u3069\uff09\n\u96c6\u8a08\u30ed\u30b8\u30c3\u30af\u306f awk \u3067\u3055\u304f\u3063\u3068\u4f5c\u6210\n\n\n\n--query Datapoints[] \u3068\u3059\u308b\u3068\u3001\u51fa\u529b\u7d50\u679c\u304c\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u5f8c\u51e6\u7406\u304c\u30e9\u30af\u306b\u306a\u308b\n\n--output text \u3068\u3059\u308b\u3068\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u3067\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001awk \u3067\u5f8c\u51e6\u7406\u3057\u3084\u3059\u3044\nRuby \u7b49\u3067\u5f8c\u51e6\u7406\u3059\u308b\u306e\u3067\u3042\u308c\u3070 json \u5f62\u5f0f\u304c\u30aa\u30b9\u30b9\u30e1\n\u3054\u306b\u3087\u3054\u306b\u3087\u3057\u305f aws \u30b3\u30de\u30f3\u30c9\u306e\u7d50\u679c\u30011\u5217\u76ee\u304c \u56de\u6570\u30012\u5217\u76ee\u304c\u691c\u7d22\u7bc4\u56f2\u306e\u65e5\u6642\u304c\u8fd4\u308b\n\nawk \u3067\u66f8\u3044\u305f\u3068\u3053\u308d\u306f\u6b63\u76f4 Perl \u3067\u3082 Ruby \u3067\u3082\u3044\u3044\u306e\u3060\u3051\u3069\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u4f7f\u3046\u306a\u3089 awk \u304b\u306a\u3001\u3068\n\n\n\n## \u80cc\u666f\n* Amazon CloudWatch \u3092\u4f7f\u3063\u3066\u30011\u6642\u9593\u3054\u3068\u306e\u5206\u3042\u305f\u308a\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u306e\u5e73\u5747\u3001\u6700\u5927\u3001\u6700\u5c0f\u3092\u6c42\u3081\u305f\u304b\u3063\u305f\n* \u30cd\u30c3\u30c8\u3067\u691c\u7d22\u3057\u3066\u3082\u826f\u3044\u30b5\u30f3\u30d7\u30eb\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\n* \u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u81ea\u4f5c\u3057\u305f\u306e\u3067\u3001\u516c\u958b\u3059\u308b\n\n## \u30b9\u30af\u30ea\u30d7\u30c8\u4f8b\n\n```sh:get-cloudwatch-metric.sh\n#!/bin/sh\n\nfor hour in $(seq 24 -1 0); do\n  begin=$(date -u -d \"$((hour + 1)) hour ago\" +%FT%H:00:00)\n  finish=$(date -u -d \"${hour} hour ago\" +%FT%H:00:00)\n\n  echo \"$begin - $finish\"\n  aws cloudwatch get-metric-statistics \\\n    --metric-name RequestCount \\\n    --start-time $begin \\\n    --end-time $finish \\\n    --period 60 \\\n    --namespace AWS/ELB \\\n    --statistics Sum \\\n    --dimensions Name=LoadBalancerName,Value=your-target-elb \\\n    --query \"Datapoints[]\" \\\n    --output text | awk '\n      BEGIN {min = 99999}\n      {\n        if(max<$1){max = $1; max_time = $2;}\n        if(min>$1){min = $1; min_time = $2;}\n        sum += $1;\n      }\n      END {\n        print max_time, \"max: \", max;\n        print min_time, \"min: \", min;\n        print \"sum: \", sum;\n      }\n    '\n  echo\ndone\n```\n\n## \u89e3\u8aac\n\n* \u4f7f\u3046\u3068\u304d\u306f `your-target-elb` \u3092\u81ea\u5206\u306e ELB \u306e\u540d\u524d\u306b\u5909\u66f4\u3059\u308b\u3053\u3068\n* \u540d\u524d\u7a7a\u9593 AWS/ELB \u306b\u3042\u308b RequestCount \u3068\u3044\u3046 CloudWatch \u306e\u30e1\u30c8\u30ea\u30af\u30b9\u3092\u5229\u7528\u3057\u3066\u3044\u308b\n* bash \u306e `for` \u6587\u3092\u4f7f\u3046\u3068\u304d\u306f\u3001`seq` \u3092\u4f7f\u3046\u306e\u304c\u30aa\u30ec\u30aa\u30ec\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\n* \u76f4\u8fd1\u304b\u3089 24\u6642\u9593\u524d\u307e\u3067\u306e \u8a0825\u6642\u9593\u5206\u306e\u96c6\u8a08\u7d50\u679c\u3092\u51fa\u529b\u3057\u3066\u3044\u308b\n* `date` \u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u3068\u3001\u6708\u521d\u3001\u5e74\u521d\u306a\u3069\u306e\u5883\u754c\u6761\u4ef6\u3092\u3042\u307e\u308a\u6c17\u306b\u3057\u306a\u304f\u3066\u6e08\u3080\u306e\u3067\u3001\u4fbf\u5229\n* ELB \u306f AZ \u3054\u3068\u306b\u5b58\u5728\u3059\u308b\u306e\u3067\u3001\u3082\u30461\u6bb5\u968e\u6df1\u304f\u3001ELB \u3054\u3068\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u6570\u3092\u96c6\u8a08\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\uff08\u3053\u3053\u3067\u306f\u3084\u3063\u3066\u306a\u3044\u3051\u3069\uff09\n* \u96c6\u8a08\u30ed\u30b8\u30c3\u30af\u306f `awk` \u3067\u3055\u304f\u3063\u3068\u4f5c\u6210\n  * `--query Datapoints[]` \u3068\u3059\u308b\u3068\u3001\u51fa\u529b\u7d50\u679c\u304c\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u5f8c\u51e6\u7406\u304c\u30e9\u30af\u306b\u306a\u308b\n  * `--output text` \u3068\u3059\u308b\u3068\u30c6\u30ad\u30b9\u30c8\u5f62\u5f0f\u3067\u51fa\u529b\u3055\u308c\u308b\u306e\u3067\u3001awk \u3067\u5f8c\u51e6\u7406\u3057\u3084\u3059\u3044\n  * Ruby \u7b49\u3067\u5f8c\u51e6\u7406\u3059\u308b\u306e\u3067\u3042\u308c\u3070 `json` \u5f62\u5f0f\u304c\u30aa\u30b9\u30b9\u30e1\n  * \u3054\u306b\u3087\u3054\u306b\u3087\u3057\u305f `aws` \u30b3\u30de\u30f3\u30c9\u306e\u7d50\u679c\u30011\u5217\u76ee\u304c \u56de\u6570\u30012\u5217\u76ee\u304c\u691c\u7d22\u7bc4\u56f2\u306e\u65e5\u6642\u304c\u8fd4\u308b\n  * `awk` \u3067\u66f8\u3044\u305f\u3068\u3053\u308d\u306f\u6b63\u76f4 `Perl` \u3067\u3082 `Ruby` \u3067\u3082\u3044\u3044\u306e\u3060\u3051\u3069\u3001\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4e2d\u3067\u4f7f\u3046\u306a\u3089 `awk` \u304b\u306a\u3001\u3068\n \n", "tags": ["AWS", "ShellScript", "CloudWatch", "awk"]}