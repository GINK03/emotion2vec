{"context": "\u4eca\u56de\u306e\u4f8b\u3067\u306f\u3001mosquitto\u306e\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n\u8a3c\u660e\u66f8\u3092\u53d6\u5f97\u3059\u308b\nmosquitto\u306e\u8a3c\u660e\u66f8\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u306e\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n$ wget http://test.mosquitto.org/ssl/mosquitto.org.crt\n\nkeytool\uff08Java\u4ed8\u5c5e\u306e\u9375\u30fb\u8a3c\u660e\u66f8\u7ba1\u7406\u7528\u30c4\u30fc\u30eb\uff09\u3067\u8a3c\u660e\u66f8\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n$ keytool -printcert -file mosquitto.org.crt\nkeytool -printcert -file mosquitto.org.crt\n\u6240\u6709\u8005: EMAILADDRESS=roger@atchoo.org, CN=mosquitto.org, OU=CA, O=Mosquitto, L=Derby, ST=United Kingdom, C=GB\n\u767a\u884c\u8005: EMAILADDRESS=roger@atchoo.org, CN=mosquitto.org, OU=CA, O=Mosquitto, L=Derby, ST=United Kingdom, C=GB\n\u30b7\u30ea\u30a2\u30eb\u756a\u53f7: e0fadcf9578c98bc\n\u6709\u52b9\u671f\u9593\u306e\u958b\u59cb\u65e5: Sat Jun 30 07:11:59 JST 2012\u7d42\u4e86\u65e5: Tue Jun 28 07:11:59 JST 2022\n\u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8:\n     MD5:  AB:F2:AF:A0:94:9E:08:64:F7:1D:5F:9B:EE:88:D1:8F\n     SHA1: A2:79:92:D3:42:0C:89:F2:93:D3:51:37:8B:A5:F5:67:5F:74:FE:3C\n     SHA256: D1:56:59:4D:32:A9:9D:0C:72:66:5B:5F:94:3C:30:34:D0:7C:DB:A3:60:51:A4:62:56:13:7F:63:1D:2D:F4:E6\n     \u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540d: SHA1withRSA\n     \u30d0\u30fc\u30b8\u30e7\u30f3: 3\n(\u7701\u7565)\n\n\n\u8a3c\u660e\u66f8\u3092\u30ad\u30fc\u30b9\u30c8\u30a2\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\nJava\u3067\u79d8\u5bc6\u9375\u3084\u8a3c\u660e\u66f8\u3092\u6271\u3046\u5834\u5408\u3001\u30ad\u30fc\u30b9\u30c8\u30a2\u3068\u3044\u3046\u9375\u3084\u8a3c\u660e\u66f8\u3092\u7ba1\u7406\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n$ keytool \\\n  -import \\\n  -alias rootCA \\\n  -trustcacerts \\\n  -keystore ./crt.jks \\\n  -storetype jks \\\n  -storepass testtest \\\n  -file ./mosquitto.org.crt\n\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u8a3c\u660e\u66f8\u3068\u3057\u3066mosquitto.org.crt\u3092\u6307\u5b9a\u3002\n\u4e0a\u8a18\u8a3c\u660e\u66f8\u306brootCA\u3068\u3044\u3046\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u3064\u3051\u308b\u3002\n\u30a4\u30f3\u30dd\u30fc\u30c8\u5148\u306e\u30ad\u30fc\u30b9\u30c8\u30a2\u540d\u306fcrt.jks\n\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u5f62\u5f0f\u306fjks\uff08Java Key Store\uff09\n\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306ftesttest\n\n\u4ee5\u4e0b\u3067\u30ad\u30fc\u30b9\u30c8\u30a2\u306b\u8a3c\u660e\u66f8\u304c\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n$ keytool \\\n  -list \\\n  -keystore ./crt.jks \\\n  -alias rootCA \\\n  -storepass testtest\nrootCA,2016/11/30, trustedCertEntry, \n\u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8(SHA1): A2:79:92:D3:42:0C:89:F2:93:D3:51:37:8B:A5:F5:67:5F:74:FE:3C\n\n\nPaho Java\u3067MQTTS\uff08MQTT over TLS\uff09\u63a5\u7d9a\u3059\u308b\n\u901a\u5e38\u306eTCP\u63a5\u7d9a\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306eURL\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\nhttps://eclipse.org/paho/clients/java/\n\u4ee5\u4e0b\u304cTLS\u63a5\u7d9a\u7248\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\nimport org.eclipse.paho.client.mqttv3.MqttClient;\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\nimport org.eclipse.paho.client.mqttv3.MqttException;\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\n\nimport java.util.Properties;\n\npublic class MqttPublishSample {\n    void run () {\n        String topic        = \"MQTT Examples\";\n        String content      = \"Message from MqttPublishSample\";\n        int qos             = 2;\n        String broker       = \"ssl://test.mosquitto.org:8883\";\n        String clientId     = \"JavaSample\";\n        MemoryPersistence persistence = new MemoryPersistence();\n        String trustStore   = this.getClass().getResource(\"crt.jks\").getPath();\n\n        try {\n            MqttClient sampleClient = new MqttClient(broker, clientId, persistence);\n            MqttConnectOptions connOpts = new MqttConnectOptions();\n            connOpts.setCleanSession(true);\n            Properties prop = new Properties();\n            prop.setProperty(\"com.ibm.ssl.trustStore\", trustStore);\n            connOpts.setSSLProperties(prop);\n            System.out.println(\"Connecting to broker: \"+broker);\n            sampleClient.connect(connOpts);\n            System.out.println(\"Connected\");\n            System.out.println(\"Publishing message: \"+content);\n            MqttMessage message = new MqttMessage(content.getBytes());\n            message.setQos(qos);\n            sampleClient.publish(topic, message);\n            System.out.println(\"Message published\");\n            sampleClient.disconnect();\n            System.out.println(\"Disconnected\");\n            System.exit(0);\n        } catch(MqttException me) {\n            System.out.println(\"reason \"+me.getReasonCode());\n            System.out.println(\"msg \"+me.getMessage());\n            System.out.println(\"loc \"+me.getLocalizedMessage());\n            System.out.println(\"cause \"+me.getCause());\n            System.out.println(\"excep \"+me);\n            me.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        MqttPublishSample sample = new MqttPublishSample();\n        sample.run();\n    }\n}\n\nTCP\u63a5\u7d9a\u306e\u5834\u5408\u3068\u306e\u9055\u3044\u304c2\u70b9\u3042\u308a\u307e\u3059\u3002\n1\u3064\u76ee\u306f\u30d6\u30ed\u30fc\u30ab\u306eURI\u3002\n* \u30b9\u30ad\u30fc\u30e0\u3068\u3057\u3066ssl\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30fc\u30c8\u306f8883\u3067\u3059\uff08\u3053\u308c\u306f\u30d6\u30ed\u30fc\u30ab\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u307e\u3059\uff09\u3002\nString broker       = \"ssl://test.mosquitto.org:8883\";\n\n2\u3064\u76ee\u306fSSL\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u3002\n* Properties\u3092\u4f5c\u6210\u3057\u3001MqttConnectOptions.setSslProperties\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n* \u6700\u4f4e\u9650\u3001\u30ea\u30e2\u30fc\u30c8\u30db\u30b9\u30c8\u306e\u8a3c\u660e\u66f8\uff08\u3042\u308b\u3044\u306f\u8a3c\u660e\u66f8\u30c1\u30a7\u30fc\u30f3\uff09\u3092\u542b\u3080\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\"com.ibm.ssl.trustStore\"\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n  * \u306a\u304a\u3001keytool\u3067\u30ad\u30fc\u30b9\u30c8\u30a2\u3092\u6271\u3046\u5834\u5408\u306f\u5b8c\u5168\u6027\u306e\u7dad\u6301\u306e\u305f\u3081\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001Java API \u3067\u6271\u3046\u8a3c\u660e\u66f8\u3092\u6271\u3046\u5834\u5408\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6307\u5b9a\u304c\u4e0d\u8981\u306e\u3088\u3046\u3067\u3059\u3002\nMqttConnectOptions connOpts = new MqttConnectOptions();\nconnOpts.setCleanSession(true);\nProperties prop = new Properties();\nprop.setProperty(\"com.ibm.ssl.trustStore\", trustStore);\nconnOpts.setSSLProperties(prop);\n\n\u5b9f\u969b\u306b\u5b9f\u884c\u3059\u308b\u3068\u3046\u307e\u304f\u63a5\u7d9a\u3067\u304d\u307e\u3057\u305f\u3002\nConnecting to broker: ssl://test.mosquitto.org:8883\nConnected\nPublishing message: Message from MqttPublishSample\nMessage published\nDisconnected\n\n\n\u4eca\u56de\u306e\u4f8b\u3067\u306f\u3001mosquitto\u306e\u30c6\u30b9\u30c8\u30b5\u30fc\u30d0\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\n\n## \u8a3c\u660e\u66f8\u3092\u53d6\u5f97\u3059\u308b\n\nmosquitto\u306e\u8a3c\u660e\u66f8\u306f\u516c\u958b\u3055\u308c\u3066\u3044\u306e\u3067\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```\n$ wget http://test.mosquitto.org/ssl/mosquitto.org.crt\n```\n\nkeytool\uff08Java\u4ed8\u5c5e\u306e\u9375\u30fb\u8a3c\u660e\u66f8\u7ba1\u7406\u7528\u30c4\u30fc\u30eb\uff09\u3067\u8a3c\u660e\u66f8\u306e\u5185\u5bb9\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\n$ keytool -printcert -file mosquitto.org.crt\nkeytool -printcert -file mosquitto.org.crt\n\u6240\u6709\u8005: EMAILADDRESS=roger@atchoo.org, CN=mosquitto.org, OU=CA, O=Mosquitto, L=Derby, ST=United Kingdom, C=GB\n\u767a\u884c\u8005: EMAILADDRESS=roger@atchoo.org, CN=mosquitto.org, OU=CA, O=Mosquitto, L=Derby, ST=United Kingdom, C=GB\n\u30b7\u30ea\u30a2\u30eb\u756a\u53f7: e0fadcf9578c98bc\n\u6709\u52b9\u671f\u9593\u306e\u958b\u59cb\u65e5: Sat Jun 30 07:11:59 JST 2012\u7d42\u4e86\u65e5: Tue Jun 28 07:11:59 JST 2022\n\u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8:\n\t MD5:  AB:F2:AF:A0:94:9E:08:64:F7:1D:5F:9B:EE:88:D1:8F\n\t SHA1: A2:79:92:D3:42:0C:89:F2:93:D3:51:37:8B:A5:F5:67:5F:74:FE:3C\n\t SHA256: D1:56:59:4D:32:A9:9D:0C:72:66:5B:5F:94:3C:30:34:D0:7C:DB:A3:60:51:A4:62:56:13:7F:63:1D:2D:F4:E6\n\t \u7f72\u540d\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u540d: SHA1withRSA\n\t \u30d0\u30fc\u30b8\u30e7\u30f3: 3\n(\u7701\u7565)\n```\n\n## \u8a3c\u660e\u66f8\u3092\u30ad\u30fc\u30b9\u30c8\u30a2\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\n\nJava\u3067\u79d8\u5bc6\u9375\u3084\u8a3c\u660e\u66f8\u3092\u6271\u3046\u5834\u5408\u3001\u30ad\u30fc\u30b9\u30c8\u30a2\u3068\u3044\u3046\u9375\u3084\u8a3c\u660e\u66f8\u3092\u7ba1\u7406\u3059\u308b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n```\n$ keytool \\\n  -import \\\n  -alias rootCA \\\n  -trustcacerts \\\n  -keystore ./crt.jks \\\n  -storetype jks \\\n  -storepass testtest \\\n  -file ./mosquitto.org.crt\n```\n\n\n\u3053\u3053\u3067\u306f\u4ee5\u4e0b\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n* \u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u8a3c\u660e\u66f8\u3068\u3057\u3066mosquitto.org.crt\u3092\u6307\u5b9a\u3002\n* \u4e0a\u8a18\u8a3c\u660e\u66f8\u306brootCA\u3068\u3044\u3046\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u3064\u3051\u308b\u3002\n* \u30a4\u30f3\u30dd\u30fc\u30c8\u5148\u306e\u30ad\u30fc\u30b9\u30c8\u30a2\u540d\u306fcrt.jks\n* \u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u5f62\u5f0f\u306fjks\uff08Java Key Store\uff09\n* \u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u306ftesttest\n\n\u4ee5\u4e0b\u3067\u30ad\u30fc\u30b9\u30c8\u30a2\u306b\u8a3c\u660e\u66f8\u304c\u30a4\u30f3\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```\n$ keytool \\\n  -list \\\n  -keystore ./crt.jks \\\n  -alias rootCA \\\n  -storepass testtest\nrootCA,2016/11/30, trustedCertEntry, \n\u8a3c\u660e\u66f8\u306e\u30d5\u30a3\u30f3\u30ac\u30d7\u30ea\u30f3\u30c8(SHA1): A2:79:92:D3:42:0C:89:F2:93:D3:51:37:8B:A5:F5:67:5F:74:FE:3C\n```\n\n## Paho Java\u3067MQTTS\uff08MQTT over TLS\uff09\u63a5\u7d9a\u3059\u308b\n\n\u901a\u5e38\u306eTCP\u63a5\u7d9a\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u4ee5\u4e0b\u306eURL\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nhttps://eclipse.org/paho/clients/java/\n\n\u4ee5\u4e0b\u304cTLS\u63a5\u7d9a\u7248\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```\nimport org.eclipse.paho.client.mqttv3.MqttClient;\nimport org.eclipse.paho.client.mqttv3.MqttConnectOptions;\nimport org.eclipse.paho.client.mqttv3.MqttException;\nimport org.eclipse.paho.client.mqttv3.MqttMessage;\nimport org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;\n\nimport java.util.Properties;\n\npublic class MqttPublishSample {\n    void run () {\n        String topic        = \"MQTT Examples\";\n        String content      = \"Message from MqttPublishSample\";\n        int qos             = 2;\n        String broker       = \"ssl://test.mosquitto.org:8883\";\n        String clientId     = \"JavaSample\";\n        MemoryPersistence persistence = new MemoryPersistence();\n        String trustStore   = this.getClass().getResource(\"crt.jks\").getPath();\n\n        try {\n            MqttClient sampleClient = new MqttClient(broker, clientId, persistence);\n            MqttConnectOptions connOpts = new MqttConnectOptions();\n            connOpts.setCleanSession(true);\n            Properties prop = new Properties();\n            prop.setProperty(\"com.ibm.ssl.trustStore\", trustStore);\n            connOpts.setSSLProperties(prop);\n            System.out.println(\"Connecting to broker: \"+broker);\n            sampleClient.connect(connOpts);\n            System.out.println(\"Connected\");\n            System.out.println(\"Publishing message: \"+content);\n            MqttMessage message = new MqttMessage(content.getBytes());\n            message.setQos(qos);\n            sampleClient.publish(topic, message);\n            System.out.println(\"Message published\");\n            sampleClient.disconnect();\n            System.out.println(\"Disconnected\");\n            System.exit(0);\n        } catch(MqttException me) {\n            System.out.println(\"reason \"+me.getReasonCode());\n            System.out.println(\"msg \"+me.getMessage());\n            System.out.println(\"loc \"+me.getLocalizedMessage());\n            System.out.println(\"cause \"+me.getCause());\n            System.out.println(\"excep \"+me);\n            me.printStackTrace();\n        }\n    }\n\n    public static void main(String[] args) {\n        MqttPublishSample sample = new MqttPublishSample();\n        sample.run();\n    }\n}\n```\n\nTCP\u63a5\u7d9a\u306e\u5834\u5408\u3068\u306e\u9055\u3044\u304c2\u70b9\u3042\u308a\u307e\u3059\u3002\n\n1\u3064\u76ee\u306f\u30d6\u30ed\u30fc\u30ab\u306eURI\u3002\n* \u30b9\u30ad\u30fc\u30e0\u3068\u3057\u3066ssl\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30fc\u30c8\u306f8883\u3067\u3059\uff08\u3053\u308c\u306f\u30d6\u30ed\u30fc\u30ab\u306e\u8a2d\u5b9a\u306b\u3088\u308a\u307e\u3059\uff09\u3002\n\n```\nString broker       = \"ssl://test.mosquitto.org:8883\";\n```\n\n2\u3064\u76ee\u306fSSL\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u308b\u3053\u3068\u3002\n* Properties\u3092\u4f5c\u6210\u3057\u3001MqttConnectOptions.setSslProperties\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n* \u6700\u4f4e\u9650\u3001\u30ea\u30e2\u30fc\u30c8\u30db\u30b9\u30c8\u306e\u8a3c\u660e\u66f8\uff08\u3042\u308b\u3044\u306f\u8a3c\u660e\u66f8\u30c1\u30a7\u30fc\u30f3\uff09\u3092\u542b\u3080\u30ad\u30fc\u30b9\u30c8\u30a2\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\"com.ibm.ssl.trustStore\"\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n  * \u306a\u304a\u3001keytool\u3067\u30ad\u30fc\u30b9\u30c8\u30a2\u3092\u6271\u3046\u5834\u5408\u306f\u5b8c\u5168\u6027\u306e\u7dad\u6301\u306e\u305f\u3081\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001Java API \u3067\u6271\u3046\u8a3c\u660e\u66f8\u3092\u6271\u3046\u5834\u5408\u306f\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6307\u5b9a\u304c\u4e0d\u8981\u306e\u3088\u3046\u3067\u3059\u3002\n\n```\nMqttConnectOptions connOpts = new MqttConnectOptions();\nconnOpts.setCleanSession(true);\nProperties prop = new Properties();\nprop.setProperty(\"com.ibm.ssl.trustStore\", trustStore);\nconnOpts.setSSLProperties(prop);\n```\n\n\u5b9f\u969b\u306b\u5b9f\u884c\u3059\u308b\u3068\u3046\u307e\u304f\u63a5\u7d9a\u3067\u304d\u307e\u3057\u305f\u3002\n\n```\nConnecting to broker: ssl://test.mosquitto.org:8883\nConnected\nPublishing message: Message from MqttPublishSample\nMessage published\nDisconnected\n```\n", "tags": ["Java", "mosquitto", "mqtt", "TLS", "paho"]}