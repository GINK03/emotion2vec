{"context": "\u3053\u306e\u8a18\u4e8b\u306fKotlin Advent Calendar 2016\u306e\u6700\u7d42\u65e5\u306e\u6295\u7a3f\u3067\u3059\u3002\n\u524d\u65e5\u306frabitarochan\u3055\u3093\u306eKotlin Compiler Plugin (kotlin-allopen) \u3092\u8ffd\u3044\u304b\u3051\u308b\u3067\u3057\u305f\u3002\n\u521d\u65e5\u306fngsw_taro\u3055\u3093\u306eKotlin2016\u307e\u3068\u3081\u3067\u3057\u305f\u3002\n\n\u306f\u3058\u3081\u306b\n\u79c1\u81ea\u8eab\u306f2015\u5e74\u306e3\u6708\u3054\u308d\u304b\u3089Kotlin\u3067\u306eAndorid\u958b\u767a\u3092\u59cb\u3081\u307e\u3057\u305f\u306e\u3067\u3001\u30bf\u30a4\u30c8\u30eb\u306b\u53cd\u3057\u3066\u307e\u3059\u304c\u3001Kotlin\u6b74\u306f\u7d042\u5e74\u3050\u3089\u3044\u3067\u3059\u3002\u307e\u305f\u3001\u53bb\u5e74\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n2016\u5e74\u3001Kotlin\u3067Android\u958b\u767a\u3059\u308b\u65b9\u3078\n\n2016\u5e74\u306fKotlin\u306e\u8a18\u5ff5\u3059\u3079\u304dver1.0\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u5e74\u3067\u3057\u305f\u304c\u3001\u30c1\u30fc\u30e0\u306e\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4e00\u3064\u3067\u3082Kotlin\u304c\u4f7f\u308f\u308c\u305f\u308a\u3001\u65b0\u898f\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u3044\u304f\u3064\u304b\u306fKotlin\u3067\u958b\u767a\u3055\u308c\u3001Android\u7814\u4fee\u5408\u5bbf\u3067\u3082\u53c2\u52a0\u8005\u306e\u534a\u6570\u304cKotlin\u3092\u9078\u629e\u3059\u308b\u306a\u3069\u3001\u793e\u5185\u7684\u306b\u3082Kotlin\u304c\u76db\u308a\u4e0a\u304c\u3063\u305f\u4e00\u5e74\u3067\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u306e\u793e\u5185\u3067\u884c\u3063\u305f\u7814\u4fee\u5408\u5bbf\u306b\u304a\u3044\u3066\u3001\u4eca\u307e\u3067Java\u3067\u66f8\u3044\u3066\u3044\u305fAndroid\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u72ec\u5b66\u3067Kotlin\u3067\u66f8\u3044\u3066\u3082\u3089\u3063\u3066\u3001\u305d\u306e\u5f8c\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u3067\u300c\u3053\u3046\u3059\u308c\u3070\u3082\u3063\u3068Kotlin\u3063\u307d\u304f\u306a\u308b\u304b\u3082\uff1f\u300d\u3068\u3044\u3046\u89b3\u70b9\u3067\u6307\u6458\u3057\u305f\u4e8b\u9805\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nKotlin\u306f\u69d8\u3005\u306a\u66f8\u304d\u65b9\u304c\u51fa\u6765\u308b\u306e\u3067\u3001\u4eba\u3084\u30c1\u30fc\u30e0\u306b\u3088\u3063\u3066\u30eb\u30fc\u30eb\u306f\u9055\u3046\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u306b\u304a\u3044\u3066\u306f\u3001\u300c\u3088\u308a\u8a18\u8ff0\u91cf\u3092\u6e1b\u3089\u3059\u300d\u89b3\u70b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u304b\u3089Kotlin\u3067Android\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u5c11\u3057\u3067\u3082\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\nJava\u3067\u66f8\u3044\u3066\u305fAndroid\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u521d\u3081\u3066Kotlin\u3067\u66f8\u3044\u3066\u307f\u305f\n\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u306e\u524d\u5f8c\u306e\u30b3\u30fc\u30c9\u306e\u6bd4\u8f03\u3092\u8f09\u305b\u307e\u3059\u3002\n\ngetter/setter\nJava\u3060\u3068field\u306bgetter\u3084setter\u3092\u4f5c\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001Kotlin\u306e\u30af\u30e9\u30b9\u306b\u306f\u57fa\u672c\u7684\u306b\u306ffield\u306f\u306a\u304f\u3001property\u3092\u7528\u3044\u307e\u3059\u3002\nBefore\nclass MyClass {\n   private var size : Int = 0\n\n   fun getSize() {\n       return size\n   }\n}\n\nAfter\nclass MyClass {\n   var size : Int = 0\n}\n\nKotlin\u306eproperty\u306fgetter/setter\u3092\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059\u3002\nclass MyClass {\n    val list = mutableListOf<String>()\n    var size = 0\n        get() = list.size\n        private set\n}\n\n\nConstructor\nKotlin\u306fprimary constructor\u306e\u5b9a\u7fa9\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5b9a\u7fa9\u3092\u30af\u30e9\u30b9\u5ba3\u8a00\u306e\u7b87\u6240\u306b\u307e\u3068\u3081\u3066\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\nBefore\nclass Person {\n    val firstName: String\n    val lastName: String\n    private var age: Int\n\n    constructor(firstName: String, lastName: String, age: Int) {\n        this.firstName = firstName\n        this.lastName = lastName\n        this.age = age\n    }\n}\n\nAfter\nclass Person(val firstName: String, val lastName: String, private var age: Int) {\n\n}\n\n\nconst\nKotlin\u306b\u306fCompile-Time constants\u306e\u305f\u3081\u306econst\u3068\u3044\u3046\u4fee\u98fe\u53e5\u304c\u3042\u308a\u307e\u3059\u3002\nBefore\nclass MyClass {\n    val TOKEN_KEY = \"ACCESS_TOKEN_KEY\"\n}\n\nAfter\nclass MyClass {\n    companion object {\n        const val TOKEN_KEY = \"ACCESS_TOKEN_KEY\"\n    }\n}\n\n\nlistOf, mutableListOf\nKotlin\u306e\u6a19\u6e96\u95a2\u6570\u306b\u306flistOf\u3001mutableListOf\u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nBefore\nfun getList(): List<String> {\n    val list: MutableList<String> = ArrayList()\n    list.add(\"value1\")\n    list.add(\"value2\")\n    return list\n}\n\nAfter\nfun getList(): List<String> {\n    return listOf(\"value1\", \"value2\")\n}\n\nfun getList() = listOf(\"value1\", \"value2\")\n\n\nPair\nKotlin\u306b\u306fPair\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u4efb\u610f\u306e\u30af\u30e9\u30b9\u306e\u4e8c\u3064\u306e\u5024\u306e\u30bb\u30c3\u30c8\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3055\u3089\u306bto\u3068\u3044\u3046\u95a2\u6570\u304c\u3042\u308a\u3001\u3053\u308c\u3092\u7528\u3044\u308b\u3068Pair\u306e\u751f\u6210\u304c\u7c21\u5358\u306b\u884c\u3048\u307e\u3059\u3002\nBefore\nval params : List<Pair<String, Int>> = listOf(Pair(\"a\", 1), Pair(\"a\", 2))\n\nAfter\nval params = listOf(\"a\" to 1, \"a\" to 2)\n\nto\u306finfix\u304c\u3064\u3044\u3066\u3044\u308b\u62e1\u5f35\u95a2\u6570\u3067\u3059\u306e\u3067\u3001\u4e0a\u306e\u3088\u3046\u306a\u8868\u8a18\u304c\u51fa\u6765\u307e\u3059\u3002\nPair\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u51fa\u6765\u307e\u3059\u3002\nval (k, v) = \"a\" to 1\nv == 1 // true\n\nval map = mapOf(\"a\" to 1, \"b\" to 2)\nmap[\"a\"] == 1 // true\n\n\nData Class\nEntity\u306a\u3069\u306fData Class\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\ndata class User(val name: String, val age: Int)\n\n\nlazy\nDelegates property\u306elazy\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001property\u3092Non-null\u304b\u3064val\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nBefore\nvar webView: WebView? = null\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_detail)\n\n    webView = findViewById(R.id.webView) as WebView\n    webView?.setWebViewClient(WebViewClient())\n    webView?.settings?.javaScriptEnabled = true\n    webView?.loadUrl(\"https://kotlinlang.org/\")\n}\n\nAfter\nval webView by lazy {\n    (findViewById(R.id.webView) as WebView).apply {\n        setWebViewClient(WebViewClient())\n        settings?.javaScriptEnabled = true\n    }\n}\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_detail)\n    webView.loadUrl(\"https://kotlinlang.org/\")\n}\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u7528\u9014\u3067\u3042\u308c\u3070kotterknife\u3092\u7528\u3044\u308b\u306e\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u7528\u3044\u308b\u969b\u306fRetained Fragment\u306b\u95a2\u3059\u308bissue\u306b\u6c17\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nSmart Cast / Safe Cast\nCast\u3092\u7528\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u9762\u3067\u306f\u3001Smart Cast\u3084as?\u306b\u3088\u308bSafe Cast\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\nBefore\nif (recyclerView?.itemAnimator is SimpleItemAnimator) {\n    (recyclerView?.itemAnimator as SimpleItemAnimator).supportsChangeAnimations = false\n}\n\nAfter (Smart Cast)\nrecyclerView?.itemAnimator?.let {\n    if(it is SimpleItemAnimator) it.supportsChangeAnimations = false\n}\n\nAfter (Safe Cast)\n(recyclerView.itemAnimator as? SimpleItemAnimator)?.run {\n    supportsChangeAnimations = false\n}\n\n\nkotlin.collections\nkotlin.collections\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u591a\u304f\u306e\u4fbf\u5229\u306a\u62e1\u5f35\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nBefore\nfun getUrlWithQueryParams(baseUrl: String, param: List<Pair<String, String>>): String {\n    var url: String = baseUrl\n    var i: Int = 0\n    for (pair in param) {\n        if (i == 0) {\n            url += \"?\"\n        } else {\n            url += \"&\"\n        }\n        url += (pair.first + \"=\" + pair.second)\n        i++\n    }\n    return url\n}\n\nAfter\nfun getUrlWithQueryParams(baseUrl: String, params: List<Pair<String, String>>) =\nparams.foldIndexed(baseUrl, {i, url, param -> \"$url${if (i == 0) '?' else '&' }${param.first}=${param.second}\"}) \n\n\n\u6700\u5f8c\u306b\nKotlin\u3067\u958b\u767a\u3092\u59cb\u3081\u3066\u304b\u3089\u3001\u300cKotlin\u300d\u3067\u306eTwitter\u691c\u7d22\u3092\u305a\u3063\u3068\u898b\u7d9a\u3051\u3066\u307e\u3059\u304c\u3001\u3053\u306e1\u5e74\u306fKotlin\u304c\u5e83\u304f\u666e\u53ca\u3057\u305f1\u5e74\u3067\u3082\u3046\u81f3\u308b\u3068\u3053\u308d\u3067\u666e\u901a\u306b\u4f7f\u308f\u308c\u3060\u3057\u305f\u306a\u3001\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n2017\u5e74\u306f\u3082\u3063\u3068\u76db\u308a\u4e0a\u304c\u308b\u3067\u3057\u3087\u3046\uff01\n\u4eca\u5e74\u3082\u4e00\u5e74\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306f[Kotlin Advent Calendar 2016](http://qiita.com/advent-calendar/2016/kotlin)\u306e\u6700\u7d42\u65e5\u306e\u6295\u7a3f\u3067\u3059\u3002\n\u524d\u65e5\u306frabitarochan\u3055\u3093\u306e[Kotlin Compiler Plugin (kotlin-allopen) \u3092\u8ffd\u3044\u304b\u3051\u308b](http://rabitarochan.hatenablog.com/entry/2016/12/24/235955)\u3067\u3057\u305f\u3002\n\u521d\u65e5\u306fngsw_taro\u3055\u3093\u306e[Kotlin2016\u307e\u3068\u3081](http://taro.hatenablog.jp/entry/2016/12/01/074754)\u3067\u3057\u305f\u3002\n\n# \u306f\u3058\u3081\u306b\n\u79c1\u81ea\u8eab\u306f2015\u5e74\u306e3\u6708\u3054\u308d\u304b\u3089Kotlin\u3067\u306eAndorid\u958b\u767a\u3092\u59cb\u3081\u307e\u3057\u305f\u306e\u3067\u3001\u30bf\u30a4\u30c8\u30eb\u306b\u53cd\u3057\u3066\u307e\u3059\u304c\u3001Kotlin\u6b74\u306f\u7d042\u5e74\u3050\u3089\u3044\u3067\u3059\u3002\u307e\u305f\u3001\u53bb\u5e74\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n* [2016\u5e74\u3001Kotlin\u3067Android\u958b\u767a\u3059\u308b\u65b9\u3078](http://qiita.com/satorufujiwara/items/871c5b7b66c7691d82a8)\n\n2016\u5e74\u306fKotlin\u306e\u8a18\u5ff5\u3059\u3079\u304dver1.0\u306e\u30ea\u30ea\u30fc\u30b9\u306e\u5e74\u3067\u3057\u305f\u304c\u3001\u30c1\u30fc\u30e0\u306e[\u30de\u30a4\u30af\u30ed\u30b5\u30fc\u30d3\u30b9\u306e\u4e00\u3064\u3067\u3082Kotlin\u304c\u4f7f\u308f\u308c](http://blog.stormcat.io/entry/kotlin-with-spark)\u305f\u308a\u3001\u65b0\u898f\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u3044\u304f\u3064\u304b\u306fKotlin\u3067\u958b\u767a\u3055\u308c\u3001Android\u7814\u4fee\u5408\u5bbf\u3067\u3082\u53c2\u52a0\u8005\u306e\u534a\u6570\u304cKotlin\u3092\u9078\u629e\u3059\u308b\u306a\u3069\u3001\u793e\u5185\u7684\u306b\u3082Kotlin\u304c\u76db\u308a\u4e0a\u304c\u3063\u305f\u4e00\u5e74\u3067\u3057\u305f\u3002\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f\u305d\u306e\u793e\u5185\u3067\u884c\u3063\u305f\u7814\u4fee\u5408\u5bbf\u306b\u304a\u3044\u3066\u3001\u4eca\u307e\u3067Java\u3067\u66f8\u3044\u3066\u3044\u305fAndroid\u30a8\u30f3\u30b8\u30cb\u30a2\u306b\u72ec\u5b66\u3067Kotlin\u3067\u66f8\u3044\u3066\u3082\u3089\u3063\u3066\u3001\u305d\u306e\u5f8c\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u3067\u300c\u3053\u3046\u3059\u308c\u3070\u3082\u3063\u3068Kotlin\u3063\u307d\u304f\u306a\u308b\u304b\u3082\uff1f\u300d\u3068\u3044\u3046\u89b3\u70b9\u3067\u6307\u6458\u3057\u305f\u4e8b\u9805\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\nKotlin\u306f\u69d8\u3005\u306a\u66f8\u304d\u65b9\u304c\u51fa\u6765\u308b\u306e\u3067\u3001\u4eba\u3084\u30c1\u30fc\u30e0\u306b\u3088\u3063\u3066\u30eb\u30fc\u30eb\u306f\u9055\u3046\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u306b\u304a\u3044\u3066\u306f\u3001\u300c\u3088\u308a\u8a18\u8ff0\u91cf\u3092\u6e1b\u3089\u3059\u300d\u89b3\u70b9\u306b\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u308c\u304b\u3089Kotlin\u3067Android\u3092\u66f8\u3053\u3046\u3068\u601d\u3063\u3066\u3044\u308b\u65b9\u306e\u53c2\u8003\u306b\u5c11\u3057\u3067\u3082\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n# Java\u3067\u66f8\u3044\u3066\u305fAndroid\u30a8\u30f3\u30b8\u30cb\u30a2\u304c\u521d\u3081\u3066Kotlin\u3067\u66f8\u3044\u3066\u307f\u305f\n\n\u30b3\u30fc\u30c9\u30ec\u30d3\u30e5\u30fc\u306e\u524d\u5f8c\u306e\u30b3\u30fc\u30c9\u306e\u6bd4\u8f03\u3092\u8f09\u305b\u307e\u3059\u3002\n\n## getter/setter\n\nJava\u3060\u3068field\u306bgetter\u3084setter\u3092\u4f5c\u3063\u305f\u308a\u3057\u307e\u3059\u304c\u3001Kotlin\u306e\u30af\u30e9\u30b9\u306b\u306f\u57fa\u672c\u7684\u306b\u306ffield\u306f\u306a\u304f\u3001[property](https://kotlinlang.org/docs/reference/properties.html)\u3092\u7528\u3044\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nclass MyClass {\n   private var size : Int = 0\n\n   fun getSize() {\n       return size\n   }\n}\n```\nAfter\n\n```Kotlin\nclass MyClass {\n   var size : Int = 0\n}\n```\nKotlin\u306eproperty\u306fgetter/setter\u3092\u81ea\u7531\u306b\u5909\u66f4\u3067\u304d\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u3067\u304d\u307e\u3059\u3002\n\n```Kotlin\nclass MyClass {\n    val list = mutableListOf<String>()\n    var size = 0\n        get() = list.size\n        private set\n}\n```\n\n## Constructor\n\nKotlin\u306fprimary constructor\u306e\u5b9a\u7fa9\u3001\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5b9a\u7fa9\u3092\u30af\u30e9\u30b9\u5ba3\u8a00\u306e\u7b87\u6240\u306b\u307e\u3068\u3081\u3066[\u8a18\u8ff0\u3059\u308b](https://kotlinlang.org/docs/reference/classes.html)\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\nBefore\n\n```Kotlin\nclass Person {\n    val firstName: String\n    val lastName: String\n    private var age: Int\n\n    constructor(firstName: String, lastName: String, age: Int) {\n        this.firstName = firstName\n        this.lastName = lastName\n        this.age = age\n    }\n}\n```\n\nAfter\n\n```Kotlin\nclass Person(val firstName: String, val lastName: String, private var age: Int) {\n\n}\n```\n\n## const\n\nKotlin\u306b\u306f[Compile-Time constants](https://kotlinlang.org/docs/reference/properties.html#compile-time-constants)\u306e\u305f\u3081\u306e`const`\u3068\u3044\u3046\u4fee\u98fe\u53e5\u304c\u3042\u308a\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nclass MyClass {\n    val TOKEN_KEY = \"ACCESS_TOKEN_KEY\"\n}\n```\n\nAfter\n\n```Kotlin\nclass MyClass {\n    companion object {\n        const val TOKEN_KEY = \"ACCESS_TOKEN_KEY\"\n    }\n}\n```\n\n## listOf, mutableListOf\n\nKotlin\u306e\u6a19\u6e96\u95a2\u6570\u306b\u306f[listOf](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/list-of.html)\u3001[mutableListOf](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/mutable-list-of.html)\u3068\u3044\u3046\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nfun getList(): List<String> {\n    val list: MutableList<String> = ArrayList()\n    list.add(\"value1\")\n    list.add(\"value2\")\n    return list\n}\n```\nAfter\n\n```Kotlin\nfun getList(): List<String> {\n    return listOf(\"value1\", \"value2\")\n}\n```\n\n```Kotlin\nfun getList() = listOf(\"value1\", \"value2\")\n```\n\n## Pair\n\nKotlin\u306b\u306f[Pair](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/-pair/)\u3068\u3044\u3046\u30af\u30e9\u30b9\u304c\u3042\u308a\u3001\u4efb\u610f\u306e\u30af\u30e9\u30b9\u306e\u4e8c\u3064\u306e\u5024\u306e\u30bb\u30c3\u30c8\u3092\u6301\u3064\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3055\u3089\u306b[`to`](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin/to.html)\u3068\u3044\u3046\u95a2\u6570\u304c\u3042\u308a\u3001\u3053\u308c\u3092\u7528\u3044\u308b\u3068`Pair`\u306e\u751f\u6210\u304c\u7c21\u5358\u306b\u884c\u3048\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nval params : List<Pair<String, Int>> = listOf(Pair(\"a\", 1), Pair(\"a\", 2))\n```\n\nAfter\n\n```Kotlin\nval params = listOf(\"a\" to 1, \"a\" to 2)\n```\n`to`\u306f[`infix`](https://kotlinlang.org/docs/reference/functions.html#infix-notation)\u304c\u3064\u3044\u3066\u3044\u308b\u62e1\u5f35\u95a2\u6570\u3067\u3059\u306e\u3067\u3001\u4e0a\u306e\u3088\u3046\u306a\u8868\u8a18\u304c\u51fa\u6765\u307e\u3059\u3002\nPair\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3082\u51fa\u6765\u307e\u3059\u3002\n\n```Kotlin\nval (k, v) = \"a\" to 1\nv == 1 // true\n\nval map = mapOf(\"a\" to 1, \"b\" to 2)\nmap[\"a\"] == 1 // true\n```\n\n## Data Class\n\nEntity\u306a\u3069\u306f[Data Class](https://kotlinlang.org/docs/reference/data-classes.html)\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u306e\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```Kotlin\ndata class User(val name: String, val age: Int)\n```\n\n## lazy\n\nDelegates property\u306e[`lazy`](https://kotlinlang.org/docs/reference/delegated-properties.html#lazy)\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001property\u3092Non-null\u304b\u3064val\u306b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nvar webView: WebView? = null\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_detail)\n  \n    webView = findViewById(R.id.webView) as WebView\n    webView?.setWebViewClient(WebViewClient())\n    webView?.settings?.javaScriptEnabled = true\n    webView?.loadUrl(\"https://kotlinlang.org/\")\n}\n```\n\nAfter\n\n```Kotlin\nval webView by lazy {\n    (findViewById(R.id.webView) as WebView).apply {\n        setWebViewClient(WebViewClient())\n        settings?.javaScriptEnabled = true\n    }\n}\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_detail)\n    webView.loadUrl(\"https://kotlinlang.org/\")\n}\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u7528\u9014\u3067\u3042\u308c\u3070[kotterknife](https://github.com/JakeWharton/kotterknife)\u3092\u7528\u3044\u308b\u306e\u304c\u826f\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u7528\u3044\u308b\u969b\u306f[Retained Fragment\u306b\u95a2\u3059\u308bissue](https://github.com/JakeWharton/kotterknife/issues/5)\u306b\u6c17\u3092\u3064\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## Smart Cast / Safe Cast\n\nCast\u3092\u7528\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u5834\u9762\u3067\u306f\u3001[Smart Cast](https://kotlinlang.org/docs/reference/typecasts.html#smart-casts)\u3084`as?`\u306b\u3088\u308b[Safe Cast](https://kotlinlang.org/docs/reference/typecasts.html#safe-nullable-cast-operator)\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nif (recyclerView?.itemAnimator is SimpleItemAnimator) {\n    (recyclerView?.itemAnimator as SimpleItemAnimator).supportsChangeAnimations = false\n}\n```\n\nAfter (Smart Cast)\n\n```Kotlin\nrecyclerView?.itemAnimator?.let {\n    if(it is SimpleItemAnimator) it.supportsChangeAnimations = false\n}\n```\n\nAfter (Safe Cast)\n\n```Kotlin\n(recyclerView.itemAnimator as? SimpleItemAnimator)?.run {\n    supportsChangeAnimations = false\n}\n```\n\n## kotlin.collections\n\n[kotlin.collections](https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.collections/index.html)\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u591a\u304f\u306e\u4fbf\u5229\u306a\u62e1\u5f35\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nBefore\n\n```Kotlin\nfun getUrlWithQueryParams(baseUrl: String, param: List<Pair<String, String>>): String {\n    var url: String = baseUrl\n    var i: Int = 0\n    for (pair in param) {\n        if (i == 0) {\n            url += \"?\"\n        } else {\n            url += \"&\"\n        }\n        url += (pair.first + \"=\" + pair.second)\n        i++\n    }\n    return url\n}\n```\n\nAfter\n\n```Kotlin\nfun getUrlWithQueryParams(baseUrl: String, params: List<Pair<String, String>>) =\nparams.foldIndexed(baseUrl, {i, url, param -> \"$url${if (i == 0) '?' else '&' }${param.first}=${param.second}\"}) \n```\n\n# \u6700\u5f8c\u306b\n\nKotlin\u3067\u958b\u767a\u3092\u59cb\u3081\u3066\u304b\u3089\u3001[\u300cKotlin\u300d\u3067\u306eTwitter\u691c\u7d22](https://twitter.com/search?f=tweets&vertical=default&q=kotlin)\u3092\u305a\u3063\u3068\u898b\u7d9a\u3051\u3066\u307e\u3059\u304c\u3001\u3053\u306e1\u5e74\u306fKotlin\u304c\u5e83\u304f\u666e\u53ca\u3057\u305f1\u5e74\u3067\u3082\u3046\u81f3\u308b\u3068\u3053\u308d\u3067\u666e\u901a\u306b\u4f7f\u308f\u308c\u3060\u3057\u305f\u306a\u3001\u3068\u3044\u3046\u5370\u8c61\u3067\u3059\u3002\n2017\u5e74\u306f\u3082\u3063\u3068\u76db\u308a\u4e0a\u304c\u308b\u3067\u3057\u3087\u3046\uff01\n\n\u4eca\u5e74\u3082\u4e00\u5e74\u304a\u75b2\u308c\u69d8\u3067\u3057\u305f\u3002\n\n\n\n\n\n", "tags": ["Kotlin", "Android"]}