{"tags": ["C#4", ".NET4"], "context": " More than 1 year has passed since last update.\n\n\u8da3\u65e8\nQiita: \u4e8c\u6b21\u5143List\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4e0a\u8a18\u4e8b\u306e\uff29\uff26\u7248\u3067\u3059\u3002\n\u5143\u8a18\u4e8b\u3067\u306fList<List<string>>\u3078\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306fDataTable\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u8aad\u8fbc\u90e8\n\nProgram.cs\n\nstatic DataTable LoadTable( string path, Encoding encoding )\n{\n    var rows = from x in File.ReadLines( path, encoding )\n                select x.Split( new[ ] { '\\t' }, StringSplitOptions.None );\n\n    var dataTable = new DataTable( );\n    using ( var enumerator = rows.GetEnumerator( ) )\n    {\n        if ( enumerator.MoveNext( ) )\n        {\n            var columns = from x in enumerator.Current\n                            select new DataColumn( x );\n\n            dataTable.Columns.AddRange( columns.ToArray( ) );\n        }\n        while ( enumerator.MoveNext( ) )\n        {\n            dataTable.Rows.Add( enumerator.Current );\n        }\n    }\n    return dataTable;\n}\n\n\n\n\n\u8868\u793a\u90e8\n\nProgram.cs\n\nstatic void Main( string[ ] args )\n{\n    using ( var table = LoadTable( \"sample.txt\", Encoding.UTF8 ) )\n    {\n        var columns = from x in table.Columns.Cast<DataColumn>( )\n                        select x.ColumnName;\n\n        Console.WriteLine( string.Join( \" \", columns ) );\n\n        var rows = from x in table.Rows.Cast<DataRow>( )\n                    select x.ItemArray;\n\n        foreach ( var row in rows )\n        {\n            Console.WriteLine( string.Join( \" \", row ) );\n        }\n    }\n    Console.ReadKey( );\n}\n\n\n\n## \u8da3\u65e8\n\n[Qiita: \u4e8c\u6b21\u5143List\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f][L1]\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001\u4e0a\u8a18\u4e8b\u306e\uff29\uff26\u7248\u3067\u3059\u3002\n\u5143\u8a18\u4e8b\u3067\u306f```List<List<string>>```\u3078\u683c\u7d0d\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f```DataTable```\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## \u8aad\u8fbc\u90e8\n\n```csharp:Program.cs\n\nstatic DataTable LoadTable( string path, Encoding encoding )\n{\n\tvar rows = from x in File.ReadLines( path, encoding )\n\t\t\t\tselect x.Split( new[ ] { '\\t' }, StringSplitOptions.None );\n\n\tvar dataTable = new DataTable( );\n\tusing ( var enumerator = rows.GetEnumerator( ) )\n\t{\n\t\tif ( enumerator.MoveNext( ) )\n\t\t{\n\t\t\tvar columns = from x in enumerator.Current\n\t\t\t\t\t\t\tselect new DataColumn( x );\n\n\t\t\tdataTable.Columns.AddRange( columns.ToArray( ) );\n\t\t}\n\t\twhile ( enumerator.MoveNext( ) )\n\t\t{\n\t\t\tdataTable.Rows.Add( enumerator.Current );\n\t\t}\n\t}\n\treturn dataTable;\n}\n\n```\n\n## \u8868\u793a\u90e8\n\n```csharp:Program.cs\n\nstatic void Main( string[ ] args )\n{\n\tusing ( var table = LoadTable( \"sample.txt\", Encoding.UTF8 ) )\n\t{\n\t\tvar columns = from x in table.Columns.Cast<DataColumn>( )\n\t\t\t\t\t\tselect x.ColumnName;\n\n\t\tConsole.WriteLine( string.Join( \" \", columns ) );\n\n\t\tvar rows = from x in table.Rows.Cast<DataRow>( )\n\t\t\t\t\tselect x.ItemArray;\n\n\t\tforeach ( var row in rows )\n\t\t{\n\t\t\tConsole.WriteLine( string.Join( \" \", row ) );\n\t\t}\n\t}\n\tConsole.ReadKey( );\n}\n\n```\n\n[L1]: http://qiita.com/yukkuribemani/items/62206eac33c31394a8df \"\u4e8c\u6b21\u5143List\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306b\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\"\n"}