{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u81ea\u5206\u304cVC++\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u6642\u3001\u73fe\u5728\u6642\u523b\u306e\u53d6\u5f97\u306b\u306ftime()\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306e\u5909\u63db\u3092\u884c\u3046\u306b\u3042\u305f\u308a\u30cd\u30c3\u30c8\u4e0a\u3067\u6642\u523b\u95a2\u9023\u51e6\u7406\u3067\u8abf\u3079\u3066\u3044\u308b\u3068\u5168\u7136\u99b4\u67d3\u307f\u306e\u306a\u3044\u6642\u523b\u95a2\u9023\u306e\u51e6\u7406\u304c\u6ca2\u5c71\u51fa\u3066\u304d\u305f\u306e\u3067\u3001\u540c\u69d8\u306b\u56f0\u60d1\u3055\u308c\u3066\u3044\u308b\u65b9\u306e\u52a9\u3051\u3068\u306a\u308c\u3070\u3068\u601d\u3044\u3001\u4e3b\u306a\u6642\u523b\u95a2\u9023\u306e\u95a2\u6570\u306e\u4f7f\u7528\u65b9\u6cd5\u306a\u3069\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u4eca\u56de\u306e\u78ba\u8a8d\u74b0\u5883\u306b\u306fWindows7 Pro. SP1(64bit)\u3001Microsoft Visual Studio Community 2013 Update 5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u203b2016/2/22 22:00 CTime\u30af\u30e9\u30b9\u306e\u51e6\u7406\u7d50\u679c\u4ee5\u964d\u306e\u7b87\u6240\u304b\u52a0\u7b46\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u3000\u8a73\u7d30\u306f\u7de8\u96c6\u5c65\u6b74\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\nVC++\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u6642\u523b\u95a2\u9023\u51e6\u7406\nVC++\u306fC\u8a00\u8a9e\u3001C++\u3001MFC\u3001STL\u3001ATL\u306a\u3069\u8272\u3005\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3056\u3063\u3068\u63a2\u3057\u3066\u51fa\u3066\u304d\u305f\u4e3b\u306a\u6642\u523b\u95a2\u9023\u51e6\u7406\u3001\u307e\u305f\u306f\u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\ntime.h\nWin32 API\natltime.h\n\n\ntime.h\ntime()\ngmtime_s()\nlocaltime_s()\nmktime()\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/634ca0c2.aspx\n\nWin32 API\nGetSystemTime()\nGetLocalTime()\nSystemTimeToFileTime()\nFileTimeToSystemTime()\nFileTimeToLocalFileTime()\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/cc429379.aspx\n\natltime.h\nCTime\u30af\u30e9\u30b9\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/78zb0ese.aspx\n\n\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\n\u4eca\u56de\u306einclude\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nDateTimeConvert.cpp\n#include \"stdafx.h\"\n#include <iostream>\n#include \"time.h\"\n#include \"atltime.h\"\n\nusing namespace std;\n\n\n\u3053\u3053\u304b\u3089\u5b9f\u969b\u306e\u51e6\u7406\u3067\u3059\u3002\n\u307e\u305a\u306ftime.h\u306e\u51e6\u7406\u3002\n\nDateTimeConvert.cpp\n    // 1. <time.h>\n    time_t curUTC_sec;\n    time_t cnvTime_sec;\n    struct tm tmUTC;\n    struct tm tmLocal;\n\n    // Get Current Time(UTC sec.)\n    time(&curUTC_sec);\n\n    // UTC sec. -> UTC\n    char ascstr[32];\n    gmtime_s(&tmUTC, &curUTC_sec);\n    asctime_s(ascstr, sizeof(ascstr), &tmUTC);\n    cout << \"tmUTC  :\" << ascstr;\n\n    // UTC sec. -> Local Time\n    localtime_s(&tmLocal, &curUTC_sec);\n    asctime_s(ascstr, sizeof(ascstr), &tmLocal);\n    cout << \"tmLocal:\" << ascstr;\n    cout << endl;\n\n    // Local Time -> UTC sec.\n    cnvTime_sec = mktime(&tmLocal);\n    cout << \"curUTC_sec  :\" << curUTC_sec << endl;\n    cout << \"cnvTime_sec :\" << cnvTime_sec << endl;\n    cout << endl;\n\n\n\n\n\u51e6\u7406\u7d50\u679c\ntmUTC  :Sun Feb 21 03:06:16 2016\ntmLocal:Sun Feb 21 12:06:16 2016\n\ncurUTC_sec  :1456023976\ncnvTime_sec :1456023976\n\n\n\u51e6\u7406\u7d50\u679c\u3088\u308a\nlocaltime_s()\u306e\u51e6\u7406\u7d50\u679c\u304ctmUTC+09:00\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001mktime()\u3067\u306etmLocal\u306e\u5909\u63db\u51e6\u7406\u7d50\u679c\u304ctime()\u306e\u51e6\u7406\u7d50\u679c\u3068\u540c\u3058\u5024\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u5404\u51e6\u7406\u306e\u95a2\u4fc2\u56f3\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n\u7d9a\u3044\u3066Win32 API\u3067\u3059\u3002\n\nDateTimeConvert.cpp\n    // 2. Win32 API\n    SYSTEMTIME st_UTC;\n    SYSTEMTIME st_Local;\n\n    // Get Current SYSTEMTIME\n    GetSystemTime(&st_UTC);\n    GetLocalTime(&st_Local);\n    CTime ct1(st_UTC);\n    CTime ct2(st_Local);\n    CString ct_str1 = ct1.Format(L\"st_UTC   = %Y/%m/%d %H:%M:%S \\n\");\n    CString ct_str2 = ct2.Format(L\"st_Local = %Y/%m/%d %H:%M:%S \\n\");\n    cout << \"Get Current SYSTEMTIME\" << endl;\n    _tprintf((LPCTSTR)ct_str1);\n    _tprintf((LPCTSTR)ct_str2);\n    cout << endl;\n\n    cout << \"SYSTEMTIME -> FILETIME\" << endl;\n    FILETIME ft;\n    FILETIME ft_Local;\n    SystemTimeToFileTime(&st_UTC, &ft);\n    SystemTimeToFileTime(&st_Local, &ft_Local);\n    CTime ct3(ft);\n    CTime ct4(ft_Local);\n    CString ct_str3 = ct3.Format(L\"ft       = %Y/%m/%d %H:%M:%S \\n\");\n    CString ct_str4 = ct4.Format(L\"ft_Local = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)ct_str3);\n    _tprintf((LPCTSTR)ct_str4);\n    cout << endl;\n\n    cout << \"FILETIME -> SYSTEMTIME\" << endl;\n    SYSTEMTIME st_cnvFrom_ft;\n    SYSTEMTIME st_cnvFrom_ft_Local;\n    FileTimeToSystemTime(&ft, &st_cnvFrom_ft);\n    FileTimeToSystemTime(&ft_Local, &st_cnvFrom_ft_Local);\n    CTime ct5(st_cnvFrom_ft);\n    CTime ct6(st_cnvFrom_ft_Local);\n    CString ct_str5 = ct5.Format(L\"st_From_ft       = %Y/%m/%d %H:%M:%S \\n\");\n    CString ct_str6 = ct6.Format(L\"st_From_ft_Local = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)ct_str5);\n    _tprintf((LPCTSTR)ct_str6);\n    cout << endl;\n\n    cout << \"FILETIME -> FILETIME(Local)\" << endl;\n    FILETIME ftLocal_From_ft;\n    FILETIME ftLocal_From_ft_local;\n    FileTimeToLocalFileTime(&ft, &ftLocal_From_ft);\n    FileTimeToLocalFileTime(&ft_Local, &ftLocal_From_ft_local);\n    CTime ct7(st_cnvFrom_ft);\n    CTime ct8(st_cnvFrom_ft_Local);\n    CString ct_str7 = ct7.Format(L\"ftLocal_From_ft       = %Y/%m/%d %H:%M:%S \\n\");\n    CString ct_str8 = ct8.Format(L\"ftLocal_From_ft_local = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)ct_str7);\n    _tprintf((LPCTSTR)ct_str8);\n    cout << endl;\n\n\n\n\u51e6\u7406\u7d50\u679c\nGet Current SYSTEMTIME\nst_UTC   = 2016/02/21 03:06:16\nst_Local = 2016/02/21 12:06:16\n\nSYSTEMTIME -> FILETIME\nft       = 2016/02/21 12:06:16\nft_Local = 2016/02/21 21:06:16\n\nFILETIME -> SYSTEMTIME\nst_From_ft       = 2016/02/21 03:06:16\nst_From_ft_Local = 2016/02/21 12:06:16\n\nFILETIME -> FILETIME(Local)\nftLocal_From_ft       = 2016/02/21 21:06:16\nftLocal_From_ft_local = 2016/02/22 06:06:16\n\n\n\u51e6\u7406\u7d50\u679c\u3067\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\u3001\nSystemTimeToFileTime()\u3067\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001FileTimeToSystemTime()\u3067UTC\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u51e6\u7406\u4f7f\u7528\u6642\u306e\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3092\u5165\u529b\u3068\u3057\u3066\u6271\u3046\u5834\u5408\u3060\u3068\u3044\u3048\u307e\u3059\u3002\n\u5404\u51e6\u7406\u306e\u95a2\u4fc2\u56f3\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n\n\u6700\u5f8c\u306bCTime\u30af\u30e9\u30b9\u3067\u3059\u3002\n\nDateTimeConvert.cpp\n    // 3. <atltime.h>\n    cout << \"Create CTime object using time_t\" << endl;\n    CTime curTime = CTime::GetTickCount();\n    CString curTime_str = curTime.Format(L\"curTime = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)curTime_str);\n    cout << \"curTime.GetTime() = \" << curTime.GetTime() << endl;\n\n    struct tm tm_curTime;\n    struct tm tmLocal_curTime;\n    curTime.GetGmtTm(&tm_curTime);\n    curTime.GetLocalTm(&tmLocal_curTime);\n    asctime_s(ascstr, sizeof(ascstr), &tm_curTime);\n    cout << \"tm_curTime     :\" << ascstr;\n    asctime_s(ascstr, sizeof(ascstr), &tmLocal_curTime);\n    cout << \"tmLocal_curTime:\" << ascstr;\n    cout << endl;\n\n    cout << \"Create CTime obj using SYSTEMTIME(Local)\" << endl;\n    CTime stime(st_UTC);\n    CString stime_str = stime.Format(L\"stime   = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)stime_str);\n    cout << endl;\n\n    cout << \"Create CTime obj using FILETIME\" << endl;\n    CTime ftime(ft);\n    CString ftime_str = ftime.Format(L\"ftime   = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)ftime_str);\n    cout << endl;\n\n    cout << \"Create CTime obj using time value\" << endl;\n           // ( year, mon, day, hour, min, sec)\n    CTime time( 2016,    1,   1,   0,   0,   0);\n    CString time_str = time.Format(L\"time    = %Y/%m/%d %H:%M:%S \\n\");\n    _tprintf((LPCTSTR)time_str);\n\n\n\n\u51e6\u7406\u7d50\u679c\nCreate CTime obj using time_t\ncurTime = 2016/02/21 12:06:16\ncurTime.GetTime() = 1456023976\ntm_curTime     :Sun Feb 21 03:06:16 2016\ntmLocal_curTime:Sun Feb 21 12:06:16 2016\n\nCreate CTime obj using SYSTEMTIME(Local)\nstime   = 2016/02/21 03:06:16\n\nCreate CTime obj using FILETIME\nftime   = 2016/02/21 12:06:16\n\nCreate CTime obj using time value\ntime    = 2016/01/01 00:00:00\n\n\nCTime\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u6271\u3048\u307e\u3059\u3002\n\u30fbCTime(_time64_t) \u203b_time64_t\u306fUTC\u6642\u523b\n\u30fbCTime(const SYSTEMTIME&) \u203bSYSTEMTIME\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n\u30fbCTime(cost FILETIME&)\u3000\u203bFILETIME\u306fUTC\u6642\u523b\n\u30fbCTime(int,int\u2026)\u3000\u203bint,int\u2026\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n\u307e\u305f\u3001CTime::GetTickCount()\u306b\u3066\u73fe\u5728\u6642\u523b\u306e\u53d6\u5f97\u3082\u884c\u3048\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001CTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u306fSYSTEMTIME\u3084FILETIME\u306e\u5024\u3082\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001VC++\u3067\u6642\u523b\u3092\u6271\u3046\u5834\u5408\u306fCTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u6271\u3046\u306e\u304c\u826f\u3044\u3068\u611f\u3058\u307e\u3059\u3002\n\n\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u7528\u3044\u305f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u304b\u3089UTC\u3078\u306e\u5909\u63db(\u8ffd\u8a18)\n\u3082\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u306b\u308f\u304b\u308a\u3084\u304f\u8aac\u660e\u3055\u308c\u3066\u304a\u308a\u307e\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\nVC++/MFC \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u3088\u308b\u65e5\u6642\u5909\u63db (JST->UTC)\n\n\u307e\u3068\u3081\nUTC\u6642\u523b\u306e\u53d6\u5f97\n\u30fbtime()\n\u30fbGetSystemTime()\n\u30fbCTime::GetTickCount()\nUTC\u6642\u523b\u2192\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3078\u306e\u5909\u63db\uff08\u4e00\u4f8b\u3067\u3059\uff09\n1. \u5165\u529b\uff1atime_t\u3000\u2192\u3000localtime_s()\n2. \u5165\u529b\uff1aSYSTEMTIME\u3000\u2192\u3000CTime(int,int) \u2192\u3000CTime::GetLocalTm()\n3. \u5165\u529b\uff1aFILETIME \u2192 FileTimeToLocalFileTime()\n\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u2192UTC\u6642\u523b\u3078\u306e\u5909\u63db\uff08\u4e00\u4f8b\u3067\u3059\uff09\n1. \u5165\u529b struct tm \u2192 mktime()\n2. \u5165\u529b SYSTEMTIME \u2192 CTime(SYSTEMTIME&) \u2192 Ctime::GetGmtTm() or CTime::GetTime()\n3. \u5165\u529b FILETIME \u2192 FileTimeToSystemTime() \u2192 \n\u6642\u523b\u51e6\u7406\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3066\u3001\u57fa\u672c\u7684\u306bUTC\u6642\u523b\u3092\u57fa\u70b9\u3068\u3057\u305f\u6642\u9593\u7ba1\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u524d\u63d0\u3067\u5404\u6642\u523b\u51e6\u7406\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\u3002\n\u305d\u306e\u305f\u3081\u5358\u306b\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u304b\u3089UTC\u6642\u523b\u3092\u6c42\u3081\u305f\u3044\u5834\u5408\u306b\u306f\u3001CTime\u30af\u30e9\u30b9\u4f7f\u3046\u5834\u5408\u306f\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6c42\u3081\u305f\u308aSYSTEMTIME\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u306a\u3069\u304c\u3042\u308a\u3001time.h\u306e\u95a2\u6570\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u82e5\u5e72\u898b\u305f\u3081\u7684\u306b\u3082\u3044\u3044\u304b\u3082\u3068\u3044\u3046\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002\n\u53d6\u5f97\u3057\u305f\u3044\u5909\u6570\u306e\u578b\u3067\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\n\u6642\u523b\u3092\u6271\u3046\u4e0a\u3067\u6ce8\u610f\u3059\u3079\u304d\u70b9\u306e\u4e00\u3064\u3068\u3057\u3066\u3001\u6700\u7d42\u7684\u306a\u5909\u63db\u7d50\u679c\u3092\u5f97\u308b\u904e\u7a0b\u3067\u306e\u51fa\u529b\u7d50\u679c\u304cUTC\u6642\u523b\u307e\u305f\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3069\u3061\u3089\u306a\u306e\u304b\u3092\u7406\u89e3\u3057\u3066\u304a\u304f\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u7d39\u4ecb\u3057\u305f\u5185\u5bb9\u304c\u307f\u306a\u3055\u3093\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3069\u6709\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n#\u80cc\u666f\n\u81ea\u5206\u304cVC++\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3059\u308b\u6642\u3001\u73fe\u5728\u6642\u523b\u306e\u53d6\u5f97\u306b\u306ftime()\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306e\u5909\u63db\u3092\u884c\u3046\u306b\u3042\u305f\u308a\u30cd\u30c3\u30c8\u4e0a\u3067\u6642\u523b\u95a2\u9023\u51e6\u7406\u3067\u8abf\u3079\u3066\u3044\u308b\u3068\u5168\u7136\u99b4\u67d3\u307f\u306e\u306a\u3044\u6642\u523b\u95a2\u9023\u306e\u51e6\u7406\u304c\u6ca2\u5c71\u51fa\u3066\u304d\u305f\u306e\u3067\u3001\u540c\u69d8\u306b\u56f0\u60d1\u3055\u308c\u3066\u3044\u308b\u65b9\u306e\u52a9\u3051\u3068\u306a\u308c\u3070\u3068\u601d\u3044\u3001\u4e3b\u306a\u6642\u523b\u95a2\u9023\u306e\u95a2\u6570\u306e\u4f7f\u7528\u65b9\u6cd5\u306a\u3069\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u306a\u304a\u3001\u4eca\u56de\u306e\u78ba\u8a8d\u74b0\u5883\u306b\u306fWindows7 Pro. SP1(64bit)\u3001Microsoft Visual Studio Community 2013 Update 5\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u203b2016/2/22 22:00 CTime\u30af\u30e9\u30b9\u306e\u51e6\u7406\u7d50\u679c\u4ee5\u964d\u306e\u7b87\u6240\u304b\u52a0\u7b46\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\u3000\u8a73\u7d30\u306f\u7de8\u96c6\u5c65\u6b74\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n#VC++\u3067\u4f7f\u7528\u53ef\u80fd\u306a\u6642\u523b\u95a2\u9023\u51e6\u7406\nVC++\u306fC\u8a00\u8a9e\u3001C++\u3001MFC\u3001STL\u3001ATL\u306a\u3069\u8272\u3005\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3056\u3063\u3068\u63a2\u3057\u3066\u51fa\u3066\u304d\u305f\u4e3b\u306a\u6642\u523b\u95a2\u9023\u51e6\u7406\u3001\u307e\u305f\u306f\u30af\u30e9\u30b9\u306f\u4ee5\u4e0b\u306b\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002\n\n1. time.h\n2. Win32 API\n3. atltime.h\n\n##time.h\ntime()\ngmtime_s()\nlocaltime_s()\nmktime()\n\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/634ca0c2.aspx\n\n\n##Win32 API\nGetSystemTime()\nGetLocalTime()\nSystemTimeToFileTime()\nFileTimeToSystemTime()\nFileTimeToLocalFileTime()\n\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/cc429379.aspx\n\n##atltime.h\nCTime\u30af\u30e9\u30b9\n\nMSDN\nhttps://msdn.microsoft.com/ja-jp/library/78zb0ese.aspx\n\n#\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\n\n\u4eca\u56de\u306einclude\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n```lang:DateTimeConvert.cpp\n#include \"stdafx.h\"\n#include <iostream>\n#include \"time.h\"\n#include \"atltime.h\"\n\nusing namespace std;\n```\n\n\u3053\u3053\u304b\u3089\u5b9f\u969b\u306e\u51e6\u7406\u3067\u3059\u3002\n\u307e\u305a\u306ftime.h\u306e\u51e6\u7406\u3002\n\n```lang:DateTimeConvert.cpp\n\t// 1. <time.h>\n\ttime_t curUTC_sec;\n\ttime_t cnvTime_sec;\n\tstruct tm tmUTC;\n\tstruct tm tmLocal;\n\n\t// Get Current Time(UTC sec.)\n\ttime(&curUTC_sec);\n\n\t// UTC sec. -> UTC\n\tchar ascstr[32];\n\tgmtime_s(&tmUTC, &curUTC_sec);\n\tasctime_s(ascstr, sizeof(ascstr), &tmUTC);\n\tcout << \"tmUTC  :\" << ascstr;\n\n\t// UTC sec. -> Local Time\n\tlocaltime_s(&tmLocal, &curUTC_sec);\n\tasctime_s(ascstr, sizeof(ascstr), &tmLocal);\n\tcout << \"tmLocal:\" << ascstr;\n\tcout << endl;\n\n\t// Local Time -> UTC sec.\n\tcnvTime_sec = mktime(&tmLocal);\n\tcout << \"curUTC_sec  :\" << curUTC_sec << endl;\n\tcout << \"cnvTime_sec :\" << cnvTime_sec << endl;\n\tcout << endl;\n\n```\n\n```lang:\u51e6\u7406\u7d50\u679c\ntmUTC  :Sun Feb 21 03:06:16 2016\ntmLocal:Sun Feb 21 12:06:16 2016\n\ncurUTC_sec  :1456023976\ncnvTime_sec :1456023976\n```\n\n\u51e6\u7406\u7d50\u679c\u3088\u308a\nlocaltime_s()\u306e\u51e6\u7406\u7d50\u679c\u304ctmUTC+09:00\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001mktime()\u3067\u306etmLocal\u306e\u5909\u63db\u51e6\u7406\u7d50\u679c\u304ctime()\u306e\u51e6\u7406\u7d50\u679c\u3068\u540c\u3058\u5024\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5404\u51e6\u7406\u306e\u95a2\u4fc2\u56f3\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n![time_h.png](https://qiita-image-store.s3.amazonaws.com/0/58935/fab5ae78-74e8-7aad-447b-4b6f54b875b2.png)\n\n\n\n\n\n\u7d9a\u3044\u3066Win32 API\u3067\u3059\u3002\n\n```lang:DateTimeConvert.cpp\n\t// 2. Win32 API\n\tSYSTEMTIME st_UTC;\n\tSYSTEMTIME st_Local;\n\n\t// Get Current SYSTEMTIME\n\tGetSystemTime(&st_UTC);\n\tGetLocalTime(&st_Local);\n\tCTime ct1(st_UTC);\n\tCTime ct2(st_Local);\n\tCString ct_str1 = ct1.Format(L\"st_UTC   = %Y/%m/%d %H:%M:%S \\n\");\n\tCString ct_str2 = ct2.Format(L\"st_Local = %Y/%m/%d %H:%M:%S \\n\");\n\tcout << \"Get Current SYSTEMTIME\" << endl;\n\t_tprintf((LPCTSTR)ct_str1);\n\t_tprintf((LPCTSTR)ct_str2);\n\tcout << endl;\n\n\tcout << \"SYSTEMTIME -> FILETIME\" << endl;\n\tFILETIME ft;\n\tFILETIME ft_Local;\n\tSystemTimeToFileTime(&st_UTC, &ft);\n\tSystemTimeToFileTime(&st_Local, &ft_Local);\n\tCTime ct3(ft);\n\tCTime ct4(ft_Local);\n\tCString ct_str3 = ct3.Format(L\"ft       = %Y/%m/%d %H:%M:%S \\n\");\n\tCString ct_str4 = ct4.Format(L\"ft_Local = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)ct_str3);\n\t_tprintf((LPCTSTR)ct_str4);\n\tcout << endl;\n\n\tcout << \"FILETIME -> SYSTEMTIME\" << endl;\n\tSYSTEMTIME st_cnvFrom_ft;\n\tSYSTEMTIME st_cnvFrom_ft_Local;\n\tFileTimeToSystemTime(&ft, &st_cnvFrom_ft);\n\tFileTimeToSystemTime(&ft_Local, &st_cnvFrom_ft_Local);\n\tCTime ct5(st_cnvFrom_ft);\n\tCTime ct6(st_cnvFrom_ft_Local);\n\tCString ct_str5 = ct5.Format(L\"st_From_ft       = %Y/%m/%d %H:%M:%S \\n\");\n\tCString ct_str6 = ct6.Format(L\"st_From_ft_Local = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)ct_str5);\n\t_tprintf((LPCTSTR)ct_str6);\n\tcout << endl;\n\n\tcout << \"FILETIME -> FILETIME(Local)\" << endl;\n\tFILETIME ftLocal_From_ft;\n\tFILETIME ftLocal_From_ft_local;\n\tFileTimeToLocalFileTime(&ft, &ftLocal_From_ft);\n\tFileTimeToLocalFileTime(&ft_Local, &ftLocal_From_ft_local);\n\tCTime ct7(st_cnvFrom_ft);\n\tCTime ct8(st_cnvFrom_ft_Local);\n\tCString ct_str7 = ct7.Format(L\"ftLocal_From_ft       = %Y/%m/%d %H:%M:%S \\n\");\n\tCString ct_str8 = ct8.Format(L\"ftLocal_From_ft_local = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)ct_str7);\n\t_tprintf((LPCTSTR)ct_str8);\n\tcout << endl;\n```\n\n```lang:\u51e6\u7406\u7d50\u679c\nGet Current SYSTEMTIME\nst_UTC   = 2016/02/21 03:06:16\nst_Local = 2016/02/21 12:06:16\n\nSYSTEMTIME -> FILETIME\nft       = 2016/02/21 12:06:16\nft_Local = 2016/02/21 21:06:16\n\nFILETIME -> SYSTEMTIME\nst_From_ft       = 2016/02/21 03:06:16\nst_From_ft_Local = 2016/02/21 12:06:16\n\nFILETIME -> FILETIME(Local)\nftLocal_From_ft       = 2016/02/21 21:06:16\nftLocal_From_ft_local = 2016/02/22 06:06:16\n```\n\u51e6\u7406\u7d50\u679c\u3067\u6ce8\u76ee\u3057\u305f\u3044\u306e\u306f\u3001\nSystemTimeToFileTime()\u3067\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001FileTimeToSystemTime()\u3067UTC\u6642\u523b\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u305f\u3081\u3001\u3053\u308c\u3089\u306e\u51e6\u7406\u4f7f\u7528\u6642\u306e\u6ce8\u610f\u70b9\u3068\u3057\u3066\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3092\u5165\u529b\u3068\u3057\u3066\u6271\u3046\u5834\u5408\u3060\u3068\u3044\u3048\u307e\u3059\u3002\n\u5404\u51e6\u7406\u306e\u95a2\u4fc2\u56f3\u306f\u4ee5\u4e0b\u3067\u3059\u3002\n![Qiita\u7528\u753b\u50cf (5).png](https://qiita-image-store.s3.amazonaws.com/0/58935/4d14761a-ccf0-0e98-8c5b-580f383cc248.png)\n\n\n\u6700\u5f8c\u306bCTime\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```lang:DateTimeConvert.cpp\n\t// 3. <atltime.h>\n\tcout << \"Create CTime object using time_t\" << endl;\n\tCTime curTime = CTime::GetTickCount();\n\tCString curTime_str = curTime.Format(L\"curTime = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)curTime_str);\n\tcout << \"curTime.GetTime() = \" << curTime.GetTime() << endl;\n\n\tstruct tm tm_curTime;\n\tstruct tm tmLocal_curTime;\n\tcurTime.GetGmtTm(&tm_curTime);\n\tcurTime.GetLocalTm(&tmLocal_curTime);\n\tasctime_s(ascstr, sizeof(ascstr), &tm_curTime);\n\tcout << \"tm_curTime     :\" << ascstr;\n\tasctime_s(ascstr, sizeof(ascstr), &tmLocal_curTime);\n\tcout << \"tmLocal_curTime:\" << ascstr;\n\tcout << endl;\n\n\tcout << \"Create CTime obj using SYSTEMTIME(Local)\" << endl;\n\tCTime stime(st_UTC);\n\tCString stime_str = stime.Format(L\"stime   = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)stime_str);\n\tcout << endl;\n\n\tcout << \"Create CTime obj using FILETIME\" << endl;\n\tCTime ftime(ft);\n\tCString ftime_str = ftime.Format(L\"ftime   = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)ftime_str);\n\tcout << endl;\n\n\tcout << \"Create CTime obj using time value\" << endl;\n\t\t   // ( year, mon, day, hour, min, sec)\n\tCTime time( 2016,    1,   1,   0,   0,   0);\n\tCString time_str = time.Format(L\"time    = %Y/%m/%d %H:%M:%S \\n\");\n\t_tprintf((LPCTSTR)time_str);\n```\n\n\n```lang:\u51e6\u7406\u7d50\u679c\nCreate CTime obj using time_t\ncurTime = 2016/02/21 12:06:16\ncurTime.GetTime() = 1456023976\ntm_curTime     :Sun Feb 21 03:06:16 2016\ntmLocal_curTime:Sun Feb 21 12:06:16 2016\n\nCreate CTime obj using SYSTEMTIME(Local)\nstime   = 2016/02/21 03:06:16\n\nCreate CTime obj using FILETIME\nftime   = 2016/02/21 12:06:16\n\nCreate CTime obj using time value\ntime    = 2016/01/01 00:00:00\n```\nCTime\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u6570\u3068\u3057\u3066\u306f\u4ee5\u4e0b\u304c\u6271\u3048\u307e\u3059\u3002\n\u30fbCTime(\\_time64_t) \u203b\\_time64_t\u306fUTC\u6642\u523b\n\n\u30fbCTime(const SYSTEMTIME&) \u203bSYSTEMTIME\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n\n\u30fbCTime(cost FILETIME&)\u3000\u203bFILETIME\u306fUTC\u6642\u523b\n\n\u30fbCTime(int,int\u2026)\u3000\u203bint,int\u2026\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\n\n\u307e\u305f\u3001CTime::GetTickCount()\u306b\u3066\u73fe\u5728\u6642\u523b\u306e\u53d6\u5f97\u3082\u884c\u3048\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001CTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u306fSYSTEMTIME\u3084FILETIME\u306e\u5024\u3082\u53d6\u5f97\u3067\u304d\u308b\u306e\u3067\u3001VC++\u3067\u6642\u523b\u3092\u6271\u3046\u5834\u5408\u306fCTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u6271\u3046\u306e\u304c\u826f\u3044\u3068\u611f\u3058\u307e\u3059\u3002\n\n##\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u7528\u3044\u305f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u304b\u3089UTC\u3078\u306e\u5909\u63db(\u8ffd\u8a18)\n\u3082\u66f8\u3053\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u306b\u308f\u304b\u308a\u3084\u304f\u8aac\u660e\u3055\u308c\u3066\u304a\u308a\u307e\u3057\u305f\u306e\u3067\u305d\u3061\u3089\u3092\u53c2\u8003\u304f\u3060\u3055\u3044\u3002\n\n[VC++/MFC \u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u306b\u3088\u308b\u65e5\u6642\u5909\u63db (JST->UTC)](http://www.northwind.mydns.jp/samples/blog/2013/02/26/vc-mfc-%E3%82%BF%E3%82%A4%E3%83%A0%E3%82%BE%E3%83%BC%E3%83%B3%E3%81%AB%E3%82%88%E3%82%8B%E6%97%A5%E6%99%82%E5%A4%89%E6%8F%9B/)\n\n##\u307e\u3068\u3081\n**UTC\u6642\u523b\u306e\u53d6\u5f97**\n\u30fbtime()\n\u30fbGetSystemTime()\n\u30fbCTime::GetTickCount()\n\n**UTC\u6642\u523b\u2192\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3078\u306e\u5909\u63db\uff08\u4e00\u4f8b\u3067\u3059\uff09**\n1. \u5165\u529b\uff1atime_t\u3000\u2192\u3000localtime_s()\n2. \u5165\u529b\uff1aSYSTEMTIME\u3000\u2192\u3000CTime(int,int) \u2192\u3000CTime::GetLocalTm()\n3. \u5165\u529b\uff1aFILETIME \u2192 FileTimeToLocalFileTime()\n\n**\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u2192UTC\u6642\u523b\u3078\u306e\u5909\u63db\uff08\u4e00\u4f8b\u3067\u3059\uff09**\n1. \u5165\u529b struct tm \u2192 mktime()\n2. \u5165\u529b SYSTEMTIME \u2192 CTime(SYSTEMTIME&) \u2192 Ctime::GetGmtTm() or CTime::GetTime()\n3. \u5165\u529b FILETIME \u2192 FileTimeToSystemTime() \u2192 \n\n\u6642\u523b\u51e6\u7406\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u3066\u3001\u57fa\u672c\u7684\u306bUTC\u6642\u523b\u3092\u57fa\u70b9\u3068\u3057\u305f\u6642\u9593\u7ba1\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u524d\u63d0\u3067\u5404\u6642\u523b\u51e6\u7406\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u611f\u3058\u307e\u3057\u305f\u3002\n~~\u305d\u306e\u305f\u3081\u5358\u306b\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u304b\u3089UTC\u6642\u523b\u3092\u6c42\u3081\u305f\u3044\u5834\u5408\u306b\u306f\u3001CTime\u30af\u30e9\u30b9\u4f7f\u3046\u5834\u5408\u306f\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6c42\u3081\u305f\u308aSYSTEMTIME\u306b\u5909\u63db\u3059\u308b\u5fc5\u8981\u306a\u3069\u304c\u3042\u308a\u3001time.h\u306e\u95a2\u6570\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u82e5\u5e72\u898b\u305f\u3081\u7684\u306b\u3082\u3044\u3044\u304b\u3082\u3068\u3044\u3046\u3068\u304c\u308f\u304b\u308a\u307e\u3057\u305f\u3002~~\n\u53d6\u5f97\u3057\u305f\u3044\u5909\u6570\u306e\u578b\u3067\u4f7f\u3044\u5206\u3051\u308b\u3053\u3068\u304c\u5fc5\u8981\u305d\u3046\u3067\u3059\u3002\n\n\n##\u6700\u5f8c\u306b\n\u6642\u523b\u3092\u6271\u3046\u4e0a\u3067\u6ce8\u610f\u3059\u3079\u304d\u70b9\u306e\u4e00\u3064\u3068\u3057\u3066\u3001\u6700\u7d42\u7684\u306a\u5909\u63db\u7d50\u679c\u3092\u5f97\u308b\u904e\u7a0b\u3067\u306e\u51fa\u529b\u7d50\u679c\u304cUTC\u6642\u523b\u307e\u305f\u306f\u30ed\u30fc\u30ab\u30eb\u6642\u523b\u3069\u3061\u3089\u306a\u306e\u304b\u3092\u7406\u89e3\u3057\u3066\u304a\u304f\u3053\u3068\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u7d39\u4ecb\u3057\u305f\u5185\u5bb9\u304c\u307f\u306a\u3055\u3093\u306e\u53c2\u8003\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u306a\u3069\u6709\u308a\u307e\u3057\u305f\u3089\u30b3\u30e1\u30f3\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u52a9\u304b\u308a\u307e\u3059\u3002\n", "tags": ["C++", "\u6642\u523b", "\u6642\u9593", "VisualStudio2013"]}