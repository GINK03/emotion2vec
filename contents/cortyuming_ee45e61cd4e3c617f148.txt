{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\nWeb+DB Press Vol.87 \u306e Flux \u306e\u8a18\u4e8b \u304c\u7d20\u6674\u3089\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e flux-counter(fluxxor) \u3092 ES6 \u306e class \u306a\u3069\u4f7f\u3063\u3066\u66f8\u3051\u308b flummox \u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3002\n\u4e0b\u8a18\u4ee5\u5916\u30d5\u30a1\u30a4\u30eb\u306f \u96d1\u8a8c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n - \u300cEmerging Web Technology\u7814\u7a76\u5ba4\u300d\u3067\u4f7f\u7528\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\npackage\nreactify \u3067\u306f\u306a\u304f babelify \u3092\u4f7f\u3046\n\npacage.json\n{\n  \"devDependencies\": {\n    \"browserify\": \"^10.2.4\",\n    \"flummox\": \"^3.5.2\",\n    \"react\": \"^0.13.3\",\n    \"watchify\": \"^3.2.3\"\n  },\n  \"scripts\": {\n    \"watch\": \"watchify -t babelify src/app.jsx -o dest/app.js -v\"\n  }\n}\n\n\n\n$ npm run watch\n\n\ncode\n\napp.jsx\nimport React from 'react';\nimport { Actions, Store, Flummox } from 'flummox';\nimport FluxComponent from 'flummox/component';\n\n\nconst constants = {\n    UPDATE_COUNTER: 'UPDATE_COUNTER'\n};\n\n\nclass CounterStore extends Store {\n    constructor(flux) {\n        super();\n\n        const counterActions = flux.getActions(constants.UPDATE_COUNTER);\n        this.register(counterActions.plusCounter, this.handleUpdateCounter);\n        this.register(counterActions.minusCounter, this.handleUpdateCounter);\n\n        this.state = {\n            counter: 0\n        };\n    }\n\n    handleUpdateCounter(payload) {\n        this.setState({\n            counter: this.state.counter + payload\n        });\n    }\n}\n\nclass CounterActions extends Actions {\n    plusCounter() {\n        return 1;\n    }\n    minusCounter() {\n        return -1;\n    }\n}\n\nclass CounterAppView extends React.Component {\n    render() {\n        return (\n            <div>\n                <FluxComponent connectToStores={[constants.UPDATE_COUNTER]}>\n                    <CounterView />\n                </FluxComponent>\n            </div>\n        );\n    }\n}\n\nclass CounterView extends React.Component {\n    onClickPlus() {\n        this.props.flux.getActions(constants.UPDATE_COUNTER).plusCounter();\n    }\n\n    onClickMinus() {\n        this.props.flux.getActions(constants.UPDATE_COUNTER).minusCounter();\n    }\n\n    render() {\n        return (\n            <div>\n                <span>count: {this.props.counter}</span>\n                <div>\n                    <button onClick={this.onClickPlus.bind(this)}>+1</button>\n                    <button onClick={this.onClickMinus.bind(this)}>-1</button>\n                </div>\n            </div>\n        );\n    }\n}\nCounterView.propTypes = {\n    counter: React.PropTypes.number\n};\n\nclass Flux extends Flummox {\n    constructor() {\n        super();\n\n        this.createActions(constants.UPDATE_COUNTER, CounterActions);\n        this.createStore(constants.UPDATE_COUNTER, CounterStore, this);\n    }\n}\n\nconst flux = new Flux();\n\nReact.render(\n    <FluxComponent flux={flux}>\n        <CounterAppView />\n    </FluxComponent>,\n    document.getElementById('app-container')\n);\n\n\n\n\u53c2\u8003\n\nhttp://gihyo.jp/magazine/wdpress/archive/2015/vol87\nhttp://acdlite.github.io/flummox\nhttp://giveitashot.hatenadiary.jp/entry/2015/04/29/141216\n\n\n## \u76ee\u7684\n[Web+DB Press Vol.87 \u306e Flux \u306e\u8a18\u4e8b](http://gihyo.jp/magazine/wdpress/archive/2015/vol87) \u304c\u7d20\u6674\u3089\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e flux-counter([fluxxor](http://fluxxor.com/)) \u3092 ES6 \u306e class \u306a\u3069\u4f7f\u3063\u3066\u66f8\u3051\u308b [flummox](http://acdlite.github.io/flummox) \u3067\u66f8\u304d\u63db\u3048\u3066\u307f\u305f\u3002\n\n\u4e0b\u8a18\u4ee5\u5916\u30d5\u30a1\u30a4\u30eb\u306f [\u96d1\u8a8c\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9](http://gihyo.jp/magazine/wdpress/archive/2015/vol87/support) \u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n - [\u300cEmerging Web Technology\u7814\u7a76\u5ba4\u300d\u3067\u4f7f\u7528\u3055\u308c\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9](http://image.gihyo.co.jp/assets/files/magazine/wdpress/2015/87/WDB87-EmergingWebTech-13.zip)\n\n\n## package\n\nreactify \u3067\u306f\u306a\u304f babelify \u3092\u4f7f\u3046\n\n```pacage.json\n{\n  \"devDependencies\": {\n    \"browserify\": \"^10.2.4\",\n    \"flummox\": \"^3.5.2\",\n    \"react\": \"^0.13.3\",\n    \"watchify\": \"^3.2.3\"\n  },\n  \"scripts\": {\n    \"watch\": \"watchify -t babelify src/app.jsx -o dest/app.js -v\"\n  }\n}\n\n```\n\n```\n$ npm run watch\n```\n\n## code\n\n```app.jsx\nimport React from 'react';\nimport { Actions, Store, Flummox } from 'flummox';\nimport FluxComponent from 'flummox/component';\n\n\nconst constants = {\n    UPDATE_COUNTER: 'UPDATE_COUNTER'\n};\n\n\nclass CounterStore extends Store {\n    constructor(flux) {\n        super();\n\n        const counterActions = flux.getActions(constants.UPDATE_COUNTER);\n        this.register(counterActions.plusCounter, this.handleUpdateCounter);\n        this.register(counterActions.minusCounter, this.handleUpdateCounter);\n\n        this.state = {\n            counter: 0\n        };\n    }\n\n    handleUpdateCounter(payload) {\n        this.setState({\n            counter: this.state.counter + payload\n        });\n    }\n}\n\nclass CounterActions extends Actions {\n    plusCounter() {\n        return 1;\n    }\n    minusCounter() {\n        return -1;\n    }\n}\n\nclass CounterAppView extends React.Component {\n    render() {\n        return (\n            <div>\n                <FluxComponent connectToStores={[constants.UPDATE_COUNTER]}>\n                    <CounterView />\n                </FluxComponent>\n            </div>\n        );\n    }\n}\n\nclass CounterView extends React.Component {\n    onClickPlus() {\n        this.props.flux.getActions(constants.UPDATE_COUNTER).plusCounter();\n    }\n\n    onClickMinus() {\n        this.props.flux.getActions(constants.UPDATE_COUNTER).minusCounter();\n    }\n\n    render() {\n        return (\n            <div>\n                <span>count: {this.props.counter}</span>\n                <div>\n                    <button onClick={this.onClickPlus.bind(this)}>+1</button>\n                    <button onClick={this.onClickMinus.bind(this)}>-1</button>\n                </div>\n            </div>\n        );\n    }\n}\nCounterView.propTypes = {\n    counter: React.PropTypes.number\n};\n\nclass Flux extends Flummox {\n    constructor() {\n        super();\n\n        this.createActions(constants.UPDATE_COUNTER, CounterActions);\n        this.createStore(constants.UPDATE_COUNTER, CounterStore, this);\n    }\n}\n\nconst flux = new Flux();\n\nReact.render(\n    <FluxComponent flux={flux}>\n        <CounterAppView />\n    </FluxComponent>,\n    document.getElementById('app-container')\n);\n```\n\n### \u53c2\u8003\n\n- http://gihyo.jp/magazine/wdpress/archive/2015/vol87\n- http://acdlite.github.io/flummox\n- http://giveitashot.hatenadiary.jp/entry/2015/04/29/141216\n", "tags": ["flummox", "reactjs", "flux"]}