{"context": " More than 1 year has passed since last update.\u203b\u524d\u63d0\u3068\u3057\u3066\u3001AWS SDK \u306f\u5165\u308c\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u306d\u3002\u2193\u3068\u304b\nhttp://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk/1.6.8\n\nPUT\uff08\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\uff09\nval credentials = new BasicAWSCredentials(\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u30ad\u30fc, \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc)\nval s3Client = new AmazonS3Client(credentials)\nval localFilePath = \"\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\"\nval s3BucketName = \"\u30d0\u30b1\u30c3\u30c8\u540d\"\nval s3FilePath = \"S3\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u5148\u306e\u30d1\u30b9\"\nval upReq = new PutObjectRequest(s3BucketName, s3FilePath, localFile)\ns3Client.putObject(upReq)\n\n\nLIST\uff08\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\uff09\nval credentials = new BasicAWSCredentials(\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u30ad\u30fc, \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc)\nval s3Client = new AmazonS3Client(credentials)\n\nval s3BucketName = \"\u30d0\u30b1\u30c3\u30c8\u540d\"\nval s3FilePath = \"S3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\"\n\n//\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\u3067\u591a\u3059\u304e\u308b\u5834\u5408\u3001\u30de\u30fc\u30ab\u30fc\u3092\u4fdd\u6301\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\nvar preNextMarker = \"\"\nvar nextMarker = \"\"\nvar flg = false\n\nwhile(!flg){\n\n    preNextMarker = nextMarker\n\n    val listReq = new ListObjectsRequest()\n    listReq.setPrefix(s3FilePath)\n    listReq.setBucketName(s3BucketName)\n\n      listReq.setMarker(nextMarker)\n\n      val objectListing = s3Client.listObjects(listReq)\n      val summary = objectListing.getObjectSummaries\n\n    //List\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u3050\u308b\u3050\u308b\u307e\u308f\u3059\u3002\n    //Scala\u306eList\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u6ce8\u610f\n    (0 to summary.size - 1).foreach{s3Object =>\n        val obj = summary.get(s3Object)\n        //\u716e\u308b\u306a\u308a\u713c\u304f\u306a\u308a\n        }\n    //println(\"next marker : \" + nextMarker)\n\n      nextMarker = objectListing.getNextMarker\n\n    //\u3082\u3046\u7121\u3051\u308c\u3070\u30de\u30fc\u30ab\u30fc\u306fnull\u3067\u3059\u3002\n      if(nextMarker == null) flg = true\n}\n\n\nGET(\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n    //\u30d0\u30b1\u30c3\u30c8\u540d\n    val s3BucketName =\"\u30d0\u30b1\u30c3\u30c8\u540d\"\n    //\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d1\u30b9\n    val s3ObjectPath = \"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d1\u30b9\"\n    //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5148\u306e\u30d1\u30b9\uff08\u30ed\u30fc\u30ab\u30eb\uff09\n    val downloadPath = \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30d1\u30b9\"\n    val downloadFile = new File(downloadPath)\n\n    //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d\u306e\u30d1\u30b9\n    val downloadingPath = downloadPath + \".tmp\"\n    val downloadingFile = new File(downloadingPath)\n\n    val req = new GetObjectRequest(s3BucketName, s3ObjectPath)\n    val tm = new TransferManager(s3Client)\n    val s3Obj = s3Client.getObject(req)\n\n    try {\n\n      val totalWork =  s3Obj.getObjectMetadata().getContentLength()\n      val download = tm.download(req, downloadingFile)\n\n      var lastTransferred = 0L\n\n      while (!download.isDone()) {\n        val transferred = download.getProgress().getBytesTransferred()\n        lastTransferred = transferred\n\n        println(s\"progress ${download.getProgress().getPercentTransferred()}%\")\n\n        Thread.sleep(100)\n      }\n      download.waitForCompletion()\n\n    } finally {\n      try {\n        tm.shutdownNow()\n      }\n\n      //\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30cd\u30fc\u30e0\n      downloadingFile.renameTo(downloadFile)\n\n    }\n\n\n\u30a2\u30af\u30bb\u30b9\u6a29\u5909\u66f4\n\n\u5168\u54e1\u306b\u8aad\u307f\u8fbc\u307f\u3092\u8a31\u53ef\n\n//put\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n...\n\n//\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3002\nval upReq = new PutObjectRequest(s3BucketName, s3FilePath, localFile).withCannedAcl(CannedAccessControlList.PublicRead)\n\ns3Client.putObject(upReq)\n\n\n\u307e\u3060\u66f8\u304d\u304b\u3051\n\n\u203b\u524d\u63d0\u3068\u3057\u3066\u3001AWS SDK \u306f\u5165\u308c\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u306d\u3002\u2193\u3068\u304b\nhttp://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk/1.6.8\n\n#PUT\uff08\u30d5\u30a1\u30a4\u30eb\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\uff09\n\n```scala\nval credentials = new BasicAWSCredentials(\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u30ad\u30fc, \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc)\nval s3Client = new AmazonS3Client(credentials)\nval localFilePath = \"\u30ed\u30fc\u30ab\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\"\nval s3BucketName = \"\u30d0\u30b1\u30c3\u30c8\u540d\"\nval s3FilePath = \"S3\u306e\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u5148\u306e\u30d1\u30b9\"\nval upReq = new PutObjectRequest(s3BucketName, s3FilePath, localFile)\ns3Client.putObject(upReq)\n```\n\n#LIST\uff08\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\uff09\n\n```scala\nval credentials = new BasicAWSCredentials(\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u30ad\u30fc, \u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc)\nval s3Client = new AmazonS3Client(credentials)\n\nval s3BucketName = \"\u30d0\u30b1\u30c3\u30c8\u540d\"\nval s3FilePath = \"S3\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\"\n\n//\u30ea\u30b9\u30c6\u30a3\u30f3\u30b0\u3067\u591a\u3059\u304e\u308b\u5834\u5408\u3001\u30de\u30fc\u30ab\u30fc\u3092\u4fdd\u6301\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\nvar preNextMarker = \"\"\nvar nextMarker = \"\"\nvar flg = false\n\nwhile(!flg){\n\n\tpreNextMarker = nextMarker\n\n    val listReq = new ListObjectsRequest()\n    listReq.setPrefix(s3FilePath)\n    listReq.setBucketName(s3BucketName)\n\n      listReq.setMarker(nextMarker)\n\n      val objectListing = s3Client.listObjects(listReq)\n      val summary = objectListing.getObjectSummaries\n\n\t//List\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u3001\u3050\u308b\u3050\u308b\u307e\u308f\u3059\u3002\n\t//Scala\u306eList\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u6ce8\u610f\n\t(0 to summary.size - 1).foreach{s3Object =>\n\t\tval obj = summary.get(s3Object)\n\t\t//\u716e\u308b\u306a\u308a\u713c\u304f\u306a\u308a\n    \t}\n\t//println(\"next marker : \" + nextMarker)\n\n      nextMarker = objectListing.getNextMarker\n\n\t//\u3082\u3046\u7121\u3051\u308c\u3070\u30de\u30fc\u30ab\u30fc\u306fnull\u3067\u3059\u3002\n      if(nextMarker == null) flg = true\n}\n```\n\n#GET(\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff09\n\n```scala\n    //\u30d0\u30b1\u30c3\u30c8\u540d\n    val s3BucketName =\"\u30d0\u30b1\u30c3\u30c8\u540d\"\n    //\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d1\u30b9\n    val s3ObjectPath = \"\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30d1\u30b9\"\n    //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u5148\u306e\u30d1\u30b9\uff08\u30ed\u30fc\u30ab\u30eb\uff09\n    val downloadPath = \"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30d1\u30b9\"\n    val downloadFile = new File(downloadPath)\n\n    //\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u4e2d\u306e\u30d1\u30b9\n    val downloadingPath = downloadPath + \".tmp\"\n    val downloadingFile = new File(downloadingPath)\n\n    val req = new GetObjectRequest(s3BucketName, s3ObjectPath)\n    val tm = new TransferManager(s3Client)\n    val s3Obj = s3Client.getObject(req)\n\n    try {\n\n      val totalWork =  s3Obj.getObjectMetadata().getContentLength()\n      val download = tm.download(req, downloadingFile)\n\n      var lastTransferred = 0L\n\n      while (!download.isDone()) {\n        val transferred = download.getProgress().getBytesTransferred()\n        lastTransferred = transferred\n\n        println(s\"progress ${download.getProgress().getPercentTransferred()}%\")\n\n        Thread.sleep(100)\n      }\n      download.waitForCompletion()\n\n    } finally {\n      try {\n        tm.shutdownNow()\n      }\n\n      //\u30d5\u30a1\u30a4\u30eb\u3092\u30ea\u30cd\u30fc\u30e0\n      downloadingFile.renameTo(downloadFile)\n\n    }\n```\n\n#\u30a2\u30af\u30bb\u30b9\u6a29\u5909\u66f4\n\n##\u5168\u54e1\u306b\u8aad\u307f\u8fbc\u307f\u3092\u8a31\u53ef\n```scala\n\n//put\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n...\n\n//\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30e1\u30bd\u30c3\u30c9\u30c1\u30a7\u30fc\u30f3\u3002\nval upReq = new PutObjectRequest(s3BucketName, s3FilePath, localFile).withCannedAcl(CannedAccessControlList.PublicRead)\n\ns3Client.putObject(upReq)\n\n```\n\n\n\u307e\u3060\u66f8\u304d\u304b\u3051", "tags": ["S3", "AWS", "Java", "Scala"]}