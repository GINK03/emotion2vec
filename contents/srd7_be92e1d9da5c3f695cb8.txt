{"context": "\n\n\u524d\u7f6e\u304d\n\u4f55\u3082\u8003\u3048\u305a\u306b PlayFramework \u3092\u4f7f\u3063\u3066\u3044\u3066\u3082\u3001 \u30d0\u30fc\u30b8\u30e7\u30f3 2.4 \u3042\u305f\u308a\u304b\u3089 @Inject \u304c\u767b\u5834\u3057\u307e\u3057\u305f\u306d\u3002\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3051\u3069\u52d5\u3044\u3066\u308b\u304b\u3089\u3044\u3044\u3084\u3068\u304b\u3001\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3093\u3067\u3057\u3087\u3063\u3066\u611f\u3058\u3067\u66f8\u3044\u3066\u308b\u4eba\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3068\u3044\u3046\u304b\u79c1\u3067\u3059\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u6700\u5f8c\u307e\u3067\u300c\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3093\u3067\u3057\u3087\u300d\u3067\u901a\u3057\u3066\u3044\u307e\u3059\u3002\u5f37\u3044\u4eba\u304b\u3089\u306e\u30de\u30b5\u30ab\u30ea\u5927\u6b53\u8fce\u3067\u3059\u3002\n\u7c21\u5358\u306a\u80cc\u666f\u8aac\u660e\u306e\u5f8c\u3001\u5b9f\u969b\u306e PlayFramework \u306e\u30a2\u30d7\u30ea\u3067\u3069\u3093\u306a\u611f\u3058\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u304b\u3092\u793a\u3057\u307e\u3059\u3002\n\u8aac\u660e\u3067\u4f7f\u3046\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f \u30b3\u30c1\u30e9\u3002\n\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u4f7f\u3063\u305f\u3082\u306e\u3092\u6d41\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u80cc\u666f\n\n\u5bc6\u7d50\u5408\u3068\u758e\u7d50\u5408\n\u8907\u6570\u306e\u30af\u30e9\u30b9\u3092\u9023\u7d50\u3055\u305b\u308b\u6642\u3001\u5bc6\u7d50\u5408 \u3068 \u758e\u7d50\u5408 \u3068\u3044\u3046\u5927\u304d\u304f\u5206\u3051\u30662\u30d1\u30bf\u30fc\u30f3\u306e\u9023\u7d50\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\u5bc6\u7d50\u5408\u306e\u4f8b\uff1a\nclass A { \n  def double(n: Int) = n * 2\n}\n\nclass B {\n  val a = new A\n  def doubleByA(n: Int) = a.double(n)\n}\n\nval b = new B\nb.doubleByA(3) // 6 \u306b\u306a\u308b\n\n\u758e\u7d50\u5408\u306e\u4f8b\uff1a\n\nclass A {\n  def double(n: Int) = n * 2\n}\n\nclass B(a: A) {\n  def doubleByA(n: Int) = a.double(n)\n}\n\nval a = new A\nval b = new B(a)\n\nb.doubleByA(3) // 6 \u306b\u306a\u308b\n\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\nB \u306e\u4e2d\u3067 A \u3092 new \u3059\u308b\u3068 \u5bc6\u7d50\u5408\u3001 A \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u3067\u6e21\u3059\u3068 \u758e\u7d50\u5408\n\u3067\u3059\u3002\n\n\u5bc6\u7d50\u5408\u306e\u554f\u984c\u70b9\nB \u306e\u30af\u30e9\u30b9\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u305f\u304f\u306a\u3063\u305f\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\u5bc6\u7d50\u5408\u306e B \u306f\u5185\u90e8\u3067 A \u3092 new \u3057\u3066\u3044\u308b\u305f\u3081\u3001B\u306e\u30c6\u30b9\u30c8\u306bA\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001B \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306b A \u306e\u3053\u3068\u3082\u8003\u616e\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3053\u306e\u7a0b\u5ea6\u306e\u7c21\u5358\u306a\u4f8b\u306a\u3089\u5927\u3057\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u306e\u898f\u6a21\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u6642\u306b\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u304c\u5bc6\u7d50\u5408\u3060\u3068\u3001\u4e00\u90e8\u3092\u5207\u308a\u53d6\u3063\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u758e\u7d50\u5408\u306e\u554f\u984c\u70b9\n\u5bc6\u7d50\u5408\u306e\u554f\u984c\u70b9\u3067\u51fa\u3066\u304d\u305f\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001\u5358\u4f53\u306e\u30c6\u30b9\u30c8\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002\nclass DummyA extends A {\n  // \u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u3001\u5fc5\u305a\u30bc\u30ed\u3092\u8fd4\u3059\n  override def double(n: Int) = 0\n}\n\n\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u3092 B \u306b\u5165\u308c\u308c\u3070\u3001B \u306e\u6319\u52d5\u306e\u307f\u306b\u7740\u76ee\u3057\u305f\u30c6\u30b9\u30c8\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u305f\u3060\u3057\u30b3\u30fc\u30c9\u304c\u3084\u3084\u5197\u9577\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u672c\u984c\n\nPlay\u3067\u306f\u3069\u3046\u306a\u3063\u3066\u308b\u306e\uff1f\n\u57fa\u672c\u7684\u306b\u758e\u7d50\u5408\u3067\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066 javax.inject \u3092\u7528\u3044\u3066\u4f9d\u5b58\u6027\u3092\u89e3\u6c7a\u3057\u3066\u3044\u307e\u3059\u3002\nclass MyController @Inject() (\n  val messagesApi: MessagesApi,\n  myLogic        : MyLogic\n) extends Controller with I18nSupport {\n  ...\n}\n\n\u306a\u3069\u3068\u3057\u3066\u304a\u3051\u3070\u3001\u52dd\u624b\u306b MessagesApi \u3068 MyLogic \u3092\u6ce8\u5165\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\uff08\u8a73\u3057\u3044\u3053\u3068\u306f\u79c1\u3082\u3088\u304f\u77e5\u3089\u306a\u3044\uff09\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\n\u672c\u984c\u3067\u3059\u3002\n\u4e0a\u3067\u51fa\u3066\u304d\u305f MyController \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\nMessagesApi \u306f\u6b63\u5f0f\u540d\u79f0 play.api.i18n.MessagesApi \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u591a\u8a00\u8a9e\u5bfe\u5fdc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u3067\u306f\u5f71\u97ff\u3057\u306a\u3044\u306e\u3067\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057 MyLogic \u306f\u81ea\u4f5c\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3001MyController \u3068\u306f\u5207\u308a\u96e2\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3044\u305f\u3044\u3067\u3059\u3002\n\n\u30e2\u30c3\u30af\u3092\u7528\u610f\u3059\u308b\n\u305d\u3053\u3067\u30e2\u30c3\u30af\uff08\u30c6\u30b9\u30c8\u7528\u306e\u30c0\u30df\u30fc\u30af\u30e9\u30b9\uff09\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\ntest/controllers/MyControllerSpec.scala\nclass MockMyLogic @Inject() (\n  protected override val dbConfigProvider: DatabaseConfigProvider,\n  userDAO   : UserDAO,\n  productDAO: ProductDAO,\n  cartDAO   : CartDAO\n) extends MyLogic(dbConfigProvider, userDAO, productDAO, cartDAO) {\n  override def executeLogin(userId: UserId, password: String)(implicit ec: ExecutionContext): Future[User] = {\n    userId.toString match {\n      case \"1\" => Future.successful(User(userId, \"John\", Password(password)))\n      case \"2\" => Future.failed(new UserNotFoundError)\n      case \"3\" => Future.failed(new PasswordWrongError)\n      case _   => Future.failed(new RuntimeException(s\"Unsupported number ${userId}\"))\n    }\n  }\n}\n\n\n\u3053\u3061\u3089\u306b\u3082\u3044\u308d\u3044\u308d Inject \u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3059\u3079\u3066 DB \u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\u4eca\u56de\u306f executeLogin \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u30c0\u30df\u30fc\u5316\u3057\u307e\u3059\u3002\n\u672c\u6765\u306a\u3089 DB \u306b\u30c7\u30fc\u30bf\u3092\u805e\u304d\u306b\u884c\u3063\u3066\u3001\u30e6\u30fc\u30b6\u30fcID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u3044\u3082\u306e\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f \u30e6\u30fc\u30b6\u30fcID\u306e\u5024\u306b\u3088\u3063\u3066\u6210\u529f\u3068\u5931\u6557\u3092\u632f\u308a\u5206\u3051\u308b \u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u306e\u4e3b\u5f79\u306f MyController \u30b5\u30a4\u30c9\u306a\u306e\u3067\u3001DB\u3092\u308f\u3056\u308f\u3056\u7528\u610f\u3057\u3066\u3084\u308b\u306e\u3082\u3069\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3057\u3001MyLogic \u306b\u306f \u7d50\u679c\u304c\u78ba\u5b9f\u306b\u308f\u304b\u308b\u51e6\u7406\u3057\u304b\u3057\u3066\u307b\u3057\u304f\u306a\u3044 \u306e\u3067\u3059\u3002\n\n\u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\ntest/controllers/MyControllerSpec.scala\nclass MyControllerSpec extends Specification {\n  // play.api.Application \u3092\u4f5c\u6210\n  val mockApp: Application = new GuiceApplicationBuilder()\n    // MyLogic \u3092 MockMyLogic \u306b\u7f6e\u304d\u63db\u3048\u308b\n    .bindings(bind[MyLogic].to[MockMyLogic])\n    .build\n\n  // \u30c6\u30b9\u30c8\u3059\u308b MyController \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n  // MyLogic \u304c MockMyLogic \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u3066\u3044\u308b\u3002\n  val myController = mockApp.injector.instanceOf[MyController]\n\n  // ... \u7d9a\u304f\n}\n\n\nGuiceApplicationBuilder \u306f\u3053\u3053\u3067\u306f\u304a\u307e\u3058\u306a\u3044\u3068\u3057\u307e\u3059\u3002\nplay.api.Application \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3082\u306e\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u751f\u6210\u3059\u308b\uff08build\u3059\u308b\uff09\u524d\u306b MyLogic \u3092 MockMyLogic \u306b \u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u5b9f\u969b\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\ntest/controllers/MyControllerSpec.scala\nclass MyControllerSpec extends Specification {\n  // ... \u7d9a\u304d\n\n  \"MyController\" should {\n    \"Login request\" in new WithServer(mockApp) {\n      def login = addToken(myController.login)\n\n      val user1Response = Helpers.await(login(request(1)))\n      val user2Response = Helpers.await(login(request(2)))\n      val user3Response = Helpers.await(login(request(3)))\n      val user4Response = Helpers.await(login(request(4)))\n\n      // \u4e0a\u304b\u3089\u9806\u306b\n      // 1. \u6210\u529f\uff08\u30db\u30fc\u30e0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\uff09\n      // 2. \u30e6\u30fc\u30b6\u30fc\u898b\u3064\u304b\u3089\u306a\u3044\n      // 3. \u30d1\u30b9\u30ef\u30fc\u30c9\u4e0d\u4e00\u81f4\n      // 4. \u30a8\u30e9\u30fc\n      // \u304c\u8fd4\u308b\u306f\u305a\u3067\u3042\u308b\u3002\n\n      user1Response.header.status must beEqualTo(Status.SEE_OTHER )\n      user2Response.header.status must beEqualTo(Status.BAD_REQUEST)\n      user3Response.header.status must beEqualTo(Status.BAD_REQUEST)\n      user4Response.header.status must beEqualTo(Status.INTERNAL_SERVER_ERROR)\n    }\n  }\n}\n\n\nuser N Response \u306e\u4e2d\u3067\u547c\u3070\u308c\u3066\u3044\u308b\u30ed\u30b0\u30a4\u30f3\u5b9f\u884c\u90e8\u306f MockMyLogic \u3067\u5b9a\u7fa9\u3057\u305f\u901a\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u30cf\u30ba\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306f\u305d\u306e\u7d50\u679c\u3092 MyController \u304c\u3069\u3046\u634c\u304f\u304b\u306a\u306e\u3067\u3001\u305d\u306e\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u305d\u308c\u3063\u307d\u304f\u66f8\u3044\u3066\u304a\u3051\u3070\u3044\u3044\u611f\u3058\u306b Inject \u3057\u3066\u3082\u3089\u3048\u308b\u3002\n\u4f55\u3092\u30c6\u30b9\u30c8\u3059\u308b\u304b\u306b\u6ce8\u76ee\u3057\u3001\u305d\u306e\u4e3b\u5f79\u306b\u95a2\u4fc2\u306a\u3044\u3082\u306e\u306f \u5b9f\u884c\u7d50\u679c\u304c\u660e\u767d\u306a \u3082\u306e\u306b override \u3059\u308b\u3002\n# \u524d\u7f6e\u304d\n\n\u4f55\u3082\u8003\u3048\u305a\u306b PlayFramework \u3092\u4f7f\u3063\u3066\u3044\u3066\u3082\u3001 \u30d0\u30fc\u30b8\u30e7\u30f3 2.4 \u3042\u305f\u308a\u304b\u3089 `@Inject` \u304c\u767b\u5834\u3057\u307e\u3057\u305f\u306d\u3002\n\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3051\u3069\u52d5\u3044\u3066\u308b\u304b\u3089\u3044\u3044\u3084\u3068\u304b\u3001\u3060\u3044\u305f\u3044\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3093\u3067\u3057\u3087\u3063\u3066\u611f\u3058\u3067\u66f8\u3044\u3066\u308b\u4eba\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u3068\u3044\u3046\u304b\u79c1\u3067\u3059\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u6700\u5f8c\u307e\u3067\u300c\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u304f\u3093\u3067\u3057\u3087\u300d\u3067\u901a\u3057\u3066\u3044\u307e\u3059\u3002\u5f37\u3044\u4eba\u304b\u3089\u306e\u30de\u30b5\u30ab\u30ea\u5927\u6b53\u8fce\u3067\u3059\u3002\n\n\u7c21\u5358\u306a\u80cc\u666f\u8aac\u660e\u306e\u5f8c\u3001\u5b9f\u969b\u306e PlayFramework \u306e\u30a2\u30d7\u30ea\u3067\u3069\u3093\u306a\u611f\u3058\u3067\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u304b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u8aac\u660e\u3067\u4f7f\u3046\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f [\u30b3\u30c1\u30e9](https://github.com/srd7/playframework-original-type)\u3002\n\u4ee5\u524d\u306e\u8a18\u4e8b\u3067\u4f7f\u3063\u305f\u3082\u306e\u3092\u6d41\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u80cc\u666f\n## \u5bc6\u7d50\u5408\u3068\u758e\u7d50\u5408\n\u8907\u6570\u306e\u30af\u30e9\u30b9\u3092\u9023\u7d50\u3055\u305b\u308b\u6642\u3001**\u5bc6\u7d50\u5408** \u3068 **\u758e\u7d50\u5408** \u3068\u3044\u3046\u5927\u304d\u304f\u5206\u3051\u30662\u30d1\u30bf\u30fc\u30f3\u306e\u9023\u7d50\u65b9\u6cd5\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u5bc6\u7d50\u5408\u306e\u4f8b\uff1a\n\n```scala\nclass A { \n  def double(n: Int) = n * 2\n}\n\nclass B {\n  val a = new A\n  def doubleByA(n: Int) = a.double(n)\n}\n\nval b = new B\nb.doubleByA(3) // 6 \u306b\u306a\u308b\n```\n\n\u758e\u7d50\u5408\u306e\u4f8b\uff1a\n\n```scala\n\nclass A {\n  def double(n: Int) = n * 2\n}\n\nclass B(a: A) {\n  def doubleByA(n: Int) = a.double(n)\n}\n\nval a = new A\nval b = new B(a)\n\nb.doubleByA(3) // 6 \u306b\u306a\u308b\n```\n\n\u3056\u3063\u304f\u308a\u8a00\u3046\u3068\n**B \u306e\u4e2d\u3067 A \u3092 new \u3059\u308b\u3068 \u5bc6\u7d50\u5408\u3001 A \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5f15\u6570\u3067\u6e21\u3059\u3068 \u758e\u7d50\u5408**\n\u3067\u3059\u3002\n\n## \u5bc6\u7d50\u5408\u306e\u554f\u984c\u70b9\n\n`B` \u306e\u30af\u30e9\u30b9\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u305f\u304f\u306a\u3063\u305f\u3068\u3057\u307e\u3057\u3087\u3046\u3002\n\u5bc6\u7d50\u5408\u306e `B` \u306f\u5185\u90e8\u3067 `A` \u3092 new \u3057\u3066\u3044\u308b\u305f\u3081\u3001`B`\u306e\u30c6\u30b9\u30c8\u306b`A`\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3059\u306a\u308f\u3061\u3001`B` \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u306e\u306b `A` \u306e\u3053\u3068\u3082\u8003\u616e\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u3053\u306e\u7a0b\u5ea6\u306e\u7c21\u5358\u306a\u4f8b\u306a\u3089\u5927\u3057\u305f\u3053\u3068\u306f\u306a\u3044\u3067\u3059\u304c\u3001\u30a2\u30d7\u30ea\u306e\u898f\u6a21\u304c\u5927\u304d\u304f\u306a\u3063\u305f\u6642\u306b\u3001\u3059\u3079\u3066\u306e\u30af\u30e9\u30b9\u304c\u5bc6\u7d50\u5408\u3060\u3068\u3001\u4e00\u90e8\u3092\u5207\u308a\u53d6\u3063\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3046\u3053\u3068\u304c\u4e0d\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u758e\u7d50\u5408\u306e\u554f\u984c\u70b9\n\n\u5bc6\u7d50\u5408\u306e\u554f\u984c\u70b9\u3067\u51fa\u3066\u304d\u305f\u30c6\u30b9\u30c8\u306b\u3064\u3044\u3066\u306f\u3001\u5358\u4f53\u306e\u30c6\u30b9\u30c8\u304c\u5bb9\u6613\u306b\u306a\u308a\u307e\u3059\u3002\n\n```scala\nclass DummyA extends A {\n  // \u30c6\u30b9\u30c8\u306e\u305f\u3081\u306b\u3001\u5fc5\u305a\u30bc\u30ed\u3092\u8fd4\u3059\n  override def double(n: Int) = 0\n}\n```\n\u306e\u3088\u3046\u306a\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30b9\u3092 `B` \u306b\u5165\u308c\u308c\u3070\u3001`B` \u306e\u6319\u52d5\u306e\u307f\u306b\u7740\u76ee\u3057\u305f\u30c6\u30b9\u30c8\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u305f\u3060\u3057\u30b3\u30fc\u30c9\u304c\u3084\u3084\u5197\u9577\u306b\u306a\u308a\u307e\u3059\u3002\n\n# \u672c\u984c\n## Play\u3067\u306f\u3069\u3046\u306a\u3063\u3066\u308b\u306e\uff1f\n\n\u57fa\u672c\u7684\u306b\u758e\u7d50\u5408\u3067\u3044\u308d\u3044\u308d\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u3057\u3066 `javax.inject` \u3092\u7528\u3044\u3066\u4f9d\u5b58\u6027\u3092\u89e3\u6c7a\u3057\u3066\u3044\u307e\u3059\u3002\n\n```scala\nclass MyController @Inject() (\n  val messagesApi: MessagesApi,\n  myLogic        : MyLogic\n) extends Controller with I18nSupport {\n  ...\n}\n```\n\u306a\u3069\u3068\u3057\u3066\u304a\u3051\u3070\u3001\u52dd\u624b\u306b `MessagesApi` \u3068 `MyLogic` \u3092\u6ce8\u5165\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\uff08\u8a73\u3057\u3044\u3053\u3068\u306f\u79c1\u3082\u3088\u304f\u77e5\u3089\u306a\u3044\uff09\n\n## \u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\n\n\u672c\u984c\u3067\u3059\u3002\n\u4e0a\u3067\u51fa\u3066\u304d\u305f `MyController` \u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\n\n`MessagesApi` \u306f\u6b63\u5f0f\u540d\u79f0 `play.api.i18n.MessagesApi` \u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u7528\u610f\u3057\u3066\u3044\u308b\u591a\u8a00\u8a9e\u5bfe\u5fdc\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u3067\u306f\u5f71\u97ff\u3057\u306a\u3044\u306e\u3067\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057 `MyLogic` \u306f\u81ea\u4f5c\u30b3\u30fc\u30c9\u306a\u306e\u3067\u3001`MyController` \u3068\u306f\u5207\u308a\u96e2\u3057\u3066\u30c6\u30b9\u30c8\u3092\u884c\u3044\u305f\u3044\u3067\u3059\u3002\n\n### \u30e2\u30c3\u30af\u3092\u7528\u610f\u3059\u308b\n\u305d\u3053\u3067\u30e2\u30c3\u30af\uff08\u30c6\u30b9\u30c8\u7528\u306e\u30c0\u30df\u30fc\u30af\u30e9\u30b9\uff09\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```test/controllers/MyControllerSpec.scala\nclass MockMyLogic @Inject() (\n  protected override val dbConfigProvider: DatabaseConfigProvider,\n  userDAO   : UserDAO,\n  productDAO: ProductDAO,\n  cartDAO   : CartDAO\n) extends MyLogic(dbConfigProvider, userDAO, productDAO, cartDAO) {\n  override def executeLogin(userId: UserId, password: String)(implicit ec: ExecutionContext): Future[User] = {\n    userId.toString match {\n      case \"1\" => Future.successful(User(userId, \"John\", Password(password)))\n      case \"2\" => Future.failed(new UserNotFoundError)\n      case \"3\" => Future.failed(new PasswordWrongError)\n      case _   => Future.failed(new RuntimeException(s\"Unsupported number ${userId}\"))\n    }\n  }\n}\n```\n\u3053\u3061\u3089\u306b\u3082\u3044\u308d\u3044\u308d `Inject` \u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3059\u3079\u3066 DB \u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u5fc5\u8981\u306a\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\u4eca\u56de\u306f `executeLogin` \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092\u30c0\u30df\u30fc\u5316\u3057\u307e\u3059\u3002\n\u672c\u6765\u306a\u3089 DB \u306b\u30c7\u30fc\u30bf\u3092\u805e\u304d\u306b\u884c\u3063\u3066\u3001\u30e6\u30fc\u30b6\u30fcID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u3044\u3082\u306e\u304b\u3092\u5224\u65ad\u3057\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f **\u30e6\u30fc\u30b6\u30fcID\u306e\u5024\u306b\u3088\u3063\u3066\u6210\u529f\u3068\u5931\u6557\u3092\u632f\u308a\u5206\u3051\u308b** \u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30b9\u30c8\u306e\u4e3b\u5f79\u306f `MyController` \u30b5\u30a4\u30c9\u306a\u306e\u3067\u3001DB\u3092\u308f\u3056\u308f\u3056\u7528\u610f\u3057\u3066\u3084\u308b\u306e\u3082\u3069\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3057\u3001`MyLogic` \u306b\u306f **\u7d50\u679c\u304c\u78ba\u5b9f\u306b\u308f\u304b\u308b\u51e6\u7406\u3057\u304b\u3057\u3066\u307b\u3057\u304f\u306a\u3044** \u306e\u3067\u3059\u3002\n\n### \u30e2\u30c3\u30af\u3092\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u3092\u4f5c\u6210\u3059\u308b\n\n```test/controllers/MyControllerSpec.scala\nclass MyControllerSpec extends Specification {\n  // play.api.Application \u3092\u4f5c\u6210\n  val mockApp: Application = new GuiceApplicationBuilder()\n    // MyLogic \u3092 MockMyLogic \u306b\u7f6e\u304d\u63db\u3048\u308b\n    .bindings(bind[MyLogic].to[MockMyLogic])\n    .build\n\n  // \u30c6\u30b9\u30c8\u3059\u308b MyController \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3002\n  // MyLogic \u304c MockMyLogic \u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u3066\u3044\u308b\u3002\n  val myController = mockApp.injector.instanceOf[MyController]\n\n  // ... \u7d9a\u304f\n}\n```\n\n`GuiceApplicationBuilder` \u306f\u3053\u3053\u3067\u306f\u304a\u307e\u3058\u306a\u3044\u3068\u3057\u307e\u3059\u3002\n`play.api.Application` \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u3082\u306e\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001\u751f\u6210\u3059\u308b\uff08`build`\u3059\u308b\uff09\u524d\u306b `MyLogic` \u3092 `MockMyLogic` \u306b **\u7f6e\u304d\u63db\u3048\u307e\u3059**\u3002\n\n\n### \u5b9f\u969b\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```test/controllers/MyControllerSpec.scala\nclass MyControllerSpec extends Specification {\n  // ... \u7d9a\u304d\n\n  \"MyController\" should {\n    \"Login request\" in new WithServer(mockApp) {\n      def login = addToken(myController.login)\n\n      val user1Response = Helpers.await(login(request(1)))\n      val user2Response = Helpers.await(login(request(2)))\n      val user3Response = Helpers.await(login(request(3)))\n      val user4Response = Helpers.await(login(request(4)))\n\n      // \u4e0a\u304b\u3089\u9806\u306b\n      // 1. \u6210\u529f\uff08\u30db\u30fc\u30e0\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\uff09\n      // 2. \u30e6\u30fc\u30b6\u30fc\u898b\u3064\u304b\u3089\u306a\u3044\n      // 3. \u30d1\u30b9\u30ef\u30fc\u30c9\u4e0d\u4e00\u81f4\n      // 4. \u30a8\u30e9\u30fc\n      // \u304c\u8fd4\u308b\u306f\u305a\u3067\u3042\u308b\u3002\n\n      user1Response.header.status must beEqualTo(Status.SEE_OTHER )\n      user2Response.header.status must beEqualTo(Status.BAD_REQUEST)\n      user3Response.header.status must beEqualTo(Status.BAD_REQUEST)\n      user4Response.header.status must beEqualTo(Status.INTERNAL_SERVER_ERROR)\n    }\n  }\n}\n```\n\nuser _N_ Response \u306e\u4e2d\u3067\u547c\u3070\u308c\u3066\u3044\u308b\u30ed\u30b0\u30a4\u30f3\u5b9f\u884c\u90e8\u306f `MockMyLogic` \u3067\u5b9a\u7fa9\u3057\u305f\u901a\u308a\u306b\u306a\u3063\u3066\u3044\u308b\u30cf\u30ba\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c1\u30a7\u30c3\u30af\u30dd\u30a4\u30f3\u30c8\u306f\u305d\u306e\u7d50\u679c\u3092 `MyController` \u304c\u3069\u3046\u634c\u304f\u304b\u306a\u306e\u3067\u3001\u305d\u306e\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u307e\u3068\u3081\n\n\u305d\u308c\u3063\u307d\u304f\u66f8\u3044\u3066\u304a\u3051\u3070\u3044\u3044\u611f\u3058\u306b `Inject` \u3057\u3066\u3082\u3089\u3048\u308b\u3002\n\u4f55\u3092\u30c6\u30b9\u30c8\u3059\u308b\u304b\u306b\u6ce8\u76ee\u3057\u3001\u305d\u306e\u4e3b\u5f79\u306b\u95a2\u4fc2\u306a\u3044\u3082\u306e\u306f **\u5b9f\u884c\u7d50\u679c\u304c\u660e\u767d\u306a** \u3082\u306e\u306b `override` \u3059\u308b\u3002\n", "tags": ["Scala", "PlayFramework", "DependencyInjection"]}