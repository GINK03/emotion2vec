{"context": "\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f\u3001EV3\u306bev3dev\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001SSH\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nmindstorm-EV3\u3092Linux\u3067\u5236\u5fa1\u3057\u3088\u3046! ev3dev OS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068SSH\u63a5\u7d9a\n\n\n\u6982\u8981\nev3dev\u3067\u306fEV3\u306eLCD\u3092\u3069\u306e\u3088\u3046\u306b\u5236\u5fa1\u3067\u304d\u308b\u306e\u304b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u56f3\u3092\u7528\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\npython\u88fd\u30e9\u30a4\u30d6\u30e9\u30ea\u306eev3dev-lang-python\u306b\u306fLCD\u3092\u7c21\u5358\u306b\u5236\u5fa1\u3067\u304d\u308bAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u306bLCD\u5236\u5fa1\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\n\nLCD\u306e\u4ed5\u7d44\u307f\nEV3\u306eLCD\u306f178 x 128\u30d4\u30af\u30bb\u30eb\u306e\u30e2\u30ce\u30af\u30ed\u753b\u9762\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30c7\u30aa\u30c9\u30e9\u30a4\u30d0\u30fc\u306fLinux\u306eframebuffer\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u3001\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb/dev/fb0\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067LCD\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\nframebuffer\u306e\u60c5\u5831\u3092fbset -i\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nrobot@ev3dev:~$ fbset -i\n\nmode \"178x128\"\n    geometry 178 128 178 128 1\n    timings 0 0 0 0 0 0 0\n    rgba 1/0,1/0,1/0,0/0\nendmode\n\nFrame buffer device information:\n    Name        : ST7586\n    Address     : 0xc39f9000\n    Size        : 3072\n    Type        : PACKED PIXELS\n    Visual      : MONO01\n    XPanStep    : 0\n    YPanStep    : 0\n    YWrapStep   : 0\n    LineLength  : 24\n    Accelerator : No\n\nLCD\u304c178 x 128\u30d4\u30af\u30bb\u30eb\u3067\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u3001\u6c34\u5e73\u65b9\u5411\u4e00\u5217\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u304c24byte\u3067\u8868\u3055\u305b\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n(\u4e0b\u56f3)\n\nLCD\u306f\u30e2\u30ce\u30af\u30ed\uff08\u30ab\u30e9\u30fc\u3067\u306f\u306a\u3044\uff09\u306a\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u6700\u5c0f\u30d4\u30af\u30bb\u30eb\u306f0\u304b1\u306e\u30d0\u30a4\u30ca\u30ea\u30fc\u30c7\u30fc\u30bf\u3068\u306a\u308a\u307e\u3059\u3002\n1byte=8bit\u306a\u306e\u3067\u3001178px\u3092\u8868\u73fe\u3059\u308b\u306b\u306f178/8=22.25(byte)\u3042\u308c\u3070\u8db3\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u5b9f\u969b\u306b\u306f\u3001\u6c34\u5e73\u65b9\u5411\u4e00\u5217\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f24byte\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a24byte\u306e\u30c7\u30fc\u30bf\u5168\u3066\u304c\u753b\u9762\u4e0a\u306b\u8868\u793a\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nLCD\u3092\u5236\u5fa1\u3059\u308b\u306b\u306f24byte x 128(rows) = 3072byte\u306e\u30c7\u30fc\u30bf\u3092\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u56f3\u5f62\u3092\u8868\u793a\u3055\u305b\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n#!/usr/bin/env python\n\n# Hard coding these values is not a good idea because the values could\n# change. But, since this is an example, we want to keep it short.\nSCREEN_WIDTH = 178 # pixels\nSCREEN_HEIGHT = 128 # pixels\nLINE_LENGTH = 24 # bytes\nSIZE = 3072 # bytes\n\nimport os\nimport array\n\n\ndef main():\n    # \u8981\u7d20\u65703072\u306e\u914d\u5217\u3092\u5b9a\u7fa9\n    buf = [0] * SIZE\n\n    # 100\u30ab\u30e9\u30e0\u76ee\u306b\u7e26\u7dda\u3092\u5f15\u304f\n    for row in range(0, SCREEN_HEIGHT):\n        buf[row * LINE_LENGTH + int(100 / 8)] = 1 << (100 % 8)\n\n    # 64\u5217\u76ee\u306b\u6c34\u5e73\u7dda\u3092\u5f15\u304f\n    for col in range(0, LINE_LENGTH):\n        buf[64 * LINE_LENGTH + col] = 0xff\n\n\n    import math\n    # \u4e2d\u5fc3\u70b9 (40,40), \u534a\u5f84 20\u306e\u5186\u3092\u63cf\u304f\n    for x in range(0, 20):\n        y = math.sqrt(20 * 20 - x * x)\n        buf[(40 + int(y)) * LINE_LENGTH + int((40 + x) / 8)] = 1 << ((40 + x) % 8)\n        buf[(40 - int(y)) * LINE_LENGTH + int((40 + x) / 8)] = 1 << ((40 + x) % 8)\n        buf[(40 + int(y)) * LINE_LENGTH + int((40 - x) / 8)] = 1 << ((40 - x) % 8)\n        buf[(40 - int(y)) * LINE_LENGTH + int((40 - x) / 8)] = 1 << ((40 - x) % 8)\n\n    # \u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f\n    f = os.open('/dev/fb0', os.O_RDWR)\n    s = array.array('B', buf).tostring()\n    os.write(f, s)\n    os.close(f)\n\nif __name__ == '__main__':\n    main()\n\n\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3055\u305b\u5b9f\u884c\u3059\u308b\u3068LCD\u753b\u9762\u306b\u56f3\u5f62\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u8907\u96d1\u306aLCD\u5236\u5fa1\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\n\nUsing the EV3 LCD \n\u753b\u9762\u30ad\u30e3\u30d7\u30c1\u30e3\n\u3010ev3dev\u3011python\u3092\u4f7f\u3063\u3066LCD(\u753b\u9762)\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## \u306f\u3058\u3081\u306b\n\n\u3053\u306e\u8a18\u4e8b\u306f\u3001EV3\u306bev3dev\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3001SSH\u63a5\u7d9a\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\u74b0\u5883\u69cb\u7bc9\u304c\u3067\u304d\u3066\u3044\u306a\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n>\n[mindstorm-EV3\u3092Linux\u3067\u5236\u5fa1\u3057\u3088\u3046! ev3dev OS\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068SSH\u63a5\u7d9a](http://qiita.com/murotani/items/46f905bec33b1673c41a)\n\n\n## \u6982\u8981\n\nev3dev\u3067\u306fEV3\u306eLCD\u3092\u3069\u306e\u3088\u3046\u306b\u5236\u5fa1\u3067\u304d\u308b\u306e\u304b\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u56f3\u3092\u7528\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\u3002\npython\u88fd\u30e9\u30a4\u30d6\u30e9\u30ea\u306e[ev3dev-lang-python](https://github.com/rhempel/ev3dev-lang-python)\u306b\u306fLCD\u3092\u7c21\u5358\u306b\u5236\u5fa1\u3067\u304d\u308bAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3089\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u306bLCD\u5236\u5fa1\u306e\u4ed5\u7d44\u307f\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\n\n\n## LCD\u306e\u4ed5\u7d44\u307f\nEV3\u306eLCD\u306f178 x 128\u30d4\u30af\u30bb\u30eb\u306e\u30e2\u30ce\u30af\u30ed\u753b\u9762\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u30d3\u30c7\u30aa\u30c9\u30e9\u30a4\u30d0\u30fc\u306fLinux\u306eframebuffer\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306b\u3088\u3063\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u3066\u3001\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb/dev/fb0\u306b\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067LCD\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\nframebuffer\u306e\u60c5\u5831\u3092```fbset -i```\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u3066\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\nrobot@ev3dev:~$ fbset -i\n\nmode \"178x128\"\n    geometry 178 128 178 128 1\n    timings 0 0 0 0 0 0 0\n    rgba 1/0,1/0,1/0,0/0\nendmode\n\nFrame buffer device information:\n    Name        : ST7586\n    Address     : 0xc39f9000\n    Size        : 3072\n    Type        : PACKED PIXELS\n    Visual      : MONO01\n    XPanStep    : 0\n    YPanStep    : 0\n    YWrapStep   : 0\n    LineLength  : 24\n    Accelerator : No\n```\n\nLCD\u304c178 x 128\u30d4\u30af\u30bb\u30eb\u3067\u69cb\u6210\u3055\u308c\u308b\u3053\u3068\u3001\u6c34\u5e73\u65b9\u5411\u4e00\u5217\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u304c24byte\u3067\u8868\u3055\u305b\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n(\u4e0b\u56f3)\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-18 17.20.36.png](https://qiita-image-store.s3.amazonaws.com/0/149019/7fc65d3b-49f9-dcc0-f713-621a6116579f.png)\n\nLCD\u306f\u30e2\u30ce\u30af\u30ed\uff08\u30ab\u30e9\u30fc\u3067\u306f\u306a\u3044\uff09\u306a\u306e\u3067\u3001\u305d\u308c\u305e\u308c\u306e\u6700\u5c0f\u30d4\u30af\u30bb\u30eb\u306f0\u304b1\u306e\u30d0\u30a4\u30ca\u30ea\u30fc\u30c7\u30fc\u30bf\u3068\u306a\u308a\u307e\u3059\u3002\n1byte=8bit\u306a\u306e\u3067\u3001178px\u3092\u8868\u73fe\u3059\u308b\u306b\u306f178/8=22.25(byte)\u3042\u308c\u3070\u8db3\u308a\u307e\u3059\u3002\u3057\u304b\u3057\u5b9f\u969b\u306b\u306f\u3001\u6c34\u5e73\u65b9\u5411\u4e00\u5217\u306e\u30d4\u30af\u30bb\u30eb\u60c5\u5831\u306f24byte\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a24byte\u306e\u30c7\u30fc\u30bf\u5168\u3066\u304c\u753b\u9762\u4e0a\u306b\u8868\u793a\u3055\u308c\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n## \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nLCD\u3092\u5236\u5fa1\u3059\u308b\u306b\u306f24byte x 128(rows) = 3072byte\u306e\u30c7\u30fc\u30bf\u3092\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u304d\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u56f3\u5f62\u3092\u8868\u793a\u3055\u305b\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n![9.png](https://qiita-image-store.s3.amazonaws.com/0/149019/e5acdeae-6a05-e160-35ec-41c542e0e7e9.png)\n\n```py\n#!/usr/bin/env python\n\n# Hard coding these values is not a good idea because the values could\n# change. But, since this is an example, we want to keep it short.\nSCREEN_WIDTH = 178 # pixels\nSCREEN_HEIGHT = 128 # pixels\nLINE_LENGTH = 24 # bytes\nSIZE = 3072 # bytes\n\nimport os\nimport array\n\n\ndef main():\n    # \u8981\u7d20\u65703072\u306e\u914d\u5217\u3092\u5b9a\u7fa9\n    buf = [0] * SIZE\n\n    # 100\u30ab\u30e9\u30e0\u76ee\u306b\u7e26\u7dda\u3092\u5f15\u304f\n    for row in range(0, SCREEN_HEIGHT):\n        buf[row * LINE_LENGTH + int(100 / 8)] = 1 << (100 % 8)\n\n    # 64\u5217\u76ee\u306b\u6c34\u5e73\u7dda\u3092\u5f15\u304f\n    for col in range(0, LINE_LENGTH):\n        buf[64 * LINE_LENGTH + col] = 0xff\n\n\n    import math\n    # \u4e2d\u5fc3\u70b9 (40,40), \u534a\u5f84 20\u306e\u5186\u3092\u63cf\u304f\n    for x in range(0, 20):\n        y = math.sqrt(20 * 20 - x * x)\n        buf[(40 + int(y)) * LINE_LENGTH + int((40 + x) / 8)] = 1 << ((40 + x) % 8)\n        buf[(40 - int(y)) * LINE_LENGTH + int((40 + x) / 8)] = 1 << ((40 + x) % 8)\n        buf[(40 + int(y)) * LINE_LENGTH + int((40 - x) / 8)] = 1 << ((40 - x) % 8)\n        buf[(40 - int(y)) * LINE_LENGTH + int((40 - x) / 8)] = 1 << ((40 - x) % 8)\n\n    # \u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u66f8\u304d\u8fbc\u307f\n    f = os.open('/dev/fb0', os.O_RDWR)\n    s = array.array('B', buf).tostring()\n    os.write(f, s)\n    os.close(f)\n\nif __name__ == '__main__':\n    main()\n```\n \n\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3055\u305b\u5b9f\u884c\u3059\u308b\u3068LCD\u753b\u9762\u306b\u56f3\u5f62\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u8907\u96d1\u306aLCD\u5236\u5fa1\u3092\u3057\u305f\u3044\u5834\u5408\u3001\u53c2\u8003\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\n>\n[Using the EV3 LCD ](http://www.ev3dev.org/docs/tutorials/using-ev3-lcd/)\n\n> \n\u753b\u9762\u30ad\u30e3\u30d7\u30c1\u30e3\n[\u3010ev3dev\u3011python\u3092\u4f7f\u3063\u3066LCD(\u753b\u9762)\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u30fc\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b](http://qiita.com/murotani/items/8f301c57d3e5741ea8f7)\n", "tags": ["Python", "EV3", "ev3dev", "lcd"]}