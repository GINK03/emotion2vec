{"context": " More than 1 year has passed since last update.Browserstack Screenshot API\u3092\u4f7f\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\u307e\u305aRuby Client\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\ngem install \"browserstack-screenshot\"\n\n\u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u5bb9\u91cf\u3067screenshot\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n# Screenhost API\u306e\u521d\u671f\u5316\nconfig = { username: Settings.browserstack.username, password: Settings.browserstack.password }\nclient = Screenshot::Client.new(config)\n\n# Browser API\u306e\u7d50\u679c\u306fObject Array\u306a\u306e\u3067\u3001`Windows_XP_chrome_35.0`\u306e\u3088\u3046\u306a\u30ad\u30fc\u306e\u30de\u30c3\u30d7\u306b\u5909\u63db\u3057\u3066\u304a\u304f\nall_browsers = client.get_os_and_browsers.inject({}) do |data, browser|\n  key = browser.slice(:device, :os, :os_version, :browser, :browser_version).select{ |k, v| v.to_s != \"\" }.map{ |k, v| v.to_s.gsub(/\\s+/, \"-\").gsub(/[^a-zA-Z0-9.\\-]/, \"\") }.join(\"_\")\n  data[key] = browser\n  data\nend\n\n# \u5b9f\u969b\u306f\u3053\u3053\u3067\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u7b49\u3057\u3066\u304a\u304f\n\n# browser\u540d\u3092\u30ad\u30fc\u306b\u8a2d\u5b9a\u3092\u69cb\u7bc9\u3059\u308b\nbrowsers = (ENV[\"BROWSERSTACK_BROWSERS\"] || \"OS-X_Lion_firefox_37.0\").split(\",\").map { |name| all_browsers[name] }\nrequest = {\n  url: \"http://www.google.com/\",\n  win_res: ENV[\"BROWSERSTACK_WINDOWS_RESOLUTION\"], #Options : \"1024x768\", \"1280x1024\"\n  mac_res: ENV[\"BROWSERSTACK_MAC_RESOLUTION\"], #Options : \"1024x768\", \"1280x960\", \"1280x1024\", \"1600x1200\", \"1920x1080\"\n  quality: \"compressed\",\n  wait_time: 10, \n  orientation: ENV[\"BROWSERSTACK_ORIENTATION\"], #Options: \"portrait\", \"landscape\"\n  browsers: browsers\n}\n\n# Screenshot\u306e\u53d6\u5f97\nrequest_id = @client.generate_screenshots(request)\nwhile @client.screenshots_status(request_id) != \"done\"\n  sleep 5\nend\nresults = @client.screenshots(request_id)\nresults[:image_url]\n\n\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\u5b9f\u969b\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306f\u30d6\u30e9\u30a6\u30b6\u30b9\u30bf\u30c3\u30af\u5074\u306b\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bindex\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3042\u3052\u308b\u3068\u898b\u6804\u3048\u304c\u826f\u3044\u3067\u3059\u3002\nScreenshot\u3092\u53d6\u3063\u3066\u6765\u3066S3\u306bindex\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u3059\u308b\u30b5\u30f3\u30d7\u30ebRake\u30bf\u30b9\u30af\u3092Github\u306b\u3042\u3052\u307e\u3057\u305f\u3002\n\nhttps://github.com/dtaniwaki/browserstack-screenshot-task\n[Browserstack Screenshot API](https://www.browserstack.com/screenshots/api)\u3092\u4f7f\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u307e\u305aRuby Client\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```rb\ngem install \"browserstack-screenshot\"\n```\n\n\u305d\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u5bb9\u91cf\u3067screenshot\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```rb\n# Screenhost API\u306e\u521d\u671f\u5316\nconfig = { username: Settings.browserstack.username, password: Settings.browserstack.password }\nclient = Screenshot::Client.new(config)\n\n# Browser API\u306e\u7d50\u679c\u306fObject Array\u306a\u306e\u3067\u3001`Windows_XP_chrome_35.0`\u306e\u3088\u3046\u306a\u30ad\u30fc\u306e\u30de\u30c3\u30d7\u306b\u5909\u63db\u3057\u3066\u304a\u304f\nall_browsers = client.get_os_and_browsers.inject({}) do |data, browser|\n  key = browser.slice(:device, :os, :os_version, :browser, :browser_version).select{ |k, v| v.to_s != \"\" }.map{ |k, v| v.to_s.gsub(/\\s+/, \"-\").gsub(/[^a-zA-Z0-9.\\-]/, \"\") }.join(\"_\")\n  data[key] = browser\n  data\nend\n\n# \u5b9f\u969b\u306f\u3053\u3053\u3067\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u7b49\u3057\u3066\u304a\u304f\n\n# browser\u540d\u3092\u30ad\u30fc\u306b\u8a2d\u5b9a\u3092\u69cb\u7bc9\u3059\u308b\nbrowsers = (ENV[\"BROWSERSTACK_BROWSERS\"] || \"OS-X_Lion_firefox_37.0\").split(\",\").map { |name| all_browsers[name] }\nrequest = {\n  url: \"http://www.google.com/\",\n  win_res: ENV[\"BROWSERSTACK_WINDOWS_RESOLUTION\"], #Options : \"1024x768\", \"1280x1024\"\n  mac_res: ENV[\"BROWSERSTACK_MAC_RESOLUTION\"], #Options : \"1024x768\", \"1280x960\", \"1280x1024\", \"1600x1200\", \"1920x1080\"\n  quality: \"compressed\",\n  wait_time: 10, \n  orientation: ENV[\"BROWSERSTACK_ORIENTATION\"], #Options: \"portrait\", \"landscape\"\n  browsers: browsers\n}\n\n# Screenshot\u306e\u53d6\u5f97\nrequest_id = @client.generate_screenshots(request)\nwhile @client.screenshots_status(request_id) != \"done\"\n  sleep 5\nend\nresults = @client.screenshots(request_id)\nresults[:image_url]\n```\n\n\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\n\u5b9f\u969b\u306e\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u306f\u30d6\u30e9\u30a6\u30b6\u30b9\u30bf\u30c3\u30af\u5074\u306b\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bindex\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3042\u3052\u308b\u3068\u898b\u6804\u3048\u304c\u826f\u3044\u3067\u3059\u3002\n\n\nScreenshot\u3092\u53d6\u3063\u3066\u6765\u3066S3\u306bindex\u30d5\u30a1\u30a4\u30eb\u3092\u30a2\u30c3\u30d7\u3059\u308b\u30b5\u30f3\u30d7\u30ebRake\u30bf\u30b9\u30af\u3092Github\u306b\u3042\u3052\u307e\u3057\u305f\u3002\n\n<img width=\"1199\" alt=\"Screen Shot 2015-12-24 at 1.29.37 AM.png\" src=\"https://kaizen.qiita.com/files/a6235757-0f2d-b4bc-8ed0-cedff0d5dac0.png\">\n\nhttps://github.com/dtaniwaki/browserstack-screenshot-task\n", "tags": ["BrowserStack", "Ruby", "rake"]}