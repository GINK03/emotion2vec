{"context": " More than 1 year has passed since last update.\n\nAt first\n\n\u3053\u306e\u30da\u30fc\u30b8\u306f\u300cRICOH THETA Advent Calendar 2015\u300d17\u65e5\u76ee\u306e\u30da\u30fc\u30b8\u3067\u3059\nRICOH THETA S \u3067\u306f\u30ab\u30e1\u30e9\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u64cd\u4f5c\u3059\u308bAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\n\n\n\u3053\u306e\u30e2\u30c7\u30eb\u304b\u3089\u3001Open Spherical Camera\u6e96\u62e0\u306eAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\n\u4ee5\u524d\u306e\u30e2\u30c7\u30eb\u3088\u308a\u3001\u7c21\u5358\u306b\u4efb\u610f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3089\u64cd\u4f5c\u3092\u884c\u3048\u308b\n\n\n\u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u3067THETA S \u306e OSC API\u3092\u53e9\u3044\u3066\u307f\u305f\uff01\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\n\u3053\u306e\u30da\u30fc\u30b8\u304c THETA S \u306eAPI\u3092\u53e9\u3044\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u4eba\u306e\u53c2\u8003\u306b\u306a\u308b\u3068\u5e78\u3044\u3067\u3059\n\n\nRICOH THETA API V2\n\u958b\u767a\u8005\u5411\u3051\u306e\u30da\u30fc\u30b8\u304c\u3042\u308a\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3068\u30d5\u30a9\u30fc\u30e9\u30e0\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u672c\u30da\u30fc\u30b8\u3067\u306fGetting Started\u3092\u5143\u306b\u3057\u3064\u3064\u3001\u4e0b\u8a18\u306eAPI\u3092\u5b9f\u969b\u306b\u53e9\u3044\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\n\n\n\u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u53d6\u5f97 GET /osc/info\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb POST /osc/commands/execute camera.startSession\n\n\u9759\u6b62\u753b\u64ae\u5f71 POST /osc/commands/execute camera.takePicture\n\n\u64ae\u5f71\u72b6\u614b\u306e\u53d6\u5f97 POST /OSC/state\n\n\u30d5\u30a1\u30a4\u30eb\u53d6\u5f97 POST /osc/commands/execute camera.getImage\n\n\u30bb\u30c3\u30b7\u30e7\u30f3\u7d42\u4e86  POST /osc/commands/execute camera.closeSession\n\n\u57fa\u672c\u7684\u306bPOST\u3067JSON\u5f62\u5f0f\u306e\u30d1\u30e9\u30e1\u30bf\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3084\u308a\u53d6\u308a\u3057\u307e\u3059\u3002\n\nPrerequisite\n\nOS X 10.10.5\u4e0a\u3067\u5b9f\u884c\nTHETA S \u306e Wi-Fi\u306b\u63a5\u7d9a\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\n\n\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u3064\u306a\u304e\u306a\u304c\u3089\u3001THETA S\u306eAPI\u3092\u53e9\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f15\u65e5\u76ee\u306e\u8a18\u4e8b\u306b\u8a73\u3057\u3044\u3067\u3059\n\n\n\u306a\u308b\u3079\u304f\u5404\u8a00\u8a9e\u306e\u6a19\u6e96\u74b0\u5883\u3067\u51fa\u6765\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\nTHETA\u672c\u4f53\u304c Accept\u30d8\u30c3\u30c0\u3084 Content-Type \u306e\u8a2d\u5b9a\u3092\u884c\u308f\u306a\u304f\u3066\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\u305f\u3081\u3001\u4e0d\u8981\u306a\u3082\u306e\u306f\u7701\u3044\u3066\u3044\u307e\u3059\n\u30a8\u30e9\u30fc\u51e6\u7406\u306f\u57fa\u672c\u7684\u306b\u884c\u3044\u307e\u305b\u3093\n\n\nShell Script\n\u307e\u305a\u306f\u51e6\u7406\u306e\u6d41\u308c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u63b4\u3080\u305f\u3081\u306b\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3082\u78ba\u8a8d\u3057\u306a\u304c\u3089Shell\u304b\u3089\u53e9\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u4eca\u56de\u306fMac OS X\u306b\u6a19\u6e96\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u300ccurl\u300d\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\n# \u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u53d6\u5f97\n$ curl http://192.168.1.1:80/osc/info\n{\"manufacturer\":\"RICOH\",\"model\":\"RICOH THETA S\",\"serialNumber\":\"XXXXXXXX\",\"firmwareVersion\":\"01.11\",\"supportUrl\":\"https://theta360.com/en/support/\",\"endpoints\":{\"httpPort\":80,\"httpUpdatesPort\":80},\"gps\":false,\"gyro\":false,\"uptime\":583,\"api\":[\"/osc/info\",\"/osc/state\",\"/osc/checkForUpdates\",\"/osc/commands/execute\",\"/osc/commands/status\"]}\n\n\u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5024\u306f\u3053\u306e\u5f8c\u3067\u306f\u7279\u306b\u7528\u3044\u307e\u305b\u3093\u3002\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.startSession\"}'\n{\"name\":\"camera.startSession\",\"state\":\"done\",\"results\":{ \"sessionId\":\"SID_0001\",\"timeout\":180}}\n\n\u3053\u3053\u3067\u53d6\u5f97\u3059\u308b\u300csessionId\u300d\u3092\u3001\u3053\u306e\u5f8c\u5229\u7528\u3057\u307e\u3059\u3002\u624b\u52d5\u3067\u6b21\u306e\u884c\u306e \"SID_0001\"\u306b\u8a72\u5f53\u3059\u308b\u7b87\u6240\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n# \u9759\u6b62\u753b\u64ae\u5f71\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.takePicture\", \"parameters\": {\"sessionId\": \"SID_0001\"}}'\n{\"name\":\"camera.takePicture\",\"state\":\"inProgress\",\"id\":\"2\",\"progress\":{\"completion\":0.0}}\n\n\u30ab\u30e1\u30e9\u304c\u30ad\u30e5\u30a4\u30f3\u3068\u3044\u3044\u307e\u3059\u3002\u753b\u50cf\u306e\u64ae\u5f71\u7d42\u4e86\u307e\u3067\u3001\u591a\u5c11\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n# \u64ae\u5f71\u72b6\u614b\u306e\u53d6\u5f97\n$ curl -X POST http://192.168.1.1:80/osc/state\n{\"fingerprint\":\"FIG_0006\",\"state\":{\"sessionId\":\"SID_0001\",\"batteryLevel\":1.0,\"storageChanged\":false,\"_captureStatus\":\"idle\",\"_recordedTime\":0,\"_recordableTime\":0,\"_latestFileUri\":\"100RICOH/R0010174.JPG\",\"_batteryState\":\"charging\"}}\n\n\u3053\u3053\u3067\u64ae\u5f71\u51e6\u7406\u304c\u7d42\u308f\u308b\u3068\u53d6\u5f97\u3067\u304d\u308b\u300clatestFileUri\u300d\u3092\u6b21\u306eAPI\u3067\u5229\u7528\u3057\u307e\u3059\u3002\n\u300cfingerprint\u300d\u306b\u5909\u66f4\u304c\u3042\u308c\u3070\u3001\u753b\u50cf\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\u300clatestFileUri\u300d\u304c\u53d6\u5f97\u3067\u304d\u308b\u307e\u3067\u3001\u4f55\u5ea6\u304b\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n# \u30d5\u30a1\u30a4\u30eb\u53d6\u5f97\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.getImage\", \"parameters\": {\"fileUri\": \"100RICOH/R0010174.JPG\"}}' > image.jpg && open image.jpg\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u304d\u53d6\u308a\u3001\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306eimage.jpg \u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u5f15\u53d6\u5f8c\u306b\u30d3\u30e5\u30fc\u30ef\u3067\u958b\u3044\u3066\u3044\u307e\u3059\u3002\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u7d42\u4e86\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.closeSession\", \"parameters\": {\"sessionId\": \"SID_0001\"}}'\n{\"name\":\"camera.closeSession\",\"state\":\"done\"}\n\n\u5f8c\u59cb\u672b\u5b8c\u4e86\u3067\u3059\u3002\n\u30d1\u30e9\u30e1\u30bf\u306e\u6307\u5b9a\u306a\u3069\u306f\u591a\u5c11\u624b\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u7c21\u5358\u306bHTTP\u3067\u64ae\u5f71\u3001\u753b\u50cf\u306e\u5f15\u53d6\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\nRuby\n\nruby 2.3.0preview2 (2015-12-11 trunk 53028) [x86_64-darwin14]\n_latestFileUri \u306e\u53d6\u5f97\u3092\u64ae\u5f71\u7d42\u4e86\u306e\u5224\u5b9a\u3068\u3057\u3066\u3044\u307e\u3059\nirb/pry\u3067\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\n\nrequire 'net/http'\nrequire 'json'\n\nhttp = Net::HTTP.new('192.168.1.1', 80)\nJSON.parse(http.get(\"/osc/info\").body)\n\nres = http.post('/osc/commands/execute', {name: \"camera.startSession\"}.to_json)\nsessionId = JSON.parse(res.body)[\"results\"][\"sessionId\"]\n\nparams = {name: \"camera.takePicture\", parameters: {sessionId: sessionId}}.to_json\nhttp.post('/osc/commands/execute', params)\n\nfileUri = JSON.parse(http.post('/osc/state',\"\").body)[\"state\"][\"_latestFileUri\"] while fileUri.empty?\n\nparams = {name: \"camera.getImage\", parameters: {fileUri: fileUri}}.to_json\nres = http.post('/osc/commands/execute', params)\n\nopen(\"image.jpg\", \"wb\") {|f| f.write(res.body)}\n`open image.jpg`\n\nparams = {name: \"camera.closeSession\", parameters: {sessionId: sessionId}}.to_json\nhttp.post('/osc/commands/execute', params)\n\n\u5927\u5206\u76f4\u611f\u7684\u306b\u8aad\u3081\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u307c\u304f\u306fRuby\u304c\u597d\u304d\u3067\u3059\u3002\n\nPython\n\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 12:54:16)\n_latestFileUri \u306e\u53d6\u5f97\u3092\u64ae\u5f71\u7d42\u4e86\u306e\u5224\u5b9a\u3068\u3057\u3066\u3044\u307e\u3059\npython\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3001REPL\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\n\nimport urllib\nimport json\n\nurllib.urlopen(\"http://192.168.1.1/osc/info\").read()\n\ndata = json.dumps({\"name\":\"camera.startSession\"})\nres = urllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\nsessionId = json.loads(res.read())[\"results\"][\"sessionId\"]\n\ndata = json.dumps({\"name\":\"camera.takePicture\", \"parameters\": {\"sessionId\": sessionId}})\nurllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\n\nfileUri = \"\"\nwhile not fileUri:\n    res = urllib.urlopen('http://192.168.1.1/osc/state', urllib.urlencode({}))\n    fileUri = json.loads(res.read())[\"state\"][\"_latestFileUri\"]\n\ndata = json.dumps({\"name\":\"camera.getImage\", \"parameters\": {\"fileUri\": fileUri}})\nres = urllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\nwith open(\"image.jpg\", \"wb\") as file:\n    file.write(res.read())\n\ndata = json.dumps({\"name\":\"camera.closeSession\", \"parameters\": {\"sessionId\": sessionId}})\nurllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\n\n\u3053\u3061\u3089\u3082\u76f4\u611f\u7684\u306b\u8aad\u3081\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u753b\u50cf\u3092\u958b\u304f\u3068\u3053\u308d\u307e\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306b\u7d9a\u3051\u3066\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3082\u307e\u3068\u3081\u3066\u30da\u30fc\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u3068\u3001Popen\u306e\u6319\u52d5\u304c\u5b89\u5b9a\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u968f\u6642\u5b9f\u884c\u3067\u3042\u308c\u3070REPL\u74b0\u5883\u304b\u3089\u3067\u3082\u3001\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u3066\u753b\u50cf\u3092\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\nimport subprocess\nsubprocess.Popen(['open', 'image.jpg'])\n\n\nSwift\n\nApple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)\nXcode 7.2\nPlayground\u74b0\u5883\u3067\u5b9f\u884c\n\nimport UIKit\n\n// for asynchronous use in Playground\nimport XCPlayground \nXCPlaygroundPage.currentPage.needsIndefiniteExecution = true \n\nlet session = NSURLSession.sharedSession()\n\n// osc/info\nvar url = NSURL(string: \"http://192.168.1.1/osc/info\")\nvar task = session.dataTaskWithURL(url!) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n\n// camera.startSession\nvar sessionId = \"\";\nvar jsonDic = NSDictionary()\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nvar req = NSMutableURLRequest(URL: url!)\nvar params: [String: AnyObject] = [\"name\": \"camera.startSession\"]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params, options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n    do {\n        jsonDic = try NSJSONSerialization.JSONObjectWithData(data!, options: NSJSONReadingOptions.MutableContainers) as! NSDictionary\n    } catch {}\n    let result = jsonDic[\"results\"]  as! NSDictionary\n    sessionId = result[\"sessionId\"] as! String\n}\ntask.resume()\nwhile sessionId.isEmpty { sleep(1) }\n\n// camera.takePicture\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.takePicture\", \"parameters\": [\"sessionId\": sessionId]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n\n// osc/state\nvar fileUri = \"\";\nurl = NSURL(string: \"http://192.168.1.1/osc/state\")\nreq = NSMutableURLRequest(URL: url!)\nreq.HTTPMethod = \"POST\"\nrepeat {\n    sleep(1)\n    print(\"try osc/state\")\n    task = session.dataTaskWithRequest(req) {\n        (data, response, error) in\n        print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n        do {\n            jsonDic = try NSJSONSerialization.JSONObjectWithData(data!,\n                options: NSJSONReadingOptions.MutableContainers) as! NSDictionary\n        } catch {}\n        let result = jsonDic[\"state\"]  as! NSDictionary\n        fileUri = result[\"_latestFileUri\"] as! String\n    }\n    task.resume()\n} while fileUri.isEmpty\nprint(fileUri)\n\n// camera.getImage\nvar img :UIImage?\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.getImage\", \"parameters\": [\"fileUri\": fileUri]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n//    NSData.init(data: data!)\n    img = UIImage(data: data!)\n}\ntask.resume()\nwhile (img == nil) { sleep(1) }\n\n// camera.closeSession\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.closeSession\", \"parameters\": [\"sessionId\": sessionId]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n\nNSURLSession\u304c\u975e\u540c\u671f\u3067\u5b9f\u884c\u3059\u308bAPI\u306a\u306e\u3067\u3001\u3068\u3053\u308d\u3069\u3053\u308d\u3067\u5f85\u3061\u306e\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\nimg\u306b\u5024\u304c\u5165\u3063\u305f\u6642\u70b9\u3067\u3001Playground\u74b0\u5883\u306eResults Sidebar\u3067\u5909\u6570\u3092\u30d7\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u3068\u753b\u50cf\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nJSON\u3092\u51e6\u7406\u3059\u308b\u3068\u3053\u308d\u3001\u3082\u3046\u5c11\u3057\u7dba\u9e97\u306b\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\nUnity\n\n5.3.0f4\n\n\nC#\n\nRawImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4e0b\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\n\nMiniJson\u3068JsonNode\u3092\u4f7f\u7528\n\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class THETAOSC : MonoBehaviour {\n\n    void Start () {\n        StartCoroutine(StartThetaS());\n    }\n\n    IEnumerator StartThetaS () {\n        string url = \"http://192.168.1.1/osc/info\";\n        WWW www = new WWW(url);\n        yield return www;\n        Debug.Log(www.text);\n\n        Dictionary<string, string> header = new Dictionary<string, string>();\n        url = \"http://192.168.1.1/osc/commands/execute\";\n        string jsonStr = \"{\\\"name\\\": \\\"camera.startSession\\\"}\";\n        byte[] postBytes = Encoding.Default.GetBytes (jsonStr);\n        www = new WWW (url, postBytes, header);\n        yield return www;\n        JsonNode json = JsonNode.Parse(www.text);\n        string sessionId = json[\"results\"][\"sessionId\"].Get<string>();\n        Debug.Log(sessionId);\n\n        jsonStr = \"{\\\"name\\\": \\\"camera.takePicture\\\", \\\"parameters\\\": {\\\"sessionId\\\": \\\"\" + sessionId + \"\\\"}}\";\n        postBytes = Encoding.Default.GetBytes (jsonStr);\n        www = new WWW (url, postBytes, header);\n        yield return www;\n        Debug.Log(www.text);\n\n        string fileUri = \"\";\n        url = \"http://192.168.1.1/osc/state\";\n        jsonStr = \"{}\";\n        postBytes = Encoding.Default.GetBytes (jsonStr);\n        while(fileUri == \"\") {\n            www = new WWW (url, postBytes, header);\n            yield return www;\n            Debug.Log(www.text);\n            json = JsonNode.Parse(www.text);\n            fileUri = json[\"state\"][\"_latestFileUri\"].Get<string>();\n        }\n        Debug.Log(fileUri);\n\n        // fileUri\u304c\u53d6\u308c\u3066\u3082\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u3063\u305f\u306e\u3067\u5c11\u3057\u5f85\u3064\n        yield return new WaitForSeconds(3); \n\n        url = \"http://192.168.1.1/osc/commands/execute\";\n        jsonStr = \"{\\\"name\\\": \\\"camera.getImage\\\", \\\"parameters\\\": {\\\"fileUri\\\": \\\"\" + fileUri + \"\\\"}}\";\n        postBytes = Encoding.Default.GetBytes (jsonStr);\n        www = new WWW (url, postBytes, header);\n        yield return www;\n\n        // \u78ba\u8a8d\u306e\u305f\u3081\u306bRawImage\u306b\u8868\u793a\n        RawImage rawImage = GetComponent<RawImage>();\n        rawImage.texture = www.textureNonReadable;\n        rawImage.SetNativeSize();\n\n        jsonStr = \"{\\\"name\\\": \\\"camera.closeSession\\\", \\\"parameters\\\": {\\\"sessionId\\\": \\\"\" + sessionId + \"\\\"}}\";\n        postBytes = Encoding.Default.GetBytes (jsonStr);\n        www = new WWW (url, postBytes, header);\n        yield return www;\n        Debug.Log(www.text);\n    }\n}\n\n\nUnreal Engine 4\uff08\u4e88\u5b9a\uff09\n\n4.10.1\nMBA\u3067\u306f\u53b3\u3057\u304b\u3063\u305f\u3088\u3046\u3067\u3059\nid:alwei\u3055\u3093\u306eUE4 HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066Json\u3092\u53d6\u5f97\u3059\u308b\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308bJSONQuery\u3084\u3001REST\u3068JSON\u3069\u3061\u3089\u3082\u542b\u3093\u3067\u3044\u308b\u3068\u3044\u3046VaRest\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u3068\u5b9f\u73fe\u3057\u3084\u3059\u305d\u3046\u3067\u3059\n\uff08VR\u7528PC\u8cfc\u5165\u3057\u305f\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\uff09\n\n\nSummary\nTHETA S \u306e OSC\u6e96\u62e0API\u3092\u5229\u7528\u3057\u3066\u3001\u64ae\u5f71\u30fb\u753b\u50cf\u5f15\u53d6\u3092\u884c\u3046\u6d41\u308c\u3068API\u306e\u53e9\u304d\u65b9\u306b\u3064\u3044\u3066\u3001\u5404\u74b0\u5883\u3067\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u540c\u3058\u3088\u3046\u306a\u3084\u308a\u65b9\u3067\u30ab\u30e1\u30e9\u306e\u64ae\u5f71\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306a\u3069\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u8272\u3005\u904a\u3079\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u306b\u304b\u306e\u53c2\u8003\u3001\u304d\u3063\u304b\u3051\u306b\u306a\u308b\u3068\u5e78\u3044\u3067\u3059\uff01\n# At first\n* \u3053\u306e\u30da\u30fc\u30b8\u306f\u300cRICOH THETA Advent Calendar 2015\u300d17\u65e5\u76ee\u306e\u30da\u30fc\u30b8\u3067\u3059\n* RICOH THETA S \u3067\u306f\u30ab\u30e1\u30e9\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u64cd\u4f5c\u3059\u308bAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\n    * \u3053\u306e\u30e2\u30c7\u30eb\u304b\u3089\u3001[Open Spherical Camera](https://developers.google.com/streetview/open-spherical-camera/)\u6e96\u62e0\u306eAPI\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\n    * \u4ee5\u524d\u306e\u30e2\u30c7\u30eb\u3088\u308a\u3001\u7c21\u5358\u306b\u4efb\u610f\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u304b\u3089\u64cd\u4f5c\u3092\u884c\u3048\u308b\n* \u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u3067THETA S \u306e OSC API\u3092\u53e9\u3044\u3066\u307f\u305f\uff01\u3068\u3044\u3046\u5185\u5bb9\u3067\u3059\n* \u3053\u306e\u30da\u30fc\u30b8\u304c THETA S \u306eAPI\u3092\u53e9\u3044\u3066\u307f\u3088\u3046\u3068\u3044\u3046\u4eba\u306e\u53c2\u8003\u306b\u306a\u308b\u3068\u5e78\u3044\u3067\u3059\n\n# RICOH THETA API V2\n[\u958b\u767a\u8005\u5411\u3051\u306e\u30da\u30fc\u30b8](https://developers.theta360.com/ja/)\u304c\u3042\u308a\u3001[\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://developers.theta360.com/ja/docs/v2/api_reference/)\u3068[\u30d5\u30a9\u30fc\u30e9\u30e0](https://developers.theta360.com/ja/forums/)\u304c\u516c\u958b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u672c\u30da\u30fc\u30b8\u3067\u306f[Getting Started](https://developers.theta360.com/ja/docs/v2/api_reference/getting_started.html)\u3092\u5143\u306b\u3057\u3064\u3064\u3001\u4e0b\u8a18\u306eAPI\u3092\u5b9f\u969b\u306b\u53e9\u3044\u305f\u4f8b\u3092\u793a\u3057\u307e\u3059\n\n1. [\u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u53d6\u5f97](https://developers.theta360.com/ja/docs/v2/api_reference/protocols/info.html) GET /osc/info\n1. [\u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb](https://developers.theta360.com/ja/docs/v2/api_reference/commands/camera.start_session.html) POST /osc/commands/execute camera.startSession\n1. [\u9759\u6b62\u753b\u64ae\u5f71](https://developers.theta360.com/ja/docs/v2/api_reference/commands/camera.take_picture.html) POST /osc/commands/execute camera.takePicture\n1. [\u64ae\u5f71\u72b6\u614b\u306e\u53d6\u5f97](https://developers.theta360.com/ja/docs/v2/api_reference/protocols/state.html) POST /OSC/state\n1. [\u30d5\u30a1\u30a4\u30eb\u53d6\u5f97](https://developers.theta360.com/ja/docs/v2/api_reference/commands/camera.get_image.html) POST /osc/commands/execute camera.getImage\n1. [\u30bb\u30c3\u30b7\u30e7\u30f3\u7d42\u4e86](https://developers.theta360.com/ja/docs/v2/api_reference/commands/camera.close_session.html)  POST /osc/commands/execute camera.closeSession\n\n\u57fa\u672c\u7684\u306bPOST\u3067JSON\u5f62\u5f0f\u306e\u30d1\u30e9\u30e1\u30bf\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3084\u308a\u53d6\u308a\u3057\u307e\u3059\u3002\n\n# Prerequisite\n* OS X 10.10.5\u4e0a\u3067\u5b9f\u884c\n* THETA S \u306e Wi-Fi\u306b\u63a5\u7d9a\u6e08\u307f\u3067\u3042\u308b\u3053\u3068\n    * \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u3064\u306a\u304e\u306a\u304c\u3089\u3001THETA S\u306eAPI\u3092\u53e9\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f[15\u65e5\u76ee\u306e\u8a18\u4e8b](http://qiita.com/toshi3221@github/items/60baf51256d63183e43e#theta%E3%82%92%E9%96%8B%E7%99%BA%E3%81%99%E3%82%8B%E3%81%A8%E3%81%8D%E7%84%A1%E7%B7%9Alan-usb%E3%82%A2%E3%83%80%E3%83%97%E3%82%BF%E3%83%BC%E3%81%AF%E5%BF%85%E9%9C%80%E3%82%A2%E3%82%A4%E3%83%86%E3%83%A0)\u306b\u8a73\u3057\u3044\u3067\u3059\n* \u306a\u308b\u3079\u304f\u5404\u8a00\u8a9e\u306e\u6a19\u6e96\u74b0\u5883\u3067\u51fa\u6765\u308b\u3053\u3068\u3092\u76ee\u6307\u3057\u307e\u3059\n* THETA\u672c\u4f53\u304c Accept\u30d8\u30c3\u30c0\u3084 Content-Type \u306e\u8a2d\u5b9a\u3092\u884c\u308f\u306a\u304f\u3066\u3082\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u305f\u305f\u3081\u3001\u4e0d\u8981\u306a\u3082\u306e\u306f\u7701\u3044\u3066\u3044\u307e\u3059\n* \u30a8\u30e9\u30fc\u51e6\u7406\u306f\u57fa\u672c\u7684\u306b\u884c\u3044\u307e\u305b\u3093\n\n# Shell Script\n\u307e\u305a\u306f\u51e6\u7406\u306e\u6d41\u308c\u306e\u30a4\u30e1\u30fc\u30b8\u3092\u63b4\u3080\u305f\u3081\u306b\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3082\u78ba\u8a8d\u3057\u306a\u304c\u3089Shell\u304b\u3089\u53e9\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u4eca\u56de\u306fMac OS X\u306b\u6a19\u6e96\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u300ccurl\u300d\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u307e\u3059\u3002\n\n```\n# \u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u53d6\u5f97\n$ curl http://192.168.1.1:80/osc/info\n{\"manufacturer\":\"RICOH\",\"model\":\"RICOH THETA S\",\"serialNumber\":\"XXXXXXXX\",\"firmwareVersion\":\"01.11\",\"supportUrl\":\"https://theta360.com/en/support/\",\"endpoints\":{\"httpPort\":80,\"httpUpdatesPort\":80},\"gps\":false,\"gyro\":false,\"uptime\":583,\"api\":[\"/osc/info\",\"/osc/state\",\"/osc/checkForUpdates\",\"/osc/commands/execute\",\"/osc/commands/status\"]}\n```\n\n\u30ab\u30e1\u30e9\u672c\u4f53\u306e\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u5024\u306f\u3053\u306e\u5f8c\u3067\u306f\u7279\u306b\u7528\u3044\u307e\u305b\u3093\u3002\n\n```\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u958b\u59cb\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.startSession\"}'\n{\"name\":\"camera.startSession\",\"state\":\"done\",\"results\":{ \"sessionId\":\"SID_0001\",\"timeout\":180}}\n```\n\n\u3053\u3053\u3067\u53d6\u5f97\u3059\u308b\u300csessionId\u300d\u3092\u3001\u3053\u306e\u5f8c\u5229\u7528\u3057\u307e\u3059\u3002\u624b\u52d5\u3067\u6b21\u306e\u884c\u306e \"SID_0001\"\u306b\u8a72\u5f53\u3059\u308b\u7b87\u6240\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\n# \u9759\u6b62\u753b\u64ae\u5f71\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.takePicture\", \"parameters\": {\"sessionId\": \"SID_0001\"}}'\n{\"name\":\"camera.takePicture\",\"state\":\"inProgress\",\"id\":\"2\",\"progress\":{\"completion\":0.0}}\n```\n\n\u30ab\u30e1\u30e9\u304c\u30ad\u30e5\u30a4\u30f3\u3068\u3044\u3044\u307e\u3059\u3002\u753b\u50cf\u306e\u64ae\u5f71\u7d42\u4e86\u307e\u3067\u3001\u591a\u5c11\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\n```\n# \u64ae\u5f71\u72b6\u614b\u306e\u53d6\u5f97\n$ curl -X POST http://192.168.1.1:80/osc/state\n{\"fingerprint\":\"FIG_0006\",\"state\":{\"sessionId\":\"SID_0001\",\"batteryLevel\":1.0,\"storageChanged\":false,\"_captureStatus\":\"idle\",\"_recordedTime\":0,\"_recordableTime\":0,\"_latestFileUri\":\"100RICOH/R0010174.JPG\",\"_batteryState\":\"charging\"}}\n```\n\n\u3053\u3053\u3067\u64ae\u5f71\u51e6\u7406\u304c\u7d42\u308f\u308b\u3068\u53d6\u5f97\u3067\u304d\u308b\u300c_latestFileUri\u300d\u3092\u6b21\u306eAPI\u3067\u5229\u7528\u3057\u307e\u3059\u3002\n\u300cfingerprint\u300d\u306b\u5909\u66f4\u304c\u3042\u308c\u3070\u3001\u753b\u50cf\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3044\u307e\u3059\u3002\n\u300c_latestFileUri\u300d\u304c\u53d6\u5f97\u3067\u304d\u308b\u307e\u3067\u3001\u4f55\u5ea6\u304b\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\n```\n# \u30d5\u30a1\u30a4\u30eb\u53d6\u5f97\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.getImage\", \"parameters\": {\"fileUri\": \"100RICOH/R0010174.JPG\"}}' > image.jpg && open image.jpg\n```\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u304d\u53d6\u308a\u3001\u5b9f\u884c\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306eimage.jpg \u306b\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\u5f15\u53d6\u5f8c\u306b\u30d3\u30e5\u30fc\u30ef\u3067\u958b\u3044\u3066\u3044\u307e\u3059\u3002\n\n```\n# \u30bb\u30c3\u30b7\u30e7\u30f3\u7d42\u4e86\n$ curl -X POST http://192.168.1.1:80/osc/commands/execute -d '{\"name\": \"camera.closeSession\", \"parameters\": {\"sessionId\": \"SID_0001\"}}'\n{\"name\":\"camera.closeSession\",\"state\":\"done\"}\n```\n\u5f8c\u59cb\u672b\u5b8c\u4e86\u3067\u3059\u3002\n\n\u30d1\u30e9\u30e1\u30bf\u306e\u6307\u5b9a\u306a\u3069\u306f\u591a\u5c11\u624b\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u304c\u3001\u7c21\u5358\u306bHTTP\u3067\u64ae\u5f71\u3001\u753b\u50cf\u306e\u5f15\u53d6\u304c\u3067\u304d\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u305f\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n# Ruby\n* ruby 2.3.0preview2 (2015-12-11 trunk 53028) [x86_64-darwin14]\n* _latestFileUri \u306e\u53d6\u5f97\u3092\u64ae\u5f71\u7d42\u4e86\u306e\u5224\u5b9a\u3068\u3057\u3066\u3044\u307e\u3059\n* irb/pry\u3067\u306e\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\n\n```rb\nrequire 'net/http'\nrequire 'json'\n\nhttp = Net::HTTP.new('192.168.1.1', 80)\nJSON.parse(http.get(\"/osc/info\").body)\n\nres = http.post('/osc/commands/execute', {name: \"camera.startSession\"}.to_json)\nsessionId = JSON.parse(res.body)[\"results\"][\"sessionId\"]\n\nparams = {name: \"camera.takePicture\", parameters: {sessionId: sessionId}}.to_json\nhttp.post('/osc/commands/execute', params)\n\nfileUri = JSON.parse(http.post('/osc/state',\"\").body)[\"state\"][\"_latestFileUri\"] while fileUri.empty?\n\nparams = {name: \"camera.getImage\", parameters: {fileUri: fileUri}}.to_json\nres = http.post('/osc/commands/execute', params)\n\nopen(\"image.jpg\", \"wb\") {|f| f.write(res.body)}\n`open image.jpg`\n\nparams = {name: \"camera.closeSession\", parameters: {sessionId: sessionId}}.to_json\nhttp.post('/osc/commands/execute', params)\n```\n\n\u5927\u5206\u76f4\u611f\u7684\u306b\u8aad\u3081\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\u307c\u304f\u306fRuby\u304c\u597d\u304d\u3067\u3059\u3002\n\n# Python\n* Python 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 12:54:16)\n* _latestFileUri \u306e\u53d6\u5f97\u3092\u64ae\u5f71\u7d42\u4e86\u306e\u5224\u5b9a\u3068\u3057\u3066\u3044\u307e\u3059\n* python\u30a4\u30f3\u30bf\u30d7\u30ea\u30bf\u3001REPL\u74b0\u5883\u3067\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\n\n```py\nimport urllib\nimport json\n\nurllib.urlopen(\"http://192.168.1.1/osc/info\").read()\n\ndata = json.dumps({\"name\":\"camera.startSession\"})\nres = urllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\nsessionId = json.loads(res.read())[\"results\"][\"sessionId\"]\n\ndata = json.dumps({\"name\":\"camera.takePicture\", \"parameters\": {\"sessionId\": sessionId}})\nurllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\n\nfileUri = \"\"\nwhile not fileUri:\n    res = urllib.urlopen('http://192.168.1.1/osc/state', urllib.urlencode({}))\n    fileUri = json.loads(res.read())[\"state\"][\"_latestFileUri\"]\n\ndata = json.dumps({\"name\":\"camera.getImage\", \"parameters\": {\"fileUri\": fileUri}})\nres = urllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\nwith open(\"image.jpg\", \"wb\") as file:\n    file.write(res.read())\n\ndata = json.dumps({\"name\":\"camera.closeSession\", \"parameters\": {\"sessionId\": sessionId}})\nurllib.urlopen('http://192.168.1.1/osc/commands/execute', data)\n```\n\n\u3053\u3061\u3089\u3082\u76f4\u611f\u7684\u306b\u8aad\u3081\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u753b\u50cf\u3092\u958b\u304f\u3068\u3053\u308d\u307e\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306b\u7d9a\u3051\u3066\u3001\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3082\u307e\u3068\u3081\u3066\u30da\u30fc\u30b9\u30c8\u5b9f\u884c\u3059\u308b\u3068\u3001Popen\u306e\u6319\u52d5\u304c\u5b89\u5b9a\u3057\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u968f\u6642\u5b9f\u884c\u3067\u3042\u308c\u3070REPL\u74b0\u5883\u304b\u3089\u3067\u3082\u3001\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u3066\u753b\u50cf\u3092\u958b\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n```py\nimport subprocess\nsubprocess.Popen(['open', 'image.jpg'])\n```\n\n# Swift\n* Apple Swift version 2.1.1 (swiftlang-700.1.101.15 clang-700.1.81)\n* Xcode 7.2\n* Playground\u74b0\u5883\u3067\u5b9f\u884c\n\n```swift\nimport UIKit\n\n// for asynchronous use in Playground\nimport XCPlayground \nXCPlaygroundPage.currentPage.needsIndefiniteExecution = true \n\nlet session = NSURLSession.sharedSession()\n\n// osc/info\nvar url = NSURL(string: \"http://192.168.1.1/osc/info\")\nvar task = session.dataTaskWithURL(url!) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n\n// camera.startSession\nvar sessionId = \"\";\nvar jsonDic = NSDictionary()\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nvar req = NSMutableURLRequest(URL: url!)\nvar params: [String: AnyObject] = [\"name\": \"camera.startSession\"]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params, options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n    do {\n        jsonDic = try NSJSONSerialization.JSONObjectWithData(data!, options: NSJSONReadingOptions.MutableContainers) as! NSDictionary\n    } catch {}\n    let result = jsonDic[\"results\"]  as! NSDictionary\n    sessionId = result[\"sessionId\"] as! String\n}\ntask.resume()\nwhile sessionId.isEmpty { sleep(1) }\n\n// camera.takePicture\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.takePicture\", \"parameters\": [\"sessionId\": sessionId]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n\n// osc/state\nvar fileUri = \"\";\nurl = NSURL(string: \"http://192.168.1.1/osc/state\")\nreq = NSMutableURLRequest(URL: url!)\nreq.HTTPMethod = \"POST\"\nrepeat {\n    sleep(1)\n    print(\"try osc/state\")\n    task = session.dataTaskWithRequest(req) {\n        (data, response, error) in\n        print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n        do {\n            jsonDic = try NSJSONSerialization.JSONObjectWithData(data!,\n                options: NSJSONReadingOptions.MutableContainers) as! NSDictionary\n        } catch {}\n        let result = jsonDic[\"state\"]  as! NSDictionary\n        fileUri = result[\"_latestFileUri\"] as! String\n    }\n    task.resume()\n} while fileUri.isEmpty\nprint(fileUri)\n\n// camera.getImage\nvar img :UIImage?\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.getImage\", \"parameters\": [\"fileUri\": fileUri]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n//    NSData.init(data: data!)\n    img = UIImage(data: data!)\n}\ntask.resume()\nwhile (img == nil) { sleep(1) }\n\n// camera.closeSession\nurl = NSURL(string: \"http://192.168.1.1/osc/commands/execute\")\nreq = NSMutableURLRequest(URL: url!)\nparams = [\"name\": \"camera.closeSession\", \"parameters\": [\"sessionId\": sessionId]]\nreq.HTTPMethod = \"POST\"\nreq.HTTPBody = try NSJSONSerialization.dataWithJSONObject(params,\n    options: NSJSONWritingOptions.PrettyPrinted)\ntask = session.dataTaskWithRequest(req) {\n    (data, response, error) in\n    print(NSString(data: data!, encoding: NSUTF8StringEncoding))\n}\ntask.resume()\n```\n\nNSURLSession\u304c\u975e\u540c\u671f\u3067\u5b9f\u884c\u3059\u308bAPI\u306a\u306e\u3067\u3001\u3068\u3053\u308d\u3069\u3053\u308d\u3067\u5f85\u3061\u306e\u51e6\u7406\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\nimg\u306b\u5024\u304c\u5165\u3063\u305f\u6642\u70b9\u3067\u3001Playground\u74b0\u5883\u306eResults Sidebar\u3067\u5909\u6570\u3092\u30d7\u30ec\u30d3\u30e5\u30fc\u3059\u308b\u3068\u753b\u50cf\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nJSON\u3092\u51e6\u7406\u3059\u308b\u3068\u3053\u308d\u3001\u3082\u3046\u5c11\u3057\u7dba\u9e97\u306b\u66f8\u304d\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n# Unity\n* 5.3.0f4\n\nC#\n----\n* RawImage\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u4e0b\u8a18\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8ffd\u52a0\u3057\u3066\u52d5\u4f5c\u78ba\u8a8d\n* [MiniJson](https://gist.github.com/darktable/1411710)\u3068[JsonNode](https://gist.github.com/asus4/7f7b5912d703f44c2711)\u3092\u4f7f\u7528\n\n```csharp\nusing UnityEngine;\nusing UnityEngine.UI;\nusing System.Text;\nusing System.Collections;\nusing System.Collections.Generic;\n\npublic class THETAOSC : MonoBehaviour {\n\n\tvoid Start () {\n\t\tStartCoroutine(StartThetaS());\n\t}\n\n\tIEnumerator StartThetaS () {\n\t\tstring url = \"http://192.168.1.1/osc/info\";\n\t\tWWW www = new WWW(url);\n\t\tyield return www;\n\t\tDebug.Log(www.text);\n\n\t\tDictionary<string, string> header = new Dictionary<string, string>();\n\t\turl = \"http://192.168.1.1/osc/commands/execute\";\n\t\tstring jsonStr = \"{\\\"name\\\": \\\"camera.startSession\\\"}\";\n\t\tbyte[] postBytes = Encoding.Default.GetBytes (jsonStr);\n\t\twww = new WWW (url, postBytes, header);\n\t\tyield return www;\n\t\tJsonNode json = JsonNode.Parse(www.text);\n\t\tstring sessionId = json[\"results\"][\"sessionId\"].Get<string>();\n\t\tDebug.Log(sessionId);\n\n\t\tjsonStr = \"{\\\"name\\\": \\\"camera.takePicture\\\", \\\"parameters\\\": {\\\"sessionId\\\": \\\"\" + sessionId + \"\\\"}}\";\n\t\tpostBytes = Encoding.Default.GetBytes (jsonStr);\n\t\twww = new WWW (url, postBytes, header);\n\t\tyield return www;\n\t\tDebug.Log(www.text);\n\n\t\tstring fileUri = \"\";\n\t\turl = \"http://192.168.1.1/osc/state\";\n\t\tjsonStr = \"{}\";\n\t\tpostBytes = Encoding.Default.GetBytes (jsonStr);\n\t\twhile(fileUri == \"\") {\n\t\t\twww = new WWW (url, postBytes, header);\n\t\t\tyield return www;\n\t\t\tDebug.Log(www.text);\n\t\t\tjson = JsonNode.Parse(www.text);\n\t\t\tfileUri = json[\"state\"][\"_latestFileUri\"].Get<string>();\n\t\t}\n\t\tDebug.Log(fileUri);\n\n\t\t// fileUri\u304c\u53d6\u308c\u3066\u3082\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u5834\u5408\u304c\u3042\u3063\u305f\u306e\u3067\u5c11\u3057\u5f85\u3064\n\t\tyield return new WaitForSeconds(3); \n\n\t\turl = \"http://192.168.1.1/osc/commands/execute\";\n\t\tjsonStr = \"{\\\"name\\\": \\\"camera.getImage\\\", \\\"parameters\\\": {\\\"fileUri\\\": \\\"\" + fileUri + \"\\\"}}\";\n\t\tpostBytes = Encoding.Default.GetBytes (jsonStr);\n\t\twww = new WWW (url, postBytes, header);\n\t\tyield return www;\n\n\t\t// \u78ba\u8a8d\u306e\u305f\u3081\u306bRawImage\u306b\u8868\u793a\n\t\tRawImage rawImage = GetComponent<RawImage>();\n\t\trawImage.texture = www.textureNonReadable;\n\t\trawImage.SetNativeSize();\n\n\t\tjsonStr = \"{\\\"name\\\": \\\"camera.closeSession\\\", \\\"parameters\\\": {\\\"sessionId\\\": \\\"\" + sessionId + \"\\\"}}\";\n\t\tpostBytes = Encoding.Default.GetBytes (jsonStr);\n\t\twww = new WWW (url, postBytes, header);\n\t\tyield return www;\n\t\tDebug.Log(www.text);\n\t}\n}\n```\n\n# Unreal Engine 4\uff08\u4e88\u5b9a\uff09\n* 4.10.1\n* MBA\u3067\u306f\u53b3\u3057\u304b\u3063\u305f\u3088\u3046\u3067\u3059\n* id:alwei\u3055\u3093\u306e[UE4 HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u3066Json\u3092\u53d6\u5f97\u3059\u308b](http://unrealengine.hatenablog.com/entry/2015/01/09/230111)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b[JSONQuery](https://forums.unrealengine.com/showthread.php?7045-PLUGIN-JSON-Query)\u3084\u3001REST\u3068JSON\u3069\u3061\u3089\u3082\u542b\u3093\u3067\u3044\u308b\u3068\u3044\u3046[VaRest](https://forums.unrealengine.com/showthread.php?7045-PLUGIN-JSON-Query)\u306a\u3069\u3092\u6d3b\u7528\u3059\u308b\u3068\u5b9f\u73fe\u3057\u3084\u3059\u305d\u3046\u3067\u3059\n* \uff08VR\u7528PC\u8cfc\u5165\u3057\u305f\u3089\u8a66\u3057\u3066\u307f\u307e\u3059\uff09\n\n# Summary\nTHETA S \u306e OSC\u6e96\u62e0API\u3092\u5229\u7528\u3057\u3066\u3001\u64ae\u5f71\u30fb\u753b\u50cf\u5f15\u53d6\u3092\u884c\u3046\u6d41\u308c\u3068API\u306e\u53e9\u304d\u65b9\u306b\u3064\u3044\u3066\u3001\u5404\u74b0\u5883\u3067\u5b9f\u969b\u306b\u52d5\u304b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u540c\u3058\u3088\u3046\u306a\u3084\u308a\u65b9\u3067\u30ab\u30e1\u30e9\u306e\u64ae\u5f71\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306a\u3069\u3082\u3067\u304d\u308b\u306e\u3067\u3001\u8272\u3005\u904a\u3079\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u306a\u306b\u304b\u306e\u53c2\u8003\u3001\u304d\u3063\u304b\u3051\u306b\u306a\u308b\u3068\u5e78\u3044\u3067\u3059\uff01\n", "tags": ["Theta", "Ruby", "Python", "Unity", "UE4"]}