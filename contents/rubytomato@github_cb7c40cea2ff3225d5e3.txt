{"context": "\n\n\u6982\u8981\nEclipse\u30d7\u30e9\u30b0\u30a4\u30f3\u306eHibernate Tools\u3092\u4f7f\u3063\u3066JPA\u306eEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u74b0\u5883\u69cb\u7bc9\u3084\u8a2d\u5b9a\u65b9\u6cd5\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n\u74b0\u5883\n\nWindows10 Professional\nJava 1.8.0_101\nEclipse Neon\n\n\nJBoss Tools 4.4.1.Final\nMySQL Connector/J 5.1.40\n\n\nMySQL 5.6\n\n\u53c2\u8003\n\nsing Hibernate Tools generate entity classes from Tables\n\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6e96\u5099\n\nHibernate ORM\nhttp://hibernate.org/orm/\n\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u9069\u5f53\u306a\u5834\u6240\u3078\u5c55\u958b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u306e\u306fhibernate-release-5.2.4.Final.zip\u3067\u3059\u3002\n\nMySQL Connector/J\nhttps://dev.mysql.com/downloads/connector/j/\n\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u9069\u5f53\u306a\u5834\u6240\u3078\u5c55\u958b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u306e\u306fmysql-connector-java-5.1.40.zip\u3067\u3059\u3002\n\nEclipse\u306e\u8a2d\u5b9a\n\nJBoss Tools\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3088\u308aJBoss Tools 4.4.1.Final\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306fHibernate Tools\u3060\u3051\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\nDriver Definition\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc \u2192 Preferences \u2192 Data Management \u2192 Connectivity \u2192 Driver Definitions\nAdd... \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\nVendor Filter\u306bMySQL\u3092\u9078\u629e\u3057\u3001driver template\u306bMySQL 5.1\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nJAR List\u30bf\u30d6\u3067 Add JAR/Zip... \u3092\u62bc\u3057\u3066\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fMySQL Connector/J\u306ejar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\nConnection Profile\nData Source Explorer\u30d3\u30e5\u30fc\u306eDatabase Connections\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089\"New...\"\u3092\u9078\u629e\u3057\u307e\u3059\u3002\nConnection Profile\u306bMySQL\u3092\u9078\u629e\u3057\u307e\u3059\u3002\nName\u306f\"MySQL (sample_db)\"\u3068\u3057\u307e\u3057\u305f\u3002\n\nJDBC Driver\u306eproperty\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u3064\u3044\u3067\u306bTest Connection\u3067\u63a5\u7d9a\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3082\u884c\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u8a2d\u5b9a\u5185\u5bb9\u3067\u3059\u3002\n\n\nHibernate\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc \u2192 Preferences \u2192 Java \u2192 Build Path \u2192 User Libraries\nNew... \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\nname\u306b\"hibernate\"\u3068\u5165\u529b\u3057\u307e\u3057\u305f\u3002\n\nAdd External JARs... \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fHibernate\u306eJar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3059\u308b\u306e\u306f\u5c55\u958b\u30d5\u30a9\u30eb\u30c0\u4e0b\u306elib/require\u306b\u3042\u308bjar\u30d5\u30a1\u30a4\u30eb\u5168\u3066\u3067\u3059\u3002\n\n\nJPA Project\u306e\u4f5c\u6210\nEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\nProject Explorer\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089New \u2192 Project... \u2192 JPA \u2192 JPA Project\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\nProject name\u306f\"sample_db\"\u3068\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u540d\u524d\u304cpersistence-unit\u306e\u540d\u524d\u306b\u3082\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u306f\u56f3\u306e\u901a\u308a\u3067\u3059\u3002\n\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e Next > \u3067\u9032\u307f\u307e\u3059\u3002\n\nJPA implementation\u306b\"User Library\"\u3092\u9078\u3073\u3001\u4e0a\u8a18\u3067\u767b\u9332\u3057\u305f\"hibernate\"\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nConnection\u3082\u4e0a\u8a18\u3067\u767b\u9332\u3057\u305f\"MySQL(sample_db)\"\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nFinish \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u767b\u9332\u3092\u5b8c\u4e86\u3057\u307e\u3059\u3002\n\nJPA Project\u306e\u4f5c\u6210\u76f4\u5f8c\u306e\u72b6\u614b\u3067\u3059\u3002\n\n\u751f\u6210\u3055\u308c\u305fpersistence.xml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\"\n    xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n    <persistence-unit name=\"sample_db\">\n        <provider>org.hibernate.ejb.HibernatePersistence</provider>\n        <exclude-unlisted-classes>false</exclude-unlisted-classes>\n        <properties>\n            <property name=\"hibernate.connection.driver_class\" value=\"com.mysql.jdbc.Driver\"/>\n            <property name=\"hibernate.connection.url\" value=\"jdbc:mysql://localhost:3306/sample_db\"/>\n            <property name=\"hibernate.connection.username\" value=\"test_user\"/>\n            <property name=\"hibernate.connection.password\" value=\"test_user\"/>\n            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.MySQLDialect\"/>\n        </properties>\n    </persistence-unit>\n</persistence>\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089Build Path \u2192 Configure Build Path... \u2192 JPA \u2192 Entity Generation\u3092\u9078\u629e\u3057\u3001Default package\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\"com.example.model\"\u3068\u3057\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089New \u2192 JPA Entities from Tables\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u56f3\u3067\u793a\u3059\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u63a5\u7d9a\u304c\u6210\u529f\u3059\u308c\u3070\u30c6\u30fc\u30d6\u30eb\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067Entity\u30af\u30e9\u30b9\u304c\u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\n\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e Next > \u3067\u9032\u307f\u307e\u3059\u3002\n\n\u751f\u6210\u3059\u308bEntity\u30af\u30e9\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306fKey generator\u306b\"identity\"\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002\n\nFinish \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066Entity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u305f\u76f4\u5f8c\u306eJPA Project\u306e\u72b6\u614b\u3067\u3059\u3002Entity\u30af\u30e9\u30b9\u306e\u4ed6\u306bpersistence.xml\u306e\u8a2d\u5b9a\u306b\u3082\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n\u88dc\u8db3\n\n\u4f7f\u7528\u3059\u308bDB\u74b0\u5883\n\u3053\u306e\u8a18\u4e8b\u3067\u4f7f\u7528\u3059\u308bDB\u74b0\u5883\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001\u30e6\u30fc\u30b6\u30fc\ncreate database if not exists sample_db character set utf8;\n\ncreate user 'test_user'@'localhost' identified by 'test_user';\n\ngrant all on sample_db.* to 'test_user'@'localhost';\n\n\n\u30c6\u30fc\u30d6\u30eb\n\ncustomer\ncreate table if not exists customer (\n  id int not null auto_increment,\n  customer_number int not null,\n  customer_name varchar(124) not null,\n  contact_last_name varchar(124) not null,\n  contact_first_name varchar(124) not null,\n  phone varchar(32),\n  address_line1 varchar(124),\n  address_line2 varchar(124),\n  city varchar(32),\n  state varchar(32),\n  postal_code varchar(32),\n  country varchar(32),\n  sales_rep_employee_number int,\n  credit_limit decimal(10,2),\n  primary key (id)\n) engine = INNODB;\n\n\u751f\u6210\u3055\u308c\u305fEntity\u30af\u30e9\u30b9(Customer)\u3002getter/setter\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\nCustomer.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n/**\n * The persistent class for the customer database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Customer.findAll\", query=\"SELECT c FROM Customer c\")\npublic class Customer implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    @Column(name=\"address_line1\")\n    private String addressLine1;\n\n    @Column(name=\"address_line2\")\n    private String addressLine2;\n\n    private String city;\n\n    @Column(name=\"contact_first_name\")\n    private String contactFirstName;\n\n    @Column(name=\"contact_last_name\")\n    private String contactLastName;\n\n    private String country;\n\n    @Column(name=\"credit_limit\")\n    private BigDecimal creditLimit;\n\n    @Column(name=\"customer_name\")\n    private String customerName;\n\n    @Column(name=\"customer_number\")\n    private int customerNumber;\n\n    private String phone;\n\n    @Column(name=\"postal_code\")\n    private String postalCode;\n\n    @Column(name=\"sales_rep_employee_number\")\n    private int salesRepEmployeeNumber;\n\n    private String state;\n\n    public Customer() {\n    }\n\n}\n\n\n\norders\ncreate table if not exists orders (\n  id int not null auto_increment,\n  order_number int not null,\n  order_date date not null,\n  required_date date not null,\n  shipped_date date,\n  status varchar(32),\n  comments varchar(256),\n  customer_number int,\n  primary key (id)\n) engine = INNODB;\n\n\nOrder.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.util.Date;\n\n\n/**\n * The persistent class for the orders database table.\n * \n */\n@Entity\n@Table(name=\"orders\")\n@NamedQuery(name=\"Order.findAll\", query=\"SELECT o FROM Order o\")\npublic class Order implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    private String comments;\n\n    @Column(name=\"customer_number\")\n    private int customerNumber;\n\n    @Temporal(TemporalType.DATE)\n    @Column(name=\"order_date\")\n    private Date orderDate;\n\n    @Column(name=\"order_number\")\n    private int orderNumber;\n\n    @Temporal(TemporalType.DATE)\n    @Column(name=\"required_date\")\n    private Date requiredDate;\n\n    @Temporal(TemporalType.DATE)\n    @Column(name=\"shipped_date\")\n    private Date shippedDate;\n\n    private String status;\n\n    public Order() {\n    }\n\n}\n\n\n\norder_detail\ncreate table if not exists order_detail (\n  id int not null auto_increment,\n  order_number int not null,\n  product_code varchar(32) not null,\n  quantity_ordered int,\n  price_each decimal(10,2),\n  order_line_number int,\n  primary key (id)\n) engine = INNODB;\n\n\nOrderDetail.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n\n/**\n * The persistent class for the order_detail database table.\n * \n */\n@Entity\n@Table(name=\"order_detail\")\n@NamedQuery(name=\"OrderDetail.findAll\", query=\"SELECT o FROM OrderDetail o\")\npublic class OrderDetail implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    @Column(name=\"order_line_number\")\n    private int orderLineNumber;\n\n    @Column(name=\"order_number\")\n    private int orderNumber;\n\n    @Column(name=\"price_each\")\n    private BigDecimal priceEach;\n\n    @Column(name=\"product_code\")\n    private String productCode;\n\n    @Column(name=\"quantity_ordered\")\n    private int quantityOrdered;\n\n    public OrderDetail() {\n    }\n\n}\n\n\n\npayment\ncreate table if not exists payment (\n  id int not null auto_increment,\n  customer_number int not null,\n  check_number varchar(64) not null,\n  payment_date date not null,\n  amount decimal(10,2) not null,\n  primary key (id)\n) engine = INNODB;\n\n\nPayment.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\nimport java.util.Date;\n\n\n/**\n * The persistent class for the payment database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Payment.findAll\", query=\"SELECT p FROM Payment p\")\npublic class Payment implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    private BigDecimal amount;\n\n    @Column(name=\"check_number\")\n    private String checkNumber;\n\n    @Column(name=\"customer_number\")\n    private int customerNumber;\n\n    @Temporal(TemporalType.DATE)\n    @Column(name=\"payment_date\")\n    private Date paymentDate;\n\n    public Payment() {\n    }\n\n}\n\n\n\nproduct\ncreate table if not exists product (\n  id int not null auto_increment,\n  product_code varchar(32) not null,\n  product_name varchar(128) not null,\n  product_line varchar(32) not null,\n  product_scale varchar(32) not null,\n  product_vendor varchar(64) not null,\n  product_description varchar(1024),\n  quantity_in_stock int,\n  buy_price decimal(10,2),\n  msrp decimal(10,2),\n  primary key (id)\n) engine = INNODB;\n\n\nProduct.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n\n/**\n * The persistent class for the product database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Product.findAll\", query=\"SELECT p FROM Product p\")\npublic class Product implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    @Column(name=\"buy_price\")\n    private BigDecimal buyPrice;\n\n    private BigDecimal msrp;\n\n    @Column(name=\"product_code\")\n    private String productCode;\n\n    @Column(name=\"product_description\")\n    private String productDescription;\n\n    @Column(name=\"product_line\")\n    private String productLine;\n\n    @Column(name=\"product_name\")\n    private String productName;\n\n    @Column(name=\"product_scale\")\n    private String productScale;\n\n    @Column(name=\"product_vendor\")\n    private String productVendor;\n\n    @Column(name=\"quantity_in_stock\")\n    private int quantityInStock;\n\n    public Product() {\n    }\n\n}\n\n\n\nproduct_line\ncreate table if not exists product_line (\n  id int not null auto_increment,\n  product_line varchar(32) not null,\n  text_description varchar(1024),\n  html_description varchar(1024),\n  image varchar(1024),\n  primary key (id)\n) engine = INNODB;\n\n\nProductLine.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\n\n\n/**\n * The persistent class for the product_line database table.\n * \n */\n@Entity\n@Table(name=\"product_line\")\n@NamedQuery(name=\"ProductLine.findAll\", query=\"SELECT p FROM ProductLine p\")\npublic class ProductLine implements Serializable {\n    private static final long serialVersionUID = 1L;\n\n    @Id\n    @GeneratedValue(strategy=GenerationType.IDENTITY)\n    private int id;\n\n    @Column(name=\"html_description\")\n    private String htmlDescription;\n\n    private String image;\n\n    @Column(name=\"product_line\")\n    private String productLine;\n\n    @Column(name=\"text_description\")\n    private String textDescription;\n\n    public ProductLine() {\n    }\n\n}\n\n\n# \u6982\u8981\n\nEclipse\u30d7\u30e9\u30b0\u30a4\u30f3\u306eHibernate Tools\u3092\u4f7f\u3063\u3066JPA\u306eEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u74b0\u5883\u69cb\u7bc9\u3084\u8a2d\u5b9a\u65b9\u6cd5\u306e\u307e\u3068\u3081\u3067\u3059\u3002\n\n**\u74b0\u5883**\n\n* Windows10 Professional\n* Java 1.8.0_101\n* Eclipse Neon\n * JBoss Tools 4.4.1.Final\n * MySQL Connector/J 5.1.40\n* MySQL 5.6\n\n**\u53c2\u8003**\n\n* [sing Hibernate Tools generate entity classes from Tables] (http://o7planning.org/en/10125/using-hibernate-tools-generate-entity-classes-from-tables)\n\n\n\n# \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6e96\u5099\n\n## Hibernate ORM\n\nhttp://hibernate.org/orm/\n\n\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u9069\u5f53\u306a\u5834\u6240\u3078\u5c55\u958b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u306e\u306fhibernate-release-5.2.4.Final.zip\u3067\u3059\u3002\n\n## MySQL Connector/J\n\nhttps://dev.mysql.com/downloads/connector/j/\n\n\u4e0a\u8a18\u306e\u30b5\u30a4\u30c8\u3088\u308a\u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u9069\u5f53\u306a\u5834\u6240\u3078\u5c55\u958b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u306e\u306fmysql-connector-java-5.1.40.zip\u3067\u3059\u3002\n\n\n# Eclipse\u306e\u8a2d\u5b9a\n\n## JBoss Tools\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30de\u30fc\u30b1\u30c3\u30c8\u30d7\u30ec\u30a4\u30b9\u3088\u308aJBoss Tools 4.4.1.Final\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n![jboss_tool_1.png](https://qiita-image-store.s3.amazonaws.com/0/22772/3cd5165f-c61d-35d4-6de7-748bf25a1739.png)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u306e\u306fHibernate Tools\u3060\u3051\u3067\u5927\u4e08\u592b\u3067\u3059\u3002\n\n![jboss_tool_2.png](https://qiita-image-store.s3.amazonaws.com/0/22772/3dc4ed52-5156-0a14-811d-3c0550dda0f4.png)\n\n\n## Driver Definition\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc \u2192 Preferences \u2192 Data Management \u2192 Connectivity \u2192 Driver Definitions\n\n<span class=\"label label-default\">Add...</span> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n![driver_definition_1.png](https://qiita-image-store.s3.amazonaws.com/0/22772/eea2ee27-4937-91b8-4e55-88e0e83ab217.png)\n\nVendor Filter\u306bMySQL\u3092\u9078\u629e\u3057\u3001driver template\u306bMySQL 5.1\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n![driver_definition_2.png](https://qiita-image-store.s3.amazonaws.com/0/22772/984c31fe-523e-830e-2491-eeb0a427335e.png)\n\nJAR List\u30bf\u30d6\u3067 <span class=\"label label-default\">Add JAR/Zip...</span> \u3092\u62bc\u3057\u3066\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fMySQL Connector/J\u306ejar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n![driver_definition_3.png](https://qiita-image-store.s3.amazonaws.com/0/22772/a1b240ca-97c7-c363-08b7-c906fd941965.png)\n\n\n## Connection Profile\n\nData Source Explorer\u30d3\u30e5\u30fc\u306eDatabase Connections\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089\"New...\"\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\nConnection Profile\u306bMySQL\u3092\u9078\u629e\u3057\u307e\u3059\u3002\nName\u306f\"MySQL (sample_db)\"\u3068\u3057\u307e\u3057\u305f\u3002\n\n![connection_profile_1.png](https://qiita-image-store.s3.amazonaws.com/0/22772/6a8a41dd-489e-e5b2-f3d6-2e9ff1b6444a.png)\n\nJDBC Driver\u306eproperty\u3092\u5165\u529b\u3057\u307e\u3059\u3002\n\u3064\u3044\u3067\u306bTest Connection\u3067\u63a5\u7d9a\u3067\u304d\u308b\u304b\u78ba\u8a8d\u3082\u884c\u3044\u307e\u3059\u3002\n\n![connection_profile_2.png](https://qiita-image-store.s3.amazonaws.com/0/22772/cefa619c-280e-f63f-74cc-c6eb66b02c55.png)\n\n\u4eca\u56de\u306e\u8a2d\u5b9a\u5185\u5bb9\u3067\u3059\u3002\n\n![connection_profile_3.png](https://qiita-image-store.s3.amazonaws.com/0/22772/daca29a0-7cb1-e67f-9934-8eefc13eabe1.png)\n\n\n## Hibernate\n\n\u30e1\u30cb\u30e5\u30fc\u30d0\u30fc \u2192 Preferences \u2192 Java \u2192 Build Path \u2192 User Libraries\n\n<span class=\"label label-default\">New...</span> \u3092\u30af\u30ea\u30c3\u30af\u3057\u307e\u3059\u3002\n\n![user_libraries_hibernate_1.png](https://qiita-image-store.s3.amazonaws.com/0/22772/9f942f1f-77a7-33b7-ad88-525bbfbe36e1.png)\n\nname\u306b\"hibernate\"\u3068\u5165\u529b\u3057\u307e\u3057\u305f\u3002\n\n![user_libraries_hibernate_2.png](https://qiita-image-store.s3.amazonaws.com/0/22772/5e7f962a-8d14-9a10-6be8-9986ac78ac3e.png)\n\n<span class=\"label label-default\">Add External JARs...</span> \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001\u5148\u307b\u3069\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fHibernate\u306eJar\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u6307\u5b9a\u3059\u308b\u306e\u306f\u5c55\u958b\u30d5\u30a9\u30eb\u30c0\u4e0b\u306elib/require\u306b\u3042\u308bjar\u30d5\u30a1\u30a4\u30eb\u5168\u3066\u3067\u3059\u3002\n\n![user_libraries_hibernate_3.png](https://qiita-image-store.s3.amazonaws.com/0/22772/3b64a666-d265-d98b-3e4a-668d28249b97.png)\n\n\n\n# JPA Project\u306e\u4f5c\u6210\n\nEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308a\u307e\u3059\u3002\nProject Explorer\u3067\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089New \u2192 Project... \u2192 JPA \u2192 JPA Project\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![jpa_project_1.png](https://qiita-image-store.s3.amazonaws.com/0/22772/e55040f6-d674-32ab-1724-72dcc64060db.png)\n\nProject name\u306f\"sample_db\"\u3068\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u540d\u524d\u304cpersistence-unit\u306e\u540d\u524d\u306b\u3082\u306a\u308a\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u306f\u56f3\u306e\u901a\u308a\u3067\u3059\u3002\n\n![jpa_project_2.png](https://qiita-image-store.s3.amazonaws.com/0/22772/57fce777-b840-3f71-d7af-c5d975e61d12.png)\n\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e <span class=\"label label-default\">Next ></span> \u3067\u9032\u307f\u307e\u3059\u3002\n\n![jpa_project_3.png](https://qiita-image-store.s3.amazonaws.com/0/22772/3402a2dd-7cec-c94a-4be4-48a30ad6a617.png)\n\nJPA implementation\u306b\"User Library\"\u3092\u9078\u3073\u3001\u4e0a\u8a18\u3067\u767b\u9332\u3057\u305f\"hibernate\"\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\nConnection\u3082\u4e0a\u8a18\u3067\u767b\u9332\u3057\u305f\"MySQL(sample_db)\"\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n<span class=\"label label-default\">Finish</span> \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u767b\u9332\u3092\u5b8c\u4e86\u3057\u307e\u3059\u3002\n\n![jpa_project_4.png](https://qiita-image-store.s3.amazonaws.com/0/22772/ceec825f-63a7-3632-4674-b919992cf5a2.png)\n\nJPA Project\u306e\u4f5c\u6210\u76f4\u5f8c\u306e\u72b6\u614b\u3067\u3059\u3002\n\n![jpa_project_5.png](https://qiita-image-store.s3.amazonaws.com/0/22772/c34ecb97-fc49-3a3f-7bae-020cd7d0fcd8.png)\n\n\n\u751f\u6210\u3055\u308c\u305fpersistence.xml\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<persistence version=\"2.1\"\n    xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd\">\n\t<persistence-unit name=\"sample_db\">\n\t    <provider>org.hibernate.ejb.HibernatePersistence</provider>\n\t    <exclude-unlisted-classes>false</exclude-unlisted-classes>\n\t    <properties>\n\t        <property name=\"hibernate.connection.driver_class\" value=\"com.mysql.jdbc.Driver\"/>\n\t        <property name=\"hibernate.connection.url\" value=\"jdbc:mysql://localhost:3306/sample_db\"/>\n\t        <property name=\"hibernate.connection.username\" value=\"test_user\"/>\n\t        <property name=\"hibernate.connection.password\" value=\"test_user\"/>\n\t        <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.MySQLDialect\"/>\n\t    </properties>\n\t</persistence-unit>\n</persistence>\n```\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089Build Path \u2192 Configure Build Path... \u2192 JPA \u2192 Entity Generation\u3092\u9078\u629e\u3057\u3001Default package\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\"com.example.model\"\u3068\u3057\u307e\u3057\u305f\u3002\n\n![jpa_project_6.png](https://qiita-image-store.s3.amazonaws.com/0/22772/a7f74663-7a33-0dcf-4ca7-1769be0301b1.png)\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u30e1\u30cb\u30e5\u30fc\u304b\u3089New \u2192 JPA Entities from Tables\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n![jpa_project_7.png](https://qiita-image-store.s3.amazonaws.com/0/22772/b8eb1a45-3038-2f88-3753-19fdfe268db0.png)\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u56f3\u3067\u793a\u3059\u30a2\u30a4\u30b3\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n![jpa_project_8.png](https://qiita-image-store.s3.amazonaws.com/0/22772/1db27f8f-49dc-cc67-ae41-c5cfce533e70.png)\n\n\u63a5\u7d9a\u304c\u6210\u529f\u3059\u308c\u3070\u30c6\u30fc\u30d6\u30eb\u306e\u4e00\u89a7\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067Entity\u30af\u30e9\u30b9\u304c\u5fc5\u8981\u306a\u30c6\u30fc\u30d6\u30eb\u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u307e\u3059\u3002\n\n![jpa_project_9.png](https://qiita-image-store.s3.amazonaws.com/0/22772/52fbf4e7-eb45-18db-87bb-b15e5ce6124c.png)\n\n\u3053\u3053\u306f\u305d\u306e\u307e\u307e <span class=\"label label-default\">Next ></span> \u3067\u9032\u307f\u307e\u3059\u3002\n\n![jpa_project_10.png](https://qiita-image-store.s3.amazonaws.com/0/22772/9041b7d0-30df-e9bb-205d-4f5344c8d306.png)\n\n\u751f\u6210\u3059\u308bEntity\u30af\u30e9\u30b9\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3092\u884c\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u306fKey generator\u306b\"identity\"\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n![jpa_project_11.png](https://qiita-image-store.s3.amazonaws.com/0/22772/07050360-c637-18fc-9e1c-ae837169bff3.png)\n\n<span class=\"label label-default\">Finish</span> \u3092\u30af\u30ea\u30c3\u30af\u3057\u3066Entity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n![jpa_project_12.png](https://qiita-image-store.s3.amazonaws.com/0/22772/d0491265-e129-6334-e320-62776e8944e9.png)\n\nEntity\u30af\u30e9\u30b9\u3092\u751f\u6210\u3057\u305f\u76f4\u5f8c\u306eJPA Project\u306e\u72b6\u614b\u3067\u3059\u3002Entity\u30af\u30e9\u30b9\u306e\u4ed6\u306bpersistence.xml\u306e\u8a2d\u5b9a\u306b\u3082\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n![jpa_project_13.png](https://qiita-image-store.s3.amazonaws.com/0/22772/83e51420-349b-16a7-d367-c19946532479.png)\n\n\n# \u88dc\u8db3\n\n## \u4f7f\u7528\u3059\u308bDB\u74b0\u5883\n\n\u3053\u306e\u8a18\u4e8b\u3067\u4f7f\u7528\u3059\u308bDB\u74b0\u5883\u3067\u3059\u3002\n\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3001\u30e6\u30fc\u30b6\u30fc\n\n```sql\ncreate database if not exists sample_db character set utf8;\n\ncreate user 'test_user'@'localhost' identified by 'test_user';\n\ngrant all on sample_db.* to 'test_user'@'localhost';\n```\n\n### \u30c6\u30fc\u30d6\u30eb\n\n#### customer\n\n```sql\ncreate table if not exists customer (\n  id int not null auto_increment,\n  customer_number int not null,\n  customer_name varchar(124) not null,\n  contact_last_name varchar(124) not null,\n  contact_first_name varchar(124) not null,\n  phone varchar(32),\n  address_line1 varchar(124),\n  address_line2 varchar(124),\n  city varchar(32),\n  state varchar(32),\n  postal_code varchar(32),\n  country varchar(32),\n  sales_rep_employee_number int,\n  credit_limit decimal(10,2),\n  primary key (id)\n) engine = INNODB;\n```\n\n\u751f\u6210\u3055\u308c\u305fEntity\u30af\u30e9\u30b9(Customer)\u3002getter/setter\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java:Customer.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n/**\n * The persistent class for the customer database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Customer.findAll\", query=\"SELECT c FROM Customer c\")\npublic class Customer implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\t@Column(name=\"address_line1\")\n\tprivate String addressLine1;\n\n\t@Column(name=\"address_line2\")\n\tprivate String addressLine2;\n\n\tprivate String city;\n\n\t@Column(name=\"contact_first_name\")\n\tprivate String contactFirstName;\n\n\t@Column(name=\"contact_last_name\")\n\tprivate String contactLastName;\n\n\tprivate String country;\n\n\t@Column(name=\"credit_limit\")\n\tprivate BigDecimal creditLimit;\n\n\t@Column(name=\"customer_name\")\n\tprivate String customerName;\n\n\t@Column(name=\"customer_number\")\n\tprivate int customerNumber;\n\n\tprivate String phone;\n\n\t@Column(name=\"postal_code\")\n\tprivate String postalCode;\n\n\t@Column(name=\"sales_rep_employee_number\")\n\tprivate int salesRepEmployeeNumber;\n\n\tprivate String state;\n\n\tpublic Customer() {\n\t}\n\n}\n```\n\n\n#### orders\n\n```sql\ncreate table if not exists orders (\n  id int not null auto_increment,\n  order_number int not null,\n  order_date date not null,\n  required_date date not null,\n  shipped_date date,\n  status varchar(32),\n  comments varchar(256),\n  customer_number int,\n  primary key (id)\n) engine = INNODB;\n```\n\n```java:Order.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.util.Date;\n\n\n/**\n * The persistent class for the orders database table.\n * \n */\n@Entity\n@Table(name=\"orders\")\n@NamedQuery(name=\"Order.findAll\", query=\"SELECT o FROM Order o\")\npublic class Order implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\tprivate String comments;\n\n\t@Column(name=\"customer_number\")\n\tprivate int customerNumber;\n\n\t@Temporal(TemporalType.DATE)\n\t@Column(name=\"order_date\")\n\tprivate Date orderDate;\n\n\t@Column(name=\"order_number\")\n\tprivate int orderNumber;\n\n\t@Temporal(TemporalType.DATE)\n\t@Column(name=\"required_date\")\n\tprivate Date requiredDate;\n\n\t@Temporal(TemporalType.DATE)\n\t@Column(name=\"shipped_date\")\n\tprivate Date shippedDate;\n\n\tprivate String status;\n\n\tpublic Order() {\n\t}\n\n}\n```\n\n\n#### order_detail\n\n```sql\ncreate table if not exists order_detail (\n  id int not null auto_increment,\n  order_number int not null,\n  product_code varchar(32) not null,\n  quantity_ordered int,\n  price_each decimal(10,2),\n  order_line_number int,\n  primary key (id)\n) engine = INNODB;\n```\n\n```java:OrderDetail.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n\n/**\n * The persistent class for the order_detail database table.\n * \n */\n@Entity\n@Table(name=\"order_detail\")\n@NamedQuery(name=\"OrderDetail.findAll\", query=\"SELECT o FROM OrderDetail o\")\npublic class OrderDetail implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\t@Column(name=\"order_line_number\")\n\tprivate int orderLineNumber;\n\n\t@Column(name=\"order_number\")\n\tprivate int orderNumber;\n\n\t@Column(name=\"price_each\")\n\tprivate BigDecimal priceEach;\n\n\t@Column(name=\"product_code\")\n\tprivate String productCode;\n\n\t@Column(name=\"quantity_ordered\")\n\tprivate int quantityOrdered;\n\n\tpublic OrderDetail() {\n\t}\n\n}\n```\n\n\n#### payment\n\n```sql\ncreate table if not exists payment (\n  id int not null auto_increment,\n  customer_number int not null,\n  check_number varchar(64) not null,\n  payment_date date not null,\n  amount decimal(10,2) not null,\n  primary key (id)\n) engine = INNODB;\n```\n\n```java:Payment.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\nimport java.util.Date;\n\n\n/**\n * The persistent class for the payment database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Payment.findAll\", query=\"SELECT p FROM Payment p\")\npublic class Payment implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\tprivate BigDecimal amount;\n\n\t@Column(name=\"check_number\")\n\tprivate String checkNumber;\n\n\t@Column(name=\"customer_number\")\n\tprivate int customerNumber;\n\n\t@Temporal(TemporalType.DATE)\n\t@Column(name=\"payment_date\")\n\tprivate Date paymentDate;\n\n\tpublic Payment() {\n\t}\n\n}\n```\n\n\n#### product\n\n```sql\ncreate table if not exists product (\n  id int not null auto_increment,\n  product_code varchar(32) not null,\n  product_name varchar(128) not null,\n  product_line varchar(32) not null,\n  product_scale varchar(32) not null,\n  product_vendor varchar(64) not null,\n  product_description varchar(1024),\n  quantity_in_stock int,\n  buy_price decimal(10,2),\n  msrp decimal(10,2),\n  primary key (id)\n) engine = INNODB;\n```\n\n```java:Product.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\nimport java.math.BigDecimal;\n\n\n/**\n * The persistent class for the product database table.\n * \n */\n@Entity\n@NamedQuery(name=\"Product.findAll\", query=\"SELECT p FROM Product p\")\npublic class Product implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\t@Column(name=\"buy_price\")\n\tprivate BigDecimal buyPrice;\n\n\tprivate BigDecimal msrp;\n\n\t@Column(name=\"product_code\")\n\tprivate String productCode;\n\n\t@Column(name=\"product_description\")\n\tprivate String productDescription;\n\n\t@Column(name=\"product_line\")\n\tprivate String productLine;\n\n\t@Column(name=\"product_name\")\n\tprivate String productName;\n\n\t@Column(name=\"product_scale\")\n\tprivate String productScale;\n\n\t@Column(name=\"product_vendor\")\n\tprivate String productVendor;\n\n\t@Column(name=\"quantity_in_stock\")\n\tprivate int quantityInStock;\n\n\tpublic Product() {\n\t}\n\n}\n```\n\n\n#### product_line\n\n```sql\ncreate table if not exists product_line (\n  id int not null auto_increment,\n  product_line varchar(32) not null,\n  text_description varchar(1024),\n  html_description varchar(1024),\n  image varchar(1024),\n  primary key (id)\n) engine = INNODB;\n```\n\n```java:ProductLine.java\npackage com.example.model;\n\nimport java.io.Serializable;\nimport javax.persistence.*;\n\n\n/**\n * The persistent class for the product_line database table.\n * \n */\n@Entity\n@Table(name=\"product_line\")\n@NamedQuery(name=\"ProductLine.findAll\", query=\"SELECT p FROM ProductLine p\")\npublic class ProductLine implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\t@Id\n\t@GeneratedValue(strategy=GenerationType.IDENTITY)\n\tprivate int id;\n\n\t@Column(name=\"html_description\")\n\tprivate String htmlDescription;\n\n\tprivate String image;\n\n\t@Column(name=\"product_line\")\n\tprivate String productLine;\n\n\t@Column(name=\"text_description\")\n\tprivate String textDescription;\n\n\tpublic ProductLine() {\n\t}\n\n}\n```\n\n", "tags": ["Java", "Eclipse", "Hibernate", "jpa"]}