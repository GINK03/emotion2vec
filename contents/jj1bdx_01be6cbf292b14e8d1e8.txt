{"context": " More than 1 year has passed since last update.\u6700\u8fd1\u306fC\u3067\u3082IDE\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u304c\u4e00\u822c\u7684\u306a\u306e\u3060\u308d\u3046\u3051\u30691\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306b\u7d30\u304b\u3044\u9055\u3044\u304c\u51fa\u308b\u5834\u5408\u306f\u3001\u5909\u63db\u30b3\u30de\u30f3\u30c9\u3067\u76f4\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u624b\u304c\u3042\u308b\u3002\u305d\u306e\u5834\u5408\u306e\u5b9a\u756a\u306findent\u30b3\u30de\u30f3\u30c9\u3060\u308d\u3046\u3002\n\nUNIX\u3067\u306eC\u306e\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6b74\u53f2\n\u3053\u306e\u8a18\u4e8b\u306b\u3088\u308b\u3068\u3001UNIX 7th Edition (1979) \u306b\u306fcb (C Program Beautifier)\u3068\u3044\u3046C\u306e\u30b3\u30fc\u30c9\u3092\u6574\u5f62\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3059\u3067\u306b\u3042\u3063\u305f\u3002\n\u305d\u3057\u30664.2BSD (1983)\u304b\u3089\u306f\u3001\u73fe\u5728\u306b\u81f3\u308bindent\u30b3\u30de\u30f3\u30c9\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u3002FreeBSD\u306b\u3082OS X\u306b\u3082indent\u306f\uff08\u304a\u305d\u3089\u304fBSD\u30d9\u30fc\u30b9\u306e\uff09\u540c\u7b49\u306e\u3082\u306e\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u4e00\u65b9\u3001GNU\u306b\u306f\u72ec\u81ea\u306eindent\u304c\u3042\u308b\u3002\n\nC\u8a00\u8a9e\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\nC\u8a00\u8a9e\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u3060\u3051\u3067\u5c71\u306e\u3088\u3046\u306a\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u89e6\u308c\u306a\u3044\u3002\u3053\u306e\u3042\u305f\u308a\u306b\u3044\u308d\u3044\u308d\u3068\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3060\u3002\u79c1\u304c\u77e5\u308b\u9650\u308a\u30011990\u5e74\u4ee3\u524d\u534a\u6642\u70b9\u3067\u3001\u3059\u3067\u306bK&R, BSD, GNU\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u304c\u5206\u304b\u308c\u3066\u3044\u305f\u3088\u3046\u306b\u601d\u3046\u3002\u3069\u308c\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u6b63\u76f4\u8a00\u3063\u3066\u308f\u304b\u3089\u306a\u3044\u3002\n\u305f\u3060\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u7d71\u4e00\u3059\u308b\u306b\u306f\u3001indent\u306e\u3088\u3046\u306b\u3001\u4e00\u5ea6\u6a5f\u68b0\u7684\u306b\u5909\u63db\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u60aa\u304f\u306a\u3044\u3060\u308d\u3046\u3002\n\nindent\u306e\u4f7f\u3044\u65b9\n\u4ee5\u4e0b\u3001FreeBSD\u3068OS X\u306eindent\u30b3\u30de\u30f3\u30c9\u3067\u8aac\u660e\u3059\u308b\u3002GNU indent\u306f\u5225\u306e\u30b9\u30bf\u30a4\u30eb\u304c\u65e2\u5b9a\u5024\u306a\u306e\u3067\u3001\u7d50\u679c\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\nindent(1)\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u591a\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u3001\u3057\u304b\u3082\u305d\u308c\u305e\u308c\u306e\u65e2\u5b9a\u5024\u304c\u5b9a\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f55\u3082\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3044indent\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u4e88\u60f3\u5916\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u51fa\u3066\u304f\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3002\n\u307e\u305f\u3001indent\u306f \u30d5\u30a1\u30a4\u30eb\u540d1\u3064\u306e\u5834\u5408\u306f\u4e0a\u66f8\u304d\u3059\u308b\u304c\u30012\u3064\u306e\u5834\u5408\u306f\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u3066\u66f8\u304d\u8fbc\u3080 \u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u30602\u3002\n\u500b\u4eba\u7684\u306b\u306fTAB\u3092\u4f7f\u308f\u305a\u3001\u30b3\u30e1\u30f3\u30c8\u306e\u4e2d\u8eab\u3092\u5909\u3048\u306a\u3044\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001FreeBSD\u3068OS X\u3067\u306f\u3053\u3093\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u308b\u3002\nindent -i4 -nut -nfc1 -nfcb example.c\n\nindent\u306e\u4f8b\n\u516c\u958b\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306e\u4f8b\u3068\u3057\u3066Erlang\u3068C\u306b\u3088\u308bXorShift64*\u306e\u5b9f\u88c5\u306e\u3046\u3061C\u306e\u30b3\u30fc\u30c9\u304b\u3089\u5f15\u7528\u3059\u308b\u3002\n\u81ea\u5206\u3067\u624b\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3042\u308b\u3002\n\nexs64m_nif_before.c\nstatic ERL_NIF_TERM\nexs64m_nif_nif_next_list(ErlNifEnv *env, int argc, const ERL_NIF_TERM argv[])\n{ /* uint64(), state() */\n    ErlNifUInt64 len, state;\n    uint64_t i;\n    ERL_NIF_TERM *terms, list;\n    exs64_retval new;\n\n    if (!enif_get_uint64(env, argv[0], &len)\n        || len == 0LL\n        || !enif_get_uint64(env, argv[1], &state)\n        || state == 0LL ) {\n        return enif_make_badarg(env);\n    }\n\n    terms = (ERL_NIF_TERM *) enif_alloc(len * sizeof(ERL_NIF_TERM *));\n    if (NULL == terms) {\n        return enif_make_badarg(env);\n    }\n\n    for (i = 0LL; i < (uint64_t)len; i++) {\n        new = next((uint64_t)state);\n        terms[i] = enif_make_uint64(env, new.x);\n        state = (ErlNifUInt64)new.state;\n    }\n\n    list = enif_make_list_from_array(env, terms, len);\n\n    enif_free(terms);\n\n    return enif_make_tuple2(\n             env,\n             list,\n             enif_make_uint64(env, state));\n}\n\n/* exs64m static C function code follows */\n/* The state must be seeded with a nonzero value. */\n\nstatic inline exs64_retval next(uint64_t s) {\n    exs64_retval new;\n\n    s ^= s >> 12;\n    s ^= s << 25;\n    s ^= s >> 27;\n\n    new.x = s * 2685821657736338717LL;\n    new.state = s;\n\n    return new;\n}\n\n\n\u3053\u308c\u3092 indent -i4 -nut -nfc1 -nfcb \u306b\u304b\u3051\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u3002\n\nexs64m_nif_after.c\nstatic          ERL_NIF_TERM\nexs64m_nif_nif_next_list(ErlNifEnv * env, int argc, const ERL_NIF_TERM argv[])\n{                               /* uint64(), state() */\n    ErlNifUInt64    len, state;\n    uint64_t        i;\n    ERL_NIF_TERM   *terms, list;\n    exs64_retval    new;\n\n    if (!enif_get_uint64(env, argv[0], &len)\n        || len == 0LL\n        || !enif_get_uint64(env, argv[1], &state)\n        || state == 0LL) {\n        return enif_make_badarg(env);\n    }\n    terms = (ERL_NIF_TERM *) enif_alloc(len * sizeof(ERL_NIF_TERM *));\n    if (NULL == terms) {\n        return enif_make_badarg(env);\n    }\n    for (i = 0LL; i < (uint64_t) len; i++) {\n        new = next((uint64_t) state);\n        terms[i] = enif_make_uint64(env, new.x);\n        state = (ErlNifUInt64) new.state;\n    }\n\n    list = enif_make_list_from_array(env, terms, len);\n\n    enif_free(terms);\n\n    return enif_make_tuple2(\n                            env,\n                            list,\n                            enif_make_uint64(env, state));\n}\n\n/* exs64m static C function code follows */\n/* The state must be seeded with a nonzero value. */\n\nstatic inline exs64_retval\nnext(uint64_t s)\n{\n    exs64_retval    new;\n\n    s ^= s >> 12;\n    s ^= s << 25;\n    s ^= s >> 27;\n\n    new.x = s * 2685821657736338717LL;\n    new.state = s;\n\n    return new;\n}\n\n\n\u3069\u3053\u304c\u5909\u308f\u3063\u305f\u304b\u773a\u3081\u308b\u3068\u3001\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nindent\u306f\u4e07\u80fd\u3067\u306f\u306a\u3044\nindent\u306f\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u69cb\u6587\u4e0a\u554f\u984c\u306e\u306a\u3044\u30b3\u30fc\u30c9\u306e\u898b\u639b\u3051\u3092\u6574\u3048\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u5143\u306e\u30b3\u30fc\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u69cb\u9020\u306e\u30a8\u30e9\u30fc\u306a\u3069\u304c\u3042\u308b\u3068\u3001\u5f53\u7136\u306a\u304c\u3089\u307e\u3068\u3082\u306b\u306f\u5909\u63db\u3067\u304d\u306a\u3044\u3002\u305d\u306e\u610f\u5473\u3067\u306flint3\u3050\u3089\u3044\u306e\u4fa1\u5024\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nGo\u8a00\u8a9e\u3067\u306fgofmt\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u306e\u304c\u5b9a\u756a\u3060\u305d\u3046\u3060\u304c\u3001C\u8a00\u8a9e\u3067\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u7fd2\u6163\u3065\u3051\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u306a\u3001\u3068\u601d\u3046\u3053\u3068\u306f\u3042\u308b4\u3002\n\u4ee5\u4e0a\u3001indent\u306b\u95a2\u3059\u308b\u30dd\u30a8\u30e0\u3067\u3057\u305f\u3002\n\n\n\n\n\u60c5\u5f31\u306a\u79c1\u306f\u76f8\u5909\u308f\u3089\u305a\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002vim\u3068Emacs\u3069\u3061\u3089\u3067\u3082\u4f7f\u3046\u3002\u00a0\u21a9\n\n\nindent *.c\u3068\u304b\u3084\u308b\u3068\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u308b\u3089\u3057\u3044\u3002\u00a0\u21a9\n\n\nlint\u3068\u3044\u3046\u306e\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u9759\u7684\u89e3\u6790\u3092\u3084\u308b\u305f\u3081\u306eUNIX\u30b3\u30de\u30f3\u30c9\u3067\u3042\u308b\u30021979\u5e74\u306e7th Edition\u304b\u3089\u3042\u3063\u3066\u3001FreeBSD\u306b\u306f\u4eca\u3082\u3042\u308b\u304c\u3001OS X\u306b\u306f\u306a\u3044\u3002\u3082\u3063\u3068\u3082\u30a4\u30de\u30c9\u30ad\u306eC\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305f\u304f\u3055\u3093\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3067lint\u306e\u5fc5\u8981\u306f\u3082\u3046\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u00a0\u21a9\n\n\n\u3082\u3063\u3068\u3082C\u8a00\u8a9e\u3067\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u30b9\u30bf\u30a4\u30eb\u304c\u9055\u3044\u904e\u304e\u308b\u306e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u898b\u3064\u3051\u308b\u306e\u304c\u5927\u5909\u306a\u624b\u9593\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u305d\u3046\u3060\u304c\u3002\u00a0\u21a9\n\n\n\n\n\u6700\u8fd1\u306fC\u3067\u3082IDE\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u306e\u304c\u4e00\u822c\u7684\u306a\u306e\u3060\u308d\u3046\u3051\u3069[^1]\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306b\u7d30\u304b\u3044\u9055\u3044\u304c\u51fa\u308b\u5834\u5408\u306f\u3001\u5909\u63db\u30b3\u30de\u30f3\u30c9\u3067\u76f4\u3057\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u624b\u304c\u3042\u308b\u3002\u305d\u306e\u5834\u5408\u306e\u5b9a\u756a\u306f`indent`\u30b3\u30de\u30f3\u30c9\u3060\u308d\u3046\u3002\n\n## UNIX\u3067\u306eC\u306e\u6574\u5f62\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6b74\u53f2\n\n[\u3053\u306e\u8a18\u4e8b](https://news.ycombinator.com/item?id=7282145)\u306b\u3088\u308b\u3068\u3001UNIX 7th Edition (1979) \u306b\u306f`cb` (C Program Beautifier)\u3068\u3044\u3046C\u306e\u30b3\u30fc\u30c9\u3092\u6574\u5f62\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3059\u3067\u306b\u3042\u3063\u305f\u3002\n\n\u305d\u3057\u30664.2BSD (1983)\u304b\u3089\u306f\u3001\u73fe\u5728\u306b\u81f3\u308bindent\u30b3\u30de\u30f3\u30c9\u304c\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u3002FreeBSD\u306b\u3082OS X\u306b\u3082indent\u306f\uff08\u304a\u305d\u3089\u304fBSD\u30d9\u30fc\u30b9\u306e\uff09\u540c\u7b49\u306e\u3082\u306e\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\u4e00\u65b9\u3001[GNU\u306b\u306f\u72ec\u81ea\u306eindent](https://www.gnu.org/software/indent/)\u304c\u3042\u308b\u3002\n\n## C\u8a00\u8a9e\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\n\nC\u8a00\u8a9e\u306e\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb\u306b\u3064\u3044\u3066\u306f\u3001\u305d\u308c\u3060\u3051\u3067\u5c71\u306e\u3088\u3046\u306a\u8a18\u4e8b\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u305d\u3046\u306a\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u89e6\u308c\u306a\u3044\u3002[\u3053\u306e\u3042\u305f\u308a\u306b\u3044\u308d\u3044\u308d\u3068\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3060](http://c-faq.com/style/index.html)\u3002\u79c1\u304c\u77e5\u308b\u9650\u308a\u30011990\u5e74\u4ee3\u524d\u534a\u6642\u70b9\u3067\u3001\u3059\u3067\u306bK&R, BSD, GNU\u3068\u3044\u3046\u30b9\u30bf\u30a4\u30eb\u304c\u5206\u304b\u308c\u3066\u3044\u305f\u3088\u3046\u306b\u601d\u3046\u3002\u3069\u308c\u304c\u4e00\u756a\u3044\u3044\u304b\u306f\u6b63\u76f4\u8a00\u3063\u3066\u308f\u304b\u3089\u306a\u3044\u3002\n\n\u305f\u3060\u3001\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u7d71\u4e00\u3059\u308b\u306b\u306f\u3001indent\u306e\u3088\u3046\u306b\u3001\u4e00\u5ea6\u6a5f\u68b0\u7684\u306b\u5909\u63db\u3057\u3066\u3057\u307e\u3046\u306e\u306f\u60aa\u304f\u306a\u3044\u3060\u308d\u3046\u3002\n\n## indent\u306e\u4f7f\u3044\u65b9\n\n\u4ee5\u4e0b\u3001FreeBSD\u3068OS X\u306eindent\u30b3\u30de\u30f3\u30c9\u3067\u8aac\u660e\u3059\u308b\u3002GNU indent\u306f\u5225\u306e\u30b9\u30bf\u30a4\u30eb\u304c\u65e2\u5b9a\u5024\u306a\u306e\u3067\u3001\u7d50\u679c\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002\n\nindent(1)\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u591a\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3042\u308a\u3001\u3057\u304b\u3082\u305d\u308c\u305e\u308c\u306e\u65e2\u5b9a\u5024\u304c\u5b9a\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u4f55\u3082\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u3051\u306a\u3044`indent`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u4e88\u60f3\u5916\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u51fa\u3066\u304f\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3002\n\n\u307e\u305f\u3001indent\u306f __\u30d5\u30a1\u30a4\u30eb\u540d1\u3064\u306e\u5834\u5408\u306f\u4e0a\u66f8\u304d\u3059\u308b\u304c\u30012\u3064\u306e\u5834\u5408\u306f\u7b2c1\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u7b2c2\u5f15\u6570\u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306b\u5909\u63db\u3057\u3066\u66f8\u304d\u8fbc\u3080__ \u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3060[^2]\u3002\n\n\u500b\u4eba\u7684\u306b\u306fTAB\u3092\u4f7f\u308f\u305a\u3001\u30b3\u30e1\u30f3\u30c8\u306e\u4e2d\u8eab\u3092\u5909\u3048\u306a\u3044\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067\u3001FreeBSD\u3068OS X\u3067\u306f\u3053\u3093\u306a\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3057\u3066\u3044\u308b\u3002\n\n`indent -i4 -nut -nfc1 -nfcb example.c`\n\n## indent\u306e\u4f8b\n\n\u516c\u958b\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u306e\u4f8b\u3068\u3057\u3066Erlang\u3068C\u306b\u3088\u308bXorShift64*\u306e\u5b9f\u88c5\u306e\u3046\u3061[C\u306e\u30b3\u30fc\u30c9](https://github.com/jj1bdx/exs64m/blob/master/c_src/exs64m_nif.c)\u304b\u3089\u5f15\u7528\u3059\u308b\u3002\n\n\u81ea\u5206\u3067\u624b\u3067\u66f8\u304f\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3042\u308b\u3002\n\n```exs64m_nif_before.c\nstatic ERL_NIF_TERM\nexs64m_nif_nif_next_list(ErlNifEnv *env, int argc, const ERL_NIF_TERM argv[])\n{ /* uint64(), state() */\n    ErlNifUInt64 len, state;\n    uint64_t i;\n    ERL_NIF_TERM *terms, list;\n    exs64_retval new;\n\n    if (!enif_get_uint64(env, argv[0], &len)\n        || len == 0LL\n        || !enif_get_uint64(env, argv[1], &state)\n        || state == 0LL ) {\n        return enif_make_badarg(env);\n    }\n\n    terms = (ERL_NIF_TERM *) enif_alloc(len * sizeof(ERL_NIF_TERM *));\n    if (NULL == terms) {\n        return enif_make_badarg(env);\n    }\n\n    for (i = 0LL; i < (uint64_t)len; i++) {\n        new = next((uint64_t)state);\n        terms[i] = enif_make_uint64(env, new.x);\n        state = (ErlNifUInt64)new.state;\n    }\n\n    list = enif_make_list_from_array(env, terms, len);\n\n    enif_free(terms);\n\n    return enif_make_tuple2(\n             env,\n             list,\n             enif_make_uint64(env, state));\n}\n\n/* exs64m static C function code follows */\n/* The state must be seeded with a nonzero value. */\n\nstatic inline exs64_retval next(uint64_t s) {\n    exs64_retval new;\n\n\ts ^= s >> 12;\n\ts ^= s << 25;\n\ts ^= s >> 27;\n\n\tnew.x = s * 2685821657736338717LL;\n    new.state = s;\n\n    return new;\n}\n```\n\n\u3053\u308c\u3092 `indent -i4 -nut -nfc1 -nfcb` \u306b\u304b\u3051\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u306a\u308b\u3002\n\n```exs64m_nif_after.c\nstatic          ERL_NIF_TERM\nexs64m_nif_nif_next_list(ErlNifEnv * env, int argc, const ERL_NIF_TERM argv[])\n{                               /* uint64(), state() */\n    ErlNifUInt64    len, state;\n    uint64_t        i;\n    ERL_NIF_TERM   *terms, list;\n    exs64_retval    new;\n\n    if (!enif_get_uint64(env, argv[0], &len)\n        || len == 0LL\n        || !enif_get_uint64(env, argv[1], &state)\n        || state == 0LL) {\n        return enif_make_badarg(env);\n    }\n    terms = (ERL_NIF_TERM *) enif_alloc(len * sizeof(ERL_NIF_TERM *));\n    if (NULL == terms) {\n        return enif_make_badarg(env);\n    }\n    for (i = 0LL; i < (uint64_t) len; i++) {\n        new = next((uint64_t) state);\n        terms[i] = enif_make_uint64(env, new.x);\n        state = (ErlNifUInt64) new.state;\n    }\n\n    list = enif_make_list_from_array(env, terms, len);\n\n    enif_free(terms);\n\n    return enif_make_tuple2(\n                            env,\n                            list,\n                            enif_make_uint64(env, state));\n}\n\n/* exs64m static C function code follows */\n/* The state must be seeded with a nonzero value. */\n\nstatic inline exs64_retval\nnext(uint64_t s)\n{\n    exs64_retval    new;\n\n    s ^= s >> 12;\n    s ^= s << 25;\n    s ^= s >> 27;\n\n    new.x = s * 2685821657736338717LL;\n    new.state = s;\n\n    return new;\n}\n```\n\n\u3069\u3053\u304c\u5909\u308f\u3063\u305f\u304b\u773a\u3081\u308b\u3068\u3001\u9762\u767d\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n## indent\u306f\u4e07\u80fd\u3067\u306f\u306a\u3044\n\nindent\u306f\u30eb\u30fc\u30eb\u306b\u5f93\u3063\u3066\u69cb\u6587\u4e0a\u554f\u984c\u306e\u306a\u3044\u30b3\u30fc\u30c9\u306e\u898b\u639b\u3051\u3092\u6574\u3048\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u5143\u306e\u30b3\u30fc\u30c9\u306b\u30d6\u30ed\u30c3\u30af\u69cb\u9020\u306e\u30a8\u30e9\u30fc\u306a\u3069\u304c\u3042\u308b\u3068\u3001\u5f53\u7136\u306a\u304c\u3089\u307e\u3068\u3082\u306b\u306f\u5909\u63db\u3067\u304d\u306a\u3044\u3002\u305d\u306e\u610f\u5473\u3067\u306flint[^3]\u3050\u3089\u3044\u306e\u4fa1\u5024\u306f\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nGo\u8a00\u8a9e\u3067\u306fgofmt\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3046\u306e\u304c\u5b9a\u756a\u3060\u305d\u3046\u3060\u304c\u3001C\u8a00\u8a9e\u3067\u3082\u540c\u69d8\u306e\u3053\u3068\u3092\u7fd2\u6163\u3065\u3051\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u304b\u306a\u3001\u3068\u601d\u3046\u3053\u3068\u306f\u3042\u308b[^4]\u3002\n\n\u4ee5\u4e0a\u3001indent\u306b\u95a2\u3059\u308b\u30dd\u30a8\u30e0\u3067\u3057\u305f\u3002\n\n[^1]: \u60c5\u5f31\u306a\u79c1\u306f\u76f8\u5909\u308f\u3089\u305a\u30c6\u30ad\u30b9\u30c8\u30a8\u30c7\u30a3\u30bf\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002vim\u3068Emacs\u3069\u3061\u3089\u3067\u3082\u4f7f\u3046\u3002\n[^2]: `indent *.c`\u3068\u304b\u3084\u308b\u3068\u60b2\u60e8\u306a\u3053\u3068\u306b\u306a\u308b\u3089\u3057\u3044\u3002\n[^3]: `lint`\u3068\u3044\u3046\u306e\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u9759\u7684\u89e3\u6790\u3092\u3084\u308b\u305f\u3081\u306eUNIX\u30b3\u30de\u30f3\u30c9\u3067\u3042\u308b\u30021979\u5e74\u306e7th Edition\u304b\u3089\u3042\u3063\u3066\u3001FreeBSD\u306b\u306f\u4eca\u3082\u3042\u308b\u304c\u3001OS X\u306b\u306f\u306a\u3044\u3002\u3082\u3063\u3068\u3082\u30a4\u30de\u30c9\u30ad\u306eC\u30b3\u30f3\u30d1\u30a4\u30e9\u306f\u305f\u304f\u3055\u3093\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u306e\u3067lint\u306e\u5fc5\u8981\u306f\u3082\u3046\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n[^4]: \u3082\u3063\u3068\u3082C\u8a00\u8a9e\u3067\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3088\u3063\u3066\u30b9\u30bf\u30a4\u30eb\u304c\u9055\u3044\u904e\u304e\u308b\u306e\u3067\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u898b\u3064\u3051\u308b\u306e\u304c\u5927\u5909\u306a\u624b\u9593\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u305d\u3046\u3060\u304c\u3002\n", "tags": ["\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u30b9\u30bf\u30a4\u30eb", "OSX", "FreeBSD", "C\u8a00\u8a9e"]}