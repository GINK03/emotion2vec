{"context": "\n\n\u3084\u308a\u305f\u3044\u4e8b\n\n\u30c7\u30fc\u30bf\u3092\u8907\u6570\u56de (\u90e8\u5206\u3054\u3068) \u306b\u5206\u3051\u3066Gzip\u5727\u7e2e\u3059\u308b\n\u5727\u7e2e\u6e08\u307f\u306e\u90e8\u5206\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\n\n\nFlask\u306eStreaming Contents \u3067Gzip\u30c7\u30fc\u30bf\u3092\u52d5\u7684\u306b\u4f5c\u308a\u306a\u304c\u3089\u8fd4\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3002\n\n\n\u30b3\u30fc\u30c9\nGzipStream\u30af\u30e9\u30b9 (\u81ea\u4f5c)\u3002\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom gzip import GzipFile\nfrom StringIO import StringIO\n\n\nclass GzipStream(object):\n\n    def __init__(self):\n        self._io = StringIO()\n        self._gf = GzipFile(fileobj=self._io, mode='wb')\n        self._pos = 0\n\n    def push(self, content):\n        '''\n        push a part of content.\n        '''\n        assert not self._gf.closed\n        self._gf.write(content)\n        self._gf.flush()\n\n    def pop(self):\n        '''\n        :return: A part of gzipped content, or \"None\" that means EOF.\n        '''\n        current_pos = self._io.len\n\n        if self._gf.closed and current_pos == self._pos:\n            return None\n\n        part = self._io.getvalue()[self._pos:current_pos]\n        self._pos = current_pos\n\n        return part\n\n    def close(self):\n        '''\n        you must call this.\n        '''\n        if not self._gf.closed:\n            self._gf.close()\n\n    def __enter__(self):\n        ''' \u306a\u304f\u3066\u3082\u3044\u3044 '''\n        return self\n\n    def __exit__(self, exc_type, exc_value, traceback):\n        ''' \u306a\u304f\u3066\u3082\u3044\u3044 '''\n        self.close()\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3063\u3066\u307f\u308b\u3002\n>>> from streamgzip import GzipStream\n\n>>> gs = GzipStream()\n\n>>> gs.push('hello ')\n>>> gs.pop()\n'\\x1f\\x8b\\x08\\x00\\xfd\\xcf\\x0cX\\x02\\xff\\xcaH\\xcd\\xc9\\xc9W\\x00\\x00\\x00\\x00\\xff\\xff'\n\n>>> gs.push('world ')\n>>> gs.push('!!')\n>>> gs.pop()\n'*\\xcf/\\xcaIQ\\x00\\x00\\x00\\x00\\xff\\xffRT\\x04\\x00\\x00\\x00\\xff\\xff'\n\n>>> gs.close()\n>>> gs.pop()\n'\\x03\\x00\\xb7\\xc8\\xd4%\\x0e\\x00\\x00\\x00'\n\n>>> print gs.pop()\nNone\n\n\u30c7\u30fc\u30bf\u304c\u6b63\u3057\u3044\u304b\u691c\u8a3c\u3057\u3066\u307f\u308b\u3002\n>>> from gzip import GzipFile\n>>> from StringIO import StringIO\n\n>>> io = StringIO()\n>>> io.write('\\x1f\\x8b\\x08\\x00\\xfd\\xcf\\x0cX\\x02\\xff\\xcaH\\xcd\\xc9\\xc9W\\x00\\x00\\x00\\x00\\xff\\xff*\\xcf/\\xcaIQ\\x00\\x00\\x00\\x00\\xff\\xffRT\\x04\\x00\\x00\\x00\\xff\\xff\\x03\\x00\\xb7\\xc8\\xd4%\\x0e\\x00\\x00\\x00')\n>>> io.seek(0)\n>>> gzfile = GzipFile(fileobj=io, mode='rb')\n>>> gzfile.read()\n'hello world !!'\n\n\n## \u3084\u308a\u305f\u3044\u4e8b\n\n* \u30c7\u30fc\u30bf\u3092\u8907\u6570\u56de (\u90e8\u5206\u3054\u3068) \u306b\u5206\u3051\u3066Gzip\u5727\u7e2e\u3059\u308b\n* \u5727\u7e2e\u6e08\u307f\u306e\u90e8\u5206\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3067\u304d\u308b\n\n> [Flask\u306eStreaming Contents] \u3067Gzip\u30c7\u30fc\u30bf\u3092\u52d5\u7684\u306b\u4f5c\u308a\u306a\u304c\u3089\u8fd4\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3002\n\n## \u30b3\u30fc\u30c9\n\nGzipStream\u30af\u30e9\u30b9 (\u81ea\u4f5c)\u3002\n\n```py\n#!/usr/bin/env python\n# encoding: utf-8\n\nfrom gzip import GzipFile\nfrom StringIO import StringIO\n\n\nclass GzipStream(object):\n    \n    def __init__(self):\n        self._io = StringIO()\n        self._gf = GzipFile(fileobj=self._io, mode='wb')\n        self._pos = 0\n    \n    def push(self, content):\n        '''\n        push a part of content.\n        '''\n        assert not self._gf.closed\n        self._gf.write(content)\n        self._gf.flush()\n    \n    def pop(self):\n        '''\n        :return: A part of gzipped content, or \"None\" that means EOF.\n        '''\n        current_pos = self._io.len\n        \n        if self._gf.closed and current_pos == self._pos:\n            return None\n        \n        part = self._io.getvalue()[self._pos:current_pos]\n        self._pos = current_pos\n        \n        return part\n    \n    def close(self):\n        '''\n        you must call this.\n        '''\n        if not self._gf.closed:\n            self._gf.close()\n    \n    def __enter__(self):\n        ''' \u306a\u304f\u3066\u3082\u3044\u3044 '''\n        return self\n    \n    def __exit__(self, exc_type, exc_value, traceback):\n        ''' \u306a\u304f\u3066\u3082\u3044\u3044 '''\n        self.close()\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3063\u3066\u307f\u308b\u3002\n\n```pycon\n>>> from streamgzip import GzipStream\n\n>>> gs = GzipStream()\n\n>>> gs.push('hello ')\n>>> gs.pop()\n'\\x1f\\x8b\\x08\\x00\\xfd\\xcf\\x0cX\\x02\\xff\\xcaH\\xcd\\xc9\\xc9W\\x00\\x00\\x00\\x00\\xff\\xff'\n\n>>> gs.push('world ')\n>>> gs.push('!!')\n>>> gs.pop()\n'*\\xcf/\\xcaIQ\\x00\\x00\\x00\\x00\\xff\\xffRT\\x04\\x00\\x00\\x00\\xff\\xff'\n\n>>> gs.close()\n>>> gs.pop()\n'\\x03\\x00\\xb7\\xc8\\xd4%\\x0e\\x00\\x00\\x00'\n\n>>> print gs.pop()\nNone\n```\n\n\u30c7\u30fc\u30bf\u304c\u6b63\u3057\u3044\u304b\u691c\u8a3c\u3057\u3066\u307f\u308b\u3002\n\n```pycon\n>>> from gzip import GzipFile\n>>> from StringIO import StringIO\n\n>>> io = StringIO()\n>>> io.write('\\x1f\\x8b\\x08\\x00\\xfd\\xcf\\x0cX\\x02\\xff\\xcaH\\xcd\\xc9\\xc9W\\x00\\x00\\x00\\x00\\xff\\xff*\\xcf/\\xcaIQ\\x00\\x00\\x00\\x00\\xff\\xffRT\\x04\\x00\\x00\\x00\\xff\\xff\\x03\\x00\\xb7\\xc8\\xd4%\\x0e\\x00\\x00\\x00')\n>>> io.seek(0)\n>>> gzfile = GzipFile(fileobj=io, mode='rb')\n>>> gzfile.read()\n'hello world !!'\n```\n\n\n[Flask\u306eStreaming Contents]:http://flask.pocoo.org/docs/0.11/patterns/streaming/\n", "tags": ["Python", "gzip"]}