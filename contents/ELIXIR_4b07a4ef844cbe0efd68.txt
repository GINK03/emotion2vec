{"context": "Unity\u306e\nStandardAssets>Environment>Water\n\u306b\u306f\u3001\u6c34\u9762\u304c\u6ce2\u6253\u3064\u7d20\u6575\u306a\u30b7\u30a7\u30fc\u30c0\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\u305f\u3060\u3001\u6c34\u9762\u306e\u9ad8\u3055\u3092\u30b7\u30a7\u30fc\u30c0\u30fc\u5074\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6c34\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\u9ad8\u3055\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u914d\u7f6e\u3057\u305f\u3060\u3051\u3067\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6c34\u9762\u306b\u6f5c\u3063\u305f\u308a\u6d6e\u304d\u4e0a\u304c\u308a\u3059\u304e\u305f\u308a\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u305d\u3053\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u6c34\u9762\u3068\u540c\u3058\u8a08\u7b97\u3092\u3059\u308b\u3053\u3068\u3067\u6c34\u9762\u306b\u6d6e\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u3001\u6c34\u9762\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30b7\u30a7\u30fc\u30c0\u30fc\"FX/SimpleWater4\"\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n    :\n        Gerstner (\n            offsets, nrml, v.vertex.xyz, vtxForAni,                     // offsets, nrml will be written\n            _GAmplitude,                                                // amplitude\n            _GFrequency,                                                // frequency\n            _GSteepness,                                                // steepness\n            _GSpeed,                                                    // speed\n            _GDirectionAB,                                              // direction # 1, 2\n            _GDirectionCD                                               // direction # 3, 4\n        );\n    :\n\n\n\u3053\u3053\u3067\u9802\u70b9\u30aa\u30d5\u30bb\u30c3\u30c8\u3001\u6cd5\u7dda\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306f\n#include \"WaterInclude.cginc\"\n\u304b\u3089include\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n    half3 GerstnerOffset4 (half2 xzVtx, half4 steepness, half4 amp, half4 freq, half4 speed, half4 dirAB, half4 dirCD) \n    {\n        half3 offsets;\n\n        half4 AB = steepness.xxyy * amp.xxyy * dirAB.xyzw;\n        half4 CD = steepness.zzww * amp.zzww * dirCD.xyzw;\n\n        half4 dotABCD = freq.xyzw * half4(dot(dirAB.xy, xzVtx), dot(dirAB.zw, xzVtx), dot(dirCD.xy, xzVtx), dot(dirCD.zw, xzVtx));\n        half4 TIME = _Time.yyyy * speed;\n\n        half4 COS = cos (dotABCD + TIME);\n        half4 SIN = sin (dotABCD + TIME);\n\n        offsets.x = dot(COS, half4(AB.xz, CD.xz));\n        offsets.z = dot(COS, half4(AB.yw, CD.yw));\n        offsets.y = dot(SIN, amp);\n\n        return offsets;         \n    }   \n\n\u9802\u70b9\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u8a08\u7b97\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092c#\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class waterHeight : MonoBehaviour {\n    [SerializeField]\n    MeshRenderer targetMr;\n    Material mat;\n    // Time (t = time since current level load) values from Unity\n    // float4 _Time; // (t/20, t, t*2, t*3)\n\n    // Use this for initialization\n    void Start () {\n        mat = targetMr.sharedMaterial;\n    }\n\n    // Update is called once per frame\n    void Update () {\n\n        Vector2 xzVtx = new Vector2 (transform.position.x, transform.position.z);\n        Vector4 steepness = mat.GetVector (\"_GSteepness\");\n        Vector4 amp = mat.GetVector (\"_GAmplitude\");\n        Vector4 freq = mat.GetVector (\"_GFrequency\");\n        Vector4 speed = mat.GetVector (\"_GSpeed\");\n        Vector4 dirAB = mat.GetVector (\"_GDirectionAB\");\n        Vector4 dirCD = mat.GetVector (\"_GDirectionCD\");\n        Vector3 ofs = GerstnerOffset4(xzVtx, steepness, amp, freq, speed, dirAB, dirCD);\n        transform.GetChild (0).localPosition = ofs*0.5f;\n    }\n\n    Vector3 GerstnerOffset4 (Vector2 xzVtx, Vector4 steepness, Vector4 amp, Vector4 freq, Vector4 speed, Vector4 dirAB, Vector4 dirCD) \n    {\n        float t = Time.timeSinceLevelLoad;\n        Vector4 _Time = new Vector4(t/20, t, t*2, t*3);\n        Vector3 offsets;\n\n        Vector4 AB = Vector4.Scale(Vector4.Scale(xxyy(steepness) , xxyy(amp)) , dirAB); //steepness.xxyy * amp.xxyy * dirAB.xyzw;\n        Vector4 CD = Vector4.Scale(Vector4.Scale(zzww(steepness) , zzww(amp)) , dirCD); //steepness.zzww * amp.zzww * dirCD.xyzw;\n\n        Vector4 dotABCD = Vector4.Scale(freq , new Vector4 (\n            Vector2.Dot(new Vector2(dirAB.x,dirAB.y),xzVtx),\n            Vector2.Dot(new Vector2(dirAB.z,dirAB.w),xzVtx),\n            Vector2.Dot(new Vector2(dirCD.x,dirCD.y),xzVtx),\n            Vector2.Dot(new Vector2(dirCD.z,dirCD.w),xzVtx)\n        )); //freq.xyzw * half4(dot(dirAB.xy, xzVtx), dot(dirAB.zw, xzVtx), dot(dirCD.xy, xzVtx), dot(dirCD.zw, xzVtx));\n        Vector4 TIME = Vector4.Scale(Vector4.one * _Time.y , speed); //_Time.yyyy * speed;\n\n        Vector4 COS = new Vector4(\n            Mathf.Cos (dotABCD.x + TIME.x),\n            Mathf.Cos (dotABCD.y + TIME.y),\n            Mathf.Cos (dotABCD.z + TIME.z),\n            Mathf.Cos (dotABCD.w + TIME.w)\n        ); //cos (dotABCD + TIME);\n        Vector4 SIN = new Vector4(\n            Mathf.Sin (dotABCD.x + TIME.x),\n            Mathf.Sin (dotABCD.y + TIME.y),\n            Mathf.Sin (dotABCD.z + TIME.z),\n            Mathf.Sin (dotABCD.w + TIME.w)\n        ); //sin (dotABCD + TIME);\n\n        offsets.x = Vector4.Dot(COS, new Vector4(AB.x,AB.z, CD.x,CD.z)); // dot(COS, Vector4(AB.xz, CD.xz));\n        offsets.z = Vector4.Dot(COS, new Vector4(AB.y,AB.w, CD.y,CD.w)); // dot(COS, Vector4(AB.yw, CD.yw));\n        offsets.y = Vector4.Dot(SIN, amp); // dot(SIN, amp);\n\n        return offsets;         \n    }\n\n    Vector4 xxyy(Vector4 _in){ return new Vector4 (_in.x, _in.x, _in.y, _in.y); }\n    Vector4 zzww(Vector4 _in){ return new Vector4 (_in.z, _in.z, _in.w, _in.w); }\n}\n\n\n\u4e0a\u8a18\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u3001targetMr\u306b\u6c34\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08Tile\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n1\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eY\u5ea7\u6a19\u3092\u6c34\u9762\u3068\u540c\u3058\u306b\u3057\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b50\u3068\u3057\u3066\u6c34\u9762\u306b\u6d6e\u304b\u305b\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n\u6c34\u9762\u306b\u5408\u308f\u305b\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n\nUnity\u306e\nStandardAssets>Environment>Water\n\u306b\u306f\u3001\u6c34\u9762\u304c\u6ce2\u6253\u3064\u7d20\u6575\u306a\u30b7\u30a7\u30fc\u30c0\u30fc\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u305f\u3060\u3001\u6c34\u9762\u306e\u9ad8\u3055\u3092\u30b7\u30a7\u30fc\u30c0\u30fc\u5074\u3067\u51e6\u7406\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u6c34\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3068\u540c\u3058\u9ad8\u3055\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u914d\u7f6e\u3057\u305f\u3060\u3051\u3067\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u6c34\u9762\u306b\u6f5c\u3063\u305f\u308a\u6d6e\u304d\u4e0a\u304c\u308a\u3059\u304e\u305f\u308a\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n![wave0.gif](https://qiita-image-store.s3.amazonaws.com/0/59911/2c9bcf54-0ec8-6e2f-174d-a2033d1dc246.gif)\n\n\u305d\u3053\u3067\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3082\u6c34\u9762\u3068\u540c\u3058\u8a08\u7b97\u3092\u3059\u308b\u3053\u3068\u3067\u6c34\u9762\u306b\u6d6e\u304b\u305b\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u6c34\u9762\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30b7\u30a7\u30fc\u30c0\u30fc\"FX/SimpleWater4\"\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```FX/SimpleWater4\n    :\n\t\tGerstner (\n\t\t\toffsets, nrml, v.vertex.xyz, vtxForAni,\t\t\t\t\t\t// offsets, nrml will be written\n\t\t\t_GAmplitude,\t\t\t\t\t\t\t\t\t\t\t\t// amplitude\n\t\t\t_GFrequency,\t\t\t\t\t\t\t\t\t\t\t\t// frequency\n\t\t\t_GSteepness,\t\t\t\t\t\t\t\t\t\t\t\t// steepness\n\t\t\t_GSpeed,\t\t\t\t\t\t\t\t\t\t\t\t\t// speed\n\t\t\t_GDirectionAB,\t\t\t\t\t\t\t\t\t\t\t\t// direction # 1, 2\n\t\t\t_GDirectionCD\t\t\t\t\t\t\t\t\t\t\t\t// direction # 3, 4\n\t\t);\n    :\n\n```\n\u3053\u3053\u3067\u9802\u70b9\u30aa\u30d5\u30bb\u30c3\u30c8\u3001\u6cd5\u7dda\u3092\u5909\u66f4\u3057\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u95a2\u6570\u306f\n`#include \"WaterInclude.cginc\"`\n\u304b\u3089include\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u307f\u3066\u307f\u307e\u3059\u3002\n\n```\n\thalf3 GerstnerOffset4 (half2 xzVtx, half4 steepness, half4 amp, half4 freq, half4 speed, half4 dirAB, half4 dirCD) \n\t{\n\t\thalf3 offsets;\n\t\t\n\t\thalf4 AB = steepness.xxyy * amp.xxyy * dirAB.xyzw;\n\t\thalf4 CD = steepness.zzww * amp.zzww * dirCD.xyzw;\n\t\t\n\t\thalf4 dotABCD = freq.xyzw * half4(dot(dirAB.xy, xzVtx), dot(dirAB.zw, xzVtx), dot(dirCD.xy, xzVtx), dot(dirCD.zw, xzVtx));\n\t\thalf4 TIME = _Time.yyyy * speed;\n\t\t\n\t\thalf4 COS = cos (dotABCD + TIME);\n\t\thalf4 SIN = sin (dotABCD + TIME);\n\t\t\n\t\toffsets.x = dot(COS, half4(AB.xz, CD.xz));\n\t\toffsets.z = dot(COS, half4(AB.yw, CD.yw));\n\t\toffsets.y = dot(SIN, amp);\n\n\t\treturn offsets;\t\t\t\n\t}\t\n```\n\n\u9802\u70b9\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u8a08\u7b97\u306f\u3053\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092c#\u306b\u7f6e\u304d\u63db\u3048\u3066\u307f\u307e\u3059\u3002\n\n```\nusing System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\n\npublic class waterHeight : MonoBehaviour {\n\t[SerializeField]\n\tMeshRenderer targetMr;\n\tMaterial mat;\n\t// Time (t = time since current level load) values from Unity\n\t// float4 _Time; // (t/20, t, t*2, t*3)\n\n\t// Use this for initialization\n\tvoid Start () {\n\t\tmat = targetMr.sharedMaterial;\n\t}\n\t\n\t// Update is called once per frame\n\tvoid Update () {\n\n\t\tVector2 xzVtx = new Vector2 (transform.position.x, transform.position.z);\n\t\tVector4 steepness = mat.GetVector (\"_GSteepness\");\n\t\tVector4 amp = mat.GetVector (\"_GAmplitude\");\n\t\tVector4 freq = mat.GetVector (\"_GFrequency\");\n\t\tVector4 speed = mat.GetVector (\"_GSpeed\");\n\t\tVector4 dirAB = mat.GetVector (\"_GDirectionAB\");\n\t\tVector4 dirCD = mat.GetVector (\"_GDirectionCD\");\n\t\tVector3 ofs = GerstnerOffset4(xzVtx, steepness, amp, freq, speed, dirAB, dirCD);\n\t\ttransform.GetChild (0).localPosition = ofs*0.5f;\n\t}\n\n\tVector3 GerstnerOffset4 (Vector2 xzVtx, Vector4 steepness, Vector4 amp, Vector4 freq, Vector4 speed, Vector4 dirAB, Vector4 dirCD) \n\t{\n\t\tfloat t = Time.timeSinceLevelLoad;\n\t\tVector4 _Time = new Vector4(t/20, t, t*2, t*3);\n\t\tVector3 offsets;\n\n\t\tVector4 AB = Vector4.Scale(Vector4.Scale(xxyy(steepness) , xxyy(amp)) , dirAB); //steepness.xxyy * amp.xxyy * dirAB.xyzw;\n\t\tVector4 CD = Vector4.Scale(Vector4.Scale(zzww(steepness) , zzww(amp)) , dirCD); //steepness.zzww * amp.zzww * dirCD.xyzw;\n\n\t\tVector4 dotABCD = Vector4.Scale(freq , new Vector4 (\n\t\t\tVector2.Dot(new Vector2(dirAB.x,dirAB.y),xzVtx),\n\t\t\tVector2.Dot(new Vector2(dirAB.z,dirAB.w),xzVtx),\n\t\t\tVector2.Dot(new Vector2(dirCD.x,dirCD.y),xzVtx),\n\t\t\tVector2.Dot(new Vector2(dirCD.z,dirCD.w),xzVtx)\n\t\t)); //freq.xyzw * half4(dot(dirAB.xy, xzVtx), dot(dirAB.zw, xzVtx), dot(dirCD.xy, xzVtx), dot(dirCD.zw, xzVtx));\n\t\tVector4 TIME = Vector4.Scale(Vector4.one * _Time.y , speed); //_Time.yyyy * speed;\n\n\t\tVector4 COS = new Vector4(\n\t\t\tMathf.Cos (dotABCD.x + TIME.x),\n\t\t\tMathf.Cos (dotABCD.y + TIME.y),\n\t\t\tMathf.Cos (dotABCD.z + TIME.z),\n\t\t\tMathf.Cos (dotABCD.w + TIME.w)\n\t\t); //cos (dotABCD + TIME);\n\t\tVector4 SIN = new Vector4(\n\t\t\tMathf.Sin (dotABCD.x + TIME.x),\n\t\t\tMathf.Sin (dotABCD.y + TIME.y),\n\t\t\tMathf.Sin (dotABCD.z + TIME.z),\n\t\t\tMathf.Sin (dotABCD.w + TIME.w)\n\t\t); //sin (dotABCD + TIME);\n\n\t\toffsets.x = Vector4.Dot(COS, new Vector4(AB.x,AB.z, CD.x,CD.z)); // dot(COS, Vector4(AB.xz, CD.xz));\n\t\toffsets.z = Vector4.Dot(COS, new Vector4(AB.y,AB.w, CD.y,CD.w)); // dot(COS, Vector4(AB.yw, CD.yw));\n\t\toffsets.y = Vector4.Dot(SIN, amp); // dot(SIN, amp);\n\n\t\treturn offsets;\t\t\t\n\t}\n\n\tVector4 xxyy(Vector4 _in){ return new Vector4 (_in.x, _in.x, _in.y, _in.y); }\n\tVector4 zzww(Vector4 _in){ return new Vector4 (_in.z, _in.z, _in.w, _in.w); }\n}\n```\n\n1. \u4e0a\u8a18\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7a7a\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30bf\u30c3\u30c1\u3057\u3001targetMr\u306b\u6c34\u9762\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff08Tile\uff09\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n![waveSettings.png](https://qiita-image-store.s3.amazonaws.com/0/59911/c9306a79-4a88-01e6-1a59-1b1153c4c0af.png)\n2. 1\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eY\u5ea7\u6a19\u3092\u6c34\u9762\u3068\u540c\u3058\u306b\u3057\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u5b50\u3068\u3057\u3066\u6c34\u9762\u306b\u6d6e\u304b\u305b\u305f\u3044\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u914d\u7f6e\u3057\u307e\u3059\u3002\n3. \u6c34\u9762\u306b\u5408\u308f\u305b\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u79fb\u52d5\u3057\u307e\u3059\u3002\n\n![wave1.gif](https://qiita-image-store.s3.amazonaws.com/0/59911/4229b5c6-2578-ca85-4959-bf96f17f0299.gif)\n\n", "tags": ["Unity", "Shader"]}