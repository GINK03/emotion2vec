{"context": "iOS\u3067CoreImage\u3092\u7528\u3044\u3066QR\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057, \u751f\u6210\u3057\u305fQR\u30b3\u30fc\u30c9\u3092OpenURL\u3067\u5225\u30a2\u30d7\u30ea\u306b\u9001\u308d\u3046\u3068\u3057\u305f\u969b\u306bData\u578b\u306b\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\n\n\u72b6\u6cc1\n\nbefore.swift\nimport UIKit\nimport CoreImage\n\n// String \u304b\u3089\u3000QR\u30b3\u30fc\u30c9\u3092\u4f5c\u6210(CIImage)\nlet str = \"Hello, playground\"\nguard let strData = str.data(using: String.Encoding.utf8) else { fatalError() }\nlet sizeTransform = CGAffineTransform(scaleX: 10, y: 10)\nlet params:[String:Any] = [\"inputMessage\":strData,\"inputCorrectionLevel\":\"M\"]\nlet ciImage = CIFilter(name: \"CIQRCodeGenerator\", withInputParameters: params)?.outputImage?.applying(sizeTransform)\nguard let ciImage = ciImage else { fatalError() }\n\n\n// CIImage -> UIImage -> Data\nlet uiImage = UIImage(ciImage: ciImage)\nlet imageData = UIImagePNGRepresentation(uiImage) // nil\n\n\n\n\n\u89e3\u6c7a\u65b9\u6cd5\nCIImage\u3092\u4e00\u5ea6CGImage\u306b\u5909\u63db\u3057\uff0cUIImage\u306b\u5909\u63db\u3057\u3066Data\u578b\u306b\u3059\u308c\u3070\u826f\u3044\u3088\u3046\u3067\u3059\n\nafter.swift\nimport UIKit\nimport CoreImage\n\n// String \u304b\u3089\u3000QR\u30b3\u30fc\u30c9\u3092\u4f5c\u6210(CIImage)\nlet str = \"Hello, playground\"\nguard let strData = str.data(using: String.Encoding.utf8) else { fatalError() }\nlet sizeTransform = CGAffineTransform(scaleX: 10, y: 10)\nlet params:[String:Any] = [\"inputMessage\":strData,\"inputCorrectionLevel\":\"M\"]\nlet ciImage = CIFilter(name: \"CIQRCodeGenerator\", withInputParameters: params)?.outputImage?.applying(sizeTransform)\nguard let ciImage = ciImage else { fatalError() }\n\n\n// CIImage -> CGImage -> UIImage -> Data\u3000\nlet context = CIContext()\nlet cgImage = context.createCGImage(ciImage, from: ciImage.extent)\nlet uiImage = UIImage(cgImage: cgImage!)\nlet imageData = UIImagePNGRepresentation(uiImage) // 6120 bytes\n\n\n\niOS\u3067CoreImage\u3092\u7528\u3044\u3066QR\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057, \u751f\u6210\u3057\u305fQR\u30b3\u30fc\u30c9\u3092OpenURL\u3067\u5225\u30a2\u30d7\u30ea\u306b\u9001\u308d\u3046\u3068\u3057\u305f\u969b\u306bData\u578b\u306b\u5909\u63db\u3057\u3088\u3046\u3068\u3057\u305f\u6642\u306b\u30cf\u30de\u3063\u305f\u306e\u3067\u30e1\u30e2\n\n\n# \u72b6\u6cc1\n\n```swift:before.swift\nimport UIKit\nimport CoreImage\n\n// String \u304b\u3089\u3000QR\u30b3\u30fc\u30c9\u3092\u4f5c\u6210(CIImage)\nlet str = \"Hello, playground\"\nguard let strData = str.data(using: String.Encoding.utf8) else { fatalError() }\nlet sizeTransform = CGAffineTransform(scaleX: 10, y: 10)\nlet params:[String:Any] = [\"inputMessage\":strData,\"inputCorrectionLevel\":\"M\"]\nlet ciImage = CIFilter(name: \"CIQRCodeGenerator\", withInputParameters: params)?.outputImage?.applying(sizeTransform)\nguard let ciImage = ciImage else { fatalError() }\n\n\n// CIImage -> UIImage -> Data\nlet uiImage = UIImage(ciImage: ciImage)\nlet imageData = UIImagePNGRepresentation(uiImage) // nil\n\n```\n\n\n# \u89e3\u6c7a\u65b9\u6cd5\nCIImage\u3092\u4e00\u5ea6CGImage\u306b\u5909\u63db\u3057\uff0cUIImage\u306b\u5909\u63db\u3057\u3066Data\u578b\u306b\u3059\u308c\u3070\u826f\u3044\u3088\u3046\u3067\u3059\n\n\n```swift:after.swift\nimport UIKit\nimport CoreImage\n\n// String \u304b\u3089\u3000QR\u30b3\u30fc\u30c9\u3092\u4f5c\u6210(CIImage)\nlet str = \"Hello, playground\"\nguard let strData = str.data(using: String.Encoding.utf8) else { fatalError() }\nlet sizeTransform = CGAffineTransform(scaleX: 10, y: 10)\nlet params:[String:Any] = [\"inputMessage\":strData,\"inputCorrectionLevel\":\"M\"]\nlet ciImage = CIFilter(name: \"CIQRCodeGenerator\", withInputParameters: params)?.outputImage?.applying(sizeTransform)\nguard let ciImage = ciImage else { fatalError() }\n\n\n// CIImage -> CGImage -> UIImage -> Data\u3000\nlet context = CIContext()\nlet cgImage = context.createCGImage(ciImage, from: ciImage.extent)\nlet uiImage = UIImage(cgImage: cgImage!)\nlet imageData = UIImagePNGRepresentation(uiImage) // 6120 bytes\n\n```\n\n", "tags": ["Swift", "Swift3.0", "Xcode"]}