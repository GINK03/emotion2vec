{"context": "\u524d\u7de8\u306e\u7d9a\u304d\u3067\u3059\u3002\n\u524d\u56de\u306e\u30c7\u30b6\u30d1\u30bf\u3092\u3001Google\u691c\u7d22\u3092\u4f8b\u306b\u9069\u7528\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u8a71\u3002\n\nGoogle 1.0\n\u307e\u305a\u306f\u4e26\u884c\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u3001\u305d\u306e\u307e\u307e\u9010\u6b21\u51e6\u7406\u306e\u4f8b\u3067\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570type Search func(query string) Result\u3092\u8fd4\u3059\u3001fakeSearch\u95a2\u6570\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570Search\u306f\u3001time.Sleep\u3067\u4e00\u5b9a\u6642\u9593\u30b9\u30ea\u30fc\u30d7\u3057\u3066\u3001\u691c\u7d22\u3057\u3066\u3044\u308b\u30d5\u30ea\u3092\u3057\u307e\u3059\u3002\n\nfake.go\npackage fake\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n)\n\nvar (\n    Web   = fakeSearch(\"web\")\n    Image = fakeSearch(\"image\")\n    Video = fakeSearch(\"video\")\n)\n\ntype Search func(query string) Result\n\nfunc fakeSearch(kind string) Search {\n    return func(query string) Result {\n        time.Sleep(time.Duration(rand.Intn(100)) * time.Millisecond)\n        return Result(fmt.Sprintf(\"%s result for %q\\n\", kind, query))\n    }\n}\n\ntype Result string\n\n\n\u30e1\u30a4\u30f3\u95a2\u6570\u3067\u3059\u3002Google\u95a2\u6570\u306b\u3066\u3001\u5148\u307b\u3069\u306e\u30c0\u30df\u30fc\u691c\u7d22\u95a2\u6570\u3092\u9010\u6b21\u51e6\u7406\u30673\u56de\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\ngoogle1/main.go\npackage main\n\nimport (\n    \"runtime\"\n    \"time\"\n    \"math/rand\"\n    \"fmt\"\n    \"github.com/tfutada/robpike/google/fake\"\n)\n\nfunc main() {\n\n    runtime.GOMAXPROCS(runtime.NumCPU())\n    rand.Seed(time.Now().UnixNano())\n\n    start := time.Now()\n    results := Google(\"golang\")\n    elapsed := time.Since(start)\n    fmt.Println(elapsed)\n    fmt.Println(results)\n}\n\nfunc Google(query string) (results []fake.Result) {\n    results = append(results, fake.Web(query))\n    results = append(results, fake.Image(query))\n    results = append(results, fake.Video(query))\n    return\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google1/main.go\n160.479531ms\n[web result for \"golang\"\n image result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n\n\nGoogle 2.0\nGo\u30eb\u30fc\u30c1\u30f3\u3092\u4f7f\u7528\u3057\u3066\u4e26\u884c\u51e6\u7406\u3057\u307e\u3059\u3002\u524d\u7de8\u306eFanIn\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570\u3092\u305d\u308c\u305e\u308c\u7121\u540d\u95a2\u6570\u3067\u30e9\u30c3\u30d7\u3057\u3001\u30c1\u30e3\u30cd\u30eb\u7d4c\u7531\u3067\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\ngoogle2/main.go\nfunc Google(query string) (results []fake.Result) {\n\n    c := make(chan fake.Result)\n    go func() { c <- fake.Web(query) }()\n    go func() { c <- fake.Image(query) }()\n    go func() { c <- fake.Video(query) }()\n    for i := 0; i < 3; i++ {\n        results = append(results, <-c)\n    }\n\n    return\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u524d\u56de\u3088\u308a\u65e9\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u4e00\u756a\u691c\u7d22\u7d50\u679c\u304c\u9045\u3044\u3082\u306e\u304c\u3001\u5168\u4f53\u306e\u51e6\u7406\u6642\u9593\u306b\u306a\u308a\u307e\u3059\u3002\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google2/main.go\n82.139627ms\n[web result for \"golang\"\n image result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n\n\nGoogle 2.1\n\u524d\u56de\u306etimeout\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u3042\u308b\u4e00\u5b9a\u6642\u9593\u7d4c\u904e\u3057\u305f\u3089\u3001\u691c\u7d22\u3092\u6253\u3061\u5207\u308b\u51e6\u7406\u3092\u5165\u308c\u307e\u3059\u3002\n\ntimeout/main.go\nfunc Google(query string) (results []fake.Result) {\n\n    c := make(chan fake.Result)\n    go func() { c <- fake.Web(query) }()\n    go func() { c <- fake.Image(query) }()\n    go func() { c <- fake.Video(query) }()\n\n    timeout := time.After(80 * time.Millisecond)\n\n    for i := 0; i < 3; i++ {\n        select {\n        case s := <- c:\n            results = append(results, s)\n        case <- timeout:\n            fmt.Println(\"Timed out!\")\n            return\n        }\n    }\n\n    return\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\u51e6\u7406\u304c80ms\u3067\u6253\u3061\u5207\u3089\u308c\u3001image\u691c\u7d22\u304c\u5b9f\u884c\u3055\u308c\u3066\u306a\u3044\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google3/main.go\nTimed out!\n80.690454ms\n[web result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n\n\nGoogle 3.0\n\u6b21\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u3001\u691c\u7d22\u51e6\u7406\u306e\u5197\u9577\u5316\u3092\u884c\u3046\u3082\u306e\u3067\u3059\u3002\n\u540c\u3058\u691c\u7d22\u51e6\u7406\u3092\u4e26\u884c\u3057\u3066\u8907\u6570\u5b9f\u884c\u3057\u3001\u4e00\u756a\u65e9\u304f\u5e30\u3063\u3066\u304d\u305f\u3082\u306e\u3092\u6b63\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nfirst/main.go\nfunc main() {\n\n    runtime.GOMAXPROCS(runtime.NumCPU())\n    rand.Seed(time.Now().UnixNano())\n\n    start := time.Now()\n\n    results := First(\"golang\",\n        fake.FakeSearch(\"replica 1\"),\n        fake.FakeSearch(\"replica 2\"),\n        fake.FakeSearch(\"replica 3\"),\n        fake.FakeSearch(\"replica 4\"),\n        fake.FakeSearch(\"replica 5\")) // \u6ce8) fakeSearch -> FakeSearch\n\n    elapsed := time.Since(start)\n    fmt.Println(elapsed)\n    fmt.Println(results)\n}\n\nfunc First(query string, replicas ...fake.Search) fake.Result {\n\n    c := make(chan fake.Result)\n    searchReplica := func(i int) {c <- replicas[i](query)}\n    for i := range replicas {\n        go searchReplica(i) // \u30af\u30ed\u30fc\u30b8\u30e3\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u3002\u3002\n    }\n    return <-c\n}\n\n// \u6700\u521d\u306efakeSearch\u3092\u5927\u6587\u5b57\u306b\u5909\u3048\u3066\u3001\u30e1\u30a4\u30f3\u95a2\u6570\u304b\u3089\u898b\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nfunc FakeSearch(kind string) Search {\n    // \u540c\u3058\n\n\n\u5b9f\u884c\u7d50\u679c\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google3/main.go\n2.422057ms\nreplica 2 result for \"golang\"\n\n\nProcess finished with exit code 0\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u3001\u5148\u307b\u3069\u306eGoogle 2.1\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u306e\u5408\u308f\u305b\u6280\u3092\u3057\u3066\u3001\u6642\u9593\u306e\u304b\u304b\u308b\u30ec\u30d7\u30ea\u30ab\u306f\u5207\u308a\u6368\u3066\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u52b9\u7387\u7684\u306b\u691c\u7d22\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n[\u524d\u7de8](http://qiita.com/tfutada/items/a289628d8b2d0af6152d)\u306e\u7d9a\u304d\u3067\u3059\u3002\n\n\u524d\u56de\u306e\u30c7\u30b6\u30d1\u30bf\u3092\u3001Google\u691c\u7d22\u3092\u4f8b\u306b\u9069\u7528\u3057\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u8a71\u3002\n\n## Google 1.0\n\u307e\u305a\u306f\u4e26\u884c\u51e6\u7406\u304c\u5165\u3063\u3066\u3044\u306a\u3044\u3001\u305d\u306e\u307e\u307e\u9010\u6b21\u51e6\u7406\u306e\u4f8b\u3067\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570`type Search func(query string) Result`\u3092\u8fd4\u3059\u3001fakeSearch\u95a2\u6570\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570`Search`\u306f\u3001`time.Sleep`\u3067\u4e00\u5b9a\u6642\u9593\u30b9\u30ea\u30fc\u30d7\u3057\u3066\u3001\u691c\u7d22\u3057\u3066\u3044\u308b\u30d5\u30ea\u3092\u3057\u307e\u3059\u3002\n\n```go:fake.go\npackage fake\n\nimport (\n\t\"fmt\"\n\t\"math/rand\"\n\t\"time\"\n)\n\nvar (\n\tWeb   = fakeSearch(\"web\")\n\tImage = fakeSearch(\"image\")\n\tVideo = fakeSearch(\"video\")\n)\n\ntype Search func(query string) Result\n\nfunc fakeSearch(kind string) Search {\n\treturn func(query string) Result {\n\t\ttime.Sleep(time.Duration(rand.Intn(100)) * time.Millisecond)\n\t\treturn Result(fmt.Sprintf(\"%s result for %q\\n\", kind, query))\n\t}\n}\n\ntype Result string\n```\n\n\u30e1\u30a4\u30f3\u95a2\u6570\u3067\u3059\u3002Google\u95a2\u6570\u306b\u3066\u3001\u5148\u307b\u3069\u306e\u30c0\u30df\u30fc\u691c\u7d22\u95a2\u6570\u3092\u9010\u6b21\u51e6\u7406\u30673\u56de\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\n```go:google1/main.go\npackage main\n\nimport (\n\t\"runtime\"\n\t\"time\"\n\t\"math/rand\"\n\t\"fmt\"\n\t\"github.com/tfutada/robpike/google/fake\"\n)\n\nfunc main() {\n\n\truntime.GOMAXPROCS(runtime.NumCPU())\n\trand.Seed(time.Now().UnixNano())\n\n\tstart := time.Now()\n\tresults := Google(\"golang\")\n\telapsed := time.Since(start)\n\tfmt.Println(elapsed)\n\tfmt.Println(results)\n}\n\nfunc Google(query string) (results []fake.Result) {\n\tresults = append(results, fake.Web(query))\n\tresults = append(results, fake.Image(query))\n\tresults = append(results, fake.Video(query))\n\treturn\n}\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\n```bash\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google1/main.go\n160.479531ms\n[web result for \"golang\"\n image result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n```\n\n## Google 2.0\n\nGo\u30eb\u30fc\u30c1\u30f3\u3092\u4f7f\u7528\u3057\u3066\u4e26\u884c\u51e6\u7406\u3057\u307e\u3059\u3002\u524d\u7de8\u306eFanIn\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30c0\u30df\u30fc\u306e\u691c\u7d22\u95a2\u6570\u3092\u305d\u308c\u305e\u308c\u7121\u540d\u95a2\u6570\u3067\u30e9\u30c3\u30d7\u3057\u3001\u30c1\u30e3\u30cd\u30eb\u7d4c\u7531\u3067\u7d50\u679c\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```go:google2/main.go\nfunc Google(query string) (results []fake.Result) {\n\n\tc := make(chan fake.Result)\n\tgo func() { c <- fake.Web(query) }()\n\tgo func() { c <- fake.Image(query) }()\n\tgo func() { c <- fake.Video(query) }()\n\tfor i := 0; i < 3; i++ {\n\t\tresults = append(results, <-c)\n\t}\n\n\treturn\n}\n```\n\n### \u5b9f\u884c\u7d50\u679c\n\u524d\u56de\u3088\u308a\u65e9\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u4e00\u756a\u691c\u7d22\u7d50\u679c\u304c\u9045\u3044\u3082\u306e\u304c\u3001\u5168\u4f53\u306e\u51e6\u7406\u6642\u9593\u306b\u306a\u308a\u307e\u3059\u3002\n\n```bash\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google2/main.go\n82.139627ms\n[web result for \"golang\"\n image result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n```\n\n## Google 2.1\n\n\u524d\u56de\u306etimeout\u30d1\u30bf\u30fc\u30f3\u3067\u3001\u3042\u308b\u4e00\u5b9a\u6642\u9593\u7d4c\u904e\u3057\u305f\u3089\u3001\u691c\u7d22\u3092\u6253\u3061\u5207\u308b\u51e6\u7406\u3092\u5165\u308c\u307e\u3059\u3002\n\n```go:timeout/main.go\nfunc Google(query string) (results []fake.Result) {\n\n\tc := make(chan fake.Result)\n\tgo func() { c <- fake.Web(query) }()\n\tgo func() { c <- fake.Image(query) }()\n\tgo func() { c <- fake.Video(query) }()\n\n\ttimeout := time.After(80 * time.Millisecond)\n\n\tfor i := 0; i < 3; i++ {\n\t\tselect {\n\t\tcase s := <- c:\n\t\t\tresults = append(results, s)\n\t\tcase <- timeout:\n\t\t\tfmt.Println(\"Timed out!\")\n\t\t\treturn\n\t\t}\n\t}\n\n\treturn\n}\n```\n\n### [\u5b9f\u884c\u7d50\u679c](https://youtu.be/f6kdp27TYZs?t=1954)\n\n\u51e6\u7406\u304c80ms\u3067\u6253\u3061\u5207\u3089\u308c\u3001image\u691c\u7d22\u304c\u5b9f\u884c\u3055\u308c\u3066\u306a\u3044\u306e\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```bash\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google3/main.go\nTimed out!\n80.690454ms\n[web result for \"golang\"\n video result for \"golang\"\n]\n\nProcess finished with exit code 0\n```\n\n## Google 3.0\n\n\u6b21\u306e\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u306f\u3001\u691c\u7d22\u51e6\u7406\u306e\u5197\u9577\u5316\u3092\u884c\u3046\u3082\u306e\u3067\u3059\u3002\n\u540c\u3058\u691c\u7d22\u51e6\u7406\u3092\u4e26\u884c\u3057\u3066\u8907\u6570\u5b9f\u884c\u3057\u3001\u4e00\u756a\u65e9\u304f\u5e30\u3063\u3066\u304d\u305f\u3082\u306e\u3092\u6b63\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n```go:first/main.go\nfunc main() {\n\n\truntime.GOMAXPROCS(runtime.NumCPU())\n\trand.Seed(time.Now().UnixNano())\n\n\tstart := time.Now()\n\n\tresults := First(\"golang\",\n\t\tfake.FakeSearch(\"replica 1\"),\n\t\tfake.FakeSearch(\"replica 2\"),\n\t\tfake.FakeSearch(\"replica 3\"),\n\t\tfake.FakeSearch(\"replica 4\"),\n\t\tfake.FakeSearch(\"replica 5\")) // \u6ce8) fakeSearch -> FakeSearch\n\n\telapsed := time.Since(start)\n\tfmt.Println(elapsed)\n\tfmt.Println(results)\n}\n\nfunc First(query string, replicas ...fake.Search) fake.Result {\n\n\tc := make(chan fake.Result)\n\tsearchReplica := func(i int) {c <- replicas[i](query)}\n\tfor i := range replicas {\n\t\tgo searchReplica(i) // \u30af\u30ed\u30fc\u30b8\u30e3\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\u3002\u3002\n\t}\n\treturn <-c\n}\n\n// \u6700\u521d\u306efakeSearch\u3092\u5927\u6587\u5b57\u306b\u5909\u3048\u3066\u3001\u30e1\u30a4\u30f3\u95a2\u6570\u304b\u3089\u898b\u308c\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\nfunc FakeSearch(kind string) Search {\n    // \u540c\u3058\n```\n\n\u5b9f\u884c\u7d50\u679c\n\n```\n/usr/local/go/bin/go run /Users/taka/go/src/github.com/tfutada/robpike/google/google3/main.go\n2.422057ms\nreplica 2 result for \"golang\"\n\n\nProcess finished with exit code 0\n```\n\n\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u3001\u5148\u307b\u3069\u306eGoogle 2.1\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3068\u306e\u5408\u308f\u305b\u6280\u3092\u3057\u3066\u3001\u6642\u9593\u306e\u304b\u304b\u308b\u30ec\u30d7\u30ea\u30ab\u306f\u5207\u308a\u6368\u3066\u308b\u3053\u3068\u3067\u3001\u3088\u308a\u52b9\u7387\u7684\u306b\u691c\u7d22\u3067\u304d\u308b\u308f\u3051\u3067\u3059\u3002\n\n", "tags": ["Go", "concurrent", "Design", "pattern"]}