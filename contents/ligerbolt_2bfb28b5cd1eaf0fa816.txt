{"context": "\u524d\u56de\u3001\u524d\u3005\u56de\u307e\u3067\u5bfe\u8c61\u3068\u306a\u308b\u9854\u304c\u5199\u3063\u305f\u5019\u88dc\u753b\u50cf\u3092\u751f\u6210\u30fb\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3089\u304b\u3089\u9854\u9818\u57df\u90e8\u5206\u3092\u62bd\u51fa\u3057\u3066\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u4eca\u56de\u7528\u3044\u305f\u958b\u767a\u74b0\u5883\n\nMacOS X El Capitan 10.11.4 \nPython 3.5\nOpenCV 3.1\ndlib 18.18\n\n\n\u5019\u88dc\u753b\u50cf\u304b\u3089\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u30d5\u30ed\u30fc\n\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u5019\u88dc\u753b\u50cf\u4e2d\u3088\u308a\u9854\u304c\u6620\u3063\u305f\u9818\u57df\u306e\u307f\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u3001\u305d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u305f\u9818\u57df\u3092\u65b0\u305f\u306a\u753b\u50cf=\u9854\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3053\u306e\u4f5c\u696d\u3092\u624b\u52d5\u3067\u884c\u3046\u306b\u306f\u81a8\u5927\u306a\u624b\u9593\u3068\u6642\u9593\u3092\u8981\u3057\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5c11\u3057\u3067\u3082\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u9854\u8a8d\u8b58API\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u3092\u7528\u3044\u307e\u3059\u3002\n\ndlib\nOpenCV\nFace API\uff08Microsoft Cognitive Services\uff09\n\n\u3053\u308c\u3089\u306eAPI\u3092\u4f7f\u3048\u3070\u5019\u88dc\u753b\u50cf\u304b\u3089\u9854\u9818\u57df\u306e\u307f\u3092\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fOpenCV\u3068dlib\u3092\u7528\u3044\u305f\u624b\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306a\u9854\u753b\u50cf\u751f\u6210\u306e\u30d5\u30ed\u30fc\u306f\u57fa\u672c\u7684\u306b\u540c\u3058\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u9854\u691c\u51faAPI\u306b\u5019\u88dc\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\u5019\u88dc\u753b\u50cf\u304b\u30891\u3067\u53d6\u5f97\u3057\u305f\u5ea7\u6a19\u60c5\u5831\u3092\u5143\u306b\u3001\u5ea7\u6a19\u9818\u57df\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3059\u308b\n\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u305f\u9818\u57df\u3092\u65b0\u305f\u306a\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u3001\u9854\u753b\u50cf\u3068\u3059\u308b\n\n\u306a\u304a\u4e0a\u8a18\u51e6\u7406\u306f\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u3042\u308bface_detect\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u5b9a\u7fa9\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n# -*- coding: utf-8 -*-\nimport glob\n\n#\u5019\u88dc\u753b\u50cf\u3092\u683c\u7d0d\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\nIMG_PATH = \"/home/hoge/image/\"\n\ndef face_detect(img_list):\n    # \u672c\u30e1\u30bd\u30c3\u30c9\u3067\u9854\u753b\u50cf\u751f\u6210\u51e6\u7406\u3092\u5b9a\u7fa9\n    return\n\n\nif __name__ == '__main__':\n\n    #\u6307\u5b9a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3088\u308a\u5019\u88dc\u753b\u50cf\u3092\u53d6\u5f97\u3001API\u7b49\u3092\u7528\u3044\u3066\u9854\u753b\u50cf\u751f\u6210\n    images = glob.glob(IMG_PATH + '*.jpg')  \n    face_detect(images)\n\n\n\ndlib\ndlib\u306fC++\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u753b\u50cf\u51e6\u7406\u3084\u6a5f\u68b0\u5b66\u7fd2\u306e\u6a5f\u80fd\u3092\u7e8f\u3081\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001python\u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\uff08Mac\u74b0\u5883\u306b\u304a\u3051\u308bdlib\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306f\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u7b49\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\ndlib\u3067\u306f\u9854\u691c\u51fa\u7528\u306bget_frontal_face_detector\u30e1\u30bd\u30c3\u30c9\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u8b58\u5225\u7cbe\u5ea6\u306e\u9ad8\u3044\u975e\u7dda\u5f62\u8b58\u5225\u5668\u306e\u4e00\u7a2e\u3067\u3042\u308bSVM\u95a2\u9023\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u691c\u51fa\u3082\u53ef\u80fd\u3067\u3059\u304c\u4eca\u56de\u306f\u624b\u8efd\u3055\u3092\u512a\u5148\u3057\u3066\u3053\u3061\u3089\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306bget_frontal_face_detector\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u9854\u753b\u50cf\u751f\u6210\u30b3\u30fc\u30c9\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u203b \u306a\u304a\u753b\u50cf\u51e6\u7406\u90e8\u306b\u95a2\u3057\u3066\u306fOpenCV\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\nimport dlib\nimport cv2\n\ndef face_detect(img_list):\n\n    # \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308b\u8b58\u5225\u5668\u547c\u3073\u51fa\u3057\n    detector = dlib.get_frontal_face_detector()\n\n    # \u5019\u88dc\u753b\u50cf\u3092\u8b58\u5225\u5668\u306b\u304b\u3051\u3066\u5ea7\u6a19\u60c5\u5831\u3092\u53d6\u5f97\n    for img_path in img_list:\n\n        # \u30c8\u30ea\u30df\u30f3\u30b0\u7528\u5019\u88dc\u753b\u50cf\uff08\u30ab\u30e9\u30fc\u30e2\u30fc\u30c9\uff09\n        img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n\n        # \u753b\u50cf\u914d\u5217\u3092\u7d44\u307f\u76f4\u3057\u3066\u8b58\u5225\u5668\u306b\u5165\u529b\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u53d6\u5f97\n        cv_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n        faces = detector(cv_img, 1)\n\n        # \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308c\u3070\u9854\u753b\u50cf\u751f\u6210\n        img_count = 1\n        for face in faces:\n\n            # \u5019\u88dc\u753b\u50cf\u30b5\u30a4\u30ba\u53d6\u5f97\n            height, width = img.shape[:2]\n\n            # \u9854\u9818\u57df\u306e\u5ea7\u6a19\u70b9\u53d6\u5f97\n            top = face.top()\n            bottom = face.bottom()\n            left = face.left()\n            right = face.right()\n\n            # \u30a4\u30ec\u30ae\u30e5\u30e9\u30fc\u306a\u9854\u9818\u57df\u306f\u7121\u8996\n            if not top < 0 and left < 0 and bottom > height and right > width:\n                break\n            else:\n                # \u9854\u9818\u57df\u30c8\u30ea\u30df\u30f3\u30b0\n                dst_img = img[top:bottom, left:right]\n\n                # \u9854\u753b\u50cf\u30b5\u30a4\u30ba\u6b63\u898f\u5316\u3057\u3066\u4fdd\u5b58\n                face_img = cv2.resize(dst_img, (64,64))\n                new_img_name = str(img_count) + '.jpg'\n                cv2.imwrite(new_img_name, face_img)\n                img_count += 1\n\n\n\u3000\nOpenCV\u3068dlib\u3067\u306f\u3001\u753b\u50cf\u306e\u30ab\u30e9\u30fc\u60c5\u5831\u3067\u3042\u308bRGB\uff08Red/Green/Blue\uff09\u306e\u5404\u753b\u7d20\u5024\u306e\u6271\u3044\u65b9\u304c\u9055\u3044\u307e\u3059\u3002\nOpenCV\u3067\u306fRGB\uff08Red/Green/Blue\uff09\u306e\u753b\u7d20\u5024\u3092BGR\u306e\u9806\u306b\u914d\u5217\u306b\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u304c\u3001dlib\u3067\u306fRGB\u306e\u9806\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u305f\u3081cvtColor\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u914d\u5217\u69cb\u9020\u3092\u5909\u63db\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305fget_frontal_face_detector\u3067\u306f\u9854\u9818\u57df\u306e\u5ea7\u6a19\u60c5\u5831\u3068\u3057\u3066\u3001\u753b\u50cf\u9818\u57df\u5916\u306e\u5ea7\u6a19\u5024\u3092\u7a00\u306b\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u753b\u50cf\u7aef\u306b\u9854\u304c\u6620\u3063\u3066\u3044\u308b\u304c\u305f\u3081\u306b\u9854\u306e\u4e00\u90e8\u5206\u304c\u6b20\u3051\u3066\u308b\u30b1\u30fc\u30b9\u304c\u591a\u304f\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3082\u305d\u306e\u307e\u307e\u9854\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u3066\u3082\u4f7f\u3044\u306b\u304f\u3044\u3082\u306e\u306b\u306a\u308b\u305f\u3081\u3001\u30a4\u30ec\u30ae\u30e5\u30e9\u30fc\u306a\u9854\u9818\u57df\u3068\u3057\u3066\u7121\u8996\u3057\u3066\u3044\u307e\u3059\u3002\n\nOpenCV\nOpenCV\u306fC++\u3084Python\u7b49\u3067\u4f7f\u7528\u3067\u304d\u308b\u3001\u672c\u8a18\u4e8b\u30b7\u30ea\u30fc\u30ba\u3067\u3082\u304a\u99b4\u67d3\u307f\u306e\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u8b58\u5225\u5668\u30af\u30e9\u30b9\u3068\u3057\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u308bCascadeClassifier\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u7528\u3044\u308c\u3070\u8b58\u5225\u5668\u3092\u69cb\u7bc9\u3059\u308b\u969b\u306b\u8aad\u307f\u8fbc\u3080\u5b66\u7fd2\u7d50\u679c\u3092\u683c\u7d0d\u3057\u305fxml\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u6b21\u7b2c\u3067\u3001\u69d8\u3005\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3057\u305f\u8b58\u5225\u5668\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306fOpenCV\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308bhaarcascade_frontalface_default.xml(\u63d0\u4f9b\u30b5\u30a4\u30c8)\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3067\u3001\u9854\u691c\u51fa\u5668\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\nimport cv2\n\n# HaarCascade\u8b58\u5225\u5668\u304c\u53c2\u7167\u3059\u308bXML\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\nXML_PATH = \"./haarcascade_frontalface_default.xml\"\n\ndef face_detect(img_list):   \n\n    # \u9854\u9818\u57df\u8b58\u5225\u5668\u3092\u30bb\u30c3\u30c8\n    classifier = cv2.CascadeClassifier(xml_path)\n\n    # \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308c\u3070\u9854\u753b\u50cf\u751f\u6210\n    img_count = 1\n    for img_path in img_list:\n\n        # \u30c8\u30ea\u30df\u30f3\u30b0\u7528\u30ab\u30e9\u30fc\u753b\u50cf\n        org_img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n\n        # \u8b58\u5225\u5668\u5165\u529b\u7528\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\n        gray_img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)\n\n        #\u5019\u88dc\u753b\u50cf\uff08\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\uff09\u3092\u8b58\u5225\u5668\u306b\u5165\u529b\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u53d6\u5f97\n        face_points = classifier.detectMultiScale(gray_img, \\\n                scaleFactor=1.2, minNeighbors=2, minSize=(1,1))\n\n        #\u8b58\u5225\u7d50\u679c\uff08\u77e9\u5f62\u5ea7\u6a19\u60c5\u5831\uff09\u3088\u308a\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u3066\u9854\u753b\u50cf\u751f\u6210\u3000\n        for points in face_points:\n\n            # \u9854\u9818\u57df\u306e\u5ea7\u6a19\u70b9\u53d6\u5f97\n            x, y, width, height =  points\n\n            # \u9854\u9818\u57df\u30c8\u30ea\u30df\u30f3\u30b0\n            dst_img = org_img[y:y+height, x:x+width]\n\n            # \u9854\u753b\u50cf\u30b5\u30a4\u30ba\u6b63\u898f\u5316\u3057\u3066\u4fdd\u5b58\n            face_img = cv2.resize(dst_img, (64,64))\n            new_img_name = str(img_count) + '.jpg'\n            cv2.imwrite(new_img_name, face_img)\n            img_count += 1\n\n\nOpenCV\u3092\u7528\u3044\u305f\u65b9\u6cd5\u3067\u306f\u30c8\u30ea\u30df\u30f3\u30b0\u7528\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3068\u8b58\u5225\u5668\u5165\u529b\u7528\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u30012\u7a2e\u985e\u306e\u5019\u88dc\u753b\u50cf\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u308c\u306fdetectMultiScale\u30e1\u30bd\u30c3\u30c9\u304c\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5165\u529b\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\u306a\u304adetectMultiScale\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\n\nscaleFactor - \u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u751f\u6210\u6642\u306e\u7e2e\u5c0f\u91cf\u3002\u3053\u308c\u30921.01\u306b\u8fd1\u3065\u3051\u308b\u307b\u3069\u7d30\u304b\u3044\u9854\u9818\u57df\u63a2\u7d22\u304c\u53ef\u80fd\nminNeighbors - \u9854\u9818\u57df\u304c\u53d6\u308a\u3046\u308b\u6700\u4f4e\u9650\u306e\u8fd1\u508d\u77e9\u5f62\u6570\nminSize - \u691c\u51fa\u3059\u308b\u9854\u9818\u57df\u306e\u6700\u4f4e\u30b5\u30a4\u30ba\nmaxSize\uff08\u4eca\u56de\u672a\u6307\u5b9a\uff09 - \u691c\u51fa\u3059\u308b\u9854\u9818\u57df\u306e\u6700\u5927\u30b5\u30a4\u30ba\n\n\u203b\u4e0a\u8a18\u4e00\u90e8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u3001@workpiles\u3055\u3093\u306e\u4e0b\u8a18\u30b5\u30a4\u30c8\u304c\u7406\u89e3\u306b\u5f79\u7acb\u3064\u3068\u601d\u3044\u307e\u3059\u3002\n\u7269\u4f53\u691c\u51fa\uff08detectMultiScale\uff09\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u308b\uff08minNeighbors\u7de8\uff09\n\u7269\u4f53\u691c\u51fa\uff08detectMultiScale\uff09\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u308b\uff08scaleFactor\u7de8\uff09\n\n\u4e0a\u8a182\u3064\u306e\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u307f\u305f\u5927\u96d1\u628a\u306a\u5370\u8c61\n\ndlib\n\n\u691c\u51fa\u7cbe\u5ea6\u306f\u304b\u306a\u308a\u9ad8\u3044\u3002\u7279\u306b\u975e\u9854\u9818\u57df\uff08\u9854\u306e\u5199\u3063\u3066\u3044\u306a\u3044\u9818\u57df\uff09\u3092\u9854\u9818\u57df\u3068\u8aa4\u8a8d\u8b58\u3059\u308b\u3053\u3068\u306f\u6b86\u3069\u7121\u3044\u3002\n\u6b63\u9762\u9854\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u3084\u3084\u6a2a\u3084\u4e0a\u4e0b\u306b\u9854\u304c\u50be\u3044\u305f\u753b\u50cf\u306b\u3082\u305d\u3053\u305d\u3053\u30ed\u30d0\u30b9\u30c8\u3067\u691c\u51fa\u53ef\u80fd\u3042\u308b\u3002\n\n\nOpenCV\n\n\u51e6\u7406\u901f\u5ea6\u306fdlib\u3088\u308a\u512a\u308c\u3066\u308b\u3002\n\ndetectMultiScale\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u691c\u51fa\u7cbe\u5ea6\u304c\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\u3002\n\u975e\u9854\u9818\u57df\u3092\u9854\u9818\u57df\u3068\u8aa4\u8a8d\u8b58\u3059\u308b\u30b1\u30fc\u30b9\u304c\u3084\u3084\u76ee\u7acb\u3064\u3002\n\u6b63\u9762\u4ee5\u5916\u3092\u5411\u3044\u305f\u9854\u306b\u306f\u691c\u51fa\u7cbe\u5ea6\u4f4e\u3044\uff08\u6a2a\u9854\u7528\u306e\u8b58\u5225\u5668\u304c\u5fc5\u8981\uff09\n\n\u3000\n\u4ee5\u4e0a\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5019\u88dc\u753b\u50cf\u3088\u308a\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u624b\u6cd5\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3067\u3057\u305f\u3002\n[\u524d\u56de](http://qiita.com/ligerbolt/items/fdfe836e71a2c0247a79)\u3001[\u524d\u3005\u56de](http://qiita.com/ligerbolt/items/aeaa88980030fba940b6)\u307e\u3067\u5bfe\u8c61\u3068\u306a\u308b\u9854\u304c\u5199\u3063\u305f\u5019\u88dc\u753b\u50cf\u3092\u751f\u6210\u30fb\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u305d\u308c\u3089\u304b\u3089\u9854\u9818\u57df\u90e8\u5206\u3092\u62bd\u51fa\u3057\u3066\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n#\u4eca\u56de\u7528\u3044\u305f\u958b\u767a\u74b0\u5883\n+ MacOS X El Capitan 10.11.4 \n+ Python 3.5\n+ OpenCV 3.1\n+ dlib 18.18\n\n#\u5019\u88dc\u753b\u50cf\u304b\u3089\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u30d5\u30ed\u30fc\n\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u5019\u88dc\u753b\u50cf\u4e2d\u3088\u308a\u9854\u304c\u6620\u3063\u305f\u9818\u57df\u306e\u307f\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u3001\u305d\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u305f\u9818\u57df\u3092\u65b0\u305f\u306a\u753b\u50cf=\u9854\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u307e\u3059\u3002\n\u3057\u304b\u3057\u3053\u306e\u4f5c\u696d\u3092\u624b\u52d5\u3067\u884c\u3046\u306b\u306f\u81a8\u5927\u306a\u624b\u9593\u3068\u6642\u9593\u3092\u8981\u3057\u307e\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5c11\u3057\u3067\u3082\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u4eca\u56de\u306f\u4ee5\u4e0b\u306e\u9854\u8a8d\u8b58API\uff08\u30e9\u30a4\u30d6\u30e9\u30ea\uff09\u3092\u7528\u3044\u307e\u3059\u3002\n\n+ dlib\n+ OpenCV\n+ Face API\uff08Microsoft Cognitive Services\uff09\n\n\u3053\u308c\u3089\u306eAPI\u3092\u4f7f\u3048\u3070\u5019\u88dc\u753b\u50cf\u304b\u3089\u9854\u9818\u57df\u306e\u307f\u3092\u81ea\u52d5\u7684\u306b\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306fOpenCV\u3068dlib\u3092\u7528\u3044\u305f\u624b\u6cd5\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306a\u9854\u753b\u50cf\u751f\u6210\u306e\u30d5\u30ed\u30fc\u306f\u57fa\u672c\u7684\u306b\u540c\u3058\u3067\u3001\u4ee5\u4e0b\u306e\u69d8\u306b\u306a\u308a\u307e\u3059\u3002\n\n1. \u9854\u691c\u51faAPI\u306b\u5019\u88dc\u753b\u50cf\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n2. \u5019\u88dc\u753b\u50cf\u304b\u30891\u3067\u53d6\u5f97\u3057\u305f\u5ea7\u6a19\u60c5\u5831\u3092\u5143\u306b\u3001\u5ea7\u6a19\u9818\u57df\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3059\u308b\n3. \u30c8\u30ea\u30df\u30f3\u30b0\u3057\u305f\u9818\u57df\u3092\u65b0\u305f\u306a\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u3001\u9854\u753b\u50cf\u3068\u3059\u308b\n\n\u306a\u304a\u4e0a\u8a18\u51e6\u7406\u306f\u4e0b\u8a18\u30b3\u30fc\u30c9\u306b\u3042\u308bface_detect\u30e1\u30bd\u30c3\u30c9\u306b\u3066\u5b9a\u7fa9\u3059\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n\n```python\n# -*- coding: utf-8 -*-\nimport glob\n\n#\u5019\u88dc\u753b\u50cf\u3092\u683c\u7d0d\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30d1\u30b9\nIMG_PATH = \"/home/hoge/image/\"\n\ndef face_detect(img_list):\n\t# \u672c\u30e1\u30bd\u30c3\u30c9\u3067\u9854\u753b\u50cf\u751f\u6210\u51e6\u7406\u3092\u5b9a\u7fa9\n\treturn\n\n\nif __name__ == '__main__':\n\t\n\t#\u6307\u5b9a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3088\u308a\u5019\u88dc\u753b\u50cf\u3092\u53d6\u5f97\u3001API\u7b49\u3092\u7528\u3044\u3066\u9854\u753b\u50cf\u751f\u6210\n\timages = glob.glob(IMG_PATH + '*.jpg')\t\n\tface_detect(images)\n\t\n```\n\n\n##dlib\n[dlib](http://dlib.net/)\u306fC++\u7528\u306b\u958b\u767a\u3055\u308c\u305f\u753b\u50cf\u51e6\u7406\u3084\u6a5f\u68b0\u5b66\u7fd2\u306e\u6a5f\u80fd\u3092\u7e8f\u3081\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001python\u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\uff08Mac\u74b0\u5883\u306b\u304a\u3051\u308bdlib\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306b\u95a2\u3057\u3066\u306f\u3001[\u3053\u3061\u3089\u306e\u8a18\u4e8b](http://qiita.com/bohemian916/items/2de6b72151e2bbbf0389)\u7b49\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\ndlib\u3067\u306f\u9854\u691c\u51fa\u7528\u306b`get_frontal_face_detector`\u30e1\u30bd\u30c3\u30c9\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u4ed6\u306b\u3082\u8b58\u5225\u7cbe\u5ea6\u306e\u9ad8\u3044\u975e\u7dda\u5f62\u8b58\u5225\u5668\u306e\u4e00\u7a2e\u3067\u3042\u308bSVM\u95a2\u9023\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3048\u3070\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u691c\u51fa\u3082\u53ef\u80fd\u3067\u3059\u304c\u4eca\u56de\u306f\u624b\u8efd\u3055\u3092\u512a\u5148\u3057\u3066\u3053\u3061\u3089\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u5b9f\u969b\u306b`get_frontal_face_detector`\u30e1\u30bd\u30c3\u30c9\u3092\u5229\u7528\u3057\u305f\u9854\u753b\u50cf\u751f\u6210\u30b3\u30fc\u30c9\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u203b \u306a\u304a\u753b\u50cf\u51e6\u7406\u90e8\u306b\u95a2\u3057\u3066\u306fOpenCV\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n```python\nimport dlib\nimport cv2\n\ndef face_detect(img_list):\n\n\t# \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308b\u8b58\u5225\u5668\u547c\u3073\u51fa\u3057\n\tdetector = dlib.get_frontal_face_detector()\n\t\n\t# \u5019\u88dc\u753b\u50cf\u3092\u8b58\u5225\u5668\u306b\u304b\u3051\u3066\u5ea7\u6a19\u60c5\u5831\u3092\u53d6\u5f97\n\tfor img_path in img_list:\n\t\n\t\t# \u30c8\u30ea\u30df\u30f3\u30b0\u7528\u5019\u88dc\u753b\u50cf\uff08\u30ab\u30e9\u30fc\u30e2\u30fc\u30c9\uff09\n\t\timg = cv2.imread(img_path, cv2.IMREAD_COLOR)\n\t\t\n\t\t# \u753b\u50cf\u914d\u5217\u3092\u7d44\u307f\u76f4\u3057\u3066\u8b58\u5225\u5668\u306b\u5165\u529b\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u53d6\u5f97\n\t\tcv_img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\n\t\tfaces = detector(cv_img, 1)\n\n\t\t# \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308c\u3070\u9854\u753b\u50cf\u751f\u6210\n\t\timg_count = 1\n        for face in faces:\n        \t\n        \t# \u5019\u88dc\u753b\u50cf\u30b5\u30a4\u30ba\u53d6\u5f97\n        \theight, width = img.shape[:2]\n        \t\n        \t# \u9854\u9818\u57df\u306e\u5ea7\u6a19\u70b9\u53d6\u5f97\n        \ttop = face.top()\n        \tbottom = face.bottom()\n        \tleft = face.left()\n        \tright = face.right()\n        \t\n        \t# \u30a4\u30ec\u30ae\u30e5\u30e9\u30fc\u306a\u9854\u9818\u57df\u306f\u7121\u8996\n        \tif not top < 0 and left < 0 and bottom > height and right > width:\n            \tbreak\n            else:\n            \t# \u9854\u9818\u57df\u30c8\u30ea\u30df\u30f3\u30b0\n            \tdst_img = img[top:bottom, left:right]\n            \t\n            \t# \u9854\u753b\u50cf\u30b5\u30a4\u30ba\u6b63\u898f\u5316\u3057\u3066\u4fdd\u5b58\n            \tface_img = cv2.resize(dst_img, (64,64))\n            \tnew_img_name = str(img_count) + '.jpg'\n            \tcv2.imwrite(new_img_name, face_img)\n            \timg_count += 1\n\n```\n\u3000\nOpenCV\u3068dlib\u3067\u306f\u3001\u753b\u50cf\u306e\u30ab\u30e9\u30fc\u60c5\u5831\u3067\u3042\u308bRGB\uff08Red/Green/Blue\uff09\u306e\u5404\u753b\u7d20\u5024\u306e\u6271\u3044\u65b9\u304c\u9055\u3044\u307e\u3059\u3002\nOpenCV\u3067\u306fRGB\uff08Red/Green/Blue\uff09\u306e\u753b\u7d20\u5024\u3092BGR\u306e\u9806\u306b\u914d\u5217\u306b\u4fdd\u6301\u3057\u3066\u3044\u307e\u3059\u304c\u3001dlib\u3067\u306fRGB\u306e\u9806\u306b\u4fdd\u6301\u3057\u3066\u3044\u308b\u305f\u3081`cvtColor`\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u3066\u3001\u914d\u5217\u69cb\u9020\u3092\u5909\u63db\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305fget_frontal_face_detector\u3067\u306f\u9854\u9818\u57df\u306e\u5ea7\u6a19\u60c5\u5831\u3068\u3057\u3066\u3001\u753b\u50cf\u9818\u57df\u5916\u306e\u5ea7\u6a19\u5024\u3092\u7a00\u306b\u8fd4\u3057\u307e\u3059\u3002\u3053\u308c\u306f\u753b\u50cf\u7aef\u306b\u9854\u304c\u6620\u3063\u3066\u3044\u308b\u304c\u305f\u3081\u306b\u9854\u306e\u4e00\u90e8\u5206\u304c\u6b20\u3051\u3066\u308b\u30b1\u30fc\u30b9\u304c\u591a\u304f\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3082\u305d\u306e\u307e\u307e\u9854\u753b\u50cf\u3068\u3057\u3066\u751f\u6210\u3057\u3066\u3082\u4f7f\u3044\u306b\u304f\u3044\u3082\u306e\u306b\u306a\u308b\u305f\u3081\u3001\u30a4\u30ec\u30ae\u30e5\u30e9\u30fc\u306a\u9854\u9818\u57df\u3068\u3057\u3066\u7121\u8996\u3057\u3066\u3044\u307e\u3059\u3002\n## OpenCV\n[OpenCV](http://opencv.org/)\u306fC++\u3084Python\u7b49\u3067\u4f7f\u7528\u3067\u304d\u308b\u3001\u672c\u8a18\u4e8b\u30b7\u30ea\u30fc\u30ba\u3067\u3082\u304a\u99b4\u67d3\u307f\u306e\u753b\u50cf\u51e6\u7406\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30ab\u30b9\u30b1\u30fc\u30c9\u8b58\u5225\u5668\u30af\u30e9\u30b9\u3068\u3057\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u308b`CascadeClassifier`\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3092\u7528\u3044\u308c\u3070\u8b58\u5225\u5668\u3092\u69cb\u7bc9\u3059\u308b\u969b\u306b\u8aad\u307f\u8fbc\u3080\u5b66\u7fd2\u7d50\u679c\u3092\u683c\u7d0d\u3057\u305fxml\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u6b21\u7b2c\u3067\u3001\u69d8\u3005\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u5bfe\u5fdc\u3057\u305f\u8b58\u5225\u5668\u3092\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\u4eca\u56de\u306fOpenCV\u3067\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b`haarcascade_frontalface_default.xml`[(\u63d0\u4f9b\u30b5\u30a4\u30c8)](https://github.com/Itseez/opencv/tree/master/data/haarcascades)\u3092\u53c2\u7167\u3059\u308b\u3053\u3068\u3067\u3001\u9854\u691c\u51fa\u5668\u3068\u3057\u3066\u5229\u7528\u3057\u307e\u3059\u3002\n\n```python\nimport cv2\n\n# HaarCascade\u8b58\u5225\u5668\u304c\u53c2\u7167\u3059\u308bXML\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\nXML_PATH = \"./haarcascade_frontalface_default.xml\"\n    \ndef face_detect(img_list):   \n    \n    # \u9854\u9818\u57df\u8b58\u5225\u5668\u3092\u30bb\u30c3\u30c8\n    classifier = cv2.CascadeClassifier(xml_path)\n\n\t# \u9854\u9818\u57df\u3092\u691c\u51fa\u3059\u308c\u3070\u9854\u753b\u50cf\u751f\u6210\n    img_count = 1\n    for img_path in img_list:\n    \n\t\t# \u30c8\u30ea\u30df\u30f3\u30b0\u7528\u30ab\u30e9\u30fc\u753b\u50cf\n\t\torg_img = cv2.imread(img_path, cv2.IMREAD_COLOR)\n\n\t\t# \u8b58\u5225\u5668\u5165\u529b\u7528\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\n        gray_img = cv2.imread(img_path, cv2.IMREAD_GRAYSCALE)\n        \n        #\u5019\u88dc\u753b\u50cf\uff08\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\uff09\u3092\u8b58\u5225\u5668\u306b\u5165\u529b\u3001\u9854\u9818\u57df\u3068\u601d\u308f\u308c\u308b\u5ea7\u6a19\u60c5\u5831\u53d6\u5f97\n        face_points = classifier.detectMultiScale(gray_img, \\\n                scaleFactor=1.2, minNeighbors=2, minSize=(1,1))\n        \n        #\u8b58\u5225\u7d50\u679c\uff08\u77e9\u5f62\u5ea7\u6a19\u60c5\u5831\uff09\u3088\u308a\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u30c8\u30ea\u30df\u30f3\u30b0\u3057\u3066\u9854\u753b\u50cf\u751f\u6210\u3000\n        for points in face_points:\n            \n            # \u9854\u9818\u57df\u306e\u5ea7\u6a19\u70b9\u53d6\u5f97\n            x, y, width, height =  points\n            \n            # \u9854\u9818\u57df\u30c8\u30ea\u30df\u30f3\u30b0\n            dst_img = org_img[y:y+height, x:x+width]\n            \n            # \u9854\u753b\u50cf\u30b5\u30a4\u30ba\u6b63\u898f\u5316\u3057\u3066\u4fdd\u5b58\n            face_img = cv2.resize(dst_img, (64,64))\n            new_img_name = str(img_count) + '.jpg'\n            cv2.imwrite(new_img_name, face_img)\n            img_count += 1\n            \n```\n\nOpenCV\u3092\u7528\u3044\u305f\u65b9\u6cd5\u3067\u306f\u30c8\u30ea\u30df\u30f3\u30b0\u7528\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3068\u8b58\u5225\u5668\u5165\u529b\u7528\u306e\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u30012\u7a2e\u985e\u306e\u5019\u88dc\u753b\u50cf\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u308c\u306f`detectMultiScale`\u30e1\u30bd\u30c3\u30c9\u304c\u30ab\u30e9\u30fc\u753b\u50cf\u306e\u5165\u529b\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044\u305f\u3081\u3067\u3059\u3002\n\n\u306a\u304a`detectMultiScale`\u30e1\u30bd\u30c3\u30c9\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5f15\u6570\u3092\u53d6\u308a\u307e\u3059\u3002\n\n+ scaleFactor - \u753b\u50cf\u30d4\u30e9\u30df\u30c3\u30c9\u751f\u6210\u6642\u306e\u7e2e\u5c0f\u91cf\u3002\u3053\u308c\u30921.01\u306b\u8fd1\u3065\u3051\u308b\u307b\u3069\u7d30\u304b\u3044\u9854\u9818\u57df\u63a2\u7d22\u304c\u53ef\u80fd\n+ minNeighbors - \u9854\u9818\u57df\u304c\u53d6\u308a\u3046\u308b\u6700\u4f4e\u9650\u306e\u8fd1\u508d\u77e9\u5f62\u6570\n+ minSize - \u691c\u51fa\u3059\u308b\u9854\u9818\u57df\u306e\u6700\u4f4e\u30b5\u30a4\u30ba\n+ maxSize\uff08\u4eca\u56de\u672a\u6307\u5b9a\uff09 - \u691c\u51fa\u3059\u308b\u9854\u9818\u57df\u306e\u6700\u5927\u30b5\u30a4\u30ba\n\n\u203b\u4e0a\u8a18\u4e00\u90e8\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u3064\u3044\u3066\u306f\u3001@workpiles\u3055\u3093\u306e\u4e0b\u8a18\u30b5\u30a4\u30c8\u304c\u7406\u89e3\u306b\u5f79\u7acb\u3064\u3068\u601d\u3044\u307e\u3059\u3002\n\n[\u7269\u4f53\u691c\u51fa\uff08detectMultiScale\uff09\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u308b\uff08minNeighbors\u7de8\uff09](http://workpiles.com/2015/04/opencv-detectmultiscale-minneighbors/)\n[\u7269\u4f53\u691c\u51fa\uff08detectMultiScale\uff09\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u8a66\u3057\u3066\u307f\u308b\uff08scaleFactor\u7de8\uff09](http://workpiles.com/2015/04/opencv-detectmultiscale-scalefactor/)\n\n#\u4e0a\u8a182\u3064\u306e\u624b\u6cd5\u3092\u4f7f\u3063\u3066\u307f\u305f\u5927\u96d1\u628a\u306a\u5370\u8c61\n###dlib\n+ \u691c\u51fa\u7cbe\u5ea6\u306f\u304b\u306a\u308a\u9ad8\u3044\u3002\u7279\u306b\u975e\u9854\u9818\u57df\uff08\u9854\u306e\u5199\u3063\u3066\u3044\u306a\u3044\u9818\u57df\uff09\u3092\u9854\u9818\u57df\u3068\u8aa4\u8a8d\u8b58\u3059\u308b\u3053\u3068\u306f\u6b86\u3069\u7121\u3044\u3002\n+ \u6b63\u9762\u9854\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u3084\u3084\u6a2a\u3084\u4e0a\u4e0b\u306b\u9854\u304c\u50be\u3044\u305f\u753b\u50cf\u306b\u3082\u305d\u3053\u305d\u3053\u30ed\u30d0\u30b9\u30c8\u3067\u691c\u51fa\u53ef\u80fd\u3042\u308b\u3002\n\n###OpenCV\n+ \u51e6\u7406\u901f\u5ea6\u306fdlib\u3088\u308a\u512a\u308c\u3066\u308b\u3002\n+ `detectMultiScale`\u30e1\u30bd\u30c3\u30c9\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8a2d\u5b9a\u306b\u3088\u3063\u3066\u691c\u51fa\u7cbe\u5ea6\u304c\u5927\u304d\u304f\u5909\u52d5\u3059\u308b\u3002\n+ \u975e\u9854\u9818\u57df\u3092\u9854\u9818\u57df\u3068\u8aa4\u8a8d\u8b58\u3059\u308b\u30b1\u30fc\u30b9\u304c\u3084\u3084\u76ee\u7acb\u3064\u3002\n+ \u6b63\u9762\u4ee5\u5916\u3092\u5411\u3044\u305f\u9854\u306b\u306f\u691c\u51fa\u7cbe\u5ea6\u4f4e\u3044\uff08\u6a2a\u9854\u7528\u306e\u8b58\u5225\u5668\u304c\u5fc5\u8981\uff09\n\n\u3000\n\u4ee5\u4e0a\u7c21\u5358\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\u5019\u88dc\u753b\u50cf\u3088\u308a\u9854\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u624b\u6cd5\u306b\u3064\u3044\u3066\u306e\u8aac\u660e\u3067\u3057\u305f\u3002\n", "tags": ["\u6a5f\u68b0\u5b66\u7fd2", "\u753b\u50cf\u51e6\u7406", "Python", "OpenCV", "dlib"]}