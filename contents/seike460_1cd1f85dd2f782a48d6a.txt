{"tags": ["Python", "chalice", "AWS", "APIGateway", "lambda"], "context": "Python Advent Calendar 2016\u306e5\u65e5\u76ee\u53ca\u3073\nFusic Advent Calendar 2016\u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u306f\u3058\u3081\u307e\u3057\u3066\u3001seike460\u3068\u7533\u3057\u307e\u3059\u3002\n\u666e\u6bb5\u306f\u4e3b\u306bPHP\u3068\u30b5\u30fc\u30d0\u30fc\u89e6\u3063\u3066\u3044\u307e\u3059\u3002\n\u3075\u3068\u6d41\u884c\u308a\u306e\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u305f\u3044\uff01\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\n\u50d5\u304c\u61c7\u610f\u306b\u4f7f\u7528\u3057\u3066\u3044\u308bAWS\u3067\u306f\u3001PHP\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u51fa\u6765\u306a\u3044\u306e\u304c\u73fe\u72b6\u3067\u3059\u3002\n(\u6b63\u78ba\u306b\u306f\u9811\u5f35\u308c\u3070\u51fa\u6765\u307e\u3059\u304c\u3001\u305d\u306e\u8a71\u306f\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002)\n\u51fa\u6765\u306a\u3044\u3082\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u3088\u3046\u3068\u601d\u3044\u305f\u3061\u3001\n\u6700\u8fd1\u9b45\u529b\u3092\u611f\u3058\u3066\u3044\u308bPython\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\u4f55\u3082\u4f7f\u7528\u305b\u305a\u306bLambda\u3068APIGateway\u306e\u8a2d\u5b9a\u3092\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n\u9762\u5012\u81ed\u3059\u304e\u3066\u6c17\u304c\u72c2\u3044\u305d\u3046\u306b\u306a\u308b\u306e\u3067 \u52b9\u7387\u304c\u60aa\u304f\u3001\u5b9f\u904b\u7528\u306b\u8010\u3048\u3089\u308c\u306a\u3044\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u5b89\u5fc3\u306eAmazon\u516c\u5f0f Python \u30e9\u30a4\u30d6\u30e9\u30ea\u300cchalice\u300d\u3092\u9078\u629e\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\nawslabs/chalice\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u6301\u3063\u3066\u3044\u308b\u306a\u3089\u3001Quickstart\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u306710\u5206\u304b\u304b\u3089\u305a\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9Hello World\u51fa\u6765\u307e\u3059\u3002\n\u3042\u3068\u4f55\u3068\u8a00\u3063\u3066\u3082\u53a8\u4e8c\u5fc3\u3092\u523a\u6fc0\u3059\u308b\u540d\u524d\u304c\u6700\u9ad8\u306b\u826f\u3044\u3001\u8056\u676f\u3067\u3059\u3088!\u8056\u676f!\n\u65e2\u306bREADME\u3067\u5c0e\u5165\u65b9\u6cd5\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u5c0e\u5165\u65b9\u6cd5\u306f\u7701\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b4\u30fc\u30eb\u8a2d\u5b9a\n\u4eca\u56de\u306f\u3001APIGateway\u306bJson\u3092\u9001\u4fe1\u3057\u3066\u3001S3\u306bJson\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3092\u30b4\u30fc\u30eb\u3068\u3057\u307e\u3057\u305f\u3002\n\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3059\u308bAPI\u3092\u8a2d\u7f6e\u3057\u3066\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092S3\u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u4e8b\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u958b\u767a\u74b0\u5883\nOS\uff1amacOS v10.12(Sierra)\nPython:2.7.10\n\nAWS\u5074\u306e\u6e96\u5099\n\u307e\u305a\u3001chalice\u7528\u306eIAM\u30ed\u30fc\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u7279\u306b\u6a29\u9650\u306b\u62d8\u3089\u305a\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3072\u3068\u307e\u305a\u30a8\u30a4\u30e4\u3063\u3066\u6a29\u9650\u632f\u308a\u307e\u3059\u3002\n\u203b\u5b9f\u969b\u306f\u8003\u3048\u3066\u8a2d\u5b9a\u3059\u3079\u304d\u3067\u3059!\u81ea\u5df1\u8cac\u4efb!!\n\nAWSLambdaFullAccess\nIAMFullAccess \nAmazonS3FullAccess\nAmazonAPIGatewayAdministrator\n\n\u2193\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u305d\u306e\u5f8c\u3001\u958b\u767a\u74b0\u5883\u306bcredentials\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n~/.aws/config\n[default]\naws_access_key_id=\u3010\u898b\u305b\u3089\u308c\u306a\u3044\u3088\uff01\uff01\uff01\u3011\naws_secret_access_key=\u3010\u898b\u305b\u3089\u308c\u306a\u3044\u3088\uff01\uff01\uff01\u3011\nregion=ap-northeast-1 \u2190Tokyo\u30ea\u30fc\u30b8\u30e7\u30f3\n\n\nHello world\u51fa\u6765\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\u3042\u3068AWS\u89e6\u308b\u306e\u3067\u3001boto3\u3082\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u306e\u6642virtualenvs\u3092\u4f7f\u3046\u5834\u5408\u306fchalice\u3092\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\nboto3\n(chalice) $ pip install boto3\n\n\n\n\u53c2\u8003\n\n\nboto3\nvirtualenvs\n\n\n\n\nLet's hello world\nsave2S3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nnew-project\n(chalice) $ chalice new-project save2S3\n\n\n\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\nsave2S3\nsave2S3\n\u251c\u2500\u2500 .chalice\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 config.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 app.py\n\u2514\u2500\u2500 requirements.txt\n\n\n\u3053\u306eapp.py\u3092\u7de8\u96c6\u3057\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3059\u308b\u308f\u3051\u3067\u3059\u3002\napp.py\u3092\u958b\u3044\u3066\u898b\u307e\u3057\u3087\u3046\n\napp.py\n\nfrom chalice import Chalice\n\napp = Chalice(app_name='save2S3')\n\n\n@app.route('/')\ndef index():\n    return {'hello': 'world'}\n\n\n# The view function above will return {\"hello\": \"world\"}\n# whenver you make an HTTP GET request to '/'.\n#\n# Here are a few more examples:\n#\n# @app.route('/hello/{name}')\n# def hello_name(name):\n#    # '/hello/james' -> {\"hello\": \"james\"}\n#    return {'hello': name}\n#\n# @app.route('/users', methods=['POST'])\n# def create_user():\n#     # This is the JSON body the user sent in their POST request.\n#     user_as_json = app.json_body\n#     # Suppose we had some 'db' object that we used to\n#     # read/write from our database.\n#     # user_id = db.create_user(user_as_json)\n#     return {'user_id': user_id}\n#\n# See the README documentation for more examples.\n#\n\n\n\u65e2\u306bhello world\u51fa\u6765\u305d\u3046\u306a\u96f0\u56f2\u6c17\u304c\u51c4\u3044\u3067\u3059\u306d\u3002\nchalice\u304chello world\u3057\u305f\u305d\u3046\u306a\u306e\u3067\u3001\u65e9\u901fAWS\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3057\u3087\u3046\u3002\n\ndeploy\n(chalice) $ chalice deploy\n\nInitial creation of lambda function.\nCreating role\nCreating deployment package.\nLambda deploy done.\nInitiating first time deployment...\nDeploying to: dev\nhttps://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/\n\n\n\u306a\u3093\u3068\u3082\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002\u521d\u671f\u8a2d\u5b9a\u3060\u3068/dev\u3068\u3044\u3046Path\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\napi\u3068\u3044\u3046Path\u306b\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067OK\u3067\u3059\u3002\n\ndeploy_to_api\n(chalice) $ chalice deploy api\n\n\n\u65e9\u901fURL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\ndeploy\n(chalice) $ curl https://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/\n{\"hello\": \"world\"}\n\n\n\u3053\u308c\u3067\u3042\u306a\u305f\u306echalice\u30c7\u30d3\u30e5\u30fc\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\u96a3\u306e\u4eba\u306b\u300c\u4ffa\u3001\u8056\u676f\u4f7f\u3048\u308b\u305c\u300d\u3068\u81ea\u6162\u3057\u307e\u3057\u3087\u3046\u3002\n\u7d50\u679c\u30ad\u30e2\u304c\u3089\u308c\u3066\u3082\u50d5\u306e\u305b\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u3002\u81ea\u5df1\u8cac\u4efb\n\n\u30b4\u30fc\u30eb\u306b\u8fbf\u308a\u7740\u304f\u30b3\u30fc\u30c9\n\u3053\u307e\u3051\u3048\u3053\u3068\u306f\u3044\u3044\u3093\u3060\u3088\uff01\u3063\u3066\u611f\u3058\u3067\u3001\u3061\u3083\u3063\u3061\u3083\u304b\u30b3\u30fc\u30c9\u66f8\u3044\u3061\u3083\u3044\u307e\u3059\u3002\n\napp.py\nfrom chalice import Chalice\nimport boto3\nimport json\n\n# for S3\nclientS3 = boto3.client('s3')\nyourBucketPath = '\u3010\u3053\u3053\u306b\u3042\u306a\u305f\u306e\u30d0\u30b1\u30c3\u30c8\u3092\u66f8\u304f\u3093\u3060\uff01\u3011'\n\napp = Chalice(app_name='save2S3')\n\n@app.route('/save', methods=['POST'], content_types=['application/json'])\ndef save():\n  saveJson = app.current_request.json_body\n  if (validateKey(saveJson) == False):\n    return {'error':'please input key'}\n  SavePath = saveJson['key'] + '.json'\n  clientS3.put_object(Bucket=yourBucketPath, Key=SavePath, Body=json.dumps(saveJson, ensure_ascii=False))\n  return {'save':saveJson['key']}\n\ndef validateKey(saveJson):\n  if (saveJson.has_key(\"key\") == False):\n      return False\n  return True\n\n\n\u6700\u4f4e\u9650\u306eKeyValidate\u3060\u3051\u3057\u3066\u4fdd\u5b58\u3057\u3061\u3083\u3044\u307e\u3059\u3002\n\u3053\u3044\u3064\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3082\u3001\u3061\u3083\u3063\u3061\u3083\u304b\u66f8\u304d\u307e\u3059\u3002\n\u203b\u3053\u3053\u306fpython3\u3067\u66f8\u304d\u307e\u3057\u305f\u3002 (lambda\u306epython3\u5bfe\u5fdc\u306f\u3088\u3000)\n\npostJson.py\nimport urllib.request\nimport json\n\nurl = \"https://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/save\"\nmethod = \"POST\"\nheaders = {\"Content-Type\" : \"application/json\"}\nobj = {\"key\" : \"seike460\", \"val\" : \"\u30aa\u30ec\u3001\u8056\u676f\u4f7f\u3048\u308b\u305c\"}\njson_data = json.dumps(obj).encode(\"utf-8\")\n\nrequest = urllib.request.Request(\n  url,\n  data=json_data,\n  method=method,\n  headers=headers\n)\nwith urllib.request.urlopen(request) as response:\n  response_body = response.read().decode(\"utf-8\")\nprint(response_body)\n\n\n\u3053\u3044\u3064\u3092\u5b9f\u884c\u3059\u308b\u3068 \u203bpython3\u30b3\u30de\u30f3\u30c9\u3067\u3059!!\n\ndeploy\n$ python3 postJson.py\n{\"save\": \"seike460\"}\n\n\nS3\u306b\u3082\u30d0\u30c3\u30c1\u30ea\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u3001\u3082\u3046\u3042\u306a\u305f\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30e9\u30fc\u3067\u3059\u3002\n\u601d\u3046\u5b58\u5206\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u307e\u3057\u3087\u3046\u3002\n\u5f0a\u793e\u3067\u3053\u306e\u6bb5\u968e\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u51fa\u6765\u307e\u3059\u3076\u308b\u3068\u3001\n\u5f0a\u793e\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u8ecd\u66f9\u306b\u3053\u3063\u3066\u308a\u7406\u8ad6\u7684\u306b\u8aac\u304d\u4f0f\u305b\u3089\u308c\u305d\u3046\u3067\u3059\u306e\u3067\u3001\u50d5\u306f\u3084\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\u3068\u6240\u611f\n\u4eca\u56de\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3092\u3059\u308b\u76ee\u7684\u3067\u3001PHPer\u304cPython\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u306e\u4e2d\u3067\u3001\n\nPython\u66f8\u304d\u3084\u3059\u3044\uff01\n\u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u6d41\u884c\u3063\u3066\u308b\u3057\u697d\u3057\u305d\u3046\uff01\n\u3068\u308a\u3042\u3048\u305a\u57fa\u672c\u3069\u306eOS\u3082\u6700\u521d\u304b\u3089Python\u5165\u3063\u3066\u308b\u304b\u3089\u3044\u3056\u3068\u3044\u3046\u6642\u306b\u4fbf\u5229\u305d\u3046(\u307b\u307c2.7\u3060\u3051\u3069)\n\n\u3068\u611f\u3058\u3066\u304a\u308a\u3001\u4eca\u56de\u306fAWS\u306b\u5bc4\u3063\u305f\u8a71\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\n\u3053\u308c\u304b\u3089\u3082Python\u30cd\u30bf\u3067\u4f55\u304b\u66f8\u3044\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\nDjango\u3092\u89e6\u3063\u3066\u307f\u305f\u3044\u306a\n[Python Advent Calendar 2016](http://qiita.com/advent-calendar/2016/python_python)\u306e5\u65e5\u76ee\u53ca\u3073\n[Fusic Advent Calendar 2016](http://qiita.com/advent-calendar/2016/fusic)\u306e5\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u307e\u3057\u3066\u3001seike460\u3068\u7533\u3057\u307e\u3059\u3002\n\u666e\u6bb5\u306f\u4e3b\u306bPHP\u3068\u30b5\u30fc\u30d0\u30fc\u89e6\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3075\u3068\u6d41\u884c\u308a\u306e\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u305f\u3044\uff01\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001\n\u50d5\u304c\u61c7\u610f\u306b\u4f7f\u7528\u3057\u3066\u3044\u308bAWS\u3067\u306f\u3001PHP\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u51fa\u6765\u306a\u3044\u306e\u304c\u73fe\u72b6\u3067\u3059\u3002\n(\u6b63\u78ba\u306b\u306f\u9811\u5f35\u308c\u3070\u51fa\u6765\u307e\u3059\u304c\u3001\u305d\u306e\u8a71\u306f\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002)\n\n\u51fa\u6765\u306a\u3044\u3082\u306e\u306f\u3057\u3087\u3046\u304c\u306a\u3044\u306e\u3067\u3001\u4ed6\u306e\u8a00\u8a9e\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u3088\u3046\u3068\u601d\u3044\u305f\u3061\u3001\n\u6700\u8fd1\u9b45\u529b\u3092\u611f\u3058\u3066\u3044\u308bPython\u3092\u4f7f\u3063\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3059\u308b\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u4f55\u3082\u4f7f\u7528\u305b\u305a\u306bLambda\u3068APIGateway\u306e\u8a2d\u5b9a\u3092\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\n~~\u9762\u5012\u81ed\u3059\u304e\u3066\u6c17\u304c\u72c2\u3044\u305d\u3046\u306b\u306a\u308b\u306e\u3067~~ \u52b9\u7387\u304c\u60aa\u304f\u3001\u5b9f\u904b\u7528\u306b\u8010\u3048\u3089\u308c\u306a\u3044\u5370\u8c61\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u5b89\u5fc3\u306eAmazon\u516c\u5f0f Python \u30e9\u30a4\u30d6\u30e9\u30ea\u300cchalice\u300d\u3092\u9078\u629e\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n- [awslabs/chalice](https://github.com/awslabs/chalice)\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u6301\u3063\u3066\u3044\u308b\u306a\u3089\u3001Quickstart\u30bb\u30af\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u306710\u5206\u304b\u304b\u3089\u305a\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9Hello World\u51fa\u6765\u307e\u3059\u3002\n~~\u3042\u3068\u4f55\u3068\u8a00\u3063\u3066\u3082\u53a8\u4e8c\u5fc3\u3092\u523a\u6fc0\u3059\u308b\u540d\u524d\u304c\u6700\u9ad8\u306b\u826f\u3044\u3001\u8056\u676f\u3067\u3059\u3088!\u8056\u676f!~~\n\u65e2\u306bREADME\u3067\u5c0e\u5165\u65b9\u6cd5\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u5c0e\u5165\u65b9\u6cd5\u306f\u7701\u304d\u307e\u3059\u3002\n\n## \u4eca\u56de\u306e\u30b4\u30fc\u30eb\u8a2d\u5b9a\n\n\u4eca\u56de\u306f\u3001APIGateway\u306bJson\u3092\u9001\u4fe1\u3057\u3066\u3001S3\u306bJson\u3092\u4fdd\u5b58\u3059\u308b\u3053\u3068\u3092\u30b4\u30fc\u30eb\u3068\u3057\u307e\u3057\u305f\u3002\n\u30c7\u30fc\u30bf\u3092\u53d7\u4fe1\u3059\u308bAPI\u3092\u8a2d\u7f6e\u3057\u3066\u3001\u305d\u306e\u30c7\u30fc\u30bf\u3092S3\u7d4c\u7531\u3067\u5229\u7528\u3059\u308b\u4e8b\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n<img width=\"608\" alt=\"qiita-2016-12-05_1.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/120576/d63aea70-e0b3-49d1-949f-ee3dc3b565ec.png\">\n\n## \u958b\u767a\u74b0\u5883\nOS\uff1amacOS v10.12(Sierra)\nPython:2.7.10\n\n## AWS\u5074\u306e\u6e96\u5099\n\n\u307e\u305a\u3001chalice\u7528\u306eIAM\u30ed\u30fc\u30eb\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u7279\u306b\u6a29\u9650\u306b\u62d8\u3089\u305a\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u3072\u3068\u307e\u305a\u30a8\u30a4\u30e4\u3063\u3066\u6a29\u9650\u632f\u308a\u307e\u3059\u3002\n**\u203b\u5b9f\u969b\u306f\u8003\u3048\u3066\u8a2d\u5b9a\u3059\u3079\u304d\u3067\u3059!\u81ea\u5df1\u8cac\u4efb!!**\n\n- AWSLambdaFullAccess\n- IAMFullAccess \n- AmazonS3FullAccess\n- AmazonAPIGatewayAdministrator\n\n\u2193\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n<img width=\"709\" alt=\"qiita-2016-12-05_2.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/120576/c8bf6a05-12f4-3f1f-03f9-6d5daa486e04.png\">\n\n\u305d\u306e\u5f8c\u3001\u958b\u767a\u74b0\u5883\u306bcredentials\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```vim:~/.aws/config\n[default]\naws_access_key_id=\u3010\u898b\u305b\u3089\u308c\u306a\u3044\u3088\uff01\uff01\uff01\u3011\naws_secret_access_key=\u3010\u898b\u305b\u3089\u308c\u306a\u3044\u3088\uff01\uff01\uff01\u3011\nregion=ap-northeast-1 \u2190Tokyo\u30ea\u30fc\u30b8\u30e7\u30f3\n```\n\nHello world\u51fa\u6765\u308b\u6e96\u5099\u304c\u6574\u3044\u307e\u3057\u305f\u3002\n\n\u3042\u3068AWS\u89e6\u308b\u306e\u3067\u3001boto3\u3082\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\u3053\u306e\u6642virtualenvs\u3092\u4f7f\u3046\u5834\u5408\u306fchalice\u3092\u4f7f\u7528\u3059\u308b\u74b0\u5883\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3057\u3087\u3046\u3002\n\n```zsh:boto3\n(chalice) $ pip install boto3\n```\n\n- \u53c2\u8003\n    - [boto3](https://boto3.readthedocs.io/en/latest/)\n    - [virtualenvs](https://virtualenv.pypa.io/en/stable/)\n\n## Let's hello world\nsave2S3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```zsh:new-project\n(chalice) $ chalice new-project save2S3\n```\n\n\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n```zsh:save2S3\nsave2S3\n\u251c\u2500\u2500 .chalice\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 config.json\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 app.py\n\u2514\u2500\u2500 requirements.txt\n```\n\n\u3053\u306eapp.py\u3092\u7de8\u96c6\u3057\u3066\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3059\u308b\u308f\u3051\u3067\u3059\u3002\napp.py\u3092\u958b\u3044\u3066\u898b\u307e\u3057\u3087\u3046\n\n```py:app.py\n\nfrom chalice import Chalice\n\napp = Chalice(app_name='save2S3')\n\n\n@app.route('/')\ndef index():\n    return {'hello': 'world'}\n\n\n# The view function above will return {\"hello\": \"world\"}\n# whenver you make an HTTP GET request to '/'.\n#\n# Here are a few more examples:\n#\n# @app.route('/hello/{name}')\n# def hello_name(name):\n#    # '/hello/james' -> {\"hello\": \"james\"}\n#    return {'hello': name}\n#\n# @app.route('/users', methods=['POST'])\n# def create_user():\n#     # This is the JSON body the user sent in their POST request.\n#     user_as_json = app.json_body\n#     # Suppose we had some 'db' object that we used to\n#     # read/write from our database.\n#     # user_id = db.create_user(user_as_json)\n#     return {'user_id': user_id}\n#\n# See the README documentation for more examples.\n#\n```\n\n\u65e2\u306bhello world\u51fa\u6765\u305d\u3046\u306a\u96f0\u56f2\u6c17\u304c\u51c4\u3044\u3067\u3059\u306d\u3002\nchalice\u304chello world\u3057\u305f\u305d\u3046\u306a\u306e\u3067\u3001\u65e9\u901fAWS\u4e0a\u306b\u30c7\u30d7\u30ed\u30a4\u3057\u307e\u3057\u3087\u3046\u3002\n\n```zsh:deploy\n(chalice) $ chalice deploy\n\nInitial creation of lambda function.\nCreating role\nCreating deployment package.\nLambda deploy done.\nInitiating first time deployment...\nDeploying to: dev\nhttps://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/\n```\n\n\u306a\u3093\u3068\u3082\u7c21\u5358\u306b\u30c7\u30d7\u30ed\u30a4\u3055\u308c\u307e\u3057\u305f\u3002\u521d\u671f\u8a2d\u5b9a\u3060\u3068/dev\u3068\u3044\u3046Path\u306b\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\napi\u3068\u3044\u3046Path\u306b\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067OK\u3067\u3059\u3002\n\n```zsh:deploy_to_api\n(chalice) $ chalice deploy api\n```\n\n\u65e9\u901fURL\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3059\u3002\n\n```zsh:deploy\n(chalice) $ curl https://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/\n{\"hello\": \"world\"}\n```\n\n\u3053\u308c\u3067\u3042\u306a\u305f\u306echalice\u30c7\u30d3\u30e5\u30fc\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\u96a3\u306e\u4eba\u306b\u300c\u4ffa\u3001\u8056\u676f\u4f7f\u3048\u308b\u305c\u300d\u3068\u81ea\u6162\u3057\u307e\u3057\u3087\u3046\u3002\n**\u7d50\u679c\u30ad\u30e2\u304c\u3089\u308c\u3066\u3082\u50d5\u306e\u305b\u3044\u3058\u3083\u306a\u3044\u3067\u3059\u3002\u81ea\u5df1\u8cac\u4efb**\n\n## \u30b4\u30fc\u30eb\u306b\u8fbf\u308a\u7740\u304f\u30b3\u30fc\u30c9\n\u3053\u307e\u3051\u3048\u3053\u3068\u306f\u3044\u3044\u3093\u3060\u3088\uff01\u3063\u3066\u611f\u3058\u3067\u3001\u3061\u3083\u3063\u3061\u3083\u304b\u30b3\u30fc\u30c9\u66f8\u3044\u3061\u3083\u3044\u307e\u3059\u3002\n\n```py:app.py\nfrom chalice import Chalice\nimport boto3\nimport json\n\n# for S3\nclientS3 = boto3.client('s3')\nyourBucketPath = '\u3010\u3053\u3053\u306b\u3042\u306a\u305f\u306e\u30d0\u30b1\u30c3\u30c8\u3092\u66f8\u304f\u3093\u3060\uff01\u3011'\n\napp = Chalice(app_name='save2S3')\n\n@app.route('/save', methods=['POST'], content_types=['application/json'])\ndef save():\n  saveJson = app.current_request.json_body\n  if (validateKey(saveJson) == False):\n    return {'error':'please input key'}\n  SavePath = saveJson['key'] + '.json'\n  clientS3.put_object(Bucket=yourBucketPath, Key=SavePath, Body=json.dumps(saveJson, ensure_ascii=False))\n  return {'save':saveJson['key']}\n\ndef validateKey(saveJson):\n  if (saveJson.has_key(\"key\") == False):\n      return False\n  return True\n```\n\u6700\u4f4e\u9650\u306eKeyValidate\u3060\u3051\u3057\u3066\u4fdd\u5b58\u3057\u3061\u3083\u3044\u307e\u3059\u3002\n\n\u3053\u3044\u3064\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3082\u3001\u3061\u3083\u3063\u3061\u3083\u304b\u66f8\u304d\u307e\u3059\u3002\n**\u203b\u3053\u3053\u306fpython3\u3067\u66f8\u304d\u307e\u3057\u305f\u3002** (lambda\u306epython3\u5bfe\u5fdc\u306f\u3088\u3000)\n\n```py:postJson.py\nimport urllib.request\nimport json\n\nurl = \"https://\u3010\u3042\u306a\u305f\u56fa\u6709\u306ePath\u3011.execute-api.ap-northeast-1.amazonaws.com/dev/save\"\nmethod = \"POST\"\nheaders = {\"Content-Type\" : \"application/json\"}\nobj = {\"key\" : \"seike460\", \"val\" : \"\u30aa\u30ec\u3001\u8056\u676f\u4f7f\u3048\u308b\u305c\"}\njson_data = json.dumps(obj).encode(\"utf-8\")\n\nrequest = urllib.request.Request(\n  url,\n  data=json_data,\n  method=method,\n  headers=headers\n)\nwith urllib.request.urlopen(request) as response:\n  response_body = response.read().decode(\"utf-8\")\nprint(response_body)\n```\n\u3053\u3044\u3064\u3092\u5b9f\u884c\u3059\u308b\u3068 **\u203bpython3\u30b3\u30de\u30f3\u30c9\u3067\u3059!!**\n\n```zsh:deploy\n$ python3 postJson.py\n{\"save\": \"seike460\"}\n```\n\nS3\u306b\u3082\u30d0\u30c3\u30c1\u30ea\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u3053\u3053\u307e\u3067\u304f\u308c\u3070\u3001\u3082\u3046\u3042\u306a\u305f\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u30e9\u30fc\u3067\u3059\u3002\n\u601d\u3046\u5b58\u5206\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3057\u307e\u3057\u3087\u3046\u3002\n\u5f0a\u793e\u3067\u3053\u306e\u6bb5\u968e\u3067\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u51fa\u6765\u307e\u3059\u3076\u308b\u3068\u3001\n\u5f0a\u793e\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u8ecd\u66f9\u306b\u3053\u3063\u3066\u308a\u7406\u8ad6\u7684\u306b\u8aac\u304d\u4f0f\u305b\u3089\u308c\u305d\u3046\u3067\u3059\u306e\u3067\u3001\u50d5\u306f\u3084\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u307e\u3068\u3081\u3068\u6240\u611f\n\n\u4eca\u56de\u306f\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3092\u3059\u308b\u76ee\u7684\u3067\u3001PHPer\u304cPython\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u305d\u306e\u4e2d\u3067\u3001\n\n* Python\u66f8\u304d\u3084\u3059\u3044\uff01\n* \u6a5f\u68b0\u5b66\u7fd2\u3068\u304b\u6d41\u884c\u3063\u3066\u308b\u3057\u697d\u3057\u305d\u3046\uff01\n* \u3068\u308a\u3042\u3048\u305a\u57fa\u672c\u3069\u306eOS\u3082\u6700\u521d\u304b\u3089Python\u5165\u3063\u3066\u308b\u304b\u3089\u3044\u3056\u3068\u3044\u3046\u6642\u306b\u4fbf\u5229\u305d\u3046(\u307b\u307c2.7\u3060\u3051\u3069)\n\n\u3068\u611f\u3058\u3066\u304a\u308a\u3001\u4eca\u56de\u306fAWS\u306b\u5bc4\u3063\u305f\u8a71\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\n\u3053\u308c\u304b\u3089\u3082Python\u30cd\u30bf\u3067\u4f55\u304b\u66f8\u3044\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nDjango\u3092\u89e6\u3063\u3066\u307f\u305f\u3044\u306a\n"}