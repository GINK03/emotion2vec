{"context": "AWS SDK\u3067Route53\u306e\u4f5c\u696d\u3092\u6a2a\u7740\u3059\u308b\u30b7\u30ea\u30fc\u30ba\n\n\u300croute53domains.checkDomainAvailabilit\u300d\u3067\u30c9\u30e1\u30a4\u30f3\u304c\u8cfc\u5165\u53ef\u80fd\u304b\u78ba\u8a8d\n\u53d6\u5f97\u53ef\u80fd\u306a\u3089\u300croute53domains.registerDomain\u300d\u3067\u30c9\u30e1\u30a4\u30f3\u3092\u8cfc\u5165\n\u53d6\u5f97\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u300croute53.createHostedZone\u300d\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3060\u3051\u4f5c\u308b\n\n\u305d\u3093\u306a\u611f\u3058\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n    var domain = \"example.net\";\n    var AWS = require('aws-sdk');\n    var route53domains = new AWS.Route53Domains({\n        apiVersion: '2014-05-15',\n        accessKeyId: \"ACCESS_KEY_ID\",\n        secretAccessKey: \"SECRET_ACCESS_KEY\",\n        region: \"REGION\"\n    });\n    var params = {\n      DomainName: domain,\n    };\n    route53domains.checkDomainAvailability(params).promise().then( (data) => {\n        var response = .domain + ' is ' + data.Availability;\n        if ( data.Availability == 'AVAILABLE') {\n            console.log('Register your Domain in Route53Domains');\n            var params = {\n              AdminContact: contacts,\n              DomainName: domain,\n              DurationInYears: 1,\n              RegistrantContact: contacts,\n              TechContact: contacts,\n              AutoRenew: true,\n              PrivacyProtectAdminContact: true,\n              PrivacyProtectRegistrantContact: true,\n              PrivacyProtectTechContact: true\n            };\n            return route53domains.registerDomain(params).promise();\n        } else {\n            console.log('Create Route53 Hosted Zone');\n            var params = {\n              CallerReference: \"XXX\",\n              Name: domain,\n            };\n            var route53 = new AWS.Route53({\n                apiVersion: '2014-05-15',\n                accessKeyId: \"ACCESS_KEY_ID\",\n                secretAccessKey: \"SECRET_ACCESS_KEY\",\n                region: \"REGION\"\n            });\n            return route53.createHostedZone(params).promise();\n        }\n    }).then( (data) => {\n        console.log(data);\n    });\n\n\n\u30c9\u30e1\u30a4\u30f3\u53d6\u5f97\u3057\u305f\u5834\u5408\u306e\u623b\u308a\u5024\n{ OperationId: 'fee25dbf-04d4-44df-8861-eff2312a4c8f' }\n\n\nHostedZone\u4f5c\u3063\u305f\u5834\u5408\u306e\u623b\u308a\u5024\n{\n  Location: 'https://route53.amazonaws.com/2013-04-01/hostedzone/XXXX',\n  HostedZone: {\n    Id: '/hostedzone/XXXXXX',\n    Name: 'example.net.',\n    CallerReference: 'XXXX',\n    Config: {\n      PrivateZone: false \n    },\n    ResourceRecordSetCount: 2 \n  },\n  ChangeInfo: {\n  Id: '/change/XXXXXXXX',\n     Status: 'PENDING',\n     SubmittedAt: Tue Jun 07 2016 19:56:54 GMT+0900 (JST) \n  },\n  DelegationSet:  {\n    NameServers:  [\n      'ns-XXX.awsdns-38.co.uk',\n      'ns-XX.awsdns-01.com',\n      'ns-XXX.awsdns-05.net',\n      'ns-XXXX.awsdns-41.org' \n    ] \n  }\n}\n\n\nAWS SDK\u3067Route53\u306e\u4f5c\u696d\u3092\u6a2a\u7740\u3059\u308b\u30b7\u30ea\u30fc\u30ba\n\n- \u300croute53domains.checkDomainAvailabilit\u300d\u3067\u30c9\u30e1\u30a4\u30f3\u304c\u8cfc\u5165\u53ef\u80fd\u304b\u78ba\u8a8d\n- \u53d6\u5f97\u53ef\u80fd\u306a\u3089\u300croute53domains.registerDomain\u300d\u3067\u30c9\u30e1\u30a4\u30f3\u3092\u8cfc\u5165\n- \u53d6\u5f97\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u300croute53.createHostedZone\u300d\u3067\u30db\u30b9\u30c6\u30c3\u30c9\u30be\u30fc\u30f3\u3060\u3051\u4f5c\u308b\n\n\u305d\u3093\u306a\u611f\u3058\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n```\n\tvar domain = \"example.net\";\n\tvar AWS = require('aws-sdk');\n\tvar route53domains = new AWS.Route53Domains({\n\t\tapiVersion: '2014-05-15',\n    \taccessKeyId: \"ACCESS_KEY_ID\",\n    \tsecretAccessKey: \"SECRET_ACCESS_KEY\",\n    \tregion: \"REGION\"\n\t});\n\tvar params = {\n\t  DomainName: domain,\n\t};\n\troute53domains.checkDomainAvailability(params).promise().then( (data) => {\n\t\tvar response = .domain + ' is ' + data.Availability;\n\t\tif ( data.Availability == 'AVAILABLE') {\n\t\t\tconsole.log('Register your Domain in Route53Domains');\n\t\t\tvar params = {\n\t\t\t  AdminContact: contacts,\n\t\t\t  DomainName: domain,\n\t\t\t  DurationInYears: 1,\n\t\t\t  RegistrantContact: contacts,\n\t\t\t  TechContact: contacts,\n\t\t\t  AutoRenew: true,\n\t\t\t  PrivacyProtectAdminContact: true,\n\t\t\t  PrivacyProtectRegistrantContact: true,\n\t\t\t  PrivacyProtectTechContact: true\n\t\t\t};\n\t\t\treturn route53domains.registerDomain(params).promise();\n\t\t} else {\n\t\t\tconsole.log('Create Route53 Hosted Zone');\n\t\t\tvar params = {\n\t\t\t  CallerReference: \"XXX\",\n\t\t\t  Name: domain,\n\t\t\t};\n\t\t\tvar route53 = new AWS.Route53({\n\t\t\t\tapiVersion: '2014-05-15',\n\t\t\t\taccessKeyId: \"ACCESS_KEY_ID\",\n\t\t\t\tsecretAccessKey: \"SECRET_ACCESS_KEY\",\n\t\t\t\tregion: \"REGION\"\n\t\t\t});\n\t\t\treturn route53.createHostedZone(params).promise();\n\t\t}\n\t}).then( (data) => {\n\t\tconsole.log(data);\n\t});\n```\n\n## \u30c9\u30e1\u30a4\u30f3\u53d6\u5f97\u3057\u305f\u5834\u5408\u306e\u623b\u308a\u5024\n```\n{ OperationId: 'fee25dbf-04d4-44df-8861-eff2312a4c8f' }\n```\n\n## HostedZone\u4f5c\u3063\u305f\u5834\u5408\u306e\u623b\u308a\u5024\n```\n{\n  Location: 'https://route53.amazonaws.com/2013-04-01/hostedzone/XXXX',\n  HostedZone: {\n    Id: '/hostedzone/XXXXXX',\n    Name: 'example.net.',\n    CallerReference: 'XXXX',\n    Config: {\n      PrivateZone: false \n    },\n    ResourceRecordSetCount: 2 \n  },\n  ChangeInfo: {\n  Id: '/change/XXXXXXXX',\n     Status: 'PENDING',\n     SubmittedAt: Tue Jun 07 2016 19:56:54 GMT+0900 (JST) \n  },\n  DelegationSet:  {\n    NameServers:  [\n      'ns-XXX.awsdns-38.co.uk',\n      'ns-XX.awsdns-01.com',\n      'ns-XXX.awsdns-05.net',\n      'ns-XXXX.awsdns-41.org' \n    ] \n  }\n}\n```\n\n", "tags": ["route53", "route53domains", "JavaScript", "aws-sdk", "AWS"]}