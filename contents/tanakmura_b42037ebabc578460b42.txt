{"context": " More than 1 year has passed since last update.src1, src2 \u306e 512bit \u5185\u306e 128bit \u306b\u542b\u307e\u308c\u308b32bit\u50244\u500b\u3092\u305d\u308c\u305e\u308c\u307e\u305c\u307e\u305c\u3057\u3066\u3001src1 \u3092\u6df7\u305c\u305f\u7d50\u679c\u3068\u3001src2 \u3092\u6df7\u305c\u305f\u7d50\u679c\u3092\u3042\u308f\u305b\u307e\u3059\u3002x86\u306e\u4f1d\u7d71\u306b\u5f93\u3044\u3001128bit \u5883\u754c\u306f\u8d85\u3048\u3089\u308c\u307e\u305b\u3093\u3002\n_mm512_shuffle_epi32 \u3068 _mm512_shuffle_ps \u306f\u4f3c\u305f\u6319\u52d5\u3092\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u3042\u3093\u307e\u308a\u4f3c\u3066\u306a\u3044\u3067\u3059\u3002\u304a\u3044AVX512\u30ad\u30e2\u3044\u305e\u3001\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001SSE2\u304b\u3089\u306e\u4f1d\u7d71\u3067\u3057\u305f\u3002\u554f\u984c\u7121\u3044\u3067\u3059\u306d\u3002\n#include <immintrin.h>\n#include <stdio.h>\n\nfloat in0[16] = {100,\n                 101,\n                 102,\n                 103,\n                 104,\n                 105,\n                 106,\n                 107,\n                 108,\n                 109,\n                 110,\n                 111,\n                 112,\n                 113,\n                 114,\n                 115};\n\nfloat in1[16] = {200,\n                 201,\n                 202,\n                 203,\n                 204,\n                 205,\n                 206,\n                 207,\n                 208,\n                 209,\n                 210,\n                 211,\n                 212,\n                 213,\n                 214,\n                 215};\n\nfloat out[16];\n\nstatic inline __attribute__((always_inline)) void\ntest(const int imm)\n{\n    __m512 v0 = _mm512_loadu_ps(in0);\n    __m512 v1 = _mm512_loadu_ps(in1);\n\n    __m512 v = _mm512_shuffle_ps(v0, v1, imm);\n    int i;\n\n    _mm512_storeu_ps(out, v);\n\n    for (i=0; i<16; i++) {\n        printf(\"imm=%d%d%d%d, out[%d] = %f\\n\",\n               (imm>>6)&0x3,\n               (imm>>4)&0x3,\n               (imm>>2)&0x3,\n               (imm>>0)&0x3,\n               i,\n               out[i]);\n    }\n}\n\nint\nmain()\n{\n    test(_MM_SHUFFLE(3,2,1,0));\n\n    test(_MM_SHUFFLE(2,2,0,0));\n\n    test(_MM_SHUFFLE(0,0,0,0));\n}\n\nimm=3210, out[0] = 100.000000\nimm=3210, out[1] = 101.000000\nimm=3210, out[2] = 202.000000\nimm=3210, out[3] = 203.000000\nimm=3210, out[4] = 104.000000\nimm=3210, out[5] = 105.000000\nimm=3210, out[6] = 206.000000\nimm=3210, out[7] = 207.000000\nimm=3210, out[8] = 108.000000\nimm=3210, out[9] = 109.000000\nimm=3210, out[10] = 210.000000\nimm=3210, out[11] = 211.000000\nimm=3210, out[12] = 112.000000\nimm=3210, out[13] = 113.000000\nimm=3210, out[14] = 214.000000\nimm=3210, out[15] = 215.000000\nimm=2200, out[0] = 100.000000\nimm=2200, out[1] = 100.000000\nimm=2200, out[2] = 202.000000\nimm=2200, out[3] = 202.000000\nimm=2200, out[4] = 104.000000\nimm=2200, out[5] = 104.000000\nimm=2200, out[6] = 206.000000\nimm=2200, out[7] = 206.000000\nimm=2200, out[8] = 108.000000\nimm=2200, out[9] = 108.000000\nimm=2200, out[10] = 210.000000\nimm=2200, out[11] = 210.000000\nimm=2200, out[12] = 112.000000\nimm=2200, out[13] = 112.000000\nimm=2200, out[14] = 214.000000\nimm=2200, out[15] = 214.000000\nimm=0000, out[0] = 100.000000\nimm=0000, out[1] = 100.000000\nimm=0000, out[2] = 200.000000\nimm=0000, out[3] = 200.000000\nimm=0000, out[4] = 104.000000\nimm=0000, out[5] = 104.000000\nimm=0000, out[6] = 204.000000\nimm=0000, out[7] = 204.000000\nimm=0000, out[8] = 108.000000\nimm=0000, out[9] = 108.000000\nimm=0000, out[10] = 208.000000\nimm=0000, out[11] = 208.000000\nimm=0000, out[12] = 112.000000\nimm=0000, out[13] = 112.000000\nimm=0000, out[14] = 212.000000\nimm=0000, out[15] = 212.000000\n\n\u305d\u308d\u305d\u308d\u8aad\u3093\u3067\u308b\u4eba\u9054\u3082\u98fd\u304d\u3066\u304d\u305f\u3068\u601d\u3046\u306e\u3067\u3001\u6b21\u56de\u3001@tanakmura \u304c\u3064\u3044\u306b\u767b\u5834\u3057\u305f\u6700\u5f37\u306eshuffle\u3067\u3042\u308b vpermt2b \u306b\u3064\u3044\u3066\u66f8\u3044\u3066shuffle\u3092\u7d42\u308f\u3089\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nsrc1, src2 \u306e 512bit \u5185\u306e 128bit \u306b\u542b\u307e\u308c\u308b32bit\u50244\u500b\u3092\u305d\u308c\u305e\u308c\u307e\u305c\u307e\u305c\u3057\u3066\u3001src1 \u3092\u6df7\u305c\u305f\u7d50\u679c\u3068\u3001src2 \u3092\u6df7\u305c\u305f\u7d50\u679c\u3092\u3042\u308f\u305b\u307e\u3059\u3002x86\u306e\u4f1d\u7d71\u306b\u5f93\u3044\u3001128bit \u5883\u754c\u306f\u8d85\u3048\u3089\u308c\u307e\u305b\u3093\u3002\n\n\n_mm512_shuffle_epi32 \u3068 _mm512_shuffle_ps \u306f\u4f3c\u305f\u6319\u52d5\u3092\u3057\u305d\u3046\u3067\u3059\u304c\u3001\u3042\u3093\u307e\u308a\u4f3c\u3066\u306a\u3044\u3067\u3059\u3002\u304a\u3044AVX512\u30ad\u30e2\u3044\u305e\u3001\u3068\u601d\u3063\u305f\u306e\u3067\u3059\u304c\u3001SSE2\u304b\u3089\u306e\u4f1d\u7d71\u3067\u3057\u305f\u3002\u554f\u984c\u7121\u3044\u3067\u3059\u306d\u3002\n\n\n```cpp\n#include <immintrin.h>\n#include <stdio.h>\n\nfloat in0[16] = {100,\n                 101,\n                 102,\n                 103,\n                 104,\n                 105,\n                 106,\n                 107,\n                 108,\n                 109,\n                 110,\n                 111,\n                 112,\n                 113,\n                 114,\n                 115};\n\nfloat in1[16] = {200,\n                 201,\n                 202,\n                 203,\n                 204,\n                 205,\n                 206,\n                 207,\n                 208,\n                 209,\n                 210,\n                 211,\n                 212,\n                 213,\n                 214,\n                 215};\n\nfloat out[16];\n\nstatic inline __attribute__((always_inline)) void\ntest(const int imm)\n{\n    __m512 v0 = _mm512_loadu_ps(in0);\n    __m512 v1 = _mm512_loadu_ps(in1);\n\n    __m512 v = _mm512_shuffle_ps(v0, v1, imm);\n    int i;\n\n    _mm512_storeu_ps(out, v);\n\n    for (i=0; i<16; i++) {\n        printf(\"imm=%d%d%d%d, out[%d] = %f\\n\",\n               (imm>>6)&0x3,\n               (imm>>4)&0x3,\n               (imm>>2)&0x3,\n               (imm>>0)&0x3,\n               i,\n               out[i]);\n    }\n}\n\nint\nmain()\n{\n    test(_MM_SHUFFLE(3,2,1,0));\n\n    test(_MM_SHUFFLE(2,2,0,0));\n\n    test(_MM_SHUFFLE(0,0,0,0));\n}\n```\n\n```\nimm=3210, out[0] = 100.000000\nimm=3210, out[1] = 101.000000\nimm=3210, out[2] = 202.000000\nimm=3210, out[3] = 203.000000\nimm=3210, out[4] = 104.000000\nimm=3210, out[5] = 105.000000\nimm=3210, out[6] = 206.000000\nimm=3210, out[7] = 207.000000\nimm=3210, out[8] = 108.000000\nimm=3210, out[9] = 109.000000\nimm=3210, out[10] = 210.000000\nimm=3210, out[11] = 211.000000\nimm=3210, out[12] = 112.000000\nimm=3210, out[13] = 113.000000\nimm=3210, out[14] = 214.000000\nimm=3210, out[15] = 215.000000\nimm=2200, out[0] = 100.000000\nimm=2200, out[1] = 100.000000\nimm=2200, out[2] = 202.000000\nimm=2200, out[3] = 202.000000\nimm=2200, out[4] = 104.000000\nimm=2200, out[5] = 104.000000\nimm=2200, out[6] = 206.000000\nimm=2200, out[7] = 206.000000\nimm=2200, out[8] = 108.000000\nimm=2200, out[9] = 108.000000\nimm=2200, out[10] = 210.000000\nimm=2200, out[11] = 210.000000\nimm=2200, out[12] = 112.000000\nimm=2200, out[13] = 112.000000\nimm=2200, out[14] = 214.000000\nimm=2200, out[15] = 214.000000\nimm=0000, out[0] = 100.000000\nimm=0000, out[1] = 100.000000\nimm=0000, out[2] = 200.000000\nimm=0000, out[3] = 200.000000\nimm=0000, out[4] = 104.000000\nimm=0000, out[5] = 104.000000\nimm=0000, out[6] = 204.000000\nimm=0000, out[7] = 204.000000\nimm=0000, out[8] = 108.000000\nimm=0000, out[9] = 108.000000\nimm=0000, out[10] = 208.000000\nimm=0000, out[11] = 208.000000\nimm=0000, out[12] = 112.000000\nimm=0000, out[13] = 112.000000\nimm=0000, out[14] = 212.000000\nimm=0000, out[15] = 212.000000\n```\n\n\u305d\u308d\u305d\u308d\u8aad\u3093\u3067\u308b\u4eba\u9054\u3082\u98fd\u304d\u3066\u304d\u305f\u3068\u601d\u3046\u306e\u3067\u3001\u6b21\u56de\u3001@tanakmura \u304c\u3064\u3044\u306b\u767b\u5834\u3057\u305f\u6700\u5f37\u306eshuffle\u3067\u3042\u308b vpermt2b \u306b\u3064\u3044\u3066\u66f8\u3044\u3066shuffle\u3092\u7d42\u308f\u3089\u305b\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["avx512"]}