{"context": "\u3053\u306e\u8a18\u4e8b\u306f\u682a\u5f0f\u4f1a\u793e\u30cd\u30af\u30b9\u30c8(Lifull) Advent Calendar 2016\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\u307f\u306a\u3055\u3093\u306f\u3058\u3081\u307e\u3057\u3066\u3001\u30cd\u30af\u30b9\u30c8\u306echisso\u3067\u3059\u3002\n\u306f\u3058\u3081\u3066Qiita\u306b\u6295\u7a3f\u3059\u308b\u306e\u3067\u30c9\u30ad\u30c9\u30ad\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u3093\u306a\u3053\u3068\u306f\u3055\u3066\u304a\u304d\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Golang\u3067\u81ea\u52d5\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u79c1\u306a\u308a\u306b\u6c17\u3065\u3044\u305f\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u60f3\u5b9a\u8aad\u8005\n\n\u666e\u6bb5\u3088\u304fRSpec\u3092\u66f8\u3044\u3066\u3044\u308b\nGolang\u521d\u5fc3\u8005\nInterface\u3063\u3066\u306a\u306b\uff1f\n\n\n\u76ee\u6307\u3059\u3068\u3053\u308d\n\u300c\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u72b6\u614b\u306b\u3059\u308b\u300d\n\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\u79c1\u306f\u666e\u6bb5Ruby\u3092\u66f8\u304f\u3053\u3068\u304c\u591a\u304f\u3001RSpec\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001Ruby\u3068\u540c\u3058\u611f\u899a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001RSpec\u3068\u540c\u3058\u30ce\u30ea\u3067Golang\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\uff08\u9759\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u30fbInterface\u306b\u758e\u304f\u3001\u305d\u3082\u305d\u3082\u30b3\u30fc\u30c9\u304c\u30c0\u30e1\u3059\u304e\u305f\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\uff09\n\nGolang\u3067\u306fRSpec\u306e\u3088\u3046\u306bmock(stub)\u304c\u4f5c\u308c\u306a\u3044\n\u8a00\u8a9e\u4ed5\u69d8\u3068\u3057\u3066\u5f53\u305f\u308a\u524d\u306a\u306e\u3067\u3059\u304c\u3001\u79c1\u304c\u306a\u306b\u3082\u308f\u304b\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u6642\u4ee3\u306b\u66f8\u3044\u3066\u3044\u305fGolang\u306e\u30b3\u30fc\u30c9\u3092\u3001Ruby\u306e\u30b3\u30fc\u30c9\u3068\u6bd4\u8f03\u3057\u3064\u3064\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\nsample1.go\npackage main\n\nimport(\n  \"fmt\"\n)\n\ntype Hoge struct {\n  hoge string\n}\n\nfunc main() {\n  h := Hoge{\"hogehoge\"}\n  echo(h)\n}\n\nfunc echo(h Hoge) string {\n  str := h.getHoge()\n  fmt.Println(str)\n  return str\n}\n\nfunc (h Hoge) getHoge() string {\n  return h.hoge\n}\n\n\n\nsample1.rb\nclass Main\n  def initialize(hoge)\n    @hoge_instance = hoge\n  end\n\n  def echo\n    p @hoge_instance.get_hoge\n  end\nend\n\nclass Hoge\n  def initialize(str)\n    @hoge = str\n  end\n\n  def get_hoge\n    @hoge \n  end\nend\n\n\npackage/class\u306e\u8a2d\u8a08\u3068\u304b\u3001Ruby\u3067get_hoge\u3063\u3066\u306a\u3093\u3060\u3088\u3001\u307f\u305f\u3044\u306a\u30c4\u30c3\u30b3\u30df\u306f\u4e00\u65e6\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u3001\n\u3053\u306e\u4e21\u8005\u306b\u304a\u3044\u3066\u3001echo\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u5148\u306bRSpec\u3092\u4f7f\u3046\u524d\u63d0\u3067Ruby\u304b\u3089\u3002\n\nsample1_spec.rb\n\nrequire './sample.rb'\n\ndescribe Main do\n  # \u3068\u308a\u3042\u3048\u305aecho\u306e\u30c6\u30b9\u30c8\u3060\u3051\n  describe '#echo' do\n    let(:hoge) { double('hoge') }\n    let(:str) { 'hogehoge' }\n    let(:target) { described_class.new(hoge) }\n\n    subject { target.echo }\n\n    before do\n      # Hoge\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30e2\u30c3\u30af\u3059\u308b\n      allow(hoge).to receive(:get_hoge).and_return(str)\n    end\n\n    it 'get_hoge\u306e\u5024\u3092p\u3059\u308b\u3053\u3068' do\n      expect(target).to receive(:p).with(str)\n      subject\n    end\n  end\nend\n\n\n\u3067\u306fGolang\u306f\u3068\u3044\u3046\u3068\u30fb\u30fb\u30fb\u3055\u304d\u307b\u3069\u306esample1.go\u3092\u30d9\u30fc\u30b9\u306b\u3059\u308b\u3068\u3001echo\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u66f8\u3051\u307e\u305b\u3093\u3002\nHoge\u3068\u3044\u3046struct\u3001\u305d\u3057\u3066getHoge\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001mock\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\n\u4eca\u56de\u306f\u7c21\u5358\u306e\u305f\u3081\u540c\u4e00\u30d5\u30a1\u30a4\u30eb\uff08package\uff09\u5185\u3067struct\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u79c1\u306f\u5f53\u521dpackage\u3092\u307e\u305f\u3044\u3067\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u305f\u3044\u306e\u306b\u3001\u4ed6\u306epackage\u306e\u5b9f\u88c5\u306b\u4f9d\u5b58\u3057\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002\n\u65e5\u3005\u60a9\u307f\u3001\u30cd\u30c3\u30c8\u306e\u6d77\u3092\u5f98\u5f8a\u3057\u3001\u8fbf\u308a\u7740\u3044\u305f\u7b54\u3048\u304c\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u89e3\u6c7a\u7b56\uff1a  interface\u3092\u4f7f\u3046\nGolang\u3092\u4f7f\u3044\u59cb\u3081\u305f\u6700\u521d\u306f\u3001\u306a\u3093\u3067\u3082\u7a81\u3063\u8fbc\u3081\u308b\u9b54\u6cd5\u306e\u30d3\u30f3\u306e\u3088\u3046\u306b\u601d\u3063\u3066\u3044\u305finterface{}\u3002\ninterface\u306e\u610f\u5473\u3092\u7406\u89e3\u3057\u3066\u4f7f\u3044\u3053\u306a\u3059\u3053\u3068\u3067\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u306apackage\uff08\u2252 class\uff09\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u308c\u307e\u3059\u3002\nGolang\u306einterface\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3 #golang\n\ninterface\u3092\u4f7f\u3063\u3066sample1.go\u3092\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3059\u3002\n\nsample2.go\npackage main\n\nimport(\n  \"fmt\"\n)\n\n// Hoge\u3000struct\u3092\u30e9\u30c3\u30d7\u3059\u308b\u304b\u305f\u3061\u3067interface\u3092\u5ba3\u8a00\ntype HogeInterface interface {\n  getHoge() string\n}\n\ntype Hoge struct {\n  hoge string\n}\n\nfunc main () {\n  h := Hoge{\"hogehoge\"}\n  echo(h)\n}\n\n// \u5f15\u6570\u3092struct\u3067\u306f\u306a\u304finterface\u306b\u3059\u308b\nfunc echo(h HogeInterface) string {\n  str := h.getHoge()\n  fmt.Println(str)\n  return str\n}\n\nfunc (h Hoge) getHoge() string {\n  return h.hoge\n}\n\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u5909\u5316\u3067\u3001echo\u304c\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\nsample2_test.go\npackage main\n\nimport (\n  \"testing\"\n)\n\n// Hoge\u306e\u30e2\u30c3\u30af\u3092\u5ba3\u8a00\n// spec\u306e let(:hoge) { double('hogehoge') }\u306b\u76f8\u5f53\ntype HogeMock struct {}\n\n// HogeMock\u306bgetHoge\u3092\u5b9f\u88c5\n// spec\u306e allow(hoge).to receive(:get_hoge).and_return(\"hogehoge\")\u306b\u76f8\u5f53\nfunc (h HogeMock) getHoge() string {\n  return \"hogehoge\"\n}\n\nfunc TestEcho(t *testing.T) {\n  mock := HogeMock{}\n  hoge := echo(mock)\n\n  if hoge != mock.getHoge() {\n    t.Error(\"error!\")\n  }  \n}\n\n\n\n\u3053\u306e\u3088\u3046\u306bstruct\u3092interface\u3067\u30e9\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3084package\u3068\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u305d\u306e\u201d\u632f\u308b\u821e\u3044\u201d\uff08= interface\uff09\u3060\u3051\u306b\u7559\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u3084\u3063\u305f\u4e0a\u3067\u3001\u51dd\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306b\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u306f\u304b\u3069\u308a\u307e\u3059\u3002\n\u79c1\u306f\u3084\u306f\u308aRSpec\u98a8\u306b\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u3067\u3001ginkgo\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u3063\u305f\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u65b9\u6cd5\u3092\u3082\u3046\u4e00\u3064\u3054\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u95a2\u6570\u3092\u5909\u6570\u5316\u3059\u308b\n\u79c1\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u3053\u306e\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\nGolang\u3067\u95a2\u6570\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u30c6\u30b9\u30c8\u6642\u306b\u30b9\u30bf\u30d6\u3059\u308b\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306b\u8fd1\u3044\u5f62\u3067\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\nAPI\u63a5\u7d9apackage\u3068model package\u3092\u5207\u308a\u96e2\u3059\nAPI\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u6574\u5f62\u3059\u308b\u3001model\u306b\u76f8\u5f53\u3059\u308b\u3088\u3046\u306apackage\u304c\u3042\u308b\u3068\u3057\u3066\u3001\u3053\u306emodel\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306f\u5b9f\u969b\u306bAPI\u3092\u53e9\u304d\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001API\u306eclient\u3092\u62c5\u3046package\u3092\u4f5c\u6210\u3057\u3001\u305d\u306eclient\u3092\u4f7f\u3063\u3066API\u3092\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5909\u6570\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nclient.go\npackage client\n\nimport(\n  \"encoding/json\"\n  \"io/ioutil\"\n  \"net/http\"\n)\n\ntype clientInterface interface {\n  buildUri(string, string) string\n  buildQueryString(map[string]string) string\n  getHttpClient() http.Client\n}\n\ntype client struct {\n  host    string\n  port    int\n  timeout int\n}\n\nvar c clientInterface\n\nfunc init() {\n  c = &client{\n    host:    \"www.example.com\",\n    port:    80,\n    timeout: 5,\n  }\n}\n\n// API\u304b\u3089json\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u4efb\u610f\u306estruct\u306bparse\u3059\u308b\nvar Get = func (path string, params map[string]string, target interface{}) error {\n  p := c.buildQueryString(params)\n  uri := c.buildUri(path, p)\n  httpClient := c.getHttpClient()\n\n  response, err := httpClient.Get(uri)\n  if err != nil {\n    return err\n  }\n  defer response.Body.Close()\n\n  body, err := ioutil.ReadAll(reponse.Body)\n  if err != nil {\n    return err\n  }\n\n  err = json.Unmarshall(body, &target)\n  if err != nil {\n    return err\n  }\n\n  return nil\n}\n\n// \u4ee5\u4e0b\u3001clientInterface\u306f\u3044\u3044\u611f\u3058\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n\nAPI\u63a5\u7d9apackage\u3092\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u53d6\u5f97\u30d1\u30b9\u306b\u5fdc\u3058\u305fmodel\u306e\u4f5c\u6210\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3055\u3089\u306bPost/Delete/Put\u3092api.go\u5185\u3067\u4f5c\u6210\u3059\u308b\u5834\u5408\u3082\u540c\u69d8\uff09\n\u305d\u3057\u3066\u3001Get\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e2\u30c3\u30af\u3057\u3066\u3084\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306emodel\u3067\u30c6\u30b9\u30c8\u304c\u884c\u3048\u307e\u3059\u3002\n\nmodel_test.go\n// model\u306epackage\u3067\u3001\u4e0a\u8a18client.go\u3092client\u3068\u3057\u3066import\u3059\u308b\u60f3\u5b9a\u3002\n// \u5909\u6570\u3068\u3057\u3066\u5ba3\u8a00\u3057\u305fGet\u30e1\u30bd\u30c3\u30c9\u3092\u4e0a\u66f8\u304d\u3059\u308b\nclient.Get = func(path string, params map[string]string, target interface{}) error {\n  j := `{\"id\": 1, \"name\": \"chisso\"}`\n  json.Unmarshall(j, &target)\n  return nil\n}\n\n// error\u6642\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\u3082\u81ea\u5728\nclient.Get = func(path string, params map[string]string, target interface{}) error {\n  return errors.New(\"Not Found\")\n}\n\n\n\u30a8\u30e9\u30fc\u6642\u306e\u518d\u73fe\u304c\u81ea\u5728\u306b\u306a\u308b\u6069\u6075\u306f\u5927\u304d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nclient\u3067\u8d77\u3053\u3063\u305f\u5404\u7a2eerror\u3092model\u3067\u304d\u3061\u3093\u3068\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306b\u3001\u30e2\u30c3\u30af\u3057\u305fGet\u30e1\u30bd\u30c3\u30c9\u3067\u5404\u7a2e\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u305b\u308b\u306e\u3067\u3001\u3068\u3066\u3082\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\u306a\u304a\u3001client\u81ea\u8eab\u3082interface\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001Get\u81ea\u8eab\u3082\u304d\u3061\u3093\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u3067\u3059\u3002\n\u307e\u305f\u3001\u8907\u6570\u306eAPI\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u3067\u3042\u308c\u3070\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5909\u6570\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u3046\u307e\u304f\u30e2\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u307e\u3068\u3081\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\u3002\ninterface\u3092\u304d\u3061\u3093\u3068\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba\u306b\u3068\u3063\u3066\u306f\u3068\u3066\u3082\u5f53\u305f\u308a\u524d\u306e\u8a71\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u305f\u3060\u3001\u3082\u3057\u81ea\u5206\u306e\u3088\u3046\u306bphp\u3084Ruby\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u5165\u308a\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u305f\u3051\u3069interface\u306e\u6982\u5ff5\u304c\u3046\u307e\u304f\u7406\u89e3\u3067\u304d\u3066\u306a\u304b\u3063\u305f\u4eba\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\u682a\u5f0f\u4f1a\u793e\u30cd\u30af\u30b9\u30c8(Lifull) Advent Calendar 2016\u306e3\u65e5\u76ee\u306e\u8a18\u4e8b\u306f\u79c1\u306e\u90e8\u7f72\u306e\u5148\u8f29\u3067\u3082\u3042\u308bzom\u3055\u3093\u3067\u3059\u3002\n\u3054\u671f\u5f85\u4e0b\u3055\u3044\uff01\n\u3053\u306e\u8a18\u4e8b\u306f<a href=\"http://qiita.com/advent-calendar/2016/lifull\">\u682a\u5f0f\u4f1a\u793e\u30cd\u30af\u30b9\u30c8(Lifull) Advent Calendar 2016</a>\u306e2\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u307f\u306a\u3055\u3093\u306f\u3058\u3081\u307e\u3057\u3066\u3001\u30cd\u30af\u30b9\u30c8\u306echisso\u3067\u3059\u3002\n\u306f\u3058\u3081\u3066Qiita\u306b\u6295\u7a3f\u3059\u308b\u306e\u3067\u30c9\u30ad\u30c9\u30ad\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305d\u3093\u306a\u3053\u3068\u306f\u3055\u3066\u304a\u304d\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u3001Golang\u3067\u81ea\u52d5\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u65b9\u6cd5\u306b\u3064\u3044\u3066\u3001\u79c1\u306a\u308a\u306b\u6c17\u3065\u3044\u305f\u3053\u3068\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n## \u60f3\u5b9a\u8aad\u8005\n* \u666e\u6bb5\u3088\u304fRSpec\u3092\u66f8\u3044\u3066\u3044\u308b\n* Golang\u521d\u5fc3\u8005\n* Interface\u3063\u3066\u306a\u306b\uff1f\n\n## \u76ee\u6307\u3059\u3068\u3053\u308d\n\u300c\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u72b6\u614b\u306b\u3059\u308b\u300d\n\u3053\u308c\u3060\u3051\u3067\u3059\u3002\n\n\u79c1\u306f\u666e\u6bb5Ruby\u3092\u66f8\u304f\u3053\u3068\u304c\u591a\u304f\u3001RSpec\u3092\u4f7f\u3063\u3066\u30e1\u30bd\u30c3\u30c9\u5358\u4f4d\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\u3067\u3059\u304c\u3001Ruby\u3068\u540c\u3058\u611f\u899a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001RSpec\u3068\u540c\u3058\u30ce\u30ea\u3067Golang\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\u3068\u3057\u3066\u30cf\u30de\u308a\u307e\u3057\u305f\u3002\n\uff08\u9759\u7684\u578b\u4ed8\u3051\u306e\u8a00\u8a9e\u30fbInterface\u306b\u758e\u304f\u3001\u305d\u3082\u305d\u3082\u30b3\u30fc\u30c9\u304c\u30c0\u30e1\u3059\u304e\u305f\u3053\u3068\u304c\u539f\u56e0\u3067\u3057\u305f\u3002\uff09\n\n## Golang\u3067\u306fRSpec\u306e\u3088\u3046\u306bmock(stub)\u304c\u4f5c\u308c\u306a\u3044\n\u8a00\u8a9e\u4ed5\u69d8\u3068\u3057\u3066\u5f53\u305f\u308a\u524d\u306a\u306e\u3067\u3059\u304c\u3001\u79c1\u304c\u306a\u306b\u3082\u308f\u304b\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u6642\u4ee3\u306b\u66f8\u3044\u3066\u3044\u305fGolang\u306e\u30b3\u30fc\u30c9\u3092\u3001Ruby\u306e\u30b3\u30fc\u30c9\u3068\u6bd4\u8f03\u3057\u3064\u3064\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n``` sample1.go\npackage main\n\nimport(\n  \"fmt\"\n)\n\ntype Hoge struct {\n  hoge string\n}\n\nfunc main() {\n  h := Hoge{\"hogehoge\"}\n  echo(h)\n}\n\nfunc echo(h Hoge) string {\n  str := h.getHoge()\n  fmt.Println(str)\n  return str\n}\n\nfunc (h Hoge) getHoge() string {\n  return h.hoge\n}\n```\n\n``` sample1.rb\nclass Main\n  def initialize(hoge)\n    @hoge_instance = hoge\n  end\n\n  def echo\n    p @hoge_instance.get_hoge\n  end\nend\n\nclass Hoge\n  def initialize(str)\n    @hoge = str\n  end\n\n  def get_hoge\n    @hoge \n  end\nend\n```\n\npackage/class\u306e\u8a2d\u8a08\u3068\u304b\u3001Ruby\u3067get_hoge\u3063\u3066\u306a\u3093\u3060\u3088\u3001\u307f\u305f\u3044\u306a\u30c4\u30c3\u30b3\u30df\u306f\u4e00\u65e6\u7f6e\u3044\u3066\u304a\u3044\u3066\u3001\u3001\n\n\u3053\u306e\u4e21\u8005\u306b\u304a\u3044\u3066\u3001echo\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3053\u3068\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u5148\u306bRSpec\u3092\u4f7f\u3046\u524d\u63d0\u3067Ruby\u304b\u3089\u3002\n\n``` sample1_spec.rb\n\nrequire './sample.rb'\n\ndescribe Main do\n  # \u3068\u308a\u3042\u3048\u305aecho\u306e\u30c6\u30b9\u30c8\u3060\u3051\n  describe '#echo' do\n    let(:hoge) { double('hoge') }\n    let(:str) { 'hogehoge' }\n    let(:target) { described_class.new(hoge) }\n\n    subject { target.echo }\n\n    before do\n      # Hoge\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u30e2\u30c3\u30af\u3059\u308b\n      allow(hoge).to receive(:get_hoge).and_return(str)\n    end\n\n    it 'get_hoge\u306e\u5024\u3092p\u3059\u308b\u3053\u3068' do\n      expect(target).to receive(:p).with(str)\n      subject\n    end\n  end\nend\n```\n\n\u3067\u306fGolang\u306f\u3068\u3044\u3046\u3068\u30fb\u30fb\u30fb\u3055\u304d\u307b\u3069\u306esample1.go\u3092\u30d9\u30fc\u30b9\u306b\u3059\u308b\u3068\u3001**echo\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306f\u66f8\u3051\u307e\u305b\u3093**\u3002\n\nHoge\u3068\u3044\u3046struct\u3001\u305d\u3057\u3066getHoge\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3092**\u4e0a\u66f8\u304d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044**\u305f\u3081\u3001mock\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u3059\u3002\n\n\u4eca\u56de\u306f\u7c21\u5358\u306e\u305f\u3081\u540c\u4e00\u30d5\u30a1\u30a4\u30eb\uff08package\uff09\u5185\u3067struct\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u79c1\u306f\u5f53\u521dpackage\u3092\u307e\u305f\u3044\u3067\u3053\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u66f8\u304d\u305f\u3044\u306e\u306b\u3001\u4ed6\u306epackage\u306e**\u5b9f\u88c5**\u306b\u4f9d\u5b58\u3057\u305f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3059\u3002\n\n\u65e5\u3005\u60a9\u307f\u3001\u30cd\u30c3\u30c8\u306e\u6d77\u3092\u5f98\u5f8a\u3057\u3001\u8fbf\u308a\u7740\u3044\u305f\u7b54\u3048\u304c\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n##\u89e3\u6c7a\u7b56\uff1a  interface\u3092\u4f7f\u3046\nGolang\u3092\u4f7f\u3044\u59cb\u3081\u305f\u6700\u521d\u306f\u3001\u306a\u3093\u3067\u3082\u7a81\u3063\u8fbc\u3081\u308b\u9b54\u6cd5\u306e\u30d3\u30f3\u306e\u3088\u3046\u306b\u601d\u3063\u3066\u3044\u305finterface{}\u3002\ninterface\u306e\u610f\u5473\u3092\u7406\u89e3\u3057\u3066\u4f7f\u3044\u3053\u306a\u3059\u3053\u3068\u3067\u3001\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u306apackage\uff08\u2252 class\uff09\u3092\u4f5c\u308c\u308b\u3088\u3046\u306b\u306a\u308c\u307e\u3059\u3002\n\nGolang\u306einterface\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u306e\u8a18\u4e8b\u304c\u8a73\u3057\u3044\u3067\u3059\u3002\n\n* <a href=\"http://qiita.com/tenntenn/items/eac962a49c56b2b15ee8\">\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306e\u5b9f\u88c5\u30d1\u30bf\u30fc\u30f3 #golang</a>\n\ninterface\u3092\u4f7f\u3063\u3066sample1.go\u3092\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3059\u3002\n\n``` sample2.go\npackage main\n\nimport(\n  \"fmt\"\n)\n\n// Hoge\u3000struct\u3092\u30e9\u30c3\u30d7\u3059\u308b\u304b\u305f\u3061\u3067interface\u3092\u5ba3\u8a00\ntype HogeInterface interface {\n  getHoge() string\n}\n\ntype Hoge struct {\n  hoge string\n}\n\nfunc main () {\n  h := Hoge{\"hogehoge\"}\n  echo(h)\n}\n\n// \u5f15\u6570\u3092struct\u3067\u306f\u306a\u304finterface\u306b\u3059\u308b\nfunc echo(h HogeInterface) string {\n  str := h.getHoge()\n  fmt.Println(str)\n  return str\n}\n\nfunc (h Hoge) getHoge() string {\n  return h.hoge\n}\n```\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u5909\u5316\u3067\u3001echo\u304c\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` sample2_test.go\npackage main\n\nimport (\n  \"testing\"\n)\n\n// Hoge\u306e\u30e2\u30c3\u30af\u3092\u5ba3\u8a00\n// spec\u306e let(:hoge) { double('hogehoge') }\u306b\u76f8\u5f53\ntype HogeMock struct {}\n\n// HogeMock\u306bgetHoge\u3092\u5b9f\u88c5\n// spec\u306e allow(hoge).to receive(:get_hoge).and_return(\"hogehoge\")\u306b\u76f8\u5f53\nfunc (h HogeMock) getHoge() string {\n  return \"hogehoge\"\n}\n\nfunc TestEcho(t *testing.T) {\n  mock := HogeMock{}\n  hoge := echo(mock)\n\n  if hoge != mock.getHoge() {\n    t.Error(\"error!\")\n  }  \n}\n\n```\n\n\u3053\u306e\u3088\u3046\u306bstruct\u3092interface\u3067\u30e9\u30c3\u30d7\u3059\u308b\u3053\u3068\u3067\u3001\u4ed6\u306e\u30e1\u30bd\u30c3\u30c9\u3084package\u3068\u306e\u4f9d\u5b58\u95a2\u4fc2\u306f\u305d\u306e\u201d\u632f\u308b\u821e\u3044\u201d\uff08= interface\uff09\u3060\u3051\u306b\u7559\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u3067\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u3084\u3063\u305f\u4e0a\u3067\u3001\u51dd\u3063\u305f\u30c6\u30b9\u30c8\u3092\u3084\u308a\u305f\u3044\u5834\u5408\u306b\u306f\u30c6\u30b9\u30c8\u7528\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3068\u306f\u304b\u3069\u308a\u307e\u3059\u3002\n\u79c1\u306f\u3084\u306f\u308aRSpec\u98a8\u306b\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u3067\u3001<a href=\"https://onsi.github.io/ginkgo/\">ginkgo</a>\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3057\u3001\u3053\u308c\u3060\u3051\u3067\u306f\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3082\u3042\u3063\u305f\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u65b9\u6cd5\u3092\u3082\u3046\u4e00\u3064\u3054\u7d39\u4ecb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n##\u95a2\u6570\u3092\u5909\u6570\u5316\u3059\u308b\n\u79c1\u306f\u4e0b\u8a18\u306e\u8a18\u4e8b\u3067\u3053\u306e\u65b9\u6cd5\u3092\u5b66\u3073\u307e\u3057\u305f\u3002\n<a href=\"http://matope.hatenablog.com/entry/2014/08/14/111143\">Golang\u3067\u95a2\u6570\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u306b\u4ee3\u5165\u3057\u3066\u30c6\u30b9\u30c8\u6642\u306b\u30b9\u30bf\u30d6\u3059\u308b</a>\n\n\u5b9f\u969b\u306e\u30b3\u30fc\u30c9\u306b\u8fd1\u3044\u5f62\u3067\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n###API\u63a5\u7d9apackage\u3068model package\u3092\u5207\u308a\u96e2\u3059\nAPI\u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3066\u6574\u5f62\u3059\u308b\u3001model\u306b\u76f8\u5f53\u3059\u308b\u3088\u3046\u306apackage\u304c\u3042\u308b\u3068\u3057\u3066\u3001\u3053\u306emodel\u3092\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306f\u5b9f\u969b\u306bAPI\u3092\u53e9\u304d\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\n\u305d\u3053\u3067\u3001API\u306eclient\u3092\u62c5\u3046package\u3092\u4f5c\u6210\u3057\u3001\u305d\u306eclient\u3092\u4f7f\u3063\u3066API\u3092\u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5909\u6570\u5316\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```client.go\npackage client\n\nimport(\n  \"encoding/json\"\n  \"io/ioutil\"\n  \"net/http\"\n)\n\ntype clientInterface interface {\n  buildUri(string, string) string\n  buildQueryString(map[string]string) string\n  getHttpClient() http.Client\n}\n\ntype client struct {\n  host    string\n  port    int\n  timeout int\n}\n\nvar c clientInterface\n\nfunc init() {\n  c = &client{\n    host:    \"www.example.com\",\n    port:    80,\n    timeout: 5,\n  }\n}\n\n// API\u304b\u3089json\u3067\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u4efb\u610f\u306estruct\u306bparse\u3059\u308b\nvar Get = func (path string, params map[string]string, target interface{}) error {\n  p := c.buildQueryString(params)\n  uri := c.buildUri(path, p)\n  httpClient := c.getHttpClient()\n\n  response, err := httpClient.Get(uri)\n  if err != nil {\n    return err\n  }\n  defer response.Body.Close()\n\n  body, err := ioutil.ReadAll(reponse.Body)\n  if err != nil {\n    return err\n  }\n\n  err = json.Unmarshall(body, &target)\n  if err != nil {\n    return err\n  }\n\n  return nil\n}\n\n// \u4ee5\u4e0b\u3001clientInterface\u306f\u3044\u3044\u611f\u3058\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\n```\n\nAPI\u63a5\u7d9apackage\u3092\u3053\u306e\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067\u3001\u53d6\u5f97\u30d1\u30b9\u306b\u5fdc\u3058\u305fmodel\u306e\u4f5c\u6210\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff08\u3055\u3089\u306bPost/Delete/Put\u3092api.go\u5185\u3067\u4f5c\u6210\u3059\u308b\u5834\u5408\u3082\u540c\u69d8\uff09\n\u305d\u3057\u3066\u3001Get\u3092\u4e0b\u8a18\u306e\u3088\u3046\u306b\u30e2\u30c3\u30af\u3057\u3066\u3084\u308c\u3070\u3001\u305d\u308c\u305e\u308c\u306emodel\u3067\u30c6\u30b9\u30c8\u304c\u884c\u3048\u307e\u3059\u3002\n\n```model_test.go\n// model\u306epackage\u3067\u3001\u4e0a\u8a18client.go\u3092client\u3068\u3057\u3066import\u3059\u308b\u60f3\u5b9a\u3002\n// \u5909\u6570\u3068\u3057\u3066\u5ba3\u8a00\u3057\u305fGet\u30e1\u30bd\u30c3\u30c9\u3092\u4e0a\u66f8\u304d\u3059\u308b\nclient.Get = func(path string, params map[string]string, target interface{}) error {\n  j := `{\"id\": 1, \"name\": \"chisso\"}`\n  json.Unmarshall(j, &target)\n  return nil\n}\n\n// error\u6642\u3092\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3068\u304d\u3082\u81ea\u5728\nclient.Get = func(path string, params map[string]string, target interface{}) error {\n  return errors.New(\"Not Found\")\n}\n```\n\u30a8\u30e9\u30fc\u6642\u306e\u518d\u73fe\u304c\u81ea\u5728\u306b\u306a\u308b\u6069\u6075\u306f\u5927\u304d\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nclient\u3067\u8d77\u3053\u3063\u305f\u5404\u7a2eerror\u3092model\u3067\u304d\u3061\u3093\u3068\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308b\u5834\u5408\u306b\u3001\u30e2\u30c3\u30af\u3057\u305fGet\u30e1\u30bd\u30c3\u30c9\u3067\u5404\u7a2e\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u305b\u308b\u306e\u3067\u3001\u3068\u3066\u3082\u30c6\u30b9\u30c8\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\n\u306a\u304a\u3001client\u81ea\u8eab\u3082interface\u5316\u3057\u3066\u3044\u308b\u306e\u3067\u3001Get\u81ea\u8eab\u3082\u304d\u3061\u3093\u3068\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u53ef\u80fd\u3067\u3059\u3002\n\n\u307e\u305f\u3001\u8907\u6570\u306eAPI\u3092\u5229\u7528\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u3067\u3042\u308c\u3070\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u5909\u6570\u3068\u3057\u3066\u63d0\u4f9b\u3059\u308b\u3053\u3068\u3067\u305d\u308c\u305e\u308c\u3046\u307e\u304f\u30e2\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n##\u307e\u3068\u3081\n\u3044\u304b\u304c\u3067\u3057\u305f\u3067\u3057\u3087\u3046\u304b\u3002\ninterface\u3092\u304d\u3061\u3093\u3068\u7406\u89e3\u3057\u3066\u3044\u308b\u4eba\u306b\u3068\u3063\u3066\u306f\u3068\u3066\u3082\u5f53\u305f\u308a\u524d\u306e\u8a71\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u305f\u3060\u3001\u3082\u3057\u81ea\u5206\u306e\u3088\u3046\u306bphp\u3084Ruby\u304b\u3089\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u5165\u308a\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u305f\u3051\u3069interface\u306e\u6982\u5ff5\u304c\u3046\u307e\u304f\u7406\u89e3\u3067\u304d\u3066\u306a\u304b\u3063\u305f\u4eba\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n\n<a href=\"http://qiita.com/advent-calendar/2016/lifull\">\u682a\u5f0f\u4f1a\u793e\u30cd\u30af\u30b9\u30c8(Lifull) Advent Calendar 2016</a>\u306e<a href=\"http://qiita.com/zom/items/c72c7bac63462225971b\">3\u65e5\u76ee\u306e\u8a18\u4e8b</a>\u306f\u79c1\u306e\u90e8\u7f72\u306e\u5148\u8f29\u3067\u3082\u3042\u308b<a href=\"http://qiita.com/zom\">zom\u3055\u3093</a>\u3067\u3059\u3002\n\u3054\u671f\u5f85\u4e0b\u3055\u3044\uff01\n", "tags": ["testing", "Go"]}