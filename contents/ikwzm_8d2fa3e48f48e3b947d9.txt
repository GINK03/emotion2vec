{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u9ad8\u4f4d\u5408\u6210\u53cb\u306e\u4f1a\u7b2c\u4e09\u56de(2015\u5e7412\u67088\u65e5)\u3067\u767a\u8868\u306e\u3042\u3063\u305f\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u306e\u4e2d\u3067\u3001\u552f\u4e00\u3001\u5f53\u65e5\u307e\u3067\u306b\u8a66\u3059\u3053\u3068\u306e\u51fa\u6765\u306a\u304b\u3063\u305f FortRock \u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u9045\u308c\u307e\u3057\u305f\u304c\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092\u8a18\u8ff0\u3057\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nFortRock \u306f LLVM\u3092\u7528\u3044\u305f Fortran \u30d9\u30fc\u30b9\u306e\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\u9ad8\u4f4d\u5408\u6210\u53cb\u306e\u4f1a\u3067\u306e FortRock \u306e\u767a\u8868\u30b9\u30e9\u30a4\u30c9\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\nXilinx Vivado 2015.3\nFortRock\nclang++-3.6 (FortRock \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b\u5fc5\u8981)\ngfortran-4.8 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\nLLVM 3.4 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\ndragonegg-4.8 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\nRuby 1.9.3 \u4ee5\u964d\n msgpack-vhdl-examples\n\n\n\n\u30d6\u30ed\u30c3\u30af\u56f3\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bFortran\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nfib.f\n      SUBROUTINE FIB(N,O)\n      INTEGER N,O,I,CURR,NEXT,PREV\n      CURR = 0\n      NEXT = 1\n      I    = 0\n 0001 CONTINUE\n      IF(I >= N)THEN\n        GOTO 0002\n      ENDIF\n      PREV = CURR\n      CURR = NEXT\n      NEXT = NEXT + PREV\n      I = I + 1\n      GOTO 0001\n 0002 CONTINUE\n      O = CURR\n      RETURN\n      END\n\n\n\n\u624b\u9806\n\n\u4e8b\u524d\u306e\u6e96\u5099\nFortRock \u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001gfortran-4.8\u3001dragonegge-4.8\u3001llvm-3.4 \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u307e\u305f\u3001FortRock \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b clang++-3.6 \u304c\u5fc5\u8981\u3067\u3059\u3002\nshell% sudo apt-get install gfortran-4.8\nshell% sudo apt-get install dragonegge-4.8\nshell% sudo apt-get install llvm-3.4\n\n\nFortRock \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nshell% git clone https://github.com/nyakuo/FortRock.git\nshell% cd FortRock/src\nshell% make\n\n\u3053\u308c\u3067 FortRock/src/ \u306b fortrock.so \u304c\u51fa\u6765\u3066\u3044\u308c\u3070\u3001\u6210\u529f\u3067\u3059\u3002\n\nmsgpack-vhdl-examples\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n\n\nfib.f \u3092\u30c6\u30b9\u30c8\n\u4eca\u56de\u3001\u521d\u3081\u3066Fortran \u3092\u4f7f\u3046\u306e\u3067\u3001\u8a66\u3057\u306b\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066 fib.f \u3092\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\nfib_test.f\n      program fib_test\n      implicit none\n      integer i, n, o\n      n = 7\n      i = 0\n 1000 call fib(i,o)\n      print *,i,o\n      if (i < n) then\n         i = i + 1\n         goto 1000\n      endif\n      end\n\n\nshell% cd examples/fibonacci/src/main/fortrock\nshell% gfortran-4.8 -O1 -o ./fib_test ./fib_test.f ./fib.f \nshell% ./fib_test\n           0           0\n           1           1\n           2           1\n           3           2\n           4           3\n           5           5\n           6           8\n           7          13\n\n\nfib.f\u3092FortRock\u3067\u9ad8\u4f4d\u5408\u6210\nshell% cd examples/fibonacci/src/main/fortrock\nshell% gfortran-4.8 -O1 ./fib.f -fplugin=/usr/lib/gcc/x86_64-linux-gnu/4.8/plugin/dragonegg.so -fplugin-arg-dragonegg-emit-ir -S -o ./0fib00.s\nshell% opt-3.4 -load ~/work/FortRock/src/fortrock.so -instnamer -fortrock ./0fib00.s -S\nopt-3.4: CommandLine Error: Argument 'info-output-file' defined more than once!\nopt-3.4: CommandLine Error: Argument 'track-memory' defined more than once!\nopt-3.4: CommandLine Error: Argument 'version' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-all-options' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-options' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-hidden' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-list-hidden' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-list' defined more than once!\nopt-3.4: CommandLine Error: Argument 'time-passes' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-after-all' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-before-all' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-after' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-before' defined more than once!\nopt-3.4: CommandLine Error: Argument 'debug-pass' defined more than once!\n; ModuleID = './0fib00.s'\ntarget datalayout = \"e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64\"\ntarget triple = \"x86_64--linux-gnu\"\n\nmodule asm \"\\09.ident\\09\\22GCC: (Ubuntu 4.8.4-1ubuntu15) 4.8.4 LLVM: 3.4.2\\22\"\n\n; Function Attrs: nounwind uwtable\ndefine void @fib_(i32* noalias nocapture readonly %n, i32* noalias nocapture %o) unnamed_addr #0 {\nentry:\n  %tmp = load i32* %n, align 4\n  %tmp1 = icmp sgt i32 %tmp, 0\n  br i1 %tmp1, label %\"4.lr.ph\", label %\"5\"\n\n\"4.lr.ph\":                                        ; preds = %entry\n  %tmp2 = load i32* %n, align 4\n  br label %\"4\"\n\n\"4\":                                              ; preds = %\"4\", %\"4.lr.ph\"\n  %tmp3 = phi i32 [ 1, %\"4.lr.ph\" ], [ %tmp6, %\"4\" ]\n  %tmp4 = phi i32 [ 0, %\"4.lr.ph\" ], [ %tmp7, %\"4\" ]\n  %tmp5 = phi i32 [ 0, %\"4.lr.ph\" ], [ %tmp3, %\"4\" ]\n  %tmp6 = add i32 %tmp3, %tmp5\n  %tmp7 = add i32 %tmp4, 1\n  %tmp8 = icmp sgt i32 %tmp2, %tmp7\n  br i1 %tmp8, label %\"4\", label %\"5\"\n\n\"5\":                                              ; preds = %\"4\", %entry\n  %.lcssa = phi i32 [ 0, %entry ], [ %tmp3, %\"4\" ]\n  store i32 %.lcssa, i32* %o, align 4\n  ret void\n}\n\nattributes #0 = { nounwind uwtable \"no-frame-pointer-elim-non-leaf\"=\"false\" }\n\n\u9014\u4e2d\u3067\u51fa\u529b\u3059\u308bLLVM\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u304c 0fib00.s \u3068\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u4f55\u6545\u304b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306e\u524d\u306b\uff11\u6587\u5b57\u3001\u5f8c\u308d\u306b\uff12\u6587\u5b57\u3064\u3051\u306a\u3044\u3068\u3001Verilog-HDL \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u304c\u6b63\u5e38\u306b\u751f\u6210\u3055\u308c\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u307e\u305f\u3001opt-3.4 \u3067 CommandLine Error \u304c\u51fa\u3066\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\noutput.v \u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u306a\u304a\u3001output.v \u3092 Verilog \u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3/\u8ad6\u7406\u5408\u6210\u3059\u308b\u306b\u306f\u3001Add\u3001multiplier\u3001Divider\u7b49\u306e\u6f14\u7b97\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\u5b9f\u969b\u306b\u306f Add \u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304b output.v \u306b\u306f multiplier \u3068 Divider \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u30c0\u30df\u30fc\u3067\u3082\u3044\u3044\u304b\u3089\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\noperator.v\nmodule Add(a,b,clk,ce,s);\n   input  signed[31:0] a;\n   input  signed[31:0] b;\n   input               clk;\n   input               ce;\n   output signed[31:0] s;\n   reg    signed[31:0] s;\n\n   always @(posedge clk)\n     if (ce)\n       s <= a + b;\nendmodule\n\nmodule multiplier(a,b,clk,ce,p);\n   input  signed[31:0] a;\n   input  signed[31:0] b;\n   input               clk;\n   input               ce;\n   output signed[31:0] p;\n   reg    signed[31:0] p;\n\n   always @(posedge clk)\n     if (ce)\n       p <= a * b;\nendmodule\n\nmodule Divider(dividend,divisor,clk,quotient,fractional,rfd);\n   input  signed[31:0] dividend;\n   input  signed[31:0] divisor;\n   input               clk;\n   output signed[31:0] quotient;\n   output signed[31:0] fractional;\n   output signed[31:0] rfd;\nendmodule\n\n\n\n\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u306e\u4f5c\u6210\n\u3059\u3067\u306b\u4f5c\u6210\u6e08\u307f\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(examples/fibonacci/src/test/scenarios/test_1_32.snr)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nAXI4_Stream_Master_Player\u304a\u3088\u3073AXI4_Stream_Slave_Player\u7528\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f5c\u308a\u307e\u3059\u3002\nshell% cd examples/fibonacci/src/test/scenarios\nshell% ruby test_1_32.rb\n\ntest_1_32.rb \u306f\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(YAML\u5f62\u5f0f)\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eruby\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30d5\u30a1\u30a4\u30eb(create_project.tcl)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nVivado\u3092\u8d77\u52d5\u3057\u3066\u6b21\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089Tcl\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nVivado > Tools > Run Tcl Script... > examples/fibonacci/sim/vivado/fortrock/create_project.tcl\n\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\u524d\u7bc0\u3067\u4f5c\u3063\u305f Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u304d\u3001\u6b21\u306e\u3088\u3046\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nVivado > Flow > Run Simulation > Run Behavioral Simulation\n\n\n\u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\nn=0\uff5e42\u307e\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3082\u3042\u3063\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003\u307e\u3067\u306bn=2\u306e\u6642\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6ce2\u5f62\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u306e\u30ed\u30b0\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\u53c2\u8003\n\nLLVM\u3092\u7528\u3044\u305fFortran\u30d9\u30fc\u30b9\u306e\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30ebFortRock\u306e\u958b\u767a\nhttps://github.com/nyakuo/FortRock\nmsgpack-vhdl-examples\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092VHDL\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Polyphony\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synverll\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092neonlight\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\n#\u306f\u3058\u3081\u306b\n\n[\u9ad8\u4f4d\u5408\u6210\u53cb\u306e\u4f1a\u7b2c\u4e09\u56de(2015\u5e7412\u67088\u65e5)](http://hls.connpass.com/event/22464/)\u3067\u767a\u8868\u306e\u3042\u3063\u305f\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u306e\u4e2d\u3067\u3001\u552f\u4e00\u3001\u5f53\u65e5\u307e\u3067\u306b\u8a66\u3059\u3053\u3068\u306e\u51fa\u6765\u306a\u304b\u3063\u305f FortRock \u3067\u3059\u304c\u3001\u3061\u3087\u3063\u3068\u9045\u308c\u307e\u3057\u305f\u304c\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092\u8a18\u8ff0\u3057\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nFortRock \u306f LLVM\u3092\u7528\u3044\u305f Fortran \u30d9\u30fc\u30b9\u306e\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\u9ad8\u4f4d\u5408\u6210\u53cb\u306e\u4f1a\u3067\u306e FortRock \u306e\u767a\u8868\u30b9\u30e9\u30a4\u30c9\u306f[\u3053\u3061\u3089](http://www.slideshare.net/takahiroyamashita9674/2015128-55977857)\u3067\u3059\u3002\n\n\n#\u7528\u610f\u3059\u308b\u3082\u306e\n\n - Xilinx Vivado 2015.3\n - [FortRock](https://github.com/nyakuo/FortRock)\n - clang++-3.6 (FortRock \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b\u5fc5\u8981)\n - gfortran-4.8 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\n - LLVM 3.4 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\n - dragonegg-4.8 (FortRock \u3067\u9ad8\u4f4d\u5408\u6210\u3059\u308b\u306e\u306b\u5fc5\u8981)\n - Ruby 1.9.3 \u4ee5\u964d\n -  [msgpack-vhdl-examples](https://github.com/ikwzm/msgpack-vhdl-examples)\n\n#\u30d6\u30ed\u30c3\u30af\u56f3\n\n![akgeo2.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/d9802aeb-3dc3-1f7e-daf5-b2a3d070fbdf.jpeg)\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bFortran\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n````Fortran:fib.f\n      SUBROUTINE FIB(N,O)\n      INTEGER N,O,I,CURR,NEXT,PREV\n      CURR = 0\n      NEXT = 1\n      I    = 0\n 0001 CONTINUE\n      IF(I >= N)THEN\n        GOTO 0002\n      ENDIF\n      PREV = CURR\n      CURR = NEXT\n      NEXT = NEXT + PREV\n      I = I + 1\n      GOTO 0001\n 0002 CONTINUE\n      O = CURR\n      RETURN\n      END\n````\n\n#\u624b\u9806\n\n##\u4e8b\u524d\u306e\u6e96\u5099\n\nFortRock \u3092\u4f7f\u3046\u305f\u3081\u306b\u306f\u3001gfortran-4.8\u3001dragonegge-4.8\u3001llvm-3.4 \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u307e\u305f\u3001FortRock \u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306e\u306b clang++-3.6 \u304c\u5fc5\u8981\u3067\u3059\u3002\n\n````\nshell% sudo apt-get install gfortran-4.8\nshell% sudo apt-get install dragonegge-4.8\nshell% sudo apt-get install llvm-3.4\n```\n\n##FortRock \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n````\nshell% git clone https://github.com/nyakuo/FortRock.git\nshell% cd FortRock/src\nshell% make\n````\n\n\u3053\u308c\u3067 FortRock/src/ \u306b fortrock.so \u304c\u51fa\u6765\u3066\u3044\u308c\u3070\u3001\u6210\u529f\u3067\u3059\u3002\n\n##msgpack-vhdl-examples\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n````\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n````\n\n##fib.f \u3092\u30c6\u30b9\u30c8\n\n\u4eca\u56de\u3001\u521d\u3081\u3066Fortran \u3092\u4f7f\u3046\u306e\u3067\u3001\u8a66\u3057\u306b\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066 fib.f \u3092\u30c6\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\n````Fortran:fib_test.f\n      program fib_test\n      implicit none\n      integer i, n, o\n      n = 7\n      i = 0\n 1000 call fib(i,o)\n      print *,i,o\n      if (i < n) then\n         i = i + 1\n         goto 1000\n      endif\n      end\n````\n\n````\nshell% cd examples/fibonacci/src/main/fortrock\nshell% gfortran-4.8 -O1 -o ./fib_test ./fib_test.f ./fib.f \nshell% ./fib_test\n           0           0\n           1           1\n           2           1\n           3           2\n           4           3\n           5           5\n           6           8\n           7          13\n````\n\n##fib.f\u3092FortRock\u3067\u9ad8\u4f4d\u5408\u6210\n\n````\nshell% cd examples/fibonacci/src/main/fortrock\nshell% gfortran-4.8 -O1 ./fib.f -fplugin=/usr/lib/gcc/x86_64-linux-gnu/4.8/plugin/dragonegg.so -fplugin-arg-dragonegg-emit-ir -S -o ./0fib00.s\nshell% opt-3.4 -load ~/work/FortRock/src/fortrock.so -instnamer -fortrock ./0fib00.s -S\nopt-3.4: CommandLine Error: Argument 'info-output-file' defined more than once!\nopt-3.4: CommandLine Error: Argument 'track-memory' defined more than once!\nopt-3.4: CommandLine Error: Argument 'version' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-all-options' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-options' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-hidden' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-list-hidden' defined more than once!\nopt-3.4: CommandLine Error: Argument 'help-list' defined more than once!\nopt-3.4: CommandLine Error: Argument 'time-passes' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-after-all' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-before-all' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-after' defined more than once!\nopt-3.4: CommandLine Error: Argument 'print-before' defined more than once!\nopt-3.4: CommandLine Error: Argument 'debug-pass' defined more than once!\n; ModuleID = './0fib00.s'\ntarget datalayout = \"e-p:64:64:64-S128-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f16:16:16-f32:32:32-f64:64:64-f128:128:128-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64\"\ntarget triple = \"x86_64--linux-gnu\"\n\nmodule asm \"\\09.ident\\09\\22GCC: (Ubuntu 4.8.4-1ubuntu15) 4.8.4 LLVM: 3.4.2\\22\"\n\n; Function Attrs: nounwind uwtable\ndefine void @fib_(i32* noalias nocapture readonly %n, i32* noalias nocapture %o) unnamed_addr #0 {\nentry:\n  %tmp = load i32* %n, align 4\n  %tmp1 = icmp sgt i32 %tmp, 0\n  br i1 %tmp1, label %\"4.lr.ph\", label %\"5\"\n\n\"4.lr.ph\":                                        ; preds = %entry\n  %tmp2 = load i32* %n, align 4\n  br label %\"4\"\n\n\"4\":                                              ; preds = %\"4\", %\"4.lr.ph\"\n  %tmp3 = phi i32 [ 1, %\"4.lr.ph\" ], [ %tmp6, %\"4\" ]\n  %tmp4 = phi i32 [ 0, %\"4.lr.ph\" ], [ %tmp7, %\"4\" ]\n  %tmp5 = phi i32 [ 0, %\"4.lr.ph\" ], [ %tmp3, %\"4\" ]\n  %tmp6 = add i32 %tmp3, %tmp5\n  %tmp7 = add i32 %tmp4, 1\n  %tmp8 = icmp sgt i32 %tmp2, %tmp7\n  br i1 %tmp8, label %\"4\", label %\"5\"\n\n\"5\":                                              ; preds = %\"4\", %entry\n  %.lcssa = phi i32 [ 0, %entry ], [ %tmp3, %\"4\" ]\n  store i32 %.lcssa, i32* %o, align 4\n  ret void\n}\n\nattributes #0 = { nounwind uwtable \"no-frame-pointer-elim-non-leaf\"=\"false\" }\n````\n\n\u9014\u4e2d\u3067\u51fa\u529b\u3059\u308bLLVM\u30d5\u30a1\u30a4\u30eb\u306e\u540d\u524d\u304c 0fib00.s \u3068\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u4f55\u6545\u304b\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u306e\u524d\u306b\uff11\u6587\u5b57\u3001\u5f8c\u308d\u306b\uff12\u6587\u5b57\u3064\u3051\u306a\u3044\u3068\u3001Verilog-HDL \u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\u304c\u6b63\u5e38\u306b\u751f\u6210\u3055\u308c\u306a\u3044\u304b\u3089\u3067\u3059\u3002\n\u307e\u305f\u3001opt-3.4 \u3067 CommandLine Error \u304c\u51fa\u3066\u3044\u307e\u3059\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u6c17\u306b\u3057\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\noutput.v \u304c\u751f\u6210\u3055\u308c\u3066\u3044\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u306a\u304a\u3001output.v \u3092 Verilog \u3067\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3/\u8ad6\u7406\u5408\u6210\u3059\u308b\u306b\u306f\u3001Add\u3001multiplier\u3001Divider\u7b49\u306e\u6f14\u7b97\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\u5b9f\u969b\u306b\u306f Add \u3057\u304b\u4f7f\u308f\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304b output.v \u306b\u306f multiplier \u3068 Divider \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3082\u542b\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u30c0\u30df\u30fc\u3067\u3082\u3044\u3044\u304b\u3089\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n````Verilog:operator.v\nmodule Add(a,b,clk,ce,s);\n   input  signed[31:0] a;\n   input  signed[31:0] b;\n   input               clk;\n   input               ce;\n   output signed[31:0] s;\n   reg    signed[31:0] s;\n   \n   always @(posedge clk)\n     if (ce)\n       s <= a + b;\nendmodule\n\nmodule multiplier(a,b,clk,ce,p);\n   input  signed[31:0] a;\n   input  signed[31:0] b;\n   input               clk;\n   input               ce;\n   output signed[31:0] p;\n   reg    signed[31:0] p;\n   \n   always @(posedge clk)\n     if (ce)\n       p <= a * b;\nendmodule\n\nmodule Divider(dividend,divisor,clk,quotient,fractional,rfd);\n   input  signed[31:0] dividend;\n   input  signed[31:0] divisor;\n   input               clk;\n   output signed[31:0] quotient;\n   output signed[31:0] fractional;\n   output signed[31:0] rfd;\nendmodule\n````\n\n##\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u306e\u4f5c\u6210\n\n\u3059\u3067\u306b\u4f5c\u6210\u6e08\u307f\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(examples/fibonacci/src/test/scenarios/test_1_32.snr)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nAXI4_Stream_Master_Player\u304a\u3088\u3073AXI4_Stream_Slave_Player\u7528\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n````\nshell% cd examples/fibonacci/src/test/scenarios\nshell% ruby test_1_32.rb\n````\n\ntest_1_32.rb \u306f\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(YAML\u5f62\u5f0f)\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eruby\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n##Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30d5\u30a1\u30a4\u30eb(create_project.tcl)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nVivado\u3092\u8d77\u52d5\u3057\u3066\u6b21\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089Tcl\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n````\nVivado > Tools > Run Tcl Script... > examples/fibonacci/sim/vivado/fortrock/create_project.tcl\n````\n\n##\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\n\u524d\u7bc0\u3067\u4f5c\u3063\u305f Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u304d\u3001\u6b21\u306e\u3088\u3046\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n````\nVivado > Flow > Run Simulation > Run Behavioral Simulation\n````\n\n#\u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\nn=0\uff5e42\u307e\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3082\u3042\u3063\u3066\u3044\u307e\u3059\u3002\n\u53c2\u8003\u307e\u3067\u306bn=2\u306e\u6642\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6ce2\u5f62\u3092\u793a\u3057\u307e\u3059\u3002\n\n![fibonacci_fortrock_wave.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/a39c9189-181f-bebf-5b41-492e1afaaeba.jpeg)\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u306e\u30ed\u30b0\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n![fibonacci_fortrock_log.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/e468f771-19f0-b2d6-79c4-91782b6389c2.jpeg)\n\n\n#\u53c2\u8003\n\n- [LLVM\u3092\u7528\u3044\u305fFortran\u30d9\u30fc\u30b9\u306e\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30ebFortRock\u306e\u958b\u767a](http://www.slideshare.net/takahiroyamashita9674/2015128-55977857)\n- [https://github.com/nyakuo/FortRock](https://github.com/nyakuo/FortRock)\n- [msgpack-vhdl-examples](https://github.com/ikwzm/msgpack-vhdl-examples)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/6b3e8120cc4ebbdd5a27)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092VHDL\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/a0ff6cf559f766162951)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Polyphony\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/48acfa3003522cf0c7a3)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synverll\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/37e496680e44d4b80347)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092neonlight\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/1b7cae327719c23fe55d)\n\n\n\n", "tags": ["FortRock", "HDL", "FPGA", "Vivado"]}