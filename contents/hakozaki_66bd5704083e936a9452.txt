{"context": " More than 1 year has passed since last update.\n\n\u7a7a\u306eWebApplication\u3092\u4f5c\u6210\n\u4ed6\u306eIDE\u3067\u3082Maven\u3067\u306a\u304f\u3066\u3082\u826f\u3044\u304c\n\u4eca\u56de\u306fNetBeans\u3067MavenProject\u306eWebApplication\u3092\u4f5c\u6210\u3002\n\n\n\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a2d\u5b9a\njersey\u3068jackson\u306f\u5165\u308c\u3066\u304a\u304f\u3002\ndependencies\u30bf\u30b0\u306b\u8ffd\u52a0\u3002\n\u3042\u3068\u3001\u4eca\u56de\u306f glassfish-embedded-all \u3053\u308c\u3082\u3002\n\npom.xml\n       <dependency>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>jersey-client</artifactId>\n            <version>1.17</version>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>jersey-servlet</artifactId>\n            <version>1.17</version>\n        </dependency>\n        <dependency>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-core-asl</artifactId>\n            <version>1.9.13</version>\n        </dependency>\n        <dependency>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-mapper-asl</artifactId>\n            <version>1.9.13</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.glassfish.main.extras</groupId>\n            <artifactId>glassfish-embedded-all</artifactId>\n            <type>jar</type>\n            <version>4.1</version>\n            <scope>provided</scope>\n        </dependency>\n\n\n\n\u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\n\u4ed6\u306b\u3082\u3084\u308a\u65b9\u306f\u3042\u308b\u307f\u305f\u3044\u3060\u304c\u3001\u30d5\u30a3\u30eb\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u5f0f\u3067\u3002\n\nbeans.xml\u3092\u4f5c\u6210\u3059\u308b(\u3057\u306a\u304f\u3066\u3082\u52d5\u304f\u3068\u306f\u601d\u3046)\n\n\nbeans.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://java.sun.com/xml/ns/javaee\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:weld=\"http://jboss.org/schema/weld/beans\"\n       xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\"\n       bean-discovery-mode=\"annotated\">\n    <weld:scan>\n    </weld:scan>\n    <alternatives></alternatives>\n</beans>\n\n\n\nweb.xml\u3092\u4f5c\u6210\u3059\u308b\n\n\nweb.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app metadata-complete=\"false\" version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n    <filter>\n      <filter-name>servlet-container</filter-name>\n      <filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>\n      <init-param>\n        <param-name>javax.ws.rs.Application</param-name>\n        <param-value>com.mycompany.myrestwar.MyWebApplication</param-value>\n      </init-param>\n    </filter>\n    <filter-mapping>\n      <filter-name>servlet-container</filter-name>\n      <url-pattern>/rest/*</url-pattern>\n    </filter-mapping>    \n</web-app>\n\n\nApplication\u30af\u30e9\u30b9\u306f\u7d9a\u3044\u3066\u4f5c\u6210\u3059\u308b\n\n\u5b9f\u88c5\u3092\u884c\u3046\n\nREST\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\n\nTestRestREsource.java\npackage com.mycompany.myrestwar;\n\nimport javax.enterprise.context.RequestScoped;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.PUT;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.Context;\nimport javax.ws.rs.core.UriInfo;\n\n/**\n * REST\u306e\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n * @author foo\n */\n@Path(\"/rest/test\")\n@RequestScoped\npublic class TestRestResource {\n\n    @Context\n    private UriInfo context;\n\n    /**\n     * Creates a new instance of TestResource\n     */\n    public TestRestResource() {\n\n    }\n\n    /**\n     * Retrieves representation of an instance of jp.co.infomart.dataServiceNgs.product.rest.TestResource\n     * @return an instance of java.lang.String\n     */\n    @GET\n    @Produces(\"text/plain\")\n    public String getText() {\n        return \"this is just test for restful...\";\n    }\n\n    /**\n     * PUT method for updating or creating an instance of TestResource\n     * @param content representation for the resource\n     * @return an HTTP response with content of the updated or created resource.\n     */\n    @PUT\n    @Consumes(\"text/plain\")\n    public void putText(String content) {\n        // \u306a\u306b\u3082\u3057\u306a\u3044\n    }\n\n}\n\n\n\nApplication\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n\nMyWebApplication.java\npackage com.mycompany.myrestwar;\n\nimport javax.ws.rs.ApplicationPath;\nimport org.glassfish.jersey.server.ResourceConfig;\n\n/**\n * REST\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n * @author foo\n */\n@ApplicationPath(\"rest\")\npublic class MyWebApplication extends ResourceConfig  {\n\n    public MyWebApplication() {\n\n        // \u672c\u5f53\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u914d\u4e0b\u306e\u3084\u3064\u3092\u5168\u90e8\u767b\u9332\u3067\u304d\u308b\u304c\n        // packages(this.getClass().getPackage().getName());\n\n        // \u4eca\u56de\u306f\u500b\u5225\u3067\n        this.register(TestRestResource.class);\n    }\n\n}\n\n\n\n\u52d5\u304b\u3059\n\u3053\u308c\u3067\u7d42\u308f\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u3066URL\u3092\u53e9\u304f\u3068\u30fb\u30fb\u30fb\n\n\u7121\u4e8b\u306b\u52d5\u4f5c\u3059\u308b\u3002\u672c\u5f53\u306b\u3053\u308c\u3060\u3051\u3002\nPUT\u3084POST\u3092\u5b9f\u88c5\u3057\u305f\u308a\njson\u5f62\u5f0f\u3067\u8a2d\u5b9a\u3084\u53d6\u5f97\u3092\u884c\u3046\u3053\u3068\u3082jackson\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n\n\u53c2\u8003\uff1ajson\u3092\u6271\u3046\n\nGET\u30e1\u30bd\u30c3\u30c9\n    import java.io.IOException;\n    import java.security.InvalidParameterException;\n    import com.fasterxml.jackson.core.JsonGenerationException;\n    import com.fasterxml.jackson.core.JsonParseException;\n    import com.fasterxml.jackson.core.type.TypeReference;\n    import com.fasterxml.jackson.databind.JsonMappingException;\n    import com.fasterxml.jackson.databind.ObjectMapper;\n\n    private static ObjectMapper mapper = new ObjectMapper();\n\n    @GET\n    @Produces(\"application/json\")\n    public String getJson() {\n\n        Map<String, Object> responseData = new HashMap<>();\n        responseData.put(\"Name\", \"Hakozaki\");\n        responseData.put(\"Age\", 39);\n\n        try {\n            return mapper.writeValueAsString(responseData);\n        } catch (JsonMappingException ex) {\n            throw new RuntimeException(ex);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n\n    }\n\n\n\u306a\u304a\u3001json -> Object\u3078\u306e\u5909\u63db\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n\nsample\n    Map<String, Object> m \n        = mapper.readValue(\n            jsonString, new TypeReference<Map<String, Object>>() {});\n\n\n\nPOST\u3067\u5165\u51fa\u529b\u3092\u6271\u3046\n\nPOST\u30e1\u30bd\u30c3\u30c9\n    @POST\n    @Produces(\"text/plain\")\n    @Consumes(\"text/plain\")\n    public String postText(String content) {\n        return content + \" is Post Data...\";\n    }    \n\n\n\n## \u7a7a\u306eWebApplication\u3092\u4f5c\u6210\n\n\u4ed6\u306eIDE\u3067\u3082Maven\u3067\u306a\u304f\u3066\u3082\u826f\u3044\u304c\n\u4eca\u56de\u306fNetBeans\u3067MavenProject\u306eWebApplication\u3092\u4f5c\u6210\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/1db39924-f5a7-d7b2-c786-79d94624c69c.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/ee34e92c-b10b-a9ed-7041-8e01d886ef3a.png)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/2315d043-3a49-33ed-659f-4ed7b7610da7.png)\n\n## \u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a2d\u5b9a\n\njersey\u3068jackson\u306f\u5165\u308c\u3066\u304a\u304f\u3002\ndependencies\u30bf\u30b0\u306b\u8ffd\u52a0\u3002\n\u3042\u3068\u3001\u4eca\u56de\u306f glassfish-embedded-all \u3053\u308c\u3082\u3002\n\n```xml:pom.xml\n       <dependency>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>jersey-client</artifactId>\n            <version>1.17</version>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>jersey-servlet</artifactId>\n            <version>1.17</version>\n        </dependency>\n        <dependency>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-core-asl</artifactId>\n            <version>1.9.13</version>\n        </dependency>\n        <dependency>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>jackson-mapper-asl</artifactId>\n            <version>1.9.13</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.glassfish.main.extras</groupId>\n            <artifactId>glassfish-embedded-all</artifactId>\n            <type>jar</type>\n            <version>4.1</version>\n            <scope>provided</scope>\n        </dependency>\n ```\n\n## \u30d5\u30a3\u30eb\u30bf\u3092\u8a2d\u5b9a\n\u4ed6\u306b\u3082\u3084\u308a\u65b9\u306f\u3042\u308b\u307f\u305f\u3044\u3060\u304c\u3001\u30d5\u30a3\u30eb\u30bf\u3092\u8ffd\u52a0\u3059\u308b\u65b9\u5f0f\u3067\u3002\n\n### beans.xml\u3092\u4f5c\u6210\u3059\u308b(\u3057\u306a\u304f\u3066\u3082\u52d5\u304f\u3068\u306f\u601d\u3046)\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/a78c822f-12c0-aeb7-b641-d62d85b0bce8.png)\n\n```xml:beans.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<beans xmlns=\"http://java.sun.com/xml/ns/javaee\"\n       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n       xmlns:weld=\"http://jboss.org/schema/weld/beans\"\n       xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/beans_1_0.xsd\"\n       bean-discovery-mode=\"annotated\">\n    <weld:scan>\n    </weld:scan>\n    <alternatives></alternatives>\n</beans>\n```\n\n### web.xml\u3092\u4f5c\u6210\u3059\u308b\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/669046b2-87a3-b9fd-29d7-7e945e464b1b.png)\n\n```xml:web.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app metadata-complete=\"false\" version=\"3.0\" xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\">\n    <filter>\n      <filter-name>servlet-container</filter-name>\n      <filter-class>org.glassfish.jersey.servlet.ServletContainer</filter-class>\n      <init-param>\n        <param-name>javax.ws.rs.Application</param-name>\n        <param-value>com.mycompany.myrestwar.MyWebApplication</param-value>\n      </init-param>\n    </filter>\n    <filter-mapping>\n      <filter-name>servlet-container</filter-name>\n      <url-pattern>/rest/*</url-pattern>\n    </filter-mapping>    \n</web-app>\n```\nApplication\u30af\u30e9\u30b9\u306f\u7d9a\u3044\u3066\u4f5c\u6210\u3059\u308b\n\n## \u5b9f\u88c5\u3092\u884c\u3046\n\n### REST\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/a4b1ee76-dddb-9a82-c131-2b126a1967ed.png)\n\n\n```java:TestRestREsource.java\npackage com.mycompany.myrestwar;\n\nimport javax.enterprise.context.RequestScoped;\nimport javax.ws.rs.Consumes;\nimport javax.ws.rs.GET;\nimport javax.ws.rs.PUT;\nimport javax.ws.rs.Path;\nimport javax.ws.rs.Produces;\nimport javax.ws.rs.core.Context;\nimport javax.ws.rs.core.UriInfo;\n\n/**\n * REST\u306e\u30b5\u30fc\u30d3\u30b9\u30af\u30e9\u30b9\n * @author foo\n */\n@Path(\"/rest/test\")\n@RequestScoped\npublic class TestRestResource {\n\n    @Context\n    private UriInfo context;\n\n    /**\n     * Creates a new instance of TestResource\n     */\n    public TestRestResource() {\n        \n    }\n\n    /**\n     * Retrieves representation of an instance of jp.co.infomart.dataServiceNgs.product.rest.TestResource\n     * @return an instance of java.lang.String\n     */\n    @GET\n    @Produces(\"text/plain\")\n    public String getText() {\n        return \"this is just test for restful...\";\n    }\n\n    /**\n     * PUT method for updating or creating an instance of TestResource\n     * @param content representation for the resource\n     * @return an HTTP response with content of the updated or created resource.\n     */\n    @PUT\n    @Consumes(\"text/plain\")\n    public void putText(String content) {\n        // \u306a\u306b\u3082\u3057\u306a\u3044\n    }\n    \n}\n```\n\n### Application\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/7ec98e5e-9f1f-9ee1-dc22-c260a9a4f535.png)\n\n```java:MyWebApplication.java\npackage com.mycompany.myrestwar;\n\nimport javax.ws.rs.ApplicationPath;\nimport org.glassfish.jersey.server.ResourceConfig;\n\n/**\n * REST\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30af\u30e9\u30b9\n * @author foo\n */\n@ApplicationPath(\"rest\")\npublic class MyWebApplication extends ResourceConfig  {\n\n    public MyWebApplication() {\n\n        // \u672c\u5f53\u306f\u30d1\u30c3\u30b1\u30fc\u30b8\u914d\u4e0b\u306e\u3084\u3064\u3092\u5168\u90e8\u767b\u9332\u3067\u304d\u308b\u304c\n        // packages(this.getClass().getPackage().getName());\n        \n        // \u4eca\u56de\u306f\u500b\u5225\u3067\n        this.register(TestRestResource.class);\n    }\n   \n}\n```\n\n## \u52d5\u304b\u3059\n\n\u3053\u308c\u3067\u7d42\u308f\u308a\u3001\u30c7\u30d7\u30ed\u30a4\u3057\u3066URL\u3092\u53e9\u304f\u3068\u30fb\u30fb\u30fb\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/90a8bdf5-4cfe-5020-a67a-72c1d903484f.png)\n\n\u7121\u4e8b\u306b\u52d5\u4f5c\u3059\u308b\u3002\u672c\u5f53\u306b\u3053\u308c\u3060\u3051\u3002\n\nPUT\u3084POST\u3092\u5b9f\u88c5\u3057\u305f\u308a\njson\u5f62\u5f0f\u3067\u8a2d\u5b9a\u3084\u53d6\u5f97\u3092\u884c\u3046\u3053\u3068\u3082jackson\u3092\u4f7f\u3048\u3070\u7c21\u5358\u306b\u3067\u304d\u308b\u3002\n\n\n#### \u53c2\u8003\uff1ajson\u3092\u6271\u3046\n\n```java:GET\u30e1\u30bd\u30c3\u30c9\n    import java.io.IOException;\n    import java.security.InvalidParameterException;\n    import com.fasterxml.jackson.core.JsonGenerationException;\n    import com.fasterxml.jackson.core.JsonParseException;\n    import com.fasterxml.jackson.core.type.TypeReference;\n    import com.fasterxml.jackson.databind.JsonMappingException;\n    import com.fasterxml.jackson.databind.ObjectMapper;\n\n    private static ObjectMapper mapper = new ObjectMapper();\n\n    @GET\n    @Produces(\"application/json\")\n    public String getJson() {\n\n        Map<String, Object> responseData = new HashMap<>();\n        responseData.put(\"Name\", \"Hakozaki\");\n        responseData.put(\"Age\", 39);\n        \n        try {\n            return mapper.writeValueAsString(responseData);\n        } catch (JsonMappingException ex) {\n            throw new RuntimeException(ex);\n        } catch (IOException ex) {\n            throw new RuntimeException(ex);\n        }\n        \n    }\n```\n\n\u306a\u304a\u3001json -> Object\u3078\u306e\u5909\u63db\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\n\n```java:sample\n    Map<String, Object> m \n        = mapper.readValue(\n            jsonString, new TypeReference<Map<String, Object>>() {});\n```\n\n#### POST\u3067\u5165\u51fa\u529b\u3092\u6271\u3046\n\n```java:POST\u30e1\u30bd\u30c3\u30c9\n    @POST\n    @Produces(\"text/plain\")\n    @Consumes(\"text/plain\")\n    public String postText(String content) {\n        return content + \" is Post Data...\";\n    }    \n```\n\n\n\n", "tags": ["Java", "rest", "RESTful", "\u30b5\u30fc\u30d6\u30ec\u30c3\u30c8", "JAX-RS"]}