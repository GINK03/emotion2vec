{"context": "\n\nMQTT-SN\u3092\u8a66\u3057\u3066\u307f\u3088\u3046\n\u6700\u8fd1\u8033\u306b\u3059\u308b\u4e8b\u304c\u5897\u3048\u3066\u304d\u305fMQTT\u306f\u8efd\u91cf\u3067M2M\u306b\u3068\u3063\u3066\u4f7f\u3044\u3084\u3059\u3044\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001MQTT\u306fTCP/IP\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u5e38\u6642\u63a5\u7d9a\u304c\u57fa\u672c\u3067\u3059\u3002\u3000\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u96fb\u6c60\u7b49\u306e\u6d88\u8017\u3092\u9632\u3050\u306b\u306f\u901a\u4fe1\u306e\u90fd\u5ea6CONNECT\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u901a\u4fe1\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002\u3000\u4e00\u65b9\u3001MQTT-SN\u306fUDP\u306a\u3069\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30ec\u30b9\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\u3001\u901a\u4fe1\u3057\u306a\u3044\u6642\u306fCPU\u3092\u30b9\u30ea\u30fc\u30d7\u3055\u305b\u3066\u96fb\u6c60\u306e\u6d88\u8017\u3092\u9632\u3050\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u3000\u3000\n\u3053\u3093\u306a\u7279\u5fb4\u3092\u6301\u3064MQTT-SN\u3092\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u3000MQTT\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3057\u3066\u6709\u540d\u306a\u306e\u306fPaho\u3067\u3059\u304c\u3001\u7d39\u4ecb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc \u306f\u3001Paho\u3068\u8a2d\u8a08\u601d\u60f3\u304c\u9055\u3044\u307e\u3059\u3002 \u3000Paho\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u6c4e\u7528\u7684\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306fMQTT-SN\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u7279\u5b9a\u7528\u9014\u5411\u3051\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u6c4e\u7528\u7684\u306a\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u305d\u306e\u305f\u3081PUBLISH\u3060\u3051\u3067\u3001SUBSCRIBE\u3001SERCHGW\u3001GWINFO\u3001CONNECT\u3084REGISTER\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u7c21\u5358\u306b\u30a2\u30d7\u30ea\u304c\u4f5c\u6210\u3067\u304d\u3061\u3083\u3063\u305f\u308a\u3057\u307e\u3059\u3002\nNon Block I/O\u3067\u975e\u540c\u671f\u901a\u4fe1\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\u3000PUBLISH\u3067\u30c7\u30fc\u30bf\u9001\u4fe1\u3057\u306a\u304c\u3089\u3001\u540c\u6642\u306bSUBSCRIBE\u3057\u305f\u30c8\u30d4\u30c3\u30af\u304cPUBLISH\u3055\u308c\u308b\u3068\u6307\u5b9a\u3057\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3000Arduino Ethernet (Flash 30KB, RAM 2kB) \u3067\u3082\u52d5\u304d\u307e\u3059\u3002\u3000\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\nLinux\u30de\u30b7\u30f3\u3068C++\u958b\u767a\u74b0\u5883 \u3000\nArduino Ethernet\u30dc\u30fc\u30c9\u3068Arduino\u958b\u767a\u74b0\u5883(1.6.3)\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30eb\u30fc\u30bf\u30fc\u3000DHCP\u30b5\u30fc\u30d0\u30fc\u4ed8\n\n\n\u4f5c\u6210\u3059\u308b\u3082\u306e\n\nUDP\u3092\u4f7f\u7528\u3057\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3001Linux\u7528\u3068Arduino\u7528\u306e\uff12\u7a2e\u985e\u3002\nMQTT\u30d7\u30ed\u30fc\u30ab\u30fc\u3068MQTT-SN\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4e2d\u7d99\u3059\u308b\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3002\n\n\n\u30c6\u30b9\u30c8\u5185\u5bb9\n\nArduino\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fLED\u30e9\u30f3\u30d7\u306e\u30aa\u30f3\u30aa\u30d5\u7528\u30c8\u30d4\u30c3\u30afxxxx/onoff/arduino\u3092SUBSCRIBE\u3057\u3001\u30c8\u30d4\u30c3\u30af\u304cBool\u5024\u3068\u4e00\u7dd2\u306bPUBLISH\u3055\u308c\u308b\u3068LED\u306e\u30aa\u30f3\u30aa\u30d5\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001xxxx/onoff/linux\u30c8\u30d4\u30c3\u30af\u3092False/Ture\u3068\u4e00\u7dd2\u306b\u4ea4\u4e92\u306bPUBLISH\u3057\u307e\u3059\u3002\nLinux\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fLED\u30e9\u30f3\u30d7\u306e\u30aa\u30f3\u30aa\u30d5\u7528\u30c8\u30d4\u30c3\u30afxxxx/onoff/linux\u3092SUBSCRIBE\u3057\u3001\u30c8\u30d4\u30c3\u30af\u304cBool\u5024\u3068\u4e00\u7dd2\u306bPUBLISH\u3055\u308c\u308b\u3068\u6a19\u6e96\u51fa\u529b\u306bON/OFF\u3068\u51fa\u529b\u3057\u307e\u3059\u3002\u307e\u305f\u3001xxxx/onoff/arduino\u30c8\u30d4\u30c3\u30af\u3092False/Ture\u3068\u4e00\u7dd2\u306b\u4ea4\u4e92\u306bPUBLISH\u3057\u307e\u3059\u3002\n\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f\u3053\u308c\u3089\u306e\u30c8\u30d4\u30c3\u30af\u3092MQTT\u3068MQTT-SN\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30d6\u30ed\u30fc\u30ab\u9593\u3067\u4e2d\u7d99\u3057\u307e\u3059\u3002\u3000\u3000\u3000\u3000\u3000\n\n\n\n\u3053\u306e\u9023\u643a\u306b\u3088\u308a\u3001Arduino\u306e\uff2c\uff25\uff24\u30e9\u30f3\u30d7\u304c\u70b9\u6ec5\u3057\u3001Linux\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304cON/OFF\u3068\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3000\n\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f\u901a\u4fe1\u30ed\u30b0\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u66f8\u304d\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u30ed\u30b0\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\u3000\u30ed\u30b0\u3092\u898b\u308c\u3070MQTT-SN\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7406\u89e3\u3057\u3084\u3059\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n\nLinux\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210\nstep1.  \u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u3067\u3001Github\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002 \n\n$ git clone https://github.com/ty4tw/AsyncMQTT-SN.git \nAsyncMQTT-SN/AsyncClient/src\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9Application.cpp\u3068AsyncMQTT-SN/AsyncClient/src/lib\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\nstep2. Application.cpp\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002 \n\n$ cd AsyncMQTT-SN/AsyncClient\n$ make\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n$ make install\n\u5b9f\u884c\u30e2\u30b8\u30e5\u30fc\u30eb TomyAsyncClient \u304c\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306b\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002 \n\nstep3. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002 \n\n$ ./TomyAsyncClient\n\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\u306e\u3067\u4f55\u3082\u8d77\u304d\u307e\u305b\u3093\u304c\u3001wireshark\u3067\u30e2\u30cb\u30bf\u30fc\u3059\u308c\u3070SEARCHGW\u30e1\u30c3\u30bb\u30fc\u30b8\u304cUDP\u3067\u9001\u4fe1\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3000\n\u307e\u305f\u3001MqttsnClientApp.h \u306e68,69\u884c\u306e\u884c\u982d\u306e'//'\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001UDP\u3067\u9001\u4fe1\u3057\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\n\n\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f MQTT-SN\u3092\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5 \u305d\u306e2 \u3067\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u305d\u306e\u524d\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u306fLinux\u3082Arduino\u3082\u5171\u901a\u3067\u3059\u3002\n\u6700\u521d\u306e\u30d6\u30ed\u30c3\u30af\u306f\u5ba3\u8a00\u90e8\u5206\u3067\u3001\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u5171\u901a\u3067\u3059\u3002\n\napplication.cpp\n\n#ifdef ARDUINO\n#include <SoftwareSerial.h>\n#include <lib/MqttsnClientApp.h>\n#include <lib/MqttsnClient.h>\n#include <SPI.h>\n#include <Ethernet.h>\n#include <EthernetUdp.h>\n#else\n#include \"lib/MqttsnClientApp.h\"\n#include \"lib/MqttsnClient.h\"\n#endif\n\n#if defined(ARDUINO) && (defined(DEBUG_NW) || defined(DEBUG_MQTTSN) || defined(DEBUG))\nSoftwareSerial debug(8, 9);\n#endif\n\nusing namespace std;\nusing namespace tomyAsyncClient;\nextern MqttsnClient* theClient;\n\n\n\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u3059\u308bUDP\u3068XBee\u306b\u95a2\u308f\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068MQTT-SN\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\nLinux\u7528\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u306fDHCP\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u304c\u6697\u9ed9\u7684\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u304c\u3001Arduino\u306e\u5834\u5408\u306fMAC\u30a2\u30c9\u30ec\u30b9\u3068IP\u30a2\u30c9\u30ec\u30b9\u3092\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3000\n\u307e\u305f\u3001SERCHGW\u3001GWINFO\u3001ADVERTISE\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u305f\u3081\u3001\u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8\u7528\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8No\u3082\u6307\u5b9a\u3057\u307e\u3059\u3002\u3000\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8No\u306f\u901a\u4fe1\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3067\u540c\u3058\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nMQTT-SN\u306e\u8a2d\u5b9a\u3067\u306f\u3001KeepAlive\u3067PINGREQ\u306e\u9001\u4fe1\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306e\u4ed6\u3001Will\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3070WillTopic \u3068 WillMessage \u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306f 0 \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\"\"\u7a7a\u6587\u5b57\u5217\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\nMqttsnClientApp.h\u3000\u306e43\u884c\u76ee\u3000'#define NETWORK_UDP'\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068XBee\u7528\u306e\u8a2d\u5b9a\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002\n\n\napplication.cpp\n\n/*============================================\n *      MQTT-SN Client Application\n *===========================================*/\n #ifdef NETWORK_XBEE\n XBEE_APP_CONFIG = {\n    {\n        \"client01\",     //ClientId\n        57600,          //Baudrate\n        0,              //Serial PortNo (for Arduino App)\n        \"/dev/ttyUSB0\"  //Device (for linux App)\n    },\n    {\n        300,            //KeepAlive\n        true,           //Clean session\n        false,           //EndDevice\n        \"willTopic\",    //WillTopic   or 0   DO NOT USE NULL STRING \"\" !\n        \"willMessage\"   //WillMessage or 0   DO NOT USE NULL STRING \"\" !\n    }\n };\n#endif\n\n#ifdef NETWORK_UDP\nUDP_APP_CONFIG = {\n    {\n        \"LinuxClient\",      //ClientId\n        {225,1,1,1},        // Multicast group IP\n        1883,               // Multicast group Port\n        {0,0,0,0},          // Local IP     (for Arduino App)\n        12001,              // Local PortNo\n        {0,0,0,0,0,0}       // MAC address  (for Arduino App)\n    },\n    {\n        300,            //KeepAlive\n        true,           //Clean session\n        false,          //EndDevice\n        \"willTopic\",    //WillTopic   or 0   DO NOT USE NULL STRING \"\" !\n        \"willMessage\"   //WillMessage or 0   DO NOT USE NULL STRING \"\" !\n    }\n};\n#endif\n\n\n\n\u3000\u3000\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\nXXX\u306e\u90e8\u5206\u306f\u9069\u5f53\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3000\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3059\u308b\u30d6\u30ed\u30fc\u30ab\u30fc\u306f test.mosquitto.org \u3067\u3059\u3002\u3000\u30c8\u30d4\u30c3\u30af\u306f\u5229\u7528\u8005\u5168\u54e1\u306e\u5171\u7528\u3068\u306a\u308b\u306e\u3067\u3001\u4ed6\u306e\u4eba\u304c\u4f7f\u7528\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3068\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\napplication.cpp\n/*------------------------------------------------------\n *             Create Topic\n *------------------------------------------------------*/\nconst char* topic1 = \"xxxx/onoff/arduino\";\nconst char* topic2 = \"xxxx/onoff/linux\";\n\n\n\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30bf\u30a4\u30de\u30fc\u3067\u5b9a\u671f\u7684\u306b\u8d77\u52d5\u3055\u308c\u308b\u30bf\u30b9\u30af\u3092\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002  \n\n\u95a2\u6570\u306f\u306e\u69d8\u5f0f\u306f void func(void) \u3067\u3001\u8907\u6570\u306e\u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3000\n\u30bf\u30b9\u30af\u306e\u4e2d\u3067PUBLISH(Topic*,Payload*,QoS)\u3067\u304d\u307e\u3059\u3002\nPayload\u306fPUBLISH\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u9001\u4fe1\u3059\u308b\u30d0\u30a4\u30ca\u30ea\u30fc\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u69d8\u5f0f\u306fMessagePack\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092\u5727\u7e2e\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\napplication.cpp\n  Payload pl = Payload(40);  // 40\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u9818\u57df\u3092\u6301\u3064Payload\u3092\u751f\u6210\n  pl.set_uint32( 200);       // uint32\u578b\u306e\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\u3001\n  pl.set_uint32( 10);\n  pl.set_uint32( 50000);\n  pl.set_uint32( 70000);\n  pl.set_int32( -300);       // int32\u578b\n  pl.set_int32(-70000);\n  pl.set_float((float)1000.01);  //\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\n  pl.set_str(\"abcdef\");          //\u6587\u5b57\u5217\n\n //Payload\u3092QoS1\u3067\u9001\u4fe1\n  PUBLISH(tp_request_01,&pl,1);  \n\n // PULISH\u3067\u9001\u3089\u308c\u305fPayload\u306f\u30dd\u30a4\u30f3\u30bf\u30fc\u3067\u95a2\u6570\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 \n // Payload\u304b\u3089\u53d6\u308a\u51fa\u3059\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n // \u8a73\u3057\u304f\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306ePayload.h\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n  uint32_t val0 = pl->get_uint32(0);\n  uint32_t val1 = pl->get_uint32(1);\n  uint32_t val2 = pl->get_uint32(2);\n  uint32_t val3 = pl->get_uint32(3);\n  int32_t  val4 = pl->get_int32(4);\n  int32_t  val5 = pl->get_int32(5);\n  int32_t  val6 = pl->get_float(6);\n  uint16_t len;\n  const char* str = pl->get_str(7,&len);\n\n\n\n\n```cpp:application.cpp\n/*------------------------------------------------------\n *             Tasks invoked by Timer\n *------------------------------------------------------*/\nstatic bool onoffFlg = true;\n\n// \u95a2\u6570\u5b9f\u884c\u306e\u90fd\u5ea6\u3001ON/OFF\u3068\u4ea4\u4e92\u306b\u306a\u308b\u3088\u3046\u306b\u30d6\u30fc\u30eb\u5024\u3092\u8a2d\u5b9a\u3057\u3066PUBLISH\n\nvoid task1(void){\n  printf(\"TASK1 invoked\\n\");\n  Payload* pl = new Payload(10);\n  onoffFlg = !onoffFlg;\n  pl->set_bool(onoffFlg);\n  PUBLISH(topic1,pl,1);\n}\n\n// \u4ed6\u306b\u3082Task\u95a2\u6570\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\nvoid task2(void){\n  printf(\"TASK2 invoked\\n\");\n}\n\n\n\u4e0a\u306e\u30d6\u30ed\u30c3\u30af\u3067\u5b9a\u7fa9\u3057\u305f\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\ntask1 \u306f \uff12\u79d2\u9593\u9694\u3067\u3001task2 \u306f 20\u79d2\u9593\u9694\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\nTASK_LIST, TASK, END_OF_TASK \u306f\u30de\u30af\u30ed\u3067\u3059\u3002\n\n\napplication.cpp\n/*---------------  List of task invoked by Timer ------------*/\n\nTASK_LIST = {  //TASK( const char* topic, executing duration in second),\n             TASK(task1,2),\n             TASK(task2,20),\n             END_OF_TASK_LIST\n            };\n\n\nSUBSCRIBE\u3057\u305f\u30c8\u30d4\u30c3\u30af\u304cPUBLISH\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3001SUBSCRIBE_LIST\u3067\u30c8\u30d4\u30c3\u30af\u3068\u95a2\u6570\u3092\u3064\u306a\u304e\u3042\u308f\u305b\u3066\u3001PUBLISH\u306eQoS\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u8907\u6570\u306e\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3000\nINDICATOR_ON(bool)\u3001  SUBSCRIBE_LIST\u3001 SUB \u3068 END_OF_SUBSCRIBE_LIST\u3000\u3082\u30de\u30af\u30ed\u3067\u3059\u3002\nPayload\u306b\u3064\u3044\u3066\u3044\u308b tomyAsyncClient:: \u306e\u8868\u8a18\u306fArduino\u3067\u306f\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\n\n\napplication.cpp\n/*------------------------------------------------------\n *       Tasks invoked by PUBLISH command Packet\n *------------------------------------------------------*/\n\nint on_publish(tomyAsyncClient::Payload* payload){\n    printf(\"ON_PUBLISH invoked.  \");\n    INDICATOR_ON(payload->get_bool(0)); // Payload\u304b\u3089\u30d6\u30fc\u30eb\u5024\u3092\u53d6\u308a\u51fa\u3059\u3057\u3066\u4f7f\u7528\n    return 0;\n}\n\n/*------------ Link Callback to Topic -------------*/\n\nSUBSCRIBE_LIST = {  //SUB(topic, on_publish, QoS),\n                  SUB(topic2, on_publish, 1),\n                  END_OF_SUBSCRIBE_LIST\n                 };\n\n\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u3067\u306f\u5272\u308a\u8fbc\u307f\u51e6\u7406\u95a2\u6570\u3068\u521d\u671f\u8a2d\u5b9a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u4f55\u3082\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\napplication.cpp\n/*------------------------------------------------------\n *            Tasks invoked by INT0 interruption\n *------------------------------------------------------*/\nvoid interruptCallback(void){\n\n}\n\n/*------------------------------------------------------\n *            setup() function\n *------------------------------------------------------*/\n void setup(void){\n\n }\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u308c\u3060\u3051\u3067\u3059\u3002\u3000\u3042\u3068\u306f\u5168\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3000\nTASK\u95a2\u6570 void func(void) \u3068 On_Publish\u95a2\u6570\u3000int func(tomyAsyncGateway::Payload* payload) \u3092\u8a18\u8ff0\u3057\u3001\nTASK_LIST\u3000\u3068\u3000SUBSCRIBE_LIST\u3000\u3092\u5ba3\u8a00\u3059\u308b\u3060\u3051\u3067\u5b8c\u6210\u3067\u3059\u3002\n\u305d\u306e\uff12\u3078\u7d9a\u304f\n#MQTT-SN\u3092\u8a66\u3057\u3066\u307f\u3088\u3046#\n\u6700\u8fd1\u8033\u306b\u3059\u308b\u4e8b\u304c\u5897\u3048\u3066\u304d\u305fMQTT\u306f\u8efd\u91cf\u3067M2M\u306b\u3068\u3063\u3066\u4f7f\u3044\u3084\u3059\u3044\u30d7\u30ed\u30c8\u30b3\u30eb\u3068\u8a00\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001MQTT\u306fTCP/IP\u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u5e38\u6642\u63a5\u7d9a\u304c\u57fa\u672c\u3067\u3059\u3002\u3000\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30c7\u30d0\u30a4\u30b9\u306e\u96fb\u6c60\u7b49\u306e\u6d88\u8017\u3092\u9632\u3050\u306b\u306f\u901a\u4fe1\u306e\u90fd\u5ea6CONNECT\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u901a\u4fe1\u306e\u30aa\u30fc\u30d0\u30fc\u30d8\u30c3\u30c9\u304c\u5fc5\u8981\u3067\u3059\u3002\u3000\u4e00\u65b9\u3001MQTT-SN\u306fUDP\u306a\u3069\u306e\u30bb\u30c3\u30b7\u30e7\u30f3\u30ec\u30b9\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4f7f\u7528\u3067\u304d\u308b\u305f\u3081\u3001\u901a\u4fe1\u3057\u306a\u3044\u6642\u306fCPU\u3092\u30b9\u30ea\u30fc\u30d7\u3055\u305b\u3066\u96fb\u6c60\u306e\u6d88\u8017\u3092\u9632\u3050\u4e8b\u304c\u3067\u304d\u307e\u3059\u3002\u3000\u3000\n\n\u3053\u3093\u306a\u7279\u5fb4\u3092\u6301\u3064MQTT-SN\u3092\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3067\u304d\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\u3000MQTT\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3068\u3057\u3066\u6709\u540d\u306a\u306e\u306f**Paho**\u3067\u3059\u304c\u3001\u7d39\u4ecb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc \u306f\u3001Paho\u3068\u8a2d\u8a08\u601d\u60f3\u304c\u9055\u3044\u307e\u3059\u3002 \u3000Paho\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u6c4e\u7528\u7684\u306a\u6a5f\u80fd\u3092\u63d0\u4f9b\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306fMQTT-SN\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e**\u7279\u5b9a\u7528\u9014\u5411\u3051\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30fb\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af**\u3068**\u6c4e\u7528\u7684\u306a\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4**\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u305d\u306e\u305f\u3081**PUBLISH**\u3060\u3051\u3067\u3001SUBSCRIBE\u3001SERCHGW\u3001GWINFO\u3001CONNECT\u3084REGISTER\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u7c21\u5358\u306b\u30a2\u30d7\u30ea\u304c\u4f5c\u6210\u3067\u304d\u3061\u3083\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\nNon Block I/O\u3067\u975e\u540c\u671f\u901a\u4fe1\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\u3000PUBLISH\u3067\u30c7\u30fc\u30bf\u9001\u4fe1\u3057\u306a\u304c\u3089\u3001\u540c\u6642\u306bSUBSCRIBE\u3057\u305f\u30c8\u30d4\u30c3\u30af\u304cPUBLISH\u3055\u308c\u308b\u3068\u6307\u5b9a\u3057\u305f\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u3000**Arduino Ethernet** (Flash 30KB, RAM 2kB) \u3067\u3082\u52d5\u304d\u307e\u3059\u3002\u3000\n\n##\u7528\u610f\u3059\u308b\u3082\u306e##\n* Linux\u30de\u30b7\u30f3\u3068C++\u958b\u767a\u74b0\u5883 \u3000\n* Arduino Ethernet\u30dc\u30fc\u30c9\u3068Arduino\u958b\u767a\u74b0\u5883(1.6.3)\n* \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u30eb\u30fc\u30bf\u30fc\u3000DHCP\u30b5\u30fc\u30d0\u30fc\u4ed8\n\n##\u4f5c\u6210\u3059\u308b\u3082\u306e##\n* UDP\u3092\u4f7f\u7528\u3057\u305f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u3001Linux\u7528\u3068Arduino\u7528\u306e\uff12\u7a2e\u985e\u3002\n* MQTT\u30d7\u30ed\u30fc\u30ab\u30fc\u3068MQTT-SN\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4e2d\u7d99\u3059\u308b\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3002\n\n##\u30c6\u30b9\u30c8\u5185\u5bb9##\n* Arduino\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fLED\u30e9\u30f3\u30d7\u306e\u30aa\u30f3\u30aa\u30d5\u7528\u30c8\u30d4\u30c3\u30af**xxxx/onoff/arduino**\u3092SUBSCRIBE\u3057\u3001\u30c8\u30d4\u30c3\u30af\u304cBool\u5024\u3068\u4e00\u7dd2\u306bPUBLISH\u3055\u308c\u308b\u3068LED\u306e\u30aa\u30f3\u30aa\u30d5\u3092\u884c\u3044\u307e\u3059\u3002\u307e\u305f\u3001**xxxx/onoff/linux**\u30c8\u30d4\u30c3\u30af\u3092False/Ture\u3068\u4e00\u7dd2\u306b\u4ea4\u4e92\u306bPUBLISH\u3057\u307e\u3059\u3002\n* Linux\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306fLED\u30e9\u30f3\u30d7\u306e\u30aa\u30f3\u30aa\u30d5\u7528\u30c8\u30d4\u30c3\u30af**xxxx/onoff/linux**\u3092SUBSCRIBE\u3057\u3001\u30c8\u30d4\u30c3\u30af\u304cBool\u5024\u3068\u4e00\u7dd2\u306bPUBLISH\u3055\u308c\u308b\u3068\u6a19\u6e96\u51fa\u529b\u306bON/OFF\u3068\u51fa\u529b\u3057\u307e\u3059\u3002\u307e\u305f\u3001**xxxx/onoff/arduino**\u30c8\u30d4\u30c3\u30af\u3092False/Ture\u3068\u4e00\u7dd2\u306b\u4ea4\u4e92\u306bPUBLISH\u3057\u307e\u3059\u3002\n* \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f\u3053\u308c\u3089\u306e\u30c8\u30d4\u30c3\u30af\u3092MQTT\u3068MQTT-SN\u306e\u5909\u63db\u3092\u884c\u3063\u3066\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30d6\u30ed\u30fc\u30ab\u9593\u3067\u4e2d\u7d99\u3057\u307e\u3059\u3002\u3000\u3000\u3000\u3000\u3000\n\n***\n1. \u3053\u306e\u9023\u643a\u306b\u3088\u308a\u3001Arduino\u306e\uff2c\uff25\uff24\u30e9\u30f3\u30d7\u304c\u70b9\u6ec5\u3057\u3001Linux\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304cON/OFF\u3068\u30d7\u30ea\u30f3\u30c8\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3000\n* \u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f\u901a\u4fe1\u30ed\u30b0\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3067\u66f8\u304d\u51fa\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u30ed\u30b0\u3092\u8868\u793a\u3055\u305b\u307e\u3059\u3002\u3000\u30ed\u30b0\u3092\u898b\u308c\u3070MQTT-SN\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u7406\u89e3\u3057\u3084\u3059\u304f\u306a\u308b\u3067\u3057\u3087\u3046\u3002\n\n\n##Linux\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210##\n**step1.  \u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u3067\u3001Github\u304b\u3089\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002**    \n>$ git clone https://github.com/ty4tw/AsyncMQTT-SN.git \n\n>AsyncMQTT-SN/AsyncClient/src\u306b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30a2\u30d7\u30ea\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9Application.cpp\u3068AsyncMQTT-SN/AsyncClient/src/lib\u306b\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n**step2. Application.cpp\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002**    \n>$ cd AsyncMQTT-SN/AsyncClient\n$ make\n\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u306a\u3051\u308c\u3070\u30c6\u30b9\u30c8\u7528\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n$ make install\n\u5b9f\u884c\u30e2\u30b8\u30e5\u30fc\u30eb **TomyAsyncClient** \u304c\u30db\u30fc\u30e0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u30fc\u306b\u30b3\u30d4\u30fc\u3055\u308c\u307e\u3059\u3002 \n\n**step3. \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002**   \n>$ ./TomyAsyncClient\n\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u304c\u52d5\u3044\u3066\u3044\u306a\u3044\u306e\u3067\u4f55\u3082\u8d77\u304d\u307e\u305b\u3093\u304c\u3001wireshark\u3067\u30e2\u30cb\u30bf\u30fc\u3059\u308c\u3070SEARCHGW\u30e1\u30c3\u30bb\u30fc\u30b8\u304cUDP\u3067\u9001\u4fe1\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\u3000\n\u307e\u305f\u3001MqttsnClientApp.h \u306e68,69\u884c\u306e\u884c\u982d\u306e'//'\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u518d\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001UDP\u3067\u9001\u4fe1\u3057\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u6a19\u6e96\u51fa\u529b\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n![Screenshot from 2015-05-20 06:41:50.png](https://qiita-image-store.s3.amazonaws.com/0/41752/c4b262bb-36f4-aa96-0b2e-59bcd62272e5.png)\n\n##\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u306f **MQTT-SN\u3092\u7c21\u5358\u306b\u30c6\u30b9\u30c8\u3059\u308b\u65b9\u6cd5 \u305d\u306e2** \u3067\u4f5c\u6210\u3057\u307e\u3059\u3002##\n\u305d\u306e\u524d\u306b\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u306b\u3064\u3044\u3066\u8aac\u660e\u3057\u307e\u3059\u3002 \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u9020\u306fLinux\u3082Arduino\u3082\u5171\u901a\u3067\u3059\u3002\n\n\u6700\u521d\u306e\u30d6\u30ed\u30c3\u30af\u306f\u5ba3\u8a00\u90e8\u5206\u3067\u3001\u3059\u3079\u3066\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u5171\u901a\u3067\u3059\u3002\n\n```cpp:application.cpp\n\n#ifdef ARDUINO\n#include <SoftwareSerial.h>\n#include <lib/MqttsnClientApp.h>\n#include <lib/MqttsnClient.h>\n#include <SPI.h>\n#include <Ethernet.h>\n#include <EthernetUdp.h>\n#else\n#include \"lib/MqttsnClientApp.h\"\n#include \"lib/MqttsnClient.h\"\n#endif\n\n#if defined(ARDUINO) && (defined(DEBUG_NW) || defined(DEBUG_MQTTSN) || defined(DEBUG))\nSoftwareSerial debug(8, 9);\n#endif\n\nusing namespace std;\nusing namespace tomyAsyncClient;\nextern MqttsnClient* theClient;\n\n```\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f7f\u7528\u3059\u308bUDP\u3068XBee\u306b\u95a2\u308f\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3068MQTT-SN\u306e\u8a2d\u5b9a\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n>Linux\u7528\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eIP\u30a2\u30c9\u30ec\u30b9\u306fDHCP\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u53d6\u5f97\u3057\u3066\u3044\u308b\u30a2\u30c9\u30ec\u30b9\u304c\u6697\u9ed9\u7684\u306b\u4f7f\u7528\u3055\u308c\u307e\u3059\u304c\u3001Arduino\u306e\u5834\u5408\u306fMAC\u30a2\u30c9\u30ec\u30b9\u3068IP\u30a2\u30c9\u30ec\u30b9\u3092\u660e\u793a\u7684\u306b\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u3000\n\u307e\u305f\u3001SERCHGW\u3001GWINFO\u3001ADVERTISE\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u30d6\u30ed\u30fc\u30c9\u30ad\u30e3\u30b9\u30c8\u3059\u308b\u305f\u3081\u3001\u30de\u30eb\u30c1\u30ad\u30e3\u30b9\u30c8\u7528\u306eIP\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8No\u3082\u6307\u5b9a\u3057\u307e\u3059\u3002\u3000\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u3068\u30dd\u30fc\u30c8No\u306f\u901a\u4fe1\u3059\u308b\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u30b2\u30fc\u30c8\u30a6\u30a7\u30a4\u3067\u540c\u3058\u5024\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n>MQTT-SN\u306e\u8a2d\u5b9a\u3067\u306f\u3001KeepAlive\u3067PINGREQ\u306e\u9001\u4fe1\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\u3053\u306e\u4ed6\u3001Will\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u4f7f\u7528\u3059\u308b\u306a\u3089\u3070WillTopic \u3068 WillMessage \u3092\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002 \u4f7f\u7528\u3057\u306a\u3044\u5834\u5408\u306f **0** \u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\"\"\u7a7a\u6587\u5b57\u5217\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\n\n>MqttsnClientApp.h\u3000\u306e43\u884c\u76ee\u3000'#define NETWORK_UDP'\u3092\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068XBee\u7528\u306e\u8a2d\u5b9a\u304c\u9078\u629e\u3055\u308c\u307e\u3059\u3002\n\n```cpp:application.cpp\n\n/*============================================\n *      MQTT-SN Client Application\n *===========================================*/\n #ifdef NETWORK_XBEE\n XBEE_APP_CONFIG = {\n    {\n    \t\"client01\",     //ClientId\n        57600,          //Baudrate\n        0,              //Serial PortNo (for Arduino App)\n        \"/dev/ttyUSB0\"  //Device (for linux App)\n    },\n    {\n        300,            //KeepAlive\n        true,           //Clean session\n        false,           //EndDevice\n        \"willTopic\",    //WillTopic   or 0   DO NOT USE NULL STRING \"\" !\n        \"willMessage\"   //WillMessage or 0   DO NOT USE NULL STRING \"\" !\n    }\n };\n#endif\n\n#ifdef NETWORK_UDP\nUDP_APP_CONFIG = {\n    {\n      \t\"LinuxClient\",      //ClientId\n        {225,1,1,1},        // Multicast group IP\n        1883,               // Multicast group Port\n        {0,0,0,0},          // Local IP     (for Arduino App)\n        12001,              // Local PortNo\n        {0,0,0,0,0,0}       // MAC address  (for Arduino App)\n    },\n    {\n        300,            //KeepAlive\n        true,           //Clean session\n        false,          //EndDevice\n        \"willTopic\",    //WillTopic   or 0   DO NOT USE NULL STRING \"\" !\n        \"willMessage\"   //WillMessage or 0   DO NOT USE NULL STRING \"\" !\n    }\n};\n#endif\n\n```\n\n\u3000\u3000\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u3067\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n>XXX\u306e\u90e8\u5206\u306f\u9069\u5f53\u306b\u5909\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3000\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3059\u308b\u30d6\u30ed\u30fc\u30ab\u30fc\u306f test.mosquitto.org \u3067\u3059\u3002\u3000\u30c8\u30d4\u30c3\u30af\u306f\u5229\u7528\u8005\u5168\u54e1\u306e\u5171\u7528\u3068\u306a\u308b\u306e\u3067\u3001\u4ed6\u306e\u4eba\u304c\u4f7f\u7528\u3059\u308b\u30c8\u30d4\u30c3\u30af\u3068\u91cd\u8907\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```cpp:application.cpp\n/*------------------------------------------------------\n *             Create Topic\n *------------------------------------------------------*/\nconst char* topic1 = \"xxxx/onoff/arduino\";\nconst char* topic2 = \"xxxx/onoff/linux\";\n\n```\n\n\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u306f\u30bf\u30a4\u30de\u30fc\u3067\u5b9a\u671f\u7684\u306b\u8d77\u52d5\u3055\u308c\u308b\u30bf\u30b9\u30af\u3092\u95a2\u6570\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u307e\u3059\u3002  \n>\u95a2\u6570\u306f\u306e\u69d8\u5f0f\u306f `void func(void)` \u3067\u3001\u8907\u6570\u306e\u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3000\n\u30bf\u30b9\u30af\u306e\u4e2d\u3067`PUBLISH(Topic*,Payload*,QoS)`\u3067\u304d\u307e\u3059\u3002\n**Payload**\u306fPUBLISH\u30e1\u30c3\u30bb\u30fc\u30b8\u3067\u9001\u4fe1\u3059\u308b\u30d0\u30a4\u30ca\u30ea\u30fc\u30c7\u30fc\u30bf\u3092\u8868\u3059\u30af\u30e9\u30b9\u3067\u3001\u69d8\u5f0f\u306fMessagePack\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u30c7\u30fc\u30bf\u3092\u5727\u7e2e\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u4f7f\u3044\u65b9\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n>```cpp:application.cpp\n  Payload pl = Payload(40);  // 40\u30d0\u30a4\u30c8\u306e\u30c7\u30fc\u30bf\u9818\u57df\u3092\u6301\u3064Payload\u3092\u751f\u6210\n  pl.set_uint32( 200);       // uint32\u578b\u306e\u30c7\u30fc\u30bf\u3092\u66f8\u304d\u8fbc\u3080\u3001\n  pl.set_uint32( 10);\n  pl.set_uint32( 50000);\n  pl.set_uint32( 70000);\n  pl.set_int32( -300);       // int32\u578b\n  pl.set_int32(-70000);\n  pl.set_float((float)1000.01);  //\u6d6e\u52d5\u5c0f\u6570\u70b9\u578b\n  pl.set_str(\"abcdef\");          //\u6587\u5b57\u5217\n\n>  //Payload\u3092QoS1\u3067\u9001\u4fe1\n  PUBLISH(tp_request_01,&pl,1);  \n\n>  // PULISH\u3067\u9001\u3089\u308c\u305fPayload\u306f\u30dd\u30a4\u30f3\u30bf\u30fc\u3067\u95a2\u6570\u306b\u6e21\u3055\u308c\u307e\u3059\u3002 \n // Payload\u304b\u3089\u53d6\u308a\u51fa\u3059\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n // \u8a73\u3057\u304f\u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306ePayload.h\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n  uint32_t val0 = pl->get_uint32(0);\n  uint32_t val1 = pl->get_uint32(1);\n  uint32_t val2 = pl->get_uint32(2);\n  uint32_t val3 = pl->get_uint32(3);\n  int32_t  val4 = pl->get_int32(4);\n  int32_t  val5 = pl->get_int32(5);\n  int32_t  val6 = pl->get_float(6);\n  uint16_t len;\n  const char* str = pl->get_str(7,&len);\n\n```\n\n```cpp:application.cpp\n/*------------------------------------------------------\n *             Tasks invoked by Timer\n *------------------------------------------------------*/\nstatic bool onoffFlg = true;\n\n// \u95a2\u6570\u5b9f\u884c\u306e\u90fd\u5ea6\u3001ON/OFF\u3068\u4ea4\u4e92\u306b\u306a\u308b\u3088\u3046\u306b\u30d6\u30fc\u30eb\u5024\u3092\u8a2d\u5b9a\u3057\u3066PUBLISH\n\nvoid task1(void){\n  printf(\"TASK1 invoked\\n\");\n  Payload* pl = new Payload(10);\n  onoffFlg = !onoffFlg;\n  pl->set_bool(onoffFlg);\n  PUBLISH(topic1,pl,1);\n}\n\n// \u4ed6\u306b\u3082Task\u95a2\u6570\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\nvoid task2(void){\n  printf(\"TASK2 invoked\\n\");\n}\n\n```\n\n\n\u4e0a\u306e\u30d6\u30ed\u30c3\u30af\u3067\u5b9a\u7fa9\u3057\u305f\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u6642\u9593\u9593\u9694\u3092\u79d2\u5358\u4f4d\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n>task1 \u306f \uff12\u79d2\u9593\u9694\u3067\u3001task2 \u306f 20\u79d2\u9593\u9694\u3067\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n**TASK_LIST**, **TASK**, **END_OF_TASK** \u306f\u30de\u30af\u30ed\u3067\u3059\u3002\n\n```cpp:application.cpp\n/*---------------  List of task invoked by Timer ------------*/\n\nTASK_LIST = {  //TASK( const char* topic, executing duration in second),\n             TASK(task1,2),\n             TASK(task2,20),\n             END_OF_TASK_LIST\n            };\n```\n\nSUBSCRIBE\u3057\u305f\u30c8\u30d4\u30c3\u30af\u304cPUBLISH\u3055\u308c\u305f\u3068\u304d\u306b\u5b9f\u884c\u3055\u308c\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3001SUBSCRIBE_LIST\u3067\u30c8\u30d4\u30c3\u30af\u3068\u95a2\u6570\u3092\u3064\u306a\u304e\u3042\u308f\u305b\u3066\u3001PUBLISH\u306eQoS\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n>\u8907\u6570\u306e\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u307e\u3059\u3002\u3000\n**INDICATOR_ON(bool)**\u3001  **SUBSCRIBE_LIST**\u3001 **SUB** \u3068 **END_OF_SUBSCRIBE_LIST**\u3000\u3082\u30de\u30af\u30ed\u3067\u3059\u3002\nPayload\u306b\u3064\u3044\u3066\u3044\u308b tomyAsyncClient:: \u306e\u8868\u8a18\u306fArduino\u3067\u306f\u5fc5\u9808\u3068\u306a\u308a\u307e\u3059\u3002\n\n```cpp:application.cpp\n/*------------------------------------------------------\n *       Tasks invoked by PUBLISH command Packet\n *------------------------------------------------------*/\n\nint on_publish(tomyAsyncClient::Payload* payload){\n    printf(\"ON_PUBLISH invoked.  \");\n    INDICATOR_ON(payload->get_bool(0)); // Payload\u304b\u3089\u30d6\u30fc\u30eb\u5024\u3092\u53d6\u308a\u51fa\u3059\u3057\u3066\u4f7f\u7528\n    return 0;\n}\n\n/*------------ Link Callback to Topic -------------*/\n\nSUBSCRIBE_LIST = {  //SUB(topic, on_publish, QoS),\n                  SUB(topic2, on_publish, 1),\n                  END_OF_SUBSCRIBE_LIST\n                 };\n```\n\n\n\u6b21\u306e\u30d6\u30ed\u30c3\u30af\u3067\u306f\u5272\u308a\u8fbc\u307f\u51e6\u7406\u95a2\u6570\u3068\u521d\u671f\u8a2d\u5b9a\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u304c\u3001\u3053\u306e\u4f8b\u3067\u306f\u4f55\u3082\u5fc5\u8981\u3042\u308a\u307e\u305b\u3093\u3002\n\n```cpp:application.cpp\n/*------------------------------------------------------\n *            Tasks invoked by INT0 interruption\n *------------------------------------------------------*/\nvoid interruptCallback(void){\n\n}\n\n/*------------------------------------------------------\n *            setup() function\n *------------------------------------------------------*/\n void setup(void){\n\n }\n\n```\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30fb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u308c\u3060\u3051\u3067\u3059\u3002\u3000\u3042\u3068\u306f\u5168\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u304c\u5b9f\u884c\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u3000\nTASK\u95a2\u6570 `void func(void)` \u3068 On_Publish\u95a2\u6570\u3000`int func(tomyAsyncGateway::Payload* payload)` \u3092\u8a18\u8ff0\u3057\u3001\n**TASK_LIST**\u3000\u3068\u3000**SUBSCRIBE_LIST**\u3000\u3092\u5ba3\u8a00\u3059\u308b\u3060\u3051\u3067\u5b8c\u6210\u3067\u3059\u3002\n\n[**\u305d\u306e\uff12\u3078\u7d9a\u304f**](http://qiita.com/TomoakiYAMAGUCHI/items/469b747078879dc7f3da)\n", "tags": ["MQTT-SN", "mqtt"]}