{"context": " More than 1 year has passed since last update.Python\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u6642\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044tips\u306e\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u90e8\u5206\u3092\u5206\u5272\u3057\u307e\u3057\u305f\uff0e\n\u5c11\u3057\u30de\u30a4\u30ca\u30fc\u3060\u304c\uff0c\u81ea\u5206\u304c\u4f7f\u3063\u3066\u3044\u3066\u4fbf\u5229\u3060\u3068\u611f\u3058\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6319\u3052\u308b\uff0e\n\n\u6570\u5b66\u95a2\u6570\u306e\u96c6\u5408math\n\u3044\u305a\u308c\u66f8\u304f\uff0e\n\n\u9806\u5217\uff0c\u7d44\u5408\u305b\u306a\u3069\u304c\u5f97\u3089\u308c\u308bitertools\n9.7. itertools \u2014 \u52b9\u7387\u7684\u306a\u30eb\u30fc\u30d7\u5b9f\u884c\u306e\u305f\u3081\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u751f\u6210\u95a2\u6570\nPython \u3067\u7d44\u307f\u5408\u308f\u305b\u3084\u9806\u5217\u3092\u5f97\u308b\u3068\u304d\u306f itertools \u3092\u4f7f\u3046 | CUBE SUGAR STORAGE\n\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u8a70\u307e\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\uff0e\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\uff0c\u9806\u5217\uff0c\u7d44\u5408\u305b\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u91cd\u5b9d\u3059\u308b(C++\u306b\u304a\u3051\u308bnext_permutation\u306a\u3069\u306b\u76f8\u5f53)\uff0e\n\u81ea\u5206\u3067\u591a\u91cd\u30eb\u30fc\u30d7\u3092\u56de\u3059\u306a\u3069\u3059\u308b\u3088\u308a\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u306e\u3067\uff0c\u7a4d\u6975\u7684\u306b\u4f7f\u3063\u3066\u3044\u304f\u3079\u304d\uff0e\n\npermutations.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u304b\u3089\u8981\u7d20\u30922\u3064\u9078\u3093\u3067\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3057\u306a\u3044\n# \u9806\u5e8f\u306f\u8003\u616e\u3059\u308b(\u9806\u5217)\nfor elem in itertools.permutations(l, 2):\n    print elem # elem\u306b\u306f\u4e26\u3079\u305f\u8981\u7d20\u306e\u30bf\u30d7\u30eb\u304c\u4ee3\u5165\u3055\u308c\u308b\n\n\n\noutput\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 1)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 1)\n(3, 2)\n(3, 4)\n(3, 5)\n(4, 1)\n(4, 2)\n(4, 3)\n(4, 5)\n(5, 1)\n(5, 2)\n(5, 3)\n(5, 4)\n\n\n\ncombinations.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u304b\u3089\u8981\u7d20\u30923\u3064\u9078\u3093\u3067\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3057\u306a\u3044\n# \u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044(\u7d44\u5408\u305b)\nfor elem in itertools.combinations(l, 3):\n    print elem\n\n\n\noutput\n(1, 2, 3)\n(1, 2, 4)\n(1, 2, 5)\n(1, 3, 4)\n(1, 3, 5)\n(1, 4, 5)\n(2, 3, 4)\n(2, 3, 5)\n(2, 4, 5)\n(3, 4, 5)\n\n\n\u3061\u306a\u307f\u306b\uff0c\u91cd\u8907\u3092\u8003\u616e\u3057\u305f\u7d44\u5408\u305b\u3084\uff0c\u30c7\u30ab\u30eb\u30c8\u7a4d(\u76f4\u7a4d)\u3082\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\ncombinations_with_replacement.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u306e\u5404\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e2\u3064\u7d44\u3092\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3059\u308b\n# \u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044\nfor elem in itertools.product(l, repeat=2):\n    print elem\n\n\n\noutput\n(1, 1)\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 2)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 3)\n(3, 4)\n(3, 5)\n(4, 4)\n(4, 5)\n(5, 5)\n\n\n\ncartesian_product.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u306e\u5404\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e2\u3064\u7d44\u3092\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3059\u308b\n# \u9806\u5e8f\u306f\u8003\u616e\u3059\u308b\nfor elem in itertools.product(l, repeat=2):\n    print elem\n\n# \u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\nfor a in l:\n    for b in l:\n        print (a, b) \n\n\n\noutput\n(1, 1)\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 1)\n(2, 2)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 1)\n(3, 2)\n(3, 3)\n(3, 4)\n(3, 5)\n(4, 1)\n(4, 2)\n(4, 3)\n(4, 4)\n(4, 5)\n(5, 1)\n(5, 2)\n(5, 3)\n(5, 4)\n(5, 5)\n\n\n\ncollections\n8.3. collections \u2014 \u9ad8\u6027\u80fd\u306a\u30b3\u30f3\u30c6\u30ca\u30fb\u30c7\u30fc\u30bf\u578b \u2014 Python 2.7ja1 documentation\nPython\u306ecollections\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5730\u5473\u306b\u4fbf\u5229 - \u552f\u7269\u662f\u771f @Scaled_Wurm\n\ndefaultdict\ncollections.defaultdict\u306f\uff0c\u305d\u306e\u540d\u306e\u901a\u308a\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064dict\uff0e\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\uff0c\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u6210\u3059\u308b\u6a5f\u4f1a\u304c\u591a\u3044(\u7279\u306b\u5b9f\u88c5\u30b2\u30fc\u554f\u984c\u306b\u591a\u3044)\uff0e\n\u4f8b\u3048\u3070\uff0c\u5165\u529b\u306b\u5b58\u5728\u3059\u308b\u82f1\u5358\u8a9e\u306b\u3064\u3044\u3066\uff0c\u305d\u306e\u983b\u5ea6\u3092\u6c42\u3081\u308b\u3088\u3046\u306a\u554f\u984c\u304c\u51fa\u984c\u3055\u308c\u305f\u969b\u306b\u306f\uff0cdict\u3092\u7528\u3044\u3066\u305d\u308c\u305e\u308c\u306e\u5358\u8a9e\u306b\u5bfe\u5fdc\u3057\u305f\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\uff0cdict\u306f\uff0c\u30ad\u30fc\u3092\u521d\u671f\u5316\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u305f\u3081\u9762\u5012\uff0e\ndefaultdict\u3092\u4f7f\u3046\u3053\u3068\u3067\uff0c\u521d\u671f\u5316\u3092\u6e1b\u3089\u3057\uff0c\u30b3\u30fc\u30c9\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\nfrom collections import defaultdict\n\nl = ['to', 'be', 'or', 'not', 'to', 'be', 'that', 'is', 'the', 'question']\n\n# dict\u306e\u5834\u5408\nd = {}\nfor e in l:\n    # \u6bce\u56de\u30ad\u30fc\u5024\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\uff0c\u306a\u3044\u5834\u5408\u306f\u521d\u671f\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n    if e in d.keys():\n        d[e] += 1\n    else:\n        d[e] = 1\nprint d # {'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2}\n\ndd = defaultdict(int) # \u3059\u3079\u3066\u306e\u30ad\u30fc\u304c0\u3067\u521d\u671f\u5316\u3055\u308c\u308b\nfor e in l:\n    dd[e] += 1 # \u521d\u671f\u5316\u306e\u5fc5\u8981\u304c\u306a\u3044\nprint dd # defaultdict(<type 'int'>, {'be': 2, 'that': 1, 'is': 1, 'question': 1, 'to': 2, 'not': 1, 'the': 1, 'or': 1})\nprint dd['be'] # 2\n\ndd2 = defaultdict(list) # \u3059\u3079\u3066\u306e\u30ad\u30fc\u304c[]\u3067\u521d\u671f\u5316\u3055\u308c\u308b\ndd2['a'].append(1)\nprint dd2 # defaultdict(<type 'list'>, {'a': [1]})\n\n\n\u30ab\u30a6\u30f3\u30bf\u4f5c\u6210\u306b\u91cd\u5b9d\u3059\u308bCounter\ncollections.Counter\u306f\uff0c\u30ab\u30a6\u30f3\u30bf\u4f5c\u6210\u306b\u7279\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\uff0c\u81ea\u52d5\u7684\u306b0\u304c\u521d\u671f\u5024\u3068\u3055\u308c\u308b\uff0e\n\u3053\u308c\u3060\u3051\u3060\u3068defautdict(int)\u3068\u7b49\u4fa1\u3060\u304c\uff0c\u6700\u5927\u5024\u3092\u3059\u3050\u306b\u6c42\u3081\u3089\u308c\u308b\u306a\u3069\uff0c\u4ed6\u306b\u3082\u3044\u304f\u3064\u304b\u4fbf\u5229\u6a5f\u80fd\u304c\u3042\u308b\uff0e\nfrom collections import Counter\n\nl = ['to', 'be', 'or', 'not', 'to', 'be', 'that', 'is', 'the', 'question']\n\nc = Counter()\nfor e in l:\n    c[e] += 1\nprint c # Counter({'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2})\nprint c['be'] # 2\n\n# \u30ea\u30b9\u30c8\u306a\u3069\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\uff0c\u81ea\u52d5\u7684\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u308b\nc2 = Counter(l) \nprint c2 # Counter({'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2})\n\n# \u30ab\u30a6\u30f3\u30bf\u306e\u5024\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\nprint c.most_common() # [('be', 2), ('to', 2), ('that', 1), ('is', 1), ('question', 1), ('not', 1), ('the', 1), ('or', 1)]\n\n# \u30ab\u30a6\u30f3\u30bf\u306e\u5024\u304c\u6700\u5927\u306e\u3082\u306e\u304b\u3089\u9806\u306b3\u3064\u3092\u51fa\u529b\nprint c.most_common(3) # [('be', 2), ('to', 2), ('that', 1)]\n\n\n[Python\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u6642\u306b\u77e5\u3063\u3066\u304a\u304d\u305f\u3044tips](http://qiita.com/lethe2211/items/b91cc9e2b355ad32f1e6)\u306e\uff0c\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3064\u3044\u3066\u306e\u90e8\u5206\u3092\u5206\u5272\u3057\u307e\u3057\u305f\uff0e\n\n\u5c11\u3057\u30de\u30a4\u30ca\u30fc\u3060\u304c\uff0c\u81ea\u5206\u304c\u4f7f\u3063\u3066\u3044\u3066\u4fbf\u5229\u3060\u3068\u611f\u3058\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6319\u3052\u308b\uff0e\n\n## \u6570\u5b66\u95a2\u6570\u306e\u96c6\u5408math\n\n\u3044\u305a\u308c\u66f8\u304f\uff0e\n\n## \u9806\u5217\uff0c\u7d44\u5408\u305b\u306a\u3069\u304c\u5f97\u3089\u308c\u308bitertools\n\n[9.7. itertools \u2014 \u52b9\u7387\u7684\u306a\u30eb\u30fc\u30d7\u5b9f\u884c\u306e\u305f\u3081\u306e\u30a4\u30c6\u30ec\u30fc\u30bf\u751f\u6210\u95a2\u6570](http://docs.python.jp/2/library/itertools.html)\n\n[Python \u3067\u7d44\u307f\u5408\u308f\u305b\u3084\u9806\u5217\u3092\u5f97\u308b\u3068\u304d\u306f itertools \u3092\u4f7f\u3046 | CUBE SUGAR STORAGE](http://momijiame.tumblr.com/post/68655902597/python-itertools)\n\n\u30a4\u30c6\u30ec\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u8a70\u307e\u3063\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\uff0e\n\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\uff0c\u9806\u5217\uff0c\u7d44\u5408\u305b\u3092\u751f\u6210\u3059\u308b\u969b\u306b\u91cd\u5b9d\u3059\u308b(C++\u306b\u304a\u3051\u308bnext_permutation\u306a\u3069\u306b\u76f8\u5f53)\uff0e\n\u81ea\u5206\u3067\u591a\u91cd\u30eb\u30fc\u30d7\u3092\u56de\u3059\u306a\u3069\u3059\u308b\u3088\u308a\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3059\u308b\u306e\u3067\uff0c\u7a4d\u6975\u7684\u306b\u4f7f\u3063\u3066\u3044\u304f\u3079\u304d\uff0e\n\n```python:permutations.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u304b\u3089\u8981\u7d20\u30922\u3064\u9078\u3093\u3067\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3057\u306a\u3044\n# \u9806\u5e8f\u306f\u8003\u616e\u3059\u308b(\u9806\u5217)\nfor elem in itertools.permutations(l, 2):\n    print elem # elem\u306b\u306f\u4e26\u3079\u305f\u8981\u7d20\u306e\u30bf\u30d7\u30eb\u304c\u4ee3\u5165\u3055\u308c\u308b\n```\n\n```python:output\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 1)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 1)\n(3, 2)\n(3, 4)\n(3, 5)\n(4, 1)\n(4, 2)\n(4, 3)\n(4, 5)\n(5, 1)\n(5, 2)\n(5, 3)\n(5, 4)\n```\n\n```python:combinations.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u304b\u3089\u8981\u7d20\u30923\u3064\u9078\u3093\u3067\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3057\u306a\u3044\n# \u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044(\u7d44\u5408\u305b)\nfor elem in itertools.combinations(l, 3):\n    print elem\n```\n\n```python:output\n(1, 2, 3)\n(1, 2, 4)\n(1, 2, 5)\n(1, 3, 4)\n(1, 3, 5)\n(1, 4, 5)\n(2, 3, 4)\n(2, 3, 5)\n(2, 4, 5)\n(3, 4, 5)\n```\n\n\u3061\u306a\u307f\u306b\uff0c\u91cd\u8907\u3092\u8003\u616e\u3057\u305f\u7d44\u5408\u305b\u3084\uff0c\u30c7\u30ab\u30eb\u30c8\u7a4d(\u76f4\u7a4d)\u3082\u6c42\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n```python:combinations_with_replacement.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u306e\u5404\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e2\u3064\u7d44\u3092\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3059\u308b\n# \u9806\u5e8f\u306f\u8003\u616e\u3057\u306a\u3044\nfor elem in itertools.product(l, repeat=2):\n    print elem\n```\n\n```python:output\n(1, 1)\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 2)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 3)\n(3, 4)\n(3, 5)\n(4, 4)\n(4, 5)\n(5, 5)\n```\n\n```python:cartesian_product.py\nimport itertools\n\nl = range(1, 6) # [1, 2, 3, 4, 5]\n\n# l\u306e\u5404\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u3082\u306e\u306e2\u3064\u7d44\u3092\u4e26\u3079\u308b\n# \u91cd\u8907\u306f\u8003\u616e\u3059\u308b\n# \u9806\u5e8f\u306f\u8003\u616e\u3059\u308b\nfor elem in itertools.product(l, repeat=2):\n    print elem\n    \n# \u4e0a\u306e\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3068\u7b49\u4fa1\nfor a in l:\n    for b in l:\n        print (a, b) \n```\n\n```python:output\n(1, 1)\n(1, 2)\n(1, 3)\n(1, 4)\n(1, 5)\n(2, 1)\n(2, 2)\n(2, 3)\n(2, 4)\n(2, 5)\n(3, 1)\n(3, 2)\n(3, 3)\n(3, 4)\n(3, 5)\n(4, 1)\n(4, 2)\n(4, 3)\n(4, 4)\n(4, 5)\n(5, 1)\n(5, 2)\n(5, 3)\n(5, 4)\n(5, 5)\n```\n\n## collections\n\n[8.3. collections \u2014 \u9ad8\u6027\u80fd\u306a\u30b3\u30f3\u30c6\u30ca\u30fb\u30c7\u30fc\u30bf\u578b \u2014 Python 2.7ja1 documentation](http://docs.python.jp/2/library/collections.html)\n\n[Python\u306ecollections\u30e2\u30b8\u30e5\u30fc\u30eb\u304c\u5730\u5473\u306b\u4fbf\u5229 - \u552f\u7269\u662f\u771f @Scaled_Wurm](http://sucrose.hatenablog.com/entry/2014/04/21/000909)\n\n### defaultdict\n\ncollections.defaultdict\u306f\uff0c\u305d\u306e\u540d\u306e\u901a\u308a\uff0c\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u3092\u6301\u3064dict\uff0e\n\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u306f\uff0c\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u6210\u3059\u308b\u6a5f\u4f1a\u304c\u591a\u3044(\u7279\u306b\u5b9f\u88c5\u30b2\u30fc\u554f\u984c\u306b\u591a\u3044)\uff0e\n\n\u4f8b\u3048\u3070\uff0c\u5165\u529b\u306b\u5b58\u5728\u3059\u308b\u82f1\u5358\u8a9e\u306b\u3064\u3044\u3066\uff0c\u305d\u306e\u983b\u5ea6\u3092\u6c42\u3081\u308b\u3088\u3046\u306a\u554f\u984c\u304c\u51fa\u984c\u3055\u308c\u305f\u969b\u306b\u306f\uff0cdict\u3092\u7528\u3044\u3066\u305d\u308c\u305e\u308c\u306e\u5358\u8a9e\u306b\u5bfe\u5fdc\u3057\u305f\u30ab\u30a6\u30f3\u30bf\u3092\u4f5c\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\uff0cdict\u306f\uff0c\u30ad\u30fc\u3092\u521d\u671f\u5316\u3057\u306a\u3044\u3068\u30a8\u30e9\u30fc\u304c\u51fa\u308b\u305f\u3081\u9762\u5012\uff0e\n\ndefaultdict\u3092\u4f7f\u3046\u3053\u3068\u3067\uff0c\u521d\u671f\u5316\u3092\u6e1b\u3089\u3057\uff0c\u30b3\u30fc\u30c9\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n```python\nfrom collections import defaultdict\n\nl = ['to', 'be', 'or', 'not', 'to', 'be', 'that', 'is', 'the', 'question']\n\n# dict\u306e\u5834\u5408\nd = {}\nfor e in l:\n    # \u6bce\u56de\u30ad\u30fc\u5024\u304c\u3042\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\uff0c\u306a\u3044\u5834\u5408\u306f\u521d\u671f\u5316\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n    if e in d.keys():\n        d[e] += 1\n    else:\n        d[e] = 1\nprint d # {'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2}\n\ndd = defaultdict(int) # \u3059\u3079\u3066\u306e\u30ad\u30fc\u304c0\u3067\u521d\u671f\u5316\u3055\u308c\u308b\nfor e in l:\n    dd[e] += 1 # \u521d\u671f\u5316\u306e\u5fc5\u8981\u304c\u306a\u3044\nprint dd # defaultdict(<type 'int'>, {'be': 2, 'that': 1, 'is': 1, 'question': 1, 'to': 2, 'not': 1, 'the': 1, 'or': 1})\nprint dd['be'] # 2\n\ndd2 = defaultdict(list) # \u3059\u3079\u3066\u306e\u30ad\u30fc\u304c[]\u3067\u521d\u671f\u5316\u3055\u308c\u308b\ndd2['a'].append(1)\nprint dd2 # defaultdict(<type 'list'>, {'a': [1]})\n```\n\n### \u30ab\u30a6\u30f3\u30bf\u4f5c\u6210\u306b\u91cd\u5b9d\u3059\u308bCounter\n\ncollections.Counter\u306f\uff0c\u30ab\u30a6\u30f3\u30bf\u4f5c\u6210\u306b\u7279\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\uff0c\u81ea\u52d5\u7684\u306b0\u304c\u521d\u671f\u5024\u3068\u3055\u308c\u308b\uff0e\n\u3053\u308c\u3060\u3051\u3060\u3068`defautdict(int)`\u3068\u7b49\u4fa1\u3060\u304c\uff0c\u6700\u5927\u5024\u3092\u3059\u3050\u306b\u6c42\u3081\u3089\u308c\u308b\u306a\u3069\uff0c\u4ed6\u306b\u3082\u3044\u304f\u3064\u304b\u4fbf\u5229\u6a5f\u80fd\u304c\u3042\u308b\uff0e\n\n```python\nfrom collections import Counter\n\nl = ['to', 'be', 'or', 'not', 'to', 'be', 'that', 'is', 'the', 'question']\n\nc = Counter()\nfor e in l:\n    c[e] += 1\nprint c # Counter({'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2})\nprint c['be'] # 2\n\n# \u30ea\u30b9\u30c8\u306a\u3069\u3092\u5f15\u6570\u306b\u6e21\u3059\u3068\uff0c\u81ea\u52d5\u7684\u306b\u30ab\u30a6\u30f3\u30c8\u3055\u308c\u308b\nc2 = Counter(l) \nprint c2 # Counter({'be': 2, 'is': 1, 'not': 1, 'or': 1, 'question': 1, 'that': 1, 'the': 1, 'to': 2})\n\n# \u30ab\u30a6\u30f3\u30bf\u306e\u5024\u306e\u964d\u9806\u306b\u30bd\u30fc\u30c8\nprint c.most_common() # [('be', 2), ('to', 2), ('that', 1), ('is', 1), ('question', 1), ('not', 1), ('the', 1), ('or', 1)]\n\n# \u30ab\u30a6\u30f3\u30bf\u306e\u5024\u304c\u6700\u5927\u306e\u3082\u306e\u304b\u3089\u9806\u306b3\u3064\u3092\u51fa\u529b\nprint c.most_common(3) # [('be', 2), ('to', 2), ('that', 1)]\n```\n", "tags": ["\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "Python"]}