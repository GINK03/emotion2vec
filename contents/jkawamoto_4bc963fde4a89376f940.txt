{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nReact \u304c\u9762\u767d\u3044\u306e\u3067\uff0cGoogle Map \u3092\u4f7f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3082 React \u30d9\u30fc\u30b9\u306b\u79fb\u884c\u3057\u3088\u3046\u3068\u601d\u3063\u305f\uff0e\u4e88\u60f3\u901a\u308a\uff0c\u65e2\u306b\u30e9\u30a4\u30d6\u30e9\u30ea react-google-maps \u304c\u3042\u3063\u3066\uff0c\u3053\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3060\u3051\u308c\u3069\uff0c\u3069\u3046\u3082\u30aa\u30fc\u30d0\u30fc\u30b9\u30da\u30c3\u30af\u306a\u611f\u3058\u304c\u3059\u308b\uff0e\u305d\u3053\u3067\u7c21\u6613\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u3063\u305f\uff0e\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nMap \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\uff0e\u3088\u308a\u306b\u3088\u3063\u3066 Coffee-React \u3067\u3059\uff0e\n\nMap.cjsx\nMap = React.createClass\n\n  propTypes:\n    height: React.PropTypes.number.isRequired\n    lat: React.PropTypes.number.isRequired\n    lng: React.PropTypes.number.isRequired\n\n  getInitialState: ->\n    map: null\n    mousemove_listener: null\n    touchmove_listener: null\n\n  componentDidMount: ->\n    map = new google.maps.Map React.findDOMNode(@),\n      center: new google.maps.LatLng(@props.lat, @props.lng)\n      zoom: 15\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n\n    if \"onmousedown\" of window\n      # Use mouse events\n      @setState\n        mousemove_listener: google.maps.event.addListener map,\n                                                  \"mousemove\", (e) => @handleMouseMove e\n\n    if \"ontouchstart\" of window\n      # Use touch events\n      @setState\n        touchmove_listener: google.maps.event.addListener map,\n                                                  \"mousemove\", (e) => @handleTouchMove e\n\n    @setState\n      map: map\n\n  componentWillUnmount: ->\n    if @state.mousemove_listener?\n      google.maps.event.removeListener @state.mousemove_listener\n\n    if @state.touchmove_listener?\n      google.maps.event.removeListener @state.touchmove_listener\n\n  handleMouseDown: (e) ->\n    # Mouse down event handler.\n\n  handleMouseUp: (e) ->\n    # Mouse up event handler.\n\n  handleTouchStart: (e) ->\n    # Touch start event handler.\n\n  touchEndHandler: (e) ->\n    # Touch end event handler.\n\n  handleMouseMove: (e) ->\n    # Mouse move event handler.\n\n  handleTouchMove: (e) ->\n    # Touch move event handler.\n\n  render: ->\n    <div style={ height: @props.height } onMouseDown={ @handleMouseDown }\n         onMouseUp={ @handleMouseUp } onTouchStart={ @handleTouchStart }\n         onTouchEnd={ @handleTouchEnd } />\n\n\n\u9ad8\u3055\u306e\u307f\u5f8c\u304b\u3089\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0cheight \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\uff0elat, lng \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u30de\u30c3\u30d7\u4e2d\u5fc3\u5730\u70b9\u306e\u7def\u5ea6\u7d4c\u5ea6\u3067\u3059\uff0ezoom \u306a\u3069\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u672c\u5f53\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u5316\u3059\u3079\u304d\u3067\u3059\uff0e\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306b\u95a2\u3057\u3066\u306f\uff0cDOM \u30a4\u30d9\u30f3\u30c8\u306f\u4ed6\u306e React \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u540c\u69d8\u306b\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u304c\uff0cMouseMove \u30a4\u30d9\u30f3\u30c8\u306e\u307f\uff0c\u753b\u9762\u306e x-y \u5ea7\u6a19\u3067\u306f\u306a\u304f\u5730\u56f3\u4e0a\u306e\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081 Map API \u306e\u30a4\u30d9\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0ccomponentDidMount \u3067\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306e\u767b\u9332\u3068 componentWillUnmount \u3067\u306e\u767b\u9332\u524a\u9664\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\u307e\u305f\uff0c\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3082\u62fe\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c\u3069\u3053\u304b\u3067\nReact.initializeTouchEvents(true)\n\n\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n\u305d\u306e\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\nMarker \u3084 InfoWindow \u306a\u3069\u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\uff0e\n# \u306f\u3058\u3081\u306b\nReact \u304c\u9762\u767d\u3044\u306e\u3067\uff0cGoogle Map \u3092\u4f7f\u3063\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3082 React \u30d9\u30fc\u30b9\u306b\u79fb\u884c\u3057\u3088\u3046\u3068\u601d\u3063\u305f\uff0e\u4e88\u60f3\u901a\u308a\uff0c\u65e2\u306b\u30e9\u30a4\u30d6\u30e9\u30ea [react-google-maps](https://github.com/tomchentw/react-google-maps) \u304c\u3042\u3063\u3066\uff0c\u3053\u308c\u3092\u4f7f\u3048\u3070\u826f\u3044\u306e\u3060\u3051\u308c\u3069\uff0c\u3069\u3046\u3082\u30aa\u30fc\u30d0\u30fc\u30b9\u30da\u30c3\u30af\u306a\u611f\u3058\u304c\u3059\u308b\uff0e\u305d\u3053\u3067\u7c21\u6613\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u4f5c\u3063\u305f\uff0e\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nMap \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\uff0e\u3088\u308a\u306b\u3088\u3063\u3066 [Coffee-React](https://github.com/jsdf/coffee-react) \u3067\u3059\uff0e\n\n```coffee-script:Map.cjsx\nMap = React.createClass\n\n  propTypes:\n    height: React.PropTypes.number.isRequired\n    lat: React.PropTypes.number.isRequired\n    lng: React.PropTypes.number.isRequired\n\n  getInitialState: ->\n    map: null\n    mousemove_listener: null\n    touchmove_listener: null\n\n  componentDidMount: ->\n    map = new google.maps.Map React.findDOMNode(@),\n      center: new google.maps.LatLng(@props.lat, @props.lng)\n      zoom: 15\n      mapTypeId: google.maps.MapTypeId.ROADMAP\n\n    if \"onmousedown\" of window\n      # Use mouse events\n      @setState\n        mousemove_listener: google.maps.event.addListener map,\n                                                  \"mousemove\", (e) => @handleMouseMove e\n\n    if \"ontouchstart\" of window\n      # Use touch events\n      @setState\n        touchmove_listener: google.maps.event.addListener map,\n                                                  \"mousemove\", (e) => @handleTouchMove e\n\n    @setState\n      map: map\n\n  componentWillUnmount: ->\n    if @state.mousemove_listener?\n      google.maps.event.removeListener @state.mousemove_listener\n\n    if @state.touchmove_listener?\n      google.maps.event.removeListener @state.touchmove_listener\n\n  handleMouseDown: (e) ->\n    # Mouse down event handler.\n\n  handleMouseUp: (e) ->\n    # Mouse up event handler.\n\n  handleTouchStart: (e) ->\n    # Touch start event handler.\n\n  touchEndHandler: (e) ->\n    # Touch end event handler.\n\n  handleMouseMove: (e) ->\n    # Mouse move event handler.\n\n  handleTouchMove: (e) ->\n    # Touch move event handler.\n\n  render: ->\n    <div style={ height: @props.height } onMouseDown={ @handleMouseDown }\n         onMouseUp={ @handleMouseUp } onTouchStart={ @handleTouchStart }\n         onTouchEnd={ @handleTouchEnd } />\n```\n\n\u9ad8\u3055\u306e\u307f\u5f8c\u304b\u3089\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u306e\u3067\uff0cheight \u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\uff0elat, lng \u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u30de\u30c3\u30d7\u4e2d\u5fc3\u5730\u70b9\u306e\u7def\u5ea6\u7d4c\u5ea6\u3067\u3059\uff0ezoom \u306a\u3069\u30cf\u30fc\u30c9\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u3066\u3044\u308b\u3082\u306e\u3082\u672c\u5f53\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u5316\u3059\u3079\u304d\u3067\u3059\uff0e\n\n\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306b\u95a2\u3057\u3066\u306f\uff0cDOM \u30a4\u30d9\u30f3\u30c8\u306f\u4ed6\u306e React \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u540c\u69d8\u306b\u767b\u9332\u3057\u3066\u3044\u307e\u3059\u304c\uff0cMouseMove \u30a4\u30d9\u30f3\u30c8\u306e\u307f\uff0c\u753b\u9762\u306e x-y \u5ea7\u6a19\u3067\u306f\u306a\u304f\u5730\u56f3\u4e0a\u306e\u7def\u5ea6\u7d4c\u5ea6\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081 Map API \u306e\u30a4\u30d9\u30f3\u30c8\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u306e\u305f\u3081\uff0ccomponentDidMount \u3067\u30a4\u30d9\u30f3\u30c8\u30cf\u30f3\u30c9\u30e9\u306e\u767b\u9332\u3068 componentWillUnmount \u3067\u306e\u767b\u9332\u524a\u9664\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n\u307e\u305f\uff0c\u30bf\u30c3\u30c1\u30a4\u30d9\u30f3\u30c8\u3082\u62fe\u3046\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\uff0e\u305f\u3060\u3057\uff0c\u3069\u3053\u304b\u3067\n\n```coffee-script\nReact.initializeTouchEvents(true)\n```\n\n\u304c\u5fc5\u8981\u3067\u3059\uff0e\n\n# \u305d\u306e\u4ed6\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\nMarker \u3084 InfoWindow \u306a\u3069\u306f\u307e\u305f\u5225\u306e\u6a5f\u4f1a\u306b\uff0e\n", "tags": ["reactjs", "CoffeeScript", "GoogleMapsAPI"]}