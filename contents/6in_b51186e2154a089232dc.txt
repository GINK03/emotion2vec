{"tags": ["Nim"], "context": "\n\n\u6982\u8981\nnim\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u3092\u30b3\u30c4\u30b3\u30c4\u3068\u3002\nsqlite\u3068\u307b\u307c\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u30e1\u30e2\n\n# \u57fa\u672c\u64cd\u4f5c\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  let ddl = @[\n    sql\"\"\"drop table work\"\"\",\n    sql\"\"\"create table work (id integer,name varchar(50) not null)\"\"\"\n  ]\n  defer:\n    echo \"db closed\"\n    db.close()\n  # DDL\u3092\u5b9f\u884c\n  for cmd in ddl :\n    discard db.tryExec(cmd)\n  # \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\n  db.exec(sql\"BEGIN\")\n  db.exec(sql\"insert into work values(?,?)\",1,\"Mr.\u30b9\u30dd\u30c3\u30af\" )\n  db.exec(sql\"insert into work values(?,?)\",[\"2\",\"Mr.\u30d3\u30fc\u30f3\"] )\n  db.exec(sql\"insert into work values(?,?)\",@[\"3\",\"Mr.\u30b5\u30bf\u30f3\"] )\n  db.exec(sql\"COMMIT\")\n  # \u30bb\u30ec\u30af\u30c8\u3059\u308b\n  for x in db.fastRows(sql\"select id,name from work order by id desc\") :\n    echo x\n\n(stdout)\n@[3, Mr.\u30b5\u30bf\u30f3]\n@[2, Mr.\u30d3\u30fc\u30f3]\n@[1, Mr.\u30b9\u30dd\u30c3\u30af]\ndb closed\n\n\n# \u57fa\u672c\u64cd\u4f5c(serial\u3092\u8ffd\u52a0)\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  let ddl = @[\n    sql\"\"\"drop table work\"\"\",\n    sql\"\"\"create table work (id serial,name varchar(50) not null,primary key(id))\"\"\"\n  ]\n  defer:\n    echo \"db closed\"\n    db.close()\n  # DDL\u3092\u5b9f\u884c\n  for cmd in ddl :\n    discard db.tryExec(cmd)\n  # \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\n  db.exec(sql\"BEGIN\")\n  # \u8ffd\u52a0\u3057\u305f\u308c\u30b3\u30fc\u30c9\u306b\u81ea\u52d5\u63a1\u756a\u3055\u308c\u305f\u5024\u3092\u53d6\u308a\u51fa\u3059\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30b9\u30dd\u30c3\u30af\" )\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30d3\u30fc\u30f3\" )\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30b5\u30bf\u30f3\" )\n  echo \"\u66f4\u65b0\u3055\u308c\u305f\u884c=\",db.execAffectedRows(sql\"update work set name=? where id=?\",\"Mr.\u30db\u30fc\u30e0\u30ba\",3)\n  db.exec(sql\"COMMIT\")\n  # \u30bb\u30ec\u30af\u30c8\u3059\u308b\n  for x in db.fastRows(sql\"select id,name from work order by id\") :\n    echo x\n\n(stdout)\n\u8ffd\u52a0\u3055\u308c\u305fID=1\n\u8ffd\u52a0\u3055\u308c\u305fID=2\n\u8ffd\u52a0\u3055\u308c\u305fID=3\n\u66f4\u65b0\u3055\u308c\u305f\u884c=1\n@[1, Mr.\u30b9\u30dd\u30c3\u30af]\n@[2, Mr.\u30d3\u30fc\u30f3]\n@[3, Mr.\u30db\u30fc\u30e0\u30ba]\ndb closed\n\n\n# \u30a4\u30c6\u30ec\u30fc\u30bf+\u30d7\u30ea\u30da\u30a2\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  defer:\n    echo \"db closed\"\n    db.close()\n  # \u30d7\u30ea\u30da\u30a2\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\n  let preparedSql = db.prepare(\"select1\",sql\"select id,name from work order by id\",0)\n  # \u7206\u901f\u30bb\u30ec\u30af\u30c8\u305f\u3060\u3057\u3076\u3063\u58ca\u308c\u3084\u3059\u3044\u306e\u3067\u3001\u3059\u3079\u3066\u53d6\u308a\u51fa\u3059\u3068\u304d\u306b\u5229\u7528\u3057\u3066\u306d\u7684\u306a\u4e8b\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\n  for x in db.fastRows(preparedSql) :\n    echo \"fastRows=>\",x[0],\"/\",x[1]\n  # \u52d5\u304d\u306ffastRows\u3068\u4e00\u7dd2\u3060\u3051\u3069\u9045\u3044\u3067\u3059\u3002\u3067\u3082\u5b89\u5168\u3002\n  for x in db.rows(preparedSql) :\n    echo \"rows=>\",x[0],\"/\",x[1]\n  # instantRows\u3060\u304c\u3001\u30a4\u30f3\u30c7\u30af\u30b9\u3067\u53d6\u308c\u306a\u3044\u30fb\u30fb\u30fb\u30d0\u30b0\uff1f\n  for x in db.instantRows(preparedSql) :\n    echo \"instantRows=>\",x.len\n  # \u3053\u3061\u3089\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u306f\u306a\u304f\u3001\u3059\u3079\u3066\u306e\u884c\u3092\u53d6\u308a\u51fa\u3059\n  for x in db.getAllRows(preparedSql) :\n    echo \"getAllRows=>\",x[0],\"/\",x[1]\n\n(stdout)\nfastRows=>1/Mr.\u30b9\u30dd\u30c3\u30af\nfastRows=>2/Mr.\u30d3\u30fc\u30f3\nfastRows=>3/Mr.\u30db\u30fc\u30e0\u30ba\nrows=>1/Mr.\u30b9\u30dd\u30c3\u30af\nrows=>2/Mr.\u30d3\u30fc\u30f3\nrows=>3/Mr.\u30db\u30fc\u30e0\u30ba\ninstantRows=>2\ninstantRows=>2\ninstantRows=>2\ngetAllRows=>1/Mr.\u30b9\u30dd\u30c3\u30af\ngetAllRows=>2/Mr.\u30d3\u30fc\u30f3\ngetAllRows=>3/Mr.\u30db\u30fc\u30e0\u30ba\ndb closed\n\n# \u6982\u8981\nnim\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u64cd\u4f5c\u3092\u30b3\u30c4\u30b3\u30c4\u3068\u3002\nsqlite\u3068\u307b\u307c\u5909\u308f\u308a\u307e\u305b\u3093\u3002\n## \u4ee5\u4e0b\u30e1\u30e2\n### # \u57fa\u672c\u64cd\u4f5c\n```nim\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  let ddl = @[\n    sql\"\"\"drop table work\"\"\",\n    sql\"\"\"create table work (id integer,name varchar(50) not null)\"\"\"\n  ]\n  defer:\n    echo \"db closed\"\n    db.close()\n  # DDL\u3092\u5b9f\u884c\n  for cmd in ddl :\n    discard db.tryExec(cmd)\n  # \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\n  db.exec(sql\"BEGIN\")\n  db.exec(sql\"insert into work values(?,?)\",1,\"Mr.\u30b9\u30dd\u30c3\u30af\" )\n  db.exec(sql\"insert into work values(?,?)\",[\"2\",\"Mr.\u30d3\u30fc\u30f3\"] )\n  db.exec(sql\"insert into work values(?,?)\",@[\"3\",\"Mr.\u30b5\u30bf\u30f3\"] )\n  db.exec(sql\"COMMIT\")\n  # \u30bb\u30ec\u30af\u30c8\u3059\u308b\n  for x in db.fastRows(sql\"select id,name from work order by id desc\") :\n    echo x\n```\n```\n(stdout)\n@[3, Mr.\u30b5\u30bf\u30f3]\n@[2, Mr.\u30d3\u30fc\u30f3]\n@[1, Mr.\u30b9\u30dd\u30c3\u30af]\ndb closed\n```\n### # \u57fa\u672c\u64cd\u4f5c(serial\u3092\u8ffd\u52a0)\n```nim\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  let ddl = @[\n    sql\"\"\"drop table work\"\"\",\n    sql\"\"\"create table work (id serial,name varchar(50) not null,primary key(id))\"\"\"\n  ]\n  defer:\n    echo \"db closed\"\n    db.close()\n  # DDL\u3092\u5b9f\u884c\n  for cmd in ddl :\n    discard db.tryExec(cmd)\n  # \u30ec\u30b3\u30fc\u30c9\u3092\u633f\u5165\n  db.exec(sql\"BEGIN\")\n  # \u8ffd\u52a0\u3057\u305f\u308c\u30b3\u30fc\u30c9\u306b\u81ea\u52d5\u63a1\u756a\u3055\u308c\u305f\u5024\u3092\u53d6\u308a\u51fa\u3059\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30b9\u30dd\u30c3\u30af\" )\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30d3\u30fc\u30f3\" )\n  echo \"\u8ffd\u52a0\u3055\u308c\u305fID=\",db.tryInsertID(sql\"insert into work(name) values(?)\",\"Mr.\u30b5\u30bf\u30f3\" )\n  echo \"\u66f4\u65b0\u3055\u308c\u305f\u884c=\",db.execAffectedRows(sql\"update work set name=? where id=?\",\"Mr.\u30db\u30fc\u30e0\u30ba\",3)\n  db.exec(sql\"COMMIT\")\n  # \u30bb\u30ec\u30af\u30c8\u3059\u308b\n  for x in db.fastRows(sql\"select id,name from work order by id\") :\n    echo x\n```\n```\n(stdout)\n\u8ffd\u52a0\u3055\u308c\u305fID=1\n\u8ffd\u52a0\u3055\u308c\u305fID=2\n\u8ffd\u52a0\u3055\u308c\u305fID=3\n\u66f4\u65b0\u3055\u308c\u305f\u884c=1\n@[1, Mr.\u30b9\u30dd\u30c3\u30af]\n@[2, Mr.\u30d3\u30fc\u30f3]\n@[3, Mr.\u30db\u30fc\u30e0\u30ba]\ndb closed\n```\n### # \u30a4\u30c6\u30ec\u30fc\u30bf+\u30d7\u30ea\u30da\u30a2\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\n```nim\nimport db_postgres\nblock:\n  let db = open(\"127.0.0.1:5432\",\"nim\",\"nim\",\"sample\")\n  defer:\n    echo \"db closed\"\n    db.close()\n  # \u30d7\u30ea\u30da\u30a2\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\n  let preparedSql = db.prepare(\"select1\",sql\"select id,name from work order by id\",0)\n  # \u7206\u901f\u30bb\u30ec\u30af\u30c8\u305f\u3060\u3057\u3076\u3063\u58ca\u308c\u3084\u3059\u3044\u306e\u3067\u3001\u3059\u3079\u3066\u53d6\u308a\u51fa\u3059\u3068\u304d\u306b\u5229\u7528\u3057\u3066\u306d\u7684\u306a\u4e8b\u304c\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3057\u305f\n  for x in db.fastRows(preparedSql) :\n    echo \"fastRows=>\",x[0],\"/\",x[1]\n  # \u52d5\u304d\u306ffastRows\u3068\u4e00\u7dd2\u3060\u3051\u3069\u9045\u3044\u3067\u3059\u3002\u3067\u3082\u5b89\u5168\u3002\n  for x in db.rows(preparedSql) :\n    echo \"rows=>\",x[0],\"/\",x[1]\n  # instantRows\u3060\u304c\u3001\u30a4\u30f3\u30c7\u30af\u30b9\u3067\u53d6\u308c\u306a\u3044\u30fb\u30fb\u30fb\u30d0\u30b0\uff1f\n  for x in db.instantRows(preparedSql) :\n    echo \"instantRows=>\",x.len\n  # \u3053\u3061\u3089\u306f\u30a4\u30c6\u30ec\u30fc\u30bf\u3067\u306f\u306a\u304f\u3001\u3059\u3079\u3066\u306e\u884c\u3092\u53d6\u308a\u51fa\u3059\n  for x in db.getAllRows(preparedSql) :\n    echo \"getAllRows=>\",x[0],\"/\",x[1]\n```\n```\n(stdout)\nfastRows=>1/Mr.\u30b9\u30dd\u30c3\u30af\nfastRows=>2/Mr.\u30d3\u30fc\u30f3\nfastRows=>3/Mr.\u30db\u30fc\u30e0\u30ba\nrows=>1/Mr.\u30b9\u30dd\u30c3\u30af\nrows=>2/Mr.\u30d3\u30fc\u30f3\nrows=>3/Mr.\u30db\u30fc\u30e0\u30ba\ninstantRows=>2\ninstantRows=>2\ninstantRows=>2\ngetAllRows=>1/Mr.\u30b9\u30dd\u30c3\u30af\ngetAllRows=>2/Mr.\u30d3\u30fc\u30f3\ngetAllRows=>3/Mr.\u30db\u30fc\u30e0\u30ba\ndb closed\n```\n"}