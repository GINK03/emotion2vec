{"context": "[2016/08/17 19:51 - \u5c11\u3057\u624b\u76f4\u3057]\nQt\u3092\u3055\u308f\u308a\u59cb\u3081\u3066QML\u3068C++\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u5f15\u3063\u304b\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u9593\u9055\u3044\u3084\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u4e0b\u3055\u3044\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001QtCreator\u3067QtQuick\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30d9\u30fc\u30b9\u306b\u3057\u307e\u3059\u3002(\u3053\u3053\u3067\u306fui.qml\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093)\n\nmain.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    return app.exec();\n}\n\n\n\nmain.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n}\n\n\n\nC++\u304b\u3089QML\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u30a2\u30af\u30bb\u30b9\n\u3044\u308d\u3044\u308d\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fobjectName\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\nmain.cpp\u3067\u306froot\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u7d4c\u3066\u3001\u5b50\u8981\u7d20\u3067\u3042\u308bText\u3078QML\u5074\u3067\u5b9a\u7fa9\u3059\u308bobjectName\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\nmain.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    /* added */\n    //(1) Get an access to root object and qml object by objectName \"textObject\" defined in main.qml\n    QObject *rootObject = engine.rootObjects().first();\n    QObject *qmlObject = rootObject->findChild<QObject*>(\"textObject\");\n    // (2) set an object property\n    qmlObject->setProperty(\"text\", \"Text from C++\");\n    //----------\n\n    return app.exec();\n}\n\n\nQML\u5074\u3067\u306f\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5b50\u8981\u7d20\u306bobjectName\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\nmain.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        /*added*/\n        objectName: \u201dtextObject\u201d\n        // ----------\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n}\n\n\n\u7d50\u679c\n\n(\u898b\u306b\u304f\u304b\u3063\u305f\u306e\u3067\u8272\u3092\u3064\u3051\u3066\u30d5\u30a9\u30f3\u30c8\u3092\u5927\u304d\u304f\u3057\u3066\u3044\u307e\u3059)\n\u306a\u304a\u3001\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u3067\u306fC++\u304b\u3089QML\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306fC++\u3068QML\u306e\u72ec\u7acb\u6027\u306e\u89b3\u70b9\u304b\u3089\u63a8\u5968\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\nWarning: While it is possible to use C++ to access and manipulate QML objects deep into the object tree, we recommend that you do not take this approach outside of application testing and prototyping. One strength of QML and C++ integration is the ability to implement the QML user interface separately from the C++ logic and dataset backend, and this strategy breaks if the C++ side reaches deep into the QML components to manipulate them directly. This would make it difficult to, for example, swap a QML view component for another view, if the new component was missing a required objectName. It is better for the C++ implementation to know as little as possible about the QML user interface implementation and the composition of the QML object tree.\n\n\nQML\u304b\u3089C++\u306e\u30af\u30e9\u30b9\u3078\u30a2\u30af\u30bb\u30b9\nContextProperty\u306bQObject\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3001QML\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3059\u308b\u4f8b\u3092\u6319\u3052\u3066\u307f\u307e\u3059\u3002(\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306fQDateTime\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306bstring\u3092\u8fd4\u3059\u5f62\u306b\u3057\u3066\u307f\u307e\u3057\u305f)\n\u307e\u305a\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\u3002\n\napplicationdata.h\n#ifndef APPLICATIONDATA_H\n#define APPLICATIONDATA_H\n\n#include <QObject>\n#include <QString>\n\nclass ApplicationData:public QObject\n{\n    Q_OBJECT\npublic:\n    Q_INVOKABLE QString getTextFromCpp(){\n        return QString(\"This is the text from C++\");\n    }\n};\n\n#endif // APPLICATIONDATA_H\n\n\n\u7d9a\u3044\u3066\u3001cpp\u30d5\u30a1\u30a4\u30eb\u3068qml\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3002\n\nmain.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\n/*added*/\n#include <QQmlContext>\n#include \"applicationdata.h\"\n//----------\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    /*added*/\n    ApplicationData data;\n    engine.rootContext()->setContextProperty(\"applicationData\",&data);\n    //----------\n\n    return app.exec();\n}\n\n\n\n\nmain.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        /*changed*/\n        //text: qsTr(\"Hello World\")\n        text: applicationData.getTextFromCpp()\n        //----------\n        anchors.centerIn: parent\n    }\n\n\n}\n\n\n\u7d50\u679c\n\n\nSignal & Slot\n\u4eca\u56de\u306f\u3001QML\u306e\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067C++\u5074\u3078\u30b7\u30b0\u30ca\u30eb\u3092\u51fa\u3057\u3001C++\u5074\u306e\u30b9\u30ed\u30c3\u30c8\u3067\u53d7\u3051\u53d6\u3063\u305f\u3089\u3001\u9006\u306bC++\u5074\u304b\u3089QML\u5074\u3078\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308b\u3068\u3044\u3046\u306e\u3092\u4f8b\u306b\u3057\u307e\u3059\u3002\n\nC++\u3067Connect\n\u307e\u305a\u306f\u3001C++\u5074\u3067Connect\u3059\u308b\u4f8b\u3002cpp\u304b\u3089\u306e\u30b7\u30b0\u30ca\u30eb\u3067QML\u5074\u306eSlot\u304c\u8a8d\u8b58\u3055\u308c\u306a\u3044\u3001No such slot\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3067\u6ce3\u304b\u3055\u308c\u307e\u3057\u305f\u3002\u5f15\u6570\u3092QVariant\u306b\u3059\u308b\u3068\u3046\u307e\u304f\u3044\u304f\u3002\n\nmain.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n/*added*/\nimport QtQuick.Controls 2.0\n//----------\n\nWindow {\n    /*added*/\n    signal qmlSignal(string msg);\n    function qmlSlot(text)\n    {\n        console.log(\"qmlSlot is called with the text: \" + text)\n        textField.text = text;\n    }\n    //----------\n\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    /*deleted*/\n//    MouseArea {\n//        anchors.fill: parent\n//        onClicked: {\n//            Qt.quit();\n//        }\n//    }\n\n    Text {\n        /*added*/\n        id:textField\n        //----------\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n\n    /*added*/\n    Button{\n        id:aButton\n        text:\"Emit Signal!\"\n        anchors.centerIn: parent\n        anchors.verticalCenterOffset: 30\n        onClicked: qmlSignal(\"Hello from QML\")\n    }\n    //----------\n\n}\n\n\n\ncppsignalslot.h\n#ifndef CPPSIGNALSLOT_H\n#define CPPSIGNALSLOT_H\n\n#include <QObject>\n#include <QVariant>\n\nclass CppSignalSlot : public QObject\n{\n    Q_OBJECT\npublic:\n    explicit CppSignalSlot(QObject *parent = 0);\n\nsignals:\n    void cppSignal(QVariant text);\n\npublic slots:\n    void cppSlot(QString msg);\n};\n\n#endif // CPPSIGNALSLOT_H\n\n\n\ncppsignalslot.cpp\n#include \"cppsignalslot.h\"\n#include <QDebug>\n\nCppSignalSlot::CppSignalSlot(QObject *parent) : QObject(parent)\n{\n\n}\n\nvoid CppSignalSlot::cppSlot(QString msg)\n{\n    qDebug() << \"cppSlot is called with the message: \" << msg;\n    emit cppSignal(\"Hello from C++\");\n}\n\n\n\nmain.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n/*added*/\n#include <QQmlContext>\n#include \"cppsignalslot.h\"\n//----------\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    CppSignalSlot obj;\n\n    QObject *root = engine.rootObjects().first();\n\n    // Connect QML Signal to C++ Slot\n    QObject::connect(root, SIGNAL(qmlSignal(QString)),\n                     &obj,   SLOT(cppSlot(QString)));\n    // Connect C++ Signal to QML Slot\n    QObject::connect(&obj,   SIGNAL(cppSignal(QVariant)),\n                     root, SLOT(qmlSlot(QVariant)));\n\n    return app.exec();\n}\n\n\n\u7d50\u679c\n\u30af\u30ea\u30c3\u30af\u524d\n\n\u30af\u30ea\u30c3\u30af\u5f8c\n\n(\u4e0a\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3068window\u304c\u9055\u3046\u306e\u306f\u8a66\u9a13\u74b0\u5883\u304c\u9055\u3046\u305f\u3081\u3067\u3059\u3002\u3002\u3002\u305d\u308c\u4ee5\u4e0a\u306e\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093)\n\n[\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b]\ncppSlot is called with the message:  \"Hello from QML\"\nqml: qmlSlot is called with the text: Hello from C++\n\n\nQML\u3067Connect\n\u6b21\u306f\u540c\u3058\u4f8b\u3067QML\u5074\u3067Connect\u3059\u308b\u4f8b\u3067\u3059\u3002\u5f8c\u8ff0\u306e\u901a\u308a\u3001Cannot assign to non-existent property \u3068ReferenceError\u306b\u6ce3\u304b\u3055\u308c\u307e\u3057\u305f\u3002\n\nmain.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\nimport QtQuick.Controls 2.0\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n    /*deleted*/\n//    MouseArea {\n//        anchors.fill: parent\n//        onClicked: {\n//            Qt.quit();\n//        }\n//    }\n\n    Text {\n        id: textField\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n\n    Button{\n        text:\"Emit Signal!\"\n        anchors.centerIn: parent\n        anchors.verticalCenterOffset: 30\n        onClicked: cppSignalSlot.cppSlot(\"Hello from QML\")\n    }\n\n    Connections\n    {\n        target:cppSignalSlot\n        onCppSignal:{\n            console.log(\"received cppSignal:\" + text)\n            textField.text = text;\n        }\n    }\n}\n\n\n\ncppsignalslot.h\n#ifndef CPPSIGNALSLOT_H\n#define CPPSIGNALSLOT_H\n\n#include <QObject>\n\nclass CppSignalSlot : public QObject\n{\n    Q_OBJECT\npublic:\n    explicit CppSignalSlot(QObject *parent = 0);\n\nsignals:\n    void cppSignal(QString text);\n\npublic slots:\n    void cppSlot(QString text);\n};\n\n#endif // SIGNALSLOT_H\n\n\n\ncppsignalslot.cpp\n#include \"cppsignalslot.h\"\n#include <QDebug>\n\nCppSignalSlot::CppSignalSlot(QObject *parent) : QObject(parent)\n{\n\n}\n\nvoid CppSignalSlot::cppSlot(QString text)\n{\n    qDebug() << \"cppSlot is called with text: \" + text;\n    emit cppSignal(QString(\"Hello from C++\"));\n}\n\n\n\nmain.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n#include <QQmlContext>\n#include \"cppsignalslot.h\"\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n\n    SignalSlot obj;\n    // Put this before lading qml file!\n    engine.rootContext()->setContextProperty(\"cppSignalSlot\",&obj);\n\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    return app.exec();\n}\n\n\n\u3053\u3053\u3067\u30df\u30bd\u306a\u306e\u306f\u3001C++\u304b\u3089cppSignal()\u3067\u30b7\u30b0\u30ca\u30eb\u3092\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c\u3092onCppSignal\u3068\u66f8\u304f\u3053\u3068\u3067\u3059\u3002(\u8981\u3059\u308b\u306bC++\u5074\u306fLower Camel\u3067\u66f8\u3044\u3066\u3001QML\u5074\u306fon+Upper Camel\u3067\u66f8\u304d\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u307f\u305f\u3044\u3067\u3059)\n\u3042\u3068\u3001\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001main.cpp\u3067Root Object\u306eContext\u306b\u8a2d\u5b9a\u3059\u308b\u524d\u306bmain.qml\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002(\u3067\u3082\u3001\u52d5\u4f5c\u306f\u3059\u308b\u3002\u3002\u3002)\n\nQML Connections: Cannot assign to non-existent property \"OnCppSignal\"\nReferenceError: cppSignalSlot is not defined\n\n\n\u53c2\u8003\n\nIntegrating QML and C++\nQt Quick \u3067\u306e C++ \u00d7 QML \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u305f\nHow can I access my Window object properties from C++ while using QQmlApplicationEngine?\nHow to connect a QML gui with a c++ application\nQML2 to C++ and back again, with signals and slots\nExchange Data and Objects between C++ and QML and vice versa\nNot able to connect c++ signal to qml slot using QML connections\n\n\u305d\u3057\u3066\u3001\u7d50\u5c40Qt\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e00\u756a\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u30aa\u30c1\u3002\u3002\u3002\n[2016/08/17 19:51 - \u5c11\u3057\u624b\u76f4\u3057]\nQt\u3092\u3055\u308f\u308a\u59cb\u3081\u3066QML\u3068C++\u306e\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u3067\u5f15\u3063\u304b\u304b\u3063\u305f\u306e\u3067\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\u9593\u9055\u3044\u3084\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u3054\u6307\u6458\u4e0b\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u3001QtCreator\u3067QtQuick\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u305f\u969b\u306b\u81ea\u52d5\u3067\u751f\u6210\u3055\u308c\u308b\u4e0b\u8a18\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30d9\u30fc\u30b9\u306b\u3057\u307e\u3059\u3002(\u3053\u3053\u3067\u306fui.qml\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093)\n\n```c++:main.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    return app.exec();\n}\n```\n\n```c++:main.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n}\n```\n\n\n#C++\u304b\u3089QML\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u30a2\u30af\u30bb\u30b9\n\u3044\u308d\u3044\u308d\u306a\u65b9\u6cd5\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u3053\u3053\u3067\u306fobjectName\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u65b9\u6cd5\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\nmain.cpp\u3067\u306froot\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u7d4c\u3066\u3001\u5b50\u8981\u7d20\u3067\u3042\u308bText\u3078QML\u5074\u3067\u5b9a\u7fa9\u3059\u308bobjectName\u3067\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n\n```c++:main.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    /* added */\n    //(1) Get an access to root object and qml object by objectName \"textObject\" defined in main.qml\n    QObject *rootObject = engine.rootObjects().first();\n    QObject *qmlObject = rootObject->findChild<QObject*>(\"textObject\");\n    // (2) set an object property\n    qmlObject->setProperty(\"text\", \"Text from C++\");\n    //----------\n    \n    return app.exec();\n}\n```\n\nQML\u5074\u3067\u306f\u30a2\u30af\u30bb\u30b9\u3057\u305f\u3044\u5b50\u8981\u7d20\u306bobjectName\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n```c++:main.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        /*added*/\n        objectName: \u201dtextObject\u201d\n        // ----------\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n}\n```\n**\u7d50\u679c**\n![cpp2qml.png](https://qiita-image-store.s3.amazonaws.com/0/120538/6764f854-5754-56d9-9075-78e49e887336.png)\n(\u898b\u306b\u304f\u304b\u3063\u305f\u306e\u3067\u8272\u3092\u3064\u3051\u3066\u30d5\u30a9\u30f3\u30c8\u3092\u5927\u304d\u304f\u3057\u3066\u3044\u307e\u3059)\n\n\u306a\u304a\u3001\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u3067\u306fC++\u304b\u3089QML\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306fC++\u3068QML\u306e\u72ec\u7acb\u6027\u306e\u89b3\u70b9\u304b\u3089\u63a8\u5968\u3057\u3066\u3044\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n> **Warning**: While it is possible to use C++ to access and manipulate QML objects deep into the object tree, we recommend that you do not take this approach outside of application testing and prototyping. One strength of QML and C++ integration is the ability to implement the QML user interface separately from the C++ logic and dataset backend, and this strategy breaks if the C++ side reaches deep into the QML components to manipulate them directly. This would make it difficult to, for example, swap a QML view component for another view, if the new component was missing a required ``objectName``. It is better for the C++ implementation to know as little as possible about the QML user interface implementation and the composition of the QML object tree.\n\n#QML\u304b\u3089C++\u306e\u30af\u30e9\u30b9\u3078\u30a2\u30af\u30bb\u30b9\nContextProperty\u306bQObject\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3001QML\u304b\u3089\u30e1\u30bd\u30c3\u30c9\u3092\u30b3\u30fc\u30eb\u3059\u308b\u4f8b\u3092\u6319\u3052\u3066\u307f\u307e\u3059\u3002(\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u306fQDateTime\u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3082\u3063\u3068\u30b7\u30f3\u30d7\u30eb\u306bstring\u3092\u8fd4\u3059\u5f62\u306b\u3057\u3066\u307f\u307e\u3057\u305f)\n\n\u307e\u305a\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u6e96\u5099\u3002\n\n```c++:applicationdata.h\n#ifndef APPLICATIONDATA_H\n#define APPLICATIONDATA_H\n\n#include <QObject>\n#include <QString>\n\nclass ApplicationData:public QObject\n{\n    Q_OBJECT\npublic:\n    Q_INVOKABLE QString getTextFromCpp(){\n        return QString(\"This is the text from C++\");\n    }\n};\n\n#endif // APPLICATIONDATA_H\n```\n\n\u7d9a\u3044\u3066\u3001cpp\u30d5\u30a1\u30a4\u30eb\u3068qml\u30d5\u30a1\u30a4\u30eb\u3092\u5909\u66f4\u3002\n\n```c++:main.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n\n/*added*/\n#include <QQmlContext>\n#include \"applicationdata.h\"\n//----------\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    /*added*/\n    ApplicationData data;\n    engine.rootContext()->setContextProperty(\"applicationData\",&data);\n    //----------\n\n    return app.exec();\n}\n\n```\n\n```c++:main.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    MouseArea {\n        anchors.fill: parent\n        onClicked: {\n            Qt.quit();\n        }\n    }\n\n    Text {\n        /*changed*/\n        //text: qsTr(\"Hello World\")\n        text: applicationData.getTextFromCpp()\n        //----------\n        anchors.centerIn: parent\n    }\n\n\n}\n```\n\n**\u7d50\u679c**\n![qml2cpp.png](https://qiita-image-store.s3.amazonaws.com/0/120538/a2d6f133-7708-45fc-de54-759b805d66dc.png)\n\n\n# Signal & Slot\n\u4eca\u56de\u306f\u3001QML\u306e\u30dc\u30bf\u30f3\u30af\u30ea\u30c3\u30af\u3067C++\u5074\u3078\u30b7\u30b0\u30ca\u30eb\u3092\u51fa\u3057\u3001C++\u5074\u306e\u30b9\u30ed\u30c3\u30c8\u3067\u53d7\u3051\u53d6\u3063\u305f\u3089\u3001\u9006\u306bC++\u5074\u304b\u3089QML\u5074\u3078\u30b7\u30b0\u30ca\u30eb\u3092\u9001\u308b\u3068\u3044\u3046\u306e\u3092\u4f8b\u306b\u3057\u307e\u3059\u3002\n\n## C++\u3067Connect\n\u307e\u305a\u306f\u3001C++\u5074\u3067Connect\u3059\u308b\u4f8b\u3002cpp\u304b\u3089\u306e\u30b7\u30b0\u30ca\u30eb\u3067QML\u5074\u306eSlot\u304c\u8a8d\u8b58\u3055\u308c\u306a\u3044\u3001No such slot\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3067\u6ce3\u304b\u3055\u308c\u307e\u3057\u305f\u3002\u5f15\u6570\u3092QVariant\u306b\u3059\u308b\u3068\u3046\u307e\u304f\u3044\u304f\u3002\n\n```c++:main.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\n/*added*/\nimport QtQuick.Controls 2.0\n//----------\n\nWindow {\n    /*added*/\n    signal qmlSignal(string msg);\n    function qmlSlot(text)\n    {\n        console.log(\"qmlSlot is called with the text: \" + text)\n        textField.text = text;\n    }\n    //----------\n\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n\n    /*deleted*/\n//    MouseArea {\n//        anchors.fill: parent\n//        onClicked: {\n//            Qt.quit();\n//        }\n//    }\n\n    Text {\n        /*added*/\n        id:textField\n        //----------\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n\n    /*added*/\n    Button{\n        id:aButton\n        text:\"Emit Signal!\"\n        anchors.centerIn: parent\n        anchors.verticalCenterOffset: 30\n        onClicked: qmlSignal(\"Hello from QML\")\n    }\n    //----------\n\n}\n```\n\n```c++:cppsignalslot.h\n#ifndef CPPSIGNALSLOT_H\n#define CPPSIGNALSLOT_H\n\n#include <QObject>\n#include <QVariant>\n\nclass CppSignalSlot : public QObject\n{\n    Q_OBJECT\npublic:\n    explicit CppSignalSlot(QObject *parent = 0);\n\nsignals:\n    void cppSignal(QVariant text);\n\npublic slots:\n    void cppSlot(QString msg);\n};\n\n#endif // CPPSIGNALSLOT_H\n```\n\n```c++:cppsignalslot.cpp\n#include \"cppsignalslot.h\"\n#include <QDebug>\n\nCppSignalSlot::CppSignalSlot(QObject *parent) : QObject(parent)\n{\n\n}\n\nvoid CppSignalSlot::cppSlot(QString msg)\n{\n    qDebug() << \"cppSlot is called with the message: \" << msg;\n    emit cppSignal(\"Hello from C++\");\n}\n```\n```c++:main.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n/*added*/\n#include <QQmlContext>\n#include \"cppsignalslot.h\"\n//----------\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    CppSignalSlot obj;\n\n    QObject *root = engine.rootObjects().first();\n\n    // Connect QML Signal to C++ Slot\n    QObject::connect(root, SIGNAL(qmlSignal(QString)),\n                     &obj,   SLOT(cppSlot(QString)));\n    // Connect C++ Signal to QML Slot\n    QObject::connect(&obj,   SIGNAL(cppSignal(QVariant)),\n                     root, SLOT(qmlSlot(QVariant)));\n\n    return app.exec();\n}\n```\n\n**\u7d50\u679c**\n\u30af\u30ea\u30c3\u30af\u524d\n![signalslot_beforeClicking.png](https://qiita-image-store.s3.amazonaws.com/0/120538/1b25fa21-c813-59f4-f35d-f982f346f6d7.png)\n\n\u30af\u30ea\u30c3\u30af\u5f8c\n![signalslot_afterClicked.png](https://qiita-image-store.s3.amazonaws.com/0/120538/fb09f4f8-654c-c1b5-07e7-55a9dcd97fec.png)\n(\u4e0a\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3068window\u304c\u9055\u3046\u306e\u306f\u8a66\u9a13\u74b0\u5883\u304c\u9055\u3046\u305f\u3081\u3067\u3059\u3002\u3002\u3002\u305d\u308c\u4ee5\u4e0a\u306e\u7406\u7531\u306f\u3042\u308a\u307e\u305b\u3093)\n\n> [\u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b]\n> cppSlot is called with the message:  \"Hello from QML\"\n> qml: qmlSlot is called with the text: Hello from C++\n\n## QML\u3067Connect\n\u6b21\u306f\u540c\u3058\u4f8b\u3067QML\u5074\u3067Connect\u3059\u308b\u4f8b\u3067\u3059\u3002\u5f8c\u8ff0\u306e\u901a\u308a\u3001Cannot assign to non-existent property \u3068ReferenceError\u306b\u6ce3\u304b\u3055\u308c\u307e\u3057\u305f\u3002\n\n\n```c++:main.qml\nimport QtQuick 2.5\nimport QtQuick.Window 2.2\nimport QtQuick.Controls 2.0\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n    /*deleted*/\n//    MouseArea {\n//        anchors.fill: parent\n//        onClicked: {\n//            Qt.quit();\n//        }\n//    }\n\n    Text {\n        id: textField\n        text: qsTr(\"Hello World\")\n        anchors.centerIn: parent\n    }\n\n    Button{\n        text:\"Emit Signal!\"\n        anchors.centerIn: parent\n        anchors.verticalCenterOffset: 30\n        onClicked: cppSignalSlot.cppSlot(\"Hello from QML\")\n    }\n\n    Connections\n    {\n        target:cppSignalSlot\n        onCppSignal:{\n            console.log(\"received cppSignal:\" + text)\n            textField.text = text;\n        }\n    }\n}\n```\n\n\n```c++:cppsignalslot.h\n#ifndef CPPSIGNALSLOT_H\n#define CPPSIGNALSLOT_H\n\n#include <QObject>\n\nclass CppSignalSlot : public QObject\n{\n    Q_OBJECT\npublic:\n    explicit CppSignalSlot(QObject *parent = 0);\n\nsignals:\n    void cppSignal(QString text);\n\npublic slots:\n    void cppSlot(QString text);\n};\n\n#endif // SIGNALSLOT_H\n```\n\n\n```c++:cppsignalslot.cpp\n#include \"cppsignalslot.h\"\n#include <QDebug>\n\nCppSignalSlot::CppSignalSlot(QObject *parent) : QObject(parent)\n{\n\n}\n\nvoid CppSignalSlot::cppSlot(QString text)\n{\n    qDebug() << \"cppSlot is called with text: \" + text;\n    emit cppSignal(QString(\"Hello from C++\"));\n}\n```\n\n```c++:main.cpp\n#include <QGuiApplication>\n#include <QQmlApplicationEngine>\n#include <QQmlContext>\n#include \"cppsignalslot.h\"\n\nint main(int argc, char *argv[])\n{\n    QGuiApplication app(argc, argv);\n\n    QQmlApplicationEngine engine;\n\n    SignalSlot obj;\n    // Put this before lading qml file!\n    engine.rootContext()->setContextProperty(\"cppSignalSlot\",&obj);\n\n    engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\")));\n\n    return app.exec();\n}\n```\n\u3053\u3053\u3067\u30df\u30bd\u306a\u306e\u306f\u3001C++\u304b\u3089cppSignal()\u3067\u30b7\u30b0\u30ca\u30eb\u3092\u51fa\u3057\u305f\u6642\u306e\u52d5\u4f5c\u3092onCppSignal\u3068\u66f8\u304f\u3053\u3068\u3067\u3059\u3002(\u8981\u3059\u308b\u306bC++\u5074\u306fLower Camel\u3067\u66f8\u3044\u3066\u3001QML\u5074\u306fon+Upper Camel\u3067\u66f8\u304d\u307e\u3057\u3087\u3046\u3068\u3044\u3046\u3053\u3068\u307f\u305f\u3044\u3067\u3059)\n\n\u3042\u3068\u3001\u30b3\u30e1\u30f3\u30c8\u306b\u3082\u66f8\u304d\u307e\u3057\u305f\u304c\u3001``main.cpp``\u3067Root Object\u306eContext\u306b\u8a2d\u5b9a\u3059\u308b\u524d\u306b``main.qml``\u3092\u30ed\u30fc\u30c9\u3059\u308b\u3068\u3001\u4e0b\u8a18\u306e\u30a8\u30e9\u30fc\u304c\u51fa\u307e\u3059\u3002(\u3067\u3082\u3001\u52d5\u4f5c\u306f\u3059\u308b\u3002\u3002\u3002)\n> QML Connections: Cannot assign to non-existent property \"OnCppSignal\"\n> ReferenceError: cppSignalSlot is not defined\n\n\n\n#\u53c2\u8003\n* [Integrating QML and C++](http://doc.qt.io/qt-5/qtqml-cppintegration-topic.html)\n* [Qt Quick \u3067\u306e C++ \u00d7 QML \u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u3064\u3044\u3066\u307e\u3068\u3081\u3066\u307f\u305f](http://tips.hecomi.com/entry/20130503/1367594609)\n* [How can I access my Window object properties from C++ while using QQmlApplicationEngine?](http://stackoverflow.com/questions/23177839/how-can-i-access-my-window-object-properties-from-c-while-using-qqmlapplicatio)\n* [How to connect a QML gui with a c++ application](http://hanckmann.com/2014/05/10/cpp-qml-interaction.html)\n* [QML2 to C++ and back again, with signals and slots](https://andrew-jones.com/blog/qml2-to-c-and-back-again-with-signals-and-slots/)\n* [Exchange Data and Objects between C++ and QML and vice versa](https://ruedigergad.com/2011/11/13/exchange-data-and-objects-between-c-and-qml-and-vice-versa/)\n* [Not able to connect c++ signal to qml slot using QML connections](https://forum.qt.io/topic/45683/not-able-to-connect-c-signal-to-qml-slot-using-qml-connections)\n\n\u305d\u3057\u3066\u3001\u7d50\u5c40Qt\u306e\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u4e00\u756a\u308f\u304b\u308a\u3084\u3059\u3044\u3068\u3044\u3046\u30aa\u30c1\u3002\u3002\u3002\n", "tags": ["Qt", "QML", "C++"]}