{"context": "\n\n\u306f\u3058\u3081\u306b\nAwesome Go \u3092\u898b\u305f\u308a\u300cchemical golang\u300d\u3068\u3044\u3046\u3088\u3046\u306a\u5358\u8a9e\u3067\u30b0\u30b0\u3063\u305f\u308a\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d Go\u8a00\u8a9e\u3067\u5316\u5b66\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3063\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u81ea\u529b\u3067\u30c1\u30e3\u30ec\u30f3\u30b8\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u5ff5\u306e\u305f\u3081\u3001\u5316\u5b66\u69cb\u9020\u5f0f\u3068\u306f\u4f55\u304b\u8aac\u660e\u3059\u308b\u3068\n\u2193\u3053\u3093\u306a\u611f\u3058\u306e\u56f3\u306e\u3053\u3068\u3067\u3059\u3002(\u3053\u308c\u306f\u30d3\u30bf\u30df\u30f3C\u306e\u69cb\u9020\u5f0f)\n\n\u3053\u306e\u3088\u3046\u306a\u5316\u5b66\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306b\u306f .cml (Chemical Markup Language) \u3084\u3089 .mol (MDL \u5f62\u5f0f) \u3084\u3089 .cdx (ChemDraw \u5f62\u5f0f) \u3068\u3044\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f CML \u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\nCML (Chemical Markup Language) \u3068\u306f\nCML (Chemical Markup Language) \u3068\u306f\u3001\u5316\u5b66\u69cb\u9020\u306a\u3069\u3092 XML \u3067\u5b9a\u7fa9\u3057\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\u516c\u5f0f\u30b5\u30a4\u30c8 \u2193\nChemical Markup Language\nhttp://www.xml-cml.org/\n\u4f8b\u3048\u3070\u5206\u5b50\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u4ed5\u69d8\u306f \u2193 \u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\nhttp://www.xml-cml.org/convention/molecular#introduction\n\u4e0a\u306e\u30da\u30fc\u30b8\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3088\u3046\u306b\u3001\u3053\u306e\u4ed5\u69d8\u306e\u901a\u308a\u306b\u578b\u3092\u5b9a\u7fa9\u3057\u3066 XML\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u3055\u3048\u3059\u308c\u3070\u3001\u5316\u5b66\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\nGo \u8a00\u8a9e\u306b\u306f \"encoding/xml\" \u3068\u3044\u3046 XML \u3092\u6271\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3059\u308c\u3070\u7c21\u5358\u306b\u3067\u304d\u305d\u3046\u306a\u4e88\u611f\u3002\n\n\u5b9f\u88c5\n\u3063\u3066\u306a\u308f\u3051\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nmain.go\npackage main\n\nimport (\n    \"encoding/xml\"\n    \"fmt\"\n    \"io/ioutil\"\n    \"os\"\n    \"strings\"\n)\n\ntype CML struct {\n    Xmlns           string     `xml:\"xmlns,attr\"`\n    XmlnsConvention string     `xml:\"xmlns:convention,attr\"`\n    Convention      string     `xml:\"convention,attr\"`\n    Molecule        []Molecule `xml:\"molecule\"`\n}\n\ntype Molecule struct {\n    ID               string    `xml:\"id,attr\"`\n    Count            int       `xml:\"count,attr\"`\n    AtomArray        AtomArray `xml:\"atomArray\"`\n    BondArray        BondArray `xml:\"bondArray\"`\n    Formula          Formula   `xml:\"formula\"`\n    Property         Property  `xml:\"property\"`\n    Label            Label     `xml:\"label\"`\n    Name             Name      `xml:\"name\"`\n    FormalCharge     string    `xml:\"formalCharge,attr\"`\n    SpinMultiplicity string    `xml:\"spinMultiplicity,attr\"`\n    Chirality        string    `xml:\"chirality,attr\"`\n    Spectrum         Spectrum  `xml:\"spectrum\"`\n\n    Title string `xml:\"title,attr\"`\n}\ntype AtomArray struct {\n    Atom []Atom `xml:\"atom\"`\n}\ntype BondArray struct {\n    Bond []Bond `xml:\"bond\"`\n}\n\ntype Formula struct {\n    Count     int    `xml:\"count,attr\"`\n    AtomArray AtomArray\n    Concise   string `xml:\"concise,attr\"`\n    Inline    string `xml:\"inline,attr\"`\n}\ntype Property struct {\n    Scalar  Scalar `xml:\"scalar\"`\n    DictRef string `xml:\"dictRef,attr\"`\n    Title   string `xml:\"title,attr\"`\n}\ntype Scalar struct {\n    Unit     string `xml:\"unit,attr\"`\n    DataType string `xml:\"dataType,attr\"`\n}\ntype Label struct {\n    DictRef string `xml:\"dictRef,attr\"`\n}\ntype Name struct {\n    DictRef string `xml:\"dictRef,attr\"`\n}\n\ntype Atom struct {\n    ID               string     `xml:\"id,attr\"`\n    ElementType      string     `xml:\"elementType,attr\"`\n    X2               float32    `xml:\"x2,attr\"`\n    Y2               float32    `xml:\"y2,attr\"`\n    X3               float32    `xml:\"x3,attr\"`\n    Y3               float32    `xml:\"y3,attr\"`\n    Z3               float32    `xml:\"z3,attr\"`\n    FormalCharge     string     `xml:\"formalCharge,attr\"`\n    IsotopeNumber    int        `xml:\"isotopeNumber,attr\"`\n    SpinMultiplicity string     `xml:\"spinMultiplicity,attr\"`\n    Count            int        `xml:\"count,attr\"`\n    HydrogenCount    int        `xml:\"hydrogenCount,attr\"`\n    AtomParity       AtomParity `xml:\"atomParity\"`\n    Label            Label      `xml:\"label\"`\n    Property         Property   `xml:\"property\"`\n}\ntype AtomParity struct {\n    AtomRefs4 string `xml:\"atomRefs4,attr\"`\n}\n\ntype Bond struct {\n    AtomRefs2  string     `xml:\"atomRefs2,attr\"`\n    Order      string     `xml:\"order,attr\"`\n    ID         string     `xml:\"id,attr\"`\n    BondStereo BondStereo `xml:\"bondStereo\"`\n    Label      Label      `xml:\"label\"`\n}\n\ntype BondStereo struct {\n    AtomRefs2 string `xml:\"atomRefs2,attr\"`\n    AtomRefs4 string `xml:\"atomRefs4,attr\"`\n    DictRef   string `xml:\"dictRef,attr\"`\n}\ntype Spectrum struct {\n}\n\n//\u5206\u5b50\u3092\u8ffd\u52a0\nfunc (c *CML) AddMolecule(id string) {\n    m := Molecule{ID: id}\n    c.Molecule = append(c.Molecule, m)\n}\n\n//\u539f\u5b50\u3092\u8ffd\u52a0\nfunc (c *CML) AddAtom(moleculeID, atomID, eType string, hCount int) {\n    a := Atom{ID: atomID, ElementType: eType, HydrogenCount: hCount}\n    for i, m := range c.Molecule {\n        if m.ID == moleculeID {\n            c.Molecule[i].AtomArray.Atom = append(c.Molecule[i].AtomArray.Atom, a)\n        }\n    }\n}\n\n//\u7d50\u5408\u60c5\u5831\u3092\u8ffd\u52a0\nfunc (c *CML) AddBond(moleculeID, bondID, atomRefs2, order string) {\n    b := Bond{ID: bondID, AtomRefs2: atomRefs2, Order: order}\n    for i, m := range c.Molecule {\n        if m.ID == moleculeID {\n            c.Molecule[i].BondArray.Bond = append(c.Molecule[i].BondArray.Bond, b)\n\n        }\n    }\n}\n\n//\u5206\u5b50\u306e\u540d\u524d\u3092\u8ffd\u52a0\nfunc (c *CML) SetMoleculeTitle(moleculeID, title string) {\n    for i, m := range c.Molecule {\n        if m.ID == moleculeID {\n            c.Molecule[i].Title = title\n        }\n    }\n}\n\n//\u539f\u5b50\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\nfunc (c *CML) SetAtomPosition(atomID string, x, y float32) {\n    for i, m := range c.Molecule {\n        for j, a := range m.AtomArray.Atom {\n            if a.ID == atomID {\n                c.Molecule[i].AtomArray.Atom[j].X2 = x\n                c.Molecule[i].AtomArray.Atom[j].Y2 = y\n            }\n        }\n    }\n}\n\n//XML\u3092\u51fa\u529b\nfunc (c CML) Marshal() string {\n    buf, _ := xml.MarshalIndent(c, \"\", \"  \")\n    result := `<?xml version=\"1.0\" encoding=\"UTF-8\"?>` + string(buf)\n\n    //\u3053\u308c\u3089\u306e\u5c5e\u6027\u306f\u7a7a\u767d\u306e\u5834\u5408\u3001\u51fa\u529b\u3057\u306a\u3044\n    result = strings.Replace(result, ` x3=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` y3=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` z3=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` order=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` formalCharge=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` isotopeNumber=\"0\"`, \"\", -1)\n    result = strings.Replace(result, ` spinMultiplicity=\"\"`, \"\", -1)\n    result = strings.Replace(result, ` hydrogenCount=\"\"`, \"\", -1)\n\n    return result\n}\n\n//\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\nfunc (c CML) Save(path string) {\n    ioutil.WriteFile(\n        path,\n        []byte(c.Marshal()),\n        os.ModePerm)\n}\n\nfunc (c CML) New() CML {\n    c = CML{}\n    c.Initialize()\n    return c\n}\n\n//\u521d\u671f\u5316\nfunc (c *CML) Initialize() {\n    c.Xmlns = \"http://www.xml-cml.org/schema\"\n    c.XmlnsConvention = \"http://www.xml-cml.org/convention/\"\n    c.Convention = \"convention:molecular\"\n}\n\nfunc main() {\n    var c CML\n    c = c.New()\n\n\n    //\u30a8\u30bf\u30f3 (ethane) \u306e\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 \u3053\u3053\u304b\u3089\n\n    //\u5206\u5b50 m1 \u3092\u8ffd\u52a0\n    c.AddMolecule(\"m1\")\n\n    //\u5206\u5b50 m1 \u306b Ethane \u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3092\u4ed8\u3051\u308b\n    c.SetMoleculeTitle(\"m1\", \"Ethane\")\n\n    //\u5206\u5b50 m1 \u306b \u70ad\u7d20\u539f\u5b50 a1 \u3092\u8ffd\u52a0\u3057\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n    c.AddAtom(\"m1\", \"a1\", \"C\", 1)\n    c.SetAtomPosition(\"a1\", 0, 0)\n\n    //\u5206\u5b50 m1 \u306b \u70ad\u7d20\u539f\u5b50 a2 \u3092\u8ffd\u52a0\u3057\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n    c.AddAtom(\"m1\", \"a2\", \"C\", 1)\n    c.SetAtomPosition(\"a2\", 0, 1)\n\n    //\u70ad\u7d20\u539f\u5b50 a1 \u3068 a2 \u3092\u7d50\u5408\n    c.AddBond(\"m1\", \"b1\", \"a1 a2\", \"S\")\n\n    //\u751f\u6210\u3057\u305f CML \u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\n    c.Save(\"ethane.cml\")\n\n    //\u3053\u3053\u307e\u3067\n\n}\n\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30a8\u30bf\u30f3\u306e\u69cb\u9020\u5f0f\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u751f\u6210\u3057\u305f CML \u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u9020\u5f0f\u30d3\u30e5\u30fc\u30a2\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u672c\u5f53\u306b\u4f7f\u3044\u7269\u306b\u306a\u308b\u306e\u304b\u3069\u3046\u304b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059\u3002\nJChemPaint \u3068\u3044\u3046\u30d5\u30ea\u30fc\u306e\u69cb\u9020\u5f0f\u30a8\u30c7\u30a3\u30bf\u30bd\u30d5\u30c8\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n\n\u30d9\u30f3\u30bc\u30f3\u3092\u751f\u6210\u3057\u3066\u307f\u308b\n\u6b21\u306f\u30d9\u30f3\u30bc\u30f3\u306e\u69cb\u9020\u5f0f\u3092\u63cf\u304f CML \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\nmain.go\nfunc main() {\n    var c CML\n    c = c.New()\n\n    c.AddMolecule(\"m1\")\n    c.SetMoleculeTitle(\"m1\", \"Benzene\")\n\n    //\u70ad\u7d20\u539f\u5b50\u30926\u3064\u8ffd\u52a0\n    c.AddAtom(\"m1\", \"a1\", \"C\", 1)\n    c.AddAtom(\"m1\", \"a2\", \"C\", 1)\n    c.AddAtom(\"m1\", \"a3\", \"C\", 1)\n    c.AddAtom(\"m1\", \"a4\", \"C\", 1)\n    c.AddAtom(\"m1\", \"a5\", \"C\", 1)\n    c.AddAtom(\"m1\", \"a6\", \"C\", 1)\n\n    //\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n    c.SetAtomPosition(\"a1\", -0.61, 2.40)\n    c.SetAtomPosition(\"a2\", 0.68, 1.65)\n    c.SetAtomPosition(\"a3\", 0.68, 0.15)\n    c.SetAtomPosition(\"a4\", -0.61, -0.60)\n    c.SetAtomPosition(\"a5\", -1.91, 0.15)\n    c.SetAtomPosition(\"a6\", -1.91, 1.65)\n\n    //\u7d50\u5408\u60c5\u5831\u3092\u8ffd\u52a0\n    c.AddBond(\"m1\", \"b1\", \"a1 a2\", \"D\")\n    c.AddBond(\"m1\", \"b2\", \"a2 a3\", \"S\")\n    c.AddBond(\"m1\", \"b3\", \"a3 a4\", \"D\")\n    c.AddBond(\"m1\", \"b4\", \"a4 a5\", \"S\")\n    c.AddBond(\"m1\", \"b5\", \"a5 a6\", \"D\")\n    c.AddBond(\"m1\", \"b6\", \"a6 a1\", \"S\")\n\n    //\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\n    c.Save(\"benzene.cml\")\n\n\n\n\u518d\u3073\u69cb\u9020\u5f0f\u30d3\u30e5\u30fc\u30a2\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\u751f\u6210\u3057\u305f\u30d9\u30f3\u30bc\u30f3\u306e\u69cb\u9020\u5f0f\u3092 JChemPaint \u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\n\n\u554f\u984c\u306a\u304f\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u7d42\u308f\u308a\u306b\n\u6700\u7d42\u7684\u306b\u306f\u3001OpenBabel \u3084 RDKit \u306b\u983c\u3089\u305a Go \u8a00\u8a9e\u3060\u3051\u3067\u5316\u5b66\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u76f8\u4e92\u5909\u63db\u3084\u8a08\u7b97\u3001\u753b\u50cf\u5316\u306a\u3069\u304c\u3067\u304d\u305f\u3089\u3044\u3044\u306a\u30fc\u3001\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3002\n#\u306f\u3058\u3081\u306b\n\nAwesome Go \u3092\u898b\u305f\u308a\u300cchemical golang\u300d\u3068\u3044\u3046\u3088\u3046\u306a\u5358\u8a9e\u3067\u30b0\u30b0\u3063\u305f\u308a\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u4eca\u306e\u3068\u3053\u308d Go\u8a00\u8a9e\u3067\u5316\u5b66\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3063\u305f\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u7121\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u81ea\u529b\u3067\u30c1\u30e3\u30ec\u30f3\u30b8\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u5ff5\u306e\u305f\u3081\u3001\u5316\u5b66\u69cb\u9020\u5f0f\u3068\u306f\u4f55\u304b\u8aac\u660e\u3059\u308b\u3068\n\u2193\u3053\u3093\u306a\u611f\u3058\u306e\u56f3\u306e\u3053\u3068\u3067\u3059\u3002(\u3053\u308c\u306f\u30d3\u30bf\u30df\u30f3C\u306e\u69cb\u9020\u5f0f)\n\n![006.png](https://qiita-image-store.s3.amazonaws.com/0/124995/7e460bf6-66a4-694f-3efe-8bcc5b9634ca.png)\n\n\n\n\u3053\u306e\u3088\u3046\u306a\u5316\u5b66\u69cb\u9020\u3092\u5b9a\u7fa9\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u306b\u306f .cml (Chemical Markup Language) \u3084\u3089 .mol (MDL \u5f62\u5f0f) \u3084\u3089 .cdx (ChemDraw \u5f62\u5f0f) \u3068\u3044\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u4eca\u56de\u306f CML \u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n#CML (Chemical Markup Language) \u3068\u306f\n\nCML (Chemical Markup Language) \u3068\u306f\u3001\u5316\u5b66\u69cb\u9020\u306a\u3069\u3092 XML \u3067\u5b9a\u7fa9\u3057\u305f\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306e\u3053\u3068\u3067\u3059\u3002\n\n\u516c\u5f0f\u30b5\u30a4\u30c8 \u2193\n\nChemical Markup Language\nhttp://www.xml-cml.org/\n\n\u4f8b\u3048\u3070\u5206\u5b50\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u305f\u3081\u306e\u5177\u4f53\u7684\u306a\u4ed5\u69d8\u306f \u2193 \u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nhttp://www.xml-cml.org/convention/molecular#introduction\n\n\u4e0a\u306e\u30da\u30fc\u30b8\u3092\u898b\u308c\u3070\u5206\u304b\u308b\u3088\u3046\u306b\u3001\u3053\u306e\u4ed5\u69d8\u306e\u901a\u308a\u306b\u578b\u3092\u5b9a\u7fa9\u3057\u3066 XML\u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3057\u3055\u3048\u3059\u308c\u3070\u3001\u5316\u5b66\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u3002\nGo \u8a00\u8a9e\u306b\u306f \"encoding/xml\" \u3068\u3044\u3046 XML \u3092\u6271\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u5229\u7528\u3059\u308c\u3070\u7c21\u5358\u306b\u3067\u304d\u305d\u3046\u306a\u4e88\u611f\u3002\n\n#\u5b9f\u88c5\n\n\u3063\u3066\u306a\u308f\u3051\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\n\n```main.go\npackage main\n\nimport (\n\t\"encoding/xml\"\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"os\"\n\t\"strings\"\n)\n\ntype CML struct {\n\tXmlns           string     `xml:\"xmlns,attr\"`\n\tXmlnsConvention string     `xml:\"xmlns:convention,attr\"`\n\tConvention      string     `xml:\"convention,attr\"`\n\tMolecule        []Molecule `xml:\"molecule\"`\n}\n\ntype Molecule struct {\n\tID               string    `xml:\"id,attr\"`\n\tCount            int       `xml:\"count,attr\"`\n\tAtomArray        AtomArray `xml:\"atomArray\"`\n\tBondArray        BondArray `xml:\"bondArray\"`\n\tFormula          Formula   `xml:\"formula\"`\n\tProperty         Property  `xml:\"property\"`\n\tLabel            Label     `xml:\"label\"`\n\tName             Name      `xml:\"name\"`\n\tFormalCharge     string    `xml:\"formalCharge,attr\"`\n\tSpinMultiplicity string    `xml:\"spinMultiplicity,attr\"`\n\tChirality        string    `xml:\"chirality,attr\"`\n\tSpectrum         Spectrum  `xml:\"spectrum\"`\n\n\tTitle string `xml:\"title,attr\"`\n}\ntype AtomArray struct {\n\tAtom []Atom `xml:\"atom\"`\n}\ntype BondArray struct {\n\tBond []Bond `xml:\"bond\"`\n}\n\ntype Formula struct {\n\tCount     int    `xml:\"count,attr\"`\n\tAtomArray AtomArray\n\tConcise   string `xml:\"concise,attr\"`\n\tInline    string `xml:\"inline,attr\"`\n}\ntype Property struct {\n\tScalar  Scalar `xml:\"scalar\"`\n\tDictRef string `xml:\"dictRef,attr\"`\n\tTitle   string `xml:\"title,attr\"`\n}\ntype Scalar struct {\n\tUnit     string `xml:\"unit,attr\"`\n\tDataType string `xml:\"dataType,attr\"`\n}\ntype Label struct {\n\tDictRef string `xml:\"dictRef,attr\"`\n}\ntype Name struct {\n\tDictRef string `xml:\"dictRef,attr\"`\n}\n\ntype Atom struct {\n\tID               string     `xml:\"id,attr\"`\n\tElementType      string     `xml:\"elementType,attr\"`\n\tX2               float32    `xml:\"x2,attr\"`\n\tY2               float32    `xml:\"y2,attr\"`\n\tX3               float32    `xml:\"x3,attr\"`\n\tY3               float32    `xml:\"y3,attr\"`\n\tZ3               float32    `xml:\"z3,attr\"`\n\tFormalCharge     string     `xml:\"formalCharge,attr\"`\n\tIsotopeNumber    int        `xml:\"isotopeNumber,attr\"`\n\tSpinMultiplicity string     `xml:\"spinMultiplicity,attr\"`\n\tCount            int        `xml:\"count,attr\"`\n\tHydrogenCount    int        `xml:\"hydrogenCount,attr\"`\n\tAtomParity       AtomParity `xml:\"atomParity\"`\n\tLabel            Label      `xml:\"label\"`\n\tProperty         Property   `xml:\"property\"`\n}\ntype AtomParity struct {\n\tAtomRefs4 string `xml:\"atomRefs4,attr\"`\n}\n\ntype Bond struct {\n\tAtomRefs2  string     `xml:\"atomRefs2,attr\"`\n\tOrder      string     `xml:\"order,attr\"`\n\tID         string     `xml:\"id,attr\"`\n\tBondStereo BondStereo `xml:\"bondStereo\"`\n\tLabel      Label      `xml:\"label\"`\n}\n\ntype BondStereo struct {\n\tAtomRefs2 string `xml:\"atomRefs2,attr\"`\n\tAtomRefs4 string `xml:\"atomRefs4,attr\"`\n\tDictRef   string `xml:\"dictRef,attr\"`\n}\ntype Spectrum struct {\n}\n\n//\u5206\u5b50\u3092\u8ffd\u52a0\nfunc (c *CML) AddMolecule(id string) {\n\tm := Molecule{ID: id}\n\tc.Molecule = append(c.Molecule, m)\n}\n\n//\u539f\u5b50\u3092\u8ffd\u52a0\nfunc (c *CML) AddAtom(moleculeID, atomID, eType string, hCount int) {\n\ta := Atom{ID: atomID, ElementType: eType, HydrogenCount: hCount}\n\tfor i, m := range c.Molecule {\n\t\tif m.ID == moleculeID {\n\t\t\tc.Molecule[i].AtomArray.Atom = append(c.Molecule[i].AtomArray.Atom, a)\n\t\t}\n\t}\n}\n\n//\u7d50\u5408\u60c5\u5831\u3092\u8ffd\u52a0\nfunc (c *CML) AddBond(moleculeID, bondID, atomRefs2, order string) {\n\tb := Bond{ID: bondID, AtomRefs2: atomRefs2, Order: order}\n\tfor i, m := range c.Molecule {\n\t\tif m.ID == moleculeID {\n\t\t\tc.Molecule[i].BondArray.Bond = append(c.Molecule[i].BondArray.Bond, b)\n\n\t\t}\n\t}\n}\n\n//\u5206\u5b50\u306e\u540d\u524d\u3092\u8ffd\u52a0\nfunc (c *CML) SetMoleculeTitle(moleculeID, title string) {\n\tfor i, m := range c.Molecule {\n\t\tif m.ID == moleculeID {\n\t\t\tc.Molecule[i].Title = title\n\t\t}\n\t}\n}\n\n//\u539f\u5b50\u306e\u4f4d\u7f6e\u3092\u8a2d\u5b9a\nfunc (c *CML) SetAtomPosition(atomID string, x, y float32) {\n\tfor i, m := range c.Molecule {\n\t\tfor j, a := range m.AtomArray.Atom {\n\t\t\tif a.ID == atomID {\n\t\t\t\tc.Molecule[i].AtomArray.Atom[j].X2 = x\n\t\t\t\tc.Molecule[i].AtomArray.Atom[j].Y2 = y\n\t\t\t}\n\t\t}\n\t}\n}\n\n//XML\u3092\u51fa\u529b\nfunc (c CML) Marshal() string {\n\tbuf, _ := xml.MarshalIndent(c, \"\", \"  \")\n\tresult := `<?xml version=\"1.0\" encoding=\"UTF-8\"?>` + string(buf)\n\n\t//\u3053\u308c\u3089\u306e\u5c5e\u6027\u306f\u7a7a\u767d\u306e\u5834\u5408\u3001\u51fa\u529b\u3057\u306a\u3044\n\tresult = strings.Replace(result, ` x3=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` y3=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` z3=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` order=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` formalCharge=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` isotopeNumber=\"0\"`, \"\", -1)\n\tresult = strings.Replace(result, ` spinMultiplicity=\"\"`, \"\", -1)\n\tresult = strings.Replace(result, ` hydrogenCount=\"\"`, \"\", -1)\n\n\treturn result\n}\n\n//\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\nfunc (c CML) Save(path string) {\n\tioutil.WriteFile(\n\t\tpath,\n\t\t[]byte(c.Marshal()),\n\t\tos.ModePerm)\n}\n\nfunc (c CML) New() CML {\n\tc = CML{}\n\tc.Initialize()\n\treturn c\n}\n\n//\u521d\u671f\u5316\nfunc (c *CML) Initialize() {\n\tc.Xmlns = \"http://www.xml-cml.org/schema\"\n\tc.XmlnsConvention = \"http://www.xml-cml.org/convention/\"\n\tc.Convention = \"convention:molecular\"\n}\n\nfunc main() {\n\tvar c CML\n\tc = c.New()\n\n\n\t//\u30a8\u30bf\u30f3 (ethane) \u306e\u69cb\u9020\u5f0f\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9 \u3053\u3053\u304b\u3089\n\t\n\t//\u5206\u5b50 m1 \u3092\u8ffd\u52a0\n\tc.AddMolecule(\"m1\")\n\t\n\t//\u5206\u5b50 m1 \u306b Ethane \u3068\u3044\u3046\u30bf\u30a4\u30c8\u30eb\u3092\u4ed8\u3051\u308b\n\tc.SetMoleculeTitle(\"m1\", \"Ethane\")\n\t\n\t//\u5206\u5b50 m1 \u306b \u70ad\u7d20\u539f\u5b50 a1 \u3092\u8ffd\u52a0\u3057\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n\tc.AddAtom(\"m1\", \"a1\", \"C\", 1)\n\tc.SetAtomPosition(\"a1\", 0, 0)\n\t\n\t//\u5206\u5b50 m1 \u306b \u70ad\u7d20\u539f\u5b50 a2 \u3092\u8ffd\u52a0\u3057\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n\tc.AddAtom(\"m1\", \"a2\", \"C\", 1)\n\tc.SetAtomPosition(\"a2\", 0, 1)\n\t\n\t//\u70ad\u7d20\u539f\u5b50 a1 \u3068 a2 \u3092\u7d50\u5408\n\tc.AddBond(\"m1\", \"b1\", \"a1 a2\", \"S\")\n\n\t//\u751f\u6210\u3057\u305f CML \u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\n\tc.Save(\"ethane.cml\")\n\t\n\t//\u3053\u3053\u307e\u3067\n\t\n}\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u30a8\u30bf\u30f3\u306e\u69cb\u9020\u5f0f\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\n#\u751f\u6210\u3057\u305f CML \u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u9020\u5f0f\u30d3\u30e5\u30fc\u30a2\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\n\u751f\u6210\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u672c\u5f53\u306b\u4f7f\u3044\u7269\u306b\u306a\u308b\u306e\u304b\u3069\u3046\u304b\u691c\u8a3c\u3057\u3066\u307f\u307e\u3059\u3002\nJChemPaint \u3068\u3044\u3046\u30d5\u30ea\u30fc\u306e\u69cb\u9020\u5f0f\u30a8\u30c7\u30a3\u30bf\u30bd\u30d5\u30c8\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3057\u305f\u3002\n\n\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n![002.png](https://qiita-image-store.s3.amazonaws.com/0/124995/cff86c25-dcd0-bbfa-634e-138105bae3e1.png)\n\n\n#\u30d9\u30f3\u30bc\u30f3\u3092\u751f\u6210\u3057\u3066\u307f\u308b\n\n\u6b21\u306f\u30d9\u30f3\u30bc\u30f3\u306e\u69cb\u9020\u5f0f\u3092\u63cf\u304f CML \u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```main.go\nfunc main() {\n\tvar c CML\n\tc = c.New()\n\n\tc.AddMolecule(\"m1\")\n\tc.SetMoleculeTitle(\"m1\", \"Benzene\")\n\n\t//\u70ad\u7d20\u539f\u5b50\u30926\u3064\u8ffd\u52a0\n\tc.AddAtom(\"m1\", \"a1\", \"C\", 1)\n\tc.AddAtom(\"m1\", \"a2\", \"C\", 1)\n\tc.AddAtom(\"m1\", \"a3\", \"C\", 1)\n\tc.AddAtom(\"m1\", \"a4\", \"C\", 1)\n\tc.AddAtom(\"m1\", \"a5\", \"C\", 1)\n\tc.AddAtom(\"m1\", \"a6\", \"C\", 1)\n\n\t//\u4f4d\u7f6e\u3092\u8a2d\u5b9a\n\tc.SetAtomPosition(\"a1\", -0.61, 2.40)\n\tc.SetAtomPosition(\"a2\", 0.68, 1.65)\n\tc.SetAtomPosition(\"a3\", 0.68, 0.15)\n\tc.SetAtomPosition(\"a4\", -0.61, -0.60)\n\tc.SetAtomPosition(\"a5\", -1.91, 0.15)\n\tc.SetAtomPosition(\"a6\", -1.91, 1.65)\n\n\t//\u7d50\u5408\u60c5\u5831\u3092\u8ffd\u52a0\n\tc.AddBond(\"m1\", \"b1\", \"a1 a2\", \"D\")\n\tc.AddBond(\"m1\", \"b2\", \"a2 a3\", \"S\")\n\tc.AddBond(\"m1\", \"b3\", \"a3 a4\", \"D\")\n\tc.AddBond(\"m1\", \"b4\", \"a4 a5\", \"S\")\n\tc.AddBond(\"m1\", \"b5\", \"a5 a6\", \"D\")\n\tc.AddBond(\"m1\", \"b6\", \"a6 a1\", \"S\")\n\n\t//\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u5b58\n\tc.Save(\"benzene.cml\")\n```\n\n#\u518d\u3073\u69cb\u9020\u5f0f\u30d3\u30e5\u30fc\u30a2\u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u308b\n\n\u751f\u6210\u3057\u305f\u30d9\u30f3\u30bc\u30f3\u306e\u69cb\u9020\u5f0f\u3092 JChemPaint \u3067\u8aad\u307f\u8fbc\u3093\u3067\u307f\u307e\u3059\u3002\n\n![004.png](https://qiita-image-store.s3.amazonaws.com/0/124995/c090dfaf-8cb5-b17c-5809-0ee7605a742f.png)\n\n\u554f\u984c\u306a\u304f\u8868\u793a\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n#\u7d42\u308f\u308a\u306b\n\n\u6700\u7d42\u7684\u306b\u306f\u3001OpenBabel \u3084 RDKit \u306b\u983c\u3089\u305a Go \u8a00\u8a9e\u3060\u3051\u3067\u5316\u5b66\u69cb\u9020\u30d5\u30a1\u30a4\u30eb\u306e\u76f8\u4e92\u5909\u63db\u3084\u8a08\u7b97\u3001\u753b\u50cf\u5316\u306a\u3069\u304c\u3067\u304d\u305f\u3089\u3044\u3044\u306a\u30fc\u3001\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0a\u3002\n", "tags": ["\u5316\u5b66", "Go", "golang", "chemoinformatics", "XML"]}