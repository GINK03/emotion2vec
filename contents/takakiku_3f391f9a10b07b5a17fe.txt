{"tags": ["DynamoDB", "JSON", "AWS", "Ruby"], "context": " More than 1 year has passed since last update.PHP\u3067\u306e\u8a18\u4e8b\u300eDynamoDB\u306ejson\u30b5\u30dd\u30fc\u30c8\u3092\u8a66\u3057\u3066\u307f\u305f\u3002 \u300f\u304c\u3042\u3063\u305f\u306e\u3067Ruby\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nPHP\u306e\u65b9\u3067\u306fSDK\u304c\u307e\u3060JSON\u3092\u76f4\u63a5\u6271\u3048\u308b\u3088\u3046\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5bfe\u5fdc\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u306eRuby\u3067\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u8a66\u3057\u305f\u30e1\u30e2\u3067\u3059\u3002\nJSON\u30b5\u30dd\u30fc\u30c8\u3068\u3044\u3063\u3066\u3082\u3001DynamoDB\u5074\u306fdata type\u3092\u5897\u3084\u3057\u3066JSON\u3067\u5fc5\u8981\u3068\u306a\u308b\u578b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001JSON\u3092\u51e6\u7406\u3057\u3066\u3044\u308b\u306e\u306fSDK\u5074\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\uff08\u9593\u9055\u3063\u3066\u305f\u3089\u3054\u6307\u6458\u3092\uff01\uff09\n\u7d50\u8ad6\u3068\u3057\u3066\u306f\u5148\u65e5\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f AWS SDK for Ruby 2 \u3092\u4f7f\u3048\u3070\u307e\u3041\u5927\u4e08\u592b\u3067\u3059\u3002AWS SDK Ruby 2 \u306b\u3064\u3044\u3066\u306fAWS SDK for Ruby version2 Released!\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\nGemfile\nGemfile\u3067\u3059\u304c\u3001\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u306fcore\u306e\u307f\u306e\u3088\u3046\u306a\u306e\u3067\u3001aws-sdk \u5168\u4f53\u304c\u5fc5\u8981\u306a\u3089Gemfile\u306b\u306f\ngem \"aws-sdk\", \">=2.0.0.pre\"\n\n\u3092\u8ffd\u8a18\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306fcore\u3060\u3051\u3067OK\u306a\u306e\u3067\ngem 'aws-sdk-core', '~> 2.0'\n\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u306e\u6e96\u5099\nhttp://aws.amazon.com/jp/blogs/aws/dynamodb-update-json-and-more/ \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u306e\u3067\u3001\u540d\u524d\u304c people \u3067\u3001person_id \u3092 Hash Key \u3068\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306f\u9069\u5b9c\u4fee\u6b63\u304f\u3060\u3055\u3044\u307e\u305b\u3002\u3002\u3002\nrequire 'aws-sdk-core'\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.create_table(\n  table_name: 'people',\n  key_schema: [\n    {\n    attribute_name: 'person_id',\n    key_type: 'HASH',\n    },\n  ],\n  attribute_definitions: [\n    {\n      attribute_name: 'person_id',\n      attribute_type: 'N',\n    },\n  ],\n  provisioned_throughput: {\n    read_capacity_units: 1,\n    write_capacity_units: 1,\n  },\n)\n\nputs \"table: #{resp.table_description[:table_name]}\"\nputs \"status: #{resp.table_description[:table_status]}\"\n\n\nJSON\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\ndata.json\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7528\u610f\u3057\u3066\u304a\u304f\u3002\n{\n  \"person_id\" : 123,\n  \"last_name\" : \"Barr\",\n  \"first_name\" : \"Jeff\",\n  \"current_city\" : \"Tokyo\",\n  \"next_haircut\" :\n  {\n    \"year\" : 2014,\n    \"month\" : 10,\n    \"day\" : 30\n  },\n  \"children\"  :\n    [ \"SJB\", \"ASB\", \"CGB\", \"BGB\", \"GTB\" ]\n}\n\n\u3067\u3001\u3053\u308c\u3092\u4e0a\u8a18\u3067\u7528\u610f\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5165\u308c\u308b\u30b3\u30fc\u30c9\u304c\u4e0b\u8a18\u3002\nrequire 'aws-sdk-core'\nrequire 'json'\n\njson_data = JSON.parse(File.read('data.json'))\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.put_item(\n  table_name: 'people',\n  item: {\n    'person_id' => json_data['person_id'],\n    'document' => json_data\n  }\n)\n\nJSON\u30b5\u30dd\u30fc\u30c8\u306e\u304a\u304b\u3052\u3067\u3001\u305d\u306e\u307e\u307e\u7a81\u3063\u8fbc\u3081\u3070\u3088\u3044\u3060\u3051\u3067\u3059\u306d\u3002\u30e9\u30af\u3067\u3059\u3002\n\nJSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\u4e0a\u3067\u5165\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\nrequire 'aws-sdk-core'\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.get_item(\n  table_name: \"people\",\n  key: {\n    \"person_id\" => 123,\n  },\n  attributes_to_get: [\"document\"],\n  consistent_read: true,\n)\n\nresp.each do |r|\n  p r.item\n  puts\n  puts JSON.pretty_generate(r.item)\nend\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\uff08\u8868\u793a\u306e\u95a2\u4fc2\u3067\u6298\u308a\u8fd4\u3057\u5165\u308c\u3066\u307e\u3059\uff09\n{\"document\"=>{\"first_name\"=>\"Jeff\", \"person_id\"=>#<BigDecimal:7faa6d1edb78,'0.123E3',9(18)>,\n \"current_city\"=>\"Tokyo\", \"next_haircut\"=>{\"month\"=>#<BigDecimal:7faa6d1ed830,'0.1E2',9(18)>,\n \"year\"=>#<BigDecimal:7faa6d1ed718,'0.2014E4',9(18)>, \"day\"=>#<BigDecimal:7faa6d1ed600,'0.3E2',9(18)>},\n \"last_name\"=>\"Barr\", \"children\"=>[\"SJB\", \"ASB\", \"CGB\", \"BGB\", \"GTB\"]}}\n\n{\n  \"document\": {\n    \"first_name\": \"Jeff\",\n    \"person_id\": \"0.123E3\",\n    \"current_city\": \"Tokyo\",\n    \"next_haircut\": {\n      \"month\": \"0.1E2\",\n      \"year\": \"0.2014E4\",\n      \"day\": \"0.3E2\"\n    },\n    \"last_name\": \"Barr\",\n    \"children\": [\n      \"SJB\",\n      \"ASB\",\n      \"CGB\",\n      \"BGB\",\n      \"GTB\"\n    ]\n  }\n}\n\nDynamoDB\u3067\u306eNumber\u578b\u304cruby\u306eBigDecimal\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u307e\u307eJSON\u51fa\u529b\u3059\u308b\u3068\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\u3053\u306e\u70b9\u3060\u3051\u8981\u6ce8\u610f\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\u3084\u306f\u308aJSON\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u306e\u3044\u3044\u3067\u3059\u306d\u3002\nOnline Indexing\u304cAvailable Soon\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u691c\u7d22\u95a2\u9023\u304c\u5f37\u5316\u3055\u308c\u308b\u306e\u304b\u306a\u3002\u305d\u3046\u3059\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u306d\u3002\n\u691c\u7d22\u6761\u4ef6\u3082\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u3082\u306e\u304c\u3067\u304d\u308b\u3068\u3055\u3089\u306b\u3046\u308c\u3057\u3044\u3067\u3059\u306d\u3002\u81ea\u5206\u7684\u306b\u3002\nPHP\u3067\u306e\u8a18\u4e8b\u300e[DynamoDB\u306ejson\u30b5\u30dd\u30fc\u30c8\u3092\u8a66\u3057\u3066\u307f\u305f\u3002](http://qiita.com/inouet/items/663fb264ab655381e4b0) \u300f\u304c\u3042\u3063\u305f\u306e\u3067Ruby\u3067\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nPHP\u306e\u65b9\u3067\u306fSDK\u304c\u307e\u3060JSON\u3092\u76f4\u63a5\u6271\u3048\u308b\u3088\u3046\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5bfe\u5fdc\u3055\u308c\u3066\u3044\u308b\u306f\u305a\u306eRuby\u3067\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u8a66\u3057\u305f\u30e1\u30e2\u3067\u3059\u3002\n\nJSON\u30b5\u30dd\u30fc\u30c8\u3068\u3044\u3063\u3066\u3082\u3001DynamoDB\u5074\u306fdata type\u3092\u5897\u3084\u3057\u3066JSON\u3067\u5fc5\u8981\u3068\u306a\u308b\u578b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3001JSON\u3092\u51e6\u7406\u3057\u3066\u3044\u308b\u306e\u306fSDK\u5074\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306d\u3002\uff08\u9593\u9055\u3063\u3066\u305f\u3089\u3054\u6307\u6458\u3092\uff01\uff09\n\n\u7d50\u8ad6\u3068\u3057\u3066\u306f\u5148\u65e5\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f AWS SDK for Ruby 2 \u3092\u4f7f\u3048\u3070\u307e\u3041\u5927\u4e08\u592b\u3067\u3059\u3002AWS SDK Ruby 2 \u306b\u3064\u3044\u3066\u306f[AWS SDK for Ruby version2 Released!](http://dev.classmethod.jp/cloud/aws/aws-sdk-for-ruby-version2-released/)\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\n\n# Gemfile\n\nGemfile\u3067\u3059\u304c\u3001\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u306fcore\u306e\u307f\u306e\u3088\u3046\u306a\u306e\u3067\u3001aws-sdk \u5168\u4f53\u304c\u5fc5\u8981\u306a\u3089Gemfile\u306b\u306f\n\n```rb\ngem \"aws-sdk\", \">=2.0.0.pre\"\n```\n\n\u3092\u8ffd\u8a18\u3059\u308c\u3070\u3088\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306fcore\u3060\u3051\u3067OK\u306a\u306e\u3067\n\n```rb\ngem 'aws-sdk-core', '~> 2.0'\n```\n\n\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n# \u30c6\u30fc\u30d6\u30eb\u306e\u6e96\u5099\n\nhttp://aws.amazon.com/jp/blogs/aws/dynamodb-update-json-and-more/ \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u305f\u306e\u3067\u3001\u540d\u524d\u304c people \u3067\u3001person_id \u3092 Hash Key \u3068\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306f\u9069\u5b9c\u4fee\u6b63\u304f\u3060\u3055\u3044\u307e\u305b\u3002\u3002\u3002\n\n```rb\nrequire 'aws-sdk-core'\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.create_table(\n  table_name: 'people',\n  key_schema: [\n    {\n    attribute_name: 'person_id',\n    key_type: 'HASH',\n    },\n  ],\n  attribute_definitions: [\n    {\n      attribute_name: 'person_id',\n      attribute_type: 'N',\n    },\n  ],\n  provisioned_throughput: {\n    read_capacity_units: 1,\n    write_capacity_units: 1,\n  },\n)\n\nputs \"table: #{resp.table_description[:table_name]}\"\nputs \"status: #{resp.table_description[:table_status]}\"\n```\n\n# JSON\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n\ndata.json\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7528\u610f\u3057\u3066\u304a\u304f\u3002\n\n```json\n{\n  \"person_id\" : 123,\n  \"last_name\" : \"Barr\",\n  \"first_name\" : \"Jeff\",\n  \"current_city\" : \"Tokyo\",\n  \"next_haircut\" :\n  {\n    \"year\" : 2014,\n    \"month\" : 10,\n    \"day\" : 30\n  },\n  \"children\"  :\n    [ \"SJB\", \"ASB\", \"CGB\", \"BGB\", \"GTB\" ]\n}\n```\n\n\u3067\u3001\u3053\u308c\u3092\u4e0a\u8a18\u3067\u7528\u610f\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u306b\u5165\u308c\u308b\u30b3\u30fc\u30c9\u304c\u4e0b\u8a18\u3002\n\n```rb\nrequire 'aws-sdk-core'\nrequire 'json'\n\njson_data = JSON.parse(File.read('data.json'))\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.put_item(\n  table_name: 'people',\n  item: {\n    'person_id' => json_data['person_id'],\n    'document' => json_data\n  }\n)\n```\n\nJSON\u30b5\u30dd\u30fc\u30c8\u306e\u304a\u304b\u3052\u3067\u3001\u305d\u306e\u307e\u307e\u7a81\u3063\u8fbc\u3081\u3070\u3088\u3044\u3060\u3051\u3067\u3059\u306d\u3002\u30e9\u30af\u3067\u3059\u3002\n\n# JSON\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\n\n\u4e0a\u3067\u5165\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u30b3\u30fc\u30c9\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u3059\u3002\n\n```rb\nrequire 'aws-sdk-core'\n\ndynamo_db = Aws::DynamoDB::Client.new(\n  :region => \"ap-northeast-1\",\n  :access_key_id => \"XXXXXXXXXXX\",\n  :secret_access_key => \"XXXXXXXXXXXXXXXXXXX\"\n)\n\nresp = dynamo_db.get_item(\n  table_name: \"people\",\n  key: {\n    \"person_id\" => 123,\n  },\n  attributes_to_get: [\"document\"],\n  consistent_read: true,\n)\n\nresp.each do |r|\n  p r.item\n  puts\n  puts JSON.pretty_generate(r.item)\nend\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4e0b\u8a18\u306e\u901a\u308a\u3067\u3059\u3002\uff08\u8868\u793a\u306e\u95a2\u4fc2\u3067\u6298\u308a\u8fd4\u3057\u5165\u308c\u3066\u307e\u3059\uff09\n\n```txt\n{\"document\"=>{\"first_name\"=>\"Jeff\", \"person_id\"=>#<BigDecimal:7faa6d1edb78,'0.123E3',9(18)>,\n \"current_city\"=>\"Tokyo\", \"next_haircut\"=>{\"month\"=>#<BigDecimal:7faa6d1ed830,'0.1E2',9(18)>,\n \"year\"=>#<BigDecimal:7faa6d1ed718,'0.2014E4',9(18)>, \"day\"=>#<BigDecimal:7faa6d1ed600,'0.3E2',9(18)>},\n \"last_name\"=>\"Barr\", \"children\"=>[\"SJB\", \"ASB\", \"CGB\", \"BGB\", \"GTB\"]}}\n\n{\n  \"document\": {\n    \"first_name\": \"Jeff\",\n    \"person_id\": \"0.123E3\",\n    \"current_city\": \"Tokyo\",\n    \"next_haircut\": {\n      \"month\": \"0.1E2\",\n      \"year\": \"0.2014E4\",\n      \"day\": \"0.3E2\"\n    },\n    \"last_name\": \"Barr\",\n    \"children\": [\n      \"SJB\",\n      \"ASB\",\n      \"CGB\",\n      \"BGB\",\n      \"GTB\"\n    ]\n  }\n}\n```\n\nDynamoDB\u3067\u306eNumber\u578b\u304cruby\u306eBigDecimal\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u306e\u307e\u307eJSON\u51fa\u529b\u3059\u308b\u3068\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306d\u3002\n\u3053\u306e\u70b9\u3060\u3051\u8981\u6ce8\u610f\u306a\u611f\u3058\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3084\u306f\u308aJSON\u305d\u306e\u307e\u307e\u4f7f\u3048\u308b\u306e\u3044\u3044\u3067\u3059\u306d\u3002\nOnline Indexing\u304cAvailable Soon\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u691c\u7d22\u95a2\u9023\u304c\u5f37\u5316\u3055\u308c\u308b\u306e\u304b\u306a\u3002\u305d\u3046\u3059\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u306d\u3002\n\u691c\u7d22\u6761\u4ef6\u3082\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u3082\u306e\u304c\u3067\u304d\u308b\u3068\u3055\u3089\u306b\u3046\u308c\u3057\u3044\u3067\u3059\u306d\u3002\u81ea\u5206\u7684\u306b\u3002\n"}