{"tags": ["PCL", "C++", "STL", "pointcloudlibrary"], "context": " More than 1 year has passed since last update.\u53b3\u5bc6\u3067\u306f\u306a\u3044\u304c\uff0c\u304a\u624b\u8efd\u306b\u70b9\u3092\u9593\u5f15\u304d\u305f\u3044\u6642\u306b\u4fbf\u5229\uff0e\n\n\u30a2\u30a4\u30c7\u30a2\ncloud->points \u306e\u5b9f\u614b\u306fstl::vector\u306a\u306e\u3067\uff0c\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b std::remove_if \u3092\u9069\u7528\u3059\u308b\uff0e\noperator() \u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u306b\u30e9\u30f3\u30c0\u30e0\u3067True/False\u3092\u8fd4\u3059\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0cremove_if \u306b\u6295\u3052\u308b\uff0e\n\n\u30b3\u30fc\u30c9\n\n\u307e\u3073\u304f\u95a2\u6570\n\n#include <algorithm>\n\ntemplate <class T>\nclass isDelete\n{\n  float _random_sampling_percentage;\npublic:\n  isDelete(float random_sampling_percentage)\n  {\n    srand((long)time(NULL)); \n    _random_sampling_percentage = random_sampling_percentage / 100.0;\n  };\n  bool operator() (T& val)\n  {\n    return (rand()/(double)RAND_MAX >= _random_sampling_percentage);\n  }\n};\n\nvoid pointsReduction(pcl::PointCloud<pcl::PointXYZ>::Ptr cloud,\n                     float random_sampling_percentage)\n{\n  isDelete<pcl::PointXYZ> randDel( random_sampling_percentage );\n\n  cloud->points.erase( std::remove_if(cloud->points.begin(),\n                                      cloud->points.end(),\n                                      randDel  ), \n                       cloud->points.end() );\n}\n\n\nPtr\u578b\u306ecloud\u3092\u4e0e\u3048\u308c\u3070OK\uff0e\n\n\u547c\u3073\u51fa\u3057\npointsReduction(cloud, 10); // 10%\u306b\u9593\u5f15\u304f\n\n\n\n\u53b3\u5bc6\u3067\u306f\u306a\u3044\u304c\uff0c\u304a\u624b\u8efd\u306b\u70b9\u3092\u9593\u5f15\u304d\u305f\u3044\u6642\u306b\u4fbf\u5229\uff0e\n\n#\u30a2\u30a4\u30c7\u30a2\n\n`cloud->points` \u306e\u5b9f\u614b\u306fstl::vector\u306a\u306e\u3067\uff0c\u30b3\u30f3\u30c6\u30ca\u306b\u5bfe\u3059\u308b `std::remove_if` \u3092\u9069\u7528\u3059\u308b\uff0e\n`operator()` \u304c\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u306b\u30e9\u30f3\u30c0\u30e0\u3067True/False\u3092\u8fd4\u3059\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c`remove_if` \u306b\u6295\u3052\u308b\uff0e\n\n#\u30b3\u30fc\u30c9\n\n```c++:\u307e\u3073\u304f\u95a2\u6570\n\n#include <algorithm>\n\ntemplate <class T>\nclass isDelete\n{\n  float _random_sampling_percentage;\npublic:\n  isDelete(float random_sampling_percentage)\n  {\n    srand((long)time(NULL)); \n    _random_sampling_percentage = random_sampling_percentage / 100.0;\n  };\n  bool operator() (T& val)\n  {\n    return (rand()/(double)RAND_MAX >= _random_sampling_percentage);\n  }\n};\n\nvoid pointsReduction(pcl::PointCloud<pcl::PointXYZ>::Ptr cloud,\n                     float random_sampling_percentage)\n{\n  isDelete<pcl::PointXYZ> randDel( random_sampling_percentage );\n\n  cloud->points.erase( std::remove_if(cloud->points.begin(),\n                                      cloud->points.end(),\n                                      randDel  ), \n                       cloud->points.end() );\n}\n```\n\nPtr\u578b\u306ecloud\u3092\u4e0e\u3048\u308c\u3070OK\uff0e\n\n```c++:\u547c\u3073\u51fa\u3057\npointsReduction(cloud, 10); // 10%\u306b\u9593\u5f15\u304f\n```\n"}