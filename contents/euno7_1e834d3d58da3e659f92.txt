{"context": " More than 1 year has passed since last update.\n\nSpock\u3068\u306f\nGroovy\u3067\u52d5\u4f5c\u3059\u308b\u3001\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\nJava\u30b3\u30fc\u30c9\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3068\u3044\u3046\u3068\u3001\u307e\u305a\u4f55\u306f\u306a\u304f\u3068\u3082JUnit\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002\nJUnit\u306fJava\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3068\u3057\u3066\u6b74\u53f2\u3082\u9577\u304f\u3001\u512a\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3042\u308b\u304c\u3001\u30a4\u30de\u30a4\u30c1\u306a\u70b9\u3068\u3057\u3066\n\n\u30c6\u30b9\u30c8\u5931\u6557\u6642\u306b\u4f55\u304c\u3069\u3046\u30c0\u30e1\u3060\u3063\u305f\u304b\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8(Parameterized Test)\u3092\u66f8\u304f\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\uff06\u30b3\u30fc\u30c9\u898b\u306b\u304f\u3044\n\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u3067\u5931\u6557\u3057\u305f\u3068\u304d\u306b\u3069\u306e\u30c7\u30fc\u30bf\u3067\u5931\u6557\u3057\u305f\u306e\u304b\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n\u6a19\u6e96\u3067\u30e2\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u3089\u305a\u3001\u76f8\u4e92\u4f5c\u7528\u30c6\u30b9\u30c8\u306b\u5225\u9014\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\u304c\u6319\u3052\u3089\u308c\u308b\u3002\u540c\u3058\u3050\u3089\u3044\u6709\u540d\u306aTestNG\u3082\u4f3c\u305f\u308a\u5bc4\u3063\u305f\u308a\u3002\nSpock\u306f\u4e0b\u8a18\u306e\u7279\u5fb4\u3092\u305d\u306a\u3048\u3066\u3044\u308b\n\nPowerAssert\u306b\u3088\u308b\u5f37\u529b\u306a\u30ec\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0 (Groovy\u672c\u4f53\u306ePowerAssert\u3068\u3082\u307e\u305f\u9055\u3046\u3089\u3057\u3044)\nDSL\u3092\u4f7f\u3063\u305f\u7c21\u6f54\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u8a18\u8ff0\n\u5358\u7d14\u660e\u5feb\u306a\u30c7\u30fc\u30bf\u30c9\u30ea\u30d6\u30f3\u30c6\u30b9\u30c8\u306e\u8a18\u8ff0\u304c\u53ef\u80fd\n\u6a19\u6e96\u3067Mock\u306eAPI\u3092\u63d0\u4f9b\n\n\u65e2\u5b58\u306eJava\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u5c0e\u5165\u3057\u305f\u3044\u4eba\u3084\u3001JUnit\u3084TestNG\u3067\u30c6\u30b9\u30c8\u66f8\u3044\u3066\u308b\u3051\u3069\u3001\n\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u66f8\u3051\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u308b\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n\u984c\u6750\n\u984c\u6750\u306b\u3059\u308b\u306e\u306f\u3001\u4e0b\u8a18\u306e4\u3064\u306eJava\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u4eee\u60f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u9577\u304f\u306a\u308b\u306e\u3067\u672b\u5c3e\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\n\n\u30af\u30e9\u30b9\n\u610f\u5473\n\n\n\n\nPerson\n\u5e74\u9f62\u3068\u6027\u5225\u3092\u5c5e\u6027\u306b\u6301\u3064POJO\n\n\nPersonChecker\nPerson\u306b\u5bfe\u3057\u3066\u7537\u6027\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308bisMele\u30e1\u30bd\u30c3\u30c9\u3084\u3001\u5927\u4eba\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308bisAdult\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30af\u30e9\u30b9\n\n\nCapacityCounter\n\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306e\u72b6\u614b\u3092\u6301\u3064\u30ab\u30a6\u30f3\u30bf\u30fc\n\n\nAttractionRoom\n\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u30eb\u30fc\u30e0\u30af\u30e9\u30b9\u3002\u30eb\u30fc\u30e0\u306b\u4eba\u3092\u8ffd\u52a0\u3059\u308badd\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3002\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306f\u5408\u8a0820\u3042\u308a\u3001\u7537\u6027\u306e\u5927\u4eba\u306f3\u3001\u5973\u6027\u306e\u5927\u4eba\u306f2\u3001\u5b50\u4f9b\u306f\u7537\u5973\u3068\u30821\u3092\u6d88\u8cbb\u3059\u308b\u3002\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u3063\u305f\u3089\u6e80\u54e1\u3067\u3001\u305d\u308c\u4ee5\u4e0a\u306f\u4eba\u3092\u8ffd\u52a0\u3067\u304d\u306a\u3044\n\n\n\n\n\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\n\n\u307e\u305a\u306fJUnit\u3067\u66f8\u3044\u3066\u307f\u308b\nPersonChecker\u30af\u30e9\u30b9\u306eisAdult\u30e1\u30bd\u30c3\u30c9\u3068isMale\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092JUnit\u3067\u66f8\u3044\u3066\u307f\u308b\u3002\n\nPersonCheckerTest.java\npackage spockexample;\n\nimport org.junit.Before;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.experimental.theories.DataPoints;\nimport org.junit.experimental.theories.Theories;\nimport org.junit.experimental.theories.Theory;\nimport org.junit.runner.RunWith;\n\nimport static org.hamcrest.core.Is.is;\nimport static org.junit.Assert.assertThat;\n\n@RunWith(Enclosed.class)\npublic class PersonCheckerTest {\n\n    @RunWith(Theories.class)\n    public static class isAdultTest {\n        static PersonChecker sut;\n\n        @Before\n        public void setup() {\n            sut = new PersonChecker();\n        }\n\n        /**\n         * \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u306a\u308bFixture\u5b9a\u7fa9\n         */\n        static class Fixture {\n            int age;\n            String sex;\n            boolean result;\n\n            Fixture(int age, String sex, boolean expected) {\n                this.age = age;\n                this.sex = sex;\n                this.result = expected;\n            }\n        }\n\n        /**\n         * \u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n         */\n        @DataPoints\n        public static Fixture[] fixtures = {\n                new Fixture(0, \"m\", false),\n                new Fixture(19, \"m\", false),\n                new Fixture(20, \"m\", true),\n                new Fixture(0, \"f\", false),\n                new Fixture(19, \"f\", false),\n                new Fixture(20, \"f\", true),\n        };\n\n        @Theory\n        public void testIsAdult(Fixture fixture) {\n            // Fixture\u306e\u5024\u3092\u4f7f\u3063\u3066Person\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\n            Person person = new Person(fixture.sex, fixture.age);\n\n            // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\uff06\u7d50\u679c\u5224\u5b9a\n            assertThat(sut.isAdult(person), is(fixture.result));\n        }\n    }\n\n    @RunWith(Theories.class)\n    public static class isMaleTest {\n        static PersonChecker sut;\n\n        @Before\n        public void setup() {\n            sut = new PersonChecker();\n        }\n\n        /**\n         * \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u306a\u308bFixture\u5b9a\u7fa9\n         */\n        static class Fixture {\n            int age;\n            String sex;\n            boolean result;\n\n            Fixture(int age, String sex, boolean expected) {\n                this.age = age;\n                this.sex = sex;\n                this.result = expected;\n            }\n        }\n\n        /**\n         * \u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n         */\n        @DataPoints\n        public static Fixture[] fixtures = {\n                new Fixture(19, \"m\", true),\n                new Fixture(20, \"m\", true),\n                new Fixture(19, \"f\", false),\n                new Fixture(20, \"f\", false),\n        };\n\n        @Theory\n        public void testIsMale(Fixture fixture) {\n            // Fixture\u306e\u5024\u3092\u4f7f\u3063\u3066Person\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\n            Person person = new Person(fixture.sex, fixture.age);\n\n            // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\uff06\u7d50\u679c\u5224\u5b9a\n            assertThat(sut.isMale(person), is(fixture.result));\n        }\n    }\n}\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u5b9a\u7fa9\u304c\u5fc5\u8981\u3060\u3063\u305f\u308a\u3001static\u306a\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30aa\u30f3\u30d1\u30ec\u30fc\u30c9\u3060\u3063\u305f\u308a\u3002\n\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u8f9b\u3044\u3002\n\u81ea\u5206\u304c\u77e5\u3089\u306a\u3044\u3060\u3051\u3067\u3082\u3046\u3061\u3087\u3063\u3068\u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u66f8\u304d\u65b9\u304c\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\n\u66f8\u3044\u305fJUnit\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\u2191\u306e\u30b3\u30fc\u30c9\u306f\u30aa\u30fc\u30eb\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308b\u306e\u3060\u3051\u3069\u3001\u308f\u3056\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u5931\u6557\u3055\u305b\u3066\u307f\u305f\u5834\u5408\u3001\n\u3053\u3093\u306a\u51fa\u529b\u306b\u306a\u308b\u3002\norg.junit.experimental.theories.internal.ParameterizedAssertionError: testIsAdult(fixtures[4])\n    at org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(Theories.java:192)\n    at org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:146)\n    at org.junit.experimental.theories.Theories$TheoryAnchor.runWithCompleteAssignment(Theories.java:127)\n    at org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:111)\n    at org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:120)\n    at org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:109)\n    at org.junit.experimental.theories.Theories$TheoryAnchor.evaluate(Theories.java:96)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runners.Suite.runChild(Suite.java:127)\n    at org.junit.runners.Suite.runChild(Suite.java:26)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\nCaused by: java.lang.AssertionError: \nExpected: is <true>\n     but: was <false>\n    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n    at org.junit.Assert.assertThat(Assert.java:865)\n    at org.junit.Assert.assertThat(Assert.java:832)\n    at spockexample.PersonCheckerTest$isAdultTest.testIsAdult(PersonCheckerTest.java:59)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.experimental.theories.Theories$TheoryAnchor$2.evaluate(Theories.java:175)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:141)\n    ... 31 more\n\n\u671f\u5f85\u3055\u308c\u305f\u7d50\u679c\u3068\u3001\u5b9f\u969b\u306e\u5024\u306e\u6bd4\u8f03\u306e\u307f\u304c\nExpected: is <true>\n     but: was <false>\n\n\u3068\u51fa\u529b\u3055\u308c\u308b\u3060\u3051\u3067\u3001\u5b9f\u969b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u3069\u306e\u30c7\u30fc\u30bf\u3067\u5931\u6557\u3057\u305f\u306e\u304b\u3092\u77e5\u308b\u306b\u306f\u3001\ntestIsAdult(fixtures[4])\n\n\u3092\u624b\u304c\u304b\u308a\u306b\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u8a72\u5f53\u30c7\u30fc\u30bf\u3092\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nSpock\u3067\u66f8\u3044\u3066\u307f\u308b\n\u540c\u3058\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u3092Spock\u3067\u66f8\u3044\u3066\u307f\u308b\u3002\n\nPersonCheckerSpec.groovy\npackage spockexample\n\nimport spock.lang.Specification\nimport spock.lang.Unroll;\n\nclass PersonCheckerSpec extends Specification {\n\n    @Unroll\n    def \"#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u5927\u4eba\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b\"() {\n        setup:\n        def sut = new PersonChecker()\n\n        expect:\n        sut.isAdult(new Person(sex, age)) == result\n\n        where:\n        age | sex || result\n        0   | \"m\" || false\n        19  | \"m\" || false\n        20  | \"m\" || true\n        0   | \"f\" || false\n        19  | \"f\" || false\n        20  | \"f\" || true\n    }\n\n    @Unroll\n    def \"#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u3001\u7537\u6027\u5316\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b()\"() {\n        setup:\n        def sut = new PersonChecker()\n\n        expect:\n        sut.isMale(new Person(sex, age)) == result\n\n        where:\n        age | sex || result\n        19  | \"m\" || true\n        20  | \"m\" || true\n        19  | \"f\" || false\n        20  | \"f\" || false\n    }\n}\n\n\n\u3082\u306f\u3084\u8aac\u660e\u4e0d\u8981\u306a\u307b\u3069\u76ee\u7684\u306b\u5bfe\u3057\u3066\u660e\u5feb\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u304a\u5206\u304b\u308a\u3044\u305f\u3060\u3051\u308b\u3060\u308d\u3046\u3002\n\n\u66f8\u3044\u305fSpock\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\u3053\u3061\u3089\u3082\u308f\u3056\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u5931\u6557\u3055\u305b\u305f\u7d50\u679c\u3092\u51fa\u529b\u3057\u3066\u307f\u308b\u3002\n\n\u5b9f\u884c\u7d50\u679c\nCondition not satisfied:\n\nsut.isAdult(new Person(sex, age)) == result\n|   |       |          |    |     |  |\n|   false   |          f    19    |  true\n|           |                     false\n|           spockexample.Person@58c9fe14\nspockexample.PersonChecker@6633e42f\n <Click to see difference>\n\n    at spockexample.PersonCheckerSpec.#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u5927\u4eba\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b(PersonCheckerSpec.groovy:14)\n\n\nSpock\u306ePowerAssert\u6a5f\u80fd\u3067\u3001\u3069\u306e\u5909\u6570\u3001\u3069\u306e\u5f0f\u306b\u3069\u3093\u306a\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3001\n\u306a\u305c\u30c6\u30b9\u30c8\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3063\u305f\u304b\u304c\u4e00\u76ee\u77ad\u7136\u3002\u7d20\u6575\u3002\n\u6587\u5b57\u5217\u540c\u58eb\u306e\u6bd4\u8f03\u3060\u3068\u3001\u4e00\u81f4\u7387\u306a\u3093\u304b\u3082\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\ndef test() {\n    setup:\n    def strA = \"Hello Spock!\"\n    def strB = \"Hello Java!\"\n\n    expect:\n    strA == strB\n}\n\n\n\u5b9f\u884c\u7d50\u679c\nCondition not satisfied:\n\nstrA == strB\n|    |  |\n|    |  Hello Java!\n|    false\n|    5 differences (58% similarity)\n|    Hello (Spock)!\n|    Hello (Java-)!\nHello Spock!\n\n\n\n\u5b9f\u884c\u6642\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u52d5\u7684\u306b\u308f\u304b\u308a\u3084\u3059\u304f\n\u4e0a\u306e\u4f8b\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u3068\u3053\u308d\u306b\u6587\u5b57\u5217\u3092\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u306b\u3057\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u3067\u3001\u5b9f\u884c\u6642\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u52d5\u7684\u306b\u8a55\u4fa1\u3055\u308c\u3001\u7d50\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4f8b\u3048\u3070\u3001Eclipse\u3067\u3053\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n\u305f\u3060\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u306b@Unroll\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u6642\u306b\u306e\u307f\u6709\u52b9\u3002\n\n\u5931\u6557\u6642\u306e\u6319\u52d5\n\u306a\u304a\u3001\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u8f09\u305b\u3066\u3044\u306a\u3044\u304c\u3001JUnit\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306f\u3001\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u5834\u5408\u306b\n\u5f8c\u7d9a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\nSpock\u306f\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u3082\u306e\u304c\u3042\u308d\u3046\u304c\u306a\u304b\u308d\u3046\u304c\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u8907\u6570\u306e\u5931\u6557\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u30ec\u30dd\u30fc\u30c8\u304c\u305d\u306e\u305d\u308c\u305e\u308c\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\n\u4f8b\u5916\u306e\u30c6\u30b9\u30c8\n\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30c6\u30b9\u30c8\u3082Spock\u306a\u3089\u7c21\u6f54\u306b\u8a18\u8ff0\u304c\u53ef\u80fd\n\u203b\u4ee5\u964d\u30e1\u30bd\u30c3\u30c9\u90e8\u5206\u306e\u307f\u8a18\u8f09\n    def \"\u4f8b\u5916\u306e\u30c6\u30b9\u30c8\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n\n        when:\n        sut.add(null)\n\n        then:\n        // IllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u306f\u305a\n        def ex = thrown(IllegalArgumentException)\n        // Exception\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300cnull is not acceptable.\u300d\u306e\u306f\u305a\n        ex.getMessage() == \"null is not acceptable.\"\n    }\n\n\u5358\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\u4f8b\u5916\u306e\u30af\u30e9\u30b9\u304c\u5224\u5b9a\u51fa\u6765\u308c\u3070\u3088\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308c\u3070\u3001thrown(\u4f8b\u5916\u30af\u30e9\u30b9)\u3060\u3051\u3067\u3088\u3044\u3002\n\u305d\u308c\u4ee5\u4e0a\u306e\u30c1\u30a7\u30c3\u30af\u3092\u3059\u308b\u306a\u3089\u3001thrown\u30e1\u30bd\u30c3\u30c9\u304c\u767a\u751f\u3057\u305fThrowable\u3092\u8fd4\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308c\u3070\u3088\u3044\u3002\n\n\u30e2\u30c3\u30af\u5316\u306b\u3088\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\n\n\u547c\u3073\u51fa\u3057\u56de\u6570\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308b\u30c6\u30b9\u30c8\n\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3053\u3068\u306b\u3088\u308a\u3001\u5185\u90e8\u3067\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f55\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u4f55\u56de\u547c\u3073\u51fa\u3055\u308c\u305f\u304b\u3092\n\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306e\u66f8\u304d\u65b9\u3002\n    def \"\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6b63\u3057\u304f\u547c\u3070\u308c\u3066\u3044\u308b\u304b\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30e2\u30c3\u30af\u5316\n        CapacityCounter capacityCounter = Mock()\n        // \u3053\u3063\u3061\u306e\u66f8\u304d\u65b9\u3067\u3082\u53ef\n        //def capacityCounter = Mock(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        // 20\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person1 = new Person(\"f\", 20)\n        sut.add(person1)\n        then:\n        // 2\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(2)\n\n        when:\n        // 19\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person2 = new Person(\"f\", 19)\n        sut.add(person2)\n        then:\n        // 1\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(1)\n\n        when:\n        // 20\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person3 = new Person(\"m\", 20)\n        sut.add(person3)\n        then:\n        // 3\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(3)\n\n        when:\n        // 19\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person4 = new Person(\"m\", 19)\n        sut.add(person4)\n        then:\n        // 1\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(1)\n    }\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\u5f53\u7136\u306a\u304c\u3089\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u3066\u3001\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u306b\u3082\u3067\u304d\u308b\n    @Unroll\n    def \"\u30e2\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30e2\u30c3\u30af\u5316\n        CapacityCounter capacityCounter = Mock()\n        // \u3053\u3063\u3061\u306e\u66f8\u304d\u65b9\u3067\u3082\u53ef\n        //def capacityCounter = Mock(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        def person = new Person(sex, age)\n        sut.add(person)\n        then:\n        // add\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308baddCount\u304ccalled\u56de\u547c\u3070\u308c\u305f\u306f\u305a\n        called * capacityCounter.addCount(add)\n\n        where:\n        age | sex || add | called\n        20  | \"m\" || 3   | 1\n        20  | \"f\" || 2   | 1\n        19  | \"m\" || 1   | 1\n        19  | \"f\" || 1   | 1\n    }\n\n\n\u30b9\u30bf\u30d6\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f9d\u5b58\u3059\u308b\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u5bfe\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e8b\u524d\u306b\u5ba3\u8a00\u3059\u308b\u3002\n    def \"\u30b9\u30bf\u30d6\u306b\u3088\u3063\u3066\u30e2\u30c3\u30af\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\u3059\u308b\"() {\n        setup:\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n\n        // capacityCounter \u3092\u30e2\u30c3\u30af\u5316\n        def capacityCounter = Mock(CapacityCounter)\n        // getCount()\u304c\u5e38\u306b19\u3092\u8fd4\u3059\u3088\u3046\u30b9\u30bf\u30d6\u3092\u5ba3\u8a00\u3059\u308b\n        // 19\u3092\u8fd4\u3059\u5834\u5408\u3001\u5b50\u3069\u3082\u306a\u3089\u8ffd\u52a0\u3067\u304d\u308b\u304c\u3001\u5927\u4eba\u306f\u8ffd\u52a0\u3067\u304d\u306a\u3044\n        capacityCounter.getCount() >> 19\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        def person1 = new Person(\"m\", 19)\n        sut.add(person1)\n\n        then:\n        1 * capacityCounter.addCount(1)\n\n        when:\n        def person2 = new Person(\"f\", 20)\n        sut.add(person2)\n\n        then:\n        thrown(IllegalArgumentException)\n    }\n\n\n\u30b9\u30d1\u30a4\n\u30b9\u30d1\u30a4\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u632f\u308b\u821e\u3044\u3092\u6b8b\u3057\u305f\u307e\u307e\u3001\u547c\u3073\u51fa\u3057\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n    def \"\u5b9f\u969b\u306e\u51e6\u7406\u3092\u884c\u3044\u3064\u3064\u30b9\u30d1\u30a4\u3067\u591a\u91cd\u5316\u30c6\u30b9\u30c8\"() {\n        setup:\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30b9\u30d1\u30a4\u3068\u3057\u3066\u4f5c\u6210\n        CapacityCounter capacityCounter = Spy(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        // 20\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person1 = new Person(\"f\", 20)\n        // 19\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person2 = new Person(\"f\", 19)\n        // 20\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person3 = new Person(\"m\", 20)\n        // 19\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person4 = new Person(\"m\", 19)\n\n        sut.add(person1)\n        sut.add(person2)\n        sut.add(person3)\n        sut.add(person4)\n\n        then:\n        // \u30b9\u30d1\u30a4\u306b\u3088\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u76e3\u8996\u3067\u304d\u308b\n        1 * capacityCounter.addCount(3)\n        1 * capacityCounter.addCount(2)\n        2 * capacityCounter.addCount(1)\n        // 0 * \u306fthen:\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306b\u66f8\u304f\u3053\u3068\n        0 * capacityCounter.reduceCount(_)\n\n        expect:\n        // \u30e2\u30c3\u30af\u3067\u306f\u306a\u304f\u30b9\u30d1\u30a4\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u672c\u7269\u306e\u632f\u308b\u821e\u3044\u3082\u78ba\u8a8d\u3067\u304d\u308b\n        capacityCounter.getCount() == 7\n    }\n\n\n\u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\nSpock\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306f\u3001spock.lang.Specification\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\u5b9f\u969b\u7684\u306a\u30c6\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092feature\u30e1\u30bd\u30c3\u30c9\u3068\u547c\u3076\u3002\n\u3064\u307e\u308a\u4e0a\u8a18\u306e\u4f8b\u306f\u3059\u3079\u3066feature\u30e1\u30bd\u30c3\u30c9\u3002\n\u305d\u306e\u4ed6\u306b\u3001\u5404feature\u30e1\u30bd\u30c3\u30c9\u306b\u5171\u901a\u306e\u524d\u5f8c\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\n\n\n\n\u30e1\u30bd\u30c3\u30c9\n\u5185\u5bb9\nJUnit\u3067\u8a00\u3046\u3068\n\n\n\n\ndef setup()\n\u5404feature\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b\n\n@Before\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\ndef cleanup()\n\u5404feature\u30e1\u30bd\u30c3\u30c9\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b\n\n@After\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\ndef setupSpec()\n\u6700\u521d\u306efeature\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b1\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\n\n@BeforeClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\ndef cleanupSpec()\n\u6700\u5f8c\u306efeature\u30e1\u30bd\u30c3\u30c9\u306e\u5f8c\u306b1\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b\n\n@AfterClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\n\n\n\n\n\u30d6\u30ed\u30c3\u30af\nfeature\u30e1\u30bd\u30c3\u30c9\u5185\u306e\u30d6\u30ed\u30c3\u30af(setup:\u3068\u304bwhere:\u3068\u304b)\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7a2e\u985e\u304c\u3042\u308b\u3002\n\n\n\n\u30d6\u30ed\u30c3\u30af\n\u610f\u5473\n\n\n\n\nsetup: or given:\n\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u3001\u30c7\u30fc\u30bf\u306e\u521d\u671f\u5316\u306a\u3069\u306e\u6e96\u5099\u3002(given\u306fsetup\u306e\u30a8\u30a4\u30ea\u30a2\u30b9)\n\n\nwhen:\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u3092\u5b9f\u884c\n\n\nthen:\nwhen\u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u306e\u691c\u8a3c\n\n\nexpect:\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u5b9f\u884c\u3068\u7d50\u679c\u306e\u691c\u8a3c\u3092\u540c\u6642\u306b\n\n\ncleanup:\n\u30c6\u30b9\u30c8\u3067\u4f5c\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u524a\u9664\u306a\u3069\u306e\u5f8c\u59cb\u672b\u51e6\u7406\n\n\nwhere:\n\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u304d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5b9a\u7fa9\n\n\n\nwhen\u3068then\u306f\u30bb\u30c3\u30c8\u3067\u4f7f\u3046\u3002\nwhen -> then -> when -> then ...\u3068\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306fOK\u3002\nwhen\u3068then\u306e\u9593\u306bexpect\u3092\u7f6e\u304f\u3053\u3068\u3082\u3067\u304d\u306a\u3044\u3002(\u610f\u5473\u5206\u304b\u3093\u306a\u3044\u3057\u306d)\n\n\u4ed8\u9332\uff1a\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eJava\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nPerson.java\npackage spockexample;\n\n/**\n * \u4eba\u3092\u8868\u3059\u30af\u30e9\u30b9\u3002\n * \u5e74\u9f62\u3068\u6027\u5225\u3092\u5c5e\u6027\u3068\u3057\u3066\u6301\u3064\u3002\n */\npublic class Person {\n    /** \u6027\u5225(\"m\" or \"f\") */\n    private String sex;\n    /** \u5e74\u9f62 */\n    private int age;\n\n    public Person(String sex, int age) {\n        this.sex = sex;\n        this.age = age;\n    }\n\n    public String getSex() {\n        return sex;\n    }\n\n    public void setSex(String sex) {\n        this.sex = sex;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n\n\n\nPersonChecker.java\npackage spockexample;\n\npublic class PersonChecker {\n    /**\n     * Person\u304c\u5927\u4eba(20\u6b73\u4ee5\u4e0a)\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\n     * @param person \u5224\u5b9a\u3059\u308b\u4eba\n     * @return \u5927\u4eba\u3067\u3042\u308c\u3070true\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070false\n     */\n    public boolean isAdult(Person person) {\n        return person.getAge() >= 20;\n    }\n\n    /**\n     * \u7537\u6027\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n     * @param person \u5224\u5b9a\u3059\u308b\u4eba\n     * @return \u7537\u6027\u3067\u3042\u308c\u3070true\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070false\n     */\n    public boolean isMale(Person person) {\n        return \"m\".equals(person.getSex());\n    }\n}\n\n\n\nCapacityCounter.java\npackage spockexample;\n\n/**\n * \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u6570\u5024\u3067\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\u3002\n */\npublic class CapacityCounter {\n    private int count = 0;\n\n    public CapacityCounter() {\n    }\n\n    /**\n     * \u6307\u5b9a\u3055\u308c\u305f\u6570\u3060\u3051\u30ab\u30a6\u30f3\u30c8\u3092\u52a0\u7b97\u3059\u308b\n     * @param count \u52a0\u7b97\u3059\u308b\u30ab\u30a6\u30f3\u30c8\n     */\n    public void addCount(int count) {\n        this.count += count;\n    }\n\n    /**\n     * \u6307\u5b9a\u3055\u308c\u305f\u6570\u3060\u3051\u30ab\u30a6\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\n     * @param count \u6e1b\u7b97\u3059\u308b\u30ab\u30a6\u30f3\u30c8\n     */\n    public void reduceCount(int count) {\n        this.count -= count;\n    }\n\n    /**\n     * \u73fe\u5728\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n     * @return \u73fe\u5728\u306e\u30ab\u30a6\u30f3\u30c8\n     */\n    public int getCount() {\n        return this.count;\n    }\n}\n\n\n\nAttractionRoom.java\npackage spockexample;\n\n/**\n * \u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306b\u4eba\u3092\u8f09\u305b\u305f\u308a\u964d\u308d\u3057\u305f\u308a\u3059\u308b\u30af\u30e9\u30b9\u3002\n * \u8f09\u305b\u308b\u4eba\u306e\u5e74\u9f62\u3084\u6027\u5225\u306b\u3088\u3063\u3066\u3001\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u8a08\u7b97\u3057\u3066\u3044\u304f\n */\npublic class AttractionRoom {\n    private PersonChecker personChecker;\n    public void setPersonChecker(PersonChecker personChecker) {\n        this.personChecker = personChecker;\n    }\n\n    private CapacityCounter capacityCounter;\n    public void setCapacityCounter(CapacityCounter capacityCounter) {\n        this.capacityCounter = capacityCounter;\n    }\n\n    private int capacityLimit = 20;\n    public void setCapacityLimit(int capacityLimit) {\n        this.capacityLimit = capacityLimit;\n    }\n\n    /**\n     * \u6307\u5b9a\u3055\u308c\u305f\u4eba\u3092\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3059\u308b\u3002\n     * \u3082\u3057\u8ffd\u52a0\u3057\u305f\u3089\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306f\u3001\n     * IllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\n     * @param person \u8ffd\u52a0\u3059\u308b\u4eba\n     * @throws java.lang.IllegalArgumentException \u8ffd\u52a0\u3057\u305f\u3089\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\n     */\n    public void add(Person person) throws IllegalArgumentException {\n        if (person == null) {\n            throw new IllegalArgumentException(\"null\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\");\n        }\n\n        int add = 0;\n        if (!personChecker.isAdult(person)) {\n            // \u5b50\u3069\u3082\u306f\u7537\u5973\u3068\u30821\n            add = 1;\n        } else if (personChecker.isMale(person)) {\n            // \u5927\u4eba\u3067\u7537\u6027\u306e\u5834\u5408\u306f3\n            add = 3;\n        } else {\n            // \u5927\u4eba\u3067\u5973\u6027\u306e\u5834\u5408\u306f2\n            add = 2;\n        }\n\n        // \u3053\u306e\u4eba\u3092\u4e57\u305b\u308b\u3068\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u308b\u5834\u5408\u306f\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\n        if (capacityCounter.getCount() > (capacityLimit - add)) {\n            throw new IllegalArgumentException(\"limit over\");\n        }\n\n        capacityCounter.addCount(add);\n    }\n\n    /**\n     * \u73fe\u5728\u307e\u3067\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n     * @return \u73fe\u5728\u307e\u3067\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30ab\u30a6\u30f3\u30c8\n     */\n    public int getCount() {\n        return this.capacityCounter.getCount();\n    }\n}\n\n\n\n# Spock\u3068\u306f\nGroovy\u3067\u52d5\u4f5c\u3059\u308b\u3001\u30c6\u30b9\u30c6\u30a3\u30f3\u30b0\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3002\n\nJava\u30b3\u30fc\u30c9\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3068\u3044\u3046\u3068\u3001\u307e\u305a\u4f55\u306f\u306a\u304f\u3068\u3082JUnit\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u3002\nJUnit\u306fJava\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u3068\u3057\u3066\u6b74\u53f2\u3082\u9577\u304f\u3001\u512a\u308c\u305f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3042\u308b\u304c\u3001\u30a4\u30de\u30a4\u30c1\u306a\u70b9\u3068\u3057\u3066\n\n+ \u30c6\u30b9\u30c8\u5931\u6557\u6642\u306b\u4f55\u304c\u3069\u3046\u30c0\u30e1\u3060\u3063\u305f\u304b\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n+ \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8(Parameterized Test)\u3092\u66f8\u304f\u306e\u304c\u3081\u3093\u3069\u304f\u3055\u3044\uff06\u30b3\u30fc\u30c9\u898b\u306b\u304f\u3044\n+ \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u3067\u5931\u6557\u3057\u305f\u3068\u304d\u306b\u3069\u306e\u30c7\u30fc\u30bf\u3067\u5931\u6557\u3057\u305f\u306e\u304b\u304c\u5206\u304b\u308a\u306b\u304f\u3044\n+ \u6a19\u6e96\u3067\u30e2\u30c3\u30af\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u3089\u305a\u3001\u76f8\u4e92\u4f5c\u7528\u30c6\u30b9\u30c8\u306b\u5225\u9014\u30e2\u30c3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n\u304c\u6319\u3052\u3089\u308c\u308b\u3002\u540c\u3058\u3050\u3089\u3044\u6709\u540d\u306aTestNG\u3082\u4f3c\u305f\u308a\u5bc4\u3063\u305f\u308a\u3002\n\nSpock\u306f\u4e0b\u8a18\u306e\u7279\u5fb4\u3092\u305d\u306a\u3048\u3066\u3044\u308b\n\n+ PowerAssert\u306b\u3088\u308b\u5f37\u529b\u306a\u30ec\u30dd\u30fc\u30c6\u30a3\u30f3\u30b0 (Groovy\u672c\u4f53\u306ePowerAssert\u3068\u3082\u307e\u305f\u9055\u3046\u3089\u3057\u3044)\n+ DSL\u3092\u4f7f\u3063\u305f\u7c21\u6f54\u3067\u5206\u304b\u308a\u3084\u3059\u3044\u8a18\u8ff0\n+ \u5358\u7d14\u660e\u5feb\u306a\u30c7\u30fc\u30bf\u30c9\u30ea\u30d6\u30f3\u30c6\u30b9\u30c8\u306e\u8a18\u8ff0\u304c\u53ef\u80fd\n+ \u6a19\u6e96\u3067Mock\u306eAPI\u3092\u63d0\u4f9b\n\n\u65e2\u5b58\u306eJava\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u5c0e\u5165\u3057\u305f\u3044\u4eba\u3084\u3001JUnit\u3084TestNG\u3067\u30c6\u30b9\u30c8\u66f8\u3044\u3066\u308b\u3051\u3069\u3001\n\u3082\u3046\u3061\u3087\u3063\u3068\u697d\u306b\u66f8\u3051\u306a\u3044\u304b\u3068\u601d\u3063\u3066\u308b\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u984c\u6750\n\n\u984c\u6750\u306b\u3059\u308b\u306e\u306f\u3001\u4e0b\u8a18\u306e4\u3064\u306eJava\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u305f\u4eee\u60f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u9577\u304f\u306a\u308b\u306e\u3067[\u672b\u5c3e](http://qiita.com/euno7/items/1e834d3d58da3e659f92#1-6)\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n|\u30af\u30e9\u30b9|\u610f\u5473|\n|:--|:--|\n|Person|\u5e74\u9f62\u3068\u6027\u5225\u3092\u5c5e\u6027\u306b\u6301\u3064POJO|\n|PersonChecker|Person\u306b\u5bfe\u3057\u3066\u7537\u6027\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308bisMele\u30e1\u30bd\u30c3\u30c9\u3084\u3001\u5927\u4eba\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308bisAdult\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u30af\u30e9\u30b9|\n|CapacityCounter|\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306e\u72b6\u614b\u3092\u6301\u3064\u30ab\u30a6\u30f3\u30bf\u30fc|\n|AttractionRoom|\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u30eb\u30fc\u30e0\u30af\u30e9\u30b9\u3002\u30eb\u30fc\u30e0\u306b\u4eba\u3092\u8ffd\u52a0\u3059\u308badd\u30e1\u30bd\u30c3\u30c9\u3092\u6301\u3064\u3002\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306f\u5408\u8a0820\u3042\u308a\u3001\u7537\u6027\u306e\u5927\u4eba\u306f3\u3001\u5973\u6027\u306e\u5927\u4eba\u306f2\u3001\u5b50\u4f9b\u306f\u7537\u5973\u3068\u30821\u3092\u6d88\u8cbb\u3059\u308b\u3002\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u304c\u3044\u3063\u3071\u3044\u306b\u306a\u3063\u305f\u3089\u6e80\u54e1\u3067\u3001\u305d\u308c\u4ee5\u4e0a\u306f\u4eba\u3092\u8ffd\u52a0\u3067\u304d\u306a\u3044|\n\n# \u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\n\n## \u307e\u305a\u306fJUnit\u3067\u66f8\u3044\u3066\u307f\u308b\n\nPersonChecker\u30af\u30e9\u30b9\u306eisAdult\u30e1\u30bd\u30c3\u30c9\u3068isMale\u30e1\u30bd\u30c3\u30c9\u3092\u30c6\u30b9\u30c8\u3059\u308b\u305f\u3081\u306e\u30b3\u30fc\u30c9\u3092JUnit\u3067\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```java:PersonCheckerTest.java\npackage spockexample;\n\nimport org.junit.Before;\nimport org.junit.experimental.runners.Enclosed;\nimport org.junit.experimental.theories.DataPoints;\nimport org.junit.experimental.theories.Theories;\nimport org.junit.experimental.theories.Theory;\nimport org.junit.runner.RunWith;\n\nimport static org.hamcrest.core.Is.is;\nimport static org.junit.Assert.assertThat;\n\n@RunWith(Enclosed.class)\npublic class PersonCheckerTest {\n\n    @RunWith(Theories.class)\n    public static class isAdultTest {\n        static PersonChecker sut;\n\n        @Before\n        public void setup() {\n            sut = new PersonChecker();\n        }\n\n        /**\n         * \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u306a\u308bFixture\u5b9a\u7fa9\n         */\n        static class Fixture {\n            int age;\n            String sex;\n            boolean result;\n\n            Fixture(int age, String sex, boolean expected) {\n                this.age = age;\n                this.sex = sex;\n                this.result = expected;\n            }\n        }\n\n        /**\n         * \u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n         */\n        @DataPoints\n        public static Fixture[] fixtures = {\n                new Fixture(0, \"m\", false),\n                new Fixture(19, \"m\", false),\n                new Fixture(20, \"m\", true),\n                new Fixture(0, \"f\", false),\n                new Fixture(19, \"f\", false),\n                new Fixture(20, \"f\", true),\n        };\n\n        @Theory\n        public void testIsAdult(Fixture fixture) {\n            // Fixture\u306e\u5024\u3092\u4f7f\u3063\u3066Person\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\n            Person person = new Person(fixture.sex, fixture.age);\n\n            // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\uff06\u7d50\u679c\u5224\u5b9a\n            assertThat(sut.isAdult(person), is(fixture.result));\n        }\n    }\n\n    @RunWith(Theories.class)\n    public static class isMaleTest {\n        static PersonChecker sut;\n\n        @Before\n        public void setup() {\n            sut = new PersonChecker();\n        }\n\n        /**\n         * \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u306a\u308bFixture\u5b9a\u7fa9\n         */\n        static class Fixture {\n            int age;\n            String sex;\n            boolean result;\n\n            Fixture(int age, String sex, boolean expected) {\n                this.age = age;\n                this.sex = sex;\n                this.result = expected;\n            }\n        }\n\n        /**\n         * \u30c6\u30b9\u30c8\u306b\u4f7f\u7528\u3059\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\n         */\n        @DataPoints\n        public static Fixture[] fixtures = {\n                new Fixture(19, \"m\", true),\n                new Fixture(20, \"m\", true),\n                new Fixture(19, \"f\", false),\n                new Fixture(20, \"f\", false),\n        };\n\n        @Theory\n        public void testIsMale(Fixture fixture) {\n            // Fixture\u306e\u5024\u3092\u4f7f\u3063\u3066Person\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u521d\u671f\u5316\n            Person person = new Person(fixture.sex, fixture.age);\n\n            // \u30c6\u30b9\u30c8\u30e1\u30bd\u30c3\u30c9\u5b9f\u884c\uff06\u7d50\u679c\u5224\u5b9a\n            assertThat(sut.isMale(person), is(fixture.result));\n        }\n    }\n}\n```\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u305f\u3081\u306e\u30af\u30e9\u30b9\u5b9a\u7fa9\u304c\u5fc5\u8981\u3060\u3063\u305f\u308a\u3001static\u306a\u5185\u90e8\u30af\u30e9\u30b9\u306e\u30aa\u30f3\u30d1\u30ec\u30fc\u30c9\u3060\u3063\u305f\u308a\u3002\n\u306a\u3093\u304b\u3044\u308d\u3044\u308d\u8f9b\u3044\u3002\n\u81ea\u5206\u304c\u77e5\u3089\u306a\u3044\u3060\u3051\u3067\u3082\u3046\u3061\u3087\u3063\u3068\u30a8\u30ec\u30ac\u30f3\u30c8\u306a\u66f8\u304d\u65b9\u304c\u3042\u308b\u306e\u3060\u308d\u3046\u304b\uff1f\n\n## \u66f8\u3044\u305fJUnit\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n\u2191\u306e\u30b3\u30fc\u30c9\u306f\u30aa\u30fc\u30eb\u30b0\u30ea\u30fc\u30f3\u306b\u306a\u308b\u306e\u3060\u3051\u3069\u3001\u308f\u3056\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u3048\u3066\u5931\u6557\u3055\u305b\u3066\u307f\u305f\u5834\u5408\u3001\n\u3053\u3093\u306a\u51fa\u529b\u306b\u306a\u308b\u3002\n\n```\norg.junit.experimental.theories.internal.ParameterizedAssertionError: testIsAdult(fixtures[4])\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.reportParameterizedError(Theories.java:192)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:146)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithCompleteAssignment(Theories.java:127)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:111)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithIncompleteAssignment(Theories.java:120)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.runWithAssignment(Theories.java:109)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor.evaluate(Theories.java:96)\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\nCaused by: java.lang.AssertionError: \nExpected: is <true>\n     but: was <false>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.junit.Assert.assertThat(Assert.java:865)\n\tat org.junit.Assert.assertThat(Assert.java:832)\n\tat spockexample.PersonCheckerTest$isAdultTest.testIsAdult(PersonCheckerTest.java:59)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$2.evaluate(Theories.java:175)\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n\tat org.junit.experimental.theories.Theories$TheoryAnchor$1$1.evaluate(Theories.java:141)\n\t... 31 more\n```\n\n\u671f\u5f85\u3055\u308c\u305f\u7d50\u679c\u3068\u3001\u5b9f\u969b\u306e\u5024\u306e\u6bd4\u8f03\u306e\u307f\u304c\n\n```\nExpected: is <true>\n     but: was <false>\n```\n\n\u3068\u51fa\u529b\u3055\u308c\u308b\u3060\u3051\u3067\u3001\u5b9f\u969b\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3055\u308c\u305f\u3069\u306e\u30c7\u30fc\u30bf\u3067\u5931\u6557\u3057\u305f\u306e\u304b\u3092\u77e5\u308b\u306b\u306f\u3001\n\n```\ntestIsAdult(fixtures[4])\n```\n\n\u3092\u624b\u304c\u304b\u308a\u306b\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304b\u3089\u8a72\u5f53\u30c7\u30fc\u30bf\u3092\u63a2\u3059\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\n## Spock\u3067\u66f8\u3044\u3066\u307f\u308b\n\u540c\u3058\u76ee\u7684\u306e\u30c6\u30b9\u30c8\u3092Spock\u3067\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```groovy:PersonCheckerSpec.groovy\npackage spockexample\n\nimport spock.lang.Specification\nimport spock.lang.Unroll;\n\nclass PersonCheckerSpec extends Specification {\n\n\t@Unroll\n    def \"#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u5927\u4eba\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b\"() {\n        setup:\n        def sut = new PersonChecker()\n\n        expect:\n        sut.isAdult(new Person(sex, age)) == result\n\n        where:\n        age | sex || result\n        0   | \"m\" || false\n        19  | \"m\" || false\n        20  | \"m\" || true\n        0   | \"f\" || false\n        19  | \"f\" || false\n        20  | \"f\" || true\n    }\n\n    @Unroll\n    def \"#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u3001\u7537\u6027\u5316\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b()\"() {\n        setup:\n        def sut = new PersonChecker()\n\n        expect:\n        sut.isMale(new Person(sex, age)) == result\n\n        where:\n        age | sex || result\n        19  | \"m\" || true\n        20  | \"m\" || true\n        19  | \"f\" || false\n        20  | \"f\" || false\n    }\n}\n```\n\n\u3082\u306f\u3084\u8aac\u660e\u4e0d\u8981\u306a\u307b\u3069\u76ee\u7684\u306b\u5bfe\u3057\u3066\u660e\u5feb\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u304a\u5206\u304b\u308a\u3044\u305f\u3060\u3051\u308b\u3060\u308d\u3046\u3002\n\n## \u66f8\u3044\u305fSpock\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n\u3053\u3061\u3089\u3082\u308f\u3056\u3068\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5909\u66f4\u3057\u3066\u5931\u6557\u3055\u305b\u305f\u7d50\u679c\u3092\u51fa\u529b\u3057\u3066\u307f\u308b\u3002\n\n```text:\u5b9f\u884c\u7d50\u679c\nCondition not satisfied:\n\nsut.isAdult(new Person(sex, age)) == result\n|   |       |          |    |     |  |\n|   false   |          f    19    |  true\n|           |                     false\n|           spockexample.Person@58c9fe14\nspockexample.PersonChecker@6633e42f\n <Click to see difference>\n\n\tat spockexample.PersonCheckerSpec.#age\u6b73\u3067\u6027\u5225\u304c#sex\u306e\u5834\u5408\u306b\u5927\u4eba\u304b\u3069\u3046\u304b\u306e\u5224\u5b9a\u3067#result\u304c\u8fd4\u308b(PersonCheckerSpec.groovy:14)\n```\n\nSpock\u306ePowerAssert\u6a5f\u80fd\u3067\u3001\u3069\u306e\u5909\u6570\u3001\u3069\u306e\u5f0f\u306b\u3069\u3093\u306a\u5024\u304c\u5165\u3063\u3066\u3044\u308b\u304b\u3001\n\u306a\u305c\u30c6\u30b9\u30c8\u306b\u5931\u6557\u3057\u3066\u3057\u307e\u3063\u305f\u304b\u304c\u4e00\u76ee\u77ad\u7136\u3002\u7d20\u6575\u3002\n\n\n\u6587\u5b57\u5217\u540c\u58eb\u306e\u6bd4\u8f03\u3060\u3068\u3001\u4e00\u81f4\u7387\u306a\u3093\u304b\u3082\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\n\n```groovy:\ndef test() {\n    setup:\n    def strA = \"Hello Spock!\"\n    def strB = \"Hello Java!\"\n\n    expect:\n    strA == strB\n}\n```\n\n```text:\u5b9f\u884c\u7d50\u679c\nCondition not satisfied:\n\nstrA == strB\n|    |  |\n|    |  Hello Java!\n|    false\n|    5 differences (58% similarity)\n|    Hello (Spock)!\n|    Hello (Java-)!\nHello Spock!\n```\n\n\n## \u5b9f\u884c\u6642\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u52d5\u7684\u306b\u308f\u304b\u308a\u3084\u3059\u304f\n\n\u4e0a\u306e\u4f8b\u3067\u30e1\u30bd\u30c3\u30c9\u540d\u306e\u3068\u3053\u308d\u306b\u6587\u5b57\u5217\u3092\u66f8\u3044\u3066\u3044\u308b\u304c\u3001\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u306b\u3057\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u57cb\u3081\u8fbc\u3080\u3053\u3068\u3067\u3001\u5b9f\u884c\u6642\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u304c\u52d5\u7684\u306b\u8a55\u4fa1\u3055\u308c\u3001\u7d50\u679c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u8868\u793a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u4f8b\u3048\u3070\u3001Eclipse\u3067\u3053\u306e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u4e0b\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\u3002\n\n![spockresult.png](https://qiita-image-store.s3.amazonaws.com/0/6891/6e539007-8be8-b677-70b1-643ca5a1ea1c.png)\n\n\u305f\u3060\u3057\u3001\u30e1\u30bd\u30c3\u30c9\u306b@Unroll\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u6642\u306b\u306e\u307f\u6709\u52b9\u3002\n\n## \u5931\u6557\u6642\u306e\u6319\u52d5\n\n\u306a\u304a\u3001\u30b5\u30f3\u30d7\u30eb\u3068\u3057\u3066\u306f\u8f09\u305b\u3066\u3044\u306a\u3044\u304c\u3001JUnit\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u30c6\u30b9\u30c8\u306f\u3001\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u5834\u5408\u306b\n\u5f8c\u7d9a\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306f\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u306a\u3044\u3002\n\nSpock\u306f\u9014\u4e2d\u3067\u5931\u6557\u3057\u305f\u3082\u306e\u304c\u3042\u308d\u3046\u304c\u306a\u304b\u308d\u3046\u304c\u3001\u5b9a\u7fa9\u3055\u308c\u305f\u3059\u3079\u3066\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u8907\u6570\u306e\u5931\u6557\u304c\u3042\u3063\u305f\u5834\u5408\u306f\u3001\u4e0a\u8a18\u306e\u30ec\u30dd\u30fc\u30c8\u304c\u305d\u306e\u305d\u308c\u305e\u308c\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\n\n# \u4f8b\u5916\u306e\u30c6\u30b9\u30c8\n\n\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306e\u30c6\u30b9\u30c8\u3082Spock\u306a\u3089\u7c21\u6f54\u306b\u8a18\u8ff0\u304c\u53ef\u80fd\n\u203b\u4ee5\u964d\u30e1\u30bd\u30c3\u30c9\u90e8\u5206\u306e\u307f\u8a18\u8f09\n\n```groovy\n    def \"\u4f8b\u5916\u306e\u30c6\u30b9\u30c8\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n\n        when:\n        sut.add(null)\n\n        then:\n        // IllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\u306f\u305a\n        def ex = thrown(IllegalArgumentException)\n        // Exception\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u300cnull is not acceptable.\u300d\u306e\u306f\u305a\n        ex.getMessage() == \"null is not acceptable.\"\n    }\n```\n\n\u5358\u306b\u30b9\u30ed\u30fc\u3055\u308c\u308b\u4f8b\u5916\u306e\u30af\u30e9\u30b9\u304c\u5224\u5b9a\u51fa\u6765\u308c\u3070\u3088\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u3042\u308c\u3070\u3001thrown(\u4f8b\u5916\u30af\u30e9\u30b9)\u3060\u3051\u3067\u3088\u3044\u3002\n\u305d\u308c\u4ee5\u4e0a\u306e\u30c1\u30a7\u30c3\u30af\u3092\u3059\u308b\u306a\u3089\u3001thrown\u30e1\u30bd\u30c3\u30c9\u304c\u767a\u751f\u3057\u305fThrowable\u3092\u8fd4\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308c\u3070\u3088\u3044\u3002\n\n\n# \u30e2\u30c3\u30af\u5316\u306b\u3088\u308b\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u30c6\u30b9\u30c8\n\n## \u547c\u3073\u51fa\u3057\u56de\u6570\u30c1\u30a7\u30c3\u30af\u306b\u3088\u308b\u30c6\u30b9\u30c8\n\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u305f\u3053\u3068\u306b\u3088\u308a\u3001\u5185\u90e8\u3067\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f55\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u4f55\u56de\u547c\u3073\u51fa\u3055\u308c\u305f\u304b\u3092\n\u30c6\u30b9\u30c8\u3059\u308b\u6642\u306e\u66f8\u304d\u65b9\u3002\n\n```groovy\n    def \"\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u6b63\u3057\u304f\u547c\u3070\u308c\u3066\u3044\u308b\u304b\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30e2\u30c3\u30af\u5316\n        CapacityCounter capacityCounter = Mock()\n        // \u3053\u3063\u3061\u306e\u66f8\u304d\u65b9\u3067\u3082\u53ef\n        //def capacityCounter = Mock(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        // 20\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person1 = new Person(\"f\", 20)\n        sut.add(person1)\n        then:\n        // 2\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(2)\n\n        when:\n        // 19\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person2 = new Person(\"f\", 19)\n        sut.add(person2)\n        then:\n        // 1\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(1)\n\n        when:\n        // 20\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person3 = new Person(\"m\", 20)\n        sut.add(person3)\n        then:\n        // 3\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(3)\n\n        when:\n        // 19\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person4 = new Person(\"m\", 19)\n        sut.add(person4)\n        then:\n        // 1\u30dd\u30a4\u30f3\u30c8\u52a0\u7b97\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u304c1\u5ea6\u547c\u3070\u308c\u305f\u306f\u305a\n        1 * capacityCounter.addCount(1)\n    }\n```\n\n### \u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\n\u5f53\u7136\u306a\u304c\u3089\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u5316\u3057\u3066\u3001\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u306b\u3082\u3067\u304d\u308b\n\n```groovy\n    @Unroll\n    def \"\u30e2\u30c3\u30af\u3068\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u306e\u7d44\u307f\u5408\u308f\u305b\"() {\n        setup:\n        // \u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u521d\u671f\u5316\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30e2\u30c3\u30af\u5316\n        CapacityCounter capacityCounter = Mock()\n        // \u3053\u3063\u3061\u306e\u66f8\u304d\u65b9\u3067\u3082\u53ef\n        //def capacityCounter = Mock(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        def person = new Person(sex, age)\n        sut.add(person)\n        then:\n        // add\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3059\u308baddCount\u304ccalled\u56de\u547c\u3070\u308c\u305f\u306f\u305a\n        called * capacityCounter.addCount(add)\n\n        where:\n        age | sex || add | called\n        20  | \"m\" || 3   | 1\n        20  | \"f\" || 2   | 1\n        19  | \"m\" || 1   | 1\n        19  | \"f\" || 1   | 1\n    }\n```\n\n## \u30b9\u30bf\u30d6\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4f9d\u5b58\u3059\u308b\u5225\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u547c\u3073\u51fa\u3057\u306b\u5bfe\u3057\u3001\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u4e8b\u524d\u306b\u5ba3\u8a00\u3059\u308b\u3002\n\n```groovy\n    def \"\u30b9\u30bf\u30d6\u306b\u3088\u3063\u3066\u30e2\u30c3\u30af\u5316\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u632f\u308b\u821e\u3044\u3092\u5b9a\u7fa9\u3059\u308b\"() {\n        setup:\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n\n        // capacityCounter \u3092\u30e2\u30c3\u30af\u5316\n        def capacityCounter = Mock(CapacityCounter)\n        // getCount()\u304c\u5e38\u306b19\u3092\u8fd4\u3059\u3088\u3046\u30b9\u30bf\u30d6\u3092\u5ba3\u8a00\u3059\u308b\n        // 19\u3092\u8fd4\u3059\u5834\u5408\u3001\u5b50\u3069\u3082\u306a\u3089\u8ffd\u52a0\u3067\u304d\u308b\u304c\u3001\u5927\u4eba\u306f\u8ffd\u52a0\u3067\u304d\u306a\u3044\n        capacityCounter.getCount() >> 19\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        def person1 = new Person(\"m\", 19)\n        sut.add(person1)\n\n        then:\n        1 * capacityCounter.addCount(1)\n\n        when:\n        def person2 = new Person(\"f\", 20)\n        sut.add(person2)\n\n        then:\n        thrown(IllegalArgumentException)\n    }\n```\n\n## \u30b9\u30d1\u30a4\n\n\u30b9\u30d1\u30a4\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u5b9f\u969b\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u632f\u308b\u821e\u3044\u3092\u6b8b\u3057\u305f\u307e\u307e\u3001\u547c\u3073\u51fa\u3057\u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```groovy\n    def \"\u5b9f\u969b\u306e\u51e6\u7406\u3092\u884c\u3044\u3064\u3064\u30b9\u30d1\u30a4\u3067\u591a\u91cd\u5316\u30c6\u30b9\u30c8\"() {\n        setup:\n        def sut = new AttractionRoom()\n        def ageChecker = new PersonChecker()\n        // \u30ab\u30a6\u30f3\u30bf\u30fc\u3092\u30b9\u30d1\u30a4\u3068\u3057\u3066\u4f5c\u6210\n        CapacityCounter capacityCounter = Spy(CapacityCounter)\n\n        // Groovy\u3067\u306f\u30d7\u30ed\u30d1\u30c6\u30a3\u30a2\u30af\u30bb\u30b9\u306e\u7c21\u7565\u8a18\u6cd5\u3067setter\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\n        sut.personChecker = ageChecker\n        sut.capacityCounter = capacityCounter\n\n        when:\n        // 20\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person1 = new Person(\"f\", 20)\n        // 19\u6b73\u5973\u6027\u306e\u5834\u5408\n        def person2 = new Person(\"f\", 19)\n        // 20\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person3 = new Person(\"m\", 20)\n        // 19\u6b73\u7537\u6027\u306e\u5834\u5408\n        def person4 = new Person(\"m\", 19)\n\n        sut.add(person1)\n        sut.add(person2)\n        sut.add(person3)\n        sut.add(person4)\n\n        then:\n        // \u30b9\u30d1\u30a4\u306b\u3088\u308a\u3001\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u304c\u76e3\u8996\u3067\u304d\u308b\n        1 * capacityCounter.addCount(3)\n        1 * capacityCounter.addCount(2)\n        2 * capacityCounter.addCount(1)\n        // 0 * \u306fthen:\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5f8c\u306b\u66f8\u304f\u3053\u3068\n        0 * capacityCounter.reduceCount(_)\n\n        expect:\n        // \u30e2\u30c3\u30af\u3067\u306f\u306a\u304f\u30b9\u30d1\u30a4\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u672c\u7269\u306e\u632f\u308b\u821e\u3044\u3082\u78ba\u8a8d\u3067\u304d\u308b\n        capacityCounter.getCount() == 7\n    }\n```\n\n\n# \u3082\u3046\u5c11\u3057\u8a73\u3057\u304f\n\nSpock\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u306f\u3001spock.lang.Specification\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u4f5c\u6210\u3059\u308b\u3002\n\n\u5b9f\u969b\u7684\u306a\u30c6\u30b9\u30c8\u306e\u4e2d\u8eab\u3092\u5b9a\u7fa9\u3057\u305f\u30e1\u30bd\u30c3\u30c9\u3092feature\u30e1\u30bd\u30c3\u30c9\u3068\u547c\u3076\u3002\n\u3064\u307e\u308a\u4e0a\u8a18\u306e\u4f8b\u306f\u3059\u3079\u3066feature\u30e1\u30bd\u30c3\u30c9\u3002\n\n\u305d\u306e\u4ed6\u306b\u3001\u5404feature\u30e1\u30bd\u30c3\u30c9\u306b\u5171\u901a\u306e\u524d\u5f8c\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\n\n|\u30e1\u30bd\u30c3\u30c9|\u5185\u5bb9|JUnit\u3067\u8a00\u3046\u3068|\n|:--|:--|:--|\n|def setup()|\u5404feature\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b\u5b9f\u884c\u3055\u308c\u308b|@Before\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3|\n|def cleanup()|\u5404feature\u30e1\u30bd\u30c3\u30c9\u306e\u5f8c\u306b\u5b9f\u884c\u3055\u308c\u308b|@After\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3|\n|def setupSpec()|\u6700\u521d\u306efeature\u30e1\u30bd\u30c3\u30c9\u306e\u524d\u306b1\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b|@BeforeClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3|\n|def cleanupSpec()|\u6700\u5f8c\u306efeature\u30e1\u30bd\u30c3\u30c9\u306e\u5f8c\u306b1\u5ea6\u3060\u3051\u5b9f\u884c\u3055\u308c\u308b|@AfterClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3|\n\n## \u30d6\u30ed\u30c3\u30af\n\nfeature\u30e1\u30bd\u30c3\u30c9\u5185\u306e\u30d6\u30ed\u30c3\u30af(setup:\u3068\u304bwhere:\u3068\u304b)\u306f\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7a2e\u985e\u304c\u3042\u308b\u3002\n\n|\u30d6\u30ed\u30c3\u30af|\u610f\u5473|\n|:--|:--|\n|setup: or given:|\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u751f\u6210\u3001\u30c7\u30fc\u30bf\u306e\u521d\u671f\u5316\u306a\u3069\u306e\u6e96\u5099\u3002(given\u306fsetup\u306e\u30a8\u30a4\u30ea\u30a2\u30b9)|\n|when:|\u30c6\u30b9\u30c8\u5bfe\u8c61\u3092\u5b9f\u884c|\n|then:|when\u5b9f\u884c\u5f8c\u306e\u7d50\u679c\u306e\u691c\u8a3c|\n|expect:|\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u5b9f\u884c\u3068\u7d50\u679c\u306e\u691c\u8a3c\u3092\u540c\u6642\u306b|\n|cleanup:|\u30c6\u30b9\u30c8\u3067\u4f5c\u6210\u3055\u308c\u305f\u30c7\u30fc\u30bf\u306e\u524a\u9664\u306a\u3069\u306e\u5f8c\u59cb\u672b\u51e6\u7406|\n|where:|\u30c7\u30fc\u30bf\u99c6\u52d5\u30c6\u30b9\u30c8\u3092\u66f8\u304f\u3068\u304d\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u5b9a\u7fa9|\n\nwhen\u3068then\u306f\u30bb\u30c3\u30c8\u3067\u4f7f\u3046\u3002\nwhen -> then -> when -> then ...\u3068\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306fOK\u3002\nwhen\u3068then\u306e\u9593\u306bexpect\u3092\u7f6e\u304f\u3053\u3068\u3082\u3067\u304d\u306a\u3044\u3002(\u610f\u5473\u5206\u304b\u3093\u306a\u3044\u3057\u306d)\n\n\n\n\n# \u4ed8\u9332\uff1a\u30c6\u30b9\u30c8\u5bfe\u8c61\u306eJava\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\n```java:Person.java\npackage spockexample;\n\n/**\n * \u4eba\u3092\u8868\u3059\u30af\u30e9\u30b9\u3002\n * \u5e74\u9f62\u3068\u6027\u5225\u3092\u5c5e\u6027\u3068\u3057\u3066\u6301\u3064\u3002\n */\npublic class Person {\n    /** \u6027\u5225(\"m\" or \"f\") */\n    private String sex;\n    /** \u5e74\u9f62 */\n    private int age;\n\n    public Person(String sex, int age) {\n        this.sex = sex;\n        this.age = age;\n    }\n\n    public String getSex() {\n        return sex;\n    }\n\n    public void setSex(String sex) {\n        this.sex = sex;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n```\n\n```java:PersonChecker.java\npackage spockexample;\n\npublic class PersonChecker {\n    /**\n     * Person\u304c\u5927\u4eba(20\u6b73\u4ee5\u4e0a)\u304b\u3069\u3046\u304b\u3092\u8fd4\u3059\n     * @param person \u5224\u5b9a\u3059\u308b\u4eba\n     * @return \u5927\u4eba\u3067\u3042\u308c\u3070true\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070false\n     */\n    public boolean isAdult(Person person) {\n        return person.getAge() >= 20;\n    }\n\n    /**\n     * \u7537\u6027\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\n     * @param person \u5224\u5b9a\u3059\u308b\u4eba\n     * @return \u7537\u6027\u3067\u3042\u308c\u3070true\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070false\n     */\n    public boolean isMale(Person person) {\n        return \"m\".equals(person.getSex());\n    }\n}\n```\n\n```java:CapacityCounter.java\npackage spockexample;\n\n/**\n * \u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u6570\u5024\u3067\u7ba1\u7406\u3059\u308b\u30af\u30e9\u30b9\u3002\n */\npublic class CapacityCounter {\n    private int count = 0;\n\n    public CapacityCounter() {\n    }\n\n    /**\n     * \u6307\u5b9a\u3055\u308c\u305f\u6570\u3060\u3051\u30ab\u30a6\u30f3\u30c8\u3092\u52a0\u7b97\u3059\u308b\n     * @param count \u52a0\u7b97\u3059\u308b\u30ab\u30a6\u30f3\u30c8\n     */\n    public void addCount(int count) {\n        this.count += count;\n    }\n\n    /**\n     * \u6307\u5b9a\u3055\u308c\u305f\u6570\u3060\u3051\u30ab\u30a6\u30f3\u30c8\u3092\u6e1b\u7b97\u3059\u308b\n     * @param count \u6e1b\u7b97\u3059\u308b\u30ab\u30a6\u30f3\u30c8\n     */\n    public void reduceCount(int count) {\n        this.count -= count;\n    }\n\n    /**\n     * \u73fe\u5728\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u53d6\u5f97\u3059\u308b\n     * @return \u73fe\u5728\u306e\u30ab\u30a6\u30f3\u30c8\n     */\n    public int getCount() {\n        return this.count;\n    }\n}\n```\n\n```java:AttractionRoom.java\npackage spockexample;\n\n/**\n * \u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306b\u4eba\u3092\u8f09\u305b\u305f\u308a\u964d\u308d\u3057\u305f\u308a\u3059\u308b\u30af\u30e9\u30b9\u3002\n * \u8f09\u305b\u308b\u4eba\u306e\u5e74\u9f62\u3084\u6027\u5225\u306b\u3088\u3063\u3066\u3001\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u3092\u8a08\u7b97\u3057\u3066\u3044\u304f\n */\npublic class AttractionRoom {\n\tprivate PersonChecker personChecker;\n\tpublic void setPersonChecker(PersonChecker personChecker) {\n\t\tthis.personChecker = personChecker;\n\t}\n\n    private CapacityCounter capacityCounter;\n    public void setCapacityCounter(CapacityCounter capacityCounter) {\n        this.capacityCounter = capacityCounter;\n    }\n\n    private int capacityLimit = 20;\n    public void setCapacityLimit(int capacityLimit) {\n        this.capacityLimit = capacityLimit;\n    }\n\n    /**\n\t * \u6307\u5b9a\u3055\u308c\u305f\u4eba\u3092\u30a2\u30c8\u30e9\u30af\u30b7\u30e7\u30f3\u306b\u8ffd\u52a0\u3059\u308b\u3002\n     * \u3082\u3057\u8ffd\u52a0\u3057\u305f\u3089\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\u306f\u3001\n     * IllegalArgumentException\u304c\u30b9\u30ed\u30fc\u3055\u308c\u308b\n\t * @param person \u8ffd\u52a0\u3059\u308b\u4eba\n     * @throws java.lang.IllegalArgumentException \u8ffd\u52a0\u3057\u305f\u3089\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u5834\u5408\n\t */\n\tpublic void add(Person person) throws IllegalArgumentException {\n        if (person == null) {\n            throw new IllegalArgumentException(\"null\u306f\u8a31\u53ef\u3055\u308c\u3066\u3044\u307e\u305b\u3093\");\n        }\n\n        int add = 0;\n        if (!personChecker.isAdult(person)) {\n            // \u5b50\u3069\u3082\u306f\u7537\u5973\u3068\u30821\n            add = 1;\n        } else if (personChecker.isMale(person)) {\n            // \u5927\u4eba\u3067\u7537\u6027\u306e\u5834\u5408\u306f3\n            add = 3;\n\t\t} else {\n            // \u5927\u4eba\u3067\u5973\u6027\u306e\u5834\u5408\u306f2\n            add = 2;\n        }\n\n        // \u3053\u306e\u4eba\u3092\u4e57\u305b\u308b\u3068\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30aa\u30fc\u30d0\u30fc\u306b\u306a\u308b\u5834\u5408\u306f\u4f8b\u5916\u3092\u30b9\u30ed\u30fc\n        if (capacityCounter.getCount() > (capacityLimit - add)) {\n            throw new IllegalArgumentException(\"limit over\");\n        }\n\n\t\tcapacityCounter.addCount(add);\n\t}\n\n    /**\n     * \u73fe\u5728\u307e\u3067\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u8fd4\u3057\u307e\u3059\u3002\n     * @return \u73fe\u5728\u307e\u3067\u306e\u30ad\u30e3\u30d1\u30b7\u30c6\u30a3\u30ab\u30a6\u30f3\u30c8\n     */\n\tpublic int getCount() {\n\t\treturn this.capacityCounter.getCount();\n    }\n}\n```\n", "tags": ["Java", "Groovy", "spock"]}