{"tags": ["JRuby", "redstorm", "storm", "Ruby"], "context": " More than 1 year has passed since last update.jruby\u3067\u306e\u5b9f\u88c5\u3068ack\u306e\u6319\u52d5\u3092\u30c6\u30b9\u30c8\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ rvm install jruby\n$ rvm use jruby\n$ bundle install --binstubs --path vendor/bundle\n\u3000\n$ ./bin/redstorm install\n$ ./bin/redstorm bundle\n\n\nGemfile\nsource 'https://rubygems.org'\ngem 'redstorm'\n\n\n\u30b5\u30f3\u30d7\u30eb\n\ntest.rb\nrequire 'red_storm'\n\nclass TestSpout < RedStorm::DSL::Spout\n\n  on_init do \n    @count = 0\n  end\n\n  on_send :emit => false, :reliable => false do \n    @count += 1\n    num = @count\n    reliable_emit(@count, num, (num % 10)) \n    sleep 1\n  end\n\n  on_ack do |msg_id|\n    log.info(\"success: #{msg_id}\")\n  end\n\n  on_fail do |msg_id|\n    log.info(\"failed: #{msg_id}\")\n  end\nend\n\nclass TestBolt1 < RedStorm::DSL::Bolt\n  on_receive :anchor => false, :emit => false do |tuple|\n    p tuple\n    log.info(tuple[0])\n    if(tuple[1] != 1)\n      anchored_emit(tuple, tuple['num'], tuple['hashkey'])\n      ack(tuple)\n    else\n      fail(tuple)\n    end\n  end\nend\n\nclass TestBolt2 < RedStorm::DSL::Bolt\n  on_receive :emit => false do |tuple|\n    p tuple\n    log.info(tuple[0])\n    if(tuple[1] != 2)\n      ack(tuple)\n    else\n      fail(tuple)\n    end\n  end\nend\n\nclass TestTopology < RedStorm::DSL::Topology\n  spout TestSpout do\n    output_fields :num, :hashkey\n  end\n\n  bolt TestBolt1 do\n    source TestSpout, :global\n    output_fields :num, :hashkey\n  end\n\n  bolt TestBolt2, :parallelism => 2 do\n    source TestBolt1, :fields => [ :hashkey ]\n  end\n\n  configure do |env|\n    debug false\n    max_task_parallelism 4\n    num_workers 4\n    max_spout_pending 1000\n  end\nend\n\n\n\u5b9f\u884c\n$ ./bin/redstorm local test.rb \n\njruby\u3067\u306e\u5b9f\u88c5\u3068ack\u306e\u6319\u52d5\u3092\u30c6\u30b9\u30c8\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n```$ rvm install jruby\n$ rvm use jruby\n$ bundle install --binstubs --path vendor/bundle\n\u3000\n$ ./bin/redstorm install\n$ ./bin/redstorm bundle\n```\n\n```ruby:Gemfile\nsource 'https://rubygems.org'\ngem 'redstorm'\n```\n\n\u30b5\u30f3\u30d7\u30eb\n\n```ruby:test.rb\nrequire 'red_storm'\n  \nclass TestSpout < RedStorm::DSL::Spout\n  \n  on_init do \n    @count = 0\n  end\n \n  on_send :emit => false, :reliable => false do \n    @count += 1\n    num = @count\n    reliable_emit(@count, num, (num % 10)) \n    sleep 1\n  end\n   \n  on_ack do |msg_id|\n    log.info(\"success: #{msg_id}\")\n  end\n\n  on_fail do |msg_id|\n    log.info(\"failed: #{msg_id}\")\n  end\nend\n \nclass TestBolt1 < RedStorm::DSL::Bolt\n  on_receive :anchor => false, :emit => false do |tuple|\n    p tuple\n    log.info(tuple[0])\n    if(tuple[1] != 1)\n      anchored_emit(tuple, tuple['num'], tuple['hashkey'])\n      ack(tuple)\n    else\n      fail(tuple)\n    end\n  end\nend\n \nclass TestBolt2 < RedStorm::DSL::Bolt\n  on_receive :emit => false do |tuple|\n    p tuple\n    log.info(tuple[0])\n    if(tuple[1] != 2)\n      ack(tuple)\n    else\n      fail(tuple)\n    end\n  end\nend\n \nclass TestTopology < RedStorm::DSL::Topology\n  spout TestSpout do\n    output_fields :num, :hashkey\n  end\n \n  bolt TestBolt1 do\n    source TestSpout, :global\n    output_fields :num, :hashkey\n  end\n\n  bolt TestBolt2, :parallelism => 2 do\n    source TestBolt1, :fields => [ :hashkey ]\n  end\n\n  configure do |env|\n    debug false\n    max_task_parallelism 4\n    num_workers 4\n    max_spout_pending 1000\n  end\nend\n```\n\n\u5b9f\u884c\n```$ ./bin/redstorm local test.rb \n```\n"}