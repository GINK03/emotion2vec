{"tags": ["Go", "golang", "cli"], "context": " More than 1 year has passed since last update.Go Advent Calendar 2015 \u305d\u306e3 14\u65e5\u76ee\u3067\u3059\u3002\n\nGo Advent Calendar 2015 \u305d\u306e1\nGo Advent Calendar 2015 \u305d\u306e2\n\n\n\u306f\u3058\u3081\u306b\ngolang \u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u969b\u3001\u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3048\u3070\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u53d7\u3051\u53d6\u308b\u5f15\u6570\u306b\u610f\u5473\u4ed8\u3051\u3092\u3057\u3066\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nflag\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\npackage main\n\nimport (\n    \"flag\"\n    \"fmt\"\n)\n\nvar (\n    verbose = flag.Bool(\"verbose\", false, \"Set verbose mode\")\n    count   = flag.Int(\"count\", 0, \"counter\")\n)\n\nfunc main() {\n    flag.Parse()\n\n    args := flag.Args()\n    if len(args) < 1 {\n        fmt.Println(\"Error: args <name> is required.\")\n        return\n    }\n\n    name := &args[0]\n\n    fmt.Printf(\"verbose mode: %v, count: %d, name: %s\\n\", *verbose, *count, *name)\n}\n\n\n$ go run ex_flag.go --count 10 --verbose hoge\nverbose mode: true\ncount: 10\nargs: [hoge]\n\n\n$ go run ex_flag.go --help\nUsage of /var/folders/g4/84fwc06x607dq3t5p_zvxxbw0000gn/T/go-build135375912/command-line-arguments/_obj/exe/ex_flag:\n  -count int\n        counter\n  -verbose\n        Set verbose mode\nexit status 2\n\n\n$ go run ex_flag.go --count string hoge\ninvalid value \"string\" for flag -count: strconv.ParseInt: parsing \"string\": invalid syntax\nUsage of /var/folders/g4/84fwc06x607dq3t5p_zvxxbw0000gn/T/go-build185516462/command-line-arguments/_obj/exe/ex_flag:\n  -count int\n        counter\n  -verbose\n        Set verbose mode\nexit status 2\n\n\n$ go run ex_flag.go\nError: args <name> is required.\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u6271\u308f\u308c\u308b\u30d5\u30e9\u30b0\u306e\u7c21\u6613\u7684\u306a\u30d8\u30eb\u30d7\u51fa\u529b\u3001\u305d\u3057\u3066\u30d5\u30e9\u30b0\u306e\u5024\u306b\u5bfe\u3059\u308b\u578b\u30c1\u30a7\u30c3\u30af (\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u30013\u3064\u3081\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b Int \u5ba3\u8a00\u3092\u3057\u3066\u3044\u308b count \u30d5\u30e9\u30b0\u306b\u6587\u5b57\u5217\u3092\u4e0e\u3048\u3066\u3044\u308b\u306e\u3067 invalid value \u3068\u8a00\u308f\u308c\u3066\u3044\u308b) \u307e\u3067\u304c\u5927\u5909\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u3068\u306f\u3044\u3046\u3082\u306e\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u3066\u3044\u308b\u30dd\u30a4\u30f3\u30c8\u306f\u30d5\u30e9\u30b0\u5024\u3067\u3042\u3063\u3066\u3001\u901a\u5e38\u306e\u5f15\u6570\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u305f\u3060\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\u578b\u3084\u540d\u4ed8\u3051\u306a\u3069\u5f15\u6570\u306b\u3082\u610f\u5473\u3065\u3051\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u5225\u9014\u81ea\u5206\u3067\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nkingpin\nhttps://github.com/alecthomas/kingpin\nkingpin \u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30d5\u30e9\u30b0\u304a\u3088\u3073\u5f15\u6570\u306e\u4e21\u65b9\u306b\u610f\u5473\u4ed8\u3051\u3092\u884c\u3044\u3001\u305d\u306e\u5024\u3092\u5b89\u5168\u306b\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u5148\u307b\u3069\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30b3\u30fc\u30c9\u4f8b\u3068\u540c\u3058\u3088\u3046\u306a\u5024\u3092\u53d7\u3051\u53d6\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092 kingpin \u3092\u4f7f\u3063\u3066\u66f8\u3044\u305f\u3082\u306e\u3067\u3059\u3002flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u9055\u3044\u30d5\u30e9\u30b0\u3068\u5f15\u6570\u306e\u533a\u5225\u304c\u4ed8\u3044\u3066\u3044\u308b\u305f\u3081\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u306f\u4f3c\u3066\u3044\u307e\u3059\u3002\n\nkingpin\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u4f8b\npackage main\n\nimport (\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n    verbose = kingpin.Flag(\"verbose\", \"Set verbose mode\").Bool()\n    count   = kingpin.Flag(\"count\", \"counter\").Int()\n    name    = kingpin.Arg(\"name\", \"Input name\").Required().String()\n)\n\nfunc main() {\n    kingpin.Parse()\n    fmt.Printf(\"verbose mode: %v, count: %d, name: %s\\n\", *verbose, *count, *name)\n}\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u5148\u307b\u3069\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f8b\u3068\u6bd4\u3079\u3066\u30d8\u30eb\u30d7\u306e\u51fa\u529b\u5185\u5bb9\u304c\u30ea\u30c3\u30c1\u306b\u306a\u3063\u305f\u3053\u3068\u3001\u305d\u3057\u3066\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b name \u8981\u7d20\u304c\u5fc5\u9808\u3067\u3042\u308b\u3053\u3068\u3092\u30a8\u30e9\u30fc\u3068\u3057\u3066\u793a\u3059\u632f\u308b\u821e\u3044\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n$ go run main.go --count 10 --verbose hoge\nverbose mode: true, count: 10, name: hoge\n\n\n$ go run main.go --help\nusage: main [<flags>] <name>\n\nFlags:\n  --help         Show context-sensitive help (also try --help-long and --help-man).\n  --verbose      Set verbose mode\n  --count=COUNT  counter\n\nArgs:\n  <name>  Input name\n\nexit status 1\n\n\n$ go run main.go --count string hoge\nmain: error: strconv.ParseFloat: parsing \"string\": invalid syntax, try --help\nexit status 1\n\n\n$ go run main.go\nmain: error: required argument 'name' not provided, try --help\nexit status 1\n\n\nShort, Long \u30d5\u30e9\u30b0\nflag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u540c\u4e00\u8a2d\u5b9a\u5024\u306b\u76f8\u5f53\u3059\u308b Short, Long \u30d5\u30e9\u30b0\u3092\u8a2d\u3051\u305f\u3044\u5834\u5408\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u76f4\u63a5\u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\nflag\u306b\u3088\u308bshort,long\npackage main\n\nimport (\n    \"flag\"\n    \"fmt\"\n)\n\nvar (\n    dryRun = flag.Bool(\"dry-run\", false, \"Dry run\")\n)\n\nfunc init() {\n    flag.BoolVar(dryRun, \"n\", false, \"Dry run\")\n}\n\nfunc main() {\n    flag.Parse()\n    fmt.Println(*dryRun)\n}\n\n\nkingpin \u3067\u306f\u5b9a\u7fa9\u3059\u308b\u30d5\u30e9\u30b0\u5024\u306b Short, Long \u305d\u308c\u305e\u308c\u306e\u540d\u79f0\u3092\u8a2d\u5b9a\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u969b\u306e\u610f\u56f3\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002\n\nkingpin\u306b\u3088\u308bshort,long\npackage main\n\nimport (\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n    dryRun = kingpin.Flag(\"dry-run\", \"Dry run\").Short('n').Bool()\n)\n\nfunc main() {\n    kingpin.Parse()\n    fmt.Println(*dryRun)\n}\n\n\n\n\n\u3044\u308d\u3093\u306a\u578b\u3001\u30ea\u30b9\u30c8\nkingpin \u306f\u3001flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u5229\u7528\u53ef\u80fd\u306a\u578b\u4ee5\u4e0a\u306b\u69d8\u3005\u306a\u578b\u3092\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306b\u5ba3\u8a00\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u4f8b\u3067\u306f\u3001\u5f15\u6570\u304c Unsigned 8-bit integer (uint8) \u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5f15\u6570\u306buint8\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\npackage main\n\nimport (\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n    numbers = kingpin.Arg(\"numbers\", \"some numbers\").Uint8List()\n)\n\nfunc main() {\n    kingpin.Parse()\n    fmt.Printf(\"numbers: %v\", *numbers)\n}\n\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u4efb\u610f\u6570\u306e\u6570\u5024\u304c []uint8 numbers \u306b\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\u578b\u306b\u4e00\u81f4\u3057\u306a\u3044\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u6271\u3044\u306b\u306a\u308a\u51e6\u7406\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\n$ go run main.go 27 42 133\nnumbers: [27 42 133]\n\n$ go run main.go 010 0xff\nnumbers: [8 255]\n\n$ go run main.go 42 256\nmain: error: strconv.ParseUint: parsing \"256\": value out of range, try --help\nexit status 1\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3068\u3057\u3066\u300c\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3064\u3044\u3066\u51e6\u7406\u3059\u308b\u300d\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001kingpin \u3067\u306f\u30d1\u30fc\u30b9\u3059\u308b\u30bf\u30a4\u30d7\u306e\uff11\u3064\u306b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3068\u3057\u3066\u6271\u3046\u3068\u5171\u306b\u305d\u306e\u307e\u307e\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u5f15\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4e0e\u3048\u308b\u3068\u305d\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u5fc5\u9808\u9805\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u3001\u305d\u3057\u3066\u30d1\u30fc\u30b9\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f Open() \u3059\u308b\u3053\u3068\u306a\u304f\u305d\u306e\u307e\u307e\u8aad\u307f\u8fbc\u307f\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u51fa\u529b\npackage main\n\nimport (\n    \"bufio\"\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n    file = kingpin.Arg(\"file\", \"Input filename\").Required().File()\n)\n\nfunc main() {\n    kingpin.Parse()\n\n    defer func() {\n        (*file).Close()\n    }()\n\n    scanner := bufio.NewScanner(*file)\n    for scanner.Scan() {\n        fmt.Println(scanner.Text())\n    }\n}\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u5b9f\u5728\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u5185\u5bb9\u3092\u51fa\u529b\u3057\u3001\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u5f15\u6570\u8aad\u307f\u8fbc\u307f\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u51e6\u7406\u304c\u7d42\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\n$ cat ./1.txt\nGo, GO !\n\n$ go run main.go ./1.txt\nGo, GO !\n\n$ go run main.go ./not_exists.txt\nmain: error: open ./not_exists.txt: no such file or directory, try --help\nexit status 1\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u81ea\u5206\u3067\u6c7a\u3081\u305f\u3044\u3001\u3042\u308b\u3044\u306f\u30aa\u30fc\u30d7\u30f3\u306e\u5fc5\u8981\u304c\u306a\u3044\u30b1\u30fc\u30b9\u5411\u3051\u306b\u3001\u5225\u9014 ExistingFile() \u3068\u3044\u3046\u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u3061\u3089\u306f\u30d1\u30fc\u30b9\u5f8c\u306e\u5909\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\u30ea\u30b9\u30c8\u3067\u6271\u3046 ExistingFiles() \u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308f\u305b\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u5728\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u51fa\u529b\npackage main\n\nimport (\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n    files = kingpin.Arg(\"name\", \"Input name\").Required().ExistingFiles()\n)\n\nfunc main() {\n    kingpin.Parse()\n\n    for _, file := range *files {\n        fmt.Printf(\"Exists file: %s\\n\", file)\n    }\n}\n\n\n$ ls\n./  ../  1.txt  2.txt  main.go\n\n$ go run main.go 1.txt 2.txt\nExists file: 1.txt\nExists file: 2.txt\n\n$ go run main.go 1.txt 3.txt\nmain: error: path '3.txt' does not exist, try --help\nexit status 1\n\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\nkingpin \u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u81ea\u5206\u3067\uff11\u304b\u3089\u5b9f\u88c5\u3059\u308b\u306e\u306a\u3089\u3070\u3001\u53d7\u3051\u53d6\u3063\u305f\u5f15\u6570\u306e\u3046\u3061\u306e\u3042\u308b\u9806\u756a\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u540d\u306b\u30de\u30c3\u30c1\u3057\u305f\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306a\u5206\u5c90\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001kingpin \u306a\u3089\u3070 \u5148\u307b\u3069\u307e\u3067\u306e\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306e\u5b9a\u7fa9\u3068\u540c\u3058\u3088\u3046\u306b\u3001Command() \u95a2\u6570\u3067\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u5b9a\u7fa9\u3057\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306b\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306e\u5185\u5bb9\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3057\u3001\u5b9a\u7fa9\u3057\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u3055\u3089\u306b\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u67d4\u8edf\u3067\u30ea\u30c3\u30c1\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u308c\u305d\u3046\u3067\u3059\u3002\n\n\u3044\u304f\u3064\u304b\u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308bCLI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\npackage main\n\nimport (\n    \"fmt\"\n    \"gopkg.in/alecthomas/kingpin.v2\"\n    \"os\"\n)\n\nvar (\n    app = kingpin.New(\"manager\", \"Management command\")\n\n    itemCommand = app.Command(\"item\", \"Item management\")\n    // item add\n    itemAdd     = itemCommand.Command(\"add\", \"Add item\")\n    itemAddName = itemAdd.Flag(\"name\", \"item name\").Required().String()\n    // item del\n    itemDel      = itemCommand.Command(\"del\", \"Delete item\")\n    itemDelName  = itemDel.Flag(\"name\", \"item name\").Required().String()\n    itemDelForce = itemDel.Flag(\"force\", \"force delete\").Short('f').Bool()\n\n    personCommand = app.Command(\"person\", \"Person management\")\n    // person add\n    personAdd     = personCommand.Command(\"add\", \"Add person\")\n    personAddName = personAdd.Flag(\"name\", \"person name\").Required().String()\n)\n\nfunc main() {\n    switch kingpin.MustParse(app.Parse(os.Args[1:])) {\n    case itemAdd.FullCommand():\n        fmt.Printf(\"[Add item] name: %s\\n\", *itemAddName)\n    case itemDel.FullCommand():\n        forceDelete := \"\"\n        if *itemDelForce {\n            forceDelete = \" (force)\"\n        }\n\n        fmt.Printf(\"[Delete item%s] name: %s\\n\", forceDelete, *itemDelName)\n    case personAdd.FullCommand():\n        fmt.Printf(\"[Add person] name: %s\\n\", *personAddName)\n    }\n}\n\n\n$ go run main.go item add --name gopher\n[Add item] name: gopher\n\n$ go run main.go person add --name kumatch\n[Add person] name: kumatch\n\n$ go run main.go item del --name dman -f\n[Delete item (force)] name: dman\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30d8\u30eb\u30d7\u3082\u3001\u5927\u5909\u5145\u5b9f\u3057\u305f\u5185\u5bb9\u3092\u751f\u6210\u3001\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u30d8\u30eb\u30d7\u3092\u898b\u308b\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u968e\u5c64\u3054\u3068\u306b\u9069\u5207\u306a\u5185\u5bb9\u304c\u63b2\u8f09\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n$ go run main.go help\nusage: manager [<flags>] <command> [<args> ...]\n\nManagement command\n\nFlags:\n  --help  Show context-sensitive help (also try --help-long and --help-man).\n\nCommands:\n  help [<command>...]\n    Show help.\n\n  item add --name=NAME\n    Add item\n\n  item del --name=NAME [<flags>]\n    Delete item\n\n  person add --name=NAME\n    Add person\n\n\n$ go run main.go help item\nusage: manager item <command> [<args> ...]\n\nItem management\n\nFlags:\n  --help  Show context-sensitive help (also try --help-long and --help-man).\n\nSubcommands:\n  item add --name=NAME\n    Add item\n\n  item del --name=NAME [<flags>]\n    Delete item\n\n\n\n$ go run main.go help item del\nusage: manager item del --name=NAME [<flags>]\n\nDelete item\n\nFlags:\n      --help       Show context-sensitive help (also try --help-long and --help-man).\n      --name=NAME  item name\n  -f, --force      force delete\n\n\n\n\u307e\u3068\u3081\ngolang \u3067\u5b9f\u88c5\u3059\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306e\u5024\u3092\u30b7\u30f3\u30d7\u30eb\u306a\u304c\u3089\u3082\u5f37\u529b\u3067\u5b89\u5168\u306b\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b kingpin \u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\ngolang \u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u306e flag \u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304c\u53d7\u3051\u53d6\u308b\u30d5\u30e9\u30b0\u5024\u306e\u578b\u5b9a\u7fa9\u306e\u307f\u306b\u306a\u308a\u307e\u3059\u304c\u3001kingpin \u306a\u3089\u3070\u5f15\u6570\u3082\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u5b9a\u7fa9\u53ef\u80fd\u306a\u578b\u304c\u3088\u308a\u591a\u304f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3082\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306b\u53d7\u3051\u53d6\u308b\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306e\u6570\u3084\u610f\u5473\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3069\u67d4\u8edf\u306a\u4ed5\u7d44\u307f\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n[Go Advent Calendar 2015 \u305d\u306e3](http://qiita.com/advent-calendar/2015/go3) 14\u65e5\u76ee\u3067\u3059\u3002\n\n* [Go Advent Calendar 2015 \u305d\u306e1](http://qiita.com/advent-calendar/2015/go)\n* [Go Advent Calendar 2015 \u305d\u306e2](http://qiita.com/advent-calendar/2015/go2)\n\n\n\n## \u306f\u3058\u3081\u306b\n\ngolang \u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u88c5\u3059\u308b\u969b\u3001\u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3048\u3070\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u53d7\u3051\u53d6\u308b\u5f15\u6570\u306b\u610f\u5473\u4ed8\u3051\u3092\u3057\u3066\u5024\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```go:flag\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n)\n\nvar (\n\tverbose = flag.Bool(\"verbose\", false, \"Set verbose mode\")\n\tcount   = flag.Int(\"count\", 0, \"counter\")\n)\n\nfunc main() {\n\tflag.Parse()\n\n\targs := flag.Args()\n\tif len(args) < 1 {\n\t\tfmt.Println(\"Error: args <name> is required.\")\n\t\treturn\n\t}\n\n\tname := &args[0]\n\n\tfmt.Printf(\"verbose mode: %v, count: %d, name: %s\\n\", *verbose, *count, *name)\n}\n```\n\n```flag\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\u4f8b\n$ go run ex_flag.go --count 10 --verbose hoge\nverbose mode: true\ncount: 10\nargs: [hoge]\n\n\n$ go run ex_flag.go --help\nUsage of /var/folders/g4/84fwc06x607dq3t5p_zvxxbw0000gn/T/go-build135375912/command-line-arguments/_obj/exe/ex_flag:\n  -count int\n        counter\n  -verbose\n        Set verbose mode\nexit status 2\n\n\n$ go run ex_flag.go --count string hoge\ninvalid value \"string\" for flag -count: strconv.ParseInt: parsing \"string\": invalid syntax\nUsage of /var/folders/g4/84fwc06x607dq3t5p_zvxxbw0000gn/T/go-build185516462/command-line-arguments/_obj/exe/ex_flag:\n  -count int\n        counter\n  -verbose\n        Set verbose mode\nexit status 2\n\n\n$ go run ex_flag.go\nError: args <name> is required.\n```\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u6271\u308f\u308c\u308b\u30d5\u30e9\u30b0\u306e\u7c21\u6613\u7684\u306a\u30d8\u30eb\u30d7\u51fa\u529b\u3001\u305d\u3057\u3066\u30d5\u30e9\u30b0\u306e\u5024\u306b\u5bfe\u3059\u308b\u578b\u30c1\u30a7\u30c3\u30af (\u4e0a\u8a18\u306e\u4f8b\u3060\u3068\u30013\u3064\u3081\u306e\u30b3\u30de\u30f3\u30c9\u5b9f\u884c\u6642\u306b Int \u5ba3\u8a00\u3092\u3057\u3066\u3044\u308b count \u30d5\u30e9\u30b0\u306b\u6587\u5b57\u5217\u3092\u4e0e\u3048\u3066\u3044\u308b\u306e\u3067 invalid value \u3068\u8a00\u308f\u308c\u3066\u3044\u308b) \u307e\u3067\u304c\u5927\u5909\u30b7\u30f3\u30d7\u30eb\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3067\u5229\u7528\u53ef\u80fd\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3068\u306f\u3044\u3046\u3082\u306e\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30d5\u30a9\u30fc\u30ab\u30b9\u3057\u3066\u3044\u308b\u30dd\u30a4\u30f3\u30c8\u306f\u30d5\u30e9\u30b0\u5024\u3067\u3042\u3063\u3066\u3001\u901a\u5e38\u306e\u5f15\u6570\u90e8\u5206\u306b\u3064\u3044\u3066\u306f\u305f\u3060\u306e\u30ea\u30b9\u30c8\u3067\u3059\u3002\u578b\u3084\u540d\u4ed8\u3051\u306a\u3069\u5f15\u6570\u306b\u3082\u610f\u5473\u3065\u3051\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u5225\u9014\u81ea\u5206\u3067\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\n## kingpin\n\nhttps://github.com/alecthomas/kingpin\n\nkingpin \u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30d5\u30e9\u30b0\u304a\u3088\u3073\u5f15\u6570\u306e\u4e21\u65b9\u306b\u610f\u5473\u4ed8\u3051\u3092\u884c\u3044\u3001\u305d\u306e\u5024\u3092\u5b89\u5168\u306b\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u3001\u5148\u307b\u3069\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30b3\u30fc\u30c9\u4f8b\u3068\u540c\u3058\u3088\u3046\u306a\u5024\u3092\u53d7\u3051\u53d6\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092 kingpin \u3092\u4f7f\u3063\u3066\u66f8\u3044\u305f\u3082\u306e\u3067\u3059\u3002flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3068\u9055\u3044\u30d5\u30e9\u30b0\u3068\u5f15\u6570\u306e\u533a\u5225\u304c\u4ed8\u3044\u3066\u3044\u308b\u305f\u3081\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306f\u7570\u306a\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u30b9\u30bf\u30a4\u30eb\u306f\u4f3c\u3066\u3044\u307e\u3059\u3002\n\n```go:kingpin\u3092\u4f7f\u3063\u305f\u30b3\u30fc\u30c9\u4f8b\npackage main\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n\tverbose = kingpin.Flag(\"verbose\", \"Set verbose mode\").Bool()\n\tcount   = kingpin.Flag(\"count\", \"counter\").Int()\n\tname    = kingpin.Arg(\"name\", \"Input name\").Required().String()\n)\n\nfunc main() {\n\tkingpin.Parse()\n\tfmt.Printf(\"verbose mode: %v, count: %d, name: %s\\n\", *verbose, *count, *name)\n}\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u5148\u307b\u3069\u306e flag \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4f8b\u3068\u6bd4\u3079\u3066\u30d8\u30eb\u30d7\u306e\u51fa\u529b\u5185\u5bb9\u304c\u30ea\u30c3\u30c1\u306b\u306a\u3063\u305f\u3053\u3068\u3001\u305d\u3057\u3066\u5f15\u6570\u3067\u6307\u5b9a\u3059\u308b name \u8981\u7d20\u304c\u5fc5\u9808\u3067\u3042\u308b\u3053\u3068\u3092\u30a8\u30e9\u30fc\u3068\u3057\u3066\u793a\u3059\u632f\u308b\u821e\u3044\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n\n```\n$ go run main.go --count 10 --verbose hoge\nverbose mode: true, count: 10, name: hoge\n\n\n$ go run main.go --help\nusage: main [<flags>] <name>\n\nFlags:\n  --help         Show context-sensitive help (also try --help-long and --help-man).\n  --verbose      Set verbose mode\n  --count=COUNT  counter\n\nArgs:\n  <name>  Input name\n\nexit status 1\n\n\n$ go run main.go --count string hoge\nmain: error: strconv.ParseFloat: parsing \"string\": invalid syntax, try --help\nexit status 1\n\n\n$ go run main.go\nmain: error: required argument 'name' not provided, try --help\nexit status 1\n```\n\n\n## Short, Long \u30d5\u30e9\u30b0\n\nflag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f7f\u3063\u3066\u540c\u4e00\u8a2d\u5b9a\u5024\u306b\u76f8\u5f53\u3059\u308b Short, Long \u30d5\u30e9\u30b0\u3092\u8a2d\u3051\u305f\u3044\u5834\u5408\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u76f4\u63a5\u7684\u306a\u6a5f\u80fd\u304c\u306a\u3044\u305f\u3081\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u3067\u3057\u305f\u3002\n\n```go:flag\u306b\u3088\u308bshort,long\npackage main\n\nimport (\n\t\"flag\"\n\t\"fmt\"\n)\n\nvar (\n\tdryRun = flag.Bool(\"dry-run\", false, \"Dry run\")\n)\n\nfunc init() {\n\tflag.BoolVar(dryRun, \"n\", false, \"Dry run\")\n}\n\nfunc main() {\n\tflag.Parse()\n\tfmt.Println(*dryRun)\n}\n```\n\nkingpin \u3067\u306f\u5b9a\u7fa9\u3059\u308b\u30d5\u30e9\u30b0\u5024\u306b Short, Long \u305d\u308c\u305e\u308c\u306e\u540d\u79f0\u3092\u8a2d\u5b9a\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u30b3\u30fc\u30c9\u3092\u898b\u305f\u969b\u306e\u610f\u56f3\u304c\u660e\u78ba\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n```go:kingpin\u306b\u3088\u308bshort,long\npackage main\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n\tdryRun = kingpin.Flag(\"dry-run\", \"Dry run\").Short('n').Bool()\n)\n\nfunc main() {\n\tkingpin.Parse()\n\tfmt.Println(*dryRun)\n}\n\n```\n\n\n## \u3044\u308d\u3093\u306a\u578b\u3001\u30ea\u30b9\u30c8\n\nkingpin \u306f\u3001flag \u30d1\u30c3\u30b1\u30fc\u30b8\u3067\u5229\u7528\u53ef\u80fd\u306a\u578b\u4ee5\u4e0a\u306b\u69d8\u3005\u306a\u578b\u3092\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306b\u5ba3\u8a00\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306e\u4f8b\u3067\u306f\u3001\u5f15\u6570\u304c Unsigned 8-bit integer (uint8) \u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u6271\u3063\u3066\u3044\u307e\u3059\u3002\n\n```go:\u5f15\u6570\u306buint8\u306e\u30ea\u30b9\u30c8\u3092\u53d7\u3051\u53d6\u308b\npackage main\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n\tnumbers = kingpin.Arg(\"numbers\", \"some numbers\").Uint8List()\n)\n\nfunc main() {\n\tkingpin.Parse()\n\tfmt.Printf(\"numbers: %v\", *numbers)\n}\n```\n\n\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\u5f15\u6570\u3068\u3057\u3066\u6307\u5b9a\u3057\u305f\u4efb\u610f\u6570\u306e\u6570\u5024\u304c []uint8 numbers \u306b\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\u578b\u306b\u4e00\u81f4\u3057\u306a\u3044\u5f15\u6570\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u306f\u30a8\u30e9\u30fc\u6271\u3044\u306b\u306a\u308a\u51e6\u7406\u306f\u884c\u308f\u308c\u307e\u305b\u3093\u3002\n\n```\n$ go run main.go 27 42 133\nnumbers: [27 42 133]\n\n$ go run main.go 010 0xff\nnumbers: [8 255]\n\n$ go run main.go 42 256\nmain: error: strconv.ParseUint: parsing \"256\": value out of range, try --help\nexit status 1\n```\n\n\n## \u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u3088\u304f\u3042\u308b\u30b1\u30fc\u30b9\u3068\u3057\u3066\u300c\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u3084\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3064\u3044\u3066\u51e6\u7406\u3059\u308b\u300d\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u304c\u3001kingpin \u3067\u306f\u30d1\u30fc\u30b9\u3059\u308b\u30bf\u30a4\u30d7\u306e\uff11\u3064\u306b\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u5024\u3092\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3068\u3057\u3066\u6271\u3046\u3068\u5171\u306b\u305d\u306e\u307e\u307e\u30d5\u30a1\u30a4\u30eb\u51e6\u7406\u3092\u958b\u59cb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u5f15\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u4e0e\u3048\u308b\u3068\u305d\u306e\u5185\u5bb9\u3092\u51fa\u529b\u3059\u308b\u3068\u3044\u3046\u3082\u306e\u3067\u3059\u3002\n\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u306f\u5fc5\u9808\u9805\u76ee\u306e\u5f15\u6570\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u3053\u3068\u3001\u305d\u3057\u3066\u30d1\u30fc\u30b9\u306b\u6210\u529f\u3057\u305f\u5834\u5408\u306f Open() \u3059\u308b\u3053\u3068\u306a\u304f\u305d\u306e\u307e\u307e\u8aad\u307f\u8fbc\u307f\u51e6\u7406\u3092\u958b\u59cb\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u3067\u3059\u3002\n\n```go:\u5f15\u6570\u306b\u4e0e\u3048\u3089\u308c\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u51fa\u529b\npackage main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n\tfile = kingpin.Arg(\"file\", \"Input filename\").Required().File()\n)\n\nfunc main() {\n\tkingpin.Parse()\n\n\tdefer func() {\n\t\t(*file).Close()\n\t}()\n\n\tscanner := bufio.NewScanner(*file)\n\tfor scanner.Scan() {\n\t\tfmt.Println(scanner.Text())\n\t}\n}\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u308b\u3068\u3001\u5b9f\u5728\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\u306f\u5185\u5bb9\u3092\u51fa\u529b\u3057\u3001\u5b58\u5728\u3057\u306a\u3044\u30d5\u30a1\u30a4\u30eb\u306f\u5f15\u6570\u8aad\u307f\u8fbc\u307f\u6642\u306b\u30a8\u30e9\u30fc\u3068\u306a\u3063\u3066\u51e6\u7406\u304c\u7d42\u4e86\u3057\u3066\u3044\u307e\u3059\u3002\n\n```\n$ cat ./1.txt\nGo, GO !\n\n$ go run main.go ./1.txt\nGo, GO !\n\n$ go run main.go ./not_exists.txt\nmain: error: open ./not_exists.txt: no such file or directory, try --help\nexit status 1\n```\n\n\n\n\u30d5\u30a1\u30a4\u30eb\u3092\u30aa\u30fc\u30d7\u30f3\u3059\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u81ea\u5206\u3067\u6c7a\u3081\u305f\u3044\u3001\u3042\u308b\u3044\u306f\u30aa\u30fc\u30d7\u30f3\u306e\u5fc5\u8981\u304c\u306a\u3044\u30b1\u30fc\u30b9\u5411\u3051\u306b\u3001\u5225\u9014 ExistingFile() \u3068\u3044\u3046\u95a2\u6570\u3082\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u3053\u3061\u3089\u306f\u30d1\u30fc\u30b9\u5f8c\u306e\u5909\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u304c\u6587\u5b57\u5217\u3068\u3057\u3066\u30bb\u30c3\u30c8\u3055\u308c\u307e\u3059\u3002\u30ea\u30b9\u30c8\u3067\u6271\u3046 ExistingFiles() \u3068\u3044\u3046\u95a2\u6570\u3082\u3042\u308f\u305b\u3066\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\n```go:\u5b9f\u5728\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u30d1\u30b9\u3092\u51fa\u529b\npackage main\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n)\n\nvar (\n\tfiles = kingpin.Arg(\"name\", \"Input name\").Required().ExistingFiles()\n)\n\nfunc main() {\n\tkingpin.Parse()\n\n\tfor _, file := range *files {\n\t\tfmt.Printf(\"Exists file: %s\\n\", file)\n\t}\n}\n```\n\n```\n$ ls\n./  ../  1.txt  2.txt  main.go\n\n$ go run main.go 1.txt 2.txt\nExists file: 1.txt\nExists file: 2.txt\n\n$ go run main.go 1.txt 3.txt\nmain: error: path '3.txt' does not exist, try --help\nexit status 1\n```\n\n\n## \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\n\nkingpin \u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u81ea\u5206\u3067\uff11\u304b\u3089\u5b9f\u88c5\u3059\u308b\u306e\u306a\u3089\u3070\u3001\u53d7\u3051\u53d6\u3063\u305f\u5f15\u6570\u306e\u3046\u3061\u306e\u3042\u308b\u9806\u756a\u306b\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u30b3\u30de\u30f3\u30c9\u540d\u306b\u30de\u30c3\u30c1\u3057\u305f\u51e6\u7406\u3092\u884c\u3046\u3088\u3046\u306a\u5206\u5c90\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u304c\u3001kingpin \u306a\u3089\u3070 \u5148\u307b\u3069\u307e\u3067\u306e\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306e\u5b9a\u7fa9\u3068\u540c\u3058\u3088\u3046\u306b\u3001Command() \u95a2\u6570\u3067\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u5b9a\u7fa9\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u5b9a\u7fa9\u3057\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306b\u30d5\u30e9\u30b0\u3084\u5f15\u6570\u306e\u5185\u5bb9\u3092\u5909\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3057\u3001\u5b9a\u7fa9\u3057\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306b\u3055\u3089\u306b\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u308b\u305f\u3081\u3001\u975e\u5e38\u306b\u67d4\u8edf\u3067\u30ea\u30c3\u30c1\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u4f5c\u308c\u305d\u3046\u3067\u3059\u3002\n\n```go:\u3044\u304f\u3064\u304b\u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u3066\u5b9f\u884c\u3059\u308bCLI\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\npackage main\n\nimport (\n\t\"fmt\"\n\t\"gopkg.in/alecthomas/kingpin.v2\"\n\t\"os\"\n)\n\nvar (\n\tapp = kingpin.New(\"manager\", \"Management command\")\n\n\titemCommand = app.Command(\"item\", \"Item management\")\n\t// item add\n\titemAdd     = itemCommand.Command(\"add\", \"Add item\")\n\titemAddName = itemAdd.Flag(\"name\", \"item name\").Required().String()\n\t// item del\n\titemDel      = itemCommand.Command(\"del\", \"Delete item\")\n\titemDelName  = itemDel.Flag(\"name\", \"item name\").Required().String()\n\titemDelForce = itemDel.Flag(\"force\", \"force delete\").Short('f').Bool()\n\n\tpersonCommand = app.Command(\"person\", \"Person management\")\n\t// person add\n\tpersonAdd     = personCommand.Command(\"add\", \"Add person\")\n\tpersonAddName = personAdd.Flag(\"name\", \"person name\").Required().String()\n)\n\nfunc main() {\n\tswitch kingpin.MustParse(app.Parse(os.Args[1:])) {\n\tcase itemAdd.FullCommand():\n\t\tfmt.Printf(\"[Add item] name: %s\\n\", *itemAddName)\n\tcase itemDel.FullCommand():\n\t\tforceDelete := \"\"\n\t\tif *itemDelForce {\n\t\t\tforceDelete = \" (force)\"\n\t\t}\n\n\t\tfmt.Printf(\"[Delete item%s] name: %s\\n\", forceDelete, *itemDelName)\n\tcase personAdd.FullCommand():\n\t\tfmt.Printf(\"[Add person] name: %s\\n\", *personAddName)\n\t}\n}\n```\n\n```\n$ go run main.go item add --name gopher\n[Add item] name: gopher\n\n$ go run main.go person add --name kumatch\n[Add person] name: kumatch\n\n$ go run main.go item del --name dman -f\n[Delete item (force)] name: dman\n```\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u88c5\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306e\u30d8\u30eb\u30d7\u3082\u3001\u5927\u5909\u5145\u5b9f\u3057\u305f\u5185\u5bb9\u3092\u751f\u6210\u3001\u51fa\u529b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001\u30d8\u30eb\u30d7\u3092\u898b\u308b\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u306e\u968e\u5c64\u3054\u3068\u306b\u9069\u5207\u306a\u5185\u5bb9\u304c\u63b2\u8f09\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```\n$ go run main.go help\nusage: manager [<flags>] <command> [<args> ...]\n\nManagement command\n\nFlags:\n  --help  Show context-sensitive help (also try --help-long and --help-man).\n\nCommands:\n  help [<command>...]\n    Show help.\n\n  item add --name=NAME\n    Add item\n\n  item del --name=NAME [<flags>]\n    Delete item\n\n  person add --name=NAME\n    Add person\n\n\n$ go run main.go help item\nusage: manager item <command> [<args> ...]\n\nItem management\n\nFlags:\n  --help  Show context-sensitive help (also try --help-long and --help-man).\n\nSubcommands:\n  item add --name=NAME\n    Add item\n\n  item del --name=NAME [<flags>]\n    Delete item\n\n\n\n$ go run main.go help item del\nusage: manager item del --name=NAME [<flags>]\n\nDelete item\n\nFlags:\n      --help       Show context-sensitive help (also try --help-long and --help-man).\n      --name=NAME  item name\n  -f, --force      force delete\n\n```\n\n\n## \u307e\u3068\u3081\n\ngolang \u3067\u5b9f\u88c5\u3059\u308b\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306e\u5024\u3092\u30b7\u30f3\u30d7\u30eb\u306a\u304c\u3089\u3082\u5f37\u529b\u3067\u5b89\u5168\u306b\u53d6\u308a\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b kingpin \u3092\u7d39\u4ecb\u3057\u307e\u3057\u305f\u3002\n\ngolang \u6a19\u6e96\u30d1\u30c3\u30b1\u30fc\u30b8\u306e flag \u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304c\u53d7\u3051\u53d6\u308b\u30d5\u30e9\u30b0\u5024\u306e\u578b\u5b9a\u7fa9\u306e\u307f\u306b\u306a\u308a\u307e\u3059\u304c\u3001kingpin \u306a\u3089\u3070\u5f15\u6570\u3082\u540c\u3058\u3088\u3046\u306b\u6271\u3048\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u5b9a\u7fa9\u53ef\u80fd\u306a\u578b\u304c\u3088\u308a\u591a\u304f\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u6301\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3082\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3054\u3068\u306b\u53d7\u3051\u53d6\u308b\u30d5\u30e9\u30b0\u3001\u5f15\u6570\u306e\u6570\u3084\u610f\u5473\u3092\u5909\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306a\u3069\u67d4\u8edf\u306a\u4ed5\u7d44\u307f\u3092\u6301\u3063\u3066\u3044\u307e\u3059\u3002\n"}