{"context": "\u4ee5\u524d\u307e\u3067\u306f clang_complete \u3092\u4f7f\u3063\u3066\u3044\u305f\u3051\u3069\u3001vim\u3092python2.7\u5bfe\u5fdc\u3067\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u308f\u308a\u3068\u9762\u5012\u3060\u3063\u305f\u308a\u3057\u3066\u3044\u305f\u3002\u305d\u3053\u3067\u524d\u3005\u304b\u3089\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u305f\u5f8c\u767a\u306e vim-clang \u306b\u4e57\u308a\u63db\u3048\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\u3042\u3068\u306f\u6c5f\u6dfb\u3055\u3093\u3082\u4e57\u308a\u63db\u3048\u305f\u3068\u3044\u3046\u8a18\u4e8b\u3092\u898b\u305f\u306e\u3082\u3042\u308b\u3002\n\u672c\u306e\u866b: vim-clang: clang\u3092\u4f7f\u3063\u305fC++\u306e\u9759\u7684\u88dc\u5b8cVim\u30d7\u30e9\u30b0\u30a4\u30f3\n\n\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\n\nclang_complete\n\nlibclang\u3092\u4f7f\u7528\u3059\u308b\nlibclang\u3068\u306e\u9023\u643a\u306bpython\u3092\u4f7f\u7528\u3002vim\u304cpython2.7\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b(python3\u4f7f\u3044\u305f\u3044\u6642\u306b\u4e0d\u4fbf)\n\u4e00\u6642\u671f\u958b\u767a\u304c\u6b62\u307e\u3063\u3066\u3044\u305f\u304c\u6700\u8fd1\u306f\u6709\u5fd7\u306e\u4eba\u304c\u5f15\u304d\u7d99\u3044\u3067\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\nneocomplete\u3068\u5171\u5b58\u53ef\u80fd\n\n\nvim-clang\n\npython\u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\nclang\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\nlibclang\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044(\u3067\u3082\u305d\u3053\u307e\u3067\u9045\u3044\u611f\u3058\u3067\u306f\u306a\u3044)\nclang-format\u306e\u5b9f\u884c\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\nneocomplete\u3068\u5171\u5b58\u53ef\u80fd\n\n\n\u305d\u306e\u4ed6\n\u4ed6\u306b\u3082\u6709\u540d\u3069\u3053\u308d\u3068\u3057\u3066\u306fYouCompleteMe\u306a\u3069\u304c\u3042\u308b\u304c\u3001neocomplete\u3068\u5171\u5b58\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b(\u672a\u691c\u8a3c)\u3002\n\n\u8a2d\u5b9a\u4f8b(Linux\u5411\u3051)\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb(NeoBundle\u3092\u4f7f\u7528\u3001\u8a73\u7d30\u306f\u7701\u7565)\n\nneobundle.toml\n# complete\n[[plugins]]\nrepository = 'Shougo/neocomplete.vim'\ndepends    = ['Shougo/neoinclude.vim', 'Shougo/context_filetype.vim']\ninsert     = 1\n\n# C/C++\n[[plugins]]\nrepository = 'justmao945/vim-clang'\nfiletypes  =  ['c', 'cpp']\n\n\n\nneocomplete\u3068vim-clang\u306e\u8a2d\u5b9a\u4f8b\n\" 'Shougo/neocomplete.vim' {{{\nlet g:neocomplete#enable_at_startup = 1\n\nif !exists('g:neocomplete#force_omni_input_patterns')\n  let g:neocomplete#force_omni_input_patterns = {} \nendif\nlet g:neocomplete#force_overwrite_completefunc = 1\nlet g:neocomplete#force_omni_input_patterns.c =\n      \\ '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*'\nlet g:neocomplete#force_omni_input_patterns.cpp =\n      \\ '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*\\|\\h\\w*::\\w*'\n\n\" }}}\n\"\n\" 'justmao945/vim-clang' {{{\n\n\" disable auto completion for vim-clang\nlet g:clang_auto = 0\n\" default 'longest' can not work with neocomplete\nlet g:clang_c_completeopt   = 'menuone'\nlet g:clang_cpp_completeopt = 'menuone'\n\nfunction! s:get_latest_clang(search_path)\n    let l:filelist = split(globpath(a:search_path, 'clang-*'), '\\n')\n    let l:clang_exec_list = []\n    for l:file in l:filelist\n        if l:file =~ '^.*clang-\\d\\.\\d$'\n            call add(l:clang_exec_list, l:file)\n        endif\n    endfor\n    if len(l:clang_exec_list)\n        return reverse(l:clang_exec_list)[0]\n    else\n        return 'clang'\n    endif\nendfunction\n\nfunction! s:get_latest_clang_format(search_path)\n    let l:filelist = split(globpath(a:search_path, 'clang-format-*'), '\\n')\n    let l:clang_exec_list = []\n    for l:file in l:filelist\n        if l:file =~ '^.*clang-format-\\d\\.\\d$'\n            call add(l:clang_exec_list, l:file)\n        endif\n    endfor\n    if len(l:clang_exec_list)\n        return reverse(l:clang_exec_list)[0]\n    else\n        return 'clang-format'\n    endif\nendfunction\n\nlet g:clang_exec = s:get_latest_clang('/usr/bin')\nlet g:clang_format_exec = s:get_latest_clang_format('/usr/bin')\n\nlet g:clang_c_options = '-std=c11'\nlet g:clang_cpp_options = '-std=c++11 -stdlib=libc++'\n\n\n\" }}}\n\n\u305d\u306e\u4ed6\u3001\u8a73\u7d30\u306f vim-clang\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u7b46\u8005\u306evimrc\ndotfiles/vim at master \u00b7 koara-local/dotfiles\n\n\u53c2\u8003\nRip-Rip/clang_complete\njustmao945/vim-clang\nVim \u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210: \u7b2c 3 \u56de \u7d44\u307f\u8fbc\u307f\u30ea\u30b9\u30c8\nVim\u30b9\u30af\u30ea\u30d7\u30c8\u57fa\u790e\u6587\u6cd5\u6700\u901f\u30de\u30b9\u30bf\u30fc - \u6c38\u9060\u306b\u672a\u5b8c\u6210\n\u4ee5\u524d\u307e\u3067\u306f [clang_complete](https://github.com/Rip-Rip/clang_complete) \u3092\u4f7f\u3063\u3066\u3044\u305f\u3051\u3069\u3001vim\u3092python2.7\u5bfe\u5fdc\u3067\u30d3\u30eb\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u308a\u3001\u8a2d\u5b9a\u304c\u308f\u308a\u3068\u9762\u5012\u3060\u3063\u305f\u308a\u3057\u3066\u3044\u305f\u3002\u305d\u3053\u3067\u524d\u3005\u304b\u3089\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u305f\u5f8c\u767a\u306e [vim-clang](https://github.com/justmao945/vim-clang) \u306b\u4e57\u308a\u63db\u3048\u308b\u3053\u3068\u306b\u3057\u305f\u3002\n\n\u3042\u3068\u306f\u6c5f\u6dfb\u3055\u3093\u3082\u4e57\u308a\u63db\u3048\u305f\u3068\u3044\u3046\u8a18\u4e8b\u3092\u898b\u305f\u306e\u3082\u3042\u308b\u3002\n[\u672c\u306e\u866b: vim-clang: clang\u3092\u4f7f\u3063\u305fC++\u306e\u9759\u7684\u88dc\u5b8cVim\u30d7\u30e9\u30b0\u30a4\u30f3](http://cpplover.blogspot.jp/2015/04/vim-clang-clangcvim.html)\n\n# \u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\n## clang_complete\n+ libclang\u3092\u4f7f\u7528\u3059\u308b\n+ libclang\u3068\u306e\u9023\u643a\u306bpython\u3092\u4f7f\u7528\u3002vim\u304cpython2.7\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b(python3\u4f7f\u3044\u305f\u3044\u6642\u306b\u4e0d\u4fbf)\n+ \u4e00\u6642\u671f\u958b\u767a\u304c\u6b62\u307e\u3063\u3066\u3044\u305f\u304c\u6700\u8fd1\u306f\u6709\u5fd7\u306e\u4eba\u304c\u5f15\u304d\u7d99\u3044\u3067\u66f4\u65b0\u3055\u308c\u3066\u3044\u308b\n+ neocomplete\u3068\u5171\u5b58\u53ef\u80fd\n\n## vim-clang\n+ python\u306b\u306f\u4f9d\u5b58\u3057\u3066\u3044\u306a\u3044\n+ clang\u306e\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u7528\u3059\u308b\n+ libclang\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044(\u3067\u3082\u305d\u3053\u307e\u3067\u9045\u3044\u611f\u3058\u3067\u306f\u306a\u3044)\n+ clang-format\u306e\u5b9f\u884c\u306b\u3082\u5bfe\u5fdc\u3057\u3066\u3044\u308b\n+ neocomplete\u3068\u5171\u5b58\u53ef\u80fd\n\n## \u305d\u306e\u4ed6\n\u4ed6\u306b\u3082\u6709\u540d\u3069\u3053\u308d\u3068\u3057\u3066\u306fYouCompleteMe\u306a\u3069\u304c\u3042\u308b\u304c\u3001neocomplete\u3068\u5171\u5b58\u3067\u304d\u306a\u3044\u3088\u3046\u306a\u6c17\u304c\u3059\u308b(\u672a\u691c\u8a3c)\u3002\n\n# \u8a2d\u5b9a\u4f8b(Linux\u5411\u3051)\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb(NeoBundle\u3092\u4f7f\u7528\u3001\u8a73\u7d30\u306f\u7701\u7565)\n```ini:neobundle.toml\n# complete\n[[plugins]]\nrepository = 'Shougo/neocomplete.vim'\ndepends    = ['Shougo/neoinclude.vim', 'Shougo/context_filetype.vim']\ninsert     = 1\n\n# C/C++\n[[plugins]]\nrepository = 'justmao945/vim-clang'\nfiletypes  =  ['c', 'cpp']\n```\n\n## neocomplete\u3068vim-clang\u306e\u8a2d\u5b9a\u4f8b\n\n```vim\n\" 'Shougo/neocomplete.vim' {{{\nlet g:neocomplete#enable_at_startup = 1\n\nif !exists('g:neocomplete#force_omni_input_patterns')\n  let g:neocomplete#force_omni_input_patterns = {} \nendif\nlet g:neocomplete#force_overwrite_completefunc = 1\nlet g:neocomplete#force_omni_input_patterns.c =\n      \\ '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*'\nlet g:neocomplete#force_omni_input_patterns.cpp =\n      \\ '[^.[:digit:] *\\t]\\%(\\.\\|->\\)\\w*\\|\\h\\w*::\\w*'\n\n\" }}}\n\"\n\" 'justmao945/vim-clang' {{{\n\n\" disable auto completion for vim-clang\nlet g:clang_auto = 0\n\" default 'longest' can not work with neocomplete\nlet g:clang_c_completeopt   = 'menuone'\nlet g:clang_cpp_completeopt = 'menuone'\n\nfunction! s:get_latest_clang(search_path)\n    let l:filelist = split(globpath(a:search_path, 'clang-*'), '\\n')\n    let l:clang_exec_list = []\n    for l:file in l:filelist\n        if l:file =~ '^.*clang-\\d\\.\\d$'\n            call add(l:clang_exec_list, l:file)\n        endif\n    endfor\n    if len(l:clang_exec_list)\n        return reverse(l:clang_exec_list)[0]\n    else\n        return 'clang'\n    endif\nendfunction\n\nfunction! s:get_latest_clang_format(search_path)\n    let l:filelist = split(globpath(a:search_path, 'clang-format-*'), '\\n')\n    let l:clang_exec_list = []\n    for l:file in l:filelist\n        if l:file =~ '^.*clang-format-\\d\\.\\d$'\n            call add(l:clang_exec_list, l:file)\n        endif\n    endfor\n    if len(l:clang_exec_list)\n        return reverse(l:clang_exec_list)[0]\n    else\n        return 'clang-format'\n    endif\nendfunction\n\nlet g:clang_exec = s:get_latest_clang('/usr/bin')\nlet g:clang_format_exec = s:get_latest_clang_format('/usr/bin')\n\nlet g:clang_c_options = '-std=c11'\nlet g:clang_cpp_options = '-std=c++11 -stdlib=libc++'\n\n\n\" }}}\n```\n\n\u305d\u306e\u4ed6\u3001\u8a73\u7d30\u306f [vim-clang\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/justmao945/vim-clang/blob/master/doc/clang.txt) \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n# \u7b46\u8005\u306evimrc\n[dotfiles/vim at master \u00b7 koara-local/dotfiles](https://github.com/koara-local/dotfiles/tree/master/vim)\n\n# \u53c2\u8003\n[Rip-Rip/clang_complete](https://github.com/Rip-Rip/clang_complete)\n[justmao945/vim-clang](https://github.com/justmao945/vim-clang)\n\n[Vim \u30a8\u30c7\u30a3\u30bf\u30fc\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u306e\u4f5c\u6210: \u7b2c 3 \u56de \u7d44\u307f\u8fbc\u307f\u30ea\u30b9\u30c8](http://www.ibm.com/developerworks/jp/linux/library/l-vim-script-3/)\n[Vim\u30b9\u30af\u30ea\u30d7\u30c8\u57fa\u790e\u6587\u6cd5\u6700\u901f\u30de\u30b9\u30bf\u30fc - \u6c38\u9060\u306b\u672a\u5b8c\u6210](http://thinca.hatenablog.com/entry/20100201/1265009821)\n", "tags": ["Vim", "vimrc", "C", "C++"]}