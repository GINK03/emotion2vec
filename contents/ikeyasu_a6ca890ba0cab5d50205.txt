{"context": " More than 1 year has passed since last update.\n\nSparkCore \u3068 MEAN\u30b9\u30bf\u30c3\u30af\u3067\u4f5c\u308b\u304a\u3046\u3061\u30cf\u30c3\u30af\uff08Advent calendar\uff09\n\n\u3064\u304f\u308b\u3082\u306e\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306b\u6e29\u5ea6\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nhttp://ouchi-sensor.herokuapp.com/\n\u3053\u308c\u306f\u3001Spark Core \u3068\u3044\u3046 Arduino \u4e92\u63db\u306e\u30cf\u30fc\u30c9\u3067\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u3067\u3059\u3002\u3053\u306e\u30cf\u30fc\u30c9\u304c\u3001\u76f4\u63a5 WiFi \u306b\u7e4b\u304c\u308a\u3001\u30af\u30e9\u30a6\u30c9\u306b\u60c5\u5831\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u7de8\n\nSparkCore \u3068\u306f\nhttp://spark.io \u3067\u767a\u58f2\u3055\u308c\u308b\u3001Arduino + WiFi \u304c\u30ef\u30f3\u30bb\u30c3\u30c8\u306b\u306a\u3063\u305f\u30c7\u30d0\u30a4\u30b9\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4f7f\u308f\u308c\u3066\u3044\u308b\u30c1\u30c3\u30d7\u304cCC3000\u306a\u306e\u3067\u3001TELEC\uff08\u6280\u9069\uff09\u3092\u901a\u904e\u3057\u3066\u3044\u307e\u3059\u3002=>\u53c2\u8003\n\n\nSparkCore\u7528\u306eBaaS\u306e\u30af\u30e9\u30a6\u30c9\u304c\u3042\u308a\u3001\u7c21\u5358\u306b\u30c7\u30fc\u30bf\u306e\u3084\u308a\u53d6\u308a\u304c\u53ef\u80fd\u3067\u3059\n\n\n\u5fc5\u8981\u306a\u30e2\u30ce\u30fb\u8cb7\u3044\u65b9\nSparkCore\u306f\u3001\u4ee5\u4e0b\u304b\u3089\u8cb7\u3048\u307e\u3059\u3002\nhttps://store.spark.io/\n\u6ce8\u610f\u70b9\u306f\n\n\u5b89\u3044 Photon \u3068\u3044\u3046\u306e\u306f2015\u5e742\u6708\u767a\u58f2\u4e88\u5b9a\u3067\u3001\u3055\u3089\u306bTELEC\u306f\u307e\u3060\u901a\u3063\u3066\u3044\u307e\u305b\u3093\u3002SparkCore\u3092\u8cfc\u5165\u3057\u307e\u3057\u3087\u3046\nUS\u304b\u3089\u306a\u306e\u3067\u3001\u5c4a\u304f\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\n\n\u56fd\u5185\u304b\u3089\u3060\u3068\u3001\u9ad8\u3044\u3067\u3059\u304c\u3001\u5343\u77f3\u304b\u3089\u3082\u8cb7\u3048\u307e\u3059\u3002\nhttp://sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-4G6M\n\nSpark Core \u306e WiFi \u3078\u306e\u63a5\u7d9a\nhttp://docs.spark.io/start/ \u306b\u5f93\u3063\u3066\u4f5c\u696d\u3057\u307e\u3059\u3002\n\nSpark Core \u3092 Micro USB \u3092\u7e4b\u304f\n\u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\niPhone: https://itunes.apple.com/us/app/spark-core/id760157884\n\nAndroid: https://play.google.com/store/apps/details?id=io.spark.core.android\n\n\n\n\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u304c\u3001\u7e4b\u304e\u305f\u3044WiFi\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3002Spark \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\uff08\u307e\u3060\u306e\u5834\u5408\u306f\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\uff09\nSSID\u7b49\u304c\u3042\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001CONNECT\u3092\u30bf\u30c3\u30d7\nLED \u306e\u610f\u5473\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n\n\nBlinking blue: Listening for Wi-Fi credentials\nSolid blue: Getting Wi-Fi info from app\nBlinking green: Connecting to the Wi-Fi network\nBlinking cyan: Connecting to the Spark Cloud\nBlinking magenta: Updating to the newest firmware\n\n\n\n\n\u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u56de\u8def\u3092\u7d44\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n\n\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u8fbc\u307f\n\u4ee5\u4e0b\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\nhttps://www.spark.io/build\n\"CREATE NEW APP\"\u3092\u30af\u30ea\u30c3\u30af\n\n\u540d\u524d\u3092\u4ed8\u3051\u308b\n\n\u5de6\u306e\u30dc\u30bf\u30f3\u306e \"LIBRARY\"(\u4e0b\u304b\u3089\uff14\u3064\u3081)\u3092\u30af\u30ea\u30c3\u30af\u3002DHT\u306e\u5165\u529b\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u691c\u7d22\n\nADAFRUIT_DHT \u3092\u30af\u30ea\u30c3\u30af\n\n\u4e0a\u90e8\u306e dht-test.ino \u306e\u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u8868\u793a\u3002\u5185\u5bb9\u3092\u5168\u3066\u30b3\u30d4\u30fc\u3002\n\u305d\u306e\u5f8c\u3001\u5de6\u306e \"INCLUDE APP\"\u3092\u30af\u30ea\u30c3\u30af\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001INCLUDE\u304c\u8db3\u3055\u308c\u308b\u3002\n\u305d\u306e\u5f8c\u306b\u3001\u30b3\u30d4\u30fc\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8cbc\u308a\u4ed8\u3051\u3002\uff08\u4e0d\u8981\u306aINCLUDE\u3092\u524a\u9664\uff09\n\n\u30b5\u30f3\u30d7\u30eb\u4e2d\u306eDHTTYPE\u3092DHT11\u306b\u3059\u308b\u3002\n\nouchi-sensor.ino\n// This #include statement was automatically added by the Spark IDE.\n#include \"Adafruit_DHT/Adafruit_DHT.h\"\n\n// Example testing sketch for various DHT humidity/temperature sensors\n// Written by ladyada, public domain\n\n#define DHTPIN 2     // what pin we're connected to\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11       // DHT 11 \n//#define DHTTYPE DHT22     // DHT 22 (AM2302)\n//#define DHTTYPE DHT21     // DHT 21 (AM2301)\n\n// Connect pin 1 (on the left) of the sensor to +5V\n// Connect pin 2 of the sensor to whatever your DHTPIN is\n// Connect pin 4 (on the right) of the sensor to GROUND\n// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor\n\nDHT dht(DHTPIN, DHTTYPE);\n\nvoid setup() {\n    Serial.begin(9600); \n    Serial.println(\"DHTxx test!\");\n\n    dht.begin();\n}\n\nvoid loop() {\n// Wait a few seconds between measurements.\n    delay(2000);\n\n// Reading temperature or humidity takes about 250 milliseconds!\n// Sensor readings may also be up to 2 seconds 'old' (its a \n// very slow sensor)\n    float h = dht.getHumidity();\n// Read temperature as Celsius\n    float t = dht.getTempCelcius();\n// Read temperature as Farenheit\n    float f = dht.getTempFarenheit();\n\n// Check if any reads failed and exit early (to try again).\n    if (isnan(h) || isnan(t) || isnan(f)) {\n        Serial.println(\"Failed to read from DHT sensor!\");\n        return;\n    }\n\n// Compute heat index\n// Must send in temp in Fahrenheit!\n    float hi = dht.getHeatIndex();\n    float dp = dht.getDewPoint();\n    float k = dht.getTempKelvin();\n\n    Serial.print(\"Humid: \"); \n    Serial.print(h);\n    Serial.print(\"% - \");\n    Serial.print(\"Temp: \"); \n    Serial.print(t);\n    Serial.print(\"*C \");\n    Serial.print(f);\n    Serial.print(\"*F \");\n    Serial.print(k);\n    Serial.print(\"*K - \");\n    Serial.print(\"DewP: \");\n    Serial.print(dp);\n    Serial.print(\"*C - \");\n    Serial.print(\"HeatI: \");\n    Serial.print(hi);\n    Serial.println(\"*C\");\n    Serial.println(Time.timeStr());\n}\n\n\n\u5de6\u4e0a\u306e\u7a32\u59bb\u30de\u30fc\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3002\n\u3059\u308b\u3068\u3001\u30d4\u30f3\u30af\uff08\u30de\u30bc\u30f3\u30bf\uff09\u8272\u306bLED\u304c\u70b9\u6ec5\u3092\u59cb\u3081\u307e\u3059\u3002\n\u30b7\u30a2\u30f3\uff08\u660e\u308b\u3044\u9752\u7dd1\u8272\uff09\u306b\u623b\u3063\u305f\u3089\u3001\u66f8\u304d\u8fbc\u307f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u7d50\u679c\u3092\u8868\u793a\n\u30b7\u30ea\u30a2\u30eb\u306e\u8868\u793a\u306b\u306f\u3001spark-cli \u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\n\u4e8b\u524d\u306b node.js \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\nspark-cli \u306b\u3064\u3044\u3066\nhttp://docs.spark.io/cli/\nnode.js\nhttp://nodejs.org/ \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nspark-cli \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n$ npm install -g spark-cli\n$ spark cloud login\n\n$ spark serial list\nFound 1 core(s) connected via serial: \n1:  /dev/cu.usbmodem1411\n\n$ spark serial monitor 1\nOpening serial monitor for com port: \"/dev/cu.usbmodem1411\"\n\nHumid: 614.40% - Temp: 665.60*C 1230.08*F 938.75*K - DewP: 1266.45*C - HeatI: 116350.96*C\nSat Dec 13 09:46:30 2014\n\nHumid: 614.40% - Temp: 665.60*C 1230.08*F 938.75*K - DewP: 1266.45*C - HeatI: 116350.96*C\nSat Dec 13 09:46:32 2014\n\n\nSpark Cloud \u306e Variable \u3078\u306e\u66f8\u304d\u8fbc\u307f\n\u30af\u30e9\u30a6\u30c9\u4e0a\u306e Variable \u306b\u66f8\u304d\u3053\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\n\ndelay\u309260000(\uff11\u5206)\u306b\u5909\u66f4\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001Spark \u306e\u5909\u6570\u306b\u8ffd\u52a0\n```\ndouble temp, humid;\n\nvoid setup() {\n    ....\n    Spark.variable(\"temp\", &temp, DOUBLE);\n    Spark.variable(\"humid\", &humid, DOUBLE);\n}\n```\nvoid loop() {\n    ....\n    temp = (double)t;\n    humid = (double)h;\n\n}\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ spark variable get temp\n$ spark variable get humid\n\n\u5168\u4f53\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nouchi-sensor.ino\n// This #include statement was automatically added by the Spark IDE.\n#include \"Adafruit_DHT/Adafruit_DHT.h\"\n\n// Example testing sketch for various DHT humidity/temperature sensors\n// Written by ladyada, public domain\n\n#define DHTPIN 2     // what pin we're connected to\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11       // DHT 11 \n//#define DHTTYPE DHT22     // DHT 22 (AM2302)\n//#define DHTTYPE DHT21     // DHT 21 (AM2301)\n\n// Connect pin 1 (on the left) of the sensor to +5V\n// Connect pin 2 of the sensor to whatever your DHTPIN is\n// Connect pin 4 (on the right) of the sensor to GROUND\n// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor\n\nDHT dht(DHTPIN, DHTTYPE);\ndouble temp, humid;\n\nvoid setup() {\n    Serial.begin(9600); \n    Serial.println(\"DHTxx test!\");\n\n    dht.begin();\n\n    Spark.variable(\"temp\", &temp, DOUBLE);\n    Spark.variable(\"humid\", &humid, DOUBLE);\n}\n\nvoid loop() {\n// Wait a few seconds between measurements.\n    delay(60000);\n\n// Reading temperature or humidity takes about 250 milliseconds!\n// Sensor readings may also be up to 2 seconds 'old' (its a \n// very slow sensor)\n    float h = dht.getHumidity();\n// Read temperature as Celsius\n    float t = dht.getTempCelcius();\n// Read temperature as Farenheit\n    float f = dht.getTempFarenheit();\n\n// Check if any reads failed and exit early (to try again).\n    if (isnan(h) || isnan(t) || isnan(f)) {\n        Serial.println(\"Failed to read from DHT sensor!\");\n        return;\n    }\n\n// Compute heat index\n// Must send in temp in Fahrenheit!\n    float hi = dht.getHeatIndex();\n    float dp = dht.getDewPoint();\n    float k = dht.getTempKelvin();\n\n    Serial.print(\"Humid: \"); \n    Serial.print(h);\n    Serial.print(\"% - \");\n    Serial.print(\"Temp: \"); \n    Serial.print(t);\n    Serial.print(\"*C \");\n    Serial.print(f);\n    Serial.print(\"*F \");\n    Serial.print(k);\n    Serial.print(\"*K - \");\n    Serial.print(\"DewP: \");\n    Serial.print(dp);\n    Serial.print(\"*C - \");\n    Serial.print(\"HeatI: \");\n    Serial.print(hi);\n    Serial.println(\"*C\");\n    Serial.println(Time.timeStr());\n\n    temp = (double)t;\n    humid = (double)h;\n\n}\n\n\n\u3053\u308c\u3067\u3001\u6e29\u5ea6\u3092\u5b9a\u671f\u7684\u306b\u30a2\u30c3\u30d7\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\nhttps://github.com/ikeyasu/ouchi-sensor\n\n\u30b5\u30fc\u30d0\u30fc\u518d\u5ea6\u958b\u767a\u306e\u4e0b\u6e96\u5099\n\u4ee5\u4e0b\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u30e2\u30ce\u306f\u5165\u308c\u3066\u4e0b\u3055\u3044\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u3001MacOSX\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\nnode.js\nhttp://nodejs.org/ \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nYeoman\n$ npm install -g yo\n\nMongoDB\n$ brew install mongodb\n\nGit\n$ brew install git\n\n\nYeoman\nhttp://yeoman.io/\nYeoman \u3068\u306f\u3001Scaffold\u30c4\u30fc\u30eb\u3067\u3059\u3002Scaffold \u306f\u3001Rails\u3067\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u4eca\u56de\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3082\u542b\u3081\u3066\u3001Yeoman \u306b\u751f\u6210\u3057\u3066\u3082\u3089\u3046\u4e8b\u306b\u3057\u307e\u3059\u306e\u3067\u3001generator-angular-fullstack \u3092\u4f7f\u3044\u307e\u3059\u3002\nhttps://github.com/DaftMonk/generator-angular-fullstack\n$ npm install -g generator-angular-fullstack\n$ mkdir weather-checker-sample && cd $_\n$ yo angular-fullstack weather-checker-sample\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u306e\u304c\u51fa\u307e\u3059\u3002\n     _-----_\n    |       |\n    |--(o)--|   .--------------------------.\n   `---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U`_ )   |   ladies and gentlemen!  |\n    /___A___\\   '__________________________'\n     |  ~  |\n   __'.___.'__\n \u00b4   `  |\u00b0 \u00b4 Y `\n\nOut of the box I create an AngularJS app with an Express server.\n\n# Client\n\n? What would you like to write scripts with? (Use arrow keys)\n\u276f JavaScript \n  CoffeeScript \n\n\u4ee5\u4e0b\u306e\u901a\u308a\u9078\u629e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n# Client\n\n? What would you like to write scripts with? JavaScript\n? What would you like to write markup with? HTML\n? What would you like to write stylesheets with? Sass\n? What Angular router would you like to use? uiRouter\n? Would you like to include Bootstrap? Yes\n? Would you like to include UI Bootstrap? Yes\n\n# Server\n\n? Would you like to use mongoDB with Mongoose for data modeling? Yes\n? Would you scaffold out an authentication boilerplate? No\n? Would you like to use socket.io? No\n\n$ git init .\n$ git add .\n$ git commit -m \"Initial commit\"\n\n\u4ee5\u4e0b\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u51fa\u529b\u3055\u308c\u305f\u30b3\u30fc\u30c9\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u25be client/\n  \u25be app/\n    \u25be main/\n        main.controller.js\n        main.controller.spec.js\n        main.html\n        main.js\n        main.scss\n      app.js\n      app.scss\n  \u25be assets/\n    \u25be images/\n        yeoman.png\n  \u25b8 bower_components/\n  \u25b8 components/\n    favicon.ico\n    index.html\n    robots.txt\n\u25be e2e/\n  \u25be main/\n      main.po.js\n      main.spec.js\n\u25b8 node_modules/\n\u25be server/\n  \u25be api/\n    \u25be thing/\n        index.js\n        thing.controller.js\n        thing.model.js\n        thing.spec.js\n  \u25be components/\n    \u25be errors/\n        index.js\n  \u25be config/\n    \u25be environment/\n        development.js\n        index.js\n        production.js\n        test.js\n      express.js\n      local.env.js\n      local.env.sample.js\n      seed.js\n  \u25be views/\n      404.html\n    app.js\n    routes.js\n  bower.json\n  Gruntfile.js\n  karma.conf.js\n  package.json\n  protractor.conf.js\n\n\"server/\" \u304c\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u30b3\u30fc\u30c9\u3067\u3001Web API\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\"client/\" \u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306eAngularJS \u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\nserver \u306b\u3000api/thing \u3068\u3044\u3046\u3001\u304a\u8a82\u3048\u5411\u304d\u306eAPI\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u3001\u30c7\u30fc\u30bf\u30fc\u30d9\u30fc\u30b9\u306e\u30e2\u30c7\u30eb\u3092\u8a2d\u8a08\n\u30b7\u30f3\u30d7\u30eb\u3067\u826f\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nserver/api/thing/thing.model.js\n'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nvar ThingSchema = new Schema({\n  name: {type: String, index: true},\n  value: Number,\n  date: {type: Date, default: Date.now}\n});\n\nmodule.exports = mongoose.model('Thing', ThingSchema);\n\n\n\n\u30c6\u30b9\u30c8\n\u30c6\u30b9\u30c8\u304c\u52d5\u304f\u306e\u3067\u3001\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001mongodb \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n$ mongod --dbpath .tmp/mongodb\n\ndbpath \u306f\u4f55\u3067\u3082\u826f\u3044\u3067\u3059\u3002yeoman \u3067\u751f\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\".tmp/\"\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\u5225\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n$ grunt test:server\n\nDone, without errors. \u3068\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n\u30b5\u30fc\u30d0\u30fc\u3067\u8868\u793a\u3057\u3066\u307f\u308b\n\u4ee5\u4e0b\u306e\u901a\u308a\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n$ grunt serve\n\nhttp://localhost:9000/api/things\n\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3059\u308b\u3068\u3001[] \u3068\u3044\u3046\u306e\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nSeed.js \u306b\u9069\u7b49\u306b\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\n\u4eca\u306e\u307e\u307e\u3060\u3068\u3001\u30c7\u30fc\u30bf\u304c\u7a7a\u3063\u307d\u3067\u958b\u767a\u3057\u306b\u304f\u3044\u306e\u3067\u3001\"server/config/seed.js\" \u306b\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nserver/config/seed.js\n/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\n\nvar Thing = require('../api/thing/thing.model');\n\nThing.find({}).remove(function() {\n  Thing.create({\n    name : 'test1-templ',\n    value : 1\n  }, {\n    name : 'test1-templ',\n    value : 1.1\n  });\n});\n\n\n\u3053\u308c\u306f\u3001server/config/environment/*.js \u306e\u4e2d\u3067 seedDB: true \u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u3060\u3051\u3001\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001development \u306e\u74b0\u5883\u3001\u3064\u307e\u308a\u624b\u5143\u3067 grunt serve \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u3001\u4e0a\u8a18\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\nSpark Cloud \u306b\u5024\u3092\u53d6\u308a\u306b\u884c\u304f\nSpark Core \u306e\u5024\u306f\u3001\u4ee5\u4e0b\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u3067\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u30fc\u3067\u3082\u5024\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\nhttps://api.spark.io/v1/devices/(device_id)/temp?access_token=(access_token)\nhttps://api.spark.io/v1/devices/(device_id)/humid?access_token=(access_token)\ndevice_id \u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n$ spark list\n\naccess_toke \u306f\u3001Web\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002https://www.spark.io/build \u306e\u3001\u5de6\u4e0b\u306e\"Settings\" \u306e\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001ACCESS TOKEN \u3092\u30b3\u30d4\u30fc\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n{\n  \"cmd\": \"VarReturn\",\n  \"name\": \"temp\",\n  \"result\": 27,\n  \"coreInfo\": {\n    \"last_app\": \"\",\n    \"last_heard\": \"2014-12-13T11:14:56.102Z\",\n    \"connected\": true,\n    \"deviceID\": \"(device_id)\"\n  }\n}\n\n\u3053\u308c\u3092 node.js \u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nrequest \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3044\u3046\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\nhttps://www.npmjs.com/package/request\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\nvar request = require('request');\n...\nrequest(url, function(error, response, body) {\n    ...\n});\n\n\u3053\u308c\u3092\u3001server/api/thing/thing.controler.js \u306b\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\nDEVICE_ID\u3068ACCESS_TOKE\u306f\u3001\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30ed\u30fc\u30ab\u30eb\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3068\u304d\u306f\u3001server/config/local.env.js \u306b\u5024\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u57f7\u7b46\u6642\u9593\u306e\u95a2\u4fc2\u3067\u3001\u3053\u3053\u3067\u306f\u3001\u6e29\u5ea6\u3060\u3051\u3092\u6271\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u3002\uff09\n\nserver/api/thing/thing.controler.js\nvar TEMP_SENSOR_URL = 'https://api.spark.io/v1/devices/' + process.env.DEVICE_ID +'/temp?access_token=' + process.env.ACCESS_TOKEN;\nvar HUMID_SENSOR_URL = 'https://api.spark.io/v1/devices/' + process.env.DEVICE_ID +'/humid?access_token=' + process.env.ACCESS_TOKEN;\n\nfunction retriveSensor(url, name, callback) {\n  request(url, function(error, response, body) {\n    var value = JSON.parse(body).result;\n    Thing.create({name: name, value: value}, callback);\n  });\n}\n\n// Retrieve sensor data\nexports.retrieveSensors = function(req, res) {\n  retriveSensor(TEMP_SENSOR_URL, 'sensor1-temp', function (err, things_temp) {\n    if(err) { return handleError(res, err); }\n    return res.json(200, [things_temp, things_humid]);\n  });\n};\n\n\n\nserver/config/local.env.js\n'use strict';\n\n// Use local.env.js for environment variables that grunt will set when the server starts locally.\n// Use for your api keys, secrets, etc. This file should not be tracked by git.\n//\n// You will need to set these on the server you deploy to.\n\nmodule.exports = {\n  DOMAIN: 'http://localhost:9000',\n  SESSION_SECRET: \"ouchisensor-secret\",\n  // Control debug level for modules using visionmedia/debug\n  DEBUG: '',\n  DEVICE_ID: '(device_id)',\n  ACCESS_TOKEN: '(access_token)'\n};\n\n\n\nHeroku Scheduler \u306b\u3088\u308b\u5b9a\u671f\u7684\u306a\u5024\u306e\u53d6\u5f97\nHeroku \u3067\u3001\u5b9a\u671f\u7684\u306b\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001Heroku Scheduler \u3092\u4f7f\u3044\u307e\u3059\u3002\nhttps://devcenter.heroku.com/articles/scheduler\nhttp://weathercook.hatenadiary.jp/entry/2013/01/22/151034\n\u307e\u305a\u306f\u3001heroku \u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\u5404\u7a2e\u8a2d\u5b9a\u306f\u3001yeoman \u3067\u884c\u3048\u307e\u3059\u3002\n\u5b9f\u884c\u306b\u306f\u3001 Heroku toolbelt \u304c\u5fc5\u8981\u3067\u3059\u3002\u4ee5\u4e0b\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nHeroku toolbelt\nhttps://toolbelt.heroku.com/\n\u4ee5\u4e0b\u306e\u3001(app_name) \u306b heroku \u306b\u30a2\u30c3\u30d7\u3059\u308b\u6642\u306e\u30a2\u30d7\u30ea\u540d\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n$ yo angular-fullstack:heroku\n? Name to deploy as (Leave blank for a random name): (app_name)\n\nheroku addons:add mongolab\nheroku config:set DEVICE_ID=48ff72065067555016201587\nheroku config:set ACCESS_TOKEN=cf79c949a2e35f5a987b3898e989cc47147b8c47\nheroku config:set DOMAIN=(app_name).herokuapp.com\n\n\u6b21\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306b\u4f7f\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\n\nserver/config/scheduledRetriveSensors.js\n#!/usr/bin/env node\n\nvar request = require('request');\n\nvar DOMAIN = 'localhost:9000';\nif (process.env.DOMAIN) {\n  DOMAIN = process.env.DOMAIN;\n}\n\nrequest('http://' + DOMAIN + '/api/things/retrieveSensors', function(error, response, body) {\n  console.log(body);\n});\n\n\n\u3053\u308c\u3092 heroku scheduler \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n$ heroku addons:add scheduler:standard\n$ heroku addons:open scheduler\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u308b\u306e\u3067\u3001\"Add Job...\"\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 TASK \u3092 node server/config/scheduledRetriveSensors.js \u306b\u3057\u3066\u3001FFREQUENCY \u3092 Every 10 minites \u306b\u3057\u3066\u3001save \u3057\u307e\u3059\u3002\u3002\n\n\n\u6700\u65b0\u306e\u30bb\u30f3\u30b5\u30fc\u60c5\u5831\u3092\u8868\u793a\nshowSensor \u3092 server/app/thing/thing.controler.js \u306b\u305f\u3057\u307e\u3059\u3002\n\nserver/app/thing/thing.controler.js\nexports.showSensor = function(req, res) {\n  Thing.findOne({}, {}, { sort: { 'date' : -1 } }, function(err, thing) {\n    if(err) { return handleError(res, err); }\n    return res.json(200, thing);\n  });\n}\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nclient/app/main/main.controller.js\n'use strict';\n\nangular.module('ouchiSensorApp')\n  .controller('MainCtrl', function ($scope, $http) {\n    $scope.awesomeThings = [];\n\n    $http.get('/api/things/showSensor').success(function(thing) {\n      $scope.sensor = thing;\n    });\n\n    $scope.addThing = function() {\n      if($scope.newThing === '') {\n        return;\n      }\n      $http.post('/api/things', { name: $scope.newThing });\n      $scope.newThing = '';\n    };\n\n    $scope.deleteThing = function(thing) {\n      $http.delete('/api/things/' + thing._id);\n    };\n  });\n\n\n\nclient/app/main/main.html\n<div ng-include=\"'components/navbar/navbar.html'\"></div>\n\n<header class=\"hero-unit\" id=\"banner\">\n  <div class=\"container\">\n    <h1>Ouchi sensor</h1>\n  </div>\n</header>\n\n<div class=\"container\">\n  <h1>\n  {{sensor.value}}\u2103\n  </h1>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <p>Ouchi Sensor |\n        <a href=\"https://twitter.com/ikeyasu\">@ikeyasu</a></p>\n  </div>\n</footer>\n\n\n\n\u5b8c\u6210\uff01\n\u57f7\u7b46\u3092 13\u65e5\u306b\u9593\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u3001\u304b\u3051\u3053\u307f\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u304c\u5b8c\u6210\u54c1\u3067\u3059\u3002\nhttp://ouchi-sensor.herokuapp.com/\n# SparkCore \u3068 MEAN\u30b9\u30bf\u30c3\u30af\u3067\u4f5c\u308b\u304a\u3046\u3061\u30cf\u30c3\u30af\uff08Advent calendar\uff09\n\n## \u3064\u304f\u308b\u3082\u306e\n\n\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u306b\u6e29\u5ea6\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\nhttp://ouchi-sensor.herokuapp.com/\n\n\u3053\u308c\u306f\u3001Spark Core \u3068\u3044\u3046 Arduino \u4e92\u63db\u306e\u30cf\u30fc\u30c9\u3067\u53d6\u5f97\u3057\u305f\u6e29\u5ea6\u3067\u3059\u3002\u3053\u306e\u30cf\u30fc\u30c9\u304c\u3001\u76f4\u63a5 WiFi \u306b\u7e4b\u304c\u308a\u3001\u30af\u30e9\u30a6\u30c9\u306b\u60c5\u5831\u3092\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u3044\u307e\u3059\u3002\n\n# \u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u7de8\n## SparkCore \u3068\u306f\n\nhttp://spark.io \u3067\u767a\u58f2\u3055\u308c\u308b\u3001Arduino + WiFi \u304c\u30ef\u30f3\u30bb\u30c3\u30c8\u306b\u306a\u3063\u305f\u30c7\u30d0\u30a4\u30b9\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\n\n* \u4f7f\u308f\u308c\u3066\u3044\u308b\u30c1\u30c3\u30d7\u304c[CC3000](http://processors.wiki.ti.com/index.php/CC3000_Overview)\u306a\u306e\u3067\u3001TELEC\uff08\u6280\u9069\uff09\u3092\u901a\u904e\u3057\u3066\u3044\u307e\u3059\u3002=>[\u53c2\u8003\n](http://community.spark.io/t/can-i-use-sparkcore-in-japan/6448/4)\n* SparkCore\u7528\u306eBaaS\u306e\u30af\u30e9\u30a6\u30c9\u304c\u3042\u308a\u3001\u7c21\u5358\u306b\u30c7\u30fc\u30bf\u306e\u3084\u308a\u53d6\u308a\u304c\u53ef\u80fd\u3067\u3059\n\n## \u5fc5\u8981\u306a\u30e2\u30ce\u30fb\u8cb7\u3044\u65b9\n\nSparkCore\u306f\u3001\u4ee5\u4e0b\u304b\u3089\u8cb7\u3048\u307e\u3059\u3002\n\nhttps://store.spark.io/\n\n\u6ce8\u610f\u70b9\u306f\n\n* \u5b89\u3044 Photon \u3068\u3044\u3046\u306e\u306f2015\u5e742\u6708\u767a\u58f2\u4e88\u5b9a\u3067\u3001\u3055\u3089\u306bTELEC\u306f\u307e\u3060\u901a\u3063\u3066\u3044\u307e\u305b\u3093\u3002SparkCore\u3092\u8cfc\u5165\u3057\u307e\u3057\u3087\u3046\n* US\u304b\u3089\u306a\u306e\u3067\u3001\u5c4a\u304f\u307e\u3067\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\n\n\u56fd\u5185\u304b\u3089\u3060\u3068\u3001\u9ad8\u3044\u3067\u3059\u304c\u3001\u5343\u77f3\u304b\u3089\u3082\u8cb7\u3048\u307e\u3059\u3002\n\nhttp://sengoku.co.jp/mod/sgk_cart/detail.php?code=EEHD-4G6M\n\n## Spark Core \u306e WiFi \u3078\u306e\u63a5\u7d9a\n\nhttp://docs.spark.io/start/ \u306b\u5f93\u3063\u3066\u4f5c\u696d\u3057\u307e\u3059\u3002\n\n1. Spark Core \u3092 Micro USB \u3092\u7e4b\u304f\n2. \u30a2\u30d7\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n  * iPhone: https://itunes.apple.com/us/app/spark-core/id760157884\n  * Android: https://play.google.com/store/apps/details?id=io.spark.core.android\n3. \u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u304c\u3001\u7e4b\u304e\u305f\u3044WiFi\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n4. \u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3002Spark \u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3067\u30ed\u30b0\u30a4\u30f3\uff08\u307e\u3060\u306e\u5834\u5408\u306f\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\uff09\n5. SSID\u7b49\u304c\u3042\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u3001CONNECT\u3092\u30bf\u30c3\u30d7\n6. LED \u306e\u610f\u5473\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n  * Blinking blue: Listening for Wi-Fi credentials\n  * Solid blue: Getting Wi-Fi info from app\n  * Blinking green: Connecting to the Wi-Fi network\n  * Blinking cyan: Connecting to the Spark Cloud\n  * Blinking magenta: Updating to the newest firmware\n\n## \u30d6\u30ec\u30c3\u30c9\u30dc\u30fc\u30c9\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u56de\u8def\u3092\u7d44\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\n![breadboard.png](https://qiita-image-store.s3.amazonaws.com/0/38555/4463ff83-354a-4ff0-84df-c1610a026501.png \"breadboard.png\")\n\n![circuit.png](https://qiita-image-store.s3.amazonaws.com/0/38555/467d7b52-bcec-c117-388e-7482b7f5fba0.png \"circuit.png\")\n\n![IMG_2919.JPG](https://qiita-image-store.s3.amazonaws.com/0/38555/c7e1c6b7-3cad-3a1d-1828-038befcb4a64.jpeg \"IMG_2919.JPG\")\n\n\n# \u3068\u308a\u3042\u3048\u305a\u3001\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f8\u304d\u8fbc\u307f\n\n\u4ee5\u4e0b\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u304f\u3060\u3055\u3044\n\nhttps://www.spark.io/build\n\n\"CREATE NEW APP\"\u3092\u30af\u30ea\u30c3\u30af\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.39.49.png](https://qiita-image-store.s3.amazonaws.com/0/38555/a9c14366-66ca-1dbc-d866-727e3f3e4cb2.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.39.49.png\")\n\n\u540d\u524d\u3092\u4ed8\u3051\u308b\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.40.05.png](https://qiita-image-store.s3.amazonaws.com/0/38555/84d0c964-47f5-613d-f57b-fe332db80734.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.40.05.png\")\n\n\u5de6\u306e\u30dc\u30bf\u30f3\u306e \"LIBRARY\"(\u4e0b\u304b\u3089\uff14\u3064\u3081)\u3092\u30af\u30ea\u30c3\u30af\u3002DHT\u306e\u5165\u529b\u3057\u3066\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u691c\u7d22\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.04.png](https://qiita-image-store.s3.amazonaws.com/0/38555/e3357cb6-3c21-05c8-1d10-bed07ddd5c7b.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.04.png\")\n\nADAFRUIT_DHT \u3092\u30af\u30ea\u30c3\u30af\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.16.png](https://qiita-image-store.s3.amazonaws.com/0/38555/71256167-5830-3240-3c07-d33d9ef7bdc8.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.16.png\")\n\n\u4e0a\u90e8\u306e dht-test.ino \u306e\u30bf\u30d6\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u3092\u8868\u793a\u3002\u5185\u5bb9\u3092\u5168\u3066\u30b3\u30d4\u30fc\u3002\n\u305d\u306e\u5f8c\u3001\u5de6\u306e \"INCLUDE APP\"\u3092\u30af\u30ea\u30c3\u30af\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.44.png](https://qiita-image-store.s3.amazonaws.com/0/38555/dd9dc12c-cc97-fd1b-02a7-fe834ffb94c3.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.44.png\")\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001INCLUDE\u304c\u8db3\u3055\u308c\u308b\u3002\n\u305d\u306e\u5f8c\u306b\u3001\u30b3\u30d4\u30fc\u3057\u305f\u30b5\u30f3\u30d7\u30eb\u3092\u8cbc\u308a\u4ed8\u3051\u3002\uff08\u4e0d\u8981\u306aINCLUDE\u3092\u524a\u9664\uff09\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.27.png](https://qiita-image-store.s3.amazonaws.com/0/38555/3d7caf84-394b-bf1f-e35f-fb9d0e5735f6.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 18.41.27.png\")\n\n\u30b5\u30f3\u30d7\u30eb\u4e2d\u306e`DHTTYPE`\u3092`DHT11`\u306b\u3059\u308b\u3002\n\n```ouchi-sensor.ino\n// This #include statement was automatically added by the Spark IDE.\n#include \"Adafruit_DHT/Adafruit_DHT.h\"\n\n// Example testing sketch for various DHT humidity/temperature sensors\n// Written by ladyada, public domain\n\n#define DHTPIN 2     // what pin we're connected to\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11\t\t// DHT 11 \n//#define DHTTYPE DHT22\t\t// DHT 22 (AM2302)\n//#define DHTTYPE DHT21\t\t// DHT 21 (AM2301)\n\n// Connect pin 1 (on the left) of the sensor to +5V\n// Connect pin 2 of the sensor to whatever your DHTPIN is\n// Connect pin 4 (on the right) of the sensor to GROUND\n// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor\n\nDHT dht(DHTPIN, DHTTYPE);\n\nvoid setup() {\n\tSerial.begin(9600); \n\tSerial.println(\"DHTxx test!\");\n\n\tdht.begin();\n}\n\nvoid loop() {\n// Wait a few seconds between measurements.\n\tdelay(2000);\n\n// Reading temperature or humidity takes about 250 milliseconds!\n// Sensor readings may also be up to 2 seconds 'old' (its a \n// very slow sensor)\n\tfloat h = dht.getHumidity();\n// Read temperature as Celsius\n\tfloat t = dht.getTempCelcius();\n// Read temperature as Farenheit\n\tfloat f = dht.getTempFarenheit();\n  \n// Check if any reads failed and exit early (to try again).\n\tif (isnan(h) || isnan(t) || isnan(f)) {\n\t\tSerial.println(\"Failed to read from DHT sensor!\");\n\t\treturn;\n\t}\n\n// Compute heat index\n// Must send in temp in Fahrenheit!\n\tfloat hi = dht.getHeatIndex();\n\tfloat dp = dht.getDewPoint();\n\tfloat k = dht.getTempKelvin();\n\n\tSerial.print(\"Humid: \"); \n\tSerial.print(h);\n\tSerial.print(\"% - \");\n\tSerial.print(\"Temp: \"); \n\tSerial.print(t);\n\tSerial.print(\"*C \");\n\tSerial.print(f);\n\tSerial.print(\"*F \");\n\tSerial.print(k);\n\tSerial.print(\"*K - \");\n\tSerial.print(\"DewP: \");\n\tSerial.print(dp);\n\tSerial.print(\"*C - \");\n\tSerial.print(\"HeatI: \");\n\tSerial.print(hi);\n\tSerial.println(\"*C\");\n\tSerial.println(Time.timeStr());\n}\n```\n\n\u5de6\u4e0a\u306e\u7a32\u59bb\u30de\u30fc\u30af\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u66f8\u304d\u8fbc\u307f\u3002\n\u3059\u308b\u3068\u3001\u30d4\u30f3\u30af\uff08\u30de\u30bc\u30f3\u30bf\uff09\u8272\u306bLED\u304c\u70b9\u6ec5\u3092\u59cb\u3081\u307e\u3059\u3002\n\u30b7\u30a2\u30f3\uff08\u660e\u308b\u3044\u9752\u7dd1\u8272\uff09\u306b\u623b\u3063\u305f\u3089\u3001\u66f8\u304d\u8fbc\u307f\u5b8c\u4e86\u3067\u3059\u3002\n\n### \u7d50\u679c\u3092\u8868\u793a\n\n\u30b7\u30ea\u30a2\u30eb\u306e\u8868\u793a\u306b\u306f\u3001spark-cli \u3092\u4f7f\u3046\u3068\u4fbf\u5229\u3067\u3059\u3002\n\u4e8b\u524d\u306b node.js \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nspark-cli \u306b\u3064\u3044\u3066\nhttp://docs.spark.io/cli/\n\nnode.js\nhttp://nodejs.org/ \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nspark-cli \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```console\n$ npm install -g spark-cli\n$ spark cloud login\n```\n\n```console\n$ spark serial list\nFound 1 core(s) connected via serial: \n1:\t/dev/cu.usbmodem1411\n\n$ spark serial monitor 1\nOpening serial monitor for com port: \"/dev/cu.usbmodem1411\"\n\nHumid: 614.40% - Temp: 665.60*C 1230.08*F 938.75*K - DewP: 1266.45*C - HeatI: 116350.96*C\nSat Dec 13 09:46:30 2014\n\nHumid: 614.40% - Temp: 665.60*C 1230.08*F 938.75*K - DewP: 1266.45*C - HeatI: 116350.96*C\nSat Dec 13 09:46:32 2014\n```\n\n## Spark Cloud \u306e Variable \u3078\u306e\u66f8\u304d\u8fbc\u307f\n\n\u30af\u30e9\u30a6\u30c9\u4e0a\u306e Variable \u306b\u66f8\u304d\u3053\u307f\u3092\u884c\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4fee\u6b63\u3092\u884c\u3044\u307e\u3059\u3002\n\n* delay\u309260000(\uff11\u5206)\u306b\u5909\u66f4\n* \u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001Spark \u306e\u5909\u6570\u306b\u8ffd\u52a0\n```\ndouble temp, humid;\n\nvoid setup() {\n    ....\n\tSpark.variable(\"temp\", &temp, DOUBLE);\n\tSpark.variable(\"humid\", &humid, DOUBLE);\n}\n```\n\n```\nvoid loop() {\n    ....\n    temp = (double)t;\n    humid = (double)h;\n\n}\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3001\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```console\n$ spark variable get temp\n$ spark variable get humid\n```\n\n\u5168\u4f53\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```ouchi-sensor.ino\n// This #include statement was automatically added by the Spark IDE.\n#include \"Adafruit_DHT/Adafruit_DHT.h\"\n\n// Example testing sketch for various DHT humidity/temperature sensors\n// Written by ladyada, public domain\n\n#define DHTPIN 2     // what pin we're connected to\n\n// Uncomment whatever type you're using!\n#define DHTTYPE DHT11\t\t// DHT 11 \n//#define DHTTYPE DHT22\t\t// DHT 22 (AM2302)\n//#define DHTTYPE DHT21\t\t// DHT 21 (AM2301)\n\n// Connect pin 1 (on the left) of the sensor to +5V\n// Connect pin 2 of the sensor to whatever your DHTPIN is\n// Connect pin 4 (on the right) of the sensor to GROUND\n// Connect a 10K resistor from pin 2 (data) to pin 1 (power) of the sensor\n\nDHT dht(DHTPIN, DHTTYPE);\ndouble temp, humid;\n\nvoid setup() {\n\tSerial.begin(9600); \n\tSerial.println(\"DHTxx test!\");\n\n\tdht.begin();\n\n\tSpark.variable(\"temp\", &temp, DOUBLE);\n\tSpark.variable(\"humid\", &humid, DOUBLE);\n}\n\nvoid loop() {\n// Wait a few seconds between measurements.\n\tdelay(60000);\n\n// Reading temperature or humidity takes about 250 milliseconds!\n// Sensor readings may also be up to 2 seconds 'old' (its a \n// very slow sensor)\n\tfloat h = dht.getHumidity();\n// Read temperature as Celsius\n\tfloat t = dht.getTempCelcius();\n// Read temperature as Farenheit\n\tfloat f = dht.getTempFarenheit();\n  \n// Check if any reads failed and exit early (to try again).\n\tif (isnan(h) || isnan(t) || isnan(f)) {\n\t\tSerial.println(\"Failed to read from DHT sensor!\");\n\t\treturn;\n\t}\n\n// Compute heat index\n// Must send in temp in Fahrenheit!\n\tfloat hi = dht.getHeatIndex();\n\tfloat dp = dht.getDewPoint();\n\tfloat k = dht.getTempKelvin();\n\n\tSerial.print(\"Humid: \"); \n\tSerial.print(h);\n\tSerial.print(\"% - \");\n\tSerial.print(\"Temp: \"); \n\tSerial.print(t);\n\tSerial.print(\"*C \");\n\tSerial.print(f);\n\tSerial.print(\"*F \");\n\tSerial.print(k);\n\tSerial.print(\"*K - \");\n\tSerial.print(\"DewP: \");\n\tSerial.print(dp);\n\tSerial.print(\"*C - \");\n\tSerial.print(\"HeatI: \");\n\tSerial.print(hi);\n\tSerial.println(\"*C\");\n\tSerial.println(Time.timeStr());\n\n    temp = (double)t;\n    humid = (double)h;\n\n}\n```\n\n\u3053\u308c\u3067\u3001\u6e29\u5ea6\u3092\u5b9a\u671f\u7684\u306b\u30a2\u30c3\u30d7\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n# \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\n\n\u30bd\u30fc\u30b9\u306f\u4ee5\u4e0b\u306b\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u53c2\u8003\u306b\u3057\u3066\u3044\u305f\u3060\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\nhttps://github.com/ikeyasu/ouchi-sensor\n\n## \u30b5\u30fc\u30d0\u30fc\u518d\u5ea6\u958b\u767a\u306e\u4e0b\u6e96\u5099\n\n\u4ee5\u4e0b\u3067\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u3044\u30e2\u30ce\u306f\u5165\u308c\u3066\u4e0b\u3055\u3044\u3002\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\u306f\u3001MacOSX\u3067\u793a\u3057\u3066\u3044\u307e\u3059\u3002\n\nnode.js\nhttp://nodejs.org/ \u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nYeoman\n\n```console\n$ npm install -g yo\n```\n\nMongoDB\n\n```console\n$ brew install mongodb\n```\n\nGit\n\n```console\n$ brew install git\n```\n\n## Yeoman\n\n\nhttp://yeoman.io/\n\nYeoman \u3068\u306f\u3001Scaffold\u30c4\u30fc\u30eb\u3067\u3059\u3002Scaffold \u306f\u3001Rails\u3067\u6709\u540d\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u751f\u6210\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306e\u4eca\u56de\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3082\u542b\u3081\u3066\u3001Yeoman \u306b\u751f\u6210\u3057\u3066\u3082\u3089\u3046\u4e8b\u306b\u3057\u307e\u3059\u306e\u3067\u3001generator-angular-fullstack \u3092\u4f7f\u3044\u307e\u3059\u3002\n\nhttps://github.com/DaftMonk/generator-angular-fullstack\n\n```console\n$ npm install -g generator-angular-fullstack\n$ mkdir weather-checker-sample && cd $_\n$ yo angular-fullstack weather-checker-sample\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u306e\u304c\u51fa\u307e\u3059\u3002\n\n```\n     _-----_\n    |       |\n    |--(o)--|   .--------------------------.\n   `---------\u00b4  |    Welcome to Yeoman,    |\n    ( _\u00b4U`_ )   |   ladies and gentlemen!  |\n    /___A___\\   '__________________________'\n     |  ~  |\n   __'.___.'__\n \u00b4   `  |\u00b0 \u00b4 Y `\n\nOut of the box I create an AngularJS app with an Express server.\n\n# Client\n\n? What would you like to write scripts with? (Use arrow keys)\n\u276f JavaScript \n  CoffeeScript \n```\n\n\u4ee5\u4e0b\u306e\u901a\u308a\u9078\u629e\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n```\n# Client\n\n? What would you like to write scripts with? JavaScript\n? What would you like to write markup with? HTML\n? What would you like to write stylesheets with? Sass\n? What Angular router would you like to use? uiRouter\n? Would you like to include Bootstrap? Yes\n? Would you like to include UI Bootstrap? Yes\n\n# Server\n\n? Would you like to use mongoDB with Mongoose for data modeling? Yes\n? Would you scaffold out an authentication boilerplate? No\n? Would you like to use socket.io? No\n```\n\n```console\n$ git init .\n$ git add .\n$ git commit -m \"Initial commit\"\n```\n\n\u4ee5\u4e0b\u3001\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n### \u51fa\u529b\u3055\u308c\u305f\u30b3\u30fc\u30c9\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n```\n\u25be client/\n  \u25be app/\n    \u25be main/\n        main.controller.js\n        main.controller.spec.js\n        main.html\n        main.js\n        main.scss\n      app.js\n      app.scss\n  \u25be assets/\n    \u25be images/\n        yeoman.png\n  \u25b8 bower_components/\n  \u25b8 components/\n    favicon.ico\n    index.html\n    robots.txt\n\u25be e2e/\n  \u25be main/\n      main.po.js\n      main.spec.js\n\u25b8 node_modules/\n\u25be server/\n  \u25be api/\n    \u25be thing/\n        index.js\n        thing.controller.js\n        thing.model.js\n        thing.spec.js\n  \u25be components/\n    \u25be errors/\n        index.js\n  \u25be config/\n    \u25be environment/\n        development.js\n        index.js\n        production.js\n        test.js\n      express.js\n      local.env.js\n      local.env.sample.js\n      seed.js\n  \u25be views/\n      404.html\n    app.js\n    routes.js\n  bower.json\n  Gruntfile.js\n  karma.conf.js\n  package.json\n  protractor.conf.js\n```\n\n\"server/\" \u304c\u3001\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u30b3\u30fc\u30c9\u3067\u3001Web API\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\"client/\" \u304c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u306eAngularJS \u306e\u30b3\u30fc\u30c9\u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002\n\nserver \u306b\u3000api/thing \u3068\u3044\u3046\u3001\u304a\u8a82\u3048\u5411\u304d\u306eAPI\u304c\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n## \u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9\u306e\u3001\u30c7\u30fc\u30bf\u30fc\u30d9\u30fc\u30b9\u306e\u30e2\u30c7\u30eb\u3092\u8a2d\u8a08\n\n\u30b7\u30f3\u30d7\u30eb\u3067\u826f\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```server/api/thing/thing.model.js\n'use strict';\n\nvar mongoose = require('mongoose'),\n    Schema = mongoose.Schema;\n\nvar ThingSchema = new Schema({\n  name: {type: String, index: true},\n  value: Number,\n  date: {type: Date, default: Date.now}\n});\n\nmodule.exports = mongoose.model('Thing', ThingSchema);\n```\n\n### \u30c6\u30b9\u30c8\n\n\u30c6\u30b9\u30c8\u304c\u52d5\u304f\u306e\u3067\u3001\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001mongodb \u3092\u8d77\u52d5\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```console\n$ mongod --dbpath .tmp/mongodb\n```\n\ndbpath \u306f\u4f55\u3067\u3082\u826f\u3044\u3067\u3059\u3002yeoman \u3067\u751f\u6210\u3057\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\".tmp/\"\u3068\u3044\u3046\u306e\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5229\u7528\u3057\u307e\u3057\u305f\u3002\n\n\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001\u5225\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```console\n$ grunt test:server\n```\n\n`Done, without errors.` \u3068\u8868\u793a\u3055\u308c\u308c\u3070OK\u3067\u3059\u3002\n\n### \u30b5\u30fc\u30d0\u30fc\u3067\u8868\u793a\u3057\u3066\u307f\u308b\n\n\u4ee5\u4e0b\u306e\u901a\u308a\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```console\n$ grunt serve\n```\n\nhttp://localhost:9000/api/things\n\n\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u8868\u793a\u3059\u308b\u3068\u3001`[]` \u3068\u3044\u3046\u306e\u304c\u8868\u793a\u3055\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n## Seed.js \u306b\u9069\u7b49\u306b\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\n\n\u4eca\u306e\u307e\u307e\u3060\u3068\u3001\u30c7\u30fc\u30bf\u304c\u7a7a\u3063\u307d\u3067\u958b\u767a\u3057\u306b\u304f\u3044\u306e\u3067\u3001\"server/config/seed.js\" \u306b\u30c0\u30df\u30fc\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```server/config/seed.js\n/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\n'use strict';\n\nvar Thing = require('../api/thing/thing.model');\n\nThing.find({}).remove(function() {\n  Thing.create({\n    name : 'test1-templ',\n    value : 1\n  }, {\n    name : 'test1-templ',\n    value : 1.1\n  });\n});\n```\n\n\u3053\u308c\u306f\u3001`server/config/environment/*.js` \u306e\u4e2d\u3067 `seedDB: true` \u3068\u66f8\u304b\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u3060\u3051\u3001\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u3001development \u306e\u74b0\u5883\u3001\u3064\u307e\u308a\u624b\u5143\u3067 `grunt serve` \u3092\u5b9f\u884c\u3057\u305f\u3068\u304d\u306b\u3060\u3051\u3001\u4e0a\u8a18\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n## Spark Cloud \u306b\u5024\u3092\u53d6\u308a\u306b\u884c\u304f\n\nSpark Core \u306e\u5024\u306f\u3001\u4ee5\u4e0b\u306eURL\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3053\u3068\u3067\u3067\u53d6\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d6\u30e9\u30a6\u30b6\u30fc\u3067\u3082\u5024\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\nhttps://api.spark.io/v1/devices/(device_id)/temp?access_token=(access_token)\nhttps://api.spark.io/v1/devices/(device_id)/humid?access_token=(access_token)\n\ndevice_id \u306f\u4ee5\u4e0b\u306e\u65b9\u6cd5\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```\n$ spark list\n```\n\naccess_toke \u306f\u3001Web\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002https://www.spark.io/build \u306e\u3001\u5de6\u4e0b\u306e\"Settings\" \u306e\u30dc\u30bf\u30f3\u3092\u30af\u30ea\u30c3\u30af\u3057\u3001ACCESS TOKEN \u3092\u30b3\u30d4\u30fc\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5024\u304c\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n```\n{\n  \"cmd\": \"VarReturn\",\n  \"name\": \"temp\",\n  \"result\": 27,\n  \"coreInfo\": {\n    \"last_app\": \"\",\n    \"last_heard\": \"2014-12-13T11:14:56.102Z\",\n    \"connected\": true,\n    \"deviceID\": \"(device_id)\"\n  }\n}\n```\n\n\u3053\u308c\u3092 node.js \u304b\u3089\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nrequest \u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u3044\u3046\u306e\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nhttps://www.npmjs.com/package/request\n\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\n```\nvar request = require('request');\n...\nrequest(url, function(error, response, body) {\n\t...\n});\n```\n\n\u3053\u308c\u3092\u3001server/api/thing/thing.controler.js \u306b\u7d44\u307f\u8fbc\u307f\u307e\u3059\u3002\n`DEVICE_ID`\u3068`ACCESS_TOKE`\u306f\u3001\u74b0\u5883\u5909\u6570\u304b\u3089\u53d6\u5f97\u3057\u307e\u3059\u3002\u30ed\u30fc\u30ab\u30eb\u3067\u30c6\u30b9\u30c8\u3059\u308b\u3068\u304d\u306f\u3001server/config/local.env.js \u306b\u5024\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n\uff08\u57f7\u7b46\u6642\u9593\u306e\u95a2\u4fc2\u3067\u3001\u3053\u3053\u3067\u306f\u3001\u6e29\u5ea6\u3060\u3051\u3092\u6271\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\u3002\uff09\n\n```server/api/thing/thing.controler.js\nvar TEMP_SENSOR_URL = 'https://api.spark.io/v1/devices/' + process.env.DEVICE_ID +'/temp?access_token=' + process.env.ACCESS_TOKEN;\nvar HUMID_SENSOR_URL = 'https://api.spark.io/v1/devices/' + process.env.DEVICE_ID +'/humid?access_token=' + process.env.ACCESS_TOKEN;\n\nfunction retriveSensor(url, name, callback) {\n  request(url, function(error, response, body) {\n    var value = JSON.parse(body).result;\n    Thing.create({name: name, value: value}, callback);\n  });\n}\n\n// Retrieve sensor data\nexports.retrieveSensors = function(req, res) {\n  retriveSensor(TEMP_SENSOR_URL, 'sensor1-temp', function (err, things_temp) {\n    if(err) { return handleError(res, err); }\n    return res.json(200, [things_temp, things_humid]);\n  });\n};\n```\n\n```server/config/local.env.js\n'use strict';\n\n// Use local.env.js for environment variables that grunt will set when the server starts locally.\n// Use for your api keys, secrets, etc. This file should not be tracked by git.\n//\n// You will need to set these on the server you deploy to.\n\nmodule.exports = {\n  DOMAIN: 'http://localhost:9000',\n  SESSION_SECRET: \"ouchisensor-secret\",\n  // Control debug level for modules using visionmedia/debug\n  DEBUG: '',\n  DEVICE_ID: '(device_id)',\n  ACCESS_TOKEN: '(access_token)'\n};\n```\n\n## Heroku Scheduler \u306b\u3088\u308b\u5b9a\u671f\u7684\u306a\u5024\u306e\u53d6\u5f97\n\nHeroku \u3067\u3001\u5b9a\u671f\u7684\u306b\u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3059\u308b\u306b\u306f\u3001Heroku Scheduler \u3092\u4f7f\u3044\u307e\u3059\u3002\n\nhttps://devcenter.heroku.com/articles/scheduler\nhttp://weathercook.hatenadiary.jp/entry/2013/01/22/151034\n\n\n\u307e\u305a\u306f\u3001heroku \u3067\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\u3002\u5404\u7a2e\u8a2d\u5b9a\u306f\u3001yeoman \u3067\u884c\u3048\u307e\u3059\u3002\n\u5b9f\u884c\u306b\u306f\u3001 Heroku toolbelt \u304c\u5fc5\u8981\u3067\u3059\u3002\u4ee5\u4e0b\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nHeroku toolbelt\nhttps://toolbelt.heroku.com/\n\n\u4ee5\u4e0b\u306e\u3001(app_name) \u306b heroku \u306b\u30a2\u30c3\u30d7\u3059\u308b\u6642\u306e\u30a2\u30d7\u30ea\u540d\u3092\u66f8\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n```console\n$ yo angular-fullstack:heroku\n? Name to deploy as (Leave blank for a random name): (app_name)\n```\n\n```\nheroku addons:add mongolab\nheroku config:set DEVICE_ID=48ff72065067555016201587\nheroku config:set ACCESS_TOKEN=cf79c949a2e35f5a987b3898e989cc47147b8c47\nheroku config:set DOMAIN=(app_name).herokuapp.com\n```\n\n\u6b21\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u306b\u4f7f\u3046\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```server/config/scheduledRetriveSensors.js\n#!/usr/bin/env node\n\nvar request = require('request');\n\nvar DOMAIN = 'localhost:9000';\nif (process.env.DOMAIN) {\n  DOMAIN = process.env.DOMAIN;\n}\n\nrequest('http://' + DOMAIN + '/api/things/retrieveSensors', function(error, response, body) {\n  console.log(body);\n});\n```\n\n\u3053\u308c\u3092 heroku scheduler \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```console\n$ heroku addons:add scheduler:standard\n$ heroku addons:open scheduler\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u753b\u9762\u304c\u51fa\u308b\u306e\u3067\u3001\"Add Job...\"\u3092\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 TASK \u3092 `node server/config/scheduledRetriveSensors.js` \u306b\u3057\u3066\u3001FFREQUENCY \u3092 Every 10 minites \u306b\u3057\u3066\u3001save \u3057\u307e\u3059\u3002\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 23.51.37.png](https://qiita-image-store.s3.amazonaws.com/0/38555/0426abc6-cf8e-5978-9305-1e3b888a2597.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 23.51.37.png\")\n\n\n## \u6700\u65b0\u306e\u30bb\u30f3\u30b5\u30fc\u60c5\u5831\u3092\u8868\u793a\n\nshowSensor \u3092 server/app/thing/thing.controler.js \u306b\u305f\u3057\u307e\u3059\u3002\n\n```server/app/thing/thing.controler.js\nexports.showSensor = function(req, res) {\n  Thing.findOne({}, {}, { sort: { 'date' : -1 } }, function(err, thing) {\n    if(err) { return handleError(res, err); }\n    return res.json(200, thing);\n  });\n}\n```\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5074\u3082\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```client/app/main/main.controller.js\n'use strict';\n\nangular.module('ouchiSensorApp')\n  .controller('MainCtrl', function ($scope, $http) {\n    $scope.awesomeThings = [];\n\n    $http.get('/api/things/showSensor').success(function(thing) {\n      $scope.sensor = thing;\n    });\n\n    $scope.addThing = function() {\n      if($scope.newThing === '') {\n        return;\n      }\n      $http.post('/api/things', { name: $scope.newThing });\n      $scope.newThing = '';\n    };\n\n    $scope.deleteThing = function(thing) {\n      $http.delete('/api/things/' + thing._id);\n    };\n  });\n```\n\n```client/app/main/main.html\n<div ng-include=\"'components/navbar/navbar.html'\"></div>\n\n<header class=\"hero-unit\" id=\"banner\">\n  <div class=\"container\">\n    <h1>Ouchi sensor</h1>\n  </div>\n</header>\n\n<div class=\"container\">\n  <h1>\n  {{sensor.value}}\u2103\n  </h1>\n</div>\n\n<footer class=\"footer\">\n  <div class=\"container\">\n      <p>Ouchi Sensor |\n        <a href=\"https://twitter.com/ikeyasu\">@ikeyasu</a></p>\n  </div>\n</footer>\n```\n\n# \u5b8c\u6210\uff01\n\n\u57f7\u7b46\u3092 13\u65e5\u306b\u9593\u306b\u5408\u308f\u305b\u308b\u305f\u3081\u3001\u304b\u3051\u3053\u307f\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u304c\u5b8c\u6210\u54c1\u3067\u3059\u3002\n\nhttp://ouchi-sensor.herokuapp.com/\n", "tags": ["Arduino", "MEAN", "Node.js"]}