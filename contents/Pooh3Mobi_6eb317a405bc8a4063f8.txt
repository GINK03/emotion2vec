{"tags": ["Android", "lint"], "context": "\u3053\u306e\u8a18\u4e8b\u306fJava\u8a00\u8a9e\u3092\u3064\u304b\u3063\u305fAndroid\u30a2\u30d7\u30ea\u306e\u958b\u767a\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\u3082\u3046\u3059\u3067\u306bDataBinding\u3084Butter Knife\u3067\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u3044\u308b\u65b9\u306f\u4e0d\u8981\u306a\u8a71\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nfindViewById\u5468\u308a\u3067\u3044\u308d\u3044\u308d\u3068\u9762\u5012\u3067\u3059\u3088\u306d\u3002\nreturn\u304cNullable\u306a\u306e\u3067Lint\u69d8\u306e\u6307\u6458\u5bfe\u5fdc\u3057\u305f\u308a\u3001\u30ad\u30e3\u30b9\u30c8\u66f8\u3044\u305f\u308a\u3002\n\u30ad\u30e3\u30b9\u30c8\u306e\u62ec\u5f27\u306e\u4f4d\u7f6e\u3068\u304b\u5fae\u5999\u306b\u3081\u3093\u3069\u3044\u3067\u3059\u3002\n\u305d\u3053\u3067\u305d\u3053\u3089\u3078\u3093\u3092\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u3066\u307f\u305f\u3044\u3068\u304a\u3082\u3044\u307e\u30fc\u3059\u3002\nAndroid3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\u3002\n\nActivity\u3092\u30b9\u30c3\u30ad\u30ea3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\n\u2193Before\n\nBeforeActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_before);\n        // \u3048\uff1fLint\u69d8\u2026\u6bce\u56de\u3053\u308c\u3084\u3093\u306e\uff1f\n        TextView tv = (TextView)findViewById(R.id.text);\n        if (tv != null) tv.setText(\"hoge\");\n\n        Button btn = (Button)findViewById(R.id.button);\n        if (btn != null) {\n           btn.setOnClickListener(this);\n           btn.setText(\"fuga\");\n        }\n    }\n\n\n3\u5206\u5f8c\uff083\u5206\u304b\u3051\u3066\u3084\u308b\u3068\u306f\u3044\u3063\u3066\u306a\u3044\uff09\n\u30c1\u30fc\u30f3\n\u2193After\n\nAfterActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_before);\n        // \u3053\u3093\u306a\u611f\u3058\u306b\u30b9\u30c3\u30ad\u30ea\uff01\u6c17\u5206\u5c4bLint\u69d8\u6016\u304f\u306a\u3044\uff01\n        viewById(R.id.text, TextView.class).setText(\"hoge\");\n        viewById(R.id.button, Button.class).setText(\"fuga\");\n        viewById(R.id.button).setOnClickListener(this);\n    }\n\n\n\u3053\u3093\u306a\u3093\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3092\u898b\u308b\u3068\u58ee\u89b3\u3002\u30b9\u30c3\u30ad\u30ea\u3002\nLint\u69d8\u306e\u9759\u7684\u89e3\u6790\u306eNull\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u3068\u3044\u3046\u6587\u53e5\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u3070\u4e0a\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u30b9\u30c3\u30ad\u30ea\u306e\u305f\u3081\u306b\u4f55\u3092\u3057\u305f\u306e\u304b\uff08\u4ed5\u8fbc\u307f\uff09\n3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\u3092\u3059\u308b\u305f\u3081\u306e\u30cd\u30bf\u306e\u4ed5\u8fbc\u307f\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092BaseActivity\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3001Activity\u306b\u7d99\u627f\u3055\u305b\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u305d\u308c\u3089\u3092\u4f7f\u3046\u3068\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\n\nBaseActivity.java\n    @NonNull\n    public final <T> T viewById(@IdRes int id, Class<T> clazz) {\n        View v = findViewById(id);\n        checkNotNull(v);\n        return cast(v, clazz);\n    }\n\n\n\u30ad\u30e3\u30b9\u30c8\u4e0d\u8981\u306a\u5834\u5408\u306e\u305f\u3081\u306b\u3053\u308c\u3082\u8ffd\u52a0\u3002\n\nBaseActivity.java\n    @NonNull\n    public final View viewById(@IdRes int id) {\n        View v = findViewById(id);\n        return checkNotNull(v);\n    }\n\n\nfind\u3092\u6d88\u3057\u305f\u306e\u306f\u3001\u30b9\u30c3\u30ad\u30ea\u306b\u3057\u305f\u304f\u3066\u4f55\u3068\u306a\u304f\u3067\u3059\uff01\n\u3053\u3053\u3067\u4f7f\u3063\u305fcheckNotNull()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b(\u53c2\u8003\uff1aGitHub:google/guava\u306echeckNotNull())\n\u203bcheckNotNull()\u306fGoogle\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u898b\u3066\u3044\u308b\u3068\u3044\u305f\u308b\u3068\u3053\u308d\u3067\u898b\u307e\u3059\u306d\u3002\nNull\u304c\u6765\u305f\u3089\u5bb9\u8d66\u306a\u304f\u843d\u3068\u3057\u3066\u3001\u3055\u3089\u306bif\u6587\u304c\u6e1b\u308b\u306e\u3067\u53ef\u8aad\u6027\u306b\u8ca2\u732e\u3057\u307e\u3059\u3002\n\u30ed\u30b8\u30c3\u30af\u4e0aNull\u304c\u6765\u308b\u306e\u306f\u307b\u307c\u3042\u308a\u5f97\u306a\u3044\u30b3\u30fc\u30c9\u3067\u4f7f\u3044\u305f\u3044\u3067\u3059\u3002\n\u307f\u306a\u3055\u3093\u5e83\u3081\u307e\u3057\u3087\u3046\u3002\n\u203bAndroidSDK lv19\u304b\u3089Objects\u3068\u3044\u3046\u30af\u30e9\u30b9\u306brequireNonNull()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001minSDK=19\u3067\u3042\u308c\u3070requireNonNull()\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u53c2\u8003:Objects | Android Developers\n\nBaseActivity.java\n    public static <T> T checkNotNull(T reference) {\n        if (reference == null) throw new NullPointerException();\n        return reference;\n    }\n\n\ncast()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\n\nBaseActivity.java\n    @SuppressWarnings(\"unchecked\") // checked !\n    public static <T> T cast(View reference, Class<T> clazz) {\n        if (!clazz.isInstance(reference)) throw new ClassCastException(\"View instance cannot cast to \" + clazz.getName() + \".\");\n        return clazz.cast(reference);\n    }\n\n\n\u53c2\u8003\uff1aGDD Blog: [Java]\u30b3\u30fc\u30c9\u304b\u3089\u52d5\u7684\u306binstanceof\u3057\u305f\u3044\n\u53c2\u80032\uff1ainstanceof \u3068 Class#isInstance - \u3084\u3055\u3057\u3044\u30c7\u30b9\u30de\u30fc\u30c1\n\u53c2\u80033\uff1aJava/Class\u306e\u30ad\u30e3\u30b9\u30c8, instanceof\u6f14\u7b97\u5b50\u306e\u4ee3\u66ff\u306a\u3069 - Glamenv-Septzen.net\ninstanceOf\u7121\u3057\u3067\u578b\u30c1\u30a7\u30c3\u30af\u3082\u3067\u304d\u308b\u3057\u3002\nJava\u306e\u30ad\u30e3\u30b9\u30c8\u69cb\u6587\u7121\u3057\u3067\u30ad\u30e3\u30b9\u30c8\u3067\u304d\u3061\u3083\u3044\u307e\u3059\u3002\n\u3057\u304b\u3082\u5f15\u6570\u3067\u52d5\u7684\u306b\u30ad\u30e3\u30b9\u30c8\u3001\u578b\u30c1\u30a7\u30c3\u30af\u53ef\u80fd\u306a\u3093\u3066\u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\n\u5f15\u6570\u306eView\u578b\u306fObject\u578b\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u5358\u7d14\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\u3053\u3093\u306a\u611f\u3058\u306bBaseActivity\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u81ea\u5206\u306eActivity\u306b\u3044\u3064\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\n\u3044\u3044\u611f\u3058\u306b\u4f7f\u3044\u307e\u308f\u3059\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\nFragment\u306b\u3064\u3044\u3066\u3082\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nFragment\u30d0\u30fc\u30b8\u30e7\u30f3\n\nBaseFragment.java\n    @SuppressWarnings(\"ConstantConditions\")\n    @NonNull\n    public final <T> T viewById(@IdRes int id, Class<T> clazz) {\n        View v = getView().findViewById(id);\n        checkNotNull(v);\n        return cast(v, clazz);\n    }\n\n    @SuppressWarnings(\"ConstantConditions\")\n    @NonNull\n    public final View viewById(@IdRes int id) {\n        View v = getView().findViewById(id);\n        checkNotNull(v);\n        return v;\n    }\n\n\nFragment\u3060\u3068getView()\u306eNull\u304c\u6016\u3044\u306e\u3067\u4ee5\u4e0b\u3082\u5b9a\u7fa9\u3057\u3066UI\u30b9\u30ec\u30c3\u30c9\u3092\u3092\u4f7f\u3063\u3066\u4f55\u304b\u3059\u308b\u3068\u304d\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nBaseFragment.java\n  \u3000private Thread uiThread;\n    private final Handler handler = new Handler();\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        uiThread = Thread.currentThread();\n    }\n\n    protected final void runOnUiThreadIgnoreState(Runnable action) {\n        try {\n            runOnUiThreadInternal(action);\n        } catch (FragmentStateException e) {\n            e.printStackTrace();\n        }\n    }\n\n    // Activity\u306erunOnUiThread\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3002\n    private void runOnUiThreadInternal(Runnable action) throws FragmentStateException {\n        checkFragmentState(this);\n        if (Thread.currentThread() != uiThread) {\n            handler.post(action);\n        } else {\n            action.run();\n        }\n    }\n\n    public static Fragment checkFragmentState(@NonNull Fragment fragment) throws FragmentViewStateException{\n        if(fragment.isRemoving()) throw new FragmentViewStateException(\"fragment is removing.\");\n        if(fragment.getActivity() == null) throw new FragmentViewStateException(\"getActivity() returned null.\");\n        if(fragment.getView() == null) throw new FragmentViewStateException(\"getView() returned null.\");\n        return fragment;\n    }\n\n\nException\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nFragmentViewStateException.java\nclass FragmentViewStateException extends Exception {\n    public FragmentViewStateException(String msg) {\n        super(msg);\n    }\n}\n\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u305f\u3068\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u53ef\u80fd\u3067\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\nMyFragment.java\n    private void updateText() {\n        // onDestroy\u5f8c\u3067\u3082\u5b89\u5fc3(Fragment\u306e\u72b6\u614b\u3092\u5224\u5b9a\u3057\u53ef\u80fd\u306a\u3089Runnable#run()\u3092\u5b9f\u884c\u3055\u305b\u308b)\n        runOnUiThreadIgnoreState(new Runnable() {\n            @Override\n            public void run() {\n                viewById(R.id.text, TextView.class).setText(\"hoge\");\n            }\n        });\n    }\n\n\n\u975e\u540c\u671f\u306a\u51e6\u7406\u3067onDestroy\u306e\u5f8c\u306b\u3053\u308c\u3092\u547c\u3093\u3067\u3082\u3002\u843d\u3061\u307e\u305b\u3093\u3002\nrunOnUiThreadIgnoreState()\u4ee5\u5916\u306b\u3044\u308d\u3044\u308d\u7528\u610f\u3002\u304a\u597d\u307f\u306e\u3082\u306e\u4f7f\u3046\u611f\u3058\u3067\u3002\n\nBaseFragment.java\n    // \u3053\u3053\u307e\u3067\u624b\u539a\u3044\u3068\u3044\u3044\u611f\u3058\uff1f\n    protected final void runOnUiThread(Runnable action) throws FragmentStateException {\n        runOnUiThreadInternal(action);\n    }\n\n    protected final void runOnUiThread(Runnable action, OnErrorCallback callback) {\n        try {\n            runOnUiThreadInternal(action);\n        } catch (FragmentStateException e) {\n            if(callback != null) callback.onError(e);\n        }\n    }\n\n    interface OnErrorCallback {\n        void onError(Object msg);\n    }\n\n\n\u306f\u30fc\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3002\n\n\u307e\u3068\u3081\n\u5185\u5bb9\u7684\u306b\u306f\u3053\u3053\u3089\u8fba\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306eButter Knife\u307f\u305f\u3044\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\u306e\u3067\u3001\u7d50\u69cb\u30cb\u30c3\u30c1\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u52d5\u6a5f\u306f\u300cfinal\u306b\u3067\u304d\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u306a\u308b\u3079\u304f\u4fdd\u6301\u3057\u305f\u304f\u306a\u3044\u3057\u3001\u30ea\u30fc\u30af\u3057\u305d\u3046\u300d\u304b\u3089\u6765\u3066\u3044\u3066\u3001\u76ee\u6307\u3059\u3082\u306e\u304c\u4f3c\u3066\u3044\u3066\u3082Butter Knife\u3068\u306f\u9055\u3044\u307e\u3059\u3002\uff08\u6a5f\u80fd\u885d\u7a81\u306f\u3057\u307e\u305b\u3093\u304c\u89e3\u6c7a\u3067\u304d\u308b\u554f\u984c\u7bc4\u56f2\u304c\u9055\u3046\u4e8b\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\u306a\u306e\u3067\u4e16\u306b\u51fa\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u653f\u6cbb\u7684\u3084\u5b97\u6559\u7684\u306a\u7406\u7531\u3067\u4f7f\u3048\u306a\u3044\u4eba\u3084\n\u4f3c\u305f\u3088\u3046\u306a\u52d5\u6a5f\u3092\u6301\u3063\u305f\u4eba\u306b\u3001\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u3063\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u306a\u3069\u306f\u4ee5\u4e0b\u306eURL\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/272shin16/Android-SDK-Extensions/tree/activity-fragment-extensions\n\nDataBinding\u4f7f\u3048\u3070\u3053\u3093\u306a\u306e\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u611f\u3058\u3002\u5c11\u3057\u4f7f\u3044\u65b9\u3092\u52c9\u5f37\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3051\u3069\u3002\n\u81ea\u52d5\u751f\u6210\u3055\u308c\u308bBinding\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4fdd\u6301\u3059\u308b\u5fc5\u8981\u306f\u3042\u308b\u3051\u3069\u3001\u3053\u308c\u306f\u305d\u3093\u306a\u306b\u30ea\u30b9\u30af\u306a\u3055\u305d\u3046\u3002\nDataBinding\u306b\u95a2\u3059\u308b\u53c2\u8003\u8a18\u4e8b\uff1ahttp://qiita.com/izumin5210/items/2784576d86ce6b9b51e6\n\n\n\u8ffd\u8a18(BaseActivity\u306b\u3064\u3044\u3066)\n\u3053\u3053\u3067\u66f8\u3044\u305fBaseActivity\u306b\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u306f\u975e\u5e38\u306b\u305f\u3081\u306b\u306a\u308a\u307e\u3059\u3002\n\u53c2\u8003\uff1a\u300cBaseActivity\u306b\u51e6\u7406\u3092\u6c42\u3081\u308b\u306e\u306f\u9593\u9055\u3063\u3066\u3044\u308b\u3060\u308d\u3046\u304b - Qiita\u300d\n\u4e0a\u8a18\u30ea\u30f3\u30af\u306e\u610f\u898b\u306f\u610f\u898b\u8005\u306e\u30b3\u30e1\u30f3\u30c8\u542b\u3081\u540c\u610f\u3057\u3066\u304a\u308a\u307e\u3059\u3057\u3001\u305d\u3046\u3044\u3046\u8b70\u8ad6\u304c\u7d4c\u7def\u304c\u3042\u3063\u305f\u306e\u3092\u77e5\u3063\u305f\u3046\u3048\u3067BaseActivity\u3068\u3044\u3046\u540d\u524d\u3092\u4f7f\u3063\u3066\u304a\u308a\u307e\u3059BaseActivity\u306b\u3064\u3044\u3066\u306f\u672c\u5f53\u8a00\u3046\u3068\u50d5\u3082\u5acc\u3044\u3067\u3059\u3002\n\u307e\u305a\u540d\u524d\u304c\u30d3\u30c3\u30b0\u904e\u304e\u3066\u3001\u306a\u3093\u3067\u3082\u5165\u308c\u3066\u3057\u307e\u3044\u3084\u3059\u3044\u8cac\u52d9\u306e\u3042\u3044\u307e\u3044\u306a\u540d\u524d\u304c\u5acc\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u6570\u5343\u884c\u306b\u308f\u305f\u308bBaseActivity\u304c\u554f\u984c\u306b\u306a\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u904e\u53bb\u3042\u3063\u305f\u306e\u3082\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\u50d5\u7684\u306b\u306fKotlin\u306e\u62e1\u5f35\u95a2\u6570\u304c\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u305d\u3046\u306a\u306e\u3067\u975e\u5e38\u306b\u671f\u5f85\u3057\u3066\u307e\u3059\u3002\n\u3067\u3082Java\u3067\u3057\u304b\u66f8\u3051\u306a\u3044\u4eba\u305f\u3061\u306b\u306fKotlin\u306a\u3093\u3066\u95a2\u4fc2\u306e\u306a\u3044\u8a71\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u61a7\u308c\u3092\u3053\u3081\u3066\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30ea\u30f3\u30af\u3067\u306fExtentionActivity\uff08\u5168Activity\u5171\u901a\u6a5f\u80fd\u306e\u307f\u4fdd\u6301\u3059\u308b\u4e00\u822c\u5316\u3055\u308c\u305f\u62e1\u5f35Activity\uff09\u3068\u540d\u524d\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\nActivity\u3054\u3068\u306b\u8cac\u52d9\u306e\u7bc4\u56f2\u304c\u5909\u308f\u308b\u306e\u306a\u3089\u3001\u5171\u901a\u3068\u305d\u3046\u3067\u306a\u3044\u90e8\u5206\u3092\u59d4\u8b72\u3067\u5206\u96e2\u3057\u3066\u3001\u8907\u6570\u306eActivity\u3092\u7528\u610f\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3060\u3051\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u307e\u3041\u601d\u8003\u505c\u6b62\u3060\u3051\u306f\u907f\u3051\u305f\u3044\u3002\n\u53c2\u8003\uff1aDelegation pattern - Wikipedia, the free encyclopedia\n\u3053\u306e\u8a18\u4e8b\u306fJava\u8a00\u8a9e\u3092\u3064\u304b\u3063\u305fAndroid\u30a2\u30d7\u30ea\u306e\u958b\u767a\u306b\u95a2\u3059\u308b\u8a18\u4e8b\u3067\u3059\u3002\n\n\u3082\u3046\u3059\u3067\u306bDataBinding\u3084[Butter Knife](http://jakewharton.github.io/butterknife/)\u3067\u30b9\u30c3\u30ad\u30ea\u3057\u3066\u3044\u308b\u65b9\u306f\u4e0d\u8981\u306a\u8a71\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\nfindViewById\u5468\u308a\u3067\u3044\u308d\u3044\u308d\u3068\u9762\u5012\u3067\u3059\u3088\u306d\u3002\nreturn\u304cNullable\u306a\u306e\u3067Lint\u69d8\u306e\u6307\u6458\u5bfe\u5fdc\u3057\u305f\u308a\u3001\u30ad\u30e3\u30b9\u30c8\u66f8\u3044\u305f\u308a\u3002\n\u30ad\u30e3\u30b9\u30c8\u306e\u62ec\u5f27\u306e\u4f4d\u7f6e\u3068\u304b\u5fae\u5999\u306b\u3081\u3093\u3069\u3044\u3067\u3059\u3002\n\u305d\u3053\u3067\u305d\u3053\u3089\u3078\u3093\u3092\u30b9\u30c3\u30ad\u30ea\u3055\u305b\u3066\u307f\u305f\u3044\u3068\u304a\u3082\u3044\u307e\u30fc\u3059\u3002\n\nAndroid3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\u3002\n\n\nActivity\u3092\u30b9\u30c3\u30ad\u30ea3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\n====\n\n\u2193Before\n\n```java:BeforeActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_before);\n        // \u3048\uff1fLint\u69d8\u2026\u6bce\u56de\u3053\u308c\u3084\u3093\u306e\uff1f\n        TextView tv = (TextView)findViewById(R.id.text);\n        if (tv != null) tv.setText(\"hoge\");\n\n        Button btn = (Button)findViewById(R.id.button);\n        if (btn != null) {\n           btn.setOnClickListener(this);\n           btn.setText(\"fuga\");\n        }\n    }\n```\n\n3\u5206\u5f8c\uff083\u5206\u304b\u3051\u3066\u3084\u308b\u3068\u306f\u3044\u3063\u3066\u306a\u3044\uff09\n\u30c1\u30fc\u30f3\n\n\u2193After\n\n```java:AfterActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_before);\n        // \u3053\u3093\u306a\u611f\u3058\u306b\u30b9\u30c3\u30ad\u30ea\uff01\u6c17\u5206\u5c4bLint\u69d8\u6016\u304f\u306a\u3044\uff01\n        viewById(R.id.text, TextView.class).setText(\"hoge\");\n        viewById(R.id.button, Button.class).setText(\"fuga\");\n        viewById(R.id.button).setOnClickListener(this);\n    }\n```\n\u3053\u3093\u306a\u3093\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u308c\u3092\u898b\u308b\u3068\u58ee\u89b3\u3002\u30b9\u30c3\u30ad\u30ea\u3002\nLint\u69d8\u306e\u9759\u7684\u89e3\u6790\u306eNull\u30c1\u30a7\u30c3\u30af\u3057\u3066\u306a\u3044\u3068\u3044\u3046\u6587\u53e5\u3082\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u3070\u4e0a\u306e\u3088\u3046\u306a\u611f\u3058\u306b\u3067\u304d\u307e\u3059\u3002\n\n\u30b9\u30c3\u30ad\u30ea\u306e\u305f\u3081\u306b\u4f55\u3092\u3057\u305f\u306e\u304b\uff08\u4ed5\u8fbc\u307f\uff09\n====\n3\u5206\u30af\u30c3\u30ad\u30f3\u30b0\u3092\u3059\u308b\u305f\u3081\u306e\u30cd\u30bf\u306e\u4ed5\u8fbc\u307f\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092BaseActivity\u307f\u305f\u3044\u306a\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3001Activity\u306b\u7d99\u627f\u3055\u305b\u307e\u3057\u305f\u3002\u305d\u3057\u3066\u305d\u308c\u3089\u3092\u4f7f\u3046\u3068\u4e0a\u306e\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3059\u3002\n\n```java:BaseActivity.java\n    @NonNull\n    public final <T> T viewById(@IdRes int id, Class<T> clazz) {\n        View v = findViewById(id);\n        checkNotNull(v);\n        return cast(v, clazz);\n    }\n```\n\u30ad\u30e3\u30b9\u30c8\u4e0d\u8981\u306a\u5834\u5408\u306e\u305f\u3081\u306b\u3053\u308c\u3082\u8ffd\u52a0\u3002\n\n```java:BaseActivity.java\n    @NonNull\n    public final View viewById(@IdRes int id) {\n        View v = findViewById(id);\n        return checkNotNull(v);\n    }\n```\n\nfind\u3092\u6d88\u3057\u305f\u306e\u306f\u3001\u30b9\u30c3\u30ad\u30ea\u306b\u3057\u305f\u304f\u3066\u4f55\u3068\u306a\u304f\u3067\u3059\uff01\n\n\n\u3053\u3053\u3067\u4f7f\u3063\u305fcheckNotNull()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b(\u53c2\u8003\uff1a[GitHub:google/guava\u306echeckNotNull()](https://git.io/vVVdH))\n\n\u203bcheckNotNull()\u306fGoogle\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u898b\u3066\u3044\u308b\u3068\u3044\u305f\u308b\u3068\u3053\u308d\u3067\u898b\u307e\u3059\u306d\u3002\nNull\u304c\u6765\u305f\u3089\u5bb9\u8d66\u306a\u304f\u843d\u3068\u3057\u3066\u3001\u3055\u3089\u306bif\u6587\u304c\u6e1b\u308b\u306e\u3067\u53ef\u8aad\u6027\u306b\u8ca2\u732e\u3057\u307e\u3059\u3002\n\u30ed\u30b8\u30c3\u30af\u4e0aNull\u304c\u6765\u308b\u306e\u306f\u307b\u307c\u3042\u308a\u5f97\u306a\u3044\u30b3\u30fc\u30c9\u3067\u4f7f\u3044\u305f\u3044\u3067\u3059\u3002\n\u307f\u306a\u3055\u3093\u5e83\u3081\u307e\u3057\u3087\u3046\u3002\n\n\u203bAndroidSDK lv19\u304b\u3089Objects\u3068\u3044\u3046\u30af\u30e9\u30b9\u306brequireNonNull()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001minSDK=19\u3067\u3042\u308c\u3070requireNonNull()\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\u53c2\u8003:[Objects | Android Developers](http://developer.android.com/intl/ja/reference/java/util/Objects.html)\n\n```java:BaseActivity.java\n    public static <T> T checkNotNull(T reference) {\n        if (reference == null) throw new NullPointerException();\n        return reference;\n    }\n```\n\ncast()\u306e\u5b9a\u7fa9\u306f\u4ee5\u4e0b\n\n```java:BaseActivity.java\n    @SuppressWarnings(\"unchecked\") // checked !\n    public static <T> T cast(View reference, Class<T> clazz) {\n        if (!clazz.isInstance(reference)) throw new ClassCastException(\"View instance cannot cast to \" + clazz.getName() + \".\");\n        return clazz.cast(reference);\n    }\n```\n\u53c2\u8003\uff1a[GDD Blog: [Java]\u30b3\u30fc\u30c9\u304b\u3089\u52d5\u7684\u306binstanceof\u3057\u305f\u3044](http://genz0.blogspot.jp/2013/05/javainstanceof.html)\n\u53c2\u80032\uff1a[instanceof \u3068 Class#isInstance - \u3084\u3055\u3057\u3044\u30c7\u30b9\u30de\u30fc\u30c1](http://d.hatena.ne.jp/shuji_w6e/20090203/1233674527)\n\u53c2\u80033\uff1a[Java/Class\u306e\u30ad\u30e3\u30b9\u30c8, instanceof\u6f14\u7b97\u5b50\u306e\u4ee3\u66ff\u306a\u3069 - Glamenv-Septzen.net](http://www.glamenv-septzen.net/view/1354)\n\ninstanceOf\u7121\u3057\u3067\u578b\u30c1\u30a7\u30c3\u30af\u3082\u3067\u304d\u308b\u3057\u3002\nJava\u306e\u30ad\u30e3\u30b9\u30c8\u69cb\u6587\u7121\u3057\u3067\u30ad\u30e3\u30b9\u30c8\u3067\u304d\u3061\u3083\u3044\u307e\u3059\u3002\n\u3057\u304b\u3082\u5f15\u6570\u3067\u52d5\u7684\u306b\u30ad\u30e3\u30b9\u30c8\u3001\u578b\u30c1\u30a7\u30c3\u30af\u53ef\u80fd\u306a\u3093\u3066\u3044\u3044\u611f\u3058\u3067\u3059\u306d\u3002\n\u5f15\u6570\u306eView\u578b\u306fObject\u578b\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\u5358\u7d14\u306b\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f\u3060\u3051\u3067\u3059\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u306bBaseActivity\u306b\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u3044\u3066\u3001\u81ea\u5206\u306eActivity\u306b\u3044\u3064\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\n\u3044\u3044\u611f\u3058\u306b\u4f7f\u3044\u307e\u308f\u3059\u3068\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\nFragment\u306b\u3064\u3044\u3066\u3082\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\nFragment\u30d0\u30fc\u30b8\u30e7\u30f3\n====\n\n```java:BaseFragment.java\n    @SuppressWarnings(\"ConstantConditions\")\n    @NonNull\n    public final <T> T viewById(@IdRes int id, Class<T> clazz) {\n        View v = getView().findViewById(id);\n        checkNotNull(v);\n        return cast(v, clazz);\n    }\n\n    @SuppressWarnings(\"ConstantConditions\")\n    @NonNull\n    public final View viewById(@IdRes int id) {\n        View v = getView().findViewById(id);\n        checkNotNull(v);\n        return v;\n    }\n```\n\nFragment\u3060\u3068getView()\u306eNull\u304c\u6016\u3044\u306e\u3067\u4ee5\u4e0b\u3082\u5b9a\u7fa9\u3057\u3066UI\u30b9\u30ec\u30c3\u30c9\u3092\u3092\u4f7f\u3063\u3066\u4f55\u304b\u3059\u308b\u3068\u304d\u306f\u3053\u308c\u3092\u4f7f\u3063\u3066\u66f8\u3044\u3066\u3082\u3089\u3046\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```java:BaseFragment.java\n  \u3000private Thread uiThread;\n    private final Handler handler = new Handler();\n\n    @Override\n    public void onAttach(Context context) {\n        super.onAttach(context);\n        uiThread = Thread.currentThread();\n    }\n\n    protected final void runOnUiThreadIgnoreState(Runnable action) {\n        try {\n            runOnUiThreadInternal(action);\n        } catch (FragmentStateException e) {\n            e.printStackTrace();\n        }\n    }\n\n    // Activity\u306erunOnUiThread\u3092\u53c2\u8003\u306b\u5b9f\u88c5\u3002\n    private void runOnUiThreadInternal(Runnable action) throws FragmentStateException {\n        checkFragmentState(this);\n        if (Thread.currentThread() != uiThread) {\n            handler.post(action);\n        } else {\n            action.run();\n        }\n    }\n\n    public static Fragment checkFragmentState(@NonNull Fragment fragment) throws FragmentViewStateException{\n        if(fragment.isRemoving()) throw new FragmentViewStateException(\"fragment is removing.\");\n        if(fragment.getActivity() == null) throw new FragmentViewStateException(\"getActivity() returned null.\");\n        if(fragment.getView() == null) throw new FragmentViewStateException(\"getView() returned null.\");\n        return fragment;\n    }\n```\n\nException\u3082\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```java:FragmentViewStateException.java\nclass FragmentViewStateException extends Exception {\n    public FragmentViewStateException(String msg) {\n        super(msg);\n    }\n}\n```\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u305f\u3068\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u53ef\u80fd\u3067\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u6301\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\n```java:MyFragment.java\n    private void updateText() {\n        // onDestroy\u5f8c\u3067\u3082\u5b89\u5fc3(Fragment\u306e\u72b6\u614b\u3092\u5224\u5b9a\u3057\u53ef\u80fd\u306a\u3089Runnable#run()\u3092\u5b9f\u884c\u3055\u305b\u308b)\n        runOnUiThreadIgnoreState(new Runnable() {\n            @Override\n            public void run() {\n                viewById(R.id.text, TextView.class).setText(\"hoge\");\n            }\n        });\n    }\n```\n\u975e\u540c\u671f\u306a\u51e6\u7406\u3067onDestroy\u306e\u5f8c\u306b\u3053\u308c\u3092\u547c\u3093\u3067\u3082\u3002\u843d\u3061\u307e\u305b\u3093\u3002\nrunOnUiThreadIgnoreState()\u4ee5\u5916\u306b\u3044\u308d\u3044\u308d\u7528\u610f\u3002\u304a\u597d\u307f\u306e\u3082\u306e\u4f7f\u3046\u611f\u3058\u3067\u3002\n\n```java:BaseFragment.java\n    // \u3053\u3053\u307e\u3067\u624b\u539a\u3044\u3068\u3044\u3044\u611f\u3058\uff1f\n    protected final void runOnUiThread(Runnable action) throws FragmentStateException {\n        runOnUiThreadInternal(action);\n    }\n\n    protected final void runOnUiThread(Runnable action, OnErrorCallback callback) {\n        try {\n            runOnUiThreadInternal(action);\n        } catch (FragmentStateException e) {\n            if(callback != null) callback.onError(e);\n        }\n    }\n\n    interface OnErrorCallback {\n        void onError(Object msg);\n    }\n```\n\n\n\u306f\u30fc\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3002\n\n\n\u307e\u3068\u3081\n====\n\u5185\u5bb9\u7684\u306b\u306f\u3053\u3053\u3089\u8fba\u306e\u30dc\u30a4\u30e9\u30fc\u30d7\u30ec\u30fc\u30c8\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u306e[Butter Knife](http://jakewharton.github.io/butterknife/)\u307f\u305f\u3044\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\u306e\u3067\u3001\u7d50\u69cb\u30cb\u30c3\u30c1\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u3082\u305d\u3082\u52d5\u6a5f\u306f\u300cfinal\u306b\u3067\u304d\u306a\u3044\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u306a\u308b\u3079\u304f\u4fdd\u6301\u3057\u305f\u304f\u306a\u3044\u3057\u3001\u30ea\u30fc\u30af\u3057\u305d\u3046\u300d\u304b\u3089\u6765\u3066\u3044\u3066\u3001\u76ee\u6307\u3059\u3082\u306e\u304c\u4f3c\u3066\u3044\u3066\u3082Butter Knife\u3068\u306f\u9055\u3044\u307e\u3059\u3002\uff08\u6a5f\u80fd\u885d\u7a81\u306f\u3057\u307e\u305b\u3093\u304c\u89e3\u6c7a\u3067\u304d\u308b\u554f\u984c\u7bc4\u56f2\u304c\u9055\u3046\u4e8b\u306b\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\u306a\u306e\u3067\u4e16\u306b\u51fa\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u653f\u6cbb\u7684\u3084\u5b97\u6559\u7684\u306a\u7406\u7531\u3067\u4f7f\u3048\u306a\u3044\u4eba\u3084\n\u4f3c\u305f\u3088\u3046\u306a\u52d5\u6a5f\u3092\u6301\u3063\u305f\u4eba\u306b\u3001\u53c2\u8003\u306b\u306a\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u307e\u3067\u8aad\u3093\u3067\u304f\u3060\u3055\u3063\u305f\u65b9\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3057\u305f\u3002\n\n\n\u3053\u306e\u8a18\u4e8b\u306b\u66f8\u3044\u3066\u3042\u308b\u30b3\u30fc\u30c9\u306e\u30b5\u30f3\u30d7\u30eb\u306a\u3069\u306f\u4ee5\u4e0b\u306eURL\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://github.com/272shin16/Android-SDK-Extensions/tree/activity-fragment-extensions\n\n\n\n\n<br><br><br>\nDataBinding\u4f7f\u3048\u3070\u3053\u3093\u306a\u306e\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u611f\u3058\u3002\u5c11\u3057\u4f7f\u3044\u65b9\u3092\u52c9\u5f37\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3051\u3069\u3002\n\u81ea\u52d5\u751f\u6210\u3055\u308c\u308bBinding\u30af\u30e9\u30b9\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u4fdd\u6301\u3059\u308b\u5fc5\u8981\u306f\u3042\u308b\u3051\u3069\u3001\u3053\u308c\u306f\u305d\u3093\u306a\u306b\u30ea\u30b9\u30af\u306a\u3055\u305d\u3046\u3002\nDataBinding\u306b\u95a2\u3059\u308b\u53c2\u8003\u8a18\u4e8b\uff1ahttp://qiita.com/izumin5210/items/2784576d86ce6b9b51e6\n\n\n<br><br><br>\n\u8ffd\u8a18(BaseActivity\u306b\u3064\u3044\u3066)\n====\n\u3053\u3053\u3067\u66f8\u3044\u305fBaseActivity\u306b\u3064\u3044\u3066\u4ee5\u4e0b\u306e\u30ea\u30f3\u30af\u306f\u975e\u5e38\u306b\u305f\u3081\u306b\u306a\u308a\u307e\u3059\u3002\n\u53c2\u8003\uff1a\u300c[BaseActivity\u306b\u51e6\u7406\u3092\u6c42\u3081\u308b\u306e\u306f\u9593\u9055\u3063\u3066\u3044\u308b\u3060\u308d\u3046\u304b - Qiita](http://qiita.com/consomme72/items/ceb8eefe5693485e4d77)\u300d\n\u4e0a\u8a18\u30ea\u30f3\u30af\u306e\u610f\u898b\u306f\u610f\u898b\u8005\u306e\u30b3\u30e1\u30f3\u30c8\u542b\u3081\u540c\u610f\u3057\u3066\u304a\u308a\u307e\u3059\u3057\u3001\u305d\u3046\u3044\u3046\u8b70\u8ad6\u304c\u7d4c\u7def\u304c\u3042\u3063\u305f\u306e\u3092\u77e5\u3063\u305f\u3046\u3048\u3067BaseActivity\u3068\u3044\u3046\u540d\u524d\u3092\u4f7f\u3063\u3066\u304a\u308a\u307e\u3059BaseActivity\u306b\u3064\u3044\u3066\u306f\u672c\u5f53\u8a00\u3046\u3068\u50d5\u3082\u5acc\u3044\u3067\u3059\u3002\n\u307e\u305a\u540d\u524d\u304c\u30d3\u30c3\u30b0\u904e\u304e\u3066\u3001\u306a\u3093\u3067\u3082\u5165\u308c\u3066\u3057\u307e\u3044\u3084\u3059\u3044\u8cac\u52d9\u306e\u3042\u3044\u307e\u3044\u306a\u540d\u524d\u304c\u5acc\u3044\u3067\u3059\u3002\n\u305d\u306e\u305f\u3081\u6570\u5343\u884c\u306b\u308f\u305f\u308bBaseActivity\u304c\u554f\u984c\u306b\u306a\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u904e\u53bb\u3042\u3063\u305f\u306e\u3082\u77e5\u3063\u3066\u3044\u307e\u3059\u3002\n\u50d5\u7684\u306b\u306fKotlin\u306e\u62e1\u5f35\u95a2\u6570\u304c\u3053\u306e\u554f\u984c\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u305d\u3046\u306a\u306e\u3067\u975e\u5e38\u306b\u671f\u5f85\u3057\u3066\u307e\u3059\u3002\n\u3067\u3082Java\u3067\u3057\u304b\u66f8\u3051\u306a\u3044\u4eba\u305f\u3061\u306b\u306fKotlin\u306a\u3093\u3066\u95a2\u4fc2\u306e\u306a\u3044\u8a71\u3067\u3059\u3002\n\u305d\u3046\u3044\u3046\u61a7\u308c\u3092\u3053\u3081\u3066\u3001\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u30ea\u30f3\u30af\u3067\u306fExtentionActivity\uff08\u5168Activity\u5171\u901a\u6a5f\u80fd\u306e\u307f\u4fdd\u6301\u3059\u308b\u4e00\u822c\u5316\u3055\u308c\u305f\u62e1\u5f35Activity\uff09\u3068\u540d\u524d\u3092\u5909\u3048\u3066\u3044\u307e\u3059\u3002\nActivity\u3054\u3068\u306b\u8cac\u52d9\u306e\u7bc4\u56f2\u304c\u5909\u308f\u308b\u306e\u306a\u3089\u3001\u5171\u901a\u3068\u305d\u3046\u3067\u306a\u3044\u90e8\u5206\u3092\u59d4\u8b72\u3067\u5206\u96e2\u3057\u3066\u3001\u8907\u6570\u306eActivity\u3092\u7528\u610f\u3057\u3066\u3042\u3052\u308c\u3070\u3088\u3044\u3060\u3051\u3060\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u3041\u601d\u8003\u505c\u6b62\u3060\u3051\u306f\u907f\u3051\u305f\u3044\u3002\n\n\u53c2\u8003\uff1a[Delegation pattern - Wikipedia, the free encyclopedia](https://en.wikipedia.org/wiki/Delegation_pattern)\n"}