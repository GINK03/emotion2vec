{"context": "\n\n\u306f\u3058\u3081\u306b\n9\u670814\u65e5\uff08\u6c34\uff09\u306biOS10\u304c\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306e\u3067\u3001\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u6a5f\u80fd\u3092\u5c11\u3057\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\niOS 10 \u3067\u753b\u50cf\u3064\u304d\u306e Notification \u3092\u914d\u4fe1\u3059\u308b\n\u306a\u304a\u3001\u672c\u30b5\u30f3\u30d7\u30eb\u306f\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n\u30fbXcode 8 GM seed\n\u30fbiOS 10.0.1 GM seed\n\n\u5b9f\u88c5\u624b\u9806\n\n\u30a2\u30d7\u30ea\u5074\u306e\u5b9f\u88c5\nApplication Extension\u5074\u306e\u5b9f\u88c5\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5(PHP)\n\u52d5\u304b\u3057\u3066\u307f\u307e\u3059\n\n\n1. \u30a2\u30d7\u30ea\u5074\u306e\u5b9f\u88c5\n\n(1) General\u306b\u3066\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u7528\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nSigning\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u6240\u304cXCode7.x\u3068\u9055\u3046\u306e\u3067\u6ce8\u610f!\n\n\n\nXCode\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\u8aac\u660e\n\n\n\n\nXCode8.0 GM\nGeneral\u306b\u3066\u8a2d\u5b9a\u3067\u304d\u308b\n\n\nXCode7.x\nBuild Settings\u306b\u3066\u8a2d\u5b9a\u3067\u304d\u308b\n\n\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001Debug\u7528\u3060\u3051\u884c\u3044\u307e\u3059\u3002\n\uff08\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306e\u30bf\u30a4\u30dd\u306f\u3054\u611b\u5b0c\uff09\n\n\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65b9\u6cd5\u306f\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\n(2) Capabilities\u306b\u3066\u3001Push Notifications\u3092ON\u306b\u3059\u308b\n\nPush Notifications\u3092ON\u306b\u3059\u308b\u3068\u3001<\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d>.entitlements\u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\nNotificationDemo.entitlements\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>aps-environment</key>\n    <string>development</string>\n</dict>\n</plist>\n\n\n\n\n(3) APNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u767b\u9332\u53ca\u3073\u3001\u30c7\u30d0\u30a4\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30c7\u30d0\u30a4\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\n\u307e\u3060\u307e\u3060iOS8\u30019\u306f\u3001\u5fc5\u8981\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u306e\u3067\u3001\nDevelopmentTarget\u30928.0\u306b\u3057\u305f\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\n\nAppDelegate.swift\nimport UIKit\nimport UserNotifications\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n        print(#function)\n\n        if #available(iOS 10.0, *) {\n\n            let center = UNUserNotificationCenter.current()\n            center.delegate = self\n            center.requestAuthorization(options: [.badge, .sound, .alert], completionHandler: { (granted, error) in\n                if error != nil {\n                    print(error?.localizedDescription)\n                    return\n                }\n\n                if granted {\n                    //\u5229\u7528\u8a31\u53ef\n                    application.registerForRemoteNotifications()\n                }\n            })\n        } else {\n            print(\"iOS9\u4ee5\u4e0b\u306e\u51e6\u7406\")\n        }\n\n        return true\n    }\n\n    func application(_ application: UIApplication,\n                     didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        print(#function)\n\n        var token = String(format: \"%@\", deviceToken as CVarArg) as String\n        let characterSet: CharacterSet = CharacterSet.init(charactersIn: \"<>\")\n        token = token.trimmingCharacters(in: characterSet)\n        token = token.replacingOccurrences(of: \" \", with: \"\")\n\n        //\u672c\u6765\u306f\u3001API\u3067\u30b5\u30fc\u30d0\u30fc\u3078\u901a\u77e5\u3059\u308b\n        print(\"deviceToken: \\(token)\")\n    }\n\n    func application(_ application: UIApplication,\n                     didFailToRegisterForRemoteNotificationsWithError error: Error) {\n        print(#function)\n        print(error)\n    }\n}\n\n\n\n\n(4) \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306e\u51e6\u7406\n\u4eca\u56de\u306f\u3001\u51e6\u7406\u3092\u5272\u611b\u3057\u307e\u3059\u3002\n\nAppDelegate.swift\nextension AppDelegate: UNUserNotificationCenterDelegate {\n\n    // \u30d5\u30a9\u30a2\u30b0\u30e9\u30f3\u30c9\u3067\u3082\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3059\u308b\n    @available(iOS 10.0, *)\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                willPresent notification: UNNotification,\n                                withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n\n        print(#function)\n        completionHandler([.badge, .sound, .alert])\n    }\n\n    // Push\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\n    @available(iOS 10.0, *)\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                didReceive response: UNNotificationResponse,\n                                withCompletionHandler completionHandler: @escaping () -> Void) {\n        print(#function)\n        completionHandler()\n    }\n}\n\n\n\n2. Application Extension\u5074\u306e\u5b9f\u88c5\niOS10\u304b\u3089Application Extension\u3092\u5229\u7528\u3059\u308b\u3068\u3001\n\u753b\u50cf\u3082\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n(1) Xcode \u306e File > New > Target\u3092\u9078\u629e\u3059\u308b\n\n\n(2)\u5de6\u306e\u30d0\u30fc\u3067 iOS > Application Extension \u3092\u9078\u629e\u3057\u3001Notification Service Extension\u3092\u9078\u3093\u3067 Next\n\n\n(3)Target\u540d\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066 Finish\nProduct\u540d\u306f\u3001\u30a2\u30d7\u30ea\u540d\u3068\u9055\u3046\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n(4)Activate\u3092\u9078\u629e\n\n\n(5) NotificationService\u30af\u30e9\u30b9\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\n\nNotificationService.swift\nimport UserNotifications\n\nclass NotificationService: UNNotificationServiceExtension {\n\n    var contentHandler: ((UNNotificationContent) -> Void)?\n    var bestAttemptContent: UNMutableNotificationContent?\n\n    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n        self.contentHandler = contentHandler\n        bestAttemptContent = (request.content.mutableCopy() as? UNMutableNotificationContent)\n\n        if let bestAttemptContent = bestAttemptContent {\n            // Modify the notification content here...\n            bestAttemptContent.title = \"\\(bestAttemptContent.title) [modified]\"\n\n            contentHandler(bestAttemptContent)\n        }\n    }\n\n    override func serviceExtensionTimeWillExpire() {\n        // Called just before the extension will be terminated by the system.\n        // Use this as an opportunity to deliver your \"best attempt\" at modified content, otherwise the original push payload will be used.\n        if let contentHandler = contentHandler, let bestAttemptContent =  bestAttemptContent {\n            contentHandler(bestAttemptContent)\n        }\n    }\n\n}\n\n\n\n(6) \u753b\u50cf\u306eURL\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u9020\u3059\u308b\nAPNs\u304b\u3089\u53d7\u4fe1\u3059\u308b\u30ad\u30fc\u540d\u306f\u3001image-url\u3068\u3057\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u30ad\u30fc\u540d\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a2\u30d7\u30ea\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u4f55\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\u307e\u305f\u3001\u30a2\u30d7\u30ea\u5074\u3067\u30bf\u30a4\u30c8\u30eb\u7b49\u306e\u5909\u66f4\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\nNotificationService.swift\nimport UserNotifications\n\n@available(iOSApplicationExtension 10.0, *)\nclass NotificationService: UNNotificationServiceExtension {\n\n    let imageKey = \"image-url\"\n\n    var contentHandler: ((UNNotificationContent) -> Void)?\n    var bestAttemptContent: UNMutableNotificationContent?\n\n    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n\n        self.contentHandler = contentHandler\n        bestAttemptContent = (request.content.mutableCopy() as? UNMutableNotificationContent)\n\n        if let imageUrl = request.content.userInfo[imageKey] as? String {\n\n            let session = URLSession(configuration: URLSessionConfiguration.default)\n            let task = session.dataTask(with: URL(string: imageUrl)!, completionHandler: {[weak self](data, response, error) in\n                do {\n                    if let writePath = NSURL(fileURLWithPath:NSTemporaryDirectory())\n                        .appendingPathComponent(\"tmp.jpg\") {\n                        try data?.write(to: writePath)\n\n                        let identifier = \"sdt\"\n\n                        if let bestAttemptContent = self?.bestAttemptContent {\n                            let attachment = try UNNotificationAttachment(identifier: identifier, url: writePath, options: nil)\n                            bestAttemptContent.attachments = [attachment]\n                            contentHandler(bestAttemptContent)\n                        }\n                    } else {\n                        // URL\u304c\u4e0d\u6b63\u306a\u5834\u5408\n                        if let bestAttemptContent = self?.bestAttemptContent {\n                            contentHandler(bestAttemptContent)\n                        }\n                    }\n                } catch let error as NSError {\n                    print(error.localizedDescription)\n\n                    if let bestAttemptContent = self?.bestAttemptContent {\n                        contentHandler(bestAttemptContent)\n                    }\n                }\n            })\n            task.resume()\n        } else {\n            if let bestAttemptContent = self.bestAttemptContent {\n                contentHandler(bestAttemptContent)\n            }\n        }\n    }\n}\n\n\n\n3.\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5(PHP)\nNotification Service Extension\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\nmutable-content\u30921\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n{\n    \"aps\": {\n        \"alert\": {\n            \"title\": \"iOS\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30c6\u30b9\u30c8\",\n            \"subtitle\": \"SubTitle\",\n            \"body\": \"Body\"\n        },\n        \"sound\": \"sound1.aiff\",\n        \"badge\": 1,\n        \"mutable-content\": 1\n    },\n    \"image_url\": \"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/71694/5e08632a6a84409c6ed692141608d10b47f22766/medium.png?1468746973\"\n}\n\n\n(1) \u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a3c\u660e\u66f8\u3092\u53d6\u5f97\u3059\u308b\n\n1) iOS Dev Center \u306eIdentifiers > App IDs > PushNotifications \u304b\u3089cer\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n\n\n2) cer\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3001\u30ad\u30fc\u30c1\u30a7\u30fc\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n3) \u30ad\u30fc\u30c1\u30a7\u30fc\u30f3\u304b\u3089\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3092p12\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\n\n4) p12\u30d5\u30a1\u30a4\u30eb\u3092pem\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\n\nterminal\nopenssl pkcs12 -in aps_developments.p12 -out aps_developments.pem -nodes -clcerts\n\n\n\n(2) \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u9001\u4fe1\u7528\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\n\u672c\u30b5\u30f3\u30d7\u30eb\u306f\u3001PHP\u3067\u3059\u3002\n\nindex.php\n<?php\n$deviceToken = ''; //\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n$body = array();\n$body['aps']['alert']['title'] = 'iOS\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30c6\u30b9\u30c8';\n$body['aps']['alert']['subtitle'] = 'SubTitle';\n$body['aps']['alert']['body'] = 'Body';\n$body['aps']['sound'] = 'sound1.aiff';\n$body['aps']['badge'] = 1;\n$body['aps']['mutable-content'] = 1;\n$body['image-url'] = 'https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/71694/5e08632a6a84409c6ed692141608d10b47f22766/medium.png?1468746973';\n\n// SSL\u8a3c\u660e\u66f8\n$cert = 'aps_development.pem';\n//$cert = 'aps_production.pem';\n\n$url = 'ssl://gateway.sandbox.push.apple.com:2195'; // \u958b\u767a\u7528\n//$url = 'ssl://gateway.push.apple.com:2195'; // \u672c\u756a\u7528\n\n$context = stream_context_create();\nstream_context_set_option( $context, 'ssl', 'local_cert', $cert );\n$fp = stream_socket_client( $url, $err, $errstr, 60, STREAM_CLIENT_CONNECT, $context );\n\nif( !$fp ) {\n\n    echo 'Failed to connect.' . PHP_EOL;\n    exit( 1 );\n\n}\n\n$payload = json_encode( $body );\n$message = chr( 0 ) . pack( 'n', 32 ) . pack( 'H*', $deviceToken ) . pack( 'n', strlen($payload ) ) . $payload;\n\nprint 'send message:' . $payload . PHP_EOL;\n\nfwrite( $fp, $message );\nfclose( $fp );\necho 'end';\n\n\n\n(3) \u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\n\u30fbaps_development.pem\n\u30fbindex.php\n\n4. \u52d5\u304b\u3057\u3066\u307f\u307e\u3059\n\n(1)\u3000\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3059\u308b\n\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u8a31\u53ef\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u8a31\u53ef\u3092\u62bc\u4e0b\u3057\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u9589\u3058\u307e\u3059\u3002\n\n\n(2) \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u3063\u3066\u307f\u308b\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001MAMP\u306b\u8a2d\u7f6e\u3057\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306aURL\u3092\u53e9\u3044\u3066\u307f\u307e\u3057\u305f\u3002\nhttp://localhost:7777/ios10_push/\n\n(3) \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u53d7\u4fe1\u3059\u308b\n\u7121\u4e8b\u753b\u50cf\u4ed8\u304d\u306e\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u53d7\u4fe1\u3067\u304d\u307e\u3057\u305f\u3002\n\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u8abf\u3079\u3066\u306a\u304b\u3063\u305f\u3002\u3002\u3002\u3002\u3002\n\n\n\u307e\u3068\u3081\niOS\u306eNotification\u306fOS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u5ea6\u306b\u4ed5\u69d8\u304c\u5909\u308f\u308b\u306e\u3067\n\u3057\u3063\u304b\u308a\u3068\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u3057\u305f\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001iOS10\u306eNotification\u306f\u3001\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3057\u3001\n\u307e\u3060\u307e\u3060\u8272\u3005\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\n\u5c11\u3057\u305a\u3064\u89e6\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003\nhttp://qiita.com/himara2/items/dcfcc30b550c3304d86a#_reference-80e1be478a7188d43c83\n# \u306f\u3058\u3081\u306b\n9\u670814\u65e5\uff08\u6c34\uff09\u306biOS10\u304c\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u306e\u3067\u3001\n\u4e0b\u8a18\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u6a5f\u80fd\u3092\u5c11\u3057\u89e6\u3063\u3066\u307f\u307e\u3059\u3002\n\n[iOS 10 \u3067\u753b\u50cf\u3064\u304d\u306e Notification \u3092\u914d\u4fe1\u3059\u308b](http://qiita.com/himara2/items/dcfcc30b550c3304d86a#_reference-80e1be478a7188d43c83)\n\n\u306a\u304a\u3001\u672c\u30b5\u30f3\u30d7\u30eb\u306f\u4e0b\u8a18\u306e\u74b0\u5883\u3067\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002\n\u30fbXcode 8 GM seed\n\u30fbiOS 10.0.1 GM seed\n\n# \u5b9f\u88c5\u624b\u9806\n1. \u30a2\u30d7\u30ea\u5074\u306e\u5b9f\u88c5\n2. Application Extension\u5074\u306e\u5b9f\u88c5\n3. \u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5(PHP)\n4. \u52d5\u304b\u3057\u3066\u307f\u307e\u3059\n\n## 1. \u30a2\u30d7\u30ea\u5074\u306e\u5b9f\u88c5\n\n### (1) General\u306b\u3066\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u7528\u306e\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nSigning\u3092\u8a2d\u5b9a\u3059\u308b\u5834\u6240\u304cXCode7.x\u3068\u9055\u3046\u306e\u3067\u6ce8\u610f!\n\n|XCode\u306e\u30d0\u30fc\u30b8\u30e7\u30f3|\u8aac\u660e|\n|---|---|\n| XCode8.0 GM | General\u306b\u3066\u8a2d\u5b9a\u3067\u304d\u308b |\n| XCode7.x | Build Settings\u306b\u3066\u8a2d\u5b9a\u3067\u304d\u308b |\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001Debug\u7528\u3060\u3051\u884c\u3044\u307e\u3059\u3002\n\uff08\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u306e\u30bf\u30a4\u30dd\u306f\u3054\u611b\u5b0c\uff09\n\n<img width=\"562\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.26.58.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/7a0e88c7-befa-ffcf-62a6-66b5a35a4c11.png\">\n\n\u30d7\u30ed\u30d3\u30b8\u30e7\u30cb\u30f3\u30b0\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65b9\u6cd5\u306f\u3001\u5272\u611b\u3057\u307e\u3059\u3002\n\n### (2) Capabilities\u306b\u3066\u3001Push Notifications\u3092ON\u306b\u3059\u308b\n\n<img width=\"732\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.30.23.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/7665be4e-e090-ef50-a5ab-57e7afa5076b.png\">\n\nPush Notifications\u3092ON\u306b\u3059\u308b\u3068\u3001<\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d>.entitlements\u3068\u3044\u3046\u540d\u524d\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n```:NotificationDemo.entitlements\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n\t<key>aps-environment</key>\n\t<string>development</string>\n</dict>\n</plist>\n\n```\n\n### (3) APNS\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u767b\u9332\u53ca\u3073\u3001\u30c7\u30d0\u30a4\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u30c7\u30d0\u30a4\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\n\u307e\u3060\u307e\u3060iOS8\u30019\u306f\u3001\u5fc5\u8981\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u306e\u3067\u3001\nDevelopmentTarget\u30928.0\u306b\u3057\u305f\u5834\u5408\u306e\u4f8b\u3067\u3059\u3002\n\n```swift:AppDelegate.swift\nimport UIKit\nimport UserNotifications\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    var window: UIWindow?\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n        print(#function)\n        \n        if #available(iOS 10.0, *) {\n            \n            let center = UNUserNotificationCenter.current()\n            center.delegate = self\n            center.requestAuthorization(options: [.badge, .sound, .alert], completionHandler: { (granted, error) in\n                if error != nil {\n                    print(error?.localizedDescription)\n                    return\n                }\n                \n                if granted {\n                    //\u5229\u7528\u8a31\u53ef\n                    application.registerForRemoteNotifications()\n                }\n            })\n        } else {\n            print(\"iOS9\u4ee5\u4e0b\u306e\u51e6\u7406\")\n        }\n        \n        return true\n    }\n    \n    func application(_ application: UIApplication,\n                     didRegisterForRemoteNotificationsWithDeviceToken deviceToken: Data) {\n        print(#function)\n        \n        var token = String(format: \"%@\", deviceToken as CVarArg) as String\n        let characterSet: CharacterSet = CharacterSet.init(charactersIn: \"<>\")\n        token = token.trimmingCharacters(in: characterSet)\n        token = token.replacingOccurrences(of: \" \", with: \"\")\n\n        //\u672c\u6765\u306f\u3001API\u3067\u30b5\u30fc\u30d0\u30fc\u3078\u901a\u77e5\u3059\u308b\n        print(\"deviceToken: \\(token)\")\n    }\n    \n    func application(_ application: UIApplication,\n                     didFailToRegisterForRemoteNotificationsWithError error: Error) {\n        print(#function)\n        print(error)\n    }\n}\n\n```\n\n### (4) \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u8868\u793a\u3055\u308c\u305f\u6642\u3001\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\u306e\u51e6\u7406\n\u4eca\u56de\u306f\u3001\u51e6\u7406\u3092\u5272\u611b\u3057\u307e\u3059\u3002\n\n```swift:AppDelegate.swift\nextension AppDelegate: UNUserNotificationCenterDelegate {\n    \n    // \u30d5\u30a9\u30a2\u30b0\u30e9\u30f3\u30c9\u3067\u3082\u30a2\u30e9\u30fc\u30c8\u3092\u8868\u793a\u3059\u308b\n    @available(iOS 10.0, *)\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                willPresent notification: UNNotification,\n                                withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n\n        print(#function)\n        completionHandler([.badge, .sound, .alert])\n    }\n    \n    // Push\u3092\u30bf\u30c3\u30d7\u3057\u305f\u6642\n    @available(iOS 10.0, *)\n    func userNotificationCenter(_ center: UNUserNotificationCenter,\n                                didReceive response: UNNotificationResponse,\n                                withCompletionHandler completionHandler: @escaping () -> Void) {\n        print(#function)\n        completionHandler()\n    }\n}\n```\n\n## 2. Application Extension\u5074\u306e\u5b9f\u88c5\niOS10\u304b\u3089Application Extension\u3092\u5229\u7528\u3059\u308b\u3068\u3001\n\u753b\u50cf\u3082\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\n\n### (1) Xcode \u306e File > New > Target\u3092\u9078\u629e\u3059\u308b\n<img width=\"610\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.44.59.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/3a0bbbaf-eee0-95e7-8673-9bcac3860dbb.png\">\n\n### (2)\u5de6\u306e\u30d0\u30fc\u3067 iOS > Application Extension \u3092\u9078\u629e\u3057\u3001Notification Service Extension\u3092\u9078\u3093\u3067 Next\n\n<img width=\"718\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.45.10.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/43da5564-38fa-98d9-63bf-667322fcbfd0.png\">\n\n### (3)Target\u540d\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066 Finish\nProduct\u540d\u306f\u3001\u30a2\u30d7\u30ea\u540d\u3068\u9055\u3046\u540d\u524d\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n<img width=\"520\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.45.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/2d684003-65c4-3dd7-2728-e8ef09c2db00.png\">\n\n### (4)Activate\u3092\u9078\u629e\n\n<img width=\"445\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.46.56.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/9302827e-b6e7-bbfb-5d80-a3ad55253137.png\">\n\n### (5) NotificationService\u30af\u30e9\u30b9\u304c\u81ea\u52d5\u751f\u6210\u3055\u308c\u308b\n\n```swift:NotificationService.swift\nimport UserNotifications\n\nclass NotificationService: UNNotificationServiceExtension {\n\n    var contentHandler: ((UNNotificationContent) -> Void)?\n    var bestAttemptContent: UNMutableNotificationContent?\n\n    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n        self.contentHandler = contentHandler\n        bestAttemptContent = (request.content.mutableCopy() as? UNMutableNotificationContent)\n        \n        if let bestAttemptContent = bestAttemptContent {\n            // Modify the notification content here...\n            bestAttemptContent.title = \"\\(bestAttemptContent.title) [modified]\"\n            \n            contentHandler(bestAttemptContent)\n        }\n    }\n    \n    override func serviceExtensionTimeWillExpire() {\n        // Called just before the extension will be terminated by the system.\n        // Use this as an opportunity to deliver your \"best attempt\" at modified content, otherwise the original push payload will be used.\n        if let contentHandler = contentHandler, let bestAttemptContent =  bestAttemptContent {\n            contentHandler(bestAttemptContent)\n        }\n    }\n\n}\n```\n\n### (6) \u753b\u50cf\u306eURL\u3092\u30d1\u30fc\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u6539\u9020\u3059\u308b\nAPNs\u304b\u3089\u53d7\u4fe1\u3059\u308b\u30ad\u30fc\u540d\u306f\u3001image-url\u3068\u3057\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u30ad\u30fc\u540d\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u30a2\u30d7\u30ea\u304c\u4e00\u81f4\u3057\u3066\u3044\u308c\u3070\u4f55\u3067\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n\u307e\u305f\u3001\u30a2\u30d7\u30ea\u5074\u3067\u30bf\u30a4\u30c8\u30eb\u7b49\u306e\u5909\u66f4\u304c\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n```swift:NotificationService.swift\nimport UserNotifications\n\n@available(iOSApplicationExtension 10.0, *)\nclass NotificationService: UNNotificationServiceExtension {\n\n    let imageKey = \"image-url\"\n    \n    var contentHandler: ((UNNotificationContent) -> Void)?\n    var bestAttemptContent: UNMutableNotificationContent?\n\n    override func didReceive(_ request: UNNotificationRequest, withContentHandler contentHandler: @escaping (UNNotificationContent) -> Void) {\n        \n        self.contentHandler = contentHandler\n        bestAttemptContent = (request.content.mutableCopy() as? UNMutableNotificationContent)\n        \n        if let imageUrl = request.content.userInfo[imageKey] as? String {\n            \n            let session = URLSession(configuration: URLSessionConfiguration.default)\n            let task = session.dataTask(with: URL(string: imageUrl)!, completionHandler: {[weak self](data, response, error) in\n                do {\n                    if let writePath = NSURL(fileURLWithPath:NSTemporaryDirectory())\n                        .appendingPathComponent(\"tmp.jpg\") {\n                        try data?.write(to: writePath)\n                        \n                        let identifier = \"sdt\"\n                        \n                        if let bestAttemptContent = self?.bestAttemptContent {\n                            let attachment = try UNNotificationAttachment(identifier: identifier, url: writePath, options: nil)\n                            bestAttemptContent.attachments = [attachment]\n                            contentHandler(bestAttemptContent)\n                        }\n                    } else {\n                        // URL\u304c\u4e0d\u6b63\u306a\u5834\u5408\n                        if let bestAttemptContent = self?.bestAttemptContent {\n                            contentHandler(bestAttemptContent)\n                        }\n                    }\n                } catch let error as NSError {\n                    print(error.localizedDescription)\n                    \n                    if let bestAttemptContent = self?.bestAttemptContent {\n                        contentHandler(bestAttemptContent)\n                    }\n                }\n            })\n            task.resume()\n        } else {\n            if let bestAttemptContent = self.bestAttemptContent {\n                contentHandler(bestAttemptContent)\n            }\n        }\n    }\n}\n```\n\n## 3.\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5(PHP)\nNotification Service Extension\u3092\u5229\u7528\u3059\u308b\u306b\u306f\u3001\nmutable-content\u30921\u306b\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n```\n{\n    \"aps\": {\n        \"alert\": {\n            \"title\": \"iOS\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30c6\u30b9\u30c8\",\n            \"subtitle\": \"SubTitle\",\n            \"body\": \"Body\"\n        },\n        \"sound\": \"sound1.aiff\",\n        \"badge\": 1,\n        \"mutable-content\": 1\n    },\n    \"image_url\": \"https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/71694/5e08632a6a84409c6ed692141608d10b47f22766/medium.png?1468746973\"\n}\n```\n\n### (1) \u30b5\u30fc\u30d0\u30fc\u5074\u306e\u8a3c\u660e\u66f8\u3092\u53d6\u5f97\u3059\u308b\n\n#### 1) iOS Dev Center \u306eIdentifiers > App IDs > PushNotifications \u304b\u3089cer\u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n\n<img width=\"694\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-09-11 17.53.24.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/5d2aa453-c3a8-c612-8f27-4e3bc2a4ec58.png\">\n\n#### 2) cer\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3001\u30ad\u30fc\u30c1\u30a7\u30fc\u30f3\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n#### 3) \u30ad\u30fc\u30c1\u30a7\u30fc\u30f3\u304b\u3089\u5bfe\u8c61\u306e\u30d5\u30a1\u30a4\u30eb\u3092p12\u5f62\u5f0f\u3067\u51fa\u529b\u3059\u308b\n#### 4) p12\u30d5\u30a1\u30a4\u30eb\u3092pem\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\n\n```:terminal\nopenssl pkcs12 -in aps_developments.p12 -out aps_developments.pem -nodes -clcerts\n```\n\n### (2) \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u9001\u4fe1\u7528\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\n\u672c\u30b5\u30f3\u30d7\u30eb\u306f\u3001PHP\u3067\u3059\u3002\n\n```php:index.php\n<?php\n$deviceToken = ''; //\u9069\u5b9c\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n$body = array();\n$body['aps']['alert']['title'] = 'iOS\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u30c6\u30b9\u30c8';\n$body['aps']['alert']['subtitle'] = 'SubTitle';\n$body['aps']['alert']['body'] = 'Body';\n$body['aps']['sound'] = 'sound1.aiff';\n$body['aps']['badge'] = 1;\n$body['aps']['mutable-content'] = 1;\n$body['image-url'] = 'https://s3-ap-northeast-1.amazonaws.com/qiita-image-store/0/71694/5e08632a6a84409c6ed692141608d10b47f22766/medium.png?1468746973';\n\n// SSL\u8a3c\u660e\u66f8\n$cert = 'aps_development.pem';\n//$cert = 'aps_production.pem';\n\n$url = 'ssl://gateway.sandbox.push.apple.com:2195'; // \u958b\u767a\u7528\n//$url = 'ssl://gateway.push.apple.com:2195'; // \u672c\u756a\u7528\n\n$context = stream_context_create();\nstream_context_set_option( $context, 'ssl', 'local_cert', $cert );\n$fp = stream_socket_client( $url, $err, $errstr, 60, STREAM_CLIENT_CONNECT, $context );\n\nif( !$fp ) {\n\n    echo 'Failed to connect.' . PHP_EOL;\n    exit( 1 );\n\n}\n\n$payload = json_encode( $body );\n$message = chr( 0 ) . pack( 'n', 32 ) . pack( 'H*', $deviceToken ) . pack( 'n', strlen($payload ) ) . $payload;\n\nprint 'send message:' . $payload . PHP_EOL;\n\nfwrite( $fp, $message );\nfclose( $fp );\necho 'end';\n```\n\n### (3) \u4e0b\u8a18\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3057\u307e\u3059\n\u30fbaps_development.pem\n\u30fbindex.php\n\n## 4. \u52d5\u304b\u3057\u3066\u307f\u307e\u3059\n\n### (1)\u3000\u30a2\u30d7\u30ea\u3092\u8d77\u52d5\u3059\u308b\n\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u306e\u8a31\u53ef\u30c0\u30a4\u30a2\u30ed\u30b0\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u8a31\u53ef\u3092\u62bc\u4e0b\u3057\u3001\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u9589\u3058\u307e\u3059\u3002\n\n<img width=\"320\" alt=\"Screen Shot 2016-09-11 at 18.20.27.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/9f4a1ed4-f2fe-3d26-8b3e-db3e76b1b93d.png\">\n\n### (2) \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u9001\u3063\u3066\u307f\u308b\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u3001MAMP\u306b\u8a2d\u7f6e\u3057\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306aURL\u3092\u53e9\u3044\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttp://localhost:7777/ios10_push/\n\n### (3) \u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u3092\u53d7\u4fe1\u3059\u308b\n\u7121\u4e8b\u753b\u50cf\u4ed8\u304d\u306e\u30d7\u30c3\u30b7\u30e5\u901a\u77e5\u304c\u53d7\u4fe1\u3067\u304d\u307e\u3057\u305f\u3002\n\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u8abf\u3079\u3066\u306a\u304b\u3063\u305f\u3002\u3002\u3002\u3002\u3002\n\n<img width=\"320\" alt=\"Screen Shot 2016-09-11 at 18.21.49.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/71694/007660e5-71bf-402d-50b1-36e69a5f2559.png\">\n\n# \u307e\u3068\u3081\niOS\u306eNotification\u306fOS\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u308b\u5ea6\u306b\u4ed5\u69d8\u304c\u5909\u308f\u308b\u306e\u3067\n\u3057\u3063\u304b\u308a\u3068\u30ad\u30e3\u30c3\u30c1\u30a2\u30c3\u30d7\u3057\u305f\u3044\u3067\u3059\u3002\n\n\u307e\u305f\u3001iOS10\u306eNotification\u306f\u3001\u30d1\u30ef\u30fc\u30a2\u30c3\u30d7\u3057\u3001\n\u307e\u3060\u307e\u3060\u8272\u3005\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u306e\u3067\u3001\n\u5c11\u3057\u305a\u3064\u89e6\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u53c2\u8003\nhttp://qiita.com/himara2/items/dcfcc30b550c3304d86a#_reference-80e1be478a7188d43c83\n", "tags": ["iOS", "Swift", "ios10", "\u30d7\u30c3\u30b7\u30e5\u901a\u77e5", "Notification"]}