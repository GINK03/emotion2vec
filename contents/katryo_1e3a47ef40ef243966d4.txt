{"context": " More than 1 year has passed since last update.\n\ntl;dr\n\nVue.js\u3092\u4f7f\u3063\u3066\u5c0f\u8aac\u6295\u7a3f\u30b5\u30a4\u30c8\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u4fbf\u5229\u306b\u3057\u305f\n\u72ec\u81ea\u8a18\u6cd5\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\u3092\u4f5c\u3063\u305f\n\n\n\u72ec\u81ea\u8a18\u6cd5\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\n\n\u3053\u3046\u3044\u3046\u306e\u3002\n\n\u4f5c\u308a\u65b9\n\u672c\u6587\u306etextarea\u306bv-model\u3092\u6307\u5b9a\u3057\u3066\u304a\u304d\u3001v-on\u306eclick\u3068keydown, keyup, keypress\u306b\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u3092\u66f4\u65b0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\uff08\u672c\u4ef6\u3067\u306fupdatePreview\uff09\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u3002\n\u306a\u304a\u672c\u4ef6\u3067\u306e\u72ec\u81ea\u8a18\u6cd5\u306f\u3001[bg red]\u3084[bg sky]\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u898b\u3064\u3051\u308b\u3068\u3001\u300c\u80cc\u666f\u8a18\u6cd5\u300d\u3060\u3068\u5224\u65ad\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3002\n\u307e\u305f\u30d7\u30ec\u30d3\u30e5\u30fc\u306f\u300c[bg red]\u306e\u3088\u3046\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3057\u3066\u3042\u308b\u80cc\u666f\u753b\u50cf\u540d\u300d\u300c\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u753b\u50cf\u300d\u300cURL\u3092\u76f4\u63a5\u6307\u5b9a\u3057\u305f\u753b\u50cf\u300d\u306e3\u7a2e\u985e\u306e\u753b\u50cf\u3092\u8868\u793a\u3067\u304d\u308b\u3002\u304c\u3001\u57fa\u672c\u7684\u306aVue\u3092\u4f7f\u3063\u3066\u306e\u4f5c\u308a\u306f\u540c\u3058\u3002\n\n\u4f5c\u308a\u65b9\nHTML\uff08erb\u3060\u3051\u3069\uff09\u306e\u307b\u3046\u306b\u306f\n    <%= f.text_area :body, rows:20, id:'js-storyForm__body', 'v-model' => 'body', 'v-on' => 'click: updatePreview, keydown: updatePreview, keyup: updatePreview, keypress: updatePreview' %>\n\n\n\u3068\u66f8\u3044\u3066\u304a\u3044\u3066\u3001JS\uff08CoffeeScript\u3060\u3051\u3069\uff09\u306e\u307b\u3046\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3002\n\nform.js.coffee\nclass Storyblog.Vue.Stories.Form\n  createVue: ->\n    @vm = new Vue(\n      el: '#js-storyForm'\n      data:\n        currentTitle: ''\n        currentTableType: 'buttonAndCode'\n        currentTagType: ''\n        currentNotices: []\n        currentItems: []\n        body: ''\n        tags: []\n        preparedPictures: []\n        currentUserID: null\n        isActivePreview: false\n        isLoading: false\n        toggleActivatePreviewButtonText: '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092ON\u306b\u3059\u308b'\n        filenameURL: {}\n\n      methods:\n        initialize: (e) ->\n          @currentTitle = @$data['basicInstruction'].title\n          @fillContent('basicInstruction')\n          @getCurrentUserID()\n\n        renderPreview: (e) ->\n          @changeInstruction(e)\n          @updatePreview(e)\n\n        updatePreview: (e) ->\n          return unless @isActivePreview\n          re = /\\[.*?\\]/g;\n          tags = @body.match(re)\n          tagArtRe = /\\[(\\S+?)\\s+(.+?)\\]/;\n          updatedTags = []\n          _.each(tags, (tag) ->\n            tagArgArray = tag.match(tagArtRe)\n            return unless tagArgArray\n            return if tagArgArray.length < 2\n            funcName = tagArgArray[1]\n            tagArg = tagArgArray[2]\n            isBG = false\n            if funcName == 'bg'\n              isBG = true\n            isImage = false\n            if funcName == 'image'\n              isImage = true\n            isTextColor = false\n            if funcName == 'text-color'\n              isTextColor = true\n            isFilter = false\n            if funcName == 'filter'\n              isFilter = true\n            updatedTags.push({ 'whole':tag, 'funcName': funcName, 'arg':tagArg, 'isBG': isBG, 'isImage': isImage, 'isTextColor': isTextColor, 'isFilter': isFilter ,'url': null})\n          )\n          @tags = updatedTags\n          @fetchFromPreparedPictures()\n          @updateImagesURLs()\n          @setImageURLToTags()\n\n        setImageURLToTags: ->\n          self = @\n          _.each(@tags, (tag) ->\n            if tag['isBG'] or tag['isImage']\n              url = self.filenameURL[tag['arg']]\n              if url\n                tag['url'] = url\n              else\n                tag['url'] = tag['arg']\n          )\n\n        updateImagesURLs: ->\n          self = @\n          _.each(@tags, (tag) ->\n            if tag['isBG'] or tag['isImage']\n              self.setImageURLWithPreparedPictures(tag['arg'])\n              self.fetchFromCurrentUserPicturesAndSetImageURLWithFilename(tag['arg'])\n          )\n\n        getCurrentUserID: ->\n          @currentUserID = parseInt($('#js-currentUserID').text())\n\n        fetchFromCurrentUserPicturesAndSetImageURLWithFilename: (filename) ->\n          self = @\n          return unless @currentUserID\n          return if self.filenameURL[filename]\n          $.ajax({\n              type: 'GET'\n              datatype: 'json'\n              url: \"../../users/#{self.currentUserID}/picture.json\",\n              data: {\n                filename: filename\n              }\n              success: (image_info) ->\n                unless image_info\n                  self.filenameURL[filename] = filename\n                else\n                  file_path = image_info['file_path']\n                  if file_path\n                    url = file_path['image']['thumb']['url']\n                    self.filenameURL[filename] = url\n              error: (data) ->\n                console.log data\n            }\n          )\n        setImageURLWithPreparedPictures: (filename) ->\n          self = @\n          return unless self.preparedPictures\n          url = self.preparedPictures[filename]\n          self.filenameURL[filename] = url if url\n\n        fetchFromPreparedPictures: () ->\n          self = @\n          return if self.preparedPictures.length > 0\n          $.ajax({\n              type: 'GET'\n              datatype: 'json'\n              url: \"../../prepared_pictures.json\",\n              success: (data) ->\n                self.preparedPictures = data.prepared_pictures\n              error: (data) ->\n                console.log data\n            }\n          )\n\n        toggleActivePreview: (e) ->\n          if @isActivePreview\n            @toggleActivatePreviewButtonText = '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092ON\u306b\u3059\u308b'\n            @isActivePreview = false\n          else\n            @toggleActivatePreviewButtonText = '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092OFF\u306b\u3059\u308b'\n            @isActivePreview = true\n    )\n    @vm.initialize()\n\n\nVue.component('previewItem', {\n  template: '''\n<td><code>{{whole}}</code></td>\n<td>\n<img class=\"previewItem__image\" v-attr=\"src:url\" v-if=\"isBG\"/>\n<img class=\"previewItem__image\" v-attr=\"src:url\" v-if=\"isImage\"/>\n<span v-if=\"isTextColor\" v-style=\"color:arg\">\u6587\u5b57\u8272</span>\n<span v-if=\"isFilter\" v-style=\"background-color:arg\">\u30d5\u30a3\u30eb\u30bf\u30fc</span>\n</td>\n'''\n})\n\n\n\n\u3061\u306a\u307f\u306b\u3001\u672c\u6587\u304b\u3089\u72ec\u81ea\u8a18\u6cd5\u3092\u6b63\u898f\u8868\u73fe\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u306e\u3060\u3051\u3069\u3001\u6bce\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u691c\u7d22\u3092\u304b\u3051\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7684\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u306fOFF\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u307b\u3046\u304c\u3044\u3044\n\n\u88dc\u8db3\nVue\u306e\u4fbf\u5229\u306a\u3068\u3053\u308d\u306fComponent\u3068\u3044\u3046View\u3068VM\u3092\u51dd\u96c6\u5ea6\u9ad8\u304f\u8a18\u8ff0\u3067\u304d\u308b\u4ed5\u7d44\u307f\u306b\u3042\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u3002\u4e0a\u8a18\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\u3060\u3051\u3060\u3068component\u306f\u3042\u307e\u308a\u52b9\u679c\u7684\u306b\u52d5\u3044\u3066\u3044\u306a\u3044\u304c\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u3067\u8868\u793a\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e9\u30a4\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u3057\u3066\u8a73\u7d30\u8868\u793a\u3001\u3068\u3044\u3046\u98a8\u306b\u3001\u51e6\u7406\u3068View\u304c\u5bc6\u63a5\u306b\u95a2\u4fc2\u3059\u308b\u90e8\u5206\u304c\u3042\u308b\u3068Component\u304c\u5927\u6d3b\u8e8d\u3059\u308b\u3002\n\n## tl;dr\n\n* Vue.js\u3092\u4f7f\u3063\u3066\u5c0f\u8aac\u6295\u7a3f\u30b5\u30a4\u30c8\u306e\u30d5\u30a9\u30fc\u30e0\u3092\u4fbf\u5229\u306b\u3057\u305f\n* \u72ec\u81ea\u8a18\u6cd5\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\u3092\u4f5c\u3063\u305f\n\n## \u72ec\u81ea\u8a18\u6cd5\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\n\n![denkinovel_preview.gif](https://qiita-image-store.s3.amazonaws.com/0/5960/cf3c0b9e-6d5a-7582-12cd-baab20566356.gif \"denkinovel_preview.gif\")\n\n\u3053\u3046\u3044\u3046\u306e\u3002\n\n### \u4f5c\u308a\u65b9\n\n\u672c\u6587\u306etextarea\u306bv-model\u3092\u6307\u5b9a\u3057\u3066\u304a\u304d\u3001v-on\u306eclick\u3068keydown, keyup, keypress\u306b\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u3092\u66f4\u65b0\u3059\u308b\u30e1\u30bd\u30c3\u30c9\uff08\u672c\u4ef6\u3067\u306fupdatePreview\uff09\u3092\u6307\u5b9a\u3057\u3066\u304a\u304f\u3002\n\n\u306a\u304a\u672c\u4ef6\u3067\u306e\u72ec\u81ea\u8a18\u6cd5\u306f\u3001[bg red]\u3084[bg sky]\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092\u898b\u3064\u3051\u308b\u3068\u3001\u300c\u80cc\u666f\u8a18\u6cd5\u300d\u3060\u3068\u5224\u65ad\u3059\u308b\u3068\u3044\u3046\u30b7\u30f3\u30d7\u30eb\u306a\u3082\u306e\u3002\n\n\u307e\u305f\u30d7\u30ec\u30d3\u30e5\u30fc\u306f\u300c[bg red]\u306e\u3088\u3046\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u7528\u610f\u3057\u3066\u3042\u308b\u80cc\u666f\u753b\u50cf\u540d\u300d\u300c\u30e6\u30fc\u30b6\u30fc\u304c\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3057\u305f\u753b\u50cf\u300d\u300cURL\u3092\u76f4\u63a5\u6307\u5b9a\u3057\u305f\u753b\u50cf\u300d\u306e3\u7a2e\u985e\u306e\u753b\u50cf\u3092\u8868\u793a\u3067\u304d\u308b\u3002\u304c\u3001\u57fa\u672c\u7684\u306aVue\u3092\u4f7f\u3063\u3066\u306e\u4f5c\u308a\u306f\u540c\u3058\u3002\n\n\n### \u4f5c\u308a\u65b9\n\n\nHTML\uff08erb\u3060\u3051\u3069\uff09\u306e\u307b\u3046\u306b\u306f\n\n```\n    <%= f.text_area :body, rows:20, id:'js-storyForm__body', 'v-model' => 'body', 'v-on' => 'click: updatePreview, keydown: updatePreview, keyup: updatePreview, keypress: updatePreview' %>\n    \n```\n\n\u3068\u66f8\u3044\u3066\u304a\u3044\u3066\u3001JS\uff08CoffeeScript\u3060\u3051\u3069\uff09\u306e\u307b\u3046\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3002\n\n\n```javascript:form.js.coffee\nclass Storyblog.Vue.Stories.Form\n  createVue: ->\n    @vm = new Vue(\n      el: '#js-storyForm'\n      data:\n        currentTitle: ''\n        currentTableType: 'buttonAndCode'\n        currentTagType: ''\n        currentNotices: []\n        currentItems: []\n        body: ''\n        tags: []\n        preparedPictures: []\n        currentUserID: null\n        isActivePreview: false\n        isLoading: false\n        toggleActivatePreviewButtonText: '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092ON\u306b\u3059\u308b'\n        filenameURL: {}\n       \n      methods:\n        initialize: (e) ->\n          @currentTitle = @$data['basicInstruction'].title\n          @fillContent('basicInstruction')\n          @getCurrentUserID()\n\n        renderPreview: (e) ->\n          @changeInstruction(e)\n          @updatePreview(e)\n\n        updatePreview: (e) ->\n          return unless @isActivePreview\n          re = /\\[.*?\\]/g;\n          tags = @body.match(re)\n          tagArtRe = /\\[(\\S+?)\\s+(.+?)\\]/;\n          updatedTags = []\n          _.each(tags, (tag) ->\n            tagArgArray = tag.match(tagArtRe)\n            return unless tagArgArray\n            return if tagArgArray.length < 2\n            funcName = tagArgArray[1]\n            tagArg = tagArgArray[2]\n            isBG = false\n            if funcName == 'bg'\n              isBG = true\n            isImage = false\n            if funcName == 'image'\n              isImage = true\n            isTextColor = false\n            if funcName == 'text-color'\n              isTextColor = true\n            isFilter = false\n            if funcName == 'filter'\n              isFilter = true\n            updatedTags.push({ 'whole':tag, 'funcName': funcName, 'arg':tagArg, 'isBG': isBG, 'isImage': isImage, 'isTextColor': isTextColor, 'isFilter': isFilter ,'url': null})\n          )\n          @tags = updatedTags\n          @fetchFromPreparedPictures()\n          @updateImagesURLs()\n          @setImageURLToTags()\n\n        setImageURLToTags: ->\n          self = @\n          _.each(@tags, (tag) ->\n            if tag['isBG'] or tag['isImage']\n              url = self.filenameURL[tag['arg']]\n              if url\n                tag['url'] = url\n              else\n                tag['url'] = tag['arg']\n          )\n\n        updateImagesURLs: ->\n          self = @\n          _.each(@tags, (tag) ->\n            if tag['isBG'] or tag['isImage']\n              self.setImageURLWithPreparedPictures(tag['arg'])\n              self.fetchFromCurrentUserPicturesAndSetImageURLWithFilename(tag['arg'])\n          )\n\n        getCurrentUserID: ->\n          @currentUserID = parseInt($('#js-currentUserID').text())\n\n        fetchFromCurrentUserPicturesAndSetImageURLWithFilename: (filename) ->\n          self = @\n          return unless @currentUserID\n          return if self.filenameURL[filename]\n          $.ajax({\n              type: 'GET'\n              datatype: 'json'\n              url: \"../../users/#{self.currentUserID}/picture.json\",\n              data: {\n                filename: filename\n              }\n              success: (image_info) ->\n                unless image_info\n                  self.filenameURL[filename] = filename\n                else\n                  file_path = image_info['file_path']\n                  if file_path\n                    url = file_path['image']['thumb']['url']\n                    self.filenameURL[filename] = url\n              error: (data) ->\n                console.log data\n            }\n          )\n        setImageURLWithPreparedPictures: (filename) ->\n          self = @\n          return unless self.preparedPictures\n          url = self.preparedPictures[filename]\n          self.filenameURL[filename] = url if url\n\n        fetchFromPreparedPictures: () ->\n          self = @\n          return if self.preparedPictures.length > 0\n          $.ajax({\n              type: 'GET'\n              datatype: 'json'\n              url: \"../../prepared_pictures.json\",\n              success: (data) ->\n                self.preparedPictures = data.prepared_pictures\n              error: (data) ->\n                console.log data\n            }\n          )\n\n        toggleActivePreview: (e) ->\n          if @isActivePreview\n            @toggleActivatePreviewButtonText = '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092ON\u306b\u3059\u308b'\n            @isActivePreview = false\n          else\n            @toggleActivatePreviewButtonText = '\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u3092OFF\u306b\u3059\u308b'\n            @isActivePreview = true\n    )\n    @vm.initialize()\n\n\nVue.component('previewItem', {\n  template: '''\n<td><code>{{whole}}</code></td>\n<td>\n<img class=\"previewItem__image\" v-attr=\"src:url\" v-if=\"isBG\"/>\n<img class=\"previewItem__image\" v-attr=\"src:url\" v-if=\"isImage\"/>\n<span v-if=\"isTextColor\" v-style=\"color:arg\">\u6587\u5b57\u8272</span>\n<span v-if=\"isFilter\" v-style=\"background-color:arg\">\u30d5\u30a3\u30eb\u30bf\u30fc</span>\n</td>\n'''\n})\n\n```\n\n\u3061\u306a\u307f\u306b\u3001\u672c\u6587\u304b\u3089\u72ec\u81ea\u8a18\u6cd5\u3092\u6b63\u898f\u8868\u73fe\u3067\u53d6\u5f97\u3057\u3066\u3044\u308b\u306e\u3060\u3051\u3069\u3001\u6bce\u30a2\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306b\u691c\u7d22\u3092\u304b\u3051\u308b\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7684\u306b\u554f\u984c\u304c\u3042\u308b\u306e\u3067\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30d7\u30ec\u30d3\u30e5\u30fc\u306fOFF\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u307b\u3046\u304c\u3044\u3044\n\n## \u88dc\u8db3\n\nVue\u306e\u4fbf\u5229\u306a\u3068\u3053\u308d\u306fComponent\u3068\u3044\u3046View\u3068VM\u3092\u51dd\u96c6\u5ea6\u9ad8\u304f\u8a18\u8ff0\u3067\u304d\u308b\u4ed5\u7d44\u307f\u306b\u3042\u308b\u3068\u601d\u3063\u3066\u3044\u308b\u3002\u4e0a\u8a18\u306e\u30d7\u30ec\u30d3\u30e5\u30fc\u6a5f\u80fd\u3060\u3051\u3060\u3068component\u306f\u3042\u307e\u308a\u52b9\u679c\u7684\u306b\u52d5\u3044\u3066\u3044\u306a\u3044\u304c\u3001\u30d7\u30ec\u30d3\u30e5\u30fc\u3067\u8868\u793a\u3057\u305f\u30a2\u30a4\u30c6\u30e0\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30e9\u30a4\u30c8\u30dc\u30c3\u30af\u30b9\u306b\u3057\u3066\u8a73\u7d30\u8868\u793a\u3001\u3068\u3044\u3046\u98a8\u306b\u3001\u51e6\u7406\u3068View\u304c\u5bc6\u63a5\u306b\u95a2\u4fc2\u3059\u308b\u90e8\u5206\u304c\u3042\u308b\u3068Component\u304c\u5927\u6d3b\u8e8d\u3059\u308b\u3002\n", "tags": ["JavaScript", "vue.js"]}