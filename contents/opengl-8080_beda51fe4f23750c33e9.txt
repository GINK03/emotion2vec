{"tags": ["Java", "Eclipse", "gradle"], "context": " More than 1 year has passed since last update.\n\nPluggable Annotation Processing API \u3068\u306f\nJava 1.6 \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002\nLombok \u3068\u304b JPA \u306e Metamodel \u3068\u304b\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3057\u305f\u308a\u3067\u304d\u308b\u3002\nJava 1.5 \u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u540c\u69d8\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u51e6\u7406\u3059\u308b\u4ed5\u7d44\u307f\u3068\u3057\u3066 Annotation Processing Tool (apt) \u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3068\u306f\u5225\u7269\u3089\u3057\u3044\u3002\n\nHello World\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n\nMyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\nimport java.util.HashSet;\n\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    private int round = 1;\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment env) {\n        System.out.println(\"Round : \" + (this.round++));\n        annotations.forEach(System.out::println);\n        return true;\n    }\n\n    @Override\n    public Set<String> getSupportedAnnotationTypes() {\n        Set<String> supportedAnnotationTypes = new HashSet<>();\n        supportedAnnotationTypes.add(\"*\");\n\n        return supportedAnnotationTypes;\n    }\n\n    @Override\n    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.RELEASE_8;\n    }\n}\n\n\n\n\u51e6\u7406\u5bfe\u8c61\u306e\u30bd\u30fc\u30b9\u3092\u4f5c\u308b\n\nHoge.java\npublic class Hoge {\n    @Deprecated\n    public void deprecatedMethod() {}\n\n    @Override\n    public String toString() {\n        return \"hoge\";\n    }\n}\n\n\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n> javac MyAnnotationProcessor.java\n\n> dir /b\nMyAnnotationProcessor.class\nMyAnnotationProcessor.java\nHoge.java \n\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n> javac -processor MyAnnotationProcessor Hoge.java\nRound : 1\njava.lang.Deprecated\njava.lang.Override\nRound : 2\n\n> dir /b\nHoge.class\nHoge.java\nMyAnnotationProcessor.class\nMyAnnotationProcessor.java\n\n\n\u8aac\u660e\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u4f5c\u6210\n\nMyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\n\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u4f5c\u308b\u306b\u306f\u3001 Processor \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n\u6a19\u6e96\u3067 Processor \u3092\u5b9f\u88c5\u3057\u305f\u62bd\u8c61\u30af\u30e9\u30b9 AbstractProcessor \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u666e\u901a\u306f\u305d\u308c\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308b\u3002\n\n\n\u51e6\u7406\u5bfe\u8c61\u3092\u5b9a\u7fa9\u3059\u308b\n\nMyAnnotationProcessor.java\n    @Override\n    public Set<String> getSupportedAnnotationTypes() {\n        Set<String> supportedAnnotationTypes = new HashSet<>();\n        supportedAnnotationTypes.add(\"*\");\n\n        return supportedAnnotationTypes;\n    }\n\n    @Override\n    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.RELEASE_8;\n    }\n\n\n\n\ngetSupportedAnnotationTypes() \u3067\u3001\u51e6\u7406\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\n\u623b\u308a\u5024\u306e Set<String> \u3067\u306f\u3001\u51e6\u7406\u5bfe\u8c61\u3068\u306a\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n\u901a\u5e38\u306f\u3001 FQCN \u3092\u6307\u5b9a\u3059\u308b\u3002\n\n* \u3092\u4f7f\u3063\u305f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8868\u73fe\u3082\u53ef\u80fd\u3002\n\n* \u3060\u3051\u306e\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u5bfe\u8c61\u306b\u306a\u308b\u3002\n\n\n\ngetSupportedSourceVersion() \u306f\u3001\u30b5\u30dd\u30fc\u30c8\u9650\u754c\u3068\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\n\n\nSourceVersion \u5217\u6319\u578b\u3067\u6307\u5b9a\u3059\u308b\u3002\n\u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3088\u308a\u65b0\u3057\u3044 JDK \u3092\u4f7f\u3046\u3068\u3001\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\n\n\nSourceVersion.RELEASE_7\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u305f\u5834\u5408\u306e\u8b66\u544a\u30e1\u30bb\u30fc\u30b8\u4f8b\n\u8b66\u544a: \u6ce8\u91c8\u30d7\u30ed\u30bb\u30c3\u30b5'MyAnnotationProcessor'\u304b\u3089-source '1.8'\u3088\u308a\u5c0f\u3055\u3044\u30bd\u30fc\u30b9\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3'RELEASE_7'\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3059\u308b\n> javac -processor MyAnnotationProcessor Hoge.java\n\n\n\n-processor \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n\n\u30e9\u30a6\u30f3\u30c9\n\n\u5b9f\u884c\u7d50\u679c\nRound : 1\njava.lang.Deprecated\njava.lang.Override\nRound : 2\n\n\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306b\u3088\u308b\u51e6\u7406\uff08process\uff09\u306e\u547c\u3073\u51fa\u3057\u306f\u3001\u8907\u6570\u56de\u884c\u308f\u308c\u308b\u3002\n\u305d\u308c\u305e\u308c\u306e\u51e6\u7406\u3092 \u30e9\u30a6\u30f3\u30c9 \u3068\u547c\u3076\u3002\n\uff11\u56de\u306e\u30e9\u30a6\u30f3\u30c9\u306e\u51e6\u7406\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u65b0\u898f\u306b\u751f\u6210\u3057\u305f\u308a\u3059\u308b\u3068\u3001\u751f\u6210\u3055\u308c\u305f\u30bd\u30fc\u30b9\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u3001\u3082\u3046\u4e00\u5ea6\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u30bd\u30fc\u30b9\u306e\u751f\u6210\u306a\u3069\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u6700\u4f4e\uff12\u56de\u306f\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\n\u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u51e6\u7406\u5bfe\u8c61\u306e\u7d5e\u308a\u8fbc\u307f\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3059\u308b\n\nMyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\n\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes(\"*\")\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    private int round = 1;\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment env) {\n        System.out.println(\"Round : \" + (this.round++));\n        annotations.forEach(System.out::println);\n        return true;\n    }\n}\n\n\n\n\u30e1\u30bd\u30c3\u30c9\u306e\u5909\u308f\u308a\u306b\u3001 @SupportedSourceVersion \u3068 @SupportedAnnotationTypes \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\nMyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\n\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes(\"*\")\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> typeElements, RoundEnvironment env) {\n\n        for (TypeElement typeElement : typeElements) {\n\n            for (Element element : env.getElementsAnnotatedWith(typeElement)) {\n\n                Override override = element.getAnnotation(Override.class);\n\n                if (override != null) {\n                    System.out.println(\"@Override at \" + element);\n                }\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n> javac -processor MyAnnotationProcessor Hoge.java\n@Override at toString()\n\n\n\n\nRoundEnvironment#getElementsAnnotatedWith(TypeElement) \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5b9f\u969b\u306b\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u3092\u8868\u3059 Element \u306e Set \u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\nElement#getAnnotation(Class) \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5b9f\u969b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\n\n\u57fa\u672c\n\nMyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n\n        messager.printMessage(Kind.OTHER, \"Other\");\n        messager.printMessage(Kind.NOTE, \"Note\");\n        messager.printMessage(Kind.WARNING, \"Warning\");\n        messager.printMessage(Kind.MANDATORY_WARNING, \"Mandatory Warning\");\n        messager.printMessage(Kind.ERROR, \"Error\");\n\n        return true;\n    }\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n\u6ce8\u610f:Other\n\u6ce8\u610f:Note\n\u8b66\u544a: Warning\n\u8b66\u544a: Mandatory Warning\n\u30a8\u30e9\u30fc: Error\n\u6ce8\u610f:Other\n\u6ce8\u610f:Note\n\u8b66\u544a: Warning\n\u8b66\u544a: Mandatory Warning\n\u30a8\u30e9\u30fc: Error\n\u30a8\u30e9\u30fc2\u500b\n\u8b66\u544a4\u500b\n\n\n\n\u203b\uff12\u56de\u305a\u3064\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u30e9\u30a6\u30f3\u30c9\u304c\uff12\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3002\n\nAbstractProcessor \u30af\u30e9\u30b9\u304c\u6301\u3064 processingEnv \u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304b\u3089\u3001 getMessager() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066 Messager \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nMessager#printMessage() \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\u304c\u3067\u304d\u308b\u3002\n\u7b2c\u4e00\u5f15\u6570\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\uff08Diagnostic.Kind\uff09\u3002\n\u7b2c\u4e8c\u5f15\u6570\u306b\u51fa\u529b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6e21\u3059\u3002\n\u7a2e\u985e\u3092 Kind.ERROR \u306b\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n\n\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\n\nMyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                messager.printMessage(Kind.NOTE, \"hogehoge\", element);\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\nHoge.java:5: \u6ce8\u610f:hogehoge\n    public String toString() {\n                  ^\n\n\n\n\nMessager#printMessage() \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e09\u5f15\u6570\u306b Element \u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u8981\u7d20\u306e\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u4e00\u7dd2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\n\nMyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.AnnotationMirror;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                AnnotationMirror override = element.getAnnotationMirrors().get(0);\n                messager.printMessage(Kind.NOTE, \"hogehoge\", element, override);\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\nHoge.java:4: \u6ce8\u610f:hogehoge\n    @Override\n    ^\n\n\n\n\nMessager#printMessage() \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u56db\u5f15\u6570\u306b AnnotationMirror \u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u4e00\u7dd2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\u7b2c\u4e94\u5f15\u6570\u306b AnnotationValue \u3092\u6e21\u305b\u3070\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u306e\u4f4d\u7f6e\u60c5\u5831\u3082\u51fa\u529b\u3067\u304d\u305d\u3046\uff08\u8a66\u3057\u3066\u306a\u3044\uff09\u3002\n\n\n\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u8981\u7d20\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n\nMyAnnotation.java\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Target;\n\n@Target({\n    ElementType.TYPE, ElementType.METHOD, ElementType.LOCAL_VARIABLE,\n    ElementType.FIELD, ElementType.PARAMETER, ElementType.TYPE_PARAMETER\n})\npublic @interface MyAnnotation {\n\n    String value();\n}\n\n\n\nMyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"MyAnnotation\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                MyAnnotation anno = element.getAnnotation(MyAnnotation.class);\n\n                String msg =\n                    \"<<@MyAnnotation(\\\"\" + anno.value() + \"\\\")>>\\n\"\n                  + \"  Kind : \" + element.getKind() + \"\\n\"\n                  + \"  SimpleName : \" + element.getSimpleName() + \"\\n\"\n                  + \"  Modifiers : \" + element.getModifiers() + \"\\n\"\n                  + \"  asType : \" + element.asType() + \"\\n\"\n                  + \"  EnclosedElements : \" + element.getEnclosedElements() + \"\\n\"\n                  + \"  EnclosingElement : \" + element.getEnclosingElement() + \"\\n\"\n                  + \"  AnnotationMirrors : \" + element.getAnnotationMirrors() + \"\\n\"\n                  ;\n\n                System.out.println(msg);\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\nHoge.java\n@MyAnnotation(\"\u30af\u30e9\u30b9\")\npublic class Hoge<@MyAnnotation(\"\u578b\u5f15\u6570\") T> {\n\n    @MyAnnotation(\"\u30d5\u30a3\u30fc\u30eb\u30c9\")\n    private double d;\n\n    @MyAnnotation(\"\u30e1\u30bd\u30c3\u30c9\")\n    public void method(@MyAnnotation(\"\u5f15\u6570\") int i) {\n        @MyAnnotation(\"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\")\n        String str;\n    }\n}\n\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n<<@MyAnnotation(\"\u30af\u30e9\u30b9\")>>\n  Kind : CLASS\n  SimpleName : Hoge\n  Modifiers : [public]\n  asType : Hoge<T>\n  EnclosedElements : Hoge(),d,method(int)\n  EnclosingElement : \u540d\u524d\u306e\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\n  AnnotationMirrors : @MyAnnotation(\"\\u30af\\u30e9\\u30b9\")\n\n<<@MyAnnotation(\"\u578b\u5f15\u6570\")>>\n  Kind : TYPE_PARAMETER\n  SimpleName : T\n  Modifiers : []\n  asType : T\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u578b\\u5f15\\u6570\")\n\n<<@MyAnnotation(\"\u30d5\u30a3\u30fc\u30eb\u30c9\")>>\n  Kind : FIELD\n  SimpleName : d\n  Modifiers : [private]\n  asType : double\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u30d5\\u30a3\\u30fc\\u30eb\\u30c9\")\n\n<<@MyAnnotation(\"\u30e1\u30bd\u30c3\u30c9\")>>\n  Kind : METHOD\n  SimpleName : method\n  Modifiers : [public]\n  asType : (int)void\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u30e1\\u30bd\\u30c3\\u30c9\")\n\n<<@MyAnnotation(\"\u5f15\u6570\")>>\n  Kind : PARAMETER\n  SimpleName : i\n  Modifiers : []\n  asType : int\n  EnclosedElements :\n  EnclosingElement : method(int)\n  AnnotationMirrors : @MyAnnotation(\"\\u5f15\\u6570\")\n\n\n\n\nElement \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u3001\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u8981\u7d20\u306e\u60c5\u5831\u3092\u3044\u308d\u3044\u308d\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n\njar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3057\u3066 -processor \u30aa\u30d7\u30b7\u30e7\u30f3\u7121\u3057\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\n\u6bce\u56de javac \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 -processor \u3092\u6307\u5b9a\u3059\u308b\u306e\u306f\u75b2\u308c\u308b\u3002\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6240\u5b9a\u306e\u65b9\u6cd5\u3067 jar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b jar \u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u51e6\u7406\u3092\u631f\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u542b\u3080 jar \u3092\u4f5c\u6210\u3059\u308b\n\nMyOverrideProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyOverrideProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        System.out.println(\"Override!!\");\n        return true;\n    }\n}\n\n\n@Override \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3002\n\u3053\u308c\u3092\u3001\u4ee5\u4e0b\u306e\u69cb\u6210\u306b\u306a\u308b\u3088\u3046\u306b jar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3059\u308b\u3002\n|-sample/processor/\n|  `-MyOverrideProcessor.class\n`-META-INF/services/\n   `-javax.annotation.processing.Processor\n\n\u3053\u306e META-INF/services/javax.annotation.processing.Processor \u306f\u305f\u3060\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e FQCN \u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3002\n\njavax.annotation.processing.Processor\nsample.processor.MyOverrideProcessor\n\n\n\u3053\u306e jar \u3092\u4eee\u306b processor.jar \u3068\u3059\u308b\u3002\n\n\u5b9f\u884c\u3059\u308b\n\nHoge.java\npublic class Hoge {\n    @Override\n    public String toString() {\n        return super.toString();\n    }\n}\n\n\n> javac -cp processor.jar Hoge.java\nOverride!!\nOverride!!\n\n\n\u8aac\u660e\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u542b\u3080 jar \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306b\u3001 META-INF/services/javax.annotation.processing.Processor \u3068\u3044\u3046\u5f62\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3059\u308b\u3002\n\njavax.annotation.processing.Processor \u306e\u4e2d\u306b\u306f\u3001\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e FQCN \u3092\u8a18\u8ff0\u3059\u308b\u3002\n\u3053\u306e jar \u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u542b\u3081\u305f\u72b6\u614b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 javax.annotation.processing.Processor \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5229\u7528\u3055\u308c\u308b\u3002\n\njavax.annotation.processing.Processor \u306b\u306f\u3001\u6539\u884c\u533a\u5207\u308a\u3067\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3053\u306e META-INF/services \u306e\u4e0b\u306b\u4f7f\u7528\u3059\u308b\u30af\u30e9\u30b9\u306e\u60c5\u5831\u3092\u914d\u7f6e\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u306f\u3001 Java \u306e ServiceLoader \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u305f\u3082\u306e\u3068\u601d\u308f\u308c\u308b\u3002\n\n\nEclipse \u3067\u5229\u7528\u3059\u308b\n\n\u57fa\u672c\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\n\nMyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        messager.printMessage(Kind.NOTE, \"Hello Annotation Processor!!\");\n\n        return true;\n    }\n}\n\n\n\njavax.annotation.processing.Processor\nsample.processor.MyAnnotationProcessor\n\n\n\n\u666e\u901a\u306b java \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\nServiceLoader \u3092\u5229\u7528\u3057\u305f\u5f62\u5f0f\u306b\u3059\u308b\uff08javax.annotation.processing.Processor\uff09\u3002\n\n\njar \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30a8\u30af\u30b9\u30dd\u30fc\u30c8] \u3092\u9078\u629e\u3059\u308b\u3002\n[Java] > [JAR \u30d5\u30a1\u30a4\u30eb] \u3092\u9078\u629e\u3057\u3001 [\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3002\n\u4efb\u610f\u306e\u5834\u6240\u306b jar \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002\n\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\n\nHoge.java\npublic class Hoge {\n\n    @Override\n    public String toString() {\n        return super.toString();\n    }\n}\n\n\n\n\u666e\u901a\u306b java \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n\n\u6ce8\u91c8\u51e6\u7406\u3092\u6709\u52b9\u306b\u3059\u308b\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc] \u3092\u9078\u629e\u3002\n[Java \u30b3\u30f3\u30d1\u30a4\u30e9\u30fc] > [\u6ce8\u91c8\u51e6\u7406] \u3092\u9078\u629e\u3002\n[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u53ef\u80fd\u306b\u3059\u308b] \u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\u7d9a\u3044\u3066\u3001 [\u6ce8\u91c8\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b] \u3068 [\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u306e\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b] \u306e\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\n\n\n\u3055\u3089\u306b\u3001 [\u6ce8\u91c8\u51e6\u7406] > [\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30fb\u30d1\u30b9] \u3092\u9078\u629e\u3059\u308b\u3002\n[\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u53ef\u80fd\u306b\u3059\u308b] \u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n[\u5916\u90e8 Jar \u8ffd\u52a0] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u5148\u307b\u3069\u751f\u6210\u3057\u305f MyAnnotationProcessor \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e jar \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3002\n\n\n\u3053\u308c\u3067\u3001\u6ce8\u91c8\u51e6\u7406\u304c\u6709\u52b9\u306b\u306a\u308b\u3002\n\n\u51fa\u529b\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n\n[\u30a6\u30a3\u30f3\u30c9\u30a6] > [\u30d3\u30e5\u30fc\u306e\u8868\u793a] > [\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0] \u3092\u9078\u629e\u3057\u3001\u300c\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n\n\n\u3046\u307e\u304f\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3068\u3001 Messager \u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3002\nEclipse \u3067\u52d5\u304b\u3059\u5834\u5408\u3001\u6a19\u6e96\u51fa\u529b\uff08System.out\uff09\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u306f\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001 Messager \u3067\u51fa\u529b\u3057\u3066\u300c\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u78ba\u8a8d\u3059\u308b\u3002\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306f\u3001 jar \u3092\u51fa\u529b\u3057\u306a\u304a\u3057\u305f\u4e0a\u3067\u5229\u7528\u5074\u306e\u300c\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30fb\u30d1\u30b9\u300d\u306e\u8a2d\u5b9a\u3092\u3057\u76f4\u3059\uff08\u4e00\u56de\u5916\u3057\u3066\u3001\u518d\u5ea6\u8a2d\u5b9a\u3057\u76f4\u3059\uff09\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\n\u8b66\u544a\u3084\u30a8\u30e9\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u306b\u8868\u793a\u3055\u308c\u308b\n\nMyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                messager.printMessage(Kind.ERROR, \"\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u305b\u306c\uff01\", element);\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\u5229\u7528\u5074\u306e\u69d8\u5b50\n\n\u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u3067\u30a8\u30e9\u30fc\u8868\u793a\u3055\u308c\u3066\u308b\uff01\n\nGradle \u3067\u4f7f\u7528\u3059\u308b\n\n\u57fa\u672c\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|-settings.gradle\n|-build.gradle\n|-processor/\n|  `-src/main/\n|     |-java/sample/processor/\n|     |  `-MyAnnotationProcessor.java\n|     `-resources/META-INF/services/\n|        `-javax.annotation.processing.Processor\n|\n`-client/\n   |-build.gradle\n   `-src/main/java/sample/processor/\n      `-Hoge.java\n\n\n\n\u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u3002\n\nprocessor \u3068 client \u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u3002\n\n\n\nprocessor \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u3002\n\nclient \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001 processor \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u3002\n\n\n\n\n\u5b9f\u88c5\u7b49\n\nsettings.gradle\ninclude 'processor', 'client'\n\n\n\nbuild.gradle\nsubprojects {\n    apply plugin: 'java'\n}\n\n\n\nclient/build.gradle\ndependencies {\n    compile project(':processor')\n}\n\n\n\nMyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        System.out.println(\"Hello!!\");\n        return true;\n    }\n}\n\n\n\nHoge.java\npackage sample.processor;\n\npublic class Hoge {\n    @Override\n    public String toString() {\n        return \"hoge\";\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n> gradle compileJava\n:processor:compileJava\n:processor:processResources\n:processor:classes\n:processor:jar\n:client:compileJava\nHello!!\nHello!!\n\nBUILD SUCCESSFUL\n\nTotal time: 3.423 secs\n\n\nServiceLoader \u3092\u4f7f\u3046\u5f62\u5f0f\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u666e\u901a\u306b\u5229\u7528\u3067\u304d\u305f\u3002\n\n\nEclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5316\n\nGradle \u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u308a\u307e\u3057\u305f\n2016/01/08 \u8ffd\u8a18\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b Gradle \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\nGradle - Plugin: com.github.opengl-BOBO.annotation-processing-eclipse\n\u8aac\u660e | GitHub\n\n\ngradle eclipse \u3057\u305f\u3089\u3001\u81ea\u52d5\u3067\u6ce8\u91c8\u51e6\u7406\u306e\u8a2d\u5b9a\u304c\u6709\u52b9\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\n\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|-build.gradle\n|-lib/\n|  `-processor.jar\n`-src/main/java/sample/processor/\n   `-Hoge.java\n\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3057\u305f jar \u30d5\u30a1\u30a4\u30eb\u306f\u3001 lib \u30d5\u30a9\u30eb\u30c0\u306e\u4e0b\u306e\u914d\u7f6e\u3057\u3066\u304a\u304f\u3002\n\nbuild.gradle\n\nclient/build.gradle\napply plugin: 'java'\napply plugin: 'eclipse'\n\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    eclipseFactoryPathFile = '.factorypath'\n    processorJarPath = 'lib/processor.jar'\n}\n\ndependencies {\n    compile files(processorJarPath)\n}\n\neclipse {\n    project.name = 'MyAnnotationProcessorClient'\n\n    classpath.file.withXml {\n        it.asNode().appendNode('classpathentry', [kind: 'src', path: '.apt_generated'])\n    }\n\n    jdt.file.withProperties { properties ->\n        properties.put 'org.eclipse.jdt.core.compiler.processAnnotations', 'enabled'\n    }\n}\n\neclipseJdt << {\n    file(eclipseAptPrefsFile).write \"\"\"\\\n        |eclipse.preferences.version=1\n        |org.eclipse.jdt.apt.aptEnabled=true\n        |org.eclipse.jdt.apt.genSrcDir=.apt_generated\n        |org.eclipse.jdt.apt.reconcileEnabled=true\n        |\"\"\".stripMargin()\n\n    file(eclipseFactoryPathFile).write \"\"\"\\\n        |<factorypath>\n        |    <factorypathentry kind=\"PLUGIN\" id=\"org.eclipse.jst.ws.annotations.core\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |    <factorypathentry kind=\"EXTJAR\" id=\"${file(processorJarPath).absolutePath}\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |</factorypath>\n        |\"\"\".stripMargin()\n}\n\ncleanEclipse << {\n    file(eclipseAptPrefsFile).delete()\n    file(eclipseFactoryPathFile).delete()\n}\n\n\n\n\u8aac\u660e\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3001 eclipse \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u3089\u6ce8\u91c8\u51e6\u7406\u3092\u6709\u52b9\u5316\u3059\u308b\u306e\u306b\u5fc5\u8981\u3068\u306a\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3002\norg.eclipse.jdt.apt.core.prefs \u306e\u4f5c\u6210\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    ...\n}\n\n...\n\neclipseJdt << {\n    file(eclipseAptPrefsFile).write \"\"\"\\\n        |eclipse.preferences.version=1\n        |org.eclipse.jdt.apt.aptEnabled=true\n        |org.eclipse.jdt.apt.genSrcDir=.apt_generated\n        |org.eclipse.jdt.apt.reconcileEnabled=true\n        |\"\"\".stripMargin()\n\n...\n\n.factorypath \u306e\u4f5c\u6210\next {\n    eclipseFactoryPathFile = '.factorypath'\n    ...\n}\n\n...\n\neclipseJdt << {\n    ...\n\n    file(eclipseFactoryPathFile).write \"\"\"\\\n        |<factorypath>\n        |    <factorypathentry kind=\"PLUGIN\" id=\"org.eclipse.jst.ws.annotations.core\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |    <factorypathentry kind=\"EXTJAR\" id=\"${file(processorJarPath).absolutePath}\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |</factorypath>\n        |\"\"\".stripMargin()\n}\n\n.classpath \u306e\u7de8\u96c6\neclipse {\n    ...\n\n    classpath.file.withXml {\n        it.asNode().appendNode('classpathentry', [kind: 'src', path: '.apt_generated'])\n    }\n\n    ...\n}\n\norg.eclipse.jdt.core.prefs \u306e\u7de8\u96c6\neclipse {\n    ...\n\n    jdt.file.withProperties { properties ->\n        properties.put 'org.eclipse.jdt.core.compiler.processAnnotations', 'enabled'\n    }\n}\n\ncleanEclipse \u306b\u524a\u9664\u5bfe\u8c61\u3092\u8ffd\u52a0\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    eclipseFactoryPathFile = '.factorypath'\n    ...\n}\n\n...\n\ncleanEclipse << {\n    file(eclipseAptPrefsFile).delete()\n    file(eclipseFactoryPathFile).delete()\n}\n\n\nJava \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u51e6\u7406\u306e\u4e2d\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u307f\u308b\u3002\n\n\u5b9f\u88c5\n\nMyAnnotation.java\npackage sample.processor;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Target;\n\n@Target(ElementType.TYPE)\npublic @interface MyAnnotation {\n    boolean value() default false;\n}\n\n\n\nHoge.java\npackage sample.processor;\n\n@MyAnnotation(true)\npublic class Hoge {\n}\n\n\n\nMyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Filer;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\nimport javax.tools.JavaFileObject;\n\n@SupportedAnnotationTypes(\"sample.processor.MyAnnotation\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        if (annotations.size() == 0) {\n            return true;\n        }\n\n        Messager messager = super.processingEnv.getMessager();\n\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                MyAnnotation anno = element.getAnnotation(MyAnnotation.class);\n\n                messager.printMessage(Kind.NOTE, element.getSimpleName() + \" class is annotated by @MyAnnotation.\");\n\n                if (!anno.value()) {\n                    messager.printMessage(Kind.NOTE, \"@MyAnnotation value is false. no generate.\");\n                    break;\n                }\n\n                String src =\n                    \"package sample.processor.generated;\\r\\n\"\n                  + \"import sample.processor.MyAnnotation;\\r\\n\"\n                  + \"@MyAnnotation\\r\\n\"\n                  + \"public class Fuga {\\r\\n\"\n                  + \"    public void hello() {\\r\\n\"\n                  + \"        System.out.println(\\\"Hello World!!\\\");\\r\\n\"\n                  + \"    }\\r\\n\"\n                  + \"}\\r\\n\"\n                  ;\n\n                try {\n                    Filer filer = super.processingEnv.getFiler();\n                    JavaFileObject javaFile = filer.createSourceFile(\"Fuga\");\n\n                    try (Writer writer = javaFile.openWriter()) {\n                        writer.write(src);\n                    }\n\n                    messager.printMessage(Kind.NOTE, \"generate source code!!\");\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n\n        return true;\n    }\n}\n\n\n\n\u52d5\u4f5c\u78ba\u8a8d\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n\u6ce8\u610f:Hoge class is annotated by @MyAnnotation.\n\u6ce8\u610f:generate source code!!\n\u6ce8\u610f:Fuga class is annotated by @MyAnnotation.\n\u6ce8\u610f:@MyAnnotation value is false. no generate.\n\n\n\n\u81ea\u52d5\u751f\u6210\u3055\u308c\u305fFuga\u30af\u30e9\u30b9\npackage sample.processor.generated;\nimport sample.processor.MyAnnotation;\n@MyAnnotation\npublic class Fuga {\n    public void hello() {\n        System.out.println(\"Hello World!!\");\n    }\n}\n\n\n\n\nFuga.java \u306f\u3001 .class \u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30eb\u30fc\u30c8\u306b\u51fa\u529b\u3055\u308c\u305f\u3002\n\nFuga.class \u306f\u3001\u540c\u3058\u304f .class \u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b\u5148\u306e\u4e2d\u306b\u3001 package \u5ba3\u8a00\u3067\u5b9a\u7fa9\u3057\u305f\u901a\u308a\u306e\u5834\u6240\u306b\u51fa\u529b\u3055\u308c\u305f\u3002\n\n\n\u51fa\u529b\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u69d8\u5b50\n|-Fuga.java\n`-sample/processor/\n   |-Hoge.class\n   `-generated/\n      `-Fuga.class\n\n\n\n\u8aac\u660e\n\nMyAnnotationProcessor.java\uff08\u4e00\u90e8\uff09\ntry {\n    Filer filer = super.processingEnv.getFiler();\n    JavaFileObject javaFile = filer.createSourceFile(\"Fuga\");\n\n    try (Writer writer = javaFile.openWriter()) {\n        writer.write(src);\n    }\n\n    messager.printMessage(Kind.NOTE, \"generate source code!!\");\n} catch (IOException e) {\n    e.printStackTrace();\n}\n\n\n\nJava \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u6b21\u306e\u65b9\u6cd5\u3067 JavaFileObject \u3092\u53d6\u5f97\u3059\u308b\u3002\n\n\n\nAbstractProcessor#processingEnv \u306e getFiler() \u30e1\u30bd\u30c3\u30c9\u3067 Filer \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nFiler#createSourceFile(String) \u30e1\u30bd\u30c3\u30c9\u3067\u3001 JavaFileObject \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\uff08\u5f15\u6570\u306f\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9\u306e\u540d\u524d\uff09\u3002\n\n\n\nJavaFileObject \u3092\u53d6\u5f97\u3057\u305f\u3089\u3001 openWriter() \u3084 openOutputStream() \u3092\u4f7f\u3063\u3066\u30e9\u30a4\u30bf\u30fc\u3084\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d6\u5f97\u3057\u3001\u305d\u3053\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u51fa\u3059\u3002\n\u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u52d5\u7684\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\n\u751f\u6210\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u6b21\u306e\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\u518d\u3073\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e process() \u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\u540c\u3058\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8907\u6570\u56de\u51fa\u529b\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n\n\u3053\u306e\u305f\u3081\u3001\u51e6\u7406\u3059\u3079\u304d\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u7121\u304f\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3001\u306a\u3051\u308c\u3070\u3059\u3050\u306b\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u3066\u3044\u308b\uff08\u5224\u5b9a\u306b\u306f\u3001 process() \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306e\u30b5\u30a4\u30ba\u3092\u5229\u7528\u3059\u308b\uff09\u3002\n\n\n\n\n\u51e6\u7406\u3059\u3079\u304d\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u7121\u3051\u308c\u3070\u3001\u3059\u3050\u306b\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u3066\u3044\u308b\u3068\u3053\u308d\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        if (annotations.size() == 0) {\n            return true;\n        }\n\n\n\n\u53c2\u8003\n\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c94\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e1\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c95\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e2\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c96\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e3\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c97\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e4\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c98\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e5\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c99\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e6\uff1aITpro\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c100\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e7\uff1aITpro\n\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092Eclipse\u3067\u52d5\u304b\u3059\u307e\u3067\u306b\u8c6a\u83ef\u30e1\u30f3\u30d0\u30fc\u306b\u30b5\u30dd\u30fc\u30c8\u3092\u53d7\u3051\u308b\u306a\u3069 - Togetter\u307e\u3068\u3081\neclipse\u3067\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u305f\u3081\u306e\u30e1\u30e2: mitsuruog\u306e\u65e5\u8a18\njavax.annotation.processing (Java Platform SE 8 )\nJava\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c11\u56de\u3000\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ed\u30fc\u30c9\u3092\u884c\u3046ServiceLoader\uff1aITpro\nvvakame / build.gradle | GitHub Gist\n\u7b2c38\u7ae0 Eclipse \u30d7\u30e9\u30b0\u30a4\u30f3\nNode (Groovy 2.4.3)\nGradle\u3067Eclipse\u306e\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b - @ikikko \u306e\u306f\u3066\u306a\u30d6\u30ed\u30b0\n\n#Pluggable Annotation Processing API \u3068\u306f\nJava 1.6 \u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3002\n\nLombok \u3068\u304b JPA \u306e Metamodel \u3068\u304b\u3067\u5229\u7528\u3055\u308c\u3066\u3044\u308b\u3002\n\u3064\u307e\u308a\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3057\u305f\u308a\u3067\u304d\u308b\u3002\n\nJava 1.5 \u3067\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3068\u304d\u306b\u3001\u540c\u69d8\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u51e6\u7406\u3059\u308b\u4ed5\u7d44\u307f\u3068\u3057\u3066 Annotation Processing Tool (apt) \u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u305f\u304c\u3001\u3053\u308c\u3068\u306f\u5225\u7269\u3089\u3057\u3044\u3002\n\n#Hello World\n##\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5b9f\u88c5\u3059\u308b\n```java:MyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\nimport java.util.HashSet;\n\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    private int round = 1;\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment env) {\n        System.out.println(\"Round : \" + (this.round++));\n        annotations.forEach(System.out::println);\n        return true;\n    }\n\n    @Override\n    public Set<String> getSupportedAnnotationTypes() {\n        Set<String> supportedAnnotationTypes = new HashSet<>();\n        supportedAnnotationTypes.add(\"*\");\n\n        return supportedAnnotationTypes;\n    }\n\n    @Override\n    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.RELEASE_8;\n    }\n}\n```\n\n##\u51e6\u7406\u5bfe\u8c61\u306e\u30bd\u30fc\u30b9\u3092\u4f5c\u308b\n```java:Hoge.java\npublic class Hoge {\n    @Deprecated\n    public void deprecatedMethod() {}\n\n    @Override\n    public String toString() {\n        return \"hoge\";\n    }\n}\n```\n\n##\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n```bat:\n> javac MyAnnotationProcessor.java\n\n> dir /b\nMyAnnotationProcessor.class\nMyAnnotationProcessor.java\nHoge.java \n```\n\n##\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3057\u3066\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\n```bat:\n> javac -processor MyAnnotationProcessor Hoge.java\nRound : 1\njava.lang.Deprecated\njava.lang.Override\nRound : 2\n\n> dir /b\nHoge.class\nHoge.java\nMyAnnotationProcessor.class\nMyAnnotationProcessor.java\n```\n\n##\u8aac\u660e\n###\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u4f5c\u6210\n```java:MyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\n\npublic class MyAnnotationProcessor extends AbstractProcessor {\n```\n\n- \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u4f5c\u308b\u306b\u306f\u3001 [Processor][1] \u3092\u5b9f\u88c5\u3057\u305f\u30af\u30e9\u30b9\u3092\u7528\u610f\u3059\u308b\u3002\n- \u6a19\u6e96\u3067 `Processor` \u3092\u5b9f\u88c5\u3057\u305f\u62bd\u8c61\u30af\u30e9\u30b9 [AbstractProcessor][2] \u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u666e\u901a\u306f\u305d\u308c\u3092\u7d99\u627f\u3057\u3066\u4f5c\u308b\u3002\n\n###\u51e6\u7406\u5bfe\u8c61\u3092\u5b9a\u7fa9\u3059\u308b\n```java:MyAnnotationProcessor.java\n    @Override\n    public Set<String> getSupportedAnnotationTypes() {\n        Set<String> supportedAnnotationTypes = new HashSet<>();\n        supportedAnnotationTypes.add(\"*\");\n\n        return supportedAnnotationTypes;\n    }\n\n    @Override\n    public SourceVersion getSupportedSourceVersion() {\n        return SourceVersion.RELEASE_8;\n    }\n```\n\n- `getSupportedAnnotationTypes()` \u3067\u3001\u51e6\u7406\u3059\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n    - \u623b\u308a\u5024\u306e `Set<String>` \u3067\u306f\u3001\u51e6\u7406\u5bfe\u8c61\u3068\u306a\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u8fd4\u3059\u3088\u3046\u306b\u3059\u308b\u3002\n    - \u901a\u5e38\u306f\u3001 FQCN \u3092\u6307\u5b9a\u3059\u308b\u3002\n    - `*` \u3092\u4f7f\u3063\u305f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u8868\u73fe\u3082\u53ef\u80fd\u3002\n    - `*` \u3060\u3051\u306e\u5834\u5408\u306f\u3001\u5168\u3066\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u51e6\u7406\u5bfe\u8c61\u306b\u306a\u308b\u3002\n- `getSupportedSourceVersion()` \u306f\u3001\u30b5\u30dd\u30fc\u30c8\u9650\u754c\u3068\u306a\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n    - [SourceVersion][3] \u5217\u6319\u578b\u3067\u6307\u5b9a\u3059\u308b\u3002\n    - \u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3088\u308a\u65b0\u3057\u3044 JDK \u3092\u4f7f\u3046\u3068\u3001\u8b66\u544a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n```text:SourceVersion.RELEASE_7\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u305f\u5834\u5408\u306e\u8b66\u544a\u30e1\u30bb\u30fc\u30b8\u4f8b\n\u8b66\u544a: \u6ce8\u91c8\u30d7\u30ed\u30bb\u30c3\u30b5'MyAnnotationProcessor'\u304b\u3089-source '1.8'\u3088\u308a\u5c0f\u3055\u3044\u30bd\u30fc\u30b9\u30fb\u30d0\u30fc\u30b8\u30e7\u30f3'RELEASE_7'\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u307e\u3059\n```\n\n###\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3059\u308b\n```bat:\n> javac -processor MyAnnotationProcessor Hoge.java\n```\n\n- `-processor` \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3001\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3002\n\n###\u30e9\u30a6\u30f3\u30c9\n```text:\u5b9f\u884c\u7d50\u679c\nRound : 1\njava.lang.Deprecated\njava.lang.Override\nRound : 2\n```\n\n- \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306b\u3088\u308b\u51e6\u7406\uff08`process`\uff09\u306e\u547c\u3073\u51fa\u3057\u306f\u3001\u8907\u6570\u56de\u884c\u308f\u308c\u308b\u3002\n- \u305d\u308c\u305e\u308c\u306e\u51e6\u7406\u3092 **\u30e9\u30a6\u30f3\u30c9** \u3068\u547c\u3076\u3002\n- \uff11\u56de\u306e\u30e9\u30a6\u30f3\u30c9\u306e\u51e6\u7406\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u65b0\u898f\u306b\u751f\u6210\u3057\u305f\u308a\u3059\u308b\u3068\u3001\u751f\u6210\u3055\u308c\u305f\u30bd\u30fc\u30b9\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u305f\u3081\u3001\u3082\u3046\u4e00\u5ea6\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n- \u30bd\u30fc\u30b9\u306e\u751f\u6210\u306a\u3069\u3092\u3057\u306a\u304f\u3066\u3082\u3001\u6700\u4f4e\uff12\u56de\u306f\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n\n\n#\u30b5\u30dd\u30fc\u30c8\u30d0\u30fc\u30b8\u30e7\u30f3\u3068\u51e6\u7406\u5bfe\u8c61\u306e\u7d5e\u308a\u8fbc\u307f\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3059\u308b\n```java:MyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\n\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes(\"*\")\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    private int round = 1;\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment env) {\n        System.out.println(\"Round : \" + (this.round++));\n        annotations.forEach(System.out::println);\n        return true;\n    }\n}\n```\n\n- \u30e1\u30bd\u30c3\u30c9\u306e\u5909\u308f\u308a\u306b\u3001 `@SupportedSourceVersion` \u3068 `@SupportedAnnotationTypes` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n#\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n```java:MyAnnotationProcessor.java\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\n\nimport javax.lang.model.element.TypeElement;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.SourceVersion;\n\nimport java.util.Set;\n\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\n@SupportedAnnotationTypes(\"*\")\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> typeElements, RoundEnvironment env) {\n\n        for (TypeElement typeElement : typeElements) {\n\n            for (Element element : env.getElementsAnnotatedWith(typeElement)) {\n\n                Override override = element.getAnnotation(Override.class);\n\n                if (override != null) {\n                    System.out.println(\"@Override at \" + element);\n                }\n            }\n        }\n\n        return true;\n    }\n}\n```\n\n```bat:\u52d5\u4f5c\u78ba\u8a8d\n> javac -processor MyAnnotationProcessor Hoge.java\n@Override at toString()\n```\n\n- `RoundEnvironment#getElementsAnnotatedWith(TypeElement)` \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5b9f\u969b\u306b\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u5834\u6240\u3092\u8868\u3059 `Element` \u306e `Set` \u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n- `Element#getAnnotation(Class)` \u30e1\u30bd\u30c3\u30c9\u3067\u3001\u5b9f\u969b\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n#\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\n##\u57fa\u672c\n```java:MyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        \n        messager.printMessage(Kind.OTHER, \"Other\");\n        messager.printMessage(Kind.NOTE, \"Note\");\n        messager.printMessage(Kind.WARNING, \"Warning\");\n        messager.printMessage(Kind.MANDATORY_WARNING, \"Mandatory Warning\");\n        messager.printMessage(Kind.ERROR, \"Error\");\n        \n        return true;\n    }\n}\n```\n\n```text:\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n\u6ce8\u610f:Other\n\u6ce8\u610f:Note\n\u8b66\u544a: Warning\n\u8b66\u544a: Mandatory Warning\n\u30a8\u30e9\u30fc: Error\n\u6ce8\u610f:Other\n\u6ce8\u610f:Note\n\u8b66\u544a: Warning\n\u8b66\u544a: Mandatory Warning\n\u30a8\u30e9\u30fc: Error\n\u30a8\u30e9\u30fc2\u500b\n\u8b66\u544a4\u500b\n```\n\n- \u203b\uff12\u56de\u305a\u3064\u51fa\u529b\u3055\u308c\u3066\u3044\u308b\u306e\u306f\u3001\u30e9\u30a6\u30f3\u30c9\u304c\uff12\u56de\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3002\n- `AbstractProcessor` \u30af\u30e9\u30b9\u304c\u6301\u3064 `processingEnv` \u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304b\u3089\u3001 `getMessager()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066 [Messager][5] \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n- `Messager#printMessage()` \u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u51fa\u529b\u304c\u3067\u304d\u308b\u3002\n- \u7b2c\u4e00\u5f15\u6570\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u7a2e\u985e\u3092\u6307\u5b9a\u3059\u308b\uff08[Diagnostic.Kind][4]\uff09\u3002\n- \u7b2c\u4e8c\u5f15\u6570\u306b\u51fa\u529b\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u6e21\u3059\u3002\n- \u7a2e\u985e\u3092 `Kind.ERROR` \u306b\u3057\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u529b\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u7d50\u679c\u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n\n##\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\n```java:MyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        \n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                messager.printMessage(Kind.NOTE, \"hogehoge\", element);\n            }\n        }\n        \n        return true;\n    }\n}\n```\n\n```text:\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\nHoge.java:5: \u6ce8\u610f:hogehoge\n    public String toString() {\n                  ^\n```\n\n- `Messager#printMessage()` \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e09\u5f15\u6570\u306b `Element` \u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u8981\u7d20\u306e\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u4e00\u7dd2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n\n##\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u51fa\u529b\u3059\u308b\n```java:MyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.AnnotationMirror;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        \n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                AnnotationMirror override = element.getAnnotationMirrors().get(0);\n                messager.printMessage(Kind.NOTE, \"hogehoge\", element, override);\n            }\n        }\n        \n        return true;\n    }\n}\n```\n\n```text:\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\nHoge.java:4: \u6ce8\u610f:hogehoge\n    @Override\n    ^\n```\n\n- `Messager#printMessage()` \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u56db\u5f15\u6570\u306b `AnnotationMirror` \u3092\u6e21\u3059\u3068\u3001\u305d\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u30b3\u30fc\u30c9\u4e0a\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u4e00\u7dd2\u306b\u51fa\u529b\u3055\u308c\u308b\u3002\n- \u7b2c\u4e94\u5f15\u6570\u306b `AnnotationValue` \u3092\u6e21\u305b\u3070\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u5f15\u6570\u306e\u4f4d\u7f6e\u60c5\u5831\u3082\u51fa\u529b\u3067\u304d\u305d\u3046\uff08\u8a66\u3057\u3066\u306a\u3044\uff09\u3002\n\n#\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u8981\u7d20\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\n```java:MyAnnotation.java\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Target;\n\n@Target({\n    ElementType.TYPE, ElementType.METHOD, ElementType.LOCAL_VARIABLE,\n    ElementType.FIELD, ElementType.PARAMETER, ElementType.TYPE_PARAMETER\n})\npublic @interface MyAnnotation {\n    \n    String value();\n}\n```\n\n```java:MyAnnotationProcessor.java\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"MyAnnotation\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                MyAnnotation anno = element.getAnnotation(MyAnnotation.class);\n                \n                String msg =\n                    \"<<@MyAnnotation(\\\"\" + anno.value() + \"\\\")>>\\n\"\n                  + \"  Kind : \" + element.getKind() + \"\\n\"\n                  + \"  SimpleName : \" + element.getSimpleName() + \"\\n\"\n                  + \"  Modifiers : \" + element.getModifiers() + \"\\n\"\n                  + \"  asType : \" + element.asType() + \"\\n\"\n                  + \"  EnclosedElements : \" + element.getEnclosedElements() + \"\\n\"\n                  + \"  EnclosingElement : \" + element.getEnclosingElement() + \"\\n\"\n                  + \"  AnnotationMirrors : \" + element.getAnnotationMirrors() + \"\\n\"\n                  ;\n                \n                System.out.println(msg);\n            }\n        }\n        \n        return true;\n    }\n}\n```\n\n```java:Hoge.java\n@MyAnnotation(\"\u30af\u30e9\u30b9\")\npublic class Hoge<@MyAnnotation(\"\u578b\u5f15\u6570\") T> {\n    \n    @MyAnnotation(\"\u30d5\u30a3\u30fc\u30eb\u30c9\")\n    private double d;\n    \n    @MyAnnotation(\"\u30e1\u30bd\u30c3\u30c9\")\n    public void method(@MyAnnotation(\"\u5f15\u6570\") int i) {\n        @MyAnnotation(\"\u30ed\u30fc\u30ab\u30eb\u5909\u6570\")\n        String str;\n    }\n}\n```\n\n```text:\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n<<@MyAnnotation(\"\u30af\u30e9\u30b9\")>>\n  Kind : CLASS\n  SimpleName : Hoge\n  Modifiers : [public]\n  asType : Hoge<T>\n  EnclosedElements : Hoge(),d,method(int)\n  EnclosingElement : \u540d\u524d\u306e\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\n  AnnotationMirrors : @MyAnnotation(\"\\u30af\\u30e9\\u30b9\")\n\n<<@MyAnnotation(\"\u578b\u5f15\u6570\")>>\n  Kind : TYPE_PARAMETER\n  SimpleName : T\n  Modifiers : []\n  asType : T\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u578b\\u5f15\\u6570\")\n\n<<@MyAnnotation(\"\u30d5\u30a3\u30fc\u30eb\u30c9\")>>\n  Kind : FIELD\n  SimpleName : d\n  Modifiers : [private]\n  asType : double\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u30d5\\u30a3\\u30fc\\u30eb\\u30c9\")\n\n<<@MyAnnotation(\"\u30e1\u30bd\u30c3\u30c9\")>>\n  Kind : METHOD\n  SimpleName : method\n  Modifiers : [public]\n  asType : (int)void\n  EnclosedElements :\n  EnclosingElement : Hoge\n  AnnotationMirrors : @MyAnnotation(\"\\u30e1\\u30bd\\u30c3\\u30c9\")\n\n<<@MyAnnotation(\"\u5f15\u6570\")>>\n  Kind : PARAMETER\n  SimpleName : i\n  Modifiers : []\n  asType : int\n  EnclosedElements :\n  EnclosingElement : method(int)\n  AnnotationMirrors : @MyAnnotation(\"\\u5f15\\u6570\")\n```\n\n- [Element][6] \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u3001\u30a2\u30ce\u30c6\u30fc\u30c8\u3055\u308c\u305f\u8981\u7d20\u306e\u60c5\u5831\u3092\u3044\u308d\u3044\u308d\u53d6\u5f97\u3067\u304d\u308b\u3002\n\n#jar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3057\u3066 -processor \u30aa\u30d7\u30b7\u30e7\u30f3\u7121\u3057\u3067\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u3059\u308b\n\u6bce\u56de `javac` \u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067 `-processor` \u3092\u6307\u5b9a\u3059\u308b\u306e\u306f\u75b2\u308c\u308b\u3002\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u6240\u5b9a\u306e\u65b9\u6cd5\u3067 jar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3059\u308b\u3068\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b jar \u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u6307\u5b9a\u3059\u308b\u3060\u3051\u3067\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u51e6\u7406\u3092\u631f\u3080\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\n\n##\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u542b\u3080 jar \u3092\u4f5c\u6210\u3059\u308b\n```java:MyOverrideProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyOverrideProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        System.out.println(\"Override!!\");\n        return true;\n    }\n}\n```\n\n`@Override` \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3002\n\n\u3053\u308c\u3092\u3001\u4ee5\u4e0b\u306e\u69cb\u6210\u306b\u306a\u308b\u3088\u3046\u306b jar \u306b\u30d1\u30c3\u30b1\u30fc\u30b8\u3059\u308b\u3002\n\n```text:\n|-sample/processor/\n|  `-MyOverrideProcessor.class\n`-META-INF/services/\n   `-javax.annotation.processing.Processor\n```\n\n\u3053\u306e `META-INF/services/javax.annotation.processing.Processor` \u306f\u305f\u3060\u306e\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3001\u5185\u5bb9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e FQCN \u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3002\n\n```javax.annotation.processing.Processor\nsample.processor.MyOverrideProcessor\n```\n\n\u3053\u306e jar \u3092\u4eee\u306b `processor.jar` \u3068\u3059\u308b\u3002\n\n##\u5b9f\u884c\u3059\u308b\n```java:Hoge.java\npublic class Hoge {\n    @Override\n    public String toString() {\n        return super.toString();\n    }\n}\n```\n\n```bat:\n> javac -cp processor.jar Hoge.java\nOverride!!\nOverride!!\n```\n\n##\u8aac\u660e\n- \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u542b\u3080 jar \u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u306b\u3001 `META-INF/services/javax.annotation.processing.Processor` \u3068\u3044\u3046\u5f62\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u914d\u7f6e\u3059\u308b\u3002\n- `javax.annotation.processing.Processor` \u306e\u4e2d\u306b\u306f\u3001\u4f7f\u7528\u3059\u308b\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e FQCN \u3092\u8a18\u8ff0\u3059\u308b\u3002\n- \u3053\u306e jar \u3092\u30af\u30e9\u30b9\u30d1\u30b9\u306b\u542b\u3081\u305f\u72b6\u614b\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 `javax.annotation.processing.Processor` \u3067\u6307\u5b9a\u3055\u308c\u305f\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5229\u7528\u3055\u308c\u308b\u3002\n- `javax.annotation.processing.Processor` \u306b\u306f\u3001\u6539\u884c\u533a\u5207\u308a\u3067\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n- \u3053\u306e `META-INF/services` \u306e\u4e0b\u306b\u4f7f\u7528\u3059\u308b\u30af\u30e9\u30b9\u306e\u60c5\u5831\u3092\u914d\u7f6e\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u306f\u3001 Java \u306e [ServiceLoader][7] \u3068\u3044\u3046\u4ed5\u7d44\u307f\u3092\u5229\u7528\u3057\u305f\u3082\u306e\u3068\u601d\u308f\u308c\u308b\u3002\n\n#Eclipse \u3067\u5229\u7528\u3059\u308b\n##\u57fa\u672c\n###\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/81c13173-2a46-ae32-2555-dffbaa3ffc9c.jpeg)\n\n```java:MyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        messager.printMessage(Kind.NOTE, \"Hello Annotation Processor!!\");\n        \n        return true;\n    }\n}\n```\n\n```text:javax.annotation.processing.Processor\nsample.processor.MyAnnotationProcessor\n```\n\n- \u666e\u901a\u306b java \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b\u3002\n- ServiceLoader \u3092\u5229\u7528\u3057\u305f\u5f62\u5f0f\u306b\u3059\u308b\uff08`javax.annotation.processing.Processor`\uff09\u3002\n\n####jar \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\n- \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30a8\u30af\u30b9\u30dd\u30fc\u30c8] \u3092\u9078\u629e\u3059\u308b\u3002\n- [Java] > [JAR \u30d5\u30a1\u30a4\u30eb] \u3092\u9078\u629e\u3057\u3001 [\u6b21\u3078] \u3092\u30af\u30ea\u30c3\u30af\u3002\n- \u4efb\u610f\u306e\u5834\u6240\u306b jar \u30d5\u30a1\u30a4\u30eb\u3092\u51fa\u529b\u3059\u308b\u3002\n\n###\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u5074\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/fa4fe36a-3112-06d4-3d7b-ef76184dd9ce.jpeg)\n\n```java:Hoge.java\npublic class Hoge {\n    \n    @Override\n    public String toString() {\n        return super.toString();\n    }\n}\n```\n\n- \u666e\u901a\u306b java \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002\n\n####\u6ce8\u91c8\u51e6\u7406\u3092\u6709\u52b9\u306b\u3059\u308b\n- \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af\u3057\u3066\u3001 [\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc] \u3092\u9078\u629e\u3002\n- [Java \u30b3\u30f3\u30d1\u30a4\u30e9\u30fc] > [\u6ce8\u91c8\u51e6\u7406] \u3092\u9078\u629e\u3002\n- [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u53ef\u80fd\u306b\u3059\u308b] \u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n- \u7d9a\u3044\u3066\u3001 [\u6ce8\u91c8\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b] \u3068 [\u30a8\u30c7\u30a3\u30bf\u30fc\u3067\u306e\u51e6\u7406\u3092\u4f7f\u7528\u53ef\u80fd\u306b\u3059\u308b] \u306e\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/7014de5f-4fc5-2ea7-c6c6-bbe309337d59.jpeg)\n\n- \u3055\u3089\u306b\u3001 [\u6ce8\u91c8\u51e6\u7406] > [\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30fb\u30d1\u30b9] \u3092\u9078\u629e\u3059\u308b\u3002\n- [\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u56fa\u6709\u306e\u8a2d\u5b9a\u3092\u53ef\u80fd\u306b\u3059\u308b] \u306b\u30c1\u30a7\u30c3\u30af\u3092\u5165\u308c\u308b\u3002\n- [\u5916\u90e8 Jar \u8ffd\u52a0] \u3092\u30af\u30ea\u30c3\u30af\u3057\u3001\u5148\u307b\u3069\u751f\u6210\u3057\u305f `MyAnnotationProcessor` \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e jar \u30d5\u30a1\u30a4\u30eb\u3092\u9078\u629e\u3059\u308b\u3002\n\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/a4a9d50e-0f53-deca-77be-76924c18bef7.jpeg)\n\n\u3053\u308c\u3067\u3001\u6ce8\u91c8\u51e6\u7406\u304c\u6709\u52b9\u306b\u306a\u308b\u3002\n\n####\u51fa\u529b\u7d50\u679c\u3092\u78ba\u8a8d\u3059\u308b\n- [\u30a6\u30a3\u30f3\u30c9\u30a6] > [\u30d3\u30e5\u30fc\u306e\u8868\u793a] > [\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0] \u3092\u9078\u629e\u3057\u3001\u300c\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\u3055\u305b\u308b\u3002\n\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/acc6698d-66f6-895b-4dc8-cadfb8d6dfe7.jpeg)\n\n- \u3046\u307e\u304f\u51e6\u7406\u3055\u308c\u3066\u3044\u308b\u3068\u3001 `Messager` \u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u3002\n- Eclipse \u3067\u52d5\u304b\u3059\u5834\u5408\u3001\u6a19\u6e96\u51fa\u529b\uff08`System.out`\uff09\u3067\u51fa\u529b\u3057\u305f\u5185\u5bb9\u306f\u78ba\u8a8d\u3067\u304d\u306a\u3044\u306e\u3067\u3001 `Messager` \u3067\u51fa\u529b\u3057\u3066\u300c\u30a8\u30e9\u30fc\u30fb\u30ed\u30b0\u300d\u30a6\u30a3\u30f3\u30c9\u30a6\u3067\u78ba\u8a8d\u3059\u308b\u3002\n- \u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u5074\u306e\u5b9f\u88c5\u3092\u4fee\u6b63\u3057\u305f\u5834\u5408\u306f\u3001 jar \u3092\u51fa\u529b\u3057\u306a\u304a\u3057\u305f\u4e0a\u3067\u5229\u7528\u5074\u306e\u300c\u30d5\u30a1\u30af\u30c8\u30ea\u30fc\u30fb\u30d1\u30b9\u300d\u306e\u8a2d\u5b9a\u3092\u3057\u76f4\u3059\uff08\u4e00\u56de\u5916\u3057\u3066\u3001\u518d\u5ea6\u8a2d\u5b9a\u3057\u76f4\u3059\uff09\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n##\u8b66\u544a\u3084\u30a8\u30e9\u30fc\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u306b\u8868\u793a\u3055\u308c\u308b\n```java:MyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\n\n@SupportedAnnotationTypes(\"java.lang.Override\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        Messager messager = super.processingEnv.getMessager();\n        \n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                messager.printMessage(Kind.ERROR, \"\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3055\u305b\u306c\uff01\", element);\n            }\n        }\n        \n        return true;\n    }\n}\n```\n\n**\u5229\u7528\u5074\u306e\u69d8\u5b50**\n\n![processor.JPG](https://qiita-image-store.s3.amazonaws.com/0/28302/e8fa90ff-e2ee-5908-a32f-82823f705acf.jpeg)\n\n\u30a8\u30c7\u30a3\u30bf\u30fc\u4e0a\u3067\u30a8\u30e9\u30fc\u8868\u793a\u3055\u308c\u3066\u308b\uff01\n\n#Gradle \u3067\u4f7f\u7528\u3059\u308b\n##\u57fa\u672c\n###\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n```text:\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|-settings.gradle\n|-build.gradle\n|-processor/\n|  `-src/main/\n|     |-java/sample/processor/\n|     |  `-MyAnnotationProcessor.java\n|     `-resources/META-INF/services/\n|        `-javax.annotation.processing.Processor\n|\n`-client/\n   |-build.gradle\n   `-src/main/java/sample/processor/\n      `-Hoge.java\n```\n\n- \u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u3002\n- `processor` \u3068 `client` \u3068\u3044\u3046\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u3042\u308b\u3002\n    - `processor` \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5b9f\u88c5\u3059\u308b\u3002\n    - `client` \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u306f\u3001 `processor` \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f5c\u6210\u3057\u305f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u5229\u7528\u3059\u308b\u3002\n\n###\u5b9f\u88c5\u7b49\n```groovy:settings.gradle\ninclude 'processor', 'client'\n```\n\n```groovy:build.gradle\nsubprojects {\n    apply plugin: 'java'\n}\n```\n\n```groovy:client/build.gradle\ndependencies {\n    compile project(':processor')\n}\n```\n\n```java:MyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.TypeElement;\n\n@SupportedAnnotationTypes(\"*\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        System.out.println(\"Hello!!\");\n        return true;\n    }\n}\n```\n\n```java:Hoge.java\npackage sample.processor;\n\npublic class Hoge {\n    @Override\n    public String toString() {\n        return \"hoge\";\n    }\n}\n```\n\n###\u52d5\u4f5c\u78ba\u8a8d\n```bat:\n> gradle compileJava\n:processor:compileJava\n:processor:processResources\n:processor:classes\n:processor:jar\n:client:compileJava\nHello!!\nHello!!\n\nBUILD SUCCESSFUL\n\nTotal time: 3.423 secs\n```\n\n- ServiceLoader \u3092\u4f7f\u3046\u5f62\u5f0f\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u666e\u901a\u306b\u5229\u7528\u3067\u304d\u305f\u3002\n\n##Eclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5316\n### Gradle \u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u308a\u307e\u3057\u305f\n\n**2016/01/08 \u8ffd\u8a18**\n\n\u4ee5\u4e0b\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b Gradle \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n- [Gradle - Plugin: com.github.opengl-BOBO.annotation-processing-eclipse](https://plugins.gradle.org/plugin/com.github.opengl-BOBO.annotation-processing-eclipse)\n- [\u8aac\u660e | GitHub](https://github.com/opengl-8080/annotation-processing-eclipse-gradle-plugin#\u65e5\u672c\u8a9e\u306e\u8aac\u660e)\n\n---------------------\n\n`gradle eclipse` \u3057\u305f\u3089\u3001\u81ea\u52d5\u3067\u6ce8\u91c8\u51e6\u7406\u306e\u8a2d\u5b9a\u304c\u6709\u52b9\u306b\u306a\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\n###\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n```text:\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n|-build.gradle\n|-lib/\n|  `-processor.jar\n`-src/main/java/sample/processor/\n   `-Hoge.java\n```\n\n\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092\u30d1\u30c3\u30b1\u30fc\u30b8\u30f3\u30b0\u3057\u305f jar \u30d5\u30a1\u30a4\u30eb\u306f\u3001 `lib` \u30d5\u30a9\u30eb\u30c0\u306e\u4e0b\u306e\u914d\u7f6e\u3057\u3066\u304a\u304f\u3002\n\n###build.gradle\n```groovy:client/build.gradle\napply plugin: 'java'\napply plugin: 'eclipse'\n\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    eclipseFactoryPathFile = '.factorypath'\n    processorJarPath = 'lib/processor.jar'\n}\n\ndependencies {\n    compile files(processorJarPath)\n}\n\neclipse {\n    project.name = 'MyAnnotationProcessorClient'\n\n    classpath.file.withXml {\n        it.asNode().appendNode('classpathentry', [kind: 'src', path: '.apt_generated'])\n    }\n\n    jdt.file.withProperties { properties ->\n        properties.put 'org.eclipse.jdt.core.compiler.processAnnotations', 'enabled'\n    }\n}\n\neclipseJdt << {\n    file(eclipseAptPrefsFile).write \"\"\"\\\n        |eclipse.preferences.version=1\n        |org.eclipse.jdt.apt.aptEnabled=true\n        |org.eclipse.jdt.apt.genSrcDir=.apt_generated\n        |org.eclipse.jdt.apt.reconcileEnabled=true\n        |\"\"\".stripMargin()\n\n    file(eclipseFactoryPathFile).write \"\"\"\\\n        |<factorypath>\n        |    <factorypathentry kind=\"PLUGIN\" id=\"org.eclipse.jst.ws.annotations.core\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |    <factorypathentry kind=\"EXTJAR\" id=\"${file(processorJarPath).absolutePath}\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |</factorypath>\n        |\"\"\".stripMargin()\n}\n\ncleanEclipse << {\n    file(eclipseAptPrefsFile).delete()\n    file(eclipseFactoryPathFile).delete()\n}\n```\n\n###\u8aac\u660e\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5358\u7d14\u3067\u3001 `eclipse` \u30bf\u30b9\u30af\u3092\u5b9f\u884c\u3057\u305f\u3089\u6ce8\u91c8\u51e6\u7406\u3092\u6709\u52b9\u5316\u3059\u308b\u306e\u306b\u5fc5\u8981\u3068\u306a\u308b\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u305f\u308a\u3057\u3066\u3044\u308b\u3002\n\n **org.eclipse.jdt.apt.core.prefs \u306e\u4f5c\u6210**\n\n```groovy:\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    ...\n}\n\n...\n\neclipseJdt << {\n    file(eclipseAptPrefsFile).write \"\"\"\\\n        |eclipse.preferences.version=1\n        |org.eclipse.jdt.apt.aptEnabled=true\n        |org.eclipse.jdt.apt.genSrcDir=.apt_generated\n        |org.eclipse.jdt.apt.reconcileEnabled=true\n        |\"\"\".stripMargin()\n\n...\n```\n\n **.factorypath \u306e\u4f5c\u6210**\n\n```groovy:\next {\n    eclipseFactoryPathFile = '.factorypath'\n    ...\n}\n\n...\n\neclipseJdt << {\n    ...\n\n    file(eclipseFactoryPathFile).write \"\"\"\\\n        |<factorypath>\n        |    <factorypathentry kind=\"PLUGIN\" id=\"org.eclipse.jst.ws.annotations.core\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |    <factorypathentry kind=\"EXTJAR\" id=\"${file(processorJarPath).absolutePath}\" enabled=\"true\" runInBatchMode=\"false\"/>\n        |</factorypath>\n        |\"\"\".stripMargin()\n}\n```\n\n **.classpath \u306e\u7de8\u96c6**\n\n```groovy:\neclipse {\n    ...\n\n    classpath.file.withXml {\n        it.asNode().appendNode('classpathentry', [kind: 'src', path: '.apt_generated'])\n    }\n\n    ...\n}\n```\n\n **org.eclipse.jdt.core.prefs \u306e\u7de8\u96c6**\n\n```groovy:\neclipse {\n    ...\n\n    jdt.file.withProperties { properties ->\n        properties.put 'org.eclipse.jdt.core.compiler.processAnnotations', 'enabled'\n    }\n}\n```\n\n **cleanEclipse \u306b\u524a\u9664\u5bfe\u8c61\u3092\u8ffd\u52a0**\n\n```groovy:\next {\n    eclipseAptPrefsFile = '.settings/org.eclipse.jdt.apt.core.prefs'\n    eclipseFactoryPathFile = '.factorypath'\n    ...\n}\n\n...\n\ncleanEclipse << {\n    file(eclipseAptPrefsFile).delete()\n    file(eclipseFactoryPathFile).delete()\n}\n```\n\n#Java \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e\u51e6\u7406\u306e\u4e2d\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u52d5\u7684\u306b\u751f\u6210\u3057\u3066\u307f\u308b\u3002\n\n##\u5b9f\u88c5\n```java:MyAnnotation.java\npackage sample.processor;\n\nimport java.lang.annotation.ElementType;\nimport java.lang.annotation.Target;\n\n@Target(ElementType.TYPE)\npublic @interface MyAnnotation {\n    boolean value() default false;\n}\n```\n\n```java:Hoge.java\npackage sample.processor;\n\n@MyAnnotation(true)\npublic class Hoge {\n}\n```\n\n```java:MyAnnotationProcessor.java\npackage sample.processor;\n\nimport java.io.IOException;\nimport java.io.Writer;\nimport java.util.Set;\n\nimport javax.annotation.processing.AbstractProcessor;\nimport javax.annotation.processing.Filer;\nimport javax.annotation.processing.Messager;\nimport javax.annotation.processing.RoundEnvironment;\nimport javax.annotation.processing.SupportedAnnotationTypes;\nimport javax.annotation.processing.SupportedSourceVersion;\nimport javax.lang.model.SourceVersion;\nimport javax.lang.model.element.Element;\nimport javax.lang.model.element.TypeElement;\nimport javax.tools.Diagnostic.Kind;\nimport javax.tools.JavaFileObject;\n\n@SupportedAnnotationTypes(\"sample.processor.MyAnnotation\")\n@SupportedSourceVersion(SourceVersion.RELEASE_8)\npublic class MyAnnotationProcessor extends AbstractProcessor {\n    \n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        if (annotations.size() == 0) {\n            return true;\n        }\n        \n        Messager messager = super.processingEnv.getMessager();\n        \n        for (TypeElement typeElement : annotations) {\n            for (Element element : roundEnv.getElementsAnnotatedWith(typeElement)) {\n                MyAnnotation anno = element.getAnnotation(MyAnnotation.class);\n                \n                messager.printMessage(Kind.NOTE, element.getSimpleName() + \" class is annotated by @MyAnnotation.\");\n                \n                if (!anno.value()) {\n                    messager.printMessage(Kind.NOTE, \"@MyAnnotation value is false. no generate.\");\n                    break;\n                }\n                \n                String src =\n                    \"package sample.processor.generated;\\r\\n\"\n                  + \"import sample.processor.MyAnnotation;\\r\\n\"\n                  + \"@MyAnnotation\\r\\n\"\n                  + \"public class Fuga {\\r\\n\"\n                  + \"    public void hello() {\\r\\n\"\n                  + \"        System.out.println(\\\"Hello World!!\\\");\\r\\n\"\n                  + \"    }\\r\\n\"\n                  + \"}\\r\\n\"\n                  ;\n                \n                try {\n                    Filer filer = super.processingEnv.getFiler();\n                    JavaFileObject javaFile = filer.createSourceFile(\"Fuga\");\n                    \n                    try (Writer writer = javaFile.openWriter()) {\n                        writer.write(src);\n                    }\n                    \n                    messager.printMessage(Kind.NOTE, \"generate source code!!\");\n                } catch (IOException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        \n        return true;\n    }\n}\n```\n\n##\u52d5\u4f5c\u78ba\u8a8d\n```text:\u30b3\u30f3\u30d1\u30a4\u30eb\u5b9f\u884c\u7d50\u679c\n\u6ce8\u610f:Hoge class is annotated by @MyAnnotation.\n\u6ce8\u610f:generate source code!!\n\u6ce8\u610f:Fuga class is annotated by @MyAnnotation.\n\u6ce8\u610f:@MyAnnotation value is false. no generate.\n```\n\n```java:\u81ea\u52d5\u751f\u6210\u3055\u308c\u305fFuga\u30af\u30e9\u30b9\npackage sample.processor.generated;\nimport sample.processor.MyAnnotation;\n@MyAnnotation\npublic class Fuga {\n    public void hello() {\n        System.out.println(\"Hello World!!\");\n    }\n}\n```\n\n- `Fuga.java` \u306f\u3001 `.class` \u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u308b\u30d5\u30a9\u30eb\u30c0\u306e\u30eb\u30fc\u30c8\u306b\u51fa\u529b\u3055\u308c\u305f\u3002\n- `Fuga.class` \u306f\u3001\u540c\u3058\u304f `.class` \u30d5\u30a1\u30a4\u30eb\u306e\u51fa\u529b\u5148\u306e\u4e2d\u306b\u3001 `package` \u5ba3\u8a00\u3067\u5b9a\u7fa9\u3057\u305f\u901a\u308a\u306e\u5834\u6240\u306b\u51fa\u529b\u3055\u308c\u305f\u3002\n\n```text:\u51fa\u529b\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u69d8\u5b50\n|-Fuga.java\n`-sample/processor/\n   |-Hoge.class\n   `-generated/\n      `-Fuga.class\n```\n\n##\u8aac\u660e\n```java:MyAnnotationProcessor.java\uff08\u4e00\u90e8\uff09\ntry {\n    Filer filer = super.processingEnv.getFiler();\n    JavaFileObject javaFile = filer.createSourceFile(\"Fuga\");\n    \n    try (Writer writer = javaFile.openWriter()) {\n        writer.write(src);\n    }\n    \n    messager.printMessage(Kind.NOTE, \"generate source code!!\");\n} catch (IOException e) {\n    e.printStackTrace();\n}\n```\n\n- Java \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u307e\u305a\u6b21\u306e\u65b9\u6cd5\u3067 [JavaFileObject][9] \u3092\u53d6\u5f97\u3059\u308b\u3002\n    - `AbstractProcessor#processingEnv` \u306e `getFiler()` \u30e1\u30bd\u30c3\u30c9\u3067 [Filer][8] \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\u3002\n    - `Filer#createSourceFile(String)` \u30e1\u30bd\u30c3\u30c9\u3067\u3001 `JavaFileObject` \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u53d6\u5f97\u3059\u308b\uff08\u5f15\u6570\u306f\u751f\u6210\u3059\u308b\u30af\u30e9\u30b9\u306e\u540d\u524d\uff09\u3002\n- `JavaFileObject` \u3092\u53d6\u5f97\u3057\u305f\u3089\u3001 `openWriter()` \u3084 `openOutputStream()` \u3092\u4f7f\u3063\u3066\u30e9\u30a4\u30bf\u30fc\u3084\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u53d6\u5f97\u3057\u3001\u305d\u3053\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u51fa\u3059\u3002\n- \u751f\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306f\u81ea\u52d5\u7684\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\n- \u751f\u6210\u3057\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306b\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u542b\u307e\u308c\u3066\u3044\u305f\u5834\u5408\u306f\u3001\u6b21\u306e\u30e9\u30a6\u30f3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u3001\u518d\u3073\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u306e `process()` \u30e1\u30bd\u30c3\u30c9\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\n- \u540c\u3058\u30af\u30e9\u30b9\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8907\u6570\u56de\u51fa\u529b\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u3002\n    - \u3053\u306e\u305f\u3081\u3001\u51e6\u7406\u3059\u3079\u304d\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u7121\u304f\u306a\u3063\u305f\u304b\u3069\u3046\u304b\u3092\u78ba\u8a8d\u3057\u3066\u3001\u306a\u3051\u308c\u3070\u3059\u3050\u306b\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u3066\u3044\u308b\uff08\u5224\u5b9a\u306b\u306f\u3001 `process()` \u30e1\u30bd\u30c3\u30c9\u306e\u7b2c\u4e00\u5f15\u6570\u306e\u30b5\u30a4\u30ba\u3092\u5229\u7528\u3059\u308b\uff09\u3002\n\n```java:\u51e6\u7406\u3059\u3079\u304d\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u7121\u3051\u308c\u3070\u3001\u3059\u3050\u306b\u51e6\u7406\u3092\u7d42\u4e86\u3055\u305b\u3066\u3044\u308b\u3068\u3053\u308d\n    @Override\n    public boolean process(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv) {\n        if (annotations.size() == 0) {\n            return true;\n        }\n```\n\n#\u53c2\u8003\n\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c94\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e1\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20081219/321816/)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c95\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e2\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090115/322957/?ST=develop)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c96\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e3\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090122/323258/)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c97\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e4\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090129/323775/)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c98\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e5\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090204/324186/)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c99\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e6\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090212/324605/)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c100\u56de \u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u51e6\u7406\u3059\u308b \u305d\u306e7\uff1aITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090218/324994/)\n- [\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3092Eclipse\u3067\u52d5\u304b\u3059\u307e\u3067\u306b\u8c6a\u83ef\u30e1\u30f3\u30d0\u30fc\u306b\u30b5\u30dd\u30fc\u30c8\u3092\u53d7\u3051\u308b\u306a\u3069 - Togetter\u307e\u3068\u3081](http://togetter.com/li/517171)\n- [eclipse\u3067\u30ab\u30b9\u30bf\u30e0\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u308b\u305f\u3081\u306e\u30e1\u30e2: mitsuruog\u306e\u65e5\u8a18](http://se35over.seesaa.net/article/283647859.html)\n- [javax.annotation.processing (Java Platform SE 8 )](http://docs.oracle.com/javase/jp/8/docs/api/javax/annotation/processing/package-summary.html)\n- [Java\u6280\u8853\u6700\u524d\u7dda - \u300cJava SE 6\u5b8c\u5168\u653b\u7565\u300d\u7b2c11\u56de\u3000\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30ed\u30fc\u30c9\u3092\u884c\u3046ServiceLoader\uff1aITpro][7]\n- [vvakame / build.gradle | GitHub Gist](https://gist.github.com/vvakame/5176993#file-build-gradle-L196)\n- [\u7b2c38\u7ae0 Eclipse \u30d7\u30e9\u30b0\u30a4\u30f3](http://gradle.monochromeroad.com/docs/userguide/eclipse_plugin.html)\n- [Node (Groovy 2.4.3)](http://docs.groovy-lang.org/latest/html/api/groovy/util/Node.html)\n- [Gradle\u3067Eclipse\u306e\u8a2d\u5b9a\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b - @ikikko \u306e\u306f\u3066\u306a\u30d6\u30ed\u30b0](http://ikikko.hatenablog.com/entry/20120214/1329239103)\n\n\n[1]: http://docs.oracle.com/javase/jp/8/docs/api/javax/annotation/processing/Processor.html\n[2]: http://docs.oracle.com/javase/jp/8/docs/api/javax/annotation/processing/AbstractProcessor.html\n[3]: http://docs.oracle.com/javase/jp/8/docs/api/javax/lang/model/SourceVersion.html\n[4]: http://docs.oracle.com/javase/jp/8/docs/api/javax/tools/Diagnostic.Kind.html\n[5]: http://docs.oracle.com/javase/jp/8/docs/api/javax/annotation/processing/Messager.html\n[6]: http://docs.oracle.com/javase/jp/8/docs/api/javax/lang/model/element/Element.html\n[7]: http://itpro.nikkeibp.co.jp/article/COLUMN/20061215/257003/\n[8]: http://docs.oracle.com/javase/jp/8/docs/api/javax/annotation/processing/Filer.html\n[9]: http://docs.oracle.com/javase/jp/8/docs/api/javax/tools/JavaFileObject.html\n"}