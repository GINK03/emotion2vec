{"context": "redis \u306f\u30b7\u30f3\u30b0\u30eb\u30d7\u30ed\u30bb\u30b9\u3067\u52d5\u304f\u306e\u3067\u3001\n\u5927\u91cf\u306e\u30ad\u30fc\u3092\u8d70\u67fb\u3059\u308b\u76ee\u7684\u3067 keys * \u3068\u304b\u3084\u308b\u3068\u3048\u3089\u3044\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\n\u4ee3\u308f\u308a\u306b scan \u65cf\u3092\u4f7f\u3046\u3068\u3088\u3055\u3052\u3001\u3063\u3066\u3044\u3046\u8a71\u3002\n\u30ab\u30fc\u30bd\u30eb\u306f0\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3066\u3001\u518d\u5ea60\u306b\u306a\u308b\u30681\u9806\u3057\u305f\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u5168\u4ef6\u8d70\u67fb\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\u5fc5\u305a count \u3067\u6307\u5b9a\u3057\u305f\u4ef6\u6570\u304c\u53d6\u308c\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u3089\u3057\u3044\u3002\n\u4ed6\u306b set, hash, zset \u306b\u5bfe\u3059\u308bscan\u3082\u3042\u3063\u3066\u3001\u4f7f\u3044\u65b9\u306f\u3060\u3044\u305f\u3044\u540c\u3058\u3002\n\u610f\u5916\u3068\u30b0\u30b0\u3063\u3066\u3082\u60c5\u5831\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u30e1\u30e2\u3002\n\npython\nimport redis\n\nr = redis.StrictRedis()\n\ncr = 0\nacc = 0\nwhile True:\n    cr, keys = r.scan(cr, match=\"*\", count=10000)\n    acc += len(keys)\n    print(cr, len(keys), acc)\n\n    if cr == 0:\n        break\n\nprint(r.dbsize())\n\n\nstdout\n60736 10001 10001\n90528 10000 20001\n827920 10001 30002\n\n...(\u4e2d\u7565)\n\n832503 10000 870045\n864591 10000 880045\n858799 10001 890046\n853023 10000 900046\n100191 10000 910046\n529855 10001 920047\n0 8407 928454\n928454\n\n\n\nredis-cli\n\u3060\u3068\u3053\u308c\u3067\u81ea\u52d5\u7684\u306b1\u4ef6\u305a\u3064scan\u3057\u3066\u304f\u308c\u308b\u3002\n$ redis-cli --scan --pattern '*'\n\n\nMONITOR\n1487148044.325432 [0 172.17.0.1:35426] \"SCAN\" \"877248\" \"MATCH\" \"*\"\n1487148044.325922 [0 172.17.0.1:35426] \"SCAN\" \"320192\" \"MATCH\" \"*\"\n1487148044.331590 [0 172.17.0.1:35426] \"SCAN\" \"385728\" \"MATCH\" \"*\"\n1487148044.332199 [0 172.17.0.1:35426] \"SCAN\" \"70336\" \"MATCH\" \"*\"\n1487148044.332777 [0 172.17.0.1:35426] \"SCAN\" \"824000\" \"MATCH\" \"*\"\n1487148044.333387 [0 172.17.0.1:35426] \"SCAN\" \"496320\" \"MATCH\" \"*\"\n1487148044.333901 [0 172.17.0.1:35426] \"SCAN\" \"53952\" \"MATCH\" \"*\"\n1487148044.349686 [0 172.17.0.1:35426] \"SCAN\" \"381632\" \"MATCH\" \"*\"\n...\uff08\u7565\uff09\n\n\n\u5148\u982d\u304b\u3089\u4f55\u4ef6\u304b\u6b32\u3057\u3044\u5834\u5408\u306f\u30d1\u30a4\u30d7\u3067 head -n 1000 \u3068\u304b\u306b\u6d41\u3059\u3068\u3088\u3044\u3002\ntail\u3060\u3068\u99c4\u76ee\u3060\u3051\u3069\u3002\n\n\u3053\u3063\u3061\u306e\u65b9\u304c\u8a73\u3057\u3044\n\u3051\u3069\u307e\u3041\u3044\u3044\u304b\u3002\u3082\u3046\u66f8\u3044\u3061\u3083\u3063\u305f\u3057\u3002\nhttp://ceblog.mediba.jp/post/134946112586/redis%E3%81%AE%E5%A4%A7%E9%87%8F%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%81%BB%E3%81%BC%E5%85%A8%E3%81%A6export%E3%81%99%E3%82%8B\nredis \u306f\u30b7\u30f3\u30b0\u30eb\u30d7\u30ed\u30bb\u30b9\u3067\u52d5\u304f\u306e\u3067\u3001\n\u5927\u91cf\u306e\u30ad\u30fc\u3092\u8d70\u67fb\u3059\u308b\u76ee\u7684\u3067 `keys *` \u3068\u304b\u3084\u308b\u3068\u3048\u3089\u3044\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\n\u4ee3\u308f\u308a\u306b [`scan`](https://redis.io/commands/scan) \u65cf\u3092\u4f7f\u3046\u3068\u3088\u3055\u3052\u3001\u3063\u3066\u3044\u3046\u8a71\u3002\n\n\u30ab\u30fc\u30bd\u30eb\u306f0\u304b\u3089\u30b9\u30bf\u30fc\u30c8\u3057\u3066\u3001\u518d\u5ea60\u306b\u306a\u308b\u30681\u9806\u3057\u305f\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u3001\u5168\u4ef6\u8d70\u67fb\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\u5fc5\u305a `count` \u3067\u6307\u5b9a\u3057\u305f\u4ef6\u6570\u304c\u53d6\u308c\u308b\u308f\u3051\u3067\u3082\u306a\u3044\u3089\u3057\u3044\u3002\n\n\u4ed6\u306b set, hash, zset \u306b\u5bfe\u3059\u308bscan\u3082\u3042\u3063\u3066\u3001\u4f7f\u3044\u65b9\u306f\u3060\u3044\u305f\u3044\u540c\u3058\u3002\n\n\u610f\u5916\u3068\u30b0\u30b0\u3063\u3066\u3082\u60c5\u5831\u51fa\u3066\u3053\u306a\u3044\u306e\u3067\u30e1\u30e2\u3002\n\n# python\n\n```py3\nimport redis\n\nr = redis.StrictRedis()\n\ncr = 0\nacc = 0\nwhile True:\n    cr, keys = r.scan(cr, match=\"*\", count=10000)\n    acc += len(keys)\n    print(cr, len(keys), acc)\n\n    if cr == 0:\n        break\n\nprint(r.dbsize())\n```\n\n```text:stdout\n60736 10001 10001\n90528 10000 20001\n827920 10001 30002\n\n...(\u4e2d\u7565)\n\n832503 10000 870045\n864591 10000 880045\n858799 10001 890046\n853023 10000 900046\n100191 10000 910046\n529855 10001 920047\n0 8407 928454\n928454\n```\n\n# redis-cli\n\n\u3060\u3068\u3053\u308c\u3067\u81ea\u52d5\u7684\u306b1\u4ef6\u305a\u3064scan\u3057\u3066\u304f\u308c\u308b\u3002\n\n```\n$ redis-cli --scan --pattern '*'\n```\n\n```text:MONITOR\n1487148044.325432 [0 172.17.0.1:35426] \"SCAN\" \"877248\" \"MATCH\" \"*\"\n1487148044.325922 [0 172.17.0.1:35426] \"SCAN\" \"320192\" \"MATCH\" \"*\"\n1487148044.331590 [0 172.17.0.1:35426] \"SCAN\" \"385728\" \"MATCH\" \"*\"\n1487148044.332199 [0 172.17.0.1:35426] \"SCAN\" \"70336\" \"MATCH\" \"*\"\n1487148044.332777 [0 172.17.0.1:35426] \"SCAN\" \"824000\" \"MATCH\" \"*\"\n1487148044.333387 [0 172.17.0.1:35426] \"SCAN\" \"496320\" \"MATCH\" \"*\"\n1487148044.333901 [0 172.17.0.1:35426] \"SCAN\" \"53952\" \"MATCH\" \"*\"\n1487148044.349686 [0 172.17.0.1:35426] \"SCAN\" \"381632\" \"MATCH\" \"*\"\n...\uff08\u7565\uff09\n```\n\n\u5148\u982d\u304b\u3089\u4f55\u4ef6\u304b\u6b32\u3057\u3044\u5834\u5408\u306f\u30d1\u30a4\u30d7\u3067 `head -n 1000` \u3068\u304b\u306b\u6d41\u3059\u3068\u3088\u3044\u3002\ntail\u3060\u3068\u99c4\u76ee\u3060\u3051\u3069\u3002\n\n\n# \u3053\u3063\u3061\u306e\u65b9\u304c\u8a73\u3057\u3044\n\n\u3051\u3069\u307e\u3041\u3044\u3044\u304b\u3002\u3082\u3046\u66f8\u3044\u3061\u3083\u3063\u305f\u3057\u3002\n\nhttp://ceblog.mediba.jp/post/134946112586/redis%E3%81%AE%E5%A4%A7%E9%87%8F%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E3%82%92%E3%81%BB%E3%81%BC%E5%85%A8%E3%81%A6export%E3%81%99%E3%82%8B\n", "tags": ["Redis"]}