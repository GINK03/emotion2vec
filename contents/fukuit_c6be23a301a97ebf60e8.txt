{"context": "Python + OpenCV\u3067\u306e\u753b\u50cf\u51e6\u7406\u3092\u8abf\u3079\u305f\u3064\u3064\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u659c\u3081\u8aad\u307f\u3057\u3066\u3044\u305f\u3089\u3001\u9854\u8a8d\u8b58\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u304c\u3042\u3063\u305f\u3002\u6700\u8fd1\u3001\u4eba\u306e\u9854\u3092\u899a\u3048\u3089\u308c\u306a\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u308b\u30ef\u30bf\u30af\u30b7\u3092\u52a9\u3051\u3066\u304f\u308c\u305d\u3046\u306a\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3067\u3042\u308b\u3002\n\nHaar Cascades\u3092\u7528\u3044\u305f\u9854\u8a8d\u8b58\n\u3053\u306e\u8fba\u308a\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u3053\u3068\u306f\u8a73\u3057\u304f\u306f\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u3093\u3060\u3051\u308c\u3069\u3001\u7c21\u5358\u306b\u8a00\u3046\u3068\u9854\u3058\u3083\u306a\u3044\u753b\u50cf\u3068\u9854\u753b\u50cf\u3092\u4f7f\u3063\u3066Haar\u7279\u5fb4\u91cf\u304b\u3089\u9854\u3092\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u8a13\u7df4\u3059\u308b\u3002\u305d\u306e\u7d50\u679c\u3068\u3057\u3066\u8b58\u5225\u30c7\u30fc\u30bf\u304c\u3067\u304d\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u8b58\u5225\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u4f7f\u3063\u3066\u8b58\u5225\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001Cascade\u8b58\u5225\u5668\u3068\u3044\u3046\u306e\u304c\u8003\u6848\u3055\u308c\u3066\u3044\u3066\u3001OpenCV\u306e\u914d\u5e03\u7269\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\nMac\u306eAnaconda\u306e\u5834\u5408\u306f\u3001\u300canaconda3/share/OpenCV/haarcascades\u300d\u306b\u3001Windows\u7248\u306eAnaconda\u306e\u5834\u5408\u306b\u306f\u300cAnaconda3\\Library\\etc\\haarcascades\u300d\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u3002\n\nhaarcascade_eye.xml ... \u773c\u8a8d\u8b58\nhaarcascade_frontalface_default.xml ... \u9854\u8a8d\u8b58\nhaarcascade_smile.xml ... \u7b11\u9854\u8a8d\u8b58\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u308c\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304a\u3044\u305f\u3002\u3067\u3001\u8b58\u5225\u5668\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\nface_cascade = cv2.CascadeClassifier(\u2018haarcascades/haarcascade_frontalface_default.xml\u2019)\n\n\u6b21\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3002\ncv2.imread()\u306f\u3001\u7b2c\u4e8c\u5f15\u6570\u306b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u30e2\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u6a5f\u80fd\u306f\u4f7f\u308f\u306a\u3044\u3067\u3001img\u3068\u3057\u3066\u30ab\u30e9\u30fc\u3067\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u3067\u3001cv2.cvtColor()\u3092\u4f7f\u3063\u3066\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u305f\u30b3\u30d4\u30fc\u3092\u6301\u3064\u3002\u3053\u308c\u306f\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3092\u4f7f\u3063\u3066\u9854\u8a8d\u8b58\u3092\u3057\u3066\u3001\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u3002\nimg = cv2.imread(file)\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n\u753b\u50cf\u306e\u4e2d\u3067\u9854\u3092\u63a2\u3057\u3066\u3001\u305d\u306e\u9854\u306e\u4f4d\u7f6e\u306e\u5ea7\u6a19\u3092\u623b\u3059\u3002\u3082\u3046\u8a13\u7df4\u6e08\u307f\u306e\u8b58\u5225\u30c7\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u8b58\u5225\u5668\u3092\u4f7f\u3046\u3060\u3051\u306a\u306e\u3067\u3001\u305f\u3063\u305f\u306e\u4e00\u884c\u3002\nfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n\n\u9854\u3092\u63a2\u3059\u306e\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u305f\u753b\u50cf(gray)\u306e\u4e2d\u3067\u884c\u306a\u3046\u3093\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u9854\u5ea7\u6a19\u306e\u4f4d\u7f6e\u306b\u57fa\u3065\u3044\u3066\u5143\u306e\u30ab\u30e9\u30fc\u753b\u50cf(img)\u306b\u3001\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u63cf\u753b\u3059\u308b\u3002\nfor (x, y, w, h) in faces:\n    cv2.rectangle(img, (x,y), (x+w, y+h), (255,0,0), 2)\n\nx,y\u304c\u77e9\u5f62\u306e\u5de6\u4e0a\u306e\u305d\u308c\u305e\u308cx,y\u5ea7\u6a19\u3092\u793a\u3057\u3066\u3044\u3066\u3001w,h\u306f\u305d\u308c\u305e\u308c\u5e45\u3068\u9ad8\u3055\u3092\u793a\u3057\u3066\u3044\u308b\u3093\u3060\u3051\u308c\u3069\u3001OpenCV\u3067\u753b\u50cf(img)\u4e2d\u306b\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u6642\u306b\u306f\u3001\u5de6\u4e0a\u306ex,y\u5ea7\u6a19\u3068\u53f3\u4e0b\u306ex,y\u5ea7\u6a19\u304c\u305d\u308c\u305e\u308c\u5fc5\u8981\u306a\u306e\u3067\u3001(x,y), (x+w,y+h)\u3068\u3044\u3046\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\nplt.imshow( cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\nplt.show()\n\n\u6700\u5f8c\u306b\u77e9\u5f62\u3092\u66f8\u304d\u3053\u3093\u3060\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u3093\u3060\u3051\u308c\u3069\u3001OpenCV\u306eimread()\u3067\u8aad\u307f\u8fbc\u3093\u3060\u30ab\u30e9\u30fc\u753b\u50cf\u306f\u4f55\u6545\u304bBGR\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u3001\u753b\u50cf\u8868\u793a\u306e\u305f\u3081\u306b\u4f7f\u3046matplotlib\u306epyplot\u3067\u306fRGB\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001plt.imshow()\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u969b\u306b\u3001cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\u3067\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\u3061\u306a\u307f\u306b\u3001\u9854\u306f\u8907\u6570\u3042\u3063\u3066\u3082OK\u306a\u3088\u3046\u306b\u3001for (x,y,w,h) in faces: \u306e\u3088\u3046\u306b\u53d7\u3051\u3066\u3044\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u3061\u3087\u3046\u3069\u3044\u3044\u611f\u3058\u306e\u8457\u4f5c\u6a29\u3068\u304b\u8096\u50cf\u6a29\u304c\u30a6\u30e4\u30e0\u30e4\u306a\u96c6\u5408\u5199\u771f\u307f\u305f\u3044\u306a\u306e\u304c\u624b\u5143\u306b\u7121\u3044\u306e\u3067\u3001\u8a66\u305b\u306a\u3044\u306a\u3002\nimport os\nimport cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\ndef facedetect(file):\n    face_cascade = cv2.CascadeClassifier('haarcascades/haarcascade_frontalface_default.xml')\n    img = cv2.imread(file)\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    faces = face_cascade.detectMultiScale(gray, 1.3, 5)\n    for (x, y, w, h) in faces:\n        cv2.rectangle(img, (x,y), (x+w, y+h), (255,0,0), 2)\n    plt.imshow( cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n    plt.show()\n\nif __name__ == '__main__':\n    lenna = \"4.2.04.tiff\"\n    if os.path.exists(lenna):\n        facedetect(lenna)\n\n\n\n\u773c\u8a8d\u8b58\u3082\u3067\u304d\u308b\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306b\u306f\u3001\u9854\u8a8d\u8b58\u306e\u5f8c\u3067\u773c\u8a8d\u8b58\u3092\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3082\u8f09\u3063\u3066\u3044\u308b\u3002\n\u9854\u304c\u3042\u3063\u305f\u3089\u773c\u304c\u3042\u308b\u3088\u306d\u3001\u9854\u3058\u3083\u306a\u3044\u3068\u3053\u308d\u306b\u306f\u773c\u306f\u7121\u3044\u3088\u306d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u9854\u8a8d\u8b58\u3057\u305f\u77e9\u5f62\u306e\u4e2d\u3092\u5bfe\u8c61\u306b\u773c\u8a8d\u8b58\u3092\u8d70\u3089\u305b\u308b\u3088\u3046\u306b\u5de5\u592b\u3055\u308c\u3066\u3044\u308b\u3002\nfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n    for (x,y,w,h) in faces:\n        cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)\n        roi_gray = gray[y:y+h, x:x+w]\n        roi_color = img[y:y+h, x:x+w]\n        eyes = eye_cascade.detectMultiScale(roi_gray)\n        for (ex,ey,ew,eh) in eyes:\n            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)\n\n\u554f\u984c\u306f\u3001\u300cHaar\u7279\u5fb4\u91cf\u306b\u57fa\u3065\u304fCascade\u8b58\u5225\u5668\u300d\u306b\u95a2\u3057\u3066\u3001\u4f55\u3082\u5206\u304b\u3089\u306a\u304f\u3066\u3001detectMultiScale()\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u8aac\u660e\u304c\u5168\u7136\u7406\u89e3\u3067\u304d\u306a\u3044\u3053\u3068\u3060\u3063\u305f\u308a\u3059\u308b\u3002\u3068\u306f\u3044\u3048\u3001\u7c21\u5358\u3067\u7d20\u6674\u3089\u3057\u3044\u3002\n\u3055\u3066\u3001\u540c\u69d8\u306b\u4f55\u304b\u3092\u753b\u50cf\u304b\u3089\u8b58\u5225\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u3053\u306eCascade\u8b58\u5225\u5668\u3092\u3061\u3083\u3093\u3068\u4f5c\u308b\u3088\u3046\u306b\u306a\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u305d\u308c\u306f\u307e\u305f\u5225\u306e\u8a71\u3060\u306a\u3002\n\n\u4eca\u56de\u306e\u30b3\u30fc\u30c9\n\nhttps://github.com/fukuit/Python_SelfLearning/blob/master/face_detect.py\n\n\nPython + OpenCV\u3067\u306e\u753b\u50cf\u51e6\u7406\u3092\u8abf\u3079\u305f\u3064\u3064\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u659c\u3081\u8aad\u307f\u3057\u3066\u3044\u305f\u3089\u3001[\u9854\u8a8d\u8b58\u306b\u95a2\u3059\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://docs.opencv.org/trunk/d7/d8b/tutorial_py_face_detection.html)\u304c\u3042\u3063\u305f\u3002\u6700\u8fd1\u3001\u4eba\u306e\u9854\u3092\u899a\u3048\u3089\u308c\u306a\u304f\u306a\u3063\u3066\u304d\u3066\u3044\u308b\u30ef\u30bf\u30af\u30b7\u3092\u52a9\u3051\u3066\u304f\u308c\u305d\u3046\u306a\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3067\u3042\u308b\u3002\n\n# Haar Cascades\u3092\u7528\u3044\u305f\u9854\u8a8d\u8b58\n\n\u3053\u306e\u8fba\u308a\u306e\u6a5f\u68b0\u5b66\u7fd2\u306e\u3053\u3068\u306f\u8a73\u3057\u304f\u306f\u826f\u304f\u5206\u304b\u3089\u306a\u3044\u3093\u3060\u3051\u308c\u3069\u3001\u7c21\u5358\u306b\u8a00\u3046\u3068\u9854\u3058\u3083\u306a\u3044\u753b\u50cf\u3068\u9854\u753b\u50cf\u3092\u4f7f\u3063\u3066Haar\u7279\u5fb4\u91cf\u304b\u3089\u9854\u3092\u5224\u5225\u3067\u304d\u308b\u3088\u3046\u306b\u8a13\u7df4\u3059\u308b\u3002\u305d\u306e\u7d50\u679c\u3068\u3057\u3066\u8b58\u5225\u30c7\u30fc\u30bf\u304c\u3067\u304d\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u8b58\u5225\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u4f7f\u3063\u3066\u8b58\u5225\u3059\u308b\u65b9\u6cd5\u3068\u3057\u3066\u3001Cascade\u8b58\u5225\u5668\u3068\u3044\u3046\u306e\u304c\u8003\u6848\u3055\u308c\u3066\u3044\u3066\u3001OpenCV\u306e\u914d\u5e03\u7269\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u3088\u3046\u3060\u3002\n\nMac\u306eAnaconda\u306e\u5834\u5408\u306f\u3001\u300canaconda3/share/OpenCV/haarcascades\u300d\u306b\u3001Windows\u7248\u306eAnaconda\u306e\u5834\u5408\u306b\u306f\u300cAnaconda3\\Library\\etc\\haarcascades\u300d\u306e\u4e2d\u306b\u5165\u3063\u3066\u3044\u308b\u3002\n\n- haarcascade_eye.xml ... \u773c\u8a8d\u8b58\n- haarcascade_frontalface_default.xml ... \u9854\u8a8d\u8b58\n- haarcascade_smile.xml ... \u7b11\u9854\u8a8d\u8b58\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u3053\u308c\u3092\u30b3\u30d4\u30fc\u3057\u3066\u304a\u3044\u305f\u3002\u3067\u3001\u8b58\u5225\u5668\u3068\u3057\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\n```python\nface_cascade = cv2.CascadeClassifier(\u2018haarcascades/haarcascade_frontalface_default.xml\u2019)\n```\n\n\u6b21\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3002\ncv2.imread()\u306f\u3001\u7b2c\u4e8c\u5f15\u6570\u306b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u30e2\u30fc\u30c9\u3067\u8aad\u307f\u8fbc\u3093\u3067\u304f\u308c\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u6a5f\u80fd\u306f\u4f7f\u308f\u306a\u3044\u3067\u3001img\u3068\u3057\u3066\u30ab\u30e9\u30fc\u3067\u8aad\u307f\u8fbc\u3093\u3060\u5f8c\u3067\u3001cv2.cvtColor()\u3092\u4f7f\u3063\u3066\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u305f\u30b3\u30d4\u30fc\u3092\u6301\u3064\u3002\u3053\u308c\u306f\u3001\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u753b\u50cf\u3092\u4f7f\u3063\u3066\u9854\u8a8d\u8b58\u3092\u3057\u3066\u3001\u30ab\u30e9\u30fc\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u305f\u3081\u3002\n\n```python\nimg = cv2.imread(file)\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n```\n\n\u753b\u50cf\u306e\u4e2d\u3067\u9854\u3092\u63a2\u3057\u3066\u3001\u305d\u306e\u9854\u306e\u4f4d\u7f6e\u306e\u5ea7\u6a19\u3092\u623b\u3059\u3002\u3082\u3046\u8a13\u7df4\u6e08\u307f\u306e\u8b58\u5225\u30c7\u30fc\u30bf\u306b\u57fa\u3065\u3044\u3066\u8b58\u5225\u5668\u3092\u4f7f\u3046\u3060\u3051\u306a\u306e\u3067\u3001\u305f\u3063\u305f\u306e\u4e00\u884c\u3002\n\n```python\nfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n```\n\n\u9854\u3092\u63a2\u3059\u306e\u306f\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u306b\u5909\u63db\u3057\u305f\u753b\u50cf(gray)\u306e\u4e2d\u3067\u884c\u306a\u3046\u3093\u3060\u3051\u308c\u3069\u3001\u305d\u306e\u9854\u5ea7\u6a19\u306e\u4f4d\u7f6e\u306b\u57fa\u3065\u3044\u3066\u5143\u306e\u30ab\u30e9\u30fc\u753b\u50cf(img)\u306b\u3001\u9854\u3092\u56f2\u3080\u77e9\u5f62\u3092\u63cf\u753b\u3059\u308b\u3002\n\n```python\nfor (x, y, w, h) in faces:\n    cv2.rectangle(img, (x,y), (x+w, y+h), (255,0,0), 2)\n```\n\nx,y\u304c\u77e9\u5f62\u306e\u5de6\u4e0a\u306e\u305d\u308c\u305e\u308cx,y\u5ea7\u6a19\u3092\u793a\u3057\u3066\u3044\u3066\u3001w,h\u306f\u305d\u308c\u305e\u308c\u5e45\u3068\u9ad8\u3055\u3092\u793a\u3057\u3066\u3044\u308b\u3093\u3060\u3051\u308c\u3069\u3001OpenCV\u3067\u753b\u50cf(img)\u4e2d\u306b\u9577\u65b9\u5f62\u3092\u63cf\u753b\u3059\u308b\u6642\u306b\u306f\u3001\u5de6\u4e0a\u306ex,y\u5ea7\u6a19\u3068\u53f3\u4e0b\u306ex,y\u5ea7\u6a19\u304c\u305d\u308c\u305e\u308c\u5fc5\u8981\u306a\u306e\u3067\u3001(x,y), (x+w,y+h)\u3068\u3044\u3046\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```python\nplt.imshow( cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\nplt.show()\n```\n\n\u6700\u5f8c\u306b\u77e9\u5f62\u3092\u66f8\u304d\u3053\u3093\u3060\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u3093\u3060\u3051\u308c\u3069\u3001OpenCV\u306eimread()\u3067\u8aad\u307f\u8fbc\u3093\u3060\u30ab\u30e9\u30fc\u753b\u50cf\u306f\u4f55\u6545\u304bBGR\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u3001\u753b\u50cf\u8868\u793a\u306e\u305f\u3081\u306b\u4f7f\u3046matplotlib\u306epyplot\u3067\u306fRGB\u306e\u9806\u306b\u30c7\u30fc\u30bf\u304c\u4fdd\u6301\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u524d\u63d0\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001plt.imshow()\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u969b\u306b\u3001cv2.cvtColor(img, cv2.COLOR_BGR2RGB)\u3067\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u9854\u306f\u8907\u6570\u3042\u3063\u3066\u3082OK\u306a\u3088\u3046\u306b\u3001for (x,y,w,h) in faces: \u306e\u3088\u3046\u306b\u53d7\u3051\u3066\u3044\u308b\u3093\u3060\u3051\u308c\u3069\u3001\u3061\u3087\u3046\u3069\u3044\u3044\u611f\u3058\u306e\u8457\u4f5c\u6a29\u3068\u304b\u8096\u50cf\u6a29\u304c\u30a6\u30e4\u30e0\u30e4\u306a\u96c6\u5408\u5199\u771f\u307f\u305f\u3044\u306a\u306e\u304c\u624b\u5143\u306b\u7121\u3044\u306e\u3067\u3001\u8a66\u305b\u306a\u3044\u306a\u3002\n\n```python\nimport os\nimport cv2\nimport numpy as np\nfrom matplotlib import pyplot as plt\n%matplotlib inline\n\ndef facedetect(file):\n    face_cascade = cv2.CascadeClassifier('haarcascades/haarcascade_frontalface_default.xml')\n    img = cv2.imread(file)\n    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n    faces = face_cascade.detectMultiScale(gray, 1.3, 5)\n    for (x, y, w, h) in faces:\n        cv2.rectangle(img, (x,y), (x+w, y+h), (255,0,0), 2)\n    plt.imshow( cv2.cvtColor(img, cv2.COLOR_BGR2RGB))\n    plt.show()\n    \nif __name__ == '__main__':\n    lenna = \"4.2.04.tiff\"\n    if os.path.exists(lenna):\n        facedetect(lenna)\n```\n\n![20160901001.jpg](https://qiita-image-store.s3.amazonaws.com/0/15553/e616e61b-a02c-0cea-3b9b-2a32daf49f10.jpeg \"20160901001.jpg\")\n\n\n## \u773c\u8a8d\u8b58\u3082\u3067\u304d\u308b\n\n[\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb](http://docs.opencv.org/trunk/d7/d8b/tutorial_py_face_detection.html)\u306b\u306f\u3001\u9854\u8a8d\u8b58\u306e\u5f8c\u3067\u773c\u8a8d\u8b58\u3092\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3082\u8f09\u3063\u3066\u3044\u308b\u3002\n\u9854\u304c\u3042\u3063\u305f\u3089\u773c\u304c\u3042\u308b\u3088\u306d\u3001\u9854\u3058\u3083\u306a\u3044\u3068\u3053\u308d\u306b\u306f\u773c\u306f\u7121\u3044\u3088\u306d\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u9854\u8a8d\u8b58\u3057\u305f\u77e9\u5f62\u306e\u4e2d\u3092\u5bfe\u8c61\u306b\u773c\u8a8d\u8b58\u3092\u8d70\u3089\u305b\u308b\u3088\u3046\u306b\u5de5\u592b\u3055\u308c\u3066\u3044\u308b\u3002\n\n```python\nfaces = face_cascade.detectMultiScale(gray, 1.3, 5)\n    for (x,y,w,h) in faces:\n        cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)\n        roi_gray = gray[y:y+h, x:x+w]\n        roi_color = img[y:y+h, x:x+w]\n        eyes = eye_cascade.detectMultiScale(roi_gray)\n        for (ex,ey,ew,eh) in eyes:\n            cv2.rectangle(roi_color,(ex,ey),(ex+ew,ey+eh),(0,255,0),2)\n```\n\n\u554f\u984c\u306f\u3001\u300cHaar\u7279\u5fb4\u91cf\u306b\u57fa\u3065\u304fCascade\u8b58\u5225\u5668\u300d\u306b\u95a2\u3057\u3066\u3001\u4f55\u3082\u5206\u304b\u3089\u306a\u304f\u3066\u3001detectMultiScale()\u30e1\u30bd\u30c3\u30c9\u306e\u5f15\u6570\u306e\u8aac\u660e\u304c\u5168\u7136\u7406\u89e3\u3067\u304d\u306a\u3044\u3053\u3068\u3060\u3063\u305f\u308a\u3059\u308b\u3002\u3068\u306f\u3044\u3048\u3001\u7c21\u5358\u3067\u7d20\u6674\u3089\u3057\u3044\u3002\n\n\u3055\u3066\u3001\u540c\u69d8\u306b\u4f55\u304b\u3092\u753b\u50cf\u304b\u3089\u8b58\u5225\u3057\u305f\u3044\u5834\u5408\u306b\u306f\u3001\u3053\u306eCascade\u8b58\u5225\u5668\u3092\u3061\u3083\u3093\u3068\u4f5c\u308b\u3088\u3046\u306b\u306a\u3089\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u3060\u3051\u308c\u3069\u3001\u305d\u308c\u306f\u307e\u305f\u5225\u306e\u8a71\u3060\u306a\u3002\n\n## \u4eca\u56de\u306e\u30b3\u30fc\u30c9\n\n- https://github.com/fukuit/Python_SelfLearning/blob/master/face_detect.py\n", "tags": ["OpenCV", "Python"]}