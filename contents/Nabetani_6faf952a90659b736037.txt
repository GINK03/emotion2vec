{"context": " More than 1 year has passed since last update.\u7b2c\u4e94\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f( http://atnd.org/events/32979 )\u3002\n\u554f\u984c\u306f\u4e0b\u8a18 URL\u3002\nhttp://nabetani.sakura.ne.jp/hena/ord5dahimi/\n\u3067\u3002\n\u5f53\u65e5\u305d\u306e\u5834\u3067\u66f8\u3044\u305f\u3082\u306e\u3002\n\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u82e5\u5e72\u624b\u76f4\u3057\u3057\u3066\u3042\u308b\u304c\u3001\u307b\u307c\u305d\u306e\u307e\u307e\u3002\n\ndahi.c\n// use \"-std=c99\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n#include <string.h>\n\nint strength( char const * c )\n{\n    char rep = c[1];\n    char m[]=\"3456789TJQKA2o\";\n    return strchr( m, rep ) - m;\n}\nint strengthm( char const * c )\n{\n    int jo = strength( \"Jo\");\n    int cand = strength( c);\n    if ( cand == jo ){\n        return strength( c+2);\n    } else {\n        return cand;\n    }\n}\n\nchar const * dahi_1( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char const * ret=calloc( hc*3+3, 1 );\n    int fs = strength( f );\n    for( int h=0 ; h<hc ; ++h ){\n        if ( fs < strength( inHand+h*2)){\n            if ( *ret ){\n                strcat( ret, \",\");\n            }\n            strncat( ret, inHand+h*2, 2 );\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nint legal( char const * c )\n{\n    char const * end = c+strlen( c );\n    int jo = strength( \"Jo\");\n    int s=0;\n    for( char const * p=c ; p<end ; p+=2 ){\n        int sc=strength( p );\n        if ( sc==jo ){\n            continue;\n        }\n        if ( s==0 ){\n            s=sc;\n        } else {\n            if ( s!=sc ){\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\nchar const * dahi_2( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[5]={0};\n    char const * ret=calloc( hc*hc*3+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            memset( cand, 0, sizeof(cand) );\n            strncat( cand, inHand+h*2, 2);\n            strncat( cand, inHand+h1*2, 2);\n            if ( legal( cand ) && fs < strengthm( cand )){\n                if ( *ret ){\n                    strcat( ret, \",\");\n                }\n                strcat( ret, cand );\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * dahi_3( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[7]={0};\n    char const * ret=calloc( hc*hc*hc*7+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            for( int h2=0 ; h2<h1 ; ++h2 ){\n                memset( cand, 0, sizeof(cand) );\n                strncat( cand, inHand+h*2, 2);\n                strncat( cand, inHand+h1*2, 2);\n                strncat( cand, inHand+h2*2, 2);\n                if ( legal( cand ) && fs < strengthm( cand )){\n                    if ( *ret ){\n                        strcat( ret, \",\");\n                    }\n                    strcat( ret, cand );\n                }\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * dahi_4( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[9]={0};\n    char const * ret=calloc( hc*hc*hc*hc*9+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            for( int h2=0 ; h2<h1 ; ++h2 ){\n                for( int h3=0 ; h3<h2 ; ++h3 ){\n                    memset( cand, 0, sizeof(cand) );\n                    strncat( cand, inHand+h*2, 2);\n                    strncat( cand, inHand+h1*2, 2);\n                    strncat( cand, inHand+h2*2, 2);\n                    strncat( cand, inHand+h3*2, 2);\n                    if ( legal( cand ) && fs < strengthm( cand )){\n                        if ( *ret ){\n                            strcat( ret, \",\");\n                        }\n                        strcat( ret, cand );\n                    }\n                }\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * solve( char const * in )\n{\n    char * f = strdup( in ); // TODO: memory leak!\n    char * inHand = strchr( f, ',' )+1;\n    inHand[-1]=0;\n\n    int cardCount = strlen( f )/2;\n    switch( cardCount ){\n        case 1:\n            return dahi_1( f, inHand );\n        case 2:\n            return dahi_2( f, inHand );\n        case 3:\n            return dahi_3( f, inHand );\n        case 4:\n            return dahi_4( f, inHand );\n        default:\n        return strdup(\"-\");\n    }\n}\nint is_same( char const * a, char const * b )\n{\n    // \u4e0d\u5341\u5206\u306b\u3082\u7a0b\u304c\u3042\u308b\u304c\u3001\u6642\u9593\u306e\u90fd\u5408\u3067\u3053\u306e\u7a0b\u5ea6\u3067\u6211\u6162\u3057\u305f\u3002\n    return  strlen(a) == strlen(b);\n}\n\nvoid test( char const * in, char const * expected )\n{\n    char const * ac = solve( in );\n    if ( ! is_same( ac, expected) ){\n        puts( \"**FAIL**\");\n    }\n    printf( \" : %s\\n    %s\\n    %s\\n\", in, ac, expected );\n    free( ac );\n}\n\nint main()\n{\n    /*#1*/ test( \"DJ,\", \"-\" );\n    /*#2*/ test( \"H7,HK\", \"HK\" );\n    /*#17*/ test( \"JoC8,H6D7C5S9CQH9STDTCAD9S5DAS2CT\", \"CTDT,H9D9,S9D9,DACA,CTST,H9S9,DTST\" );\n    /*#22*/ test( \"D8H8S8,CQHJCJJoHQ\", \"JoCQHQ,JoHJCJ\" );\n    /*#28*/ test( \"H5C5S5D5,C7S6D6C3H7HAH6H4C6HQC9\", \"C6D6S6H6\" );\n    /*#32*/ test( \"JoS8D8H8,S9DTH9CTD9STC9CAC2\", \"H9C9D9S9\" );\n    // \u30c6\u30b9\u30c8\u306e\u5927\u534a\u3092\u7701\u7565\n    return 0;\n}\n\n\n\u30ab\u30fc\u30c9\u306e\u679a\u6570\u304c\u53ef\u5909\u3067\u3042\u308b\u3053\u3068\u306b\u5bfe\u3057\u3066\u306f\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u5bfe\u5fdc\u3059\u308b\u306e\u304c\u7b4b\u3060\u304c\u3001\n\u5236\u9650\u6642\u9593\u5185\u306b\u78ba\u5b9f\u306b\u66f8\u3051\u308b\u3082\u306e\u3092\u3068\u3044\u3046\u3053\u3068\u3067\u30b3\u30d4\u30da\u3067\u5897\u3084\u3057\u305f\u679a\u6570\u56fa\u5b9a\u306e\u95a2\u6570\u3092\uff14\u3064\u7528\u610f\u3057\u305f\u3002\n\u7121\u69d8\u3067\u3082\u3044\u3044\u304b\u3089\u307e\u305a\u52d5\u304f\u3082\u306e\u3092\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306f\u3072\u3069\u3044\u3068\u601d\u3046\u3051\u3069\u3002\n\u7b2c\u4e94\u56de\u30aa\u30d5\u30e9\u30a4\u30f3\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u3069\u3046\u66f8\u304f( http://atnd.org/events/32979 )\u3002\n\u554f\u984c\u306f\u4e0b\u8a18 URL\u3002\nhttp://nabetani.sakura.ne.jp/hena/ord5dahimi/\n\u3067\u3002\n\u5f53\u65e5\u305d\u306e\u5834\u3067\u66f8\u3044\u305f\u3082\u306e\u3002\n\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u82e5\u5e72\u624b\u76f4\u3057\u3057\u3066\u3042\u308b\u304c\u3001\u307b\u307c\u305d\u306e\u307e\u307e\u3002\n\n```C:dahi.c\n// use \"-std=c99\"\n#include <stdio.h>\n#include <stdlib.h>\n#include <memory.h>\n#include <string.h>\n\nint strength( char const * c )\n{\n    char rep = c[1];\n    char m[]=\"3456789TJQKA2o\";\n    return strchr( m, rep ) - m;\n}\nint strengthm( char const * c )\n{\n    int jo = strength( \"Jo\");\n    int cand = strength( c);\n    if ( cand == jo ){\n        return strength( c+2);\n    } else {\n        return cand;\n    }\n}\n\nchar const * dahi_1( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char const * ret=calloc( hc*3+3, 1 );\n    int fs = strength( f );\n    for( int h=0 ; h<hc ; ++h ){\n        if ( fs < strength( inHand+h*2)){\n            if ( *ret ){\n                strcat( ret, \",\");\n            }\n            strncat( ret, inHand+h*2, 2 );\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nint legal( char const * c )\n{\n    char const * end = c+strlen( c );\n    int jo = strength( \"Jo\");\n    int s=0;\n    for( char const * p=c ; p<end ; p+=2 ){\n        int sc=strength( p );\n        if ( sc==jo ){\n            continue;\n        }\n        if ( s==0 ){\n            s=sc;\n        } else {\n            if ( s!=sc ){\n                return 0;\n            }\n        }\n    }\n    return 1;\n}\nchar const * dahi_2( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[5]={0};\n    char const * ret=calloc( hc*hc*3+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            memset( cand, 0, sizeof(cand) );\n            strncat( cand, inHand+h*2, 2);\n            strncat( cand, inHand+h1*2, 2);\n            if ( legal( cand ) && fs < strengthm( cand )){\n                if ( *ret ){\n                    strcat( ret, \",\");\n                }\n                strcat( ret, cand );\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * dahi_3( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[7]={0};\n    char const * ret=calloc( hc*hc*hc*7+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            for( int h2=0 ; h2<h1 ; ++h2 ){\n                memset( cand, 0, sizeof(cand) );\n                strncat( cand, inHand+h*2, 2);\n                strncat( cand, inHand+h1*2, 2);\n                strncat( cand, inHand+h2*2, 2);\n                if ( legal( cand ) && fs < strengthm( cand )){\n                    if ( *ret ){\n                        strcat( ret, \",\");\n                    }\n                    strcat( ret, cand );\n                }\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * dahi_4( char const * f, char const * inHand )\n{\n    int hc = strlen( inHand )/2;\n    char cand[9]={0};\n    char const * ret=calloc( hc*hc*hc*hc*9+9, 1 );\n    int fs = strengthm( f );\n    for( int h=0 ; h<hc ; ++h ){\n        for( int h1=0 ; h1<h ; ++h1 ){\n            for( int h2=0 ; h2<h1 ; ++h2 ){\n                for( int h3=0 ; h3<h2 ; ++h3 ){\n                    memset( cand, 0, sizeof(cand) );\n                    strncat( cand, inHand+h*2, 2);\n                    strncat( cand, inHand+h1*2, 2);\n                    strncat( cand, inHand+h2*2, 2);\n                    strncat( cand, inHand+h3*2, 2);\n                    if ( legal( cand ) && fs < strengthm( cand )){\n                        if ( *ret ){\n                            strcat( ret, \",\");\n                        }\n                        strcat( ret, cand );\n                    }\n                }\n            }\n        }\n    }\n    if ( *ret==0 ){\n        strcat( ret, \"-\");\n    }\n    return ret;\n}\nchar const * solve( char const * in )\n{\n    char * f = strdup( in ); // TODO: memory leak!\n    char * inHand = strchr( f, ',' )+1;\n    inHand[-1]=0;\n\n    int cardCount = strlen( f )/2;\n    switch( cardCount ){\n        case 1:\n            return dahi_1( f, inHand );\n        case 2:\n            return dahi_2( f, inHand );\n        case 3:\n            return dahi_3( f, inHand );\n        case 4:\n            return dahi_4( f, inHand );\n        default:\n        return strdup(\"-\");\n    }\n}\nint is_same( char const * a, char const * b )\n{\n    // \u4e0d\u5341\u5206\u306b\u3082\u7a0b\u304c\u3042\u308b\u304c\u3001\u6642\u9593\u306e\u90fd\u5408\u3067\u3053\u306e\u7a0b\u5ea6\u3067\u6211\u6162\u3057\u305f\u3002\n    return  strlen(a) == strlen(b);\n}\n\nvoid test( char const * in, char const * expected )\n{\n    char const * ac = solve( in );\n    if ( ! is_same( ac, expected) ){\n        puts( \"**FAIL**\");\n    }\n    printf( \" : %s\\n    %s\\n    %s\\n\", in, ac, expected );\n    free( ac );\n}\n\nint main()\n{\n    /*#1*/ test( \"DJ,\", \"-\" );\n    /*#2*/ test( \"H7,HK\", \"HK\" );\n    /*#17*/ test( \"JoC8,H6D7C5S9CQH9STDTCAD9S5DAS2CT\", \"CTDT,H9D9,S9D9,DACA,CTST,H9S9,DTST\" );\n    /*#22*/ test( \"D8H8S8,CQHJCJJoHQ\", \"JoCQHQ,JoHJCJ\" );\n    /*#28*/ test( \"H5C5S5D5,C7S6D6C3H7HAH6H4C6HQC9\", \"C6D6S6H6\" );\n    /*#32*/ test( \"JoS8D8H8,S9DTH9CTD9STC9CAC2\", \"H9C9D9S9\" );\n    // \u30c6\u30b9\u30c8\u306e\u5927\u534a\u3092\u7701\u7565\n    return 0;\n}\n```\n\n\u30ab\u30fc\u30c9\u306e\u679a\u6570\u304c\u53ef\u5909\u3067\u3042\u308b\u3053\u3068\u306b\u5bfe\u3057\u3066\u306f\u518d\u5e30\u547c\u3073\u51fa\u3057\u3067\u5bfe\u5fdc\u3059\u308b\u306e\u304c\u7b4b\u3060\u304c\u3001\n\u5236\u9650\u6642\u9593\u5185\u306b\u78ba\u5b9f\u306b\u66f8\u3051\u308b\u3082\u306e\u3092\u3068\u3044\u3046\u3053\u3068\u3067\u30b3\u30d4\u30da\u3067\u5897\u3084\u3057\u305f\u679a\u6570\u56fa\u5b9a\u306e\u95a2\u6570\u3092\uff14\u3064\u7528\u610f\u3057\u305f\u3002\n\n\u7121\u69d8\u3067\u3082\u3044\u3044\u304b\u3089\u307e\u305a\u52d5\u304f\u3082\u306e\u3092\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3002\n\n\u30e1\u30e2\u30ea\u30ea\u30fc\u30af\u306f\u3072\u3069\u3044\u3068\u601d\u3046\u3051\u3069\u3002\n", "tags": ["\u3069\u3046\u66f8\u304f", "yhpg", "C"]}