{"context": "\n\n\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u3001\u30a2\u30d7\u30ea\u5185\u3067CSV\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u4f5c\u6210\u3057\u3001\n\u305d\u308c\u3092\u30e1\u30fc\u30eb\u306b\u81ea\u52d5\u6dfb\u4ed8\u3059\u308b\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3055\u305b\u3066\u3001\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u30fb\u4ef6\u540d\u30fb\u672c\u6587\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9\u306f\u3001\n\u4ee5\u4e0b\u306eURL\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002\n\u3010Swift\u3011\u30a2\u30d7\u30ea\u5185\u3067\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9\n\u307e\u305f\u3001\n\u3053\u306e\u8a18\u4e8b\u306e\u5f8c\u534a\u90e8\u5206\u306b\u5b8c\u6210\u7248\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u305f\u3081\u3001\n\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n\u3084\u308a\u65b9\n\u30fbCSV\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001csvData\u3068\u3044\u3046\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\n\u3000var csvData=[[String]]()\n\u30fbcsv\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u308b\n\u3000csvData.append([\"\u65e5\u4ed8\",\"\u30c7\u30fc\u30bf\uff11\",\"\u30c7\u30fc\u30bf\uff12\",\"\u30c7\u30fc\u30bf\uff13\",\"\u30c7\u30fc\u30bf\uff14\"])\n\u30fbsendMailWithCSV\u3068\u3044\u3046\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u547c\u3073\u51fa\u3059\nsendMailWithCSV(\"\u30e1\u30fc\u30eb\u4ef6\u540d\", message: \"\u30e1\u30fc\u30eb\u672c\u6587\", csv: csvData)\nfunc sendMailWithCSV(subject: String, message: String, csv: [[String]]) {\n\n    let mailViewController = MFMailComposeViewController()\n    mailViewController.mailComposeDelegate = self\n\n    mailViewController.setSubject(subject)\n    mailViewController.setToRecipients(toRecipients)\n    mailViewController.setCcRecipients(CcRecipients)\n    mailViewController.setBccRecipients(BccRecipients)\n    mailViewController.setMessageBody(message, isHTML: false)\n    mailViewController.addAttachmentData(imageData, mimeType: \"image/png\", fileName: \"image\")\n    mailViewController.addAttachmentData(toCSV(csv).dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false), mimeType: \"text/csv\", fileName: \"sample.csv\")\n    self.presentViewController(mailViewController, animated: true) {}\n}\n\n\n\u5b8c\u6210\n\nViewController.swift\nimport UIKit\nimport MessageUI\n\nclass ViewController: UIViewController, MFMailComposeViewControllerDelegate{\n\n    let startMailerBtn = UIButton(frame: CGRectMake(0,0,200,30))\n    var csvData=[[String]]()\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n\n        startMailerBtn.layer.position = CGPoint(x:self.view.bounds.width/2,y:self.view.bounds.height/2);\n        startMailerBtn.setTitle(\"\u30e1\u30fc\u30eb\u9001\u4fe1\", forState: .Normal)\n        startMailerBtn.setTitleColor(UIColor.blueColor(), forState: .Normal)\n        startMailerBtn.addTarget(self, action: \"onClickStartMailerBtn:\", forControlEvents: .TouchUpInside)\n        self.view.addSubview(startMailerBtn)\n\n    }\n\n    func onClickStartMailerBtn(sender: UIButton) {\n        //\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3067\u304d\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        if MFMailComposeViewController.canSendMail()==false {\n            println(\"Email Send Failed\")\n            return\n        }\n\n        //CSV\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n        csvData.append([\"\u65e5\u4ed8\",\"\u30c7\u30fc\u30bf\uff11\",\"\u30c7\u30fc\u30bf\uff12\",\"\u30c7\u30fc\u30bf\uff13\",\"\u30c7\u30fc\u30bf\uff14\"])\n        csvData.append([\"2015\u5e745\u67085\u65e5\",\"aaa\",\"bbb\",\"ccc\",\"ddd\"])\n\n        sendMailWithCSV(\"\u30e1\u30fc\u30eb\u4ef6\u540d\", message: \"\u30e1\u30fc\u30eb\u672c\u6587\", csv: csvData)\n\n    }\n\n    func sendMailWithCSV(subject: String, message: String, csv: [[String]]) {\n\n        let mailViewController = MFMailComposeViewController()\n        mailViewController.mailComposeDelegate = self\n        var toRecipients = [\"to@1gmail.com\"]\n        var CcRecipients = [\"cc@1gmail.com\"]\n        var BccRecipients = [\"Bcc1@1gamil.com\",\"Bcc2@1gmail.com\"]\n        var image = UIImage(named: \"myphoto.png\")\n        var imageData = UIImageJPEGRepresentation(image, 1.0)\n\n        mailViewController.setSubject(subject)\n        mailViewController.setToRecipients(toRecipients)\n        mailViewController.setCcRecipients(CcRecipients)\n        mailViewController.setBccRecipients(BccRecipients)\n        mailViewController.setMessageBody(message, isHTML: false)\n        mailViewController.addAttachmentData(imageData, mimeType: \"image/png\", fileName: \"image\")\n        mailViewController.addAttachmentData(toCSV(csv).dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false), mimeType: \"text/csv\", fileName: \"sample.csv\")\n        self.presentViewController(mailViewController, animated: true) {}\n    }\n\n    func toCSV(a: [[String]]) -> String {\n        return join(\"\\n\", a.map { join(\",\", $0.map { e in\n            contains(e) { contains(\"\\n\\\",\", $0) } ?\n                \"\\\"\" + e.stringByReplacingOccurrencesOfString(\"\\\"\", withString: \"\\\"\\\"\", options: nil, range: nil) + \"\\\"\" : e\n            })}) + \"\\n\"\n    }\n\n    func mailComposeController(controller: MFMailComposeViewController!, didFinishWithResult result: MFMailComposeResult, error: NSError!) {\n\n        switch result.value {\n        case MFMailComposeResultCancelled.value:\n            println(\"Email Send Cancelled\")\n            break\n        case MFMailComposeResultSaved.value:\n            println(\"Email Saved as a Draft\")\n            break\n        case MFMailComposeResultSent.value:\n            println(\"Email Sent Successfully\")\n            break\n        case MFMailComposeResultFailed.value:\n            println(\"Email Send Failed\")\n            break\n        default:\n            break\n        }\n\n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n\n}\n\n\n\u30fbCSV\u306e\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b(\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u53c2\u7167)\nfunc toCSV(a: [[String]]) -> String {\n     return join(\"\\n\", a.map { join(\",\", $0.map { e in\n         contains(e) { contains(\"\\n\\\",\", $0) } ?\n             \"\\\"\" + e.stringByReplacingOccurrencesOfString(\"\\\"\", withString: \"\\\"\\\"\", options: nil, range: nil) + \"\\\"\" : e\n            })}) + \"\\n\"\n}\n\n\u305d\u3057\u3066\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30e1\u30fc\u30eb\u753b\u9762\u306e\u4e0b\u306e\u65b9\u306bsample.csv\u3068\u3044\u3046CSV\u30d5\u30a1\u30a4\u30eb\u304c\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n\n\u30e1\u30fc\u30eb\u753b\u9762\u3067sample.csv\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u305f\u3081\u3001\n\u4e00\u5ea6\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3057\u3066\u3001\n\u53d7\u4fe1\u5148\u3067\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n\u5b8c\u6210\u7248\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/chankei1/CSVAttachedToMailer\n\u4e0a\u8a18\u306eGitHub\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b(\u3010Swift\u3011\u30a2\u30d7\u30ea\u5185\u3067\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9)\u3067\u7d39\u4ecb\u3057\u305f\u30b3\u30fc\u30c9\uff08\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u81ea\u52d5\u5165\u529b\u3084\u753b\u50cf\u8868\u793a\u306a\u3069\uff09\u3082\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\u203b\u3057\u304b\u3057\u3001\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u305f\u3081\u82e5\u5e72\u3001\n\u3000\u524d\u56de\u306e\u8a18\u4e8b\u3068\u30b3\u30fc\u30c9\u304c\u9055\u3044\u307e\u3059\u304c\u3001\n\u3000\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u3002\ngithub\u306b\u8f09\u305b\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u3053\u308c\u3067\u3001\u30a2\u30d7\u30ea\u5185\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3001\n\u30e1\u30fc\u30eb\u9001\u4fe1\u3055\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\n\u300cSwift\u306b\u3088\u308bCSV\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u65b9\u6cd5\u300d\nURL\uff1ahttp://ja.stackoverflow.com/questions/5668/swift%E3%81%AB%E3%82%88%E3%82%8Bcsv%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95\n\u300c[iPhone\u30a2\u30d7\u30ea/Swift]csv\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65b9\u6cd5\u300d\nURL\uff1ahttps://teratail.com/questions/6070\n\u300c[Swift]\u30d5\u30a1\u30a4\u30eb\u3092\u30e1\u30fc\u30eb\u306b\u81ea\u52d5\u6dfb\u4ed8\u3055\u305b\u308b\u65b9\u6cd5\u300d\nURL\uff1ahttps://teratail.com/questions/6071\n#\u306f\u3058\u3081\u306b\n\u4eca\u56de\u306f\u3001\u30a2\u30d7\u30ea\u5185\u3067CSV\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u4f5c\u6210\u3057\u3001\n\u305d\u308c\u3092\u30e1\u30fc\u30eb\u306b\u81ea\u52d5\u6dfb\u4ed8\u3059\u308b\u3084\u308a\u65b9\u3092\u307e\u3068\u3081\u307e\u3057\u305f\u3002\n\n\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3055\u305b\u3066\u3001\n\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u30fb\u4ef6\u540d\u30fb\u672c\u6587\u306a\u3069\u3092\u6307\u5b9a\u3057\u3066\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9\u306f\u3001\n\u4ee5\u4e0b\u306eURL\u306b\u307e\u3068\u3081\u3066\u3042\u308a\u307e\u3059\u3002\n[\u3010Swift\u3011\u30a2\u30d7\u30ea\u5185\u3067\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9](http://qiita.com/kobaboi/items/60a2f44ad53675cfa0ae)\n\u307e\u305f\u3001\n\u3053\u306e\u8a18\u4e8b\u306e\u5f8c\u534a\u90e8\u5206\u306b\u5b8c\u6210\u7248\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u304c\u3042\u308b\u305f\u3081\u3001\n\u305d\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u3082\u69cb\u3044\u307e\u305b\u3093\u3002\n\n#\u3084\u308a\u65b9\n\u30fbCSV\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306b\u3001**csvData**\u3068\u3044\u3046\u5909\u6570\u3092\u5b9a\u7fa9\u3059\u308b\n\u3000`var csvData=[[String]]()`\n\n\u30fbcsv\u306b\u30c7\u30fc\u30bf\u3092\u5165\u308c\u308b\n\u3000`csvData.append([\"\u65e5\u4ed8\",\"\u30c7\u30fc\u30bf\uff11\",\"\u30c7\u30fc\u30bf\uff12\",\"\u30c7\u30fc\u30bf\uff13\",\"\u30c7\u30fc\u30bf\uff14\"])`\n\n\u30fb**sendMailWithCSV**\u3068\u3044\u3046\u95a2\u6570\u3092\u4f5c\u6210\u3057\u3001\u547c\u3073\u51fa\u3059\n`sendMailWithCSV(\"\u30e1\u30fc\u30eb\u4ef6\u540d\", message: \"\u30e1\u30fc\u30eb\u672c\u6587\", csv: csvData)`\n\n```swift\nfunc sendMailWithCSV(subject: String, message: String, csv: [[String]]) {\n        \n    let mailViewController = MFMailComposeViewController()\n    mailViewController.mailComposeDelegate = self\n    \n    mailViewController.setSubject(subject)\n    mailViewController.setToRecipients(toRecipients)\n    mailViewController.setCcRecipients(CcRecipients)\n    mailViewController.setBccRecipients(BccRecipients)\n    mailViewController.setMessageBody(message, isHTML: false)\n    mailViewController.addAttachmentData(imageData, mimeType: \"image/png\", fileName: \"image\")\n    mailViewController.addAttachmentData(toCSV(csv).dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false), mimeType: \"text/csv\", fileName: \"sample.csv\")\n    self.presentViewController(mailViewController, animated: true) {}\n}\n```\n\n##\u5b8c\u6210\n\n```ViewController.swift\nimport UIKit\nimport MessageUI\n\nclass ViewController: UIViewController, MFMailComposeViewControllerDelegate{\n\n    let startMailerBtn = UIButton(frame: CGRectMake(0,0,200,30))\n    var csvData=[[String]]()\n    \n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n        \n        startMailerBtn.layer.position = CGPoint(x:self.view.bounds.width/2,y:self.view.bounds.height/2);\n        startMailerBtn.setTitle(\"\u30e1\u30fc\u30eb\u9001\u4fe1\", forState: .Normal)\n        startMailerBtn.setTitleColor(UIColor.blueColor(), forState: .Normal)\n        startMailerBtn.addTarget(self, action: \"onClickStartMailerBtn:\", forControlEvents: .TouchUpInside)\n        self.view.addSubview(startMailerBtn)\n        \n    }\n\n    func onClickStartMailerBtn(sender: UIButton) {\n        //\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3067\u304d\u308b\u304b\u30c1\u30a7\u30c3\u30af\n        if MFMailComposeViewController.canSendMail()==false {\n            println(\"Email Send Failed\")\n            return\n        }\n        \n        //CSV\u30c7\u30fc\u30bf\u306e\u4f5c\u6210\n        csvData.append([\"\u65e5\u4ed8\",\"\u30c7\u30fc\u30bf\uff11\",\"\u30c7\u30fc\u30bf\uff12\",\"\u30c7\u30fc\u30bf\uff13\",\"\u30c7\u30fc\u30bf\uff14\"])\n        csvData.append([\"2015\u5e745\u67085\u65e5\",\"aaa\",\"bbb\",\"ccc\",\"ddd\"])\n        \n        sendMailWithCSV(\"\u30e1\u30fc\u30eb\u4ef6\u540d\", message: \"\u30e1\u30fc\u30eb\u672c\u6587\", csv: csvData)\n        \n    }\n    \n    func sendMailWithCSV(subject: String, message: String, csv: [[String]]) {\n        \n        let mailViewController = MFMailComposeViewController()\n        mailViewController.mailComposeDelegate = self\n        var toRecipients = [\"to@1gmail.com\"]\n        var CcRecipients = [\"cc@1gmail.com\"]\n        var BccRecipients = [\"Bcc1@1gamil.com\",\"Bcc2@1gmail.com\"]\n        var image = UIImage(named: \"myphoto.png\")\n        var imageData = UIImageJPEGRepresentation(image, 1.0)\n        \n        mailViewController.setSubject(subject)\n        mailViewController.setToRecipients(toRecipients)\n        mailViewController.setCcRecipients(CcRecipients)\n        mailViewController.setBccRecipients(BccRecipients)\n        mailViewController.setMessageBody(message, isHTML: false)\n        mailViewController.addAttachmentData(imageData, mimeType: \"image/png\", fileName: \"image\")\n        mailViewController.addAttachmentData(toCSV(csv).dataUsingEncoding(NSUTF8StringEncoding, allowLossyConversion: false), mimeType: \"text/csv\", fileName: \"sample.csv\")\n        self.presentViewController(mailViewController, animated: true) {}\n    }\n    \n    func toCSV(a: [[String]]) -> String {\n        return join(\"\\n\", a.map { join(\",\", $0.map { e in\n            contains(e) { contains(\"\\n\\\",\", $0) } ?\n                \"\\\"\" + e.stringByReplacingOccurrencesOfString(\"\\\"\", withString: \"\\\"\\\"\", options: nil, range: nil) + \"\\\"\" : e\n            })}) + \"\\n\"\n    }\n    \n    func mailComposeController(controller: MFMailComposeViewController!, didFinishWithResult result: MFMailComposeResult, error: NSError!) {\n        \n        switch result.value {\n        case MFMailComposeResultCancelled.value:\n            println(\"Email Send Cancelled\")\n            break\n        case MFMailComposeResultSaved.value:\n            println(\"Email Saved as a Draft\")\n            break\n        case MFMailComposeResultSent.value:\n            println(\"Email Sent Successfully\")\n            break\n        case MFMailComposeResultFailed.value:\n            println(\"Email Send Failed\")\n            break\n        default:\n            break\n        }\n        \n        self.dismissViewControllerAnimated(true, completion: nil)\n    }\n    \n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n\n}\n```\n\n\n\u30fbCSV\u306e\u6587\u5b57\u5217\u3092\u4f5c\u6210\u3059\u308b(\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u53c2\u7167)\n\n```swift\nfunc toCSV(a: [[String]]) -> String {\n     return join(\"\\n\", a.map { join(\",\", $0.map { e in\n         contains(e) { contains(\"\\n\\\",\", $0) } ?\n             \"\\\"\" + e.stringByReplacingOccurrencesOfString(\"\\\"\", withString: \"\\\"\\\"\", options: nil, range: nil) + \"\\\"\" : e\n            })}) + \"\\n\"\n}\n```\n\u305d\u3057\u3066\u3001\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5b9f\u884c\u7d50\u679c\u306b\u306a\u308a\u307e\u3059\u3002\n![re1.png](https://qiita-image-store.s3.amazonaws.com/0/75241/bf2c2d98-5cfe-e761-9abf-bc75b09c65f4.png)\n\n\u30e1\u30fc\u30eb\u753b\u9762\u306e\u4e0b\u306e\u65b9\u306b**sample.csv**\u3068\u3044\u3046CSV\u30d5\u30a1\u30a4\u30eb\u304c\u6dfb\u4ed8\u3055\u308c\u3066\u3044\u308b\u306e\u304c\u78ba\u8a8d\u51fa\u6765\u307e\u3059\u3002\n![re2.png](https://qiita-image-store.s3.amazonaws.com/0/75241/eb3a8f11-c56f-f736-2f04-806a4af85e5c.png)\n\n\u30e1\u30fc\u30eb\u753b\u9762\u3067**sample.csv**\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u306a\u3044\u305f\u3081\u3001\n\u4e00\u5ea6\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3057\u3066\u3001\n\u53d7\u4fe1\u5148\u3067\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n#\u5b8c\u6210\u7248\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\nhttps://github.com/chankei1/CSVAttachedToMailer\n\u4e0a\u8a18\u306eGitHub\u306b\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b([\u3010Swift\u3011\u30a2\u30d7\u30ea\u5185\u3067\u30e1\u30fc\u30e9\u30fc\u3092\u8d77\u52d5\u3057\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u3084\u308a\u65b9](http://qiita.com/kobaboi/items/60a2f44ad53675cfa0ae))\u3067\u7d39\u4ecb\u3057\u305f\u30b3\u30fc\u30c9\uff08\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u306e\u81ea\u52d5\u5165\u529b\u3084\u753b\u50cf\u8868\u793a\u306a\u3069\uff09\u3082\u542b\u3093\u3067\u3044\u307e\u3059\u3002\n\n\u203b\u3057\u304b\u3057\u3001\u95a2\u6570\u3092\u4f7f\u7528\u3057\u305f\u305f\u3081\u82e5\u5e72\u3001\n\u3000\u524d\u56de\u306e\u8a18\u4e8b\u3068\u30b3\u30fc\u30c9\u304c\u9055\u3044\u307e\u3059\u304c\u3001\n\u3000\u5b9f\u884c\u7d50\u679c\u306f\u540c\u3058\u3067\u3059\u3002\n\ngithub\u306b\u8f09\u305b\u3066\u3044\u308b\u30b3\u30fc\u30c9\u306f\u4eca\u56de\u4f7f\u7528\u3057\u305f\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n#\u304a\u308f\u308a\u306b\n\u3053\u308c\u3067\u3001\u30a2\u30d7\u30ea\u5185\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u3092CSV\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u3066\u3001\n\u30e1\u30fc\u30eb\u9001\u4fe1\u3055\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3057\u305f\u3002\n\n\n#\u53c2\u8003\u30b5\u30a4\u30c8\n\u300cSwift\u306b\u3088\u308bCSV\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u65b9\u6cd5\u300d\nURL\uff1ahttp://ja.stackoverflow.com/questions/5668/swift%E3%81%AB%E3%82%88%E3%82%8Bcsv%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%81%AE%E7%94%9F%E6%88%90%E6%96%B9%E6%B3%95\n\u300c[iPhone\u30a2\u30d7\u30ea/Swift]csv\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u65b9\u6cd5\u300d\nURL\uff1ahttps://teratail.com/questions/6070\n\u300c[Swift]\u30d5\u30a1\u30a4\u30eb\u3092\u30e1\u30fc\u30eb\u306b\u81ea\u52d5\u6dfb\u4ed8\u3055\u305b\u308b\u65b9\u6cd5\u300d\nURL\uff1ahttps://teratail.com/questions/6071\n", "tags": ["Swift", "Xcode6.3", "CSV", "\u30e1\u30fc\u30eb\u9001\u4fe1"]}