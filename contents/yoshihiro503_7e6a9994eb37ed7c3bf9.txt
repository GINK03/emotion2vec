{"context": " More than 1 year has passed since last update.%\u306a\u305cCoq\u304c\u91cd\u8981\u304b\n%@yoshihiro503\n%\u5e73\u621026\u5e744\u670829\u65e5\n\n\u306a\u305cCoq\u304c\u91cd\u8981\u304b\n\u7d50\u8ad6\n\n\u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\n\u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\n\n\n\u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\nCoq\u306f\u6700\u5f37\u306e\u8868\u73fe\u529b\u3092\u6301\u3064\u4ed5\u69d8\u8a18\u8ff0\u8a00\u8a9e\u3092\u4f7f\u3046\n\n\n\u4ed5\u69d8\u8a18\u8ff0\u8a00\u8a9e\u306f\u691c\u8a3c\u3057\u305f\u3044\u3053\u3068 \u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8a00\u8a9e\n\u8868\u73fe\u529b\u306f\u691c\u8a3c\u5668\u306b\u3088\u3063\u3066\u5168\u7136\u9055\u3046\n\u8868\u73fe\u3067\u304d\u308b\u7bc4\u56f2\u304c\u3001\u691c\u8a3c\u5668\u306e\u9650\u754c\nCoq\u306e\u305d\u308c\u306f\u9ad8\u968e\u8ff0\u8a9e\u8ad6\u7406 \u2190 \u6700\u5f37\n\n\n\u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\nCoq\u3092\u4f7f\u3046\u305f\u3081\u306b\u306fPhD\u304c\u5fc5\u8981?\n\n\u9ad8\u6821\u751f\u3067\u3082\u7df4\u7fd2\u3059\u308c\u3070\u3067\u304d\u308b (c.f. \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0Coq)\n\n\n\u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\n\u8a3c\u660e\u3092\u4eba\u9593\u304c\u4e0e\u3048\u308b\u306e\u304c\u5927\u5909\uff1f\n\n\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u306b\u3088\u308b\u81ea\u52d5\u5316\u306fOCaml\u3067\u3044\u304f\u3089\u3067\u3082\u53ef\u80fd\n\u578b\u30c1\u30a7\u30c3\u30ab\u306f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3068\u72ec\u7acb\u306a\u306e\u3067\u5b89\u5168\n\u65e2\u306bomega\u306a\u3069\u306e\u81ea\u52d5\u8a3c\u660e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\u305f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3042\u308a\n\n\n\u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\nCoq\u306f(\u578b\u306e\u8868\u73fe\u529b\u304c)\u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\n\n\u578b\u306e\u8868\u73fe\u529b\u304c\u6700\u5f37\n\u578b\u63a8\u8ad6\u306f\u5b8c\u5168\u3067\u306f\u306a\u3044\n\u505c\u6b62\u6027\u306f\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n\u6ce8\u610f: \u3053\u3053\u3067\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3068\u306f\n   (\u30e9\u30e0\u30c0\u8a08\u7b97\u3092\u57fa\u790e\u3068\u3057\u305f)(\u9759\u7684\u578b\u4ed8\u304d)\u95a2\u6570\u578b(\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0)\u8a00\u8a9e\n\nCoq\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nUnix\u7cfb \u30bd\u30fc\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nOCaml, camlp5\u5fc5\u8981\n./configure; make world; make install\n\n\nDebian\u7cfb\n\napt-get install coq\n\n\nopam\u30e6\u30fc\u30b6\u30fc\n\nopam install coq\n\n\nCoq\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nWindows, Mac OS X\n\n\u30d0\u30a4\u30ca\u30ea(CoqIDE\u4ed8\u5c5e)\nLinux VM\u3092\u5165\u308c\u308b\n\n\nCoq\u3092\u4f7f\u3046\n\n\u62e1\u5f35\u5b50\u306f.v\n\u5927\u6587\u5b57\u3067\u59cb\u307e\u308b\u306e\u304cCoq\u30b3\u30de\u30f3\u30c9(Vernacular)\n(\u4f8b: Definition, Theorem, Require Import)\n\u5c0f\u6587\u5b57\u3067\u59cb\u307e\u308b\u306e\u304c\u30bf\u30af\u30c6\u30a3\u30c3\u30af\n(\u4f8b: intros, omega, destruct, rewrite)\n\n\u4e00\u89a7: http://coq.inria.fr/distrib/current/refman/\n\nCoq\u306e\u57fa\u672c\nCoq\u3067\u306f\u3044\u308d\u3093\u306a\u30e2\u30ce\u304c\u5f0f\n\n\u6570\u5024\u3001\u6587\u5b57\u5217\u3001if\u5f0f\u3001match\u5f0f\n\u95a2\u6570\n\u578b\n\u8ad6\u7406\u5f0f(\u4ed5\u69d8)\n\u8a3c\u660e\n\n\nCoq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\u300c\u3042\u308b\u8ad6\u7406\u5f0fP\u3092Coq\u3067\u8a3c\u660e\u3059\u308b\u300d \u2261 \u300c(a : P)\u3068\u306a\u308b\u5f0fa\u3092\u898b\u3064\u3051\u308b\u300d\n\u2606 a \u3092P\u306e\u8a3c\u660e\u3068\u547c\u3076\n\nCoq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\u4f8b\u3048\u3070\u3001\n\u300c\u4efb\u610f\u306ef, xs\u306b\u3064\u3044\u3066\u3001(map f xs)\u306e\u9577\u3055\u3068xs\u306e\u9577\u3055\u306f\u540c\u3058\u300d\n\u3092\u8a3c\u660e\u3059\u308b\u305f\u3081\u306b\u306f\n??? : forall f xs, length (map f xs) = length xs\n\u3068\u306a\u308b\u5f0f\u3092\u898b\u3064\u3051\u308c\u3070\u3088\u3044\u3002\n\nfun (A B : Type) (f : A -> B) (xs : list A) =>\nlist_ind (fun xs0 : list A => length (map f xs0) = length xs0) eq_refl\n  (fun (_ : A) (xs0 : list A) (IHxs : length (map f xs0) = length xs0) =>\n   eq_ind_r (fun n : nat => S n = S (length xs0)) eq_refl IHxs) xs\n\n\nCoq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\u5b9f\u969b\u306f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3092\u8a66\u3057\u306a\u304c\u3089\u3001\u5bfe\u8a71\u7684\u306b\u30b4\u30fc\u30eb\u3092\u5909\u5f62\u3057\u3066\u3044\u304f\u3002\nTheorem map_length: forall A B:Type f xs,\n  length (map f xs) = length xs.\nProof.\n intros A B f xs. induction xs.\n  reflexivity.\n\n  simpl. rewrite IHxs. reflexivity.\nQed.\n\n%\u306a\u305cCoq\u304c\u91cd\u8981\u304b\n%@yoshihiro503\n%\u5e73\u621026\u5e744\u670829\u65e5\n\n# \u306a\u305cCoq\u304c\u91cd\u8981\u304b\n\n\u7d50\u8ad6\n\n* \u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\n* \u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\n\n# \u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\n\nCoq\u306f\u6700\u5f37\u306e\u8868\u73fe\u529b\u3092\u6301\u3064\u4ed5\u69d8\u8a18\u8ff0\u8a00\u8a9e\u3092\u4f7f\u3046\n\n* **\u4ed5\u69d8\u8a18\u8ff0\u8a00\u8a9e**\u306f*\u691c\u8a3c\u3057\u305f\u3044\u3053\u3068* \u3092\u8a18\u8ff0\u3059\u308b\u305f\u3081\u306e\u8a00\u8a9e\n* \u8868\u73fe\u529b\u306f\u691c\u8a3c\u5668\u306b\u3088\u3063\u3066\u5168\u7136\u9055\u3046\n* \u8868\u73fe\u3067\u304d\u308b\u7bc4\u56f2\u304c\u3001\u691c\u8a3c\u5668\u306e\u9650\u754c\n* Coq\u306e\u305d\u308c\u306f\u9ad8\u968e\u8ff0\u8a9e\u8ad6\u7406 \u2190 \u6700\u5f37\n\n# \u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\nCoq\u3092\u4f7f\u3046\u305f\u3081\u306b\u306fPhD\u304c\u5fc5\u8981?\n\n* \u9ad8\u6821\u751f\u3067\u3082\u7df4\u7fd2\u3059\u308c\u3070\u3067\u304d\u308b (c.f. \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0Coq)\n\n# \u6700\u5f37\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u691c\u8a3c\u5668\n\u8a3c\u660e\u3092\u4eba\u9593\u304c\u4e0e\u3048\u308b\u306e\u304c\u5927\u5909\uff1f\n\n* \u30bf\u30af\u30c6\u30a3\u30c3\u30af\u306b\u3088\u308b\u81ea\u52d5\u5316\u306fOCaml\u3067\u3044\u304f\u3089\u3067\u3082\u53ef\u80fd\n* \u578b\u30c1\u30a7\u30c3\u30ab\u306f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3068\u72ec\u7acb\u306a\u306e\u3067\u5b89\u5168\n* \u65e2\u306bomega\u306a\u3069\u306e\u81ea\u52d5\u8a3c\u660e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u5b9f\u88c5\u3057\u305f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3042\u308a\n\n# \u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\n\nCoq\u306f(\u578b\u306e\u8868\u73fe\u529b\u304c)\u6700\u5f37\u306e\u95a2\u6570\u578b\u8a00\u8a9e\n\n* \u578b\u306e\u8868\u73fe\u529b\u304c\u6700\u5f37\n* \u578b\u63a8\u8ad6\u306f\u5b8c\u5168\u3067\u306f\u306a\u3044\n* \u505c\u6b62\u6027\u306f\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\n\n\u6ce8\u610f: \u3053\u3053\u3067\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3068\u306f<br/>\n   (\u30e9\u30e0\u30c0\u8a08\u7b97\u3092\u57fa\u790e\u3068\u3057\u305f)(\u9759\u7684\u578b\u4ed8\u304d)\u95a2\u6570\u578b(\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0)\u8a00\u8a9e\n\n# Coq\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n## Unix\u7cfb \u30bd\u30fc\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* OCaml, camlp5\u5fc5\u8981\n* ./configure; make world; make install\n\n## Debian\u7cfb\n* apt-get install coq\n\n## opam\u30e6\u30fc\u30b6\u30fc\n* opam install coq\n\n# Coq\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n## Windows, Mac OS X\n* \u30d0\u30a4\u30ca\u30ea(CoqIDE\u4ed8\u5c5e)\n* Linux VM\u3092\u5165\u308c\u308b\n\n\n\n# Coq\u3092\u4f7f\u3046\n* \u62e1\u5f35\u5b50\u306f.v\n* \u5927\u6587\u5b57\u3067\u59cb\u307e\u308b\u306e\u304cCoq\u30b3\u30de\u30f3\u30c9(Vernacular)<br />\n(\u4f8b: Definition, Theorem, Require Import)\n* \u5c0f\u6587\u5b57\u3067\u59cb\u307e\u308b\u306e\u304c\u30bf\u30af\u30c6\u30a3\u30c3\u30af<br />\n(\u4f8b: intros, omega, destruct, rewrite)\n\n\u4e00\u89a7: <http://coq.inria.fr/distrib/current/refman/>\n\n# Coq\u306e\u57fa\u672c\nCoq\u3067\u306f\u3044\u308d\u3093\u306a\u30e2\u30ce\u304c\u5f0f\n\n* \u6570\u5024\u3001\u6587\u5b57\u5217\u3001if\u5f0f\u3001match\u5f0f\n* \u95a2\u6570\n* \u578b\n* \u8ad6\u7406\u5f0f(\u4ed5\u69d8)\n* \u8a3c\u660e\n\n# Coq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\u300c\u3042\u308b\u8ad6\u7406\u5f0fP\u3092Coq\u3067\u8a3c\u660e\u3059\u308b\u300d \u2261 \u300c(a : P)\u3068\u306a\u308b\u5f0fa\u3092\u898b\u3064\u3051\u308b\u300d\n\n\u2606 a \u3092P\u306e\u8a3c\u660e\u3068\u547c\u3076\n\n# Coq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\n\u4f8b\u3048\u3070\u3001\n\n\u300c\u4efb\u610f\u306ef, xs\u306b\u3064\u3044\u3066\u3001(map f xs)\u306e\u9577\u3055\u3068xs\u306e\u9577\u3055\u306f\u540c\u3058\u300d\n\n\u3092\u8a3c\u660e\u3059\u308b\u305f\u3081\u306b\u306f\n\n??? : forall f xs, length (map f xs) = length xs\n\n\u3068\u306a\u308b\u5f0f\u3092\u898b\u3064\u3051\u308c\u3070\u3088\u3044\u3002\n\n<sub><pre><code>\nfun (A B : Type) (f : A -> B) (xs : list A) =>\nlist_ind (fun xs0 : list A => length (map f xs0) = length xs0) eq_refl\n  (fun (_ : A) (xs0 : list A) (IHxs : length (map f xs0) = length xs0) =>\n   eq_ind_r (fun n : nat => S n = S (length xs0)) eq_refl IHxs) xs\n</code></pre></sub>\n\n# Coq\u3067\u8a3c\u660e\u3059\u308b\u3068\u3044\u3046\u4e8b\n\u5b9f\u969b\u306f\u30bf\u30af\u30c6\u30a3\u30c3\u30af\u3092\u8a66\u3057\u306a\u304c\u3089\u3001\u5bfe\u8a71\u7684\u306b\u30b4\u30fc\u30eb\u3092\u5909\u5f62\u3057\u3066\u3044\u304f\u3002\n\n```coq\nTheorem map_length: forall A B:Type f xs,\n  length (map f xs) = length xs.\nProof.\n intros A B f xs. induction xs.\n  reflexivity.\n\n  simpl. rewrite IHxs. reflexivity.\nQed.\n```\n", "tags": ["Coq"]}