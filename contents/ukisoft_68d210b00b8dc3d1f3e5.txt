{"context": " More than 1 year has passed since last update.\u524d\u56de\u306e\u8a18\u4e8b\u306f\u30b3\u30c1\u30e9\uff08Fence Repair\uff09\u3002\nrana_kualu\u3055\u3093\u306b\u3001SplPriorityQueue\u3068\u3044\u3046\u512a\u5148\u9806\u4f4d\u3064\u304d\u30ad\u30e5\u30fc\u3092\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u500b\u4eba\u7684\u306a\u30dd\u30a4\u30f3\u30c8\uff1f\u306f\u3001\u512a\u5148\u5ea6\u306e\u5024\u304c\u5927\u304d\u3044\u307b\u3046\u304c\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u3053\u3068\uff08\uff11\u304c\u6700\u3082\u9ad8\u3044\u308f\u3051\u3067\u306f\u306a\u3044\uff09\u3068\u3001extract\u3068top\u3092\u6df7\u540c\u3057\u306a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\nclass FenceRepair\n{\n    public static function calc($boardsLength)\n    {\n        $cost = 0;\n        $heap = new SplPriorityQueue();\n        foreach ($boardsLength as $boardLength) {\n            $heap->insert($boardLength, 1 / $boardLength);\n        }\n        while ($heap->count() > 1) {\n            $firstBoard = $heap->extract();\n            $secondBoard = $heap->extract();\n            $cost += $newBoard = $firstBoard + $secondBoard;\n            $heap->insert($newBoard, 1 / $newBoard);\n        }\n        return $cost;\n    }\n}\n\n\u3075\u3080\u3075\u3080\u3001\u30b3\u30fc\u30c9\u3082\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3057\u3001\u4fbf\u5229\u3067\u3059\u3002\n\u524d\u56de\u306e\u8a18\u4e8b\u306f[\u30b3\u30c1\u30e9\uff08Fence Repair\uff09](http://qiita.com/ukisoft/items/1600072d32ca199b0694#comment-94a746fadea60e262161)\u3002\nrana_kualu\u3055\u3093\u306b\u3001SplPriorityQueue\u3068\u3044\u3046\u512a\u5148\u9806\u4f4d\u3064\u304d\u30ad\u30e5\u30fc\u3092\u6559\u3048\u3066\u3044\u305f\u3060\u3044\u305f\u306e\u3067\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u500b\u4eba\u7684\u306a\u30dd\u30a4\u30f3\u30c8\uff1f\u306f\u3001\u512a\u5148\u5ea6\u306e\u5024\u304c\u5927\u304d\u3044\u307b\u3046\u304c\u512a\u5148\u5ea6\u304c\u9ad8\u3044\u3053\u3068\uff08\uff11\u304c\u6700\u3082\u9ad8\u3044\u308f\u3051\u3067\u306f\u306a\u3044\uff09\u3068\u3001extract\u3068top\u3092\u6df7\u540c\u3057\u306a\u3044\u3053\u3068\u3067\u3057\u3087\u3046\u304b\u3002\n\n```php\nclass FenceRepair\n{\n    public static function calc($boardsLength)\n    {\n        $cost = 0;\n        $heap = new SplPriorityQueue();\n        foreach ($boardsLength as $boardLength) {\n            $heap->insert($boardLength, 1 / $boardLength);\n        }\n        while ($heap->count() > 1) {\n            $firstBoard = $heap->extract();\n            $secondBoard = $heap->extract();\n            $cost += $newBoard = $firstBoard + $secondBoard;\n            $heap->insert($newBoard, 1 / $newBoard);\n        }\n        return $cost;\n    }\n}\n```\n\n\u3075\u3080\u3075\u3080\u3001\u30b3\u30fc\u30c9\u3082\u30b9\u30c3\u30ad\u30ea\u3057\u305f\u3057\u3001\u4fbf\u5229\u3067\u3059\u3002\n", "tags": ["PHP5.6", "\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0"]}