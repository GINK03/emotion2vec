{"context": " More than 1 year has passed since last update.\u3053\u306e\u8a18\u4e8b\u306f rustc 1.4.0 (8ab8581f6 2015-10-27) \u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4e45\u3005\u306b\u6642\u9593\u304c\u53d6\u308c\u305f\u306e\u3067Rust\u306e\u52c9\u5f37\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u666e\u6bb5\u306fPerl\u3084Ruby\u7b49\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3001Hash\u3092Rust\u3067\u3082\u4f7f\u3063\u3066\u307f\u305f\u304f\u3066\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nuse std::collections::HashMap;\n\n#[derive(Debug)]\nstruct I {\n  vec: Vec<i64>\n}\n\nfn main() {\n\n  let mut a: HashMap<i64, I> = HashMap::new();\n  let mut i = I { vec: vec!(1,2,3) };\n  a.insert(1, i );\n  let mut b = a.get(&1).unwrap();\n  b.vec.push(1);\n  println!(\"{:?}\", b);\n}\n\n\u7d50\u679c\u306f\u3001\nsrc/main.rs:14:3: 14:8 error: cannot borrow immutable field `b.vec` as mutable\nsrc/main.rs:14   b.vec.push(1);\n                 ^~~~~\nerror: aborting due to previous error\nCould not compile `test`.\n\n\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53ef\u5909\u3068\u3057\u3066\u501f\u308a\u308c\u306a\u3044\u3068\u3044\u3063\u305f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u6df7\u4e71\u3002\u3069\u3046\u3057\u3066\u3001let mut \u3067\u5024\u53d6\u5f97\u3057\u3066\u308b\u306e\u306b\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u3093\u3060\u308d\u3046\u3068\u30fb\u30fb\u30fb\u3002\n\n\u305d\u3082\u305d\u3082 HashMap\u306eget\u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3057\u304b\u8fd4\u3055\u306a\u3044\n\u3061\u3087\u3063\u3068\u9a5a\u304d\u307e\u3057\u305f\u304c\u3001get \u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u306e\u307f\u8fd4\u3059\u3088\u3046\u3067\u3059\u3002\n\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3059\u306b\u306f\u3001get_mut \u3092\u4f7f\u3046\u3068\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\u540c\u3058\u3088\u3046\u306b\u3001Vec \u3067\u306f\u3001iter\u304c \u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3057\u3001 iter_mut \u304c\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u5b66\u7fd2\u306e\u30ab\u30ae\nRust\u8a00\u8a9e\u306f\u8a00\u8a9e\u4ed5\u69d8\u304c\u307e\u3060\u307e\u3060\u3088\u304f\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u8a00\u8a9e\u306a\u306e\u3067\u3001Github\u7b49\u3067\u691c\u7d22\u3059\u308b\u3068\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\nget_mut\nGitHub::Search - get_mut\n\niter_mut\nGitHub::Search - iter_mut\n\u3053\u306e\u8a18\u4e8b\u306f `rustc 1.4.0 (8ab8581f6 2015-10-27)` \u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n## \u306f\u3058\u3081\u306b\n\u4e45\u3005\u306b\u6642\u9593\u304c\u53d6\u308c\u305f\u306e\u3067Rust\u306e\u52c9\u5f37\u3092\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u666e\u6bb5\u306fPerl\u3084Ruby\u7b49\u3067\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u305f\u306e\u3067\u3001Hash\u3092Rust\u3067\u3082\u4f7f\u3063\u3066\u307f\u305f\u304f\u3066\u4e0b\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```rust\nuse std::collections::HashMap;\n\n#[derive(Debug)]\nstruct I {\n  vec: Vec<i64>\n}\n\nfn main() {\n  \n  let mut a: HashMap<i64, I> = HashMap::new();\n  let mut i = I { vec: vec!(1,2,3) };\n  a.insert(1, i );\n  let mut b = a.get(&1).unwrap();\n  b.vec.push(1);\n  println!(\"{:?}\", b);\n}\n```\n\u7d50\u679c\u306f\u3001\n\n```bash\nsrc/main.rs:14:3: 14:8 error: cannot borrow immutable field `b.vec` as mutable\nsrc/main.rs:14   b.vec.push(1);\n                 ^~~~~\nerror: aborting due to previous error\nCould not compile `test`.\n```\n\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u53ef\u5909\u3068\u3057\u3066\u501f\u308a\u308c\u306a\u3044\u3068\u3044\u3063\u305f\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u6df7\u4e71\u3002\u3069\u3046\u3057\u3066\u3001`let mut` \u3067\u5024\u53d6\u5f97\u3057\u3066\u308b\u306e\u306b\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u3093\u3060\u308d\u3046\u3068\u30fb\u30fb\u30fb\u3002\n\n## \u305d\u3082\u305d\u3082 HashMap\u306eget\u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3057\u304b\u8fd4\u3055\u306a\u3044\n\n\u3061\u3087\u3063\u3068\u9a5a\u304d\u307e\u3057\u305f\u304c\u3001`get` \u306f\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u306e\u307f\u8fd4\u3059\u3088\u3046\u3067\u3059\u3002\n\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3059\u306b\u306f\u3001`get_mut` \u3092\u4f7f\u3046\u3068\u826f\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u540c\u3058\u3088\u3046\u306b\u3001`Vec` \u3067\u306f\u3001`iter`\u304c \u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3057\u3001 `iter_mut` \u304c\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\u306a\u5024\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n## \u5b66\u7fd2\u306e\u30ab\u30ae\n\nRust\u8a00\u8a9e\u306f\u8a00\u8a9e\u4ed5\u69d8\u304c\u307e\u3060\u307e\u3060\u3088\u304f\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u8a00\u8a9e\u306a\u306e\u3067\u3001Github\u7b49\u3067\u691c\u7d22\u3059\u308b\u3068\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n### get_mut\n[GitHub::Search - get_mut](https://github.com/search?l=rust&q=get_mut&ref=searchresults&type=Code&utf8=%E2%9C%93)\n\n### iter_mut\n[GitHub::Search - iter_mut](https://github.com/search?l=rust&q=iter_mut&ref=searchresults&type=Code&utf8=%E2%9C%93)\n", "tags": ["rust"]}