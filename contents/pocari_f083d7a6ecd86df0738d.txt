{"context": " More than 1 year has passed since last update.10\u5e74\u307b\u3069\u524d\u306b\u4e00\u3064\u306eweb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001\n\u305d\u306e\u5f53\u6642\u306f\u307e\u3060\u4f55\u3082\u5206\u304b\u3089\u305a\u624b\u52d5\u3067\u30b4\u30ea\u30b4\u30ea\u3068\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u3092\u3057\u3066\u305f\u306e\u3067\u3059\u304c\u3001\n\u3075\u3068\u4eca\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3044\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u69cb\u6210\n\nEclipse 4.4\nSpring 4.1.0.RELEASE\nwildfly-9.0.0.CR1\n\u306e\u74b0\u5883\u3067\u3001\nOracle 11g xe\nPostgresql 9.2\n\u306e2\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4e00\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u7ba1\u7406\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u69cb\u6210\n\nOracle\u5074\n\n\n\u63a5\u7d9a\u6587\u5b57\u5217: jdbc:oracle:thin:@localhost:1521:XE\nuser/pass: oratest/oratest\n\n\nPostgresql\u5074\n\n\n\u63a5\u7d9a\u6587\u5b57\u5217: jdbc:postgresql://localhost/pgtest\"\nuser/pass: pgtest/pgtest\n\n\n\n\u3067\u63a5\u7d9a\u3067\u304d\u308b\u74b0\u5883\u304c\u3067\u304d\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\nEclipse\u306e\u8a2d\u5b9a\nJBoss\u30c4\u30fc\u30eb(Luna)\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u3066\u304a\u308a\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066Wildfly\u304c\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n\nWildfly\u5074\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u8a2d\u5b9a\nSpring\u5074\u3067DataSource\u306e\u8a2d\u5b9a\u304b\u3089JTA\u306e\u8a2d\u5b9a\u307e\u3067\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3069\u3046\u3082\u3046\u307e\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u306e\u3067DataSource\u306e\u8a2d\u5b9a\u306f\u30b3\u30f3\u30c6\u30ca\u5074\u3067\u884c\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u8fba\u8a73\u3057\u3044\u65b9\u304c\u3044\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\nWildfly\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u3067\u306f\u7d42\u308f\u3063\u3066\u3044\u308b\u72b6\u614b\u3067jdbc\u30c9\u30e9\u30a4\u30d0\u306e\u8a2d\u5b9a\u3068DataSource\u306e\u8a2d\u5b9a\u304b\u3089\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u521d\u3081\u3066Wildfly\u3092\u4f7f\u3063\u305f\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4eca\u56de\u8a66\u3057\u3066\u307f\u305f\u65b9\u6cd5\u3067\u3059\u3002\n\njdbc\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\nOracle\u3001Posgresql\u305d\u308c\u305e\u308c\u306ejdbc\u30c9\u30e9\u30a4\u30d0\u3092Wildfly\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n${JBOSS_HOME}\u3092wildfly\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u3001\n\u305d\u308c\u305e\u308c\u306eDBMS\u306ejdbc\u30c9\u30e9\u30a4\u30d0(ojdbc6_g.jar, postgresql-9.2-1003-jdbc4.jar)\u3092${JBOSS_HOME}/modules\u4ee5\u4e0b\u306b\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002(\u305d\u308c\u305e\u308c\u306b\u3042\u308bmodule.xml\u306f\u5f8c\u8ff0)\n  ${JBOSS_HOME}/modules\n       +- oracle\n       |  +- jdbc\n       |    +- main\n       |      +- module.xml\n       |      +- ojdbc6_g.jar\n       |\n       +- org\n          +- postgresql\n            +- main\n       \u3000      +- module.xml\n               +- postgresql-9.2-1003-jdbc4.jar\n\nmodule.xml\u306b\u306fDBMS\u6bce\u306b\n\nOracle\u5074\u306emodule.xml\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <module xmlns=\"urn:jboss:module:1.0\" name=\"oracle.jdbc\">\n      <resources>\n          <resource-root path=\"ojdbc6_g.jar\"/>\n      </resources>\n      <dependencies>\n          <module name=\"javax.api\"/>\n          <module name=\"javax.transaction.api\"/>\n      </dependencies>\n  </module>\n\n\nPostgresq\u5074\u306emodule.xml\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <module xmlns=\"urn:jboss:module:1.0\" name=\"org.postgresql\">\n      <resources>\n          <resource-root path=\"postgresql-9.2-1003-jdbc4.jar\"/>\n      </resources>\n      <dependencies>\n          <module name=\"javax.api\"/>\n          <module name=\"javax.transaction.api\"/>\n      </dependencies>\n  </module>\n\n\nJBoss-CLI(${JBOSS_HOME}/bin/jboss-cli)\u304b\u3089\u30c9\u30e9\u30a4\u30d0\u3092\u767b\u9332\u3057\u307e\u3059\u3002\nCLI\u3067\u63a5\u7d9a\n>jboss-cli.bat\nYou are disconnected at the moment. Type 'connect' to connect to the server or 'help' for the list of supported commands.\n[disconnected /] connect\n[standalone@localhost:9990 /] \n\nOracle\u306eJDBC\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\n[standalone@localhost:9990 /]  /subsystem=datasources/jdbc-driver=oracle:add(driver-name=oracle,driver-module-name=oracle.jdbc,driver-xa-datasource-class-name=oracle.jdbc.xa.client.OracleXADataSource)\n{\"outcome\" => \"success\"}\n\nPostgresql\u306eJDBC\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\n[standalone@localhost:9990 /]  /subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)\n{\"outcome\" => \"success\"}\n\n\nDataSource\u306e\u63a5\u7d9a\n\u3053\u3053\u3067\u8272\u3005\u30cf\u30de\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u305c\u304bWildfly\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u767b\u9332\u3059\u308b\u3068\u63a5\u7d9a\u3067\u304d\u305a\u3002\u3002\u4ed5\u65b9\u306a\u304fxml\u3092\u76f4\u63a5\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n${JBOSS_HOME}/standalone/configuration/standalone.xml\u306esubsystem/datasources\u306e\u4e2d\u3001\n<subsystem xmlns=\"urn:jboss:domain:datasources:3.0\">\n    <datasources>\n        <!-- \u3053\u3053  -->\n    </datasources>\n</subsystem>\n\n\u306e\u4f4d\u7f6e\u306b\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n${JBOSS_HOME}/standalone/configuration/standalone.xml\n<xa-datasource jndi-name=\"java:/jdbc/XAds1\" pool-name=\"XAds1\">\n    <xa-datasource-property name=\"URL\">\n        jdbc:oracle:thin:@localhost:1521:XE\n    </xa-datasource-property>\n    <xa-datasource-property name=\"User\">\n        oratest\n    </xa-datasource-property>\n    <xa-datasource-property name=\"Password\">\n        oratest\n    </xa-datasource-property>\n    <driver>oracle</driver>\n    <xa-pool>\n        <min-pool-size>10</min-pool-size>\n        <max-pool-size>20</max-pool-size>\n        <prefill>true</prefill>\n    </xa-pool>\n</xa-datasource>\n<xa-datasource jndi-name=\"java:/jdbc/XAds2\" pool-name=\"XAds2\">\n    <xa-datasource-property name=\"DatabaseName\">\n        pgtest\n    </xa-datasource-property>\n    <xa-datasource-property name=\"PortNumber\">\n        5432\n    </xa-datasource-property>\n    <xa-datasource-property name=\"ServerName\">\n        localhost\n    </xa-datasource-property>\n    <driver>postgresql</driver>\n    <xa-pool>\n        <min-pool-size>10</min-pool-size>\n        <max-pool-size>20</max-pool-size>\n        <prefill>true</prefill>\n    </xa-pool>\n    <security>\n        <user-name>pgtest</user-name>\n        <password>pgtest</password>\n    </security>\n</xa-datasource>\n\n\n\u3053\u3053\u8a2d\u5b9a\u3082\u3044\u308d\u3044\u308d\u30cf\u30de\u308a\u307e\u3057\u3066\u3001oracle\u306e\u65b9\u306f<xa-datasource-property name=\"URL\">\u3067\u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3001Postgresql\u306e\u65b9\u306f\u3001<xa-datasource-property name=\"DatabaseName|PortNumber|ServerName\">\u3067\u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\u6b21\u306b\u3053\u308c\u3089\u306e\u63a5\u7d9a\u8a2d\u5b9a\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3059\u3002\u518d\u5ea6JBoss-CLI\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\n\nOracle\n\n[standalone@localhost:9990 /] /subsystem=datasources/xa-data-source=XAds1:test-connection-in-pool\n{\n    \"outcome\" => \"success\",\n    \"result\" => [true]\n}\n\n\nPostgresql\n\n[standalone@localhost:9990 /] /subsystem=datasources/xa-data-source=XAds2:test-connection-in-pool\n{\n    \"outcome\" => \"success\",\n    \"result\" => [true]\n}\n\n\"outcome\" => \"success\"\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u63a5\u7d9a\u6210\u529f\u3067\u3059\u3002\n\u4ee5\u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u5074\u306e\u8a2d\u5b9a\u306f\u7d42\u4e86\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u8a2d\u5b9a\nmaven\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3059\u3002\npom.xml\u306f\u4ee5\u4e0b\u3067\u3059(\u4eca\u56de\u306f2phase commit\u78ba\u8a8d\u7528\u306e\u6700\u5c0f\u9650\u306e\u3082\u306e\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3084view\u7528\u306e\u8a2d\u5b9a\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u305b\u3093)\n\npom.xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.example</groupId>\n    <artifactId>MultipleDatasourceTest</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>war</packaging>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>4.1.0.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-jdbc</artifactId>\n            <version>4.1.0.RELEASE</version>\n        </dependency>\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>javax.servlet-api</artifactId>\n            <version>3.1.0</version>\n            <scope>provided</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <encoding>utf-8</encoding>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n\n\n\u30eb\u30fc\u30c8\u30d1\u30c3\u30b1\u30fc\u30b8\u306fcom.example\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u305b\u3063\u304b\u304fSpring4\u306a\u306e\u3067web.xml\u3001\u3084bean\u8a2d\u5b9a\u7528xml\u306f\u7121\u3057\u3067\u3059\u3079\u3066Java\u30d9\u30fc\u30b9\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30d1\u30c3\u30b1\u30fc\u30b8\u69cb\u6210\u3068\u3057\u3066\u306f\u3001\n\n\u3067\u3059\u3002\n\nWeb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\nweb.xml\u306e\u66ff\u308f\u308a\u306bInitializer.java\u3067Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\nInitializer.java\npackage com.example;\n\nimport javax.servlet.Filter;\n\nimport org.springframework.web.filter.CharacterEncodingFilter;\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class Initializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n\n    @Override\n    protected Class<?>[] getRootConfigClasses() {\n        return new Class<?>[0];\n    }\n\n    @Override\n    protected Class<?>[] getServletConfigClasses() {\n        return new Class<?>[]{ WebAppConfig.class };\n    }\n\n    @Override\n    protected String[] getServletMappings() {\n        return new String[]{\"/\"};\n    }\n\n    @Override\n    protected Filter[] getServletFilters() {\n        return new Filter[] {createUTF8CharEncodingFilter()};\n    }\n\n    private static Filter createUTF8CharEncodingFilter() {\n        CharacterEncodingFilter filter = new CharacterEncodingFilter();\n        filter.setEncoding(\"UTF-8\");\n        filter.setForceEncoding(true);\n        return filter;\n    }\n}\n\n\n\u4e0a\u8a18\u306egetServletConfigClasses\u3067\u3057\u3066\u3044\u308bWebAppConfig\u3067SpringMVC\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\nWebAppConfig.java\npackage com.example;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\n\n@Configuration\n@EnableWebMvc\n@EnableTransactionManagement\n@ComponentScan(\"com.example\")\npublic class WebAppConfig {\n}\n\n\n@EnableTransactionManagement\u3067\u5404Contoller,Service\u30af\u30e9\u30b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b@Transaction\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u52b9\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u6b21\u306bSpring\u5074\u3067Wildfly\u5074\u3067\u5b9a\u7fa9\u3057\u305fDataSource\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092com.example.config.DatasourceConfig\u3067\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nDatasourceConfig.java\npackage com.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup;\n\n@Configuration\npublic class DatasourceConfig {\n    @Bean(name=\"ds1\")\n    public DataSource ds1() {\n        DataSource dataSource = createJndiDataSourceBy(\"java:/jdbc/XAds1\");\n        return dataSource;\n    }\n\n    @Bean(name=\"ds2\")\n    public DataSource ds2() {\n        DataSource dataSource = createJndiDataSourceBy(\"java:/jdbc/XAds2\");\n        return dataSource;\n    }\n\n    @Bean\n    public JdbcTemplate jdbcTemplate(@Qualifier(\"ds1\") DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n\n    @Bean\n    public JdbcTemplate jdbcTemplate2(@Qualifier(\"ds2\") DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n\n    private DataSource createJndiDataSourceBy(String jndiName) {\n        JndiDataSourceLookup dataSourceLookup = new JndiDataSourceLookup();\n        DataSource dataSource = dataSourceLookup.getDataSource(jndiName);\n        return dataSource;\n    }\n}\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u306f\u3001Wildfly\u5074\u3067\u8a2d\u5b9a\u3057\u305fDataSource\u306ejndi\u540d\u304b\u3089Oracle,Postgresql\u305d\u308c\u305e\u308c\u306eDMBS\u7528\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u7528\u306eBean\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u305d\u308c\u305e\u308c\u306eDataSource\u3092\u8b58\u5225\u3067\u304d\u308b\u3088\u3046\u306b@Bean(name=XXX)\u306e\u3088\u3046\u306b\u3057\u3066\u3001Oracle\u5074\u306bds,Postgresq\u5074\u306bds2\u3068\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\u4e0a\u8a18\u3067DataSource\u7528\u306eBean\u306b\u3064\u3051\u305f\u540d\u79f0\u304b\u3089\u3001\u305d\u308c\u305e\u308c\u306eDBMS\u306b\u5bfe\u5fdc\u3059\u308bJdbcTemplate\u3092\u4f5c\u308b\u969b\u306b\u3001@Qualifier\u3067\u3069\u306eDataSource\u3092\u4f7f\u3046\u304b\u6307\u5b9a\u3057\u3066JdbcTemplate\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\n\nOracle\u306b\u63a5\u7d9a\u3059\u308bjdbcTemplate\n\nPostgresql\u306b\u63a5\u7d9a\u3059\u308bjdbcTemplate2\n\n\n\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\nTransactionManager\u306e\u8a2d\u5b9a\nJta\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u3001TransactionManagerConfig\u30af\u30e9\u30b9\u3067TransactionManager\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nTransactionManagerConfig.java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.transaction.PlatformTransactionManager;\nimport org.springframework.transaction.jta.JtaTransactionManager;\n\n@Configuration\npublic class TransactionManagerConfig {\n    @Bean\n    public PlatformTransactionManager transactionManager() {\n        return new JtaTransactionManager();\n    }\n}\n\n\n\u3053\u308c\u3067Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u7d42\u4e86\u3067\u3059\u3002\n\nWEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u6b21\u306b\u4e0a\u8a18\u8a2d\u5b9a\u3067\u4f5c\u3063\u305fBean\u9054\u3092\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\u307e\u305a\u524d\u63d0\u3068\u306a\u308b\u5404DB\u306e\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3067\u3059\u3002\n\u5358\u7d14\u306b\u3059\u308b\u305f\u3081\u3001Oracle\u5074\u3001Postgres\u5074\u3068\u3082\u306bf\u3068\u3044\u3046\u30ab\u30e9\u30e0\u3060\u3051\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30ebora_table,pg_table\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\nOracle\u5074\nSQL> desc ora_table\n \u540d\u524d                                      NULL?    \u578b\n ----------------------------------------- -------- ----------------------------\n\n F                                                  NUMBER\n\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n\nPostgresql\u5074\npgtest=> \\d pg_table\n\u30c6\u30fc\u30d6\u30eb \"public.pg_table\"\n \u5217 |   \u578b    | \u4fee\u98fe\u8a9e\n----+---------+--------\n f  | numeric |\n\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n\n\u3053\u308c\u3089\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066\u3001\n\nOracle,Postgresql\u4e21\u65b9\u3092\u4e00\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u6271\u3044\u3001\u4e21\u65b9\u306b1\u30ec\u30b3\u30fc\u30c9(Oracle\u306b\u306f5\u3001Postgresql\u306b\u306f20)insert\u3059\u308b\u304c\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3002\n\u3053\u308c\u3068\u306f\u5225\u306b\u3001\u4e0a\u8a18\u3068\u306f\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067Oracle\u5074\u306eora_table\u306b1\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0(100\u3092\u8ffd\u52a0\u3059\u308b)\u3057\u3066commit\u3059\u308b\u3002\n\n\u3068\u3044\u3046\u5b9f\u9a13\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u5b9f\u696d\u52d9\u3067\u306e\u60f3\u5b9a\u3068\u3057\u3066\u306f\u3001\n-\u3000\u57fa\u672c\u7684\u306b\u306fOracle, Postgresql\u3068\u3082\u66f4\u65b0\u304c\u767a\u751f\u3059\u308b\u304c\u30011\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u6271\u3044\u305f\u3044\u3002\n-\u3000\u304c\u3001Oracle\u5074\u3067sequence\u3067\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u306a\u767a\u756a\u51e6\u7406\u304c\u3042\u308a\u3001\u304b\u3064\u305d\u308c\u306f\u72ec\u7acb\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u884c\u3044\u305f\u3044\u3002\n\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308c\u3070\u6210\u529f\u3067\u3059\u3002\nOracle\u5074(5\u3092insert\u3059\u308b\u304c\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u3001(\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e)100\u306f\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b)\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n       100\n\nPostgresql\u5074(20\u3092insert\u3059\u308b\u304c\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\uff08\u306e\u3067\u4f55\u3082\u5909\u308f\u3089\u306a\u3044\uff09)\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n\n\nController\u306e\u4f5c\u6210\n\u4eca\u56de\u306fController\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u3057\u307e\u3059\u3002\nController\u306f\u3072\u3068\u3064\u3060\u3051\u3067\u3001\u30eb\u30fc\u30c8(/)\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u3068\u304d\u306b\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3060\u3051\u306eController\u3067\u3059\u3002\n\u5b9f\u969b\u306eDB\u30a2\u30af\u30bb\u30b9\u306fIndexController\u306b\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u3001IndexService\u30af\u30e9\u30b9\u3067\u884c\u3044\u307e\u3059\u3002\n\nIndexController.java\npackage com.example.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport com.example.service.IndexService;\n\n@Controller\n@Transactional(rollbackFor=Exception.class) //Exception\u304c\u767a\u751f\u3057\u305f\u3089\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\npublic class IndexController {\n    @Autowired\n    private IndexService indexService;\n\n    @RequestMapping(\"/\")\n    @ResponseBody\n    public String index() throws Exception {\n       return indexService.doService();\n    }\n}\n\n\n\nService\u306e\u4f5c\u6210\n\u6b21\u306b\u5b9f\u969b\u306bDB\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046Service\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nIndexService.java```\npackage com.example.service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class IndexService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate; //Oracle\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\n\n    @Autowired\n    private JdbcTemplate jdbcTemplate2; //Postgresql\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\n\n    @Autowired\n    private NewTransactionService newTransactionService; //\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067Oracle\u306binsert\u3059\u308b\u30b5\u30fc\u30d3\u30b9\n\n    public String doService() throws Exception {\n        List<Map<String, Object>> result = jdbcTemplate.queryForList(\"select * from ora_table\");\n        String val = result.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 5);\n        jdbcTemplate2.update(\"insert into pg_table (f) values (?)\", 20);\n\n        newTransactionService.doService(); //\u4e0b\u3067\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u304c\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u51e6\u7406\u306f\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306a\u306e\u3067\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\n        int a = 1;\n        if (a == 1) {\n            throw new Exception(\"exception occured\"); //\u3053\u3053\u3067\u308f\u3056\u3068Exception\u3092\u767a\u751f\u3055\u305b\u3066\u30015,20\u306einsert\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3002\n        }\n\n        List<Map<String, Object>> result2 = jdbcTemplate2.queryForList(\"select * from pg_table\");\n        String val2 = result2.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        return String.format(\"Hello, World!! [%s], [%s]\", val, val2);\n        //        return String.format(\"Hello, World!!  [%s]\", val2);\n    }\n}\n\n\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u4e2d\u3067\u547c\u3070\u308c\u308b\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u52d5\u304f\u30b5\u30fc\u30d3\u30b9(Oracle\u5074\u306b100\u3092insert\u3059\u308b\u30b5\u30fc\u30d3\u30b9)\u304cNewTransactionService\u3067\u3059\u3002\n\nNewTransactionService.java\npackage com.example.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Propagation;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service\npublic class NewTransactionService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n\n    @Transactional(propagation=Propagation.REQUIRES_NEW) //\u3053\u306e\u30e1\u30c3\u30bd\u30c9\u306f\u7279\u5225\u306b\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081REQUIRES_NEW\u3067\u5b9f\u884c\u3059\u308b\n    public void doService() {\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 100);\n    }\n}\n\n\n\u3053\u308c\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\nWildfly\u3092\u5b9f\u884c\u3057\u3066\u3001http://localhost:18080/MultipleDatasourceTest/\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n(port8080\u306f\u3088\u304f\u304b\u3076\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306fwildfly\u306f18080\u3067\u5f85\u3064\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002)\n\u5b9f\u884c\u7d50\u679c\n\n\u304d\u3061\u3093\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\u3055\u3066\u3001\u7d50\u679c\u5404\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3069\u3046\u306a\u3063\u305f\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nOracle\u5074\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n       100\n\nPostgresq\u5074\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n\n\u60f3\u5b9a\u901a\u308a\u3001\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067insert\u3057\u305fOracle\u5074\u306e100\u306f\u30b3\u30df\u30c3\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\n5,20\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\u6b21\u306b\u3001\u308f\u3056\u3068\u4f8b\u5916\u3092\u8d77\u3053\u3057\u3066\u3044\u305f\u7b87\u6240\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u3057\u3066\u3001\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3001IndexService\u3092\u5909\u66f4\u3057\u3066\u518d\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nIndexService\npackage com.example.service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class IndexService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    private JdbcTemplate jdbcTemplate2;\n\n    @Autowired\n    private NewTransactionService newTransactionService;\n\n    public String doService() throws Exception {\n        List<Map<String, Object>> result = jdbcTemplate.queryForList(\"select * from ora_table\");\n        String val = result.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 5);\n        jdbcTemplate2.update(\"insert into pg_table (f) values (?)\", 20);\n\n        newTransactionService.doService();\n\n        int a = 1;\n        if (a == 1) {\n            //throw new Exception(\"exception occured\");\u3000//\u4f8b\u5916\u3092\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u5909\u66f4\n        }\n\n        List<Map<String, Object>> result2 = jdbcTemplate2.queryForList(\"select * from pg_table\");\n        String val2 = result2.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        return String.format(\"Hello, World!! [%s], [%s]\", val, val2);\n        //        return String.format(\"Hello, World!!  [%s]\", val2);\n    }\n}\n\n\n\u518d\u5ea6http://localhost:18080/MultipleDatasourceTest/\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n\n\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u72b6\u614b\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u78ba\u8a8d\u3092\u884c\u3046\u3068\nOracle\u5074\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n         5\n       100\n       100\n\n1\u56de\u76ee(\u4f8b\u5916\u767a\u751f\u6642)\u306binsert\u3057\u305f100\u4ee5\u5916\u306b\u3001\u4eca\u56deinsert\u3057\u305f5\u3001100\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\nPostgresql\u5074\npgtest=> select * from pg_table;\n f\n----\n  1\n  2\n  3\n 20\n(4 \u884c)\n\n\u4eca\u56de\u306f\u6b63\u5e38\u7d42\u4e86\u3057\u305f\u306e\u3067\u3001insert\u3057\u305f20\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\u3053\u308c\u30672phase commit\u304c\u3067\u304d\u3066\u3044\u305d\u3046\u3067\u3059\u3002\n\n\u6700\u5f8c\u306b\nAP\u30b5\u30fc\u30d0\u5074\u306e\u8a2d\u5b9a\u4ee5\u5916\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u90e8\u5206\u306f\u3053\u3053\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/pocari/MultipleDatasourceTest\n10\u5e74\u307b\u3069\u524d\u306b\u4e00\u3064\u306eweb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5185\u3067\u8907\u6570\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u3063\u3066\u3001\n\u305d\u306e\u5f53\u6642\u306f\u307e\u3060\u4f55\u3082\u5206\u304b\u3089\u305a\u624b\u52d5\u3067\u30b4\u30ea\u30b4\u30ea\u3068\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u5236\u5fa1\u3092\u3057\u3066\u305f\u306e\u3067\u3059\u304c\u3001\n\u3075\u3068\u4eca\u3042\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u306f\u3069\u3046\u3059\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3044\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n#\u69cb\u6210\n  - Eclipse 4.4\n  - Spring 4.1.0.RELEASE\n  - wildfly-9.0.0.CR1\n  \u306e\u74b0\u5883\u3067\u3001\n\n  - Oracle 11g xe\n  - Postgresql 9.2\n   \u306e2\u3064\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4e00\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u7ba1\u7406\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3002\n\n#\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u69cb\u6210\n\n - Oracle\u5074\n   - \u63a5\u7d9a\u6587\u5b57\u5217: jdbc:oracle:thin:@localhost:1521:XE\n   - user/pass: oratest/oratest\n - Postgresql\u5074\n   - \u63a5\u7d9a\u6587\u5b57\u5217: jdbc:postgresql://localhost/pgtest\"\n   - user/pass: pgtest/pgtest\n \n  \u3067\u63a5\u7d9a\u3067\u304d\u308b\u74b0\u5883\u304c\u3067\u304d\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n\n#Eclipse\u306e\u8a2d\u5b9a\nJBoss\u30c4\u30fc\u30eb(Luna)\u306e\u8a2d\u5b9a\u304c\u7d42\u308f\u3063\u3066\u304a\u308a\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u3057\u3066Wildfly\u304c\u4f7f\u7528\u53ef\u80fd\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059\u3002\n![wildfly_server.png](https://qiita-image-store.s3.amazonaws.com/0/34692/536bd63a-0e58-fb30-292b-3a797b394dd6.png)\n\n#Wildfly\u5074\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u8a2d\u5b9a\n\n Spring\u5074\u3067DataSource\u306e\u8a2d\u5b9a\u304b\u3089JTA\u306e\u8a2d\u5b9a\u307e\u3067\u3057\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u3069\u3046\u3082\u3046\u307e\u304f\u884c\u304b\u306a\u304b\u3063\u305f\u306e\u3067DataSource\u306e\u8a2d\u5b9a\u306f\u30b3\u30f3\u30c6\u30ca\u5074\u3067\u884c\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u8fba\u8a73\u3057\u3044\u65b9\u304c\u3044\u305f\u3089\u6559\u3048\u3066\u4e0b\u3055\u3044\u3002\n\n Wildfly\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u307e\u3067\u306f\u7d42\u308f\u3063\u3066\u3044\u308b\u72b6\u614b\u3067jdbc\u30c9\u30e9\u30a4\u30d0\u306e\u8a2d\u5b9a\u3068DataSource\u306e\u8a2d\u5b9a\u304b\u3089\u884c\u3044\u307e\u3059\u3002\u4eca\u56de\u521d\u3081\u3066Wildfly\u3092\u4f7f\u3063\u305f\u306e\u3067\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u4eca\u56de\u8a66\u3057\u3066\u307f\u305f\u65b9\u6cd5\u3067\u3059\u3002\n\n##jdbc\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\nOracle\u3001Posgresql\u305d\u308c\u305e\u308c\u306ejdbc\u30c9\u30e9\u30a4\u30d0\u3092Wildfly\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n`${JBOSS_HOME}`\u3092wildfly\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u3057\u3066\u3001\n\n\u305d\u308c\u305e\u308c\u306eDBMS\u306ejdbc\u30c9\u30e9\u30a4\u30d0(ojdbc6_g.jar, postgresql-9.2-1003-jdbc4.jar)\u3092`${JBOSS_HOME}/modules`\u4ee5\u4e0b\u306b\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002(\u305d\u308c\u305e\u308c\u306b\u3042\u308bmodule.xml\u306f\u5f8c\u8ff0)\n\n  ```\n  ${JBOSS_HOME}/modules\n       +- oracle\n       |  +- jdbc\n       |    +- main\n       |      +- module.xml\n       |      +- ojdbc6_g.jar\n       |\n       +- org\n          +- postgresql\n            +- main\n       \u3000      +- module.xml\n               +- postgresql-9.2-1003-jdbc4.jar\n  ```\n\nmodule.xml\u306b\u306fDBMS\u6bce\u306b\n\n- Oracle\u5074\u306emodule.xml\n\n  ```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <module xmlns=\"urn:jboss:module:1.0\" name=\"oracle.jdbc\">\n      <resources>\n          <resource-root path=\"ojdbc6_g.jar\"/>\n      </resources>\n      <dependencies>\n          <module name=\"javax.api\"/>\n          <module name=\"javax.transaction.api\"/>\n      </dependencies>\n  </module>\n  ```\n\n- Postgresq\u5074\u306emodule.xml\n\n  ```\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <module xmlns=\"urn:jboss:module:1.0\" name=\"org.postgresql\">\n      <resources>\n          <resource-root path=\"postgresql-9.2-1003-jdbc4.jar\"/>\n      </resources>\n      <dependencies>\n          <module name=\"javax.api\"/>\n          <module name=\"javax.transaction.api\"/>\n      </dependencies>\n  </module>\n  ```\n\n###JBoss-CLI(`${JBOSS_HOME}/bin/jboss-cli`)\u304b\u3089\u30c9\u30e9\u30a4\u30d0\u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\nCLI\u3067\u63a5\u7d9a\n\n```\n>jboss-cli.bat\nYou are disconnected at the moment. Type 'connect' to connect to the server or 'help' for the list of supported commands.\n[disconnected /] connect\n[standalone@localhost:9990 /] \n```\n\nOracle\u306eJDBC\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\n\n```\n[standalone@localhost:9990 /]  /subsystem=datasources/jdbc-driver=oracle:add(driver-name=oracle,driver-module-name=oracle.jdbc,driver-xa-datasource-class-name=oracle.jdbc.xa.client.OracleXADataSource)\n{\"outcome\" => \"success\"}\n```\n\nPostgresql\u306eJDBC\u30c9\u30e9\u30a4\u30d0\u306e\u767b\u9332\n\n```\n[standalone@localhost:9990 /]  /subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)\n{\"outcome\" => \"success\"}\n```\n\n###DataSource\u306e\u63a5\u7d9a\n\u3053\u3053\u3067\u8272\u3005\u30cf\u30de\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u305c\u304bWildfly\u306e\u7ba1\u7406\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u767b\u9332\u3059\u308b\u3068\u63a5\u7d9a\u3067\u304d\u305a\u3002\u3002\u4ed5\u65b9\u306a\u304fxml\u3092\u76f4\u63a5\u8a18\u8ff0\u3057\u307e\u3057\u305f\u3002\n`${JBOSS_HOME}/standalone/configuration/standalone.xml`\u306e`subsystem/datasources`\u306e\u4e2d\u3001\n\n```\n<subsystem xmlns=\"urn:jboss:domain:datasources:3.0\">\n    <datasources>\n        <!-- \u3053\u3053  -->\n    </datasources>\n</subsystem>\n```\n\n\u306e\u4f4d\u7f6e\u306b\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n```xml:${JBOSS_HOME}/standalone/configuration/standalone.xml\n<xa-datasource jndi-name=\"java:/jdbc/XAds1\" pool-name=\"XAds1\">\n    <xa-datasource-property name=\"URL\">\n        jdbc:oracle:thin:@localhost:1521:XE\n    </xa-datasource-property>\n    <xa-datasource-property name=\"User\">\n        oratest\n    </xa-datasource-property>\n    <xa-datasource-property name=\"Password\">\n        oratest\n    </xa-datasource-property>\n    <driver>oracle</driver>\n    <xa-pool>\n        <min-pool-size>10</min-pool-size>\n        <max-pool-size>20</max-pool-size>\n        <prefill>true</prefill>\n    </xa-pool>\n</xa-datasource>\n<xa-datasource jndi-name=\"java:/jdbc/XAds2\" pool-name=\"XAds2\">\n    <xa-datasource-property name=\"DatabaseName\">\n        pgtest\n    </xa-datasource-property>\n    <xa-datasource-property name=\"PortNumber\">\n        5432\n    </xa-datasource-property>\n    <xa-datasource-property name=\"ServerName\">\n        localhost\n    </xa-datasource-property>\n    <driver>postgresql</driver>\n    <xa-pool>\n        <min-pool-size>10</min-pool-size>\n        <max-pool-size>20</max-pool-size>\n        <prefill>true</prefill>\n    </xa-pool>\n    <security>\n        <user-name>pgtest</user-name>\n        <password>pgtest</password>\n    </security>\n</xa-datasource>\n```\n\n\u3053\u3053\u8a2d\u5b9a\u3082\u3044\u308d\u3044\u308d\u30cf\u30de\u308a\u307e\u3057\u3066\u3001oracle\u306e\u65b9\u306f`<xa-datasource-property name=\"URL\">`\u3067\u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3001Postgresql\u306e\u65b9\u306f\u3001`<xa-datasource-property name=\"DatabaseName|PortNumber|ServerName\">`\u3067\u63a5\u7d9a\u306e\u8a2d\u5b9a\u3092\u6307\u5b9a\u3059\u308b\u3088\u3046\u3067\u3057\u305f\u3002\n\n\u6b21\u306b\u3053\u308c\u3089\u306e\u63a5\u7d9a\u8a2d\u5b9a\u306e\u78ba\u8a8d\u3092\u3057\u307e\u3059\u3002\u518d\u5ea6JBoss-CLI\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u4e0b\u8a18\u30b3\u30de\u30f3\u30c9\u3067\u30c6\u30b9\u30c8\u63a5\u7d9a\u3057\u3066\u307f\u307e\u3059\u3002\n\n- Oracle\n\n```\n[standalone@localhost:9990 /] /subsystem=datasources/xa-data-source=XAds1:test-connection-in-pool\n{\n    \"outcome\" => \"success\",\n    \"result\" => [true]\n}\n```\n\n- Postgresql\n\n```\n[standalone@localhost:9990 /] /subsystem=datasources/xa-data-source=XAds2:test-connection-in-pool\n{\n    \"outcome\" => \"success\",\n    \"result\" => [true]\n}\n```\n\n`\"outcome\" => \"success\"`\u304c\u8fd4\u3063\u3066\u304d\u3066\u3044\u308c\u3070\u63a5\u7d9a\u6210\u529f\u3067\u3059\u3002\n\n\u4ee5\u4e0a\u3067\u30b3\u30f3\u30c6\u30ca\u5074\u306e\u8a2d\u5b9a\u306f\u7d42\u4e86\u3067\u3059\u3002\n\n##\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5074\u8a2d\u5b9a\nmaven\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3059\u3002\npom.xml\u306f\u4ee5\u4e0b\u3067\u3059(\u4eca\u56de\u306f2phase commit\u78ba\u8a8d\u7528\u306e\u6700\u5c0f\u9650\u306e\u3082\u306e\u306a\u306e\u3067\u3001\u30c6\u30b9\u30c8\u3084view\u7528\u306e\u8a2d\u5b9a\u306f\u8a18\u8f09\u3057\u3066\u3044\u307e\u305b\u3093)\n\n```xml:pom.xml\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\t<groupId>com.example</groupId>\n\t<artifactId>MultipleDatasourceTest</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>war</packaging>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-webmvc</artifactId>\n\t\t\t<version>4.1.0.RELEASE</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework</groupId>\n\t\t\t<artifactId>spring-jdbc</artifactId>\n\t\t\t<version>4.1.0.RELEASE</version>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>javax.servlet</groupId>\n\t\t\t<artifactId>javax.servlet-api</artifactId>\n\t\t\t<version>3.1.0</version>\n\t\t\t<scope>provided</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<configuration>\n\t\t\t\t\t<encoding>utf-8</encoding>\n\t\t\t\t\t<source>1.8</source>\n\t\t\t\t\t<target>1.8</target>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n</project>\n```\n\n\u30eb\u30fc\u30c8\u30d1\u30c3\u30b1\u30fc\u30b8\u306f`com.example`\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u305b\u3063\u304b\u304fSpring4\u306a\u306e\u3067web.xml\u3001\u3084bean\u8a2d\u5b9a\u7528xml\u306f\u7121\u3057\u3067\u3059\u3079\u3066Java\u30d9\u30fc\u30b9\u3067\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u69cb\u6210\u3068\u3057\u3066\u306f\u3001\n![webapp_tree.png](https://qiita-image-store.s3.amazonaws.com/0/34692/6d190a77-0a84-7803-9b8a-4db4e9dd06d5.png)\n\u3067\u3059\u3002\n\n###Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\nweb.xml\u306e\u66ff\u308f\u308a\u306b`Initializer.java`\u3067Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n```java:Initializer.java\npackage com.example;\n\nimport javax.servlet.Filter;\n\nimport org.springframework.web.filter.CharacterEncodingFilter;\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class Initializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n\n    @Override\n    protected Class<?>[] getRootConfigClasses() {\n        return new Class<?>[0];\n    }\n\n    @Override\n    protected Class<?>[] getServletConfigClasses() {\n        return new Class<?>[]{ WebAppConfig.class };\n    }\n\n    @Override\n    protected String[] getServletMappings() {\n        return new String[]{\"/\"};\n    }\n\n    @Override\n    protected Filter[] getServletFilters() {\n        return new Filter[] {createUTF8CharEncodingFilter()};\n    }\n\n    private static Filter createUTF8CharEncodingFilter() {\n        CharacterEncodingFilter filter = new CharacterEncodingFilter();\n        filter.setEncoding(\"UTF-8\");\n        filter.setForceEncoding(true);\n        return filter;\n    }\n}\n```\n\n\u4e0a\u8a18\u306e`getServletConfigClasses`\u3067\u3057\u3066\u3044\u308b`WebAppConfig`\u3067SpringMVC\u306e\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n```java:WebAppConfig.java\npackage com.example;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\n\n@Configuration\n@EnableWebMvc\n@EnableTransactionManagement\n@ComponentScan(\"com.example\")\npublic class WebAppConfig {\n}\n```\n\n`@EnableTransactionManagement`\u3067\u5404Contoller,Service\u30af\u30e9\u30b9\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3092\u6709\u52b9\u306b\u3059\u308b`@Transaction`\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u52b9\u304f\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n\u6b21\u306bSpring\u5074\u3067Wildfly\u5074\u3067\u5b9a\u7fa9\u3057\u305fDataSource\u3092\u53c2\u7167\u3059\u308b\u305f\u3081\u306e\u8a2d\u5b9a\u3092`com.example.config.DatasourceConfig`\u3067\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n```java:DatasourceConfig.java\npackage com.example.config;\n\nimport javax.sql.DataSource;\n\nimport org.springframework.beans.factory.annotation.Qualifier;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup;\n\n@Configuration\npublic class DatasourceConfig {\n    @Bean(name=\"ds1\")\n    public DataSource ds1() {\n        DataSource dataSource = createJndiDataSourceBy(\"java:/jdbc/XAds1\");\n        return dataSource;\n    }\n\n    @Bean(name=\"ds2\")\n    public DataSource ds2() {\n        DataSource dataSource = createJndiDataSourceBy(\"java:/jdbc/XAds2\");\n        return dataSource;\n    }\n\n    @Bean\n    public JdbcTemplate jdbcTemplate(@Qualifier(\"ds1\") DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n\n    @Bean\n    public JdbcTemplate jdbcTemplate2(@Qualifier(\"ds2\") DataSource dataSource) {\n        return new JdbcTemplate(dataSource);\n    }\n\n    private DataSource createJndiDataSourceBy(String jndiName) {\n        JndiDataSourceLookup dataSourceLookup = new JndiDataSourceLookup();\n        DataSource dataSource = dataSourceLookup.getDataSource(jndiName);\n        return dataSource;\n    }\n}\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u3067\u306f\u3001Wildfly\u5074\u3067\u8a2d\u5b9a\u3057\u305fDataSource\u306ejndi\u540d\u304b\u3089Oracle,Postgresql\u305d\u308c\u305e\u308c\u306eDMBS\u7528\u306e\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u7528\u306eBean\u3092\u4f5c\u6210\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u969b\u305d\u308c\u305e\u308c\u306eDataSource\u3092\u8b58\u5225\u3067\u304d\u308b\u3088\u3046\u306b`@Bean(name=XXX)`\u306e\u3088\u3046\u306b\u3057\u3066\u3001Oracle\u5074\u306b`ds`,Postgresq\u5074\u306b`ds2`\u3068\u540d\u524d\u3092\u3064\u3051\u3066\u3044\u307e\u3059\u3002\n\n\u4e0a\u8a18\u3067DataSource\u7528\u306eBean\u306b\u3064\u3051\u305f\u540d\u79f0\u304b\u3089\u3001\u305d\u308c\u305e\u308c\u306eDBMS\u306b\u5bfe\u5fdc\u3059\u308b`JdbcTemplate`\u3092\u4f5c\u308b\u969b\u306b\u3001`@Qualifier`\u3067\u3069\u306eDataSource\u3092\u4f7f\u3046\u304b\u6307\u5b9a\u3057\u3066JdbcTemplate\u3092\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\n\n - Oracle\u306b\u63a5\u7d9a\u3059\u308b`jdbcTemplate`\n - Postgresql\u306b\u63a5\u7d9a\u3059\u308b`jdbcTemplate2`\n\n\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\n###TransactionManager\u306e\u8a2d\u5b9a\nJta\u3067\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u3001`TransactionManagerConfig`\u30af\u30e9\u30b9\u3067TransactionManager\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```java:TransactionManagerConfig.java\npackage com.example.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.transaction.PlatformTransactionManager;\nimport org.springframework.transaction.jta.JtaTransactionManager;\n\n@Configuration\npublic class TransactionManagerConfig {\n    @Bean\n    public PlatformTransactionManager transactionManager() {\n        return new JtaTransactionManager();\n    }\n}\n```\n\n\u3053\u308c\u3067Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u8a2d\u5b9a\u306f\u7d42\u4e86\u3067\u3059\u3002\n\n###WEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\n\u6b21\u306b\u4e0a\u8a18\u8a2d\u5b9a\u3067\u4f5c\u3063\u305fBean\u9054\u3092\u5b9f\u969b\u306b\u4f7f\u3063\u3066\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n####\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\u307e\u305a\u524d\u63d0\u3068\u306a\u308b\u5404DB\u306e\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3067\u3059\u3002\n\n\u5358\u7d14\u306b\u3059\u308b\u305f\u3081\u3001Oracle\u5074\u3001Postgres\u5074\u3068\u3082\u306b`f`\u3068\u3044\u3046\u30ab\u30e9\u30e0\u3060\u3051\u3092\u6301\u3064\u30c6\u30fc\u30d6\u30eb`ora_table`,`pg_table`\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\nOracle\u5074\n\n```\nSQL> desc ora_table\n \u540d\u524d                                      NULL?    \u578b\n ----------------------------------------- -------- ----------------------------\n\n F                                                  NUMBER\n\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n```\n\nPostgresql\u5074\n\n```\npgtest=> \\d pg_table\n\u30c6\u30fc\u30d6\u30eb \"public.pg_table\"\n \u5217 |   \u578b    | \u4fee\u98fe\u8a9e\n----+---------+--------\n f  | numeric |\n\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n```\n\n\u3053\u308c\u3089\u306e\u30c6\u30fc\u30d6\u30eb\u306b\u5bfe\u3057\u3066\u3001\n\n1. Oracle,Postgresql\u4e21\u65b9\u3092\u4e00\u3064\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u6271\u3044\u3001\u4e21\u65b9\u306b1\u30ec\u30b3\u30fc\u30c9(Oracle\u306b\u306f5\u3001Postgresql\u306b\u306f20)insert\u3059\u308b\u304c\u4f8b\u5916\u304c\u767a\u751f\u3057\u3066\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3002\n2. \u3053\u308c\u3068\u306f\u5225\u306b\u3001\u4e0a\u8a18\u3068\u306f\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067Oracle\u5074\u306e`ora_table`\u306b1\u30ec\u30b3\u30fc\u30c9\u3092\u8ffd\u52a0(100\u3092\u8ffd\u52a0\u3059\u308b)\u3057\u3066commit\u3059\u308b\u3002\n\n\u3068\u3044\u3046\u5b9f\u9a13\u3092\u3057\u3066\u307f\u307e\u3059\u3002\u5b9f\u696d\u52d9\u3067\u306e\u60f3\u5b9a\u3068\u3057\u3066\u306f\u3001\n\n-\u3000\u57fa\u672c\u7684\u306b\u306fOracle, Postgresql\u3068\u3082\u66f4\u65b0\u304c\u767a\u751f\u3059\u308b\u304c\u30011\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e\u3088\u3046\u306b\u6271\u3044\u305f\u3044\u3002\n-\u3000\u304c\u3001Oracle\u5074\u3067sequence\u3067\u306f\u51fa\u6765\u306a\u3044\u3088\u3046\u306a\u767a\u756a\u51e6\u7406\u304c\u3042\u308a\u3001\u304b\u3064\u305d\u308c\u306f\u72ec\u7acb\u306e\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u884c\u3044\u305f\u3044\u3002\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u5834\u5408\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\nOracle\u5074(5\u3092insert\u3059\u308b\u304c\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u3001(\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306e)100\u306f\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b)\n\n```\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n       100\n```\n\nPostgresql\u5074(20\u3092insert\u3059\u308b\u304c\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u308b\uff08\u306e\u3067\u4f55\u3082\u5909\u308f\u3089\u306a\u3044\uff09)\n\n```\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n```\n\n###Controller\u306e\u4f5c\u6210\n\u4eca\u56de\u306fController\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u5883\u754c\u306b\u3057\u307e\u3059\u3002\n\nController\u306f\u3072\u3068\u3064\u3060\u3051\u3067\u3001\u30eb\u30fc\u30c8(`/`)\u306b\u30a2\u30af\u30bb\u30b9\u3055\u308c\u305f\u3068\u304d\u306b\u6587\u5b57\u5217\u3092\u8fd4\u3059\u3060\u3051\u306eController\u3067\u3059\u3002\n\u5b9f\u969b\u306eDB\u30a2\u30af\u30bb\u30b9\u306fIndexController\u306b\u3067\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3055\u308c\u308b\u3001`IndexService`\u30af\u30e9\u30b9\u3067\u884c\u3044\u307e\u3059\u3002\n\n```java:IndexController.java\npackage com.example.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.transaction.annotation.Transactional;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport com.example.service.IndexService;\n\n@Controller\n@Transactional(rollbackFor=Exception.class) //Exception\u304c\u767a\u751f\u3057\u305f\u3089\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\npublic class IndexController {\n    @Autowired\n    private IndexService indexService;\n\n    @RequestMapping(\"/\")\n    @ResponseBody\n    public String index() throws Exception {\n       return indexService.doService();\n    }\n}\n```\n\n###Service\u306e\u4f5c\u6210\n\u6b21\u306b\u5b9f\u969b\u306bDB\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046Service\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java:IndexService.java```\npackage com.example.service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class IndexService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate; //Oracle\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\n\n    @Autowired\n    private JdbcTemplate jdbcTemplate2; //Postgresql\u3078\u306e\u30a2\u30af\u30bb\u30b9\u7528\n\n    @Autowired\n    private NewTransactionService newTransactionService; //\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067Oracle\u306binsert\u3059\u308b\u30b5\u30fc\u30d3\u30b9\n\n    public String doService() throws Exception {\n        List<Map<String, Object>> result = jdbcTemplate.queryForList(\"select * from ora_table\");\n        String val = result.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 5);\n        jdbcTemplate2.update(\"insert into pg_table (f) values (?)\", 20);\n\n        newTransactionService.doService(); //\u4e0b\u3067\u4f8b\u5916\u304c\u767a\u751f\u3059\u308b\u304c\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u51e6\u7406\u306f\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u306a\u306e\u3067\u30b3\u30df\u30c3\u30c8\u3055\u308c\u308b\u3002\n\n        int a = 1;\n        if (a == 1) {\n            throw new Exception(\"exception occured\"); //\u3053\u3053\u3067\u308f\u3056\u3068Exception\u3092\u767a\u751f\u3055\u305b\u3066\u30015,20\u306einsert\u3092\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u3002\n        }\n\n        List<Map<String, Object>> result2 = jdbcTemplate2.queryForList(\"select * from pg_table\");\n        String val2 = result2.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        return String.format(\"Hello, World!! [%s], [%s]\", val, val2);\n        //        return String.format(\"Hello, World!!  [%s]\", val2);\n    }\n}\n```\n\n\u3053\u306e\u30b5\u30fc\u30d3\u30b9\u306e\u4e2d\u3067\u547c\u3070\u308c\u308b\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u52d5\u304f\u30b5\u30fc\u30d3\u30b9(Oracle\u5074\u306b100\u3092insert\u3059\u308b\u30b5\u30fc\u30d3\u30b9)\u304c`NewTransactionService`\u3067\u3059\u3002\n\n```java:NewTransactionService.java\npackage com.example.service;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Propagation;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service\npublic class NewTransactionService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n\n    @Transactional(propagation=Propagation.REQUIRES_NEW) //\u3053\u306e\u30e1\u30c3\u30bd\u30c9\u306f\u7279\u5225\u306b\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081REQUIRES_NEW\u3067\u5b9f\u884c\u3059\u308b\n    public void doService() {\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 100);\n    }\n}\n```\n\n\u3053\u308c\u3067\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n##\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u5b9f\u884c\nWildfly\u3092\u5b9f\u884c\u3057\u3066\u3001`http://localhost:18080/MultipleDatasourceTest/`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n(port8080\u306f\u3088\u304f\u304b\u3076\u308b\u306e\u3067\u3001\u3053\u3053\u3067\u306fwildfly\u306f18080\u3067\u5f85\u3064\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u3044\u307e\u3059\u3002)\n\n\u5b9f\u884c\u7d50\u679c\n![result.png](https://qiita-image-store.s3.amazonaws.com/0/34692/d06ab624-d03f-021c-abeb-6fc4c349b7f1.png)\n\n\u304d\u3061\u3093\u3068\u4f8b\u5916\u304c\u767a\u751f\u3057\u307e\u3057\u305f\u3002\n\u3055\u3066\u3001\u7d50\u679c\u5404\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u3069\u3046\u306a\u3063\u305f\u304b\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nOracle\u5074\n\n```\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n       100\n```\n\nPostgresq\u5074\n\n```\npgtest=> select * from pg_table;\n f\n---\n 1\n 2\n 3\n(3 \u884c)\n```\n\n\u60f3\u5b9a\u901a\u308a\u3001\u5225\u30c8\u30e9\u30f3\u30b6\u30af\u30b7\u30e7\u30f3\u3067insert\u3057\u305fOracle\u5074\u306e100\u306f\u30b3\u30df\u30c3\u30c8\u3055\u308c\u3066\u304a\u308a\u3001\n5,20\u306f\u30ed\u30fc\u30eb\u30d0\u30c3\u30af\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u6b21\u306b\u3001\u308f\u3056\u3068\u4f8b\u5916\u3092\u8d77\u3053\u3057\u3066\u3044\u305f\u7b87\u6240\u3092\u30b3\u30e1\u30f3\u30c8\u306b\u3057\u3066\u3001\u6b63\u5e38\u7d42\u4e86\u3059\u308b\u3088\u3046\u306b\u3001`IndexService`\u3092\u5909\u66f4\u3057\u3066\u518d\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```java:IndexService\npackage com.example.service;\n\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class IndexService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n\n    @Autowired\n    private JdbcTemplate jdbcTemplate2;\n\n    @Autowired\n    private NewTransactionService newTransactionService;\n\n    public String doService() throws Exception {\n        List<Map<String, Object>> result = jdbcTemplate.queryForList(\"select * from ora_table\");\n        String val = result.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        jdbcTemplate.update(\"insert into ora_table (f) values (?)\", 5);\n        jdbcTemplate2.update(\"insert into pg_table (f) values (?)\", 20);\n\n        newTransactionService.doService();\n\n        int a = 1;\n        if (a == 1) {\n            //throw new Exception(\"exception occured\");\u3000//\u4f8b\u5916\u3092\u767a\u751f\u3057\u306a\u3044\u3088\u3046\u306b\u5909\u66f4\n        }\n\n        List<Map<String, Object>> result2 = jdbcTemplate2.queryForList(\"select * from pg_table\");\n        String val2 = result2.stream().map(m -> m.get(\"f\").toString()).collect(Collectors.joining(\",\"));\n\n        return String.format(\"Hello, World!! [%s], [%s]\", val, val2);\n        //        return String.format(\"Hello, World!!  [%s]\", val2);\n    }\n}\n```\n\n\u518d\u5ea6`http://localhost:18080/MultipleDatasourceTest/`\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n![normal_end.png](https://qiita-image-store.s3.amazonaws.com/0/34692/d9970ad2-40ef-17dc-2bb3-9c5e3ab5a427.png)\n\n\n\u6b63\u5e38\u306b\u7d42\u4e86\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u72b6\u614b\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u78ba\u8a8d\u3092\u884c\u3046\u3068\n\nOracle\u5074\n\n```\nSQL> select * from ora_table;\n\n         F\n----------\n        -1\n        -2\n        -3\n         5\n       100\n       100\n```\n\n1\u56de\u76ee(\u4f8b\u5916\u767a\u751f\u6642)\u306binsert\u3057\u305f100\u4ee5\u5916\u306b\u3001\u4eca\u56deinsert\u3057\u305f5\u3001100\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\nPostgresql\u5074\n\n```\npgtest=> select * from pg_table;\n f\n----\n  1\n  2\n  3\n 20\n(4 \u884c)\n```\n\n\u4eca\u56de\u306f\u6b63\u5e38\u7d42\u4e86\u3057\u305f\u306e\u3067\u3001insert\u3057\u305f20\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u3053\u308c\u30672phase commit\u304c\u3067\u304d\u3066\u3044\u305d\u3046\u3067\u3059\u3002\n\n\n####\u6700\u5f8c\u306b\nAP\u30b5\u30fc\u30d0\u5074\u306e\u8a2d\u5b9a\u4ee5\u5916\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u90e8\u5206\u306f\u3053\u3053\u306b\u30a2\u30c3\u30d7\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/pocari/MultipleDatasourceTest\n", "tags": ["spring", "Java", "Wildfly", "JavaEE"]}