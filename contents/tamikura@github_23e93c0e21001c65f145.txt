{"context": "\n\nPacker\u3068\u306f\uff1f\n\n\u30de\u30b7\u30f3\u30a4\u30e1\u30fc\u30b8\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3059\u308b\u30c4\u30fc\u30eb\n\n\n\u30de\u30b7\u30f3\u30a4\u30e1\u30fc\u30b8\u306fAWS(AMI)\u3001Docker, Google, Azure\u306a\u3069\u5bfe\u5fdc\n\n\n\n\n\u74b0\u5883\n\nAmazon Linux AMI 2016.03.3\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nver0.10.1 (2016/07/18\u73fe\u5728\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3)\n\nsudo wget  https://releases.hashicorp.com/packer/0.10.1/packer_0.10.1_linux_amd64.zip\nsudo unzip packer_0.10.1_linux_amd64.zip -d /opt/packer/\nexport PATH=/opt/packer:$PATH\necho 'export PATH=/opt/packer:$PATH' >> ~/.bashrc\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u78ba\u8a8d\npacker version\n#=> Packer v0.10.1\n\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(\u6700\u4f4e\u9650)\n\nAMI\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u6700\u4f4e\u9650\u4ee5\u4e0b\u304c\u5fc5\u8981\n\n\ntype(AWS\u306e\u5834\u5408\"amazon-ebs\")\naccess_key(\u203baws configure\u3084IAM role\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u7701\u7565\u53ef)\nsecret_key(\u203baws configure\u3084IAM role\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u7701\u7565\u53ef)\n\u4f5c\u6210\u3059\u308bAMI\u540d\n\u30ea\u30fc\u30b8\u30e7\u30f3\n\u4f5c\u6210\u5143\u306eAMI\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\nssh\u30e6\u30fc\u30b6\u540d(\u4f8b\uff1aAmazonLinux\u306e\u5834\u5408\u3001ec2-user, CentOS\u306e\u5834\u5408\u3001centos)\n\n\nVPC, Subnet\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u3092\u4f7f\u7528\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3084\u3001\u30ad\u30fc\u30da\u30a2\u306fPacker\u304c\u5b9f\u884c\u6642\u306b\u4f5c\u6210\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u3089\u524a\u9664\uff08\u305d\u308c\u305e\u308c\u660e\u793a\u7684\u306b\u6307\u5b9a\u3082\u53ef\uff09\n\n\nminium.json\n{\n    \"builders\":\n    [\n        {\n            \"type\": \"amazon-ebs\",\n            \"access_key\": \"xxxxxx\",\n            \"secret_key\": \"xxxxxx\",\n            \"ami_name\": \"test ami\",\n            \"region\": \"ap-northeast-1\",\n            \"source_ami\": \"ami-374db956\",\n            \"instance_type\": \"t2.micro\",\n            \"ssh_username\": \"ec2-user\"\n        }\n    ],\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"inline\": [ \"echo hello world\" ]\n        }\n    ]\n}\n\n\n\n\u78ba\u8a8d\npacker validate minimum.json\n\n\n\u6210\u529f\u6642\nTemplate validated successfully.\n\n\n\n\u5931\u6557\u6642\u4f8b(\u5fc5\u9808\u9805\u76ee\u304c\u7121\u3044\u5834\u5408)\nTemplate validation failed. Errors are shown below.\n\nErrors validating build 'amazon-ebs'. 2 error(s) occurred:\n\n* An ssh_username must be specified\n* An instance_type must be specified\n\n\n\n\u5b9f\u884c\npacker build minimum.json\n\n\n\u5b9f\u884c\u7d50\u679c\u4f8b\namazon-ebs output will be in this color.\n\n==> amazon-ebs: Prevalidating AMI Name...\n==> amazon-ebs: Inspecting the source AMI...\n==> amazon-ebs: Creating temporary keypair: packer 578ce302-e01d-fab7-3f42-bba477c2671d\n==> amazon-ebs: Creating temporary security group for this instance...\n==> amazon-ebs: Authorizing access to port 22 the temporary security group...\n==> amazon-ebs: Launching a source AWS instance...\n    amazon-ebs: Instance ID: i-18db9087\n==> amazon-ebs: Waiting for instance (i-18db9087) to become ready...\n==> amazon-ebs: Waiting for SSH to become available...\n==> amazon-ebs: Connected to SSH!\n==> amazon-ebs: Provisioning with shell script: /tmp/packer-shell768722931\n    amazon-ebs: hello world\n==> amazon-ebs: Stopping the source instance...\n==> amazon-ebs: Waiting for the instance to stop...\n==> amazon-ebs: Creating the AMI: base 2016-07-18T14-09-06Z\n    amazon-ebs: AMI: ami-64936a05\n==> amazon-ebs: Waiting for AMI to become ready...\n==> amazon-ebs: Terminating the source AWS instance...\n==> amazon-ebs: Cleaning up any extra volumes...\n==> amazon-ebs: No volumes to clean up, skipping\n==> amazon-ebs: Deleting temporary security group...\n==> amazon-ebs: Deleting temporary keypair...\nBuild 'amazon-ebs' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> amazon-ebs: AMIs were created:\n\nap-northeast-1: ami-XXXXXXXX\n\n\n\n\u5b9f\u884c\u8a2d\u5b9a\n\n\u30c7\u30d0\u30c3\u30b0\u3057\u305f\u3044\n\n\u901a\u5e38\u306fAMI\u4f5c\u6210 or \u5931\u6557\u3059\u308b\u307e\u3067\u306f\u30ce\u30f3\u30b9\u30c8\u30c3\u30d7\u3060\u304c\u3001-debug\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\u4e2d\u3068\u304b\u3067\u30ed\u30b0\u30a4\u30f3\u3068\u304b\u53ef\u80fd\n\npacker build minimum.json -debug\n\n\ndebug\u5b9f\u884c\nDebug mode enabled. Builds will not be parallelized.\namazon-ebs output will be in this color.\n\n==> amazon-ebs: Prevalidating AMI Name...\n==> amazon-ebs: Pausing after run of step 'StepPreValidate'. Press enter to continue.\n\n\n\nCSV\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\n\n\n-machine-readable\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u51fa\u529b\u7d50\u679c\u304cCSV\u5f62\u5f0f\u306b\u306a\u308b\uff08\u306a\u306e\u3067\u4eba\u9593\u306b\u306f\u898b\u306b\u304f\u3044\uff09\n\npacker build minimum.json -machine-readable\n\n\ncsv\u5f62\u5f0f\u51fa\u529b\u7d50\u679c\n1468852163,,ui,say,amazon-ebs output will be in this color.\n1468852163,,ui,say,\n1468852164,,ui,say,==> amazon-ebs: Prevalidating AMI Name...\n1468852164,,ui,say,==> amazon-ebs: Inspecting the source AMI...\n1468852164,,ui,say,==> amazon-ebs: Creating temporary keypair: packer 578ce7c3-9fd7-094c-cd2d-2fa2eef3fbaa\n1468852164,,ui,say,==> amazon-ebs: Creating temporary security group for this instance...\n1468852164,,ui,say,==> amazon-ebs: Authorizing access to port 22 the temporary security group...\n....\n\n\n\n\u8a2d\u5b9a\u5024\u3092\u5916\u51fa\u3057(\u30b3\u30de\u30f3\u30c9)\n\n\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u30d5\u30a1\u30a4\u30eb\u306b\u76f4\u63a5\u8a18\u8f09\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001json\u30d5\u30a1\u30a4\u30eb\u306b{{user `\u5909\u6570\u540d`}}\u3068\u8a18\u8f09\u3057\u3066\u3001-var\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u53ef\u80fd(\u8907\u6570\u6307\u5b9a\u53ef)\n\n\nvariable.json\n{\n    \"builders\":\n    [\n        {\n            \"type\": \"amazon-ebs\",\n            \"access_key\": \"{{user `aws_access_key`}}\",\n            \"secret_key\": \"{{user `aws_secret_key`}}\",\n            \"ami_name\": \"test ami\",\n            \"region\": \"ap-northeast-1\",\n            \"source_ami\": \"ami-374db956\",\n            \"instance_type\": \"t2.micro\",\n            \"ssh_username\": \"ec2-user\"\n        }\n    ]\n}\n\n\npacker build -var 'aws_access_key=XXXX' -var 'aws_secret_key=XXXX' variable.json\n\n\n\u8a2d\u5b9a\u5024\u3092\u5916\u51fa\u3057(\u30d5\u30a1\u30a4\u30eb)\n\n\u5916\u51fa\u3057\u3057\u305f\u3044\u60c5\u5831\u306fjson\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u3002\u305d\u306e\u5834\u5408\u306f\u3001-var-file=<path>\u3067\u6307\u5b9a\u3059\u308b\n\n\ncredential.json\n{\n    \"aws_access_key\": \"xxxx\",\n    \"aws_secret_key\": \"xxxx\"\n}\n\n\npacker build -var-file=credential.json variable.json\n\n\n\u4f5c\u6210\u3055\u308c\u305fAMI ID\u3092\u53d6\u5f97\u3059\u308b\n\n\u4f5c\u6210\u3057\u305fAMI ID\u3092\u5f8c\u7d9a\u306e\u51e6\u7406\u306b\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u53d6\u5f97\u53ef\u80fd\n\npacker build minimum.json | tee output.log | tail -2 | head -2 | awk 'match($0, /ami-.*/) { print substr($0, RSTART, RLENGTH) }'\n# => ami-xxxxxx\n\n\nprovisioners\u8a2d\u5b9a\n\n\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n\n\n\"type\": \"shell\" + inline\u3067\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u8a18\u8ff0\u3059\u308b\uff08\u914d\u5217\u306a\u306e\u3067\u8907\u6570\u30b3\u30de\u30f3\u30c9\u6307\u5b9a\u53ef\uff09\n\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"inline\": [\n                \"echo update yum\",\n                \"sudo yum install -y yum-utils\"\n            ]\n        }\n    ]\n}\n\n\n\u30b7\u30a7\u30eb\uff08\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u5b9f\u884c\u3059\u308b\n\n\n\"type\": \"shell\" + script\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\n\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"script\": \"test.sh\"\n        }\n    ]\n}\n\n\n\u8907\u6570\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306fscripts\u3067\u6307\u5b9a\u3059\u308b\n\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"scripts\": [\n              \"test.sh\",\n              \"test2.sh\",\n            ]\n        }\n    ]\n}\n\n\nAMI(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u306b\u30d5\u30a1\u30a4\u30eb\u30fb\u30d5\u30a9\u30eb\u30c0\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\n\n\"type\": \"file\"\u3092\u4f7f\u3044\u3001source\u3067\u30b3\u30d4\u30fc\u5143\u30d5\u30a1\u30a4\u30eb\u30fb\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u3001destination\u3067\u30b3\u30d4\u30fc\u5148\u3092\u6307\u5b9a\u3059\u308b\n\n{\n    \"provisioners\": [\n        {\n            \"type\": \"file\",\n            \"source\": \"sample.txt\",\n            \"destination\": \"/home/ec2-user/sample.txt\"\n        },\n        {\n            \"type\": \"file\",\n            \"source\": \"sample_dir\",\n            \"destination\": \"/home/ec2-user\"\n        }\n    ]\n}\n\n\nAMI\u8a2d\u5b9a\n\nAMI\u306e\u540d\u524d\u306b\u65e5\u4ed8\u3092\u5165\u308c\u308b\n\nPacker\u5b9f\u884c\u6642\u306b\u65e2\u306b\u540c\u3058AMI\u540d\u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u65e5\u4ed8\u3068\u304b\u5165\u308c\u3066\u30e6\u30cb\u30fc\u30af\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001{{isotime | clean_ami_name}}\u3092\u5165\u308c\u308b\n\n{ \"ami_name\": \"Packer {{isotime | clean_ami_name}}\" }\n\n\n\u4f5c\u6210\u3055\u308c\u305fAMI\u540d(\u4f8b)\nPacker 2016-07-18T13-22-19Z\n\n\n\ntag\u8a2d\u5b9a\n\n\u30bf\u30b0\u306frun_tags\u3067\u6307\u5b9a\u3059\u308b\n\n{\n    \"builders\":\n    [\n        {\n            \"run_tags\": {\n                \"status\": \"deploy\",\n                \"packer\": \"false\"\n            }\n        }\n    ]\n}\n\n\n\u30c7\u30a3\u30b9\u30af\u30b5\u30a4\u30ba\u8a2d\u5b9a\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306f8GB\u306a\u306e\u3067\u3001\u4f8b\u3048\u307020GB\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\n\n{\n    \"builders\":\n    [\n        {\n            \"launch_block_device_mappings\": [\n                {\n                    \"device_name\": \"/dev/xvda\",\n                    \"volume_size\": 20\n                }\n            ]\n        }\n    ]\n}\n\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\nhttps://gist.github.com/danrigsby/11354917\n\n\n## Packer\u3068\u306f\uff1f\n* \u30de\u30b7\u30f3\u30a4\u30e1\u30fc\u30b8\u3092\u81ea\u52d5\u7684\u306b\u4f5c\u6210\u3059\u308b\u30c4\u30fc\u30eb\n  * \u30de\u30b7\u30f3\u30a4\u30e1\u30fc\u30b8\u306fAWS(AMI)\u3001Docker, Google, Azure\u306a\u3069\u5bfe\u5fdc\n\n## \u74b0\u5883\n* Amazon Linux AMI 2016.03.3\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* ver0.10.1 (2016/07/18\u73fe\u5728\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3)\n\n```\nsudo wget  https://releases.hashicorp.com/packer/0.10.1/packer_0.10.1_linux_amd64.zip\nsudo unzip packer_0.10.1_linux_amd64.zip -d /opt/packer/\nexport PATH=/opt/packer:$PATH\necho 'export PATH=/opt/packer:$PATH' >> ~/.bashrc\n```\n\n## \u30d0\u30fc\u30b8\u30e7\u30f3\u78ba\u8a8d\n```bash\npacker version\n#=> Packer v0.10.1\n```\n## \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u4f5c\u6210(\u6700\u4f4e\u9650)\n* AMI\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u3001\u6700\u4f4e\u9650\u4ee5\u4e0b\u304c\u5fc5\u8981\n  * type(AWS\u306e\u5834\u5408\"amazon-ebs\")\n  * access_key(\u203baws configure\u3084IAM role\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u7701\u7565\u53ef)\n  * secret_key(\u203baws configure\u3084IAM role\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u7701\u7565\u53ef)\n  * \u4f5c\u6210\u3059\u308bAMI\u540d\n  * \u30ea\u30fc\u30b8\u30e7\u30f3\n  * \u4f5c\u6210\u5143\u306eAMI\n  * \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\n  * ssh\u30e6\u30fc\u30b6\u540d(\u4f8b\uff1aAmazonLinux\u306e\u5834\u5408\u3001ec2-user, CentOS\u306e\u5834\u5408\u3001centos)\n* VPC, Subnet\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u3092\u4f7f\u7528\u3002\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3084\u3001\u30ad\u30fc\u30da\u30a2\u306fPacker\u304c\u5b9f\u884c\u6642\u306b\u4f5c\u6210\u3057\u3066\u3001\u7d42\u308f\u3063\u305f\u3089\u524a\u9664\uff08\u305d\u308c\u305e\u308c\u660e\u793a\u7684\u306b\u6307\u5b9a\u3082\u53ef\uff09\n\n```json:minium.json\n{\n    \"builders\":\n    [\n        {\n            \"type\": \"amazon-ebs\",\n            \"access_key\": \"xxxxxx\",\n            \"secret_key\": \"xxxxxx\",\n            \"ami_name\": \"test ami\",\n            \"region\": \"ap-northeast-1\",\n            \"source_ami\": \"ami-374db956\",\n            \"instance_type\": \"t2.micro\",\n            \"ssh_username\": \"ec2-user\"\n        }\n    ],\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"inline\": [ \"echo hello world\" ]\n        }\n    ]\n}\n```\n\n## \u78ba\u8a8d\n```bash\npacker validate minimum.json\n```\n\n```text:\u6210\u529f\u6642\nTemplate validated successfully.\n```\n```text:\u5931\u6557\u6642\u4f8b(\u5fc5\u9808\u9805\u76ee\u304c\u7121\u3044\u5834\u5408)\nTemplate validation failed. Errors are shown below.\n\nErrors validating build 'amazon-ebs'. 2 error(s) occurred:\n\n* An ssh_username must be specified\n* An instance_type must be specified\n```\n\n\n## \u5b9f\u884c\n```bash\npacker build minimum.json\n```\n```text:\u5b9f\u884c\u7d50\u679c\u4f8b\namazon-ebs output will be in this color.\n\n==> amazon-ebs: Prevalidating AMI Name...\n==> amazon-ebs: Inspecting the source AMI...\n==> amazon-ebs: Creating temporary keypair: packer 578ce302-e01d-fab7-3f42-bba477c2671d\n==> amazon-ebs: Creating temporary security group for this instance...\n==> amazon-ebs: Authorizing access to port 22 the temporary security group...\n==> amazon-ebs: Launching a source AWS instance...\n    amazon-ebs: Instance ID: i-18db9087\n==> amazon-ebs: Waiting for instance (i-18db9087) to become ready...\n==> amazon-ebs: Waiting for SSH to become available...\n==> amazon-ebs: Connected to SSH!\n==> amazon-ebs: Provisioning with shell script: /tmp/packer-shell768722931\n    amazon-ebs: hello world\n==> amazon-ebs: Stopping the source instance...\n==> amazon-ebs: Waiting for the instance to stop...\n==> amazon-ebs: Creating the AMI: base 2016-07-18T14-09-06Z\n    amazon-ebs: AMI: ami-64936a05\n==> amazon-ebs: Waiting for AMI to become ready...\n==> amazon-ebs: Terminating the source AWS instance...\n==> amazon-ebs: Cleaning up any extra volumes...\n==> amazon-ebs: No volumes to clean up, skipping\n==> amazon-ebs: Deleting temporary security group...\n==> amazon-ebs: Deleting temporary keypair...\nBuild 'amazon-ebs' finished.\n\n==> Builds finished. The artifacts of successful builds are:\n--> amazon-ebs: AMIs were created:\n\nap-northeast-1: ami-XXXXXXXX\n```\n\n\n## \u5b9f\u884c\u8a2d\u5b9a\n\n### \u30c7\u30d0\u30c3\u30b0\u3057\u305f\u3044\n* \u901a\u5e38\u306fAMI\u4f5c\u6210 or \u5931\u6557\u3059\u308b\u307e\u3067\u306f\u30ce\u30f3\u30b9\u30c8\u30c3\u30d7\u3060\u304c\u3001```-debug```\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\u4e2d\u3068\u304b\u3067\u30ed\u30b0\u30a4\u30f3\u3068\u304b\u53ef\u80fd\n\n```\npacker build minimum.json -debug\n```\n\n```text:debug\u5b9f\u884c\nDebug mode enabled. Builds will not be parallelized.\namazon-ebs output will be in this color.\n\n==> amazon-ebs: Prevalidating AMI Name...\n==> amazon-ebs: Pausing after run of step 'StepPreValidate'. Press enter to continue.\n```\n\n### CSV\u5f62\u5f0f\u3067\u8868\u793a\u3059\u308b\n* ```-machine-readable```\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u51fa\u529b\u7d50\u679c\u304cCSV\u5f62\u5f0f\u306b\u306a\u308b\uff08\u306a\u306e\u3067\u4eba\u9593\u306b\u306f\u898b\u306b\u304f\u3044\uff09\n\n```\npacker build minimum.json -machine-readable\n```\n\n```text:csv\u5f62\u5f0f\u51fa\u529b\u7d50\u679c\n1468852163,,ui,say,amazon-ebs output will be in this color.\n1468852163,,ui,say,\n1468852164,,ui,say,==> amazon-ebs: Prevalidating AMI Name...\n1468852164,,ui,say,==> amazon-ebs: Inspecting the source AMI...\n1468852164,,ui,say,==> amazon-ebs: Creating temporary keypair: packer 578ce7c3-9fd7-094c-cd2d-2fa2eef3fbaa\n1468852164,,ui,say,==> amazon-ebs: Creating temporary security group for this instance...\n1468852164,,ui,say,==> amazon-ebs: Authorizing access to port 22 the temporary security group...\n....\n```\n\n### \u8a2d\u5b9a\u5024\u3092\u5916\u51fa\u3057(\u30b3\u30de\u30f3\u30c9)\n* \u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u306a\u3069\u30d5\u30a1\u30a4\u30eb\u306b\u76f4\u63a5\u8a18\u8f09\u3057\u305f\u304f\u306a\u3044\u5834\u5408\u306f\u3001json\u30d5\u30a1\u30a4\u30eb\u306b```{{user `\u5909\u6570\u540d`}}```\u3068\u8a18\u8f09\u3057\u3066\u3001```-var```\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u53ef\u80fd(\u8907\u6570\u6307\u5b9a\u53ef)\n\n```json:variable.json\n{\n    \"builders\":\n    [\n        {\n            \"type\": \"amazon-ebs\",\n            \"access_key\": \"{{user `aws_access_key`}}\",\n            \"secret_key\": \"{{user `aws_secret_key`}}\",\n            \"ami_name\": \"test ami\",\n            \"region\": \"ap-northeast-1\",\n            \"source_ami\": \"ami-374db956\",\n            \"instance_type\": \"t2.micro\",\n            \"ssh_username\": \"ec2-user\"\n        }\n    ]\n}\n```\n\n```\npacker build -var 'aws_access_key=XXXX' -var 'aws_secret_key=XXXX' variable.json\n```\n\n### \u8a2d\u5b9a\u5024\u3092\u5916\u51fa\u3057(\u30d5\u30a1\u30a4\u30eb)\n* \u5916\u51fa\u3057\u3057\u305f\u3044\u60c5\u5831\u306fjson\u30d5\u30a1\u30a4\u30eb\u306b\u3059\u308b\u3053\u3068\u3082\u53ef\u3002\u305d\u306e\u5834\u5408\u306f\u3001```-var-file=<path>```\u3067\u6307\u5b9a\u3059\u308b\n\n```json:credential.json\n{\n    \"aws_access_key\": \"xxxx\",\n    \"aws_secret_key\": \"xxxx\"\n}\n```\n\n```\npacker build -var-file=credential.json variable.json\n```\n\n### \u4f5c\u6210\u3055\u308c\u305fAMI ID\u3092\u53d6\u5f97\u3059\u308b\n* \u4f5c\u6210\u3057\u305fAMI ID\u3092\u5f8c\u7d9a\u306e\u51e6\u7406\u306b\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u53d6\u5f97\u53ef\u80fd\n\n```bash\npacker build minimum.json | tee output.log | tail -2 | head -2 | awk 'match($0, /ami-.*/) { print substr($0, RSTART, RLENGTH) }'\n# => ami-xxxxxx\n```\n\n\n## provisioners\u8a2d\u5b9a \n\n### \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n* ```\"type\": \"shell\"``` + ```inline```\u3067\u5b9f\u884c\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092\u8a18\u8ff0\u3059\u308b\uff08\u914d\u5217\u306a\u306e\u3067\u8907\u6570\u30b3\u30de\u30f3\u30c9\u6307\u5b9a\u53ef\uff09\n\n```json\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"inline\": [\n                \"echo update yum\",\n                \"sudo yum install -y yum-utils\"\n            ]\n        }\n    ]\n}\n```\n\n### \u30b7\u30a7\u30eb\uff08\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u5b9f\u884c\u3059\u308b\n* ```\"type\": \"shell\"``` + ```script```\u3067\u5b9f\u884c\u3059\u308b\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3092\u6307\u5b9a\u3059\u308b\n\n```json\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"script\": \"test.sh\"\n        }\n    ]\n}\n```\n\n* \u8907\u6570\u6307\u5b9a\u3057\u305f\u3044\u5834\u5408\u306f```scripts```\u3067\u6307\u5b9a\u3059\u308b\n\n```json\n{\n    \"provisioners\": [\n        {\n            \"type\": \"shell\",\n            \"scripts\": [\n              \"test.sh\",\n              \"test2.sh\",\n            ]\n        }\n    ]\n}\n```\n\n### AMI(\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\u306b\u30d5\u30a1\u30a4\u30eb\u30fb\u30d5\u30a9\u30eb\u30c0\u3092\u30b3\u30d4\u30fc\u3059\u308b\n* ```\"type\": \"file\"```\u3092\u4f7f\u3044\u3001```source```\u3067\u30b3\u30d4\u30fc\u5143\u30d5\u30a1\u30a4\u30eb\u30fb\u30d5\u30a9\u30eb\u30c0\u3092\u6307\u5b9a\u3057\u3001```destination```\u3067\u30b3\u30d4\u30fc\u5148\u3092\u6307\u5b9a\u3059\u308b\n\n```json\n{\n    \"provisioners\": [\n        {\n            \"type\": \"file\",\n            \"source\": \"sample.txt\",\n            \"destination\": \"/home/ec2-user/sample.txt\"\n        },\n        {\n            \"type\": \"file\",\n            \"source\": \"sample_dir\",\n            \"destination\": \"/home/ec2-user\"\n        }\n    ]\n}\n```\n\n## AMI\u8a2d\u5b9a\n\n### AMI\u306e\u540d\u524d\u306b\u65e5\u4ed8\u3092\u5165\u308c\u308b\n* Packer\u5b9f\u884c\u6642\u306b\u65e2\u306b\u540c\u3058AMI\u540d\u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u3001\u65e5\u4ed8\u3068\u304b\u5165\u308c\u3066\u30e6\u30cb\u30fc\u30af\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001```{{isotime | clean_ami_name}}```\u3092\u5165\u308c\u308b\n\n```json\n{ \"ami_name\": \"Packer {{isotime | clean_ami_name}}\" }\n```\n\n```text:\u4f5c\u6210\u3055\u308c\u305fAMI\u540d(\u4f8b)\nPacker 2016-07-18T13-22-19Z\n```\n\n### tag\u8a2d\u5b9a\n* \u30bf\u30b0\u306f```run_tags```\u3067\u6307\u5b9a\u3059\u308b\n\n```json\n{\n    \"builders\":\n    [\n        {\n            \"run_tags\": {\n                \"status\": \"deploy\",\n                \"packer\": \"false\"\n            }\n        }\n    ]\n}\n```\n\n### \u30c7\u30a3\u30b9\u30af\u30b5\u30a4\u30ba\u8a2d\u5b9a\n* \u30c7\u30d5\u30a9\u30eb\u30c8\u306f8GB\u306a\u306e\u3067\u3001\u4f8b\u3048\u307020GB\u306b\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\n\n```json\n{\n    \"builders\":\n    [\n        {\n            \"launch_block_device_mappings\": [\n                {\n                    \"device_name\": \"/dev/xvda\",\n                    \"volume_size\": 20\n                }\n            ]\n        }\n    ]\n}\n```\n\n### \u53c2\u8003\u30da\u30fc\u30b8\n* https://gist.github.com/danrigsby/11354917\n", "tags": ["packer", "AWS"]}