{"context": " More than 1 year has passed since last update.\n\n\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\n\u524d\u56de\u306b\u7d9a\u3044\u3066react-bootstrap\u3068\u3044\u3046\u3053\u3068\u3067\u3001bootstrap\u306e\u7279\u8272\u3067\u3042\u308b\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3092React\u3067\u4f7f\u3063\u3066\u307f\u308b\u3002\n\u672c\u5bb6\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306bclass\u306brow, col\u3092\u6307\u5b9a\u3059\u308b\u3051\u3069\n<div class=\"row\">\n  <div class=\"col-md-8\">.col-md-8</div>\n  <div class=\"col-md-4\">.col-md-4</div>\n</div>\n\nreact-bootstrap\u3067\u306f\u305d\u308c\u305e\u308c\u72ec\u81ea\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n<Grid>\n  <Row>\n    <Col> </Col>\n    { /* \u7701\u7565 */ }\n  </Row>\n</Grid>\n\n\u66f4\u306bGrid\u3068\u3044\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u5168\u4f53\u3092\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\nCol\u306e\u6307\u5b9a\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n\n\nbootstrap\nreact-bootstrap <Col>\n\u4f8b\n\n\n\n\n.col-xs-*\nxs=*\n<Col xs={1} />\n\n\n.col-sm-*\nsm=*\n<Col sm={1} />\n\n\n.col-md-*\nmd=*\n<Col md={1} />\n\n\n.col-lg-*\nlg=*\n<Col lg={1} />\n\n\n.col-xs-offset-*\nxsOffset=*\n<Col xsOffset={1} />\n\n\n.col-sm-offset-*\nsmOffset=*\n<Col smOffset={1} />\n\n\n.col-md-offset-*\nmdOffset=*\n<Col mdOffset={1} />\n\n\n.col-lg-offset-*\nlgOffset=*\n<Col lgOffset={1} />\n\n\n.col-xs-push-*\nxsPush=*\n<Col xsPush={1} />\n\n\n.col-sm-push-*\nsmPush=*\n<Col smPush={1} />\n\n\n.col-md-push-*\nmdPush=*\n<Col mdPush={1} />\n\n\n.col-lg-push-*\nlgPush=*\n<Col lgPush={1} />\n\n\n.col-xs-pull-*\nxsPull=*\n<Col xsPull={1} />\n\n\n.col-sm-pull-*\nsmPull=*\n<Col smPull={1} />\n\n\n.col-md-pull-*\nmdPull=*\n<Col mdPull={1} />\n\n\n.col-lg-pull-*\nlgPull=*\n<Col lgPull={1} />\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u3053\u308c\u3092\u5143\u306b\u672c\u5bb6\u306eGrid\u30b5\u30f3\u30d7\u30eb\u3092react-bootstrap\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\u7121\u99c4\u306b\u9577\u3044\u3067\u3059\u3002\n// GridSample.jsx\nimport Arda from 'arda';\nimport {Grid, Row, Col} from 'react-bootstrap';\n// react-bootstrap\u306e\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u306e\u30b5\u30f3\u30d7\u30eb \nexport default class GridSample extends Arda.Component {\n    render() {\n        return ( \n            <Grid>\n                <div className=\"page-header\">\n                    <h1>Bootstrap grid examples</h1>\n                    <p className=\"lead\">Basic grid layouts to get you familiar with building within the Bootstrap grid system.</p>\n                </div>\n\n                <h3>Three equal columns</h3>\n                <p>Get three equal-width columns <strong>starting at desktops and scaling to large desktops</strong>. On mobile devices, tablets and below, the columns will automatically stack.</p>\n\n                <Row>\n                    <Col md={4}>.col-md-4</Col>\n                    <Col md={4}>.col-md-4</Col>\n                    <Col md={4}>.col-md-4</Col>\n                </Row>\n\n                <h3>Three unequal columns</h3>\n                <p>Get three columns <strong>starting at desktops and scaling to large desktops</strong> of various widths. Remember, grid columns should add up to twelve for a single horizontal block. More than that, and columns start stacking no matter the viewport.</p>\n\n                <Row>\n                    <Col md={3}>.col-md-3</Col>\n                    <Col md={6}>.col-md-6</Col>\n                    <Col md={3}>.col-md-3</Col>\n                </Row>\n\n                <h3>Two columns</h3>\n                <p>Get two columns <strong>starting at desktops and scaling to large desktops</strong>.</p>\n                    <Row>\n                        <Col md={8}>.col-md-8</Col>\n                        <Col md={4}>.col-md-4</Col>\n                    </Row>\n\n                <h3>Full width, single column</h3>\n                <p className=\"text-warning\">No grid classes are necessary for full-width elements.</p>\n\n                <hr />\n\n                <h3>Two columns with two nested columns</h3>\n                <p>Per the documentation, nesting is easy?just put a row of columns within an existing column. This gives you two columns <strong>starting at desktops and scaling to large desktops</strong>, with another two (equal widths) within the larger column.</p>\n                <p>At mobile device sizes, tablets and down, these columns and their nested columns will stack.</p>\n                <Row>\n                    <Col md={8}>\n                        .col-md-8\n                        <Row>\n                            <Col md={6}>col-md-6</Col>\n                            <Col md={6}>col-md-6</Col>\n                        </Row>\n                    </Col>\n                    <Col md={4}>.col-md-4</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Mixed: mobile and desktop</h3>\n                <p>The Bootstrap 3 grid system has four tiers of classes: xs (phones), sm (tablets), md (desktops), and lg (larger desktops). You can use nearly any combination of these classes to create more dynamic and flexible layouts.</p>\n                <p>Each tier of classes scales up, meaning if you plan on setting the same widths for xs and sm, you only need to specify xs.</p>\n                <Row>\n                    <Col xs={12} md={8}>.col-xs-12 .col-md-8</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                </Row>\n\n                <Row>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                </Row>\n                <Row>\n                    <Col xs={6}>.col-xs-6</Col>\n                    <Col xs={6}>.col-xs-6</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Mixed: mobile, tablet, and desktop</h3>\n                <p></p>\n                <Row>\n                    <Col xs={12} sm={6} lg={8}>.col-xs-12 .col-sm-6 .col-lg-8</Col>\n                    <Col xs={6} lg={4}>.col-xs-6 .col-lg-4</Col>\n                </Row>\n                <Row>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Column clearing</h3>\n                <p><a href=\"http://getbootstrap.com/css/#grid-responsive-resets\">Clear floats</a> at specific breakpoints to prevent awkward wrapping with uneven content.</p>\n                <Row>\n                    <Col xs={6} sm={3}>\n                        .col-xs-6 .col-sm-3\n                        <br />\n                        Resize your viewport or check it out on your phone for an example.\n                    </Col>\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                    { /* Add the extra clearfix for only the required viewport */ }\n                    <div className=\"clearfix visible-xs\"></div>\n\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Offset, push, and pull resets</h3>\n                <p>Reset offsets, pushes, and pulls at specific breakpoints.</p>\n                {/* v0.16.1\u3067\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3002#406\u3067\u4fee\u6b63\u3055\u308c\u3066\u3044\u308b\u3002 */}\n                <Row>\n                    <Col sm={5} md={6}>.col-sm-5 .col-md-6</Col>\n                    <Col sm={5} smOffset={2} md={6} mdOffset={0}>.col-sm-5 .col-sm-offset-2 .col-md-6 .col-md-offset-0</Col>\n                </Row>\n                <Row>\n                    <Col sm={6} md={5} lg={6}>.col-sm-6 .col-md-5 .col-lg-6</Col>\n                    <Col sm={6} md={5} mdOffset={2} lg={6} lgOffset={0}>.col-sm-6 .col-md-5 .col-md-offset-2 .col-lg-6 .col-lgOffset-0</Col>\n                </Row>\n\n          </Grid>\n        );\n    }\n}\n\n\u30b3\u30fc\u30c9\u306b\u3082\u30b3\u30e1\u30f3\u30c8\u3057\u305f\u3051\u3069\u3001react-bootstrap v0.16.1\u3067\u306f\u30d0\u30b0\u304c\u3042\u3063\u3066\u3001offset/push/poll\u306b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u7121\u52b9\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\u79c1\u306f30\u5206\u304f\u3089\u3044\u60a9\u3093\u3060\u2026\n# \u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u307f\u3088\u3046\n[\u524d\u56de](http://qiita.com/akiramei/items/d2b48963534dca07cce4)\u306b\u7d9a\u3044\u3066react-bootstrap\u3068\u3044\u3046\u3053\u3068\u3067\u3001bootstrap\u306e\u7279\u8272\u3067\u3042\u308b\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u3092React\u3067\u4f7f\u3063\u3066\u307f\u308b\u3002\n\n\u672c\u5bb6\u3060\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306bclass\u306brow, col\u3092\u6307\u5b9a\u3059\u308b\u3051\u3069\n\n```html\n<div class=\"row\">\n  <div class=\"col-md-8\">.col-md-8</div>\n  <div class=\"col-md-4\">.col-md-4</div>\n</div>\n```\n\nreact-bootstrap\u3067\u306f\u305d\u308c\u305e\u308c\u72ec\u81ea\u306e\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3068\u306a\u3063\u3066\u3044\u308b\u3002\n\n```js\n<Grid>\n  <Row>\n    <Col> </Col>\n    { /* \u7701\u7565 */ }\n  </Row>\n</Grid>\n```\n\n\u66f4\u306bGrid\u3068\u3044\u3046\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u5168\u4f53\u3092\u56f2\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nCol\u306e\u6307\u5b9a\u3092\u307e\u3068\u3081\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n|bootstrap |react-bootstrap \\<Col>|\u4f8b     |\n|:---------|:---------------|:------|\n|.col-xs-*  |xs=*            |\\<Col xs={1} /> |\n|.col-sm-*  |sm=*            |\\<Col sm={1} /> |\n|.col-md-*  |md=*            |\\<Col md={1} /> |\n|.col-lg-*  |lg=*            |\\<Col lg={1} /> |\n|.col-xs-offset-*|xsOffset=* |\\<Col xsOffset={1} /> |\n|.col-sm-offset-*|smOffset=* |\\<Col smOffset={1} /> |\n|.col-md-offset-*|mdOffset=* |\\<Col mdOffset={1} /> |\n|.col-lg-offset-*|lgOffset=* |\\<Col lgOffset={1} /> |\n|.col-xs-push-*|xsPush=* |\\<Col xsPush={1} /> |\n|.col-sm-push-*|smPush=* |\\<Col smPush={1} /> |\n|.col-md-push-*|mdPush=* |\\<Col mdPush={1} /> |\n|.col-lg-push-*|lgPush=* |\\<Col lgPush={1} /> |\n|.col-xs-pull-*|xsPull=* |\\<Col xsPull={1} /> |\n|.col-sm-pull-*|smPull=* |\\<Col smPull={1} /> |\n|.col-md-pull-*|mdPull=* |\\<Col mdPull={1} /> |\n|.col-lg-pull-*|lgPull=* |\\<Col lgPull={1} /> |\n\n# \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\u3053\u308c\u3092\u5143\u306b[\u672c\u5bb6\u306eGrid\u30b5\u30f3\u30d7\u30eb](http://getbootstrap.com/examples/grid/)\u3092react-bootstrap\u3067\u66f8\u304d\u76f4\u3057\u3066\u307f\u305f\u3002\u7121\u99c4\u306b\u9577\u3044\u3067\u3059\u3002\n\n```js\n// GridSample.jsx\nimport Arda from 'arda';\nimport {Grid, Row, Col} from 'react-bootstrap';\n// react-bootstrap\u306e\u30b0\u30ea\u30c3\u30c9\u30b7\u30b9\u30c6\u30e0\u306e\u30b5\u30f3\u30d7\u30eb \nexport default class GridSample extends Arda.Component {\n    render() {\n        return ( \n            <Grid>\n                <div className=\"page-header\">\n                    <h1>Bootstrap grid examples</h1>\n                    <p className=\"lead\">Basic grid layouts to get you familiar with building within the Bootstrap grid system.</p>\n                </div>\n\n                <h3>Three equal columns</h3>\n                <p>Get three equal-width columns <strong>starting at desktops and scaling to large desktops</strong>. On mobile devices, tablets and below, the columns will automatically stack.</p>\n\n                <Row>\n                    <Col md={4}>.col-md-4</Col>\n                    <Col md={4}>.col-md-4</Col>\n                    <Col md={4}>.col-md-4</Col>\n                </Row>\n\n                <h3>Three unequal columns</h3>\n                <p>Get three columns <strong>starting at desktops and scaling to large desktops</strong> of various widths. Remember, grid columns should add up to twelve for a single horizontal block. More than that, and columns start stacking no matter the viewport.</p>\n\n                <Row>\n                    <Col md={3}>.col-md-3</Col>\n                    <Col md={6}>.col-md-6</Col>\n                    <Col md={3}>.col-md-3</Col>\n                </Row>\n\n                <h3>Two columns</h3>\n                <p>Get two columns <strong>starting at desktops and scaling to large desktops</strong>.</p>\n                    <Row>\n                        <Col md={8}>.col-md-8</Col>\n                        <Col md={4}>.col-md-4</Col>\n                    </Row>\n\n                <h3>Full width, single column</h3>\n                <p className=\"text-warning\">No grid classes are necessary for full-width elements.</p>\n\n                <hr />\n\n                <h3>Two columns with two nested columns</h3>\n                <p>Per the documentation, nesting is easy?just put a row of columns within an existing column. This gives you two columns <strong>starting at desktops and scaling to large desktops</strong>, with another two (equal widths) within the larger column.</p>\n                <p>At mobile device sizes, tablets and down, these columns and their nested columns will stack.</p>\n                <Row>\n                    <Col md={8}>\n                        .col-md-8\n                        <Row>\n                            <Col md={6}>col-md-6</Col>\n                            <Col md={6}>col-md-6</Col>\n                        </Row>\n                    </Col>\n                    <Col md={4}>.col-md-4</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Mixed: mobile and desktop</h3>\n                <p>The Bootstrap 3 grid system has four tiers of classes: xs (phones), sm (tablets), md (desktops), and lg (larger desktops). You can use nearly any combination of these classes to create more dynamic and flexible layouts.</p>\n                <p>Each tier of classes scales up, meaning if you plan on setting the same widths for xs and sm, you only need to specify xs.</p>\n                <Row>\n                    <Col xs={12} md={8}>.col-xs-12 .col-md-8</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                </Row>\n\n                <Row>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                    <Col xs={6} md={4}>.col-xs-6 .col-md-4</Col>\n                </Row>\n                <Row>\n                    <Col xs={6}>.col-xs-6</Col>\n                    <Col xs={6}>.col-xs-6</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Mixed: mobile, tablet, and desktop</h3>\n                <p></p>\n                <Row>\n                    <Col xs={12} sm={6} lg={8}>.col-xs-12 .col-sm-6 .col-lg-8</Col>\n                    <Col xs={6} lg={4}>.col-xs-6 .col-lg-4</Col>\n                </Row>\n                <Row>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                    <Col xs={6} sm={4}>.col-xs-6 .col-sm-4</Col>\n                </Row>\n\n                <hr />\n\n                <h3>Column clearing</h3>\n                <p><a href=\"http://getbootstrap.com/css/#grid-responsive-resets\">Clear floats</a> at specific breakpoints to prevent awkward wrapping with uneven content.</p>\n                <Row>\n                    <Col xs={6} sm={3}>\n                        .col-xs-6 .col-sm-3\n                        <br />\n                        Resize your viewport or check it out on your phone for an example.\n                    </Col>\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                    { /* Add the extra clearfix for only the required viewport */ }\n                    <div className=\"clearfix visible-xs\"></div>\n\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                    <Col xs={6} sm={3}>.col-xs-6 .col-sm-3</Col>\n                </Row>\n                \n                <hr />\n\n                <h3>Offset, push, and pull resets</h3>\n                <p>Reset offsets, pushes, and pulls at specific breakpoints.</p>\n                {/* v0.16.1\u3067\u306f\u6b63\u3057\u304f\u52d5\u4f5c\u3057\u306a\u3044\u3002#406\u3067\u4fee\u6b63\u3055\u308c\u3066\u3044\u308b\u3002 */}\n                <Row>\n                    <Col sm={5} md={6}>.col-sm-5 .col-md-6</Col>\n                    <Col sm={5} smOffset={2} md={6} mdOffset={0}>.col-sm-5 .col-sm-offset-2 .col-md-6 .col-md-offset-0</Col>\n                </Row>\n                <Row>\n                    <Col sm={6} md={5} lg={6}>.col-sm-6 .col-md-5 .col-lg-6</Col>\n                    <Col sm={6} md={5} mdOffset={2} lg={6} lgOffset={0}>.col-sm-6 .col-md-5 .col-md-offset-2 .col-lg-6 .col-lgOffset-0</Col>\n                </Row>\n\n          </Grid>\n        );\n    }\n}\n```\n\n\u30b3\u30fc\u30c9\u306b\u3082\u30b3\u30e1\u30f3\u30c8\u3057\u305f\u3051\u3069\u3001react-bootstrap v0.16.1\u3067\u306f\u30d0\u30b0\u304c\u3042\u3063\u3066\u3001offset/push/poll\u306b0\u3092\u6307\u5b9a\u3059\u308b\u3068\u7121\u52b9\u306b\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\u79c1\u306f30\u5206\u304f\u3089\u3044\u60a9\u3093\u3060\u2026\n", "tags": ["reactjs", "arda", "babel", "bootstrap"]}