{"context": " More than 1 year has passed since last update.\n\u52d5\u4f5c\u78ba\u8a8d\nC++ Builder XE4\n\n\nstd::map\u306e\u4f7f\u7528\u3092\u3057\u3066\u307f\u305f\u3002\n\u53c2\u80031: http://gimite.net/bcbqtree/qtreemain.cgi?mode=thread&thread=367\n\u53c2\u80032: http://blog.livedoor.jp/dormolin/archives/51778178.html\n\u53c2\u80033: http://d.hatena.ne.jp/kenta11626918/20110418/1303111915\n\ntry1\nvoid __fastcall TForm1::Button2Click(TObject *Sender)\n{\n    std::map<String, String> *dic = new std::map<String, String>;\n\n    dic->insert(std::pair<String,String>(L\"0d\", L\"CR\"));\n    dic->insert(std::pair<String,String>(L\"0a\", L\"LF\"));\n\n    std::map<String,String>::const_iterator it;\n    String res;\n\n    it = dic->find(L\"0d\");\n    if (it->first == L\"0d\") {\n        ShowMessage(it->second); // CR\n    }\n\n    it = dic->find(L\"AA\");\n    if (it->first == L\"AA\") {\n        ShowMessage(it->second); // not shown\n    }\n\n    delete dic;\n}\n\nfind\u3067\u898b\u3064\u304b\u3063\u305f\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u306b->first\u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nRadStudio\u3067\u4e0a\u8a18\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u304a\u304b\u3057\u306a\u5165\u529b\u88dc\u5b8c\u304c\u50cd\u304f\u305f\u3081Sublime Text\u306a\u3069\u5225\u30a8\u30c7\u30a3\u30bf\u3067\u5b9f\u88c5\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3002\n\ntry2\n#include <map>\n...\nstatic std::map<String, String> *s_dic = NULL;\n...\nstatic const String kControlChars[][2] =\n{\n    { L\"0d\", L\"CR\"},\n    {L\"0a\", L\"LF\"}\n};\nstatic int s_ControlCharsCount = sizeof(kControlChars) / sizeof(kControlChars[0]);\n\nstatic void dic_register()\n{\n    s_dic = new std::map<String, String>;\n    for(int idx=0; idx < s_ControlCharsCount; idx++) {\n        s_dic->insert(std::pair<String,String>(\n            kControlChars[idx][0], kControlChars[idx][1]) );\n    }\n}\nstatic void dic_unregister() { \n  if (s_dic != NULL) {\n    delete s_dic; \n    s_dic = NULL;\n  }\n}\nstatic bool dic_find(String key, String *dst)\n{\n    std::map<String,String>::const_iterator it;\n    it = s_dic->find(key);\n    if (it->first != key) {\n        *dst = L\"\";\n        return false;\n    }\n    *dst = it->second;\n    return true;\n}\n\nvoid __fastcall TForm1::Button2Click(TObject *Sender)\n{\n    dic_register();\n\n    String key, res;\n    bool found;\n\n    // case1\n    key = L\"0d\";\n    found = dic_find(key, &res);\n    if (found) {\n        ShowMessage(key + L\"-->\" + res);\n    } else {\n        ShowMessage(key + L\" not found\");\n    }\n\n    // case2\n    key = L\"aa\";\n    found = dic_find(key, &res);\n    if (found) {\n        ShowMessage(res);\n    } else {\n        ShowMessage(key + L\" not found\");\n    }\n\n    dic_unregister();\n}\n\n```txt:\u52d5\u4f5c\u78ba\u8a8d\nC++ Builder XE4\n```\n\nstd::map\u306e\u4f7f\u7528\u3092\u3057\u3066\u307f\u305f\u3002\n\n\u53c2\u80031: http://gimite.net/bcbqtree/qtreemain.cgi?mode=thread&thread=367\n\u53c2\u80032: http://blog.livedoor.jp/dormolin/archives/51778178.html\n\u53c2\u80033: http://d.hatena.ne.jp/kenta11626918/20110418/1303111915\n\n## try1\n\n```cpp\nvoid __fastcall TForm1::Button2Click(TObject *Sender)\n{\n\tstd::map<String, String> *dic = new std::map<String, String>;\n\n\tdic->insert(std::pair<String,String>(L\"0d\", L\"CR\"));\n\tdic->insert(std::pair<String,String>(L\"0a\", L\"LF\"));\n\n\tstd::map<String,String>::const_iterator it;\n\tString res;\n\n\tit = dic->find(L\"0d\");\n\tif (it->first == L\"0d\") {\n\t\tShowMessage(it->second); // CR\n\t}\n\n\tit = dic->find(L\"AA\");\n\tif (it->first == L\"AA\") {\n\t\tShowMessage(it->second); // not shown\n\t}\n\n\tdelete dic;\n}\n```\n\nfind\u3067\u898b\u3064\u304b\u3063\u305f\u304b\u3069\u3046\u304b\u306e\u78ba\u8a8d\u306b->first\u3092\u4f7f\u3063\u3066\u3044\u308b\u304c\u3001\u3082\u3063\u3068\u3044\u3044\u65b9\u6cd5\u304c\u3042\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\nRadStudio\u3067\u4e0a\u8a18\u5b9f\u88c5\u3057\u3066\u3044\u308b\u3068\u304a\u304b\u3057\u306a\u5165\u529b\u88dc\u5b8c\u304c\u50cd\u304f\u305f\u3081Sublime Text\u306a\u3069\u5225\u30a8\u30c7\u30a3\u30bf\u3067\u5b9f\u88c5\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3002\n\n\n##try2\n\n```cpp\n#include <map>\n...\nstatic std::map<String, String> *s_dic = NULL;\n...\nstatic const String kControlChars[][2] =\n{\n\t{ L\"0d\", L\"CR\"},\n\t{L\"0a\", L\"LF\"}\n};\nstatic int s_ControlCharsCount = sizeof(kControlChars) / sizeof(kControlChars[0]);\n\nstatic void dic_register()\n{\n\ts_dic = new std::map<String, String>;\n\tfor(int idx=0; idx < s_ControlCharsCount; idx++) {\n\t\ts_dic->insert(std::pair<String,String>(\n\t\t\tkControlChars[idx][0], kControlChars[idx][1]) );\n\t}\n}\nstatic void dic_unregister() { \n  if (s_dic != NULL) {\n    delete s_dic; \n    s_dic = NULL;\n  }\n}\nstatic bool dic_find(String key, String *dst)\n{\n\tstd::map<String,String>::const_iterator it;\n\tit = s_dic->find(key);\n\tif (it->first != key) {\n\t\t*dst = L\"\";\n\t\treturn false;\n\t}\n\t*dst = it->second;\n\treturn true;\n}\n\nvoid __fastcall TForm1::Button2Click(TObject *Sender)\n{\n\tdic_register();\n\n\tString key, res;\n\tbool found;\n\n\t// case1\n\tkey = L\"0d\";\n\tfound = dic_find(key, &res);\n\tif (found) {\n\t\tShowMessage(key + L\"-->\" + res);\n\t} else {\n\t\tShowMessage(key + L\" not found\");\n\t}\n\n\t// case2\n\tkey = L\"aa\";\n\tfound = dic_find(key, &res);\n\tif (found) {\n\t\tShowMessage(res);\n\t} else {\n\t\tShowMessage(key + L\" not found\");\n\t}\n\n\tdic_unregister();\n}\n```\n\n", "tags": ["cppBuilder"]}