{"tags": ["\u30a2\u30bb\u30f3\u30d6\u30e9"], "context": " More than 1 year has passed since last update.\n\n\u30c7\u30fc\u30bf\u8ee2\u9001\nMOV r1, r2    Move register r2 to register r1\nMOV M, r      Move register to memory thru H-L\nMOV r, M      Move memory to register thru H-L\nMVI r, d8     Move immediate to register\nMVI M, d8     Move immediate to memory thru H-L\nSTAX B        Store A indirect thru BC\nSTAX D        Store A indirect thru DE\nLDAX B        Load A indirect thru BC\nLDAX D        Load A indirect thru DE\nSTA ad        Store A to memory\nLDA ad        Load A from memory\nLXI B, d16    Load register pair B-C immediate\nLXI D, d16    Load register pair D-E immediate\nLXI H, d16    Load register pair H-L immediate\nSHLD ad       Store H:L to memory\nLHLD ad       Load H:L from memory\nXCHG          Exchange D-E and H-L content\n\n\n\u8db3\u3057\u7b97\nADD r   Add register to A\nADD M   Add register to A thru H-L\nADI d8  Add immediate to A\nADC r   Add register to A with carry\nADC M   Add register to A with carry thru H-L\nACI d8  Add immediate to A with carry\nDAD B   Add register pair B-C to H-L \nDAD D   Add register pair D-E to H-L \nDAD H   Add register pair H-L to H-L \nDAD SP  Add stack pointer to H-L \n\n\n\u5f15\u304d\u7b97\nSUB r   Subtract register from A\nSUB M   Subtract register from A thru H-L\nSUI d8  Subtract immediate from A\nSBB r   Subtract register from A with borrow\nSBB M   Subtract register from A with borrow thru H-L\nSBI d8  Subtract immediate from A with borrow\n\n\n\u8ad6\u7406\u6f14\u7b97\nANA r   AND register with A\nANA M   AND register with A thru H-L\nANI d8  AND immediate with A\nORA r   OR register with A\nORA M   OR register with A thru H-L\nORI d8  OR immediate with A\nXRA r   ExclusiveOR register with A\nXRA M   ExclusiveOR register with A thru H-L\nXRI d8  ExclusiveOR immediate with A\nCMP r   Compare register with A\nCMP M   Compare register with A thru H-L\nCPI d8  Compare immediate with A\n\n\n\u30b7\u30d5\u30c8\nRLC Rotate A left(with carry affected)\nRRC Rotate A right(with carry affected)\nRAL Rotate A left through carry\nRAR Rotate A right through carry\n\n\n\u96d1\u547d\u4ee4\nCMA Compliment A\nCMC Compliment Carry flag\nSTC Set Carry flag\nDAA Decimal Adjust accumulator\n\n\n\u30a4\u30f3\u30af\u30ec\u30e1\u30f3\u30c8\u30c7\u30af\u30ec\u30e1\u30f3\u30c8\nINR r   Increment register\nINR M   Increment memory thru H-L\nDCR r   Decrement register\nDCR M   Decrement memory thru H-L\nINX B   Increment B-C register pair\nINX D   Increment D-E register pair\nINX H   Increment H-L register pair\nDCX B   Decrement B-C register pair\nDCX D   Decrement D-E register pair\nDCX H   Decrement H-L register pair\n\n\n\u30b8\u30e3\u30f3\u30d7\nJMP ad  jump Unconditional \nJC ad   jump on carry\nJNC ad  jump on no carry\nJZ ad   jump on zero \nJNZ ad  jump on no zero\nJP ad   jump on positive\nJM ad   jump on minus\nJPE ad  jump on parity even\nJPO ad  jump on parity odd\nPCHL    H & L to program counter\n\n\n\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\nCALL ad CALL Unconditional \nCC ad   CALL on carry\nCNC ad   CALL on no carry\nCZ ad   CALL on zero \nCNZ ad  CALL on no zero\nCP ad   CALL on positive\nCM ad   CALL on minus\nCPE ad  CALL on parity even\nCPO ad  CALL on parity odd\nRST m   Restart from m\n\n\n\u30ea\u30bf\u30fc\u30f3\nRET     Return\nRC ad   Return on carry\nRNC ad  Return on no carry\nRZ ad   Return on zero \nRNZ ad  Return on no zero\nRP ad   Return on positive\nRM ad   Return on minus\nRPE ad  Return on parity even\nRPO ad  Return on parity odd\n\n\n\u30b9\u30bf\u30c3\u30af\nPUSH B   Push register pair B-C on the stack\nPUSH D   Push register pair D-E on the stack\nPUSH H   Push register pair H-L on the stack\nPUSH PSW Push A and flags on the stack\nPOP B    Pop register pair B-C from the stack\nPOP D    Pop register pair D-E from the stack\nPOP H    Pop register pair H-L from the stack\nPOP PSW  Pop A and flags from the stack\nXTHL     Swap H:L with top word on stack\nSPHL     Set SP to content of H:L\nLXI SP, ad  Load immediate stack pointer\nINX SP   Increment stack pointer\nDCX SP   Decrement stack pointer\n\n\n\u5165\u51fa\u529b\nIN n    Input from port n\nOUT n   Output to port n\n\n\n\u5272\u308a\u8fbc\u307f\nEI  Enable interrupts\nDI  Disable interrupts\nHLT Halt processor\nNOP No operation\n\n\n\u88dc\u8db3\n\u30ec\u30b8\u30b9\u30bf\u306f\u30018\u30d3\u30c3\u30c8\u30677\u500b\u3042\u308b\u3002\n\u30d5\u30e9\u30b0\u306f\u30015\u500b\u3042\u308b\u3002\n\u547d\u4ee4\u9577\u306f\u30011\uff5e3\u30d0\u30a4\u30c8\u3002\n\u76f8\u5bfe\u30b8\u30e3\u30f3\u30d7\u304c\u306a\u3044\u3002\n#\u30c7\u30fc\u30bf\u8ee2\u9001\n```\nMOV r1, r2    Move register r2 to register r1\nMOV M, r      Move register to memory thru H-L\nMOV r, M      Move memory to register thru H-L\nMVI r, d8     Move immediate to register\nMVI M, d8     Move immediate to memory thru H-L\nSTAX B\t      Store A indirect thru BC\nSTAX D\t      Store A indirect thru DE\nLDAX B\t      Load A indirect thru BC\nLDAX D\t      Load A indirect thru DE\nSTA ad\t      Store A to memory\nLDA ad\t      Load A from memory\nLXI B, d16    Load register pair B-C immediate\nLXI D, d16    Load register pair D-E immediate\nLXI H, d16    Load register pair H-L immediate\nSHLD ad\t      Store H:L to memory\nLHLD ad\t      Load H:L from memory\nXCHG\t      Exchange D-E and H-L content\n```\n#\u8db3\u3057\u7b97\n```\nADD r\tAdd register to A\nADD M\tAdd register to A thru H-L\nADI d8\tAdd immediate to A\nADC r\tAdd register to A with carry\nADC M\tAdd register to A with carry thru H-L\nACI d8\tAdd immediate to A with carry\nDAD B\tAdd register pair B-C to H-L \nDAD D\tAdd register pair D-E to H-L \nDAD H\tAdd register pair H-L to H-L \nDAD SP\tAdd stack pointer to H-L \n```\n#\u5f15\u304d\u7b97\n```\nSUB r\tSubtract register from A\nSUB M\tSubtract register from A thru H-L\nSUI d8\tSubtract immediate from A\nSBB r\tSubtract register from A with borrow\nSBB M\tSubtract register from A with borrow thru H-L\nSBI d8\tSubtract immediate from A with borrow\n```\n#\u8ad6\u7406\u6f14\u7b97\n```\nANA r\tAND register with A\nANA M\tAND register with A thru H-L\nANI d8\tAND immediate with A\nORA r\tOR register with A\nORA M\tOR register with A thru H-L\nORI d8\tOR immediate with A\nXRA r\tExclusiveOR register with A\nXRA M\tExclusiveOR register with A thru H-L\nXRI d8\tExclusiveOR immediate with A\nCMP r\tCompare register with A\nCMP M\tCompare register with A thru H-L\nCPI d8\tCompare immediate with A\n```\n#\u30b7\u30d5\u30c8\n```\nRLC\tRotate A left(with carry affected)\nRRC\tRotate A right(with carry affected)\nRAL\tRotate A left through carry\nRAR\tRotate A right through carry\n```\n#\u96d1\u547d\u4ee4\n```\nCMA\tCompliment A\nCMC\tCompliment Carry flag\nSTC\tSet Carry flag\nDAA\tDecimal Adjust accumulator\n```\n#\u30a4\u30f3\u30af\u30ec\u30e1\u30f3\u30c8\u30c7\u30af\u30ec\u30e1\u30f3\u30c8\n```\nINR r\tIncrement register\nINR M\tIncrement memory thru H-L\nDCR r\tDecrement register\nDCR M\tDecrement memory thru H-L\nINX B\tIncrement B-C register pair\nINX D\tIncrement D-E register pair\nINX H\tIncrement H-L register pair\nDCX B\tDecrement B-C register pair\nDCX D\tDecrement D-E register pair\nDCX H\tDecrement H-L register pair\n```\n#\u30b8\u30e3\u30f3\u30d7\n```\nJMP ad\tjump Unconditional \nJC ad\tjump on carry\nJNC ad  jump on no carry\nJZ ad   jump on zero \nJNZ ad  jump on no zero\nJP ad   jump on positive\nJM ad   jump on minus\nJPE ad  jump on parity even\nJPO ad  jump on parity odd\nPCHL    H & L to program counter\n```\n#\u30b5\u30d6\u30eb\u30fc\u30c1\u30f3\n```\nCALL ad\tCALL Unconditional \nCC ad\tCALL on carry\nCNC ad   CALL on no carry\nCZ ad   CALL on zero \nCNZ ad  CALL on no zero\nCP ad   CALL on positive\nCM ad   CALL on minus\nCPE ad  CALL on parity even\nCPO ad  CALL on parity odd\nRST m   Restart from m\n```\n#\u30ea\u30bf\u30fc\u30f3\n```\nRET     Return\nRC ad\tReturn on carry\nRNC ad  Return on no carry\nRZ ad   Return on zero \nRNZ ad  Return on no zero\nRP ad   Return on positive\nRM ad   Return on minus\nRPE ad  Return on parity even\nRPO ad  Return on parity odd\n```\n#\u30b9\u30bf\u30c3\u30af\n```\nPUSH B\t Push register pair B-C on the stack\nPUSH D\t Push register pair D-E on the stack\nPUSH H\t Push register pair H-L on the stack\nPUSH PSW Push A and flags on the stack\nPOP B\t Pop register pair B-C from the stack\nPOP D\t Pop register pair D-E from the stack\nPOP H\t Pop register pair H-L from the stack\nPOP PSW\t Pop A and flags from the stack\nXTHL\t Swap H:L with top word on stack\nSPHL\t Set SP to content of H:L\nLXI SP, ad  Load immediate stack pointer\nINX SP   Increment stack pointer\nDCX SP   Decrement stack pointer\n```\n#\u5165\u51fa\u529b\n```\nIN n    Input from port n\nOUT n   Output to port n\n```\n#\u5272\u308a\u8fbc\u307f\n```\nEI\tEnable interrupts\nDI\tDisable interrupts\nHLT\tHalt processor\nNOP\tNo operation\n```\n#\u88dc\u8db3\n\u30ec\u30b8\u30b9\u30bf\u306f\u30018\u30d3\u30c3\u30c8\u30677\u500b\u3042\u308b\u3002\n\u30d5\u30e9\u30b0\u306f\u30015\u500b\u3042\u308b\u3002\n\u547d\u4ee4\u9577\u306f\u30011\uff5e3\u30d0\u30a4\u30c8\u3002\n\u76f8\u5bfe\u30b8\u30e3\u30f3\u30d7\u304c\u306a\u3044\u3002\n"}