{"tags": ["Python", "numpy"], "context": " More than 1 year has passed since last update.\u4eca\u5e74\u3092\u632f\u308a\u8fd4\u3063\u3066\u3001\u4eca\u5e74\u899a\u3048\u305fnumpy\u306e\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nr_, c_\n\n\u6700\u521d\u306f\u884c\u5217\u306e\u9023\u7d50\u3067\u3059\u3002vstack, hstack\u3092\u3088\u304f\u4f7f\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001r_, c_\u304c\u3088\u308a\u77ed\u304f\u7c21\u5358\u306b\u66f8\u3051\u308b\u306e\u3067\u3053\u3063\u3061\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n>>> a = np.arange(6).reshape(2, 3)\n>>> b = np.arange(6, 12).reshape(2, 3)\n>>> a\narray([[0, 1, 2],\n       [3, 4, 5]])\n>>> b\narray([[ 6,  7,  8],\n       [ 9, 10, 11]])\n>>> r_[a, b]\narray([[ 0,  1,  2],\n       [ 3,  4,  5],\n       [ 6,  7,  8],\n       [ 9, 10, 11]])\n>>> c_[a, b]\narray([[ 0,  1,  2,  6,  7,  8],\n       [ 3,  4,  5,  9, 10, 11]])\n\n\nbmat\n\n\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n>>> A = np.matrix('1 1; 1 1')\n>>> B = np.matrix('2 2; 2 2')\n>>> C = np.matrix('3 4; 5 6')\n>>> D = np.matrix('7 8; 9 0')\n>>> np.bmat([[A, B], [C, D]])\nmatrix([[1, 1, 2, 2],\n        [1, 1, 2, 2],\n        [3, 4, 7, 8],\n        [5, 6, 9, 0]])\n\n\nvsplit, hsplit\n\n\u5206\u5272\u306e\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002\n>>> a = np.arange(24).reshape(6, 4)\n>>> a\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18, 19],\n       [20, 21, 22, 23]])\n>>> np.vsplit(a, 2) # \u884c2\u5206\u5272\n[array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]]),\n array([[12, 13, 14, 15],\n       [16, 17, 18, 19],\n       [20, 21, 22, 23]])]\n>>> np.vsplit(a, [3, 5]) # \u884c\u30923\u884c\u76ee\u30685\u884c\u76ee\u3067\u5206\u5272\n[array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]]),\n array([[12, 13, 14, 15],\n       [16, 17, 18, 19]]),\n array([[20, 21, 22, 23]])]\n>>> np.hsplit(a, [3]) # \u5217\u30923\u5217\u76ee\u3067\u5206\u5272\n[array([[ 0,  1,  2],\n       [ 4,  5,  6],\n       [ 8,  9, 10],\n       [12, 13, 14],\n       [16, 17, 18],\n       [20, 21, 22]]),\n array([[ 3],\n       [ 7],\n       [11],\n       [15],\n       [19],\n       [23]])]\n\n\nvectorize\n\n\u30b9\u30ab\u30e9\u306b\u5bfe\u3059\u308b\u95a2\u6570\u3092np.sin\u306e\u3088\u3046\u306anumpy\u306e\u914d\u5217\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n>>> a = np.arange(6).reshape(2, 3)\n>>> f = lambda x: x * x\n>>> vf = np.vectorize(f)\n>>> vf(a)\narray([[ 0,  1,  4],\n       [ 9, 16, 25]])\n\n\nmupltiply\n\n\u914d\u5217\u306e\u8981\u7d20\u540c\u58eb\u306e\u639b\u3051\u7b97\u3092\u884c\u3046\u95a2\u6570multiply\u3067\u3059\u3002\u884c\u5217\u306e\u8a08\u7b97\u3068\u304b\u3067\u305f\u307e\u306b\u4f7f\u3044\u307e\u3059\u3002\n>>> a = np.matrix(np.arange(4).reshape(2, 2))\n>>> b = np.matrix(np.arange(4, 8).reshape(2, 2))\n>>> a\nmatrix([[0, 1],\n        [2, 3]])\n>>> b\nmatrix([[4, 5],\n        [6, 7]])\n>>> np.multiply(a, b)\nmatrix([[ 0,  5],\n        [12, 21]])\n\n\nlinalg.matrix_power\n\n\u884c\u5217\u306e\u4e57\u6570\u8a08\u7b97\u3067\u3059\u3002\n>>> a = np.matrix(np.arange(4).reshape(2, 2))\n>>> np.linalg.matrix_power(a, 0)\nmatrix([[1, 0],\n        [0, 1]])\n>>> np.linalg.matrix_power(a, 1)\nmatrix([[0, 1],\n        [2, 3]])\n>>> np.linalg.matrix_power(a, 2)\nmatrix([[ 2,  3],\n        [ 6, 11]])\n\n\nasscalar\n\n\u8981\u7d20\u6570\u304c1\u306e\u914d\u5217\u3092\u30b9\u30ab\u30e9\u30fc\u306b\u3057\u307e\u3059\u3002\n>>> np.asscalar(np.array([10.0]))\n10.0\n>>> np.asscalar(np.array([10.0, 20.0]))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/dist-packages/numpy/lib/type_check.py\", line 463, in asscalar\n    return a.item()\nValueError: can only convert an array of size 1 to a Python scalar\n\n\nis_busday\n\n\u5e73\u65e5\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n>>> import datetime\n>>> np.is_busday(datetime.date(2014, 12, 25))\nTrue\n>>> np.is_busday(datetime.date(2014, 12, 27))\nFalse\n>>> np.is_busday(datetime.date(2014, 12, 23))\nTrue\n>>> np.is_busday(datetime.date(2014, 12, 23), holidays=[datetime.date(2014, 12, 23)])\nFalse\n\n\npiecewise\n\n\u533a\u5206\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\nf(x) = \\begin{cases}\nf_1(x), & \\text{if }condition_1(x)\\text{ is true} \\\\\nf_2(x), & \\text{if }condition_2(x)\\text{ is true} \\\\\n...\n\\end{cases}\nf(x)=\u23a7\u23a9\u23a8f1(x),f2(x),...if\u00a0condition1(x)\u00a0is trueif\u00a0condition2(x)\u00a0is true{f(x) = \\begin{cases}\nf_1(x), & \\text{if }condition_1(x)\\text{ is true} \\\\\nf_2(x), & \\text{if }condition_2(x)\\text{ is true} \\\\\n...\n\\end{cases}\n}\n>>> x = np.linspace(-2.5, 2.5, 6)\n>>> x\narray([-2.5, -1.5, -0.5,  0.5,  1.5,  2.5])\n>>> np.piecewise(x, [x < 0, x >= 0], [-1, 1])\narray([-1., -1., -1.,  1.,  1.,  1.])\n>>> np.piecewise(x, [x < 0, x >= 0], [lambda x: -x, lambda x: x])\narray([ 2.5,  1.5,  0.5,  0.5,  1.5,  2.5])\n\n\u4eca\u5e74\u3092\u632f\u308a\u8fd4\u3063\u3066\u3001\u4eca\u5e74\u899a\u3048\u305fnumpy\u306e\u95a2\u6570\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## `r_`, `c_`\n\u6700\u521d\u306f\u884c\u5217\u306e\u9023\u7d50\u3067\u3059\u3002`vstack`, `hstack`\u3092\u3088\u304f\u4f7f\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001`r_`, `c_`\u304c\u3088\u308a\u77ed\u304f\u7c21\u5358\u306b\u66f8\u3051\u308b\u306e\u3067\u3053\u3063\u3061\u3092\u4f7f\u3063\u3066\u307e\u3059\u3002\n\n```pycon\n>>> a = np.arange(6).reshape(2, 3)\n>>> b = np.arange(6, 12).reshape(2, 3)\n>>> a\narray([[0, 1, 2],\n       [3, 4, 5]])\n>>> b\narray([[ 6,  7,  8],\n       [ 9, 10, 11]])\n>>> r_[a, b]\narray([[ 0,  1,  2],\n       [ 3,  4,  5],\n       [ 6,  7,  8],\n       [ 9, 10, 11]])\n>>> c_[a, b]\narray([[ 0,  1,  2,  6,  7,  8],\n       [ 3,  4,  5,  9, 10, 11]])\n```\n\n## `bmat`\n\u30b0\u30ea\u30c3\u30c9\u72b6\u306b\u7d50\u5408\u3057\u307e\u3059\u3002\n\n```pycon\n>>> A = np.matrix('1 1; 1 1')\n>>> B = np.matrix('2 2; 2 2')\n>>> C = np.matrix('3 4; 5 6')\n>>> D = np.matrix('7 8; 9 0')\n>>> np.bmat([[A, B], [C, D]])\nmatrix([[1, 1, 2, 2],\n        [1, 1, 2, 2],\n        [3, 4, 7, 8],\n        [5, 6, 9, 0]])\n```\n\n## `vsplit`, `hsplit`\n\u5206\u5272\u306e\u305f\u3081\u306e\u95a2\u6570\u3067\u3059\u3002\n\n```pycon\n>>> a = np.arange(24).reshape(6, 4)\n>>> a\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15],\n       [16, 17, 18, 19],\n       [20, 21, 22, 23]])\n>>> np.vsplit(a, 2) # \u884c2\u5206\u5272\n[array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]]),\n array([[12, 13, 14, 15],\n       [16, 17, 18, 19],\n       [20, 21, 22, 23]])]\n>>> np.vsplit(a, [3, 5]) # \u884c\u30923\u884c\u76ee\u30685\u884c\u76ee\u3067\u5206\u5272\n[array([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11]]),\n array([[12, 13, 14, 15],\n       [16, 17, 18, 19]]),\n array([[20, 21, 22, 23]])]\n>>> np.hsplit(a, [3]) # \u5217\u30923\u5217\u76ee\u3067\u5206\u5272\n[array([[ 0,  1,  2],\n       [ 4,  5,  6],\n       [ 8,  9, 10],\n       [12, 13, 14],\n       [16, 17, 18],\n       [20, 21, 22]]),\n array([[ 3],\n       [ 7],\n       [11],\n       [15],\n       [19],\n       [23]])]\n```\n\n## `vectorize`\n\u30b9\u30ab\u30e9\u306b\u5bfe\u3059\u308b\u95a2\u6570\u3092`np.sin`\u306e\u3088\u3046\u306anumpy\u306e\u914d\u5217\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```pycon\n>>> a = np.arange(6).reshape(2, 3)\n>>> f = lambda x: x * x\n>>> vf = np.vectorize(f)\n>>> vf(a)\narray([[ 0,  1,  4],\n       [ 9, 16, 25]])\n```\n\n## `mupltiply`\n\u914d\u5217\u306e\u8981\u7d20\u540c\u58eb\u306e\u639b\u3051\u7b97\u3092\u884c\u3046\u95a2\u6570`multiply`\u3067\u3059\u3002\u884c\u5217\u306e\u8a08\u7b97\u3068\u304b\u3067\u305f\u307e\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n```pycon\n>>> a = np.matrix(np.arange(4).reshape(2, 2))\n>>> b = np.matrix(np.arange(4, 8).reshape(2, 2))\n>>> a\nmatrix([[0, 1],\n        [2, 3]])\n>>> b\nmatrix([[4, 5],\n        [6, 7]])\n>>> np.multiply(a, b)\nmatrix([[ 0,  5],\n        [12, 21]])\n```\n\n## `linalg.matrix_power`\n\u884c\u5217\u306e\u4e57\u6570\u8a08\u7b97\u3067\u3059\u3002\n\n```pycon\n>>> a = np.matrix(np.arange(4).reshape(2, 2))\n>>> np.linalg.matrix_power(a, 0)\nmatrix([[1, 0],\n        [0, 1]])\n>>> np.linalg.matrix_power(a, 1)\nmatrix([[0, 1],\n        [2, 3]])\n>>> np.linalg.matrix_power(a, 2)\nmatrix([[ 2,  3],\n        [ 6, 11]])\n```\n\n## `asscalar`\n\u8981\u7d20\u6570\u304c1\u306e\u914d\u5217\u3092\u30b9\u30ab\u30e9\u30fc\u306b\u3057\u307e\u3059\u3002\n\n```pycon\n>>> np.asscalar(np.array([10.0]))\n10.0\n>>> np.asscalar(np.array([10.0, 20.0]))\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/lib/python2.7/dist-packages/numpy/lib/type_check.py\", line 463, in asscalar\n    return a.item()\nValueError: can only convert an array of size 1 to a Python scalar\n```\n\n## `is_busday`\n\u5e73\u65e5\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u3067\u3059\u3002\n\n```pycon\n>>> import datetime\n>>> np.is_busday(datetime.date(2014, 12, 25))\nTrue\n>>> np.is_busday(datetime.date(2014, 12, 27))\nFalse\n>>> np.is_busday(datetime.date(2014, 12, 23))\nTrue\n>>> np.is_busday(datetime.date(2014, 12, 23), holidays=[datetime.date(2014, 12, 23)])\nFalse\n```\n\n## `piecewise`\n\u533a\u5206\u95a2\u6570\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```math\nf(x) = \\begin{cases}\nf_1(x), & \\text{if }condition_1(x)\\text{ is true} \\\\\nf_2(x), & \\text{if }condition_2(x)\\text{ is true} \\\\\n...\n\\end{cases}\n```\n\n```pycon\n>>> x = np.linspace(-2.5, 2.5, 6)\n>>> x\narray([-2.5, -1.5, -0.5,  0.5,  1.5,  2.5])\n>>> np.piecewise(x, [x < 0, x >= 0], [-1, 1])\narray([-1., -1., -1.,  1.,  1.,  1.])\n>>> np.piecewise(x, [x < 0, x >= 0], [lambda x: -x, lambda x: x])\narray([ 2.5,  1.5,  0.5,  0.5,  1.5,  2.5])\n```\n"}