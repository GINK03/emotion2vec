{"context": " More than 1 year has passed since last update.SpringBoot\u3067Elasticsearch\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u5168\u4ef6\u691c\u7d22\u3092\u3057\u3066\u3044\u305f\u3089\u4f55\u6545\u304b10\u4ef6\u3057\u304b\u53d6\u3063\u3066\u3053\u308c\u306a\u304b\u3063\u305f\u3002\nJava\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5165\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\n\nSpringBoot 1.2.5\nspring-data-elasticsearch 1.1.3\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u305f\u3002\n@Autowired\nprivate ElasticsearchTemplate elasticsearchTemplate;\n\n...\n\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n                        .withIndices(\"model-search\")\n                        .withTypes(\"model\")\n                        .withQuery(QueryBuilders.matchAllQuery())\n                        .build();\n\nList<Model> models = elasticsearchTemplate.queryForList(searchQuery, Model.class);\n// \u4f55\u6545\u304b10\u4ef6\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\n\n\u304a\u304b\u3057\u3044\u306a\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u3044\u305f\u3089\u3001\u3069\u3046\u3084\u3089\u305d\u3046\u3044\u3046\u4ed5\u69d8\u3089\u3057\u304f\u89e3\u6c7a\u65b9\u6cd5\u3082\u898b\u3064\u304b\u3063\u305f\u3002\n\n3. Miscellaneous Elasticsearch Operation Support\nhow to disable page query in Spring-data-elasticsearch\n\n\u3053\u3053\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u306f\u3001\u300c\u4e00\u5ea6\u306b1\u30da\u30fc\u30b8\u5206\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\u306a\u3089\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u3066\u5168\u4ef6\u53d6\u3063\u3066\u304f\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\uff01\u300d\u3068\u3044\u3046\u65b9\u6cd5\u3002\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n            .withQuery(QueryBuilders.matchAllQuery())\n            .withIndices(\"model-search\")\n            .withTypes(\"model\")\n            .withSearchType(SearchType.SCAN)\n            .withPageable(new PageRequest(0, NUM_ITEMS_PER_SCROLL))\n            .build();\nString scrollId = elasticsearchTemplate.scan(searchQuery, SCROLL_TIME_IN_MILLIS, false);\nboolean hasRecords = true;\nwhile (hasRecords) {\n        Page<Model> page = elasticsearchTemplate.scroll(scrollId, SCROLL_TIME_IN_MILLIS, Model.class);\n        if (page != null) {\n            // DO something with the records\n            hasRecords = (page.getContent().size() == NUM_ITEMS_PER_SCROLL);\n        } else {\n            hasRecords = false;\n        }\n}\n\n\u306a\u308b\u307b\u3069\u51fa\u6765\u305f\u3002\n\u3061\u306a\u307f\u306b\u3001\u53d6\u3063\u3066\u304f\u308b\u4ef6\u6570\u304cInteger.MAX_VALUE\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308c\u3070\u3001\u4e00\u5ea6\u306b\u53d6\u3063\u3066\u304f\u308b\u4ef6\u6570\u3092\u5897\u3084\u3057\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\uff08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u672a\u8abf\u67fb\u3002\uff09\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n                        .withIndices(\"model-search\")\n                        .withTypes(\"model\")\n                        .withQuery(QueryBuilders.matchAllQuery())\n                        .withPageable(new PageRequest(0, Integer.MAX_VALUE))\n                        .build();\n\nList<Model> models = elasticsearchTemplate.queryForList(searchQuery, Model.class);\n\nSpringBoot\u3067Elasticsearch\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001\u5168\u4ef6\u691c\u7d22\u3092\u3057\u3066\u3044\u305f\u3089\u4f55\u6545\u304b10\u4ef6\u3057\u304b\u53d6\u3063\u3066\u3053\u308c\u306a\u304b\u3063\u305f\u3002\n\nJava\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5165\u308c\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\n\n* SpringBoot 1.2.5\n* spring-data-elasticsearch 1.1.3\n\n\u3067\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u3066\u307f\u305f\u3002\n\n```java\n@Autowired\nprivate ElasticsearchTemplate elasticsearchTemplate;\n\n...\n\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n                        .withIndices(\"model-search\")\n                        .withTypes(\"model\")\n                        .withQuery(QueryBuilders.matchAllQuery())\n                        .build();\n\nList<Model> models = elasticsearchTemplate.queryForList(searchQuery, Model.class);\n// \u4f55\u6545\u304b10\u4ef6\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\n```\n\n\u304a\u304b\u3057\u3044\u306a\u3068\u601d\u3063\u3066\u8abf\u3079\u3066\u3044\u305f\u3089\u3001\u3069\u3046\u3084\u3089\u305d\u3046\u3044\u3046\u4ed5\u69d8\u3089\u3057\u304f\u89e3\u6c7a\u65b9\u6cd5\u3082\u898b\u3064\u304b\u3063\u305f\u3002\n\n* [3. Miscellaneous Elasticsearch Operation Support](http://docs.spring.io/spring-data/elasticsearch/docs/1.0.4.RELEASE/reference/html/elasticsearch.misc.html)\n* [how to disable page query in Spring-data-elasticsearch](http://stackoverflow.com/questions/30730504/how-to-disable-page-query-in-spring-data-elasticsearch)\n\n\u3053\u3053\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u306f\u3001\u300c\u4e00\u5ea6\u306b1\u30da\u30fc\u30b8\u5206\u3057\u304b\u53d6\u5f97\u3067\u304d\u306a\u3044\u306a\u3089\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3055\u305b\u3066\u5168\u4ef6\u53d6\u3063\u3066\u304f\u308c\u3070\u3044\u3044\u3058\u3083\u306a\u3044\uff01\u300d\u3068\u3044\u3046\u65b9\u6cd5\u3002\n\n```java\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n            .withQuery(QueryBuilders.matchAllQuery())\n            .withIndices(\"model-search\")\n            .withTypes(\"model\")\n            .withSearchType(SearchType.SCAN)\n            .withPageable(new PageRequest(0, NUM_ITEMS_PER_SCROLL))\n            .build();\nString scrollId = elasticsearchTemplate.scan(searchQuery, SCROLL_TIME_IN_MILLIS, false);\nboolean hasRecords = true;\nwhile (hasRecords) {\n        Page<Model> page = elasticsearchTemplate.scroll(scrollId, SCROLL_TIME_IN_MILLIS, Model.class);\n        if (page != null) {\n            // DO something with the records\n            hasRecords = (page.getContent().size() == NUM_ITEMS_PER_SCROLL);\n        } else {\n            hasRecords = false;\n        }\n}\n```\n\n\u306a\u308b\u307b\u3069\u51fa\u6765\u305f\u3002\n\n\u3061\u306a\u307f\u306b\u3001\u53d6\u3063\u3066\u304f\u308b\u4ef6\u6570\u304cInteger.MAX_VALUE\u4ee5\u4e0b\u3067\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u3044\u308c\u3070\u3001\u4e00\u5ea6\u306b\u53d6\u3063\u3066\u304f\u308b\u4ef6\u6570\u3092\u5897\u3084\u3057\u3066\u3082\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\uff08\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u672a\u8abf\u67fb\u3002\uff09\n\n```java\nSearchQuery searchQuery = new NativeSearchQueryBuilder()\n                        .withIndices(\"model-search\")\n                        .withTypes(\"model\")\n                        .withQuery(QueryBuilders.matchAllQuery())\n                        .withPageable(new PageRequest(0, Integer.MAX_VALUE))\n                        .build();\n\nList<Model> models = elasticsearchTemplate.queryForList(searchQuery, Model.class);\n```\n", "tags": ["Java", "spring", "spring-boot", "Elasticsearch"]}