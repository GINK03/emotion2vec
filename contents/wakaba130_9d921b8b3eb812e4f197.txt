{"context": " More than 1 year has passed since last update.\n\n\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u3064\u3044\u3066\nOpenCV3.0\u304b\u3089\u3084\u3063\u3068\u5165\u3063\u305f\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u3064\u3044\u3066\u3067\u3059\uff0e\n\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u3068\u306f\uff0c\u753b\u7d20\u306e\u9023\u7d50\u6210\u5206\u3092\u898b\u3064\u3051\u3066\uff0c\u9023\u7d50\u6210\u5206\u3054\u3068\u306b\u4e00\u610f\u306e\u756a\u53f7\u3092\u4ed8\u4e0e\u3059\u308b\u51e6\u7406\u3067\u3059\uff0e\n\u30e9\u30d9\u30ea\u30f3\u30b0\u306e\u308f\u304b\u308a\u3084\u3059\u3044\u8aac\u660e\u306f\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3000\u753b\u50cf\u51e6\u7406\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nOpenCV\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\n\u4eca\u56de\u5b9f\u88c5\u3055\u308c\u305f\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306f\uff12\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0e\n\nOpenCV\n//\u30e9\u30d9\u30ea\u30f3\u30b0\uff08\u7c21\u6613\u7248\uff09\nint cv::connectedComponents(InputArray image, OutputArray labels, int connectivity = 8, int ltype = CV_32S)\n\n//\u30e9\u30d9\u30ea\u30f3\u30b0\uff08\u8a73\u7d30\u7248\uff09\nint cv::connectedComponentsWithStats(InputArray image, OutputArray labels, OutputArray stats, OutputArray centroids,\n                                     int connectivity = 8, int ltype = CV_32S)  \n\n\n1\u3064\u76ee\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\u306f\uff0c\u30e9\u3079\u30ea\u30f3\u30b0\u753b\u50cf\u306e\u307f\u3092\u51fa\u529b\u3059\u308b\u7c21\u6613\u7248\u3067\u3059\uff0e\n2\u3064\u76ee\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\u306f\uff0c\u91cd\u5fc3\u3084\u9762\u7a4d\uff0c\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5024\uff08x,y,width,height\uff09\u307e\u3067\u8fd4\u3057\u3066\u304f\u308c\u308b\u8a73\u7d30\u7248\u3067\u3059\uff0e\n\u8a73\u3057\u304f\u306fOpenCV\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n1\u3064\u76ee\u306e\u30e9\u30d9\u30ea\u30f3\u30b0\u95a2\u6570\u306b\u95a2\u3057\u3066\u306f\u3001\u3044\u308d\u3044\u308d\u306a\u30d6\u30ed\u30b0\u306b\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u7701\u304d\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f2\u3064\u76ee\u306e\u8a73\u7d30\u7248\u306e\u9762\u7a4d\u5024\u3084\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u53d6\u308a\u51fa\u3057\u65b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\uff0e\n\n\u8a73\u7d30\u7248\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\n\u8a73\u7d30\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u30e9\u30d9\u30ea\u30f3\u30b0\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nconnectedComponentsWithStats\nint connectedComponentsWithStats(InputArray image,      //\u5165\u529b\u753b\u50cf(CV_8UC1)\n                                 OutputArray labels,    //\u30e9\u30d9\u30eb\u753b\u50cf(CV_32SC1 or CV_16UC1)\n                                 OutputArray stats,     //\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u5f62\u6210\u3059\u308b\u5024\u3068\u9762\u7a4d\u5024\n                                 OutputArray centroids, //\u91cd\u5fc3(x,y)\uff08CV_64FC1\uff09\n                                 int connectivity=8,    //4\u9023\u7d50 or 8\u9023\u7d50\n                                 int ltype=CV_32S);     //\u30e9\u30d9\u30ea\u30f3\u30b0\u753b\u50cf\u306e\u30bf\u30a4\u30d7\n\n\nstats\u306e\u5024\u306f\u3001\u5217\u6319\u578b\u306ecv :: ConnectedComponentsTypes\u306b\u3088\u308a\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\ncv :: ConnectedComponentsTypes\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5217\u6319\u5b50\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002\n\n\n\n\u5217\u6319\u5b50\n\n\n\n\n\nCC_STAT_LEFT\n\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u4e00\u756a\u5de6\u4e0a\u306ex\u5ea7\u6a19\n\n\nCC_STAT_TOP\n\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u4e00\u756a\u5de6\u4e0a\u306ey\u5ea7\u6a19\n\n\nCC_STAT_WIDTH\n\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u6c34\u5e73\u65b9\u5411\u306e\u30b5\u30a4\u30ba\n\n\nCC_STAT_HEIGHT\n\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5782\u76f4\u65b9\u5411\u306e\u30b5\u30a4\u30ba\n\n\nCC_STAT_AREA\n\u9023\u7d50\u6210\u5206\u306e\u7dcf\u9762\u7a4d\uff08\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\uff09\n\n\nCC_STAT_MAX\n\uff1f\uff1f\uff1f\uff08\u4f55\u306b\u4f7f\u3046\u304b\u4e0d\u660e\uff09\n\n\n\n\u5b9f\u969b\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u91cd\u5fc3\u3068\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3068\u9762\u7a4d\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u9762\u7a4d\u5024\u3068\u306e\u5bfe\u5fdc\u3092\u53d6\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u9762\u7a4d\u5024\u3092\u6c42\u3081\u308b\u969b\u306b\u30e9\u30d9\u30eb\u756a\u53f7\u3082\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\nOpenCV\n#include<iostream>\n#include<vector>\n#include<random>\n#include<string>\n#include<strstream>\n#include\"OpenCV3.h\"\n\nint main(void)\n{\n    //\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5165\u529b\n    cv::Mat src = cv::imread(\"/*\u4efb\u610f\u306e\uff12\u5024\u753b\u50cf*/\", cv::IMREAD_GRAYSCALE);\n\n    //\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\n    cv::Mat LabelImg;\n    cv::Mat stats;\n    cv::Mat centroids;\n    int nLab = cv::connectedComponentsWithStats(src, LabelImg, stats, centroids);\n\n    // \u30e9\u30d9\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u63cf\u753b\u8272\u3092\u6c7a\u5b9a\n    std::vector<cv::Vec3b> colors(nLab);\n    colors[0] = cv::Vec3b(0, 0, 0);\n    for (int i = 1; i < nLab; ++i) {\n        colors[i] = cv::Vec3b((rand() & 255), (rand() & 255), (rand() & 255));\n    }\n\n    // \u30e9\u30d9\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u63cf\u753b\n    cv::Mat Dst(src.size(), CV_8UC3);\n    for (int i = 0; i < Dst.rows; ++i) {\n        int *lb = LabelImg.ptr<int>(i);\n        cv::Vec3b *pix = Dst.ptr<cv::Vec3b>(i);\n        for (int j = 0; j < Dst.cols; ++j) {\n            pix[j] = colors[lb[j]];\n        }\n    }\n\n    //ROI\u306e\u8a2d\u5b9a\n    for (int i = 1; i < nLab; ++i) {\n        int *param = stats.ptr<int>(i);\n\n        int x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n        int y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n        int height = param[cv::ConnectedComponentsTypes::CC_STAT_HEIGHT];\n        int width = param[cv::ConnectedComponentsTypes::CC_STAT_WIDTH];\n\n        cv::rectangle(Dst, cv::Rect(x, y, width, height), cv::Scalar(0, 255, 0), 2);\n    }\n\n    //\u91cd\u5fc3\u306e\u51fa\u529b\n    for (int i = 1; i < nLab; ++i) {\n        double *param = centroids.ptr<double>(i);\n        int x = static_cast<int>(param[0]);\n        int y = static_cast<int>(param[1]);\n\n        cv::circle(Dst,cv::Point(x, y), 3, cv::Scalar(0, 0, 255), -1);\n    }\n\n    //\u9762\u7a4d\u5024\u306e\u51fa\u529b\n    for (int i = 1; i < nLab; ++i) {\n        int *param = stats.ptr<int>(i);\n        std::cout << \"area \"<< i <<\" = \" << param[cv::ConnectedComponentsTypes::CC_STAT_AREA] << std::endl;\n\n        //ROI\u306e\u5de6\u4e0a\u306b\u756a\u53f7\u3092\u66f8\u304d\u8fbc\u3080\n        int x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n        int y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n        std::stringstream num;\n        num << i;\n        cv::putText(Dst, num.str(), cv::Point(x+5, y+20), cv::FONT_HERSHEY_COMPLEX, 0.7, cv::Scalar(0, 255, 255), 2);\n    }\n\n    cv::imshow(\"Src\", src);\n    cv::imshow(\"Labels\", Dst);\n    cv::waitKey();\n\n    return 0;\n}\n\n\n\n\u7d50\u679c\n\u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3059\u3068\u3001\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u7d50\u679c\u306e\u30e9\u30d9\u30eb\u3054\u3068\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u8272\u3092\u4ed8\u3051\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u7dd1\u306e\u77e9\u5f62\u3067\u3001\u91cd\u5fc3\u3092\u8d64\u307e\u308b\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u30e9\u30d9\u30eb\u3054\u3068\u306e\u9762\u7a4d\u3068\u30e9\u30d9\u30eb\u756a\u53f7\u3092\u63cf\u753b\u3057\u3066\u3001\u753b\u50cf\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n\u5165\u529b\u753b\u50cf\n\u203bQiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u969b\u306bjpg\u5909\u63db\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306e\u5165\u529b\u306f24\u30d3\u30c3\u30c8\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3067\u4f5c\u6210\u3057\u305f\u767d\u9ed2\u753b\u50cf\u3067\u3059\u3002\n\n\n\u51fa\u529b\u7d50\u679c\n\u203b\u3053\u3061\u3089\u3082Qiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u969b\u306b\u3001jpg\u5909\u63db\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306e\u51fa\u529b\u306f24\u30d3\u30c3\u30c8\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3067\u3059\u3002\n\n\n\u9762\u7a4d\u5024\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\u3067\u3082\u3001\u4eca\u3069\u304d\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u4f7f\u3063\u3066\u308b\u4eba\u3044\u308b\u306e\u304b\u306a\uff1f\u7269\u4f53\u9818\u57df\u691c\u51fa\u3068\u304b\u306e\u6b63\u89e3\u753b\u50cf\u4f5c\u308b\u3068\u304d\u306f\u4fbf\u5229\u304b\u3082\uff1f\n#\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u3064\u3044\u3066\nOpenCV3.0\u304b\u3089\u3084\u3063\u3068\u5165\u3063\u305f\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u3064\u3044\u3066\u3067\u3059\uff0e\n\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u3068\u306f\uff0c\u753b\u7d20\u306e\u9023\u7d50\u6210\u5206\u3092\u898b\u3064\u3051\u3066\uff0c\u9023\u7d50\u6210\u5206\u3054\u3068\u306b\u4e00\u610f\u306e\u756a\u53f7\u3092\u4ed8\u4e0e\u3059\u308b\u51e6\u7406\u3067\u3059\uff0e\n\u30e9\u30d9\u30ea\u30f3\u30b0\u306e\u308f\u304b\u308a\u3084\u3059\u3044\u8aac\u660e\u306f[\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3000\u753b\u50cf\u51e6\u7406\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3](http://imagingsolution.blog107.fc2.com/blog-entry-193.html \"\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3000\u753b\u50cf\u51e6\u7406\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\")\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n#OpenCV\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\n\u4eca\u56de\u5b9f\u88c5\u3055\u308c\u305f\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\u306f\uff12\u7a2e\u985e\u3042\u308a\u307e\u3059\uff0e\n\n```C++:OpenCV\n//\u30e9\u30d9\u30ea\u30f3\u30b0\uff08\u7c21\u6613\u7248\uff09\nint cv::connectedComponents(InputArray image, OutputArray labels, int connectivity = 8, int ltype = CV_32S)\n\n//\u30e9\u30d9\u30ea\u30f3\u30b0\uff08\u8a73\u7d30\u7248\uff09\nint cv::connectedComponentsWithStats(InputArray image, OutputArray labels, OutputArray stats, OutputArray centroids,\n                                     int connectivity = 8, int ltype = CV_32S)\t\n```\n\n1\u3064\u76ee\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\u306f\uff0c\u30e9\u3079\u30ea\u30f3\u30b0\u753b\u50cf\u306e\u307f\u3092\u51fa\u529b\u3059\u308b\u7c21\u6613\u7248\u3067\u3059\uff0e\n2\u3064\u76ee\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\u306f\uff0c\u91cd\u5fc3\u3084\u9762\u7a4d\uff0c\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5024\uff08x,y,width,height\uff09\u307e\u3067\u8fd4\u3057\u3066\u304f\u308c\u308b\u8a73\u7d30\u7248\u3067\u3059\uff0e\n\u8a73\u3057\u304f\u306f[OpenCV\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://docs.opencv.org/3.0.0/d3/dc0/group__imgproc__shape.html#gae57b028a2b2ca327227c2399a9d53241 \"OpenCV: Structural Analysis and Shape Descriptors\")\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n1\u3064\u76ee\u306e\u30e9\u30d9\u30ea\u30f3\u30b0\u95a2\u6570\u306b\u95a2\u3057\u3066\u306f\u3001\u3044\u308d\u3044\u308d\u306a\u30d6\u30ed\u30b0\u306b\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u7701\u304d\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u3067\u306f2\u3064\u76ee\u306e\u8a73\u7d30\u7248\u306e\u9762\u7a4d\u5024\u3084\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u53d6\u308a\u51fa\u3057\u65b9\u3092\u307e\u3068\u3081\u3066\u304a\u304d\u307e\u3059\uff0e\n\n#\u8a73\u7d30\u7248\u306e\u30e9\u3079\u30ea\u30f3\u30b0\u95a2\u6570\n\n\u8a73\u7d30\u60c5\u5831\u304c\u53d6\u5f97\u3067\u304d\u308b\u30e9\u30d9\u30ea\u30f3\u30b0\u95a2\u6570\u306f\u3001\u4ee5\u4e0b\u306e\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```C++:connectedComponentsWithStats\nint connectedComponentsWithStats(InputArray image,      //\u5165\u529b\u753b\u50cf(CV_8UC1)\n                                 OutputArray labels,    //\u30e9\u30d9\u30eb\u753b\u50cf(CV_32SC1 or CV_16UC1)\n                                 OutputArray stats,     //\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u5f62\u6210\u3059\u308b\u5024\u3068\u9762\u7a4d\u5024\n                                 OutputArray centroids, //\u91cd\u5fc3(x,y)\uff08CV_64FC1\uff09\n                                 int connectivity=8,    //4\u9023\u7d50 or 8\u9023\u7d50\n                                 int ltype=CV_32S);     //\u30e9\u30d9\u30ea\u30f3\u30b0\u753b\u50cf\u306e\u30bf\u30a4\u30d7\n```\n\nstats\u306e\u5024\u306f\u3001\u5217\u6319\u578b\u306e[cv :: ConnectedComponentsTypes](http://docs.opencv.org/3.0.0/d3/dc0/group__imgproc__shape.html#gac7099124c0390051c6970a987e7dc5c5)\u306b\u3088\u308a\u53c2\u7167\u3067\u304d\u307e\u3059\u3002\ncv :: ConnectedComponentsTypes\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5217\u6319\u5b50\u306f\u3001\u4ee5\u4e0b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u3059\u3002\n\n|\u5217\u6319\u5b50| |\n|:-----------|------------:|\n| CC_STAT_LEFT   | \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u4e00\u756a\u5de6\u4e0a\u306ex\u5ea7\u6a19  |\n| CC_STAT_TOP    | \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u4e00\u756a\u5de6\u4e0a\u306ey\u5ea7\u6a19  |\n| CC_STAT_WIDTH  | \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u6c34\u5e73\u65b9\u5411\u306e\u30b5\u30a4\u30ba |\n| CC_STAT_HEIGHT | \u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u306e\u5782\u76f4\u65b9\u5411\u306e\u30b5\u30a4\u30ba |\n| CC_STAT_AREA | \u9023\u7d50\u6210\u5206\u306e\u7dcf\u9762\u7a4d\uff08\u30d4\u30af\u30bb\u30eb\u5358\u4f4d\uff09 |\n| CC_STAT_MAX | \uff1f\uff1f\uff1f\uff08\u4f55\u306b\u4f7f\u3046\u304b\u4e0d\u660e\uff09 |\n\n\n\u5b9f\u969b\u306b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u91cd\u5fc3\u3068\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3068\u9762\u7a4d\u3092\u51fa\u529b\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304f\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\u9762\u7a4d\u5024\u3068\u306e\u5bfe\u5fdc\u3092\u53d6\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u3001\u9762\u7a4d\u5024\u3092\u6c42\u3081\u308b\u969b\u306b\u30e9\u30d9\u30eb\u756a\u53f7\u3082\u51fa\u529b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```C++:OpenCV\n#include<iostream>\n#include<vector>\n#include<random>\n#include<string>\n#include<strstream>\n#include\"OpenCV3.h\"\n\nint main(void)\n{\n\t//\u30b0\u30ec\u30fc\u30b9\u30b1\u30fc\u30eb\u5165\u529b\n\tcv::Mat src = cv::imread(\"/*\u4efb\u610f\u306e\uff12\u5024\u753b\u50cf*/\", cv::IMREAD_GRAYSCALE);\n\n\t//\u30e9\u3079\u30ea\u30f3\u30b0\u51e6\u7406\n\tcv::Mat LabelImg;\n\tcv::Mat stats;\n\tcv::Mat centroids;\n\tint nLab = cv::connectedComponentsWithStats(src, LabelImg, stats, centroids);\n\n\t// \u30e9\u30d9\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u63cf\u753b\u8272\u3092\u6c7a\u5b9a\n\tstd::vector<cv::Vec3b> colors(nLab);\n\tcolors[0] = cv::Vec3b(0, 0, 0);\n\tfor (int i = 1; i < nLab; ++i) {\n\t\tcolors[i] = cv::Vec3b((rand() & 255), (rand() & 255), (rand() & 255));\n\t}\n\n\t// \u30e9\u30d9\u30ea\u30f3\u30b0\u7d50\u679c\u306e\u63cf\u753b\n\tcv::Mat Dst(src.size(), CV_8UC3);\n\tfor (int i = 0; i < Dst.rows; ++i) {\n\t\tint *lb = LabelImg.ptr<int>(i);\n\t\tcv::Vec3b *pix = Dst.ptr<cv::Vec3b>(i);\n\t\tfor (int j = 0; j < Dst.cols; ++j) {\n\t\t\tpix[j] = colors[lb[j]];\n\t\t}\n\t}\n\n\t//ROI\u306e\u8a2d\u5b9a\n\tfor (int i = 1; i < nLab; ++i) {\n\t\tint *param = stats.ptr<int>(i);\n\n\t\tint x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n\t\tint y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n\t\tint height = param[cv::ConnectedComponentsTypes::CC_STAT_HEIGHT];\n\t\tint width = param[cv::ConnectedComponentsTypes::CC_STAT_WIDTH];\n\n\t\tcv::rectangle(Dst, cv::Rect(x, y, width, height), cv::Scalar(0, 255, 0), 2);\n\t}\n\n\t//\u91cd\u5fc3\u306e\u51fa\u529b\n\tfor (int i = 1; i < nLab; ++i) {\n\t\tdouble *param = centroids.ptr<double>(i);\n\t\tint x = static_cast<int>(param[0]);\n\t\tint y = static_cast<int>(param[1]);\n\n\t\tcv::circle(Dst,cv::Point(x, y), 3, cv::Scalar(0, 0, 255), -1);\n\t}\n\n\t//\u9762\u7a4d\u5024\u306e\u51fa\u529b\n\tfor (int i = 1; i < nLab; ++i) {\n\t\tint *param = stats.ptr<int>(i);\n\t\tstd::cout << \"area \"<< i <<\" = \" << param[cv::ConnectedComponentsTypes::CC_STAT_AREA] << std::endl;\n\n\t\t//ROI\u306e\u5de6\u4e0a\u306b\u756a\u53f7\u3092\u66f8\u304d\u8fbc\u3080\n\t\tint x = param[cv::ConnectedComponentsTypes::CC_STAT_LEFT];\n\t\tint y = param[cv::ConnectedComponentsTypes::CC_STAT_TOP];\n\t\tstd::stringstream num;\n\t\tnum << i;\n\t\tcv::putText(Dst, num.str(), cv::Point(x+5, y+20), cv::FONT_HERSHEY_COMPLEX, 0.7, cv::Scalar(0, 255, 255), 2);\n\t}\n\n\tcv::imshow(\"Src\", src);\n\tcv::imshow(\"Labels\", Dst);\n\tcv::waitKey();\n\n\treturn 0;\n}\n```\n\n#\u7d50\u679c\n\n\u4e0a\u8a18\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3059\u3068\u3001\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u7d50\u679c\u306e\u30e9\u30d9\u30eb\u3054\u3068\u306b\u30e9\u30f3\u30c0\u30e0\u306b\u8272\u3092\u4ed8\u3051\u3066\u51fa\u529b\u3057\u307e\u3059\u3002\n\u3055\u3089\u306b\u3001\u30d0\u30a6\u30f3\u30c7\u30a3\u30f3\u30b0\u30dc\u30c3\u30af\u30b9\u3092\u7dd1\u306e\u77e9\u5f62\u3067\u3001\u91cd\u5fc3\u3092\u8d64\u307e\u308b\u3067\u63cf\u753b\u3057\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001\u30e9\u30d9\u30eb\u3054\u3068\u306e\u9762\u7a4d\u3068\u30e9\u30d9\u30eb\u756a\u53f7\u3092\u63cf\u753b\u3057\u3066\u3001\u753b\u50cf\u3092\u51fa\u529b\u3057\u307e\u3059\u3002\n\n##\u5165\u529b\u753b\u50cf\n\u203bQiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u969b\u306bjpg\u5909\u63db\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306e\u5165\u529b\u306f24\u30d3\u30c3\u30c8\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u3067\u4f5c\u6210\u3057\u305f\u767d\u9ed2\u753b\u50cf\u3067\u3059\u3002\n![testimg.jpg](https://qiita-image-store.s3.amazonaws.com/0/104675/e75efed4-057d-3c9a-70bd-b3d3c79bbd06.jpeg)\n\n##\u51fa\u529b\u7d50\u679c\n\u203b\u3053\u3061\u3089\u3082Qiita\u306b\u30a2\u30c3\u30d7\u3059\u308b\u969b\u306b\u3001jpg\u5909\u63db\u304c\u304b\u304b\u3063\u3066\u3044\u307e\u3059\u3002\u5b9f\u969b\u306e\u51fa\u529b\u306f24\u30d3\u30c3\u30c8\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3067\u3059\u3002\n![Label.jpg](https://qiita-image-store.s3.amazonaws.com/0/104675/759c1f9a-56bd-1435-a406-21a3154c560f.jpeg)\n\n##\u9762\u7a4d\u5024\n![gazou.png](https://qiita-image-store.s3.amazonaws.com/0/104675/36283838-7cc0-23ea-8f5e-7285a25ee084.png)\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3048\u307e\u3059\u3002\n\u3067\u3082\u3001\u4eca\u3069\u304d\u30e9\u30d9\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u4f7f\u3063\u3066\u308b\u4eba\u3044\u308b\u306e\u304b\u306a\uff1f\u7269\u4f53\u9818\u57df\u691c\u51fa\u3068\u304b\u306e\u6b63\u89e3\u753b\u50cf\u4f5c\u308b\u3068\u304d\u306f\u4fbf\u5229\u304b\u3082\uff1f\n", "tags": ["OpenCV", "OpenCV3", "\u30e9\u3079\u30ea\u30f3\u30b0"]}