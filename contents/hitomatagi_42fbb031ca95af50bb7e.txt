{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3063\u305fJava\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u96e3\u3057\u3044\u7406\u7531\u3068\u3057\u3066\u4ee5\u4e0b\u306e\uff13\u3064\u304c\u3042\u3052\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n1. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u554f\u984c\n2. \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u306e\u554f\u984c\n3. \u30c6\u30b9\u30c8\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u554f\u984c\n\u3053\u308c\u3089\u306e\u554f\u984c\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001DbUnit\uff08\u30ea\u30f3\u30af\uff09\u3068H2 Database\uff08\u30ea\u30f3\u30af\uff09\u3092\u4f7f\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u307e\u3059\u3002\nDbUnit\u306f\u3001\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044\u305f\u3081\u3001Gradle\u3092\u4f7f\u3063\u3066\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nDBUnit\n\nDBUnit\u306f\u3001JUnit\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\nxml\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u5b8c\u4e86\u6642\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u8a18\u8f09\u3057\u305fxml\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u8f03\u3057\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001Excel\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nH2 Database\n\n\u30d4\u30e5\u30a2Java\u306eSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u5f62\u5f0f\u3068\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u7d44\u307f\u8fbc\u307f\u30e2\u30fc\u30c9\u3001\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3001\u30df\u30c3\u30af\u30b9\u30e2\u30fc\u30c9\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\n\n\u7d44\u307f\u8fbc\u307f\u30e2\u30fc\u30c9\n\n\n\n\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\n\n\n\n\u30df\u30c3\u30af\u30b9\u30e2\u30fc\u30c9\n\n\n\n\n\u30d6\u30e9\u30a6\u30b6\u3084\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\njar\u30d5\u30a1\u30a4\u30eb\uff11\u3064\uff081.5MB\uff09\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\nJDBC\u3068ODBC\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nGradle\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3059\u3002\nEclipse\u3084Android Studio\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\nMaven\u540c\u69d8\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u81ea\u52d5\u7684\u306b\u89e3\u6c7a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\u898f\u7d04\u306b\u5f93\u3063\u305f\u69cb\u6210\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u306a\u3069\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u53ef\u80fd\u3067\u3059\u3002\n\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u306bGroovy\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u308b\u305f\u3081\u3001\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\n\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nEclipse\u3001JDK\n\u4eca\u56de\u306f\u3001\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n\nEclipse 4.6 Neon Pleiades All in One\nJava SE Development Kit 8u102\nWindows 10\n\nEclipse\u3068JDK\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u307e\u3060\u306e\u65b9\u306f\u3053\u3061\u3089\u304b\u3089\u3002\n\nPleiades - Eclipse\uff1a\u30ea\u30f3\u30af\n\nOracle Java SE Development Kit\uff1a\u30ea\u30f3\u30af\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u3001Java\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3001\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n$ java -version\njava version \"1.8.0_102\"\nJava(TM) SE Runtime Environment (build 1.8.0_102-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n\n\nGradle\u3092\u4f7f\u3063\u3066Eclipse\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n\nEclipse - Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\nEclipse\u3092\u8d77\u52d5 \u2192 \u30d5\u30a1\u30a4\u30eb(F) \u2192 \u65b0\u898f(N) \u2192 Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 \n\n\u2192 \u65b0\u898f Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3001\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a \u2192 \u6b21\u3078(N)> \u2192 \n\n\u2192 \u6b21\u3078(N)> \u2192\n\n\u2192 Gradle \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\uff1a\u25ce Gradle \u30e9\u30c3\u30d1\u30fc(\u63a8\u5968) \u2192 \u6b21\u3078(N)> \u2192\n\n\u2192 \u5b8c\u4e86(F)\n\u3000\n\n\nGradle\u30e9\u30c3\u30d1\u30fc\u306e\u8a2d\u5b9a\nEclipse\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u540c\u68b1\u3055\u308c\u3066\u3044\u308bGradle\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5c11\u3057\u53e4\u3044\u305f\u3081\u66f4\u65b0\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\nSample\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 gradle/wrapper/gradle-wrapper.properties\n\uff08\u5909\u66f4\u524d\uff09\n\ndistributionUrl=https://services.gradle.org/distributions/gradle-2.13-bin.zip\n\n\uff08\u5909\u66f4\u5f8c\uff09\n\ndistributionUrl=https://services.gradle.org/distributions/gradle-3.1-bin.zip\n\nGradle\u30e9\u30c3\u30d1\u30fc\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3068\u304d\u306b\u3001\u6307\u5b9a\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u81ea\u52d5\u7684\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n\u3000\n\n\nbuild.gradle\u306e\u8a2d\u5b9a\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u751f\u6210\u3055\u308c\u305fbuild.gradle\u306b\u5bfe\u3057\u3001\u6b21\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\u3000  \n\neclipse\u30d7\u30e9\u30b0\u30a4\u30f3\nh2\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\nslf4j-nop\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\ndbunit\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\nJava\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u5bfe\u3057\u3066\u30a8\u30f3\u30b3\u30fc\u30c9UTF-8\u3092\u6307\u5b9a\n\n\u30b3\u30e1\u30f3\u30c8\u629c\u304d\u3067build.gradle\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nbuild.gradle\napply plugin: 'java'\napply plugin: 'eclipse'\n\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    compile 'org.slf4j:slf4j-api:1.7.21'\n    compile group: 'com.h2database', name: 'h2', version: '1.4.192'\n\n    compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'\n    compile group: 'org.dbunit', name: 'dbunit', version: '2.5.3'\n    testCompile 'junit:junit:4.12'\n}\n\ntasks.withType(JavaCompile) {\n    options.encoding = 'UTF-8'\n}\n\n\n\u3053\u3053\u3067Eclipse\u3092 \u518d\u8d77\u52d5\uff08\u7d42\u4e86 \u2192 \u8d77\u52d5\uff09 \u3057\u307e\u3059\u3002\nbuild.gradle\u306b\u8ffd\u52a0\u3057\u305feclipse\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u60c5\u5831\u3092Eclipse\u304c\u8a8d\u8b58\u3057\u307e\u3059\u3002\n\u3000\n\n\u3000  \n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\n\ngradle\u306eeclipse\u30bf\u30b9\u30af\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002\n\u3000Eclipse \u2192 Gradle\u30bf\u30b9\u30af \u30bf\u30d6 \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e \u2192 ide \u2192 eclipse \u3092\u30af\u30ea\u30c3\u30af\n\u3000eclipse\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u3000\u3000\n\u3000\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\nEclipse \u2192 \u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af \u2192 \u30d3\u30eb\u30c9\u30fb\u30d1\u30b9(B) \u2192 \u30d3\u30eb\u30c9\u30fb\u30d1\u30b9\u306e\u69cb\u6210(C)... \u2192 \n\n\u2192 \u9806\u5e8f\u304a\u3088\u3073\u30a8\u30af\u30b9\u30dd\u30fc\u30c8(O) \u2192 \n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u7684\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001.gradle\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\n\u203b \u4eca\u56de\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f DBUnit ver.2.5.3 \u306f\u3001 POI ver.3.14 \u3068\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n\n\n\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u6982\u8981\u8aac\u660e\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\n\u3000\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u6642\u306f\u3001H2 Database\u3092\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u3067\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306eURL\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\n\nTopic\nURL Examples\n\n\n\n\nIn-memory (private)\njdbc:h2:mem:\n\n\nIn-memory (named)\njdbc:h2:mem:<databaseName>\n\n\n\n\u3000H2 Database\u306e\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u304c\u5207\u308c\u305f\u6642\u70b9\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5931\u308f\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u4e2d\u3001\u63a5\u7d9a\u304c\u5207\u308c\u3066\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5931\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9URL\u306b;DB_CLOSE_DELAY=-1\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306bJavaVM\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u9593\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5b58\u5728\u3057\u3064\u3065\u3051\u307e\u3059\u3002\nprivate static final String JDBC_URL = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\";\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\uff08Person.java, PersonRepository.java, PersonRepositoryTest.java\uff09\u304a\u3088\u3073\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\uff08setup_dataset.xml, schema.sql\uff09\u306f\u6b21\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\u3000\u3000\u3000\u3000\u3000\n\n\u30b9\u30ad\u30fc\u30de\u306e\u69cb\u7bc9\n@BeforeClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3068\u3053\u308d\u3067\u3001schema.sql\u3092\u5b9f\u884c\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\norg.h2.tools.RunScript#execute()\u3067sql\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nexecute_sql.java\nRunScript.execute(JDBC_URL, USER, PASSWORD, \"data/schema.sql\", UTF8, false);\n\n\n\n\u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u307e\u305a\u3001org.dbunit.dataset.IDataSet\u306bXML\u30d5\u30a1\u30a4\u30eb\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\nXML\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306f\u3001org.dbunit.dataset.xml.FlatXmlDataSetBuilder.FlatXmlDataSetBuilder().build()\u3067\u884c\u3044\u307e\u3059\u3002\n\nread_xml.java\nreturn new FlatXmlDataSetBuilder().build(new File(\"data/setup_dataset.xml\"));\n\n\n\u7d9a\u3044\u3066\u3001org.dbunit.IDatabaseTester\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u3057\u307e\u3059\u3002setSetUpOperation()\u306b\u3001DatabaseOperation.CLEAN_INSERT\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002DatabaseOperation.CLEAN_INSERT\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u73fe\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002setDataSet()\u3067\u5bfe\u8c61\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3001onSetup()\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nset_dataset.java\n        IDatabaseTester databaseTester = new JdbcDatabaseTester(JDBC_DRIVER, JDBC_URL, USER, PASSWORD);\n        databaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n        databaseTester.setDataSet(dataSet);\n        databaseTester.onSetup();\n\n\n\nER\u56f3\n\npersons\u30c6\u30fc\u30d6\u30eb\u306egender_id\u306bgenders\u30c6\u30fc\u30d6\u30eb\u306eid\u3092\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\n\nPerson.java\npackage databasetest;\n\npublic class Person {\n\n    private final String firstName;\n    private final String lastName;\n    private final int age;\n    private final String genderName;\n\n    public Person(String firstName, String lastName, int age, String genderName) {\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.age = age;\n        this.genderName = genderName;\n    }\n\n    public String getFirstName() {\n        return firstName;\n    }\n\n    public String getLastName() {\n        return lastName;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public String getGenderName() {\n        return genderName;\n    }\n}\n\n\n\nPersonDao.java\npackage databasetest;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\nimport javax.sql.DataSource;\n\npublic class PersonDao {\n\n    private final DataSource dataSource;\n\n    public PersonDao(DataSource dataSource) {\n        this.dataSource = dataSource;\n    }\n\n    public Person findPersonByFirstName(String name) throws SQLException {\n        Person person = null;\n        PreparedStatement statement = dataSource.getConnection()\n                .prepareStatement(\"SELECT first_name, last_name, age, gender_name FROM persons, genders WHERE gender_id = genders.id AND first_name = ?\");\n        statement.setString(1, name);\n        ResultSet resultSet = null;\n        try {\n            resultSet = statement.executeQuery();\n            if (resultSet.next()) {\n                person = convertSingleRow(resultSet);\n            }\n        } finally {\n            closeQuietly(resultSet);\n            closeQuietly(statement);\n        }\n        return person;\n    }\n\n    private Person convertSingleRow(ResultSet resultSet) throws SQLException {\n        String firstName = resultSet.getString(\"first_name\");\n        String lastName = resultSet.getString(\"last_name\");\n        int age = resultSet.getInt(\"age\");\n        String genderName = resultSet.getString(\"gender_name\");\n        return new Person(firstName, lastName, age, genderName);\n    }\n\n    private void closeQuietly(ResultSet resultSet) {\n        try {\n            resultSet.close();\n        } catch (SQLException exception) {\n        }\n    }\n\n    private void closeQuietly(Statement statement) {\n        try {\n            statement.close();\n        } catch (SQLException exception) {\n        }\n    }\n\n}\n\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nPersonDaoTest.java\npackage databasetest;\n\nimport static org.h2.engine.Constants.*;\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.hamcrest.MatcherAssert.*;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.sql.Connection;\n\nimport javax.sql.DataSource;\n\nimport org.dbunit.Assertion;\nimport org.dbunit.IDatabaseTester;\nimport org.dbunit.JdbcDatabaseTester;\nimport org.dbunit.database.DatabaseConnection;\nimport org.dbunit.dataset.IDataSet;\nimport org.dbunit.dataset.ITable;\nimport org.dbunit.dataset.excel.XlsDataSet;\nimport org.dbunit.dataset.xml.FlatXmlDataSetBuilder;\nimport org.dbunit.operation.DatabaseOperation;\nimport org.h2.jdbcx.JdbcDataSource;\nimport org.h2.tools.RunScript;\nimport org.junit.BeforeClass;\nimport org.junit.Ignore;\nimport org.junit.Test;\n\npublic class PersonDaoTest {\n\n    private static final String JDBC_DRIVER = org.h2.Driver.class.getName();\n    private static final String JDBC_URL = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\";\n    private static final String USER = \"sa\";\n    private static final String PASSWORD = \"\";\n\n    @BeforeClass\n    public static void createSchema() throws Exception {\n        RunScript.execute(JDBC_URL, USER, PASSWORD, \"data/schema.sql\", UTF8, false);\n    }\n\n    private IDataSet readDataSet(String dataPath) throws Exception {\n        // for XML\n        return new FlatXmlDataSetBuilder().build(new File(dataPath));\n        // for Excel\n        // return new XlsDataSet(new File(dataPath));\n    }\n\n    private void cleanlyInsert(IDataSet dataSet) throws Exception {\n        IDatabaseTester databaseTester = new JdbcDatabaseTester(JDBC_DRIVER, JDBC_URL, USER, PASSWORD);\n        databaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n        databaseTester.setDataSet(dataSet);\n        databaseTester.onSetup();\n    }\n\n    @Test\n    public void \u5b58\u5728\u3059\u308b\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n        // Arrange\n        IDataSet dataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(dataSet);\n        PersonDao dao = new PersonDao(dataSource());\n\n        // Action\n        Person person = dao.findPersonByFirstName(\"Theresa\");\n\n        // Assert\n        assertThat(person.getFirstName(), is(\"Theresa\"));\n        assertThat(person.getLastName(), is(\"May\"));\n        assertThat(person.getAge(), is(43));\n        assertThat(person.getGenderName(), is(\"Female\"));\n    }\n\n    @Test\n    public void \u5b58\u5728\u3057\u306a\u3044\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n        // Arrange\n        IDataSet dataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(dataSet);\n        PersonDao dao = new PersonDao(dataSource());\n\n        // Action\n        Person person = dao.findPersonByFirstName(\"I don't exist\");\n\n        // Assert\n        assertThat(person, is(nullValue()));\n    }\n\n    @Test\n    public void \u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n        Connection conn = dataSource().getConnection();\n        DatabaseConnection dbConn = new DatabaseConnection(conn);\n        IDataSet databaseDataSet = dbConn.createDataSet();\n        ITable actualTable = databaseDataSet.getTable(\"persons\");\n\n        // Assert\n        IDataSet expectedDataSet = readDataSet(\"data/expected_dataset_table.xml\");\n        ITable expectedTable = expectedDataSet.getTable(\"persons\");\n\n        Assertion.assertEquals(expectedTable, actualTable);\n        //assertThat(actualTable, is(expectedTable));\n    }\n\n    @Test\n    public void \u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n\n\n        // Assert\n        IDataSet expectedDataSet = readDataSet(\"data/expected_dataset_view.xml\");\n        ITable expectedTable = expectedDataSet.getTable(\"persons_view\");\n        Connection conn = dataSource().getConnection();\n        DatabaseConnection dbConn = new DatabaseConnection(conn);\n        String tableName = \"persons\";\n        String sqlQuery = \"SELECT first_name, last_name, age FROM persons ORDER BY age\";\n        String[] ignoreCols = new String[0];\n        Assertion.assertEqualsByQuery(expectedTable, dbConn, tableName, sqlQuery, ignoreCols);\n    }\n\n    private DataSource dataSource() {\n        JdbcDataSource dataSource = new JdbcDataSource();\n        dataSource.setURL(JDBC_URL);\n        dataSource.setUser(USER);\n        dataSource.setPassword(PASSWORD);\n        return dataSource;\n    }\n\n}\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b9\u30ad\u30fc\u30de\n\nschema.sql\nCREATE TABLE IF NOT EXISTS genders (\n    id INT IDENTITY PRIMARY KEY,\n    gender_name VARCHAR,\n);\n\nCREATE TABLE IF NOT EXISTS persons (\n    id INT IDENTITY PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    age  INT,\n    gender_id INT,\n    FOREIGN KEY (gender_id) REFERENCES genders(id),\n);\n\n\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n\nsetup_dataset.xml\n<dataset>\n  <genders id=\"1\" gender_name=\"Male\"/>\n  <genders id=\"2\" gender_name=\"Female\"/>\n  <genders id=\"3\" gender_name=\"Trans Male\"/>\n  <genders id=\"4\" gender_name=\"Trans Female\"/>\n  <genders id=\"5\" gender_name=\"Cross Dressing\"/>\n  <persons first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n\n\n\nexpected_dataset_table.xml\n<dataset>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n\n\n\nexpected_dataset_view.xml\n<dataset>\n  <persons_view first_name=\"Theresa\" last_name=\"May\" age=\"43\"/>\n  <persons_view first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\"/>\n  <persons_view first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\"/>\n  <persons_view first_name=\"Barack\" last_name=\"Obama\" age=\"58\"/>\n</dataset>\n\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7528\u306e\u30c7\u30fc\u30bf\u306f\u3001\u521d\u671f\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u3001PRIMARY KEY\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u3001AUTOINCREMENT\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001persons\u30c6\u30fc\u30d6\u30eb\u306eid\u306fPRIMARY KEY\u5236\u7d04\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3001\u81ea\u52d5\u3067\u6570\u5024\u304c\u683c\u7d0d\u3055\u308c\u308b\u305f\u3081\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nPRIMARY KEY\u3068AUTOINCREMENT\u3067\u81ea\u52d5\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u5024\u306f\u3001\u30c6\u30b9\u30c8\u306e\u969b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u308c\u305e\u308c\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u4f5c\u306b\u306a\u308a\u307e\u3059\u3002\n\nPRIMARY KEY\u306e\u307f\u6307\u5b9a\n\u5bfe\u8c61\u306e\u30ab\u30e9\u30e0\u306b\u73fe\u5728\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6700\u5927\u306e\u5024\u306b\uff11\u304c\u52a0\u3048\u3089\u308c\u308b\nPRIMARY KEY\u3068AUTOINCREMENT\u3092\u6307\u5b9a\n\u5bfe\u8c61\u306e\u30ab\u30e9\u30e0\u306b\u4eca\u307e\u3067\u306b\u683c\u7d0d\u3055\u308c\u305f\u3053\u3068\u306e\u3042\u308b\u6700\u5927\u306e\u5024\u306b\uff11\u304c\u52a0\u3048\u3089\u308c\u308b\n\nAUTOINCREMENT\u3092\u6307\u5b9a\u3057\u305f\u30ab\u30e9\u30e0\u306f\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3054\u3068\u306b\u5024\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u671f\u5f85\u5024\u306b\u542b\u307e\u308c\u306a\u3044\u3088\u3046\u306b\u30c6\u30b9\u30c8\u3092\u8a2d\u8a08\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\n\n\u30c6\u30b9\u30c8\u6210\u529f\n\u53c2\u7167\u7cfb\u306e\u30c6\u30b9\u30c8\u3092\uff14\u4ef6\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n\u5b58\u5728\u3059\u308b\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8\n\u5b58\u5728\u3057\u306a\u3044\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8\n\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\n\u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\n\n\n\uff14\u4ef6\u306e\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002\n\n\u30c6\u30b9\u30c8\u5931\u6557\n\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3068\u304d\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u308b\u306e\u304b\u3082\u898b\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u306e\u671f\u5f85\u5024\u3092Matsuko Deluxe\u3055\u3093\u306egender_id\u30925\u306b\u5909\u66f4\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\nexpected_dataset_table.xml\n<dataset>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"5\"/>\n</dataset>\n\n\n\u30c6\u30b9\u30c8\u5931\u6557\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\njunit.framework.ComparisonFailure: value (table=persons, row=3, col=gender_id) expected:<[5]> but was:<[1]>\n    at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)\n    at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)\n    at org.dbunit.assertion.DefaultFailureHandler.handle(DefaultFailureHandler.java:223)\n    at org.dbunit.assertion.DbUnitAssert.compareData(DbUnitAssert.java:524)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:409)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:312)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:274)\n    at org.dbunit.Assertion.assertEquals(Assertion.java:122)\n    at databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:98)\n...\n\ntable, row, col\u306b\u5bfe\u3057\u3066\u3001\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u3092\u51fa\u529b\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u30d3\u30e5\u30fc\u3068\u306e\u6bd4\u8f03\n\u81ea\u52d5\u3067\u5024\u304c\u5165\u308b\u30ab\u30e9\u30e0\u304c\u3042\u308b\u5834\u5408\u306e\u6bd4\u8f03\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3059\u3002\npersons\u30c6\u30fc\u30d6\u30eb\u306eid\u306f\u81ea\u52d5\u3067\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u305f\u3081\u3001\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u304c\u6e96\u5099\u3067\u304d\u307e\u305b\u3093\u3002\nid\u3092\u7701\u7565\u3057\u305f\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\nexpected_dataset_view.xml\n<dataset>\n  <persons_view first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons_view first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons_view first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons_view first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n\n\n\u30ab\u30e9\u30e0\u6570\u306e\u9055\u3044\u3067\u767a\u751f\u3059\u308bjunit.framework.ComparisonFailure\njunit.framework.ComparisonFailure: column count (table=persons, expectedColCount=4, actualColCount=5) expected:<[[age, first_name, gender_id, last_name]]> but was:<[[AGE, FIRST_NAME, GENDER_ID, ID, LAST_NAME]]>\n    at org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)\n    at org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:396)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:312)\n    at org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:274)\n    at org.dbunit.Assertion.assertEquals(Assertion.java:122)\n    at databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:96)\n...\n\n\u30c6\u30fc\u30d6\u30eb\u540c\u58eb\u3092\u76f4\u63a5\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u671f\u5f85\u5024\u3068\u3057\u3066\u7528\u610f\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u306f\u30d5\u30eb\u30bb\u30c3\u30c8\u3067\u6e96\u5099\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001persons\u30c6\u30fc\u30d6\u30eb\u306eid\u3092\u7701\u7565\u3059\u308b\u3068\u30ab\u30e9\u30e0\u6570\u306e\u9055\u3044\u304c\u539f\u56e0\u3067\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u306e\u307b\u3046\u3082id\u3092\u7701\u7565\u3057\u305f\u3044\u5834\u5408\u306f\u3001assertEqualsByQuery()\u30e1\u30bd\u30c3\u30c9\u3067\u300c\u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\u300d\u3092\u3057\u307e\u3059\u3002\n\nassert_view.java\n    @Test\n    public void \u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n\n\n        // Assert\n        IDataSet expectedDataSet = readDataSet(\"data/expected_dataset_view.xml\");\n        ITable expectedTable = expectedDataSet.getTable(\"persons\");\n        Connection conn = dataSource().getConnection();\n        DatabaseConnection dbConn = new DatabaseConnection(conn);\n        String tableName = \"persons\";\n        String sqlQuery = \"SELECT first_name, last_name, age FROM persons ORDER BY age\";\n        String[] ignoreCols = new String[0];\n        Assertion.assertEqualsByQuery(expectedTable, dbConn, tableName, sqlQuery, ignoreCols);\n    }\n\n\nassertEqualsByQuery\nSQL\u30af\u30a8\u30ea\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3068\u6bd4\u8f03\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\nassertEqualsByQuery.java\npublic void assertEqualsByQuery(ITable expectedTable,\n                       IDatabaseConnection connection,\n                       String tableName,\n                       String sqlQuery,\n                       String[] ignoreCols)\n                         throws DatabaseUnitException,\n                                SQLException\n\n\n\n\u30d1\u30e9\u30e1\u30fc\u30bf\n\n\nexpectedTable : \u671f\u5f85\u5024\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\nconnection : SQL\u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306eDB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\ntableName : \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30af\u30a8\u30ea\u5bfe\u8c61\u306e\u30c6\u30fc\u30d6\u30eb\uff08\u203b \u4eca\u56de\u306f\u9069\u5f53\u306a\u6587\u5b57\u5217\u3067\u3082\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u307e\u3059\u3002\uff09\nsqlQuery : \u6bd4\u8f03\u5bfe\u8c61\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308bSQL\u30af\u30a8\u30ea\nignoreCols : \u6bd4\u8f03\u5bfe\u8c61\u306b\u3057\u306a\u3044\u30ab\u30e9\u30e0\n\n\n\n\n\u5916\u90e8\u30ad\u30fc\u5236\u7d04\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306edataset\u306f\u3001\u4e0a\u304b\u3089\u9806\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u5236\u7d04\u3092\u6e80\u305f\u3059\u9806\u306b\u30c6\u30b9\u30c8\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001person\u30c6\u30fc\u30d6\u30eb\u306egender_id\u306b\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ndataset\u306e\u5b9a\u7fa9\u9806\u3092\u9006\u306b\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\n\nsetup_dataset.xml\n<dataset>\n  <person first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <person first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <person first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <person first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n  <gender id=\"1\" gender_name=\"Male\"/>\n  <gender id=\"2\" gender_name=\"Female\"/>\n  <gender id=\"3\" gender_name=\"Trans Male\"/>\n  <gender id=\"4\" gender_name=\"Trans Female\"/>\n  <gender id=\"5\" gender_name=\"Cross Dressing\"/>\n</dataset>\n\n\n\u5b9f\u884c\u7d50\u679c\n\u53c2\u7167\u6574\u5408\u6027\u5236\u7d04\u9055\u53cd\u304c\u767a\u751f\u3057\u307e\u3059\u3002\nCaused by: org.h2.jdbc.JdbcSQLException: \u53c2\u7167\u6574\u5408\u6027\u5236\u7d04\u9055\u53cd: \"CONSTRAINT_8C: PUBLIC.PERSON FOREIGN KEY(GENDER_ID) REFERENCES PUBLIC.GENDER(ID) (1)\"\nReferential integrity constraint violation: \"CONSTRAINT_8C: PUBLIC.PERSON FOREIGN KEY(GENDER_ID) REFERENCES PUBLIC.GENDER(ID) (1)\"; SQL statement:\ninsert into PERSON (FIRST_NAME, LAST_NAME, AGE, GENDER_ID) values (?, ?, ?, ?) [23506-192]\n    at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\n    at org.h2.message.DbException.get(DbException.java:179)\n    at org.h2.message.DbException.get(DbException.java:155)\n    at org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:372)\n    at org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:314)\n    at org.h2.table.Table.fireConstraints(Table.java:967)\n    at org.h2.table.Table.fireAfterRow(Table.java:985)\n    at org.h2.command.dml.Insert.insertRows(Insert.java:161)\n    at org.h2.command.dml.Insert.update(Insert.java:114)\n    at org.h2.command.CommandContainer.update(CommandContainer.java:98)\n    at org.h2.command.Command.executeUpdate(Command.java:258)\n    at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:201)\n    at org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:80)\n    at org.dbunit.database.statement.AutomaticPreparedBatchStatement.addBatch(AutomaticPreparedBatchStatement.java:70)\n    at org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:224)\n    ... 29 more\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30b9\u30ad\u30fc\u30de\u4f5c\u6210\u3082\u9806\u756a\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u9806\u5e8f\u3092\u9006\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9\n\nschema.sql\nCREATE TABLE IF NOT EXISTS person (\n    id INT IDENTITY PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    age  INT,\n    gender_id INT,\n    FOREIGN KEY (gender_id) REFERENCES gender(id),\n);\n\nCREATE TABLE IF NOT EXISTS gender (\n    id INT IDENTITY PRIMARY KEY,\n    gender_name VARCHAR,\n);\n\n\n\u5b9f\u884c\u7d50\u679c\n\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u306b\"GENDER\"\u30c6\u30fc\u30d6\u30eb\u304c\u898b\u3064\u304b\u3089\u305aSQLException\u304c\u767a\u751f\u3057\u307e\u3059\u3002\norg.h2.jdbc.JdbcSQLException: \u30c6\u30fc\u30d6\u30eb \"GENDER\" \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\nTable \"GENDER\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS person (\n    id INT IDENTITY PRIMARY KEY,\n    first_name VARCHAR,\n    last_name VARCHAR,\n    age  INT,\n    gender_id INT,\n    FOREIGN KEY (gender_id) REFERENCES gender(id),\n) [42102-192]\n    at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\n    at org.h2.message.DbException.get(DbException.java:179)\n    at org.h2.message.DbException.get(DbException.java:155)\n    at org.h2.schema.Schema.getTableOrView(Schema.java:436)\n    at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:201)\n    at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:77)\n    at org.h2.command.ddl.CreateTable.update(CreateTable.java:176)\n    at org.h2.command.CommandContainer.update(CommandContainer.java:98)\n    at org.h2.command.Command.executeUpdate(Command.java:258)\n    at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)\n    at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)\n    at org.h2.tools.RunScript.process(RunScript.java:260)\n    at org.h2.tools.RunScript.process(RunScript.java:190)\n    at org.h2.tools.RunScript.process(RunScript.java:328)\n    at org.h2.tools.RunScript.execute(RunScript.java:303)\n    at databasetest.PersonRepositoryTest.createSchema(PersonRepositoryTest.java:31)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at \n...\n\n\norg.dbunit.Assertion\nDBUnit\u3067\u30c6\u30fc\u30d6\u30eb\u6bd4\u8f03\u3092\u3059\u308b\u3068\u304d\u306borg.hamcrest.MatcherAssert.assertThat\u3092\u4f7f\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u304c\u4e00\u81f4\u3057\u3066\u3044\u3066\u3082\u3001java.lang.AssertionError\u304c\u767a\u751f\u3057\u307e\u3059\u3002DBUnit\u306eorg.dbunit.Assertion.assertEquals\u3092\u4f7f\u3063\u3066\u6bd4\u8f03\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nassertThat\u3092\u4f7f\u3046\u3068\u767a\u751f\u3059\u308bAssertionError\njava.lang.AssertionError: \nExpected: is <org.dbunit.dataset.DefaultTable[_metaData=tableName=persons, columns=[(id, UNKNOWN, nullableUnknown), (first_name, UNKNOWN, nullableUnknown), (last_name, UNKNOWN, nullableUnknown), (age, UNKNOWN, nullableUnknown), (gender_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]>\n     but: was <org.dbunit.database.CachedResultSetTable[_metaData=table=PERSONS, cols=[(ID, INTEGER, noNulls), (FIRST_NAME, VARCHAR, nullable), (LAST_NAME, VARCHAR, nullable), (AGE, INTEGER, nullable), (GENDER_ID, INTEGER, nullable)], pk=[(ID, INTEGER, noNulls)], _rowList.size()=4]>\n    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n    at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n    at databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:98)\n...\n\nDBUnit\u306b\u306f\u3001IDataSet\u3001ITable\u306b\u5bfe\u3057\u3066\u3001\u5358\u7d14\u306a\u6bd4\u8f03\u3001SQL\u30af\u30a8\u30ea\u3092\u4f7f\u3063\u305f\u6bd4\u8f03\u3001\u30ab\u30e9\u30e0\u3092\u7d5e\u3063\u305f\u6bd4\u8f03\u306a\u3069\u306e Assertion\uff08\u30ea\u30f3\u30af\uff09\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002IDataSet\u3001ITable\u306b\u5bfe\u3059\u308b\u691c\u8a3c\u306f\u3001\u7528\u9014\u306b\u9069\u3057\u305fDBUnit\u306eAssertion\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n\n\n\u25a0 DBUnit\u306eAssert\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7\n\n\n\n\nassertEquals(IDataSet expectedDataSet, IDataSet actualDataSet)\n\n\nassertEquals(IDataSet expectedDataSet, IDataSet actualDataSet, FailureHandler failureHandler)\n\n\nassertEquals(ITable expectedTable, ITable actualTable)\n\n\nassertEquals(ITable expectedTable, ITable actualTable, Column[] additionalColumnInfo)\n\n\nassertEquals(ITable expectedTable, ITable actualTable, FailureHandler failureHandler)\n\n\nassertEqualsByQuery(IDataSet expectedDataset, IDatabaseConnection connection, String sqlQuery, String tableName, String[] ignoreCols)\n\n\nassertEqualsByQuery(ITable expectedTable, IDatabaseConnection connection, String tableName, String sqlQuery, String[] ignoreCols)\n\n\nassertEqualsIgnoreCols(IDataSet expectedDataset, IDataSet actualDataset, String tableName, String[] ignoreCols)\n\n\nassertEqualsIgnoreCols(ITable expectedTable, ITable actualTable, String[] ignoreCols)\n\n\n\n\nExcel\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\uff06\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nDBUnit\u306f\u3001Excel\u30b7\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u3092\u30b7\u30fc\u30c8\u5358\u4f4d\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u30b7\u30fc\u30c8\u306e\uff11\u884c\u76ee\u306f\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\nPERSONS\u30c6\u30fc\u30d6\u30eb\n\nGENDERS\u30c6\u30fc\u30d6\u30eb\n\n\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fxml\u30c7\u30fc\u30bf\n\nflatxml_import.xml\n<dataset>\n  <genders id=\"1\" gender_name=\"Male\"/>\n  <genders id=\"2\" gender_name=\"Female\"/>\n  <genders id=\"3\" gender_name=\"Trans Male\"/>\n  <genders id=\"4\" gender_name=\"Trans Female\"/>\n  <genders id=\"5\" gender_name=\"Cross Dressing\"/>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n\n\nExcel\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\n\nexcel_import.java\n    @Test\n    public void Excel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/flatxml_import.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n        IDataSet xlsDataSet = new XlsDataSet(new File(\"data/xls_export.xls\"));\n\n        // Assert\n        Assertion.assertEquals(xlsDataSet, setupDataSet);\n    }\n\n\nExcel\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n\nexcel_export.java\n    @Test\n    public void Excel\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n        Connection conn = dataSource().getConnection();\n        DatabaseConnection dbConn = new DatabaseConnection(conn);\n        IDataSet actualDataSet = dbConn.createDataSet();\n\n        XlsDataSet.write(actualDataSet, new FileOutputStream(\"data/xls_export.xls\"));\n\n        // Assert\n    }\n\n\n\nCSV\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\uff06\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nDBUnit\u306f\u3001CSV\u5f62\u5f0f\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nCSV\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080CsvDataSet\u30af\u30e9\u30b9\u3001CSV\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308bCsVDataSetWriter\u30af\u30e9\u30b9\u306b\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5358\u4f4d\u306b\u4f5c\u6210\u3057\u305fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u305d\u306e\u8aad\u307f\u8fbc\u307f\u9806\u5e8f\u3092\u8a18\u8f09\u3057\u305ftable-ordering.txt\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002CSV\u30d5\u30a1\u30a4\u30eb\u306f\u3001\uff11\u884c\u76ee\u304c\u30ab\u30e9\u30e0\u540d\u3001\uff12\u884c\u76ee\u4ee5\u964d\u304c\u30ec\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\ntable-ordering.txt\nGENDERS\nPERSONS\n\n\n\nGENDERS.csv\nID, GENDER_NAME\n\"1\",\"Male\"\n\"2\",\"Female\"\n\"3\",\"Trans Male\"\n\"4\",\"Trans Female\"\n\"5\",\"Cross Dressing\"\n\n\n\nPERSONS.csv\nID, FIRST_NAME, LAST_NAME, AGE, GENDER_ID\n\"1\",\"Barack\",\"Obama\",\"58\",\"1\"\n\"2\",\"Theresa\",\"May\",\"43\",\"2\"\n\"3\",\"Vladimir\",\"Putin\",\"52\",\"1\"\n\"4\",\"Matsuko\",\"Deluxe\",\"45\",\"1\"\n\n\n\nwrite_csv.java\n    @Test\n    public void CSV\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n        Connection conn = dataSource().getConnection();\n        DatabaseConnection dbConn = new DatabaseConnection(conn);\n        IDataSet actualDataSet = dbConn.createDataSet();\n\n        CsvDataSetWriter.write(actualDataSet, new File(\"data\"));\n\n        // Assert\n    }\n\n\n\nread_csv.java\n    @Test\n    public void CSV\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n        // Arrange\n        IDataSet setupDataSet = readDataSet(\"data/flatxml_import.xml\");\n        cleanlyInsert(setupDataSet);\n\n        // Action\n        IDataSet csvDataSet = new CsvDataSet(new File(\"data\"));\n\n        // Assert\n        Assertion.assertEquals(csvDataSet, setupDataSet);\n    }\n\n\n\n\u304a\u308f\u308a\u306b\n\u307f\u306a\u3055\u3093\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\u307e\u305f\u3001\u305d\u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u306f\u3001\u9ad8\u901f\u304b\u3064\u5b89\u5b9a\u7684\u306b\u5b9f\u65bd\u3067\u304d\u3066\u3044\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u7d50\u5408\u3057\u3066\u884c\u3046\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3067\u306f\u3001\u30c6\u30b9\u30c8\u524d\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u72b6\u614b\u306b\u81ea\u52d5\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306e\u624b\u9806\u3092\u304a\u308d\u305d\u304b\u306b\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u304c\u5b9f\u884c\u306e\u305f\u3073\u306b\u3068\u7570\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u8a66\u9a13\u306e\u6e96\u5099\u306b\u6642\u9593\u304c\u81a8\u5927\u306b\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u305f\u308a\u3059\u308b\u305f\u3081\u3053\u306e\u90e8\u5206\u306fDbUnit\u3092\u3064\u304b\u3063\u3066\u3057\u3063\u304b\u308a\u3068\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u90e8\u5206\u306b\u306a\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b9\u30ad\u30fc\u30de\u306e\u5909\u66f4\u3001\u4f8b\u3048\u3070\u3001\u540d\u524d\u306e\u5909\u66f4\u3084\u5217\u306e\u8ffd\u52a0\u3084\u524a\u9664\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u624b\u52d5\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u306e\u7dad\u6301\u5de5\u6570\u304c\u305d\u308c\u306a\u308a\u306b\u7a4d\u307f\u3042\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002DbUnit\u306f\u3001\u30c7\u30fc\u30bf\u3092Excel\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u6a5f\u80fd\u3082\u4f7f\u3063\u3066\u52b9\u7387\u7684\u306b\u30c6\u30b9\u30c8\u3057\u3066\u3044\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u4f7f\u3063\u305fJava\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u304c\u96e3\u3057\u3044\u7406\u7531\u3068\u3057\u3066\u4ee5\u4e0b\u306e\uff13\u3064\u304c\u3042\u3052\u3089\u308c\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n1. \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306e\u554f\u984c\n2. \u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u6027\u306e\u554f\u984c\n3. \u30c6\u30b9\u30c8\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u554f\u984c\n\n\u3053\u308c\u3089\u306e\u554f\u984c\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3001DbUnit\uff08[\u30ea\u30f3\u30af](http://dbunit.sourceforge.net/)\uff09\u3068H2 Database\uff08[\u30ea\u30f3\u30af](http://www.h2database.com/html/main.html)\uff09\u3092\u4f7f\u3063\u3066\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u307e\u3059\u3002\nDbUnit\u306f\u3001\u4f9d\u5b58\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u591a\u3044\u305f\u3081\u3001Gradle\u3092\u4f7f\u3063\u3066\u74b0\u5883\u69cb\u7bc9\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## DBUnit\n+ DBUnit\u306f\u3001JUnit\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002  \n+ xml\u30d5\u30a1\u30a4\u30eb\u306b\u66f8\u3044\u305f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n+ \u30c6\u30b9\u30c8\u5b8c\u4e86\u6642\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u72b6\u614b\u3092\u8a18\u8f09\u3057\u305fxml\u30d5\u30a1\u30a4\u30eb\u3068\u6bd4\u8f03\u3057\u307e\u3059\u3002\n+ \u30d5\u30a1\u30a4\u30eb\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f\u3001Excel\u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n## H2 Database\n+ \u30d4\u30e5\u30a2Java\u306eSQL\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3067\u3059\u3002\n+ \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306f\u3001\u30a4\u30f3\u30e1\u30e2\u30ea\u5f62\u5f0f\u3068\u30d5\u30a1\u30a4\u30eb\u5f62\u5f0f\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n+ \u7d44\u307f\u8fbc\u307f\u30e2\u30fc\u30c9\u3001\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9\u3001\u30df\u30c3\u30af\u30b9\u30e2\u30fc\u30c9\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n    - **\u7d44\u307f\u8fbc\u307f\u30e2\u30fc\u30c9**  \n        ![connection-mode-embedded-2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/09704719-d25e-2b84-2427-860295c2fb57.png)\n    - **\u30b5\u30fc\u30d0\u30fc\u30e2\u30fc\u30c9**  \n        ![connection-mode-remote-2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/4a9daf16-6644-e34e-ffd6-64f02114cb44.png)\n    - **\u30df\u30c3\u30af\u30b9\u30e2\u30fc\u30c9**  \n        ![connection-mode-mixed-2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/bddd5b86-05c4-719f-c634-359f56197b35.png)\n+ \u30d6\u30e9\u30a6\u30b6\u3084\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u64cd\u4f5c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n+ jar\u30d5\u30a1\u30a4\u30eb\uff11\u3064\uff081.5MB\uff09\u3067\u52d5\u4f5c\u3057\u307e\u3059\u3002\n+ JDBC\u3068ODBC\u306e\u4e21\u65b9\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Gradle\n+ \u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3067\u3059\u3002\n+ Eclipse\u3084Android Studio\u306b\u4ed8\u5c5e\u3057\u3066\u3044\u307e\u3059\u3002\n+ Maven\u540c\u69d8\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u81ea\u52d5\u7684\u306b\u89e3\u6c7a\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n+ \u898f\u7d04\u306b\u5f93\u3063\u305f\u69cb\u6210\u306b\u3057\u3066\u304a\u3051\u3070\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3001\u30c6\u30b9\u30c8\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u751f\u6210\u306a\u3069\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u307e\u307e\u53ef\u80fd\u3067\u3059\u3002\n+ \u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u306bGroovy\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f7f\u3048\u308b\u305f\u3081\u3001\u30d3\u30eb\u30c9\u30d5\u30a1\u30a4\u30eb\u3092\u7c21\u6f54\u306b\u66f8\u3051\u307e\u3059\u3002\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\u74b0\u5883\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n## Eclipse\u3001JDK\n\u4eca\u56de\u306f\u3001\u4ee5\u4e0b\u306e\u74b0\u5883\u3067\u52d5\u4f5c\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n\n+ Eclipse 4.6 Neon Pleiades All in One\n+ Java SE Development Kit 8u102\n+ Windows 10\n\nEclipse\u3068JDK\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u307e\u3060\u306e\u65b9\u306f\u3053\u3061\u3089\u304b\u3089\u3002\n\n+ Pleiades - Eclipse\uff1a[\u30ea\u30f3\u30af](http://mergedoc.osdn.jp/)\n+ Oracle Java SE Development Kit\uff1a[\u30ea\u30f3\u30af](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u3067\u3001Java\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u3069\u3046\u304b\u3001\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n> $ java -version\n> java version \"1.8.0_102\"\n> Java(TM) SE Runtime Environment (build 1.8.0_102-b14)\n> Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)\n\n## Gradle\u3092\u4f7f\u3063\u3066Eclipse\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n1. **Eclipse - Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210**\n    Eclipse\u3092\u8d77\u52d5 \u2192 \u30d5\u30a1\u30a4\u30eb(F) \u2192 \u65b0\u898f(N) \u2192 Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 \n    \n    ![Eclipse_s1.png](https://qiita-image-store.s3.amazonaws.com/0/107056/fb6dd625-a952-426e-75d1-cfd24f46326b.png)\n    \n    \u2192 \u65b0\u898f Gradle \u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3001\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u6307\u5b9a \u2192 \u6b21\u3078(N)> \u2192 \n    \n    ![Eclipse_s2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/6778839e-9b9f-5b8e-42ee-20210ddd98b0.png)\n\n    \u2192 \u6b21\u3078(N)> \u2192\n    \n    ![Eclipse_s3.png](https://qiita-image-store.s3.amazonaws.com/0/107056/6aea6bee-b007-4790-c5b4-e9a8520f3207.png)\n\n    \u2192 Gradle \u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\uff1a\u25ce Gradle \u30e9\u30c3\u30d1\u30fc(\u63a8\u5968) \u2192 \u6b21\u3078(N)> \u2192\n    \n    ![Eclipse_s4.png](https://qiita-image-store.s3.amazonaws.com/0/107056/a10edebd-992e-41a0-71e3-a8f031095867.png)\n    \n    \u2192 \u5b8c\u4e86(F)\n    \u3000\n    \n2. **Gradle\u30e9\u30c3\u30d1\u30fc\u306e\u8a2d\u5b9a**\n    Eclipse\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u540c\u68b1\u3055\u308c\u3066\u3044\u308bGradle\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u5c11\u3057\u53e4\u3044\u305f\u3081\u66f4\u65b0\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n    \n    ![Eclipse_s5.png](https://qiita-image-store.s3.amazonaws.com/0/107056/e97c19e2-3820-ae94-2373-a7b5d679184f.png)\n    \n    Sample\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 \u2192 gradle/wrapper/gradle-wrapper.properties\n\n    \uff08\u5909\u66f4\u524d\uff09\n    \n    > distributionUrl=https\\://services.gradle.org/distributions/gradle-2.13-bin.zip\n    \n    \uff08\u5909\u66f4\u5f8c\uff09\n    \n    > distributionUrl=https\\://services.gradle.org/distributions/gradle-3.1-bin.zip\n    \n    Gradle\u30e9\u30c3\u30d1\u30fc\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3068\u304d\u306b\u3001\u6307\u5b9a\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u81ea\u52d5\u7684\u306b\u9069\u7528\u3055\u308c\u307e\u3059\u3002\n    \u3000\n3. **build.gradle\u306e\u8a2d\u5b9a**\n    \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u751f\u6210\u3055\u308c\u305fbuild.gradle\u306b\u5bfe\u3057\u3001\u6b21\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n    \u3000  \n    + eclipse\u30d7\u30e9\u30b0\u30a4\u30f3\n    + h2\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\n    + slf4j-nop\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\n    + dbunit\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\n    + Java\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306b\u5bfe\u3057\u3066\u30a8\u30f3\u30b3\u30fc\u30c9UTF-8\u3092\u6307\u5b9a\n    \n    \u30b3\u30e1\u30f3\u30c8\u629c\u304d\u3067build.gradle\u306f\u3001\u3053\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n    \n    ```build.gradle\n    apply plugin: 'java'\n    apply plugin: 'eclipse'\n\n    repositories {\n        jcenter()\n    }\n\n    dependencies {\n        compile 'org.slf4j:slf4j-api:1.7.21'\n    \tcompile group: 'com.h2database', name: 'h2', version: '1.4.192'\n\n        compile group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.21'\n        compile group: 'org.dbunit', name: 'dbunit', version: '2.5.3'\n        testCompile 'junit:junit:4.12'\n    }\n\n    tasks.withType(JavaCompile) {\n        options.encoding = 'UTF-8'\n    }\n    ```\n    \n    \u3053\u3053\u3067Eclipse\u3092 \u518d\u8d77\u52d5\uff08\u7d42\u4e86 \u2192 \u8d77\u52d5\uff09 \u3057\u307e\u3059\u3002\n    build.gradle\u306b\u8ffd\u52a0\u3057\u305feclipse\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u60c5\u5831\u3092Eclipse\u304c\u8a8d\u8b58\u3057\u307e\u3059\u3002\n    \u3000\n    ![Eclipse_s9.png](https://qiita-image-store.s3.amazonaws.com/0/107056/ec637d11-830f-559b-8606-a6dd6e8302b9.png)\n    \u3000  \n4. **\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97**\n    + gradle\u306eeclipse\u30bf\u30b9\u30af\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306ajar\u30d5\u30a1\u30a4\u30eb\u3092\u69cb\u7bc9\u3057\u307e\u3059\u3002  \n        \u3000Eclipse \u2192 Gradle\u30bf\u30b9\u30af \u30bf\u30d6 \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u9078\u629e \u2192 ide \u2192 eclipse \u3092\u30af\u30ea\u30c3\u30af  \n        \u3000eclipse\u30bf\u30b9\u30af\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n        \u3000\u3000![Eclipse_s9_2.png](https://qiita-image-store.s3.amazonaws.com/0/107056/1bd5ff40-2f18-1cc5-2a15-8f022a35f30a.png)  \n        \u3000\n    + \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9\u306e\u72b6\u614b\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n        Eclipse \u2192 \u30d1\u30c3\u30b1\u30fc\u30b8\u30fb\u30a8\u30af\u30b9\u30d7\u30ed\u30fc\u30e9\u30fc \u2192 \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u53f3\u30af\u30ea\u30c3\u30af \u2192 \u30d3\u30eb\u30c9\u30fb\u30d1\u30b9(B) \u2192 \u30d3\u30eb\u30c9\u30fb\u30d1\u30b9\u306e\u69cb\u6210(C)... \u2192 \n        ![Eclipse_s7.png](https://qiita-image-store.s3.amazonaws.com/0/107056/25ddbc04-6a05-0adc-c489-25296e9bf8e6.png)\n        \n        \u2192 \u9806\u5e8f\u304a\u3088\u3073\u30a8\u30af\u30b9\u30dd\u30fc\u30c8(O) \u2192 \n        \n        ![Eclipse_s8.png](https://qiita-image-store.s3.amazonaws.com/0/107056/8f0267bf-0183-5ef7-28a3-f51cee39c984.png)\n        \n        \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u5fc5\u8981\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u81ea\u52d5\u7684\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u3001.gradle\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u683c\u7d0d\u3055\u308c\u307e\u3057\u305f\u3002\n        \u203b \u4eca\u56de\u52d5\u4f5c\u78ba\u8a8d\u3057\u305f DBUnit ver.2.5.3 \u306f\u3001 POI ver.3.14 \u3068\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n## \u6982\u8981\u8aac\u660e\n### \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\n\u3000\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u6642\u306f\u3001H2 Database\u3092\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u3067\u52d5\u4f5c\u3055\u305b\u307e\u3059\u3002\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306eURL\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n|Topic|URL Examples|\n|:---|:---|\n|In-memory (private)|jdbc:h2:mem:|\n|In-memory (named)|jdbc:h2:mem:\\<databaseName\\>|\n\n\u3000H2 Database\u306e\u30a4\u30f3\u30e1\u30e2\u30ea\u30e2\u30fc\u30c9\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u6319\u52d5\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u306e\u63a5\u7d9a\u304c\u5207\u308c\u305f\u6642\u70b9\u3067\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5931\u308f\u308c\u307e\u3059\u3002\u30c6\u30b9\u30c8\u4e2d\u3001\u63a5\u7d9a\u304c\u5207\u308c\u3066\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5931\u308f\u308c\u306a\u3044\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9URL\u306b`;DB_CLOSE_DELAY=-1`\u3092\u6307\u5b9a\u3057\u3066\u3042\u3052\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u30c6\u30b9\u30c8\u5b9f\u884c\u306e\u305f\u3081\u306bJavaVM\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u9593\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304c\u5b58\u5728\u3057\u3064\u3065\u3051\u307e\u3059\u3002\n\n```\nprivate static final String JDBC_URL = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\";\n```\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\uff08Person.java, PersonRepository.java, PersonRepositoryTest.java\uff09\u304a\u3088\u3073\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\uff08setup_dataset.xml, schema.sql\uff09\u306f\u6b21\u306e\u3088\u3046\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002\n\u3000\u3000\u3000\u3000\u3000![eclipse_01.png](https://qiita-image-store.s3.amazonaws.com/0/107056/1150e387-bf93-8017-e707-f58b5e1fa0d3.png)\n\n### \u30b9\u30ad\u30fc\u30de\u306e\u69cb\u7bc9\n@BeforeClass\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306e\u3068\u3053\u308d\u3067\u3001schema.sql\u3092\u5b9f\u884c\u3057\u3066\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\norg.h2.tools.RunScript#execute()\u3067sql\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```execute_sql.java\nRunScript.execute(JDBC_URL, USER, PASSWORD, \"data/schema.sql\", UTF8, false);\n```\n\n### \u30c7\u30fc\u30bf\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u307e\u305a\u3001org.dbunit.dataset.IDataSet\u306bXML\u30d5\u30a1\u30a4\u30eb\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002\nXML\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\u306f\u3001org.dbunit.dataset.xml.FlatXmlDataSetBuilder.FlatXmlDataSetBuilder().build()\u3067\u884c\u3044\u307e\u3059\u3002\n\n```read_xml.java\nreturn new FlatXmlDataSetBuilder().build(new File(\"data/setup_dataset.xml\"));\n```\n\n\u7d9a\u3044\u3066\u3001org.dbunit.IDatabaseTester\u3067\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u3057\u307e\u3059\u3002setSetUpOperation()\u306b\u3001`DatabaseOperation.CLEAN_INSERT`\u3092\u6307\u5b9a\u3057\u307e\u3057\u305f\u3002`DatabaseOperation.CLEAN_INSERT`\u306f\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u73fe\u308c\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u3001\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u524a\u9664\u3057\u3066\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30bb\u30c3\u30c8\u3057\u307e\u3059\u3002setDataSet()\u3067\u5bfe\u8c61\u30c7\u30fc\u30bf\u3092\u6307\u5b9a\u3057\u3001onSetup()\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```set_dataset.java\n\t\tIDatabaseTester databaseTester = new JdbcDatabaseTester(JDBC_DRIVER, JDBC_URL, USER, PASSWORD);\n\t\tdatabaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n\t\tdatabaseTester.setDataSet(dataSet);\n\t\tdatabaseTester.onSetup();\n```\n\n## ER\u56f3\n![ER.png](https://qiita-image-store.s3.amazonaws.com/0/107056/35c516e2-50b6-d15c-6a33-d056ad9ca066.png)\n\npersons\u30c6\u30fc\u30d6\u30eb\u306egender_id\u306bgenders\u30c6\u30fc\u30d6\u30eb\u306eid\u3092\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30c7\u30fc\u30bf\u3067\u3059\u3002\n\n**\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9**\n\n```Person.java\npackage databasetest;\n\npublic class Person {\n\n\tprivate final String firstName;\n\tprivate final String lastName;\n\tprivate final int age;\n\tprivate final String genderName;\n\n\tpublic Person(String firstName, String lastName, int age, String genderName) {\n\t\tthis.firstName = firstName;\n\t\tthis.lastName = lastName;\n\t\tthis.age = age;\n\t\tthis.genderName = genderName;\n\t}\n\n\tpublic String getFirstName() {\n\t\treturn firstName;\n\t}\n\n\tpublic String getLastName() {\n\t\treturn lastName;\n\t}\n\n\tpublic int getAge() {\n\t\treturn age;\n\t}\n\n\tpublic String getGenderName() {\n\t\treturn genderName;\n\t}\n}\n```\n\n```PersonDao.java\npackage databasetest;\n\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.sql.Statement;\n\nimport javax.sql.DataSource;\n\npublic class PersonDao {\n\n\tprivate final DataSource dataSource;\n\n\tpublic PersonDao(DataSource dataSource) {\n\t\tthis.dataSource = dataSource;\n\t}\n\n\tpublic Person findPersonByFirstName(String name) throws SQLException {\n\t\tPerson person = null;\n\t\tPreparedStatement statement = dataSource.getConnection()\n\t\t\t\t.prepareStatement(\"SELECT first_name, last_name, age, gender_name FROM persons, genders WHERE gender_id = genders.id AND first_name = ?\");\n\t\tstatement.setString(1, name);\n\t\tResultSet resultSet = null;\n\t\ttry {\n\t\t\tresultSet = statement.executeQuery();\n\t\t\tif (resultSet.next()) {\n\t\t\t\tperson = convertSingleRow(resultSet);\n\t\t\t}\n\t\t} finally {\n\t\t\tcloseQuietly(resultSet);\n\t\t\tcloseQuietly(statement);\n\t\t}\n\t\treturn person;\n\t}\n\n\tprivate Person convertSingleRow(ResultSet resultSet) throws SQLException {\n\t\tString firstName = resultSet.getString(\"first_name\");\n\t\tString lastName = resultSet.getString(\"last_name\");\n\t\tint age = resultSet.getInt(\"age\");\n\t\tString genderName = resultSet.getString(\"gender_name\");\n\t\treturn new Person(firstName, lastName, age, genderName);\n\t}\n\n\tprivate void closeQuietly(ResultSet resultSet) {\n\t\ttry {\n\t\t\tresultSet.close();\n\t\t} catch (SQLException exception) {\n\t\t}\n\t}\n\n\tprivate void closeQuietly(Statement statement) {\n\t\ttry {\n\t\t\tstatement.close();\n\t\t} catch (SQLException exception) {\n\t\t}\n\t}\n\n}\n```\n\n**\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9**\n\n```PersonDaoTest.java\npackage databasetest;\n\nimport static org.h2.engine.Constants.*;\nimport static org.hamcrest.CoreMatchers.*;\nimport static org.hamcrest.MatcherAssert.*;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.sql.Connection;\n\nimport javax.sql.DataSource;\n\nimport org.dbunit.Assertion;\nimport org.dbunit.IDatabaseTester;\nimport org.dbunit.JdbcDatabaseTester;\nimport org.dbunit.database.DatabaseConnection;\nimport org.dbunit.dataset.IDataSet;\nimport org.dbunit.dataset.ITable;\nimport org.dbunit.dataset.excel.XlsDataSet;\nimport org.dbunit.dataset.xml.FlatXmlDataSetBuilder;\nimport org.dbunit.operation.DatabaseOperation;\nimport org.h2.jdbcx.JdbcDataSource;\nimport org.h2.tools.RunScript;\nimport org.junit.BeforeClass;\nimport org.junit.Ignore;\nimport org.junit.Test;\n\npublic class PersonDaoTest {\n\n\tprivate static final String JDBC_DRIVER = org.h2.Driver.class.getName();\n\tprivate static final String JDBC_URL = \"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\";\n\tprivate static final String USER = \"sa\";\n\tprivate static final String PASSWORD = \"\";\n\n\t@BeforeClass\n\tpublic static void createSchema() throws Exception {\n\t\tRunScript.execute(JDBC_URL, USER, PASSWORD, \"data/schema.sql\", UTF8, false);\n\t}\n\n\tprivate IDataSet readDataSet(String dataPath) throws Exception {\n\t\t// for XML\n\t\treturn new FlatXmlDataSetBuilder().build(new File(dataPath));\n\t\t// for Excel\n\t\t// return new XlsDataSet(new File(dataPath));\n\t}\n\n\tprivate void cleanlyInsert(IDataSet dataSet) throws Exception {\n\t\tIDatabaseTester databaseTester = new JdbcDatabaseTester(JDBC_DRIVER, JDBC_URL, USER, PASSWORD);\n\t\tdatabaseTester.setSetUpOperation(DatabaseOperation.CLEAN_INSERT);\n\t\tdatabaseTester.setDataSet(dataSet);\n\t\tdatabaseTester.onSetup();\n\t}\n\n\t@Test\n\tpublic void \u5b58\u5728\u3059\u308b\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n\t\t// Arrange\n\t\tIDataSet dataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(dataSet);\n\t\tPersonDao dao = new PersonDao(dataSource());\n\n\t\t// Action\n\t\tPerson person = dao.findPersonByFirstName(\"Theresa\");\n\n\t\t// Assert\n\t\tassertThat(person.getFirstName(), is(\"Theresa\"));\n\t\tassertThat(person.getLastName(), is(\"May\"));\n\t\tassertThat(person.getAge(), is(43));\n\t\tassertThat(person.getGenderName(), is(\"Female\"));\n\t}\n\n\t@Test\n\tpublic void \u5b58\u5728\u3057\u306a\u3044\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n\t\t// Arrange\n\t\tIDataSet dataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(dataSet);\n\t\tPersonDao dao = new PersonDao(dataSource());\n\n\t\t// Action\n\t\tPerson person = dao.findPersonByFirstName(\"I don't exist\");\n\n\t\t// Assert\n\t\tassertThat(person, is(nullValue()));\n\t}\n\n\t@Test\n\tpublic void \u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\t\tConnection conn = dataSource().getConnection();\n\t\tDatabaseConnection dbConn = new DatabaseConnection(conn);\n\t\tIDataSet databaseDataSet = dbConn.createDataSet();\n\t\tITable actualTable = databaseDataSet.getTable(\"persons\");\n\n\t\t// Assert\n\t\tIDataSet expectedDataSet = readDataSet(\"data/expected_dataset_table.xml\");\n\t\tITable expectedTable = expectedDataSet.getTable(\"persons\");\n\n\t\tAssertion.assertEquals(expectedTable, actualTable);\n\t\t//assertThat(actualTable, is(expectedTable));\n\t}\n\n\t@Test\n\tpublic void \u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\n\n\t\t// Assert\n\t\tIDataSet expectedDataSet = readDataSet(\"data/expected_dataset_view.xml\");\n\t\tITable expectedTable = expectedDataSet.getTable(\"persons_view\");\n\t\tConnection conn = dataSource().getConnection();\n\t\tDatabaseConnection dbConn = new DatabaseConnection(conn);\n\t\tString tableName = \"persons\";\n\t\tString sqlQuery = \"SELECT first_name, last_name, age FROM persons ORDER BY age\";\n\t\tString[] ignoreCols = new String[0];\n\t\tAssertion.assertEqualsByQuery(expectedTable, dbConn, tableName, sqlQuery, ignoreCols);\n\t}\n\n\tprivate DataSource dataSource() {\n\t\tJdbcDataSource dataSource = new JdbcDataSource();\n\t\tdataSource.setURL(JDBC_URL);\n\t\tdataSource.setUser(USER);\n\t\tdataSource.setPassword(PASSWORD);\n\t\treturn dataSource;\n\t}\n\n}\n```\n\n**\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9 \u30b9\u30ad\u30fc\u30de**\n\n```schema.sql\nCREATE TABLE IF NOT EXISTS genders (\n\tid INT IDENTITY PRIMARY KEY,\n\tgender_name VARCHAR,\n);\n\nCREATE TABLE IF NOT EXISTS persons (\n\tid INT IDENTITY PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tage  INT,\n\tgender_id INT,\n\tFOREIGN KEY (gender_id) REFERENCES genders(id),\n);\n```\n\n**\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf**\n\n```setup_dataset.xml\n<dataset>\n  <genders id=\"1\" gender_name=\"Male\"/>\n  <genders id=\"2\" gender_name=\"Female\"/>\n  <genders id=\"3\" gender_name=\"Trans Male\"/>\n  <genders id=\"4\" gender_name=\"Trans Female\"/>\n  <genders id=\"5\" gender_name=\"Cross Dressing\"/>\n  <persons first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n```\n\n```expected_dataset_table.xml\n<dataset>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n```\n\n```expected_dataset_view.xml\n<dataset>\n  <persons_view first_name=\"Theresa\" last_name=\"May\" age=\"43\"/>\n  <persons_view first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\"/>\n  <persons_view first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\"/>\n  <persons_view first_name=\"Barack\" last_name=\"Obama\" age=\"58\"/>\n</dataset>\n```\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u7528\u306e\u30c7\u30fc\u30bf\u306f\u3001\u521d\u671f\u5024\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u3001PRIMARY KEY\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u3001AUTOINCREMENT\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u30ab\u30e9\u30e0\u306f\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001persons\u30c6\u30fc\u30d6\u30eb\u306eid\u306fPRIMARY KEY\u5236\u7d04\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u3066\u3001\u81ea\u52d5\u3067\u6570\u5024\u304c\u683c\u7d0d\u3055\u308c\u308b\u305f\u3081\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u7701\u7565\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nPRIMARY KEY\u3068AUTOINCREMENT\u3067\u81ea\u52d5\u306b\u8a2d\u5b9a\u3055\u308c\u308b\u5024\u306f\u3001\u30c6\u30b9\u30c8\u306e\u969b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\u305d\u308c\u305e\u308c\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u4f5c\u306b\u306a\u308a\u307e\u3059\u3002\n\n+ PRIMARY KEY\u306e\u307f\u6307\u5b9a\n    \u5bfe\u8c61\u306e\u30ab\u30e9\u30e0\u306b\u73fe\u5728\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\u6700\u5927\u306e\u5024\u306b\uff11\u304c\u52a0\u3048\u3089\u308c\u308b\n+ PRIMARY KEY\u3068AUTOINCREMENT\u3092\u6307\u5b9a\n    \u5bfe\u8c61\u306e\u30ab\u30e9\u30e0\u306b\u4eca\u307e\u3067\u306b\u683c\u7d0d\u3055\u308c\u305f\u3053\u3068\u306e\u3042\u308b\u6700\u5927\u306e\u5024\u306b\uff11\u304c\u52a0\u3048\u3089\u308c\u308b\n\nAUTOINCREMENT\u3092\u6307\u5b9a\u3057\u305f\u30ab\u30e9\u30e0\u306f\u3001\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3054\u3068\u306b\u5024\u304c\u5909\u308f\u3063\u3066\u3057\u307e\u3046\u305f\u3081\u3001\u671f\u5f85\u5024\u306b\u542b\u307e\u308c\u306a\u3044\u3088\u3046\u306b\u30c6\u30b9\u30c8\u3092\u8a2d\u8a08\u3057\u307e\u3059\u3002\n\n# \u30c6\u30b9\u30c8\u5b9f\u884c\n### \u30c6\u30b9\u30c8\u6210\u529f\n\u53c2\u7167\u7cfb\u306e\u30c6\u30b9\u30c8\u3092\uff14\u4ef6\u5b9f\u65bd\u3057\u307e\u3059\u3002\n\n+ \u5b58\u5728\u3059\u308b\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8\n+ \u5b58\u5728\u3057\u306a\u3044\u4eba\u3092\u691c\u7d22\u3059\u308b\u30c6\u30b9\u30c8\n+ \u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u3092\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\n+ \u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\n\n![Run_JUnit.png](https://qiita-image-store.s3.amazonaws.com/0/107056/25e98816-b7f5-ca4b-c2bf-88be93e3ebb7.png)\n\n\uff14\u4ef6\u306e\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u307e\u3057\u305f\u3002\n\n### \u30c6\u30b9\u30c8\u5931\u6557\n\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3059\u308b\u3068\u304d\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u3067\u308b\u306e\u304b\u3082\u898b\u3066\u304a\u304d\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u306e\u671f\u5f85\u5024\u3092Matsuko Deluxe\u3055\u3093\u306egender_id\u30925\u306b\u5909\u66f4\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```expected_dataset_table.xml\n<dataset>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"5\"/>\n</dataset>\n```\n\n**\u30c6\u30b9\u30c8\u5931\u6557\u6642\u306e\u30e1\u30c3\u30bb\u30fc\u30b8**\n\n```\njunit.framework.ComparisonFailure: value (table=persons, row=3, col=gender_id) expected:<[5]> but was:<[1]>\n\tat org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)\n\tat org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)\n\tat org.dbunit.assertion.DefaultFailureHandler.handle(DefaultFailureHandler.java:223)\n\tat org.dbunit.assertion.DbUnitAssert.compareData(DbUnitAssert.java:524)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:409)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:312)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:274)\n\tat org.dbunit.Assertion.assertEquals(Assertion.java:122)\n\tat databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:98)\n...\n```\n\ntable, row, col\u306b\u5bfe\u3057\u3066\u3001\u671f\u5f85\u5024\u3068\u5b9f\u969b\u306e\u5024\u3092\u51fa\u529b\u3057\u3066\u304f\u308c\u3066\u3044\u307e\u3059\u3002\n\n# \u30d3\u30e5\u30fc\u3068\u306e\u6bd4\u8f03\n\u81ea\u52d5\u3067\u5024\u304c\u5165\u308b\u30ab\u30e9\u30e0\u304c\u3042\u308b\u5834\u5408\u306e\u6bd4\u8f03\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3059\u3002\npersons\u30c6\u30fc\u30d6\u30eb\u306eid\u306f\u81ea\u52d5\u3067\u5024\u304c\u30bb\u30c3\u30c8\u3055\u308c\u308b\u305f\u3081\u3001\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u304c\u6e96\u5099\u3067\u304d\u307e\u305b\u3093\u3002\nid\u3092\u7701\u7565\u3057\u305f\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u3092\u4f7f\u3063\u3066\u30c6\u30b9\u30c8\u3057\u3066\u307f\u307e\u3059\u3002\n\n```expected_dataset_view.xml\n<dataset>\n  <persons_view first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons_view first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons_view first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons_view first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n```\n\n**\u30ab\u30e9\u30e0\u6570\u306e\u9055\u3044\u3067\u767a\u751f\u3059\u308bjunit.framework.ComparisonFailure**\n\n```\njunit.framework.ComparisonFailure: column count (table=persons, expectedColCount=4, actualColCount=5) expected:<[[age, first_name, gender_id, last_name]]> but was:<[[AGE, FIRST_NAME, GENDER_ID, ID, LAST_NAME]]>\n\tat org.dbunit.assertion.JUnitFailureFactory.createFailure(JUnitFailureFactory.java:39)\n\tat org.dbunit.assertion.DefaultFailureHandler.createFailure(DefaultFailureHandler.java:97)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:396)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:312)\n\tat org.dbunit.assertion.DbUnitAssert.assertEquals(DbUnitAssert.java:274)\n\tat org.dbunit.Assertion.assertEquals(Assertion.java:122)\n\tat databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:96)\n...\n```\n\n\u30c6\u30fc\u30d6\u30eb\u540c\u58eb\u3092\u76f4\u63a5\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u306e\u671f\u5f85\u5024\u3068\u3057\u3066\u7528\u610f\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u306f\u30d5\u30eb\u30bb\u30c3\u30c8\u3067\u6e96\u5099\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001persons\u30c6\u30fc\u30d6\u30eb\u306eid\u3092\u7701\u7565\u3059\u308b\u3068\u30ab\u30e9\u30e0\u6570\u306e\u9055\u3044\u304c\u539f\u56e0\u3067\u30c6\u30b9\u30c8\u304c\u5931\u6557\u3057\u307e\u3059\u3002\n\n\u671f\u5f85\u5024\u30c7\u30fc\u30bf\u306e\u307b\u3046\u3082id\u3092\u7701\u7565\u3057\u305f\u3044\u5834\u5408\u306f\u3001`assertEqualsByQuery()`\u30e1\u30bd\u30c3\u30c9\u3067\u300c\u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8\u300d\u3092\u3057\u307e\u3059\u3002\n\n```assert_view.java\n\t@Test\n\tpublic void \u30d3\u30e5\u30fc\u3068\u6bd4\u8f03\u3059\u308b\u30c6\u30b9\u30c8() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\n\n\t\t// Assert\n\t\tIDataSet expectedDataSet = readDataSet(\"data/expected_dataset_view.xml\");\n\t\tITable expectedTable = expectedDataSet.getTable(\"persons\");\n\t\tConnection conn = dataSource().getConnection();\n\t\tDatabaseConnection dbConn = new DatabaseConnection(conn);\n\t\tString tableName = \"persons\";\n\t\tString sqlQuery = \"SELECT first_name, last_name, age FROM persons ORDER BY age\";\n\t\tString[] ignoreCols = new String[0];\n\t\tAssertion.assertEqualsByQuery(expectedTable, dbConn, tableName, sqlQuery, ignoreCols);\n\t}\n```\n\n**assertEqualsByQuery**\nSQL\u30af\u30a8\u30ea\u3067\u4f5c\u6210\u3057\u305f\u30c6\u30fc\u30d6\u30eb\u3068\u6bd4\u8f03\u3059\u308b\u30a2\u30b5\u30fc\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\n```assertEqualsByQuery.java\npublic void assertEqualsByQuery(ITable expectedTable,\n                       IDatabaseConnection connection,\n                       String tableName,\n                       String sqlQuery,\n                       String[] ignoreCols)\n                         throws DatabaseUnitException,\n                                SQLException\n```\n\n+ \u30d1\u30e9\u30e1\u30fc\u30bf\n    - expectedTable : \u671f\u5f85\u5024\u306e\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\n    - connection : SQL\u3092\u767a\u884c\u3059\u308b\u305f\u3081\u306eDB\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\n    - tableName : \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30af\u30a8\u30ea\u5bfe\u8c61\u306e\u30c6\u30fc\u30d6\u30eb\uff08\u203b \u4eca\u56de\u306f\u9069\u5f53\u306a\u6587\u5b57\u5217\u3067\u3082\u30c6\u30b9\u30c8\u304c\u6210\u529f\u3057\u307e\u3059\u3002\uff09\n    - sqlQuery : \u6bd4\u8f03\u5bfe\u8c61\u306e\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3059\u308bSQL\u30af\u30a8\u30ea\n    - ignoreCols : \u6bd4\u8f03\u5bfe\u8c61\u306b\u3057\u306a\u3044\u30ab\u30e9\u30e0\n\n# \u5916\u90e8\u30ad\u30fc\u5236\u7d04\n\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306edataset\u306f\u3001\u4e0a\u304b\u3089\u9806\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u305f\u5834\u5408\u3001\u305d\u306e\u5236\u7d04\u3092\u6e80\u305f\u3059\u9806\u306b\u30c6\u30b9\u30c8\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001person\u30c6\u30fc\u30d6\u30eb\u306egender_id\u306b\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\ndataset\u306e\u5b9a\u7fa9\u9806\u3092\u9006\u306b\u3057\u3066\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n**\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf**\n\n```setup_dataset.xml\n<dataset>\n  <person first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <person first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <person first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <person first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n  <gender id=\"1\" gender_name=\"Male\"/>\n  <gender id=\"2\" gender_name=\"Female\"/>\n  <gender id=\"3\" gender_name=\"Trans Male\"/>\n  <gender id=\"4\" gender_name=\"Trans Female\"/>\n  <gender id=\"5\" gender_name=\"Cross Dressing\"/>\n</dataset>\n```\n\n**\u5b9f\u884c\u7d50\u679c**\n\u53c2\u7167\u6574\u5408\u6027\u5236\u7d04\u9055\u53cd\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```\nCaused by: org.h2.jdbc.JdbcSQLException: \u53c2\u7167\u6574\u5408\u6027\u5236\u7d04\u9055\u53cd: \"CONSTRAINT_8C: PUBLIC.PERSON FOREIGN KEY(GENDER_ID) REFERENCES PUBLIC.GENDER(ID) (1)\"\nReferential integrity constraint violation: \"CONSTRAINT_8C: PUBLIC.PERSON FOREIGN KEY(GENDER_ID) REFERENCES PUBLIC.GENDER(ID) (1)\"; SQL statement:\ninsert into PERSON (FIRST_NAME, LAST_NAME, AGE, GENDER_ID) values (?, ?, ?, ?) [23506-192]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\n\tat org.h2.message.DbException.get(DbException.java:179)\n\tat org.h2.message.DbException.get(DbException.java:155)\n\tat org.h2.constraint.ConstraintReferential.checkRowOwnTable(ConstraintReferential.java:372)\n\tat org.h2.constraint.ConstraintReferential.checkRow(ConstraintReferential.java:314)\n\tat org.h2.table.Table.fireConstraints(Table.java:967)\n\tat org.h2.table.Table.fireAfterRow(Table.java:985)\n\tat org.h2.command.dml.Insert.insertRows(Insert.java:161)\n\tat org.h2.command.dml.Insert.update(Insert.java:114)\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:98)\n\tat org.h2.command.Command.executeUpdate(Command.java:258)\n\tat org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:201)\n\tat org.dbunit.database.statement.SimplePreparedStatement.addBatch(SimplePreparedStatement.java:80)\n\tat org.dbunit.database.statement.AutomaticPreparedBatchStatement.addBatch(AutomaticPreparedBatchStatement.java:70)\n\tat org.dbunit.operation.AbstractBatchOperation.execute(AbstractBatchOperation.java:224)\n\t... 29 more\n```\n\n\u30c6\u30b9\u30c8\u7528\u306e\u30b9\u30ad\u30fc\u30de\u4f5c\u6210\u3082\u9806\u756a\u3092\u8003\u616e\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u30c6\u30fc\u30d6\u30eb\u306e\u4f5c\u6210\u9806\u5e8f\u3092\u9006\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\n**\u30b9\u30ad\u30fc\u30de\u5b9a\u7fa9**\n\n```schema.sql\nCREATE TABLE IF NOT EXISTS person (\n\tid INT IDENTITY PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tage  INT,\n\tgender_id INT,\n\tFOREIGN KEY (gender_id) REFERENCES gender(id),\n);\n\nCREATE TABLE IF NOT EXISTS gender (\n\tid INT IDENTITY PRIMARY KEY,\n\tgender_name VARCHAR,\n);\n```\n\n**\u5b9f\u884c\u7d50\u679c**\n\u5916\u90e8\u30ad\u30fc\u5236\u7d04\u3092\u8a2d\u5b9a\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u304d\u306b\"GENDER\"\u30c6\u30fc\u30d6\u30eb\u304c\u898b\u3064\u304b\u3089\u305a`SQLException`\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n```\norg.h2.jdbc.JdbcSQLException: \u30c6\u30fc\u30d6\u30eb \"GENDER\" \u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\nTable \"GENDER\" not found; SQL statement:\nCREATE TABLE IF NOT EXISTS person (\n\tid INT IDENTITY PRIMARY KEY,\n\tfirst_name VARCHAR,\n\tlast_name VARCHAR,\n\tage  INT,\n\tgender_id INT,\n\tFOREIGN KEY (gender_id) REFERENCES gender(id),\n) [42102-192]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:345)\n\tat org.h2.message.DbException.get(DbException.java:179)\n\tat org.h2.message.DbException.get(DbException.java:155)\n\tat org.h2.schema.Schema.getTableOrView(Schema.java:436)\n\tat org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:201)\n\tat org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:77)\n\tat org.h2.command.ddl.CreateTable.update(CreateTable.java:176)\n\tat org.h2.command.CommandContainer.update(CommandContainer.java:98)\n\tat org.h2.command.Command.executeUpdate(Command.java:258)\n\tat org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)\n\tat org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)\n\tat org.h2.tools.RunScript.process(RunScript.java:260)\n\tat org.h2.tools.RunScript.process(RunScript.java:190)\n\tat org.h2.tools.RunScript.process(RunScript.java:328)\n\tat org.h2.tools.RunScript.execute(RunScript.java:303)\n\tat databasetest.PersonRepositoryTest.createSchema(PersonRepositoryTest.java:31)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat \n...\n```\n\n# org.dbunit.Assertion\nDBUnit\u3067\u30c6\u30fc\u30d6\u30eb\u6bd4\u8f03\u3092\u3059\u308b\u3068\u304d\u306b`org.hamcrest.MatcherAssert.assertThat`\u3092\u4f7f\u3046\u3068\u3001\u30c6\u30fc\u30d6\u30eb\u306e\u30c7\u30fc\u30bf\u304c\u4e00\u81f4\u3057\u3066\u3044\u3066\u3082\u3001`java.lang.AssertionError`\u304c\u767a\u751f\u3057\u307e\u3059\u3002DBUnit\u306e`org.dbunit.Assertion.assertEquals`\u3092\u4f7f\u3063\u3066\u6bd4\u8f03\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n**assertThat\u3092\u4f7f\u3046\u3068\u767a\u751f\u3059\u308bAssertionError**\n\n```\njava.lang.AssertionError: \nExpected: is <org.dbunit.dataset.DefaultTable[_metaData=tableName=persons, columns=[(id, UNKNOWN, nullableUnknown), (first_name, UNKNOWN, nullableUnknown), (last_name, UNKNOWN, nullableUnknown), (age, UNKNOWN, nullableUnknown), (gender_id, UNKNOWN, nullableUnknown)], keys=[], _rowList.size()=4]>\n     but: was <org.dbunit.database.CachedResultSetTable[_metaData=table=PERSONS, cols=[(ID, INTEGER, noNulls), (FIRST_NAME, VARCHAR, nullable), (LAST_NAME, VARCHAR, nullable), (AGE, INTEGER, nullable), (GENDER_ID, INTEGER, nullable)], pk=[(ID, INTEGER, noNulls)], _rowList.size()=4]>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\n\tat databasetest.PersonRepositoryTest.updateGenderByFirstNameTest(PersonRepositoryTest.java:98)\n...\n```\n\nDBUnit\u306b\u306f\u3001IDataSet\u3001ITable\u306b\u5bfe\u3057\u3066\u3001\u5358\u7d14\u306a\u6bd4\u8f03\u3001SQL\u30af\u30a8\u30ea\u3092\u4f7f\u3063\u305f\u6bd4\u8f03\u3001\u30ab\u30e9\u30e0\u3092\u7d5e\u3063\u305f\u6bd4\u8f03\u306a\u3069\u306e Assertion\uff08[\u30ea\u30f3\u30af](http://dbunit.sourceforge.net/apidocs/org/dbunit/assertion/DbUnitAssert.html)\uff09\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002IDataSet\u3001ITable\u306b\u5bfe\u3059\u308b\u691c\u8a3c\u306f\u3001\u7528\u9014\u306b\u9069\u3057\u305fDBUnit\u306eAssertion\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n|\u25a0 DBUnit\u306eAssert\u30e1\u30bd\u30c3\u30c9\u4e00\u89a7|\n|:------------------------|\n|assertEquals(IDataSet expectedDataSet, IDataSet actualDataSet)|\n|assertEquals(IDataSet expectedDataSet, IDataSet actualDataSet, FailureHandler failureHandler)|\n|assertEquals(ITable expectedTable, ITable actualTable)|\n|assertEquals(ITable expectedTable, ITable actualTable, Column[] additionalColumnInfo)|\n|assertEquals(ITable expectedTable, ITable actualTable, FailureHandler failureHandler)|\n|assertEqualsByQuery(IDataSet expectedDataset, IDatabaseConnection connection, String sqlQuery, String tableName, String[] ignoreCols)|\n|assertEqualsByQuery(ITable expectedTable, IDatabaseConnection connection, String tableName, String sqlQuery, String[] ignoreCols)|\n|assertEqualsIgnoreCols(IDataSet expectedDataset, IDataSet actualDataset, String tableName, String[] ignoreCols)|\n|assertEqualsIgnoreCols(ITable expectedTable, ITable actualTable, String[] ignoreCols)|\n\n# Excel\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\uff06\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nDBUnit\u306f\u3001Excel\u30b7\u30fc\u30c8\u306e\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u30c6\u30fc\u30d6\u30eb\u30c7\u30fc\u30bf\u3092\u30b7\u30fc\u30c8\u5358\u4f4d\u306b\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u30b7\u30fc\u30c8\u306e\uff11\u884c\u76ee\u306f\u30ab\u30e9\u30e0\u540d\u3067\u3059\u3002\n\n**PERSONS\u30c6\u30fc\u30d6\u30eb**\n![PERSONS.png](https://qiita-image-store.s3.amazonaws.com/0/107056/19c1cc48-7349-17bb-5d84-2b363902309e.png)\n\n**GENDERS\u30c6\u30fc\u30d6\u30eb**\n![GENDERS_Sheet.png](https://qiita-image-store.s3.amazonaws.com/0/107056/f6098569-39c9-7f1c-8f7c-34576c1247eb.png)\n\n**\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u305fxml\u30c7\u30fc\u30bf**\n\n```flatxml_import.xml\n<dataset>\n  <genders id=\"1\" gender_name=\"Male\"/>\n  <genders id=\"2\" gender_name=\"Female\"/>\n  <genders id=\"3\" gender_name=\"Trans Male\"/>\n  <genders id=\"4\" gender_name=\"Trans Female\"/>\n  <genders id=\"5\" gender_name=\"Cross Dressing\"/>\n  <persons id=\"1\" first_name=\"Barack\" last_name=\"Obama\" age=\"58\" gender_id=\"1\"/>\n  <persons id=\"2\" first_name=\"Theresa\" last_name=\"May\" age=\"43\" gender_id=\"2\"/>\n  <persons id=\"3\" first_name=\"Vladimir\" last_name=\"Putin\" age=\"52\" gender_id=\"1\"/>\n  <persons id=\"4\" first_name=\"Matsuko\" last_name=\"Deluxe\" age=\"45\" gender_id=\"1\"/>\n</dataset>\n```\n\n**Excel\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8**\n\n```excel_import.java\n\t@Test\n\tpublic void Excel\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/flatxml_import.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\t\tIDataSet xlsDataSet = new XlsDataSet(new File(\"data/xls_export.xls\"));\n\n\t\t// Assert\n\t\tAssertion.assertEquals(xlsDataSet, setupDataSet);\n\t}\n```\n\n**Excel\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8**\n\n```excel_export.java\n\t@Test\n\tpublic void Excel\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\t\tConnection conn = dataSource().getConnection();\n\t\tDatabaseConnection dbConn = new DatabaseConnection(conn);\n\t\tIDataSet actualDataSet = dbConn.createDataSet();\n\n\t\tXlsDataSet.write(actualDataSet, new FileOutputStream(\"data/xls_export.xls\"));\n\n\t\t// Assert\n\t}\n```\n\n# CSV\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\uff06\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\nDBUnit\u306f\u3001CSV\u5f62\u5f0f\u306e\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3001\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nCSV\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080CsvDataSet\u30af\u30e9\u30b9\u3001CSV\u30c7\u30fc\u30bf\u3092\u51fa\u529b\u3059\u308bCsVDataSetWriter\u30af\u30e9\u30b9\u306b\u306f\u3001\u30c6\u30fc\u30d6\u30eb\u5358\u4f4d\u306b\u4f5c\u6210\u3057\u305fCSV\u30d5\u30a1\u30a4\u30eb\u3068\u305d\u306e\u8aad\u307f\u8fbc\u307f\u9806\u5e8f\u3092\u8a18\u8f09\u3057\u305ftable-ordering.txt\u306e\u3042\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002CSV\u30d5\u30a1\u30a4\u30eb\u306f\u3001\uff11\u884c\u76ee\u304c\u30ab\u30e9\u30e0\u540d\u3001\uff12\u884c\u76ee\u4ee5\u964d\u304c\u30ec\u30b3\u30fc\u30c9\u306b\u306a\u308a\u307e\u3059\u3002\n\n```table-ordering.txt\nGENDERS\nPERSONS\n```\n\n```GENDERS.csv\nID, GENDER_NAME\n\"1\",\"Male\"\n\"2\",\"Female\"\n\"3\",\"Trans Male\"\n\"4\",\"Trans Female\"\n\"5\",\"Cross Dressing\"\n```\n\n```PERSONS.csv\nID, FIRST_NAME, LAST_NAME, AGE, GENDER_ID\n\"1\",\"Barack\",\"Obama\",\"58\",\"1\"\n\"2\",\"Theresa\",\"May\",\"43\",\"2\"\n\"3\",\"Vladimir\",\"Putin\",\"52\",\"1\"\n\"4\",\"Matsuko\",\"Deluxe\",\"45\",\"1\"\n```\n\n```write_csv.java\n\t@Test\n\tpublic void CSV\u306b\u30c7\u30fc\u30bf\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/setup_dataset.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\t\tConnection conn = dataSource().getConnection();\n\t\tDatabaseConnection dbConn = new DatabaseConnection(conn);\n\t\tIDataSet actualDataSet = dbConn.createDataSet();\n\n\t\tCsvDataSetWriter.write(actualDataSet, new File(\"data\"));\n\n\t\t// Assert\n\t}\n```\n\n```read_csv.java\n\t@Test\n\tpublic void CSV\u304b\u3089\u30c7\u30fc\u30bf\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b() throws Exception {\n\t\t// Arrange\n\t\tIDataSet setupDataSet = readDataSet(\"data/flatxml_import.xml\");\n\t\tcleanlyInsert(setupDataSet);\n\n\t\t// Action\n\t\tIDataSet csvDataSet = new CsvDataSet(new File(\"data\"));\n\n\t\t// Assert\n\t\tAssertion.assertEquals(csvDataSet, setupDataSet);\n\t}\n```\n\n# \u304a\u308f\u308a\u306b\n\u307f\u306a\u3055\u3093\u306f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\u307e\u305f\u3001\u305d\u306e\u81ea\u52d5\u30c6\u30b9\u30c8\u306f\u3001\u9ad8\u901f\u304b\u3064\u5b89\u5b9a\u7684\u306b\u5b9f\u65bd\u3067\u304d\u3066\u3044\u307e\u3059\u3067\u3057\u3087\u3046\u304b\uff1f\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u7d50\u5408\u3057\u3066\u884c\u3046\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3067\u306f\u3001\u30c6\u30b9\u30c8\u524d\u306b\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092\u7279\u5b9a\u306e\u72b6\u614b\u306b\u81ea\u52d5\u7684\u306b\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306e\u624b\u9806\u3092\u304a\u308d\u305d\u304b\u306b\u3059\u308b\u3068\u3001\u30c6\u30b9\u30c8\u7d50\u679c\u304c\u5b9f\u884c\u306e\u305f\u3073\u306b\u3068\u7570\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u308a\u3001\u8a66\u9a13\u306e\u6e96\u5099\u306b\u6642\u9593\u304c\u81a8\u5927\u306b\u304b\u304b\u3063\u3066\u3057\u307e\u3063\u305f\u308a\u3059\u308b\u305f\u3081\u3053\u306e\u90e8\u5206\u306fDbUnit\u3092\u3064\u304b\u3063\u3066\u3057\u3063\u304b\u308a\u3068\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u90e8\u5206\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30b9\u30ad\u30fc\u30de\u306e\u5909\u66f4\u3001\u4f8b\u3048\u3070\u3001\u540d\u524d\u306e\u5909\u66f4\u3084\u5217\u306e\u8ffd\u52a0\u3084\u524a\u9664\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3084\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u624b\u52d5\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001\u30c6\u30b9\u30c8\u306e\u7dad\u6301\u5de5\u6570\u304c\u305d\u308c\u306a\u308a\u306b\u7a4d\u307f\u3042\u304c\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002DbUnit\u306f\u3001\u30c7\u30fc\u30bf\u3092Excel\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u6a5f\u80fd\u3082\u4f7f\u3063\u3066\u52b9\u7387\u7684\u306b\u30c6\u30b9\u30c8\u3057\u3066\u3044\u3051\u308c\u3070\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Java", "JUnit", "h2", "DBUnit", "gradle"]}