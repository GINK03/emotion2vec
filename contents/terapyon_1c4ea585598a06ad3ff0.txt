{"tags": ["CloudFront", "AWS", "VideoJS", "boto"], "context": " More than 1 year has passed since last update.\n\n\u524d\u63d0\n\u5f53\u65b9\u3067\u306f\u3001Plone\u3092\u7528\u3044\u3066\u52d5\u753b(Video)\u3092\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3055\u305b\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u3001Plone\u306e\u30e6\u30fc\u30b6\u60c5\u5831(\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u60c5\u5831)\u3092\u5143\u306b\u3001\u95b2\u89a7\u306e\u5236\u9650\u3092\u3055\u305b\u305f\u3044\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u52d5\u753b\u306e\u30a2\u30af\u30bb\u30b9\u7ba1\u7406\u306f\u975e\u5e38\u306b\u624b\u9593\u306e\u304b\u304b\u308b\u3053\u3068\u3067\u3059\u304c\u3001AWS CloudFront\u306e\u30b5\u30a4\u30f3\u4ed8\u304dURL(signed url)\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\nPlone\u3068\u306e\u7d44\u5408\u305b\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001 c2.app.streamingaws \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u305a\u306b\u30bb\u30ad\u30e5\u30a2\u306b\u52d5\u753b\u914d\u4fe1\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001 Python + boto \u3092\u4f7f\u3063\u3066\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u306e\u751f\u6210\u65b9\u6cd5\u53ca\u3073VideoJS\u3092\u7528\u3044\u305fHTML\u306e\u66f8\u304d\u65b9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n\u5fc5\u8981\u306a\u6761\u4ef6\u30fb\u60c5\u5831\n\nPython 2.7 or 3.4 (boto\u306b\u4f9d\u5b58/\u4ed6\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u53ef\u80fd\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u8a66\u3057\u3066\u3044\u306a\u3044) (\u79c1\u306f 2.7\u7cfb\u306e\u307f\u3067\u8a66\u3057\u305f)\nboto (\u4f7f\u7528\u3057\u305f\u306e\u306f\u3001boto 2.36.0 (\u73fe\u72b6\u306e\u6700\u7d42\u30d0\u30fc\u30b8\u30e7\u30f3) / \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u6a5f\u80fd\u3059\u308b\u3068\u601d\u3046)\nAWS \u30a2\u30ab\u30a6\u30f3\u30c8 (IAM\u30e6\u30fc\u30b6\u3067\u3082\u53ef\u80fd / \u9069\u5207\u306a\u6a29\u9650\u4ed8\u306f\u5fc5\u8981)\nCloudFront key\u30da\u30a2\nS3 \u53ca\u3073 CloudFront \u306e\u8a2d\u5b9a (\u5225\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u898b\u3066\u4e0b\u3055\u3044)\nURL\u6709\u52b9\u6642\u9593\u306e\u6c7a\u5b9a (\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u52d5\u753b\u518d\u751f\u306e\u5834\u5408\u3001\u52d5\u753b\u306e\u6642\u9593\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b)\n\n\u3053\u3053\u307e\u3067\u6e96\u5099\u3001\u6c7a\u307e\u3063\u305f\u3089\u5b9f\u88c5\u3059\u308b\u306e\u307f\u3002\n\n\u30b5\u30a4\u30f3\u4ed8\u304dURL\u306e\u751f\u6210\n\ncreate_url.py\nimport time\nfrom boto.cloudfront import CloudFrontConnection\nfrom boto.cloudfront.distribution import Distribution\n\naccess_key_id = \"YOUR_KEY_ID\" # AWS (or IAM) \u30a2\u30ab\u30a6\u30f3\u30c8\u306eID\nsecret_access_key = \"YOUR_SECRET_KEY\" # AWS (or IAM) \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\ncloudfront_key_id = \"CLOUD_FRONT_KEY_ID\" # CloudFront \u306eID\ncloudfront_private_key_str = \"\"\"XXXXXXXXXXXXX\n\"\"\" # CloudFront \u306e \u79d8\u5bc6\u9375 (-----BEGIN RSA PRIVATE KEY-----\u3092\u542b\u3081\u3066)\n\nexpire_time = int(time.time() + 3600) # \u6709\u52b9\u6642\u9593\u30923600\u79d2 (1\u6642\u9593) \u306b\u8a2d\u5b9a\n\nconn = CloudFrontConnection(access_key_id, secret_access_key)\ndistribution = Distribution(connection=conn)\n\ndef get_signed_url(url, policy_url):\n    signed_url = distribution.create_signed_url(url=url,\n                            keypair_id=cloudfront_key_id,\n                            expire_time=expire_time,\n                            policy_url=policy_url,\n                            private_key_string=cloudfront_private_key_str)\n    return signed_url\n\nif __name__ == '__main__:\n    url = \"\"\n    policy_url = \"\"\n    print get_signed_url(url, policy_url)\n\n\n\nVideoJS\u3067\u306e\u8868\u793a\nvideo.js \u3092\u7528\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b video \u30bf\u30b0 \u3084 source \u30bf\u30b0 \u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002video.js \u3067\u306eHTML\u306e\u8a18\u8ff0\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\niOS\u5411\u3051\u306bAWS S3 + CloudFront\u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0\n\n\n\u753b\u50cf\u306e\u5834\u5408\n\ncreate_signed_url_for_image.py\nform .create_url import get_signed_url\ndomain = \"xxxx.cloudfront.net\" # ClundFront \u306e HTTP(S) \u306e Domain\nbase_path = \"video/\" # \u753b\u50cf\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nimg_id = \"thumb.png\" # \u753b\u50cf\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"https://\" + domain + \"/\" + base_path + img_id\npolicy_url = \"https://\" + domain + \"/\" + base_path + \"*\"\nsigned_url = get_signed_url(url, policy_url)\n\n\n\nvideo.html\n<video id=\"video_1\" class=\"video-js vjs-default-skin\"\n      controls preload=\"auto\" width=\"640\" height=\"360\"\n      poster=\"${signed_url}\" <!-- \u4e0a\u8a18\u306esigned_url\u3092\u52d5\u7684\u306b\u306f\u3081\u308b -->\n      data-setup='{}'>\n    <source src=\"\" type=\"\" />\n</video>\n\n\n\nRTMP\u306e\u5834\u5408\n\ncreate_signed_url_for_rtmp.py\nform .create_url import get_signed_url\ndomain = \"xxxx2.cloudfront.net\" # ClundFront \u306e RTMP \u306e Domain\nbase_path = \"video/\" # \u52d5\u753b\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nvideo_id = \"video.mp3\" # \u52d5\u753b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"rtmp://\" + domain + \"/cfx/st/&mp4:\" + base_path + video_id\npolicy_path = \"base_path + video_id # RTMP\u306e\u5834\u5408\u306f\u30c9\u30e1\u30a4\u30f3\u7b49\u3092\u542b\u307e\u306a\u3044\nsigned_url = get_signed_url(url, policy_path)\n\n\npolicy_path \u306b\u306f\u3001 rtmp://\u3092\u542b\u3080\u30c9\u30e1\u30a4\u30f3 \u7b49\u306f\u542b\u3081\u306a\u3044\u3002 \n\nvideo.html\n<source src=\"${signed_url}\"\n        type='rtmp/mp4' />\n\n\n\nHLS\u306e\u5834\u5408\nHLS\u306e\u5834\u5408\u306f\u3001 m3u8 \u3068\u3044\u3046\u30e1\u30bf\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092CloudFront\u7d4c\u7531\u3067\u53d6\u5f97\u3057\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u52d5\u7684\u306b\u66f8\u304d\u306a\u304a\u3057\u305f\u3082\u306e\u3092\u3001HTTP(S)\u901a\u4fe1\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001\u3053\u306e m3u8 \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u308b\u3088\u3046\u306bHTML\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\nvideo.html\n<source src=\"http://MY_SERVER_DOMAIN/${signed_url}\"\n        type=\"application/x-mpegURL\" />\n\n\n\u6b21\u306b\u3001 m3u8 \u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nm3u8\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u5206\u5272\u3055\u308c\u305f\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306eURL(m3u8\u3068\u540c\u3058\u968e\u5c64\u306a\u3089\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f)\u304c\u5217\u6319\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306eURL\u3092\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\nm3u8\u30d5\u30a1\u30a4\u30eb\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u306f\u5bb9\u6613\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u63db\u3048\u3001\u4f55\u304b\u3057\u3089\u3067\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u304b\u3089HTTP(S)\u901a\u4fe1\u3067\u63d0\u4f9b\u3057\u307e\u3059\u3002\nm3u8\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e signed_url \u306e\u53d6\u5f97\u3002\n\ncreate_signed_url_for_hls.py\nform .create_url import get_signed_url\ndomain = \"xxxx.cloudfront.net\" # ClundFront \u306e HTTP(S) \u306e Domain\nbase_path = \"video/\" # \u52d5\u753b\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nmeta_id = \"index.m3u8\" # \u52d5\u753b\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"https://\" + domain + \"/\" + base_path + meta_id\npolicy_url = \"https://\" + domain + \"/\" + base_path + \"*\"\nsigned_url = get_signed_url(url, policy_url)\n\n\n\u53d6\u5f97\u3057\u305f\u3001  signed_url \u304b\u3089\u3001m3u8\u30d5\u30a1\u30a4\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u30c7\u30fc\u30bf\u5185\u90e8\u3092\u66f8\u304d\u63db\u3048\u3001HTTP(S)\u901a\u4fe1\u3067\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\nzope_server.py\nimport urllib2\n\ndef _adding_param_for_m3u8(data, base_url, signed_param):\n    for li in data.split(\"\\n\"):\n        if not li.strip():\n            yield li\n        elif li.startswith(\"#\"):\n            yield li\n        else:\n            yield base_url + \"/\" + li + \"?\" + signed_param\n\nclass View:\n    def render(self, signed_url):\n        \"\"\"\n        \"\"\"\n        sp_signed_url = signed_url.split(\"?\", 1)\n        if len(sp_signed_url) < 2:\n            return None\n        base_url = sp_signed_url[0].rsplit(\"/\", 1)[0]\n        signed_param = sp_signed_url[1]\n        m3u8_data = urllib2.urlopen(signed_url)\n        data_list = _adding_param_for_m3u8(m3u8_data.read(),\n                                           base_url, signed_param)\n        m3u8_data.close()\n        self.request.RESPONSE.setHeader('Content-Type', 'application/x-mpegURL')\n        return \"\\n\".join(data_list)\n\n\n\n\u95a2\u9023\u30b3\u30f3\u30c6\u30f3\u30c4\n\nAWS S3 + CloudFront \u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0\niOS\u5411\u3051\u306bAWS S3 + CloudFront\u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0\nAWS CloudFront\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1\niOS\u5bfe\u5fdc\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8(\u5236\u9650\u4ed8\u304d)\u306b\u5bfe\u5fdc\n\n\n\u6700\u5f8c\u306b\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306f\u3001Plone\u306b\u5b9f\u88c5\u3057\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u304b\u3089\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u3092\u4f5c\u308b\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u3001VideoJS\u3067\u8868\u793a\u3055\u305b\u308b\u90e8\u5206\u306e\u89e3\u8aac\u3092\u3057\u307e\u3057\u305f\u3002\n\u90e8\u5206\u7684\u306b\u8a18\u8f09\u30df\u30b9\u304c\u6b8b\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30df\u30b9\u306b\u3064\u3044\u3066\u306f\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u305f\u3089\u5e78\u3044\u3067\u3059\u3002\n\u8457\u8005\u95a2\u9023Blog\u8a18\u4e8b\u3068\u3042\u308f\u305b\u3066\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002\nAWS CloudFront \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1\n# \u524d\u63d0\n\n\u5f53\u65b9\u3067\u306f\u3001Plone\u3092\u7528\u3044\u3066\u52d5\u753b(Video)\u3092\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u518d\u751f\u3055\u305b\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u969b\u306b\u3001Plone\u306e\u30e6\u30fc\u30b6\u60c5\u5831(\u30ed\u30b0\u30a4\u30f3\u30e6\u30fc\u30b6\u60c5\u5831)\u3092\u5143\u306b\u3001\u95b2\u89a7\u306e\u5236\u9650\u3092\u3055\u305b\u305f\u3044\u3068\u8003\u3048\u307e\u3057\u305f\u3002\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u52d5\u753b\u306e\u30a2\u30af\u30bb\u30b9\u7ba1\u7406\u306f\u975e\u5e38\u306b\u624b\u9593\u306e\u304b\u304b\u308b\u3053\u3068\u3067\u3059\u304c\u3001AWS CloudFront\u306e\u30b5\u30a4\u30f3\u4ed8\u304dURL(signed url)\u6a5f\u80fd\u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\nPlone\u3068\u306e\u7d44\u5408\u305b\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001 [c2.app.streamingaws](https://pypi.python.org/pypi/c2.app.streamingaws) \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u305a\u306b\u30bb\u30ad\u30e5\u30a2\u306b\u52d5\u753b\u914d\u4fe1\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001 Python + boto \u3092\u4f7f\u3063\u3066\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u306e\u751f\u6210\u65b9\u6cd5\u53ca\u3073VideoJS\u3092\u7528\u3044\u305fHTML\u306e\u66f8\u304d\u65b9\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n# \u5fc5\u8981\u306a\u6761\u4ef6\u30fb\u60c5\u5831\n\n- Python 2.7 or 3.4 (boto\u306b\u4f9d\u5b58/\u4ed6\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u53ef\u80fd\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u8a66\u3057\u3066\u3044\u306a\u3044) (\u79c1\u306f 2.7\u7cfb\u306e\u307f\u3067\u8a66\u3057\u305f)\n- boto (\u4f7f\u7528\u3057\u305f\u306e\u306f\u3001boto 2.36.0 (\u73fe\u72b6\u306e\u6700\u7d42\u30d0\u30fc\u30b8\u30e7\u30f3) / \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u3082\u6a5f\u80fd\u3059\u308b\u3068\u601d\u3046)\n- AWS \u30a2\u30ab\u30a6\u30f3\u30c8 (IAM\u30e6\u30fc\u30b6\u3067\u3082\u53ef\u80fd / \u9069\u5207\u306a\u6a29\u9650\u4ed8\u306f\u5fc5\u8981)\n- CloudFront key\u30da\u30a2\n- S3 \u53ca\u3073 CloudFront \u306e\u8a2d\u5b9a (\u5225\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u898b\u3066\u4e0b\u3055\u3044)\n- URL\u6709\u52b9\u6642\u9593\u306e\u6c7a\u5b9a (\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u52d5\u753b\u518d\u751f\u306e\u5834\u5408\u3001\u52d5\u753b\u306e\u6642\u9593\u4ee5\u4e0a\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b)\n\n\n\u3053\u3053\u307e\u3067\u6e96\u5099\u3001\u6c7a\u307e\u3063\u305f\u3089\u5b9f\u88c5\u3059\u308b\u306e\u307f\u3002\n\n\n# \u30b5\u30a4\u30f3\u4ed8\u304dURL\u306e\u751f\u6210\n\n```create_url.py\nimport time\nfrom boto.cloudfront import CloudFrontConnection\nfrom boto.cloudfront.distribution import Distribution\n\naccess_key_id = \"YOUR_KEY_ID\" # AWS (or IAM) \u30a2\u30ab\u30a6\u30f3\u30c8\u306eID\nsecret_access_key = \"YOUR_SECRET_KEY\" # AWS (or IAM) \u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30b7\u30fc\u30af\u30ec\u30c3\u30c8\u30ad\u30fc\ncloudfront_key_id = \"CLOUD_FRONT_KEY_ID\" # CloudFront \u306eID\ncloudfront_private_key_str = \"\"\"XXXXXXXXXXXXX\n\"\"\" # CloudFront \u306e \u79d8\u5bc6\u9375 (-----BEGIN RSA PRIVATE KEY-----\u3092\u542b\u3081\u3066)\n\nexpire_time = int(time.time() + 3600) # \u6709\u52b9\u6642\u9593\u30923600\u79d2 (1\u6642\u9593) \u306b\u8a2d\u5b9a\n\nconn = CloudFrontConnection(access_key_id, secret_access_key)\ndistribution = Distribution(connection=conn)\n\ndef get_signed_url(url, policy_url):\n    signed_url = distribution.create_signed_url(url=url,\n                            keypair_id=cloudfront_key_id,\n                            expire_time=expire_time,\n                            policy_url=policy_url,\n                            private_key_string=cloudfront_private_key_str)\n    return signed_url\n\nif __name__ == '__main__:\n    url = \"\"\n    policy_url = \"\"\n    print get_signed_url(url, policy_url)\n```\n\n# VideoJS\u3067\u306e\u8868\u793a\n\nvideo.js \u3092\u7528\u3044\u308b\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b `video` \u30bf\u30b0 \u3084 `source` \u30bf\u30b0 \u3092\u8a18\u8ff0\u3057\u307e\u3059\u3002video.js \u3067\u306eHTML\u306e\u8a18\u8ff0\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- [iOS\u5411\u3051\u306bAWS S3 + CloudFront\u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0](http://qiita.com/terapyon/items/e4925c15c7ee58778f92)\n\n\n## \u753b\u50cf\u306e\u5834\u5408\n\n```create_signed_url_for_image.py\nform .create_url import get_signed_url\ndomain = \"xxxx.cloudfront.net\" # ClundFront \u306e HTTP(S) \u306e Domain\nbase_path = \"video/\" # \u753b\u50cf\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nimg_id = \"thumb.png\" # \u753b\u50cf\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"https://\" + domain + \"/\" + base_path + img_id\npolicy_url = \"https://\" + domain + \"/\" + base_path + \"*\"\nsigned_url = get_signed_url(url, policy_url)\n```\n\n```video.html\n<video id=\"video_1\" class=\"video-js vjs-default-skin\"\n      controls preload=\"auto\" width=\"640\" height=\"360\"\n      poster=\"${signed_url}\" <!-- \u4e0a\u8a18\u306esigned_url\u3092\u52d5\u7684\u306b\u306f\u3081\u308b -->\n      data-setup='{}'>\n    <source src=\"\" type=\"\" />\n</video>\n```\n\n\n## RTMP\u306e\u5834\u5408\n\n```create_signed_url_for_rtmp.py\nform .create_url import get_signed_url\ndomain = \"xxxx2.cloudfront.net\" # ClundFront \u306e RTMP \u306e Domain\nbase_path = \"video/\" # \u52d5\u753b\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nvideo_id = \"video.mp3\" # \u52d5\u753b\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"rtmp://\" + domain + \"/cfx/st/&mp4:\" + base_path + video_id\npolicy_path = \"base_path + video_id # RTMP\u306e\u5834\u5408\u306f\u30c9\u30e1\u30a4\u30f3\u7b49\u3092\u542b\u307e\u306a\u3044\nsigned_url = get_signed_url(url, policy_path)\n```\n\n`policy_path` \u306b\u306f\u3001 `rtmp://\u3092\u542b\u3080\u30c9\u30e1\u30a4\u30f3` \u7b49\u306f\u542b\u3081\u306a\u3044\u3002 \n\n```video.html\n<source src=\"${signed_url}\"\n        type='rtmp/mp4' />\n```\n\n\n## HLS\u306e\u5834\u5408\n\nHLS\u306e\u5834\u5408\u306f\u3001 `m3u8` \u3068\u3044\u3046\u30e1\u30bf\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092CloudFront\u7d4c\u7531\u3067\u53d6\u5f97\u3057\u3001\u30e1\u30bf\u30c7\u30fc\u30bf\u30d5\u30a1\u30a4\u30eb\u3092\u52d5\u7684\u306b\u66f8\u304d\u306a\u304a\u3057\u305f\u3082\u306e\u3092\u3001HTTP(S)\u901a\u4fe1\u3067\u6e21\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u3001\u3053\u306e `m3u8` \u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u6765\u308b\u3088\u3046\u306bHTML\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n\n```video.html\n<source src=\"http://MY_SERVER_DOMAIN/${signed_url}\"\n        type=\"application/x-mpegURL\" />\n```\n\n\n\u6b21\u306b\u3001 `m3u8` \u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nm3u8\u30d5\u30a1\u30a4\u30eb\u306b\u306f\u3001\u5206\u5272\u3055\u308c\u305f\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306eURL(m3u8\u3068\u540c\u3058\u968e\u5c64\u306a\u3089\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u307f)\u304c\u5217\u6319\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u305d\u308c\u3089\u306e\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306eURL\u3092\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\nm3u8\u30d5\u30a1\u30a4\u30eb\u306f\u30b7\u30f3\u30d7\u30eb\u306a\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306a\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u306f\u5bb9\u6613\u3067\u3059\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u66f8\u304d\u63db\u3048\u3001\u4f55\u304b\u3057\u3089\u3067\u81ea\u8eab\u306e\u30b5\u30fc\u30d0\u304b\u3089HTTP(S)\u901a\u4fe1\u3067\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\nm3u8\u30d5\u30a1\u30a4\u30eb\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u306e `signed_url` \u306e\u53d6\u5f97\u3002\n\n```create_signed_url_for_hls.py\nform .create_url import get_signed_url\ndomain = \"xxxx.cloudfront.net\" # ClundFront \u306e HTTP(S) \u306e Domain\nbase_path = \"video/\" # \u52d5\u753b\u304c\u4fdd\u7ba1\u3055\u308c\u3066\u3044\u308bS3\u4e0a\u306ePATH\nmeta_id = \"index.m3u8\" # \u52d5\u753b\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u30d5\u30a1\u30a4\u30eb\u540d\nurl = \"https://\" + domain + \"/\" + base_path + meta_id\npolicy_url = \"https://\" + domain + \"/\" + base_path + \"*\"\nsigned_url = get_signed_url(url, policy_url)\n```\n\n\u53d6\u5f97\u3057\u305f\u3001  `signed_url` \u304b\u3089\u3001m3u8\u30d5\u30a1\u30a4\u30eb\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u3001\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u30c7\u30fc\u30bf\u5185\u90e8\u3092\u66f8\u304d\u63db\u3048\u3001HTTP(S)\u901a\u4fe1\u3067\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\n```zope_server.py\nimport urllib2\n\ndef _adding_param_for_m3u8(data, base_url, signed_param):\n    for li in data.split(\"\\n\"):\n        if not li.strip():\n            yield li\n        elif li.startswith(\"#\"):\n            yield li\n        else:\n            yield base_url + \"/\" + li + \"?\" + signed_param\n\nclass View:\n    def render(self, signed_url):\n        \"\"\"\n        \"\"\"\n        sp_signed_url = signed_url.split(\"?\", 1)\n        if len(sp_signed_url) < 2:\n            return None\n        base_url = sp_signed_url[0].rsplit(\"/\", 1)[0]\n        signed_param = sp_signed_url[1]\n        m3u8_data = urllib2.urlopen(signed_url)\n        data_list = _adding_param_for_m3u8(m3u8_data.read(),\n                                           base_url, signed_param)\n        m3u8_data.close()\n        self.request.RESPONSE.setHeader('Content-Type', 'application/x-mpegURL')\n        return \"\\n\".join(data_list)\n```\n\n\n\n# \u95a2\u9023\u30b3\u30f3\u30c6\u30f3\u30c4\n\n- [AWS S3 + CloudFront \u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0](http://qiita.com/terapyon/items/b77ac981da790662e247)\n- [iOS\u5411\u3051\u306bAWS S3 + CloudFront\u3067\u52d5\u753b\u30b9\u30c8\u30ea\u30fc\u30e0](http://qiita.com/terapyon/items/e4925c15c7ee58778f92)\n- [AWS CloudFront\u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u3092\u914d\u4fe1](http://qiita.com/terapyon/items/ff2dd73bd479fbd44e82)\n- [iOS\u5bfe\u5fdc\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3092\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8(\u5236\u9650\u4ed8\u304d)\u306b\u5bfe\u5fdc](http://qiita.com/terapyon/items/fadecf13ed1d11dcd34d)\n\n\n# \u6700\u5f8c\u306b\n\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u306f\u3001Plone\u306b\u5b9f\u88c5\u3057\u305f\u30d7\u30ed\u30c0\u30af\u30c8\u304b\u3089\u3001\u30b5\u30a4\u30f3\u4ed8\u304dURL\u3092\u4f5c\u308b\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u3001VideoJS\u3067\u8868\u793a\u3055\u305b\u308b\u90e8\u5206\u306e\u89e3\u8aac\u3092\u3057\u307e\u3057\u305f\u3002\n\n\u90e8\u5206\u7684\u306b\u8a18\u8f09\u30df\u30b9\u304c\u6b8b\u3063\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u30df\u30b9\u306b\u3064\u3044\u3066\u306f\u3054\u6307\u6458\u3044\u305f\u3060\u3051\u305f\u3089\u5e78\u3044\u3067\u3059\u3002\n\n\u8457\u8005\u95a2\u9023Blog\u8a18\u4e8b\u3068\u3042\u308f\u305b\u3066\u304a\u8aad\u307f\u304f\u3060\u3055\u3044\u3002\n\n[AWS CloudFront \u3067\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u30b3\u30f3\u30c6\u30f3\u30c4\u914d\u4fe1](https://www.cmscom.jp/blog/hz2f2t)\n"}