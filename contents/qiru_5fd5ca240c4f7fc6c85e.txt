{"tags": ["Python2", "word2vec", "tweepy"], "context": "\n\n\u3084\u3063\u305f\u3053\u3068\ntweepy\u3067tweet\u3092\u4fdd\u5b58\u3057word2vec\u306b\u5165\u308c\u3066\u904a\u3076\n\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3092\u53c2\u8003\u306b\u3082\u3068\u3044\u30b3\u30d4\u30da\u3057\u3066\u3084\u3063\u305f\u306e\u3067\u65b0\u898f\u6027\u306f\u4f59\u308a\u6709\u308a\u307e\u305b\u3093.\n'\u30b7\u30e7\u30bf - \u7537 + \u5973 = \u30ed\u30ea'\u304c\u51fa\u308b\u3053\u3068\u3092\u4e00\u3064\u306e\u76ee\u6a19\u306b\u3057\u307e\u3057\u305f.\n\n\u74b0\u5883\nCentOS7\nAnaconda2-4.1.0\n\n\u524d\u63d0\ntweepy\nMeCab\nmecab-python\ngensim\n\n\u30b3\u30fc\u30c9\n\u3068\u3053\u308d\u3069\u3053\u308d\u5197\u9577\u306a\u306e\u306f\u6c17\u306b\u3057\u306a\u3044.\n\nTwStream.py\n# -*- encoding:utf-8 -*-\n\nimport sys\nimport os\nimport re\nimport time\nimport tweepy\n\nHERE = os.path.abspath(os.path.dirname(__file__))\n\nCK = ''\nCS = ''\nAT = ''\nAS = ''\n\nclass MyListener(tweepy.StreamListener):\n    def __init__(self):\n        super(MyListener, self).__init__()\n\n    def on_status(self, status):\n        try:\n            tw = status.text.strip()\n            # \u65e5\u672c\u8a9etweet\u306e\u307f\n            if re.search(u'[\u3041-\u3093\u30a1-\u30f3]', tw) is not None:\n                with open(HERE + '/stream.txt', 'a') as f:\n                    # tweet\u306b\u306f\u30bf\u30d6\u304c\u7121\u3044\u306e\u3067\u533a\u5207\u308a\u6587\u5b57\u306b\u4f7f\u3044\u307e\u3059\n                    f.write(tw.encode('utf-8') + '\\n\\t\\n')\n                print tw.encode('utf-8')\n        except tweepy.TweepError as e:\n            print e.reason\n            if  'u\\'code\\': 88' in e.reason:\n                print 'wait 15 min'\n                time.sleep(15*60)\n\n    def on_error(self, status_code):\n        print 'error ', status_code\n        if status_code == 420:\n            print 'wait 15 min'\n            time.sleep(15*60)\n        time.sleep(10)\n\n    def on_limit(self, status):\n        print 'limit'\n        time.sleep(10)\n\n    def on_timeout(self, status):\n        print 'timeout'\n        time.sleep(10)\n\nif __name__ == '__main__':\n    while True:\n        try:\n            auth = tweepy.OAuthHandler(CK, CS)\n            auth.set_access_token(AT, AS)\n            print 'auth set'\n\n            st = tweepy.Stream(auth, MyListener())\n            print 'sampling'\n            st.sample()\n\n        except tweepy.TweepError as e:\n            st.disconnect()\n            print e.reason\n            if 'u\\'code\\': 88' in e.reason:\n                print 'wait 15 min'\n                time.sleep(15*60)\n        except KeyboardInterrupt:\n            st.disconnect()\n            break\n        except:\n            st.disconnect()\n            continue\n\n\n\u3053\u3053\u3067'stream.txt'\u3092'raw.txt'\u306b\u30ea\u30cd\u30fc\u30e0.\n\nW2V.py\n# -*- encoding:utf-8 -*-\n\nimport sys\nimport os\nimport MeCab\nimport gensim\nfrom gensim.models import word2vec\n\n# \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nHERE = os.path.abspath(os.path.dirname(__file__))\nsys.path.append(HERE)\n\n# \u81ea\u4f5c\u30e2\u30b8\u30e5\u30fc\u30eb\nfrom MeCabRW import *\nfrom ProcStr import *\n\nif __name__ == '__main__':\n    MODEL = HERE + '/twitter.model'\n\n    try:\n        # \u30e2\u30c7\u30eb\u304c\u6709\u308c\u3070\u8aad\u307f\u8fbc\u3080\n        print 'loading model'\n        model = word2vec.Word2Vec.load(MODEL)\n        print 'model loaded'\n    except:\n        # \u7121\u3051\u308c\u3070\u4f5c\u6210\n        print 'model not loaded'\n        print 'creating model'\n        # mt = MeCab.Tagger('-Owakati')\u3067\u53ef\n        mt = mtWakatiNeo()\n        avoid = ['RT']\n        mecabParseRW(HERE + '/raw.txt', HERE + '/sep.txt', mt, avoid)\n\n        # \u5206\u304b\u3061\u66f8\u304d\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\n        corp = word2vec.Text8Corpus(HERE + '/sep.txt')\n        # \u30d5\u30ec\u30fc\u30ba\u5358\u4f4d\u3067\u89e3\u6790\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n        phrcorp = gensim.models.Phrases(corp)\n        model = word2vec.Word2Vec(phrcorp[corp], size=2000, min_count=2)\n        model.save(MODEL)\n\n        print 'creating done'\n\n    pos = [u'\u30b7\u30e7\u30bf', u'\u5973']\n    neg = [u'\u7537']\n\n    sim = model.most_similar(positive=pos, negative=neg)\n\n    print '+: ', ' '.join([i.encode('utf-8') for i in pos])\n    print '-: ', ' '.join([i.encode('utf-8') for i in neg])\n    print\n    for i, j in sim:\n        print i.encode('utf-8'), '\\t', j\n\n\n\nMeCabRW.py\n# -*- coding: utf-8 -*-\n\nimport re\nimport MeCab\n\ndef mtWakatiNeo():\n    opt = '-O wakati -d /usr/lib64/mecab/dic/mecab-ipadic-neologd'\n    return MeCab.Tagger(opt)\n\ndef mecabParseRW(pathIn, pathOut, mt, avoid=[]):\n    with open(pathIn, 'r') as f:\n        sIn = f.read()\n    # url\u3068@[id]\u9664\u53bb\n    sIn = re.sub('https?://[A-Za-z0-9/:%#\\$&\\?\\(\\)~\\.=\\+\\-]+', ' ', sIn)\n    sIn = re.sub('@[A-Za-z0-9_]+', ' ', sIn)\n    sOut = []\n    for i in sIn.split('\\n\\t\\n'):\n        if all([j not in i for j in avoid]):\n            p = mt.parse(i) # \u3053\u3053\u3067\u305f\u307e\u306bNone\u306b\u306a\u308b\u306e\u3067\n            if type(p) == str: # \u578b\u30c1\u30a7\u30c3\u30af\n                try:\n                    p.decode('utf-8')\n                    sOut.append(p)\n                except:\n                    continue\n    sOut = '\\n\\t\\n'.join(sOut)\n    with open(pathOut, 'w') as f:\n        f.write(sOut)\n    return sOut\n\n\n\n\u7d50\u679c\n60MB\u304f\u3089\u3044tweet\u3092\u96c6\u3081\u3066\u5b9f\u884c\nloading model\nmodel loaded\n+:  \u30b7\u30e7\u30bf \u5973\n-:  \u7537\n\n\u733f     0.833452105522\n\u30de\u30ab\u30ed\u30f3    0.832771897316\n\u30ed\u30ea  0.830695152283\n\u8912\u3081\u8a00\u8449    0.828270435333\n\u558b\u308a_\u65b9  0.825944542885\n\u6885\u539f  0.825801610947\n\u6709\u6c99  0.822319507599\n\u8ca7\u4e73  0.818123817444\n\u767e_\u5408     0.817329347134\n\u672c\u7530\u7ffc   0.816138386726\n\n\u826f\u3044\u611f\u3058\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b.\n\u9006\u306e\u5f0f\u3082\u540c\u3058\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f.\nloading model\nmodel loaded\n+:  \u30ed\u30ea \u7537\n-:  \u5973\n\n\u7d2b     0.847893893719\n\u767e_\u5408     0.824845731258\n\u30b7\u30e7\u30bf   0.82099032402\n\u30c9     0.81635427475\n\u3064\u3080\u304e   0.813044965267\n\u59eb     0.812274694443\n\u30d1\u30ed\u30c7\u30a3    0.809535622597\n\u30e2\u30d6  0.804774940014\n\u767d     0.802413225174\n\u9ed2\u9aea  0.800325155258\n\n\n\u3082\u308d\u3082\u308d\n\u672c\u5f53\u306fWindows + Python3\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c, \u6587\u5b57\u30b3\u30fc\u30c9\u3084\u65e2\u5b58\u8cc7\u6599\u306e\u95a2\u4fc2\u3067\u3053\u3046\u306a\u308a\u307e\u3057\u305f.\nPython3\u3057\u304b\u4f7f\u3063\u305f\u3053\u3068\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u65b9\u304c\u304a\u304b\u3057\u3044\u3068\u3053\u308d\u304c\u6709\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093.\n\n\u53c2\u8003\nhttp://docs.tweepy.org/en/v3.5.0/streaming_how_to.html\nhttps://radimrehurek.com/gensim/models/phrases.html#module-gensim.models.phrases\nhttp://tjo.hatenablog.com/entry/2014/06/19/233949\n# \u3084\u3063\u305f\u3053\u3068\ntweepy\u3067tweet\u3092\u4fdd\u5b58\u3057word2vec\u306b\u5165\u308c\u3066\u904a\u3076\n\u3044\u308d\u3093\u306a\u3068\u3053\u308d\u3092\u53c2\u8003\u306b\u3082\u3068\u3044\u30b3\u30d4\u30da\u3057\u3066\u3084\u3063\u305f\u306e\u3067\u65b0\u898f\u6027\u306f\u4f59\u308a\u6709\u308a\u307e\u305b\u3093.\n'\u30b7\u30e7\u30bf - \u7537 + \u5973 = \u30ed\u30ea'\u304c\u51fa\u308b\u3053\u3068\u3092\u4e00\u3064\u306e\u76ee\u6a19\u306b\u3057\u307e\u3057\u305f.\n\n#\u74b0\u5883\nCentOS7\nAnaconda2-4.1.0\n\n#\u524d\u63d0\ntweepy\nMeCab\nmecab-python\ngensim\n\n#\u30b3\u30fc\u30c9\n\n\u3068\u3053\u308d\u3069\u3053\u308d\u5197\u9577\u306a\u306e\u306f\u6c17\u306b\u3057\u306a\u3044.\n\n```Python:TwStream.py\n# -*- encoding:utf-8 -*-\n\nimport sys\nimport os\nimport re\nimport time\nimport tweepy\n\nHERE = os.path.abspath(os.path.dirname(__file__))\n\nCK = ''\nCS = ''\nAT = ''\nAS = ''\n\nclass MyListener(tweepy.StreamListener):\n\tdef __init__(self):\n\t\tsuper(MyListener, self).__init__()\n\n\tdef on_status(self, status):\n\t\ttry:\n\t\t\ttw = status.text.strip()\n\t\t\t# \u65e5\u672c\u8a9etweet\u306e\u307f\n\t\t\tif re.search(u'[\u3041-\u3093\u30a1-\u30f3]', tw) is not None:\n\t\t\t\twith open(HERE + '/stream.txt', 'a') as f:\n\t\t\t\t\t# tweet\u306b\u306f\u30bf\u30d6\u304c\u7121\u3044\u306e\u3067\u533a\u5207\u308a\u6587\u5b57\u306b\u4f7f\u3044\u307e\u3059\n\t\t\t\t\tf.write(tw.encode('utf-8') + '\\n\\t\\n')\n\t\t\t\tprint tw.encode('utf-8')\n\t\texcept tweepy.TweepError as e:\n\t\t\tprint e.reason\n\t\t\tif  'u\\'code\\': 88' in e.reason:\n\t\t\t\tprint 'wait 15 min'\n\t\t\t\ttime.sleep(15*60)\n\n\tdef on_error(self, status_code):\n\t\tprint 'error ', status_code\n\t\tif status_code == 420:\n\t\t\tprint 'wait 15 min'\n\t\t\ttime.sleep(15*60)\n\t\ttime.sleep(10)\n\n\tdef on_limit(self, status):\n\t\tprint 'limit'\n\t\ttime.sleep(10)\n\n\tdef on_timeout(self, status):\n\t\tprint 'timeout'\n\t\ttime.sleep(10)\n\nif __name__ == '__main__':\n\twhile True:\n\t\ttry:\n\t\t\tauth = tweepy.OAuthHandler(CK, CS)\n\t\t\tauth.set_access_token(AT, AS)\n\t\t\tprint 'auth set'\n\n\t\t\tst = tweepy.Stream(auth, MyListener())\n\t\t\tprint 'sampling'\n\t\t\tst.sample()\n\n\t\texcept tweepy.TweepError as e:\n\t\t\tst.disconnect()\n\t\t\tprint e.reason\n\t\t\tif 'u\\'code\\': 88' in e.reason:\n\t\t\t\tprint 'wait 15 min'\n\t\t\t\ttime.sleep(15*60)\n\t\texcept KeyboardInterrupt:\n\t\t\tst.disconnect()\n\t\t\tbreak\n\t\texcept:\n\t\t\tst.disconnect()\n\t\t\tcontinue\n```\n\n\u3053\u3053\u3067'stream.txt'\u3092'raw.txt'\u306b\u30ea\u30cd\u30fc\u30e0.\n\n```Python:W2V.py\n# -*- encoding:utf-8 -*-\n\nimport sys\nimport os\nimport MeCab\nimport gensim\nfrom gensim.models import word2vec\n\n# \u3053\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\nHERE = os.path.abspath(os.path.dirname(__file__))\nsys.path.append(HERE)\n\n# \u81ea\u4f5c\u30e2\u30b8\u30e5\u30fc\u30eb\nfrom MeCabRW import *\nfrom ProcStr import *\n\nif __name__ == '__main__':\n    MODEL = HERE + '/twitter.model'\n\n    try:\n        # \u30e2\u30c7\u30eb\u304c\u6709\u308c\u3070\u8aad\u307f\u8fbc\u3080\n        print 'loading model'\n        model = word2vec.Word2Vec.load(MODEL)\n        print 'model loaded'\n    except:\n        # \u7121\u3051\u308c\u3070\u4f5c\u6210\n        print 'model not loaded'\n        print 'creating model'\n        # mt = MeCab.Tagger('-Owakati')\u3067\u53ef\n        mt = mtWakatiNeo()\n        avoid = ['RT']\n        mecabParseRW(HERE + '/raw.txt', HERE + '/sep.txt', mt, avoid)\n\n        # \u5206\u304b\u3061\u66f8\u304d\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\n        corp = word2vec.Text8Corpus(HERE + '/sep.txt')\n        # \u30d5\u30ec\u30fc\u30ba\u5358\u4f4d\u3067\u89e3\u6790\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u307e\u3059\n        phrcorp = gensim.models.Phrases(corp)\n        model = word2vec.Word2Vec(phrcorp[corp], size=2000, min_count=2)\n        model.save(MODEL)\n\n        print 'creating done'\n\n    pos = [u'\u30b7\u30e7\u30bf', u'\u5973']\n    neg = [u'\u7537']\n\n    sim = model.most_similar(positive=pos, negative=neg)\n\n    print '+: ', ' '.join([i.encode('utf-8') for i in pos])\n    print '-: ', ' '.join([i.encode('utf-8') for i in neg])\n    print\n    for i, j in sim:\n        print i.encode('utf-8'), '\\t', j\n```\n\n```Python:MeCabRW.py\n# -*- coding: utf-8 -*-\n\nimport re\nimport MeCab\n\ndef mtWakatiNeo():\n    opt = '-O wakati -d /usr/lib64/mecab/dic/mecab-ipadic-neologd'\n    return MeCab.Tagger(opt)\n\ndef mecabParseRW(pathIn, pathOut, mt, avoid=[]):\n    with open(pathIn, 'r') as f:\n        sIn = f.read()\n    # url\u3068@[id]\u9664\u53bb\n    sIn = re.sub('https?://[A-Za-z0-9/:%#\\$&\\?\\(\\)~\\.=\\+\\-]+', ' ', sIn)\n    sIn = re.sub('@[A-Za-z0-9_]+', ' ', sIn)\n    sOut = []\n    for i in sIn.split('\\n\\t\\n'):\n        if all([j not in i for j in avoid]):\n            p = mt.parse(i) # \u3053\u3053\u3067\u305f\u307e\u306bNone\u306b\u306a\u308b\u306e\u3067\n            if type(p) == str: # \u578b\u30c1\u30a7\u30c3\u30af\n                try:\n                    p.decode('utf-8')\n                    sOut.append(p)\n                except:\n                    continue\n    sOut = '\\n\\t\\n'.join(sOut)\n    with open(pathOut, 'w') as f:\n        f.write(sOut)\n    return sOut\n```\n\n# \u7d50\u679c\n60MB\u304f\u3089\u3044tweet\u3092\u96c6\u3081\u3066\u5b9f\u884c\n\n```\u7aef\u672b\nloading model\nmodel loaded\n+:  \u30b7\u30e7\u30bf \u5973\n-:  \u7537\n\n\u733f \t0.833452105522\n\u30de\u30ab\u30ed\u30f3 \t0.832771897316\n\u30ed\u30ea \t0.830695152283\n\u8912\u3081\u8a00\u8449 \t0.828270435333\n\u558b\u308a_\u65b9 \t0.825944542885\n\u6885\u539f \t0.825801610947\n\u6709\u6c99 \t0.822319507599\n\u8ca7\u4e73 \t0.818123817444\n\u767e_\u5408 \t0.817329347134\n\u672c\u7530\u7ffc \t0.816138386726\n```\n\n\u826f\u3044\u611f\u3058\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b.\n\u9006\u306e\u5f0f\u3082\u540c\u3058\u611f\u3058\u306b\u306a\u308a\u307e\u3057\u305f.\n\n```\u7aef\u672b\nloading model\nmodel loaded\n+:  \u30ed\u30ea \u7537\n-:  \u5973\n\n\u7d2b \t0.847893893719\n\u767e_\u5408 \t0.824845731258\n\u30b7\u30e7\u30bf \t0.82099032402\n\u30c9 \t0.81635427475\n\u3064\u3080\u304e \t0.813044965267\n\u59eb \t0.812274694443\n\u30d1\u30ed\u30c7\u30a3 \t0.809535622597\n\u30e2\u30d6 \t0.804774940014\n\u767d \t0.802413225174\n\u9ed2\u9aea \t0.800325155258\n```\n\n# \u3082\u308d\u3082\u308d\n\u672c\u5f53\u306fWindows + Python3\u3067\u3084\u308a\u305f\u304b\u3063\u305f\u3093\u3067\u3059\u304c, \u6587\u5b57\u30b3\u30fc\u30c9\u3084\u65e2\u5b58\u8cc7\u6599\u306e\u95a2\u4fc2\u3067\u3053\u3046\u306a\u308a\u307e\u3057\u305f.\nPython3\u3057\u304b\u4f7f\u3063\u305f\u3053\u3068\u304c\u7121\u304b\u3063\u305f\u306e\u3067\u66f8\u304d\u65b9\u304c\u304a\u304b\u3057\u3044\u3068\u3053\u308d\u304c\u6709\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093.\n\n# \u53c2\u8003\nhttp://docs.tweepy.org/en/v3.5.0/streaming_how_to.html\nhttps://radimrehurek.com/gensim/models/phrases.html#module-gensim.models.phrases\nhttp://tjo.hatenablog.com/entry/2014/06/19/233949\n"}