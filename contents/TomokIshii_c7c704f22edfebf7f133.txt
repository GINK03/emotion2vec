{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30c7\u30fc\u30bf\u5206\u6790\u3067\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3089\u308c\u3066\u6700\u521d\u306b\u884c\u3046\u3053\u3068\u3068\u3057\u3066\uff0c\u6982\u7565\u306e\u5185\u5bb9\u628a\u63e1\u304c\u3042\u308b\uff0e\u30c7\u30fc\u30bf\u3092\u8868\u306e\u5f62\u306b\u3057\u3066\uff0c\u7279\u5fb4\u91cf\u306f\u4f55\u304b\uff0c\u30c7\u30fc\u30bf\u306e\u30bf\u30a4\u30d7\u306f\u4f55\u304b\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\uff0e\u3053\u308c\u3068\u540c\u6642\u306b\u884c\u3046\u4f5c\u696d\u304c\uff0c\u6b20\u640d\u5024\u306b\u3064\u3044\u3066\u306e\u8abf\u67fb\u3067\u3042\u308b\uff0e\u30c7\u30fc\u30bf\u6b20\u640d\u306e\u6709\u7121\u306f\uff0c\u30c7\u30fc\u30bf\u64cd\u4f5c\u306b\u5f71\u97ff\u3092\u53ca\u307c\u3059\u306e\u3067\u307e\u305a\u6709\u7121\u3092\u78ba\u8a8d\u3057\uff0c\u3055\u3089\u306b\u6b20\u640d\u5024\u306e\u983b\u5ea6\u3092\u307f\u308b\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u3053\u306e\u4f5c\u696d\u306b\u3064\u3044\u3066\uff0cPython\u3068R\u3067\u3069\u306e\u3088\u3046\u306b\u884c\u3046\u304b\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u3066\u3044\u304f\uff0e\n\uff08\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u74b0\u5883\u306f\uff0cJupyter Notebook + Python 3.5.2 \u304a\u3088\u3073 Jupyter Notebook + IRkernel  (R 3.2.3) \u306b\u306a\u308a\u307e\u3059\uff0e\uff09\n\nPython\u3067\u306e\u30c7\u30fc\u30bf\u6b20\u640d\u72b6\u6cc1\u78ba\u8a8d\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3057\u3066\uff0cKaggle\u304c\u63d0\u4f9b\u3059\u308b\"Titanic\"\u3092\u7528\u3044\u308b\u3053\u3068\u3068\u3057\u305f\uff0e\u30c7\u30fc\u30bf\u3092\u898b\u305f\u65b9\u3082\u591a\u3044\u3068\u601d\u308f\u308c\u308b\u304c\uff0c\u3053\u308c\u306f\uff0c\u4e57\u5ba2\u306e\u7279\u5fb4\u91cf\u304b\u3089\u300c\u751f\u5b58\u3057\u305f\u300d/\u300c\u751f\u5b58\u3067\u304d\u306a\u304b\u3063\u305f\u300d\u3092\u5206\u985e\u3059\u308b\u3082\u306e\u3067\u3042\u308b\uff0e\u5f8c\u8ff0\u306e\u3088\u3046\u306b\uff0c\u6b20\u640d\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3042\u308b\uff0e\n\u307e\u305a\uff0cPython\u3067pandas DataFrame\u306b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff0e\ndef load_data(fn1='./data/train.csv', fn2='./data/test.csv'):\n    train = pd.read_csv(fn1)\n    test = pd.read_csv(fn2)\n\n    return train, test\n\ntrain, test = load_data()\ntrain.head()\n\n\ntrain.csv\n\n\u4e0a\u56f3\u306e\u3088\u3046\u306b\uff0c\u30c7\u30fc\u30bf\u306e\u6700\u521d\u306e\uff15\u884c\uff0cCabin\u306e\u30ab\u30e9\u30e0\u306b\u3059\u3067\u306b'NaN'\u306e\u8868\u793a\u304c\u898b\u3066\u53d6\u308c\u308b\uff0e\u540c\u69d8\u306b test.csv \u306b\u3064\u3044\u3066\u3082\u898b\u3066\u307f\u308b\uff0e\ntest.csv\n\n\u540c\u69d8\u306bCabin\u306b'NaN'\u304c\u4e26\u3093\u3067\u3044\u308b\u306e\u304c\u5206\u304b\u3063\u305f\uff0e\u56e0\u307f\u306b\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba(shape)\u306f\uff0ctrain\u304c (891, 12)\uff0ctest\u304c (418, 11) \u3067\u3042\u308b\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3057\u3066\u305d\u308c\u307b\u3069\u5927\u304d\u304f\u306f\u306a\u3044\uff0e\n\u6b21\u306b\u3069\u306e\u7279\u5fb4\u91cf\uff08\u30ab\u30e9\u30e0\uff09\u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u308b\uff0e\n# check if NA exists in each column\ntrain.isnull().any(axis=0)\n\n# output\n'''\nPassengerId    False\nSurvived       False\nPclass         False\nName           False\nSex            False\nAge             True\nSibSp          False\nParch          False\nTicket         False\nFare           False\nCabin           True\nEmbarked        True\ndtype: bool\n'''\n\n\nisnull() \u306f NA\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\uff0cany() \u306f\u8907\u6570\u7b87\u6240\u3092\u5305\u62ec\u7684\u306b\u307f\u3066\u771f\u507d\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\uff0eany() \u306f\uff0caxis\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u53d6\u308b\u306e\u3067\uff0c\"\u30ab\u30e9\u30e0\"\u5358\u4f4d\u3067\u304f\u304f\u308a\u305f\u3044\uff08\uff1d\"\u884c\"\u65b9\u5411\u306bscan\u3057\u305f\u3044\uff09\u5834\u5408\u306f\uff0caxis=0 \uff08\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u306e\u3067\u7701\u7565\u53ef\uff09\u3068\u3059\u308b\uff0e\u540c\u69d8\u306b\uff0ctest \u306e\u65b9\u3082\u898b\u3066\u307f\u308b\uff0e\n# check if NA exists in each column\ntest.isnull().any()\n\n# output\n'''\nPassengerId    False\nPclass         False\nName           False\nSex            False\nAge             True\nSibSp          False\nParch          False\nTicket         False\nFare            True\nCabin           True\nEmbarked       False\ndtype: bool\n'''\n\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff0ctrain\u30c7\u30fc\u30bf\u3067\u306f ['Age', 'Cabin', 'Embarked'] \u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\uff0ctest\u30c7\u30fc\u30bf\u3067\u306f ['Age', 'Fare', 'Cabin'] \u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\uff0e\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u300c\u76ee\u7684\u306e\u5206\u985e\u5668(classifier)\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\uff0c\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u3042\u308b\u7279\u5fb4\u91cf('Age', 'Fare', 'Cabin', 'Embarked') \u3092\u7528\u3044\u306a\u3044\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u304b\u300d\u3068\u304b\uff0c\u300c\u3067\u3082'Age'\uff08\u5e74\u9f62\uff09\u306f\u3044\u304b\u306b\u3082\u5206\u985e\uff08\u751f\u5b58 or not\uff09\u306b\u5f71\u97ff\u3057\u305d\u3046\u3060\u3088\u306a\u300d\u306a\u3069\u3068\u8003\u3048\u306a\u304c\u3089\u4f5c\u6226\u3092\u305f\u3066\u308b\u3053\u3068\u306b\u306a\u308b\uff0e\n\u6b21\u306b\u30c7\u30fc\u30bf\u6b20\u640d\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\uff0e\u307e\u305atrain\u30c7\u30fc\u30bf\uff0e\n# count NA samples\ntrain.isnull().sum()\n\n# output\n'''\nPassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64\n'''\n\n\n\u540c\u69d8\u306btest\u30c7\u30fc\u30bf\uff0e\n# count NA samples\ntest.isnull().sum()\n\n# output\n'''\nPassengerId      0\nPclass           0\nName             0\nSex              0\nAge             86\nSibSp            0\nParch            0\nTicket           0\nFare             1\nCabin          327\nEmbarked         0\ndtype: int64\n'''\n\n\n\u4e0a\u306e\u7d50\u679c\u304b\u3089\uff0c\u6b21\u306e\u70b9\u304c\u628a\u63e1\u3067\u304d\u305f\uff0e\n\n'Age' \u306f\uff0ctrain\u3082test\u3082\u4e00\u5b9a\u306e\u5272\u5408\u3067\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u3066\u3044\u308b\uff0e\n'Cabin'\u306f\uff0ctrain/test\u3067\u5927\u304d\u306a\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u3042\u308b\uff0e\n'Embarked' \u306f\uff0ctrain\u306e\u307f\u3067\uff12\u4ef6\u306e\u6b20\u640d\uff0e\n'Fare' \u306f\uff0ctest\u3067\u305f\u3063\u305f\u3044\uff11\u4ef6\u306e\u6b20\u640d\uff0e\n\n\u30c7\u30fc\u30bf\u5206\u985e\u306e\u9032\u3081\u65b9\u3068\u3057\u3066\uff0c\u300c\u3068\u308a\u3042\u3048\u305a\u2019Cabin'\u306f\uff0c\u7279\u5fb4\u91cf\u304b\u3089\u5916\u3057\u3066\u30e2\u30c7\u30eb\u5316\u3057\u3088\u3046\uff01\u300d\uff0c\u300c\u2019Embarked'\u306f\uff0c2\u4ef6\u306a\u306e\u3067dropna() \u3059\u308b\u300d\u306a\u3069\u3068\u65b9\u91dd\u3092\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\nR\u3067\u306e\u30c7\u30fc\u30bf\u6b20\u640d\u72b6\u6cc1\u78ba\u8a8d\nPython\u3067\u3084\u3063\u305f\u540c\u3058\u3053\u3068\u3092R\u3067\u3084\u3063\u3066\u307f\u308b\uff0e\u307e\u305adata frame\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\uff0e\n# Reread not to conver sting to factor\ntrain <- read.csv(\"./data/train.csv\", header=T, stringsAsFactors=F)\ntest <- read.csv(\"./data/test.csv\", header=T, stringsAsFactors=F)\n\n\nheader\u306f\uff0c\u30d8\u30c3\u30c0\u884c\u306e\u6271\u3044\u3092\u6307\u5b9a\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\uff0cstringsAsFactors\u306f\uff0c\u6587\u5b57\u5217\u304b\u3089\u56e0\u5b50\u578b(factor)\u3078\u5909\u63db\u3059\u308b/\u3057\u306a\u3044\u3092\u6307\u5b9a\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\uff0e\u4e0a\u8a18\u3067\u30d5\u30a1\u30a4\u30eb\u5165\u529b\u3059\u308b\u3068\uff0ctrain\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\ntrain.csv\n\nID=6\u306e'Moran, Mr. James'\u3055\u3093\u306e\u5e74\u9f62\u304c\uff0c'NA\u2019\u3068\u306a\u3063\u3066\u3044\u308b\uff0e\n\u6b21\u306b\u5404\u30ab\u30e9\u30e0\u306e\u6b20\u640d\u5024\u306e\u6709\u7121\u3092\u78ba\u8a8d\u3059\u308b\uff0e\n# any() usage\uff1a\nis_na_train <- sapply(train, function(y) any(is.na(y)))\nis_na_test <- sapply(test, function(y) any(is.na(y)))\n\n\n\u3053\u3053\u3067\u306fany()\u304c\u4f7f\u308f\u308c\u308b\u306e\u306f\uff0cPython\u3068\u540c\u69d8\u3067\u3042\u308b\uff0e\u6b21\u306b\u6b20\u640d\u5024\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\uff0e\n# count na\nna_count_train <- sapply(train, function(y) sum(is.na(y)))\nna_count_train\n\n# output\n# PassengerId   0\n# Survived      0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age         177\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          0\n# Cabin         0\n# Embarked      0\n\n\n\u304a\u5206\u304b\u308a\u3060\u308d\u3046\u304b\uff1f\u4e0a\u3067Python\u306b\u3088\u308a\u6c42\u3081\u305f\u7d50\u679c\u3068\u7570\u306a\u3063\u3066\u3044\u308b\uff0e\u540c\u69d8\u306btest\u30c7\u30fc\u30bf\u3082\u898b\u3066\u307f\u308b\uff0e\n# count na\nna_count_test <- sapply(test, function(y) sum(is.na(y)))\n\n# output\n# PassengerId   0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age          86\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          1\n# Cabin         0\n# Embarked      0\n\n\n\u3053\u3061\u3089\u3082Python\u3067\u6c42\u3081\u305fNA\u306e\u500b\u6570\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff08\u7279\u306b'Cabin'\u3067\uff09\u5927\u5e45\u306b\u6e1b\u3063\u3066\u3044\u308b\uff0e\u4f55\u6545\u304b\uff1f\n\u5b9f\u306f\u3053\u306e\u5dee(Python vs. R) \u304c\u751f\u3058\u305f\u7406\u7531\u306f\uff0c\u7a7a\u767d(\"\", blank)\u306e\u6271\u3044\u65b9\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u3042\u308b\uff0e\ntrain.csv\n\n\uff08Python\u3067\u306f\u8aad\u307f\u8fbc\u307f\u6642\u306b\uff0c\u3059\u3067\u306b\u8d64\u67a0\u5185\u304cNaN\u3068\u306a\u3063\u3066\u3044\u305f\uff0e\uff09\nPython pandas \u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b isnull() \u95a2\u6570\u306f\u7a7a\u767d(\"\")\u3082null\u3068\u5224\u5225\u3059\u308b\u306e\u306b\u5bfe\u3057\uff0c\nR\u306e is.na() \u306f\uff0c\u7a7a\u767d\u3092na\u306b\u5165\u308c\u306a\u3044\uff0e\u3053\u308c\u304c\u539f\u56e0\u3067na\u306e\u30ab\u30a6\u30f3\u30c8\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b\uff0e\n\u4eca\u56de\uff0cTitanic\u306e'Cabin\u2019\u306f\u8239\u5ba4\u306eID\u3092\u793a\u3059\u30c7\u30fc\u30bf\u3067\u3042\u308b\u306e\u3067\uff0c\u300c\u7a7a\u767d\u300d\u306f\uff08\u63a8\u6e2c\u306b\u306a\u308b\u304c\uff09\u8a18\u9332\u304c\u306a\u3044\u3053\u3068\u304c\u7406\u7531\u3060\u308d\u3046\uff0e\u307e\u305f\uff0c\u7a7a\u767d\u306b\u3064\u3044\u3066\u306f\u30c7\u30fc\u30bf\u5206\u6790\u306e\u30d5\u30ed\u30fc\u3092\uff08'Cabin'\u30c7\u30fc\u30bf\u6709\u306e\u51e6\u7406\u304b\u3089\uff09\u5206\u3051\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u305f\u3081\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u7a7a\u767d\u3092NA\u306b\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u307b\u3046\u304c\u597d\u307e\u3057\u3044\uff0e\u305d\u3053\u3067\uff0cPython\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u7a7a\u767d(\"\")\u3092NA\u3068\u3057\u3066\u6271\u3046\u3088\u3046\u306aR\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u5909\u66f4\u3059\u308b\uff0e\n# Reread data with na.string option\ntrain <- read.csv(\"./data/train.csv\", header=T, stringsAsFactors=F, \n    na.strings=(c(\"NA\", \"\")))\ntest <- read.csv(\"./data/test.csv\", header=T, stringsAsFactors=F,\n    na.strings=(c(\"NA\", \"\")))\n\n\nread.csv() \u306e na.strings \u30aa\u30d7\u30b7\u30e7\u30f3\u3092 na.strings=(c(\"NA\", \"\")) \u3068\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\uff0c\u7a7a\u767d(\"\")\u3092NA\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\uff0e\u3053\u306e\u5f8c\uff0cNA\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u884c\u3063\u305f\u306e\u304c\uff0c\u4ee5\u4e0b\uff0e\n# Counting NA\nna_count_train <- sapply(train, function(y) sum(is.na(y)))\nna_count_test <- sapply(test, function(y) sum(is.na(y)))\n\n\n\u51fa\u529b\u7d50\u679c\uff1a\n# --- Train dataset ---\n# PassengerId   0\n# Survived      0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age         177\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          0\n# Cabin       687\n# Embarked      2\n\n# --- Test dataset ---\n# PassengerId   0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age          86\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          1\n# Cabin       327\n# Embarked      0\n\n\n\u3053\u308c\u3067Python\u7d50\u679c\u3068\u4e00\u81f4\u3057\u305f\uff0e\u3053\u306e\u3088\u3046\u306bNA\u306e\u5b9a\u7fa9\u304cPython(pandas) \u3068R\u3067\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u305f\uff0e\u6bd4\u8f03\u3068\u3057\u3066\u306f\uff0cR\u306e\u65b9\u304c\uff0cnull/NaN/NA \u306e\u533a\u5206\u3092\u53b3\u5bc6\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\uff0epandas\u3067\u306f\uff0cisnull()\u3067blank/NA/NaN\u3092\u3059\u3079\u3066NA\u3068\u5224\u5b9a\u3059\u308b\u304c\uff0c\u305d\u306e\u3053\u3068\u81ea\u4f53\u306f\u5b9f\u7528\u4e0a\u554f\u984c\u306a\u3057\u3068\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\uff0e\uff08\u60aa\u304f\u8a00\u3046\u3068 pandas\u306e\u6271\u3044\u306f\u300c\u3042\u3044\u307e\u3044\u300d\uff0e\uff09\n\u4ee5\u4e0b\uff0cPython pandas\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08 http://pandas.pydata.org/pandas-docs/version/0.18.1/missing_data.html \uff09\u304b\u3089\u5f15\u7528\u3059\u308b\uff0e\n\nNote: The choice of using NaN internally to denote missing data was largely for simplicity and performance reasons. It differs from the MaskedArray approach of, for example, scikits.timeseries. We are hopeful that NumPy will soon be able to provide a native NA type solution (similar to R) performant enough to be used in pandas.\n\n\u7a7a\u767d(blank) \u306e\u3053\u3068\u306f\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u304c\uff0cpandas\u3067\u306f\uff0c\u5358\u7d14\u3055\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8003\u3048\u3066\u4eca\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3068\u3057\u3066\u3044\u308b\u3068\u3042\u308b\uff0e\u79c1\u81ea\u8eab\uff0cNA\u30c7\u30fc\u30bf\u3092\u53b3\u5bc6\u306bblank/NA/NaN\u306b\u5206\u3051\u306a\u308c\u3070\u306a\u3089\u306a\u3044\u30b1\u30fc\u30b9\u306b\u51fa\u4f1a\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\uff0c\u672c\u8a18\u4e8b\u306b\u66f8\u3044\u305fPython\u3067\u306e\u6271\u3044\u65b9\uff08R\u3067\u3042\u308c\u3070\uff0cblank\u3092NA\u306b\u5909\u63db\u3059\u308b\u3084\u308a\u65b9\uff09\u3092\u899a\u3048\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3046\uff0e\n\uff08\u53c2\u8003\u307e\u3067\u306b\uff0cBlank\u304b\u3089NA\u3078\u306e\u5909\u63db\u3067\u3059\u304c\uff0cR\u30d1\u30c3\u30b1\u30fc\u30b8 {data.table} \u306efread()\u3067\u3082\u540c\u69d8\u306e\u30aa\u30d7\u30b7\u30e7\u30f3(na.strings)\u3067\uff0c\u5909\u63db\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\uff09\n\n\u6700\u5f8c\u306b\nKaggle Titanic\u306f\uff0cKaggle\u306eTutorial\u7684\u306a\u30b3\u30f3\u30da\u3067\u3042\u308b\u304c\uff0cLeader Board\u3092\u898b\u308b\u3068\uff0c\u512a\u79c0\u306a\u3082\u306e\u304b\u3089\u5e73\u51e1\u306a\u3082\u306e\u307e\u3067\u30b9\u30b3\u30a2\u306e\u3070\u3089\u3064\u304d\u304c\u5927\u304d\u3044\uff0e\u3053\u3053\u3067\u30b9\u30b3\u30a2\u3092\u4e0a\u3052\u308b\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u3064\u306f\uff0c\u5206\u985e\u5668\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u3067\u3042\u308a\uff0c\u3082\u3046\u4e00\u3064\u306f\u30c7\u30fc\u30bf\u306e\u6b20\u640d\u5024\uff0c\u7279\u306b 'Age' \u306e\u6b20\u640d\u3092\u88dc\u9593\u3059\u308b\u65b9\u6cd5\u306b\u3042\u308b\u3068\u63a8\u5b9a\u3055\u308c\u308b\uff0e\u73fe\u6642\u70b9\u3067\u307e\u3060\u671f\u9650(12/31/2016)\u307e\u3067\u306b\u65e5\u306b\u3061\u304c\u3042\u308b\u306e\u3067\uff0c\u6a5f\u4f1a\u3092\u307f\u3066Titanic\u306e\u30b3\u30f3\u30da\u306b\u518d\u30c8\u30e9\u30a4\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3046\uff0e\uff08Top\u30b0\u30eb\u30fc\u30d7\u306f\uff0c\u6b63\u7b54\u7387(accuracy) 1.0 \u3092\u9054\u6210\u3057\u3066\u3044\u308b\uff0c\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046... \uff09\n\n\u53c2\u8003\u6587\u732e / Web site\n\nPandas documentation, Working with missing data\nhttp://pandas.pydata.org/pandas-docs/version/0.18.1/missing_data.html\n\nPython pandas: check if any value is NaN in DataFrame - Stack overflow\nhttp://stackoverflow.com/questions/29530232/python-pandas-check-if-any-value-is-nan-in-dataframe\n\nPython pandas \u6b20\u640d\u5024/\u5916\u308c\u5024/\u96e2\u6563\u5316\u306e\u51e6\u7406 - Blog \"StatsFragments\"\nhttp://sinhrks.hatenablog.com/entry/2016/02/01/080859\n\n\u30c7\u30fc\u30bf\u306b\u6b20\u640d\u5024(NaN)\u304c\u3042\u308b\u5834\u5408\u306e\u53d6\u308a\u6271\u3044 - Qiita\nhttp://qiita.com/gash717/items/df8aa9c7e771ed7539cb\n\nTitanic: Machine Learning from Disaster - Kaggle\nhttps://www.kaggle.com/c/titanic\n\n\n\n## \u306f\u3058\u3081\u306b\n\n\u30c7\u30fc\u30bf\u5206\u6790\u3067\u30c7\u30fc\u30bf\u3092\u4e0e\u3048\u3089\u308c\u3066\u6700\u521d\u306b\u884c\u3046\u3053\u3068\u3068\u3057\u3066\uff0c\u6982\u7565\u306e\u5185\u5bb9\u628a\u63e1\u304c\u3042\u308b\uff0e\u30c7\u30fc\u30bf\u3092\u8868\u306e\u5f62\u306b\u3057\u3066\uff0c\u7279\u5fb4\u91cf\u306f\u4f55\u304b\uff0c\u30c7\u30fc\u30bf\u306e\u30bf\u30a4\u30d7\u306f\u4f55\u304b\u3092\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\uff0e\u3053\u308c\u3068\u540c\u6642\u306b\u884c\u3046\u4f5c\u696d\u304c\uff0c\u6b20\u640d\u5024\u306b\u3064\u3044\u3066\u306e\u8abf\u67fb\u3067\u3042\u308b\uff0e\u30c7\u30fc\u30bf\u6b20\u640d\u306e\u6709\u7121\u306f\uff0c\u30c7\u30fc\u30bf\u64cd\u4f5c\u306b\u5f71\u97ff\u3092\u53ca\u307c\u3059\u306e\u3067\u307e\u305a\u6709\u7121\u3092\u78ba\u8a8d\u3057\uff0c\u3055\u3089\u306b\u6b20\u640d\u5024\u306e\u983b\u5ea6\u3092\u307f\u308b\uff0e\u672c\u8a18\u4e8b\u3067\u306f\uff0c\u3053\u306e\u4f5c\u696d\u306b\u3064\u3044\u3066\uff0cPython\u3068R\u3067\u3069\u306e\u3088\u3046\u306b\u884c\u3046\u304b\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u3066\u3044\u304f\uff0e\n\n\uff08\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u74b0\u5883\u306f\uff0cJupyter Notebook + Python 3.5.2 \u304a\u3088\u3073 Jupyter Notebook + IRkernel  (R 3.2.3) \u306b\u306a\u308a\u307e\u3059\uff0e\uff09\n\n## Python\u3067\u306e\u30c7\u30fc\u30bf\u6b20\u640d\u72b6\u6cc1\u78ba\u8a8d\n\n\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3057\u3066\uff0cKaggle\u304c\u63d0\u4f9b\u3059\u308b\"Titanic\"\u3092\u7528\u3044\u308b\u3053\u3068\u3068\u3057\u305f\uff0e\u30c7\u30fc\u30bf\u3092\u898b\u305f\u65b9\u3082\u591a\u3044\u3068\u601d\u308f\u308c\u308b\u304c\uff0c\u3053\u308c\u306f\uff0c\u4e57\u5ba2\u306e\u7279\u5fb4\u91cf\u304b\u3089\u300c\u751f\u5b58\u3057\u305f\u300d/\u300c\u751f\u5b58\u3067\u304d\u306a\u304b\u3063\u305f\u300d\u3092\u5206\u985e\u3059\u308b\u3082\u306e\u3067\u3042\u308b\uff0e\u5f8c\u8ff0\u306e\u3088\u3046\u306b\uff0c\u6b20\u640d\u5024\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3067\u3042\u308b\uff0e\n\n\u307e\u305a\uff0cPython\u3067pandas DataFrame\u306b\u30c7\u30fc\u30bf\u3092\u8aad\u307f\u8fbc\u3080\uff0e\n\n```py\ndef load_data(fn1='./data/train.csv', fn2='./data/test.csv'):\n    train = pd.read_csv(fn1)\n    test = pd.read_csv(fn2)\n    \n    return train, test\n\ntrain, test = load_data()\ntrain.head()\n\n```\n\n**train.csv**\n![titanic_fig1.png](https://qiita-image-store.s3.amazonaws.com/0/74152/8fdca574-a55c-5e37-99b2-d5301a2b169a.png)\n\n\u4e0a\u56f3\u306e\u3088\u3046\u306b\uff0c\u30c7\u30fc\u30bf\u306e\u6700\u521d\u306e\uff15\u884c\uff0cCabin\u306e\u30ab\u30e9\u30e0\u306b\u3059\u3067\u306b'NaN'\u306e\u8868\u793a\u304c\u898b\u3066\u53d6\u308c\u308b\uff0e\u540c\u69d8\u306b test.csv \u306b\u3064\u3044\u3066\u3082\u898b\u3066\u307f\u308b\uff0e\n\n**test.csv**\n![titanic_fig2.png](https://qiita-image-store.s3.amazonaws.com/0/74152/9d16218a-08e7-4570-b6c7-f4bc9ff2008e.png)\n\n\u540c\u69d8\u306bCabin\u306b'NaN'\u304c\u4e26\u3093\u3067\u3044\u308b\u306e\u304c\u5206\u304b\u3063\u305f\uff0e\u56e0\u307f\u306b\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba(shape)\u306f\uff0ctrain\u304c (891, 12)\uff0ctest\u304c (418, 11) \u3067\u3042\u308b\u306e\u3067\uff0c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3068\u3057\u3066\u305d\u308c\u307b\u3069\u5927\u304d\u304f\u306f\u306a\u3044\uff0e\n\n\u6b21\u306b\u3069\u306e\u7279\u5fb4\u91cf\uff08\u30ab\u30e9\u30e0\uff09\u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u308b\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u307f\u308b\uff0e\n\n```py\n# check if NA exists in each column\ntrain.isnull().any(axis=0)\n\n# output\n'''\nPassengerId    False\nSurvived       False\nPclass         False\nName           False\nSex            False\nAge             True\nSibSp          False\nParch          False\nTicket         False\nFare           False\nCabin           True\nEmbarked        True\ndtype: bool\n'''\n\n```\n\nisnull() \u306f NA\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\uff0cany() \u306f\u8907\u6570\u7b87\u6240\u3092\u5305\u62ec\u7684\u306b\u307f\u3066\u771f\u507d\u3092\u8fd4\u3059\u95a2\u6570\u3067\u3042\u308b\uff0eany() \u306f\uff0caxis\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u53d6\u308b\u306e\u3067\uff0c\"\u30ab\u30e9\u30e0\"\u5358\u4f4d\u3067\u304f\u304f\u308a\u305f\u3044\uff08\uff1d\"\u884c\"\u65b9\u5411\u306bscan\u3057\u305f\u3044\uff09\u5834\u5408\u306f\uff0caxis=0 \uff08\u30c7\u30a3\u30d5\u30a9\u30eb\u30c8\u5024\u306a\u306e\u3067\u7701\u7565\u53ef\uff09\u3068\u3059\u308b\uff0e\u540c\u69d8\u306b\uff0ctest \u306e\u65b9\u3082\u898b\u3066\u307f\u308b\uff0e\n\n```py\n# check if NA exists in each column\ntest.isnull().any()\n\n# output\n'''\nPassengerId    False\nPclass         False\nName           False\nSex            False\nAge             True\nSibSp          False\nParch          False\nTicket         False\nFare            True\nCabin           True\nEmbarked       False\ndtype: bool\n'''\n\n```\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306b\uff0ctrain\u30c7\u30fc\u30bf\u3067\u306f ['Age', 'Cabin', 'Embarked'] \u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\uff0ctest\u30c7\u30fc\u30bf\u3067\u306f ['Age', 'Fare', 'Cabin'] \u306b\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u305f\uff0e\u3053\u308c\u3092\u8e0f\u307e\u3048\u3066\u300c\u76ee\u7684\u306e\u5206\u985e\u5668(classifier)\u306e\u30d7\u30ed\u30c8\u30bf\u30a4\u30d7\u3068\u3057\u3066\uff0c\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u3042\u308b\u7279\u5fb4\u91cf('Age', 'Fare', 'Cabin', 'Embarked') \u3092\u7528\u3044\u306a\u3044\u30e2\u30c7\u30eb\u3092\u4f5c\u3063\u3066\u307f\u3088\u3046\u304b\u300d\u3068\u304b\uff0c\u300c\u3067\u3082'Age'\uff08\u5e74\u9f62\uff09\u306f\u3044\u304b\u306b\u3082\u5206\u985e\uff08\u751f\u5b58 or not\uff09\u306b\u5f71\u97ff\u3057\u305d\u3046\u3060\u3088\u306a\u300d\u306a\u3069\u3068\u8003\u3048\u306a\u304c\u3089\u4f5c\u6226\u3092\u305f\u3066\u308b\u3053\u3068\u306b\u306a\u308b\uff0e\n\n\u6b21\u306b\u30c7\u30fc\u30bf\u6b20\u640d\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\uff0e\u307e\u305atrain\u30c7\u30fc\u30bf\uff0e\n\n```py\n# count NA samples\ntrain.isnull().sum()\n\n# output\n'''\nPassengerId      0\nSurvived         0\nPclass           0\nName             0\nSex              0\nAge            177\nSibSp            0\nParch            0\nTicket           0\nFare             0\nCabin          687\nEmbarked         2\ndtype: int64\n'''\n\n```\n\n\u540c\u69d8\u306btest\u30c7\u30fc\u30bf\uff0e\n\n```py\n# count NA samples\ntest.isnull().sum()\n\n# output\n'''\nPassengerId      0\nPclass           0\nName             0\nSex              0\nAge             86\nSibSp            0\nParch            0\nTicket           0\nFare             1\nCabin          327\nEmbarked         0\ndtype: int64\n'''\n\n```\n\n\u4e0a\u306e\u7d50\u679c\u304b\u3089\uff0c\u6b21\u306e\u70b9\u304c\u628a\u63e1\u3067\u304d\u305f\uff0e\n\n- 'Age' \u306f\uff0ctrain\u3082test\u3082\u4e00\u5b9a\u306e\u5272\u5408\u3067\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u542b\u307e\u308c\u3066\u3044\u308b\uff0e\n- 'Cabin'\u306f\uff0ctrain/test\u3067\u5927\u304d\u306a\u30c7\u30fc\u30bf\u6b20\u640d\u304c\u3042\u308b\uff0e\n- 'Embarked' \u306f\uff0ctrain\u306e\u307f\u3067\uff12\u4ef6\u306e\u6b20\u640d\uff0e\n- 'Fare' \u306f\uff0ctest\u3067\u305f\u3063\u305f\u3044\uff11\u4ef6\u306e\u6b20\u640d\uff0e\n\n\u30c7\u30fc\u30bf\u5206\u985e\u306e\u9032\u3081\u65b9\u3068\u3057\u3066\uff0c\u300c\u3068\u308a\u3042\u3048\u305a\u2019Cabin'\u306f\uff0c\u7279\u5fb4\u91cf\u304b\u3089\u5916\u3057\u3066\u30e2\u30c7\u30eb\u5316\u3057\u3088\u3046\uff01\u300d\uff0c\u300c\u2019Embarked'\u306f\uff0c2\u4ef6\u306a\u306e\u3067dropna() \u3059\u308b\u300d\u306a\u3069\u3068\u65b9\u91dd\u3092\u6c7a\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n## R\u3067\u306e\u30c7\u30fc\u30bf\u6b20\u640d\u72b6\u6cc1\u78ba\u8a8d\n\nPython\u3067\u3084\u3063\u305f\u540c\u3058\u3053\u3068\u3092R\u3067\u3084\u3063\u3066\u307f\u308b\uff0e\u307e\u305adata frame\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3080\uff0e\n\n```R\n# Reread not to conver sting to factor\ntrain <- read.csv(\"./data/train.csv\", header=T, stringsAsFactors=F)\ntest <- read.csv(\"./data/test.csv\", header=T, stringsAsFactors=F)\n\n```\n\n`header`\u306f\uff0c\u30d8\u30c3\u30c0\u884c\u306e\u6271\u3044\u3092\u6307\u5b9a\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\uff0c`stringsAsFactors`\u306f\uff0c\u6587\u5b57\u5217\u304b\u3089\u56e0\u5b50\u578b(factor)\u3078\u5909\u63db\u3059\u308b/\u3057\u306a\u3044\u3092\u6307\u5b9a\u3059\u308b\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3042\u308b\uff0e\u4e0a\u8a18\u3067\u30d5\u30a1\u30a4\u30eb\u5165\u529b\u3059\u308b\u3068\uff0ctrain\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\uff0e\n\n**train.csv**\n![titanic_fig3.png](https://qiita-image-store.s3.amazonaws.com/0/74152/184e6cbe-bef1-7c81-540d-aec522bd0a21.png)\n\nID=6\u306e'Moran, Mr. James'\u3055\u3093\u306e\u5e74\u9f62\u304c\uff0c'NA\u2019\u3068\u306a\u3063\u3066\u3044\u308b\uff0e\n\u6b21\u306b\u5404\u30ab\u30e9\u30e0\u306e\u6b20\u640d\u5024\u306e\u6709\u7121\u3092\u78ba\u8a8d\u3059\u308b\uff0e\n\n```R\n# any() usage\uff1a\nis_na_train <- sapply(train, function(y) any(is.na(y)))\nis_na_test <- sapply(test, function(y) any(is.na(y)))\n\n```\n\n\u3053\u3053\u3067\u306fany()\u304c\u4f7f\u308f\u308c\u308b\u306e\u306f\uff0cPython\u3068\u540c\u69d8\u3067\u3042\u308b\uff0e\u6b21\u306b\u6b20\u640d\u5024\u306e\u500b\u6570\u3092\u30ab\u30a6\u30f3\u30c8\u3059\u308b\uff0e\n\n```R\n# count na\nna_count_train <- sapply(train, function(y) sum(is.na(y)))\nna_count_train\n\n# output\n# PassengerId   0\n# Survived      0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age         177\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          0\n# Cabin         0\n# Embarked      0\n\n```\n\n\u304a\u5206\u304b\u308a\u3060\u308d\u3046\u304b\uff1f\u4e0a\u3067Python\u306b\u3088\u308a\u6c42\u3081\u305f\u7d50\u679c\u3068\u7570\u306a\u3063\u3066\u3044\u308b\uff0e\u540c\u69d8\u306btest\u30c7\u30fc\u30bf\u3082\u898b\u3066\u307f\u308b\uff0e\n\n```R\n# count na\nna_count_test <- sapply(test, function(y) sum(is.na(y)))\n\n# output\n# PassengerId   0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age          86\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          1\n# Cabin         0\n# Embarked      0\n\n```\n\n\u3053\u3061\u3089\u3082Python\u3067\u6c42\u3081\u305fNA\u306e\u500b\u6570\u3068\u6bd4\u8f03\u3059\u308b\u3068\uff08\u7279\u306b'Cabin'\u3067\uff09\u5927\u5e45\u306b\u6e1b\u3063\u3066\u3044\u308b\uff0e\u4f55\u6545\u304b\uff1f\n\n\u5b9f\u306f\u3053\u306e\u5dee(Python vs. R) \u304c\u751f\u3058\u305f\u7406\u7531\u306f\uff0c\u7a7a\u767d(\"\", blank)\u306e\u6271\u3044\u65b9\u304c\u7570\u306a\u308b\u3053\u3068\u306b\u3042\u308b\uff0e\n\n**train.csv**\n![titanic_fig4.png](https://qiita-image-store.s3.amazonaws.com/0/74152/e6fd8438-0b44-dc7e-91d8-4714ad7a1c88.png)\n\uff08Python\u3067\u306f\u8aad\u307f\u8fbc\u307f\u6642\u306b\uff0c\u3059\u3067\u306b\u8d64\u67a0\u5185\u304cNaN\u3068\u306a\u3063\u3066\u3044\u305f\uff0e\uff09\n\nPython pandas \u3067\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b `isnull()` \u95a2\u6570\u306f\u7a7a\u767d(\"\")\u3082null\u3068\u5224\u5225\u3059\u308b\u306e\u306b\u5bfe\u3057\uff0c\nR\u306e `is.na()` \u306f\uff0c\u7a7a\u767d\u3092na\u306b\u5165\u308c\u306a\u3044\uff0e\u3053\u308c\u304c\u539f\u56e0\u3067na\u306e\u30ab\u30a6\u30f3\u30c8\u304c\u5c11\u306a\u304f\u306a\u3063\u3066\u3044\u308b\uff0e\n\n\u4eca\u56de\uff0cTitanic\u306e'Cabin\u2019\u306f\u8239\u5ba4\u306eID\u3092\u793a\u3059\u30c7\u30fc\u30bf\u3067\u3042\u308b\u306e\u3067\uff0c\u300c\u7a7a\u767d\u300d\u306f\uff08\u63a8\u6e2c\u306b\u306a\u308b\u304c\uff09\u8a18\u9332\u304c\u306a\u3044\u3053\u3068\u304c\u7406\u7531\u3060\u308d\u3046\uff0e\u307e\u305f\uff0c\u7a7a\u767d\u306b\u3064\u3044\u3066\u306f\u30c7\u30fc\u30bf\u5206\u6790\u306e\u30d5\u30ed\u30fc\u3092\uff08'Cabin'\u30c7\u30fc\u30bf\u6709\u306e\u51e6\u7406\u304b\u3089\uff09\u5206\u3051\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u305f\u3081\uff0c\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u3057\u3066\u306f\u7a7a\u767d\u3092NA\u306b\u30ab\u30a6\u30f3\u30c8\u3059\u308b\u307b\u3046\u304c\u597d\u307e\u3057\u3044\uff0e\u305d\u3053\u3067\uff0cPython\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u7a7a\u767d(\"\")\u3092NA\u3068\u3057\u3066\u6271\u3046\u3088\u3046\u306aR\u30b9\u30af\u30ea\u30d7\u30c8\u306b\u5909\u66f4\u3059\u308b\uff0e\n\n```R\n# Reread data with na.string option\ntrain <- read.csv(\"./data/train.csv\", header=T, stringsAsFactors=F, \n    na.strings=(c(\"NA\", \"\")))\ntest <- read.csv(\"./data/test.csv\", header=T, stringsAsFactors=F,\n    na.strings=(c(\"NA\", \"\")))\n\n```\n\nread.csv() \u306e na.strings \u30aa\u30d7\u30b7\u30e7\u30f3\u3092 `na.strings=(c(\"NA\", \"\"))` \u3068\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\uff0c\u7a7a\u767d(\"\")\u3092NA\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308b\uff0e\u3053\u306e\u5f8c\uff0cNA\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u884c\u3063\u305f\u306e\u304c\uff0c\u4ee5\u4e0b\uff0e\n\n```R\n# Counting NA\nna_count_train <- sapply(train, function(y) sum(is.na(y)))\nna_count_test <- sapply(test, function(y) sum(is.na(y)))\n\n```\n\n\u51fa\u529b\u7d50\u679c\uff1a\n\n```R\n# --- Train dataset ---\n# PassengerId   0\n# Survived      0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age         177\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          0\n# Cabin       687\n# Embarked      2\n\n# --- Test dataset ---\n# PassengerId   0\n# Pclass        0\n# Name          0\n# Sex           0\n# Age          86\n# SibSp         0\n# Parch         0\n# Ticket        0\n# Fare          1\n# Cabin       327\n# Embarked      0\n\n```\n\n\u3053\u308c\u3067Python\u7d50\u679c\u3068\u4e00\u81f4\u3057\u305f\uff0e\u3053\u306e\u3088\u3046\u306bNA\u306e\u5b9a\u7fa9\u304cPython(pandas) \u3068R\u3067\u7570\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u305f\uff0e\u6bd4\u8f03\u3068\u3057\u3066\u306f\uff0cR\u306e\u65b9\u304c\uff0cnull/NaN/NA \u306e\u533a\u5206\u3092\u53b3\u5bc6\u306b\u3057\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\uff0epandas\u3067\u306f\uff0cisnull()\u3067blank/NA/NaN\u3092\u3059\u3079\u3066NA\u3068\u5224\u5b9a\u3059\u308b\u304c\uff0c\u305d\u306e\u3053\u3068\u81ea\u4f53\u306f\u5b9f\u7528\u4e0a\u554f\u984c\u306a\u3057\u3068\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3060\uff0e\uff08\u60aa\u304f\u8a00\u3046\u3068 pandas\u306e\u6271\u3044\u306f\u300c\u3042\u3044\u307e\u3044\u300d\uff0e\uff09\n\n\u4ee5\u4e0b\uff0cPython pandas\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\uff08 http://pandas.pydata.org/pandas-docs/version/0.18.1/missing_data.html \uff09\u304b\u3089\u5f15\u7528\u3059\u308b\uff0e\n\n> Note: The choice of using NaN internally to denote missing data was largely for simplicity and performance reasons. It differs from the MaskedArray approach of, for example, scikits.timeseries. We are hopeful that NumPy will soon be able to provide a native NA type solution (similar to R) performant enough to be used in pandas.\n\n\u7a7a\u767d(blank) \u306e\u3053\u3068\u306f\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u304c\uff0cpandas\u3067\u306f\uff0c\u5358\u7d14\u3055\u3068\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8003\u3048\u3066\u4eca\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3068\u3057\u3066\u3044\u308b\u3068\u3042\u308b\uff0e\u79c1\u81ea\u8eab\uff0cNA\u30c7\u30fc\u30bf\u3092\u53b3\u5bc6\u306bblank/NA/NaN\u306b\u5206\u3051\u306a\u308c\u3070\u306a\u3089\u306a\u3044\u30b1\u30fc\u30b9\u306b\u51fa\u4f1a\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u306e\u3067\uff0c\u672c\u8a18\u4e8b\u306b\u66f8\u3044\u305fPython\u3067\u306e\u6271\u3044\u65b9\uff08R\u3067\u3042\u308c\u3070\uff0cblank\u3092NA\u306b\u5909\u63db\u3059\u308b\u3084\u308a\u65b9\uff09\u3092\u899a\u3048\u3066\u304a\u304d\u305f\u3044\u3068\u601d\u3046\uff0e\n\n\uff08\u53c2\u8003\u307e\u3067\u306b\uff0cBlank\u304b\u3089NA\u3078\u306e\u5909\u63db\u3067\u3059\u304c\uff0cR\u30d1\u30c3\u30b1\u30fc\u30b8 {data.table} \u306efread()\u3067\u3082\u540c\u69d8\u306e\u30aa\u30d7\u30b7\u30e7\u30f3(na.strings)\u3067\uff0c\u5909\u63db\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\uff0e\uff09\n\n## \u6700\u5f8c\u306b\n\nKaggle Titanic\u306f\uff0cKaggle\u306eTutorial\u7684\u306a\u30b3\u30f3\u30da\u3067\u3042\u308b\u304c\uff0cLeader Board\u3092\u898b\u308b\u3068\uff0c\u512a\u79c0\u306a\u3082\u306e\u304b\u3089\u5e73\u51e1\u306a\u3082\u306e\u307e\u3067\u30b9\u30b3\u30a2\u306e\u3070\u3089\u3064\u304d\u304c\u5927\u304d\u3044\uff0e\u3053\u3053\u3067\u30b9\u30b3\u30a2\u3092\u4e0a\u3052\u308b\u30dd\u30a4\u30f3\u30c8\u306e\u4e00\u3064\u306f\uff0c\u5206\u985e\u5668\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u3067\u3042\u308a\uff0c\u3082\u3046\u4e00\u3064\u306f\u30c7\u30fc\u30bf\u306e\u6b20\u640d\u5024\uff0c\u7279\u306b 'Age' \u306e\u6b20\u640d\u3092\u88dc\u9593\u3059\u308b\u65b9\u6cd5\u306b\u3042\u308b\u3068\u63a8\u5b9a\u3055\u308c\u308b\uff0e\u73fe\u6642\u70b9\u3067\u307e\u3060\u671f\u9650(12/31/2016)\u307e\u3067\u306b\u65e5\u306b\u3061\u304c\u3042\u308b\u306e\u3067\uff0c\u6a5f\u4f1a\u3092\u307f\u3066Titanic\u306e\u30b3\u30f3\u30da\u306b\u518d\u30c8\u30e9\u30a4\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3046\uff0e\uff08Top\u30b0\u30eb\u30fc\u30d7\u306f\uff0c\u6b63\u7b54\u7387(accuracy) 1.0 \u3092\u9054\u6210\u3057\u3066\u3044\u308b\uff0c\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046... \uff09\n\n## \u53c2\u8003\u6587\u732e / Web site\n- Pandas documentation, Working with missing data  \nhttp://pandas.pydata.org/pandas-docs/version/0.18.1/missing_data.html\n- Python pandas: check if any value is NaN in DataFrame - Stack overflow  \nhttp://stackoverflow.com/questions/29530232/python-pandas-check-if-any-value-is-nan-in-dataframe\n- Python pandas \u6b20\u640d\u5024/\u5916\u308c\u5024/\u96e2\u6563\u5316\u306e\u51e6\u7406 - Blog \"StatsFragments\"  \nhttp://sinhrks.hatenablog.com/entry/2016/02/01/080859\n- \u30c7\u30fc\u30bf\u306b\u6b20\u640d\u5024(NaN)\u304c\u3042\u308b\u5834\u5408\u306e\u53d6\u308a\u6271\u3044 - Qiita  \nhttp://qiita.com/gash717/items/df8aa9c7e771ed7539cb\n- Titanic: Machine Learning from Disaster - Kaggle  \nhttps://www.kaggle.com/c/titanic\n", "tags": ["Python", "pandas", "R", "Kaggle"]}