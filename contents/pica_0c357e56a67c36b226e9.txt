{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u6700\u8fd1\u306fSpring\u306e\u60c5\u5831\u3092\u691c\u7d22\u3059\u308b\u3068\u3001\u306a\u3093\u3067\u3082Spring Boot\u3067\u52d5\u304b\u3057\u3066\u308b\u306e\u3067\u3001\u81ea\u5206\u7528\u306b\u4f5c\u3063\u3066\u307f\u305f\u3002\nbuild.gradle\u3067EclipseWTP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b \u306e Spring Boot\u7248\u3068\u3044\u3046\u611f\u3058\u304b\u3002\n\n\u4e8b\u524d\u6e96\u5099\ngradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u6210\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u6210\u3002web\u7528\u3060\u3051\u3069WEB-INF\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u8981\u3089\u306a\u3044\u307f\u305f\u3044\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\n\u251c\u2500build.gradle\n\u2514\u2500src\n  \u251c\u2500main\n  \u2502  \u251c\u2500java\n  \u2502  \u2514\u2500resources\n  \u2514\u2500test\n     \u251c\u2500java\n     \u2514\u2500resources\n\n\nbuild.gradle \u306e\u5185\u5bb9\n\u4e0b\u8a18\u306e\u5185\u5bb9\u306e build.gradle \u3092\u4f5c\u6210\u3057\u3066\u3001gradle eclipse \u3059\u308b\u3068\u3001Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\nbuildscript {\n    repositories {\n        jcenter()\n        // maven { url \"http://repo.spring.io/snapshot\" }\n        // maven { url \"http://repo.spring.io/milestone\" }\n    }\n    dependencies {\n        // \u3053\u308c\u3092\u4f5c\u6210\u3057\u305f\u6642\u70b9\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.2.5\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'spring-boot'\napply plugin: 'eclipse'\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\ndef defaultEncoding = 'UTF-8'\n[compileJava, compileTestJava]*.options*.encoding = defaultEncoding\n\n// \u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306eJava \u30d0\u30fc\u30b8\u30e7\u30f3\ndef jdkVersion = 1.8\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\n// \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\nrepositories {\n    jcenter()\n    // mavenCentral()\n}\n\n// \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a2d\u5b9a\ndependencies {\n    // \u3053\u3053\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u4e0d\u8981\u3089\u3057\u3044\n    compile \"org.springframework.boot:spring-boot-starter-web\"\n\n    testCompile \"org.springframework.boot:spring-boot-starter-test\"\n}\n\n//// eclipse\u306e\u8a2d\u5b9a\u3092\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n//// gradle cleanEclipse eclipse \u3092\u5b9f\u884c\u3059\u308b\n// tasks.eclipse.dependsOn(cleanEclipse)\n\n// eclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\nimport org.gradle.plugins.ide.eclipse.model.SourceFolder\neclipse {\n    // .project \u306e\u8a2d\u5b9a\n    project {\n        // nature \u306e\u8ffd\u52a0\n        // spring project nature \u3092\u8ffd\u52a0\n        natures 'org.springframework.ide.eclipse.core.springnature'\n\n        // Gradle nature \u3092\u8ffd\u52a0\n        natures 'org.springsource.ide.eclipse.gradle.core.nature'\n\n        // buildCommand \u306e\u8ffd\u52a0\n        // spring \u306ebuildCommand \u3092\u8ffd\u52a0\n        buildCommand 'org.springframework.ide.eclipse.core.springbuilder'\n    }\n\n    // gradle\u3067\u53d6\u5f97\u3057\u305fjar\u306e\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\n    // \u4e8b\u524d\u306b GRADLE_USER_HOME \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    // Windows: [\u30a6\u30a3\u30f3\u30c9\u30a6]->[\u8a2d\u5b9a] \u3092\u958b\u304f\n    // Mac    : [Eclipse]->[\u74b0\u5883\u8a2d\u5b9a]\u3092\u958b\u304f\n    // \u8a2d\u5b9a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u3044\u305f\u3089 [Java]->[\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9]->[\u30af\u30e9\u30b9\u30d1\u30b9\u5909\u6570] \u3092\u9078\u629e\u3059\u308b\n    // [\u65b0\u898f]\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066 [\u540d\u524d]:GRADLE_USER_HOME, [\u30d1\u30b9]:gradle\u3092\u914d\u7f6e\u3057\u305f\u30d1\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\n    pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir\n\n    // .classpath \u306e\u8a2d\u5b9a\n    classpath {\n        // \u4f9d\u5b58\u3057\u3066\u3044\u308b jar \u306e source \u3068 javadoc \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n        downloadSources = true    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306f false\n        downloadJavadoc = true    // javadoc \u306e\u30d1\u30b9\u306f\u7d76\u5bfe\u30d1\u30b9\u306b\u306a\u308b\n\n        file {\n            // \u30bd\u30fc\u30b9\u30d1\u30b9\u306e\u8a2d\u5b9a\u3092\u524a\u9664\n            beforeMerged { classpath ->\n                // classpath.entries.clear()\n                classpath.entries.removeAll { it.kind == \"src\" }\n            }\n\n            // \u51fa\u529b\u30d1\u30b9\u3092 gradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u5408\u308f\u305b\u308b\n            whenMerged { classpath ->\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/java\")      }*.output = \"build/classes/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/resources\") }*.output = \"build/resources/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/java\")      }*.output = \"build/classes/test\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/resources\") }*.output = \"build/resources/test\"\n                classpath.entries.removeAll { it.kind == \"output\" }\n            }\n        }\n    }\n\n    // .settings/org.eclipse.jdt.core.prefs \u306e\u8a2d\u5b9a\n    jdt {\n        // \u6bce\u56de\u56fa\u5b9a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b(\u30c6\u30f3\u30d7\u30ec\u306f\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u304a\u304f)\n        /*\n        file {\n            def props = new Properties()\n            props.load(new FileInputStream(\"${projectDir}/template/org.eclipse.jdt.core.prefs\"))\n            withProperties { properties -> properties.putAll(props) }\n        }\n        */\n    }\n}\n\n\n\n\u4f7f\u3044\u65b9\n\nJAR\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u898b\u305f\u3044\u3068\u304d: gradle dependencies\n\nEclipse\u304b\u3089\u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d: gradle bootRun \u3067\u30a2\u30d7\u30ea\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\u5185\u90e8\u3067tomcat-embed\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u3001localhost:8080/[@RequstMapping\u3067\u8a2d\u5b9a\u3057\u305f\u30d1\u30b9] \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\nJAR\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30de\u30f3\u30c9\u304b\u3089\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d: gralde build \u3067JAR\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u3001java -jar [jar\u30d5\u30a1\u30a4\u30eb\u540d]\u3002\u30a2\u30d7\u30ea\u3092\u7d42\u4e86\u3059\u308b\u3068\u304d\u306f\u3001Ctrl+C \u3067\u30a2\u30d7\u30ea\u3092\u505c\u6b62\u3059\u308b\u3002\n\n\n\u53c2\u7167\u3057\u305fURL\n\nhttp://docs.spring.io/spring-boot/docs/current/reference/html/getting-started-installing-spring-boot.html#getting-started-gradle-installation\nhttp://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-build-systems.html#using-boot-gradle\nhttp://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-running-your-application.html#using-boot-running-with-the-gradle-plugin\n\n\u3042\u3068\u3001\u306f\u3058\u3081\u3066\u306e Spring Boot \u306e1\u7ae0\u3082\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n\n## \u76ee\u7684\n\u6700\u8fd1\u306fSpring\u306e\u60c5\u5831\u3092\u691c\u7d22\u3059\u308b\u3068\u3001\u306a\u3093\u3067\u3082Spring Boot\u3067\u52d5\u304b\u3057\u3066\u308b\u306e\u3067\u3001\u81ea\u5206\u7528\u306b\u4f5c\u3063\u3066\u307f\u305f\u3002\n[build.gradle\u3067EclipseWTP\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u308b](http://qiita.com/pica/items/cbb6160f1ded7bd62abe) \u306e Spring Boot\u7248\u3068\u3044\u3046\u611f\u3058\u304b\u3002\n\n## \u4e8b\u524d\u6e96\u5099\ngradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u69cb\u6210\u306e\u30d5\u30a9\u30eb\u30c0\u3092\u4f5c\u6210\u3057\u3066\u304a\u304f\u3002\n\u4ee5\u4e0b\u306e\u69d8\u306a\u69cb\u6210\u3002web\u7528\u3060\u3051\u3069WEB-INF\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u8981\u3089\u306a\u3044\u307f\u305f\u3044\u3002\n\n```\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a9\u30eb\u30c0\n\u251c\u2500build.gradle\n\u2514\u2500src\n  \u251c\u2500main\n  \u2502  \u251c\u2500java\n  \u2502  \u2514\u2500resources\n  \u2514\u2500test\n     \u251c\u2500java\n     \u2514\u2500resources\n```\n\n## build.gradle \u306e\u5185\u5bb9\n\u4e0b\u8a18\u306e\u5185\u5bb9\u306e build.gradle \u3092\u4f5c\u6210\u3057\u3066\u3001`gradle eclipse` \u3059\u308b\u3068\u3001Spring + Gradle \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u3002\n\n```\nbuildscript {\n    repositories {\n        jcenter()\n        // maven { url \"http://repo.spring.io/snapshot\" }\n        // maven { url \"http://repo.spring.io/milestone\" }\n    }\n    dependencies {\n        // \u3053\u308c\u3092\u4f5c\u6210\u3057\u305f\u6642\u70b9\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f1.2.5\n        classpath(\"org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE\")\n    }\n}\n\napply plugin: 'java'\napply plugin: 'spring-boot'\napply plugin: 'eclipse'\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\ndef defaultEncoding = 'UTF-8'\n[compileJava, compileTestJava]*.options*.encoding = defaultEncoding\n\n// \u30bd\u30fc\u30b9\u3068\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306eJava \u30d0\u30fc\u30b8\u30e7\u30f3\ndef jdkVersion = 1.8\nsourceCompatibility = jdkVersion\ntargetCompatibility = jdkVersion\n\n// \u4f9d\u5b58\u95a2\u4fc2\u306e\u89e3\u6c7a\nrepositories {\n    jcenter()\n    // mavenCentral()\n}\n\n// \u4f9d\u5b58\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u8a2d\u5b9a\ndependencies {\n\t// \u3053\u3053\u306b\u30d0\u30fc\u30b8\u30e7\u30f3\u6307\u5b9a\u306f\u4e0d\u8981\u3089\u3057\u3044\n    compile \"org.springframework.boot:spring-boot-starter-web\"\n\n    testCompile \"org.springframework.boot:spring-boot-starter-test\"\n}\n\n//// eclipse\u306e\u8a2d\u5b9a\u3092\u6bce\u56de\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u8a2d\u5b9a\u3092\u6709\u52b9\u306b\u3059\u308b\u304b\n//// gradle cleanEclipse eclipse \u3092\u5b9f\u884c\u3059\u308b\n// tasks.eclipse.dependsOn(cleanEclipse)\n\n// eclipse \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\nimport org.gradle.plugins.ide.eclipse.model.SourceFolder\neclipse {\n    // .project \u306e\u8a2d\u5b9a\n    project {\n        // nature \u306e\u8ffd\u52a0\n        // spring project nature \u3092\u8ffd\u52a0\n        natures 'org.springframework.ide.eclipse.core.springnature'\n\n        // Gradle nature \u3092\u8ffd\u52a0\n        natures 'org.springsource.ide.eclipse.gradle.core.nature'\n\n        // buildCommand \u306e\u8ffd\u52a0\n        // spring \u306ebuildCommand \u3092\u8ffd\u52a0\n        buildCommand 'org.springframework.ide.eclipse.core.springbuilder'\n    }\n\n    // gradle\u3067\u53d6\u5f97\u3057\u305fjar\u306e\u30d1\u30b9\u3092\u7d76\u5bfe\u30d1\u30b9\u306b\u3057\u306a\u3044\n    // \u4e8b\u524d\u306b GRADLE_USER_HOME \u3092\u8a2d\u5b9a\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    // Windows: [\u30a6\u30a3\u30f3\u30c9\u30a6]->[\u8a2d\u5b9a] \u3092\u958b\u304f\n    // Mac    : [Eclipse]->[\u74b0\u5883\u8a2d\u5b9a]\u3092\u958b\u304f\n    // \u8a2d\u5b9a\u30a6\u30a3\u30f3\u30c9\u30a6\u304c\u958b\u3044\u305f\u3089 [Java]->[\u30d3\u30eb\u30c9\u30fb\u30d1\u30b9]->[\u30af\u30e9\u30b9\u30d1\u30b9\u5909\u6570] \u3092\u9078\u629e\u3059\u308b\n    // [\u65b0\u898f]\u30dc\u30bf\u30f3\u3092\u62bc\u4e0b\u3057\u3066 [\u540d\u524d]:GRADLE_USER_HOME, [\u30d1\u30b9]:gradle\u3092\u914d\u7f6e\u3057\u305f\u30d1\u30b9 \u3092\u8a2d\u5b9a\u3059\u308b\n    pathVariables 'GRADLE_USER_HOME': gradle.gradleUserHomeDir\n\n    // .classpath \u306e\u8a2d\u5b9a\n    classpath {\n        // \u4f9d\u5b58\u3057\u3066\u3044\u308b jar \u306e source \u3068 javadoc \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\n        downloadSources = true    // \u30c7\u30d5\u30a9\u30eb\u30c8\u306f false\n        downloadJavadoc = true    // javadoc \u306e\u30d1\u30b9\u306f\u7d76\u5bfe\u30d1\u30b9\u306b\u306a\u308b\n\n        file {\n            // \u30bd\u30fc\u30b9\u30d1\u30b9\u306e\u8a2d\u5b9a\u3092\u524a\u9664\n            beforeMerged { classpath ->\n                // classpath.entries.clear()\n                classpath.entries.removeAll { it.kind == \"src\" }\n            }\n\n            // \u51fa\u529b\u30d1\u30b9\u3092 gradle \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306b\u5408\u308f\u305b\u308b\n            whenMerged { classpath ->\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/java\")      }*.output = \"build/classes/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/main/resources\") }*.output = \"build/resources/main\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/java\")      }*.output = \"build/classes/test\"\n                classpath.entries.findAll { it instanceof SourceFolder && it.path.startsWith(\"src/test/resources\") }*.output = \"build/resources/test\"\n                classpath.entries.removeAll { it.kind == \"output\" }\n            }\n        }\n    }\n\n    // .settings/org.eclipse.jdt.core.prefs \u306e\u8a2d\u5b9a\n    jdt {\n        // \u6bce\u56de\u56fa\u5b9a\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b(\u30c6\u30f3\u30d7\u30ec\u306f\u81ea\u524d\u3067\u7528\u610f\u3057\u3066\u304a\u304f)\n        /*\n        file {\n            def props = new Properties()\n            props.load(new FileInputStream(\"${projectDir}/template/org.eclipse.jdt.core.prefs\"))\n            withProperties { properties -> properties.putAll(props) }\n        }\n        */\n    }\n}\n\n```\n\n## \u4f7f\u3044\u65b9\n\n- JAR\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u898b\u305f\u3044\u3068\u304d: `gradle dependencies`\n- Eclipse\u304b\u3089\u30a2\u30d7\u30ea\u3092\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d: `gradle bootRun` \u3067\u30a2\u30d7\u30ea\u304c\u5b9f\u884c\u3055\u308c\u308b\u3002\u5185\u90e8\u3067tomcat-embed\u304c\u52d5\u4f5c\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u3001`localhost:8080/[@RequstMapping\u3067\u8a2d\u5b9a\u3057\u305f\u30d1\u30b9]` \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n- JAR\u30d5\u30a1\u30a4\u30eb\u3092\u30b3\u30de\u30f3\u30c9\u304b\u3089\u5b9f\u884c\u3057\u305f\u3044\u3068\u304d: `gralde build` \u3067JAR\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u3066\u304b\u3089\u3001`java -jar [jar\u30d5\u30a1\u30a4\u30eb\u540d]`\u3002\u30a2\u30d7\u30ea\u3092\u7d42\u4e86\u3059\u308b\u3068\u304d\u306f\u3001`Ctrl+C` \u3067\u30a2\u30d7\u30ea\u3092\u505c\u6b62\u3059\u308b\u3002\n\n## \u53c2\u7167\u3057\u305fURL\n\n- http://docs.spring.io/spring-boot/docs/current/reference/html/getting-started-installing-spring-boot.html#getting-started-gradle-installation\n- http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-build-systems.html#using-boot-gradle\n- http://docs.spring.io/spring-boot/docs/current/reference/html/using-boot-running-your-application.html#using-boot-running-with-the-gradle-plugin\n\n\u3042\u3068\u3001[\u306f\u3058\u3081\u3066\u306e Spring Boot](https://www.kohgakusha.co.jp/books/detail/978-4-7775-1865-4) \u306e1\u7ae0\u3082\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\u3002\n", "tags": ["Eclipse", "gradle", "spring"]}