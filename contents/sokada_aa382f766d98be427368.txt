{"tags": ["Terminal"], "context": " More than 1 year has passed since last update.How to be a terminal Pro\n\n1. hello world in terminal\necho 'hello world!'\necho -n 'hello! world'\n\n-n surpress the new line\nctrl+A go to the begginning of the line\nctrl+E go to the end of line\nup/down key shows history of command\n~, tilda is the variable for home directory\ntab completion\nclear command to clean the screen\nman echo\nto quit man page is to type q\n\nNavigating man\n\nPage Down = Spacebar or the \u2018Page Down\u2019 Key\nPage Up = b or the \u2018Page Up\u2019 Key\nLine Down = j or the \u2018Down Arrow\u2019 Key\nLine Up = k or the \u2018Up Arrow\u2019 Key\nTop of Document = g\nBottom of Document = G\nQuit = q\nSearch = / to search forward [example /keyfile ] |or| ? to search backward [ ?keyfile ]\nRepeat Search = n to repeat the search forward and N to repeat the search in the opposite direction\nHelp = h | Will give you the full summary of Less commands\n\n\n2. Navigating the File System\nls\npwd\nls Documents //ls a directory\nls Documents Music // ls directories\nls /Users/js/Documents //using absolute path\nls Documents // same command as above\nls ~/Documents //same command as above\n\nCase sensitive on Linux but not in Mac\nFor space use \\\nls Some Directory // this will pick up two direcories\nls Some\\ Direcotry\nls \"Some Directory\"\nls 'Some Directory'\nls -l // details list\nls -a //all the files including hidden files\nls -t //sort by time last modified\nls -t -l -a\nls -tla //or ls -alt etc\ncd .. //one level up the directory\n\n. is current directory\nMac finder integration in Mac. Drag a file on the teminal will show the absolute path of the file.\nThis will open the current directory in the Finder in Mac\nopen . \n\nThis will open a file with the default text editor.\nopen finename.txt   \n\nThis will open a file with nameofApp.\nopen -a nameofApp nameofFile.txt\n\n-a stand for application\n-R reveal the file in the Finder\nopen -R filename.txt    \n\nOpen a website in a default browser\nopen http://google.com\n\nDisplaying absolute path on the Finder\ndefaults write com.apple.finder _FXShowPosixPathInTitle -bool YES\n\nkillall Finder\n\n\n3. Files, Links, and CRUD\n\nCopying\nLink: Linux and Unix cp command\ntouch finename\nnano afile\nmkdir dirname\ntouch adir/anotherfile\nls adir\ncp afile afile.bak\n\nIf there is a superimportantfile, this will overwrite, so be careful.\ncp afile superimportantfile //\ncp adir seconddir // this will give an error\ncp -r adir seconddir\n\nMore notes:\ncp file1.txt newdir \n\nCopies the file1.txt in the current directory to the newdir directory.\ncp /home/public_html/mylog.txt /home/public_html/backup/mylog.bak\n\nCopies the mylog.txt file in the public_html directory into the public_html/backup directory as mylog.bak. The files are identical however have different names.\ncp *.txt newdir\n\nCopy all files ending in .txt into the newdir directory.\ncp -r /home/hope/files/* /home/hope/backup\n\nCopies all the files, directories, and subdirectories in the files directory into the backup directory.\nyes | cp /home/hope/files/* /home/hope/files2\n\nCopies all the files and subdirectories in files into the files2 directory. If files with the same name exist or it's prompted to overwrite the file it answers yes.\n\nMoving\nmv afile adir // or mv afile ~/adir/\n\nThe following will move a file and rename it as afile-backup\nmv afile.bak ~/adir/afile-backup \n//renaming by mv command\nmv afile secondfile\n\ncd ~\ntouch file1 file2 file3 filejesse filejohn\n\nMoving all files with 'file' name \nmv file* adir/\n\nMore notes:\nmv myfile.txt newdirectory/\n\nMoves the file myfile.txt to the directory newdirectory.\nmv myfile.txt ../\n\nMoves the file myfile.txt back one directory (if available).\nmv computer\\ hope.txt computer_hope.txt\n\nMoves (renames) the file \"computer hope.txt\" to computer_hope.txt. When working with a file or directory with a space you must escape that space with a backslash or surround the filename or directory with quotes.\n\nDelete\nrm command deletes files, be super careful\nrm afile\n\nIn order to delete a directory you need to use -r\nmkdir folderr\ntouch folderr/afile\nls folderr\nrmdir folderr // error\nrmdir -r folderr\n\nNotes: \nrm -rf directory/\n\nRemove a directory, even if files exist in that directory.\nrmdir mydir\n\nRemoves the directory mydir\n\nSymbolic link/Soft link and Hard link\nGo to the dir where you want to add a symlink and use ln -s   to create the link.\ncd /dir/where/youwant/toaddsymlink/ //link will be created in this dir\nln -s <destination folder/file name> <linkname>\n\nIn the video\ntouch afile \nln -s afile symlinforafile\nls\nnano afile\n// add hey there~\ncat afile // to show the content hey there~\ncat symlinkforafile // this will show hey there~ as well\n\nBut if you move a file, the link will break.\nmv afile afile2\ncat symlinkforafile // this is broken\n\nA hard link won't break.\nrm symlinkforafile\nls\nln afile2 hardlinkforafile2\ncat afile2 // shows hey there~\nmv afile2 afile3 //move the original\nls\ncat hardlinforafile2 // this is not broken and shows hey there~\n\n\n4. Finding Files\nmkdir searchHere\ncd searchHere\ntouch CaSeFiLe afile.doc athird newestfile aDir anotherfile bigfile smallfile afile anotherfile.doc fourth.txt\ncd aDir\ntouch file1.txt file2.txt file3.txt\ncd ..\n\n\nFind by type\nfind . -type f //find name of dir, . means current dir and will find in aDir as well\n\n\nFind by name\nfind . -name \"newestfile\" //this will find ./newestfile\nfind . -name \"*.txt\" //find recursively\n//case incensitive -iname\nfind . -iname \"*text\"\n\n\nFind by size\nfind . -size +2048 //more than 2048, 512bite which is more than 1MB\nfind . -size -2048 //find less than 1MB size\n\n\nfind by time of modification, creation or last accessed date\nfind . -mtime -1 //by modification time less than one day old\nfind . -mtime +1 // older than one day\nfind . -atime +1  // last accessed time more than one day\nfind . -atime -1 // accessed during the last day\nfind . -ctime -1 // created within one day\n\n\nCombining them\nfind . -iname \"*.txt\" -or -iname \"*.doc\" // will find .txt or .doc\nfind . -iname \"*.txt\" -or -iname \"*.doc\" -and -mtime -1 // will find .txt or .doc and modified within one day.\n\n\nExclude a dir from search\nfind . -iname \"*.txt\"\nfind . -iname \"*.txt\" -or -iname \"aDir\" -prune // -prune means do not include in the seach but this will print aDir dir\nfind . -iname \"*.txt\" -print -or -iname \"aDir\" -prune// this won't print aDir\n\n\nSearch file for content\ngrep \"Hello\" afile// search word, file name\ngrep -i \"Hello\" afile //case incensitive match\ngrep -il \"Hello\" afile //-l will return the file name\ngrep -il \"Hello\" * //return all the file names\ngrep -ilr \"Hello\" afile //-r recursively search the current dir\n\nSearching recursively  and type of files won't work. You need to use 'find'.\ngrep -ilr \"Hello\" *.txt // this won't work\nfind . -name \"*.txt\" -exec grep -il \"Hello\" {} \\;\n\n-exec is passing -name \"*.txt\" to grep. {} is placehoder to put the outputs. and escape \\;\n\n5. Managing File Permissions\ncd Documents\ntouch afile.txt\nls -l\n\n-rw-r--r--\nThe first - is a regular file. d:directory, l:symbolic link\nuser(u), group(g), anyone(o) else. The above one, the user can read and write but not able to execute. Group and anyone else can only read. \nchmod g+w afile.txt //giving write to group\nls -l\nchmod o+w afile.txt //giving write to others\nchmod a+x afile.txt //'a' stands for user, group and others. Giving executable to all.\n\nRemove permissions by - instead of +. go is the same as og means group and others.\nchmod og-x afile.txt\nls -l\n\nGiving execution and taking writing permission to group.\nchmod g+x-w afile.txt\nls -l\n\nGiving group read, write and execution permission by using =\nchmod g=rwx afile.txt\nls -l\n\nTaking out all permissions\nchmod g= afile.txt\n\nGiving different permissions to different group.\nchmod u=rw, g=,o=x afile.txt\nls -l\n\nIn absolute form using numbers. 4:read, 2:write, 1:execute\nchmod 444 afile.txt\nls -l\nchmod 744 afile.txt\nchmod 700 afile.txt\n\nchmod 644 afile.txt\n\n\n6. Editing files\n\n7. Piping, redirection and output\n$ echo \"hello world\" > afile // single arrow will over-write.\n$ cat afile\n$ hello world // this is output.\necho \"hello world\" >> afile // this will append to afile.\n\n\nredirecting an standard error\n$ ls fakefile\n$ ls: fakefile: No such file or directory\n$ ls fakefile > log // this won't be any output in log file.\n$ cat log\n$ ls fakefile 2> log // 2 in front of the arrow is a standard error output. \n$ cd fakedirectory 2>> log // this will append the error to log.\n$ cat log\n$ ls Docufakedir >> log 2>&1 // will append error to log\n\nOutputing standard output and standard error.\n$ ls Documents >> log 2>&1\n\n\n8. Managing Processes on Mac OSX\n\n9. SSH Keys for Password-Less Logins\n\n10. Working With Remote Files: SCP, SFTP, and cURL\n\n11. A Primer to Bash Scripting/Aliasing\n\n12. Automated Background Processes\n\n13. Configuring the Apache Web Server\n\n14. Customizing the terminal\nFor zsh, read ,this](http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/) or Link: this article\nLink: Bash Prompt Escape Sequences\nLink: Bash Shell PS1: 10 Examples to Make Your Linux Prompt like Angelina Jolie\n$ echo $PS1\n$ export PS1=\"[\\u]\" // this will use the username\n[username]\n$ export PS1=\"[\\W:\\u]\" // \\W shows the base name of the current working dir\n$ export PS1=\"[\\u@\\h:\\W $]\" //\\h the hostname upto the first `.\n\nThese changes are temporaly. In order to make it permanent, open .bash_profile.\nexport PS1=\"\\u@\\h:\\W $ \"    \n\nLink: http://geoff.greer.fm/lscolors/\n[How to be a terminal Pro](https://tutsplus.com/course/how-to-be-a-terminal-pro/)\n\n## 1. hello world in terminal\n\n\techo 'hello world!'\n\techo -n 'hello! world'\n\t\n-n surpress the new line\n\nctrl+A go to the begginning of the line\n\nctrl+E go to the end of line\n\nup/down key shows history of command\n\n~, tilda is the variable for home directory\n\ntab completion\n\nclear command to clean the screen\n\nman echo\n\nto quit man page is to type q\n\n### Navigating man\n\n- Page Down = Spacebar or the \u2018Page Down\u2019 Key\n- Page Up = b or the \u2018Page Up\u2019 Key\n- Line Down = j or the \u2018Down Arrow\u2019 Key\n- Line Up = k or the \u2018Up Arrow\u2019 Key\n- Top of Document = g\n- Bottom of Document = G\n- Quit = q\n- Search = / to search forward [example /keyfile ] |or| ? to search backward [ ?keyfile ]\n- Repeat Search = n to repeat the search forward and N to repeat the search in the opposite direction\n- Help = h | Will give you the full summary of Less commands\n\n## 2. Navigating the File System\n\n\tls\n\tpwd\n\tls Documents //ls a directory\n\tls Documents Music // ls directories\n\tls /Users/js/Documents //using absolute path\n\tls Documents // same command as above\n\tls ~/Documents //same command as above\nCase sensitive on Linux but not in Mac\n\nFor space use \\\n\n\tls Some Directory // this will pick up two direcories\n\tls Some\\ Direcotry\n\tls \"Some Directory\"\n\tls 'Some Directory'\n\tls -l // details list\n\tls -a //all the files including hidden files\n\tls -t //sort by time last modified\n\tls -t -l -a\n\tls -tla //or ls -alt etc\n\tcd .. //one level up the directory\n\n . is current directory\n\nMac finder integration in Mac. Drag a file on the teminal will show the absolute path of the file.\n\nThis will open the current directory in the Finder in Mac\n\n\topen . \n\t\nThis will open a file with the default text editor.\n\t\n\topen finename.txt \t\n\nThis will open a file with nameofApp.\n\n\topen -a nameofApp nameofFile.txt\n\t\n-a stand for application\n\t\n-R reveal the file in the Finder\n\n\topen -R filename.txt\t\n\t\nOpen a website in a default browser\n\n\topen http://google.com\n\nDisplaying absolute path on the Finder\n\n\tdefaults write com.apple.finder _FXShowPosixPathInTitle -bool YES\n\t\n\tkillall Finder\n\n## 3. Files, Links, and CRUD\n### Copying\n[Link: Linux and Unix cp command](http://www.computerhope.com/unix/ucp.htm#03)\n\n\ttouch finename\n\tnano afile\n\tmkdir dirname\n\ttouch adir/anotherfile\n\tls adir\n\tcp afile afile.bak\n\t\nIf there is a superimportantfile, this will overwrite, so be careful.\n\t\n\tcp afile superimportantfile //\n\tcp adir seconddir // this will give an error\n\tcp -r adir seconddir\n\nMore notes:\n\n\tcp file1.txt newdir \n\nCopies the file1.txt in the current directory to the newdir directory.\n\t\n\tcp /home/public_html/mylog.txt /home/public_html/backup/mylog.bak\n\t\nCopies the mylog.txt file in the public_html directory into the public_html/backup directory as mylog.bak. The files are identical however have different names.\n\t\n\tcp *.txt newdir\n\nCopy all files ending in .txt into the newdir directory.\n\t\n\tcp -r /home/hope/files/* /home/hope/backup\n\nCopies all the files, directories, and subdirectories in the files directory into the backup directory.\n\t\n\tyes | cp /home/hope/files/* /home/hope/files2\n\nCopies all the files and subdirectories in files into the files2 directory. If files with the same name exist or it's prompted to overwrite the file it answers yes.\n\t\n\t\n### Moving\n\tmv afile adir // or mv afile ~/adir/\n\t\nThe following will move a file and rename it as afile-backup\n\t\n\tmv afile.bak ~/adir/afile-backup \n\t//renaming by mv command\n\tmv afile secondfile\n\t\n\tcd ~\n\ttouch file1 file2 file3 filejesse filejohn\n\t\nMoving all files with 'file' name \n\t\n\tmv file* adir/\n\nMore notes:\n\n\tmv myfile.txt newdirectory/\n\nMoves the file myfile.txt to the directory newdirectory.\n\n\tmv myfile.txt ../\n\nMoves the file myfile.txt back one directory (if available).\n\n\tmv computer\\ hope.txt computer_hope.txt\n\nMoves (renames) the file \"computer hope.txt\" to computer_hope.txt. When working with a file or directory with a space you must escape that space with a backslash or surround the filename or directory with quotes.\n\n### Delete\n\nrm command deletes files, be super careful\n\n\trm afile\n\nIn order to delete a directory you need to use -r\n\t\n\tmkdir folderr\n\ttouch folderr/afile\n\tls folderr\n\trmdir folderr // error\n\trmdir -r folderr\n\nNotes: \n\n\trm -rf directory/\n\nRemove a directory, even if files exist in that directory.\n\n\trmdir mydir\n\nRemoves the directory mydir\n\n### Symbolic link/Soft link and Hard link\n\nGo to the dir where you want to add a symlink and use ln -s <destination> <linkname> to create the link.\n\t\n\tcd /dir/where/youwant/toaddsymlink/ //link will be created in this dir\n\tln -s <destination folder/file name> <linkname>\n\nIn the video\n\n\ttouch afile \n\tln -s afile symlinforafile\n\tls\n\tnano afile\n\t// add hey there~\n\tcat afile // to show the content hey there~\n\tcat symlinkforafile // this will show hey there~ as well\n\nBut if you move a file, the link will break.\n\n\tmv afile afile2\n\tcat symlinkforafile // this is broken\n\t\nA hard link won't break.\n\n\trm symlinkforafile\n\tls\n\tln afile2 hardlinkforafile2\n\tcat afile2 // shows hey there~\n\tmv afile2 afile3 //move the original\n\tls\n\tcat hardlinforafile2 // this is not broken and shows hey there~\n\n## 4. Finding Files\n\n\tmkdir searchHere\n\tcd searchHere\n\ttouch CaSeFiLe afile.doc athird newestfile aDir anotherfile bigfile smallfile afile anotherfile.doc fourth.txt\n\tcd aDir\n\ttouch file1.txt file2.txt file3.txt\n\tcd ..\n\n### Find by type\n\n\tfind . -type f //find name of dir, . means current dir and will find in aDir as well\n\t\n### Find by name\n\n\tfind . -name \"newestfile\" //this will find ./newestfile\n\tfind . -name \"*.txt\" //find recursively\n\t//case incensitive -iname\n\tfind . -iname \"*text\"\n\n### Find by size\n\n\tfind . -size +2048 //more than 2048, 512bite which is more than 1MB\n\tfind . -size -2048 //find less than 1MB size\n\t\n### find by time of modification, creation or last accessed date\n\tfind . -mtime -1 //by modification time less than one day old\n\tfind . -mtime +1 // older than one day\n\tfind . -atime +1  // last accessed time more than one day\n\tfind . -atime -1 // accessed during the last day\n\tfind . -ctime -1 // created within one day\n\n### Combining them\n\tfind . -iname \"*.txt\" -or -iname \"*.doc\" // will find .txt or .doc\n\tfind . -iname \"*.txt\" -or -iname \"*.doc\" -and -mtime -1 // will find .txt or .doc and modified within one day.\n\t\n### \tExclude a dir from search \n\tfind . -iname \"*.txt\"\n\tfind . -iname \"*.txt\" -or -iname \"aDir\" -prune // -prune means do not include in the seach but this will print aDir dir\n\tfind . -iname \"*.txt\" -print -or -iname \"aDir\" -prune// this won't print aDir\n\t\n\t\n### Search file for content\n\n\tgrep \"Hello\" afile// search word, file name\n\tgrep -i \"Hello\" afile //case incensitive match\n\tgrep -il \"Hello\" afile //-l will return the file name\n\tgrep -il \"Hello\" * //return all the file names\n\tgrep -ilr \"Hello\" afile //-r recursively search the current dir\n\nSearching recursively  and type of files won't work. You need to use 'find'.\n\n\tgrep -ilr \"Hello\" *.txt // this won't work\n\tfind . -name \"*.txt\" -exec grep -il \"Hello\" {} \\;\n\n-exec is passing -name \"*.txt\" to grep. {} is placehoder to put the outputs. and escape \\;\n\t\n\n## 5. Managing File Permissions\n\n\tcd Documents\n\ttouch afile.txt\n\tls -l\n\t\n-rw-r--r--\n\nThe first - is a regular file. d:directory, l:symbolic link\n\nuser(u), group(g), anyone(o) else. The above one, the user can read and write but not able to execute. Group and anyone else can only read. \n\n\tchmod g+w afile.txt //giving write to group\n\tls -l\n\tchmod o+w afile.txt //giving write to others\n\tchmod a+x afile.txt //'a' stands for user, group and others. Giving executable to all.\n\t\nRemove permissions by - instead of +. go is the same as og means group and others.\n\n\tchmod og-x afile.txt\n\tls -l\n\nGiving execution and taking writing permission to group.\n\n\tchmod g+x-w afile.txt\n\tls -l\n\nGiving group read, write and execution permission by using =\n\t\n\tchmod g=rwx afile.txt\n\tls -l\n\t\nTaking out all permissions\n\n\tchmod g= afile.txt\n\t\nGiving different permissions to different group.\n\n\tchmod u=rw, g=,o=x afile.txt\n\tls -l\n\t\nIn absolute form using numbers. 4:read, 2:write, 1:execute\n\n\tchmod 444 afile.txt\n\tls -l\n\tchmod 744 afile.txt\n\tchmod 700 afile.txt\n\t\n\tchmod 644 afile.txt\n\n\n## 6. Editing files\n\n## 7. Piping, redirection and output\n\n\t$ echo \"hello world\" > afile // single arrow will over-write.\n\t$ cat afile\n\t$ hello world // this is output.\n\techo \"hello world\" >> afile // this will append to afile.\n\n### redirecting an standard error\n\n\t$ ls fakefile\n\t$ ls: fakefile: No such file or directory\n\t$ ls fakefile > log // this won't be any output in log file.\n\t$ cat log\n\t$ ls fakefile 2> log // 2 in front of the arrow is a standard error output. \n\t$ cd fakedirectory 2>> log // this will append the error to log.\n\t$ cat log\n\t$ ls Docufakedir >> log 2>&1 // will append error to log\n\t\n\n\nOutputing standard output and standard error.\n\t\n\t$ ls Documents >> log 2>&1\n\n\n## 8. Managing Processes on Mac OSX\n\n## 9. SSH Keys for Password-Less Logins\n\n## 10. Working With Remote Files: SCP, SFTP, and cURL\n\n## 11. A Primer to Bash Scripting/Aliasing\n\n## 12. Automated Background Processes\n\n## 13. Configuring the Apache Web Server\n\n## 14. Customizing the terminal\n\nFor zsh, read ,this](http://stevelosh.com/blog/2010/02/my-extravagant-zsh-prompt/) or [Link: this article](http://www.dawoodfall.net/index.php/custom-zsh-prompts)\n\n[Link: Bash Prompt Escape Sequences](http://tldp.org/HOWTO/Bash-Prompt-HOWTO/bash-prompt-escape-sequences.html)\n[Link: Bash Shell PS1: 10 Examples to Make Your Linux Prompt like Angelina Jolie](http://www.thegeekstuff.com/2008/09/bash-shell-ps1-10-examples-to-make-your-linux-prompt-like-angelina-jolie/)\n\n\t$ echo $PS1\n\t$ export PS1=\"[\\u]\" // this will use the username\n\t[username]\n\t$ export PS1=\"[\\W:\\u]\" // \\W shows the base name of the current working dir\n\t$ export PS1=\"[\\u@\\h:\\W $]\" //\\h the hostname upto the first `.\n\t\nThese changes are temporaly. In order to make it permanent, open .bash_profile.\n\n\texport PS1=\"\\u@\\h:\\W $ \"\t\n\n\n[Link: http://geoff.greer.fm/lscolors/](http://geoff.greer.fm/lscolors/)\n\n\n"}