{"context": " More than 1 year has passed since last update.\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\ngem 'guard-rspec', require: false\n\n\n\u521d\u671f\u5316\n$ bundle exec guard init\n\n\u81ea\u52d5\u751f\u6210\u30d5\u30a1\u30a4\u30eb:Guardfile\n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\n## Uncomment and set this to only include directories you want to watch\n# directories %w(app lib config test spec features)\n\n## Uncomment to clear the screen before every task\n# clearing :on\n\n## Guard internally checks for changes in the Guardfile and exits.\n## If you want Guard to automatically start up again, run guard in a\n## shell loop, e.g.:\n##\n##  $ while bundle exec guard; do echo \"Restarting Guard...\"; done\n##\n## Note: if you are using the `directories` clause above and you are not\n## watching the project directory ('.'), then you will want to move\n## the Guardfile to a watched dir and symlink it back, e.g.\n#\n#  $ mkdir config\n#  $ mv Guardfile config/\n#  $ ln -s config/Guardfile .\n#\n# and, you'll have to watch \"config/Guardfile\" instead of \"Guardfile\"\n\n# Note: The cmd option is now required due to the increasing number of ways\n#       rspec may be run, below are examples of the most common uses.\n#  * bundler: 'bundle exec rspec'\n#  * bundler binstubs: 'bin/rspec'\n#  * spring: 'bin/rspec' (This will use spring if running and you have\n#                          installed the spring binstubs per the docs)\n#  * zeus: 'zeus rspec' (requires the server to be started separately)\n#  * 'just' rspec: 'rspec'\n\nguard :rspec, cmd: \"bundle exec rspec\" do\n  require \"guard/rspec/dsl\"\n  dsl = Guard::RSpec::Dsl.new(self)\n\n  # Feel free to open issues for suggestions and improvements\n\n  # RSpec files\n  rspec = dsl.rspec\n  watch(rspec.spec_helper) { rspec.spec_dir }\n  watch(rspec.spec_support) { rspec.spec_dir }\n  watch(rspec.spec_files)\n\n  # Ruby files\n  ruby = dsl.ruby\n  dsl.watch_spec_files_for(ruby.lib_files)\n\n  # Rails files\n  rails = dsl.rails(view_extensions: %w(erb haml slim))\n  dsl.watch_spec_files_for(rails.app_files)\n  dsl.watch_spec_files_for(rails.views)\n\n  watch(rails.controllers) do |m|\n    [\n      rspec.spec.(\"routing/#{m[1]}_routing\"),\n      rspec.spec.(\"controllers/#{m[1]}_controller\"),\n      rspec.spec.(\"acceptance/#{m[1]}\")\n    ]\n  end\n\n  # Rails config changes\n  watch(rails.spec_helper)     { rspec.spec_dir }\n  watch(rails.routes)          { \"#{rspec.spec_dir}/routing\" }\n  watch(rails.app_controller)  { \"#{rspec.spec_dir}/controllers\" }\n\n  # Capybara features specs\n  watch(rails.view_dirs)     { |m| rspec.spec.(\"features/#{m[1]}\") }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$}) do |m|\n    Dir[File.join(\"**/#{m[1]}.feature\")][0] || \"spec/acceptance\"\n  end\nend\n\n\n\n\u9ad8\u901f\u5316\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001Spring\u304c\u4f7f\u308f\u308c\u306a\u3044\u306e\u3067spring\u3092\u8ffd\u52a0\u3057\u3066\u9ad8\u901f\u5316\u3059\u308b\n\u4fee\u6b63\u524d\nguard :rspec, cmd: \"bundle exec rspec\" do\n\n\u4fee\u6b63\u5f8c\nguard :rspec, cmd: \"bundle exec spring rspec\" do\n\n\n\u5b9f\u884c\n$ bundle exec guard\n\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```Gemfile\ngem 'guard-rspec', require: false\n```\n\n# \u521d\u671f\u5316\n\n```\n$ bundle exec guard init\n```\n\n\u81ea\u52d5\u751f\u6210\u30d5\u30a1\u30a4\u30eb:Guardfile\n\n```Guardfile\n# A sample Guardfile\n# More info at https://github.com/guard/guard#readme\n\n## Uncomment and set this to only include directories you want to watch\n# directories %w(app lib config test spec features)\n\n## Uncomment to clear the screen before every task\n# clearing :on\n\n## Guard internally checks for changes in the Guardfile and exits.\n## If you want Guard to automatically start up again, run guard in a\n## shell loop, e.g.:\n##\n##  $ while bundle exec guard; do echo \"Restarting Guard...\"; done\n##\n## Note: if you are using the `directories` clause above and you are not\n## watching the project directory ('.'), then you will want to move\n## the Guardfile to a watched dir and symlink it back, e.g.\n#\n#  $ mkdir config\n#  $ mv Guardfile config/\n#  $ ln -s config/Guardfile .\n#\n# and, you'll have to watch \"config/Guardfile\" instead of \"Guardfile\"\n\n# Note: The cmd option is now required due to the increasing number of ways\n#       rspec may be run, below are examples of the most common uses.\n#  * bundler: 'bundle exec rspec'\n#  * bundler binstubs: 'bin/rspec'\n#  * spring: 'bin/rspec' (This will use spring if running and you have\n#                          installed the spring binstubs per the docs)\n#  * zeus: 'zeus rspec' (requires the server to be started separately)\n#  * 'just' rspec: 'rspec'\n\nguard :rspec, cmd: \"bundle exec rspec\" do\n  require \"guard/rspec/dsl\"\n  dsl = Guard::RSpec::Dsl.new(self)\n\n  # Feel free to open issues for suggestions and improvements\n\n  # RSpec files\n  rspec = dsl.rspec\n  watch(rspec.spec_helper) { rspec.spec_dir }\n  watch(rspec.spec_support) { rspec.spec_dir }\n  watch(rspec.spec_files)\n\n  # Ruby files\n  ruby = dsl.ruby\n  dsl.watch_spec_files_for(ruby.lib_files)\n\n  # Rails files\n  rails = dsl.rails(view_extensions: %w(erb haml slim))\n  dsl.watch_spec_files_for(rails.app_files)\n  dsl.watch_spec_files_for(rails.views)\n\n  watch(rails.controllers) do |m|\n    [\n      rspec.spec.(\"routing/#{m[1]}_routing\"),\n      rspec.spec.(\"controllers/#{m[1]}_controller\"),\n      rspec.spec.(\"acceptance/#{m[1]}\")\n    ]\n  end\n\n  # Rails config changes\n  watch(rails.spec_helper)     { rspec.spec_dir }\n  watch(rails.routes)          { \"#{rspec.spec_dir}/routing\" }\n  watch(rails.app_controller)  { \"#{rspec.spec_dir}/controllers\" }\n\n  # Capybara features specs\n  watch(rails.view_dirs)     { |m| rspec.spec.(\"features/#{m[1]}\") }\n\n  # Turnip features and steps\n  watch(%r{^spec/acceptance/(.+)\\.feature$})\n  watch(%r{^spec/acceptance/steps/(.+)_steps\\.rb$}) do |m|\n    Dir[File.join(\"**/#{m[1]}.feature\")][0] || \"spec/acceptance\"\n  end\nend\n\n```\n\n# \u9ad8\u901f\u5316\n\n\u3053\u306e\u307e\u307e\u3060\u3068\u3001Spring\u304c\u4f7f\u308f\u308c\u306a\u3044\u306e\u3067`spring`\u3092\u8ffd\u52a0\u3057\u3066\u9ad8\u901f\u5316\u3059\u308b\n\n\u4fee\u6b63\u524d\n\n```Guardfile\nguard :rspec, cmd: \"bundle exec rspec\" do\n```\n\n\u4fee\u6b63\u5f8c\n\n```Guardfile\nguard :rspec, cmd: \"bundle exec spring rspec\" do\n```\n\n# \u5b9f\u884c\n\n```bash\n$ bundle exec guard\n``` \n", "tags": ["RSpec", "Guard", "spring"]}