{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u666e\u6bb5\u4ed5\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u304b\u306a\u308a\u8f9e\u66f8\u653b\u6483\u306b\u5f31\u305d\u3046\u306a\u3093\u3060\u3051\u3069\u3001\u305d\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3063\u3066\u3069\u308c\u304f\u3089\u3044\u52b9\u529b\u304c\u3042\u308b\u3093\u3060\u308d\uff1f\u3068\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u3001\u8f9e\u66f8\u653b\u6483\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u8f9e\u66f8\u653b\u6483\u7528\u30b3\u30fc\u30c9\nanalyse_term()\u306fuser_id\u3084\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u89e3\u6790\u3057\u3066\u3001\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\u3002\u4f8b\u3048\u3070\u3001cof@qiita.com\u304b\u3089\u306f\u3001'cof@qiita', 'qiita', 'com', 'qiita.com', 'cof'\u3068\u3044\u3046\u3088\u3046\u306a\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3002\nread_dictionaly()\u306f\u6240\u5b9a\u306e\u8f9e\u66f8\u3092\u8aad\u898b\u8fbc\u3080\u95a2\u6570\u3002\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u305f\u3068\u3053\u308d\u3056\u3063\u306850\u4e07\u8a9e\u304f\u3089\u3044\u306e\u8f9e\u66f8\u306f\u3042\u308b\u3088\u3046\u3067\u3042\u3063\u305f\u304c\u3001\u4eca\u56de\u306f\u5f8c\u8ff0\u3059\u308b7\u8a9e\u306e\u8f9e\u66f8\u3092\u4f7f\u7528\u3057\u305f\u3002\ncreate_direct_word()\u306f\u3001\u4f5c\u6210\u3057\u305f\u8f9e\u66f8\u306b\u542b\u307e\u308c\u308b\u30ef\u30fc\u30c9\u305d\u306e\u3082\u306e\u3092\u9806\u6b21\u751f\u6210\u3059\u308b\u95a2\u6570\u3002\ncreate_indirect_word()\u306f\u3001\u8f9e\u66f8\u306b\u542b\u307e\u308c\u308b\u30ef\u30fc\u30c9\u306b\u6307\u5b9a\u3055\u308c\u305f\u6587\u5b57\u6570\u3092\u8db3\u3057\u305f\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\uff08\u4f8b\u3048\u3070\u3001\u8f9e\u66f8\u306bboy\u304c\u542b\u307e\u308c\u30012\u6587\u5b57\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u3001boy01\u3068\u304b\u3001boyaa\u3068\u304b\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\uff09\n\u306a\u304a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092==\u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u306f\u4f8b\u3048\u3070zip\u7b49\u306e\u30d5\u30a1\u30a4\u30eb\u56de\u7b54\u306e\u89e3\u6790\u7d50\u679c\u306b\u7f6e\u304d\u63db\u3048\u3066\u3082\u69cb\u308f\u306a\u3044\u3002\nimport itertools\ndef analyse_term(term):\n    ans = []\n    if not term:\n        return ans\n    for symbol in '!\"@#$%&\\'()=~-^\\\\|`{}[]:*;+<>,./?\\_':\n        if symbol in term:\n            for t in term.split(symbol):\n                ans.append(t)\n                ans += analyse_term(t)\n    return ans\n\ndef read_dictionaly(dictionaly_file):\n    f = open(dictionaly_file)\n    words = set(map(lambda x: x.replace('\\n','').replace('\\r',''), f.readlines()))\n    f.close()\n    return words\n\ndef create_direct_word(dictionaly):\n    for term in dictionaly:\n        yield term\n\ndef create_indirect_word(dictionaly,string,additional_num):\n    for term in dictionaly:\n        for s in itertools.combinations_with_replacement(string,additional_num):\n            s = ''.join(s)\n            yield s+term\n            yield term+s\n\ndef dictionaly_attack(user_id, string, dictionaly_file, max_additional_num, answer):\n    dictionaly = set(analyse_term(user_id))\n    print dictionaly\n    dictionaly |= set(read_dictionaly(dictionaly_file))\n    print dictionaly\n    for term in create_direct_word(dictionaly):\n        #print term\n        if term == answer:\n            return term\n    for i in range(1,max_additional_num+1):\n        for term in create_indirect_word(dictionaly,string,i):\n            #print term\n            if term == answer:\n                return term\n    return False\n\n\n\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\n\u3068\u308a\u3042\u3048\u305a\u601d\u3044\u3064\u3044\u305f\u307e\u307e\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\nboy\ngirl\nguy\nman\nwoman\ngentleman\nlady\n\n\n\u30e1\u30a4\u30f3\u30b9\u30af\u30ea\u30d7\u30c8\n\u4f7f\u7528\u6587\u5b57\u3092\u5c0f\u6587\u5b57\u3001\u30b9\u30da\u30fc\u30b9\u3001\u6570\u5b57\u306b\u7d5e\u308a\u3001user_id\u3092cof@qiita.com\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092girl012\u3068\u3057\u3066\u30a2\u30bf\u30c3\u30af\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u304a\u3088\u305d0.03\u79d2\u3067\u767a\u898b\u3067\u304d\u305f\u3002\n# coding: utf-8\n# Here your code !\nfrom attack import dictionaly_attack\nimport time\n\nuser_id = 'cof@qiita.com'\ndictionaly_file = \"dictionaly.txt\"\npassword = 'gir012'\nstring = 'abcdefghijklmnopqrstuvwxyz 0123456789'\nstart = time.time()\nans = dictionaly_attack(user_id,  string, dictionaly_file, 3, password)\nelapsed_time = time.time() - start\nprint ans,password\nprint (\"elapsed_time:{0}\".format(elapsed_time)) + \"[sec]\"\n\n\n\u5b9f\u884c\u7d50\u679c\n\u8f9e\u66f8\u304c\u5c0f\u3055\u3044\u304b\u3089\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u610f\u5916\u306b\u3042\u3063\u3055\u308a\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u666e\u6bb5\u4ed5\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u3082\u3001\u3044\u3044\u3068\u30531\u5206\u3082\u3064\u304b\u3069\u3046\u304b\u304f\u3089\u3044\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\nset(['cof@qiita.com', 'cof@qiita', 'qiita', 'cof', 'com', 'qiita.com'])\nset(['boy', 'woman', 'cof@qiita.com', 'cof@qiita', 'lady', 'qiita', 'gentleman', 'cof', 'girl', 'com', 'guy', 'qiita.com', 'man'])\ngirl012 girl012\nelapsed_time:0.0296669006348[sec]\n\n\u6982\u8981\n----\n\u666e\u6bb5\u4ed5\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u304b\u306a\u308a\u8f9e\u66f8\u653b\u6483\u306b\u5f31\u305d\u3046\u306a\u3093\u3060\u3051\u3069\u3001\u305d\u306e\u30d1\u30b9\u30ef\u30fc\u30c9\u3063\u3066\u3069\u308c\u304f\u3089\u3044\u52b9\u529b\u304c\u3042\u308b\u3093\u3060\u308d\uff1f\u3068\u7591\u554f\u306b\u601d\u3063\u305f\u306e\u3067\u3001\u8f9e\u66f8\u653b\u6483\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u8f9e\u66f8\u653b\u6483\u7528\u30b3\u30fc\u30c9\n---\n\nanalyse_term()\u306fuser_id\u3084\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u89e3\u6790\u3057\u3066\u3001\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u95a2\u6570\u3002\u4f8b\u3048\u3070\u3001cof@qiita.com\u304b\u3089\u306f\u3001`'cof@qiita', 'qiita', 'com', 'qiita.com', 'cof'`\u3068\u3044\u3046\u3088\u3046\u306a\u8f9e\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3002\nread_dictionaly()\u306f\u6240\u5b9a\u306e\u8f9e\u66f8\u3092\u8aad\u898b\u8fbc\u3080\u95a2\u6570\u3002\u30cd\u30c3\u30c8\u3067\u8abf\u3079\u305f\u3068\u3053\u308d\u3056\u3063\u306850\u4e07\u8a9e\u304f\u3089\u3044\u306e\u8f9e\u66f8\u306f\u3042\u308b\u3088\u3046\u3067\u3042\u3063\u305f\u304c\u3001\u4eca\u56de\u306f\u5f8c\u8ff0\u3059\u308b7\u8a9e\u306e\u8f9e\u66f8\u3092\u4f7f\u7528\u3057\u305f\u3002\ncreate_direct_word()\u306f\u3001\u4f5c\u6210\u3057\u305f\u8f9e\u66f8\u306b\u542b\u307e\u308c\u308b\u30ef\u30fc\u30c9\u305d\u306e\u3082\u306e\u3092\u9806\u6b21\u751f\u6210\u3059\u308b\u95a2\u6570\u3002\ncreate_indirect_word()\u306f\u3001\u8f9e\u66f8\u306b\u542b\u307e\u308c\u308b\u30ef\u30fc\u30c9\u306b\u6307\u5b9a\u3055\u308c\u305f\u6587\u5b57\u6570\u3092\u8db3\u3057\u305f\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\uff08\u4f8b\u3048\u3070\u3001\u8f9e\u66f8\u306bboy\u304c\u542b\u307e\u308c\u30012\u6587\u5b57\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u305f\u5834\u5408\u306b\u3001boy01\u3068\u304b\u3001boyaa\u3068\u304b\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\uff09\n\u306a\u304a\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u304c\u6b63\u3057\u3044\u304b\u3069\u3046\u304b\u3092==\u3067\u5224\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u3053\u308c\u306f\u4f8b\u3048\u3070zip\u7b49\u306e\u30d5\u30a1\u30a4\u30eb\u56de\u7b54\u306e\u89e3\u6790\u7d50\u679c\u306b\u7f6e\u304d\u63db\u3048\u3066\u3082\u69cb\u308f\u306a\u3044\u3002\n\n```py\nimport itertools\ndef analyse_term(term):\n    ans = []\n    if not term:\n        return ans\n    for symbol in '!\"@#$%&\\'()=~-^\\\\|`{}[]:*;+<>,./?\\_':\n        if symbol in term:\n            for t in term.split(symbol):\n                ans.append(t)\n                ans += analyse_term(t)\n    return ans\n\ndef read_dictionaly(dictionaly_file):\n    f = open(dictionaly_file)\n    words = set(map(lambda x: x.replace('\\n','').replace('\\r',''), f.readlines()))\n    f.close()\n    return words\n\ndef create_direct_word(dictionaly):\n    for term in dictionaly:\n        yield term\n\ndef create_indirect_word(dictionaly,string,additional_num):\n    for term in dictionaly:\n        for s in itertools.combinations_with_replacement(string,additional_num):\n            s = ''.join(s)\n            yield s+term\n            yield term+s\n\ndef dictionaly_attack(user_id, string, dictionaly_file, max_additional_num, answer):\n    dictionaly = set(analyse_term(user_id))\n    print dictionaly\n    dictionaly |= set(read_dictionaly(dictionaly_file))\n    print dictionaly\n    for term in create_direct_word(dictionaly):\n        #print term\n        if term == answer:\n            return term\n    for i in range(1,max_additional_num+1):\n        for term in create_indirect_word(dictionaly,string,i):\n            #print term\n            if term == answer:\n                return term\n    return False\n```\n\n\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\n---\n\u3068\u308a\u3042\u3048\u305a\u601d\u3044\u3064\u3044\u305f\u307e\u307e\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\n\n```\nboy\ngirl\nguy\nman\nwoman\ngentleman\nlady\n```\n\n\u30e1\u30a4\u30f3\u30b9\u30af\u30ea\u30d7\u30c8\n---\n\u4f7f\u7528\u6587\u5b57\u3092\u5c0f\u6587\u5b57\u3001\u30b9\u30da\u30fc\u30b9\u3001\u6570\u5b57\u306b\u7d5e\u308a\u3001user_id\u3092cof@qiita.com\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3092girl012\u3068\u3057\u3066\u30a2\u30bf\u30c3\u30af\u3057\u3066\u307f\u305f\u3068\u3053\u308d\u3001\u304a\u3088\u305d0.03\u79d2\u3067\u767a\u898b\u3067\u304d\u305f\u3002\n\n```py\n# coding: utf-8\n# Here your code !\nfrom attack import dictionaly_attack\nimport time\n\nuser_id = 'cof@qiita.com'\ndictionaly_file = \"dictionaly.txt\"\npassword = 'gir012'\nstring = 'abcdefghijklmnopqrstuvwxyz 0123456789'\nstart = time.time()\nans = dictionaly_attack(user_id,  string, dictionaly_file, 3, password)\nelapsed_time = time.time() - start\nprint ans,password\nprint (\"elapsed_time:{0}\".format(elapsed_time)) + \"[sec]\"\n```\n\n\u5b9f\u884c\u7d50\u679c\n---\n\u8f9e\u66f8\u304c\u5c0f\u3055\u3044\u304b\u3089\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u304c\u3001\u610f\u5916\u306b\u3042\u3063\u3055\u308a\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u767a\u898b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\u666e\u6bb5\u4ed5\u4e8b\u3067\u4f7f\u3063\u3066\u3044\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u3082\u3001\u3044\u3044\u3068\u30531\u5206\u3082\u3064\u304b\u3069\u3046\u304b\u304f\u3089\u3044\u3058\u3083\u306a\u304b\u308d\u3046\u304b\u3002\n\n```\nset(['cof@qiita.com', 'cof@qiita', 'qiita', 'cof', 'com', 'qiita.com'])\nset(['boy', 'woman', 'cof@qiita.com', 'cof@qiita', 'lady', 'qiita', 'gentleman', 'cof', 'girl', 'com', 'guy', 'qiita.com', 'man'])\ngirl012 girl012\nelapsed_time:0.0296669006348[sec]\n```\n", "tags": ["\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3"]}