{"context": " More than 1 year has passed since last update.map\u3057\u305f\u3082\u306e\u3092values-list\u3067\u8fd4\u3059\u306e\u3068\u3001\u30ea\u30b9\u30c8\u306f\u4f5c\u3089\u306a\u3044\u3067\u591a\u5024\u3092\u8fd4\u3059\u65b9\u6cd5\u3067\u306f\u3001\u3069\u3063\u3061\u304c\u826f\u3044\u306e\u304b\u8abf\u3079\u3066\u307f\u305f\u304b\u3063\u305f\u3002\n\u591a\u5024\u304c5\u3064\u4f4d\u3060\u3063\u305f\u3089\u3001\u76f4\u63a5\u8fd4\u3057\u3066\u3082\u30b3\u30f3\u30b9\u304c\u5c11\u306a\u3044\u306e\u3067\u5143\u304c\u53d6\u308c\u308b\u304b\u3082\n\u591a\u304f\u306a\u308b\u3068\u3001\u30b3\u30f3\u30b9\u306f\u5c11\u306a\u3044\u3051\u3069\u304b\u306a\u308a\u9045\u304f\u306a\u308b\n(defun values-map (fn list)\n  (declare (function fn)\n           (optimize (debug 1) (speed 3)))\n  (if (endp list)\n      (values)\n      (multiple-value-call #'values\n                           (funcall fn (car list))\n                           (values-map fn (cdr list)))))\n\n(defun values-map2 (fn list)\n  (declare (function fn)\n           (optimize (debug 1) (speed 3)))\n  (values-list (mapcar fn list)))\n\n\n(defvar *5-data*\n  (srfi-1:iota 5))\n\n\n(loop :repeat 100000 :do (values-map #'identity *5-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.036 seconds of real time\n  0.036002 seconds of total run time (0.036002 user, 0.000000 system)\n  100.00% CPU\n  87,716,718 processor cycles\n  0 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\n(loop :repeat 100000 :do (values-map2 #'identity *5-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.017 seconds of real time\n  0.020001 seconds of total run time (0.020001 user, 0.000000 system)\n  117.65% CPU\n  39,264,201 processor cycles\n  9,601,024 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\n(defvar *100-data*\n  (srfi-1:iota 100))\n\n(loop :repeat 100000 :do (values-map #'identity *100-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  2.183 seconds of real time\n  2.168135 seconds of total run time (2.168135 user, 0.000000 system)\n  99.31% CPU\n  5,226,740,100 processor cycles\n  0 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\n\n(loop :repeat 100000 :do (values-map2 #'identity *100-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.163 seconds of real time\n  0.160010 seconds of total run time (0.152009 user, 0.008001 system)\n  [ Run times consist of 0.012 seconds GC time, and 0.149 seconds non-GC time. ]\n  98.16% CPU\n  388,223,343 processor cycles\n  161,615,360 bytes consed\n\nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\nmap\u3057\u305f\u3082\u306e\u3092values-list\u3067\u8fd4\u3059\u306e\u3068\u3001\u30ea\u30b9\u30c8\u306f\u4f5c\u3089\u306a\u3044\u3067\u591a\u5024\u3092\u8fd4\u3059\u65b9\u6cd5\u3067\u306f\u3001\u3069\u3063\u3061\u304c\u826f\u3044\u306e\u304b\u8abf\u3079\u3066\u307f\u305f\u304b\u3063\u305f\u3002\n\u591a\u5024\u304c5\u3064\u4f4d\u3060\u3063\u305f\u3089\u3001\u76f4\u63a5\u8fd4\u3057\u3066\u3082\u30b3\u30f3\u30b9\u304c\u5c11\u306a\u3044\u306e\u3067\u5143\u304c\u53d6\u308c\u308b\u304b\u3082\n\u591a\u304f\u306a\u308b\u3068\u3001\u30b3\u30f3\u30b9\u306f\u5c11\u306a\u3044\u3051\u3069\u304b\u306a\u308a\u9045\u304f\u306a\u308b\n\n```cl\n(defun values-map (fn list)\n  (declare (function fn)\n           (optimize (debug 1) (speed 3)))\n  (if (endp list)\n      (values)\n      (multiple-value-call #'values\n                           (funcall fn (car list))\n                           (values-map fn (cdr list)))))\n\n(defun values-map2 (fn list)\n  (declare (function fn)\n           (optimize (debug 1) (speed 3)))\n  (values-list (mapcar fn list)))\n\n```\n\n```cl\n(defvar *5-data*\n  (srfi-1:iota 5))\n\n\n(loop :repeat 100000 :do (values-map #'identity *5-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.036 seconds of real time\n  0.036002 seconds of total run time (0.036002 user, 0.000000 system)\n  100.00% CPU\n  87,716,718 processor cycles\n  0 bytes consed\n  \nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\n(loop :repeat 100000 :do (values-map2 #'identity *5-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.017 seconds of real time\n  0.020001 seconds of total run time (0.020001 user, 0.000000 system)\n  117.65% CPU\n  39,264,201 processor cycles\n  9,601,024 bytes consed\n  \nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n```\n\n```cl\n(defvar *100-data*\n  (srfi-1:iota 100))\n\n(loop :repeat 100000 :do (values-map #'identity *100-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  2.183 seconds of real time\n  2.168135 seconds of total run time (2.168135 user, 0.000000 system)\n  99.31% CPU\n  5,226,740,100 processor cycles\n  0 bytes consed\n  \nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n\n\n(loop :repeat 100000 :do (values-map2 #'identity *100-data*))\n;\u21d2 NIL\n#|------------------------------------------------------------|\nEvaluation took:\n  0.163 seconds of real time\n  0.160010 seconds of total run time (0.152009 user, 0.008001 system)\n  [ Run times consist of 0.012 seconds GC time, and 0.149 seconds non-GC time. ]\n  98.16% CPU\n  388,223,343 processor cycles\n  161,615,360 bytes consed\n  \nIntel(R) Core(TM)2 Duo CPU     P8600  @ 2.40GHz\n |------------------------------------------------------------|#\n```\n", "tags": ["common-lisp"]}