{"tags": ["JavaScript", "promise", "bluebird", "CoffeeScript"], "context": " More than 1 year has passed since last update.ES6 \u3067\u5b9f\u88c5\u3055\u308c\u308b\u975e\u540c\u671f\u51e6\u7406\u3092\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u3055\u3070\u3051\u308b Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3053\u3068\u306f\u3058\u3081\n\u3082\u3046 jQuery.Deferred \u306b\u983c\u3089\u306a\u304f\u3066\u5927\u4e08\u592b\u3001\u3063\u3066\u3044\u3046\u304b Promise \u306e\u4ed5\u69d8\u3068\u306f\u307e\u305f\u9055\u3046\u306e\u3067\u65e9\u3044\u3068\u3053\u4e57\u308a\u63db\u3048\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\n\u30d5\u30ed\u30f3\u30c8\u3067\u5229\u7528\u3059\u308b\u306a\u3089\u73fe\u72b6\u306f\u4e92\u63db\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\nes6-promise \u3068\u8ff7\u3063\u305f\u3051\u3069\u3001\u4ed5\u69d8\u306b\u3061\u3083\u3093\u3068\u6cbf\u3063\u3066\u308b\u304b\u3064\u30d1\u30ef\u30d5\u30eb\u306a bluebird \u306b\u3057\u307e\u3057\u305f\nhttps://github.com/petkaantonov/bluebird\n\u901a\u4fe1\nPromise = require 'bluebird'\n\nget = (url) ->\n  new Promise (resolve, reject) ->\n    req = new XMLHttpRequest\n    req.open 'GET', url, true\n    req.onload = ->\n      if req.status is 200\n        resolve req.responseText\n      else\n        reject new Error(req.statusText)\n    req.onerror = ->\n      reject new Error(req.statusText)\n    req.send()\n\nget('/path/url')\n.then (res) ->\n.catch (err) ->\n\n\u8907\u6570\u51e6\u7406\u306e\u5b8c\u4e86\u5f85\u3061\u306f\u4f8b\u3048\u3070\u3053\u3046\u304b\u306a\nsomeFunc = ->\n  promises = []\n  for file in arr\n    promises.push do (file) ->\n      new Promise (resolve, reject) ->\n        onsuccess = -> resolve()\n        onerror = -> reject()\n\n  new Promise.all promises\n\nsomeFunc().then ->\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d1\u30bf\u30fc\u30f3\u306a\u3093\u304b\u3088\u308a\u5e78\u305b\u306b\u306a\u308c\u308b\u3068\u304a\u3082\u3044\u307e\u3059\n \nES6 \u3067\u5b9f\u88c5\u3055\u308c\u308b\u975e\u540c\u671f\u51e6\u7406\u3092\u30b7\u30f3\u30d7\u30eb\u304b\u3064\u30a8\u30ec\u30ac\u30f3\u30c8\u306b\u3055\u3070\u3051\u308b Promise \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3053\u3068\u306f\u3058\u3081\n \n\u3082\u3046 jQuery.Deferred \u306b\u983c\u3089\u306a\u304f\u3066\u5927\u4e08\u592b\u3001\u3063\u3066\u3044\u3046\u304b Promise \u306e\u4ed5\u69d8\u3068\u306f\u307e\u305f\u9055\u3046\u306e\u3067\u65e9\u3044\u3068\u3053\u4e57\u308a\u63db\u3048\u305f\u307b\u3046\u304c\u3044\u3044\u304b\u3082\n\n\u30d5\u30ed\u30f3\u30c8\u3067\u5229\u7528\u3059\u308b\u306a\u3089\u73fe\u72b6\u306f\u4e92\u63db\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3044\u307e\u3057\u3087\u3046\n\nes6-promise \u3068\u8ff7\u3063\u305f\u3051\u3069\u3001\u4ed5\u69d8\u306b\u3061\u3083\u3093\u3068\u6cbf\u3063\u3066\u308b\u304b\u3064\u30d1\u30ef\u30d5\u30eb\u306a bluebird \u306b\u3057\u307e\u3057\u305f\n\nhttps://github.com/petkaantonov/bluebird\n\n\u901a\u4fe1\n\n```coffeescript\nPromise = require 'bluebird'\n\nget = (url) ->\n  new Promise (resolve, reject) ->\n    req = new XMLHttpRequest\n    req.open 'GET', url, true\n    req.onload = ->\n      if req.status is 200\n        resolve req.responseText\n      else\n        reject new Error(req.statusText)\n    req.onerror = ->\n      reject new Error(req.statusText)\n    req.send()\n\nget('/path/url')\n.then (res) ->\n.catch (err) ->\n```\n\n\u8907\u6570\u51e6\u7406\u306e\u5b8c\u4e86\u5f85\u3061\u306f\u4f8b\u3048\u3070\u3053\u3046\u304b\u306a\n\n```coffeescript\nsomeFunc = ->\n  promises = []\n  for file in arr\n    promises.push do (file) ->\n      new Promise (resolve, reject) ->\n        onsuccess = -> resolve()\n        onerror = -> reject()\n\n  new Promise.all promises\n\nsomeFunc().then ->\n```\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30d1\u30bf\u30fc\u30f3\u306a\u3093\u304b\u3088\u308a\u5e78\u305b\u306b\u306a\u308c\u308b\u3068\u304a\u3082\u3044\u307e\u3059\n"}