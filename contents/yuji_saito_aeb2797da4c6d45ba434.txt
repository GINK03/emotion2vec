{"context": "\n\n\u7d4c\u7def\u3068\u3084\u308a\u305f\u3044\u3053\u3068\n\u793e\u5185\u3067Redshift\u304c\u5e83\u304f\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u8272\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u3084\u4eba\u304b\u3089\u8272\u3005\u306a\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u4e45\u3057\u3044\u3002\n\u6642\u9593\u306e\u639b\u304b\u3063\u305f\u30af\u30a8\u30ea\u304c\u81ea\u52d5\u7684\u306b\u901a\u77e5\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u3084\u3063\u305f\u3053\u3068\nLambda\u306eS3\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u3001\u305d\u3053\u3078\u76ee\u639b\u3051\u3066Redshift\u3067unload\u3092\u5b9f\u884c\u3002\n\n1.\u5b9f\u884c\u3059\u308b\u30af\u30a8\u30ea\nSTL_QUERY\u3092\u5229\u7528\n\u53c2\u8003\uff1ahttp://docs.aws.amazon.com/ja_jp/redshift/latest/dg/r_STL_QUERY.html\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002querytxt\u306f\u901a\u77e5\u5148\u306e\u30c4\u30fc\u30eb\u3067\u898b\u3084\u3059\u3044\u304f\u3089\u3044\u306e\u3082\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\nselect_slowlogquery.sql\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >='2016-11-07 10:00:00' and starttime <'2016-11-08 10:00:00' order by query_time desc limit 100;\n\n\n\u5229\u7528\u6642\u9593\u5e2f\u3067\u96c6\u4e2d\u3057\u3066\u305f\u3089\u305d\u3063\u3061\u304c\u539f\u56e0\uff08\u304b\u3082\uff09\u3068\u4e00\u76ee\u3067\u5206\u304b\u308b\u306e\u3067\u3001\u958b\u59cb\u6642\u523b\uff0b\u6240\u8981\u6642\u9593\u304c\u826f\u3044\u3068\u601d\u3046\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068STL_QUERY\u306f2\uff5e5\u65e5\u5206\u3057\u304b\u6b8b\u3063\u3066\u3044\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3060\u304c\u3001\u9006\u306b\u8a00\u3048\u3070\u6628\u65e5\u5206\u306f\u6b8b\u3063\u3066\u3044\u308b\uff08\u304d\u3063\u3068\uff09\u306e\u3067\u3001\u3053\u3046\u3057\u305f\u3053\u3068\u306b\u5411\u3044\u3066\u308b\u306f\u305a\u3002\n\n2. \u672c\u65e5\u306e\u30b2\u30b9\u30c8\uff1alambda\u3055\u3093\n\u8a00\u8a9e\u306fNode.js 4.3\u3067\u3001\u30c8\u30ea\u30ac\u30fc\u306f\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306bs3-get-object\u3092\u5229\u7528\u3002\n\u30e1\u30e2\u3068\u3057\u3066Prefix\u3001Suffix\u306f\u4ee5\u4e0b\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3002\n- Prefix :\u3000path1/lambda/send_mail/\n- Suffix :\u3000\u306a\u3057\nvar topicArn = '\uff08\u2605\u901a\u77e5\u3057\u305f\u3044Arn\u3092\u66f8\u304f\uff09';\nvar errorThreshold = 524288; // 500KB\u3092\u8d85\u3048\u305f\u3089\u30a8\u30e9\u30fc\u3002\n\nvar aws = require('aws-sdk');\nvar readline = require('readline');\n\nvar s3 = new aws.S3({ apiVersion: '2006-03-01' });\nvar sns = new aws.SNS();\n\nexports.handler = function(event, context) {\n\n    var bucket = event.Records[0].s3.bucket.name;\n    var key = event.Records[0].s3.object.key;\n    var mailBody ='message from lambda.\\n\\n';\n    var mailSubject =\"[information from lambda]\" + key.substring(key.lastIndexOf('/')+1);\n\n    s3.getObject({\n        Bucket:bucket,\n        Key:key\n    },\n    function(err,data) {\n        if (err) {\n            console.log(err);\n            context.succeed('error','FileGetError:'+err);\n        }\n        else {\n\n            if(data.ContentLength >errorThreshold){\n                mailSubject += \" [SIZE ERROR!]\";\n                mailBody += \"data size error! file size(\"+data.ContentLength+\") is over errorThreshold(\"+errorThreshold+\").\" ;\n            }else{\n                mailBody += data.Body;\n            }\n            sns.publish({\n                Message: mailBody,\n                Subject: mailSubject,\n                TopicArn: topicArn\n            }, function(err, data){\n                if(err) throw err;\n                else context.succeed('success.');\n            });\n        }\n    });    \n\n};\n\n\u3061\u3087\u3063\u3068\u5de5\u592b\n- \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u30e1\u30fc\u30eb\u306eSubject\u306b\u5165\u308c\u308b\n- \u30a2\u30c3\u30d7\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u304c\u4e00\u5b9a\u30b5\u30a4\u30ba\u4ee5\u4e0a\u3060\u3063\u305f\u3089\u30a8\u30e9\u30fc\n\n3. \u52d5\u4f5c\u30c6\u30b9\u30c8\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001lambda\u306e\u30c8\u30ea\u30ac\u306e\u7b87\u6240\u306b\u76ee\u639b\u3051\u3066unload\u3059\u308b\u3068\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\u3002\n\nunload.sql\nunload ('\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >=\\'2016-11-07 10:00:00\\' and starttime <\\'2016-11-08 10:00:00\\' order by query_time desc \n') \nto 's3://(Bucket\u540d)/path1/lambda/send_mail/rs_slowquerylog_20161106_.txt' CREDENTIALS \n'aws_access_key_id=XXXXXXXX;aws_secret_access_key=XXXXXXXX' delimiter '\\t' PARALLEL OFF  allowoverwrite;\n\n\n\u3061\u306a\u307f\u306bunload\u306e\u5834\u5408\u306flimit\u3092\u76f4\u63a5\u66f8\u3051\u306a\u3044\uff08\u3053\u308c\u3092\u3084\u3063\u3066\u3066\u521d\u3081\u3066\u77e5\u3063\u305f\uff09\u306e\u3067\u3001limit\u3092\u639b\u3051\u305f\u3044\u5834\u5408\u306f\n\nlimit_unload.sql\nunload ('\nselect * from (\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >=\\'2016-11-07 10:00:00\\' and starttime <\\'2016-11-08 10:00:00\\' order by query_time desc limit 100\n);\n') \nto 's3://(Bucket\u540d)/path1/lambda/send_mail/rs_slowquerylog_20161106_.txt' CREDENTIALS \n'aws_access_key_id=XXXXXXXX;aws_secret_access_key=XXXXXXXX' delimiter '\\t' PARALLEL OFF  allowoverwrite;\n\n\n\u3068\u30b5\u30d6\u30af\u30a8\u30ea\u306b\u3059\u308b\u3068\u52d5\u304f\uff08\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u305d\u3046\u66f8\u3044\u3066\u3042\u308b\uff09\u3002\n\n4.\u5b9a\u671f\u5b9f\u884c\n\u305d\u306e\u3001cron\u3068\u304b\u3067...\n\u3000\n\u3042\u3068\u3001\u3044\u307e\u3069\u304d\u30e1\u30fc\u30eb\u901a\u77e5\u306a\u306e\uff1f\u3068\u3044\u3046\u306e\u306f\u4e00\u65e6\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n# \u7d4c\u7def\u3068\u3084\u308a\u305f\u3044\u3053\u3068\n\u793e\u5185\u3067Redshift\u304c\u5e83\u304f\u4f7f\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u8272\u3005\u306a\u30b7\u30b9\u30c6\u30e0\u3084\u4eba\u304b\u3089\u8272\u3005\u306a\u30af\u30a8\u30ea\u304c\u5b9f\u884c\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u4e45\u3057\u3044\u3002\n\u6642\u9593\u306e\u639b\u304b\u3063\u305f\u30af\u30a8\u30ea\u304c\u81ea\u52d5\u7684\u306b\u901a\u77e5\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n# \u3084\u3063\u305f\u3053\u3068\nLambda\u306eS3\u306b\u4f5c\u6210\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u30e1\u30fc\u30eb\u9001\u4fe1\u3059\u308b\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u3001\u305d\u3053\u3078\u76ee\u639b\u3051\u3066Redshift\u3067unload\u3092\u5b9f\u884c\u3002\n\n\n## 1.\u5b9f\u884c\u3059\u308b\u30af\u30a8\u30ea\nSTL_QUERY\u3092\u5229\u7528\n\u53c2\u8003\uff1ahttp://docs.aws.amazon.com/ja_jp/redshift/latest/dg/r_STL_QUERY.html\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u3002querytxt\u306f\u901a\u77e5\u5148\u306e\u30c4\u30fc\u30eb\u3067\u898b\u3084\u3059\u3044\u304f\u3089\u3044\u306e\u3082\u306e\u304c\u826f\u3055\u305d\u3046\u3002\n\n```select_slowlogquery.sql\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >='2016-11-07 10:00:00' and starttime <'2016-11-08 10:00:00' order by query_time desc limit 100;\n```\n\u5229\u7528\u6642\u9593\u5e2f\u3067\u96c6\u4e2d\u3057\u3066\u305f\u3089\u305d\u3063\u3061\u304c\u539f\u56e0\uff08\u304b\u3082\uff09\u3068\u4e00\u76ee\u3067\u5206\u304b\u308b\u306e\u3067\u3001\u958b\u59cb\u6642\u523b\uff0b\u6240\u8981\u6642\u9593\u304c\u826f\u3044\u3068\u601d\u3046\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068STL_QUERY\u306f2\uff5e5\u65e5\u5206\u3057\u304b\u6b8b\u3063\u3066\u3044\u306a\u3044\u70b9\u306b\u6ce8\u610f\u3060\u304c\u3001\u9006\u306b\u8a00\u3048\u3070\u6628\u65e5\u5206\u306f\u6b8b\u3063\u3066\u3044\u308b\uff08\u304d\u3063\u3068\uff09\u306e\u3067\u3001\u3053\u3046\u3057\u305f\u3053\u3068\u306b\u5411\u3044\u3066\u308b\u306f\u305a\u3002\n\n## 2. \u672c\u65e5\u306e\u30b2\u30b9\u30c8\uff1alambda\u3055\u3093\n\u8a00\u8a9e\u306fNode.js 4.3\u3067\u3001\u30c8\u30ea\u30ac\u30fc\u306f\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u306bs3-get-object\u3092\u5229\u7528\u3002\n\u30e1\u30e2\u3068\u3057\u3066Prefix\u3001Suffix\u306f\u4ee5\u4e0b\u307f\u305f\u3044\u306a\u611f\u3058\u3067\u3002\n- Prefix :\u3000path1/lambda/send_mail/\n- Suffix :\u3000\u306a\u3057\n\n\n```\nvar topicArn = '\uff08\u2605\u901a\u77e5\u3057\u305f\u3044Arn\u3092\u66f8\u304f\uff09';\nvar errorThreshold = 524288; // 500KB\u3092\u8d85\u3048\u305f\u3089\u30a8\u30e9\u30fc\u3002\n\nvar aws = require('aws-sdk');\nvar readline = require('readline');\n\nvar s3 = new aws.S3({ apiVersion: '2006-03-01' });\nvar sns = new aws.SNS();\n\nexports.handler = function(event, context) {\n\n    var bucket = event.Records[0].s3.bucket.name;\n    var key = event.Records[0].s3.object.key;\n    var mailBody ='message from lambda.\\n\\n';\n    var mailSubject =\"[information from lambda]\" + key.substring(key.lastIndexOf('/')+1);\n\n    s3.getObject({\n        Bucket:bucket,\n        Key:key\n    },\n    function(err,data) {\n        if (err) {\n            console.log(err);\n            context.succeed('error','FileGetError:'+err);\n        }\n        else {\n\n            if(data.ContentLength >errorThreshold){\n                mailSubject += \" [SIZE ERROR!]\";\n                mailBody += \"data size error! file size(\"+data.ContentLength+\") is over errorThreshold(\"+errorThreshold+\").\" ;\n            }else{\n                mailBody += data.Body;\n            }\n            sns.publish({\n                Message: mailBody,\n                Subject: mailSubject,\n                TopicArn: topicArn\n            }, function(err, data){\n                if(err) throw err;\n                else context.succeed('success.');\n            });\n        }\n    });    \n\n};\n```\n\u3061\u3087\u3063\u3068\u5de5\u592b\n- \u30d5\u30a1\u30a4\u30eb\u540d\u3092\u30e1\u30fc\u30eb\u306eSubject\u306b\u5165\u308c\u308b\n- \u30a2\u30c3\u30d7\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u30b5\u30a4\u30ba\u304c\u4e00\u5b9a\u30b5\u30a4\u30ba\u4ee5\u4e0a\u3060\u3063\u305f\u3089\u30a8\u30e9\u30fc\n\n\n\n## 3. \u52d5\u4f5c\u30c6\u30b9\u30c8\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5f62\u3067\u3001lambda\u306e\u30c8\u30ea\u30ac\u306e\u7b87\u6240\u306b\u76ee\u639b\u3051\u3066unload\u3059\u308b\u3068\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\u3002\n\n```unload.sql\nunload ('\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >=\\'2016-11-07 10:00:00\\' and starttime <\\'2016-11-08 10:00:00\\' order by query_time desc \n') \nto 's3://(Bucket\u540d)/path1/lambda/send_mail/rs_slowquerylog_20161106_.txt' CREDENTIALS \n'aws_access_key_id=XXXXXXXX;aws_secret_access_key=XXXXXXXX' delimiter '\\t' PARALLEL OFF  allowoverwrite;\n```\n\n\u3061\u306a\u307f\u306bunload\u306e\u5834\u5408\u306flimit\u3092\u76f4\u63a5\u66f8\u3051\u306a\u3044\uff08\u3053\u308c\u3092\u3084\u3063\u3066\u3066\u521d\u3081\u3066\u77e5\u3063\u305f\uff09\u306e\u3067\u3001limit\u3092\u639b\u3051\u305f\u3044\u5834\u5408\u306f\n\n```limit_unload.sql\nunload ('\nselect * from (\nselect userid, starttime, datediff(second,starttime ,endtime) as query_time , substring(querytxt,0,250) from stl_query where datediff(second,starttime ,endtime) >=1 and starttime >=\\'2016-11-07 10:00:00\\' and starttime <\\'2016-11-08 10:00:00\\' order by query_time desc limit 100\n);\n') \nto 's3://(Bucket\u540d)/path1/lambda/send_mail/rs_slowquerylog_20161106_.txt' CREDENTIALS \n'aws_access_key_id=XXXXXXXX;aws_secret_access_key=XXXXXXXX' delimiter '\\t' PARALLEL OFF  allowoverwrite;\n```\n\u3068\u30b5\u30d6\u30af\u30a8\u30ea\u306b\u3059\u308b\u3068\u52d5\u304f\uff08\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u305d\u3046\u66f8\u3044\u3066\u3042\u308b\uff09\u3002\n\n## 4.\u5b9a\u671f\u5b9f\u884c\n\u305d\u306e\u3001cron\u3068\u304b\u3067...\n\n\u3000\n\n\u3042\u3068\u3001\u3044\u307e\u3069\u304d\u30e1\u30fc\u30eb\u901a\u77e5\u306a\u306e\uff1f\u3068\u3044\u3046\u306e\u306f\u4e00\u65e6\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\n", "tags": ["redshift", "lambda", "AWS", "Node.js"]}