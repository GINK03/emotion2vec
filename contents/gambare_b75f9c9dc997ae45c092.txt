{"context": "\u53c2\u8003\u5143:\nCOMPONENT INTERACTION\n\n\u89aa\u304b\u3089\u5b50\u306b\u60c5\u5831\u3092\u4e0e\u3048\u308b\u5834\u5408\n\u89aa\u306e\u5909\u5316\u3092\u5b50\u3067\u4f55\u304b\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nInput\u3092\u4f7f\u7528\u3059\u308b\n\u516c\u5f0f\n\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u306f\u89aa\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b@Input()\u30c7\u30b3\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u89aa\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e[]\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u5f15\u6570\u306a\u3057\u306e@Input() \u30d7\u30ed\u30d1\u30c6\u30a3\u540d :\u578b\u3067\u826f\u3044\u3067\u3059\u304c\u3001\u5909\u3048\u308b\u5834\u5408\u306f@Input('\u307b\u306b\u3083\u3089\u3089') \u30d7\u30ed\u30d1\u30c6\u30a3\u540d :\u578b\u306b\u3057\u307e\u3059\u3002\n(\u4eca\u56de\u306e\u5834\u5408\u89aa\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f[master]\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5b50\u3067\u306fmasterName\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002)\n\n\u5b50\nimport { Component, Input } from '@angular/core';\n\nimport { Hero } from './hero';\n@Component({\n  selector: 'hero-child',\n  template: `\n    <h3>{{hero.name}} says:</h3>\n    <p>I, {{hero.name}}, am at your service, {{masterName}}.</p>\n  `\n})\nexport class HeroChildComponent {\n  @Input() hero: Hero;\n  @Input('master') masterName: string;\n}\n\n\n\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n[\u307b\u306b\u3083\u3089\u3089]\u90e8\u5206\u306b\u3001\u5b50\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3057\u3001\u53f3\u8fba\u306b\u6e21\u3059\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u3001\u5b9a\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n(\u6587\u5b57\u5217\u3092\u6e21\u3059\u6642\u306f[\u307b\u306b\u3083\u3089\u3089]=\"'hogehoge'\"\u306e\u69d8\u306b\u3001\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u5fd8\u308c\u306a\u3044\u69d8\u306b\u3057\u307e\u3057\u3087\u3046)\n\n\u89aa\nimport { Component } from '@angular/core';\nimport { HEROES } from './hero';\n@Component({\n  selector: 'hero-parent',\n  template: `\n    <h2>{{master}} controls {{heroes.length}} heroes</h2>\n    <hero-child *ngFor=\"let hero of heroes\"\n      [hero]=\"hero\"\n      [master]=\"master\">\n    </hero-child>\n  `\n})\nexport class HeroParentComponent {\n  heroes = HEROES;\n  master: string = 'Master';\n}\n\n\n\n\u30a2\u30af\u30bb\u30b5\u3092\u4f7f\u3046\n\u516c\u5f0f\n\u30a2\u30af\u30bb\u30b5(get/set)\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30d7\u30ed\u30d1\u30c6\u30a3\u3092private\u306b\u3057\u305f\u304b\u3063\u305f\u308a\u3001\u4f8b\u306e\u69d8\u306b\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n(\u666e\u901a\u306egetter/setter\u3067\u3082\u3044\u3044\u3067\u3059\u304c\u3002)\n\n\u5b50\nimport { Component, Input } from '@angular/core';\n@Component({\n  selector: 'name-child',\n  template: `\n    <h3>\"{{name}}\"</h3>\n  `\n})\nexport class NameChildComponent {\n  private _name: string = '<no name set>';\n  @Input()\n  set name(name: string) {\n    this._name = (name && name.trim()) || '<no name set>';\n  }\n  get name() { return this._name; }\n}\n\n\n\n\u89aa\nimport { Component } from '@angular/core';\n@Component({\n  selector: 'name-parent',\n  template: `\n    <h2>Master controls {{names.length}} names</h2>\n    <name-child *ngFor=\"let name of names\"\n      [name]=\"name\">\n    </name-child>\n  `\n})\nexport class NameParentComponent {\n  // Displays 'Mr. IQ', '<no name set>', 'Bombasto'\n  names = ['Mr. IQ', '   ', '  Bombasto  '];\n}\n\n\n\nngOnChanges\u3092\u4f7f\u3046\n\u516c\u5f0f\nngOnChanges\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u5909\u66f4\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002@Input()\u306e\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c9\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002ngOnChanges\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u306e\u4e00\u3064\u3067\u3059\u3002\n@Input\u3067\u3001\u89aa\u304b\u3089\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30ad\u30fc\u306b\u3001\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n(\u30bd\u30fc\u30b9\u306f\u516c\u5f0f\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002)\n\n\u89aa\u304c\u5b50\u3092\u76e3\u8996\u3057\u3066\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u5834\u5408\n\u516c\u5f0f\n\u5b50\u306e\u5909\u5316\u3092\u89aa\u3067\u4f55\u304b\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n\u5b50\u4f9b\u306e\u30a4\u30d9\u30f3\u30c8\u76e3\u8996(@Output\u3068EventEmitter)\n\u5b50\u5074\u3067EventEmitter\u3092\u4f7f\u3044\u307e\u3059\u3002\nEventEmitter\u306f\u51fa\u529b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3001\u666e\u901a\u306f@Output\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u4e00\u7dd2\u306b\u4f7f\u3044\u307e\u3059\u3002\n\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u4f8b(\u516c\u5f0f\u3088\u308a\u62dd\u501f):\n\nMr. IQ\u306a\u3069\u306e\u540d\u524d\u306e\u5b9a\u7fa9\u53ca\u3073\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u306f\u89aa(VoteTakerComponent)\u3067\u884c\u3044\u3001\n\u30dc\u30bf\u30f3\u95a2\u9023\u306f\u5b50(VoterComponent)\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b50\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u3001\u5b50\u306evote()\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u89aa\u306eonVoted()\u30e1\u30bd\u30c3\u30c9\u306b\u4f1d\u3048(emit)\u3001\u89aa\u304c\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n(\u5faa\u74b0\u53c2\u7167\u307d\u3044\u6c17\u304c\u3059\u308b\u52d5\u304d\u3067\u3059\u304c\u3001\u8a73\u3057\u3044\u3053\u3068\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u3002)\n\n\u5b50\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n@Component({\n  selector: 'my-voter',\n  template: `\n    <h4>{{name}}</h4>\n    <button (click)=\"vote(true)\"  [disabled]=\"voted\">Agree</button>\n    <button (click)=\"vote(false)\" [disabled]=\"voted\">Disagree</button>\n  `\n})\nexport class VoterComponent {\n  @Input()  name: string;\n  @Output() onVoted = new EventEmitter<boolean>();\n  voted = false;\n  vote(agreed: boolean) {\n    this.onVoted.emit(agreed);\n    this.voted = true;\n  }\n}\n\n\n\n\u89aa\nimport { Component }      from '@angular/core';\n@Component({\n  selector: 'vote-taker',\n  template: `\n    <h2>Should mankind colonize the Universe?</h2>\n    <h3>Agree: {{agreed}}, Disagree: {{disagreed}}</h3>\n    <my-voter *ngFor=\"let voter of voters\"\n      [name]=\"voter\"\n      (onVoted)=\"onVoted($event)\">\n    </my-voter>\n  `\n})\nexport class VoteTakerComponent {\n  agreed = 0;\n  disagreed = 0;\n  voters = ['Mr. IQ', 'Ms. Universe', 'Bombasto'];\n  onVoted(agreed: boolean) {\n    agreed ? this.agreed++ : this.disagreed++;\n  }\n}\n\n\n\n@Input\u3068@Output\u3092\u4f7f\u7528\u3057\u3066\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n\u6b63\u3057\u3044\u3084\u308a\u65b9\u304b\u5224\u308a\u307e\u305b\u3093\u304c\u3001@Input\u3068@Output\u3092\u4f7f\u7528\u3057\u3066\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\n\u5b50\u3067\u306finput\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u89aa\u304b\u3089\u306e\u5024\u3092\u53d6\u5f97\u3057\u3001output\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u5165\u308c\u3001\u89aa\u306b\u6e21\u3057\u307e\u3059\u3002\n\n\u5b50\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({~~\u7701\u7565~~})\nexport class Child{\n\n  @Input()  input:bool\n  @Output() output = new EventEmitter<bool>();\n\n  toFalse(){\n    this.input = false;\n    this.output.emit(false);\n  }\n}\n\n\n\n\u89aa\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'parent',\n  template = `<\u5b50\u306e\u30bb\u30ec\u30af\u30bf\n    [input]=\"bool\"\n    (output)=\"bool = $event\">\n  </\u5b50\u306e\u30bb\u30ec\u30af\u30bf>`\n})\n\nexport class Parent{\n  private bool:boolean;\n  ~~\u7701\u7565~~\n}\n\n\n\n\n\u89aa\u304c\u5b50\u4f9b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n\u516c\u5f0f\n\u89aa\u5074\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u5316\u3057\u307e\u3059\u3002\n\n\u5b50(\u7279\u306b\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u306a\u3055\u305d\u3046)\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n@Component({\n  selector: 'countdown-timer',\n  template: '<p>{{message}}</p>'\n})\nexport class CountdownTimerComponent implements OnInit, OnDestroy {\n  intervalId = 0;\n  message = '';\n  seconds = 11;\n  clearTimer() { clearInterval(this.intervalId); }\n  ngOnInit()    { this.start(); }\n  ngOnDestroy() { this.clearTimer(); }\n  start() { this.countDown(); }\n  stop()  {\n    this.clearTimer();\n    this.message = `Holding at T-${this.seconds} seconds`;\n  }\n  private countDown() {\n    this.clearTimer();\n    this.intervalId = window.setInterval(() => {\n      this.seconds -= 1;\n      if (this.seconds === 0) {\n        this.message = 'Blast off!';\n      } else {\n        if (this.seconds < 0) { this.seconds = 10; } // reset\n        this.message = `T-${this.seconds} seconds and counting`;\n      }\n    }, 1000);\n  }\n}\n\n\n\n\u89aa\n\nimport { Component }                from '@angular/core';\nimport { CountdownTimerComponent }  from './countdown-timer.component';\n@Component({\n  selector: 'countdown-parent-lv',\n  template: `\n  <h3>Countdown to Liftoff (via local variable)</h3>\n  <button (click)=\"timer.start()\">Start</button>\n  <button (click)=\"timer.stop()\">Stop</button>\n  <div class=\"seconds\">{{timer.seconds}}</div>\n  <countdown-timer #timer></countdown-timer>\n  `,\n  styleUrls: ['demo.css']\n})\nexport class CountdownLocalVarParentComponent { }\n\n\n\u5b50\u306e\u30e1\u30bd\u30c3\u30c9start(),stop()\u53ca\u3073\u3001\u5b50\u306e\u30d7\u30ed\u30d1\u30c6\u30a3seconds\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u5b50\u4f9b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\n\u516c\u5f0f\n\u5148\u8ff0\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u7c21\u5358\u3067\u3059\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3060\u3051\u3067\u3001\u89aa\u30af\u30e9\u30b9\u81ea\u4f53\u304c\u5b50\u30af\u30e9\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5b50\u306e\u5909\u6570\u3084\u95a2\u6570\u306e\u53c2\u7167\u3092\u89aa\u306e\u30af\u30e9\u30b9\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u89aa\u5074\u3067ViewChild\u3092\u4f7f\u7528\u3059\u308c\u3070\u305d\u308c\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u89aa\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component }                from '@angular/core';\nimport { CountdownTimerComponent }  from './countdown-timer.component';\n@Component({\n  selector: 'countdown-parent-vc',\n  template: `\n  <h3>Countdown to Liftoff (via ViewChild)</h3>\n  <button (click)=\"start()\">Start</button>\n  <button (click)=\"stop()\">Stop</button>\n  <div class=\"seconds\">{{ seconds() }}</div>\n  <countdown-timer></countdown-timer>\n  `,\n  styleUrls: ['demo.css']\n})\nexport class CountdownViewChildParentComponent implements AfterViewInit {\n  @ViewChild(CountdownTimerComponent)\n  private timerComponent: CountdownTimerComponent;\n  seconds() { return 0; }\n  ngAfterViewInit() {\n    // Redefine `seconds()` to get from the `CountdownTimerComponent.seconds` ...\n    // but wait a tick first to avoid one-time devMode\n    // unidirectional-data-flow-violation error\n    setTimeout(() => this.seconds = () => this.timerComponent.seconds, 0);\n  }\n  start() { this.timerComponent.start(); }\n  stop() { this.timerComponent.stop(); }\n}\n\n\n\nwindow.setTimeout\n\u6307\u5b9a\u3055\u308c\u305f\u9045\u5ef6\u306e\u5f8c\u306b\u3001\u30b3\u30fc\u30c9\u306e\u65ad\u7247\u307e\u305f\u306f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u8981\u70b9\u306f@ViewChild\u30c7\u30b3\u30ec\u30fc\u30bf\u3068,ngAfterViewInit\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u3067\u3059\u3002\n@ViewChild\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u901a\u3057\u3066\u3001\u5b50\u306eCountdownTimerComponent\u3092private\u306atimerComponent\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u672c\u6765\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u3001this.seconds\u306f\u53d6\u5f97\u306b\u5931\u6557\u3057\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u304c\u3001ngAfterViewInit\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u306b\u3088\u308a\u3001\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u8868\u793a\u5f8c0\u30df\u30ea\u79d2\u9045\u5ef6\u3055\u305b\u3001\u53d6\u5f97\u3055\u305b\u308b\u3053\u3068\u3067\u554f\u984c\u3092\u89e3\u6c7a\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\nservice\u3092\u4f7f\u3063\u3066\u89aa\u5b50\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\n\u516c\u5f0f\n\u30d0\u30a4\u30f3\u30c9\u304c\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u30b5\u30fc\u30d3\u30b9\u3092subscribe\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n\u30b5\u30fc\u30d3\u30b9\nimport { Injectable } from '@angular/core';\nimport { Subject }    from 'rxjs/Subject';\n@Injectable()\nexport class MissionService {\n  // Observable string sources\n  private missionAnnouncedSource = new Subject<string>();\n  private missionConfirmedSource = new Subject<string>();\n  // Observable string streams\n  missionAnnounced$ = this.missionAnnouncedSource.asObservable();\n  missionConfirmed$ = this.missionConfirmedSource.asObservable();\n  // Service message commands\n  announceMission(mission: string) {\n    this.missionAnnouncedSource.next(mission);\n  }\n  confirmMission(astronaut: string) {\n    this.missionConfirmedSource.next(astronaut);\n  }\n}\n\n\n\n\u89aa\nimport { Component }          from '@angular/core';\nimport { MissionService }     from './mission.service';\n@Component({\n  selector: 'mission-control',\n  template: `\n    <h2>Mission Control</h2>\n    <button (click)=\"announce()\">Announce mission</button>\n    <my-astronaut *ngFor=\"let astronaut of astronauts\"\n      [astronaut]=\"astronaut\">\n    </my-astronaut>\n    <h3>History</h3>\n    <ul>\n      <li *ngFor=\"let event of history\">{{event}}</li>\n    </ul>\n  `,\n  providers: [MissionService]\n})\nexport class MissionControlComponent {\n  astronauts = ['Lovell', 'Swigert', 'Haise'];\n  history: string[] = [];\n  missions = ['Fly to the moon!',\n              'Fly to mars!',\n              'Fly to Vegas!'];\n  nextMission = 0;\n  constructor(private missionService: MissionService) {\n    missionService.missionConfirmed$.subscribe(\n      astronaut => {\n        this.history.push(`${astronaut} confirmed the mission`);\n      });\n  }\n  announce() {\n    let mission = this.missions[this.nextMission++];\n    this.missionService.announceMission(mission);\n    this.history.push(`Mission \"${mission}\" announced`);\n    if (this.nextMission >= this.missions.length) { this.nextMission = 0; }\n  }\n}\n\n\n\n\u5b50\nimport { Component, Input, OnDestroy } from '@angular/core';\nimport { MissionService } from './mission.service';\nimport { Subscription }   from 'rxjs/Subscription';\n@Component({\n  selector: 'my-astronaut',\n  template: `\n    <p>\n      {{astronaut}}: <strong>{{mission}}</strong>\n      <button\n        (click)=\"confirm()\"\n        [disabled]=\"!announced || confirmed\">\n        Confirm\n      </button>\n    </p>\n  `\n})\nexport class AstronautComponent implements OnDestroy {\n  @Input() astronaut: string;\n  mission = '<no mission announced>';\n  confirmed = false;\n  announced = false;\n  subscription: Subscription;\n  constructor(private missionService: MissionService) {\n    this.subscription = missionService.missionAnnounced$.subscribe(\n      mission => {\n        this.mission = mission;\n        this.announced = true;\n        this.confirmed = false;\n    });\n  }\n  confirm() {\n    this.confirmed = true;\n    this.missionService.confirmMission(this.astronaut);\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n}\n\n\n\u53c2\u8003\u5143:\n[COMPONENT INTERACTION](https://angular.io/docs/ts/latest/cookbook/component-communication.html#!#parent-to-child)\n\n\n# \u89aa\u304b\u3089\u5b50\u306b\u60c5\u5831\u3092\u4e0e\u3048\u308b\u5834\u5408\n\n\u89aa\u306e\u5909\u5316\u3092\u5b50\u3067\u4f55\u304b\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## Input\u3092\u4f7f\u7528\u3059\u308b\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#parent-to-child)\n\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u306f\u89aa\u304b\u3089\u53d6\u5f97\u3057\u305f\u30c7\u30fc\u30bf\u3092\u683c\u7d0d\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u306b`@Input()`\u30c7\u30b3\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u89aa\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e`[]`\u3067\u6307\u5b9a\u3057\u305f\u5024\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u5834\u5408\u306f\u3001\u5f15\u6570\u306a\u3057\u306e`@Input() \u30d7\u30ed\u30d1\u30c6\u30a3\u540d :\u578b`\u3067\u826f\u3044\u3067\u3059\u304c\u3001\u5909\u3048\u308b\u5834\u5408\u306f`@Input('\u307b\u306b\u3083\u3089\u3089') \u30d7\u30ed\u30d1\u30c6\u30a3\u540d :\u578b`\u306b\u3057\u307e\u3059\u3002\n(\u4eca\u56de\u306e\u5834\u5408\u89aa\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u306f`[master]`\u3068\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u5b50\u3067\u306f`masterName`\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002)\n\n```ts:\u5b50\nimport { Component, Input } from '@angular/core';\n\nimport { Hero } from './hero';\n@Component({\n  selector: 'hero-child',\n  template: `\n    <h3>{{hero.name}} says:</h3>\n    <p>I, {{hero.name}}, am at your service, {{masterName}}.</p>\n  `\n})\nexport class HeroChildComponent {\n  @Input() hero: Hero;\n  @Input('master') masterName: string;\n}\n```\n\n\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u5024\u3092\u6e21\u3057\u307e\u3059\u3002\n`[\u307b\u306b\u3083\u3089\u3089]`\u90e8\u5206\u306b\u3001\u5b50\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u3092\u6307\u5b9a\u3057\u3001\u53f3\u8fba\u306b\u6e21\u3059\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u3001\u5b9a\u6570\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n(\u6587\u5b57\u5217\u3092\u6e21\u3059\u6642\u306f`[\u307b\u306b\u3083\u3089\u3089]=\"'hogehoge'\"`\u306e\u69d8\u306b\u3001\u30b7\u30f3\u30b0\u30eb\u30af\u30a9\u30fc\u30c8\u3092\u5fd8\u308c\u306a\u3044\u69d8\u306b\u3057\u307e\u3057\u3087\u3046)\n\n```ts:\u89aa\nimport { Component } from '@angular/core';\nimport { HEROES } from './hero';\n@Component({\n  selector: 'hero-parent',\n  template: `\n    <h2>{{master}} controls {{heroes.length}} heroes</h2>\n    <hero-child *ngFor=\"let hero of heroes\"\n      [hero]=\"hero\"\n      [master]=\"master\">\n    </hero-child>\n  `\n})\nexport class HeroParentComponent {\n  heroes = HEROES;\n  master: string = 'Master';\n}\n```\n\n## \u30a2\u30af\u30bb\u30b5\u3092\u4f7f\u3046\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#parent-to-child-setter)\n\u30a2\u30af\u30bb\u30b5(get/set)\u3092\u4f7f\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\u30d7\u30ed\u30d1\u30c6\u30a3\u3092private\u306b\u3057\u305f\u304b\u3063\u305f\u308a\u3001\u4f8b\u306e\u69d8\u306b\u30c8\u30ea\u30e0\u3059\u308b\u5834\u5408\u306a\u3069\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n(\u666e\u901a\u306egetter/setter\u3067\u3082\u3044\u3044\u3067\u3059\u304c\u3002)\n\n```ts:\u5b50\nimport { Component, Input } from '@angular/core';\n@Component({\n  selector: 'name-child',\n  template: `\n    <h3>\"{{name}}\"</h3>\n  `\n})\nexport class NameChildComponent {\n  private _name: string = '<no name set>';\n  @Input()\n  set name(name: string) {\n    this._name = (name && name.trim()) || '<no name set>';\n  }\n  get name() { return this._name; }\n}\n```\n\n```ts:\u89aa\nimport { Component } from '@angular/core';\n@Component({\n  selector: 'name-parent',\n  template: `\n    <h2>Master controls {{names.length}} names</h2>\n    <name-child *ngFor=\"let name of names\"\n      [name]=\"name\">\n    </name-child>\n  `\n})\nexport class NameParentComponent {\n  // Displays 'Mr. IQ', '<no name set>', 'Bombasto'\n  names = ['Mr. IQ', '   ', '  Bombasto  '];\n}\n```\n\n## ngOnChanges\u3092\u4f7f\u3046\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#parent-to-child-on-changes)\n`ngOnChanges`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3001\u5909\u66f4\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002`@Input()`\u306e\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c9\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002`ngOnChanges`\u306f\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u306e\u4e00\u3064\u3067\u3059\u3002\n`@Input`\u3067\u3001\u89aa\u304b\u3089\u53d6\u5f97\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30ad\u30fc\u306b\u3001\u30b5\u30fc\u30d3\u30b9\u304b\u3089\u5024\u3092\u53d6\u5f97\u3057\u305f\u308a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n(\u30bd\u30fc\u30b9\u306f\u516c\u5f0f\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002)\n\n\n# \u89aa\u304c\u5b50\u3092\u76e3\u8996\u3057\u3066\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u5834\u5408\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#!#parent-listens-for-child-event)\n\n\u5b50\u306e\u5909\u5316\u3092\u89aa\u3067\u4f55\u304b\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002\n\n## \u5b50\u4f9b\u306e\u30a4\u30d9\u30f3\u30c8\u76e3\u8996(`@Output`\u3068`EventEmitter`)\n \u5b50\u5074\u3067`EventEmitter`\u3092\u4f7f\u3044\u307e\u3059\u3002\n`EventEmitter`\u306f\u51fa\u529b\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u3001\u666e\u901a\u306f[@Output\u30c7\u30b3\u30ec\u30fc\u30bf](https://angular.io/docs/ts/latest/guide/template-syntax.html#inputs-outputs)\u3068\u4e00\u7dd2\u306b\u4f7f\u3044\u307e\u3059\u3002\n\n\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u4f8b(\u516c\u5f0f\u3088\u308a\u62dd\u501f):\n![](https://angular.io/resources/images/cookbooks/component-communication/child-to-parent.gif)\n\n`Mr. IQ`\u306a\u3069\u306e\u540d\u524d\u306e\u5b9a\u7fa9\u53ca\u3073\u3001\u30ab\u30a6\u30f3\u30bf\u30fc\u306f\u89aa(`VoteTakerComponent`)\u3067\u884c\u3044\u3001\n\u30dc\u30bf\u30f3\u95a2\u9023\u306f\u5b50(`VoterComponent`)\u3067\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\n\u5b50\u306e\u30dc\u30bf\u30f3\u304c\u30af\u30ea\u30c3\u30af\u3055\u308c\u308b\u3068\u3001\u5b50\u306e`vote()`\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3073\u51fa\u3055\u308c\u3001\u30e1\u30bd\u30c3\u30c9\u5185\u3067\u89aa\u306e`onVoted()`\u30e1\u30bd\u30c3\u30c9\u306b\u4f1d\u3048(emit)\u3001\u89aa\u304c\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u3057\u307e\u3059\u3002\n(\u5faa\u74b0\u53c2\u7167\u307d\u3044\u6c17\u304c\u3059\u308b\u52d5\u304d\u3067\u3059\u304c\u3001\u8a73\u3057\u3044\u3053\u3068\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u3002)\n\n```ts:\u5b50\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n@Component({\n  selector: 'my-voter',\n  template: `\n    <h4>{{name}}</h4>\n    <button (click)=\"vote(true)\"  [disabled]=\"voted\">Agree</button>\n    <button (click)=\"vote(false)\" [disabled]=\"voted\">Disagree</button>\n  `\n})\nexport class VoterComponent {\n  @Input()  name: string;\n  @Output() onVoted = new EventEmitter<boolean>();\n  voted = false;\n  vote(agreed: boolean) {\n    this.onVoted.emit(agreed);\n    this.voted = true;\n  }\n}\n```\n\n```ts:\u89aa\nimport { Component }      from '@angular/core';\n@Component({\n  selector: 'vote-taker',\n  template: `\n    <h2>Should mankind colonize the Universe?</h2>\n    <h3>Agree: {{agreed}}, Disagree: {{disagreed}}</h3>\n    <my-voter *ngFor=\"let voter of voters\"\n      [name]=\"voter\"\n      (onVoted)=\"onVoted($event)\">\n    </my-voter>\n  `\n})\nexport class VoteTakerComponent {\n  agreed = 0;\n  disagreed = 0;\n  voters = ['Mr. IQ', 'Ms. Universe', 'Bombasto'];\n  onVoted(agreed: boolean) {\n    agreed ? this.agreed++ : this.disagreed++;\n  }\n}\n```\n\n## `@Input`\u3068`@Output`\u3092\u4f7f\u7528\u3057\u3066\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c9\u3059\u308b\n\u6b63\u3057\u3044\u3084\u308a\u65b9\u304b\u5224\u308a\u307e\u305b\u3093\u304c\u3001`@Input`\u3068`@Output`\u3092\u4f7f\u7528\u3057\u3066\u53cc\u65b9\u5411\u30d0\u30a4\u30f3\u30c9\u3057\u307e\u3059\u3002\n\u5b50\u3067\u306f`input`\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u89aa\u304b\u3089\u306e\u5024\u3092\u53d6\u5f97\u3057\u3001`output`\u30d7\u30ed\u30d1\u30c6\u30a3\u306b\u5024\u3092\u5165\u308c\u3001\u89aa\u306b\u6e21\u3057\u307e\u3059\u3002\n\n```ts:\u5b50\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({~~\u7701\u7565~~})\nexport class Child{\n\n  @Input()  input:bool\n  @Output() output = new EventEmitter<bool>();\n\n  toFalse(){\n    this.input = false;\n    this.output.emit(false);\n  }\n}\n```\n\n```ts:\u89aa\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'parent',\n  template = `<\u5b50\u306e\u30bb\u30ec\u30af\u30bf\n    [input]=\"bool\"\n    (output)=\"bool = $event\">\n  </\u5b50\u306e\u30bb\u30ec\u30af\u30bf>`\n})\n\nexport class Parent{\n  private bool:boolean;\n  ~~\u7701\u7565~~\n}\n\n```\n\n\n## \u89aa\u304c\u5b50\u4f9b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3046\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#parent-to-child-local-var)\n\n\u89aa\u5074\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30ed\u30fc\u30ab\u30eb\u5909\u6570\u5316\u3057\u307e\u3059\u3002\n\n\n```ts:\u5b50(\u7279\u306b\u6ce8\u76ee\u3059\u3079\u304d\u70b9\u306f\u306a\u3055\u305d\u3046)\nimport { Component, OnDestroy, OnInit } from '@angular/core';\n@Component({\n  selector: 'countdown-timer',\n  template: '<p>{{message}}</p>'\n})\nexport class CountdownTimerComponent implements OnInit, OnDestroy {\n  intervalId = 0;\n  message = '';\n  seconds = 11;\n  clearTimer() { clearInterval(this.intervalId); }\n  ngOnInit()    { this.start(); }\n  ngOnDestroy() { this.clearTimer(); }\n  start() { this.countDown(); }\n  stop()  {\n    this.clearTimer();\n    this.message = `Holding at T-${this.seconds} seconds`;\n  }\n  private countDown() {\n    this.clearTimer();\n    this.intervalId = window.setInterval(() => {\n      this.seconds -= 1;\n      if (this.seconds === 0) {\n        this.message = 'Blast off!';\n      } else {\n        if (this.seconds < 0) { this.seconds = 10; } // reset\n        this.message = `T-${this.seconds} seconds and counting`;\n      }\n    }, 1000);\n  }\n}\n```\n\n\n```ts:\u89aa:\u5b50\u306e\u30bb\u30ec\u30af\u30bf\u306e\u7b87\u6240\u306b\u30ed\u30fc\u30ab\u30eb\u5909\u6570#timer\u6307\u5b9a\n\nimport { Component }                from '@angular/core';\nimport { CountdownTimerComponent }  from './countdown-timer.component';\n@Component({\n  selector: 'countdown-parent-lv',\n  template: `\n  <h3>Countdown to Liftoff (via local variable)</h3>\n  <button (click)=\"timer.start()\">Start</button>\n  <button (click)=\"timer.stop()\">Stop</button>\n  <div class=\"seconds\">{{timer.seconds}}</div>\n  <countdown-timer #timer></countdown-timer>\n  `,\n  styleUrls: ['demo.css']\n})\nexport class CountdownLocalVarParentComponent { }\n```\n\n\u5b50\u306e\u30e1\u30bd\u30c3\u30c9`start()`,`stop()`\u53ca\u3073\u3001\u5b50\u306e\u30d7\u30ed\u30d1\u30c6\u30a3`seconds`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n##  \u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304b\u3089\u5b50\u4f9b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#parent-to-view-child)\n\u5148\u8ff0\u306e\u30d1\u30bf\u30fc\u30f3\u306f\u7c21\u5358\u3067\u3059\u304c\u3001\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3060\u3051\u3067\u3001\u89aa\u30af\u30e9\u30b9\u81ea\u4f53\u304c\u5b50\u30af\u30e9\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u308f\u3051\u3067\u306f\u306a\u3044\u305f\u3081\u3001\u5b50\u306e\u5909\u6570\u3084\u95a2\u6570\u306e\u53c2\u7167\u3092\u89aa\u306e\u30af\u30e9\u30b9\u3067\u4f7f\u7528\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u89aa\u5074\u3067ViewChild\u3092\u4f7f\u7528\u3059\u308c\u3070\u305d\u308c\u304c\u3067\u304d\u307e\u3059\u3002\n\n```ts:\u89aa\nimport { AfterViewInit, ViewChild } from '@angular/core';\nimport { Component }                from '@angular/core';\nimport { CountdownTimerComponent }  from './countdown-timer.component';\n@Component({\n  selector: 'countdown-parent-vc',\n  template: `\n  <h3>Countdown to Liftoff (via ViewChild)</h3>\n  <button (click)=\"start()\">Start</button>\n  <button (click)=\"stop()\">Stop</button>\n  <div class=\"seconds\">{{ seconds() }}</div>\n  <countdown-timer></countdown-timer>\n  `,\n  styleUrls: ['demo.css']\n})\nexport class CountdownViewChildParentComponent implements AfterViewInit {\n  @ViewChild(CountdownTimerComponent)\n  private timerComponent: CountdownTimerComponent;\n  seconds() { return 0; }\n  ngAfterViewInit() {\n    // Redefine `seconds()` to get from the `CountdownTimerComponent.seconds` ...\n    // but wait a tick first to avoid one-time devMode\n    // unidirectional-data-flow-violation error\n    setTimeout(() => this.seconds = () => this.timerComponent.seconds, 0);\n  }\n  start() { this.timerComponent.start(); }\n  stop() { this.timerComponent.stop(); }\n}\n```\n\n> [window.setTimeout](https://developer.mozilla.org/ja/docs/Web/API/WindowTimers/setTimeout)\n> \u6307\u5b9a\u3055\u308c\u305f\u9045\u5ef6\u306e\u5f8c\u306b\u3001\u30b3\u30fc\u30c9\u306e\u65ad\u7247\u307e\u305f\u306f\u95a2\u6570\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\u8981\u70b9\u306f`@ViewChild`\u30c7\u30b3\u30ec\u30fc\u30bf\u3068,`ngAfterViewInit`\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u3067\u3059\u3002\n`@ViewChild`\u30c7\u30b3\u30ec\u30fc\u30bf\u3092\u901a\u3057\u3066\u3001\u5b50\u306e`CountdownTimerComponent`\u3092private\u306a`timerComponent `\u306b\u30a4\u30f3\u30b8\u30a7\u30af\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\n\u672c\u6765\u89aa\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3066\u304b\u3089\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u4f5c\u6210\u3055\u308c\u308b\u305f\u3081\u3001`this.seconds`\u306f\u53d6\u5f97\u306b\u5931\u6557\u3057\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u307e\u3059\u304c\u3001`ngAfterViewInit`\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u30d5\u30c3\u30af\u306b\u3088\u308a\u3001\u5b50\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u8868\u793a\u5f8c0\u30df\u30ea\u79d2\u9045\u5ef6\u3055\u305b\u3001\u53d6\u5f97\u3055\u305b\u308b\u3053\u3068\u3067\u554f\u984c\u3092\u89e3\u6c7a\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n\n# `service`\u3092\u4f7f\u3063\u3066\u89aa\u5b50\u3067\u30c7\u30fc\u30bf\u3092\u3084\u308a\u53d6\u308a\u3059\u308b\n[\u516c\u5f0f](https://angular.io/docs/ts/latest/cookbook/component-communication.html#bidirectional-service)\n\n\u30d0\u30a4\u30f3\u30c9\u304c\u5fc5\u8981\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3067\u30b5\u30fc\u30d3\u30b9\u3092subscribe\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u3001\u30c7\u30fc\u30bf\u3092\u5171\u6709\u3057\u307e\u3059\u3002\n\n```ts:\u30b5\u30fc\u30d3\u30b9\nimport { Injectable } from '@angular/core';\nimport { Subject }    from 'rxjs/Subject';\n@Injectable()\nexport class MissionService {\n  // Observable string sources\n  private missionAnnouncedSource = new Subject<string>();\n  private missionConfirmedSource = new Subject<string>();\n  // Observable string streams\n  missionAnnounced$ = this.missionAnnouncedSource.asObservable();\n  missionConfirmed$ = this.missionConfirmedSource.asObservable();\n  // Service message commands\n  announceMission(mission: string) {\n    this.missionAnnouncedSource.next(mission);\n  }\n  confirmMission(astronaut: string) {\n    this.missionConfirmedSource.next(astronaut);\n  }\n}\n```\n\n```ts:\u89aa\nimport { Component }          from '@angular/core';\nimport { MissionService }     from './mission.service';\n@Component({\n  selector: 'mission-control',\n  template: `\n    <h2>Mission Control</h2>\n    <button (click)=\"announce()\">Announce mission</button>\n    <my-astronaut *ngFor=\"let astronaut of astronauts\"\n      [astronaut]=\"astronaut\">\n    </my-astronaut>\n    <h3>History</h3>\n    <ul>\n      <li *ngFor=\"let event of history\">{{event}}</li>\n    </ul>\n  `,\n  providers: [MissionService]\n})\nexport class MissionControlComponent {\n  astronauts = ['Lovell', 'Swigert', 'Haise'];\n  history: string[] = [];\n  missions = ['Fly to the moon!',\n              'Fly to mars!',\n              'Fly to Vegas!'];\n  nextMission = 0;\n  constructor(private missionService: MissionService) {\n    missionService.missionConfirmed$.subscribe(\n      astronaut => {\n        this.history.push(`${astronaut} confirmed the mission`);\n      });\n  }\n  announce() {\n    let mission = this.missions[this.nextMission++];\n    this.missionService.announceMission(mission);\n    this.history.push(`Mission \"${mission}\" announced`);\n    if (this.nextMission >= this.missions.length) { this.nextMission = 0; }\n  }\n}\n```\n\n```ts:\u5b50\nimport { Component, Input, OnDestroy } from '@angular/core';\nimport { MissionService } from './mission.service';\nimport { Subscription }   from 'rxjs/Subscription';\n@Component({\n  selector: 'my-astronaut',\n  template: `\n    <p>\n      {{astronaut}}: <strong>{{mission}}</strong>\n      <button\n        (click)=\"confirm()\"\n        [disabled]=\"!announced || confirmed\">\n        Confirm\n      </button>\n    </p>\n  `\n})\nexport class AstronautComponent implements OnDestroy {\n  @Input() astronaut: string;\n  mission = '<no mission announced>';\n  confirmed = false;\n  announced = false;\n  subscription: Subscription;\n  constructor(private missionService: MissionService) {\n    this.subscription = missionService.missionAnnounced$.subscribe(\n      mission => {\n        this.mission = mission;\n        this.announced = true;\n        this.confirmed = false;\n    });\n  }\n  confirm() {\n    this.confirmed = true;\n    this.missionService.confirmMission(this.astronaut);\n  }\n  ngOnDestroy() {\n    // prevent memory leak when component destroyed\n    this.subscription.unsubscribe();\n  }\n}\n```\n\n", "tags": ["Angular2", "TypeScript"]}