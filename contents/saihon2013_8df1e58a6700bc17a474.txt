{"tags": ["C\u8a00\u8a9e", "\u3069\u3046\u66f8\u304f", "yhpg"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord13updowndouble/\n\u518d\u5e30\u51e6\u7406\u3067\u3072\u305f\u3059\u3089\u3001\u76ee\u7684\u306e\u5024\u306b\u306a\u308b\u30eb\u30fc\u30c8\u3092\u63a2\u3059\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3002\n\u305f\u3076\u3093\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u5168\u3066\u306e\u7d50\u679c\u304c\u3067\u308b\u307e\u3067\u3001\u3082\u306e\u3059\u3054\u304f\u6642\u9593\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3001\n\u3042\u307e\u308a\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u3082\u3001\u9762\u767d\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u8f09\u305b\u3066\u307f\u307e\u3057\u305f\u3002\n\u63a2\u7d22\u958b\u59cb\u306e\u5024\u306f0\u3067\u306f\u306a\u304f\uff12\u304b\u3089\u306b\u3057\u3066\u3001\u6700\u5927\u3067\u3082\uff11\u56de\u306e\u63a2\u7d22\u306e\u8a08\u7b97\u91cf\u304c3\u306e25\u4e57\u56de\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n\u518d\u5e30\u51e6\u7406\u3067\u63a2\u7d22\u3059\u308b\u6df1\u3055\u30921\u305a\u3064\u5897\u3084\u3057\u3001\u6bce\u56de\uff12\u304b\u3089\u518d\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081\u3001\u9045\u3044\u3067\u3059\u3002\n\u6700\u521d\u306e\u6761\u4ef6((v <= 2 && c > 2) || v > t+1 || c >= i)\u3067\u306a\u308b\u3079\u304f\u679d\u5207\u308a\u3057\u3066\u3001\u8a08\u7b97\u91cf\u3092\u524a\u6e1b\u3057\u3066\u307e\u3059\u3002\n\u5225\u89e3\u306f\u3053\u3061\u3089\nhttp://qiita.com/saihon2013/items/7aad77be492ddd57c8c6\n#include <stdio.h>\n#include <stdlib.h>\n\nint solve(const int t, const int v, const int c, const int i)\n{\n  return \n    ((v <= 2 && c > 2) || v > t+1 || c >= i) ? 0:\n    (t == v) ? 1:\n    (solve(t,v<<1,c+1,i)) ? 1:\n    (solve(t,v +1,c+1,i)) ? 1:\n    (solve(t,v -1,c+1,i)) ? 1: 0;\n}\n\nvoid test(const char * const input, const char * const ans)\n{\n  int t = atoi(input), i;\n  for(i=2; solve(t,2,2,i+1)!=1; i++);\n  printf(\"%d\\t%s\\n\", i, (atoi(ans) == i) ? \"OK\": \"NG\");\n}\n\nint main()\n{\n/*0*/ test( \"59\", \"9\" );    \n/*1*/ test( \"10\", \"5\" );    \n/*2*/ test( \"11\", \"6\" );    \n/*3*/ test( \"12\", \"5\" );    \n/*4*/ test( \"13\", \"6\" );    \n/*5*/ test( \"14\", \"6\" );    \n/*6*/ test( \"15\", \"6\" );    \n/*7*/ test( \"16\", \"5\" );    \n/*8*/ test( \"17\", \"6\" );    \n/*9*/ test( \"18\", \"6\" );    \n/*10*/ test( \"27\", \"8\" );    \n/*11*/ test( \"28\", \"7\" );    \n/*12*/ test( \"29\", \"8\" );    \n/*13*/ test( \"30\", \"7\" );    \n/*14*/ test( \"31\", \"7\" );    \n/*15*/ test( \"32\", \"6\" );    \n/*16*/ test( \"33\", \"7\" );    \n/*17*/ test( \"34\", \"7\" );    \n/*18*/ test( \"35\", \"8\" );    \n/*19*/ test( \"41\", \"8\" );    \n/*20*/ test( \"71\", \"9\" );    \n/*21*/ test( \"1023\", \"12\" );    \n/*22*/ test( \"1024\", \"11\" );    \n/*23*/ test( \"1025\", \"12\" );    \n/*24*/ test( \"1707\", \"17\" );    \n/*25*/ test( \"683\", \"15\" );    \n/*26*/ test( \"123\", \"10\" );    \n/*27*/ test( \"187\", \"11\" );    \n/*28*/ test( \"237\", \"12\" );    \n/*29*/ test( \"5267\", \"18\" );    \n/*30*/ test( \"6737\", \"18\" );    \n/*31*/ test( \"14796\", \"20\" );    \n/*32*/ test( \"18998\", \"20\" );    \n/*33*/ test( \"23820\", \"20\" );    \n/*34*/ test( \"30380\", \"21\" );    \n/*35*/ test( \"31119\", \"21\" );    \n/*36*/ test( \"33301\", \"20\" );    \n/*37*/ test( \"33967\", \"21\" );    \n/*38*/ test( \"35443\", \"22\" );    \n/*39*/ test( \"35641\", \"22\" );    \n/*40*/ test( \"43695\", \"23\" );    \n/*41*/ test( \"44395\", \"23\" );    \n/*42*/ test( \"44666\", \"22\" );    \n/*43*/ test( \"987\", \"14\" );    \n/*44*/ test( \"1021\", \"13\" );    \n/*45*/ test( \"1019\", \"13\" );    \n/*46*/ test( \"1015\", \"13\" );    \n/*47*/ test( \"1007\", \"13\" );    \n/*48*/ test( \"1011\", \"14\" );    \n/*49*/ test( \"1003\", \"14\" );    \n/*50*/ test( \"983\", \"14\" );    \n/*51*/ test( \"999\", \"14\" );    \n/*52*/ test( \"2731\", \"18\" );    \n/*53*/ test( \"6827\", \"20\" );    \n/*54*/ test( \"10923\", \"21\" );    \n/*55*/ test( \"27307\", \"23\" );    \n/*56*/ test( \"43691\", \"24\" );    \n/*57*/ test( \"109227\", \"26\" );    \n/*58*/ test( \"174763\", \"27\" );\n  return 0;\n}\n\n\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord13updowndouble/\n\n\u518d\u5e30\u51e6\u7406\u3067\u3072\u305f\u3059\u3089\u3001\u76ee\u7684\u306e\u5024\u306b\u306a\u308b\u30eb\u30fc\u30c8\u3092\u63a2\u3059\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3002\n\u305f\u3076\u3093\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u5168\u3066\u306e\u7d50\u679c\u304c\u3067\u308b\u307e\u3067\u3001\u3082\u306e\u3059\u3054\u304f\u6642\u9593\u304b\u304b\u308a\u305d\u3046\u306a\u306e\u3067\u3001\n\u3042\u307e\u308a\u826f\u3044\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3067\u3082\u3001\u9762\u767d\u3044\u30b3\u30fc\u30c9\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u8f09\u305b\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u63a2\u7d22\u958b\u59cb\u306e\u5024\u306f0\u3067\u306f\u306a\u304f\uff12\u304b\u3089\u306b\u3057\u3066\u3001\u6700\u5927\u3067\u3082\uff11\u56de\u306e\u63a2\u7d22\u306e\u8a08\u7b97\u91cf\u304c3\u306e25\u4e57\u56de\u306b\u306a\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n\u518d\u5e30\u51e6\u7406\u3067\u63a2\u7d22\u3059\u308b\u6df1\u3055\u30921\u305a\u3064\u5897\u3084\u3057\u3001\u6bce\u56de\uff12\u304b\u3089\u518d\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u305f\u3081\u3001\u9045\u3044\u3067\u3059\u3002\n\n\u6700\u521d\u306e\u6761\u4ef6`((v <= 2 && c > 2) || v > t+1 || c >= i)`\u3067\u306a\u308b\u3079\u304f\u679d\u5207\u308a\u3057\u3066\u3001\u8a08\u7b97\u91cf\u3092\u524a\u6e1b\u3057\u3066\u307e\u3059\u3002\n\n\u5225\u89e3\u306f\u3053\u3061\u3089\nhttp://qiita.com/saihon2013/items/7aad77be492ddd57c8c6\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n\nint solve(const int t, const int v, const int c, const int i)\n{\n  return \n    ((v <= 2 && c > 2) || v > t+1 || c >= i) ? 0:\n    (t == v) ? 1:\n    (solve(t,v<<1,c+1,i)) ? 1:\n    (solve(t,v +1,c+1,i)) ? 1:\n    (solve(t,v -1,c+1,i)) ? 1: 0;\n}\n\nvoid test(const char * const input, const char * const ans)\n{\n  int t = atoi(input), i;\n  for(i=2; solve(t,2,2,i+1)!=1; i++);\n  printf(\"%d\\t%s\\n\", i, (atoi(ans) == i) ? \"OK\": \"NG\");\n}\n\nint main()\n{\n/*0*/ test( \"59\", \"9\" );    \n/*1*/ test( \"10\", \"5\" );    \n/*2*/ test( \"11\", \"6\" );    \n/*3*/ test( \"12\", \"5\" );    \n/*4*/ test( \"13\", \"6\" );    \n/*5*/ test( \"14\", \"6\" );    \n/*6*/ test( \"15\", \"6\" );    \n/*7*/ test( \"16\", \"5\" );    \n/*8*/ test( \"17\", \"6\" );    \n/*9*/ test( \"18\", \"6\" );    \n/*10*/ test( \"27\", \"8\" );    \n/*11*/ test( \"28\", \"7\" );    \n/*12*/ test( \"29\", \"8\" );    \n/*13*/ test( \"30\", \"7\" );    \n/*14*/ test( \"31\", \"7\" );    \n/*15*/ test( \"32\", \"6\" );    \n/*16*/ test( \"33\", \"7\" );    \n/*17*/ test( \"34\", \"7\" );    \n/*18*/ test( \"35\", \"8\" );    \n/*19*/ test( \"41\", \"8\" );    \n/*20*/ test( \"71\", \"9\" );    \n/*21*/ test( \"1023\", \"12\" );    \n/*22*/ test( \"1024\", \"11\" );    \n/*23*/ test( \"1025\", \"12\" );    \n/*24*/ test( \"1707\", \"17\" );    \n/*25*/ test( \"683\", \"15\" );    \n/*26*/ test( \"123\", \"10\" );    \n/*27*/ test( \"187\", \"11\" );    \n/*28*/ test( \"237\", \"12\" );    \n/*29*/ test( \"5267\", \"18\" );    \n/*30*/ test( \"6737\", \"18\" );    \n/*31*/ test( \"14796\", \"20\" );    \n/*32*/ test( \"18998\", \"20\" );    \n/*33*/ test( \"23820\", \"20\" );    \n/*34*/ test( \"30380\", \"21\" );    \n/*35*/ test( \"31119\", \"21\" );    \n/*36*/ test( \"33301\", \"20\" );    \n/*37*/ test( \"33967\", \"21\" );    \n/*38*/ test( \"35443\", \"22\" );    \n/*39*/ test( \"35641\", \"22\" );    \n/*40*/ test( \"43695\", \"23\" );    \n/*41*/ test( \"44395\", \"23\" );    \n/*42*/ test( \"44666\", \"22\" );    \n/*43*/ test( \"987\", \"14\" );    \n/*44*/ test( \"1021\", \"13\" );    \n/*45*/ test( \"1019\", \"13\" );    \n/*46*/ test( \"1015\", \"13\" );    \n/*47*/ test( \"1007\", \"13\" );    \n/*48*/ test( \"1011\", \"14\" );    \n/*49*/ test( \"1003\", \"14\" );    \n/*50*/ test( \"983\", \"14\" );    \n/*51*/ test( \"999\", \"14\" );    \n/*52*/ test( \"2731\", \"18\" );    \n/*53*/ test( \"6827\", \"20\" );    \n/*54*/ test( \"10923\", \"21\" );    \n/*55*/ test( \"27307\", \"23\" );    \n/*56*/ test( \"43691\", \"24\" );    \n/*57*/ test( \"109227\", \"26\" );    \n/*58*/ test( \"174763\", \"27\" );\n  return 0;\n}\n```"}