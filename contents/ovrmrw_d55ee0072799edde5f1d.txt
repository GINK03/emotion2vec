{"context": "Node.js\u306enew Date().valueOf()\u3067\u5f97\u3089\u308c\u308bUnixTimestamp\u3068\u540c\u3058\u5024\u3092Excel VBA\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3002\n\u79d2\u5358\u4f4d\u307e\u3067\u306f\u5272\u3068\u7c21\u5358\u306a\u306e\u3060\u3051\u3069\u30df\u30ea\u79d2\u5358\u4f4d\u307e\u3067\u3084\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3068\u3044\u3046\u8a71\u3002\n\u2193\u3053\u3046\u3044\u3046\u5024\u3092VBA\u3067\u53d6\u5f97\u3057\u305f\u3044\u3002\n> new Date().valueOf()\n1472735489962\n\n\u8272\u3005\u30b0\u30b0\u3063\u3066\u3088\u3046\u3084\u304f\u3053\u306e\u5f62\u306b\u843d\u3061\u7740\u304d\u307e\u3057\u305f\u3002\nWindows 7 Pro 32bit\u3001Excel2010\u3067\u691c\u8a3c\u6e08\u307f\u3067\u3059\u3002(Excel2003\u3067\u3082\u52d5\u3044\u305f)\nOption Explicit\n\n\nPrivate Type SYSTEMTIME\n    wYear As Integer\n    wMonth As Integer\n    wDayOfWeek As Integer\n    wDay As Integer\n    wHour As Integer\n    wMinute As Integer\n    wSecond As Integer\n    wMilliseconds As Integer\nEnd Type\n\n\nPrivate Declare Sub GetSystemTime Lib \"kernel32\" (lpSystemTime As SYSTEMTIME)\n\n\nPrivate Function GetMillisecond() As Long\n    Dim tSystem As SYSTEMTIME\n    On Error Resume Next\n    GetSystemTime tSystem\n    GetMillisecond = tSystem.wMilliseconds\nEnd Function\n\n\n' (\u53c2\u8003)http://d.hatena.ne.jp/KuroNeko666/20070821/1187689020\nPublic Function GetUnixTimestampWithMilliseconds() As Variant\n    Dim ut As Variant\n'    ut = ((Now - 25569) * 86400) - (3600 * 9) ' \"- (3600 * 9)\"\u306f\u65e5\u672c\u306e\u6642\u5dee\u3092\u5dee\u3057\u5f15\u3044\u3066\u3044\u308b\u3002\n'    ut = ut * 1000\n'    ut = ut + GetMillisecond\n    ut = (((Now - 25569) * 86400) - (3600 * 9)) * 1000 + GetMillisecond\n\n    GetUnixTimestampWithMilliseconds = ut\nEnd Function\n\n\nPrivate Sub Test()\n    Debug.Print \"(Node.js) new Date().valueOf() === \", GetUnixTimestampWithMilliseconds\nEnd Sub\n\nNode.js\u306e`new Date().valueOf()`\u3067\u5f97\u3089\u308c\u308bUnixTimestamp\u3068\u540c\u3058\u5024\u3092Excel VBA\u3067\u53d6\u5f97\u3059\u308b\u65b9\u6cd5\u3002\n\u79d2\u5358\u4f4d\u307e\u3067\u306f\u5272\u3068\u7c21\u5358\u306a\u306e\u3060\u3051\u3069\u30df\u30ea\u79d2\u5358\u4f4d\u307e\u3067\u3084\u308b\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3068\u3044\u3046\u8a71\u3002\n\n\u2193\u3053\u3046\u3044\u3046\u5024\u3092VBA\u3067\u53d6\u5f97\u3057\u305f\u3044\u3002\n\n```\n> new Date().valueOf()\n1472735489962\n```\n\n\u8272\u3005\u30b0\u30b0\u3063\u3066\u3088\u3046\u3084\u304f\u3053\u306e\u5f62\u306b\u843d\u3061\u7740\u304d\u307e\u3057\u305f\u3002\n\nWindows 7 Pro 32bit\u3001Excel2010\u3067\u691c\u8a3c\u6e08\u307f\u3067\u3059\u3002(Excel2003\u3067\u3082\u52d5\u3044\u305f)\n\n```vbnet\nOption Explicit\n\n\nPrivate Type SYSTEMTIME\n    wYear As Integer\n    wMonth As Integer\n    wDayOfWeek As Integer\n    wDay As Integer\n    wHour As Integer\n    wMinute As Integer\n    wSecond As Integer\n    wMilliseconds As Integer\nEnd Type\n\n\nPrivate Declare Sub GetSystemTime Lib \"kernel32\" (lpSystemTime As SYSTEMTIME)\n\n\nPrivate Function GetMillisecond() As Long\n    Dim tSystem As SYSTEMTIME\n    On Error Resume Next\n    GetSystemTime tSystem\n    GetMillisecond = tSystem.wMilliseconds\nEnd Function\n\n\n' (\u53c2\u8003)http://d.hatena.ne.jp/KuroNeko666/20070821/1187689020\nPublic Function GetUnixTimestampWithMilliseconds() As Variant\n    Dim ut As Variant\n'    ut = ((Now - 25569) * 86400) - (3600 * 9) ' \"- (3600 * 9)\"\u306f\u65e5\u672c\u306e\u6642\u5dee\u3092\u5dee\u3057\u5f15\u3044\u3066\u3044\u308b\u3002\n'    ut = ut * 1000\n'    ut = ut + GetMillisecond\n    ut = (((Now - 25569) * 86400) - (3600 * 9)) * 1000 + GetMillisecond\n\n    GetUnixTimestampWithMilliseconds = ut\nEnd Function\n\n\nPrivate Sub Test()\n    Debug.Print \"(Node.js) new Date().valueOf() === \", GetUnixTimestampWithMilliseconds\nEnd Sub\n```\n", "tags": ["Excel", "VBA"]}