{"tags": ["pbkdf2", "JavaScript", "Chrome", "firefox"], "context": "js\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3063\u3066\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u8abf\u3079\u305f\u306e\u3067\u66f8\u304d\u307e\u3059\u3002\n\uff08\u672c\u8a18\u4e8b\u306fWeb Crypto API\u3092\u4f7f\u3063\u305f\u30d6\u30e9\u30a6\u30b6\u3067\u306e\u52d5\u4f5c\u304c\u524d\u63d0\u306e\u3082\u306e\u3067\u3059\u3002Node.js\u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\uff09\n\nPBKDF2\nhttps://en.wikipedia.org/wiki/PBKDF2\n\nWeb Crypto API\nhttps://developer.mozilla.org/ja/docs/Web/API/Web_Crypto_API\nhttps://www.w3.org/TR/WebCryptoAPI/\nhttp://caniuse.com/#feat=cryptography\n\n\n\nUint8Array\nWeb Crypto API\u3092\u6271\u3046\u306b\u306fUint8Array\u3068\u304b\u6271\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\u307e\u305f\u666e\u6bb5\u4f7f\u308f\u306a\u3044\u5974\u51fa\u3066\u304d\u3066\u3064\u3089\u3044\u3067\u3059\u304c\u3001java\u306ebyte\u914d\u5217\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u6271\u3046\u5974\u3063\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\nhttp://qiita.com/yaegaki/items/909587a2dae20467c74a\nstring\u3068Uint8Array\u3092\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u305a\u7528\u610f\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nTextEncoder\u4f7f\u3048\u3063\u3066\u8a71\u3082\u3042\u308a\u307e\u3059\u304c\u3001\u3082\u3046\u65b0\u3057\u3044\u3053\u3068\u8abf\u3079\u305f\u304f\u306a\u3044\u3057\u5bfe\u5fdc\u72b6\u6cc1\u304c\u602a\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3057\u307e\u3057\u3087\u3046\u3002\n    var str2bytes = function(str) {\n        return (new Uint8Array(Array.prototype.map.call(str, function(c) {\n            return c.charCodeAt(0);\n        })));\n    };\n\n\u53c2\u8003\uff1ahttps://gist.github.com/kawanet/352a2ed1d1656816b2bc\n\u3042\u3068\u3001\u3064\u3044\u3067\u306a\u306e\u3067base64\u5909\u63db\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\nbtoa\u3063\u3066\u306e\u3092\u4f7f\u3046\u305d\u3046\u3067\u3059\u3002  \n    var bytes2base64 = function(bytes) {\n        return window.btoa(String.fromCharCode.apply(String, bytes));\n    };\n\n\u53c2\u8003\uff1ahttps://coolaj86.com/articles/typedarray-buffer-to-base64-in-javascript/\n\u4eca\u56de\u306f\u4f7f\u3044\u307e\u305b\u3093\u304c\u3001\u9006\u306fatob\u3063\u3066\u306e\u3092\u4f7f\u3046\u305d\u3046\u3067\u3059\u3002\n    var base642bytes = function(str) {\n        var binary = window.atob(str);\n        return str2bytes(binary);\n    };\n\n\nPBKDF2\n\u3084\u3063\u3068\u672c\u984c\u3067\u3059\u3002PBKDF2\u306b\u3088\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\nhttps://github.com/diafygi/webcrypto-examples#pbkdf2\nhttps://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey\nhttps://timtaubert.de/blog/2015/05/implementing-a-pbkdf2-based-password-storage-scheme-for-firefox-os/\n\nsalt\u751f\u6210\n\u307e\u305a\u306fsalt\u751f\u6210\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\n    var gensalt = function(saltLength) {\n        return window.crypto.getRandomValues(new Uint8Array(saltLength || 8));\n    };\n\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u5316\nimportKey\u3068\u304bderiveBits\u3068\u304b\u82f1\u8a9e\u8aad\u3081\u306a\u3044\u306e\u3067\u8a73\u3057\u3044\u4ed5\u69d8\u306f\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\n\u5148\u4eba\u305f\u3061\u306e\u5b9f\u88c5\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u884c\u3051\u308b\u69d8\u5b50\u3067\u3059\u3002\n    var importKey = function(password) {\n        return window.crypto.subtle.importKey(\n            'raw',\n            str2bytes(password),\n            {\n                name: 'PBKDF2',\n            },\n            false,\n            ['deriveBits']\n        );\n    };\n    var getHashOutputLength = function(hashAlgorithm) {\n        switch (hashAlgorithm) {\n        case 'SHA-1': return 160;\n        case 'SHA-256': return 256;\n        case 'SHA-384': return 384;\n        case 'SHA-512': return 512;\n        default:\n            break;\n        }\n\n        throw new Error('Unsupported hash algorithm');\n    };\n    var deriveBits = function(key, salt, hashAlgorithm, iterations) {\n        hashAlgorithm = hashAlgorithm || 'SHA-256';\n        return window.crypto.subtle.deriveBits(\n            {\n                name: 'PBKDF2',\n                salt: salt,\n                iterations: iterations || 1000,\n                hash: {name: hashAlgorithm}, //\"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n            },\n            key,\n            getHashOutputLength(hashAlgorithm)\n        );\n    };\n\n    /**\n     * \u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u5316\n     */\n    var hashpw = function(password, salt) {\n        return importKey(password).then(function(key) {\n            return deriveBits(key, salt, 'SHA-256', 1000);\n        }).then(function(buffer) {\n            var bytes = new Uint8Array(buffer);\n            return bytes2base64(bytes);\n        });\n    };\n\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\n\u547c\u3073\u51fa\u3057\u306f\u3053\u306e\u3088\u3046\u306a\u5f62\n    //\u52d5\u304b\u3057\u3066\u307f\u308b\n    var salt = gensalt();\n    hashpw('password', salt).then(function(hash) {\n        console.log(hash);\n    });\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nkggDYDDnVH9bSHLp4SXxqfVYmmz/ObedPqCkFzGJvVY=\n\n\n\u3053\u308c\u3060\u3068\u3046\u307e\u304f\u3044\u3063\u305f\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u306d\u3002\u5c11\u3057\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\n    //\u30c6\u30b9\u30c8\n    var salt1 = gensalt();\n    var salt2 = gensalt();\n    hashpw('password', salt1).then(function(hash) {\n        console.log('salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t\\t', hash);\n    });\n    hashpw('password', salt1).then(function(hash) {\n        console.log('\u3082\u3046\u4e00\u5ea6salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t', hash);\n    });\n    hashpw('password', salt2).then(function(hash) {\n        console.log('salt2\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t\\t', hash);\n    });\n    hashpw('pppppppp', salt1).then(function(hash) {\n        console.log('salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\u30d1\u30b9\u30ef\u30fc\u30c9\u9055\u3044\\t', hash);\n    });\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\nsalt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5              XHNJWY+6AI+JQOrwPsZkL6BhYEA1ZGwfjCwgaaANNHY=\n\u3082\u3046\u4e00\u5ea6salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5       XHNJWY+6AI+JQOrwPsZkL6BhYEA1ZGwfjCwgaaANNHY=\nsalt2\u3067\u306e\u30cf\u30c3\u30b7\u30e5              xkxyVfMsM+Z9G+hlN0E44Fb64hVpvzIWR0FMLKmXlHM=\nsalt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\u30d1\u30b9\u30ef\u30fc\u30c9\u9055\u3044  W872Ee1s6JajEUTkYvw9YwQA1vHF/L2DR8N2q6Ptcvc=\n\n\n\u3053\u308c\u3092\u898b\u305f\u3068\u3053\u308d\u3067PDKDF2\u306b\u306a\u3063\u3066\u308b\u304b\u3069\u3046\u304b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\n\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3068\u3057\u3066\u306f\u5927\u4e08\u592b\u306a\u96f0\u56f2\u6c17\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\n\n\u30d6\u30e9\u30a6\u30b6\u30b5\u30dd\u30fc\u30c8\n\u624b\u5143\u306e\u3001Chrome\u3068Firefox\u306f\u52d5\u304d\u305d\u3046\u3067\u3059\u3002\nIE\u306f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Edge\u306f\u78ba\u8a8d\u3057\u3066\u307e\u305b\u3093\u3002\n\n\u3053\u308c\u3067\u4f55\u304b\u4f5c\u3063\u3066\u3082\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u958b\u767a\u8005\u30c4\u30fc\u30eb\u4f7f\u308f\u308c\u305f\u3089\u30cf\u30c3\u30b7\u30e5\u5316\u30ed\u30b8\u30c3\u30af\u306f\u30d0\u30ec\u30d0\u30ec\u3067\u3059\u306d\u3002\u30cf\u30c3\u30b7\u30e5\u306f\u4e0d\u53ef\u9006\u3060\u304b\u3089\u3042\u308b\u7a0b\u5ea6\u306f\u5e73\u6c17\u306a\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u30ac\u30c1\u3067\u5b88\u308a\u305f\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u4f7f\u3046\u306e\u306f\u3088\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3069\u3046\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\njs\u3067\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3063\u3066\u3069\u3046\u3084\u308b\u3093\u3060\u308d\u3046\u3068\u601d\u3063\u3066\u8abf\u3079\u305f\u306e\u3067\u66f8\u304d\u307e\u3059\u3002\n\n\uff08\u672c\u8a18\u4e8b\u306fWeb Crypto API\u3092\u4f7f\u3063\u305f\u30d6\u30e9\u30a6\u30b6\u3067\u306e\u52d5\u4f5c\u304c\u524d\u63d0\u306e\u3082\u306e\u3067\u3059\u3002Node.js\u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u3002\uff09\n\n* PBKDF2\n    https://en.wikipedia.org/wiki/PBKDF2\n\n* Web Crypto API\n    https://developer.mozilla.org/ja/docs/Web/API/Web_Crypto_API\n    https://www.w3.org/TR/WebCryptoAPI/\n\n    http://caniuse.com/#feat=cryptography\n\n# Uint8Array\nWeb Crypto API\u3092\u6271\u3046\u306b\u306fUint8Array\u3068\u304b\u6271\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3059\u3002\n\u307e\u305f\u666e\u6bb5\u4f7f\u308f\u306a\u3044\u5974\u51fa\u3066\u304d\u3066\u3064\u3089\u3044\u3067\u3059\u304c\u3001java\u306ebyte\u914d\u5217\u307f\u305f\u3044\u306a\u3082\u306e\u3092\u6271\u3046\u5974\u3063\u3066\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff1f\nhttp://qiita.com/yaegaki/items/909587a2dae20467c74a\n\nstring\u3068Uint8Array\u3092\u5909\u63db\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u307e\u305a\u7528\u610f\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nTextEncoder\u4f7f\u3048\u3063\u3066\u8a71\u3082\u3042\u308a\u307e\u3059\u304c\u3001~~\u3082\u3046\u65b0\u3057\u3044\u3053\u3068\u8abf\u3079\u305f\u304f\u306a\u3044\u3057~~[\u5bfe\u5fdc\u72b6\u6cc1](http://caniuse.com/#feat=textencoder)\u304c\u602a\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u4eca\u56de\u306f\u4f7f\u308f\u306a\u3044\u3053\u3068\u306b\u3057\u307e\u3057\u3087\u3046\u3002\u305d\u3046\u3057\u307e\u3057\u3087\u3046\u3002\n\n```js\n\tvar str2bytes = function(str) {\n\t\treturn (new Uint8Array(Array.prototype.map.call(str, function(c) {\n\t\t\treturn c.charCodeAt(0);\n\t\t})));\n\t};\n```\n\u53c2\u8003\uff1ahttps://gist.github.com/kawanet/352a2ed1d1656816b2bc\n\n\u3042\u3068\u3001\u3064\u3044\u3067\u306a\u306e\u3067base64\u5909\u63db\u3082\u7528\u610f\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n`btoa`\u3063\u3066\u306e\u3092\u4f7f\u3046\u305d\u3046\u3067\u3059\u3002  \n\n```js\n\tvar bytes2base64 = function(bytes) {\n\t\treturn window.btoa(String.fromCharCode.apply(String, bytes));\n\t};\n```\n\u53c2\u8003\uff1ahttps://coolaj86.com/articles/typedarray-buffer-to-base64-in-javascript/\n\n\u4eca\u56de\u306f\u4f7f\u3044\u307e\u305b\u3093\u304c\u3001\u9006\u306f`atob`\u3063\u3066\u306e\u3092\u4f7f\u3046\u305d\u3046\u3067\u3059\u3002\n\n```js\n\tvar base642bytes = function(str) {\n\t\tvar binary = window.atob(str);\n\t\treturn str2bytes(binary);\n\t};\n```\n\n# PBKDF2\n\u3084\u3063\u3068\u672c\u984c\u3067\u3059\u3002PBKDF2\u306b\u3088\u308b\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\u3042\u308a\u304c\u3068\u3046\u3054\u3056\u3044\u307e\u3059\u3002\nhttps://github.com/diafygi/webcrypto-examples#pbkdf2\nhttps://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/deriveKey\nhttps://timtaubert.de/blog/2015/05/implementing-a-pbkdf2-based-password-storage-scheme-for-firefox-os/\n\n## salt\u751f\u6210\n\u307e\u305a\u306fsalt\u751f\u6210\u3092\u5b9f\u88c5\u3057\u307e\u3057\u3087\u3046\u3002\n\n```js\n\tvar gensalt = function(saltLength) {\n\t\treturn window.crypto.getRandomValues(new Uint8Array(saltLength || 8));\n\t};\n```\n\n## \u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u5316\nimportKey\u3068\u304bderiveBits\u3068\u304b\u82f1\u8a9e\u8aad\u3081\u306a\u3044\u306e\u3067\u8a73\u3057\u3044\u4ed5\u69d8\u306f\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\n\u5148\u4eba\u305f\u3061\u306e\u5b9f\u88c5\u3092\u898b\u308b\u3068\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3051\u3070\u884c\u3051\u308b\u69d8\u5b50\u3067\u3059\u3002\n\n```js\n\tvar importKey = function(password) {\n\t\treturn window.crypto.subtle.importKey(\n\t\t\t'raw',\n\t\t\tstr2bytes(password),\n\t\t\t{\n\t\t\t\tname: 'PBKDF2',\n\t\t\t},\n\t\t\tfalse,\n\t\t\t['deriveBits']\n\t\t);\n\t};\n\tvar getHashOutputLength = function(hashAlgorithm) {\n\t\tswitch (hashAlgorithm) {\n\t\tcase 'SHA-1': return 160;\n\t\tcase 'SHA-256': return 256;\n\t\tcase 'SHA-384': return 384;\n\t\tcase 'SHA-512': return 512;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\tthrow new Error('Unsupported hash algorithm');\n\t};\n\tvar deriveBits = function(key, salt, hashAlgorithm, iterations) {\n\t\thashAlgorithm = hashAlgorithm || 'SHA-256';\n\t\treturn window.crypto.subtle.deriveBits(\n\t\t\t{\n\t\t\t\tname: 'PBKDF2',\n\t\t\t\tsalt: salt,\n\t\t\t\titerations: iterations || 1000,\n\t\t\t\thash: {name: hashAlgorithm}, //\"SHA-1\", \"SHA-256\", \"SHA-384\", or \"SHA-512\"\n\t\t\t},\n\t\t\tkey,\n\t\t\tgetHashOutputLength(hashAlgorithm)\n\t\t);\n\t};\n\n\t/**\n\t * \u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u5316\n\t */\n\tvar hashpw = function(password, salt) {\n\t\treturn importKey(password).then(function(key) {\n\t\t\treturn deriveBits(key, salt, 'SHA-256', 1000);\n\t\t}).then(function(buffer) {\n\t\t\tvar bytes = new Uint8Array(buffer);\n\t\t\treturn bytes2base64(bytes);\n\t\t});\n\t};\n```\n\n## \u52d5\u304b\u3057\u3066\u307f\u308b\n\u547c\u3073\u51fa\u3057\u306f\u3053\u306e\u3088\u3046\u306a\u5f62\n\n```js\n\t//\u52d5\u304b\u3057\u3066\u307f\u308b\n\tvar salt = gensalt();\n\thashpw('password', salt).then(function(hash) {\n\t\tconsole.log(hash);\n\t});\n```\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nkggDYDDnVH9bSHLp4SXxqfVYmmz/ObedPqCkFzGJvVY=\n```\n\n\u3053\u308c\u3060\u3068\u3046\u307e\u304f\u3044\u3063\u305f\u304b\u308f\u304b\u308a\u307e\u305b\u3093\u306d\u3002\u5c11\u3057\u30c6\u30b9\u30c8\u3092\u3057\u307e\u3059\u3002\n\n## \u30c6\u30b9\u30c8\n\n```js\n\t//\u30c6\u30b9\u30c8\n\tvar salt1 = gensalt();\n\tvar salt2 = gensalt();\n\thashpw('password', salt1).then(function(hash) {\n\t\tconsole.log('salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t\\t', hash);\n\t});\n\thashpw('password', salt1).then(function(hash) {\n\t\tconsole.log('\u3082\u3046\u4e00\u5ea6salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t', hash);\n\t});\n\thashpw('password', salt2).then(function(hash) {\n\t\tconsole.log('salt2\u3067\u306e\u30cf\u30c3\u30b7\u30e5\\t\\t\\t\\t', hash);\n\t});\n\thashpw('pppppppp', salt1).then(function(hash) {\n\t\tconsole.log('salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\u30d1\u30b9\u30ef\u30fc\u30c9\u9055\u3044\\t', hash);\n\t});\n```\n\n\n```text:\u30b3\u30f3\u30bd\u30fc\u30eb\nsalt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5              XHNJWY+6AI+JQOrwPsZkL6BhYEA1ZGwfjCwgaaANNHY=\n\u3082\u3046\u4e00\u5ea6salt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5       XHNJWY+6AI+JQOrwPsZkL6BhYEA1ZGwfjCwgaaANNHY=\nsalt2\u3067\u306e\u30cf\u30c3\u30b7\u30e5              xkxyVfMsM+Z9G+hlN0E44Fb64hVpvzIWR0FMLKmXlHM=\nsalt1\u3067\u306e\u30cf\u30c3\u30b7\u30e5\u30d1\u30b9\u30ef\u30fc\u30c9\u9055\u3044  W872Ee1s6JajEUTkYvw9YwQA1vHF/L2DR8N2q6Ptcvc=\n```\n\n\u3053\u308c\u3092\u898b\u305f\u3068\u3053\u308d\u3067PDKDF2\u306b\u306a\u3063\u3066\u308b\u304b\u3069\u3046\u304b\u306f\u308f\u304b\u308a\u307e\u305b\u3093\u304c\u3001\n\u30d1\u30b9\u30ef\u30fc\u30c9\u30cf\u30c3\u30b7\u30e5\u3068\u3057\u3066\u306f\u5927\u4e08\u592b\u306a\u96f0\u56f2\u6c17\u304c\u51fa\u3066\u3044\u307e\u3059\u3002\n\n# \u30d6\u30e9\u30a6\u30b6\u30b5\u30dd\u30fc\u30c8\n\u624b\u5143\u306e\u3001Chrome\u3068Firefox\u306f\u52d5\u304d\u305d\u3046\u3067\u3059\u3002\nIE\u306f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002Edge\u306f\u78ba\u8a8d\u3057\u3066\u307e\u305b\u3093\u3002\n\n---\n\n\u3053\u308c\u3067\u4f55\u304b\u4f5c\u3063\u3066\u3082\u3001\u30d6\u30e9\u30a6\u30b6\u306e\u958b\u767a\u8005\u30c4\u30fc\u30eb\u4f7f\u308f\u308c\u305f\u3089\u30cf\u30c3\u30b7\u30e5\u5316\u30ed\u30b8\u30c3\u30af\u306f\u30d0\u30ec\u30d0\u30ec\u3067\u3059\u306d\u3002\u30cf\u30c3\u30b7\u30e5\u306f\u4e0d\u53ef\u9006\u3060\u304b\u3089\u3042\u308b\u7a0b\u5ea6\u306f\u5e73\u6c17\u306a\u6c17\u304c\u3057\u307e\u3059\u304c\u3001\u30ac\u30c1\u3067\u5b88\u308a\u305f\u3044\u30d1\u30b9\u30ef\u30fc\u30c9\u3067\u4f7f\u3046\u306e\u306f\u3088\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\u3069\u3046\u306a\u306e\u3067\u3057\u3087\u3046\u304b\uff1f\n"}