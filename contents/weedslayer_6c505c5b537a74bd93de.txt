{"context": " More than 1 year has passed since last update.\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u6587\u7ae0\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\u6bce\u56de\u8aad\u3080\u5ea6\u306b\u5143\u6c17\u3092\u304f\u308c\u308b\u30a2\u30db\u306a\u8a71\u306a\u306e\u3067\u3053\u3044\u3064\u3092\u9078\u3093\u3067\u307f\u307e\u3057\u305f\uff08\u7b11\uff09\n\nMy friend ripped open a handwarmer, and when the powder got on his hands his parents told him his hands would disintegrate by age 30. We looked up what disintegrate meant later that night, and he bawled hysterically while staring at his hands.\n\n\u300c\u3053\u306e\u6587\u7ae0\u3092\u30b9\u30da\u30fc\u30b9\u3054\u3068\u306b\u533a\u5207\u3063\u3066dictionary\u306b\u5165\u308c\u305f\u3044\u300d\u306a\u3093\u3066\u3053\u3068\u304c\u3053\u306e\u5148\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3044\u3084\u3001\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u4eca\u56de\u306f\u305d\u306e\u3084\u308a\u65b9\u306b\u3064\u3044\u3066\u305f\u307e\u305f\u307eSOF\u3067\u898b\u3064\u3051\u305f\u306e\u3067\u52c9\u5f37\u306e\u30e1\u30e2\u304c\u3066\u3089\u4f7f\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u90fd\u5408\u4e0a\u3001\u95a2\u6570\u306b\u307e\u3068\u3081\u3066\u304b\u3089\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\ns2 = s2 = \"My friend ripped open a handwarmer, and when the powder got on his hands his parents told him his hands would disintegrate by age 30. We looked up what disintegrate meant later that night, and he bawled hysterically while staring at his hands\"\n\ndef splitter(some_sentence):\n    out = some_sentence.split() # split s by whitespace into out in a form of a list\n    entries = dict([(x,y) for x,y in zip(out[::2], out[1::2])]) # loops through every word in a given sentence 1st word = key, 2nd word = value\n    return entries\n>>> splitter(s2)\n{'that': 'night,', 'My': 'friend', 'a': 'handwarmer,', 'looked': 'up', 'told': 'him', 'what': 'disintegrate', 'and': 'he', 'by': 'age', 'bawled': 'hysterically', 'while': 'staring', 'got': 'on', '30.': 'We', 'the': 'powder', 'at': 'his', 'his': 'hands', 'would': 'disintegrate', 'meant': 'later', 'ripped': 'open'}\n\n\u500b\u4eba\u7684\u306b\u306f\u30ea\u30b9\u30c8\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u306e\u4f7f\u3044\u65b9\u306b\u523a\u6fc0\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\u30ea\u30b9\u30c8\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u3063\u3066\u3069\u3053\u306b\u3067\u3082\u5fdc\u7528\u304c\u52b9\u304f\u7d20\u6674\u3089\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3060\u306a\u3068\u3002\n\u7c21\u5358\u306b\u5f79\u5272\u3092\u8aac\u660e\u3059\u308b\u3068\n\n\u307e\u305a\u9069\u5f53\u306b\u5165\u308c\u3066\u304d\u305f\u6587\u7ae0\u3092split\u3067\u30b9\u30da\u30fc\u30b9\u6bce\u306b\u30b9\u30e9\u30a4\u30b9\u3057\u3066out\u306b\u5165\u308c\u308b\u3002\uff08\u30ea\u30b9\u30c8\u3067\uff09['My', 'friend', 'ripped', 'open', 'a', 'handwarmer,', 'and', 'when', 'the', 'powder', 'got', 'on', 'his', 'hands', 'his', 'parents', 'told', 'him', 'his', 'hands', 'would', 'disintegrate', 'by', 'age', '30.', 'We', 'looked', 'up', 'what', 'disintegrate', 'meant', 'later', 'that', 'night,', 'and', 'he', 'bawled', 'hysterically', 'while', 'staring', 'at', 'his', 'hands']\n\n\u305d\u306e\u30ea\u30b9\u30c8\u3092out[::2]\u3068out[1::2]\u3067\u5206\u3051\u3066\u524d\u8005\u3092x\u5f8c\u8005\u3092y\u3068\u3059\u308b\u3002\u8a00\u3044\u65b9\u3092\u5909\u3048\u308c\u3070\u30ea\u30b9\u30c8\u306e\u4e2d\u306e\u4e00\u756a\u6700\u521d\u304b\u3089\u4e00\u500b\u98db\u3070\u3057\u3067\u5358\u8a9e\u3092\u9078\u3093\u3067\u3044\u304f\u65b9\u304cx\u3002\u98db\u3070\u3057\u305f\u5358\u8a9e\u3092\u62fe\u3063\u3066\u3044\u304f\u306e\u304cy\u307f\u305f\u3044\u306a\u30a4\u30e1\u30fc\u30b8\u3002\n\nzip\u3067x\u3068y\u3092\u30bf\u30d7\u30eb\u306e\u4e2d\u306b\u5165\u308c\u3066\u30da\u30a2\u306b\u3059\u308b\u3002`[('My', 'friend'), ('ripped', 'open'), ('a', 'handwarmer,'), ('and', 'when'), ('the', 'powder'), ('got', 'on'), ('his', 'hands'), ('his', 'parents'), ('told', 'him'), ('his', 'hands'), ('would', 'disintegrate'), ('by', 'age'), ('30.', 'We'), ('looked', 'up'), ('what', 'disintegrate'), ('meant', 'later'), ('that', 'night,'), ('and', 'he'), ('bawled', 'hysterically'), ('while', 'staring'), ('at', 'his')]\n\nx\u3092key\u306b\u3002y\u3092value\u306b\u5165\u308c\u3066dict()\u3067\u30da\u30a2\u3092\u304f\u3063\u3064\u3051\u3066\u5b8c\u6210\u3002\n\n\u30b5\u30a4\u30c8\u4e0a\u306e\u4f8b\u3092\u69cb\u9020\u5206\u89e3\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058:\n# s = '#one cat #two dogs #three birds'\n# >>> splitter(s)\n# out = ['#one', 'cat', '#two', 'dogs', '#three', 'birds']\n# out[::2]\n# ['#one', '#two', '#three']\n# out[1::2]\n# ['cat', 'dogs', 'birds']\n\n\u3057\u304b\u3057\u3053\u3093\u306a\u4f7f\u3044\u65b9\u306f\u7d76\u5bfe\u3057\u306a\u3044\u3068\u601d\u3046\u306e\u3067dictionary comprehension\u306e\u4e2d\u306bif\u3092\u5165\u308c\u3066\u53d6\u6368\u9078\u629e\u3057\u3066\u305d\u306e\u5358\u8a9e\u306e\u307f\u3092\u5165\u308c\u308b\u3068\u3057\u305f\u307b\u3046\u304c\u660e\u3089\u304b\u306b\u8ce2\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3057\u304f\u306fenumerator\u7684\u306a\u95a2\u6570\u3092\u3064\u304f\u3063\u3066key\u3092\u601d\u3044\u304d\u3063\u3066\u756a\u53f7\u306b\u3059\u308b\u306e\u3082\u6709\u308a\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u306a\u3089\u5358\u8a9e\u306e\u6570\u306b\u5fdc\u3058\u3066key\u306e\u756a\u53f7\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u30c7\u30fc\u30bf\u306e\u6271\u3044\u306a\u3069\u3067\u5927\u6d3b\u8e8d\u3057\u305d\u3046\u3067\u3059\u3002\u53c2\u8003\u307e\u3067\u306b\u3002\ndef enumerate(s, start=0):\n    return zip([i for i in range(start, (start + len(s)))], s)\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u69d8\u306a\u6587\u7ae0\u304c\u3042\u3063\u305f\u3068\u3059\u308b\u3002\u6bce\u56de\u8aad\u3080\u5ea6\u306b\u5143\u6c17\u3092\u304f\u308c\u308b\u30a2\u30db\u306a\u8a71\u306a\u306e\u3067\u3053\u3044\u3064\u3092\u9078\u3093\u3067\u307f\u307e\u3057\u305f\uff08\u7b11\uff09\n\n> _My friend ripped open a handwarmer, and when the powder got on his hands his parents told him his hands would disintegrate by age 30. We looked up what disintegrate meant later that night, and he bawled hysterically while staring at his hands._\n\n\u300c\u3053\u306e\u6587\u7ae0\u3092\u30b9\u30da\u30fc\u30b9\u3054\u3068\u306b\u533a\u5207\u3063\u3066`dictionary`\u306b\u5165\u308c\u305f\u3044\u300d\u306a\u3093\u3066\u3053\u3068\u304c\u3053\u306e\u5148\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002~~\u3044\u3084\u3001\u306a\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002~~\u4eca\u56de\u306f\u305d\u306e\u3084\u308a\u65b9\u306b\u3064\u3044\u3066\u305f\u307e\u305f\u307e<a href=\"http://stackoverflow.com/questions/35618307/how-to-transform-string-into-dict\" target=\"_blank\">SOF</a>\u3067\u898b\u3064\u3051\u305f\u306e\u3067\u52c9\u5f37\u306e\u30e1\u30e2\u304c\u3066\u3089\u4f7f\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u90fd\u5408\u4e0a\u3001\u95a2\u6570\u306b\u307e\u3068\u3081\u3066\u304b\u3089\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```\ns2 = s2 = \"My friend ripped open a handwarmer, and when the powder got on his hands his parents told him his hands would disintegrate by age 30. We looked up what disintegrate meant later that night, and he bawled hysterically while staring at his hands\"\n\ndef splitter(some_sentence):\n\tout = some_sentence.split() # split s by whitespace into out in a form of a list\n\tentries = dict([(x,y) for x,y in zip(out[::2], out[1::2])]) # loops through every word in a given sentence 1st word = key, 2nd word = value\n\treturn entries\n>>> splitter(s2)\n{'that': 'night,', 'My': 'friend', 'a': 'handwarmer,', 'looked': 'up', 'told': 'him', 'what': 'disintegrate', 'and': 'he', 'by': 'age', 'bawled': 'hysterically', 'while': 'staring', 'got': 'on', '30.': 'We', 'the': 'powder', 'at': 'his', 'his': 'hands', 'would': 'disintegrate', 'meant': 'later', 'ripped': 'open'}\n```\n\n\u500b\u4eba\u7684\u306b\u306f\u30ea\u30b9\u30c8\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u306e\u4f7f\u3044\u65b9\u306b\u523a\u6fc0\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\u30ea\u30b9\u30c8\u30b9\u30e9\u30a4\u30b7\u30f3\u30b0\u3063\u3066\u3069\u3053\u306b\u3067\u3082\u5fdc\u7528\u304c\u52b9\u304f\u7d20\u6674\u3089\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u3060\u306a\u3068\u3002\n\u7c21\u5358\u306b\u5f79\u5272\u3092\u8aac\u660e\u3059\u308b\u3068\n\n1. \u307e\u305a\u9069\u5f53\u306b\u5165\u308c\u3066\u304d\u305f\u6587\u7ae0\u3092`split`\u3067\u30b9\u30da\u30fc\u30b9\u6bce\u306b\u30b9\u30e9\u30a4\u30b9\u3057\u3066`out`\u306b\u5165\u308c\u308b\u3002\uff08\u30ea\u30b9\u30c8\u3067\uff09`['My', 'friend', 'ripped', 'open', 'a', 'handwarmer,', 'and', 'when', 'the', 'powder', 'got', 'on', 'his', 'hands', 'his', 'parents', 'told', 'him', 'his', 'hands', 'would', 'disintegrate', 'by', 'age', '30.', 'We', 'looked', 'up', 'what', 'disintegrate', 'meant', 'later', 'that', 'night,', 'and', 'he', 'bawled', 'hysterically', 'while', 'staring', 'at', 'his', 'hands']`\n2. \u305d\u306e\u30ea\u30b9\u30c8\u3092`out[::2]`\u3068`out[1::2]`\u3067\u5206\u3051\u3066\u524d\u8005\u3092`x`\u5f8c\u8005\u3092`y`\u3068\u3059\u308b\u3002\u8a00\u3044\u65b9\u3092\u5909\u3048\u308c\u3070\u30ea\u30b9\u30c8\u306e\u4e2d\u306e\u4e00\u756a\u6700\u521d\u304b\u3089\u4e00\u500b\u98db\u3070\u3057\u3067\u5358\u8a9e\u3092\u9078\u3093\u3067\u3044\u304f\u65b9\u304c`x`\u3002\u98db\u3070\u3057\u305f\u5358\u8a9e\u3092\u62fe\u3063\u3066\u3044\u304f\u306e\u304c`y`\u307f\u305f\u3044\u306a\u30a4\u30e1\u30fc\u30b8\u3002\n3. `zip`\u3067`x`\u3068`y`\u3092\u30bf\u30d7\u30eb\u306e\u4e2d\u306b\u5165\u308c\u3066\u30da\u30a2\u306b\u3059\u308b\u3002`[('My', 'friend'), ('ripped', 'open'), ('a', 'handwarmer,'), ('and', 'when'), ('the', 'powder'), ('got', 'on'), ('his', 'hands'), ('his', 'parents'), ('told', 'him'), ('his', 'hands'), ('would', 'disintegrate'), ('by', 'age'), ('30.', 'We'), ('looked', 'up'), ('what', 'disintegrate'), ('meant', 'later'), ('that', 'night,'), ('and', 'he'), ('bawled', 'hysterically'), ('while', 'staring'), ('at', 'his')]\n4. `x`\u3092`key`\u306b\u3002`y`\u3092`value`\u306b\u5165\u308c\u3066`dict()`\u3067\u30da\u30a2\u3092\u304f\u3063\u3064\u3051\u3066\u5b8c\u6210\u3002\n\n\u30b5\u30a4\u30c8\u4e0a\u306e\u4f8b\u3092\u69cb\u9020\u5206\u89e3\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058:\n\n```\n# s = '#one cat #two dogs #three birds'\n# >>> splitter(s)\n# out = ['#one', 'cat', '#two', 'dogs', '#three', 'birds']\n# out[::2]\n# ['#one', '#two', '#three']\n# out[1::2]\n# ['cat', 'dogs', 'birds']\n```\n\n\u3057\u304b\u3057\u3053\u3093\u306a\u4f7f\u3044\u65b9\u306f\u7d76\u5bfe\u3057\u306a\u3044\u3068\u601d\u3046\u306e\u3067dictionary comprehension\u306e\u4e2d\u306b`if`\u3092\u5165\u308c\u3066\u53d6\u6368\u9078\u629e\u3057\u3066\u305d\u306e\u5358\u8a9e\u306e\u307f\u3092\u5165\u308c\u308b\u3068\u3057\u305f\u307b\u3046\u304c\u660e\u3089\u304b\u306b\u8ce2\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u3082\u3057\u304f\u306fenumerator\u7684\u306a\u95a2\u6570\u3092\u3064\u304f\u3063\u3066`key`\u3092\u601d\u3044\u304d\u3063\u3066\u756a\u53f7\u306b\u3059\u308b\u306e\u3082\u6709\u308a\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u308c\u306a\u3089\u5358\u8a9e\u306e\u6570\u306b\u5fdc\u3058\u3066`key`\u306e\u756a\u53f7\u304c\u51fa\u3066\u304f\u308b\u306e\u3067\u30c7\u30fc\u30bf\u306e\u6271\u3044\u306a\u3069\u3067\u5927\u6d3b\u8e8d\u3057\u305d\u3046\u3067\u3059\u3002\u53c2\u8003\u307e\u3067\u306b\u3002\n\n```\ndef enumerate(s, start=0):\n    return zip([i for i in range(start, (start + len(s)))], s)\n```\n", "tags": ["python3", "list", "dictionary", "enumerate"]}