{"context": "\n\ncocos2d-x\u3067\u30ad\u30e3\u30e9\u304c\u79fb\u52d5\u3057\u3066\u3082\u5e38\u306b\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u308b\u306b\u306fFollow\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\n3D\u30842D\u306e\u30b2\u30fc\u30e0\u3067\u306f\u901a\u5e38\u30ab\u30e1\u30e9\u3068\u3044\u3046\u6982\u5ff5\u3067\u8868\u793a\u3092\u56fa\u5b9a\u5316\u3055\u305b\u308b\u304c\u3001\ncocos2d-x\u3067\u306fFollow\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u30ab\u30e1\u30e9\u306e\u4ee3\u7528\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3080\u3057\u308dFollow\u3092\u4f7f\u3046\u306e\u304c\u666e\u901a\u306a\u306e\u304b\u3082\n\nHelloWorldScene.cpp\n//Rect\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u7bc4\u56f2 \u666e\u901a\u306f\u30de\u30c3\u30d7\u306e\u5927\u304d\u3055\nFollow *follow = Follow::create(player, Rect(0, 0, 2000, 1334));\n//\u3053\u308c\u3092Layer\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3055\u305b\u308b\nthis->runAction(follow);\n\n\n\n\u304a\u307e\u3051\n\u3053\u308c\u3067\u306f\u5e38\u306b\u4e2d\u592e\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n\u554f\u984c\u306a\u306e\u306f\u6a2a\u30b9\u30af\u30ed\u30fc\u30eb\u3060\u3051\u306e\u5834\u5408\u3068\u304b\u7e26\u30b9\u30af\u30ed\u30fc\u30eb\u3060\u3051\u3068\u304b\u306e\u5834\u5408\u306b\n\u4e2d\u592e\u306b\u30ad\u30e3\u30e9\u304c\u8868\u793a\u3055\u308c\u3066\u306f\u30d7\u30ec\u30a4\u3057\u3065\u3089\u3044\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u6982\u5ff5\u304cFollow\u306b\u306f\u307e\u3060\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067cocos2d-x\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3059\u3067\u306b\u4fee\u6b63\u3057\u305f\u4eba\u304cGitHub\u306b\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u305d\u3053\u3078\u306eURL\u3092\u5f35\u308a\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\uff1a\nhttps://github.com/AlwynC/cocos2d-x/blob/d22dca636182ac48f4d7f38bf33d251e427f6f10/cocos/2d/CCAction.cpp\n\u516c\u958b\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\uff1a\nhttps://github.com/cocos2d/cocos2d-x/pull/15194/files\n\n\nCCAction.h\n//\u8ffd\u52a0\npublic:\n static Follow* createWithOffset(Node* followedNode, float xOffset, float yOffset, const Rect& rect = Rect::ZERO);\n bool initWithTargetAndOffset(Node *followedNode, float xOffset, float yOffset, const Rect& rect);\n\n//\u4fee\u6b63\n Follow()\n    : _followedNode(nullptr)\n    , _boundarySet(false)\n    , _boundaryFullyCovered(false)\n    , _leftBoundary(0.0)\n    , _rightBoundary(0.0)\n    , _topBoundary(0.0)\n    , _bottomBoundary(0.0)\n    , _offsetX(0) //\u3053\u308c\u3092\u8ffd\u52a0\n    , _offsetY(0) //\u3053\u308c\u3092\u8ffd\u52a0\n    , _worldRect(Rect::ZERO)\n    {}\n\nprotected:\n\u3000float _offsetX; //\u8ffd\u52a0\n\u3000float _offsetY; //\u8ffd\u52a0\n\n\n\nCCAction.cpp\n//\u8ffd\u52a0\nFollow* Follow::createWithOffset(Node* followedNode, float xOffset, float yOffset, const Rect& rect/*= Rect::ZERO*/)\n{\n    Follow *follow = new (std::nothrow) Follow();\n    bool valid;\n    valid = follow->initWithTargetAndOffset(followedNode, xOffset, yOffset, rect);\n\n    if (follow && valid)\n    {\n        follow->autorelease();\n        return follow;\n    }\n    delete follow;\n\n    return nullptr;\n}\n\n//\u8ffd\u52a0\nbool Follow::initWithTargetAndOffset(Node *followedNode, float xOffset, float yOffset, const Rect& rect)\n{\n    CCASSERT(followedNode != nullptr, \"FollowedNode can't be NULL\");\n    if (followedNode == nullptr)\n    {\n        log(\"Follow::initWithTarget error: followedNode is nullptr!\");\n        return false;\n    }\n\n    followedNode->retain();\n    _followedNode = followedNode;\n    _worldRect = rect;\n    _boundarySet = !rect.equals(Rect::ZERO);\n    _boundaryFullyCovered = false;\n\n\n    Size winSize = Director::getInstance()->getWinSize();\n    _fullScreenSize.set(winSize.width, winSize.height);\n    _halfScreenSize = _fullScreenSize * 0.5f;\n    _offsetX = xOffset;\n    _offsetY = yOffset;\n    _halfScreenSize.x += _offsetX;\n    _halfScreenSize.y += _offsetY;\n\n    if (_boundarySet)\n    {\n        _leftBoundary = -((rect.origin.x + rect.size.width) - _fullScreenSize.x);\n        _rightBoundary = -rect.origin.x;\n        _topBoundary = -rect.origin.y;\n        _bottomBoundary = -((rect.origin.y + rect.size.height) - _fullScreenSize.y);\n\n        if (_rightBoundary < _leftBoundary)\n        {\n            // screen width is larger than world's boundary width\n            //set both in the middle of the world\n            _rightBoundary = _leftBoundary = (_leftBoundary + _rightBoundary) / 2;\n\n        }\n        if (_topBoundary < _bottomBoundary)\n        {\n            // screen width is larger than world's boundary width\n            //set both in the middle of the world\n            _topBoundary = _bottomBoundary = (_topBoundary + _bottomBoundary) / 2;\n        }\n\n        if ((_topBoundary == _bottomBoundary) && (_leftBoundary == _rightBoundary))\n        {\n            _boundaryFullyCovered = true;\n        }\n    }\n\n    return true;\n}\n\n\n//\u4fee\u6b63\nFollow* Follow::clone() const\n{\n    // no copy constructor\n    return Follow::createWithOffset(_followedNode, _offsetX, _offsetY, _worldRect);\n    /*\n    auto a = new (std::nothrow) Follow();\n    a->initWithTarget(_followedNode, _worldRect);\n    a->autorelease();\n    return a;\n    */\n}\n\n\n\n#cocos2d-x\u3067\u30ad\u30e3\u30e9\u304c\u79fb\u52d5\u3057\u3066\u3082\u5e38\u306b\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u308b\u306b\u306fFollow\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\n\n3D\u30842D\u306e\u30b2\u30fc\u30e0\u3067\u306f\u901a\u5e38\u30ab\u30e1\u30e9\u3068\u3044\u3046\u6982\u5ff5\u3067\u8868\u793a\u3092\u56fa\u5b9a\u5316\u3055\u305b\u308b\u304c\u3001\ncocos2d-x\u3067\u306fFollow\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u3053\u3068\u3067\u30ab\u30e1\u30e9\u306e\u4ee3\u7528\u3092\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u3080\u3057\u308dFollow\u3092\u4f7f\u3046\u306e\u304c\u666e\u901a\u306a\u306e\u304b\u3082\n\n```cpp:HelloWorldScene.cpp\n//Rect\u306f\u30b9\u30af\u30ed\u30fc\u30eb\u7bc4\u56f2 \u666e\u901a\u306f\u30de\u30c3\u30d7\u306e\u5927\u304d\u3055\nFollow *follow = Follow::create(player, Rect(0, 0, 2000, 1334));\n//\u3053\u308c\u3092Layer\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u3068\u3057\u3066\u5b9f\u884c\u3055\u305b\u308b\nthis->runAction(follow);\n```\n<img width=\"446\" alt=\"2016-12-23.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/142882/c3d11a8e-a153-bb57-9974-c50e881739b4.png\">\n\n\n\u304a\u307e\u3051\n\u3053\u308c\u3067\u306f\u5e38\u306b\u4e2d\u592e\u306b\u8868\u793a\u3055\u308c\u308b\u3002\n\u554f\u984c\u306a\u306e\u306f\u6a2a\u30b9\u30af\u30ed\u30fc\u30eb\u3060\u3051\u306e\u5834\u5408\u3068\u304b\u7e26\u30b9\u30af\u30ed\u30fc\u30eb\u3060\u3051\u3068\u304b\u306e\u5834\u5408\u306b\n\u4e2d\u592e\u306b\u30ad\u30e3\u30e9\u304c\u8868\u793a\u3055\u308c\u3066\u306f\u30d7\u30ec\u30a4\u3057\u3065\u3089\u3044\u3002\n\u30aa\u30d5\u30bb\u30c3\u30c8\u306e\u6982\u5ff5\u304cFollow\u306b\u306f\u307e\u3060\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067cocos2d-x\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u4fee\u6b63\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u3059\u3067\u306b\u4fee\u6b63\u3057\u305f\u4eba\u304cGitHub\u306b\u516c\u958b\u3057\u3066\u3044\u308b\u306e\u3067\u305d\u3053\u3078\u306eURL\u3092\u5f35\u308a\u307e\u3059\u3002\n\n\u30b3\u30fc\u30c9\u305d\u306e\u3082\u306e\uff1a\nhttps://github.com/AlwynC/cocos2d-x/blob/d22dca636182ac48f4d7f38bf33d251e427f6f10/cocos/2d/CCAction.cpp\n\n\u516c\u958b\u3057\u3066\u3044\u308b\u30b5\u30a4\u30c8\uff1a\nhttps://github.com/cocos2d/cocos2d-x/pull/15194/files\n\n\n<img width=\"446\" alt=\"2016-12-23 (1).png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/142882/35a465c7-31f3-832f-e15f-4b81d54264ee.png\">\n\n```cpp:CCAction.h\n//\u8ffd\u52a0\npublic:\n static Follow* createWithOffset(Node* followedNode, float xOffset, float yOffset, const Rect& rect = Rect::ZERO);\n bool initWithTargetAndOffset(Node *followedNode, float xOffset, float yOffset, const Rect& rect);\n\n//\u4fee\u6b63\n Follow()\n    : _followedNode(nullptr)\n    , _boundarySet(false)\n    , _boundaryFullyCovered(false)\n    , _leftBoundary(0.0)\n    , _rightBoundary(0.0)\n    , _topBoundary(0.0)\n    , _bottomBoundary(0.0)\n\t, _offsetX(0) //\u3053\u308c\u3092\u8ffd\u52a0\n\t, _offsetY(0) //\u3053\u308c\u3092\u8ffd\u52a0\n    , _worldRect(Rect::ZERO)\n    {}\n\nprotected:\n\u3000float _offsetX; //\u8ffd\u52a0\n\u3000float _offsetY; //\u8ffd\u52a0\n```\n\n\n```cpp:CCAction.cpp\n//\u8ffd\u52a0\nFollow* Follow::createWithOffset(Node* followedNode, float xOffset, float yOffset, const Rect& rect/*= Rect::ZERO*/)\n{\n\tFollow *follow = new (std::nothrow) Follow();\n\tbool valid;\n\tvalid = follow->initWithTargetAndOffset(followedNode, xOffset, yOffset, rect);\n\n\tif (follow && valid)\n\t{\n\t\tfollow->autorelease();\n\t\treturn follow;\n\t}\n\tdelete follow;\n\n\treturn nullptr;\n}\n\n//\u8ffd\u52a0\nbool Follow::initWithTargetAndOffset(Node *followedNode, float xOffset, float yOffset, const Rect& rect)\n{\n\tCCASSERT(followedNode != nullptr, \"FollowedNode can't be NULL\");\n\tif (followedNode == nullptr)\n\t{\n\t\tlog(\"Follow::initWithTarget error: followedNode is nullptr!\");\n\t\treturn false;\n\t}\n\n\tfollowedNode->retain();\n\t_followedNode = followedNode;\n\t_worldRect = rect;\n\t_boundarySet = !rect.equals(Rect::ZERO);\n\t_boundaryFullyCovered = false;\n\n\n\tSize winSize = Director::getInstance()->getWinSize();\n\t_fullScreenSize.set(winSize.width, winSize.height);\n\t_halfScreenSize = _fullScreenSize * 0.5f;\n\t_offsetX = xOffset;\n\t_offsetY = yOffset;\n\t_halfScreenSize.x += _offsetX;\n\t_halfScreenSize.y += _offsetY;\n\n\tif (_boundarySet)\n\t{\n\t\t_leftBoundary = -((rect.origin.x + rect.size.width) - _fullScreenSize.x);\n\t\t_rightBoundary = -rect.origin.x;\n\t\t_topBoundary = -rect.origin.y;\n\t\t_bottomBoundary = -((rect.origin.y + rect.size.height) - _fullScreenSize.y);\n\n\t\tif (_rightBoundary < _leftBoundary)\n\t\t{\n\t\t\t// screen width is larger than world's boundary width\n\t\t\t//set both in the middle of the world\n\t\t\t_rightBoundary = _leftBoundary = (_leftBoundary + _rightBoundary) / 2;\n\n\t\t}\n\t\tif (_topBoundary < _bottomBoundary)\n\t\t{\n\t\t\t// screen width is larger than world's boundary width\n\t\t\t//set both in the middle of the world\n\t\t\t_topBoundary = _bottomBoundary = (_topBoundary + _bottomBoundary) / 2;\n\t\t}\n\n\t\tif ((_topBoundary == _bottomBoundary) && (_leftBoundary == _rightBoundary))\n\t\t{\n\t\t\t_boundaryFullyCovered = true;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n\n//\u4fee\u6b63\nFollow* Follow::clone() const\n{\n    // no copy constructor\n\treturn Follow::createWithOffset(_followedNode, _offsetX, _offsetY, _worldRect);\n\t/*\n    auto a = new (std::nothrow) Follow();\n    a->initWithTarget(_followedNode, _worldRect);\n    a->autorelease();\n    return a;\n\t*/\n}\n\n```\n", "tags": ["cocos2d-x", "iOS", "Android", "\u30b2\u30fc\u30e0\u958b\u767a", "Windows"]}