{"context": " More than 1 year has passed since last update.\n\u3072\u307e\u308f\u308a\u304c\u64ae\u5f71\u3057\u305f\u5199\u771f\u3092\u7c21\u5358\u306b\u53d6\u5f97\u51fa\u6765\u308b himawari.js \u3092\u4f7f\u3063\u3066\u3001\u5730\u7403\u306e\u753b\u50cf\u3092 Slack \u306b\u5b9a\u671f\u7684\u306b\u30dd\u30b9\u30c8\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u3053\u3093\u306a\u96c4\u5927\u306a\u5730\u7403\u306e\u59ff\u3092\u898b\u305f\u3089\u3001\u304d\u3063\u3068\u6012\u308b\u4eba\u3082\u3044\u306a\u304f\u306a\u308a\u307e\u3059\u306d\u3002\u8077\u5834\u306e\u96f0\u56f2\u6c17\u3092\u826f\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u3001\u3042\u3089\u3086\u308b\u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u30ac\u30f3\u30ac\u30f3\u30dd\u30b9\u30c8\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u3072\u307e\u308f\u308a\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3067\u3001\u53d6\u5f97\u51fa\u6765\u307e\u3059\u3002\nvar himawari = require('himawari');\n\nhimawari({\n  zoom: 1,\n  date: 'latest',\n  debug: false,\n  infrared: false,\n  outfile: '/path/to/output/earth.jpg',\n  skipEmpty: true,\n\n  success: function () { process.exit(); },\n\n  error: function (err) { console.log(err); },\n\n  chunk: function (info) {\n    console.log(info.outfile + ': ' + info.part + '/' + info.total);\n  }\n});\n\n\u3044\u304f\u3064\u304b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\nzoom \u306f 1 \u301c 5 \u3092\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u3067\u304d\u3001\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u307b\u3069\u753b\u50cf\u30b5\u30a4\u30ba\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\ndate \u306f\u3001\u3044\u3064\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u304f\u308b\u304b\u3092\u3001Date() \u304b\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\u307e\u305f\u3001latest \u3068\u3059\u308b\u3068\u6700\u65b0\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u3001\u5199\u771f\u306f 10 \u5206\u6bce\u306b\u64ae\u5f71\u3055\u308c\u307e\u3059\uff09\ninfrared \u306f true \u306b\u3059\u308b\u3068\u3001\u8d64\u5916\u5149\u30b9\u30da\u30af\u30c8\u30eb\u3067\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u306e\u3053\u3068\u3002\n\nSlack \u306b\u30dd\u30b9\u30c8\u3059\u308b\n#earth \u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u5730\u7403\u306e\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u3059\u308b postToSlack \u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002token \u306f\u5404\u81ea\u306e bot \u306e token \u3092\u5165\u308c\u3066\u4e0b\u3055\u3044\u3002himawari \u3067\u4f5c\u6210\u3057\u305f\u753b\u50cf\u306e filename \u3092\u5f15\u6570\u3068\u3057\u3066\u3044\u307e\u3059\u3002\nfunction postToSlack(filename) {\n  var fs = require('fs');\n  var path = require('path');\n  var request = require('request');\n\n  var payload = {\n    channels: '#earth',\n    token: 'hogehoge',\n    file: fs.createReadStream(path.join(__dirname, filename)),\n    filename: filename,\n    username: 'pekepek'\n  }\n\n  var options = {\n    uri: 'https://slack.com/api/files.upload',\n    formData: payload\n  }\n\n  request.post(options, function(error, response, body){\n    if (!error && response.statusCode == 200) {\n      console.log(body.name);\n    } else {\n      console.log('error: '+ response.statusCode);\n    }\n  });\n};\n\n\n10 \u5206\u6bce\u306b\u885b\u661f\u5199\u771f\u3092\u30dd\u30b9\u30c8\u3059\u308b\nnode-cron \u3092\u4f7f\u3063\u3066\u300110 \u5206\u6bce\u306b\u5199\u771f\u306e\u53d6\u5f97\u3001Slack \u3078\u306e\u30dd\u30b9\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\nvar cronTime = '*/10 * * * *';\nCronJob = require('cron').CronJob;\n\nvar job = new CronJob({\n  cronTime: cronTime,\n\n  onTick: function() {\n    // \u3072\u307e\u308f\u308a\u753b\u50cf\u306e\u53d6\u5f97\n    // Slack \u3078\u30dd\u30b9\u30c8\n  },\n\n  start: false\n});\n\njob.start();\n\n\u3053\u308c\u3067\u6e96\u5099 OK\n\n\u7d44\u307f\u5408\u308f\u305b\u308b\n\npost_earth.js\nfunction postToSlack(filename) {\n  var fs = require('fs');\n  var path = require('path');\n  var request = require('request');\n\n  var payload = {\n    channels: '#earth',\n    token: 'hogehoge',\n    file: fs.createReadStream(path.join(__dirname, filename)),\n    filename: filename,\n    username: 'pekepek'\n  }\n\n  var options = {\n    uri: 'https://slack.com/api/files.upload',\n    formData: payload\n  }\n\n  request.post(options, function(error, response, body){\n    if (!error && response.statusCode == 200) {\n      console.log(body.name);\n    } else {\n      console.log('error: '+ response.statusCode);\n    }\n  });\n};\n\nvar cronTime = '*/10 * * * *';\nCronJob = require('cron').CronJob;\n\nvar job = new CronJob({\n  cronTime: cronTime,\n\n  onTick: function() {\n    var himawari = require('himawari');\n\n    himawari({\n      zoom: 1,\n      date: 'latest',\n      debug: false,\n      infrared: false,\n      outfile: './earth.jpg',\n      skipEmpty: true,\n\n      success: function (info) {\n        postToSlack('earth.jpg');\n      },\n\n      error: function (err) { console.log(err); },\n\n      chunk: function (info) {\n        console.log('Saved' + ': ' + info.part + '/' + info.total);\n      }\n    });\n  },\n\n  start: false\n});\n\njob.start();\n\n\n\u3067\u304d\u305f\uff01\n\u3042\u3068\u306f\u5b9f\u884c\u3059\u308b\u3060\u3051\nnode post_earth.js &\ndisown\n\n\n\u3067\u304d\u305f\u30fc\uff01\n\u304d\u308c\u3044\u3060\u306a\u3042\uff01\uff01\n\u305f\u3060\u3001\u3042\u308c\u3067\u3059\u306d\u300210 \u5206\u6bce\u3060\u3068\u5168\u7136\u5909\u5316\u306a\u3044\u3067\u3059\u306d\u3002\n![image](https://qiita-image-store.s3.amazonaws.com/0/41416/2537cec1-6862-4799-cc0f-2724c9ad074d.png)\n\n\u3072\u307e\u308f\u308a\u304c\u64ae\u5f71\u3057\u305f\u5199\u771f\u3092\u7c21\u5358\u306b\u53d6\u5f97\u51fa\u6765\u308b [himawari.js](https://github.com/jakiestfu/himawari.js) \u3092\u4f7f\u3063\u3066\u3001\u5730\u7403\u306e\u753b\u50cf\u3092 Slack \u306b\u5b9a\u671f\u7684\u306b\u30dd\u30b9\u30c8\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u3053\u3093\u306a\u96c4\u5927\u306a\u5730\u7403\u306e\u59ff\u3092\u898b\u305f\u3089\u3001\u304d\u3063\u3068\u6012\u308b\u4eba\u3082\u3044\u306a\u304f\u306a\u308a\u307e\u3059\u306d\u3002\u8077\u5834\u306e\u96f0\u56f2\u6c17\u3092\u826f\u304f\u3059\u308b\u305f\u3081\u306b\u3082\u3001\u3042\u3089\u3086\u308b\u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u30ac\u30f3\u30ac\u30f3\u30dd\u30b9\u30c8\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n# \u3072\u307e\u308f\u308a\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3059\u308b\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3067\u3001\u53d6\u5f97\u51fa\u6765\u307e\u3059\u3002\n\n```js\nvar himawari = require('himawari');\n\nhimawari({\n  zoom: 1,\n  date: 'latest',\n  debug: false,\n  infrared: false,\n  outfile: '/path/to/output/earth.jpg',\n  skipEmpty: true,\n\n  success: function () { process.exit(); },\n\n  error: function (err) { console.log(err); },\n\n  chunk: function (info) {\n    console.log(info.outfile + ': ' + info.part + '/' + info.total);\n  }\n});\n```\n\u3044\u304f\u3064\u304b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8aac\u660e\u3059\u308b\u3068\u3001\n`zoom` \u306f 1 \u301c 5 \u3092\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u3067\u304d\u3001\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u307b\u3069\u753b\u50cf\u30b5\u30a4\u30ba\u304c\u4e0a\u304c\u308a\u307e\u3059\u3002\n`date` \u306f\u3001\u3044\u3064\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u304f\u308b\u304b\u3092\u3001`Date()` \u304b\u6587\u5b57\u5217\u3067\u6307\u5b9a\u3059\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\u307e\u305f\u3001`latest` \u3068\u3059\u308b\u3068\u6700\u65b0\u306e\u5199\u771f\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\u3002\uff08\u3061\u306a\u307f\u306b\u3001\u5199\u771f\u306f 10 \u5206\u6bce\u306b\u64ae\u5f71\u3055\u308c\u307e\u3059\uff09\n`infrared` \u306f `true` \u306b\u3059\u308b\u3068\u3001\u8d64\u5916\u5149\u30b9\u30da\u30af\u30c8\u30eb\u3067\u306e\u753b\u50cf\u3092\u53d6\u5f97\u3067\u304d\u308b\u3068\u306e\u3053\u3068\u3002\n\n# Slack \u306b\u30dd\u30b9\u30c8\u3059\u308b\n\n\\#earth \u30c1\u30e3\u30f3\u30cd\u30eb\u306b\u5730\u7403\u306e\u753b\u50cf\u3092\u30a2\u30c3\u30d7\u3059\u308b `postToSlack` \u95a2\u6570\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002`token` \u306f\u5404\u81ea\u306e bot \u306e token \u3092\u5165\u308c\u3066\u4e0b\u3055\u3044\u3002`himawari` \u3067\u4f5c\u6210\u3057\u305f\u753b\u50cf\u306e `filename` \u3092\u5f15\u6570\u3068\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js\nfunction postToSlack(filename) {\n  var fs = require('fs');\n  var path = require('path');\n  var request = require('request');\n\n  var payload = {\n    channels: '#earth',\n    token: 'hogehoge',\n    file: fs.createReadStream(path.join(__dirname, filename)),\n    filename: filename,\n    username: 'pekepek'\n  }\n\n  var options = {\n    uri: 'https://slack.com/api/files.upload',\n    formData: payload\n  }\n\n  request.post(options, function(error, response, body){\n    if (!error && response.statusCode == 200) {\n      console.log(body.name);\n    } else {\n      console.log('error: '+ response.statusCode);\n    }\n  });\n};\n```\n\n# 10 \u5206\u6bce\u306b\u885b\u661f\u5199\u771f\u3092\u30dd\u30b9\u30c8\u3059\u308b\n\n[node-cron](https://github.com/ncb000gt/node-cron) \u3092\u4f7f\u3063\u3066\u300110 \u5206\u6bce\u306b\u5199\u771f\u306e\u53d6\u5f97\u3001Slack \u3078\u306e\u30dd\u30b9\u30c8\u3092\u884c\u3044\u307e\u3059\u3002\n\n```js\nvar cronTime = '*/10 * * * *';\nCronJob = require('cron').CronJob;\n\nvar job = new CronJob({\n  cronTime: cronTime,\n\n  onTick: function() {\n    // \u3072\u307e\u308f\u308a\u753b\u50cf\u306e\u53d6\u5f97\n    // Slack \u3078\u30dd\u30b9\u30c8\n  },\n\n  start: false\n});\n\njob.start();\n```\n\n\u3053\u308c\u3067\u6e96\u5099 OK\n\n# \u7d44\u307f\u5408\u308f\u305b\u308b\n\n```js:post_earth.js\nfunction postToSlack(filename) {\n  var fs = require('fs');\n  var path = require('path');\n  var request = require('request');\n\n  var payload = {\n    channels: '#earth',\n    token: 'hogehoge',\n    file: fs.createReadStream(path.join(__dirname, filename)),\n    filename: filename,\n    username: 'pekepek'\n  }\n\n  var options = {\n    uri: 'https://slack.com/api/files.upload',\n    formData: payload\n  }\n\n  request.post(options, function(error, response, body){\n    if (!error && response.statusCode == 200) {\n      console.log(body.name);\n    } else {\n      console.log('error: '+ response.statusCode);\n    }\n  });\n};\n\nvar cronTime = '*/10 * * * *';\nCronJob = require('cron').CronJob;\n\nvar job = new CronJob({\n  cronTime: cronTime,\n\n  onTick: function() {\n    var himawari = require('himawari');\n\n    himawari({\n      zoom: 1,\n      date: 'latest',\n      debug: false,\n      infrared: false,\n      outfile: './earth.jpg',\n      skipEmpty: true,\n\n      success: function (info) {\n        postToSlack('earth.jpg');\n      },\n\n      error: function (err) { console.log(err); },\n\n      chunk: function (info) {\n        console.log('Saved' + ': ' + info.part + '/' + info.total);\n      }\n    });\n  },\n\n  start: false\n});\n\njob.start();\n```\n\n\u3067\u304d\u305f\uff01\n\u3042\u3068\u306f\u5b9f\u884c\u3059\u308b\u3060\u3051\n\n```\nnode post_earth.js &\ndisown\n```\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/41416/e8e3d62a-a57d-493f-f646-8b6e2dbcbfb5.png)\n\n\u3067\u304d\u305f\u30fc\uff01\n\u304d\u308c\u3044\u3060\u306a\u3042\uff01\uff01\n\n\u305f\u3060\u3001\u3042\u308c\u3067\u3059\u306d\u300210 \u5206\u6bce\u3060\u3068\u5168\u7136\u5909\u5316\u306a\u3044\u3067\u3059\u306d\u3002\n", "tags": ["JavaScript", "Node.js", "himawari", "Gem"]}