{"context": "\n\n\u306f\u3058\u3081\u306b\nDeep Learning\u3092\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u3067\u304b\u3044\u8a08\u7b97\u8cc7\u6e90\u304c\u5fc5\u8981\u306a\u306e\u304c\u5f53\u305f\u308a\u524d\u306a\u306e\u3060\u3051\u3069\u3001\u624b\u6301\u3061\u306ePC\u306e\u30b9\u30da\u30c3\u30af\u3067\u5341\u5206\u3068\u304b\u305d\u3046\u305d\u3046\u3042\u308a\u306f\u3057\u306a\u3044\u306e\u3067\u3001EC2\u306eGPU\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3055\u3055\u3063\u3068\u7acb\u3066\u3066\u4f7f\u3046\u306e\u3082\u624b\u3060\u3068\u601d\u3046\u3002\nFramework\u306fKeras\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fTensorFlow GPU\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u305d\u308c\u3092pyenv\u4eee\u60f3\u74b0\u5883\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u69cb\u6210\u3068\u3057\u305f\u3002\u5148\u65e5TensorFlow 1.0\u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u3066tf.keras\u304c\u5b9f\u88c5\u3055\u308c\u305f\u307f\u305f\u3044\u3060\u3051\u3069\u307e\u3060\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u666e\u901a\u306bKeras\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\nAWS\u306eGPU\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067TensorFlow\u3092\u52d5\u304b\u3059\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\nEC2 Instance: \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u306b\u3042\u308b Ubuntu Server 16.04 LTS (HVM), SSD Volume Type\nType : g2.2xlarge\n\u30b9\u30c8\u30ec\u30fc\u30b8\u306a\u3069\u306f\u3068\u308a\u3042\u3048\u305a\u6a19\u6e96\u69cb\u6210(\u30e1\u30e2\u30ea15GB, \u30b9\u30c8\u30ec\u30fc\u30b88GB)\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\u307e\u305a\u306fSSH\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\n\n\n\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3059\u308b\u305f\u3081\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3059\u308b\nCUDA\u3068\u304b\u3051\u3063\u3053\u3046\u3067\u304b\u3044\u306e\u3067\u4f5c\u696d\u306e\u9014\u4e2d\u3067\u7a7a\u304d\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u304f\u306a\u308b\u3002/mnt/tmp/\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3057\u3066\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u4f5c\u696d\u9818\u57df\u306b\u4f7f\u3046\u3002\nsudo mkdir /mnt/tmp\nsudo chmod 777 /mnt/tmp\nsudo rm -rf /tmp\nsudo ln -s /mnt/tmp /tmp\ncd /tmp\n\n\nUbuntu\u3092\u6700\u65b0\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\nsudo apt-get update\nsudo apt-get upgrade -y\n\n\n\u30ed\u30b1\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\nupgrade\u5f8c\u30ed\u30b1\u30fc\u30eb\u95a2\u4fc2\u306ewarning\u304c\u51fa\u3066\u3046\u3056\u3044\u306e\u3067\nsudo apt-get install language-pack-ja\nsudo update-locale LANG=ja_JP.UTF-8\n\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nsudo apt-get install python\nsudo apt-get install -y build-essential python-pip python-dev git python-numpy swig python-dev default-jdk zip zlib1g-dev ipython\n\n\nNVIDIA\u30c9\u30e9\u30a4\u30d0\u3068\u306e\u885d\u7a81\u3092\u3055\u3051\u308b\u305f\u3081\u3001Nouveau\u306e\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u3092\u8ffd\u52a0\u3059\u308b\necho -e \"blacklist nouveau\\nblacklist lbm-nouveau\\noptions nouveau modeset=0\\nalias nouveau off\\nalias lbm-nouveau off\\n\" | sudo tee /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 | sudo tee -a /etc/modprobe.d/nouveau-kms.conf\nsudo update-initramfs -u\nsudo reboot\n\n\u518d\u8d77\u52d5\u5f8c\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u3066linux-image-extra-virtual\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\nsudo apt-get install -y linux-image-extra-virtual\nsudo reboot\n\n\u518d\u8d77\u52d5\u5f8c\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u3066linux-headers\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\nsudo apt-get install -y linux-source linux-headers-`uname -r`\n\n\nCUDA Toolkit v8 \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\u73fe\u6642\u70b9\u3067\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 8.0\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\ncd /tmp\nwget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run\nchmod +x cuda_8.0.44_linux-run\n./cuda_8.0.44_linux-run  -extract=`pwd`/nvidia_installers\ncd nvidia_installers/\nsudo ./NVIDIA-Linux-x86_64-367.48.run\n# Accept\u3092\u9078\u629e\u3059\u308b\u3002kernel\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u304c100%\u306b\u306a\u3063\u3066\u304b\u3089\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n# Yes \u3092\u9078\u629e\u3059\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n\nsudo modprobe nvidia\nsudo ./cuda-linux64-rel-8.0.44-21122537.run\n# Readme\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067 q \u3067\u7d42\u4e86\u3059\u308b\n# accept \u3068\u5165\u529b\u3057\u3066\u30a8\u30f3\u30bf\u30fc\n# install Path: default\n# shortcut?: default\n\n\ncuDNN \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\nhttps://developer.nvidia.com/cudnn \u304b\u3089cuDNN\u3092\u4e00\u5ea6\u30ed\u30fc\u30ab\u30eb\u306bDownload\u3059\u308b\ncuDNN\u306fDeveloper\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u3057\u306a\u3044\u3068\u843d\u3068\u305b\u306a\u3044\u305f\u3081\u3002\u4ed5\u65b9\u304c\u306a\u3044\u3002\n\u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fcuDNN\u3092EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8ee2\u9001\u3059\u308b\nscp -i [ec2key].pem cudnn-8.0-linux-x64-v5.1.tgz ubuntu@[Instance IP]:/tmp\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3082\u3069\u308b\ncd /tmp\ntar -xzf cudnn-8.0-linux-x64-v5.1.tgz\nsudo mv ./cuda/lib64/* /usr/local/cuda/lib64/\nsudo mv ./cuda/include/* /usr/local/cuda/include/\n\n~/.bashrc\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3059\u308b\n# cuDNN\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64\"\nexport CUDA_HOME=/usr/local/cuda\n\nsource ~/.bashrc\n\n\nPython \u4eee\u60f3\u74b0\u5883\u306e\u69cb\u7bc9\npython -V\nPython 2.7.12\n\nsudo apt-get install git gcc make openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev\ngit clone https://github.com/yyuu/pyenv.git ~/.pyenv\ngit clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv\n\n~/.bash_profile\u3092\u4f5c\u6210\u3057\u3066\u4ee5\u4e0b\u3092\u8a18\u8f09\u3059\u308b\n# pyenv\nexport PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n# virtualenv\neval \"$(pyenv virtualenv-init -)\"\nexport PYENV_VIRTUALENV_DISABLE_PROMPT=1\n\nsource ~/.bash_profile\n\nKeras\u7528\u4eee\u60f3\u74b0\u5883\u3092\u3064\u304f\u308b\npyenv install 3.5.3\npyenv virtualenv 3.5.3 keras\npyenv activate keras\npython -V\nPython 3.5.3\n\n\nTensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\npip install tensorflow-gpu\n\nTensorFlow\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u305f\u3089GPU\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\npython -c 'import tensorflow as tf; print(tf.__version__)'\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n\n\nKeras\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\npip install pillow\npip install h5py\npip install matplotlib\npip install keras\n\n\nkeras examples\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\ncd /tmp\ngit clone https://github.com/fchollet/keras.git\ncd keras/examples\n\n\u3068\u308a\u3042\u3048\u305aMNIST\u3092CNN\u3067\u89e3\u304f\u3084\u3064\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\npython mnist_cnn.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nDownloading data from https://s3.amazonaws.com/img-datasets/mnist.pkl.gz\nX_train shape: (60000, 28, 28, 1)\n60000 train samples\n10000 test samples\nTrain on 60000 samples, validate on 10000 samples\nEpoch 1/12\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\n60000/60000 [==============================] - 13s - loss: 0.3770 - acc: 0.8839 - val_loss: 0.0932 - val_acc: 0.9709\nEpoch 2/12\n60000/60000 [==============================] - 11s - loss: 0.1363 - acc: 0.9603 - val_loss: 0.0632 - val_acc: 0.9801\nEpoch 3/12\n60000/60000 [==============================] - 11s - loss: 0.1064 - acc: 0.9687 - val_loss: 0.0509 - val_acc: 0.9835\nEpoch 4/12\n60000/60000 [==============================] - 11s - loss: 0.0900 - acc: 0.9736 - val_loss: 0.0443 - val_acc: 0.9857\nEpoch 5/12\n60000/60000 [==============================] - 11s - loss: 0.0769 - acc: 0.9775 - val_loss: 0.0405 - val_acc: 0.9865\nEpoch 6/12\n60000/60000 [==============================] - 11s - loss: 0.0689 - acc: 0.9795 - val_loss: 0.0371 - val_acc: 0.9870\nEpoch 7/12\n60000/60000 [==============================] - 11s - loss: 0.0649 - acc: 0.9803 - val_loss: 0.0361 - val_acc: 0.9881\nEpoch 8/12\n60000/60000 [==============================] - 11s - loss: 0.0594 - acc: 0.9823 - val_loss: 0.0356 - val_acc: 0.9886\nEpoch 9/12\n60000/60000 [==============================] - 11s - loss: 0.0547 - acc: 0.9841 - val_loss: 0.0321 - val_acc: 0.9889\nEpoch 10/12\n60000/60000 [==============================] - 11s - loss: 0.0525 - acc: 0.9841 - val_loss: 0.0320 - val_acc: 0.9889\nEpoch 11/12\n60000/60000 [==============================] - 11s - loss: 0.0506 - acc: 0.9850 - val_loss: 0.0323 - val_acc: 0.9892\nEpoch 12/12\n60000/60000 [==============================] - 11s - loss: 0.0471 - acc: 0.9856 - val_loss: 0.0314 - val_acc: 0.9897\nTest score: 0.0314083654978\nTest accuracy: 0.9897\n\n\u5b9f\u884c\u6642\u9593\u306f: 2:23 (\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u9593\u9664\u304f)\u3002\u624b\u6301\u3061\u306eMBA\u3067\u306f35\u5206\u307b\u3069\u304b\u304b\u3063\u305f\u306e\u306710\u500d\u4ee5\u4e0a\u901f\u3044\u3002\n1epoch\u3042\u305f\u308a10\u79d2\u304f\u3089\u3044\u304b\u3088\u3002\n\u8abf\u5b50\u306b\u4e57\u3063\u3066IMDB\u306eLSTM\u3068\u3044\u3046\u91cd\u305f\u305d\u3046\u306a\u3084\u3064\u3082\u3084\u3063\u3066\u307f\u305f\u3002\npython imdb_cnn_lstm.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nLoading data...\n25000 train sequences\n25000 test sequences\nPad sequences (samples x time)\nX_train shape: (25000, 100)\nX_test shape: (25000, 100)\nBuild model...\nTrain...\nTrain on 25000 samples, validate on 25000 samples\nEpoch 1/2\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\n   30/25000 [..............................] - ETA: 1397s - loss: 0.6936 - acc: 0.4333I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 3811 get requests, put_count=2890 evicted_count=1000 eviction_rate=0.346021 and unsatisfied allocation rate=0.530307\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 100 to 110\n  360/25000 [..............................] - ETA: 160s - loss: 0.6935 - acc: 0.4833I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 2156 get requests, put_count=2374 evicted_count=1000 eviction_rate=0.42123 and unsatisfied allocation rate=0.373377\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 256 to 281\n  870/25000 [>.............................] - ETA: 94s - loss: 0.6925 - acc: 0.5287I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 4249 get requests, put_count=4491 evicted_count=1000 eviction_rate=0.222668 and unsatisfied allocation rate=0.192281\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 655 to 720\n25000/25000 [==============================] - 63s - loss: 0.3815 - acc: 0.8210 - val_loss: 0.3519 - val_acc: 0.8456\nEpoch 2/2\n25000/25000 [==============================] - 60s - loss: 0.1970 - acc: 0.9238 - val_loss: 0.3471 - val_acc: 0.8534\n24990/25000 [============================>.] - ETA: 0sTest score: 0.347144101623\nTest accuracy: 0.853440059948\n\n\u5b9f\u884c\u6642\u9593: 2:25 (\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u9593\u9664\u304f)\u3002MBA\u3067\u3053\u308c\u308240\u5206\u4ee5\u4e0a\u304b\u304b\u3063\u305f\u3084\u3064\u306a\u306e\u3067\u5727\u5012\u7684\u3002\n\u3055\u3089\u306b\u8abf\u5b50\u306b\u4e57\u3063\u3066\u3082\u3063\u3068\u91cd\u305f\u305d\u3046\u306a\u3084\u3064\u3092\u3084\u3063\u3066\u307f\u308b\u3002mnist_acgan.py\u306fMNIST\u3092ACGAN(Auxiliary Classifier Generative Adversarial Network)\u3068\u3044\u3046\u3084\u3064\u3067\u89e3\u304f\u307f\u305f\u3044\u3002DCGAN\u306e\u89aa\u621a\u304b\uff1f\u8a73\u3057\u304f\u306f\u3053\u3053\u306b\u8f09\u3063\u3066\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u96e3\u3057\u3044\u306e\u3067\u5f8c\u56de\u3057\u306b\u3059\u308b\u3002\n\u3068\u308a\u3042\u3048\u305aGAN\u306a\u306e\u3067\u91cd\u3044\u3060\u308d\u3046\u3002\u3069\u3093\u306a\u3082\u3093\u3060\u308d\u3046\u304b\u3002\npython mnist_acgan.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nEpoch 1 of 50\n  0/600 [..............................] - ETA: 0sI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\nW tensorflow/core/common_runtime/bfc_allocator.cc:217] Ran out of memory trying to allocate 3.74GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\n599/600 [============================>.] - ETA: 1s   \nTesting for epoch 1:\ncomponent              | loss | generation_loss | auxiliary_loss\n-----------------------------------------------------------------\ngenerator (train)      | 3.88 | 1.49            | 2.39 \ngenerator (test)       | 3.36 | 1.04            | 2.32 \ndiscriminator (train)  | 2.11 | 0.53            | 1.58 \ndiscriminator (test)   | 2.12 | 0.70            | 1.43 \nEpoch 2 of 50\n 44/600 [=>............................] - ETA: 732s\n\n1epoch\u7d42\u308f\u308b\u306e\u306b 15\u5206\u307b\u3069\u304b\u304b\u3063\u305f\u3002\u3042\u306848epoch\u3042\u308b\u3002\u3002\u679c\u3066\u3057\u306a\u3044\u3057\u304a\u91d1\u304b\u304b\u308b\u306e\u3067\u9014\u4e2d\u3067\u3084\u3081\u305f\u3002\u307e\u3042\u3067\u3082\u534a\u65e5\u56de\u305b\u3070\u7d50\u679c\u51fa\u305d\u3046\u3002\u3059\u3054\u3044\u306a\u3002\n\n\u4f5c\u696d\u5f8c\u306e\u30c7\u30a3\u30b9\u30af\u7a7a\u304d\u72b6\u6cc1\ndf -k\nFilesystem     1K-blocks    Used Available Use% Mounted on\nudev             7679880       0   7679880   0% /dev\ntmpfs            1539900    8800   1531100   1% /run\n/dev/xvda1       8117828 6149060   1533492  81% /\ntmpfs            7699496       0   7699496   0% /dev/shm\ntmpfs               5120       0      5120   0% /run/lock\ntmpfs            7699496       0   7699496   0% /sys/fs/cgroup\n/dev/xvdb       66946696 3017852  60521484   5% /mnt\ntmpfs            1539904       0   1539904   0% /run/user/1000\n\n\u30b7\u30b9\u30c6\u30e0\u30c7\u30a3\u30b9\u30af\u306e\u4f7f\u7528\u91cf\u306f81%\u3002\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cstop\u3059\u308b\u3068\u63ee\u767a\u3059\u308b\u306e\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e8GB\u304c\u4e0d\u5b89\u306a\u3089\u30b9\u30c8\u30ec\u30fc\u30b8\u8981\u9818\u3092\u62e1\u5f35\u3057\u3068\u304f\u3068\u3088\u3044\u3002\n\nAMI\u306b\u3057\u3066\u304b\u3089g2.xlarge\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3089\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\u69cb\u7bc9\u3067\u304d\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u3068\u3063\u3066\u3001AMI\u304b\u3089g2.xlarge\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\u3061\u3083\u3093\u3068\u52d5\u304f\u304b\u8a66\u884c\u3002\npyenv activate keras\npython -V\n Python 3.5.3\npython -c 'import tensorflow as tf; print(tf.__version__)'\nTraceback (most recent call last):\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 242, in load_module\n    return load_dynamic(name, filename, file)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 342, in load_dynamic\n    return _load(spec)\nImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/__init__.py\", line 24, in <module>\n    from tensorflow.python import *\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 72, in <module>\n    raise ImportError(msg)\nImportError: Traceback (most recent call last):\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 242, in load_module\n    return load_dynamic(name, filename, file)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 342, in load_dynamic\n    return _load(spec)\nImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory\n\n\nFailed to load the native TensorFlow runtime.\n\nSee https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\n\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.\n\nTensorFlow\u304c\u30a8\u30e9\u30fc\u3092\u5410\u304f\u3002\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3051\u3069CUDA\u95a2\u4fc2\u304b\uff1f\nAMI\u5316\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f\u3042\u3068\u3067\u691c\u8a0e\u304c\u5fc5\u8981\u304b\u3082\u3002\u65ad\u7d9a\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092stop\u3057\u3066\u7f6e\u3044\u3068\u304f\u306e\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u307e\u3068\u3081\n\u4e0a\u8a18Keras\u306e\u74b0\u5883\u69cb\u7bc9\u307e\u3067\u306f\u4e00\u6642\u9593\u4ee5\u5185\u3067\u3067\u304d\u308b\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9stop\u3057\u3066\u7f6e\u3044\u3068\u304f\u306e\u3082\u3044\u3044\u3051\u3069\u3001\u4f7f\u3044\u305f\u3044\u6642\u306b\u30b5\u30e9\u304b\u3089\u69cb\u7bc9\u3057\u3066\u3082\u305d\u3093\u306a\u306b\u624b\u9593\u3067\u306f\u306a\u3044\u3002\n\u4f7f\u7528\u983b\u5ea6\u3068\u304b\u30b1\u30fc\u30b9\u306b\u5fdc\u3058\u3066\u8003\u3048\u308b\u306e\u304c\u3044\u3044\u3060\u308d\u3046\u3002\u3064\u30fc\u304bTensorFlow GPU\u306e\u74b0\u5883\u69cb\u7bc9\u4ee5\u524d\u3068\u6bd4\u3079\u3066\u3081\u3063\u3061\u3083\u697d\u306b\u306a\u3063\u305f\u306a\u3002\n# \u306f\u3058\u3081\u306b\n\nDeep Learning\u3092\u3084\u308d\u3046\u3068\u601d\u3063\u305f\u3089\u3067\u304b\u3044\u8a08\u7b97\u8cc7\u6e90\u304c\u5fc5\u8981\u306a\u306e\u304c\u5f53\u305f\u308a\u524d\u306a\u306e\u3060\u3051\u3069\u3001\u624b\u6301\u3061\u306ePC\u306e\u30b9\u30da\u30c3\u30af\u3067\u5341\u5206\u3068\u304b\u305d\u3046\u305d\u3046\u3042\u308a\u306f\u3057\u306a\u3044\u306e\u3067\u3001EC2\u306eGPU\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u3055\u3055\u3063\u3068\u7acb\u3066\u3066\u4f7f\u3046\u306e\u3082\u624b\u3060\u3068\u601d\u3046\u3002\n\nFramework\u306fKeras\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fTensorFlow GPU\u30d0\u30fc\u30b8\u30e7\u30f3\u3002\u305d\u308c\u3092pyenv\u4eee\u60f3\u74b0\u5883\u3067\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\u69cb\u6210\u3068\u3057\u305f\u3002[\u5148\u65e5TensorFlow 1.0\u304c\u30ea\u30ea\u30fc\u30b9](https://research.googleblog.com/2017/02/announcing-tensorflow-10.html)\u3055\u308c\u3066`tf.keras`\u304c\u5b9f\u88c5\u3055\u308c\u305f\u307f\u305f\u3044\u3060\u3051\u3069\u307e\u3060\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u666e\u901a\u306bKeras\u4f7f\u3046\u3053\u3068\u306b\u3059\u308b\u3002\n\n\u74b0\u5883\u69cb\u7bc9\u306b\u3064\u3044\u3066\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u3044\u305f\u3002\n[AWS\u306eGPU\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067TensorFlow\u3092\u52d5\u304b\u3059](http://qiita.com/h860a/items/294262d98e1223008252)\n\n# \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u4f5c\u6210\n\nEC2 Instance: \u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8\u306b\u3042\u308b Ubuntu Server 16.04 LTS (HVM), SSD Volume Type\nType : g2.2xlarge\n\u30b9\u30c8\u30ec\u30fc\u30b8\u306a\u3069\u306f\u3068\u308a\u3042\u3048\u305a\u6a19\u6e96\u69cb\u6210(\u30e1\u30e2\u30ea15GB, \u30b9\u30c8\u30ec\u30fc\u30b88GB)\n\n# \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n\u307e\u305a\u306fSSH\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b\n\n```\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\n```\n\n## \u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3059\u308b\u305f\u3081\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3059\u308b\n\nCUDA\u3068\u304b\u3051\u3063\u3053\u3046\u3067\u304b\u3044\u306e\u3067\u4f5c\u696d\u306e\u9014\u4e2d\u3067\u7a7a\u304d\u5bb9\u91cf\u304c\u8db3\u308a\u306a\u304f\u306a\u308b\u3002/mnt/tmp/\u3078\u306e\u30b7\u30f3\u30dc\u30ea\u30c3\u30af\u30ea\u30f3\u30af\u3092\u4f5c\u6210\u3057\u3066\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u3092\u4f5c\u696d\u9818\u57df\u306b\u4f7f\u3046\u3002\n\n```\nsudo mkdir /mnt/tmp\nsudo chmod 777 /mnt/tmp\nsudo rm -rf /tmp\nsudo ln -s /mnt/tmp /tmp\ncd /tmp\n```\n\n## Ubuntu\u3092\u6700\u65b0\u306b\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3059\u308b\n\n```\nsudo apt-get update\nsudo apt-get upgrade -y\n```\n\n## \u30ed\u30b1\u30fc\u30eb\u3092\u8a2d\u5b9a\u3059\u308b\n\nupgrade\u5f8c\u30ed\u30b1\u30fc\u30eb\u95a2\u4fc2\u306ewarning\u304c\u51fa\u3066\u3046\u3056\u3044\u306e\u3067\n\n```\nsudo apt-get install language-pack-ja\nsudo update-locale LANG=ja_JP.UTF-8\n```\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306b\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```\nsudo apt-get install python\nsudo apt-get install -y build-essential python-pip python-dev git python-numpy swig python-dev default-jdk zip zlib1g-dev ipython\n```\n\n## NVIDIA\u30c9\u30e9\u30a4\u30d0\u3068\u306e\u885d\u7a81\u3092\u3055\u3051\u308b\u305f\u3081\u3001Nouveau\u306e\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u3092\u8ffd\u52a0\u3059\u308b\n\n```\necho -e \"blacklist nouveau\\nblacklist lbm-nouveau\\noptions nouveau modeset=0\\nalias nouveau off\\nalias lbm-nouveau off\\n\" | sudo tee /etc/modprobe.d/blacklist-nouveau.conf\necho options nouveau modeset=0 | sudo tee -a /etc/modprobe.d/nouveau-kms.conf\nsudo update-initramfs -u\nsudo reboot\n```\n\n\u518d\u8d77\u52d5\u5f8c\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u3066linux-image-extra-virtual\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\nsudo apt-get install -y linux-image-extra-virtual\nsudo reboot\n```\n\n\u518d\u8d77\u52d5\u5f8c\u3001\u30ed\u30b0\u30a4\u30f3\u3057\u3066linux-headers\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n```\nssh -i ~/[ec2key].pem ubuntu@[Instance IP]\nsudo apt-get install -y linux-source linux-headers-`uname -r`\n```\n\n## CUDA Toolkit v8 \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u3059\u308b\n\n\u73fe\u6642\u70b9\u3067\u306e\u6700\u65b0\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 8.0\u3002\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```\ncd /tmp\nwget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run\nchmod +x cuda_8.0.44_linux-run\n./cuda_8.0.44_linux-run  -extract=`pwd`/nvidia_installers\ncd nvidia_installers/\nsudo ./NVIDIA-Linux-x86_64-367.48.run\n# Accept\u3092\u9078\u629e\u3059\u308b\u3002kernel\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\u306f\u30d7\u30ed\u30b0\u30ec\u30b9\u30d0\u30fc\u304c100%\u306b\u306a\u3063\u3066\u304b\u3089\u3057\u3070\u3089\u304f\u6642\u9593\u304c\u304b\u304b\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n# Yes \u3092\u9078\u629e\u3059\u308b\n# OK \u3092\u9078\u629e\u3059\u308b\n```\n\n```\nsudo modprobe nvidia\nsudo ./cuda-linux64-rel-8.0.44-21122537.run\n# Readme\u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067 q \u3067\u7d42\u4e86\u3059\u308b\n# accept \u3068\u5165\u529b\u3057\u3066\u30a8\u30f3\u30bf\u30fc\n# install Path: default\n# shortcut?: default\n```\n\n## cuDNN \u3092\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nhttps://developer.nvidia.com/cudnn \u304b\u3089cuDNN\u3092\u4e00\u5ea6\u30ed\u30fc\u30ab\u30eb\u306bDownload\u3059\u308b\ncuDNN\u306fDeveloper\u30b5\u30a4\u30f3\u30a2\u30c3\u30d7\u3057\u306a\u3044\u3068\u843d\u3068\u305b\u306a\u3044\u305f\u3081\u3002\u4ed5\u65b9\u304c\u306a\u3044\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fcuDNN\u3092EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u8ee2\u9001\u3059\u308b\n\n```\nscp -i [ec2key].pem cudnn-8.0-linux-x64-v5.1.tgz ubuntu@[Instance IP]:/tmp\n```\n\nEC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b\u3082\u3069\u308b\n\n```\ncd /tmp\ntar -xzf cudnn-8.0-linux-x64-v5.1.tgz\nsudo mv ./cuda/lib64/* /usr/local/cuda/lib64/\nsudo mv ./cuda/include/* /usr/local/cuda/include/\n```\n\n`~/.bashrc`\u306b\u4ee5\u4e0b\u3092\u8ffd\u8a18\u3059\u308b\n\n```.bashrc\n# cuDNN\nexport LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/usr/local/cuda/lib64\"\nexport CUDA_HOME=/usr/local/cuda\n```\n\n```\nsource ~/.bashrc\n```\n\n## Python \u4eee\u60f3\u74b0\u5883\u306e\u69cb\u7bc9\n\n```\npython -V\nPython 2.7.12\n```\n\n```\nsudo apt-get install git gcc make openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev\ngit clone https://github.com/yyuu/pyenv.git ~/.pyenv\ngit clone https://github.com/yyuu/pyenv-virtualenv.git ~/.pyenv/plugins/pyenv-virtualenv\n```\n\n`~/.bash_profile`\u3092\u4f5c\u6210\u3057\u3066\u4ee5\u4e0b\u3092\u8a18\u8f09\u3059\u308b\n\n```.bash_profile\n# pyenv\nexport PYENV_ROOT=$HOME/.pyenv\nexport PATH=$PYENV_ROOT/bin:$PATH\neval \"$(pyenv init -)\"\n# virtualenv\neval \"$(pyenv virtualenv-init -)\"\nexport PYENV_VIRTUALENV_DISABLE_PROMPT=1\n```\n\n```\nsource ~/.bash_profile\n```\n\nKeras\u7528\u4eee\u60f3\u74b0\u5883\u3092\u3064\u304f\u308b\n\n```\npyenv install 3.5.3\npyenv virtualenv 3.5.3 keras\npyenv activate keras\npython -V\nPython 3.5.3\n```\n\n## Tensorflow\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```\npip install tensorflow-gpu\n```\n\nTensorFlow\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u78ba\u8a8d\u3057\u3066\u307f\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u305f\u3089GPU\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n```\npython -c 'import tensorflow as tf; print(tf.__version__)'\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcublas.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcudnn.so.5 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcufft.so.8.0 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:135] successfully opened CUDA library libcurand.so.8.0 locally\n1.0.0\n```\n\n## Keras\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```\npip install pillow\npip install h5py\npip install matplotlib\npip install keras\n```\n\n## keras examples\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n```\ncd /tmp\ngit clone https://github.com/fchollet/keras.git\ncd keras/examples\n```\n\n\u3068\u308a\u3042\u3048\u305aMNIST\u3092CNN\u3067\u89e3\u304f\u3084\u3064\u3092\u5b9f\u884c\u3057\u3066\u307f\u308b\n\n```\npython mnist_cnn.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nDownloading data from https://s3.amazonaws.com/img-datasets/mnist.pkl.gz\nX_train shape: (60000, 28, 28, 1)\n60000 train samples\n10000 test samples\nTrain on 60000 samples, validate on 10000 samples\nEpoch 1/12\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\n60000/60000 [==============================] - 13s - loss: 0.3770 - acc: 0.8839 - val_loss: 0.0932 - val_acc: 0.9709\nEpoch 2/12\n60000/60000 [==============================] - 11s - loss: 0.1363 - acc: 0.9603 - val_loss: 0.0632 - val_acc: 0.9801\nEpoch 3/12\n60000/60000 [==============================] - 11s - loss: 0.1064 - acc: 0.9687 - val_loss: 0.0509 - val_acc: 0.9835\nEpoch 4/12\n60000/60000 [==============================] - 11s - loss: 0.0900 - acc: 0.9736 - val_loss: 0.0443 - val_acc: 0.9857\nEpoch 5/12\n60000/60000 [==============================] - 11s - loss: 0.0769 - acc: 0.9775 - val_loss: 0.0405 - val_acc: 0.9865\nEpoch 6/12\n60000/60000 [==============================] - 11s - loss: 0.0689 - acc: 0.9795 - val_loss: 0.0371 - val_acc: 0.9870\nEpoch 7/12\n60000/60000 [==============================] - 11s - loss: 0.0649 - acc: 0.9803 - val_loss: 0.0361 - val_acc: 0.9881\nEpoch 8/12\n60000/60000 [==============================] - 11s - loss: 0.0594 - acc: 0.9823 - val_loss: 0.0356 - val_acc: 0.9886\nEpoch 9/12\n60000/60000 [==============================] - 11s - loss: 0.0547 - acc: 0.9841 - val_loss: 0.0321 - val_acc: 0.9889\nEpoch 10/12\n60000/60000 [==============================] - 11s - loss: 0.0525 - acc: 0.9841 - val_loss: 0.0320 - val_acc: 0.9889\nEpoch 11/12\n60000/60000 [==============================] - 11s - loss: 0.0506 - acc: 0.9850 - val_loss: 0.0323 - val_acc: 0.9892\nEpoch 12/12\n60000/60000 [==============================] - 11s - loss: 0.0471 - acc: 0.9856 - val_loss: 0.0314 - val_acc: 0.9897\nTest score: 0.0314083654978\nTest accuracy: 0.9897\n```\n\n\u5b9f\u884c\u6642\u9593\u306f: 2:23 (\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u9593\u9664\u304f)\u3002\u624b\u6301\u3061\u306eMBA\u3067\u306f35\u5206\u307b\u3069\u304b\u304b\u3063\u305f\u306e\u306710\u500d\u4ee5\u4e0a\u901f\u3044\u3002\n1epoch\u3042\u305f\u308a10\u79d2\u304f\u3089\u3044\u304b\u3088\u3002\n\n\u8abf\u5b50\u306b\u4e57\u3063\u3066IMDB\u306eLSTM\u3068\u3044\u3046\u91cd\u305f\u305d\u3046\u306a\u3084\u3064\u3082\u3084\u3063\u3066\u307f\u305f\u3002\n\n```\npython imdb_cnn_lstm.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nLoading data...\n25000 train sequences\n25000 test sequences\nPad sequences (samples x time)\nX_train shape: (25000, 100)\nX_test shape: (25000, 100)\nBuild model...\nTrain...\nTrain on 25000 samples, validate on 25000 samples\nEpoch 1/2\nI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\n   30/25000 [..............................] - ETA: 1397s - loss: 0.6936 - acc: 0.4333I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 3811 get requests, put_count=2890 evicted_count=1000 eviction_rate=0.346021 and unsatisfied allocation rate=0.530307\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 100 to 110\n  360/25000 [..............................] - ETA: 160s - loss: 0.6935 - acc: 0.4833I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 2156 get requests, put_count=2374 evicted_count=1000 eviction_rate=0.42123 and unsatisfied allocation rate=0.373377\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 256 to 281\n  870/25000 [>.............................] - ETA: 94s - loss: 0.6925 - acc: 0.5287I tensorflow/core/common_runtime/gpu/pool_allocator.cc:247] PoolAllocator: After 4249 get requests, put_count=4491 evicted_count=1000 eviction_rate=0.222668 and unsatisfied allocation rate=0.192281\nI tensorflow/core/common_runtime/gpu/pool_allocator.cc:259] Raising pool_size_limit_ from 655 to 720\n25000/25000 [==============================] - 63s - loss: 0.3815 - acc: 0.8210 - val_loss: 0.3519 - val_acc: 0.8456\nEpoch 2/2\n25000/25000 [==============================] - 60s - loss: 0.1970 - acc: 0.9238 - val_loss: 0.3471 - val_acc: 0.8534\n24990/25000 [============================>.] - ETA: 0sTest score: 0.347144101623\nTest accuracy: 0.853440059948\n```\n\n\u5b9f\u884c\u6642\u9593: 2:25 (\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u6642\u9593\u9664\u304f)\u3002MBA\u3067\u3053\u308c\u308240\u5206\u4ee5\u4e0a\u304b\u304b\u3063\u305f\u3084\u3064\u306a\u306e\u3067\u5727\u5012\u7684\u3002\n\n\u3055\u3089\u306b\u8abf\u5b50\u306b\u4e57\u3063\u3066\u3082\u3063\u3068\u91cd\u305f\u305d\u3046\u306a\u3084\u3064\u3092\u3084\u3063\u3066\u307f\u308b\u3002`mnist_acgan.py`\u306fMNIST\u3092ACGAN(Auxiliary Classifier Generative Adversarial Network)\u3068\u3044\u3046\u3084\u3064\u3067\u89e3\u304f\u307f\u305f\u3044\u3002DCGAN\u306e\u89aa\u621a\u304b\uff1f\u8a73\u3057\u304f\u306f[\u3053\u3053](https://arxiv.org/abs/1610.09585)\u306b\u8f09\u3063\u3066\u308b\u307f\u305f\u3044\u3060\u3051\u3069\u96e3\u3057\u3044\u306e\u3067\u5f8c\u56de\u3057\u306b\u3059\u308b\u3002\n\u3068\u308a\u3042\u3048\u305aGAN\u306a\u306e\u3067\u91cd\u3044\u3060\u308d\u3046\u3002\u3069\u3093\u306a\u3082\u3093\u3060\u308d\u3046\u304b\u3002\n\n```\npython mnist_acgan.py\nUsing TensorFlow backend.\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcublas.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcudnn.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcufft.so locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcuda.so.1 locally\nI tensorflow/stream_executor/dso_loader.cc:128] successfully opened CUDA library libcurand.so locally\nEpoch 1 of 50\n  0/600 [..............................] - ETA: 0sI tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:937] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:885] Found device 0 with properties: \nname: GRID K520\nmajor: 3 minor: 0 memoryClockRate (GHz) 0.797\npciBusID 0000:00:03.0\nTotal memory: 3.94GiB\nFree memory: 3.91GiB\nI tensorflow/core/common_runtime/gpu/gpu_device.cc:906] DMA: 0 \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:916] 0:   Y \nI tensorflow/core/common_runtime/gpu/gpu_device.cc:975] Creating TensorFlow device (/gpu:0) -> (device: 0, name: GRID K520, pci bus id: 0000:00:03.0)\nW tensorflow/core/common_runtime/bfc_allocator.cc:217] Ran out of memory trying to allocate 3.74GiB. The caller indicates that this is not a failure, but may mean that there could be performance gains if more memory is available.\n599/600 [============================>.] - ETA: 1s   \nTesting for epoch 1:\ncomponent              | loss | generation_loss | auxiliary_loss\n-----------------------------------------------------------------\ngenerator (train)      | 3.88 | 1.49            | 2.39 \ngenerator (test)       | 3.36 | 1.04            | 2.32 \ndiscriminator (train)  | 2.11 | 0.53            | 1.58 \ndiscriminator (test)   | 2.12 | 0.70            | 1.43 \nEpoch 2 of 50\n 44/600 [=>............................] - ETA: 732s\n```\n\n1epoch\u7d42\u308f\u308b\u306e\u306b 15\u5206\u307b\u3069\u304b\u304b\u3063\u305f\u3002\u3042\u306848epoch\u3042\u308b\u3002\u3002\u679c\u3066\u3057\u306a\u3044\u3057\u304a\u91d1\u304b\u304b\u308b\u306e\u3067\u9014\u4e2d\u3067\u3084\u3081\u305f\u3002\u307e\u3042\u3067\u3082\u534a\u65e5\u56de\u305b\u3070\u7d50\u679c\u51fa\u305d\u3046\u3002\u3059\u3054\u3044\u306a\u3002\n\n# \u4f5c\u696d\u5f8c\u306e\u30c7\u30a3\u30b9\u30af\u7a7a\u304d\u72b6\u6cc1\n\n```\ndf -k\nFilesystem     1K-blocks    Used Available Use% Mounted on\nudev             7679880       0   7679880   0% /dev\ntmpfs            1539900    8800   1531100   1% /run\n/dev/xvda1       8117828 6149060   1533492  81% /\ntmpfs            7699496       0   7699496   0% /dev/shm\ntmpfs               5120       0      5120   0% /run/lock\ntmpfs            7699496       0   7699496   0% /sys/fs/cgroup\n/dev/xvdb       66946696 3017852  60521484   5% /mnt\ntmpfs            1539904       0   1539904   0% /run/user/1000\n```\n\n\u30b7\u30b9\u30c6\u30e0\u30c7\u30a3\u30b9\u30af\u306e\u4f7f\u7528\u91cf\u306f81%\u3002\u30a8\u30d5\u30a7\u30e1\u30e9\u30eb\u30b9\u30c8\u30ec\u30fc\u30b8\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304cstop\u3059\u308b\u3068\u63ee\u767a\u3059\u308b\u306e\u3067\u30c7\u30d5\u30a9\u30eb\u30c8\u306e8GB\u304c\u4e0d\u5b89\u306a\u3089\u30b9\u30c8\u30ec\u30fc\u30b8\u8981\u9818\u3092\u62e1\u5f35\u3057\u3068\u304f\u3068\u3088\u3044\u3002\n\n\n# AMI\u306b\u3057\u3066\u304b\u3089g2.xlarge\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3089\u30a8\u30e9\u30fc\u306b\u306a\u308b\n\n\u69cb\u7bc9\u3067\u304d\u305f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u3092\u3068\u3063\u3066\u3001AMI\u304b\u3089g2.xlarge\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u6210\u3057\u3066\u307f\u305f\u3002\u3061\u3083\u3093\u3068\u52d5\u304f\u304b\u8a66\u884c\u3002\n\n```\npyenv activate keras\npython -V\n Python 3.5.3\npython -c 'import tensorflow as tf; print(tf.__version__)'\nTraceback (most recent call last):\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 242, in load_module\n    return load_dynamic(name, filename, file)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 342, in load_dynamic\n    return _load(spec)\nImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/__init__.py\", line 24, in <module>\n    from tensorflow.python import *\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 72, in <module>\n    raise ImportError(msg)\nImportError: Traceback (most recent call last):\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/__init__.py\", line 61, in <module>\n    from tensorflow.python import pywrap_tensorflow\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 28, in <module>\n    _pywrap_tensorflow = swig_import_helper()\n  File \"/home/ubuntu/.pyenv/versions/keras/lib/python3.5/site-packages/tensorflow/python/pywrap_tensorflow.py\", line 24, in swig_import_helper\n    _mod = imp.load_module('_pywrap_tensorflow', fp, pathname, description)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 242, in load_module\n    return load_dynamic(name, filename, file)\n  File \"/home/ubuntu/.pyenv/versions/3.5.3/lib/python3.5/imp.py\", line 342, in load_dynamic\n    return _load(spec)\nImportError: libcudart.so.8.0: cannot open shared object file: No such file or directory\n\n\nFailed to load the native TensorFlow runtime.\n\nSee https://github.com/tensorflow/tensorflow/blob/master/tensorflow/g3doc/get_started/os_setup.md#import_error\n\nfor some common reasons and solutions.  Include the entire stack trace\nabove this error message when asking for help.\n```\n\nTensorFlow\u304c\u30a8\u30e9\u30fc\u3092\u5410\u304f\u3002\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3051\u3069CUDA\u95a2\u4fc2\u304b\uff1f\nAMI\u5316\u304c\u3067\u304d\u308b\u304b\u3069\u3046\u304b\u306f\u3042\u3068\u3067\u691c\u8a0e\u304c\u5fc5\u8981\u304b\u3082\u3002\u65ad\u7d9a\u7684\u306b\u4f7f\u3046\u5834\u5408\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092stop\u3057\u3066\u7f6e\u3044\u3068\u304f\u306e\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n# \u307e\u3068\u3081\n\n\u4e0a\u8a18Keras\u306e\u74b0\u5883\u69cb\u7bc9\u307e\u3067\u306f\u4e00\u6642\u9593\u4ee5\u5185\u3067\u3067\u304d\u308b\u3002\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9stop\u3057\u3066\u7f6e\u3044\u3068\u304f\u306e\u3082\u3044\u3044\u3051\u3069\u3001\u4f7f\u3044\u305f\u3044\u6642\u306b\u30b5\u30e9\u304b\u3089\u69cb\u7bc9\u3057\u3066\u3082\u305d\u3093\u306a\u306b\u624b\u9593\u3067\u306f\u306a\u3044\u3002\n\u4f7f\u7528\u983b\u5ea6\u3068\u304b\u30b1\u30fc\u30b9\u306b\u5fdc\u3058\u3066\u8003\u3048\u308b\u306e\u304c\u3044\u3044\u3060\u308d\u3046\u3002\u3064\u30fc\u304bTensorFlow GPU\u306e\u74b0\u5883\u69cb\u7bc9\u4ee5\u524d\u3068\u6bd4\u3079\u3066\u3081\u3063\u3061\u3083\u697d\u306b\u306a\u3063\u305f\u306a\u3002\n", "tags": ["Keras", "TensorFlow", "DeepLearning", "Python", "AWS"]}