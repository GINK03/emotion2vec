{"tags": ["crystal"], "context": "\n\nTL; DR\n\n\njpholidayp \u3068\u3044\u3046\u5e73\u65e5\u306e\u307f\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\n\njpholidayp \u306f Python \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u305d\u308c\u3092 Crystal \u3078\u79fb\u690d\u3057\u305f\n\u3053\u306e\u8a18\u4e8b\u3067\u306f Python \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u3068 Crystal \u306e\u30b3\u30fc\u30c9\u3092\u6bd4\u8f03\u3057\u8003\u5bdf\u3057\u3066\u3044\u308b\n\n\njpholidayp \u3068\u306f?\njpholidayp \u306f Python \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3001\u5e73\u65e5\u306e\u307f\u30fb\u4f11\u65e5\u306e\u307f\u5b9f\u884c\u3057\u305f\u3044\u30b3\u30de\u30f3\u30c9\u3092\u697d\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Python 2 \u7cfb\u3068 3 \u7cfb\u306e\u3069\u3061\u3089\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3068\u5408\u308f\u305b\u3066\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002crontab \u3068\u5408\u308f\u305b\u3066\u4f7f\u3046\u3068\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\n\u4f11\u65e5\u306e\u307f\u3001\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3044\u5834\u5408:\n\njpholidayp && some-command\n\n\u5e73\u65e5\u306e\u307f\u3001\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3044\u5834\u5408:\n\njpholidayp || some-command\n\n\nCrystal \u7248\u306e jpholidayc \u3092\u958b\u767a\u3057\u307e\u3057\u305f\njpholidayp \u3068\u540c\u3058\u6319\u52d5\u3092\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092 Crystal \u3067\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u672c\u5bb6\u306e\u540d\u524d\u306e\u672b\u5c3e\u306e p \u3092 Python \u306e p \u3067\u3042\u308b\u3068\u4e88\u60f3\u3057\u3001Crystal \u306e c \u306b\u5909\u3048\u305f\u975e\u5e38\u306b\u5b89\u76f4\u306a\u547d\u540d\u3067\u3059\u3002\n\u305d\u308c\u305e\u308c\u3001\u5143\u3068\u306a\u3063\u305f Python \u306e\u30b3\u30fc\u30c9\u3068\u6bd4\u8f03\u3057\u3066\u3001\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059 1\n\n\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\n\u3069\u3061\u3089\u3082\u8aad\u307f\u3084\u3059\u3044\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Crystal \u7248\u306b\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u306b\u306f\u306a\u3044 -v \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L90-L98\ndef jpholidayp():\n    today = date.today()\n    if JpHoliday.is_holiday(today):\n        sys.exit(EXIT_HOLIDAY)\n    else:\n        sys.exit(EXIT_WEEKDAY)\n\nif __name__ == \"__main__\":\n    jpholidayp()\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday.cr\nif ARGV.includes? \"-v\"\n  puts \"v#{JpHoliday::VERSION}\"\nend\n\ncalendar = JpHoliday::Calendar.new\n\nif calendar.is_holiday(Time.now)\n  exit JpHoliday::EXIT_HOLIDAY\nelse\n  exit JpHoliday::EXIT_WEEKDAY\nend\n\n\n\u795d\u65e5\u5224\u5b9a\u51e6\u7406\n\u3053\u3053\u306f Crystal \u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u305f\u90e8\u5206\u3067\u3059\u3002\nCrystal \u306e\u65e5\u6642\u578b (Time) \u306b\u306f sunday? \u306e\u3088\u3046\u306a\u66dc\u65e5\u3092\u5224\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u6a19\u6e96\u3067\u751f\u3048\u3066\u3044\u3066\u3001\u6570\u5024\u6bd4\u8f03\u3044\u3089\u305a\u3067\u66dc\u65e5\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u306f\u3001\u66dc\u65e5\u5224\u5b9a\u90e8\u5206\u306e\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u5b9a\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u304c\u3001Crystal \u3067\u306f\u305d\u308c\u306f\u4e0d\u8981\u3067\u3057\u305f\u3002\nPython \u3068\u306f\u9055\u3044\u3001if \u81ea\u4f53\u304c\u5024\u3092\u8fd4\u3059\u3053\u3068\u3082 Crystal \u7248\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u898b\u3048\u308b\u7406\u7531\u306e\u4e00\u3064\u3067\u3059\u3002\nPython \u7248:\nhttps://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L65-L83\n\nclass JpHoliday:\n    @classmethod\n    def is_national_holiday(self, dt):\n        holiday_jp = HolidayJp()\n        return holiday_jp.is_holiday(dt)\n\n    # value of datetime.weekday()\n    SATURDAY = 5\n    SUNDAY = 6\n\n    @classmethod\n    def is_holiday(self, dt):\n        w = dt.weekday()\n        if w == self.SATURDAY or w == self.SUNDAY:\n            return True\n        elif self.is_national_holiday(dt):\n            return True\n        else:\n            return False\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/calendar.cr\nclass JpHoliday::Calendar\n  def is_holiday(dt : Time) : Bool\n    if dt.saturday? || dt.sunday?\n      true\n    elsif is_national_holiday(dt)\n      true\n    else\n      false\n    end\n  end\n\n  def is_national_holiday(dt : Time) : Bool\n    holiday_jp = HolidayJp.new\n    holiday_jp.is_holiday(dt)\n  end\nend\n\n\nYAML \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u90e8\u5206\n\u3053\u3053\u306f Python \u3067\u306e\u8a18\u8ff0\u306e\u65b9\u304c\u5727\u5012\u7684\u306b\u7c21\u6f54\u3067\u3057\u305f\u3002Crystal \u306f\u9759\u7684\u8a00\u8a9e\u3067\u3042\u308b\u70b9\u3068 nil \u5b89\u5168\u3067\u3042\u308b\u3053\u3068\u304c\u539f\u56e0\u3067\u3001Python \u3088\u308a\u3082\u8907\u96d1\u306b\u898b\u3048\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059 (not_nil! \u3068\u304b\u4f7f\u3048\u3070\u77ed\u304f\u306f\u306a\u308b\u3051\u3069\u3001\u305d\u308c\u306f\u4f55\u304b\u9055\u3046)\u3002\nCrystal \u3067\u306f YAML \u306f YAML.mapping \u3092\u4f7f\u3063\u3066\u578b\u5b9a\u7fa9\u3092\u66f8\u304f\u3053\u3068\u3067\u3001\u914d\u5217\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u76f4\u63a5\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u8981\u4ef6\u3067\u306f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u898b\u308c\u308c\u3070\u826f\u3044\u306e\u3067\u305d\u308c\u306f\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u3067 cache \u3092\u6e21\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L48-L63\nclass HolidayJp:\n    URL = 'https://raw.githubusercontent.com/k1LoW/holiday_jp/master/holidays.yml'\n\n    def __init__(self):\n        cache = Cache()\n        c = cache.get()\n        if c:\n            dat = c[\"holiday_jp\"]\n        else:\n            res = urlopen(self.URL)\n            dat = yaml.load(res)\n            cache.set({\"holiday_jp\": dat})\n        self.holiday_jp = dat\n\n    def is_holiday(self, dt):\n        return dt in self.holiday_jp.keys()\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/holiday_jp.cr\nclass JpHoliday::HolidayJp\n  URL = \"https://raw.githubusercontent.com/k1LoW/holiday_jp/master/holidays.yml\"\n\n  @holiday_jp : Hash(String, Bool)\n\n  def initialize(cache = Cache.new)\n    if dat = cache.get\n      @holiday_jp = dat\n      return\n    end\n\n    res = HTTP::Client.get(URL)\n    dat = {} of String => Bool\n\n    if res.success?\n      obj = YAML.parse(res.body)\n      dat = obj.as_h.keys.map { |k| {k.to_s, true} }.to_h\n      cache.set(dat)\n    else\n      puts \"#{res.status_code} #{res.status_message}\"\n      exit EXIT_ERROR\n    end\n\n    @holiday_jp = dat\n  end\n\n  def is_holiday(dt : Time) : Bool\n    @holiday_jp.has_key? dt.to_s(\"%Y-%m-%d\")\n  end\nend\n\n\n\u30ad\u30e3\u30c3\u30b7\u30e5\u51e6\u7406\u90e8\u5206\n\u30ad\u30e3\u30c3\u30b7\u30e5\u90e8\u5206\u306f\u3001\u6b63\u76f4\u5b9f\u88c5\u304c\u304b\u306a\u308a\u9762\u5012\u3067\u3057\u305f\u3002\nPython \u7248\u3067\u306f\u3001\u30cd\u30c3\u30c8\u4e0a\u304b\u3089\u62fe\u3063\u3066\u304d\u305f YAML \u3092 Python \u306e\u30ea\u30b9\u30c8\u30fb\u8f9e\u66f8\u3078\u5909\u63db\u3057\u3001\u3055\u3089\u306b\u305d\u308c\u3092 pickle \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305d\u306e\u307e\u307e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u9759\u7684\u8a00\u8a9e\u3067\u3042\u308b Crystal \u3067\u306f\u8d85\u3048\u3089\u308c\u306a\u3044\u58c1\u3067\u3059 2\u3002\n\u305d\u306e\u305f\u3081 Crystal \u3067\u306f\u305d\u306e\u65b9\u6cd5\u306f\u304d\u3063\u3071\u308a\u8ae6\u3081\u3066\u3001\u30c7\u30fc\u30bf\u306e\u4e2d\u9593\u5f62\u5f0f\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081 Crystal \u7248\u306f\u4e00\u65e6 JSON \u5f62\u5f0f\u3078\u5909\u63db\u3057\u305f\u5f8c\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L16-L46\nclass Cache:\n    def __init__(self):\n        try:\n            os.mkdir(os.path.expanduser(datadir))\n        except OSError:\n            # get exception instance on Python <= 2.5, 2.6/2.7 and 3.x\n            if sys.exc_info()[1].errno != errno.EEXIST:\n                raise\n\n    def get(self):\n        file = os.path.join(os.path.expanduser(datadir), cachefile)\n        if not os.path.exists(file):\n            return None\n        today = date.today()\n        with open(file, 'rb') as f:\n            dat = pickle.load(f)\n        if dat[\"expires\"] <= today:\n            return None\n        else:\n            return dat[\"val\"]\n\n    def set(self, val):\n        expires = date.today() + timedelta(cachedays)\n        dat = {\"expires\": expires, \"val\": val}\n        file = os.path.join(os.path.expanduser(datadir), cachefile)\n        with open(file, 'wb') as f:\n            pickle.dump(dat, f, protocol=2) # for Python 2.x and 3.x\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/cache.cr\nclass JpHoliday::Cache\n  DATA_DIR   = \"~/.jpholidayc\"\n  CACHE_DAYS = 5\n  CACHE_FILE = \"cache\"\n\n  def initialize\n    @cache_dir = File.expand_path(DATA_DIR)\n    @cache_path = File.join(@cache_dir, CACHE_FILE)\n\n    Dir.mkdir_p @cache_dir\n  end\n\n  def get : Hash(String, Bool)?\n    begin\n      dat = Container.from_json(File.read(@cache_path, encoding: \"utf-8\"))\n      if dat.expires <= Time.now\n        nil\n      else\n        dat.val\n      end\n    rescue e : JSON::ParseException\n      nil\n    rescue e : Errno\n      unless e.errno == Errno::ENOENT\n        raise e\n      end\n      nil\n    end\n  end\n\n  def set(val : Hash(String, Bool))\n    expires = Time.now + CACHE_DAYS.days\n    dat = Container.new(expires, val)\n\n    File.write(@cache_path, dat.to_json, encoding: \"utf-8\")\n  end\n\n  class Container\n    JSON.mapping(\n      expires: Time,\n      val: Hash(String, Bool),\n    )\n\n    def initialize(@expires : Time, @val : Hash(String, Bool))\n    end\n  end\nend\n\n\n\u30c6\u30b9\u30c8\njpholidayc \u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u5225\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002Crystal \u306f Ruby \u304b\u3089\u5f15\u304d\u7d99\u3044\u3060\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u5f37\u5f15\u306b\u30e2\u30c3\u30af\u3057\u3066\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u306b\u306f\u3001\u7d44\u307f\u8fbc\u307f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b spec \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9: https://github.com/pine/jpholidayc/tree/master/spec\n\n\u5b9f\u884c\u901f\u5ea6\u306b\u3064\u3044\u3066\nPython \u7248\u3068\u6bd4\u8f03\u3057\u305f\u3068\u304d\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3069\u3061\u3089\u3082\u3001\u30c7\u30fc\u30bf\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u308a\u3001HTTPS \u901a\u4fe1\u306f\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3059\u3002\nCrystal \u7248\u306f Python \u7248\u306b\u6bd4\u3079\u3001\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n$ time -p jpholidayp\nreal         0.16\nuser         0.12\nsys          0.04\n\n$ time -p jpholidayc\nreal         0.00\nuser         0.00\nsys          0.00\n\n\u3061\u306a\u307f\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u306f\u7d50\u69cb\u304b\u304b\u308a\u307e\u3059\u3002\n$ time -p crystal build src/jpholiday.cr -o bin/jpholidayc\nreal         1.58\nuser         1.61\nsys          0.81\n\n\n\u5168\u4f53\u3092\u901a\u3057\u3066\u306e\u6240\u611f\n\u3084\u306f\u308a Crystal \u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u304b\u306a\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3078\u4f9d\u5b58\u3057\u306a\u304f\u3066\u3082\u5b8c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u52d5\u4f5c\u3082\u975e\u5e38\u306b\u9ad8\u901f\u3067\u3059\u3002\n\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u76f8\u5909\u308f\u3089\u305a\u6d41\u52d5\u7684\u3067\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3082\u672a\u719f\u3067\u3059\u304c\u3001\u7c21\u5358\u306a\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u306b\u306f\u5341\u5206\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u3060 Crystal \u3092\u89e6\u3063\u305f\u3053\u3068\u7121\u3044\u65b9\u306f\u3001\u305c\u3072\u8a66\u3057\u306b\u89e6\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\nPython \u3068\u6bd4\u8f03\u3057\u3066\u308b\u306e\u306f\u3001\u305f\u307e\u305f\u307e\u5143\u30b3\u30fc\u30c9\u304c Python \u3060\u3063\u305f\u3060\u3051\u3067\u4ed6\u610f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u00a0\u21a9\n\n\nunion \u99c6\u4f7f\u3059\u308c\u3070\u3067\u304d\u308b\u3068\u601d\u3046\u304c\u3001\u679c\u305f\u3057\u3066\u305d\u308c\u306f\u66f8\u304d\u3084\u3059\u3044\u306e\u3060\u308d\u3046\u304b\u3002\u5927\u91cf\u306e\u578b\u30ad\u30e3\u30b9\u30c8\u3082\u751f\u3058\u3066\u3057\u307e\u3046...\u3002\u00a0\u21a9\n\n\n\n## TL; DR\n- [jpholidayp](https://github.com/emasaka/jpholidayp) \u3068\u3044\u3046\u5e73\u65e5\u306e\u307f\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u308b\u30b3\u30de\u30f3\u30c9\u304c\u3042\u308b\n- [jpholidayp](https://github.com/emasaka/jpholidayp) \u306f Python \u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u3001\u4eca\u56de\u305d\u308c\u3092 Crystal \u3078\u79fb\u690d\u3057\u305f\n- \u3053\u306e\u8a18\u4e8b\u3067\u306f Python \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u3068 Crystal \u306e\u30b3\u30fc\u30c9\u3092\u6bd4\u8f03\u3057\u8003\u5bdf\u3057\u3066\u3044\u308b\n\n## [jpholidayp](https://github.com/emasaka/jpholidayp) \u3068\u306f?\n[jpholidayp](https://github.com/emasaka/jpholidayp) \u306f Python \u3067\u8a18\u8ff0\u3055\u308c\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3067\u3001\u5e73\u65e5\u306e\u307f\u30fb\u4f11\u65e5\u306e\u307f\u5b9f\u884c\u3057\u305f\u3044\u30b3\u30de\u30f3\u30c9\u3092\u697d\u306b\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002Python 2 \u7cfb\u3068 3 \u7cfb\u306e\u3069\u3061\u3089\u3067\u3082\u52d5\u4f5c\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u4ed6\u306e\u30b3\u30de\u30f3\u30c9\u3068\u5408\u308f\u305b\u3066\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002crontab \u3068\u5408\u308f\u305b\u3066\u4f7f\u3046\u3068\u3001\u975e\u5e38\u306b\u4fbf\u5229\u3067\u3059\u3002\n\n\u4f11\u65e5\u306e\u307f\u3001\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3044\u5834\u5408:\n```\njpholidayp && some-command\n```\n\n\u5e73\u65e5\u306e\u307f\u3001\u7279\u5b9a\u306e\u30b3\u30de\u30f3\u30c9\u3092\u52d5\u4f5c\u3055\u305b\u305f\u3044\u5834\u5408:\n```\njpholidayp || some-command\n```\n\n## Crystal \u7248\u306e [jpholidayc](https://github.com/pine/jpholidayc) \u3092\u958b\u767a\u3057\u307e\u3057\u305f\njpholidayp \u3068\u540c\u3058\u6319\u52d5\u3092\u3059\u308b\u30b3\u30de\u30f3\u30c9\u3092 Crystal \u3067\u3082\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u672c\u5bb6\u306e\u540d\u524d\u306e\u672b\u5c3e\u306e `p` \u3092 Python \u306e `p` \u3067\u3042\u308b\u3068\u4e88\u60f3\u3057\u3001Crystal \u306e `c` \u306b\u5909\u3048\u305f\u975e\u5e38\u306b\u5b89\u76f4\u306a\u547d\u540d\u3067\u3059\u3002\n\n\u305d\u308c\u305e\u308c\u3001\u5143\u3068\u306a\u3063\u305f Python \u306e\u30b3\u30fc\u30c9\u3068\u6bd4\u8f03\u3057\u3066\u3001\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3057\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059 [^1]\n\n### \u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\n\u3069\u3061\u3089\u3082\u8aad\u307f\u3084\u3059\u3044\u7c21\u6f54\u306a\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Crystal \u7248\u306b\u306f\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u306b\u306f\u306a\u3044 `-v` \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8ffd\u52a0\u3067\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L90-L98\n\n```py\ndef jpholidayp():\n    today = date.today()\n    if JpHoliday.is_holiday(today):\n        sys.exit(EXIT_HOLIDAY)\n    else:\n        sys.exit(EXIT_WEEKDAY)\n\nif __name__ == \"__main__\":\n    jpholidayp()\n```\n\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday.cr\n\n```rb\nif ARGV.includes? \"-v\"\n  puts \"v#{JpHoliday::VERSION}\"\nend\n\ncalendar = JpHoliday::Calendar.new\n\nif calendar.is_holiday(Time.now)\n  exit JpHoliday::EXIT_HOLIDAY\nelse\n  exit JpHoliday::EXIT_WEEKDAY\nend\n```\n\n### \u795d\u65e5\u5224\u5b9a\u51e6\u7406\n\u3053\u3053\u306f Crystal \u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u66f8\u3051\u305f\u90e8\u5206\u3067\u3059\u3002\n\nCrystal \u306e\u65e5\u6642\u578b (Time) \u306b\u306f `sunday?` \u306e\u3088\u3046\u306a\u66dc\u65e5\u3092\u5224\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u6a19\u6e96\u3067\u751f\u3048\u3066\u3044\u3066\u3001\u6570\u5024\u6bd4\u8f03\u3044\u3089\u305a\u3067\u66dc\u65e5\u3092\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30aa\u30ea\u30b8\u30ca\u30eb\u7248\u306f\u3001\u66dc\u65e5\u5224\u5b9a\u90e8\u5206\u306e\u53ef\u8aad\u6027\u3092\u4e0a\u3052\u308b\u305f\u3081\u306b\u5b9a\u6570\u3078\u306e\u4ee3\u5165\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u304c\u3001Crystal \u3067\u306f\u305d\u308c\u306f\u4e0d\u8981\u3067\u3057\u305f\u3002\n\nPython \u3068\u306f\u9055\u3044\u3001if \u81ea\u4f53\u304c\u5024\u3092\u8fd4\u3059\u3053\u3068\u3082 Crystal \u7248\u304c\u30b7\u30f3\u30d7\u30eb\u306b\u898b\u3048\u308b\u7406\u7531\u306e\u4e00\u3064\u3067\u3059\u3002\n\nPython \u7248:\nhttps://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L65-L83\n\n```py\n\nclass JpHoliday:\n    @classmethod\n    def is_national_holiday(self, dt):\n        holiday_jp = HolidayJp()\n        return holiday_jp.is_holiday(dt)\n\n    # value of datetime.weekday()\n    SATURDAY = 5\n    SUNDAY = 6\n\n    @classmethod\n    def is_holiday(self, dt):\n        w = dt.weekday()\n        if w == self.SATURDAY or w == self.SUNDAY:\n            return True\n        elif self.is_national_holiday(dt):\n            return True\n        else:\n            return False\n```\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/calendar.cr\n\n```rb\nclass JpHoliday::Calendar\n  def is_holiday(dt : Time) : Bool\n    if dt.saturday? || dt.sunday?\n      true\n    elsif is_national_holiday(dt)\n      true\n    else\n      false\n    end\n  end\n\n  def is_national_holiday(dt : Time) : Bool\n    holiday_jp = HolidayJp.new\n    holiday_jp.is_holiday(dt)\n  end\nend\n```\n\n### YAML \u30d5\u30a1\u30a4\u30eb\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u90e8\u5206\n\u3053\u3053\u306f Python \u3067\u306e\u8a18\u8ff0\u306e\u65b9\u304c\u5727\u5012\u7684\u306b\u7c21\u6f54\u3067\u3057\u305f\u3002Crystal \u306f\u9759\u7684\u8a00\u8a9e\u3067\u3042\u308b\u70b9\u3068 nil \u5b89\u5168\u3067\u3042\u308b\u3053\u3068\u304c\u539f\u56e0\u3067\u3001Python \u3088\u308a\u3082\u8907\u96d1\u306b\u898b\u3048\u308b\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u307e\u3059 (not_nil! \u3068\u304b\u4f7f\u3048\u3070\u77ed\u304f\u306f\u306a\u308b\u3051\u3069\u3001\u305d\u308c\u306f\u4f55\u304b\u9055\u3046)\u3002\n\nCrystal \u3067\u306f YAML \u306f `YAML.mapping` \u3092\u4f7f\u3063\u3066\u578b\u5b9a\u7fa9\u3092\u66f8\u304f\u3053\u3068\u3067\u3001\u914d\u5217\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u76f4\u63a5\u5909\u63db\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u306e\u8981\u4ef6\u3067\u306f\u30ad\u30fc\u304c\u5b58\u5728\u3059\u308b\u304b\u898b\u308c\u308c\u3070\u826f\u3044\u306e\u3067\u305d\u308c\u306f\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u5f15\u6570\u3067 `cache` \u3092\u6e21\u3057\u3066\u3044\u308b\u306e\u306f\u3001\u30c6\u30b9\u30c8\u3092\u66f8\u304d\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u3067\u3059\u3002\n\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L48-L63\n\n```py\nclass HolidayJp:\n    URL = 'https://raw.githubusercontent.com/k1LoW/holiday_jp/master/holidays.yml'\n\n    def __init__(self):\n        cache = Cache()\n        c = cache.get()\n        if c:\n            dat = c[\"holiday_jp\"]\n        else:\n            res = urlopen(self.URL)\n            dat = yaml.load(res)\n            cache.set({\"holiday_jp\": dat})\n        self.holiday_jp = dat\n\n    def is_holiday(self, dt):\n        return dt in self.holiday_jp.keys()\n```\n\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/holiday_jp.cr\n\n```rb\nclass JpHoliday::HolidayJp\n  URL = \"https://raw.githubusercontent.com/k1LoW/holiday_jp/master/holidays.yml\"\n\n  @holiday_jp : Hash(String, Bool)\n\n  def initialize(cache = Cache.new)\n    if dat = cache.get\n      @holiday_jp = dat\n      return\n    end\n\n    res = HTTP::Client.get(URL)\n    dat = {} of String => Bool\n\n    if res.success?\n      obj = YAML.parse(res.body)\n      dat = obj.as_h.keys.map { |k| {k.to_s, true} }.to_h\n      cache.set(dat)\n    else\n      puts \"#{res.status_code} #{res.status_message}\"\n      exit EXIT_ERROR\n    end\n\n    @holiday_jp = dat\n  end\n\n  def is_holiday(dt : Time) : Bool\n    @holiday_jp.has_key? dt.to_s(\"%Y-%m-%d\")\n  end\nend\n```\n\n### \u30ad\u30e3\u30c3\u30b7\u30e5\u51e6\u7406\u90e8\u5206\n\u30ad\u30e3\u30c3\u30b7\u30e5\u90e8\u5206\u306f\u3001\u6b63\u76f4\u5b9f\u88c5\u304c\u304b\u306a\u308a\u9762\u5012\u3067\u3057\u305f\u3002\n\nPython \u7248\u3067\u306f\u3001\u30cd\u30c3\u30c8\u4e0a\u304b\u3089\u62fe\u3063\u3066\u304d\u305f YAML \u3092 Python \u306e\u30ea\u30b9\u30c8\u30fb\u8f9e\u66f8\u3078\u5909\u63db\u3057\u3001\u3055\u3089\u306b\u305d\u308c\u3092 [pickle](http://docs.python.jp/3/library/pickle.html) \u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3044\u305d\u306e\u307e\u307e\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u9759\u7684\u8a00\u8a9e\u3067\u3042\u308b Crystal \u3067\u306f\u8d85\u3048\u3089\u308c\u306a\u3044\u58c1\u3067\u3059 [^2]\u3002\n\n\u305d\u306e\u305f\u3081 Crystal \u3067\u306f\u305d\u306e\u65b9\u6cd5\u306f\u304d\u3063\u3071\u308a\u8ae6\u3081\u3066\u3001\u30c7\u30fc\u30bf\u306e\u4e2d\u9593\u5f62\u5f0f\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081 Crystal \u7248\u306f\u4e00\u65e6 JSON \u5f62\u5f0f\u3078\u5909\u63db\u3057\u305f\u5f8c\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u3044\u307e\u3059\u3002\n\nPython \u7248: https://github.com/emasaka/jpholidayp/blob/cf4b90d00251fdea2585a82cf7ca11994a11fa0c/jpholidayp#L16-L46\n\n```py\nclass Cache:\n    def __init__(self):\n        try:\n            os.mkdir(os.path.expanduser(datadir))\n        except OSError:\n            # get exception instance on Python <= 2.5, 2.6/2.7 and 3.x\n            if sys.exc_info()[1].errno != errno.EEXIST:\n                raise\n\n    def get(self):\n        file = os.path.join(os.path.expanduser(datadir), cachefile)\n        if not os.path.exists(file):\n            return None\n        today = date.today()\n        with open(file, 'rb') as f:\n            dat = pickle.load(f)\n        if dat[\"expires\"] <= today:\n            return None\n        else:\n            return dat[\"val\"]\n\n    def set(self, val):\n        expires = date.today() + timedelta(cachedays)\n        dat = {\"expires\": expires, \"val\": val}\n        file = os.path.join(os.path.expanduser(datadir), cachefile)\n        with open(file, 'wb') as f:\n            pickle.dump(dat, f, protocol=2) # for Python 2.x and 3.x\n```\n\nCrystal \u7248: https://github.com/pine/jpholidayc/blob/master/src/jpholiday/cache.cr\n\n```rb\nclass JpHoliday::Cache\n  DATA_DIR   = \"~/.jpholidayc\"\n  CACHE_DAYS = 5\n  CACHE_FILE = \"cache\"\n\n  def initialize\n    @cache_dir = File.expand_path(DATA_DIR)\n    @cache_path = File.join(@cache_dir, CACHE_FILE)\n\n    Dir.mkdir_p @cache_dir\n  end\n\n  def get : Hash(String, Bool)?\n    begin\n      dat = Container.from_json(File.read(@cache_path, encoding: \"utf-8\"))\n      if dat.expires <= Time.now\n        nil\n      else\n        dat.val\n      end\n    rescue e : JSON::ParseException\n      nil\n    rescue e : Errno\n      unless e.errno == Errno::ENOENT\n        raise e\n      end\n      nil\n    end\n  end\n\n  def set(val : Hash(String, Bool))\n    expires = Time.now + CACHE_DAYS.days\n    dat = Container.new(expires, val)\n\n    File.write(@cache_path, dat.to_json, encoding: \"utf-8\")\n  end\n\n  class Container\n    JSON.mapping(\n      expires: Time,\n      val: Hash(String, Bool),\n    )\n\n    def initialize(@expires : Time, @val : Hash(String, Bool))\n    end\n  end\nend\n```\n\n## \u30c6\u30b9\u30c8\njpholidayc \u3067\u306f\u3001\u305d\u308c\u305e\u308c\u306e\u30d5\u30a1\u30a4\u30eb\u5225\u306b\u30c6\u30b9\u30c8\u3092\u8a18\u8ff0\u3057\u3066\u3042\u308a\u307e\u3059\u3002Crystal \u306f Ruby \u304b\u3089\u5f15\u304d\u7d99\u3044\u3060\u30aa\u30fc\u30d7\u30f3\u30af\u30e9\u30b9\u306e\u6982\u5ff5\u304c\u3042\u308b\u306e\u3067\u3001\u304b\u306a\u308a\u5f37\u5f15\u306b\u30e2\u30c3\u30af\u3057\u3066\u30c6\u30b9\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u30c6\u30b9\u30c8\u306b\u306f\u3001\u7d44\u307f\u8fbc\u307f\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b `spec` \u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9: https://github.com/pine/jpholidayc/tree/master/spec\n\n## \u5b9f\u884c\u901f\u5ea6\u306b\u3064\u3044\u3066\nPython \u7248\u3068\u6bd4\u8f03\u3057\u305f\u3068\u304d\u306e\u5b9f\u884c\u901f\u5ea6\u3092\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u3069\u3061\u3089\u3082\u3001\u30c7\u30fc\u30bf\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u308a\u3001HTTPS \u901a\u4fe1\u306f\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u72b6\u614b\u3067\u3059\u3002\n\nCrystal \u7248\u306f Python \u7248\u306b\u6bd4\u3079\u3001\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n```\n$ time -p jpholidayp\nreal         0.16\nuser         0.12\nsys          0.04\n\n$ time -p jpholidayc\nreal         0.00\nuser         0.00\nsys          0.00\n```\n\n\u3061\u306a\u307f\u306b\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u901f\u5ea6\u306f\u7d50\u69cb\u304b\u304b\u308a\u307e\u3059\u3002\n\n```\n$ time -p crystal build src/jpholiday.cr -o bin/jpholidayc\nreal         1.58\nuser         1.61\nsys          0.81\n```\n\n## \u5168\u4f53\u3092\u901a\u3057\u3066\u306e\u6240\u611f\n\u3084\u306f\u308a Crystal \u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u304b\u306a\u308a\u5145\u5b9f\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5916\u90e8\u30e9\u30a4\u30d6\u30e9\u30ea\u3078\u4f9d\u5b58\u3057\u306a\u304f\u3066\u3082\u5b8c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\u52d5\u4f5c\u3082\u975e\u5e38\u306b\u9ad8\u901f\u3067\u3059\u3002\n\n\u8a00\u8a9e\u306e\u4ed5\u69d8\u306f\u76f8\u5909\u308f\u3089\u305a\u6d41\u52d5\u7684\u3067\u30a8\u30b3\u30b7\u30b9\u30c6\u30e0\u3082\u672a\u719f\u3067\u3059\u304c\u3001\u7c21\u5358\u306a\u30b3\u30f3\u30bd\u30fc\u30eb\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3046\u306b\u306f\u5341\u5206\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u307e\u3060 Crystal \u3092\u89e6\u3063\u305f\u3053\u3068\u7121\u3044\u65b9\u306f\u3001\u305c\u3072\u8a66\u3057\u306b\u89e6\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n[^1]: Python \u3068\u6bd4\u8f03\u3057\u3066\u308b\u306e\u306f\u3001\u305f\u307e\u305f\u307e\u5143\u30b3\u30fc\u30c9\u304c Python \u3060\u3063\u305f\u3060\u3051\u3067\u4ed6\u610f\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n[^2]: union \u99c6\u4f7f\u3059\u308c\u3070\u3067\u304d\u308b\u3068\u601d\u3046\u304c\u3001\u679c\u305f\u3057\u3066\u305d\u308c\u306f\u66f8\u304d\u3084\u3059\u3044\u306e\u3060\u308d\u3046\u304b\u3002\u5927\u91cf\u306e\u578b\u30ad\u30e3\u30b9\u30c8\u3082\u751f\u3058\u3066\u3057\u307e\u3046...\u3002\n"}