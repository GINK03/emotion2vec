{"tags": ["RSS", "C", "Linux", "XML"], "context": " More than 1 year has passed since last update.\u78ba\u304b\u30012\u301c3\u5e74\u304f\u3089\u3044\u524d\u306bC\u3067\u66f8\u3044\u305f\u7c21\u6613RSS\u30ea\u30fc\u30c0\u30fc\u3002IBM\u306edeveloperWorks\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3001Linux\u3067libcurl\u3092\u4f7f\u3063\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fRSS\u30d5\u30a3\u30fc\u30c9\u3092libxml2\u3092\u4f7f\u3063\u3066\u89e3\u6790\u3057\u306a\u304c\u3089\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3068\u30ea\u30f3\u30af\u5148\u3092\u8868\u793a\u3059\u308b\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066XML\u3092\u5b66\u7fd2\u3057\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3001XML\u306e\u89e3\u6790\u51e6\u7406\u3092\u3069\u3046\u3084\u3063\u3066\u66f8\u3044\u305f\u304b\u3055\u3063\u3071\u308a\u601d\u3044\u51fa\u305b\u306a\u3044orz\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nlibcurl\u306b\u3088\u308bRSS\u30d5\u30a3\u30fc\u30c9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306fIBM\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u6240\u3092\u3001\u30a2\u30c3\u30d7\u30eb\u306eRSS\u30d5\u30a3\u30fc\u30c9\u306e\u30b5\u30de\u30ea\u304c\u51fa\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <curl/curl.h>\n#include <sys/types.h>\n#include <errno.h>\n#include <libxml/xmlerror.h>\n#include <libxml/parser.h>\n#include <libxml/tree.h>\n#include <libxml/xpath.h>\n\n#define MAX_BUF 65536\n\nchar wr_buf[MAX_BUF+1];\nint  wr_index;\n\n#define PATH \"http://www.apple.com/jp/main/rss/hotnews/hotnews.rss\"\n\n/*\n * Write data callback function (called within the context of \n * curl_easy_perform.\n */\n\nsize_t write_data( void *buffer, size_t size, size_t nmemb, void *userp ) {\n    int segsize = size * nmemb;\n\n    if (wr_index + segsize > MAX_BUF) {\n        *(int *)userp = 1;\n        return 0;\n    }\n\n    memcpy( (void *)&wr_buf[wr_index], buffer, (size_t)segsize );\n    wr_index += segsize;\n    wr_buf[wr_index] = 0;\n    return segsize;\n}\n\n/*\n * Parse RSS and print summary.\n */\n\nint\nprint_rss(char* text) {\n    int     i;\n    int     size;\n    xmlDoc  *doc;\n    xmlXPathContextPtr  xpathCtx;\n    xmlXPathObjectPtr   xpathObj;\n    xmlNodeSetPtr       nodes;\n    xmlNode             *node;\n    xmlChar             *textcount;\n\n    /* parse an XML in-memory document and build a tree. */\n    doc = xmlReadMemory(text, strlen(text), \"noname.xml\", NULL, 0);\n    if (doc == NULL) {\n        perror(\"xmlReadFile\");\n        return -1;\n    }\n\n    /* Create a new xmlXPathContext */\n    xpathCtx = xmlXPathNewContext(doc);\n    if (xpathCtx == NULL) {\n        perror(\"xmlXPathNewContext\");\n        xmlFreeDoc(doc);\n        xmlCleanupParser();\n        return -1;\n    }\n\n    /* Get Node list of RSS channel */\n    xpathObj = xmlXPathEvalExpression(BAD_CAST \"/rss/channel\", xpathCtx);\n    nodes = xpathObj->nodesetval;\n    if (nodes == NULL) {\n        xmlXPathFreeContext(xpathCtx);\n        xmlFreeDoc(doc);\n        xmlCleanupParser();\n        return -1;\n    }\n\n    /* Get and print Title of RSS Feed. */\n    size = nodes->nodeNr;\n    for (i = 0; i < size; i++) {\n        node = xmlFirstElementChild(nodes->nodeTab[i]);\n        if (node == NULL) {\n            continue;\n        }\n        for (; node; node = xmlNextElementSibling(node)) {\n            if (strcmp((char*)node->name, \"title\")) {\n                    continue;\n            }\n            textcount = xmlNodeGetContent(node);\n            if (textcount) {\n                printf(\"\\nTitle: %s\\n\\n\", textcount);\n                xmlFree(textcount);\n            }\n        }\n    }\n    xmlXPathFreeObject(xpathObj);\n\n    /* Get Node list of RSS items */\n    xpathObj = xmlXPathEvalExpression(BAD_CAST \"/rss/channel/item\", xpathCtx);\n    nodes = xpathObj->nodesetval;\n    if (nodes == NULL) {\n        xmlXPathFreeContext(xpathCtx);\n        xmlFreeDoc(doc);\n        xmlCleanupParser();\n        return -1;\n    }\n\n    /* Get and print title and link of each items. */\n    size = nodes->nodeNr;\n    for (i = 0; i < size; i++) {\n        node = xmlFirstElementChild(nodes->nodeTab[i]);\n        if (node == NULL) {\n            continue;\n        }\n        for (; node; node = xmlNextElementSibling(node)) {\n            if (strcmp((char*)node->name, \"title\") != 0 &&\n                strcmp((char*)node->name, \"link\") != 0) {\n                    continue;\n            }\n            textcount = xmlNodeGetContent(node);\n            if (textcount) {\n                printf(\" %s:\\t%s\\n\", node->name, textcount);\n                xmlFree(textcount);\n            }\n        }\n        printf(\"\\n\");\n    }\n\n    xmlXPathFreeObject(xpathObj);\n    xmlXPathFreeContext(xpathCtx);\n    xmlFreeDoc(doc);\n    xmlCleanupParser();\n    return 0;\n}\n\n/*\n * Simple curl application to read the rss feed from a Web site.\n */\n\nint main( void )\n{\n    CURL *curl;\n    CURLcode ret;\n    int  wr_error;\n\n    wr_error = 0;\n    wr_index = 0;\n\n    curl = curl_easy_init();\n    if (!curl) {\n        printf(\"couldn't init curl\\n\");\n        return 0;\n    }\n\n    curl_easy_setopt(curl, CURLOPT_URL, PATH);\n    curl_easy_setopt(curl, CURLOPT_WRITEDATA, (void *)&wr_error);\n    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_data);\n\n    ret = curl_easy_perform(curl);\n    if ( ret == 0 ) {\n        //\n        print_rss(wr_buf);\n    } else {\n        printf( \"ret = %d (write_error = %d)\\n\", ret, wr_error );\n        curl_easy_cleanup(curl);\n        return 1;\n    }\n\n    curl_easy_cleanup(curl);\n    return 0;\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f libcurl-devel \u3068 libxml2-devel \u304c\u5fc5\u8981\u306a\u306e\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059(CentOS\u306e\u5834\u5408)\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306f -I \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308blibxml2\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u3068 -l \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n$ cc -I/usr/include/libxml2 getrss.c -o getrss -lcurl -lxml2\n\n\n\u5b9f\u884c\u7d50\u679c\n\u300c\u30a2\u30c3\u30d7\u30eb - \u30db\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\u300d\u306e\u30b5\u30de\u30ea\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n$ ./getrss\n\nTitle: \u30a2\u30c3\u30d7\u30eb - \u30db\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\n\n title: Apple\u3001\u611f\u5727\u30bf\u30c3\u30c1\u30c8\u30e9\u30c3\u30af\u30d1\u30c3\u30c9\u3092\u642d\u8f09\u3057\u305f15\u30a4\u30f3\u30c1\u306eMacBook Pro\u3001238,800\u5186\u306e\u65b0\u3057\u3044iMac Retina 5K\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30c7\u30eb\u3092\u767a\u58f2\n link:  http://www.apple.com/jp/pr/library/2015/05/19Apple-Introduces-15-inch-MacBook-Pro-with-Force-Touch-Trackpad-New-1-999-iMac-with-Retina-5K-Display.html\n\n title: \u65e5\u672c\u90f5\u653f\u30b0\u30eb\u30fc\u30d7\u3001IBM\u3001Apple\u3001\u65e5\u672c\u306e\u9ad8\u9f62\u8005\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u901a\u3058\u3066\u5bb6\u65cf\u30fb\u5730\u57df\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc\u3068\u3064\u306a\u304c\u308b\u305f\u3081\u306b\u3001iPad\u3068\u5c02\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\n link:  http://www.apple.com/jp/pr/library/2015/04/30Japan-Post-Group-IBM-and-Apple-Deliver-iPads-and-Custom-Apps-to-Connect-Elderly-in-Japan-to-Services-Family-and-Community.html\n\n title: Apple\u3001\u7b2c2\u56db\u534a\u671f\u306e\u696d\u7e3e\u3092\u767a\u8868\n link:  http://www.apple.com/jp/pr/library/2015/04/27Apple-Reports-Record-Second-Quarter-Results.html\n\n    \u30fb\n    \u30fb\n    \u30fb\n\n\u78ba\u304b\u30012\u301c3\u5e74\u304f\u3089\u3044\u524d\u306bC\u3067\u66f8\u3044\u305f\u7c21\u6613RSS\u30ea\u30fc\u30c0\u30fc\u3002IBM\u306e[developerWorks](http://www.ibm.com/developerworks/jp/opensource/library/os-curl/)\u306e\u8a18\u4e8b\u3092\u53c2\u8003\u306b\u3001Linux\u3067[libcurl](http://curl.haxx.se/libcurl/)\u3092\u4f7f\u3063\u3066\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305fRSS\u30d5\u30a3\u30fc\u30c9\u3092[libxml2](http://xmlsoft.org)\u3092\u4f7f\u3063\u3066\u89e3\u6790\u3057\u306a\u304c\u3089\u8a18\u4e8b\u306e\u30bf\u30a4\u30c8\u30eb\u3068\u30ea\u30f3\u30af\u5148\u3092\u8868\u793a\u3059\u308b\u3068\u3044\u3046\u306e\u3092\u3084\u3063\u3066XML\u3092\u5b66\u7fd2\u3057\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u3051\u3069\u3001XML\u306e\u89e3\u6790\u51e6\u7406\u3092\u3069\u3046\u3084\u3063\u3066\u66f8\u3044\u305f\u304b\u3055\u3063\u3071\u308a\u601d\u3044\u51fa\u305b\u306a\u3044orz\n\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\nlibcurl\u306b\u3088\u308bRSS\u30d5\u30a3\u30fc\u30c9\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306fIBM\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u4f7f\u3063\u3066\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u7d50\u679c\u3092\u8868\u793a\u3059\u308b\u6240\u3092\u3001\u30a2\u30c3\u30d7\u30eb\u306eRSS\u30d5\u30a3\u30fc\u30c9\u306e\u30b5\u30de\u30ea\u304c\u51fa\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\t#include <stdio.h>\n\t#include <stdlib.h>\n\t#include <string.h>\n\t#include <curl/curl.h>\n\t#include <sys/types.h>\n\t#include <errno.h>\n\t#include <libxml/xmlerror.h>\n\t#include <libxml/parser.h>\n\t#include <libxml/tree.h>\n\t#include <libxml/xpath.h>\n\t\n\t#define MAX_BUF\t65536\n\t\n\tchar wr_buf[MAX_BUF+1];\n\tint  wr_index;\n\t\n\t#define PATH \"http://www.apple.com/jp/main/rss/hotnews/hotnews.rss\"\n\t\n\t/*\n\t * Write data callback function (called within the context of \n\t * curl_easy_perform.\n\t */\n\t\n\tsize_t write_data( void *buffer, size_t size, size_t nmemb, void *userp ) {\n\t    int segsize = size * nmemb;\n\t\n\t    if (wr_index + segsize > MAX_BUF) {\n\t        *(int *)userp = 1;\n\t        return 0;\n\t    }\n\t\n\t    memcpy( (void *)&wr_buf[wr_index], buffer, (size_t)segsize );\n\t    wr_index += segsize;\n\t    wr_buf[wr_index] = 0;\n\t    return segsize;\n\t}\n\t\n\t/*\n\t * Parse RSS and print summary.\n\t */\n\t\n\tint\n\tprint_rss(char* text) {\n\t    int     i;\n\t    int     size;\n\t    xmlDoc  *doc;\n\t    xmlXPathContextPtr  xpathCtx;\n\t    xmlXPathObjectPtr   xpathObj;\n\t    xmlNodeSetPtr       nodes;\n\t    xmlNode             *node;\n\t    xmlChar             *textcount;\n\t\n\t    /* parse an XML in-memory document and build a tree. */\n\t    doc = xmlReadMemory(text, strlen(text), \"noname.xml\", NULL, 0);\n\t    if (doc == NULL) {\n\t        perror(\"xmlReadFile\");\n\t        return -1;\n\t    }\n\t\n\t    /* Create a new xmlXPathContext */\n\t    xpathCtx = xmlXPathNewContext(doc);\n\t    if (xpathCtx == NULL) {\n\t        perror(\"xmlXPathNewContext\");\n\t        xmlFreeDoc(doc);\n\t        xmlCleanupParser();\n\t        return -1;\n\t    }\n\t\n\t    /* Get Node list of RSS channel */\n\t    xpathObj = xmlXPathEvalExpression(BAD_CAST \"/rss/channel\", xpathCtx);\n\t    nodes = xpathObj->nodesetval;\n\t    if (nodes == NULL) {\n\t        xmlXPathFreeContext(xpathCtx);\n\t        xmlFreeDoc(doc);\n\t        xmlCleanupParser();\n\t        return -1;\n\t    }\n\t    \n\t    /* Get and print Title of RSS Feed. */\n\t    size = nodes->nodeNr;\n\t    for (i = 0; i < size; i++) {\n\t        node = xmlFirstElementChild(nodes->nodeTab[i]);\n\t        if (node == NULL) {\n\t            continue;\n\t        }\n\t        for (; node; node = xmlNextElementSibling(node)) {\n\t            if (strcmp((char*)node->name, \"title\")) {\n\t                    continue;\n\t            }\n\t            textcount = xmlNodeGetContent(node);\n\t            if (textcount) {\n\t                printf(\"\\nTitle: %s\\n\\n\", textcount);\n\t                xmlFree(textcount);\n\t            }\n\t        }\n\t    }\n\t    xmlXPathFreeObject(xpathObj);\n\t\n\t    /* Get Node list of RSS items */\n\t    xpathObj = xmlXPathEvalExpression(BAD_CAST \"/rss/channel/item\", xpathCtx);\n\t    nodes = xpathObj->nodesetval;\n\t    if (nodes == NULL) {\n\t        xmlXPathFreeContext(xpathCtx);\n\t        xmlFreeDoc(doc);\n\t        xmlCleanupParser();\n\t        return -1;\n\t    }\n\t\n\t    /* Get and print title and link of each items. */\n\t    size = nodes->nodeNr;\n\t    for (i = 0; i < size; i++) {\n\t        node = xmlFirstElementChild(nodes->nodeTab[i]);\n\t        if (node == NULL) {\n\t            continue;\n\t        }\n\t        for (; node; node = xmlNextElementSibling(node)) {\n\t            if (strcmp((char*)node->name, \"title\") != 0 &&\n\t                strcmp((char*)node->name, \"link\") != 0) {\n\t                    continue;\n\t            }\n\t            textcount = xmlNodeGetContent(node);\n\t            if (textcount) {\n\t                printf(\" %s:\\t%s\\n\", node->name, textcount);\n\t                xmlFree(textcount);\n\t            }\n\t        }\n\t        printf(\"\\n\");\n\t    }\n\t\n\t    xmlXPathFreeObject(xpathObj);\n\t    xmlXPathFreeContext(xpathCtx);\n\t    xmlFreeDoc(doc);\n\t    xmlCleanupParser();\n\t    return 0;\n\t}\n\t\n\t/*\n\t * Simple curl application to read the rss feed from a Web site.\n\t */\n\t\n\tint main( void )\n\t{\n\t    CURL *curl;\n\t    CURLcode ret;\n\t    int  wr_error;\n\t\n\t    wr_error = 0;\n\t    wr_index = 0;\n\t\n\t    curl = curl_easy_init();\n\t    if (!curl) {\n\t        printf(\"couldn't init curl\\n\");\n\t        return 0;\n\t    }\n\t\n\t    curl_easy_setopt(curl, CURLOPT_URL, PATH);\n\t    curl_easy_setopt(curl, CURLOPT_WRITEDATA, (void *)&wr_error);\n\t    curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, write_data);\n\t\n\t    ret = curl_easy_perform(curl);\n\t    if ( ret == 0 ) {\n\t        //\n\t        print_rss(wr_buf);\n\t    } else {\n\t        printf( \"ret = %d (write_error = %d)\\n\", ret, wr_error );\n\t        curl_easy_cleanup(curl);\n\t        return 1;\n\t    }\n\t\n\t    curl_easy_cleanup(curl);\n\t    return 0;\n\t}\n\n\n#\u30b3\u30f3\u30d1\u30a4\u30eb\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u306f libcurl-devel \u3068 libxml2-devel \u304c\u5fc5\u8981\u306a\u306e\u3067\u4e8b\u524d\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059(CentOS\u306e\u5834\u5408)\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306f -I \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308blibxml2\u306e\u30d8\u30c3\u30c0\u30d5\u30a1\u30a4\u30eb\u306e\u6307\u5b9a\u3068 -l \u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n    $ cc -I/usr/include/libxml2 getrss.c -o getrss -lcurl -lxml2\n\n#\u5b9f\u884c\u7d50\u679c\n\n\u300c\u30a2\u30c3\u30d7\u30eb - \u30db\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\u300d\u306e\u30b5\u30de\u30ea\u304c\u8868\u793a\u3055\u308c\u307e\u3057\u305f\u3002\n\n\t$ ./getrss\n\t\n\tTitle: \u30a2\u30c3\u30d7\u30eb - \u30db\u30c3\u30c8\u30cb\u30e5\u30fc\u30b9\n\t\n\t title:\tApple\u3001\u611f\u5727\u30bf\u30c3\u30c1\u30c8\u30e9\u30c3\u30af\u30d1\u30c3\u30c9\u3092\u642d\u8f09\u3057\u305f15\u30a4\u30f3\u30c1\u306eMacBook Pro\u3001238,800\u5186\u306e\u65b0\u3057\u3044iMac Retina 5K\u30c7\u30a3\u30b9\u30d7\u30ec\u30a4\u30e2\u30c7\u30eb\u3092\u767a\u58f2\n\t link:\thttp://www.apple.com/jp/pr/library/2015/05/19Apple-Introduces-15-inch-MacBook-Pro-with-Force-Touch-Trackpad-New-1-999-iMac-with-Retina-5K-Display.html\n\t\n\t title:\t\u65e5\u672c\u90f5\u653f\u30b0\u30eb\u30fc\u30d7\u3001IBM\u3001Apple\u3001\u65e5\u672c\u306e\u9ad8\u9f62\u8005\u304c\u30b5\u30fc\u30d3\u30b9\u3092\u901a\u3058\u3066\u5bb6\u65cf\u30fb\u5730\u57df\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u30fc\u3068\u3064\u306a\u304c\u308b\u305f\u3081\u306b\u3001iPad\u3068\u5c02\u7528\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u63d0\u4f9b\n\t link:\thttp://www.apple.com/jp/pr/library/2015/04/30Japan-Post-Group-IBM-and-Apple-Deliver-iPads-and-Custom-Apps-to-Connect-Elderly-in-Japan-to-Services-Family-and-Community.html\n\t\n\t title:\tApple\u3001\u7b2c2\u56db\u534a\u671f\u306e\u696d\u7e3e\u3092\u767a\u8868\n\t link:\thttp://www.apple.com/jp/pr/library/2015/04/27Apple-Reports-Record-Second-Quarter-Results.html\n\t\n        \u30fb\n        \u30fb\n        \u30fb\n\n\t\n"}