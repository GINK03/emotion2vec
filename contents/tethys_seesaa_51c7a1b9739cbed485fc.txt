{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u524d\u56de\u3067\u3001UVM\u30c9\u30e9\u30a4\u30d0\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u307e\u3067\u884c\u304d\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u968e\u5c64\u304c\u3044\u308d\u3044\u308d\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3001\u4eca\u56de\u306fclass\u6bce\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u3067\u5206\u96e2\u5316\u3055\u308c\u305f\u3053\u3068\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u7bc4\u56f2\u3092\u610f\u8b58\u3057\u3066\u30b3\u30fc\u30c9\u3092\u4f5c\u3089\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002 \u524d\u56de\u3088\u308a\u3082\u4eca\u56de\u306e\u65b9\u304c\u30b9\u30c8\u30ec\u30b9\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002\n\n\u30b3\u30fc\u30c9\n\n\u5171\u901a\u30b3\u30fc\u30c9\u3001DUT\u3001Interface\n\u3053\u308c\u307e\u3067\u3068\u540c\u69d8\u3067\u3059\u3002\n\npackage\n\u30b3\u30fc\u30c9\u3092import\u3057\u305f\u308ainclude\u3057\u3066\u3001apb_pkg\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002uvm\u3068\u5171\u901a\u30b3\u30fc\u30c9\u3001\u5f8c\u8ff0\u3059\u308b\u30c9\u30e9\u30a4\u30d0\u3068\u30c6\u30b9\u30c8\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\u62e1\u5f35\u5b50\u306e\u89e3\u91c8\u304c\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fclass\u306e\u307f\u66f8\u304b\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092.svh\u3068\u3057\u307e\u3057\u305f\u3002\n\napb_pkg.sv\npackage apb_pkg;\n\n  import uvm_pkg::*;\n  `include \"uvm_macros.svh\"\n\n  `include \"common.sv\"\n  `include \"apb_drv.svh\"\n  `include \"test_lib.svh\"\n\nendpackage\n\n\n\n\u30c9\u30e9\u30a4\u30d0\n\u524d\u56de\u306etb.sv\u304b\u3089\u3001apb_drv\u30af\u30e9\u30b9\u3092\u79fb\u3057\u307e\u3059\u3002\n\napb_drv.svh\nclass apb_drv extends uvm_driver;\n  `uvm_component_utils(apb_drv)\n\n  virtual apb_t v_apb_bus;\n\n  function new(string name, uvm_component parent);\n    super.new(name, parent);\n  endfunction\n\n  function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    if(! uvm_config_db#(virtual apb_t)::get(this, \"\", \"v_apb_bus\", v_apb_bus))\n     `uvm_fatal(\"VIF instance error\", {\"virtual interface cannot get\", get_full_name(), \".v_apb_bus\"} );\n  endfunction\n\n  virtual task reset_phase(uvm_phase phase);\n\n    phase.raise_objection(this);\n\n    `uvm_info(\"apb_drv\", \"Reset Start\", UVM_MEDIUM)\n\n    this.init();\n\n    v_apb_bus.rst_n = '0;\n    repeat(5) @(posedge v_apb_bus.clk);\n    v_apb_bus.rst_n = '1;\n    repeat(5) @(posedge v_apb_bus.clk);\n\n    `uvm_info(\"apb_drv\", \"Reset End\", UVM_MEDIUM)\n\n    phase.drop_objection(this);\n\n  endtask\n\n    virtual task init();\n      v_apb_bus.addr   = '0;\n      v_apb_bus.sel    = '0;\n      v_apb_bus.enable = '0;\n      v_apb_bus.write  = '0;\n      v_apb_bus.wdata  = 'z;\n    endtask\n\n    virtual task do_write(int addr_i, data_t wdata_i);\n      @(posedge v_apb_bus.clk);\n\n      v_apb_bus.addr   <= #1 addr_i;\n      v_apb_bus.sel    <= #1 1'b1;\n      v_apb_bus.enable <= #1 1'b0;\n      v_apb_bus.write  <= #1 1'b1;\n      v_apb_bus.wdata  <= #1 wdata_i;\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.enable <= #1 1'b1;\n\n      @(posedge v_apb_bus.clk)\n\n      v_apb_bus.addr   <= #1 '0;\n      v_apb_bus.sel    <= #1 '0;\n      v_apb_bus.enable <= #1 '0;\n      v_apb_bus.write  <= #1 '0;\n      v_apb_bus.wdata  <= #1 'z;\n    endtask\n\n    virtual task do_read(int addr_i, output data_t rdata_o);\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.addr   <= #1 addr_i;\n      v_apb_bus.sel    <= #1 1'b1;\n      v_apb_bus.enable <= #1 1'b0;\n      v_apb_bus.write  <= #1 1'b0;\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.enable <= #1 1'b1;\n\n      @(posedge v_apb_bus.clk)\n      rdata_o = v_apb_bus.rdata;\n\n      v_apb_bus.addr   <= #1 '0;\n      v_apb_bus.sel    <= #1 '0;\n      v_apb_bus.enable <= #1 '0;\n      v_apb_bus.write  <= #1 '0;\n    endtask\n\nendclass\n\n\n\n\u30c6\u30b9\u30c8\nbase_test\u30af\u30e9\u30b9\u3092\u79fb\u3057\u3066\u3001\u8ffd\u8a18\u30fb\u524a\u9664\u3092\u4e00\u90e8\u5206\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u3001\u524a\u9664\u3057\u305f\u306e\u306f\u3001build_phase\u306b\u3042\u308b\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u767b\u9332(set)\u3067\u3059\u3002\u3053\u308c\u306f\u3001tb.sv\u306b\u79fb\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u8ffd\u52a0\u3057\u305f\u306e\u306f\u3001uvm_table_printer\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3057\u3001end_of_elaboration_phase\u30e1\u30bd\u30c3\u30c9(\u304a\u306a\u3058\u306a\u3044)\u3067\u3001\u30af\u30e9\u30b9\u968e\u5c64\u3092\u8868\u793a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u63a8\u5b9a\u3059\u308b\u9650\u308a\u3001\u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u304cbuild\u3057\u7d42\u308f\u308a\u3001\u30c6\u30b9\u30c8\u304c\u8d70\u308b\u524d\u306e\u30d5\u30a7\u30a4\u30ba\u3067\u5b9f\u884c\u3055\u308c\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u8868\u793a\u5185\u5bb9\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\u307e\u305f\u3001apb_drv\u30af\u30e9\u30b9\u304c\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u3001apb_drv\u30af\u30e9\u30b9\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308binterface\u90e8\u5206\u306e\u4fe1\u53f7\u540d\u306b\u306f\u3001drv.\u3068\u30a2\u30bf\u30de\u3092\u3064\u3051\u307e\u3059\u3002\n\ntest_lib.svh\nclass base_test extends uvm_test;\n  `uvm_component_utils(base_test)\n\n  apb_drv             drv;\n  uvm_table_printer  printer;\n\n  int  base_addr = 'h1_0000;\n\n  function new(string name, uvm_component parent);\n    super.new(name, parent);\n  endfunction\n\n  function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    drv = apb_drv::type_id::create(\"drv\", this);\n  endfunction\n\n  function void end_of_elaboration_phase(uvm_phase phase);\n    `uvm_info(get_type_name(), this.sprint(printer), UVM_MEDIUM);\n  endfunction\n\n  virtual task main_phase(uvm_phase phase);\n    data_t  wdata;\n    data_t  mem_t [int];\n\n    phase.raise_objection(this);\n\n    `uvm_info(\"base_test\", \"Start\", UVM_MEDIUM);\n\n    for (int i = 0; i < 'h100; i += 4) begin\n      drv.v_apb_bus.addr = base_addr + i;\n      wdata = $urandom_range(32'hFFFF, 0);\n\n      drv.do_write(drv.v_apb_bus.addr, wdata);\n      mem_t[drv.v_apb_bus.addr] = wdata;\n\n      `uvm_info(\"base_test\",\n        $sformatf(\"Write addr == 0x%8h, wdata == 0x%8h\", drv.v_apb_bus.addr, wdata),\n        UVM_MEDIUM);\n    end\n\n    for (int i = 0; i < 'h100; i += 4) begin\n      drv.v_apb_bus.addr = base_addr + i;\n      drv.do_read(drv.v_apb_bus.addr, drv.v_apb_bus.rdata);\n\n       if(drv.v_apb_bus.rdata != mem_t[drv.v_apb_bus.addr]) begin\n          `uvm_error(\"Conpare Error\",\n             $sformatf(\"Read addr == 0x%8h, exdata == 0x%8h, rdata == 0x%8h\", drv.v_apb_bus.addr, mem_t[drv.v_apb_bus.addr], drv.v_apb_bus.rdata));\n       end\n       else begin\n          `uvm_info(\"Compare Success\",\n             $sformatf(\"Read addr == 0x%8h, exdata == 0x%8h, rdata == 0x%8h\", drv.v_apb_bus.addr, mem_t[drv.v_apb_bus.addr], drv.v_apb_bus.rdata),\n             UVM_MEDIUM);\n       end\n\n    end\n\n    phase.drop_objection(this);\n  endtask\n\nendclass\n\n\n\ntb.sv(\u30c6\u30b9\u30c8\u30c8\u30c3\u30d7)\napb_pkg\u3092import\u3057\u3001base_test\u30af\u30e9\u30b9\u3067\u524a\u9664\u3057\u305f\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u767b\u9332\u3092inital\u90e8\u5206\u3067\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002set\u306e\u7b2c\u4e00\u5f15\u6570(uvm_top)\u306fUVM\u74b0\u5883\u3067\u306e\u30c6\u30b9\u30c8\u30c8\u30c3\u30d7\u968e\u5c64\u3092\u8868\u3059\u304a\u307e\u3058\u306a\u3044\u3067\u3059\u3002\n\u3044\u304b\u306b\u3082UVM\u3089\u3057\u3044\u5c11\u306a\u3044\u884c\u6570\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002\n\ntb.sv\nmodule tb();\n\n  import uvm_pkg::*;\n  import apb_pkg::*;\n\n  apb_t apb_bus();\n\n  apb_slave  #(.OFFSET(32'h0001_0000)) dut (.apb_slv(apb_bus), .*);\n\n  task clk_gen();\n    apb_bus.clk = 0;\n    forever\n      #5 apb_bus.clk = ~ apb_bus.clk;\n  endtask\n\n  initial begin\n\n    uvm_config_db #(virtual apb_t)::set(uvm_top, \"*\", \"v_apb_bus\", apb_bus);\n\n    fork\n      clk_gen();\n      run_test();\n    join_none\n\n  end\n\nendmodule\n\n\n\n\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\n\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u81ea\u5206\u306a\u308a\u306b\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nuvm_config_db #(virtual apb_t)::set(uvm_top, \"*\", \"v_apb_bus\", apb_bus);\nuvm_config_db#(virtual apb_t)::get(this, \"\", \"v_apb_bus\", v_apb_bus);\n\n\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fset\u3067\u8a2d\u5b9a\u3057\u3001get\u3067\u53d6\u5f97\u3059\u308b\u306e\u306f\u524d\u56de\u3082\u8ff0\u3079\u307e\u3057\u305f\u3002\n\u7b2c\u4e09\u5f15\u6570\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3001\u7b2c\u56db\u5f15\u6570\u306f\u4fe1\u53f7\u540d\u3092\u8868\u3057\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306f\u691c\u8a3c\u74b0\u5883\u5168\u4f53\u3067\u3001\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u7d10\u4ed8\u3051\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3088\u3063\u3066\u3001\"apb_bus\"\u3084\"v_\"\u3068\u3044\u3063\u305f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3067\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7b2c\u56db\u5f15\u6570\u306f\u305d\u306e\u30af\u30e9\u30b9\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u4fe1\u53f7\u540d\u3068\u306a\u308a\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3067\u7d10\u3064\u3051\u3066\u968e\u5c64\u3092\u307e\u305f\u304c\u3063\u305f\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 \u7b2c\u4e00\u3001\u7b2c\u4e8c\u5f15\u6570\u306f\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002 \u3053\u306e\u8fba\u306f\u3082\u3046\u5c11\u3057\u74b0\u5883\u3092\u7d44\u307f\u4e0a\u3052\u3066\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5b9f\u884c\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304cRun\u3059\u308b\u524d\u306b\u3001base_test\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3057\u305fend_of_elaboration_phase\u30e1\u30bd\u30c3\u30c9\u304c\u8d70\u308a\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30af\u30e9\u30b9\u69cb\u9020\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nName               Type                    Size  Value\n------------------------------------------------------\nuvm_test_top       base_test               -     @462 \n  drv              apb_drv                 -     @470 \n    rsp_port       uvm_analysis_port       -     @487 \n    seq_item_port  uvm_seq_item_pull_port  -     @478 \n------------------------------------------------------\n\n\u306a\u308b\u307b\u3069\u2026 \u5168\u304f\u308f\u304b\u3089\u3093\u3002\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b3\u30de\u30f3\u30c9\n`include\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3001+incdir\u3092\u4f7f\u3063\u3066\u3053\u3093\u306a\u611f\u3058\u3067\u3084\u308c\u3070\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002common.sv\u306f\u691c\u8a3c\u5bfe\u8c61(DUT)\u3067\u3082\u4f7f\u3046\u306e\u3067\u3001\u518d\u5ea6\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nVCS\u306e\u5834\u5408\n\nvcs.sh\nvcs \\\n    -R \\\n    -full64 \\\n    -sverilog \\\n    -ntb_opts uvm \\\n    +incdir+./ \\\n    apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv \\\n    +UVM_TESTNAME=base_test\n\n\n\nIncisive\u306e\u5834\u5408\n\nirun.sh\nirun \\\n     -64 \\\n     -uvm \\\n     +incdir+./ \\\n     apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv \\\n     +UVM_TESTNAME=base_test\n\n\n\nQuestaSim\u306e\u5834\u5408\n\nque.sh\nvlib work\nvlog +incdir+./ apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv\nvsim -64 -c tb -do \"run -all\" +UVM_TESTNAME=base_test \n\n\nISim\uff1f\u77e5\u3089\u306a\u3044\u5b50\u3067\u3059\u306d\u2026\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u3001SystemVerilog\u306eOOP\u90e8\u5206\u306e\u30b9\u30b3\u30fc\u30d7\u3084UVM\u72ec\u7279\u306e\u30d5\u30ed\u30fc\u3092\u8eab\u306b\u3064\u3051\u3066\u3044\u304b\u306a\u3044\u3068\u7d50\u69cb\u53b3\u3057\u3044\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002 \u3053\u3093\u306a\u3082\u3093\u672c\u5f53\u306b\u5f79\u306b\u7acb\u3064\u306e\u304b\u306f\u3055\u3066\u304a\u304d\u3001 \u30aa\u30fc\u30d7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u306e\u3067\u3001\u5143\u306e\u30b3\u30fc\u30c9\u3068\u7a81\u304d\u5408\u308f\u305b\u3064\u3064\u3001\u7406\u89e3\u3092\u6df1\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\u6b21\u56de\u306f\u3001\u30b7\u30fc\u30b1\u30f3\u30b5\u30fc\u3092\u767b\u5834\u3055\u305b\u3066\u3001\u30c9\u30e9\u30a4\u30d0\u3068\u3064\u306a\u3052\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n##\u306f\u3058\u3081\u306b\n[\u524d\u56de](http://qiita.com/tethys_seesaa/items/2620f8b635bc351f6fbb)\u3067\u3001UVM\u30c9\u30e9\u30a4\u30d0\u3092\u4f7f\u3063\u305f\u30c6\u30b9\u30c8\u307e\u3067\u884c\u304d\u307e\u3057\u305f\u3002\n\u30c6\u30b9\u30c8\u968e\u5c64\u304c\u3044\u308d\u3044\u308d\u9577\u304f\u306a\u3063\u3066\u304d\u305f\u306e\u3067\u3001\u4eca\u56de\u306fclass\u6bce\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u308a\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u5316\u3092\u884c\u3044\u307e\u3059\u3002\n\u30d5\u30a1\u30a4\u30eb\u3067\u5206\u96e2\u5316\u3055\u308c\u305f\u3053\u3068\u3067\u3001\u30af\u30e9\u30b9\u306e\u30b9\u30b3\u30fc\u30d7\u7bc4\u56f2\u3092\u610f\u8b58\u3057\u3066\u30b3\u30fc\u30c9\u3092\u4f5c\u3089\u306a\u304f\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002 **\u524d\u56de\u3088\u308a\u3082\u4eca\u56de\u306e\u65b9\u304c\u30b9\u30c8\u30ec\u30b9\u304c\u304b\u304b\u308a\u307e\u3057\u305f\u3002**\n\n##\u30b3\u30fc\u30c9\n###\u5171\u901a\u30b3\u30fc\u30c9\u3001DUT\u3001Interface\n[\u3053\u308c\u307e\u3067](http://qiita.com/tethys_seesaa/items/3f41d4780bdbf4a6f6b3#2-2)\u3068\u540c\u69d8\u3067\u3059\u3002\n\n###package\n\u30b3\u30fc\u30c9\u3092import\u3057\u305f\u308ainclude\u3057\u3066\u3001apb_pkg\u3068\u3044\u3046\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002uvm\u3068\u5171\u901a\u30b3\u30fc\u30c9\u3001\u5f8c\u8ff0\u3059\u308b\u30c9\u30e9\u30a4\u30d0\u3068\u30c6\u30b9\u30c8\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u3002\n\u62e1\u5f35\u5b50\u306e\u89e3\u91c8\u304c\u3044\u308d\u3044\u308d\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fclass\u306e\u307f\u66f8\u304b\u308c\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3092.svh\u3068\u3057\u307e\u3057\u305f\u3002\n\n```sv:apb_pkg.sv\npackage apb_pkg;\n\n  import uvm_pkg::*;\n  `include \"uvm_macros.svh\"\n\n  `include \"common.sv\"\n  `include \"apb_drv.svh\"\n  `include \"test_lib.svh\"\n\nendpackage\n```\n\n###\u30c9\u30e9\u30a4\u30d0\n[\u524d\u56de\u306etb.sv](http://qiita.com/tethys_seesaa/items/2620f8b635bc351f6fbb#3-2)\u304b\u3089\u3001apb_drv\u30af\u30e9\u30b9\u3092\u79fb\u3057\u307e\u3059\u3002\n\n```sv:apb_drv.svh\nclass apb_drv extends uvm_driver;\n  `uvm_component_utils(apb_drv)\n\n  virtual apb_t v_apb_bus;\n\n  function new(string name, uvm_component parent);\n    super.new(name, parent);\n  endfunction\n\n  function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    if(! uvm_config_db#(virtual apb_t)::get(this, \"\", \"v_apb_bus\", v_apb_bus))\n     `uvm_fatal(\"VIF instance error\", {\"virtual interface cannot get\", get_full_name(), \".v_apb_bus\"} );\n  endfunction\n\n  virtual task reset_phase(uvm_phase phase);\n\n    phase.raise_objection(this);\n\n    `uvm_info(\"apb_drv\", \"Reset Start\", UVM_MEDIUM)\n\n    this.init();\n\n    v_apb_bus.rst_n = '0;\n    repeat(5) @(posedge v_apb_bus.clk);\n    v_apb_bus.rst_n = '1;\n    repeat(5) @(posedge v_apb_bus.clk);\n\n    `uvm_info(\"apb_drv\", \"Reset End\", UVM_MEDIUM)\n\n    phase.drop_objection(this);\n\n  endtask\n\n    virtual task init();\n      v_apb_bus.addr   = '0;\n      v_apb_bus.sel    = '0;\n      v_apb_bus.enable = '0;\n      v_apb_bus.write  = '0;\n      v_apb_bus.wdata  = 'z;\n    endtask\n\n    virtual task do_write(int addr_i, data_t wdata_i);\n      @(posedge v_apb_bus.clk);\n\n      v_apb_bus.addr   <= #1 addr_i;\n      v_apb_bus.sel    <= #1 1'b1;\n      v_apb_bus.enable <= #1 1'b0;\n      v_apb_bus.write  <= #1 1'b1;\n      v_apb_bus.wdata  <= #1 wdata_i;\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.enable <= #1 1'b1;\n\n      @(posedge v_apb_bus.clk)\n\n      v_apb_bus.addr   <= #1 '0;\n      v_apb_bus.sel    <= #1 '0;\n      v_apb_bus.enable <= #1 '0;\n      v_apb_bus.write  <= #1 '0;\n      v_apb_bus.wdata  <= #1 'z;\n    endtask\n\n    virtual task do_read(int addr_i, output data_t rdata_o);\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.addr   <= #1 addr_i;\n      v_apb_bus.sel    <= #1 1'b1;\n      v_apb_bus.enable <= #1 1'b0;\n      v_apb_bus.write  <= #1 1'b0;\n\n      @(posedge v_apb_bus.clk)\n      v_apb_bus.enable <= #1 1'b1;\n\n      @(posedge v_apb_bus.clk)\n      rdata_o = v_apb_bus.rdata;\n\n      v_apb_bus.addr   <= #1 '0;\n      v_apb_bus.sel    <= #1 '0;\n      v_apb_bus.enable <= #1 '0;\n      v_apb_bus.write  <= #1 '0;\n    endtask\n\nendclass\n```\n\n###\u30c6\u30b9\u30c8\nbase_test\u30af\u30e9\u30b9\u3092\u79fb\u3057\u3066\u3001\u8ffd\u8a18\u30fb\u524a\u9664\u3092\u4e00\u90e8\u5206\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u3001\u524a\u9664\u3057\u305f\u306e\u306f\u3001build_phase\u306b\u3042\u308b\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u767b\u9332(set)\u3067\u3059\u3002\u3053\u308c\u306f\u3001tb.sv\u306b\u79fb\u3059\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u8ffd\u52a0\u3057\u305f\u306e\u306f\u3001uvm_table_printer\u30af\u30e9\u30b9\u3092\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3057\u3001end_of_elaboration_phase\u30e1\u30bd\u30c3\u30c9(\u304a\u306a\u3058\u306a\u3044)\u3067\u3001\u30af\u30e9\u30b9\u968e\u5c64\u3092\u8868\u793a\u3055\u305b\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u540d\u3067\u63a8\u5b9a\u3059\u308b\u9650\u308a\u3001\u30c6\u30b9\u30c8\u30e2\u30b8\u30e5\u30fc\u30eb\u304cbuild\u3057\u7d42\u308f\u308a\u3001\u30c6\u30b9\u30c8\u304c\u8d70\u308b\u524d\u306e\u30d5\u30a7\u30a4\u30ba\u3067\u5b9f\u884c\u3055\u308c\u308b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u8868\u793a\u5185\u5bb9\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n\u307e\u305f\u3001apb_drv\u30af\u30e9\u30b9\u304c\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u79fb\u52d5\u3057\u305f\u306e\u3067\u3001apb_drv\u30af\u30e9\u30b9\u3067\u547c\u3073\u51fa\u3057\u3066\u3044\u308binterface\u90e8\u5206\u306e\u4fe1\u53f7\u540d\u306b\u306f\u3001drv.\u3068\u30a2\u30bf\u30de\u3092\u3064\u3051\u307e\u3059\u3002\n\n```sv:test_lib.svh\nclass base_test extends uvm_test;\n  `uvm_component_utils(base_test)\n\n  apb_drv             drv;\n  uvm_table_printer  printer;\n\n  int  base_addr = 'h1_0000;\n\n  function new(string name, uvm_component parent);\n    super.new(name, parent);\n  endfunction\n\n  function void build_phase(uvm_phase phase);\n    super.build_phase(phase);\n    drv = apb_drv::type_id::create(\"drv\", this);\n  endfunction\n\n  function void end_of_elaboration_phase(uvm_phase phase);\n    `uvm_info(get_type_name(), this.sprint(printer), UVM_MEDIUM);\n  endfunction\n\n  virtual task main_phase(uvm_phase phase);\n    data_t  wdata;\n    data_t  mem_t [int];\n\n    phase.raise_objection(this);\n\n    `uvm_info(\"base_test\", \"Start\", UVM_MEDIUM);\n\n    for (int i = 0; i < 'h100; i += 4) begin\n      drv.v_apb_bus.addr = base_addr + i;\n      wdata = $urandom_range(32'hFFFF, 0);\n\n      drv.do_write(drv.v_apb_bus.addr, wdata);\n      mem_t[drv.v_apb_bus.addr] = wdata;\n\n      `uvm_info(\"base_test\",\n        $sformatf(\"Write addr == 0x%8h, wdata == 0x%8h\", drv.v_apb_bus.addr, wdata),\n        UVM_MEDIUM);\n    end\n\n    for (int i = 0; i < 'h100; i += 4) begin\n      drv.v_apb_bus.addr = base_addr + i;\n      drv.do_read(drv.v_apb_bus.addr, drv.v_apb_bus.rdata);\n\n       if(drv.v_apb_bus.rdata != mem_t[drv.v_apb_bus.addr]) begin\n          `uvm_error(\"Conpare Error\",\n             $sformatf(\"Read addr == 0x%8h, exdata == 0x%8h, rdata == 0x%8h\", drv.v_apb_bus.addr, mem_t[drv.v_apb_bus.addr], drv.v_apb_bus.rdata));\n       end\n       else begin\n          `uvm_info(\"Compare Success\",\n             $sformatf(\"Read addr == 0x%8h, exdata == 0x%8h, rdata == 0x%8h\", drv.v_apb_bus.addr, mem_t[drv.v_apb_bus.addr], drv.v_apb_bus.rdata),\n             UVM_MEDIUM);\n       end\n\n    end\n\n    phase.drop_objection(this);\n  endtask\n\nendclass\n```\n\n###tb.sv(\u30c6\u30b9\u30c8\u30c8\u30c3\u30d7)\napb_pkg\u3092import\u3057\u3001base_test\u30af\u30e9\u30b9\u3067\u524a\u9664\u3057\u305f\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u767b\u9332\u3092inital\u90e8\u5206\u3067\u5b9f\u65bd\u3057\u3066\u3044\u307e\u3059\u3002set\u306e\u7b2c\u4e00\u5f15\u6570(uvm_top)\u306fUVM\u74b0\u5883\u3067\u306e\u30c6\u30b9\u30c8\u30c8\u30c3\u30d7\u968e\u5c64\u3092\u8868\u3059\u304a\u307e\u3058\u306a\u3044\u3067\u3059\u3002\n **\u3044\u304b\u306b\u3082UVM\u3089\u3057\u3044\u5c11\u306a\u3044\u884c\u6570\u306b\u306a\u308a\u307e\u3057\u305f\u306d\u3002**\n\n```sv:tb.sv\nmodule tb();\n\n  import uvm_pkg::*;\n  import apb_pkg::*;\n\n  apb_t apb_bus();\n\n  apb_slave  #(.OFFSET(32'h0001_0000)) dut (.apb_slv(apb_bus), .*);\n\n  task clk_gen();\n    apb_bus.clk = 0;\n    forever\n      #5 apb_bus.clk = ~ apb_bus.clk;\n  endtask\n\n  initial begin\n\n    uvm_config_db #(virtual apb_t)::set(uvm_top, \"*\", \"v_apb_bus\", apb_bus);\n\n    fork\n      clk_gen();\n      run_test();\n    join_none\n\n  end\n\nendmodule\n```\n\n##\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u3064\u3044\u3066\n\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306b\u3064\u3044\u3066\u81ea\u5206\u306a\u308a\u306b\u6574\u7406\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```sv\nuvm_config_db #(virtual apb_t)::set(uvm_top, \"*\", \"v_apb_bus\", apb_bus);\nuvm_config_db#(virtual apb_t)::get(this, \"\", \"v_apb_bus\", v_apb_bus);\n```\n\n\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306fset\u3067\u8a2d\u5b9a\u3057\u3001get\u3067\u53d6\u5f97\u3059\u308b\u306e\u306f\u524d\u56de\u3082\u8ff0\u3079\u307e\u3057\u305f\u3002\n\n\u7b2c\u4e09\u5f15\u6570\u306f\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3001\u7b2c\u56db\u5f15\u6570\u306f\u4fe1\u53f7\u540d\u3092\u8868\u3057\u307e\u3059\u3002\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u306f\u691c\u8a3c\u74b0\u5883\u5168\u4f53\u3067\u3001\u30b3\u30f3\u30d5\u30a3\u30ae\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3068\u7d10\u4ed8\u3051\u308b\u305f\u3081\u306b\u5229\u7528\u3055\u308c\u308b\u306e\u3067\u3001\u6587\u5b57\u5217\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3088\u3063\u3066\u3001\"*apb_bus\"\u3084\"v_*\"\u3068\u3044\u3063\u305f\u30ef\u30a4\u30eb\u30c9\u30ab\u30fc\u30c9\u3067\u30de\u30c3\u30c1\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u7b2c\u56db\u5f15\u6570\u306f\u305d\u306e\u30af\u30e9\u30b9\u30fb\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u3067\u4f7f\u308f\u308c\u3066\u3044\u308b\u4fe1\u53f7\u540d\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3064\u307e\u308a\u3001\u30d5\u30a3\u30fc\u30eb\u30c9\u540d\u3067\u7d10\u3064\u3051\u3066\u968e\u5c64\u3092\u307e\u305f\u304c\u3063\u305f\u30b3\u30f3\u30d5\u30a3\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u884c\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002 **\u7b2c\u4e00\u3001\u7b2c\u4e8c\u5f15\u6570\u306f\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002** \u3053\u306e\u8fba\u306f\u3082\u3046\u5c11\u3057\u74b0\u5883\u3092\u7d44\u307f\u4e0a\u3052\u3066\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n##\u30c6\u30b9\u30c8\u5b9f\u884c\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u304cRun\u3059\u308b\u524d\u306b\u3001base_test\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3057\u305fend_of_elaboration_phase\u30e1\u30bd\u30c3\u30c9\u304c\u8d70\u308a\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u611f\u3058\u3067\u30af\u30e9\u30b9\u69cb\u9020\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```\nName               Type                    Size  Value\n------------------------------------------------------\nuvm_test_top       base_test               -     @462 \n  drv              apb_drv                 -     @470 \n    rsp_port       uvm_analysis_port       -     @487 \n    seq_item_port  uvm_seq_item_pull_port  -     @478 \n------------------------------------------------------\n```\n\n\u306a\u308b\u307b\u3069\u2026 **\u5168\u304f\u308f\u304b\u3089\u3093\u3002**\n\n##\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u30b3\u30de\u30f3\u30c9\n`include\u304c\u51fa\u3066\u304d\u305f\u306e\u3067\u3001+incdir\u3092\u4f7f\u3063\u3066\u3053\u3093\u306a\u611f\u3058\u3067\u3084\u308c\u3070\u52d5\u304f\u3068\u601d\u3044\u307e\u3059\u3002common.sv\u306f\u691c\u8a3c\u5bfe\u8c61(DUT)\u3067\u3082\u4f7f\u3046\u306e\u3067\u3001\u518d\u5ea6\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n###VCS\u306e\u5834\u5408\n```sh:vcs.sh\nvcs \\\n    -R \\\n    -full64 \\\n    -sverilog \\\n    -ntb_opts uvm \\\n    +incdir+./ \\\n    apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv \\\n    +UVM_TESTNAME=base_test\n```\n\n###Incisive\u306e\u5834\u5408\n\n```sh:irun.sh\nirun \\\n     -64 \\\n     -uvm \\\n     +incdir+./ \\\n     apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv \\\n     +UVM_TESTNAME=base_test\n```\n\n###QuestaSim\u306e\u5834\u5408\n```sh:que.sh\nvlib work\nvlog +incdir+./ apb_pkg.sv common.sv apbif.sv apb_slave.sv tb.sv\nvsim -64 -c tb -do \"run -all\" +UVM_TESTNAME=base_test \n```\n\nISim\uff1f\u77e5\u3089\u306a\u3044\u5b50\u3067\u3059\u306d\u2026\u3002\n\n##\u304a\u308f\u308a\u306b\n\u4eca\u56de\u3001SystemVerilog\u306eOOP\u90e8\u5206\u306e\u30b9\u30b3\u30fc\u30d7\u3084UVM\u72ec\u7279\u306e\u30d5\u30ed\u30fc\u3092\u8eab\u306b\u3064\u3051\u3066\u3044\u304b\u306a\u3044\u3068\u7d50\u69cb\u53b3\u3057\u3044\u3068\u3053\u308d\u304c\u3042\u308a\u307e\u3057\u305f\u3002 ~~\u3053\u3093\u306a\u3082\u3093\u672c\u5f53\u306b\u5f79\u306b\u7acb\u3064\u306e\u304b\u306f\u3055\u3066\u304a\u304d\u3001~~ \u30aa\u30fc\u30d7\u30f3\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u306e\u3067\u3001\u5143\u306e\u30b3\u30fc\u30c9\u3068\u7a81\u304d\u5408\u308f\u305b\u3064\u3064\u3001\u7406\u89e3\u3092\u6df1\u3081\u308b\u5fc5\u8981\u304c\u3042\u308a\u305d\u3046\u3067\u3059\u3002\n\u6b21\u56de\u306f\u3001\u30b7\u30fc\u30b1\u30f3\u30b5\u30fc\u3092\u767b\u5834\u3055\u305b\u3066\u3001\u30c9\u30e9\u30a4\u30d0\u3068\u3064\u306a\u3052\u3066\u307f\u3088\u3046\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["SystemVerilog2012", "Verilog", "HDL", "UVM1.1d"]}