{"tags": ["Julia", "\u6570\u5024\u8a08\u7b97", "HPC", "BLAS", "\u884c\u5217"], "context": "\u3000Julia \u3067\u306f\u3001\u540c\u3058\u95a2\u6570\u306e\u8b58\u5225\u5b50(\u540d\u524d)\u306b\u3001\u8907\u6570\u306e\u578b\u306e\u7d44\u5408\u305b\u3092\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u547c\u3073\u51fa\u3057\u6642\u306e\u5f15\u6570\u306e\u578b\u306e\u7d44\u5408\u305b\u3067\u3001\u7279\u5b9a\u306e\u95a2\u6570\u3092\u9078\u3093\u3067\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u304c multiple dispatch \u3067\u3059\u3002\u540c\u3058\u7b97\u6cd5(\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)\u3092\u3001\u7570\u306a\u308b\u578b\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3059\u308b\u969b\u3001multiple dispatch \u3092\u4f7f\u3046\u3068\u3001\u7c21\u6f54\u306b\u8a18\u8ff0(\u7b97\u8b5c)\u3067\u304d\u307e\u3059\u3002\n\u3000\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u3092\u542b\u3080\u6570\u5024\u8a08\u7b97\u3067\u3001\u305d\u306e\u69d8\u5b50\u3092\u89b3\u5bdf\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u554f\u984c\n\u3000\u884c\u5217 HH \u3068\u30d9\u30af\u30c8\u30eb v1v_1 \u304c\u3042\u308a\u307e\u3059\u3002\u30d9\u30af\u30c8\u30eb\u5217 vi{v}_{i} \u3092\u3001\u6b21\u306e\u6f38\u5316\u5f0f\u3092\u7528\u3044\u3066\u767a\u751f\u3055\u305b\u308b\u3068\u3044\u3046\u554f\u984c\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\\begin{align}\n{v}_{2}   & = H {v}_{1}, \\\\\n{v}_{i+2} & = H {v}_{i+1} + {v}_{i} \\quad i=1,2,3,\\ldots\n\\end{align}\nv2=Hv1,vi+2=Hvi+1+vii=1,2,3,\u2026{\\begin{align}\n{v}_{2}   & = H {v}_{1}, \\\\\n{v}_{i+2} & = H {v}_{i+1} + {v}_{i} \\quad i=1,2,3,\\ldots\n\\end{align}\n}\n\u3000\uff13\u3064\u306e\u30d9\u30af\u30c8\u30eb p,q,rp, q, r \u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u5de1\u56de\u3057\u3066\u3001\u6f38\u5316\u5f0f\u3092\uff13\u56de\u8a08\u7b97\u3057\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u30d9\u30af\u30c8\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u51e6\u7406\u304c\u4e0d\u8981\u3068\u306a\u308a\u307e\u3059\u3002\nr = H q + p, \\\\\nq = H p + r, \\\\\np = H r + q\nr=Hq+p,q=Hp+r,p=Hr+q{r = H q + p, \\\\\nq = H p + r, \\\\\np = H r + q\n}\n\u3000\u521d\u671f\u30d9\u30af\u30c8\u30eb p (=v1= v_1) \u304b\u3089\u3001\u30d9\u30af\u30c8\u30eb q(=v2= v_2) , r (=v3= v_3) \u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\u66f4\u306b\u3001\u4e0a\u306e\uff12\u30b9\u30c6\u30c3\u30d7\u3092\u9069\u7528\u3057\u3066\u3001\u6700\u5f8c\u306b\u5f97\u3089\u308c\u305f\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\u95a2\u6570 proceed \u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u53c2\u8003\u306e\u305f\u3081\u3001\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u8a08\u7b97\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3059\u3002\nfunction proceed(h,p)\n  q = h * p\n  r = h * q + p\n  q = h * p + r\n  p = h * r + q\n  #\n  r = h * q + p\n  q = h * p + r\n  @time p = h * r + q\n  return p\nend\n\n\u3000\u95a2\u6570 proceed \u306f\u3001\u5f15\u6570\u306e\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044 \"generic\" \u306a\u95a2\u6570\u3067\u3059\u3002\njulia> methods(proceed)\n# 1 method for generic function \"proceed\":\nproceed(h, p) at REPL[1]:2\n\n\u3000\u95a2\u6570 proceed \u306b\u542b\u307e\u308c\u308b\u8a08\u7b97\u306e\u3046\u3061\u3001\u7a4d h * p \u3068\u548c p + q \u306f\u3001\u5f15\u6570\u306e\u578b\u304c\u672a\u5b9a\u3067\u3059\u3002proceed \u306e\u547c\u3073\u51fa\u3057\u6642\u306b h \u3068  p (\u306e\u578b)\u304c\u5177\u4f53\u7684\u306b\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u308b\u624b\u7b48\u3067\u3059\u3002\n\n\u5bc6\u884c\u5217\u3067\n\u3000\u884c\u5217 HH \u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u975e\u5bfe\u79f0\u884c\u5217\u3092\u8003\u3048\u307e\u3059\u3002\u4f55\u3082\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u8981\u7d20\u306f\u96f6\u3067\u3059\u3002\u975e\u96f6\u8981\u7d20\u306f\u3001\u5bfe\u89d2\u8981\u7d20\u3068\u3001\u4e0a\u4e0b\u306b\u96a3\u308a\u5408\u3046\u8981\u7d20\u3067\u3059\u3002\nH = \\left[\n\\begin{array}{ccccc}\n4  & -2 &     & &  \\\\\n-1 &  4 &  -2 & &  \\\\\n   & -1 &   4 & \\ddots &  \\\\\n   &    &  \\ddots & \\ddots & -2 \\\\\n   &    &     & -1 & 4\n\\end{array}\n\\right]\nH=[4\u22122\u221214\u22122\u221214\u22f1\u22f1\u22f1\u22122\u221214]{H = \\left[\n\\begin{array}{ccccc}\n4  & -2 &     & &  \\\\\n-1 &  4 &  -2 & &  \\\\\n   & -1 &   4 & \\ddots &  \\\\\n   &    &  \\ddots & \\ddots & -2 \\\\\n   &    &     & -1 & 4\n\\end{array}\n\\right]\n}\n\u3000\u521d\u671f\u30d9\u30af\u30c8\u30eb p (=v1= v_1) \u306f\u3001\u5168\u8981\u7d20\u304c 1 \u306e\u30d9\u30af\u30c8\u30eb\u3068\u3057\u307e\u3059\u3002\n\u3000Julia \u6a19\u6e96\u306e\u591a\u6b21\u5143\u914d\u5217 Array{Float64,N} (N=1, 2) \u3092\u7528\u3044\u3066\u3001h \u3068 p \u3092\u78ba\u4fdd\u30fb\u8a08\u7b97\u3057\u307e\u3059\u3002\u8981\u7d20\u6570\u306f nn=1000 \u3068\u3057\u307e\u3057\u305f\u3002\nnn = 1000\npp0=ones(nn)\n\nhh1=eye(nn)*4.0\nfor i in 1:nn-1\n  hh1[i,i+1]=-2.0\n  hh1[i+1,i]=-1.0\nend\n\n\u3000\u884c\u5217\u30d9\u30af\u30c8\u30eb\u7a4d (*)\u3001\u30d9\u30af\u30c8\u30eb\u540c\u58eb\u306e\u548c (+) \u306f Julia \u6a19\u6e96\u306e\u6f14\u7b97\u3092\u7528\u3044\u307e\u3059\u304b\u3089\u3001\u3053\u308c\u4ee5\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u8981\u3067\u3059\u3002\u3067\u306f\u3001proceed \u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002\njulia> pp1=copy(pp0)\n       rr1=proceed(hh1,pp1)\n  0.000633 seconds (4 allocations: 15.906 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n\n\n\u758e\u884c\u5217\u3067\n\u3000\u96f6\u8981\u7d20\u3092\u591a\u304f\u542b\u3080\u884c\u5217\u3092\u758e\u884c\u5217 (sparse matrix)\u3068\u3044\u3044\u307e\u3059\u3002\n\u3000Julia \u306b\u306f Compressed Sparse Columns (CSC) \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u683c\u7d0d\u3059\u308b\u758e\u884c\u5217 SparseMatrixCSC \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002CSC\u5f62\u5f0f\u306f\u3001\u3042\u3089\u3086\u308b\u5f62\u306e\u758e\u884c\u5217\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u512a\u308c\u3082\u306e\u3067\u3059\u304c\u3001\u4e00\u304b\u3089\u4f5c\u308b\u306e\u306f\u9762\u5012\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3000\u3053\u3053\u3067\u306f\u3001\u96db\u5f62\u3068\u306a\u308b\u5bc6\u884c\u5217 hh1 \u304b\u3089\u3001sparse\u95a2\u6570\u3092\u7528\u3044\u3066\u758e\u884c\u5217\u3092\u751f\u6210\u3057\u307e\u3059\u3002\njulia> hh2=sparse(hh1)\n1000\u00d71000 sparse matrix with 2998 Float64 nonzero entries:\n    [1   ,    1]  =  4.0\n    \u22ee  \n\n\u3000(2998 = nn*3 - 2) \u500b\u306e\u975e\u96f6\u8981\u7d20\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\u6b63\u3057\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u306d\u3002\n\u3000SparseMatrixCSC\u578b\u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u7a4d (*) \u306f\u5b9a\u7fa9\u6e08\u307f\u306a\u306e\u3067\u3001\u8ffd\u52a0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u8981\u3067\u3059\u3002\u3067\u306f\u3001\u5b9f\u884c\u3002\njulia> pp2=copy(pp0)\n       rr2=proceed(hh2,pp2)\n  0.000010 seconds (4 allocations: 15.906 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n\n\u3000\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u306e\u8a08\u7b97\u6642\u9593\u304c\u4e00\u6841\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\njulia> norm(rr2 - rr1)\n0.0\n\n\n\u81ea\u4f5c\u306e\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u3067\n\u3000\u4eca\u56de\u306e HH \u306e\u3088\u3046\u306b\u300c\u5bfe\u89d2\u8981\u7d20\u3068\u3001\u4e0a\u4e0b\u306b\u96a3\u308a\u5408\u3046\u8981\u7d20\u304c\u3001\u975e\u96f6\u3067\u3042\u308b\u884c\u5217\u300d\u3092\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217 (tridiagonal matrix)\u3068\u3044\u3044\u307e\u3059\u3002Julia \u306b\u3082\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u3092\u6271\u3046 Tridiagonal \u578b\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u578b\u3092\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000MySparseMatrix\u578b\u306f\u3001\u975e\u96f6\u8981\u7d20\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217 el \u3092\u5185\u5305\u3057\u307e\u3059\u3002 el \u306e\u4e2d\u8eab\u306f\u3001\u5c06\u6765\u8907\u7d20\u6570\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001Number \u578b\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nabstract MyAbstractSparseMatrix{Tv}\n\ntype MySparseMatrix{Tv<:Number} <: MyAbstractSparseMatrix{Tv}\n  el :: Array{Tv,2}\nend\n\n\u3000el\u306e\u5bf8\u6cd5\u306f [n,3] \u3068\u3057\u307e\u3059\u3002\u884c\u5217 a \u306e\u5bfe\u89d2\u8981\u7d20\u30fb\u975e\u5bfe\u89d2\u8981\u7d20\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002Julia \u3067\u306f\u3001\u7b2c1\u8ef8(\u6700\u521d\u306e\u6dfb\u5b57)\u304c\u30e1\u30e2\u30ea\u683c\u7d0d\u9806\u3067\u3059\u3002\n\\begin{align}\n\\ell_{j,1} & = a_{j,j-1} \\quad j =2,\\ldots, n   \\\\\n\\ell_{j,2} & = a_{j,j}   \\quad j =1,\\ldots, n   \\\\\n\\ell_{j,3} & = a_{j,j+1} \\quad j =1,\\ldots, n-1\n\\end{align}\n\u2113j,1=aj,j\u22121j=2,\u2026,n\u2113j,2=aj,jj=1,\u2026,n\u2113j,3=aj,j+1j=1,\u2026,n\u22121{\\begin{align}\n\\ell_{j,1} & = a_{j,j-1} \\quad j =2,\\ldots, n   \\\\\n\\ell_{j,2} & = a_{j,j}   \\quad j =1,\\ldots, n   \\\\\n\\ell_{j,3} & = a_{j,j+1} \\quad j =1,\\ldots, n-1\n\\end{align}\n}\n\u3000MySparseMatrix\u578b\u884c\u5217 a\u3068 Array{T,1}\u578b\u30d9\u30af\u30c8\u30eb b \u3068\u306e\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 (*) \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 Base.(*) \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304b\u3089\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\nimport Base: (*)\n\nfunction (*){T}(a::MySparseMatrix{T},b::Array{T,1})\n  n=size(b,1)\n  c=zeros(b)\n    c[1]=                   a.el[1,2]*b[1] + a.el[1,3]*b[1+1]\n  for i in 2:n-1\n    c[i]=a.el[i,1]*b[i-1] + a.el[i,2]*b[i] + a.el[i,3]*b[i+1]\n  end\n    c[n]=a.el[n,1]*b[n-1] + a.el[n,2]*b[n]\n  return c\nend\n\n\u3000\u5bc6\u884c\u5217\u304b\u3089 MySparseMatrix \u578b\u306e\u758e\u884c\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570mySparseMatrixFromDense \u3092\u4f5c\u308a\u307e\u3059\u3002\nfunction mySparseMatrixFromDense(aa)\n  n=size(aa,1)\n  el=Array(typeof(aa[1,1]),n,3)\n  for i in 1:n\n    el[i,2]=aa[i,i]\n  end\n    el[1,3]=aa[1,1+1]\n  for i in 2:n-1\n    el[i,1]=aa[i,i-1]\n    el[i,3]=aa[i,i+1]\n  end\n    el[n,1]=aa[n,n-1]\n  return MySparseMatrix(el)\nend\n\n\u3000\u3067\u306f\u3001\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\njulia> hh3=mySparseMatrixFromDense(hh1)\nMySparseMatrix{Float64}([0.0 4.0 -2.0; -1.0 4.0 -2.0; \u2026 ; -1.0 4.0 -2.0; -1.0 4.0 7.63918e-313])\n\njulia> hh3.el\n1000\u00d73 Array{Float64,2}:\n  0.0  4.0  -2.0         \n -1.0  4.0  -2.0         \n -1.0  4.0  -2.0            \n  \u22ee                            \n -1.0  4.0  -2.0         \n -1.0  4.0  -2.0         \n -1.0  4.0   7.63918e-313\n\n\njulia> pp3=copy(pp0)\n       rr3=proceed(hh3,pp3)\n  0.000007 seconds (3 allocations: 15.891 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n\n\u3000\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u306e\u8a08\u7b97\u6642\u9593\u304c\u3001\u66f4\u306b\u4e00\u6841\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\njulia> norm(rr3 - rr1)\n0.0\n\n\n\u81ea\u4f5c\u306e\u4e09\u91cd\u5bfe\u89d2\u758e\u884c\u5217\u3092 OffsetArrays\u3067\n\u3000\u4e0a\u306e\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u306e\u8a08\u7b97\u3067\u306f\u3001\u6dfb\u5b57\u304c 0 \u3084 n+1 \u3068\u306a\u308b\u5834\u5408\u3092 for\u30eb\u30fc\u30d7\u304b\u3089\u5225\u6271\u3044\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3001\u3053\u308c\u3089\u306e\u5834\u5408\u304c\u7d50\u679c\u306b\u5f71\u97ff\u3057\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3067\u304d\u308b\u306a\u3089\u3001\u5225\u6271\u3044\u3057\u306a\u3044\u3067 for\u30eb\u30fc\u30d7\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30d9\u30af\u30c8\u30eb\u578b\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u7b97\u8b5c\u3067\u3001\u3088\u304f\u4f7f\u308f\u308c\u305f\u624b\u6cd5\u3067\u3059\u3002\n\u3000Julia 0.5 \u4ee5\u964d\u3067\u306f\u3001\u914d\u5217\u6dfb\u5b57\u3092 1\u4ee5\u5916\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u5b9f\u88c5\u3055\u308c\u307e\u3057\u305f\u3002\u62d9\u6587 Qiita\u8a18\u4e8b \u300c[Julia 0.5] \u914d\u5217\u6dfb\u5b57\u30920\u304b\u3089\u6570\u3048\u308b\u300d \u3067\u7d39\u4ecb\u3057\u305f OffsetArrays \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u3044\u3066\u307f\u307e\u3059\n\u3000\u975e\u96f6\u8981\u7d20\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217 el \u3092 OffsetArray \u578b\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nusing OffsetArrays\n\nimmutable MyOffsetSparseMatrix{Tv<:Number} <: MyAbstractSparseMatrix{Tv}\n  el :: OffsetArray{Tv,2}\nend\n\n\u3000el\u306e\u6dfb\u5b57\u7bc4\u56f2\u306f [0:n+1,-1:1] \u3068\u3057\u307e\u3059\u3002\u5bfe\u89d2\u8981\u7d20\u30fb\u975e\u5bfe\u89d2\u8981\u7d20\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\\begin{align}\n\\ell_{j,-1} & = a_{j,j-1}, \\quad j=2,\\ldots, n   \\\\\n\\ell_{j, 0} & = a_{j,j},   \\quad j=1,\\ldots, n   \\\\\n\\ell_{j, 1} & = a_{j,j+1}, \\quad j=1,\\ldots, n-1\n\\end{align}\n\u2113j,\u22121=aj,j\u22121,j=2,\u2026,n\u2113j,0=aj,j,j=1,\u2026,n\u2113j,1=aj,j+1,j=1,\u2026,n\u22121{\\begin{align}\n\\ell_{j,-1} & = a_{j,j-1}, \\quad j=2,\\ldots, n   \\\\\n\\ell_{j, 0} & = a_{j,j},   \\quad j=1,\\ldots, n   \\\\\n\\ell_{j, 1} & = a_{j,j+1}, \\quad j=1,\\ldots, n-1\n\\end{align}\n}\n\u3000MyOffsetSparseMatrix\u578b\u884c\u5217 a\u3068 OffsetArray{T,1}\u578b\u30d9\u30af\u30c8\u30eb b \u3068\u306e\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 (*) \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002b \u306e\u6dfb\u5b57\u7bc4\u56f2\u3082 [0:n+1] \u3092\u8981\u6c42\u3057\u307e\u3057\u3087\u3046\u3002\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u306f for \u6587\u4e00\u3064\u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u6dfb\u5b57\u306e\u4e0b\u9650\u30fb\u4e0a\u9650\u306e\u691c\u67fb\u3082\u5165\u308c\u307e\u3057\u305f\u3002\nfunction (*){T}(a::MyOffsetSparseMatrix{T},b::OffsetArray{T,1})\n  ib=indices(b,1)\n  @assert ib.start == 0\n  n=ib.stop-1\n  ia=indices(a.el,1)\n  @assert ia.start == 0\n  @assert ia.stop  == n+1\n  c=zeros(b)\n  for i in 1:n\n    c[i]=a.el[i,-1]*b[i-1] + a.el[i,0]*b[i] + a.el[i,1]*b[i+1]\n  end\n  return c\nend\n\n\u3000\u5bc6\u884c\u5217\u304b\u3089 MyOffsetSparseMatrix\u578b\u758e\u884c\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570myOffstSparseMatrixFromDense \u3092\u4f5c\u308a\u307e\u3059\u3002\nfunction myOffsetSparseMatrixFromDense(aa)\n  n=size(aa,1)\n  el0=zeros(typeof(aa[1,1]),n+2,3)\n  el=OffsetArray(el0,0:n+1,-1:1)\n  for i in 1:n\n    el[i,0]=aa[i,i]\n  end\n    el[1, 1]=aa[1,1+1]\n  for i in 2:n-1\n    el[i,-1]=aa[i,i-1]\n    el[i, 1]=aa[i,i+1]\n  end\n    el[n,-1]=aa[n,n-1]\n  return MyOffsetSparseMatrix(el)\nend\n\n\u3000\n\u3000\u4ef6\u306e\u624b\u6cd5\u304c\u3046\u307e\u304f\u3044\u304f\u305f\u3081\u306b\u306f\u3001el[1,-1] \u3068 el[n,1] \u304c\u96f6\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002myOffsetSparseMatrixFromDense \u3067\u4f5c\u6210\u3057\u305f\u884c\u5217\u306f\u3001\u3053\u308c\u3092\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u30d9\u30af\u30c8\u30eb\u540c\u58eb\u306e\u548c\u306f\u3001OffsetArray\u3067\u5b9a\u7fa9\u6e08\u307f\u3067\u3059\u3002\u3067\u306f\u3001\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\njulia> hh4=myOffsetSparseMatrixFromDense(hh1)\nMyOffsetSparseMatrix{Float64}([0.0 0.0 0.0; 0.0 4.0 -2.0; \u2026 ; -1.0 4.0 0.0; 0.0 0.0 0.0\u2026 ; ])\n\njulia> hh4.el\njulia> hh4.el\nOffsetArrays.OffsetArray{Float64,2,Array{Float64,2}} with indices 0:1001\u00d7-1:1:\n  0.0  0.0   0.0\n  0.0  4.0  -2.0\n -1.0  4.0  -2.0\n  \u22ee             \n -1.0  4.0  -2.0\n -1.0  4.0   0.0\n  0.0  0.0   0.0\n\njulia> pp40=zeros(nn+2)\n       pp4=OffsetArray(pp40,0:nn+1)\n       pp4[1:nn]=pp0\n\njulia> pp4\nOffsetArrays.OffsetArray{Float64,1,Array{Float64,1}} with indices 0:1001:\n 0.0\n 1.0\n \u22ee  \n 1.0\n 0.0\n\njulia> rr4=proceed(hh4,pp4)\n  0.001290 seconds (25.95 k allocations: 655.906 KB)\nOffsetArrays.OffsetArray{Float64,1,Array{Float64,1}} with indices 0:1001:\n    0.0\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n    0.0\n\n\u3000\u8a18\u8ff0\u306f\u7c21\u6f54\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u8a08\u7b97\u6642\u9593\u306f\u6700\u60aa\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u30e1\u30e2\u30ea\u78ba\u4fdd\u304c\u591a\u6570\u56de\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u3082\u3001\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\u30d9\u30af\u30c8\u30eb\u306e\u6dfb\u5b57\u306f [0:nn+1] \u3067\u3059\u304c\u3001\u8a08\u7b97\u7d50\u679c\u304c\u5165\u3063\u3066\u3044\u308b\u6dfb\u5b57\u7bc4\u56f2\u306f [1:nn] \u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002\njulia> norm([rr4[i] - rr1[i] for i in 1:nn])\n0.0\n\n\n\u5c55\u671b\n\u3000\u884c\u5217\u30d9\u30af\u30c8\u30eb\u7a4d\u3092\u4f8b\u306b multiple dispatch \u306e\u69d8\u5b50\u3092\u89b3\u5bdf\u3057\u307e\u3057\u305f\u3002\n\u3000\u4ee5\u4e0a\u3067\u306f\u5272\u611b\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306e\u4f8b\u306b\u542b\u307e\u308c\u308b r=h\u2217q+pr = h * q + p \u306e\u8a08\u7b97\u306f\u3001BLAS \u306e xGEMV \u95a2\u6570 (y\u2190\u03b1Ax+\u03b2yy \\leftarrow \\alpha A x + \\beta y) \u3092\u7528\u3044\u3066\u3082\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002 Julia\u306f\u3001BLAS\u306e\u30e9\u30c3\u30d1\u30fc\u3092\u542b\u3093\u3067\u304a\u308a gemv!\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u6a5f\u4f1a\u3092\u898b\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3067\u3059\u3002\n\u3000\u884c\u5217\u306e\u7a4d\u3068\u3044\u3046\u57fa\u672c\u6f14\u7b97\u3067\u3082\u3001\u8a08\u7b97\u6a5f\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3059\u306b\u306f\u3001\u305d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084\u547d\u4ee4\u4f53\u7cfb\u3092\u8003\u616e\u3057\u305f\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u9808\u3067\u3059\u3002(\u53c2\u8003 \u2192 Qiita\u8a18\u4e8b \u300c\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3059\u306e\u306f\u5927\u5909\u3060\u3088\u3068\u3044\u3046\u304a\u8a71 (\u884c\u5217\u7a4d\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\u300d \u300cCommon Lisp \u3067\u884c\u5217\u8a08\u7b97\u3059\u308b\u30d6\u30ed\u30b0\u3092\u8ffd\u8a66\u3057\u3066\u307f\u305f\u300d\u300c \u540c (\u305d\u306e2)\u300d\u300c\u540c (\u305d\u306e3)\u300d\u304a\u3088\u3073\u8a18\u4e8b\u5185\u30ea\u30f3\u30af\u3001\u7279\u306b\u300c\u7247\u6850, \u30d7\u30ed\u30b0\u30e9\u30e0\u9ad8\u901f\u5316\u306e\u57fa\u790e\u300d) \u3002\u5b9f\u969b\u306e\u6570\u5024\u8a08\u7b97\u306f\u3001\u57fa\u672c\u6f14\u7b97\u3092\u8c4a\u5bcc\u306b\u542b\u307f\u307e\u3059\u304b\u3089\u3001\u3053\u308c\u3089\u3092\u53d6\u308a\u66ff\u3048\u3066\u691c\u8a0e\u3059\u308b\u306e\u306b multiple dispatch \u306e\u4ed5\u7d44\u307f\u304c\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u79c1\u81ea\u8eab\u306f Templates for the Solution of Linear Systems: Building Blocks for Iterative Method \u3068\u304b\u3001Templates for the Solution of Algebraic Eigenvalue Problems: a Practical Guide \u306a\u3069\u306e\u6587\u66f8\u3092\u773a\u3081\u3066\u3001\u8272\u3005\u8a66\u3057\u305f\u304f\u3066\u3001\u3046\u305a\u3046\u305a\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000Julia \u3067\u306f\u3001\u540c\u3058\u95a2\u6570\u306e\u8b58\u5225\u5b50(\u540d\u524d)\u306b\u3001\u8907\u6570\u306e\u578b\u306e\u7d44\u5408\u305b\u3092\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u547c\u3073\u51fa\u3057\u6642\u306e\u5f15\u6570\u306e\u578b\u306e\u7d44\u5408\u305b\u3067\u3001\u7279\u5b9a\u306e\u95a2\u6570\u3092\u9078\u3093\u3067\u5b9f\u884c\u3059\u308b\u4ed5\u7d44\u307f\u304c multiple dispatch \u3067\u3059\u3002\u540c\u3058\u7b97\u6cd5(\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0)\u3092\u3001\u7570\u306a\u308b\u578b\u306e\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u5b9f\u88c5\u3059\u308b\u969b\u3001multiple dispatch \u3092\u4f7f\u3046\u3068\u3001\u7c21\u6f54\u306b\u8a18\u8ff0(\u7b97\u8b5c)\u3067\u304d\u307e\u3059\u3002\n\u3000\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u3092\u542b\u3080\u6570\u5024\u8a08\u7b97\u3067\u3001\u305d\u306e\u69d8\u5b50\u3092\u89b3\u5bdf\u3057\u3066\u307f\u307e\u3059\u3002\n\n# \u554f\u984c\n\n\u3000\u884c\u5217 $H$ \u3068\u30d9\u30af\u30c8\u30eb $v_1$ \u304c\u3042\u308a\u307e\u3059\u3002\u30d9\u30af\u30c8\u30eb\u5217 ${v}_{i}$ \u3092\u3001\u6b21\u306e\u6f38\u5316\u5f0f\u3092\u7528\u3044\u3066\u767a\u751f\u3055\u305b\u308b\u3068\u3044\u3046\u554f\u984c\u3092\u53d6\u308a\u4e0a\u3052\u307e\u3059\u3002\n\n```math\n\\begin{align}\n{v}_{2}   & = H {v}_{1}, \\\\\n{v}_{i+2} & = H {v}_{i+1} + {v}_{i} \\quad i=1,2,3,\\ldots\n\\end{align}\n```\n\n\u3000\uff13\u3064\u306e\u30d9\u30af\u30c8\u30eb $p, q, r$ \u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u5de1\u56de\u3057\u3066\u3001\u6f38\u5316\u5f0f\u3092\uff13\u56de\u8a08\u7b97\u3057\u307e\u3059\u3002\u3053\u3046\u3059\u308b\u3068\u3001\u30d9\u30af\u30c8\u30eb\u3092\u30b3\u30d4\u30fc\u3059\u308b\u51e6\u7406\u304c\u4e0d\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\n```math\nr = H q + p, \\\\\nq = H p + r, \\\\\np = H r + q\n```\n\n\u3000\u521d\u671f\u30d9\u30af\u30c8\u30eb `p` ($= v_1$) \u304b\u3089\u3001\u30d9\u30af\u30c8\u30eb `q`($= v_2$) , `r` ($= v_3$) \u3092\u78ba\u4fdd\u3057\u307e\u3059\u3002\u66f4\u306b\u3001\u4e0a\u306e\uff12\u30b9\u30c6\u30c3\u30d7\u3092\u9069\u7528\u3057\u3066\u3001\u6700\u5f8c\u306b\u5f97\u3089\u308c\u305f\u30d9\u30af\u30c8\u30eb\u3092\u8fd4\u3059\u95a2\u6570 `proceed` \u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u53c2\u8003\u306e\u305f\u3081\u3001\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u8a08\u7b97\u306e\u6642\u9593\u3092\u8a08\u6e2c\u3057\u307e\u3059\u3002\n\n```Julia\nfunction proceed(h,p)\n  q = h * p\n  r = h * q + p\n  q = h * p + r\n  p = h * r + q\n  #\n  r = h * q + p\n  q = h * p + r\n  @time p = h * r + q\n  return p\nend\n```\n\n\u3000\u95a2\u6570 `proceed` \u306f\u3001\u5f15\u6570\u306e\u578b\u3092\u6307\u5b9a\u3057\u306a\u3044 \"generic\" \u306a\u95a2\u6570\u3067\u3059\u3002\n\n```Julia\njulia> methods(proceed)\n# 1 method for generic function \"proceed\":\nproceed(h, p) at REPL[1]:2\n```\n\n\u3000\u95a2\u6570 `proceed` \u306b\u542b\u307e\u308c\u308b\u8a08\u7b97\u306e\u3046\u3061\u3001\u7a4d `h * p` \u3068\u548c `p + q` \u306f\u3001\u5f15\u6570\u306e\u578b\u304c\u672a\u5b9a\u3067\u3059\u3002`proceed` \u306e\u547c\u3073\u51fa\u3057\u6642\u306b `h` \u3068  `p` (\u306e\u578b)\u304c\u5177\u4f53\u7684\u306b\u4e0e\u3048\u3089\u308c\u308b\u3068\u3001\u8a08\u7b97\u304c\u5b9f\u884c\u3055\u308c\u308b\u624b\u7b48\u3067\u3059\u3002\n\n\n# \u5bc6\u884c\u5217\u3067 \n\n\u3000\u884c\u5217 $H$ \u3068\u3057\u3066\u3001\u6b21\u306e\u3088\u3046\u306a\u975e\u5bfe\u79f0\u884c\u5217\u3092\u8003\u3048\u307e\u3059\u3002\u4f55\u3082\u66f8\u304b\u308c\u3066\u3044\u306a\u3044\u8981\u7d20\u306f\u96f6\u3067\u3059\u3002\u975e\u96f6\u8981\u7d20\u306f\u3001\u5bfe\u89d2\u8981\u7d20\u3068\u3001\u4e0a\u4e0b\u306b\u96a3\u308a\u5408\u3046\u8981\u7d20\u3067\u3059\u3002\n\n```math\nH = \\left[\n\\begin{array}{ccccc}\n4  & -2 &     & &  \\\\\n-1 &  4 &  -2 & &  \\\\\n   & -1 &   4 & \\ddots &  \\\\\n   &    &  \\ddots & \\ddots & -2 \\\\\n   &    &     & -1 & 4\n\\end{array}\n\\right]\n```\n\n\u3000\u521d\u671f\u30d9\u30af\u30c8\u30eb `p` ($= v_1$) \u306f\u3001\u5168\u8981\u7d20\u304c `1` \u306e\u30d9\u30af\u30c8\u30eb\u3068\u3057\u307e\u3059\u3002\n\u3000Julia \u6a19\u6e96\u306e\u591a\u6b21\u5143\u914d\u5217 `Array{Float64,N}` (N=1, 2) \u3092\u7528\u3044\u3066\u3001`h` \u3068 `p` \u3092\u78ba\u4fdd\u30fb\u8a08\u7b97\u3057\u307e\u3059\u3002\u8981\u7d20\u6570\u306f `nn=1000` \u3068\u3057\u307e\u3057\u305f\u3002\n\n```Julia\nnn = 1000\npp0=ones(nn)\n\nhh1=eye(nn)*4.0\nfor i in 1:nn-1\n  hh1[i,i+1]=-2.0\n  hh1[i+1,i]=-1.0\nend\n```\n\n\u3000\u884c\u5217\u30d9\u30af\u30c8\u30eb\u7a4d `(*)`\u3001\u30d9\u30af\u30c8\u30eb\u540c\u58eb\u306e\u548c `(+)` \u306f Julia \u6a19\u6e96\u306e\u6f14\u7b97\u3092\u7528\u3044\u307e\u3059\u304b\u3089\u3001\u3053\u308c\u4ee5\u4e0a\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u8981\u3067\u3059\u3002\u3067\u306f\u3001`proceed` \u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```Julia\njulia> pp1=copy(pp0)\n       rr1=proceed(hh1,pp1)\n  0.000633 seconds (4 allocations: 15.906 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n```\n\n# \u758e\u884c\u5217\u3067\n\n\u3000\u96f6\u8981\u7d20\u3092\u591a\u304f\u542b\u3080\u884c\u5217\u3092\u758e\u884c\u5217 (sparse matrix)\u3068\u3044\u3044\u307e\u3059\u3002\n\u3000Julia \u306b\u306f Compressed Sparse Columns (CSC) \u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3067\u683c\u7d0d\u3059\u308b\u758e\u884c\u5217 `SparseMatrixCSC` \u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u3059\u3002CSC\u5f62\u5f0f\u306f\u3001\u3042\u3089\u3086\u308b\u5f62\u306e\u758e\u884c\u5217\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u512a\u308c\u3082\u306e\u3067\u3059\u304c\u3001\u4e00\u304b\u3089\u4f5c\u308b\u306e\u306f\u9762\u5012\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u3000\u3053\u3053\u3067\u306f\u3001\u96db\u5f62\u3068\u306a\u308b\u5bc6\u884c\u5217 `hh1` \u304b\u3089\u3001`sparse`\u95a2\u6570\u3092\u7528\u3044\u3066\u758e\u884c\u5217\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\n```Juli\njulia> hh2=sparse(hh1)\n1000\u00d71000 sparse matrix with 2998 Float64 nonzero entries:\n\t[1   ,    1]  =  4.0\n    \u22ee  \n```\n\n\u3000`(2998 = nn*3 - 2)` \u500b\u306e\u975e\u96f6\u8981\u7d20\u304c\u691c\u51fa\u3055\u308c\u307e\u3057\u305f\u3002\u6b63\u3057\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u306d\u3002\n\u3000`SparseMatrixCSC`\u578b\u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u7a4d `(*)` \u306f\u5b9a\u7fa9\u6e08\u307f\u306a\u306e\u3067\u3001\u8ffd\u52a0\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u4e0d\u8981\u3067\u3059\u3002\u3067\u306f\u3001\u5b9f\u884c\u3002\n\n```Julia\njulia> pp2=copy(pp0)\n       rr2=proceed(hh2,pp2)\n  0.000010 seconds (4 allocations: 15.906 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n```\n\n\u3000\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u306e\u8a08\u7b97\u6642\u9593\u304c\u4e00\u6841\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\n\n```Julia\njulia> norm(rr2 - rr1)\n0.0\n```\n\n\n# \u81ea\u4f5c\u306e\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u3067\n\n\u3000\u4eca\u56de\u306e $H$ \u306e\u3088\u3046\u306b\u300c\u5bfe\u89d2\u8981\u7d20\u3068\u3001\u4e0a\u4e0b\u306b\u96a3\u308a\u5408\u3046\u8981\u7d20\u304c\u3001\u975e\u96f6\u3067\u3042\u308b\u884c\u5217\u300d\u3092\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217 (tridiagonal matrix)\u3068\u3044\u3044\u307e\u3059\u3002Julia \u306b\u3082\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u3092\u6271\u3046 `Tridiagonal` \u578b\u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u3001\u4e09\u91cd\u5bfe\u89d2\u884c\u5217\u578b\u3092\u81ea\u4f5c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3000MySparseMatrix\u578b\u306f\u3001\u975e\u96f6\u8981\u7d20\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217 `el` \u3092\u5185\u5305\u3057\u307e\u3059\u3002 `el` \u306e\u4e2d\u8eab\u306f\u3001\u5c06\u6765\u8907\u7d20\u6570\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001`Number` \u578b\u306b\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```Julia\nabstract MyAbstractSparseMatrix{Tv}\n\ntype MySparseMatrix{Tv<:Number} <: MyAbstractSparseMatrix{Tv}\n  el :: Array{Tv,2}\nend\n```\n\n\u3000`el`\u306e\u5bf8\u6cd5\u306f `[n,3]` \u3068\u3057\u307e\u3059\u3002\u884c\u5217 `a` \u306e\u5bfe\u89d2\u8981\u7d20\u30fb\u975e\u5bfe\u89d2\u8981\u7d20\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u683c\u7d0d\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3059\u3002Julia \u3067\u306f\u3001\u7b2c1\u8ef8(\u6700\u521d\u306e\u6dfb\u5b57)\u304c\u30e1\u30e2\u30ea\u683c\u7d0d\u9806\u3067\u3059\u3002\n\n```math\n\\begin{align}\n\\ell_{j,1} & = a_{j,j-1} \\quad j =2,\\ldots, n   \\\\\n\\ell_{j,2} & = a_{j,j}   \\quad j =1,\\ldots, n   \\\\\n\\ell_{j,3} & = a_{j,j+1} \\quad j =1,\\ldots, n-1\n\\end{align}\n```\n\n\u3000`MySparseMatrix`\u578b\u884c\u5217 `a`\u3068 `Array{T,1}`\u578b\u30d9\u30af\u30c8\u30eb `b` \u3068\u306e\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 `(*)` \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002 `Base.(*)` \u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3057\u3066\u304b\u3089\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```Julia\nimport Base: (*)\n\nfunction (*){T}(a::MySparseMatrix{T},b::Array{T,1})\n  n=size(b,1)\n  c=zeros(b)\n    c[1]=                   a.el[1,2]*b[1] + a.el[1,3]*b[1+1]\n  for i in 2:n-1\n    c[i]=a.el[i,1]*b[i-1] + a.el[i,2]*b[i] + a.el[i,3]*b[i+1]\n  end\n    c[n]=a.el[n,1]*b[n-1] + a.el[n,2]*b[n]\n  return c\nend\n```\n\n\u3000\u5bc6\u884c\u5217\u304b\u3089 `MySparseMatrix` \u578b\u306e\u758e\u884c\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570`mySparseMatrixFromDense` \u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```Julia\nfunction mySparseMatrixFromDense(aa)\n  n=size(aa,1)\n  el=Array(typeof(aa[1,1]),n,3)\n  for i in 1:n\n    el[i,2]=aa[i,i]\n  end\n    el[1,3]=aa[1,1+1]\n  for i in 2:n-1\n    el[i,1]=aa[i,i-1]\n    el[i,3]=aa[i,i+1]\n  end\n    el[n,1]=aa[n,n-1]\n  return MySparseMatrix(el)\nend\n```\n\n\u3000\u3067\u306f\u3001\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```Julia\njulia> hh3=mySparseMatrixFromDense(hh1)\nMySparseMatrix{Float64}([0.0 4.0 -2.0; -1.0 4.0 -2.0; \u2026 ; -1.0 4.0 -2.0; -1.0 4.0 7.63918e-313])\n\njulia> hh3.el\n1000\u00d73 Array{Float64,2}:\n  0.0  4.0  -2.0         \n -1.0  4.0  -2.0         \n -1.0  4.0  -2.0            \n  \u22ee                            \n -1.0  4.0  -2.0         \n -1.0  4.0  -2.0         \n -1.0  4.0   7.63918e-313\n\n\njulia> pp3=copy(pp0)\n       rr3=proceed(hh3,pp3)\n  0.000007 seconds (3 allocations: 15.891 KB)\n1000-element Array{Float64,1}:\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n```\n\n\u3000\u6700\u5f8c\u306e\u6f38\u5316\u5f0f\u306e\u8a08\u7b97\u6642\u9593\u304c\u3001\u66f4\u306b\u4e00\u6841\u77ed\u304f\u306a\u308a\u307e\u3057\u305f\u3002\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\n\n```Julia\njulia> norm(rr3 - rr1)\n0.0\n```\n\n\n# \u81ea\u4f5c\u306e\u4e09\u91cd\u5bfe\u89d2\u758e\u884c\u5217\u3092 OffsetArrays\u3067\n\n\u3000\u4e0a\u306e\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u306e\u8a08\u7b97\u3067\u306f\u3001\u6dfb\u5b57\u304c `0` \u3084 `n+1` \u3068\u306a\u308b\u5834\u5408\u3092 `for`\u30eb\u30fc\u30d7\u304b\u3089\u5225\u6271\u3044\u3057\u3066\u3044\u307e\u3059\u3002\u3082\u3057\u3001\u3053\u308c\u3089\u306e\u5834\u5408\u304c\u7d50\u679c\u306b\u5f71\u97ff\u3057\u306a\u3044\u3053\u3068\u304c\u4fdd\u8a3c\u3067\u304d\u308b\u306a\u3089\u3001\u5225\u6271\u3044\u3057\u306a\u3044\u3067 `for`\u30eb\u30fc\u30d7\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u308c\u306f\u3001\u30d9\u30af\u30c8\u30eb\u578b\u30b9\u30fc\u30d1\u30fc\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u306e\u7b97\u8b5c\u3067\u3001\u3088\u304f\u4f7f\u308f\u308c\u305f\u624b\u6cd5\u3067\u3059\u3002\n\u3000Julia 0.5 \u4ee5\u964d\u3067\u306f\u3001\u914d\u5217\u6dfb\u5b57\u3092 1\u4ee5\u5916\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u5b9f\u88c5\u3055\u308c\u307e\u3057\u305f\u3002\u62d9\u6587 Qiita\u8a18\u4e8b [\u300c[Julia 0.5] \u914d\u5217\u6dfb\u5b57\u30920\u304b\u3089\u6570\u3048\u308b\u300d](http://qiita.com/tenfu2tea/items/70e0bf9e9182c5e8182e) \u3067\u7d39\u4ecb\u3057\u305f `OffsetArrays` \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u7528\u3044\u3066\u307f\u307e\u3059\n\u3000\u975e\u96f6\u8981\u7d20\u3092\u683c\u7d0d\u3059\u308b\u914d\u5217 `el` \u3092 `OffsetArray` \u578b\u306b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```Julia\nusing OffsetArrays\n\nimmutable MyOffsetSparseMatrix{Tv<:Number} <: MyAbstractSparseMatrix{Tv}\n  el :: OffsetArray{Tv,2}\nend\n```\n\n\u3000`el`\u306e\u6dfb\u5b57\u7bc4\u56f2\u306f `[0:n+1,-1:1]` \u3068\u3057\u307e\u3059\u3002\u5bfe\u89d2\u8981\u7d20\u30fb\u975e\u5bfe\u89d2\u8981\u7d20\u3092\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u683c\u7d0d\u3057\u307e\u3059\u3002\n\n```math\n\\begin{align}\n\\ell_{j,-1} & = a_{j,j-1}, \\quad j=2,\\ldots, n   \\\\\n\\ell_{j, 0} & = a_{j,j},   \\quad j=1,\\ldots, n   \\\\\n\\ell_{j, 1} & = a_{j,j+1}, \\quad j=1,\\ldots, n-1\n\\end{align}\n```\n\n\u3000`MyOffsetSparseMatrix`\u578b\u884c\u5217 `a`\u3068 `OffsetArray{T,1}`\u578b\u30d9\u30af\u30c8\u30eb `b` \u3068\u306e\u7a4d\u3092\u8a08\u7b97\u3059\u308b\u95a2\u6570 `(*)` \u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002`b` \u306e\u6dfb\u5b57\u7bc4\u56f2\u3082 `[0:n+1]` \u3092\u8981\u6c42\u3057\u307e\u3057\u3087\u3046\u3002\u884c\u5217\u30fb\u30d9\u30af\u30c8\u30eb\u7a4d\u306f `for` \u6587\u4e00\u3064\u3067\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u884c\u5217\u3068\u30d9\u30af\u30c8\u30eb\u306e\u6dfb\u5b57\u306e\u4e0b\u9650\u30fb\u4e0a\u9650\u306e\u691c\u67fb\u3082\u5165\u308c\u307e\u3057\u305f\u3002\n\n```Julia\nfunction (*){T}(a::MyOffsetSparseMatrix{T},b::OffsetArray{T,1})\n  ib=indices(b,1)\n  @assert ib.start == 0\n  n=ib.stop-1\n  ia=indices(a.el,1)\n  @assert ia.start == 0\n  @assert ia.stop  == n+1\n  c=zeros(b)\n  for i in 1:n\n    c[i]=a.el[i,-1]*b[i-1] + a.el[i,0]*b[i] + a.el[i,1]*b[i+1]\n  end\n  return c\nend\n```\n\n\u3000\u5bc6\u884c\u5217\u304b\u3089 `MyOffsetSparseMatrix`\u578b\u758e\u884c\u5217\u3092\u751f\u6210\u3059\u308b\u95a2\u6570`myOffstSparseMatrixFromDense` \u3092\u4f5c\u308a\u307e\u3059\u3002\n\n```Julia\nfunction myOffsetSparseMatrixFromDense(aa)\n  n=size(aa,1)\n  el0=zeros(typeof(aa[1,1]),n+2,3)\n  el=OffsetArray(el0,0:n+1,-1:1)\n  for i in 1:n\n    el[i,0]=aa[i,i]\n  end\n    el[1, 1]=aa[1,1+1]\n  for i in 2:n-1\n    el[i,-1]=aa[i,i-1]\n    el[i, 1]=aa[i,i+1]\n  end\n    el[n,-1]=aa[n,n-1]\n  return MyOffsetSparseMatrix(el)\nend\n```\n\u3000\n\u3000\u4ef6\u306e\u624b\u6cd5\u304c\u3046\u307e\u304f\u3044\u304f\u305f\u3081\u306b\u306f\u3001`el[1,-1]` \u3068 `el[n,1]` \u304c\u96f6\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002`myOffsetSparseMatrixFromDense` \u3067\u4f5c\u6210\u3057\u305f\u884c\u5217\u306f\u3001\u3053\u308c\u3092\u6e80\u305f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u30d9\u30af\u30c8\u30eb\u540c\u58eb\u306e\u548c\u306f\u3001`OffsetArray`\u3067\u5b9a\u7fa9\u6e08\u307f\u3067\u3059\u3002\u3067\u306f\u3001\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\n\n```Julia\njulia> hh4=myOffsetSparseMatrixFromDense(hh1)\nMyOffsetSparseMatrix{Float64}([0.0 0.0 0.0; 0.0 4.0 -2.0; \u2026 ; -1.0 4.0 0.0; 0.0 0.0 0.0\u2026 ; ])\n\njulia> hh4.el\njulia> hh4.el\nOffsetArrays.OffsetArray{Float64,2,Array{Float64,2}} with indices 0:1001\u00d7-1:1:\n  0.0  0.0   0.0\n  0.0  4.0  -2.0\n -1.0  4.0  -2.0\n  \u22ee             \n -1.0  4.0  -2.0\n -1.0  4.0   0.0\n  0.0  0.0   0.0\n\njulia> pp40=zeros(nn+2)\n       pp4=OffsetArray(pp40,0:nn+1)\n       pp4[1:nn]=pp0\n\njulia> pp4\nOffsetArrays.OffsetArray{Float64,1,Array{Float64,1}} with indices 0:1001:\n 0.0\n 1.0\n \u22ee  \n 1.0\n 0.0\n\njulia> rr4=proceed(hh4,pp4)\n  0.001290 seconds (25.95 k allocations: 655.906 KB)\nOffsetArrays.OffsetArray{Float64,1,Array{Float64,1}} with indices 0:1001:\n    0.0\n  509.0\n -214.0\n   65.0\n   18.0\n   21.0\n    \u22ee  \n   21.0\n  -27.0\n  373.0\n -919.0\n  997.0\n    0.0\n```\n\n\u3000\u8a18\u8ff0\u306f\u7c21\u6f54\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u8a08\u7b97\u6642\u9593\u306f\u6700\u60aa\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u30e1\u30e2\u30ea\u78ba\u4fdd\u304c\u591a\u6570\u56de\u8d77\u3053\u3063\u3066\u3044\u308b\u306e\u3082\u3001\u6c17\u306b\u306a\u308a\u307e\u3059\u3002\n\u3000\u7d50\u679c\u304c\u540c\u3058\u3067\u3042\u308b\u3053\u3068\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\u30d9\u30af\u30c8\u30eb\u306e\u6dfb\u5b57\u306f `[0:nn+1]` \u3067\u3059\u304c\u3001\u8a08\u7b97\u7d50\u679c\u304c\u5165\u3063\u3066\u3044\u308b\u6dfb\u5b57\u7bc4\u56f2\u306f `[1:nn]` \u3067\u3042\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002\n\n```Julia\njulia> norm([rr4[i] - rr1[i] for i in 1:nn])\n0.0\n```\n\n# \u5c55\u671b\n\n\u3000\u884c\u5217\u30d9\u30af\u30c8\u30eb\u7a4d\u3092\u4f8b\u306b multiple dispatch \u306e\u69d8\u5b50\u3092\u89b3\u5bdf\u3057\u307e\u3057\u305f\u3002\n\u3000\u4ee5\u4e0a\u3067\u306f\u5272\u611b\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306e\u4f8b\u306b\u542b\u307e\u308c\u308b $r = h * q + p$ \u306e\u8a08\u7b97\u306f\u3001[BLAS](http://www.netlib.org/blas/#_reference_blas_version_3_7_0) \u306e `xGEMV` \u95a2\u6570 ($y \\leftarrow \\alpha A x + \\beta y$) \u3092\u7528\u3044\u3066\u3082\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002 Julia\u306f\u3001[BLAS\u306e\u30e9\u30c3\u30d1\u30fc](http://docs.julialang.org/en/release-0.5/stdlib/linalg/#module-Base.LinAlg.BLAS)\u3092\u542b\u3093\u3067\u304a\u308a [gemv!](http://docs.julialang.org/en/release-0.5/stdlib/linalg/#Base.LinAlg.BLAS.gemv!)\u95a2\u6570\u3092\u76f4\u63a5\u547c\u3073\u51fa\u305b\u307e\u3059\u3002\u6a5f\u4f1a\u3092\u898b\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3067\u3059\u3002\n\u3000\u884c\u5217\u306e\u7a4d\u3068\u3044\u3046\u57fa\u672c\u6f14\u7b97\u3067\u3082\u3001\u8a08\u7b97\u6a5f\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3059\u306b\u306f\u3001\u305d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3084\u547d\u4ee4\u4f53\u7cfb\u3092\u8003\u616e\u3057\u305f\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0\u304c\u5fc5\u9808\u3067\u3059\u3002(\u53c2\u8003 \u2192 Qiita\u8a18\u4e8b [\u300c\u30d7\u30ed\u30bb\u30c3\u30b5\u306e\u6027\u80fd\u3092\u5f15\u304d\u51fa\u3059\u306e\u306f\u5927\u5909\u3060\u3088\u3068\u3044\u3046\u304a\u8a71 (\u884c\u5217\u7a4d\u30c1\u30e5\u30fc\u30cb\u30f3\u30b0)\u300d](http://qiita.com/ryo_grid/items/2e7704243132ebaca512) \u300c[Common Lisp \u3067\u884c\u5217\u8a08\u7b97\u3059\u308b\u30d6\u30ed\u30b0\u3092\u8ffd\u8a66\u3057\u3066\u307f\u305f](http://qiita.com/guicho271828/items/60236e32871b9eb610c7)\u300d\u300c[ \u540c (\u305d\u306e2)](http://qiita.com/guicho271828/items/a095b106deec61477597)\u300d\u300c[\u540c (\u305d\u306e3)](http://qiita.com/guicho271828/items/9e892914421ebcc345f1)\u300d\u304a\u3088\u3073\u8a18\u4e8b\u5185\u30ea\u30f3\u30af\u3001\u7279\u306b\u300c[\u7247\u6850, \u30d7\u30ed\u30b0\u30e9\u30e0\u9ad8\u901f\u5316\u306e\u57fa\u790e](http://www.cms-initiative.jp/ja/events/20130411katagiri.pdf)\u300d) \u3002\u5b9f\u969b\u306e\u6570\u5024\u8a08\u7b97\u306f\u3001\u57fa\u672c\u6f14\u7b97\u3092\u8c4a\u5bcc\u306b\u542b\u307f\u307e\u3059\u304b\u3089\u3001\u3053\u308c\u3089\u3092\u53d6\u308a\u66ff\u3048\u3066\u691c\u8a0e\u3059\u308b\u306e\u306b multiple dispatch \u306e\u4ed5\u7d44\u307f\u304c\u5f79\u7acb\u3064\u3067\u3057\u3087\u3046\u3002 \u79c1\u81ea\u8eab\u306f [Templates for the Solution of Linear Systems: Building Blocks for Iterative Method](http://www.netlib.org/templates/templates.pdf) \u3068\u304b\u3001[Templates for the Solution of Algebraic Eigenvalue Problems: a Practical Guide](http://www.netlib.org/utk/people/JackDongarra/etemplates/book.html) \u306a\u3069\u306e\u6587\u66f8\u3092\u773a\u3081\u3066\u3001\u8272\u3005\u8a66\u3057\u305f\u304f\u3066\u3001\u3046\u305a\u3046\u305a\u3057\u3066\u3044\u307e\u3059\u3002\n\n"}