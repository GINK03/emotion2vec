{"context": "\u3069\u3046\u305e\uff01\n\nDateUtils.swift\n\nimport Foundation\n\nclass DateUtils {\n\n    static func age(byBirthDate birthDate: Date) -> Int {\n        let timezone: NSTimeZone = NSTimeZone.system\n        let localDate = NSDate(timeIntervalSinceNow: Double (timezone.secondsFromGMT)) as Date\n\n        let localDateIntVal = Int(string(localDate, format: \"yyyyMMdd\"))\n        let birthDateIntVal = Int(string(birthDate, format: \"yyyyMMdd\"))\n\n        print(localDateIntVal!)\n        print(birthDateIntVal!)\n\n        let age = (localDateIntVal! - birthDateIntVal!) / 10000\n        print(age)\n\n        return age\n    }\n\n    static func date(_ string: String, format: String) -> Date {\n        let formatter: DateFormatter = DateFormatter()\n        formatter.dateFormat = format\n        return formatter.date(from: string)! as Date\n    }\n\n    static func string(_ date: Date, format: String) -> String {\n        let formatter: DateFormatter = DateFormatter()\n        formatter.dateFormat = format\n        return formatter.string(from: date as Date)\n    }\n\n    static func simpleDate(string: String) -> String {\n        let tmp = string.replacingOccurrences(of: \"-\", with: \"/\")\n        let res = tmp.substring(from: tmp.index(tmp.startIndex, offsetBy: 5))\n        return res\n    }\n\n}\n\n\n\u3069\u3046\u305e\uff01\n\n```DateUtils.swift\n\nimport Foundation\n\nclass DateUtils {\n    \n    static func age(byBirthDate birthDate: Date) -> Int {\n        let timezone: NSTimeZone = NSTimeZone.system\n        let localDate = NSDate(timeIntervalSinceNow: Double (timezone.secondsFromGMT)) as Date\n        \n        let localDateIntVal = Int(string(localDate, format: \"yyyyMMdd\"))\n        let birthDateIntVal = Int(string(birthDate, format: \"yyyyMMdd\"))\n       \n        print(localDateIntVal!)\n        print(birthDateIntVal!)\n        \n        let age = (localDateIntVal! - birthDateIntVal!) / 10000\n        print(age)\n        \n        return age\n    }\n\n    static func date(_ string: String, format: String) -> Date {\n        let formatter: DateFormatter = DateFormatter()\n        formatter.dateFormat = format\n        return formatter.date(from: string)! as Date\n    }\n    \n    static func string(_ date: Date, format: String) -> String {\n        let formatter: DateFormatter = DateFormatter()\n        formatter.dateFormat = format\n        return formatter.string(from: date as Date)\n    }\n    \n    static func simpleDate(string: String) -> String {\n        let tmp = string.replacingOccurrences(of: \"-\", with: \"/\")\n        let res = tmp.substring(from: tmp.index(tmp.startIndex, offsetBy: 5))\n        return res\n    }\n\n}\n```\n", "tags": ["Swift", "swift3", "iOS", "\u65e5\u4ed8", "\u5e74\u9f62"]}