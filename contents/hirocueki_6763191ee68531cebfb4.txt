{"context": " More than 1 year has passed since last update.\n\n\u52d5\u6a5f\n@kmagai \u3055\u3093\u306eGo\u8a00\u8a9e\u3067\uff15\u306e\u500d\u6570\u3068\uff15\u306e\u3064\u304f\u6570\u5b57\u3060\u3051\u30d2\u30ed\u30df\u30b4\u30fc\u3059\u308b\u3068\u3001\n@Joe-noh \u3055\u3093\u306eElixir\u8a00\u8a9e\u3067\uff15\u306e\u500d\u6570\u3068\uff15\u306e\u3064\u304f\u6570\u5b57\u3060\u3051\u30d2\u30ed\u30df\u30b4\u30fc\u3059\u308b\u304c\u697d\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3002\n\u30eb\u30fc\u30eb\u306f5\u304c\u3064\u304f\u6570\u5b57\u3067Exotic\u30015\u306e\u500d\u6570\u3067Japan\u3001\u4e21\u7acb\u3057\u305f\u3089Exotic Japan\u3002\u3055\u3089\u306b\u30015\u304c3\u56de\u4ee5\u4e0a\u51fa\u3066\u304d\u305f\u3068\u304d\u306fGoGoGo!!!\u3002\n\n\u30b3\u30fc\u30c9\n#include <string>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst auto isGoGoGo= [](int i) -> string {\n    const string str = to_string(i);\n    return count( str.begin(), str.end(), '5' ) >= 3 ?  \"GoGoGo!!! \":\"\";\n};\n\n\nconst auto isExotic = [](int i) -> string {\n    const string str = to_string(i);\n    return find( str.begin(), str.end(), '5' ) != str.end() ?  \"Exotic \":\"\";\n};\n\n\nconst auto isJapan = [](int i) -> string {\n    return i % 5 == 0 ? \"Japan \":\"\";\n};\n\n\nvoid hiromi( int eye)\n{\n    for(int i=0; i<=eye; i++) \n    {\n        cout << i << \" \" << isGoGoGo(i) << isExotic(i) << isJapan(i) << endl;\n    }\n}\n\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n    hiromi(240000000);\n    return 0;\n}\n\n\n\n\u6240\u611f\nSTL\u4fbf\u5229\u3002C++11\u4fbf\u5229\u3002\n# \u52d5\u6a5f\n\n@kmagai \u3055\u3093\u306e<a href=\"http://qiita.com/kmagai/items/d6091b6f7bdc721616fc\">Go\u8a00\u8a9e\u3067\uff15\u306e\u500d\u6570\u3068\uff15\u306e\u3064\u304f\u6570\u5b57\u3060\u3051\u30d2\u30ed\u30df\u30b4\u30fc\u3059\u308b</a>\u3068\u3001\n@Joe-noh \u3055\u3093\u306e<a href=\"http://qiita.com/Joe-noh/items/17aa395aeb046d8e8f0c\">Elixir\u8a00\u8a9e\u3067\uff15\u306e\u500d\u6570\u3068\uff15\u306e\u3064\u304f\u6570\u5b57\u3060\u3051\u30d2\u30ed\u30df\u30b4\u30fc\u3059\u308b</a>\u304c\u697d\u3057\u305d\u3046\u3060\u3063\u305f\u306e\u3067\u3002\n\n\n\u30eb\u30fc\u30eb\u306f5\u304c\u3064\u304f\u6570\u5b57\u3067Exotic\u30015\u306e\u500d\u6570\u3067Japan\u3001\u4e21\u7acb\u3057\u305f\u3089Exotic Japan\u3002\u3055\u3089\u306b\u30015\u304c3\u56de\u4ee5\u4e0a\u51fa\u3066\u304d\u305f\u3068\u304d\u306fGoGoGo!!!\u3002\n\n# \u30b3\u30fc\u30c9\n\n```cpp\n#include <string>\n#include <algorithm>\n#include <iostream>\n\nusing namespace std;\n\nconst auto isGoGoGo= [](int i) -> string {\n\tconst string str = to_string(i);\n\treturn count( str.begin(), str.end(), '5' ) >= 3 ?  \"GoGoGo!!! \":\"\";\n};\n\n\nconst auto isExotic = [](int i) -> string {\n\tconst string str = to_string(i);\n\treturn find( str.begin(), str.end(), '5' ) != str.end() ?  \"Exotic \":\"\";\n};\n\n\nconst auto isJapan = [](int i) -> string {\n\treturn i % 5 == 0 ? \"Japan \":\"\";\n};\n\n\nvoid hiromi( int eye)\n{\n\tfor(int i=0; i<=eye; i++) \n\t{\n\t\tcout << i << \" \" << isGoGoGo(i) << isExotic(i) << isJapan(i) << endl;\n\t}\n}\n\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n\thiromi(240000000);\n\treturn 0;\n}\n\n```\n\n# \u6240\u611f\n\n`STL`\u4fbf\u5229\u3002`C++11`\u4fbf\u5229\u3002\n", "tags": ["C++11"]}