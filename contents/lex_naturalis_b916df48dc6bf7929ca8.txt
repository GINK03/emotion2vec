{"context": " More than 1 year has passed since last update.\uff08\u5143\u30cd\u30bf\u306f http://okajima.air-nifty.com/b/2011/01/2011-ffac.html \u3092\u53c2\u7167\u306e\u3053\u3068\uff09\n\u601d\u8003\u306e\u9806\u756a\u306b\u66f8\u3044\u3066\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u3002\u8d85\u52b9\u7387\u60aa\u3044\u306e\u306f\u6587\u7cfb\u60c5\u5f31\u306e\u8a3c\u3067\u3042\u308b\u3002\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u3060\u3051\u3067\u306a\u3093\u3068\u304b\u3057\u3088\u3046\u3068\u9811\u5f35\u3063\u3066\u305f\u3089\u307e\u308b\u307e\u308b2\u6642\u9593\u304b\u304b\u3063\u305f\u3088\u2026\u2026\n\uff08\u5f53\u521d\u3001\u4e0d\u5f53\u306a\u4eee\u5b9a\u3092\u7f6e\u3044\u3066\u8003\u3048\u3066\u3044\u305f\u305b\u3044\u3067\u30016\u9023\u9396\u307e\u3067\u306f\u6b63\u3057\u3044\u306e\u306b\u305d\u3053\u3067\n\u3000\u9023\u9396\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u7d76\u5999\u306a\u7f60\u306b\u30cf\u30de\u3063\u3066\u6570\u5341\u5206\u6d6a\u8cbb\u3057\u305f\u8fba\u308a\u304c\u5b9f\u306b\u30c0\u30e1\uff09\n\uff10\uff0e\u30d5\u30a3\u30fc\u30eb\u30c9\u5168\u4f53\u3092\u76f8\u4e92\u306b\u9023\u7d50\u3057\u305f\u3077\u3088\u306e\u96c6\u5408\u306e\u96c6\u5408\u306b\u6392\u4ed6\u7684\u306b\u5206\u5272\u3057\u305f\u3044\uff01\n\uff11\uff0e\u307e\u305a\u5404\u3077\u3088\u3054\u3068\u306b\u305d\u308c\u3092\u57fa\u70b9\u3068\u3057\u305f5\u8fd1\u508d\u5185\u3067\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u3092\u4f5c\u308b\u3002\n\uff12\uff0e\u3053\u306e\u5404\u3077\u3088\u6bce\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u3092\u66f4\u306b\u9023\u7d50\u3057\u3066\u5927\u57df\u7684\u306a\u9023\u7d50\u96c6\u5408\u306b\u3057\u305f\u3044\u3002\n\uff13\uff0e\u7a4d\u304c\u7a7a\u96c6\u5408\u3067\u306a\u3044\u9023\u7d50\u96c6\u5408\u540c\u58eb\u306f\u76f8\u4e92\u306b\u9023\u7d50\u3057\u3066\u3044\u308b\u306e\u3067\u548c\u3092\u53d6\u308c\u3070\u3044\u3044\u3088\u306d\u3002\n\uff14\uff0e\u7dcf\u3066\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u306e\u9593\u3067\u3053\u306e\u64cd\u4f5c\u3092\u3059\u308c\u3070\u5206\u5272\u306e\u51fa\u6765\u4e0a\u304c\u308a\u3002\n\u3053\u308c\u304c\u3067\u304d\u308c\u3070\u3001\u8981\u7d20\u6570\u304c4\u4ee5\u4e0a\u306e\u9023\u7d50\u96c6\u5408\u306b\u5c5e\u3059\u308b\u3077\u3088\u304c\u6d88\u6ec5\u3057\u3066\u305d\u306e\u4ed6\u306e\u3077\u3088\u304c\u751f\u5b58\u3001\u3068\u306a\u308b\u3002\n\u3042\u3068\u306e\u4f5c\u696d\u306f\u81ea\u660e\u3002\u3057\u304b\u3057\u3001\u66f8\u3044\u3066\u3057\u307e\u3048\u3070\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u3053\u3068\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u3084\u305f\u3089\u6642\u9593\u304c\u2026\u2026\n\u6211\u306a\u304c\u3089\u6587\u7cfb\u60c5\u5f31\u3076\u308a\u3092\u907a\u61be\u306a\u304f\u767a\u63ee\u3059\u308b\u306b\u3082\u307b\u3069\u304c\u3042\u308b\u3068\u3044\u3046\u304b\u2026\u2026\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3067\u30820.035s\u3068\u304b\u3067\u5b9f\u884c\u3067\u304d\u308b\u306e\u3067\u901f\u5ea6\u7684\u306b\u306f\u307e\u305a\u307e\u305a\u304b\u3002\n\nPuyoPuyoSeries.hs\n\nmodule Main where\nimport Data.List\nimport Data.Ord\n\ndata Colour = R | G | Y | E\n  deriving (Ord, Eq)\ninstance Show Colour where\n  show R = \"R\"\n  show G = \"G\"\n  show Y = \"Y\"\n  show E = \" \"\n\ntype Position = (Int,Int)\ntype Cell = (Position, Colour)\ntype Field = [Cell]\n\nwidth = 6\ndepth = 13\ngiven :: [[Colour]]\ngiven =[[G,G,G,R,Y,Y,Y,G,Y,R,G,R,E],\n        [R,R,R,Y,R,G,G,Y,G,Y,Y,Y,E],\n        [Y,Y,Y,G,R,Y,Y,R,Y,G,G,Y,G],\n        [G,G,G,Y,G,R,R,Y,R,Y,Y,G,Y],\n        [Y,Y,Y,G,R,Y,Y,R,Y,R,R,Y,R],\n        [R,R,R,G,G,R,R,G,G,G,R,G,R]]\n\n\nfromDoubleList :: [[Colour]] -> Field\nfromDoubleList dl = [((x,y), (pad dl)!!(x-1)!!(y-1)) |x<-[1..width],y<-[1..depth]]\n  where\n    pad [] = []\n    pad (x:xs) = (take depth $ x ++ (repeat E)) : pad xs\n\ntoDoubleList :: Field -> [[Colour]]\ntoDoubleList asoc = \n  take width $ map (take depth) $ iterate (drop depth) $\n   map (lookupColour asoc) [(x,y)|x<-[1..width],y<-[1..depth]]\n\nlookupColour :: Field -> Position -> Colour\nlookupColour asoc key = case lookup key asoc of\n  Just x -> x\n  Nothing -> E\n\n\nsameColourNeighbours :: Field -> Position -> [Position]\nsameColourNeighbours f p@(x,y) = \n  filter (hasSameColour p) [(x-1,y),(x+1,y),(x,y-1),(x,y+1),(x,y)]\n    where hasSameColour p1 p2 = \n           lookupColour f p1 /= E && lookupColour f p2 /= E &&\n           (lookupColour f p1)==(lookupColour f p2)\n\nsameColourCells :: Field -> Cell -> [Cell]\nsameColourCells f (p@(x,y), c) = filter ((`elem` (sameColourNeighbours f p)).fst) f\n\n\n-- \u4e0a\u4e0b\u5de6\u53f3\u306e\u8fd1\u508d\u3067\u540c\u8272\u306e\u3082\u306e\u306e\u30ea\u30b9\u30c8\u306e\u5404\u30bb\u30eb\u3054\u3068\u306e\u30ea\u30b9\u30c8\u3092\u7e2e\u7d04\u3057\u3066\n-- \u9023\u7d50\u3057\u3066\u3044\u308b\u30bb\u30eb\u306e\u96c6\u56e3\u3054\u3068\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\ngroups :: Field -> [[Cell]]\ngroups f = reduce $ groups' f f\n  where groups' f [] = []\n        groups' f (c:cs) = (sameColourCells f c): groups' f cs\n\n-- \u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u306e\u9593\u3067\u4ea4\u5dee\u304c\u7a7a\u3067\u306a\u3044\u3082\u306e\u540c\u58eb\u3092\u5408\u4f75\u3057\u3066\u7e2e\u7d04\nreduce [] = []\nreduce (x:xs) = case (and $ map null $ map (intersect x) xs) of\n  True -> x : reduce xs\n  False -> reduce (unionWithIntersectibles x xs)\n\n-- \u30ea\u30b9\u30c8(y:ys)\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u3001x\u3068\u4ea4\u5dee\u3059\u308b\u8981\u7d20\u306b\u3064\u3044\u3066x\u3092\u5408\u4f75\u3059\u308b\nunionWithIntersectibles x [] = []\nunionWithIntersectibles x (y:ys) = case intersect x y of\n  [] -> y : (unionWithIntersectibles x ys)\n  _  -> (union x y) : (unionWithIntersectibles x ys)\n\n-- \u9023\u7d50\u3057\u3066\u3044\u308b\u30bb\u30eb\u306e\u96c6\u56e3\u306e\u6570\u304c4\u672a\u6e80\u306a\u3089\u305d\u308c\u3089\u306e\u96c6\u56e3\u306e\u30bb\u30eb\u306f\u751f\u6b8b\u3059\u308b\nsurvival :: Field -> Field\nsurvival = concat . filter ((<4).length) . groups\n\n-- \u4e8c\u91cd\u30ea\u30b9\u30c8\u306b\u623b\u3057\u3066E\u30bb\u30eb\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308c\u3070\u305d\u308c\u3067\u843d\u4e0b\u30fb\u6d88\u53bb\u51e6\u7406\u304c\u3067\u304d\u308b\nerase :: Field -> Field\nerase = fromDoubleList . map (filter (/=E)) . toDoubleList\n\n-- \u4e0e\u3048\u3089\u308c\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u72b6\u614b\u306e\u6b21\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u72b6\u614b\u3092\u8fd4\u3059\nstep :: Field -> Field\nstep = erase. survival\n\n-------------\n-- \u8fd1\u508d\u3092\u518d\u5e30\u7684\u306b\u63a2\u7d22\u3057\u3066\u3044\u304f\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\uff080.075s\u3068\u3053\u3061\u3089\u306e\u65b9\u304c\u5c11\u3057\u9045\u3044\uff09\nlinkedcells :: Field -> Cell -> [Cell]\nlinkedcells f c = foldl union [] (findpath f c)\n\nfindpath :: Field -> Cell -> [[Cell]]\nfindpath f c = fpath f [] c\n  where fpath f p c = case (sameColourCells f c)\\\\(c:p) of\n          [] -> [(c:p)]\n          _ -> concat $ map (fpath f (c:p)) ((sameColourCells f c)\\\\(c:p))\n\nsurvival' f = filter ((<4).length.linkedcells f) f\nstep' = erase. survival'\n-------------\n\nmain = do\n    putStrLn \"\"\n    sequence $ map printfield $ take 20 $  iterate step $ fromDoubleList given\n    return ()\n\n-------------\nprintfield :: Field -> IO ()\nprintfield [] = putStrLn \"\"\nprintfield f = do\n    let flist = reverse $ transpose $ toDoubleList f\n    putStrLn \"\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"\n    printlist flist\n      where \n        printlist [] = putStrLn \"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"\n        printlist (l:ls) = (print $ concat $ map show l) >> (printlist ls)\n--------------\n\n\n\n\u4e00\u5fdc\u51fa\u529b\u7d50\u679c\n\n\n\"\"\"\"\"\"\"\"\n\"  GYRR\"\n\"RYYGYG\"\n\"GYGYRR\"\n\"RYGYRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"   YRR\"\n\"R GGYG\"\n\"G GYRR\"\n\"R GYRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"    RR\"\n\"R  YYG\"\n\"G  YRR\"\n\"R  YRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"     R\"\n\"R   RG\"\n\"G   RR\"\n\"R   RG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R    R\"\n\"G    G\"\n\"R    G\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGYRY \"\n\"GYRYRR\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGYR  \"\n\"GYRYY \"\n\"YGYRY \"\n\"YGYRY \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGY   \"\n\"GYRR  \"\n\"YGYR  \"\n\"YGYR  \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YG    \"\n\"GYY   \"\n\"YGY   \"\n\"YGY   \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"Y     \"\n\"GG    \"\n\"YG    \"\n\"YG    \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"Y     \"\n\"Y     \"\n\"Y     \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"R     \"\n\"G     \"\n\"RRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"R  GRG\"\n\"GYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\" YGYGG\"\n\" RYGYR\"\n\" RYGYR\"\n\"RRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\"  GYGG\"\n\"  YGYR\"\n\"  YGYR\"\n\" YYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\"   YGG\"\n\"   GYR\"\n\"   GYR\"\n\"  GGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"    RG\"\n\"    GG\"\n\"    YR\"\n\"   GYR\"\n\"   YYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"     G\"\n\"     G\"\n\"     R\"\n\"    RR\"\n\"   GGR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"     G\"\n\"   GGG\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"\"\"\"\"\"\"\"\n\n\uff08\u5143\u30cd\u30bf\u306f http://okajima.air-nifty.com/b/2011/01/2011-ffac.html \u3092\u53c2\u7167\u306e\u3053\u3068\uff09\n\n\u601d\u8003\u306e\u9806\u756a\u306b\u66f8\u3044\u3066\u308b\u306e\u3067\u305d\u306e\u307e\u307e\u3002\u8d85\u52b9\u7387\u60aa\u3044\u306e\u306f\u6587\u7cfb\u60c5\u5f31\u306e\u8a3c\u3067\u3042\u308b\u3002\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u3060\u3051\u3067\u306a\u3093\u3068\u304b\u3057\u3088\u3046\u3068\u9811\u5f35\u3063\u3066\u305f\u3089\u307e\u308b\u307e\u308b2\u6642\u9593\u304b\u304b\u3063\u305f\u3088\u2026\u2026\n\uff08\u5f53\u521d\u3001\u4e0d\u5f53\u306a\u4eee\u5b9a\u3092\u7f6e\u3044\u3066\u8003\u3048\u3066\u3044\u305f\u305b\u3044\u3067\u30016\u9023\u9396\u307e\u3067\u306f\u6b63\u3057\u3044\u306e\u306b\u305d\u3053\u3067\n\u3000\u9023\u9396\u304c\u6b62\u307e\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u7d76\u5999\u306a\u7f60\u306b\u30cf\u30de\u3063\u3066\u6570\u5341\u5206\u6d6a\u8cbb\u3057\u305f\u8fba\u308a\u304c\u5b9f\u306b\u30c0\u30e1\uff09\n\n\uff10\uff0e\u30d5\u30a3\u30fc\u30eb\u30c9\u5168\u4f53\u3092\u76f8\u4e92\u306b\u9023\u7d50\u3057\u305f\u3077\u3088\u306e\u96c6\u5408\u306e\u96c6\u5408\u306b\u6392\u4ed6\u7684\u306b\u5206\u5272\u3057\u305f\u3044\uff01\n\uff11\uff0e\u307e\u305a\u5404\u3077\u3088\u3054\u3068\u306b\u305d\u308c\u3092\u57fa\u70b9\u3068\u3057\u305f5\u8fd1\u508d\u5185\u3067\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u3092\u4f5c\u308b\u3002\n\uff12\uff0e\u3053\u306e\u5404\u3077\u3088\u6bce\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u3092\u66f4\u306b\u9023\u7d50\u3057\u3066\u5927\u57df\u7684\u306a\u9023\u7d50\u96c6\u5408\u306b\u3057\u305f\u3044\u3002\n\uff13\uff0e\u7a4d\u304c\u7a7a\u96c6\u5408\u3067\u306a\u3044\u9023\u7d50\u96c6\u5408\u540c\u58eb\u306f\u76f8\u4e92\u306b\u9023\u7d50\u3057\u3066\u3044\u308b\u306e\u3067\u548c\u3092\u53d6\u308c\u3070\u3044\u3044\u3088\u306d\u3002\n\uff14\uff0e\u7dcf\u3066\u306e\u5c40\u6240\u7684\u306a\u9023\u7d50\u96c6\u5408\u306e\u9593\u3067\u3053\u306e\u64cd\u4f5c\u3092\u3059\u308c\u3070\u5206\u5272\u306e\u51fa\u6765\u4e0a\u304c\u308a\u3002\n\n\u3053\u308c\u304c\u3067\u304d\u308c\u3070\u3001\u8981\u7d20\u6570\u304c4\u4ee5\u4e0a\u306e\u9023\u7d50\u96c6\u5408\u306b\u5c5e\u3059\u308b\u3077\u3088\u304c\u6d88\u6ec5\u3057\u3066\u305d\u306e\u4ed6\u306e\u3077\u3088\u304c\u751f\u5b58\u3001\u3068\u306a\u308b\u3002\n\u3042\u3068\u306e\u4f5c\u696d\u306f\u81ea\u660e\u3002\u3057\u304b\u3057\u3001\u66f8\u3044\u3066\u3057\u307e\u3048\u3070\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u3053\u3068\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u3084\u305f\u3089\u6642\u9593\u304c\u2026\u2026\n\u6211\u306a\u304c\u3089\u6587\u7cfb\u60c5\u5f31\u3076\u308a\u3092\u907a\u61be\u306a\u304f\u767a\u63ee\u3059\u308b\u306b\u3082\u307b\u3069\u304c\u3042\u308b\u3068\u3044\u3046\u304b\u2026\u2026\n\n\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3067\u30820.035s\u3068\u304b\u3067\u5b9f\u884c\u3067\u304d\u308b\u306e\u3067\u901f\u5ea6\u7684\u306b\u306f\u307e\u305a\u307e\u305a\u304b\u3002\n\n```hs:PuyoPuyoSeries.hs\n\nmodule Main where\nimport Data.List\nimport Data.Ord\n\ndata Colour = R | G | Y | E\n  deriving (Ord, Eq)\ninstance Show Colour where\n  show R = \"R\"\n  show G = \"G\"\n  show Y = \"Y\"\n  show E = \" \"\n\ntype Position = (Int,Int)\ntype Cell = (Position, Colour)\ntype Field = [Cell]\n\nwidth = 6\ndepth = 13\ngiven :: [[Colour]]\ngiven =[[G,G,G,R,Y,Y,Y,G,Y,R,G,R,E],\n        [R,R,R,Y,R,G,G,Y,G,Y,Y,Y,E],\n        [Y,Y,Y,G,R,Y,Y,R,Y,G,G,Y,G],\n        [G,G,G,Y,G,R,R,Y,R,Y,Y,G,Y],\n        [Y,Y,Y,G,R,Y,Y,R,Y,R,R,Y,R],\n        [R,R,R,G,G,R,R,G,G,G,R,G,R]]\n\n\nfromDoubleList :: [[Colour]] -> Field\nfromDoubleList dl = [((x,y), (pad dl)!!(x-1)!!(y-1)) |x<-[1..width],y<-[1..depth]]\n  where\n    pad [] = []\n    pad (x:xs) = (take depth $ x ++ (repeat E)) : pad xs\n\ntoDoubleList :: Field -> [[Colour]]\ntoDoubleList asoc = \n  take width $ map (take depth) $ iterate (drop depth) $\n   map (lookupColour asoc) [(x,y)|x<-[1..width],y<-[1..depth]]\n\nlookupColour :: Field -> Position -> Colour\nlookupColour asoc key = case lookup key asoc of\n  Just x -> x\n  Nothing -> E\n\n\nsameColourNeighbours :: Field -> Position -> [Position]\nsameColourNeighbours f p@(x,y) = \n  filter (hasSameColour p) [(x-1,y),(x+1,y),(x,y-1),(x,y+1),(x,y)]\n    where hasSameColour p1 p2 = \n           lookupColour f p1 /= E && lookupColour f p2 /= E &&\n           (lookupColour f p1)==(lookupColour f p2)\n\nsameColourCells :: Field -> Cell -> [Cell]\nsameColourCells f (p@(x,y), c) = filter ((`elem` (sameColourNeighbours f p)).fst) f\n\n\n-- \u4e0a\u4e0b\u5de6\u53f3\u306e\u8fd1\u508d\u3067\u540c\u8272\u306e\u3082\u306e\u306e\u30ea\u30b9\u30c8\u306e\u5404\u30bb\u30eb\u3054\u3068\u306e\u30ea\u30b9\u30c8\u3092\u7e2e\u7d04\u3057\u3066\n-- \u9023\u7d50\u3057\u3066\u3044\u308b\u30bb\u30eb\u306e\u96c6\u56e3\u3054\u3068\u306e\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\ngroups :: Field -> [[Cell]]\ngroups f = reduce $ groups' f f\n  where groups' f [] = []\n        groups' f (c:cs) = (sameColourCells f c): groups' f cs\n\n-- \u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u306e\u9593\u3067\u4ea4\u5dee\u304c\u7a7a\u3067\u306a\u3044\u3082\u306e\u540c\u58eb\u3092\u5408\u4f75\u3057\u3066\u7e2e\u7d04\nreduce [] = []\nreduce (x:xs) = case (and $ map null $ map (intersect x) xs) of\n  True -> x : reduce xs\n  False -> reduce (unionWithIntersectibles x xs)\n\n-- \u30ea\u30b9\u30c8(y:ys)\u306e\u8981\u7d20\u306b\u5bfe\u3057\u3066\u3001x\u3068\u4ea4\u5dee\u3059\u308b\u8981\u7d20\u306b\u3064\u3044\u3066x\u3092\u5408\u4f75\u3059\u308b\nunionWithIntersectibles x [] = []\nunionWithIntersectibles x (y:ys) = case intersect x y of\n  [] -> y : (unionWithIntersectibles x ys)\n  _  -> (union x y) : (unionWithIntersectibles x ys)\n\n-- \u9023\u7d50\u3057\u3066\u3044\u308b\u30bb\u30eb\u306e\u96c6\u56e3\u306e\u6570\u304c4\u672a\u6e80\u306a\u3089\u305d\u308c\u3089\u306e\u96c6\u56e3\u306e\u30bb\u30eb\u306f\u751f\u6b8b\u3059\u308b\nsurvival :: Field -> Field\nsurvival = concat . filter ((<4).length) . groups\n\n-- \u4e8c\u91cd\u30ea\u30b9\u30c8\u306b\u623b\u3057\u3066E\u30bb\u30eb\u3092\u30d5\u30a3\u30eb\u30bf\u30fc\u3059\u308c\u3070\u305d\u308c\u3067\u843d\u4e0b\u30fb\u6d88\u53bb\u51e6\u7406\u304c\u3067\u304d\u308b\nerase :: Field -> Field\nerase = fromDoubleList . map (filter (/=E)) . toDoubleList\n\n-- \u4e0e\u3048\u3089\u308c\u305f\u30d5\u30a3\u30fc\u30eb\u30c9\u72b6\u614b\u306e\u6b21\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u72b6\u614b\u3092\u8fd4\u3059\nstep :: Field -> Field\nstep = erase. survival\n\n-------------\n-- \u8fd1\u508d\u3092\u518d\u5e30\u7684\u306b\u63a2\u7d22\u3057\u3066\u3044\u304f\u30f4\u30a1\u30fc\u30b8\u30e7\u30f3\uff080.075s\u3068\u3053\u3061\u3089\u306e\u65b9\u304c\u5c11\u3057\u9045\u3044\uff09\nlinkedcells :: Field -> Cell -> [Cell]\nlinkedcells f c = foldl union [] (findpath f c)\n\nfindpath :: Field -> Cell -> [[Cell]]\nfindpath f c = fpath f [] c\n  where fpath f p c = case (sameColourCells f c)\\\\(c:p) of\n          [] -> [(c:p)]\n          _ -> concat $ map (fpath f (c:p)) ((sameColourCells f c)\\\\(c:p))\n\nsurvival' f = filter ((<4).length.linkedcells f) f\nstep' = erase. survival'\n-------------\n\nmain = do\n\tputStrLn \"\"\n\tsequence $ map printfield $ take 20 $  iterate step $ fromDoubleList given\n\treturn ()\n\n-------------\nprintfield :: Field -> IO ()\nprintfield [] = putStrLn \"\"\nprintfield f = do\n\tlet flist = reverse $ transpose $ toDoubleList f\n\tputStrLn \"\\n\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"\n\tprintlist flist\n\t  where \n\t  \tprintlist [] = putStrLn \"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\\\"\"\n\t  \tprintlist (l:ls) = (print $ concat $ map show l) >> (printlist ls)\n--------------\n\n```\n\n\u4e00\u5fdc\u51fa\u529b\u7d50\u679c\n\n```\n\n\n\"\"\"\"\"\"\"\"\n\"  GYRR\"\n\"RYYGYG\"\n\"GYGYRR\"\n\"RYGYRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"   YRR\"\n\"R GGYG\"\n\"G GYRR\"\n\"R GYRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"    RR\"\n\"R  YYG\"\n\"G  YRR\"\n\"R  YRG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"     R\"\n\"R   RG\"\n\"G   RR\"\n\"R   RG\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R    R\"\n\"G    G\"\n\"R    G\"\n\"YGYRYG\"\n\"GYRYRG\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGYRY \"\n\"GYRYRR\"\n\"YGYRYR\"\n\"YGYRYR\"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGYR  \"\n\"GYRYY \"\n\"YGYRY \"\n\"YGYRY \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YGY   \"\n\"GYRR  \"\n\"YGYR  \"\n\"YGYR  \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"YG    \"\n\"GYY   \"\n\"YGY   \"\n\"YGY   \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"Y     \"\n\"GG    \"\n\"YG    \"\n\"YG    \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"R     \"\n\"G     \"\n\"R     \"\n\"Y     \"\n\"Y     \"\n\"Y     \"\n\"YRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"R     \"\n\"G     \"\n\"RRRGRG\"\n\"RYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"R  GRG\"\n\"GYGYGG\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"GRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\" YGYGG\"\n\" RYGYR\"\n\" RYGYR\"\n\"RRYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\"  GYGG\"\n\"  YGYR\"\n\"  YGYR\"\n\" YYGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"   GRG\"\n\"   YGG\"\n\"   GYR\"\n\"   GYR\"\n\"  GGYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"    RG\"\n\"    GG\"\n\"    YR\"\n\"   GYR\"\n\"   YYR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"     G\"\n\"     G\"\n\"     R\"\n\"    RR\"\n\"   GGR\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"     G\"\n\"   GGG\"\n\"\"\"\"\"\"\"\"\n\n\"\"\"\"\"\"\"\"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"      \"\n\"\"\"\"\"\"\"\"\n```\n\n", "tags": ["\u60c5\u5f31", "Haskell"]}