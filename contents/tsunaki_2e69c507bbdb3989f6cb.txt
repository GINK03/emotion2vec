{"context": " More than 1 year has passed since last update.\u3053\u3053\u6700\u8fd1\u3001go, python, node\u3068\u7528\u9014\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u305f\u306e\u3067\u3001VM\u4e0a\u306b\u5b9f\u884c\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\nVirtualBox\u306bboot2docker(core Linux)\u3092\u69cb\u7bc9\u3057\u3001\u4ee5\u4e0b\u306e\u5b9f\u884c\u74b0\u5883\u3092\u69cb\u7bc9\n  \u30fbgo lang\n  \u30fbnode.js(python)\n\u3010\u7528\u610f\u3057\u305f\u74b0\u5883 \u3011\n\u30fbVirtualBox\n\u30fbVagrant v1.7.1\nVMware Fusion\u3082\u6301\u3063\u3066\u308b\u306e\u3067\u305d\u3061\u3089\u3067\u3082\u78ba\u8a8d\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3067\u3059\u304c\u3001\n\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u30d1\u30b9\u3002\n\u3000\u53c2\u8003\u3000\uff1a\u3000https://www.vagrantup.com/vmware\n\u3000\u3000\u3000\u3000\u3000\u3000$79 (\u22529,384 yen) \u3061\u3087\u3068\u9ad8\u3044...\n\nVagrant \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u3001dmg\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\nVirtualBox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u516c\u5f0f\u30b5\u30a4\u30c8\u304b\u3089\u3001OS X\u7528\u306edmg\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\nboot2docker\u306e\u6e96\u5099\n$ mkdir -p /Users/<USER NAME>/Documents/Vagrant/boot2docker\n$ cd /Users/<USER NAME>/Documents/Vagrant/boot2docker\n\n# boot2docker\u306e\u8d77\u52d5\n$ vagrant init mitchellh/boot2docker\n\n\nboot2docker\u306eISO\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\n(ISO\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f\u8d77\u52d5\u3078)\n\u3053\u3053\u304b\u3089Packer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u4ee5\u4e0b\u3092\u5b9f\u884c\n\n$ cd /Users/<USER NAME>/Documents/Vagrant\n$ git clone https://github.com/mitchellh/boot2docker-vagrant-box.git\n$ cd boot2docker-vagrant-box.git\n$ vagrant up\n$ vagrant ssh -c 'cd /vagrant && sudo ./build-iso.sh'\n$ vagrant destroy --force\n$ packer build -only=virtualbox-iso template.json\n\n\u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068\n \u30fbb2d.iso\n \u30fbboot2docker_virtualbox.box\n \u30fbboot2docker_virtualbox.iso\n\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\nboot2docker\u306e\u8d77\u52d5\n\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\n\n$vi Vagrantfile\n\n\u3000\uff1a\u3000\u7701\u7565\n# Create a forwarded port mapping which allows access to a specific port\n# within the machine from a port on the host machine. In the example below,\n# accessing \"localhost:8080\" will access port 80 on the guest machine.\n# config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n# Add port forwarding\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n# Create a private network, which allows host-only access to the machine\n# using a specific IP.\n# config.vm.network \"private_network\", ip: \"192.168.33.10\"\n\u3000\uff1a\u3000\u7701\u7565\n\nboot2docker\u3092\u8d77\u52d5\n$ vagrant up\n$ vagrant ssh\n\n\n\nboot2docker\u306e\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\n\u6b21\u306bboot2docker\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046\u3002\nboot2docker\u4e0a\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n$ sudo su -\n# cat > /var/lib/boot2docker/bootlocal.sh <<EOF\n> echo \"tar cf /var/lib/boot2docker/userdata.tar . -C /home/docker/\" >> /opt/shutdown.sh\n> EOF\n# chmod +x /var/lib/boot2docker/bootlocal.sh\n# sudo reboot\n\n\u203b\u3053\u308c\u3067reboot\u3084shutdown\u306e\u6642\u306b/home/docker/\u304c/var/lib/boot2docker/userdata.tar\u306b\n\u3000\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3055\u308c\u308b\u3002 \n\u3010\u78ba\u8a8d\u3011\nMac\u304b\u3089ssh \n$ vagrant ssh\n# pssword : tcuser\n\n# boot2docker\u3067\u306e\u4f5c\u696d\n$ touch test\n$ ls -l \n  -rw-r--r--    1 docker   staff            0 Dec 13 13:22 test\n$ sudo reboot\n\nMac\u304b\u3089\u518d\u3073ssh \n$ vagrant ssh\n# pssword : tcuser\n\nboot2docker\n$ ls -l \n   -rw-r--r--    1 docker   staff            0 Dec 13 13:22 test\n# \u5b58\u5728\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\ndocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210(Golang)\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Dockerfile\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\n \u203b docker pull dockerfile/go \u3067\u3082OK\n\ngo lang\n$ mkdir golang\n$ cd golang\n$ vi Dockerfile\n\n#\n# Go Dockerfile\n#\n# https://github.com/dockerfile/go\n#\n\n# Pull base image.\nFROM dockerfile/ubuntu\n\n# Install Go\nRUN \\\n  mkdir -p /goroot && \\\n  curl https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz | tar xvzf - -C /goroot --strip-components=1\n\n# Set environment variables.\nENV GOROOT /goroot\nENV GOPATH /gopath\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\n\n# Define working directory.\nWORKDIR /gopath\n\n# Define default command.\nCMD [\"bash\"]\n\ndocker image\u306e\u4f5c\u6210\n$ docker build -t ubuntu/golang .\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/golang       latest              ff635337559a        3 minutes ago       614 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n\ndocker\u4e0a\u306ego\u3067HelloWorld\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n$ docker run -i -p 80:80 -t ubuntu/golang /bin/bash\n\n$ go version\ngo version go1.3.1 linux/amd64\n\n$ vi testserver.go\n\npackage main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n)\n\nfunc indexHandler(w http.ResponseWriter, r *http.Request) {\n  fmt.Fprintf(w, \"Hello Go lang\")\n}\n\nfunc main() {\n  http.HandleFunc(\"/\", indexHandler)\n  http.ListenAndServe(\":80\", nil)\n}\n\n\n# \u30c6\u30b9\u30c8\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u306a\u3057\u3067\u5b9f\u65bd\n$ go run testserver.go\n\n\nMac\u304b\u3089\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u5b9f\u884c\u306e\u78ba\u8a8d\n\n\n\ndocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210(nodejs, python)\npython \u74b0\u5883\u306fnodejs\u306e\u30d9\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067Nodejs\u74b0\u5883\u306e\u307f\u4f5c\u6210\n$ mkdir ~/nodejs\n$ cd ~/nodejs\n$ vi Dockerfile\n\n\n#\n# Node.js Dockerfile\n#\n# https://github.com/dockerfile/nodejs\n#\n\n# Pull base image.\nFROM dockerfile/python\n\n# Install Node.js\nRUN \\\n  cd /tmp && \\\n  wget http://nodejs.org/dist/node-latest.tar.gz && \\\n  tar xvzf node-latest.tar.gz && \\\n  rm -f node-latest.tar.gz && \\\n  cd node-v* && \\\n  ./configure && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make install && \\\n  cd /tmp && \\\n  rm -rf /tmp/node-v* && \\\n  npm install -g npm && \\\n  echo -e '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bashrc\n\n# Define working directory.\nWORKDIR /data\n\n# Define default command.\nCMD [\"bash\"]\n\n\ndocker image\u306e\u4f5c\u6210\n\n$ docker build -t ubuntu/nodejs .\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/nodejs       latest              60d7f5969d7a        30 seconds ago      496.6 MB\nubuntu/golang       latest              42a919d3c0ea        23 minutes ago      614 MB\ndockerfile/python   latest              f08c82e36872        8 days ago          471 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n\n$ docker run -i -p 80:80 -t ubuntu/nodejs /bin/bash\n\n$ npm version\n{ http_parser: '1.0',\n  node: '0.10.33',\n  v8: '3.14.5.9',\n  ares: '1.9.0-DEV',\n  uv: '0.10.29',\n  zlib: '1.2.3',\n  modules: '11',\n  openssl: '1.0.1j',\n  npm: '2.1.12' }\n\n# server\u306e\u4f5c\u6210\n$ vi app.js\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World node.js');\n});\nserver.listen(80);\n\n\n\n\u540c\u3058\u74b0\u5883\u3067python\u3082\u30c6\u30b9\u30c8\n# ubuntu/nodejs\u3067\u5b9f\u884c\n\n$ python --version\nPython 2.7.6\n\n$ vi index.html\n<html>\n<body>\n    Hello Python\n</body>\n</html>\n\n$ python -m SimpleHTTPServer 80\n\n\n\n\n\ndocker \u4e0d\u8981\u30b3\u30f3\u30c6\u30ca\u306e\u524a\u9664\ndocker\u3067\u306f\u8d77\u52d5\u5f8c\u306e\u5dee\u5206\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u3067\u4e0d\u8981\u306b\u306a\u3063\u305f\u3089\u524a\u9664\u3059\u308b\u3002\n$ docker ps -a\nCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS                      PORTS               NAMES\n8675a8897319        ubuntu/nodejs:latest   \"/bin/bash\"         8 seconds ago       Exited (0) 7 seconds ago                        hungry_carson       \nf71e1d22b5e6        ubuntu/golang:latest   \"/bin/bash\"         56 seconds ago      Exited (0) 54 seconds ago                       prickly_shockley    \n\n#\u4e0d\u8981\u30b3\u30f3\u30c6\u30ca\u306eID\u3092\u6307\u5b9a\n$ docker rm 8675a8897319 f71e1d22b5e6\n\n\n# \u30a4\u30e1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u5834\u5408\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/nodejs       latest              60d7f5969d7a        About an hour ago   496.6 MB\nubuntu/golang       latest              42a919d3c0ea        About an hour ago   614 MB\ndockerfile/python   latest              f08c82e36872        8 days ago          471 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n\n$ docker rmi < IMAGE ID >\n\n\n\u30b3\u30f3\u30c6\u30ca\u3084\u30a4\u30e1\u30fc\u30b8\u3092\u4e00\u62ec\u3067\u524a\u9664\u3059\u308b\u5834\u5408\n# remove container\n$ docker rm `docker ps -a -q`\n\n# remove images\n$ docker rmi $(docker images | awk '/^<none>/ { print $3 }')\n\n\u30de\u30eb\u30c1\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3084\u30a2\u30b8\u30e3\u30a4\u30eb\u958b\u767a\u3059\u308b\u969b\u306b\u306fGitHub\u3067\u30bd\u30fc\u30b9\u7ba1\u7406\u3057\u3066\nDockerfile\u3067\u74b0\u5883\u7ba1\u7406\u3059\u308c\u3070\u30e2\u30d3\u30ea\u30c6\u30a3\u306b\u9069\u3057\u305f\u958b\u767a\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u308d\u305d\u308d\u3001Mac\u304c\u9650\u754c\u306a\u306e\u3067boot2docker\u306f\u30d9\u30a2\u30e1\u30bf\u30eb\u3067\u69cb\u7bc9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3053\u3053\u6700\u8fd1\u3001go, python, node\u3068\u7528\u9014\u306b\u3088\u3063\u3066\u69d8\u3005\u306a\u8a00\u8a9e\u3067\u958b\u767a\u3059\u308b\u3053\u3068\u304c\u591a\u304f\u306a\u3063\u305f\u306e\u3067\u3001VM\u4e0a\u306b\u5b9f\u884c\u74b0\u5883\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\nVirtualBox\u306bboot2docker(core Linux)\u3092\u69cb\u7bc9\u3057\u3001\u4ee5\u4e0b\u306e\u5b9f\u884c\u74b0\u5883\u3092\u69cb\u7bc9\n  \u30fbgo lang\n  \u30fbnode.js(python)\n\n\u3010\u7528\u610f\u3057\u305f\u74b0\u5883 \u3011\n\u30fbVirtualBox\n\u30fbVagrant v1.7.1\n\nVMware Fusion\u3082\u6301\u3063\u3066\u308b\u306e\u3067\u305d\u3061\u3089\u3067\u3082\u78ba\u8a8d\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3067\u3059\u304c\u3001\n\u30e9\u30a4\u30bb\u30f3\u30b9\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u4eca\u56de\u306f\u30d1\u30b9\u3002\n\u3000\u53c2\u8003\u3000\uff1a\u3000https://www.vagrantup.com/vmware\n\u3000\u3000\u3000\u3000\u3000\u3000$79 (\u22529,384 yen) \u3061\u3087\u3068\u9ad8\u3044...\n## Vagrant \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n<a href=\"http://www.vagrantup.com/\" target=\"_blank\">\u516c\u5f0f\u30b5\u30a4\u30c8</a>\u304b\u3089\u3001dmg\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n\n## VirtualBox\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">\u516c\u5f0f\u30b5\u30a4\u30c8</a>\u304b\u3089\u3001OS X\u7528\u306edmg\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n\n## boot2docker\u306e\u6e96\u5099\n\n```bash\n$ mkdir -p /Users/<USER NAME>/Documents/Vagrant/boot2docker\n$ cd /Users/<USER NAME>/Documents/Vagrant/boot2docker\n\n# boot2docker\u306e\u8d77\u52d5\n$ vagrant init mitchellh/boot2docker\n```\n###boot2docker\u306eISO\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\n(ISO\u304c\u4e0d\u8981\u306a\u5834\u5408\u306f\u8d77\u52d5\u3078)\n\n<a href=\"https://www.packer.io/downloads.html\">\u3053\u3053</a>\u304b\u3089Packer\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5f8c\u306b\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\u4ee5\u4e0b\u3092\u5b9f\u884c\n\n```bash\n\n$ cd /Users/<USER NAME>/Documents/Vagrant\n$ git clone https://github.com/mitchellh/boot2docker-vagrant-box.git\n$ cd boot2docker-vagrant-box.git\n$ vagrant up\n$ vagrant ssh -c 'cd /vagrant && sudo ./build-iso.sh'\n$ vagrant destroy --force\n$ packer build -only=virtualbox-iso template.json\n```\n\u4e0a\u8a18\u3092\u5b9f\u884c\u3059\u308b\u3068\n \u30fbb2d.iso\n \u30fbboot2docker_virtualbox.box\n \u30fbboot2docker_virtualbox.iso\n\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n------\n\n### boot2docker\u306e\u8d77\u52d5\n\n\u30dd\u30fc\u30c8\u30d5\u30a9\u30ef\u30fc\u30c9\u3092\u8a2d\u5b9a\u3059\u308b\n\n``` bash\n\n$vi Vagrantfile\n\n\u3000\uff1a\u3000\u7701\u7565\n# Create a forwarded port mapping which allows access to a specific port\n# within the machine from a port on the host machine. In the example below,\n# accessing \"localhost:8080\" will access port 80 on the guest machine.\n# config.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n# Add port forwarding\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080\n\n# Create a private network, which allows host-only access to the machine\n# using a specific IP.\n# config.vm.network \"private_network\", ip: \"192.168.33.10\"\n\u3000\uff1a\u3000\u7701\u7565\n```\n\nboot2docker\u3092\u8d77\u52d5\n\n```bash\n$ vagrant up\n$ vagrant ssh\n````\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-13 22.11.15.png](https://qiita-image-store.s3.amazonaws.com/0/52867/8069ec82-84fc-1c7a-b62f-00dc1a07db3f.png)\n\n\n\n\n\n## boot2docker\u306e\u30c7\u30fc\u30bf\u6c38\u7d9a\u5316\n\n\u6b21\u306bboot2docker\u3067\u4f5c\u6210\u3057\u305f\u30c7\u30fc\u30bf\u306e\u6c38\u7d9a\u5316\u3092\u884c\u3046\u3002\n\nboot2docker\u4e0a\u3067\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\n\n```bash\n$ sudo su -\n# cat > /var/lib/boot2docker/bootlocal.sh <<EOF\n> echo \"tar cf /var/lib/boot2docker/userdata.tar . -C /home/docker/\" >> /opt/shutdown.sh\n> EOF\n# chmod +x /var/lib/boot2docker/bootlocal.sh\n# sudo reboot\n```\n \n\u203b\u3053\u308c\u3067reboot\u3084shutdown\u306e\u6642\u306b/home/docker/\u304c/var/lib/boot2docker/userdata.tar\u306b\n\u3000\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3055\u308c\u308b\u3002 \n\n\u3010\u78ba\u8a8d\u3011\nMac\u304b\u3089ssh \n\n```bash\n$ vagrant ssh\n# pssword : tcuser\n```\n\n```bash\n# boot2docker\u3067\u306e\u4f5c\u696d\n$ touch test\n$ ls -l \n  -rw-r--r--    1 docker   staff            0 Dec 13 13:22 test\n$ sudo reboot\n```\n\nMac\u304b\u3089\u518d\u3073ssh \n\n```bash\n$ vagrant ssh\n# pssword : tcuser\n```\n\nboot2docker\n\n```bash\n$ ls -l \n   -rw-r--r--    1 docker   staff            0 Dec 13 13:22 test\n# \u5b58\u5728\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\n```\n\n## docker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210(Golang)\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Dockerfile\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210\n \u203b docker pull dockerfile/go \u3067\u3082OK\n\ngo lang\n-------------\n\n```bash\n$ mkdir golang\n$ cd golang\n$ vi Dockerfile\n\n#\n# Go Dockerfile\n#\n# https://github.com/dockerfile/go\n#\n  \n# Pull base image.\nFROM dockerfile/ubuntu\n  \n# Install Go\nRUN \\\n  mkdir -p /goroot && \\\n  curl https://storage.googleapis.com/golang/go1.3.1.linux-amd64.tar.gz | tar xvzf - -C /goroot --strip-components=1\n  \n# Set environment variables.\nENV GOROOT /goroot\nENV GOPATH /gopath\nENV PATH $GOROOT/bin:$GOPATH/bin:$PATH\n  \n# Define working directory.\nWORKDIR /gopath\n  \n# Define default command.\nCMD [\"bash\"]\n```\n\ndocker image\u306e\u4f5c\u6210\n\n```bash\n$ docker build -t ubuntu/golang .\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/golang       latest              ff635337559a        3 minutes ago       614 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n```\n\ndocker\u4e0a\u306ego\u3067HelloWorld\u3092\u3084\u3063\u3066\u307f\u308b\u3002\n\n```bash\n\n$ docker run -i -p 80:80 -t ubuntu/golang /bin/bash\n\n$ go version\ngo version go1.3.1 linux/amd64\n\n$ vi testserver.go\n\npackage main\n\nimport (\n  \"fmt\"\n  \"net/http\"\n)\n\nfunc indexHandler(w http.ResponseWriter, r *http.Request) {\n  fmt.Fprintf(w, \"Hello Go lang\")\n}\n\nfunc main() {\n  http.HandleFunc(\"/\", indexHandler)\n  http.ListenAndServe(\":80\", nil)\n}\n\n\n# \u30c6\u30b9\u30c8\u306a\u306e\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u306a\u3057\u3067\u5b9f\u65bd\n$ go run testserver.go\n\n```\n\nMac\u304b\u3089\u30d6\u30e9\u30a6\u30b6\u3067\u30a2\u30af\u30bb\u30b9\u3057\u3066\u5b9f\u884c\u306e\u78ba\u8a8d\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-14 0.10.18.png](https://qiita-image-store.s3.amazonaws.com/0/52867/ebb90c41-1382-ec04-3eaf-1114b6151400.png)\n\n-----\n\n## docker\u30a4\u30e1\u30fc\u30b8\u3092\u4f5c\u6210(nodejs, python)\n\npython \u74b0\u5883\u306fnodejs\u306e\u30d9\u30fc\u30b9\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067Nodejs\u74b0\u5883\u306e\u307f\u4f5c\u6210\n\n```bash\n$ mkdir ~/nodejs\n$ cd ~/nodejs\n$ vi Dockerfile\n\n\n#\n# Node.js Dockerfile\n#\n# https://github.com/dockerfile/nodejs\n#\n\n# Pull base image.\nFROM dockerfile/python\n\n# Install Node.js\nRUN \\\n  cd /tmp && \\\n  wget http://nodejs.org/dist/node-latest.tar.gz && \\\n  tar xvzf node-latest.tar.gz && \\\n  rm -f node-latest.tar.gz && \\\n  cd node-v* && \\\n  ./configure && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make && \\\n  CXX=\"g++ -Wno-unused-local-typedefs\" make install && \\\n  cd /tmp && \\\n  rm -rf /tmp/node-v* && \\\n  npm install -g npm && \\\n  echo -e '\\n# Node.js\\nexport PATH=\"node_modules/.bin:$PATH\"' >> /root/.bashrc\n\n# Define working directory.\nWORKDIR /data\n\n# Define default command.\nCMD [\"bash\"]\n\n```\n\ndocker image\u306e\u4f5c\u6210\n\n```bash\n\n$ docker build -t ubuntu/nodejs .\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/nodejs       latest              60d7f5969d7a        30 seconds ago      496.6 MB\nubuntu/golang       latest              42a919d3c0ea        23 minutes ago      614 MB\ndockerfile/python   latest              f08c82e36872        8 days ago          471 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n\n$ docker run -i -p 80:80 -t ubuntu/nodejs /bin/bash\n\n$ npm version\n{ http_parser: '1.0',\n  node: '0.10.33',\n  v8: '3.14.5.9',\n  ares: '1.9.0-DEV',\n  uv: '0.10.29',\n  zlib: '1.2.3',\n  modules: '11',\n  openssl: '1.0.1j',\n  npm: '2.1.12' }\n\n# server\u306e\u4f5c\u6210\n$ vi app.js\nvar http = require('http');\n\nvar server = http.createServer(function (req, res) {\n  res.writeHead(200, {'Content-Type': 'text/plain'});\n  res.end('Hello World node.js');\n});\nserver.listen(80);\n\n```\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-14 0.27.25.png](https://qiita-image-store.s3.amazonaws.com/0/52867/53dffa9b-2eab-5b6f-72c5-0c76fc95622a.png)\n\n\n\u540c\u3058\u74b0\u5883\u3067python\u3082\u30c6\u30b9\u30c8\n\n```bash \n# ubuntu/nodejs\u3067\u5b9f\u884c\n\n$ python --version\nPython 2.7.6\n\n$ vi index.html\n<html>\n<body>\n    Hello Python\n</body>\n</html>\n\n$ python -m SimpleHTTPServer 80\n\n```\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2014-12-14 0.25.21.png](https://qiita-image-store.s3.amazonaws.com/0/52867/e3e4d1ef-2e87-a7b4-1317-3a25fbf18084.png)\n\n\n----\n\n## docker \u4e0d\u8981\u30b3\u30f3\u30c6\u30ca\u306e\u524a\u9664\ndocker\u3067\u306f\u8d77\u52d5\u5f8c\u306e\u5dee\u5206\u30d5\u30a1\u30a4\u30eb\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u306e\u3067\u4e0d\u8981\u306b\u306a\u3063\u305f\u3089\u524a\u9664\u3059\u308b\u3002\n\n```bash\n$ docker ps -a\nCONTAINER ID        IMAGE                  COMMAND             CREATED             STATUS                      PORTS               NAMES\n8675a8897319        ubuntu/nodejs:latest   \"/bin/bash\"         8 seconds ago       Exited (0) 7 seconds ago                        hungry_carson       \nf71e1d22b5e6        ubuntu/golang:latest   \"/bin/bash\"         56 seconds ago      Exited (0) 54 seconds ago                       prickly_shockley    \n\n#\u4e0d\u8981\u30b3\u30f3\u30c6\u30ca\u306eID\u3092\u6307\u5b9a\n$ docker rm 8675a8897319 f71e1d22b5e6\n\n\n# \u30a4\u30e1\u30fc\u30b8\u3092\u524a\u9664\u3059\u308b\u5834\u5408\n$ docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE\nubuntu/nodejs       latest              60d7f5969d7a        About an hour ago   496.6 MB\nubuntu/golang       latest              42a919d3c0ea        About an hour ago   614 MB\ndockerfile/python   latest              f08c82e36872        8 days ago          471 MB\ndockerfile/ubuntu   latest              c8f87bf54eb2        8 days ago          414.6 MB\n\n$ docker rmi < IMAGE ID >\n\n```\n\n\n\u30b3\u30f3\u30c6\u30ca\u3084\u30a4\u30e1\u30fc\u30b8\u3092\u4e00\u62ec\u3067\u524a\u9664\u3059\u308b\u5834\u5408\n\n```bash\n# remove container\n$ docker rm `docker ps -a -q`\n\n# remove images\n$ docker rmi $(docker images | awk '/^<none>/ { print $3 }')\n```\n\n\u30de\u30eb\u30c1\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u958b\u767a\u3084\u30a2\u30b8\u30e3\u30a4\u30eb\u958b\u767a\u3059\u308b\u969b\u306b\u306fGitHub\u3067\u30bd\u30fc\u30b9\u7ba1\u7406\u3057\u3066\nDockerfile\u3067\u74b0\u5883\u7ba1\u7406\u3059\u308c\u3070\u30e2\u30d3\u30ea\u30c6\u30a3\u306b\u9069\u3057\u305f\u958b\u767a\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u308d\u305d\u308d\u3001Mac\u304c\u9650\u754c\u306a\u306e\u3067boot2docker\u306f\u30d9\u30a2\u30e1\u30bf\u30eb\u3067\u69cb\u7bc9\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["docker", "boot2docker", "Node.js", "Go", "Python"]}