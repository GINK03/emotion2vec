{"context": "\n\n\u6982\u8981\nJava \u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e Scala \u304a\u52c9\u5f37\u4e8c\u65e5\u76ee\u3067\u3059\u3002\n\n\nRange\nRange \u306f\u3053\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u308b\u3088\u3046\u3067\u3059\u3002\n\nRange_A\n1 to 20 foreach(i => println(i));\n\n\n\nRange_B\n(1 to 20).foreach(i => println(i));\n\n\n\u79c1\u306f\u4e0b\u306e\u65b9\u304c\u9b54\u6cd5\u3063\u307d\u3055\u304c\u5c11\u306a\u304f\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nExecutable \u3068 Runnable \u3067\u306e\u5225\u30b9\u30ec\u30c3\u30c9\u5b9f\u884c\nJava \u306e ExecutorService \u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002\n\nExecutable&Runnable\nobject Runner {\n  def main(args: Array[String]): Unit = {\n    val executor: ExecutorService = Executors.newSingleThreadExecutor();\n    executor.submit(new PrintTask());\n    executor.shutdown();\n  }\n\n  class SimpleTask extends Runnable {\n    override def run(): Unit = {\n      println(\"tomato\");\n    }\n  }\n}\n\n\n\nInterface \u306a\u306e\u306b extends\uff1fimplements\u3067\u306f\u306a\u3044\u306e\uff1f\u2026\u2026Scala \u306b Interface \u306f\u306a\u3044\u304c\u3001 trait \u306f\u3042\u308b\u3002\u305f\u3060 trait \u30821\u3064\u76ee\u306f\u5fc5\u305a extends \u3059\u308b\noverride \u306f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u306a\u304f\u30ad\u30fc\u30ef\u30fc\u30c9\nJava \u306e void (\u623b\u308a\u5024\u304c\u306a\u3044)\u30e1\u30bd\u30c3\u30c9\u306f Unit \u3068\u3044\u3046\u578b\u3067\u5ba3\u8a00\n\n\nJava8 \u306e Lambda expression \u307f\u305f\u3044\u306a\u3053\u3068\nimplicit \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\nExecutable&Runnable\nobject Runner {\n\n  implicit def funToRunnable(fun: () ==> Unit) = new Runnable() {def run() = fun() }\n\n  def main(args: Array[String]): Unit = {\n    val executor: ExecutorService = Executors.newSingleThreadExecutor();\n    executor.submit(() => {println(\"tomato\");});\n    executor.shutdown();\n  }\n}\n\n\n\n\u53c2\u8003\nImplicit conversion to Runnable?\n\nsbt\n\u4eca\u65e5\u306e\u672c\u984c\u3067\u3059\u3002 Scala \u3067\u672c\u683c\u7684\u306a\u958b\u767a\u3092\u3084\u308b\u306e\u3067\u3042\u308c\u3070\u5fc5\u8981\u306b\u306a\u308b\u3067\u3042\u308d\u3046\u3053\u308c\u304c\u3001\u306a\u305c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u3048\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\u3082\u3063\u3068\u3082\u3001 Scala \u306e\u4f9d\u5b58\u6027\u7ba1\u7406\u306f sbt \u3067\u306a\u304f\u3068\u3082\u3001 Maven \u3084 Gradle \u3067\u3082\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306f\u53c2\u52a0\u3059\u308b\u958b\u767a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3067\u306b sbt \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u9078\u629e\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://www.scala-sbt.org/download.html \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002brew\uff1f port\uff1f\u4f55\u3067\u3082\u5927\u4e08\u592b\n\n\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f zip \u3092\u4f38\u9577\u3057\u3066\u3001\u3069\u3053\u304b\u306b\u7f6e\u304f\n\nPath \u3092\u901a\u3059\n\u524d\u9805\u3067 sbt \u3092\u7f6e\u3044\u305f\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ vim ~/.bash_profile\nexport PATH=$PATH:~/path/to/dir/sbt/bin/\n\n\u5909\u66f4\u3092\u53cd\u6620\u3057\u3066\n$ source ~/.bash_profile\n\nsbt \u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3061\u3083\u3093\u3068 Path \u304c\u901a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\n$ sbt\n> exit\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089 sbt \u81ea\u4f53\u306e\u5c0e\u5165\u306f\u3067\u304d\u307e\u3057\u305f\u3002\n\nplugins.sbt \u306e\u6e96\u5099\n\u6b21\u306b\u3001Eclipse \u3067 sbt \u3092\u4f7f\u3046\u4ed5\u5ea6\u3092\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e project \u30d5\u30a9\u30eb\u30c0\u306b plugins.sbt \u304c\u306a\u3051\u308c\u3070\u4f5c\u308a\u3001\u3042\u308c\u3070\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\nadd SbtPlugin(\"com.typesafe.sbteclipse\" % \"sbteclipse-plugin\" % \"3.0.0\")\n\n\u306a\u304a\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3082\u4f9d\u5b58\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3092\u77e5\u3089\u305a\u306b1\u6642\u9593\u307b\u3069\u7121\u99c4\u306b\u3057\u307e\u3057\u305f\u3002\n\nsbt \u3092\u52d5\u304b\u3057\u3066\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u53d6\u5f97\n$ sbt compile\n\n\neclipse sbt \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\n\u524d\u9805\u3067\u4e0a\u624b\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3068\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u304c\u305d\u3082\u305d\u3082\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\n$ sbt eclipse\n\n\u3053\u3053\u307e\u3067\u7d42\u308f\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 Scala IDE \u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308c\u3070 Eclipse \u3067 sbt \u304c\u4f7f\u3048\u307e\u3059\u3002\n\nTest\n\u3044\u308d\u3044\u308d\u3042\u308b\u304c\u3001\u53c2\u52a0\u3059\u308b\u958b\u767a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3063\u3066\u3044\u305f ScalaTest & FunSuite \u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3054\u304f\u7c21\u5358\u306a\u30c6\u30b9\u30c8\nimport org.junit.runner.RunWith;\nimport org.scalatest.FunSuite;\nimport org.scalatest.junit.JUnitRunner;\n\n@RunWith(classOf[JUnitRunner])\nclass SimpleUnitTest extends FunSuite {\n  // \u30c6\u30b9\u30c8\u306e\u51e6\u7406\u5185\u5bb9\u3092\u8a18\u8ff0\u53ef\u80fd\u3001\u65e5\u672c\u8a9e\u3082\u4f7f\u3048\u308b\n  test(\"test description\") {\n    assert(/# condition #/)\n  }\n\n  // Java JUnit \u306e expect \u307f\u305f\u3044\u306a\u6a5f\u80fd\n  test(\"expect Exception\") {\n    intercept[Exception] {\n      /# expressions #/\n    }\n  }\n}\n\n\nScala IDE \u306e\u5834\u5408\u306f RunWith \u304c\u8d64\u7d2b\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3068 ScalaTest \u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u305b\u3093\u3002\n\u3069\u3093\u306a\u306b\u4fee\u6b63\u3057\u3066\u3082\u30c0\u30e1\u306a\u3068\u304d\u306f\u3001\u3044\u3063\u305f\u3093\u30d5\u30a1\u30a4\u30eb\u3092\u9589\u3058\u3066\u958b\u304d\u76f4\u3059\u3068\u4e0a\u624b\u304f\u3044\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u611f\u60f3\n\u5b9f\u52d9\u3067\u4f7f\u3046\u3068\u306a\u308b\u3068\u3001\u3053\u308c\u4ee5\u4e0a\u306f Framework \u306b\u5bc4\u3063\u305f\u5b66\u7fd2\u3092\u3057\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002Scala \u306e\u8a00\u8a9e\u4e00\u822c\u306e\u5b66\u7fd2\u306f\u3072\u3068\u533a\u5207\u308a\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u304b\u306d\u2026\u2026\n# \u6982\u8981\nJava \u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u306e Scala \u304a\u52c9\u5f37\u4e8c\u65e5\u76ee\u3067\u3059\u3002\n\n---\n# Range\nRange \u306f\u3053\u306e\u3088\u3046\u306b\u3082\u66f8\u3051\u308b\u3088\u3046\u3067\u3059\u3002\n\n```scala:Range_A\n1 to 20 foreach(i => println(i));\n```\n\n```scala:Range_B\n(1 to 20).foreach(i => println(i));\n```\n\n\u79c1\u306f\u4e0b\u306e\u65b9\u304c\u9b54\u6cd5\u3063\u307d\u3055\u304c\u5c11\u306a\u304f\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n# Executable \u3068 Runnable \u3067\u306e\u5225\u30b9\u30ec\u30c3\u30c9\u5b9f\u884c\nJava \u306e ExecutorService \u304c\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002\n\n```scala:Executable&Runnable\nobject Runner {\n  def main(args: Array[String]): Unit = {\n    val executor: ExecutorService = Executors.newSingleThreadExecutor();\n    executor.submit(new PrintTask());\n    executor.shutdown();\n  }\n\n  class SimpleTask extends Runnable {\n    override def run(): Unit = {\n      println(\"tomato\");\n    }\n  }\n}\n```\n\n1. Interface \u306a\u306e\u306b extends\uff1fimplements\u3067\u306f\u306a\u3044\u306e\uff1f\u2026\u2026Scala \u306b Interface \u306f\u306a\u3044\u304c\u3001 trait \u306f\u3042\u308b\u3002\u305f\u3060 trait \u30821\u3064\u76ee\u306f\u5fc5\u305a extends \u3059\u308b\n2. override \u306f\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3067\u306f\u306a\u304f\u30ad\u30fc\u30ef\u30fc\u30c9\n3. Java \u306e void (\u623b\u308a\u5024\u304c\u306a\u3044)\u30e1\u30bd\u30c3\u30c9\u306f Unit \u3068\u3044\u3046\u578b\u3067\u5ba3\u8a00\n\n# Java8 \u306e Lambda expression \u307f\u305f\u3044\u306a\u3053\u3068\nimplicit \u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\n```scala:Executable&Runnable\nobject Runner {\n\n  implicit def funToRunnable(fun: () ==> Unit) = new Runnable() {def run() = fun() }\n\n  def main(args: Array[String]): Unit = {\n    val executor: ExecutorService = Executors.newSingleThreadExecutor();\n    executor.submit(() => {println(\"tomato\");});\n    executor.shutdown();\n  }\n}\n```\n\n## \u53c2\u8003\n[Implicit conversion to Runnable?](http://stackoverflow.com/questions/3073677/implicit-conversion-to-runnable)\n\n# sbt\n\u4eca\u65e5\u306e\u672c\u984c\u3067\u3059\u3002 Scala \u3067\u672c\u683c\u7684\u306a\u958b\u767a\u3092\u3084\u308b\u306e\u3067\u3042\u308c\u3070\u5fc5\u8981\u306b\u306a\u308b\u3067\u3042\u308d\u3046\u3053\u308c\u304c\u3001\u306a\u305c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4f7f\u3048\u306a\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u2026\u2026\u3082\u3063\u3068\u3082\u3001 Scala \u306e\u4f9d\u5b58\u6027\u7ba1\u7406\u306f sbt \u3067\u306a\u304f\u3068\u3082\u3001 Maven \u3084 Gradle \u3067\u3082\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\u4eca\u56de\u306f\u53c2\u52a0\u3059\u308b\u958b\u767a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3059\u3067\u306b sbt \u304c\u4f7f\u308f\u308c\u3066\u3044\u308b\u306e\u3067\u9078\u629e\u306e\u4f59\u5730\u304c\u3042\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n## \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nhttp://www.scala-sbt.org/download.html \u304b\u3089\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002brew\uff1f port\uff1f\u4f55\u3067\u3082\u5927\u4e08\u592b\n\n## \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f zip \u3092\u4f38\u9577\u3057\u3066\u3001\u3069\u3053\u304b\u306b\u7f6e\u304f\n\n## Path \u3092\u901a\u3059\n\u524d\u9805\u3067 sbt \u3092\u7f6e\u3044\u305f\u5834\u6240\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```sh\n$ vim ~/.bash_profile\nexport PATH=$PATH:~/path/to/dir/sbt/bin/\n```\n\n\u5909\u66f4\u3092\u53cd\u6620\u3057\u3066\n\n```sh\n$ source ~/.bash_profile\n```\n\nsbt \u3067\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3061\u3083\u3093\u3068 Path \u304c\u901a\u3063\u3066\u3044\u308b\u304b\u3092\u78ba\u304b\u3081\u307e\u3057\u3087\u3046\u3002\n\n```sh\n$ sbt\n> exit\n```\n\n\u3053\u3053\u307e\u3067\u3067\u304d\u305f\u3089 sbt \u81ea\u4f53\u306e\u5c0e\u5165\u306f\u3067\u304d\u307e\u3057\u305f\u3002\n\n# plugins.sbt \u306e\u6e96\u5099\n\u6b21\u306b\u3001Eclipse \u3067 sbt \u3092\u4f7f\u3046\u4ed5\u5ea6\u3092\u3057\u307e\u3059\u3002\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e project \u30d5\u30a9\u30eb\u30c0\u306b plugins.sbt \u304c\u306a\u3051\u308c\u3070\u4f5c\u308a\u3001\u3042\u308c\u3070\u4e0b\u8a18\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```\nadd SbtPlugin(\"com.typesafe.sbteclipse\" % \"sbteclipse-plugin\" % \"3.0.0\")\n```\n\n\u306a\u304a\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30eb\u30fc\u30c8\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u3063\u3066\u3082\u4f9d\u5b58\u3092\u89e3\u6c7a\u3057\u3066\u304f\u308c\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u3053\u308c\u3092\u77e5\u3089\u305a\u306b1\u6642\u9593\u307b\u3069\u7121\u99c4\u306b\u3057\u307e\u3057\u305f\u3002\n\n# sbt \u3092\u52d5\u304b\u3057\u3066\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u53d6\u5f97\n\n```sh\n$ sbt compile\n```\n\n# eclipse sbt \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7528\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\n\u524d\u9805\u3067\u4e0a\u624b\u304f\u3044\u3063\u3066\u3044\u306a\u3044\u3068\u3001\u4e0b\u8a18\u306e\u30b3\u30de\u30f3\u30c9\u304c\u305d\u3082\u305d\u3082\u5b9f\u884c\u3067\u304d\u307e\u305b\u3093\u3002\n\n```sh\n$ sbt eclipse\n```\n\n\u3053\u3053\u307e\u3067\u7d42\u308f\u3063\u305f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 Scala IDE \u3067\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308c\u3070 Eclipse \u3067 sbt \u304c\u4f7f\u3048\u307e\u3059\u3002\n\n# Test\n\u3044\u308d\u3044\u308d\u3042\u308b\u304c\u3001\u53c2\u52a0\u3059\u308b\u958b\u767a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3063\u3066\u3044\u305f ScalaTest & FunSuite \u3067\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```scala:\u3054\u304f\u7c21\u5358\u306a\u30c6\u30b9\u30c8\nimport org.junit.runner.RunWith;\nimport org.scalatest.FunSuite;\nimport org.scalatest.junit.JUnitRunner;\n\n@RunWith(classOf[JUnitRunner])\nclass SimpleUnitTest extends FunSuite {\n  // \u30c6\u30b9\u30c8\u306e\u51e6\u7406\u5185\u5bb9\u3092\u8a18\u8ff0\u53ef\u80fd\u3001\u65e5\u672c\u8a9e\u3082\u4f7f\u3048\u308b\n  test(\"test description\") {\n    assert(/# condition #/)\n  }\n\n  // Java JUnit \u306e expect \u307f\u305f\u3044\u306a\u6a5f\u80fd\n  test(\"expect Exception\") {\n    intercept[Exception] {\n      /# expressions #/\n    }\n  }\n}\n```\n\nScala IDE \u306e\u5834\u5408\u306f RunWith \u304c\u8d64\u7d2b\u306b\u306a\u3063\u3066\u3044\u306a\u3044\u3068 ScalaTest \u3068\u3057\u3066\u8a8d\u8b58\u3055\u308c\u307e\u305b\u3093\u3002\n\u3069\u3093\u306a\u306b\u4fee\u6b63\u3057\u3066\u3082\u30c0\u30e1\u306a\u3068\u304d\u306f\u3001\u3044\u3063\u305f\u3093\u30d5\u30a1\u30a4\u30eb\u3092\u9589\u3058\u3066\u958b\u304d\u76f4\u3059\u3068\u4e0a\u624b\u304f\u3044\u304f\u3053\u3068\u304c\u3042\u308a\u307e\u3059\u3002\n\n# \u611f\u60f3\n\u5b9f\u52d9\u3067\u4f7f\u3046\u3068\u306a\u308b\u3068\u3001\u3053\u308c\u4ee5\u4e0a\u306f Framework \u306b\u5bc4\u3063\u305f\u5b66\u7fd2\u3092\u3057\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002Scala \u306e\u8a00\u8a9e\u4e00\u822c\u306e\u5b66\u7fd2\u306f\u3072\u3068\u533a\u5207\u308a\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u304b\u306d\u2026\u2026\n", "tags": ["Scala", "sbt"]}