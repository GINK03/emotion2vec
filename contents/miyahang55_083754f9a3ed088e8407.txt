{"tags": ["zabbix", "Solaris"], "context": "\n\n\uff11\uff0e\u306f\u3058\u3081\u306b\nzabbix3.0\u3067solaris\u3092\u76e3\u8996\u3059\u308b\u4e8b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30af\u30e9\u30a6\u30c9\u306b\u884c\u304d\u9045\u308c\u3066\u3057\u307e\u3063\u305fsolaris\u306e\u60c5\u5831\u306f\u5c11\u306a\u3044\u306e\u3067zabbix-agent\u3092\u5c0e\u5165\u3057\u305f\u969b\u306e\u8a18\u9332\u3092\u6b8b\u3057\u307e\u3059\u3002\n\n\uff12\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\n\u6700\u521d\u306fsrc\u3092\u5165\u624b\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u8a66\u307f\u307e\u3057\u305f\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e32\u30d3\u30c3\u30c8\u554f\u984c\u304c\u51fa\u3066\u3042\u304d\u3089\u3081\u307e\u3057\u305f\u3002\nhttp://www.zabbix.com/ru/download\n\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u300cZabbix pre-compiled agents\u300d\u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n\uff13\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u5fc5\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\n# mkdir /var/log/zabbix\n# chmod 777 /var/log/zabbix\n# mkdir /var/run/zabbix\n# chmod 777 /var/run/zabbix\n# mkdir /etc/zabbix\n# chmod 777 /etc/zabbix\n\n\u305d\u308c\u305e\u308c\u3001\u30ed\u30b0\u51fa\u529b\u5148\u3068PID\u51fa\u529b\u5148\u3068config\u914d\u7f6e\u5148\u3067\u3059\u3002\n\nagent\u30d5\u30a1\u30a4\u30eb\u306e\u914d\u7f6e\n# cd /usr/local/src\n# gzip -cd zabbix_agent_so10.tar.gz|tara xvf -\n# cd zabbix_agent_so10\n\n# cd bin\n# cp -p * /usr/local/bin/\n\n# cd ../sbin\n# cp -p * /usr/local/sbin/\n\n# cd ../conf\n# cp -pr * /etc/zabbix/\n\n# cd ../init.d\n# cp -p * /etc/init.d/\n\n# cd ../manifest\n# cp -p * /var/svc/manifest/network/\n\n# cd ../method\n# cp -p * /lib/svc/method/\n\ninit.d\u3068manifest\u3068method\u306f\u3001\u81ea\u52d5\u8d77\u52d5\uff08SMF\uff09\u7528\u3067\u81ea\u5206\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\nzabbix_agentd\uff08\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\uff09\n#!/bin/sh\n\n# Zabbix\n# Copyright (C) 2001-2016 Zabbix SIA\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n# Start/Stop the Zabbix agent daemon.\n# Place a startup script in /sbin/init.d, and link to it from /sbin/rc[023].d \n\nSERVICE=\"Zabbix agent\"\nDAEMON=/usr/local/sbin/zabbix_agentd\nPIDFILE=/var/run/zabbix/zabbix_agentd.pid\n\ncase $1 in\n  'start')\n    if [ -x ${DAEMON} ]\n    then\n      $DAEMON\n      # Error checking here would be good...\n      echo \"${SERVICE} started.\"\n    else\n      echo \"Can't find file ${DAEMON}.\"\n      echo \"${SERVICE} NOT started.\"\n    fi\n  ;;\n  'stop')\n    if [ -s ${PIDFILE} ]\n    then\n      if kill `cat ${PIDFILE}` >/dev/null 2>&1\n      then\n        echo \"${SERVICE} terminated.\"\n        rm -f ${PIDFILE}\n      fi\n    fi\n  ;;\n  'restart')\n    $0 stop\n    sleep 10\n    $0 start\n  ;;\n  *)\n    echo \"Usage: $0 start|stop|restart\"\n    ;;\nesac\n\n\nXML\u5f62\u5f0f\u306e\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\uff08zabbix-agent.xml\uff09\n<?xml version=\"1.0\"?>\n<!DOCTYPE service_bundle SYSTEM \"/usr/share/lib/xml/dtd/service_bundle.dtd.1\">\n<service_bundle type='manifest' name='AVSzabbix:zabbix-agent'>\n  <service name='network/zabbix-agent' type='service' version='1'>\n\n    <create_default_instance enabled='false'/>\n    <single_instance/>\n\n    <dependency name='fs' \n        type='service'\n        grouping='require_all'\n        restart_on='none'>\n        <service_fmri value='svc:/system/filesystem/local'/>\n    </dependency>\n\n    <dependency name='net'\n        type='service'\n        grouping='require_all'\n        restart_on='none'>\n        <service_fmri value='svc:/network/loopback'/>\n    </dependency>\n\n    <exec_method type='method' name='start' \n        exec='/lib/svc/method/svc-zabbix-agent start'\n        timeout_seconds='60'/>\n\n    <exec_method type='method' name='stop'\n        exec='/lib/svc/method/svc-zabbix-agent stop'\n        timeout_seconds='60'/>\n\n  </service>\n</service_bundle>\n\n\nSMF\u8d77\u52d5/\u505c\u6b62\u30b9\u30af\u30ea\u30d7\u30c8\uff08svc-zabbix-agent\uff09\n#!/bin/bash\n#\n\n. /lib/svc/share/smf_include.sh\n\n# Variables\n# Edit these to match your system settings\n\n# Zabbix-Directory\nBASEDIR=/usr/local\n\n# Binary File\nBINARY_NAME=zabbix_agentd\n\n# Full Binary File Call\nFULLPATH=$BASEDIR/sbin/$BINARY_NAME\n\n# PID file\nPIDFILE=/var/run/zabbix/$BINARY_NAME.pid\n\n# Establish args\nRETVAL=$SMF_EXIT_OK\nERROR=0\nSTOPPING=0\n\n# conf\nCONF=/etc/zabbix/zabbix_agentd.conf\n\n#\n# No need to edit the things below\n#\n\n# application checking status\nif [ -f $PIDFILE  ] && [ -s $PIDFILE ]\n        then\n        PID=`cat $PIDFILE`\n\n        if [ \"x$PID\" != \"x\" ] && kill -0 $PID 2>/dev/null && [ $BINARY_NAME == `ps -e | grep $PID | awk '{print $4}'` ]\n        then\n                STATUS=\"$BINARY_NAME (pid `pidof $APP`) running..\"\n                RUNNING=1\n        else\n                rm -f $PIDFILE\n                STATUS=\"$BINARY_NAME (pid file existed ($PID) and now removed) not running..\"\n                RUNNING=0\n        fi\nelse\n        if [ `ps -e | grep $BINARY_NAME | head -1 | awk '{ print $1 }'` ]\n                then\n                STATUS=\"$BINARY_NAME (pid `pidof $APP`, but no pid file) running..\"\n        else\n                STATUS=\"$BINARY_NAME (no pid file) not running\"\n        fi\n        RUNNING=0\nfi\n\n# functions\nstart() {\n        if [ $RUNNING -eq 1 ]\n                then\n                echo \"$0 $ARG: $BINARY_NAME (pid $PID) already running\"\n        else\n                echo \"Starting $BINARY_NAME\" \n                exec $FULLPATH -c $CONF\n                RETVAL=$?\n        fi\n}\n\nstop() {\n        echo -n $\"Shutting down $BINARY_NAME\"\n        pkill $BINARY_NAME\n        RETVAL=$?\n}\n\n\n# logic\ncase \"$1\" in\n        start)\n                start\n                ;;\n        stop)\n                stop\n                ;;\n        restart)\n                stop\n                start\n                ;;\n        help|*)\n                echo $\"Usage: $0 {start|stop|status|help}\"\n                cat <<EOF\n\n                        start           - start $BINARY_NAME\n                        stop            - stop $BINARY_NAME\n                        restart         - restart $BINARY_NAME if running by sending a SIGHUP or start if not running\n                        help            - this screen\n\nEOF\n        exit $SMF_EXIT_ERR_FATAL\n        ;;\nesac\n\nexit $RETVAL\n\n\nzabbix\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fee\u6b63\n# vi /etc/zabbix/zabbix_agentd.conf\nHostname=   \n\n\u30db\u30b9\u30c8\u540d\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u2192\u5171\u901a\u306e\u8a2d\u5b9a\u306f\u3059\u3067\u306b\u767b\u9332\u6e08\u307f\u3002\uff08\u5185\u5bb9\u306f\u5f8c\u65e5\u516c\u958b\u4e88\u5b9a\uff09\n\n\uff14\uff0eagent\u306e\u8a2d\u5b9a\n\n\u81ea\u52d5\u8d77\u52d5\u3092\u6709\u52b9\u306b\u3059\u308b\n\u914d\u7f6e\u6e08\u307f\u306e\u30de\u30cb\u30e5\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092SMF\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n# svccfg import /var/svc/manifest/network/zabbix-agent.xml\n\n\nzabbix-agent\u306e\u81ea\u52d5\u8d77\u52d5\u3092\u6709\u52b9\u306b\u3059\u308b\n# svcs -a|grep zabbix\n# svcadm enable svc:/network/zabbix-agent:default\n# svcs -a|grep zabbix\n\nonline\u306b\u306a\u308c\u3070\u8d77\u52d5\u3055\u308c\u3066\u3001\u81ea\u52d5\u8d77\u52d5\u3082ON\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b3\u30b3\u307e\u3067\u304c\u3001global ZONE\u3067\u306e\u5c0e\u5165\u3067\u3059\u3002\n\u6b21\u56de\u4ee5\u964d\u3001\u30b3\u30f3\u30c6\u30caZONE\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002\n2017/11/17 \u914d\u5e03\u30d5\u30a1\u30a4\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n# \uff11\uff0e\u306f\u3058\u3081\u306b\n\nzabbix3.0\u3067solaris\u3092\u76e3\u8996\u3059\u308b\u4e8b\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u30af\u30e9\u30a6\u30c9\u306b\u884c\u304d\u9045\u308c\u3066\u3057\u307e\u3063\u305fsolaris\u306e\u60c5\u5831\u306f\u5c11\u306a\u3044\u306e\u3067zabbix-agent\u3092\u5c0e\u5165\u3057\u305f\u969b\u306e\u8a18\u9332\u3092\u6b8b\u3057\u307e\u3059\u3002\n\n# \uff12\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u65b9\u6cd5\n\n\u6700\u521d\u306fsrc\u3092\u5165\u624b\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u8a66\u307f\u307e\u3057\u305f\u304c\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e32\u30d3\u30c3\u30c8\u554f\u984c\u304c\u51fa\u3066\u3042\u304d\u3089\u3081\u307e\u3057\u305f\u3002\n\nhttp://www.zabbix.com/ru/download\n\n\u3067\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u300cZabbix pre-compiled agents\u300d\u3092\u4f7f\u3046\u4e8b\u306b\u3057\u307e\u3057\u305f\u3002\n\n# \uff13\uff0e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### \u5fc5\u8981\u306a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4f5c\u6210\n\n```\n# mkdir /var/log/zabbix\n# chmod 777 /var/log/zabbix\n# mkdir /var/run/zabbix\n# chmod 777 /var/run/zabbix\n# mkdir /etc/zabbix\n# chmod 777 /etc/zabbix\n```\n\n\u305d\u308c\u305e\u308c\u3001\u30ed\u30b0\u51fa\u529b\u5148\u3068PID\u51fa\u529b\u5148\u3068config\u914d\u7f6e\u5148\u3067\u3059\u3002\n\n### agent\u30d5\u30a1\u30a4\u30eb\u306e\u914d\u7f6e\n\n```\n# cd /usr/local/src\n# gzip -cd zabbix_agent_so10.tar.gz|tara xvf -\n# cd zabbix_agent_so10\n\n# cd bin\n# cp -p * /usr/local/bin/\n\n# cd ../sbin\n# cp -p * /usr/local/sbin/\n\n# cd ../conf\n# cp -pr * /etc/zabbix/\n\n# cd ../init.d\n# cp -p * /etc/init.d/\n\n# cd ../manifest\n# cp -p * /var/svc/manifest/network/\n\n# cd ../method\n# cp -p * /lib/svc/method/\n```\n\ninit.d\u3068manifest\u3068method\u306f\u3001\u81ea\u52d5\u8d77\u52d5\uff08SMF\uff09\u7528\u3067\u81ea\u5206\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n### zabbix_agentd\uff08\u8d77\u52d5\u30b9\u30af\u30ea\u30d7\u30c8\uff09\n\n```\n#!/bin/sh\n\n# Zabbix\n# Copyright (C) 2001-2016 Zabbix SIA\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation; either version 2 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program; if not, write to the Free Software\n# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n\n# Start/Stop the Zabbix agent daemon.\n# Place a startup script in /sbin/init.d, and link to it from /sbin/rc[023].d \n\nSERVICE=\"Zabbix agent\"\nDAEMON=/usr/local/sbin/zabbix_agentd\nPIDFILE=/var/run/zabbix/zabbix_agentd.pid\n\ncase $1 in\n  'start')\n    if [ -x ${DAEMON} ]\n    then\n      $DAEMON\n      # Error checking here would be good...\n      echo \"${SERVICE} started.\"\n    else\n      echo \"Can't find file ${DAEMON}.\"\n      echo \"${SERVICE} NOT started.\"\n    fi\n  ;;\n  'stop')\n    if [ -s ${PIDFILE} ]\n    then\n      if kill `cat ${PIDFILE}` >/dev/null 2>&1\n      then\n        echo \"${SERVICE} terminated.\"\n        rm -f ${PIDFILE}\n      fi\n    fi\n  ;;\n  'restart')\n    $0 stop\n    sleep 10\n    $0 start\n  ;;\n  *)\n    echo \"Usage: $0 start|stop|restart\"\n    ;;\nesac\n```\n\n### XML\u5f62\u5f0f\u306e\u30de\u30cb\u30d5\u30a7\u30b9\u30c8\uff08zabbix-agent.xml\uff09\n\n```\n<?xml version=\"1.0\"?>\n<!DOCTYPE service_bundle SYSTEM \"/usr/share/lib/xml/dtd/service_bundle.dtd.1\">\n<service_bundle type='manifest' name='AVSzabbix:zabbix-agent'>\n  <service name='network/zabbix-agent' type='service' version='1'>\n\n    <create_default_instance enabled='false'/>\n    <single_instance/>\n\n    <dependency name='fs' \n        type='service'\n        grouping='require_all'\n        restart_on='none'>\n        <service_fmri value='svc:/system/filesystem/local'/>\n    </dependency>\n\n    <dependency name='net'\n        type='service'\n        grouping='require_all'\n        restart_on='none'>\n        <service_fmri value='svc:/network/loopback'/>\n    </dependency>\n\n    <exec_method type='method' name='start' \n        exec='/lib/svc/method/svc-zabbix-agent start'\n        timeout_seconds='60'/>\n\n    <exec_method type='method' name='stop'\n        exec='/lib/svc/method/svc-zabbix-agent stop'\n        timeout_seconds='60'/>\n\n  </service>\n</service_bundle>\n```\n\n### SMF\u8d77\u52d5/\u505c\u6b62\u30b9\u30af\u30ea\u30d7\u30c8\uff08svc-zabbix-agent\uff09\n\n```\n#!/bin/bash\n#\n\n. /lib/svc/share/smf_include.sh\n\n# Variables\n# Edit these to match your system settings\n\n# Zabbix-Directory\nBASEDIR=/usr/local\n\n# Binary File\nBINARY_NAME=zabbix_agentd\n\n# Full Binary File Call\nFULLPATH=$BASEDIR/sbin/$BINARY_NAME\n\n# PID file\nPIDFILE=/var/run/zabbix/$BINARY_NAME.pid\n\n# Establish args\nRETVAL=$SMF_EXIT_OK\nERROR=0\nSTOPPING=0\n\n# conf\nCONF=/etc/zabbix/zabbix_agentd.conf\n\n#\n# No need to edit the things below\n#\n\n# application checking status\nif [ -f $PIDFILE  ] && [ -s $PIDFILE ]\n        then\n        PID=`cat $PIDFILE`\n\n        if [ \"x$PID\" != \"x\" ] && kill -0 $PID 2>/dev/null && [ $BINARY_NAME == `ps -e | grep $PID | awk '{print $4}'` ]\n        then\n                STATUS=\"$BINARY_NAME (pid `pidof $APP`) running..\"\n                RUNNING=1\n        else\n                rm -f $PIDFILE\n                STATUS=\"$BINARY_NAME (pid file existed ($PID) and now removed) not running..\"\n                RUNNING=0\n        fi\nelse\n        if [ `ps -e | grep $BINARY_NAME | head -1 | awk '{ print $1 }'` ]\n                then\n                STATUS=\"$BINARY_NAME (pid `pidof $APP`, but no pid file) running..\"\n        else\n                STATUS=\"$BINARY_NAME (no pid file) not running\"\n        fi\n        RUNNING=0\nfi\n\n# functions\nstart() {\n        if [ $RUNNING -eq 1 ]\n                then\n                echo \"$0 $ARG: $BINARY_NAME (pid $PID) already running\"\n        else\n                echo \"Starting $BINARY_NAME\" \n                exec $FULLPATH -c $CONF\n                RETVAL=$?\n        fi\n}\n\nstop() {\n        echo -n $\"Shutting down $BINARY_NAME\"\n        pkill $BINARY_NAME\n        RETVAL=$?\n}\n\n\n# logic\ncase \"$1\" in\n        start)\n                start\n                ;;\n        stop)\n                stop\n                ;;\n        restart)\n                stop\n                start\n                ;;\n        help|*)\n                echo $\"Usage: $0 {start|stop|status|help}\"\n                cat <<EOF\n\n                        start           - start $BINARY_NAME\n                        stop            - stop $BINARY_NAME\n                        restart         - restart $BINARY_NAME if running by sending a SIGHUP or start if not running\n                        help            - this screen\n\nEOF\n        exit $SMF_EXIT_ERR_FATAL\n        ;;\nesac\n\nexit $RETVAL\n```\n\n\n### zabbix\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306e\u4fee\u6b63\n\n```\n# vi /etc/zabbix/zabbix_agentd.conf\nHostname=   \n```\n\n\u30db\u30b9\u30c8\u540d\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n\u2192\u5171\u901a\u306e\u8a2d\u5b9a\u306f\u3059\u3067\u306b\u767b\u9332\u6e08\u307f\u3002\uff08\u5185\u5bb9\u306f\u5f8c\u65e5\u516c\u958b\u4e88\u5b9a\uff09\n\n# \uff14\uff0eagent\u306e\u8a2d\u5b9a\n\n### \u81ea\u52d5\u8d77\u52d5\u3092\u6709\u52b9\u306b\u3059\u308b\n\n\u914d\u7f6e\u6e08\u307f\u306e\u30de\u30cb\u30e5\u30d5\u30a7\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092SMF\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u3059\u308b\u3002\n\n\n```\n# svccfg import /var/svc/manifest/network/zabbix-agent.xml\n```\n\n### zabbix-agent\u306e\u81ea\u52d5\u8d77\u52d5\u3092\u6709\u52b9\u306b\u3059\u308b\n\n```\n# svcs -a|grep zabbix\n# svcadm enable svc:/network/zabbix-agent:default\n# svcs -a|grep zabbix\n```\n\nonline\u306b\u306a\u308c\u3070\u8d77\u52d5\u3055\u308c\u3066\u3001\u81ea\u52d5\u8d77\u52d5\u3082ON\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30b3\u30b3\u307e\u3067\u304c\u3001global ZONE\u3067\u306e\u5c0e\u5165\u3067\u3059\u3002\n\u6b21\u56de\u4ee5\u964d\u3001\u30b3\u30f3\u30c6\u30caZONE\u306e\u5c0e\u5165\u306b\u3064\u3044\u3066\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n2017/11/17 \u914d\u5e03\u30d5\u30a1\u30a4\u30eb\u3092\u8a18\u8f09\u3057\u307e\u3057\u305f\u3002\n"}