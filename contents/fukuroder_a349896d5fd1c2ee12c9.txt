{"context": "\n\n\u306f\u3058\u3081\u306b\n\u6574\u6570FFT\u3092\u8a66\u3057\u307e\u3059\u3002\u6574\u6570FFT\u306f\u56fa\u5b9a\u5c0f\u6570\u70b9FFT\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u306a\u304f\u6574\u6570\u304b\u3089\u6574\u6570\u3078\u306e\u5909\u63db\u306a\u306e\u3067\u3001\u9006\u5909\u63db\u3067\u5143\u306b\u623b\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n\u666e\u901a\u306eFFT\nCooley-Tukey\u578b\u306eFFT(Radix-2)\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\nForward FFT\n\u9577\u3055NN\u306eDFT\u304b\u3089\u8003\u3048\u307e\u3059\u3002\nA_k = \\sum_{j=0}^{N-1} a_j W_N^{jk}, \\ \\ W_N = e^{-2 \\pi i/N}\nAk=N\u22121\u2211j=0ajWjkN,\u00a0\u00a0WN=e\u22122\u03c0i/N{A_k = \\sum_{j=0}^{N-1} a_j W_N^{jk}, \\ \\ W_N = e^{-2 \\pi i/N}\n}\nNN\u304c\uff12\u3067\u5272\u308a\u5207\u308c\u308b\u5834\u5408\u3001\u6dfb\u5b57kk\u3092\u5076\u6570\u3068\u5947\u6570\u306b\u5206\u3051\u308b\u3053\u3068\u3067\uff12\u3064\u306e\u9577\u3055N/2N/2\u306eDFT\u306b\u5206\u89e3\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\\begin{eqnarray}\nA_{2k} &=& \\sum_{j=0}^{N/2-1} (a_j + a_{N/2+j}) W_{N/2}^{jk} \\\\\nA_{2k+1} &=& \\sum_{j=0}^{N/2-1} ( \\ (a_j - a_{N/2+j}) W_N^j \\ ) W_{N/2}^{jk} \n\\end{eqnarray}\nA2k=N/2\u22121\u2211j=0(aj+aN/2+j)WjkN/2A2k+1=N/2\u22121\u2211j=0(\u00a0(aj\u2212aN/2+j)WjN\u00a0)WjkN/2{\\begin{eqnarray}\nA_{2k} &=& \\sum_{j=0}^{N/2-1} (a_j + a_{N/2+j}) W_{N/2}^{jk} \\\\\nA_{2k+1} &=& \\sum_{j=0}^{N/2-1} ( \\ (a_j - a_{N/2+j}) W_N^j \\ ) W_{N/2}^{jk} \n\\end{eqnarray}\n}\n\u3053\u306e\u5206\u89e3\u3092\u518d\u5e30\u7684\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306b\u3088\u308a\u8a08\u7b97\u91cf\u304c\u524a\u6e1b\u51fa\u6765\u307e\u3059\u3002\u4e0a\u306e\u5f0f\u3092\u6b63\u76f4\u306b\u52b9\u7387\u5ea6\u5916\u8996\u3067\u64ec\u4f3c\u30b3\u30fc\u30c9\u5316\u3057\u307e\u3059\u3002\n\n\u306a\u3093\u3061\u3083\u3063\u3066FFT\nimport cmath\n\ndef fft(aa):\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = fft( [(a1+a2)   for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = fft( [(a1-a2)*w for a1,a2,w in zip(aa,aa[n/2:],ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n\n\n\u666e\u901a\u306eFFT\u306e\u5834\u5408\u3001\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u3082(a1-a2)*w\u306e\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u306b\u3088\u308a\u6574\u6570\u3067\u306f\u3044\u3089\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u6574\u6570FFT\u3067\u306f\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u7d50\u679c\u3092\u6574\u6570\u5024\u306b\u5909\u63db\u304b\u3064\u9006\u5909\u63db\u3067\u5fa9\u5143\u51fa\u6765\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u307e\u3059\u3002\u4f46\u3057\u3001\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u3092\u975e\u7dda\u5f62\u6f14\u7b97\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u666e\u901a\u306eFFT/DFT\u304c\u6301\u3064\u7dda\u5f62\u6027\u306a\u3069\u306e\u3044\u304f\u3064\u304b\u306e\u6027\u8cea\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\nInverse FFT\n\u666e\u901a\u306eIFFT\uff08\u9006FFT\uff09\u306f\u56de\u8ee2\u56e0\u5b50\u3092\u9006\u56de\u8ee2\u306b\u3059\u308b\u65b9\u6cd5\u3084\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u6e08\u307f\u306eforward\u306aFFT\u3068\u8907\u7d20\u5171\u5f79\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\ndef ifft(aa):\n    conjugate( fft(conjugate(aa)) ) / len(aa)\n\n\u307e\u305f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bforward\u306aFFT\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u3053\u3068\u3067\u5fa9\u5143\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n\n\u306a\u3093\u3061\u3083\u3063\u3066IFFT\nimport cmath\n\ndef ifft(x):\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = ifft( aa[0::2] )\n        aa2 = [ a2/w for a2,w in zip(ifft( aa[1::2] ),ww) ]\n        return [ (a1+a2)/2 for a1,a2 in zip(aa1,aa2) ] + \\\n               [ (a1-a2)/2 for a1,a2 in zip(aa1,aa2) ] \n    else:\n        return aa\n\n\n\u6574\u6570FFT\u306e\u9006\u5909\u63db\u306fforward\u306aFFT\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u307e\u3059\u3002\n\n\u6e96\u5099\n\u6574\u6570\u304b\u3089\u6574\u6570\u3078\u5909\u63db\u3059\u308b\u3068\u3044\u3046\u6280\u8853\u306f\u3001\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u89e3\u6790\u306e\u5206\u91ce\u3067\u958b\u767a\u3055\u308c\u305f\u6280\u8853\u304c\u57fa\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nFast Wavelet Transform\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u306a\u3044Haar\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u7528\u3044\u305f\u5206\u89e3\u304b\u3089\u8003\u3048\u307e\u3059\u3002\n\\begin{eqnarray}\ns_{1,0} &=& (s_{0,0} + s_{0,1})/2 \\\\\nd_{1,0} &=& s_{0,1} - s_{0,0}\n\\end{eqnarray}\ns1,0=(s0,0+s0,1)/2d1,0=s0,1\u2212s0,0{\\begin{eqnarray}\ns_{1,0} &=& (s_{0,0} + s_{0,1})/2 \\\\\nd_{1,0} &=& s_{0,1} - s_{0,0}\n\\end{eqnarray}\n}\n\uff12\u3064\u306e\u5024\u306e\u5e73\u5747\u3068\u5dee\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3060\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u3002(s0,0,s0,1)\u2192(s1,0,d1,0)(s_{0,0}, s_{0,1}) \\rightarrow (s_{1,0}, d_{1,0})\u306e\u5909\u63db\u884c\u5217PP\u3068\u305d\u306e\u9006\u884c\u5217P\u22121P^{-1}\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\nP=\n\\begin{pmatrix}\n1/2 & 1/2 \\\\\n-1 & 1\n\\end{pmatrix}\n, \\ \\ P^{-1}=\n\\begin{pmatrix}\n1 & -1/2 \\\\\n1 & 1/2\n\\end{pmatrix}\nP=(1/21/2\u221211),\u00a0\u00a0P\u22121=(1\u22121/211/2){P=\n\\begin{pmatrix}\n1/2 & 1/2 \\\\\n-1 & 1\n\\end{pmatrix}\n, \\ \\ P^{-1}=\n\\begin{pmatrix}\n1 & -1/2 \\\\\n1 & 1/2\n\\end{pmatrix}\n}\n\u9006\u884c\u5217\u304b\u3089\u518d\u69cb\u6210\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& s_{1,0} + d_{1,0}/2\n\\end{eqnarray}\ns0,0=s1,0\u2212d1,0/2s0,1=s1,0+d1,0/2{\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& s_{1,0} + d_{1,0}/2\n\\end{eqnarray}\n}\n\nfwt_standard.py\n# input\ns0_0 = 3\ns0_1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0_0\nprint \"s0_1 =\", s0_1\n\n# decompose\ns1_0 = (s0_0 + s0_1)/2.0\nd1_0 = s0_1 - s0_0\nprint \"[decompose]\"\nprint \"s1_0 =\", s1_0\nprint \"d1_0 =\", d1_0\n\n# reconstruct\ns0_0 = s1_0 - d1_0/2.0\ns0_1 = s1_0 + d1_0/2.0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0_0\nprint \"s0_1 =\", s0_1\n\n\n\n\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4.5\nd1_0 = 3\n[reconstruct]\ns0_0 = 3.0\ns0_1 = 6.0\n\n\n\u304d\u3061\u3093\u3068\u5fa9\u5143\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\nLifting Scheme\n\u5206\u89e3\u306e\u5909\u63db\u884c\u5217\u3092\u6b21\u306e\u3088\u3046\u306aLifting Step\u306b\u5206\u89e3\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\\begin{pmatrix}\n1 & q_1 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\nq_2 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & q_3 \\\\\n0 & 1\n\\end{pmatrix}\n\\cdots\n(1q101)(10q21)(1q301)\u22ef{\\begin{pmatrix}\n1 & q_1 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\nq_2 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & q_3 \\\\\n0 & 1\n\\end{pmatrix}\n\\cdots\n}\nHaar\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u7528\u3044\u305f\u5206\u89e3\u306e\u884c\u5217\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u5f62\u3057\u307e\u3059\u3002\nP=\n\\begin{pmatrix}\n1 & 1/2 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-1 & 1\n\\end{pmatrix}\nP=(11/201)(10\u221211){P=\n\\begin{pmatrix}\n1 & 1/2 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-1 & 1\n\\end{pmatrix}\n}\n\u5165\u529b\u306b\u5bfe\u3057\u3066\u53f3\u306e\u884c\u5217\u304b\u3089\u9069\u7528\u3057\u3066\u3044\u304f\u3068\u5206\u89e3\u306f\u4ee5\u4e0b\u306e\u5f0f\u306b\u306a\u308a\u307e\u3059\u3002\n\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + d_{1,0}/2\n\\end{eqnarray}\nd1,0=s0,1\u2212s0,0s1,0=s0,0+d1,0/2{\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + d_{1,0}/2\n\\end{eqnarray}\n}\n\u5206\u89e3\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u3053\u3068\u3067\u518d\u69cb\u6210\u304c\u51fa\u6765\u307e\u3059\u3002\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\ns0,0=s1,0\u2212d1,0/2s0,1=d1,0+s0,0{\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\n}\n\nfwt_lifting.py\n# input\ns0 = 3\ns1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n# decompose\ns1 -= s0\ns0 += s1/2.0\nprint \"[decompose]\"\nprint \"s1_0 =\", s0\nprint \"d1_0 =\", s1\n\n# reconstruct\ns0 -= s1/2.0\ns1 += s0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n\n\n\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4.5\nd1_0 = 3\n[reconstruct]\ns0_0 = 3.0\ns0_1 = 6.0\n\n\n\u304d\u3061\u3093\u3068\u5fa9\u5143\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\nInteger Lifting\n\u5206\u89e3\u7d50\u679c\u3092\u6574\u6570\u5316\u3059\u308b\u305f\u3081\u3001Lifting Scheme\u3067\u306ed1,0/2d_{1,0}/2\u306e\u5c0f\u6570\u90e8\u5206\u3092\u5207\u308a\u6368\u3066\u307e\u3059\u3002\n\u5206\u89e3\uff1a\n\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + \\lfloor d_{1,0}/2 \\rfloor\n\\end{eqnarray}\nd1,0=s0,1\u2212s0,0s1,0=s0,0+\u230ad1,0/2\u230b{\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + \\lfloor d_{1,0}/2 \\rfloor\n\\end{eqnarray}\n}\n\u518d\u69cb\u6210\uff1a\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - \\lfloor d_{1,0}/2 \\rfloor \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\ns0,0=s1,0\u2212\u230ad1,0/2\u230bs0,1=d1,0+s0,0{\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - \\lfloor d_{1,0}/2 \\rfloor \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\n}\n\u5207\u308a\u6368\u3066\u51e6\u7406\u306b\u3088\u308a\u3001\u5206\u89e3\u30fb\u518d\u69cb\u6210\u304c\u7dda\u5f62\u306a\u6f14\u7b97\u3067\u306f\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u518d\u69cb\u6210\u3067\u5fa9\u5143\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\nfwt_integer_lifting.py\n# input\ns0 = 3\ns1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n# decompose\ns1 -= s0\ns0 += int(s1/2.0)\nprint \"[decompose]\"\nprint \"s1_0 =\", s0\nprint \"d1_0 =\", s1\n\n# reconstruct\ns0 -= int(s1/2.0)\ns1 += s0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n\n\n\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4\nd1_0 = 3\n[reconstruct]\ns0_0 = 3\ns0_1 = 6\n\n\n\u6574\u6570\u3078\u306e\u5909\u63db\u65b9\u6cd5\u3067\u3059\u304c\u3001\u5207\u308a\u4e0a\u3052\u3084\u56db\u6368\u4e94\u5165\u3067\u3082\u5fa9\u5143\u306b\u306f\u554f\u984c\u3042\u308a\u307e\u305b\u3093\uff08\u3053\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u306fint\u95a2\u6570\u3067\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\nFFT(Lifting Scheme)\n\u56de\u8ee2\u56e0\u5b50W\u03b8W_\\theta\u306eLifting Step\u306b\u5206\u89e3\u3092\u8003\u3048\u307e\u3059\u3002\nW_\\theta=\n\\begin{pmatrix}\n\\cos\\theta & -\\sin\\theta \\\\\n\\sin\\theta & \\cos\\theta\n\\end{pmatrix}\nW\u03b8=(cos\u03b8\u2212sin\u03b8sin\u03b8cos\u03b8){W_\\theta=\n\\begin{pmatrix}\n\\cos\\theta & -\\sin\\theta \\\\\n\\sin\\theta & \\cos\\theta\n\\end{pmatrix}\n}\n\u56de\u8ee2\u89d2\u5ea6\u306b\u5fdc\u3058\u3066\uff12\u7a2e\u985e\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u30bf\u30a4\u30d7A\uff1a\nW_\\theta=\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\ns & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\nW\u03b8=(1c\u22121s01)(10s1)(1c\u22121s01){W_\\theta=\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\ns & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n}\n\u30bf\u30a4\u30d7B\uff1a\nW_\\theta=-\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-s & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\nW\u03b8=\u2212(1c+1s01)(10\u2212s1)(1c+1s01){W_\\theta=-\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-s & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n}\n\nLifting\u4fc2\u6570\u306e\u7d76\u5bfe\u5024\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u308b\u3068\u6574\u6570\u578b\u306e\u7bc4\u56f2\u3092\u8d85\u3048\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\u2212\u03c0/2\u2264\u03b8<0-\\pi/2 \\le \\theta \\lt 0 \u306e\u5834\u5408\u306f\u30bf\u30a4\u30d7A\u3001\u2212\u03c0<\u03b8\u2264\u2212\u03c0/2-\\pi \\lt \\theta \\le -\\pi/2 \u306e\u5834\u5408\u306f\u30bf\u30a4\u30d7B\u3092\u4f7f\u7528\u3057\u3066Lifting\u4fc2\u6570\u3092-1\u304b\u30891\u306e\u9593\u306b\u53ce\u307e\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\nfft_lift.py\nimport cmath\n\ndef fft(aa):\n    def lift(x,w):\n        (c, s) = (w.real, w.imag)\n        a = [x.real, x.imag]\n        if(-1.0e-10 < s < 1.0e-10):\n            pass\n        elif(c >= 0.0):\n            a[0] += a[1]*(c-1)/s\n            a[1] += a[0]*s\n            a[0] += a[1]*(c-1)/s\n        else:\n            a[0] += a[1]*(c+1)/s\n            a[1] += a[0]*(-s)\n            a[0] += a[1]*(c+1)/s\n            a[0] *= -1\n            a[1] *= -1\n        return complex(a[0], a[1])\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = fft( [(a1+a2)       for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = fft( [lift(a1-a2,w) for a1,a2,w in zip(aa,aa[n/2:], ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n\ndef ifft(aa):\n    def ilift(x,w):\n        (c, s) = (w.real, w.imag)\n        a = [x.real, x.imag]\n        if( -1.0e-10 < s < 1.0e-10 ):\n            pass\n        elif( c >= 0.0):   \n            a[0] -= a[1]*(c-1)/s\n            a[1] -= a[0]*s\n            a[0] -= a[1]*(c-1)/s\n        else:\n            a[0] *= -1\n            a[1] *= -1\n            a[0] -= a[1]*(c+1)/s\n            a[1] -= a[0]*(-s)\n            a[0] -= a[1]*(c+1)/s\n        return complex(a[0], a[1])\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = ifft( aa[0::2] )\n        aa2 = [ilift(a2, w) for a2,w in zip(ifft( aa[1::2] ), ww)]\n        return [(a1+a2)/2 for a1,a2 in zip(aa1,aa2)] + \\\n               [(a1-a2)/2 for a1,a2 in zip(aa1,aa2)] \n    else:\n        return aa\n\n\n\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u81ea\u4f53\u306b\u306f\u4f55\u3082\u30e1\u30ea\u30c3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u6574\u6570FFT\nLifting\u306e\u7d50\u679c\u3092\u6574\u6570\u5316\u3059\u308c\u3070\u6574\u6570FFT\u306e\u5b8c\u6210\u3067\u3059\u3002\n\nint_fft.py\nimport cmath\n\ndef int_fft(aa):\n    def int_lift(a,w):\n        (c, s) = (w.real, w.imag)\n        if(-1.0e-10 < s < 1.0e-10):\n            pass\n        elif(c >= 0.0):\n            a[0] += int(a[1]*(c-1)/s)\n            a[1] += int(a[0]*s)\n            a[0] += int(a[1]*(c-1)/s)\n        else:\n            a[0] += int(a[1]*(c+1)/s)\n            a[1] += int(a[0]*(-s))\n            a[0] += int(a[1]*(c+1)/s)\n            a *= -1\n        return a\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = int_fft( [(a1+a2)           for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = int_fft( [int_lift(a1-a2,w) for a1,a2,w in zip(aa,aa[n/2:], ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n\ndef int_ifft(aa):\n    def int_ilift(a,w):\n        (c, s) = (w.real, w.imag)\n        if( -1.0e-10 < s < 1.0e-10 ):\n            pass\n        elif( c >= 0.0):   \n            a[0] -= int(a[1]*(c-1)/s)\n            a[1] -= int(a[0]*s)\n            a[0] -= int(a[1]*(c-1)/s)\n        else:\n            a *= -1\n            a[0] -= int(a[1]*(c+1)/s)\n            a[1] -= int(a[0]*(-s))\n            a[0] -= int(a[1]*(c+1)/s)\n        return a\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = int_ifft( aa[0::2] )\n        aa2 = [int_ilift(a2, w) for a2,w in zip(int_ifft( aa[1::2] ), ww)]\n        return [(a1+a2)/2 for a1,a2 in zip(aa1,aa2)] + \\\n               [(a1-a2)/2 for a1,a2 in zip(aa1,aa2)] \n    else:\n        return aa\n\n\n\u4eca\u56de\u306fRadix-2\u3067\u8a66\u3057\u307e\u3057\u305f\u304c\u3001Mixed-Radix\u3084Split-Radix\u306e\u5834\u5408\u3067\u7d50\u679c\u304c\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u304a\u3057\u307e\u3044\u3002\n\n\u30bd\u30fc\u30b9\n\n\n\u53c2\u8003\u8cc7\u6599\n\nSoontorn Oraintara, Ying-Jui Chen, Truong Q.Nguyen: Integer Fast Fourier Transform. IEEE Transactions on Signal Processing, Vol. 50, 2002. [pdf]\n\nFFT (\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u30fb\u30b3\u30b5\u30a4\u30f3\u30fb\u30b5\u30a4\u30f3\u5909\u63db) \u306e\u6982\u7565\u3068\u8a2d\u8a08\u6cd5 [link]\n\n\n# \u306f\u3058\u3081\u306b\n\n\u6574\u6570FFT\u3092\u8a66\u3057\u307e\u3059\u3002\u6574\u6570FFT\u306f\u56fa\u5b9a\u5c0f\u6570\u70b9FFT\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u306a\u304f\u6574\u6570\u304b\u3089\u6574\u6570\u3078\u306e\u5909\u63db\u306a\u306e\u3067\u3001\u9006\u5909\u63db\u3067\u5143\u306b\u623b\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3059\u3002\n\n# \u666e\u901a\u306eFFT\n\nCooley-Tukey\u578b\u306eFFT(Radix-2)\u306b\u3064\u3044\u3066\u8003\u3048\u307e\u3059\u3002\n\n## Forward FFT\n\n\u9577\u3055$N$\u306eDFT\u304b\u3089\u8003\u3048\u307e\u3059\u3002\n\n```math\nA_k = \\sum_{j=0}^{N-1} a_j W_N^{jk}, \\ \\ W_N = e^{-2 \\pi i/N}\n```\n\n$N$\u304c\uff12\u3067\u5272\u308a\u5207\u308c\u308b\u5834\u5408\u3001\u6dfb\u5b57$k$\u3092\u5076\u6570\u3068\u5947\u6570\u306b\u5206\u3051\u308b\u3053\u3068\u3067\uff12\u3064\u306e\u9577\u3055$N/2$\u306eDFT\u306b\u5206\u89e3\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```math\n\\begin{eqnarray}\nA_{2k} &=& \\sum_{j=0}^{N/2-1} (a_j + a_{N/2+j}) W_{N/2}^{jk} \\\\\nA_{2k+1} &=& \\sum_{j=0}^{N/2-1} ( \\ (a_j - a_{N/2+j}) W_N^j \\ ) W_{N/2}^{jk} \n\\end{eqnarray}\n```\n\n\u3053\u306e\u5206\u89e3\u3092\u518d\u5e30\u7684\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306b\u3088\u308a\u8a08\u7b97\u91cf\u304c\u524a\u6e1b\u51fa\u6765\u307e\u3059\u3002\u4e0a\u306e\u5f0f\u3092\u6b63\u76f4\u306b\u52b9\u7387\u5ea6\u5916\u8996\u3067\u64ec\u4f3c\u30b3\u30fc\u30c9\u5316\u3057\u307e\u3059\u3002\n\n```py:\u306a\u3093\u3061\u3083\u3063\u3066FFT\nimport cmath\n\ndef fft(aa):\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = fft( [(a1+a2)   for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = fft( [(a1-a2)*w for a1,a2,w in zip(aa,aa[n/2:],ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n```\n\n\u666e\u901a\u306eFFT\u306e\u5834\u5408\u3001\u6574\u6570\u3092\u5165\u529b\u3057\u3066\u3082`(a1-a2)*w`\u306e\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u306b\u3088\u308a\u6574\u6570\u3067\u306f\u3044\u3089\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002\u6574\u6570FFT\u3067\u306f\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u7d50\u679c\u3092\u6574\u6570\u5024\u306b\u5909\u63db\u304b\u3064\u9006\u5909\u63db\u3067\u5fa9\u5143\u51fa\u6765\u308b\u3088\u3046\u306b\u6539\u9020\u3057\u307e\u3059\u3002\u4f46\u3057\u3001\u56de\u8ee2\u56e0\u5b50\u306e\u4e57\u7b97\u3092\u975e\u7dda\u5f62\u6f14\u7b97\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u666e\u901a\u306eFFT/DFT\u304c\u6301\u3064\u7dda\u5f62\u6027\u306a\u3069\u306e\u3044\u304f\u3064\u304b\u306e\u6027\u8cea\u304c\u5931\u308f\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n## Inverse FFT\n\n\u666e\u901a\u306eIFFT\uff08\u9006FFT\uff09\u306f\u56de\u8ee2\u56e0\u5b50\u3092\u9006\u56de\u8ee2\u306b\u3059\u308b\u65b9\u6cd5\u3084\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u6e08\u307f\u306eforward\u306aFFT\u3068\u8907\u7d20\u5171\u5f79\u3092\u7528\u3044\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f5c\u6210\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\n\n```py\ndef ifft(aa):\n    conjugate( fft(conjugate(aa)) ) / len(aa)\n```\n\n\u307e\u305f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bforward\u306aFFT\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u3053\u3068\u3067\u5fa9\u5143\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u307e\u3059\u3002\n\n```py:\u306a\u3093\u3061\u3083\u3063\u3066IFFT\nimport cmath\n\ndef ifft(x):\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = ifft( aa[0::2] )\n        aa2 = [ a2/w for a2,w in zip(ifft( aa[1::2] ),ww) ]\n        return [ (a1+a2)/2 for a1,a2 in zip(aa1,aa2) ] + \\\n               [ (a1-a2)/2 for a1,a2 in zip(aa1,aa2) ] \n    else:\n        return aa\n```\n\n\u6574\u6570FFT\u306e\u9006\u5909\u63db\u306fforward\u306aFFT\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u65b9\u6cd5\u3092\u63a1\u7528\u3057\u307e\u3059\u3002\n\n# \u6e96\u5099\n\n\u6574\u6570\u304b\u3089\u6574\u6570\u3078\u5909\u63db\u3059\u308b\u3068\u3044\u3046\u6280\u8853\u306f\u3001\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u89e3\u6790\u306e\u5206\u91ce\u3067\u958b\u767a\u3055\u308c\u305f\u6280\u8853\u304c\u57fa\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## Fast Wavelet Transform\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6b63\u898f\u5316\u3055\u308c\u3066\u3044\u306a\u3044Haar\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u7528\u3044\u305f\u5206\u89e3\u304b\u3089\u8003\u3048\u307e\u3059\u3002\n\n```math\n\\begin{eqnarray}\ns_{1,0} &=& (s_{0,0} + s_{0,1})/2 \\\\\nd_{1,0} &=& s_{0,1} - s_{0,0}\n\\end{eqnarray}\n```\n\n\uff12\u3064\u306e\u5024\u306e\u5e73\u5747\u3068\u5dee\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3060\u3044\u3066\u3082\u826f\u3044\u3067\u3059\u3002$(s_{0,0}, s_{0,1}) \\rightarrow (s_{1,0}, d_{1,0})$\u306e\u5909\u63db\u884c\u5217$P$\u3068\u305d\u306e\u9006\u884c\u5217$P^{-1}$\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\nP=\n\\begin{pmatrix}\n1/2 & 1/2 \\\\\n-1 & 1\n\\end{pmatrix}\n, \\ \\ P^{-1}=\n\\begin{pmatrix}\n1 & -1/2 \\\\\n1 & 1/2\n\\end{pmatrix}\n```\n\n\u9006\u884c\u5217\u304b\u3089\u518d\u69cb\u6210\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& s_{1,0} + d_{1,0}/2\n\\end{eqnarray}\n```\n\n```py:fwt_standard.py\n# input\ns0_0 = 3\ns0_1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0_0\nprint \"s0_1 =\", s0_1\n\n# decompose\ns1_0 = (s0_0 + s0_1)/2.0\nd1_0 = s0_1 - s0_0\nprint \"[decompose]\"\nprint \"s1_0 =\", s1_0\nprint \"d1_0 =\", d1_0\n\n# reconstruct\ns0_0 = s1_0 - d1_0/2.0\ns0_1 = s1_0 + d1_0/2.0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0_0\nprint \"s0_1 =\", s0_1\n```\n\n```text:\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4.5\nd1_0 = 3\n[reconstruct]\ns0_0 = 3.0\ns0_1 = 6.0\n```\n\n\u304d\u3061\u3093\u3068\u5fa9\u5143\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\n## Lifting Scheme\n\n\u5206\u89e3\u306e\u5909\u63db\u884c\u5217\u3092\u6b21\u306e\u3088\u3046\u306aLifting Step\u306b\u5206\u89e3\u3059\u308b\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\n```math\n\\begin{pmatrix}\n1 & q_1 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\nq_2 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & q_3 \\\\\n0 & 1\n\\end{pmatrix}\n\\cdots\n```\n\nHaar\u30a6\u30a7\u30fc\u30d6\u30ec\u30c3\u30c8\u3092\u7528\u3044\u305f\u5206\u89e3\u306e\u884c\u5217\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u5f62\u3057\u307e\u3059\u3002\n\n```math\nP=\n\\begin{pmatrix}\n1 & 1/2 \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-1 & 1\n\\end{pmatrix}\n```\n\n\u5165\u529b\u306b\u5bfe\u3057\u3066\u53f3\u306e\u884c\u5217\u304b\u3089\u9069\u7528\u3057\u3066\u3044\u304f\u3068\u5206\u89e3\u306f\u4ee5\u4e0b\u306e\u5f0f\u306b\u306a\u308a\u307e\u3059\u3002\n\n```math\n\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + d_{1,0}/2\n\\end{eqnarray}\n```\n\n\u5206\u89e3\u306e\u9006\u306e\u624b\u9806\u3092\u8e0f\u3080\u3053\u3068\u3067\u518d\u69cb\u6210\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```math\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - d_{1,0}/2 \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\n```\n\n```py:fwt_lifting.py\n# input\ns0 = 3\ns1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n# decompose\ns1 -= s0\ns0 += s1/2.0\nprint \"[decompose]\"\nprint \"s1_0 =\", s0\nprint \"d1_0 =\", s1\n\n# reconstruct\ns0 -= s1/2.0\ns1 += s0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n```\n\n```text:\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4.5\nd1_0 = 3\n[reconstruct]\ns0_0 = 3.0\ns0_1 = 6.0\n```\n\n\u304d\u3061\u3093\u3068\u5fa9\u5143\u51fa\u6765\u3066\u3044\u307e\u3059\u3002\n\n## Integer Lifting\n\n\u5206\u89e3\u7d50\u679c\u3092\u6574\u6570\u5316\u3059\u308b\u305f\u3081\u3001Lifting Scheme\u3067\u306e$d_{1,0}/2$\u306e\u5c0f\u6570\u90e8\u5206\u3092\u5207\u308a\u6368\u3066\u307e\u3059\u3002\n\u5206\u89e3\uff1a\n\n```math\n\\begin{eqnarray}\nd_{1,0} &=& s_{0,1} - s_{0,0} \\\\\ns_{1,0} &=& s_{0,0} + \\lfloor d_{1,0}/2 \\rfloor\n\\end{eqnarray}\n```\n\n\u518d\u69cb\u6210\uff1a\n\n```math\n\\begin{eqnarray}\ns_{0,0} &=& s_{1,0} - \\lfloor d_{1,0}/2 \\rfloor \\\\\ns_{0,1} &=& d_{1,0} + s_{0,0}\n\\end{eqnarray}\n```\n\n\u5207\u308a\u6368\u3066\u51e6\u7406\u306b\u3088\u308a\u3001\u5206\u89e3\u30fb\u518d\u69cb\u6210\u304c\u7dda\u5f62\u306a\u6f14\u7b97\u3067\u306f\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3001\u518d\u69cb\u6210\u3067\u5fa9\u5143\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\n\n```py:fwt_integer_lifting.py\n# input\ns0 = 3\ns1 = 6\nprint \"[input]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n\n# decompose\ns1 -= s0\ns0 += int(s1/2.0)\nprint \"[decompose]\"\nprint \"s1_0 =\", s0\nprint \"d1_0 =\", s1\n\n# reconstruct\ns0 -= int(s1/2.0)\ns1 += s0\nprint \"[reconstruct]\"\nprint \"s0_0 =\", s0\nprint \"s0_1 =\", s1\n```\n\n```text:\u7d50\u679c\n[input]\ns0_0 = 3\ns0_1 = 6\n[decompose]\ns1_0 = 4\nd1_0 = 3\n[reconstruct]\ns0_0 = 3\ns0_1 = 6\n```\n\n\u6574\u6570\u3078\u306e\u5909\u63db\u65b9\u6cd5\u3067\u3059\u304c\u3001\u5207\u308a\u4e0a\u3052\u3084\u56db\u6368\u4e94\u5165\u3067\u3082\u5fa9\u5143\u306b\u306f\u554f\u984c\u3042\u308a\u307e\u305b\u3093\uff08\u3053\u306e\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u306fint\u95a2\u6570\u3067\u6574\u6570\u306b\u5909\u63db\u3057\u3066\u3044\u307e\u3059\uff09\u3002\n\n# FFT(Lifting Scheme)\n\n\u56de\u8ee2\u56e0\u5b50$W_\\theta$\u306eLifting Step\u306b\u5206\u89e3\u3092\u8003\u3048\u307e\u3059\u3002\n\n```math\nW_\\theta=\n\\begin{pmatrix}\n\\cos\\theta & -\\sin\\theta \\\\\n\\sin\\theta & \\cos\\theta\n\\end{pmatrix}\n```\n\n\u56de\u8ee2\u89d2\u5ea6\u306b\u5fdc\u3058\u3066\uff12\u7a2e\u985e\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\u30bf\u30a4\u30d7A\uff1a\n\n```math\nW_\\theta=\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\ns & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c-1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n```\n\n\u30bf\u30a4\u30d7B\uff1a\n\n```math\nW_\\theta=-\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & 0 \\\\\n-s & 1\n\\end{pmatrix}\n\\begin{pmatrix}\n1 & \\frac{c+1}{s} \\\\\n0 & 1\n\\end{pmatrix}\n```\n![fig.png](https://qiita-image-store.s3.amazonaws.com/0/42791/836fc2ec-a691-a4cd-3b1a-a0190cd4bfe3.png)\n\nLifting\u4fc2\u6570\u306e\u7d76\u5bfe\u5024\u304c\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u308b\u3068\u6574\u6570\u578b\u306e\u7bc4\u56f2\u3092\u8d85\u3048\u3066\u3057\u307e\u3046\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002$-\\pi/2 \\le \\theta \\lt 0 $\u306e\u5834\u5408\u306f\u30bf\u30a4\u30d7A\u3001$-\\pi \\lt \\theta \\le -\\pi/2 $\u306e\u5834\u5408\u306f\u30bf\u30a4\u30d7B\u3092\u4f7f\u7528\u3057\u3066Lifting\u4fc2\u6570\u3092-1\u304b\u30891\u306e\u9593\u306b\u53ce\u307e\u308b\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```py:fft_lift.py\nimport cmath\n\ndef fft(aa):\n    def lift(x,w):\n        (c, s) = (w.real, w.imag)\n        a = [x.real, x.imag]\n        if(-1.0e-10 < s < 1.0e-10):\n            pass\n        elif(c >= 0.0):\n            a[0] += a[1]*(c-1)/s\n            a[1] += a[0]*s\n            a[0] += a[1]*(c-1)/s\n        else:\n            a[0] += a[1]*(c+1)/s\n            a[1] += a[0]*(-s)\n            a[0] += a[1]*(c+1)/s\n            a[0] *= -1\n            a[1] *= -1\n        return complex(a[0], a[1])\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = fft( [(a1+a2)       for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = fft( [lift(a1-a2,w) for a1,a2,w in zip(aa,aa[n/2:], ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n\ndef ifft(aa):\n    def ilift(x,w):\n        (c, s) = (w.real, w.imag)\n        a = [x.real, x.imag]\n        if( -1.0e-10 < s < 1.0e-10 ):\n            pass\n        elif( c >= 0.0):   \n            a[0] -= a[1]*(c-1)/s\n            a[1] -= a[0]*s\n            a[0] -= a[1]*(c-1)/s\n        else:\n            a[0] *= -1\n            a[1] *= -1\n            a[0] -= a[1]*(c+1)/s\n            a[1] -= a[0]*(-s)\n            a[0] -= a[1]*(c+1)/s\n        return complex(a[0], a[1])\n        \n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = ifft( aa[0::2] )\n        aa2 = [ilift(a2, w) for a2,w in zip(ifft( aa[1::2] ), ww)]\n        return [(a1+a2)/2 for a1,a2 in zip(aa1,aa2)] + \\\n               [(a1-a2)/2 for a1,a2 in zip(aa1,aa2)] \n    else:\n        return aa\n```\n\n\u3053\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u81ea\u4f53\u306b\u306f\u4f55\u3082\u30e1\u30ea\u30c3\u30c8\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n# \u6574\u6570FFT\n\nLifting\u306e\u7d50\u679c\u3092\u6574\u6570\u5316\u3059\u308c\u3070\u6574\u6570FFT\u306e\u5b8c\u6210\u3067\u3059\u3002\n\n```py:int_fft.py\nimport cmath\n\ndef int_fft(aa):\n    def int_lift(a,w):\n        (c, s) = (w.real, w.imag)\n        if(-1.0e-10 < s < 1.0e-10):\n            pass\n        elif(c >= 0.0):\n            a[0] += int(a[1]*(c-1)/s)\n            a[1] += int(a[0]*s)\n            a[0] += int(a[1]*(c-1)/s)\n        else:\n            a[0] += int(a[1]*(c+1)/s)\n            a[1] += int(a[0]*(-s))\n            a[0] += int(a[1]*(c+1)/s)\n            a *= -1\n        return a\n\n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = int_fft( [(a1+a2)           for a1,a2 in zip(aa,aa[n/2:])] )\n        aa2 = int_fft( [int_lift(a1-a2,w) for a1,a2,w in zip(aa,aa[n/2:], ww)] )\n        return reduce(lambda xx,x: xx+[x[0],x[1]],zip(aa1,aa2),[])\n    else:\n        return aa\n\ndef int_ifft(aa):\n    def int_ilift(a,w):\n        (c, s) = (w.real, w.imag)\n        if( -1.0e-10 < s < 1.0e-10 ):\n            pass\n        elif( c >= 0.0):   \n            a[0] -= int(a[1]*(c-1)/s)\n            a[1] -= int(a[0]*s)\n            a[0] -= int(a[1]*(c-1)/s)\n        else:\n            a *= -1\n            a[0] -= int(a[1]*(c+1)/s)\n            a[1] -= int(a[0]*(-s))\n            a[0] -= int(a[1]*(c+1)/s)\n        return a\n        \n    n = len(aa)\n    if(n > 1):\n        ww = (cmath.exp(-2j*cmath.pi*k/n) for k in range(n/2))\n        aa1 = int_ifft( aa[0::2] )\n        aa2 = [int_ilift(a2, w) for a2,w in zip(int_ifft( aa[1::2] ), ww)]\n        return [(a1+a2)/2 for a1,a2 in zip(aa1,aa2)] + \\\n               [(a1-a2)/2 for a1,a2 in zip(aa1,aa2)] \n    else:\n        return aa\n```\n\n\u4eca\u56de\u306fRadix-2\u3067\u8a66\u3057\u307e\u3057\u305f\u304c\u3001Mixed-Radix\u3084Split-Radix\u306e\u5834\u5408\u3067\u7d50\u679c\u304c\u5909\u308f\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u304a\u3057\u307e\u3044\u3002\n\n- [\u30bd\u30fc\u30b9](https://github.com/fukuroder/integer_fast_fourier_transform_test)\n\n# \u53c2\u8003\u8cc7\u6599\n- Soontorn Oraintara, Ying-Jui Chen, Truong Q.Nguyen: Integer Fast Fourier Transform. IEEE Transactions on Signal Processing, Vol. 50, 2002. [[pdf]](http://www-ee.uta.edu/msp/pub/Journaintfft.pdf)\n- FFT (\u9ad8\u901f\u30d5\u30fc\u30ea\u30a8\u30fb\u30b3\u30b5\u30a4\u30f3\u30fb\u30b5\u30a4\u30f3\u5909\u63db) \u306e\u6982\u7565\u3068\u8a2d\u8a08\u6cd5 [[link]](http://www.kurims.kyoto-u.ac.jp/~ooura/fftman/index.html)\n", "tags": ["\u6570\u5024\u8a08\u7b97", "\u4fe1\u53f7\u51e6\u7406"]}