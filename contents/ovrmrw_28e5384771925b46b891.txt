{"context": "(\u8ffd\u8a18)2.0\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002(2016/09/15)\nAngular2\u306e\u958b\u767a\u74b0\u5883\u3001\u4ffa\u306a\u3089\u3053\u3046\u3084\u308b 2016\u5e747\u670825\u65e5\u7248(2.0)\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u57fa\u672c\u306b\u3057\u3064\u3064\u3001Routing\u3068Forms\u3092\u7c21\u5358\u306b\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192ovrmrw/ng2-heroes-editor\nhttps://ovrmrw-ng2-heroes-editor-e87d0.firebaseapp.com/\u306f\u5b9f\u969b\u306b\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\nRouting\u306e\u8a2d\u5b9a\n\u30cd\u30fc\u30df\u30f3\u30b0\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fPage1\u306fHero List\u3001Page2\u306fAdd Hero/Edit Hero\u306e\u69cb\u6210\u3067\u3059\u3002\nPage2\u306b\u5165\u308b\u3068\u304d\u3001id\u304c\u6e21\u3055\u308c\u308c\u3070Editing\u3001\u6e21\u3055\u308c\u306a\u3051\u308c\u3070Adding\u3068\u5224\u65ad\u3057\u307e\u3059\u3002\n\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306eRouting\u306e\u7ae0\u3092\u8aad\u3080\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3002\n\nsrc/app/app.routing.ts\n// \u629c\u7c8b\nconst appRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/page1',\n    pathMatch: 'full'\n  },\n  {\n    path: 'page1',\n    component: Page1Component\n  },\n  {\n    path: 'page2',\n    component: Page2Component\n  },\n  {\n    path: 'page2/:id',\n    component: Page2Component\n  }\n];\n\n\nPage2\u306econstructor\u3067ActivatedRoute\u306eparams\u3092\u53d7\u3051\u53d6\u308a\u3001Editing\u304bAdding\u306e\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\nsrc/page2/page2.component.ts\n// \u629c\u7c8b\n  constructor(\n    public service: Page2Service,\n    public route: ActivatedRoute,\n    public router: Router,\n    public cd: ChangeDetectorRef,\n    public el: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.route.params.forEach(async (params: Params) => {\n      const heroes: Hero[] = await this.service.heroes$.take(1).toPromise();\n      if (params['id']) { // Editing Mode\n        const id: number = +params['id'];\n        const selectedHero: Hero | undefined = heroes.find(hero => hero.id === id);\n        if (selectedHero) {\n          this.hero = selectedHero;\n        } else {\n          alert('no hero for the explicit id.');\n          this.router.navigate(['/page1']);\n        }\n      } else { // Adding Mode        \n        const newId: number = heroes.length > 0 ? lodash.maxBy(heroes, 'id').id + 1 : 1;\n        this.hero = new Hero();\n        this.hero.id = newId;\n        this.isAdding = true;\n      }\n      this.cd.markForCheck();\n    });\n  }\n\n\n\nForms\u3092\u4f7f\u3046\n@angular/forms \u306e\u4f7f\u3044\u65b9\u306f\u50d5\u81ea\u8eab\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4e00\u901a\u308a\u8aad\u3093\u3067\u66f8\u3044\u305f\u307f\u305f\u306e\u304c\u3053\u3061\u3089\u3002\n\nsrc/page2/page2.component.ts\n// \u629c\u7c8b\n@Component({\n  selector: 'my-page2',\n  template: `\n    <h3>{{modeName}}</h3>\n    <form *ngIf=\"hero\" (ngSubmit)=\"onSubmit()\" #heroForm=\"ngForm\">\n      <div class=\"form-group row\">\n        <label for=\"id\" class=\"col-xs-2 col-form-label\">Id: </label>\n        <div class=\"col-xs-10\">\n          <input class=\"form-control\" type=\"number\" id=\"id\" [(ngModel)]=\"hero.id\" name=\"id\" #id=\"ngModel\" required [disabled]=\"!isAdding\" #spy>\n          <div [hidden]=\"id.valid || id.pristine\" class=\"alert alert-danger\">\n            Id is required\n          </div>       \n          <pre>className: {{spy.className}}</pre>   \n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-xs-2 col-form-label\">Name: </label>\n        <div class=\"col-xs-10\">\n          <input class=\"form-control\" type=\"text\" id=\"name\" [(ngModel)]=\"hero.name\" name=\"name\" #name=\"ngModel\" required #spy>\n          <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n            Name is required\n          </div>\n          <pre>className: {{spy.className}}</pre>          \n        </div>\n      </div>\n      <pre>{{hero | json}}</pre>\n      <button type=\"submit\" class=\"btn btn-outline-primary\" [disabled]=\"!heroForm.form.valid\">Submit</button>\n      <pre>heroForm.form.valid: {{heroForm.form.valid | json}}</pre>\n    </form>    \n  `,\n  styles: [`\n    .ng-valid[required] {\n      border-left: 10px solid #42A948; /* green */\n    }\n    .ng-invalid {\n      border-left: 10px solid #a94442; /* red */\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})  \n\n\nComponent\u304c\u3059\u3063\u304d\u308a\u3059\u308b\u4ee3\u308f\u308a\u306btemplate\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3059\u308b\u306e\u304c\u7279\u5fb4\u3002\u305f\u3060\u3057\u3061\u3083\u3093\u3068Forms\u304c\u4f7f\u3048\u308b\u3068Validation\u304c\u52b9\u304f\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u65e9\u3044\u6bb5\u968e\u3067\u6163\u308c\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\nStore\u3092\u4f5c\u3063\u3066\u307f\u308b\nAngular2\u306b\u9650\u3089\u305aSPA\u3092\u3084\u308b\u3068\u304d\u306b\u306f\u30c7\u30fc\u30bf\u3092\u5982\u4f55\u306b\u7ba1\u7406\u3059\u308b\u304b\u304c\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u4eca\u56de\u4f5c\u3063\u305fStore\u304c\u3053\u3061\u3089\u3002\n\nsrc/store/store.ts\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs/Rx';\nimport lodash from 'lodash';\n\nimport { Hero } from '../types';\nimport { Action, EditHero, AddHero, DeleteHero } from './actions';\nimport { logger } from '../helper';\n\ninterface AppState {\n  heroes: Hero[];\n}\n\nexport class Dispatcher<T> extends Subject<T> { }\n\n@Injectable()\nexport class Store {\n  private stateSubject$: Subject<AppState>;\n\n  constructor(\n    dispatcher$: Dispatcher<Action>\n  ) {\n    const initState: AppState = {\n      heroes: initialHeroes\n    };\n    this.stateSubject$ = new BehaviorSubject(initState);\n\n    Observable\n      .zip(\n        heroReducer(initState.heroes, dispatcher$),\n        (heroes) => {\n          return { heroes } as AppState;\n        }\n      )\n      .subscribe(appState => {\n        this.stateSubject$.next(appState);\n      });\n  }\n\n  private get returner$() { return this.stateSubject$.asObservable().map(state => lodash.cloneDeep(state)); }\n\n  get state$() { return this.returner$; }\n  get heroes$() { return this.returner$.map(state => state.heroes); }\n}\n\nfunction heroReducer(initHeroes: Hero[], dispatcher$: Observable<Action>): Observable<Hero[]> {\n  return dispatcher$\n    .scan((heroes: Hero[], action: Action) => {\n      const oldHeroes = heroes;\n      if (action instanceof EditHero) {\n        const editedHero = action.hero;\n        heroes = lodash.uniqBy([editedHero, ...heroes], 'id');\n      } else if (action instanceof AddHero) {\n        const newHero = action.hero;\n        heroes = lodash.uniqBy([newHero, ...heroes], 'id');\n      } else if (action instanceof DeleteHero) {\n        const deleteId = action.id;\n        heroes = lodash.reject(heroes, { id: deleteId });\n      }\n      return lodash.orderBy(heroes, ['id'], ['asc']);\n    }, initHeroes);\n}\n\nconst initialHeroes: Hero[] = [\n  { id: 11, name: 'Mr. Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n\n\n\u3053\u3061\u3089\u306eActions\u3092\u4f7f\u3063\u3066Store\u3092\u53e9\u304d\u307e\u3059\u3002\n\nsrc/store/actions.ts\nimport { Hero } from '../types';\n\nexport class EditHero {\n  constructor(public hero: Hero) { }\n}\n\nexport class AddHero {\n  constructor(public hero: Hero) { }\n}\n\nexport class DeleteHero {\n  constructor(public id: number) { }\n}\n\nexport type Action = EditHero | AddHero | DeleteHero;\n\n\nPage1\u3068Page2\u306eservice\u304b\u3089Store\u3092\u53e9\u304f\u306e\u3067\u3059\u304c\u3001page2.service.ts \u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nsrc/page2/page2.service.ts\n// \u629c\u7c8b\n  constructor(\n    public store: Store,\n    public dispatcher$: Dispatcher<Action>\n  ) { }\n\n  save(hero: Hero, isAdding: boolean) {\n    if (typeof hero.id === 'number' && typeof hero.name === 'string') {\n      if (isAdding) {\n        this.dispatcher$.next(new AddHero(hero));\n      } else {\n        this.dispatcher$.next(new EditHero(hero));\n      }\n    } else {\n      console.error(hero);\n      console.error('type of hero is not allowed to save.');\n    }\n  }\n\n\nthis.dispatcher$.next(new AddHero(hero));\u304b\u3089store.ts\u306eheroReducer\u95a2\u6570\u306brxjs\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u6d41\u308c\u307e\u3059\u3002\n\u305d\u3057\u3066\u5de1\u308a\u5de1\u3063\u3066Component\u306b\u30c7\u30fc\u30bf\u304c\u623b\u3063\u3066\u304f\u308b\u3068\u3044\u3046\u5358\u65b9\u5411\u306e\u6d41\u308c\u306a\u3093\u3067\u3059\u306d\u3002\n\nsrc/page2/page2.service.ts\n// \u629c\u7c8b\n  get heroes$() { return this.store.heroes$; }\n\n\n\nsrc/page2/page2.component.ts\n// \u629c\u7c8b\n  this.service.heroes$.take(1).toPromise().then(heroes => { .....\n\n\n\u66f4\u65b0\u3055\u308c\u305fStore\u306e\u30c7\u30fc\u30bf\u306f\u3053\u306e\u3088\u3046\u306bservice\u3092\u901a\u3058\u3066component\u3067\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u624b\u6cd5\u306fAngular\u30c1\u30fc\u30e0\u306eVictor Savkin\u304c\u66f8\u3044\u305fTackling State\u3092\u53c2\u8003\u306b\u3057\u3066\u304a\u308a\u3001\u50d5\u81ea\u8eab\u3053\u308c\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067rxjs\u3092\u304d\u3061\u3093\u3068\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\nPage1(Hero List)\u3092\u773a\u3081\u3066\u307f\u308b\n\u4eca\u307e\u3067Page2\u3070\u304b\u308a\u898b\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u5b9f\u306fPage1\u306e\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\nsrc/page1/page1.component.ts\nimport { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Page1Service } from './page1.service';\nimport { Hero } from '../types';\n\n@Component({\n  selector: 'my-page1',\n  template: `\n    <h3>Hero List</h3>\n\n    <div>\n      <ul class=\"list-group\">\n        <li *ngFor=\"let hero of heroes | async\" class=\"list-group-item\">\n          <button class=\"btn btn-outline-primary btn-sm\" (click)=\"editHero(hero)\">Edit</button>\n          <button class=\"btn btn-outline-warning btn-sm\" (click)=\"deleteHero(hero)\">Delete</button>\n          <span>id: {{hero.id}} / name: {{hero.name}}</span>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <button class=\"btn btn-outline-primary\" (click)=\"addHero()\">Add Hero</button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Page1Component implements OnInit {\n\n  constructor(\n    public service: Page1Service,\n    public router: Router,\n    public cd: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() { }\n\n  addHero() {\n    this.router.navigate(['/page2']);\n  }\n\n  editHero(hero: Hero) {\n    this.router.navigate(['/page2', hero.id]);\n  }\n\n  deleteHero(hero: Hero) {\n    this.service.deleteHero(hero);\n  }\n\n  get heroes() { return this.service.heroes$; }\n}\n\n\n\nsrc/page1/page1.service.ts\nimport { Injectable } from '@angular/core';\n\nimport { Store, Dispatcher, Action, EditHero, AddHero, DeleteHero } from '../store';\nimport { Hero } from '../types';\n\n@Injectable()\nexport class Page1Service {\n\n  constructor(\n    public store: Store,\n    public dispatcher$: Dispatcher<Action>\n  ) { }\n\n  deleteHero(hero: Hero) {\n    this.dispatcher$.next(new DeleteHero(hero.id));\n  }\n\n  get heroes$() { return this.store.heroes$; }\n}\n\n\nService\u3092\u901a\u3058\u3066Component\u304cStore\u306eheroes\u3092\u53d7\u3051\u53d6\u308a\u3001template\u3067AsyncPipe\u3092\u901a\u3057\u3066\u308b\u6d41\u308c\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\nAsyncPipe\u5185\u3067\u306f\u81ea\u52d5\u7684\u306b.subscribe()\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u306e\u3068\u304d\u306bStore\u304b\u3089\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002(rxjs\u306f\u57fa\u672c\u7684\u306bsubscribe\u3057\u306a\u3044\u3068\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u306a\u3044)\n\nFlux\u7684\u306a\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\n\u307e\u305aComponent\u304b\u3089Store\u3078\u306e\u6d41\u308c\u3002(\u30b3\u30fc\u30c9\u3092\u5927\u5206\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059)\n\nsrc/page2/page2.component.ts\nonSubmit() {\n  this.service.save(this.hero);\n}\n\n\n\nsrc/page2/page2.service.ts\nsave(hero: Hero) {\n  this.dispatcher$.next(new AddHero(hero));\n}\n\n\n\nsrc/store/store.ts\nfunction heroReducer(initHeroes: Hero[], dispatcher$: Observable<Action>): Observable<Hero[]> {\n  return dispatcher$\n    .scan((heroes: Hero[], action: Action) => {\n      if (action instanceof AddHero) {\n        const newHero = action.hero;\n        heroes = lodash.uniqBy([newHero, ...heroes], 'id');\n      }\n      return lodash.orderBy(heroes, ['id'], ['asc']);\n    }, initHeroes);\n}\n\n\n\nsrc/store/store.ts\nObservable\n  .zip(\n    heroReducer(initState.heroes, dispatcher$),\n    (heroes) => {\n      return { heroes } as AppState;\n    }\n  )\n  .subscribe(appState => {\n    this.stateSubject$.next(appState);\n  });\n\n\n\u3053\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u6700\u7d42\u7684\u306bStore\u306estateSubject$\u306b\u30c7\u30fc\u30bf\u304c\u53ce\u307e\u308a\u307e\u3059\u3002\n\n\u6b21\u306bStore\u304b\u3089Component(template)\u3078\u306e\u6d41\u308c\u3002\n\nsrc/store/store.ts\nprivate get returner$() { return this.stateSubject$.asObservable().map(state => lodash.cloneDeep(state)); }\n\nget heroes$() { return this.returner$.map(state => state.heroes); }\n\n\n\nsrc/page1/page1.service.ts\nget heroes$() { return this.store.heroes$; }\n\n\n\nsrc/page1/page1.component.ts\nget heroes() { return this.service.heroes$; }\n\n\n\nsrc/page1/page1.component.ts\n<li *ngFor=\"let hero of heroes | async\">\n\n\n\u3053\u306e\u3088\u3046\u306a\u6d41\u308c\u3067template\u306b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u307e\u3059\u3002\u524d\u8ff0\u3057\u307e\u3057\u305f\u304cAsyncPipe\u306e\u4e2d\u3067.subscribe()\u3057\u3066\u3044\u307e\u3059\u3002\nComponent \u2192 Service \u2192 Store \u2192 Service \u2192 Component \u306e\u6d41\u308c\u304c\u3057\u3063\u304b\u308a\u51fa\u6765\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u6700\u5f8c\u306b\nrxjs\u306eSubject\u3092\u99c6\u4f7f\u3059\u308b\u3068Angular2\u3067\u6271\u3044\u3084\u3059\u3044Store\u304c\u7c21\u5358\u306b\u4f5c\u308c\u307e\u3059\u3002\nrxjs\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u306b\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u4e00\u8aad\u3059\u308b\u306e\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n**(\u8ffd\u8a18)2.0\u306b\u5bfe\u5fdc\u3057\u307e\u3057\u305f\u3002(2016/09/15)**\n\n[Angular2\u306e\u958b\u767a\u74b0\u5883\u3001\u4ffa\u306a\u3089\u3053\u3046\u3084\u308b 2016\u5e747\u670825\u65e5\u7248(2.0)](http://qiita.com/ovrmrw/items/56364a4b673c03e20bba)\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u57fa\u672c\u306b\u3057\u3064\u3064\u3001Routing\u3068Forms\u3092\u7c21\u5358\u306b\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u306a\u30b5\u30f3\u30d7\u30eb\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u4eca\u56de\u306eGitHub\u30ea\u30dd\u30b8\u30c8\u30ea\u2192[ovrmrw/ng2-heroes-editor](https://github.com/ovrmrw/ng2-heroes-editor)\n\n[https://ovrmrw-ng2-heroes-editor-e87d0.firebaseapp.com/](https://ovrmrw-ng2-heroes-editor-e87d0.firebaseapp.com/)\u306f\u5b9f\u969b\u306b\u3053\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3082\u306e\u3067\u3059\u3002\n\n## Routing\u306e\u8a2d\u5b9a\n\u30cd\u30fc\u30df\u30f3\u30b0\u304c\u308f\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u306fPage1\u306fHero List\u3001Page2\u306fAdd Hero/Edit Hero\u306e\u69cb\u6210\u3067\u3059\u3002\nPage2\u306b\u5165\u308b\u3068\u304d\u3001id\u304c\u6e21\u3055\u308c\u308c\u3070Editing\u3001\u6e21\u3055\u308c\u306a\u3051\u308c\u3070Adding\u3068\u5224\u65ad\u3057\u307e\u3059\u3002\n[\u516c\u5f0f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u306eRouting\u306e\u7ae0](https://angular.io/docs/ts/latest/tutorial/toh-pt5.html)\u3092\u8aad\u3080\u3068\u7406\u89e3\u304c\u6df1\u307e\u308a\u307e\u3059\u3002\n\n```js:src/app/app.routing.ts\n// \u629c\u7c8b\nconst appRoutes: Routes = [\n  {\n    path: '',\n    redirectTo: '/page1',\n    pathMatch: 'full'\n  },\n  {\n    path: 'page1',\n    component: Page1Component\n  },\n  {\n    path: 'page2',\n    component: Page2Component\n  },\n  {\n    path: 'page2/:id',\n    component: Page2Component\n  }\n];\n```\n\nPage2\u306econstructor\u3067ActivatedRoute\u306eparams\u3092\u53d7\u3051\u53d6\u308a\u3001Editing\u304bAdding\u306e\u6761\u4ef6\u5206\u5c90\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:src/page2/page2.component.ts\n// \u629c\u7c8b\n  constructor(\n    public service: Page2Service,\n    public route: ActivatedRoute,\n    public router: Router,\n    public cd: ChangeDetectorRef,\n    public el: ElementRef\n  ) { }\n\n  ngOnInit() {\n    this.route.params.forEach(async (params: Params) => {\n      const heroes: Hero[] = await this.service.heroes$.take(1).toPromise();\n      if (params['id']) { // Editing Mode\n        const id: number = +params['id'];\n        const selectedHero: Hero | undefined = heroes.find(hero => hero.id === id);\n        if (selectedHero) {\n          this.hero = selectedHero;\n        } else {\n          alert('no hero for the explicit id.');\n          this.router.navigate(['/page1']);\n        }\n      } else { // Adding Mode        \n        const newId: number = heroes.length > 0 ? lodash.maxBy(heroes, 'id').id + 1 : 1;\n        this.hero = new Hero();\n        this.hero.id = newId;\n        this.isAdding = true;\n      }\n      this.cd.markForCheck();\n    });\n  }\n```\n\n## Forms\u3092\u4f7f\u3046\n`@angular/forms` \u306e\u4f7f\u3044\u65b9\u306f\u50d5\u81ea\u8eab\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u304c\u3001[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://angular.io/docs/ts/latest/guide/forms.html)\u3092\u4e00\u901a\u308a\u8aad\u3093\u3067\u66f8\u3044\u305f\u307f\u305f\u306e\u304c\u3053\u3061\u3089\u3002\n\n```js:src/page2/page2.component.ts\n// \u629c\u7c8b\n@Component({\n  selector: 'my-page2',\n  template: `\n    <h3>{{modeName}}</h3>\n    <form *ngIf=\"hero\" (ngSubmit)=\"onSubmit()\" #heroForm=\"ngForm\">\n      <div class=\"form-group row\">\n        <label for=\"id\" class=\"col-xs-2 col-form-label\">Id: </label>\n        <div class=\"col-xs-10\">\n          <input class=\"form-control\" type=\"number\" id=\"id\" [(ngModel)]=\"hero.id\" name=\"id\" #id=\"ngModel\" required [disabled]=\"!isAdding\" #spy>\n          <div [hidden]=\"id.valid || id.pristine\" class=\"alert alert-danger\">\n            Id is required\n          </div>       \n          <pre>className: {{spy.className}}</pre>   \n        </div>\n      </div>\n      <div class=\"form-group row\">\n        <label for=\"name\" class=\"col-xs-2 col-form-label\">Name: </label>\n        <div class=\"col-xs-10\">\n          <input class=\"form-control\" type=\"text\" id=\"name\" [(ngModel)]=\"hero.name\" name=\"name\" #name=\"ngModel\" required #spy>\n          <div [hidden]=\"name.valid || name.pristine\" class=\"alert alert-danger\">\n            Name is required\n          </div>\n          <pre>className: {{spy.className}}</pre>          \n        </div>\n      </div>\n      <pre>{{hero | json}}</pre>\n      <button type=\"submit\" class=\"btn btn-outline-primary\" [disabled]=\"!heroForm.form.valid\">Submit</button>\n      <pre>heroForm.form.valid: {{heroForm.form.valid | json}}</pre>\n    </form>    \n  `,\n  styles: [`\n    .ng-valid[required] {\n      border-left: 10px solid #42A948; /* green */\n    }\n    .ng-invalid {\n      border-left: 10px solid #a94442; /* red */\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})  \n```\n\nComponent\u304c\u3059\u3063\u304d\u308a\u3059\u308b\u4ee3\u308f\u308a\u306btemplate\u304c\u3054\u3061\u3083\u3054\u3061\u3083\u3059\u308b\u306e\u304c\u7279\u5fb4\u3002\u305f\u3060\u3057\u3061\u3083\u3093\u3068Forms\u304c\u4f7f\u3048\u308b\u3068Validation\u304c\u52b9\u304f\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u65e9\u3044\u6bb5\u968e\u3067\u6163\u308c\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u306d\u3002\n\n## Store\u3092\u4f5c\u3063\u3066\u307f\u308b\nAngular2\u306b\u9650\u3089\u305aSPA\u3092\u3084\u308b\u3068\u304d\u306b\u306f\u30c7\u30fc\u30bf\u3092\u5982\u4f55\u306b\u7ba1\u7406\u3059\u308b\u304b\u304c\u8ab2\u984c\u3068\u306a\u308a\u307e\u3059\u3002\n\u305d\u3057\u3066\u4eca\u56de\u4f5c\u3063\u305fStore\u304c\u3053\u3061\u3089\u3002\n\n```js:src/store/store.ts\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from 'rxjs/Rx';\nimport lodash from 'lodash';\n\nimport { Hero } from '../types';\nimport { Action, EditHero, AddHero, DeleteHero } from './actions';\nimport { logger } from '../helper';\n\ninterface AppState {\n  heroes: Hero[];\n}\n\nexport class Dispatcher<T> extends Subject<T> { }\n\n@Injectable()\nexport class Store {\n  private stateSubject$: Subject<AppState>;\n\n  constructor(\n    dispatcher$: Dispatcher<Action>\n  ) {\n    const initState: AppState = {\n      heroes: initialHeroes\n    };\n    this.stateSubject$ = new BehaviorSubject(initState);\n\n    Observable\n      .zip(\n        heroReducer(initState.heroes, dispatcher$),\n        (heroes) => {\n          return { heroes } as AppState;\n        }\n      )\n      .subscribe(appState => {\n        this.stateSubject$.next(appState);\n      });\n  }\n\n  private get returner$() { return this.stateSubject$.asObservable().map(state => lodash.cloneDeep(state)); }\n\n  get state$() { return this.returner$; }\n  get heroes$() { return this.returner$.map(state => state.heroes); }\n}\n\nfunction heroReducer(initHeroes: Hero[], dispatcher$: Observable<Action>): Observable<Hero[]> {\n  return dispatcher$\n    .scan((heroes: Hero[], action: Action) => {\n      const oldHeroes = heroes;\n      if (action instanceof EditHero) {\n        const editedHero = action.hero;\n        heroes = lodash.uniqBy([editedHero, ...heroes], 'id');\n      } else if (action instanceof AddHero) {\n        const newHero = action.hero;\n        heroes = lodash.uniqBy([newHero, ...heroes], 'id');\n      } else if (action instanceof DeleteHero) {\n        const deleteId = action.id;\n        heroes = lodash.reject(heroes, { id: deleteId });\n      }\n      return lodash.orderBy(heroes, ['id'], ['asc']);\n    }, initHeroes);\n}\n\nconst initialHeroes: Hero[] = [\n  { id: 11, name: 'Mr. Nice' },\n  { id: 12, name: 'Narco' },\n  { id: 13, name: 'Bombasto' },\n  { id: 14, name: 'Celeritas' },\n  { id: 15, name: 'Magneta' },\n  { id: 16, name: 'RubberMan' },\n  { id: 17, name: 'Dynama' },\n  { id: 18, name: 'Dr IQ' },\n  { id: 19, name: 'Magma' },\n  { id: 20, name: 'Tornado' }\n];\n```\n\n\u3053\u3061\u3089\u306eActions\u3092\u4f7f\u3063\u3066Store\u3092\u53e9\u304d\u307e\u3059\u3002\n\n```js:src/store/actions.ts\nimport { Hero } from '../types';\n\nexport class EditHero {\n  constructor(public hero: Hero) { }\n}\n\nexport class AddHero {\n  constructor(public hero: Hero) { }\n}\n\nexport class DeleteHero {\n  constructor(public id: number) { }\n}\n\nexport type Action = EditHero | AddHero | DeleteHero;\n```\n\nPage1\u3068Page2\u306eservice\u304b\u3089Store\u3092\u53e9\u304f\u306e\u3067\u3059\u304c\u3001`page2.service.ts` \u306e\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```js:src/page2/page2.service.ts\n// \u629c\u7c8b\n  constructor(\n    public store: Store,\n    public dispatcher$: Dispatcher<Action>\n  ) { }\n\n  save(hero: Hero, isAdding: boolean) {\n    if (typeof hero.id === 'number' && typeof hero.name === 'string') {\n      if (isAdding) {\n        this.dispatcher$.next(new AddHero(hero));\n      } else {\n        this.dispatcher$.next(new EditHero(hero));\n      }\n    } else {\n      console.error(hero);\n      console.error('type of hero is not allowed to save.');\n    }\n  }\n```\n\n`this.dispatcher$.next(new AddHero(hero));`\u304b\u3089`store.ts`\u306e`heroReducer`\u95a2\u6570\u306brxjs\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u304c\u6d41\u308c\u307e\u3059\u3002\n\u305d\u3057\u3066\u5de1\u308a\u5de1\u3063\u3066Component\u306b\u30c7\u30fc\u30bf\u304c\u623b\u3063\u3066\u304f\u308b\u3068\u3044\u3046\u5358\u65b9\u5411\u306e\u6d41\u308c\u306a\u3093\u3067\u3059\u306d\u3002\n\n```js:src/page2/page2.service.ts\n// \u629c\u7c8b\n  get heroes$() { return this.store.heroes$; }\n```\n\n```js:src/page2/page2.component.ts\n// \u629c\u7c8b\n  this.service.heroes$.take(1).toPromise().then(heroes => { .....\n```\n\n\u66f4\u65b0\u3055\u308c\u305fStore\u306e\u30c7\u30fc\u30bf\u306f\u3053\u306e\u3088\u3046\u306bservice\u3092\u901a\u3058\u3066component\u3067\u53d6\u5f97\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u624b\u6cd5\u306fAngular\u30c1\u30fc\u30e0\u306eVictor Savkin\u304c\u66f8\u3044\u305f[Tackling State](https://vsavkin.com/managing-state-in-angular-2-applications-caf78d123d02#.i6agdshfi)\u3092\u53c2\u8003\u306b\u3057\u3066\u304a\u308a\u3001\u50d5\u81ea\u8eab\u3053\u308c\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u3067rxjs\u3092\u304d\u3061\u3093\u3068\u7406\u89e3\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n## Page1(Hero List)\u3092\u773a\u3081\u3066\u307f\u308b\n\u4eca\u307e\u3067Page2\u3070\u304b\u308a\u898b\u3066\u304d\u307e\u3057\u305f\u304c\u3001\u5b9f\u306fPage1\u306e\u65b9\u304c\u30b7\u30f3\u30d7\u30eb\u3067\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\n```js:src/page1/page1.component.ts\nimport { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Page1Service } from './page1.service';\nimport { Hero } from '../types';\n\n@Component({\n  selector: 'my-page1',\n  template: `\n    <h3>Hero List</h3>\n    \n    <div>\n      <ul class=\"list-group\">\n        <li *ngFor=\"let hero of heroes | async\" class=\"list-group-item\">\n          <button class=\"btn btn-outline-primary btn-sm\" (click)=\"editHero(hero)\">Edit</button>\n          <button class=\"btn btn-outline-warning btn-sm\" (click)=\"deleteHero(hero)\">Delete</button>\n          <span>id: {{hero.id}} / name: {{hero.name}}</span>\n        </li>\n      </ul>\n    </div>\n    <div>\n      <button class=\"btn btn-outline-primary\" (click)=\"addHero()\">Add Hero</button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Page1Component implements OnInit {\n\n  constructor(\n    public service: Page1Service,\n    public router: Router,\n    public cd: ChangeDetectorRef\n  ) { }\n\n  ngOnInit() { }\n\n  addHero() {\n    this.router.navigate(['/page2']);\n  }\n\n  editHero(hero: Hero) {\n    this.router.navigate(['/page2', hero.id]);\n  }\n\n  deleteHero(hero: Hero) {\n    this.service.deleteHero(hero);\n  }\n\n  get heroes() { return this.service.heroes$; }\n}\n```\n\n```js:src/page1/page1.service.ts\nimport { Injectable } from '@angular/core';\n\nimport { Store, Dispatcher, Action, EditHero, AddHero, DeleteHero } from '../store';\nimport { Hero } from '../types';\n\n@Injectable()\nexport class Page1Service {\n\n  constructor(\n    public store: Store,\n    public dispatcher$: Dispatcher<Action>\n  ) { }\n\n  deleteHero(hero: Hero) {\n    this.dispatcher$.next(new DeleteHero(hero.id));\n  }\n\n  get heroes$() { return this.store.heroes$; }\n}\n```\n\nService\u3092\u901a\u3058\u3066Component\u304cStore\u306eheroes\u3092\u53d7\u3051\u53d6\u308a\u3001template\u3067AsyncPipe\u3092\u901a\u3057\u3066\u308b\u6d41\u308c\u304c\u308f\u304b\u308b\u3067\u3057\u3087\u3046\u304b\u3002\nAsyncPipe\u5185\u3067\u306f\u81ea\u52d5\u7684\u306b`.subscribe()`\u3055\u308c\u308b\u306e\u3067\u3001\u3053\u306e\u3068\u304d\u306bStore\u304b\u3089\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u304f\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002(rxjs\u306f\u57fa\u672c\u7684\u306bsubscribe\u3057\u306a\u3044\u3068\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u306a\u3044)\n\n## Flux\u7684\u306a\u30c7\u30fc\u30bf\u306e\u6d41\u308c\u3092\u308f\u304b\u308a\u3084\u3059\u304f\n\u307e\u305aComponent\u304b\u3089Store\u3078\u306e\u6d41\u308c\u3002(\u30b3\u30fc\u30c9\u3092\u5927\u5206\u7c21\u7565\u5316\u3057\u3066\u3044\u307e\u3059)\n\n```js:src/page2/page2.component.ts\nonSubmit() {\n  this.service.save(this.hero);\n}\n```\n\n```js:src/page2/page2.service.ts\nsave(hero: Hero) {\n  this.dispatcher$.next(new AddHero(hero));\n}\n```\n\n```js:src/store/store.ts\nfunction heroReducer(initHeroes: Hero[], dispatcher$: Observable<Action>): Observable<Hero[]> {\n  return dispatcher$\n    .scan((heroes: Hero[], action: Action) => {\n      if (action instanceof AddHero) {\n        const newHero = action.hero;\n        heroes = lodash.uniqBy([newHero, ...heroes], 'id');\n      }\n      return lodash.orderBy(heroes, ['id'], ['asc']);\n    }, initHeroes);\n}\n```\n\n```js:src/store/store.ts\nObservable\n  .zip(\n    heroReducer(initState.heroes, dispatcher$),\n    (heroes) => {\n      return { heroes } as AppState;\n    }\n  )\n  .subscribe(appState => {\n    this.stateSubject$.next(appState);\n  });\n```\n\n\u3053\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u6700\u7d42\u7684\u306bStore\u306e`stateSubject$`\u306b\u30c7\u30fc\u30bf\u304c\u53ce\u307e\u308a\u307e\u3059\u3002\n\n---\n\n\u6b21\u306bStore\u304b\u3089Component(template)\u3078\u306e\u6d41\u308c\u3002\n\n```js:src/store/store.ts\nprivate get returner$() { return this.stateSubject$.asObservable().map(state => lodash.cloneDeep(state)); }\n\nget heroes$() { return this.returner$.map(state => state.heroes); }\n```\n\n```js:src/page1/page1.service.ts\nget heroes$() { return this.store.heroes$; }\n```\n\n```js:src/page1/page1.component.ts\nget heroes() { return this.service.heroes$; }\n```\n\n```html:src/page1/page1.component.ts\n<li *ngFor=\"let hero of heroes | async\">\n```\n\n\u3053\u306e\u3088\u3046\u306a\u6d41\u308c\u3067template\u306b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u307e\u3059\u3002\u524d\u8ff0\u3057\u307e\u3057\u305f\u304cAsyncPipe\u306e\u4e2d\u3067`.subscribe()`\u3057\u3066\u3044\u307e\u3059\u3002\n\nComponent \u2192 Service \u2192 Store \u2192 Service \u2192 Component \u306e\u6d41\u308c\u304c\u3057\u3063\u304b\u308a\u51fa\u6765\u3066\u3044\u307e\u3059\u306d\u3002\n\n## \u6700\u5f8c\u306b\nrxjs\u306eSubject\u3092\u99c6\u4f7f\u3059\u308b\u3068Angular2\u3067\u6271\u3044\u3084\u3059\u3044Store\u304c\u7c21\u5358\u306b\u4f5c\u308c\u307e\u3059\u3002\nrxjs\u304c\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u306b\u306f[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://reactivex.io/rxjs/manual/overview.html)\u3092\u4e00\u8aad\u3059\u308b\u306e\u3092\u304a\u52e7\u3081\u3057\u307e\u3059\u3002\n\n", "tags": ["Angular2", "angular", "flux"]}