{"context": " More than 1 year has passed since last update.\u5049\u5927\u306a\u308b\u3054\u307f\u7bb1\u5e2b\u306e\u30b9\u30e9\u30a4\u30c9 data \u30d6\u30ed\u30c3\u30af\u3068 parameters \u30d6\u30ed\u30c3\u30af\u306e\u95a2\u4fc2 \u3092\u8a66\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001Kosugitti \u5148\u751f\u306e \u4e16\u754c\u4e00\u7c21\u5358\u306arstan\u30b3\u30fc\u30c9 \u3067\u3084\u3063\u3066\u307f\u308b\u3002\n\ninf_params.stan\n######################################## \u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306e\u305f\u3081\u306e Stan \u30b3\u30fc\u30c9\ndata{\n  int<lower=0> N;\n  real x[N];\n}\n\nparameters {\n  real mu;\n  real<lower=0> s;\n}\n\nmodel{\n  x ~ normal(mu, s);\n  mu ~ normal(0, 100);\n  s ~ inv_gamma(0.001, 0.001);\n}\n\n\n\nR\n######################################## \u666e\u901a\u306b Stan \u3092\u5b9f\u884c\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\nlibrary(rstan)\n\nset.seed(123)\n\nN <- 1000\nx <- rnorm(N, mean=0, sd=1)\n\nn.iter <- 1000\nn.chains <- 4\ndatastan <- list(N=N, x=x)\nfit <- stan(file=\"inf_params.stan\", data=datastan, iter=n.iter, chain=n.chains)\ntraceplot(fit, ask=FALSE)\nprint(fit, digit=3)\n\n\n\n\n\u7d50\u679c\n         mean se_mean    sd     2.5%      25%      50%      75%    97.5% n_eff  Rhat\nmu      0.017   0.001 0.033   -0.049   -0.004    0.017    0.038    0.083  1233 0.999\ns       0.993   0.001 0.022    0.952    0.977    0.992    1.007    1.038  1365 1.000\nlp__ -492.187   0.040 1.032 -494.824 -492.604 -491.850 -491.451 -491.181   673 1.000\n\n\n\nR\n######################################## \u63a8\u5b9a\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\nlibrary(foreach)\nparams <- foreach(i = seq_len(n.chains), .combine=rbind) %do% {\n  reject <- seq_len(fit@sim$warmup)\n  with(fit@sim$samples[[i]], \n    data.frame(mu=mu[-reject], s=s[-reject])\n  )\n}\n\nskeleton <- list(mu=0, s=0)\nparam.list <- relist(as.relistable(colMeans(params)), skeleton)\nprint(param.list)\n\n\n\n\u7d50\u679c\n$mu\n[1] 0.01694555\n$s\n[1] 0.9929771\n\n\n\nsampling.stan\n######################################## \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e Stan \u30b3\u30fc\u30c9\ndata{\n  real mu;\n  real<lower=0> s;\n}\n\nparameters {\n  real x;\n}\n\nmodel{\n  x ~ normal(mu, s);\n}\n\n\n\nR\n######################################## Stan \u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\nfit2 <- stan(file=\"sampling.stan\", data=param.list, iter=n.iter, chain=n.chains)\ntraceplot(fit2, ask=FALSE)\nprint(fit2, digit=3)\n\n\n\n\u7d50\u679c\n       mean se_mean    sd   2.5%    25%    50%    75%  97.5% n_eff  Rhat\nx     0.082   0.040 0.992 -1.856 -0.540  0.124  0.719  1.955   622 1.001\nlp__ -0.501   0.023 0.707 -2.361 -0.701 -0.203 -0.044 -0.001   930 1.004\n\n\n\nR\n######################################## \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u7d50\u679c\u3092\u683c\u7d0d\nx.res <- fit2@sim$samples[[1]]$x\ndata <- rbind(data.frame(x=x, type=\"x\"), data.frame(x=x.res, type=\"x.res\"))\n\n\n\nR\n######################################## \u7d4c\u9a13\u5206\u5e03\u95a2\u6570\u306e\u63cf\u753b\nlibrary(ggplot2)\nggplot(data, aes(x=x, color=type)) + stat_ecdf(size=2)\n\n\n\n\nR\n######################################## Q-Q \u30d7\u30ed\u30c3\u30c8\u306e\u63cf\u753b\nqqplot(x, x.res)\nabline(0, 1, col=2, lwd=2)\n\n\n\n\nR\n######################################## \u30b3\u30eb\u30e2\u30b4\u30ed\u30d5-\u30b9\u30df\u30eb\u30ce\u30d5\u691c\u5b9a\nks.test(x, x.res)\n\n\n\n\u7d50\u679c\n    Two-sample Kolmogorov-Smirnov test\n\ndata:  x and x.res\nD = 0.059, p-value = 0.06155\nalternative hypothesis: two-sided\n\n\n\u5049\u5927\u306a\u308b\u3054\u307f\u7bb1\u5e2b\u306e\u30b9\u30e9\u30a4\u30c9 [data \u30d6\u30ed\u30c3\u30af\u3068 parameters \u30d6\u30ed\u30c3\u30af\u306e\u95a2\u4fc2](https://onedrive.live.com/view.aspx?resid=FD448A567D4BC37E!5072&ithint=file%2C.pptx&app=PowerPoint&authkey=!ANxqQ3jPB27rdUk) \u3092\u8a66\u3057\u305f\u304f\u306a\u3063\u305f\u306e\u3067\u3001Kosugitti \u5148\u751f\u306e [\u4e16\u754c\u4e00\u7c21\u5358\u306arstan\u30b3\u30fc\u30c9](http://kosugitti.net/archives/4823) \u3067\u3084\u3063\u3066\u307f\u308b\u3002\n\n```stan:inf_params.stan\n######################################## \u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\u306e\u305f\u3081\u306e Stan \u30b3\u30fc\u30c9\ndata{\n  int<lower=0> N;\n  real x[N];\n}\n \nparameters {\n  real mu;\n  real<lower=0> s;\n}\n \nmodel{\n  x ~ normal(mu, s);\n  mu ~ normal(0, 100);\n  s ~ inv_gamma(0.001, 0.001);\n}\n```\n\n```r:R\n######################################## \u666e\u901a\u306b Stan \u3092\u5b9f\u884c\u3057\u3066\u30d1\u30e9\u30e1\u30fc\u30bf\u63a8\u5b9a\nlibrary(rstan)\n\nset.seed(123)\n\nN <- 1000\nx <- rnorm(N, mean=0, sd=1)\n\nn.iter <- 1000\nn.chains <- 4\ndatastan <- list(N=N, x=x)\nfit <- stan(file=\"inf_params.stan\", data=datastan, iter=n.iter, chain=n.chains)\ntraceplot(fit, ask=FALSE)\nprint(fit, digit=3)\n```\n\n![Rplot.png](https://qiita-image-store.s3.amazonaws.com/0/2570/780205c4-8b75-6f49-50e4-cc982f81dc9a.png)\n\n```:\u7d50\u679c\n         mean se_mean    sd     2.5%      25%      50%      75%    97.5% n_eff  Rhat\nmu      0.017   0.001 0.033   -0.049   -0.004    0.017    0.038    0.083  1233 0.999\ns       0.993   0.001 0.022    0.952    0.977    0.992    1.007    1.038  1365 1.000\nlp__ -492.187   0.040 1.032 -494.824 -492.604 -491.850 -491.451 -491.181   673 1.000\n```\n\n```r:R\n######################################## \u63a8\u5b9a\u3055\u308c\u305f\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u53d6\u5f97\nlibrary(foreach)\nparams <- foreach(i = seq_len(n.chains), .combine=rbind) %do% {\n  reject <- seq_len(fit@sim$warmup)\n  with(fit@sim$samples[[i]], \n    data.frame(mu=mu[-reject], s=s[-reject])\n  )\n}\n\nskeleton <- list(mu=0, s=0)\nparam.list <- relist(as.relistable(colMeans(params)), skeleton)\nprint(param.list)\n```\n\n```:\u7d50\u679c\n$mu\n[1] 0.01694555\n$s\n[1] 0.9929771\n```\n\n```stan:sampling.stan\n######################################## \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306e Stan \u30b3\u30fc\u30c9\ndata{\n  real mu;\n  real<lower=0> s;\n}\n \nparameters {\n  real x;\n}\n \nmodel{\n  x ~ normal(mu, s);\n}\n```\n\n```r:R\n######################################## Stan \u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\nfit2 <- stan(file=\"sampling.stan\", data=param.list, iter=n.iter, chain=n.chains)\ntraceplot(fit2, ask=FALSE)\nprint(fit2, digit=3)\n```\n\n```:\u7d50\u679c\n       mean se_mean    sd   2.5%    25%    50%    75%  97.5% n_eff  Rhat\nx     0.082   0.040 0.992 -1.856 -0.540  0.124  0.719  1.955   622 1.001\nlp__ -0.501   0.023 0.707 -2.361 -0.701 -0.203 -0.044 -0.001   930 1.004\n```\n\n```r:R\n######################################## \u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u7d50\u679c\u3092\u683c\u7d0d\nx.res <- fit2@sim$samples[[1]]$x\ndata <- rbind(data.frame(x=x, type=\"x\"), data.frame(x=x.res, type=\"x.res\"))\n```\n\n```r:R\n######################################## \u7d4c\u9a13\u5206\u5e03\u95a2\u6570\u306e\u63cf\u753b\nlibrary(ggplot2)\nggplot(data, aes(x=x, color=type)) + stat_ecdf(size=2)\n```\n\n![Rplot01.png](https://qiita-image-store.s3.amazonaws.com/0/2570/8e6a5631-a40c-beee-8399-1e0b73189f25.png)\n\n```r:R\n######################################## Q-Q \u30d7\u30ed\u30c3\u30c8\u306e\u63cf\u753b\nqqplot(x, x.res)\nabline(0, 1, col=2, lwd=2)\n```\n\n![Rplot02.png](https://qiita-image-store.s3.amazonaws.com/0/2570/084493b2-4d3a-9c5a-e62f-7ce58558e1fb.png)\n\n```r:R\n######################################## \u30b3\u30eb\u30e2\u30b4\u30ed\u30d5-\u30b9\u30df\u30eb\u30ce\u30d5\u691c\u5b9a\nks.test(x, x.res)\n```\n\n```:\u7d50\u679c\n\tTwo-sample Kolmogorov-Smirnov test\n\ndata:  x and x.res\nD = 0.059, p-value = 0.06155\nalternative hypothesis: two-sided\n```\n", "tags": ["R", "RStan"]}