{"context": " More than 1 year has passed since last update.\n\n\u5165\u9580\u306b\u306a\u3063\u305f\u3089\u3001\u52c9\u5f37\u304c\u306a\u304b\u306a\u304b\u9032\u307e\u306a\u304f\u3066\u3001KitchenSink\u306e\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u8ffd\u3063\u3066\u52c9\u5f37\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046\u3002\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u306b\u306a\u308c\u3070\u306a\u3042\u3068\u601d\u3044\u307e\u3059\u3002\n\u25a0\u30bd\u30fc\u30b9\u306eURL\uff1a\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/app.js\n// this sets the background color of the master UIView (when there are no windows/tab groups on it)\nTitanium.UI.setBackgroundColor('#000');\n\n// create tab group\nvar tabGroup = Titanium.UI.createTabGroup({id:'tabGroup1'});\n\n\n//\n// create base UI tab and root window\n//\nvar win1 = Titanium.UI.createWindow({className:'win1'});\n\nvar tab1 = Titanium.UI.createTab({\n    id:'tab1',\n    window:win1\n});\n\n//\n// create controls tab and root window\n//\nvar win2 = Titanium.UI.createWindow({\n    url:'main_windows/controls.js',\n    titleid:'controls_win_title'\n});\nvar tab2 = Titanium.UI.createTab({\n    icon:'images/tabs/KS_nav_ui.png',\n    titleid:'controls_win_title',\n    window:win2\n});\n\n\n//\n// create phone tab and root window\n//\nvar win3 = Titanium.UI.createWindow({\n    url:'main_windows/phone.js',\n    titleid:'phone_win_title'\n});\nvar tab3 = Titanium.UI.createTab({\n    icon:'images/tabs/KS_nav_phone.png',\n    titleid:'phone_win_title',\n    window:win3\n});\n\n\n//\n// create platform tab and root window\n//\nvar win4 = Titanium.UI.createWindow({\n    url:'main_windows/platform.js',\n    titleid:'platform_win_title'\n});\nvar tab4 = Titanium.UI.createTab({\n    icon:'images/tabs/KS_nav_platform.png',\n    titleid:'platform_win_title',\n//  Commented out as per 1773\n//  active:true,\n    window:win4\n});\n\n//\n// create mashup tab and root window\n//\nvar win5 = Titanium.UI.createWindow({\n    url:'main_windows/mashups.js',\n    titleid:'mashups_win_title'\n});\nvar tab5 = Titanium.UI.createTab({\n    icon:'images/tabs/KS_nav_mashup.png',\n    titleid:'mashups_win_title',\n    window:win5\n});\n\n//\n//  add tabs\n//\ntabGroup.addTab(tab1);\ntabGroup.addTab(tab2);\ntabGroup.addTab(tab3);\ntabGroup.addTab(tab4);\ntabGroup.addTab(tab5);\n\ntabGroup.addEventListener('open',function()\n{\n    // set background color back to white after tab group transition\n    Titanium.UI.setBackgroundColor('#fff');\n});\n\ntabGroup.setActiveTab(1);\n// open tab group with a transition animation\ntabGroup.open({\n    transition: Titanium.UI.iPhone && Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT\n});\n\n// setTimeout(function()\n// {\n    // tabGroup.close({\n        // transition:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT\n    // });\n// },2000);\n\n\n//\n//  TAB GROUP EVENTS\n//\nvar messageWin = Titanium.UI.createWindow({\n    height:30,\n    width:250,\n    bottom:70,\n    borderRadius:10,\n    touchEnabled:false,\n\n    orientationModes : [\n    Titanium.UI.PORTRAIT,\n    Titanium.UI.UPSIDE_PORTRAIT,\n    Titanium.UI.LANDSCAPE_LEFT,\n    Titanium.UI.LANDSCAPE_RIGHT\n    ]\n});\nvar messageView = Titanium.UI.createView({\n    id:'messageview',\n    height:30,\n    width:250,\n    borderRadius:10,\n    backgroundColor:'#000',\n    opacity:0.7,\n    touchEnabled:false\n});\n\nvar messageLabel = Titanium.UI.createLabel({\n    id:'messagelabel',\n    text:'',\n    color:'#fff',\n    width:250,\n    height:'auto',\n    font:{\n        fontFamily:'Helvetica Neue',\n        fontSize:13\n    },\n    textAlign:'center'\n});\nmessageWin.add(messageView);\nmessageWin.add(messageLabel);\n\n//\n// TAB EVENTS\n//\n\n// tab group close event\ntabGroup.addEventListener('close', function(e)\n{\n    messageLabel.text = 'tab group close event';\n    messageWin.open();\n    if (Ti.Platform.osname == \"iphone\") {\n//On iOS, when we're closing the tab group, this is a result\n//of the tab group example of 'Close/Animate Tab Group' and\n//we want to reopen the tab group so the user can continue with\n//using Kitchen Sink. HOWEVER, on Android, this is also triggered\n//when the app is being closed via back button, where reopening\n//the tab group is not desired. This is purely a quirk of the tests.\n        tabGroup.open();\n    }\n    setTimeout(function()\n    {\n        messageWin.close({opacity:0,duration:500});\n    },1000);\n});\n\n\n// tab group open event\ntabGroup.addEventListener('open', function(e)\n{\n    messageLabel.text = 'tab group open event';\n    messageWin.open();\n    setTimeout(function()\n    {\n        messageWin.close({opacity:0,duration:500});\n    },1000);\n\n});\n\n// focus event listener for tracking tab changes\ntabGroup.addEventListener('focus', function(e)\n{\n    messageLabel.text = 'tab changed to ' + e.index + ' old index ' + e.previousIndex;\n    messageWin.open();\n    setTimeout(function()\n    {\n        Ti.API.info('tab ' + e.tab.title  + ' prevTab = ' + (e.previousTab ? e.previousTab.title : null));\n        messageLabel.text = 'active title ' + e.tab.title + ' old title ' + (e.previousTab ? e.previousTab.title : null);\n    },1000);\n\n    setTimeout(function()\n    {\n        messageWin.close({opacity:0,duration:500});\n    },2000);\n\n});\n\n// blur event listener for tracking tab changes\ntabGroup.addEventListener('blur', function(e)\n{\n    Titanium.API.info('tab blur - new index ' + e.index + ' old index ' + e.previousIndex);\n});\n\n\n//\n//   CUSTOM EVENTS\n//\nTitanium.App.addEventListener('event_one', function(e)\n{\n    messageLabel.text = 'app.js: event one, array length = ' + e.data.length;\n    messageWin.open();\n    setTimeout(function()\n    {\n        messageWin.close({opacity:0,duration:500});\n    },1000);\n});\n\nTitanium.App.addEventListener('event_two', function(e)\n{\n    messageLabel.text = 'app.js: event two, name = ' + e.name;\n    messageWin.open();\n    setTimeout(function()\n    {\n        messageWin.close({opacity:0,duration:500});\n    },1000);\n\n});\n\n//\n//  CREATE CUSTOM LOADING INDICATOR\n//\nvar indWin = null;\nvar actInd = null;\nfunction showIndicator()\n{\n    if (Ti.Platform.osname != 'android')\n    {\n        // window container\n        indWin = Titanium.UI.createWindow({\n            height:150,\n            width:150\n        });\n\n        // black view\n        var indView = Titanium.UI.createView({\n            height:150,\n            width:150,\n            backgroundColor:'#000',\n            borderRadius:10,\n            opacity:0.8\n        });\n        indWin.add(indView);\n    }\n\n    // loading indicator\n    actInd = Titanium.UI.createActivityIndicator({\n        style:Titanium.UI.iPhone && Titanium.UI.iPhone.ActivityIndicatorStyle.BIG,\n        height:30,\n        width:30\n    });\n\n    if (Ti.Platform.osname != 'android')\n    {\n        indWin.add(actInd);\n\n        // message\n        var message = Titanium.UI.createLabel({\n            text:'Loading',\n            color:'#fff',\n            width:'auto',\n            height:'auto',\n            font:{fontSize:20,fontWeight:'bold'},\n            bottom:20\n        });\n        indWin.add(message);\n        indWin.open();\n    } else {\n        actInd.message = \"Loading\";\n    }\n    actInd.show();\n\n}\n\nfunction hideIndicator()\n{\n    actInd.hide();\n    if (Ti.Platform.osname != 'android') {\n        indWin.close({opacity:0,duration:500});\n    }\n}\n\n//\n// Add global event handlers to hide/show custom indicator\n//\nTitanium.App.addEventListener('show_indicator', function(e)\n{\n    Ti.API.info(\"IN SHOW INDICATOR\");\n    showIndicator();\n});\nTitanium.App.addEventListener('hide_indicator', function(e)\n{\n    Ti.API.info(\"IN HIDE INDICATOR\");\n    hideIndicator();\n});\n\n// trap app shutdown event\nTitanium.App.addEventListener('close',function(e)\n{\n    Ti.API.info(\"The application is being shutdown\");\n});\n\n// test for loading in a root-level include\nTi.include(\"welcome.js\");\n\n// test out logging to developer console, formatting and localization\nTi.API.info(String.format(\"%s%s\",L(\"welcome_message\",\"default_not_set\"),Titanium.version));\nTi.API.debug(String.format(\"%s %s\",L(\"user_agent_message\",\"default_not_set\"),Titanium.userAgent));\n\nTi.API.debug(String.format(\"locale specific date is %s\",String.formatDate(new Date()))); // default is short\nTi.API.debug(String.format(\"locale specific date (medium) is %s\",String.formatDate(new Date(),\"medium\")));\nTi.API.debug(String.format(\"locale specific date (long) is %s\",String.formatDate(new Date(),\"long\")));\nTi.API.debug(String.format(\"locale specific time is %s\",String.formatTime(new Date())));\nTi.API.debug(String.format(\"locale specific currency is %s\",String.formatCurrency(12.99)));\nTi.API.debug(String.format(\"locale specific decimal is %s\",String.formatDecimal(12.99)));\n\n\nTi.API.info(\"should be en, was = \"+Ti.Locale.currentLanguage);\nTi.API.info(\"welcome_message = \"+Ti.Locale.getString(\"welcome_message\"));\nTi.API.info(\"should be def, was = \"+Ti.Locale.getString(\"welcome_message2\",\"def\"));\nTi.API.info(\"welcome_message = \"+L(\"welcome_message\"));\nTi.API.info(\"should be def, was = \"+L(\"welcome_message2\",\"def\"));\nTi.API.info(\"should be 1, was = \"+String.format('%d',1));\nTi.API.info(\"should be 1.0, was = \"+String.format('%1.1f',1));\nTi.API.info(\"should be hello, was = \"+String.format('%s','hello'));\n\n// test to check that we can iterate over titanium based objects\n(function(){\n    Ti.API.info(\"you should see a list of properties (3 or more) below this line\");\n    Ti.API.info(\"---------------------------------------------------------------\");\n    for (var p in win1)\n    {\n        Ti.API.info(\"         win1 property: \"+p);\n    }\n    Ti.API.info(\"Did you see properties? ^^^^^ \");\n    Ti.API.info(\"---------------------------------------------------------------\");\n\n    Ti.API.info(\"you should see a list of modules (3 or more) below this line\");\n    Ti.API.info(\"---------------------------------------------------------------\");\n    for (var p in Titanium)\n    {\n        Ti.API.info(\"             module: \"+p);\n    }\n    Ti.API.info(\"Did you see modules? ^^^^^ \");\n    Ti.API.info(\"---------------------------------------------------------------\");\n})();\n\n\nTi.include(\"examples/version.js\");\n\nif (isiOS4Plus())\n{\n    // register a background service. this JS will run when the app is backgrounded\n    var service = Ti.App.iOS.registerBackgroundService({url:'bg.js'});\n\n    Ti.API.info(\"registered background service = \"+service);\n\n    // listen for a local notification event\n    Ti.App.iOS.addEventListener('notification',function(e)\n    {\n        Ti.API.info(\"local notification received: \"+JSON.stringify(e));\n    });\n\n    // fired when an app resumes for suspension\n    Ti.App.addEventListener('resume',function(e){\n        Ti.API.info(\"app is resuming from the background\");\n    });\n    Ti.App.addEventListener('resumed',function(e){\n        Ti.API.info(\"app has resumed from the background\");\n    });\n\n    Ti.App.addEventListener('pause',function(e){\n        Ti.API.info(\"app was paused from the foreground\");\n    });\n}\n\nif (Ti.App.Properties.getBool('showNotice', true)){\n    var alertNotice = Ti.UI.createAlertDialog({\n        buttonNames: ['OK', 'Visit docs', 'Don\\'t show again'],\n        cancel:0,\n        title: 'Notice',\n        message: 'While this KitchenSink provides an extensive demonstration of the Titanium API, its structure is not recommended for production apps. Please refer to our documentation for more details.'\n    });\n    alertNotice.show();\n    alertNotice.addEventListener('click', function(e){\n        if(e.index === 1){\n            Titanium.Platform.openURL('http://wiki.appcelerator.org/display/guides/Example+Applications');\n        }\n        if(e.index === 2){\n            Ti.App.Properties.setBool('showNotice', false);\n        }\n    });\n}\n\n\u25a0\u30bd\u30fc\u30b9\u306eURL\uff1a\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/app.jss\n\n/Resources/app.jss\n\n@import 'common.jss';\n\n#tabGroup1 {\n    barColor:#336699;\n}\n\n.win1 {\n    url:'main_windows/base_ui.js';\n    titleid:'base_ui_title';\n    titleImage:'images/appcelerator_small.png';\n}\n\n#tab1 {\n    icon:'images/tabs/KS_nav_views.png';\n    titleid:'base_ui_title';\n}\n\n\n\u25a0\u30bd\u30fc\u30b9\u306eURL\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/common.jss\n\n/Resources/common.jss\n/**\n * common stylesheet defines\n */\n\n\n\n\n\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u52c9\u5f37\u306b\u306a\u3063\u305f\u5185\u5bb9\uff1a\n\n\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u4e0a\u8a18\u306e\u30bd\u30fc\u30b9\u304b\u3089\u63a2\u3059\u3053\u3068\u304c\u51fa\u6765\u308c\u3070\u3001\u4e0a\u8a18\u306e\u30bd\u30fc\u30b9\u304c\u3082\u3046\u7406\u89e3\u3067\u304d\u305f\u8a3c\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u5f8c\u306f\u3069\u306e\u3088\u3046\u306b\u7d44\u307f\u5408\u308f\u305b\u3066\u81ea\u5206\u306e\u30bd\u30fc\u30b9\u306e\u4e2d\u306b\u5165\u308c\u308c\u3070\u826f\u3044\u304b\u3092\u8003\u3048\u308c\u3070\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u307e\u3068\u3081\u4e2d\u3002\u3002\u3002\n\n###\u5165\u9580\u306b\u306a\u3063\u305f\u3089\u3001\u52c9\u5f37\u304c\u306a\u304b\u306a\u304b\u9032\u307e\u306a\u304f\u3066\u3001KitchenSink\u306e\u30b5\u30f3\u30d7\u30eb\u30bd\u30fc\u30b9\u3092\u8ffd\u3063\u3066\u52c9\u5f37\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\u8208\u5473\u306e\u3042\u308b\u65b9\u306f\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046\u3002\u30b3\u30df\u30e5\u30cb\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5834\u306b\u306a\u308c\u3070\u306a\u3042\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u25a0\u30bd\u30fc\u30b9\u306eURL\uff1a\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/app.js\n\n\n```js:\n// this sets the background color of the master UIView (when there are no windows/tab groups on it)\nTitanium.UI.setBackgroundColor('#000');\n\n// create tab group\nvar tabGroup = Titanium.UI.createTabGroup({id:'tabGroup1'});\n\n\n//\n// create base UI tab and root window\n//\nvar win1 = Titanium.UI.createWindow({className:'win1'});\n\nvar tab1 = Titanium.UI.createTab({\n\tid:'tab1',\n\twindow:win1\n});\n\n//\n// create controls tab and root window\n//\nvar win2 = Titanium.UI.createWindow({\n\turl:'main_windows/controls.js',\n\ttitleid:'controls_win_title'\n});\nvar tab2 = Titanium.UI.createTab({\n\ticon:'images/tabs/KS_nav_ui.png',\n\ttitleid:'controls_win_title',\n\twindow:win2\n});\n\n\n//\n// create phone tab and root window\n//\nvar win3 = Titanium.UI.createWindow({\n\turl:'main_windows/phone.js',\n\ttitleid:'phone_win_title'\n});\nvar tab3 = Titanium.UI.createTab({\n\ticon:'images/tabs/KS_nav_phone.png',\n\ttitleid:'phone_win_title',\n\twindow:win3\n});\n\n\n//\n// create platform tab and root window\n//\nvar win4 = Titanium.UI.createWindow({\n\turl:'main_windows/platform.js',\n\ttitleid:'platform_win_title'\n});\nvar tab4 = Titanium.UI.createTab({\n\ticon:'images/tabs/KS_nav_platform.png',\n\ttitleid:'platform_win_title',\n//\tCommented out as per 1773\n//\tactive:true,\n\twindow:win4\n});\n\n//\n// create mashup tab and root window\n//\nvar win5 = Titanium.UI.createWindow({\n\turl:'main_windows/mashups.js',\n\ttitleid:'mashups_win_title'\n});\nvar tab5 = Titanium.UI.createTab({\n\ticon:'images/tabs/KS_nav_mashup.png',\n\ttitleid:'mashups_win_title',\n\twindow:win5\n});\n\n//\n//  add tabs\n//\ntabGroup.addTab(tab1);\ntabGroup.addTab(tab2);\ntabGroup.addTab(tab3);\ntabGroup.addTab(tab4);\ntabGroup.addTab(tab5);\n\ntabGroup.addEventListener('open',function()\n{\n\t// set background color back to white after tab group transition\n\tTitanium.UI.setBackgroundColor('#fff');\n});\n\ntabGroup.setActiveTab(1);\n// open tab group with a transition animation\ntabGroup.open({\n\ttransition: Titanium.UI.iPhone && Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT\n});\n\n// setTimeout(function()\n// {\n\t// tabGroup.close({\n\t\t// transition:Titanium.UI.iPhone.AnimationStyle.FLIP_FROM_LEFT\n\t// });\n// },2000);\n\n\n//\n//  TAB GROUP EVENTS\n//\nvar messageWin = Titanium.UI.createWindow({\n\theight:30,\n\twidth:250,\n\tbottom:70,\n\tborderRadius:10,\n\ttouchEnabled:false,\n\n\torientationModes : [\n\tTitanium.UI.PORTRAIT,\n\tTitanium.UI.UPSIDE_PORTRAIT,\n\tTitanium.UI.LANDSCAPE_LEFT,\n\tTitanium.UI.LANDSCAPE_RIGHT\n\t]\n});\nvar messageView = Titanium.UI.createView({\n\tid:'messageview',\n\theight:30,\n\twidth:250,\n\tborderRadius:10,\n\tbackgroundColor:'#000',\n\topacity:0.7,\n\ttouchEnabled:false\n});\n\nvar messageLabel = Titanium.UI.createLabel({\n\tid:'messagelabel',\n\ttext:'',\n\tcolor:'#fff',\n\twidth:250,\n\theight:'auto',\n\tfont:{\n\t\tfontFamily:'Helvetica Neue',\n\t\tfontSize:13\n\t},\n\ttextAlign:'center'\n});\nmessageWin.add(messageView);\nmessageWin.add(messageLabel);\n\n//\n// TAB EVENTS\n//\n\n// tab group close event\ntabGroup.addEventListener('close', function(e)\n{\n\tmessageLabel.text = 'tab group close event';\n\tmessageWin.open();\n\tif (Ti.Platform.osname == \"iphone\") {\n//On iOS, when we're closing the tab group, this is a result\n//of the tab group example of 'Close/Animate Tab Group' and\n//we want to reopen the tab group so the user can continue with\n//using Kitchen Sink. HOWEVER, on Android, this is also triggered\n//when the app is being closed via back button, where reopening\n//the tab group is not desired. This is purely a quirk of the tests.\n\t\ttabGroup.open();\n\t}\n\tsetTimeout(function()\n\t{\n\t\tmessageWin.close({opacity:0,duration:500});\n\t},1000);\n});\n\n\n// tab group open event\ntabGroup.addEventListener('open', function(e)\n{\n\tmessageLabel.text = 'tab group open event';\n\tmessageWin.open();\n\tsetTimeout(function()\n\t{\n\t\tmessageWin.close({opacity:0,duration:500});\n\t},1000);\n\n});\n\n// focus event listener for tracking tab changes\ntabGroup.addEventListener('focus', function(e)\n{\n\tmessageLabel.text = 'tab changed to ' + e.index + ' old index ' + e.previousIndex;\n\tmessageWin.open();\n\tsetTimeout(function()\n\t{\n\t\tTi.API.info('tab ' + e.tab.title  + ' prevTab = ' + (e.previousTab ? e.previousTab.title : null));\n\t\tmessageLabel.text = 'active title ' + e.tab.title + ' old title ' + (e.previousTab ? e.previousTab.title : null);\n\t},1000);\n\n\tsetTimeout(function()\n\t{\n\t\tmessageWin.close({opacity:0,duration:500});\n\t},2000);\n\n});\n\n// blur event listener for tracking tab changes\ntabGroup.addEventListener('blur', function(e)\n{\n\tTitanium.API.info('tab blur - new index ' + e.index + ' old index ' + e.previousIndex);\n});\n\n\n//\n//   CUSTOM EVENTS\n//\nTitanium.App.addEventListener('event_one', function(e)\n{\n\tmessageLabel.text = 'app.js: event one, array length = ' + e.data.length;\n\tmessageWin.open();\n\tsetTimeout(function()\n\t{\n\t\tmessageWin.close({opacity:0,duration:500});\n\t},1000);\n});\n\nTitanium.App.addEventListener('event_two', function(e)\n{\n\tmessageLabel.text = 'app.js: event two, name = ' + e.name;\n\tmessageWin.open();\n\tsetTimeout(function()\n\t{\n\t\tmessageWin.close({opacity:0,duration:500});\n\t},1000);\n\n});\n\n//\n//  CREATE CUSTOM LOADING INDICATOR\n//\nvar indWin = null;\nvar actInd = null;\nfunction showIndicator()\n{\n\tif (Ti.Platform.osname != 'android')\n\t{\n\t\t// window container\n\t\tindWin = Titanium.UI.createWindow({\n\t\t\theight:150,\n\t\t\twidth:150\n\t\t});\n\n\t\t// black view\n\t\tvar indView = Titanium.UI.createView({\n\t\t\theight:150,\n\t\t\twidth:150,\n\t\t\tbackgroundColor:'#000',\n\t\t\tborderRadius:10,\n\t\t\topacity:0.8\n\t\t});\n\t\tindWin.add(indView);\n\t}\n\n\t// loading indicator\n\tactInd = Titanium.UI.createActivityIndicator({\n\t\tstyle:Titanium.UI.iPhone && Titanium.UI.iPhone.ActivityIndicatorStyle.BIG,\n\t\theight:30,\n\t\twidth:30\n\t});\n\n\tif (Ti.Platform.osname != 'android')\n\t{\n\t\tindWin.add(actInd);\n\n\t\t// message\n\t\tvar message = Titanium.UI.createLabel({\n\t\t\ttext:'Loading',\n\t\t\tcolor:'#fff',\n\t\t\twidth:'auto',\n\t\t\theight:'auto',\n\t\t\tfont:{fontSize:20,fontWeight:'bold'},\n\t\t\tbottom:20\n\t\t});\n\t\tindWin.add(message);\n\t\tindWin.open();\n\t} else {\n\t\tactInd.message = \"Loading\";\n\t}\n\tactInd.show();\n\n}\n\nfunction hideIndicator()\n{\n\tactInd.hide();\n\tif (Ti.Platform.osname != 'android') {\n\t\tindWin.close({opacity:0,duration:500});\n\t}\n}\n\n//\n// Add global event handlers to hide/show custom indicator\n//\nTitanium.App.addEventListener('show_indicator', function(e)\n{\n\tTi.API.info(\"IN SHOW INDICATOR\");\n\tshowIndicator();\n});\nTitanium.App.addEventListener('hide_indicator', function(e)\n{\n\tTi.API.info(\"IN HIDE INDICATOR\");\n\thideIndicator();\n});\n\n// trap app shutdown event\nTitanium.App.addEventListener('close',function(e)\n{\n\tTi.API.info(\"The application is being shutdown\");\n});\n\n// test for loading in a root-level include\nTi.include(\"welcome.js\");\n\n// test out logging to developer console, formatting and localization\nTi.API.info(String.format(\"%s%s\",L(\"welcome_message\",\"default_not_set\"),Titanium.version));\nTi.API.debug(String.format(\"%s %s\",L(\"user_agent_message\",\"default_not_set\"),Titanium.userAgent));\n\nTi.API.debug(String.format(\"locale specific date is %s\",String.formatDate(new Date()))); // default is short\nTi.API.debug(String.format(\"locale specific date (medium) is %s\",String.formatDate(new Date(),\"medium\")));\nTi.API.debug(String.format(\"locale specific date (long) is %s\",String.formatDate(new Date(),\"long\")));\nTi.API.debug(String.format(\"locale specific time is %s\",String.formatTime(new Date())));\nTi.API.debug(String.format(\"locale specific currency is %s\",String.formatCurrency(12.99)));\nTi.API.debug(String.format(\"locale specific decimal is %s\",String.formatDecimal(12.99)));\n\n\nTi.API.info(\"should be en, was = \"+Ti.Locale.currentLanguage);\nTi.API.info(\"welcome_message = \"+Ti.Locale.getString(\"welcome_message\"));\nTi.API.info(\"should be def, was = \"+Ti.Locale.getString(\"welcome_message2\",\"def\"));\nTi.API.info(\"welcome_message = \"+L(\"welcome_message\"));\nTi.API.info(\"should be def, was = \"+L(\"welcome_message2\",\"def\"));\nTi.API.info(\"should be 1, was = \"+String.format('%d',1));\nTi.API.info(\"should be 1.0, was = \"+String.format('%1.1f',1));\nTi.API.info(\"should be hello, was = \"+String.format('%s','hello'));\n\n// test to check that we can iterate over titanium based objects\n(function(){\n\tTi.API.info(\"you should see a list of properties (3 or more) below this line\");\n\tTi.API.info(\"---------------------------------------------------------------\");\n\tfor (var p in win1)\n\t{\n\t\tTi.API.info(\"         win1 property: \"+p);\n\t}\n\tTi.API.info(\"Did you see properties? ^^^^^ \");\n\tTi.API.info(\"---------------------------------------------------------------\");\n\n\tTi.API.info(\"you should see a list of modules (3 or more) below this line\");\n\tTi.API.info(\"---------------------------------------------------------------\");\n\tfor (var p in Titanium)\n\t{\n\t\tTi.API.info(\"             module: \"+p);\n\t}\n\tTi.API.info(\"Did you see modules? ^^^^^ \");\n\tTi.API.info(\"---------------------------------------------------------------\");\n})();\n\n\nTi.include(\"examples/version.js\");\n\nif (isiOS4Plus())\n{\n\t// register a background service. this JS will run when the app is backgrounded\n\tvar service = Ti.App.iOS.registerBackgroundService({url:'bg.js'});\n\n\tTi.API.info(\"registered background service = \"+service);\n\n\t// listen for a local notification event\n\tTi.App.iOS.addEventListener('notification',function(e)\n\t{\n\t\tTi.API.info(\"local notification received: \"+JSON.stringify(e));\n\t});\n\n\t// fired when an app resumes for suspension\n\tTi.App.addEventListener('resume',function(e){\n\t\tTi.API.info(\"app is resuming from the background\");\n\t});\n\tTi.App.addEventListener('resumed',function(e){\n\t\tTi.API.info(\"app has resumed from the background\");\n\t});\n\n\tTi.App.addEventListener('pause',function(e){\n\t\tTi.API.info(\"app was paused from the foreground\");\n\t});\n}\n\nif (Ti.App.Properties.getBool('showNotice', true)){\n\tvar alertNotice = Ti.UI.createAlertDialog({\n\t\tbuttonNames: ['OK', 'Visit docs', 'Don\\'t show again'],\n\t\tcancel:0,\n\t\ttitle: 'Notice',\n\t\tmessage: 'While this KitchenSink provides an extensive demonstration of the Titanium API, its structure is not recommended for production apps. Please refer to our documentation for more details.'\n\t});\n\talertNotice.show();\n\talertNotice.addEventListener('click', function(e){\n\t\tif(e.index === 1){\n\t\t\tTitanium.Platform.openURL('http://wiki.appcelerator.org/display/guides/Example+Applications');\n\t\t}\n\t\tif(e.index === 2){\n\t\t\tTi.App.Properties.setBool('showNotice', false);\n\t\t}\n\t});\n}\n```\n\n\u25a0\u30bd\u30fc\u30b9\u306eURL\uff1a\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/app.jss\n\n```css:/Resources/app.jss\n\n@import 'common.jss';\n\n#tabGroup1 {\n\tbarColor:#336699;\n}\n\n.win1 {\n\turl:'main_windows/base_ui.js';\n\ttitleid:'base_ui_title';\n\ttitleImage:'images/appcelerator_small.png';\n}\n\n#tab1 {\n\ticon:'images/tabs/KS_nav_views.png';\n\ttitleid:'base_ui_title';\n}\n```\n\n\u25a0\u30bd\u30fc\u30b9\u306eURL\nhttps://github.com/appcelerator/KitchenSink/blob/master/Resources/common.jss\n\n```css:/Resources/common.jss\n/**\n * common stylesheet defines\n */\n```\n\n***\n##\u30b5\u30f3\u30d7\u30eb\u304b\u3089\u52c9\u5f37\u306b\u306a\u3063\u305f\u5185\u5bb9\uff1a\n###\u4e0b\u8a18\u306e\u5185\u5bb9\u3092\u4e0a\u8a18\u306e\u30bd\u30fc\u30b9\u304b\u3089\u63a2\u3059\u3053\u3068\u304c\u51fa\u6765\u308c\u3070\u3001\u4e0a\u8a18\u306e\u30bd\u30fc\u30b9\u304c\u3082\u3046\u7406\u89e3\u3067\u304d\u305f\u8a3c\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u5f8c\u306f\u3069\u306e\u3088\u3046\u306b\u7d44\u307f\u5408\u308f\u305b\u3066\u81ea\u5206\u306e\u30bd\u30fc\u30b9\u306e\u4e2d\u306b\u5165\u308c\u308c\u3070\u826f\u3044\u304b\u3092\u8003\u3048\u308c\u3070\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u307e\u3068\u3081\u4e2d\u3002\u3002\u3002\n", "tags": ["JavaScript", "Titanium"]}