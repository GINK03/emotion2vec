{"context": " More than 1 year has passed since last update.http://www.2-hats.net/2013/05/backbonejssynccolleciton.html\n\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\ngoogle chrome\u4e0a\u3067\u3001amCoffee \u3082\u3057\u304f\u306f coffee console\u3092\u4f7f\u7528\u3057\u3066\u3001backbone.js\u306esync\u30e1\u30bd\u30c3\u30c9\u306e\u5fdc\u7b54\u3092\u78ba\u304b\u3081\u308b\u3002\njquery, underscore, backbone \u3092\u8aad\u307f\u8fbc\u3093\u3067\u304a\u304f\u3002\ncrud\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306bexpress\u4e0a\u3067api\u3092\u4f5c\u3063\u3066\u304a\u3044\u305f\u3002api\u304c\u30ea\u30bf\u30fc\u30f3\u3059\u308bjson\u306f ROUTING \u3067 res.json\u3067\u793a\u3059\u3002\n\u4ee5\u4e0bcoffee\n\u4f8b\u3048\u3070200\u756a\u3067JSON\u3092\u8fd4\u3059\u5834\u5408\u306f\u3053\u3046\u306a\u308b\u3002\nres.json 200, [JSON]\n\n\nModel.sync\u7de8 \n\nModel = Backbone.Model.extend\n        urlRoot: '/foo'\n        defaults:\n            hoge: 'hoge'\nsample = new Model()\n\nfire = () ->\n    d = new $.Deferred()\n    d.resolve()\n    return d.promise()\nfire()\n.then(modelFetch)\n.then(modelUpdate)\n.then(modelRead)\n.then(modelDelete)\n\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u3092\u7528\u610f\u3057\u305f\u3002$.Deferred\u3092\u7528\u3044\u3066\u3001\u9806\u756a\u3060\u3051\u306f\u6574\u3048\u308b\u3002\n\u4ee5\u4e0bfire\u306b\u7d9a\u304f\u5b9f\u884c\u51e6\u7406\u3092\u9806\u306b\u793a\u3057\u307e\u3059\u3002\n\nmodel.post\n\n# ID\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u3001save \u306fPOST\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308b\u3002\nmodelFetch = () ->\n    d = new $.Deferred()\n    sample.save null,\n        success: (model, res, options) ->\n            console.log \"post success :\", model.attributes\n            alert()\n            d.resolve()\n        error: () -> alert \"error\"\n    d.promise()\n\n########################\n# SERVER LOG\n######################\n# ---post---\n# query:  {}\n# params:  []\n# body:  { hoge: 'hoge' }\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 201, {id: id? or id = 12314134}\n########################\n# RETURN\n########################\n# XHR finished loading: POST \"http://localhost:3000/foo\".\n# post success : Object {id: 12314134}\n# ID \u3092\u6240\u6301\u3059\u308b\u3088\u3046\u306b\u30ea\u30bf\u30fc\u30f3\u3092\u8fd4\u3057\u305f\u3002\n\n\u4e0b\u306e\u307b\u3046\u306f\u30ed\u30b0\u3067\u3059\u3002\nsave\u306e\u7b2c\uff11\u5f15\u6570\u306f\u8ffd\u52a0\u3059\u308b\u30c7\u30fc\u30bf\u3002\nid\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u306e\u3067 POST \u3092\u671f\u5f85\u3057\u307e\u3059\u3002\nSERVER LOG \u306f\u30b5\u30fc\u30d0\u30fc\u3067\u53d6\u308c\u308b\u30ed\u30b0\u3067\u3059\u3002\nparams\u306f\u30af\u30a8\u30ea\u30fc\u304b\u3089\u53d6\u308c\u305f\u30c7\u30fc\u30bf\u3002\nbody\u306f\u30e1\u30bd\u30c3\u30c9\u306b\u6295\u3052\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3002\nROUTING\u3067\u3001\u8fd4\u3059\u30c7\u30fc\u30bf\u3092\u793a\u3057\u307e\u3057\u305f\u3002\nRETURN\u306f\u3001console\u4e0a\u306e\u30ed\u30b0\u3067\u3059\u3002XHR\u301c\u306fajax\u3057\u305f\u6642\u306e\u3001jquery\u306e\u30ed\u30b0\u3067\u3059\u3002\n\nmodel.put\n\n# ID\u3092\u3082\u3063\u3066\u3044\u308b\u306e\u3067\u3001save \u306fPUT\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308b\u3002\nmodelUpdate = () ->\n    d = new $.Deferred()\n    sample.save {foo: \"foo\"}, # \u7b2c\u4e00\u5f15\u6570\u306f\u4efb\u610f\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\n        success: (model, res, options) ->\n            console.log 'put success : ' , model.attributes\n            alert()\n            d.resolve()\n        error: () -> alert \"error\"\n    d.promise()\n########################\n# SERVER LOG\n######################\n# ---put---\n# query:  {}\n# params:  [ id: '12314134' ]\n# body:  { hoge: 'hoge', foo: 'foo', id: 12314134 }\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 201, {}\n########################\n# RETURN\n########################\n# XHR finished loading: PUT \"http://localhost:3000/foo/12314134\".\n# put success :  Object {id: 12314134, foo: \"foo\"}\n\n\nID\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001PUT\u3092\u671f\u5f85\u3057\u307e\u3057\u305f\u3002\n\nmodel.get\nmodelRead = () ->\n    d = new $.Deferred()\n    sample.fetch\n        success: (model, res, options) ->\n            console.log \"get success : \", model.attributes\n            alert()\n            d.resolve()\n        error: () -> alert \"error\"\n    d.promise()\n########################\n# SERVER LOG\n######################\n# ---get---\n# query:  {}\n# params:  [ id: '123124134' ]\n# body:  {}\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 200, {bar: \"bar\", id: req.params.id + 0}\n########################\n# RETURN\n########################\n# XHR finished loading: GET \"http://localhost:3000/foo/12314134\".\n# get success :  Object {id: \"123141340\", foo: \"foo\", bar: \"bar\"}\n\nid\u6301\u3061fetch \u306fget\u3067\u3059\u3002\nres.json\u3067String\u3092\u8fd4\u3059\u3068\u306f\u307e\u308b\u306e\u3067\u3061\u3083\u3093\u3068\u30ad\u30e3\u30b9\u30c8\u3057\u3068\u304f\u3002\n\nmodel.delete\n# id \u3092\u6240\u6301\u3057\u3066\u3044\u308bdestroy\u306fdelete\u3059\u308b\nmodelDelete = () ->\n    sample.destroy\n        success: (model, res, options) ->\n            console.log \"delete success : \", model.attributes\n            alert()\n            alert \"completed!\"\n        error: () -> alert \"error\"\n    d.promise()\n########################\n# SERVER LOG\n######################\n# ---delete---\n# query:  {}\n# params:  [ id: '123141340' ]\n# body:  {}\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 200, {}\n########################\n# RETURN\n########################\n# XHR finished loading: DELETE \"http://localhost:3000/foo/123141340\".\n# delete success :  Object {id: \"123141340\", foo: \"foo\", bar: \"bar\"}\n\n\nCollection.sync \u7de8\nModel = Backbone.Model.extend\n    defaults:\n        hoge: 'hoge'\n\nCollection = Backbone.Collection.extend\n    model: Model\n    url: '/foo2'\n    parse: (res) ->\n        console.log 'receive collection : ', @toJSON()\n        console.log 'parse success : ', res\n        return res\nsamples = new Collection()\n\nfire = () ->\n    d = new $.Deferred()\n    d.resolve()\n    return d.promise()\n\nfire()\n.then(collectionFetch)\n.then(collectionFetchOne)\n.then(collectionCreate)\n.then(collectionUpdate)\n.then(collectionDelete)\n.then(collectionReset)\n\ncollection\u7de8\u3067\u3059\u3002\nmodel\u306b\u306furlRoot\u3092\u6307\u5b9a\u3057\u307e\u305b\u3093\u3002\u6307\u5b9a\u3059\u308b\u3068OneFetch\u3067\u512a\u5148\u3055\u308c\u308b\u3002\nparse\u306f\u3001\u6301\u3063\u3066\u304d\u305fres\u3092\u305d\u306e\u307e\u307e\u6271\u3044\u307e\u3059\u3002fetch\u3057\u305f\u6642\u306f\u3001\u3053\u3053\u3067\u914d\u5217\u3067\u8fd4\u3055\u308c\u3066\u306f\u3058\u3081\u3066\u3001collection\u306b\u30de\u30fc\u30b8\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u56de\u306f\u304d\u3063\u3061\u308a\u914d\u5217json\u304c\u304b\u3048\u3063\u3066\u304f\u308b\u306e\u3067\u6574\u5f62\u3057\u3066\u307e\u305b\u3093\u3002\nfire().then \u306f\u30e2\u30c7\u30eb\u306e\u6642\u3068\u540c\u3058\u3067\u3059\u3002\n\u4ee5\u4e0b\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u3092\u9806\u306b\u793a\u3057\u307e\u3059\u3002\n\ncollection.get\ncollectionFetch = () ->\n    d = new $.Deferred()\n    samples.fetch\n        success: (collection, res, options) ->\n            console.log 'fetch the collection : ', collection.toJSON()\n            alert()\n            d.resolve()\n        error: () -> alert \"error\"\n    d.promise()\n##############################\n# SERVER LOG\n##############################\n# ------GET: the collection ------\n# query:  {}\n# params:  []\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, [{id: 1, data: 'before'},{id: 2, data: 'before'},{id: 3, data: 'before'}]\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2\".\n# receive collection :  []\n# parse success : [Object, Object, Object]\n###\n0: Object\ndata: \"before\"\nid: 1\n__proto__: Object\n1: Object\ndata: \"before\"\nid: 2\n__proto__: Object\n2: Object\ndata: \"before\"\nid: 3\n###\n# fetch the collection : [Object, Object, Object]\n###\n0: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 1\n__proto__: Object\n1: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 2\n__proto__: Object\n2: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 3\n###\n\n\u4e0b\u306e\u307b\u3046\u306f\u30ed\u30b0\u3067\u3059\u3002\n\u3053\u308c\u306ffetch\u3067get\u3057\u3066\u3068\u3063\u3066\u304f\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u30b5\u30fc\u30d0\u30fc\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u540c\u671f\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\nparse\u306f\u53d7\u3051\u305f\u30c7\u30fc\u30bf\u305d\u306e\u3082\u306e\u306a\u306e\u3067hoge\u304c\u306a\u3044\u306e\u3067\u3059\u304c\u3001fetch\u3067\u8fd4\u3063\u3066\u304f\u308bcollection\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306ehoge\u304c\u3042\u308b\u306e\u306b\u6ce8\u76ee\u3002\n\nmodel.get\ncollectionFetchOne = () ->\n    d = new $.Deferred()\n    samples.at(0).fetch\n        success: (model, res, options) ->\n            console.log 'one fetch : ', model.attributes\n            alert()\n            d.resolve()\n        error: () -> alert 'error'\n    d.promise()\n##############################\n# SERVER LOG\n##############################\n# ------GET: a model in the collection ------\n# query:  {}\n# params:  [ id: '1' ]\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, {data: 'after', data2: 'add'}\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2/1\".\n# one fetch :  Object {id: 1, data: \"after\", hoge: \"hoge\", data2: \"add\"}\n\ncollection.at(0).fetch\u306a\u306e\u3067\u666e\u901a\u306e\u30e2\u30c7\u30eb\u306e\u5834\u5408\u306eget\n\ncollection.post\ncollectionCreate = () ->\n    d = new $.Deferred()\n    samples.create {\n        data: 'create' # crud method \u3092\u6307\u5b9a\u3059\u308b\n    },{\n        success: (model, res, options) ->\n            console.log 'create a model in the collection : ', model.attributes\n            alert()\n            d.resolve()\n    }\n    d.promise()\n##############################\n# SERVER LOG\n##############################\n# ------POST: a model in the collection ------\n# query:  {}\n# params:  []\n# body:  { data: 'create', hoge: 'hoge' }\n##############################\n# ROUTING\n##############################\n# res.json 201, {id: 4}\n##############################\n# RETURN\n##############################\n# XHR finished loading: POST \"http://localhost:3000/foo2\".\n# create a model in the collection :  Object {data: \"create\", hoge: \"hoge\", id: 4}\n\n\u30e2\u30c7\u30eb\u3092\u65b0\u898f\u4f5c\u6210\ncreate\u306fpost\u306b\u306a\u308a\u307e\u3059\u3002\n\ncollection.put\ncollectionUpdate = () ->\n    d = new $.Deferred()\n    samples.at(3).save {\n        data: 'update' # crud method \u3092\u6307\u5b9a\u3059\u308b\u3002\n    },{\n        success: (model, res, options) ->\n            console.log 'update a model in the collection : ', model.attributes\n            alert()\n            d.resolve()\n    }\n    d.promise()\n##############################\n# SERVER LOG\n##############################\n# ------PUT: a model in the collection ------\n# query:  {}\n# params:  [ id: '4' ]\n# body:  { data: 'update', hoge: 'hoge', id: 4 }\n##############################\n# ROUTING\n##############################\n# res.json 200, {}\n##############################\n# RETURN\n##############################\n# XHR finished loading: PUT \"http://localhost:3000/foo2/4\".\n# update a model in the collection :  Object {data: \"update\", hoge: \"hoge\", id: 4}\n\n\u4e00\u90e8\u4e0a\u66f8\u304d\nid\u304c\u3042\u308b\u306e\u3067save\u306fput\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\ncollection.delete\ncollectionDelete = () ->\n    d = new $.Deferred()\n    samples.at(0).destroy\n        success: (model, res, options) ->\n            console.log 'delete a model in the collection : ', model.attributes\n            console.log 'after delete : ', samples.toJSON()\n            alert()\n            d.resolve()\n    d.promise()\n##############################\n# SERVER LOG\n##############################\n# ------DELETE: collection delete -----\n# query:  {}\n# params:  [ id: '1' ]\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, {}\n##############################\n# RETURN\n##############################\n# XHR finished loading: DELETE \"http://localhost:3000/foo2/1\".\n# delete a model in the collection :  Object {id: 1, data: \"after\", hoge: \"hoge\", data2: \"add\"}\n# after delete :  [Object, Object, Object]\n\n\u4e00\u90e8\u524a\u9664\n\u4e0b\u306f\u5143\u306b\u623b\u3059\u3060\u3051\ncollectionReset = () ->\n    samples.fetch\n        reset: true\n        success: (collection , res, options) ->\n            console.log 'reset the collection : ', collection.toJSON()\n            alert()\n            console.log 'Completed!'\n##############################\n# SERVER LOG\n##############################\n# ------GET: the collection ------\n# query:  {}\n# params:  []\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, [{id: 1, data: 'before'},{id: 2, data: 'before'},{id: 3, data: 'before'}]\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2\".\n# receive collection :  []\n# parse success : [Object, Object, Object]\n# reset the collection : [Object, Object, Object]\n# Completed!\n\n\u5143\u306b\u623b\u3057\u305f\u3060\u3051\n\u6700\u521d\u3068\u540c\u3058\n\n\nhttp://www.2-hats.net/2013/05/backbonejssynccolleciton.html\n\n\u3092\u53c2\u8003\u306b\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u3002\n\ngoogle chrome\u4e0a\u3067\u3001amCoffee \u3082\u3057\u304f\u306f coffee console\u3092\u4f7f\u7528\u3057\u3066\u3001backbone.js\u306esync\u30e1\u30bd\u30c3\u30c9\u306e\u5fdc\u7b54\u3092\u78ba\u304b\u3081\u308b\u3002\njquery, underscore, backbone \u3092\u8aad\u307f\u8fbc\u3093\u3067\u304a\u304f\u3002\ncrud\u3092\u5b9f\u73fe\u3059\u308b\u305f\u3081\u306bexpress\u4e0a\u3067api\u3092\u4f5c\u3063\u3066\u304a\u3044\u305f\u3002api\u304c\u30ea\u30bf\u30fc\u30f3\u3059\u308bjson\u306f ROUTING \u3067 res.json\u3067\u793a\u3059\u3002\n\n\u4ee5\u4e0bcoffee\n\u4f8b\u3048\u3070200\u756a\u3067JSON\u3092\u8fd4\u3059\u5834\u5408\u306f\u3053\u3046\u306a\u308b\u3002\n\n~~~\nres.json 200, [JSON]\n~~~\n\n\nModel.sync\u7de8 \n----------\n\n~~~coffee\n\nModel = Backbone.Model.extend\n\t\turlRoot: '/foo'\n\t\tdefaults:\n\t\t\thoge: 'hoge'\nsample = new Model()\n\nfire = () ->\n\td = new $.Deferred()\n\td.resolve()\n\treturn d.promise()\nfire()\n.then(modelFetch)\n.then(modelUpdate)\n.then(modelRead)\n.then(modelDelete)\n\n~~~\n\u30b7\u30f3\u30d7\u30eb\u306a\u30e2\u30c7\u30eb\u3092\u7528\u610f\u3057\u305f\u3002$.Deferred\u3092\u7528\u3044\u3066\u3001\u9806\u756a\u3060\u3051\u306f\u6574\u3048\u308b\u3002\n\u4ee5\u4e0bfire\u306b\u7d9a\u304f\u5b9f\u884c\u51e6\u7406\u3092\u9806\u306b\u793a\u3057\u307e\u3059\u3002\n\n### model.post\n\n~~~coffee\n\n# ID\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u3001save \u306fPOST\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308b\u3002\nmodelFetch = () ->\n\td = new $.Deferred()\n\tsample.save null,\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log \"post success :\", model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t\terror: () -> alert \"error\"\n\td.promise()\n\n########################\n# SERVER LOG\n######################\n# ---post---\n# query:  {}\n# params:  []\n# body:  { hoge: 'hoge' }\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 201, {id: id? or id = 12314134}\n########################\n# RETURN\n########################\n# XHR finished loading: POST \"http://localhost:3000/foo\".\n# post success : Object {id: 12314134}\n# ID \u3092\u6240\u6301\u3059\u308b\u3088\u3046\u306b\u30ea\u30bf\u30fc\u30f3\u3092\u8fd4\u3057\u305f\u3002\n~~~\n\n\u4e0b\u306e\u307b\u3046\u306f\u30ed\u30b0\u3067\u3059\u3002\nsave\u306e\u7b2c\uff11\u5f15\u6570\u306f\u8ffd\u52a0\u3059\u308b\u30c7\u30fc\u30bf\u3002\nid\u3092\u6301\u3063\u3066\u3044\u306a\u3044\u306e\u3067 POST \u3092\u671f\u5f85\u3057\u307e\u3059\u3002\nSERVER LOG \u306f\u30b5\u30fc\u30d0\u30fc\u3067\u53d6\u308c\u308b\u30ed\u30b0\u3067\u3059\u3002\nparams\u306f\u30af\u30a8\u30ea\u30fc\u304b\u3089\u53d6\u308c\u305f\u30c7\u30fc\u30bf\u3002\nbody\u306f\u30e1\u30bd\u30c3\u30c9\u306b\u6295\u3052\u3089\u308c\u305f\u30c7\u30fc\u30bf\u3002\nROUTING\u3067\u3001\u8fd4\u3059\u30c7\u30fc\u30bf\u3092\u793a\u3057\u307e\u3057\u305f\u3002\nRETURN\u306f\u3001console\u4e0a\u306e\u30ed\u30b0\u3067\u3059\u3002XHR\u301c\u306fajax\u3057\u305f\u6642\u306e\u3001jquery\u306e\u30ed\u30b0\u3067\u3059\u3002\n\n### model.put\n\n~~~coffee\n\n# ID\u3092\u3082\u3063\u3066\u3044\u308b\u306e\u3067\u3001save \u306fPUT\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u308b\u3002\nmodelUpdate = () ->\n\td = new $.Deferred()\n\tsample.save {foo: \"foo\"}, # \u7b2c\u4e00\u5f15\u6570\u306f\u4efb\u610f\u306e\u8ffd\u52a0\u30d1\u30e9\u30e1\u30fc\u30bf\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log 'put success : ' , model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t\terror: () -> alert \"error\"\n\td.promise()\n########################\n# SERVER LOG\n######################\n# ---put---\n# query:  {}\n# params:  [ id: '12314134' ]\n# body:  { hoge: 'hoge', foo: 'foo', id: 12314134 }\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 201, {}\n########################\n# RETURN\n########################\n# XHR finished loading: PUT \"http://localhost:3000/foo/12314134\".\n# put success :  Object {id: 12314134, foo: \"foo\"}\n\n~~~\n\nID\u3092\u6301\u3063\u3066\u3044\u308b\u306e\u3067\u3001PUT\u3092\u671f\u5f85\u3057\u307e\u3057\u305f\u3002\n\n### model.get\n\n~~~coffee\nmodelRead = () ->\n\td = new $.Deferred()\n\tsample.fetch\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log \"get success : \", model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t\terror: () -> alert \"error\"\n\td.promise()\n########################\n# SERVER LOG\n######################\n# ---get---\n# query:  {}\n# params:  [ id: '123124134' ]\n# body:  {}\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 200, {bar: \"bar\", id: req.params.id + 0}\n########################\n# RETURN\n########################\n# XHR finished loading: GET \"http://localhost:3000/foo/12314134\".\n# get success :  Object {id: \"123141340\", foo: \"foo\", bar: \"bar\"}\n~~~\n\nid\u6301\u3061fetch \u306fget\u3067\u3059\u3002\nres.json\u3067String\u3092\u8fd4\u3059\u3068\u306f\u307e\u308b\u306e\u3067\u3061\u3083\u3093\u3068\u30ad\u30e3\u30b9\u30c8\u3057\u3068\u304f\u3002\n\n### model.delete\n\n~~~coffee\n# id \u3092\u6240\u6301\u3057\u3066\u3044\u308bdestroy\u306fdelete\u3059\u308b\nmodelDelete = () ->\n\tsample.destroy\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log \"delete success : \", model.attributes\n\t\t\talert()\n\t\t\talert \"completed!\"\n\t\terror: () -> alert \"error\"\n\td.promise()\n########################\n# SERVER LOG\n######################\n# ---delete---\n# query:  {}\n# params:  [ id: '123141340' ]\n# body:  {}\n########################\n# ROUTING\n########################\n# (req, res) -> res.json 200, {}\n########################\n# RETURN\n########################\n# XHR finished loading: DELETE \"http://localhost:3000/foo/123141340\".\n# delete success :  Object {id: \"123141340\", foo: \"foo\", bar: \"bar\"}\n~~~\n\n\n\n\n\n\nCollection.sync \u7de8\n-------------\n\n~~~coffee\nModel = Backbone.Model.extend\n    defaults:\n        hoge: 'hoge'\n\nCollection = Backbone.Collection.extend\n\tmodel: Model\n\turl: '/foo2'\n\tparse: (res) ->\n\t\tconsole.log 'receive collection : ', @toJSON()\n\t\tconsole.log 'parse success : ', res\n\t\treturn res\nsamples = new Collection()\n\nfire = () ->\n\td = new $.Deferred()\n\td.resolve()\n\treturn d.promise()\n\nfire()\n.then(collectionFetch)\n.then(collectionFetchOne)\n.then(collectionCreate)\n.then(collectionUpdate)\n.then(collectionDelete)\n.then(collectionReset)\n~~~\n\ncollection\u7de8\u3067\u3059\u3002\nmodel\u306b\u306furlRoot\u3092\u6307\u5b9a\u3057\u307e\u305b\u3093\u3002\u6307\u5b9a\u3059\u308b\u3068OneFetch\u3067\u512a\u5148\u3055\u308c\u308b\u3002\nparse\u306f\u3001\u6301\u3063\u3066\u304d\u305fres\u3092\u305d\u306e\u307e\u307e\u6271\u3044\u307e\u3059\u3002fetch\u3057\u305f\u6642\u306f\u3001\u3053\u3053\u3067\u914d\u5217\u3067\u8fd4\u3055\u308c\u3066\u306f\u3058\u3081\u3066\u3001collection\u306b\u30de\u30fc\u30b8\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\u4eca\u56de\u306f\u304d\u3063\u3061\u308a\u914d\u5217json\u304c\u304b\u3048\u3063\u3066\u304f\u308b\u306e\u3067\u6574\u5f62\u3057\u3066\u307e\u305b\u3093\u3002\n\nfire().then \u306f\u30e2\u30c7\u30eb\u306e\u6642\u3068\u540c\u3058\u3067\u3059\u3002\n\u4ee5\u4e0b\u3001\u5b9f\u884c\u3059\u308b\u51e6\u7406\u3092\u9806\u306b\u793a\u3057\u307e\u3059\u3002\n\n### collection.get\n\n~~~coffee\ncollectionFetch = () ->\n\td = new $.Deferred()\n\tsamples.fetch\n\t\tsuccess: (collection, res, options) ->\n\t\t\tconsole.log 'fetch the collection : ', collection.toJSON()\n\t\t\talert()\n\t\t\td.resolve()\n\t\terror: () -> alert \"error\"\n\td.promise()\n##############################\n# SERVER LOG\n##############################\n# ------GET: the collection ------\n# query:  {}\n# params:  []\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, [{id: 1, data: 'before'},{id: 2, data: 'before'},{id: 3, data: 'before'}]\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2\".\n# receive collection :  []\n# parse success : [Object, Object, Object]\n###\n0: Object\ndata: \"before\"\nid: 1\n__proto__: Object\n1: Object\ndata: \"before\"\nid: 2\n__proto__: Object\n2: Object\ndata: \"before\"\nid: 3\n###\n# fetch the collection : [Object, Object, Object]\n###\n0: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 1\n__proto__: Object\n1: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 2\n__proto__: Object\n2: Object\ndata: \"before\"\nhoge: \"hoge\"\nid: 3\n###\n~~~\n\n\u4e0b\u306e\u307b\u3046\u306f\u30ed\u30b0\u3067\u3059\u3002\n\u3053\u308c\u306ffetch\u3067get\u3057\u3066\u3068\u3063\u3066\u304f\u308b\u30b3\u30fc\u30c9\u3067\u3059\u3002\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u306f\u30b5\u30fc\u30d0\u30fc\u30b9\u30c8\u30ec\u30fc\u30b8\u3068\u540c\u671f\u3057\u305f\u3044\u3082\u306e\u3067\u3059\u3002\n\nparse\u306f\u53d7\u3051\u305f\u30c7\u30fc\u30bf\u305d\u306e\u3082\u306e\u306a\u306e\u3067hoge\u304c\u306a\u3044\u306e\u3067\u3059\u304c\u3001fetch\u3067\u8fd4\u3063\u3066\u304f\u308bcollection\u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306ehoge\u304c\u3042\u308b\u306e\u306b\u6ce8\u76ee\u3002\n\n### model.get\n\n~~~coffee\ncollectionFetchOne = () ->\n\td = new $.Deferred()\n\tsamples.at(0).fetch\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log 'one fetch : ', model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t\terror: () -> alert 'error'\n\td.promise()\n##############################\n# SERVER LOG\n##############################\n# ------GET: a model in the collection ------\n# query:  {}\n# params:  [ id: '1' ]\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, {data: 'after', data2: 'add'}\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2/1\".\n# one fetch :  Object {id: 1, data: \"after\", hoge: \"hoge\", data2: \"add\"}\n~~~\n\ncollection.at(0).fetch\u306a\u306e\u3067\u666e\u901a\u306e\u30e2\u30c7\u30eb\u306e\u5834\u5408\u306eget\n\n\n### collection.post\n~~~coffee\ncollectionCreate = () ->\n\td = new $.Deferred()\n\tsamples.create {\n\t\tdata: 'create' # crud method \u3092\u6307\u5b9a\u3059\u308b\n\t},{\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log 'create a model in the collection : ', model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t}\n\td.promise()\n##############################\n# SERVER LOG\n##############################\n# ------POST: a model in the collection ------\n# query:  {}\n# params:  []\n# body:  { data: 'create', hoge: 'hoge' }\n##############################\n# ROUTING\n##############################\n# res.json 201, {id: 4}\n##############################\n# RETURN\n##############################\n# XHR finished loading: POST \"http://localhost:3000/foo2\".\n# create a model in the collection :  Object {data: \"create\", hoge: \"hoge\", id: 4}\n~~~\n\n\u30e2\u30c7\u30eb\u3092\u65b0\u898f\u4f5c\u6210\ncreate\u306fpost\u306b\u306a\u308a\u307e\u3059\u3002\n\n### collection.put\n~~~coffee\ncollectionUpdate = () ->\n\td = new $.Deferred()\n\tsamples.at(3).save {\n\t\tdata: 'update' # crud method \u3092\u6307\u5b9a\u3059\u308b\u3002\n\t},{\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log 'update a model in the collection : ', model.attributes\n\t\t\talert()\n\t\t\td.resolve()\n\t}\n\td.promise()\n##############################\n# SERVER LOG\n##############################\n# ------PUT: a model in the collection ------\n# query:  {}\n# params:  [ id: '4' ]\n# body:  { data: 'update', hoge: 'hoge', id: 4 }\n##############################\n# ROUTING\n##############################\n# res.json 200, {}\n##############################\n# RETURN\n##############################\n# XHR finished loading: PUT \"http://localhost:3000/foo2/4\".\n# update a model in the collection :  Object {data: \"update\", hoge: \"hoge\", id: 4}\n~~~\n\n\u4e00\u90e8\u4e0a\u66f8\u304d\nid\u304c\u3042\u308b\u306e\u3067save\u306fput\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n### collection.delete\n~~~coffee\ncollectionDelete = () ->\n\td = new $.Deferred()\n\tsamples.at(0).destroy\n\t\tsuccess: (model, res, options) ->\n\t\t\tconsole.log 'delete a model in the collection : ', model.attributes\n\t\t\tconsole.log 'after delete : ', samples.toJSON()\n\t\t\talert()\n\t\t\td.resolve()\n\td.promise()\n##############################\n# SERVER LOG\n##############################\n# ------DELETE: collection delete -----\n# query:  {}\n# params:  [ id: '1' ]\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, {}\n##############################\n# RETURN\n##############################\n# XHR finished loading: DELETE \"http://localhost:3000/foo2/1\".\n# delete a model in the collection :  Object {id: 1, data: \"after\", hoge: \"hoge\", data2: \"add\"}\n# after delete :  [Object, Object, Object]\n~~~\n\n\u4e00\u90e8\u524a\u9664\n\u4e0b\u306f\u5143\u306b\u623b\u3059\u3060\u3051\n\n~~~coffee\ncollectionReset = () ->\n\tsamples.fetch\n\t\treset: true\n\t\tsuccess: (collection , res, options) ->\n\t\t\tconsole.log 'reset the collection : ', collection.toJSON()\n\t\t\talert()\n\t\t\tconsole.log 'Completed!'\n##############################\n# SERVER LOG\n##############################\n# ------GET: the collection ------\n# query:  {}\n# params:  []\n# body:  {}\n##############################\n# ROUTING\n##############################\n# res.json 200, [{id: 1, data: 'before'},{id: 2, data: 'before'},{id: 3, data: 'before'}]\n##############################\n# RETURN\n##############################\n# XHR finished loading: GET \"http://localhost:3000/foo2\".\n# receive collection :  []\n# parse success : [Object, Object, Object]\n# reset the collection : [Object, Object, Object]\n# Completed!\n~~~\n\n\u5143\u306b\u623b\u3057\u305f\u3060\u3051\n\u6700\u521d\u3068\u540c\u3058\n", "tags": ["Backbone.js"]}