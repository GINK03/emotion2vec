{"context": " More than 1 year has passed since last update.go \u3067\u3001html fillinform \u3092\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001@gfx \u3055\u3093\u306e HTML::FillInForm::Lite \u3092 go \u306b\u79fb\u690d\u3057\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u2192 fillinform\n\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u3082\u3064\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u3001htmlfiller \u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u306f regexp \u3067\u306f\u306a\u304f exp-html \u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\u307e\u305a\u306f\u611a\u76f4\u306b regexp \u306e\u5b9f\u88c5\u3092\u305d\u306e\u307e\u307e\u79fb\u690d\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u306b\u3057\u308d go \u306e regexp \u304c\u9045\u304b\u3063\u305f\u306e\u3067\u3001\u8abf\u3079\u3066\u307f\u308b\u3068 go \u306e regexp \u304c\u9045\u3044\u306e\u306f \u5929\u5730\u958b\u95e2\u304b\u3089\u5468\u77e5\u306e\u4e8b\u5b9f\u3067\u3057\u305f\u3002\nhttp://qiita.com/naoina/items/d71ddfab31f4b29f6693\n\u4eca\u3082\u3042\u307e\u308a\u5909\u308f\u3063\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u306e\u307e\u307e\u3060\u3068 perl \u306e\u9ad8\u901f\u306a regexp \u306b\u306f\u5230\u5e95\u592a\u5200\u6253\u3061\u51fa\u6765\u306a\u3044\u306e\u3067 regexp \u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u305d\u3046\u306a\u3068\u3053\u308d\u3068\u304b\u3001\u305d\u3082\u305d\u3082\u81ea\u5206\u306e\u6b8b\u5ff5\u306a go \u5b9f\u88c5\u3092\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002\n\nunquote \u3092 bytes.Trim \u306b\nfunc (f Filler) unquote(tag []byte) []byte {\n    newTag := f.compileMultiLine(`['\"](.*)['\"]`).FindSubmatch(tag)\n    if len(newTag) == 2 {\n        return newTag[1]\n    }\n    return tag\n}\n\n\u2193\nfunc (f Filler) unquote(tag []byte) []byte {\n    return bytes.Trim(tag, `'\"`)\n}\n\nBenchmarkUnquote-4        200000         11279 ns/op       41681 B/op         36 allocs/op\nBenchmarkUnquote-4      20000000           104 ns/op          32 B/op          1 allocs/op\n\n100\u500d \uff0f(^o^)\uff3c\n\n\u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u304a\u304a\u3044\u306e\u306f\u3001\u6bce\u56de regexp.MustCompile \u3057\u3066\u3044\u305f\u304b\u3089\u306a\u306e\u3067\u3001init() \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u305f\u3002\nPASS\nBenchmarkUnquote-4      20000000           106 ns/op          32 B/op          1 allocs/op\nBenchmarkGetType-4        100000         18935 ns/op       46944 B/op         75 allocs/op\nBenchmarkGetValue-4       100000         19344 ns/op       47216 B/op         78 allocs/op\nBenchmarkGetName-4        100000         20656 ns/op       46944 B/op         75 allocs/op\nBenchmarkEscapeHTML-4      50000         33839 ns/op      162289 B/op        118 allocs/op\nBenchmarkFillInput-4       10000        106380 ns/op      235842 B/op        378 allocs/op\nBenchmarkFillTextarea-4    20000         90014 ns/op      264868 B/op        321 allocs/op\nBenchmarkFillSelect-4      10000        223276 ns/op      448898 B/op        874 allocs/op\nBenchmarkFillOption-4      20000         84422 ns/op      193856 B/op        342 allocs/op\nBenchmarkFillinForm-4       2000        966790 ns/op     1996791 B/op       3283 allocs/op\nok      github.com/sheercat/fillinform  21.391s\n\nPASS\nBenchmarkUnquote-4      20000000           105 ns/op          32 B/op          1 allocs/op\nBenchmarkGetType-4       1000000          1256 ns/op         112 B/op          3 allocs/op\nBenchmarkGetValue-4      1000000          1968 ns/op         112 B/op          3 allocs/op\nBenchmarkGetName-4        500000          2673 ns/op         112 B/op          3 allocs/op\nBenchmarkEscapeHTML-4     300000          4455 ns/op         880 B/op         26 allocs/op\nBenchmarkFillInput-4      100000         16124 ns/op         624 B/op         15 allocs/op\nBenchmarkFillTextarea-4   200000          7069 ns/op         624 B/op         14 allocs/op\nBenchmarkFillSelect-4     100000         20599 ns/op        1040 B/op         24 allocs/op\nBenchmarkFillOption-4     300000          5456 ns/op         352 B/op         10 allocs/op\nBenchmarkFillinForm-4      10000        128107 ns/op        9136 B/op        113 allocs/op\nok      github.com/sheercat/fillinform  16.768s\n\n\u5f53\u7136\u3067\u3059\u304c\u3001\u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6e1b\u3063\u3066\u901f\u304f\u306a\u3063\u305f\u3002\uff0f(^o^)\uff3c\n\nregexp.MustCompile \u3092\u6e1b\u3089\u3059\u3064\u3044\u3067\u306b escape html \u3092 bytes.Replace \u306b\nfunc (f Filler) escapeHTML(tag string) string {\n    tag = regexp.MustCompile(`&`).ReplaceAllString(tag, `&amp;`)\n    tag = regexp.MustCompile(`<`).ReplaceAllString(tag, `&lt;`)\n    tag = regexp.MustCompile(`>`).ReplaceAllString(tag, `&gt;`)\n    tag = regexp.MustCompile(`\"`).ReplaceAllString(tag, `&quot;`)\n    return tag\n}\n\n\u2193\nfunc (f Filler) escapeHTML(tag []byte) []byte {\n    return bytes.Replace(bytes.Replace(bytes.Replace(bytes.Replace(tag, []byte{'&'}, BAAmp, -1), []byte{'<'}, BALt, -1), []byte{'>'}, BAGt, -1), []byte{'\"'}, BAQuot, -1)\n}\n\nBenchmarkEscapeHTML-4     300000          4455 ns/op         880 B/op         26 allocs/op\nBenchmarkEscapeHTML-4    1000000          1004 ns/op         336 B/op          4 allocs/op\n\n\u305f\u3044\u305d\u3046\u8aad\u307f\u3065\u3089\u3044\u3051\u3069\u3001\u901f\u304f\u306a\u3063\u305f\u3002\uff0f(^o^)\uff3c\n\n\u7d50\u679c (10000\u56de\u56de\u3057\u305f\u7d50\u679c)\n$carton exec perl bench.pl\n14.766043 at bench.pl line 1079.\n$go run bench.go\n37.802735974s\n\n2.6\u500d\u9045\u3044\u3063\u3066\u3068\u3053\u307e\u3067\u3053\u308c\u305f\u30fc\u3002\u30ef\u30fc\u30a4\uff0f(^o^)\uff3c\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4ed5\u69d8\u3068\u3057\u3066\u306f\u307e\u3060\u5168\u7136\u6a5f\u80fd\u304c\u8db3\u308a\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u3057\u3001utf-8\u306a\u306e\u306b bytes.Replace, bytes.Trim \u3067\u51e6\u7406\u3057\u3066\u3044\u3044\u3093\u3060\u3063\u3051\u3001\u3068\u304b\u305d\u3082\u305d\u3082\u30d5\u30a3\u30eb\u30a4\u30f3\u3059\u308b\u4ed5\u69d8\u304c HTML::FillInForm::Lite \u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3063\u3066\u3044\u307e\u3059\u3002\nhttp.Request.PostForm \u3092\u305d\u306e\u307e\u307e\u6e21\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u3001\u6e21\u3063\u3066\u3053\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u3057\u3066\u306f\u7a7a\u304c\u6307\u5b9a\u3055\u308c\u305f\u304b\u306e\u3088\u3046\u306b\u52d5\u304d\u307e\u3059\u3002\u3053\u306e\u3078\u3093\u306f\u4f55\u304c\u6b63\u3057\u3044\u306e\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\u3067\u3059\u306d\u3002\n\n\u66f8\u3044\u3066\u308b\u904e\u7a0b\u3067\u77e5\u3063\u305f\u3053\u3068\n\n\u30ea\u30c6\u30e9\u30eb\nformData := map[string][]string{\n    \"gender\": []string{\"1\"},\n}\n\n\u306f\nformData := map[string][]string{\n    \"gender\": {\"1\"},\n}\n\n\u3067\u3044\u3044\u3002\u3053\u308c\u306f\u30011.5 \u304b\u3089\u3067\u3059\u304b\u306d\u3002\n\n3\u3064\u4ee5\u4e0a\u306e\u30b9\u30e9\u30a4\u30b9\u3092 append \u3059\u308b\na := []byte(\"X\")\nb := []byte(\"Y\")\nc := []byte(\"Z\")\nd := append(a, append(b, c...)...)\n\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30d5\u306a\u65b9\u6cd5\u306a\u304b\u308d\u3046\u304b\uff1f\n\u3063\u3066\u601d\u3063\u3066\u3053\u3046\u3044\u3046\u306e\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\nfunc appendMultipleByteSlices(bSlices ...[]byte) []byte {\n    i := 0\n    for _, b := range bSlices {\n        i = i + len(b)\n    }\n    capped := make([]byte, 0, i)\n    for _, b := range bSlices {\n        capped = append(capped, b...)\n    }\n\n    return capped\n}\n\n\uff12\u56de\u30eb\u30fc\u30d7\u3059\u308b\u3068\u304b\u5fae\u5999\u306a\u306e\u3067\u3001\u7d50\u5c40\u666e\u901a\u306b append \u30cd\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\n\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u4e2d\u306b\u5909\u6570\u3092\u5c55\u958b\u3059\u308b\u65b9\u6cd5\n\u306a\u3044\n\u30d7\u30e9\u30b9 + \u3067\u7e4b\u3044\u3067\u4f5c\u308b\u3057\u304b\u7121\u3044...\n\nperl \u306e /.../msi \u306f\n(?msi: ... )\n\u3061\u306a\u307f\u306b //x \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\npprof \u306f mac os x \u3067\u306f\u52d5\u304b\u306a\u3044\n\u52d5\u304d\u307e\u305b\u3093\u3002\u30ab\u30fc\u30cd\u30eb\u306b\u30d1\u30c3\u30c1\u3042\u3066\u308c\u3070\u3044\u3044\u305d\u3046\u3067\u3059\u304c\u3001\u3084\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\nhttps://github.com/golang/go/issues/6047\n\n\u305d\u306e\u4ed6\n@lestrrat \u3055\u3093\u306e go-pcre2 \u304c git \u306b\u4e0a\u304c\u3063\u3066\u305f\u306e\u3067\u3001\u6a5f\u4f1a\u3092\u307f\u3066\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f\u3044\u3067\u3059\u3002\ngo \u3067\u3001html fillinform \u3092\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3001@gfx \u3055\u3093\u306e [HTML::FillInForm::Lite](https://github.com/gfx/p5-HTML-FillInForm-Lite) \u3092 go \u306b\u79fb\u690d\u3057\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u2192 [fillinform](https://github.com/sheercat/fillinform)\n\n\u540c\u69d8\u306e\u6a5f\u80fd\u3092\u3082\u3064\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u306f\u3001[htmlfiller](https://github.com/griffy/htmlfiller) \u304c\u3042\u308a\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u306f regexp \u3067\u306f\u306a\u304f [exp-html](https://github.com/levigross/exp-html) \u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u611a\u76f4\u306b regexp \u306e\u5b9f\u88c5\u3092\u305d\u306e\u307e\u307e\u79fb\u690d\u3057\u3066\u307f\u305f\u3093\u3067\u3059\u304c\u3001\u306a\u306b\u3057\u308d go \u306e regexp \u304c\u9045\u304b\u3063\u305f\u306e\u3067\u3001\u8abf\u3079\u3066\u307f\u308b\u3068 go \u306e regexp \u304c\u9045\u3044\u306e\u306f \u5929\u5730\u958b\u95e2\u304b\u3089\u5468\u77e5\u306e\u4e8b\u5b9f\u3067\u3057\u305f\u3002\n\nhttp://qiita.com/naoina/items/d71ddfab31f4b29f6693\n\n\u4eca\u3082\u3042\u307e\u308a\u5909\u308f\u3063\u3066\u306a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u306e\u307e\u307e\u3060\u3068 perl \u306e\u9ad8\u901f\u306a regexp \u306b\u306f\u5230\u5e95\u592a\u5200\u6253\u3061\u51fa\u6765\u306a\u3044\u306e\u3067 regexp \u3092\u4f7f\u308f\u306a\u3044\u3088\u3046\u306b\u3067\u304d\u305d\u3046\u306a\u3068\u3053\u308d\u3068\u304b\u3001\u305d\u3082\u305d\u3082\u81ea\u5206\u306e\u6b8b\u5ff5\u306a go \u5b9f\u88c5\u3092\u66f8\u304d\u63db\u3048\u307e\u3057\u305f\u3002\n\n## unquote \u3092 bytes.Trim \u306b\n\n```go\nfunc (f Filler) unquote(tag []byte) []byte {\n    newTag := f.compileMultiLine(`['\"](.*)['\"]`).FindSubmatch(tag)\n    if len(newTag) == 2 {\n        return newTag[1]\n    }\n    return tag\n}\n```\n\u2193\n\n```go\nfunc (f Filler) unquote(tag []byte) []byte {\n    return bytes.Trim(tag, `'\"`)\n}\n```\n\n```sh\nBenchmarkUnquote-4     \t  200000\t     11279 ns/op\t   41681 B/op\t      36 allocs/op\nBenchmarkUnquote-4     \t20000000\t       104 ns/op\t      32 B/op\t       1 allocs/op\n```\n\n100\u500d \uff0f(^o^)\uff3c\n\n## \u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u304a\u304a\u3044\u306e\u306f\u3001\u6bce\u56de regexp.MustCompile \u3057\u3066\u3044\u305f\u304b\u3089\u306a\u306e\u3067\u3001init() \u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u4fdd\u6301\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u305f\u3002\n\n```sh\nPASS\nBenchmarkUnquote-4     \t20000000\t       106 ns/op\t      32 B/op\t       1 allocs/op\nBenchmarkGetType-4     \t  100000\t     18935 ns/op\t   46944 B/op\t      75 allocs/op\nBenchmarkGetValue-4    \t  100000\t     19344 ns/op\t   47216 B/op\t      78 allocs/op\nBenchmarkGetName-4     \t  100000\t     20656 ns/op\t   46944 B/op\t      75 allocs/op\nBenchmarkEscapeHTML-4  \t   50000\t     33839 ns/op\t  162289 B/op\t     118 allocs/op\nBenchmarkFillInput-4   \t   10000\t    106380 ns/op\t  235842 B/op\t     378 allocs/op\nBenchmarkFillTextarea-4\t   20000\t     90014 ns/op\t  264868 B/op\t     321 allocs/op\nBenchmarkFillSelect-4  \t   10000\t    223276 ns/op\t  448898 B/op\t     874 allocs/op\nBenchmarkFillOption-4  \t   20000\t     84422 ns/op\t  193856 B/op\t     342 allocs/op\nBenchmarkFillinForm-4  \t    2000\t    966790 ns/op\t 1996791 B/op\t    3283 allocs/op\nok  \tgithub.com/sheercat/fillinform\t21.391s\n\nPASS\nBenchmarkUnquote-4     \t20000000\t       105 ns/op\t      32 B/op\t       1 allocs/op\nBenchmarkGetType-4     \t 1000000\t      1256 ns/op\t     112 B/op\t       3 allocs/op\nBenchmarkGetValue-4    \t 1000000\t      1968 ns/op\t     112 B/op\t       3 allocs/op\nBenchmarkGetName-4     \t  500000\t      2673 ns/op\t     112 B/op\t       3 allocs/op\nBenchmarkEscapeHTML-4  \t  300000\t      4455 ns/op\t     880 B/op\t      26 allocs/op\nBenchmarkFillInput-4   \t  100000\t     16124 ns/op\t     624 B/op\t      15 allocs/op\nBenchmarkFillTextarea-4\t  200000\t      7069 ns/op\t     624 B/op\t      14 allocs/op\nBenchmarkFillSelect-4  \t  100000\t     20599 ns/op\t    1040 B/op\t      24 allocs/op\nBenchmarkFillOption-4  \t  300000\t      5456 ns/op\t     352 B/op\t      10 allocs/op\nBenchmarkFillinForm-4  \t   10000\t    128107 ns/op\t    9136 B/op\t     113 allocs/op\nok  \tgithub.com/sheercat/fillinform\t16.768s\n```\n\n\u5f53\u7136\u3067\u3059\u304c\u3001\u30e1\u30e2\u30ea\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u6e1b\u3063\u3066\u901f\u304f\u306a\u3063\u305f\u3002\uff0f(^o^)\uff3c\n\n## regexp.MustCompile \u3092\u6e1b\u3089\u3059\u3064\u3044\u3067\u306b escape html \u3092 bytes.Replace \u306b\n\n```go\nfunc (f Filler) escapeHTML(tag string) string {\n\ttag = regexp.MustCompile(`&`).ReplaceAllString(tag, `&amp;`)\n\ttag = regexp.MustCompile(`<`).ReplaceAllString(tag, `&lt;`)\n\ttag = regexp.MustCompile(`>`).ReplaceAllString(tag, `&gt;`)\n\ttag = regexp.MustCompile(`\"`).ReplaceAllString(tag, `&quot;`)\n\treturn tag\n}\n```\n\n\u2193\n\n```go\nfunc (f Filler) escapeHTML(tag []byte) []byte {\n\treturn bytes.Replace(bytes.Replace(bytes.Replace(bytes.Replace(tag, []byte{'&'}, BAAmp, -1), []byte{'<'}, BALt, -1), []byte{'>'}, BAGt, -1), []byte{'\"'}, BAQuot, -1)\n}\n```\n\n```sh\nBenchmarkEscapeHTML-4  \t  300000\t      4455 ns/op\t     880 B/op\t      26 allocs/op\nBenchmarkEscapeHTML-4  \t 1000000\t      1004 ns/op\t     336 B/op\t       4 allocs/op\n```\n\n\u305f\u3044\u305d\u3046\u8aad\u307f\u3065\u3089\u3044\u3051\u3069\u3001\u901f\u304f\u306a\u3063\u305f\u3002\uff0f(^o^)\uff3c\n\n## \u7d50\u679c (10000\u56de\u56de\u3057\u305f\u7d50\u679c)\n```sh\n$carton exec perl bench.pl\n14.766043 at bench.pl line 1079.\n$go run bench.go\n37.802735974s\n```\n\n2.6\u500d\u9045\u3044\u3063\u3066\u3068\u3053\u307e\u3067\u3053\u308c\u305f\u30fc\u3002\u30ef\u30fc\u30a4\uff0f(^o^)\uff3c\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u4ed5\u69d8\u3068\u3057\u3066\u306f\u307e\u3060\u5168\u7136\u6a5f\u80fd\u304c\u8db3\u308a\u306a\u3044\u6c17\u3082\u3057\u307e\u3059\u3057\u3001utf-8\u306a\u306e\u306b bytes.Replace, bytes.Trim \u3067\u51e6\u7406\u3057\u3066\u3044\u3044\u3093\u3060\u3063\u3051\u3001\u3068\u304b\u305d\u3082\u305d\u3082\u30d5\u30a3\u30eb\u30a4\u30f3\u3059\u308b\u4ed5\u69d8\u304c HTML::FillInForm::Lite \u3068\u306f\u3061\u3087\u3063\u3068\u9055\u3063\u3066\u3044\u307e\u3059\u3002\nhttp.Request.PostForm \u3092\u305d\u306e\u307e\u307e\u6e21\u3057\u3066\u52d5\u304f\u3088\u3046\u306b\u3057\u305f\u304b\u3063\u305f\u305f\u3081\u3001\u6e21\u3063\u3066\u3053\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u306b\u95a2\u3057\u3066\u306f\u7a7a\u304c\u6307\u5b9a\u3055\u308c\u305f\u304b\u306e\u3088\u3046\u306b\u52d5\u304d\u307e\u3059\u3002\u3053\u306e\u3078\u3093\u306f\u4f55\u304c\u6b63\u3057\u3044\u306e\u304b\u3088\u304f\u308f\u304b\u3089\u306a\u3044\u3002\u3067\u3059\u306d\u3002\n\n## \u66f8\u3044\u3066\u308b\u904e\u7a0b\u3067\u77e5\u3063\u305f\u3053\u3068\n### \u30ea\u30c6\u30e9\u30eb\n```go\nformData := map[string][]string{\n\t\"gender\": []string{\"1\"},\n}\n```\n\u306f\n\n```go\nformData := map[string][]string{\n\t\"gender\": {\"1\"},\n}\n```\n\u3067\u3044\u3044\u3002\u3053\u308c\u306f\u30011.5 \u304b\u3089\u3067\u3059\u304b\u306d\u3002\n\n### 3\u3064\u4ee5\u4e0a\u306e\u30b9\u30e9\u30a4\u30b9\u3092 append \u3059\u308b\n```go\na := []byte(\"X\")\nb := []byte(\"Y\")\nc := []byte(\"Z\")\nd := append(a, append(b, c...)...)\n```\n\u3082\u3063\u3068\u30b9\u30de\u30fc\u30d5\u306a\u65b9\u6cd5\u306a\u304b\u308d\u3046\u304b\uff1f\n\n\u3063\u3066\u601d\u3063\u3066\u3053\u3046\u3044\u3046\u306e\u66f8\u3044\u3066\u307f\u305f\u3082\u306e\u306e\n\n```go\nfunc appendMultipleByteSlices(bSlices ...[]byte) []byte {\n    i := 0\n    for _, b := range bSlices {\n        i = i + len(b)\n    }\n    capped := make([]byte, 0, i)\n    for _, b := range bSlices {\n        capped = append(capped, b...)\n    }\n\n    return capped\n}\n```\n\uff12\u56de\u30eb\u30fc\u30d7\u3059\u308b\u3068\u304b\u5fae\u5999\u306a\u306e\u3067\u3001\u7d50\u5c40\u666e\u901a\u306b append \u30cd\u30b9\u30c8\u3057\u307e\u3057\u305f\u3002\n\n### \u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u4e2d\u306b\u5909\u6570\u3092\u5c55\u958b\u3059\u308b\u65b9\u6cd5\n\u306a\u3044\n\u30d7\u30e9\u30b9 + \u3067\u7e4b\u3044\u3067\u4f5c\u308b\u3057\u304b\u7121\u3044...\n\n###  perl \u306e /.../msi \u306f\n(?msi: ... )\n\n\u3061\u306a\u307f\u306b //x \u306b\u76f8\u5f53\u3059\u308b\u3082\u306e\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n### pprof \u306f mac os x \u3067\u306f\u52d5\u304b\u306a\u3044\n\n\u52d5\u304d\u307e\u305b\u3093\u3002\u30ab\u30fc\u30cd\u30eb\u306b\u30d1\u30c3\u30c1\u3042\u3066\u308c\u3070\u3044\u3044\u305d\u3046\u3067\u3059\u304c\u3001\u3084\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nhttps://github.com/golang/go/issues/6047\n\n## \u305d\u306e\u4ed6\n@lestrrat \u3055\u3093\u306e [go-pcre2](https://github.com/lestrrat/go-pcre2) \u304c git \u306b\u4e0a\u304c\u3063\u3066\u305f\u306e\u3067\u3001\u6a5f\u4f1a\u3092\u307f\u3066\u7f6e\u304d\u63db\u3048\u3066\u307f\u305f\u3044\u3067\u3059\u3002\n\n\n", "tags": ["golang", "regexp", "Go"]}