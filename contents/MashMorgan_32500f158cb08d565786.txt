{"context": " More than 1 year has passed since last update.Objective-C\u3092\u307e\u3060\u3088\u304f\u7406\u89e3\u3067\u304d\u3066\u306a\u3044\u521d\u5fc3\u8005\u306e\u79c1\u304c\u3001Swift\u3067BLE\u63a5\u7d9a\u3059\u308b\u307e\u3067\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u500b\u4eba\u30e1\u30e2\u306b\u8fd1\u3044\u306e\u3067\u9593\u9055\u3044\u304c\u3042\u308c\u3070\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n\n\u5b9f\u884c\u74b0\u5883\n\nMac OS X Yosemite 10.7.5\nXcode version 6.0.1\niPhone6plus + iOS 8.1.2\n\n\n\u524d\u63d0\u77e5\u8b58\nBLE(Bluetooth Low Energy)\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u57fa\u672c\u3060\u3051\u3067\u3082\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u79c1\u306fApple\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 Core Bluetooth \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9 \u304c\u975e\u5e38\u306b\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\n\u307e\u305a\u306f\u3072\u3068\u901a\u308a\u76ee\u3092\u901a\u3057\u3066\u4ee5\u4e0b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7406\u89e3\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002\n\n\u30bb\u30f3\u30c8\u30e9\u30eb\u3068\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\n\u30b5\u30fc\u30d3\u30b9\u3068\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\n\u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\n\n\n\u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\n\nmbed-HRM1017\u306bBLE\u63a5\u7d9a\u3057\u3066LED\u70b9\u706f(L\u30c1\u30ab)\n\n\u3000\u3000\u2192mbed HRM1017\u5074\u306fwrite\u7528\u306e\u30b5\u30fc\u30d3\u30b9\"FFF0\"\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\"FFF1\"\u3068\u4eee\u5b9a\u3002mbed\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5bfe\u8c61\u5916\u3002\n\n\u6982\u8981\u8aac\u660e\niOS\u30a2\u30d7\u30ea\u306e\u304a\u304a\u307e\u304b\u306a\u6d41\u308c\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n1-1. CentralManager\u306e\u8d77\u52d5\n1-2. CentralManager\u72b6\u614b\u306e\u53d7\u4fe1\n2-1. Peripheral\u63a2\u7d22\u958b\u59cb\n2-2. Peripheral\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1(\u8907\u6570\u3042\u308c\u3070\u8907\u6570\u56de)\n3-1. \u6307\u5b9a\u3057\u305fPeripheral\u3078\u63a5\u7d9a\u958b\u59cb\n3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1\n4-1. \u5229\u7528\u53ef\u80fdService\u306e\u63a2\u7d22\u958b\u59cb\n4-2. Service\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n5-1. \u5229\u7528\u53ef\u80fdCharacteristic\u306e\u63a2\u7d22\u958b\u59cb\n5-2. Characterristic\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n----\u3053\u3053\u304b\u3089\u306f\u7528\u9014\u306b\u5fdc\u3058\u3066----\n\uff1cWrite\u306e\u5834\u5408\uff1e\n6-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n6-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n\uff1cNotify\u306e\u5834\u5408\uff1e\n7-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n7-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nStoryBoard\u3067\u4f5c\u6210\u3057\u305f\u305f\u3081ViewController\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u8a18\u8f09\u3057\u307e\u3059\u3002\n\u3042\u304f\u307e\u3067\u6d41\u308c\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3001\u30b3\u30d4\u30da\u306f\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\u3002\n\u5f15\u6570\u306bnil\u3092\u8a2d\u5b9a\u3059\u308b\u306a\u3069Apple\u975e\u63a8\u5968\u306e\u5185\u5bb9\u3082\u542b\u307e\u308c\u307e\u3059\u3001\u3054\u6ce8\u610f\u3092\u3002\n\n\nswift\nimport UIKit\nimport CoreBluetooth\n\nclass ViewController: UIViewController, CBCentralManagerDelegate, CBPeripheralDelegate {\n\n    var centralManager: CBCentralManager!\n    private var peripheralArray = [CBPeripheral]()\n    private var serviceArray = [CBService]()\n    private var characteristicArray = [CBCharacteristic]()\n\n    @IBOutlet weak var scanStatus: UILabel!\n    @IBOutlet weak var scanStatusText: UITextView!\n    @IBOutlet weak var connectStatus: UILabel!\n    @IBOutlet weak var sendText: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    // \u30dc\u30bf\u30f3\u62bc\u4e0b\u3067CoreBluetooth\u3092\u8d77\u52d5\n    @IBAction func pushStartBtn(sender: AnyObject) {\n\n        // 1-1. CentralManager\u306e\u8d77\u52d5\n        self.centralManager = CBCentralManager(delegate: self, queue: nil, options: nil)\n    }\n\n    // 1-2. CentralManager\u72b6\u614b\u306e\u53d7\u4fe1\n    func centralManagerDidUpdateState(central: CBCentralManager!) {\n\n        switch (central.state) {\n        case .PoweredOff:\n            println(\"BLE PoweredOff\")\n        case .PoweredOn:\n            println(\"BLE PoweredOn\")\n            // 2-1. Peripheral\u63a2\u7d22\u958b\u59cb\n            central.scanForPeripheralsWithServices(nil, options: nil)\n            /* \u2191\u306e\u7b2c1\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002\n               \u8a72\u5f53\u30b5\u30fc\u30d3\u30b9\u306eCBUUID\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u304c\u671b\u307e\u3057\u3044 */\n        case .Resetting:\n            println(\"BLE Resetting\")\n        case .Unauthorized:\n            println(\"BLE Unauthorized\")\n        case .Unknown:\n            println(\"BLE Unknown\")\n        case .Unsupported:\n            println(\"BLE Unsupported\")\n        }\n    }\n\n    // 2-2. Peripheral\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1(\u8907\u6570\u3042\u308c\u3070\u8907\u6570\u56de)\n    func centralManager(central: CBCentralManager!,\n        didDiscoverPeripheral peripheral: CBPeripheral!,\n        advertisementData: [NSObject : AnyObject]!,\n        RSSI: NSNumber!){\n\n            println(\"name: \\(peripheral.name)\")\n            println(\"UUID: \\(peripheral.identifier.UUIDString)\")\n            println(\"advertisementData: \\(advertisementData)\")\n            println(\"RSSI: \\(RSSI)\")\n\n            // \u914d\u5217\u306b\u8ffd\u52a0\n            self.peripheralArray.append(peripheral as CBPeripheral)\n    }\n\n    // \u30ea\u30b9\u30c8\u304b\u3089\u8a72\u5f53Peripheral\u3092\u9078\u629e\u3057\u63a5\u7d9a\u3092\u958b\u59cb\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        // \u7701\u96fb\u529b\u306e\u305f\u3081\u30b9\u30ad\u30e3\u30f3\u3092\u505c\u6b62\n        self.centralManager.stopScan()\n\n        // 3-1. \u6307\u5b9a\u3057\u305fPeripheral\u3078\u63a5\u7d9a\u958b\u59cb\n        self.centralManager.connectPeripheral(peripheralArray[indexPath.row], options: nil)\n    }\n\n    // 3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1(\u6210\u529f\u6642)\n    func centralManager(central: CBCentralManager!,\n        didConnectPeripheral peripheral: CBPeripheral!)\n    {\n        println(\"connection success!\")\n        // \u30c7\u30ea\u30b2\u30fc\u30c8\u306e\u8a2d\u5b9a\n        peripheral.delegate = self\n\n        // \u4eca\u56de\u306f\u30b5\u30fc\u30d3\u30b9\u3092\"FFF0\"\u306b\u6307\u5b9a\n        let UUID = CBUUID(string: \"FFF0\")\n        // 4-1. \u5229\u7528\u53ef\u80fdService\u306e\u63a2\u7d22\u958b\u59cb\n        peripheral.discoverServices([UUID])\n        /* \u2191\u306e\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002*/\n    }\n\n    // 3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1(\u5931\u6557\u6642)\n    func centralManager(central: CBCentralManager!,\n        didFailToConnectPeripheral peripheral: CBPeripheral!,\n        error: NSError!)\n    {\n        println(\"connection failed\")\n    }\n\n    // 4-2. Service\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!, didDiscoverServices error: NSError!) {\n\n        if (error != nil) {\n            println(\"error: \\(error)\")\n            return\n        }\n\n        for service in peripheral.services\n        {\n            self.serviceArray.append(service as CBService)\n\n            // 5-1. \u5229\u7528\u53ef\u80fdCharacteristic\u306e\u63a2\u7d22\u958b\u59cb\n            peripheral.discoverCharacteristics(nil, forService:service as CBService)\n            /* \u2191\u306e\u7b2c1\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002*/\n        }\n    }\n\n    // 5-2. Characterristic\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!,\n        didDiscoverCharacteristicsForService service: CBService!,\n        error: NSError!)\n    {\n        if (error != nil) {\n            println(\"error: \\(error)\")\n            return\n        }\n\n        for characteristic in service.characteristics {\n            self.characteristicArray.append(characteristic as CBCharacteristic)\n        }\n    }\n\n    // \u30dc\u30bf\u30f3\u62bc\u4e0b\u3067\u66f8\u304d\u8fbc\u307f\u958b\u59cb\n    @IBAction func pushWriteBtn(sender: AnyObject) {\n\n        // \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u3092\u4eee\u3067\u8a2d\u5b9a\n        var value: UInt = 0x0000FF80808080808000\n        let data: NSData = NSData(bytes: &value, length: 10)\n\n        // 6-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n        [peripheral .writeValue(data, forCharacteristic: characteristicArray[0], type: CBCharacteristicWriteType.WithResponse)]\n    }\n\n    // 6-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!,\n        didWriteValueForCharacteristic characteristic: CBCharacteristic!,\n        error: NSError!)\n    {\n        if (error != nil) {\n            println(\"Write...error: \\(error)\")\n            return\n        }\n\n        println(\"Write success\uff01\")\n    }\n}\n\n\n\n\u611f\u60f3\n\n\u30b5\u30f3\u30d7\u30eb\u306f\u591a\u6570\u51fa\u56de\u3063\u3066\u3044\u307e\u3059\u304c\u57fa\u672c\u306f\u3069\u308c\u3082\u540c\u3058\u6d41\u308c\u3067\u3059\u3002\n\u81ea\u5206\u304c\u8e93\u3044\u305f\u306e\u306f\u53d7\u4fe1\u3057\u305fPeripheral\u3084\u30b5\u30fc\u30d3\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u70b9\u3067\u3059\u3002\u3053\u308c\u3055\u3048\u6291\u3048\u3066\u304a\u3051\u3070\u5f8c\u306f\u3069\u3046\u306b\u304b\u306a\u308b\u304b\u306a\u3068\u3002\n\nObjective-C\u3092\u307e\u3060\u3088\u304f\u7406\u89e3\u3067\u304d\u3066\u306a\u3044\u521d\u5fc3\u8005\u306e\u79c1\u304c\u3001Swift\u3067BLE\u63a5\u7d9a\u3059\u308b\u307e\u3067\u306e\u60c5\u5831\u3092\u307e\u3068\u3081\u3066\u307f\u307e\u3057\u305f\u3002\n\u500b\u4eba\u30e1\u30e2\u306b\u8fd1\u3044\u306e\u3067\u9593\u9055\u3044\u304c\u3042\u308c\u3070\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u307e\u305b\u3002\n\n## \u5b9f\u884c\u74b0\u5883\n* Mac OS X Yosemite 10.7.5\n* Xcode version 6.0.1\n* iPhone6plus + iOS 8.1.2\n\n## \u524d\u63d0\u77e5\u8b58\nBLE(Bluetooth Low Energy)\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u57fa\u672c\u3060\u3051\u3067\u3082\u7406\u89e3\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u79c1\u306fApple\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8 [Core Bluetooth \u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30ac\u30a4\u30c9](https://developer.apple.com/jp/documentation/CoreBluetoothPG.pdf) \u304c\u975e\u5e38\u306b\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3067\u3059\u3002\n\u307e\u305a\u306f\u3072\u3068\u901a\u308a\u76ee\u3092\u901a\u3057\u3066\u4ee5\u4e0b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u7406\u89e3\u3059\u308b\u3068\u3088\u3044\u3067\u3059\u3002\n\n* \u30bb\u30f3\u30c8\u30e9\u30eb\u3068\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\n* \u30b5\u30fc\u30d3\u30b9\u3068\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\n* \u30a2\u30c9\u30d0\u30bf\u30a4\u30ba\n\n## \u3084\u308a\u305f\u304b\u3063\u305f\u3053\u3068\n\n* [mbed-HRM1017](http://developer.mbed.org/teams/Switch-Science/wiki/mbed-HRM1017%E3%82%92%E3%81%AF%E3%81%98%E3%82%81%E3%82%88%E3%81%86)\u306bBLE\u63a5\u7d9a\u3057\u3066LED\u70b9\u706f(L\u30c1\u30ab)\n\n\u3000\u3000\u2192mbed HRM1017\u5074\u306fwrite\u7528\u306e\u30b5\u30fc\u30d3\u30b9\"FFF0\"\u3001\u30ad\u30e3\u30e9\u30af\u30bf\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\"FFF1\"\u3068\u4eee\u5b9a\u3002mbed\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u5bfe\u8c61\u5916\u3002\n\n## \u6982\u8981\u8aac\u660e\n\niOS\u30a2\u30d7\u30ea\u306e\u304a\u304a\u307e\u304b\u306a\u6d41\u308c\u306f\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n1-1. CentralManager\u306e\u8d77\u52d5\n1-2. CentralManager\u72b6\u614b\u306e\u53d7\u4fe1\n\n2-1. Peripheral\u63a2\u7d22\u958b\u59cb\n2-2. Peripheral\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1(\u8907\u6570\u3042\u308c\u3070\u8907\u6570\u56de)\n\n3-1. \u6307\u5b9a\u3057\u305fPeripheral\u3078\u63a5\u7d9a\u958b\u59cb\n3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1\n\n4-1. \u5229\u7528\u53ef\u80fdService\u306e\u63a2\u7d22\u958b\u59cb\n4-2. Service\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n\n5-1. \u5229\u7528\u53ef\u80fdCharacteristic\u306e\u63a2\u7d22\u958b\u59cb\n5-2. Characterristic\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n\n----\u3053\u3053\u304b\u3089\u306f\u7528\u9014\u306b\u5fdc\u3058\u3066----\n*\uff1cWrite\u306e\u5834\u5408\uff1e*\n6-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n6-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n\n*\uff1cNotify\u306e\u5834\u5408\uff1e*\n7-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n7-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n* StoryBoard\u3067\u4f5c\u6210\u3057\u305f\u305f\u3081ViewController\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u307f\u8a18\u8f09\u3057\u307e\u3059\u3002\n* \u3042\u304f\u307e\u3067\u6d41\u308c\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u3059\u3001\u30b3\u30d4\u30da\u306f\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u305b\u3093\u3002\n* \u5f15\u6570\u306bnil\u3092\u8a2d\u5b9a\u3059\u308b\u306a\u3069Apple\u975e\u63a8\u5968\u306e\u5185\u5bb9\u3082\u542b\u307e\u308c\u307e\u3059\u3001\u3054\u6ce8\u610f\u3092\u3002\n\n```lang:swift\nimport UIKit\nimport CoreBluetooth\n\nclass ViewController: UIViewController, CBCentralManagerDelegate, CBPeripheralDelegate {\n\n    var centralManager: CBCentralManager!\n    private var peripheralArray = [CBPeripheral]()\n    private var serviceArray = [CBService]()\n    private var characteristicArray = [CBCharacteristic]()\n\n    @IBOutlet weak var scanStatus: UILabel!\n    @IBOutlet weak var scanStatusText: UITextView!\n    @IBOutlet weak var connectStatus: UILabel!\n    @IBOutlet weak var sendText: UITextField!\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n        // Do any additional setup after loading the view, typically from a nib.\n    }\n\n    override func didReceiveMemoryWarning() {\n        super.didReceiveMemoryWarning()\n        // Dispose of any resources that can be recreated.\n    }\n\n    // \u30dc\u30bf\u30f3\u62bc\u4e0b\u3067CoreBluetooth\u3092\u8d77\u52d5\n    @IBAction func pushStartBtn(sender: AnyObject) {\n\n        // 1-1. CentralManager\u306e\u8d77\u52d5\n        self.centralManager = CBCentralManager(delegate: self, queue: nil, options: nil)\n    }\n\n    // 1-2. CentralManager\u72b6\u614b\u306e\u53d7\u4fe1\n    func centralManagerDidUpdateState(central: CBCentralManager!) {\n\n        switch (central.state) {\n        case .PoweredOff:\n            println(\"BLE PoweredOff\")\n        case .PoweredOn:\n            println(\"BLE PoweredOn\")\n            // 2-1. Peripheral\u63a2\u7d22\u958b\u59cb\n            central.scanForPeripheralsWithServices(nil, options: nil)\n            /* \u2191\u306e\u7b2c1\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002\n               \u8a72\u5f53\u30b5\u30fc\u30d3\u30b9\u306eCBUUID\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u914d\u5217\u304c\u671b\u307e\u3057\u3044 */\n        case .Resetting:\n            println(\"BLE Resetting\")\n        case .Unauthorized:\n            println(\"BLE Unauthorized\")\n        case .Unknown:\n            println(\"BLE Unknown\")\n        case .Unsupported:\n            println(\"BLE Unsupported\")\n        }\n    }\n\n    // 2-2. Peripheral\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1(\u8907\u6570\u3042\u308c\u3070\u8907\u6570\u56de)\n    func centralManager(central: CBCentralManager!,\n        didDiscoverPeripheral peripheral: CBPeripheral!,\n        advertisementData: [NSObject : AnyObject]!,\n        RSSI: NSNumber!){\n            \n            println(\"name: \\(peripheral.name)\")\n            println(\"UUID: \\(peripheral.identifier.UUIDString)\")\n            println(\"advertisementData: \\(advertisementData)\")\n            println(\"RSSI: \\(RSSI)\")\n\n            // \u914d\u5217\u306b\u8ffd\u52a0\n            self.peripheralArray.append(peripheral as CBPeripheral)\n    }\n\n    // \u30ea\u30b9\u30c8\u304b\u3089\u8a72\u5f53Peripheral\u3092\u9078\u629e\u3057\u63a5\u7d9a\u3092\u958b\u59cb\n    func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {\n        // \u7701\u96fb\u529b\u306e\u305f\u3081\u30b9\u30ad\u30e3\u30f3\u3092\u505c\u6b62\n        self.centralManager.stopScan()\n        \n        // 3-1. \u6307\u5b9a\u3057\u305fPeripheral\u3078\u63a5\u7d9a\u958b\u59cb\n        self.centralManager.connectPeripheral(peripheralArray[indexPath.row], options: nil)\n    }\n\n    // 3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1(\u6210\u529f\u6642)\n    func centralManager(central: CBCentralManager!,\n        didConnectPeripheral peripheral: CBPeripheral!)\n    {\n        println(\"connection success!\")\n        // \u30c7\u30ea\u30b2\u30fc\u30c8\u306e\u8a2d\u5b9a\n        peripheral.delegate = self\n        \n        // \u4eca\u56de\u306f\u30b5\u30fc\u30d3\u30b9\u3092\"FFF0\"\u306b\u6307\u5b9a\n        let UUID = CBUUID(string: \"FFF0\")\n        // 4-1. \u5229\u7528\u53ef\u80fdService\u306e\u63a2\u7d22\u958b\u59cb\n        peripheral.discoverServices([UUID])\n        /* \u2191\u306e\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002*/\n    }\n\n    // 3-2. Peripheral\u3078\u306e\u63a5\u7d9a\u7d50\u679c\u306e\u53d7\u4fe1(\u5931\u6557\u6642)\n    func centralManager(central: CBCentralManager!,\n        didFailToConnectPeripheral peripheral: CBPeripheral!,\n        error: NSError!)\n    {\n        println(\"connection failed\")\n    }\n\n    // 4-2. Service\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!, didDiscoverServices error: NSError!) {\n        \n        if (error != nil) {\n            println(\"error: \\(error)\")\n            return\n        }\n        \n        for service in peripheral.services\n        {\n            self.serviceArray.append(service as CBService)\n\n            // 5-1. \u5229\u7528\u53ef\u80fdCharacteristic\u306e\u63a2\u7d22\u958b\u59cb\n            peripheral.discoverCharacteristics(nil, forService:service as CBService)\n            /* \u2191\u306e\u7b2c1\u5f15\u6570\u306fnil\u306f\u975e\u63a8\u5968\u3002*/\n        }\n    }\n\n    // 5-2. Characterristic\u63a2\u7d22\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!,\n        didDiscoverCharacteristicsForService service: CBService!,\n        error: NSError!)\n    {\n        if (error != nil) {\n            println(\"error: \\(error)\")\n            return\n        }\n\n        for characteristic in service.characteristics {\n            self.characteristicArray.append(characteristic as CBCharacteristic)\n        }\n    }\n    \n    // \u30dc\u30bf\u30f3\u62bc\u4e0b\u3067\u66f8\u304d\u8fbc\u307f\u958b\u59cb\n    @IBAction func pushWriteBtn(sender: AnyObject) {\n        \n        // \u66f8\u304d\u8fbc\u3080\u30c7\u30fc\u30bf\u3092\u4eee\u3067\u8a2d\u5b9a\n        var value: UInt = 0x0000FF80808080808000\n        let data: NSData = NSData(bytes: &value, length: 10)\n\n        // 6-1. \u6307\u5b9a\u30c7\u30fc\u30bf\u306e\u66f8\u304d\u8fbc\u307f\n        [peripheral .writeValue(data, forCharacteristic: characteristicArray[0], type: CBCharacteristicWriteType.WithResponse)]\n    }\n\n    // 6-2. \u66f8\u304d\u8fbc\u307f\u7d50\u679c\u306e\u53d7\u4fe1\n    func peripheral(peripheral: CBPeripheral!,\n        didWriteValueForCharacteristic characteristic: CBCharacteristic!,\n        error: NSError!)\n    {\n        if (error != nil) {\n            println(\"Write...error: \\(error)\")\n            return\n        }\n        \n        println(\"Write success\uff01\")\n    }\n}\n```\n\n## \u611f\u60f3\n- \u30b5\u30f3\u30d7\u30eb\u306f\u591a\u6570\u51fa\u56de\u3063\u3066\u3044\u307e\u3059\u304c\u57fa\u672c\u306f\u3069\u308c\u3082\u540c\u3058\u6d41\u308c\u3067\u3059\u3002\n- \u81ea\u5206\u304c\u8e93\u3044\u305f\u306e\u306f\u53d7\u4fe1\u3057\u305fPeripheral\u3084\u30b5\u30fc\u30d3\u30b9\u3092\u4fdd\u5b58\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u70b9\u3067\u3059\u3002\u3053\u308c\u3055\u3048\u6291\u3048\u3066\u304a\u3051\u3070\u5f8c\u306f\u3069\u3046\u306b\u304b\u306a\u308b\u304b\u306a\u3068\u3002\n", "tags": ["Swift", "iOS", "iOS8"]}