{"tags": ["stack", "docker", "Haskell", "CircleCI"], "context": " More than 1 year has passed since last update.Haskell\u3067Web Application\u3092\u306f\u3058\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3046\u3002\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001Ruby\u306erack\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u3057\u3066wai\u304c\u3042\u308b\u3002\nstack\u3092\u4f7f\u3063\u3066\u6700\u5c0f\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3064\u304f\u3063\u3066\u307f\u308b\u3002\nstack\u306f\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6b32\u3057\u3044\u3002Mac OSX\u306a\u3089\n$ brew install haskell-stack\n\n\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\u4ed6\u306e\u74b0\u5883\u306f\u3053\u3061\u3089\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u306f\u3058\u3081\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308a\u307e\u3059\u3002\u540d\u524d\u306f wai-sample\u3068\u3057\u307e\u3057\u305f\u3002\n$ stack new wai-sample simple\n$ cd wai-spmale\n\nwai-sample\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306fwai-sample/src\u306b\u66f8\u3044\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002wai\u3068warp\u3068http-type\u3092\u4f7f\u3046\u306e\u3067\u3001wai-sample.cabal\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nwai-sample.cabal\n  build-depends:       base >= 4.7 && < 5\n    , warp, wai, http-types\n\n\n\u3068\u306a\u308b\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ echo \"    , wai, warp, http-types\" >> wai-sample.cabal\n\n\"Hello wai\"\u3068\u51fa\u529b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u3092\u3064\u304f\u3063\u3066\u307f\u307e\u3059\u3002\n\u3068\u3042\u308b\u4e8b\u60c5\u3067\u74b0\u5883\u5909\u6570PORT\u3067\u30dd\u30fc\u30c8\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nMain.hs\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main where\n\nimport Network.Wai (responseLBS, Application)\nimport Network.HTTP.Types (status200)\nimport Network.Wai.Handler.Warp (run, Port)\nimport System.Environment (getEnvironment)\nimport Data.List (lookup)\nimport Data.Maybe\n\nmain :: IO ()\nmain = do\n  port <- getPort\n  putStr \"start Server: http://localhost:\"\n  print port\n  run port helloApp\n\nhelloApp :: Application\nhelloApp req respond = respond $ responseLBS status200 [] \"Hello wai\"\n\ngetPort :: IO Port\ngetPort = getEnvironment >>= return . port\n  where\n    port = fromMaybe defaultPort . fmap read . lookup \"PORT\"\n\ndefaultPort :: Port\ndefaultPort = 3000\n\n\n\u8a18\u8ff0\u304c\u3067\u304d\u305f\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n$ stack build\n$ stack exec wai-sample\n\nstack build\u3067\u30d3\u30eb\u30c9\u3067\u304d\u3066\u3001exec\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\nhttp://localhost:3000 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070, \u300cHello wai\u300d\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3068\u3066\u3082\u7c21\u5358\u3067\u3059\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9: https://github.com/eiel/wai-sample\nDocke Image: https://hub.docker.com/r/eiel/wai-sample/\n\n\u3082\u3063\u3068\u8a73\u3057\u304f\nHaskell\u4e09\u5927Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\n\nyesod\nsnap\nHappStack\n\n\u3089\u3057\u3044\u3067\u3059\u3002\u4eca\u56de\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306fwai\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\u306e\u306fyesod\u306e\u307f\u3002\nyesod\u306f\u3044\u308d\u3044\u308d\u4fbf\u5229\u3067\u3059\u304c\u30cf\u30fc\u30c9\u30eb\u304c\u5c11\u3057\u9ad8\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\nwai\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u306e\u3001warp\u304c\u826f\u3055\u305d\u3046\u306a\u306e\u3067\u3001wai\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nwai\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067yesod\u4ee5\u5916\u306b\u306fscotty\u3001 spock\u306a\u3069\u304c\u3042\u308a\u3001yesod\u3088\u308a\u306f\u5165\u9580\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\u4eca\u56de\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u308f\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u4f7f\u7528\u3057\u305f new\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3059\u304c\u3001\u7b2c2\u5f15\u6570(\u5168\u4f53\u3067\u307f\u308b\u3068\u7b2c3\u5f15\u6570)\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u540d\u3067\u3059\u3002\nstack new wai-sample simple\n\n\u3067\u3042\u308c\u3070simple\u3068\u3044\u3046template\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\ntemplate\u306e\u4e00\u89a7\u306f\nstack templates\n\n\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\n\nWeb/Frameworks - HaskellWiki\nwarp\u3067\u306f\u3058\u3081\u308b\u6700\u5c0f\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 - Qiita\nHaskell\u3067WebApp\u306e\u958b\u767a\u306b\u5fc5\u8981\u306aN\u500b\u306e\u3053\u3068 - maoe\u306e\u30d6\u30ed\u30b0\nNetwork.Wai.Handler.Warp\nNetwork.Wai\n\n\nHaskell\u3067Web Application\u3092\u306f\u3058\u3081\u3066\u307f\u305f\u3044\u3068\u601d\u3046\u3002\n\u8abf\u3079\u3066\u307f\u308b\u3068\u3001Ruby\u306erack\u306e\u3088\u3046\u306a\u3082\u306e\u3068\u3057\u3066wai\u304c\u3042\u308b\u3002\n[stack](https://github.com/commercialhaskell/stack)\u3092\u4f7f\u3063\u3066\u6700\u5c0f\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u3064\u304f\u3063\u3066\u307f\u308b\u3002\n\nstack\u306f\u5225\u9014\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u6b32\u3057\u3044\u3002Mac OSX\u306a\u3089\n\n```\n$ brew install haskell-stack\n```\n\n\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u3002\u4ed6\u306e\u74b0\u5883\u306f[\u3053\u3061\u3089\u3067\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002](https://github.com/commercialhaskell/stack)\n\n\u306f\u3058\u3081\u306b\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u3064\u304f\u308a\u307e\u3059\u3002\u540d\u524d\u306f wai-sample\u3068\u3057\u307e\u3057\u305f\u3002\n\n```\n$ stack new wai-sample simple\n$ cd wai-spmale\n```\n\nwai-sample\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306f`wai-sample/src`\u306b\u66f8\u3044\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u5229\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8ffd\u52a0\u3057\u3066\u3042\u3052\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002wai\u3068warp\u3068http-type\u3092\u4f7f\u3046\u306e\u3067\u3001`wai-sample.cabal`\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```wai-sample.cabal\n  build-depends:       base >= 4.7 && < 5\n    , warp, wai, http-types\n```\n\u3068\u306a\u308b\u3088\u3046\u306b\u3001\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\n$ echo \"    , wai, warp, http-types\" >> wai-sample.cabal\n```\n\n\"Hello wai\"\u3068\u51fa\u529b\u3059\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u3092\u3064\u304f\u3063\u3066\u307f\u307e\u3059\u3002\n\u3068\u3042\u308b\u4e8b\u60c5\u3067\u74b0\u5883\u5909\u6570PORT\u3067\u30dd\u30fc\u30c8\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n```Main.hs\n{-# LANGUAGE OverloadedStrings #-}\nmodule Main where\n\nimport Network.Wai (responseLBS, Application)\nimport Network.HTTP.Types (status200)\nimport Network.Wai.Handler.Warp (run, Port)\nimport System.Environment (getEnvironment)\nimport Data.List (lookup)\nimport Data.Maybe\n\nmain :: IO ()\nmain = do\n  port <- getPort\n  putStr \"start Server: http://localhost:\"\n  print port\n  run port helloApp\n\nhelloApp :: Application\nhelloApp req respond = respond $ responseLBS status200 [] \"Hello wai\"\n\ngetPort :: IO Port\ngetPort = getEnvironment >>= return . port\n  where\n    port = fromMaybe defaultPort . fmap read . lookup \"PORT\"\n\ndefaultPort :: Port\ndefaultPort = 3000\n```\n\n\u8a18\u8ff0\u304c\u3067\u304d\u305f\u3089\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```\n$ stack build\n$ stack exec wai-sample\n```\n\n`stack build`\u3067\u30d3\u30eb\u30c9\u3067\u304d\u3066\u3001exec\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u540d\u3067\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002\n\nhttp://localhost:3000 \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308c\u3070, \u300cHello wai\u300d\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u3068\u3066\u3082\u7c21\u5358\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9: https://github.com/eiel/wai-sample\nDocke Image: https://hub.docker.com/r/eiel/wai-sample/\n\n## \u3082\u3063\u3068\u8a73\u3057\u304f\n\nHaskell\u4e09\u5927Web\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\n\n* yesod\n* snap\n* HappStack\n\n\u3089\u3057\u3044\u3067\u3059\u3002\u4eca\u56de\u5229\u7528\u3057\u3066\u3044\u308b\u306e\u306fwai\u3092\u63a1\u7528\u3057\u3066\u3044\u308b\u306e\u306fyesod\u306e\u307f\u3002\nyesod\u306f\u3044\u308d\u3044\u308d\u4fbf\u5229\u3067\u3059\u304c\u30cf\u30fc\u30c9\u30eb\u304c\u5c11\u3057\u9ad8\u3044\u3088\u3046\u306b\u601d\u3044\u307e\u3059\u3002\nwai\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u306e\u3001warp\u304c\u826f\u3055\u305d\u3046\u306a\u306e\u3067\u3001wai\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\nwai\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067yesod\u4ee5\u5916\u306b\u306f[scotty](http://hackage.haskell.org/)\u3001 [spock](https://www.spock.li/)\u306a\u3069\u304c\u3042\u308a\u3001yesod\u3088\u308a\u306f\u5165\u9580\u3057\u3084\u3059\u3044\u3067\u3059\u3002\n\u4eca\u56de\u306f\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u308f\u306a\u3044\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u4f7f\u7528\u3057\u305f new\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u3059\u304c\u3001\u7b2c2\u5f15\u6570(\u5168\u4f53\u3067\u307f\u308b\u3068\u7b2c3\u5f15\u6570)\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u540d\u3067\u3059\u3002\n\n```\nstack new wai-sample simple\n```\n\n\u3067\u3042\u308c\u3070simple\u3068\u3044\u3046template\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\ntemplate\u306e\u4e00\u89a7\u306f\n\n```\nstack templates\n```\n\n\u3067\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n# \u53c2\u8003\u6587\u732e\n\n* [Web/Frameworks - HaskellWiki](https://wiki.haskell.org/Web/Frameworks)\n* [warp\u3067\u306f\u3058\u3081\u308b\u6700\u5c0f\u30a6\u30a7\u30d6\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3 - Qiita](http://qiita.com/asukamirai/items/ec268ea0e037ecf964fe)\n* [Haskell\u3067WebApp\u306e\u958b\u767a\u306b\u5fc5\u8981\u306aN\u500b\u306e\u3053\u3068 - maoe\u306e\u30d6\u30ed\u30b0](http://maoe.hatenadiary.jp/entry/2013/09/10/182914)\n* [Network.Wai.Handler.Warp](https://hackage.haskell.org/package/warp-3.1.8/docs/Network-Wai-Handler-Warp.html)\n* [Network.Wai](https://hackage.haskell.org/package/wai-3.0.4.0/docs/Network-Wai.html)\n"}