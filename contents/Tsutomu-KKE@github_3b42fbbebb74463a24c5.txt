{"context": " More than 1 year has passed since last update.\n\n\u304d\u3063\u304b\u3051\n\u300c\u6d17\u6fef\u7269\u3001\u5e72\u3057\u3066\u304a\u3044\u3066\u300d\u3068\u8a00\u308f\u308c\u3066\u3001\u5e72\u3057\u306a\u304c\u3089\u8003\u3048\u305f\u3082\u306e\u3002\n\n\u6d17\u6fef\u7269\u554f\u984c\n\u5ea7\u6a19 p=[-3, -2, -1, 0, 1, 2, 3] \u306b\u91cd\u91cf w=[7, 8, 9, 11, 13, 15, 17] \u306e\u6d17\u6fef\u7269\u30921\u3064\u305a\u3064\u9806\u756a\u306b\u5e72\u3057\u305f\u6642\u306b\u3001\u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u5e72\u3057\u65b9\u3092\u6c42\u3081\u3088\n\n\u5b9a\u5f0f\u5316\n\u5b9a\u5f0f\u5316\u306e\u4ed5\u65b9\u306b\u3064\u3044\u3066\u306f\u3001\u7d44\u5408\u305b\u6700\u9069\u5316\u3092\u4f7f\u304a\u3046\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\n\n\n\u5909\u6570\nxijk\u22080,1x_{ijk} \\in {0, 1}\nii\u756a\u76ee\u306b\u4f4d\u7f6ejj\u306b\u6d17\u6fef\u7269kk\u3092\u5e72\u3059\u304b\u3069\u3046\u304b\n\n\n\nyy\n\u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\n\n\n\u76ee\u7684\u95a2\u6570\nyy\n\u2192\\rightarrow \u6700\u5c0f\n\n\n\u5236\u7d04\u6761\u4ef6\n\u2211ni=0\u2211j\u2211kp[j]\u00a0w[k]\u00a0xijk\u2264y\\sum^n_{i=0}{ \\sum_j{ \\sum_k{ p[j] ~ w[k] ~ x_{ijk}} } } \\le y\n\u2200n\u22080,1,\u2026\\forall n \\in {0, 1, \\dots }\n\n\n\n\u6bce\u56de\u7f6e\u304f\u3053\u3068\u5168\u3066\u306e\u4f4d\u7f6e\u306b\u7f6e\u304f\u3053\u3068\u5168\u3066\u306e\u6d17\u6fef\u7269\u3092\u7f6e\u304f\u3053\u3068\n\n\n\n\npython\u3067\u89e3\u3044\u3066\u307f\u308b\nfrom pulp import * # pip install pulp\ndef addvar(lowBound=0, var_count=[0], *args, **kwargs):\n    var_count[0] += 1\n    return LpVariable('v%d' % var_count[0], lowBound=lowBound, *args, **kwargs)\n\np = [-3, -2, -1, 0, 1, 2, 3]\nw = [5, 6, 7, 9, 10, 11, 12]\nr = range(len(p))\nm = LpProblem()\nx = [[[addvar(cat=LpBinary) for _ in r] for _ in r] for _ in r]\ny = addvar()\nm += y\nfor n in r:\n    m += lpSum(x[n][j][k] for j in r for k in r) == 1\n    m += lpSum(x[i][n][k] for i in r for k in r) == 1\n    m += lpSum(x[i][j][n] for i in r for j in r) == 1\n    if n:\n        m += lpSum(p[j] * w[k] * x[i][j][k]\n                   for i in range(n+1) for j in r for k in r) <= y\n        m += lpSum(-p[j] * w[k] * x[i][j][k]\n                   for i in range(n+1) for j in r for k in r) <= y\nm += lpSum(x[0][len(p) // 2][k] for k in r) == 1\nm += lpSum(x[1][j][k] for j in range(len(p) // 2) for k in r) == 1\n%time m.solve()\nprint(LpStatus[m.status], value(m.objective))\n>>>\nWall time: 2 s\nOptimal 10.0\n\n\u4f4d\u7f6e\u5ea7\u6a190\u306b\u306f\u3044\u3064\u7f6e\u3044\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u6700\u521d\u306b\u7f6e\u304f\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u6b21\u306f\u5de6\u53f3\u3069\u3061\u3089\u3067\u3082\u3044\u3044\u306e\u3067\u3001\u5de6\u306b\u56fa\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n\u7d50\u679c\u8868\u793a\nfor i in r:\n    for j in r:\n        for k in r:\n            if value(x[i][j][k]) > 0.5:\n                print(i, j, k)\n>>>\n0 3 6\n1 2 4\n2 5 3\n3 1 2\n4 6 0\n5 0 1\n6 4 5\n\n\n\u6700\u9069\u89e3\u306f\u8907\u6570\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u304a\u305d\u3089\u304f\u5c40\u6240\u63a2\u7d22\u6cd5\u306a\u3069\u306e\u8fd1\u4f3c\u89e3\u6cd5\u306e\u65b9\u304c\u6709\u52b9\u3060\u308d\u3046\u3002\n\n\u8ffd\u8a18\n\u5b9a\u5f0f\u5316\u306b\u304a\u3044\u3066 pandas \u3092\u4f7f\u3046\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3002\n\npy3\nimport pandas as pd\nfrom pulp import * # pip install pulp\ndef addvar(lowBound=0, var_count=[0], *args, **kwargs):\n    var_count[0] += 1\n    return LpVariable('v%d' % var_count[0], lowBound=lowBound, *args, **kwargs)\ndef \u03a3(s, f=None):\n    if not f:\n        return lpSum(t.query(s.format(**globals())).x)\n    return lpSum(t.query(s.format(**globals())).apply(f, axis=1))\n\np = [-3, -2, -1, 0, 1, 2, 3] # \u5ea7\u6a19\nw = [5, 6, 7, 9, 10, 11, 12] # \u91cd\u91cf\nr = range(len(p)) # \u7bc4\u56f2\nm = LpProblem() # \u6570\u7406\u30e2\u30c7\u30eb\nt = pd.DataFrame([(i, j, k, addvar(cat=LpBinary))\n    for i in r for j in r for k in r], columns=['\u9806\u756a', '\u4f4d\u7f6e', '\u91cd\u91cf', 'x'])\ny = addvar() # \u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\nm += y # \u76ee\u7684\u95a2\u6570\nfor n in r:\n    m += \u03a3('\u9806\u756a=={n}') == 1 # \u9806\u756a n \u3067\u7f6e\u304f\u3053\u3068\n    m += \u03a3('\u4f4d\u7f6e=={n}') == 1 # \u4f4d\u7f6e n \u306b\u7f6e\u304f\u3053\u3068\n    m += \u03a3('\u91cd\u91cf=={n}') == 1 # \u6d17\u6fef\u7269 n \u3092\u7f6e\u304f\u3053\u3068\n    if n:\n        # \u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\u304c y \u4ee5\u4e0b\n        m += \u03a3('\u9806\u756a<={n}', lambda q: p[q.\u4f4d\u7f6e] * w[q.\u91cd\u91cf] * q.x) <= y\n        m += \u03a3('\u9806\u756a<={n}', lambda q: -p[q.\u4f4d\u7f6e] * w[q.\u91cd\u91cf] * q.x) <= y\nm += \u03a3('\u9806\u756a==0 & \u4f4d\u7f6e==3') == 1 # \u9806\u756a 0 \u306b \u4f4d\u7f6e 3 \u306b\u7f6e\u304f\u3053\u3068\nm += \u03a3('\u9806\u756a==1 & \u4f4d\u7f6e<=2') == 1 # \u9806\u756a 1 \u306b \u4f4d\u7f6e\u304c 2 \u4ee5\u4e0b\u306b\u7f6e\u304f\u3053\u3068\nm.solve()\nprint(LpStatus[m.status], value(m.objective))\n\n\n## \u304d\u3063\u304b\u3051\n\u300c\u6d17\u6fef\u7269\u3001\u5e72\u3057\u3066\u304a\u3044\u3066\u300d\u3068\u8a00\u308f\u308c\u3066\u3001\u5e72\u3057\u306a\u304c\u3089\u8003\u3048\u305f\u3082\u306e\u3002\n## \u6d17\u6fef\u7269\u554f\u984c\n\u5ea7\u6a19 p=[-3, -2, -1, 0, 1, 2, 3] \u306b\u91cd\u91cf w=[7, 8, 9, 11, 13, 15, 17] \u306e\u6d17\u6fef\u7269\u30921\u3064\u305a\u3064\u9806\u756a\u306b\u5e72\u3057\u305f\u6642\u306b\u3001\u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\u304c\u6700\u5c0f\u306b\u306a\u308b\u5e72\u3057\u65b9\u3092\u6c42\u3081\u3088\n\n## \u5b9a\u5f0f\u5316\n\u5b9a\u5f0f\u5316\u306e\u4ed5\u65b9\u306b\u3064\u3044\u3066\u306f\u3001[\u7d44\u5408\u305b\u6700\u9069\u5316\u3092\u4f7f\u304a\u3046](http://qiita.com/Tsutomu-KKE@github/items/bfbf4c185ed7004b5721)\u3092\u53c2\u8003\u306e\u3053\u3068\u3002\n<table>\n<tr><td>\u5909\u6570</td><td>$x_{ijk} \\in \\{0, 1\\}$</td><td>$i$\u756a\u76ee\u306b\u4f4d\u7f6e$j$\u306b\u6d17\u6fef\u7269$k$\u3092\u5e72\u3059\u304b\u3069\u3046\u304b</td></tr>\n<tr><td></td><td>$y$</td><td>\u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024</td></tr>\n<tr><td>\u76ee\u7684\u95a2\u6570</td><td>$y$</td><td>$\\rightarrow$ \u6700\u5c0f</td></tr>\n<tr><td>\u5236\u7d04\u6761\u4ef6</td><td>$\\sum^n_{i=0}{ \\sum_j{ \\sum_k{ p[j] ~ w[k] ~ x_{ijk}} } } \\le y$</td>\n<td>$\\forall n \\in \\{0, 1, \\dots \\}$</td></tr>\n<tr><td></td><td>\u6bce\u56de\u7f6e\u304f\u3053\u3068<br>\u5168\u3066\u306e\u4f4d\u7f6e\u306b\u7f6e\u304f\u3053\u3068<br>\u5168\u3066\u306e\u6d17\u6fef\u7269\u3092\u7f6e\u304f\u3053\u3068</td><td></td></tr>\n</table>\n\n## python\u3067\u89e3\u3044\u3066\u307f\u308b\n\n```py3:\nfrom pulp import * # pip install pulp\ndef addvar(lowBound=0, var_count=[0], *args, **kwargs):\n    var_count[0] += 1\n    return LpVariable('v%d' % var_count[0], lowBound=lowBound, *args, **kwargs)\n\np = [-3, -2, -1, 0, 1, 2, 3]\nw = [5, 6, 7, 9, 10, 11, 12]\nr = range(len(p))\nm = LpProblem()\nx = [[[addvar(cat=LpBinary) for _ in r] for _ in r] for _ in r]\ny = addvar()\nm += y\nfor n in r:\n    m += lpSum(x[n][j][k] for j in r for k in r) == 1\n    m += lpSum(x[i][n][k] for i in r for k in r) == 1\n    m += lpSum(x[i][j][n] for i in r for j in r) == 1\n    if n:\n        m += lpSum(p[j] * w[k] * x[i][j][k]\n                   for i in range(n+1) for j in r for k in r) <= y\n        m += lpSum(-p[j] * w[k] * x[i][j][k]\n                   for i in range(n+1) for j in r for k in r) <= y\nm += lpSum(x[0][len(p) // 2][k] for k in r) == 1\nm += lpSum(x[1][j][k] for j in range(len(p) // 2) for k in r) == 1\n%time m.solve()\nprint(LpStatus[m.status], value(m.objective))\n>>>\nWall time: 2 s\nOptimal 10.0\n```\n\n\u4f4d\u7f6e\u5ea7\u6a190\u306b\u306f\u3044\u3064\u7f6e\u3044\u3066\u3082\u3044\u3044\u306e\u3067\u3001\u6700\u521d\u306b\u7f6e\u304f\u3053\u3068\u306b\u3057\u3066\u3044\u308b\u3002\u307e\u305f\u3001\u6b21\u306f\u5de6\u53f3\u3069\u3061\u3089\u3067\u3082\u3044\u3044\u306e\u3067\u3001\u5de6\u306b\u56fa\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n```:\u7d50\u679c\u8868\u793a\nfor i in r:\n    for j in r:\n        for k in r:\n            if value(x[i][j][k]) > 0.5:\n                print(i, j, k)\n>>>\n0 3 6\n1 2 4\n2 5 3\n3 1 2\n4 6 0\n5 0 1\n6 4 5\n```\n\n\u6700\u9069\u89e3\u306f\u8907\u6570\u3042\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u304a\u305d\u3089\u304f\u5c40\u6240\u63a2\u7d22\u6cd5\u306a\u3069\u306e\u8fd1\u4f3c\u89e3\u6cd5\u306e\u65b9\u304c\u6709\u52b9\u3060\u308d\u3046\u3002\n\n## \u8ffd\u8a18\n\u5b9a\u5f0f\u5316\u306b\u304a\u3044\u3066 pandas \u3092\u4f7f\u3046\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u898b\u3084\u3059\u304f\u306a\u308b\u3002\n\n```:py3\nimport pandas as pd\nfrom pulp import * # pip install pulp\ndef addvar(lowBound=0, var_count=[0], *args, **kwargs):\n    var_count[0] += 1\n    return LpVariable('v%d' % var_count[0], lowBound=lowBound, *args, **kwargs)\ndef \u03a3(s, f=None):\n    if not f:\n        return lpSum(t.query(s.format(**globals())).x)\n    return lpSum(t.query(s.format(**globals())).apply(f, axis=1))\n\np = [-3, -2, -1, 0, 1, 2, 3] # \u5ea7\u6a19\nw = [5, 6, 7, 9, 10, 11, 12] # \u91cd\u91cf\nr = range(len(p)) # \u7bc4\u56f2\nm = LpProblem() # \u6570\u7406\u30e2\u30c7\u30eb\nt = pd.DataFrame([(i, j, k, addvar(cat=LpBinary))\n    for i in r for j in r for k in r], columns=['\u9806\u756a', '\u4f4d\u7f6e', '\u91cd\u91cf', 'x'])\ny = addvar() # \u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\nm += y # \u76ee\u7684\u95a2\u6570\nfor n in r:\n    m += \u03a3('\u9806\u756a=={n}') == 1 # \u9806\u756a n \u3067\u7f6e\u304f\u3053\u3068\n    m += \u03a3('\u4f4d\u7f6e=={n}') == 1 # \u4f4d\u7f6e n \u306b\u7f6e\u304f\u3053\u3068\n    m += \u03a3('\u91cd\u91cf=={n}') == 1 # \u6d17\u6fef\u7269 n \u3092\u7f6e\u304f\u3053\u3068\n    if n:\n        # \u91cd\u5fc3\u4f4d\u7f6e\u306e\u7d76\u5bfe\u5024\u304c y \u4ee5\u4e0b\n        m += \u03a3('\u9806\u756a<={n}', lambda q: p[q.\u4f4d\u7f6e] * w[q.\u91cd\u91cf] * q.x) <= y\n        m += \u03a3('\u9806\u756a<={n}', lambda q: -p[q.\u4f4d\u7f6e] * w[q.\u91cd\u91cf] * q.x) <= y\nm += \u03a3('\u9806\u756a==0 & \u4f4d\u7f6e==3') == 1 # \u9806\u756a 0 \u306b \u4f4d\u7f6e 3 \u306b\u7f6e\u304f\u3053\u3068\nm += \u03a3('\u9806\u756a==1 & \u4f4d\u7f6e<=2') == 1 # \u9806\u756a 1 \u306b \u4f4d\u7f6e\u304c 2 \u4ee5\u4e0b\u306b\u7f6e\u304f\u3053\u3068\nm.solve()\nprint(LpStatus[m.status], value(m.objective))\n```\n", "tags": ["\u6700\u9069\u5316", "\u7d44\u5408\u305b\u6700\u9069\u5316", "\u6570\u5b66", "Python"]}