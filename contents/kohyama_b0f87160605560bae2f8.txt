{"context": " More than 1 year has passed since last update.\u4eca\u5e74\u306f, \u7d20\u6570\u304c\u5927\u6d41\u884c\u306e\u5146\u3057\uff01\n\u30aa\u30d5\u30a3\u30b9\u306e\u7d66\u6e6f\u5ba4\u3067\u306f\u30c7\u30a3\u30aa\u30d5\u30a9\u30f3\u30c8\u30b9\u65b9\u7a0b\u5f0f\u304c\u3069\u3046\u3068\u304b\u3067\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u3057, \u5148\u65e5\u3082 6 \u6b73\u306e\u5a18\u306b\u300c29\u306f\u7d20\u6570\u3060\u3088\u306d? \u30d1\u30d1\u300d\u3068\u805e\u304b\u308c\u3066\u300c\u3048\u30fc\u3068 (7x7=49 \u306f 29 \u3088\u308a\u5927\u304d\u3044, 7 \u3088\u308a\u5c0f\u3055\u3044\u7d20\u6570 2, 3, 5 \u3067\u5272\u308a\u5207\u308c\u306a\u3044\u304b\u3089) \u305d, \u305d\u3046\u3060\u306d, \u7d20\u6570\u3060\u306d\u30fc.\u300d\u306a\u3093\u3066\u4f1a\u8a71\u304c.\n\u3068\u3044\u3046\u3053\u3068\u3067, \u79c1\u3082\u6d41\u884c\u306b\u4e57\u3063\u3066, \u7d20\u6570\u306b\u3064\u3044\u3066\u6539\u3081\u3066\u8003\u3048\u76f4\u3057\u3066\u307f\u307e\u3057\u305f.\n\u305d\u3053\u305d\u3053\u901f\u304f\u5927\u304d\u306a\u7d20\u6570\u307e\u3067, \u6700\u9069\u5316\u306e\u305f\u3081\u306b\u610f\u5473\u7684\u306a\u7dba\u9e97\u3055\u3092\u3042\u307e\u308a\u72a0\u7272\u306b\u305b\u305a\u306b 2 \u304b\u3089\u59cb\u307e\u308b\u6607\u9806\u306e\u7d20\u6570\u5217\u3092\u6c42\u3081\u305f\u3044\uff01\n\u305d\u3093\u306a\u3042\u306a\u305f\u306e\u305f\u3081\u306b, \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u6367\u3052\u307e\u3059.\n\nClojure \u7248\nClojure \u3067\u7d20\u6570\u5217\u306e\u5b9a\u7fa9\u3092\u66f8\u304d\u307e\u3059\u3068,\n(def prime-numbers\n  ((fn f [x]\n     (cons x\n       (lazy-seq\n         (f (first\n              (drop-while\n                (fn [n]\n                  (some #(zero? (mod n %))\n                    (take-while #(<= (* % %) n) prime-numbers)))\n                (iterate inc (inc x))))))))\n   2))\n\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\u7d20\u6570\u5217\u306f\u300e\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u3046\u3061\u306e\u6700\u5f8c\u306e\u7d20\u6570 x \u3092\u4e0e\u3048\u308b\u3068\u300c\u81ea\u5206\u81ea\u8eab f \u306b, x \u306e\u6b21\u306e\u7d20\u6570\u3092\u4e0e\u3048\u3066\u5f97\u3089\u308c\u308b\u9045\u5ef6\u30b7\u30fc\u30b1\u30f3\u30b9 (lazy-seq ...)\u300d \u306e\u5148\u982d\u306b x \u3092\u4ed8\u52a0\u3059\u308b\u3088\u3046\u306a\u95a2\u6570 f\u300f\u306b 2 \u3092\u4e0e\u3048\u305f\u3082\u306e.\n\u305f\u3060\u3057 x \u306e\u6b21\u306e\u7d20\u6570\u306f, x \u3088\u308a 1\u5927\u304d\u3044\u6570\u304b\u3089, 1\u305a\u3064\u5927\u304d\u304f\u306a\u308b\u6570\u5217 (iterate ...) \u306e\u8981\u7d20\u3092, \u300e\u81ea\u7136\u6570 n \u3092\u4e0e\u3048\u308b\u3068, \u7d20\u6570\u5217 prime-numbers \u306e\u5148\u982d\u304b\u3089, \u4e8c\u4e57\u304c n \u4ee5\u4e0b\u3067\u3042\u308b\u9593, \u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u5217 (take-while ...) \u306e\u4e2d\u306b n \u3092\u5272\u308a\u5207\u308b\u3082\u306e\u304c\u3042\u308c\u3070\u771f\u3092\u8fd4\u3059\u3088\u3046\u306a\u95a2\u6570 (fn [n] ...)\u300f\u306b\u4e0e\u3048\u3066, \u771f\u3092\u8fd4\u3059\u9593\u306e\u8981\u7d20\u3092\u6368\u3066\u305f\u3082\u306e (drop-while ...) \u306e\u6700\u521d\u306e\u8981\u7d20 (first ...) \u3067\u3059.\n\u7d20\u6570\u5217\u3092\u6c42\u3081\u308b\u306e\u306b\u7d20\u6570\u5217\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c, \u6b21\u306e\u7d20\u6570\u306e\u5019\u88dc\u306b\u5bfe\u3057\u3066, \u4e8c\u4e57\u304c\u305d\u306e\u6570\u4ee5\u4e0b\u3067\u3042\u308b\u3088\u3046\u306a\u7d20\u6570\u307e\u3067\u306f\u6c42\u307e\u3063\u3066\u3044\u308b\u306e\u3067, \u5927\u4e08\u592b.\n\u9045\u5ef6\u30b7\u30fc\u30b1\u30f3\u30b9\u4e07\u6b73\uff01\n\nClojure \u7248\u306e\u4f7f\u3044\u65b9\n\u305d\u306e\u307e\u307e\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30e1\u30e2\u30ea\u306e\u8a31\u3059\u9650\u308a\u8868\u793a\u3092\u7d9a\u3051\u307e\u3059.\n\u30b9\u30bf\u30c3\u30af\u306f\u6d88\u8cbb\u3057\u307e\u305b\u3093\u304c, \u30d2\u30fc\u30d7\u306b\u305d\u308c\u307e\u3067\u306b\u6c42\u307e\u3063\u305f\u7d20\u6570\u3092\u899a\u3048\u3066\u3044\u307e\u3059.\nuser=> prime-numbers\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571 577 587 593 599 601 607 613 617 619 631 641 643 647 653 659 661 673 677 683 691 701 709 719 727 733 739 743 751 757 761 769 773 787 797 809 811 821 823 827 829 839 853 857 859 863 877 881 883 887 907 911 919 929 937 941 947 953 967 971 977 983 991 997 1009 1013 1019 1021 1031 1033 1039 1049 1051 1061 1063 1069 1087 1091 1093 1097 1103 1109 1117^C\n\n2\u304b\u3089\u6607\u9806 100\u500b\u306e\u7d20\u6570\nuser=> (take 100 prime-numbers)\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541)\n\n100\u672a\u6e80\u306e\u7d20\u6570\nuser=> (take-while #(< % 100) prime-numbers)\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)\n\n9000\u4ee5\u4e0a, 10000 \u672a\u6e80\u306e\u7d20\u6570\nuser=> (take-while #(< % 10000) (drop-while #(< % 9000) prime-numbers))\n(9001 9007 9011 9013 9029 9041 9043 9049 9059 9067 9091 9103 9109 9127 9133 9137 9151 9157 9161 9173 9181 9187 9199 9203 9209 9221 9227 9239 9241 9257 9277 9281 9283 9293 9311 9319 9323 9337 9341 9343 9349 9371 9377 9391 9397 9403 9413 9419 9421 9431 9433 9437 9439 9461 9463 9467 9473 9479 9491 9497 9511 9521 9533 9539 9547 9551 9587 9601 9613 9619 9623 9629 9631 9643 9649 9661 9677 9679 9689 9697 9719 9721 9733 9739 9743 9749 9767 9769 9781 9787 9791 9803 9811 9817 9829 9833 9839 9851 9857 9859 9871 9883 9887 9901 9907 9923 9929 9931 9941 9949 9967 9973)\n\n10\u672a\u6e80\u306e\u7d20\u6570\u306e\u7dcf\u548c\nuser=> (apply + (take-while #(< % 10) prime-numbers))\n17\n\n200\u4e07\u672a\u6e80\u306e\u7d20\u6570\u306e\u7dcf\u548c\nuser=> (time (apply + (take-while #(< % 2000000) prime-numbers)))\n\"Elapsed time: 6372.194 msecs\"\n\n6.4\u79d2 (\u624b\u5143\u306e MacBook Pro) \u3067\u6c42\u307e\u308a\u307e\u3057\u305f. (\u6c42\u307e\u3063\u305f\u548c\u305d\u306e\u3082\u306e\u306f\u63b2\u8f09\u3057\u306a\u3044\u3067\u304a\u304d\u307e\u3059.)\n\nClojure \u306e\u5b9f\u884c\u74b0\u5883\u304c\u624b\u5143\u306b\u306a\u3044\u3088\n\u3063\u3066\u4eba\u306b\u306f Coding Ground \u304c\u3042\u308a\u307e\u3059.\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u3063\u3066\u304a\u3044\u305f\u306e\u3067 primes in Clojure \u3078\u884c\u3063\u3066, teminal \u306b (take 100 prime-numbers) \u3068\u304b\u5165\u308c\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\u3053\u3093\u306a\u611f\u3058\n\n\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\nREPL \u629c\u3051\u308b\u306e\u306f (System/exit 0).\n\nHaskell \u7248\n\u300c\u52d5\u7684\u578b\u306e\u8a00\u8a9e\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059. Haskell \u306a\u3089\u5206\u304b\u308b\u3093\u3067\u3059\u3051\u3069...\u300d\u3068\u3044\u3046\u3042\u306a\u305f. Google \u7ffb\u8a33\u3067\u5143\u8a00\u8a9e\u306b Clojure, \u7ffb\u8a33\u5148\u306b Haskell \u3092\u6307\u5b9a\u3057\u3066, \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u4ed8\u3051\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\u9078\u3079\u306a\u3044?\n\u3075\u30fc\u3093. \u307e\u3060\u5bfe\u5fdc\u3057\u3066\u306a\u304b\u3063\u305f\u306e\u304b.\n\u3067\u306f, Clojurian \u306e\u62d9\u3044\u7ffb\u8a33\u3067\u7533\u3057\u8a33\u306a\u3044\u3067\u3059\u304c, \u4e0b\u8a18\u3067\u610f\u56f3\u3092\u6c72\u307f\u53d6\u3063\u3066\u304f\u3060\u3055\u3044.\nprimeNumbers = f 2\n  where\n    f x = x:(f $\n             head $\n             dropWhile (\\n -> elem 0 $\n                              map (mod n) $\n                              takeWhile (\\c -> c * c <= n) primeNumbers)\n                       [(succ x)..])\n\n\nHaskell \u306e\u958b\u767a\u74b0\u5883\u304c\u306a\u3044\u3088\n\u3063\u3066\u4eba. Coding Ground \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 primes in Haskell \u3078\u884c\u3063\u3066, ghci \u7acb\u3061\u4e0a\u3052\u3066, :l main.hs \u3057\u3066, take 100 primeNumbers \u3068\u304b sum $ takeWhile (< 10) primeNumbers \u3068\u304b, \u5165\u529b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\u3053\u3093\u306a\u611f\u3058\n\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3067\u3057\u3087\u3046\u304b.\nGHCi \u3092\u629c\u3051\u308b\u306e\u306f :quit \u3067\u3059.\n\u3053\u308c\u3067\u3042\u306a\u305f\u3082\u7d20\u6570\u901a\u306e\u4ef2\u9593\u5165\u308a\u3067\u3059\u306d\uff01\n--\n\u4e8c\u5e74\u304f\u3089\u3044\u524d\u306b\u66f8\u3044\u305f\u3082\u306e -> Project Euler Problem 10 \u89e3\u7b54\u3068\u30b3\u30e1\u30f3\u30c8\n\n\u4eca\u5e74\u306f, \u7d20\u6570\u304c\u5927\u6d41\u884c\u306e\u5146\u3057\uff01\n\n\u30aa\u30d5\u30a3\u30b9\u306e\u7d66\u6e6f\u5ba4\u3067\u306f\u30c7\u30a3\u30aa\u30d5\u30a9\u30f3\u30c8\u30b9\u65b9\u7a0b\u5f0f\u304c\u3069\u3046\u3068\u304b\u3067\u76db\u308a\u4e0a\u304c\u3063\u3066\u3044\u308b\u3057, \u5148\u65e5\u3082 6 \u6b73\u306e\u5a18\u306b\u300c29\u306f\u7d20\u6570\u3060\u3088\u306d? \u30d1\u30d1\u300d\u3068\u805e\u304b\u308c\u3066\u300c\u3048\u30fc\u3068 (7x7=49 \u306f 29 \u3088\u308a\u5927\u304d\u3044, 7 \u3088\u308a\u5c0f\u3055\u3044\u7d20\u6570 2, 3, 5 \u3067\u5272\u308a\u5207\u308c\u306a\u3044\u304b\u3089) \u305d, \u305d\u3046\u3060\u306d, \u7d20\u6570\u3060\u306d\u30fc.\u300d\u306a\u3093\u3066\u4f1a\u8a71\u304c.\n\n\u3068\u3044\u3046\u3053\u3068\u3067, \u79c1\u3082\u6d41\u884c\u306b\u4e57\u3063\u3066, \u7d20\u6570\u306b\u3064\u3044\u3066\u6539\u3081\u3066\u8003\u3048\u76f4\u3057\u3066\u307f\u307e\u3057\u305f.\n\n\u305d\u3053\u305d\u3053\u901f\u304f\u5927\u304d\u306a\u7d20\u6570\u307e\u3067, \u6700\u9069\u5316\u306e\u305f\u3081\u306b\u610f\u5473\u7684\u306a\u7dba\u9e97\u3055\u3092\u3042\u307e\u308a\u72a0\u7272\u306b\u305b\u305a\u306b 2 \u304b\u3089\u59cb\u307e\u308b\u6607\u9806\u306e\u7d20\u6570\u5217\u3092\u6c42\u3081\u305f\u3044\uff01\n\n\u305d\u3093\u306a\u3042\u306a\u305f\u306e\u305f\u3081\u306b, \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u6367\u3052\u307e\u3059.\n\n## Clojure \u7248\n\nClojure \u3067\u7d20\u6570\u5217\u306e\u5b9a\u7fa9\u3092\u66f8\u304d\u307e\u3059\u3068,\n\n```clj\n(def prime-numbers\n  ((fn f [x]\n     (cons x\n       (lazy-seq\n         (f (first\n              (drop-while\n                (fn [n]\n                  (some #(zero? (mod n %))\n                    (take-while #(<= (* % %) n) prime-numbers)))\n                (iterate inc (inc x))))))))\n   2))\n```\n\n\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n\n\u7d20\u6570\u5217\u306f\u300e\u898b\u3064\u304b\u3063\u3066\u3044\u308b\u3046\u3061\u306e\u6700\u5f8c\u306e\u7d20\u6570 `x` \u3092\u4e0e\u3048\u308b\u3068\u300c\u81ea\u5206\u81ea\u8eab `f` \u306b, `x` \u306e\u6b21\u306e\u7d20\u6570\u3092\u4e0e\u3048\u3066\u5f97\u3089\u308c\u308b\u9045\u5ef6\u30b7\u30fc\u30b1\u30f3\u30b9 `(lazy-seq ...)`\u300d \u306e\u5148\u982d\u306b `x` \u3092\u4ed8\u52a0\u3059\u308b\u3088\u3046\u306a\u95a2\u6570 `f`\u300f\u306b 2 \u3092\u4e0e\u3048\u305f\u3082\u306e.\n\n\u305f\u3060\u3057 `x` \u306e\u6b21\u306e\u7d20\u6570\u306f, `x` \u3088\u308a 1\u5927\u304d\u3044\u6570\u304b\u3089, 1\u305a\u3064\u5927\u304d\u304f\u306a\u308b\u6570\u5217 `(iterate ...)` \u306e\u8981\u7d20\u3092, \u300e\u81ea\u7136\u6570 `n` \u3092\u4e0e\u3048\u308b\u3068, \u7d20\u6570\u5217 `prime-numbers` \u306e\u5148\u982d\u304b\u3089, \u4e8c\u4e57\u304c `n` \u4ee5\u4e0b\u3067\u3042\u308b\u9593, \u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u305f\u5217 `(take-while ...)` \u306e\u4e2d\u306b `n` \u3092\u5272\u308a\u5207\u308b\u3082\u306e\u304c\u3042\u308c\u3070\u771f\u3092\u8fd4\u3059\u3088\u3046\u306a\u95a2\u6570 `(fn [n] ...)`\u300f\u306b\u4e0e\u3048\u3066, \u771f\u3092\u8fd4\u3059\u9593\u306e\u8981\u7d20\u3092\u6368\u3066\u305f\u3082\u306e `(drop-while ...)` \u306e\u6700\u521d\u306e\u8981\u7d20 `(first ...)` \u3067\u3059.\n\n\u7d20\u6570\u5217\u3092\u6c42\u3081\u308b\u306e\u306b\u7d20\u6570\u5217\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c, \u6b21\u306e\u7d20\u6570\u306e\u5019\u88dc\u306b\u5bfe\u3057\u3066, \u4e8c\u4e57\u304c\u305d\u306e\u6570\u4ee5\u4e0b\u3067\u3042\u308b\u3088\u3046\u306a\u7d20\u6570\u307e\u3067\u306f\u6c42\u307e\u3063\u3066\u3044\u308b\u306e\u3067, \u5927\u4e08\u592b.\n\u9045\u5ef6\u30b7\u30fc\u30b1\u30f3\u30b9\u4e07\u6b73\uff01\n\n## Clojure \u7248\u306e\u4f7f\u3044\u65b9\n\n\u305d\u306e\u307e\u307e\u8868\u793a\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u30e1\u30e2\u30ea\u306e\u8a31\u3059\u9650\u308a\u8868\u793a\u3092\u7d9a\u3051\u307e\u3059.\n\u30b9\u30bf\u30c3\u30af\u306f\u6d88\u8cbb\u3057\u307e\u305b\u3093\u304c, \u30d2\u30fc\u30d7\u306b\u305d\u308c\u307e\u3067\u306b\u6c42\u307e\u3063\u305f\u7d20\u6570\u3092\u899a\u3048\u3066\u3044\u307e\u3059.\n\n```clj\nuser=> prime-numbers\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541 547 557 563 569 571 577 587 593 599 601 607 613 617 619 631 641 643 647 653 659 661 673 677 683 691 701 709 719 727 733 739 743 751 757 761 769 773 787 797 809 811 821 823 827 829 839 853 857 859 863 877 881 883 887 907 911 919 929 937 941 947 953 967 971 977 983 991 997 1009 1013 1019 1021 1031 1033 1039 1049 1051 1061 1063 1069 1087 1091 1093 1097 1103 1109 1117^C\n```\n\n2\u304b\u3089\u6607\u9806 100\u500b\u306e\u7d20\u6570\n\n```clj\nuser=> (take 100 prime-numbers)\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251 257 263 269 271 277 281 283 293 307 311 313 317 331 337 347 349 353 359 367 373 379 383 389 397 401 409 419 421 431 433 439 443 449 457 461 463 467 479 487 491 499 503 509 521 523 541)\n```\n\n100\u672a\u6e80\u306e\u7d20\u6570\n\n```clj\nuser=> (take-while #(< % 100) prime-numbers)\n(2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97)\n```\n\n9000\u4ee5\u4e0a, 10000 \u672a\u6e80\u306e\u7d20\u6570\n\n```clj\nuser=> (take-while #(< % 10000) (drop-while #(< % 9000) prime-numbers))\n(9001 9007 9011 9013 9029 9041 9043 9049 9059 9067 9091 9103 9109 9127 9133 9137 9151 9157 9161 9173 9181 9187 9199 9203 9209 9221 9227 9239 9241 9257 9277 9281 9283 9293 9311 9319 9323 9337 9341 9343 9349 9371 9377 9391 9397 9403 9413 9419 9421 9431 9433 9437 9439 9461 9463 9467 9473 9479 9491 9497 9511 9521 9533 9539 9547 9551 9587 9601 9613 9619 9623 9629 9631 9643 9649 9661 9677 9679 9689 9697 9719 9721 9733 9739 9743 9749 9767 9769 9781 9787 9791 9803 9811 9817 9829 9833 9839 9851 9857 9859 9871 9883 9887 9901 9907 9923 9929 9931 9941 9949 9967 9973)\n```\n\n10\u672a\u6e80\u306e\u7d20\u6570\u306e\u7dcf\u548c\n\n```clj\nuser=> (apply + (take-while #(< % 10) prime-numbers))\n17\n```\n\n200\u4e07\u672a\u6e80\u306e\u7d20\u6570\u306e\u7dcf\u548c\n\n```clj\nuser=> (time (apply + (take-while #(< % 2000000) prime-numbers)))\n\"Elapsed time: 6372.194 msecs\"\n```\n\n6.4\u79d2 (\u624b\u5143\u306e MacBook Pro) \u3067\u6c42\u307e\u308a\u307e\u3057\u305f. (\u6c42\u307e\u3063\u305f\u548c\u305d\u306e\u3082\u306e\u306f\u63b2\u8f09\u3057\u306a\u3044\u3067\u304a\u304d\u307e\u3059.)\n\n## Clojure \u306e\u5b9f\u884c\u74b0\u5883\u304c\u624b\u5143\u306b\u306a\u3044\u3088\n\n\u3063\u3066\u4eba\u306b\u306f [Coding Ground](http://www.tutorialspoint.com/codingground.htm) \u304c\u3042\u308a\u307e\u3059.\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u3063\u3066\u304a\u3044\u305f\u306e\u3067 [primes in Clojure](http://goo.gl/5DpYJW) \u3078\u884c\u3063\u3066, teminal \u306b `(take 100 prime-numbers)` \u3068\u304b\u5165\u308c\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\u3053\u3093\u306a\u611f\u3058\n![ss 2015-02-05 16.04.36.png](https://qiita-image-store.s3.amazonaws.com/0/12593/70bec86b-9510-2482-d7fd-b523ede5828c.png \"ss 2015-02-05 16.04.36.png\")\n\u3067\u5b9f\u884c\u3057\u3066\u307f\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\nREPL \u629c\u3051\u308b\u306e\u306f `(System/exit 0)`.\n\n## Haskell \u7248\n\n\u300c\u52d5\u7684\u578b\u306e\u8a00\u8a9e\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3067\u3059. Haskell \u306a\u3089\u5206\u304b\u308b\u3093\u3067\u3059\u3051\u3069...\u300d\u3068\u3044\u3046\u3042\u306a\u305f. Google \u7ffb\u8a33\u3067\u5143\u8a00\u8a9e\u306b Clojure, \u7ffb\u8a33\u5148\u306b Haskell \u3092\u6307\u5b9a\u3057\u3066, \u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u3092\u8cbc\u4ed8\u3051\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\n\u9078\u3079\u306a\u3044?\n\n\u3075\u30fc\u3093. \u307e\u3060\u5bfe\u5fdc\u3057\u3066\u306a\u304b\u3063\u305f\u306e\u304b.\n\n\u3067\u306f, Clojurian \u306e\u62d9\u3044\u7ffb\u8a33\u3067\u7533\u3057\u8a33\u306a\u3044\u3067\u3059\u304c, \u4e0b\u8a18\u3067\u610f\u56f3\u3092\u6c72\u307f\u53d6\u3063\u3066\u304f\u3060\u3055\u3044.\n\n```hs\nprimeNumbers = f 2\n  where\n    f x = x:(f $\n             head $\n             dropWhile (\\n -> elem 0 $\n                              map (mod n) $\n                              takeWhile (\\c -> c * c <= n) primeNumbers)\n                       [(succ x)..])\n```\n\n## Haskell \u306e\u958b\u767a\u74b0\u5883\u304c\u306a\u3044\u3088\n\n\u3063\u3066\u4eba. Coding Ground \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 [primes in Haskell](http://goo.gl/9cvmLh) \u3078\u884c\u3063\u3066, `ghci` \u7acb\u3061\u4e0a\u3052\u3066, `:l main.hs` \u3057\u3066, `take 100 primeNumbers` \u3068\u304b `sum $ takeWhile (< 10) primeNumbers` \u3068\u304b, \u5165\u529b\u3057\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\n\u3053\u3093\u306a\u611f\u3058\n![ss 2015-02-05 17.21.41.png](https://qiita-image-store.s3.amazonaws.com/0/12593/b0cc497b-1a09-2171-c3cc-d13e4399352f.png \"ss 2015-02-05 17.21.41.png\")\n\u3067\u5b9f\u884c\u3067\u304d\u307e\u3057\u305f\u3067\u3057\u3087\u3046\u304b.\n\nGHCi \u3092\u629c\u3051\u308b\u306e\u306f `:quit` \u3067\u3059.\n\n\n\u3053\u308c\u3067\u3042\u306a\u305f\u3082\u7d20\u6570\u901a\u306e\u4ef2\u9593\u5165\u308a\u3067\u3059\u306d\uff01\n\n--\n\n\n\u4e8c\u5e74\u304f\u3089\u3044\u524d\u306b\u66f8\u3044\u305f\u3082\u306e -> [Project Euler Problem 10 \u89e3\u7b54\u3068\u30b3\u30e1\u30f3\u30c8](https://gist.github.com/kohyama/4243539)\n", "tags": ["Clojure", "Haskell"]}