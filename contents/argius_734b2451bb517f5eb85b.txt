{"context": "NumPy\u306f\u3001\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u3092\u884c\u3046\u3001\u7279\u306b\u884c\u5217\u3084\u591a\u6b21\u5143\u914d\u5217\u306e\u8a08\u7b97\u3092\u3059\u308b\u306e\u306b\u4fbf\u5229\u306aPython\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\u3067\u3059\u304c\u3001\u6570\u5b66\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u3001NumPy\u306f\u4fbf\u5229\u3067\u3059\u3002\n\u7279\u306b\u3001[ [1,2],[3,4],[5,6] ]\u306e\u3088\u3046\u306a\u591a\u91cd\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u306b\u3001NumPy\u306e\u914d\u5217\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001NumPy\u306e\u4e3b\u306b\u914d\u5217\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3001\u7528\u4f8b\u3092\u6319\u3052\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\nNumPy\u306f\u3001\u6570\u5b66\u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001NumPy\u306e\u914d\u5217\u306f\u3001\u6570\u5b66\u3068\u306f\u95a2\u4fc2\u306a\u304f\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\n\u3068\u306f\u8a00\u3048\u3001\u30a6\u30a7\u30d6\u4e0a\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u6570\u5b66\u3067\u4f7f\u3046\u4eba\u306e\u3082\u306e\u304c\u591a\u3044\u3067\u3059\u3057\u3001\u6570\u5b66\u4ee5\u5916\u3067\u5177\u4f53\u7684\u306b\u3069\u3046\u4f7f\u3046\u306e\u304b\u306f\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u6570\u5b66\u3068\u306f\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u4f7f\u3044\u65b9\u3092\u3044\u304f\u3064\u304b\u4f8b\u793a\u3057\u3066\u3001NumPy\u306e\uff08\u4e3b\u306b\u914d\u5217\u306e\uff09\u4fbf\u5229\u3055\u3092\u7d39\u4ecb\u3059\u308b\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\u3067\u3059\u3002\n\u79c1\u3082\u6570\u5b66\u306f\u5f97\u610f\u3067\u306f\u306a\u3044\u3067\u3059\u3057\u3001\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u307b\u3068\u3093\u3069\u5206\u304b\u3089\u306a\u3044\u30ec\u30d9\u30eb\u3067\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u5c11\u306a\u304b\u3089\u305a\u6570\u5b66\u306b\u95a2\u4fc2\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u304f\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u8a00\u3063\u3066\u3044\u308b\u6570\u5b66\u3068\u306f\u3001\u884c\u5217\u3068\u304b\u5fae\u5206\u7a4d\u5206\u306a\u3069\u3067\u4f7f\u3046\u6570\u5f0f\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3059\u308b\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306e\u3053\u3068\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\n\u5185\u5bb9\u306e\u4e00\u90e8\u306b\u6570\u5b66\u3063\u307d\u3044\u3082\u306e\u304c\u5c11\u3057\u3060\u3051\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u672c\u984c\u306b\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3067\u8aad\u307f\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\n\u3053\u3053\u3067\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u7528\u4f8b\u306f\u3001\u30c7\u30fc\u30bf\u64cd\u4f5c\u3092\u5b66\u3076\u305f\u3081\u306e\u30d2\u30f3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u5fc5\u305a\u3057\u3082\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u30b3\u30fc\u30c9\u304c\u52b9\u7387\u306e\u826f\u3044\u51e6\u7406\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u306b\u904b\u7528\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001\u5fc5\u305a\u3054\u81ea\u8eab\u3067\u691c\u8a3c\u3057\u3066\u304b\u3089\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\u5bfe\u8c61\u3068\u306a\u308b\u8aad\u8005\nNumPy\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044Python\u30e6\u30fc\u30b6\u30fc\u3002\n\u7279\u306b\u3001\u6570\u5b66\u304c\u82e6\u624b\u3067NumPy\u3092\u656c\u9060\u3057\u3066\u3044\u308b\u65b9\u3084\u3001\u6570\u5b66\u3068\u7121\u7e01\u3067NumPy\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\n\n\u5b9f\u884c\u74b0\u5883\n\nOS\u30fb\u51e6\u7406\u7cfb\u306a\u3069\n\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u306f\u3001\u4e3b\u306b\u3053\u308c\u2193\u3067\u3059\u3002\n\nPython 3.5.2 | Anaconda 4.1.1 (64-bit)\nWindows 7 64bit\n\n\u5168\u90e8\u306f\u78ba\u8a8d\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u7279\u306bOS\u4f9d\u5b58\u306e\u3082\u306e\u306f\u6271\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u7d50\u679c\u306f\u4e3b\u306b\u5bfe\u8a71\u74b0\u5883\u306e\u3082\u306e\u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u304c\u3001Jupyter Notebook\u3092\u4f7f\u3063\u3066\u3044\u308b\u7b87\u6240\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u4f7f\u7528\u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u30fb\u30c4\u30fc\u30eb\n\u4e0b\u8a18\u306e\u3046\u3061\u3001\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306fcalendar\u3060\u3051\u3067\u3059\u3002\n\n\n\n\u30e2\u30b8\u30e5\u30fc\u30eb\u540d\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u8aac\u660e\n\n\n\n\nNumPy\n1.11.1\n\u4eca\u56de\u306e\u4e3b\u5f79\u3068\u306a\u308b\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\ncalendar\n(3.5.2)\n\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u6271\u3046\u305f\u3081\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\nPIL\n1.1.7\n\u753b\u50cf\u51e6\u7406\u30e2\u30b8\u30e5\u30fc\u30eb\n\n\nMatplotlib\n1.5.1\n\u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb \u4eca\u56de\u306f\u753b\u50cf\u8868\u793a\u3067\u4f7f\u7528\n\n\nJupyter Notebook\n4.2.1\nWeb\u30d6\u30e9\u30a6\u30b6\u30fc\u4e0a\u3067\u4f7f\u3048\u308bREPL\n\n\n\n\u203b Jupyter Notebook\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001Notebook Server\u306e\u3082\u306e\n\n\u57fa\u790e\u77e5\u8b58\nNumPy\u30e2\u30b8\u30e5\u30fc\u30ebnumpy\u3092\u4f7f\u3046\u306b\u306f\u3001\u5225\u540dnp\u3092\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u3082\u305d\u3046\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nimport numpy as np\n\n\u3053\u306e\u8a18\u4e8b\u3067\u3082\u305d\u308c\u306b\u5023\u3044\u307e\u3059\u3002\n\u672c\u6587\u4e2d\u3067\u306f\u3001\u3053\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u7121\u3044\u5834\u5408\u3067\u3082\u3001\u5e38\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u6e08\u307f\u306e\u3082\u306e\u3068\u3057\u3066\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\nNumPy\u306e\u914d\u5217\u306f\u3001numpy.ndarray\uff08\u4ee5\u964d\u3001\u672c\u6587\u4e2d\u3067\u306f\"NumPy\u306e\u914d\u5217\"\u3068\u8868\u8a18\uff09\u3068\u3044\u3046\u578b\u306b\u306a\u308a\u307e\u3059\u3002\n>>> np.array([1, 2])\narray([1, 2])\n>>> type(np.array([1, 2]))\n<class 'numpy.ndarray'>\n\n\u3053\u308c\u306f\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3068\u4e00\u898b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001NumPy\u306e\u914d\u5217\u306f\u305d\u308c\u3068\u6bd4\u3079\u3066\u975e\u5e38\u306b\u8c4a\u5bcc\u306a\u64cd\u4f5c\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3068\u306e\u6027\u8cea\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u30ea\u30f3\u30af\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nNumPy \u914d\u5217\u306e\u57fa\u790e \u2014 \u6a5f\u68b0\u5b66\u7fd2\u306e Python \u3068\u306e\u51fa\u4f1a\u3044\nhttp://www.kamishima.net/mlmpyja/nbayes1/ndarray.html\n\n\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc - 1\u6b21\u5143\u914d\u5217\u304b\u30892\u6b21\u5143\u3078\u306e\u5909\u63db\n\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3068\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u30c6\u30ad\u30b9\u30c8\u3067\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3092\u6307\u3057\u307e\u3059\u3002\nUnix-like\u74b0\u5883\u306ecal\u30b3\u30de\u30f3\u30c9\u3067\u51fa\u529b\u3055\u308c\u308b\u306e\u3082\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3067\u3059\u3002\n\u5b9f\u306f\u3001Python\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u300c\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u300d\u305d\u306e\u3082\u306e\u3092\u6271\u3046\u30e2\u30b8\u30e5\u30fc\u30ebcalendar\u304c\u3042\u308a\u307e\u3059\u3002\ncalendar \u2013 \u65e5\u4ed8\u306e\u51e6\u7406 - Python Module of the Week\nhttp://ja.pymotw.com/2/calendar/\n\u306a\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u30a4\u30c1\u304b\u3089\u4f5c\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001NumPy\u3092\u4f7f\u3046\u4f8b\u3068\u3057\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u984c\u6750\u3060\u3063\u305f\u306e\u3067\u3001\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u9805\u3067\u306f\u3001calendar\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u307b\u307c\u4f7f\u308f\u305a\u306b\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u300c\u307b\u307c\u300d\u3068\u66f8\u3044\u305f\u306e\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u4f5c\u308b\u306b\u306f\u6708\u521d\u65e5\u3068\u6708\u672b\u65e5\u3092\u6c42\u3081\u308b\u8a08\u7b97\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u8a08\u7b97\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u306e\u306f\u4eca\u56de\u306e\u76ee\u7684\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u6c42\u3081\u308b\u306e\u306bcalendar\u30e2\u30b8\u30e5\u30fc\u30eb\u306emonthrange()\u95a2\u6570\u3092\u4f7f\u3046\u304b\u3089\u3067\u3059\u3002\n\n\u51e6\u7406\u30a4\u30e1\u30fc\u30b8\n\u305d\u308c\u3067\u306f\u672c\u984c\u306b\u5165\u308a\u307e\u3059\u3002\n\u5b9f\u7269\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306f7x6\u306e\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e2\u6b21\u5143\u8868\u306b\u9069\u5207\u306a\u5024\u3092\u5f53\u3066\u306f\u3081\u3066\u3044\u3051\u3070\u30019\u52729\u5206\u5b8c\u6210\u3067\u3059\u3002\n\u3068\u306f\u3044\u3048\u3001\u6700\u521d\u304b\u30892\u6b21\u5143\u3060\u3068\u51e6\u7406\u304c\u9762\u5012\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u3068\u3053\u308d\u306f1\u6b21\u5143\u914d\u5217\u3067\u884c\u3044\u3001\u5f8c\u30672\u6b21\u5143\u306b\u5909\u63db\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\nNumPy\u306e\u914d\u5217\u306b\u306f\u3001N\u6b21\u5143\u306e\u914d\u5217\u3092\u4efb\u610f\u306e\u6b21\u5143\u306b\u5909\u63db\u3059\u308b\u3001reshape()\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u30011\u6b21\u5143\u914d\u5217\u30922\u6b21\u5143\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\u304a\u304a\u3056\u3063\u3071\u306b\u66f8\u304f\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u51e6\u7406\u3092\u3059\u308c\u3070OK\u3067\u3057\u3087\u3046\u3002\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09\n\u30fb1\u301c31\uff081\u6b21\u5143\uff09\n\u30fb\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09\n   \u2193 \u7d50\u5408\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff0b1\u301c31\uff0b\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09 \u203b\u30b5\u30a4\u30ba\u306f42\n   \u2193 2\u6b21\u5143\u306b\u5909\u63db(reshape)\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff0b1\u301c31\uff0b\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff082\u6b21\u5143\uff09\n   \u2193 \u5404\u8981\u7d20\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n\u30fb\u30ab\u30ec\u30f3\u30c0\u30fc\u30c7\u30fc\u30bf\uff082\u6b21\u5143\uff09\n\n\n1\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3092\u751f\u6210\n\u307e\u305a\u3001calendar.monthrange()\u95a2\u6570\u3067\u3001\u5fc5\u8981\u306a\u6570\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\n>>> import calendar\n>>>\n>>> w, c = calendar.monthrange(2016, 7)\n>>> w # \u6708\u521d\u65e5\u306e\u66dc\u65e5\n4\n>>> c # \u6708\u306e\u65e5\u6570\n31\n\n\u6708\u521d\u65e5\u306e\u66dc\u65e5\u306f\u3001\u6708\u66dc\u65e5\u59cb\u307e\u308a\u306e\u66dc\u65e5\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6708\u66dc\u65e5\u304c0\u3067\u65e5\u66dc\u65e5\u304c6\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u65e5\u66dc\u65e5\u59cb\u307e\u308a\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u4f5c\u308a\u305f\u3044\u306e\u3067\u3001\u88dc\u6b63\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> w = w + 1 if w < 6 else 0\n>>> w\n5\n\n\u30bc\u30ed\u304c\u30bb\u30c3\u30c8\u3055\u308c\u305f\u914d\u5217\u3092\u4f5c\u308b\u306b\u306f\u3001np.zeros()\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u6570\u5b57\u306e\u4e26\u3073\u3067\u914d\u5217\u3092\u4f5c\u308b\u306b\u306f\u3001\u6a19\u6e96\u306erange()\u95a2\u6570\u3068\u4f3c\u305fnp.arange()\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\ndtype\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf\u578b\u306ffloat64\u3068\u306a\u308a\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> np.zeros(1).dtype\ndtype('float64')\n>>> np.zeros(1, dtype=int).dtype\ndtype('int32')\n>>> np.zeros(w, dtype=int)\narray([0, 0, 0, 0, 0])\n>>> np.arange(start=1, stop=c+1, dtype=int)\narray([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])\n>>> np.zeros(42 - w - c, dtype=int)\narray([0, 0, 0, 0, 0, 0])\n\nnp.concatenate()\u95a2\u6570\u3067\u3001\u914d\u5217\u3092\u7d50\u5408\u3067\u304d\u307e\u3059\u3002\n2\u3064\u306eNumPy\u914d\u5217\u3092+\u3067\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30d9\u30af\u30c8\u30eb\u30fb\u884c\u5217\u8a08\u7b97\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> np.array([1, 2]) + np.array([3, 4])\narray([4, 6]) # \u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u306e\u548c\n>>> headfiller = np.zeros(w, dtype=int)\n>>> days = np.arange(start=1, stop=c+1, dtype=int)\n>>> tailfiller = np.zeros(42 - w - c, dtype=int)\n>>> np.concatenate((headfiller, days, tailfiller))\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n\n\u6700\u521d\u306b42\u500b\u306e\u30bc\u30ed\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u306b\u65e5\u306e\u4e26\u3073\u3092\u4e0a\u66f8\u304d\u3059\u308b\u65b9\u6cd5\u3082\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u4e0a\u66f8\u304d\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3068\u7bc4\u56f2\u306e\u30b5\u30a4\u30ba\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> days = np.zeros(42, dtype=int)\n>>> days[w:w+c] = np.arange(start=1, stop=c+1, dtype=int)\n>>> days\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n\n\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u304b\u3089\u751f\u6210\u3059\u308b\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3051\u308c\u3070\u3001np.array()\u95a2\u6570\u3067\u5f8c\u304b\u3089NumPy\u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\ndtype\u306f\u5143\u306e\u30ea\u30b9\u30c8\u306e\u578b\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> days = np.array([0] * w + list(range(1, c+1)) + [0] * (42 - w - c))\n>>> days.dtype\ndtype('int32')\n>>> days\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n\n\u3053\u308c\u30671\u6b21\u5143\u914d\u5217\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n1\u6b21\u5143\u914d\u5217\u30922\u6b21\u5143\u914d\u5217\u306b\u5909\u63db\n\u6b21\u306b\u3001\u3053\u308c\u30922\u6b21\u5143\u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u6b21\u5143\u306e\u6307\u5b9a\u306f\u3001\u884c\u30fb\u5217\u306e\u9806\u756a\u306a\u306e\u3067\u3001(6, 7)\u306b\u306a\u308a\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> days.reshape((6, 7))\narray([[ 0,  0,  0,  0,  0,  1,  2],\n       [ 3,  4,  5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14, 15, 16],\n       [17, 18, 19, 20, 21, 22, 23],\n       [24, 25, 26, 27, 28, 29, 30],\n       [31,  0,  0,  0,  0,  0,  0]])\n\n\u3042\u3068\u306f\u3001\u6570\u5024\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u30c7\u30fc\u30bf\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n\u5404\u8981\u7d20\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\n\u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u3092\u5909\u63db\u3057\u305f\u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306b\u306f\u3001\u6a19\u6e96\u95a2\u6570\u3067\u306fmap()\u95a2\u6570\u3084\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3044\u307e\u3059\u3002\nNumPy\u306e\u914d\u5217\u3067\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u306b\u306f\u3001np.vectorize()\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> mapper = np.vectorize(lambda x: \"  \" if x == 0 else \"%2d\" % x)\n>>> mapper\n<numpy.lib.function_base.vectorize object at 0x0000000002D3C668>\n>>> mapper(days.reshape((6, 7)))\narray([['  ', '  ', '  ', '  ', '  ', ' 1', ' 2'],\n       [' 3', ' 4', ' 5', ' 6', ' 7', ' 8', ' 9'],\n       ['10', '11', '12', '13', '14', '15', '16'],\n       ['17', '18', '19', '20', '21', '22', '23'],\n       ['24', '25', '26', '27', '28', '29', '30'],\n       ['31', '  ', '  ', '  ', '  ', '  ', '  ']],\n      dtype='<U2')\n\nvectorize\u3067\u751f\u6210\u3055\u308c\u305f\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001map()\u95a2\u6570\u306b\u5909\u63db\u95a2\u6570\u3092\u90e8\u5206\u9069\u7528\u3057\u305f\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u914d\u5217\u3092\u9069\u7528\u3059\u308b\u3068\u3001map\u3055\u308c\u305f\u914d\u5217\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\u3053\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068reshape\u306e\u51e6\u7406\u9806\u5e8f\u306f\u9006\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\n\u3042\u3068\u306f\u3001\u7d50\u5408\u3057\u3066\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u88c5\u98fe\u306f\u304a\u597d\u304d\u306a\u3088\u3046\u306b\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> strdays2d = mapper(days.reshape((6, 7)))\n>>> print(\"\\n\".join([\" \".join(x) for x in strdays2d]))\n                1  2\n 3  4  5  6  7  8  9\n10 11 12 13 14 15 16\n17 18 19 20 21 22 23\n24 25 26 27 28 29 30\n31\n\n\n\u5b8c\u6210\u7248\n\u6700\u5f8c\u306b\u3001\u95a2\u6570\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306ePython\u30b3\u30fc\u30c9\n\nimport numpy as np\nimport calendar\n\ndef print_calendar(y, m):\n    w, c = calendar.monthrange(y, m)\n    w = w + 1 if w < 6 else 0\n    # \u30bc\u30ed\u914d\u5217\u3067\u306f\u3055\u3080\u30d0\u30fc\u30b8\u30e7\u30f3\n    headfiller = np.zeros(w, dtype=int)\n    tailfiller = np.zeros(42 - w - c, dtype=int)\n    days = np.concatenate((headfiller, np.arange(start=1, stop=c+1, dtype=int), tailfiller))\n    # \u6700\u521d\u306b\u30bc\u30ed\u3092\u4f5c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n    # days = np.zeros(42, dtype=int)\n    # days[w:w+c] = np.arange(start=1, stop=c+1, dtype=int)\n    # \u6a19\u6e96\u30ea\u30b9\u30c8\u304b\u3089\u4f5c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n    # days = np.array([0] * w + list(range(1, c+1)) + [0] * (42 - w - c))\n    mapper = np.vectorize(lambda x: \"  \" if x == 0 else \"%2d\" % x)\n    strdays2d = mapper(days).reshape((6, 7))\n    print(\"%d %d\" % (y, m))\n    print()\n    print(\"\\n\".join([\" \".join(x) for x in strdays2d]))\n\nif __name__ == \"__main__\":\n    print_calendar(2016, 8)\n\n\n\u5b9f\u884c\u7d50\u679c\n\n2016 8\n\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n\n\n\u30d3\u30c3\u30c8\u30de\u30c3\u30d7 - 2\u6b21\u5143\uff0b1\u6b21\u5143\u306e\u914d\u5217\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\n\u753b\u50cf\u3092\u8868\u73fe\u3059\u308b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306f\u3001XY\u5ea7\u6a19\u306e2\u6b21\u5143\u914d\u5217\u3068\u3001\u5404\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u8868\u3059\u60c5\u5831\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u3092\u3001NumPy\u306e2\u6b21\u5143\u914d\u5217\u3067\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u8272\u3092\u30b5\u30a4\u30ba3\u306e\u914d\u5217\uff08[R, G, B]\uff09\u3067\u8868\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5408\u308f\u305b\u30663\u6b21\u5143\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u3088\u3063\u3066\u306f\u3001\u8272\u540d\u307e\u305f\u306f#rrggbb\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u306fint\u304bstr\u306e2\u6b21\u5143\u914d\u5217\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u753b\u50cf\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306fPIL\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6a5f\u80fd\u306f\u8c4a\u5bcc\u306a\u306e\u3067\u3001\u672c\u683c\u7684\u306b\u753b\u50cf\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u306f\u3001\u305d\u3061\u3089\u306e\u6a5f\u80fd\u3092\u99c6\u4f7f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nPIL\u3067\u753b\u50cf\u3092\u751f\u6210\nPIL\u3067NumPy\u306e\u914d\u5217\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\nimport numpy as np\nfrom PIL import Image\n\nimgdata = np.zeros((16, 16, 3), dtype=np.uint8)\nimgdata[:] = [255, 0, 0]\n\nim = Image.fromarray(imgdata)\nim.show() # Windows\u3067\u306f\u30a4\u30e1\u30fc\u30b8\u30d3\u30e5\u30fc\u30a2\u30fc\u3067BMP\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u305f\nim.save(\"/path/to/image.png\", \"PNG\")\n\nimgdata[:] = ...\u3068\u3059\u308b\u3053\u3068\u3067\u30012\u6b21\u5143\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff083\u6b21\u5143\u306e\u3001\u3067\u306f\u306a\u3044\u3068\u3053\u308d\u304c\u30dd\u30a4\u30f3\u30c8\u3002\uff09\nImage.fromarray()\u95a2\u6570\u3067\u3001\u753b\u50cf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\nshow()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001OS\u306e\u30a4\u30e1\u30fc\u30b8\u30d3\u30e5\u30fc\u30a2\u30fc\u306a\u3069\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\nsave()\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u300116x16\u306e\u8d64\u3067\u5857\u308a\u3064\u3076\u3055\u308c\u305fPNG\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\nJupyter Notebook\u4e0a\u3067Matplotlib\u3067\u63cf\u753b\n\u3082\u3063\u3068\u624b\u8efd\u306a\u65b9\u6cd5\u3068\u3057\u3066\u3001Matplotlib\u3092\u4f7f\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\nJupyter Notebook\u4e0a\u3067\u3001\u76f4\u63a5\u751f\u6210\u3057\u305f\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306fPIL\u306e\u3068\u304d\u3068\u540c\u3058\u3067\u3059\u3002\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimgdata = np.zeros((16, 16, 3), dtype=np.uint8)\nimgdata[:] = [255, 0, 0]\n\n# plt.figure(figsize = (1.75, 1.75)) # \u30b5\u30a4\u30ba\u304c100x100\u306e\u5834\u5408\u306b\u307b\u307c\u539f\u5bf8\n# plt.axis(\"off\") # \u76ee\u76db\u308a\u3092\u8868\u793a\u3057\u306a\u3044\nplt.imshow(imgdata)\n# plt.show() # \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6587\u5b57\u5217\u8868\u73fe\u3092\u6d88\u3059\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u304c\u81ea\u52d5\u7684\u306b\u62e1\u7e2e\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b0\u30e9\u30d5\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u30e1\u30e2\u30ea\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u4f8b\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u3070\u3001\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3057\u305f\u308a\u3001\u753b\u50cf\u3060\u3051\u3092\u8868\u793a\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u4ee5\u964d\u306e\u4f8b\u3067\u306f\u3053\u306e\u8a2d\u5b9a\u306f\u5197\u9577\u306a\u306e\u3067\u3001imshow()\u95a2\u6570\u3060\u3051\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u203b\u753b\u50cf\u306f\u7e2e\u5c0f\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u4ee5\u4e0b\u540c\u69d8\u3002\uff09\n\u3053\u308c\u4ee5\u964d\u306f\u3001Jupyter Notebook\u3067\u5b9f\u884c\u3057\u305f\u3082\u306e\u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001Jupyter Notebook\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001PIL\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306b\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30eb\u30fc\u30d7\u3067\u51e6\u7406\n\u3053\u3053\u3067\u306f\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u64cd\u4f5c\u3092\u901a\u3057\u3066\u3001NumPy\u306e\u591a\u6b21\u5143\u914d\u5217\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n100x100\u306e\u753b\u50cf\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u305d\u3057\u3066\u3001\u7dd1\u3092x,y\u306e\u6570\u5024\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u3001\u5024\u3092\u5909\u5316\u3055\u305b\u3066\u307f\u307e\u3059\u3002\nNumPy\u306e\u914d\u5217\u306f\u3001imgdata[y, x]\u306e\u3088\u3046\u306b\u591a\u6b21\u5143\u914d\u5217\u3092\u81ea\u7136\u306b\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u306a\u306e\u304c\u30012\u6b21\u5143\u914d\u5217\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u30011\u6b21\u5143\u76ee\u304c\u7e26\u65b9\u5411\u30012\u6b21\u5143\u76ee\u304c\u6a2a\u65b9\u5411\u3092\u610f\u5473\u3059\u308b\u306e\u3067\u3001[y, x]\u3068\u306a\u308b\u70b9\u3067\u3059\u3002\n\u6b21\u306e\u4f8b\u306f\u3001\u30eb\u30fc\u30d7\u3067\u5404\u8981\u7d20\u306b\u8272\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u3059\u308b\u51e6\u7406\u3067\u3059\u3002\nx\u3068y\u306e\u5024\u3092\u4f7f\u3063\u3066\u7dd1\u306e\u5024\u3060\u3051\u3092\u5909\u5316\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\n\nw, h = 100, 100 # \u5e45\u30fb\u9ad8\u3055\nimgdata = np.zeros((w, h, 3), dtype=np.uint8)\nfor x, y in [(x, y) for x in range(w) for y in range(h)]:\n    imgdata[y, x] = [0, x + y, 0]\n\nimshow(imgdata)\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\u7dd1\u306e\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u304c\u63cf\u753b\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u7bc4\u56f2\u3067\u51e6\u7406\n\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u3053\u306b\u540c\u3058\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n[10:30, 50:80]\u3068\u3059\u308b\u3053\u3068\u3067\u3001(50, 10),(50, 30),(80, 30),(80, 10)\u3092\u9802\u70b9\u3068\u3059\u308b\u9577\u65b9\u5f62\u306e\u7bc4\u56f2\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\n\nw, h = 100, 100\nimgdata = np.zeros((w, h, 3), dtype=np.uint8)\nimgdata[10:30, 50:80] = [0, 0, 255]\n\nimshow(imgdata)\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\n\u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\n\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u6a21\u69d8\u3084\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30eb\u30fc\u30d7\u306e\u51e6\u7406\u3068\u7bc4\u56f2\u306e\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u4f8b\u3067\u3059\u3002\n\u203bsin\u95a2\u6570\u3001cos\u95a2\u6570\u306f\u3001\u5468\u671f\u7684\u306a\u5024\u3092\u5f97\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6570\u5b66\u306e\u77e5\u8b58\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u3001\u96e3\u3057\u304f\u8003\u3048\u306a\u304f\u3066\u826f\u3044\u3067\u3059\u3002\n\n\u6a21\u69d8\u3068\u9577\u65b9\u5f62\u6570\u500b\u3092\u63cf\u753b\u3059\u308bPython\u30b3\u30fc\u30c9\u4f8b\n\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\nfrom math import sin, cos\n\nw, h = 100, 100\na = np.zeros((w, h, 3), dtype=np.uint8)\nfor x, y in [(x, y) for x in range(w) for y in range(h)]:\n    v = int(127 + sin(x * 0.6) * cos(y * 0.6) * 128)\n    a[y, x] = [v, v, 0]\na[10:30, 10:70] = [int(\"ff\", 16), int(\"66\", 16), 0]\na[20:50, 20:80] = [int(\"ff\", 16), int(\"cc\", 16), 0]\na[30:70, 30:90] = [int(\"66\", 16), int(\"ff\", 16), 0]\n\nimshow(a)\n\n\n\u5b9f\u884c\u7d50\u679c\n\n\n\n\u6570\u72ec - \u884c\u3084\u5217\u306a\u3069\u306e\u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u306e\u53d6\u308a\u51fa\u3057\n\u6570\u72ec\u3001\u307e\u305f\u306f\u30ca\u30f3\u30d0\u30fc\u30d7\u30ec\u30a4\u30b9\u3068\u306f\u3001\u6570\u5b57\u30d1\u30ba\u30eb\u306e\u4e00\u7a2e\u3067\u3059\u3002\n9x9\u306e\u8868\u306b\u3001\u7e26\u30fb\u6a2a\u30fb3x3\u306b\u540c\u3058\u6570\u5b57\u304c\u5165\u3089\u306a\u3044\u3088\u3046\u306b1\u301c9\u306e\u6570\u5b57\u3092\u57cb\u3081\u3066\u3044\u304f\u30d1\u30ba\u30eb\u3067\u3059\u3002\n\u6570\u72ec - Wikipedia\nhttps://ja.wikipedia.org/wiki/%E6%95%B0%E7%8B%AC\nNumPy\u306e2\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3063\u3066\u3001\u6570\u72ec\u3092\u89e3\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306f\u3054\u304f\u5358\u7d14\u306a\u30ed\u30b8\u30c3\u30af\u3057\u304b\u6271\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u6570\u72ec\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\u6570\u5b57\u3092\u57cb\u3081\u308b\u305f\u3081\u306e\u3082\u3063\u3068\u3082\u5358\u7d14\u306a\u30ed\u30b8\u30c3\u30af\u306f\u3001\u3042\u308b\u30de\u30b9\u304b\u3089\u898b\u3066\u3001\u7e26\u30fb\u6a2a\u30fb3x3\u306b\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u3092\u63a2\u3059\u3053\u3068\u3067\u3059\u3002\n\u7e26\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u3001\u6a2a\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u30013x3\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\u306e\u306b\u3001NumPy\u306e\u914d\u5217\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u305f\u3060\u3057\u3001NumPy\u306e\u914d\u5217\u3060\u3051\u3067\u306f\u5c11\u3057\u9762\u5012\u306a\u64cd\u4f5c\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u6a19\u6e96\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3044\u307e\u3059\u3002\n\u554f\u984c\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e2\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30bc\u30ed\u306f\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u3092\u793a\u3057\u307e\u3059\u3002\ngrid = np.array([\n[3, 0, 0, 0, 0, 9, 0, 0, 8],\n[0, 0, 0, 0, 0, 6, 7, 0, 0],\n[9, 8, 2, 0, 0, 0, 6, 0, 0],\n[0, 9, 0, 0, 3, 0, 4, 0, 0],\n[0, 3, 5, 0, 0, 0, 2, 1, 0],\n[0, 0, 7, 0, 2, 0, 0, 9, 0],\n[0, 0, 4, 0, 0, 0, 9, 7, 5],\n[0, 0, 9, 6, 0, 0, 0, 0, 0],\n[8, 0, 0, 4, 0, 0, 0, 0, 2],\n])\n\n\n\u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u3092\u53d6\u308a\u51fa\u3059\n9x9\u3092\u6a19\u6e96\u306e\u591a\u91cd\u30ea\u30b9\u30c8\u3067\u8868\u73fe\u3057\u305f\u5834\u5408\u3001\u884c\u306e\u30ea\u30b9\u30c8\u306f\u3068\u3082\u304b\u304f\u3068\u3057\u3066\u3001\u5217\u306e\u30ea\u30b9\u30c8\u30843x3\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\u306e\u306f\u5927\u5909\u3067\u3059\u3002\nNumPy\u3067\u306f\u30012\u6b21\u5143\u306e\u8868\u3068\u3057\u3066\u306e\u64cd\u4f5c\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u8aac\u660e\u3092\u5206\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u6570\u72ec\u306e\u554f\u984c\u306b\u756a\u53f7\u3068\u8272\u3092\u4ed8\u3051\u305f\u753b\u50cf\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u753b\u50cf\u3092\u53c2\u8003\u306b\u3057\u3066\u3001f4\u306e\u30de\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nf\u306e\u5217\uff08\u7dd1\uff09\u306e\u914d\u5217\u30014\u306e\u884c\uff08\u30d9\u30fc\u30b8\u30e5\uff09\u306e\u914d\u5217\u3001d4-f6\u306e3x3\uff08\u9ec4\u8272\uff09\u306e\u914d\u5217\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n3x3\u306f2\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u53d6\u308a\u51fa\u3055\u308c\u307e\u3059\u306e\u3067\u3001reshape()\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u30661\u6b21\u5143\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u53d6\u308a\u51fa\u3057\u305f\u914d\u5217\u306f\u3001\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306blist\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u9805\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\u304c\u30012\u6b21\u5143\u914d\u5217\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u30011\u6b21\u5143\u76ee\u304c\u7e26\u65b9\u5411\u30012\u6b21\u5143\u76ee\u304c\u6a2a\u65b9\u5411\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a[x, y]\u3067\u306f\u306a\u304f\u3001[y, x]\u3067\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\ngrid[:, 5],grid[3, :],grid[3:6, 3:6]\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u540c\u3058\u7bc4\u56f2\u6307\u5b9a\u3092\u4ee3\u5165\u5f0f\u3067\u4f7f\u3048\u3070\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u9805\u3067\u793a\u3057\u305f\u901a\u308a\u3001\u305d\u306e\u7bc4\u56f2\u3059\u3079\u3066\u306b\u4ee3\u5165\u3067\u304d\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> list(grid[:, 5]) # \u5217f: x=5\u306e\u5217\n[9, 6, 0, 0, 0, 0, 0, 0, 0]\n>>> list(grid[3, :]) # \u884c4: y=3\u306e\u884c\n[0, 9, 0, 0, 3, 0, 4, 0, 0]\n>>> list(grid[3:6, 3:6].reshape(9)) # d4-f6\n[0, 3, 0, 0, 0, 0, 0, 2, 0]\n\n\n\u6570\u5b57\u30ea\u30b9\u30c8\u3092\u96c6\u8a08\n\u3053\u3053\u304b\u3089\u306fNumPy\u914d\u5217\u3092\u4f7f\u308f\u306a\u3044\u3067\u51e6\u7406\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\u5217\u306e\u30ea\u30b9\u30c8\u3001\u884c\u306e\u30ea\u30b9\u30c8\u30013x3\u306e\u30ea\u30b9\u30c8\u304c\u53d6\u5f97\u51fa\u6765\u305f\u3089\u3001\u305d\u308c\u3089\u3092\u7d50\u5408\u3057\u3066\u304b\u3089set\u578b\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u3059\u3067\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u306e\u30e6\u30cb\u30fc\u30af\u306a\u30ea\u30b9\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> used_nums = set(list(grid[:, 5]) + list(grid[3, :]) + list(grid[3:6, 3:6].reshape(9)))\n>>> used_nums\n{0, 2, 3, 4, 6, 9}\n\n\u30bc\u30ed\u304c\u4e0d\u8981\u3067\u3059\u304c\u3001\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u306b\u3057\u307e\u3059\u3002\nused_nums - {0}\u3068\u3059\u308c\u3070\u30bc\u30ed\u3092\u53d6\u308a\u9664\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n1\u301c9\u306e\u6570\u5217\u304b\u3089\u3059\u3067\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u3092\u53d6\u308a\u9664\u3051\u3070\u3001\u5019\u88dc\u3068\u306a\u308b\u6570\u5b57\u304c\u6b8b\u308a\u307e\u3059\u3002\nset\u578b\u306e-\u6f14\u7b97\u3092\u4f7f\u3063\u3066\u3001\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\n# \uff08\u7d9a\u304d\uff09\n\n# range(1, 10)\u306f1\uff5e9\u306e\u6570\u5b57\n>>> unused_nums = set(range(1, 10)) - used_nums\n>>> unused_nums\n{8, 1, 5, 7}\n\n\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u304c1\u3064\u3060\u3051\u306a\u3089\u3001\u305d\u308c\u304c\u305d\u306e\u30de\u30b9\u306e\u6570\u5b57\u306b\u6c7a\u5b9a\u3057\u307e\u3059\u3002\nf4\u306f\u3001\u4eca\u306e\u72b6\u614b\u3067\u306f1\u3064\u306b\u7d5e\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u540c\u69d8\u306bc2\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# \uff08\u7d9a\u304d\uff09\n\n>>> col = list(grid[:, 2]) # \u5217c: x=2\u306e\u5217\n>>> row = list(grid[1, :]) # \u884c2: y=1\u306e\u884c\n>>> sq = list(grid[0:3, 0:3].reshape(9)) # a1-c3\n>>> col, row, sq\n([0, 0, 2, 0, 5, 7, 4, 9, 0], [0, 0, 0, 0, 0, 6, 7, 0, 0], [3, 0, 0, 0, 0, 0, 9, 8, 2])\n>>> used_nums = set(col + row + sq)\n>>> used_nums\n{0, 2, 3, 4, 5, 6, 7, 8, 9}\n>>> unused_nums = set(range(1, 10)) - used_nums\n>>> unused_nums\n{1}\n\n\u4eca\u5ea6\u306f\u3001\u6570\u5b57\u304c1\u3060\u3051\u306b\u7d5e\u308c\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001c2\u306b\u306f1\u304c\u5165\u308b\u3053\u3068\u304c\u78ba\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n\u5b8c\u6210\u7248\uff08\u767a\u5c55\u9014\u4e0a\uff09\n\u3053\u3053\u307e\u3067\u306e\u30ed\u30b8\u30c3\u30af\u3092\u3001\u307e\u3060\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u306b\u7e70\u308a\u8fd4\u3057\u9069\u7528\u3057\u3066\u3044\u3051\u3070\u3001\u3068\u308a\u3042\u3048\u305a\u6570\u72ec\u3092\u89e3\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b8c\u6210\u3067\u3059\u3002\n\u305f\u3060\u3057\u30011\u5468\u306e\u9593\u306b\u3072\u3068\u3064\u306e\u30de\u30b9\u3082\u57cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3051\u308c\u3070\u3001\u30ae\u30d6\u30a2\u30c3\u30d7\u3068\u306a\u308a\u307e\u3059\u3002\n\u4eca\u306e\u307e\u307e\u3067\u306f\u3001\u57fa\u672c\u4e2d\u306e\u57fa\u672c\u306e\u30ed\u30b8\u30c3\u30af\u3057\u304b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u3088\u307b\u3069\u7c21\u5358\u306a\u554f\u984c\u3067\u306a\u3051\u308c\u3070\u89e3\u3051\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\u5b8c\u6210\u4f8b\u306e\u30b3\u30fc\u30c9\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\n\n\u6570\u72ec\u3092\u89e3\u304fPython\u30b3\u30fc\u30c9\u4f8b\uff08\u7c21\u5358\u306a\u554f\u984c\u3057\u304b\u89e3\u3051\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\n\nimport numpy as np\n\ngrid = np.array([\n[3, 0, 0, 0, 0, 9, 0, 0, 8],\n[0, 0, 0, 0, 0, 6, 7, 0, 0],\n[9, 8, 2, 0, 0, 0, 6, 0, 0],\n[0, 9, 0, 0, 3, 0, 4, 0, 0],\n[0, 3, 5, 0, 0, 0, 2, 1, 0],\n[0, 0, 7, 0, 2, 0, 0, 9, 0],\n[0, 0, 4, 0, 0, 0, 9, 7, 5],\n[0, 0, 9, 6, 0, 0, 0, 0, 0],\n[8, 0, 0, 4, 0, 0, 0, 0, 2]])\n\nnums = set(range(1, 10)) # 1\uff5e9\nsquare_table = [0, 0, 0, 3, 3, 3, 6, 6, 6]\n\ndef fill(x, y):\n    if (grid[y, x] != 0):\n        return 0\n    list1 = list(grid[:, x]) # \u7e26\n    list2 = list(grid[y, :]) # \u6a2a\n    xx, yy = square_table[x], square_table[y]\n    list3 = list(grid[yy:yy+3, xx:xx+3].reshape(9)) # 3x3\n    used_nums = set(list1 + list2 + list3)\n    unused_nums = nums - used_nums\n    if len(unused_nums) == 1:\n        grid[y, x] = list(unused_nums)[0]\n        return 1\n    else:\n        return 0\n\nif __name__ == \"__main__\":\n    for i in range(81):\n        print(\"loop:\", i + 1)\n        filled = sum([fill(x, y) for x in range(9) for y in range(9)])\n        if len(grid[grid == 0]) == 0:\n            print(\"solved!\")\n            break\n        if filled == 0:\n            print(\"give up...\")\n            break\n    print(grid)\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u5c11\u3057\u88dc\u8db3\u3057\u307e\u3059\u3002\nfilled = sum(...)\u306e\u3068\u3053\u308d\u306f\u3001\u30eb\u30fc\u30d7\u306e\u4ee3\u308f\u308a\u306b\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306efill()\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u3092sum\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u5468\u56de\u306b\u57cb\u3081\u305f\u30de\u30b9\u306e\u6570\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\ngrid[grid == 0]\u306fNumPy\u914d\u5217\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u306e\u3072\u3068\u3064\u3067\u3001\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u3092\u307e\u3068\u3081\u3066\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306fgrid == 0\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30bc\u30ed\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8981\u7d20\u6570\u3092\u6570\u3048\u308c\u3070\u3001\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u306e\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u554f\u984c\u304c\u89e3\u3051\u305f\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n3x3\u306e\u7bc4\u56f2\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u3001\u5909\u63db\u30c6\u30fc\u30d6\u30ebsquare_table\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u56db\u5247\u6f14\u7b97\u3067\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408\u306f\u3053\u3061\u3089\u306e\u65b9\u304c\u660e\u5feb\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u51e6\u7406\u7d50\u679c\n\nloop: 1\nloop: 2\nloop: 3\nloop: 4\ngive up...\n[[3 0 6 0 0 9 5 0 8]\n [0 0 1 0 0 6 7 0 0]\n [9 8 2 0 0 0 6 0 0]\n [0 9 8 0 3 0 4 5 0]\n [0 3 5 0 0 0 2 1 0]\n [0 0 7 0 2 0 0 9 0]\n [0 0 4 0 0 0 9 7 5]\n [0 0 9 6 0 0 0 0 0]\n [8 0 3 4 0 0 1 6 2]]\n\n\u6700\u521d\u306b\u6319\u3052\u305f\u554f\u984c\u306f\u3001\u3053\u306e\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u306f\u89e3\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30ed\u30b8\u30c3\u30af\u306e\u8ffd\u52a0\u30fb\u6539\u9020\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\u3061\u306a\u307f\u306b\u3001Wikipedia\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u6700\u521d\u306e\u4f8b\u984c\u306f\u3001\u3053\u306e\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u3082\u89e3\u3051\u307e\u3057\u305f\u3002\n\n\u304a\u308f\u308a\u306b\n\u3053\u306e\u3088\u3046\u306b\u3001\u51e6\u7406\u306b\u3088\u3063\u3066\u306f\u3001\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3088\u308a\u683c\u6bb5\u306b\u67d4\u8edf\u306a\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\nNumPy\u306b\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u306b\u6319\u3052\u305f\u3082\u306e\u3060\u3051\u3067\u3082\u304b\u306a\u308a\u4fbf\u5229\u306a\u306f\u305a\u3067\u3059\u3002\n\u6570\u5b66\u306b\u7e01\u304c\u306a\u3044\u65b9\u3082\u3001\u307e\u3060NumPy\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u65b9\u3082\u3001\u305c\u3072NumPy\u3092\u6d3b\u7528\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u53c2\u8003\u8cc7\u6599\nOverview \u2014 NumPy v1.11 Manual\nhttp://docs.scipy.org/doc/numpy/index.html\n100 numpy exercises\nhttp://www.labri.fr/perso/nrougier/teaching/numpy.100/\npython - How do I convert a numpy array to (and display) an image? - Stack Overflow\nhttp://stackoverflow.com/questions/2659312/how-do-i-convert-a-numpy-array-to-and-display-an-image\n[NumPy](http://www.numpy.org/)\u306f\u3001\u79d1\u5b66\u6280\u8853\u8a08\u7b97\u3092\u884c\u3046\u3001\u7279\u306b\u884c\u5217\u3084\u591a\u6b21\u5143\u914d\u5217\u306e\u8a08\u7b97\u3092\u3059\u308b\u306e\u306b\u4fbf\u5229\u306aPython\u7528\u306e\u62e1\u5f35\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\u3002\n\n\u3067\u3059\u304c\u3001\u6570\u5b66\u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u3001NumPy\u306f\u4fbf\u5229\u3067\u3059\u3002\n\u7279\u306b\u3001`[ [1,2],[3,4],[5,6] ]`\u306e\u3088\u3046\u306a\u591a\u91cd\u30ea\u30b9\u30c8\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u306b\u3001NumPy\u306e\u914d\u5217\u3092\u4f7f\u3063\u305f\u65b9\u304c\u4fbf\u5229\u306a\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001NumPy\u306e\u4e3b\u306b\u914d\u5217\u306e\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u3001\u7528\u4f8b\u3092\u6319\u3052\u3066\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n## \u306f\u3058\u3081\u306b\n\nNumPy\u306f\u3001\u6570\u5b66\u5411\u3051\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u3067\u306f\u3042\u308a\u307e\u3059\u304c\u3001NumPy\u306e\u914d\u5217\u306f\u3001\u6570\u5b66\u3068\u306f\u95a2\u4fc2\u306a\u304f\u4fbf\u5229\u306b\u4f7f\u3048\u308b\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\n\u3068\u306f\u8a00\u3048\u3001\u30a6\u30a7\u30d6\u4e0a\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u6570\u5b66\u3067\u4f7f\u3046\u4eba\u306e\u3082\u306e\u304c\u591a\u3044\u3067\u3059\u3057\u3001\u6570\u5b66\u4ee5\u5916\u3067\u5177\u4f53\u7684\u306b\u3069\u3046\u4f7f\u3046\u306e\u304b\u306f\u5206\u304b\u308a\u306b\u304f\u3044\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u3001\u6570\u5b66\u3068\u306f\u307b\u3068\u3093\u3069\u95a2\u4fc2\u306a\u3044\u4f7f\u3044\u65b9\u3092\u3044\u304f\u3064\u304b\u4f8b\u793a\u3057\u3066\u3001NumPy\u306e\uff08\u4e3b\u306b\u914d\u5217\u306e\uff09\u4fbf\u5229\u3055\u3092\u7d39\u4ecb\u3059\u308b\u306e\u304c\u3053\u306e\u8a18\u4e8b\u306e\u76ee\u7684\u3067\u3059\u3002\n\n\u79c1\u3082\u6570\u5b66\u306f\u5f97\u610f\u3067\u306f\u306a\u3044\u3067\u3059\u3057\u3001\u4f7f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u307b\u3068\u3093\u3069\u5206\u304b\u3089\u306a\u3044\u30ec\u30d9\u30eb\u3067\u3059\u3002\n\n\u3082\u3061\u308d\u3093\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306f\u5c11\u306a\u304b\u3089\u305a\u6570\u5b66\u306b\u95a2\u4fc2\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u5168\u304f\u4f7f\u308f\u306a\u3044\u3068\u3044\u3046\u610f\u5473\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3053\u3053\u3067\u8a00\u3063\u3066\u3044\u308b\u6570\u5b66\u3068\u306f\u3001\u884c\u5217\u3068\u304b\u5fae\u5206\u7a4d\u5206\u306a\u3069\u3067\u4f7f\u3046\u6570\u5f0f\u3092\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u8868\u73fe\u3059\u308b\u3088\u3046\u306a\u4f7f\u3044\u65b9\u306e\u3053\u3068\u3092\u6307\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5185\u5bb9\u306e\u4e00\u90e8\u306b\u6570\u5b66\u3063\u307d\u3044\u3082\u306e\u304c\u5c11\u3057\u3060\u3051\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u3053\u306f\u5206\u304b\u3089\u306a\u304f\u3066\u3082\u672c\u984c\u306b\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u6c17\u306b\u3057\u306a\u3044\u3067\u8aad\u307f\u9032\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n## \u4f7f\u7528\u4e0a\u306e\u6ce8\u610f\n\n\u3053\u3053\u3067\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u7528\u4f8b\u306f\u3001\u30c7\u30fc\u30bf\u64cd\u4f5c\u3092\u5b66\u3076\u305f\u3081\u306e\u30d2\u30f3\u30c8\u3092\u63d0\u4f9b\u3059\u308b\u3082\u306e\u3067\u3042\u308a\u3001\u5fc5\u305a\u3057\u3082\u53d6\u308a\u4e0a\u3052\u3066\u3044\u308b\u30b3\u30fc\u30c9\u304c\u52b9\u7387\u306e\u826f\u3044\u51e6\u7406\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\n\n\u5b9f\u969b\u306b\u904b\u7528\u3067\u4f7f\u7528\u3059\u308b\u969b\u306b\u306f\u3001\u5fc5\u305a\u3054\u81ea\u8eab\u3067\u691c\u8a3c\u3057\u3066\u304b\u3089\u306b\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n## \u5bfe\u8c61\u3068\u306a\u308b\u8aad\u8005\n\nNumPy\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044Python\u30e6\u30fc\u30b6\u30fc\u3002\n\u7279\u306b\u3001\u6570\u5b66\u304c\u82e6\u624b\u3067NumPy\u3092\u656c\u9060\u3057\u3066\u3044\u308b\u65b9\u3084\u3001\u6570\u5b66\u3068\u7121\u7e01\u3067NumPy\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044\u65b9\u304c\u5bfe\u8c61\u3067\u3059\u3002\n\n\n## \u5b9f\u884c\u74b0\u5883\n\n### OS\u30fb\u51e6\u7406\u7cfb\u306a\u3069\n\n\u52d5\u4f5c\u3092\u78ba\u8a8d\u3057\u305f\u74b0\u5883\u306f\u3001\u4e3b\u306b\u3053\u308c\u2193\u3067\u3059\u3002\n\n- Python 3.5.2 | Anaconda 4.1.1 (64-bit)\n- Windows 7 64bit\n\n\u5168\u90e8\u306f\u78ba\u8a8d\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u7279\u306bOS\u4f9d\u5b58\u306e\u3082\u306e\u306f\u6271\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\u7d50\u679c\u306f\u4e3b\u306b\u5bfe\u8a71\u74b0\u5883\u306e\u3082\u306e\u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u304c\u3001Jupyter Notebook\u3092\u4f7f\u3063\u3066\u3044\u308b\u7b87\u6240\u3082\u3042\u308a\u307e\u3059\u3002\n\n\n### \u4f7f\u7528\u3057\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u30fb\u30c4\u30fc\u30eb\n\n\u4e0b\u8a18\u306e\u3046\u3061\u3001\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306f`calendar`\u3060\u3051\u3067\u3059\u3002\n\n| \u30e2\u30b8\u30e5\u30fc\u30eb\u540d       | \u30d0\u30fc\u30b8\u30e7\u30f3 | \u8aac\u660e                                                |\n|--------------------|------------|-----------------------------------------------------|\n| [NumPy](http://www.numpy.org/)              | 1.11.1     | \u4eca\u56de\u306e\u4e3b\u5f79\u3068\u306a\u308b\u6570\u5024\u8a08\u7b97\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u30e2\u30b8\u30e5\u30fc\u30eb      |\n| [calendar](https://docs.python.org/3/library/calendar.html)           | (3.5.2)    | \u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u6271\u3046\u305f\u3081\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb        |\n| [PIL](http://www.pythonware.com/products/pil/)                | 1.1.7      | \u753b\u50cf\u51e6\u7406\u30e2\u30b8\u30e5\u30fc\u30eb                                  |\n| [Matplotlib](http://matplotlib.org/)         | 1.5.1      | \u30b0\u30e9\u30d5\u3092\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb \u4eca\u56de\u306f\u753b\u50cf\u8868\u793a\u3067\u4f7f\u7528 |\n| [Jupyter Notebook](http://jupyter.org/)   | 4.2.1      | Web\u30d6\u30e9\u30a6\u30b6\u30fc\u4e0a\u3067\u4f7f\u3048\u308bREPL                         |\n\n\u203b Jupyter Notebook\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u3001Notebook Server\u306e\u3082\u306e\n\n\n## \u57fa\u790e\u77e5\u8b58\n\nNumPy\u30e2\u30b8\u30e5\u30fc\u30eb`numpy`\u3092\u4f7f\u3046\u306b\u306f\u3001\u5225\u540d`np`\u3092\u4f7f\u3046\u306e\u304c\u4e00\u822c\u7684\u3067\u3059\u3002\n\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3067\u3082\u305d\u3046\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```python\nimport numpy as np\n```\n\n\u3053\u306e\u8a18\u4e8b\u3067\u3082\u305d\u308c\u306b\u5023\u3044\u307e\u3059\u3002\n\u672c\u6587\u4e2d\u3067\u306f\u3001\u3053\u306e\u30a4\u30f3\u30dd\u30fc\u30c8\u304c\u7121\u3044\u5834\u5408\u3067\u3082\u3001\u5e38\u306b\u30a4\u30f3\u30dd\u30fc\u30c8\u6e08\u307f\u306e\u3082\u306e\u3068\u3057\u3066\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002\n\nNumPy\u306e\u914d\u5217\u306f\u3001`numpy.ndarray`\uff08\u4ee5\u964d\u3001\u672c\u6587\u4e2d\u3067\u306f\"NumPy\u306e\u914d\u5217\"\u3068\u8868\u8a18\uff09\u3068\u3044\u3046\u578b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```pycon\n>>> np.array([1, 2])\narray([1, 2])\n>>> type(np.array([1, 2]))\n<class 'numpy.ndarray'>\n```\n\n\u3053\u308c\u306f\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3068\u4e00\u898b\u4f3c\u3066\u3044\u307e\u3059\u304c\u3001NumPy\u306e\u914d\u5217\u306f\u305d\u308c\u3068\u6bd4\u3079\u3066\u975e\u5e38\u306b\u8c4a\u5bcc\u306a\u64cd\u4f5c\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3068\u306e\u6027\u8cea\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u3001\u4e0b\u8a18\u30ea\u30f3\u30af\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nNumPy \u914d\u5217\u306e\u57fa\u790e \u2014 \u6a5f\u68b0\u5b66\u7fd2\u306e Python \u3068\u306e\u51fa\u4f1a\u3044\n[http://www.kamishima.net/mlmpyja/nbayes1/ndarray.html](http://www.kamishima.net/mlmpyja/nbayes1/ndarray.html)\n\n\n## \u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc - 1\u6b21\u5143\u914d\u5217\u304b\u30892\u6b21\u5143\u3078\u306e\u5909\u63db\n\n\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3068\u306f\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u306b\u30c6\u30ad\u30b9\u30c8\u3067\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u8868\u793a\u3059\u308b\u3082\u306e\u3092\u6307\u3057\u307e\u3059\u3002\nUnix-like\u74b0\u5883\u306e`cal`\u30b3\u30de\u30f3\u30c9\u3067\u51fa\u529b\u3055\u308c\u308b\u306e\u3082\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3067\u3059\u3002\n\n\u5b9f\u306f\u3001Python\u306e\u6a19\u6e96\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u306f\u300c\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u300d\u305d\u306e\u3082\u306e\u3092\u6271\u3046\u30e2\u30b8\u30e5\u30fc\u30eb`calendar`\u304c\u3042\u308a\u307e\u3059\u3002\n\ncalendar \u2013 \u65e5\u4ed8\u306e\u51e6\u7406 - Python Module of the Week\n[http://ja.pymotw.com/2/calendar/](http://ja.pymotw.com/2/calendar/)\n\n\u306a\u306e\u3067\u3001\u308f\u3056\u308f\u3056\u30a4\u30c1\u304b\u3089\u4f5c\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u304c\u3001NumPy\u3092\u4f7f\u3046\u4f8b\u3068\u3057\u3066\u5206\u304b\u308a\u3084\u3059\u3044\u984c\u6750\u3060\u3063\u305f\u306e\u3067\u3001\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u3053\u306e\u9805\u3067\u306f\u3001`calendar`\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u307b\u307c\u4f7f\u308f\u305a\u306b\u51e6\u7406\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u300c\u307b\u307c\u300d\u3068\u66f8\u3044\u305f\u306e\u306f\u3001\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u4f5c\u308b\u306b\u306f\u6708\u521d\u65e5\u3068\u6708\u672b\u65e5\u3092\u6c42\u3081\u308b\u8a08\u7b97\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u305d\u306e\u8a08\u7b97\u306b\u3064\u3044\u3066\u8003\u3048\u308b\u306e\u306f\u4eca\u56de\u306e\u76ee\u7684\u3067\u306f\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u6c42\u3081\u308b\u306e\u306b`calendar`\u30e2\u30b8\u30e5\u30fc\u30eb\u306e`monthrange()`\u95a2\u6570\u3092\u4f7f\u3046\u304b\u3089\u3067\u3059\u3002\n\n\n### \u51e6\u7406\u30a4\u30e1\u30fc\u30b8\n\n\u305d\u308c\u3067\u306f\u672c\u984c\u306b\u5165\u308a\u307e\u3059\u3002\n\n\u5b9f\u7269\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u898b\u3066\u3044\u305f\u3060\u304f\u3068\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306f7x6\u306e\u56fa\u5b9a\u30b5\u30a4\u30ba\u306e2\u6b21\u5143\u8868\u306b\u9069\u5207\u306a\u5024\u3092\u5f53\u3066\u306f\u3081\u3066\u3044\u3051\u3070\u30019\u52729\u5206\u5b8c\u6210\u3067\u3059\u3002\n\u3068\u306f\u3044\u3048\u3001\u6700\u521d\u304b\u30892\u6b21\u5143\u3060\u3068\u51e6\u7406\u304c\u9762\u5012\u306a\u6c17\u304c\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\u3068\u3053\u308d\u306f1\u6b21\u5143\u914d\u5217\u3067\u884c\u3044\u3001\u5f8c\u30672\u6b21\u5143\u306b\u5909\u63db\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\nNumPy\u306e\u914d\u5217\u306b\u306f\u3001N\u6b21\u5143\u306e\u914d\u5217\u3092\u4efb\u610f\u306e\u6b21\u5143\u306b\u5909\u63db\u3059\u308b\u3001`reshape()`\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u30011\u6b21\u5143\u914d\u5217\u30922\u6b21\u5143\u306b\u5909\u63db\u3067\u304d\u307e\u3059\u3002\n\n\u304a\u304a\u3056\u3063\u3071\u306b\u66f8\u304f\u3068\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u6d41\u308c\u3067\u51e6\u7406\u3092\u3059\u308c\u3070OK\u3067\u3057\u3087\u3046\u3002\n\n```\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09\n\u30fb1\u301c31\uff081\u6b21\u5143\uff09\n\u30fb\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09\n   \u2193 \u7d50\u5408\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff0b1\u301c31\uff0b\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff081\u6b21\u5143\uff09 \u203b\u30b5\u30a4\u30ba\u306f42\n   \u2193 2\u6b21\u5143\u306b\u5909\u63db(reshape)\n\u30fb\u5148\u982d\u306e\u7a7a\u30c7\u30fc\u30bf\uff0b1\u301c31\uff0b\u672b\u5c3e\u306e\u7a7a\u30c7\u30fc\u30bf\uff082\u6b21\u5143\uff09\n   \u2193 \u5404\u8981\u7d20\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n\u30fb\u30ab\u30ec\u30f3\u30c0\u30fc\u30c7\u30fc\u30bf\uff082\u6b21\u5143\uff09\n```\n\n\n### 1\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u3092\u751f\u6210\n\n\u307e\u305a\u3001`calendar.monthrange()`\u95a2\u6570\u3067\u3001\u5fc5\u8981\u306a\u6570\u5024\u3092\u6c42\u3081\u307e\u3059\u3002\n\n```pycon\n>>> import calendar\n>>>\n>>> w, c = calendar.monthrange(2016, 7)\n>>> w # \u6708\u521d\u65e5\u306e\u66dc\u65e5\n4\n>>> c # \u6708\u306e\u65e5\u6570\n31\n```\n\n\u6708\u521d\u65e5\u306e\u66dc\u65e5\u306f\u3001\u6708\u66dc\u65e5\u59cb\u307e\u308a\u306e\u66dc\u65e5\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u6708\u66dc\u65e5\u304c`0`\u3067\u65e5\u66dc\u65e5\u304c`6`\u306b\u306a\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u65e5\u66dc\u65e5\u59cb\u307e\u308a\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u3092\u4f5c\u308a\u305f\u3044\u306e\u3067\u3001\u88dc\u6b63\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> w = w + 1 if w < 6 else 0\n>>> w\n5\n```\n\n\u30bc\u30ed\u304c\u30bb\u30c3\u30c8\u3055\u308c\u305f\u914d\u5217\u3092\u4f5c\u308b\u306b\u306f\u3001`np.zeros()`\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u6570\u5b57\u306e\u4e26\u3073\u3067\u914d\u5217\u3092\u4f5c\u308b\u306b\u306f\u3001\u6a19\u6e96\u306e`range()`\u95a2\u6570\u3068\u4f3c\u305f`np.arange()`\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n`dtype`\u3092\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf\u578b\u306f`float64`\u3068\u306a\u308a\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> np.zeros(1).dtype\ndtype('float64')\n>>> np.zeros(1, dtype=int).dtype\ndtype('int32')\n>>> np.zeros(w, dtype=int)\narray([0, 0, 0, 0, 0])\n>>> np.arange(start=1, stop=c+1, dtype=int)\narray([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,\n       18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])\n>>> np.zeros(42 - w - c, dtype=int)\narray([0, 0, 0, 0, 0, 0])\n```\n\n`np.concatenate()`\u95a2\u6570\u3067\u3001\u914d\u5217\u3092\u7d50\u5408\u3067\u304d\u307e\u3059\u3002\n2\u3064\u306eNumPy\u914d\u5217\u3092`+`\u3067\u8a08\u7b97\u3057\u3066\u3057\u307e\u3046\u3068\u3001\u30d9\u30af\u30c8\u30eb\u30fb\u884c\u5217\u8a08\u7b97\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> np.array([1, 2]) + np.array([3, 4])\narray([4, 6]) # \u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u306e\u548c\n>>> headfiller = np.zeros(w, dtype=int)\n>>> days = np.arange(start=1, stop=c+1, dtype=int)\n>>> tailfiller = np.zeros(42 - w - c, dtype=int)\n>>> np.concatenate((headfiller, days, tailfiller))\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n```\n\n\u6700\u521d\u306b42\u500b\u306e\u30bc\u30ed\u3092\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u306b\u65e5\u306e\u4e26\u3073\u3092\u4e0a\u66f8\u304d\u3059\u308b\u65b9\u6cd5\u3082\u8003\u3048\u3089\u308c\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u4e0a\u66f8\u304d\u3059\u308b\u914d\u5217\u306e\u30b5\u30a4\u30ba\u3068\u7bc4\u56f2\u306e\u30b5\u30a4\u30ba\u304c\u5408\u3063\u3066\u3044\u306a\u3044\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> days = np.zeros(42, dtype=int)\n>>> days[w:w+c] = np.arange(start=1, stop=c+1, dtype=int)\n>>> days\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n```\n\n\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u304b\u3089\u751f\u6210\u3059\u308b\u307b\u3046\u304c\u5206\u304b\u308a\u3084\u3059\u3051\u308c\u3070\u3001`np.array()`\u95a2\u6570\u3067\u5f8c\u304b\u3089NumPy\u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n`dtype`\u306f\u5143\u306e\u30ea\u30b9\u30c8\u306e\u578b\u304c\u7dad\u6301\u3055\u308c\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> days = np.array([0] * w + list(range(1, c+1)) + [0] * (42 - w - c))\n>>> days.dtype\ndtype('int32')\n>>> days\narray([ 0,  0,  0,  0,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n       13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\n       30, 31,  0,  0,  0,  0,  0,  0])\n```\n\n\u3053\u308c\u30671\u6b21\u5143\u914d\u5217\u306e\u30ab\u30ec\u30f3\u30c0\u30fc\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n## 1\u6b21\u5143\u914d\u5217\u30922\u6b21\u5143\u914d\u5217\u306b\u5909\u63db\n\n\u6b21\u306b\u3001\u3053\u308c\u30922\u6b21\u5143\u914d\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\u6b21\u5143\u306e\u6307\u5b9a\u306f\u3001\u884c\u30fb\u5217\u306e\u9806\u756a\u306a\u306e\u3067\u3001`(6, 7)`\u306b\u306a\u308a\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> days.reshape((6, 7))\narray([[ 0,  0,  0,  0,  0,  1,  2],\n       [ 3,  4,  5,  6,  7,  8,  9],\n       [10, 11, 12, 13, 14, 15, 16],\n       [17, 18, 19, 20, 21, 22, 23],\n       [24, 25, 26, 27, 28, 29, 30],\n       [31,  0,  0,  0,  0,  0,  0]])\n```\n\n\u3042\u3068\u306f\u3001\u6570\u5024\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u30c7\u30fc\u30bf\u306f\u5b8c\u6210\u3067\u3059\u3002\n\n\n### \u5404\u8981\u7d20\u3092\u6587\u5b57\u5217\u8868\u73fe\u306b\u5909\u63db\n\n\u30ea\u30b9\u30c8\u306e\u5404\u8981\u7d20\u3092\u5909\u63db\u3057\u305f\u65b0\u3057\u3044\u30ea\u30b9\u30c8\u3092\u4f5c\u308b\u306b\u306f\u3001\u6a19\u6e96\u95a2\u6570\u3067\u306f`map()`\u95a2\u6570\u3084\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3044\u307e\u3059\u3002\nNumPy\u306e\u914d\u5217\u3067\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u3092\u3059\u308b\u306b\u306f\u3001`np.vectorize()`\u95a2\u6570\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> mapper = np.vectorize(lambda x: \"  \" if x == 0 else \"%2d\" % x)\n>>> mapper\n<numpy.lib.function_base.vectorize object at 0x0000000002D3C668>\n>>> mapper(days.reshape((6, 7)))\narray([['  ', '  ', '  ', '  ', '  ', ' 1', ' 2'],\n       [' 3', ' 4', ' 5', ' 6', ' 7', ' 8', ' 9'],\n       ['10', '11', '12', '13', '14', '15', '16'],\n       ['17', '18', '19', '20', '21', '22', '23'],\n       ['24', '25', '26', '27', '28', '29', '30'],\n       ['31', '  ', '  ', '  ', '  ', '  ', '  ']],\n      dtype='<U2')\n```\n\n`vectorize`\u3067\u751f\u6210\u3055\u308c\u305f\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001`map()`\u95a2\u6570\u306b\u5909\u63db\u95a2\u6570\u3092\u90e8\u5206\u9069\u7528\u3057\u305f\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u914d\u5217\u3092\u9069\u7528\u3059\u308b\u3068\u3001map\u3055\u308c\u305f\u914d\u5217\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u306e\u30de\u30c3\u30d4\u30f3\u30b0\u3068`reshape`\u306e\u51e6\u7406\u9806\u5e8f\u306f\u9006\u3067\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\n\n\u3042\u3068\u306f\u3001\u7d50\u5408\u3057\u3066\u51fa\u529b\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\u88c5\u98fe\u306f\u304a\u597d\u304d\u306a\u3088\u3046\u306b\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> strdays2d = mapper(days.reshape((6, 7)))\n>>> print(\"\\n\".join([\" \".join(x) for x in strdays2d]))\n                1  2\n 3  4  5  6  7  8  9\n10 11 12 13 14 15 16\n17 18 19 20 21 22 23\n24 25 26 27 28 29 30\n31\n```\n\n\n### \u5b8c\u6210\u7248\n\n\u6700\u5f8c\u306b\u3001\u95a2\u6570\u306b\u307e\u3068\u3081\u305f\u3082\u306e\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\n\n- \u30c6\u30ad\u30b9\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306ePython\u30b3\u30fc\u30c9\n\n```python\nimport numpy as np\nimport calendar\n\ndef print_calendar(y, m):\n    w, c = calendar.monthrange(y, m)\n    w = w + 1 if w < 6 else 0\n    # \u30bc\u30ed\u914d\u5217\u3067\u306f\u3055\u3080\u30d0\u30fc\u30b8\u30e7\u30f3\n    headfiller = np.zeros(w, dtype=int)\n    tailfiller = np.zeros(42 - w - c, dtype=int)\n    days = np.concatenate((headfiller, np.arange(start=1, stop=c+1, dtype=int), tailfiller))\n    # \u6700\u521d\u306b\u30bc\u30ed\u3092\u4f5c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n    # days = np.zeros(42, dtype=int)\n    # days[w:w+c] = np.arange(start=1, stop=c+1, dtype=int)\n    # \u6a19\u6e96\u30ea\u30b9\u30c8\u304b\u3089\u4f5c\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n    # days = np.array([0] * w + list(range(1, c+1)) + [0] * (42 - w - c))\n    mapper = np.vectorize(lambda x: \"  \" if x == 0 else \"%2d\" % x)\n    strdays2d = mapper(days).reshape((6, 7))\n    print(\"%d %d\" % (y, m))\n    print()\n    print(\"\\n\".join([\" \".join(x) for x in strdays2d]))\n\nif __name__ == \"__main__\":\n    print_calendar(2016, 8)\n```\n\n- \u5b9f\u884c\u7d50\u679c\n\n```\n2016 8\n\n    1  2  3  4  5  6\n 7  8  9 10 11 12 13\n14 15 16 17 18 19 20\n21 22 23 24 25 26 27\n28 29 30 31\n```\n\n\n## \u30d3\u30c3\u30c8\u30de\u30c3\u30d7 - 2\u6b21\u5143\uff0b1\u6b21\u5143\u306e\u914d\u5217\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\n\n\u753b\u50cf\u3092\u8868\u73fe\u3059\u308b\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306f\u3001XY\u5ea7\u6a19\u306e2\u6b21\u5143\u914d\u5217\u3068\u3001\u5404\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u8868\u3059\u60c5\u5831\u3067\u69cb\u6210\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u3092\u3001NumPy\u306e2\u6b21\u5143\u914d\u5217\u3067\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u4eca\u56de\u4f7f\u7528\u3059\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306f\u3001\u8272\u3092\u30b5\u30a4\u30ba3\u306e\u914d\u5217\uff08`[R, G, B]`\uff09\u3067\u8868\u3059\u306e\u3067\u3001\u305d\u308c\u3092\u5408\u308f\u305b\u30663\u6b21\u5143\u3067\u8868\u73fe\u3057\u307e\u3059\u3002\n\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306b\u3088\u3063\u3066\u306f\u3001\u8272\u540d\u307e\u305f\u306f`#rrggbb`\u5f62\u5f0f\u3067\u6307\u5b9a\u3059\u308b\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u5834\u5408\u306f`int`\u304b`str`\u306e2\u6b21\u5143\u914d\u5217\u3067\u8868\u73fe\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u753b\u50cf\u306e\u51e6\u7406\u306b\u3064\u3044\u3066\u306fPIL\u30e2\u30b8\u30e5\u30fc\u30eb\u306e\u6a5f\u80fd\u306f\u8c4a\u5bcc\u306a\u306e\u3067\u3001\u672c\u683c\u7684\u306b\u753b\u50cf\u306e\u51e6\u7406\u3092\u884c\u3046\u5834\u5408\u306f\u3001\u305d\u3061\u3089\u306e\u6a5f\u80fd\u3092\u99c6\u4f7f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n\n### PIL\u3067\u753b\u50cf\u3092\u751f\u6210\n\nPIL\u3067NumPy\u306e\u914d\u5217\u304b\u3089\u753b\u50cf\u3092\u751f\u6210\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u3088\u3046\u306b\u3057\u307e\u3059\u3002\n\n```python\nimport numpy as np\nfrom PIL import Image\n\nimgdata = np.zeros((16, 16, 3), dtype=np.uint8)\nimgdata[:] = [255, 0, 0]\n\nim = Image.fromarray(imgdata)\nim.show() # Windows\u3067\u306f\u30a4\u30e1\u30fc\u30b8\u30d3\u30e5\u30fc\u30a2\u30fc\u3067BMP\u30d5\u30a1\u30a4\u30eb\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u305f\nim.save(\"/path/to/image.png\", \"PNG\")\n```\n\n`imgdata[:] = ...`\u3068\u3059\u308b\u3053\u3068\u3067\u30012\u6b21\u5143\u306e\u3059\u3079\u3066\u306e\u8981\u7d20\u306b\u540c\u3058\u5024\u3092\u4ee3\u5165\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\uff083\u6b21\u5143\u306e\u3001\u3067\u306f\u306a\u3044\u3068\u3053\u308d\u304c\u30dd\u30a4\u30f3\u30c8\u3002\uff09\n\n`Image.fromarray()`\u95a2\u6570\u3067\u3001\u753b\u50cf\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n`show()`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001OS\u306e\u30a4\u30e1\u30fc\u30b8\u30d3\u30e5\u30fc\u30a2\u30fc\u306a\u3069\u3067\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n`save()`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u753b\u50cf\u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u300116x16\u306e\u8d64\u3067\u5857\u308a\u3064\u3076\u3055\u308c\u305fPNG\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u3002\n\n\n### Jupyter Notebook\u4e0a\u3067Matplotlib\u3067\u63cf\u753b\n\n\u3082\u3063\u3068\u624b\u8efd\u306a\u65b9\u6cd5\u3068\u3057\u3066\u3001Matplotlib\u3092\u4f7f\u3063\u305f\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\nJupyter Notebook\u4e0a\u3067\u3001\u76f4\u63a5\u751f\u6210\u3057\u305f\u753b\u50cf\u3092\u8868\u793a\u3059\u308b\u306b\u306f\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u306fPIL\u306e\u3068\u304d\u3068\u540c\u3058\u3067\u3059\u3002\n\n```python\n%matplotlib inline\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nimgdata = np.zeros((16, 16, 3), dtype=np.uint8)\nimgdata[:] = [255, 0, 0]\n\n# plt.figure(figsize = (1.75, 1.75)) # \u30b5\u30a4\u30ba\u304c100x100\u306e\u5834\u5408\u306b\u307b\u307c\u539f\u5bf8\n# plt.axis(\"off\") # \u76ee\u76db\u308a\u3092\u8868\u793a\u3057\u306a\u3044\nplt.imshow(imgdata)\n# plt.show() # \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u6587\u5b57\u5217\u8868\u73fe\u3092\u6d88\u3059\n```\n\n\u3053\u306e\u65b9\u6cd5\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u753b\u50cf\u306e\u30b5\u30a4\u30ba\u304c\u81ea\u52d5\u7684\u306b\u62e1\u7e2e\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b0\u30e9\u30d5\u3068\u3057\u3066\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3001\u30e1\u30e2\u30ea\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u4f8b\u306e\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u3066\u3044\u308b\u7b87\u6240\u306e\u30b3\u30fc\u30c9\u3092\u4f7f\u3048\u3070\u3001\u30b5\u30a4\u30ba\u3092\u8abf\u6574\u3057\u305f\u308a\u3001\u753b\u50cf\u3060\u3051\u3092\u8868\u793a\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u4ee5\u964d\u306e\u4f8b\u3067\u306f\u3053\u306e\u8a2d\u5b9a\u306f\u5197\u9577\u306a\u306e\u3067\u3001`imshow()`\u95a2\u6570\u3060\u3051\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n- \u5b9f\u884c\u7d50\u679c\n\n![matplot-red16.png](https://qiita-image-store.s3.amazonaws.com/0/99734/34f7a5b7-3aec-954c-cbbb-a918c6b855ae.png)\n\n\u203b\u753b\u50cf\u306f\u7e2e\u5c0f\u3057\u3066\u3044\u307e\u3059\u3002\uff08\u4ee5\u4e0b\u540c\u69d8\u3002\uff09\n\n\u3053\u308c\u4ee5\u964d\u306f\u3001Jupyter Notebook\u3067\u5b9f\u884c\u3057\u305f\u3082\u306e\u3092\u63b2\u8f09\u3057\u3066\u3044\u307e\u3059\u306e\u3067\u3001Jupyter Notebook\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\u3001PIL\u3067\u30d5\u30a1\u30a4\u30eb\u51fa\u529b\u3059\u308b\u30b3\u30fc\u30c9\u306b\u8aad\u307f\u66ff\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n### \u30eb\u30fc\u30d7\u3067\u51e6\u7406\n\n\u3053\u3053\u3067\u306f\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u64cd\u4f5c\u3092\u901a\u3057\u3066\u3001NumPy\u306e\u591a\u6b21\u5143\u914d\u5217\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n100x100\u306e\u753b\u50cf\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u305d\u3057\u3066\u3001\u7dd1\u3092`x`,`y`\u306e\u6570\u5024\u306b\u5bfe\u5fdc\u3055\u305b\u3066\u3001\u5024\u3092\u5909\u5316\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\nNumPy\u306e\u914d\u5217\u306f\u3001`imgdata[y, x]`\u306e\u3088\u3046\u306b\u591a\u6b21\u5143\u914d\u5217\u3092\u81ea\u7136\u306b\u6271\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6ce8\u610f\u3059\u3079\u304d\u306a\u306e\u304c\u30012\u6b21\u5143\u914d\u5217\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u30011\u6b21\u5143\u76ee\u304c\u7e26\u65b9\u5411\u30012\u6b21\u5143\u76ee\u304c\u6a2a\u65b9\u5411\u3092\u610f\u5473\u3059\u308b\u306e\u3067\u3001`[y, x]`\u3068\u306a\u308b\u70b9\u3067\u3059\u3002\n\n\u6b21\u306e\u4f8b\u306f\u3001\u30eb\u30fc\u30d7\u3067\u5404\u8981\u7d20\u306b\u8272\u60c5\u5831\u3092\u30bb\u30c3\u30c8\u3059\u308b\u51e6\u7406\u3067\u3059\u3002\n`x`\u3068`y`\u306e\u5024\u3092\u4f7f\u3063\u3066\u7dd1\u306e\u5024\u3060\u3051\u3092\u5909\u5316\u3055\u305b\u3066\u3044\u307e\u3059\u3002\n\n```python\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\n\nw, h = 100, 100 # \u5e45\u30fb\u9ad8\u3055\nimgdata = np.zeros((w, h, 3), dtype=np.uint8)\nfor x, y in [(x, y) for x in range(w) for y in range(h)]:\n    imgdata[y, x] = [0, x + y, 0]\n\nimshow(imgdata)\n```\n\n- \u5b9f\u884c\u7d50\u679c\n\n![matplot-green-grad.png](https://qiita-image-store.s3.amazonaws.com/0/99734/29adf60f-996a-60c1-051e-4c85c7996ad9.png)\n\n\u7dd1\u306e\u30b0\u30e9\u30c7\u30fc\u30b7\u30e7\u30f3\u304c\u63cf\u753b\u3067\u304d\u307e\u3057\u305f\u3002\n\n\n### \u7bc4\u56f2\u3067\u51e6\u7406\n\n\u7bc4\u56f2\u3092\u6307\u5b9a\u3057\u3066\u3001\u305d\u3053\u306b\u540c\u3058\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n`[10:30, 50:80]`\u3068\u3059\u308b\u3053\u3068\u3067\u3001(50, 10),(50, 30),(80, 30),(80, 10)\u3092\u9802\u70b9\u3068\u3059\u308b\u9577\u65b9\u5f62\u306e\u7bc4\u56f2\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```python\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\n\nw, h = 100, 100\nimgdata = np.zeros((w, h, 3), dtype=np.uint8)\nimgdata[10:30, 50:80] = [0, 0, 255]\n\nimshow(imgdata)\n```\n\n- \u5b9f\u884c\u7d50\u679c\n\n![matplot-blue-rect.png](https://qiita-image-store.s3.amazonaws.com/0/99734/a363d747-de88-37bc-37ad-63e9d47e83cc.png)\n\n\n### \u30d0\u30ea\u30a8\u30fc\u30b7\u30e7\u30f3\n\n\u3053\u308c\u3089\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u3001\u6a21\u69d8\u3084\u56f3\u5f62\u3092\u63cf\u753b\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30eb\u30fc\u30d7\u306e\u51e6\u7406\u3068\u7bc4\u56f2\u306e\u51e6\u7406\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u753b\u50cf\u3092\u63cf\u753b\u3059\u308b\u4f8b\u3067\u3059\u3002\n\u203bsin\u95a2\u6570\u3001cos\u95a2\u6570\u306f\u3001\u5468\u671f\u7684\u306a\u5024\u3092\u5f97\u308b\u305f\u3081\u306e\u3082\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6570\u5b66\u306e\u77e5\u8b58\u306f\u95a2\u4fc2\u306a\u3044\u306e\u3067\u3001\u96e3\u3057\u304f\u8003\u3048\u306a\u304f\u3066\u826f\u3044\u3067\u3059\u3002\n\n- \u6a21\u69d8\u3068\u9577\u65b9\u5f62\u6570\u500b\u3092\u63cf\u753b\u3059\u308bPython\u30b3\u30fc\u30c9\u4f8b\n\n```python\n%matplotlib inline\n\nfrom matplotlib.pyplot import imshow\nimport numpy as np\nfrom math import sin, cos\n\nw, h = 100, 100\na = np.zeros((w, h, 3), dtype=np.uint8)\nfor x, y in [(x, y) for x in range(w) for y in range(h)]:\n    v = int(127 + sin(x * 0.6) * cos(y * 0.6) * 128)\n    a[y, x] = [v, v, 0]\na[10:30, 10:70] = [int(\"ff\", 16), int(\"66\", 16), 0]\na[20:50, 20:80] = [int(\"ff\", 16), int(\"cc\", 16), 0]\na[30:70, 30:90] = [int(\"66\", 16), int(\"ff\", 16), 0]\n\nimshow(a)\n```\n\n- \u5b9f\u884c\u7d50\u679c\n\n![matplot-mix.png](https://qiita-image-store.s3.amazonaws.com/0/99734/e69b9951-8137-42f4-e27d-b4a9d1c008cb.png)\n\n\n## \u6570\u72ec - \u884c\u3084\u5217\u306a\u3069\u306e\u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u306e\u53d6\u308a\u51fa\u3057\n\n\u6570\u72ec\u3001\u307e\u305f\u306f\u30ca\u30f3\u30d0\u30fc\u30d7\u30ec\u30a4\u30b9\u3068\u306f\u3001\u6570\u5b57\u30d1\u30ba\u30eb\u306e\u4e00\u7a2e\u3067\u3059\u3002\n9x9\u306e\u8868\u306b\u3001\u7e26\u30fb\u6a2a\u30fb3x3\u306b\u540c\u3058\u6570\u5b57\u304c\u5165\u3089\u306a\u3044\u3088\u3046\u306b1\u301c9\u306e\u6570\u5b57\u3092\u57cb\u3081\u3066\u3044\u304f\u30d1\u30ba\u30eb\u3067\u3059\u3002\n\n\u6570\u72ec - Wikipedia\n[https://ja.wikipedia.org/wiki/%E6%95%B0%E7%8B%AC](https://ja.wikipedia.org/wiki/%E6%95%B0%E7%8B%AC)\n\nNumPy\u306e2\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3063\u3066\u3001\u6570\u72ec\u3092\u89e3\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u3053\u3067\u306f\u3054\u304f\u5358\u7d14\u306a\u30ed\u30b8\u30c3\u30af\u3057\u304b\u6271\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u6570\u72ec\u3092\u77e5\u3089\u306a\u304f\u3066\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\u6570\u5b57\u3092\u57cb\u3081\u308b\u305f\u3081\u306e\u3082\u3063\u3068\u3082\u5358\u7d14\u306a\u30ed\u30b8\u30c3\u30af\u306f\u3001\u3042\u308b\u30de\u30b9\u304b\u3089\u898b\u3066\u3001\u7e26\u30fb\u6a2a\u30fb3x3\u306b\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u3092\u63a2\u3059\u3053\u3068\u3067\u3059\u3002\n\u7e26\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u3001\u6a2a\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u30013x3\u306e\u6570\u5b57\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\u306e\u306b\u3001NumPy\u306e\u914d\u5217\u304c\u4fbf\u5229\u3067\u3059\u3002\n\u305f\u3060\u3057\u3001NumPy\u306e\u914d\u5217\u3060\u3051\u3067\u306f\u5c11\u3057\u9762\u5012\u306a\u64cd\u4f5c\u3082\u3042\u308a\u307e\u3059\u306e\u3067\u3001\u6a19\u6e96\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3044\u307e\u3059\u3002\n\n\u554f\u984c\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3001\u4e0b\u8a18\u306e2\u6b21\u5143\u914d\u5217\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u30bc\u30ed\u306f\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u3092\u793a\u3057\u307e\u3059\u3002\n\n```python\ngrid = np.array([\n[3, 0, 0, 0, 0, 9, 0, 0, 8],\n[0, 0, 0, 0, 0, 6, 7, 0, 0],\n[9, 8, 2, 0, 0, 0, 6, 0, 0],\n[0, 9, 0, 0, 3, 0, 4, 0, 0],\n[0, 3, 5, 0, 0, 0, 2, 1, 0],\n[0, 0, 7, 0, 2, 0, 0, 9, 0],\n[0, 0, 4, 0, 0, 0, 9, 7, 5],\n[0, 0, 9, 6, 0, 0, 0, 0, 0],\n[8, 0, 0, 4, 0, 0, 0, 0, 2],\n])\n```\n\n### \u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u3092\u53d6\u308a\u51fa\u3059\n\n9x9\u3092\u6a19\u6e96\u306e\u591a\u91cd\u30ea\u30b9\u30c8\u3067\u8868\u73fe\u3057\u305f\u5834\u5408\u3001\u884c\u306e\u30ea\u30b9\u30c8\u306f\u3068\u3082\u304b\u304f\u3068\u3057\u3066\u3001\u5217\u306e\u30ea\u30b9\u30c8\u30843x3\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u308a\u51fa\u3059\u306e\u306f\u5927\u5909\u3067\u3059\u3002\n\nNumPy\u3067\u306f\u30012\u6b21\u5143\u306e\u8868\u3068\u3057\u3066\u306e\u64cd\u4f5c\u304c\u7c21\u5358\u306b\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u8aac\u660e\u3092\u5206\u304b\u308a\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b\u3001\u6570\u72ec\u306e\u554f\u984c\u306b\u756a\u53f7\u3068\u8272\u3092\u4ed8\u3051\u305f\u753b\u50cf\u3092\u7528\u610f\u3057\u307e\u3057\u305f\u3002\n\n![sudoku1.png](https://qiita-image-store.s3.amazonaws.com/0/99734/b7ab45b1-2bfd-70ad-799e-58cce439d1b2.png)\n\n\u3053\u306e\u753b\u50cf\u3092\u53c2\u8003\u306b\u3057\u3066\u3001`f4`\u306e\u30de\u30b9\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n`f`\u306e\u5217\uff08\u7dd1\uff09\u306e\u914d\u5217\u3001`4`\u306e\u884c\uff08\u30d9\u30fc\u30b8\u30e5\uff09\u306e\u914d\u5217\u3001`d4-f6`\u306e3x3\uff08\u9ec4\u8272\uff09\u306e\u914d\u5217\u3092\u53d6\u308a\u51fa\u3057\u307e\u3059\u3002\n3x3\u306f2\u6b21\u5143\u914d\u5217\u3068\u3057\u3066\u53d6\u308a\u51fa\u3055\u308c\u307e\u3059\u306e\u3067\u3001`reshape()`\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u30661\u6b21\u5143\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u53d6\u308a\u51fa\u3057\u305f\u914d\u5217\u306f\u3001\u6271\u3044\u3084\u3059\u304f\u3059\u308b\u305f\u3081\u306b`list`\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u9805\u3067\u3082\u89e6\u308c\u307e\u3057\u305f\u304c\u30012\u6b21\u5143\u914d\u5217\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306f\u30011\u6b21\u5143\u76ee\u304c\u7e26\u65b9\u5411\u30012\u6b21\u5143\u76ee\u304c\u6a2a\u65b9\u5411\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u3064\u307e\u308a`[x, y]`\u3067\u306f\u306a\u304f\u3001`[y, x]`\u3067\u3059\u306e\u3067\u6ce8\u610f\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n`grid[:, 5]`,`grid[3, :]`,`grid[3:6, 3:6]`\u306e\u3088\u3046\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u30b9\u30e9\u30a4\u30b9\uff08\u90e8\u5206\u914d\u5217\uff09\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u540c\u3058\u7bc4\u56f2\u6307\u5b9a\u3092\u4ee3\u5165\u5f0f\u3067\u4f7f\u3048\u3070\u3001\u30d3\u30c3\u30c8\u30de\u30c3\u30d7\u306e\u9805\u3067\u793a\u3057\u305f\u901a\u308a\u3001\u305d\u306e\u7bc4\u56f2\u3059\u3079\u3066\u306b\u4ee3\u5165\u3067\u304d\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> list(grid[:, 5]) # \u5217f: x=5\u306e\u5217\n[9, 6, 0, 0, 0, 0, 0, 0, 0]\n>>> list(grid[3, :]) # \u884c4: y=3\u306e\u884c\n[0, 9, 0, 0, 3, 0, 4, 0, 0]\n>>> list(grid[3:6, 3:6].reshape(9)) # d4-f6\n[0, 3, 0, 0, 0, 0, 0, 2, 0]\n```\n\n\n### \u6570\u5b57\u30ea\u30b9\u30c8\u3092\u96c6\u8a08\n\n\u3053\u3053\u304b\u3089\u306fNumPy\u914d\u5217\u3092\u4f7f\u308f\u306a\u3044\u3067\u51e6\u7406\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u5217\u306e\u30ea\u30b9\u30c8\u3001\u884c\u306e\u30ea\u30b9\u30c8\u30013x3\u306e\u30ea\u30b9\u30c8\u304c\u53d6\u5f97\u51fa\u6765\u305f\u3089\u3001\u305d\u308c\u3089\u3092\u7d50\u5408\u3057\u3066\u304b\u3089`set`\u578b\u306b\u5909\u63db\u3059\u308c\u3070\u3001\u3059\u3067\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u306e\u30e6\u30cb\u30fc\u30af\u306a\u30ea\u30b9\u30c8\u304c\u5f97\u3089\u308c\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> used_nums = set(list(grid[:, 5]) + list(grid[3, :]) + list(grid[3:6, 3:6].reshape(9)))\n>>> used_nums\n{0, 2, 3, 4, 6, 9}\n```\n\n\u30bc\u30ed\u304c\u4e0d\u8981\u3067\u3059\u304c\u3001\u3042\u3063\u3066\u3082\u554f\u984c\u306a\u3044\u306e\u3067\u3001\u305d\u306e\u307e\u307e\u306b\u3057\u307e\u3059\u3002\n`used_nums - {0}`\u3068\u3059\u308c\u3070\u30bc\u30ed\u3092\u53d6\u308a\u9664\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n1\u301c9\u306e\u6570\u5217\u304b\u3089\u3059\u3067\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u3092\u53d6\u308a\u9664\u3051\u3070\u3001\u5019\u88dc\u3068\u306a\u308b\u6570\u5b57\u304c\u6b8b\u308a\u307e\u3059\u3002\n`set`\u578b\u306e`-`\u6f14\u7b97\u3092\u4f7f\u3063\u3066\u3001\u4f7f\u308f\u308c\u3066\u3044\u308b\u6570\u5b57\u3092\u53d6\u308a\u9664\u304d\u307e\u3059\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n# range(1, 10)\u306f1\uff5e9\u306e\u6570\u5b57\n>>> unused_nums = set(range(1, 10)) - used_nums\n>>> unused_nums\n{8, 1, 5, 7}\n```\n\n\u4f7f\u308f\u308c\u3066\u3044\u306a\u3044\u6570\u5b57\u304c1\u3064\u3060\u3051\u306a\u3089\u3001\u305d\u308c\u304c\u305d\u306e\u30de\u30b9\u306e\u6570\u5b57\u306b\u6c7a\u5b9a\u3057\u307e\u3059\u3002\n`f4`\u306f\u3001\u4eca\u306e\u72b6\u614b\u3067\u306f1\u3064\u306b\u7d5e\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u540c\u69d8\u306b`c2`\u306b\u3064\u3044\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```pycon\n# \uff08\u7d9a\u304d\uff09\n\n>>> col = list(grid[:, 2]) # \u5217c: x=2\u306e\u5217\n>>> row = list(grid[1, :]) # \u884c2: y=1\u306e\u884c\n>>> sq = list(grid[0:3, 0:3].reshape(9)) # a1-c3\n>>> col, row, sq\n([0, 0, 2, 0, 5, 7, 4, 9, 0], [0, 0, 0, 0, 0, 6, 7, 0, 0], [3, 0, 0, 0, 0, 0, 9, 8, 2])\n>>> used_nums = set(col + row + sq)\n>>> used_nums\n{0, 2, 3, 4, 5, 6, 7, 8, 9}\n>>> unused_nums = set(range(1, 10)) - used_nums\n>>> unused_nums\n{1}\n```\n\n\u4eca\u5ea6\u306f\u3001\u6570\u5b57\u304c`1`\u3060\u3051\u306b\u7d5e\u308c\u307e\u3057\u305f\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001`c2`\u306b\u306f`1`\u304c\u5165\u308b\u3053\u3068\u304c\u78ba\u5b9a\u3057\u307e\u3057\u305f\u3002\n\n\n### \u5b8c\u6210\u7248\uff08\u767a\u5c55\u9014\u4e0a\uff09\n\n\u3053\u3053\u307e\u3067\u306e\u30ed\u30b8\u30c3\u30af\u3092\u3001\u307e\u3060\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u306b\u7e70\u308a\u8fd4\u3057\u9069\u7528\u3057\u3066\u3044\u3051\u3070\u3001\u3068\u308a\u3042\u3048\u305a\u6570\u72ec\u3092\u89e3\u304f\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b8c\u6210\u3067\u3059\u3002\n\n\u305f\u3060\u3057\u30011\u5468\u306e\u9593\u306b\u3072\u3068\u3064\u306e\u30de\u30b9\u3082\u57cb\u3081\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3051\u308c\u3070\u3001\u30ae\u30d6\u30a2\u30c3\u30d7\u3068\u306a\u308a\u307e\u3059\u3002\n\u4eca\u306e\u307e\u307e\u3067\u306f\u3001\u57fa\u672c\u4e2d\u306e\u57fa\u672c\u306e\u30ed\u30b8\u30c3\u30af\u3057\u304b\u5b9f\u88c5\u3057\u3066\u3044\u307e\u305b\u3093\u306e\u3067\u3001\u3088\u307b\u3069\u7c21\u5358\u306a\u554f\u984c\u3067\u306a\u3051\u308c\u3070\u89e3\u3051\u306a\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u5b8c\u6210\u4f8b\u306e\u30b3\u30fc\u30c9\u3092\u63b2\u8f09\u3057\u307e\u3059\u3002\n\n- \u6570\u72ec\u3092\u89e3\u304fPython\u30b3\u30fc\u30c9\u4f8b\uff08\u7c21\u5358\u306a\u554f\u984c\u3057\u304b\u89e3\u3051\u306a\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\uff09\n\n```python\nimport numpy as np\n\ngrid = np.array([\n[3, 0, 0, 0, 0, 9, 0, 0, 8],\n[0, 0, 0, 0, 0, 6, 7, 0, 0],\n[9, 8, 2, 0, 0, 0, 6, 0, 0],\n[0, 9, 0, 0, 3, 0, 4, 0, 0],\n[0, 3, 5, 0, 0, 0, 2, 1, 0],\n[0, 0, 7, 0, 2, 0, 0, 9, 0],\n[0, 0, 4, 0, 0, 0, 9, 7, 5],\n[0, 0, 9, 6, 0, 0, 0, 0, 0],\n[8, 0, 0, 4, 0, 0, 0, 0, 2]])\n\nnums = set(range(1, 10)) # 1\uff5e9\nsquare_table = [0, 0, 0, 3, 3, 3, 6, 6, 6]\n\ndef fill(x, y):\n    if (grid[y, x] != 0):\n        return 0\n    list1 = list(grid[:, x]) # \u7e26\n    list2 = list(grid[y, :]) # \u6a2a\n    xx, yy = square_table[x], square_table[y]\n    list3 = list(grid[yy:yy+3, xx:xx+3].reshape(9)) # 3x3\n    used_nums = set(list1 + list2 + list3)\n    unused_nums = nums - used_nums\n    if len(unused_nums) == 1:\n        grid[y, x] = list(unused_nums)[0]\n        return 1\n    else:\n        return 0\n\nif __name__ == \"__main__\":\n    for i in range(81):\n        print(\"loop:\", i + 1)\n        filled = sum([fill(x, y) for x in range(9) for y in range(9)])\n        if len(grid[grid == 0]) == 0:\n            print(\"solved!\")\n            break\n        if filled == 0:\n            print(\"give up...\")\n            break\n    print(grid)\n```\n\n\u3053\u306e\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\u5c11\u3057\u88dc\u8db3\u3057\u307e\u3059\u3002\n\n`filled = sum(...)`\u306e\u3068\u3053\u308d\u306f\u3001\u30eb\u30fc\u30d7\u306e\u4ee3\u308f\u308a\u306b\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u3064\u304b\u3063\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u306e`fill()`\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u7d50\u679c\u3092`sum`\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u5468\u56de\u306b\u57cb\u3081\u305f\u30de\u30b9\u306e\u6570\u3092\u8a08\u7b97\u3057\u3066\u3044\u307e\u3059\u3002\n\n`grid[grid == 0]`\u306fNumPy\u914d\u5217\u306e\u4fbf\u5229\u306a\u6a5f\u80fd\u306e\u3072\u3068\u3064\u3067\u3001\u6761\u4ef6\u306b\u4e00\u81f4\u3059\u308b\u8981\u7d20\u3092\u307e\u3068\u3081\u3066\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f`grid == 0`\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30bc\u30ed\u306e\u8981\u7d20\u3092\u3059\u3079\u3066\u53d6\u308a\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u306e\u8981\u7d20\u6570\u3092\u6570\u3048\u308c\u3070\u3001\u57cb\u307e\u3063\u3066\u3044\u306a\u3044\u30de\u30b9\u306e\u6570\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3063\u3066\u3001\u554f\u984c\u304c\u89e3\u3051\u305f\u304b\u3069\u3046\u304b\u3092\u30c1\u30a7\u30c3\u30af\u3057\u3066\u3044\u307e\u3059\u3002\n\n3x3\u306e\u7bc4\u56f2\u3092\u8a08\u7b97\u3059\u308b\u305f\u3081\u306b\u3001\u5909\u63db\u30c6\u30fc\u30d6\u30eb`square_table`\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u56db\u5247\u6f14\u7b97\u3067\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408\u306f\u3053\u3061\u3089\u306e\u65b9\u304c\u660e\u5feb\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n- \u51e6\u7406\u7d50\u679c\n\n```\nloop: 1\nloop: 2\nloop: 3\nloop: 4\ngive up...\n[[3 0 6 0 0 9 5 0 8]\n [0 0 1 0 0 6 7 0 0]\n [9 8 2 0 0 0 6 0 0]\n [0 9 8 0 3 0 4 5 0]\n [0 3 5 0 0 0 2 1 0]\n [0 0 7 0 2 0 0 9 0]\n [0 0 4 0 0 0 9 7 5]\n [0 0 9 6 0 0 0 0 0]\n [8 0 3 4 0 0 1 6 2]]\n```\n\n\u6700\u521d\u306b\u6319\u3052\u305f\u554f\u984c\u306f\u3001\u3053\u306e\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u306f\u89e3\u3051\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u3001\u3088\u308a\u9ad8\u5ea6\u306a\u554f\u984c\u304c\u89e3\u6c7a\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u30ed\u30b8\u30c3\u30af\u306e\u8ffd\u52a0\u30fb\u6539\u9020\u306b\u6311\u6226\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\u3061\u306a\u307f\u306b\u3001Wikipedia\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u308b\u6700\u521d\u306e\u4f8b\u984c\u306f\u3001\u3053\u306e\u30ed\u30b8\u30c3\u30af\u3060\u3051\u3067\u3082\u89e3\u3051\u307e\u3057\u305f\u3002\n\n\n## \u304a\u308f\u308a\u306b\n\n\u3053\u306e\u3088\u3046\u306b\u3001\u51e6\u7406\u306b\u3088\u3063\u3066\u306f\u3001\u6a19\u6e96\u306e\u30ea\u30b9\u30c8\u3088\u308a\u683c\u6bb5\u306b\u67d4\u8edf\u306a\u64cd\u4f5c\u304c\u3067\u304d\u307e\u3059\u3002\nNumPy\u306b\u306f\u4ed6\u306b\u3082\u305f\u304f\u3055\u3093\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u306b\u6319\u3052\u305f\u3082\u306e\u3060\u3051\u3067\u3082\u304b\u306a\u308a\u4fbf\u5229\u306a\u306f\u305a\u3067\u3059\u3002\n\n\u6570\u5b66\u306b\u7e01\u304c\u306a\u3044\u65b9\u3082\u3001\u307e\u3060NumPy\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u3044\u65b9\u3082\u3001\u305c\u3072NumPy\u3092\u6d3b\u7528\u3057\u3066\u307f\u3066\u4e0b\u3055\u3044\u3002\n\n\n## \u53c2\u8003\u8cc7\u6599\n\nOverview \u2014 NumPy v1.11 Manual\n[http://docs.scipy.org/doc/numpy/index.html](http://docs.scipy.org/doc/numpy/index.html)\n\n100 numpy exercises\n[http://www.labri.fr/perso/nrougier/teaching/numpy.100/](http://www.labri.fr/perso/nrougier/teaching/numpy.100/)\n\npython - How do I convert a numpy array to (and display) an image? - Stack Overflow\n[http://stackoverflow.com/questions/2659312/how-do-i-convert-a-numpy-array-to-and-display-an-image](http://stackoverflow.com/questions/2659312/how-do-i-convert-a-numpy-array-to-and-display-an-image)\n", "tags": ["Python", "python3", "numpy"]}