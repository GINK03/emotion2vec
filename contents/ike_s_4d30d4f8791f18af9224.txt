{"context": " More than 1 year has passed since last update.\u5148\u65e5\u306eohkawa\u3055\u3093\u306e\u8a18\u4e8b\u306b\u6bd4\u3079\u308b\u3068\u5927\u5206\u30ab\u30b8\u30e5\u30a2\u30eb\u306a\u5185\u5bb9\u306b\u306a\u308a\u307e\u3059\u3002m(_ _)m\n\u3042\u308c\u3068\u6bd4\u3079\u308b\u3068\u5168\u7136\u6642\u9593\u304b\u3051\u3066\u307e\u305b\u3093\u3002\n\njruby sinatra\u3067\u3064\u304f\u308b\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u30b5\u30fc\u30c1\u30a8\u30f3\u30b8\u30f3\njruby sintra\u306belasticsearch\u3092\u5185\u8535\u3057\u305f\u7c21\u6613\u30b5\u30fc\u30c1\u30a8\u30f3\u30b8\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u6ce8\u610f) \u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u3084\u308a\u305f\u304b\u3063\u305f\u3060\u3051\u3067\u3059\u3002\nsinatra\u3067\u4f5c\u3063\u305f\u30aa\u30ec\u30aa\u30ec\u30b5\u30fc\u30d0\u30fc\u306belasticsearch\u3092\u7d44\u307f\u8fbc\u307f\n\u7c21\u6613REST API\u304b\u3089\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\nconfig/elasticsearch.yml\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u65e2\u5b58\u306eelasticsearch cluster\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3082\u3082\u3061\u308d\u3093\u53ef\u80fd\u3067\u3059\u3002\n(\u305d\u3053\u307e\u3067\u3059\u308b\u306a\u3089\u666e\u901a\u306bruby api\u4f7f\u3048\u3088\u3063\u3066\u8aac\u3082\u3042\u308b)\nweb\u30b5\u30fc\u30d0\u30fc\u306b\u306fpuma\u3092\u4f7f\u7528\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u306a\u308a\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u51fa\u308b\u306f\u305a\u3067\u3059\u3002\nhttps://github.com/shinjiikeda/jruby_embedded_elasticsearch\n\n\u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\ngradle\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nfor mac\n$ brew install gradle\n\n\n\u8d77\u52d5\n$ git clone git@github.com:shinjiikeda/jruby_embedded_elasticsearch.git\n$ ./gradlew run\n\nelasticsearch\u8d77\u52d5\u3092\u78ba\u8a8d\n$ curl -XGET http://localhost:9200/\n\nelasticsearch\u306eendpoint\u3082\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002\n\n\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30c9\n\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30c9\u306felasticsearch\u306eAPI\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\u5225\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\n$ cd example\n$ ./import.sh\n\n\n\u30c6\u30b9\u30c8\n$ curl -XGET http://localhost:4567/test/type1?query=test1\n{\n  \"took\" : 12,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.4375,\n    \"hits\" : [ {\n      \"_index\" : \"test\",\n      \"_type\" : \"type1\",\n      \"_id\" : \"1\",\n      \"_score\" : 0.4375,\n      \"_source\":{ \"title\" : \"test1\", \"description\": \"a b c d\" }\n    } ]\n  }\n}\n\n\n\u89e3\u8aac\n\nDirectory\u30ec\u30a4\u30a2\u30a6\u30c8\nconfig/  <- elasticsearch.yml\u306a\u3069elasticsearch\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u306f\u3053\u3053\nscripts/ <- ruby script\u306f\u3053\u3053\ndata/    <- elasticsearch\u306eindex\u306f\u3053\u3053\nplugins/ <- elasticsearch\u306eplugin\u306f\u3053\u3053\u306b\u3044\u308c\u308b\n\n\nruby rest api\u30bd\u30fc\u30b9\nscripts/app.rb\n# encoding; utf-8\n\nrequire 'java'\n\njava_import org.elasticsearch.node.NodeBuilder\njava_import org.elasticsearch.action.search.SearchResponse\njava_import org.elasticsearch.action.search.SearchType\njava_import org.elasticsearch.index.query.QueryBuilders\njava_import org.elasticsearch.index.query.QueryStringQueryBuilder\n\nrequire 'sinatra/base'\nrequire 'json'\n\n$node = NodeBuilder.nodeBuilder().node();\n$client = $node.client();\n\nclass App < Sinatra::Base\n  configure do\n  end\n\n  get '/:index/:type' do\n    index = @params['index']\n    type = @params['type']\n    query = @params['query']\n    fields = ! @params['fields'] ? [\"_all\"] : @params['fields'].split(/,/)\n    from = @params['from'] ? @params['from'].to_i : 0\n    size = @params['size'] ? @params['size'].to_i : 10\n\n    qsq = QueryBuilders.queryStringQuery(query)\n    fields.each do | f |\n      qsq.field(f)\n    end\n    qsq.defaultOperator(QueryStringQueryBuilder::Operator::AND)\n\n    response = $client.prepareSearch(index)\n                      .setTypes(type)\n                      .setSearchType(SearchType::DFS_QUERY_THEN_FETCH)\n                      .setQuery(qsq)\n                      .setFrom(from).setSize(size)\n                      .execute()\n                      .actionGet()\n    response.to_s\n  end\n\n  run!\nend\n\n\u4eca\u56de\u306f\u6642\u9593\u3082\u306a\u304b\u3063\u305f\u306e\u3067java api\u3092\u76f4\u3067\u547c\u3093\u3067\u304a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8fba\u306f\u597d\u304d\u306b\u52a0\u5de5\u3057\u3066\u3082\u3089\u3063\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u51fa\u529b\u5f62\u5f0f\u3082haml\u7b49\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3082\u7c21\u5358\u3067\u3059\u3002\n\u5c0f\u898f\u6a21\u306e\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u3067\u65e2\u5b58\u306e\u3082\u306e\u3092\u7f6e\u304d\u63db\u3048\u305f\u3044\u3068\u304b\u5c02\u7528api\u4f5c\u308b\u5fc5\u8981\u3042\u308b\u3051\u3069\u3001\u305d\u308c\u3060\u3051\u306e\u305f\u3081\u306belasticsearch\u3068api\u3092\u305d\u308c\u305e\u308c\u7acb\u3066\u308b\u306e\u304c\u9762\u5012\u304f\u3055\u3044\u3068\u304d\u306a\u3069\u306b\u5f79\u306b\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5148\u65e5\u306eohkawa\u3055\u3093\u306e\u8a18\u4e8b\u306b\u6bd4\u3079\u308b\u3068\u5927\u5206\u30ab\u30b8\u30e5\u30a2\u30eb\u306a\u5185\u5bb9\u306b\u306a\u308a\u307e\u3059\u3002m(_ _)m\n\u3042\u308c\u3068\u6bd4\u3079\u308b\u3068\u5168\u7136\u6642\u9593\u304b\u3051\u3066\u307e\u305b\u3093\u3002\n\n# jruby sinatra\u3067\u3064\u304f\u308b\u30b9\u30bf\u30f3\u30c9\u30a2\u30ed\u30fc\u30f3\u30b5\u30fc\u30c1\u30a8\u30f3\u30b8\u30f3\n\njruby sintra\u306belasticsearch\u3092\u5185\u8535\u3057\u305f\u7c21\u6613\u30b5\u30fc\u30c1\u30a8\u30f3\u30b8\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u6ce8\u610f) \u5b9f\u7528\u7684\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3001\u3084\u308a\u305f\u304b\u3063\u305f\u3060\u3051\u3067\u3059\u3002\n\nsinatra\u3067\u4f5c\u3063\u305f\u30aa\u30ec\u30aa\u30ec\u30b5\u30fc\u30d0\u30fc\u306belasticsearch\u3092\u7d44\u307f\u8fbc\u307f\n\u7c21\u6613REST API\u304b\u3089\u691c\u7d22\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nconfig/elasticsearch.yml\u3092\u9069\u5207\u306b\u8a2d\u5b9a\u3059\u308c\u3070\u65e2\u5b58\u306eelasticsearch cluster\u306b\u63a5\u7d9a\u3059\u308b\u3053\u3068\u3082\u3082\u3061\u308d\u3093\u53ef\u80fd\u3067\u3059\u3002\n(\u305d\u3053\u307e\u3067\u3059\u308b\u306a\u3089\u666e\u901a\u306bruby api\u4f7f\u3048\u3088\u3063\u3066\u8aac\u3082\u3042\u308b)\n\nweb\u30b5\u30fc\u30d0\u30fc\u306b\u306fpuma\u3092\u4f7f\u7528\u3057\u3066\u3044\u3066\u3001\u305d\u308c\u306a\u308a\u306b\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306f\u51fa\u308b\u306f\u305a\u3067\u3059\u3002\n\nhttps://github.com/shinjiikeda/jruby_embedded_elasticsearch\n\n## \u3068\u308a\u3042\u3048\u305a\u52d5\u304b\u3059\n\n### gradle\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nfor mac\n\n```bash\n$ brew install gradle\n```\n\n#### \u8d77\u52d5\n\n```bash\n$ git clone git@github.com:shinjiikeda/jruby_embedded_elasticsearch.git\n$ ./gradlew run\n```\n\nelasticsearch\u8d77\u52d5\u3092\u78ba\u8a8d\n\n```bash\n$ curl -XGET http://localhost:9200/\n```\n\nelasticsearch\u306eendpoint\u3082\u305d\u306e\u307e\u307e\u4f7f\u3048\u307e\u3059\u3002\n\n## \u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30c9\n\n\u30c7\u30fc\u30bf\u30d5\u30a3\u30fc\u30c9\u306felasticsearch\u306eAPI\u3092\u305d\u306e\u307e\u307e\u4f7f\u3044\u307e\u3059\u3002\n\n\u5225\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u304b\u3089\n\n```bash\n$ cd example\n$ ./import.sh\n```\n\n### \u30c6\u30b9\u30c8\n\n```bash\n$ curl -XGET http://localhost:4567/test/type1?query=test1\n{\n  \"took\" : 12,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 1,\n    \"max_score\" : 0.4375,\n    \"hits\" : [ {\n      \"_index\" : \"test\",\n      \"_type\" : \"type1\",\n      \"_id\" : \"1\",\n      \"_score\" : 0.4375,\n      \"_source\":{ \"title\" : \"test1\", \"description\": \"a b c d\" }\n    } ]\n  }\n}\n```\n\n## \u89e3\u8aac\n\n### Directory\u30ec\u30a4\u30a2\u30a6\u30c8\n\n```\nconfig/  <- elasticsearch.yml\u306a\u3069elasticsearch\u306e\u30b3\u30f3\u30d5\u30a3\u30b0\u306f\u3053\u3053\nscripts/ <- ruby script\u306f\u3053\u3053\ndata/    <- elasticsearch\u306eindex\u306f\u3053\u3053\nplugins/ <- elasticsearch\u306eplugin\u306f\u3053\u3053\u306b\u3044\u308c\u308b\n```\n\n### ruby rest api\u30bd\u30fc\u30b9\n\nscripts/app.rb\n\n```rb\n# encoding; utf-8\n\nrequire 'java'\n\njava_import org.elasticsearch.node.NodeBuilder\njava_import org.elasticsearch.action.search.SearchResponse\njava_import org.elasticsearch.action.search.SearchType\njava_import org.elasticsearch.index.query.QueryBuilders\njava_import org.elasticsearch.index.query.QueryStringQueryBuilder\n\nrequire 'sinatra/base'\nrequire 'json'\n\n$node = NodeBuilder.nodeBuilder().node();\n$client = $node.client();\n\nclass App < Sinatra::Base\n  configure do\n  end\n\n  get '/:index/:type' do\n    index = @params['index']\n    type = @params['type']\n    query = @params['query']\n    fields = ! @params['fields'] ? [\"_all\"] : @params['fields'].split(/,/)\n    from = @params['from'] ? @params['from'].to_i : 0\n    size = @params['size'] ? @params['size'].to_i : 10\n\n    qsq = QueryBuilders.queryStringQuery(query)\n    fields.each do | f |\n      qsq.field(f)\n    end\n    qsq.defaultOperator(QueryStringQueryBuilder::Operator::AND)\n\n    response = $client.prepareSearch(index)\n                      .setTypes(type)\n                      .setSearchType(SearchType::DFS_QUERY_THEN_FETCH)\n                      .setQuery(qsq)\n                      .setFrom(from).setSize(size)\n                      .execute()\n                      .actionGet()\n    response.to_s\n  end\n\n  run!\nend\n```\n\n\u4eca\u56de\u306f\u6642\u9593\u3082\u306a\u304b\u3063\u305f\u306e\u3067java api\u3092\u76f4\u3067\u547c\u3093\u3067\u304a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8fba\u306f\u597d\u304d\u306b\u52a0\u5de5\u3057\u3066\u3082\u3089\u3063\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u51fa\u529b\u5f62\u5f0f\u3082haml\u7b49\u4f7f\u3063\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3082\u7c21\u5358\u3067\u3059\u3002\n\n\u5c0f\u898f\u6a21\u306e\u691c\u7d22\u30b5\u30fc\u30d3\u30b9\u3067\u65e2\u5b58\u306e\u3082\u306e\u3092\u7f6e\u304d\u63db\u3048\u305f\u3044\u3068\u304b\u5c02\u7528api\u4f5c\u308b\u5fc5\u8981\u3042\u308b\u3051\u3069\u3001\u305d\u308c\u3060\u3051\u306e\u305f\u3081\u306belasticsearch\u3068api\u3092\u305d\u308c\u305e\u308c\u7acb\u3066\u308b\u306e\u304c\u9762\u5012\u304f\u3055\u3044\u3068\u304d\u306a\u3069\u306b\u5f79\u306b\u7acb\u3064\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n", "tags": ["Elasticsearch", "JRuby"]}