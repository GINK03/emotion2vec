{"context": " More than 1 year has passed since last update.\n\n\u524d\u7f6e\u304d\n\nGoal\nfluentd \u3067\u30e1\u30fc\u30eb\u304b\u3089 redmine \u3092\u66f4\u65b0\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u3092 TDD \u3067\u4f5c\u308b\n\n\u30b7\u30ca\u30ea\u30aa\n\ngem \u30b9\u30b1\u30eb\u30c8\u30f3\u4f5c\u6210\n\u30c6\u30b9\u30c8\u66f8\u304f\n\u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u308b\ngem \u3092\u30d3\u30eb\u30c9\u3059\u308b\ntd-agent \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\n\u4f5c\u308b\n\ngem \u30b9\u30b1\u30eb\u30c8\u30f3\u4f5c\u6210\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3050\u4f5c\u308c\u308b\u3002gem install bundler \u306f\u4e8b\u524d\u306b\u5b9f\u884c\u3057\u3066\u304a\u304f\u3002\n$ bundle gem --test=minitest fluent-plugin-out_redmine\n$ cd fluent-plugin-out_redmine\n$ git commit -m  \"initial commit\"\n\nversion \u3092\u6d88\u3057\u3066\u3001rake (test) \u304c\u901a\u308b\u3088\u3046\u306b\u3059\u308b\u3002fluentd \u306f version \u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6d88\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u4ed6\u306b fluentd \u7279\u6709\u306e\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u540d\u524d\u306f out_foo \u306a\u3069\u3060\u304c\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u540d\u306f FooOutput \u3068\u9006\u306b\u306a\u308b\u3002\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3082 Fluent::FooOutput \u306b\u306a\u308b\u3002Fluent::Plugin::FooOutput \u3068\u306f\u306a\u3089\u306a\u3044\u3002\u3053\u3053\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304b\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u304a\u4f5c\u6cd5\u7a0b\u5ea6\u306e\u30eb\u30fc\u30eb\u306a\u306e\u304b\u3069\u3046\u304b\u4e0d\u660e\u3002\n\u3064\u3044\u3067\u306b minitest \u304c\u30ab\u30e9\u30fc\u3067\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u8ffd\u8a18\uff1afluentd \u304c gemspec \u306b\u5165\u3063\u3066\u306a\u3044\u306e\u3067\u8ffd\u8a18\u304c\u5fc5\u8981\u3002spec.add_development_dependency \"fluentd\"\ndiff --git a/fluent-plugin-out_redmine.gemspec b/fluent-plugin-out_redmine.gemspec\nindex c22284c..219b4a8 100644\n--- a/fluent-plugin-out_redmine.gemspec\n+++ b/fluent-plugin-out_redmine.gemspec\n@@ -1,11 +1,10 @@\n # coding: utf-8\n lib = File.expand_path('../lib', __FILE__)\n $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\n-require 'fluent/plugin/out_redmine/version'\n\n Gem::Specification.new do |spec|\n   spec.name          = \"fluent-plugin-out_redmine\"\n-  spec.version       = Fluent::Plugin::OutRedmine::VERSION\n+  spec.version       = '0.0.1'\n   spec.authors       = [\"Tooru Nakai\"]\n\n@@ -29,4 +28,5 @@ Gem::Specification.new do |spec|\n   spec.add_development_dependency \"bundler\", \"~> 1.11\"\n   spec.add_development_dependency \"rake\", \"~> 10.0\"\n   spec.add_development_dependency \"minitest\", \"~> 5.0\"\n+  spec.add_development_dependency \"minitest-reporters\"\n end\ndiff --git a/lib/fluent/plugin/out_redmine.rb b/lib/fluent/plugin/out_redmine.rb\nindex a50ffd5..e0c8c03 100644\n--- a/lib/fluent/plugin/out_redmine.rb\n+++ b/lib/fluent/plugin/out_redmine.rb\n@@ -1,5 +1,3 @@\n-require \"fluent/plugin/out_redmine/version\"\n-\n module Fluent\n   module Plugin\n     module OutRedmine\ndiff --git a/lib/fluent/plugin/out_redmine/version.rb b/lib/fluent/plugin/out_redmine/version.rb\ndeleted file mode 100644\nindex 0046d6f..b7cd973 100644\n--- a/test/fluent/plugin/out_redmine_test.rb\n+++ b/test/fluent/plugin/out_redmine_test.rb\n@@ -1,11 +1,7 @@\n require 'test_helper'\n\n class Fluent::Plugin::OutRedmineTest < Minitest::Test\n-  def test_that_it_has_a_version_number\n-    refute_nil ::Fluent::Plugin::OutRedmine::VERSION\n-  end\n-\n   def test_it_does_something_useful\n-    assert false\n+    assert true\n   end\n end\ndiff --git a/test/test_helper.rb b/test/test_helper.rb\nindex 04156fa..7f395ee 100644\n--- a/test/test_helper.rb\n+++ b/test/test_helper.rb\n@@ -2,3 +2,8 @@ $LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\n require 'fluent/plugin/out_redmine'\n\n require 'minitest/autorun'\n+\n+# http://chriskottom.com/blog/2014/06/dress-up-your-minitest-output/\n+require 'minitest/reporters'\n+reporter_options = { color: true }\n+Minitest::Reporters.use! [Minitest::Reporters::DefaultReporter.new(reporter_options)]\n\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\u5fc5\u9808\n\nout_redmine_test.rb\n  def setup\n    Fluent::Test.setup\n  end\n\n\n\u6765\u9031\u7d9a\u304d\u3092\u66f8\u304f\u3067\u3042\u308d\u3046\u81ea\u5206\u306e\u305f\u3081\u306b\u30b7\u30ca\u30ea\u30aa\u3092\u66f8\u3044\u3066\u304a\u304f\u3002\n\nout_redmine_test.rb\n# Feature:\n#  - user configurable parameter: site=\"URL of redmine\", key=\"Redmine API Key\"\n#  - params from input: path=\"path to raw mail message file\"\n#  - invoke rdm-mailhandler.rb\n\n\nFluent::Test::BufferedOutputTestDriver.new \u306b\u81ea\u4f5c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u3092\u6e21\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3068\u3001\u81ea\u4f5c\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002Input \u3068\u304b\u306f InputTestDriver \u3068\u304b\u306b\u306a\u308b\u306e\u3067\u3001\u8ff7\u3063\u305f\u3089\u672c\u4f53\u306e\u30c6\u30b9\u30c8\u3092\u8aad\u3080\u3002\u3069\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3082\u540c\u3058\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3050\u308f\u304b\u308b\u3002\u4f8b\u3048\u3070 https://github.com/fluent/fluentd/blob/master/test/plugin/test_out_file.rb\n\u307e\u305a\u306f config \u3092\u53d6\u308b\u3068\u3053\u308d\u304b\u59cb\u3081\u308b\u3002config \u306f\u8981\u3059\u308b\u306b td-agent.conf \u3067\u8a2d\u5b9a\u3055\u308c\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3053\u3068\u3002\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4e2d\u3067\u306f\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068\u306a\u308b\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u5168\u666f\u306f\u3053\u3061\u3089\u3002\n\u6ce8\uff1a\u3053\u3053\u3067\u30af\u30e9\u30b9\u306e\u540d\u524d\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u3068\u5408\u308f\u305b\u308b\u305f\u3081\u306b Fluent::Plugin::OutRedmineTest \u304b\u3089 Fluent::RedmineOutputTest \u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n\nout_redmine_test.rb\nrequire 'test_helper'\n\n# Feature:\n#  - user configurable parameter: site=\"URL of redmine\", key=\"Redmine API Key\"\n#  - params from input: path=\"path to raw mail message file\"\n#  - invoke rdm-mailhandler.rb\n\nclass Fluent::OutRedmineTest < Minitest::Test\n  def setup\n    Fluent::Test.setup\n  end\n\n  CONFIG = %[\n    site http://redmine.rm-example.com\n    key a-api-key\n  ]\n\n  def create_driver(conf=CONFIG)\n    Fluent::Test::BufferedOutputTestDriver.new(Fluent::RedmineOutput).configure(conf)\n  end\n\n  def test_configure\n    driver = create_driver\n    assert_equal 'http://redmine.rm-example.com', driver.instance.site\n    assert_equal 'a-api-key', driver.instance.key\n  end\nend\n\n\n\u8a02\u6b63\uff1atag \u3092 config \u306b\u66f8\u3044\u3066\u3044\u305f\u304c\u3001test \u74b0\u5883\u3067\u306f @tag=\"test\" \u306b\u306a\u308b\u306e\u3067\u524a\u9664\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u30c6\u30b9\u30c8\u5b9f\u884c\u3002rake\nError:\nFluent::Plugin::OutRedmineTest#test_configure:\nNameError: uninitialized constant Fluent::Test\n\n1 tests, 0 assertions, 0 failures, 1 errors, 0 skips\n\nfluentd \u3092 test \u5074\u3067 require \u3057\u3066\u3044\u306a\u3044\u306e\u3067\u8ffd\u52a0\u3002require \u3059\u308b\u9806\u756a\u306b\u6ce8\u610f\u3002\ndiff --git a/test/test_helper.rb b/test/test_helper.rb\nindex 7f395ee..408eaa6 100644\n--- a/test/test_helper.rb\n+++ b/test/test_helper.rb\n@@ -1,7 +1,11 @@\n $LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\n-require 'fluent/plugin/out_redmine'\n\n require 'minitest/autorun'\n+require 'fluent/log'\n+require 'fluent/test'\n+\n+# my plugin must be placed after loading 'fluent'\n+require 'fluent/plugin/out_redmine'\n\n # http://chriskottom.com/blog/2014/06/dress-up-your-minitest-output/\n require 'minitest/reporters'\n\n\u30c6\u30b9\u30c8\u3002\nfluent-plugin-out_redmine/lib/fluent/plugin/out_redmine.rb:2:in `<module:Fluent>': Plugin is not a module (TypeError)\n\n\u3088\u3046\u3084\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u624b\u3092\u3044\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002bundler \u304c\u4f5c\u3063\u305f\u30b9\u30b1\u30eb\u30c8\u30f3\u306b\u306f Plugin \u304c\u3042\u3063\u305f\u308a \u30af\u30e9\u30b9\u540d\u304c OutRedmine \u3060\u3063\u305f\u308a\u3068\u540d\u524d\u304c\u60f3\u5b9a\u3068\u9055\u3046\u3002\u540d\u524d\u3092\u66f8\u304d\u63db\u3048\u3066\u672c\u5bb6\u304b\u3089\u30c6\u30f3\u30d7\u30ec\u3092\u30b3\u30d4\u30fc\u3002\nhttp://docs.fluentd.org/articles/plugin-development\nFluent::Plugin.register_output \u306b\u3066\u540d\u524d\u767b\u9332\u3082\u3084\u3063\u3066\u304a\u304f\u3002\u3053\u3053\u3067 'out_redmine' \u3067\u306f\u306a\u304f 'redmine' \u306b\u3059\u308b\u3002\n\nlib/fluent/plugin/out_redmine.rb\nrequire 'fluentd'\n\nmodule Fluent\n  class RedineOutput < BufferedOutput\n    # First, register the plugin. NAME is the name of this plugin\n    # and identifies the plugin in the configuration file.\n    Fluent::Plugin.register_output('redmine', self)\n\n    # config_param defines a parameter. You can refer a parameter via @path instance variable\n    # Without :default, a parameter is required.\n    config_param :path, :string\n\n    # This method is called before starting.\n    # 'conf' is a Hash that includes configuration parameters.\n    # If the configuration is invalid, raise Fluent::ConfigError.\n    def configure(conf)\n      super\n\n      # You can also refer raw parameter via conf[name].\n      @path = conf['path']\n    end\n\n    # This method is called when starting.\n    # Open sockets or files here.\n    def start\n      super\n    end\n\n    # This method is called when shutting down.\n    # Shutdown the thread and close sockets or files here.\n    def shutdown\n      super\n    end\n\n    # This method is called when an event reaches to Fluentd.\n    # Convert the event to a raw string.\n    def format(tag, time, record)\n      [tag, time, record].to_json + \"\\n\"\n      ## Alternatively, use msgpack to serialize the object.\n      # [tag, time, record].to_msgpack\n    end\n\n    # This method is called every flush interval. Write the buffer chunk\n    # to files or databases here.\n    # 'chunk' is a buffer chunk that includes multiple formatted\n    # events. You can use 'data = chunk.read' to get all events and\n    # 'chunk.open {|io| ... }' to get IO objects.\n    #\n    # NOTE! This method is called by internal thread, not Fluentd's main thread. So IO wait doesn't affect other plugins.\n    def write(chunk)\n      data = chunk.read\n      print data\n    end\n\n    ## Optionally, you can use chunk.msgpack_each to deserialize objects.\n    #def write(chunk)\n    #  chunk.msgpack_each {|(tag,time,record)|\n    #  }\n    #end\n  end\nend\n\n\n\u3067\u306f\u305d\u308c\u3063\u307d\u304f\u306a\u3063\u305f\u3068\u3053\u308d\u3067\u3001rake\nError:\nFluent::RedmineOutputTest#test_configure:\nFluent::ConfigError: 'path' parameter is required\n\n\u3053\u306e path \u306f\u30c6\u30f3\u30d7\u30ec\u306e\u30b3\u30fc\u30c9\u306b\u66f8\u304b\u308c\u3066\u3044\u305f\u3082\u306e\u3002\u524a\u9664\u3057\u3066\u5fc5\u8981\u306a config \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3002\n\nlib/fluent/plugin/out_redmine.rb\n    # config_param defines a parameter. You can refer a parameter via @path instance variable\n    # Without :default, a parameter is required.\n    config_param :site, :string\n    config_param :key, :string\n\n\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u6c17\u3065\u3044\u305f\u304c\u3001minitest \u3067\u306f\u306a\u304f unit test \u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u306f\u30fb\u30fb\u30fb\n\u3067\u3082\u307e\u3042\u52d5\u3044\u3066\u3044\u308b\u306e\u3067...\n\u6b21\u306f\u672c\u4e38\u3002Input \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3092\u51e6\u7406\u3059\u308b Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002Fluentd \u306e\u52d5\u304d\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001Input \u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u306f\u3001router.emit() \u306b\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u3002emit \u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c Fluentd \u306b\u308f\u305f\u3063\u3066\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3055\u308c\u308b\u3002\u3053\u306e\u6d41\u308c\u3092\u30c6\u30b9\u30c8\u306e\u4e2d\u306b\u66f8\u3051\u3070\u826f\u3044\u3002\n\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306f\u304a\u304a\u307e\u304b\u306b\u3001driver.emit \u3067 Input \u5074\u3067\u3084\u308b\u5165\u529b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3001driver.run \u3059\u308b\u3053\u3068\u3067 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306e write \u3092\u30b3\u30fc\u30eb\u3059\u308b\u3002driver.run \u306f write \u306e\u5b9f\u884c\u7d50\u679c\u3092\u8fd4\u3059\u306e\u3067\u305d\u308c\u3092\u8a55\u4fa1\u3059\u308c\u3070 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308b\u3002\u8a73\u7d30\u306f\u3053\u3061\u3089\u3002https://github.com/fluent/fluentd/blob/master/lib/fluent/test/output_test.rb\n\u3053\u3053\u3067\u305d\u3082\u305d\u3082 emit \u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3063\u3066\u3044\u308b\u304b\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3002\u3053\u308c\u306f driver.expect_format \u3068\u3044\u3046\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3002\n\ntest/fluent/plugin/out_redmine_test.rb\n  def test_format\n    driver = create_driver\n\n    time = Time.parse(\"2011-01-02 13:14:15 UTC\").to_i\n    input_data = {\"path\"=>\"/path/to/mail\"}\n    # simulate router.emit from Input Plugin\n    driver.emit(input_data , time)\n\n    driver.expect_format [\"test\", time.to_i,{\"path\":\"/path/to/mail\"}].to_msgpack\n\n    driver.run\n  end\n\n\nrake\nError:\nFluent::RedmineOutputTest#test_format:\nTest::Unit::AssertionFailedError: <\"\\x93\\xA4test\\xCEM z'\\x81\\xA4path\\xAD/path/to/mail\">(\"ASCII-8BIT\") expected but was\n<\"[\\\"test\\\",1293974055,{\\\"path\\\":\\\"/path/to/mail\\\"}]\\n\">(\"UTF-8\").\n\n\u6700\u521d\u306e\u30c6\u30f3\u30d7\u30ec\u3067\u306f to_json \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001msgpack \u306b\u5909\u66f4\u3059\u308b\u3002\n    def format(tag, time, record)\n      # [tag, time, record].to_json + \"\\n\"\n      ## Alternatively, use msgpack to serialize the object.\n      [tag, time, record].to_msgpack\n    end\n\n\u3053\u308c\u3067 test_format \u901a\u904e\u3002\u7d9a\u3044\u3066 rdm-mailhandler.rb \u3092\u4f7f\u3063\u3066 redmine \u3092\u66f4\u65b0\u3059\u308b\u3002\u3068\u3044\u3063\u3066\u3082\u4eca\u306e\u3068\u3053\u308d\u306f system \u3067\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30fc\u30eb\u3059\u308b\u3060\u3051\u306e\u5b9f\u88c5\u3002\n\u3069\u3046\u3084\u3063\u3066\u30c6\u30b9\u30c8\u3059\u308b\u304b\u3002\nout_stdout \u3068\u304b out_file \u3068\u304b\u6a19\u6e96\u30d7\u30e9\u30b0\u30a4\u30f3\u306f write \u3092\u5b9f\u884c\u3057\u305f\u3089\u30ea\u30a2\u30eb\u306a\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8(\u6a19\u6e96\u51fa\u529b\u3068\u304b\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u51fa\u529b)\u304c\u3042\u308b\u3002\u3064\u307e\u308a driver.run \u3057\u3066\u304b\u3089\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3067\u3082\u4eca\u56de\u306e\u5b9f\u88c5\u306f system(\"/path/to/rdm-mailhandler.rb\") \u3059\u308b\u3060\u3051\u3067\u3001\u7d50\u679c\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u306e\u306f\u304b\u306a\u308a\u5927\u5909\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u3044\u3064\u3092\u30b3\u30fc\u30eb\u3059\u308b redmine_submit \u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u3001\u305d\u3044\u3064\u306b\u60f3\u5b9a\u3057\u305f\u30e1\u30fc\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u6e21\u3055\u308c\u3066\u3044\u308c\u3070\u3001OK\u3068\u3059\u308b\u3002\nminitest \u306e stub \u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3002http://blog.willnet.in/entry/2012/12/05/004010\n  def test_redmine_submit\n    driver = create_driver\n    mail_path = \"/path/to/mail\"\n    input_data = {\"path\"=>mail_path}\n\n    # MiniTest::Mock.new.expect(method_name, retval, args in array)\n    mock_method = MiniTest::Mock.new.expect(:call, true, [mail_path])\n\n    driver.instance.stub(:redmine_submit, mock_method) do\n      driver.emit(input_data)\n      driver.run\n    end\n\n    # Mock.verify returns true if the method was called\n    assert_equal true, mock_method.verify\n  end\n\n\u3053\u306e stub \u306e\u66f8\u304d\u65b9\u3060\u3068\u672c\u4f53\u306b\u3082\u304d\u3061\u3093\u3068 redmine_submit \u304c\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\nError:\nFluent::RedmineOutputTest#test_redmine_submit:\nNameError: undefined method `redmine_submit' for class `Fluent::RedmineOutput'\n\n\u3068\u306a\u308b\u3002stub \u3059\u308b\u306e\u3067\u7a7a\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n\nlib/fluent/plugin/out_redmine.rb\n    def redmine_submit(mail_path)\n    end\n\n\n\u3067\u3001\u30c6\u30b9\u30c8\u3059\u308b\u3068\u307e\u3060\u547c\u3073\u51fa\u3057\u3066\u306a\u3044\u306e\u3067\u30fb\u30fb\u30fb\nError:\nFluent::RedmineOutputTest#test_redmine_submit:\nMockExpectationError: expected call(\"/path/to/mail\") => true\n\n\u30b3\u30fc\u30eb\u3055\u308c\u3066\u306a\u3044\u3088\u30fc\u3068\u306e\u3053\u3068\u3002\u3053\u3053\u3067\u3088\u3046\u3084\u304f Fluentd output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u624b\u3092\u5165\u308c\u308b\u3002\n\nlib/fluent/plugin/out_redmine.rb\n    def write(chunk)\n      chunk.msgpack_each {|(tag,time,record)|\n        redmine_submit(record[\"path\"])\n      }\n    end\n\n\nrake\nFinished tests in 1.043659s, 2.8745 tests/s, 2.8745 assertions/s.\n\nredmine_submit \u306e\u5b9f\u88c5\u306f\u3055\u304f\u3063\u3068\u3002\n\nlib/fluent/plugin/out_redmine.rb\n    def redmine_submit(mail_path)\n      handler=\"/path/to/rdm-mailhandler.rb\"\n      system(\"#{handler} --url #{@site} --key #{@key}\")\n    end\n\n\n\ngem \u3092\u30d3\u30eb\u30c9\u3059\u308b\n$ rake build\n\n\u3067 pkg \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u308b\u3002\n\ntd-agent \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n/usr/lib64/fluent/ruby/bin/fluent-gem install /path/to/file.gem\n\n# \u524d\u7f6e\u304d\n\n## Goal\n\nfluentd \u3067\u30e1\u30fc\u30eb\u304b\u3089 redmine \u3092\u66f4\u65b0\u3059\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u3092 TDD \u3067\u4f5c\u308b\n\n## \u30b7\u30ca\u30ea\u30aa\n\n- gem \u30b9\u30b1\u30eb\u30c8\u30f3\u4f5c\u6210\n- \u30c6\u30b9\u30c8\u66f8\u304f\n- \u30d7\u30e9\u30b0\u30a4\u30f3\u4f5c\u308b\n- gem \u3092\u30d3\u30eb\u30c9\u3059\u308b\n- td-agent \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n# \u4f5c\u308b\n\n## gem \u30b9\u30b1\u30eb\u30c8\u30f3\u4f5c\u6210\n\n\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u3059\u3050\u4f5c\u308c\u308b\u3002gem install bundler \u306f\u4e8b\u524d\u306b\u5b9f\u884c\u3057\u3066\u304a\u304f\u3002\n\n```\n$ bundle gem --test=minitest fluent-plugin-out_redmine\n$ cd fluent-plugin-out_redmine\n$ git commit -m  \"initial commit\"\n```\n\nversion \u3092\u6d88\u3057\u3066\u3001rake (test) \u304c\u901a\u308b\u3088\u3046\u306b\u3059\u308b\u3002fluentd \u306f version \u304c\u3042\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308b\u306e\u3067\u6d88\u3055\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u3002\u4ed6\u306b fluentd \u7279\u6709\u306e\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u540d\u524d\u306f out_foo \u306a\u3069\u3060\u304c\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u540d\u306f FooOutput \u3068\u9006\u306b\u306a\u308b\u3002\u30cd\u30fc\u30e0\u30b9\u30da\u30fc\u30b9\u3082 Fluent::FooOutput \u306b\u306a\u308b\u3002Fluent::Plugin::FooOutput \u3068\u306f\u306a\u3089\u306a\u3044\u3002\u3053\u3053\u306f\u30a8\u30e9\u30fc\u306b\u306a\u308b\u304b\u8a66\u3057\u3066\u306a\u3044\u306e\u3067\u304a\u4f5c\u6cd5\u7a0b\u5ea6\u306e\u30eb\u30fc\u30eb\u306a\u306e\u304b\u3069\u3046\u304b\u4e0d\u660e\u3002\n\n\u3064\u3044\u3067\u306b minitest \u304c\u30ab\u30e9\u30fc\u3067\u8868\u793a\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u8ffd\u8a18\uff1afluentd \u304c gemspec \u306b\u5165\u3063\u3066\u306a\u3044\u306e\u3067\u8ffd\u8a18\u304c\u5fc5\u8981\u3002```spec.add_development_dependency \"fluentd\"```\n\n```\ndiff --git a/fluent-plugin-out_redmine.gemspec b/fluent-plugin-out_redmine.gemspec\nindex c22284c..219b4a8 100644\n--- a/fluent-plugin-out_redmine.gemspec\n+++ b/fluent-plugin-out_redmine.gemspec\n@@ -1,11 +1,10 @@\n # coding: utf-8\n lib = File.expand_path('../lib', __FILE__)\n $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib)\n-require 'fluent/plugin/out_redmine/version'\n\n Gem::Specification.new do |spec|\n   spec.name          = \"fluent-plugin-out_redmine\"\n-  spec.version       = Fluent::Plugin::OutRedmine::VERSION\n+  spec.version       = '0.0.1'\n   spec.authors       = [\"Tooru Nakai\"]\n\n@@ -29,4 +28,5 @@ Gem::Specification.new do |spec|\n   spec.add_development_dependency \"bundler\", \"~> 1.11\"\n   spec.add_development_dependency \"rake\", \"~> 10.0\"\n   spec.add_development_dependency \"minitest\", \"~> 5.0\"\n+  spec.add_development_dependency \"minitest-reporters\"\n end\ndiff --git a/lib/fluent/plugin/out_redmine.rb b/lib/fluent/plugin/out_redmine.rb\nindex a50ffd5..e0c8c03 100644\n--- a/lib/fluent/plugin/out_redmine.rb\n+++ b/lib/fluent/plugin/out_redmine.rb\n@@ -1,5 +1,3 @@\n-require \"fluent/plugin/out_redmine/version\"\n-\n module Fluent\n   module Plugin\n     module OutRedmine\ndiff --git a/lib/fluent/plugin/out_redmine/version.rb b/lib/fluent/plugin/out_redmine/version.rb\ndeleted file mode 100644\nindex 0046d6f..b7cd973 100644\n--- a/test/fluent/plugin/out_redmine_test.rb\n+++ b/test/fluent/plugin/out_redmine_test.rb\n@@ -1,11 +1,7 @@\n require 'test_helper'\n\n class Fluent::Plugin::OutRedmineTest < Minitest::Test\n-  def test_that_it_has_a_version_number\n-    refute_nil ::Fluent::Plugin::OutRedmine::VERSION\n-  end\n-\n   def test_it_does_something_useful\n-    assert false\n+    assert true\n   end\n end\ndiff --git a/test/test_helper.rb b/test/test_helper.rb\nindex 04156fa..7f395ee 100644\n--- a/test/test_helper.rb\n+++ b/test/test_helper.rb\n@@ -2,3 +2,8 @@ $LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\n require 'fluent/plugin/out_redmine'\n\n require 'minitest/autorun'\n+\n+# http://chriskottom.com/blog/2014/06/dress-up-your-minitest-output/\n+require 'minitest/reporters'\n+reporter_options = { color: true }\n+Minitest::Reporters.use! [Minitest::Reporters::DefaultReporter.new(reporter_options)]\n```\n\n## \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n\u5fc5\u9808\n\n```rb:out_redmine_test.rb\n  def setup\n    Fluent::Test.setup\n  end\n```\n\n\u6765\u9031\u7d9a\u304d\u3092\u66f8\u304f\u3067\u3042\u308d\u3046\u81ea\u5206\u306e\u305f\u3081\u306b\u30b7\u30ca\u30ea\u30aa\u3092\u66f8\u3044\u3066\u304a\u304f\u3002\n\n```rb:out_redmine_test.rb\n# Feature:\n#  - user configurable parameter: site=\"URL of redmine\", key=\"Redmine API Key\"\n#  - params from input: path=\"path to raw mail message file\"\n#  - invoke rdm-mailhandler.rb\n```\n\n\n```Fluent::Test::BufferedOutputTestDriver.new``` \u306b\u81ea\u4f5c\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30af\u30e9\u30b9\u3092\u6e21\u3057\u3066\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4f5c\u308b\u3068\u3001\u81ea\u4f5c\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002Input \u3068\u304b\u306f InputTestDriver \u3068\u304b\u306b\u306a\u308b\u306e\u3067\u3001\u8ff7\u3063\u305f\u3089\u672c\u4f53\u306e\u30c6\u30b9\u30c8\u3092\u8aad\u3080\u3002\u3069\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3082\u540c\u3058\u3053\u3068\u3092\u3084\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u3050\u308f\u304b\u308b\u3002\u4f8b\u3048\u3070 https://github.com/fluent/fluentd/blob/master/test/plugin/test_out_file.rb\n\n\u307e\u305a\u306f config \u3092\u53d6\u308b\u3068\u3053\u308d\u304b\u59cb\u3081\u308b\u3002config \u306f\u8981\u3059\u308b\u306b td-agent.conf \u3067\u8a2d\u5b9a\u3055\u308c\u308b\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u3053\u3068\u3002\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4e2d\u3067\u306f\u305d\u306e\u307e\u307e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3068\u306a\u308b\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u5168\u666f\u306f\u3053\u3061\u3089\u3002\n\n\u6ce8\uff1a\u3053\u3053\u3067\u30af\u30e9\u30b9\u306e\u540d\u524d\u3082\u30e9\u30a4\u30d6\u30e9\u30ea\u5074\u3068\u5408\u308f\u305b\u308b\u305f\u3081\u306b ```Fluent::Plugin::OutRedmineTest``` \u304b\u3089 ```Fluent::RedmineOutputTest``` \u306b\u66f8\u304d\u63db\u3048\u308b\u3002\n\n```rb:out_redmine_test.rb\nrequire 'test_helper'\n\n# Feature:\n#  - user configurable parameter: site=\"URL of redmine\", key=\"Redmine API Key\"\n#  - params from input: path=\"path to raw mail message file\"\n#  - invoke rdm-mailhandler.rb\n\nclass Fluent::OutRedmineTest < Minitest::Test\n  def setup\n    Fluent::Test.setup\n  end\n\n  CONFIG = %[\n    site http://redmine.rm-example.com\n    key a-api-key\n  ]\n\n  def create_driver(conf=CONFIG)\n    Fluent::Test::BufferedOutputTestDriver.new(Fluent::RedmineOutput).configure(conf)\n  end\n\n  def test_configure\n    driver = create_driver\n    assert_equal 'http://redmine.rm-example.com', driver.instance.site\n    assert_equal 'a-api-key', driver.instance.key\n  end\nend\n```\n\n\u8a02\u6b63\uff1atag \u3092 config \u306b\u66f8\u3044\u3066\u3044\u305f\u304c\u3001test \u74b0\u5883\u3067\u306f ```@tag=\"test\"``` \u306b\u306a\u308b\u306e\u3067\u524a\u9664\u3002\n\u3068\u3044\u3046\u3053\u3068\u3067\u30c6\u30b9\u30c8\u5b9f\u884c\u3002```rake```\n\n```\nError:\nFluent::Plugin::OutRedmineTest#test_configure:\nNameError: uninitialized constant Fluent::Test\n\n1 tests, 0 assertions, 0 failures, 1 errors, 0 skips\n```\n\nfluentd \u3092 test \u5074\u3067 require \u3057\u3066\u3044\u306a\u3044\u306e\u3067\u8ffd\u52a0\u3002require \u3059\u308b\u9806\u756a\u306b\u6ce8\u610f\u3002\n\n```\ndiff --git a/test/test_helper.rb b/test/test_helper.rb\nindex 7f395ee..408eaa6 100644\n--- a/test/test_helper.rb\n+++ b/test/test_helper.rb\n@@ -1,7 +1,11 @@\n $LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)\n-require 'fluent/plugin/out_redmine'\n\n require 'minitest/autorun'\n+require 'fluent/log'\n+require 'fluent/test'\n+\n+# my plugin must be placed after loading 'fluent'\n+require 'fluent/plugin/out_redmine'\n\n # http://chriskottom.com/blog/2014/06/dress-up-your-minitest-output/\n require 'minitest/reporters'\n```\n\n\u30c6\u30b9\u30c8\u3002\n\n```\nfluent-plugin-out_redmine/lib/fluent/plugin/out_redmine.rb:2:in `<module:Fluent>': Plugin is not a module (TypeError)\n```\n\n\u3088\u3046\u3084\u304f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u624b\u3092\u3044\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002bundler \u304c\u4f5c\u3063\u305f\u30b9\u30b1\u30eb\u30c8\u30f3\u306b\u306f Plugin \u304c\u3042\u3063\u305f\u308a \u30af\u30e9\u30b9\u540d\u304c OutRedmine \u3060\u3063\u305f\u308a\u3068\u540d\u524d\u304c\u60f3\u5b9a\u3068\u9055\u3046\u3002\u540d\u524d\u3092\u66f8\u304d\u63db\u3048\u3066\u672c\u5bb6\u304b\u3089\u30c6\u30f3\u30d7\u30ec\u3092\u30b3\u30d4\u30fc\u3002\nhttp://docs.fluentd.org/articles/plugin-development\n\nFluent::Plugin.register_output \u306b\u3066\u540d\u524d\u767b\u9332\u3082\u3084\u3063\u3066\u304a\u304f\u3002\u3053\u3053\u3067 'out_redmine' \u3067\u306f\u306a\u304f 'redmine' \u306b\u3059\u308b\u3002\n\n```rb:lib/fluent/plugin/out_redmine.rb\nrequire 'fluentd'\n\nmodule Fluent\n  class RedineOutput < BufferedOutput\n    # First, register the plugin. NAME is the name of this plugin\n    # and identifies the plugin in the configuration file.\n    Fluent::Plugin.register_output('redmine', self)\n\n    # config_param defines a parameter. You can refer a parameter via @path instance variable\n    # Without :default, a parameter is required.\n    config_param :path, :string\n\n    # This method is called before starting.\n    # 'conf' is a Hash that includes configuration parameters.\n    # If the configuration is invalid, raise Fluent::ConfigError.\n    def configure(conf)\n      super\n\n      # You can also refer raw parameter via conf[name].\n      @path = conf['path']\n    end\n\n    # This method is called when starting.\n    # Open sockets or files here.\n    def start\n      super\n    end\n\n    # This method is called when shutting down.\n    # Shutdown the thread and close sockets or files here.\n    def shutdown\n      super\n    end\n\n    # This method is called when an event reaches to Fluentd.\n    # Convert the event to a raw string.\n    def format(tag, time, record)\n      [tag, time, record].to_json + \"\\n\"\n      ## Alternatively, use msgpack to serialize the object.\n      # [tag, time, record].to_msgpack\n    end\n\n    # This method is called every flush interval. Write the buffer chunk\n    # to files or databases here.\n    # 'chunk' is a buffer chunk that includes multiple formatted\n    # events. You can use 'data = chunk.read' to get all events and\n    # 'chunk.open {|io| ... }' to get IO objects.\n    #\n    # NOTE! This method is called by internal thread, not Fluentd's main thread. So IO wait doesn't affect other plugins.\n    def write(chunk)\n      data = chunk.read\n      print data\n    end\n\n    ## Optionally, you can use chunk.msgpack_each to deserialize objects.\n    #def write(chunk)\n    #  chunk.msgpack_each {|(tag,time,record)|\n    #  }\n    #end\n  end\nend\n```\n\n\u3067\u306f\u305d\u308c\u3063\u307d\u304f\u306a\u3063\u305f\u3068\u3053\u308d\u3067\u3001rake\n\n```\nError:\nFluent::RedmineOutputTest#test_configure:\nFluent::ConfigError: 'path' parameter is required\n```\n\n\u3053\u306e path \u306f\u30c6\u30f3\u30d7\u30ec\u306e\u30b3\u30fc\u30c9\u306b\u66f8\u304b\u308c\u3066\u3044\u305f\u3082\u306e\u3002\u524a\u9664\u3057\u3066\u5fc5\u8981\u306a config \u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8a2d\u5b9a\u3002\n\n```rb:lib/fluent/plugin/out_redmine.rb\n    # config_param defines a parameter. You can refer a parameter via @path instance variable\n    # Without :default, a parameter is required.\n    config_param :site, :string\n    config_param :key, :string\n```\n\n\u3053\u3053\u307e\u3067\u66f8\u3044\u3066\u6c17\u3065\u3044\u305f\u304c\u3001minitest \u3067\u306f\u306a\u304f unit test \u3092\u4f7f\u308f\u306a\u3044\u3068\u3044\u3051\u306a\u304b\u3063\u305f\u306e\u3067\u306f\u30fb\u30fb\u30fb\n\n\u3067\u3082\u307e\u3042\u52d5\u3044\u3066\u3044\u308b\u306e\u3067...\n\n\u6b21\u306f\u672c\u4e38\u3002Input \u304b\u3089\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u308c\u3092\u51e6\u7406\u3059\u308b Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002Fluentd \u306e\u52d5\u304d\u3092\u7c21\u5358\u306b\u307e\u3068\u3081\u308b\u3068\u3001Input \u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u306f\u3001```router.emit()``` \u306b\u30cf\u30c3\u30b7\u30e5\u3092\u6e21\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3053\u3068\u306b\u306a\u3063\u3066\u3044\u308b\u3002emit \u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c Fluentd \u306b\u308f\u305f\u3063\u3066\u3001\u5fc5\u8981\u306b\u5fdc\u3058\u3066 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3055\u308c\u308b\u3002\u3053\u306e\u6d41\u308c\u3092\u30c6\u30b9\u30c8\u306e\u4e2d\u306b\u66f8\u3051\u3070\u826f\u3044\u3002\n\n\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u306f\u304a\u304a\u307e\u304b\u306b\u3001driver.emit \u3067 Input \u5074\u3067\u3084\u308b\u5165\u529b\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30c8\u3057\u3001driver.run \u3059\u308b\u3053\u3068\u3067 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306e write \u3092\u30b3\u30fc\u30eb\u3059\u308b\u3002driver.run \u306f write \u306e\u5b9f\u884c\u7d50\u679c\u3092\u8fd4\u3059\u306e\u3067\u305d\u308c\u3092\u8a55\u4fa1\u3059\u308c\u3070 Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u30c6\u30b9\u30c8\u3067\u304d\u308b\u3053\u3068\u306b\u306a\u308b\u3002\u8a73\u7d30\u306f\u3053\u3061\u3089\u3002https://github.com/fluent/fluentd/blob/master/lib/fluent/test/output_test.rb\n\n\u3053\u3053\u3067\u305d\u3082\u305d\u3082 emit \u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u6e21\u3063\u3066\u3044\u308b\u304b\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3002\u3053\u308c\u306f driver.expect_format \u3068\u3044\u3046\u306e\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u4f7f\u3046\u3002\n\n```rb:test/fluent/plugin/out_redmine_test.rb\n  def test_format\n    driver = create_driver\n\n    time = Time.parse(\"2011-01-02 13:14:15 UTC\").to_i\n    input_data = {\"path\"=>\"/path/to/mail\"}\n    # simulate router.emit from Input Plugin\n    driver.emit(input_data , time)\n\n    driver.expect_format [\"test\", time.to_i,{\"path\":\"/path/to/mail\"}].to_msgpack\n\n    driver.run\n  end\n```\n\nrake\n\n```\nError:\nFluent::RedmineOutputTest#test_format:\nTest::Unit::AssertionFailedError: <\"\\x93\\xA4test\\xCEM z'\\x81\\xA4path\\xAD/path/to/mail\">(\"ASCII-8BIT\") expected but was\n<\"[\\\"test\\\",1293974055,{\\\"path\\\":\\\"/path/to/mail\\\"}]\\n\">(\"UTF-8\").\n```\n\n\u6700\u521d\u306e\u30c6\u30f3\u30d7\u30ec\u3067\u306f to_json \u3092\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001msgpack \u306b\u5909\u66f4\u3059\u308b\u3002\n\n```\n    def format(tag, time, record)\n      # [tag, time, record].to_json + \"\\n\"\n      ## Alternatively, use msgpack to serialize the object.\n      [tag, time, record].to_msgpack\n    end\n```\n\n\u3053\u308c\u3067 test_format \u901a\u904e\u3002\u7d9a\u3044\u3066 rdm-mailhandler.rb \u3092\u4f7f\u3063\u3066 redmine \u3092\u66f4\u65b0\u3059\u308b\u3002\u3068\u3044\u3063\u3066\u3082\u4eca\u306e\u3068\u3053\u308d\u306f system \u3067\u3053\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30b3\u30fc\u30eb\u3059\u308b\u3060\u3051\u306e\u5b9f\u88c5\u3002\n\n\u3069\u3046\u3084\u3063\u3066\u30c6\u30b9\u30c8\u3059\u308b\u304b\u3002\n\nout_stdout \u3068\u304b out_file \u3068\u304b\u6a19\u6e96\u30d7\u30e9\u30b0\u30a4\u30f3\u306f write \u3092\u5b9f\u884c\u3057\u305f\u3089\u30ea\u30a2\u30eb\u306a\u30a2\u30a6\u30c8\u30d7\u30c3\u30c8(\u6a19\u6e96\u51fa\u529b\u3068\u304b\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u51fa\u529b)\u304c\u3042\u308b\u3002\u3064\u307e\u308a driver.run \u3057\u3066\u304b\u3089\u7d50\u679c\u3092\u30c1\u30a7\u30c3\u30af\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u3067\u3082\u4eca\u56de\u306e\u5b9f\u88c5\u306f system(\"/path/to/rdm-mailhandler.rb\") \u3059\u308b\u3060\u3051\u3067\u3001\u7d50\u679c\u3092\u30a8\u30df\u30e5\u30ec\u30fc\u30c8\u3059\u308b\u306e\u306f\u304b\u306a\u308a\u5927\u5909\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3053\u3044\u3064\u3092\u30b3\u30fc\u30eb\u3059\u308b redmine_submit \u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u308a\u3001\u305d\u3044\u3064\u306b\u60f3\u5b9a\u3057\u305f\u30e1\u30fc\u30eb\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u304c\u6e21\u3055\u308c\u3066\u3044\u308c\u3070\u3001OK\u3068\u3059\u308b\u3002\n\nminitest \u306e stub \u3092\u4f7f\u3063\u3066\u307f\u305f\u3002\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3002http://blog.willnet.in/entry/2012/12/05/004010\n\n```rb\n  def test_redmine_submit\n    driver = create_driver\n    mail_path = \"/path/to/mail\"\n    input_data = {\"path\"=>mail_path}\n\n    # MiniTest::Mock.new.expect(method_name, retval, args in array)\n    mock_method = MiniTest::Mock.new.expect(:call, true, [mail_path])\n\n    driver.instance.stub(:redmine_submit, mock_method) do\n      driver.emit(input_data)\n      driver.run\n    end\n\n    # Mock.verify returns true if the method was called\n    assert_equal true, mock_method.verify\n  end\n```\n\n\u3053\u306e stub \u306e\u66f8\u304d\u65b9\u3060\u3068\u672c\u4f53\u306b\u3082\u304d\u3061\u3093\u3068 redmine_submit \u304c\u5ba3\u8a00\u3055\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\n\n```\nError:\nFluent::RedmineOutputTest#test_redmine_submit:\nNameError: undefined method `redmine_submit' for class `Fluent::RedmineOutput'\n```\n\n\u3068\u306a\u308b\u3002stub \u3059\u308b\u306e\u3067\u7a7a\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3002\n\n```rb:lib/fluent/plugin/out_redmine.rb\n    def redmine_submit(mail_path)\n    end\n```\n\n\u3067\u3001\u30c6\u30b9\u30c8\u3059\u308b\u3068\u307e\u3060\u547c\u3073\u51fa\u3057\u3066\u306a\u3044\u306e\u3067\u30fb\u30fb\u30fb\n\n```\nError:\nFluent::RedmineOutputTest#test_redmine_submit:\nMockExpectationError: expected call(\"/path/to/mail\") => true\n```\n\n\u30b3\u30fc\u30eb\u3055\u308c\u3066\u306a\u3044\u3088\u30fc\u3068\u306e\u3053\u3068\u3002\u3053\u3053\u3067\u3088\u3046\u3084\u304f Fluentd output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u624b\u3092\u5165\u308c\u308b\u3002\n\n```rb:lib/fluent/plugin/out_redmine.rb\n    def write(chunk)\n      chunk.msgpack_each {|(tag,time,record)|\n        redmine_submit(record[\"path\"])\n      }\n    end\n```\n\nrake\n\n```\nFinished tests in 1.043659s, 2.8745 tests/s, 2.8745 assertions/s.\n```\n\nredmine_submit \u306e\u5b9f\u88c5\u306f\u3055\u304f\u3063\u3068\u3002\n\n```rb:lib/fluent/plugin/out_redmine.rb\n    def redmine_submit(mail_path)\n      handler=\"/path/to/rdm-mailhandler.rb\"\n      system(\"#{handler} --url #{@site} --key #{@key}\")\n    end\n```\n\n## gem \u3092\u30d3\u30eb\u30c9\u3059\u308b\n\n```\n$ rake build\n```\n\n\u3067 pkg \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u30d5\u30a1\u30a4\u30eb\u304c\u3067\u304d\u308b\u3002\n\n## td-agent \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n```\n/usr/lib64/fluent/ruby/bin/fluent-gem install /path/to/file.gem\n```\n", "tags": ["fluentd"]}