{"tags": ["iPhone", "Objective-C", "Cocoa"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002addObserver:forKeyPath:options:context:\u306f\u4e00\u3064\u4e00\u3064\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\n\u9762\u5012\u3067\u3059\u3002\u305d\u3053\u3067\n@interface NSObject(ObserverALL)\n- (void)addObserverAllProperties:(NSObject *)observer options:(NSKeyValueObservingOptions)options context:(void *)context;\n- (void)removeObserverAllProperties:(NSObject *)observer context:(void *)context;\n@end\n@implementation NSObject(ObserverALL)\n- (void)addObserverAllProperties:(NSObject *)observer options:(NSKeyValueObservingOptions)options context:(void *)context\n{\n    unsigned propertyCount;\n    objc_property_t *properties = class_copyPropertyList([self class], &propertyCount);\n    for(int i = 0 ; i < propertyCount ; ++i)\n    {\n        objc_property_t property = properties[i];\n        const char *propName = property_getName(property);\n        NSString *propertyName = [NSString stringWithUTF8String:propName];\n        [self addObserver:observer forKeyPath:propertyName options:options context:context];\n//        NSLog(@\"add observer -> %@\", propertyName);\n    }\n    free(properties);\n}\n- (void)removeObserverAllProperties:(NSObject *)observer context:(void *)context\n{\n    unsigned propertyCount;\n    objc_property_t *properties = class_copyPropertyList([self class], &propertyCount);\n    for(int i = 0 ; i < propertyCount ; ++i)\n    {\n        objc_property_t property = properties[i];\n        const char *propName = property_getName(property);\n        NSString *propertyName = [NSString stringWithUTF8String:propName];\n        [self removeObserver:observer forKeyPath:propertyName context:context];\n    }\n    free(properties);\n}\n@end\n\n\u3068\u30ab\u30c6\u30b4\u30ea\u3092\u7528\u610f\u3057\u3066\u3042\u3052\u307e\u3059\u3002\nclass_copyPropertyList\u3092\u4f7f\u3063\u3066\u5168\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5217\u6319\u3057\u3066\u3001\u305d\u308c\u3092addObserver\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u30ab\u30c6\u30b4\u30ea\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u697d\u306b\u5168\u76e3\u8996\u3067\u304d\u307e\u3059\u306d\u3002\n\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5c11\u3005\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308c\u3070\u8272\u3005\u306a\u7528\u9014\u306b\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\u30d8\u30c3\u30c0\u30fc\u3092\u66f8\u304d\u5fd8\u308c\u3066\u307e\u3057\u305f\u3002\n#import <objc/runtime.h>\n\n\u304c\u5fc5\u8981\u3067\u3059\naddObserver:forKeyPath:options:context:\u306f\u4e00\u3064\u4e00\u3064\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u305a\u3001\n\u9762\u5012\u3067\u3059\u3002\u305d\u3053\u3067\n\n```\n@interface NSObject(ObserverALL)\n- (void)addObserverAllProperties:(NSObject *)observer options:(NSKeyValueObservingOptions)options context:(void *)context;\n- (void)removeObserverAllProperties:(NSObject *)observer context:(void *)context;\n@end\n@implementation NSObject(ObserverALL)\n- (void)addObserverAllProperties:(NSObject *)observer options:(NSKeyValueObservingOptions)options context:(void *)context\n{\n    unsigned propertyCount;\n    objc_property_t *properties = class_copyPropertyList([self class], &propertyCount);\n    for(int i = 0 ; i < propertyCount ; ++i)\n    {\n        objc_property_t property = properties[i];\n        const char *propName = property_getName(property);\n        NSString *propertyName = [NSString stringWithUTF8String:propName];\n        [self addObserver:observer forKeyPath:propertyName options:options context:context];\n//        NSLog(@\"add observer -> %@\", propertyName);\n    }\n    free(properties);\n}\n- (void)removeObserverAllProperties:(NSObject *)observer context:(void *)context\n{\n    unsigned propertyCount;\n    objc_property_t *properties = class_copyPropertyList([self class], &propertyCount);\n    for(int i = 0 ; i < propertyCount ; ++i)\n    {\n        objc_property_t property = properties[i];\n        const char *propName = property_getName(property);\n        NSString *propertyName = [NSString stringWithUTF8String:propName];\n        [self removeObserver:observer forKeyPath:propertyName context:context];\n    }\n    free(properties);\n}\n@end\n```\n\n\u3068\u30ab\u30c6\u30b4\u30ea\u3092\u7528\u610f\u3057\u3066\u3042\u3052\u307e\u3059\u3002\nclass_copyPropertyList\u3092\u4f7f\u3063\u3066\u5168\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u5217\u6319\u3057\u3066\u3001\u305d\u308c\u3092addObserver\u3059\u308b\u3060\u3051\u306e\u7c21\u5358\u306a\u30ab\u30c6\u30b4\u30ea\u3067\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u697d\u306b\u5168\u76e3\u8996\u3067\u304d\u307e\u3059\u306d\u3002\n\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u5c11\u3005\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308c\u3070\u8272\u3005\u306a\u7528\u9014\u306b\u4f7f\u3048\u305d\u3046\u3067\u3059\u3002\n\n\u30d8\u30c3\u30c0\u30fc\u3092\u66f8\u304d\u5fd8\u308c\u3066\u307e\u3057\u305f\u3002\n\n```\n#import <objc/runtime.h>\n```\n\n\u304c\u5fc5\u8981\u3067\u3059"}