{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\narduino\u3067can\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u5199\u771f\n\n\n\u56de\u8def\u56f3\n\n\nuno\u5199\u771f\n\n\nnano\u5199\u771f\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n#include <SPI.h>\n#include \"mcp_can.h\"\nconst int SPI_CS_PIN = 10;\nMCP_CAN CAN(SPI_CS_PIN);\nvoid setup()\n{\n    Serial.begin(115200);\nSTART_INIT:\n    if (CAN_OK == CAN.begin(CAN_500KBPS))\n    {\n        Serial.println(\"CAN BUS Shield init ok!\");\n    }\n    else\n    {\n        Serial.println(\"CAN BUS Shield init fail\");\n        Serial.println(\"Init CAN BUS Shield again\");\n        delay(100);\n        goto START_INIT;\n    }\n}\nunsigned char stmp[8] = {\n    0,\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7\n};\nvoid loop()\n{\n    CAN.sendMsgBuf(0x00, 0, 8, stmp);\n    delay(100);\n}\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n#include <SPI.h>\n#include \"mcp_can.h\"\nconst int SPI_CS_PIN = 10;\nMCP_CAN CAN(SPI_CS_PIN);\nvoid setup()\n{\n    Serial.begin(115200);\nSTART_INIT:\n    if (CAN_OK == CAN.begin(CAN_500KBPS))\n    {\n        Serial.println(\"CAN BUS Shield init ok!\");\n    }\n    else\n    {\n        Serial.println(\"CAN BUS Shield init fail\");\n        Serial.println(\"Init CAN BUS Shield again\");\n        delay(100);\n        goto START_INIT;\n    }\n}\nvoid loop()\n{\n    unsigned char len = 0;\n    unsigned char buf[8];\n    if (CAN_MSGAVAIL == CAN.checkReceive())\n    {\n        CAN.readMsgBuf(&len, buf);\n        unsigned char canId = CAN.getCanId();\n        Serial.println(\"-----------------------------\");\n        Serial.println(\"get data from ID: \");\n        Serial.println(canId);\n        for (int i = 0; i < len; i++)\n        {\n            Serial.print(buf[i]);\n            Serial.print(\"\\t\");\n        }\n        Serial.println();\n    }\n}\n\n#\u6982\u8981\narduino\u3067can\u3084\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n#\u5199\u771f\n![can.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/8658c1b3-8355-2b7b-3f20-2b021f619977.jpeg)\n#\u56de\u8def\u56f3\n![can1.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/62bba9bd-57bd-7d84-0fed-76ddd9b0edb2.jpeg)\n#uno\u5199\u771f\n![MVC-011S.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/4ab393d9-0e80-0265-9417-28984388f586.jpeg)\n#nano\u5199\u771f\n![MVC-012S.JPG](https://qiita-image-store.s3.amazonaws.com/0/18104/8d9ec1db-4753-c91b-8471-eb268e751b4c.jpeg)\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\n#include <SPI.h>\n#include \"mcp_can.h\"\nconst int SPI_CS_PIN = 10;\nMCP_CAN CAN(SPI_CS_PIN);\nvoid setup()\n{\n    Serial.begin(115200);\nSTART_INIT:\n    if (CAN_OK == CAN.begin(CAN_500KBPS))\n    {\n        Serial.println(\"CAN BUS Shield init ok!\");\n    }\n    else\n    {\n        Serial.println(\"CAN BUS Shield init fail\");\n        Serial.println(\"Init CAN BUS Shield again\");\n        delay(100);\n        goto START_INIT;\n    }\n}\nunsigned char stmp[8] = {\n\t0,\n\t1,\n\t2,\n\t3,\n\t4,\n\t5,\n\t6,\n\t7\n};\nvoid loop()\n{\n    CAN.sendMsgBuf(0x00, 0, 8, stmp);\n    delay(100);\n}\n```\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\n#include <SPI.h>\n#include \"mcp_can.h\"\nconst int SPI_CS_PIN = 10;\nMCP_CAN CAN(SPI_CS_PIN);\nvoid setup()\n{\n\tSerial.begin(115200);\nSTART_INIT:\n\tif (CAN_OK == CAN.begin(CAN_500KBPS))\n\t{\n\t\tSerial.println(\"CAN BUS Shield init ok!\");\n\t}\n\telse\n\t{\n\t\tSerial.println(\"CAN BUS Shield init fail\");\n\t\tSerial.println(\"Init CAN BUS Shield again\");\n\t\tdelay(100);\n\t\tgoto START_INIT;\n\t}\n}\nvoid loop()\n{\n\tunsigned char len = 0;\n\tunsigned char buf[8];\n\tif (CAN_MSGAVAIL == CAN.checkReceive())\n\t{\n\t\tCAN.readMsgBuf(&len, buf);\n\t\tunsigned char canId = CAN.getCanId();\n\t\tSerial.println(\"-----------------------------\");\n\t\tSerial.println(\"get data from ID: \");\n\t\tSerial.println(canId);\n\t\tfor (int i = 0; i < len; i++)\n\t\t{\n\t\t\tSerial.print(buf[i]);\n\t\t\tSerial.print(\"\\t\");\n\t\t}\n\t\tSerial.println();\n\t}\n}\n```\n", "tags": ["Arduino", "\u30af\u30eb\u30de\u306eiot", "can", "SPI"]}