{"context": " More than 1 year has passed since last update.\u300c\u4e09\u6b21\u5143\u306b\u306f\u8208\u5473\u304c\u306a\u3044\u2026\u300d\u3068\u98df\u308f\u305a\u5acc\u3044\u3057\u3066\u8996\u91ce\u3092\u72ed\u3081\u308b\u306e\u3082\u306a\u3093\u306a\u306e\u3067\u3001\u300c\u9cf4\u304b\u306c\u306a\u3089\u9cf4\u304b\u305b\u3066\u898b\u305b\u3088\u3046\u30db\u30c8\u30c8\u30ae\u30b9\u300d\u306e\u7cbe\u795e\u3067 \u5199\u771f\u3092\u30a2\u30cb\u30e1\u3063\u307d\u304f\u5909\u63db\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\n\u4f7f\u3063\u305f\u8a00\u8a9e\u306fGo\u8a00\u8a9e\u3002\u4eca\u56de\u306f\u52c9\u5f37\u304c\u3066\u3089\u6c17\u306e\u5229\u3044\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u5730\u9053\u306b\uff11\u30c9\u30c3\u30c8\u305a\u3064\u5909\u63db\u3057\u3066\u308b\u306e\u3067\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6d41\u7528\u3059\u308c\u3070\u4ed6\u306e\u8a00\u8a9e\u7248\u3082\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3068\u601d\u3046\u3002\n\n\u4ed5\u7d44\u307f\n\u3053\u3093\u306a\u611f\u3058\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u753b\u50cf\u3092\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n\u3042\u3089\u304b\u3058\u3081\u4f7f\u3048\u308b\u8272\u3092\u6c7a\u3081\u308b(\u4eca\u56de\u306f\u57fa\u672c16\u8272\u304b\u3089\u7070\u8272\u7cfb\u3092\u9664\u3044\u305f14\u8272) \n\u5909\u63db\u5143\u3068\u306a\u308b\u753b\u50cf\u3092\uff11\u30c9\u30c3\u30c8\u305a\u3064\u8272\u3092\u8abf\u3079\u308b\n\u4f7f\u3048\u308b\u8272\u306e\u4e2d\u304b\u3089\u4e00\u756a\u8fd1\u3044\u8272\u306b\u5909\u63db\u3059\u308b\n\u5b8c\u6210\uff01\n\n\u3088\u3046\u306f\u753b\u50cf\u3092\u52a3\u5316\u3055\u305b\u3066\u3044\u308b\u3002\n\u8272\u3092\u7d5e\u308c\u3070\u30b0\u30e9\u30c7\u30a3\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u5e73\u5766\u306b\u306a\u3063\u3066\u30a2\u30cb\u30e1\u3063\u307d\u304f\u306a\u308b\u3068\u3044\u3046\u7b97\u6bb5\u3002\n\n\u4e00\u756a\u8fd1\u3044\u8272\u3068\u306f\uff1f\n\u300c\u9650\u308a\u306a\u304f\u9ed2\u306b\u8fd1\u3044\u30b0\u30ec\u30fc\u300d\u3084\u300c\u9650\u308a\u306a\u304f\u900f\u660e\u306b\u8fd1\u3044\u30d6\u30eb\u30fc\u300d\u306a\u3069\u3001\u4e16\u306e\u4e2d\u305f\u304f\u3055\u3093\u306e\u8272\u3067\u6ea2\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u4e2d\u9014\u534a\u7aef\u306a\u8272\u3092\u767d\u9ed2\u306f\u3063\u304d\u308a\u3055\u305b\u3066\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3060\u308d\u3046\u304b\u3002\n\u4eca\u56de\u306fRGB\u7a7a\u9593\u3092\u4f7f\u3046\u3002\n\nR(\u30ec\u30c3\u30c9),G(\u30b0\u30ea\u30fc\u30f3),B(\u30d6\u30eb\u30fc)\u306e\u4e09\u539f\u8272\u306e\u30ec\u30d9\u30eb\u3092X,Y,Z\u5ea7\u6a19\u306b\u7f6e\u304d\u63db\u3048\u3066\u3001\uff13\u6b21\u5143\u7a7a\u9593\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u3067\u8272\u306e\u8fd1\u3055\u3092\u5224\u65ad\u3059\u308b\u3002\u4f8b\u3048\u3070\u8d64\u8272\u306f(255, 0, 0)\u306a\u306e\u3067\u3001X=255,Y=0,Z=0\u306e\u5ea7\u6a19\u306b\u306a\u308b\u3002\n\u4e2d\u5b66\u6821\u3067\u7fd2\u3063\u305f\u5e73\u9762\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u306e\u516c\u5f0f\u306f\u3053\u308c\u3002\u3053\u308c\u306f\u81ea\u5206\u3082\u899a\u3048\u3066\u308b\u3002\n\u5e73\u9762\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2=\u221a((X1-Y1)^2+(X2-Y2)^2)\n\u305f\u3076\u3093\u7fd2\u3063\u305f\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u30b0\u30b0\u308b\u307e\u3067\u5fd8\u308c\u3066\u305f\u4e09\u6b21\u5143\u7a7a\u9593\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u306e\u516c\u5f0f\u306f\u3053\u308c\u3002\n\u4e09\u6b21\u5143\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2=\u221a((X1-X2)^2+(Y1-Y2))^2+(Z1-Z2)^2)\n\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u305f\u4ee3\u8868\u8272\u3068\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u3082\u3063\u3068\u3082\u8ddd\u96e2\u304c\u8fd1\u3044\u4ee3\u8868\u8272\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\u4eca\u56de\u306f\u5b9f\u88c5\u3057\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u300c\u9650\u308a\u306a\u304f\u900f\u660e\u306b\u8fd1\u3044\u30d6\u30eb\u30fc\u300d\u306e\u3088\u3046\u306a\u900f\u660e\u5ea6\u306e\u3042\u308b\u753b\u50cf\u3092\u8003\u616e\u3059\u308b\u306b\u306falpha\u5024\u306e\u5ea7\u6a19\u3092\u52a0\u3048\u3066\u56db\u6b21\u5143\u7a7a\u9593\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u56db\u6b21\u5143\u7a7a\u9593\u306e\u8ddd\u96e2\u30fb\u30fb\u30fb\u306a\u3093\u3060\u304b\u6025\u306b\u30aa\u30ab\u30eb\u30c8\u3063\u307d\u304f\u306a\u3063\u3066\u304d\u305f\u3002\n\n\u30bd\u30fc\u30b9\n\u5177\u4f53\u7684\u306a\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3002\u30b8\u30e3\u30b9\u30c8100\u884c\u3002\u610f\u5916\u3068\u77ed\u3044\u3002\n\nimgTest.go\n\npackage main\nimport (\n    \"fmt\"\n    \"image\"\n    \"image/color\"\n    _ \"image/jpeg\"\n    \"image/png\"\n    \"os\"\n    \"strconv\"\n    \"time\"\n)\nvar COLOR_SET = [...]string{\n    \"000000\", \"FFFFFF\", //\"808080\", \"c0c0c0\",\n    \"800000\", \"FF0000\", \"808000\", \"FFFF00\",\n    \"008000\", \"00FF00\", \"008080\", \"00FFFF\",\n    \"000080\", \"0000FF\", \"800080\", \"FF00FF\",\n}\nfunc main() {\n    path := \"\"\n    start := time.Now()\n    if len(os.Args) >= 2 {\n        path = os.Args[1]\n    } else {\n        fmt.Println(\"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\")\n        return\n    }\n    img := getIMG(path)\n    newImg := convertColor(img)\n    saveImage(newImg)\n    end := time.Now()\n    fmt.Printf(\"complete! (%fs)\\n\", (end.Sub(start)).Seconds())\n}\n//\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\nfunc getIMG(path string) image.Image {\n    file, err := os.Open(path)\n    defer file.Close()\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    img, _, err := image.Decode(file)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    return img\n}\n//\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\nfunc saveImage(img image.Image) {\n    out, err := os.Create(\"output.png\")\n    defer out.Close()\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n    err = png.Encode(out, img)\n    if err != nil {\n        fmt.Println(err)\n        os.Exit(1)\n    }\n}\n//\u753b\u50cf\u3092\u5909\u63db\u3059\u308b\nfunc convertColor(img image.Image) image.Image {\n    rect := img.Bounds()\n    rgba := image.NewRGBA(rect)\n    conv_colors := make([][3]uint8, len(COLOR_SET))\n    for i := 0; i < len(COLOR_SET); i++ {\n        r, _ := (strconv.ParseUint(COLOR_SET[i][0:2], 16, 0))\n        g, _ := (strconv.ParseUint(COLOR_SET[i][2:4], 16, 0))\n        b, _ := (strconv.ParseUint(COLOR_SET[i][4:6], 16, 0))\n        conv_colors[i] = [3]uint8{uint8(r), uint8(g), uint8(b)}\n    }\n    for y := 0; y < rect.Size().Y; y++ {\n        for x := 0; x < rect.Size().X; x++ {\n            r0, g0, b0, _ := img.At(x, y).RGBA()\n            r, g, b := uint8(r0), uint8(g0), uint8(b0)\n            r, g, b = nearColor(r, g, b, conv_colors)\n            rgba.Set(x, y, color.RGBA{r, g, b, 255})\n        }\n    }\n    return rgba\n}\n//\u8fd1\u3044\u8272\u3092\u8fd4\u3059\nfunc nearColor(r0, g0, b0 uint8, conv_colors [][3]uint8) (uint8, uint8, uint8) {\n    sel_r, sel_g, sel_b := uint8(0), uint8(0), uint8(0)\n    sel_d := 999999.0\n    for i := 0; i < len(conv_colors); i++ {\n        rx := conv_colors[i][0]\n        gx := conv_colors[i][1]\n        bx := conv_colors[i][2]\n        rd := (float64(r0) - float64(rx)) * (float64(r0) - float64(rx))\n        gd := (float64(g0) - float64(gx)) * (float64(g0) - float64(gx))\n        bd := (float64(b0) - float64(bx)) * (float64(b0) - float64(bx))\n        d := (rd + gd + bd)\n        if d <= sel_d {\n            sel_r, sel_g, sel_b,sel_d = rx, gx, bx,d\n        }\n    }\n    return sel_r, sel_g, sel_b\n}\n\n\n\nGithub\u306b\u3082\u3042\u3052\u305f\nhttps://github.com/kurehajime/imgTest/tree/qiita\n\n\u5fdc\u7528\n\u304a\u307e\u3051\u3002\n\u8907\u96d1\u306a\u8272\u3092\u5358\u7d14\u306a\u8272\u306b\u5909\u63db\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u3067\u30a2\u30cb\u30e1\u3063\u307d\u304f\u306a\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u305f\u3002\n\u3067\u306f\u9006\u306b\u5358\u7d14\u306a\u8272\u3092\u8907\u96d1\u306a\u8272\u306b\u5909\u63db\u3059\u308b\u3068\u3057\u3066\u307f\u305f\u3089\u3069\u3046\u3060\u308d\u3046\u3002\n\u3064\u307e\u308a\u306f\u3053\u3046\u3002\n\n\u753b\u50cf\u3092\u8907\u6570\u7528\u610f\u3059\u308b(\u5909\u63db\u5143\u753b\u50cf\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf) \n\u3042\u3089\u304b\u3058\u3081\u4f7f\u3048\u308b\u8272\u3092\u6c7a\u3081\u308b(\u4eca\u56de\u306f\u57fa\u672c16\u8272\u304b\u3089\u7070\u8272\u7cfb\u3092\u9664\u3044\u305f14\u8272) \n\u5909\u63db\u5143\u3068\u306a\u308b\u753b\u50cf\u3092\uff11\u30c9\u30c3\u30c8\u305a\u3064\u8272\u3092\u8abf\u3079\u308b\n\u4f7f\u3048\u308b\u8272\u306e\u4e2d\u304b\u3089\u4e00\u756a\u8fd1\u3044\u8272\u306b\u5909\u63db\u3059\u308b\n\u7279\u5b9a\u306e\u8272\u306e\u3042\u308b\u5ea7\u6a19\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u304b\u3089\u8272\u3092\u79fb\u3059\n\n\u3053\u308c\u3092\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n\n\u3053\u3046\u306a\u308b\uff01\u304b\u3063\u3053\u3044\u3044\uff01\uff01\uff01\u30d5\u30a1\u30a4\u30e4\u30fc\u30d0\u30fc\u30c9\uff01\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\nhttps://github.com/kurehajime/imgTest/tree/qiita2\n\n\u300c\u4e09\u6b21\u5143\u306b\u306f\u8208\u5473\u304c\u306a\u3044\u2026\u300d\u3068\u98df\u308f\u305a\u5acc\u3044\u3057\u3066\u8996\u91ce\u3092\u72ed\u3081\u308b\u306e\u3082\u306a\u3093\u306a\u306e\u3067\u3001\u300c\u9cf4\u304b\u306c\u306a\u3089\u9cf4\u304b\u305b\u3066\u898b\u305b\u3088\u3046\u30db\u30c8\u30c8\u30ae\u30b9\u300d\u306e\u7cbe\u795e\u3067 \u5199\u771f\u3092\u30a2\u30cb\u30e1\u3063\u307d\u304f\u5909\u63db\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u307f\u305f\u3002\n\n![conv.png](https://qiita-image-store.s3.amazonaws.com/0/33890/e2fe637b-135b-f2c5-d347-ea6b331542ce.png \"conv.png\")\n\n\n\u4f7f\u3063\u305f\u8a00\u8a9e\u306fGo\u8a00\u8a9e\u3002\u4eca\u56de\u306f\u52c9\u5f37\u304c\u3066\u3089\u6c17\u306e\u5229\u3044\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u308f\u305a\u5730\u9053\u306b\uff11\u30c9\u30c3\u30c8\u305a\u3064\u5909\u63db\u3057\u3066\u308b\u306e\u3067\u3001\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u6d41\u7528\u3059\u308c\u3070\u4ed6\u306e\u8a00\u8a9e\u7248\u3082\u7c21\u5358\u306b\u4f5c\u308c\u308b\u3068\u601d\u3046\u3002\n\n## \u4ed5\u7d44\u307f\n\n\u3053\u3093\u306a\u611f\u3058\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u753b\u50cf\u3092\u5909\u63db\u3057\u3066\u3044\u308b\u3002\n\n1. \u3042\u3089\u304b\u3058\u3081\u4f7f\u3048\u308b\u8272\u3092\u6c7a\u3081\u308b(\u4eca\u56de\u306f\u57fa\u672c16\u8272\u304b\u3089\u7070\u8272\u7cfb\u3092\u9664\u3044\u305f14\u8272) \n2. \u5909\u63db\u5143\u3068\u306a\u308b\u753b\u50cf\u3092\uff11\u30c9\u30c3\u30c8\u305a\u3064\u8272\u3092\u8abf\u3079\u308b\n3. \u4f7f\u3048\u308b\u8272\u306e\u4e2d\u304b\u3089\u4e00\u756a\u8fd1\u3044\u8272\u306b\u5909\u63db\u3059\u308b\n4. \u5b8c\u6210\uff01\n\n\u3088\u3046\u306f\u753b\u50cf\u3092\u52a3\u5316\u3055\u305b\u3066\u3044\u308b\u3002\n\u8272\u3092\u7d5e\u308c\u3070\u30b0\u30e9\u30c7\u30a3\u30a8\u30fc\u30b7\u30e7\u30f3\u304c\u5e73\u5766\u306b\u306a\u3063\u3066\u30a2\u30cb\u30e1\u3063\u307d\u304f\u306a\u308b\u3068\u3044\u3046\u7b97\u6bb5\u3002\n\n### \u4e00\u756a\u8fd1\u3044\u8272\u3068\u306f\uff1f\n\n\u300c\u9650\u308a\u306a\u304f\u9ed2\u306b\u8fd1\u3044\u30b0\u30ec\u30fc\u300d\u3084\u300c\u9650\u308a\u306a\u304f\u900f\u660e\u306b\u8fd1\u3044\u30d6\u30eb\u30fc\u300d\u306a\u3069\u3001\u4e16\u306e\u4e2d\u305f\u304f\u3055\u3093\u306e\u8272\u3067\u6ea2\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u4e2d\u9014\u534a\u7aef\u306a\u8272\u3092\u767d\u9ed2\u306f\u3063\u304d\u308a\u3055\u305b\u3066\u30ab\u30c6\u30b4\u30e9\u30a4\u30ba\u3059\u308b\u306b\u306f\u3069\u3046\u3059\u308c\u3070\u3044\u3044\u3060\u308d\u3046\u304b\u3002\n\n\u4eca\u56de\u306fRGB\u7a7a\u9593\u3092\u4f7f\u3046\u3002\n![rgbCube.gif](https://qiita-image-store.s3.amazonaws.com/0/33890/dfb14882-9639-21bb-c470-5a9d48b9c214.gif \"rgbCube.gif\")\n\nR(\u30ec\u30c3\u30c9),G(\u30b0\u30ea\u30fc\u30f3),B(\u30d6\u30eb\u30fc)\u306e\u4e09\u539f\u8272\u306e\u30ec\u30d9\u30eb\u3092X,Y,Z\u5ea7\u6a19\u306b\u7f6e\u304d\u63db\u3048\u3066\u3001\uff13\u6b21\u5143\u7a7a\u9593\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u3067\u8272\u306e\u8fd1\u3055\u3092\u5224\u65ad\u3059\u308b\u3002\u4f8b\u3048\u3070\u8d64\u8272\u306f(255, 0, 0)\u306a\u306e\u3067\u3001X=255,Y=0,Z=0\u306e\u5ea7\u6a19\u306b\u306a\u308b\u3002\n\n\u4e2d\u5b66\u6821\u3067\u7fd2\u3063\u305f\u5e73\u9762\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u306e\u516c\u5f0f\u306f\u3053\u308c\u3002\u3053\u308c\u306f\u81ea\u5206\u3082\u899a\u3048\u3066\u308b\u3002\n`\u5e73\u9762\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2=\u221a((X1-Y1)^2+(X2-Y2)^2)`\n\n\u305f\u3076\u3093\u7fd2\u3063\u305f\u3068\u601d\u3046\u3093\u3060\u3051\u3069\u30b0\u30b0\u308b\u307e\u3067\u5fd8\u308c\u3066\u305f\u4e09\u6b21\u5143\u7a7a\u9593\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2\u306e\u516c\u5f0f\u306f\u3053\u308c\u3002\n`\u4e09\u6b21\u5143\u4e0a\u306e\u4e8c\u70b9\u9593\u306e\u8ddd\u96e2=\u221a((X1-X2)^2+(Y1-Y2))^2+(Z1-Z2)^2)`\n\n\u3042\u3089\u304b\u3058\u3081\u7528\u610f\u3057\u305f\u4ee3\u8868\u8272\u3068\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u3001\u3082\u3063\u3068\u3082\u8ddd\u96e2\u304c\u8fd1\u3044\u4ee3\u8868\u8272\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\n\u4eca\u56de\u306f\u5b9f\u88c5\u3057\u306a\u304b\u3063\u305f\u3051\u3069\u3001\u300c\u9650\u308a\u306a\u304f\u900f\u660e\u306b\u8fd1\u3044\u30d6\u30eb\u30fc\u300d\u306e\u3088\u3046\u306a\u900f\u660e\u5ea6\u306e\u3042\u308b\u753b\u50cf\u3092\u8003\u616e\u3059\u308b\u306b\u306falpha\u5024\u306e\u5ea7\u6a19\u3092\u52a0\u3048\u3066\u56db\u6b21\u5143\u7a7a\u9593\u306e\u8ddd\u96e2\u3092\u6c42\u3081\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u56db\u6b21\u5143\u7a7a\u9593\u306e\u8ddd\u96e2\u30fb\u30fb\u30fb\u306a\u3093\u3060\u304b\u6025\u306b\u30aa\u30ab\u30eb\u30c8\u3063\u307d\u304f\u306a\u3063\u3066\u304d\u305f\u3002\n\n\n## \u30bd\u30fc\u30b9\n\n\u5177\u4f53\u7684\u306a\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\u3002\u30b8\u30e3\u30b9\u30c8100\u884c\u3002\u610f\u5916\u3068\u77ed\u3044\u3002\n\n```Go:imgTest.go\n\npackage main\nimport (\n\t\"fmt\"\n\t\"image\"\n\t\"image/color\"\n\t_ \"image/jpeg\"\n\t\"image/png\"\n\t\"os\"\n\t\"strconv\"\n\t\"time\"\n)\nvar COLOR_SET = [...]string{\n\t\"000000\", \"FFFFFF\", //\"808080\", \"c0c0c0\",\n\t\"800000\", \"FF0000\", \"808000\", \"FFFF00\",\n\t\"008000\", \"00FF00\", \"008080\", \"00FFFF\",\n\t\"000080\", \"0000FF\", \"800080\", \"FF00FF\",\n}\nfunc main() {\n\tpath := \"\"\n\tstart := time.Now()\n\tif len(os.Args) >= 2 {\n\t\tpath = os.Args[1]\n\t} else {\n\t\tfmt.Println(\"\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\")\n\t\treturn\n\t}\n\timg := getIMG(path)\n\tnewImg := convertColor(img)\n\tsaveImage(newImg)\n\tend := time.Now()\n\tfmt.Printf(\"complete! (%fs)\\n\", (end.Sub(start)).Seconds())\n}\n//\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\nfunc getIMG(path string) image.Image {\n\tfile, err := os.Open(path)\n\tdefer file.Close()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\timg, _, err := image.Decode(file)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\treturn img\n}\n//\u753b\u50cf\u3092\u4fdd\u5b58\u3059\u308b\nfunc saveImage(img image.Image) {\n\tout, err := os.Create(\"output.png\")\n\tdefer out.Close()\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n\terr = png.Encode(out, img)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t\tos.Exit(1)\n\t}\n}\n//\u753b\u50cf\u3092\u5909\u63db\u3059\u308b\nfunc convertColor(img image.Image) image.Image {\n\trect := img.Bounds()\n\trgba := image.NewRGBA(rect)\n\tconv_colors := make([][3]uint8, len(COLOR_SET))\n\tfor i := 0; i < len(COLOR_SET); i++ {\n\t\tr, _ := (strconv.ParseUint(COLOR_SET[i][0:2], 16, 0))\n\t\tg, _ := (strconv.ParseUint(COLOR_SET[i][2:4], 16, 0))\n\t\tb, _ := (strconv.ParseUint(COLOR_SET[i][4:6], 16, 0))\n\t\tconv_colors[i] = [3]uint8{uint8(r), uint8(g), uint8(b)}\n\t}\n\tfor y := 0; y < rect.Size().Y; y++ {\n\t\tfor x := 0; x < rect.Size().X; x++ {\n\t\t\tr0, g0, b0, _ := img.At(x, y).RGBA()\n\t\t\tr, g, b := uint8(r0), uint8(g0), uint8(b0)\n\t\t\tr, g, b = nearColor(r, g, b, conv_colors)\n\t\t\trgba.Set(x, y, color.RGBA{r, g, b, 255})\n\t\t}\n\t}\n\treturn rgba\n}\n//\u8fd1\u3044\u8272\u3092\u8fd4\u3059\nfunc nearColor(r0, g0, b0 uint8, conv_colors [][3]uint8) (uint8, uint8, uint8) {\n\tsel_r, sel_g, sel_b := uint8(0), uint8(0), uint8(0)\n\tsel_d := 999999.0\n\tfor i := 0; i < len(conv_colors); i++ {\n\t\trx := conv_colors[i][0]\n\t\tgx := conv_colors[i][1]\n\t\tbx := conv_colors[i][2]\n\t\trd := (float64(r0) - float64(rx)) * (float64(r0) - float64(rx))\n\t\tgd := (float64(g0) - float64(gx)) * (float64(g0) - float64(gx))\n\t\tbd := (float64(b0) - float64(bx)) * (float64(b0) - float64(bx))\n\t\td := (rd + gd + bd)\n\t\tif d <= sel_d {\n\t\t\tsel_r, sel_g, sel_b,sel_d = rx, gx, bx,d\n\t\t}\n\t}\n\treturn sel_r, sel_g, sel_b\n}\n\u001c\n```\n\nGithub\u306b\u3082\u3042\u3052\u305f\nhttps://github.com/kurehajime/imgTest/tree/qiita\n\n\n## \u5fdc\u7528\n\u304a\u307e\u3051\u3002\n\n`\u8907\u96d1\u306a\u8272\u3092\u5358\u7d14\u306a\u8272\u306b\u5909\u63db\u3059\u308b`\u3068\u3044\u3046\u51e6\u7406\u3067\u30a2\u30cb\u30e1\u3063\u307d\u304f\u306a\u308b\u3053\u3068\u306f\u308f\u304b\u3063\u305f\u3002\n\u3067\u306f\u9006\u306b`\u5358\u7d14\u306a\u8272\u3092\u8907\u96d1\u306a\u8272\u306b\u5909\u63db\u3059\u308b`\u3068\u3057\u3066\u307f\u305f\u3089\u3069\u3046\u3060\u308d\u3046\u3002\n\u3064\u307e\u308a\u306f\u3053\u3046\u3002\n\n1. \u753b\u50cf\u3092\u8907\u6570\u7528\u610f\u3059\u308b(\u5909\u63db\u5143\u753b\u50cf\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf) \n2. \u3042\u3089\u304b\u3058\u3081\u4f7f\u3048\u308b\u8272\u3092\u6c7a\u3081\u308b(\u4eca\u56de\u306f\u57fa\u672c16\u8272\u304b\u3089\u7070\u8272\u7cfb\u3092\u9664\u3044\u305f14\u8272) \n3. \u5909\u63db\u5143\u3068\u306a\u308b\u753b\u50cf\u3092\uff11\u30c9\u30c3\u30c8\u305a\u3064\u8272\u3092\u8abf\u3079\u308b\n4. \u4f7f\u3048\u308b\u8272\u306e\u4e2d\u304b\u3089\u4e00\u756a\u8fd1\u3044\u8272\u306b\u5909\u63db\u3059\u308b\n5. \u7279\u5b9a\u306e\u8272\u306e\u3042\u308b\u5ea7\u6a19\u306b\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u753b\u50cf\u304b\u3089\u8272\u3092\u79fb\u3059\n\n\n\u3053\u308c\u3092\u5b9f\u969b\u306b\u3084\u3063\u3066\u307f\u308b\u3068\u30fb\u30fb\u30fb\n![red.png](https://qiita-image-store.s3.amazonaws.com/0/33890/a5ba159a-da20-b1f2-80d6-8ebf849ebae1.png \"red.png\")\n\n\u3053\u3046\u306a\u308b\uff01\u304b\u3063\u3053\u3044\u3044\uff01\uff01\uff01\u30d5\u30a1\u30a4\u30e4\u30fc\u30d0\u30fc\u30c9\uff01\n![output.png](https://qiita-image-store.s3.amazonaws.com/0/33890/4eb0143f-557f-d62d-0af5-8fab6c7a7714.png \"output.png\")\n\n\n\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089\nhttps://github.com/kurehajime/imgTest/tree/qiita2\n\n\n", "tags": ["Go\u8a00\u8a9e", "\u753b\u50cf", "golang", "Go", "\u753b\u50cf\u51e6\u7406"]}