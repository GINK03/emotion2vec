{"context": "C#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u3066\u601d\u3063\u305f\u3053\u3068\u3084\u624b\u306b\u5165\u308c\u305f\u77e5\u8b58(\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u542b\u3080)\u3092\u307e\u3068\u3081\u3066\u304a\u304f\uff0e\nC#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u4e0a\u3067\u57fa\u672c\u7684\u306a\u77e5\u8b58\u306fEmk\u3055\u3093\u306e\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e C# \uff084.0 \u4ee5\u964d\uff09 \u306e Tips \u8a70\u3081\u5408\u308f\u305b\u304c\u975e\u5e38\u306b\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u3061\u3089\u306e\u8a18\u4e8b\u306b\u306f\u8f09\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u4e2d\u5fc3\u306b\u66f8\u3044\u3066\u3044\u304f\uff0e\n\nC#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u306f\u3058\u3081\u308b\u3079\u304d\u304b\n\u3082\u3057C#\u3067\u3042\u308b\u3053\u3068\u306b\u3053\u3060\u308f\u308a\u304c\u306a\u3044\u306e\u306a\u3089\u3070\uff0cC++\u304bJava\u306b\u3057\u305f\u65b9\u304c\u7121\u96e3\uff0e\u4f7f\u7528\u4eba\u6570\u304c\u6841\u9055\u3044\u3060\u3057\uff0c\u591a\u304f\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u30b8\u30e3\u30c3\u30b8\u3067\u4f7f\u7528\u53ef\u80fd\uff0e\n\n\u5165\u51fa\u529b\n\nCodeforces\u5bfe\u7b56\nCodeforces\u3067C#\u3092\u4f7f\u3046\u969b\u306b\u306f\u6ce8\u610f\u70b9\u304c\u3042\u3063\u3066\uff0cCultureInfo\u304c\u30ed\u30b7\u30a2\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u5c0f\u6570\u70b9\u306e\u70b9\u304c'.'\u3067\u306f\u306a\u304f','\u306b\u306a\u308b\uff0e\u5bfe\u7b56\u3068\u3057\u3066\u306fSystem.Globalization\u540d\u524d\u7a7a\u9593\u306b\u3042\u308bCultureInfo\u30af\u30e9\u30b9\u306b\u3042\u308bInvariantCulture\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3048\u3070\u5927\u4e08\u592b\uff0e\nvar value = Double.Parse(1.0,System.Globalization.CultureInfo.InvariantCulture);\nConsole.WriteLine(value.ToString(System.Globalization.CultureInfo.InvariantCulture));\n\n\n\u6bce\u56de\u3053\u3046\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\uff0c\u5165\u51fa\u529b\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30af\u30e9\u30b9\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\uff0e\u7279\u306b\u51fa\u529b\u306fTextWriter.FormatProvider\u304cInvariantCulture\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\uff0e\u3053\u308c\u306f\u8aad\u53d6\u308a\u5c02\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306a\u306e\u3067StreamWriter\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306eFormatProvider\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3084\u308b\u306e\u304c\u697d\uff0e\n    class Printer : StreamWriter\n    {\n        public override IFormatProvider FormatProvider { get { return CultureInfo.InvariantCulture; } }\n        public Printer(Stream stream) : base(stream, new UTF8Encoding(false, true)) { }\n        public Printer(Stream stream, Encoding encoding) : base(stream, encoding) { }\n    }\n\nConsole.WriteLine\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\u3053\u308c\u3092Console.SetOut(new Printer(Console.OpenStandardOutput()));\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\n\n\u5165\u51fa\u529b\u306e\u9ad8\u901f\u5316\n\u6700\u901f\u3092\u76ee\u6307\u3059\u306a\u3089\u3070DllImport\u3092\u4f7f\u7528\u3057\u3066libc.dll\u306a\u3069\u304b\u3089C\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306e\u304c\u6700\u3082\u901f\u3044\uff0e\n\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u30b8\u30e3\u30c3\u30b8\u306e\u74b0\u5883\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\uff0c\u3069\u306e\u74b0\u5883\u3067\u3082\u4f7f\u3048\u308b\u308f\u3051\u3067\u3082\u306a\u3044\uff0e\n\u305d\u3082\u305d\u3082\u305d\u3053\u307e\u3067\u5165\u51fa\u529b\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u3053\u3068\u306f\u5c11\u306a\u3044\u305f\u3081C#\u306e\u7bc4\u56f2\u5185\u3060\u3051\u3067\u5341\u5206\u4e8b\u8db3\u308a\u308b\u3068\u601d\u3046\uff0e\n\n\u5165\u529b\u306e\u9ad8\u901f\u5316\nint.Parse\u306f\u305d\u3053\u307e\u3067\u9045\u304f\u306a\u3044\u306e\u3067\uff0c\u305d\u308c\u307b\u3069\u5b9f\u884c\u6642\u9593\u304c\u5287\u7684\u306b\u5909\u5316\u3059\u308b\u3053\u3068\u306f\u306a\u3044\uff0e\n\u305d\u308c\u3067\u3082\u9ad8\u901f\u5316\u3092\u72d9\u3046\u306a\u3089\u3070Console.ReadLine\u306a\u3069\u3092\u4f7f\u308f\u305a\uff0c\u81ea\u524d\u306e\u30af\u30e9\u30b9\u306a\u3069\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3068\u30d1\u30fc\u30b9\u3092\u884c\u3046\u306e\u304c\u3088\u3044\uff0e\n\u4ee5\u4e0b\u306f\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u30d9\u30fc\u30b9\u306b\u3061\u3087\u3063\u3068\u3060\u3051\u3044\u3058\u3063\u305f\u3082\u306e\uff0eint[]\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3068\u304b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\uff0c\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u672b\u5c3e\u3092\u8d85\u3048\u3066\u8aad\u307f\u8fbc\u3082\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u4f8b\u5916\u3092\u98db\u3070\u3059\u3088\u3046\u306b\u3057\u3066\u3042\u308b\uff0e\npublic class StreamScanner\n{\n    public StreamScanner(Stream stream) { str = stream; }\n    private readonly Stream str;\n    private readonly byte[] buf = new byte[1024];\n    private int len, ptr;\n    public bool isEof = false;\n    public bool IsEndOfStream { get { return isEof; } }\n    private byte read()\n    {\n        if (isEof) throw new EndOfStreamException();\n        if (ptr >= len) {\n            ptr = 0;\n            if ((len = str.Read(buf, 0, 1024)) <= 0)\n            {\n               isEof = true;\n               return 0;\n            }\n        }\n        return buf[ptr++];\n    }\n    public char Char() \n    {\n        byte b = 0;\n        do b = read();\n        while (b < 33 || 126 < b);\n        return (char)b; \n    }\n    public string Scan()\n    {\n        var sb = new StringBuilder();\n        for (var b = Char(); b >= 33 && b <= 126; b = (char)read())\n            sb.Append(b);\n        return sb.ToString();\n    }\n    public long Long()\n    {\n        long ret = 0; byte b = 0; var ng = false;\n        do b = read();\n        while (b != '-' && (b < '0' || '9' < b));\n        if (b == '-') { ng = true; b = read(); }\n        for (; true; b = read())\n        {\n          if (b < '0' || '9' < b)\n            return ng ? -ret : ret;\n          else ret = ret * 10 + b - '0';\n        }\n    }\n    public int Integer() { return (int)Long(); }\n    public double Double() { return double.Parse(Scan(), CultureInfo.InvariantCulture); }\n}\n\nCodeforces\u3067\u3082\u5c0f\u6570\u70b9\u3092\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u3057\u3066\u3042\u308b\uff0e\n(\u5f8c\u65e5\u624b\u5143\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u8a08\u6e2c\u3092\u884c\u3063\u305f\u7d50\u679c\u3092\u8ffd\u8a18\u3057\u307e\u3059\uff0e)\n\n\u51fa\u529b\u306e\u9ad8\u901f\u5316\nConsole.WriteLine\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u9045\u3044\uff0e\u3053\u308c\u306fAutoFlush\u304ctrue\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u306a\u306e\u3067\uff0cfalse\u306b\u3057\u3066\u3084\u3063\u3066\u6700\u5f8c\u306bFlush\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0eConsole.Out\u306e\u578b\u306fTextWriter\u3067\u3042\u308b\u305f\u3081\uff0cAutoFlush\u306f\u76f4\u63a5\u3044\u3058\u308c\u306a\u3044\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\uff0e\nvar sw = new StreamWriter(Console.OpenStandardOutput()){AutoFlush = false};\nConsole.SetOut(sw);\n/*\u4f55\u3089\u304b\u306e\u51fa\u529b\u51e6\u7406*/\nConsole.Out.Flush();\n\n\u4ed6\u306b\u3082StringBuilder\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u3063\u3066\u6700\u5f8c\u306bConsole.WriteLine(stringBuilder.ToString())\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304c\uff0cMLE\u306e\u5371\u967a\u6027\u3082\u3042\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\uff0e\n$10^5$\u56de\u7a0b\u5ea6\u51fa\u529b\u3059\u308b\u5834\u5408\u306b\u306fAtCoder\u4e0a\u3067\u5927\u4f53500ms\u3050\u3089\u3044\u65e9\u304f\u306a\u308b\u306e\u3067\uff0c\u9593\u9055\u3044\u306a\u304f\u3084\u3063\u305f\u65b9\u304c\u3088\u3044\uff0e(\u5f8c\u65e5\u624b\u5143\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u8a08\u6e2c\u3092\u884c\u3063\u305f\u7d50\u679c\u3082\u8ffd\u8a18\u3057\u307e\u3059\uff0e)\n\n\u6587\u5b57\u5217\u306e\u7d50\u5408\nC#\u3067\u3082Java\u3068\u540c\u69d8\uff0c\u6587\u5b57\u5217\u306e\u7d50\u5408\u306b'+'\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\np_shiki37\u3055\u3093\u306eJava\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e1\u30e2\u306b\u3082\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u5927\u91cf\u306b\u7d50\u5408\u3059\u308b\u5834\u5408\u306b\u306fC#\u3067\u3082\u540c\u69d8\u306bStringBuilder\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\uff0e\n\n\u51fa\u529b\u306e\u6574\u5f62\n\"1 2 3 4 5\"\u306e\u3088\u3046\u306b\u6570\u3092\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u51fa\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306f\u6bd4\u8f03\u7684\u591a\u3044\uff0e\nConsole.Write\u3092\u8907\u6570\u56de\u7e70\u308a\u8fd4\u3057\u3066\u3082\u826f\u3044\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u697d\uff0e\nint[] a = {1,2,3,4,5};\nvar str = string.Join(\" \", a);//\"1 2 3 4 5\";\nConsole.WriteLine(str);\n\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b\u3068\nstatic class Ex\n{\n    static public string AsJoinedString<T>(this IEnumerable<T> ie, string st = \" \") \n    {\n        return string.Join(st, ie);\n    }\n}\nConsole.WriteLine(a.AsJoindString());\n\n\u307f\u305f\u3044\u306b\u66f8\u3051\u3066\u500b\u4eba\u7684\u306b\u306f\u4fbf\u5229(\u3060\u3051\u3069\uff0c\u3042\u307e\u308a\u304a\u3059\u3059\u3081\u306f\u3067\u304d\u306a\u3044)\uff0e\n\u4ed6\u306b\u3082Bayan Bus\u3084\u30dc\u30fc\u30ea\u30f3\u30b0\u30b2\u30fc\u30e0\u306e\u3088\u3046\u306b\nvar a = new char[20];\n/*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\nConsole.WriteLine(\"{0} {1} ,....., {20}\",a);\n\n\u307f\u305f\u3044\u306b\u66f8\u304d\u305f\u3044\u3053\u3068\u304c\u3042\u308b\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u307e\u307e\u3067\u306f\u5b9f\u884c\u6642\u306b\u4f8b\u5916\u3092\u8d77\u3053\u3057\u3066\u3057\u307e\u3046\uff0e\n\u305d\u306e\u7406\u7531\u306fConsole.WriteLine(format, params object[] args)\u306bnew object[]{a}\u3092\u6e21\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\uff0e\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\uff0e\nvar a = new char[20];\n/*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\nConsole.WriteLine(\"{0} {1} ,....., {20}\",a.OfType<object>().ToArray());\n\n\u3053\u3046\u3057\u3066\u3084\u308b\u3068a\u304cchar[]\u304b\u3089object[]\u306b\u306a\u308b\u305f\u3081\uff0c\u60f3\u5b9a\u3057\u305f\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\uff0e\n\u3053\u308c\u3082\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u3063\u307d\u3044\u3051\u3069\u4fbf\u5229\u3067\u306f\u3042\u308b\uff0e\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\nC#\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306fC++,Java\u3068\u6bd4\u3079\u3066\u82e5\u5e72\u8ca7\u5f31\uff0e\n\u306a\u3093\u3068\u3044\u3063\u3066\u3082\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u304c\u306a\u3044\u306e\u304c\u53b3\u3057\u3044\uff0e\n\u4ed6\u306b\u3082\u4e21\u7aef\u30ad\u30e5\u30fc\u3084C++\u3067\u3044\u3046multiset<T>\u3084multimap<K,V>\u304c\u306a\u3044\uff0e\n\nSortedSet<T>\u3092\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u306e\u4ee3\u66ff\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u30c6\u30af\nSortedSet<T>\u306f\u91cd\u8907\u3057\u305f\u5024\u3092\u6301\u3066\u306a\u3044\uff0e\u9006\u306b\u3044\u3046\u3068\u3059\u3079\u3066\u306e\u5024\u304c\u30e6\u30cb\u30fc\u30af\u306a\u3089\u3070\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\uff0e\nKeyValuePair<Key,Value>\u306a\u3069\u3092\u4f7f\u3063\u3066\uff0c\u5024\u3068\u4e00\u610f\u306b\u5b9a\u307e\u308b\u30ad\u30fc\u3092\u6301\u305f\u305b\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3059\u308b\u8981\u7d20\u306f\u591a\u304f\u306e\u5834\u5408$10^5$\u500b\u7a0b\u5ea6\u306a\u306e\u3067\uff0cint\u578b\u306b\u5341\u5206\u53ce\u307e\u308b\u306f\u305a\uff0e\nvar pq = new SortedSet<KeyValuePair<int,long>>((l,r)=>\n{\n    var cmp = l.Value.CompareTo(r.Value);\n    return (cmp!=0)?cmp:l.Key.CompareTo(r.Key);\n})\nint[] a = {4,1,5,3,2};\nfor(int i=0;i<5;i++)\n    pq.Add(new KeyValuePair<int,long>(i,a[i]));\nwhile(pq.Any())\n{\n    var p = pq.Min();\n    pq.Remove(p);\n    /*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\n}\n\nSortedSet<T>\u306f\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u5b9a\u6570\u500d\u304c\u975e\u5e38\u306b\u91cd\u3044\uff0e\n\u4f59\u88d5\u304c\u3042\u308c\u3070\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4e8c\u5206\u30d2\u30fc\u30d7\u306a\u3069\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\uff0e\n\u4ee5\u4e0b\u306b\u4e8c\u5206\u30d2\u30fc\u30d7\u306b\u3088\u308b\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304f(\u87fb\u672c\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u4e8c\u5206\u30d2\u30fc\u30d7\u3092\u30d9\u30fc\u30b9\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\uff0e)\uff0e\nclass PriorityQueue<T>\n{\n    private readonly List<T> heap;\n    private readonly Comparison<T> compare;\n    private int size;\n    public PriorityQueue() : this(Comparer<T>.Default) {} \n    public PriorityQueue(IComparer<T> comparer) : this(16, comparer.Compare) { }\n    public PriorityQueue(Comparison<T> comparison) : this(16, comparison) { }\n    public PriorityQueue(int capacity, Comparison<T> comparison)\n    {\n        this.heap = new List<T>(capacity);\n        this.compare = comparison;\n    }\n    public void Enqueue(T item)\n    {\n        this.heap.Add(item);\n        var i = size++;\n        while (i > 0)\n        {\n            var p = (i - 1) >> 1;\n            if (compare(this.heap[p], item) <= 0)\n                break;\n            this.heap[i] = heap[p];\n            i = p;\n        }\n        this.heap[i] = item;\n\n    }\n    public T Dequeue()\n    {\n        var ret = this.heap[0];\n        var x = this.heap[--size];\n        var i = 0;\n        while ((i << 1) + 1 < size)\n        {\n            var a = (i << 1) + 1;\n            var b = (i << 1) + 2;\n            if (b < size && compare(heap[b], heap[a]) < 0) a = b;\n            if (compare(heap[a], x) >= 0)\n                break;\n            heap[i] = heap[a];\n            i = a;\n        }\n        heap[i] = x;\n        heap.RemoveAt(size);\n        return ret;\n    }\n    public T Peek() { return heap[0]; }\n    public int Count { get { return size; } }\n    public bool Any() { return size > 0; }\n}\n\n\u4f7f\u3044\u65b9\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306eQueue<T>\u3068\u307b\u307c\u540c\u69d8\u306e\u306f\u305a\uff0eSortedSet<T>\u307f\u305f\u3044\u306bIComparer<T>\u3084Comparison<T>\u3068\u304b\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\nLinq\u306f\u975e\u5bfe\u5fdc(\u3051\u3069Linq\u3092\u4f7f\u3044\u305f\u3044\u5834\u9762\u306f\u307e\u305a\u306a\u3044\u306f\u305a)\uff0e\n(\u4e00\u5fdc\u30c6\u30b9\u30c8\u6e08\u307f\u306e\u306f\u305a\u3067\u3059\u304c\uff0c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6307\u6458\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e)\n\nSortedSet<T>\n\nSortedSet\u306fC++\u306eset<T>\u3084Java\u306eTreeSet<T>\u306b\u76f8\u5f53\u3059\u308b\u304c\uff0c\u81f4\u547d\u7684\u306a\u6b20\u70b9\u304c\u3042\u308b\uff0e\nset<T>\u306elower_bound\u3084treeSet<T>\u306elower\u306b\u76f8\u5f53\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3044(SortedSet<T>\u306eGetViewBetween\u306f$O(N)$\u3067\u52d5\u4f5c\u3059\u308b\u305f\u3081\u4f7f\u3044\u3082\u306e\u306b\u306a\u3089\u306a\u3044)\uff0e\n\u3053\u306e\u6a5f\u80fd\u306fsky58\u3055\u3093\u306e\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u305f\u307e\u306b\u4f7f\u308f\u308c\u308b\u540d\u524d\u306e\u4ed8\u3044\u3066\u306a\u3044\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3064\u3044\u3066\u3067\u3082\u89e6\u308c\u3089\u308c\u3066\u304a\u308a\uff0c\u975e\u5e38\u306b\u6709\u7528\u306a\u6a5f\u80fd\u306a\u306e\u3067\uff0c\u3053\u308c\u3092\u884c\u3048\u308b\u3088\u3046\u306a\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u304a\u304f\u306e\u304c\u3088\u3044\uff0e\n\nMultiSet<T>,MultiMap<K,V>\n\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u306e\u3067\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u3092\u5b9f\u88c5\u3057\u3088\u3046\uff0e\n\nDeque<T>\n\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\uff0e\u30b9\u30e9\u30a4\u30c9\u6700\u5c0f\u5024\u3092\u3084\u308b\u3068\u304d\u306b\u4f7f\u3046\uff0e\n\u4ee5\u4e0b\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3092\u304a\u3044\u3066\u304a\u304f\uff0e\nclass Deque<T>\n{\n    T[] buf;\n    int offset, count, capacity;\n    public int Count { get { return count; } }\n    public Deque(int cap) { buf = new T[capacity = cap]; }\n    public Deque() { buf = new T[capacity = 16]; }\n    public T this[int index]\n    {\n        get { return buf[getIndex(index)]; }\n        set { buf[getIndex(index)] = value; }\n    }\n    private int getIndex(int index)\n    {\n        if (index >= capacity)\n            throw new IndexOutOfRangeException(\"out of range\");\n        var ret = index + offset;\n        if (ret >= capacity)\n            ret -= capacity;\n        return ret;\n    }\n    public void PushFront(T item)\n    {\n        if (count == capacity) Extend();\n        if (--offset < 0) offset += buf.Length;\n        buf[offset] = item;\n        ++count;\n    }\n    public T PopFront()\n    {\n        if (count == 0)\n            throw new InvalidOperationException(\"collection is empty\");\n        --count;\n        var ret = buf[offset++];\n        if (offset >= capacity) offset -= capacity;\n        return ret;\n    }\n    public void PushBack(T item)\n    {\n        if (count == capacity) Extend();\n        var id = count++ + offset;\n        if (id >= capacity) id -= capacity;\n        buf[id] = item;\n    }\n    public T PopBack()\n    {\n        if (count == 0)\n            throw new InvalidOperationException(\"collection is empty\");\n        return buf[getIndex(--count)];\n    }\n    public void Insert(int index, T item)\n    {\n        if (index > count) throw new IndexOutOfRangeException();\n        this.PushFront(item);\n        for (int i = 0; i < index; i++)\n            this[i] = this[i + 1];\n        this[index] = item;\n    }\n    public T RemoveAt(int index)\n    {\n        if (index < 0 || index >= count) throw new IndexOutOfRangeException();\n        var ret = this[index];\n        for (int i = index; i > 0; i--)\n            this[i] = this[i - 1];\n        this.PopFront();\n        return ret;\n    }\n    private void Extend()\n    {\n        T[] newBuffer = new T[capacity << 1];\n        if (offset > capacity - count)\n        {\n            var len = buf.Length - offset;\n            Array.Copy(buf, offset, newBuffer, 0, len);\n            Array.Copy(buf, 0, newBuffer, len, count - len);\n        }\n        else Array.Copy(buf, offset, newBuffer, 0, count);\n        buf = newBuffer;\n        offset = 0;\n        capacity <<= 1;\n    }\n    public T[] Items//\u30c7\u30d0\u30c3\u30b0\u6642\u306b\u4e2d\u8eab\u3092\u8abf\u3079\u308b\u305f\u3081\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\n    {\n        get\n        {\n            var a = new T[count];\n            for (int i = 0; i < count; i++)\n                a[i] = this[i];\n            return a;\n        }\n    }\n}\n\n\u57fa\u672c\u7684\u306a\u64cd\u4f5c\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u308b\u306f\u305a\uff0eLinq\u306f\u975e\u5bfe\u5fdc\uff0e\n(\u4e00\u5fdc\u30c6\u30b9\u30c8\u6e08\u307f\u306e\u306f\u305a\u3067\u3059\u304c\uff0c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6307\u6458\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e)\n\nDictionary<K,V>\n\nDictionary<K,V>\u306f\u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u969b\uff0cKeyNotFoundException\u3092\u767a\u751f\u3055\u305b\u308b\uff0e\n\u3053\u308c\u306f\u666e\u901a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u4e0a\u3067\u306f\u5b09\u3057\u3044\u304c\uff0c\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4e2d\u306b\u306f\u975e\u5e38\u306b\u9762\u5012\uff0e\n\u3053\u308c\u3092\u907f\u3051\u308b\u306b\u306fContainsKey(key)\u3092\u4f7f\u3063\u3066\u8abf\u3079\u308c\u3070\u3088\u3044\uff0e\nvar dic = new Dictionary<int,int>();\n\ndic[0] = 1;//ok\ndic[0]++; //ok\ndic[0]+=2;//ok\n\ndic[1]++;dic[1]+=2//throw KeyNotFoundException;\nif(dic.ContainsKey(1))\n    dic[1]++; //ok\nelse dic[1]=1; //ok\n\nvar val = dic[2] //throw KeyNotFoundException;\n\nint x;\nif(dic.TryGetValue(2,out x))\n    Console.WriteLine(x);//ok\n\n\u3057\u304b\u3057\uff0c\u3053\u308c\u306f\u975e\u5e38\u306b\u9762\u5012\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u975e\u5e38\u306b\u4fbf\u5229\uff0e\nclass HashMap<K, V> : Dictionary<K, V>\n{\n    new public V this[K i]\n    {\n        get\n        {\n            V v;\n            return TryGetValue(i, out v) ? v : base[i] = default(V);\n        }\n        set { base[i] = value; }\n    }\n}\n\n\u3053\u308c\u306f\u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306bdefault(V)\u3092\u8fd4\u3059(V\u304c\u69cb\u9020\u4f53\u306a\u3089\u3070new V()\uff0c\u53c2\u7167\u578b\u306a\u3089\u3070null)\uff0e\n\u3053\u308c\u3092\u5c11\u3057\u3044\u3058\u3063\u3066default(V)\u4ee5\u5916\u306e\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3082\u4fbf\u5229\uff0e\n\u4f8b\u3048\u3070\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306e\u578b\u5236\u7d04\u306bwhere V:new()\u3092\u8ffd\u52a0\u3057\u3066\u3084\u308c\u3070default(V)\u306e\u4ee3\u308f\u308a\u306bnew V()\u3068\u304b\u66f8\u3051\u3066HashMap<int,List<int>>\u307f\u305f\u3044\u306a\u306e\u3092\u4f5c\u308b\u3068\u304d\u306b\u4fbf\u5229\uff0e\n\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u306a\u306e\u3067\uff0c\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7528\u4ee5\u5916\u306e\u30b3\u30fc\u30c9\u3067\u4f7f\u3046\u306e\u306f\u3084\u3081\u305f\u307b\u3046\u304c\u3088\u3044\uff0e\n\n\u305d\u306e\u4ed6\u306e\u77e5\u8b58\n\nDP\u3059\u308b\u3068\u304d\u306e\u914d\u5217\u306e\u4f7f\u3044\u56de\u3057\n\n2\u3064\u306e\u914d\u5217\u3092\u4f7f\u3063\u3066Swap\u3057\u306a\u304c\u3089dp\u307f\u305f\u3044\u306a\u306e\u3001C#\u3060\u3068\u3001\nArray.Clear(next, ...) \u3057\u3066 Swap(dp, next) \u3059\u308b\u3088\u308a\u3001\nnext = new[] ... \u3057\u3066dp = next \u306e\u65b9\u304c\u901f\u3044\u306a\u3042\u2014 \u3048\u3044\u305f\u307b (@eitaho) 2015, 1\u6708 30\n\n\n\u524d\u8005\u304cTLE\u3067\u3001\u5f8c\u8005\u306fAC\u3060\u3063\u305f\nhttp://t.co/EqGi7HxUEB\nhttp://t.co/l8x0xw7Sg1\n(diff)http://t.co/dP0av6zJhj\u2014 \u3048\u3044\u305f\u307b (@eitaho) 2015, 1\u6708 30\n\n\u3089\u3057\u3044\uff0e\u7406\u7531\u304c\u5206\u304b\u308b\u4eba\u306b\u89e3\u8aac\u3092\u304a\u9858\u3044\u3057\u305f\u3044\uff0e\n\nEnumerable.OrderBy\u3092\u4f7f\u3046\u969b\u306e\u6ce8\u610f\nLinq\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3060\u304c\uff0cOrderBy\u3092\u4f7f\u3046\u3068\u304d\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\uff0e\n\u6700\u60aa\u30b1\u30fc\u30b9\u3067\u30bd\u30fc\u30c8\u306b$O(N^2)$\u304b\u304b\u308b\u3063\u307d\u3044($10^5$\u8981\u7d20\u306e\u30bd\u30fc\u30c8\u3067TLE\u3057\u305f)\uff0e\n\u5bfe\u7b56\u3068\u3057\u3066\u306fsource.OrderBy(x=>rand.Next()).OrderBy(x=>x)\u306e\u3088\u3046\u306b\u4e00\u5ea6\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b\uff0cArray.Sort\u3092\u4f7f\u7528\u3059\u308b(\u3053\u3061\u3089\u306f\u6700\u60aa\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3082$O(NlogN)$1\u203b\u3053\u308c\u306f.NET4.5\u304b\u3089\u306e\u3088\u3046\u3067\u3059\uff0e\u30b8\u30e3\u30c3\u30b8\u306e\u74b0\u5883\u304c\u5206\u304b\u3089\u306a\u3044\u3068\u304d\u3082\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u305f\u307b\u3046\u304c\u5b89\u5168\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\uff0e\nList<T>\u306eSort\u3082\u6700\u60aa\u30b1\u30fc\u30b9\u3067$O(N^2)$\u3089\u3057\u3044\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u89812(\u5185\u90e8\u7684\u306b\u306fArray.Sort\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067.NET4.5\u3067\u306f$NlogN$\u306e\u306f\u305a...\uff1f)\uff0e\nOrderBy\u306fThenBy\u3068\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u308b\u5229\u70b9\u304c\u3042\u308b\u306e\u3067\u4e00\u6982\u306b\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u306f\u3044\u3048\u306a\u3044\u304c\uff0c\u8981\u7d20\u6570\u304c\u591a\u3044\u3068\u304d\u306fArray.Sort\u3092\u4f7f\u3046\u306e\u304c\u3088\u3044\uff0e\n\n\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3068\u30b8\u30e3\u30c3\u30b8\u74b0\u5883\u3067\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5909\u3048\u308b\nC#\u306f\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\u3088\u308a\u8a73\u7d30\u306b\u3044\u3048\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067Main\u304c\u5b58\u5728\u3059\u308b\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\uff0c\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0eVisualStudio\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3->\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3->\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u304b\u3089\u5909\u66f4\u304c\u884c\u3048\u308b\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3084\u308b\u3053\u3068\u3067\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u5225\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\nsolver.cs\nclass Solver\n{\n    public void Solve()\n    {\n        Console.WriteLine(\"Hello World\");\n    }\n    static void Main()\n    {\n        var solver = new Solver();\n        solver.Solve();\n    }\n}\n\n\n\nlocal.cs\nclass Local\n{\n    static void Main()\n    {\n        var sw = new StopWatch();\n        sw.Start();\n        Console.SetIn(new StreamReader(\"input.in\"));\n        var solver = new Solver();\n        solver.Solve();\n        Console.WriteLine(\"{0}ms\",sw.ElapsedMilliseconds);\n    }\n}\n\n\n\u307f\u305f\u3044\u306b\u3057\u3066\u3084\u308c\u3070\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u6a19\u6e96\u5165\u529b\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u5b9f\u884c\u6642\u9593\u306e\u8a08\u6e2c\u3057\u305f\u308a\u3067\u304d\u308b\uff0e\n\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3067#if Local\u3068\u304b\u3084\u308b\u306e\u306b\u6bd4\u3079\u305f\u3089\u4fbf\u5229\u3060\u3068\u601d\u3046\uff0e\n\u30b3\u30fc\u30c9\u3092\u63d0\u51fa\u3059\u308b\u969b\u306bMain\u304c\uff12\u3064\u3042\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u3051\u3066\u304a\u304f\u3053\u3068\uff0e\n\n\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u7528\u3044\u305f\u518d\u5e30\nFunc\u3084Action\u306a\u3069\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u7528\u3044\u305f\u518d\u5e30\u306e\u8a18\u8ff0\u65b9\u6cd5\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u304c\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\uff0e\nFunc<int,int> fib = i => (i<=1) ? 1 : fib(i-1) + fib(i-2); \n\n\u3053\u308c\u306ffib\u306b\u4ee3\u5165\u3059\u308b\u6642\u70b9\u3067\u306ffib\u304c\u672a\u5b9a\u7fa9\u306e\u5909\u6570\u3067\u3042\u308b\u305f\u3081\uff0e\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\uff0e\nFunc<int,int> fib = null;\nfib = i => (i<=1) ? 1 : fib(i-1) + fib(i-2); \n\n\u3057\u304b\u3057\uff0c\u5b9f\u969b\u306e\u3068\u3053\u308d\npublic int fib(int i)\n{\n    return (i<=1) ? 1 : fib(i-1) + fib(i-2);\n}\n\n\u3068\u66f8\u304b\u306a\u3044\u7406\u7531\u306f\u3042\u307e\u308a\u306a\u3044\uff0e\u3061\u306a\u307f\u306bTopCoder Arena\u3067\u306fAction\u3092\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067Func\u3092\u4f7f\u3063\u3066null\u306a\u3069\u306e\u3069\u3046\u3067\u3082\u3044\u3044\u5024\u3092\u8fd4\u3059\u304b\uff0c\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u304b\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n(\u3061\u306a\u307f\u306b\u3053\u306e\u95a2\u6570fib\u306f\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u30e1\u30e2\u5316\u518d\u5e30\u306b\u3057\u305f\u65b9\u304c\u3088\u3044)\n\n\u304a\u308f\u308a\u306b\n\u5165\u51fa\u529b\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3057\u3066\u3070\u304b\u308a\u66f8\u3044\u305f\u6c17\u3082\u3059\u308b\uff0e\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3051\u308bC#\u4eba\u53e3\u306e\u5897\u52a0\u3084C#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u308b\u4eba\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\uff0e\n\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n\u3042\u3068\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5f37\u5316\u3055\u308c\u3066\u307b\u3057\u3044\uff0e\n\n\n\n\n\nMSDN Array.Sort Method (T[])\u00a0\u21a9\n\n\nMSDN List.Sort Method\u00a0\u21a9\n\n\n\nC#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u3066\u601d\u3063\u305f\u3053\u3068\u3084\u624b\u306b\u5165\u308c\u305f\u77e5\u8b58(\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u542b\u3080)\u3092\u307e\u3068\u3081\u3066\u304a\u304f\uff0e\nC#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3059\u308b\u4e0a\u3067\u57fa\u672c\u7684\u306a\u77e5\u8b58\u306fEmk\u3055\u3093\u306e[\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u305f\u3081\u306e C# \uff084.0 \u4ee5\u964d\uff09 \u306e Tips \u8a70\u3081\u5408\u308f\u305b](http://emkcsharp.hatenablog.com/entry/2013/Advent)\u304c\u975e\u5e38\u306b\u3088\u304f\u307e\u3068\u307e\u3063\u3066\u3044\u308b\u306e\u3067\uff0c\u305d\u3061\u3089\u306e\u8a18\u4e8b\u306b\u306f\u8f09\u3063\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u4e2d\u5fc3\u306b\u66f8\u3044\u3066\u3044\u304f\uff0e\n\n#C#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u306f\u3058\u3081\u308b\u3079\u304d\u304b\n\u3082\u3057C#\u3067\u3042\u308b\u3053\u3068\u306b\u3053\u3060\u308f\u308a\u304c\u306a\u3044\u306e\u306a\u3089\u3070\uff0cC++\u304bJava\u306b\u3057\u305f\u65b9\u304c\u7121\u96e3\uff0e\u4f7f\u7528\u4eba\u6570\u304c\u6841\u9055\u3044\u3060\u3057\uff0c\u591a\u304f\u306e\u30aa\u30f3\u30e9\u30a4\u30f3\u30b8\u30e3\u30c3\u30b8\u3067\u4f7f\u7528\u53ef\u80fd\uff0e\n\n#\u5165\u51fa\u529b\n##Codeforces\u5bfe\u7b56\n[Codeforces](http://codeforces.com/)\u3067C#\u3092\u4f7f\u3046\u969b\u306b\u306f\u6ce8\u610f\u70b9\u304c\u3042\u3063\u3066\uff0cCultureInfo\u304c\u30ed\u30b7\u30a2\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u5c0f\u6570\u70b9\u306e\u70b9\u304c'.'\u3067\u306f\u306a\u304f','\u306b\u306a\u308b\uff0e\u5bfe\u7b56\u3068\u3057\u3066\u306fSystem.Globalization\u540d\u524d\u7a7a\u9593\u306b\u3042\u308b`CultureInfo`\u30af\u30e9\u30b9\u306b\u3042\u308b`InvariantCulture`\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u4f7f\u3048\u3070\u5927\u4e08\u592b\uff0e\n\n```csharp\nvar value = Double.Parse(1.0,System.Globalization.CultureInfo.InvariantCulture);\nConsole.WriteLine(value.ToString(System.Globalization.CultureInfo.InvariantCulture));\n\n```\n\u6bce\u56de\u3053\u3046\u66f8\u304f\u306e\u306f\u3060\u308b\u3044\u306e\u3067\uff0c\u5165\u51fa\u529b\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u30af\u30e9\u30b9\u3084\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\uff0e\u7279\u306b\u51fa\u529b\u306f`TextWriter.FormatProvider`\u304c`InvariantCulture`\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u306e\u304c\u3088\u3044\uff0e\u3053\u308c\u306f\u8aad\u53d6\u308a\u5c02\u7528\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u306a\u306e\u3067`StreamWriter`\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u306e`FormatProvider`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3084\u308b\u306e\u304c\u697d\uff0e\n\n```csharp\n    class Printer : StreamWriter\n    {\n        public override IFormatProvider FormatProvider { get { return CultureInfo.InvariantCulture; } }\n        public Printer(Stream stream) : base(stream, new UTF8Encoding(false, true)) { }\n        public Printer(Stream stream, Encoding encoding) : base(stream, encoding) { }\n    }\n```\n`Console.WriteLine`\u3092\u4f7f\u3044\u305f\u3051\u308c\u3070\u3053\u308c\u3092`Console.SetOut(new Printer(Console.OpenStandardOutput()));`\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\n##\u5165\u51fa\u529b\u306e\u9ad8\u901f\u5316\n\u6700\u901f\u3092\u76ee\u6307\u3059\u306a\u3089\u3070`DllImport`\u3092\u4f7f\u7528\u3057\u3066libc.dll\u306a\u3069\u304b\u3089C\u306e\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u306e\u304c\u6700\u3082\u901f\u3044\uff0e\n\u3057\u304b\u3057\u306a\u304c\u3089\uff0c\u30b8\u30e3\u30c3\u30b8\u306e\u74b0\u5883\u306b\u4f9d\u5b58\u3059\u308b\u306e\u3067\uff0c\u3069\u306e\u74b0\u5883\u3067\u3082\u4f7f\u3048\u308b\u308f\u3051\u3067\u3082\u306a\u3044\uff0e\n\u305d\u3082\u305d\u3082\u305d\u3053\u307e\u3067\u5165\u51fa\u529b\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u3053\u3068\u306f\u5c11\u306a\u3044\u305f\u3081C#\u306e\u7bc4\u56f2\u5185\u3060\u3051\u3067\u5341\u5206\u4e8b\u8db3\u308a\u308b\u3068\u601d\u3046\uff0e\n\n###\u5165\u529b\u306e\u9ad8\u901f\u5316\n`int.Parse`\u306f\u305d\u3053\u307e\u3067\u9045\u304f\u306a\u3044\u306e\u3067\uff0c\u305d\u308c\u307b\u3069\u5b9f\u884c\u6642\u9593\u304c\u5287\u7684\u306b\u5909\u5316\u3059\u308b\u3053\u3068\u306f\u306a\u3044\uff0e\n\u305d\u308c\u3067\u3082\u9ad8\u901f\u5316\u3092\u72d9\u3046\u306a\u3089\u3070`Console.ReadLine`\u306a\u3069\u3092\u4f7f\u308f\u305a\uff0c\u81ea\u524d\u306e\u30af\u30e9\u30b9\u306a\u3069\u3067\u30b9\u30c8\u30ea\u30fc\u30e0\u304b\u3089\u306e\u8aad\u307f\u8fbc\u307f\u3068\u30d1\u30fc\u30b9\u3092\u884c\u3046\u306e\u304c\u3088\u3044\uff0e\n\u4ee5\u4e0b\u306f\u4f7f\u7528\u3057\u3066\u3044\u308b\u3082\u306e\u3092\u30d9\u30fc\u30b9\u306b\u3061\u3087\u3063\u3068\u3060\u3051\u3044\u3058\u3063\u305f\u3082\u306e\uff0e`int[]`\u3068\u3057\u3066\u8aad\u307f\u8fbc\u3093\u3060\u308a\u3068\u304b\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u304b\u3063\u305f\u308a\uff0c\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u672b\u5c3e\u3092\u8d85\u3048\u3066\u8aad\u307f\u8fbc\u3082\u3046\u3068\u3057\u305f\u5834\u5408\u306b\u4f8b\u5916\u3092\u98db\u3070\u3059\u3088\u3046\u306b\u3057\u3066\u3042\u308b\uff0e\n\n```csharp\npublic class StreamScanner\n{\n    public StreamScanner(Stream stream) { str = stream; }\n    private readonly Stream str;\n    private readonly byte[] buf = new byte[1024];\n    private int len, ptr;\n    public bool isEof = false;\n    public bool IsEndOfStream { get { return isEof; } }\n    private byte read()\n    {\n        if (isEof) throw new EndOfStreamException();\n        if (ptr >= len) {\n            ptr = 0;\n            if ((len = str.Read(buf, 0, 1024)) <= 0)\n            {\n               isEof = true;\n               return 0;\n            }\n        }\n        return buf[ptr++];\n    }\n    public char Char() \n    {\n        byte b = 0;\n        do b = read();\n        while (b < 33 || 126 < b);\n        return (char)b; \n    }\n    public string Scan()\n    {\n        var sb = new StringBuilder();\n        for (var b = Char(); b >= 33 && b <= 126; b = (char)read())\n            sb.Append(b);\n        return sb.ToString();\n    }\n    public long Long()\n    {\n        long ret = 0; byte b = 0; var ng = false;\n        do b = read();\n        while (b != '-' && (b < '0' || '9' < b));\n        if (b == '-') { ng = true; b = read(); }\n        for (; true; b = read())\n        {\n          if (b < '0' || '9' < b)\n            return ng ? -ret : ret;\n          else ret = ret * 10 + b - '0';\n        }\n    }\n    public int Integer() { return (int)Long(); }\n    public double Double() { return double.Parse(Scan(), CultureInfo.InvariantCulture); }\n}\n```\nCodeforces\u3067\u3082\u5c0f\u6570\u70b9\u3092\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u3088\u3046\u306b\u3057\u3066\u3042\u308b\uff0e\n(\u5f8c\u65e5\u624b\u5143\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u8a08\u6e2c\u3092\u884c\u3063\u305f\u7d50\u679c\u3092\u8ffd\u8a18\u3057\u307e\u3059\uff0e)\n###\u51fa\u529b\u306e\u9ad8\u901f\u5316\n`Console.WriteLine`\u3092\u305d\u306e\u307e\u307e\u4f7f\u3046\u3068\u9045\u3044\uff0e\u3053\u308c\u306f`AutoFlush`\u304c`true`\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\u306a\u306e\u3067\uff0c`false`\u306b\u3057\u3066\u3084\u3063\u3066\u6700\u5f8c\u306b`Flush`\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0e`Console.Out`\u306e\u578b\u306f`TextWriter`\u3067\u3042\u308b\u305f\u3081\uff0c`AutoFlush`\u306f\u76f4\u63a5\u3044\u3058\u308c\u306a\u3044\u306e\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3059\u308b\uff0e\n\n```csharp\nvar sw = new StreamWriter(Console.OpenStandardOutput()){AutoFlush = false};\nConsole.SetOut(sw);\n/*\u4f55\u3089\u304b\u306e\u51fa\u529b\u51e6\u7406*/\nConsole.Out.Flush();\n```\n\u4ed6\u306b\u3082`StringBuilder`\u306b\u7a81\u3063\u8fbc\u3093\u3067\u3044\u3063\u3066\u6700\u5f8c\u306b`Console.WriteLine(stringBuilder.ToString())`\u3059\u308b\u3068\u3044\u3046\u65b9\u6cd5\u3082\u3042\u308b\u304c\uff0cMLE\u306e\u5371\u967a\u6027\u3082\u3042\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u304d\u306a\u3044\uff0e\n$10^5$\u56de\u7a0b\u5ea6\u51fa\u529b\u3059\u308b\u5834\u5408\u306b\u306fAtCoder\u4e0a\u3067\u5927\u4f53500ms\u3050\u3089\u3044\u65e9\u304f\u306a\u308b\u306e\u3067\uff0c\u9593\u9055\u3044\u306a\u304f\u3084\u3063\u305f\u65b9\u304c\u3088\u3044\uff0e(\u5f8c\u65e5\u624b\u5143\u3067\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u8a08\u6e2c\u3092\u884c\u3063\u305f\u7d50\u679c\u3082\u8ffd\u8a18\u3057\u307e\u3059\uff0e)\n\n##\u6587\u5b57\u5217\u306e\u7d50\u5408\nC#\u3067\u3082Java\u3068\u540c\u69d8\uff0c\u6587\u5b57\u5217\u306e\u7d50\u5408\u306b'+'\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\np_shiki37\u3055\u3093\u306e[Java\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e1\u30e2](http://qiita.com/p_shiki37/items/65c18f88f4d24b2c528b#%E6%96%87%E5%AD%97%E5%88%97%E7%B5%90%E5%90%88)\u306b\u3082\u66f8\u304b\u308c\u3066\u3044\u308b\u304c\u5927\u91cf\u306b\u7d50\u5408\u3059\u308b\u5834\u5408\u306b\u306fC#\u3067\u3082\u540c\u69d8\u306b`StringBuilder`\u3092\u4f7f\u3063\u305f\u65b9\u304c\u3088\u3044\uff0e\n\n##\u51fa\u529b\u306e\u6574\u5f62\n\"1 2 3 4 5\"\u306e\u3088\u3046\u306b\u6570\u3092\u30b9\u30da\u30fc\u30b9\u533a\u5207\u308a\u3067\u51fa\u529b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3053\u3068\u306f\u6bd4\u8f03\u7684\u591a\u3044\uff0e\n`Console.Write`\u3092\u8907\u6570\u56de\u7e70\u308a\u8fd4\u3057\u3066\u3082\u826f\u3044\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u697d\uff0e\n\n```csharp\nint[] a = {1,2,3,4,5};\nvar str = string.Join(\" \", a);//\"1 2 3 4 5\";\nConsole.WriteLine(str);\n```\n\n\u62e1\u5f35\u30e1\u30bd\u30c3\u30c9\u3092\u7528\u3044\u308b\u3068\n\n```csharp\nstatic class Ex\n{\n    static public string AsJoinedString<T>(this IEnumerable<T> ie, string st = \" \") \n    {\n        return string.Join(st, ie);\n    }\n}\nConsole.WriteLine(a.AsJoindString());\n```\n\u307f\u305f\u3044\u306b\u66f8\u3051\u3066\u500b\u4eba\u7684\u306b\u306f\u4fbf\u5229(\u3060\u3051\u3069\uff0c\u3042\u307e\u308a\u304a\u3059\u3059\u3081\u306f\u3067\u304d\u306a\u3044)\uff0e\n\n\n\u4ed6\u306b\u3082[Bayan Bus](http://codeforces.com/problemset/problem/475/A)\u3084[\u30dc\u30fc\u30ea\u30f3\u30b0\u30b2\u30fc\u30e0](http://code-formula-2014-quala.contest.atcoder.jp/tasks/code_formula_2014_qualA_b)\u306e\u3088\u3046\u306b\n\n```csharp\nvar a = new char[20];\n/*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\nConsole.WriteLine(\"{0} {1} ,....., {20}\",a);\n```\n\n\u307f\u305f\u3044\u306b\u66f8\u304d\u305f\u3044\u3053\u3068\u304c\u3042\u308b\uff0e\u3057\u304b\u3057\uff0c\u3053\u306e\u307e\u307e\u3067\u306f\u5b9f\u884c\u6642\u306b\u4f8b\u5916\u3092\u8d77\u3053\u3057\u3066\u3057\u307e\u3046\uff0e\n\u305d\u306e\u7406\u7531\u306f`Console.WriteLine(format, params object[] args)`\u306b`new object[]{a}`\u3092\u6e21\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u72b6\u614b\u306b\u306a\u3063\u3066\u3044\u308b\u305f\u3081\uff0e\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\uff0e\n\n```csharp\nvar a = new char[20];\n/*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\nConsole.WriteLine(\"{0} {1} ,....., {20}\",a.OfType<object>().ToArray());\n```\n\n\u3053\u3046\u3057\u3066\u3084\u308b\u3068a\u304c`char[]`\u304b\u3089`object[]`\u306b\u306a\u308b\u305f\u3081\uff0c\u60f3\u5b9a\u3057\u305f\u3088\u3046\u306b\u52d5\u4f5c\u3059\u308b\uff0e\n\u3053\u308c\u3082\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u3063\u307d\u3044\u3051\u3069\u4fbf\u5229\u3067\u306f\u3042\u308b\uff0e\n\n#\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\nC#\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306fC++,Java\u3068\u6bd4\u3079\u3066\u82e5\u5e72\u8ca7\u5f31\uff0e\n\u306a\u3093\u3068\u3044\u3063\u3066\u3082\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u304c\u306a\u3044\u306e\u304c\u53b3\u3057\u3044\uff0e\n\u4ed6\u306b\u3082\u4e21\u7aef\u30ad\u30e5\u30fc\u3084C++\u3067\u3044\u3046`multiset<T>`\u3084`multimap<K,V>`\u304c\u306a\u3044\uff0e\n\n##`SortedSet<T>`\u3092\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u306e\u4ee3\u66ff\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\u30c6\u30af\n`SortedSet<T>`\u306f\u91cd\u8907\u3057\u305f\u5024\u3092\u6301\u3066\u306a\u3044\uff0e\u9006\u306b\u3044\u3046\u3068\u3059\u3079\u3066\u306e\u5024\u304c\u30e6\u30cb\u30fc\u30af\u306a\u3089\u3070\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u3068\u3057\u3066\u4f7f\u3048\u308b\uff0e\n`KeyValuePair<Key,Value>`\u306a\u3069\u3092\u4f7f\u3063\u3066\uff0c\u5024\u3068\u4e00\u610f\u306b\u5b9a\u307e\u308b\u30ad\u30fc\u3092\u6301\u305f\u305b\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\n\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30b3\u30f3\u30c6\u30b9\u30c8\u3067\u4f7f\u7528\u3059\u308b\u8981\u7d20\u306f\u591a\u304f\u306e\u5834\u5408$10^5$\u500b\u7a0b\u5ea6\u306a\u306e\u3067\uff0c`int`\u578b\u306b\u5341\u5206\u53ce\u307e\u308b\u306f\u305a\uff0e\n\n```csharp\nvar pq = new SortedSet<KeyValuePair<int,long>>((l,r)=>\n{\n    var cmp = l.Value.CompareTo(r.Value);\n    return (cmp!=0)?cmp:l.Key.CompareTo(r.Key);\n})\nint[] a = {4,1,5,3,2};\nfor(int i=0;i<5;i++)\n    pq.Add(new KeyValuePair<int,long>(i,a[i]));\nwhile(pq.Any())\n{\n    var p = pq.Min();\n    pq.Remove(p);\n    /*\u4f55\u3089\u304b\u306e\u51e6\u7406*/\n}\n```\n\n`SortedSet<T>`\u306f\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u306b\u3088\u3063\u3066\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u305f\u3081\uff0c\u5b9a\u6570\u500d\u304c\u975e\u5e38\u306b\u91cd\u3044\uff0e\n\u4f59\u88d5\u304c\u3042\u308c\u3070\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4e8c\u5206\u30d2\u30fc\u30d7\u306a\u3069\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u305f\u65b9\u304c\u3088\u3044\uff0e\n\u4ee5\u4e0b\u306b\u4e8c\u5206\u30d2\u30fc\u30d7\u306b\u3088\u308b\u512a\u5148\u5ea6\u4ed8\u30ad\u30e5\u30fc\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u7f6e\u3044\u3066\u304a\u304f(\u87fb\u672c\u306b\u66f8\u3044\u3066\u3042\u3063\u305f\u4e8c\u5206\u30d2\u30fc\u30d7\u3092\u30d9\u30fc\u30b9\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\uff0e)\uff0e\n\n```csharp\nclass PriorityQueue<T>\n{\n    private readonly List<T> heap;\n    private readonly Comparison<T> compare;\n    private int size;\n    public PriorityQueue() : this(Comparer<T>.Default) {} \n    public PriorityQueue(IComparer<T> comparer) : this(16, comparer.Compare) { }\n    public PriorityQueue(Comparison<T> comparison) : this(16, comparison) { }\n    public PriorityQueue(int capacity, Comparison<T> comparison)\n    {\n        this.heap = new List<T>(capacity);\n        this.compare = comparison;\n    }\n    public void Enqueue(T item)\n    {\n        this.heap.Add(item);\n        var i = size++;\n        while (i > 0)\n        {\n            var p = (i - 1) >> 1;\n            if (compare(this.heap[p], item) <= 0)\n                break;\n            this.heap[i] = heap[p];\n            i = p;\n        }\n        this.heap[i] = item;\n\n    }\n    public T Dequeue()\n    {\n        var ret = this.heap[0];\n        var x = this.heap[--size];\n        var i = 0;\n        while ((i << 1) + 1 < size)\n        {\n            var a = (i << 1) + 1;\n            var b = (i << 1) + 2;\n            if (b < size && compare(heap[b], heap[a]) < 0) a = b;\n            if (compare(heap[a], x) >= 0)\n                break;\n            heap[i] = heap[a];\n            i = a;\n        }\n        heap[i] = x;\n        heap.RemoveAt(size);\n        return ret;\n    }\n    public T Peek() { return heap[0]; }\n    public int Count { get { return size; } }\n    public bool Any() { return size > 0; }\n}\n```\n\u4f7f\u3044\u65b9\u306f\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e`Queue<T>`\u3068\u307b\u307c\u540c\u69d8\u306e\u306f\u305a\uff0e`SortedSet<T>`\u307f\u305f\u3044\u306b`IComparer<T>`\u3084`Comparison<T>`\u3068\u304b\u3092\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0e\nLinq\u306f\u975e\u5bfe\u5fdc(\u3051\u3069Linq\u3092\u4f7f\u3044\u305f\u3044\u5834\u9762\u306f\u307e\u305a\u306a\u3044\u306f\u305a)\uff0e\n(\u4e00\u5fdc\u30c6\u30b9\u30c8\u6e08\u307f\u306e\u306f\u305a\u3067\u3059\u304c\uff0c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6307\u6458\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e)\n\n\n##`SortedSet<T>`\nSortedSet<T>\u306fC++\u306e`set<T>`\u3084Java\u306e`TreeSet<T>`\u306b\u76f8\u5f53\u3059\u308b\u304c\uff0c\u81f4\u547d\u7684\u306a\u6b20\u70b9\u304c\u3042\u308b\uff0e\n`set<T>`\u306e`lower_bound`\u3084`treeSet<T>`\u306e`lower`\u306b\u76f8\u5f53\u3059\u308b\u6a5f\u80fd\u304c\u306a\u3044(`SortedSet<T>`\u306e`GetViewBetween`\u306f$O(N)$\u3067\u52d5\u4f5c\u3059\u308b\u305f\u3081\u4f7f\u3044\u3082\u306e\u306b\u306a\u3089\u306a\u3044)\uff0e\n\u3053\u306e\u6a5f\u80fd\u306fsky58\u3055\u3093\u306e[\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3067\u305f\u307e\u306b\u4f7f\u308f\u308c\u308b\u540d\u524d\u306e\u4ed8\u3044\u3066\u306a\u3044\u30c6\u30af\u30cb\u30c3\u30af\u306b\u3064\u3044\u3066](http://topcoder.g.hatena.ne.jp/skyaozora/20141216)\u3067\u3082\u89e6\u308c\u3089\u308c\u3066\u304a\u308a\uff0c\u975e\u5e38\u306b\u6709\u7528\u306a\u6a5f\u80fd\u306a\u306e\u3067\uff0c\u3053\u308c\u3092\u884c\u3048\u308b\u3088\u3046\u306a\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u3063\u3066\u304a\u304f\u306e\u304c\u3088\u3044\uff0e\n\n##`MultiSet<T>,MultiMap<K,V>`\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\u306e\u3067\u5e73\u8861\u4e8c\u5206\u63a2\u7d22\u6728\u3092\u5b9f\u88c5\u3057\u3088\u3046\uff0e\n\n##`Deque<T>`\n\u305d\u3093\u306a\u3082\u306e\u306f\u306a\u3044\uff0e\u30b9\u30e9\u30a4\u30c9\u6700\u5c0f\u5024\u3092\u3084\u308b\u3068\u304d\u306b\u4f7f\u3046\uff0e\n\u4ee5\u4e0b\u306b\u5b9f\u88c5\u3057\u305f\u3082\u306e\u3092\u304a\u3044\u3066\u304a\u304f\uff0e\n\n```csharp\nclass Deque<T>\n{\n    T[] buf;\n    int offset, count, capacity;\n    public int Count { get { return count; } }\n    public Deque(int cap) { buf = new T[capacity = cap]; }\n    public Deque() { buf = new T[capacity = 16]; }\n    public T this[int index]\n    {\n        get { return buf[getIndex(index)]; }\n        set { buf[getIndex(index)] = value; }\n    }\n    private int getIndex(int index)\n    {\n        if (index >= capacity)\n            throw new IndexOutOfRangeException(\"out of range\");\n        var ret = index + offset;\n        if (ret >= capacity)\n            ret -= capacity;\n        return ret;\n    }\n    public void PushFront(T item)\n    {\n        if (count == capacity) Extend();\n        if (--offset < 0) offset += buf.Length;\n        buf[offset] = item;\n        ++count;\n    }\n    public T PopFront()\n    {\n        if (count == 0)\n            throw new InvalidOperationException(\"collection is empty\");\n        --count;\n        var ret = buf[offset++];\n        if (offset >= capacity) offset -= capacity;\n        return ret;\n    }\n    public void PushBack(T item)\n    {\n        if (count == capacity) Extend();\n        var id = count++ + offset;\n        if (id >= capacity) id -= capacity;\n        buf[id] = item;\n    }\n    public T PopBack()\n    {\n        if (count == 0)\n            throw new InvalidOperationException(\"collection is empty\");\n        return buf[getIndex(--count)];\n    }\n    public void Insert(int index, T item)\n    {\n        if (index > count) throw new IndexOutOfRangeException();\n        this.PushFront(item);\n        for (int i = 0; i < index; i++)\n            this[i] = this[i + 1];\n        this[index] = item;\n    }\n    public T RemoveAt(int index)\n    {\n        if (index < 0 || index >= count) throw new IndexOutOfRangeException();\n        var ret = this[index];\n        for (int i = index; i > 0; i--)\n            this[i] = this[i - 1];\n        this.PopFront();\n        return ret;\n    }\n    private void Extend()\n    {\n        T[] newBuffer = new T[capacity << 1];\n        if (offset > capacity - count)\n        {\n            var len = buf.Length - offset;\n            Array.Copy(buf, offset, newBuffer, 0, len);\n            Array.Copy(buf, 0, newBuffer, len, count - len);\n        }\n        else Array.Copy(buf, offset, newBuffer, 0, count);\n        buf = newBuffer;\n        offset = 0;\n        capacity <<= 1;\n    }\n    public T[] Items//\u30c7\u30d0\u30c3\u30b0\u6642\u306b\u4e2d\u8eab\u3092\u8abf\u3079\u308b\u305f\u3081\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\n    {\n        get\n        {\n            var a = new T[count];\n            for (int i = 0; i < count; i++)\n                a[i] = this[i];\n            return a;\n        }\n    }\n}\n```\n\u57fa\u672c\u7684\u306a\u64cd\u4f5c\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u308b\u306f\u305a\uff0eLinq\u306f\u975e\u5bfe\u5fdc\uff0e\n(\u4e00\u5fdc\u30c6\u30b9\u30c8\u6e08\u307f\u306e\u306f\u305a\u3067\u3059\u304c\uff0c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u6307\u6458\u9802\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\uff0e)\n\n##`Dictionary<K,V>`\n`Dictionary<K,V>`\u306f\u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u969b\uff0c`KeyNotFoundException`\u3092\u767a\u751f\u3055\u305b\u308b\uff0e\n\u3053\u308c\u306f\u666e\u901a\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u3044\u308b\u4e0a\u3067\u306f\u5b09\u3057\u3044\u304c\uff0c\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u4e2d\u306b\u306f\u975e\u5e38\u306b\u9762\u5012\uff0e\n\u3053\u308c\u3092\u907f\u3051\u308b\u306b\u306f`ContainsKey(key)`\u3092\u4f7f\u3063\u3066\u8abf\u3079\u308c\u3070\u3088\u3044\uff0e\n\n```csharp\nvar dic = new Dictionary<int,int>();\n\ndic[0] = 1;//ok\ndic[0]++; //ok\ndic[0]+=2;//ok\n\ndic[1]++;dic[1]+=2//throw KeyNotFoundException;\nif(dic.ContainsKey(1))\n    dic[1]++; //ok\nelse dic[1]=1; //ok\n\nvar val = dic[2] //throw KeyNotFoundException;\n\nint x;\nif(dic.TryGetValue(2,out x))\n    Console.WriteLine(x);//ok\n```\n\u3057\u304b\u3057\uff0c\u3053\u308c\u306f\u975e\u5e38\u306b\u9762\u5012\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u3092\u4f5c\u308b\u3068\u975e\u5e38\u306b\u4fbf\u5229\uff0e\n\n```csharp\nclass HashMap<K, V> : Dictionary<K, V>\n{\n    new public V this[K i]\n    {\n        get\n        {\n            V v;\n            return TryGetValue(i, out v) ? v : base[i] = default(V);\n        }\n        set { base[i] = value; }\n    }\n}\n```\n\u3053\u308c\u306f\u5b58\u5728\u3057\u306a\u3044\u30ad\u30fc\u306b\u30a2\u30af\u30bb\u30b9\u3057\u305f\u5834\u5408\u306b`default(V)`\u3092\u8fd4\u3059(V\u304c\u69cb\u9020\u4f53\u306a\u3089\u3070`new V()`\uff0c\u53c2\u7167\u578b\u306a\u3089\u3070`null`)\uff0e\n\u3053\u308c\u3092\u5c11\u3057\u3044\u3058\u3063\u3066`default(V)`\u4ee5\u5916\u306e\u5024\u3092\u8fd4\u3059\u3088\u3046\u306b\u3057\u3066\u3082\u4fbf\u5229\uff0e\n\u4f8b\u3048\u3070\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u306e\u578b\u5236\u7d04\u306b`where V:new()`\u3092\u8ffd\u52a0\u3057\u3066\u3084\u308c\u3070`default(V)`\u306e\u4ee3\u308f\u308a\u306b`new V()`\u3068\u304b\u66f8\u3051\u3066`HashMap<int,List<int>>`\u307f\u305f\u3044\u306a\u306e\u3092\u4f5c\u308b\u3068\u304d\u306b\u4fbf\u5229\uff0e\n\u30d0\u30c3\u30c9\u30ce\u30a6\u30cf\u30a6\u306a\u306e\u3067\uff0c\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u7528\u4ee5\u5916\u306e\u30b3\u30fc\u30c9\u3067\u4f7f\u3046\u306e\u306f\u3084\u3081\u305f\u307b\u3046\u304c\u3088\u3044\uff0e\n\n#\u305d\u306e\u4ed6\u306e\u77e5\u8b58\n##DP\u3059\u308b\u3068\u304d\u306e\u914d\u5217\u306e\u4f7f\u3044\u56de\u3057\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>2\u3064\u306e\u914d\u5217\u3092\u4f7f\u3063\u3066Swap\u3057\u306a\u304c\u3089dp\u307f\u305f\u3044\u306a\u306e\u3001C#\u3060\u3068\u3001&#10;Array.Clear(next, ...) \u3057\u3066 Swap(dp, next) \u3059\u308b\u3088\u308a\u3001&#10;next = new[] ... \u3057\u3066dp = next \u306e\u65b9\u304c\u901f\u3044\u306a\u3042</p>&mdash; \u3048\u3044\u305f\u307b (@eitaho) <a href=\"https://twitter.com/eitaho/status/561150668832915456\">2015, 1\u6708 30</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>\u524d\u8005\u304cTLE\u3067\u3001\u5f8c\u8005\u306fAC\u3060\u3063\u305f&#10;<a href=\"http://t.co/EqGi7HxUEB\">http://t.co/EqGi7HxUEB</a>&#10;<a href=\"http://t.co/l8x0xw7Sg1\">http://t.co/l8x0xw7Sg1</a>&#10;(diff)<a href=\"http://t.co/dP0av6zJhj\">http://t.co/dP0av6zJhj</a></p>&mdash; \u3048\u3044\u305f\u307b (@eitaho) <a href=\"https://twitter.com/eitaho/status/561150867194142722\">2015, 1\u6708 30</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\u3089\u3057\u3044\uff0e\u7406\u7531\u304c\u5206\u304b\u308b\u4eba\u306b\u89e3\u8aac\u3092\u304a\u9858\u3044\u3057\u305f\u3044\uff0e\n\n##`Enumerable.OrderBy`\u3092\u4f7f\u3046\u969b\u306e\u6ce8\u610f\nLinq\u306f\u975e\u5e38\u306b\u4fbf\u5229\u3060\u304c\uff0c`OrderBy`\u3092\u4f7f\u3046\u3068\u304d\u306b\u306f\u6ce8\u610f\u304c\u5fc5\u8981\uff0e\n\u6700\u60aa\u30b1\u30fc\u30b9\u3067\u30bd\u30fc\u30c8\u306b$O(N^2)$\u304b\u304b\u308b\u3063\u307d\u3044($10^5$\u8981\u7d20\u306e\u30bd\u30fc\u30c8\u3067TLE\u3057\u305f)\uff0e\n\u5bfe\u7b56\u3068\u3057\u3066\u306f`source.OrderBy(x=>rand.Next()).OrderBy(x=>x)`\u306e\u3088\u3046\u306b\u4e00\u5ea6\u30b7\u30e3\u30c3\u30d5\u30eb\u3059\u308b\u304b\uff0c`Array.Sort`\u3092\u4f7f\u7528\u3059\u308b(\u3053\u3061\u3089\u306f\u6700\u60aa\u30b1\u30fc\u30b9\u306b\u304a\u3044\u3066\u3082$O(NlogN)$[^1]\u203b\u3053\u308c\u306f.NET4.5\u304b\u3089\u306e\u3088\u3046\u3067\u3059\uff0e\u30b8\u30e3\u30c3\u30b8\u306e\u74b0\u5883\u304c\u5206\u304b\u3089\u306a\u3044\u3068\u304d\u3082\u30b7\u30e3\u30c3\u30d5\u30eb\u3057\u305f\u307b\u3046\u304c\u5b89\u5168\u304b\u3082\u3057\u308c\u307e\u305b\u3093)\uff0e\n`List<T>`\u306e`Sort`\u3082\u6700\u60aa\u30b1\u30fc\u30b9\u3067$O(N^2)$\u3089\u3057\u3044\u3068\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981[^2](\u5185\u90e8\u7684\u306b\u306f`Array.Sort`\u3057\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u3067.NET4.5\u3067\u306f$NlogN$\u306e\u306f\u305a...\uff1f)\uff0e\n`OrderBy`\u306f`ThenBy`\u3068\u7d44\u307f\u5408\u308f\u305b\u3089\u308c\u308b\u5229\u70b9\u304c\u3042\u308b\u306e\u3067\u4e00\u6982\u306b\u4f7f\u3046\u3079\u304d\u3067\u306f\u306a\u3044\u3068\u306f\u3044\u3048\u306a\u3044\u304c\uff0c\u8981\u7d20\u6570\u304c\u591a\u3044\u3068\u304d\u306f`Array.Sort`\u3092\u4f7f\u3046\u306e\u304c\u3088\u3044\uff0e\n\n##\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3068\u30b8\u30e3\u30c3\u30b8\u74b0\u5883\u3067\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5909\u3048\u308b\nC#\u306f\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u9078\u3076\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\uff0c\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u3068\u3044\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\u3088\u308a\u8a73\u7d30\u306b\u3044\u3048\u3070\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3\u3067`Main`\u304c\u5b58\u5728\u3059\u308b\u30af\u30e9\u30b9\u3067\u3042\u3063\u3066\uff0c\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u4f7f\u3044\u305f\u3044\u30af\u30e9\u30b9\u3092\u6307\u5b9a\u3057\u3066\u3084\u308c\u3070\u3088\u3044\uff0eVisualStudio\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d7\u30ed\u30d1\u30c6\u30a3->\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3->\u30b9\u30bf\u30fc\u30c8\u30a2\u30c3\u30d7\u304b\u3089\u5909\u66f4\u304c\u884c\u3048\u308b\uff0e\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3084\u308b\u3053\u3068\u3067\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u5225\u306e\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\n```csharp:solver.cs\nclass Solver\n{\n    public void Solve()\n    {\n        Console.WriteLine(\"Hello World\");\n    }\n    static void Main()\n    {\n        var solver = new Solver();\n        solver.Solve();\n    }\n}\n```\n\n```csharp:local.cs\nclass Local\n{\n    static void Main()\n    {\n        var sw = new StopWatch();\n        sw.Start();\n        Console.SetIn(new StreamReader(\"input.in\"));\n        var solver = new Solver();\n        solver.Solve();\n        Console.WriteLine(\"{0}ms\",sw.ElapsedMilliseconds);\n    }\n}\n```\n\u307f\u305f\u3044\u306b\u3057\u3066\u3084\u308c\u3070\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\u3067\u306e\u307f\u6a19\u6e96\u5165\u529b\u3092\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3093\u3060\u308a\u5b9f\u884c\u6642\u9593\u306e\u8a08\u6e2c\u3057\u305f\u308a\u3067\u304d\u308b\uff0e\n\u30d7\u30ea\u30d7\u30ed\u30bb\u30c3\u30b5\u3067`#if Local`\u3068\u304b\u3084\u308b\u306e\u306b\u6bd4\u3079\u305f\u3089\u4fbf\u5229\u3060\u3068\u601d\u3046\uff0e\n\u30b3\u30fc\u30c9\u3092\u63d0\u51fa\u3059\u308b\u969b\u306b`Main`\u304c\uff12\u3064\u3042\u308b\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067\u5225\u30d5\u30a1\u30a4\u30eb\u306b\u5206\u3051\u3066\u304a\u304f\u3053\u3068\uff0e\n\n##\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u7528\u3044\u305f\u518d\u5e30\n`Func`\u3084`Action`\u306a\u3069\u306e\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30c7\u30ea\u30b2\u30fc\u30c8\u3092\u7528\u3044\u305f\u518d\u5e30\u306e\u8a18\u8ff0\u65b9\u6cd5\uff0e\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u304c\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u304c\u8d77\u3053\u308b\uff0e\n\n```csharp\nFunc<int,int> fib = i => (i<=1) ? 1 : fib(i-1) + fib(i-2); \n```\n\u3053\u308c\u306f`fib`\u306b\u4ee3\u5165\u3059\u308b\u6642\u70b9\u3067\u306f`fib`\u304c\u672a\u5b9a\u7fa9\u306e\u5909\u6570\u3067\u3042\u308b\u305f\u3081\uff0e\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u3088\u3044\uff0e\n\n```csharp\nFunc<int,int> fib = null;\nfib = i => (i<=1) ? 1 : fib(i-1) + fib(i-2); \n```\n\n\u3057\u304b\u3057\uff0c\u5b9f\u969b\u306e\u3068\u3053\u308d\n\n```csharp\npublic int fib(int i)\n{\n    return (i<=1) ? 1 : fib(i-1) + fib(i-2);\n}\n```\n\u3068\u66f8\u304b\u306a\u3044\u7406\u7531\u306f\u3042\u307e\u308a\u306a\u3044\uff0e\u3061\u306a\u307f\u306bTopCoder Arena\u3067\u306f`Action`\u3092\u4f7f\u3046\u3068\u30b3\u30f3\u30d1\u30a4\u30eb\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067`Func`\u3092\u4f7f\u3063\u3066`null`\u306a\u3069\u306e\u3069\u3046\u3067\u3082\u3044\u3044\u5024\u3092\u8fd4\u3059\u304b\uff0c\u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9f\u88c5\u3059\u308b\u304b\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\uff0e\n(\u3061\u306a\u307f\u306b\u3053\u306e\u95a2\u6570`fib`\u306f\u5f53\u7136\u306e\u3053\u3068\u306a\u304c\u3089\u30e1\u30e2\u5316\u518d\u5e30\u306b\u3057\u305f\u65b9\u304c\u3088\u3044)\n\n#\u304a\u308f\u308a\u306b\n\u5165\u51fa\u529b\u3068\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3057\u3066\u3070\u304b\u308a\u66f8\u3044\u305f\u6c17\u3082\u3059\u308b\uff0e\n\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u304a\u3051\u308bC#\u4eba\u53e3\u306e\u5897\u52a0\u3084C#\u3067\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3092\u3057\u3066\u3044\u308b\u4eba\u306e\u52a9\u3051\u306b\u306a\u308c\u3070\u5b09\u3057\u3044\u3067\u3059\uff0e\n\u9593\u9055\u3063\u3066\u3044\u308b\u3068\u3053\u308d\u306f\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u3044\u3046\u3068\u3053\u308d\u304c\u3042\u308c\u3070\u6307\u6458\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\uff0e\n**\u3042\u3068\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u5f37\u5316\u3055\u308c\u3066\u307b\u3057\u3044\uff0e**\n\n-----\n[^1]: [MSDN Array.Sort<T> Method (T[])](https://msdn.microsoft.com/ja-jp/library/kwx6zbd4%28v=vs.110%29.aspx)\n[^2]: [MSDN List<T>.Sort Method](https://msdn.microsoft.com/ja-jp/library/b0zbh7b6%28v=vs.110%29.aspx)\n", "tags": ["C#", "\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}