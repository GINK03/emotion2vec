{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\nopencv\u3063\u3066\u306a\u3093\u305e\u3084\nOpen Source Computer Vision Library\u306e\u7565\n\u30a4\u30f3\u30c6\u30eb\u304c\u958b\u767a\u30fb\u516c\u958b\u3057\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u5411\u3051\u30e9\u30a4\u30d6\u30e9\u30ea\n\u516c\u5f0f\u306e\u30b5\u30dd\u30fc\u30c8\u8a00\u8a9e\uff1aC\u3001C++\u3001Python\u3001Java\n*\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d3\u30b8\u30e7\u30f3\uff1a\u753b\u50cf\u30fb\u6620\u50cf\u3092\u5206\u6790\u3059\u308b\u5206\u91ce\n\nopencv\u3067\u89e3\u6790\u3067\u304d\u308b\u3053\u3068\n\u30fb\u884c\u5217\u6f14\u7b97\n\u30fb\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u691c\u51fa\n\u30fb\u7279\u5fb4\u70b9\u62bd\u51fa\n\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\n\u30fb\u30ab\u30e1\u30e9\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\n\u30fb\u6a5f\u68b0\u5b66\u7fd2\n\u30fb\u30d1\u30ce\u30e9\u30de\u5408\u6210\n\u30fbGUI\uff08\u30a6\u30a3\u30f3\u30c9\u30a6\u8868\u793a\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3001\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u5165\u51fa\u529b\u3001\u30ab\u30e1\u30e9\u30ad\u30e3\u30d7\u30c1\u30e3\uff09\n\n\u8a66\u3057\u306b\u9854\u8a8d\u8b58\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u4e0b\u6e96\u5099\nbrew search opencv\nbrew tap homebrew/science\nbrew info opencv\nbrew install opencv\ngem install ruby-opencv\n\n\n\u30b3\u30fc\u30c9\n\nface_tracking.rb\nrequire 'opencv'\n\nwindow = OpenCV::GUI::Window.new \"face detect\"\ncapture = OpenCV::CvCapture.open\ndetector = OpenCV::CvHaarClassifierCascade::load \"/usr/local/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml\"\n\nloop do\n  image = capture.query\n  image = image.resize OpenCV::CvSize.new 640, 360\n  detector.detect_objects(image).each do |rect|\n    puts \"detect!! : #{rect.top_left}, #{rect.top_right}, #{rect.bottom_left}, #{rect.bottom_right}\"\n    image.rectangle! rect.top_left, rect.bottom_right, :color => OpenCV::CvColor::Red\n  end\n  window.show image\n  break if OpenCV::GUI::wait_key(100)\nend\n\n\n\u53c2\u8003\u8cc7\u6599\n\u30fbOpenCV\u3068\u306f\uff1f \u305d\u306e\u6a5f\u80fd\u6982\u8981\uff0f\u69cb\u6210\u6280\u8853\uff0f\u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb \n\u30fbruby-opencv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u9854\u8a8d\u8b58\u3057\u305f\n\n#\u6982\u8981\n##opencv\u3063\u3066\u306a\u3093\u305e\u3084\nOpen Source Computer Vision Library\u306e\u7565\n\u30a4\u30f3\u30c6\u30eb\u304c\u958b\u767a\u30fb\u516c\u958b\u3057\u305f\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30d3\u30b8\u30e7\u30f3\u5411\u3051\u30e9\u30a4\u30d6\u30e9\u30ea\n\u516c\u5f0f\u306e\u30b5\u30dd\u30fc\u30c8\u8a00\u8a9e\uff1aC\u3001C++\u3001Python\u3001Java\n*\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u30fc\u30d3\u30b8\u30e7\u30f3\uff1a\u753b\u50cf\u30fb\u6620\u50cf\u3092\u5206\u6790\u3059\u308b\u5206\u91ce\n\n##opencv\u3067\u89e3\u6790\u3067\u304d\u308b\u3053\u3068\n\u30fb\u884c\u5217\u6f14\u7b97\n\u30fb\u30d5\u30a3\u30eb\u30bf\u30fc\u51e6\u7406\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u691c\u51fa\n\u30fb\u7279\u5fb4\u70b9\u62bd\u51fa\n\u30fb\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30c8\u30e9\u30c3\u30ad\u30f3\u30b0\n\u30fb\u30ab\u30e1\u30e9\u30ad\u30e3\u30ea\u30d6\u30ec\u30fc\u30b7\u30e7\u30f3\n\u30fb\u6a5f\u68b0\u5b66\u7fd2\n\u30fb\u30d1\u30ce\u30e9\u30de\u5408\u6210\n\u30fbGUI\uff08\u30a6\u30a3\u30f3\u30c9\u30a6\u8868\u793a\u3001\u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3001\u52d5\u753b\u30d5\u30a1\u30a4\u30eb\u306e\u5165\u51fa\u529b\u3001\u30ab\u30e1\u30e9\u30ad\u30e3\u30d7\u30c1\u30e3\uff09\n\n#\u8a66\u3057\u306b\u9854\u8a8d\u8b58\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n##\u4e0b\u6e96\u5099\n\n```\nbrew search opencv\nbrew tap homebrew/science\nbrew info opencv\nbrew install opencv\ngem install ruby-opencv\n```\n##\u30b3\u30fc\u30c9\n\n``` ruby:face_tracking.rb\nrequire 'opencv'\n\nwindow = OpenCV::GUI::Window.new \"face detect\"\ncapture = OpenCV::CvCapture.open\ndetector = OpenCV::CvHaarClassifierCascade::load \"/usr/local/share/OpenCV/haarcascades/haarcascade_frontalface_default.xml\"\n\nloop do\n  image = capture.query\n  image = image.resize OpenCV::CvSize.new 640, 360\n  detector.detect_objects(image).each do |rect|\n    puts \"detect!! : #{rect.top_left}, #{rect.top_right}, #{rect.bottom_left}, #{rect.bottom_right}\"\n    image.rectangle! rect.top_left, rect.bottom_right, :color => OpenCV::CvColor::Red\n  end\n  window.show image\n  break if OpenCV::GUI::wait_key(100)\nend\n```\n\n\u53c2\u8003\u8cc7\u6599\n\u30fb[OpenCV\u3068\u306f\uff1f \u305d\u306e\u6a5f\u80fd\u6982\u8981\uff0f\u69cb\u6210\u6280\u8853\uff0f\u4e3b\u8981\u30e2\u30b8\u30e5\u30fc\u30eb ](http://www.buildinsider.net/small/opencv/01)\n\u30fb[ruby-opencv\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u9854\u8a8d\u8b58\u3057\u305f](http://shokai.org/blog/archives/8627)\n", "tags": ["Ruby", "OpenCV"]}