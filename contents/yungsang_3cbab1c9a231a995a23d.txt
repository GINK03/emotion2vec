{"context": " More than 1 year has passed since last update.Running Kubernetes Example on CoreOS, Part 2\nhttps://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-2/\n\u304c\u51fa\u305f\u306e\u3067\u3001\nRunning Kubernetes Example on CoreOS, Part 1\nhttp://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-1/\n\u3092\u6700\u65b0\u72b6\u614b\u3067\u3001\u304a\u3055\u3089\u3044\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nVagrantfile\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"yungsang/coreos\"\n\n  config.vm.provision :shell do |s|\n    s.inline = <<-EOT\n      git clone https://github.com/kelseyhightower/kubernetes-coreos.git\n\n      sudo cp kubernetes-coreos/units/download-kubernetes.service /etc/systemd/system/\n\n      sudo cp kubernetes-coreos/units/apiserver.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/controller-manager.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/kubelet.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/proxy.service  /etc/systemd/system/\n\n      sudo systemctl start etcd\n\n      sudo systemctl start download-kubernetes\n\n      sudo systemctl start apiserver\n      sudo systemctl start controller-manager\n      sudo systemctl start kubelet\n      sudo systemctl start proxy\n    EOT\n  end\nend\n\n\n\nredis.json\n{\n  \"id\": \"redis\",\n  \"desiredState\": {\n    \"manifest\": {\n      \"version\": \"v1beta1\",\n      \"id\": \"redis\",\n      \"containers\": [{\n        \"name\": \"redis\",\n        \"image\": \"dockerfile/redis\",\n        \"ports\": [{\n          \"containerPort\": 6379,\n          \"hostPort\": 6379 \n        }]\n      }]\n    }\n  },\n  \"labels\": {\n    \"name\": \"redis\"\n  }\n}\n\n\n$ vagrant up\nBringing machine 'default' up with 'virtualbox' provider...\n==> default: Importing base box 'yungsang/coreos'...\n.\n.\n.\n==> default: Running provisioner: shell...\n    default: Running: inline script\n==> default: Cloning into 'kubernetes-coreos'...\n==> default: Checking connectivity...\n==> default: done\n$ vagrant ssh\n   ______                ____  _____\n  / ____/___  ________  / __ \\/ ___/\n / /   / __ \\/ ___/ _ \\/ / / /\\__ \\\n/ /___/ /_/ / /  /  __/ /_/ /___/ /\n\\____/\\____/_/   \\___/\\____//____/\n(stable 367.1.0)\ncore@localhost ~ $ kubecfg -h http://127.0.0.1:8080 -c redis.json create /pods\nI0730 23:03:58.785787 00732 request.go:220] Waiting for completion of /operations/1\nI0730 22:37:09.176985 00741 request.go:220] Waiting for completion of /operations/1\nI0730 22:37:29.180205 00741 request.go:220] Waiting for completion of /operations/1\n.\n.\n.\nName                Image(s)            Host                Labels\n----------          ----------          ----------          ----------\nredis               dockerfile/redis    /                   name=redis\n\ncore@localhost ~ $ kubecfg -h http://127.0.0.1:8080 list /pods\nName                Image(s)            Host                Labels\n----------          ----------          ----------          ----------\nredis               dockerfile/redis    127.0.0.1/          name=redis\n\ncore@localhost ~ $ \n\nRunning Kubernetes Example on CoreOS, Part 2\nhttps://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-2/\n\u304c\u51fa\u305f\u306e\u3067\u3001\n\nRunning Kubernetes Example on CoreOS, Part 1\nhttp://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-1/\n\u3092\u6700\u65b0\u72b6\u614b\u3067\u3001\u304a\u3055\u3089\u3044\u3092\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```rb:Vagrantfile\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"yungsang/coreos\"\n\n  config.vm.provision :shell do |s|\n    s.inline = <<-EOT\n      git clone https://github.com/kelseyhightower/kubernetes-coreos.git\n\n      sudo cp kubernetes-coreos/units/download-kubernetes.service /etc/systemd/system/\n\n      sudo cp kubernetes-coreos/units/apiserver.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/controller-manager.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/kubelet.service /etc/systemd/system/\n      sudo cp kubernetes-coreos/units/proxy.service  /etc/systemd/system/\n\n      sudo systemctl start etcd\n\n      sudo systemctl start download-kubernetes\n\n      sudo systemctl start apiserver\n      sudo systemctl start controller-manager\n      sudo systemctl start kubelet\n      sudo systemctl start proxy\n    EOT\n  end\nend\n```\n\n```json:redis.json\n{\n  \"id\": \"redis\",\n  \"desiredState\": {\n    \"manifest\": {\n      \"version\": \"v1beta1\",\n      \"id\": \"redis\",\n      \"containers\": [{\n        \"name\": \"redis\",\n        \"image\": \"dockerfile/redis\",\n        \"ports\": [{\n          \"containerPort\": 6379,\n          \"hostPort\": 6379 \n        }]\n      }]\n    }\n  },\n  \"labels\": {\n    \"name\": \"redis\"\n  }\n}\n```\n\n```\n$ vagrant up\nBringing machine 'default' up with 'virtualbox' provider...\n==> default: Importing base box 'yungsang/coreos'...\n.\n.\n.\n==> default: Running provisioner: shell...\n    default: Running: inline script\n==> default: Cloning into 'kubernetes-coreos'...\n==> default: Checking connectivity...\n==> default: done\n$ vagrant ssh\n   ______                ____  _____\n  / ____/___  ________  / __ \\/ ___/\n / /   / __ \\/ ___/ _ \\/ / / /\\__ \\\n/ /___/ /_/ / /  /  __/ /_/ /___/ /\n\\____/\\____/_/   \\___/\\____//____/\n(stable 367.1.0)\ncore@localhost ~ $ kubecfg -h http://127.0.0.1:8080 -c redis.json create /pods\nI0730 23:03:58.785787 00732 request.go:220] Waiting for completion of /operations/1\nI0730 22:37:09.176985 00741 request.go:220] Waiting for completion of /operations/1\nI0730 22:37:29.180205 00741 request.go:220] Waiting for completion of /operations/1\n.\n.\n.\nName                Image(s)            Host                Labels\n----------          ----------          ----------          ----------\nredis               dockerfile/redis    /                   name=redis\n\ncore@localhost ~ $ kubecfg -h http://127.0.0.1:8080 list /pods\nName                Image(s)            Host                Labels\n----------          ----------          ----------          ----------\nredis               dockerfile/redis    127.0.0.1/          name=redis\n\ncore@localhost ~ $ \n```\n", "tags": ["CoreOS", "vagrant", "kubernetes"]}