{"context": " More than 1 year has passed since last update.\n\n\u30b7\u30f3\u30d7\u30eb\u306a\u30ec\u30b3\u30e1\u30f3\u30c9\u306e\u8003\u3048\u65b9\n\u7279\u306bMahout\u306e\u4ed5\u7d44\u3084\u5206\u6563\u306b\u3088\u308b\u9ad8\u901f\u5316\u306b\u306f\u89e6\u308c\u306a\u3044\u3002\n\u3054\u304f\u5358\u7d14\u306bmahout\u3092Java\u3067\u8a66\u3059\u3060\u3051\u3002\n\u4f46\u3057\u3001\u524d\u63d0\u3068\u3057\u3066\u5358\u7d14\u306b\u8a00\u3046\u3068\n\n\n\n\u4eba\n\u597d\u304d\u306a\u3082\u306e\n\u597d\u304d\u306a\u3082\u306e\n\u597d\u304d\u306a\u3082\u306e\n\n\n\n\nA\u3055\u3093\n\u6797\u6a8e\n\u871c\u67d1\n\u82fa\n\n\nB\u3055\u3093\n\u68a8\n\u8461\u8404\n\u30d0\u30ca\u30ca\n\n\nC\u3055\u3093\n\u6797\u6a8e\n\u871c\u67d1\n\n\n\nD\u3055\u3093\n\u6797\u6a8e\n\u871c\u67d1\n\u82fa\n\n\n\n\u3055\u3066\u3001C\u3055\u3093\u304c\u6b21\u306b\u6b32\u3057\u3044\u3082\u306e\u306f\u4f55\uff1f\n\u611f\u899a\u7684\u306b\u305d\u308c\u306f\u300c\u304a\u305d\u3089\u304f\u82fa\u300d\u3060\u308d\u3046\u3001\u3068\u3002\n\u3053\u3053\u3067\u306f\uff14\u4ef6\u3057\u304b\u7121\u3044\u4e0a\u306b\u597d\u304d\u306a\u3082\u306e\u4e38\u304b\u3076\u308a\u3060\u304b\u3089\u76f4\u3050\u5206\u304b\u308b\u3051\u3069\n\uff23\u3055\u3093\u306b\u4f3c\u305f\u55dc\u597d\u3092\u6301\u3064\u4eba\u306f\u3060\u308c\u304b\u3092\u63a2\u3057\u3066\uff08\uff21\u3055\u3093\u3068\uff24\u3055\u3093\uff09\u3001\n\u305d\u3053\u304b\u3089\u30aa\u30b9\u30b9\u30e1\u306e\u679c\u7269\uff08\u82fa\uff09\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\u3059\u308b\u3002\n\n\u4eca\u56de\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u5229\u7528\u3057\u3001\n\u3088\u308a\u8ddd\u96e2\u304c\u8fd1\u3044\uff1d\u597d\u307f\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u4eba\u3092\u7279\u5b9a\u3059\u308b\u3002\n\uff08\u6620\u753b\u306e\u8a55\u4fa1\u306a\u3069\u53b3\u3057\u3081\u3084\u7518\u3081\u306e\u4eba\u304c\u6df7\u5728\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306f\n  \u672c\u5f53\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306f\u5411\u304b\u306a\u3044\uff09\n\n\u5b9f\u88c5\n\nmaven\n\npom.xml\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-core</artifactId>\n        <scope>provided</scope>\n        <version>0.9</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-math</artifactId>\n        <scope>provided</scope>\n        <version>0.10.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-examples</artifactId>\n        <scope>provided</scope>\n        <version>0.10.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-collections</artifactId>\n        <scope>provided</scope>\n        <version>1.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-utils</artifactId>\n        <scope>provided</scope>\n        <version>0.5</version>\n        <exclusions>\n            <exclusion>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n            </exclusion>\n            <exclusion>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-jcl</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n\n\n\nJava\u30b3\u30fc\u30c9\n\nsample.java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.mahout.cf.taste.common.TasteException;\nimport org.apache.mahout.cf.taste.impl.common.FastByIDMap;\nimport org.apache.mahout.cf.taste.impl.model.GenericDataModel;\nimport org.apache.mahout.cf.taste.impl.model.GenericPreference;\nimport org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray;\nimport org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;\nimport org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;\nimport org.apache.mahout.cf.taste.impl.similarity.EuclideanDistanceSimilarity;\nimport org.apache.mahout.cf.taste.model.DataModel;\nimport org.apache.mahout.cf.taste.model.Preference;\nimport org.apache.mahout.cf.taste.model.PreferenceArray;\nimport org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;\nimport org.apache.mahout.cf.taste.recommender.RecommendedItem;\nimport org.apache.mahout.cf.taste.recommender.Recommender;\nimport org.apache.mahout.cf.taste.similarity.UserSimilarity;\n\npublic class AdHocTestSpace {\n    public static void main(String argv[]){\n\n        try {\n            /*\n            * \u6570\u5024\u578b\u306b\u7f6e\u304d\u63db\u3048\u3066\u5024\u3092\u6e21\u3059\n            * \u7b2c\uff11\u5f15\u6570\n            *   100 A\u3055\u3093\n            *   200 B\u3055\u3093\n            *   300 C\u3055\u3093\n            *   400 C\u3055\u3093\n            *\n            * \u7b2c\uff12\u5f15\u6570\n            *   1 \u6797\u6a8e\n            *   2 \u871c\u67d1\n            *   3 \u82fa\n            *   4 \u68a8\n            *   5 \u8461\u8404\n            *   6 \u30d0\u30ca\u30ca\n            *\n            * \u7b2c\uff13\u5f15\u6570\n            *   \u3053\u3053\u306f\u597d\u307f\u3092\u8868\u3059\u304c\u4eca\u56de\u306f5.0\u56fa\u5b9a(\u5024\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044)\n            *   \u3084\u308d\u3046\u3068\u601d\u3048\u3070\n            *   1.0 \u3042\u3093\u307e\u308a\u30fb\u30fb\u30fb\n            *   2.0 \u3075\u3064\u30fc\n            *   3.0 \u597d\u304d\n            *   \u307f\u305f\u3044\u306b\u597d\u307f\u306e\u91cd\u3055\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n            */\n\n            List<Preference> list_1 = new ArrayList<>();\n            List<Preference> list_2 = new ArrayList<>();\n            List<Preference> list_3 = new ArrayList<>();\n            List<Preference> list_4 = new ArrayList<>();\n\n            // A\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u3068\u82fa\u304c\u597d\u304d\n            list_1.add(new GenericPreference(100, 1, 5.0f));\n            list_1.add(new GenericPreference(100, 2, 5.0f));\n            list_1.add(new GenericPreference(100, 3, 5.0f));\n\n            // B\u3055\u3093\u306f\u3001\u68a8\u3068\u8461\u8404\u3068\u30d0\u30ca\u30ca\u304c\u597d\u304d\n            list_2.add(new GenericPreference(200, 4, 5.0f));\n            list_2.add(new GenericPreference(200, 5, 5.0f));\n            list_2.add(new GenericPreference(200, 6, 5.0f));\n\n            // C\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u304c\u597d\u304d\n            list_3.add(new GenericPreference(300, 1, 5.0f));\n            list_3.add(new GenericPreference(300, 2, 5.0f));\n\n            // D\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u3068\u82fa\u304c\u597d\u304d\n            list_4.add(new GenericPreference(400, 1, 5.0f));\n            list_4.add(new GenericPreference(400, 2, 5.0f));\n            list_4.add(new GenericPreference(400, 3, 5.0f));\n\n            /*\n             * \u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u30e2\u30c7\u30eb\u306b\u30bb\u30c3\u30c8\n             */\n            FastByIDMap<PreferenceArray> input_info = new FastByIDMap<>();\n            input_info.put(100, new GenericUserPreferenceArray(list_1));\n            input_info.put(200, new GenericUserPreferenceArray(list_2));\n            input_info.put(300, new GenericUserPreferenceArray(list_3));\n            input_info.put(400, new GenericUserPreferenceArray(list_4));\n\n            DataModel model = new GenericDataModel(input_info);\n\n            // \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u5229\u7528\n            UserSimilarity similarity = new EuclideanDistanceSimilarity(model);\n\n            /**\n             * \u985e\u4f3c\uff08\u8ddd\u96e2\u306e\u8fd1\u3044\uff09\u30e6\u30fc\u30b6\u3092\uff4e\u4ef6\u8fc4\u3092\u691c\u7d22\n             * \u3068\u308a\u3042\u3048\u305a\u3001\uff13\u304f\u3089\u3044\u3067\n             */\n            UserNeighborhood neighborhood = new NearestNUserNeighborhood(3, similarity , model);\n\n            /**\n             * C\u3055\u3093\u306e\u597d\u307f\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\n             * \u7d50\u679c\u306f \uff13\uff1a\u82fa \u306b\u306a\u308b\n             */\n            Recommender recommender = new GenericUserBasedRecommender(model, neighborhood, similarity);\n            List<RecommendedItem> rcmmList = recommender.recommend(300, 5);\n            System.out.println(\"C\u3055\u3093\u306b\u30aa\u30b9\u30b9\u30e1\u3057\u305f\u3044\u679c\u7269\u306eID\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\");\n            rcmmList.stream().forEach(System.out::println);\n\n        } catch (TasteException ex) {\n            Logger.getLogger(AdHocTestSpace.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }    \n}\n\n\n## \u30b7\u30f3\u30d7\u30eb\u306a\u30ec\u30b3\u30e1\u30f3\u30c9\u306e\u8003\u3048\u65b9\n\n\u7279\u306bMahout\u306e\u4ed5\u7d44\u3084\u5206\u6563\u306b\u3088\u308b\u9ad8\u901f\u5316\u306b\u306f\u89e6\u308c\u306a\u3044\u3002\n\u3054\u304f\u5358\u7d14\u306bmahout\u3092Java\u3067\u8a66\u3059\u3060\u3051\u3002\n\n\u4f46\u3057\u3001\u524d\u63d0\u3068\u3057\u3066\u5358\u7d14\u306b\u8a00\u3046\u3068\n\n| \u4eba | \u597d\u304d\u306a\u3082\u306e | \u597d\u304d\u306a\u3082\u306e | \u597d\u304d\u306a\u3082\u306e |\n|:-----------|:-----------:|:------------:|:------------:|\n| A\u3055\u3093       |        \u6797\u6a8e|     \u871c\u67d1     | \u82fa\n| B\u3055\u3093     |      \u68a8|    \u8461\u8404    | \u30d0\u30ca\u30ca\n| C\u3055\u3093      |        \u6797\u6a8e |     \u871c\u67d1     |\n| D\u3055\u3093      |        \u6797\u6a8e |     \u871c\u67d1     | \u82fa\n\n\u3055\u3066\u3001C\u3055\u3093\u304c\u6b21\u306b\u6b32\u3057\u3044\u3082\u306e\u306f\u4f55\uff1f\n\n\u611f\u899a\u7684\u306b\u305d\u308c\u306f\u300c\u304a\u305d\u3089\u304f\u82fa\u300d\u3060\u308d\u3046\u3001\u3068\u3002\n\n\u3053\u3053\u3067\u306f\uff14\u4ef6\u3057\u304b\u7121\u3044\u4e0a\u306b\u597d\u304d\u306a\u3082\u306e\u4e38\u304b\u3076\u308a\u3060\u304b\u3089\u76f4\u3050\u5206\u304b\u308b\u3051\u3069\n\uff23\u3055\u3093\u306b\u4f3c\u305f\u55dc\u597d\u3092\u6301\u3064\u4eba\u306f\u3060\u308c\u304b\u3092\u63a2\u3057\u3066\uff08\uff21\u3055\u3093\u3068\uff24\u3055\u3093\uff09\u3001\n\u305d\u3053\u304b\u3089\u30aa\u30b9\u30b9\u30e1\u306e\u679c\u7269\uff08\u82fa\uff09\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\u3059\u308b\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/101086/21bab2e4-c919-77f7-4b91-50fdec19e033.png)\n\n\u4eca\u56de\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u5229\u7528\u3057\u3001\n\u3088\u308a\u8ddd\u96e2\u304c\u8fd1\u3044\uff1d\u597d\u307f\u304c\u985e\u4f3c\u3057\u3066\u3044\u308b\u4eba\u3092\u7279\u5b9a\u3059\u308b\u3002\n\uff08\u6620\u753b\u306e\u8a55\u4fa1\u306a\u3069\u53b3\u3057\u3081\u3084\u7518\u3081\u306e\u4eba\u304c\u6df7\u5728\u3059\u308b\u3088\u3046\u306a\u5834\u5408\u306f\n  \u672c\u5f53\u306f\u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u306f\u5411\u304b\u306a\u3044\uff09\n\n## \u5b9f\u88c5\n\n### maven\n```xml:pom.xml\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-core</artifactId>\n        <scope>provided</scope>\n        <version>0.9</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-math</artifactId>\n        <scope>provided</scope>\n        <version>0.10.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-examples</artifactId>\n        <scope>provided</scope>\n        <version>0.10.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-collections</artifactId>\n        <scope>provided</scope>\n        <version>1.0</version>\n    </dependency>\n    <dependency>\n        <groupId>org.apache.mahout</groupId>\n        <artifactId>mahout-utils</artifactId>\n        <scope>provided</scope>\n        <version>0.5</version>\n        <exclusions>\n            <exclusion>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n            </exclusion>\n            <exclusion>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-jcl</artifactId>\n            </exclusion>\n        </exclusions>\n    </dependency>\n```\n\n### Java\u30b3\u30fc\u30c9\n\n```java:sample.java\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport org.apache.mahout.cf.taste.common.TasteException;\nimport org.apache.mahout.cf.taste.impl.common.FastByIDMap;\nimport org.apache.mahout.cf.taste.impl.model.GenericDataModel;\nimport org.apache.mahout.cf.taste.impl.model.GenericPreference;\nimport org.apache.mahout.cf.taste.impl.model.GenericUserPreferenceArray;\nimport org.apache.mahout.cf.taste.impl.neighborhood.NearestNUserNeighborhood;\nimport org.apache.mahout.cf.taste.impl.recommender.GenericUserBasedRecommender;\nimport org.apache.mahout.cf.taste.impl.similarity.EuclideanDistanceSimilarity;\nimport org.apache.mahout.cf.taste.model.DataModel;\nimport org.apache.mahout.cf.taste.model.Preference;\nimport org.apache.mahout.cf.taste.model.PreferenceArray;\nimport org.apache.mahout.cf.taste.neighborhood.UserNeighborhood;\nimport org.apache.mahout.cf.taste.recommender.RecommendedItem;\nimport org.apache.mahout.cf.taste.recommender.Recommender;\nimport org.apache.mahout.cf.taste.similarity.UserSimilarity;\n\npublic class AdHocTestSpace {\n    public static void main(String argv[]){\n        \n        try {\n            /*\n            * \u6570\u5024\u578b\u306b\u7f6e\u304d\u63db\u3048\u3066\u5024\u3092\u6e21\u3059\n            * \u7b2c\uff11\u5f15\u6570\n            *   100 A\u3055\u3093\n            *   200 B\u3055\u3093\n            *   300 C\u3055\u3093\n            *   400 C\u3055\u3093\n            *\n            * \u7b2c\uff12\u5f15\u6570\n            *   1 \u6797\u6a8e\n            *   2 \u871c\u67d1\n            *   3 \u82fa\n            *   4 \u68a8\n            *   5 \u8461\u8404\n            *   6 \u30d0\u30ca\u30ca\n            *\n            * \u7b2c\uff13\u5f15\u6570\n            *   \u3053\u3053\u306f\u597d\u307f\u3092\u8868\u3059\u304c\u4eca\u56de\u306f5.0\u56fa\u5b9a(\u5024\u306b\u7279\u306b\u610f\u5473\u306f\u7121\u3044)\n            *   \u3084\u308d\u3046\u3068\u601d\u3048\u3070\n            *   1.0 \u3042\u3093\u307e\u308a\u30fb\u30fb\u30fb\n            *   2.0 \u3075\u3064\u30fc\n            *   3.0 \u597d\u304d\n            *   \u307f\u305f\u3044\u306b\u597d\u307f\u306e\u91cd\u3055\u3092\u6307\u5b9a\u3067\u304d\u308b\u3002\n            */\n            \n            List<Preference> list_1 = new ArrayList<>();\n            List<Preference> list_2 = new ArrayList<>();\n            List<Preference> list_3 = new ArrayList<>();\n            List<Preference> list_4 = new ArrayList<>();\n            \n            // A\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u3068\u82fa\u304c\u597d\u304d\n            list_1.add(new GenericPreference(100, 1, 5.0f));\n            list_1.add(new GenericPreference(100, 2, 5.0f));\n            list_1.add(new GenericPreference(100, 3, 5.0f));\n            \n            // B\u3055\u3093\u306f\u3001\u68a8\u3068\u8461\u8404\u3068\u30d0\u30ca\u30ca\u304c\u597d\u304d\n            list_2.add(new GenericPreference(200, 4, 5.0f));\n            list_2.add(new GenericPreference(200, 5, 5.0f));\n            list_2.add(new GenericPreference(200, 6, 5.0f));\n            \n            // C\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u304c\u597d\u304d\n            list_3.add(new GenericPreference(300, 1, 5.0f));\n            list_3.add(new GenericPreference(300, 2, 5.0f));\n\n            // D\u3055\u3093\u306f\u3001\u6797\u6a8e\u3068\u871c\u67d1\u3068\u82fa\u304c\u597d\u304d\n            list_4.add(new GenericPreference(400, 1, 5.0f));\n            list_4.add(new GenericPreference(400, 2, 5.0f));\n            list_4.add(new GenericPreference(400, 3, 5.0f));\n            \n            /*\n             * \u3053\u308c\u3089\u306e\u60c5\u5831\u3092\u30e2\u30c7\u30eb\u306b\u30bb\u30c3\u30c8\n             */\n            FastByIDMap<PreferenceArray> input_info = new FastByIDMap<>();\n            input_info.put(100, new GenericUserPreferenceArray(list_1));\n            input_info.put(200, new GenericUserPreferenceArray(list_2));\n            input_info.put(300, new GenericUserPreferenceArray(list_3));\n            input_info.put(400, new GenericUserPreferenceArray(list_4));\n            \n            DataModel model = new GenericDataModel(input_info);\n            \n            // \u30e6\u30fc\u30af\u30ea\u30c3\u30c9\u8ddd\u96e2\u3092\u5229\u7528\n            UserSimilarity similarity = new EuclideanDistanceSimilarity(model);\n            \n            /**\n             * \u985e\u4f3c\uff08\u8ddd\u96e2\u306e\u8fd1\u3044\uff09\u30e6\u30fc\u30b6\u3092\uff4e\u4ef6\u8fc4\u3092\u691c\u7d22\n             * \u3068\u308a\u3042\u3048\u305a\u3001\uff13\u304f\u3089\u3044\u3067\n             */\n            UserNeighborhood neighborhood = new NearestNUserNeighborhood(3, similarity , model);\n            \n            /**\n             * C\u3055\u3093\u306e\u597d\u307f\u3092\u30ec\u30b3\u30e1\u30f3\u30c9\n             * \u7d50\u679c\u306f \uff13\uff1a\u82fa \u306b\u306a\u308b\n             */\n            Recommender recommender = new GenericUserBasedRecommender(model, neighborhood, similarity);\n            List<RecommendedItem> rcmmList = recommender.recommend(300, 5);\n            System.out.println(\"C\u3055\u3093\u306b\u30aa\u30b9\u30b9\u30e1\u3057\u305f\u3044\u679c\u7269\u306eID\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\");\n            rcmmList.stream().forEach(System.out::println);\n            \n        } catch (TasteException ex) {\n            Logger.getLogger(AdHocTestSpace.class.getName()).log(Level.SEVERE, null, ex);\n        }\n    }    \n}\n```\n", "tags": ["mahout", "Java", "Maven"]}