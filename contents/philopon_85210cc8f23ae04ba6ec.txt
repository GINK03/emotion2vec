{"context": " More than 1 year has passed since last update.\n\n\u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\n\u306f\u3044\u3001\u30af\u30ea\u30b9\u30de\u30b9\u30a4\u30d6\u3067\u3059\u3002\n\u65e5\u672c\u306e\u30ab\u30c3\u30d7\u30eb\u306f\u30af\u30ea\u30b9\u30de\u30b9\u9803\u306b\u306a\u308b\u3068\u7af6\u3063\u3066\u30a2\u30f3\u30a2\u30f3\u3057\u3060\u3059\u3068\u8a00\u3044\u307e\u30591\u306e\u3067\u3001\u4eca\u5e74\u306e\u30af\u30ea\u30b9\u30de\u30b9\u306f\u304a\u4e00\u4eba\u306e\u65b9\u3082\u662f\u975e\u30a2\u30f3\u30a2\u30f3\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30a2\u30f3\u30a2\u30f3?\n\u30a2\u30f3\u30a2\u30f3\u3068\u8a00\u3048\u3070\u3001\u3082\u3061\u308d\u3093ghc\u306eANN\u30d7\u30e9\u30b0\u30de\u3067\u3059\u306d\u3002\nTemplate Haskell\u304b\u3089\u3067\u3082\u898b\u308b\u4e8b\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u3063\u3066\u7f8e\u5473\u307f\u5897\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u8272\u3005\u306a\u6240\u304b\u3089\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nANN\u30d7\u30e9\u30b0\u30de?\nANN\u30d7\u30e9\u30b0\u30de\u306f\u3001\u5024\u3001\u578b\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u6ce8\u91c8\u3092\u5165\u308c\u308b\u70ba\u306e\u30d7\u30e9\u30b0\u30de\u3067\u3059\u3002\n\nann.hs\nmodule Foo where\n{-# ANN module (\"annotation\" :: String) #-} -- \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\u3002import\u306e\u524d\u306b\u306f\u66f8\u3051\u306a\u3044\u3063\u307d\u3044\u3002\u4e0d\u4fbf\u2026\u2026\n\ndata Foo = Foo\n{-# ANN type Foo (2 :: Int) #-} -- \u578b\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\n{-# ANN type Foo (5 :: Int) #-} -- \u6ce8\u91c8\u3092\u540c\u3058/\u9055\u3046\u578b\u3067\u8907\u6570\u500b\u4ed8\u3051\u308b\u4e8b\u3082\u51fa\u6765\u308b\n{-# ANN type Foo (2.4 :: Double) #-}\n\nfoo :: Foo\nfoo = Foo\n{-# ANN foo (3 + 2 * 6 :: Int) #-} -- \u5024\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\u3002\u6ce8\u91c8\u306e\u4e2d\u3067\u8a08\u7b97\u3059\u308b\u4e8b\u3082\u53ef\u80fd\n\n\n\u6ce8\u91c8\u306b\u306fData\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u4f55\u3067\u3082\u5165\u308c\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\nData\u30af\u30e9\u30b9\u306fbase\u306eData.Data\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u70ba\u306e\u30af\u30e9\u30b9\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7279\u306b\u305d\u308c\u3089\u3057\u3044\u4f7f\u3044\u65b9\u306f\u3057\u307e\u305b\u3093\u3002\n\u3067\u3059\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u3001\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u578b\u306b\u3064\u3044\u3066\u3082Data\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5c0e\u51fa\u51fa\u6765\u308b\u4e8b\u3060\u3051\u3092\u6291\u3048\u3066\u304a\u3051\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n{-# LANGUAGE DeriveDataTypeable #-}\n\nimport Data.Data\n\ndata Foo = Foo\n    deriving(Typeable, Data)\n\n\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u6642\u306f\u3053\u306e\u69d8\u306b\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u578b\u3092\u63d0\u4f9b\u3057\u3066\u3001\u4ed6\u3068\u306e\u6df7\u540c\u3092\u907f\u3051\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\ntemplate-haskell\u304b\u3089\n\u307e\u305a\u306ftemplate-haskell\u304b\u3089\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nth.hs\n{-# LANGUAGE TemplateHaskell #-}\n\nmodule Foo where\n\nimport Language.Haskell.TH\n\n{-# ANN module (\"annotation\" :: String) #-}\n\ndata Foo = Foo\n{-# ANN type Foo (2 :: Int) #-}\n{-# ANN type Foo (5 :: Int) #-}\n{-# ANN type Foo (2.4 :: Double) #-}\n\nfoo :: Foo\nfoo = Foo\n{-# ANN foo (3 + 2 * 6 :: Int) #-}\n\n$(do -- \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30cf\u30b9\u30b1\u30eb\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\n\n    mdl <- thisModule\n\n    -- \u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306eString\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    mdlAnn <- reifyAnnotations (AnnLookupModule mdl) :: Q [String]\n\n    -- Foo\u578b\u69cb\u7bc9\u5b50\u306eInt\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    typeAnn <- reifyAnnotations (AnnLookupName ''Foo) :: Q [Int]\n\n    -- foo\u306eInt\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    valAnn <- reifyAnnotations (AnnLookupName 'foo) :: Q [Int]\n\n    -- \u305d\u308c\u3089\u3092\u51fa\u529b\u3057\u3066\u6b7b\u306c\n    fail $ unlines\n        [ \"module: \" ++ show mdlAnn\n        , \"type:   \" ++ show typeAnn\n        , \"val:    \" ++ show valAnn\n        ]\n    )\n\n\n$ ghc th.hs\n[1 of 1] Compiling Foo              ( th.hs, th.o )\n\nth.hs:16:3: module: [\"annotation\"]\ntype:   [5,2]\nval:    [15]\n\n\u3053\u306e\u69d8\u306b\u3001\u76ee\u5f53\u3066\u306e\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u8907\u6570\u500b\u53d6\u3063\u3066\u6765\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\u8272\u3005\u697d\u3057\u3052\u306a\u4e8b\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u306d!!!!!!!!2\n\nhaskell-src-exts\u304b\u3089\nhaskell-src-exts\u3067\u30d1\u30fc\u30ba\u3057\u305f\u7d50\u679c\u306b\u3082ANN\u30d7\u30e9\u30b0\u30de\u306e\u5185\u5bb9\u306f\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u3068\u3066\u3082\u9069\u5f53\u3067\u3059\u304c\u3001\u5148\u306eann.hs\u3092\u30d1\u30fc\u30ba\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nhse.hs\n{-# LANGUAGE LambdaCase #-}\n\nimport Language.Haskell.Exts\n\nmain :: IO ()\nmain = parseFile \"ann.hs\" >>= \\case\n    ParseFailed _ s -> putStrLn s\n    ParseOk (Module _ _ _ _ _ _ d) -> mapM_ print d\n\n-- data Module = Module SrcLoc ModuleName [ModulePragma] (Maybe WarningText) (Maybe [ExportSpec]) [ImportDecl] [Decl]\n\n\n$ runhaskell hse.hs\nAnnPragma (SrcLoc \"ann.hs\" 2 1) (ModuleAnn (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 2 17) (Lit (String \"annotation\")) (TyCon (UnQual (Ident \"String\"))))))\nDataDecl (SrcLoc \"ann.hs\" 4 1) DataType [] (Ident \"Foo\") [] [QualConDecl (SrcLoc \"ann.hs\" 4 12) [] [] (ConDecl (Ident \"Foo\") [])] []\nAnnPragma (SrcLoc \"ann.hs\" 5 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 5 19) (Lit (Int 2)) (TyCon (UnQual (Ident \"Int\"))))))\nAnnPragma (SrcLoc \"ann.hs\" 6 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 6 19) (Lit (Int 5)) (TyCon (UnQual (Ident \"Int\"))))))\nAnnPragma (SrcLoc \"ann.hs\" 7 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 7 19) (Lit (Frac (12 % 5))) (TyCon (UnQual (Ident \"Double\"))))))\nTypeSig (SrcLoc \"ann.hs\" 9 1) [Ident \"foo\"] (TyCon (UnQual (Ident \"Foo\")))\nPatBind (SrcLoc \"ann.hs\" 10 1) (PVar (Ident \"foo\")) (UnGuardedRhs (Con (UnQual (Ident \"Foo\")))) (BDecls [])\nAnnPragma (SrcLoc \"ann.hs\" 11 1) (Ann (Ident \"foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 11 14) (InfixApp (Lit (Int 3)) (QVarOp (UnQual (Symbol \"+\"))) (InfixApp (Lit (Int 2)) (QVarOp (UnQual (Symbol \"*\"))) (Lit (Int 6)))) (TyCon (UnQual (Ident \"Int\"))))))\n\n\u306f\u3044\u3001\u3057\u3063\u304b\u308a\u5404\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u53d6\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\u3053\u308c\u306fhlint\u306e\u51fa\u529b\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u578b\u3001\u5024\u5358\u4f4d\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nwarn.hs\nident a = (a)\n\n\n$ hlint warn.hs\nhl-test.hs:1:11: Error: Redundant bracket\nFound:\n  (a)\nWhy not:\n  a\n\n1 suggestion\n\n\nignore.hs\n{-# ANN foo \"HLint: ignore\" #-}\nident a = (a)\n\n\n$ hlint ignore.hs\nNo suggestions (1 ignored)\n\n\u3053\u306e\u69d8\u306b\u3001\u7279\u5225\u306a\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u5236\u5fa1\u3059\u308b\u306e\u306f\u907f\u3051\u3066\u3001ANN\u30d7\u30e9\u30b0\u30de\u3067\u5236\u5fa1\u3059\u308b\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\n\n\u30bf\u30a4\u30c8\u30eb\u3060\u3051\u3067\u30a2\u30ec\u3059\u308b\u3068\u9177\u3044\u4e8b\u306b\u306a\u308b\nANN\u3001\u8272\u3005\u9762\u767d\u3052\u306a\u306e\u3067\u3069\u3093\u3069\u3093\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u304a\u306d\u304c\u3044\u3057\u307e\u3059\n\n\nread more\n\n\n9.3.\u00a0Compiler Plugins -- ghc-plugin\u304b\u3089\u3082\u8997\u3051\u307e\u3059\u3002\u30a2\u30b0\u30ec\u30c3\u30b7\u30d6\u306a\u6700\u9069\u5316\u3068\u304b\u306b\u4f7f\u3046\u3063\u307d\u30443\u3002\n\n\n\n\n\n\n\u6027\u306e6\u6642\u9593\u3068\u306f (\u30e4\u30ea\u30de\u30af\u30ea\u30b9\u30de\u30b9\u3068\u306f) [\u5358\u8a9e\u8a18\u4e8b] - \u30cb\u30b3\u30cb\u30b3\u5927\u767e\u79d1\u00a0\u21a9\n\n\nTH\u306e\u5f15\u6570\u306e\u4ee3\u308f\u308a\u306bANN\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3067\u3001\u3069\u3053\u304b\u3089TH\u3092\u8aad\u3093\u3067\u3082\u8a2d\u5b9a\u304c\u540c\u3058\u306b\u306a\u308b\u306e\u304c\u7279\u5fb4\u3063\u307d\u3044(aeson\u306ederive\u3068\u304b\u306b\u5411\u3044\u3066\u305d\u3046?\u00a0\u21a9\n\n\n\u3082\u3046\u7121\u3044\u3063\u307d\u3044\u304c\u3001haskell-jp:595\u306eSpecConstr\u3068\u304b?\u00a0\u21a9\n\n\n\n\u30e1\u30ea\u30fc\u30af\u30ea\u30b9\u30de\u30b9\n==\n\u306f\u3044\u3001\u30af\u30ea\u30b9\u30de\u30b9\u30a4\u30d6\u3067\u3059\u3002\n\u65e5\u672c\u306e\u30ab\u30c3\u30d7\u30eb\u306f\u30af\u30ea\u30b9\u30de\u30b9\u9803\u306b\u306a\u308b\u3068\u7af6\u3063\u3066\u30a2\u30f3\u30a2\u30f3\u3057\u3060\u3059\u3068\u8a00\u3044\u307e\u3059[^ANNANN]\u306e\u3067\u3001\u4eca\u5e74\u306e\u30af\u30ea\u30b9\u30de\u30b9\u306f\u304a\u4e00\u4eba\u306e\u65b9\u3082\u662f\u975e\u30a2\u30f3\u30a2\u30f3\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30a2\u30f3\u30a2\u30f3?\n==\n\u30a2\u30f3\u30a2\u30f3\u3068\u8a00\u3048\u3070\u3001\u3082\u3061\u308d\u3093ghc\u306eANN\u30d7\u30e9\u30b0\u30de\u3067\u3059\u306d\u3002\nTemplate Haskell\u304b\u3089\u3067\u3082\u898b\u308b\u4e8b\u304c\u51fa\u6765\u308b\u69d8\u306b\u306a\u3063\u3066\u7f8e\u5473\u307f\u5897\u3057\u3066\u3044\u308b\u3068\u601d\u3046\u306e\u3067\u3001\u8272\u3005\u306a\u6240\u304b\u3089\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nANN\u30d7\u30e9\u30b0\u30de?\n==\nANN\u30d7\u30e9\u30b0\u30de\u306f\u3001\u5024\u3001\u578b\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u6ce8\u91c8\u3092\u5165\u308c\u308b\u70ba\u306e\u30d7\u30e9\u30b0\u30de\u3067\u3059\u3002\n\n```ann.hs\nmodule Foo where\n{-# ANN module (\"annotation\" :: String) #-} -- \u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\u3002import\u306e\u524d\u306b\u306f\u66f8\u3051\u306a\u3044\u3063\u307d\u3044\u3002\u4e0d\u4fbf\u2026\u2026\n\ndata Foo = Foo\n{-# ANN type Foo (2 :: Int) #-} -- \u578b\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\n{-# ANN type Foo (5 :: Int) #-} -- \u6ce8\u91c8\u3092\u540c\u3058/\u9055\u3046\u578b\u3067\u8907\u6570\u500b\u4ed8\u3051\u308b\u4e8b\u3082\u51fa\u6765\u308b\n{-# ANN type Foo (2.4 :: Double) #-}\n\nfoo :: Foo\nfoo = Foo\n{-# ANN foo (3 + 2 * 6 :: Int) #-} -- \u5024\u306b\u5bfe\u3059\u308b\u6ce8\u91c8\u3002\u6ce8\u91c8\u306e\u4e2d\u3067\u8a08\u7b97\u3059\u308b\u4e8b\u3082\u53ef\u80fd\n```\n\n\u6ce8\u91c8\u306b\u306f`Data`\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u3042\u308c\u3070\u4f55\u3067\u3082\u5165\u308c\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\n`Data`\u30af\u30e9\u30b9\u306f`base`\u306e`Data.Data`\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b8\u30a7\u30cd\u30ea\u30c3\u30af\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u70ba\u306e\u30af\u30e9\u30b9\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7279\u306b\u305d\u308c\u3089\u3057\u3044\u4f7f\u3044\u65b9\u306f\u3057\u307e\u305b\u3093\u3002\n\u3067\u3059\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306b\u3059\u308c\u3070\u3001\u81ea\u5206\u3067\u5b9a\u7fa9\u3057\u305f\u578b\u306b\u3064\u3044\u3066\u3082`Data`\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5c0e\u51fa\u51fa\u6765\u308b\u4e8b\u3060\u3051\u3092\u6291\u3048\u3066\u304a\u3051\u3070\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```.hs\n{-# LANGUAGE DeriveDataTypeable #-}\n\nimport Data.Data\n\ndata Foo = Foo\n    deriving(Typeable, Data)\n```\n\n\u5b9f\u969b\u306b\u4f7f\u7528\u3059\u308b\u6642\u306f\u3053\u306e\u69d8\u306b\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u578b\u3092\u63d0\u4f9b\u3057\u3066\u3001\u4ed6\u3068\u306e\u6df7\u540c\u3092\u907f\u3051\u308b\u306e\u304c\u826f\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\ntemplate-haskell\u304b\u3089\n--\n\u307e\u305a\u306f[template-haskell](https://hackage.haskell.org/package/template-haskell)\u304b\u3089\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```th.hs\n{-# LANGUAGE TemplateHaskell #-}\n\nmodule Foo where\n\nimport Language.Haskell.TH\n\n{-# ANN module (\"annotation\" :: String) #-}\n\ndata Foo = Foo\n{-# ANN type Foo (2 :: Int) #-}\n{-# ANN type Foo (5 :: Int) #-}\n{-# ANN type Foo (2.4 :: Double) #-}\n\nfoo :: Foo\nfoo = Foo\n{-# ANN foo (3 + 2 * 6 :: Int) #-}\n\n$(do -- \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30cf\u30b9\u30b1\u30eb\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u5b9f\u884c\u3055\u308c\u308b\n\n    mdl <- thisModule\n\n    -- \u3053\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u306eString\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    mdlAnn <- reifyAnnotations (AnnLookupModule mdl) :: Q [String]\n\n    -- Foo\u578b\u69cb\u7bc9\u5b50\u306eInt\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    typeAnn <- reifyAnnotations (AnnLookupName ''Foo) :: Q [Int]\n\n    -- foo\u306eInt\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u53d6\u5f97\n    valAnn <- reifyAnnotations (AnnLookupName 'foo) :: Q [Int]\n\n    -- \u305d\u308c\u3089\u3092\u51fa\u529b\u3057\u3066\u6b7b\u306c\n    fail $ unlines\n        [ \"module: \" ++ show mdlAnn\n        , \"type:   \" ++ show typeAnn\n        , \"val:    \" ++ show valAnn\n        ]\n    )\n```\n\n```console:\n$ ghc th.hs\n[1 of 1] Compiling Foo              ( th.hs, th.o )\n\nth.hs:16:3: module: [\"annotation\"]\ntype:   [5,2]\nval:    [15]\n```\n\n\u3053\u306e\u69d8\u306b\u3001\u76ee\u5f53\u3066\u306e\u578b\u306e\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u3001\u8907\u6570\u500b\u53d6\u3063\u3066\u6765\u308b\u4e8b\u304c\u51fa\u6765\u307e\u3059\u3002\n\u8272\u3005\u697d\u3057\u3052\u306a\u4e8b\u304c\u51fa\u6765\u305d\u3046\u3067\u3059\u306d!!!!!!!![^fun-th]\n\nhaskell-src-exts\u304b\u3089\n--\n[haskell-src-exts](https://hackage.haskell.org/package/haskell-src-exts)\u3067\u30d1\u30fc\u30ba\u3057\u305f\u7d50\u679c\u306b\u3082ANN\u30d7\u30e9\u30b0\u30de\u306e\u5185\u5bb9\u306f\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3068\u3066\u3082\u9069\u5f53\u3067\u3059\u304c\u3001\u5148\u306e`ann.hs`\u3092\u30d1\u30fc\u30ba\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```hse.hs\n{-# LANGUAGE LambdaCase #-}\n\nimport Language.Haskell.Exts\n\nmain :: IO ()\nmain = parseFile \"ann.hs\" >>= \\case\n    ParseFailed _ s -> putStrLn s\n    ParseOk (Module _ _ _ _ _ _ d) -> mapM_ print d\n\n-- data Module = Module SrcLoc ModuleName [ModulePragma] (Maybe WarningText) (Maybe [ExportSpec]) [ImportDecl] [Decl]\n```\n\n```console:\n$ runhaskell hse.hs\nAnnPragma (SrcLoc \"ann.hs\" 2 1) (ModuleAnn (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 2 17) (Lit (String \"annotation\")) (TyCon (UnQual (Ident \"String\"))))))\nDataDecl (SrcLoc \"ann.hs\" 4 1) DataType [] (Ident \"Foo\") [] [QualConDecl (SrcLoc \"ann.hs\" 4 12) [] [] (ConDecl (Ident \"Foo\") [])] []\nAnnPragma (SrcLoc \"ann.hs\" 5 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 5 19) (Lit (Int 2)) (TyCon (UnQual (Ident \"Int\"))))))\nAnnPragma (SrcLoc \"ann.hs\" 6 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 6 19) (Lit (Int 5)) (TyCon (UnQual (Ident \"Int\"))))))\nAnnPragma (SrcLoc \"ann.hs\" 7 1) (TypeAnn (Ident \"Foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 7 19) (Lit (Frac (12 % 5))) (TyCon (UnQual (Ident \"Double\"))))))\nTypeSig (SrcLoc \"ann.hs\" 9 1) [Ident \"foo\"] (TyCon (UnQual (Ident \"Foo\")))\nPatBind (SrcLoc \"ann.hs\" 10 1) (PVar (Ident \"foo\")) (UnGuardedRhs (Con (UnQual (Ident \"Foo\")))) (BDecls [])\nAnnPragma (SrcLoc \"ann.hs\" 11 1) (Ann (Ident \"foo\") (Paren (ExpTypeSig (SrcLoc \"ann.hs\" 11 14) (InfixApp (Lit (Int 3)) (QVarOp (UnQual (Symbol \"+\"))) (InfixApp (Lit (Int 2)) (QVarOp (UnQual (Symbol \"*\"))) (Lit (Int 6)))) (TyCon (UnQual (Ident \"Int\"))))))\n```\n\n\u306f\u3044\u3001\u3057\u3063\u304b\u308a\u5404\u30a2\u30ce\u30fc\u30c6\u30fc\u30b7\u30e7\u30f3\u304c\u53d6\u308c\u3066\u3044\u307e\u3059\u306d\u3002\n\n\u3053\u308c\u306f[hlint](https://hackage.haskell.org/package/hlint)\u306e\u51fa\u529b\u3092\u30e2\u30b8\u30e5\u30fc\u30eb\u3001\u578b\u3001\u5024\u5358\u4f4d\u3067\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```warn.hs\nident a = (a)\n```\n\n```console:\n$ hlint warn.hs\nhl-test.hs:1:11: Error: Redundant bracket\nFound:\n  (a)\nWhy not:\n  a\n\n1 suggestion\n```\n\n```ignore.hs\n{-# ANN foo \"HLint: ignore\" #-}\nident a = (a)\n```\n\n```console:\n$ hlint ignore.hs\nNo suggestions (1 ignored)\n```\n\n\u3053\u306e\u69d8\u306b\u3001\u7279\u5225\u306a\u30b3\u30e1\u30f3\u30c8\u306a\u3069\u3067\u5236\u5fa1\u3059\u308b\u306e\u306f\u907f\u3051\u3066\u3001ANN\u30d7\u30e9\u30b0\u30de\u3067\u5236\u5fa1\u3059\u308b\u65b9\u304c\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\n==\n* \u30bf\u30a4\u30c8\u30eb\u3060\u3051\u3067\u30a2\u30ec\u3059\u308b\u3068\u9177\u3044\u4e8b\u306b\u306a\u308b\n* ANN\u3001\u8272\u3005\u9762\u767d\u3052\u306a\u306e\u3067\u3069\u3093\u3069\u3093\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u304a\u306d\u304c\u3044\u3057\u307e\u3059\n\nread more\n==\n* [9.3.\u00a0Compiler Plugins](https://downloads.haskell.org/~ghc/latest/docs/html/users_guide/compiler-plugins.html) -- ghc-plugin\u304b\u3089\u3082\u8997\u3051\u307e\u3059\u3002\u30a2\u30b0\u30ec\u30c3\u30b7\u30d6\u306a\u6700\u9069\u5316\u3068\u304b\u306b\u4f7f\u3046\u3063\u307d\u3044[^SpecConstr]\u3002\n\n------\n\n[^ANNANN]: [\u6027\u306e6\u6642\u9593\u3068\u306f (\u30e4\u30ea\u30de\u30af\u30ea\u30b9\u30de\u30b9\u3068\u306f) [\u5358\u8a9e\u8a18\u4e8b] - \u30cb\u30b3\u30cb\u30b3\u5927\u767e\u79d1](http://dic.nicovideo.jp/a/%E6%80%A7%E3%81%AE6%E6%99%82%E9%96%93)\n[^fun-th]: TH\u306e\u5f15\u6570\u306e\u4ee3\u308f\u308a\u306bANN\u3092\u4f7f\u7528\u3059\u308b\u4e8b\u3067\u3001\u3069\u3053\u304b\u3089TH\u3092\u8aad\u3093\u3067\u3082\u8a2d\u5b9a\u304c\u540c\u3058\u306b\u306a\u308b\u306e\u304c\u7279\u5fb4\u3063\u307d\u3044(aeson\u306ederive\u3068\u304b\u306b\u5411\u3044\u3066\u305d\u3046?\n[^SpecConstr]: \u3082\u3046\u7121\u3044\u3063\u307d\u3044\u304c\u3001[haskell-jp:595](http://www.sampou.org/cgi-bin/w3ml.cgi/haskell-jp/msg/595)\u306e`SpecConstr`\u3068\u304b?\n", "tags": ["Haskell", "ghc7.10.3", "template-haskell", "hlint1.9.25"]}