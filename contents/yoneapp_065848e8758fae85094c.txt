{"tags": ["GraphQL", "Rails", "ActiveRecode", "Ruby"], "context": "Rails\u3067GraphQL\u3092\u3064\u304b\u3046\u305f\u3081\u306b\u306f\u6b21\u306egem\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3046\u3002\nhttps://github.com/rmosolgo/graphql-ruby\nGraphQL\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5bb9\u6613\u306bN+1\u304c\u767a\u751f\u3059\u308b\u3002\n\u305d\u3053\u3067\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u8003\u3048\u305f\u3002\nmodule ShopsResolver\n  def self.call(obj, args, ctx)\n    limit    = args[:limit]\n    order    = args[:order]\n    bookable = args[:bookable]\n\n    shops = Shop.visible\n    shops = shops.limit(limit)              if limit.present?\n    shops = shops.order('RAND()')           if order == \"TRENDING\" # \u4eee\u5b9f\u88c5\n    shops = shops.order('RAND()')           if order == \"RANKING\"  # \u4eee\u5b9f\u88c5\n    shops = shops.where(bookable: bookable) if bookable.present?\n\n    shops = shops.includes(:area)\n    shops = shops.includes(:categories)\n    shops = shops.includes(:shop_categories)\n    shops = shops.includes(:category_subs)\n    shops = shops.includes(:shop_category_subs)\n    shops = shops.includes(:situations)\n\n    shops\n  end\nend\n\n\u3080\u3084\u307f\u306bincludes\u3092\u3064\u3051\u307e\u304f\u308b\u3068\u3001\u4f59\u8a08\u306aSQL\u767a\u884c\u304c\u767a\u751f\u3057\u3066\u826f\u304f\u306a\u3044\u3002\n\u305d\u3053\u3067\u3001\u5bfe\u7b56\u3092\u691c\u7d22\u3057\u305f\u3002\n\nQ: Prevent N+1 queries \u00b7 Issue #189 \u00b7 rmosolgo/graphql-ruby\nPre-loading/Eager loading nested associations \u00b7 Issue #58 \u00b7 rmosolgo/graphql-ruby\n\n\u3068\u308a\u3042\u3048\u305aincludes\u3092\u5168\u90e8\u6d88\u3057\u3066 https://github.com/salsify/goldiloader \u3092\u5165\u308c\u3066\u5bfe\u5fdc\u3057\u305f\u3002\ngoldiloader\u3092\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001GraphQL\u3067\u306f\u3046\u307e\u304f\u52d5\u3044\u305f\u304c\u3001\u4e00\u90e8\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u304b\u306a\u304f\u306a\u3063\u305f\u3002\n\u5f71\u97ff\u7bc4\u56f2\u304c\u5927\u304d\u304b\u3063\u305f\u305f\u3081 https://github.com/Shopify/graphql-batch \u3092\u8a66\u3059\u3053\u3068\u306b\u3057\u305f\uff08\u7d9a\u304f\uff09\nRails\u3067GraphQL\u3092\u3064\u304b\u3046\u305f\u3081\u306b\u306f\u6b21\u306egem\u3092\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3046\u3002\nhttps://github.com/rmosolgo/graphql-ruby\n\nGraphQL\u3092\u5229\u7528\u3059\u308b\u3068\u3001\u5bb9\u6613\u306bN+1\u304c\u767a\u751f\u3059\u308b\u3002\n\u305d\u3053\u3067\u6b21\u306e\u3088\u3046\u306a\u30b3\u30fc\u30c9\u3092\u8003\u3048\u305f\u3002\n\n``` ruby\nmodule ShopsResolver\n  def self.call(obj, args, ctx)\n    limit    = args[:limit]\n    order    = args[:order]\n    bookable = args[:bookable]\n\n    shops = Shop.visible\n    shops = shops.limit(limit)              if limit.present?\n    shops = shops.order('RAND()')           if order == \"TRENDING\" # \u4eee\u5b9f\u88c5\n    shops = shops.order('RAND()')           if order == \"RANKING\"  # \u4eee\u5b9f\u88c5\n    shops = shops.where(bookable: bookable) if bookable.present?\n\n    shops = shops.includes(:area)\n    shops = shops.includes(:categories)\n    shops = shops.includes(:shop_categories)\n    shops = shops.includes(:category_subs)\n    shops = shops.includes(:shop_category_subs)\n    shops = shops.includes(:situations)\n\n    shops\n  end\nend\n```\n\n\u3080\u3084\u307f\u306bincludes\u3092\u3064\u3051\u307e\u304f\u308b\u3068\u3001\u4f59\u8a08\u306aSQL\u767a\u884c\u304c\u767a\u751f\u3057\u3066\u826f\u304f\u306a\u3044\u3002\n\u305d\u3053\u3067\u3001\u5bfe\u7b56\u3092\u691c\u7d22\u3057\u305f\u3002\n\n- [Q: Prevent N+1 queries \u00b7 Issue #189 \u00b7 rmosolgo/graphql-ruby](https://github.com/rmosolgo/graphql-ruby/issues/189)\n- [Pre-loading/Eager loading nested associations \u00b7 Issue #58 \u00b7 rmosolgo/graphql-ruby](https://github.com/rmosolgo/graphql-ruby/issues/58)\n\n\u3068\u308a\u3042\u3048\u305aincludes\u3092\u5168\u90e8\u6d88\u3057\u3066 https://github.com/salsify/goldiloader \u3092\u5165\u308c\u3066\u5bfe\u5fdc\u3057\u305f\u3002\ngoldiloader\u3092\u4f7f\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001GraphQL\u3067\u306f\u3046\u307e\u304f\u52d5\u3044\u305f\u304c\u3001\u4e00\u90e8\u30b7\u30b9\u30c6\u30e0\u304c\u52d5\u304b\u306a\u304f\u306a\u3063\u305f\u3002\n\n\u5f71\u97ff\u7bc4\u56f2\u304c\u5927\u304d\u304b\u3063\u305f\u305f\u3081 https://github.com/Shopify/graphql-batch \u3092\u8a66\u3059\u3053\u3068\u306b\u3057\u305f\uff08\u7d9a\u304f\uff09\n\n"}