{"context": " More than 1 year has passed since last update.\n\n\u8abf\u67fb\u7528\u30af\u30a8\u30ea\n\u52d5\u7684\u7ba1\u7406\u30d3\u30e5\u30fc\u3092\u4f7f\u7528\u3057\u305f SQL Azure \u306e\u76e3\u8996\n\u300c\u30af\u30a8\u30ea \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u76e3\u8996\u300d\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n\u8abf\u67fb\u7528\u30af\u30a8\u30ea\nSELECT TOP 5 query_stats.query_hash AS \"Query Hash\", \n    SUM(query_stats.total_worker_time) / SUM(query_stats.execution_count) AS \"Avg CPU Time\",\n    MIN(query_stats.statement_text) AS \"Statement Text\"\nFROM \n    (SELECT QS.*, \n    SUBSTRING(ST.text, (QS.statement_start_offset/2) + 1,\n    ((CASE statement_end_offset \n        WHEN -1 THEN DATALENGTH(st.text)\n        ELSE QS.statement_end_offset END \n            - QS.statement_start_offset)/2) + 1) AS statement_text\n     FROM sys.dm_exec_query_stats AS QS\n     CROSS APPLY sys.dm_exec_sql_text(QS.sql_handle) as ST) as query_stats\nGROUP BY query_stats.query_hash\nORDER BY 2 DESC;\n\n\n\n\u4ee5\u4e0b\u86c7\u8db3\n\u691c\u8a3c\u3067\u4f7f\u3063\u305f\u6750\u6599\u3067\u3059\u3002\n\u307e\u305a\u306f\u30c6\u30fc\u30d6\u30eb\u3002\n\n\u30c6\u30fc\u30d6\u30eb\ncreate table test01(\n    ymd int not null,\n    h int not null,\n    m int not null,\n    s int not null,\n    primary key (ymd,h,m,s)\n)\n\n\n\u4ee5\u4e0b\u306eSQL\u3092\u5b9f\u884c\u3059\u308b\u306860\u30ec\u30b3\u30fc\u30c9\u304c\u633f\u5165\u3055\u308c\u307e\u3059\u3002\n\uff08\u8abf\u67fb\u7528\u30af\u30a8\u30ea\u306fCPU Time\u3067\u8abf\u67fb\u3092\u884c\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u30c7\u30fc\u30bf\u306f\u5c11\u91cf\u3067\u91cd\u3044SQL\u3092\u5b9f\u884c\u3057\u305f\u3044\uff09\n\n\u30c7\u30fc\u30bf\u751f\u6210\ndeclare @d as datetime\nset @d = sysdatetime()\nset @d = '2015-1-1'\n\nbegin transaction\nwhile @d < '2015-1-1 0:01:00' \nbegin\n    insert into test02 values(year(@d) * 10000 + month(@d) * 100 + day(@d),\n        datepart(hour,@d),datepart(minute,@d),datepart(second,@d));\n    set @d = dateadd(second,1,@d)\nend\ncommit transaction\n\n\n\u305d\u3057\u3066CPU Time\u304c\u5927\u304d\u304f\u306a\u308b\u3088\u3046\u306aSQL\u3067\u3059\u3002\n\n\u8a08\u6e2c\u5bfe\u8c61\u306eSQL\nselect 2,count(*) from test02 a\n inner join test02 b on a.ymd=b.ymd\n inner join test02 c on a.ymd=c.ymd\n inner join test02 d on a.ymd=d.ymd\n inner join test02 e on a.ymd=e.ymd\n\n\n\u5b9f\u884c\u6642\u9593\u304c33\u79d2\u3002\n\u306a\u304a\u3001\u5b9f\u884c\u74b0\u5883\u306fWindows Azure\u3001SQL Database\u306eBASIC\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\nAvg CPU Time\u304c1708400\u3068\u51fa\u3066\u3044\u307e\u3059\u3002\n\nAzure\u30dd\u30fc\u30bf\u30eb\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3068DATA IO\u304c0%\u3067CPU\u304c\u3044\u3063\u3071\u3044\u56de\u3063\u3066\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n#\u8abf\u67fb\u7528\u30af\u30a8\u30ea\n\n[\u52d5\u7684\u7ba1\u7406\u30d3\u30e5\u30fc\u3092\u4f7f\u7528\u3057\u305f SQL Azure \u306e\u76e3\u8996](https://technet.microsoft.com/ja-jp/library/gg457940.aspx)\n\u300c\u30af\u30a8\u30ea \u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u76e3\u8996\u300d\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n\n```sql:\u8abf\u67fb\u7528\u30af\u30a8\u30ea\nSELECT TOP 5 query_stats.query_hash AS \"Query Hash\", \n    SUM(query_stats.total_worker_time) / SUM(query_stats.execution_count) AS \"Avg CPU Time\",\n    MIN(query_stats.statement_text) AS \"Statement Text\"\nFROM \n    (SELECT QS.*, \n    SUBSTRING(ST.text, (QS.statement_start_offset/2) + 1,\n    ((CASE statement_end_offset \n        WHEN -1 THEN DATALENGTH(st.text)\n        ELSE QS.statement_end_offset END \n            - QS.statement_start_offset)/2) + 1) AS statement_text\n     FROM sys.dm_exec_query_stats AS QS\n     CROSS APPLY sys.dm_exec_sql_text(QS.sql_handle) as ST) as query_stats\nGROUP BY query_stats.query_hash\nORDER BY 2 DESC;\n```\n\n#\u4ee5\u4e0b\u86c7\u8db3\n\u691c\u8a3c\u3067\u4f7f\u3063\u305f\u6750\u6599\u3067\u3059\u3002\n\u307e\u305a\u306f\u30c6\u30fc\u30d6\u30eb\u3002\n\n```sql:\u30c6\u30fc\u30d6\u30eb\ncreate table test01(\n    ymd int not null,\n    h int not null,\n    m int not null,\n    s int not null,\n    primary key (ymd,h,m,s)\n)\n```\n\n\u4ee5\u4e0b\u306eSQL\u3092\u5b9f\u884c\u3059\u308b\u306860\u30ec\u30b3\u30fc\u30c9\u304c\u633f\u5165\u3055\u308c\u307e\u3059\u3002\n\uff08\u8abf\u67fb\u7528\u30af\u30a8\u30ea\u306fCPU Time\u3067\u8abf\u67fb\u3092\u884c\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u5b9f\u30c7\u30fc\u30bf\u306f\u5c11\u91cf\u3067\u91cd\u3044SQL\u3092\u5b9f\u884c\u3057\u305f\u3044\uff09\n\n```sql:\u30c7\u30fc\u30bf\u751f\u6210\ndeclare @d as datetime\nset @d = sysdatetime()\nset @d = '2015-1-1'\n\nbegin transaction\nwhile @d < '2015-1-1 0:01:00' \nbegin\n    insert into test02 values(year(@d) * 10000 + month(@d) * 100 + day(@d),\n        datepart(hour,@d),datepart(minute,@d),datepart(second,@d));\n    set @d = dateadd(second,1,@d)\nend\ncommit transaction\n```\n\n\u305d\u3057\u3066CPU Time\u304c\u5927\u304d\u304f\u306a\u308b\u3088\u3046\u306aSQL\u3067\u3059\u3002\n\n```sql:\u8a08\u6e2c\u5bfe\u8c61\u306eSQL\nselect 2,count(*) from test02 a\n inner join test02 b on a.ymd=b.ymd\n inner join test02 c on a.ymd=c.ymd\n inner join test02 d on a.ymd=d.ymd\n inner join test02 e on a.ymd=e.ymd\n```\n\n\u5b9f\u884c\u6642\u9593\u304c33\u79d2\u3002\n\u306a\u304a\u3001\u5b9f\u884c\u74b0\u5883\u306fWindows Azure\u3001SQL Database\u306eBASIC\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n![001.PNG](https://qiita-image-store.s3.amazonaws.com/0/70056/d01da029-451b-4c33-c8b0-60bd8604ed52.png)\n\nAvg CPU Time\u304c1708400\u3068\u51fa\u3066\u3044\u307e\u3059\u3002\n\n![002.PNG](https://qiita-image-store.s3.amazonaws.com/0/70056/f5753f5d-0bdc-d0cb-8fa1-6463f0f7a637.png)\n\nAzure\u30dd\u30fc\u30bf\u30eb\u304b\u3089\u78ba\u8a8d\u3059\u308b\u3068DATA IO\u304c0%\u3067CPU\u304c\u3044\u3063\u3071\u3044\u56de\u3063\u3066\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3059\u3002\n\n![003.png](https://qiita-image-store.s3.amazonaws.com/0/70056/bac382d0-84f6-421a-35ab-cfd5df0bac5c.png)\n", "tags": ["SQLServer"]}