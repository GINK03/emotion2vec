{"context": " More than 1 year has passed since last update.\n\n\n\u554f\u984c\nhttps://paiza.jp/poh/paizen\n\n\n\n\n\u30bf\u30a4\u30e0\u4e00\u89a7/Ruby/C/C++/C&sharp;/Java\nhttp://qiita.com/cielavenir/items/17f66daa2be639fd74f3\n\n\nPerl/PHP/Python\nhttp://qiita.com/cielavenir/items/5b57808a28a8b4c5c7b2\n\n\nJavaScript\nhttp://qiita.com/cielavenir/items/9dab2bfbcfa0047b345f\n\n\nCoffeeScript/Go/Scala/VB/F&sharp;\nhttp://qiita.com/cielavenir/items/32591dd03376ba534d1e\n\n\n\nCoffeeScript\n\npaizapoh2.coffee\n#!/usr/bin/env coffee\nT=[]\nstdin = process.openStdin()\nstdin.setEncoding('utf8')\n\ninput_fragment=''\nstdin.on 'data', (input) ->\n        ref=(input_fragment+input).split(\"\\n\")\n        input_fragment=ref.pop()\n        for i in [0...ref.length]\n            if ref[i]==''\n                continue\n            T.push(ref[i])\n\n\nstdin.on 'end', (z) ->\n    if input_fragment\n        ref=(input_fragment+\"\\n\").split(\"\\n\")\n        input_fragment=ref.pop()\n        for i in [0...ref.length]\n            if ref[i]==''\n                continue\n            T.push(ref[i])\n    arg=T[0].split(' ').map(Number)\n    h=arg[0]\n    w=arg[1]\n    a=Array(h)\n    for i in [0...h]\n        line=T[1+i]\n        a[i]=Array(w)\n        for j in [0...w]\n            a[i][j]=Array(h)\n            a[i][j][0]=line[j]^1\n    accum=Array(h)\n    for i in [0...h]\n        accum[i]=Array(w+1)\n        for j in [0..w]\n            accum[i][j]=0;\n    for i in [0...h]\n        accum[0][a[i][0][0]]++\n        for j in [1...w]\n            if a[i][j][0]\n                a[i][j][0]+=a[i][j-1][0]\n                accum[0][a[i][j][0]]++\n    for i in [1...h]\n        for j in [0...w]\n            for k in [1..i]\n                a[i][j][k]=a[i-1][j][k-1]\n                if a[i][j][k]>a[i][j][k-1]\n                    a[i][j][k]=a[i][j][k-1]\n                if !a[i][j][k]\n                    break\n                accum[k][a[i][j][k]]++\n    for i in [0...h]\n        for j in [0...w]\n            accum[i][w-1-j]+=accum[i][w-1-j+1]\n    k=Number(T[1+h])\n    for i in [0...k]\n        arg=T[1+h+1+i].split(' ').map(Number)\n        s=arg[0]\n        t=arg[1]\n        console.log(if s<=h&&t<=w then accum[s-1][t] else 0)\n\n\nGo\n\u591a\u6b21\u5143\u914d\u5217\u3092\u76f4\u63a5\u5ba3\u8a00\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001C\u3068\u540c\u69d8\u306b\u6700\u5927\u5024\u56fa\u5b9a\u3067\u3002\n\npaizapoh2.go\npackage main\nimport(\n    \"fmt\"\n    \"os\"\n    \"text/scanner\"\n    \"strconv\"\n)\n\nvar sin scanner.Scanner\nfunc scanint() int{\n    sin.Scan()\n    ret,_ := strconv.Atoi(sin.TokenText())\n    return ret\n}\n\nfunc main(){\n    //wtf?\n    var a [300][300][300]int\n    var accum [300][301]int\n\n    sin.Init(os.Stdin)\n    h:=scanint()\n    w:=scanint()\n\n    for i:=0;i<h;i++ {\n        sin.Scan()\n        line:=sin.TokenText()\n        for j:=0;j<w;j++ {a[i][j][0]=(int)(line[j]-'0')^1}\n    }\n    for i:=0;i<h;i++ {\n        accum[0][a[i][0][0]]++\n        for j:=1;j<w;j++ {\n            if a[i][j][0]>0 {\n                a[i][j][0]+=a[i][j-1][0]\n                accum[0][a[i][j][0]]++\n            }\n        }\n    }\n    for i:=1;i<h;i++ {\n        for j:=0;j<w;j++ {\n            for k:=1;k<=i;k++ {\n                a[i][j][k]=a[i-1][j][k-1]\n                if a[i-1][j][k-1]>a[i][j][k-1] { a[i][j][k]=a[i][j][k-1] }\n                if a[i][j][k]==0 {break}\n                accum[k][a[i][j][k]]++\n            }\n        }\n    }\n    for i:=0;i<h;i++ {\n        for j:=w-1;j>=0;j-- {\n            accum[i][j]+=accum[i][j+1]\n        }\n    }\n    for k:=scanint();k>0;k-- {\n        s:=scanint()\n        t:=scanint()\n        if s<=h&&t<=w {\n            fmt.Println(accum[s-1][t])\n        } else {\n            fmt.Println(0)\n        }\n    }\n}\n\n\nScala\n\npaizapoh2.scala\nimport scala.util.control.Breaks\nobject Main extends App{\n    val Array(h,w) = readLine().split(\" \").map(_.toInt)\n    val a=Array.ofDim[Int](h,w,h)\n    val accum=Array.ofDim[Int](h,w+1)\n    for(i<-0 to h-1){\n        val line=readLine();\n        for(j<-0 to w-1)a(i)(j)(0)=(line.charAt(j)-'0')^1\n    }\n    for(i<-0 to h-1){\n        accum(0)(a(i)(0)(0))+=1\n        for(j<-1 to w-1){\n            if(a(i)(j)(0)>0){\n                a(i)(j)(0)+=a(i)(j-1)(0)\n                accum(0)(a(i)(j)(0))+=1\n            }\n        }\n    }\n    val b=new Breaks\n    for(i<-1 to h-1){\n        for(j<-0 to w-1){\n            b.breakable{\n                for(k<-1 to i){\n                    a(i)(j)(k)=Math.min(a(i-1)(j)(k-1),a(i)(j)(k-1))\n                    if(a(i)(j)(k)==0)b.break\n                    accum(k)(a(i)(j)(k))+=1\n                }\n            }\n        }\n    }\n    for(i<-0 to h-1){\n        for(j<-w-1 to 0 by -1)accum(i)(j)+=accum(i)(j+1)\n    }\n    val K=readInt()\n    for(k<-1 to K){\n        val Array(s,t) = readLine().split(\" \").map(_.toInt)\n        println(if(s<=h&&t<=w) accum(s-1)(t) else 0)\n    }\n}\n\n\nVB\n\npaizapoh2.vb\nmodule PaizaPOH2\n    dim SIZE as integer=9999999\n    dim z(SIZE-1) as byte\n    dim input_count as integer=0\n\n    function myget() as integer\n        dim r as integer\n        while 48<=z(input_count) andalso z(input_count)<=57\n            r=r*10+z(input_count)-48\n            input_count+=1\n        end while\n        input_count+=1\n        return r\n    end function\n    function mygetC() as integer\n        input_count+=1\n        return z(input_count-1)\n    end function\n\n    sub Main()\n        Console.OpenStandardInput().Read(z,0,SIZE)\n        dim h as integer=myget()\n        dim w as integer=myget()\n        dim a(h-1,w-1,h-1) as integer\n        dim accum(h-1,w) as integer\n        for i as integer=0 to h-1\n            for j as integer=0 to w-1\n                a(i,j,0)=(mygetC()-48) xor 1\n            next\n            mygetC()\n        next\n        for i as integer=0 to h-1\n            accum(0,a(i,0,0))+=1\n            for j as integer=1 to w-1\n                if a(i,j,0)>0\n                    a(i,j,0)+=a(i,j-1,0)\n                    accum(0,a(i,j,0))+=1\n                end if\n            next\n        next\n        for i as integer=1 to h-1\n            for j as integer=0 to w-1\n                for k as integer=1 to i\n                    a(i,j,k)=Math.min(a(i-1,j,k-1),a(i,j,k-1))\n                    if a(i,j,k)=0\n                        exit for\n                    end if\n                    accum(k,a(i,j,k))+=1\n                next\n            next\n        next\n        for i as integer=0 to h-1\n            for j as integer=w-1 to 0 step -1\n                accum(i,j)+=accum(i,j+1)\n            next\n        next\n        dim k as integer=myget()\n        while k>0\n            dim s as integer=myget()\n            dim t as integer=myget()\n            Console.WriteLine(if(s<=h andalso t<=w,accum(s-1,t),0))\n            k-=1\n        end while\n    end sub\nend module\n\n\nF&sharp;\n\npaizapoh5.fs\nopen System\nlet arg:String array=Console.ReadLine().Split(' ')\nlet h=int(arg.[0])\nlet w=int(arg.[1])\nlet a:int [,,]=Array3D.zeroCreate h w h\nlet accum:int [,]=Array2D.zeroCreate h (w+1)\nfor i in 0..h-1 do\n let s=Console.ReadLine()\n for j in 0..w-1 do\n  a.[i,j,0]<-1-((int s.[j])-48)\nfor i in 0..h-1 do\n accum.[0,a.[i,0,0]]<-accum.[0,a.[i,0,0]]+1\n for j in 1..w-1 do\n  if a.[i,j,0]>0 then\n   a.[i,j,0]<-a.[i,j,0]+a.[i,j-1,0]\n   accum.[0,a.[i,j,0]]<-accum.[0,a.[i,j,0]]+1\nfor i in 1..h-1 do\n for j in 0..w-1 do\n  for k in 1..i do\n   a.[i,j,k]<-Math.Min(a.[i-1,j,k-1],a.[i,j,k-1])\n   if a.[i,j,k]>0 then\n    // break is preferred here actually\n    accum.[k,a.[i,j,k]]<-accum.[k,a.[i,j,k]]+1\nfor i in 0..h-1 do\n for j in w-1..-1..0 do\n  accum.[i,j]<-accum.[i,j]+accum.[i,j+1]\nlet k=int(Console.ReadLine())\nfor i in 0..k-1 do\n let arg:String array=Console.ReadLine().Split(' ')\n let s=int(arg.[0])\n let t=int(arg.[1])\n if s<=h&&t<=w then\n  Console.WriteLine(accum.[s-1,t])\n else\n  Console.WriteLine(0)\n\n\n|\u554f\u984c|https://paiza.jp/poh/paizen|\n|:--|:--|\n|\u30bf\u30a4\u30e0\u4e00\u89a7/Ruby/C/C++/C&sharp;/Java|http://qiita.com/cielavenir/items/17f66daa2be639fd74f3|\n|Perl/PHP/Python|http://qiita.com/cielavenir/items/5b57808a28a8b4c5c7b2|\n|JavaScript|http://qiita.com/cielavenir/items/9dab2bfbcfa0047b345f|\n|CoffeeScript/Go/Scala/VB/F&sharp;|http://qiita.com/cielavenir/items/32591dd03376ba534d1e|\n\nCoffeeScript\n\n```coffee:paizapoh2.coffee\n#!/usr/bin/env coffee\nT=[]\nstdin = process.openStdin()\nstdin.setEncoding('utf8')\n\ninput_fragment=''\nstdin.on 'data', (input) ->\n\t\tref=(input_fragment+input).split(\"\\n\")\n\t\tinput_fragment=ref.pop()\n\t\tfor i in [0...ref.length]\n\t\t\tif ref[i]==''\n\t\t\t\tcontinue\n\t\t\tT.push(ref[i])\n\n\nstdin.on 'end', (z) ->\n\tif input_fragment\n\t\tref=(input_fragment+\"\\n\").split(\"\\n\")\n\t\tinput_fragment=ref.pop()\n\t\tfor i in [0...ref.length]\n\t\t\tif ref[i]==''\n\t\t\t\tcontinue\n\t\t\tT.push(ref[i])\n\targ=T[0].split(' ').map(Number)\n\th=arg[0]\n\tw=arg[1]\n\ta=Array(h)\n\tfor i in [0...h]\n\t\tline=T[1+i]\n\t\ta[i]=Array(w)\n\t\tfor j in [0...w]\n\t\t\ta[i][j]=Array(h)\n\t\t\ta[i][j][0]=line[j]^1\n\taccum=Array(h)\n\tfor i in [0...h]\n\t\taccum[i]=Array(w+1)\n\t\tfor j in [0..w]\n\t\t\taccum[i][j]=0;\n\tfor i in [0...h]\n\t\taccum[0][a[i][0][0]]++\n\t\tfor j in [1...w]\n\t\t\tif a[i][j][0]\n\t\t\t\ta[i][j][0]+=a[i][j-1][0]\n\t\t\t\taccum[0][a[i][j][0]]++\n\tfor i in [1...h]\n\t\tfor j in [0...w]\n\t\t\tfor k in [1..i]\n\t\t\t\ta[i][j][k]=a[i-1][j][k-1]\n\t\t\t\tif a[i][j][k]>a[i][j][k-1]\n\t\t\t\t\ta[i][j][k]=a[i][j][k-1]\n\t\t\t\tif !a[i][j][k]\n\t\t\t\t\tbreak\n\t\t\t\taccum[k][a[i][j][k]]++\n\tfor i in [0...h]\n\t\tfor j in [0...w]\n\t\t\taccum[i][w-1-j]+=accum[i][w-1-j+1]\n\tk=Number(T[1+h])\n\tfor i in [0...k]\n\t\targ=T[1+h+1+i].split(' ').map(Number)\n\t\ts=arg[0]\n\t\tt=arg[1]\n\t\tconsole.log(if s<=h&&t<=w then accum[s-1][t] else 0)\n```\n\nGo\n\u591a\u6b21\u5143\u914d\u5217\u3092\u76f4\u63a5\u5ba3\u8a00\u3059\u308b\u65b9\u6cd5\u304c\u306a\u3044\u3089\u3057\u3044\u306e\u3067\u3001C\u3068\u540c\u69d8\u306b\u6700\u5927\u5024\u56fa\u5b9a\u3067\u3002\n\n```go:paizapoh2.go\npackage main\nimport(\n\t\"fmt\"\n\t\"os\"\n\t\"text/scanner\"\n\t\"strconv\"\n)\n\nvar sin scanner.Scanner\nfunc scanint() int{\n\tsin.Scan()\n\tret,_ := strconv.Atoi(sin.TokenText())\n\treturn ret\n}\n\nfunc main(){\n\t//wtf?\n\tvar a [300][300][300]int\n\tvar accum [300][301]int\n\n\tsin.Init(os.Stdin)\n\th:=scanint()\n\tw:=scanint()\n\n\tfor i:=0;i<h;i++ {\n\t\tsin.Scan()\n\t\tline:=sin.TokenText()\n\t\tfor j:=0;j<w;j++ {a[i][j][0]=(int)(line[j]-'0')^1}\n\t}\n\tfor i:=0;i<h;i++ {\n\t\taccum[0][a[i][0][0]]++\n\t\tfor j:=1;j<w;j++ {\n\t\t\tif a[i][j][0]>0 {\n\t\t\t\ta[i][j][0]+=a[i][j-1][0]\n\t\t\t\taccum[0][a[i][j][0]]++\n\t\t\t}\n\t\t}\n\t}\n\tfor i:=1;i<h;i++ {\n\t\tfor j:=0;j<w;j++ {\n\t\t\tfor k:=1;k<=i;k++ {\n\t\t\t\ta[i][j][k]=a[i-1][j][k-1]\n\t\t\t\tif a[i-1][j][k-1]>a[i][j][k-1] { a[i][j][k]=a[i][j][k-1] }\n\t\t\t\tif a[i][j][k]==0 {break}\n\t\t\t\taccum[k][a[i][j][k]]++\n\t\t\t}\n\t\t}\n\t}\n\tfor i:=0;i<h;i++ {\n\t\tfor j:=w-1;j>=0;j-- {\n\t\t\taccum[i][j]+=accum[i][j+1]\n\t\t}\n\t}\n\tfor k:=scanint();k>0;k-- {\n\t\ts:=scanint()\n\t\tt:=scanint()\n\t\tif s<=h&&t<=w {\n\t\t\tfmt.Println(accum[s-1][t])\n\t\t} else {\n\t\t\tfmt.Println(0)\n\t\t}\n\t}\n}\n```\n\nScala\n\n```scala:paizapoh2.scala\nimport scala.util.control.Breaks\nobject Main extends App{\n\tval Array(h,w) = readLine().split(\" \").map(_.toInt)\n\tval a=Array.ofDim[Int](h,w,h)\n\tval accum=Array.ofDim[Int](h,w+1)\n\tfor(i<-0 to h-1){\n\t\tval line=readLine();\n\t\tfor(j<-0 to w-1)a(i)(j)(0)=(line.charAt(j)-'0')^1\n\t}\n\tfor(i<-0 to h-1){\n\t\taccum(0)(a(i)(0)(0))+=1\n\t\tfor(j<-1 to w-1){\n\t\t\tif(a(i)(j)(0)>0){\n\t\t\t\ta(i)(j)(0)+=a(i)(j-1)(0)\n\t\t\t\taccum(0)(a(i)(j)(0))+=1\n\t\t\t}\n\t\t}\n\t}\n\tval b=new Breaks\n\tfor(i<-1 to h-1){\n\t\tfor(j<-0 to w-1){\n\t\t\tb.breakable{\n\t\t\t\tfor(k<-1 to i){\n\t\t\t\t\ta(i)(j)(k)=Math.min(a(i-1)(j)(k-1),a(i)(j)(k-1))\n\t\t\t\t\tif(a(i)(j)(k)==0)b.break\n\t\t\t\t\taccum(k)(a(i)(j)(k))+=1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tfor(i<-0 to h-1){\n\t\tfor(j<-w-1 to 0 by -1)accum(i)(j)+=accum(i)(j+1)\n\t}\n\tval K=readInt()\n\tfor(k<-1 to K){\n\t\tval Array(s,t) = readLine().split(\" \").map(_.toInt)\n\t\tprintln(if(s<=h&&t<=w) accum(s-1)(t) else 0)\n\t}\n}\n```\n\nVB\n\n```vbnet:paizapoh2.vb\nmodule PaizaPOH2\n\tdim SIZE as integer=9999999\n\tdim z(SIZE-1) as byte\n\tdim input_count as integer=0\n\n\tfunction myget() as integer\n\t\tdim r as integer\n\t\twhile 48<=z(input_count) andalso z(input_count)<=57\n\t\t\tr=r*10+z(input_count)-48\n\t\t\tinput_count+=1\n\t\tend while\n\t\tinput_count+=1\n\t\treturn r\n\tend function\n\tfunction mygetC() as integer\n\t\tinput_count+=1\n\t\treturn z(input_count-1)\n\tend function\n\n\tsub Main()\n\t\tConsole.OpenStandardInput().Read(z,0,SIZE)\n\t\tdim h as integer=myget()\n\t\tdim w as integer=myget()\n\t\tdim a(h-1,w-1,h-1) as integer\n\t\tdim accum(h-1,w) as integer\n\t\tfor i as integer=0 to h-1\n\t\t\tfor j as integer=0 to w-1\n\t\t\t\ta(i,j,0)=(mygetC()-48) xor 1\n\t\t\tnext\n\t\t\tmygetC()\n\t\tnext\n\t\tfor i as integer=0 to h-1\n\t\t\taccum(0,a(i,0,0))+=1\n\t\t\tfor j as integer=1 to w-1\n\t\t\t\tif a(i,j,0)>0\n\t\t\t\t\ta(i,j,0)+=a(i,j-1,0)\n\t\t\t\t\taccum(0,a(i,j,0))+=1\n\t\t\t\tend if\n\t\t\tnext\n\t\tnext\n\t\tfor i as integer=1 to h-1\n\t\t\tfor j as integer=0 to w-1\n\t\t\t\tfor k as integer=1 to i\n\t\t\t\t\ta(i,j,k)=Math.min(a(i-1,j,k-1),a(i,j,k-1))\n\t\t\t\t\tif a(i,j,k)=0\n\t\t\t\t\t\texit for\n\t\t\t\t\tend if\n\t\t\t\t\taccum(k,a(i,j,k))+=1\n\t\t\t\tnext\n\t\t\tnext\n\t\tnext\n\t\tfor i as integer=0 to h-1\n\t\t\tfor j as integer=w-1 to 0 step -1\n\t\t\t\taccum(i,j)+=accum(i,j+1)\n\t\t\tnext\n\t\tnext\n\t\tdim k as integer=myget()\n\t\twhile k>0\n\t\t\tdim s as integer=myget()\n\t\t\tdim t as integer=myget()\n\t\t\tConsole.WriteLine(if(s<=h andalso t<=w,accum(s-1,t),0))\n\t\t\tk-=1\n\t\tend while\n\tend sub\nend module\n```\n\nF&sharp;\n\n```fsharp:paizapoh5.fs\nopen System\nlet arg:String array=Console.ReadLine().Split(' ')\nlet h=int(arg.[0])\nlet w=int(arg.[1])\nlet a:int [,,]=Array3D.zeroCreate h w h\nlet accum:int [,]=Array2D.zeroCreate h (w+1)\nfor i in 0..h-1 do\n let s=Console.ReadLine()\n for j in 0..w-1 do\n  a.[i,j,0]<-1-((int s.[j])-48)\nfor i in 0..h-1 do\n accum.[0,a.[i,0,0]]<-accum.[0,a.[i,0,0]]+1\n for j in 1..w-1 do\n  if a.[i,j,0]>0 then\n   a.[i,j,0]<-a.[i,j,0]+a.[i,j-1,0]\n   accum.[0,a.[i,j,0]]<-accum.[0,a.[i,j,0]]+1\nfor i in 1..h-1 do\n for j in 0..w-1 do\n  for k in 1..i do\n   a.[i,j,k]<-Math.Min(a.[i-1,j,k-1],a.[i,j,k-1])\n   if a.[i,j,k]>0 then\n    // break is preferred here actually\n    accum.[k,a.[i,j,k]]<-accum.[k,a.[i,j,k]]+1\nfor i in 0..h-1 do\n for j in w-1..-1..0 do\n  accum.[i,j]<-accum.[i,j]+accum.[i,j+1]\nlet k=int(Console.ReadLine())\nfor i in 0..k-1 do\n let arg:String array=Console.ReadLine().Split(' ')\n let s=int(arg.[0])\n let t=int(arg.[1])\n if s<=h&&t<=w then\n  Console.WriteLine(accum.[s-1,t])\n else\n  Console.WriteLine(0)\n```\n", "tags": ["Go", "Scala", "CoffeeScript", "VB.Net", "F#"]}