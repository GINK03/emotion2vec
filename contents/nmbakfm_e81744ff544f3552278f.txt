{"context": " More than 1 year has passed since last update.\n\nRunge-Kutta\u6cd5\u3067\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u3044\u305f\u3089\u3061\u3087\u3063\u3068\u611f\u52d5\u3057\u305f\u8a71\n\n\u7d4c\u7def\n\u5f8c\u8f29\u304c\u7814\u7a76\u3068\u3057\u3066\u3001\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u3001VR\u3067\u904a\u3079\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u3044\u305f\u3002\u7a7a\u6c17\u62b5\u6297\u3068\u304b\u7d50\u69cb\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3001\u8907\u96d1\u306a\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304b\u306a\u304d\u3083\u306a\u3089\u306a\u3044\u3063\u307d\u3044\u3002\u3093\u3067\u3001\u5927\u5b66\u6642\u4ee3\u306b\u30ab\u30aa\u30b9\u3068\u304b\u3084\u3063\u3066\u305f\u81ea\u5206\u306b\u300cRunge-Kutta\u6cd5\u300d\u6559\u3048\u3066\uff01\u307f\u305f\u3044\u306b\u6765\u305f\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\nRunge-Kutta\u6cd5\u3063\u3066\u306a\u3093\u3058\u3083\u3044\uff01\nhttp://hooktail.org/computer/index.php?Runge-Kutta%CB%A1\n\u2191\u3092\u53c2\u7167\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u3053\u3053\u3092\u5927\u3044\u306b\u53c2\u8003\u306b\u3057\u305f\u3002\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\u8a00\u8a9e\u306fC++\u3067\u3059\u3002\nRungeKutta.hpp\n#ifndef RungeKutta_hpp\n#define RungeKutta_hpp\n\n#include <stdio.h>\n\nclass RungeKutta {\n    float * result;\n    int num;\n    void calculateNextStep(float (*f[])(float t, float *x), float t0, float *x, float tn, int num);\n\npublic:\n    RungeKutta(){};\n    RungeKutta(float (*f[])(float t, float *x), float t0, float tn, float *x, int div, int num);\n    float getValue(int step, int index);\n};\n\n#endif /* RungeKutta_hpp */\n\nRungeKutta.cpp\n#include \"RungeKutta.hpp\"\n\nfloat RungeKutta::getValue(int step, int index){\n    return result[step*num + index];\n}\n\nRungeKutta::RungeKutta(float (*f[])(float t, float *x), float t0, float tn, float *x, int div, int _num){\n    num = _num;\n    result = new float[div*num];\n    float h = (tn - t0)/div;\n    for(int i=0; i<div; ++i){\n        calculateNextStep(f, t0, x, t0+h, num);\n        for(int j=0; j<num; ++j){\n            result[i*num+j] = x[j];\n            t0 += h;\n        }\n    }\n}\n\n\nvoid RungeKutta::calculateNextStep(float (*f[])(float t, float *x), float t0, float *x, float tn, int num){\n    float k1[num], k2[num], k3[num], k4[num], tmp[num];\n\n    float h = (tn - t0);\n\n    float t = t0;\n\n    for(int j=0; j<num; j++){\n        k1[j] = (*f[j])(t, x);\n\n        tmp[j] = x[j] + h*k1[j]/2;\n        k2[j] = (*f[j])(t+h/2, tmp);\n\n        tmp[j] = x[j] + h*k2[j]/2;\n        k3[j] = (*f[j])(t+h/2, tmp);\n\n        tmp[j] = x[j] + h*k3[j];\n        k4[j] = (*f[j])(t+h, tmp);\n\n        x[j] += (k1[j] + 2*k2[j] + 2*k3[j] + k4[j])*h/6;\n    }\n}\n\n\n\n\u4f7f\u3044\u65b9\n\u6e1b\u8870\u632f\u52d5\u306e\u4ee5\u4e0b\u306e\u5f0f\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306by\u3092\u5b9a\u7fa9\u3059\u308b\u3068\n\n\n\u306e2\u3064\u306e1\u968e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306b\u5206\u89e3\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092_f0, _f1\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3001RungeKutta\u306b\u304b\u3051\u308b\u3002\n#define LOOP 10000\n\nfloat _f0(float t, float * x){\n    return x[1];\n}\n\nfloat _f1(float t, float * x){\n    return - x[0] - 0.2 * x[1];\n}\n\nfloat (*f[2])(float, float*);\n\nf[0] = _f0;\nf[1] = _f1;\n\nfloat initialValues[] = {30.0, 0.0};\n\nRungeKutta rk = RungeKutta(f, 0, 30, initialValues, LOOP, 2);\nfor(int i=0; i<LOOP; ++i){\n  cout << rk.getValue(i, 0) + ofGetHeight()/2 << endl;\n}\n\n\n\u7d50\u679c\nopenFrameworks\u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3057\u3066\u3084\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n\u3061\u3083\u3093\u3068\u6e1b\u8870\u632f\u52d5\u3057\u3066\u308b\uff01\n\n\u62d9\u30d6\u30ed\u30b0\u304b\u3089\u306e\u8ee2\u8f09\n# Runge-Kutta\u6cd5\u3067\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u3044\u305f\u3089\u3061\u3087\u3063\u3068\u611f\u52d5\u3057\u305f\u8a71\n\n## \u7d4c\u7def\n\n\u5f8c\u8f29\u304c\u7814\u7a76\u3068\u3057\u3066\u3001\u7269\u7406\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3057\u3066\u3001VR\u3067\u904a\u3079\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u3044\u305f\u3002\u7a7a\u6c17\u62b5\u6297\u3068\u304b\u7d50\u69cb\u8003\u3048\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u307f\u305f\u3044\u3067\u3001\u8907\u96d1\u306a\u5fae\u5206\u65b9\u7a0b\u5f0f\u3092\u89e3\u304b\u306a\u304d\u3083\u306a\u3089\u306a\u3044\u3063\u307d\u3044\u3002\u3093\u3067\u3001\u5927\u5b66\u6642\u4ee3\u306b\u30ab\u30aa\u30b9\u3068\u304b\u3084\u3063\u3066\u305f\u81ea\u5206\u306b\u300cRunge-Kutta\u6cd5\u300d\u6559\u3048\u3066\uff01\u307f\u305f\u3044\u306b\u6765\u305f\u306e\u3067\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n## Runge-Kutta\u6cd5\u3063\u3066\u306a\u3093\u3058\u3083\u3044\uff01\n\nhttp://hooktail.org/computer/index.php?Runge-Kutta%CB%A1\n\n\u2191\u3092\u53c2\u7167\u3002\u30d7\u30ed\u30b0\u30e9\u30e0\u3082\u3053\u3053\u3092\u5927\u3044\u306b\u53c2\u8003\u306b\u3057\u305f\u3002\n\n## \u30d7\u30ed\u30b0\u30e9\u30e0\n\n\u8a00\u8a9e\u306fC++\u3067\u3059\u3002\n\n**RungeKutta.hpp**\n\n```\n#ifndef RungeKutta_hpp\n#define RungeKutta_hpp\n\n#include <stdio.h>\n\nclass RungeKutta {\n    float * result;\n    int num;\n    void calculateNextStep(float (*f[])(float t, float *x), float t0, float *x, float tn, int num);\n    \npublic:\n    RungeKutta(){};\n    RungeKutta(float (*f[])(float t, float *x), float t0, float tn, float *x, int div, int num);\n    float getValue(int step, int index);\n};\n\n#endif /* RungeKutta_hpp */\n```\n\n**RungeKutta.cpp**\n\n```\n#include \"RungeKutta.hpp\"\n\nfloat RungeKutta::getValue(int step, int index){\n    return result[step*num + index];\n}\n\nRungeKutta::RungeKutta(float (*f[])(float t, float *x), float t0, float tn, float *x, int div, int _num){\n    num = _num;\n    result = new float[div*num];\n    float h = (tn - t0)/div;\n    for(int i=0; i<div; ++i){\n        calculateNextStep(f, t0, x, t0+h, num);\n        for(int j=0; j<num; ++j){\n            result[i*num+j] = x[j];\n            t0 += h;\n        }\n    }\n}\n\n\nvoid RungeKutta::calculateNextStep(float (*f[])(float t, float *x), float t0, float *x, float tn, int num){\n    float k1[num], k2[num], k3[num], k4[num], tmp[num];\n    \n    float h = (tn - t0);\n    \n    float t = t0;\n    \n    for(int j=0; j<num; j++){\n        k1[j] = (*f[j])(t, x);\n        \n        tmp[j] = x[j] + h*k1[j]/2;\n        k2[j] = (*f[j])(t+h/2, tmp);\n        \n        tmp[j] = x[j] + h*k2[j]/2;\n        k3[j] = (*f[j])(t+h/2, tmp);\n        \n        tmp[j] = x[j] + h*k3[j];\n        k4[j] = (*f[j])(t+h, tmp);\n        \n        x[j] += (k1[j] + 2*k2[j] + 2*k3[j] + k4[j])*h/6;\n    }\n}\n\n```\n\n## \u4f7f\u3044\u65b9\n\u6e1b\u8870\u632f\u52d5\u306e\u4ee5\u4e0b\u306e\u5f0f\u3092\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\n\n![\u6e1b\u8870\u632f\u52d5](http://chart.apis.google.com/chart?cht=tx&amp;chf=bg,s,ffffff00&chco=000000ff&amp;chs=50&chl=%5Cfrac%7Bd%5E2x%7D%7Bdt%5E2%7D%20%3D%20-kx-b%5Cfrac{dx}{dt})\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306by\u3092\u5b9a\u7fa9\u3059\u308b\u3068\n\n![\u6e1b\u8870\u632f\u52d5](http://chart.apis.google.com/chart?cht=tx&amp;chf=bg,s,ffffff00&chco=000000ff&amp;chs=50&chl=%5Cfrac{dx}{dt}%3Dy)\n\n![\u6e1b\u8870\u632f\u52d5](http://chart.apis.google.com/chart?cht=tx&amp;chf=bg,s,ffffff00&chco=000000ff&amp;chs=50&chl=%5Cfrac%7Bdy%7D%7Bdt%7D%20%3D%20-kx-by)\n\n\u306e2\u3064\u306e1\u968e\u5fae\u5206\u65b9\u7a0b\u5f0f\u306b\u5206\u89e3\u3067\u304d\u308b\u306e\u3067\u3001\u305d\u308c\u3089\u3092`_f0`, `_f1`\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3001RungeKutta\u306b\u304b\u3051\u308b\u3002\n\n\n```\n#define LOOP 10000\n\nfloat _f0(float t, float * x){\n    return x[1];\n}\n\nfloat _f1(float t, float * x){\n    return - x[0] - 0.2 * x[1];\n}\n\nfloat (*f[2])(float, float*);\n\nf[0] = _f0;\nf[1] = _f1;\n\nfloat initialValues[] = {30.0, 0.0};\n\nRungeKutta rk = RungeKutta(f, 0, 30, initialValues, LOOP, 2);\nfor(int i=0; i<LOOP; ++i){\n  cout << rk.getValue(i, 0) + ofGetHeight()/2 << endl;\n}\n```\n\n## \u7d50\u679c\nopenFrameworks\u3067\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3057\u3066\u3084\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-15 12.45.13.png](https://qiita-image-store.s3.amazonaws.com/0/28990/6ec3eacd-14fe-fc77-310d-b5fe647c1a3d.png)\n\n\n\u3061\u3083\u3093\u3068\u6e1b\u8870\u632f\u52d5\u3057\u3066\u308b\uff01\n\n* * *\n\n[\u62d9\u30d6\u30ed\u30b0](http://inter-arteq.com/runge-kutta%E6%B3%95%E3%81%A7%E5%BE%AE%E5%88%86%E6%96%B9%E7%A8%8B%E5%BC%8F%E3%82%92%E8%A7%A3%E3%81%84%E3%81%9F%E3%82%89%E3%81%A1%E3%82%87%E3%81%A3%E3%81%A8%E6%84%9F%E5%8B%95%E3%81%97%E3%81%9F%E8%A9%B1/)\u304b\u3089\u306e\u8ee2\u8f09\n", "tags": ["\u6570\u5b66", "openFrameworks", "C++", "\u30eb\u30f3\u30b2\u30af\u30c3\u30bf\u6cd5"]}