{"context": "iPhone\u3067\u64ae\u5f71\u3057\u305f\u5199\u771f\u306b\u306fGPS\u60c5\u5831\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306eGPS\u60c5\u5831\u3092\u89e3\u6790\u3057\u3066\u3001QGIS\u4e0a\u306b\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u843d\u3068\u3057\u3066\u307f\u307e\u3059\u3002\u4f7f\u7528\u3059\u308b\u306e\u306fPIL\u30e2\u30b8\u30e5\u30fc\u30eb\u3068OS\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nCSV\u3067\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u306fCSV\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u5fc5\u8981\u3067\u3059\u3002\n\u5199\u771f\u30e1\u30bf\u30c7\u30fc\u30bf\u89e3\u6790\u7528\u306e\u95a2\u6570\u3092\u4f5c\u6210\n\nget_exif.py\nfrom PIL import Image\nfrom PIL.ExifTags import TAGS\n\ndef get_exif(fn):\n    ret = {}\n    i = Image.open(fn)\n    info = i._getexif()\n    for tag, value in info.items():\n        decoded = TAGS.get(tag, tag)\n        ret[decoded] = value\n    return ret\n\n\n\u95a2\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u6295\u3052\u8fbc\u3080\u3068\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u306b\u30e1\u30bf\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u4f7f\u3044\u65b9\u306f\u2193\nmy_image = 'hogehoge.jpg'\nmetadata = get_exif(my_image)\n\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u306f\u8272\u3005\u3067\u3059\u3002\u64ae\u5f71\u3057\u305f\u6642\u9593\u3084\u6a5f\u7a2e\u540d\u3001\u305d\u306e\u4ed6\u7a2e\u3005\u3002\u4e0b\u306e\u753b\u50cf\u306fPython\u306e\u30a8\u30c7\u30a3\u30bf\uff08Spyder\uff09\u306eValiable explore\u3067\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u3002\n\n\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u9805\u76eeGPSInfo\u306e\u4e2d\u306bGPS\u306e\u7def\u5ea6\u7d4c\u5ea6\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\u8981\u7d201\u306f\u5357\u5317\u533a\u5206\u3001\u8981\u7d202\u306f\u7def\u5ea6\uff08\u5ea6\u5206\u79d2\uff09\u3001\u8981\u7d203\u306f\u6771\u897f\u533a\u5206\u3001\u8981\u7d204\u306f\u7d4c\u5ea6\uff08\u5ea6\u5206\u79d2\uff09\u3067\u3059\u3002\nIn [1] print(metadata['GPSInfo'])\nOut[1] {1: 'N', 2: ((31, 1), (35, 1), (1485, 100)), 3: 'E', 4: ((130, 1), (33, 1), (2132, 100)), 5: 0, 6: (11717, 787), 7: ((9, 1), (13, 1), (5680, 100)), 12: 'K', 13: (0, 1), 16: 'T', 17: (23003, 112), 23: 'T', 24: (23003, 112), 29: '2016:08:25', 31: (5, 1)}\n\n\u5ea6\u5206\u79d2\u5358\u4f4d\u306fGIS\u306b\u6295\u3052\u8fbc\u3080\u3068\u304d\u306b\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3001\u3053\u308c\u3092\u5ea6\u5358\u4f4d\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u8a08\u7b97\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\nlon = int(metadata['GPSInfo'][4][0][0]) +\n      float(metadata['GPSInfo'][4][1][0]) /60 + \n      (float(metadata['GPSInfo'][4][2][0])/float(metadata['GPSInfo'][4][2][1])) /3600)\nlat = int(metadata['GPSInfo'][2][0][0]) +\n      float(metadata['GPSInfo'][2][1][0]) /60 +\n      (float(metadata['GPSInfo'][2][2][0])/float(metadata['GPSInfo'][2][2][1])) /3600)\n\n\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u304c\u4e00\u3064\u306e\u5834\u5408\u306f\u4e0a\u8ff0\u306e\u3084\u308a\u65b9\u3067\u554f\u984c\u7121\u3044\u3067\u3059\u304c\u3001\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3044\u305f\u3044\u306e\u304c\u4e16\u306e\u5e38\u3067\u3059\u3002\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\nimport csv\nimport os\n\nFileList = os.listdir()\nWriteFile = open('photo_gps_point.csv','w')\nwriter = csv.writer(WriteFile, lineterminator='\\n')\n\nfor pf in FileList:\n    metadata = get_exif(pf)\n\n    csvline = []\n    csvline.append(pf)\n    csvline.append(metadata['Model'])\n\n    if 'GPSInfo' in metadata.keys():\n        csvline.append(\n         int(metadata['GPSInfo'][4][0][0]) +\n         float(metadata['GPSInfo'][4][1][0]) /60 + \n         (float(metadata['GPSInfo'][4][2][0])/float(metadata['GPSInfo'][4][2][1])) /3600)\n        csvline.append(\n         int(metadata['GPSInfo'][2][0][0]) +\n         float(metadata['GPSInfo'][2][1][0]) /60 +\n         (float(metadata['GPSInfo'][2][2][0])/float(metadata['GPSInfo'][2][2][1])) /3600)\n        writer.writerow(csvline)\n    else:\n        pass\nWriteFile.close()\n\n\u3053\u308c\u3067\u5ea6\u5358\u4f4d\u7def\u5ea6\u7d4c\u5ea6\u306eCSV\u30d5\u30a1\u30a4\u30eb\uff08photo_gps_point.csv\uff09\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u4e0a\u8ff0\u306e\u30b3\u30fc\u30c9\u3067\u306f\u4f5c\u696d\u306e\u90fd\u5408\u3067\u64ae\u5f71\u3057\u305f\u6a5f\u7a2e\u540d\uff08Model\uff09\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u7121\u304f\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u4ed6\u306b\u5fc5\u8981\u306a\u9805\u76ee\u304c\u3042\u308c\u3070\u7f6e\u304d\u63db\u3048\u3066\u3082OK\u3067\u3059\u3002\n\n\u53c2\u8003\nhttp://www.geopacific.org/opensourcegis/python/8q9u2w\niPhone\u3067\u64ae\u5f71\u3057\u305f\u5199\u771f\u306b\u306fGPS\u60c5\u5831\u304c\u542b\u307e\u308c\u307e\u3059\u3002\u3053\u306eGPS\u60c5\u5831\u3092\u89e3\u6790\u3057\u3066\u3001QGIS\u4e0a\u306b\u30dd\u30a4\u30f3\u30c8\u3068\u3057\u3066\u843d\u3068\u3057\u3066\u307f\u307e\u3059\u3002\u4f7f\u7528\u3059\u308b\u306e\u306fPIL\u30e2\u30b8\u30e5\u30fc\u30eb\u3068OS\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nCSV\u3067\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u306fCSV\u30e2\u30b8\u30e5\u30fc\u30eb\u3082\u5fc5\u8981\u3067\u3059\u3002\n\n\u5199\u771f\u30e1\u30bf\u30c7\u30fc\u30bf\u89e3\u6790\u7528\u306e\u95a2\u6570\u3092\u4f5c\u6210\n\n```get_exif.py\nfrom PIL import Image\nfrom PIL.ExifTags import TAGS\n\ndef get_exif(fn):\n    ret = {}\n    i = Image.open(fn)\n    info = i._getexif()\n    for tag, value in info.items():\n        decoded = TAGS.get(tag, tag)\n        ret[decoded] = value\n    return ret\n```\n\n\u95a2\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u3092\u6295\u3052\u8fbc\u3080\u3068\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u306b\u30e1\u30bf\u30c7\u30fc\u30bf\u304c\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u4f7f\u3044\u65b9\u306f\u2193\n\n```py3\nmy_image = 'hogehoge.jpg'\nmetadata = get_exif(my_image)\n```\n\n\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u4e2d\u8eab\u306f\u8272\u3005\u3067\u3059\u3002\u64ae\u5f71\u3057\u305f\u6642\u9593\u3084\u6a5f\u7a2e\u540d\u3001\u305d\u306e\u4ed6\u7a2e\u3005\u3002\u4e0b\u306e\u753b\u50cf\u306fPython\u306e\u30a8\u30c7\u30a3\u30bf\uff08Spyder\uff09\u306eValiable explore\u3067\u4e2d\u8eab\u3092\u78ba\u8a8d\u3057\u305f\u3068\u3053\u308d\u3002\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/27432/ba2ceda9-f1a3-cdb2-89d1-cd9ff8ce7450.png)\n\n\u30c7\u30a3\u30af\u30b7\u30e7\u30ca\u30ea\u9805\u76eeGPSInfo\u306e\u4e2d\u306bGPS\u306e\u7def\u5ea6\u7d4c\u5ea6\u60c5\u5831\u304c\u5165\u3063\u3066\u3044\u307e\u3059\u3002\u8981\u7d201\u306f\u5357\u5317\u533a\u5206\u3001\u8981\u7d202\u306f\u7def\u5ea6\uff08\u5ea6\u5206\u79d2\uff09\u3001\u8981\u7d203\u306f\u6771\u897f\u533a\u5206\u3001\u8981\u7d204\u306f\u7d4c\u5ea6\uff08\u5ea6\u5206\u79d2\uff09\u3067\u3059\u3002\n\n```py3\nIn [1] print(metadata['GPSInfo'])\nOut[1] {1: 'N', 2: ((31, 1), (35, 1), (1485, 100)), 3: 'E', 4: ((130, 1), (33, 1), (2132, 100)), 5: 0, 6: (11717, 787), 7: ((9, 1), (13, 1), (5680, 100)), 12: 'K', 13: (0, 1), 16: 'T', 17: (23003, 112), 23: 'T', 24: (23003, 112), 29: '2016:08:25', 31: (5, 1)}\n```\n\n\u5ea6\u5206\u79d2\u5358\u4f4d\u306fGIS\u306b\u6295\u3052\u8fbc\u3080\u3068\u304d\u306b\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3001\u3053\u308c\u3092\u5ea6\u5358\u4f4d\u306b\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\u8a08\u7b97\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3002\n\n```py3\nlon = int(metadata['GPSInfo'][4][0][0]) +\n      float(metadata['GPSInfo'][4][1][0]) /60 + \n      (float(metadata['GPSInfo'][4][2][0])/float(metadata['GPSInfo'][4][2][1])) /3600)\nlat = int(metadata['GPSInfo'][2][0][0]) +\n      float(metadata['GPSInfo'][2][1][0]) /60 +\n      (float(metadata['GPSInfo'][2][2][0])/float(metadata['GPSInfo'][2][2][1])) /3600)\n```\n\n\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb\u304c\u4e00\u3064\u306e\u5834\u5408\u306f\u4e0a\u8ff0\u306e\u3084\u308a\u65b9\u3067\u554f\u984c\u7121\u3044\u3067\u3059\u304c\u3001\u8907\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3044\u305f\u3044\u306e\u304c\u4e16\u306e\u5e38\u3067\u3059\u3002\u306a\u306e\u3067\u4ee5\u4e0b\u306e\u69d8\u306a\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```py3\nimport csv\nimport os\n\nFileList = os.listdir()\nWriteFile = open('photo_gps_point.csv','w')\nwriter = csv.writer(WriteFile, lineterminator='\\n')\n\nfor pf in FileList:\n    metadata = get_exif(pf)\n\n    csvline = []\n    csvline.append(pf)\n    csvline.append(metadata['Model'])\n\n    if 'GPSInfo' in metadata.keys():\n        csvline.append(\n         int(metadata['GPSInfo'][4][0][0]) +\n         float(metadata['GPSInfo'][4][1][0]) /60 + \n         (float(metadata['GPSInfo'][4][2][0])/float(metadata['GPSInfo'][4][2][1])) /3600)\n        csvline.append(\n         int(metadata['GPSInfo'][2][0][0]) +\n         float(metadata['GPSInfo'][2][1][0]) /60 +\n         (float(metadata['GPSInfo'][2][2][0])/float(metadata['GPSInfo'][2][2][1])) /3600)\n        writer.writerow(csvline)\n    else:\n        pass\nWriteFile.close()\n```\n\n\u3053\u308c\u3067\u5ea6\u5358\u4f4d\u7def\u5ea6\u7d4c\u5ea6\u306eCSV\u30d5\u30a1\u30a4\u30eb\uff08photo_gps_point.csv\uff09\u304c\u4f5c\u6210\u3055\u308c\u307e\u3057\u305f\u3002\n\u4e0a\u8ff0\u306e\u30b3\u30fc\u30c9\u3067\u306f\u4f5c\u696d\u306e\u90fd\u5408\u3067\u64ae\u5f71\u3057\u305f\u6a5f\u7a2e\u540d\uff08Model\uff09\u3092\u5165\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u3053\u308c\u306f\u7121\u304f\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\u4ed6\u306b\u5fc5\u8981\u306a\u9805\u76ee\u304c\u3042\u308c\u3070\u7f6e\u304d\u63db\u3048\u3066\u3082OK\u3067\u3059\u3002\n\n# \u53c2\u8003\nhttp://www.geopacific.org/opensourcegis/python/8q9u2w\n", "tags": ["QGIS", "GIS", "python3"]}