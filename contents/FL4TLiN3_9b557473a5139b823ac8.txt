{"context": " More than 1 year has passed since last update.\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u306fTask Queue\u306b\u8ffd\u3044\u51fa\u3057\u305f\u3044\u3002\u307e\u305f\u3001Task Queue\u3068\u306fWeb API\u7d4c\u7531\u3067\u5bfe\u8a71\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\u4eca\u56de\u306fExq\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002Resque / Sidekiq\u4e92\u63db\u3068\u306e\u3053\u3068\u3002\u3053\u3044\u3064\u306b\u306fWeb API\u304c\u7121\u3044\u306e\u3067\u3001\u305d\u3053\u306f\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\n\u5b9f\u88c5\n\u4e8b\u524d\u6e96\u5099\u3068\u3057\u3066\u3001redis\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u9069\u5b9c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nmix.exs\u306b\u4ee5\u4e0b\u306e\u5909\u66f4\u3092\u52a0\u3048\u308b\u3002\n\nmix.exs\n  # :exq\u3092\u8ffd\u8a18\n  def application do\n    [mod: {Smaug, []},\n     applications: [:phoenix, :phoenix_html, :cowboy, :logger,\n                    :phoenix_ecto, :mariaex,\n                    :exq]]\n  end\n\n  defp deps do\n    [\n      # ... other deps\n      {:exq, \"~> 0.3.0\"}\n    ]\n  end\n\n\n\u5909\u66f4\u5f8c\u3001mix deps.get\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n\u8a2d\u5b9a\nconfig/config.exs\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3002\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u9805\u76ee\u306b\u3064\u3044\u3066\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u53c2\u7167\u3002\n\nconfig/config.exs\nconfig :exq,\n  host: \"localhost\",\n  port: 6379,\n  namespace: \"exq\"\n\n\n\nweb.ex\nweb.ex\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001contoller\u3068\u5927\u4f53\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\nweb/web.ex\n  def worker do\n    quote do\n      alias Demo.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 1, from: 2]\n\n      import Demo.Router.Helpers\n    end\n  end\n\n\n\nWorker\nHelloWorld\u306aworker\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\nweb/workers/hello_world.ex\ndefmodule Demo.HelloWorldWorker do\n  use Demo.Web, :worker\n\n  def perform do\n    IO.puts \"Hello World!\"\n  end\nend\n\n\n\u3053\u306e\u72b6\u614b\u3067worker\u306f\u8d70\u3089\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001iex -S mix phoenix.server\u3092\u53e9\u3044\u3066\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u308b\u3002\niex(1)> Exq.enqueue(:exq, \"default\", Demo.HelloWorldWorker, [])\n\"Hello World!\"\n\n\nWeb API\n\u3053\u306e\u307e\u307e\u3060\u3068\u4e0d\u4fbf\u306a\u306e\u3067\u3001Web API\u3092\u4f5c\u3063\u3066Queue\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306a\u3069\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u4eca\u56de\u306fGET /api/job/stats\u3001POST /api/job\u3092\u5b9a\u7fa9\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306bcontroller\u3068view\u3092\u66f8\u304f\u3002\n\nweb/controllers/job_controller.ex\ndefmodule Demo.JobController do\n  use Demo.Web, :controller\n\n  def stats(conn, _params) do\n    {:ok, processed} = Exq.Api.stats(:exq_enqueuer, \"processed\")\n    {:ok, failed} = Exq.Api.stats(:exq_enqueuer, \"failed\")\n    {:ok, busy} = Exq.Api.busy(:exq_enqueuer)\n    {:ok, scheduled} = Exq.Api.queue_size(:exq_enqueuer, :scheduled)\n    {:ok, queues} = Exq.Api.queue_size(:exq_enqueuer)\n    queue_sizes = for {_q, size} <- queues do\n      {size, _} = Integer.parse(size)\n      size\n    end\n    qtotal = \"#{Enum.sum(queue_sizes)}\"\n\n    render(conn, :stats, stats: %{\n      processed: processed,\n      failed: failed,\n      busy: busy,\n      scheduled: scheduled,\n      enqueued: qtotal\n    })\n  end\n\n  def create(conn, %{\"job_name\" =>  job_name}) do\n    {:ok, jid} = Exq.enqueue(:exq_enqueuer, \"default\", job_name, [])\n    render(conn, :show, job: %{id: jid})\n  end\nend\n\n\n\nweb/views/job_view.ex\ndefmodule Demo.JobView do\n  use Demo.Web, :view\n\n  def render(\"stats.json\", %{stats: stats}) do\n    %{\n      data: %{\n        processed: stats.processed,\n        failed: stats.failed,\n        busy: stats.busy,\n        scheduled: stats.scheduled,\n        enqueued: stats.enqueued\n      }\n    }\n  end\n\n  def render(\"show.json\", %{job: job}) do\n    %{data: render_one(job, Demo.JobView, \"job.json\")}\n  end\n\n  def render(\"job.json\", %{job: job}) do\n    %{id: job.id}\n  end\nend\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3002\n\nweb/router.ex\ndefmodule Demo.Router do\n  use Demo.Web, :router\n\n  pipeline :browser do\n    plug :accepts, [\"html\"]\n    plug :fetch_session\n    plug :fetch_flash\n    plug :protect_from_forgery\n    plug :put_secure_browser_headers\n  end\n\n  pipeline :api do\n    plug :accepts, [\"json\"]\n  end\n\n  scope \"/\", Demo do\n    pipe_through :browser\n\n    get  \"/\", PageController, :index\n  end\n\n  scope \"/api\", Demo do\n    pipe_through :api\n\n    get  \"/job/stats\", JobController, :stats\n    post \"/job\", JobController, :create\n  end\nend\n\n\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\n# Enqueue\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"job_name\": \"Demo.HelloWorldWorker\"}' http://localhost:4000/api/job\n{\"data\":{\"id\":\"bf78b561-fa13-47b5-a8d8-3ce76c6b0034\"}}\n\n# Queue Stats\n$ curl -X GET -H \"Content-Type: application/json\" http://localhost:4000/api/job/stats\n{\"data\":{\"scheduled\":\"0\",\"processed\":\"1\",\"failed\":\"0\",\"enqueued\":\"0\",\"busy\":\"0\"}}\n\n\n\u3042\u3068\u304c\u304d\n[Elixir] Phoenix\u3067Plug\u306e\u81ea\u4f5c\u3082\u53c2\u8003\u306b\u3057\u3066\u3082\u3089\u3044\u3001Task Queue\u7528\u306eWeb API\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306flocalhost\u304b\u3089\u3060\u3051\uff0f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u304b\u3089\u3060\u3051\u53d7\u3051\u4ed8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3088\u3044\u3068\u601d\u3046\u3002\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\n\u6642\u9593\u306e\u304b\u304b\u308b\u51e6\u7406\u306fTask Queue\u306b\u8ffd\u3044\u51fa\u3057\u305f\u3044\u3002\u307e\u305f\u3001Task Queue\u3068\u306fWeb API\u7d4c\u7531\u3067\u5bfe\u8a71\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3002\n\n\u4eca\u56de\u306f[Exq](https://github.com/akira/exq)\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u307f\u308b\u3053\u3068\u306b\u3059\u308b\u3002Resque / Sidekiq\u4e92\u63db\u3068\u306e\u3053\u3068\u3002\u3053\u3044\u3064\u306b\u306fWeb API\u304c\u7121\u3044\u306e\u3067\u3001\u305d\u3053\u306f\u81ea\u4f5c\u3059\u308b\u3053\u3068\u3068\u3059\u308b\u3002\n\n# \u5b9f\u88c5\n\n\u4e8b\u524d\u6e96\u5099\u3068\u3057\u3066\u3001redis\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u9069\u5b9c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304f\u3002\n\n## \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n`mix.exs`\u306b\u4ee5\u4e0b\u306e\u5909\u66f4\u3092\u52a0\u3048\u308b\u3002\n\n```mix.exs\n  # :exq\u3092\u8ffd\u8a18\n  def application do\n    [mod: {Smaug, []},\n     applications: [:phoenix, :phoenix_html, :cowboy, :logger,\n                    :phoenix_ecto, :mariaex,\n                    :exq]]\n  end\n\n  defp deps do\n    [\n      # ... other deps\n      {:exq, \"~> 0.3.0\"}\n    ]\n  end\n```\n\n\u5909\u66f4\u5f8c\u3001`mix deps.get`\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002\n\n## \u8a2d\u5b9a\n\n`config/config.exs`\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3002\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a\u9805\u76ee\u306b\u3064\u3044\u3066\u306f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u53c2\u7167\u3002\n\n```config/config.exs\nconfig :exq,\n  host: \"localhost\",\n  port: 6379,\n  namespace: \"exq\"\n```\n\n## web.ex\n\n`web.ex`\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u3001contoller\u3068\u5927\u4f53\u540c\u3058\u3088\u3046\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3002\n\n```web/web.ex\n  def worker do\n    quote do\n      alias Demo.Repo\n      import Ecto.Model\n      import Ecto.Query, only: [from: 1, from: 2]\n\n      import Demo.Router.Helpers\n    end\n  end\n```\n\n## Worker\n\nHelloWorld\u306aworker\u3092\u66f8\u3044\u3066\u307f\u308b\u3002\n\n```web/workers/hello_world.ex\ndefmodule Demo.HelloWorldWorker do\n  use Demo.Web, :worker\n\n  def perform do\n    IO.puts \"Hello World!\"\n  end\nend\n```\n\n\u3053\u306e\u72b6\u614b\u3067worker\u306f\u8d70\u3089\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001`iex -S mix phoenix.server`\u3092\u53e9\u3044\u3066\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u308b\u3002\n\n```bash\niex(1)> Exq.enqueue(:exq, \"default\", Demo.HelloWorldWorker, [])\n\"Hello World!\"\n```\n\n## Web API\n\n\u3053\u306e\u307e\u307e\u3060\u3068\u4e0d\u4fbf\u306a\u306e\u3067\u3001Web API\u3092\u4f5c\u3063\u3066Queue\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u306a\u3069\u3092\u53d6\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\n\u4eca\u56de\u306f`GET /api/job/stats`\u3001`POST /api/job`\u3092\u5b9a\u7fa9\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306bcontroller\u3068view\u3092\u66f8\u304f\u3002\n\n```web/controllers/job_controller.ex\ndefmodule Demo.JobController do\n  use Demo.Web, :controller\n\n  def stats(conn, _params) do\n    {:ok, processed} = Exq.Api.stats(:exq_enqueuer, \"processed\")\n    {:ok, failed} = Exq.Api.stats(:exq_enqueuer, \"failed\")\n    {:ok, busy} = Exq.Api.busy(:exq_enqueuer)\n    {:ok, scheduled} = Exq.Api.queue_size(:exq_enqueuer, :scheduled)\n    {:ok, queues} = Exq.Api.queue_size(:exq_enqueuer)\n    queue_sizes = for {_q, size} <- queues do\n      {size, _} = Integer.parse(size)\n      size\n    end\n    qtotal = \"#{Enum.sum(queue_sizes)}\"\n\n    render(conn, :stats, stats: %{\n      processed: processed,\n      failed: failed,\n      busy: busy,\n      scheduled: scheduled,\n      enqueued: qtotal\n    })\n  end\n\n  def create(conn, %{\"job_name\" =>  job_name}) do\n    {:ok, jid} = Exq.enqueue(:exq_enqueuer, \"default\", job_name, [])\n    render(conn, :show, job: %{id: jid})\n  end\nend\n```\n\n```web/views/job_view.ex\ndefmodule Demo.JobView do\n  use Demo.Web, :view\n\n  def render(\"stats.json\", %{stats: stats}) do\n    %{\n      data: %{\n        processed: stats.processed,\n        failed: stats.failed,\n        busy: stats.busy,\n        scheduled: stats.scheduled,\n        enqueued: stats.enqueued\n      }\n    }\n  end\n\n  def render(\"show.json\", %{job: job}) do\n    %{data: render_one(job, Demo.JobView, \"job.json\")}\n  end\n\n  def render(\"job.json\", %{job: job}) do\n    %{id: job.id}\n  end\nend\n```\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3002\n\n```web/router.ex\ndefmodule Demo.Router do\n  use Demo.Web, :router\n\n  pipeline :browser do\n    plug :accepts, [\"html\"]\n    plug :fetch_session\n    plug :fetch_flash\n    plug :protect_from_forgery\n    plug :put_secure_browser_headers\n  end\n\n  pipeline :api do\n    plug :accepts, [\"json\"]\n  end\n\n  scope \"/\", Demo do\n    pipe_through :browser\n\n    get  \"/\", PageController, :index\n  end\n\n  scope \"/api\", Demo do\n    pipe_through :api\n\n    get  \"/job/stats\", JobController, :stats\n    post \"/job\", JobController, :create\n  end\nend\n```\n\n## \u52d5\u304b\u3057\u3066\u307f\u308b\n\n```bash\n# Enqueue\n$ curl -X POST -H \"Content-Type: application/json\" -d '{\"job_name\": \"Demo.HelloWorldWorker\"}' http://localhost:4000/api/job\n{\"data\":{\"id\":\"bf78b561-fa13-47b5-a8d8-3ce76c6b0034\"}}\n\n# Queue Stats\n$ curl -X GET -H \"Content-Type: application/json\" http://localhost:4000/api/job/stats\n{\"data\":{\"scheduled\":\"0\",\"processed\":\"1\",\"failed\":\"0\",\"enqueued\":\"0\",\"busy\":\"0\"}}\n```\n\n# \u3042\u3068\u304c\u304d\n\n[[Elixir] Phoenix\u3067Plug\u306e\u81ea\u4f5c](http://qiita.com/FL4TLiN3/items/18fa81c30fc9aeba7223)\u3082\u53c2\u8003\u306b\u3057\u3066\u3082\u3089\u3044\u3001Task Queue\u7528\u306eWeb API\u3078\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306flocalhost\u304b\u3089\u3060\u3051\uff0f\u30ed\u30fc\u30ab\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u5185\u304b\u3089\u3060\u3051\u53d7\u3051\u4ed8\u3051\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3088\u3044\u3068\u601d\u3046\u3002\n\n", "tags": ["Elixir", "Phoenix"]}