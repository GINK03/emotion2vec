{"tags": ["\u3081\u3056\u305b\u30e9\u30a4\u30d6\u30e9\u30ea\u30de\u30b9\u30bf\u30fc", "Python", "python2.7"], "context": "\n\n\u3010\u30e9\u30a4\u30d6\u30e9\u30ea\u8aac\u660e\u3011\n\u3000\u7d20\u65e9\u304f\u6307\u6570\u8a08\u7b97\u3092\u884c\u3046\n\n\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n\ncpmoptimize.py\n# -*- coding: utf-8 -*-\n\nfrom benchit import BenchIt\n\nb = BenchIt()\n\ndef fib(n):\n    a = 0\n    b = 1\n    for i in xrange(n):\n        a, b = b, a + b\n    return a\n\nresult = fib(10 ** 6)\n\nb.mark(\"not use cpmoptimize\")\n\nfrom cpmoptimize import cpmoptimize\n\n@cpmoptimize()\ndef fib(n):\n    a = 0\n    b = 1\n    for i in xrange(n):\n        a, b = b, a + b\n    return a\n\nresult = fib(10 ** 6)\n\nb.mark(\"use cpmoptimize\")\nb.display()\n\n\n\n\u3010\u7d50\u679c\u3011\n\noutput.text\n+---------------------+----------+------+-------+----------+----------+---------+\n| Marker              | Method   | Line | Loops | Avg Time |  Runtime | Percent |\n+---------------------+----------+------+-------+----------+----------+---------+\n| not use cpmoptimize | <module> |   16 |     1 | 28.56600 | 28.56600 |   96.95 |\n| use cpmoptimize     | <module> |   30 |     1 |  0.89900 |  0.89900 |    3.05 |\n+---------------------+----------+------+-------+----------+----------+---------+\nTotal runtime: 29.47\n\n\n\n\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000pypi\n\u3000github\n\u3000\u3081\u3056\u305bpython\u30e9\u30a4\u30d6\u30e9\u30ea\u30de\u30b9\u30bf\u30fc \uff0827\uff09benchit\n#\u3010\u30e9\u30a4\u30d6\u30e9\u30ea\u8aac\u660e\u3011\n\u3000\u7d20\u65e9\u304f\u6307\u6570\u8a08\u7b97\u3092\u884c\u3046\n\n#\u3010\u30d7\u30ed\u30b0\u30e9\u30e0\u3011\n```py:cpmoptimize.py\n# -*- coding: utf-8 -*-\n\nfrom benchit import BenchIt\n\nb = BenchIt()\n\ndef fib(n):\n    a = 0\n    b = 1\n    for i in xrange(n):\n        a, b = b, a + b\n    return a\n\nresult = fib(10 ** 6)\n\nb.mark(\"not use cpmoptimize\")\n\nfrom cpmoptimize import cpmoptimize\n\n@cpmoptimize()\ndef fib(n):\n    a = 0\n    b = 1\n    for i in xrange(n):\n        a, b = b, a + b\n    return a\n\nresult = fib(10 ** 6)\n\nb.mark(\"use cpmoptimize\")\nb.display()\n```\n\n#\u3010\u7d50\u679c\u3011\n```text:output.text\n+---------------------+----------+------+-------+----------+----------+---------+\n| Marker              | Method   | Line | Loops | Avg Time |  Runtime | Percent |\n+---------------------+----------+------+-------+----------+----------+---------+\n| not use cpmoptimize | <module> |   16 |     1 | 28.56600 | 28.56600 |   96.95 |\n| use cpmoptimize     | <module> |   30 |     1 |  0.89900 |  0.89900 |    3.05 |\n+---------------------+----------+------+-------+----------+----------+---------+\nTotal runtime: 29.47\n```\n\n#\u3010\u53c2\u8003\u30b5\u30a4\u30c8\u3011\n\u3000[pypi](https://pypi.python.org/pypi/cpmoptimize/0.3.post2)\n\u3000[github](https://github.com/borzunov/cpmoptimize)\n\u3000[\u3081\u3056\u305bpython\u30e9\u30a4\u30d6\u30e9\u30ea\u30de\u30b9\u30bf\u30fc \uff0827\uff09benchit](http://qiita.com/Algebra_nobu/items/e9d495a6e15f3e36aebc)\n"}