{"context": "REVISION: '78'\n\u3069\u3046\u3084\u3063\u3066\u66f8\u304f\u306e\u304c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306a\u306e\u3060\u308d\u3046\u304b\uff1f\n\u8907\u6570\u30b7\u30fc\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u3068\u304b\u3069\u3046\u3059\u308c\u3070\u3002\u3002\n\u30b7\u30fc\u30f3\u3054\u3068\u306b\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\u306e\u304b\u3001\u3082\u3046\u5c11\u3057\u7d30\u304b\u304f\u5206\u3051\u308b\u3079\u304d\u306a\u6c17\u304c\u3059\u308b\u3002\n\u30c7\u30e2\uff1ahttp://codepen.io/mo4_9/pen/VjqRQX\n\nSample.js\nimport './OrbitControls';\n\nexport default class Sample {\n\n  constructor (opts = {}) {\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.output = opts.output || document.createElement('div');\n\n    this.init();\n  }\n\n  init () {\n    { // renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setClearColor( 0x222222 ); // \u80cc\u666f\u8272\n      this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n      this.renderer.setSize( this.width, this.height );\n      this.output.appendChild( this.renderer.domElement );\n    }\n    { // scene\n      this.scene = new THREE.Scene();\n    }\n    { // lights\n      this.light = new THREE.DirectionalLight(0xffffcc, 1);\n      this.light.position.set(0,100,30);\n      this.scene.add(this.light);\n      const ambientLight = new THREE.AmbientLight(0xffaa55);\n      this.scene.add(ambientLight);\n    }\n    { // camera\n      const perscamera = new THREE.PerspectiveCamera( 45, this.width / this.height, 1, 10000 ); // fov(\u8996\u91ce\u89d2),aspect,near,far\n      const orthocamera = new THREE.OrthographicCamera( this.width / -2, this.width / 2, this.height / 2, this.height / -2, 1, 10000 );\n      this.camera = perscamera;\n      this.camera.position.set( 100, 100, 100 );\n      this.camera.lookAt( this.scene.position );\n    }\n    { // helper\n      const gridHelper = new THREE.GridHelper(200,50); // size, step\n      this.scene.add(gridHelper);\n      const axisHelper = new THREE.AxisHelper(200,50);\n      this.scene.add(axisHelper);\n      const lightHelper = new THREE.DirectionalLightHelper(this.light,20);\n      this.scene.add(lightHelper);\n    }\n    { // controls\n      this.controls = new THREE.OrbitControls(this.camera);\n      this.controls.autoRotate = true;\n    }\n    { // cube\n      const geometry = new THREE.CubeGeometry(20, 20, 20);\n      const material = new THREE.MeshLambertMaterial({ color: 0xFBBC05 });\n      const cube = new THREE.Mesh(geometry, material);\n      this.scene.add(cube);\n    }\n\n    this.render();\n    // \u30e1\u30bd\u30c3\u30c9\u3092\u305d\u306e\u307e\u307e\u6e21\u3059\u3068`not function`\u3068\u6012\u3089\u308c\u308b\u306e\u3067\n    // \u7121\u540d\u95a2\u6570\u3067\u56f2\u3063\u3066\u95a2\u6570\u306b\u3059\u308b\u70b9\u306b\u6ce8\u610f\n    window.addEventListener('resize', () => {\n        this.onResize();\n    }, false);\n\n  }\n\n  render () {\n    requestAnimationFrame( () => {\n      this.render();\n    });\n    this.controls.update();\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  onResize () {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize( window.innerWidth, window.innerHeight );\n  }\n\n}\n\n\n\nscript.js\nimport Sample from './Sample';\n\nconst sample = new Sample({\n  output: document.getElementById('webgl-output')\n});\n\n\n\n\u53c2\u8003\nhttp://jsdo.it/shuuuuun/ywm2\n\n\nREVISION: '78'\n\n\u3069\u3046\u3084\u3063\u3066\u66f8\u304f\u306e\u304c\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u306a\u306e\u3060\u308d\u3046\u304b\uff1f\n\u8907\u6570\u30b7\u30fc\u30f3\u3092\u8ffd\u52a0\u3059\u308b\u3068\u304d\u3068\u304b\u3069\u3046\u3059\u308c\u3070\u3002\u3002\n\u30b7\u30fc\u30f3\u3054\u3068\u306b\u30af\u30e9\u30b9\u3092\u3064\u304f\u308b\u306e\u304b\u3001\u3082\u3046\u5c11\u3057\u7d30\u304b\u304f\u5206\u3051\u308b\u3079\u304d\u306a\u6c17\u304c\u3059\u308b\u3002\n\n\u30c7\u30e2\uff1ahttp://codepen.io/mo4_9/pen/VjqRQX\n\n```javascript:Sample.js\nimport './OrbitControls';\n\nexport default class Sample {\n\n  constructor (opts = {}) {\n\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n    this.output = opts.output || document.createElement('div');\n\n    this.init();\n  }\n\n  init () {\n    { // renderer\n      this.renderer = new THREE.WebGLRenderer({ antialias: true });\n      this.renderer.setClearColor( 0x222222 ); // \u80cc\u666f\u8272\n      this.renderer.setPixelRatio(window.devicePixelRatio || 1);\n      this.renderer.setSize( this.width, this.height );\n      this.output.appendChild( this.renderer.domElement );\n    }\n    { // scene\n      this.scene = new THREE.Scene();\n    }\n    { // lights\n      this.light = new THREE.DirectionalLight(0xffffcc, 1);\n      this.light.position.set(0,100,30);\n      this.scene.add(this.light);\n      const ambientLight = new THREE.AmbientLight(0xffaa55);\n      this.scene.add(ambientLight);\n    }\n    { // camera\n      const perscamera = new THREE.PerspectiveCamera( 45, this.width / this.height, 1, 10000 ); // fov(\u8996\u91ce\u89d2),aspect,near,far\n      const orthocamera = new THREE.OrthographicCamera( this.width / -2, this.width / 2, this.height / 2, this.height / -2, 1, 10000 );\n      this.camera = perscamera;\n      this.camera.position.set( 100, 100, 100 );\n      this.camera.lookAt( this.scene.position );\n    }\n    { // helper\n      const gridHelper = new THREE.GridHelper(200,50); // size, step\n      this.scene.add(gridHelper);\n      const axisHelper = new THREE.AxisHelper(200,50);\n      this.scene.add(axisHelper);\n      const lightHelper = new THREE.DirectionalLightHelper(this.light,20);\n      this.scene.add(lightHelper);\n    }\n    { // controls\n      this.controls = new THREE.OrbitControls(this.camera);\n      this.controls.autoRotate = true;\n    }\n    { // cube\n      const geometry = new THREE.CubeGeometry(20, 20, 20);\n      const material = new THREE.MeshLambertMaterial({ color: 0xFBBC05 });\n      const cube = new THREE.Mesh(geometry, material);\n      this.scene.add(cube);\n    }\n\n    this.render();\n    // \u30e1\u30bd\u30c3\u30c9\u3092\u305d\u306e\u307e\u307e\u6e21\u3059\u3068`not function`\u3068\u6012\u3089\u308c\u308b\u306e\u3067\n    // \u7121\u540d\u95a2\u6570\u3067\u56f2\u3063\u3066\u95a2\u6570\u306b\u3059\u308b\u70b9\u306b\u6ce8\u610f\n    window.addEventListener('resize', () => {\n        this.onResize();\n    }, false);\n\n  }\n\n  render () {\n    requestAnimationFrame( () => {\n      this.render();\n    });\n    this.controls.update();\n    this.renderer.render( this.scene, this.camera );\n  }\n\n  onResize () {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize( window.innerWidth, window.innerHeight );\n  }\n\n}\n```\n\n```javascript:script.js\nimport Sample from './Sample';\n\nconst sample = new Sample({\n  output: document.getElementById('webgl-output')\n});\n```\n\n> \u53c2\u8003\nhttp://jsdo.it/shuuuuun/ywm2\n", "tags": ["JavaScript", "three.js", "es6"]}