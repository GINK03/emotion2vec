{"tags": ["Java", "java8", "JavaSE", "JavaSE8"], "context": "\n\nStream API\uff1f\nStream API\u3068\u306fJava SE 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u62e1\u5f35API\u3067\u3059\u3002\n\u4eca\u307e\u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u884c\u3063\u3066\u3044\u305f\u7169\u96d1\u306a\u51e6\u7406\u3092\u308f\u304b\u308a\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n(\u672c\u7a3f\u3067\u306f\u30e9\u30e0\u30c0\u5f0f\u306e\u89e3\u8aac\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u30e9\u30e0\u30c0\u5f0f\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\uff09\nstream\u3068\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3055\u308c\u305f\u3082\u306e\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5225\u306e\u5f62\u614b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u57fa\u672c\u7684\u306a\u6d41\u308c\n1. \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089stream\u3092\u53d6\u5f97\n2. stream\u306b\u5bfe\u3057\u3066\u6e80\u8db3\u3059\u308b\u307e\u3067\u300c\u4e2d\u9593\u64cd\u4f5c\u300d\u3092\u5b9f\u884c\u3002\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u3092\u90fd\u5408\u3088\u304f\u5909\u63db\n3. \u300c\u7d42\u7aef\u64cd\u4f5c\u300d\u3067\u5909\u63db\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u9069\u7528\u3059\u308b\n\u3067\u306f\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nStream API\u306e\u4f7f\u3044\u65b9\n\u30b5\u30f3\u30d7\u30eb\u300c1\u301c5\u306e\u4e2d\u3067\u5076\u6570\u3060\u3051\u3092\u8868\u793a\u3059\u308b\u300d\n\nStream API\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\n\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nfor (Integer i : integerList) {\n    if (i % 2 == 0) {\n        System.out.println(i);\n    }\n}\n\n\nStreamAPI\u3092\u4f7f\u3046\u5834\u5408\n\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .filter(i -> i % 2 == 0) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\u51e6\u7406\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nStream API\u3092\u4f7f\u308f\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u300c2\u3067\u5272\u308a\u5207\u308c\u305f\u3089\u8868\u793a\u300d\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nStream API\u3092\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u300c2\u3067\u5272\u308a\u5207\u308c\u308b\u3082\u306e\u3092\u96c6\u3081\u308b\u300d\u2192\u300c\u8981\u7d20\u3092\u3059\u3079\u3066\u51fa\u529b\u300d\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\uff12\u51e6\u7406\u306b\u5206\u5272\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308b\u307b\u304b\u3001\u90e8\u54c1\u6027\u3084\u30b3\u30fc\u30c9\u306e\u62bd\u8c61\u5ea6\u3082\u9ad8\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fstream\u53d6\u5f97\u5f8c\u3001\u4e2d\u9593\u64cd\u4f5c\u3068\u3057\u3066\u300cfilter\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u540d\u524d\u306e\u901a\u308a\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nfilter\u30e1\u30bd\u30c3\u30c9\u306b\u306f T -> boolean \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n(\u203b T\u306e\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\u30e9\u30e0\u30c0\u5f0f\u304ctrue\u306e\u8981\u7d20\u3060\u3051\u304c\u6b8b\u3063\u305fstream\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u7d42\u7aef\u51e6\u7406\u3068\u3057\u3066\u300cforEach\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3082\u540d\u524d\u3082\u901a\u308a\u300c\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3044\u3063\u3066\u51e6\u7406\u3092\u5b9f\u884c\u300d\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u4ed6\u8a00\u8a9e\u3067\u306f\u304a\u99b4\u67d3\u307f\u306e\u69cb\u6587\u3067\u3059\u306d\u3002Java\u3060\u3068\u62e1\u5f35for\u6587\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u300c\uff12\u3067\u5272\u3063\u305f\u3089\u3042\u307e\u308a\u304c0\u306b\u306a\u308b\u3082\u306e\u3060\u3051\u300d\uff08\u4e2d\u9593\u64cd\u4f5c\uff09\u3092\u300c\uff11\u3064\u305a\u3064\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u300d\uff08\u7d42\u7aef\u51e6\u7406\uff09\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\n\u4e2d\u9593\u64cd\u4f5c\u306e\u8fd4\u308a\u5024\u306b\u306f\u64cd\u4f5c\u9069\u7528\u5f8c\u306estream\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u306e\u3088\u3046\u306b\u9023\u7d9a\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\n        Stream<Integer> stream = integerList.stream(); // stream\u306e\u53d6\u5f97\n        Stream<Integer> stream2 = stream.filter(i -> i % 2 == 0); // \u4e2d\u9593\u64cd\u4f5c\n        stream2.forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\u3064\u306a\u3052\u3066\u66f8\u3044\u305f\u307b\u3046\u304c\u53ef\u8aad\u6027\u304c\u3042\u304c\u308b\u306e\u3067\u7279\u5225\u306a\u7406\u7531\u304c\u306a\u3044\u9650\u308a\u3001\u9023\u7d50\u3057\u3066\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u69d8\u3005\u306a\u4e2d\u9593\u64cd\u4f5c\n\u3088\u304f\u4f7f\u3046\u4e2d\u9593\u64cd\u4f5c\u3092\u6319\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\nfilter\n\u5148\u307b\u3069\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u6319\u3052\u305f\u3088\u3046\u306b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\u305f\u3081\u306e\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u5f15\u6570\u306b\u306f T -> boolean \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u5f0f\u304ctrue\u306e\u8981\u7d20\u3060\u3051\u3092\u96c6\u3081\u307e\u3059\u3002\n\n\u5076\u6570\u53d6\u308a\u51fa\u3057\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .filter(i -> i % 2 == 0) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\n\nmap\nmap \u306e\u5f15\u6570\u306b\u306f T -> U \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\u5909\u63db\u3059\u308b\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .map(i -> i * 2) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\u3053\u306e\u3088\u3046\u306b\uff12\u500d\u306b\u3057\u3066\u307f\u305f\u308a\u3001\n\n\u8981\u7d20\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .map(i -> \"\u8981\u7d20\u306f\" + i + \"\u3067\u3059\") // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\n\u3053\u306e\u3088\u3046\u306b\u5225\u306e\u578b\u3092\u8fd4\u3059\u3088\u3046\u306b\uff08\u3053\u306e\u4f8b\u3067\u306fInteger\u304b\u3089String\uff09\u306b\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u7269\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\nAnimal\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\ninterface Animal {\n    String getCry();    // \u9cf4\u304d\u58f0\u3092\u53d6\u5f97\n}\n\n\n\u52d5\u7269\u306e\u30ea\u30b9\u30c8\u306b\u5bfe\u3057\u3066map\u3092\u4f7f\u3044\u3001\u9cf4\u304d\u58f0\u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nmap\u306e\u30b5\u30f3\u30d7\u30eb\nList<Animal> animalList = Arrays.asList(dog, cat, elephant);\nanimalList.stream() // stream\u306e\u53d6\u5f97\n        .map(animal -> animal.getCry()) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(cry -> System.out.println(cry)); // \u7d42\u7aef\u64cd\u4f5c\n\n\n\nsorted\nmap \u306e\u5f15\u6570\u306b\u306f (T, T) -> int \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\u4e26\u3073\u66ff\u3048\u308b\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u8981\u7d20\u3092\uff12\u3064\u305a\u3064\u53d6\u308a\u3001\u30e9\u30e0\u30c0\u5f0f\u306b\u6e21\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8fd4\u308a\u5024\u304c\u6b63\u306a\u3089\u964d\u9806\u3001\u8ca0\u306a\u3089\u6607\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u964d\u9806\u306e\u30b5\u30f3\u30d7\u30eb1\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .sorted((a, b) -> b - a) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\n\u3057\u304b\u3057\u3001\u5358\u7d14\u306a\u30bd\u30fc\u30c8\uff08\u6607\u9806\u3001\u964d\u9806\uff09\u3067\u3042\u308b\u5834\u5408\u306fComparator\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306enaturalOrder()\u3001reverseOrder()\u3092\u6e21\u3057\u3066\u3084\u308b\u306e\u304c\u4e00\u756a\u308f\u304b\u308a\u6613\u3044\u3068\u61d0\u3044\u307e\u3059\u3002\n\n\u964d\u9806\u306e\u30b5\u30f3\u30d7\u30eb2\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .sorted(Comparator.reverseOrder()) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n\n\n\u4ee5\u4e0a\uff13\u3064\u304c\u983b\u7e41\u306b\u4f7f\u3046\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u4ed6\u306b\u3082\u8272\u3005\u3042\u308b\u306e\u3067\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u7d42\u7aef\u64cd\u4f5c\n\nforEach\nforEach \u306e\u5f15\u6570\u306b\u306f (T) -> void \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3059\u308b\u7d42\u7aef\u64cd\u4f5c\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u4eca\u307e\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\u305d\u306e\u4ed6\u306e\u7d42\u7aef\u64cd\u4f5c\u306b\u3064\u3044\u3066\u306f\u5fdc\u7528\u7de8\u3067\u3084\u308a\u307e\u3059\u3002\n# Stream API\uff1f\n\nStream API\u3068\u306fJava SE 8\u304b\u3089\u8ffd\u52a0\u3055\u308c\u305f\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u306e\u62e1\u5f35API\u3067\u3059\u3002\n\u4eca\u307e\u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u3057\u3066\u884c\u3063\u3066\u3044\u305f\u7169\u96d1\u306a\u51e6\u7406\u3092\u308f\u304b\u308a\u3084\u3059\u3044\u30b3\u30fc\u30c9\u3067\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308a\u307e\u3059\u3002\n(\u672c\u7a3f\u3067\u306f\u30e9\u30e0\u30c0\u5f0f\u306e\u89e3\u8aac\u306f\u884c\u3044\u307e\u305b\u3093\u3002\u30e9\u30e0\u30c0\u5f0f\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\n\nstream\u3068\u306f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u8a31\u53ef\u3055\u308c\u305f\u3082\u306e\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5225\u306e\u5f62\u614b\u3068\u8003\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n**\u57fa\u672c\u7684\u306a\u6d41\u308c**\n1. \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304b\u3089stream\u3092\u53d6\u5f97\n2. stream\u306b\u5bfe\u3057\u3066\u6e80\u8db3\u3059\u308b\u307e\u3067\u300c\u4e2d\u9593\u64cd\u4f5c\u300d\u3092\u5b9f\u884c\u3002\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u3092\u90fd\u5408\u3088\u304f\u5909\u63db\n3. \u300c\u7d42\u7aef\u64cd\u4f5c\u300d\u3067\u5909\u63db\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u4e2d\u8eab\u306b\u5bfe\u3057\u3066\u51e6\u7406\u3092\u9069\u7528\u3059\u308b\n\n\u3067\u306f\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# Stream API\u306e\u4f7f\u3044\u65b9\n**\u30b5\u30f3\u30d7\u30eb\u300c1\u301c5\u306e\u4e2d\u3067\u5076\u6570\u3060\u3051\u3092\u8868\u793a\u3059\u308b\u300d**\n\n* Stream API\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\n\n```java\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nfor (Integer i : integerList) {\n    if (i % 2 == 0) {\n        System.out.println(i);\n    }\n}\n```\n\n* StreamAPI\u3092\u4f7f\u3046\u5834\u5408\n\n```java\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .filter(i -> i % 2 == 0) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u51e6\u7406\u306e\u9055\u3044\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nStream API\u3092\u4f7f\u308f\u306a\u3044\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u300c2\u3067\u5272\u308a\u5207\u308c\u305f\u3089\u8868\u793a\u300d\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nStream API\u3092\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u3067\u306f\u300c2\u3067\u5272\u308a\u5207\u308c\u308b\u3082\u306e\u3092\u96c6\u3081\u308b\u300d\u2192\u300c\u8981\u7d20\u3092\u3059\u3079\u3066\u51fa\u529b\u300d\u3068\u3044\u3046\u69cb\u9020\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\uff12\u51e6\u7406\u306b\u5206\u5272\u3067\u304d\u3066\u3044\u307e\u3059\u3002\u53ef\u8aad\u6027\u304c\u4e0a\u304c\u308b\u307b\u304b\u3001\u90e8\u54c1\u6027\u3084\u30b3\u30fc\u30c9\u306e\u62bd\u8c61\u5ea6\u3082\u9ad8\u307e\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fstream\u53d6\u5f97\u5f8c\u3001\u4e2d\u9593\u64cd\u4f5c\u3068\u3057\u3066\u300cfilter\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u540d\u524d\u306e\u901a\u308a\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u8981\u7d20\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nfilter\u30e1\u30bd\u30c3\u30c9\u306b\u306f T -> boolean \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n(\u203b T\u306e\u610f\u5473\u304c\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u8abf\u3079\u3066\u304f\u3060\u3055\u3044\u3002\uff09\n\u30e9\u30e0\u30c0\u5f0f\u304ctrue\u306e\u8981\u7d20\u3060\u3051\u304c\u6b8b\u3063\u305fstream\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u7d42\u7aef\u51e6\u7406\u3068\u3057\u3066\u300cforEach\u300d\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3082\u540d\u524d\u3082\u901a\u308a\u300c\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u3066\u3044\u3063\u3066\u51e6\u7406\u3092\u5b9f\u884c\u300d\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u3002\n\u4ed6\u8a00\u8a9e\u3067\u306f\u304a\u99b4\u67d3\u307f\u306e\u69cb\u6587\u3067\u3059\u306d\u3002Java\u3060\u3068\u62e1\u5f35for\u6587\u306b\u76f8\u5f53\u3057\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u300c\uff12\u3067\u5272\u3063\u305f\u3089\u3042\u307e\u308a\u304c0\u306b\u306a\u308b\u3082\u306e\u3060\u3051\u300d\uff08\u4e2d\u9593\u64cd\u4f5c\uff09\u3092\u300c\uff11\u3064\u305a\u3064\u753b\u9762\u306b\u51fa\u529b\u3059\u308b\u300d\uff08\u7d42\u7aef\u51e6\u7406\uff09\u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4e2d\u9593\u64cd\u4f5c\u306e\u8fd4\u308a\u5024\u306b\u306f\u64cd\u4f5c\u9069\u7528\u5f8c\u306estream\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\u30b5\u30f3\u30d7\u30eb\u306e\u3088\u3046\u306b\u9023\u7d9a\u3057\u3066\u66f8\u304f\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3082\u3061\u308d\u3093\u3001\u6b21\u306e\u3088\u3046\u306b\u66f8\u304f\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```java\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\n        Stream<Integer> stream = integerList.stream(); // stream\u306e\u53d6\u5f97\n        Stream<Integer> stream2 = stream.filter(i -> i % 2 == 0); // \u4e2d\u9593\u64cd\u4f5c\n        stream2.forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u3064\u306a\u3052\u3066\u66f8\u3044\u305f\u307b\u3046\u304c\u53ef\u8aad\u6027\u304c\u3042\u304c\u308b\u306e\u3067\u7279\u5225\u306a\u7406\u7531\u304c\u306a\u3044\u9650\u308a\u3001\u9023\u7d50\u3057\u3066\u8a18\u8ff0\u3057\u307e\u3057\u3087\u3046\u3002\n\n# \u69d8\u3005\u306a\u4e2d\u9593\u64cd\u4f5c\n\n\u3088\u304f\u4f7f\u3046\u4e2d\u9593\u64cd\u4f5c\u3092\u6319\u3052\u3066\u3044\u304d\u307e\u3059\u3002\n\n## filter\n\u5148\u307b\u3069\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u6319\u3052\u305f\u3088\u3046\u306b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3092\u3059\u308b\u305f\u3081\u306e\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u5f15\u6570\u306b\u306f T -> boolean \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u5f0f\u304ctrue\u306e\u8981\u7d20\u3060\u3051\u3092\u96c6\u3081\u307e\u3059\u3002\n\n```java:\u5076\u6570\u53d6\u308a\u51fa\u3057\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .filter(i -> i % 2 == 0) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n## map\nmap \u306e\u5f15\u6570\u306b\u306f T -> U \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\u5909\u63db\u3059\u308b\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\n```java\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .map(i -> i * 2) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u3053\u306e\u3088\u3046\u306b\uff12\u500d\u306b\u3057\u3066\u307f\u305f\u308a\u3001\n\n```java:\u8981\u7d20\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8868\u793a\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .map(i -> \"\u8981\u7d20\u306f\" + i + \"\u3067\u3059\") // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u3053\u306e\u3088\u3046\u306b\u5225\u306e\u578b\u3092\u8fd4\u3059\u3088\u3046\u306b\uff08\u3053\u306e\u4f8b\u3067\u306fInteger\u304b\u3089String\uff09\u306b\u3057\u305f\u308a\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u6b21\u306e\u3088\u3046\u306a\u52d5\u7269\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\n```java:Animal\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\ninterface Animal {\n    String getCry();    // \u9cf4\u304d\u58f0\u3092\u53d6\u5f97\n}\n```\n\n\u52d5\u7269\u306e\u30ea\u30b9\u30c8\u306b\u5bfe\u3057\u3066map\u3092\u4f7f\u3044\u3001\u9cf4\u304d\u58f0\u3092\u51fa\u529b\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```java:map\u306e\u30b5\u30f3\u30d7\u30eb\nList<Animal> animalList = Arrays.asList(dog, cat, elephant);\nanimalList.stream() // stream\u306e\u53d6\u5f97\n        .map(animal -> animal.getCry()) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(cry -> System.out.println(cry)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n## sorted\nmap \u306e\u5f15\u6570\u306b\u306f (T, T) -> int \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\u4e26\u3073\u66ff\u3048\u308b\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u8981\u7d20\u3092\uff12\u3064\u305a\u3064\u53d6\u308a\u3001\u30e9\u30e0\u30c0\u5f0f\u306b\u6e21\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u8fd4\u308a\u5024\u304c\u6b63\u306a\u3089\u964d\u9806\u3001\u8ca0\u306a\u3089\u6607\u9806\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:\u964d\u9806\u306e\u30b5\u30f3\u30d7\u30eb1\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .sorted((a, b) -> b - a) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u3057\u304b\u3057\u3001\u5358\u7d14\u306a\u30bd\u30fc\u30c8\uff08\u6607\u9806\u3001\u964d\u9806\uff09\u3067\u3042\u308b\u5834\u5408\u306fComparator\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306enaturalOrder()\u3001reverseOrder()\u3092\u6e21\u3057\u3066\u3084\u308b\u306e\u304c\u4e00\u756a\u308f\u304b\u308a\u6613\u3044\u3068\u61d0\u3044\u307e\u3059\u3002\n\n```java:\u964d\u9806\u306e\u30b5\u30f3\u30d7\u30eb2\nList<Integer> integerList = Arrays.asList(1, 2, 3, 4, 5);\nintegerList.stream() // stream\u306e\u53d6\u5f97\n        .sorted(Comparator.reverseOrder()) // \u4e2d\u9593\u64cd\u4f5c\n        .forEach(i -> System.out.println(i)); // \u7d42\u7aef\u64cd\u4f5c\n```\n\n\u4ee5\u4e0a\uff13\u3064\u304c\u983b\u7e41\u306b\u4f7f\u3046\u4e2d\u9593\u64cd\u4f5c\u3067\u3059\u3002\n\u4ed6\u306b\u3082\u8272\u3005\u3042\u308b\u306e\u3067\u8208\u5473\u304c\u3042\u308b\u65b9\u306f\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u7d42\u7aef\u64cd\u4f5c\n\n## forEach\nforEach \u306e\u5f15\u6570\u306b\u306f (T) -> void \u3068\u306a\u308b\u30e9\u30e0\u30c0\u5f0f\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\u8981\u7d20\u3092\uff11\u3064\u305a\u3064\u53d6\u308a\u51fa\u3057\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u3059\u308b\u7d42\u7aef\u64cd\u4f5c\u3067\u3059\u3002\n\u4f7f\u3044\u65b9\u306f\u4eca\u307e\u3067\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u305d\u306e\u4ed6\u306e\u7d42\u7aef\u64cd\u4f5c\u306b\u3064\u3044\u3066\u306f\u5fdc\u7528\u7de8\u3067\u3084\u308a\u307e\u3059\u3002\n"}