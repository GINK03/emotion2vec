{"context": "RFC7159\u3067\u306f\u4ee5\u4e0b\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nRFC7159\n\"    quotation mark  U+0022\n\\    reverse solidus U+005C\n/    solidus         U+002F\n\\b   backspace       U+0008\n\\f   form feed       U+000C\n\\n   line feed       U+000A\n\\r   carriage return U+000D\n\\t   tab             U+0009\n\n\n\u3057\u304b\u3057\u3001Jackson\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f/\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u307e\u305b\u3093\u3002\n\nCharacterEscapes\nJackson\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u5bfe\u8c61\u6587\u5b57\u3092\u5236\u5fa1\u3059\u308b\u306b\u306f CharacterEscapes \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30a8\u30b9\u30b1\u30fc\u30d7\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e3\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\\(\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5)\u3092\u4ed8\u4e0e(\\/)\n\\uXXXX\u30d5\u30a9\u30fc\u30de\u30c3\u30c8(\\u002F)\n\u4efb\u610f\u306e\u5185\u5bb9(\u3042\u3042\u3042\u306a\u3069)\n\n\n1. \\(\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5)\u3092\u4ed8\u4e0e\nCharacterEscapes#getEscapeCodesForAscii()\u3067\u8fd4\u3059int[]\u306e'/'\u756a\u76ee\u306e\u8981\u7d20\u3092'/'\u306b\u3057\u307e\u3059\u3002\nCharacterEscapes#getEscapeSequence()\u306e\u623b\u308a\u5024\u306fnull\u3067OK.\nObjectMapper mapper = new ObjectMapper();\nmapper.getFactory().setCharacterEscapes(new CharacterEscapes() {\n\n  private final int[] escapeCodes;\n\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = '/';\n  }\n\n  @Override\n  public int[] getEscapeCodesForAscii() {\n    return escapeCodes;\n  }\n\n  @Override\n  public SerializableString getEscapeSequence(int ch) {\n    return null;\n  }\n});\n\n\n\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\\/\\/qiita.com\" -> https://qiita.com\n\n\n\n2. \\uXXXX\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n'/'\u756a\u76ee\u306e\u8981\u7d20\u3092ESCAPE_STANDARD\u306b\u3057\u307e\u3059\u3002\u4ed6\u306f\u540c\u3058\u3002\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = ESCAPE_STANDARD;\n  }\n\n\n\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\\u002F\\u002Fqiita.com\" -> https://qiita.com\n\n\n\n3. \u4efb\u610f\u306e\u5185\u5bb9\n'/'\u756a\u76ee\u306e\u8981\u7d20\u3092ESCAPE_CUSTOM\u306b\u3057\u3066\u3001\n\u30a8\u30b9\u30b1\u30fc\u30d7\u5f8c\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305fSerializableString\u3092\u8fd4\u3057\u307e\u3059\u3002\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = ESCAPE_STANDARD;\n  }\n\n  @Override\n  public SerializableString getEscapeSequence(int ch) {\n    return new SerializedString(\"\u3042\u3042\u3042\");\n  }\n\n\n\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\u3042\u3042\u3042\u3042\u3042\u3042qiita.com\" -> https:\u3042\u3042\u3042\u3042\u3042\u3042qiita.com\n\n\n\u3082\u3061\u308d\u3093\u3001\u4e0a\u306e\u3088\u3046\u306a\u9069\u5f53\u306a\u30a8\u30b9\u30b1\u30fc\u30d7\u3067\u306f\u5143\u306b\u306f\u623b\u3089\u306a\u3044\u3002\u3002\u3002\n[RFC7159](https://tools.ietf.org/html/rfc7159)\u3067\u306f\u4ee5\u4e0b\u3092\u30a8\u30b9\u30b1\u30fc\u30d7\u3059\u308b\u3068\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```text:RFC7159\n\"    quotation mark  U+0022\n\\    reverse solidus U+005C\n/    solidus         U+002F\n\\b   backspace       U+0008\n\\f   form feed       U+000C\n\\n   line feed       U+000A\n\\r   carriage return U+000D\n\\t   tab             U+0009\n```\n\n\u3057\u304b\u3057\u3001Jackson\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u8a2d\u5b9a\u3067\u306f`/`\u306f\u30a8\u30b9\u30b1\u30fc\u30d7\u3055\u308c\u307e\u305b\u3093\u3002\n\n# CharacterEscapes\n\nJackson\u306e\u30a8\u30b9\u30b1\u30fc\u30d7\u5bfe\u8c61\u6587\u5b57\u3092\u5236\u5fa1\u3059\u308b\u306b\u306f [CharacterEscapes](http://fasterxml.github.io/jackson-core/javadoc/2.7/com/fasterxml/jackson/core/io/CharacterEscapes.html) \u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\u30a8\u30b9\u30b1\u30fc\u30d7\u65b9\u6cd5\u306f\u4ee5\u4e0b\u306e3\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. \\\\(\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5)\u3092\u4ed8\u4e0e(`\\/`)\n2. \\uXXXX\u30d5\u30a9\u30fc\u30de\u30c3\u30c8(`\\u002F`)\n3. \u4efb\u610f\u306e\u5185\u5bb9(`\u3042\u3042\u3042`\u306a\u3069)\n\n## 1. \\\\(\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5)\u3092\u4ed8\u4e0e\n\n`CharacterEscapes#getEscapeCodesForAscii()`\u3067\u8fd4\u3059`int[]`\u306e`'/'`\u756a\u76ee\u306e\u8981\u7d20\u3092`'/'`\u306b\u3057\u307e\u3059\u3002\n`CharacterEscapes#getEscapeSequence()`\u306e\u623b\u308a\u5024\u306f`null`\u3067OK.\n\n```java\nObjectMapper mapper = new ObjectMapper();\nmapper.getFactory().setCharacterEscapes(new CharacterEscapes() {\n\n  private final int[] escapeCodes;\n\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = '/';\n  }\n\n  @Override\n  public int[] getEscapeCodesForAscii() {\n    return escapeCodes;\n  }\n\n  @Override\n  public SerializableString getEscapeSequence(int ch) {\n    return null;\n  }\n});\n```\n\n```text:\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\\/\\/qiita.com\" -> https://qiita.com\n```\n\n## 2. \\uXXXX\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\n\n`'/'`\u756a\u76ee\u306e\u8981\u7d20\u3092`ESCAPE_STANDARD`\u306b\u3057\u307e\u3059\u3002\u4ed6\u306f\u540c\u3058\u3002\n\n```java\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = ESCAPE_STANDARD;\n  }\n```\n\n```text:\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\\u002F\\u002Fqiita.com\" -> https://qiita.com\n```\n\n## 3. \u4efb\u610f\u306e\u5185\u5bb9\n\n`'/'`\u756a\u76ee\u306e\u8981\u7d20\u3092`ESCAPE_CUSTOM`\u306b\u3057\u3066\u3001\n\u30a8\u30b9\u30b1\u30fc\u30d7\u5f8c\u6587\u5b57\u5217\u3092\u6307\u5b9a\u3057\u305f`SerializableString`\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n```java\n  {\n    escapeCodes = standardAsciiEscapesForJSON();\n    escapeCodes['/'] = ESCAPE_STANDARD;\n  }\n\n  @Override\n  public SerializableString getEscapeSequence(int ch) {\n    return new SerializedString(\"\u3042\u3042\u3042\");\n  }\n```\n\n```text:\u30a8\u30b9\u30b1\u30fc\u30d7\u3068\u30a2\u30f3\u30a8\u30b9\u30b1\u30fc\u30d7\nhttps://qiita.com -> \"https:\u3042\u3042\u3042\u3042\u3042\u3042qiita.com\" -> https:\u3042\u3042\u3042\u3042\u3042\u3042qiita.com\n```\n\n\u3082\u3061\u308d\u3093\u3001\u4e0a\u306e\u3088\u3046\u306a\u9069\u5f53\u306a\u30a8\u30b9\u30b1\u30fc\u30d7\u3067\u306f\u5143\u306b\u306f\u623b\u3089\u306a\u3044\u3002\u3002\u3002\n", "tags": ["JSON", "Jackson", "Java", "Android"]}