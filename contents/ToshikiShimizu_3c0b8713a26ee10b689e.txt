{"tags": ["Python", "scikit-learn", "NeuralNetwork"], "context": "\n\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3)\u3092\u5f04\u3063\u3066\u307f\u305f\u3044\u3068\u3044\u3046\u6642\u304c\u7d50\u69cb\u3042\u308b\u3002\u6700\u8fd1\u306ftensorflow, chainer, theano\u3068\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u8c4a\u5bcc\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3093\u3060\u3051\u3069\u3001\u74b0\u5883\u69cb\u7bc9\u304c\u5c11\u3057\u9762\u5012\u3060\u3063\u305f\u308a\u3082\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u306a\u305c\u304b\u6a5f\u68b0\u5b66\u7fd2\u3067\u306f\u304a\u306a\u3058\u307f\u306escikit-learn\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3002\uff08\u3061\u306a\u307f\u306bPyBrain\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\uff09\n\nscikit-learn 0.18.0\n\u3057\u304b\u3057\u30012016\u5e749\u6708\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fVer. 0.18.0\u3067\u3068\u3046\u3068\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5b9f\u88c5\u3055\u308c\u305f\u3002\u3053\u308c\u3067\u304a\u306a\u3058\u307f\u306e\u8d85\u30b7\u30f3\u30d7\u30eb\u306aAPI\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3084\u3063\u305f\u306d\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u30a2\u30e4\u30e1\u5206\u985e\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \n\nsklearn_nn.py\n# -*- coding: utf-8 -*-\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPClassifier\n\niris = load_iris()\nX = iris.data\ny = iris.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)\nclf = MLPClassifier(solver=\"sgd\",random_state=0,max_iter=10000)\nclf.fit(X_train, y_train)\nprint (clf.score(X_test, y_test))\n\n\nneural_network.MLPClassifier()\n\u306e\u4ed6\u306b\u3082\nneural_network.BernoulliRBM()\nneural_network.MLPRegressor()\n\u306a\u3069\u304c\u3042\u308b\u3002\n\nAPI\nneural_network.MLPClassifier()\u304c\u3068\u308b\u5f15\u6570\u306b\u3064\u3044\u3066\u3002\n\u8a73\u3057\u304f\u306f\u516c\u5f0f\nhttp://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html#sklearn.neural_network.MLPClassifier\n\u3092\u898b\u3066\u307b\u3057\u3044\u304c\u3001\u7c21\u6f54\u306b\u307e\u3068\u3081\u308b\u3002\uff08\u53f3\u8fba\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff09\nhidden_layer_sizes=(100, )#\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570(\u591a\u5c64\u306b\u3082\u3067\u304d\u308b)\nactivation='relu'#\u6d3b\u6027\u5316\u95a2\u6570(identify, logistic, tanh, relu)\nsolver='adam'#\u6700\u9069\u5316\u624b\u6cd5(lbfgs(\u6e96\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5), sgd, adam)\nalpha=0.0001\nbatch_size='auto'#\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(sgd, adam\u3067\u9069\u7528)\nlearning_rate='constant'\nlearning_rate_init=0.001\npower_t=0.5\nmax_iter=200#\u6700\u5927\u30a8\u30dd\u30c3\u30af\u6570\nshuffle=True#iteration\u306e\u5ea6\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\nrandom_state=None\ntol=0.0001\nverbose=False\nwarm_start=False\nmomentum=0.9\nnesterovs_momentum=True\nearly_stopping=False\nvalidation_fraction=0.1\nbeta_1=0.9\nbeta_2=0.999\nepsilon=1e-08\n\n\u304b\u306a\u308a\u3001\u7d30\u304b\u304f\u8a2d\u5b9a\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3044\u305f\u3044\u4eba\u306e\u5927\u534a\u306e\u4eba\u304c\u3053\u308c\u3067\u5341\u5206\u306a\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\u305f\u3060\u3057GPGPU\u7b49\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u4eba\u306f\u7d20\u76f4\u306btensorflow\u306a\u3069\u3092\u4f7f\u304a\u3046\u3002\n\n\u88dc\u8db3\uff1amodel_selection\u30e2\u30b8\u30e5\u30fc\u30eb\ntrain_test_split\u306f\u4ee5\u524d\u306fcross_validation\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u3042\u3063\u305f\u306e\u3060\u304c\u3001\n0.18.0\u304b\u3089model_selection\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u79fb\u52d5\u3057\u305f\u3088\u3046\u3060\u3002\n#\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\n\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af(\u591a\u5c64\u30d1\u30fc\u30bb\u30d7\u30c8\u30ed\u30f3)\u3092\u5f04\u3063\u3066\u307f\u305f\u3044\u3068\u3044\u3046\u6642\u304c\u7d50\u69cb\u3042\u308b\u3002\u6700\u8fd1\u306ftensorflow, chainer, theano\u3068\u30c7\u30a3\u30fc\u30d7\u30e9\u30fc\u30cb\u30f3\u30b0\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u8c4a\u5bcc\u306b\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3093\u3060\u3051\u3069\u3001\u74b0\u5883\u69cb\u7bc9\u304c\u5c11\u3057\u9762\u5012\u3060\u3063\u305f\u308a\u3082\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u306a\u305c\u304b\u6a5f\u68b0\u5b66\u7fd2\u3067\u306f\u304a\u306a\u3058\u307f\u306escikit-learn\u3067\u306f\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u304b\u3063\u305f\u3002\uff08\u3061\u306a\u307f\u306bPyBrain\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3042\u308b\uff09\n#scikit-learn 0.18.0\n\u3057\u304b\u3057\u30012016\u5e749\u6708\u306b\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305fVer. 0.18.0\u3067\u3068\u3046\u3068\u3046\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5b9f\u88c5\u3055\u308c\u305f\u3002\u3053\u308c\u3067\u304a\u306a\u3058\u307f\u306e\u8d85\u30b7\u30f3\u30d7\u30eb\u306aAPI\u3067\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u304c\u5229\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3084\u3063\u305f\u306d\u3002\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3067\u306f\u30a2\u30e4\u30e1\u5206\u985e\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \n\n```python:sklearn_nn.py\n# -*- coding: utf-8 -*-\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\nfrom sklearn.neural_network import MLPClassifier\n\niris = load_iris()\nX = iris.data\ny = iris.target\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)\nclf = MLPClassifier(solver=\"sgd\",random_state=0,max_iter=10000)\nclf.fit(X_train, y_train)\nprint (clf.score(X_test, y_test))\n```\n\nneural_network.MLPClassifier()\n\u306e\u4ed6\u306b\u3082\nneural_network.BernoulliRBM()\nneural_network.MLPRegressor()\n\u306a\u3069\u304c\u3042\u308b\u3002\n\n#API\nneural_network.MLPClassifier()\u304c\u3068\u308b\u5f15\u6570\u306b\u3064\u3044\u3066\u3002\n\u8a73\u3057\u304f\u306f\u516c\u5f0f\nhttp://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html#sklearn.neural_network.MLPClassifier\n\u3092\u898b\u3066\u307b\u3057\u3044\u304c\u3001\u7c21\u6f54\u306b\u307e\u3068\u3081\u308b\u3002\uff08\u53f3\u8fba\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\uff09\n\n```python:\nhidden_layer_sizes=(100, )#\u96a0\u308c\u5c64\u306e\u30ce\u30fc\u30c9\u6570(\u591a\u5c64\u306b\u3082\u3067\u304d\u308b)\nactivation='relu'#\u6d3b\u6027\u5316\u95a2\u6570(identify, logistic, tanh, relu)\nsolver='adam'#\u6700\u9069\u5316\u624b\u6cd5(lbfgs(\u6e96\u30cb\u30e5\u30fc\u30c8\u30f3\u6cd5), sgd, adam)\nalpha=0.0001\nbatch_size='auto'#\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba(sgd, adam\u3067\u9069\u7528)\nlearning_rate='constant'\nlearning_rate_init=0.001\npower_t=0.5\nmax_iter=200#\u6700\u5927\u30a8\u30dd\u30c3\u30af\u6570\nshuffle=True#iteration\u306e\u5ea6\u306b\u30b5\u30f3\u30d7\u30eb\u3092\u30b7\u30e3\u30c3\u30d5\u30eb\nrandom_state=None\ntol=0.0001\nverbose=False\nwarm_start=False\nmomentum=0.9\nnesterovs_momentum=True\nearly_stopping=False\nvalidation_fraction=0.1\nbeta_1=0.9\nbeta_2=0.999\nepsilon=1e-08\n```\n\u304b\u306a\u308a\u3001\u7d30\u304b\u304f\u8a2d\u5b9a\u3067\u304d\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3044\u305f\u3044\u4eba\u306e\u5927\u534a\u306e\u4eba\u304c\u3053\u308c\u3067\u5341\u5206\u306a\u306e\u3067\u306f\u306a\u3044\u3060\u308d\u3046\u304b\u3002\u305f\u3060\u3057GPGPU\u7b49\u306f\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u3046\u3044\u3063\u305f\u4eba\u306f\u7d20\u76f4\u306btensorflow\u306a\u3069\u3092\u4f7f\u304a\u3046\u3002\n\n#\u88dc\u8db3\uff1amodel_selection\u30e2\u30b8\u30e5\u30fc\u30eb\ntrain_test_split\u306f\u4ee5\u524d\u306fcross_validation\u30e2\u30b8\u30e5\u30fc\u30eb\u5185\u306b\u3042\u3063\u305f\u306e\u3060\u304c\u3001\n0.18.0\u304b\u3089model_selection\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u79fb\u52d5\u3057\u305f\u3088\u3046\u3060\u3002\n"}