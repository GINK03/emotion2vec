{"context": " More than 1 year has passed since last update.\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u306e\u4f1d\u64ad\nActor Model\u306eActor\u306fmailbox\u306b\u5c4a\u3051\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u5206\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e00\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u969c\u5bb3\u304c\u8d77\u3053\u3063\u3066\u51e6\u7406\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u305f\u6642\u306b\u51e6\u7406\u306e\u9045\u5ef6\u304c\u5f8c\u7d9a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306b\u3082\u4f1d\u64ad\u3057\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u51e6\u7406\u304c\u5e73\u574750ms\u306e\u51e6\u7406\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b(Producer)\u304c50ms\u4ee5\u4e0a\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u305f\u308a\u3059\u308b\u3068\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001producer\u304c40ms\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u3068\u30011\u79d2\u5f8c\u306b\u306f250ms\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nmailbox\u306e\u5bb9\u91cf\n\u3053\u3053\u3067\u767a\u751f\u3057\u3046\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n(mailbox\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570) \u00d7 (\u30e1\u30c3\u30bb\u30fc\u30b8\u306e1\u3064\u3042\u305f\u308a\u306e\u51e6\u7406\u6642\u9593)\n\n\u3064\u307e\u308amailbox\u306b\u7a4d\u307e\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u6642\u9593\u3082\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002mailbox\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3057\u305f\u5834\u5408\u3001\u5bb9\u91cf\u3092\u8d85\u3048\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306f\u5931\u6557\u306b\u306a\u308b\u306e\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b\u306e\u65b9\u3067timeout\u306b\u3088\u308b\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u884c\u3046\u304b\u5185\u90e8\u3067\u5931\u6557\u3092\u691c\u77e5\u3057\u3066\u56de\u5fa9\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nAkka\u3067\u306emailbox\u306e\u5236\u9650\u306e\u4ed5\u65b9\nAkka\u306eActor\u3067mailbox\u3092\u5236\u9650\u3059\u308b\u306b\u306f\u3001mailbox\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3059\u308bAcor\u306bRequiresMessageQueue\u30c8\u30ec\u30a4\u30c8\u3092mix-in\u3057\u3066\u5fc5\u8981\u306a\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n// \u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3059\u308bActor\nclass Worker extends Actor\n    with RequiresMessageQueue[BoundedMessageQueueSemantics] with ActorLogging {\n  import Worker._\n  lazy val counter = context.actorSelection(\"/user/master/counter\")\n\n  def receive = {\n    case work: Work =>\n      Thread.sleep(150L)\n      counter ! Finished\n  }\n}\n\n# application.conf\n\nakka.actor.mailbox.requirements {\n  \"akka.dispatch.BoundedMessageQueueSemantics\" = bounded-mailbox\n}\n\nbounded-mailbox {\n  # mailbox\u306e\u578b\n  mailbox-type = \"akka.dispatch.BoundedMailbox\"\n  # mailbox\u306e\u5bb9\u91cf\n  mailbox-capacity = 4\n  # mailbox\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7a4d\u3080\u3068\u304d\u306b\u3053\u306e\u6642\u9593\u4ee5\u5185\u306bmailbox\u304c\u7a7a\u304b\u306a\u304b\u3063\u305f\u3089timeout\u306b\u306a\u308b\u3002\n  # timeout\u306b\u306a\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306fdead letter\u306b\u9001\u3089\u308c\u308b\u3002\n  mailbox-push-timeout-time = 50ms\n}\n\n\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\n\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u304b\u3089\u6ea2\u308c\u3066\u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u4f55\u3082\u3057\u306a\u3044\u3068Dead Letter\u306b\u9001\u3089\u308c\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u30ea\u30ab\u30d0\u30ea\u306a\u3069\u306e\u5bfe\u51e6\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u9001\u308a\u624b\u306e\u65b9\u3067\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport scala.concurrent.duration._\nimport java.util.concurrent.TimeoutException\n\n...\n\nval timeout = 50.milliseconds\n\nworker ? work onFailure {\n  case te: TimeoutException =>\n  // \u4f55\u3089\u304b\u306e\u51e6\u7406\n}\n\n\u3053\u3053\u3067ask pattern\u3092\u7528\u3044\u308b\u4ee3\u308f\u308a\u306bCircuit Breaker\u3092\u7528\u3044\u308b\u3053\u3068\u3067Producer\u304cConsumer\u306b\u304b\u3051\u308b\u8ca0\u8377\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u53c2\u8003\u6587\u732e\nReactive Design Patterns - 2.2.5 Bounding Latency even when Things go Wrong\n### \u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u306e\u4f1d\u64ad\nActor Model\u306eActor\u306fmailbox\u306b\u5c4a\u3051\u3089\u308c\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u81ea\u5206\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u4e00\u3064\u305a\u3064\u51e6\u7406\u3059\u308b\u306e\u3067\u3001\u4f55\u3089\u304b\u306e\u969c\u5bb3\u304c\u8d77\u3053\u3063\u3066\u51e6\u7406\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u305f\u6642\u306b\u51e6\u7406\u306e\u9045\u5ef6\u304c\u5f8c\u7d9a\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306b\u3082\u4f1d\u64ad\u3057\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001\u3042\u308b\u51e6\u7406\u304c\u5e73\u574750ms\u306e\u51e6\u7406\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b(Producer)\u304c50ms\u4ee5\u4e0a\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u305f\u308a\u3059\u308b\u3068\u3001\u30ec\u30a4\u30c6\u30f3\u30b7\u306f\u3069\u3093\u3069\u3093\u5927\u304d\u304f\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u3001producer\u304c40ms\u306e\u9593\u9694\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308a\u7d9a\u3051\u308b\u3068\u30011\u79d2\u5f8c\u306b\u306f250ms\u306e\u9045\u5ef6\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n### mailbox\u306e\u5bb9\u91cf\n\u3053\u3053\u3067\u767a\u751f\u3057\u3046\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n(mailbox\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570) \u00d7 (\u30e1\u30c3\u30bb\u30fc\u30b8\u306e1\u3064\u3042\u305f\u308a\u306e\u51e6\u7406\u6642\u9593)\n```\n\n\u3064\u307e\u308amailbox\u306b\u7a4d\u307e\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u6570\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9045\u5ef6\u6642\u9593\u3082\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002mailbox\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3057\u305f\u5834\u5408\u3001\u5bb9\u91cf\u3092\u8d85\u3048\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u51e6\u7406\u306f\u5931\u6557\u306b\u306a\u308b\u306e\u3067\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u306e\u9001\u308a\u624b\u306e\u65b9\u3067timeout\u306b\u3088\u308b\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u884c\u3046\u304b\u5185\u90e8\u3067\u5931\u6557\u3092\u691c\u77e5\u3057\u3066\u56de\u5fa9\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### Akka\u3067\u306emailbox\u306e\u5236\u9650\u306e\u4ed5\u65b9\nAkka\u306eActor\u3067mailbox\u3092\u5236\u9650\u3059\u308b\u306b\u306f\u3001mailbox\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3059\u308bAcor\u306bRequiresMessageQueue\u30c8\u30ec\u30a4\u30c8\u3092mix-in\u3057\u3066\u5fc5\u8981\u306a\u8a2d\u5b9a\u3092\u884c\u3044\u307e\u3059\u3002\n\n```\n// \u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u306e\u5bb9\u91cf\u3092\u5236\u9650\u3059\u308bActor\nclass Worker extends Actor\n    with RequiresMessageQueue[BoundedMessageQueueSemantics] with ActorLogging {\n  import Worker._\n  lazy val counter = context.actorSelection(\"/user/master/counter\")\n\n  def receive = {\n    case work: Work =>\n      Thread.sleep(150L)\n      counter ! Finished\n  }\n}\n```\n\n```\n# application.conf\n\nakka.actor.mailbox.requirements {\n  \"akka.dispatch.BoundedMessageQueueSemantics\" = bounded-mailbox\n}\n\nbounded-mailbox {\n  # mailbox\u306e\u578b\n  mailbox-type = \"akka.dispatch.BoundedMailbox\"\n  # mailbox\u306e\u5bb9\u91cf\n  mailbox-capacity = 4\n  # mailbox\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u7a4d\u3080\u3068\u304d\u306b\u3053\u306e\u6642\u9593\u4ee5\u5185\u306bmailbox\u304c\u7a7a\u304b\u306a\u304b\u3063\u305f\u3089timeout\u306b\u306a\u308b\u3002\n  # timeout\u306b\u306a\u3063\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306fdead letter\u306b\u9001\u3089\u308c\u308b\u3002\n  mailbox-push-timeout-time = 50ms\n}\n```\n\n### \u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\n\u30e1\u30fc\u30eb\u30dc\u30c3\u30af\u30b9\u304b\u3089\u6ea2\u308c\u3066\u5931\u6557\u3057\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u4f55\u3082\u3057\u306a\u3044\u3068Dead Letter\u306b\u9001\u3089\u308c\u308b\u3060\u3051\u306a\u306e\u3067\u3001\u30ea\u30ab\u30d0\u30ea\u306a\u3069\u306e\u5bfe\u51e6\u304c\u5fc5\u8981\u306a\u5834\u5408\u306f\u9001\u308a\u624b\u306e\u65b9\u3067\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u3057\u3066\u4f55\u3089\u304b\u306e\u51e6\u7406\u3092\u884c\u3046\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n```\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport scala.concurrent.duration._\nimport java.util.concurrent.TimeoutException\n\n...\n\nval timeout = 50.milliseconds\n\nworker ? work onFailure {\n  case te: TimeoutException =>\n  // \u4f55\u3089\u304b\u306e\u51e6\u7406\n}\n```\n\n\u3053\u3053\u3067ask pattern\u3092\u7528\u3044\u308b\u4ee3\u308f\u308a\u306bCircuit Breaker\u3092\u7528\u3044\u308b\u3053\u3068\u3067Producer\u304cConsumer\u306b\u304b\u3051\u308b\u8ca0\u8377\u3092\u5236\u9650\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n#### \u53c2\u8003\u6587\u732e\n[Reactive Design Patterns](https://www.manning.com/books/reactive-design-patterns) - 2.2.5 Bounding Latency even when Things go Wrong\n", "tags": ["Scala", "Akka"]}