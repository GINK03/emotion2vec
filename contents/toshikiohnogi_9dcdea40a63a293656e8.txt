{"context": "MeCab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u5b50\u5206\u305f\u3061\u3092\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3044\u308d\u3044\u308d\u3057\u305f\u3044\uff0e\n\u8a00\u8a9e\u51e6\u7406\uff08\uff1f\uff09\u306f\u521d\u5fc3\u8005\u306a\u306e\u3067\u300c\u3053\u306e\u30ec\u30d9\u30eb\u3092\u66f8\u304d\u7559\u3081\u308b\u306e\u304b\u3088\uff01\u300d\u307f\u305f\u3044\u306a\u306e\u306f\u5927\u76ee\u306b\u898b\u3066\u6b32\u3057\u3044\uff0e\n\nPython\u3067\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\nPython\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570 set \u3092\u7528\u3044\u308b\uff0e\n\nsample1.py\n###\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u3064\u3082\u308a\u306e\u5358\u8a9e\u305f\u3061\nlist1 = ['a', 'b', 'c', 'd']\nlist2 = ['a', 'c', 'd', 'e']\n\n###\u7d44\u307f\u8fbc\u307f\u95a2\u6570 set \u3067\u5909\u63db\np = set(list1)\nq = set(list2)\n\n###\u7a4d\u96c6\u5408\nans = (p & q)\n\n###\u5171\u901a\u306e\u5358\u8a9e\u304c\u51fa\u3066\u304f\u308b\nprint(ans)\n\n#python\u306e\u6c17\u5206\u9806\u3067\u91cd\u8907\u6587\u5b57\uff08\u5358\u8a9e\uff09\u304c\u51fa\u529b\u3055\u308c\u308b\n#>>>[ 'a' , 'b' , 'c' ]\n\n\n\n\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u300c set \u300d\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\uff0cset\u95a2\u6570\u306b\u3064\u3044\u3066\uff0e\n\nset \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u56fa\u6709\u306e hashable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9806\u5e8f\u306a\u3057\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u901a\u5e38\u306e\u7528\u9014\u306b\u306f\u3001\u5e30\u5c5e\u30c6\u30b9\u30c8\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u304b\u3089\u306e\u91cd\u8907\u9664\u53bb\u3001\u7a4d\u96c6\u5408\u3001\u548c\u96c6\u5408\u3001\u5dee\u96c6\u5408\u3001\u5bfe\u79f0\u5dee (\u6392\u4ed6\u7684\u8ad6\u7406\u548c) \u306e\u3088\u3046\u306a\u6570\u5b66\u7684\u6f14\u7b97\u306e\u8a08\u7b97\u304c\u542b\u307e\u308c\u307e\u3059\u3002\nhttp://docs.python.jp/3.5/library/stdtypes.html#types-set\n\n\u3053\u308c\u3067\uff0c\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\nMeCab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u3082\u306e\u3092\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b\nYahoo\u30cb\u30e5\u30fc\u30b9\u30c8\u30c3\u30d7\u306b\u3042\u3063\u305f\u8a18\u4e8b\u306e\u672c\u6587\u3092\u63a1\u7528\uff0e\n\n\u5c0f\u5009\u76e3\u7763\u30d9\u30f3\u30c1\u304b\u3089\u7acb\u3061\u4e0a\u304c\u308c\u305a\u2026\u540d\u53e4\u5c4b\u3001\u964d\u683c\u73fe\u5b9f\u5473\u300c\u73fe\u72b6\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u304f\u3057\u304b\u306a\u3044\u300d\nhttp://headlines.yahoo.co.jp/hl?a=20160723-01629523-gekisaka-socc\n\n\u95a2\u9023\u30cb\u30e5\u30fc\u30b9\u3067\u3042\u308b\u4ee5\u4e0b\u3092\uff0c\u91cd\u8907\u5358\u8a9e\u62bd\u51fa\u306e\u305f\u3081\u306e\u751f\u3051\u8d04\u306b\u63a1\u7528\uff0e\n\n\u5927\u5bae\u306e\u6e0b\u8c37\u76e3\u7763\u306b1\u8a66\u5408\u306e\u30d9\u30f3\u30c1\u5165\u308a\u505c\u6b62\u51e6\u5206\u2026\u6d66\u548c\u3068\u306e\u30c0\u30fc\u30d3\u30fc\u3067\u4e3b\u5be9\u3092\u4fae\u8fb1\nhttp://headlines.yahoo.co.jp/hl?a=20160722-00471156-soccerk-socc\n\n\u3042\u3089\u304b\u3058\u3081\u672c\u6587\u3092\u300ctext1.txt\u300d\u300ctext2.txt\u300d\u3068\u3057\u3066\u305d\u308c\u305e\u308c\u4fdd\u5b58\u3057\u307e\u3059\uff0e\n\n\u5f62\u614b\u7d20\u89e3\u6790\u3059\u308b\nMeCab\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308b\uff0e\n\nsample2.py\nimport MeCab\n\n\nclass getWords():\n\n    def readText(self, filename):\n        ###\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\n        with open(filename + '.txt', 'r', encoding='utf-8') as f:\n            tText = f.read()\n            f.close()\n        return tText\n\n\n    def mecab(self, text):\n        ###MeCab\n        mThings = MeCab.Tagger('Ochasen')\n        node = mThings.parseToNode(text)\n\n        ###\u5f62\u614b\u7d20\u89e3\u6790\n        keywords = []\n        while node:\n            if node.feature.split(',')[0] == '\u540d\u8a5e':\n                keywords.append(node.surface)\n            node = node.next\n        return keywords\n\n\n\u3053\u3044\u3064\u3092\u767a\u52d5\u3059\u308b\u3053\u3068\u3067\uff0cMeCab\u69d8\u304c\u300c\u540d\u8a5e\u300d\u3060\u3068\u5224\u65ad\u3057\u305f\u5358\u8a9e\u3092keywords\u914d\u5217\u306b\u3076\u3061\u8fbc\u3093\u3067\uff0c\u8fd4\u3059\uff0e\n\u30af\u30e9\u30b9\u306b\u3057\u306a\u3044\u3067\u30b4\u30ea\u62bc\u3059\u3068\uff0c\u300ckeywords.append(node.surface)\u300d\u306e\u3042\u305f\u308a\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\uff0e\n\n\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u6587\u66f8\u306e\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\n\u30af\u30e9\u30b9 getWords \u3067\u624b\u306b\u5165\u308c\u305f\u5b50\u5206\u305f\u3061\u306f\u914d\u5217\u306b\u53ce\u5bb9\u3055\u308c\u3066\u904b\u3070\u308c\u3066\u304f\u308b\uff0e\n\u3053\u306e\u914d\u5217\u306f\uff0c\u6700\u521d\u306b\u66f8\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9sample1.py\u306e\u300clist1\u300d\u3068\u300clist2\u300d\u306b\u3042\u305f\u308b\u3082\u306e\u306a\u306e\u3067\uff0c\u3042\u3068\u306fsample1.py\u306e\u51e6\u7406\u306e\u6d41\u308c\u306b\u624b\u306b\u5165\u308c\u305f\u5b50\u5206\u305f\u3061\u3092\u653e\u308a\u8fbc\u3080\u3053\u3068\u3067\uff0c\u91cd\u8907\u5358\u8a9e\u306e\u62bd\u51fa\u304c\u3067\u304d\u308b\uff0e\n\nmecab-test.py\nimport MeCab\n\nclass getWords():\n\n    def readText(self, filename):\n        ###\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\n        with open(filename + '.txt', 'r', encoding='utf-8') as f:\n            tText = f.read()\n            f.close()\n        return tText\n\n\n    def mecab(self, text):\n        ###MeCab\n        mThings = MeCab.Tagger('Ochasen')\n        node = mThings.parseToNode(text)\n\n        ###\u5f62\u614b\u7d20\u89e3\u6790\n        keywords = []\n        while node:\n            if node.feature.split(',')[0] == '\u540d\u8a5e':\n                keywords.append(node.surface)\n            node = node.next\n        return keywords\n\n\nif __name__ == '__main__':\n\n    gWords1 = getWords()\n    gWords2 = getWords()\n\n    text1 = gWords1.readText('text1')\n    text2 = gWords2.readText('text2')\n\n    mecabWords1 = gWords1.mecab(text1)\n    mecabWords2 = gWords2.mecab(text2)\n\n    #print(mecabWords1)\n    #print(mecabWords2)\n\n    setMw1 = set(mecabWords1)\n    setMw2 = set(mecabWords2)\n\n    andWords = setMw1 & setMw2\n\n    print(andWords)\n    #>>>> {'\u767a\u8868', '1', '\u3053\u3068', '\u6226', '\u8a66\u5408', '\u30d9\u30f3\u30c1', '\u76e3\u7763', '17', '\u5f8c', 'J'}\n\n\n\n\u307e\u3068\u3081\n2\u3064\u306e\u6587\u66f8\u306e\u91cd\u8907\u5358\u8a9e\u306e\u62bd\u51fa\u306f\u610f\u5916\u3068\u7c21\u5358\u306b\u3067\u304d\u308b\uff0e\u308f\u305f\u3057\u306f\u91cd\u8907\u5358\u8a9e\u62bd\u51fa\u3088\u308a\u3082\u74b0\u5883\u69cb\u7bc9\u306e\u307b\u3046\u306b\u83ab\u5927\u306a\u6642\u9593\u3092\u8981\u3057\u305f\uff0e\u3060\u308c\u304b\u6700\u5f37\u306e\u74b0\u5883\u69cb\u7bc9\u307e\u3068\u3081\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\nMeCab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u5b50\u5206\u305f\u3061\u3092\u914d\u5217\u306b\u683c\u7d0d\u3057\u3066\u3044\u308d\u3044\u308d\u3057\u305f\u3044\uff0e\n\u8a00\u8a9e\u51e6\u7406\uff08\uff1f\uff09\u306f\u521d\u5fc3\u8005\u306a\u306e\u3067\u300c\u3053\u306e\u30ec\u30d9\u30eb\u3092\u66f8\u304d\u7559\u3081\u308b\u306e\u304b\u3088\uff01\u300d\u307f\u305f\u3044\u306a\u306e\u306f\u5927\u76ee\u306b\u898b\u3066\u6b32\u3057\u3044\uff0e\n\nPython\u3067\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\n==\n\nPython\u306e\u7d44\u307f\u8fbc\u307f\u95a2\u6570 set \u3092\u7528\u3044\u308b\uff0e\n\n```py3:sample1.py\n###\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u3064\u3082\u308a\u306e\u5358\u8a9e\u305f\u3061\nlist1 = ['a', 'b', 'c', 'd']\nlist2 = ['a', 'c', 'd', 'e']\n\n###\u7d44\u307f\u8fbc\u307f\u95a2\u6570 set \u3067\u5909\u63db\np = set(list1)\nq = set(list2)\n\n###\u7a4d\u96c6\u5408\nans = (p & q)\n\n###\u5171\u901a\u306e\u5358\u8a9e\u304c\u51fa\u3066\u304f\u308b\nprint(ans)\n\n#python\u306e\u6c17\u5206\u9806\u3067\u91cd\u8907\u6587\u5b57\uff08\u5358\u8a9e\uff09\u304c\u51fa\u529b\u3055\u308c\u308b\n#>>>[ 'a' , 'b' , 'c' ]\n```\n\n\u7d44\u307f\u8fbc\u307f\u95a2\u6570\u300c set \u300d\n--\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304b\u3089\uff0cset\u95a2\u6570\u306b\u3064\u3044\u3066\uff0e\n\n>set \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u3001\u56fa\u6709\u306e hashable \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u9806\u5e8f\u306a\u3057\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\u901a\u5e38\u306e\u7528\u9014\u306b\u306f\u3001\u5e30\u5c5e\u30c6\u30b9\u30c8\u3001\u30b7\u30fc\u30b1\u30f3\u30b9\u304b\u3089\u306e\u91cd\u8907\u9664\u53bb\u3001\u7a4d\u96c6\u5408\u3001\u548c\u96c6\u5408\u3001\u5dee\u96c6\u5408\u3001\u5bfe\u79f0\u5dee (\u6392\u4ed6\u7684\u8ad6\u7406\u548c) \u306e\u3088\u3046\u306a\u6570\u5b66\u7684\u6f14\u7b97\u306e\u8a08\u7b97\u304c\u542b\u307e\u308c\u307e\u3059\u3002\n>http://docs.python.jp/3.5/library/stdtypes.html#types-set\n\n\u3053\u308c\u3067\uff0c\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\uff0e\n\nMeCab\u3067\u5f62\u614b\u7d20\u89e3\u6790\u3057\u305f\u3082\u306e\u3092\u5f15\u3063\u5f35\u3063\u3066\u304f\u308b\n==\n\nYahoo\u30cb\u30e5\u30fc\u30b9\u30c8\u30c3\u30d7\u306b\u3042\u3063\u305f\u8a18\u4e8b\u306e\u672c\u6587\u3092\u63a1\u7528\uff0e\n\n>\u5c0f\u5009\u76e3\u7763\u30d9\u30f3\u30c1\u304b\u3089\u7acb\u3061\u4e0a\u304c\u308c\u305a\u2026\u540d\u53e4\u5c4b\u3001\u964d\u683c\u73fe\u5b9f\u5473\u300c\u73fe\u72b6\u306e\u4e2d\u3067\u3084\u3063\u3066\u3044\u304f\u3057\u304b\u306a\u3044\u300d\n>http://headlines.yahoo.co.jp/hl?a=20160723-01629523-gekisaka-socc\n\n\u95a2\u9023\u30cb\u30e5\u30fc\u30b9\u3067\u3042\u308b\u4ee5\u4e0b\u3092\uff0c\u91cd\u8907\u5358\u8a9e\u62bd\u51fa\u306e\u305f\u3081\u306e\u751f\u3051\u8d04\u306b\u63a1\u7528\uff0e\n\n>\u5927\u5bae\u306e\u6e0b\u8c37\u76e3\u7763\u306b1\u8a66\u5408\u306e\u30d9\u30f3\u30c1\u5165\u308a\u505c\u6b62\u51e6\u5206\u2026\u6d66\u548c\u3068\u306e\u30c0\u30fc\u30d3\u30fc\u3067\u4e3b\u5be9\u3092\u4fae\u8fb1\n>http://headlines.yahoo.co.jp/hl?a=20160722-00471156-soccerk-socc\n\n\u3042\u3089\u304b\u3058\u3081\u672c\u6587\u3092\u300ctext1.txt\u300d\u300ctext2.txt\u300d\u3068\u3057\u3066\u305d\u308c\u305e\u308c\u4fdd\u5b58\u3057\u307e\u3059\uff0e\n\n\u5f62\u614b\u7d20\u89e3\u6790\u3059\u308b\n--\n\nMeCab\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u308b\uff0e\n\n```py3:sample2.py\nimport MeCab\n\n\nclass getWords():\n    \n    def readText(self, filename):\n        ###\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\n        with open(filename + '.txt', 'r', encoding='utf-8') as f:\n            tText = f.read()\n            f.close()\n        return tText\n\n\n    def mecab(self, text):\n        ###MeCab\n        mThings = MeCab.Tagger('Ochasen')\n        node = mThings.parseToNode(text)\n\n        ###\u5f62\u614b\u7d20\u89e3\u6790\n        keywords = []\n        while node:\n            if node.feature.split(',')[0] == '\u540d\u8a5e':\n                keywords.append(node.surface)\n            node = node.next\n        return keywords\n```\n\u3053\u3044\u3064\u3092\u767a\u52d5\u3059\u308b\u3053\u3068\u3067\uff0cMeCab\u69d8\u304c\u300c\u540d\u8a5e\u300d\u3060\u3068\u5224\u65ad\u3057\u305f\u5358\u8a9e\u3092keywords\u914d\u5217\u306b\u3076\u3061\u8fbc\u3093\u3067\uff0c\u8fd4\u3059\uff0e\n\u30af\u30e9\u30b9\u306b\u3057\u306a\u3044\u3067\u30b4\u30ea\u62bc\u3059\u3068\uff0c\u300ckeywords.append(node.surface)\u300d\u306e\u3042\u305f\u308a\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u308b\uff0e\n\n\u5f62\u614b\u7d20\u89e3\u6790\u6e08\u307f\u6587\u66f8\u306e\u91cd\u8907\u5358\u8a9e\u3092\u62bd\u51fa\u3059\u308b\n--\n\n\u30af\u30e9\u30b9 getWords \u3067\u624b\u306b\u5165\u308c\u305f\u5b50\u5206\u305f\u3061\u306f\u914d\u5217\u306b\u53ce\u5bb9\u3055\u308c\u3066\u904b\u3070\u308c\u3066\u304f\u308b\uff0e\n\u3053\u306e\u914d\u5217\u306f\uff0c\u6700\u521d\u306b\u66f8\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9sample1.py\u306e\u300clist1\u300d\u3068\u300clist2\u300d\u306b\u3042\u305f\u308b\u3082\u306e\u306a\u306e\u3067\uff0c\u3042\u3068\u306fsample1.py\u306e\u51e6\u7406\u306e\u6d41\u308c\u306b\u624b\u306b\u5165\u308c\u305f\u5b50\u5206\u305f\u3061\u3092\u653e\u308a\u8fbc\u3080\u3053\u3068\u3067\uff0c\u91cd\u8907\u5358\u8a9e\u306e\u62bd\u51fa\u304c\u3067\u304d\u308b\uff0e\n\n```py3:mecab-test.py\nimport MeCab\n\nclass getWords():\n    \n    def readText(self, filename):\n        ###\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\n        with open(filename + '.txt', 'r', encoding='utf-8') as f:\n            tText = f.read()\n            f.close()\n        return tText\n\n\n    def mecab(self, text):\n        ###MeCab\n        mThings = MeCab.Tagger('Ochasen')\n        node = mThings.parseToNode(text)\n\n        ###\u5f62\u614b\u7d20\u89e3\u6790\n        keywords = []\n        while node:\n            if node.feature.split(',')[0] == '\u540d\u8a5e':\n                keywords.append(node.surface)\n            node = node.next\n        return keywords\n\n\nif __name__ == '__main__':\n\n    gWords1 = getWords()\n    gWords2 = getWords()\n\n    text1 = gWords1.readText('text1')\n    text2 = gWords2.readText('text2')\n\n    mecabWords1 = gWords1.mecab(text1)\n    mecabWords2 = gWords2.mecab(text2)\n\n    #print(mecabWords1)\n    #print(mecabWords2)\n\n    setMw1 = set(mecabWords1)\n    setMw2 = set(mecabWords2)\n\n    andWords = setMw1 & setMw2\n\n    print(andWords)\n    #>>>> {'\u767a\u8868', '1', '\u3053\u3068', '\u6226', '\u8a66\u5408', '\u30d9\u30f3\u30c1', '\u76e3\u7763', '17', '\u5f8c', 'J'}\n```\n\n\u307e\u3068\u3081\n==\n2\u3064\u306e\u6587\u66f8\u306e\u91cd\u8907\u5358\u8a9e\u306e\u62bd\u51fa\u306f\u610f\u5916\u3068\u7c21\u5358\u306b\u3067\u304d\u308b\uff0e\u308f\u305f\u3057\u306f\u91cd\u8907\u5358\u8a9e\u62bd\u51fa\u3088\u308a\u3082\u74b0\u5883\u69cb\u7bc9\u306e\u307b\u3046\u306b\u83ab\u5927\u306a\u6642\u9593\u3092\u8981\u3057\u305f\uff0e\u3060\u308c\u304b\u6700\u5f37\u306e\u74b0\u5883\u69cb\u7bc9\u307e\u3068\u3081\u3092\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\uff0e\n", "tags": ["mecab", "\u81ea\u7136\u8a00\u8a9e\u51e6\u7406", "\u521d\u5fc3\u8005", "python3"]}