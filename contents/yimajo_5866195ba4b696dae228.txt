{"tags": ["iOS", "gpuimage", "GLSL", "iPhone"], "context": " More than 1 year has passed since last update.\u3059\u3067\u306b\u6295\u7a3f\u3057\u3066\u3042\u308b\u753b\u50cf\u51e6\u7406\u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30eaGPUImage\u306e\u57fa\u672c\u3068\u5fdc\u7528\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u3064\u3044\u3066\u3092\u5206\u3051\u3066\u6295\u7a3f\u3059\u308b\u3002\nGPUImage\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f3x3\u306e\u30ab\u30fc\u30cd\u30eb\uff08\u30aa\u30da\u30ec\u30fc\u30bf\u3001\u91cd\u307f\uff09\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e\u30af\u30e9\u30b9GPUImage3x3ConvolutionFilter\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u3068\u3001\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3053\u3068\u3067\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306e\u30e1\u30e2\u3002\u753b\u50cf\u51e6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u790e\u3068\u3057\u3066\u3001\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u7a4d\u548c\u6f14\u7b97\uff08\u7573\u307f\u8fbc\u307f\uff09\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u306a\u3044\u3068\u7406\u89e3\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u3002\n\nGPUImage3x3ConvolutionFilter\u30af\u30e9\u30b9\u3092\u8aad\u3080\n\n\u95a2\u9023\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u30ab\u30fc\u30cd\u30eb\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\nGPUImage3x3ConvolutionFilter.h\u306b\u306f\u30013x3\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4fdd\u6301\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308a\u3001\u3053\u308c\u306b3x3\u306e\u30ab\u30cd\u30fc\u30eb\u3092\u6e21\u3059\u3053\u3068\u3067\u753b\u50cf\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n@property(readwrite, nonatomic) GPUMatrix3x3 convolutionKernel;\n\nGPUMatrix3x3\u306f\u69cb\u9020\u4f53\u306b\u306a\u3063\u3066\u304a\u308a\u6b21\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3002\n[(GPUImage3x3ConvolutionFilter *)filter setConvolutionKernel:(GPUMatrix3x3){\n    { 0.11f,  0.11f, 0.11f},\n    { 0.11f,  0.11f, 0.11f},\n    { 0.11f,  0.11f, 0.11f}\n}];\n\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b0.11f\u306f1/9\uff083x3=9\u306e\u5024\u306e\u5e73\u5747\u5024\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u306e\u8a2d\u5b9a\u5024\uff09\u3067\u3042\u308a\u79fb\u52d5\u5e73\u5747\u306e\u5024\u3068\u306a\u308b\uff08\u79fb\u52d5\u5e73\u5747\u306b\u3064\u3044\u3066: http://imagingsolution.blog107.fc2.com/blog-entry-88.html \uff09\u3002\n\u3053\u306e\u66f8\u5f0f\u306fGPUMatrix3x3\u69cb\u9020\u4f53\u306e\u4e2d\u306bGPUVector3\u69cb\u9020\u4f53\u304c3\u3064\u3042\u308a\u3001\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\nstruct GPUMatrix3x3 {\n    GPUVector3 one;\n    GPUVector3 two;\n    GPUVector3 three;\n};\ntypedef struct GPUMatrix3x3 GPUMatrix3x3;\n\nstruct GPUVector3 {\n    GLfloat one;\n    GLfloat two;\n    GLfloat three;\n};\ntypedef struct GPUVector3 GPUVector3;\n\n\u8a2d\u5b9a\u3059\u308b\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u306fconvolutionMatrix\u3068\u3044\u3046\u5909\u6570\u3068\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3055\u308c\u308b\u3002\n- (id)initWithFragmentShaderFromString:(NSString *)fragmentShaderString;\n{\n    if (!(self = [super initWithFragmentShaderFromString:fragmentShaderString]))\n    {\n        return nil;\n    }\n    //\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3059index\u3092\u4fdd\u6301\n    convolutionMatrixUniform = [filterProgram uniformIndex:@\"convolutionMatrix\"];\n\n    return self;\n}\n\n#pragma mark -\n#pragma mark Accessors\n\n- (void)setConvolutionKernel:(GPUMatrix3x3)newValue;\n{\n    _convolutionKernel = newValue;\n    //setter\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3059\u8a2d\u5b9a\u3092\u884c\u3046\n    [self setMatrix3f:_convolutionKernel forUniform:convolutionMatrixUniform program:filterProgram];\n}\n\n\n3x3\u30ab\u30fc\u30cd\u30eb\u3092\u6e21\u3057\u305f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u5074\u306b\u306fObjective-C\u306e\u30b3\u30fc\u30c9\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u5b9a\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081uniform\u3068\u306a\u308b\u3002\nNSString *const kGPUImage3x3ConvolutionFragmentShaderString = SHADER_STRING\n(\n precision highp float;\n\n uniform sampler2D inputImageTexture;\n //uniform\u306f\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6e21\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3059\u5b9a\u6570\u3002\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\u3002\n uniform mediump mat3 convolutionMatrix;\n\n //varying\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u6e21\u3055\u308c\u308b\u5024\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\n varying vec2 textureCoordinate;\n varying vec2 leftTextureCoordinate;\n varying vec2 rightTextureCoordinate;\n\n varying vec2 topTextureCoordinate;\n varying vec2 topLeftTextureCoordinate;\n varying vec2 topRightTextureCoordinate;\n\n varying vec2 bottomTextureCoordinate;\n varying vec2 bottomLeftTextureCoordinate;\n varying vec2 bottomRightTextureCoordinate;\n\n void main()\n {\n     //\u307e\u305a\u8fd1\u508d\u753b\u50cf\uff13\u884c\u76ee\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 bottomColor = texture2D(inputImageTexture, bottomTextureCoordinate).rgb;\n     mediump vec3 bottomLeftColor = texture2D(inputImageTexture, bottomLeftTextureCoordinate).rgb;\n     mediump vec3 bottomRightColor = texture2D(inputImageTexture, bottomRightTextureCoordinate).rgb;\n     //\u30bb\u30f3\u30bf\u30fc\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec4 centerColor = texture2D(inputImageTexture, textureCoordinate);\n     //\u30bb\u30f3\u30bf\u30fc\u5de6\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 leftColor = texture2D(inputImageTexture, leftTextureCoordinate).rgb;\n     //\u30bb\u30f3\u30bf\u30fc\u5de6\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u53d6\u5f97      \n     mediump vec3 rightColor = texture2D(inputImageTexture, rightTextureCoordinate).rgb;\n     //\u8fd1\u508d\u753b\u50cf\uff11\u884c\u76ee\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 topColor = texture2D(inputImageTexture, topTextureCoordinate).rgb;\n     mediump vec3 topRightColor = texture2D(inputImageTexture, topRightTextureCoordinate).rgb;\n     mediump vec3 topLeftColor = texture2D(inputImageTexture, topLeftTextureCoordinate).rgb;\n\n     //\u307e\u305a\uff11\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     mediump vec3 resultColor = topLeftColor * convolutionMatrix[0][0] + topColor * convolutionMatrix[0][1] + topRightColor * convolutionMatrix[0][2];\n     //\uff12\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     resultColor += leftColor * convolutionMatrix[1][0] + centerColor.rgb * convolutionMatrix[1][1] + rightColor * convolutionMatrix[1][2];\n     //\uff13\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     resultColor += bottomLeftColor * convolutionMatrix[2][0] + bottomColor * convolutionMatrix[2][1] + bottomRightColor * convolutionMatrix[2][2];\n\n     gl_FragColor = vec4(resultColor, centerColor.a);\n }\n);\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f3x3\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u305f\u3081\u7573\u307f\u8fbc\u307f\uff08\u7a4d\u548c\u6f14\u7b97\uff09\u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u304c\u5206\u304b\u308b\u3002varying\u306a\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u304c\u8fd1\u508d\u753b\u50cf\u306e\u5ea7\u6a19\u5024\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u3053\u308c\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3068\u306a\u308b\u3002\n\n3x3\u30d5\u30a3\u30eb\u30bf\u306e\u305f\u3081\u306e\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306fGPUImage3x3ConvolutionFilter\u304c\u7d99\u627f\u3059\u308bGPUImage3x3TextureSamplingFilter\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u3001\u77e5\u3063\u3066\u7f6e\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u524d\u63d0\u77e5\u8b58\u306f\n\nattribute\u5909\u6570\u306f\u9802\u70b9\u3054\u3068\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u5909\u6570\uff08\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u307f\u4f7f\u7528\u53ef\uff09\n\u753b\u50cf\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u306f0\u301c1\u306b\u6b63\u898f\u5316\u3055\u308c\u308b\n\nattribute\u5909\u6570\u306funiform\u3068\u540c\u3058\u3088\u3046\u306bGPUImage\u304c\u6e21\u3057\u3066\u3044\u308b\u5909\u6570\u3067\u3001\u5927\u62b5\u306e\u5834\u5408GPUImage\u304c\u6e21\u3057\u3066\u3044\u308b\u306e\u306f\u9802\u70b9\u306e\u5ea7\u6a19\u5024\u3068\u306a\u308b\u3002\n\u753b\u50cf\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u306fOpenGL\u3067\u306f0\u304b\u30891\u307e\u3067\u306e\u5ea7\u6a19\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u306f1/\u30b5\u30a4\u30ba\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u308b\u3002\u3088\u308a\u5177\u4f53\u7684\u306b\u306f\u4f8b\u3048\u3070320px\u306e\u6a2a\u753b\u50cf\u3067\u3042\u308c\u3070\u3001\u6a2a10px\u306e\u4f4d\u7f6e\u3092\u793a\u3059\u5834\u54081/320 * 10 = 0.3125\u3068\u306a\u308b\u3002\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u306f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3067\u51e6\u7406\u3059\u308b3x3\u306e\u8fd1\u508d\u9818\u57df\u306e\u5024\u304c\u6b32\u3057\u3044\u306e\u3067\u3001\u3053\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u304b\u30891px\u5206\u305a\u3089\u3057\u305f\u5ea7\u6a19\u5024\u3092\u53d6\u5f97\u3057\u30b0\u30ed\u30fc\u30d0\u30eb\u306avarying\u5909\u6570\u306b\u4fdd\u6301\u3059\u308b\u3002\nNSString *const kGPUImageNearbyTexelSamplingVertexShaderString = SHADER_STRING\n(\n //GPUImage\u306e\u5185\u90e8\u3067\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5ea7\u6a19\u5024\n attribute vec4 position;\n attribute vec4 inputTextureCoordinate;\n\n //\u753b\u50cf\u306e\u6a2a\u3068\u7e26\u30b5\u30a4\u30ba\u3002\u3053\u308c\u306fGPUImage3x3TextureSamplingFilter\u3067\u8a2d\u5b9a\u3055\u308c\u308b\n uniform float texelWidth;\n uniform float texelHeight; \n\n //\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3068\u5171\u7528\u3059\u308b\u5ea7\u6a19\n varying vec2 textureCoordinate;\n varying vec2 leftTextureCoordinate;\n varying vec2 rightTextureCoordinate;\n\n varying vec2 topTextureCoordinate;\n varying vec2 topLeftTextureCoordinate;\n varying vec2 topRightTextureCoordinate;\n\n varying vec2 bottomTextureCoordinate;\n varying vec2 bottomLeftTextureCoordinate;\n varying vec2 bottomRightTextureCoordinate;\n\n void main()\n {\n     //\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u304a\u7d04\u675f\u306e\u3088\u3046\u306bgl_Position\u306bposition\u3092\u6e21\u3059\n     gl_Position = position;\n\n     //\u8fd1\u508d\u9818\u57df3x3\u306e\u8a08\u7b97\u306e\u305f\u3081\u306b\u3042\u3089\u304b\u3058\u3081\u5909\u6570\u5316\u3057\u3066\u304a\u304f\n     //\u6a2a1px\u5206\u3060\u3051\uff08\u7e26\u306f0\uff09\u306e\u5024\n     vec2 widthStep = vec2(texelWidth, 0.0);\n     //\u7e261px\u5206\u3060\u3051\uff08\u6a2a\u306f0\uff09\u306e\u5024\n     vec2 heightStep = vec2(0.0, texelHeight);\n     //\u7e26\u6a2a1px\u306e\u5024\n     vec2 widthHeightStep = vec2(texelWidth, texelHeight);\n     //\u7e261px\u6a2a-1px\u306e\u5024\n     vec2 widthNegativeHeightStep = vec2(texelWidth, -texelHeight);\n\n     //\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u4e2d\u592e\u306b\u306a\u308b\n     textureCoordinate = inputTextureCoordinate.xy;\n     //\u5de6\u306e\u70b9\u306b\u306a\u308b\n     leftTextureCoordinate = inputTextureCoordinate.xy - widthStep;\n     //\u53f3\u306e\u70b9\n     rightTextureCoordinate = inputTextureCoordinate.xy + widthStep;\n     //\u4e0a\u306e\u70b9\n     topTextureCoordinate = inputTextureCoordinate.xy - heightStep;\n     //\u5de6\u4e0a\u306e\u70b9\n     topLeftTextureCoordinate = inputTextureCoordinate.xy - widthHeightStep;\n     //\u53f3\u4e0a\u306e\u70b9\n     topRightTextureCoordinate = inputTextureCoordinate.xy + widthNegativeHeightStep;\n     //\u4e0b\u306e\u70b9\n     bottomTextureCoordinate = inputTextureCoordinate.xy + heightStep;\n     //\u5de6\u4e0b\u306e\u70b9\n     bottomLeftTextureCoordinate = inputTextureCoordinate.xy - widthNegativeHeightStep;\n     //\u53f3\u4e0b\u306e\u70b9\n     bottomRightTextureCoordinate = inputTextureCoordinate.xy + widthHeightStep;\n }\n);\n\n\n\u3059\u3067\u306b\u6295\u7a3f\u3057\u3066\u3042\u308b[\u753b\u50cf\u51e6\u7406\u306e\u30c7\u30d5\u30a1\u30af\u30c8\u30b9\u30bf\u30f3\u30c0\u30fc\u30c9\u30e9\u30a4\u30d6\u30e9\u30eaGPUImage\u306e\u57fa\u672c\u3068\u5fdc\u7528](http://qiita.com/yimajo/items/e38e8bafc17144b7af79)\u306e\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u30b7\u30a7\u30fc\u30c0\u306b\u3064\u3044\u3066\u3092\u5206\u3051\u3066\u6295\u7a3f\u3059\u308b\u3002\n\n[GPUImage\u30e9\u30a4\u30d6\u30e9\u30ea](https://github.com/BradLarson/GPUImage)\u3067\u306f3x3\u306e\u30ab\u30fc\u30cd\u30eb\uff08\u30aa\u30da\u30ec\u30fc\u30bf\u3001\u91cd\u307f\uff09\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u753b\u50cf\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306e\u30af\u30e9\u30b9GPUImage3x3ConvolutionFilter\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\u3053\u306e\u30af\u30e9\u30b9\u306e\u8aac\u660e\u3068\u3001\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3053\u3068\u3067\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3068\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306e\u30e1\u30e2\u3002\u753b\u50cf\u51e6\u7406\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u57fa\u790e\u3068\u3057\u3066\u3001\u30ab\u30fc\u30cd\u30eb\u3092\u7528\u3044\u305f\u7a4d\u548c\u6f14\u7b97\uff08\u7573\u307f\u8fbc\u307f\uff09\u306b\u3064\u3044\u3066\u306e\u77e5\u8b58\u304c\u306a\u3044\u3068\u7406\u89e3\u3067\u304d\u306a\u3044\u3068\u601d\u3046\u3002\n\n## GPUImage3x3ConvolutionFilter\u30af\u30e9\u30b9\u3092\u8aad\u3080\n\n### \u95a2\u9023\u3059\u308b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n### \u30ab\u30fc\u30cd\u30eb\u306e\u8a2d\u5b9a\u306b\u3064\u3044\u3066\n\n[GPUImage3x3ConvolutionFilter.h](https://github.com/BradLarson/GPUImage/blob/master/framework/Source/GPUImage3x3ConvolutionFilter.h)\u306b\u306f\u30013x3\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u4fdd\u6301\u3059\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308a\u3001\u3053\u308c\u306b3x3\u306e\u30ab\u30cd\u30fc\u30eb\u3092\u6e21\u3059\u3053\u3068\u3067\u753b\u50cf\u3092\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\n\n```objectivec:\n@property(readwrite, nonatomic) GPUMatrix3x3 convolutionKernel;\n```\n\nGPUMatrix3x3\u306f\u69cb\u9020\u4f53\u306b\u306a\u3063\u3066\u304a\u308a\u6b21\u306e\u3088\u3046\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u3002\n\n```objectivec:\n[(GPUImage3x3ConvolutionFilter *)filter setConvolutionKernel:(GPUMatrix3x3){\n    { 0.11f,  0.11f, 0.11f},\n    { 0.11f,  0.11f, 0.11f},\n    { 0.11f,  0.11f, 0.11f}\n}];\n```\n\n\u8a2d\u5b9a\u3057\u3066\u3044\u308b0.11f\u306f1/9\uff083x3=9\u306e\u5024\u306e\u5e73\u5747\u5024\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u306e\u8a2d\u5b9a\u5024\uff09\u3067\u3042\u308a\u79fb\u52d5\u5e73\u5747\u306e\u5024\u3068\u306a\u308b\uff08\u79fb\u52d5\u5e73\u5747\u306b\u3064\u3044\u3066: http://imagingsolution.blog107.fc2.com/blog-entry-88.html \uff09\u3002\n\n\u3053\u306e\u66f8\u5f0f\u306f[GPUMatrix3x3](https://github.com/BradLarson/GPUImage/blob/master/framework/Source/GPUImageFilter.h)\u69cb\u9020\u4f53\u306e\u4e2d\u306bGPUVector3\u69cb\u9020\u4f53\u304c3\u3064\u3042\u308a\u3001\u30c7\u30fc\u30bf\u3092\u8a2d\u5b9a\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n```objectivec:\nstruct GPUMatrix3x3 {\n    GPUVector3 one;\n    GPUVector3 two;\n    GPUVector3 three;\n};\ntypedef struct GPUMatrix3x3 GPUMatrix3x3;\n\nstruct GPUVector3 {\n    GLfloat one;\n    GLfloat two;\n    GLfloat three;\n};\ntypedef struct GPUVector3 GPUVector3;\n```\n\n\n\u8a2d\u5b9a\u3059\u308b\u30ab\u30fc\u30cd\u30eb\u306e\u5024\u306fconvolutionMatrix\u3068\u3044\u3046\u5909\u6570\u3068\u3057\u3066\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3055\u308c\u308b\u3002\n\n```objectivec:\n- (id)initWithFragmentShaderFromString:(NSString *)fragmentShaderString;\n{\n    if (!(self = [super initWithFragmentShaderFromString:fragmentShaderString]))\n    {\n        return nil;\n    }\n    //\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3059index\u3092\u4fdd\u6301\n    convolutionMatrixUniform = [filterProgram uniformIndex:@\"convolutionMatrix\"];\n    \n    return self;\n}\n\n#pragma mark -\n#pragma mark Accessors\n\n- (void)setConvolutionKernel:(GPUMatrix3x3)newValue;\n{\n    _convolutionKernel = newValue;\n    //setter\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u30b7\u30a7\u30fc\u30c0\u306b\u6e21\u3059\u8a2d\u5b9a\u3092\u884c\u3046\n    [self setMatrix3f:_convolutionKernel forUniform:convolutionMatrixUniform program:filterProgram];\n}\n```\n### 3x3\u30ab\u30fc\u30cd\u30eb\u3092\u6e21\u3057\u305f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\n\n[\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u5074](https://github.com/BradLarson/GPUImage/blob/master/framework/Source/GPUImage3x3ConvolutionFilter.m)\u306b\u306fObjective-C\u306e\u30b3\u30fc\u30c9\u304b\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u5b9a\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u3002\u305d\u306e\u305f\u3081uniform\u3068\u306a\u308b\u3002\n\n```objectivec:\nNSString *const kGPUImage3x3ConvolutionFragmentShaderString = SHADER_STRING\n(\n precision highp float;\n\n uniform sampler2D inputImageTexture;\n //uniform\u306f\u30b7\u30b9\u30c6\u30e0\u304b\u3089\u6e21\u3055\u308c\u308b\u3053\u3068\u3092\u793a\u3059\u5b9a\u6570\u3002\u30ab\u30fc\u30cd\u30eb\u3092\u5b9a\u6570\u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u308b\u3002\n uniform mediump mat3 convolutionMatrix;\n \n //varying\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u304b\u3089\u6e21\u3055\u308c\u308b\u5024\u306a\u306e\u3067\u3053\u3053\u3067\u306f\u6c17\u306b\u3057\u306a\u3044\n varying vec2 textureCoordinate;\n varying vec2 leftTextureCoordinate;\n varying vec2 rightTextureCoordinate;\n \n varying vec2 topTextureCoordinate;\n varying vec2 topLeftTextureCoordinate;\n varying vec2 topRightTextureCoordinate;\n \n varying vec2 bottomTextureCoordinate;\n varying vec2 bottomLeftTextureCoordinate;\n varying vec2 bottomRightTextureCoordinate;\n \n void main()\n {\n     //\u307e\u305a\u8fd1\u508d\u753b\u50cf\uff13\u884c\u76ee\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 bottomColor = texture2D(inputImageTexture, bottomTextureCoordinate).rgb;\n     mediump vec3 bottomLeftColor = texture2D(inputImageTexture, bottomLeftTextureCoordinate).rgb;\n     mediump vec3 bottomRightColor = texture2D(inputImageTexture, bottomRightTextureCoordinate).rgb;\n     //\u30bb\u30f3\u30bf\u30fc\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec4 centerColor = texture2D(inputImageTexture, textureCoordinate);\n     //\u30bb\u30f3\u30bf\u30fc\u5de6\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 leftColor = texture2D(inputImageTexture, leftTextureCoordinate).rgb;\n     //\u30bb\u30f3\u30bf\u30fc\u5de6\u306e\u30d4\u30af\u30bb\u30eb\u306e\u8272\u3092\u53d6\u5f97      \n     mediump vec3 rightColor = texture2D(inputImageTexture, rightTextureCoordinate).rgb;\n     //\u8fd1\u508d\u753b\u50cf\uff11\u884c\u76ee\u306e\u8272\u3092\u53d6\u5f97\n     mediump vec3 topColor = texture2D(inputImageTexture, topTextureCoordinate).rgb;\n     mediump vec3 topRightColor = texture2D(inputImageTexture, topRightTextureCoordinate).rgb;\n     mediump vec3 topLeftColor = texture2D(inputImageTexture, topLeftTextureCoordinate).rgb;\n\n     //\u307e\u305a\uff11\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     mediump vec3 resultColor = topLeftColor * convolutionMatrix[0][0] + topColor * convolutionMatrix[0][1] + topRightColor * convolutionMatrix[0][2];\n     //\uff12\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     resultColor += leftColor * convolutionMatrix[1][0] + centerColor.rgb * convolutionMatrix[1][1] + rightColor * convolutionMatrix[1][2];\n     //\uff13\u884c\u76ee\u3092\u30ab\u30fc\u30cd\u30eb\u3068\u7573\u307f\u8fbc\u3080\n     resultColor += bottomLeftColor * convolutionMatrix[2][0] + bottomColor * convolutionMatrix[2][1] + bottomRightColor * convolutionMatrix[2][2];\n\n     gl_FragColor = vec4(resultColor, centerColor.a);\n }\n);\n```\n\n\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306f3x3\u306e\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u306e\u305f\u3081\u7573\u307f\u8fbc\u307f\uff08\u7a4d\u548c\u6f14\u7b97\uff09\u3092\u884c\u3063\u3066\u3044\u308b\u3060\u3051\u306a\u306e\u304c\u5206\u304b\u308b\u3002varying\u306a\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u304c\u8fd1\u508d\u753b\u50cf\u306e\u5ea7\u6a19\u5024\u3068\u306a\u3063\u3066\u304a\u308a\u3001\u3053\u308c\u306f\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u8a2d\u5b9a\u3055\u308c\u305f\u5024\u3068\u306a\u308b\u3002\n\n### 3x3\u30d5\u30a3\u30eb\u30bf\u306e\u305f\u3081\u306e\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306fGPUImage3x3ConvolutionFilter\u304c\u7d99\u627f\u3059\u308b[GPUImage3x3TextureSamplingFilter\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b](https://github.com/BradLarson/GPUImage/blob/master/framework/Source/GPUImage3x3TextureSamplingFilter.m)\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u524d\u306b\u3001\u77e5\u3063\u3066\u7f6e\u304b\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u524d\u63d0\u77e5\u8b58\u306f\n\n* attribute\u5909\u6570\u306f\u9802\u70b9\u3054\u3068\u306b\u8a2d\u5b9a\u3067\u304d\u308b\u5909\u6570\uff08\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306e\u307f\u4f7f\u7528\u53ef\uff09\n* \u753b\u50cf\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u306f0\u301c1\u306b\u6b63\u898f\u5316\u3055\u308c\u308b\n\nattribute\u5909\u6570\u306funiform\u3068\u540c\u3058\u3088\u3046\u306bGPUImage\u304c\u6e21\u3057\u3066\u3044\u308b\u5909\u6570\u3067\u3001\u5927\u62b5\u306e\u5834\u5408GPUImage\u304c\u6e21\u3057\u3066\u3044\u308b\u306e\u306f\u9802\u70b9\u306e\u5ea7\u6a19\u5024\u3068\u306a\u308b\u3002\n\n\u753b\u50cf\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u306fOpenGL\u3067\u306f0\u304b\u30891\u307e\u3067\u306e\u5ea7\u6a19\u5024\u3068\u3057\u3066\u6271\u308f\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u306f1/\u30b5\u30a4\u30ba\u3068\u3057\u3066\u8a08\u7b97\u3055\u308c\u308b\u3002\u3088\u308a\u5177\u4f53\u7684\u306b\u306f\u4f8b\u3048\u3070320px\u306e\u6a2a\u753b\u50cf\u3067\u3042\u308c\u3070\u3001\u6a2a10px\u306e\u4f4d\u7f6e\u3092\u793a\u3059\u5834\u54081/320 * 10 = 0.3125\u3068\u306a\u308b\u3002\n\n\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u3067\u306f\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3067\u51e6\u7406\u3059\u308b3x3\u306e\u8fd1\u508d\u9818\u57df\u306e\u5024\u304c\u6b32\u3057\u3044\u306e\u3067\u3001\u3053\u306e\u7e26\u6a2a\u30b5\u30a4\u30ba\u304b\u30891px\u5206\u305a\u3089\u3057\u305f\u5ea7\u6a19\u5024\u3092\u53d6\u5f97\u3057\u30b0\u30ed\u30fc\u30d0\u30eb\u306avarying\u5909\u6570\u306b\u4fdd\u6301\u3059\u308b\u3002\n\n```objectivec:\nNSString *const kGPUImageNearbyTexelSamplingVertexShaderString = SHADER_STRING\n(\n //GPUImage\u306e\u5185\u90e8\u3067\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u5ea7\u6a19\u5024\n attribute vec4 position;\n attribute vec4 inputTextureCoordinate;\n \n //\u753b\u50cf\u306e\u6a2a\u3068\u7e26\u30b5\u30a4\u30ba\u3002\u3053\u308c\u306fGPUImage3x3TextureSamplingFilter\u3067\u8a2d\u5b9a\u3055\u308c\u308b\n uniform float texelWidth;\n uniform float texelHeight; \n \n //\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u3068\u5171\u7528\u3059\u308b\u5ea7\u6a19\n varying vec2 textureCoordinate;\n varying vec2 leftTextureCoordinate;\n varying vec2 rightTextureCoordinate;\n \n varying vec2 topTextureCoordinate;\n varying vec2 topLeftTextureCoordinate;\n varying vec2 topRightTextureCoordinate;\n \n varying vec2 bottomTextureCoordinate;\n varying vec2 bottomLeftTextureCoordinate;\n varying vec2 bottomRightTextureCoordinate;\n \n void main()\n {\n     //\u9802\u70b9\u30b7\u30a7\u30fc\u30c0\u306f\u304a\u7d04\u675f\u306e\u3088\u3046\u306bgl_Position\u306bposition\u3092\u6e21\u3059\n     gl_Position = position;\n\n     //\u8fd1\u508d\u9818\u57df3x3\u306e\u8a08\u7b97\u306e\u305f\u3081\u306b\u3042\u3089\u304b\u3058\u3081\u5909\u6570\u5316\u3057\u3066\u304a\u304f\n     //\u6a2a1px\u5206\u3060\u3051\uff08\u7e26\u306f0\uff09\u306e\u5024\n     vec2 widthStep = vec2(texelWidth, 0.0);\n     //\u7e261px\u5206\u3060\u3051\uff08\u6a2a\u306f0\uff09\u306e\u5024\n     vec2 heightStep = vec2(0.0, texelHeight);\n     //\u7e26\u6a2a1px\u306e\u5024\n     vec2 widthHeightStep = vec2(texelWidth, texelHeight);\n     //\u7e261px\u6a2a-1px\u306e\u5024\n     vec2 widthNegativeHeightStep = vec2(texelWidth, -texelHeight);\n\n     //\u30d5\u30e9\u30b0\u30e1\u30f3\u30c8\u30b7\u30a7\u30fc\u30c0\u306e\u4e2d\u592e\u306b\u306a\u308b\n     textureCoordinate = inputTextureCoordinate.xy;\n     //\u5de6\u306e\u70b9\u306b\u306a\u308b\n     leftTextureCoordinate = inputTextureCoordinate.xy - widthStep;\n     //\u53f3\u306e\u70b9\n     rightTextureCoordinate = inputTextureCoordinate.xy + widthStep;\n     //\u4e0a\u306e\u70b9\n     topTextureCoordinate = inputTextureCoordinate.xy - heightStep;\n     //\u5de6\u4e0a\u306e\u70b9\n     topLeftTextureCoordinate = inputTextureCoordinate.xy - widthHeightStep;\n     //\u53f3\u4e0a\u306e\u70b9\n     topRightTextureCoordinate = inputTextureCoordinate.xy + widthNegativeHeightStep;\n     //\u4e0b\u306e\u70b9\n     bottomTextureCoordinate = inputTextureCoordinate.xy + heightStep;\n     //\u5de6\u4e0b\u306e\u70b9\n     bottomLeftTextureCoordinate = inputTextureCoordinate.xy - widthNegativeHeightStep;\n     //\u53f3\u4e0b\u306e\u70b9\n     bottomRightTextureCoordinate = inputTextureCoordinate.xy + widthHeightStep;\n }\n);\n```\n"}