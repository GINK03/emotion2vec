{"context": " More than 1 year has passed since last update.\n\n\u80cc\u666f\n\u3044\u3064\u3082\u793e\u9577\u3055\u3093\u306e\u4f7f\u308f\u308c\u3066\u3044\u308bC#\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u4e0b\u8a18\u7406\u7531\u304c\u3042\u308b\u305f\u3081Java\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nWindows\u306fiMac\u306b\u3057\u304b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u304f\u5e30\u7701\u4e2d\u306fMBA\u3057\u304b\u4f7f\u3048\u306a\u3044\u3002\nXamarin\u306f\u4f7f\u3063\u3066\u3044\u3066\u5909\u306a\u611f\u3058\u304c\u3059\u308b(\u3084\u3063\u3071\u308aVisual Studio\u304c\u3044\u3044)\u3002\nMBA\u306fSSD128GB\u306e\u305f\u3081Windows\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u5bb9\u91cf\u306e\u3084\u308a\u304f\u308a\u304c\u53b3\u3057\u3044\u3002\nJava\u306a\u3089\u524d\u306b\u3061\u3087\u3063\u3068\u66f8\u3044\u305f\u3053\u3068\u3042\u308b\uff08\u5b89\u6613\u306a\u8003\u3048\uff11\uff09\u3002\neclipse\u306a\u3089Mac\u3068Windows\u306e\u3069\u3061\u3089\u3067\u3082\u4f7f\u3048\u308b\u306e\u3067\u826f\u3055\u305d\u3046\uff08\u5b89\u6613\u306a\u8003\u3048\uff12\uff09\u3002\n\n\n\u30b3\u30fc\u30c9\n\u666e\u6bb5\u3001Java\u3067\u66f8\u304b\u306a\u3044\u306e\u3067\u826f\u3044\u66f8\u304d\u65b9\u304b\u3069\u3046\u304b\u81ea\u4fe1\u306a\u3044\u3067\u3059\u304c\u3001\n\u4eca\u306e\u3068\u3053\u308d\u4f7f\u3048\u3066\u3044\u308b\u306e\u3067\u826f\u3057\u3068\u3057\u307e\u3057\u305f\u3002\n\u3000\u2192\u66f8\u304d\u76f4\u3057\u305f\u3060\u3051\u3067\u30c6\u30b9\u30c8\u3057\u3066\u307e\u305b\u3093\u3002\neclipse\u3060\u3068\u3001System.console().readLine()\u304c\u4f7f\u3048\u306a\u3044\uff1f\u3088\u3046\u3067\u3042\u308b\u305f\u3081\u3001BufferedReader\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001Close()\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001br.readLine()\u306e\u76f4\u5f8c\u306b\u3084\u308b\u3068\u30012\u56de\u76ee\u306ebr.readLine()\u306e\u6642\u306bIOException(Stream Closed)\u304c\u51fa\u3066\u3057\u307e\u3046\u305f\u3081Object#finalize()\u304c\u547c\u3070\u308c\u308b\u6642\u306b\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u3067\u5927\u4e08\u592b\u304b\u8a73\u3057\u3044\u65b9\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3002\u3002\n\u3010Java\u3011\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30b6\uff08\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3063\u307d\u3044\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\uff09\n\nMain.java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Main {\n\n    private static Scanner sc;\n\n    public static void main(String[] args) {\n        Main instance = new Main();\n        sc = instance.new Scanner();\n        instance.solve();\n    }\n\n    private void solve() {\n        try {\n            System.out.println();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private class Scanner {\n        String[] s;\n        int i;\n        BufferedReader br;\n        String regex = \" \";\n\n        public Scanner() {\n            s = new String[0];\n            i = 0;\n            br = new BufferedReader(new InputStreamReader(System.in));\n        }\n\n        @Override\n        protected void finalize() throws Throwable {\n            try {\n                super.finalize();\n            } finally {\n                destruction();\n            }\n        }\n\n        private void destruction() throws IOException {\n            if (br != null) br.close();\n        }\n\n        public String next() throws IOException {\n            if (i < s.length) return s[i++];\n            String st = br.readLine();\n            while (st == \"\") st = br.readLine();\n            s = st.split(regex, 0);\n            i = 0;\n            return s[i++];\n        }\n\n        public int nextInt() throws NumberFormatException, IOException {\n            return Integer.parseInt(next());\n        }\n\n        public Long nextLong() throws NumberFormatException, IOException {\n            return Long.parseLong(next());\n        }\n\n        public Double nextDouble() throws NumberFormatException, IOException {\n            return Double.parseDouble(next());\n        }\n    }\n}\n\n\n\n\n\u4f7f\u3044\u65b9\n\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306eScanner\u306fC++\u306estd::cin\u3068\u540c\u3058\u3088\u3046\u306a\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\nScanner\u30af\u30e9\u30b9\u3067\u306f\u3001\u884c\u304c\u5909\u308f\u3063\u3066\u3082next()\u3084nextInt()\u306a\u3069\u3092\u547c\u3073\u7d9a\u3051\u308b\u3060\u3051\u3067\u5024\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u5165\u529b(\u533a\u5207\u308a\u6587\u5b57\u306f\u534a\u89d2\u30b9\u30da\u30fc\u30b9)\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306e\u51e6\u7406\u3092C++\u3068Java\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n2\n3 4\n\nC++\u306e\u5834\u5408\n\nMain.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int a,b,c; \n    cin >> a;   // a = 2\n    cin >> b;   // b = 3\n    cin >> c;   // c = 4\n    return 0;\n}\n\n\nJava\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5834\u5408(\u9577\u3044\u306e\u3067\u8aad\u307f\u8fbc\u307f\u90e8\u5206\u3060\u3051)\n\nMain.java\n    private void solve() {\n        try {\n            int a,b,c;\n            a = sc.nextInt();   // a = 2\n            b = sc.nextInt();   // b = 3\n            c = sc.nextInt();   // c = 4\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n\n\n\u307e\u3068\u3081\nAtCoder\u306bJava\u3067\u53c2\u52a0\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u3002\n# \u80cc\u666f\n\u3044\u3064\u3082\u793e\u9577\u3055\u3093\u306e\u4f7f\u308f\u308c\u3066\u3044\u308bC#\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4f7f\u3063\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u4e0b\u8a18\u7406\u7531\u304c\u3042\u308b\u305f\u3081Java\u306e\u52c9\u5f37\u3082\u517c\u306d\u3066\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n* Windows\u306fiMac\u306b\u3057\u304b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u306a\u304f\u5e30\u7701\u4e2d\u306fMBA\u3057\u304b\u4f7f\u3048\u306a\u3044\u3002\n* Xamarin\u306f\u4f7f\u3063\u3066\u3044\u3066\u5909\u306a\u611f\u3058\u304c\u3059\u308b(\u3084\u3063\u3071\u308aVisual Studio\u304c\u3044\u3044)\u3002\n* MBA\u306fSSD128GB\u306e\u305f\u3081Windows\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3068\u5bb9\u91cf\u306e\u3084\u308a\u304f\u308a\u304c\u53b3\u3057\u3044\u3002\n* Java\u306a\u3089\u524d\u306b\u3061\u3087\u3063\u3068\u66f8\u3044\u305f\u3053\u3068\u3042\u308b\uff08\u5b89\u6613\u306a\u8003\u3048\uff11\uff09\u3002\n* eclipse\u306a\u3089Mac\u3068Windows\u306e\u3069\u3061\u3089\u3067\u3082\u4f7f\u3048\u308b\u306e\u3067\u826f\u3055\u305d\u3046\uff08\u5b89\u6613\u306a\u8003\u3048\uff12\uff09\u3002\n\n# \u30b3\u30fc\u30c9\n\u666e\u6bb5\u3001Java\u3067\u66f8\u304b\u306a\u3044\u306e\u3067\u826f\u3044\u66f8\u304d\u65b9\u304b\u3069\u3046\u304b\u81ea\u4fe1\u306a\u3044\u3067\u3059\u304c\u3001\n\u4eca\u306e\u3068\u3053\u308d\u4f7f\u3048\u3066\u3044\u308b\u306e\u3067\u826f\u3057\u3068\u3057\u307e\u3057\u305f\u3002\n\u3000\u2192\u66f8\u304d\u76f4\u3057\u305f\u3060\u3051\u3067\u30c6\u30b9\u30c8\u3057\u3066\u307e\u305b\u3093\u3002\n\neclipse\u3060\u3068\u3001`System.console().readLine()`\u304c\u4f7f\u3048\u306a\u3044\uff1f\u3088\u3046\u3067\u3042\u308b\u305f\u3081\u3001`BufferedReader`\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u307e\u305f\u3001`Close()`\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u306f\u3001`br.readLine()`\u306e\u76f4\u5f8c\u306b\u3084\u308b\u3068\u30012\u56de\u76ee\u306e`br.readLine()`\u306e\u6642\u306bIOException(Stream Closed)\u304c\u51fa\u3066\u3057\u307e\u3046\u305f\u3081`Object#finalize()`\u304c\u547c\u3070\u308c\u308b\u6642\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3067\u5927\u4e08\u592b\u304b\u8a73\u3057\u3044\u65b9\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u3002\u3002\n[\u3010Java\u3011\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30b6\uff08\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3063\u307d\u3044\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\uff09](http://blog.livedoor.jp/mitsu_aki/archives/11448914.html \"\u3010Java\u3011\u30d5\u30a1\u30a4\u30ca\u30e9\u30a4\u30b6\uff08\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3063\u307d\u3044\u6a5f\u80fd\u3092\u5b9f\u88c5\u3059\u308b\uff09\")\n\n\n```java:Main.java\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\n\npublic class Main {\n\n\tprivate static Scanner sc;\n\t\n\tpublic static void main(String[] args) {\n\t\tMain instance = new Main();\n\t\tsc = instance.new Scanner();\n\t\tinstance.solve();\n\t}\n\n\tprivate void solve() {\n\t\ttry {\n\t\t\tSystem.out.println();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\n\tprivate class Scanner {\n\t\tString[] s;\n\t\tint i;\n\t\tBufferedReader br;\n\t\tString regex = \" \";\n\n\t\tpublic Scanner() {\n\t\t\ts = new String[0];\n\t\t\ti = 0;\n\t\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t\t}\n\n\t\t@Override\n\t\tprotected void finalize() throws Throwable {\n\t\t\ttry {\n\t\t\t\tsuper.finalize();\n\t\t\t} finally {\n\t\t\t\tdestruction();\n\t\t\t}\n\t\t}\n\n\t\tprivate void destruction() throws IOException {\n\t\t\tif (br != null)\tbr.close();\n\t\t}\n\n\t\tpublic String next() throws IOException {\n\t\t\tif (i < s.length) return s[i++];\n\t\t\tString st = br.readLine();\n\t\t\twhile (st == \"\") st = br.readLine();\n\t\t\ts = st.split(regex, 0);\n\t\t\ti = 0;\n\t\t\treturn s[i++];\n\t\t}\n\n\t\tpublic int nextInt() throws NumberFormatException, IOException {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tpublic Long nextLong() throws NumberFormatException, IOException {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tpublic Double nextDouble() throws NumberFormatException, IOException {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\t}\n}\n\n```\n\n# \u4f7f\u3044\u65b9\n\u30a4\u30f3\u30ca\u30fc\u30af\u30e9\u30b9\u306e*Scanner*\u306fC++\u306e`std::cin`\u3068\u540c\u3058\u3088\u3046\u306a\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\nScanner\u30af\u30e9\u30b9\u3067\u306f\u3001\u884c\u304c\u5909\u308f\u3063\u3066\u3082`next()`\u3084`nextInt()`\u306a\u3069\u3092\u547c\u3073\u7d9a\u3051\u308b\u3060\u3051\u3067\u5024\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e\u5165\u529b(\u533a\u5207\u308a\u6587\u5b57\u306f\u534a\u89d2\u30b9\u30da\u30fc\u30b9)\u3092\u8aad\u307f\u8fbc\u3080\u969b\u306e\u51e6\u7406\u3092C++\u3068Java\u3067\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```\n2\n3 4\n```\n**C++\u306e\u5834\u5408**\n\n```cpp:Main.cpp\n#include <iostream>\nusing namespace std;\n\nint main(){\n    int a,b,c; \n    cin >> a;   // a = 2\n    cin >> b;   // b = 3\n    cin >> c;   // c = 4\n    return 0;\n}\n```\n**Java\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5834\u5408(\u9577\u3044\u306e\u3067\u8aad\u307f\u8fbc\u307f\u90e8\u5206\u3060\u3051)**\n\n```java:Main.java\n    private void solve() {\n        try {\n            int a,b,c;\n            a = sc.nextInt();   // a = 2\n            b = sc.nextInt();   // b = 3\n            c = sc.nextInt();   // c = 4\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n```\n\n# \u307e\u3068\u3081\nAtCoder\u306bJava\u3067\u53c2\u52a0\u3057\u3084\u3059\u304f\u306a\u3063\u305f\u3002\n\n", "tags": ["Java", "AtCoder"]}