{"context": " More than 1 year has passed since last update.Raspberry Pi\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092message\u30c8\u30d4\u30c3\u30af\u306bpublish\u3057\u3066\u3001IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067subscribe\u3068\u95be\u5024\u76e3\u8996\u3092\u884c\u3046\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\u30c8\u30ea\u30ac\u30fc\u306e\u767a\u706b\u6761\u4ef6\u3092Raspberry Pi\u306e\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u306b\u52a0\u3048\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u4ed6\u306e\u30c7\u30fc\u30bf\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\u4e00\u5ea6\u30c7\u30fc\u30bf\u3092subscribe\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u95be\u5024\u76e3\u8996\u4ee5\u5916\u306b\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3057\u305f\u308a\u3001\u3055\u3089\u306b\u5225\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\n\u4f5c\u696d\u306e\u6d41\u308c\n\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u4f5c\u696d\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\nRaspberry Pi\u3067BME280\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\nRaspberry Pi\u304b\u3089IDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u30b5\u30fc\u30d0\u30fc\u306emessage\u30c8\u30d4\u30c3\u30af\u306bMQTT publish\u3059\u308b\nIDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3067action\u306euuid\u30c8\u30d4\u30c3\u30af\u3092MQTT subscribe\u3059\u308b\nIDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u95be\u5024\u76e3\u8996\u3092\u3059\u308b\nIDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089HTTP POST /data/{trigger\u306euuid}\u3059\u308b\nmyThings\u30a2\u30d7\u30ea\u304b\u3089\u7d44\u5408\u305b\u3092\u300c\u624b\u52d5\u5b9f\u884c\u300d\u3059\u308b\nGmail\u306b\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\n\n\ntrigger-1\u3068action-1\u306e\u78ba\u8a8d\nIDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u30b5\u30fc\u30d0\u30fc\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066list\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u4f7f\u7528\u3059\u308btrigger-1\u3068action-1\u306euuid\u3068token\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ cd ~/iot_apps/meshblu-compose/\n$ docker-compose run --rm iotutil list\n...\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 keyword   \u2502 token    \u2502 uuid                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 trigger-1 \u2502 d74ebedf \u2502 21c83792-b25e-4ae7-a627-714af57a1a4b \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n...\n\u2502 action-1  \u2502 8a781e76 \u2502 3a78814a-6879-4543-bacf-9a206cd951a6 \u2502\n...\n\n\nRaspberry Pi\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\nMeshblu\u3092MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u3001\u9001\u4fe1\u5074\u306fmessage\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u306edevices\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u53d7\u4fe1\u5074\u306f\u3055\u304d\u307b\u3069\u306euuid\u3092\u30c8\u30d4\u30c3\u30af\u3068\u3057\u3066subscribe\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306ebme280_pubcloud.py\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\nbme280_pubcloud.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport json\nimport sys\nimport bme280\nfrom config import conf\n\ndef sensing():\n    return bme280.readData()\n\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n\n\ndef on_publish(client, userdata, mid):\n    print(\"publish: {}\".format(mid))\n\ndef main():\n    # MQTT\n    client = mqtt.Client(client_id='',\n                     clean_session=True, protocol=mqtt.MQTTv311)\n    client.username_pw_set(conf[\"TRIGGER_1_UUID\"], conf[\"TRIGGER_1_TOKEN\"])\n    client.on_connect = on_connect\n    client.on_publish = on_publish\n    client.connect(conf[\"IDCF_CHANNEL_URL\"], 1883, 60)\n\n    while True:\n        sleep(5)\n        retval = sensing()\n        if retval:\n             message = json.dumps({\"devices\": conf[\"ACTION_1_UUID\"],\n                                   \"payload\": retval})\n             print(message)\n             client.publish(\"message\", message)\nif __name__ == '__main__':\n    main()\n\n\nconfig.py\u306f\u74b0\u5883\u306b\u3042\u308f\u305b\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002trigger-1\u3068action-1\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nconfig.py\nconf = {\n     \"IDCF_CHANNEL_URL\": \"210.140.162.58\",\n     \"TRIGGER_1_UUID\": \"21c83792-b25e-4ae7-a627-714af57a1a4b\",\n     \"TRIGGER_1_TOKEN\": \"d74ebedf\",\n     \"ACTION_1_UUID\": \"3a78814a-6879-4543-bacf-9a206cd951a6\",\n     \"THRESHOLD\": 27.0\n}\n\n\n\ntrigger-1\u304b\u3089action-1\u306bpublish\u3059\u308b\n\u73fe\u72b6\u306eMeshblu\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306fpublish\u3068subscribe\u306b\u540c\u3058uuid\u3092\u4f7f\u3046\u30682\u56de\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304f\u3088\u3046\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fpublish\u3068subscribe\u3067\u5225\u306euuid\u3092\u9078\u629e\u3057\u307e\u3059\u3002publish\u306ftrigger-1\u3001subscribe\u306faction-1\u306euuid\u3092\u4f7f\u3044\u307e\u3059\u3002\n\npublish\u3059\u308buuid: trigger-1\nsubscribe\u3059\u308buuid: action-1\n\n\u524d\u56de\u3068\u540c\u69d8\u306bBME280\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092\u8a08\u6e2c\u3057\u30015\u79d2\u9593\u9694\u3067JSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092publish\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5b9f\u884c\nGitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u6700\u65b0\u306e\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n$ cd ~/python_apps/bme280-meshblu-py\n$ git pull\n\n\u65b0\u898f\u306e\u5834\u5408\u306fgit clone\u3057\u307e\u3059\u3002\n$ git clone https://github.com/IDCFChannel/bme280-meshblu-py.git\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092requirements.txt\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ cat requirements.txt\npaho-mqtt==1.1\nrequests==2.7.0\n$ sudo pip install -r requirements.txt\n\nroot\u6a29\u9650\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3059\u30025\u79d2\u9593\u9694\u3067\u8a08\u6e2c\u3057\u305f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304cpublish\u3055\u308c\u307e\u3059\u3002\n$ sudo python bme280_pubcloud.py\n{\"payload\": {\"pressure\": \"1008.85\", \"temperature\": \"30.24\", \"humidity\": \"39.20\"}, \"devices\": \"3a78814a-6879-4543-bacf-9a206cd951a6\"}\npublish: 1\n{\"payload\": {\"pressure\": \"1008.87\", \"temperature\": \"30.25\", \"humidity\": \"39.20\"}, \"devices\": \"3a78814a-6879-4543-bacf-9a206cd951a6\"}\npublish: 2\n...\n\n\nIDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\nbme280_subcloud.py\u304cMQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092subscribe\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\nbme280_subcloud.py\n# -*- coding: utf-8 -*-\nimport paho.mqtt.client as mqtt\nimport json\nimport requests\nfrom config import conf\n\nurl = \"http://{0}/data/{1}\".format(conf[\"IDCF_CHANNEL_URL\"],\n                                       conf[\"TRIGGER_1_UUID\"])\nheaders = {\n    \"meshblu_auth_uuid\": conf[\"TRIGGER_1_UUID\"],\n    \"meshblu_auth_token\": conf[\"TRIGGER_1_TOKEN\"]\n}\n\npayload = \"trigger on\"\n\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n    client.subscribe(conf[\"ACTION_1_UUID\"])\n\ndef on_subscribe(client, userdata, mid, granted_qos):\n    print(\"Subscribed mid: {0},  qos: {1}\".format(str(mid), str(granted_qos)))\n\ndef on_message(client, userdata, msg):\n    payload = json.loads(msg.payload)\n    data = payload[\"data\"]\n    if data:\n        retval = data[\"payload\"]\n        if retval:\n            print(\"-\"*10)\n            print(\"temperature: {}\".format(retval[\"temperature\"]))\n            if float(retval[\"temperature\"]) > conf[\"THRESHOLD\"]:\n                print(\"threshold over: {0} > {1}\".format(float(retval[\"temperature\"]),\n                                                         conf[\"THRESHOLD\"]))\n                r = requests.post(url, headers=headers, data=payload)\n\ndef main():\n    # MQTT\n    client = mqtt.Client(client_id='',\n                         clean_session=True, protocol=mqtt.MQTTv311)\n    client.username_pw_set(conf[\"ACTION_1_UUID\"], conf[\"ACTION_1_TOKEN\"])\n    client.on_connect = on_connect\n    client.on_subscribe = on_subscribe\n    client.on_message = on_message\n\n    client.connect(conf[\"IDCF_CHANNEL_URL\"], 1883, 60)\n    client.loop_forever()\n\nif __name__ == '__main__':\n    main()\n\n\n\naction-1\u3067subscribe\u3059\u308b\nRaspberry Pi\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306ftrigger-1\u304b\u3089action-1\u306bMQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u307e\u3057\u305f\u3002\u30af\u30e9\u30a6\u30c9\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3082MQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306faction-1\u3067subscribe\u3057\u307e\u3059\u3002\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n    client.subscribe(conf[\"ACTION_1_UUID\"])\n\n\ntrigger-1\u306bPOST\u3057\u3066myThings\u306e\u30c8\u30ea\u30ac\u30fc\u3092\u767a\u706b\u3059\u308b\n\u5c11\u3005\u3084\u3084\u3053\u3057\u304f\u306a\u308a\u307e\u3059\u304csubscribe\u3057\u305f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u95be\u5024\u3092\u8d85\u3048\u305f\u5834\u5408\u3001\u4eca\u5ea6\u306ftrigger-1\u306euuid\u3092/data/{trigger-1\u306euuid}\u306b\u5165\u308c\u305fURL\u306b\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u3092POST\u3057\u307e\u3059\u3002\nurl = \"http://{0}/data/{1}\".format(conf[\"IDCF_CHANNEL_URL\"],\n                                       conf[\"TRIGGER_1_UUID\"])\n\n\u73fe\u5728\u306emyThings\u306fIDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001POST\u3059\u308b\u30c7\u30fc\u30bf\u306f\u4efb\u610f\u3067\u3059\u3002POST\u3057\u3066myThings\u9023\u643a\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\npayload = \"trigger on\"\n\n\nmeshblu-compose\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f4\u65b0\nGitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u6700\u65b0\u306e\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306f\u7834\u68c4\u3057\u3066\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002mongo\u3068redis\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u6c38\u7d9a\u5316\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3057\u306a\u3051\u308c\u3070\u4ee5\u524d\u306e\u30c7\u30fc\u30bf\u3092\u5f15\u304d\u7d9a\u304d\u4f7f\u3048\u307e\u3059\n$ cd ~/iot_apps/meshblu-compose/\n$ docker-compose stop\n$ docker-compose rm\n$ git pull\n\n\u65b0\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3089meshblu-compose\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker-compose up -d openresty\n\n\n\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306esubscribe\u3068\u95be\u5024\u76e3\u8996\u3092\u884c\u3046IDCF\u30af\u30e9\u30a6\u30c9\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002docker-compose.yml\u306b\u30b5\u30fc\u30d3\u30b9\u304c\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\ndocker-compose.yml\nbme280:\n  build: ./bme280\n  volumes:\n    - /etc/localtime:/etc/localtime:ro\n\n\n\u30aa\u30d5\u30a3\u30b7\u30e3\u30ebPython\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3059\u3002ONBUILD\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3068\u304d\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306erequirements.txt\u3092COPY\u3057\u3066\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nDockerfile\nFROM python:2.7\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nONBUILD COPY requirements.txt /usr/src/app/\nONBUILD RUN pip install --no-cache-dir -r requirements.txt\n\nONBUILD COPY . /usr/src/app\n\n\n\u307e\u305fONBUILD\u3067\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u304cCOPY\u3055\u308c\u308b\u306e\u3067\u3001Dockerfile\u3067\u306f\u5b9f\u884c\u3057\u305f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092CMD\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\nDockerfile\nFROM python:2-onbuild\nCMD [ \"python\", \"./bme280_subcloud.py\" ]\n\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ docker-compose build bme280\n\nRaspberry Pi\u3067BME280\u304b\u3089\u8a08\u6e2c\u3057\u305f\u30c7\u30fc\u30bf\u3092message\u30c8\u30d4\u30c3\u30af\u306bMQTT publish\u3057\u3066IDCF\u30af\u30e9\u30a6\u30c9\u5074\u3067MQTT subscribe\u3057\u307e\u3059\u3002\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u95be\u5024\u3092\u8d85\u3048\u305f\u5834\u5408\u306b/data/{trigger\u306euuid}\u3078HTTP POST\u3059\u308b\u3068myThings\u306e\u30c8\u30ea\u30ac\u30fc\u304c\u767a\u706b\u3055\u308c\u307e\u3059\u3002\n$ docker-compose run --rm bme280\nConnected with result code 0\nSubscribed mid: 1,  qos: (0,)\n----------\ntemperature: 30.07\nthreshold over: 30.07 > 27.0\n----------\ntemperature: 30.07\nthreshold over: 30.07 > 27.0\n\nRaspberry Pi\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092message\u30c8\u30d4\u30c3\u30af\u306bpublish\u3057\u3066\u3001IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067subscribe\u3068\u95be\u5024\u76e3\u8996\u3092\u884c\u3046\u30d1\u30bf\u30fc\u30f3\u3067\u3059\u3002\u30c8\u30ea\u30ac\u30fc\u306e\u767a\u706b\u6761\u4ef6\u3092Raspberry Pi\u306e\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u306b\u52a0\u3048\u3066\u30b5\u30fc\u30d0\u30fc\u5074\u3067\u4ed6\u306e\u30c7\u30fc\u30bf\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u3044\u5834\u5408\u306b\u4f7f\u3044\u307e\u3059\u3002\u4e00\u5ea6\u30c7\u30fc\u30bf\u3092subscribe\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u95be\u5024\u76e3\u8996\u4ee5\u5916\u306b\u3082\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u4fdd\u5b58\u3057\u305f\u308a\u3001\u3055\u3089\u306b\u5225\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\n\n## \u306f\u3058\u3081\u306b\n\n### \u4f5c\u696d\u306e\u6d41\u308c\n\n\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u4f5c\u696d\u3092\u9032\u3081\u3066\u3044\u304d\u307e\u3059\u3002\n\n1. Raspberry Pi\u3067BME280\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n1. Raspberry Pi\u304b\u3089IDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u30b5\u30fc\u30d0\u30fc\u306e`message`\u30c8\u30d4\u30c3\u30af\u306bMQTT publish\u3059\u308b\n1. IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3067`action\u306euuid`\u30c8\u30d4\u30c3\u30af\u3092MQTT subscribe\u3059\u308b\n1. IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u95be\u5024\u76e3\u8996\u3092\u3059\u308b\n1. IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\u304b\u3089HTTP POST `/data/{trigger\u306euuid}`\u3059\u308b\n1. myThings\u30a2\u30d7\u30ea\u304b\u3089\u7d44\u5408\u305b\u3092\u300c\u624b\u52d5\u5b9f\u884c\u300d\u3059\u308b\n1. Gmail\u306b\u30e1\u30fc\u30eb\u304c\u5c4a\u304f\n\n\n## trigger-1\u3068action-1\u306e\u78ba\u8a8d\n\nIDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u30b5\u30fc\u30d0\u30fc\u306e\u4eee\u60f3\u30de\u30b7\u30f3\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066`list`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4eca\u56de\u4f7f\u7528\u3059\u308btrigger-1\u3068action-1\u306euuid\u3068token\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\n```bash\n$ cd ~/iot_apps/meshblu-compose/\n$ docker-compose run --rm iotutil list\n...\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 keyword   \u2502 token    \u2502 uuid                                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 trigger-1 \u2502 d74ebedf \u2502 21c83792-b25e-4ae7-a627-714af57a1a4b \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n...\n\u2502 action-1  \u2502 8a781e76 \u2502 3a78814a-6879-4543-bacf-9a206cd951a6 \u2502\n...\n```\n\n## Raspberry Pi\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\n\nMeshblu\u3092MQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u3068\u3057\u3066\u4f7f\u3046\u5834\u5408\u3001\u9001\u4fe1\u5074\u306fmessage\u30c8\u30d4\u30c3\u30af\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u307e\u3059\u3002\u3053\u306e\u3068\u304d\u30e1\u30c3\u30bb\u30fc\u30b8\u672c\u6587\u306edevices\u30d5\u30a3\u30fc\u30eb\u30c9\u306b\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u53d7\u4fe1\u5074\u306f\u3055\u304d\u307b\u3069\u306euuid\u3092\u30c8\u30d4\u30c3\u30af\u3068\u3057\u3066subscribe\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306e[bme280_pubcloud.py](https://github.com/IDCFChannel/bme280-meshblu-py/blob/master/bme280_pubcloud.py)\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```python:bme280_pubcloud.py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\nimport paho.mqtt.client as mqtt\nfrom time import sleep\nimport json\nimport sys\nimport bme280\nfrom config import conf\n\ndef sensing():\n    return bme280.readData()\n\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n\n\ndef on_publish(client, userdata, mid):\n    print(\"publish: {}\".format(mid))\n\ndef main():\n    # MQTT\n    client = mqtt.Client(client_id='',\n\t                 clean_session=True, protocol=mqtt.MQTTv311)\n    client.username_pw_set(conf[\"TRIGGER_1_UUID\"], conf[\"TRIGGER_1_TOKEN\"])\n    client.on_connect = on_connect\n    client.on_publish = on_publish\n    client.connect(conf[\"IDCF_CHANNEL_URL\"], 1883, 60)\n\n    while True:\n        sleep(5)\n        retval = sensing()\n        if retval:\n             message = json.dumps({\"devices\": conf[\"ACTION_1_UUID\"],\n                                   \"payload\": retval})\n             print(message)\n             client.publish(\"message\", message)\nif __name__ == '__main__':\n    main()\n```\n\nconfig.py\u306f\u74b0\u5883\u306b\u3042\u308f\u305b\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002trigger-1\u3068action-1\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n```config.py\nconf = {\n     \"IDCF_CHANNEL_URL\": \"210.140.162.58\",\n     \"TRIGGER_1_UUID\": \"21c83792-b25e-4ae7-a627-714af57a1a4b\",\n     \"TRIGGER_1_TOKEN\": \"d74ebedf\",\n     \"ACTION_1_UUID\": \"3a78814a-6879-4543-bacf-9a206cd951a6\",\n     \"THRESHOLD\": 27.0\n}\n```\n\n### trigger-1\u304b\u3089action-1\u306bpublish\u3059\u308b\n\n\u73fe\u72b6\u306eMeshblu\u306eMQTT\u30d6\u30ed\u30fc\u30ab\u30fc\u306fpublish\u3068subscribe\u306b\u540c\u3058uuid\u3092\u4f7f\u3046\u30682\u56de\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304f\u3088\u3046\u3067\u3059\u3002\u305d\u306e\u305f\u3081\u3053\u306e\u30b5\u30f3\u30d7\u30eb\u3067\u306fpublish\u3068subscribe\u3067\u5225\u306euuid\u3092\u9078\u629e\u3057\u307e\u3059\u3002publish\u306ftrigger-1\u3001subscribe\u306faction-1\u306euuid\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n* publish\u3059\u308buuid: trigger-1\n* subscribe\u3059\u308buuid: action-1\n\n\u524d\u56de\u3068\u540c\u69d8\u306bBME280\u304b\u3089\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u3092\u8a08\u6e2c\u3057\u30015\u79d2\u9593\u9694\u3067JSON\u5f62\u5f0f\u306e\u30c7\u30fc\u30bf\u3092publish\u3057\u307e\u3059\u3002\n\n### \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u5b9f\u884c\n\nGitHub\u306e[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/IDCFChannel/bme280-meshblu-py)\u304b\u3089\u6700\u65b0\u306e\u30b3\u30fc\u30c9\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002\n\n```bash\n$ cd ~/python_apps/bme280-meshblu-py\n$ git pull\n```\n\n\u65b0\u898f\u306e\u5834\u5408\u306fgit clone\u3057\u307e\u3059\u3002\n\n```bash\n$ git clone https://github.com/IDCFChannel/bme280-meshblu-py.git\n```\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u884c\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092requirements.txt\u304b\u3089\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```bash\n$ cat requirements.txt\npaho-mqtt==1.1\nrequests==2.7.0\n$ sudo pip install -r requirements.txt\n```\n\nroot\u6a29\u9650\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u307e\u3059\u30025\u79d2\u9593\u9694\u3067\u8a08\u6e2c\u3057\u305f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304cpublish\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ sudo python bme280_pubcloud.py\n{\"payload\": {\"pressure\": \"1008.85\", \"temperature\": \"30.24\", \"humidity\": \"39.20\"}, \"devices\": \"3a78814a-6879-4543-bacf-9a206cd951a6\"}\npublish: 1\n{\"payload\": {\"pressure\": \"1008.87\", \"temperature\": \"30.25\", \"humidity\": \"39.20\"}, \"devices\": \"3a78814a-6879-4543-bacf-9a206cd951a6\"}\npublish: 2\n...\n```\n\n## IDCF\u30af\u30e9\u30a6\u30c9\u306e\u30b5\u30fc\u30d0\u30fc\u30d7\u30ed\u30b0\u30e9\u30e0\n\n[bme280_subcloud.py](https://github.com/IDCFChannel/meshblu-compose/blob/master/bme280/bme280_subcloud.py)\u304cMQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092subscribe\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3059\u3002\n\n\n```python:bme280_subcloud.py\n# -*- coding: utf-8 -*-\nimport paho.mqtt.client as mqtt\nimport json\nimport requests\nfrom config import conf\n\nurl = \"http://{0}/data/{1}\".format(conf[\"IDCF_CHANNEL_URL\"],\n                                       conf[\"TRIGGER_1_UUID\"])\nheaders = {\n    \"meshblu_auth_uuid\": conf[\"TRIGGER_1_UUID\"],\n    \"meshblu_auth_token\": conf[\"TRIGGER_1_TOKEN\"]\n}\n\npayload = \"trigger on\"\n\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n    client.subscribe(conf[\"ACTION_1_UUID\"])\n\ndef on_subscribe(client, userdata, mid, granted_qos):\n    print(\"Subscribed mid: {0},  qos: {1}\".format(str(mid), str(granted_qos)))\n\ndef on_message(client, userdata, msg):\n    payload = json.loads(msg.payload)\n    data = payload[\"data\"]\n    if data:\n        retval = data[\"payload\"]\n        if retval:\n            print(\"-\"*10)\n            print(\"temperature: {}\".format(retval[\"temperature\"]))\n            if float(retval[\"temperature\"]) > conf[\"THRESHOLD\"]:\n                print(\"threshold over: {0} > {1}\".format(float(retval[\"temperature\"]),\n                                                         conf[\"THRESHOLD\"]))\n                r = requests.post(url, headers=headers, data=payload)\n\ndef main():\n    # MQTT\n    client = mqtt.Client(client_id='',\n                         clean_session=True, protocol=mqtt.MQTTv311)\n    client.username_pw_set(conf[\"ACTION_1_UUID\"], conf[\"ACTION_1_TOKEN\"])\n    client.on_connect = on_connect\n    client.on_subscribe = on_subscribe\n    client.on_message = on_message\n\n    client.connect(conf[\"IDCF_CHANNEL_URL\"], 1883, 60)\n    client.loop_forever()\n\nif __name__ == '__main__':\n    main()\n```\n\n### action-1\u3067subscribe\u3059\u308b\n\nRaspberry Pi\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306ftrigger-1\u304b\u3089action-1\u306bMQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092publish\u3057\u307e\u3057\u305f\u3002\u30af\u30e9\u30a6\u30c9\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3082MQTT\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306faction-1\u3067subscribe\u3057\u307e\u3059\u3002\n\n\n```python\ndef on_connect(client, userdata, rc):\n    print(\"Connected with result code {}\".format(rc))\n    client.subscribe(conf[\"ACTION_1_UUID\"])\n```\n\n### trigger-1\u306bPOST\u3057\u3066myThings\u306e\u30c8\u30ea\u30ac\u30fc\u3092\u767a\u706b\u3059\u308b\n\n\u5c11\u3005\u3084\u3084\u3053\u3057\u304f\u306a\u308a\u307e\u3059\u304csubscribe\u3057\u305f\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u95be\u5024\u3092\u8d85\u3048\u305f\u5834\u5408\u3001\u4eca\u5ea6\u306ftrigger-1\u306euuid\u3092`/data/{trigger-1\u306euuid}`\u306b\u5165\u308c\u305fURL\u306b\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u3092POST\u3057\u307e\u3059\u3002\n\n```python\nurl = \"http://{0}/data/{1}\".format(conf[\"IDCF_CHANNEL_URL\"],\n                                       conf[\"TRIGGER_1_UUID\"])\n```\n\n\u73fe\u5728\u306emyThings\u306fIDCF\u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u30c8\u30ea\u30ac\u30fc\u306b\u3057\u3066\u30a2\u30af\u30b7\u30e7\u30f3\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001POST\u3059\u308b\u30c7\u30fc\u30bf\u306f\u4efb\u610f\u3067\u3059\u3002POST\u3057\u3066myThings\u9023\u643a\u7528\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u30ec\u30b3\u30fc\u30c9\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3059\u3002\n\n```python\npayload = \"trigger on\"\n```\n\n### meshblu-compose\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f4\u65b0\n\nGitHub\u306e[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/IDCFChannel/meshblu-compose)\u304b\u3089\u6700\u65b0\u306e\u30b3\u30fc\u30c9\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u73fe\u5728\u8d77\u52d5\u3057\u3066\u3044\u308b\u30b3\u30f3\u30c6\u30ca\u306f\u7834\u68c4\u3057\u3066\u65b0\u3057\u3044\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002`mongo`\u3068`redis`\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u6c38\u7d9a\u5316\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3057\u306a\u3051\u308c\u3070\u4ee5\u524d\u306e\u30c7\u30fc\u30bf\u3092\u5f15\u304d\u7d9a\u304d\u4f7f\u3048\u307e\u3059\n\n```bash\n$ cd ~/iot_apps/meshblu-compose/\n$ docker-compose stop\n$ docker-compose rm\n$ git pull\n```\n\n\u65b0\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f\u3089meshblu-compose\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose up -d openresty\n```\n\n### \u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u306esubscribe\u3068\u95be\u5024\u76e3\u8996\u3092\u884c\u3046IDCF\u30af\u30e9\u30a6\u30c9\u5074\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002[docker-compose.yml](https://github.com/IDCFChannel/meshblu-compose/blob/master/docker-compose.yml)\u306b\u30b5\u30fc\u30d3\u30b9\u304c\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u30ea\u30dd\u30b8\u30c8\u30ea\u306f[\u3053\u3061\u3089](https://github.com/IDCFChannel/meshblu-compose/tree/master/bme280)\u3067\u3059\u3002\n\n```yml:docker-compose.yml\nbme280:\n  build: ./bme280\n  volumes:\n    - /etc/localtime:/etc/localtime:ro\n```\n\n\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb[Python](https://hub.docker.com/_/python/)\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3059\u3002ONBUILD\u306e\u30d9\u30fc\u30b9\u30a4\u30e1\u30fc\u30b8\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3068\u304d\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306erequirements.txt\u3092COPY\u3057\u3066\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```bash:Dockerfile\nFROM python:2.7\n\nRUN mkdir -p /usr/src/app\nWORKDIR /usr/src/app\n\nONBUILD COPY requirements.txt /usr/src/app/\nONBUILD RUN pip install --no-cache-dir -r requirements.txt\n\nONBUILD COPY . /usr/src/app\n```\n\n\u307e\u305fONBUILD\u3067\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u30d5\u30a1\u30a4\u30eb\u304cCOPY\u3055\u308c\u308b\u306e\u3067\u3001[Dockerfile](https://github.com/IDCFChannel/meshblu-compose/blob/master/bme280/Dockerfile)\u3067\u306f\u5b9f\u884c\u3057\u305f\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3092CMD\u306b\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:Dockerfile\nFROM python:2-onbuild\nCMD [ \"python\", \"./bme280_subcloud.py\" ]\n```\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```bash\n$ docker-compose build bme280\n```\n\nRaspberry Pi\u3067BME280\u304b\u3089\u8a08\u6e2c\u3057\u305f\u30c7\u30fc\u30bf\u3092message\u30c8\u30d4\u30c3\u30af\u306bMQTT publish\u3057\u3066IDCF\u30af\u30e9\u30a6\u30c9\u5074\u3067MQTT subscribe\u3057\u307e\u3059\u3002\u30bb\u30f3\u30b5\u30fc\u30c7\u30fc\u30bf\u304c\u95be\u5024\u3092\u8d85\u3048\u305f\u5834\u5408\u306b`/data/{trigger\u306euuid}`\u3078HTTP POST\u3059\u308b\u3068myThings\u306e\u30c8\u30ea\u30ac\u30fc\u304c\u767a\u706b\u3055\u308c\u307e\u3059\u3002\n\n```bash\n$ docker-compose run --rm bme280\nConnected with result code 0\nSubscribed mid: 1,  qos: (0,)\n----------\ntemperature: 30.07\nthreshold over: 30.07 > 27.0\n----------\ntemperature: 30.07\nthreshold over: 30.07 > 27.0\n```\n", "tags": ["myThings", "IDCF\u30af\u30e9\u30a6\u30c9", "IoT", "Meshblu", "RaspberryPi"]}