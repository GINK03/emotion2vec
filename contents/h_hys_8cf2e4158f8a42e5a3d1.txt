{"context": " More than 1 year has passed since last update.AuthorizationAdapter \u3092\u7d99\u627f\u3057\u3066\u72ec\u81ea\u306e authorized? \u3092\u4f5c\u6210\u3057\u305f\u6642\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u3067\u3059\u3002\ncontroller spec \u3092\u5229\u7528\u3059\u308b\u624b\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001controller spec \u3092 \u4f7f\u308f\u305a\u306b authorized? \u3060\u3051\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\nActiveAdmin Documentation \u306e Authorization Adapter \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0b\u306e authorized? \u306b\u5bfe\u3059\u308b spec \u306e\u66f8\u304d\u65b9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\napp/models/only_authors_authorization.rb\nclass OnlyAuthorsAuthorization < ActiveAdmin::AuthorizationAdapter\n\n  def authorized?(action, subject = nil)\n    case subject\n    when normalized(Post)\n      # \u6295\u7a3f\u8005\u4ee5\u5916\u306f\u66f4\u65b0\u3084\u524a\u9664\u306f\u51fa\u6765\u306a\u3044\n      if action == :update || action == :destroy\n        subject.author == user\n      else\n        true\n      end\n    else\n      true\n    end\n  end\nend\n\n\n\nspec \u306e\u66f8\u304d\u65b9\n\nspec/models/only_authors_authorization_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe OnlyAuthorsAuthorization do\n  let!(:application) { ActiveAdmin.application }\n  let!(:namespace) { application.namespaces.first }\n  let!(:resources) { namespace.resources }\n  let(:resource) { resources[klass] }\n  let(:auth) { MyAuthorization.new resource, current_user }\n\n  # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\n  let(:current_user) { FactoryGirl.build(:user) }\n\n  describe 'Post' do\n    let(:klass) { Post }\n    let(:subject) { post || klass }\n\n    describe '\u6295\u7a3f\u8005\u304c\u30ed\u30b0\u30a4\u30f3\u4e2d' do\n      let(:post) { FactoryGirl.build(:post, author: current_user) }\n\n      it 'index' do\n        post = nil\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'show' do\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'edit' do\n        expected(auth.authorized?(:update, subject)).to be true\n      end\n\n      it 'destroy' do\n        expected(auth.authorized?(:destroy, subject)).to be true\n      end\n    end\n\n    describe '\u5225\u306e\u30e6\u30fc\u30b6\u304c\u30ed\u30b0\u30a4\u30f3\u4e2d' do\n      let(:ohter_user) { FactoryGirl.build(:user) }\n      let(:post) { FactoryGirl.build(:post, author: ohter_user) }\n\n      it 'index' do\n        post = nil\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'show' do\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'edit' do\n        expected(auth.authorized?(:update, subject)).to be false\n      end\n\n      it 'destroy' do\n        expected(auth.authorized?(:destroy, subject)).to be false\n      end\n    end\n  end\nend\n\n\n\n\u53c2\u8003URL\n\nhttp://activeadmin.info/docs/13-authorization-adapter.html\nhttps://github.com/activeadmin/activeadmin/blob/master/lib/active_admin/authorization_adapter.rb\n\n`AuthorizationAdapter` \u3092\u7d99\u627f\u3057\u3066\u72ec\u81ea\u306e `authorized?` \u3092\u4f5c\u6210\u3057\u305f\u6642\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\u3067\u3059\u3002\n`controller spec` \u3092\u5229\u7528\u3059\u308b\u624b\u3082\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001`controller spec` \u3092 \u4f7f\u308f\u305a\u306b `authorized?` \u3060\u3051\u306b\u7126\u70b9\u3092\u5f53\u3066\u3066\u30c6\u30b9\u30c8\u3092\u4f5c\u308b\u3053\u3068\u3082\u53ef\u80fd\u306a\u3088\u3046\u3067\u3059\u3002\n\n## \u30c6\u30b9\u30c8\u5bfe\u8c61\u30b3\u30fc\u30c9\n\nActiveAdmin Documentation \u306e [Authorization Adapter](http://activeadmin.info/docs/13-authorization-adapter.html) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u4ee5\u4e0b\u306e `authorized?` \u306b\u5bfe\u3059\u308b spec \u306e\u66f8\u304d\u65b9\u3092\u8a18\u8f09\u3057\u307e\u3059\u3002\n\n```rb:app/models/only_authors_authorization.rb\nclass OnlyAuthorsAuthorization < ActiveAdmin::AuthorizationAdapter\n\n  def authorized?(action, subject = nil)\n    case subject\n    when normalized(Post)\n      # \u6295\u7a3f\u8005\u4ee5\u5916\u306f\u66f4\u65b0\u3084\u524a\u9664\u306f\u51fa\u6765\u306a\u3044\n      if action == :update || action == :destroy\n        subject.author == user\n      else\n        true\n      end\n    else\n      true\n    end\n  end\nend\n```\n\n## spec \u306e\u66f8\u304d\u65b9\n\n```rb:spec/models/only_authors_authorization_spec.rb\nrequire 'rails_helper'\n\nRSpec.describe OnlyAuthorsAuthorization do\n  let!(:application) { ActiveAdmin.application }\n  let!(:namespace) { application.namespaces.first }\n  let!(:resources) { namespace.resources }\n  let(:resource) { resources[klass] }\n  let(:auth) { MyAuthorization.new resource, current_user }\n\n  # \u30ed\u30b0\u30a4\u30f3\u4e2d\u306e\u30e6\u30fc\u30b6\n  let(:current_user) { FactoryGirl.build(:user) }\n\n  describe 'Post' do\n    let(:klass) { Post }\n    let(:subject) { post || klass }\n\n    describe '\u6295\u7a3f\u8005\u304c\u30ed\u30b0\u30a4\u30f3\u4e2d' do\n      let(:post) { FactoryGirl.build(:post, author: current_user) }\n\n      it 'index' do\n        post = nil\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'show' do\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'edit' do\n        expected(auth.authorized?(:update, subject)).to be true\n      end\n\n      it 'destroy' do\n        expected(auth.authorized?(:destroy, subject)).to be true\n      end\n    end\n\n    describe '\u5225\u306e\u30e6\u30fc\u30b6\u304c\u30ed\u30b0\u30a4\u30f3\u4e2d' do\n      let(:ohter_user) { FactoryGirl.build(:user) }\n      let(:post) { FactoryGirl.build(:post, author: ohter_user) }\n\n      it 'index' do\n        post = nil\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'show' do\n        expected(auth.authorized?(:read, subject)).to be true\n      end\n\n      it 'edit' do\n        expected(auth.authorized?(:update, subject)).to be false\n      end\n\n      it 'destroy' do\n        expected(auth.authorized?(:destroy, subject)).to be false\n      end\n    end\n  end\nend\n```\n\n## \u53c2\u8003URL\n\n* http://activeadmin.info/docs/13-authorization-adapter.html\n* https://github.com/activeadmin/activeadmin/blob/master/lib/active_admin/authorization_adapter.rb\n", "tags": ["Ruby", "Rails", "activeadmin", "RSpec"]}