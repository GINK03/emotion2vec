{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3072\u3087\u3093\u306a\u4e8b\u304b\u3089\uff0cIntel Edison Kit for Arduino\u3092\u5165\u624b\u3057\u305f\u306e\u3067\uff0c\u3061\u3087\u3063\u3068\u904a\u3093\u3067\u307f\u307e\u3057\u305f\uff0e\nArduino\u30b9\u30b1\u30c3\u30c1\u306fEdison\u3067\u8d70\u3063\u3066\u308bLinux\u306e\u4e00\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u306a\u3089\u3070\uff0c\u30bb\u30f3\u30b5\u30fc\u306e\u8aad\u307f\u53d6\u308a\u306a\u3069\u306fArduino\u306b\u4efb\u305b\u3066\uff0c\u9ad8\u5ea6\u306a\u51e6\u7406\uff08\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u63a5\u7d9a\u3084Web\u30b5\u30fc\u30d0\u3068\u304b\uff09\u306fEdison\u306b\u4efb\u305b\u3088\u3046\u3068\u304b\u601d\u3046\u308f\u3051\u3067\u3059\uff0e\u3061\u3087\u3046\u3069\uff0cIntel Developer Zone\u306b\nEfficient communication between Arduino* and Linux native processes\n\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u7d39\u4ecb\u3057\u307e\u3059\uff0e\u5143\u8a18\u4e8b\u304c\u304b\u306a\u308a\u4e01\u5be7\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3042\u308b\u306e\u3067\uff0c\u305c\u3072\u76ee\u3092\u901a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n\u306a\u304a\uff0cEdison\u3068\u66f8\u3044\u3066\u308b\u90e8\u5206\u3092Galileo\u306b\u8aad\u307f\u66ff\u3048\u3066\u3082\u53ef\uff0e\n\n\uff13\u884c\u3067\n\nArduino\u306fLinux\u4e0a\u306e\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u308b\n\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u306f\uff0c\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30e2\u30ea\u9818\u57df\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u3067\u884c\u3046(unix\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u4f7f\u3046)\npthread\u4f7f\u3063\u3066\uff0c\u6392\u4ed6\u5236\u5fa1\u3068\u5024\u306e\u5909\u66f4\u306e\u901a\u77e5\u3092\u3059\u308b\n\n\n\u4ee5\u4e0b\uff0c\u8981\u7d04\nArduino\u30b9\u30b1\u30c3\u30c1\u3068Edison\u3067\u6b21\u306e\u57fa\u6e96\u3092\u307f\u305f\u3059\u3088\u3046\u306a\u901a\u4fe1\u3092\u3057\u305f\u3044\n\n\u30c7\u30a3\u30b9\u30af\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u3057\u306a\u3044\uff08disk\u306e\u6d88\u8017\u3092\u6e1b\u3089\u3059\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6539\u5584\uff09\n\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\uff08\u5b9a\u671f\u7684\u306b\u8aad\u307f\u306b\u884c\u3063\u305f\u308a\u3057\u306a\u3044\uff09\n\n\n\u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\nArduino\u30b9\u30b1\u30c3\u30c1\u306fLinux\u3067\u52d5\u304f\u30d7\u30ed\u30bb\u30b9\u306b\u3059\u304e\u306a\u3044\uff0eLinux\u306b\u304a\u3051\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u304c\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u300c\u30e1\u30e2\u30ea\u9818\u57df\u306e\u5171\u6709\u300d\u3092\u5229\u7528\u3057\u3066\u3044\u308b\uff08memory mapped IPC\u3063\u3066\u65e5\u672c\u8a9e\u3067\u4f55\u3066\u8a00\u3046\u306e\uff09\n\n\u6392\u4ed6\u5236\u5fa1\n\u30e1\u30e2\u30ea\u9818\u57df\u306e\u5171\u6709\u306f\u3067\u304d\u305f\uff0e\u3057\u304b\u3057\uff0c\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u540c\u6642\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u3068\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3046\uff0e\u305d\u3053\u3067\uff0cmutex\u3092\u4f7f\u3046\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306fpthread\u3092\u4f7f\u3063\u3066\u3044\u308b\uff0e\nLock\u306fpthread_mutex_lock/pthread_mutex_unlock\u3067\u30b5\u30f3\u30c9\u30a4\u30c3\u30c1\u3057\u305f\u3089\u3088\u3044\uff0e\npthread_mutex_lock(&mutex);\n\n// \u3053\u3053\u3067\u5171\u6709\u30e1\u30e2\u30ea\u9818\u57df\u306e\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\n\npthread_mutex_unlock(&mutex);\n\n\n\u901a\u77e5\n\u6761\u4ef6\u5909\u6570(condition variables)\u3092\u4f7f\u3048\u3070\u5b9f\u73fe\u3067\u304d\u308b\uff0e\u6761\u4ef6\u5909\u6570\u3092\u4f7f\u3046\u3068\uff0c\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u6761\u4ef6\u3092\u9001\u4fe1\u3059\u308b\u307e\u3067\uff0c\u30b9\u30ec\u30c3\u30c9\u306e\u505c\u6b62\u3059\u308b\uff0e\n\u4f8b\u3048\u3070\uff0cEdison\u5074\u3067LED\u306eon/off\u3092\u5236\u5fa1\u3057\uff0c\u5b9f\u969b\u306bGPIO\u3092\u64cd\u4f5c\u3059\u308b\u306e\u306fArduino\u306b\u4efb\u305b\u308b\u3068\u3044\u3063\u305f\u5834\u5408\n// Arduino\u30b9\u30b1\u30c3\u30c1\n// data\u306fEdison\u5074\u3068\u5171\u6709\u3057\u3066\u3044\u308b\u3068\u3059\u308b\n\nstruct Data {\n  bool led_on;\n  pthread_mutex_t mutex;\n  pthread_cond_t cond;\n};\n\nData *data;\n\n/*** \u4e2d\u7565 ***/\n\nvoid loop() {\n  pthread_mutex_lock(&(data->mutex));\n  pthread_cond_wait(&(data->cond), &(data->mutex));  // \u6761\u4ef6\u304c\u9001\u4fe1\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\n  // \u30d5\u30e9\u30b0\u306b\u3088\u308aGPIO\u306e\u96fb\u5727\u5909\u3048\u308b\n  digitalWrite(PIN, data->led_on ? HIGH : LOW);\n\n  pthread_mutex_unlock(&mutex);\n}\n\n// Edison \n// LED\u306eon/off\u306e\u30d5\u30e9\u30b0\u3092\u5909\u3048\u305f\u3042\u3068\uff0c\u901a\u77e5\u3092\u3059\u308b\n\npthread_mutex_lock(&(data->mutex));\n\ndata->led_on = true;\n\npthread_mutex_unlock(&(data->mutex));\npthread_cond_signal(&(data->cond));   // \u6761\u4ef6\u306e\u9001\u4fe1\n\n\n\u611f\u60f3\n\nC++11\u306estd::mutex\u3084std::condition_variable\u4f7f\u3046\u3068\u3082\u3046\u3061\u3087\u3063\u3068\u30b9\u30c3\u30ad\u30ea\u3057\u305d\u3046\nArduino\u30b9\u30b1\u30c3\u30c1\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u547c\u3079\u308b\u306a\u3089socket\u3068\u304b\u3082\u8a66\u3057\u3066\u307f\u305f\u3044\uff0e\n\n# \u306f\u3058\u3081\u306b\n\u3072\u3087\u3093\u306a\u4e8b\u304b\u3089\uff0cIntel Edison Kit for Arduino\u3092\u5165\u624b\u3057\u305f\u306e\u3067\uff0c\u3061\u3087\u3063\u3068\u904a\u3093\u3067\u307f\u307e\u3057\u305f\uff0e\n\nArduino\u30b9\u30b1\u30c3\u30c1\u306fEdison\u3067\u8d70\u3063\u3066\u308bLinux\u306e\u4e00\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u306a\u3089\u3070\uff0c\u30bb\u30f3\u30b5\u30fc\u306e\u8aad\u307f\u53d6\u308a\u306a\u3069\u306fArduino\u306b\u4efb\u305b\u3066\uff0c\u9ad8\u5ea6\u306a\u51e6\u7406\uff08\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u3078\u306e\u63a5\u7d9a\u3084Web\u30b5\u30fc\u30d0\u3068\u304b\uff09\u306fEdison\u306b\u4efb\u305b\u3088\u3046\u3068\u304b\u601d\u3046\u308f\u3051\u3067\u3059\uff0e\u3061\u3087\u3046\u3069\uff0c[Intel Developer Zone](https://software.intel.com/en-us)\u306b\n\n[Efficient communication between Arduino\\* and Linux native processes](https://software.intel.com/en-us/blogs/2014/09/22/efficient-communication-between-arduino-and-linux-native-processes#_ga=1.131696271.1267878252.1412838079)\n\n\u3068\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u306e\u3067\uff0c\u7d39\u4ecb\u3057\u307e\u3059\uff0e**\u5143\u8a18\u4e8b\u304c\u304b\u306a\u308a\u4e01\u5be7\u3067\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u3042\u308b\u306e\u3067\uff0c\u305c\u3072\u76ee\u3092\u901a\u3057\u3066\u304f\u3060\u3055\u3044\uff0e**\n\n\u306a\u304a\uff0cEdison\u3068\u66f8\u3044\u3066\u308b\u90e8\u5206\u3092Galileo\u306b\u8aad\u307f\u66ff\u3048\u3066\u3082\u53ef\uff0e\n\n# \uff13\u884c\u3067\n\n- Arduino\u306fLinux\u4e0a\u306e\u30d7\u30ed\u30bb\u30b9\u3068\u3057\u3066\u52d5\u3044\u3066\u3044\u308b\n- \u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\u306f\uff0c\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30e2\u30ea\u9818\u57df\u3092\u5171\u6709\u3059\u308b\u3053\u3068\u3067\u884c\u3046(unix\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u4f7f\u3046)\n- pthread\u4f7f\u3063\u3066\uff0c\u6392\u4ed6\u5236\u5fa1\u3068\u5024\u306e\u5909\u66f4\u306e\u901a\u77e5\u3092\u3059\u308b\n\n\n\u4ee5\u4e0b\uff0c\u8981\u7d04\n---\n\nArduino\u30b9\u30b1\u30c3\u30c1\u3068Edison\u3067\u6b21\u306e\u57fa\u6e96\u3092\u307f\u305f\u3059\u3088\u3046\u306a\u901a\u4fe1\u3092\u3057\u305f\u3044\n\n1. \u30c7\u30a3\u30b9\u30af\u3078\u306e\u66f8\u304d\u8fbc\u307f\u3092\u3057\u306a\u3044\uff08disk\u306e\u6d88\u8017\u3092\u6e1b\u3089\u3059\uff0c\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u306e\u6539\u5584\uff09\n2. \u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u30c8\u30ea\u30ac\u30fc\u3055\u308c\u308b\uff08\u5b9a\u671f\u7684\u306b\u8aad\u307f\u306b\u884c\u3063\u305f\u308a\u3057\u306a\u3044\uff09\n\n\n## \u30c7\u30fc\u30bf\u306e\u3084\u308a\u3068\u308a\n\nArduino\u30b9\u30b1\u30c3\u30c1\u306fLinux\u3067\u52d5\u304f\u30d7\u30ed\u30bb\u30b9\u306b\u3059\u304e\u306a\u3044\uff0eLinux\u306b\u304a\u3051\u308b\u30d7\u30ed\u30bb\u30b9\u9593\u901a\u4fe1\u306e\u65b9\u6cd5\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u304c\uff0c\u3053\u306e\u8a18\u4e8b\u3067\u306f\u300c\u30e1\u30e2\u30ea\u9818\u57df\u306e\u5171\u6709\u300d\u3092\u5229\u7528\u3057\u3066\u3044\u308b\uff08memory mapped IPC\u3063\u3066\u65e5\u672c\u8a9e\u3067\u4f55\u3066\u8a00\u3046\u306e\uff09\n\n## \u6392\u4ed6\u5236\u5fa1\n\n\u30e1\u30e2\u30ea\u9818\u57df\u306e\u5171\u6709\u306f\u3067\u304d\u305f\uff0e\u3057\u304b\u3057\uff0c\u8907\u6570\u306e\u30d7\u30ed\u30bb\u30b9\u304c\u540c\u6642\u306b\u8aad\u307f\u66f8\u304d\u3059\u308b\u3068\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u3063\u3066\u3057\u307e\u3046\uff0e\u305d\u3053\u3067\uff0c[mutex](http://ja.wikipedia.org/wiki/%E3%83%9F%E3%83%A5%E3%83%BC%E3%83%86%E3%83%83%E3%82%AF%E3%82%B9)\u3092\u4f7f\u3046\uff0e\u3053\u306e\u8a18\u4e8b\u3067\u306f[pthread](http://ja.wikipedia.org/wiki/POSIX%E3%82%B9%E3%83%AC%E3%83%83%E3%83%890)\u3092\u4f7f\u3063\u3066\u3044\u308b\uff0e\n\nLock\u306f`pthread_mutex_lock/pthread_mutex_unlock`\u3067\u30b5\u30f3\u30c9\u30a4\u30c3\u30c1\u3057\u305f\u3089\u3088\u3044\uff0e\n\n```c\npthread_mutex_lock(&mutex);\n\n// \u3053\u3053\u3067\u5171\u6709\u30e1\u30e2\u30ea\u9818\u57df\u306e\u8aad\u307f\u66f8\u304d\u3092\u3059\u308b\n\npthread_mutex_unlock(&mutex);\n```\n\n## \u901a\u77e5\n\n\u6761\u4ef6\u5909\u6570(condition variables)\u3092\u4f7f\u3048\u3070\u5b9f\u73fe\u3067\u304d\u308b\uff0e\u6761\u4ef6\u5909\u6570\u3092\u4f7f\u3046\u3068\uff0c\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u6761\u4ef6\u3092\u9001\u4fe1\u3059\u308b\u307e\u3067\uff0c\u30b9\u30ec\u30c3\u30c9\u306e\u505c\u6b62\u3059\u308b\uff0e\n\n\u4f8b\u3048\u3070\uff0cEdison\u5074\u3067LED\u306eon/off\u3092\u5236\u5fa1\u3057\uff0c\u5b9f\u969b\u306bGPIO\u3092\u64cd\u4f5c\u3059\u308b\u306e\u306fArduino\u306b\u4efb\u305b\u308b\u3068\u3044\u3063\u305f\u5834\u5408\n\n```cpp\n// Arduino\u30b9\u30b1\u30c3\u30c1\n// data\u306fEdison\u5074\u3068\u5171\u6709\u3057\u3066\u3044\u308b\u3068\u3059\u308b\n\nstruct Data {\n  bool led_on;\n  pthread_mutex_t mutex;\n  pthread_cond_t cond;\n};\n\nData *data;\n\n/*** \u4e2d\u7565 ***/\n\nvoid loop() {\n  pthread_mutex_lock(&(data->mutex));\n  pthread_cond_wait(&(data->cond), &(data->mutex));  // \u6761\u4ef6\u304c\u9001\u4fe1\u3055\u308c\u308b\u307e\u3067\u5f85\u3064\n\n  // \u30d5\u30e9\u30b0\u306b\u3088\u308aGPIO\u306e\u96fb\u5727\u5909\u3048\u308b\n  digitalWrite(PIN, data->led_on ? HIGH : LOW);\n\n  pthread_mutex_unlock(&mutex);\n}\n```\n\n```cpp\n// Edison \n// LED\u306eon/off\u306e\u30d5\u30e9\u30b0\u3092\u5909\u3048\u305f\u3042\u3068\uff0c\u901a\u77e5\u3092\u3059\u308b\n\npthread_mutex_lock(&(data->mutex));\n\ndata->led_on = true;\n\npthread_mutex_unlock(&(data->mutex));\npthread_cond_signal(&(data->cond));   // \u6761\u4ef6\u306e\u9001\u4fe1\n```\n\n\n# \u611f\u60f3\n\n- C++11\u306e`std::mutex`\u3084`std::condition_variable`\u4f7f\u3046\u3068\u3082\u3046\u3061\u3087\u3063\u3068\u30b9\u30c3\u30ad\u30ea\u3057\u305d\u3046\n- Arduino\u30b9\u30b1\u30c3\u30c1\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u547c\u3079\u308b\u306a\u3089socket\u3068\u304b\u3082\u8a66\u3057\u3066\u307f\u305f\u3044\uff0e\n", "tags": ["Edison", "Arduino"]}