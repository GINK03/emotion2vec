{"context": "\n\nOneToMany\u3084ManyToMany\u306b\u3064\u3044\u3066\nEntity\u306e\u9805\u76ee\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u305f\u3089\n@OneToMany\nvar list: List<Hoge>?,\n\n\u7d50\u679c\u306f\n\norg.hibernate.AnnotationException: Collection has neither generic type or OneToMany.targetEntity()\n\n\u8a66\u3057\u306b\n@OneToMany(targetEntity=Hoge::class)\nvar list: List<Hoge>?,\n\n\u306b\u3057\u3066\u307f\u305f\u3082\u306e\u306e\n\norg.hibernate.annotations.common.AssertionFailure: Fail to process type argument in a generic declaration. Member : XXX#listType: class sun.reflect.generics.reflectiveObjects.WildcardTypeImpl\n\n\n\u539f\u56e0\nJava\u306ejava.util.List\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306fkotlin.List\u3067\u306f\u306a\u304fkotlin.MutableList\u3067\u3042\u308b\u305f\u3081\u3002\nCalling Java code from Kotlin\n\n\u5bfe\u5fdc\n@OneToMany\nvar list: MutableList<Hoge>?,\n\n\ndata class\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n\nHoge.kt\n@Entity\ndata class Hoge(\n        @javax.persistence.Id\n        @javax.persistence.GeneratedValue\n        var id: Long?=null,\n\n        @NotBlank\nvar test : String?=null\n\n) : Serializable\n\n\n@Test\nfun validateTest() {\n    val hoge= Hoge()\n    val factory = Validation.buildDefaultValidatorFactory()\n    val validator = factory.validator;\n    val validate = validator.validate(hoge)\n    println(validate.size())\n    validate.forEach { println(it) }\n}\n\ntest\u304cnull\u3060\uff01\u3068\u3044\u3046\u691c\u77e5\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n\u539f\u56e0\n@javax.persistence.Entity @kotlin.data public final class Hoge public constructor(id: kotlin.Long? /* = compiled code */, @org.hibernate.validator.constraints.NotBlank test: kotlin.String? /* = compiled code */) : java.io.Serializable {\n    @field:javax.persistence.Id @field:javax.persistence.GeneratedValue public final var id: kotlin.Long? /* compiled code */\n\n    public final var test: kotlin.String? /* compiled code */\n...\n\n\u898b\u306b\u304f\u3044\u3067\u3059\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\n@NotBlank\u306f@Target({ METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER })\u306b\u3064\u304f\u306e\u306b\u5bfe\u3057\u3066@Id\u304c@Target({METHOD, FIELD})\u3068\u3044\u3046\u3053\u3068\u3067@NotBlank\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u3064\u3044\u305fannotation\u3068\u89e3\u91c8\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002\n\n\u5bfe\u5fdc\n\u8907\u6570\u306e\u5834\u6240\u306b\u3064\u304f\u53ef\u80fd\u6027\u306e\u3042\u308bannotation\u306b\u95a2\u3057\u3066\u3069\u3053\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305d\u3046\u3067\u3002\n@Entity\ndata class Hoge(\n        @javax.persistence.Id\n        @javax.persistence.GeneratedValue\n        var id: Long?=null,\n\n        @field:NotBlank\nvar test : String?=null\n\n) : Serializable\n\nAnnotation Use-site Targets\n\nannotation\u5185\u306eannotation\n@JoinTable(name = \"\",\n    joinColumns = arrayOf(@JoinColumn(name = \"\", referencedColumnName = \"\")),\n    inverseJoinColumns = arrayOf(@JoinColumn(name = \"\", referencedColumnName = \"\")))\n\n\nIDE\u3067\u306fExcepting an element\u3068\u5f8c\u308d\u306e\u62ec\u5f27\u306b\u8d64\u3044\u6ce2\u7dda\u304c\u3064\u304f\u3070\u304b\u308a\u3067\u3057\u305f\u304c\n\n\u5bfe\u5fdc\n@JoinTable(name = \"\",\n    joinColumns = arrayOf(JoinColumn(name = \"\", referencedColumnName = \"\")),\n    inverseJoinColumns = arrayOf(JoinColumn(name = \"\", referencedColumnName = \"\")))\n\n\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e@\u30de\u30fc\u30af\u306f\u3044\u3089\u306a\u3044\u305d\u3046\u3067\u3059\u3002\nAnnotations\u306e\u4e2d\u307b\u3069\n\nIf an annotation is used as a parameter of another annotation, its name is not prefixed with the @ character:\n\n\nEntity\u306eId\u3068JPA\u306b\u3066\nRepository\u3092\u7d99\u627f\u3057\u3088\u3046\u3068\u3057\u305f\u969b\u306bRepository<Hoge,Long>\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\n\u539f\u56e0\n\njava.lang.Long\u306a\u3089Serializable\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3066kotlin.Long\u306f\u7d99\u627f\u3057\u3066\u306a\u3044\u305f\u3081\u3001<ID extends Serializable>\u306e\u90e8\u5206\u306bKotlin.Long\u3092\u4f7f\u3048\u306a\u3044\u3002\nNumbers in kotlin is not serializable\nkotlin\u306e1.0\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3042\u305f\u308a\u3067\u30a8\u30e9\u30fc\u306f\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\n## OneToMany\u3084ManyToMany\u306b\u3064\u3044\u3066\nEntity\u306e\u9805\u76ee\u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u305f\u3089\n\n```\n@OneToMany\nvar list: List<Hoge>?,\n```\n\n\u7d50\u679c\u306f\n>org.hibernate.AnnotationException: Collection has neither generic type or OneToMany.targetEntity()\n\n\u8a66\u3057\u306b\n\n```\n@OneToMany(targetEntity=Hoge::class)\nvar list: List<Hoge>?,\n```\n\n\u306b\u3057\u3066\u307f\u305f\u3082\u306e\u306e\n>org.hibernate.annotations.common.AssertionFailure: Fail to process type argument in a generic declaration. Member : XXX#listType: class sun.reflect.generics.reflectiveObjects.WildcardTypeImpl\n\n### \u539f\u56e0\nJava\u306e`java.util.List`\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u306e\u306f`kotlin.List`\u3067\u306f\u306a\u304f`kotlin.MutableList`\u3067\u3042\u308b\u305f\u3081\u3002\n\n[Calling Java code from Kotlin](https://kotlinlang.org/docs/reference/java-interop.html#mapped-types)\n\n### \u5bfe\u5fdc\n\n```\n@OneToMany\nvar list: MutableList<Hoge>?,\n```\n\n\n## data class\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n```kotlin:Hoge.kt\n@Entity\ndata class Hoge(\n        @javax.persistence.Id\n        @javax.persistence.GeneratedValue\n        var id: Long?=null,\n\n        @NotBlank\nvar test : String?=null\n\n) : Serializable\n```\n\n```\n@Test\nfun validateTest() {\n    val hoge= Hoge()\n    val factory = Validation.buildDefaultValidatorFactory()\n    val validator = factory.validator;\n    val validate = validator.validate(hoge)\n    println(validate.size())\n    validate.forEach { println(it) }\n}\n```\n\ntest\u304cnull\u3060\uff01\u3068\u3044\u3046\u691c\u77e5\u306f\u3055\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n### \u539f\u56e0\n```\n@javax.persistence.Entity @kotlin.data public final class Hoge public constructor(id: kotlin.Long? /* = compiled code */, @org.hibernate.validator.constraints.NotBlank test: kotlin.String? /* = compiled code */) : java.io.Serializable {\n    @field:javax.persistence.Id @field:javax.persistence.GeneratedValue public final var id: kotlin.Long? /* compiled code */\n\n    public final var test: kotlin.String? /* compiled code */\n...\n```\n\n\u898b\u306b\u304f\u3044\u3067\u3059\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n`@NotBlank`\u306f`@Target({ METHOD, FIELD, ANNOTATION_TYPE, CONSTRUCTOR, PARAMETER })`\u306b\u3064\u304f\u306e\u306b\u5bfe\u3057\u3066`@Id`\u304c`@Target({METHOD, FIELD})`\u3068\u3044\u3046\u3053\u3068\u3067`@NotBlank`\u306f\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u30fc\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306b\u3064\u3044\u305fannotation\u3068\u89e3\u91c8\u3055\u308c\u305f\u3088\u3046\u3067\u3059\u3002\n\n### \u5bfe\u5fdc\n\n\u8907\u6570\u306e\u5834\u6240\u306b\u3064\u304f\u53ef\u80fd\u6027\u306e\u3042\u308bannotation\u306b\u95a2\u3057\u3066\u3069\u3053\u3092\u5bfe\u8c61\u3068\u3057\u3066\u3044\u308b\u306e\u304b\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u305d\u3046\u3067\u3002\n\n```\n@Entity\ndata class Hoge(\n        @javax.persistence.Id\n        @javax.persistence.GeneratedValue\n        var id: Long?=null,\n\n        @field:NotBlank\nvar test : String?=null\n\n) : Serializable\n```\n\n[Annotation Use-site Targets](https://kotlinlang.org/docs/reference/annotations.html#annotation-use-site-targets)\n\n\n## annotation\u5185\u306eannotation\n\n```\n@JoinTable(name = \"\",\n    joinColumns = arrayOf(@JoinColumn(name = \"\", referencedColumnName = \"\")),\n    inverseJoinColumns = arrayOf(@JoinColumn(name = \"\", referencedColumnName = \"\")))\n\n```\n\nIDE\u3067\u306fExcepting an element\u3068\u5f8c\u308d\u306e\u62ec\u5f27\u306b\u8d64\u3044\u6ce2\u7dda\u304c\u3064\u304f\u3070\u304b\u308a\u3067\u3057\u305f\u304c\n\n### \u5bfe\u5fdc\n\n```\n@JoinTable(name = \"\",\n    joinColumns = arrayOf(JoinColumn(name = \"\", referencedColumnName = \"\")),\n    inverseJoinColumns = arrayOf(JoinColumn(name = \"\", referencedColumnName = \"\")))\n\n```\n\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u5185\u306e@\u30de\u30fc\u30af\u306f\u3044\u3089\u306a\u3044\u305d\u3046\u3067\u3059\u3002\n\n[Annotations](https://kotlinlang.org/docs/reference/annotations.html)\u306e\u4e2d\u307b\u3069\n> If an annotation is used as a parameter of another annotation, its name is not prefixed with the @ character:\n\n## Entity\u306eId\u3068JPA\u306b\u3066\n`Repository`\u3092\u7d99\u627f\u3057\u3088\u3046\u3068\u3057\u305f\u969b\u306b`Repository<Hoge,Long>`\u3068\u3059\u308b\u3068\u30a8\u30e9\u30fc\u3068\u306a\u308b\u3002\n\n### ~~\u539f\u56e0~~\n\n~~java.lang.Long\u306a\u3089Serializable\u3092\u7d99\u627f\u3057\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3066kotlin.Long\u306f\u7d99\u627f\u3057\u3066\u306a\u3044\u305f\u3081\u3001`<ID extends Serializable>`\u306e\u90e8\u5206\u306bKotlin.Long\u3092\u4f7f\u3048\u306a\u3044\u3002~~\n~~[Numbers in kotlin is not serializable](http://stackoverflow.com/questions/26196796/numbers-in-kotlin-is-not-serializable)~~\n\nkotlin\u306e1.0\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3042\u305f\u308a\u3067\u30a8\u30e9\u30fc\u306f\u3067\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n", "tags": ["Java", "Kotlin", "spring-boot"]}