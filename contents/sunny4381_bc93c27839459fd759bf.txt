{"context": " More than 1 year has passed since last update.\n\nSpring Boot \u3067 Enum \u3092 case insensitive (ignore case) \u3067\u30d1\u30fc\u30b9\u3059\u308b\u65b9\u6cd5\nspring \u306e\u65e2\u5b9a\u3067\u306f\u6587\u5b57\u5217\u3092 enum \u306b\u5909\u63db\u3059\u308b\u969b\u3001case sensitive \u3067\u3059\u3002\ncase insensitive \u306b\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\nConversionService \u3068 Converter\n\u6587\u5b57\u5217\u3092 enum \u306b\u5909\u63db\u3059\u308b\u72ec\u81ea\u306e Converter \u3092 ConversionService \u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\nspring \u306e\u65e2\u5b9a\u306e\u52d5\u4f5c\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u6587\u5b57\u5217\u304b\u3089\u5358\u7d14\u306a enum Sex \u306b\u5909\u63db\u3057\u307e\u3059:\n\nSex.java\npublic enum Sex {\n    Male,\n    Female\n}\n\n\nConversionService \u3068 Converter \u3068\u3092\u63d0\u4f9b\u3059\u308b @Configuration \u30af\u30e9\u30b9:\n\nApplicationConfiguration.java\n@Configuration\npublic class ApplicationConfiguration {\n    @Bean\n    public ConversionService conversionService() {\n        DefaultConversionService conversionService = new DefaultConversionService();\n\n        conversionService.addConverter(new Converter<String, Sex>() {\n            public Sex convert(String source) {\n                for (Sex sex : Sex.values()) {\n                    if (source.equalsIgnoreCase(sex.toString())) {\n                        return sex;\n                    }\n                }\n                throw new IllegalArgumentException(\"invalid sex: \" + source);\n            }\n        });\n\n        return conversionService;\n    }\n}\n\n\n\n\u30c6\u30b9\u30c8\n\nApplicationProgram\n@EnableAutoConfiguration\n@EnableConfigurationProperties\n@ComponentScan\npublic class ApplicationProgram {\n    public static void main(String[] args) {\n        ApplicationContext ctx = SpringApplication.run(ApplicationProgram.class, args);\n        Runtime.getRuntime().exit(SpringApplication.exit(ctx));\n    }\n}\n\n\n\nApplicationOptions\n@Component\n@ConfigurationProperties\npublic class ApplicationOptions {\n    private Sex sex;\n\n    public Sex getSex() {\n        return this.sex;\n    }\n\n    public void setSex(Sex sex) {\n        this.sex = sex;\n    }\n\n    @PostConstruct\n    public void init() {\n        System.out.println(\"sex=\" + this.getSex());\n    }\n}\n\n\n\nApplicationProgramTest\npublic class ApplicationProgramTest {\n    @Test\n    public void testMain() {\n        ApplicationProgram.main(new String[] { \"--sex=male\" });\n    }\n}\n\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u306b sex=Mail \u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\u4ee5\u4e0a\u3002\n# Spring Boot \u3067 Enum \u3092 case insensitive (ignore case) \u3067\u30d1\u30fc\u30b9\u3059\u308b\u65b9\u6cd5\n\nspring \u306e\u65e2\u5b9a\u3067\u306f\u6587\u5b57\u5217\u3092 enum \u306b\u5909\u63db\u3059\u308b\u969b\u3001case sensitive \u3067\u3059\u3002\ncase insensitive \u306b\u3059\u308b\u65b9\u6cd5\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n## ConversionService \u3068 Converter\n\n\u6587\u5b57\u5217\u3092 enum \u306b\u5909\u63db\u3059\u308b\u72ec\u81ea\u306e Converter \u3092 ConversionService \u306b\u7d44\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\nspring \u306e\u65e2\u5b9a\u306e\u52d5\u4f5c\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u6587\u5b57\u5217\u304b\u3089\u5358\u7d14\u306a enum `Sex` \u306b\u5909\u63db\u3057\u307e\u3059:\n\n```java:Sex.java\npublic enum Sex {\n\tMale,\n\tFemale\n}\n```\n\nConversionService \u3068 Converter \u3068\u3092\u63d0\u4f9b\u3059\u308b `@Configuration` \u30af\u30e9\u30b9:\n\n```java:ApplicationConfiguration.java\n@Configuration\npublic class ApplicationConfiguration {\n\t@Bean\n\tpublic ConversionService conversionService() {\n\t\tDefaultConversionService conversionService = new DefaultConversionService();\n\t\t\n\t\tconversionService.addConverter(new Converter<String, Sex>() {\n\t\t\tpublic Sex convert(String source) {\n\t\t\t\tfor (Sex sex : Sex.values()) {\n\t\t\t\t\tif (source.equalsIgnoreCase(sex.toString())) {\n\t\t\t\t\t\treturn sex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthrow new IllegalArgumentException(\"invalid sex: \" + source);\n\t\t\t}\n\t\t});\n\n\t\treturn conversionService;\n\t}\n}\n```\n\n\n## \u30c6\u30b9\u30c8\n\n```java:ApplicationProgram\n@EnableAutoConfiguration\n@EnableConfigurationProperties\n@ComponentScan\npublic class ApplicationProgram {\n\tpublic static void main(String[] args) {\n\t\tApplicationContext ctx = SpringApplication.run(ApplicationProgram.class, args);\n\t\tRuntime.getRuntime().exit(SpringApplication.exit(ctx));\n\t}\n}\n```\n\n```java:ApplicationOptions\n@Component\n@ConfigurationProperties\npublic class ApplicationOptions {\n\tprivate Sex sex;\n\t\n\tpublic Sex getSex() {\n\t\treturn this.sex;\n\t}\n\t\n\tpublic void setSex(Sex sex) {\n\t\tthis.sex = sex;\n\t}\n\t\n\t@PostConstruct\n\tpublic void init() {\n\t\tSystem.out.println(\"sex=\" + this.getSex());\n\t}\n}\n```\n\n```java:ApplicationProgramTest\npublic class ApplicationProgramTest {\n\t@Test\n\tpublic void testMain() {\n\t\tApplicationProgram.main(new String[] { \"--sex=male\" });\n\t}\n}\n```\n\n\u30b3\u30f3\u30bd\u30fc\u30eb\u306b `sex=Mail` \u3068\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n\n\u4ee5\u4e0a\u3002\n", "tags": ["Java", "spring", "spring-boot1.0.1.RELEASE"]}