{"context": "\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n\u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n\u30b9\u30da\u30a2\u3092\u3068\u3063\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n\u3042\u308b\u30b7\u30ca\u30ea\u30aa\u3067\u30b9\u30da\u30a2\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n\n1\u6295\u76ee: 3\n2\u6295\u76ee: 7\n3\u6295\u76ee: 4\n\u6b8b\u308a17\u6295: \u3059\u3079\u3066\u30ac\u30bf\u30fc\n\n\n\n\u8a0818\u70b9\u304c\u8a08\u7b97\u3067\u304d\u3066\u3044\u308c\u3070\u3044\u3044\u3002\n\n\u30b9\u30c8\u30e9\u30a4\u30af\u306f\u8003\u616e\u305b\u305a\u306b\u30b9\u30da\u30a2\u306e\u8a08\u7b97\u304c\u3067\u304d\u308b\u304b\n\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * \u30b9\u30da\u30a2\u306e\u5834\u5408\n     *\n     * 1\u6295\u76ee: 3\n     * 2\u6295\u76ee: 7\n     * 3\u6295\u76ee: 4\n     * \u6b8b\u308a17\u6295: \u3059\u3079\u3066\u30ac\u30bf\u30fc\n     */\n    public function testSpareCase()\n    {\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(7);\n        /** \u2191 \u30b9\u30da\u30a2 **/\n\n        $this->BowlingGame->recordShot(4);\n\n        $this->loopRecordShot(17, 0);\n\n        $this->assertEquals(18, $this->BowlingGame->calculateScore());\n    }\n\n\u3000\u3000 /**\n\u3000\u3000  * @param  int    $loop [description]\n\u3000\u3000  * @param  int    $pin  [description]\n\u3000\u3000  * @return void       [description]\n\u3000\u3000  */\n    private function loopRecordShot(int $loop, int $pin)\n    {\n        for ($i = 0; $i < $loop; $i++) {\n            $this->BowlingGame->recordShot($pin);\n        }\n    }\n\n\n\u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\u30b9\u30da\u30a2\u6642\u306e\u30ed\u30b8\u30c3\u30af\u304c\u306a\u3044\u305f\u3081\u5931\u6557\u3002\u3002\n1) BowlingGameTest::testSpareCase\nFailed asserting that 14 matches expected 18.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:61\n\nFAILURES!\n\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(\u6700\u5c0f\u306e\u69cb\u6210\u3067)\n\u2460 \u30b9\u30da\u30a2\u306e\u72b6\u614b\u304b\u5224\u65ad\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308b(\u30d5\u30e9\u30b0\u3092\u8ffd\u52a0)\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var bool **/\n    private $isSpare;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->score === 10) {\n            $this->isSpare = true;\n        }\n\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n\n\u2461 \u5225\u30c6\u30b9\u30c8\u3067\u5931\u6557\n\u3059\u3079\u30661\u30d4\u30f3\u5012\u3057\u305f\u3068\u304d\u3082\u300110\u30d4\u30f3\u306e\u6642\u70b9\u3067\u30b9\u30da\u30a2\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3057\u307e\u3046\nThere was 1 failure:\n\n1) BowlingGameTest::testKnockedDownAllOne\nFailed asserting that 21 matches expected 20.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:37\n\nFAILURES!\nTests: 3, Assertions: 3, Failures: 1.\n\n\u2462 \u6700\u5c0f\u69cb\u6210\u3067\u901a\u308b\u51e6\u7406\u3092\u66f8\u304f\n\u524d\u56de\u5012\u3057\u305f\u30d4\u30f3\u3068\u4eca\u56de\u5012\u3057\u305f\u30d4\u30f3\u306e\u5408\u8a08\u304c10\u306a\u3089\u3070\u30b9\u30da\u30a2\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n    /** @var int **/\n    private $lastPin;\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n\n\u2463\u30b9\u30da\u30a2\u5224\u65ad\u306e\u30ed\u30b8\u30c3\u30af\u3092\u53b3\u5bc6\u306b\u3057\u3066\u3044\u304f\n    /**\n     * \u76f4\u524d\u306e\u6295\u7403\u3068\u306e\u5408\u8a08\u304c10\u3060\u3063\u305f\u5834\u5408\u306b\n     * \u30b9\u30da\u30a2\u3067\u306f\u306a\u3044\u3068\u5224\u65ad\u3057\u3066\u3044\u308b\u304b\n     *\n     * 1\u6295\u76ee: 2\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 \u30b9\u30da\u30a2?\n     * 4\u6295\u76ee: 1\n     *\n     * @return [type] [description]\n     */\n    public function testSpareCaseAtDifferentFlame()\n    {\n        $this->BowlingGame->recordShot(2);\n        $this->BowlingGame->recordShot(5);\n        $this->BowlingGame->recordShot(5);\n        $this->BowlingGame->recordShot(8);\n\n        $this->loopRecordShot(16, 0);\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n\n\u2464\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u5b9f\u88c5\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u6700\u5c0f\u9650\u306e\u69cb\u6210\u306a\u306e\u3067\u30012\u6295\u76ee\u3057\u304b\u30b9\u30da\u30a2\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n\n\n\u611f\u60f3\n\u3042\u308b\u7a0b\u5ea6\u66f8\u3051\u308b\u4eba\u306b\u3068\u3063\u3066\u3001\u3053\u306e\u6700\u5c0f\u9650\u306e\u5b9f\u88c5\u3067\u9032\u3093\u3067\u3044\u304f\u306e\u306f\n\u307e\u3069\u308d\u3063\u3053\u3057\u3044\u306e\u304b\u306a\u3041\u3002\u3002\n\u7279\u306b\u30b9\u30da\u30a2\u306e\u5224\u5b9a\u3068\u304b2\u6295\u76ee\u3057\u304b\u3057\u3066\u306a\u3044\u3057\u3002\n\u305f\u3060\u3001\u3053\u3053\u3067\u8003\u3048\u3059\u304e\u308b\u3068\u5b9f\u88c5\u304c\u9032\u307e\u306a\u3044\u3002\n\u8003\u3048\u629c\u3044\u3066\u5148\u307e\u3067\u5b9f\u88c5\u3067\u304d\u305f\u3068\u3057\u3066\u3001\u305d\u306e\u30ed\u30b8\u30c3\u30af\u304c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u51fa\u623b\u308a\u306e\u30ed\u30b9\u304c\u5927\u304d\u3044\u3002\n\u305d\u308c\u3092\u5c0f\u3055\u304f\u9032\u3080\u3053\u3068\u3067\u56de\u907f\u3067\u304d\u308b\u306e\u306f\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u6b21\u56de\u306f\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5b9f\u88c5\n\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n# \u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## \u30b9\u30da\u30a2\u3092\u3068\u3063\u305f\u3068\u304d\u306e\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\n\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n- \u3042\u308b\u30b7\u30ca\u30ea\u30aa\u3067\u30b9\u30da\u30a2\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n  - 1\u6295\u76ee: 3\n  - 2\u6295\u76ee: 7\n  - 3\u6295\u76ee: 4\n  - \u6b8b\u308a17\u6295: \u3059\u3079\u3066\u30ac\u30bf\u30fc\n\n\u8a0818\u70b9\u304c\u8a08\u7b97\u3067\u304d\u3066\u3044\u308c\u3070\u3044\u3044\u3002\n\n- \u30b9\u30c8\u30e9\u30a4\u30af\u306f\u8003\u616e\u305b\u305a\u306b\u30b9\u30da\u30a2\u306e\u8a08\u7b97\u304c\u3067\u304d\u308b\u304b\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * \u30b9\u30da\u30a2\u306e\u5834\u5408\n     *\n     * 1\u6295\u76ee: 3\n     * 2\u6295\u76ee: 7\n     * 3\u6295\u76ee: 4\n     * \u6b8b\u308a17\u6295: \u3059\u3079\u3066\u30ac\u30bf\u30fc\n     */\n    public function testSpareCase()\n    {\n        $this->BowlingGame->recordShot(3);\n        $this->BowlingGame->recordShot(7);\n        /** \u2191 \u30b9\u30da\u30a2 **/\n\n        $this->BowlingGame->recordShot(4);\n\n        $this->loopRecordShot(17, 0);\n\n        $this->assertEquals(18, $this->BowlingGame->calculateScore());\n    }\n\n\u3000\u3000 /**\n\u3000\u3000  * @param  int    $loop [description]\n\u3000\u3000  * @param  int    $pin  [description]\n\u3000\u3000  * @return void       [description]\n\u3000\u3000  */\n    private function loopRecordShot(int $loop, int $pin)\n    {\n        for ($i = 0; $i < $loop; $i++) {\n            $this->BowlingGame->recordShot($pin);\n        }\n    }\n```\n\n### \u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\n\u30b9\u30da\u30a2\u6642\u306e\u30ed\u30b8\u30c3\u30af\u304c\u306a\u3044\u305f\u3081\u5931\u6557\u3002\u3002\n\n```bash\n1) BowlingGameTest::testSpareCase\nFailed asserting that 14 matches expected 18.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:61\n\nFAILURES!\n```\n\n### \u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(__\u6700\u5c0f\u306e\u69cb\u6210\u3067__)\n\n\u2460 \u30b9\u30da\u30a2\u306e\u72b6\u614b\u304b\u5224\u65ad\u3059\u308b\u30ed\u30b8\u30c3\u30af\u3092\u4f5c\u308b(\u30d5\u30e9\u30b0\u3092\u8ffd\u52a0)\n\n```php\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var bool **/\n    private $isSpare;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->score === 10) {\n            $this->isSpare = true;\n        }\n\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n```\n\n\u2461 \u5225\u30c6\u30b9\u30c8\u3067\u5931\u6557\n\u3059\u3079\u30661\u30d4\u30f3\u5012\u3057\u305f\u3068\u304d\u3082\u300110\u30d4\u30f3\u306e\u6642\u70b9\u3067\u30b9\u30da\u30a2\u30d5\u30e9\u30b0\u304c\u7acb\u3063\u3066\u3057\u307e\u3046\n\n```bash\nThere was 1 failure:\n\n1) BowlingGameTest::testKnockedDownAllOne\nFailed asserting that 21 matches expected 20.\n\n/var/www/html/test/UnitTest/tests/BowlingGameTest.php:37\n\nFAILURES!\nTests: 3, Assertions: 3, Failures: 1.\n```\n\n\u2462 \u6700\u5c0f\u69cb\u6210\u3067\u901a\u308b\u51e6\u7406\u3092\u66f8\u304f\n\u524d\u56de\u5012\u3057\u305f\u30d4\u30f3\u3068\u4eca\u56de\u5012\u3057\u305f\u30d4\u30f3\u306e\u5408\u8a08\u304c10\u306a\u3089\u3070\u30b9\u30da\u30a2\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n\n```php\n    /** @var int **/\n    private $lastPin;\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n```\n\n\u2463\u30b9\u30da\u30a2\u5224\u65ad\u306e\u30ed\u30b8\u30c3\u30af\u3092\u53b3\u5bc6\u306b\u3057\u3066\u3044\u304f\n\n```php\n    /**\n     * \u76f4\u524d\u306e\u6295\u7403\u3068\u306e\u5408\u8a08\u304c10\u3060\u3063\u305f\u5834\u5408\u306b\n     * \u30b9\u30da\u30a2\u3067\u306f\u306a\u3044\u3068\u5224\u65ad\u3057\u3066\u3044\u308b\u304b\n     *\n     * 1\u6295\u76ee: 2\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 \u30b9\u30da\u30a2?\n     * 4\u6295\u76ee: 1\n     *\n     * @return [type] [description]\n     */\n    public function testSpareCaseAtDifferentFlame()\n    {\n        $this->BowlingGame->recordShot(2);\n        $this->BowlingGame->recordShot(5);\n        $this->BowlingGame->recordShot(5);\n        $this->BowlingGame->recordShot(8);\n\n        $this->loopRecordShot(16, 0);\n\n        $this->assertEquals(20, $this->BowlingGame->calculateScore());\n    }\n```\n\n\u2464\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u5b9f\u88c5\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u6700\u5c0f\u9650\u306e\u69cb\u6210\u306a\u306e\u3067\u30012\u6295\u76ee\u3057\u304b\u30b9\u30da\u30a2\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\n\n```php\n<?php\n\nnamespace App;\n\nclass BowlingGame\n{\n    /** @var int **/\n    private $score;\n\n    /** @var int **/\n    private $lastPin;\n\n    /** @var bool **/\n    private $isSpare;\n\n    /** @var int **/\n    private $shotNo;\n\n    public function __construct()\n    {\n        $this->score = 0;\n        $this->isSpare = false;\n        $this->lastPin = 0;\n    }\n\n    /**\n     * @param  int    $pin [description]\n     * @return [type]      [description]\n     */\n    public function recordShot(int $pin)\n    {\n        ++$this->shotNo;\n\n        $this->score += $pin;\n\n        /**\n         * \u30b9\u30da\u30a2\u306e\u5834\u5408\u3001\u3082\u3046\u4e00\u5ea6\u30d4\u30f3\u306e\u6570\u3092\u8db3\u3057\u3066\n         * \u30d5\u30e9\u30b0\u3092\u4e0b\u3052\u308b\n         */\n        if ($this->isSpare) {\n            $this->score += $pin;\n            $this->isSpare = false;\n        }\n\n        /**\n         * 2\u6295\u76ee\u306e\u3068\u304d\u306b\u30b9\u30da\u30a2\u304b\u3069\u3046\u304b\u5224\u5b9a\n         * 10\u70b9\u3068\u3063\u305f\u3089\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n         */\n        if ($this->shotNo === 2 && $pin + $this->lastPin === 10) {\n            $this->isSpare = true;\n        }\n\n        $this->lastPin = $pin;\n    }\n\n    /**\n     * @return int [description]\n     */\n    public function calculateScore()\n    {\n        return $this->score;\n    }\n}\n\n```\n\n\n## \u611f\u60f3\n\n\u3042\u308b\u7a0b\u5ea6\u66f8\u3051\u308b\u4eba\u306b\u3068\u3063\u3066\u3001\u3053\u306e\u6700\u5c0f\u9650\u306e\u5b9f\u88c5\u3067\u9032\u3093\u3067\u3044\u304f\u306e\u306f\n\u307e\u3069\u308d\u3063\u3053\u3057\u3044\u306e\u304b\u306a\u3041\u3002\u3002\n\u7279\u306b\u30b9\u30da\u30a2\u306e\u5224\u5b9a\u3068\u304b2\u6295\u76ee\u3057\u304b\u3057\u3066\u306a\u3044\u3057\u3002\n\u305f\u3060\u3001\u3053\u3053\u3067\u8003\u3048\u3059\u304e\u308b\u3068\u5b9f\u88c5\u304c\u9032\u307e\u306a\u3044\u3002\n\u8003\u3048\u629c\u3044\u3066\u5148\u307e\u3067\u5b9f\u88c5\u3067\u304d\u305f\u3068\u3057\u3066\u3001\u305d\u306e\u30ed\u30b8\u30c3\u30af\u304c\u9593\u9055\u3063\u3066\u3044\u305f\u3089\u51fa\u623b\u308a\u306e\u30ed\u30b9\u304c\u5927\u304d\u3044\u3002\n\u305d\u308c\u3092\u5c0f\u3055\u304f\u9032\u3080\u3053\u3068\u3067\u56de\u907f\u3067\u304d\u308b\u306e\u306f\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u6b21\u56de\u306f\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u5b9f\u88c5\n\n\n", "tags": ["PHP", "PHPUnit"]}