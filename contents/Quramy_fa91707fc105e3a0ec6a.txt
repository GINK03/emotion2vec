{"context": " More than 1 year has passed since last update.\u3053\u306eFalcor\u5165\u9580\u30b7\u30ea\u30fc\u30ba\u30824\u56de\u76ee\u3067\u3059\u3002\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001\u7b2c2\u56de\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306eAPI\u5229\u7528\u65b9\u6cd5\u3001\u7b2c3\u56de\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u305d\u308c\u305e\u308c\u89e3\u8aac\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\u3061\u306a\u307f\u306b\u904e\u53bb\u56de\u306f\u3053\u3061\u3089:\n\nFalcor\u5165\u9580 1\u65e5\u76ee Falcor\u3068\u306f\u4f55\u8005\u304b\nFalcor\u5165\u9580 2\u65e5\u76ee Falcor\u306eJSON Graph\u306b\u89e6\u308c\u3066\u307f\u308b\nFalcor\u5165\u9580 3\u65e5\u76ee Falcor Router\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n\u4eca\u307e\u3067\u4f55\u5ea6\u304b\u66f8\u3044\u3066\u304d\u305f\u901a\u308a\u3001Falcor\u306f\u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u304b\u3089\u52b9\u7387\u7684\u306b\u5024\u3092\u53d6\u5f97\u3057\u3066View\u306b\u53d7\u3051\u6e21\u3059\u3053\u3068\u300d\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u305fMiddleware\u3067\u3059\u3002\n\u524d\u56de\u307e\u3067\u306f\u3001\u8a71\u306e\u7126\u70b9\u3092Falcor\u81ea\u4f53\u306e\u4f7f\u3044\u65b9\u306b\u7d5e\u308b\u305f\u3081\u306b\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u3070\u3063\u304b\u308a\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u672c\u6765Falcor\u306f\u753b\u9762\u7cfb\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3063\u3066\u3053\u305d\u610f\u5473\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3001\u7686\u5927\u597d\u304dReact\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u524d\u63d0\n\u6700\u521d\u306b\u4f55\u70b9\u304b\u65ad\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u524d\u56de\u307e\u3067\u306f\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u306bBabel\u3092\u9078\u629e\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u3084\u3063\u3071\u308aTypeScript\u306e\u65b9\u304c\u597d\u304d\u306a\u306e\u3067\u4eca\u65e5\u306f.ts, .tsx\u3067\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u307e\u3059\u3002\u3068\u306f\u3044\u3048\u3001\u7279\u306bTypeScript\u306a\u3089\u3067\u306f\u306e\u8a71\u3092\u3059\u308b\u3064\u3082\u308a\u3082\u306a\u3044\u3067\u3059\u306e\u3067\u3001ECMA Script 6th\u3068ReactJSX\u304c\u8aad\u3081\u308c\u3070\u554f\u984c\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092Quramy/react-falcor-demo\u306bup\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u7b49\u306f\u3053\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306eREADME\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u672c\u6587\u4e2d\u3067\u306e\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u3002\n\u524d\u56de\u306f\u8272\u6c17\u51fa\u3057\u3066\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u8a71\u3092\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u9762\u5012\u306a\u306e\u3067\u7b2c2\u56de\u306e\u6642\u3068\u540c\u69d8\u3001cache\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30aa\u30f3\u30ea\u30fc\u3067\u52d5\u304b\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307e\u3059\u3002\n\n\nFalcor.Model\u306e\u5909\u66f4\u691c\u77e5\nReact\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001Flux\u306e\u3088\u3046\u306bPub/Sub\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u5373\u3057\u305fMVC\u3067\u306f\u3001View\u304cModel\u306e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u3092\u8cfc\u8aad\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u304c\u738b\u9053\u3067\u3059\u3002\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u304a\u3044\u3066\u3082\u3001React\u306eComponent(View)\u304cFalcor.Model\u3092\u5909\u66f4\u3092\u8cfc\u8aad\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\u3067\u8a00\u3046\u3068\u3001[Model] -> [View]\u3067\u3059\u306d\u3002\nFalcor\u306fModel\u304c\u5185\u5305\u3059\u308bJSON Graph\u306e\u72b6\u614b\u306b\u5909\u66f4\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u767a\u706b\u3059\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Model\u306e\u4f5c\u6210\u6642\u306b\u4ed5\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\nvar model = new Falcor.Model({\n  onChange: () => {\n    console.log('\u4e2d\u8eab\u5909\u308f\u3063\u305f\u3088\uff01')\n  },\n  /* \u7565 */\n});\n\n\u3053\u3044\u3064\u3092\u5229\u7528\u3057\u3066\u3001Falcor\u306eModel\u3092\u62e1\u5f35\u3057\u3066\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\nlib/src/store.ts\nimport {EventEmitter} from 'events';\nimport * as Falcor from 'falcor';\n\nexport interface StoreCreateParam {\n    [key: string]: any;\n    onChange?: Function;\n}\n\nexport default class Store extends Falcor.Model {\n    private emitter: EventEmitter;\n    constructor(option: StoreCreateParam) {\n        var opt: StoreCreateParam = option;\n        var originalCallback = option.onChange || (() => {});\n        opt.onChange = () => {\n            this.emitter && this.emitter.emit('change');\n        };\n        super(opt);\n        this.emitter = new EventEmitter();\n    }\n\n    static createFromModel(rawModel: Falcor.Model) {\n        return new Store({\n            source: rawModel.asDataSource()\n        });\n    }\n\n    static createFromCache(cache: any) {\n        return new Store({\n            cache\n        });\n    }\n\n    addChangeListener(query: string, onSuccess: (json: any) => any) {\n        var handler = () => {\n            this.get(query).then(res => {\n                if(res) {\n                    onSuccess(res);\n                }\n            });\n        };\n        this.emitter.on('change', handler);\n        var off = () => {\n            this.emitter.removeListener('change', handler);\n        };\n        return off;\n    }\n}\n\n\n\u3053\u3053\u3067\u4f5c\u6210\u3057\u305fStore\u306f\u3001Falcor.Model\u3092\u7d99\u627f\u3057\u305fClass\u3067\u3059\u3002\n\u307e\u305f\u3001Model\u5909\u66f4\u6642\u306baddChangeListener \u306b\u3066\u767b\u9332\u3057\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u767a\u706b\u3059\u308b\u3088\u3046\u306bNode.js\u306eEventEmitter\u3092\u4ed5\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\nView\u306e\u4f5c\u6210\n\u4e0a\u8a18\u3067\u7528\u610f\u3057\u305fStore \u3092\u4f7f\u3044\u3001\u65e9\u901fReact\u306eComponent\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u305f\u3060\u306eHello world\u3067\u3059\u3002\n\napp.tsx\nimport * as React from 'react';\nimport * as Falcor from 'falcor';\nimport {render} from 'react-dom';\n\nimport {Store} from './lib/built/store'   //\u4e0a\u3067\u4f5c\u3063\u305fStore class\n\n// Falcor\u306eModel\u304b\u3089Store\u3092\u4f5c\u6210\nconst model = Store.createFromModel(new Falcor.Model({\n    cache: {\n        message: 'Hello, World'\n    }\n}));\n\nclass App extends React.Component<{}, {message: string}> {\n\n    state = {message: ''};                  // state\u306e\u521d\u671f\u5316\n    off: () => void;\n\n    componentDidMount() {\n        var handler = () => {\n            this.off = model.get('message').then(res => {\n                this.setState({message: res.json.message});\n            });\n        });\n        model.addChangeListener(handler);   // \u5024\u306e\u5909\u66f4\u691c\u77e5\n        handler();                          // \u521d\u56de\u306e\u5024\u53d6\u5f97\n    }\n    componentWillUnmount() {\n        this.off && this.off();             // \u8cfc\u8aad\u89e3\u9664\n    }\n    render() {\n        return (\n            <div>\n                <h1>{this.state.message}</h1>\n            </div>\n        );\n    }\n}\n\nrender(<App />, document.getElementById('app'));\n\n\nHello world\u306a\u306e\u3067\u3053\u3053\u307e\u3067\u306e\u6a5f\u80fd\u306f\u672c\u6765\u4e0d\u8981\u306a\u306e\u3067\u3059\u304c\u3001React\u306eLifecycle\u30d5\u30c3\u30af\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n\ncomponentDidMount \u3067\u5148\u307b\u3069\u306eStore\u306b\u5bfe\u3059\u308b\u5909\u66f4\u691c\u77e5\u306e\u8cfc\u8aad\u3068\u521d\u56de\u306e\u5024\u53d6\u5f97\u3092\u5b9f\u884c\n\ncomponentWillUnmount \u3067\u8cfc\u8aad\u306e\u89e3\u9664\n\n\n\u3082\u3046\u5c11\u3057\u306a\u3093\u3068\u304b\u306a\u3089\u3093\u3082\u306e\u304b\n\u3068\u308a\u3042\u3048\u305aView\u304b\u3089Model\u306e\u5024\u3092Get\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u5e7e\u3064\u304b\u306e\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n\ncomponentDidMount, componentWillUnmount\u3067\u306e\u8cfc\u8aad\u30fb\u8cfc\u8aad\u89e3\u9664\u306f\u5b9a\u5f62\u6587\u306a\u306e\u306bModel\u3068View\u3092\u7d50\u5408\u3059\u308b\u5ea6\u306b\u6bce\u56de\u66f8\u304f\u306e\u306f\u99ac\u9e7f\u3052\u3066\u3044\u308b\n\u3068\u304f\u306bcomponentDidMount\u3067\u306f\u3001\u521d\u56de\u306e\u5024\u53d6\u5f97\u3068\u5024\u306e\u8cfc\u8aad\u3092\u4e21\u65b9\u66f8\u3044\u3066\u3084\u308b\u5fc5\u8981\u3082\u3042\u308b\n\u5024\u306e\u53d6\u5f97\u51e6\u7406(Server\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u3092\u542b\u3080)\u3068\u8868\u793a\u51e6\u7406\u304c\u5bc6\u306b\u7d50\u5408\u3057\u3066\u3044\u308b\n\n3.\u306b\u3064\u3044\u3066\u306f\u3001react-redux\u7b49\u306e\u30e1\u30b8\u30e3\u30fc\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u304a\u3044\u3066\u3082\u3001Component\u306fprops\u3092\u4ecb\u3057\u3066Store(Model)\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u8868\u793a\u3092\u3069\u306e\u3088\u3046\u306b\u5206\u89e3\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\nRelay\u3092\u8997\u3044\u3066\u307f\u305f\n\u4eca\u56de\u306e\u3088\u3046\u306bReact\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u6587\u8108\u306b\u304a\u3044\u3066\u3001Falcor\u3068\u6bd4\u8f03\u3055\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7b46\u982d\u304cFacebook\u304c\u958b\u767a\u3057\u305fRelay \u3067\u3059\u3002\nFalcor\u304cJSON Graph\u306epath\u3067\u554f\u3044\u5408\u308f\u305b\u308b\u306e\u306b\u5bfe\u3057\u3001Relay\u3067\u306fGraphQL\u3068\u3044\u3046\u72ec\u81ea\u306e\u30af\u30a8\u30ea\u8a00\u8a9e\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u304c\u3001\u53cc\u65b9\u3068\u3082\u89e3\u6c7a\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u554f\u984c\u306f\u540c\u3058\u3067\u3059\u3002\nRelay\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nclass Tea extends React.Component {\n  render() {\n    var {name, steepingTime} = this.props.tea;\n    return (\n      <li key={name}>\n        {name} (<em>{steepingTime} min</em>)\n      </li>\n    );\n  }\n}\nTeaContainer = Relay.createContainer(Tea, {\n  fragments: {\n    tea: () => Relay.QL`\n      fragment on Tea {\n        name,\n        steepingTime,\n      }\n    `,\n  },\n});\n\nRelay, \u683c\u597d\u826f\u3044\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3002\n\u4f55\u304c\u826f\u3044\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089Tea \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5358\u54c1\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\nReact.createElement(<Tea name={'JAPANESE GREEN'} steepingTime={3} />)\n\n(\u5927\u5206\u3069\u3046\u3067\u3082\u826f\u3044\u8a71\u3067\u3059\u304c\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092Relay\u306e\u30b5\u30a4\u30c8\u3067\u8aad\u3093\u3067steepingTime\u3068\u3044\u3046\u8a00\u8449\u306e\u610f\u5473\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\u50d5\u306f\u82f1\u56fd\u7d33\u58eb\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u4e00\u751f\u3053\u3093\u306a\u5358\u8a9e\u4f7f\u308f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3051\u3069)\n\nComponent class\u304b\u3089Component class\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u3042\u308c\u3070\u3088\u3044\n\u9591\u8a71\u4f11\u984c\u3002\nRelay\u3084Redux\u3092\u8997\u3044\u305f\u611f\u3058\u3001\u300cReact Component Class\u3092\u5f15\u6570\u306b\u53d7\u3051\u53d6\u3063\u3066\u3001\u30c7\u30b3\u3063\u305fReact Component Class\u3092\u52d5\u7684\u306b\u8fd4\u3059\u95a2\u6570\u300d\u3092\u4f5c\u308c\u3070\u3001\u4f55\u304b\u3044\u3044\u611f\u3058\u306e\u30e2\u30ce\u304c\u51fa\u6765\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u8a33\u3067\u3059\u3002\n\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5148\u306b\u5229\u7528\u5074\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u5148\u8ff0\u306eHello world\u306eJSX\u3092\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f:\n\napp.tsx(\u6539)\nimport * as React from 'react';\nimport {render} from 'react-dom';\nimport {Model} from 'falcor';\n\nimport {connectModel, Store} from '../../../lib/built';\n\nconst store = Store.createFromModel(new Model({\n    cache: {\n        message: 'Hello, world'\n    }\n}));\n\nclass App extends React.Component<{message: string}, {}> {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.message}</h1>\n            </div>\n        );\n    }\n}\n\nconst AppContainer = connectModel(App, store, {\n    message: 'message'\n});\n\nrender(<AppContainer />, document.getElementById('app'));\n\n\n\n\nApp\u3068\u3044\u3046React Component\u306fProps\u306e\u307f\u3067render\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n\nconnectModel \u3068\u3044\u3046\u95a2\u6570(\u5f8c\u8ff0)\u306b\u3066\u300cFalcor\u306eModel\u304b\u3089message\u3068\u3044\u3046JSON Graph\u306e\u30d1\u30b9\u3092\u5f15\u3044\u3066\u3001\u540c\u540d\u306eprops\u306b\u5024\u3092\u6ce8\u5165\u3057\u3066\u306d\u300d\u3068\u3044\u3046\u5185\u5bb9\u3092\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\n\n\u3055\u3066\u3001\u305d\u3093\u306aconnectModel\u306e\u5b9f\u4f53\u30b3\u30fc\u30c9\u304c\u4e0b\u8a18\u3067\u3059\u3002\u7d50\u69cb\u9577\u3044\u3067\u3059\u306e\u3067\u3001\u6d41\u3057\u8aad\u3080\u7a0b\u5ea6\u3067\u7d50\u69cb\u3067\u3059\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u7b87\u6240\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u4ed8\u8a18\u3057\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u307e\u3067\u3002\n\nlib/src/connectModel.ts\nimport * as React from 'react';\nimport Store from './store';\nimport {toArray} from './util';\n\nexport interface QueryHolder {\n    query: string;\n    toArray?: boolean;\n    handler?: (res: any) => any;\n}\n\nexport interface ModelToProps<T> {\n    [propName: string]: (string | QueryHolder | ((externalProps: T) => QueryHolder));\n}\n\nfunction parse(modelToProps?: ModelToProps<any>) {\n    return Object.keys(modelToProps).map(stateKey => {\n        var queryObj = modelToProps[stateKey];\n        var query: string, toArray = false;\n        var fn: Function;\n        if(typeof queryObj === 'string') {\n            fn = (props: any) => {\n                return {\n                    query: queryObj,\n                    toArray: false,\n                }\n            };\n        }else if(typeof queryObj === 'object') {\n            var obj = queryObj as QueryHolder;\n            fn = (props: any) => {\n                return {\n                    query: obj.query,\n                    toArray: obj.toArray,\n                    handler: obj.handler\n                };\n            };\n        }else if(typeof queryObj === 'function') {\n            fn = queryObj as ((props: any) => QueryHolder);\n        }\n        return {\n            stateKey,\n            queryFn: fn as any\n        };\n    });\n}\n\ninterface ContainerState {\n    $loading: boolean;\n    [key: string]: any;\n}\n\n// Container\u306ebase class\nclass Container extends React.Component<{[propKey: string]: any}, ContainerState> {\n\n    state = { $loading: true };\n\n    private queries: {stateKey: string; queryFn: (props: any) => QueryHolder}[];\n    private unregisters: (() => void)[] = [];\n\n    constructor(\n        private model: Store,\n        modelToProps: ModelToProps<any>,            // Container\u306b\u6ce8\u5165\u3059\u308bFalcor\u306e\u30af\u30a8\u30ea\n        private delegate: (typeof React.Component)  // \u30e9\u30c3\u30d7\u5bfe\u8c61\u306eReact Component\n    ){\n        super();\n        this.queries = parse(modelToProps);\n    }\n\n    componentDidMount() {\n        this.queries.forEach(q => {\n            var stateKey = q.stateKey;\n            var queryHolder = q.queryFn(this.props);\n\n            // Falcor.Model#get(...) \u306b\u5bfe\u5fdc\u3059\u308b\u30cf\u30f3\u30c9\u30e9\n            var handler = (res => {\n                var json = res.json;\n                var newState: ContainerState = {$loading: false};\n                var value: any;\n                if(!json) return;\n                if(typeof queryHolder.handler === 'function') {\n                    value = queryHolder.handler(res);\n                }else{\n                    value = queryHolder.toArray ? toArray(json[stateKey]): json[stateKey];\n                }\n                // Container\u306eState\u306bFalcor.Model\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\n                newState[stateKey] = value;\n                this.setState(newState);\n            });\n\n            this.unregisters.push(this.model.addChangeListener(queryHolder.query, handler));\n\n            this.model.get(queryHolder.query).then((res) => handler(res));\n        });\n    }\n\n    componentWillUnmount() {\n        this.unregisters.forEach($unreg => $unreg());\n    }\n\n    render() {\n        var props = {};\n        if(this.props) {\n            Object.keys(this.props).forEach(key => {\n                props[key] = this.props[key];\n            });\n        }\n        // Container\u306eState\u3092\u30e9\u30c3\u30d7\u3057\u305fComponent\u306eprops\u306b\u30bb\u30c3\u30c8\n        this.queries.forEach(q => {\n            props[q.stateKey] = this.state[q.stateKey];\n        });\n        if(this.state.$loading) {\n            return null;\n        }else{\n            // \u521d\u56de\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308c\u3070\u30e9\u30c3\u30d7\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n            return React.createElement(this.delegate, props);\n        }\n    }\n}\n\nexport class ContainerBase extends React.Component<any, any>{}\n\nexport default function connectModel<T>(delegate: typeof React.Component, model: Store, modelToProps: ModelToProps<T>) {\n    // Container\u306ebase class\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u8fd4\u3059\n    return class extends Container {\n        constructor() {\n            super(model, modelToProps, delegate);\n        }\n    } as (typeof ContainerBase);\n}\n\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u5272\u306bconnectModel\u306e\u5b9f\u88c5\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u7406\u7531\u306e1\u3064\u306b\u3001\u7b2c3\u5f15\u6570(modelToProps)\u306b\u8272\u3005\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u6301\u305f\u305b\u305f\u304b\u3089\u3001\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\u6c4e\u7528\u7684\u306bprops\u3078\u5024\u3092\u6ce8\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001Falcor.Model#get\u306e\u5f15\u6570\u3068then\u76f8\u5f53\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u66f8\u3051\u308b\u3088\u3046\u306a\u53e3\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u30af\u30a8\u30ea\nconst TodoItemContainer = connectModel<{id: string}>(TodoItem, store, {\n    todo(props) {                                                 // \u5916\u90e8\u304b\u3089\u632f\u3063\u3066\u304f\u308bprops\u306e\u5024\u304c\u53c2\u7167\u3067\u304d\u308b\u3068\u8272\u3005\u5b09\u3057\u3044\u306f\u305a.\n        query: `todoByIds.${props.id}[\"text\", \"completedAt\"]`,    // \u8981\u6c42\u3059\u308bJSON Graph\u306epath. \n        handler: json => {                                        // Model\u306eResponse\u304b\u3089\u5024\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406.\n            return json.todoByIds[props.id];\n        }\n    }\n});\n\n\n\u6c4e\u7528\u6027\u3092\u78ba\u4fdd\u3057\u3064\u3064\u3082\u3001\u6bce\u56de\u3053\u308c\u3092\u66f8\u304f\u306e\u3082\u5fae\u5999\u304b\u3068\u601d\u3044\u3001\u5e7e\u3064\u304b\u306eShortHand\u3092\u7528\u610f\u3057\u3066\u3044\u305f\u3089\u3001\u5b9f\u88c5\u304c\u7169\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\nFalcor\u3068Flux\n\u3053\u3053\u307e\u3067Falcor.Model\u306e\u3046\u3061\u3001get\u306e\u8a71\u3070\u304b\u308a\u3067\u3001set/call\u306e\u8a71\u984c\u306b\u89e6\u308c\u306a\u3044\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\u3088\u304f\u3088\u304f\u8003\u3048\u308b\u3068\u3001\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067set/call\u306e\u30c6\u30fc\u30de\u304c\u4e3b\u5f79\u306b\u306a\u308a\u5f97\u306a\u3044\u306e\u306f\u3001\u5b9f\u306f\u5f53\u305f\u308a\u524d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u4e0a\u306e\u56f3\u306f\u3001Falcor\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\u3067\u300cAsync MVC\u300d\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u5171\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002Flux\u3084Redux\u306e\u8aac\u660e\u3067\u826f\u304f\u898b\u304b\u3051\u308b\u3001\u5358\u65b9\u5411\u306b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u3044\u308b\u56f3\u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\nconnectModel\u3067\u5b9f\u88c5\u3057\u305f\u90e8\u5206\u304c\u3001\u56f3\u4e2d\u3067\u3044\u3046\u3068\u3053\u308d\u306e[Model] -> [View]\u3078\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3059\u90e8\u5206\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30fc\u30de\u304c\u300cReact\u3068Falcor\u3092\u3069\u3046\u7d44\u307f\u5408\u308f\u305b\u308b\u304b\u300d\u306a\u306e\u3067\u3059\u304b\u3089\u3001View\u306f\u4e00\u65b9\u7684\u306bModel\u306b\u5bfe\u3057\u3066get\u3059\u308b\u3060\u3051\u3067\u3059\u3002\nset/call\u306b\u3064\u3044\u3066\u306f\u3001Component\u304b\u3089Action\u3092Dispatch\u3057\u3001Action\u306b\u5fdc\u3058\u3066Store(=Falcor.Model)\u304c\u81ea\u8eab\u306b\u5bfe\u3057\u3066\u66f4\u65b0\u7cfb\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3055\u305b\u308c\u3070\u826f\u3044\u3060\u3051\u3067\u3059\u3002\u4e0a\u56f3\u3067\u3044\u3046\u3068\u3053\u308d\u306e[Controller] -> [Model]\u306e\u90e8\u5206\u3067\u3059\u3002View\u304c\u51fa\u3066\u304f\u308b\u4f59\u5730\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u672c\u30a8\u30f3\u30c8\u30ea\u306e\u7de0\u3081\u3068\u3057\u3066\u3001facebook/flux \u3092\u4f7f\u3063\u3066Falcor.Model\u306eset\u3092\u547c\u3073\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\u3092\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\nFlux,React,Falcor\u306b\u3088\u308b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u30a2\u30d7\u30ea\u306e\u4f8b\nimport * as React from 'react';\nimport {render} from 'react-dom';\nimport {Dispatcher} from 'flux';\nimport {Model} from 'falcor';\n\nimport {connectModel, Store} from '../../../lib/built';\n\n/*** Common ***/\ninterface Action<T> {\n    type: string;\n    body: T;\n}\n\n/*** Dispatcher ***/\nconst dispatcher = new Dispatcher<Action<any>>();\n\n\n/*** Store ***/\nconst store = Store.createFromModel(new Model({\n    cache: {\n        count: 0\n    }\n}));\n\n// Liseten to action and set value to model\nconst id = dispatcher.register((action) => {\n    switch(action.type) {\n        case 'COUNTUP':\n            store.set(action.body).subscribe();\n    }\n});\n\n\n/*** ActionCreator ***/\nconst countUpAction = (value: number) => {\n    return {\n        type: 'COUNTUP',\n        // It's compatible for parameters Falcor.model#set.\n        body: {\n            path: 'count',\n            value\n        }\n    };\n};\n\n\n/*** Containers ***/\n\n// Component\nclass App extends React.Component<{count: number, dispatch: (action: Action<any>) => void}, {}> {\n    countUp() {\n        this.props.dispatch(countUpAction(this.props.count + 1));\n    }\n    render() {\n        var {count} = this.props;\n        return (\n            <div>\n                <p>\n                This is simple demonstation of Falcor, React and flux.\n                </p>\n                <button onClick={this.countUp.bind(this)}>Click + 1</button>\n                <span>{count}</span>\n            </div>\n        );\n    }\n}\n\n// App Container\nconst AppContainer = connectModel(App, store, {\n    count: 'count'\n});\n\n\n/*** Bootstrap ***/\nrender(<AppContainer dispatch={dispatcher.dispatch.bind(dispatcher)}/>, document.getElementById('app'));\n\n\n\n\u307e\u3068\u3081\u3068\u8ab2\u984c\n\u4eca\u56de\u306f\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u306f\u300cRelay\u3084Redux\u306e\u3088\u3046\u306bComponent to Component\u306a\u95a2\u6570\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092Falcor\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4f55\u304b\u3044\u3044\u611f\u3058\u306e\u30e2\u30ce\u304c\u51fa\u6765\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u300d\u3067\u3059\u3002\n\u5c11\u306a\u304f\u3068\u3082\u300cView\u306b\u5bfe\u3059\u308b\u5024\u306e\u6ce8\u5165\u306b\u5c02\u5ff5\u3055\u305b\u308b\u7b87\u6240\u3092\u7528\u610f\u3059\u308b\u300d\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u7d50\u69cb\u6c17\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\u672c\u30a8\u30f3\u30c8\u30ea\u3067\u306fView\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306bReact\u3092\u9078\u3073\u307e\u3057\u305f\u304c\u3001Angualr2\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u30b1\u30fc\u30b9\u306b\u3064\u3044\u3066\u65b0\u9bae\u306aFalcor\u3068Angular2\u306e\u30b5\u30f3\u30d7\u30eb\u3001\u5b63\u7bc0\u306eRxJS\u3068minimongo\u3092\u6dfb\u3048\u3066(TypeScript\u306eAbstract Class\u98a8\u5473)\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059(\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3082\u3001Falcor\u304b\u3089\u306e\u5024\u53d6\u5f97\u7b87\u6240\u306fComponent\u306e\u7279\u5b9a\u7b87\u6240\u3067\u8a18\u8ff0\u3092\u5f37\u5236\u3055\u305b\u308b\u5de5\u592b\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3057\u305f)\n\u4e00\u65b9\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305fStore\u3084\u3089connectModel\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u307e\u3060\u6e80\u8db3\u51fa\u6765\u3066\u3044\u306a\u3044\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\u4e0d\u6e80\u306b\u611f\u3058\u3066\u3044\u308b\u7b87\u6240\u3092\u3044\u304f\u3064\u304b\u6319\u3052\u3066\u307f\u307e\u3057\u305f:\n\nComposition\u554f\u984c: Relay\u3067\u306f\u3001createConteainer\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u6642\u306bGraphQL\u306e\u8868\u73fe\u3067\u3001\u4e0b\u5c64\u3067render\u3055\u308c\u308bComponent\u3078\u306e\u5024\u6ce8\u5165\u65b9\u6cd5\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u4e00\u65b9\u3001\u4eca\u56de\u50d5\u306e\u66f8\u3044\u305fconnnectModel\u306b\u306f\u305d\u3053\u307e\u3067\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n\u5024\u691c\u77e5\u65b9\u6cd5\u306e\u8ab2\u984c: \u3053\u308c\u306fFalcor.Model\u306eonChange\u5b9f\u88c5\u3068\u3082\u95a2\u9023\u3059\u308b\u306e\u3067\u5229\u7528\u5074\u3060\u3051\u3067\u3069\u3046\u3053\u3046\u51fa\u6765\u308b\u8a71\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001onChange\u306eAPI Reference\u3092\u8aad\u3080\u9650\u308a\u3001\u300cJSON Graph\u4e0a\u306e\u3069\u306e\u90e8\u5206\u304c\u5909\u66f4\u3055\u308c\u305f\u304b\u300d\u304c\u30ea\u30b9\u30ca\u5074\u306b\u6e21\u3063\u3066\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u305f\u3081\u3001\u5b9f\u969b\u306fView\u3068\u95a2\u4fc2\u3059\u3079\u304dJSON Graph\u306e\u90e8\u5206\u96c6\u5408\u306b\u306f\u5909\u5316\u304c\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u306b\u3001get ~ setState \u306e\u4e00\u9023\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u6027\u80fd\u3092\u8003\u3048\u308b\u3068\u7d50\u69cb\u5fae\u5999\u306a\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n\u5024\u53d6\u5f97\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u554f\u984c: \u73fe\u72b6\u3001Component\u304cMount\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3044\u304d\u306a\u308aFalcor\u3078\u306eget\u304c\u52d5\u4f5c\u3059\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u9045\u5ef6\u5b9f\u884c\u3057\u305f\u3044\u30b1\u30fc\u30b9\u3082\u51fa\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\n\u3044\u305a\u308c\u306b\u305b\u3088\u3001Falcor\u306e\u6d3b\u7528\u4e8b\u4f8b\u3082\u5145\u5206\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u304c\u73fe\u6cc1\u3067\u3059\u306e\u3067\u3001\u3057\u3070\u3089\u304f\u306e\u9593\u306f\u300c\u3053\u3046\u3059\u308b\u3068\u3088\u308a\u826f\u304f\u306a\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u300d\u3068\u982d\u3092\u56de\u305b\u308b\u306e\u304c\u697d\u3057\u307f\u3067\u3059\u3002\n\n\u53c2\u8003:\n\nFalcor, the Flux way (I)\nFacebook Relay\u306b\u3064\u3044\u3066\u307e\u3068\u3081\n\n\u3053\u306eFalcor\u5165\u9580\u30b7\u30ea\u30fc\u30ba\u30824\u56de\u76ee\u3067\u3059\u3002\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3001[\u7b2c2\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u3067\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u3067\u306eAPI\u5229\u7528\u65b9\u6cd5\u3001[\u7b2c3\u56de](http://qiita.com/Quramy/items/def69985cfb05250fd19)\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u5b9f\u88c5\u65b9\u6cd5\u3092\u305d\u308c\u305e\u308c\u89e3\u8aac\u3057\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u3061\u306a\u307f\u306b\u904e\u53bb\u56de\u306f\u3053\u3061\u3089:\n\n* [Falcor\u5165\u9580 1\u65e5\u76ee Falcor\u3068\u306f\u4f55\u8005\u304b](http://qiita.com/Quramy/items/5cf4f112d715c2e2d300)\n* [Falcor\u5165\u9580 2\u65e5\u76ee Falcor\u306eJSON Graph\u306b\u89e6\u308c\u3066\u307f\u308b](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\n* [Falcor\u5165\u9580 3\u65e5\u76ee Falcor Router\u3067\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b](http://qiita.com/Quramy/items/def69985cfb05250fd19)\n\n\n\u4eca\u307e\u3067\u4f55\u5ea6\u304b\u66f8\u3044\u3066\u304d\u305f\u901a\u308a\u3001Falcor\u306f\u300c\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u304b\u3089\u52b9\u7387\u7684\u306b\u5024\u3092\u53d6\u5f97\u3057\u3066View\u306b\u53d7\u3051\u6e21\u3059\u3053\u3068\u300d\u3092\u76ee\u7684\u306b\u958b\u767a\u3055\u308c\u305fMiddleware\u3067\u3059\u3002\n\u524d\u56de\u307e\u3067\u306f\u3001\u8a71\u306e\u7126\u70b9\u3092Falcor\u81ea\u4f53\u306e\u4f7f\u3044\u65b9\u306b\u7d5e\u308b\u305f\u3081\u306b\u3001\u30b3\u30f3\u30bd\u30fc\u30eb\u3067\u6587\u5b57\u3092\u8868\u793a\u3059\u308b\u3070\u3063\u304b\u308a\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u3044\u307e\u3057\u305f\u3002\n\u3057\u304b\u3057\u3001\u672c\u6765Falcor\u306f\u753b\u9762\u7cfb\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3063\u3066\u3053\u305d\u610f\u5473\u306e\u3042\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067\u306f\u3001\u7686\u5927\u597d\u304d[React](https://facebook.github.io/react/)\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u524d\u63d0\n\u6700\u521d\u306b\u4f55\u70b9\u304b\u65ad\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n1. \u524d\u56de\u307e\u3067\u306f\u30c8\u30e9\u30f3\u30b9\u30d1\u30a4\u30e9\u306bBabel\u3092\u9078\u629e\u3057\u3066\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u304d\u307e\u3057\u305f\u3002\u3067\u3082\u3001\u3084\u3063\u3071\u308aTypeScript\u306e\u65b9\u304c\u597d\u304d\u306a\u306e\u3067\u4eca\u65e5\u306f.ts, .tsx\u3067\u30b3\u30fc\u30c9\u66f8\u3044\u3066\u307e\u3059\u3002\u3068\u306f\u3044\u3048\u3001\u7279\u306bTypeScript\u306a\u3089\u3067\u306f\u306e\u8a71\u3092\u3059\u308b\u3064\u3082\u308a\u3082\u306a\u3044\u3067\u3059\u306e\u3067\u3001ECMA Script 6th\u3068ReactJSX\u304c\u8aad\u3081\u308c\u3070\u554f\u984c\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n1. \u4eca\u56de\u306f\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092[Quramy/react-falcor-demo](https://github.com/Quramy/react-falcor-demo)\u306bup\u3057\u3066\u304a\u304d\u307e\u3057\u305f\u3002\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u7b49\u306f\u3053\u306e\u30ec\u30dd\u30b8\u30c8\u30ea\u306eREADME\u306b\u66f8\u3044\u3066\u3042\u308b\u306e\u3067\u3001\u672c\u6587\u4e2d\u3067\u306e\u8aac\u660e\u306f\u3057\u307e\u305b\u3093\u3002\n1. \u524d\u56de\u306f\u8272\u6c17\u51fa\u3057\u3066\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9\u306e\u8a71\u3092\u3057\u307e\u3057\u305f\u304c\u3001\u4eca\u56de\u306f\u9762\u5012\u306a\u306e\u3067[\u7b2c2\u56de](http://qiita.com/Quramy/items/c3df393791423cbdaaf6)\u306e\u6642\u3068\u540c\u69d8\u3001`cache`\u30aa\u30d7\u30b7\u30e7\u30f3\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30aa\u30f3\u30ea\u30fc\u3067\u52d5\u304b\u3059\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u307e\u3059\u3002\n\n## Falcor.Model\u306e\u5909\u66f4\u691c\u77e5\n\nReact\u306b\u9650\u3063\u305f\u8a71\u3067\u306f\u306a\u3044\u3067\u3059\u304c\u3001Flux\u306e\u3088\u3046\u306bPub/Sub\u306e\u30d1\u30bf\u30fc\u30f3\u306b\u5373\u3057\u305fMVC\u3067\u306f\u3001View\u304cModel\u306e\u5909\u66f4\u30a4\u30d9\u30f3\u30c8\u3092\u8cfc\u8aad\u3059\u308b\u30d1\u30bf\u30fc\u30f3\u304c\u738b\u9053\u3067\u3059\u3002\n\u3053\u306e\u30a8\u30f3\u30c8\u30ea\u306b\u304a\u3044\u3066\u3082\u3001React\u306eComponent(View)\u304cFalcor.Model\u3092\u5909\u66f4\u3092\u8cfc\u8aad\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30c7\u30fc\u30bf\u30d5\u30ed\u30fc\u3067\u8a00\u3046\u3068\u3001[Model] -> [View]\u3067\u3059\u306d\u3002\n\nFalcor\u306fModel\u304c\u5185\u5305\u3059\u308bJSON Graph\u306e\u72b6\u614b\u306b\u5909\u66f4\u304c\u767a\u751f\u3057\u305f\u5834\u5408\u306b\u767a\u706b\u3059\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092Model\u306e\u4f5c\u6210\u6642\u306b\u4ed5\u8fbc\u3080\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```js\nvar model = new Falcor.Model({\n  onChange: () => {\n    console.log('\u4e2d\u8eab\u5909\u308f\u3063\u305f\u3088\uff01')\n  },\n  /* \u7565 */\n});\n```\n\n\u3053\u3044\u3064\u3092\u5229\u7528\u3057\u3066\u3001Falcor\u306eModel\u3092\u62e1\u5f35\u3057\u3066\u3084\u308a\u307e\u3057\u3087\u3046\u3002\n\n<!-- Store {{{ -->\n\n```ts:lib/src/store.ts\nimport {EventEmitter} from 'events';\nimport * as Falcor from 'falcor';\n\nexport interface StoreCreateParam {\n    [key: string]: any;\n    onChange?: Function;\n}\n\nexport default class Store extends Falcor.Model {\n    private emitter: EventEmitter;\n    constructor(option: StoreCreateParam) {\n        var opt: StoreCreateParam = option;\n        var originalCallback = option.onChange || (() => {});\n        opt.onChange = () => {\n            this.emitter && this.emitter.emit('change');\n        };\n        super(opt);\n        this.emitter = new EventEmitter();\n    }\n\n    static createFromModel(rawModel: Falcor.Model) {\n        return new Store({\n            source: rawModel.asDataSource()\n        });\n    }\n\n    static createFromCache(cache: any) {\n        return new Store({\n            cache\n        });\n    }\n\n    addChangeListener(query: string, onSuccess: (json: any) => any) {\n        var handler = () => {\n            this.get(query).then(res => {\n                if(res) {\n                    onSuccess(res);\n                }\n            });\n        };\n        this.emitter.on('change', handler);\n        var off = () => {\n            this.emitter.removeListener('change', handler);\n        };\n        return off;\n    }\n}\n```\n\n<!-- }}} -->\n\n\u3053\u3053\u3067\u4f5c\u6210\u3057\u305f`Store`\u306f\u3001Falcor.Model\u3092\u7d99\u627f\u3057\u305fClass\u3067\u3059\u3002\n\u307e\u305f\u3001Model\u5909\u66f4\u6642\u306b`addChangeListener` \u306b\u3066\u767b\u9332\u3057\u305f\u30cf\u30f3\u30c9\u30e9\u304c\u767a\u706b\u3059\u308b\u3088\u3046\u306bNode.js\u306eEventEmitter\u3092\u4ed5\u8fbc\u3093\u3067\u3044\u307e\u3059\u3002\n\n## View\u306e\u4f5c\u6210\n\n\u4e0a\u8a18\u3067\u7528\u610f\u3057\u305f`Store` \u3092\u4f7f\u3044\u3001\u65e9\u901fReact\u306eComponent\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u305f\u3060\u306eHello world\u3067\u3059\u3002\n\n<!-- simple hello world {{{ -->\n\n```ts:app.tsx\nimport * as React from 'react';\nimport * as Falcor from 'falcor';\nimport {render} from 'react-dom';\n\nimport {Store} from './lib/built/store'   //\u4e0a\u3067\u4f5c\u3063\u305fStore class\n\n// Falcor\u306eModel\u304b\u3089Store\u3092\u4f5c\u6210\nconst model = Store.createFromModel(new Falcor.Model({\n    cache: {\n        message: 'Hello, World'\n    }\n}));\n\nclass App extends React.Component<{}, {message: string}> {\n\n    state = {message: ''};                  // state\u306e\u521d\u671f\u5316\n    off: () => void;\n\n    componentDidMount() {\n        var handler = () => {\n            this.off = model.get('message').then(res => {\n                this.setState({message: res.json.message});\n            });\n        });\n        model.addChangeListener(handler);   // \u5024\u306e\u5909\u66f4\u691c\u77e5\n        handler();                          // \u521d\u56de\u306e\u5024\u53d6\u5f97\n    }\n    componentWillUnmount() {\n        this.off && this.off();             // \u8cfc\u8aad\u89e3\u9664\n    }\n    render() {\n        return (\n            <div>\n                <h1>{this.state.message}</h1>\n            </div>\n        );\n    }\n}\n\nrender(<App />, document.getElementById('app'));\n```\n\n<!-- }}} -->\n\nHello world\u306a\u306e\u3067\u3053\u3053\u307e\u3067\u306e\u6a5f\u80fd\u306f\u672c\u6765\u4e0d\u8981\u306a\u306e\u3067\u3059\u304c\u3001React\u306eLifecycle\u30d5\u30c3\u30af\u3092\u4f7f\u3063\u3066\u4e0b\u8a18\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n* `componentDidMount` \u3067\u5148\u307b\u3069\u306e`Store`\u306b\u5bfe\u3059\u308b\u5909\u66f4\u691c\u77e5\u306e\u8cfc\u8aad\u3068\u521d\u56de\u306e\u5024\u53d6\u5f97\u3092\u5b9f\u884c\n* `componentWillUnmount` \u3067\u8cfc\u8aad\u306e\u89e3\u9664\n\n### \u3082\u3046\u5c11\u3057\u306a\u3093\u3068\u304b\u306a\u3089\u3093\u3082\u306e\u304b\n\n\u3068\u308a\u3042\u3048\u305aView\u304b\u3089Model\u306e\u5024\u3092Get\u3057\u3066\u8868\u793a\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u304c\u3001\u5e7e\u3064\u304b\u306e\u8ab2\u984c\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. `componentDidMount`, `componentWillUnmount`\u3067\u306e\u8cfc\u8aad\u30fb\u8cfc\u8aad\u89e3\u9664\u306f\u5b9a\u5f62\u6587\u306a\u306e\u306bModel\u3068View\u3092\u7d50\u5408\u3059\u308b\u5ea6\u306b\u6bce\u56de\u66f8\u304f\u306e\u306f\u99ac\u9e7f\u3052\u3066\u3044\u308b\n1. \u3068\u304f\u306b`componentDidMount`\u3067\u306f\u3001\u521d\u56de\u306e\u5024\u53d6\u5f97\u3068\u5024\u306e\u8cfc\u8aad\u3092\u4e21\u65b9\u66f8\u3044\u3066\u3084\u308b\u5fc5\u8981\u3082\u3042\u308b\n1. \u5024\u306e\u53d6\u5f97\u51e6\u7406(Server\u3078\u306e\u554f\u3044\u5408\u308f\u305b\u3092\u542b\u3080)\u3068\u8868\u793a\u51e6\u7406\u304c\u5bc6\u306b\u7d50\u5408\u3057\u3066\u3044\u308b\n\n3.\u306b\u3064\u3044\u3066\u306f\u3001[react-redux](https://github.com/reactjs/react-redux/blob/master/docs/api.md#connectmapstatetoprops-mapdispatchtoprops-mergeprops-options)\u7b49\u306e\u30e1\u30b8\u30e3\u30fc\u306a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u304a\u3044\u3066\u3082\u3001Component\u306fprops\u3092\u4ecb\u3057\u3066Store(Model)\u306e\u5024\u3092\u53c2\u7167\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u3044\u3067\u3059\u3002\n\n\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u3068\u8868\u793a\u3092\u3069\u306e\u3088\u3046\u306b\u5206\u89e3\u3059\u308c\u3070\u826f\u3044\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n### Relay\u3092\u8997\u3044\u3066\u307f\u305f\n\n\u4eca\u56de\u306e\u3088\u3046\u306bReact\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u6587\u8108\u306b\u304a\u3044\u3066\u3001Falcor\u3068\u6bd4\u8f03\u3055\u308c\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u7b46\u982d\u304cFacebook\u304c\u958b\u767a\u3057\u305f[Relay](https://facebook.github.io/relay/) \u3067\u3059\u3002\n\nFalcor\u304cJSON Graph\u306epath\u3067\u554f\u3044\u5408\u308f\u305b\u308b\u306e\u306b\u5bfe\u3057\u3001Relay\u3067\u306fGraphQL\u3068\u3044\u3046\u72ec\u81ea\u306e\u30af\u30a8\u30ea\u8a00\u8a9e\u3067\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u304c\u3001\u53cc\u65b9\u3068\u3082\u89e3\u6c7a\u3057\u3088\u3046\u3068\u3057\u3066\u3044\u308b\u554f\u984c\u306f\u540c\u3058\u3067\u3059\u3002\n\nRelay\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n<!-- relay code {{{ -->\n\n```js\nclass Tea extends React.Component {\n  render() {\n    var {name, steepingTime} = this.props.tea;\n    return (\n      <li key={name}>\n        {name} (<em>{steepingTime} min</em>)\n      </li>\n    );\n  }\n}\nTeaContainer = Relay.createContainer(Tea, {\n  fragments: {\n    tea: () => Relay.QL`\n      fragment on Tea {\n        name,\n        steepingTime,\n      }\n    `,\n  },\n});\n```\n\n<!-- }}} -->\n\nRelay, \u683c\u597d\u826f\u3044\u30b3\u30fc\u30c9\u3067\u3059\u306d\u3002\n\u4f55\u304c\u826f\u3044\u3063\u3066\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u305f\u3089`Tea` \u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5358\u54c1\u3067\u3082\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3067\u304d\u3066\u3044\u307e\u3059\u3002\n\n```js\nReact.createElement(<Tea name={'JAPANESE GREEN'} steepingTime={3} />)\n```\n\n(\u5927\u5206\u3069\u3046\u3067\u3082\u826f\u3044\u8a71\u3067\u3059\u304c\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3092Relay\u306e\u30b5\u30a4\u30c8\u3067\u8aad\u3093\u3067`steepingTime`\u3068\u3044\u3046\u8a00\u8449\u306e\u610f\u5473\u3092\u77e5\u308a\u307e\u3057\u305f\u3002\u50d5\u306f\u82f1\u56fd\u7d33\u58eb\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u4e00\u751f\u3053\u3093\u306a\u5358\u8a9e\u4f7f\u308f\u306a\u3044\u6c17\u304c\u3057\u307e\u3059\u3051\u3069)\n\n### Component class\u304b\u3089Component class\u3092\u751f\u6210\u3059\u308b\u95a2\u6570\u304c\u3042\u308c\u3070\u3088\u3044\n\u9591\u8a71\u4f11\u984c\u3002\nRelay\u3084Redux\u3092\u8997\u3044\u305f\u611f\u3058\u3001\u300cReact Component Class\u3092\u5f15\u6570\u306b\u53d7\u3051\u53d6\u3063\u3066\u3001\u30c7\u30b3\u3063\u305fReact Component Class\u3092\u52d5\u7684\u306b\u8fd4\u3059\u95a2\u6570\u300d\u3092\u4f5c\u308c\u3070\u3001\u4f55\u304b\u3044\u3044\u611f\u3058\u306e\u30e2\u30ce\u304c\u51fa\u6765\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u8a33\u3067\u3059\u3002\n\n\u3084\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u5148\u306b\u5229\u7528\u5074\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u5148\u8ff0\u306eHello world\u306eJSX\u3092\u66f8\u304d\u76f4\u3057\u3066\u307f\u307e\u3057\u305f:\n\n<!-- app_improved {{{ -->\n\n```ts:app.tsx(\u6539)\nimport * as React from 'react';\nimport {render} from 'react-dom';\nimport {Model} from 'falcor';\n\nimport {connectModel, Store} from '../../../lib/built';\n\nconst store = Store.createFromModel(new Model({\n    cache: {\n        message: 'Hello, world'\n    }\n}));\n\nclass App extends React.Component<{message: string}, {}> {\n    render() {\n        return (\n            <div>\n                <h1>{this.props.message}</h1>\n            </div>\n        );\n    }\n}\n\nconst AppContainer = connectModel(App, store, {\n    message: 'message'\n});\n\nrender(<AppContainer />, document.getElementById('app'));\n```\n\n<!-- }}} -->\n\n* `App`\u3068\u3044\u3046React Component\u306fProps\u306e\u307f\u3067render\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\n* `connectModel` \u3068\u3044\u3046\u95a2\u6570(\u5f8c\u8ff0)\u306b\u3066\u300cFalcor\u306eModel\u304b\u3089`message`\u3068\u3044\u3046JSON Graph\u306e\u30d1\u30b9\u3092\u5f15\u3044\u3066\u3001\u540c\u540d\u306eprops\u306b\u5024\u3092\u6ce8\u5165\u3057\u3066\u306d\u300d\u3068\u3044\u3046\u5185\u5bb9\u3092\u8868\u73fe\u3057\u3066\u3044\u307e\u3059\n\n\u3055\u3066\u3001\u305d\u3093\u306a`connectModel`\u306e\u5b9f\u4f53\u30b3\u30fc\u30c9\u304c\u4e0b\u8a18\u3067\u3059\u3002\u7d50\u69cb\u9577\u3044\u3067\u3059\u306e\u3067\u3001\u6d41\u3057\u8aad\u3080\u7a0b\u5ea6\u3067\u7d50\u69cb\u3067\u3059\u3002\u30dd\u30a4\u30f3\u30c8\u3068\u306a\u308b\u7b87\u6240\u306b\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u4ed8\u8a18\u3057\u3066\u3044\u308b\u306e\u3067\u53c2\u8003\u307e\u3067\u3002\n\n<!-- connectModel {{{ -->\n\n```ts:lib/src/connectModel.ts\nimport * as React from 'react';\nimport Store from './store';\nimport {toArray} from './util';\n\nexport interface QueryHolder {\n    query: string;\n    toArray?: boolean;\n    handler?: (res: any) => any;\n}\n\nexport interface ModelToProps<T> {\n    [propName: string]: (string | QueryHolder | ((externalProps: T) => QueryHolder));\n}\n\nfunction parse(modelToProps?: ModelToProps<any>) {\n    return Object.keys(modelToProps).map(stateKey => {\n        var queryObj = modelToProps[stateKey];\n        var query: string, toArray = false;\n        var fn: Function;\n        if(typeof queryObj === 'string') {\n            fn = (props: any) => {\n                return {\n                    query: queryObj,\n                    toArray: false,\n                }\n            };\n        }else if(typeof queryObj === 'object') {\n            var obj = queryObj as QueryHolder;\n            fn = (props: any) => {\n                return {\n                    query: obj.query,\n                    toArray: obj.toArray,\n                    handler: obj.handler\n                };\n            };\n        }else if(typeof queryObj === 'function') {\n            fn = queryObj as ((props: any) => QueryHolder);\n        }\n        return {\n            stateKey,\n            queryFn: fn as any\n        };\n    });\n}\n\ninterface ContainerState {\n    $loading: boolean;\n    [key: string]: any;\n}\n\n// Container\u306ebase class\nclass Container extends React.Component<{[propKey: string]: any}, ContainerState> {\n\n    state = { $loading: true };\n\n    private queries: {stateKey: string; queryFn: (props: any) => QueryHolder}[];\n    private unregisters: (() => void)[] = [];\n\n    constructor(\n        private model: Store,\n        modelToProps: ModelToProps<any>,            // Container\u306b\u6ce8\u5165\u3059\u308bFalcor\u306e\u30af\u30a8\u30ea\n        private delegate: (typeof React.Component)  // \u30e9\u30c3\u30d7\u5bfe\u8c61\u306eReact Component\n    ){\n        super();\n        this.queries = parse(modelToProps);\n    }\n\n    componentDidMount() {\n        this.queries.forEach(q => {\n            var stateKey = q.stateKey;\n            var queryHolder = q.queryFn(this.props);\n            \n            // Falcor.Model#get(...) \u306b\u5bfe\u5fdc\u3059\u308b\u30cf\u30f3\u30c9\u30e9\n            var handler = (res => {\n                var json = res.json;\n                var newState: ContainerState = {$loading: false};\n                var value: any;\n                if(!json) return;\n                if(typeof queryHolder.handler === 'function') {\n                    value = queryHolder.handler(res);\n                }else{\n                    value = queryHolder.toArray ? toArray(json[stateKey]): json[stateKey];\n                }\n                // Container\u306eState\u306bFalcor.Model\u306e\u5024\u3092\u30bb\u30c3\u30c8\u3059\u308b\n                newState[stateKey] = value;\n                this.setState(newState);\n            });\n\n            this.unregisters.push(this.model.addChangeListener(queryHolder.query, handler));\n\n            this.model.get(queryHolder.query).then((res) => handler(res));\n        });\n    }\n\n    componentWillUnmount() {\n        this.unregisters.forEach($unreg => $unreg());\n    }\n\n    render() {\n        var props = {};\n        if(this.props) {\n            Object.keys(this.props).forEach(key => {\n                props[key] = this.props[key];\n            });\n        }\n        // Container\u306eState\u3092\u30e9\u30c3\u30d7\u3057\u305fComponent\u306eprops\u306b\u30bb\u30c3\u30c8\n        this.queries.forEach(q => {\n            props[q.stateKey] = this.state[q.stateKey];\n        });\n        if(this.state.$loading) {\n            return null;\n        }else{\n            // \u521d\u56de\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u5b8c\u4e86\u3057\u3066\u3044\u308c\u3070\u30e9\u30c3\u30d7\u3057\u305f\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\n            return React.createElement(this.delegate, props);\n        }\n    }\n}\n\nexport class ContainerBase extends React.Component<any, any>{}\n\nexport default function connectModel<T>(delegate: typeof React.Component, model: Store, modelToProps: ModelToProps<T>) {\n    // Container\u306ebase class\u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3092\u8fd4\u3059\n    return class extends Container {\n        constructor() {\n            super(model, modelToProps, delegate);\n        }\n    } as (typeof ContainerBase);\n}\n```\n\n<!-- }}} -->\n\n\u30b5\u30f3\u30d7\u30eb\u306e\u5272\u306b`connectModel`\u306e\u5b9f\u88c5\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u7406\u7531\u306e1\u3064\u306b\u3001\u7b2c3\u5f15\u6570(`modelToProps`)\u306b\u8272\u3005\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u6301\u305f\u305b\u305f\u304b\u3089\u3001\u3068\u3044\u3046\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u6c4e\u7528\u7684\u306bprops\u3078\u5024\u3092\u6ce8\u5165\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001`Falcor.Model#get`\u306e\u5f15\u6570\u3068`then`\u76f8\u5f53\u3092\u307b\u307c\u305d\u306e\u307e\u307e\u66f8\u3051\u308b\u3088\u3046\u306a\u53e3\u3092\u7528\u610f\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```ts:\u3082\u3046\u5c11\u3057\u8907\u96d1\u306a\u30af\u30a8\u30ea\nconst TodoItemContainer = connectModel<{id: string}>(TodoItem, store, {\n    todo(props) {                                                 // \u5916\u90e8\u304b\u3089\u632f\u3063\u3066\u304f\u308bprops\u306e\u5024\u304c\u53c2\u7167\u3067\u304d\u308b\u3068\u8272\u3005\u5b09\u3057\u3044\u306f\u305a.\n        query: `todoByIds.${props.id}[\"text\", \"completedAt\"]`,    // \u8981\u6c42\u3059\u308bJSON Graph\u306epath. \n        handler: json => {                                        // Model\u306eResponse\u304b\u3089\u5024\u3092\u53d6\u5f97\u3059\u308b\u51e6\u7406.\n            return json.todoByIds[props.id];\n        }\n    }\n});\n```\n\n\u6c4e\u7528\u6027\u3092\u78ba\u4fdd\u3057\u3064\u3064\u3082\u3001\u6bce\u56de\u3053\u308c\u3092\u66f8\u304f\u306e\u3082\u5fae\u5999\u304b\u3068\u601d\u3044\u3001\u5e7e\u3064\u304b\u306eShortHand\u3092\u7528\u610f\u3057\u3066\u3044\u305f\u3089\u3001\u5b9f\u88c5\u304c\u7169\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n## Falcor\u3068Flux\n\n\u3053\u3053\u307e\u3067Falcor.Model\u306e\u3046\u3061\u3001get\u306e\u8a71\u3070\u304b\u308a\u3067\u3001set/call\u306e\u8a71\u984c\u306b\u89e6\u308c\u306a\u3044\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n\u3088\u304f\u3088\u304f\u8003\u3048\u308b\u3068\u3001\u4eca\u56de\u306e\u30a8\u30f3\u30c8\u30ea\u3067set/call\u306e\u30c6\u30fc\u30de\u304c\u4e3b\u5f79\u306b\u306a\u308a\u5f97\u306a\u3044\u306e\u306f\u3001\u5b9f\u306f\u5f53\u305f\u308a\u524d\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n<img src=\"http://netflix.github.io/falcor/images/async-mvc.png\" width=\"700\">\n\n\u4e0a\u306e\u56f3\u306f\u3001[Falcor\u306e\u516c\u5f0f\u30b5\u30a4\u30c8](http://netflix.github.io/falcor/starter/what-is-falcor.html)\u3067\u300cAsync MVC\u300d\u3068\u3044\u3046\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u5171\u306b\u7d39\u4ecb\u3055\u308c\u3066\u3044\u307e\u3059\u3002Flux\u3084Redux\u306e\u8aac\u660e\u3067\u826f\u304f\u898b\u304b\u3051\u308b\u3001\u5358\u65b9\u5411\u306b\u30c7\u30fc\u30bf\u304c\u6d41\u308c\u3066\u3044\u308b\u56f3\u306e\u30a2\u30ca\u30ed\u30b8\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u306d\u3002\n\n`connectModel`\u3067\u5b9f\u88c5\u3057\u305f\u90e8\u5206\u304c\u3001\u56f3\u4e2d\u3067\u3044\u3046\u3068\u3053\u308d\u306e[Model] -> [View]\u3078\u30c7\u30fc\u30bf\u3092\u53d7\u3051\u6e21\u3059\u90e8\u5206\u3067\u3059\u3002\n\u4eca\u56de\u306e\u30c6\u30fc\u30de\u304c\u300cReact\u3068Falcor\u3092\u3069\u3046\u7d44\u307f\u5408\u308f\u305b\u308b\u304b\u300d\u306a\u306e\u3067\u3059\u304b\u3089\u3001View\u306f\u4e00\u65b9\u7684\u306bModel\u306b\u5bfe\u3057\u3066get\u3059\u308b\u3060\u3051\u3067\u3059\u3002\n\nset/call\u306b\u3064\u3044\u3066\u306f\u3001Component\u304b\u3089Action\u3092Dispatch\u3057\u3001Action\u306b\u5fdc\u3058\u3066Store(=Falcor.Model)\u304c\u81ea\u8eab\u306b\u5bfe\u3057\u3066\u66f4\u65b0\u7cfb\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3055\u305b\u308c\u3070\u826f\u3044\u3060\u3051\u3067\u3059\u3002\u4e0a\u56f3\u3067\u3044\u3046\u3068\u3053\u308d\u306e[Controller] -> [Model]\u306e\u90e8\u5206\u3067\u3059\u3002View\u304c\u51fa\u3066\u304f\u308b\u4f59\u5730\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u672c\u30a8\u30f3\u30c8\u30ea\u306e\u7de0\u3081\u3068\u3057\u3066\u3001facebook/flux \u3092\u4f7f\u3063\u3066Falcor.Model\u306eset\u3092\u547c\u3073\u51fa\u3059\u30b5\u30f3\u30d7\u30eb\u3092\u8cbc\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n<!-- flux {{{ -->\n\n```ts:Flux,React,Falcor\u306b\u3088\u308b\u30ab\u30a6\u30f3\u30c8\u30a2\u30c3\u30d7\u30a2\u30d7\u30ea\u306e\u4f8b\nimport * as React from 'react';\nimport {render} from 'react-dom';\nimport {Dispatcher} from 'flux';\nimport {Model} from 'falcor';\n\nimport {connectModel, Store} from '../../../lib/built';\n\n/*** Common ***/\ninterface Action<T> {\n    type: string;\n    body: T;\n}\n\n/*** Dispatcher ***/\nconst dispatcher = new Dispatcher<Action<any>>();\n\n\n/*** Store ***/\nconst store = Store.createFromModel(new Model({\n    cache: {\n        count: 0\n    }\n}));\n\n// Liseten to action and set value to model\nconst id = dispatcher.register((action) => {\n    switch(action.type) {\n        case 'COUNTUP':\n            store.set(action.body).subscribe();\n    }\n});\n\n\n/*** ActionCreator ***/\nconst countUpAction = (value: number) => {\n    return {\n        type: 'COUNTUP',\n        // It's compatible for parameters Falcor.model#set.\n        body: {\n            path: 'count',\n            value\n        }\n    };\n};\n\n\n/*** Containers ***/\n\n// Component\nclass App extends React.Component<{count: number, dispatch: (action: Action<any>) => void}, {}> {\n    countUp() {\n        this.props.dispatch(countUpAction(this.props.count + 1));\n    }\n    render() {\n        var {count} = this.props;\n        return (\n            <div>\n                <p>\n                This is simple demonstation of Falcor, React and flux.\n                </p>\n                <button onClick={this.countUp.bind(this)}>Click + 1</button>\n                <span>{count}</span>\n            </div>\n        );\n    }\n}\n\n// App Container\nconst AppContainer = connectModel(App, store, {\n    count: 'count'\n});\n\n\n/*** Bootstrap ***/\nrender(<AppContainer dispatch={dispatcher.dispatch.bind(dispatcher)}/>, document.getElementById('app'));\n```\n\n<!-- }}} -->\n\n## \u307e\u3068\u3081\u3068\u8ab2\u984c\n\n\u4eca\u56de\u306f\u66f8\u304d\u305f\u304b\u3063\u305f\u306e\u306f**\u300cRelay\u3084Redux\u306e\u3088\u3046\u306bComponent to Component\u306a\u95a2\u6570\u306e\u30a2\u30d7\u30ed\u30fc\u30c1\u3092Falcor\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4f55\u304b\u3044\u3044\u611f\u3058\u306e\u30e2\u30ce\u304c\u51fa\u6765\u305d\u3046\u306a\u6c17\u304c\u3059\u308b\u300d**\u3067\u3059\u3002\n\u5c11\u306a\u304f\u3068\u3082**\u300cView\u306b\u5bfe\u3059\u308b\u5024\u306e\u6ce8\u5165\u306b\u5c02\u5ff5\u3055\u305b\u308b\u7b87\u6240\u3092\u7528\u610f\u3059\u308b\u300d**\u3068\u3044\u3046\u8003\u3048\u65b9\u304c\u7d50\u69cb\u6c17\u306b\u5165\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u672c\u30a8\u30f3\u30c8\u30ea\u3067\u306fView\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306bReact\u3092\u9078\u3073\u307e\u3057\u305f\u304c\u3001[Angualr2](https://angular.io)\u3068Falcor\u3092\u7d44\u307f\u5408\u308f\u305b\u308b\u30b1\u30fc\u30b9\u306b\u3064\u3044\u3066[\u65b0\u9bae\u306aFalcor\u3068Angular2\u306e\u30b5\u30f3\u30d7\u30eb\u3001\u5b63\u7bc0\u306eRxJS\u3068minimongo\u3092\u6dfb\u3048\u3066(TypeScript\u306eAbstract Class\u98a8\u5473)](http://overmorrow.hatenablog.com/entry/2015/12/20/025803)\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059(\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u3067\u3082\u3001Falcor\u304b\u3089\u306e\u5024\u53d6\u5f97\u7b87\u6240\u306fComponent\u306e\u7279\u5b9a\u7b87\u6240\u3067\u8a18\u8ff0\u3092\u5f37\u5236\u3055\u305b\u308b\u5de5\u592b\u304c\u306a\u3055\u308c\u3066\u3044\u307e\u3057\u305f)\n\n\u4e00\u65b9\u3001\u4eca\u56de\u4f5c\u6210\u3057\u305f`Store`\u3084\u3089`connectModel`\u306b\u3064\u3044\u3066\u306f\u3001\u307e\u3060\u307e\u3060\u6e80\u8db3\u51fa\u6765\u3066\u3044\u306a\u3044\u90e8\u5206\u3082\u3042\u308a\u307e\u3059\u3002\u4e0d\u6e80\u306b\u611f\u3058\u3066\u3044\u308b\u7b87\u6240\u3092\u3044\u304f\u3064\u304b\u6319\u3052\u3066\u307f\u307e\u3057\u305f:\n\n1. Composition\u554f\u984c: Relay\u3067\u306f\u3001`createConteainer`\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u6642\u306bGraphQL\u306e\u8868\u73fe\u3067\u3001\u4e0b\u5c64\u3067render\u3055\u308c\u308bComponent\u3078\u306e\u5024\u6ce8\u5165\u65b9\u6cd5\u3092\u8a18\u8ff0\u3067\u304d\u307e\u3059\u3002\u4e00\u65b9\u3001\u4eca\u56de\u50d5\u306e\u66f8\u3044\u305f`connnectModel`\u306b\u306f\u305d\u3053\u307e\u3067\u306e\u6a5f\u80fd\u304c\u3042\u308a\u307e\u305b\u3093\u3002\n2. \u5024\u691c\u77e5\u65b9\u6cd5\u306e\u8ab2\u984c: \u3053\u308c\u306fFalcor.Model\u306eonChange\u5b9f\u88c5\u3068\u3082\u95a2\u9023\u3059\u308b\u306e\u3067\u5229\u7528\u5074\u3060\u3051\u3067\u3069\u3046\u3053\u3046\u51fa\u6765\u308b\u8a71\u306f\u306a\u3044\u306e\u3067\u3059\u304c\u3001[onChange\u306eAPI Reference](http://netflix.github.io/falcor/doc/Model.html#~onChange)\u3092\u8aad\u3080\u9650\u308a\u3001\u300cJSON Graph\u4e0a\u306e\u3069\u306e\u90e8\u5206\u304c\u5909\u66f4\u3055\u308c\u305f\u304b\u300d\u304c\u30ea\u30b9\u30ca\u5074\u306b\u6e21\u3063\u3066\u304d\u307e\u305b\u3093\u3002\u3053\u306e\u305f\u3081\u3001\u5b9f\u969b\u306fView\u3068\u95a2\u4fc2\u3059\u3079\u304dJSON Graph\u306e\u90e8\u5206\u96c6\u5408\u306b\u306f\u5909\u5316\u304c\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u306b\u3001`get` ~ `setState` \u306e\u4e00\u9023\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u6027\u80fd\u3092\u8003\u3048\u308b\u3068\u7d50\u69cb\u5fae\u5999\u306a\u6c17\u304c\u3059\u308b\u3002\u3002\u3002\n3. \u5024\u53d6\u5f97\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u554f\u984c: \u73fe\u72b6\u3001Component\u304cMount\u3055\u308c\u308b\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3044\u304d\u306a\u308aFalcor\u3078\u306eget\u304c\u52d5\u4f5c\u3059\u308b\u3093\u3067\u3059\u3051\u3069\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u9045\u5ef6\u5b9f\u884c\u3057\u305f\u3044\u30b1\u30fc\u30b9\u3082\u51fa\u3066\u304f\u308b\u3093\u3058\u3083\u306a\u3044\u3060\u308d\u3046\u304b\u3002\n\n\u3044\u305a\u308c\u306b\u305b\u3088\u3001Falcor\u306e\u6d3b\u7528\u4e8b\u4f8b\u3082\u5145\u5206\u306b\u6e9c\u307e\u3063\u3066\u3044\u308b\u3068\u306f\u8a00\u3048\u306a\u3044\u306e\u304c\u73fe\u6cc1\u3067\u3059\u306e\u3067\u3001\u3057\u3070\u3089\u304f\u306e\u9593\u306f\u300c\u3053\u3046\u3059\u308b\u3068\u3088\u308a\u826f\u304f\u306a\u308b\u3093\u3058\u3083\u306a\u3044\u304b\u300d\u3068\u982d\u3092\u56de\u305b\u308b\u306e\u304c\u697d\u3057\u307f\u3067\u3059\u3002\n\n## \u53c2\u8003:\n* [Falcor, the Flux way (I)](https://blog.redradix.com/falcor-the-flux-way-i/)\n* [Facebook Relay\u306b\u3064\u3044\u3066\u307e\u3068\u3081](http://qiita.com/kenfdev/items/c3c3a11abb98803a51c6)\n\n", "tags": ["Falcor", "JavaScript", "TypeScript", "reactjs", "flux"]}