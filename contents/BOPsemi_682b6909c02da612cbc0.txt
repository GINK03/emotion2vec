{"tags": ["Go", "Revel", "MongoDB"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u3000\u4eca\u56de\u306f\u3001revel\u3067mgo\u3092\u4f7f\u3063\u3066DB\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u4e0b\u6e96\u5099\u3067\u3059\u3002\u307e\u305a\u306fDB\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306econtroller\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u53c2\u8003\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3067\u3059\u3002\u3053\u3061\u3089\u3092\u3082\u3068\u306b\u5c11\u3057\u4f7f\u3044\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\n<\u53c2\u8003\u30b5\u30a4\u30c8>\nhttp://denis.papathanasiou.org/2012/10/14/go-golang-and-mongodb-using-mgo/\n\u3000session\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001session.go\u3068\u3044\u3046controller\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e3b\u306a\u6a5f\u80fd\u306f\n\u2460session\u69cb\u7bc9(cloneSession)\n\u2461Entity\u633f\u5165(InsertEntity)\n\u2462Entity\u306e\u524a\u9664(RemoveEntity)\n\u2463Collection\u306equery(queryCollection)\n\u2464\u691c\u7d22(Search)\n\nsession.go\npackage controllers\n\nimport (\n    \"labix.org/v2/mgo\"\n)\n\nvar (\n    session *mgo.Session\n    err     error\n)\n\n// new session create\nfunc cloneSession(dialURL string) *mgo.Session {\n    if session == nil {\n        session, err = mgo.Dial(dialURL)\n        if err != nil {\n            panic(err) //no, not really\n        }\n    }\n    return session.Clone()\n}\n\n// insertEntity\nfunc InsertEntity(dbName string,\n    collection string,\n    dialURL string,\n    model interface{}) {\n\n    session := cloneSession(dialURL)\n    defer session.Close()\n\n    err := session.DB(dbName).C(collection).Insert(model)\n    if err != nil {\n        panic(err)\n    }\n}\n\n// removeEntity\nfunc RemoveEntity(dbName string,\n    collection string,\n    dialURL string,\n    model interface{}) {\n\n    session := cloneSession(dialURL)\n    defer session.Close()\n\n    err := session.DB(dbName).C(collection).Remove(model)\n    //err := session.DB(dbName).C(collection).RemoveAll(model)\n\n    if err != nil {\n        panic(err)\n    }\n}\n\n// Query collection\nfunc queryCollection(dbName string,\n    collection string,\n    dialURL string,\n    query func(c *mgo.Collection) error) error {\n\n    session := cloneSession(dialURL)\n    defer session.Close()\n\n    c := session.DB(dbName).C(collection)\n\n    return query(c)\n}\n\n// Search\nfunc Search(q interface{},\n    skip int,\n    limit int,\n    dbName string,\n    collection string,\n    dialURL string) (results []interface{}, errorCode string) {\n\n    errorCode = \"\"\n    query := func(c *mgo.Collection) error {\n        fn := c.Find(q).Skip(skip).Limit(limit).All(&results)\n        if limit < 0 {\n            fn = c.Find(q).Skip(skip).All(&results)\n        }\n        return fn\n    }\n\n    search := func() error {\n        return queryCollection(dbName, collection, dialURL, query)\n    }\n\n    err := search()\n    if err != nil {\n        errorCode = \"error\"\n    }\n\n    return\n}\n\n\n[]interface{}\u3067\u53d7\u3051\u53d6\u308b\u3082\u3057\u304f\u306f\u3001\u8fd4\u308a\u5024\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u9069\u5b9c\u4f7f\u7528\u3059\u308b\u69cb\u9020\u4f53\u306e\u30b9\u30e9\u30a4\u30b9\u306b\u7f6e\u304d\u63db\u3048\u308c\u3070\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u305d\u3046\u3067\u3059\u306d\u3002\n Search\u306f\u304b\u306a\u308a\u5384\u4ecb\u3067\u3059\u306d\u3002\u79c1\u3082\u30b3\u30fc\u30c9\u7406\u89e3\u3059\u308b\u306e\u306b\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002query\u306fObjective-C\u306eBlocks\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3067\u3059\u306d\u3002query\u3092\u305d\u306e\u5834\u306e\u5f15\u6570\u3067\u95a2\u6570\u5b9f\u88c5\u3057\u3066\u3001\u305d\u308c\u3092queryCollection\u95a2\u6570\u306e\u5f15\u6570\u3067\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u6b21\u56de\u306fapp.go\u306e\u4e2d\u3067\u5177\u4f53\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\u3000\u4eca\u56de\u306f\u3001revel\u3067mgo\u3092\u4f7f\u3063\u3066DB\u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306e\u4e0b\u6e96\u5099\u3067\u3059\u3002\u307e\u305a\u306fDB\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306econtroller\u3092\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u53c2\u8003\u306b\u3057\u305f\u306e\u306f\u4ee5\u4e0b\u306e\u30b5\u30a4\u30c8\u3067\u3059\u3002\u3053\u3061\u3089\u3092\u3082\u3068\u306b\u5c11\u3057\u4f7f\u3044\u3084\u3059\u304f\u3057\u3066\u3044\u307e\u3059\u3002\n<\u53c2\u8003\u30b5\u30a4\u30c8>\nhttp://denis.papathanasiou.org/2012/10/14/go-golang-and-mongodb-using-mgo/\n\n\u3000session\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u306e\u3067\u3001session.go\u3068\u3044\u3046controller\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4e3b\u306a\u6a5f\u80fd\u306f\n\u2460session\u69cb\u7bc9(cloneSession)\n\u2461Entity\u633f\u5165(InsertEntity)\n\u2462Entity\u306e\u524a\u9664(RemoveEntity)\n\u2463Collection\u306equery(queryCollection)\n\u2464\u691c\u7d22(Search)\n\n```Go:session.go\npackage controllers\n\nimport (\n\t\"labix.org/v2/mgo\"\n)\n\nvar (\n\tsession *mgo.Session\n\terr     error\n)\n\n// new session create\nfunc cloneSession(dialURL string) *mgo.Session {\n\tif session == nil {\n\t\tsession, err = mgo.Dial(dialURL)\n\t\tif err != nil {\n\t\t\tpanic(err) //no, not really\n\t\t}\n\t}\n\treturn session.Clone()\n}\n\n// insertEntity\nfunc InsertEntity(dbName string,\n\tcollection string,\n\tdialURL string,\n\tmodel interface{}) {\n\n\tsession := cloneSession(dialURL)\n\tdefer session.Close()\n\n\terr := session.DB(dbName).C(collection).Insert(model)\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// removeEntity\nfunc RemoveEntity(dbName string,\n\tcollection string,\n\tdialURL string,\n\tmodel interface{}) {\n\n\tsession := cloneSession(dialURL)\n\tdefer session.Close()\n\n\terr := session.DB(dbName).C(collection).Remove(model)\n\t//err := session.DB(dbName).C(collection).RemoveAll(model)\n\n\tif err != nil {\n\t\tpanic(err)\n\t}\n}\n\n// Query collection\nfunc queryCollection(dbName string,\n\tcollection string,\n\tdialURL string,\n\tquery func(c *mgo.Collection) error) error {\n\n\tsession := cloneSession(dialURL)\n\tdefer session.Close()\n\n\tc := session.DB(dbName).C(collection)\n\n\treturn query(c)\n}\n\n// Search\nfunc Search(q interface{},\n\tskip int,\n\tlimit int,\n\tdbName string,\n\tcollection string,\n\tdialURL string) (results []interface{}, errorCode string) {\n\n\terrorCode = \"\"\n\tquery := func(c *mgo.Collection) error {\n\t\tfn := c.Find(q).Skip(skip).Limit(limit).All(&results)\n\t\tif limit < 0 {\n\t\t\tfn = c.Find(q).Skip(skip).All(&results)\n\t\t}\n\t\treturn fn\n\t}\n\n\tsearch := func() error {\n\t\treturn queryCollection(dbName, collection, dialURL, query)\n\t}\n\n\terr := search()\n\tif err != nil {\n\t\terrorCode = \"error\"\n\t}\n\n\treturn\n}\n```\n []interface{}\u3067\u53d7\u3051\u53d6\u308b\u3082\u3057\u304f\u306f\u3001\u8fd4\u308a\u5024\u3068\u3057\u3066\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u90e8\u5206\u306f\u9069\u5b9c\u4f7f\u7528\u3059\u308b\u69cb\u9020\u4f53\u306e\u30b9\u30e9\u30a4\u30b9\u306b\u7f6e\u304d\u63db\u3048\u308c\u3070\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u305d\u3046\u3067\u3059\u306d\u3002\n Search\u306f\u304b\u306a\u308a\u5384\u4ecb\u3067\u3059\u306d\u3002\u79c1\u3082\u30b3\u30fc\u30c9\u7406\u89e3\u3059\u308b\u306e\u306b\u82e6\u52b4\u3057\u307e\u3057\u305f\u3002query\u306fObjective-C\u306eBlocks\u306e\u3088\u3046\u306a\u4f7f\u3044\u65b9\u3067\u3059\u306d\u3002query\u3092\u305d\u306e\u5834\u306e\u5f15\u6570\u3067\u95a2\u6570\u5b9f\u88c5\u3057\u3066\u3001\u305d\u308c\u3092queryCollection\u95a2\u6570\u306e\u5f15\u6570\u3067\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u6b21\u56de\u306fapp.go\u306e\u4e2d\u3067\u5177\u4f53\u7684\u306a\u51e6\u7406\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n"}