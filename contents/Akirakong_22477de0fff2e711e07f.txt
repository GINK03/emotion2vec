{"context": " More than 1 year has passed since last update.2015/11/1\u3068\u3044\u3046DateTime\u578b\u306e\u5909\u6570\u3092\n\u4e8c\u3007\u4e00\u4e94\u5e74\u5341\u4e00\u6708\u4e00\u65e5\u3068\u3044\u3046\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\nusing System;\n\nnamespace Common\n{\n    /// <summary>\n    ///\u65e5\u4ed8\u3092\u6f22\u5b57\u306b\u5909\u63db\u3059\u308b\n    /// </summary>\n    public class DateFormatter\n    {\n        //\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n        public DateFormatter()\n        {\n\n        }\n\n\n\n        public static String toKanji(DateTime  date)\n        {\n            //\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f\u65e5\u4ed8\u3092\u6587\u5b57\u5217\u578b\u306b\u5909\u63db\u3057\u3066\u4ee3\u5165\n            String dateTime = date.ToString(\"yyyy\u5e74MM\u6708dd\u65e5\");\n\n            //\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u304c\u6570\u5024\u306b\u5909\u63db\u53ef\u80fd\u3060\u3063\u305f\u306a\u3089\u3070\u3001\u3053\u306e\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\n            int number = 0;\n\n            //tryParse\u306e\u7d50\u679c\n            bool result;\n\n            //\u5909\u63db\u7528\u306e\u914d\u5217\n            String[] kanjiArr = {\"\u3007\",\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\",\"\u4e03\",\"\u516b\",\"\u4e5d\"};\n            String[] kanjiArr2 = {\"\",\"\u5341\",\"\u4e8c\u5341\",\"\u4e09\u5341\"};\n\n            //\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30c8\u7528\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n            int i = 0;\n\n            //\u623b\u308a\u5024\n            String returnString = \"\";\n\n            //\u65e5\u4ed8\u3092\u4e00\u6587\u5b57\u3065\u3064\u6f22\u5b57\u306b\u5909\u63db\n            foreach (char c in dateTime)\n            {\n\n                //\u30ad\u30e3\u30e9\u578b\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n                String str = c.ToString();\n\n                //\u6570\u5024\u306a\u306e\u304b\u6f22\u5b57\u306a\u306e\u304b\u5224\u5225\n                result = TryParse(str, out number);\n\n                //\uff15\u6587\u5b57\u76ee\u307e\u305f\u306f8\u6587\u5b57\u76ee\u3067\u3042\u308c\u3070\u4e8c\u6841\u76ee\u3092\u5909\u63db\n                if(i == 5 || i ==8 )\n                {\n                    returnString += kanjiArr2[number];\n                    i++;\n                    //\u6b21\u306e\u30eb\u30fc\u30d7\u3078\n                    continue;\n                }\n\n                //\u6570\u5024\u3092\u6f22\u5b57\u306b\u7f6e\u304d\u63db\u3048\n                if(result == true)\n                {\n                    returnString += kanjiArr[number];\n\n                }\n                else\n                {\n                    returnString += c.ToString();\n                }\n                i++;\n\n            }\n\n            return returnString;\n\n        }\n\n\n\n        //\u6587\u5b57\u5217\u3092\u6570\u5b57\u306b\u5909\u63db\u53ef\u80fd\u304b\u5224\u65ad\u3059\u308b\n        //\u5909\u63db\u3067\u304d\u305f\u5834\u5408\u3001out\u306b\u305d\u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\u3002\n        private static bool TryParse(string value, out int result)\n        {\n            result = 0;\n\n            try\n            {\n                result = Int32.Parse(value);\n                return true;\n            }\n\n            //Parse\u306b\u5931\u6557 == \u4f8b\u5916\n            catch(FormatException)\n            {            \n                return false;\n            }\n\n            catch(OverflowException)\n            {\n                return false;\n            }\n        }\n\n\n\n\n    }\n}\n\n\n\n\nGithub\n\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u4e0b\u3055\u3044\u3002\nhttps://github.com/Akirakong/DateTimeFormatter\n\n2015/11/1\u3068\u3044\u3046DateTime\u578b\u306e\u5909\u6570\u3092\n\n\u4e8c\u3007\u4e00\u4e94\u5e74\u5341\u4e00\u6708\u4e00\u65e5\u3068\u3044\u3046\u6587\u5b57\u5217\u306b\u5909\u63db\u3057\u307e\u3059\u3002\n\n\n\n\n```csharp\nusing System;\n\nnamespace Common\n{\n\t/// <summary>\n\t///\u65e5\u4ed8\u3092\u6f22\u5b57\u306b\u5909\u63db\u3059\u308b\n\t/// </summary>\n\tpublic class DateFormatter\n\t{\n\t\t//\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n\t\tpublic DateFormatter()\n\t\t{\n\t\t\t\n\t\t}\n\n\n\n\t\tpublic static String toKanji(DateTime  date)\n\t\t{\n\t\t\t//\u5f15\u6570\u3067\u53d7\u3051\u53d6\u3063\u305f\u65e5\u4ed8\u3092\u6587\u5b57\u5217\u578b\u306b\u5909\u63db\u3057\u3066\u4ee3\u5165\n\t\t\tString dateTime = date.ToString(\"yyyy\u5e74MM\u6708dd\u65e5\");\n\n\t\t\t//\u53d6\u308a\u51fa\u3057\u305f\u6587\u5b57\u304c\u6570\u5024\u306b\u5909\u63db\u53ef\u80fd\u3060\u3063\u305f\u306a\u3089\u3070\u3001\u3053\u306e\u5909\u6570\u306b\u4ee3\u5165\u3059\u308b\n\t\t\tint number = 0;\n\n\t\t\t//tryParse\u306e\u7d50\u679c\n\t\t\tbool result;\n\n\t\t\t//\u5909\u63db\u7528\u306e\u914d\u5217\n\t\t\tString[] kanjiArr = {\"\u3007\",\"\u4e00\",\"\u4e8c\",\"\u4e09\",\"\u56db\",\"\u4e94\",\"\u516d\",\"\u4e03\",\"\u516b\",\"\u4e5d\"};\n\t\t\tString[] kanjiArr2 = {\"\",\"\u5341\",\"\u4e8c\u5341\",\"\u4e09\u5341\"};\n\n\t\t\t//\u30eb\u30fc\u30d7\u30ab\u30a6\u30f3\u30c8\u7528\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n\t\t\tint i = 0;\n\n\t\t\t//\u623b\u308a\u5024\n\t\t\tString returnString = \"\";\n\n\t\t\t//\u65e5\u4ed8\u3092\u4e00\u6587\u5b57\u3065\u3064\u6f22\u5b57\u306b\u5909\u63db\n\t\t\tforeach (char c in dateTime)\n\t\t\t{\n\n\t\t\t\t//\u30ad\u30e3\u30e9\u578b\u3092\u6587\u5b57\u5217\u306b\u5909\u63db\n\t\t\t\tString str = c.ToString();\n\t\t\t\t\n\t\t\t\t//\u6570\u5024\u306a\u306e\u304b\u6f22\u5b57\u306a\u306e\u304b\u5224\u5225\n\t\t\t\tresult = TryParse(str, out number);\n\n\t\t\t\t//\uff15\u6587\u5b57\u76ee\u307e\u305f\u306f8\u6587\u5b57\u76ee\u3067\u3042\u308c\u3070\u4e8c\u6841\u76ee\u3092\u5909\u63db\n\t\t\t\tif(i == 5 || i ==8 )\n\t\t\t\t{\n\t\t\t\t\treturnString += kanjiArr2[number];\n\t\t\t\t\ti++;\n\t\t\t\t\t//\u6b21\u306e\u30eb\u30fc\u30d7\u3078\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//\u6570\u5024\u3092\u6f22\u5b57\u306b\u7f6e\u304d\u63db\u3048\n\t\t\t\tif(result == true)\n\t\t\t\t{\n\t\t\t\t\treturnString += kanjiArr[number];\n\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturnString += c.ToString();\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\treturn returnString;\n\n\t\t}\n\n\t\t\n\n\t\t//\u6587\u5b57\u5217\u3092\u6570\u5b57\u306b\u5909\u63db\u53ef\u80fd\u304b\u5224\u65ad\u3059\u308b\n\t\t//\u5909\u63db\u3067\u304d\u305f\u5834\u5408\u3001out\u306b\u305d\u306e\u5024\u3092\u4ee3\u5165\u3059\u308b\u3002\n\t\tprivate static bool TryParse(string value, out int result)\n\t\t{\n\t\t\tresult = 0;\n\n\t\t\ttry\n\t\t\t{\n\t\t\t\tresult = Int32.Parse(value);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//Parse\u306b\u5931\u6557 == \u4f8b\u5916\n\t\t\tcatch(FormatException)\n\t\t\t{            \n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tcatch(OverflowException)\n\t\t\t{\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\n\n\n\t}\n}\n\n\n\n```\nGithub\n\u3054\u81ea\u7531\u306b\u304a\u4f7f\u3044\u4e0b\u3055\u3044\u3002\nhttps://github.com/Akirakong/DateTimeFormatter\n", "tags": ["C#", "VisualStudio", "GUI"]}