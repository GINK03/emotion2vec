{"tags": ["Meshblu1.1.1", "docker1.5.0", "mosquitto1.3.0", "Node.js0.10.33", "mqtt 3.1 "], "context": " More than 1 year has passed since last update.Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3044Meshblu\u306eIoT\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u30ed\u30fc\u30ab\u30eb\u306b\u69cb\u7bc9\u3057\u307e\u3059\u3002GitHub\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u306fDockerfile\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u958b\u767a\u7528\u306bnode_modules\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3068docker restart\u304c\u3084\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u5c11\u3057\u69cb\u6210\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u6700\u5f8c\u306bMosquitto\u306e\u30b3\u30f3\u30c6\u30ca\u30922\u3064\u4f7f\u3044Pub/Sub\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nMeshblu\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089clone\u3057\u307e\u3059\u3002\n$ cd ~/docker_apps\n$ git clone https://github.com/octoblu/meshblu meshblu-dev\n$ cd meshblu-dev\n\n\nDockerfile\n\u6700\u521d\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u4fee\u6b63\u3057\u305fDockefile\u3067\u3059\u3002upstream\u306b\u983b\u7e41\u306b\u66f4\u65b0\u304c\u5165\u308b\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306a\u3069\u3042\u307e\u308a\u5909\u66f4\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n~/docker_apps/meshblu-dev/Dockerfile\nFROM ubuntu:12.04\n\nMAINTAINER Skynet https://skynet.im/ <chris+docker@skynet.im>\n\nRUN apt-get update -y --fix-missing\nRUN apt-get install -y python-software-properties\nRUN apt-get install -y build-essential\nRUN apt-get -y install libzmq-dev libavahi-compat-libdnssd-dev\n\nRUN add-apt-repository ppa:chris-lea/node.js\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" | tee -a /etc/apt/sources.list.d/10gen.list\nRUN apt-get update -y --fix-missing\nRUN apt-get -y install redis-server apt-utils supervisor nodejs\nRUN apt-get -y install -o apt::architecture=amd64 mongodb-10gen\n\nRUN sed -i 's/daemonize yes/daemonize no/g' /etc/redis/redis.conf\n\n#ADD . /var/www\n#RUN cd /var/www && npm install\n\nCOPY ./package.json /var/www/\nRUN mkdir -p /dist/node_modules && \\\n  ln -s /dist/node_modules /var/www/node_modules && \\\n  cd /var/www && npm install\n\n#ADD ./docker/config.js.docker /var/www/config.js\n#ADD ./docker/supervisor.conf /etc/supervisor/conf.d/supervisor.conf\nRUN mkdir /var/log/skynet\n\nEXPOSE 3000 5683 1883\n\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nVOLUME /etc/supervisor/conf.d\nCOPY . /var/www\n\n\n\n\u4e0d\u8db3\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8ffd\u52a0\ndocker build\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u306e\u3067\u3001zmq.h\u3068dns_sd.h\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n~/docker_apps/meshblu-dev/Dockerfile\nRUN apt-get -y install libzmq-dev libavahi-compat-libdnssd-dev\n\n\n\nnode_modules\u306e\u30b7\u30e0\u30ea\u30f3\u30af\n\u4ee5\u4e0b\u306e\u65b9\u91dd\u3067Dockerfile\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n\nnode_modules\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092/dist/node_modules\u306b\u4f5c\u6210\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f\u30b7\u30e0\u30ea\u30f3\u30af\u3092\u4f5c\u308b\nDockerfile\u306e\u6700\u5f8c\u306bCOPY\u30b3\u30de\u30f3\u30c9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3001\u30b3\u30fc\u30c9\u5909\u66f4\u5f8c\u306bnpm\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u8d77\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\n\n~/docker_apps/meshblu-dev/Dockerfile\n#ADD . /var/www\n#RUN cd /var/www && npm install\n\nCOPY ./package.json /var/www/\nRUN mkdir -p /dist/node_modules && \\\n  ln -s /dist/node_modules /var/www/node_modules && \\\n  cd /var/www && npm install\n\n\n\n./docker\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306fCOPY\u3057\u306a\u3044\n\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306econfig.js\u3092\u4fee\u6b63\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\n\n\n~/docker_apps/meshblu-dev/Dockerfile\n#ADD ./docker/config.js.docker /var/www/config.js\n#ADD ./docker/supervisor.conf /etc/supervisor/conf.d/supervisor.conf\n\n\n\nsupervisor.conf\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u4f5c\u6210\u3068\u3001\u6700\u5f8c\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30a4\u30e1\u30fc\u30b8\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n\n\n~/docker_apps/meshblu-dev/Dockerfile\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nVOLUME /etc/supervisor/conf.d\nCOPY . /var/www\n\n\n\nMQTT\u306e\u30dd\u30fc\u30c8\u8ffd\u52a0\nexpose\u306bMQTT\u306e1883\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n~/docker_apps/meshblu-dev/Dockerfile\nEXPOSE 3000 5683 1883\n\n\n\nDocker\u30db\u30b9\u30c8\u306e\u30b7\u30e0\u30ea\u30f3\u30af\n\u524d\u56denode_modules\u306e\u30b7\u30e0\u30ea\u30f3\u30af\u3068\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3063\u3066\u52b9\u7387\u5316\u3057\u305f\u3088\u3046\u306b\u3001node_modules\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u307f\u6709\u52b9\u306a\u30b7\u30e0\u30ea\u30f3\u30af\u3092Docker\u30db\u30b9\u30c8\u4e0a\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ ln -s /dist/node_modules ./node_modules\n\n\nsupervisor.conf\nSupervisor\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n~/docker_apps/meshblu-dev/docker/supervisor.conf\n[program:redis]\ncommand=/usr/bin/redis-server /etc/redis/redis.conf\nnumprocs=1\nautostart=true\nautorestart=true\n\n#[program:mongodb]\n#command=/usr/bin/mongod --config /etc/mongodb.conf\n#numprocs=1\n#autostart=true\n#autorestart=true\n\n[program:node]\n#command=/usr/bin/node /var/www/server.js --http --coap\ncommand=/usr/bin/node /var/www/server.js --http --coap --mqtt\nnumprocs=1\ndirectory=/var/www/\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nautostart=true\nautorestart=true\n\n\n\nMQTT Server\u3092\u8d77\u52d5\u3059\u308b\nserver.js\u8d77\u52d5\u6642\u306b--mqtt\u30d5\u30e9\u30b0\u3092\u8ffd\u52a0\u3057\u3066MQTT\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n~/docker_apps/meshblu-dev/docker/supervisor.conf\n[program:node]\n#command=/usr/bin/node /var/www/server.js --http --coap\ncommand=/usr/bin/node /var/www/server.js --http  --coap --mqtt\n\n\n\nMongoDB\u306f\u8d77\u52d5\u3057\u306a\u3044\n\u4eca\u56de\u306fRedis\u3060\u3051\u4f7f\u3046\u306e\u3067MongoDB\u306fSupervisor\u304b\u3089\u8d77\u52d5\u3055\u305b\u307e\u305b\u3093\u3002\n\n~/docker_apps/meshblu-dev/docker/supervisor.conf\n#[program:mongodb]\n#command=/usr/bin/mongod --config /etc/mongodb.conf\n#numprocs=1\n#autostart=true\n#autorestart=true\n\n\n\nconfig.js\n\u4eca\u56de\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u6b8b\u3059\u65b9\u91dd\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u306a\u3044\u306e\u3067\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306bnode_modules\u3082\u914d\u7f6e\u3057\u307e\u3059\u3002\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u30b3\u30f3\u30c6\u30ca\u306e\u914d\u5e03\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002docker/config.js.docker\u3067\u306a\u304f./config.js\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n~/docker_apps/meshblu-dev/config.js\n...\nmodule.exports = {\n  /*\n  mongo: {\n    databaseUrl: process.env.MONGODB_URI\n  },\n  */\n  port: parseInt(process.env.PORT) || 80,\n  /*\n  tls: {\n    sslPort: parseInt(process.env.SSL_PORT) || 443,\n    cert: process.env.SSL_CERT,\n    key: process.env.SSL_KEY\n  },\n  */\n...\n  mqtt: {\n    //databaseUrl: process.env.MQTT_DATABASE_URI,\n    port: parseInt(process.env.MQTT_PORT),\n    skynetPass: process.env.MQTT_PASSWORD\n  },\n\n\n\nMongoDB\u306f\u4f7f\u308f\u306a\u3044\nconfig.mqtt.databaseUrl\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068MondoDB\u306f\u4f7f\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002Node.js\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068MQTT\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fRedis\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u512a\u5148\u3057\u3066\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n~/docker_apps/meshblu-dev/config.js\nmodule.exports = {\n  /*\n  mongo: {\n    databaseUrl: \"mongodb://localhost:27017/skynet\",\n  },\n  */\n\n\n\nTLS/SSL\u306f\u4fdd\u7559\n\u8a3c\u660e\u66f8\u3092\u307e\u3060\u7528\u610f\u3057\u3066\u3044\u306a\u3044\u306e\u3067TLS/SSL\u306e\u8a2d\u5b9a\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\n~/docker_apps/meshblu-dev/config.js\n  /*\n  tls: {\n    sslPort: parseInt(process.env.SSL_PORT) || 443,\n    cert: process.env.SSL_CERT,\n    key: process.env.SSL_KEY\n  },\n  */\n\n\n\nMQTT Server\u7528\u306bskynetPass\u306a\u3069\u8a2d\u5b9a\n\u30b7\u30b9\u30c6\u30e0\u5185\u90e8\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306bskynet\u30e6\u30fc\u30b6\u30fc\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081MQTT\u30b5\u30fc\u30d0\u30fc\u7528\u306bskynetPass\u306e\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\u8d77\u52d5\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u9001\u4fe1\u3067\u304d\u306a\u304f\u306a\u308a\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u307e\u305b\u3093\u3002\u30e9\u30f3\u30c0\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nirb(main):001:0> o = [('a'..'z'), ('A'..'Z')].map { |i| i.to_a }.flatten\n=> [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\nirb(main):002:0> (0...44).map { o[rand(o.length)] }.join\n=> \"ZFiLQKSmFmaDgFVrZyTCVwsBUCUpWhdHhjVBoGxNnHaa\"\n\n\nDocker\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u8d77\u52d5\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ docker build -t meshblu-dev .\n\n\u74b0\u5883\u5909\u6570\u306b\u30dd\u30fc\u30c8\u756a\u53f7\u3084skynetPass\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084Supervisor\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u30a2\u30bf\u30c3\u30c1\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker run -d --name meshblu-dev \\\n  -p 3000:3000 \\\n  -p 5683:5683 \\\n  -p 1883:1883 \\\n  -e PORT=3000 \\\n  -e MQTT_PORT=1883 \\\n  -e MQTT_PASSWORD=ZFiLQKSmFmaDgFVrZyTCVwsBUCUpWhdHhjVBoGxNnHaa \\\n  -v $PWD:/var/www \\\n  -v $PWD/docker:/etc/supervisor/conf.d \\\n  meshblu-dev\n\n\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002HTTP(3000), CoAP(5683), MQTT(1883)\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n$ docker logs -f meshblu-dev\n...\nMM    MM              hh      bb      lll\nMMM  MMM   eee   sss  hh      bb      lll uu   uu\nMM MM MM ee   e s     hhhhhh  bbbbbb  lll uu   uu\nMM    MM eeeee   sss  hh   hh bb   bb lll uu   uu\nMM    MM  eeeee     s hh   hh bbbbbb  lll  uuuu u\n                 sss\nMeshblu (formerly skynet.im) development environment loaded...\n\nStarting CoAP... done.\nStarting HTTP/HTTPS... done.\n...\nStarting MQTT... done.\nCoAP listening at coap://localhost:5683\nHTTP listening at http://0.0.0.0:3000\n...\nMQTT listening at mqtt://0.0.0.0:1883\n...\n\nNode.js\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u4fee\u6b63\u3057\u305f\u3089\u3001docker restart\u3067\u53cd\u6620\u304c\u3067\u304d\u307e\u3059\n$ docker restart meshblu-dev\n\n\n\u30c7\u30d0\u30a4\u30b9/\u30ce\u30fc\u30c9\u306e\u767b\u9332\u3068\u7c21\u5358\u306aPub/Sub\nREST API\u304b\u3089Meshblu\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n$ curl http://localhost:3000/status\n{\"meshblu\":\"online\"}\n\n\u30b3\u30cd\u30af\u30c6\u30c3\u30c9\u30c7\u30d0\u30a4\u30b9\u3092\u7528\u610f\u3059\u308b\u524d\u306b\u3001\u30ce\u30fc\u30c9\u3068\u3057\u3066Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3044\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002Mosquitto\u306ePublish\u3068Subscribe\u7528\u306e2\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\nMQTT\u30ce\u30fc\u30c9\u306e\u767b\u9332\nREST API\u3092\u4f7f\u3063\u3066\u30ce\u30fc\u30c9\u306e\u767b\u9332\u3092\u3057\u307e\u3059\u3002\u30dc\u30c7\u30a3\u306b\u306f\u4efb\u610f\u306ekey/value\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u307e\u305amqtt-pub\u30b3\u30f3\u30c6\u30ca\u306e\u767b\u9332\u3092\u3057\u307e\u3059\u3002\u623b\u308a\u5024\u306eJSON\u304b\u3089uuid\u3068token\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u4eca\u5f8c\u3053\u306e\u30c7\u30d0\u30a4\u30b9/\u30ce\u30fc\u30c9\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u5834\u5408\u306b\u306f\u3053\u306euuid\u3068token\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n$ curl -X POST -d \"name=mqtt-pub&type=container\" \"http://localhost:3000/devices\"\n{\"uuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:07:26.621Z\",\"name\":\"mqtt-pub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\",\"token\":\"1fc767197e275a3cb79befbf38632e5c7ef8fbec\"}\n\nmqtt-sub\u30b3\u30f3\u30c6\u30ca\u3082\u540c\u69d8\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n$ curl -X POST -d \"name=mqtt-sub&type=container\" \"http://localhost:3000/devices\"\n{\"uuid\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:08:09.496Z\",\"name\":\"mqtt-sub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\",\"token\":\"86efacbbeb28dd56676df710cf4c1e7d2f05f762\"}\n\n\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002HTTP\u30d8\u30c3\u30c0\u306b\u306fuuid/token\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u5fc5\u8981\u3067\u3059\u3002\u4eca\u56de\u306fmqtt-sub\u306euuid\u3092\u8a8d\u8a3c\u306b\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001mqtt-pub\u306e\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3082\u53d6\u5f97\u3067\u304d\u3066\u3044\u307e\u3059\u3002uuid\u306b\u306f\u30aa\u30fc\u30ca\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3068\u6240\u6709\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8fba\u308a\u306f\u8abf\u67fb\u4e2d\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30d6\u30ed\u30fc\u30ab\u30fc\u306a\u306e\u3067\u4eca\u306e\u3068\u3053\u308d\u3059\u3079\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u898b\u3048\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n$ curl \"http://localhost:3000/devices\" \\\n  --header \"meshblu_auth_uuid: 38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\" \\\n  --header \"meshblu_auth_token: 86efacbbeb28dd56676df710cf4c1e7d2f05f762\"\n{\"devices\":[{\"uuid\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:08:09.496Z\",\"name\":\"mqtt-sub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\"},{\"uuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:07:26.621Z\",\"name\":\"mqtt-pub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\"}]}\n\n\nMosquitto\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\nMosquitto\u306e\u30b3\u30f3\u30c6\u30ca\u30922\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002Docker\u30a4\u30e1\u30fc\u30b8\u306fansi/mosquitto\u3092pull\u3057\u3066\u4f7f\u3044\u307e\u3059\u30021\u3064\u76ee\u306fmqtt-pub\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002\n$ docker pull ansi/mosquitto\n$ docker run --rm --name mqtt-pub -it ansi/mosquitto /bin/bash\nroot@b0468fe6e67e:/usr/local/src/mosquitto-1.3#\n\n\u5225\u306e\u30b7\u30a7\u30eb\u3092\u958b\u304d\u3001\u3082\u3046\u4e00\u3064mqtt-sub\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n$ docker run --rm --name mqtt-sub -it ansi/mosquitto /bin/bash\nroot@12b53215b59a:/usr/local/src/mosquitto-1.3#\n\n\u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306f/etc/ld.so.cache\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067mosquitto_sub\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\nmosquitto_sub: error while loading shared libraries: libmosquitto.so.1: cannot open shared object file: No such file or directory\n\nldconfig\u3092\u5b9f\u884c\u3057\u3066\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n$ ldconfig\n\n\nSubscribe (topic\u306f\u30c7\u30d0\u30a4\u30b9\u306euuid)\nSubscribe\u5074\u30b3\u30f3\u30c6\u30ca(mosquitto_sub)\u3067mosquitto_sub\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4efb\u610f\u306etopic\u3092subscribe\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30c7\u30d0\u30a4\u30b9\u306euuid\u306etopic\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002\n\nhost: Meshblu\u306e\u30dd\u30fc\u30c8\u3092\u30de\u30c3\u30d7\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\nport: MQTT Server\u306e\u30dd\u30fc\u30c8\ntopic: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\nusername: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\npassword: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306etoken\n\n$ MQTT_SUB_UUID=38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_SUB_PASS=86efacbbeb28dd56676df710cf4c1e7d2f05f762\n$ mosquitto_sub -h 10.3.0.230 -p 1883 \\\n  -t $MQTT_SUB_UUID \\\n  -u $MQTT_SUB_UUID \\\n  -P $MQTT_SUB_PASS \\\n  -d\nClient mosqsub/17-12b53215b59a sending CONNECT\nClient mosqsub/17-12b53215b59a received CONNACK\nClient mosqsub/17-12b53215b59a sending SUBSCRIBE (Mid: 1, Topic: 38cc2270-cc5b-11e4-80ac-dbe1b8e07fba, QoS: 0)\nClient mosqsub/17-12b53215b59a received SUBACK\nSubscribed (mid: 1): 0\nClient mosqsub/17-12b53215b59a sending PINGREQ\nClient mosqsub/17-12b53215b59a received PINGRESP\n\n\nPublish\u5074\u30b3\u30f3\u30c6\u30ca (topic\u306fmessage)\nPublish\u5074\u30b3\u30f3\u30c6\u30ca(mqtt-pub)\u3067mosquitto_pub\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306etopic\u306fmessage\u3067\u56fa\u5b9a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nhost: Meshblu\u306e\u30dd\u30fc\u30c8\u3092\u30de\u30c3\u30d7\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\nport: MQTT Server\u306e\u30dd\u30fc\u30c8\ntopic: message\u3067\u56fa\u5b9a\nusername: publish\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\npassword: publish\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306etoken\nmessage: JSON\u5f62\u5f0f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3001{\"devices\": [\"xxx\",\"yyy\"], \"payload\": {\"aaa\":\"bbb\"}}\n\npublish\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306fJSON\u5f62\u5f0f\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u6c7a\u307e\u3063\u3066\u3044\u307e\u3059\u3002devices\u30ad\u30fc\u306b\u306f\u9001\u4fe1\u5148\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Array\u3067\u8907\u6570\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002payload\u3082\u30ad\u30fc\u304c\u56fa\u5b9a\u3067\u3059\u3002\u3053\u308c\u4ee5\u5916\u3067\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u4fe1\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n$ MQTT_SUB_UUID=38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_PUB_UUID=1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_PUB_PASS=1fc767197e275a3cb79befbf38632e5c7ef8fbec\n$ mosquitto_pub -h 10.3.0.230 -p 1883 \\\n  -t message \\\n  -m '{\"devices\": \"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\", \"payload\": {\"red\":\"on\"}}'\\\n  -u 1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba \\\n  -P 1fc767197e275a3cb79befbf38632e5c7ef8fbec \\\n  -d\nClient mosqpub/19-b0468fe6e67e sending CONNECT\nClient mosqpub/19-b0468fe6e67e received CONNACK\nClient mosqpub/19-b0468fe6e67e sending PUBLISH (d0, q0, r0, m1, 'message', ... (76 bytes))\nClient mosqpub/19-b0468fe6e67e sending DISCONNECT\n\n\nSubscribe\u5074\u30b3\u30f3\u30c6\u30ca\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\nSubscribe\u5074\u30b3\u30f3\u30c6\u30ca(mqtt-sub)\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304d\u6a19\u6e96\u51fa\u529b\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092topic\u306b\u3057\u3066subscribe\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001message\u306etopic\u306bpublish\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u305a\u3089\u3044\u3067\u3059\u304c\u30de\u30eb\u30c1\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3053\u3046\u3044\u3063\u305f\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n...\nClient mosqsub/17-12b53215b59a received PUBLISH (d0, q0, r0, m0, '38cc2270-cc5b-11e4-80ac-dbe1b8e07fba', ... (150 bytes))\n{\"topic\":\"message\",\"data\":{\"devices\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"payload\":{\"red\":\"on\"},\"fromUuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\"}}\n\nDocker\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3044[Meshblu](https://developer.octoblu.com/)\u306eIoT\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u3092\u30ed\u30fc\u30ab\u30eb\u306b\u69cb\u7bc9\u3057\u307e\u3059\u3002GitHub\u306e[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/octoblu/meshblu)\u306b\u306f[Dockerfile](https://github.com/octoblu/meshblu/blob/master/Dockerfile)\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u958b\u767a\u7528\u306b`node_modules`\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3068`docker restart`\u304c\u3084\u308a\u3084\u3059\u3044\u3088\u3046\u306b\u5c11\u3057\u69cb\u6210\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u6700\u5f8c\u306b[Mosquitto](http://mosquitto.org/)\u306e\u30b3\u30f3\u30c6\u30ca\u30922\u3064\u4f7f\u3044Pub/Sub\u306e\u30c6\u30b9\u30c8\u3092\u3057\u3066\u307f\u307e\u3059\u3002\n\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\n[Meshblu](https://github.com/octoblu/meshblu)\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089clone\u3057\u307e\u3059\u3002\n\n``` bash\n$ cd ~/docker_apps\n$ git clone https://github.com/octoblu/meshblu meshblu-dev\n$ cd meshblu-dev\n```\n\n## Dockerfile\n\n\u6700\u521d\u306b[\u30ea\u30dd\u30b8\u30c8\u30ea](https://github.com/octoblu/meshblu/blob/master/Dockerfile)\u304b\u3089\u4fee\u6b63\u3057\u305fDockefile\u3067\u3059\u3002upstream\u306b\u983b\u7e41\u306b\u66f4\u65b0\u304c\u5165\u308b\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306a\u3069\u3042\u307e\u308a\u5909\u66f4\u3057\u306a\u3044\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\nFROM ubuntu:12.04\n\nMAINTAINER Skynet https://skynet.im/ <chris+docker@skynet.im>\n\nRUN apt-get update -y --fix-missing\nRUN apt-get install -y python-software-properties\nRUN apt-get install -y build-essential\nRUN apt-get -y install libzmq-dev libavahi-compat-libdnssd-dev\n\nRUN add-apt-repository ppa:chris-lea/node.js\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 7F0CEB10\nRUN echo \"deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen\" | tee -a /etc/apt/sources.list.d/10gen.list\nRUN apt-get update -y --fix-missing\nRUN apt-get -y install redis-server apt-utils supervisor nodejs\nRUN apt-get -y install -o apt::architecture=amd64 mongodb-10gen\n\nRUN sed -i 's/daemonize yes/daemonize no/g' /etc/redis/redis.conf\n\n#ADD . /var/www\n#RUN cd /var/www && npm install\n\nCOPY ./package.json /var/www/\nRUN mkdir -p /dist/node_modules && \\\n  ln -s /dist/node_modules /var/www/node_modules && \\\n  cd /var/www && npm install\n\n#ADD ./docker/config.js.docker /var/www/config.js\n#ADD ./docker/supervisor.conf /etc/supervisor/conf.d/supervisor.conf\nRUN mkdir /var/log/skynet\n\nEXPOSE 3000 5683 1883\n\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nVOLUME /etc/supervisor/conf.d\nCOPY . /var/www\n```\n\n### \u4e0d\u8db3\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u8ffd\u52a0\n\n`docker build`\u4e2d\u306b\u30a8\u30e9\u30fc\u304c\u51fa\u305f\u306e\u3067\u3001zmq.h\u3068dns_sd.h\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\nRUN apt-get -y install libzmq-dev libavahi-compat-libdnssd-dev\n```\n\n### node_modules\u306e\u30b7\u30e0\u30ea\u30f3\u30af\n\n\u4ee5\u4e0b\u306e\u65b9\u91dd\u3067Dockerfile\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n* `node_modules`\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092`/dist/node_modules`\u306b\u4f5c\u6210\u3057\u3066\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u306f\u30b7\u30e0\u30ea\u30f3\u30af\u3092\u4f5c\u308b\n* Dockerfile\u306e\u6700\u5f8c\u306bCOPY\u30b3\u30de\u30f3\u30c9\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3001\u30b3\u30fc\u30c9\u5909\u66f4\u5f8c\u306bnpm\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u8d77\u304d\u306a\u3044\u3088\u3046\u306b\u3059\u308b\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\n#ADD . /var/www\n#RUN cd /var/www && npm install\n\nCOPY ./package.json /var/www/\nRUN mkdir -p /dist/node_modules && \\\n  ln -s /dist/node_modules /var/www/node_modules && \\\n  cd /var/www && npm install\n```\n\n* ./docker\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306fCOPY\u3057\u306a\u3044\n* \u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306econfig.js\u3092\u4fee\u6b63\u3057\u3066\u30d3\u30eb\u30c9\u3059\u308b\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\n#ADD ./docker/config.js.docker /var/www/config.js\n#ADD ./docker/supervisor.conf /etc/supervisor/conf.d/supervisor.conf\n```\n\n* supervisor.conf\u306e\u30dc\u30ea\u30e5\u30fc\u30e0\u4f5c\u6210\u3068\u3001\u6700\u5f8c\u306b\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30a4\u30e1\u30fc\u30b8\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\nVOLUME /etc/supervisor/conf.d\nCOPY . /var/www\n```\n\n### MQTT\u306e\u30dd\u30fc\u30c8\u8ffd\u52a0\n\nexpose\u306bMQTT\u306e1883\u30dd\u30fc\u30c8\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n``` bash:~/docker_apps/meshblu-dev/Dockerfile\nEXPOSE 3000 5683 1883\n```\n\n## Docker\u30db\u30b9\u30c8\u306e\u30b7\u30e0\u30ea\u30f3\u30af\n\n\u524d\u56de[node_modules\u306e\u30b7\u30e0\u30ea\u30f3\u30af\u3068\u30dc\u30ea\u30e5\u30fc\u30e0\u3092\u4f7f\u3063\u3066\u52b9\u7387\u5316](/2015/03/13/node-modules-symlinks-in-docker/)\u3057\u305f\u3088\u3046\u306b\u3001`node_modules`\u30b3\u30f3\u30c6\u30ca\u5185\u3067\u306e\u307f\u6709\u52b9\u306a\u30b7\u30e0\u30ea\u30f3\u30af\u3092Docker\u30db\u30b9\u30c8\u4e0a\u306e\u4f5c\u696d\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5185\u306b\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n``` bash\n$ ln -s /dist/node_modules ./node_modules\n```\n\n## supervisor.conf\n\nSupervisor\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n``` bash:~/docker_apps/meshblu-dev/docker/supervisor.conf\n[program:redis]\ncommand=/usr/bin/redis-server /etc/redis/redis.conf\nnumprocs=1\nautostart=true\nautorestart=true\n\n#[program:mongodb]\n#command=/usr/bin/mongod --config /etc/mongodb.conf\n#numprocs=1\n#autostart=true\n#autorestart=true\n\n[program:node]\n#command=/usr/bin/node /var/www/server.js --http --coap\ncommand=/usr/bin/node /var/www/server.js --http --coap --mqtt\nnumprocs=1\ndirectory=/var/www/\nstdout_logfile=/dev/fd/1\nstdout_logfile_maxbytes=0\nredirect_stderr=true\nautostart=true\nautorestart=true\n```\n\n### MQTT Server\u3092\u8d77\u52d5\u3059\u308b\n\nserver.js\u8d77\u52d5\u6642\u306b`--mqtt`\u30d5\u30e9\u30b0\u3092\u8ffd\u52a0\u3057\u3066MQTT\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n``` bash:~/docker_apps/meshblu-dev/docker/supervisor.conf\n[program:node]\n#command=/usr/bin/node /var/www/server.js --http --coap\ncommand=/usr/bin/node /var/www/server.js --http  --coap --mqtt\n```\n\n### MongoDB\u306f\u8d77\u52d5\u3057\u306a\u3044\n\n\u4eca\u56de\u306fRedis\u3060\u3051\u4f7f\u3046\u306e\u3067MongoDB\u306fSupervisor\u304b\u3089\u8d77\u52d5\u3055\u305b\u307e\u305b\u3093\u3002\n\n``` bash:~/docker_apps/meshblu-dev/docker/supervisor.conf\n#[program:mongodb]\n#command=/usr/bin/mongod --config /etc/mongodb.conf\n#numprocs=1\n#autostart=true\n#autorestart=true\n```\n\n## config.js\n\n\u4eca\u56de\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u3092\u6b8b\u3059\u65b9\u91dd\u3067\u3059\u3002\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7528\u306b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u306a\u3044\u306e\u3067\u3001\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b`node_modules`\u3082\u914d\u7f6e\u3057\u307e\u3059\u3002\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3054\u3068\u30b3\u30f3\u30c6\u30ca\u306e\u914d\u5e03\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u30a2\u30bf\u30c3\u30c1\u3057\u307e\u3059\u3002`docker/config.js.docker`\u3067\u306a\u304f`./config.js`\u3092\u4fee\u6b63\u3057\u307e\u3059\u3002\n\n``` js:~/docker_apps/meshblu-dev/config.js\n...\nmodule.exports = {\n  /*\n  mongo: {\n    databaseUrl: process.env.MONGODB_URI\n  },\n  */\n  port: parseInt(process.env.PORT) || 80,\n  /*\n  tls: {\n    sslPort: parseInt(process.env.SSL_PORT) || 443,\n    cert: process.env.SSL_CERT,\n    key: process.env.SSL_KEY\n  },\n  */\n...\n  mqtt: {\n    //databaseUrl: process.env.MQTT_DATABASE_URI,\n    port: parseInt(process.env.MQTT_PORT),\n    skynetPass: process.env.MQTT_PASSWORD\n  },\n```\n\n### MongoDB\u306f\u4f7f\u308f\u306a\u3044\n\nconfig.mqtt.databaseUrl\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3059\u308b\u3068MondoDB\u306f\u4f7f\u308f\u308c\u306a\u304f\u306a\u308a\u307e\u3059\u3002Node.js\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3068MQTT\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u306fRedis\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308c\u3070\u512a\u5148\u3057\u3066\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n``` js:~/docker_apps/meshblu-dev/config.js\nmodule.exports = {\n  /*\n  mongo: {\n    databaseUrl: \"mongodb://localhost:27017/skynet\",\n  },\n  */\n```\n\n### TLS/SSL\u306f\u4fdd\u7559\n\n\u8a3c\u660e\u66f8\u3092\u307e\u3060\u7528\u610f\u3057\u3066\u3044\u306a\u3044\u306e\u3067TLS/SSL\u306e\u8a2d\u5b9a\u306f\u30b3\u30e1\u30f3\u30c8\u30a2\u30a6\u30c8\u3057\u307e\u3059\u3002\n\n``` js:~/docker_apps/meshblu-dev/config.js\n  /*\n  tls: {\n    sslPort: parseInt(process.env.SSL_PORT) || 443,\n    cert: process.env.SSL_CERT,\n    key: process.env.SSL_KEY\n  },\n  */\n```\n\n### MQTT Server\u7528\u306bskynetPass\u306a\u3069\u8a2d\u5b9a\n\n\u30b7\u30b9\u30c6\u30e0\u5185\u90e8\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306bskynet\u30e6\u30fc\u30b6\u30fc\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081MQTT\u30b5\u30fc\u30d0\u30fc\u7528\u306bskynetPass\u306e\u6307\u5b9a\u306f\u5fc5\u9808\u3067\u3059\u3002\u8d77\u52d5\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u9001\u4fe1\u3067\u304d\u306a\u304f\u306a\u308a\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u307e\u305b\u3093\u3002\u30e9\u30f3\u30c0\u30e0\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u4f5c\u6210\u3057\u3066\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n``` ruby\nirb(main):001:0> o = [('a'..'z'), ('A'..'Z')].map { |i| i.to_a }.flatten\n=> [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\nirb(main):002:0> (0...44).map { o[rand(o.length)] }.join\n=> \"ZFiLQKSmFmaDgFVrZyTCVwsBUCUpWhdHhjVBoGxNnHaa\"\n```\n\n## Docker\u30a4\u30e1\u30fc\u30b8\u306e\u30d3\u30eb\u30c9\u3068\u8d77\u52d5\n\nDocker\u30a4\u30e1\u30fc\u30b8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n``` bash\n$ docker build -t meshblu-dev .\n```\n\n\u74b0\u5883\u5909\u6570\u306b\u30dd\u30fc\u30c8\u756a\u53f7\u3084skynetPass\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\u30ab\u30ec\u30f3\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3084Supervisor\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u30dc\u30ea\u30e5\u30fc\u30e0\u3067\u30a2\u30bf\u30c3\u30c1\u3057\u3066\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n``` bash\n$ docker run -d --name meshblu-dev \\\n  -p 3000:3000 \\\n  -p 5683:5683 \\\n  -p 1883:1883 \\\n  -e PORT=3000 \\\n  -e MQTT_PORT=1883 \\\n  -e MQTT_PASSWORD=ZFiLQKSmFmaDgFVrZyTCVwsBUCUpWhdHhjVBoGxNnHaa \\\n  -v $PWD:/var/www \\\n  -v $PWD/docker:/etc/supervisor/conf.d \\\n  meshblu-dev\n```\n\n\u30ed\u30b0\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002HTTP(3000), CoAP(5683), MQTT(1883)\u306e\u30b5\u30fc\u30d0\u30fc\u304c\u8d77\u52d5\u3057\u307e\u3057\u305f\u3002\n\n``` bash\n$ docker logs -f meshblu-dev\n...\nMM    MM              hh      bb      lll\nMMM  MMM   eee   sss  hh      bb      lll uu   uu\nMM MM MM ee   e s     hhhhhh  bbbbbb  lll uu   uu\nMM    MM eeeee   sss  hh   hh bb   bb lll uu   uu\nMM    MM  eeeee     s hh   hh bbbbbb  lll  uuuu u\n                 sss\nMeshblu (formerly skynet.im) development environment loaded...\n\nStarting CoAP... done.\nStarting HTTP/HTTPS... done.\n...\nStarting MQTT... done.\nCoAP listening at coap://localhost:5683\nHTTP listening at http://0.0.0.0:3000\n...\nMQTT listening at mqtt://0.0.0.0:1883\n...\n```\n\nNode.js\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3092\u4fee\u6b63\u3057\u305f\u3089\u3001docker restart\u3067\u53cd\u6620\u304c\u3067\u304d\u307e\u3059\n\n``` bash\n$ docker restart meshblu-dev\n```\n\n## \u30c7\u30d0\u30a4\u30b9/\u30ce\u30fc\u30c9\u306e\u767b\u9332\u3068\u7c21\u5358\u306aPub/Sub\n\nREST API\u304b\u3089Meshblu\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n``` bash\n$ curl http://localhost:3000/status\n{\"meshblu\":\"online\"}\n```\n\n\u30b3\u30cd\u30af\u30c6\u30c3\u30c9\u30c7\u30d0\u30a4\u30b9\u3092\u7528\u610f\u3059\u308b\u524d\u306b\u3001\u30ce\u30fc\u30c9\u3068\u3057\u3066Docker\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3044\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002[Mosquitto](http://mosquitto.org/)\u306ePublish\u3068Subscribe\u7528\u306e2\u3064\u306e\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n### MQTT\u30ce\u30fc\u30c9\u306e\u767b\u9332\n\nREST API\u3092\u4f7f\u3063\u3066\u30ce\u30fc\u30c9\u306e\u767b\u9332\u3092\u3057\u307e\u3059\u3002\u30dc\u30c7\u30a3\u306b\u306f\u4efb\u610f\u306ekey/value\u3092\u767b\u9332\u3067\u304d\u307e\u3059\u3002\u307e\u305a`mqtt-pub`\u30b3\u30f3\u30c6\u30ca\u306e\u767b\u9332\u3092\u3057\u307e\u3059\u3002\u623b\u308a\u5024\u306eJSON\u304b\u3089`uuid`\u3068`token`\u3092\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\u4eca\u5f8c\u3053\u306e\u30c7\u30d0\u30a4\u30b9/\u30ce\u30fc\u30c9\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u3084\u308a\u3068\u308a\u3059\u308b\u5834\u5408\u306b\u306f\u3053\u306e`uuid`\u3068`token`\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` bash\n$ curl -X POST -d \"name=mqtt-pub&type=container\" \"http://localhost:3000/devices\"\n{\"uuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:07:26.621Z\",\"name\":\"mqtt-pub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\",\"token\":\"1fc767197e275a3cb79befbf38632e5c7ef8fbec\"}\n```\n\n`mqtt-sub`\u30b3\u30f3\u30c6\u30ca\u3082\u540c\u69d8\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n``` bash\n$ curl -X POST -d \"name=mqtt-sub&type=container\" \"http://localhost:3000/devices\"\n{\"uuid\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:08:09.496Z\",\"name\":\"mqtt-sub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\",\"token\":\"86efacbbeb28dd56676df710cf4c1e7d2f05f762\"}\n```\n\n\u767b\u9332\u3057\u305f\u30c7\u30d0\u30a4\u30b9\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002HTTP\u30d8\u30c3\u30c0\u306b\u306f`uuid/token`\u306e\u8a8d\u8a3c\u60c5\u5831\u304c\u5fc5\u8981\u3067\u3059\u3002\u4eca\u56de\u306f`mqtt-sub`\u306euuid\u3092\u8a8d\u8a3c\u306b\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001`mqtt-pub`\u306e\u30c7\u30d0\u30a4\u30b9\u60c5\u5831\u3082\u53d6\u5f97\u3067\u304d\u3066\u3044\u307e\u3059\u3002uuid\u306b\u306f\u30aa\u30fc\u30ca\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3068\u6240\u6709\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u306f\u64cd\u4f5c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u8fba\u308a\u306f\u8abf\u67fb\u4e2d\u3067\u3059\u3002\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30d6\u30ed\u30fc\u30ab\u30fc\u306a\u306e\u3067\u4eca\u306e\u3068\u3053\u308d\u3059\u3079\u3066\u306e\u30c7\u30d0\u30a4\u30b9\u304c\u898b\u3048\u3066\u3082\u554f\u984c\u3042\u308a\u307e\u305b\u3093\u3002\n\n``` bash\n$ curl \"http://localhost:3000/devices\" \\\n  --header \"meshblu_auth_uuid: 38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\" \\\n  --header \"meshblu_auth_token: 86efacbbeb28dd56676df710cf4c1e7d2f05f762\"\n{\"devices\":[{\"uuid\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:08:09.496Z\",\"name\":\"mqtt-sub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\"},{\"uuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\",\"online\":false,\"timestamp\":\"2015-03-17T04:07:26.621Z\",\"name\":\"mqtt-pub\",\"type\":\"container\",\"ipAddress\":\"172.17.42.1\"}]}\n```\n\n### Mosquitto\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\nMosquitto\u306e\u30b3\u30f3\u30c6\u30ca\u30922\u3064\u8d77\u52d5\u3057\u307e\u3059\u3002Docker\u30a4\u30e1\u30fc\u30b8\u306f[ansi/mosquitto](https://registry.hub.docker.com/u/ansi/mosquitto/)\u3092pull\u3057\u3066\u4f7f\u3044\u307e\u3059\u30021\u3064\u76ee\u306f`mqtt-pub`\u30b3\u30f3\u30c6\u30ca\u3067\u3059\u3002\n\n``` bash\n$ docker pull ansi/mosquitto\n$ docker run --rm --name mqtt-pub -it ansi/mosquitto /bin/bash\nroot@b0468fe6e67e:/usr/local/src/mosquitto-1.3#\n```\n\n\u5225\u306e\u30b7\u30a7\u30eb\u3092\u958b\u304d\u3001\u3082\u3046\u4e00\u3064`mqtt-sub`\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n``` bash\n$ docker run --rm --name mqtt-sub -it ansi/mosquitto /bin/bash\nroot@12b53215b59a:/usr/local/src/mosquitto-1.3#\n```\n\n\u3053\u306e\u30b3\u30f3\u30c6\u30ca\u306f`/etc/ld.so.cache`\u304c\u66f4\u65b0\u3055\u308c\u3066\u3044\u306a\u3044\u3088\u3046\u306a\u306e\u3067`mosquitto_sub`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\u3002\n\n``` bash\nmosquitto_sub: error while loading shared libraries: libmosquitto.so.1: cannot open shared object file: No such file or directory\n```\n\nldconfig\u3092\u5b9f\u884c\u3057\u3066\u5171\u6709\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\n\n``` bash\n$ ldconfig\n```\n\n### Subscribe (topic\u306f\u30c7\u30d0\u30a4\u30b9\u306euuid)\n\nSubscribe\u5074\u30b3\u30f3\u30c6\u30ca(`mosquitto_sub`)\u3067`mosquitto_sub`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u4efb\u610f\u306etopic\u3092subscribe\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u30c7\u30d0\u30a4\u30b9\u306euuid\u306etopic\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3057\u307e\u3059\u3002\n\n* host: Meshblu\u306e\u30dd\u30fc\u30c8\u3092\u30de\u30c3\u30d7\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\n* port: MQTT Server\u306e\u30dd\u30fc\u30c8\n* topic: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\n* username: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\n* password: subscribe\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306etoken\n\n``` bash\n$ MQTT_SUB_UUID=38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_SUB_PASS=86efacbbeb28dd56676df710cf4c1e7d2f05f762\n$ mosquitto_sub -h 10.3.0.230 -p 1883 \\\n  -t $MQTT_SUB_UUID \\\n  -u $MQTT_SUB_UUID \\\n  -P $MQTT_SUB_PASS \\\n  -d\nClient mosqsub/17-12b53215b59a sending CONNECT\nClient mosqsub/17-12b53215b59a received CONNACK\nClient mosqsub/17-12b53215b59a sending SUBSCRIBE (Mid: 1, Topic: 38cc2270-cc5b-11e4-80ac-dbe1b8e07fba, QoS: 0)\nClient mosqsub/17-12b53215b59a received SUBACK\nSubscribed (mid: 1): 0\nClient mosqsub/17-12b53215b59a sending PINGREQ\nClient mosqsub/17-12b53215b59a received PINGRESP\n```\n\n### Publish\u5074\u30b3\u30f3\u30c6\u30ca (topic\u306fmessage)\n\nPublish\u5074\u30b3\u30f3\u30c6\u30ca(`mqtt-pub`)\u3067`mosquitto_pub`\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\u5834\u5408\u306etopic\u306f`message`\u3067\u56fa\u5b9a\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n* host: Meshblu\u306e\u30dd\u30fc\u30c8\u3092\u30de\u30c3\u30d7\u3057\u3066\u3044\u308bDocker\u30db\u30b9\u30c8\n* port: MQTT Server\u306e\u30dd\u30fc\u30c8\n* topic: `message`\u3067\u56fa\u5b9a\n* username: publish\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306euuid\n* password: publish\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u306etoken\n* message: JSON\u5f62\u5f0f\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3001{\"devices\": [\"xxx\",\"yyy\"], \"payload\": {\"aaa\":\"bbb\"}}\n\npublish\u3059\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306fJSON\u5f62\u5f0f\u3067\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u304c\u6c7a\u307e\u3063\u3066\u3044\u307e\u3059\u3002`devices`\u30ad\u30fc\u306b\u306f\u9001\u4fe1\u5148\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002Array\u3067\u8907\u6570\u6307\u5b9a\u3082\u53ef\u80fd\u3067\u3059\u3002`payload`\u3082\u30ad\u30fc\u304c\u56fa\u5b9a\u3067\u3059\u3002\u3053\u308c\u4ee5\u5916\u3067\u306f\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u9001\u4fe1\u304c\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\n\n``` bash\n$ MQTT_SUB_UUID=38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_PUB_UUID=1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\n$ MQTT_PUB_PASS=1fc767197e275a3cb79befbf38632e5c7ef8fbec\n$ mosquitto_pub -h 10.3.0.230 -p 1883 \\\n  -t message \\\n  -m '{\"devices\": \"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\", \"payload\": {\"red\":\"on\"}}'\\\n  -u 1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba \\\n  -P 1fc767197e275a3cb79befbf38632e5c7ef8fbec \\\n  -d\nClient mosqpub/19-b0468fe6e67e sending CONNECT\nClient mosqpub/19-b0468fe6e67e received CONNACK\nClient mosqpub/19-b0468fe6e67e sending PUBLISH (d0, q0, r0, m1, 'message', ... (76 bytes))\nClient mosqpub/19-b0468fe6e67e sending DISCONNECT\n```\n\n### Subscribe\u5074\u30b3\u30f3\u30c6\u30ca\u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d7\u4fe1\n\nSubscribe\u5074\u30b3\u30f3\u30c6\u30ca(`mqtt-sub`)\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u5c4a\u304d\u6a19\u6e96\u51fa\u529b\u3057\u307e\u3059\u3002\u30c7\u30d0\u30a4\u30b9\u306euuid\u3092topic\u306b\u3057\u3066subscribe\u3057\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001`message`\u306etopic\u306bpublish\u3057\u3066\u3044\u307e\u3059\u3002\u3061\u3087\u3063\u3068\u308f\u304b\u308a\u305a\u3089\u3044\u3067\u3059\u304c\u30de\u30eb\u30c1\u30d7\u30ed\u30c8\u30b3\u30eb\u306b\u5bfe\u5fdc\u3059\u308b\u305f\u3081\u3053\u3046\u3044\u3063\u305f\u4ed5\u69d8\u306b\u306a\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n``` bash\n...\nClient mosqsub/17-12b53215b59a received PUBLISH (d0, q0, r0, m0, '38cc2270-cc5b-11e4-80ac-dbe1b8e07fba', ... (150 bytes))\n{\"topic\":\"message\",\"data\":{\"devices\":\"38cc2270-cc5b-11e4-80ac-dbe1b8e07fba\",\"payload\":{\"red\":\"on\"},\"fromUuid\":\"1f3bcae0-cc5b-11e4-80ac-dbe1b8e07fba\"}}\n```\n"}