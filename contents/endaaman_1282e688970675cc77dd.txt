{"context": " More than 1 year has passed since last update.koa\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3042\u307e\u308a\u3057\u3063\u304f\u308a\u304f\u308b\u3082\u306e\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u8a8d\u8a3c\u51e6\u7406\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u7d20\u4eba\u306a\u306e\u3067\u3001\u4e2d\u8eab\u306f\u3068\u3082\u304b\u304f\u300ckoa\u3044\u3044\u611f\u3058\u3060\u300d\u304f\u3089\u3044\u306b\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070\u7d50\u69cb\u3067\u3059\u3002\n\u4e3b\u306bSPA\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u4f7f\u3046\u7528\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002https://github.com/endaaman/koa-jwt-example \u306b\u5168\u30b3\u30fc\u30c9\u4e57\u305b\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u30b4\u30fc\u30eb\n\n\u8a8d\u8a3c\u65b9\u6cd5\nAuthorization: Bearer <JSON WEB TOKEN>\u3068\u3044\u3046\u30d8\u30c3\u30c0\u3067\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\n\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\uff08\u30ed\u30b0\u30a4\u30f3\uff09\nPOST /api/session\u3067\n\n\u30ea\u30af\u30a8\u30b9\u30c8\n{\n    \"username\": \"hoge\",\n    \"password\": \"fuga\"\n}\n\n\n\u306b\u5bfe\u3057\u3066\u3001\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\n{\n  \"token\": \"<JSON WEB TOKEN>\",\n  \"user\": {\n    \"_id\": \"<ID>\",\n    \"username\": \"hoge\"\n  }\n}\n\n\n\u307f\u305f\u3044\u306b\u53d6\u5f97\u3067\u304d\u308c\u3070\u826f\u3044\u3002\n\n\u8a8d\u8a3c\u3092\u639b\u3051\u305f\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\nauth = require '../lib/auth'\n\nrouter.get '/', auth, (next)->\n    @body = @user\n    yield next\n\n\n\u3053\u3093\u306a\u611f\u3058\u66f8\u3044\u3066\u3001\u9069\u5207\u306a\u30c8\u30fc\u30af\u30f3\u3067\u306a\u3051\u308c\u3070401\u3092\u8fd4\u3057\u3066\u3001\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308c\u3070\u5fa9\u53f7\u5316\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u3001\u3064\u307e\u308a\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\n{\n  \"_id\": \"<ID>\",\n  \"username\": \"hoge\"\n}\n\n\n\u3053\u3093\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308c\u3070\u826f\u3044\u3002\n\n\u5b9f\u88c5\n\n\u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u8d77\u52d5\u306b\u3064\u3044\u3066\n\npackage.json\n{\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node --harmony bootstrap.js \",\n    \"pm2\": \"pm2 start bootstrap.js --watch --node-args \\\"--harmony\\\" --name example\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^0.8.5\",\n    \"coffee-script\": \"^1.9.3\",\n    \"jsonwebtoken\": \"^5.0.5\",\n    \"koa\": \"^1.0.0\",\n    \"koa-bodyparser\": \"^2.0.1\",\n    \"koa-json\": \"^1.1.1\",\n    \"koa-logger\": \"^1.3.0\",\n    \"koa-router\": \"^5.1.2\",\n    \"lodash\": \"^3.10.1\",\n    \"mongoose\": \"^4.1.4\",\n    \"q\": \"^1.4.1\"\n  }\n}\n\n\n2015\u5e749\u67081\u65e5\u6642\u70b9\u306e\u3082\u306e\u3067\u3059\u3002\u7d20\u306eJavaScript\u3092\u66f8\u304f\u306e\u304c\u5f97\u610f\u3067\u306f\u306a\u3044\u306e\u3067CoffeeScript\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002koa\u3092\u4f7f\u3046\u306b\u306f--harmony\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u8d77\u52d5\u7528\u306bbootstrap.js\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\u3042\u3068pm2\u3092--watch\u3067\u4f7f\u3046\u3068\u304b\u306a\u308a\u6357\u308a\u307e\u3059\u3002\n\n./bootstrap.js\nrequire('coffee-script/register');\nrequire('./app');\n\n\n\n./app.coffee\nkoa = require 'koa'\nmongoose = require 'mongoose'\n\nmongoose.model 'User', require './model/user'\nmongoose.connect 'mongodb://localhost:27017/example'\n\napi = do require 'koa-router'\napi.use '/users', require './api/user'\napi.use '/session', require './api/session'\n\napp = koa()\napp\n.use do require 'koa-logger'\n.use do require 'koa-bodyparser'\n.use do require 'koa-json'\n.use api.routes()\n.use api.allowedMethods()\n.listen 3000\n\n\n\n\u4f7f\u3063\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3064\u3044\u3066\n\nlodash\nObject\u3068Array\u306b\u5bfe\u3059\u308b\u3044\u3044\u611f\u3058\u306e\u64cd\u4f5c\u304c\u63c3\u3063\u3066\u307e\u3059\u3002\n\nbcrypt\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u3044\u3044\u611f\u3058\u306b\u6697\u53f7\u5316\u30fb\u7167\u5408\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\nmongoose\nMongoDB\u3092node\u304b\u3089\u4f7f\u3046\u3068\u304d\u306e\u304a\u306a\u3058\u307f\u306e\u3084\u3064\u3002Promise\u3092\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3001koa\u306e\u76f8\u6027\u3082\u3044\u3044\u611f\u3058\u3002\n\nkoa-router\nkoa\u306e\u516c\u5f0f\u306bkoa-route\u3068\u3044\u3046\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001koa-router\u306e\u591a\u6a5f\u80fd\u3067\u3044\u3044\u611f\u3058\u306bREST\u3063\u307d\u304f\u304b\u3051\u308b\u306e\u3067\u3053\u3063\u3061\u3092\u4f7f\u3044\u307e\u3059\u3002\n\nkoa-logger\n  <-- GET /\n  --> GET / 404 18ms -\n\n\u307f\u305f\u3044\u306b\u3044\u3044\u611f\u3058\u306b\u30ed\u30b0\u3092\u5410\u3044\u3066\u304f\u308c\u307e\u3059\u3002\n\nkoa-bodyparser\n\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3044\u3044\u611f\u3058\u306b\u30d1\u30fc\u30b9this.request.body\u306b\u66f8\u3044\u3066\u304f\u308c\u307e\u3059\u3002\n\nkoa-json\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3044\u3044\u611f\u3058\u306bJSON\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\u8a8d\u8a3c\u51e6\u7406\u3092\u66f8\u304f\u524d\u306e\u4e0b\u6e96\u5099\n\n\u30e6\u30fc\u30b6\u30fc\u306e\u30e2\u30c7\u30eb\n\n./model/user.coffee\nmongoose = require 'mongoose'\n\nSchema = mongoose.Schema\nmodule.exports = new Schema\n    username:\n        type: String\n        required: true\n        index:\n            unique: true\n    hashed_password:\n        type: String\n        required: true\n\n\n\u7279\u306b\u8aac\u660e\u4ed8\u3051\u52a0\u3048\u308b\u8aac\u660e\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u307e\u307e\u3060\u3068\u5b9f\u969b\u306b\u306f\u4f7f\u3044\u306b\u304f\u3044\u306e\u3067approved\u3068\u304badmin\u3068\u304b\u751f\u3084\u3057\u3066\u3001\u30e1\u30fc\u30eb\u627f\u8a8d\u3084\u7ba1\u7406\u4eba\u306e\u627f\u8a8d\u3068\u304b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u9375\n\u6697\u53f7\u5316\u30fb\u7167\u5408\u306b\u5fc5\u8981\u306a\u9375\u3002\u74b0\u5883\u5909\u6570\u304b\u3089\u5f15\u3063\u5f35\u308a\u307e\u3059\u3002\n\n./secret.coffee\nmodule.exports = do ->\n    if not process.env.SECRET\n        console.warn 'secret was set dengerous key'\n    process.env.SECRET or 'THIS_IS_DENGEROUS_SECRET'\n\n\n\u74b0\u5883\u5909\u6570\u306b\u5b58\u5728\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u306f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u8a8d\u8a3c\u90e8\u5206\n\u672c\u984c\u3067\u3059\u3002JWT\u3092\u4f7f\u3063\u305f\u8a8d\u8a3c\u3092\u884c\u3046\u306b\u3042\u305f\u3063\u3066\u3001\u5fc5\u9808\u3068\u306a\u308b\u3084\u3084\u3053\u3057\u3044\u51e6\u7406\u306f\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6697\u53f7\u5316\nPOST /users\u306e\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3067\u884c\u3044\u307e\u3059\u3002./api/user.coffee\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7167\u5408\nPOST /session\u306e\u30ed\u30b0\u30a4\u30f3\u3067\u884c\u3044\u307e\u3059\u3002./api/session.coffee\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316\n\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u7684\u306b\u4f7f\u3044\u307e\u3059\u3002./lib/auth.coffee\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u3053\u306e\uff13\u70b9\u3067\u3059\u3002\n\n\u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316\n\u8aac\u660e\u306e\u90fd\u5408\u4e0a\u3001\u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316\u304b\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\n./lib/auth.coffee\n_ = require 'lodash'\nQ = require 'q'\njwt = require 'jsonwebtoken'\n\nsecret = require '../secret'\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\njwtVerify = Q.nbind jwt.verify, jwt\n\nmodule.exports = (next)->\n    # \u30d8\u30c3\u30c0\u30fc\u30b9\u30bf\u30a4\u30eb\n    #   Authorization: Bearer TOKEN_STRING\n\n    # `Authorization`\u30d8\u30c3\u30c0\u3092\u78ba\u8a8d\u3057\u307e\u3059\n    if not @request.header.authorization?\n        @throw 401\n        return\n\n    # `Authorization`\u30d8\u30c3\u30c0\u306e\u5024\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\n    parts = @request.header.authorization.split ' '\n    validTokenStyle = parts.length is 2 and parts[0] is 'Bearer'\n\n    if not validTokenStyle\n        @throw 401\n        return\n\n    # \u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\n    token = parts[1]\n\n    # \u30c8\u30fc\u30af\u30f3\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\n    # \u4e0d\u6b63\u306a\u30c8\u30fc\u30af\u30f3\u3067\u3042\u308c\u3070\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067try catch\u3067\u6355\u6349\u3057\u307e\u3059\n    try\n        decoded = yield jwtVerify token, secret\n    catch\n        @throw 401\n        return\n\n    # `jwt.verify`\u306e\u623b\u308a\u5024\u306b\u306f\u3001\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30a4\u30f3\u3057\u305f\u6642\u523b\u306e`iat`\u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e00\u7dd2\u306b\u53d6\u308c\u307e\u3059\u304c\n    # \u4eca\u56de\u306f\u4e0d\u8981\u306a\u306e\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3060\u3051pick\u3057\u307e\u3059\n    @user =  _.pick decoded, ['_id', 'username']\n\n    yield next\n\n\n\n\u3000JWT\u306f\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u5fa9\u53f7\u5316\u3059\u308b\u3068\u30c8\u30fc\u30af\u30f3\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u306e\u3067\u30c8\u30fc\u30af\u30f3\u306e\u7167\u5408\u3068\u8a8d\u8a3c\u3060\u3051\u3092\u884c\u3046\u306e\u3067\u3042\u308c\u3070DB\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3057\u307e\u305b\u3093\u3002\n\u3000\u3053\u308c\u306fJWT\u306e\u6700\u5927\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u3053\u306e\u70b9\u306b\u3042\u308b\u3068\u540c\u6642\u306b\u3001\u6271\u3044\u306b\u60a9\u3080\u90e8\u5206\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u30c8\u30fc\u30af\u30f3\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30ac\u30c3\u30c4\u30ea\u66f8\u304d\u8fbc\u3093\u3067\u3057\u307e\u3046\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u524a\u9664\u306a\u3069\u304c\u884c\u308f\u308c\u305f\u5834\u5408\u306b\u3001\u3059\u3067\u306b\u5b58\u5728\u3057\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u3092\u901a\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\u3000\u305f\u3060\u3001\u30c8\u30fc\u30af\u30f3\u7528\u306b\u30c6\u30fc\u30d6\u30eb/\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u306a\u3044\u3067\u6e08\u3080\u70b9\u3067\u306f\u4f9d\u7136\u6709\u7528\u3067\u3001\u5b9f\u969b\u306b\u904b\u7528\u3059\u308b\u306b\u306fid\u3060\u3051sign\u3057\u3066\u304a\u3044\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u81ea\u4f53\u306fDB\u304b\u3089\u6539\u3081\u3066\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3000\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30ec\u30d9\u30eb\u3067\u306f\u8ffd\u3044\u51fa\u3055\u306a\u3044\u3051\u3069\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u6b32\u3057\u3044\u5834\u5408\u306f\u3001./lib/auth.coffee\u306e@throw 401\u3092yeild next\u306b\u3059\u308b\u3068\u3044\u3044\u611f\u3058\u3067\u3059\u3002\n\u3000\n\u3000\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6697\u53f7\u5316\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u90e8\u5206\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u540d\u3068\u6697\u53f7\u5316\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u3092DB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n./api/user.coffee\n_ = require 'lodash'\nQ = require 'q'\nbcrypt = require 'bcrypt'\njwt = require 'jsonwebtoken'\nmongoose = require 'mongoose'\n\nsecret = require '../secret'\nauth = require '../lib/auth'\nUser = mongoose.model 'User'\n\nrouter = do require 'koa-router'\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\nbcryptGenSalt = Q.nbind bcrypt.genSalt, bcrypt\nbcryptHash = Q.nbind bcrypt.hash, bcrypt\n\n\n# \u30e6\u30fc\u30b6\u30fc\u767b\u9332\nrouter.post '/', (next)->\n    # \u7c21\u6613\u7684\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    valid = @request.body.username and @request.body.password\n    if not valid\n        @throw 400\n\n    # salt\u3092\u4f5c\u308a\u307e\u3059\n    salt = yield bcryptGenSalt 10\n    # \u5869\u3092\u632f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092hash\u5316\u3057\u307e\u3059\n    hashed_password = yield bcryptHash @request.body.password, salt\n\n    # salt\u306fpassword\u306b\u542b\u307e\u308c\u308b\u306e\u3067salt\u306f\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\n    user = new User\n        username: @request.body.username\n        hashed_password: hashed_password\n\n    # index\u3067unique\u5236\u7d04\u3092\u304b\u3051\u3066\u3044\u308b\u306e\u3067`username`\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3068\u5931\u6557\u3057\u307e\u3059\n    try\n        yield user.save()\n    catch\n        @throw 400\n\n    @status = 201\n    yield next\n\n\n# \u30e6\u30fc\u30b6\u30fc\u4e00\u89a7\nrouter.get '/', auth, (next)->\n    q = User.find {}\n    docs = yield q.select '_id username'\n    @body = docs\n    yield next\n\n\nmodule.exports = router.routes()\n\n\nGET /users\u304c\u82e5\u5e72\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u307e\u3059\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u306e\u5931\u6557\u306b\u306f\u57fa\u672c\u7684\u306b400\u3092\u8fd4\u3057\u307e\u3059\u3002bcrypt.hash\u306f\u3001\u51fa\u529b\u3055\u308c\u305f\u3082\u306e\u3092\u307f\u308c\u3070\u5206\u304b\u308b\u3093\u3067\u3059\u304c\u3001salt\u304c\u305d\u308c\u81ea\u4f53\u306b\u542b\u307e\u308c\u308b\u306e\u3067salt\u4fdd\u5b58\u306f\u4e0d\u8981\u3067\u3059\u3002\n\u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7167\u5408\n\n./api/session.coffee\n_ = require 'lodash'\nQ = require 'q'\nbcrypt = require 'bcrypt'\njwt = require 'jsonwebtoken'\nmongoose = require 'mongoose'\n\nauth = require '../lib/auth'\nUser = mongoose.model 'User'\nsecret = require '../secret'\nrouter = do require 'koa-router'\n\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\nbcryptCompare = Q.nbind bcrypt.compare, bcrypt\njwtVerify = Q.nbind jwt.verify, jwt\n\n\n# \u30ed\u30b0\u30a4\u30f3\u90e8\u5206\nrouter.post '/', (next)->\n    # `username`\u3067\u8a72\u5f53\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u5f15\u3063\u5f35\u308a\u307e\u3059\n    q = User.findOne username: @request.body.username\n    doc = yield q.exec()\n    if not doc\n        @throw 401\n        return\n\n    # \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7167\u5408\u3057\u307e\u3059\n    ok = yield bcryptCompare @request.body.password, doc.hashed_password\n    if not ok\n        @throw 401\n        return\n\n    # `hashed_password`\u306f\u53d6\u308a\u9664\u3044\u3066\u304a\u304d\u307e\u3059\n    user = _.pick doc, ['_id', 'username']\n\n    # \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u30c8\u30fc\u30af\u30f3\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\n    # \u7b2c\u4e00\u5f15\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u66f8\u304d\u63db\u3048\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\n    # \u30af\u30ed\u30fc\u30f3\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\n    token = jwt.sign _.clone(user), secret\n\n    # \u30c8\u30fc\u30af\u30f3\u3068\u30e6\u30fc\u30b6\u30fc\u304c\u63c3\u3063\u305f\u306e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\n    @body =\n        token: token\n        user: user\n    @status = 201\n    yield next\n\n\n# \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u53d6\u5f97\nrouter.get '/', auth, (next)->\n    @body = @user\n    yield next\n\n\nmodule.exports = router.routes()\n\n\n\n\u5fc5\u8981\u306a\u8aac\u660e\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u305f\u306e\u3067\u3042\u307e\u308a\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u306d\u3002\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u3082\u306e\u306f\u5168\u3066\u63c3\u3044\u307e\u3057\u305f\u3002\n\n\u52d5\u304b\u3057\u3066\u307f\u308b\nhttps://github.com/endaaman/koa-jwt-example \u3092clone\u3057\u3066npm install\u3057\u3066npm start\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u30dd\u30fc\u30c8\u3084MongoDB\u306e\u8a2d\u5b9a\u306f./app.coffee\u3092\u9069\u5f53\u306b\u3044\u3058\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\n\ncurl\ncurl -v \\\n    -X POST \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -d '{\"username\": \"hoge\", \"password\": \"fuga\"}' \\\n    http://localhost:3000/users\n\n\n201\u304c\u8fd4\u308c\u3070OK\u3002\n\n\u30ed\u30b0\u30a4\u30f3\n\ncurl\ncurl -v \\\n    -X POST \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -d '{\"username\": \"hoge\", \"password\": \"fuga\"}' \\\n    http://localhost:3000/session\n\n\n\u30c8\u30fc\u30af\u30f3\u3068\u767b\u9332\u306b\u4f7f\u3063\u305f\u60c5\u5831\u304c\u3068\u308c\u308c\u3070OK\n{\n  \"token\": \"<JSON WEB TOKEN>\",\n  \"user\": {\n    \"_id\": \"<USER ID>\",\n    \"username\": \"hoge\"\n  }\n}\n\n\n\u8a8d\u8a3c\u72b6\u614b\u306e\u78ba\u8a8d\n\u30ed\u30b0\u30a4\u30f3\u3067\u3068\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u98db\u3070\u3057\u3066\n\ncurl\ncurl -v \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -H 'Authorization: Bearer <JSON WEB TOKEN>' \\\n    http://localhost:3000/session\n\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u3068\u308c\u307e\u3059\u3002\n{\n  \"_id\": \"<USER ID>\",\n  \"username\": \"hoge\"\n}\n\n\n\u6700\u5f8c\u306b\nkoa\u306f\u975e\u540c\u671f\u51e6\u7406\u306b\u3042\u308c\u3053\u308c\u306b\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u304c\u307b\u3069\u3093\u3069\u7121\u3044\u306e\u3067\u3001\u975e\u5e38\u306b\u8133\u306b\u3084\u3055\u3057\u3044\u3067\u3059\u3002\n\u4f55\u304b\u8aa4\u3063\u305f\u60c5\u5831\u3084\u8aa4\u89e3\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306a\u308aTwitter\u306a\u308a\u3067\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u5c11\u3057\u3067\u3082\u5f79\u306b\u7acb\u3063\u305f\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308b\u65b9\u304c\u3044\u308c\u3070\u3001\u5e78\u3044\u3067\u3059\u3002\n\n`koa`\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u3042\u307e\u308a\u3057\u3063\u304f\u308a\u304f\u308b\u3082\u306e\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u81ea\u5206\u3067\u8a8d\u8a3c\u51e6\u7406\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\u3002\u7d20\u4eba\u306a\u306e\u3067\u3001\u4e2d\u8eab\u306f\u3068\u3082\u304b\u304f\u300ckoa\u3044\u3044\u611f\u3058\u3060\u300d\u304f\u3089\u3044\u306b\u601d\u3063\u3066\u3082\u3089\u3048\u308c\u3070\u7d50\u69cb\u3067\u3059\u3002\n\n\u4e3b\u306bSPA\u306e\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3067\u4f7f\u3046\u7528\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002https://github.com/endaaman/koa-jwt-example \u306b\u5168\u30b3\u30fc\u30c9\u4e57\u305b\u3066\u3042\u308a\u307e\u3059\u3002\n\n\n## \u30b4\u30fc\u30eb\n\n### \u8a8d\u8a3c\u65b9\u6cd5\n`Authorization: Bearer <JSON WEB TOKEN>`\u3068\u3044\u3046\u30d8\u30c3\u30c0\u3067\u8a8d\u8a3c\u3057\u307e\u3059\u3002\n\n\n### \u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\uff08\u30ed\u30b0\u30a4\u30f3\uff09\n\n`POST /api/session`\u3067\n\n```json:\u30ea\u30af\u30a8\u30b9\u30c8\n{\n    \"username\": \"hoge\",\n    \"password\": \"fuga\"\n}\n```\n\u306b\u5bfe\u3057\u3066\u3001\n\n```json:\u30ec\u30b9\u30dd\u30f3\u30b9\n{\n  \"token\": \"<JSON WEB TOKEN>\",\n  \"user\": {\n    \"_id\": \"<ID>\",\n    \"username\": \"hoge\"\n  }\n}\n```\n\u307f\u305f\u3044\u306b\u53d6\u5f97\u3067\u304d\u308c\u3070\u826f\u3044\u3002\n\n### \u8a8d\u8a3c\u3092\u639b\u3051\u305f\u3044\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n\n```coffee:\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3060\u3051\nauth = require '../lib/auth'\n\nrouter.get '/', auth, (next)->\n\t@body = @user\n    yield next\n```\n\u3053\u3093\u306a\u611f\u3058\u66f8\u3044\u3066\u3001\u9069\u5207\u306a\u30c8\u30fc\u30af\u30f3\u3067\u306a\u3051\u308c\u3070`401`\u3092\u8fd4\u3057\u3066\u3001\u8a8d\u8a3c\u3055\u308c\u3066\u3044\u308c\u3070\u5fa9\u53f7\u5316\u3055\u308c\u305f\u30e6\u30fc\u30b6\u30fc\u3001\u3064\u307e\u308a\n\n```json:\u30ec\u30b9\u30dd\u30f3\u30b9\n{\n  \"_id\": \"<ID>\",\n  \"username\": \"hoge\"\n}\n```\n\u3053\u3093\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u8fd4\u308c\u3070\u826f\u3044\u3002\n\n## \u5b9f\u88c5\n\n### \u5fc5\u8981\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u8d77\u52d5\u306b\u3064\u3044\u3066\n\n```json:package.json\n{\n  \"private\": true,\n  \"scripts\": {\n    \"start\": \"node --harmony bootstrap.js \",\n    \"pm2\": \"pm2 start bootstrap.js --watch --node-args \\\"--harmony\\\" --name example\"\n  },\n  \"dependencies\": {\n    \"bcrypt\": \"^0.8.5\",\n    \"coffee-script\": \"^1.9.3\",\n    \"jsonwebtoken\": \"^5.0.5\",\n    \"koa\": \"^1.0.0\",\n    \"koa-bodyparser\": \"^2.0.1\",\n    \"koa-json\": \"^1.1.1\",\n    \"koa-logger\": \"^1.3.0\",\n    \"koa-router\": \"^5.1.2\",\n    \"lodash\": \"^3.10.1\",\n    \"mongoose\": \"^4.1.4\",\n    \"q\": \"^1.4.1\"\n  }\n}\n```\n2015\u5e749\u67081\u65e5\u6642\u70b9\u306e\u3082\u306e\u3067\u3059\u3002\u7d20\u306eJavaScript\u3092\u66f8\u304f\u306e\u304c\u5f97\u610f\u3067\u306f\u306a\u3044\u306e\u3067CoffeeScript\u3092\u4f7f\u3063\u3066\u3044\u304d\u307e\u3059\u3002`koa`\u3092\u4f7f\u3046\u306b\u306f`--harmony`\u30aa\u30d7\u30b7\u30e7\u30f3\u304c\u5fc5\u8981\u306b\u306a\u308b\u306e\u3067\u3001\u8d77\u52d5\u7528\u306b`bootstrap.js`\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3042\u3068`pm2`\u3092`--watch`\u3067\u4f7f\u3046\u3068\u304b\u306a\u308a\u6357\u308a\u307e\u3059\u3002\n\n```js:./bootstrap.js\nrequire('coffee-script/register');\nrequire('./app');\n```\n\n```coffee:./app.coffee\nkoa = require 'koa'\nmongoose = require 'mongoose'\n\nmongoose.model 'User', require './model/user'\nmongoose.connect 'mongodb://localhost:27017/example'\n\napi = do require 'koa-router'\napi.use '/users', require './api/user'\napi.use '/session', require './api/session'\n\napp = koa()\napp\n.use do require 'koa-logger'\n.use do require 'koa-bodyparser'\n.use do require 'koa-json'\n.use api.routes()\n.use api.allowedMethods()\n.listen 3000\n```\n\n### \u4f7f\u3063\u3066\u3044\u308b\u30e2\u30b8\u30e5\u30fc\u30eb\u306b\u3064\u3044\u3066\n\n#### lodash\nObject\u3068Array\u306b\u5bfe\u3059\u308b\u3044\u3044\u611f\u3058\u306e\u64cd\u4f5c\u304c\u63c3\u3063\u3066\u307e\u3059\u3002\n\n#### bcrypt\n\u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u3044\u3044\u611f\u3058\u306b\u6697\u53f7\u5316\u30fb\u7167\u5408\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n#### mongoose\nMongoDB\u3092node\u304b\u3089\u4f7f\u3046\u3068\u304d\u306e\u304a\u306a\u3058\u307f\u306e\u3084\u3064\u3002Promise\u3092\u8fd4\u3059\u3053\u3068\u3082\u3067\u304d\u308b\u306e\u3067\u3001koa\u306e\u76f8\u6027\u3082\u3044\u3044\u611f\u3058\u3002\n\n#### koa-router\n \n`koa`\u306e\u516c\u5f0f\u306b`koa-route`\u3068\u3044\u3046\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u304c\u3001`koa-router`\u306e\u591a\u6a5f\u80fd\u3067\u3044\u3044\u611f\u3058\u306bREST\u3063\u307d\u304f\u304b\u3051\u308b\u306e\u3067\u3053\u3063\u3061\u3092\u4f7f\u3044\u307e\u3059\u3002\n  \n\n\n#### koa-logger\n \n```\n  <-- GET /\n  --> GET / 404 18ms -\n```\n\u307f\u305f\u3044\u306b\u3044\u3044\u611f\u3058\u306b\u30ed\u30b0\u3092\u5410\u3044\u3066\u304f\u308c\u307e\u3059\u3002\n  \n#### koa-bodyparser\n\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3044\u3044\u611f\u3058\u306b\u30d1\u30fc\u30b9`this.request.body`\u306b\u66f8\u3044\u3066\u304f\u308c\u307e\u3059\u3002\n\n#### koa-json\n\u30ec\u30b9\u30dd\u30f3\u30b9\u3092\u3044\u3044\u611f\u3058\u306bJSON\u306b\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\n## \u8a8d\u8a3c\u51e6\u7406\u3092\u66f8\u304f\u524d\u306e\u4e0b\u6e96\u5099\n\n### \u30e6\u30fc\u30b6\u30fc\u306e\u30e2\u30c7\u30eb\n\n```js:./model/user.coffee\nmongoose = require 'mongoose'\n\nSchema = mongoose.Schema\nmodule.exports = new Schema\n    username:\n        type: String\n        required: true\n        index:\n            unique: true\n    hashed_password:\n        type: String\n        required: true\n```\n\u7279\u306b\u8aac\u660e\u4ed8\u3051\u52a0\u3048\u308b\u8aac\u660e\u306f\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u306e\u307e\u307e\u3060\u3068\u5b9f\u969b\u306b\u306f\u4f7f\u3044\u306b\u304f\u3044\u306e\u3067`approved`\u3068\u304b`admin`\u3068\u304b\u751f\u3084\u3057\u3066\u3001\u30e1\u30fc\u30eb\u627f\u8a8d\u3084\u7ba1\u7406\u4eba\u306e\u627f\u8a8d\u3068\u304b\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\n### \u9375\n\u6697\u53f7\u5316\u30fb\u7167\u5408\u306b\u5fc5\u8981\u306a\u9375\u3002\u74b0\u5883\u5909\u6570\u304b\u3089\u5f15\u3063\u5f35\u308a\u307e\u3059\u3002\n\n```coffee:./secret.coffee\nmodule.exports = do ->\n    if not process.env.SECRET\n        console.warn 'secret was set dengerous key'\n    process.env.SECRET or 'THIS_IS_DENGEROUS_SECRET'\n```\n\n\u74b0\u5883\u5909\u6570\u306b\u5b58\u5728\u3057\u3066\u3044\u306a\u304f\u3066\u3082\u52d5\u304f\u3088\u3046\u306b\u306f\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u8a8d\u8a3c\u90e8\u5206\n\n\u672c\u984c\u3067\u3059\u3002JWT\u3092\u4f7f\u3063\u305f\u8a8d\u8a3c\u3092\u884c\u3046\u306b\u3042\u305f\u3063\u3066\u3001\u5fc5\u9808\u3068\u306a\u308b\u3084\u3084\u3053\u3057\u3044\u51e6\u7406\u306f\n\n* __\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6697\u53f7\u5316__\n  `POST /users`\u306e\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3067\u884c\u3044\u307e\u3059\u3002`./api/user.coffee`\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n* __\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7167\u5408__\n  `POST /session`\u306e\u30ed\u30b0\u30a4\u30f3\u3067\u884c\u3044\u307e\u3059\u3002`./api/session.coffee`\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n* __\u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316__\n  \u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u7684\u306b\u4f7f\u3044\u307e\u3059\u3002`./lib/auth.coffee`\u306b\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\u3053\u306e\uff13\u70b9\u3067\u3059\u3002\n\n\n### \u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316\n\u8aac\u660e\u306e\u90fd\u5408\u4e0a\u3001\u30c8\u30fc\u30af\u30f3\u306e\u5fa9\u53f7\u5316\u304b\u3089\u8aac\u660e\u3057\u307e\u3059\u3002\n\n\n```coffee:./lib/auth.coffee\n_ = require 'lodash'\nQ = require 'q'\njwt = require 'jsonwebtoken'\n\nsecret = require '../secret'\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\njwtVerify = Q.nbind jwt.verify, jwt\n\nmodule.exports = (next)->\n    # \u30d8\u30c3\u30c0\u30fc\u30b9\u30bf\u30a4\u30eb\n    #   Authorization: Bearer TOKEN_STRING\n\n    # `Authorization`\u30d8\u30c3\u30c0\u3092\u78ba\u8a8d\u3057\u307e\u3059\n    if not @request.header.authorization?\n        @throw 401\n        return\n\n    # `Authorization`\u30d8\u30c3\u30c0\u306e\u5024\u306e\u30b9\u30bf\u30a4\u30eb\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\n    parts = @request.header.authorization.split ' '\n    validTokenStyle = parts.length is 2 and parts[0] is 'Bearer'\n\n    if not validTokenStyle\n        @throw 401\n        return\n\n    # \u30c8\u30fc\u30af\u30f3\u3092\u53d6\u5f97\u3057\u307e\u3059\n    token = parts[1]\n\n    # \u30c8\u30fc\u30af\u30f3\u3092\u30c7\u30b3\u30fc\u30c9\u3057\u307e\u3059\u3002\n    # \u4e0d\u6b63\u306a\u30c8\u30fc\u30af\u30f3\u3067\u3042\u308c\u3070\u30a8\u30e9\u30fc\u3092\u8d77\u3053\u3059\u306e\u3067try catch\u3067\u6355\u6349\u3057\u307e\u3059\n    try\n        decoded = yield jwtVerify token, secret\n    catch\n        @throw 401\n        return\n\n    # `jwt.verify`\u306e\u623b\u308a\u5024\u306b\u306f\u3001\u30c8\u30fc\u30af\u30f3\u3092\u30b5\u30a4\u30f3\u3057\u305f\u6642\u523b\u306e`iat`\u3068\u3044\u3046\u30d5\u30a3\u30fc\u30eb\u30c9\u304c\u4e00\u7dd2\u306b\u53d6\u308c\u307e\u3059\u304c\n    # \u4eca\u56de\u306f\u4e0d\u8981\u306a\u306e\u3067\u3001\u5fc5\u8981\u306a\u30d5\u30a3\u30fc\u30eb\u30c9\u3060\u3051pick\u3057\u307e\u3059\n    @user =  _.pick decoded, ['_id', 'username']\n\n    yield next\n\n```\n\n\u3000JWT\u306f\u30c8\u30fc\u30af\u30f3\u81ea\u4f53\u306b\u30c7\u30fc\u30bf\u3092\u4fdd\u6301\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\u5fa9\u53f7\u5316\u3059\u308b\u3068\u30c8\u30fc\u30af\u30f3\u306b\u57cb\u3081\u8fbc\u307e\u308c\u305f\u30c7\u30fc\u30bf\u3092\u53d6\u308a\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u306a\u306e\u3067\u30c8\u30fc\u30af\u30f3\u306e\u7167\u5408\u3068\u8a8d\u8a3c\u3060\u3051\u3092\u884c\u3046\u306e\u3067\u3042\u308c\u3070DB\u30a2\u30af\u30bb\u30b9\u304c\u767a\u751f\u3057\u307e\u305b\u3093\u3002\n\u3000\u3053\u308c\u306fJWT\u306e\u6700\u5927\u306e\u30e1\u30ea\u30c3\u30c8\u306f\u3053\u306e\u70b9\u306b\u3042\u308b\u3068\u540c\u6642\u306b\u3001\u6271\u3044\u306b\u60a9\u3080\u90e8\u5206\u3067\u3082\u3042\u308a\u307e\u3059\u3002\u30c8\u30fc\u30af\u30f3\u306b\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u3092\u30ac\u30c3\u30c4\u30ea\u66f8\u304d\u8fbc\u3093\u3067\u3057\u307e\u3046\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306e\u524a\u9664\u306a\u3069\u304c\u884c\u308f\u308c\u305f\u5834\u5408\u306b\u3001\u3059\u3067\u306b\u5b58\u5728\u3057\u306a\u3044\u30e6\u30fc\u30b6\u30fc\u306e\u8a8d\u8a3c\u3092\u901a\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u306b\u306a\u308b\u304b\u3089\u3067\u3059\u3002\n\u3000\u305f\u3060\u3001\u30c8\u30fc\u30af\u30f3\u7528\u306b\u30c6\u30fc\u30d6\u30eb/\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u306a\u3044\u3067\u6e08\u3080\u70b9\u3067\u306f\u4f9d\u7136\u6709\u7528\u3067\u3001\u5b9f\u969b\u306b\u904b\u7528\u3059\u308b\u306b\u306f`id`\u3060\u3051`sign`\u3057\u3066\u304a\u3044\u3066\u3001\u30e6\u30fc\u30b6\u30fc\u30e2\u30c7\u30eb\u81ea\u4f53\u306fDB\u304b\u3089\u6539\u3081\u3066\u53d6\u5f97\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3000\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u30ec\u30d9\u30eb\u3067\u306f\u8ffd\u3044\u51fa\u3055\u306a\u3044\u3051\u3069\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u6b32\u3057\u3044\u5834\u5408\u306f\u3001`./lib/auth.coffee`\u306e`@throw 401`\u3092`yeild next`\u306b\u3059\u308b\u3068\u3044\u3044\u611f\u3058\u3067\u3059\u3002\n\u3000\n\u3000\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u6697\u53f7\u5316\n\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u90e8\u5206\u3067\u3059\u3002\u30e6\u30fc\u30b6\u30fc\u540d\u3068\u6697\u53f7\u5316\u3057\u305f\u30d1\u30b9\u30ef\u30fc\u30c9\u3092DB\u306b\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```coffee:./api/user.coffee\n_ = require 'lodash'\nQ = require 'q'\nbcrypt = require 'bcrypt'\njwt = require 'jsonwebtoken'\nmongoose = require 'mongoose'\n\nsecret = require '../secret'\nauth = require '../lib/auth'\nUser = mongoose.model 'User'\n\nrouter = do require 'koa-router'\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\nbcryptGenSalt = Q.nbind bcrypt.genSalt, bcrypt\nbcryptHash = Q.nbind bcrypt.hash, bcrypt\n\n\n# \u30e6\u30fc\u30b6\u30fc\u767b\u9332\nrouter.post '/', (next)->\n    # \u7c21\u6613\u7684\u306a\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\n    valid = @request.body.username and @request.body.password\n    if not valid\n        @throw 400\n\n    # salt\u3092\u4f5c\u308a\u307e\u3059\n    salt = yield bcryptGenSalt 10\n    # \u5869\u3092\u632f\u3063\u3066\u30d1\u30b9\u30ef\u30fc\u30c9\u3092hash\u5316\u3057\u307e\u3059\n    hashed_password = yield bcryptHash @request.body.password, salt\n\n    # salt\u306fpassword\u306b\u542b\u307e\u308c\u308b\u306e\u3067salt\u306f\u4fdd\u5b58\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\n    user = new User\n        username: @request.body.username\n        hashed_password: hashed_password\n\n    # index\u3067unique\u5236\u7d04\u3092\u304b\u3051\u3066\u3044\u308b\u306e\u3067`username`\u304c\u91cd\u8907\u3057\u3066\u3044\u308b\u3068\u5931\u6557\u3057\u307e\u3059\n    try\n        yield user.save()\n    catch\n        @throw 400\n\n    @status = 201\n    yield next\n\n\n# \u30e6\u30fc\u30b6\u30fc\u4e00\u89a7\nrouter.get '/', auth, (next)->\n    q = User.find {}\n    docs = yield q.select '_id username'\n    @body = docs\n    yield next\n\n\nmodule.exports = router.routes()\n```\n\n`GET /users`\u304c\u82e5\u5e72\u30d5\u30e9\u30a4\u30f3\u30b0\u3057\u3066\u307e\u3059\u304c\u3001\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u5206\u304b\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u306e\u5931\u6557\u306b\u306f\u57fa\u672c\u7684\u306b`400`\u3092\u8fd4\u3057\u307e\u3059\u3002`bcrypt.hash`\u306f\u3001\u51fa\u529b\u3055\u308c\u305f\u3082\u306e\u3092\u307f\u308c\u3070\u5206\u304b\u308b\u3093\u3067\u3059\u304c\u3001`salt`\u304c\u305d\u308c\u81ea\u4f53\u306b\u542b\u307e\u308c\u308b\u306e\u3067`salt`\u4fdd\u5b58\u306f\u4e0d\u8981\u3067\u3059\u3002\n\n\u3053\u308c\u3067\u30e6\u30fc\u30b6\u30fc\u767b\u9332\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n### \u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u7167\u5408\n\n```coffee:./api/session.coffee\n_ = require 'lodash'\nQ = require 'q'\nbcrypt = require 'bcrypt'\njwt = require 'jsonwebtoken'\nmongoose = require 'mongoose'\n\nauth = require '../lib/auth'\nUser = mongoose.model 'User'\nsecret = require '../secret'\nrouter = do require 'koa-router'\n\n\n# Promise\u3067\u30e9\u30c3\u30d7\u3057\u3066yieldable\u306b\u3059\u308b\nbcryptCompare = Q.nbind bcrypt.compare, bcrypt\njwtVerify = Q.nbind jwt.verify, jwt\n\n\n# \u30ed\u30b0\u30a4\u30f3\u90e8\u5206\nrouter.post '/', (next)->\n    # `username`\u3067\u8a72\u5f53\u3059\u308b\u30e6\u30fc\u30b6\u30fc\u3092\u5f15\u3063\u5f35\u308a\u307e\u3059\n    q = User.findOne username: @request.body.username\n    doc = yield q.exec()\n    if not doc\n        @throw 401\n        return\n\n    # \u30d1\u30b9\u30ef\u30fc\u30c9\u3092\u7167\u5408\u3057\u307e\u3059\n    ok = yield bcryptCompare @request.body.password, doc.hashed_password\n    if not ok\n        @throw 401\n        return\n\n    # `hashed_password`\u306f\u53d6\u308a\u9664\u3044\u3066\u304a\u304d\u307e\u3059\n    user = _.pick doc, ['_id', 'username']\n\n    # \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u305f\u30e6\u30fc\u30b6\u30fc\u3092\u30c8\u30fc\u30af\u30f3\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\n    # \u7b2c\u4e00\u5f15\u6570\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u66f8\u304d\u63db\u3048\u3089\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\n    # \u30af\u30ed\u30fc\u30f3\u3057\u305f\u3082\u306e\u3092\u6e21\u3057\u3066\u3042\u3052\u307e\u3059\n    token = jwt.sign _.clone(user), secret\n\n    # \u30c8\u30fc\u30af\u30f3\u3068\u30e6\u30fc\u30b6\u30fc\u304c\u63c3\u3063\u305f\u306e\u3067\u30ec\u30b9\u30dd\u30f3\u30b9\u306b\u66f8\u304d\u8fbc\u307f\u307e\u3059\n    @body =\n        token: token\n        user: user\n    @status = 201\n    yield next\n\n\n# \u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u306e\u53d6\u5f97\nrouter.get '/', auth, (next)->\n    @body = @user\n    yield next\n\n\nmodule.exports = router.routes()\n\n```\n\n\u5fc5\u8981\u306a\u8aac\u660e\u306f\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u305f\u306e\u3067\u3042\u307e\u308a\u4ed8\u3051\u52a0\u3048\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u306d\u3002\n\n\u3053\u3093\u306a\u611f\u3058\u3067\u8a8d\u8a3c\u306b\u5fc5\u8981\u306a\u3082\u306e\u306f\u5168\u3066\u63c3\u3044\u307e\u3057\u305f\u3002\n\n\n## \u52d5\u304b\u3057\u3066\u307f\u308b\n\nhttps://github.com/endaaman/koa-jwt-example \u3092clone\u3057\u3066`npm install`\u3057\u3066`npm start`\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u30dd\u30fc\u30c8\u3084MongoDB\u306e\u8a2d\u5b9a\u306f`./app.coffee`\u3092\u9069\u5f53\u306b\u3044\u3058\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n### \u30e6\u30fc\u30b6\u30fc\u767b\u9332\n\n```bash:curl\ncurl -v \\\n    -X POST \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -d '{\"username\": \"hoge\", \"password\": \"fuga\"}' \\\n    http://localhost:3000/users\n```\n\n`201`\u304c\u8fd4\u308c\u3070OK\u3002\n\n### \u30ed\u30b0\u30a4\u30f3\n\n```bash:curl\ncurl -v \\\n    -X POST \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -d '{\"username\": \"hoge\", \"password\": \"fuga\"}' \\\n    http://localhost:3000/session\n```\n\n\u30c8\u30fc\u30af\u30f3\u3068\u767b\u9332\u306b\u4f7f\u3063\u305f\u60c5\u5831\u304c\u3068\u308c\u308c\u3070OK\n\n```json\n{\n  \"token\": \"<JSON WEB TOKEN>\",\n  \"user\": {\n    \"_id\": \"<USER ID>\",\n    \"username\": \"hoge\"\n  }\n}\n```\n\n### \u8a8d\u8a3c\u72b6\u614b\u306e\u78ba\u8a8d\n\n\u30ed\u30b0\u30a4\u30f3\u3067\u3068\u308c\u305f\u30c8\u30fc\u30af\u30f3\u3092\u98db\u3070\u3057\u3066\n\n```bash:curl\ncurl -v \\\n    -H 'Content-Type: application/json; charset=UTF-8' \\\n    -H 'X-Accept: application/json' \\\n    -H 'Authorization: Bearer <JSON WEB TOKEN>' \\\n    http://localhost:3000/session\n```\n\n\u30e6\u30fc\u30b6\u30fc\u60c5\u5831\u304c\u3068\u308c\u307e\u3059\u3002\n\n```json\n{\n  \"_id\": \"<USER ID>\",\n  \"username\": \"hoge\"\n}\n```\n\n## \u6700\u5f8c\u306b\n`koa`\u306f\u975e\u540c\u671f\u51e6\u7406\u306b\u3042\u308c\u3053\u308c\u306b\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u304c\u307b\u3069\u3093\u3069\u7121\u3044\u306e\u3067\u3001\u975e\u5e38\u306b\u8133\u306b\u3084\u3055\u3057\u3044\u3067\u3059\u3002\n\n\u4f55\u304b\u8aa4\u3063\u305f\u60c5\u5831\u3084\u8aa4\u89e3\u304c\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u306a\u308aTwitter\u306a\u308a\u3067\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\u5c11\u3057\u3067\u3082\u5f79\u306b\u7acb\u3063\u305f\u3068\u601d\u3063\u3066\u3082\u3089\u3048\u308b\u65b9\u304c\u3044\u308c\u3070\u3001\u5e78\u3044\u3067\u3059\u3002\n\n\n", "tags": ["JWT", "Node.js", "Koa"]}