{"context": "\n\n\u3000\u306f\u3058\u3081\u306b\n\u300cPython\u306b\u3088\u308bWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u300d\u3092\u8aad\u3093\u3067\u3001Selenium\u3092\u4f7f\u3063\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u306e\u3042\u308b\u30b5\u30a4\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u3001\u500b\u4eba\u7684\u306a\u8981\u671b\u304b\u3089\u3001SBI\u8a3c\u5238\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u53e3\u5ea7\u306e\u6b8b\u9ad8\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u521d\u5b66\u8005\u304c\u898b\u3088\u3046\u898b\u307e\u306d\u3067\u3001\u66f8\u3044\u305f\u306e\u3067\u3001\u305d\u306e\u3078\u3093\u306f\u3054\u7406\u89e3\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\nSelenium\u3068\u306f\nSelenium\u3068\u306f\u30d6\u30e9\u30a6\u30b6\u306e\u64cd\u4f5c\u3092\u81ea\u52d5\u5316\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3001Web\u30a2\u30d7\u30ea\u306eUI\u306e\u30c6\u30b9\u30c8\u3084\u4eca\u56de\u306e\u3088\u3046\u306b\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306b\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\u4eca\u56de\u306f\u30d8\u30c3\u30c9\u30ec\u30b9\u30d6\u30e9\u30a6\u30b6\uff08\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306a\u3069\u3067\u4f7f\u7528\u3059\u308b\u30d6\u30e9\u30a6\u30b6\uff09\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5b9f\u884c\u74b0\u5883\nmac OSX\nPython 2.7.1\n\n\u3000\u82e6\u52b4\u3057\u305f\u3068\u3053\u308d\n\n\u307e\u3060\u3001\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b5\u30a4\u30c8\u306e\u8981\u7d20\u3092\u63a2\u3059\u3068\u3053\u308d\u3067\u82e6\u52b4\u3057\u307e\u3057\u305f\n\u3042\u3068\u3001\u30ea\u30b9\u30c8\u578b\u306e\u53d6\u6271\u3002\u9014\u4e2d\u3067\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3063\u305f\u306e\u3067\u3001Pandas\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u3092\u4f7f\u7528\u3057\u3066\u307e\u3059\u3002\u4e8c\u6b21\u5143\u914d\u5217\u304b\u3089\u3046\u307e\u304fCSV\u306b\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3002\n\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u5358\u7d14\u306b10\u79d2\u5f85\u3064\u3060\u3051\u306a\u306e\u3067\u3001\u305d\u306e\u8fba\u3092\u6539\u5584\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u30bd\u30fc\u30b9\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u4f55\u304b\u3042\u3063\u3066\u3082\u8cac\u4efb\u3092\u53d6\u308c\u307e\u305b\u3093\u306e\u3067\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002\n\n#coding:UTF-8\nimport pandas as pd\nimport csv\nfrom selenium import webdriver\nfrom bs4 import BeautifulSoup\n\n##Selenum\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u53e3\u5ea7\u60c5\u5831\u306e\u30da\u30fc\u30b8\u306eHTML\u3092\u53d6\u5f97\ndef fetch_sbi_account_html(user_id,user_password):\n    driver = webdriver.PhantomJS()\n    print 'driver start'\n    driver.get('https://www.sbisec.co.jp/ETGate')\n\n    uid = driver.find_element_by_name('user_id')\n    password = driver.find_element_by_name('user_password')\n    uid.send_keys(user_id)\n    password.send_keys(user_password)\n\n    driver.find_element_by_name('ACT_login').click()\n    driver.implicitly_wait(10)\n\n    driver.find_element_by_link_text('\u53e3\u5ea7\u7ba1\u7406').click()\n    driver.implicitly_wait(10)\n\n    driver.find_element_by_link_text('\u8a55\u4fa1\u984d').click()\n    driver.implicitly_wait(10)\n\n    #\u78ba\u8a8d\u7528\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3082\u53d6\u5f97\n    driver.save_screenshot(\"sbi_account.png\")\n    html = data = driver.page_source.encode('utf-8')\n    driver.quit()\n    print 'driver quit'\n    return html\n\n\n#list\u3092\u5206\u5272\u3059\u308b\u3002\u30ea\u30b9\u30c8\u306e\u6210\u578b\u306b\u5fc5\u8981\u3060\u3063\u305f\u305f\u3081\u3002\ndef chunked(iterable, n):\n    return [iterable[x:x + n] for x in range(0, len(iterable), n)]\n\n#HTML\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u53e3\u5ea7\u306e\u60c5\u5831\u3092\u53d6\u5f97\ndef parse_table(tables,table_num):\n    arr = [] \n    rows = tables[table_num].findAll(\"tr\")\n    for j in range(2,len(rows)):\n        cells = rows[j].findAll(['td'])\n        for cell in cells:\n            text = cell.get_text()\n            if u\"\u73fe\u8cb7\"not in text and u\"\u8cb7\u4ed8\" not in text:\n                arr.append(text)\n    arr = chunked(arr,5)\n    header = [\"name\",\"amount\",\"price\",\"value\",\"total_amont\"]\n    df = pd.DataFrame(arr, columns = header)\n    return df\n\nif __name__ == '__main__':\n\n    #ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u3068\u3053\u308d\u306f\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n    html = fetch_sbi_account_html('[your_id]','[your_password]')\n    bsObj = BeautifulSoup(html, \"html.parser\")\n    tables = bsObj.findAll(\"table\" ,width=\"300\")\n\n    #\u53d6\u5f97\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u9078\u629e\u3002\u3053\u306e\u8fba\u306f\u9069\u5f53\u3067\u3059\u3002CSV\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\n    table_type = {\"stock\":3 ,\"found\":4, \"found_nisa\":5}\n\n    for key, v in table_type.items():\n        file_name = key + '.csv'\n        data = parse_table(tables,v)\n        data.to_csv(file_name, index=False, encoding='UTF-8',sep='\\t')\n        print 'saved '+ file_name\n\n\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\nSelenium Tutorial: Locators\nPython\u3068Selenium\u3067\u30cd\u30c3\u30c8\u30d0\u30f3\u30ad\u30f3\u30b0\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3059\u308b\n\n##\u3000\u306f\u3058\u3081\u306b\n\u300c[Python\u306b\u3088\u308bWeb\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0](http://amzn.to/2dY6Gft)\u300d\u3092\u8aad\u3093\u3067\u3001Selenium\u3092\u4f7f\u3063\u3066\u3001\u30ed\u30b0\u30a4\u30f3\u30d5\u30a9\u30fc\u30e0\u306e\u3042\u308b\u30b5\u30a4\u30c8\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u3001\u500b\u4eba\u7684\u306a\u8981\u671b\u304b\u3089\u3001SBI\u8a3c\u5238\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3001\u53e3\u5ea7\u306e\u6b8b\u9ad8\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u521d\u5b66\u8005\u304c\u898b\u3088\u3046\u898b\u307e\u306d\u3067\u3001\u66f8\u3044\u305f\u306e\u3067\u3001\u305d\u306e\u3078\u3093\u306f\u3054\u7406\u89e3\u3044\u305f\u3060\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\n## Selenium\u3068\u306f\n\nSelenium\u3068\u306f\u30d6\u30e9\u30a6\u30b6\u306e\u64cd\u4f5c\u3092\u81ea\u52d5\u5316\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3001Web\u30a2\u30d7\u30ea\u306eUI\u306e\u30c6\u30b9\u30c8\u3084\u4eca\u56de\u306e\u3088\u3046\u306b\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u306b\u4f7f\u7528\u3059\u308b\u30c4\u30fc\u30eb\u3067\u3059\u3002\u4eca\u56de\u306f\u30d8\u30c3\u30c9\u30ec\u30b9\u30d6\u30e9\u30a6\u30b6\uff08\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u306a\u3069\u3067\u4f7f\u7528\u3059\u308b\u30d6\u30e9\u30a6\u30b6\uff09\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u5b9f\u884c\u74b0\u5883\nmac OSX\nPython 2.7.1\n\n\n##\u3000\u82e6\u52b4\u3057\u305f\u3068\u3053\u308d\n- \u307e\u3060\u3001\u521d\u5fc3\u8005\u306a\u306e\u3067\u3001\u30b5\u30a4\u30c8\u306e\u8981\u7d20\u3092\u63a2\u3059\u3068\u3053\u308d\u3067\u82e6\u52b4\u3057\u307e\u3057\u305f\n- \u3042\u3068\u3001\u30ea\u30b9\u30c8\u578b\u306e\u53d6\u6271\u3002\u9014\u4e2d\u3067\u3081\u3093\u3069\u304f\u3055\u3044\u304b\u3063\u305f\u306e\u3067\u3001Pandas\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u578b\u3092\u4f7f\u7528\u3057\u3066\u307e\u3059\u3002\u4e8c\u6b21\u5143\u914d\u5217\u304b\u3089\u3046\u307e\u304fCSV\u306b\u51fa\u529b\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3002\n- \u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u306f\u5358\u7d14\u306b10\u79d2\u5f85\u3064\u3060\u3051\u306a\u306e\u3067\u3001\u305d\u306e\u8fba\u3092\u6539\u5584\u3057\u305f\u3044\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u30bd\u30fc\u30b9\n**\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3057\u3066\u4f55\u304b\u3042\u3063\u3066\u3082\u8cac\u4efb\u3092\u53d6\u308c\u307e\u305b\u3093\u306e\u3067\u81ea\u5df1\u8cac\u4efb\u3067\u304a\u9858\u3044\u3057\u307e\u3059\u3002**\n\n```\n\n#coding:UTF-8\nimport pandas as pd\nimport csv\nfrom selenium import webdriver\nfrom bs4 import BeautifulSoup\n\n##Selenum\u3067\u30ed\u30b0\u30a4\u30f3\u3057\u53e3\u5ea7\u60c5\u5831\u306e\u30da\u30fc\u30b8\u306eHTML\u3092\u53d6\u5f97\ndef fetch_sbi_account_html(user_id,user_password):\n    driver = webdriver.PhantomJS()\n    print 'driver start'\n    driver.get('https://www.sbisec.co.jp/ETGate')\n    \n    uid = driver.find_element_by_name('user_id')\n    password = driver.find_element_by_name('user_password')\n    uid.send_keys(user_id)\n    password.send_keys(user_password)\n\n    driver.find_element_by_name('ACT_login').click()\n    driver.implicitly_wait(10)\n\n    driver.find_element_by_link_text('\u53e3\u5ea7\u7ba1\u7406').click()\n    driver.implicitly_wait(10)\n    \n    driver.find_element_by_link_text('\u8a55\u4fa1\u984d').click()\n    driver.implicitly_wait(10)\n    \n    #\u78ba\u8a8d\u7528\u306b\u30ad\u30e3\u30d7\u30c1\u30e3\u3082\u53d6\u5f97\n    driver.save_screenshot(\"sbi_account.png\")\n    html = data = driver.page_source.encode('utf-8')\n    driver.quit()\n    print 'driver quit'\n    return html\n\n\n#list\u3092\u5206\u5272\u3059\u308b\u3002\u30ea\u30b9\u30c8\u306e\u6210\u578b\u306b\u5fc5\u8981\u3060\u3063\u305f\u305f\u3081\u3002\ndef chunked(iterable, n):\n    return [iterable[x:x + n] for x in range(0, len(iterable), n)]\n\n#HTML\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u53e3\u5ea7\u306e\u60c5\u5831\u3092\u53d6\u5f97\ndef parse_table(tables,table_num):\n    arr = [] \n    rows = tables[table_num].findAll(\"tr\")\n    for j in range(2,len(rows)):\n        cells = rows[j].findAll(['td'])\n        for cell in cells:\n            text = cell.get_text()\n            if u\"\u73fe\u8cb7\"not in text and u\"\u8cb7\u4ed8\" not in text:\n                arr.append(text)\n    arr = chunked(arr,5)\n    header = [\"name\",\"amount\",\"price\",\"value\",\"total_amont\"]\n    df = pd.DataFrame(arr, columns = header)\n    return df\n\nif __name__ == '__main__':\n\n\t#ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306e\u3068\u3053\u308d\u306f\u5909\u66f4\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\thtml = fetch_sbi_account_html('[your_id]','[your_password]')\n\tbsObj = BeautifulSoup(html, \"html.parser\")\n\ttables = bsObj.findAll(\"table\" ,width=\"300\")\n\n\t#\u53d6\u5f97\u3059\u308b\u30c6\u30fc\u30d6\u30eb\u306e\u9078\u629e\u3002\u3053\u306e\u8fba\u306f\u9069\u5f53\u3067\u3059\u3002CSV\u3067\u51fa\u529b\u3057\u307e\u3059\u3002\n\ttable_type = {\"stock\":3 ,\"found\":4, \"found_nisa\":5}\n\n\tfor key, v in table_type.items():\n    \tfile_name = key + '.csv'\n    \tdata = parse_table(tables,v)\n    \tdata.to_csv(file_name, index=False, encoding='UTF-8',sep='\\t')\n    \tprint 'saved '+ file_name\n    \n```\n\n## \u53c2\u8003\u30da\u30fc\u30b8\n- [Selenium Tutorial: Locators](https://newcircle.com/bookshelf/selenium_tutorial/locators)\n- [Python\u3068Selenium\u3067\u30cd\u30c3\u30c8\u30d0\u30f3\u30ad\u30f3\u30b0\u3092\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0\u3059\u308b](http://blog.mursts.jp/entry/2015/09/25/scrape-netbanking-by-python-and-selenium/)\n", "tags": ["\u30b9\u30af\u30ec\u30a4\u30d4\u30f3\u30b0", "python2.7"]}