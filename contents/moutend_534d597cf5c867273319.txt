{"tags": ["RaspberryPi", "L\u30c1\u30ab", "Linux", "C"], "context": " More than 1 year has passed since last update.\n\n \u306f\u3058\u3081\u306b\nRaspberry Pi\u3092\u6975\u3081\u308b\u305f\u3081(?)\u3001WiringPi\u3092\u4f7f\u308f\u305aLED\u3092\u30c1\u30ab\u30c1\u30ab\u3055\u305b\u305f\u306e\u3067\u30e1\u30e2\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u306fPi / Pi 2\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u624b\u5143\u306bPi 2\u3057\u304b\u306a\u3044\u306e\u3067\u3001Pi\u306e\u691c\u8a3c\u306f\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u52d5\u4f5c\u3057\u306a\u3044 OR \u9593\u9055\u3044\u3092\u767a\u898b\u3057\u305f\u5834\u5408\u306f\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001OS\u306fRASPBIAN JESSIE\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n% uname -a ; gcc --version | head -n 1\nLinux raspberrypi 4.1.6-v7+ #810 SMP PREEMPT Tue Aug 18 15:32:12 BST 2015 armv7l GNU/Linux\ngcc (Raspbian 4.8.4-1) 4.8.4\n\n\nGPIO\u306e\u5236\u5fa1\u306f\u5358\u7d14?\n\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u308b\u307e\u3067\u3001GPIO\u306e\u5236\u5fa1\u306f\u8907\u96d1\u306b\u9055\u3044\u306a\u3044\u3001WiringPi\u306e\u4e2d\u8eab\u306a\u3093\u3066\u77e5\u308a\u305f\u304f\u3082\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306fGPIO\u306e\u5236\u5fa1\u306f\u5358\u7d14\u3067\u3057\u305f\u3002\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3001\u305d\u308c\u3060\u3051\u3067\u3059\u3002\n\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3068\u3001\u305d\u306e\u5024\u306b\u5fdc\u3058\u3066GPIO\u306e\u96fb\u5727\u3092\u5909\u5316\u3055\u305b\u305f\u308a\u3001GPIO\u304b\u3089\u96fb\u5727\u3092\u8aad\u307f\u53d6\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n\u30ec\u30b8\u30b9\u30bf is \u4f55\n\u30ec\u30b8\u30b9\u30bf (\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf) - Wikipedia\u306b\u3088\u308b\u3068:\n\n\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u30ec\u30b8\u30b9\u30bf\u306f\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\uff08\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u30fb\u30ab\u30a6\u30f3\u30bf\u3084\u5272\u308a\u8fbc\u307f\u5236\u5fa1\u3001\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30dd\u30fc\u30c8\u306a\u3069\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\uff09\u306e\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3057\u305f\u308a\u3001\u52d5\u4f5c\u72b6\u6cc1\u3092\u8aad\u307f\u51fa\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306e\u30ec\u30b8\u30b9\u30bf\u3067\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u30ec\u30b8\u30b9\u30bf\u306f\u30d7\u30ed\u30bb\u30c3\u30b5\u5185\u306e\u30ec\u30b8\u30b9\u30bf\u3068\u306f\u7570\u306a\u308a\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u306e\u4e00\u90e8\u306b\u914d\u7f6e\u3055\u308c\u308b\u3002\n\nSSD\u3084HDD\u306a\u3069\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3001\u305d\u3057\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306e\u8aad\u8005\u306f\u78ba\u5b9f\u306b16GB\u306f\u7a4d\u3093\u3067\u3044\u308b\u3067\u3042\u308d\u3046\u30e1\u30e2\u30ea\u3068\u4e26\u3076\u8a18\u61b6\u9818\u57df\u304c\u30ec\u30b8\u30b9\u30bf\u3067\u3059\u3002\u30ec\u30b8\u30b9\u30bf\u306fSoC\u306b\u5185\u8535\u3055\u308c\u3066\u304a\u308a\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30ec\u30b8\u30b9\u30bf\u3092Peripheral Register(\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u30ec\u30b8\u30b9\u30bf)\u3068\u547c\u3073\u307e\u3059\u3002\n\u305d\u3057\u3066\u3001\u3053\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u30e1\u30e2\u30ea\u4e0a\u306e\u3069\u3053\u304b\u306b\u30a2\u30c9\u30ec\u30b9\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067\u3001\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3068\u307f\u306a\u3055\u308c\u3001GPIO\u3092\u542b\u3080\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nGPIO\u3092\u5236\u5fa1\u3059\u308b\n\u3055\u3066\u3001GPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u304c\u3001\u30e1\u30e2\u30ea\u4e0a\u306e\u3069\u3053\u306b\u3001\u3068\u306e\u3088\u3046\u306a\u5024\u3092\u66f8\u304d\u8fbc\u3081\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3001Raspberry Pi\u304c\u642d\u8f09\u3057\u3066\u3044\u308bSoC\u3001BCM2835\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\u30e1\u30e2\u30ea\u306b\u3064\u3044\u3066\u306fChapter 1\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nBROADCOM BCM2835.pdf\n\n\n1.2.3 ARM physical addresses\nPhysical addresses range from 0x 2000 0000 to 0x 20FF FFFF for peripherals. The busaddresses for peripherals are set up to map onto the peripheral bus address range starting at 0x 7E00 0000. Thus a peripheral advertised here at bus address 0x 7Enn nnnn is available atphysical address 0x 20nn nnnn.\n\nGPIO\u3092\u542b\u3080\u5468\u8fba\u6a5f\u5668\u3001USB\u3084SPI\u3001I2C\u306a\u3069\u306e\u5236\u5fa1\u7528\u306b\u3001\u7269\u7406\u30a2\u30c9\u30ec\u30b90x 2000 0000\u304b\u30890x 20FF FFFF(\u5b9f\u969b\u306b\u306f0x 7E00 0000\u304b\u30890x 7EFF FFFF)\u306e\u7bc4\u56f2\u3067\u30a2\u30c9\u30ec\u30b9\u304c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u305d\u3046\u3067\u3059\u3002\n\nGPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u308b\n\u6b21\u306b\u3001\u30a2\u30c9\u30ec\u30b90x 7E00 0000\u304b\u30890x 7EFF FFFF\u306e\u5185\u3001GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u307e\u3059\u3002GPIO\u306b\u3064\u3044\u3066\u306fChapter 6\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n6 General Purpose I/O (GPIO)\nThere are 54 general-purpose I/O (GPIO) lines split into two banks. All GPIO pins have atleast two alternative functions within BCM. The alternate functions are usually peripheral IOand a single peripheral may appear in each bank to allow flexibility on the choice of IOvoltage.\n6.1 Register View\nThe GPIO has 41 registers.\n\n\n\nAddress\nField Name\nDescription\nR/W\n\n\n\n\n0x 7E20 0000\nGPFSEL0\nGPIO Function Select 0\nR/W\n\n\n0x 7E20 0004\nGPFSEL1\nGPIO Function Select 1\nR/W\n\n\n0x 7E20 0008\nGPFSEL2\nGPIO Function Select 2\nR/W\n\n\n0x 7E20 000C\nGPFSEL3\nGPIO Function Select 3\nR/W\n\n\n0x 7E20 0010\nGPFSEL4\nGPIO Function Select 4\nR/W\n\n\n0x 7E20 0014\nGPFSEL5\nGPIO Function Select 5\nR/W\n\n\n0x 7E20 0018\n-\nReserved\n-\n\n\n0x 7E20 001C\nGPSET0\nGPIO Pin Output Set 0\nW\n\n\n0x 7E20 0020\nGPSET1\nGPIO Pin Output Set 1\nW\n\n\n0x 7E20 0024\n-\nReserved\n-\n\n\n0x 7E20 0028\nGPCLR0\nGPIO Pin Output Clear 0\nW\n\n\n0x 7E20 002C\nGPCLR1\nGPIO Pin Output Clear 1\nW\n\n\n...\n...\n...\n...\n\n\n0x 7E20 00B0\n-\nTest\nR/W\n\n\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306f41\u500b\u3042\u308a\u3001\u30a2\u30c9\u30ec\u30b90x 7E20 0000\u304b\u30890x 7E20 00B0\u306e\u7bc4\u56f2\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067GPIO\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\n\nGPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306b\u66f8\u304d\u8fbc\u3080\u5024\u3092\u8abf\u3079\u308b\n\u6b21\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067GPIO\u3092\u5236\u5fa1\u3059\u308b\u306e\u304b\u8abf\u3079\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304dChapter 6\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\nGPIO Function Select 0\nThe function select registers are used to define the operation of the general-purpose I/O pins. Each of the 54 GPIO pins has at least two alternative functions as defined in section16.2. The FSEL{n} field determines the functionality of the nth GPIO pin. All unusedalternative function lines are tied to ground and will output a \u201c0\u201d if selected. All pins resetto normal GPIO input operation.  FSCL0 to FSCL9\n\n\n\nRange (bit)\nDescription\nR/W\nR\n\n\n\n\n31 - 30\nReserved\n-\n-\n\n\n29 - 27\nFSEL8 FSEL9 - Function Select 9\nR/W\n0\n\n\n26 - 24\nFSEL8 FSEL8 - Function Select 8\nR/W\n0\n\n\n23 - 21\nFSEL7 FSEL7 - Function Select 7\nR/W\n0\n\n\n20 - 18\nFSEL6 FSEL6 - Function Select 6\nR/W\n0\n\n\n17 - 15\nFSEL5 FSEL5 - Function Select 5\nR/W\n0\n\n\n14 - 12\nFSEL4 FSEL4 - Function Select 4\nR/W\n0\n\n\n11 - 9\nFSEL3 FSEL3 - Function Select 3\nR/W\n0\n\n\n8  - 6\nFSEL2 FSEL2 - Function Select 2\nR/W\n0\n\n\n5  - 1\nFSEL1 FSEL1 - Function Select 1\nR/W\n0\n\n\n2  - 0\nFSEL0 FSEL0 - Function Select 0\nR/W\n0\n\n\n\n\n\n\nBit\nDescription\n\n\n\n\n000\nGPIO Pin is an input\n\n\n001\nGPIO Pin is an output\n\n\n010\nGPIO Pin takes alternate function 5\n\n\n011\nGPIO Pin takes alternate function 4\n\n\n100\nGPIO Pin takes alternate function 0\n\n\n101\nGPIO Pin takes alternate function 1\n\n\n110\nGPIO Pin takes alternate function 2\n\n\n111\nGPIO Pin takes alternate function 3\n\n\n\n\nGPIO 1\u672c\u306b\u3064\u304d3 bit\u306e\u5024\u304c\u5bfe\u5fdc\u3057\u3001\u305d\u306e3 bit\u3067GPIO\u306e\u6a5f\u80fd\u3092\u9078\u629e\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\nGPIO\u5236\u5fa1\u306e\u307e\u3068\u3081\n\u4ee5\u4e0a\u3092\u307e\u3068\u3081\u308b\u3068\n\nGPIO\u306f54\u672c\u3042\u308b\n\n\nGPIO 00 \u304b\u3089 GPIO 09 \u306f\u3001\u30a2\u30c9\u30ec\u30b90x 7E20 0000\u306b\u5bfe\u5fdc\u3002\nGPIO 10 \u304b\u3089 GPIO 19 \u306f\u3001\u30a2\u30c9\u30ec\u30b90x 7E20 0004\u306b\u5bfe\u5fdc\u3002\n...\n\n\nGPIO\u306b\u5bfe\u5fdc\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067\u5236\u5fa1\u3059\u308b\u3002\n\n\n\u5024\u306f 32 bit\n3 bit\u306e\u30d5\u30e9\u30b0\u3067GPIO\u306e\u6a5f\u80fd\u3092\u9078\u629e\u3067\u304d\u308b\u3002\n\n\n\n0b 000 GPIO\u3092\u5165\u529b\u306b\u8a2d\u5b9a\u3002\n\n0b 001 GPIO\u3092\u51fa\u529b\u306b\u8a2d\u5b9a\u3002\n...\n\n\n\n\n\n\u8a73\u7d30\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001PDF\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nLED\u3092\u30c1\u30ab\u30c1\u30ab\u3055\u305b\u308b\nGPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u3067\u306f\u3001\u4f8b\u3068\u3057\u3066\u3001GPIO 23\u306b\u63a5\u7d9a\u3055\u308c\u305fLED\u30921\u79d2\u9593\u70b9\u706f\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\n\u30a2\u30c9\u30ec\u30b9 0x 7E20 0008 \u306b\u3001\u5024 0x 0000 0200 \u3092\u66f8\u304d\u8fbc\u3080\u3002\n\n\n32 bit \u306e\u5024\u306e\u5185\u3001GPIO 23 \u306f 11 - 9 \u306e 3 bit \u306b\u5bfe\u5fdc\u3002\n\n0b 001\u306f\u51fa\u529b\u306b\u5bfe\u5fdc\u3002\n\u5024\u3092\u6c42\u3081\u308b\u3002\n\n\n0b 00 000 000 000 000 000 000 001 000 000 000\n=> 0b 0000 0000 0000 0000 0000 0010 0000 0000\n\n=> `0x 0000 0200\n\n\nGPIO 23\u304c\u51fa\u529b\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n\n\n\u30a2\u30c9\u30ec\u30b9 0x 7E20 001C \u306b\u3001\u5024 0x 0800 0000 \u3092\u66f8\u304d\u8fbc\u3080\u3002\n\n\n\u5024\u3092\u6c42\u3081\u308b\n\n\n\u30d3\u30c3\u30c8\u306e\u4f4d\u7f6e\u304cGPIO\u306e\u756a\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n0b 0000 0000 1000 0000 0000 0000 0000 0000\n=> 0x 0080 0000\n\n\n\nGPIO 23\u306e\u96fb\u5727\u304cHigh\u306b\u306a\u308b\n\n\n1\u79d2 \u5f85\u3064\n\u30a2\u30c9\u30ec\u30b9 0x 7E20 0028 \u306b\u3001\u5024 0x 0080 0000 \u3092\u66f8\u304d\u8fbc\u3080\u3002\n\n\n\u5024\u306e\u6c42\u3081\u65b9\u306f2. \u3068\u540c\u69d8\nGPIO 23\u306e\u96fb\u5727\u304cLow\u306b\u306a\u308b\n\n\n\u30a2\u30c9\u30ec\u30b9 0x 7E20 0008 \u306b\u3001\u5024 0x 0000 0000 \u3092\u66f8\u304d\u8fbc\u3080\u3002\n\n\n\n0b 000\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3002\n\n0x 0000 0000\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3001GPIO 23\u3092\u5143\u306b\u623b\u3059\u3002\n\n\n\n\u4ee5\u4e0a\u306e\u624b\u9806\u3067\u3001GPIO 23\u306b\u63a5\u7d9a\u3055\u308c\u305fLED\u304c1\u79d2\u9593\u70b9\u706f\u3057\u307e\u3059\u3002\n\nL\u30c1\u30ab\u30d7\u30ed\u30b0\u30e9\u30e0\nGPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3057\u307e\u3059\u3002blink.h\u3001blink.c\u3001main.c\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nblink.h\n#include <fcntl.h>\n#include <stdio.h>\n#include <sys/mman.h>\n#include <unistd.h>\n\n#define BLOCK_SIZE      4 * 1024\n#define PERIPHERAL_BASE 0x3F000000\n#define GPIO_BASE       PERIPHERAL_BASE + 0x00200000\n\ntypedef struct {\n  unsigned long         gpio_base;\n  int                   memory_fd;\n  void                  *map;\n  volatile unsigned int *addr;\n} rpi_gpio;\n\nint MapGPIO(rpi_gpio *gpio);\nvoid UnmapGPIO(rpi_gpio *gpio);\nvoid BlinkLED(rpi_gpio *gpio);\n\n\u88dc\u8db3:\n\n\nGPIO_BASE = 0x3F200000\u3067\u306f\u30c0\u30e1?\n\n\n\u554f\u984c\u306a\u3044\u3002\n\u305f\u3060\u3057\u3001Pi\u3068Pi 2\u3067\u30a2\u30c9\u30ec\u30b9\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n\nPi: GPIO_BASE = 0x20200000\n\nPi 2: GPIO_BASE = 0x3F200000\n\n\n\n\u3068\u3044\u3046\u3053\u3068\u3067GPIO_BASE = PERIPHERAL_BASE = 0x00200000\u3068\u3057\u305f\u3002\n\n\n\n\nblink.c\n#include \"blink.h\"\n\nint MapGPIO(rpi_gpio *gpio) {\n  gpio->memory_fd = open(\"/dev/mem\", O_RDWR|O_SYNC);\n\n  if(gpio->memory_fd < 0) {\n    perror(\"Failed to open /dev/mem, try change permission.\");\n    return 1;\n  }\n\n  gpio->map = mmap(\n    NULL,\n    BLOCK_SIZE,\n    PROT_READ|PROT_WRITE,\n    MAP_SHARED,\n    gpio->memory_fd,\n    gpio->gpio_base\n  );\n\n  if(gpio->map == MAP_FAILED) {\n    perror(\"mmap\");\n    return 1;\n  }\n\n  gpio->addr = (volatile unsigned int *)gpio->map;\n  return 0;\n}\n\nvoid UnmapGPIO(rpi_gpio *gpio) {\n  munmap(gpio->map, BLOCK_SIZE);\n  close(gpio->memory_fd);\n}\n\nvoid BlinkLED(rpi_gpio *gpio) {\n  int n = 5;\n\n  *(gpio->addr + 2)  = 0x00000200;\n\n  while(n -= 1) {\n    *(gpio->addr + 7)  = 0x00800000;\n    usleep(500 * 1000);\n    *(gpio->addr + 10) = 0x00800000;\n    usleep(500 * 1000);\n  }\n\n  *(gpio->addr + 2)  = 0x00000000;\n}\n\n\nmain.c\n#include \"blink.h\"\n\nint main() {\n  rpi_gpio gpio = {GPIO_BASE};\n  int map_status;\n\n  map_status = MapGPIO(&gpio);\n  if(map_status) {\n    printf(\"Failed to blink LED.\\n\");\n    return map_status;\n  }\n\n  BlinkLED(&gpio);\n  UnmapGPIO(&gpio);\n  return 0;\n}\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n% gcc -c blink.c\n% gcc main.c blink.o -o ./blinkLED\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u6210\u529f\u3059\u308b\u3068blinkLED\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n% file blinkLED\nblinkLED: ELF 32-bit LSB executable, ARM, version 1 (SYSV) ...(\u7701\u7565)\n\n\n\u30c6\u30b9\u30c8\u3092\u59cb\u3081\u308b\u524d\u306b\n\u30c6\u30b9\u30c8\u3092\u59cb\u3081\u308b\u524d\u306b\u3001GPIO\u306e\u30d4\u30f3\u30a2\u30b5\u30a4\u30f3\u3068LED\u306e\u914d\u7dda\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\nGPIO\u30d4\u30f3\u306e\u756a\u53f7\u306b\u3064\u3044\u3066\nL\u30c1\u30ab\u3092\u30c6\u30b9\u30c8\u3059\u308b\u524d\u306bGPIO\u30d4\u30f3\u756a\u53f7\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u6b21\u306e\u56f3\u306fGPIO\u306e\u30d4\u30f3\u30a2\u30b5\u30a4\u30f3\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u57fa\u677f\u4e0a\u306e\u30d4\u30f3\u756a\u53f7\u3068GPIO\u30d4\u30f3\u306e\u756a\u53f7\u306b\u306f\u95a2\u4fc2\u304c\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n        +3V3 1  2   +5V\nGPIO2   SDA1 3  4   +5V\nGPIO3   SCL1 5  6   GND\nGPIO4   GCLK 7  8   TXD0  GPIO14\n         GND 9  10  RXD0  GPIO15\nGPIO17  GEN0 11 12  GEN1  GPIO18\nGPIO27  GEN2 13 14  GND\nGPIO22  GEN3 15 16  GEN4  GPIO23\n        +3V3 17 18  GEN5  GPIO24\nGPIO10  MOSI 19 20  GND\nGPIO9   MISO 21 22  GEN6  GPIO25\nGPIO11  SCLK 23 24  CE0_N GPIO8\n         GND 25 26  CE1_N GPIO7\nEEPROM ID_SD 27 28  ID_SC EEPROM\nGPIO5        29 30  GND\nGPIO6        31 32        GPIO12\nGPIO13       33 34  GND\nGPIO19       35 36        GPIO16\nGPIO26       37 38        GPIO20\n         GND 39 40        GPIO21\n\n\nLED\u306e\u914d\u7dda\n\u6b21\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nGPIO 23 ---[\u62b5\u6297]---[LED]\n                      |\nGND ------------------*\n\n\u62b5\u6297\u306f10 Ohm\u7a0b\u5ea6\u3067OK\u3067\u3059\u3002LED\u306e\u8db3\u306e\u77ed\u3044\u307b\u3046\u3092GND\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30c6\u30b9\u30c8\n\u611f\u52d5\u306e\u77ac\u9593\u3067\u3059\u3002blinkLED\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\n% ./blinkLED\nFailed to open /dev/mem, try change permission.: Permission denied\nFailed to blink LED.\n\n\u304a\u3063\u3068\u3001sudo\u3092\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n% sudo ./blinkLED\n\nLED\u304c4\u56de\u70b9\u6ec5\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\u70b9\u6ec5\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001LED\u304c\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3001blink.h\u306ePERIPHERAL_BASE\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002Raspberry Pi\u306f0x20000000\u3001Raspberry Pi 2\u306f0x3F000000\u3067\u3059\u3002\n\nEnjoy\nEnjoy \uff81\uff76\uff81\uff76\n\n\u53c2\u8003\n\nLow Level Programming of the Raspberry Pi in C\nBROADCOM BCM2835.pdf\nRPi GPIO Code Samples - eLinux.org\nRPi Low-level peripherals - eLinux.org\nraspberrypi.org BCM2836\nraspberrypi.org BCM2835\nRaspberry Pi2\u3067GPIO\u5236\u5fa1(\u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30ec\u30b8\u30b9\u30bf)\n\n# :pineapple: \u306f\u3058\u3081\u306b\n\nRaspberry Pi\u3092\u6975\u3081\u308b\u305f\u3081(?)\u3001**WiringPi\u3092\u4f7f\u308f\u305a**LED\u3092\u30c1\u30ab\u30c1\u30ab\u3055\u305b\u305f\u306e\u3067\u30e1\u30e2\u3057\u307e\u3059\u3002\u306a\u304a\u3001\u3053\u306e\u8a18\u4e8b\u306fPi / Pi 2\u4e21\u65b9\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u624b\u5143\u306bPi 2\u3057\u304b\u306a\u3044\u306e\u3067\u3001Pi\u306e\u691c\u8a3c\u306f\u884c\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u52d5\u4f5c\u3057\u306a\u3044 OR \u9593\u9055\u3044\u3092\u767a\u898b\u3057\u305f\u5834\u5408\u306f\u3054\u6307\u6458\u304f\u3060\u3055\u3044\u3002\u307e\u305f\u3001OS\u306fRASPBIAN JESSIE\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n    % uname -a ; gcc --version | head -n 1\n    Linux raspberrypi 4.1.6-v7+ #810 SMP PREEMPT Tue Aug 18 15:32:12 BST 2015 armv7l GNU/Linux\n    gcc (Raspbian 4.8.4-1) 4.8.4\n\n\n\n# GPIO\u306e\u5236\u5fa1\u306f\u5358\u7d14?\n\n\u3053\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u59cb\u3081\u308b\u307e\u3067\u3001GPIO\u306e\u5236\u5fa1\u306f\u8907\u96d1\u306b\u9055\u3044\u306a\u3044\u3001WiringPi\u306e\u4e2d\u8eab\u306a\u3093\u3066\u77e5\u308a\u305f\u304f\u3082\u306a\u3044\u3068\u601d\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u5b9f\u969b\u306b\u306fGPIO\u306e\u5236\u5fa1\u306f\u5358\u7d14\u3067\u3057\u305f\u3002\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3001\u305d\u308c\u3060\u3051\u3067\u3059\u3002\n\n\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3068\u3001\u305d\u306e\u5024\u306b\u5fdc\u3058\u3066GPIO\u306e\u96fb\u5727\u3092\u5909\u5316\u3055\u305b\u305f\u308a\u3001GPIO\u304b\u3089\u96fb\u5727\u3092\u8aad\u307f\u53d6\u3063\u305f\u308a\u3067\u304d\u307e\u3059\u3002\n\n\n\n## \u30ec\u30b8\u30b9\u30bf is \u4f55\n\n[\u30ec\u30b8\u30b9\u30bf (\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf) - Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%AC%E3%82%B8%E3%82%B9%E3%82%BF_(%E3%82%B3%E3%83%B3%E3%83%94%E3%83%A5%E3%83%BC%E3%82%BF))\u306b\u3088\u308b\u3068:\n\n> \u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u30ec\u30b8\u30b9\u30bf\u306f\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\uff08\u30d7\u30ed\u30b0\u30e9\u30de\u30d6\u30eb\u30fb\u30ab\u30a6\u30f3\u30bf\u3084\u5272\u308a\u8fbc\u307f\u5236\u5fa1\u3001\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30dd\u30fc\u30c8\u306a\u3069\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\uff09\u306e\u52d5\u4f5c\u3092\u8a2d\u5b9a\u3057\u305f\u308a\u3001\u52d5\u4f5c\u72b6\u6cc1\u3092\u8aad\u307f\u51fa\u3057\u305f\u308a\u3059\u308b\u305f\u3081\u306e\u30ec\u30b8\u30b9\u30bf\u3067\u3042\u308b\u3002\u3053\u308c\u3089\u306e\u30ec\u30b8\u30b9\u30bf\u306f\u30d7\u30ed\u30bb\u30c3\u30b5\u5185\u306e\u30ec\u30b8\u30b9\u30bf\u3068\u306f\u7570\u306a\u308a\u3001\u30d7\u30ed\u30bb\u30c3\u30b5\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u306e\u4e00\u90e8\u306b\u914d\u7f6e\u3055\u308c\u308b\u3002\n\nSSD\u3084HDD\u306a\u3069\u306e\u30b9\u30c8\u30ec\u30fc\u30b8\u3001\u305d\u3057\u3066\u3001\u3053\u306e\u8a18\u4e8b\u306e\u8aad\u8005\u306f\u78ba\u5b9f\u306b16GB\u306f\u7a4d\u3093\u3067\u3044\u308b\u3067\u3042\u308d\u3046\u30e1\u30e2\u30ea\u3068\u4e26\u3076\u8a18\u61b6\u9818\u57df\u304c\u30ec\u30b8\u30b9\u30bf\u3067\u3059\u3002\u30ec\u30b8\u30b9\u30bf\u306fSoC\u306b\u5185\u8535\u3055\u308c\u3066\u304a\u308a\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306e\u30ec\u30b8\u30b9\u30bf\u3092Peripheral Register(\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u30ec\u30b8\u30b9\u30bf)\u3068\u547c\u3073\u307e\u3059\u3002\n\n\u305d\u3057\u3066\u3001\u3053\u306e\u30ec\u30b8\u30b9\u30bf\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u30e1\u30e2\u30ea\u4e0a\u306e\u3069\u3053\u304b\u306b\u30a2\u30c9\u30ec\u30b9\u3092\u30de\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\u3002\u305d\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067\u3001\u30ec\u30b8\u30b9\u30bf\u306b\u5024\u304c\u66f8\u304d\u8fbc\u307e\u308c\u305f\u3068\u307f\u306a\u3055\u308c\u3001GPIO\u3092\u542b\u3080\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u3092\u5236\u5fa1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n\n# GPIO\u3092\u5236\u5fa1\u3059\u308b\n\n\u3055\u3066\u3001GPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u306f\u308f\u304b\u308a\u307e\u3057\u305f\u304c\u3001\u30e1\u30e2\u30ea\u4e0a\u306e\u3069\u3053\u306b\u3001\u3068\u306e\u3088\u3046\u306a\u5024\u3092\u66f8\u304d\u8fbc\u3081\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u308a\u307e\u305b\u3093\u3002\u3068\u3044\u3046\u3053\u3068\u3067\u3001Raspberry Pi\u304c\u642d\u8f09\u3057\u3066\u3044\u308bSoC\u3001BCM2835\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\u30e1\u30e2\u30ea\u306b\u3064\u3044\u3066\u306fChapter 1\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n* [BROADCOM BCM2835.pdf](https://www.raspberrypi.org/documentation//hardware/raspberrypi/bcm2835/BCM2835-ARM-Peripherals.pdf)\n\n> 1.2.3 ARM physical addresses\n>\n> Physical addresses range from 0x 2000 0000 to 0x 20FF FFFF for peripherals. The busaddresses for peripherals are set up to map onto the peripheral bus address range starting at 0x 7E00 0000. Thus a peripheral advertised here at bus address 0x 7Enn nnnn is available atphysical address 0x 20nn nnnn.\n\nGPIO\u3092\u542b\u3080\u5468\u8fba\u6a5f\u5668\u3001USB\u3084SPI\u3001I2C\u306a\u3069\u306e\u5236\u5fa1\u7528\u306b\u3001\u7269\u7406\u30a2\u30c9\u30ec\u30b9`0x 2000 0000`\u304b\u3089`0x 20FF FFFF`(\u5b9f\u969b\u306b\u306f`0x 7E00 0000`\u304b\u3089`0x 7EFF FFFF`)\u306e\u7bc4\u56f2\u3067\u30a2\u30c9\u30ec\u30b9\u304c\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u308b\u305d\u3046\u3067\u3059\u3002\n\n\n\n## GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u308b\n\n\u6b21\u306b\u3001\u30a2\u30c9\u30ec\u30b9`0x 7E00 0000`\u304b\u3089`0x 7EFF FFFF`\u306e\u5185\u3001GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u3092\u8abf\u3079\u307e\u3059\u3002GPIO\u306b\u3064\u3044\u3066\u306fChapter 6\u306b\u3066\u8aac\u660e\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n> 6 General Purpose I/O (GPIO)\n>\n> There are 54 general-purpose I/O (GPIO) lines split into two banks. All GPIO pins have atleast two alternative functions within BCM. The alternate functions are usually peripheral IOand a single peripheral may appear in each bank to allow flexibility on the choice of IOvoltage.\n>\n> 6.1 Register View\n>\n> The GPIO has 41 registers.\n>\n> | Address      | Field Name | Description                            | R/W |\n> |:------------:|:-----------|:---------------------------------------|:----|\n> | 0x 7E20 0000 | GPFSEL0    | GPIO Function Select 0                 | R/W |\n> | 0x 7E20 0004 | GPFSEL1    | GPIO Function Select 1                 | R/W |\n> | 0x 7E20 0008 | GPFSEL2    | GPIO Function Select 2                 | R/W |\n> | 0x 7E20 000C | GPFSEL3    | GPIO Function Select 3                 | R/W |\n> | 0x 7E20 0010 | GPFSEL4    | GPIO Function Select 4                 | R/W |\n> | 0x 7E20 0014 | GPFSEL5    | GPIO Function Select 5                 | R/W |\n> | 0x 7E20 0018 | -          | Reserved                               | -   |\n> | 0x 7E20 001C | GPSET0     | GPIO Pin Output Set 0                  | W   |\n> | 0x 7E20 0020 | GPSET1     | GPIO Pin Output Set 1                  | W   |\n> | 0x 7E20 0024 | -          | Reserved                               | -   |\n> | 0x 7E20 0028 | GPCLR0     | GPIO Pin Output Clear 0                | W   |\n> | 0x 7E20 002C | GPCLR1     | GPIO Pin Output Clear 1                | W   |\n> | ...          | ...        | ...                                    | ... |\n> | 0x 7E20 00B0 | -          | Test                                   | R/W |\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306f41\u500b\u3042\u308a\u3001\u30a2\u30c9\u30ec\u30b9`0x 7E20 0000`\u304b\u3089`0x 7E20 00B0`\u306e\u7bc4\u56f2\u306b\u30de\u30c3\u30d4\u30f3\u30b0\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u3053\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3080\u3053\u3068\u3067GPIO\u3092\u5236\u5fa1\u3067\u304d\u307e\u3059\u3002\n\n\n\n## GPIO\u306b\u5bfe\u5fdc\u3059\u308b\u30ec\u30b8\u30b9\u30bf\u306b\u66f8\u304d\u8fbc\u3080\u5024\u3092\u8abf\u3079\u308b\n\n\u6b21\u306f\u3001\u3069\u306e\u3088\u3046\u306a\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067GPIO\u3092\u5236\u5fa1\u3059\u308b\u306e\u304b\u8abf\u3079\u307e\u3059\u3002\u5f15\u304d\u7d9a\u304dChapter 6\u3092\u53c2\u7167\u3057\u307e\u3059\u3002\n\n> GPIO Function Select 0\n>\n> The function select registers are used to define the operation of the general-purpose I/O pins. Each of the 54 GPIO pins has at least two alternative functions as defined in section16.2. The FSEL{n} field determines the functionality of the nth GPIO pin. All unusedalternative function lines are tied to ground and will output a \u201c0\u201d if selected. All pins resetto normal GPIO input operation.  FSCL0 to FSCL9\n>\n> | Range (bit) | Description                     | R/W | R |\n> |:------------|:--------------------------------|:----|:--|\n> | 31 - 30     | Reserved                        | -   | - |\n> | 29 - 27     | FSEL8 FSEL9 - Function Select 9 | R/W | 0 |\n> | 26 - 24     | FSEL8 FSEL8 - Function Select 8 | R/W | 0 |\n> | 23 - 21     | FSEL7 FSEL7 - Function Select 7 | R/W | 0 |\n> | 20 - 18     | FSEL6 FSEL6 - Function Select 6 | R/W | 0 |\n> | 17 - 15     | FSEL5 FSEL5 - Function Select 5 | R/W | 0 |\n> | 14 - 12     | FSEL4 FSEL4 - Function Select 4 | R/W | 0 |\n> | 11 - 9      | FSEL3 FSEL3 - Function Select 3 | R/W | 0 |\n> | 8  - 6      | FSEL2 FSEL2 - Function Select 2 | R/W | 0 |\n> | 5  - 1      | FSEL1 FSEL1 - Function Select 1 | R/W | 0 |\n> | 2  - 0      | FSEL0 FSEL0 - Function Select 0 | R/W | 0 |\n>\n> | Bit | Description                         |\n> |:----:|-------------------------------------|\n> | 000 | GPIO Pin is an input                |\n> | 001 | GPIO Pin is an output               |\n> | 010 | GPIO Pin takes alternate function 5 |\n> | 011 | GPIO Pin takes alternate function 4 |\n> | 100 | GPIO Pin takes alternate function 0 |\n> | 101 | GPIO Pin takes alternate function 1 |\n> | 110 | GPIO Pin takes alternate function 2 |\n> | 111 | GPIO Pin takes alternate function 3 |\n\nGPIO 1\u672c\u306b\u3064\u304d3 bit\u306e\u5024\u304c\u5bfe\u5fdc\u3057\u3001\u305d\u306e3 bit\u3067GPIO\u306e\u6a5f\u80fd\u3092\u9078\u629e\u3067\u304d\u308b\u3053\u3068\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\n\n\n\n## GPIO\u5236\u5fa1\u306e\u307e\u3068\u3081\n\n\u4ee5\u4e0a\u3092\u307e\u3068\u3081\u308b\u3068\n\n1. GPIO\u306f54\u672c\u3042\u308b\n  * GPIO 00 \u304b\u3089 GPIO 09 \u306f\u3001\u30a2\u30c9\u30ec\u30b9`0x 7E20 0000`\u306b\u5bfe\u5fdc\u3002\n  * GPIO 10 \u304b\u3089 GPIO 19 \u306f\u3001\u30a2\u30c9\u30ec\u30b9`0x 7E20 0004`\u306b\u5bfe\u5fdc\u3002\n  * ...\n1. GPIO\u306b\u5bfe\u5fdc\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u306b\u5024\u3092\u66f8\u304d\u8fbc\u3093\u3067\u5236\u5fa1\u3059\u308b\u3002\n  * \u5024\u306f 32 bit\n  * 3 bit\u306e\u30d5\u30e9\u30b0\u3067GPIO\u306e\u6a5f\u80fd\u3092\u9078\u629e\u3067\u304d\u308b\u3002\n      * `0b 000` GPIO\u3092\u5165\u529b\u306b\u8a2d\u5b9a\u3002\n      * `0b 001` GPIO\u3092\u51fa\u529b\u306b\u8a2d\u5b9a\u3002\n      * ...\n\n\u8a73\u7d30\u3092\u77e5\u308a\u305f\u3044\u5834\u5408\u306f\u3001PDF\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n# LED\u3092\u30c1\u30ab\u30c1\u30ab\u3055\u305b\u308b\n\nGPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u304c\u5206\u304b\u308a\u307e\u3057\u305f\u3002\u3067\u306f\u3001\u4f8b\u3068\u3057\u3066\u3001GPIO 23\u306b\u63a5\u7d9a\u3055\u308c\u305fLED\u30921\u79d2\u9593\u70b9\u706f\u3055\u305b\u3066\u307f\u307e\u3059\u3002\n\n1. \u30a2\u30c9\u30ec\u30b9 `0x 7E20 0008` \u306b\u3001\u5024 `0x 0000 0200` \u3092\u66f8\u304d\u8fbc\u3080\u3002\n  * 32 bit \u306e\u5024\u306e\u5185\u3001GPIO 23 \u306f 11 - 9 \u306e 3 bit \u306b\u5bfe\u5fdc\u3002\n  * `0b 001`\u306f\u51fa\u529b\u306b\u5bfe\u5fdc\u3002\n  * \u5024\u3092\u6c42\u3081\u308b\u3002\n      * `0b 00 000 000 000 000 000 000 001 000 000 000`\n      * => `0b 0000 0000 0000 0000 0000 0010 0000 0000`\n      * => `0x 0000 0200\n  * GPIO 23\u304c\u51fa\u529b\u3068\u3057\u3066\u8a2d\u5b9a\u3055\u308c\u308b\u3002\n2. \u30a2\u30c9\u30ec\u30b9 `0x 7E20 001C` \u306b\u3001\u5024 `0x 0800 0000` \u3092\u66f8\u304d\u8fbc\u3080\u3002\n  * \u5024\u3092\u6c42\u3081\u308b\n      * \u30d3\u30c3\u30c8\u306e\u4f4d\u7f6e\u304cGPIO\u306e\u756a\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3002\n      * `0b 0000 0000 1000 0000 0000 0000 0000 0000`\n      * => `0x 0080 0000`\n  * GPIO 23\u306e\u96fb\u5727\u304cHigh\u306b\u306a\u308b\n3. 1\u79d2 \u5f85\u3064\n4. \u30a2\u30c9\u30ec\u30b9 `0x 7E20 0028` \u306b\u3001\u5024 `0x 0080 0000` \u3092\u66f8\u304d\u8fbc\u3080\u3002\n  * \u5024\u306e\u6c42\u3081\u65b9\u306f2. \u3068\u540c\u69d8\n  * GPIO 23\u306e\u96fb\u5727\u304cLow\u306b\u306a\u308b\n5. \u30a2\u30c9\u30ec\u30b9 `0x 7E20 0008` \u306b\u3001\u5024 `0x 0000 0000` \u3092\u66f8\u304d\u8fbc\u3080\u3002\n  * `0b 000`\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u5024\u3002\n  * `0x 0000 0000`\u3092\u66f8\u304d\u8fbc\u3093\u3067\u3001GPIO 23\u3092\u5143\u306b\u623b\u3059\u3002\n\n\u4ee5\u4e0a\u306e\u624b\u9806\u3067\u3001GPIO 23\u306b\u63a5\u7d9a\u3055\u308c\u305fLED\u304c1\u79d2\u9593\u70b9\u706f\u3057\u307e\u3059\u3002\n\n\n\n# L\u30c1\u30ab\u30d7\u30ed\u30b0\u30e9\u30e0\n\nGPIO\u306e\u5236\u5fa1\u65b9\u6cd5\u304c\u5206\u304b\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u3057\u307e\u3059\u3002`blink.h`\u3001`blink.c`\u3001`main.c`\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n## blink.h\n\n    #include <fcntl.h>\n    #include <stdio.h>\n    #include <sys/mman.h>\n    #include <unistd.h>\n    \n    #define BLOCK_SIZE      4 * 1024\n    #define PERIPHERAL_BASE 0x3F000000\n    #define GPIO_BASE       PERIPHERAL_BASE + 0x00200000\n    \n    typedef struct {\n      unsigned long         gpio_base;\n      int                   memory_fd;\n      void                  *map;\n      volatile unsigned int *addr;\n    } rpi_gpio;\n    \n    int MapGPIO(rpi_gpio *gpio);\n    void UnmapGPIO(rpi_gpio *gpio);\n    void BlinkLED(rpi_gpio *gpio);\n\n\u88dc\u8db3:\n\n* `GPIO_BASE = 0x3F200000`\u3067\u306f\u30c0\u30e1?\n  * \u554f\u984c\u306a\u3044\u3002\n  * \u305f\u3060\u3057\u3001Pi\u3068Pi 2\u3067\u30a2\u30c9\u30ec\u30b9\u304c\u7570\u306a\u308b\u306e\u3067\u6ce8\u610f\u3002\n      * Pi: `GPIO_BASE = 0x20200000`\n      * Pi 2: `GPIO_BASE = 0x3F200000`\n  * \u3068\u3044\u3046\u3053\u3068\u3067`GPIO_BASE = PERIPHERAL_BASE = 0x00200000`\u3068\u3057\u305f\u3002\n\n\n\n## blink.c\n\n    #include \"blink.h\"\n    \n    int MapGPIO(rpi_gpio *gpio) {\n      gpio->memory_fd = open(\"/dev/mem\", O_RDWR|O_SYNC);\n    \n      if(gpio->memory_fd < 0) {\n        perror(\"Failed to open /dev/mem, try change permission.\");\n        return 1;\n      }\n    \n      gpio->map = mmap(\n        NULL,\n        BLOCK_SIZE,\n        PROT_READ|PROT_WRITE,\n        MAP_SHARED,\n        gpio->memory_fd,\n        gpio->gpio_base\n      );\n    \n      if(gpio->map == MAP_FAILED) {\n        perror(\"mmap\");\n        return 1;\n      }\n    \n      gpio->addr = (volatile unsigned int *)gpio->map;\n      return 0;\n    }\n    \n    void UnmapGPIO(rpi_gpio *gpio) {\n      munmap(gpio->map, BLOCK_SIZE);\n      close(gpio->memory_fd);\n    }\n    \n    void BlinkLED(rpi_gpio *gpio) {\n      int n = 5;\n    \n      *(gpio->addr + 2)  = 0x00000200;\n    \n      while(n -= 1) {\n        *(gpio->addr + 7)  = 0x00800000;\n        usleep(500 * 1000);\n        *(gpio->addr + 10) = 0x00800000;\n        usleep(500 * 1000);\n      }\n    \n      *(gpio->addr + 2)  = 0x00000000;\n    }\n\n\n\n## main.c\n\n    #include \"blink.h\"\n    \n    int main() {\n      rpi_gpio gpio = {GPIO_BASE};\n      int map_status;\n    \n      map_status = MapGPIO(&gpio);\n      if(map_status) {\n        printf(\"Failed to blink LED.\\n\");\n        return map_status;\n      }\n    \n      BlinkLED(&gpio);\n      UnmapGPIO(&gpio);\n      return 0;\n    }\n\n\n\n## \u30b3\u30f3\u30d1\u30a4\u30eb\n\n\u4f5c\u6210\u3057\u305f\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\u3002\n\n    % gcc -c blink.c\n    % gcc main.c blink.o -o ./blinkLED\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u6210\u529f\u3059\u308b\u3068`blinkLED`\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n    % file blinkLED\n    blinkLED: ELF 32-bit LSB executable, ARM, version 1 (SYSV) ...(\u7701\u7565)\n\n\n\n# \u30c6\u30b9\u30c8\u3092\u59cb\u3081\u308b\u524d\u306b\n\n\u30c6\u30b9\u30c8\u3092\u59cb\u3081\u308b\u524d\u306b\u3001GPIO\u306e\u30d4\u30f3\u30a2\u30b5\u30a4\u30f3\u3068LED\u306e\u914d\u7dda\u3092\u78ba\u8a8d\u3057\u307e\u3059\n\n\n\n## GPIO\u30d4\u30f3\u306e\u756a\u53f7\u306b\u3064\u3044\u3066\n\nL\u30c1\u30ab\u3092\u30c6\u30b9\u30c8\u3059\u308b\u524d\u306bGPIO\u30d4\u30f3\u756a\u53f7\u3092\u78ba\u8a8d\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u6b21\u306e\u56f3\u306fGPIO\u306e\u30d4\u30f3\u30a2\u30b5\u30a4\u30f3\u3092\u793a\u3057\u3066\u3044\u307e\u3059\u3002\u57fa\u677f\u4e0a\u306e\u30d4\u30f3\u756a\u53f7\u3068GPIO\u30d4\u30f3\u306e\u756a\u53f7\u306b\u306f\u95a2\u4fc2\u304c\u306a\u3044\u306e\u3067\u6ce8\u610f\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n            +3V3 1  2   +5V\n    GPIO2   SDA1 3  4   +5V\n    GPIO3   SCL1 5  6   GND\n    GPIO4   GCLK 7  8   TXD0  GPIO14\n             GND 9  10  RXD0  GPIO15\n    GPIO17  GEN0 11 12  GEN1  GPIO18\n    GPIO27  GEN2 13 14  GND\n    GPIO22  GEN3 15 16  GEN4  GPIO23\n            +3V3 17 18  GEN5  GPIO24\n    GPIO10  MOSI 19 20  GND\n    GPIO9   MISO 21 22  GEN6  GPIO25\n    GPIO11  SCLK 23 24  CE0_N GPIO8\n             GND 25 26  CE1_N GPIO7\n    EEPROM ID_SD 27 28  ID_SC EEPROM\n    GPIO5        29 30  GND\n    GPIO6        31 32        GPIO12\n    GPIO13       33 34  GND\n    GPIO19       35 36        GPIO16\n    GPIO26       37 38        GPIO20\n             GND 39 40        GPIO21\n\n\n\n## LED\u306e\u914d\u7dda\n\n\u6b21\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n    GPIO 23 ---[\u62b5\u6297]---[LED]\n                          |\n    GND ------------------*\n\n\u62b5\u6297\u306f10 Ohm\u7a0b\u5ea6\u3067OK\u3067\u3059\u3002LED\u306e\u8db3\u306e\u77ed\u3044\u307b\u3046\u3092GND\u306b\u63a5\u7d9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n# \u30c6\u30b9\u30c8\n\n\u611f\u52d5\u306e\u77ac\u9593\u3067\u3059\u3002`blinkLED`\u3092\u5b9f\u884c\u3057\u307e\u3057\u3087\u3046\u3002\n\n    % ./blinkLED\n    Failed to open /dev/mem, try change permission.: Permission denied\n    Failed to blink LED.\n\n\u304a\u3063\u3068\u3001sudo\u3092\u5fd8\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n    % sudo ./blinkLED\n\nLED\u304c4\u56de\u70b9\u6ec5\u3059\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\u70b9\u6ec5\u3057\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001LED\u304c\u6b63\u3057\u304f\u63a5\u7d9a\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3001`blink.h`\u306e`PERIPHERAL_BASE`\u304c\u6b63\u3057\u3044\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002Raspberry Pi\u306f`0x20000000`\u3001Raspberry Pi 2\u306f`0x3F000000`\u3067\u3059\u3002\n\n\n\n# Enjoy\n\nEnjoy \uff81\uff76\uff81\uff76\n\n\n\n# \u53c2\u8003\n\n1. [Low Level Programming of the Raspberry Pi in C](http://www.pieter-jan.com/node/15)\n1. [BROADCOM BCM2835.pdf](https://www.raspberrypi.org/documentation//hardware/raspberrypi/bcm2835/BCM2835-ARM-Peripherals.pdf)\n1. [RPi GPIO Code Samples - eLinux.org](http://elinux.org/RPi_GPIO_Code_Samples)\n1. [RPi Low-level peripherals - eLinux.org](http://elinux.org/RPi_Low-level_peripherals)\n1. [raspberrypi.org BCM2836](https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2836/README.md)\n1. [raspberrypi.org BCM2835](https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2835/README.md)\n1. [Raspberry Pi2\u3067GPIO\u5236\u5fa1(\u30e1\u30e2\u30ea\u30de\u30c3\u30d7\u30c8\u30ec\u30b8\u30b9\u30bf)](http://qiita.com/typo-kun/items/b2b61dd533044ee49b71)\n"}