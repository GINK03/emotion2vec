{"tags": ["Linux", "kernel"], "context": "\u8a73\u89e3Linux\u30ab\u30fc\u30cd\u30eb\u306e10\u7ae0\u306b\u95a2\u9023\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u547c\u3073\u51fa\u3059\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u3002\n\n\u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\nv4.1.13\n\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5165\u308a\u53e3\n\u6b21\u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u3042\u308b\u3002\n\nint 0x80\uff1a\u5272\u308a\u8fbc\u307f\u30d9\u30af\u30bf\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\nSYSENTER\uff1a\u5c02\u7528\u30ec\u30b8\u30b9\u30bf\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\nSYSCALL\uff1a\u672c\u306b\u306f\u306e\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001\u3042\u308b\uff1fMSR_LSTAR\u3092\u53c2\u7167\u3059\u308b\u3089\u3057\u3044\u3002\n\n\n\n\u3069\u3046\u3084\u3063\u3066\u547c\u3073\u5206\u3051\u308b\u306e\u304b\n\u5fc5\u305a\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308blinux-vdso\u306a\u308b\u3082\u306e\u306b\u542b\u307e\u308c\u308b\uff1f\n__kernel_vsyscall\u306f\u3082\u3046\u5b9f\u4f53\u304c\u5b58\u5728\u3057\u306a\u3044\u307f\u305f\u3044\u3002\u9055\u3046\u3088\u3046\u3060\u3002\n% ldd /bin/ls\n        linux-vdso.so.1 =>  (0x00007ffec3d5a000)\n\n\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u306a\u30da\u30fc\u30b8\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u5f8c\u3067\u8aad\u3080\u2192System calls in the Linux kernel. Part 3.\n\n\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5b9f\u884c\n\u3069\u306e\u547c\u3073\u51fa\u3057\u65b9\u3067\u3082\u51e6\u7406\u306f\u540c\u3058\u3067\u3001rax\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u3092\u5165\u308c\u3066\u3001system_call\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\nentry_64.S\u3092\u307f\u305f\u3002\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u547c\u3073\u51fa\u3057\u306f\u3053\u306e\u90e8\u5206\u3002\u756a\u53f7\u304cNR_syscall_max\u3088\u308a\u3082\u5927\u304d\u3044\u5834\u5408\u306f\u5b9f\u884c\u305b\u305a\u306b-ENOSYS\u3067\u8fd4\u308b\u3002\nsystem_call_fastpath:\n#if __SYSCALL_MASK == ~0\n    cmpq $__NR_syscall_max,%rax\n#else\n    andl $__SYSCALL_MASK,%eax\n    cmpl $__NR_syscall_max,%eax\n#endif\n    ja  1f  /* return -ENOSYS (already in pt_regs->ax) */\n    movq %r10,%rcx\n    call *sys_call_table(,%rax,8)\n    movq %rax,RAX(%rsp)\n1:\n\nsys_call_table\u306e\u30ea\u30b9\u30c8\u306f./arch/x86/include/generated/asm/syscalls_64.h\u306b\u3042\u308b\u3002\n\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3002\ncmd_arch/x86/syscalls/../include/generated/asm/syscalls_64.h := /bin/bash './arch/x86/syscalls/syscalltbl.sh' arch/x86/syscalls/syscall_64.tbl arch/x86/syscalls/../include/generated/asm/syscalls_64.h\n\n\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3080\u306e\u304c\u3053\u3053\u3002sys_ni_syscall\u306f\u521d\u671f\u5024\uff08\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30b0\u5bfe\u7b56\u3068\u30b3\u30e1\u30f3\u30c8\u306b\u306f\u3042\u308b\uff09\u3067\u3001\u5b9f\u969b\u306finclude\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u5165\u3063\u3066\u3044\u308b\u3002\nasmlinkage const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n    /*\n     * Smells like a compiler bug -- it doesn't work\n     * when the & below is removed.\n     */\n    [0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_64.h>\n};\n\nsyscalls_64.h\u306e\u629c\u7c8b\n__SYSCALL_COMMON(0, sys_read, sys_read)\n__SYSCALL_COMMON(1, sys_write, sys_write)\n__SYSCALL_COMMON(2, sys_open, sys_open)\n__SYSCALL_COMMON(3, sys_close, sys_close)\n__SYSCALL_COMMON(4, sys_newstat, sys_newstat)\n__SYSCALL_COMMON(5, sys_newfstat, sys_newfstat)\n__SYSCALL_COMMON(6, sys_newlstat, sys_newlstat)\n__SYSCALL_COMMON(7, sys_poll, sys_poll)\n__SYSCALL_COMMON(8, sys_lseek, sys_lseek)\n__SYSCALL_COMMON(9, sys_mmap, sys_mmap)\n__SYSCALL_COMMON(10, sys_mprotect, sys_mprotect)\n__SYSCALL_COMMON(11, sys_munmap, sys_munmap)\n__SYSCALL_COMMON(12, sys_brk, sys_brk)\n__SYSCALL_64(13, sys_rt_sigaction, sys_rt_sigaction)\n__SYSCALL_COMMON(14, sys_rt_sigprocmask, sys_rt_sigprocmask)\n__SYSCALL_64(15, stub_rt_sigreturn, stub_rt_sigreturn)\n__SYSCALL_64(16, sys_ioctl, sys_ioctl)\n__SYSCALL_COMMON(17, sys_pread64, sys_pread64)\n\n\u30de\u30af\u30ed\u306f\u3053\u3093\u306a\u611f\u3058\u3001\u306a\u306e\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u5165\u3063\u305f\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n#define __SYSCALL_64(nr, sym, compat) [nr] = sym,\n\n\u306a\u306e\u3067\u3001\u3053\u306ecall\u3067\u306f\u305d\u306e\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u3088\u3076\u3002\n\u88dc\u8db3\uff1a\u30a2\u30bb\u30f3\u30d6\u30ea\u306e\u62ec\u5f27\u306e\u30eb\u30fc\u30eb\u3092\u3044\u3064\u3082\u5fd8\u308c\u308b\u30fb\u30fb\u2192X86\u30a2\u30bb\u30f3\u30d6\u30e9/GAS\u3067\u306e\u6587\u6cd5\nsys_call_table\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7(rax)*\u30dd\u30a4\u30f3\u30bf\u306e\u30b5\u30a4\u30ba(8)\u3092\u8db3\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u304c\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u308b\u3002\n    call *sys_call_table(,%rax,8)\n\n\u8a73\u89e3Linux\u30ab\u30fc\u30cd\u30eb\u306e10\u7ae0\u306b\u95a2\u9023\u3059\u308b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u3092\u547c\u3073\u51fa\u3059\u90e8\u5206\u306e\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u3002\n\n\n## \u30ab\u30fc\u30cd\u30eb\u30d0\u30fc\u30b8\u30e7\u30f3\n\nv4.1.13\n\n## \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5165\u308a\u53e3\n\n\u6b21\u306e\u547c\u3073\u51fa\u3057\u65b9\u304c\u3042\u308b\u3002\n\n* int 0x80\uff1a\u5272\u308a\u8fbc\u307f\u30d9\u30af\u30bf\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\n* SYSENTER\uff1a\u5c02\u7528\u30ec\u30b8\u30b9\u30bf\u306b\u30a8\u30f3\u30c8\u30ea\u30dd\u30a4\u30f3\u30c8\u3092\u5165\u308c\u3066\u304a\u304f\n* SYSCALL\uff1a\u672c\u306b\u306f\u306e\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u304c\u3001\u3042\u308b\uff1f[MSR_LSTAR\u3092\u53c2\u7167\u3059\u308b\u3089\u3057\u3044\u3002](http://softwaretechnique.jp/Linux/SystemCall/sc_01.html)\n\n## \u3069\u3046\u3084\u3063\u3066\u547c\u3073\u5206\u3051\u308b\u306e\u304b\n\n\u5fc5\u305a\u30ea\u30f3\u30af\u3055\u308c\u3066\u3044\u308blinux-vdso\u306a\u308b\u3082\u306e\u306b\u542b\u307e\u308c\u308b\uff1f\n__kernel_vsyscall\u306f\u3082\u3046\u5b9f\u4f53\u304c\u5b58\u5728\u3057\u306a\u3044\u307f\u305f\u3044\u3002\u9055\u3046\u3088\u3046\u3060\u3002\n\n~~~\n% ldd /bin/ls\n        linux-vdso.so.1 =>  (0x00007ffec3d5a000)\n~~~\n\n\u53c2\u8003\u306b\u306a\u308a\u305d\u3046\u306a\u30da\u30fc\u30b8\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u3001\u5f8c\u3067\u8aad\u3080\u2192[System calls in the Linux kernel. Part 3.](https://0xax.gitbooks.io/linux-insides/content/SysCall/syscall-3.html)\n\n## \u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u5b9f\u884c\n\n\u3069\u306e\u547c\u3073\u51fa\u3057\u65b9\u3067\u3082\u51e6\u7406\u306f\u540c\u3058\u3067\u3001rax\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u3092\u5165\u308c\u3066\u3001system_call\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3002\n`entry_64.S`\u3092\u307f\u305f\u3002\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u306e\u547c\u3073\u51fa\u3057\u306f\u3053\u306e\u90e8\u5206\u3002\u756a\u53f7\u304c`NR_syscall_max`\u3088\u308a\u3082\u5927\u304d\u3044\u5834\u5408\u306f\u5b9f\u884c\u305b\u305a\u306b-ENOSYS\u3067\u8fd4\u308b\u3002\n\n~~~c\nsystem_call_fastpath:\n#if __SYSCALL_MASK == ~0\n\tcmpq $__NR_syscall_max,%rax\n#else\n\tandl $__SYSCALL_MASK,%eax\n\tcmpl $__NR_syscall_max,%eax\n#endif\n\tja\t1f\t/* return -ENOSYS (already in pt_regs->ax) */\n\tmovq %r10,%rcx\n\tcall *sys_call_table(,%rax,8)\n\tmovq %rax,RAX(%rsp)\n1:\n~~~\n\n`sys_call_table`\u306e\u30ea\u30b9\u30c8\u306f`./arch/x86/include/generated/asm/syscalls_64.h`\u306b\u3042\u308b\u3002\n\u3053\u308c\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u4e2d\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3089\u3057\u3044\u3002\n\n~~~\ncmd_arch/x86/syscalls/../include/generated/asm/syscalls_64.h := /bin/bash './arch/x86/syscalls/syscalltbl.sh' arch/x86/syscalls/syscall_64.tbl arch/x86/syscalls/../include/generated/asm/syscalls_64.h\n~~~\n\n\u305d\u308c\u3092\u8aad\u307f\u8fbc\u3080\u306e\u304c\u3053\u3053\u3002`sys_ni_syscall`\u306f\u521d\u671f\u5024\uff08\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d0\u30b0\u5bfe\u7b56\u3068\u30b3\u30e1\u30f3\u30c8\u306b\u306f\u3042\u308b\uff09\u3067\u3001\u5b9f\u969b\u306finclude\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u304c\u5165\u3063\u3066\u3044\u308b\u3002\n\n~~~c\nasmlinkage const sys_call_ptr_t sys_call_table[__NR_syscall_max+1] = {\n\t/*\n\t * Smells like a compiler bug -- it doesn't work\n\t * when the & below is removed.\n\t */\n\t[0 ... __NR_syscall_max] = &sys_ni_syscall,\n#include <asm/syscalls_64.h>\n};\n~~~\n\nsyscalls_64.h\u306e\u629c\u7c8b\n\n~~~c\n__SYSCALL_COMMON(0, sys_read, sys_read)\n__SYSCALL_COMMON(1, sys_write, sys_write)\n__SYSCALL_COMMON(2, sys_open, sys_open)\n__SYSCALL_COMMON(3, sys_close, sys_close)\n__SYSCALL_COMMON(4, sys_newstat, sys_newstat)\n__SYSCALL_COMMON(5, sys_newfstat, sys_newfstat)\n__SYSCALL_COMMON(6, sys_newlstat, sys_newlstat)\n__SYSCALL_COMMON(7, sys_poll, sys_poll)\n__SYSCALL_COMMON(8, sys_lseek, sys_lseek)\n__SYSCALL_COMMON(9, sys_mmap, sys_mmap)\n__SYSCALL_COMMON(10, sys_mprotect, sys_mprotect)\n__SYSCALL_COMMON(11, sys_munmap, sys_munmap)\n__SYSCALL_COMMON(12, sys_brk, sys_brk)\n__SYSCALL_64(13, sys_rt_sigaction, sys_rt_sigaction)\n__SYSCALL_COMMON(14, sys_rt_sigprocmask, sys_rt_sigprocmask)\n__SYSCALL_64(15, stub_rt_sigreturn, stub_rt_sigreturn)\n__SYSCALL_64(16, sys_ioctl, sys_ioctl)\n__SYSCALL_COMMON(17, sys_pread64, sys_pread64)\n~~~\n\n\n\u30de\u30af\u30ed\u306f\u3053\u3093\u306a\u611f\u3058\u3001\u306a\u306e\u3067\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7\u306b\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u304c\u5165\u3063\u305f\u914d\u5217\u306b\u306a\u3063\u3066\u3044\u308b\u3002\n\n~~~c\n#define __SYSCALL_64(nr, sym, compat) [nr] = sym,\n~~~\n\n\u306a\u306e\u3067\u3001\u3053\u306ecall\u3067\u306f\u305d\u306e\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u3088\u3076\u3002\n\u88dc\u8db3\uff1a\u30a2\u30bb\u30f3\u30d6\u30ea\u306e\u62ec\u5f27\u306e\u30eb\u30fc\u30eb\u3092\u3044\u3064\u3082\u5fd8\u308c\u308b\u30fb\u30fb\u2192[X86\u30a2\u30bb\u30f3\u30d6\u30e9/GAS\u3067\u306e\u6587\u6cd5](https://ja.wikibooks.org/wiki/X86%E3%82%A2%E3%82%BB%E3%83%B3%E3%83%96%E3%83%A9/GAS%E3%81%A7%E3%81%AE%E6%96%87%E6%B3%95)\n`sys_call_table`\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u30b7\u30b9\u30c6\u30e0\u30b3\u30fc\u30eb\u756a\u53f7(rax)*\u30dd\u30a4\u30f3\u30bf\u306e\u30b5\u30a4\u30ba(8)\u3092\u8db3\u3057\u305f\u30a2\u30c9\u30ec\u30b9\u304c\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306b\u306a\u308b\u3002\n\n~~~\n\tcall *sys_call_table(,%rax,8)\n~~~\n"}