{"context": "\n\n\u524d\u63d0\n\nMacOSX\nHHK TypeS(\u7121\u523b\u5370) => ErgoDoxEZ(\u7121\u523b\u5370)\nDvorak\u6b74\u534a\u5e74\u7a0b\u5ea6\n\n\u3082\u3068\u3082\u3068\u7121\u523b\u5370\u30e6\u30fc\u30b6\u30fc\u306a\u306e\u3067\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u52d5\u7684\u306b\u5207\u308a\u66ff\u308f\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u306a\u3044\u3002\n\n\u96d1\u611f\n\u30bb\u30d1\u30ec\u30fc\u30c8\u306f\u3084\u306f\u308a\u80a9\u3053\u308a\u306b\u52b9\u304f\u611f\u3058\u304c\u3042\u308b\u3002\u3053\u308c\u304c\u53ce\u7a6b\u5927\u3002(\u3053\u308c\u3060\u3051\u3060\u3063\u305f\u3089Kinesis\u3067\u3082\u3044\u3044\u3093\u3060\u304c)\nMac/Dvorak/ErgoDoxEZ\u3068\u3044\u3046\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u3042\u3093\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u8a2d\u5b9a\u304c\u306a\u3044\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u6bce\u65e5\u30ac\u30c1\u30e3\u30ac\u30c1\u30e3\u30ad\u30fc\u30de\u30c3\u30d7\u3092\u66f8\u304d\u63db\u3048\u3066\u3044\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u30ad\u30fc\u30de\u30c3\u30d7\u306f\u304b\u306a\u308a\u7656\u304c\u3042\u308b\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u306a\u3044\u3068\u8f9b\u3044\u3002\n\u751f\u7523\u6027\u306f\u4f7f\u3044\u59cb\u3081\u305f\u521d\u65e5\u306730%\u7a0b\u5ea6\u3002\n3\u65e5\u7d4c\u904e\u306760%\u3002\n\u4e00\u9031\u9593\u7d4c\u904e(\u4eca)\u306780%\u3002\n\u307e\u3060\u307e\u3060\u4f38\u3073\u3057\u308d\u3042\u308b\u306f\u305a\u3002\n\n\u5468\u8fba\u30c4\u30fc\u30eb\u306e\u8a2d\u5b9a\nKarabiner\u3067Dvorak\u306b\u8a2d\u5b9a\u3057\u305f\u304c\u3001\u591a\u6bb5\u5909\u63db\u3055\u308c\u308b\u90fd\u5408\u3067ErgoDox\u306e\u8a2d\u5b9a\u304c\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001Karabiner\u3067Qwerty\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3082\u30461\u500b\u4f5c\u3063\u3066\u30e1\u30cb\u30e5\u30fc\u306b\u8868\u793a\u3057\u3001\u30de\u30a6\u30b9\u3067\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\u30ce\u30fc\u30c8PC\u306a\u306e\u3067\u3001\u4f55\u304b\u3068ErgoDox\u4f7f\u308f\u306a\u3044\u74b0\u5883\u306f\u6b8b\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u4e0d\u4fbf\n\n\u4eca\u62b1\u3048\u3066\u3044\u308b\u554f\u984c\n\u62bc\u3055\u3048\u3063\u3071\u306a\u3057\u3068\u30bf\u30c3\u30d7\u3067\u6319\u52d5\u3092\u5207\u308a\u66ff\u3048\u308b\u3084\u3064\u4fbf\u5229\u3058\u3083\u3093\u3001\u3068\u601d\u3063\u3066\u4f7f\u3044\u307e\u304f\u3063\u305f\u3089\u3001\u5185\u90e8\u306e\u90fd\u5408\u306a\u306e\u304b\u3057\u3089\u77e5\u3089\u306a\u3044\u304c\u3001\u8907\u6570\u306e\u30e1\u30bf\u30ad\u30fc\u3092\u4f7f\u3063\u305f\u3042\u3068\u306b\u30e1\u30bf\u30ad\u30fc\u304c\u304a\u3057\u3063\u3071\u306a\u3057\u306b\u306a\u308a\u623b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3005\u3042\u3063\u305f\u3002\u305d\u306e\u5468\u8fba\u30ad\u30fc\u3092\u30ac\u30c1\u30e3\u30ac\u30c1\u30e3\u3084\u3063\u305f\u308a\u3001USB\u629c\u304d\u5dee\u3057\u3067\u6cbb\u308b\u3002\u4eca\u306f\u305d\u306e\u8a2d\u5b9a\u3092\u6700\u5c0f\u9650\u306b\u3057\u305f\u3089\u591a\u5c11\u30de\u30b7\u306b\u306a\u3063\u305f\u3002\n\u8abf\u3079\u305f\u7d50\u679c\u3001\u30ec\u30a4\u30e4\u30fc\u5207\u308a\u66ff\u3048\u30ad\u30fc\u3092\u62bc\u3057\u305f\u5f8c\u3001\u305d\u306e\u4e0b\u306b\u5225\u306e\u30ad\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u6319\u52d5\u304c\u602a\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u306f\u89e6\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n\u8aad\u3080\u3068\u3044\u3044\u8a18\u4e8b\n\nhttp://qiita.com/ReSTARTR/items/f84f8f3c4c51c876cb2f\nhttp://qiita.com/ReSTARTR/items/970354940f49c67fb9fd\n\n\n\u3042\u308b\u3068\u3044\u3044\u3082\u306e\n\n\u5b89\u5168\u30d4\u30f3\n\n\u307e\u3061\u91dd\u3067\u3082\u306a\u3093\u3067\u3082\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u30cf\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\u30ad\u30fc\u3092\u3088\u304f\u62bc\u3059\u306e\u3067\n\n\u4eca\u73fe\u5728\u306e keymap.c\n#include \"ergodox_ez.h\"\n#include \"debug.h\"\n#include \"action_layer.h\"\n\n#define BASE 0 // default layer\n#define SYMB 1 // symbols\n#define MDIA 2 // media keys\n\nconst uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n/* Keymap 0: Basic layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |   ESC  |   1  |   2  |   3  |   4  |   5  |  6   |           |   7  |   8  |   9  |   0  |   +  |   =  |   \\    |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |   TAB  |   '  |   ,  |   .  |   P  |   Y  |  L1  |           |  L1  |   F  |   G  |   C  |   R  |   L  |   /    |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |  LCTR  |   A  |   O  |   E  |   U  |   I  |------|           |------|   D  |   H  |   T  |   N  | S/L2 |   -    |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LShift |   :  |   Q  |   J  |   K  |   X  |      |           |      |   B  |   M  |   W  |   V  | Z/L1 | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |L1    |ESC/L1| LCTRL| LALT | LGUI |                                       | RGUI |   =  |   [  |   ]  | ~L1  |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,---------------.\n *                                        | LALT | LGui |       | Alt  |Ctrl/Esc|\n *                                 ,------|------|------|       |------+--------+------.\n *                                 |      |      | Home |       | PgUp |        |      |\n *                                 | Space|Backsp|------|       |------|  Tab   |Enter |\n *                                 |      |ace   | End  |       | PgDn |        |      |\n *                                 `--------------------'       `----------------------'\n */\n// If it accepts an argument (i.e, is a function), it doesn't need KC_.\n// Otherwise, it needs KC_*\n[BASE] = KEYMAP(  // layer 0 : default\n        // left hand\n        KC_ESC,         KC_1,           KC_2,    KC_3,   KC_4,   KC_5,   KC_6,\n        KC_TAB,       KC_QUOT,        KC_COMM, KC_DOT, KC_P,   KC_Y,   TG(1),\n        KC_LCTRL,       KC_A,           KC_O,    KC_E,   KC_U,   KC_I,\n\n        KC_LSFT,        KC_SCLN, KC_Q,    KC_J,   KC_K,   KC_X,   KC_NO,\n     LT(SYMB,KC_NO), LT(SYMB, KC_ESC), KC_LCTRL,   KC_LALT,  KC_LGUI,\n                                                  KC_LALT,  KC_LGUI,\n                                                             KC_HOME,\n                                               KC_SPC,KC_BSPC,KC_END,\n        // right hand\n        KC_7,        KC_8,   KC_9,      KC_0,      KC_PLUS,  KC_EQL,         KC_BSLS,\n        TG(SYMB),    KC_F,   KC_G,      KC_C,      KC_R,   KC_L,             KC_SLSH,\n                     KC_D,   KC_H,      KC_T,      KC_N,   LT(MDIA, KC_S),   KC_MINS,\n        KC_NO,       KC_B,   KC_M,      KC_W,      KC_V,   LT(SYMB, KC_Z),   KC_RSFT,\n                              KC_RGUI,   KC_EQL, KC_LBRC,KC_RBRC,             KC_FN1,\n        KC_LALT,        CTL_T(KC_ESC),\n        KC_PGUP,\n        KC_PGDN,KC_TAB, KC_ENT\n    ),\n/* Keymap 1: Symbol Layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |    =   |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |           |   F7 |  F8  |  F9  |  F10 |  F11 |  F12 |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |   !  |   @  |   {  |   }  |   |  |      |           |      |   Up |   7  |   8  |   9  |   *  |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |   #  |   $  |   (  |   )  |   `  |------|           |------| Down |   4  |   5  |   6  |   +  |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |   %  |   ^  |   [  |   ]  |   ~  |      |           |      |   &  |   1  |   2  |   3  |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      |      |   =  |                                       |      |    . |   0  |   =  |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |      |\n *                                 |      |      |------|       |------|      |      |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// SYMBOLS\n[SYMB] = KEYMAP(\n       // left hand\n       KC_EQL ,KC_F1,  KC_F2,  KC_F3,  KC_F4,  KC_F5,  KC_F6,\n       KC_TRNS,KC_EXLM,KC_AT,  KC_LCBR,KC_RCBR,KC_PIPE,KC_TRNS,\n       KC_TRNS,KC_HASH,KC_DLR, KC_LPRN,KC_RPRN,KC_TRNS,\n       KC_TRNS,KC_PERC,KC_CIRC,KC_LBRC,KC_RBRC,KC_TILD,KC_TRNS,\n       KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n                                       KC_TRNS,KC_TRNS,\n                                               KC_TRNS,\n                               KC_TRNS,KC_TRNS,KC_TRNS,\n       // right hand\n       KC_F7,   KC_F8,   KC_F9,  KC_F10,  KC_F11,  KC_F12,  KC_TRNS,\n       KC_TRNS, KC_UP,   KC_7,   KC_8,    KC_9,    KC_ASTR, KC_F12,\n                KC_DOWN, KC_4,   KC_5,    KC_6,    KC_PLUS, KC_TRNS,\n       KC_TRNS, KC_AMPR, KC_1,   KC_2,    KC_3,    KC_TRNS, KC_TRNS,\n                         KC_TRNS,KC_DOT,  KC_0,    KC_EQL,  KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS\n),\n/* Keymap 2: Media and mouse keys\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |  RESET |      |      |      |      |      |      |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |      | Lclk | MsUp | Rclk |      |      |           |      |      | PGDN |  UP  | PGUP |      |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |MsLeft|MsDown|MsRght|      |------|           |------| BSPC | LEFT | DOWN |RIGHT |      |  Play  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |      |      |      |      |      |           |      |      | HOME | ESC  | END  |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | Lclk | Rclk |                                       |VolDn |VolUp | Mute |      |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |Brwser|\n *                                 | Lclk | Rclk |------|       |------|      |Back  |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// MEDIA AND MOUS\nKEYMAP(\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_BTN1, KC_MS_U, KC_BTN2, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_BSPC, KC_MS_L, KC_MS_D, KC_MS_R, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_ESC,  KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_BTN1, KC_BTN2,\n                                           KC_TRNS, KC_TRNS,\n                                                    KC_TRNS,\n                                  KC_BTN1, KC_BTN2, KC_TRNS,\n    // right hand\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS,  KC_TRNS, KC_PGDN, KC_UP  , KC_PGUP, KC_TRNS, KC_TRNS,\n                 KC_TRNS, KC_LEFT, KC_DOWN, KC_RGHT, KC_TRNS, KC_MPLY,\n       KC_TRNS,  KC_TRNS, KC_HOME, KC_TRNS, KC_END, KC_TRNS, KC_TRNS,\n                          KC_VOLD, KC_VOLU, KC_MUTE, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_RALT\n),\n};\n\nconst uint16_t PROGMEM fn_actions[] = {\n    [1] = ACTION_LAYER_TAP_TOGGLE(SYMB)                // FN1 - Momentary Layer 1 (Symbols)\n};\n\nconst macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)\n{\n  // MACRODOWN only works in this function\n      switch(id) {\n        case 0:\n        if (record->event.pressed) {\n          register_code(KC_RSFT);\n        } else {\n          unregister_code(KC_RSFT);\n        }\n        break;\n      }\n    return MACRO_NONE;\n};\n\n// Runs just one time when the keyboard initializes.\nvoid matrix_init_user(void) {\n\n};\n\n// Runs constantly in the background, in a loop.\nvoid matrix_scan_user(void) {\n\n    uint8_t layer = biton32(layer_state);\n\n    ergodox_board_led_off();\n    ergodox_right_led_1_off();\n    ergodox_right_led_2_off();\n    ergodox_right_led_3_off();\n    switch (layer) {\n      // TODO: Make this relevant to the ErgoDox EZ.\n        case 1:\n            ergodox_right_led_1_on();\n            break;\n        case 2:\n            ergodox_right_led_2_on();\n            break;\n        default:\n            // none\n            break;\n    }\n\n};\n\n\n## \u524d\u63d0\n\n- MacOSX\n- HHK TypeS(\u7121\u523b\u5370) => ErgoDoxEZ(\u7121\u523b\u5370)\n- Dvorak\u6b74\u534a\u5e74\u7a0b\u5ea6\n\n\u3082\u3068\u3082\u3068\u7121\u523b\u5370\u30e6\u30fc\u30b6\u30fc\u306a\u306e\u3067\u3001\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u52d5\u7684\u306b\u5207\u308a\u66ff\u308f\u308b\u306e\u306f\u9055\u548c\u611f\u304c\u306a\u3044\u3002\n\n## \u96d1\u611f\n\n\u30bb\u30d1\u30ec\u30fc\u30c8\u306f\u3084\u306f\u308a\u80a9\u3053\u308a\u306b\u52b9\u304f\u611f\u3058\u304c\u3042\u308b\u3002\u3053\u308c\u304c\u53ce\u7a6b\u5927\u3002(\u3053\u308c\u3060\u3051\u3060\u3063\u305f\u3089Kinesis\u3067\u3082\u3044\u3044\u3093\u3060\u304c)\nMac/Dvorak/ErgoDoxEZ\u3068\u3044\u3046\u7d44\u307f\u5408\u308f\u305b\u3067\u3001\u3042\u3093\u307e\u308a\u53c2\u8003\u306b\u306a\u308b\u8a2d\u5b9a\u304c\u306a\u3044\u306e\u3067\u3001\u3068\u308a\u3042\u3048\u305a\u6bce\u65e5\u30ac\u30c1\u30e3\u30ac\u30c1\u30e3\u30ad\u30fc\u30de\u30c3\u30d7\u3092\u66f8\u304d\u63db\u3048\u3066\u3044\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u30ad\u30fc\u30de\u30c3\u30d7\u306f\u304b\u306a\u308a\u7656\u304c\u3042\u308b\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u306a\u3044\u3068\u8f9b\u3044\u3002\n\n\u751f\u7523\u6027\u306f\u4f7f\u3044\u59cb\u3081\u305f\u521d\u65e5\u306730%\u7a0b\u5ea6\u3002\n3\u65e5\u7d4c\u904e\u306760%\u3002\n\u4e00\u9031\u9593\u7d4c\u904e(\u4eca)\u306780%\u3002\n\n\u307e\u3060\u307e\u3060\u4f38\u3073\u3057\u308d\u3042\u308b\u306f\u305a\u3002\n\n## \u5468\u8fba\u30c4\u30fc\u30eb\u306e\u8a2d\u5b9a\n\nKarabiner\u3067Dvorak\u306b\u8a2d\u5b9a\u3057\u305f\u304c\u3001\u591a\u6bb5\u5909\u63db\u3055\u308c\u308b\u90fd\u5408\u3067ErgoDox\u306e\u8a2d\u5b9a\u304c\u8907\u96d1\u306b\u306a\u308b\u306e\u3067\u3001Karabiner\u3067Qwerty\u306e\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3092\u3082\u30461\u500b\u4f5c\u3063\u3066\u30e1\u30cb\u30e5\u30fc\u306b\u8868\u793a\u3057\u3001\u30de\u30a6\u30b9\u3067\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3002\n\n\u30ce\u30fc\u30c8PC\u306a\u306e\u3067\u3001\u4f55\u304b\u3068ErgoDox\u4f7f\u308f\u306a\u3044\u74b0\u5883\u306f\u6b8b\u3057\u3066\u304a\u304b\u306a\u3044\u3068\u4e0d\u4fbf\n\n## \u4eca\u62b1\u3048\u3066\u3044\u308b\u554f\u984c\n\n\u62bc\u3055\u3048\u3063\u3071\u306a\u3057\u3068\u30bf\u30c3\u30d7\u3067\u6319\u52d5\u3092\u5207\u308a\u66ff\u3048\u308b\u3084\u3064\u4fbf\u5229\u3058\u3083\u3093\u3001\u3068\u601d\u3063\u3066\u4f7f\u3044\u307e\u304f\u3063\u305f\u3089\u3001\u5185\u90e8\u306e\u90fd\u5408\u306a\u306e\u304b\u3057\u3089\u77e5\u3089\u306a\u3044\u304c\u3001\u8907\u6570\u306e\u30e1\u30bf\u30ad\u30fc\u3092\u4f7f\u3063\u305f\u3042\u3068\u306b\u30e1\u30bf\u30ad\u30fc\u304c\u304a\u3057\u3063\u3071\u306a\u3057\u306b\u306a\u308a\u623b\u3089\u306a\u3044\u3053\u3068\u304c\u591a\u3005\u3042\u3063\u305f\u3002\u305d\u306e\u5468\u8fba\u30ad\u30fc\u3092\u30ac\u30c1\u30e3\u30ac\u30c1\u30e3\u3084\u3063\u305f\u308a\u3001USB\u629c\u304d\u5dee\u3057\u3067\u6cbb\u308b\u3002\u4eca\u306f\u305d\u306e\u8a2d\u5b9a\u3092\u6700\u5c0f\u9650\u306b\u3057\u305f\u3089\u591a\u5c11\u30de\u30b7\u306b\u306a\u3063\u305f\u3002\n\n\u8abf\u3079\u305f\u7d50\u679c\u3001\u30ec\u30a4\u30e4\u30fc\u5207\u308a\u66ff\u3048\u30ad\u30fc\u3092\u62bc\u3057\u305f\u5f8c\u3001\u305d\u306e\u4e0b\u306b\u5225\u306e\u30ad\u30fc\u304c\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u306e\u6319\u52d5\u304c\u602a\u3057\u304b\u3063\u305f\u306e\u3067\u3001\u4eca\u306f\u89e6\u308c\u306a\u3044\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u3002\n\n## \u8aad\u3080\u3068\u3044\u3044\u8a18\u4e8b\n\n- http://qiita.com/ReSTARTR/items/f84f8f3c4c51c876cb2f\n- http://qiita.com/ReSTARTR/items/970354940f49c67fb9fd\n\n## \u3042\u308b\u3068\u3044\u3044\u3082\u306e\n\n- \u5b89\u5168\u30d4\u30f3\n\n\u307e\u3061\u91dd\u3067\u3082\u306a\u3093\u3067\u3082\u3044\u3044\u3093\u3060\u3051\u3069\u3001\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u30cf\u30fc\u30c9\u30ea\u30bb\u30c3\u30c8\u30ad\u30fc\u3092\u3088\u304f\u62bc\u3059\u306e\u3067\n\n## \u4eca\u73fe\u5728\u306e keymap.c\n\n```c\n#include \"ergodox_ez.h\"\n#include \"debug.h\"\n#include \"action_layer.h\"\n\n#define BASE 0 // default layer\n#define SYMB 1 // symbols\n#define MDIA 2 // media keys\n\nconst uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {\n/* Keymap 0: Basic layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |   ESC  |   1  |   2  |   3  |   4  |   5  |  6   |           |   7  |   8  |   9  |   0  |   +  |   =  |   \\    |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |   TAB  |   '  |   ,  |   .  |   P  |   Y  |  L1  |           |  L1  |   F  |   G  |   C  |   R  |   L  |   /    |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |  LCTR  |   A  |   O  |   E  |   U  |   I  |------|           |------|   D  |   H  |   T  |   N  | S/L2 |   -    |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * | LShift |   :  |   Q  |   J  |   K  |   X  |      |           |      |   B  |   M  |   W  |   V  | Z/L1 | RShift |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |L1    |ESC/L1| LCTRL| LALT | LGUI |                                       | RGUI |   =  |   [  |   ]  | ~L1  |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,---------------.\n *                                        | LALT | LGui |       | Alt  |Ctrl/Esc|\n *                                 ,------|------|------|       |------+--------+------.\n *                                 |      |      | Home |       | PgUp |        |      |\n *                                 | Space|Backsp|------|       |------|  Tab   |Enter |\n *                                 |      |ace   | End  |       | PgDn |        |      |\n *                                 `--------------------'       `----------------------'\n */\n// If it accepts an argument (i.e, is a function), it doesn't need KC_.\n// Otherwise, it needs KC_*\n[BASE] = KEYMAP(  // layer 0 : default\n        // left hand\n        KC_ESC,         KC_1,           KC_2,    KC_3,   KC_4,   KC_5,   KC_6,\n        KC_TAB,       KC_QUOT,        KC_COMM, KC_DOT, KC_P,   KC_Y,   TG(1),\n        KC_LCTRL,       KC_A,           KC_O,    KC_E,   KC_U,   KC_I,\n\n        KC_LSFT,        KC_SCLN, KC_Q,    KC_J,   KC_K,   KC_X,   KC_NO,\n     LT(SYMB,KC_NO), LT(SYMB, KC_ESC), KC_LCTRL,   KC_LALT,  KC_LGUI,\n                                                  KC_LALT,  KC_LGUI,\n                                                             KC_HOME,\n                                               KC_SPC,KC_BSPC,KC_END,\n        // right hand\n        KC_7,        KC_8,   KC_9,      KC_0,      KC_PLUS,  KC_EQL,         KC_BSLS,\n        TG(SYMB),    KC_F,   KC_G,      KC_C,      KC_R,   KC_L,             KC_SLSH,\n                     KC_D,   KC_H,      KC_T,      KC_N,   LT(MDIA, KC_S),   KC_MINS,\n        KC_NO,       KC_B,   KC_M,      KC_W,      KC_V,   LT(SYMB, KC_Z),   KC_RSFT,\n                              KC_RGUI,   KC_EQL, KC_LBRC,KC_RBRC,             KC_FN1,\n        KC_LALT,        CTL_T(KC_ESC),\n        KC_PGUP,\n        KC_PGDN,KC_TAB, KC_ENT\n    ),\n/* Keymap 1: Symbol Layer\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |    =   |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |           |   F7 |  F8  |  F9  |  F10 |  F11 |  F12 |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |   !  |   @  |   {  |   }  |   |  |      |           |      |   Up |   7  |   8  |   9  |   *  |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |   #  |   $  |   (  |   )  |   `  |------|           |------| Down |   4  |   5  |   6  |   +  |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |   %  |   ^  |   [  |   ]  |   ~  |      |           |      |   &  |   1  |   2  |   3  |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      |      |   =  |                                       |      |    . |   0  |   =  |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |      |\n *                                 |      |      |------|       |------|      |      |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// SYMBOLS\n[SYMB] = KEYMAP(\n       // left hand\n       KC_EQL ,KC_F1,  KC_F2,  KC_F3,  KC_F4,  KC_F5,  KC_F6,\n       KC_TRNS,KC_EXLM,KC_AT,  KC_LCBR,KC_RCBR,KC_PIPE,KC_TRNS,\n       KC_TRNS,KC_HASH,KC_DLR, KC_LPRN,KC_RPRN,KC_TRNS,\n       KC_TRNS,KC_PERC,KC_CIRC,KC_LBRC,KC_RBRC,KC_TILD,KC_TRNS,\n       KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,KC_TRNS,\n                                       KC_TRNS,KC_TRNS,\n                                               KC_TRNS,\n                               KC_TRNS,KC_TRNS,KC_TRNS,\n       // right hand\n       KC_F7,   KC_F8,   KC_F9,  KC_F10,  KC_F11,  KC_F12,  KC_TRNS,\n       KC_TRNS, KC_UP,   KC_7,   KC_8,    KC_9,    KC_ASTR, KC_F12,\n                KC_DOWN, KC_4,   KC_5,    KC_6,    KC_PLUS, KC_TRNS,\n       KC_TRNS, KC_AMPR, KC_1,   KC_2,    KC_3,    KC_TRNS, KC_TRNS,\n                         KC_TRNS,KC_DOT,  KC_0,    KC_EQL,  KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS\n),\n/* Keymap 2: Media and mouse keys\n *\n * ,--------------------------------------------------.           ,--------------------------------------------------.\n * |  RESET |      |      |      |      |      |      |           |      |      |      |      |      |      |        |\n * |--------+------+------+------+------+-------------|           |------+------+------+------+------+------+--------|\n * |        |      | Lclk | MsUp | Rclk |      |      |           |      |      | PGDN |  UP  | PGUP |      |        |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |MsLeft|MsDown|MsRght|      |------|           |------| BSPC | LEFT | DOWN |RIGHT |      |  Play  |\n * |--------+------+------+------+------+------|      |           |      |------+------+------+------+------+--------|\n * |        |      |      |      |      |      |      |           |      |      | HOME | ESC  | END  |      |        |\n * `--------+------+------+------+------+-------------'           `-------------+------+------+------+------+--------'\n *   |      |      |      | Lclk | Rclk |                                       |VolDn |VolUp | Mute |      |      |\n *   `----------------------------------'                                       `----------------------------------'\n *                                        ,-------------.       ,-------------.\n *                                        |      |      |       |      |      |\n *                                 ,------|------|------|       |------+------+------.\n *                                 |      |      |      |       |      |      |Brwser|\n *                                 | Lclk | Rclk |------|       |------|      |Back  |\n *                                 |      |      |      |       |      |      |      |\n *                                 `--------------------'       `--------------------'\n */\n// MEDIA AND MOUS\nKEYMAP(\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_BTN1, KC_MS_U, KC_BTN2, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_BSPC, KC_MS_L, KC_MS_D, KC_MS_R, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_ESC,  KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_TRNS, KC_BTN1, KC_BTN2,\n                                           KC_TRNS, KC_TRNS,\n                                                    KC_TRNS,\n                                  KC_BTN1, KC_BTN2, KC_TRNS,\n    // right hand\n       KC_TRNS,  KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS, KC_TRNS,\n       KC_TRNS,  KC_TRNS, KC_PGDN, KC_UP  , KC_PGUP, KC_TRNS, KC_TRNS,\n                 KC_TRNS, KC_LEFT, KC_DOWN, KC_RGHT, KC_TRNS, KC_MPLY,\n       KC_TRNS,  KC_TRNS, KC_HOME, KC_TRNS, KC_END, KC_TRNS, KC_TRNS,\n                          KC_VOLD, KC_VOLU, KC_MUTE, KC_TRNS, KC_TRNS,\n       KC_TRNS, KC_TRNS,\n       KC_TRNS,\n       KC_TRNS, KC_TRNS, KC_RALT\n),\n};\n\nconst uint16_t PROGMEM fn_actions[] = {\n    [1] = ACTION_LAYER_TAP_TOGGLE(SYMB)                // FN1 - Momentary Layer 1 (Symbols)\n};\n\nconst macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt)\n{\n  // MACRODOWN only works in this function\n      switch(id) {\n        case 0:\n        if (record->event.pressed) {\n          register_code(KC_RSFT);\n        } else {\n          unregister_code(KC_RSFT);\n        }\n        break;\n      }\n    return MACRO_NONE;\n};\n\n// Runs just one time when the keyboard initializes.\nvoid matrix_init_user(void) {\n\n};\n\n// Runs constantly in the background, in a loop.\nvoid matrix_scan_user(void) {\n\n    uint8_t layer = biton32(layer_state);\n\n    ergodox_board_led_off();\n    ergodox_right_led_1_off();\n    ergodox_right_led_2_off();\n    ergodox_right_led_3_off();\n    switch (layer) {\n      // TODO: Make this relevant to the ErgoDox EZ.\n        case 1:\n            ergodox_right_led_1_on();\n            break;\n        case 2:\n            ergodox_right_led_2_on();\n            break;\n        default:\n            // none\n            break;\n    }\n\n};\n```\n", "tags": ["ergodox"]}