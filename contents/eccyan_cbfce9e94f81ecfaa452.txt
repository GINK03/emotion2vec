{"context": " More than 1 year has passed since last update.\nCustomView \u3067\u5b9a\u7fa9\u3057\u305f\u30d5\u30c3\u30bf\u30fc\u306e\u30d0\u30fc\u306b FloatingActionButton \u304c\u4e57\u3063\u304b\u308b\u306e\u304c\u3046\u3056\u3044\u306e\u3067FloatingActionButton.Behavior\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u305f\u3002\n\u3068\u308a\u3042\u3048\u305a\u3001\u30bd\u30fc\u30b9\u3002\npublic class AwesomeView extends ViewGroup {\n    public static class FabBehavior extends FloatingActionButton.Behavior {\n\n        private AwesomeView mAwesomeView;\n\n        public FabBehavior() {\n        }\n\n        public FabBehavior(Context context, AttributeSet attrs) {\n        }\n\n        @Override\n        public boolean layoutDependsOn(CoordinatorLayout parent, FloatingActionButton child,\n                View dependency) {\n            mAwesomeView = findAwesomeView(dependency);\n            return mAwesomeView != null || super.layoutDependsOn(parent, child, dependency);\n        }\n\n        @Override\n        public boolean onDependentViewChanged(CoordinatorLayout parent, FloatingActionButton child,\n                View dependency) {\n            if (mAwesomeView != null) {\n                updateFabTranslationForAwesomeView(parent, child, mAwesomeView);\n            }\n\n            return super.onDependentViewChanged(parent, child, dependency);\n        }\n\n        private void updateFabTranslationForAwesomeView(CoordinatorLayout parent,\n                FloatingActionButton fab, View awesomeView) {\n            float translationY = this.getFabTranslationYForAwesomeView(parent, fab);\n            if (translationY != this.mTranslationY) {\n                ViewCompat.animate(fab).cancel();\n                if (Math.abs(translationY - this.mTranslationY) == (float) awesomeView.getHeight()) {\n                    ViewCompat.animate(fab)\n                            .translationY(translationY)\n                            .setInterpolator(INTERPOLATOR)\n                            .setListener(null);\n                } else {\n                    ViewCompat.setTranslationY(fab, translationY);\n                }\n\n                this.mTranslationY = translationY;\n            }\n\n        }\n\n        private float getFabTranslationYForAwesomeView(CoordinatorLayout parent,\n                FloatingActionButton fab) {\n            final float offset = (mAwesomeView == null) ? .0f\n                    : ViewCompat.getTranslationY(mAwesomeView) - (float) mAwesomeView.getHeight();\n            return Math.min(.0f, offset);\n        }\n\n        // TODO: \u8907\u6570\u306e AwesomeView \u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\n        private AwesomeView findAwesomeView(View view) {\n            if (view instanceof AwesomeView) {\n                return (AwesomeView) view;\n            } else if (view instanceof ViewGroup) {\n                final ViewGroup group = (ViewGroup) view;\n                for (int i = 0; i < group.getChildCount(); ++i) {\n                    final AwesomeView awesomeView = findAwesomeView(group.getChildAt(i));\n                    if (awesomeView != null) {\n                        return awesomeView;\n                    }\n                }\n            }\n\n            return null;\n        }\n    }\n}\n\n\u672c\u6765\u306a\u3089 SnackBarLayout \u306e\u3088\u3046\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u5185\u306e\u8981\u7d20\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u306a\u3046\u306e\u3060\u308d\u3046\u3051\u3069\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3002\n![device-2015-06-23-201619.gif](https://qiita-image-store.s3.amazonaws.com/0/1897/b4b36822-22be-5d31-d434-d1ac11cfb6e0.gif)\n\nCustomView \u3067\u5b9a\u7fa9\u3057\u305f\u30d5\u30c3\u30bf\u30fc\u306e\u30d0\u30fc\u306b FloatingActionButton \u304c\u4e57\u3063\u304b\u308b\u306e\u304c\u3046\u3056\u3044\u306e\u3067``FloatingActionButton.Behavior``\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u3066\u307f\u305f\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u3001\u30bd\u30fc\u30b9\u3002\n\n```java\npublic class AwesomeView extends ViewGroup {\n    public static class FabBehavior extends FloatingActionButton.Behavior {\n\n        private AwesomeView mAwesomeView;\n\n        public FabBehavior() {\n        }\n\n        public FabBehavior(Context context, AttributeSet attrs) {\n        }\n\n        @Override\n        public boolean layoutDependsOn(CoordinatorLayout parent, FloatingActionButton child,\n                View dependency) {\n            mAwesomeView = findAwesomeView(dependency);\n            return mAwesomeView != null || super.layoutDependsOn(parent, child, dependency);\n        }\n\n        @Override\n        public boolean onDependentViewChanged(CoordinatorLayout parent, FloatingActionButton child,\n                View dependency) {\n            if (mAwesomeView != null) {\n                updateFabTranslationForAwesomeView(parent, child, mAwesomeView);\n            }\n\n            return super.onDependentViewChanged(parent, child, dependency);\n        }\n\n        private void updateFabTranslationForAwesomeView(CoordinatorLayout parent,\n                FloatingActionButton fab, View awesomeView) {\n            float translationY = this.getFabTranslationYForAwesomeView(parent, fab);\n            if (translationY != this.mTranslationY) {\n                ViewCompat.animate(fab).cancel();\n                if (Math.abs(translationY - this.mTranslationY) == (float) awesomeView.getHeight()) {\n                    ViewCompat.animate(fab)\n                            .translationY(translationY)\n                            .setInterpolator(INTERPOLATOR)\n                            .setListener(null);\n                } else {\n                    ViewCompat.setTranslationY(fab, translationY);\n                }\n\n                this.mTranslationY = translationY;\n            }\n\n        }\n\n        private float getFabTranslationYForAwesomeView(CoordinatorLayout parent,\n                FloatingActionButton fab) {\n            final float offset = (mAwesomeView == null) ? .0f\n                    : ViewCompat.getTranslationY(mAwesomeView) - (float) mAwesomeView.getHeight();\n            return Math.min(.0f, offset);\n        }\n\n        // TODO: \u8907\u6570\u306e AwesomeView \u5bfe\u5fdc\u3067\u304d\u308b\u3088\u3046\u306b\n        private AwesomeView findAwesomeView(View view) {\n            if (view instanceof AwesomeView) {\n                return (AwesomeView) view;\n            } else if (view instanceof ViewGroup) {\n                final ViewGroup group = (ViewGroup) view;\n                for (int i = 0; i < group.getChildCount(); ++i) {\n                    final AwesomeView awesomeView = findAwesomeView(group.getChildAt(i));\n                    if (awesomeView != null) {\n                        return awesomeView;\n                    }\n                }\n            }\n\n            return null;\n        }\n    }\n}\n```\n\n\u672c\u6765\u306a\u3089 SnackBarLayout \u306e\u3088\u3046\u306b\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u5b9a\u7fa9\u3057\u3001\u305d\u306e\u5185\u306e\u8981\u7d20\u3067\u30ec\u30a4\u30a2\u30a6\u30c8\u3092\u884c\u306a\u3046\u306e\u3060\u308d\u3046\u3051\u3069\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u3002\n", "tags": ["Android", "MaterialDesign"]}