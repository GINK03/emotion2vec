{"tags": ["gitlab-api", "GitLab", "Ruby"], "context": " More than 1 year has passed since last update.\n\nGitLab API | gitlab gem \u3067 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u306e\u30ea\u30b9\u30c8\u304b\u3089 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n\n\u6982\u8981\ngitlab gem \u3067 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u306e\u30ea\u30b9\u30c8\u304b\u3089 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\n\n\u7d4c\u7def\n\u306a\u3093\u3067\u3053\u3093\u306a\u5999\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001GitLab\u30b5\u30fc\u30d0\u30fcA\u306e\u30c7\u30fc\u30bf\u3092\u5225\u30de\u30b7\u30f3\u306e\nGitLab\u30b5\u30fc\u30d0\u30fcB\u306b\u79fb\u884c\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u516c\u5f0f\u306e\u624b\u9806\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067API\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\u524d\u63d0\u3068\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e6\u30fc\u30b6\u30fc\u3084Issue\u306e\u60c5\u5831\u306f\u79fb\u884c\u6e08\u307f\u3067\u3059\u3002\n\u203b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e6\u30fc\u30b6\u30fc\u3084Issue\u306f\u57fa\u672c\u7684\u306a\u767b\u9332\u5185\u5bb9\u306f\u540c\u3058\u3060\u304c\u3001id \u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n\n\u30b3\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\n\ngenerate_create_issues_code.rb\nrequire 'gitlab'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'your token'\nend\n\nGitlab.projects(per_page: 100).each do |project|\n  method_name = \"create_#{project.name}_issue_note\"\n  # \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u304b\u3069\u3046\u304b\u5224\u65ad\u3057\u3066\u5f8c\u304b\u3089\u547c\u3076\u51fa\u3059\u304b\u547c\u3073\u51fa\u3055\u306a\u3044\u304b\u6c7a\u3081\u308b\n  puts \"def #{method_name}\"\n  project_id_code = \"  projects = Gitlab.projects(per_page: 100).select { |e|e.name == '#{project.name}' }\"\n  puts project_id_code\n  puts \"  if projects.first\"\n  issue_notes_exist = false\n  Gitlab.issues(project.id, per_page: 100).each do |issue|\n    issue_id_code = \"issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == '#{issue.title}' }\"\n    issue_notes = Gitlab.issue_notes(project.id, issue.id)\n    # issue\u306b\u30b3\u30e1\u30f3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u767b\u9332\u30ed\u30b8\u30c3\u30af\u3092\u51fa\u529b\u3057\u306a\u3044\n    next if issue_notes.size == 0\n    issue_notes_exist = true\n    # \u30b3\u30e1\u30f3\u30c8\u3092\u6607\u9806\u306b\u3059\u308b\n    issue_notes.sort_by { |e|e.created_at }\n    puts \"    project_id = projects.first.id\"\n    puts \"    issues = #{issue_id_code}\"\n    puts \"    if issues.first\"\n    issue_notes.each do |issue_note|\n      puts \"     issue_id = issues.first.id\"\n      body = issue_note.body.gsub(\"\\r\\n\", '\\\\r\\\\n').gsub('\"', '\"\"')\n      puts \"      Gitlab.create_issue_note(project_id, issue_id, \\\"#{body}\\\")\"\n    end\n    puts \"    end\"\n  end\n  puts \"  end\"\n  puts \"end\"\n\n  # \u30b3\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306e\u307f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n  puts method_name if issue_notes_exist\nend\n\n\n\n\u51fa\u529b\n\u3061\u3087\u3063\u3068\u5197\u9577\u3067\u975e\u52b9\u7387\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u4f7f\u3044\u6368\u3066\u306a\u306e\u3067\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u3002\n\u30b3\u30e1\u30f3\u30c8\u304c1\u4ef6\u3082\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n# : \n# : \u591a\u6570\u306e\u51fa\u529b\n# : \ndef create_project1_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project1' }\n  if projects.first\n  end\nend\ndef create_project2_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project2' }\n  if projects.first\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title1' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment2\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment3\")\n    end\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title2' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n    end\n  end\nend\ncreate_project2_issue_note\n# : \n# : \u591a\u6570\u306e\u51fa\u529b\n# : \n\n\n\u30b3\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066 IssueNote (\u30b3\u30e1\u30f3\u30c8) \u306e\u767b\u9332\n\ncreate_issue_note.rb\nrequire 'gitlab'\n\n# \u4eca\u56de\u306f\u56fa\u5b9a\u30e6\u30fc\u30b6\u30fc\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u5143\u306e\u30e6\u30fc\u30b6\u30fc\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u306f\u3001\n# private_token\u3092\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nGitlab.configure do |config|\n  config.endpoint       = 'http://to_server_path/api/v3' \n  config.private_token  = 'to server token'\nend\n\n# : \n# : \u591a\u6570\u306e\u30b3\u30e1\u30f3\u30c8\u8ffd\u52a0\u51e6\u7406\n# : \ndef create_project1_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project1' }\n  if projects.first\n  end\nend\ndef create_project2_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project2' }\n  if projects.first\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title1' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment2\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment3\")\n    end\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title2' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n    end\n  end\nend\ncreate_project2_issue_note\n# : \n# : \u591a\u6570\u306e\u30b3\u30e1\u30f3\u30c8\u8ffd\u52a0\u51e6\u7406\n# : \n\n\n\n\u88dc\u8db3\n\n\nproject \u306f 100 \u4ef6\u4ee5\u4e0b\u306e\u60f3\u5b9a\u3002\u305d\u308c\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306f\u3001\u30da\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\u304c\u5fc5\u8981\n\nissue \u306f 100 \u4ef6\u4ee5\u4e0b\u306e\u60f3\u5b9a\u3002\u305d\u308c\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306f\u3001\u30da\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\u304c\u5fc5\u8981\n\u30b3\u30e1\u30f3\u30c8\u306e\u767b\u9332\u6642\u9593\u3001\u66f4\u65b0\u6642\u9593\u7b49\u306f\u79fb\u884c\u5148\u306b\u767b\u9332\u3057\u305f\u6642\u9593\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\n\u53c2\u7167\n\nGitLab gem RubyGems\nhttps://rubygems.org/gems/gitlab\nGitLab gem GitHub\nhttps://github.com/NARKOZ/gitlab\n\n# GitLab API | gitlab gem \u3067 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u306e\u30ea\u30b9\u30c8\u304b\u3089 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3059\u308b\n\n## \u6982\u8981\ngitlab gem \u3067 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u306e\u30ea\u30b9\u30c8\u304b\u3089 IssueNote (\u30b3\u30e1\u30f3\u30c8)\u3092\u767b\u9332\u3059\u308b\u305f\u3081\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u751f\u6210\u3057\u307e\u3059\n\n## \u7d4c\u7def\n\u306a\u3093\u3067\u3053\u3093\u306a\u5999\u306a\u3053\u3068\u3092\u3057\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001GitLab\u30b5\u30fc\u30d0\u30fcA\u306e\u30c7\u30fc\u30bf\u3092\u5225\u30de\u30b7\u30f3\u306e\nGitLab\u30b5\u30fc\u30d0\u30fcB\u306b\u79fb\u884c\u3057\u305f\u304b\u3063\u305f\u306e\u3067\u3059\u304c\u3001\n\u516c\u5f0f\u306e\u624b\u9806\u3067\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u306e\u3067API\u3067\u5bfe\u5fdc\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n\u524d\u63d0\u3068\u3057\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e6\u30fc\u30b6\u30fc\u3084Issue\u306e\u60c5\u5831\u306f\u79fb\u884c\u6e08\u307f\u3067\u3059\u3002\n\u203b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3084\u30e6\u30fc\u30b6\u30fc\u3084Issue\u306f\u57fa\u672c\u7684\u306a\u767b\u9332\u5185\u5bb9\u306f\u540c\u3058\u3060\u304c\u3001id \u304c\u5909\u308f\u3063\u3066\u3044\u308b\u3053\u3068\u306b\u6ce8\u610f\u3002\n\n## \u30b3\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\n\n~~~ruby:generate_create_issues_code.rb\nrequire 'gitlab'\n\nGitlab.configure do |config|\n  config.endpoint       = 'http://some_path/api/v3' \n  config.private_token  = 'your token'\nend\n\nGitlab.projects(per_page: 100).each do |project|\n  method_name = \"create_#{project.name}_issue_note\"\n  # \u30e1\u30bd\u30c3\u30c9\u3068\u3057\u3066\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u304b\u3069\u3046\u304b\u5224\u65ad\u3057\u3066\u5f8c\u304b\u3089\u547c\u3076\u51fa\u3059\u304b\u547c\u3073\u51fa\u3055\u306a\u3044\u304b\u6c7a\u3081\u308b\n  puts \"def #{method_name}\"\n  project_id_code = \"  projects = Gitlab.projects(per_page: 100).select { |e|e.name == '#{project.name}' }\"\n  puts project_id_code\n  puts \"  if projects.first\"\n  issue_notes_exist = false\n  Gitlab.issues(project.id, per_page: 100).each do |issue|\n    issue_id_code = \"issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == '#{issue.title}' }\"\n    issue_notes = Gitlab.issue_notes(project.id, issue.id)\n    # issue\u306b\u30b3\u30e1\u30f3\u30c8\u304c\u306a\u3044\u5834\u5408\u306f\u767b\u9332\u30ed\u30b8\u30c3\u30af\u3092\u51fa\u529b\u3057\u306a\u3044\n    next if issue_notes.size == 0\n    issue_notes_exist = true\n    # \u30b3\u30e1\u30f3\u30c8\u3092\u6607\u9806\u306b\u3059\u308b\n    issue_notes.sort_by { |e|e.created_at }\n    puts \"    project_id = projects.first.id\"\n    puts \"    issues = #{issue_id_code}\"\n    puts \"    if issues.first\"\n    issue_notes.each do |issue_note|\n      puts \"     issue_id = issues.first.id\"\n      body = issue_note.body.gsub(\"\\r\\n\", '\\\\r\\\\n').gsub('\"', '\"\"')\n      puts \"      Gitlab.create_issue_note(project_id, issue_id, \\\"#{body}\\\")\"\n    end\n    puts \"    end\"\n  end\n  puts \"  end\"\n  puts \"end\"\n\n  # \u30b3\u30e1\u30f3\u30c8\u304c\u3042\u3063\u305f\u5834\u5408\u306e\u307f\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\n  puts method_name if issue_notes_exist\nend\n~~~\n\n## \u51fa\u529b\n\n\u3061\u3087\u3063\u3068\u5197\u9577\u3067\u975e\u52b9\u7387\u306a\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u4f7f\u3044\u6368\u3066\u306a\u306e\u3067\u3042\u307e\u308a\u6c17\u306b\u305b\u305a\u3002\n\u30b3\u30e1\u30f3\u30c8\u304c1\u4ef6\u3082\u306a\u304b\u3063\u305f\u5834\u5408\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n~~~ruby\n# : \n# : \u591a\u6570\u306e\u51fa\u529b\n# : \ndef create_project1_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project1' }\n  if projects.first\n  end\nend\ndef create_project2_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project2' }\n  if projects.first\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title1' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment2\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment3\")\n    end\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title2' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n    end\n  end\nend\ncreate_project2_issue_note\n# : \n# : \u591a\u6570\u306e\u51fa\u529b\n# : \n~~~\n\n## \u30b3\u30fc\u30c9\u30b8\u30a7\u30cd\u30ec\u30fc\u30bf\u30fc\u3067\u751f\u6210\u3055\u308c\u305f\u30b3\u30fc\u30c9\u3092\u5229\u7528\u3057\u3066 IssueNote (\u30b3\u30e1\u30f3\u30c8) \u306e\u767b\u9332\n\n~~~ruby:create_issue_note.rb\nrequire 'gitlab'\n\n# \u4eca\u56de\u306f\u56fa\u5b9a\u30e6\u30fc\u30b6\u30fc\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u767b\u9332\u3057\u307e\u3059\u3002\u5143\u306e\u30e6\u30fc\u30b6\u30fc\u3067\u30b3\u30e1\u30f3\u30c8\u3092\u4f5c\u6210\u3057\u305f\u3044\u5834\u5408\u306f\u3001\n# private_token\u3092\u5207\u308a\u66ff\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nGitlab.configure do |config|\n  config.endpoint       = 'http://to_server_path/api/v3' \n  config.private_token  = 'to server token'\nend\n\n# : \n# : \u591a\u6570\u306e\u30b3\u30e1\u30f3\u30c8\u8ffd\u52a0\u51e6\u7406\n# : \ndef create_project1_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project1' }\n  if projects.first\n  end\nend\ndef create_project2_issue_note\n  projects = Gitlab.projects(per_page: 100).select { |e|e.name == 'project2' }\n  if projects.first\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title1' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment2\")\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment3\")\n    end\n    project_id = projects.first.id\n    issues = issues = Gitlab.issues(project_id, per_page: 100).select { |e|e.title == 'title2' }\n    if issues.first\n      issue_id = issues.first.id\n      Gitlab.create_issue_note(project_id, issue_id, \"comment1\")\n    end\n  end\nend\ncreate_project2_issue_note\n# : \n# : \u591a\u6570\u306e\u30b3\u30e1\u30f3\u30c8\u8ffd\u52a0\u51e6\u7406\n# : \n~~~\n\n## \u88dc\u8db3\n* *project* \u306f 100 \u4ef6\u4ee5\u4e0b\u306e\u60f3\u5b9a\u3002\u305d\u308c\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306f\u3001\u30da\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\u304c\u5fc5\u8981\n* *issue* \u306f 100 \u4ef6\u4ee5\u4e0b\u306e\u60f3\u5b9a\u3002\u305d\u308c\u4ee5\u4e0a\u3042\u308b\u5834\u5408\u306f\u3001\u30da\u30fc\u30b8\u30f3\u30b0\u51e6\u7406\u304c\u5fc5\u8981\n* \u30b3\u30e1\u30f3\u30c8\u306e\u767b\u9332\u6642\u9593\u3001\u66f4\u65b0\u6642\u9593\u7b49\u306f\u79fb\u884c\u5148\u306b\u767b\u9332\u3057\u305f\u6642\u9593\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u53c2\u7167\n* GitLab gem RubyGems\nhttps://rubygems.org/gems/gitlab\n\n* GitLab gem GitHub\nhttps://github.com/NARKOZ/gitlab\n"}