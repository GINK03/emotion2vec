{"context": " More than 1 year has passed since last update.\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76e3\u8996\u3001\u3064\u307e\u308a\u30d5\u30a1\u30a4\u30eb\u306e\u30ea\u30cd\u30fc\u30e0\u3001\u79fb\u52d5\u3001\u524a\u9664\u3001\u4f5c\u6210\u7b49\u3005\u306e\u3001\n\u76e3\u8996\u3092\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3069\u3046\u306b\u3082\u4f7f\u3044\u3084\u3059\u3044NS\u306a\u3093\u3061\u3083\u3089\u306e\u30af\u30e9\u30b9\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001C\u30d9\u30fc\u30b9\u306eAPI\u306a\u3089\u3070\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nCoreServices\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4eca\u56de\u306f\u5229\u7528\u3057\u307e\u3059\u3002\n\u307e\u305a\u306fCoreServices.framework\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u30d8\u30c3\u30c0\u30fc\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n#import <CoreServices/CoreServices.h>\n\n\u3067\u3001\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u3059\u304c\u3001\n\uff11\u3001FSEventStreamCreate\n\uff12\u3001FSEventStreamScheduleWithRunLoop\n\uff13\u3001FSEventStreamStart\n\u306e\uff13\u30b9\u30c6\u30c3\u30d7\u3067\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u3061\u3089\u306eAPI\u3092\u4f7f\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068Objective-c\u306b\u7d44\u307f\u8fbc\u307f\u306b\u304f\u3044\u305f\u3081\u3001\n\u30e9\u30c3\u30d1\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306f\u30c7\u30ea\u30b2\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3067\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u3053\u3046\u3044\u3046\u306e\u3092\u5b9f\u88c5\u3059\u308b\u6642\u306b\u306fblocks\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\n\u9577\u3044\u30b9\u30d1\u30f3\u3067\u52d5\u4f5c\u3059\u308b\u901a\u77e5\u7cfb\u306b\u304a\u3044\u3066\u306f\u3001\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u5faa\u74b0\u53c2\u7167\u3084\u3089\u6c17\u3092\u914d\u3089\u306a\u304f\u3066\u3044\u3044\u30c7\u30ea\u30b2\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u4e00\u756a\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\niOS\u3067\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3076\u3063\u3061\u3083\u3051iOS\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76e3\u8996\u306a\u3093\u3066\u307b\u3068\u3093\u3069\u4f7f\u308f\u306a\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3002\n\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u3057\u304b\u306a\u3044\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\u30d8\u30c3\u30c0\u30fc(DirectoryObserver.h)\n#import <Foundation/Foundation.h>\n\n@protocol DirectoryObserverDelegate <NSObject>\n- (void)onDirectoryChanged:(id)sender directories:(NSArray *)directories;\n@end\n\n@interface DirectoryObserver : NSObject\n- (id)initWithDirectoryPath:(NSString *)path;\n\n- (void)startObserving;\n- (void)stopObserving;\n\n@property (weak, nonatomic) id<DirectoryObserverDelegate> delegate;\n@end\n\n\n\u5b9f\u88c5(DirectoryObserver.m)\n#import \"DirectoryObserver.h\"\n\n#import <CoreServices/CoreServices.h>\n\n@interface DirectoryObserver()\n- (void)onDirectoryChanged:(NSArray *)directories;\n@end\n\nvoid fs_event_callback(ConstFSEventStreamRef streamRef,\n                       void *clientCallBackInfo,\n                       size_t numEvents,\n                       void *eventPaths,\n                       const FSEventStreamEventFlags eventFlags[],\n                       const FSEventStreamEventId eventIds[])\n{\n    char **paths = eventPaths;\n    NSMutableArray *directories = [NSMutableArray array];\n    for (int i = 0 ; i < numEvents ; i++) {\n        char *path = paths[i];\n        [directories addObject:[NSString stringWithUTF8String:path]];\n    }\n\n    DirectoryObserver *observer = (__bridge DirectoryObserver *)clientCallBackInfo;\n    [observer onDirectoryChanged:directories];\n}\n\n@implementation DirectoryObserver\n{\n    NSString *_path;\n    FSEventStreamRef _stream;\n}\n- (id)initWithDirectoryPath:(NSString *)path\n{\n    if(self = [super init])\n    {\n        _path = path;\n    }\n    return self;\n}\n- (void)startObserving\n{\n    if(_stream)\n        return;\n\n    FSEventStreamContext context = {0};\n    context.info = (__bridge void *)self;\n    CFTimeInterval latency = 0.1; /*\u76e3\u8996\u9593\u9694*/\n    _stream = FSEventStreamCreate(kCFAllocatorDefault,\n                                  fs_event_callback, /*\u30b3\u30fc\u30eb\u30d0\u30c3\u30af*/\n                                  &context, /*\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u306e\u305f\u3081*/\n                                  (__bridge CFArrayRef)@[_path], /*\u76e3\u8996\u3059\u308b\u30d1\u30b9*/\n                                  kFSEventStreamEventIdSinceNow, /*\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093*/\n                                  latency,\n                                  kFSEventStreamCreateFlagNone); /*\u3072\u3068\u307e\u305aNone\u3067*/\n\n    FSEventStreamScheduleWithRunLoop(_stream, CFRunLoopGetCurrent(), kCFRunLoopDefaultMode);\n    FSEventStreamStart(_stream);\n}\n- (void)stopObserving\n{\n    if(_stream == NULL)\n        return;\n\n    FSEventStreamStop(_stream);\n    FSEventStreamUnscheduleFromRunLoop(_stream, CFRunLoopGetCurrent(), kCFRunLoopDefaultMode);\n    FSEventStreamRelease(_stream);\n    _stream = NULL;\n}\n- (void)onDirectoryChanged:(NSArray *)directories\n{\n    if(self.delegate)\n       [self.delegate onDirectoryChanged:self directories:directories];\n}\n@end\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76e3\u8996\u3001\u3064\u307e\u308a\u30d5\u30a1\u30a4\u30eb\u306e\u30ea\u30cd\u30fc\u30e0\u3001\u79fb\u52d5\u3001\u524a\u9664\u3001\u4f5c\u6210\u7b49\u3005\u306e\u3001\n\u76e3\u8996\u3092\u884c\u3044\u305f\u3044\u30b1\u30fc\u30b9\u306f\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3069\u3046\u306b\u3082\u4f7f\u3044\u3084\u3059\u3044NS\u306a\u3093\u3061\u3083\u3089\u306e\u30af\u30e9\u30b9\u306f\u898b\u5f53\u305f\u308a\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001C\u30d9\u30fc\u30b9\u306eAPI\u306a\u3089\u3070\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nCoreServices\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4eca\u56de\u306f\u5229\u7528\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306fCoreServices.framework\u3092\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u305d\u3057\u3066\u30d8\u30c3\u30c0\u30fc\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\n```objc\n#import <CoreServices/CoreServices.h>\n```\n\n\u3067\u3001\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0\u306a\u306e\u3067\u3059\u304c\u3001\n\uff11\u3001FSEventStreamCreate\n\uff12\u3001FSEventStreamScheduleWithRunLoop\n\uff13\u3001FSEventStreamStart\n\u306e\uff13\u30b9\u30c6\u30c3\u30d7\u3067\u53ef\u80fd\u3067\u3059\u3002\n\n\u3053\u3061\u3089\u306eAPI\u3092\u4f7f\u3046\u306e\u3067\u3059\u304c\u3001\u3053\u306e\u307e\u307e\u3060\u3068Objective-c\u306b\u7d44\u307f\u8fbc\u307f\u306b\u304f\u3044\u305f\u3081\u3001\n\u30e9\u30c3\u30d1\u30fc\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4ee5\u4e0b\u306f\u30c7\u30ea\u30b2\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u3067\u306e\u5b9f\u88c5\u3067\u3059\u3002\n\u3053\u3046\u3044\u3046\u306e\u3092\u5b9f\u88c5\u3059\u308b\u6642\u306b\u306fblocks\u3067\u3082\u3044\u3044\u306e\u3067\u3059\u304c\u3001\n\u9577\u3044\u30b9\u30d1\u30f3\u3067\u52d5\u4f5c\u3059\u308b\u901a\u77e5\u7cfb\u306b\u304a\u3044\u3066\u306f\u3001\n\u306a\u3093\u3060\u304b\u3093\u3060\u3067\u5faa\u74b0\u53c2\u7167\u3084\u3089\u6c17\u3092\u914d\u3089\u306a\u304f\u3066\u3044\u3044\u30c7\u30ea\u30b2\u30fc\u30c8\u30d1\u30bf\u30fc\u30f3\u304c\u4e00\u756a\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\niOS\u3067\u306f\u8a66\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u3076\u3063\u3061\u3083\u3051iOS\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u76e3\u8996\u306a\u3093\u3066\u307b\u3068\u3093\u3069\u4f7f\u308f\u306a\u3044\u3068\u304a\u3082\u3044\u307e\u3059\u304c\u30fb\u30fb\u30fb\u3002\n\n\u6700\u4f4e\u9650\u306e\u6a5f\u80fd\u3057\u304b\u306a\u3044\u306e\u3067\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3059\u308b\u3053\u3068\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30d8\u30c3\u30c0\u30fc(DirectoryObserver.h)\n\n```objc\n#import <Foundation/Foundation.h>\n\n@protocol DirectoryObserverDelegate <NSObject>\n- (void)onDirectoryChanged:(id)sender directories:(NSArray *)directories;\n@end\n\n@interface DirectoryObserver : NSObject\n- (id)initWithDirectoryPath:(NSString *)path;\n\n- (void)startObserving;\n- (void)stopObserving;\n\n@property (weak, nonatomic) id<DirectoryObserverDelegate> delegate;\n@end\n\n```\n\n\u5b9f\u88c5(DirectoryObserver.m)\n\n```objc\n#import \"DirectoryObserver.h\"\n\n#import <CoreServices/CoreServices.h>\n\n@interface DirectoryObserver()\n- (void)onDirectoryChanged:(NSArray *)directories;\n@end\n\nvoid fs_event_callback(ConstFSEventStreamRef streamRef,\n                       void *clientCallBackInfo,\n                       size_t numEvents,\n                       void *eventPaths,\n                       const FSEventStreamEventFlags eventFlags[],\n                       const FSEventStreamEventId eventIds[])\n{\n    char **paths = eventPaths;\n    NSMutableArray *directories = [NSMutableArray array];\n    for (int i = 0 ; i < numEvents ; i++) {\n        char *path = paths[i];\n        [directories addObject:[NSString stringWithUTF8String:path]];\n    }\n\n    DirectoryObserver *observer = (__bridge DirectoryObserver *)clientCallBackInfo;\n    [observer onDirectoryChanged:directories];\n}\n\n@implementation DirectoryObserver\n{\n    NSString *_path;\n    FSEventStreamRef _stream;\n}\n- (id)initWithDirectoryPath:(NSString *)path\n{\n    if(self = [super init])\n    {\n        _path = path;\n    }\n    return self;\n}\n- (void)startObserving\n{\n    if(_stream)\n        return;\n    \n    FSEventStreamContext context = {0};\n    context.info = (__bridge void *)self;\n    CFTimeInterval latency = 0.1; /*\u76e3\u8996\u9593\u9694*/\n    _stream = FSEventStreamCreate(kCFAllocatorDefault,\n                                  fs_event_callback, /*\u30b3\u30fc\u30eb\u30d0\u30c3\u30af*/\n                                  &context, /*\u30e6\u30fc\u30b6\u30fc\u30c7\u30fc\u30bf\u306e\u305f\u3081*/\n                                  (__bridge CFArrayRef)@[_path], /*\u76e3\u8996\u3059\u308b\u30d1\u30b9*/\n                                  kFSEventStreamEventIdSinceNow, /*\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093*/\n                                  latency,\n                                  kFSEventStreamCreateFlagNone); /*\u3072\u3068\u307e\u305aNone\u3067*/\n    \n    FSEventStreamScheduleWithRunLoop(_stream, CFRunLoopGetCurrent(), kCFRunLoopDefaultMode);\n    FSEventStreamStart(_stream);\n}\n- (void)stopObserving\n{\n    if(_stream == NULL)\n        return;\n    \n    FSEventStreamStop(_stream);\n    FSEventStreamUnscheduleFromRunLoop(_stream, CFRunLoopGetCurrent(), kCFRunLoopDefaultMode);\n    FSEventStreamRelease(_stream);\n    _stream = NULL;\n}\n- (void)onDirectoryChanged:(NSArray *)directories\n{\n    if(self.delegate)\n       [self.delegate onDirectoryChanged:self directories:directories];\n}\n@end\n```\n\n", "tags": ["Objective-C", "Cocoa"]}