{"tags": ["Unity3D", "C#"], "context": " More than 1 year has passed since last update.Qiita\u521d\u6295\u7a3f\u3002\n\u7df4\u7fd2\u3082\u517c\u306d\u3066\u4f55\u304b\u8a71\u984c\u3092\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3001\u6700\u8fd1\u66f8\u3044\u305fUnity\u7528\u306e\u30ed\u30b0\u30af\u30e9\u30b9\u3092\u601d\u3044\u51fa\u3057\u305f\u306e\u3067\u8cbc\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001Unity 4.3.4f1 \u3067\u306e\u52d5\u4f5c\u306f\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\u5143\u3005\u306f\u3053\u3061\u3089\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u7269\u3092\u898b\u3066\n\u81ea\u5206\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306b\u30fb\u30fb\u30fb\u3068\u5b9f\u88c5\u3057\u305f\u7269\u3067\u3059\u3002\n\n\u30b3\u30fc\u30c9\n\nDkLog.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u753b\u9762\u8868\u793a\u53ef\u80fd\u306a\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\n///\n/// [\u6a5f\u80fd]\n/// \u30fb\u30ec\u30d9\u30eb\u5206\u3051\u30ed\u30b0\n/// \u30fb\u30ed\u30b0\u306e\u753b\u9762\u8868\u793a\uff0b\u8272\u5206\u3051\u8868\u793a\n/// \u30fb\u30dc\u30bf\u30f3\u3067\u8868\u793a\u30ed\u30b0\u30ec\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n/// \u30fb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u53ef\u80fd\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u306f\u91cd\u3044\u306e\u3067\u30fb\u30fb\u30fb\uff09\n///\n/// <example>\n/// // \u5404\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u51fa\u529b\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3082\u540c\u6642\u306b\u51fa\u529b\uff09\n/// DkLog.V(\"verbose log\");\n/// DkLog.D(\"debug log\");\n/// DkLog.I(\"information log\");\n/// DkLog.W(\"warning log\");\n/// DkLog.E(\"error log\");\n/// \n/// // \u753b\u9762\u306b\u306e\u307f\u51fa\u529b\n/// DkLog.V(\"verbose log (not console)\", false);\n/// DkLog.D(\"debug log (not console)\", false);\n/// \n/// // \u753b\u9762\u4e0a\u306b\u30ed\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\uff08\u203b OnGUI()\u5185\u3067\u306e\u547c\u3073\u51fa\u3057\u306b\u306e\u307f\u5bfe\u5fdc\uff09\n/// DkLog.DrawLogWindow(new Rect(0, Screen.Height * 0.5f, Screen.Width * 1.0f, Screen.Height * 0.5f));\n/// </example>\n/// </summary>\n\npublic class DkLog : MonoBehaviour\n{\n\n    #region ///////////// \u30bf\u30a4\u30d7 /////////////\n\n    public enum Level\n    {\n        Verbose,\n        Debug,\n        Information,\n        Warning,\n        Error,\n\n        Max\n    }\n\n    private struct LogData\n    {\n        public Level Level { get; set; }\n        public string Message { get; set; }\n    }\n\n    #endregion\n\n    #region ///////////// \u5b9a\u6570 /////////////\n\n    /// \u8868\u793a\u53ef\u80fd\u30ed\u30b0\u6700\u5927\u6570\n    private static int LOG_MAX = 200;\n\n    /// \u5404\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u8272\n    private static Color[] LOG_COLOR =\n    {\n        Color.gray,\n        Color.white,\n        Color.cyan,\n        Color.yellow,\n        Color.red\n    };\n\n    #endregion\n\n    #region ///////////// \u30e1\u30f3\u30d0 /////////////\n\n    private static Level _logLevel = Level.Debug;                           // \u8868\u793a\u5bfe\u8c61\u30ed\u30b0\u30ec\u30d9\u30eb\n    private static Queue<LogData> _logQue = new Queue<LogData>(LOG_MAX);    // \u30ed\u30b0\u30ad\u30e5\u30fc\n    private static Vector2 _scrollPosition = Vector2.zero;                  // \u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u4f4d\u7f6e\n    private static bool _isNeedScrollReset = false;                         // \u30b9\u30af\u30ed\u30fc\u30eb\u4f4d\u7f6e\u30ea\u30bb\u30c3\u30c8\u30d5\u30e9\u30b0\n\n    #endregion\n\n    #region ///////////// \u30ed\u30b0\u51e6\u7406 /////////////\n\n    public static void V(string message, bool isConsole = true) { _Push(Level.Verbose, message, isConsole); }\n    public static void D(string message, bool isConsole = true) { _Push(Level.Debug, message, isConsole); }\n    public static void I(string message, bool isConsole = true) { _Push(Level.Information, message, isConsole); }\n    public static void W(string message, bool isConsole = true) { _Push(Level.Warning, message, isConsole); }\n    public static void E(string message, bool isConsole = true) { _Push(Level.Error, message, isConsole); }\n\n    /// <summary>\n    /// \u30ed\u30b0\u3092\u753b\u9762\u4e0a\u306b\u8868\u793a\u3059\u308b\n    /// OnGUI() \u5185\u3067\u547c\u3073\u51fa\u3057\u3066\u4e0b\u3055\u3044\n    /// </summary>\n    /// <param name=\"drawArea\">\u63cf\u753b\u5bfe\u8c61\u9818\u57df\uff08\u5de6\u4e0a\u304c0,0\uff09</param>\n    public static void DrawLogWindow(Rect drawArea)\n    {\n        // \u4e0b\u5730\n        GUI.Box(drawArea, \"\");\n\n        GUILayout.BeginArea(drawArea);\n        {\n            /////////////\n            // \u30ed\u30b0\u30ec\u30d9\u30eb\u5207\u308a\u66ff\u3048\u30dc\u30bf\u30f3\n            if (GUILayout.Button(_logLevel.ToString()))\n            {\n                _logLevel = (Level)((int)(_logLevel + 1) % (int)Level.Max);\n                _isNeedScrollReset = true;\n            }\n\n            /////////////\n            // \u30ed\u30b0\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\n            _scrollPosition = GUILayout.BeginScrollView(_scrollPosition, true, true);\n\n            int num = 0;\n            GUIStyle style = new GUIStyle();\n            foreach (LogData d in _logQue)\n            {\n                // \u30ed\u30b0\u30ec\u30d9\u30eb\u306b\u3088\u3063\u3066\u5f3e\u304f\n                if (d.Level >= _logLevel)\n                {\n                    // 0\u59cb\u307e\u308a\u306e\u30ed\u30b0\u884c\u6570\u3092\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u3057\u3066\u4ed8\u52a0\u3057\u3066\u3044\u307e\u3059\n                    // \u6642\u523b\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\n                    style.normal.textColor = LOG_COLOR[(int)d.Level];\n                    GUILayout.Label(num.ToString() + \" \" + d.Message, style);                    \n                    ++num;\n                }\n            }\n\n            // \u30ed\u30b0\u8868\u793a\u4f4d\u7f6e\u3092\u5148\u982d\u306b\u30ea\u30bb\u30c3\u30c8\u3059\u308b\n            if (_isNeedScrollReset)\n            {\n                _isNeedScrollReset = false;\n                _scrollPosition.y = (num > 0) ? (num - 1) * 20 : 0;\n            }\n\n            GUILayout.EndScrollView();\n        }\n        GUILayout.EndArea();\n\n    }\n\n    /// <summary>\n    /// \u30ed\u30b0\u3092\u30ad\u30e5\u30fc\u306b\u8a70\u3081\u308b\n    /// </summary>\n    /// <param name=\"level\"></param>\n    /// <param name=\"message\"></param>\n    /// <param name=\"isConsole\"></param>\n    private static void _Push( Level level, string message, bool isConsole )\n    {\n        /////////////\n        // \u30ad\u30e5\u30fc\u304c\u4e00\u676f\u3060\u3063\u305f\u3089\u5f8c\u308d\u3092\u524a\u9664\n        if (_logQue.Count >= LOG_MAX)\n        {\n            _logQue.Dequeue();\n        }\n\n        /////////////\n        // \u30ad\u30e5\u30fc\u306b\u8a70\u3081\u308b\n        LogData data = new LogData();\n        {\n            data.Level = level;\n            data.Message = message;\n        }\n        _logQue.Enqueue(data);\n\n        // \u30ed\u30b0\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b\n        // @todo \u51fa\u308b\u5ea6\u306b\u52dd\u624b\u306b\u52d5\u304f\u3002\u8981\u3089\u306a\u3044\u304b\u3082\uff1f\n        _isNeedScrollReset = true;\n\n        /////////////\n        // \u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n        if (isConsole)\n        {\n            switch (level)\n            {\n                case Level.Warning: Debug.LogWarning(message); break;\n                case Level.Error: Debug.LogError(message); break;\n                default: Debug.Log(message); break;\n            }\n        }\n    }\n\n    #endregion\n}\n\n\n\n\u5b9f\u884c\u7d50\u679c\n\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\nDebug\u3068\u66f8\u304b\u308c\u305f\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u8868\u793a\u3059\u308b\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\n\n\n2014/07/22 \u8ffd\u8a18\n\u30a8\u30c7\u30a3\u30bf\u3088\u308a\u306b\u6539\u4fee\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3 \u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002\nQiita\u521d\u6295\u7a3f\u3002\n\u7df4\u7fd2\u3082\u517c\u306d\u3066\u4f55\u304b\u8a71\u984c\u3092\u3068\u8003\u3048\u3066\u3044\u305f\u3089\u3001\u6700\u8fd1\u66f8\u3044\u305fUnity\u7528\u306e\u30ed\u30b0\u30af\u30e9\u30b9\u3092\u601d\u3044\u51fa\u3057\u305f\u306e\u3067\u8cbc\u3063\u3066\u307f\u307e\u3059\u3002\n\u306a\u304a\u3001Unity 4.3.4f1 \u3067\u306e\u52d5\u4f5c\u306f\u78ba\u8a8d\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5143\u3005\u306f[\u3053\u3061\u3089](http://d.hatena.ne.jp/nyakuo/20120429/1335717199)\u3067\u7d39\u4ecb\u3055\u308c\u3066\u3044\u305f\u7269\u3092\u898b\u3066\n\u81ea\u5206\u306a\u3089\u3053\u3093\u306a\u611f\u3058\u306b\u30fb\u30fb\u30fb\u3068\u5b9f\u88c5\u3057\u305f\u7269\u3067\u3059\u3002\n\n## \u30b3\u30fc\u30c9\n\n```csharp:DkLog.cs\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\n\n/// <summary>\n/// \u753b\u9762\u8868\u793a\u53ef\u80fd\u306a\u30c7\u30d0\u30c3\u30b0\u30ed\u30b0\n///\n/// [\u6a5f\u80fd]\n/// \u30fb\u30ec\u30d9\u30eb\u5206\u3051\u30ed\u30b0\n/// \u30fb\u30ed\u30b0\u306e\u753b\u9762\u8868\u793a\uff0b\u8272\u5206\u3051\u8868\u793a\n/// \u30fb\u30dc\u30bf\u30f3\u3067\u8868\u793a\u30ed\u30b0\u30ec\u30d9\u30eb\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\n/// \u30fb\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u51fa\u3055\u306a\u3044\u3088\u3046\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3082\u53ef\u80fd\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u306f\u91cd\u3044\u306e\u3067\u30fb\u30fb\u30fb\uff09\n///\n/// <example>\n/// // \u5404\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u51fa\u529b\uff08\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u3082\u540c\u6642\u306b\u51fa\u529b\uff09\n/// DkLog.V(\"verbose log\");\n/// DkLog.D(\"debug log\");\n/// DkLog.I(\"information log\");\n/// DkLog.W(\"warning log\");\n/// DkLog.E(\"error log\");\n/// \n/// // \u753b\u9762\u306b\u306e\u307f\u51fa\u529b\n/// DkLog.V(\"verbose log (not console)\", false);\n/// DkLog.D(\"debug log (not console)\", false);\n/// \n/// // \u753b\u9762\u4e0a\u306b\u30ed\u30b0\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u8868\u793a\uff08\u203b OnGUI()\u5185\u3067\u306e\u547c\u3073\u51fa\u3057\u306b\u306e\u307f\u5bfe\u5fdc\uff09\n/// DkLog.DrawLogWindow(new Rect(0, Screen.Height * 0.5f, Screen.Width * 1.0f, Screen.Height * 0.5f));\n/// </example>\n/// </summary>\n\npublic class DkLog : MonoBehaviour\n{\n\n    #region ///////////// \u30bf\u30a4\u30d7 /////////////\n\n    public enum Level\n    {\n        Verbose,\n        Debug,\n        Information,\n        Warning,\n        Error,\n\n        Max\n    }\n\n    private struct LogData\n    {\n        public Level Level { get; set; }\n        public string Message { get; set; }\n    }\n\n    #endregion\n\n    #region ///////////// \u5b9a\u6570 /////////////\n\n    /// \u8868\u793a\u53ef\u80fd\u30ed\u30b0\u6700\u5927\u6570\n    private static int LOG_MAX = 200;\n\n    /// \u5404\u30ec\u30d9\u30eb\u306e\u30ed\u30b0\u8272\n    private static Color[] LOG_COLOR =\n    {\n        Color.gray,\n        Color.white,\n        Color.cyan,\n        Color.yellow,\n        Color.red\n    };\n\n    #endregion\n\n    #region ///////////// \u30e1\u30f3\u30d0 /////////////\n    \n    private static Level _logLevel = Level.Debug;                           // \u8868\u793a\u5bfe\u8c61\u30ed\u30b0\u30ec\u30d9\u30eb\n    private static Queue<LogData> _logQue = new Queue<LogData>(LOG_MAX);    // \u30ed\u30b0\u30ad\u30e5\u30fc\n    private static Vector2 _scrollPosition = Vector2.zero;                  // \u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\u4f4d\u7f6e\n    private static bool _isNeedScrollReset = false;                         // \u30b9\u30af\u30ed\u30fc\u30eb\u4f4d\u7f6e\u30ea\u30bb\u30c3\u30c8\u30d5\u30e9\u30b0\n    \n    #endregion\n\n    #region ///////////// \u30ed\u30b0\u51e6\u7406 /////////////\n\n    public static void V(string message, bool isConsole = true) { _Push(Level.Verbose, message, isConsole); }\n    public static void D(string message, bool isConsole = true) { _Push(Level.Debug, message, isConsole); }\n    public static void I(string message, bool isConsole = true) { _Push(Level.Information, message, isConsole); }\n    public static void W(string message, bool isConsole = true) { _Push(Level.Warning, message, isConsole); }\n    public static void E(string message, bool isConsole = true) { _Push(Level.Error, message, isConsole); }\n\n    /// <summary>\n    /// \u30ed\u30b0\u3092\u753b\u9762\u4e0a\u306b\u8868\u793a\u3059\u308b\n    /// OnGUI() \u5185\u3067\u547c\u3073\u51fa\u3057\u3066\u4e0b\u3055\u3044\n    /// </summary>\n    /// <param name=\"drawArea\">\u63cf\u753b\u5bfe\u8c61\u9818\u57df\uff08\u5de6\u4e0a\u304c0,0\uff09</param>\n    public static void DrawLogWindow(Rect drawArea)\n    {\n        // \u4e0b\u5730\n        GUI.Box(drawArea, \"\");\n\n        GUILayout.BeginArea(drawArea);\n        {\n            /////////////\n            // \u30ed\u30b0\u30ec\u30d9\u30eb\u5207\u308a\u66ff\u3048\u30dc\u30bf\u30f3\n            if (GUILayout.Button(_logLevel.ToString()))\n            {\n                _logLevel = (Level)((int)(_logLevel + 1) % (int)Level.Max);\n                _isNeedScrollReset = true;\n            }\n\n            /////////////\n            // \u30ed\u30b0\u30b9\u30af\u30ed\u30fc\u30eb\u30d3\u30e5\u30fc\n            _scrollPosition = GUILayout.BeginScrollView(_scrollPosition, true, true);\n\n            int num = 0;\n            GUIStyle style = new GUIStyle();\n            foreach (LogData d in _logQue)\n            {\n                // \u30ed\u30b0\u30ec\u30d9\u30eb\u306b\u3088\u3063\u3066\u5f3e\u304f\n                if (d.Level >= _logLevel)\n                {\n                    // 0\u59cb\u307e\u308a\u306e\u30ed\u30b0\u884c\u6570\u3092\u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u3057\u3066\u4ed8\u52a0\u3057\u3066\u3044\u307e\u3059\n                    // \u6642\u523b\u306b\u3057\u305f\u65b9\u304c\u3044\u3044\u304b\u3082\n                    style.normal.textColor = LOG_COLOR[(int)d.Level];\n                    GUILayout.Label(num.ToString() + \" \" + d.Message, style);                    \n                    ++num;\n                }\n            }\n\n            // \u30ed\u30b0\u8868\u793a\u4f4d\u7f6e\u3092\u5148\u982d\u306b\u30ea\u30bb\u30c3\u30c8\u3059\u308b\n            if (_isNeedScrollReset)\n            {\n                _isNeedScrollReset = false;\n                _scrollPosition.y = (num > 0) ? (num - 1) * 20 : 0;\n            }\n\n            GUILayout.EndScrollView();\n        }\n        GUILayout.EndArea();\n\n    }\n\n    /// <summary>\n    /// \u30ed\u30b0\u3092\u30ad\u30e5\u30fc\u306b\u8a70\u3081\u308b\n    /// </summary>\n    /// <param name=\"level\"></param>\n    /// <param name=\"message\"></param>\n    /// <param name=\"isConsole\"></param>\n    private static void _Push( Level level, string message, bool isConsole )\n    {\n        /////////////\n        // \u30ad\u30e5\u30fc\u304c\u4e00\u676f\u3060\u3063\u305f\u3089\u5f8c\u308d\u3092\u524a\u9664\n        if (_logQue.Count >= LOG_MAX)\n        {\n            _logQue.Dequeue();\n        }\n\n        /////////////\n        // \u30ad\u30e5\u30fc\u306b\u8a70\u3081\u308b\n        LogData data = new LogData();\n        {\n            data.Level = level;\n            data.Message = message;\n        }\n        _logQue.Enqueue(data);\n\n        // \u30ed\u30b0\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b\n        // @todo \u51fa\u308b\u5ea6\u306b\u52dd\u624b\u306b\u52d5\u304f\u3002\u8981\u3089\u306a\u3044\u304b\u3082\uff1f\n        _isNeedScrollReset = true;\n\n        /////////////\n        // \u30b3\u30f3\u30bd\u30fc\u30eb\u51fa\u529b\n        if (isConsole)\n        {\n            switch (level)\n            {\n                case Level.Warning: Debug.LogWarning(message); break;\n                case Level.Error: Debug.LogError(message); break;\n                default: Debug.Log(message); break;\n            }\n        }\n    }\n\n    #endregion\n}\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n\u753b\u9762\u306b\u8868\u793a\u3055\u305b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n![UnityLog.png](https://qiita-image-store.s3.amazonaws.com/0/39914/38d44a52-59ba-e61c-d70b-30119a2dcba6.png)\n\n\nDebug\u3068\u66f8\u304b\u308c\u305f\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u3001\u8868\u793a\u3059\u308b\u30ed\u30b0\u30ec\u30d9\u30eb\u3092\u5909\u66f4\u3067\u304d\u307e\u3059\n\n![UnityLogW.png](https://qiita-image-store.s3.amazonaws.com/0/39914/272f1947-e636-3758-bfab-b7a3045dadc1.png)\n\n\n## 2014/07/22 \u8ffd\u8a18\n\n[\u30a8\u30c7\u30a3\u30bf\u3088\u308a\u306b\u6539\u4fee\u3057\u305f\u30d0\u30fc\u30b8\u30e7\u30f3](http://qiita.com/dk4kd/items/24dd0f4c32a170a0ec12) \u3092\u6295\u7a3f\u3057\u307e\u3057\u305f\u3002\n"}