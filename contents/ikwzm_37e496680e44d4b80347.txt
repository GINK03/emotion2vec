{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSynverll\u306f\u77f3\u539f\u3072\u3067\u307f\u3055\u3093\u304c\u958b\u767a\u3057\u3066\u3044\u308b\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3084\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u3072\u3067\u307f\u306e\u30a2\u30a4\u30c7\u30a2\u5e33  : \u77f3\u539f\u3072\u3067\u307f\u3055\u3093\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u3059\u3002\n\nhttps://github.com/aquaxis/synverll : Github\u3067\u516c\u958b\u3057\u3066\u3044\u308bSynverll\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3002\n\nFPGA\u30de\u30ac\u30b8\u30f3 No.11 : 95\u30da\u30fc\u30b8\u306b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n\nFPGA\u306e\u90e8\u5c4b\u306e\u307e\u3068\u3081\u30b5\u30a4\u30c8 : marsee101\u3055\u3093\u304cSynverll\u3092\u8a66\u3057\u305f\u3068\u304d\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3002\n\n\u4eca\u56de\u306fC\u3067\u8a18\u8ff0\u3057\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Synverll\u3092\u4f7f\u3063\u3066\u9ad8\u4f4d\u5408\u6210\u3057\u305fRTL\u3092MessagePack-RPC\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u7528\u610f\u3059\u308b\u3082\u306e\n\nXilinx Vivado 2015.3\nSynverll 0.04\u4ee5\u964d\nLLVM 3.6 \u4ee5\u964d\nRuby 1.9.3 \u4ee5\u964d\n msgpack-vhdl-examples\n\n\n\n\u30d6\u30ed\u30c3\u30af\u56f3\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bC\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nfib.c\nint fib(int n)\n{\n  int curr = 0;\n  int next = 1;\n  int i;\n  for(i = 0; i < n; i++) {\n    int prev = curr;\n    curr = next;\n    next += prev;\n  }\n  return curr;\n}\n\n\n\n\u624b\u9806\n\nSynverll\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nSynverll\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4e0a\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nSynverll\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f LLVM 3.6 \u4ee5\u964d\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\nshell% git clone https://github.com/aquaxis/synverll\nshell% cd synverll\nshell% make\n\n\n\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n\n\nfib.c\u3092\u9ad8\u4f4d\u5408\u6210\nshell% cd examples/fibonacci/src/main/synverll\nshell% synverll\nSynverll Rev 0.04\n Synthesis for Verilog HDL using LLVM\n C Source to Verilog-HDL Convertor\n Hidemi Ishihara <hidemi(at)aquaxis.com>\n\nUsage:\n synverll [-d] C_SOURCE_FILENAME\n  -d: Debug Mode(output a debug file)\n\nshell% synverll fib.c\ntopname: fib_top\n[C Source Parser Start]\nOpen Filename: fib.c\n -> Parser for C Source\n -> Create Process Source\n -> Create Header Source\n -> Function Count: 1\n[LLVM Compile Start]\n[LLVM-IR Function Parser Start]\n[Parsing struct type for LLCM-IR]\n -> Create Stage for LLVM-IR\n -> Parser Memory Tree\n -> deploy_array_type\n -> Create Verilog HDL for Proc Tree\n -> Output Verilog HDL: module = fib\n -> Output Memory Map\n[Create top Module]\n\n\n\u30e9\u30c3\u30d1\u30fc\u56de\u8def\u306e\u4f5c\u6210\nSynverll\u304c\u751f\u6210\u3059\u308bVerilog-HDL\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nfib.v\nmodule fib(\n    input __func_clock,\n    input __func_reset,\n    input __func_start,\n    output reg __func_done,\n    output reg __func_ready,\n\n    // Memory Singal\n    input [31:0] __args_n,\n    // Call Singal\n    // Result Singal\n    output reg [31:0] __func_result\n\n);\n   :\n (\u4e2d\u7565)\n   :\nendmodule\n\n\n\u5165\u51fa\u529b\u30dd\u30fc\u30c8\u540d\u304c\u3001\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u3067\u59cb\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u3060\u3068VHDL\u306e\u547d\u540d\u898f\u5247\u306b\u3072\u3063\u304b\u304b\u3063\u3066(VHDL\u306f\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u304b\u3089\u59cb\u307e\u308b\u540d\u524d\u306f\u00d7)\u63a5\u7d9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u56de\u8def\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u3053\u306f\u3061\u3087\u3063\u3068\u9762\u5012\u81ed\u3044\u3067\u3059\u306d\u3002\n\nfib_wrap.v\nmodule fib_wrap(\n    input  system_clock,\n    input  system_reset,\n    input  func_start,\n    output func_done,\n    output func_ready,\n    input [31:0]  args_n,\n    output [31:0] func_result\n);\nfib u_fib(\n    .__func_clock(system_clock),\n    .__func_reset(system_reset),\n    .__func_start(func_start),\n    .__func_done(func_done),\n    .__func_ready(func_ready),\n    .__args_n(args_n),\n    .__func_result(func_result)\n);\nendmodule\n\n\n\n\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u306e\u4f5c\u6210\n\u3059\u3067\u306b\u4f5c\u6210\u6e08\u307f\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(examples/fibonacci/src/test/scenarios/test_1_32.snr)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nAXI4_Stream_Master_Player\u304a\u3088\u3073AXI4_Stream_Slave_Player\u7528\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f5c\u308a\u307e\u3059\u3002\nshell% cd examples/fibonacci/src/test/scenarios\nshell% ruby test_1_32.rb\n\ntest_1_32.rb \u306f\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(YAML\u5f62\u5f0f)\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eruby\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30d5\u30a1\u30a4\u30eb(create_project.tcl)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nVivado\u3092\u8d77\u52d5\u3057\u3066\u6b21\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089Tcl\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nVivado > Tools > Run Tcl Script... > examples/fibonacci/sim/vivado/synverll/create_project.tcl\n\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\u524d\u7bc0\u3067\u4f5c\u3063\u305f Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u304d\u3001\u6b21\u306e\u3088\u3046\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nVivado > Flow > Run Simulation > Run Behavioral Simulation\n\n\n\u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\nn=0\uff5e42\u307e\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3082\u3042\u3063\u3066\u3044\u307e\u3059\u3002\n\u6f14\u7b97\u306e\u30d3\u30c3\u30c8\u5e45\u309264\u30d3\u30c3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u7d50\u679c\u304c32\u30d3\u30c3\u30c8\u306b\u53ce\u307e\u308b\u7bc4\u56f2\u306en\u3067\u3057\u304b\u8a08\u7b97\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u53c2\u8003\u307e\u3067\u306bn=2\u306e\u6642\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6ce2\u5f62\u3092\u793a\u3057\u307e\u3059\u3002\n\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u306e\u30ed\u30b0\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n\n\u53c2\u8003\n\n\u3072\u3067\u307f\u306e\u30a2\u30a4\u30c7\u30a2\u5e33\nhttps://github.com/aquaxis/synverll\nmsgpack-vhdl-examples\nFPGA\u30de\u30ac\u30b8\u30f3 No.11\n\nFPGA\u306e\u90e8\u5c4b\u306e\u307e\u3068\u3081\u30b5\u30a4\u30c8 \n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092VHDL\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Polyphony\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092neonlight\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)\n\n#\u306f\u3058\u3081\u306b\n\nSynverll\u306f\u77f3\u539f\u3072\u3067\u307f\u3055\u3093\u304c\u958b\u767a\u3057\u3066\u3044\u308b\u9ad8\u4f4d\u5408\u6210\u30c4\u30fc\u30eb\u3067\u3059\u3002\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3084\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n - [\u3072\u3067\u307f\u306e\u30a2\u30a4\u30c7\u30a2\u5e33](http://www.sweetcafe.jp)  : \u77f3\u539f\u3072\u3067\u307f\u3055\u3093\u306e\u30db\u30fc\u30e0\u30da\u30fc\u30b8\u3067\u3059\u3002\n - [https://github.com/aquaxis/synverll](https://github.com/aquaxis/synverll) : Github\u3067\u516c\u958b\u3057\u3066\u3044\u308bSynverll\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3002\n - [FPGA\u30de\u30ac\u30b8\u30f3 No.11](http://www.kumikomi.net/fpga/contents/0011.php) : 95\u30da\u30fc\u30b8\u306b\u8a18\u4e8b\u304c\u3042\u308a\u307e\u3059\u3002\n - [FPGA\u306e\u90e8\u5c4b\u306e\u307e\u3068\u3081\u30b5\u30a4\u30c8](http://marsee101.web.fc2.com/synverll.html) : marsee101\u3055\u3093\u304cSynverll\u3092\u8a66\u3057\u305f\u3068\u304d\u306e\u30d6\u30ed\u30b0\u8a18\u4e8b\u3002\n\n\u4eca\u56de\u306fC\u3067\u8a18\u8ff0\u3057\u305f\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092Synverll\u3092\u4f7f\u3063\u3066\u9ad8\u4f4d\u5408\u6210\u3057\u305fRTL\u3092MessagePack-RPC\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n#\u7528\u610f\u3059\u308b\u3082\u306e\n\n - Xilinx Vivado 2015.3\n - [Synverll 0.04\u4ee5\u964d](https://github.com/aquaxis/synverll)\n - LLVM 3.6 \u4ee5\u964d\n - Ruby 1.9.3 \u4ee5\u964d\n -  [msgpack-vhdl-examples](https://github.com/ikwzm/msgpack-vhdl-examples)\n\n#\u30d6\u30ed\u30c3\u30af\u56f3\n\n![akgeo2.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/d9802aeb-3dc3-1f7e-daf5-b2a3d070fbdf.jpeg)\n\n#\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308bC\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n````C:fib.c\nint fib(int n)\n{\n  int curr = 0;\n  int next = 1;\n  int i;\n  for(i = 0; i < n; i++) {\n    int prev = curr;\n    curr = next;\n    next += prev;\n  }\n  return curr;\n}\n````\n\n#\u624b\u9806\n\n##Synverll\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nSynverll\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\u4e0a\u306e\u8a18\u4e8b\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\nSynverll\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u306b\u306f LLVM 3.6 \u4ee5\u964d\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\n````\nshell% git clone https://github.com/aquaxis/synverll\nshell% cd synverll\nshell% make\n````\n\n##\u30ea\u30dd\u30b8\u30c8\u30ea\u3068\u5404submodule \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n````\nshell% git clone git://github.com/ikwzm/msgpack-vhdl-examples.git\nshell% cd msgpack-vhdl-examples\nshell% git submodule init\nshell% git submodule update\n````\n\n##fib.c\u3092\u9ad8\u4f4d\u5408\u6210\n\n````\nshell% cd examples/fibonacci/src/main/synverll\nshell% synverll\nSynverll Rev 0.04\n Synthesis for Verilog HDL using LLVM\n C Source to Verilog-HDL Convertor\n Hidemi Ishihara <hidemi(at)aquaxis.com>\n\nUsage:\n synverll [-d] C_SOURCE_FILENAME\n  -d: Debug Mode(output a debug file)\n\nshell% synverll fib.c\ntopname: fib_top\n[C Source Parser Start]\nOpen Filename: fib.c\n -> Parser for C Source\n -> Create Process Source\n -> Create Header Source\n -> Function Count: 1\n[LLVM Compile Start]\n[LLVM-IR Function Parser Start]\n[Parsing struct type for LLCM-IR]\n -> Create Stage for LLVM-IR\n -> Parser Memory Tree\n -> deploy_array_type\n -> Create Verilog HDL for Proc Tree\n -> Output Verilog HDL: module = fib\n -> Output Memory Map\n[Create top Module]\n````\n\n##\u30e9\u30c3\u30d1\u30fc\u56de\u8def\u306e\u4f5c\u6210\n\nSynverll\u304c\u751f\u6210\u3059\u308bVerilog-HDL\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n````Verilog:fib.v\nmodule fib(\n\tinput __func_clock,\n\tinput __func_reset,\n\tinput __func_start,\n\toutput reg __func_done,\n\toutput reg __func_ready,\n\n\t// Memory Singal\n\tinput [31:0] __args_n,\n\t// Call Singal\n\t// Result Singal\n\toutput reg [31:0] __func_result\n\n);\n   :\n (\u4e2d\u7565)\n   :\nendmodule\n````\n\n\u5165\u51fa\u529b\u30dd\u30fc\u30c8\u540d\u304c\u3001\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u3067\u59cb\u307e\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u306e\u307e\u307e\u3060\u3068VHDL\u306e\u547d\u540d\u898f\u5247\u306b\u3072\u3063\u304b\u304b\u3063\u3066(VHDL\u306f\u30a2\u30f3\u30c0\u30fc\u30e9\u30a4\u30f3\u304b\u3089\u59cb\u307e\u308b\u540d\u524d\u306f\u00d7)\u63a5\u7d9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u30e9\u30c3\u30d1\u30fc\u56de\u8def\u3092\u7528\u610f\u3057\u307e\u3059\u3002\u3053\u3053\u306f\u3061\u3087\u3063\u3068\u9762\u5012\u81ed\u3044\u3067\u3059\u306d\u3002\n\n````Verilog:fib_wrap.v\nmodule fib_wrap(\n\tinput  system_clock,\n\tinput  system_reset,\n\tinput  func_start,\n\toutput func_done,\n\toutput func_ready,\n\tinput [31:0]  args_n,\n\toutput [31:0] func_result\n);\nfib u_fib(\n\t.__func_clock(system_clock),\n\t.__func_reset(system_reset),\n\t.__func_start(func_start),\n\t.__func_done(func_done),\n\t.__func_ready(func_ready),\n\t.__args_n(args_n),\n\t.__func_result(func_result)\n);\nendmodule\n````\n\n##\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u306e\u4f5c\u6210\n\n\u3059\u3067\u306b\u4f5c\u6210\u6e08\u307f\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(examples/fibonacci/src/test/scenarios/test_1_32.snr)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f7f\u3046\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306f\u98db\u3070\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\nAXI4_Stream_Master_Player\u304a\u3088\u3073AXI4_Stream_Slave_Player\u7528\u306e\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa\u3092\u4f5c\u308a\u307e\u3059\u3002\n\n````\nshell% cd examples/fibonacci/src/test/scenarios\nshell% ruby test_1_32.rb\n````\n\ntest_1_32.rb \u306f\u30c6\u30b9\u30c8\u30b7\u30ca\u30ea\u30aa(YAML\u5f62\u5f0f)\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306eruby\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3059\u3002\n\n##Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\nVivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u305f\u3081\u306eTcl\u30d5\u30a1\u30a4\u30eb(create_project.tcl)\u3092\u7528\u610f\u3057\u3066\u3044\u307e\u3059\u3002\nVivado\u3092\u8d77\u52d5\u3057\u3066\u6b21\u306e\u30e1\u30cb\u30e5\u30fc\u304b\u3089Tcl\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n````\nVivado > Tools > Run Tcl Script... > examples/fibonacci/sim/vivado/synverll/create_project.tcl\n````\n\n##\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\n\n\u524d\u7bc0\u3067\u4f5c\u3063\u305f Vivado \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u958b\u304d\u3001\u6b21\u306e\u3088\u3046\u306b\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n````\nVivado > Flow > Run Simulation > Run Behavioral Simulation\n````\n\n#\u7d50\u679c\n\u3068\u308a\u3042\u3048\u305a\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u3059\u308b\u3053\u3068\u306f\u51fa\u6765\u307e\u3057\u305f\u3002\nn=0\uff5e42\u307e\u3067\u306e\u8a08\u7b97\u7d50\u679c\u3082\u3042\u3063\u3066\u3044\u307e\u3059\u3002\n\u6f14\u7b97\u306e\u30d3\u30c3\u30c8\u5e45\u309264\u30d3\u30c3\u30c8\u306b\u3059\u308b\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u7d50\u679c\u304c32\u30d3\u30c3\u30c8\u306b\u53ce\u307e\u308b\u7bc4\u56f2\u306en\u3067\u3057\u304b\u8a08\u7b97\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\u53c2\u8003\u307e\u3067\u306bn=2\u306e\u6642\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6ce2\u5f62\u3092\u793a\u3057\u307e\u3059\u3002\n![fibonacci_synverll.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/d75cca13-35e9-0e6c-3575-733ff0a1e684.jpeg)\n\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u6642\u306e\u30ed\u30b0\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n![fibonacci_synverll_log.jpg](https://qiita-image-store.s3.amazonaws.com/0/24981/0cab84ef-f118-c2a8-6e8b-9f80288cb7f1.jpeg)\n\n\n#\u53c2\u8003\n\n- [\u3072\u3067\u307f\u306e\u30a2\u30a4\u30c7\u30a2\u5e33](http://www.sweetcafe.jp)\n- [https://github.com/aquaxis/synverll](https://github.com/aquaxis/synverll)\n- [msgpack-vhdl-examples](https://github.com/ikwzm/msgpack-vhdl-examples)\n- [FPGA\u30de\u30ac\u30b8\u30f3 No.11](http://www.kumikomi.net/fpga/contents/0011.php)\n- [FPGA\u306e\u90e8\u5c4b\u306e\u307e\u3068\u3081\u30b5\u30a4\u30c8](http://marsee101.web.fc2.com/synverll.html) \n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Synthesijer\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/6b3e8120cc4ebbdd5a27)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092VHDL\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/a0ff6cf559f766162951)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092Polyphony\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/48acfa3003522cf0c7a3)\n- [\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u3092\u6c42\u3081\u308b\u56de\u8def\u3092neonlight\u3068MessagePack-RPC\u3067FPGA\u306b\u5b9f\u88c5\u3057\u3066\u307f\u305f(\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7de8)](http://qiita.com/ikwzm/items/1b7cae327719c23fe55d)\n\n\n\n\n\n", "tags": ["Synverll", "HDL", "FPGA", "Vivado"]}