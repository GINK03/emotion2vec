{"context": "rust-clippy \u306e\u5b58\u5728\u81ea\u4f53\u306f\u4ee5\u524d\u304b\u3089\u77e5\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u306a\u304f\u98df\u308f\u305a\u5acc\u3044\u306e\u307e\u307e\u653e\u7f6e\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u4f5c\u696d\u8a18\u9332\u3092\u517c\u306d\u3053\u306e\u6a5f\u4f1a\u306b\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u53c2\u8003:\n\nhttps://github.com/Manishearth/rust-clippy\nhttp://qiita.com/hhatto/items/9415cc5c11b3b201030a\n\n\n\u4f7f\u7528\u65b9\u6cd5\nRust \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b rustup \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u3053\u308c\u4ee5\u5916\u306e\u65b9\u6cd5\u3067 Rust \u306e\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u4eba\u306f\u5c11\u6570\u6d3e\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u2026 \uff08\u5148\u65e5\u3081\u3067\u305f\u304f\u30e1\u30b8\u30e3\u30fc\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u30a2\u30ca\u30a6\u30f3\u30b9\u3055\u308c\u307e\u3057\u305f\u306d\uff09\n\u307e\u305f\u3001rust-clippy \u306f nightly \u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u308b\u305f\u3081 nightly \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n$ rustup toolchain install nightly\n\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4f7f\u7528\u3059\u308b\n\u57fa\u672c\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001\u307e\u305a\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 clippy \u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\nnightly \u30c1\u30e3\u30f3\u30cd\u30eb\u306e cargo \u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3066 clippy \u3092\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\ncargo-clippy \u3068\u3044\u3046\u540d\u524d\u3067 $HOME/.cargo/bin \u4e0b\u306b\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001cargo \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 Lint \u3092\u8d70\u3089\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n$ rustup run nightly cargo install clippy\n$ rustup run nightly cargo clippy\n\nrustup \u306e\u6a5f\u80fd\u3092\u7528\u3044\u308b\u3068\u3001\u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n$ cargo +nightly install clippy\n$ cargo +nightly clippy\n\n\u4f8b\u984c\u3068\u3057\u3066\u3001\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e README \u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066 Lint \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u4eca\u56de\u691c\u8a3c\u306b\u7528\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\nfn main(){\n    let x = Some(1u8);\n    match x {\n        Some(y) => println!(\"{:?}\", y),\n        _ => ()\n    }\n}\n\n\u500b\u4eba\u7684\u306b\u306f main() \u306e\u3042\u3068\u306b\u7a7a\u767d\u304c\u306a\u3044\u306e\u304c\u6c17\u306b\u306a\u308b\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u3001clippy \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n$ cargo +nightly clippy\n   Compiling hoge v0.1.0 (file:///home/vagrant/work/hoge)\nwarning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`, #[warn(single_match)] on by default\n --> src/main.rs:3:5\n  |\n3 |       match x {\n  |  _____^ starting here...\n4 | |         Some(y) => println!(\"{:?}\", y),\n5 | |         _ => (),\n6 | |     }\n  | |_____^ ...ending here\n  |\nhelp: try this\n  |     if let Some(y) = x { $ crate :: io :: _print ( format_args ! ( $ ( $ arg ) * ) ) }\n  = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#single_match\n\n    Finished debug [unoptimized + debuginfo] target(s) in 0.30 secs\n\nif let \u3092\u4f7f\u7528\u3057\u308d\u3068\u51fa\u3066\u304d\u307e\u3057\u305f\u3002 \nprintln!() \u30de\u30af\u30ed\u304c\u5c55\u958b\u3055\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u304c\u82e5\u5e72\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u6982\u306d\u53ef\u8aad\u6027\u306e\u9ad8\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u3066\u826f\u3044\u611f\u3058\u3067\u3059\u3002\n\n\u30d3\u30eb\u30c9\u6642\u306b Lint \u3059\u308b\nclippy \u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u30d3\u30eb\u30c9\u6642\u306b\u81ea\u52d5\u7684\u306b Lint \u304c\u8d70\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\u307e\u305a\u3001Cargo.toml \u306b\u6b21\u306e\u3088\u3046\u306b clippy \u3078\u306e\u4f9d\u5b58\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u306e\u969b\u3001clippy \u3068\u3044\u3046\u540d\u524d\u3067 feature \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067 --features=\"clippy\" \u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u306e\u307f Lint \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n[dependencies]\nclippy = { version = \"*\", optional = true }\n\n[features]\ndefault = []\n\n\u6b21\u306b\u3001crate \u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\uff08main.rs \u307e\u305f\u306f lib.rs\uff09\u306e\u5148\u982d\u306b\u6b21\u306e\u5c5e\u6027\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n#![cfg_attr(feature=\"clippy\", feature(plugin))]\n#![cfg_attr(feature=\"clippy\", plugin(clippy))]\n// ...\n\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u5b8c\u4e86\u3067\u3059\u3002\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n$ cargo +stable build\n...\n$ cargo +nightly build --features clippy\n   Compiling hoge v0.1.0 (file:///home/vagrant/work/hoge)\nwarning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`, #[warn(single_match)] on by default\n...\n\n\nVim \u3067 Lint \u3092\u8d70\u3089\u305b\u308b\nNeomake \u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u304c clippy \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u540d\u524d\u304c Neovim \u3063\u307d\u3044\u3067\u3059\u304c\u3001\u6bd4\u8f03\u7684\u65b0\u3057\u3044 Vim \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u30591\u3002\n:Neomake! clippy \u3067 Lint \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff08\u975e\u540c\u671f\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u306b\u82e5\u5e72\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u3042\u308a\uff09\u3002\n\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6642\u306b clippy \u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u8a2d\u5b9a\u3092 vimrc \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\naugroup NeomakeRustConfig\n  autocmd!\n  autocmd BufWritePost *.rs Neomake! clippy\naugroup END\n\n(TODO: \u4ed6\u306e\u30a8\u30c7\u30a3\u30bf\u306e\u8a2d\u5b9a\u65b9\u6cd5)\n\n\u304a\u308f\u308a\u306b\n\u8a66\u3057\u3066\u307f\u305f\u3089\u601d\u3063\u3066\u3044\u305f\u4ee5\u4e0a\u306b\u5c0e\u5165\u304c\u7c21\u5358\u3067\u3001\u306a\u305c\u4eca\u307e\u3067\u5c0e\u5165\u3092\u305f\u3081\u3089\u3063\u3066\u3044\u305f\u306e\u304b\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\u2026\n\n\n\n\n\u975e\u540c\u671f\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f Vim 8.0.0027 \u4ee5\u4e0a\u304c\u5fc5\u8981\u00a0\u21a9\n\n\n\n`rust-clippy` \u306e\u5b58\u5728\u81ea\u4f53\u306f\u4ee5\u524d\u304b\u3089\u77e5\u3063\u3066\u3044\u305f\u306e\u3067\u3059\u304c\u3001\u306a\u3093\u3068\u306a\u304f\u98df\u308f\u305a\u5acc\u3044\u306e\u307e\u307e\u653e\u7f6e\u3057\u3066\u3057\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u3001\u4f5c\u696d\u8a18\u9332\u3092\u517c\u306d\u3053\u306e\u6a5f\u4f1a\u306b\u7d39\u4ecb\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u53c2\u8003:\n\n* https://github.com/Manishearth/rust-clippy\n\n* http://qiita.com/hhatto/items/9415cc5c11b3b201030a\n\n\n## \u4f7f\u7528\u65b9\u6cd5\nRust \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b `rustup` \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u8aac\u660e\u3057\u307e\u3059\u3002\u304a\u305d\u3089\u304f\u3053\u308c\u4ee5\u5916\u306e\u65b9\u6cd5\u3067 Rust \u306e\u74b0\u5883\u3092\u69cb\u7bc9\u3057\u3066\u3044\u308b\u4eba\u306f\u5c11\u6570\u6d3e\u3068\u601d\u308f\u308c\u307e\u3059\u304c\u2026 \uff08\u5148\u65e5\u3081\u3067\u305f\u304f\u30e1\u30b8\u30e3\u30fc\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u304c\u30a2\u30ca\u30a6\u30f3\u30b9\u3055\u308c\u307e\u3057\u305f\u306d\uff09\n\u307e\u305f\u3001`rust-clippy` \u306f nightly \u30c1\u30e3\u30f3\u30cd\u30eb\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u308b\u305f\u3081 nightly \u30c1\u30e3\u30f3\u30cd\u30eb\u306e\u30c4\u30fc\u30eb\u30c1\u30a7\u30a4\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n```shell-session\n$ rustup toolchain install nightly\n```\n\n### \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u4f7f\u7528\u3059\u308b\n\u57fa\u672c\u7684\u306a\u4f8b\u3068\u3057\u3066\u3001\u307e\u305a\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 `clippy` \u3092\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\nnightly \u30c1\u30e3\u30f3\u30cd\u30eb\u306e `cargo` \u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3066 `clippy` \u3092\u6b21\u306e\u3088\u3046\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n`cargo-clippy` \u3068\u3044\u3046\u540d\u524d\u3067 `$HOME/.cargo/bin` \u4e0b\u306b\u30d0\u30a4\u30ca\u30ea\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001`cargo` \u306e\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066 Lint \u3092\u8d70\u3089\u305b\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n```shell-session\n$ rustup run nightly cargo install clippy\n$ rustup run nightly cargo clippy\n```\n\n`rustup` \u306e\u6a5f\u80fd\u3092\u7528\u3044\u308b\u3068\u3001\u4e0a\u306e\u30b3\u30de\u30f3\u30c9\u306f\u6b21\u306e\u3088\u3046\u306b\u7c21\u7565\u5316\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```shell-session\n$ cargo +nightly install clippy\n$ cargo +nightly clippy\n```\n\n\u4f8b\u984c\u3068\u3057\u3066\u3001\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e README \u306b\u8a18\u8f09\u3057\u3066\u3044\u308b\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066 Lint \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\u4eca\u56de\u691c\u8a3c\u306b\u7528\u3044\u305f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u6b21\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```rust\nfn main(){\n    let x = Some(1u8);\n    match x {\n        Some(y) => println!(\"{:?}\", y),\n        _ => ()\n    }\n}\n```\n\n~~\u500b\u4eba\u7684\u306b\u306f `main()` \u306e\u3042\u3068\u306b\u7a7a\u767d\u304c\u306a\u3044\u306e\u304c\u6c17\u306b\u306a\u308b~~\n\u4e0a\u306e\u30b3\u30fc\u30c9\u3092\u4fdd\u5b58\u3057\u3001`clippy` \u3092\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ cargo +nightly clippy\n   Compiling hoge v0.1.0 (file:///home/vagrant/work/hoge)\nwarning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`, #[warn(single_match)] on by default\n --> src/main.rs:3:5\n  |\n3 |       match x {\n  |  _____^ starting here...\n4 | |         Some(y) => println!(\"{:?}\", y),\n5 | |         _ => (),\n6 | |     }\n  | |_____^ ...ending here\n  |\nhelp: try this\n  |     if let Some(y) = x { $ crate :: io :: _print ( format_args ! ( $ ( $ arg ) * ) ) }\n  = help: for further information visit https://github.com/Manishearth/rust-clippy/wiki#single_match\n\n    Finished debug [unoptimized + debuginfo] target(s) in 0.30 secs\n```\n\n`if let` \u3092\u4f7f\u7528\u3057\u308d\u3068\u51fa\u3066\u304d\u307e\u3057\u305f\u3002 \n`println!()` \u30de\u30af\u30ed\u304c\u5c55\u958b\u3055\u308c\u3066\u3057\u307e\u3063\u3066\u3044\u308b\u306e\u304c\u82e5\u5e72\u6c17\u306b\u306a\u308a\u307e\u3059\u304c\u3001\u6982\u306d\u53ef\u8aad\u6027\u306e\u9ad8\u3044\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\u51fa\u529b\u3055\u308c\u3066\u826f\u3044\u611f\u3058\u3067\u3059\u3002\n\n\n### \u30d3\u30eb\u30c9\u6642\u306b Lint \u3059\u308b\n\n`clippy` \u306f\u30e9\u30a4\u30d6\u30e9\u30ea\u3068\u3057\u3066\u3082\u63d0\u4f9b\u3055\u308c\u3066\u304a\u308a\u3001\u30d3\u30eb\u30c9\u6642\u306b\u81ea\u52d5\u7684\u306b Lint \u304c\u8d70\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\u307e\u305a\u3001`Cargo.toml` \u306b\u6b21\u306e\u3088\u3046\u306b `clippy` \u3078\u306e\u4f9d\u5b58\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\u3053\u306e\u969b\u3001`clippy` \u3068\u3044\u3046\u540d\u524d\u3067 feature \u3092\u8ffd\u52a0\u3059\u308b\u3053\u3068\u3067 `--features=\"clippy\"` \u304c\u6307\u5b9a\u3055\u308c\u305f\u5834\u5408\u306b\u306e\u307f Lint \u3092\u5b9f\u884c\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```toml\n[dependencies]\nclippy = { version = \"*\", optional = true }\n\n[features]\ndefault = []\n```\n\n\u6b21\u306b\u3001crate \u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\uff08`main.rs` \u307e\u305f\u306f `lib.rs`\uff09\u306e\u5148\u982d\u306b\u6b21\u306e\u5c5e\u6027\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```rust\n#![cfg_attr(feature=\"clippy\", feature(plugin))]\n#![cfg_attr(feature=\"clippy\", plugin(clippy))]\n// ...\n```\n\n\u4ee5\u4e0a\u3067\u8a2d\u5b9a\u5b8c\u4e86\u3067\u3059\u3002\u5b9f\u884c\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```\n$ cargo +stable build\n...\n$ cargo +nightly build --features clippy\n   Compiling hoge v0.1.0 (file:///home/vagrant/work/hoge)\nwarning: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`, #[warn(single_match)] on by default\n...\n```\n\n## Vim \u3067 Lint \u3092\u8d70\u3089\u305b\u308b\n[Neomake](neomake/neomake) \u3068\u3044\u3046\u30d7\u30e9\u30b0\u30a4\u30f3\u304c `clippy` \u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\u3002\u540d\u524d\u304c Neovim \u3063\u307d\u3044\u3067\u3059\u304c\u3001\u6bd4\u8f03\u7684\u65b0\u3057\u3044 Vim \u3067\u3082\u4f7f\u7528\u3067\u304d\u307e\u3059[^1]\u3002\n[^1]: \u975e\u540c\u671f\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f Vim 8.0.0027 \u4ee5\u4e0a\u304c\u5fc5\u8981\n\n`:Neomake! clippy` \u3067 Lint \u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\uff08\u975e\u540c\u671f\u306b\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u7d50\u679c\u304c\u8868\u793a\u3055\u308c\u308b\u307e\u3067\u306b\u82e5\u5e72\u6642\u9593\u304c\u304b\u304b\u308b\u5834\u5408\u3042\u308a\uff09\u3002\n\u30d5\u30a1\u30a4\u30eb\u4fdd\u5b58\u6642\u306b `clippy` \u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306f\u3001\u6b21\u306e\u8a2d\u5b9a\u3092 `vimrc` \u306b\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```vim\naugroup NeomakeRustConfig\n  autocmd!\n  autocmd BufWritePost *.rs Neomake! clippy\naugroup END\n```\n\n(TODO: \u4ed6\u306e\u30a8\u30c7\u30a3\u30bf\u306e\u8a2d\u5b9a\u65b9\u6cd5)\n\n## \u304a\u308f\u308a\u306b\n\u8a66\u3057\u3066\u307f\u305f\u3089\u601d\u3063\u3066\u3044\u305f\u4ee5\u4e0a\u306b\u5c0e\u5165\u304c\u7c21\u5358\u3067\u3001\u306a\u305c\u4eca\u307e\u3067\u5c0e\u5165\u3092\u305f\u3081\u3089\u3063\u3066\u3044\u305f\u306e\u304b\u3068\u3044\u3046\u6c17\u6301\u3061\u3067\u3059\u2026\n", "tags": ["rust", "Vim"]}