{"context": "\u30d6\u30ed\u30b0\u306e\u30b3\u30d4\u30da\u3067\u3059\u3002\n\u4eca\u56de\u306f\u524d\u56de\u7d39\u4ecb\u3057\u305fAkka-HTTP\u306e\u6027\u80fd\u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u3056\u3063\u304f\u308a\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fGithub\u306b\u3042\u3052\u307e\u3057\u305f\u3002\n\u305d\u308c\u305e\u308c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7b49\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\nbuild.sbt\n// sbt.version = 0.13.11\n// addSbtPlugin(\"io.spray\" % \"sbt-revolver\" % \"0.8.0\")\n// addSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.14.2\")\n\nlazy val commonSettings = Seq(\n  name := \"akka-http-vs-spray\",\n  version := \"1.0.0\",\n  scalaVersion := \"2.11.8\",\n  scalacOptions := Seq(\"-unchecked\", \"-deprecation\", \"-encoding\", \"utf8\", \"-Xlint\")\n)\n\nval akkaV = \"2.4.4\"\nval sprayV = \"1.3.3\"\n\nlazy val spraySettings = Seq(\n  libraryDependencies ++= {\n    Seq(\n      \"com.typesafe.akka\"   %%  \"akka-actor\"    % akkaV,\n      \"io.spray\"            %%  \"spray-can\"     % sprayV,\n      \"io.spray\"            %%  \"spray-routing\" % sprayV\n    )\n  }\n)\n\nlazy val akkaSettings = Seq(\n  libraryDependencies ++= {\n    Seq(\n      \"com.typesafe.akka\" %% \"akka-actor\" % akkaV,\n      \"com.typesafe.akka\" %% \"akka-stream\" % akkaV,\n      \"com.typesafe.akka\" %% \"akka-http-experimental\" % akkaV\n    )\n  }\n)\n\nlazy val sprayServer = (project in file(\"spray-server\"))\n.settings(commonSettings: _*)\n.settings(spraySettings: _*)\n.settings(assemblyOutputPath in assembly := file(\"./spray-server.jar\"))\n\nlazy val akkaServer = (project in file(\"akka-server\"))\n.settings(commonSettings: _*)\n.settings(akkaSettings: _*)\n.settings(assemblyOutputPath in assembly := file(\"./akka-server.jar\"))\n\nRevolver.settings\n\n\njava version \"1.8.0_71\"\nJava(TM) SE Runtime Environment (build 1.8.0_71-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 25.71-b15, mixed mode)\n\nsbt assembly\u3057\u305fjar\u3092\u30ed\u30fc\u30ab\u30eb\u3067java -jar\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\nMacBook Pro (Retina, 13-inch, Early 2015)\nOS: OSX 10.11.4\nProcessor: 3.1 GHz Intel Core i7\nMemory: 16 GB 1867 MHz DDR3\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u306fApacheBench\u3092\u7528\u3044\u307e\u3057\u305f\u3002\nab -k -c 10 -n 10000 http://localhost:8080/\n\n\u4ee5\u4e0b\u305d\u308c\u305e\u308c\u306e\u7d50\u679c\u3067\u3059\u3002\n\nAkka-HTTP\n\nCode\npackage akka.server\n\nimport akka.actor.ActorSystem\nimport akka.http.scaladsl.Http\nimport akka.http.scaladsl.server.Directives._\nimport akka.stream.ActorMaterializer\n\nobject Boot extends App {\n  implicit lazy val system = ActorSystem(\"akka-server\")\n  implicit lazy val materializer = ActorMaterializer()\n  implicit val ec = system.dispatcher\n\n  private val route =\n    pathSingleSlash {\n      get {\n        complete(\"Hello world!\")\n      }\n    }\n\n  Http().bindAndHandle(route, \"localhost\", 8080)\n}\n\n\nResult\nThis is ApacheBench, Version 2.3 <$Revision: 1706008 $>\n\nServer Software:        akka-http/2.4.4\nServer Hostname:        localhost\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        12 bytes\n\nConcurrency Level:      10\nTime taken for tests:   0.465 seconds\nComplete requests:      10000\nFailed requests:        0\nKeep-Alive requests:    10000\nTotal transferred:      1780000 bytes\nHTML transferred:       120000 bytes\nRequests per second:    21490.49 [#/sec] (mean)\nTime per request:       0.465 [ms] (mean)\nTime per request:       0.047 [ms] (mean, across all concurrent requests)\nTransfer rate:          3735.65 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   1.0      0      42\nWaiting:        0    0   1.0      0      42\nTotal:          0    0   1.0      0      42\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      1\n  95%      1\n  98%      2\n  99%      3\n 100%     42 (longest request)\n\n\nSpray-can\n\nCode\npackage spray.server\n\nimport akka.actor._\nimport akka.io.IO\nimport spray.can.Http\nimport spray.routing._\nimport spray.http._\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport scala.concurrent.duration._\n\nobject Boot extends App {\n  implicit val system = ActorSystem(\"spray-server\")\n  implicit val timeout = Timeout(5.seconds)\n  val service = system.actorOf(Props[ServiceActor], \"spray-service\")\n\n  IO(Http) ? Http.Bind(service, \"localhost\", 8080)\n}\n\nclass ServiceActor extends Actor with HttpService {\n  private val route =\n    pathSingleSlash {\n      get {\n        complete(\"Hello world!\")\n      }\n    }\n\n  def actorRefFactory = context\n  def receive = runRoute(route)\n}\n\n\nResult\nThis is ApacheBench, Version 2.3 <$Revision: 1706008 $>\n\nServer Software:        spray-can/1.3.3\nServer Hostname:        localhost\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        12 bytes\n\nConcurrency Level:      10\nTime taken for tests:   0.430 seconds\nComplete requests:      10000\nFailed requests:        0\nKeep-Alive requests:    10000\nTotal transferred:      1780000 bytes\nHTML transferred:       120000 bytes\nRequests per second:    23230.85 [#/sec] (mean)\nTime per request:       0.430 [ms] (mean)\nTime per request:       0.043 [ms] (mean, across all concurrent requests)\nTransfer rate:          4038.18 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   0.9      0      20\nWaiting:        0    0   0.9      0      20\nTotal:          0    0   0.9      0      20\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      1\n  95%      1\n  98%      2\n  99%      3\n 100%     20 (longest request)\n\n\n\u307e\u3068\u3081\nAkka-HTTP\u304c21490.49 req/sec\u3001Spray-can\u304c23230.85 req/sec\u3068\u5272\u3068\u8fd1\u3044\u6570\u5024\u304c\u51fa\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\nAkka-HTTP\u306f\u524d\u3082\u3063\u3068\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u304f\u3089\u3044\u9045\u304b\u3063\u305f\u30a4\u30e1\u30fc\u30b8\u3060\u3063\u305f\u3093\u3067\u3059\u304c\u3053\u308c\u306a\u3089\u5341\u5206\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3055\u3070\u3051\u305d\u3046\u3067\u3059\u3002\n[\u30d6\u30ed\u30b0](https://t-hiroyoshi.github.io/spray-akka-benchmark/)\u306e\u30b3\u30d4\u30da\u3067\u3059\u3002\n\n\u4eca\u56de\u306f[\u524d\u56de\u7d39\u4ecb](http://t-hiroyoshi.github.io/akka-http-api/)\u3057\u305f[Akka-HTTP](http://doc.akka.io/docs/akka/2.4.4/scala/http/introduction.html)\u306e\u6027\u80fd\u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u3056\u3063\u304f\u308a\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u53d6\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[Github](https://github.com/t-hiroyoshi/akka-http-vs-spray)\u306b\u3042\u3052\u307e\u3057\u305f\u3002\n\n\u305d\u308c\u305e\u308c\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u7b49\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n```build.sbt\n// sbt.version = 0.13.11\n// addSbtPlugin(\"io.spray\" % \"sbt-revolver\" % \"0.8.0\")\n// addSbtPlugin(\"com.eed3si9n\" % \"sbt-assembly\" % \"0.14.2\")\n\nlazy val commonSettings = Seq(\n  name := \"akka-http-vs-spray\",\n  version := \"1.0.0\",\n  scalaVersion := \"2.11.8\",\n  scalacOptions := Seq(\"-unchecked\", \"-deprecation\", \"-encoding\", \"utf8\", \"-Xlint\")\n)\n\nval akkaV = \"2.4.4\"\nval sprayV = \"1.3.3\"\n\nlazy val spraySettings = Seq(\n  libraryDependencies ++= {\n    Seq(\n      \"com.typesafe.akka\"   %%  \"akka-actor\"    % akkaV,\n      \"io.spray\"            %%  \"spray-can\"     % sprayV,\n      \"io.spray\"            %%  \"spray-routing\" % sprayV\n    )\n  }\n)\n\nlazy val akkaSettings = Seq(\n  libraryDependencies ++= {\n    Seq(\n      \"com.typesafe.akka\" %% \"akka-actor\" % akkaV,\n      \"com.typesafe.akka\" %% \"akka-stream\" % akkaV,\n      \"com.typesafe.akka\" %% \"akka-http-experimental\" % akkaV\n    )\n  }\n)\n\nlazy val sprayServer = (project in file(\"spray-server\"))\n.settings(commonSettings: _*)\n.settings(spraySettings: _*)\n.settings(assemblyOutputPath in assembly := file(\"./spray-server.jar\"))\n\nlazy val akkaServer = (project in file(\"akka-server\"))\n.settings(commonSettings: _*)\n.settings(akkaSettings: _*)\n.settings(assemblyOutputPath in assembly := file(\"./akka-server.jar\"))\n\nRevolver.settings\n```\n\n```Shell\njava version \"1.8.0_71\"\nJava(TM) SE Runtime Environment (build 1.8.0_71-b15)\nJava HotSpot(TM) 64-Bit Server VM (build 25.71-b15, mixed mode)\n```\n\n`sbt assembly`\u3057\u305fjar\u3092\u30ed\u30fc\u30ab\u30eb\u3067`java -jar`\u3057\u3066\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3092\u3068\u308a\u307e\u3057\u305f\u3002\n\n\u30ed\u30fc\u30ab\u30eb\u74b0\u5883\n\n```Shell\nMacBook Pro (Retina, 13-inch, Early 2015)\nOS: OSX 10.11.4\nProcessor: 3.1 GHz Intel Core i7\nMemory: 16 GB 1867 MHz DDR3\n```\n\n\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u306b\u306fApacheBench\u3092\u7528\u3044\u307e\u3057\u305f\u3002\n\n```Shell\nab -k -c 10 -n 10000 http://localhost:8080/\n```\n\n\u4ee5\u4e0b\u305d\u308c\u305e\u308c\u306e\u7d50\u679c\u3067\u3059\u3002\n\n## Akka-HTTP\n\n### Code\n\n```Scala\npackage akka.server\n\nimport akka.actor.ActorSystem\nimport akka.http.scaladsl.Http\nimport akka.http.scaladsl.server.Directives._\nimport akka.stream.ActorMaterializer\n\nobject Boot extends App {\n  implicit lazy val system = ActorSystem(\"akka-server\")\n  implicit lazy val materializer = ActorMaterializer()\n  implicit val ec = system.dispatcher\n\n  private val route =\n    pathSingleSlash {\n      get {\n        complete(\"Hello world!\")\n      }\n    }\n\n  Http().bindAndHandle(route, \"localhost\", 8080)\n}\n```\n\n### Result\n\n```Shell\nThis is ApacheBench, Version 2.3 <$Revision: 1706008 $>\n\nServer Software:        akka-http/2.4.4\nServer Hostname:        localhost\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        12 bytes\n\nConcurrency Level:      10\nTime taken for tests:   0.465 seconds\nComplete requests:      10000\nFailed requests:        0\nKeep-Alive requests:    10000\nTotal transferred:      1780000 bytes\nHTML transferred:       120000 bytes\nRequests per second:    21490.49 [#/sec] (mean)\nTime per request:       0.465 [ms] (mean)\nTime per request:       0.047 [ms] (mean, across all concurrent requests)\nTransfer rate:          3735.65 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   1.0      0      42\nWaiting:        0    0   1.0      0      42\nTotal:          0    0   1.0      0      42\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      1\n  95%      1\n  98%      2\n  99%      3\n 100%     42 (longest request)\n```\n\n## Spray-can\n\n### Code\n\n```Scala\npackage spray.server\n\nimport akka.actor._\nimport akka.io.IO\nimport spray.can.Http\nimport spray.routing._\nimport spray.http._\nimport akka.pattern.ask\nimport akka.util.Timeout\nimport scala.concurrent.duration._\n\nobject Boot extends App {\n  implicit val system = ActorSystem(\"spray-server\")\n  implicit val timeout = Timeout(5.seconds)\n  val service = system.actorOf(Props[ServiceActor], \"spray-service\")\n\n  IO(Http) ? Http.Bind(service, \"localhost\", 8080)\n}\n\nclass ServiceActor extends Actor with HttpService {\n  private val route =\n    pathSingleSlash {\n      get {\n        complete(\"Hello world!\")\n      }\n    }\n\n  def actorRefFactory = context\n  def receive = runRoute(route)\n}\n```\n\n### Result\n\n```Shell\nThis is ApacheBench, Version 2.3 <$Revision: 1706008 $>\n\nServer Software:        spray-can/1.3.3\nServer Hostname:        localhost\nServer Port:            8080\n\nDocument Path:          /\nDocument Length:        12 bytes\n\nConcurrency Level:      10\nTime taken for tests:   0.430 seconds\nComplete requests:      10000\nFailed requests:        0\nKeep-Alive requests:    10000\nTotal transferred:      1780000 bytes\nHTML transferred:       120000 bytes\nRequests per second:    23230.85 [#/sec] (mean)\nTime per request:       0.430 [ms] (mean)\nTime per request:       0.043 [ms] (mean, across all concurrent requests)\nTransfer rate:          4038.18 [Kbytes/sec] received\n\nConnection Times (ms)\n              min  mean[+/-sd] median   max\nConnect:        0    0   0.0      0       0\nProcessing:     0    0   0.9      0      20\nWaiting:        0    0   0.9      0      20\nTotal:          0    0   0.9      0      20\n\nPercentage of the requests served within a certain time (ms)\n  50%      0\n  66%      0\n  75%      0\n  80%      0\n  90%      1\n  95%      1\n  98%      2\n  99%      3\n 100%     20 (longest request)\n ```\n\n## \u307e\u3068\u3081\n\nAkka-HTTP\u304c21490.49 req/sec\u3001Spray-can\u304c23230.85 req/sec\u3068\u5272\u3068\u8fd1\u3044\u6570\u5024\u304c\u51fa\u305f\u6c17\u304c\u3057\u307e\u3059\u3002\nAkka-HTTP\u306f\u524d\u3082\u3063\u3068\u4f7f\u3044\u7269\u306b\u306a\u3089\u306a\u3044\u304f\u3089\u3044\u9045\u304b\u3063\u305f\u30a4\u30e1\u30fc\u30b8\u3060\u3063\u305f\u3093\u3067\u3059\u304c\u3053\u308c\u306a\u3089\u5341\u5206\u306a\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u3055\u3070\u3051\u305d\u3046\u3067\u3059\u3002\n", "tags": ["Scala", "Akka", "Akka-HTTP", "spray"]}