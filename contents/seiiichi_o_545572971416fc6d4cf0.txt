{"context": " More than 1 year has passed since last update.\n\n\u74b0\u5883\nMacOSX Mavericks 10.9.5\n\n\u4f8b\u306e\u3084\u3064\nhttp://qiita.com/DQNEO/items/c9f1dc08f93dd6c28740\n$ env x='() { :;}; echo this bash is vulnerable' bash -c :\n\n\u51fa\u529b\nthis bash is vulnerable\n\n\n\u60c5\u5831\n\n\u30d1\u30b9\n$ echo $PATH\n/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n$ /bin/bash --version\nGNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13)\nCopyright (C) 2007 Free Software Foundation, Inc.\n\n\n\u5834\u6240\n$ which bash\n/bin/bash\n\n$ ls -l /bin/bash\n-r-xr-xr-x  1 root  wheel  1228240 11  1  2013 /bin/bash\n\n$ which sh\n/bin/sh\n\n$ ls -l /bin/sh\n-r-xr-xr-x  1 root  wheel  1228304 11  1  2013 /bin/s\n\n\n\u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\nxcode\n$ xcode-select --install\n\n\nbrew\u304b\u3089bash\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n$ brew doctor\n$ brew update\n$ brew install bash\n\nor\n$ brew upgrade bash\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u3092\u78ba\u8a8d\n$ brew info bash\nbash: stable 4.3.27 (bottled), HEAD\nhttp://www.gnu.org/software/bash/\n/usr/local/Cellar/bash/4.3.27 (59 files, 7.4M) *\n...\n\n\u5fc5\u305abrew info bash\u3057\u3066\u5834\u6240\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002\uff08\u6ce8\uff1a\u30b3\u30d4\u30da\u3067\u4f5c\u696d\u3059\u308b\u4eba\u5411\u3051\uff09\n2014/09/29\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f4.3.27\u3060\u304c\u3001\u4eca\u5f8c\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306b\u8a18\u3057\u305f\u30d1\u30b9\u306e\u60c5\u5831\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u305f\u3081\u3002\n\n\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n$ sudo mv /bin/bash /bin/bash_old\n$ sudo mv /bin/sh /bin/sh_old\n$ sudo chmod a-x /bin/bash_old /bin/sh_old\n\n\u3053\u3053\u3067\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u3068\u3063\u3066\u304a\u304f\u3068\u3001\u6700\u60aa\u306e\u4e8b\u614b\u3092\u56de\u907f\u3067\u304d\u308b\u306e\u3067\u9a19\u3055\u308c\u305f\u3068\u601d\u3063\u3066\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3002\n\u6b21\u306e\u30ea\u30f3\u30af\u3067\u30d1\u30b9\u3092\u30df\u30b9\u3063\u305f\u308a\u3057\u3066\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304c\u52d5\u4f5c\u304a\u304b\u3057\u3044\u2192\u30bf\u30fc\u30df\u30ca\u30eb\u518d\u8d77\u52d5\u3057\u3066\u3082\u4f5c\u696d\u3067\u304d\u306a\u3044\u2192\u614c\u3066\u3066OS\u3092\u518d\u8d77\u52d5\u2192\u30ed\u30b0\u30a4\u30f3\u3055\u3048\u3067\u304d\u306a\u3044orz\u306b\u306a\u3063\u3066\u3082\u30b3\u30de\u30f3\u30c9+R\u3092\u62bc\u3055\u3048\u3066\u518d\u8d77\u52d5\u3057\u3066\u30bf\u30fc\u30df\u30ca\u30eb\u8d77\u52d5\u3055\u305b\u3066\u4e0a\u8a18\u306e\u9006\u3092\u3084\u308b\u3068\u6551\u308f\u308c\u308b\u3002\uff08\u6ce8\uff1a\u30b3\u30d4\u30da\u3067\u4f5c\u696d\u3059\u308b\u4eba\u304c\u3044\u308b\u3060\u308d\u3046\u304b\u3089\uff09\n\n\u30ea\u30f3\u30af\n$ sudo ln -s /usr/local/Cellar/bash/4.3.27/bin/bash /bin/bash\n$ sudo ln -s /usr/local/Cellar/bash/4.3.27/bin/bash /bin/sh\n\n4.3.27\u306f2014/09/29\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u3089\u5909\u66f4\u3059\u308b\u7b87\u6240\u3002\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u3092\u518d\u8d77\u52d5\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u78ba\u8a8d\n$ bash --version\nGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.27(1)-release (x86_64-apple-darwin13.4.0)\n...\n\n\n\u8ffd\u8a66\n$ env x='() { :;}; echo this bash is vulnerable' bash -c :\n\n\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070OK\n\n\u53c2\u8003\nmacosx - How to patch Bash on OSX in wake of \"shellshock\"? - Information Security Stack Exchange\n\n\u66f4\u65b0\n\u516c\u5f0f\u7248\u3088\u3046\u3084\u304f\u304d\u307e\u3057\u305f\u3002\nOS X bash Update 1.0 \u2013 OS X Mavericks\n\n\u66f4\u65b0_2014/10/02\nGNU Project Archives\u306b2014/10/01\u4ed8\u3051\u30674.3.28\u304c\u6765\u3066\u307e\u3057\u305f\u3002\n\u305f\u3060\u3001bashcheck\uff08hannob/bashcheck \u00b7 GitHub\uff09\u3059\u308b\u3068\u30c1\u30e7\u30c3\u30c8\u6b8b\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n$ ./bashcheck \nTesting /bin/bash ...\nGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.28(1)-release (x86_64-apple-darwin13.4.0)\n\nNot vulnerable to CVE-2014-6271 (original shellshock)\nNot vulnerable to CVE-2014-7169 (taviso bug)\nNot vulnerable to CVE-2014-7186 (redir_stack bug)\nTest for CVE-2014-7187 not reliable without address sanitizer\nVulnerable to CVE-2014-6277 (lcamtuf bug #1) [no patch]\nVulnerable to CVE-2014-6278 (lcamtuf bug #2) [prefix/%%-suffix]\nVariable function parser inactive, likely safe from unknown parser bugs\n\n\nCVE-2014-6277 \u3068 CVE-2014-6278\nlcamtuf's blog: Bash bug: apply Florian's patch now (CVE-2014-6277 and CVE-2014-6278)\n$ foo='() { echo not patched; }' bash -c foo\n\n\u4e0a\u8a18\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u5927\u4e08\u592b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\nIf the command shows \"not patched\", you don't have the patch and you are still vulnerable to a (currently non-public) RCE, even if you applied the original one (or the subsequent upstream patch that addressed the issue found by Tavis).\nOh, and if it shows \"command not found\", you're good.\n\n4.3.28\u3067\u3084\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\n$ foo='() { echo not patched; }' bash -c foo\nbash: foo: \u30b3\u30de\u30f3\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\n\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u30fb\u30fb\u30fb\u304b\u306a\uff1f\n\n\u8ffd\u8a18\uff08CVE-2014-6277/6278\u306b\u3064\u3044\u3066\uff09\nhannob/bashcheck \u00b7 GitHub\u306b\u66f4\u65b0\u304c\u3042\u308a\u3001\u305d\u308c\u3060\u3068non-exploitable\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u8868\u793a\u306fexplitable\u3068\u51fa\u308b\u3051\u3069exploitable\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\uff09\n$ ./bashcheck\nTesting /bin/bash ...\nGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.28(1)-release (x86_64-apple-darwin13.4.0)\n\nVariable function parser pre/suffixed [%%, upstream], bugs not explitable\nNot vulnerable to CVE-2014-6271 (original shellshock)\nNot vulnerable to CVE-2014-7169 (taviso bug)\nNot vulnerable to CVE-2014-7186 (redir_stack bug)\nTest for CVE-2014-7187 not reliable without address sanitizer\nFound non-exploitable CVE-2014-6277 (lcamtuf bug #1)\nFound non-exploitable CVE-2014-6278 (lcamtuf bug #2)\n\n\n\u8ffd\u8a18_2014/10/05\n\u300eGNU bash \u306e\u8106\u5f31\u6027\u306b\u95a2\u3059\u308b\u6ce8\u610f\u559a\u8d77\u300f\u3088\u308a\nhttps://www.jpcert.or.jp/at/2014/at140037.html\n\n\u88681 \u8106\u5f31\u6027\u306e\u691c\u8a3c\u7d50\u679c\n\n\n\nCVE\u756a\u53f7\n\u60f3\u5b9a\u3055\u308c\u308b\u5f71\u97ff\n4.3.24\n4.3.25\n4.3.26\n4.3.27\n4.3.28\n4.3.29\n(\u53c2\u8003)\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u306b\u3088\u308a\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3(CentOS 6.4)\n\n\n\n\nCVE-2014-6271\n\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u00d7\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\n\nCVE-2014-7169\n\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u00d7\n\u00d7\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\n\nCVE-2014-7186\n\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u25cb\n\u25cb\n\u25cb\n\n\nCVE-2014-7187\n\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u25cb\n\u25cb\n\u25cb\n\n\nCVE-2014-6277\n\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)\n\u00d7\n\u00d7\n\u00d7\n\u25cb\n\u25cb\n\u25cb(*1)\n\u25cb\n\n\nCVE-2014-6278\n\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c\n\u00d7\n\u00d7\n\u00d7\n\u25cb\n\u25cb\n\u25cb\n\u25cb\n\n\n\n\u25cb\u8106\u5f31\u6027\u306e\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n\u00d7\u8106\u5f31\u6027\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u3053\u3068\u3092\u78ba\u8a8d\n(*1) CVE-2014-6277\u306e\u8106\u5f31\u6027\u306e\u4e00\u90e8\u306b\u3064\u3044\u3066\u6839\u672c\u5bfe\u51e6\u3092\u5b9f\u65bd\n\n\u8ffd\u8a18\n4.3.29\u304c\u6765\u3066\u307e\u3057\u305f\u3002\n$ ./bashcheck\nTesting /bin/bash ...\nGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.29(1)-release (x86_64-apple-darwin13.4.0)\n\nVariable function parser pre/suffixed [%%, upstream], bugs not exploitable\nNot vulnerable to CVE-2014-6271 (original shellshock)\nNot vulnerable to CVE-2014-7169 (taviso bug)\nNot vulnerable to CVE-2014-7186 (redir_stack bug)\nTest for CVE-2014-7187 not reliable without address sanitizer\nNot vulnerable to CVE-2014-6277 (lcamtuf bug #1)\nFound non-exploitable CVE-2014-6278 (lcamtuf bug #2)\n\n\n\u8ffd\u8a18_2014/10/07\n4.3.30\u304c\u6765\u3066\u307e\u3057\u305f\u3002\nCVE-2014-6277\u3068CVE-2014-6278\u306bNot vulnerable\u304c\u4ed8\u304d\u307e\u3057\u305f\u3002\n$ ./bashcheck \nTesting /usr/local/bin/bash ...\nGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.30(1)-release (x86_64-apple-darwin13.4.0)\n\nVariable function parser pre/suffixed [%%, upstream], bugs not exploitable\nNot vulnerable to CVE-2014-6271 (original shellshock)\nNot vulnerable to CVE-2014-7169 (taviso bug)\nNot vulnerable to CVE-2014-7186 (redir_stack bug)\nTest for CVE-2014-7187 not reliable without address sanitizer\nNot vulnerable to CVE-2014-6277 (lcamtuf bug #1)\nNot vulnerable to CVE-2014-6278 (lcamtuf bug #2)\n\n\u4eca\u56de\u306ebashcheck\u306f\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\nbashcheck\u306e\u624b\u9806\n\n\nhannob/bashcheck \u00b7 GitHub \u306b\u30a2\u30af\u30bb\u30b9\n\nhttps://github.com/hannob/bashcheck/blob/master/bashcheck \u304b\u3089\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\n\u30bf\u30fc\u30df\u30ca\u30eb\u8d77\u52d5\n\u9069\u5f53\u306a\u5834\u6240\uff08\u4f8b\uff1acd Desktop\uff09\u306b\u79fb\u52d5\u3057\u3066vi bashcheck\u30672\u306e\u30b3\u30fc\u30c9\u3092\u30da\u30fc\u30b9\u30c8\u3057\u3066\u4fdd\u5b58\n\u7d9a\u3044\u3066chmod +x bashcheck\n\n\n./bashcheck\u3092\u5165\u529b\u3057\u3066Enter\n\n\n## \u74b0\u5883\nMacOSX Mavericks 10.9.5\n\n## \u4f8b\u306e\u3084\u3064\n[http://qiita.com/DQNEO/items/c9f1dc08f93dd6c28740](http://qiita.com/DQNEO/items/c9f1dc08f93dd6c28740)\n\n\t$ env x='() { :;}; echo this bash is vulnerable' bash -c :\n\n\u51fa\u529b\n\n\tthis bash is vulnerable\n\n## \u60c5\u5831\n### \u30d1\u30b9\n\t\n\t$ echo $PATH\n\t/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin\n\n### \u30d0\u30fc\u30b8\u30e7\u30f3\n\t$ /bin/bash --version\n\tGNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13)\n\tCopyright (C) 2007 Free Software Foundation, Inc.\n\n\n### \u5834\u6240\n\t$ which bash\n\t/bin/bash\n\t\n\t$ ls -l /bin/bash\n\t-r-xr-xr-x  1 root  wheel  1228240 11  1  2013 /bin/bash\n\t\n\t$ which sh\n\t/bin/sh\n\t\n\t$ ls -l /bin/sh\n\t-r-xr-xr-x  1 root  wheel  1228304 11  1  2013 /bin/s\n\n## \u30bb\u30c3\u30c8\u30a2\u30c3\u30d7\n\n### xcode\n\t$ xcode-select --install\n\n### brew\u304b\u3089bash\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\t$ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n\n\t$ brew doctor\n\t$ brew update\n\t$ brew install bash\nor\n\n\t$ brew upgrade bash\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5148\u3092\u78ba\u8a8d\n\t\n\t$ brew info bash\n\tbash: stable 4.3.27 (bottled), HEAD\n\thttp://www.gnu.org/software/bash/\n\t/usr/local/Cellar/bash/4.3.27 (59 files, 7.4M) *\n\t...\n\t\n\u5fc5\u305a`brew info bash`\u3057\u3066\u5834\u6240\u3092\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002\uff08\u6ce8\uff1a\u30b3\u30d4\u30da\u3067\u4f5c\u696d\u3059\u308b\u4eba\u5411\u3051\uff09\n\n2014/09/29\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f`4.3.27`\u3060\u304c\u3001\u4eca\u5f8c\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u306b\u8a18\u3057\u305f\u30d1\u30b9\u306e\u60c5\u5831\u304c\u5909\u308f\u3063\u3066\u304f\u308b\u305f\u3081\u3002\n\n### \u30d0\u30c3\u30af\u30a2\u30c3\u30d7\n\t$ sudo mv /bin/bash /bin/bash_old\n\t$ sudo mv /bin/sh /bin/sh_old\n\t$ sudo chmod a-x /bin/bash_old /bin/sh_old\n\n\u3053\u3053\u3067\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3092\u3068\u3063\u3066\u304a\u304f\u3068\u3001\u6700\u60aa\u306e\u4e8b\u614b\u3092\u56de\u907f\u3067\u304d\u308b\u306e\u3067\u9a19\u3055\u308c\u305f\u3068\u601d\u3063\u3066\u30d0\u30c3\u30af\u30a2\u30c3\u30d7\u3002\n\n\u6b21\u306e\u30ea\u30f3\u30af\u3067\u30d1\u30b9\u3092\u30df\u30b9\u3063\u305f\u308a\u3057\u3066\u3001\u30bf\u30fc\u30df\u30ca\u30eb\u304c\u52d5\u4f5c\u304a\u304b\u3057\u3044\u2192\u30bf\u30fc\u30df\u30ca\u30eb\u518d\u8d77\u52d5\u3057\u3066\u3082\u4f5c\u696d\u3067\u304d\u306a\u3044\u2192\u614c\u3066\u3066OS\u3092\u518d\u8d77\u52d5\u2192\u30ed\u30b0\u30a4\u30f3\u3055\u3048\u3067\u304d\u306a\u3044orz\u306b\u306a\u3063\u3066\u3082`\u30b3\u30de\u30f3\u30c9+R`\u3092\u62bc\u3055\u3048\u3066\u518d\u8d77\u52d5\u3057\u3066\u30bf\u30fc\u30df\u30ca\u30eb\u8d77\u52d5\u3055\u305b\u3066\u4e0a\u8a18\u306e\u9006\u3092\u3084\u308b\u3068\u6551\u308f\u308c\u308b\u3002\uff08\u6ce8\uff1a\u30b3\u30d4\u30da\u3067\u4f5c\u696d\u3059\u308b\u4eba\u304c\u3044\u308b\u3060\u308d\u3046\u304b\u3089\uff09\n\n### \u30ea\u30f3\u30af\n\t$ sudo ln -s /usr/local/Cellar/bash/4.3.27/bin/bash /bin/bash\n\t$ sudo ln -s /usr/local/Cellar/bash/4.3.27/bin/bash /bin/sh\n\n`4.3.27`\u306f2014/09/29\u73fe\u5728\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306a\u306e\u3067\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u4e0a\u304c\u3063\u305f\u3089\u5909\u66f4\u3059\u308b\u7b87\u6240\u3002\n\n## \u30bf\u30fc\u30df\u30ca\u30eb\u3092\u518d\u8d77\u52d5\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u306e\u78ba\u8a8d\n\n\t$ bash --version\n\tGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.27(1)-release (x86_64-apple-darwin13.4.0)\n\t...\n\n## \u8ffd\u8a66\n\n\t$ env x='() { :;}; echo this bash is vulnerable' bash -c :\n\n\u4f55\u3082\u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070OK\n\n## \u53c2\u8003\n[macosx - How to patch Bash on OSX in wake of \"shellshock\"? - Information Security Stack Exchange](http://security.stackexchange.com/questions/68202/how-to-patch-bash-on-osx-in-wake-of-shellshock)\n\n## \u66f4\u65b0\n\n\u516c\u5f0f\u7248\u3088\u3046\u3084\u304f\u304d\u307e\u3057\u305f\u3002\n[OS X bash Update 1.0 \u2013 OS X Mavericks](http://support.apple.com/kb/DL1769?viewlocale=en_US&locale=en_US)\n\n## \u66f4\u65b0_2014/10/02\n\n[GNU Project Archives](http://ftp.gnu.org/gnu/bash/bash-4.3-patches/?C=M;O=D)\u306b2014/10/01\u4ed8\u3051\u3067`4.3.28`\u304c\u6765\u3066\u307e\u3057\u305f\u3002\n\n\u305f\u3060\u3001bashcheck\uff08[hannob/bashcheck \u00b7 GitHub](https://github.com/hannob/bashcheck)\uff09\u3059\u308b\u3068\u30c1\u30e7\u30c3\u30c8\u6b8b\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\t$ ./bashcheck \n\tTesting /bin/bash ...\n\tGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.28(1)-release (x86_64-apple-darwin13.4.0)\n\t\n\tNot vulnerable to CVE-2014-6271 (original shellshock)\n\tNot vulnerable to CVE-2014-7169 (taviso bug)\n\tNot vulnerable to CVE-2014-7186 (redir_stack bug)\n\tTest for CVE-2014-7187 not reliable without address sanitizer\n\tVulnerable to CVE-2014-6277 (lcamtuf bug #1) [no patch]\n\tVulnerable to CVE-2014-6278 (lcamtuf bug #2) [prefix/%%-suffix]\n\tVariable function parser inactive, likely safe from unknown parser bugs\n\n\n###CVE-2014-6277 \u3068 CVE-2014-6278\n\n[lcamtuf's blog: Bash bug: apply Florian's patch now (CVE-2014-6277 and CVE-2014-6278)](http://lcamtuf.blogspot.jp/2014/09/bash-bug-apply-unofficial-patch-now.html)\n\n\t$ foo='() { echo not patched; }' bash -c foo\n\n\u4e0a\u8a18\u3092\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u5927\u4e08\u592b\u304b\u3069\u3046\u304b\u30c1\u30a7\u30c3\u30af\u3067\u304d\u308b\u3088\u3046\u3067\u3059\u3002\n\n\tIf the command shows \"not patched\", you don't have the patch and you are still vulnerable to a (currently non-public) RCE, even if you applied the original one (or the subsequent upstream patch that addressed the issue found by Tavis).\n\tOh, and if it shows \"command not found\", you're good.\n\n`4.3.28`\u3067\u3084\u3063\u3066\u307f\u305f\u3068\u3053\u308d\u3001\n\n\t$ foo='() { echo not patched; }' bash -c foo\n\tbash: foo: \u30b3\u30de\u30f3\u30c9\u304c\u898b\u3064\u304b\u308a\u307e\u305b\u3093\n\n\u554f\u984c\u306a\u3055\u305d\u3046\u3067\u3059\u30fb\u30fb\u30fb\u304b\u306a\uff1f\n\n### \u8ffd\u8a18\uff08CVE-2014-6277/6278\u306b\u3064\u3044\u3066\uff09\n[hannob/bashcheck \u00b7 GitHub](https://github.com/hannob/bashcheck)\u306b\u66f4\u65b0\u304c\u3042\u308a\u3001\u305d\u308c\u3060\u3068`non-exploitable`\u304c\u8868\u793a\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\uff08\u8868\u793a\u306f`explitable`\u3068\u51fa\u308b\u3051\u3069`exploitable`\u3060\u3068\u601d\u3046\u306e\u3067\u3001\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u3002\uff09\n\n\t$ ./bashcheck\n\tTesting /bin/bash ...\n\tGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.28(1)-release (x86_64-apple-darwin13.4.0)\n\t\n\tVariable function parser pre/suffixed [%%, upstream], bugs not explitable\n\tNot vulnerable to CVE-2014-6271 (original shellshock)\n\tNot vulnerable to CVE-2014-7169 (taviso bug)\n\tNot vulnerable to CVE-2014-7186 (redir_stack bug)\n\tTest for CVE-2014-7187 not reliable without address sanitizer\n\tFound non-exploitable CVE-2014-6277 (lcamtuf bug #1)\n\tFound non-exploitable CVE-2014-6278 (lcamtuf bug #2)\n\t\n\n###\u8ffd\u8a18_2014/10/05\n\n\u300eGNU bash \u306e\u8106\u5f31\u6027\u306b\u95a2\u3059\u308b\u6ce8\u610f\u559a\u8d77\u300f\u3088\u308a\n[https://www.jpcert.or.jp/at/2014/at140037.html](https://www.jpcert.or.jp/at/2014/at140037.html)\n\n#### \u88681 \u8106\u5f31\u6027\u306e\u691c\u8a3c\u7d50\u679c\n\nCVE\u756a\u53f7|\u60f3\u5b9a\u3055\u308c\u308b\u5f71\u97ff|4.3.24|4.3.25|4.3.26|4.3.27|4.3.28|4.3.29|(\u53c2\u8003)\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30bf\u306b\u3088\u308a\u914d\u5e03\u3055\u308c\u3066\u3044\u308b\u30d0\u30fc\u30b8\u30e7\u30f3(CentOS 6.4)\n:----:|----|:-----:|:-:|:-:|:-:|:-:|:-:|:-:|:-:\nCVE-2014-6271|\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c|\u00d7|\u25cb|\u25cb|\u25cb|\u25cb|\u25cb|\u25cb|\nCVE-2014-7169|\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c|\u00d7|\u00d7|\u25cb|\u25cb|\u25cb|\u25cb|\u25cb|\nCVE-2014-7186|\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)|\u00d7|\u00d7|\u00d7|\u00d7|\u25cb|\u25cb|\u25cb|\nCVE-2014-7187|\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)|\u00d7|\u00d7|\u00d7|\u00d7|\u25cb|\u25cb|\u25cb|\nCVE-2014-6277|\u30b5\u30fc\u30d3\u30b9\u904b\u7528\u59a8\u5bb3(DoS)|\u00d7|\u00d7|\u00d7|\u25cb|\u25cb|\u25cb(*1)|\u25cb|\nCVE-2014-6278|\u4efb\u610f\u306e\u30b3\u30fc\u30c9\u306e\u5b9f\u884c|\u00d7|\u00d7|\u00d7|\u25cb|\u25cb|\u25cb|\u25cb|\n\n\u25cb\u8106\u5f31\u6027\u306e\u5f71\u97ff\u3092\u53d7\u3051\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\n\u00d7\u8106\u5f31\u6027\u306e\u5f71\u97ff\u3092\u53d7\u3051\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n(*1) CVE-2014-6277\u306e\u8106\u5f31\u6027\u306e\u4e00\u90e8\u306b\u3064\u3044\u3066\u6839\u672c\u5bfe\u51e6\u3092\u5b9f\u65bd\n\n### \u8ffd\u8a18\n\n`4.3.29`\u304c\u6765\u3066\u307e\u3057\u305f\u3002\n\n\t$ ./bashcheck\n\tTesting /bin/bash ...\n\tGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.29(1)-release (x86_64-apple-darwin13.4.0)\n\t\n\tVariable function parser pre/suffixed [%%, upstream], bugs not exploitable\n\tNot vulnerable to CVE-2014-6271 (original shellshock)\n\tNot vulnerable to CVE-2014-7169 (taviso bug)\n\tNot vulnerable to CVE-2014-7186 (redir_stack bug)\n\tTest for CVE-2014-7187 not reliable without address sanitizer\n\tNot vulnerable to CVE-2014-6277 (lcamtuf bug #1)\n\tFound non-exploitable CVE-2014-6278 (lcamtuf bug #2)\n\n###\u8ffd\u8a18_2014/10/07\n\n`4.3.30`\u304c\u6765\u3066\u307e\u3057\u305f\u3002\n\n`CVE-2014-6277`\u3068`CVE-2014-6278`\u306b`Not vulnerable`\u304c\u4ed8\u304d\u307e\u3057\u305f\u3002\n\n\t$ ./bashcheck \n\tTesting /usr/local/bin/bash ...\n\tGNU bash, \u30d0\u30fc\u30b8\u30e7\u30f3 4.3.30(1)-release (x86_64-apple-darwin13.4.0)\n\t\n\tVariable function parser pre/suffixed [%%, upstream], bugs not exploitable\n\tNot vulnerable to CVE-2014-6271 (original shellshock)\n\tNot vulnerable to CVE-2014-7169 (taviso bug)\n\tNot vulnerable to CVE-2014-7186 (redir_stack bug)\n\tTest for CVE-2014-7187 not reliable without address sanitizer\n\tNot vulnerable to CVE-2014-6277 (lcamtuf bug #1)\n\tNot vulnerable to CVE-2014-6278 (lcamtuf bug #2)\n\n\u4eca\u56de\u306ebashcheck\u306f[\u3053\u3061\u3089](https://github.com/ryuichiueda/bashcheck/blob/master/bashcheck)\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n---\n\n### bashcheck\u306e\u624b\u9806\n\n1. [hannob/bashcheck \u00b7 GitHub](https://github.com/hannob/bashcheck) \u306b\u30a2\u30af\u30bb\u30b9\n2. [https://github.com/hannob/bashcheck/blob/master/bashcheck](https://github.com/hannob/bashcheck/blob/master/bashcheck) \u304b\u3089\u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30fc\n3. \u30bf\u30fc\u30df\u30ca\u30eb\u8d77\u52d5\n4. \u9069\u5f53\u306a\u5834\u6240\uff08\u4f8b\uff1a`cd Desktop`\uff09\u306b\u79fb\u52d5\u3057\u3066`vi bashcheck`\u30672\u306e\u30b3\u30fc\u30c9\u3092\u30da\u30fc\u30b9\u30c8\u3057\u3066\u4fdd\u5b58\n4. \u7d9a\u3044\u3066`chmod +x bashcheck`\n5. `./bashcheck`\u3092\u5165\u529b\u3057\u3066`Enter`\n", "tags": ["MacOSX", "Bash", "brew", "ShellShock"]}