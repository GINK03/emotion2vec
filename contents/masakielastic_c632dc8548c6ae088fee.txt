{"context": "\n\n\u6982\u8981\nHHVM \u306b\u306f HTTP \u30b5\u30fc\u30d0\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Proxygen \u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u304a\u308a\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002Proxygen \u306f TLS/SSL \u304a\u3088\u3073 HTTP/2 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\nPHP \u306e\u30d3\u30eb\u30c8\u30a4\u30f3\u30b5\u30fc\u30d0\u30fc\u306f SSL/TLS\u3001HTTP/2 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u904b\u7528\u74b0\u5883\u3067HHVM \u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306e\u9078\u629e\u80a2\u306e1\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002HHVM \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u914d\u5e03\u3057\u3066\u3044\u308b Docker \u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5c0e\u5165\u306e\u6577\u5c45\u304c\u4e0b\u304c\u308a\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u305f\u3081\u306b SSL/TLS \u3092\u5229\u7528\u3059\u308b\u307b\u304b\u306e\u9078\u629e\u80a2\u3068\u3057\u3066\u3001Swoole \u3084 Event \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u6319\u3052\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4f8b\u306f\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3067 Proxygen \u3092\u8d77\u52d5\u3055\u305b\u308b\nHHVM \u306e\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u304b\u3089 Proxygen \u3092\u76f4\u63a5\u3055\u305b\u308b\u5834\u5408\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b -v Server.EnableH2C=true \u3092\u6307\u5b9a\u3059\u308c\u3070 HTTP/2 \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\nhhvm -m server -v Server.Type=proxygen -v Server.EnableH2C=true -p 8080\n\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f SSL/TSL \u306a\u3057\u3067 HTTP/2 \u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3042\u308a\u307e\u3059\u3002\u4e3b\u8981\u306a\u30d6\u30e9\u30a6\u30b6\u30fc\u306f SSL/TLS \u306a\u3057\u3067\u306e HTTP/2 \u901a\u4fe1\u3092\u8a31\u53ef\u3057\u306a\u3044\u305f\u3081\u3001curl \u306a\u3069\u306e\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nSSL/TLS \u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u9805\u76ee\u304c\u591a\u3044\u306e\u3067\u3001ini \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u3057\u307e\u3059\u3002\nhhvm -m server -c hhvm.prod.ini\n\n\nhhvm.prod.ini\nhhvm.server.type = proxygen\nhhvm.server.port = 8080\n\n; http/2\nhhvm.server.ssl_next_protocols[] = h2\nhhvm.server.ssl_next_protocols[] = http/1.1\n\n; http/2 without ssl/tls\nhhvm.server.enable_h2c = true\n\nhhvm.server.enable_ssl = true\nhhvm.server.ssl_certificate_file = /etc/ssl/certs/ssl-cert-snakeoil.pem\nhhvm.server.ssl_certificate_key_file = /etc/ssl/private/ssl-cert-snakeoil.key\n\n\nUbuntu \u306e\u5834\u5408\u3001\u30c6\u30b9\u30c8\u7528\u306e SSL/TLS \u306e\u8a3c\u660e\u66f8\u306f ssl-cert \u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u5165\u624b\u3067\u304d\u307e\u3059\u3002\n\nDocker \u306e\u516c\u5f0f\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\n\u4eca\u5ea6\u306f Docker Hub \u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b Docker \u306e\u516c\u5f0f\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ndocker-compose.yml\u3001Dockerfile\u3001hhvm.prod.ini\u3001public/index.php \u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\ndocker-compose.yml\nversion: '2'\n\nservices:\n  hhvm:\n    build: ./\n    volumes:\n      - ./public:/var/www/public\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n\n\n\nDockerfile\nFROM hhvm/hhvm-proxygen:latest\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y ssl-cert \\\n  --no-install-recommends && rm -r /var/lib/apt/lists/*\n\nADD hhvm.prod.ini /etc/hhvm/site.ini\n\nEXPOSE 80 443\n\n\n\nhhvm.prod.ini\n; https://github.com/hhvm/hhvm-docker/blob/master/hhvm-latest-proxygen/server.ini\n; php options\n\npid = /var/run/hhvm/pid\n\n; php options\n\npid = /var/run/hhvm/pid\n\n; hhvm specific \n\nhhvm.server.port = 80\nhhvm.server.type = proxygen \nhhvm.server.default_document = index.php\nhhvm.server.error_document404 = index.php\nhhvm.repo.central.path = /var/run/hhvm/hhvm.hhbc\nhhvm.server.source_root=/var/www/public\n\n; default log location is stdout/err, which is good for docker\nhhvm.log.use_log_file = true\n\n; http/2\nhhvm.server.ssl_next_protocols[] = h2\nhhvm.server.ssl_next_protocols[] = http/1.1\n\n; http/2 without ssl/tls\nhhvm.server.enable_h2c = true\n\n; ssl/tls\nhhvm.server.enable_ssl = true\nhhvm.server.ssl_certificate_file = /etc/ssl/certs/ssl-cert-snakeoil.pem\nhhvm.server.ssl_certificate_key_file = /etc/ssl/private/ssl-cert-snakeoil.key\n\n\n\npublic/index.php\n<?php\nphpinfo();\n\n\n\nDocker \u30a4\u30e1\u30fc\u30b8\u3092\u8d77\u52d5\u3055\u305b\u308b\nDocker \u30a4\u30e1\u30fc\u30b8\u3092\u3082\u3068\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\ndocker-compose up --build -d\n\n\u30b5\u30fc\u30d3\u30b9\u3092\u505c\u6b62\u3055\u305b\u308b\u306b\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\ndocker-compose stop\n\n\nphpinfo \u95a2\u6570\u3067 ini \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3059\u308b\n\u30d6\u30e9\u30a6\u30b6\u30fc\u304b\u3089 hhvml.server \u3067\u30da\u30fc\u30b8\u5185\u3092\u691c\u7d22\u3057\u3066\u3001ini \u30d5\u30a1\u30a4\u30eb\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3058\u3063\u304f\u308a\u773a\u3081\u3066\u3044\u308b\u3068\u3001\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u9805\u76ee\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\ncurl \u3067\u78ba\u304b\u3081\u308b\ncurl \u3067 HEAD \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3066 HTTP/2 \u901a\u4fe1\u304c\u3067\u304d\u308b\u304b\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ncurl --http2 -I -v http://localhost:8080\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306b Upgrade: h2c\u3001HTTP/2 200 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n> HEAD / HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.50.3\n> Accept: */*\n> Connection: Upgrade, HTTP2-Settings\n> Upgrade: h2c\n> HTTP2-Settings: AAMAAABkAAQAAP__\n> \n< HTTP/1.1 101 Switching Protocols\nHTTP/1.1 101 Switching Protocols\n< Upgrade: h2c\nUpgrade: h2c\n< Date: Mon, 26 Sep 2016 21:41:14 GMT\nDate: Mon, 26 Sep 2016 21:41:14 GMT\n< Connection: upgrade\nConnection: upgrade\n* Received 101\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=52\n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n\n< HTTP/2 200 \nHTTP/2 200 \n< vary: Accept-Encoding\nvary: Accept-Encoding\n< content-type: text/html\ncontent-type: text/html\n< x-powered-by: HHVM/3.15.0\nx-powered-by: HHVM/3.15.0\n< content-length: 50947\ncontent-length: 50947\n< date: Mon, 26 Sep 2016 21:41:14 GMT\ndate: Mon, 26 Sep 2016 21:41:14 GMT\n\n\u4eca\u5ea6\u306f SSL/TLS \u3067\u901a\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\ncurl --http2 -I -v https://localhost:8443\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306b ALPN, offering h2\u3001HTTP/2 200 \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n* Connected to localhost (127.0.0.1) port 8443 (#0)\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH\n* successfully set certificate verify locations:\n*   CAfile: /usr/local/etc/openssl/cert.pem\n  CApath: none\n* TLSv1.2 (OUT), TLS header, Certificate Status (22):\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* NPN, negotiated HTTP2 (h2)\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Client hello (1):\n* TLSv1.2 (OUT), TLS handshake, Unknown (67):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n* ALPN, server did not agree to a protocol\n* Server certificate:\n*  subject: CN=11687faae091\n*  start date: Sep 26 19:28:39 2016 GMT\n*  expire date: Sep 24 19:28:39 2026 GMT\n*  issuer: CN=11687faae091\n*  SSL certificate verify result: self signed certificate (18), continuing anyway.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* Using Stream ID: 1 (easy handle 0x7fbf7f008800)\n> HEAD / HTTP/1.1\n> Host: localhost:8443\n> User-Agent: curl/7.50.3\n> Accept: */*\n> \n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n< HTTP/2 200 \nHTTP/2 200 \n< vary: Accept-Encoding\nvary: Accept-Encoding\n< content-type: text/html\ncontent-type: text/html\n< x-powered-by: HHVM/3.15.0\nx-powered-by: HHVM/3.15.0\n< content-length: 50508\ncontent-length: 50508\n< date: Mon, 26 Sep 2016 21:44:20 GMT\ndate: Mon, 26 Sep 2016 21:44:20 GMT\n\n\n\n\u6982\u8981\n---\n\nHHVM \u306b\u306f HTTP \u30b5\u30fc\u30d0\u30fc\u30e9\u30a4\u30d6\u30e9\u30ea\u306e Proxygen \u304c\u7d44\u307f\u8fbc\u307e\u308c\u3066\u304a\u308a\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089\u8d77\u52d5\u3067\u304d\u307e\u3059\u3002Proxygen \u306f TLS/SSL \u304a\u3088\u3073 HTTP/2 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\nPHP \u306e\u30d3\u30eb\u30c8\u30a4\u30f3\u30b5\u30fc\u30d0\u30fc\u306f SSL/TLS\u3001HTTP/2 \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u904b\u7528\u74b0\u5883\u3067HHVM \u3092\u4f7f\u308f\u306a\u304f\u3066\u3082\u30c6\u30b9\u30c8\u74b0\u5883\u3067\u306e\u9078\u629e\u80a2\u306e1\u3064\u3068\u3057\u3066\u8003\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002HHVM \u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u304c\u914d\u5e03\u3057\u3066\u3044\u308b Docker \u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5c0e\u5165\u306e\u6577\u5c45\u304c\u4e0b\u304c\u308a\u307e\u3059\u3002\n\n\u30c6\u30b9\u30c8\u74b0\u5883\u306e\u305f\u3081\u306b SSL/TLS \u3092\u5229\u7528\u3059\u308b\u307b\u304b\u306e\u9078\u629e\u80a2\u3068\u3057\u3066\u3001Swoole \u3084 Event \u30a8\u30af\u30b9\u30c6\u30f3\u30b7\u30e7\u30f3\u3092\u6319\u3052\u307e\u3059\u3002\u30b3\u30fc\u30c9\u306e\u4f8b\u306f[\u3053\u3061\u3089](http://qiita.com/masakielastic/items/4adf156763fee6a861f2)\u306e\u8a18\u4e8b\u3092\u3054\u53c2\u7167\u304f\u3060\u3055\u3044\u3002\n\n\n\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3067 Proxygen \u3092\u8d77\u52d5\u3055\u305b\u308b\n----------------------------------\n\nHHVM \u306e\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u304b\u3089 Proxygen \u3092\u76f4\u63a5\u3055\u305b\u308b\u5834\u5408\u3001\u30aa\u30d7\u30b7\u30e7\u30f3\u306b `-v Server.EnableH2C=true` \u3092\u6307\u5b9a\u3059\u308c\u3070 HTTP/2 \u304c\u5229\u7528\u3067\u304d\u307e\u3059\u3002\n\n```bash\nhhvm -m server -v Server.Type=proxygen -v Server.EnableH2C=true -p 8080\n```\n\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f SSL/TSL \u306a\u3057\u3067 HTTP/2 \u3092\u5229\u7528\u3059\u308b\u305f\u3081\u306b\u3042\u308a\u307e\u3059\u3002\u4e3b\u8981\u306a\u30d6\u30e9\u30a6\u30b6\u30fc\u306f SSL/TLS \u306a\u3057\u3067\u306e HTTP/2 \u901a\u4fe1\u3092\u8a31\u53ef\u3057\u306a\u3044\u305f\u3081\u3001curl \u306a\u3069\u306e\u30b3\u30de\u30f3\u30c9\u30c4\u30fc\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nSSL/TLS \u3082\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u9805\u76ee\u304c\u591a\u3044\u306e\u3067\u3001ini \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u8aad\u307f\u8fbc\u3080\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n```bash\nhhvm -m server -c hhvm.prod.ini\n```\n\n```ini:hhvm.prod.ini\nhhvm.server.type = proxygen\nhhvm.server.port = 8080\n\n; http/2\nhhvm.server.ssl_next_protocols[] = h2\nhhvm.server.ssl_next_protocols[] = http/1.1\n\n; http/2 without ssl/tls\nhhvm.server.enable_h2c = true\n\nhhvm.server.enable_ssl = true\nhhvm.server.ssl_certificate_file = /etc/ssl/certs/ssl-cert-snakeoil.pem\nhhvm.server.ssl_certificate_key_file = /etc/ssl/private/ssl-cert-snakeoil.key\n```\n\nUbuntu \u306e\u5834\u5408\u3001\u30c6\u30b9\u30c8\u7528\u306e SSL/TLS \u306e\u8a3c\u660e\u66f8\u306f ssl-cert \u30d1\u30c3\u30b1\u30fc\u30b8\u304b\u3089\u5165\u624b\u3067\u304d\u307e\u3059\u3002\n\nDocker \u306e\u516c\u5f0f\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\n---------------------------\n\n\u4eca\u5ea6\u306f Docker Hub \u3067\u914d\u5e03\u3055\u308c\u3066\u3044\u308b Docker \u306e\u516c\u5f0f\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\n`docker-compose.yml`\u3001`Dockerfile`\u3001`hhvm.prod.ini`\u3001`public/index.php` \u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```yml:docker-compose.yml\nversion: '2'\n\nservices:\n  hhvm:\n    build: ./\n    volumes:\n      - ./public:/var/www/public\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n```\n\n```bash:Dockerfile\nFROM hhvm/hhvm-proxygen:latest\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y ssl-cert \\\n  --no-install-recommends && rm -r /var/lib/apt/lists/*\n\nADD hhvm.prod.ini /etc/hhvm/site.ini\n\nEXPOSE 80 443\n```\n\n```ini:hhvm.prod.ini\n; https://github.com/hhvm/hhvm-docker/blob/master/hhvm-latest-proxygen/server.ini\n; php options\n\npid = /var/run/hhvm/pid\n\n; php options\n\npid = /var/run/hhvm/pid\n\n; hhvm specific \n\nhhvm.server.port = 80\nhhvm.server.type = proxygen \nhhvm.server.default_document = index.php\nhhvm.server.error_document404 = index.php\nhhvm.repo.central.path = /var/run/hhvm/hhvm.hhbc\nhhvm.server.source_root=/var/www/public\n\n; default log location is stdout/err, which is good for docker\nhhvm.log.use_log_file = true\n\n; http/2\nhhvm.server.ssl_next_protocols[] = h2\nhhvm.server.ssl_next_protocols[] = http/1.1\n\n; http/2 without ssl/tls\nhhvm.server.enable_h2c = true\n\n; ssl/tls\nhhvm.server.enable_ssl = true\nhhvm.server.ssl_certificate_file = /etc/ssl/certs/ssl-cert-snakeoil.pem\nhhvm.server.ssl_certificate_key_file = /etc/ssl/private/ssl-cert-snakeoil.key\n```\n\n```php:public/index.php\n<?php\nphpinfo();\n```\n\nDocker \u30a4\u30e1\u30fc\u30b8\u3092\u8d77\u52d5\u3055\u305b\u308b\n------------------------\n\nDocker \u30a4\u30e1\u30fc\u30b8\u3092\u3082\u3068\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u8d77\u52d5\u3055\u305b\u307e\u3059\u3002\n\n```bash\ndocker-compose up --build -d\n```\n\n\u30b5\u30fc\u30d3\u30b9\u3092\u505c\u6b62\u3055\u305b\u308b\u306b\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bash\ndocker-compose stop\n```\n\n\nphpinfo \u95a2\u6570\u3067 ini \u8a2d\u5b9a\u3092\u78ba\u8a8d\u3059\u308b\n------------------------------\n\n\u30d6\u30e9\u30a6\u30b6\u30fc\u304b\u3089 `hhvml.server` \u3067\u30da\u30fc\u30b8\u5185\u3092\u691c\u7d22\u3057\u3066\u3001`ini` \u30d5\u30a1\u30a4\u30eb\u304c\u53cd\u6620\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3058\u3063\u304f\u308a\u773a\u3081\u3066\u3044\u308b\u3068\u3001\u516c\u5f0f\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u63b2\u8f09\u3055\u308c\u3066\u3044\u306a\u3044\u9805\u76ee\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\ncurl \u3067\u78ba\u304b\u3081\u308b\n--------------\n\ncurl \u3067 HEAD \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u9001\u4fe1\u3057\u3066 HTTP/2 \u901a\u4fe1\u304c\u3067\u304d\u308b\u304b\u78ba\u304b\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash\ncurl --http2 -I -v http://localhost:8080\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306b `Upgrade: h2c`\u3001`HTTP/2 200` \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n> HEAD / HTTP/1.1\n> Host: localhost:8080\n> User-Agent: curl/7.50.3\n> Accept: */*\n> Connection: Upgrade, HTTP2-Settings\n> Upgrade: h2c\n> HTTP2-Settings: AAMAAABkAAQAAP__\n> \n< HTTP/1.1 101 Switching Protocols\nHTTP/1.1 101 Switching Protocols\n< Upgrade: h2c\nUpgrade: h2c\n< Date: Mon, 26 Sep 2016 21:41:14 GMT\nDate: Mon, 26 Sep 2016 21:41:14 GMT\n< Connection: upgrade\nConnection: upgrade\n* Received 101\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=52\n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n\n< HTTP/2 200 \nHTTP/2 200 \n< vary: Accept-Encoding\nvary: Accept-Encoding\n< content-type: text/html\ncontent-type: text/html\n< x-powered-by: HHVM/3.15.0\nx-powered-by: HHVM/3.15.0\n< content-length: 50947\ncontent-length: 50947\n< date: Mon, 26 Sep 2016 21:41:14 GMT\ndate: Mon, 26 Sep 2016 21:41:14 GMT\n```\n\n\u4eca\u5ea6\u306f SSL/TLS \u3067\u901a\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```bash\ncurl --http2 -I -v https://localhost:8443\n```\n\n\u30ec\u30b9\u30dd\u30f3\u30b9\u306b `ALPN, offering h2`\u3001`HTTP/2 200 ` \u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash\n* Connected to localhost (127.0.0.1) port 8443 (#0)\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH\n* successfully set certificate verify locations:\n*   CAfile: /usr/local/etc/openssl/cert.pem\n  CApath: none\n* TLSv1.2 (OUT), TLS header, Certificate Status (22):\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* NPN, negotiated HTTP2 (h2)\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Client hello (1):\n* TLSv1.2 (OUT), TLS handshake, Unknown (67):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n* ALPN, server did not agree to a protocol\n* Server certificate:\n*  subject: CN=11687faae091\n*  start date: Sep 26 19:28:39 2016 GMT\n*  expire date: Sep 24 19:28:39 2026 GMT\n*  issuer: CN=11687faae091\n*  SSL certificate verify result: self signed certificate (18), continuing anyway.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* Using Stream ID: 1 (easy handle 0x7fbf7f008800)\n> HEAD / HTTP/1.1\n> Host: localhost:8443\n> User-Agent: curl/7.50.3\n> Accept: */*\n> \n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n< HTTP/2 200 \nHTTP/2 200 \n< vary: Accept-Encoding\nvary: Accept-Encoding\n< content-type: text/html\ncontent-type: text/html\n< x-powered-by: HHVM/3.15.0\nx-powered-by: HHVM/3.15.0\n< content-length: 50508\ncontent-length: 50508\n< date: Mon, 26 Sep 2016 21:44:20 GMT\ndate: Mon, 26 Sep 2016 21:44:20 GMT\n```\n", "tags": ["PHP", "docker", "HHVM"]}