{"context": "\n\n\u306a\u3093\u3067\u3053\u306e\u8a18\u4e8b\u66f8\u3044\u305f\u306e\u304b\n\u4eca\u958b\u767a\u4e2d\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u304a\u3044\u3066\u3001RxJava\u306e\u5c0e\u5165\u3092\u3084\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u305f\u7b87\u6240\u3068\u305d\u306e\u4f8b\u3001\u8abf\u3079\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u305d\u3046\uff08retrolambda\u306e\u305f\u3081\u306bjdk8\u3092\u6295\u5165\uff09\u307e\u3067\u3057\u3066\u5c0e\u5165\u3057\u305f\u304b\u3063\u305f\u30e1\u30ea\u30c3\u30c8\u3092\u8a71\u3057\u3066\u304f\u308c\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u306a\u3044\u3068\u308f\u304b\u3089\u3093\u3001\u3068\u3044\u3063\u305f\u58f0\u3092\u9802\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f55\u304c\u89e3\u6c7a\u3055\u308c\u305f\u306e\u304b\u3001\u3069\u3093\u306a\u30b3\u30fc\u30c9\u3067\u89e3\u6c7a\u3057\u305f\u306e\u304b\u3068\u3044\u3046\u3053\u3068\u3068\u3001\u305d\u306e\u305f\u3081\u306b\u52c9\u5f37\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u70b9\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\uff08\u8ffd\u8a18\uff09\u8b66\u544a\uff1a\u5dee\u5206\u4f5c\u3063\u3066\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\u89e3\u6c7a\u3057\u305f\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u5dee\u5206\u307e\u3060\u300c\u30ea\u30ea\u30fc\u30b9\u300d\u3057\u305f\u308f\u3051\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u305d\u306e\u70b9\u3060\u3051\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\uff4d\uff4d \u7d9a\u5831\u3042\u308a\u6b21\u7b2c\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\u8ffd\u8a18\uff1a\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u5b89\u5b9a\u904b\u7528\u3057\u3066\u3044\u307e\u3059\uff01\u6700\u8fd1\u307e\u3067\u76e3\u8996\u306b\u96e3\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u305d\u308c\u3082\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u306e\u76e3\u8996\u30b9\u30cb\u30da\u30c3\u30c8\u3082\u66f4\u65b0\u6e08\u307f\u3067\u3059\uff01\n\n\u306a\u305cRxJava\u3092\u5c0e\u5165\u3057\u305f\u306e\u304b\n\u6b21\u306e\u8ab2\u984c\u3092\u307e\u3068\u3081\u3066\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304cRxJava\u3060\u3068\u601d\u3044\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u306e\u52e2\u3044\u3082\u76f8\u307e\u3063\u3066\u5c0e\u5165\uff08\u52e2\u3044\u3067\u3059\u307f\u307e\u305b\u3093\u30fb\u30fb\u30fb\uff09\u3002\n\n\u30c1\u30fc\u30e0\u5185\u3067Android\u306e\u975e\u540c\u671f\u51e6\u7406\u3084\u305d\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3068\u3044\u3046\u8a71\u304c\u305a\u3063\u3068\u524d\u304b\u3089\u51fa\u3066\u3044\u305f\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u3084lambda\u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u53ef\u8aad\u6027\u306e\u9ad8\u3044\u7b87\u6240\u304c\u898b\u53d7\u3051\u3089\u308c\u3066\u3044\u305f\n\u30ea\u30d5\u30a1\u30af\u30bf\u3067\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u6642\u306e\u8868\u793a\u306e\u66f4\u65b0\u3092\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3088\u3046\u3068\u3044\u3046\u65b9\u91dd\u306b\u6c7a\u307e\u3063\u305f\n\nCookpad\u3067\u306f\u6700\u521d\u306f\u30ea\u30b9\u30c8\u64cd\u4f5c\u304b\u3089\u5c0e\u5165\u3057\u305f\u3068\u306e\u3053\u3068\u3067\u3059\uff1aAndroid\u958b\u767a\u3067RxJava\u3092\u30c1\u30fc\u30e0\u306b\u5c0e\u5165\u3057\u305f\u8a71\u3002\n\u304c\u3001\u5f53\u521d\u30ea\u30b9\u30c8\u64cd\u4f5c\u3084Loader\u5b8c\u4e86\u5f8c\u306e\u72b6\u614b\u5909\u66f4\u306e\u914d\u4fe1\u3060\u3051\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001 @ainame \u306b\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3068\u30e1\u30ea\u30c3\u30c8\u304c\u826f\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u717d\u3089\u308c\u305f\uff57\u306e\u3082\u3042\u308a\u3001Loader\u3068EventBus\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u7b87\u6240\u3092RxJava\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nRxJava\u306e\u30ad\u30db\u30f3\nReactive Programming\u306e\u6982\u5ff5\u306b\u3064\u3044\u3066\u306f\u53c2\u8003\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u3068\u3069\u3081\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u306b\u3064\u3044\u3066\u6271\u3044\u307e\u3059\u3002\n\n\u6982\u5ff5\u3084\u53d6\u3063\u4ed8\u304d\u65b9\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\uff1aRxJava\u5b66\u7fd2\u306e\u30d8\u3099\u30b9\u30c8\u30d5\u309a\u30e9\u30af\u30c6\u30a3\u30b9\u3063\u307b\u309a\u3044\u3082\u306e\uff08\u30b9\u30e9\u30a4\u30c9\uff09\n\u3010\u7ffb\u8a33\u3011\u3042\u306a\u305f\u304c\u6c42\u3081\u3066\u3044\u305f\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580\nReactiveX\u306eintro\n\n\u203b\u81ea\u5206\u306fHaskell\u3084\u8ad6\u6587\u306b\u89e6\u308c\u305f\u3053\u3068\u304c\u306a\u3044\u305f\u3081Functional Reactive Programming\u306b\u3064\u3044\u3066\u306f\u7406\u89e3\u304c\u306a\u3044\u3053\u3068\u3092\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\u5171\u901a\u3059\u308b\u4f7f\u3044\u65b9\u3060\u3051\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u306f\u7d9a\u304d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\n\nObservable\u304b\u3089\u306fitem\u304c\u540c\u671f\u7684or\u975e\u540c\u671f\u306b\u6d41\u308c\u3066\u304f\u308b\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\uff09\nObservable.from(List)\u3092\u4f7f\u3046\u3068\u3001List\u306e\u4e2d\u8eab\u304c1\u3064\u305a\u3064\u6d41\u308c\u3066\u304f\u308bObservable\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\nmap()\u3084filter()\u3092\u59cb\u3081\u3068\u3059\u308bOperator\u3092\u4f7f\u3046\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304f\u308bitem\u3092\u52a0\u5de5\u3067\u304d\u308b\n\u539f\u5247subscribe()\u3067\u51e6\u7406\u3092\u958b\u59cb\uff08\u307e\u305f\u306fobserve\u958b\u59cb\uff09\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u9806\u6b21item\u304c\u6d41\u308c\u3066\u304f\u308b\nitem\u306e\u5230\u7740\u3092\u77e5\u3089\u305b\u308bonNext()\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u7d42\u4e86\u3092\u4f1d\u3048\u308bonComplete()\u3001\u30a8\u30e9\u30fc\u767a\u751f\u306b\u3088\u308b\u7d42\u4e86\u3092\u4f1d\u3048\u308bonError()\u304c\u3042\u308b\n\u540c\u671f\u7684\u306b\u7d50\u679c\u3092\u5f97\u305f\u3044\u5834\u5408\u306f\u3001toBlocking()\u3092\u4f7f\u7528\u3059\u308b\nobserveOn()\u306bScheduler\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001subscribe()\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\uff08\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306a\u3069\uff09\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u5834\u5408\u306funsubscribe()\u3059\u308b\uff08\u3068\u3001\u9069\u5207\u306b\u5b9f\u88c5\u3055\u308c\u305fObservable\u3067\u306fActivity/Fragment\u304c\u30ea\u30fc\u30af\u3057\u306a\u3044\uff09\n\n\u30e1\u30a4\u30f3\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306fRxJava\u306erepo\u306eWiki\u3092\u898b\u308b\u306e\u304c\u826f\u3055\u3052\u3067\u3057\u305f\u3002\n\u6319\u52d5\u306e\u78ba\u8a8d\u306frxmarbles.com\u304c\u591a\u5206\u4e00\u756a\u4fbf\u5229\u3067\u3059\u3002\u305f\u3060\u3057RxJS\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u540d\u524d\u304c\u9055\u3046\u30e1\u30bd\u30c3\u30c9\u3068\u304b\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u73fe\u72b6\u306e\u8ab2\u984c\u306eRxJava\u306b\u3088\u308b\u89e3\u6c7a\u7b56\n\uff08\u3068\u3053\u308d\u3069\u3053\u308darg -> process()\u3068\u304bHoge::method\u3068\u304b\u51fa\u3066\u304d\u307e\u3059\u304c\u3001Java 8\u3067\u4f7f\u3048\u308blambda\u8868\u73fe\u306a\u306e\u3067\u3001retrolambda\u3092\u6301\u3061\u8fbc\u307e\u306a\u3044\u4eba\u306f\u9069\u5207\u306a\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092new\u3067\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\uff09\n\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u304c\u3044\u307e\u3060\uff1f\u306bfor\u6587\u554f\u984c\n\u8ffd\u8a18: RxJava\u306f\u305f\u3060\u5358\u306b\u30eb\u30fc\u30d7\u3057\u3066\u3044\u308b\u308f\u3051\u3058\u3083\u306a\u3044\u70ba\u3001zip()\u306a\u3069\u4e00\u90e8\u306e\u51e6\u7406\u304c\u4f4e\u901f\u306a\u3088\u3046\u3067\u3059\u3002\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u3092\u4fbf\u5229\u306b\u3057\u305f\u3044\u3068\u3044\u3046\u76ee\u7684\u306b\u306fJava 8\u306eStream API\u306a\u3069\u306e\uff08\u5c0f\u3055\u306a\uff1f\uff09\u30d0\u30c3\u30af\u30dd\u30fc\u30c8\u3067\u3042\u308bLightweight-Stream-API\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\u30e1\u30bd\u30c3\u30c9\u6570\u306f350\u7a0b\u5ea6\u3067\u3059\u3002\nJava 8\u304b\u3089lambda\u3068stream API\u3092\u4f7f\u3063\u3066map\u3084filter\u306e\u3088\u3046\u306a\u3001Ruby\u3001Python\u3001underscore.js/EcmaScript5\u3067\u304a\u306a\u3058\u307f\u306e\u3001for\u30eb\u30fc\u30d7\u3092\u4f7f\u308f\u306a\u3044\u30ea\u30b9\u30c8\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n// Java 7\nList<String> otherUserNames = new ArrayList<>(users.size);\nfor (User user : users) {\n    if (user.id != selfUser.id) {\n        otherUserNames.add(user.getName());\n    }\n}\n\n\u3053\u308c\u304cJava 8\u3067\u306f\n// Java 8\nList<String> otherUserNames = users.stream()\n    .filter(user -> user.id != selfUser.id)\n    .map(User::getName) // user -> user.getName() \u306e\u77ed\u7e2e\u5f62\u3001method references\u3068\u3044\u3044\u307e\u3059\n    .collect(Collectors.toList());\n\nnew\u3068\u304badd\u3068\u304b\u306e\u624b\u7d9a\u304d\u7684\u306a\u8a18\u8ff0\u304c\u6d88\u3048\u3066\u3001\u30ea\u30b9\u30c8\u306b\u5bfe\u3059\u308b\u52a0\u5de5\u3060\u3051\u304c\u30b3\u30fc\u30c9\u306b\u73fe\u308c\u308b\u306e\u3067\u8aad\u307f\u3084\u3059\u3044\uff01\n\u3057\u304b\u3057Android\u3067\u306fJava 8\u304c\u4f7f\u3048\u308b\u306e\u306f\u305a\u3063\u3068\u5148\u306b\u306a\u308a\u305d\u3046\u306a\u611f\u3058\u3067\u3059\u30fb\u30fb\u3002\n\n\u305d\u308c\u3001RxJava\u3067\u89e3\u6c7a\u3067\u304d\u308b\u3088\n// RxJava\nList<String> otherUserNames = Observable.from(users)\n    .filter(user -> user.id != selfUser.id)\n    .map(User::getName)\n    .toList().toBlocking().single(); // \u5168\u90e8List\u306b\u307e\u3068\u3081\u3001\u540c\u671f\u51e6\u7406\u3059\u308b\u3088\u3046\u6307\u5b9a\u3057\u30011\u3064\u3057\u304b\u306a\u3044\u7d50\u679c(List)\u3092\u53d6\u308a\u51fa\u3059\n\n\u975e\u540c\u671f\u51e6\u7406\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u540c\u671f\u51e6\u7406\u306b\u5909\u3048\u308b\u305f\u3081\u306etoBlocking()\u306e\u547c\u3073\u51fa\u3057\u304c\u5fc5\u8981\u3067\u3061\u3087\u3063\u3068\u7656\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u3053\u3055\u3048\u30af\u30ea\u30a2\u3059\u308c\u3070\u5341\u5206\u5b9f\u7528\u7684\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u306e\u8a18\u4e8b\u306b\u3044\u304f\u3064\u304b\u8f09\u3063\u3066\u3044\u307e\u3059\uff1aJava 8: No more loops\u3092RxJava\u3067\u3084\u308b(Android\u306e\u74b0\u5883\u3067)\n\n\u975e\u540c\u671f\uff08\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\uff09\u51e6\u7406\u304c\u9762\u5012\u304f\u3055\u3044\u554f\u984c\nAndroid\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\uff08View\u306b\u7d50\u679c\u3092\u53cd\u6620\u3059\u308b\u3088\u3046\u306a\uff09\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u306f\u4e3b\u306b\u4e0b\u8a18\u306e3\u3064\u3067\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u305d\u308c\u305e\u308c\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nAsyncTask\n\n\u5b9f\u884c\u4e2d\u306bActivity/Fragment\u304cdestroy\u3055\u308c\u308b\u3068\u3001\u7279\u5225\u306a\u8003\u616e\u3092\u3057\u306a\u3044\u9650\u308a\u53c2\u7167\u304c\u30ea\u30fc\u30af\u3057\u305f\u308a\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\n\u7279\u306bcancel\u6642\u306e\u6271\u3044\u304c\u96e3\u3057\u3044\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u9762\u5012\n\n\n\nAsyncTaskLoader\n\n\u6b63\u3057\u304f\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306eboilerplate\uff08\u30b3\u30d4\u30da\uff09\u304c\u975e\u5e38\u306b\u96e3\u3057\u3044\uff08\u4ee5\u524d\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u3068\u304d\u306f\u30ea\u30f3\u30af\u5148\u306e\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb\u3082\u9593\u9055\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u305f\uff09\ndestroy\u3084\u753b\u9762\u56de\u8ee2\u306e\u3068\u304d\u3001Activity/Fragment\u304c\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u3068\u304d\u306a\u3069\u3001\u6761\u4ef6\u3054\u3068\u306e\u6319\u52d5\u304c\u3042\u308a\u8907\u96d1\nActivity/Fragment\u3067\u3057\u304b\u4f7f\u7528\u3067\u304d\u306a\u3044\n\u30d1\u30e9\u30e1\u30fc\u30bf\u304cbundle\u3067\u3057\u304b\u6e21\u305b\u305a\uff08\u610f\u56f3\u306f\u308f\u304b\u308b\u304c\uff09\u7d20\u76f4\u3058\u3083\u306a\u3044\n\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u9762\u5012\n\n\n\nIntentService\n\n\u7d50\u679c\u3092\u8fd4\u5374\u3059\u308b\u65b9\u6cd5\u304c\u30a4\u30d9\u30f3\u30c8\uff08EventBus\u3084LocalBroadcast\uff09\u306b\u9650\u3089\u308c\u308b\n\u4f5c\u308b\u3054\u3068\u306bAndroidManifest\u3078\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\n\n\n\n\n\u305d\u308c\u3001RxJava\u3067\u89e3\u6c7a\u3067\u304d\u308b\u3088\n\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u3001Promise\u3092\u5c0e\u5165\u3059\u308b\u624b\u6bb5\u304c\u3042\u308a\u307e\u3059\u3002\nRxJava\u306eObservable\u306fPromise\u306e\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nobservable\n    .observeOn(AndroidSchedulers.mainThread())\n    .subscribe(result -> render(result));\n\n\u4f8b\u3048\u3070\u3001REST client\u30e9\u30a4\u30d6\u30e9\u30ea\u306eretrofit\u306fRxJava\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u3066\u3001Observable\u3092\u8fd4\u5374\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\npublic interface Client {\n    @GET(\"/users\")\n    List<User> getUsers();\n\n    @GET(\"/users\")\n    Observable<List<User>> users(); // retrofit\u306e\u5834\u5408\u3001\u6700\u521d\u304b\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\n}\n\n\u3053\u308c\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u4f8b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\npublic class UserListFragment extends Fragment {\n    private Subscription mSubscription;\n    private Client mClient;\n    ...\n\n    public void onStart() {\n        super.onStart();\n        mSubscription = mClient.users()\n            .observeOn(AndroidSchedulers.mainThread()) // \u7d50\u679c\u306e\u901a\u77e5\u306fUI\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3059\n            .subscribe(                                // subscribe\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u307e\u3059\n                this::render,                          // \u7d50\u679c\u3092render\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u307e\u3059\n                error -> showErrorAlert(error),        // \u30a8\u30e9\u30fc\u767a\u751f\u306b\u3088\u308b\u7d42\u4e86\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059\uff08optional\uff09\n                () -> showCompletedAlert());           // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059 (optional)\n    }\n    // \u203bmainThread()\u306fRxAndroid\u306e\u5b9f\u88c5\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n    public void onStop() {\n        // view\u304c\u306a\u304f\u306a\u308b\u524d\u306b\u306f\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u306a\u304f\u3066\u3082unsubscribe()\u3057\u3066\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3078\u306e\u53c2\u7167\u3092\u7834\u68c4\u3057\u307e\u3059\n        // \uff08Observable\u304c\u6b63\u3057\u304f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308c\u3070\uff09\u53c2\u7167\u304c\u7834\u68c4\u3055\u308c\u308c\u3070Activity/Fragment\u306f\u30ea\u30fc\u30af\u3057\u307e\u305b\u3093\n        // \u3069\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3067subscribe/unsubscribe\u3059\u308b\u304b\u306f\u307e\u3060\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u304c\u5b9a\u307e\u3063\u3066\u306a\u3044\u3067\u3059\n        mSubscription.unsubscribe();\n        super.onStop();\n    }\n\n    private void render(List<User> userList) {\n        ...\n    }\n\n    ...\n}\n\n\u3053\u306e\u3088\u3046\u306bAsyncTask\u3084AsyncTaskLoader\u3001IntentService\u3092\u65b0\u305f\u306b\u8a2d\u7f6e\u3057\u306a\u304f\u3066\u3082\u3001\u30ea\u30fc\u30af\u3057\u306a\u3044\u3057\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3067\u66f8\u3051\u307e\u3059\u30fb\u30fb\uff01\n\u4eca\u56de\u306f\u753b\u9762\u56de\u8ee2\u6642\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306f\u3057\u306a\u3044\u5272\u308a\u5207\u3063\u305f\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3067\u304d\u308c\u3070\u305d\u306e\u8fba\u308a\u306b\u3082try\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u203bPromise\u3068Observable\u306e\u5927\u304d\u306a\u9055\u3044\u306f\u3001\u8907\u6570\u306e\u5024\u3092\u8fd4\u5374\u3067\u304d\u308b\u70b9\u3067\u3059\u3002\n\u306a\u304a\u3001\u4eca\u56de\u81ea\u5206\u3067\u4f5c\u3063\u305f\u5b9f\u88c5\u3067\u306fAndroidSchedulers.mainThread()\u306fRxAndroid\u306e\u3082\u306e\u3092\u5229\u7528\u305b\u305a\u3001\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u306a\u304a\u3057\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002RxAndroid\u3092\u4f7f\u308f\u306a\u304b\u3063\u305f\u7406\u7531\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n\u5909\u66f4\u901a\u77e5\u306e\u6d41\u308c\u304c\u8ffd\u3044\u306b\u304f\u304f\u306a\u3063\u305f\u554f\u984c\n\u8868\u793a\u306e\u305f\u3073\u306bFragment\u304b\u3089Model\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u6240\u306b\u3001\u5909\u66f4\u901a\u77e5\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u308b\u8868\u793a\u306e\u66f4\u65b0\u3092\u52a0\u3048\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u306e\u6d41\u308c\u304c\u3084\u3084\u8907\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u307e\u305f\u3001EventBus\u306a\u3069\u3092\u4ecb\u3059\u308b\u3068\u3001\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u3069\u3053\u304b\u3089\u98db\u3093\u3067\u304f\u308b\u306e\u304b\u304c\u4e00\u76ee\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u8ab2\u984c\u3082\u3042\u308a\u307e\u3059\u3002\n                                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                    | Model2 | \u2500\u2500( save )\u2500\u2500\u2500\u2510\n                                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n| View |\u2190\u2500(render)\u2500\u2500| Activity/Fragment |              | Model |              | DB/API |\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2191           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502\n                        \u2514\u2500(event)\u2500\u2500 | Event Bus | \u2190\u2500(post)\u2500\u2500\u2518\n                                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n\u3053\u308c\u3092Observer\u30d1\u30bf\u30fc\u30f3\u306b\u3059\u308c\u3070\u3001\u5909\u66f4\u5185\u5bb9\u304c\u901a\u77e5\u3055\u308c\u308b\u3054\u3068\u306brender\u3059\u308b\u3060\u3051\u3067\u826f\u304f\u306a\u308a\u3001\u307e\u305fsubscribe\u3059\u308b\u3068\u304d\u306bModel\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u3067\u53ef\u8aad\u6027\u304c\u9ad8\u307e\u308a\u307e\u3059\u3002\n                                   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                   | Model2 | \u2500\u2500( save )\u2500\u2500\u2500\u2510\n                                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n| View |\u2190\u2500(render)\u2500\u2500| Activity/Fragment | \u2190\u2500(update)\u2500\u2500 | Model |              | DB/API |\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502                              \u2191\n                            \u2514 \u2500 \u2500 \u2500 (subscribe once) \u2500 \u2500 \u2500 \u2518\n\n\n\u305d\u308c\u3001RxJava\u3067\uff08\uff52\uff59\n\u8ffd\u8a18\uff1a\u5143\u306e\u5b9f\u88c5\u3060\u3068\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u306f\u6700\u65b0\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3068\u3001onBackpressureLatest()\u304c\u52b9\u679c\u304c\u306a\u3044\u72b6\u614b\u3060\u3063\u305f\u306e\u3067\u3001replay(1)\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002\nObservable\u306fonComplete()\u3084onError()\u3092\u547c\u3073\u3060\u3055\u306a\u3051\u308c\u3070\u3001\u3044\u3064\u4f55\u5ea6\u3067\u3082\u30c7\u30fc\u30bf\u3092\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\npublic class UserModel {\n    ...\n\n    // \u901a\u77e5\u304c\u6765\u308b\u305f\u3073\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308bObservable\u3092\u4f5c\u308a\u307e\u3059\n    private PublishSubject<Void> mUpdateNotificationPublisher = PublishSubject.create()\n    private Observable<List<User>> mUserUpdateObservable = mUpdateNotificationPublisher\n            .onBackpressureLatest()               // \u5f8c\u7d9a\u304c\u300c\u51e6\u7406\u3067\u304d\u307e\u3059\u3088\u300d\u3068\u8a00\u3063\u3066\u3044\u308b\u6570\u3088\u308a\u3082\u305f\u304f\u3055\u3093\u304d\u305f\u3089\u3001\n                                                  // \u6700\u65b0\u306e1\u3064\u3060\u3051\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u6b8b\u308a\u3092\u6368\u3066\u308b\u3002\n            .flatMap(aVoid -> mClient.users(), 1) // \u5024\u304c\u98db\u3093\u3067\u304d\u305f\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308bObservable\u3092\u8fd4\u3059\u3002\n                                                  // flatMap\u306f\u8fd4\u3055\u308c\u305fObservable\u3092subscribe()\u3057\u3066\u5f8c\u7d9a\u306b\u3064\u306a\u3050\u3002\n                                                  // maxConcurrent\u306b1\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u540c\u6642\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3060\u3051\u8d70\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n            .replay(1).refCount()                 // \u8907\u6570\u56desubscribe\u3055\u308c\u3066\u30821\u3064\u306e\u7d50\u679c\u3092\u5168\u54e1\u306b\u914d\u5e03\u3059\u308b\u3002\n                                                  // replay(1)\u306fsubscribe()\u3055\u308c\u305f\u6642\u306b\u6700\u65b0\u306e1\u3064\u306eonNext()\u3092\u6e21\u3059\u3002\n                                                  // refCount()\u306f\u8ab0\u304b1\u4eba\u3067\u3082subscribe()\u3057\u3066\u308b\u6642\u306b\u4e0a\u6d41\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n                                                  // \u203bpublish()\u307e\u305f\u306freplay()\u3057\u306a\u3044\u3068subscribe()\u3057\u305f\n                                                  //  \u56de\u6570\u5206\u3060\u3051\uff08\u7121\u99c4\u306b\uff09\u4e26\u5217\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u8d70\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n                                                  //  \u8907\u6570\u56de\u8d70\u308b\u7406\u7531\u306fHot/Cold Observable\u306e\u6982\u5ff5\u3067\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n    private void notifyUpdate() {\n        mUpdateNotificationPublisher.onNext(null);\n    }\n\n    public Observable<List<User>> observeUsers() {\n        return mUserUpdateObservable;             // \u4f55\u56de\u53e9\u304b\u308c\u3066\u3082\u540c\u3058Hot Observable\u3092subscribe()\u3059\u308b\n    }\n}\n\npublic class UserListFragment extends Fragment {\n    private Subscription mSubscription;\n    private UserModel mUserModel;\n    ...\n\n    public void onStart() {\n        super.onStart();\n        mSubscription = mUserModel.observeUsers()\n            .observeOn(AndroidSchedulers.mainThread()) // \u7d50\u679c\u306e\u901a\u77e5\u306fUI\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3059\n            .subscribe(this::render)                   // subscribe\u3067\u76e3\u8996\u3068\u521d\u56de\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u958b\u59cb\u3055\u308c\u3001\u5909\u66f4\u304c\u3042\u308b\u305f\u3073\u306brender\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    }\n\n    public void onStop() {\n        mSubscription.unsubscribe();\n        super.onStop();\n    }\n\n    private void render(List<User> userList) {\n        ...\n    }\n\n    ...\n}\n\nFragment\u5074\u306b\u4e00\u5207\u8907\u96d1\u306a\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306a\u304f\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u611f\u306b\u3042\u3075\u308c\u308b\u3001\u5909\u66f4\u304c\u52dd\u624b\u306b\u53cd\u6620\u3055\u308c\u308b\u5b9f\u88c5\u304c\u66f8\u3051\u307e\u3057\u305f\u30fb\u30fb\uff01\n\u203b\u8ab0\u304b\u3089\u3067\u3082post\u3067\u304d\u308b\u3088\u3046\u306a\u30a4\u30d9\u30f3\u30c8\u306fEventBus\u3092\u3001\u7279\u5b9a\u306e\u76f8\u624b\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u898b\u305f\u3044\u5834\u5408\u306fObservable\u3092\u3001\u3068\u3044\u3063\u305f\u4f7f\u3044\u5206\u3051\u304c\uff08\u3069\u3053\u304b\u3067\uff09\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n\u5c0e\u5165\u3057\u305f\u304f\u306a\u3063\u305f\u3089\n\n\nRxJava: \u672c\u4f53\n\n\nbuild.gradle\u306b compile 'io.reactivex:rxjava:x.xx.xx' \u6700\u65b0\u7248\u306f\u4e0a\u306e\u30ea\u30f3\u30af\u3067\u78ba\u8a8d\u306e\u3053\u3068\n\n\n\nretrolambda: lambda\n\n\nAndroid\u3067\u3082lambda\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n\n\n\nRxJavaDebug: \u30c7\u30d0\u30c3\u30b0\u7528\n\n\n\u7d50\u5c40\u4f7f\u3063\u3066\u306a\u3044\u3067\u3059\n\n\n\n\n\u305d\u308c\u306a\u308a\u306b\u8abf\u3079\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\n\u307e\u305a\u306f\u5b9f\u88c5\u4f8b\u3092\u8f09\u305b\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u30ea\u30b9\u30c8\u64cd\u4f5c\u4ee5\u964d\u306f\u7406\u89e3\u3057\u3066\u304a\u304f\u3079\u304d\u4e8b\u67c4\u304c\u5897\u52a0\u3057\u307e\u3059\u3002\n\n\u30ea\u30b9\u30c8\u64cd\u4f5c\uff1a\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u3001Operator\u3001toBlocking()\n\u975e\u540c\u671f\u51e6\u7406\uff1a\u2191\uff0bsubscribe()\u3001unsubscribe()\u3001Scheduler\u3001\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09Observable\u306e\u81ea\u4f5c\u65b9\u6cd5\n\u5909\u66f4\u901a\u77e5\uff1a\u3000\u2191\uff0bSubject\uff0b\u3067\u304d\u308c\u3070Backpressure\n\n\u3053\u308c\u4ee5\u964d\u306f\u6b63\u76f4\u6700\u521d\u3063\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3057\u3093\u3069\u3044\u9818\u57df\u304b\u3068\u601d\u308f\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u6271\u3044\u304c\u7c21\u5358\u306a\u30ea\u30b9\u30c8\u64cd\u4f5c\u304b\u3089\u59cb\u3081\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u975e\u540c\u671f\u51e6\u7406\u3084\u3063\u3066\u307f\u308b\u305c\u30fb\u30fb\uff01\u3068\u601d\u3063\u305f\u3089\u3001\u4e0b\u8a18\u3092\u9806\u756a\u306b\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\nunsubscribe()\u3092\u3059\u308b\u306e\u304c\u9762\u5012\u3001\u304b\u3064\u305d\u308c\u3092\u4f55\u3068\u304b\u3059\u308bRxAndroid\u306f\u4eca\u4f7f\u3048\u306a\u3044\n\n\u8ffd\u8a18\uff1asubscribe/unsbuscribe\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u95a2\u3057\u3066\u306f\u5225\u306eQiita\u8a18\u4e8b\uff08\u8a73\u89e3RxJava\uff09\u306b\u4eca\u306e\u898b\u89e3\u3092\u66f8\u304d\u307e\u3057\u305f\n\u8ffd\u8a18\uff1aRxLifecycle\u304c\u5143\u306eRxAndroid\u306eunsubscribe\u5468\u308a\u306b\u8fd1\u3044\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306bonStart()\u3060\u3051\u3067\u5341\u5206\u3060\u306a\u3041\u3068\u601d\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\nsubscribe()\u3067\u8fd4\u5374\u3055\u308c\u308bSubscription\u3092unsubscribe()\u3057\u306a\u3044\u3068\u3001AsyncTask\u306e\u3088\u3046\u306b\u30bf\u30b9\u30af\u5b8c\u4e86\u307e\u3067Activity/Fragment\u304c\u30ea\u30fc\u30af\u3057\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u4e00\u5fdconComplete()\u3082\u3057\u304f\u306fonError()\u306e\u969b\u306b\u81ea\u52d5\u3067unsubscribe()\u3055\u308c\u307e\u3059\uff09\u3002\u672c\u6765\u3067\u306fRxAndroid\u3067\u5bfe\u5fdc\u3067\u304d\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u3001\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u308b\u304b\u3089\u5206\u5272\u3059\u308b\u305e by Jake\u6c0f\u3068\u306a\u3063\u3066\u3044\u308b\u901a\u308a\u3001\u4eca\u3042\u307e\u308a\u4f7f\u3048\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\u5b66\u7fd2\u30b3\u30b9\u30c8\u3092\u6291\u3048\u308b\u305f\u3081\u3082\u304b\u306d\u3066\u3001onCreate()\u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3067subscribe\u3068unsubscribe\u3092\u81ea\u5206\u3067\u53e9\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u81ea\u524d\u3067\u306eSubscription\u7ba1\u7406\u3092\u7c21\u5358\u306b\u3059\u308b\u306b\u306f\u3001CompositeSubscription\u306badd()\u3057\u3066\u3001\u3042\u3068\u3067\u8907\u6570\u307e\u3068\u3081\u3066unsubscribe()\u3057\u307e\u3059\u3002\npublic class UserListFragment extends Fragment {\n    private CompositeSubscription mCompositeSubscription;\n    private Client mClient;\n\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mCompositeSubscription = new CompositeSubscription();\n        Subscription subscription = mClient.users()\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe(result -> render(result));\n        mCompositeSubscription.add(subscription);\n    }\n\n    public void onDestroy() {\n        mCompositeSubscription.unsubscribe();\n        super.onDestroy();\n    }\n\n    ...\n}\n\n\u66f4\u65b0\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306a\u3069\u3001subscribe()\u3092\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u5834\u5408\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3059\u308b\u305f\u3073\u306b\u3044\u3061\u3044\u3061CompositeSubscription\u304b\u3089remove()\u3057\u306a\u3044\u3068\u3069\u3093\u3069\u3093\u5897\u3048\u3066\u3044\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001subscribe()\u3068unsubscribe()\uff08or\u7d42\u4e86\uff09\u306e\u969b\u306b\u52dd\u624b\u306bCompositeObservable\u306eadd()\u3068remove()\u3092\u547c\u3073\u51fa\u3059\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nhttps://gist.github.com/ypresto/accec4409654a1830f54\n\u8ffd\u8a18\uff1a\u3053\u308c\u306f\u5fc5\u305asubscribe()\u306e\u4e00\u756a\u76f4\u524d\u3067\u547c\u3073\u51fa\u3055\u306a\u3044\u3068\u3001\u3046\u307e\u304funsubscribe\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002\nmClient.users()\n    .observeOn(AndroidSchedulers.mainThread())\n    .lift(CompositeObservables.attachTo(mCompositeObservable)) // lift\u306f\u30ab\u30b9\u30bf\u30e0\u306eOperator\u3092\u4f7f\u3046\u305f\u3081\u306e\u3082\u306e\u3067\u3059\n    .subscribe(result -> render(result));\n\n\u203bCompositeSubscription\u306f\u4e00\u5ea6unsubscribe\u3059\u308b\u3068\u518d\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002attachTo()\u306fmCompositeObservable\u3092\u4f5c\u308a\u306a\u304a\u3059\u305f\u3073\u306b\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nhttp://gfx.hatenablog.com/entry/2015/06/08/091656\n\nsubscribeOn()\u3001observeOn()\u3068Scheduler\u3001\u30b9\u30ec\u30c3\u30c9\u5207\u308a\u66ff\u3048\u3068\u305d\u306e\u6709\u52b9\u7bc4\u56f2\n\u8ffd\u8a18\uff1a\u5f53\u6642\u3088\u308a\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u306e\u3067\u7591\u4f3c\u30b3\u30fc\u30c9\u4ed8\u304d\u306e\u8aac\u660e\u3092\u5225\u306eQiita\u8a18\u4e8b\uff08\u8a73\u89e3RxJava\uff09\u306b\u66f8\u304d\u307e\u3057\u305f\n\u6700\u521d\u306b\u7406\u89e3\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u3082\u306e\u306e1\u3064\u304c\u3001\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u308b\u305f\u3081\u306eScheduler\u306e\u4f7f\u3044\u65b9\u3067\u3059\u3002\nScheduler\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u5b9f\u884c\uff08onNext()\u3001onComplete()\u3001onError()\u306a\u3069\u306e\u547c\u3073\u51fa\u3057\uff09\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nsubscribeOn(): subscribe()\u3067\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\u5168\u4f53\u306e\u30b9\u30ec\u30c3\u30c9\u3092\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6839\u3063\u3053\uff1a\u30bd\u30fc\u30b9\u304b\u3089\uff09\u5909\u66f4\nobserveOn(): \u547c\u3073\u51fa\u3057\u305f\u4ee5\u964d\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n\nsubscribeOn()\u306f\u3001\u9045\u3044\u30e1\u30bd\u30c3\u30c9\u3092map()\u3084\u30ab\u30b9\u30bf\u30e0\u306eObservable\u3067\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u4e00\u756a\u30bd\u30fc\u30b9\u306b\u8fd1\u3044subscribeOn()\u3060\u3051\u304c\u6709\u52b9\u3067\u3059\u3002\u4f55\u5ea6\u3082\u53e9\u304f\u3068\u30b9\u30ec\u30c3\u30c9\u751f\u6210\u5206\u7121\u99c4\u3068\u306e\u3053\u3068\u3002\u306a\u304a\u3001retrofit\u306f\u6700\u521d\u304b\u3089\u30b9\u30ec\u30c3\u30c9\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u52b9\u679c\u304c\u7121\u3044\u307f\u305f\u3044\u3067\u3059\u3002\nobserveOn()\u306f\u3001View\u306e\u66f4\u65b0\u306fMain Thread\u3067\u3057\u304b\u547c\u3079\u306a\u3044\u306e\u3067\u3001\u975e\u540c\u671f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u3092\u53e9\u3044\u305f\u969b\u306fsubscribe()\u306e\u76f4\u524d\u3067\u5fc5\u305a\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u4eca\u306e\u3068\u3053\u308dRxAndroid\u306eAndroidSchedulers.mainThread()\u3092\u53c2\u8003\u306b\u518d\u5b9f\u88c5\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3060\u3068\u601d\u3044\u307e\u3059\u3002 RxAndroid\u306e1.0\u306fAndroidSchedulers\u306e\u5b9f\u88c5\u3060\u3051\u3092\u542b\u3080\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u306e\u304c\u6700\u9069\u3067\u3059\u3002\n\u306a\u304a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u306a\u3044\u9650\u308a\u3001subscribeOn()\u306e\u6307\u5b9a\u304c\u306a\u3051\u308c\u3070subscribe()\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\u203bObservable\u3092\u8fd4\u5374\u3067\u304d\u308bflatMap()\u3092\u4f7f\u3063\u305f\u969b\u304c\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u3001\u8fd4\u3057\u305fObservable\u3067subscribeOn()\u3092\u53e9\u3044\u3066\u3044\u308b\u3068\u3001onNext()\u3092\u547c\u3093\u3060Observable\u306b\u5bfe\u5fdc\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u7d9a\u304d\u306e\u51e6\u7406\u3082\u547c\u3070\u308c\u308b\u305d\u3046\u3067\u3059\u3002 https://groups.google.com/d/msg/rxjava/hVFl4YCORDQ/F-KorYBmpV0J\n\n\u540c\u671f\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092Observable\u306b\u3059\u308b\u65b9\u6cd5\n\u8ffd\u8a18\uff1a\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\uff08\u7279\u306b\u3001\u9045\u3044\u51e6\u7406\u3067\uff09\u3059\u308b\u3068\u3001subscriber\u304c\u30ea\u30fc\u30af\u3057\u3066\u3001\u7d50\u679cActivity\u3068\u304b\u304cleak\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u5225\u306eQiita\u8a18\u4e8b\u306b\u66f8\u304f\u4e88\u5b9a\u3067\u3059\n\u6700\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u3084\u308a\u65b9\u3092\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\nObservable.create(new Observable.OnSubscribe<List<User>>() {\n    @Override\n    public void call(Subscriber<? super List<User>> subscriber) {\n        subscriber.onNext(mClient.getUsers());\n        subscriber.onCompleted();\n    }\n});\n\n\u304c\u3001\u5b9f\u306f\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067subscriber\uff08\uff1dActivity\u3084Fragment\u306e\u4e2d\u306eInner Class\u3084lambda\u3001\u3082\u3057\u304f\u306f\u305d\u308c\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3078\u306e\u53c2\u7167\u304c\u7dad\u6301\u3055\u308c\u308b\u305f\u3081\u3001AsyncTask\u3068\u540c\u69d8\u306e\u30ea\u30fc\u30af\u304c\u767a\u751f\u3057\u307e\u3059\u3002AbstractOnSubscribe\u3092\u4f7f\u3046\u3068\u6700\u521d\u304b\u3089unsubscribe()\u306b\u3088\u308b\u30ad\u30e3\u30f3\u30bb\u30eb\u306a\u3069\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n// \u203bAbstractOnSubscribe\u306fExperimental\u3067\u3059\nObservable.create(AbstractOnSubscribe.create(new Action1<AbstractOnSubscribe.SubscriptionState<List<User>, Void>>() {\n    @Override\n    public void call(AbstractOnSubscribe.SubscriptionState<List<MediaFile>, Void> subscriptionState) {\n        subscriptionState.onNext(client.getUsers());\n        subscriptionState.onCompleted();\n    }\n})).subscribeOn(Schedulers.io());\n\n\u203brxjava-async-util\u3092\u4f7f\u3046\u3068AsyncObservable.start()\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u5024\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u308a\u3059\u308b\u306e\u3067\u4eca\u56de\u306f\u898b\u9001\u308a\u307e\u3057\u305f\u3002\n\nHot/Cold Observable\u3068\u3044\u3046\u6982\u5ff5\u3068Connectable Observable\u304c\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u554f\u984c\n\u3082\u30461\u3064\u3068\u3063\u3064\u304d\u306b\u304f\u304b\u3063\u305f\u3082\u306e\u304c\u3001Hot\u3068Cold\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\nprivate Observable mObservable = mClient.users().map(users -> heavyMethod(users));\n\n...\n\nmObservable.subscribe(users -> render(users));\nmObservable.subscribe(users -> render(users));\nmObservable.subscribe(users -> render(users));\n\n\u6700\u521d\u306fheavyMethod()\u306e\u547c\u3073\u51fa\u3057\u306f1\u56de\u3067\u6e08\u3080\u3068\u601d\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001Observable\u306f\u975e\u540c\u671f\u306a\u306e\u3067\u3001mObservable\u306b\u306f\u3044\u304b\u306a\u308b\u7d50\u679c\u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u3089\u305a\u3001heavyMethod()\u306f3\u56de\u547c\u3070\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u5909\u66f4\u901a\u77e5\u306e\u5b9f\u88c5\u4f8b\u3067share()\uff08publish().refCount()\u3068\u540c\u7fa9\uff09\u306e\u547c\u3073\u51fa\u3057\u3092\u3057\u3066\u3044\u305f\u306e\u306f\u3001\u5206\u5c90\u306e\u6839\u3063\u3053\u306b\u3057\u3066\u51e6\u7406\u7d50\u679c\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u5206\u5c90\u306e\u6839\u3063\u3053\u306b\u306a\u308b\u7279\u5225\u306a\u3082\u306e\u3092Hot Observable\u3001\u306a\u3089\u306a\u3044\u901a\u5e38\u306e\u3082\u306e\u3092Cold Observable\u3068\u547c\u3073\u307e\u3059\u3002\nRx\u306eHot\u3068Cold\u306b\u3064\u3044\u3066\u306b\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nConnectable Observable\u306fsubscribe\u3055\u308c\u305f\u3089\u3059\u3050\u306b\u52d5\u4f5c\u304c\u59cb\u307e\u308bHot Observable\u3092\u3001\u5168\u54e1\u306esubscribe()\u304c\u7d42\u308f\u308b\u307e\u3067\u9045\u3089\u305b\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3001refCount()\u3092\u4f7f\u3046\u3068\u8ab0\u304b\u304csubscribe()\u3057\u3066\u3044\u308b\u6642\u3060\u3051\u958b\u59cb\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\npublish(): subscribe()\u3057\u305f\u5148\u306b\u4ee5\u5f8c\u5c4a\u3044\u305f\u3082\u306e\u3092\u5782\u308c\u6d41\u3059\u3060\u3051\uff08Multicast\uff09\nreplay(): subscribe()\u3059\u308b\u305f\u3073\u306b\u4eca\u307e\u3067\u5c4a\u3044\u3066\u3044\u305fitem\u3092\u5168\u90e8\u914d\u4fe1\u3057\u306a\u304a\u3059\uff08\u6700\u65b0\u306en\u4ef6\u3082\u53ef\u80fd\uff09\n\n\u306a\u304a\u3001Hot Observable\u306f\u958b\u59cb\u3055\u308c\u308b\u3068\u305d\u306e\u624b\u524d\u307e\u3067\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4ee3\u8868\u3057\u3066subscribe()\u3057\u3066\u3044\u308b\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n\nObservable\u306b\u81ea\u5206\u3067\u5024\u3092\u6d41\u3059\u306b\u306fSubject\u3092\u4f7f\u7528\u3059\u308b\nObservable.from(List)\u3060\u3068\u6700\u521d\u306b\u6c7a\u3081\u305f\u5024\u3057\u304b\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u5f8c\u304b\u3089\u5024\u3092\u6d41\u3057\u305f\u3044\u5834\u5408\u306fSubject\u3092\u4f7f\u7528\u3057onNext()\u3092\u547c\u3073\u307e\u3059\u3002Subject\u306fObservable\u3067\u3042\u308b\u3068\u540c\u6642\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\uff08Subscriber\uff09\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\nPublishSubject\n\n\nPublishSubject\u306eonNext()\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306bsubscribe()\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u540c\u3058\u5024\u3092\u6e21\u3057\u307e\u3059\n\u901a\u77e5\uff08\u30a4\u30d9\u30f3\u30c8\uff09\u306e\u5b9f\u88c5\u306b\u4fbf\u5229\n\n\nBehaviorSubject\n\n\nsubscribe()\u306e\u969b\u306b\u6700\u5f8c\u306bonNext()\u3055\u308c\u305f\u5024\u3092\u6d41\u3057\u3001\u4ee5\u964donNext()\u3055\u308c\u308b\u305f\u3073\u306b\u5024\u3092\u6d41\u3059\n\u5909\u66f4\u304c\u8d77\u304d\u308b\u5024\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u4fbf\u5229\n\n\n\n\nBackpressure\u3068\u3044\u3046\u6982\u5ff5\n\uff08\u8ffd\u8a18\uff09Backpressure\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f\u5225\u306e\u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u3069\u3046\u305e\u3002\nBackpressure\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u52c9\u5f37\u4e2d\u3067\u3059\u3002ReactiveX\u306eintro\u306b\u3082\u8a18\u8f09\u304c\u3042\u308b\u3088\u3046\u306b\u3001Iterable\u306fpull\uff08next()\u3067\u53d6\u3063\u3066\u304f\u308b\uff09\u3001Observable\u306fpush\uff08onNext()\u3067\u6e21\u3063\u3066\u304f\u308b\uff09\u3067\u3059\u3002push\u306e\u5834\u5408\u3001\u81ea\u5206\u3067pull\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u6bd4\u3079\u3001\u9023\u6253\u3055\u308c\u3066\u51e6\u7406\u304c\u8ffd\u3044\u3064\u304b\u306a\u3044\u6642\u306e\u5236\u5fa1\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u3001\u3042\u3068\u3069\u306e\u304f\u3089\u3044\u306a\u3089onNext()\u304c\u53e9\u304b\u308c\u3066\u3082\u5927\u4e08\u592b\u304b\u3092\u30bd\u30fc\u30b9\u5074\u306e\u65b9\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\nhttps://github.com/ReactiveX/RxJava/wiki/Backpressure\nUI\u30671\u6587\u5b57\u5165\u529b\u3054\u3068\u306b\u51e6\u7406\u547c\u3073\u51fa\u3059\u5834\u5408\u306a\u3069\u306b\u5f79\u7acb\u3061\u305d\u3046\u3067\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u4e00\u5b9a\u6642\u9593\u5185\u306e\u30a4\u30d9\u30f3\u30c8\u6570\u3092\u5236\u5fa1\u3059\u308bOperator\u3092\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n# \u306a\u3093\u3067\u3053\u306e\u8a18\u4e8b\u66f8\u3044\u305f\u306e\u304b\n\n\u4eca\u958b\u767a\u4e2d\u306e\u30d7\u30ed\u30c0\u30af\u30c8\u306b\u304a\u3044\u3066\u3001RxJava\u306e\u5c0e\u5165\u3092\u3084\u3063\u3066\u307f\u305f\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f7f\u3063\u305f\u7b87\u6240\u3068\u305d\u306e\u4f8b\u3001\u8abf\u3079\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3092\u8f09\u305b\u3066\u304a\u304d\u307e\u3057\u305f\u3002\n\u305d\u3046\uff08retrolambda\u306e\u305f\u3081\u306bjdk8\u3092\u6295\u5165\uff09\u307e\u3067\u3057\u3066\u5c0e\u5165\u3057\u305f\u304b\u3063\u305f\u30e1\u30ea\u30c3\u30c8\u3092\u8a71\u3057\u3066\u304f\u308c\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u304c\u306a\u3044\u3068\u308f\u304b\u3089\u3093\u3001\u3068\u3044\u3063\u305f\u58f0\u3092\u9802\u3044\u3066\u3044\u308b\u306e\u3067\u3001\u5b9f\u969b\u306b\u4f55\u304c\u89e3\u6c7a\u3055\u308c\u305f\u306e\u304b\u3001\u3069\u3093\u306a\u30b3\u30fc\u30c9\u3067\u89e3\u6c7a\u3057\u305f\u306e\u304b\u3068\u3044\u3046\u3053\u3068\u3068\u3001\u305d\u306e\u305f\u3081\u306b\u52c9\u5f37\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u304b\u3063\u305f\u70b9\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3044\u307e\u3059\u3002\n\n\uff08\u8ffd\u8a18\uff09\u8b66\u544a\uff1a\u5dee\u5206\u4f5c\u3063\u3066\u30b3\u30fc\u30c9\u4e0a\u3067\u306f\u89e3\u6c7a\u3057\u305f\u3093\u3067\u3059\u304c\u3001\u3053\u306e\u5dee\u5206\u307e\u3060\u300c\u30ea\u30ea\u30fc\u30b9\u300d\u3057\u305f\u308f\u3051\u3058\u3083\u306a\u3044\u306e\u3067\u3001\u305d\u306e\u70b9\u3060\u3051\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\uff4d\uff4d \u7d9a\u5831\u3042\u308a\u6b21\u7b2c\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\u8ffd\u8a18\uff1a\u30ea\u30ea\u30fc\u30b9\u3057\u3066\u5b89\u5b9a\u904b\u7528\u3057\u3066\u3044\u307e\u3059\uff01\u6700\u8fd1\u307e\u3067\u76e3\u8996\u306b\u96e3\u304c\u3042\u308a\u307e\u3057\u305f\u304c\u305d\u308c\u3082\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\u3053\u306e\u8a18\u4e8b\u306e\u76e3\u8996\u30b9\u30cb\u30da\u30c3\u30c8\u3082\u66f4\u65b0\u6e08\u307f\u3067\u3059\uff01\n\n# \u306a\u305cRxJava\u3092\u5c0e\u5165\u3057\u305f\u306e\u304b\n\n\u6b21\u306e\u8ab2\u984c\u3092\u307e\u3068\u3081\u3066\u89e3\u6c7a\u3067\u304d\u308b\u306e\u304cRxJava\u3060\u3068\u601d\u3044\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u306e\u52e2\u3044\u3082\u76f8\u307e\u3063\u3066\u5c0e\u5165\uff08\u52e2\u3044\u3067\u3059\u307f\u307e\u305b\u3093\u30fb\u30fb\u30fb\uff09\u3002\n\n- \u30c1\u30fc\u30e0\u5185\u3067Android\u306e\u975e\u540c\u671f\u51e6\u7406\u3084\u305d\u306e\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3092\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3068\u3044\u3046\u8a71\u304c\u305a\u3063\u3068\u524d\u304b\u3089\u51fa\u3066\u3044\u305f\n- \u30ea\u30b9\u30c8\u64cd\u4f5c\u3084lambda\u3067\u66f8\u3044\u305f\u307b\u3046\u304c\u53ef\u8aad\u6027\u306e\u9ad8\u3044\u7b87\u6240\u304c\u898b\u53d7\u3051\u3089\u308c\u3066\u3044\u305f\n- \u30ea\u30d5\u30a1\u30af\u30bf\u3067\u3001\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c\u5909\u66f4\u3055\u308c\u305f\u6642\u306e\u8868\u793a\u306e\u66f4\u65b0\u3092\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u3063\u3066\u5b9f\u73fe\u3057\u3088\u3046\u3068\u3044\u3046\u65b9\u91dd\u306b\u6c7a\u307e\u3063\u305f\n\nCookpad\u3067\u306f\u6700\u521d\u306f\u30ea\u30b9\u30c8\u64cd\u4f5c\u304b\u3089\u5c0e\u5165\u3057\u305f\u3068\u306e\u3053\u3068\u3067\u3059\uff1a[Android\u958b\u767a\u3067RxJava\u3092\u30c1\u30fc\u30e0\u306b\u5c0e\u5165\u3057\u305f\u8a71](http://techlife.cookpad.com/entry/2015/04/17/100000)\u3002\n\n\u304c\u3001\u5f53\u521d\u30ea\u30b9\u30c8\u64cd\u4f5c\u3084Loader\u5b8c\u4e86\u5f8c\u306e\u72b6\u614b\u5909\u66f4\u306e\u914d\u4fe1\u3060\u3051\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u306b\u3057\u3066\u3044\u307e\u3057\u305f\u304c\u3001 @ainame \u306b\u3053\u306e\u30b3\u30fc\u30c9\u3060\u3068\u30e1\u30ea\u30c3\u30c8\u304c\u826f\u304f\u308f\u304b\u3089\u306a\u3044\u3068\u717d\u3089\u308c\u305f\uff57\u306e\u3082\u3042\u308a\u3001Loader\u3068EventBus\u3067\u5b9f\u88c5\u3055\u308c\u3066\u3044\u305f\u7b87\u6240\u3092RxJava\u306b\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n# RxJava\u306e\u30ad\u30db\u30f3\n\nReactive Programming\u306e\u6982\u5ff5\u306b\u3064\u3044\u3066\u306f\u53c2\u8003\u8a18\u4e8b\u3092\u66f8\u304f\u306b\u3068\u3069\u3081\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u5b9f\u969b\u306e\u4f7f\u7528\u4f8b\u306b\u3064\u3044\u3066\u6271\u3044\u307e\u3059\u3002\n\n- \u6982\u5ff5\u3084\u53d6\u3063\u4ed8\u304d\u65b9\u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30b9\u30e9\u30a4\u30c9\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u3067\u3059\uff1a[RxJava\u5b66\u7fd2\u306e\u30d8\u3099\u30b9\u30c8\u30d5\u309a\u30e9\u30af\u30c6\u30a3\u30b9\u3063\u307b\u309a\u3044\u3082\u306e](https://speakerdeck.com/sys1yagi/rxjavaxue-xi-falsehesutohurakuteisutuhoimofalse)\uff08\u30b9\u30e9\u30a4\u30c9\uff09\n- [\u3010\u7ffb\u8a33\u3011\u3042\u306a\u305f\u304c\u6c42\u3081\u3066\u3044\u305f\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u5165\u9580](http://ninjinkun.hatenablog.com/entry/introrxja)\n- [ReactiveX\u306eintro](http://reactivex.io/intro.html)\n\n\u203b\u81ea\u5206\u306fHaskell\u3084\u8ad6\u6587\u306b\u89e6\u308c\u305f\u3053\u3068\u304c\u306a\u3044\u305f\u3081[**Functional** Reactive Programming](https://wiki.haskell.org/Functional_Reactive_Programming)\u306b\u3064\u3044\u3066\u306f\u7406\u89e3\u304c\u306a\u3044\u3053\u3068\u3092\u3054\u5bb9\u8d66\u304f\u3060\u3055\u3044\u3002\n\n\u5171\u901a\u3059\u308b\u4f7f\u3044\u65b9\u3060\u3051\u4e0b\u8a18\u306b\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u306f\u7d9a\u304d\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n![filter.png](https://qiita-image-store.s3.amazonaws.com/0/4153/cebf19da-1ef7-0127-d2c6-392037dfe02e.png)\n\n- [Observable](http://reactivex.io/documentation/observable.html)\u304b\u3089\u306fitem\u304c\u540c\u671f\u7684or\u975e\u540c\u671f\u306b\u6d41\u308c\u3066\u304f\u308b\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\uff09\n- Observable.from(List)\u3092\u4f7f\u3046\u3068\u3001List\u306e\u4e2d\u8eab\u304c1\u3064\u305a\u3064\u6d41\u308c\u3066\u304f\u308bObservable\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n- map()\u3084filter()\u3092\u59cb\u3081\u3068\u3059\u308b[Operator](http://reactivex.io/documentation/operators.html)\u3092\u4f7f\u3046\u3068\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u6d41\u308c\u3066\u304f\u308bitem\u3092\u52a0\u5de5\u3067\u304d\u308b\n- \u539f\u5247subscribe()\u3067\u51e6\u7406\u3092\u958b\u59cb\uff08\u307e\u305f\u306fobserve\u958b\u59cb\uff09\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u9806\u6b21item\u304c\u6d41\u308c\u3066\u304f\u308b\n- item\u306e\u5230\u7740\u3092\u77e5\u3089\u305b\u308bonNext()\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u7d42\u4e86\u3092\u4f1d\u3048\u308bonComplete()\u3001\u30a8\u30e9\u30fc\u767a\u751f\u306b\u3088\u308b\u7d42\u4e86\u3092\u4f1d\u3048\u308bonError()\u304c\u3042\u308b\n- \u540c\u671f\u7684\u306b\u7d50\u679c\u3092\u5f97\u305f\u3044\u5834\u5408\u306f\u3001toBlocking()\u3092\u4f7f\u7528\u3059\u308b\n- observeOn()\u306b[Scheduler](http://reactivex.io/documentation/scheduler.html)\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001subscribe()\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u6307\u5b9a\u3057\u305f\u30b9\u30ec\u30c3\u30c9\uff08\u30e1\u30a4\u30f3\u30b9\u30ec\u30c3\u30c9\u306a\u3069\uff09\u3067\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u308b\n- \u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u305f\u3044\u5834\u5408\u306funsubscribe()\u3059\u308b\uff08\u3068\u3001\u9069\u5207\u306b\u5b9f\u88c5\u3055\u308c\u305fObservable\u3067\u306fActivity/Fragment\u304c\u30ea\u30fc\u30af\u3057\u306a\u3044\uff09\n\n\u30e1\u30a4\u30f3\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f[RxJava\u306erepo\u306eWiki](https://github.com/ReactiveX/RxJava/wiki)\u3092\u898b\u308b\u306e\u304c\u826f\u3055\u3052\u3067\u3057\u305f\u3002\n\n\u6319\u52d5\u306e\u78ba\u8a8d\u306f[rxmarbles.com](http://rxmarbles.com/)\u304c\u591a\u5206\u4e00\u756a\u4fbf\u5229\u3067\u3059\u3002\u305f\u3060\u3057RxJS\u3067\u66f8\u304b\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u540d\u524d\u304c\u9055\u3046\u30e1\u30bd\u30c3\u30c9\u3068\u304b\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n# \u73fe\u72b6\u306e\u8ab2\u984c\u306eRxJava\u306b\u3088\u308b\u89e3\u6c7a\u7b56\n\n\uff08\u3068\u3053\u308d\u3069\u3053\u308d`arg -> process()`\u3068\u304b`Hoge::method`\u3068\u304b\u51fa\u3066\u304d\u307e\u3059\u304c\u3001Java 8\u3067\u4f7f\u3048\u308blambda\u8868\u73fe\u306a\u306e\u3067\u3001[retrolambda](https://github.com/orfjackal/retrolambda)\u3092\u6301\u3061\u8fbc\u307e\u306a\u3044\u4eba\u306f\u9069\u5207\u306a\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092new\u3067\u4f5c\u3063\u3066\u304f\u3060\u3055\u3044\uff09\n\n## \u30ea\u30b9\u30c8\u64cd\u4f5c\u304c\u3044\u307e\u3060\uff1f\u306bfor\u6587\u554f\u984c\n\n**\u8ffd\u8a18: RxJava\u306f\u305f\u3060\u5358\u306b\u30eb\u30fc\u30d7\u3057\u3066\u3044\u308b\u308f\u3051\u3058\u3083\u306a\u3044\u70ba\u3001zip()\u306a\u3069\u4e00\u90e8\u306e\u51e6\u7406\u304c\u4f4e\u901f\u306a\u3088\u3046\u3067\u3059\u3002\n\u30ea\u30b9\u30c8\u64cd\u4f5c\u3092\u4fbf\u5229\u306b\u3057\u305f\u3044\u3068\u3044\u3046\u76ee\u7684\u306b\u306fJava 8\u306eStream API\u306a\u3069\u306e\uff08\u5c0f\u3055\u306a\uff1f\uff09\u30d0\u30c3\u30af\u30dd\u30fc\u30c8\u3067\u3042\u308b[Lightweight-Stream-API](https://github.com/aNNiMON/Lightweight-Stream-API)\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\u3002\u30e1\u30bd\u30c3\u30c9\u6570\u306f350\u7a0b\u5ea6\u3067\u3059\u3002**\n\nJava 8\u304b\u3089lambda\u3068stream API\u3092\u4f7f\u3063\u3066map\u3084filter\u306e\u3088\u3046\u306a\u3001Ruby\u3001Python\u3001underscore.js/EcmaScript5\u3067\u304a\u306a\u3058\u307f\u306e\u3001for\u30eb\u30fc\u30d7\u3092\u4f7f\u308f\u306a\u3044\u30ea\u30b9\u30c8\u64cd\u4f5c\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```java\n// Java 7\nList<String> otherUserNames = new ArrayList<>(users.size);\nfor (User user : users) {\n    if (user.id != selfUser.id) {\n        otherUserNames.add(user.getName());\n    }\n}\n```\n\n\u3053\u308c\u304cJava 8\u3067\u306f\n\n```java\n// Java 8\nList<String> otherUserNames = users.stream()\n    .filter(user -> user.id != selfUser.id)\n    .map(User::getName) // user -> user.getName() \u306e\u77ed\u7e2e\u5f62\u3001method references\u3068\u3044\u3044\u307e\u3059\n    .collect(Collectors.toList());\n```\n\nnew\u3068\u304badd\u3068\u304b\u306e\u624b\u7d9a\u304d\u7684\u306a\u8a18\u8ff0\u304c\u6d88\u3048\u3066\u3001\u30ea\u30b9\u30c8\u306b\u5bfe\u3059\u308b\u52a0\u5de5\u3060\u3051\u304c\u30b3\u30fc\u30c9\u306b\u73fe\u308c\u308b\u306e\u3067\u8aad\u307f\u3084\u3059\u3044\uff01\n\u3057\u304b\u3057Android\u3067\u306fJava 8\u304c\u4f7f\u3048\u308b\u306e\u306f\u305a\u3063\u3068\u5148\u306b\u306a\u308a\u305d\u3046\u306a\u611f\u3058\u3067\u3059\u30fb\u30fb\u3002\n\n### \u305d\u308c\u3001RxJava\u3067\u89e3\u6c7a\u3067\u304d\u308b\u3088\n\n```java\n// RxJava\nList<String> otherUserNames = Observable.from(users)\n    .filter(user -> user.id != selfUser.id)\n    .map(User::getName)\n    .toList().toBlocking().single(); // \u5168\u90e8List\u306b\u307e\u3068\u3081\u3001\u540c\u671f\u51e6\u7406\u3059\u308b\u3088\u3046\u6307\u5b9a\u3057\u30011\u3064\u3057\u304b\u306a\u3044\u7d50\u679c(List)\u3092\u53d6\u308a\u51fa\u3059\n```\n\n\u975e\u540c\u671f\u51e6\u7406\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u540c\u671f\u51e6\u7406\u306b\u5909\u3048\u308b\u305f\u3081\u306etoBlocking()\u306e\u547c\u3073\u51fa\u3057\u304c\u5fc5\u8981\u3067\u3061\u3087\u3063\u3068\u7656\u304c\u3042\u308a\u307e\u3059\u304c\u3001\u305d\u3053\u3055\u3048\u30af\u30ea\u30a2\u3059\u308c\u3070\u5341\u5206\u5b9f\u7528\u7684\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306f\u3053\u306e\u8a18\u4e8b\u306b\u3044\u304f\u3064\u304b\u8f09\u3063\u3066\u3044\u307e\u3059\uff1a[Java 8: No more loops\u3092RxJava\u3067\u3084\u308b(Android\u306e\u74b0\u5883\u3067)](http://sys1yagi.hatenablog.com/entry/2015/01/14/141710)\n\n## \u975e\u540c\u671f\uff08\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\uff09\u51e6\u7406\u304c\u9762\u5012\u304f\u3055\u3044\u554f\u984c\n\nAndroid\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\uff08View\u306b\u7d50\u679c\u3092\u53cd\u6620\u3059\u308b\u3088\u3046\u306a\uff09\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u969b\u306b\u4f7f\u3046\u30d1\u30bf\u30fc\u30f3\u306f\u4e3b\u306b\u4e0b\u8a18\u306e3\u3064\u3067\u3059\u3002\u3057\u304b\u3057\u306a\u304c\u3089\u3001\u305d\u308c\u305e\u308c\u554f\u984c\u70b9\u304c\u3042\u308a\u307e\u3059\u3002\n\n- [AsyncTask](http://developer.android.com/reference/android/os/AsyncTask.html)\n    - \u5b9f\u884c\u4e2d\u306bActivity/Fragment\u304cdestroy\u3055\u308c\u308b\u3068\u3001\u7279\u5225\u306a\u8003\u616e\u3092\u3057\u306a\u3044\u9650\u308a\u53c2\u7167\u304c\u30ea\u30fc\u30af\u3057\u305f\u308a\u30af\u30e9\u30c3\u30b7\u30e5\u3059\u308b\n    - \u7279\u306bcancel\u6642\u306e\u6271\u3044\u304c\u96e3\u3057\u3044\n    - \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u9762\u5012\n- [AsyncTaskLoader](http://developer.android.com/reference/android/content/AsyncTaskLoader.html)\n    - \u6b63\u3057\u304f\u5b9f\u88c5\u3059\u308b\u305f\u3081\u306eboilerplate\uff08\u30b3\u30d4\u30da\uff09\u304c\u975e\u5e38\u306b\u96e3\u3057\u3044\uff08\u4ee5\u524d\u30b3\u30fc\u30c9\u8aad\u3093\u3060\u3068\u304d\u306f\u30ea\u30f3\u30af\u5148\u306e\u516c\u5f0f\u30b5\u30f3\u30d7\u30eb\u3082\u9593\u9055\u3063\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u305f\uff09\n    - destroy\u3084\u753b\u9762\u56de\u8ee2\u306e\u3068\u304d\u3001Activity/Fragment\u304c\u975e\u30a2\u30af\u30c6\u30a3\u30d6\u306a\u3068\u304d\u306a\u3069\u3001\u6761\u4ef6\u3054\u3068\u306e\u6319\u52d5\u304c\u3042\u308a\u8907\u96d1\n    - Activity/Fragment\u3067\u3057\u304b\u4f7f\u7528\u3067\u304d\u306a\u3044\n    - \u30d1\u30e9\u30e1\u30fc\u30bf\u304cbundle\u3067\u3057\u304b\u6e21\u305b\u305a\uff08\u610f\u56f3\u306f\u308f\u304b\u308b\u304c\uff09\u7d20\u76f4\u3058\u3083\u306a\u3044\n    - \u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u304c\u9762\u5012\n- [IntentService](http://techbooster.jpn.org/andriod/application/1570/)\n    - \u7d50\u679c\u3092\u8fd4\u5374\u3059\u308b\u65b9\u6cd5\u304c\u30a4\u30d9\u30f3\u30c8\uff08EventBus\u3084LocalBroadcast\uff09\u306b\u9650\u3089\u308c\u308b\n    - \u4f5c\u308b\u3054\u3068\u306bAndroidManifest\u3078\u306e\u8ffd\u52a0\u304c\u5fc5\u8981\n\n\n### \u305d\u308c\u3001RxJava\u3067\u89e3\u6c7a\u3067\u304d\u308b\u3088\n\n\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u3001[Promise\u3092\u5c0e\u5165\u3059\u308b](http://qiita.com/KeithYokoma/items/4e6e9bd4e44aab63424d\n)\u624b\u6bb5\u304c\u3042\u308a\u307e\u3059\u3002\nRxJava\u306eObservable\u306fPromise\u306e\u3088\u3046\u306b\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\nobservable\n    .observeOn(AndroidSchedulers.mainThread())\n    .subscribe(result -> render(result));\n```\n\n\u4f8b\u3048\u3070\u3001REST client\u30e9\u30a4\u30d6\u30e9\u30ea\u306eretrofit\u306fRxJava\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u3066\u3001Observable\u3092\u8fd4\u5374\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\npublic interface Client {\n    @GET(\"/users\")\n    List<User> getUsers();\n\n    @GET(\"/users\")\n    Observable<List<User>> users(); // retrofit\u306e\u5834\u5408\u3001\u6700\u521d\u304b\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30a6\u30f3\u30c9\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u3055\u308c\u307e\u3059\n}\n```\n\n\u3053\u308c\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u4f8b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\npublic class UserListFragment extends Fragment {\n    private Subscription mSubscription;\n    private Client mClient;\n    ...\n\n    public void onStart() {\n        super.onStart();\n        mSubscription = mClient.users()\n            .observeOn(AndroidSchedulers.mainThread()) // \u7d50\u679c\u306e\u901a\u77e5\u306fUI\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3059\n            .subscribe(                                // subscribe\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u51e6\u7406\u304c\u958b\u59cb\u3055\u308c\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u7d50\u679c\u304c\u901a\u77e5\u3055\u308c\u307e\u3059\n                this::render,                          // \u7d50\u679c\u3092render\u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3057\u307e\u3059\n                error -> showErrorAlert(error),        // \u30a8\u30e9\u30fc\u767a\u751f\u306b\u3088\u308b\u7d42\u4e86\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059\uff08optional\uff09\n                () -> showCompletedAlert());           // \u6b63\u5e38\u7d42\u4e86\u6642\u306e\u51e6\u7406\u3092\u6307\u5b9a\u3057\u307e\u3059 (optional)\n    }\n    // \u203bmainThread()\u306fRxAndroid\u306e\u5b9f\u88c5\u3092\u53c2\u7167\u306e\u3053\u3068\u3002\n\n    public void onStop() {\n        // view\u304c\u306a\u304f\u306a\u308b\u524d\u306b\u306f\u51e6\u7406\u304c\u7d42\u308f\u3063\u3066\u306a\u304f\u3066\u3082unsubscribe()\u3057\u3066\u30ad\u30e3\u30f3\u30bb\u30eb\u3057\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3078\u306e\u53c2\u7167\u3092\u7834\u68c4\u3057\u307e\u3059\n        // \uff08Observable\u304c\u6b63\u3057\u304f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308c\u3070\uff09\u53c2\u7167\u304c\u7834\u68c4\u3055\u308c\u308c\u3070Activity/Fragment\u306f\u30ea\u30fc\u30af\u3057\u307e\u305b\u3093\n        // \u3069\u306e\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u3067subscribe/unsubscribe\u3059\u308b\u304b\u306f\u307e\u3060\u30d9\u30b9\u30c8\u30d7\u30e9\u30af\u30c6\u30a3\u30b9\u304c\u5b9a\u307e\u3063\u3066\u306a\u3044\u3067\u3059\n        mSubscription.unsubscribe();\n        super.onStop();\n    }\n\n    private void render(List<User> userList) {\n        ...\n    }\n\n    ...\n}\n```\n\n\u3053\u306e\u3088\u3046\u306bAsyncTask\u3084AsyncTaskLoader\u3001IntentService\u3092\u65b0\u305f\u306b\u8a2d\u7f6e\u3057\u306a\u304f\u3066\u3082\u3001\u30ea\u30fc\u30af\u3057\u306a\u3044\u3057\u30b7\u30f3\u30d7\u30eb\u306a\u30b3\u30fc\u30c9\u3067\u66f8\u3051\u307e\u3059\u30fb\u30fb\uff01\n\u4eca\u56de\u306f\u753b\u9762\u56de\u8ee2\u6642\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306a\u3069\u306f\u3057\u306a\u3044\u5272\u308a\u5207\u3063\u305f\u5b9f\u88c5\u3067\u3059\u304c\u3001\u3067\u304d\u308c\u3070\u305d\u306e\u8fba\u308a\u306b\u3082try\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u203bPromise\u3068Observable\u306e\u5927\u304d\u306a\u9055\u3044\u306f\u3001\u8907\u6570\u306e\u5024\u3092\u8fd4\u5374\u3067\u304d\u308b\u70b9\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u4eca\u56de\u81ea\u5206\u3067\u4f5c\u3063\u305f\u5b9f\u88c5\u3067\u306fAndroidSchedulers.mainThread()\u306fRxAndroid\u306e\u3082\u306e\u3092\u5229\u7528\u305b\u305a\u3001\u53c2\u8003\u306b\u5b9f\u88c5\u3057\u306a\u304a\u3057\u305f\u3082\u306e\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002RxAndroid\u3092\u4f7f\u308f\u306a\u304b\u3063\u305f\u7406\u7531\u306f\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n## \u5909\u66f4\u901a\u77e5\u306e\u6d41\u308c\u304c\u8ffd\u3044\u306b\u304f\u304f\u306a\u3063\u305f\u554f\u984c\n\n\u8868\u793a\u306e\u305f\u3073\u306bFragment\u304b\u3089Model\u3092\u547c\u3073\u51fa\u3057\u3066\u3044\u308b\u3088\u3046\u306a\u5834\u6240\u306b\u3001\u5909\u66f4\u901a\u77e5\u30a4\u30d9\u30f3\u30c8\u306b\u3088\u308b\u8868\u793a\u306e\u66f4\u65b0\u3092\u52a0\u3048\u308b\u3068\u3001\u547c\u3073\u51fa\u3057\u306e\u6d41\u308c\u304c\u3084\u3084\u8907\u96d1\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u307e\u305f\u3001EventBus\u306a\u3069\u3092\u4ecb\u3059\u308b\u3068\u3001\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u3069\u3053\u304b\u3089\u98db\u3093\u3067\u304f\u308b\u306e\u304b\u304c\u4e00\u76ee\u3067\u306f\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u8ab2\u984c\u3082\u3042\u308a\u307e\u3059\u3002\n\n```\n                                    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                    | Model2 | \u2500\u2500( save )\u2500\u2500\u2500\u2510\n                                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n| View |\u2190\u2500(render)\u2500\u2500| Activity/Fragment |              | Model |              | DB/API |\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                        \u2191           \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510           \u2502\n                        \u2514\u2500(event)\u2500\u2500 | Event Bus | \u2190\u2500(post)\u2500\u2500\u2518\n                                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n```\n\n\u3053\u308c\u3092Observer\u30d1\u30bf\u30fc\u30f3\u306b\u3059\u308c\u3070\u3001\u5909\u66f4\u5185\u5bb9\u304c\u901a\u77e5\u3055\u308c\u308b\u3054\u3068\u306brender\u3059\u308b\u3060\u3051\u3067\u826f\u304f\u306a\u308a\u3001\u307e\u305fsubscribe\u3059\u308b\u3068\u304d\u306bModel\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u306e\u3067\u53ef\u8aad\u6027\u304c\u9ad8\u307e\u308a\u307e\u3059\u3002\n\n```\n                                   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n                                   | Model2 | \u2500\u2500( save )\u2500\u2500\u2500\u2510\n                                   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2193\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510            \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510              \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2500\u2500( call )\u2500\u2192 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n| View |\u2190\u2500(render)\u2500\u2500| Activity/Fragment | \u2190\u2500(update)\u2500\u2500 | Model |              | DB/API |\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518            \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518              \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2190\u2500(return)\u2500\u2500 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n                            \u2502                              \u2191\n                            \u2514 \u2500 \u2500 \u2500 (subscribe once) \u2500 \u2500 \u2500 \u2518\n```\n\n### \u305d\u308c\u3001RxJava\u3067\uff08\uff52\uff59\n\n**\u8ffd\u8a18\uff1a\u5143\u306e\u5b9f\u88c5\u3060\u3068\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u306f\u6700\u65b0\u306e\u72b6\u614b\u3092\u53d7\u3051\u53d6\u308c\u306a\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3068\u3001onBackpressureLatest()\u304c\u52b9\u679c\u304c\u306a\u3044\u72b6\u614b\u3060\u3063\u305f\u306e\u3067\u3001replay(1)\u3092\u4f7f\u3063\u3066\u66f8\u304d\u76f4\u3057\u307e\u3057\u305f\u3002**\n\nObservable\u306fonComplete()\u3084onError()\u3092\u547c\u3073\u3060\u3055\u306a\u3051\u308c\u3070\u3001\u3044\u3064\u4f55\u5ea6\u3067\u3082\u30c7\u30fc\u30bf\u3092\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```java\npublic class UserModel {\n    ...\n\n    // \u901a\u77e5\u304c\u6765\u308b\u305f\u3073\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u8d70\u3089\u305b\u308bObservable\u3092\u4f5c\u308a\u307e\u3059\n    private PublishSubject<Void> mUpdateNotificationPublisher = PublishSubject.create()\n    private Observable<List<User>> mUserUpdateObservable = mUpdateNotificationPublisher\n            .onBackpressureLatest()               // \u5f8c\u7d9a\u304c\u300c\u51e6\u7406\u3067\u304d\u307e\u3059\u3088\u300d\u3068\u8a00\u3063\u3066\u3044\u308b\u6570\u3088\u308a\u3082\u305f\u304f\u3055\u3093\u304d\u305f\u3089\u3001\n                                                  // \u6700\u65b0\u306e1\u3064\u3060\u3051\u3092\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u6b8b\u308a\u3092\u6368\u3066\u308b\u3002\n            .flatMap(aVoid -> mClient.users(), 1) // \u5024\u304c\u98db\u3093\u3067\u304d\u305f\u3089\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6295\u3052\u308bObservable\u3092\u8fd4\u3059\u3002\n                                                  // flatMap\u306f\u8fd4\u3055\u308c\u305fObservable\u3092subscribe()\u3057\u3066\u5f8c\u7d9a\u306b\u3064\u306a\u3050\u3002\n                                                  // maxConcurrent\u306b1\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u540c\u6642\u306b1\u30ea\u30af\u30a8\u30b9\u30c8\u3060\u3051\u8d70\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n            .replay(1).refCount()                 // \u8907\u6570\u56desubscribe\u3055\u308c\u3066\u30821\u3064\u306e\u7d50\u679c\u3092\u5168\u54e1\u306b\u914d\u5e03\u3059\u308b\u3002\n                                                  // replay(1)\u306fsubscribe()\u3055\u308c\u305f\u6642\u306b\u6700\u65b0\u306e1\u3064\u306eonNext()\u3092\u6e21\u3059\u3002\n                                                  // refCount()\u306f\u8ab0\u304b1\u4eba\u3067\u3082subscribe()\u3057\u3066\u308b\u6642\u306b\u4e0a\u6d41\u306e\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u3002\n                                                  // \u203bpublish()\u307e\u305f\u306freplay()\u3057\u306a\u3044\u3068subscribe()\u3057\u305f\n                                                  //  \u56de\u6570\u5206\u3060\u3051\uff08\u7121\u99c4\u306b\uff09\u4e26\u5217\u306b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u8d70\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n                                                  //  \u8907\u6570\u56de\u8d70\u308b\u7406\u7531\u306fHot/Cold Observable\u306e\u6982\u5ff5\u3067\u5f8c\u8ff0\u3057\u307e\u3059\u3002\n\n    private void notifyUpdate() {\n        mUpdateNotificationPublisher.onNext(null);\n    }\n\n    public Observable<List<User>> observeUsers() {\n        return mUserUpdateObservable;             // \u4f55\u56de\u53e9\u304b\u308c\u3066\u3082\u540c\u3058Hot Observable\u3092subscribe()\u3059\u308b\n    }\n}\n```\n\n```java\npublic class UserListFragment extends Fragment {\n    private Subscription mSubscription;\n    private UserModel mUserModel;\n    ...\n\n    public void onStart() {\n        super.onStart();\n        mSubscription = mUserModel.observeUsers()\n            .observeOn(AndroidSchedulers.mainThread()) // \u7d50\u679c\u306e\u901a\u77e5\u306fUI\u30b9\u30ec\u30c3\u30c9\u3067\u884c\u3044\u307e\u3059\n            .subscribe(this::render)                   // subscribe\u3067\u76e3\u8996\u3068\u521d\u56de\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u958b\u59cb\u3055\u308c\u3001\u5909\u66f4\u304c\u3042\u308b\u305f\u3073\u306brender\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\n    }\n\n    public void onStop() {\n        mSubscription.unsubscribe();\n        super.onStop();\n    }\n\n    private void render(List<User> userList) {\n        ...\n    }\n\n    ...\n}\n```\n\nFragment\u5074\u306b\u4e00\u5207\u8907\u96d1\u306a\u51e6\u7406\u3092\u66f8\u304f\u3053\u3068\u306a\u304f\u3001\u30ea\u30a2\u30af\u30c6\u30a3\u30d6\u611f\u306b\u3042\u3075\u308c\u308b\u3001\u5909\u66f4\u304c\u52dd\u624b\u306b\u53cd\u6620\u3055\u308c\u308b\u5b9f\u88c5\u304c\u66f8\u3051\u307e\u3057\u305f\u30fb\u30fb\uff01\n\n\u203b\u8ab0\u304b\u3089\u3067\u3082post\u3067\u304d\u308b\u3088\u3046\u306a\u30a4\u30d9\u30f3\u30c8\u306fEventBus\u3092\u3001\u7279\u5b9a\u306e\u76f8\u624b\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u898b\u305f\u3044\u5834\u5408\u306fObservable\u3092\u3001\u3068\u3044\u3063\u305f\u4f7f\u3044\u5206\u3051\u304c\uff08\u3069\u3053\u304b\u3067\uff09\u63d0\u6848\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\n\n# \u5c0e\u5165\u3057\u305f\u304f\u306a\u3063\u305f\u3089\n\n- [RxJava](https://github.com/ReactiveX/RxJava/releases): \u672c\u4f53\n  - build.gradle\u306b `compile 'io.reactivex:rxjava:x.xx.xx'` \u6700\u65b0\u7248\u306f\u4e0a\u306e\u30ea\u30f3\u30af\u3067\u78ba\u8a8d\u306e\u3053\u3068\n- [retrolambda](https://github.com/evant/gradle-retrolambda): lambda\n  - Android\u3067\u3082lambda\u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\n- [RxJavaDebug](https://github.com/ReactiveX/RxJavaDebug): \u30c7\u30d0\u30c3\u30b0\u7528\n  - \u7d50\u5c40\u4f7f\u3063\u3066\u306a\u3044\u3067\u3059\n\n# \u305d\u308c\u306a\u308a\u306b\u8abf\u3079\u306a\u3044\u3068\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\n\n\u307e\u305a\u306f\u5b9f\u88c5\u4f8b\u3092\u8f09\u305b\u3066\u307f\u305f\u306e\u3067\u3059\u304c\u3001\u30ea\u30b9\u30c8\u64cd\u4f5c\u4ee5\u964d\u306f\u7406\u89e3\u3057\u3066\u304a\u304f\u3079\u304d\u4e8b\u67c4\u304c\u5897\u52a0\u3057\u307e\u3059\u3002\n\n- \u30ea\u30b9\u30c8\u64cd\u4f5c\uff1a\u30b9\u30c8\u30ea\u30fc\u30e0\u51e6\u7406\u3001Operator\u3001toBlocking()\n- \u975e\u540c\u671f\u51e6\u7406\uff1a\u2191\uff0bsubscribe()\u3001unsubscribe()\u3001Scheduler\u3001\uff08\u5fc5\u8981\u306b\u5fdc\u3058\u3066\uff09Observable\u306e\u81ea\u4f5c\u65b9\u6cd5\n- \u5909\u66f4\u901a\u77e5\uff1a\u3000\u2191\uff0bSubject\uff0b\u3067\u304d\u308c\u3070Backpressure\n\n\u3053\u308c\u4ee5\u964d\u306f\u6b63\u76f4\u6700\u521d\u3063\u304b\u3089\u7406\u89e3\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3057\u3093\u3069\u3044\u9818\u57df\u304b\u3068\u601d\u308f\u308c\u308b\u306e\u3067\u3001\u3053\u308c\u3089\u306e\u6271\u3044\u304c\u7c21\u5358\u306a\u30ea\u30b9\u30c8\u64cd\u4f5c\u304b\u3089\u59cb\u3081\u305f\u307b\u3046\u304c\u3088\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u975e\u540c\u671f\u51e6\u7406\u3084\u3063\u3066\u307f\u308b\u305c\u30fb\u30fb\uff01\u3068\u601d\u3063\u305f\u3089\u3001\u4e0b\u8a18\u3092\u9806\u756a\u306b\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n## unsubscribe()\u3092\u3059\u308b\u306e\u304c\u9762\u5012~~\u3001\u304b\u3064\u305d\u308c\u3092\u4f55\u3068\u304b\u3059\u308bRxAndroid\u306f\u4eca\u4f7f\u3048\u306a\u3044~~\n\n**\u8ffd\u8a18\uff1asubscribe/unsbuscribe\u30e9\u30a4\u30d5\u30b5\u30a4\u30af\u30eb\u306b\u95a2\u3057\u3066\u306f\u5225\u306eQiita\u8a18\u4e8b\uff08[\u8a73\u89e3RxJava](http://qiita.com/yuya_presto/items/c8c3d77ac958c9c8f67b)\uff09\u306b\u4eca\u306e\u898b\u89e3\u3092\u66f8\u304d\u307e\u3057\u305f**\n\u8ffd\u8a18\uff1a[RxLifecycle](https://github.com/trello/RxLifecycle)\u304c\u5143\u306eRxAndroid\u306eunsubscribe\u5468\u308a\u306b\u8fd1\u3044\u3067\u3059\u304c\u3001\u4e0a\u8a18\u306e\u8a18\u4e8b\u306e\u3088\u3046\u306bonStart()\u3060\u3051\u3067\u5341\u5206\u3060\u306a\u3041\u3068\u601d\u3063\u305f\u306e\u3067\u4f7f\u3063\u3066\u3044\u307e\u305b\u3093\u3002\n\nsubscribe()\u3067\u8fd4\u5374\u3055\u308c\u308bSubscription\u3092unsubscribe()\u3057\u306a\u3044\u3068\u3001AsyncTask\u306e\u3088\u3046\u306b\u30bf\u30b9\u30af\u5b8c\u4e86\u307e\u3067Activity/Fragment\u304c\u30ea\u30fc\u30af\u3057\u3066\u3057\u307e\u3044\u307e\u3059\uff08\u4e00\u5fdconComplete()\u3082\u3057\u304f\u306fonError()\u306e\u969b\u306b\u81ea\u52d5\u3067unsubscribe()\u3055\u308c\u307e\u3059\uff09\u3002\u672c\u6765\u3067\u306f[RxAndroid](https://github.com/ReactiveX/RxAndroid)\u3067\u5bfe\u5fdc\u3067\u304d\u305d\u3046\u306a\u3093\u3067\u3059\u304c\u3001[\u5927\u304d\u304f\u306a\u308a\u3059\u304e\u3066\u308b\u304b\u3089\u5206\u5272\u3059\u308b\u305e by Jake\u6c0f](https://github.com/ReactiveX/RxAndroid/issues/172)\u3068\u306a\u3063\u3066\u3044\u308b\u901a\u308a\u3001\u4eca\u3042\u307e\u308a\u4f7f\u3048\u306a\u3044\u611f\u3058\u3067\u3059\u3002\n\u5b66\u7fd2\u30b3\u30b9\u30c8\u3092\u6291\u3048\u308b\u305f\u3081\u3082\u304b\u306d\u3066\u3001onCreate()\u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u3067subscribe\u3068unsubscribe\u3092\u81ea\u5206\u3067\u53e9\u304f\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u81ea\u524d\u3067\u306eSubscription\u7ba1\u7406\u3092\u7c21\u5358\u306b\u3059\u308b\u306b\u306f\u3001CompositeSubscription\u306badd()\u3057\u3066\u3001\u3042\u3068\u3067\u8907\u6570\u307e\u3068\u3081\u3066unsubscribe()\u3057\u307e\u3059\u3002\n\n```java\npublic class UserListFragment extends Fragment {\n    private CompositeSubscription mCompositeSubscription;\n    private Client mClient;\n\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        mCompositeSubscription = new CompositeSubscription();\n        Subscription subscription = mClient.users()\n            .observeOn(AndroidSchedulers.mainThread())\n            .subscribe(result -> render(result));\n        mCompositeSubscription.add(subscription);\n    }\n\n    public void onDestroy() {\n        mCompositeSubscription.unsubscribe();\n        super.onDestroy();\n    }\n\n    ...\n}\n```\n\n\u66f4\u65b0\u51e6\u7406\u3092\u5b9f\u884c\u3059\u308b\u5834\u5408\u306a\u3069\u3001subscribe()\u3092\u4f55\u5ea6\u3082\u547c\u3073\u51fa\u3059\u5834\u5408\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u5834\u5408\u30bf\u30b9\u30af\u304c\u5b8c\u4e86\u3059\u308b\u305f\u3073\u306b\u3044\u3061\u3044\u3061CompositeSubscription\u304b\u3089remove()\u3057\u306a\u3044\u3068\u3069\u3093\u3069\u3093\u5897\u3048\u3066\u3044\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001subscribe()\u3068unsubscribe()\uff08or\u7d42\u4e86\uff09\u306e\u969b\u306b\u52dd\u624b\u306bCompositeObservable\u306eadd()\u3068remove()\u3092\u547c\u3073\u51fa\u3059\u4ed5\u7d44\u307f\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\nhttps://gist.github.com/ypresto/accec4409654a1830f54\n**\u8ffd\u8a18\uff1a\u3053\u308c\u306f\u5fc5\u305a`subscribe()`\u306e\u4e00\u756a\u76f4\u524d\u3067\u547c\u3073\u51fa\u3055\u306a\u3044\u3068\u3001\u3046\u307e\u304funsubscribe\u3055\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u6ce8\u610f\u304c\u5fc5\u8981\u3067\u3059\u3002**\n\n```java\nmClient.users()\n    .observeOn(AndroidSchedulers.mainThread())\n    .lift(CompositeObservables.attachTo(mCompositeObservable)) // lift\u306f\u30ab\u30b9\u30bf\u30e0\u306eOperator\u3092\u4f7f\u3046\u305f\u3081\u306e\u3082\u306e\u3067\u3059\n    .subscribe(result -> render(result));\n```\n\n\u203bCompositeSubscription\u306f\u4e00\u5ea6unsubscribe\u3059\u308b\u3068\u518d\u5229\u7528\u3067\u304d\u306a\u3044\u306e\u3067\u6ce8\u610f\u3002attachTo()\u306fmCompositeObservable\u3092\u4f5c\u308a\u306a\u304a\u3059\u305f\u3073\u306b\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\nhttp://gfx.hatenablog.com/entry/2015/06/08/091656\n\n## subscribeOn()\u3001observeOn()\u3068Scheduler\u3001\u30b9\u30ec\u30c3\u30c9\u5207\u308a\u66ff\u3048\u3068\u305d\u306e\u6709\u52b9\u7bc4\u56f2\n\n**\u8ffd\u8a18\uff1a\u5f53\u6642\u3088\u308a\u7406\u89e3\u304c\u6df1\u307e\u3063\u305f\u306e\u3067\u7591\u4f3c\u30b3\u30fc\u30c9\u4ed8\u304d\u306e\u8aac\u660e\u3092\u5225\u306eQiita\u8a18\u4e8b\uff08[\u8a73\u89e3RxJava](http://qiita.com/yuya_presto/items/c8c3d77ac958c9c8f67b)\uff09\u306b\u66f8\u304d\u307e\u3057\u305f**\n\n\u6700\u521d\u306b\u7406\u89e3\u3059\u308b\u306e\u306b\u6642\u9593\u304c\u304b\u304b\u3063\u305f\u3082\u306e\u306e1\u3064\u304c\u3001\u5b9f\u884c\u30b9\u30ec\u30c3\u30c9\u3092\u5207\u308a\u66ff\u3048\u308b\u305f\u3081\u306eScheduler\u306e\u4f7f\u3044\u65b9\u3067\u3059\u3002\nScheduler\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u5b9f\u884c\uff08onNext()\u3001onComplete()\u3001onError()\u306a\u3069\u306e\u547c\u3073\u51fa\u3057\uff09\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n- subscribeOn(): subscribe()\u3067\u5b9f\u884c\u3055\u308c\u308b\u51e6\u7406\u5168\u4f53\u306e\u30b9\u30ec\u30c3\u30c9\u3092\uff08\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u6839\u3063\u3053\uff1a\u30bd\u30fc\u30b9\u304b\u3089\uff09\u5909\u66f4\n- observeOn(): \u547c\u3073\u51fa\u3057\u305f\u4ee5\u964d\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u5225\u306e\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\n\nsubscribeOn()\u306f\u3001\u9045\u3044\u30e1\u30bd\u30c3\u30c9\u3092map()\u3084\u30ab\u30b9\u30bf\u30e0\u306eObservable\u3067\u547c\u3073\u51fa\u3059\u5834\u5408\u306f\u6307\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305f\u3060\u3057\u3001[\u4e00\u756a\u30bd\u30fc\u30b9\u306b\u8fd1\u3044subscribeOn()\u3060\u3051\u304c\u6709\u52b9](https://groups.google.com/d/msg/rxjava/XXJJPhn8PHQ/BJhBUNHnwtgJ)\u3067\u3059\u3002\u4f55\u5ea6\u3082\u53e9\u304f\u3068\u30b9\u30ec\u30c3\u30c9\u751f\u6210\u5206\u7121\u99c4\u3068\u306e\u3053\u3068\u3002\u306a\u304a\u3001retrofit\u306f\u6700\u521d\u304b\u3089[\u30b9\u30ec\u30c3\u30c9\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b](https://github.com/square/retrofit/issues/830#issuecomment-98441589)\u3088\u3046\u3067\u52b9\u679c\u304c\u7121\u3044\u307f\u305f\u3044\u3067\u3059\u3002\nobserveOn()\u306f\u3001View\u306e\u66f4\u65b0\u306fMain Thread\u3067\u3057\u304b\u547c\u3079\u306a\u3044\u306e\u3067\u3001\u975e\u540c\u671f\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306a\u3069\u3092\u53e9\u3044\u305f\u969b\u306fsubscribe()\u306e\u76f4\u524d\u3067\u5fc5\u305a\u547c\u3073\u51fa\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002~~\u4eca\u306e\u3068\u3053\u308d[RxAndroid\u306eAndroidSchedulers.mainThread()](https://github.com/ReactiveX/RxAndroid/blob/b1d602290859ae078a6ca8aafbe03d5fbd6c3399/rxandroid/src/main/java/rx/android/schedulers/AndroidSchedulers.java#L30)\u3092\u53c2\u8003\u306b\u518d\u5b9f\u88c5\u3059\u308b\u306e\u304c\u826f\u3055\u305d\u3046\u3060\u3068\u601d\u3044\u307e\u3059\u3002~~ RxAndroid\u306e1.0\u306fAndroidSchedulers\u306e\u5b9f\u88c5\u3060\u3051\u3092\u542b\u3080\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u306e\u304c\u6700\u9069\u3067\u3059\u3002\n\n\u306a\u304a\u3001\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u8a18\u8f09\u306e\u306a\u3044\u9650\u308a\u3001subscribeOn()\u306e\u6307\u5b9a\u304c\u306a\u3051\u308c\u3070subscribe()\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3067\u5b9f\u884c\u3055\u308c\u307e\u3059\u3002\n\n\u203bObservable\u3092\u8fd4\u5374\u3067\u304d\u308bflatMap()\u3092\u4f7f\u3063\u305f\u969b\u304c\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u3001\u8fd4\u3057\u305fObservable\u3067subscribeOn()\u3092\u53e9\u3044\u3066\u3044\u308b\u3068\u3001onNext()\u3092\u547c\u3093\u3060Observable\u306b\u5bfe\u5fdc\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u3067\u7d9a\u304d\u306e\u51e6\u7406\u3082\u547c\u3070\u308c\u308b\u305d\u3046\u3067\u3059\u3002 https://groups.google.com/d/msg/rxjava/hVFl4YCORDQ/F-KorYBmpV0J\n\n## \u540c\u671f\u7684\u306a\u30e1\u30bd\u30c3\u30c9\u3092Observable\u306b\u3059\u308b\u65b9\u6cd5\n\n**\u8ffd\u8a18\uff1a\u4e0b\u8a18\u306e\u5b9f\u88c5\u3092\uff08\u7279\u306b\u3001\u9045\u3044\u51e6\u7406\u3067\uff09\u3059\u308b\u3068\u3001subscriber\u304c\u30ea\u30fc\u30af\u3057\u3066\u3001\u7d50\u679cActivity\u3068\u304b\u304cleak\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u5225\u306eQiita\u8a18\u4e8b\u306b\u66f8\u304f\u4e88\u5b9a\u3067\u3059**\n\n\u6700\u3082\u30b7\u30f3\u30d7\u30eb\u306a\u3084\u308a\u65b9\u3092\u3059\u308b\u3068\u4e0b\u8a18\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\nObservable.create(new Observable.OnSubscribe<List<User>>() {\n    @Override\n    public void call(Subscriber<? super List<User>> subscriber) {\n        subscriber.onNext(mClient.getUsers());\n        subscriber.onCompleted();\n    }\n});\n```\n\n\u304c\u3001\u5b9f\u306f\u51e6\u7406\u304c\u7d42\u308f\u308b\u307e\u3067subscriber\uff08\uff1dActivity\u3084Fragment\u306e\u4e2d\u306eInner Class\u3084lambda\u3001\u3082\u3057\u304f\u306f\u305d\u308c\u3092\u30e9\u30c3\u30d7\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\uff09\u3078\u306e\u53c2\u7167\u304c\u7dad\u6301\u3055\u308c\u308b\u305f\u3081\u3001AsyncTask\u3068\u540c\u69d8\u306e\u30ea\u30fc\u30af\u304c\u767a\u751f\u3057\u307e\u3059\u3002AbstractOnSubscribe\u3092\u4f7f\u3046\u3068\u6700\u521d\u304b\u3089unsubscribe()\u306b\u3088\u308b\u30ad\u30e3\u30f3\u30bb\u30eb\u306a\u3069\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java\n// \u203bAbstractOnSubscribe\u306fExperimental\u3067\u3059\nObservable.create(AbstractOnSubscribe.create(new Action1<AbstractOnSubscribe.SubscriptionState<List<User>, Void>>() {\n    @Override\n    public void call(AbstractOnSubscribe.SubscriptionState<List<MediaFile>, Void> subscriptionState) {\n        subscriptionState.onNext(client.getUsers());\n        subscriptionState.onCompleted();\n    }\n})).subscribeOn(Schedulers.io());\n```\n\n\u203b[rxjava-async-util](https://github.com/ReactiveX/RxJava/wiki/Async-Operators)\u3092\u4f7f\u3046\u3068AsyncObservable.start()\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u304c\u3001\u5024\u304c\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u308a\u3059\u308b\u306e\u3067\u4eca\u56de\u306f\u898b\u9001\u308a\u307e\u3057\u305f\u3002\n\n## Hot/Cold Observable\u3068\u3044\u3046\u6982\u5ff5\u3068Connectable Observable\u304c\u3068\u3063\u3064\u304d\u306b\u304f\u3044\u554f\u984c\n\n\u3082\u30461\u3064\u3068\u3063\u3064\u304d\u306b\u304f\u304b\u3063\u305f\u3082\u306e\u304c\u3001Hot\u3068Cold\u3068\u3044\u3046\u6982\u5ff5\u304c\u3042\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\n```java\nprivate Observable mObservable = mClient.users().map(users -> heavyMethod(users));\n\n...\n\nmObservable.subscribe(users -> render(users));\nmObservable.subscribe(users -> render(users));\nmObservable.subscribe(users -> render(users));\n```\n\n\u6700\u521d\u306fheavyMethod()\u306e\u547c\u3073\u51fa\u3057\u306f1\u56de\u3067\u6e08\u3080\u3068\u601d\u3063\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\u3057\u304b\u3057\u3001Observable\u306f\u975e\u540c\u671f\u306a\u306e\u3067\u3001mObservable\u306b\u306f\u3044\u304b\u306a\u308b\u7d50\u679c\u3082\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u3066\u304a\u3089\u305a\u3001heavyMethod()\u306f3\u56de\u547c\u3070\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u5909\u66f4\u901a\u77e5\u306e\u5b9f\u88c5\u4f8b\u3067share()\uff08publish().refCount()\u3068\u540c\u7fa9\uff09\u306e\u547c\u3073\u51fa\u3057\u3092\u3057\u3066\u3044\u305f\u306e\u306f\u3001\u5206\u5c90\u306e\u6839\u3063\u3053\u306b\u3057\u3066\u51e6\u7406\u7d50\u679c\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306b\u3001\u5206\u5c90\u306e\u6839\u3063\u3053\u306b\u306a\u308b\u7279\u5225\u306a\u3082\u306e\u3092Hot Observable\u3001\u306a\u3089\u306a\u3044\u901a\u5e38\u306e\u3082\u306e\u3092Cold Observable\u3068\u547c\u3073\u307e\u3059\u3002\n[Rx\u306eHot\u3068Cold\u306b\u3064\u3044\u3066](http://qiita.com/toRisouP/items/f6088963037bfda658d3)\u306b\u3066\u8a73\u3057\u304f\u89e3\u8aac\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n[Connectable Observable](https://github.com/ReactiveX/RxJava/wiki/Connectable-Observable-Operators)\u306fsubscribe\u3055\u308c\u305f\u3089\u3059\u3050\u306b\u52d5\u4f5c\u304c\u59cb\u307e\u308bHot Observable\u3092\u3001\u5168\u54e1\u306esubscribe()\u304c\u7d42\u308f\u308b\u307e\u3067\u9045\u3089\u305b\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3001refCount()\u3092\u4f7f\u3046\u3068\u8ab0\u304b\u304csubscribe()\u3057\u3066\u3044\u308b\u6642\u3060\u3051\u958b\u59cb\u3055\u308c\u305f\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\u4e0b\u8a18\u306e\u3088\u3046\u306a\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n- publish(): subscribe()\u3057\u305f\u5148\u306b\u4ee5\u5f8c\u5c4a\u3044\u305f\u3082\u306e\u3092\u5782\u308c\u6d41\u3059\u3060\u3051\uff08Multicast\uff09\n- replay(): subscribe()\u3059\u308b\u305f\u3073\u306b\u4eca\u307e\u3067\u5c4a\u3044\u3066\u3044\u305fitem\u3092\u5168\u90e8\u914d\u4fe1\u3057\u306a\u304a\u3059\uff08\u6700\u65b0\u306en\u4ef6\u3082\u53ef\u80fd\uff09\n\n\u306a\u304a\u3001Hot Observable\u306f\u958b\u59cb\u3055\u308c\u308b\u3068\u305d\u306e**\u624b\u524d\u307e\u3067\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4ee3\u8868\u3057\u3066subscribe()\u3057\u3066\u3044\u308b**\u72b6\u614b\u306b\u306a\u308a\u307e\u3059\u3002\n\n## Observable\u306b\u81ea\u5206\u3067\u5024\u3092\u6d41\u3059\u306b\u306fSubject\u3092\u4f7f\u7528\u3059\u308b\n\nObservable.from(List)\u3060\u3068\u6700\u521d\u306b\u6c7a\u3081\u305f\u5024\u3057\u304b\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u5f8c\u304b\u3089\u5024\u3092\u6d41\u3057\u305f\u3044\u5834\u5408\u306fSubject\u3092\u4f7f\u7528\u3057onNext()\u3092\u547c\u3073\u307e\u3059\u3002Subject\u306fObservable\u3067\u3042\u308b\u3068\u540c\u6642\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\uff08Subscriber\uff09\u3067\u3082\u3042\u308a\u307e\u3059\u3002\n\n- PublishSubject\n    - PublishSubject\u306eonNext()\u3092\u547c\u3073\u51fa\u3057\u305f\u6642\u306bsubscribe()\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306b\u540c\u3058\u5024\u3092\u6e21\u3057\u307e\u3059\n    - \u901a\u77e5\uff08\u30a4\u30d9\u30f3\u30c8\uff09\u306e\u5b9f\u88c5\u306b\u4fbf\u5229\n- BehaviorSubject\n    - subscribe()\u306e\u969b\u306b\u6700\u5f8c\u306bonNext()\u3055\u308c\u305f\u5024\u3092\u6d41\u3057\u3001\u4ee5\u964donNext()\u3055\u308c\u308b\u305f\u3073\u306b\u5024\u3092\u6d41\u3059\n    - \u5909\u66f4\u304c\u8d77\u304d\u308b\u5024\u3092\u8868\u73fe\u3059\u308b\u306e\u306b\u4fbf\u5229\n\n## Backpressure\u3068\u3044\u3046\u6982\u5ff5\n\n\uff08\u8ffd\u8a18\uff09Backpressure\u306e\u4ed5\u7d44\u307f\u306b\u3064\u3044\u3066\u306f[\u5225\u306e\u8a18\u4e8b](http://qiita.com/yuya_presto/items/0e95271bc85efe7f768e)\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u3069\u3046\u305e\u3002\n\nBackpressure\u306b\u3064\u3044\u3066\u306f\u307e\u3060\u52c9\u5f37\u4e2d\u3067\u3059\u3002ReactiveX\u306eintro\u306b\u3082\u8a18\u8f09\u304c\u3042\u308b\u3088\u3046\u306b\u3001Iterable\u306fpull\uff08next()\u3067\u53d6\u3063\u3066\u304f\u308b\uff09\u3001Observable\u306fpush\uff08onNext()\u3067\u6e21\u3063\u3066\u304f\u308b\uff09\u3067\u3059\u3002push\u306e\u5834\u5408\u3001\u81ea\u5206\u3067pull\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u6bd4\u3079\u3001\u9023\u6253\u3055\u308c\u3066\u51e6\u7406\u304c\u8ffd\u3044\u3064\u304b\u306a\u3044\u6642\u306e\u5236\u5fa1\u304c\u96e3\u3057\u304f\u306a\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u5236\u5fa1\u3059\u308b\u305f\u3081\u306b\u3001\u3042\u3068\u3069\u306e\u304f\u3089\u3044\u306a\u3089onNext()\u304c\u53e9\u304b\u308c\u3066\u3082\u5927\u4e08\u592b\u304b\u3092\u30bd\u30fc\u30b9\u5074\u306e\u65b9\u306b\u4f1d\u3048\u308b\u4ed5\u7d44\u307f\u3067\u3059\u3002\n\nhttps://github.com/ReactiveX/RxJava/wiki/Backpressure\n\nUI\u30671\u6587\u5b57\u5165\u529b\u3054\u3068\u306b\u51e6\u7406\u547c\u3073\u51fa\u3059\u5834\u5408\u306a\u3069\u306b\u5f79\u7acb\u3061\u305d\u3046\u3067\u3059\u304c\u3001\u305d\u306e\u3088\u3046\u306a\u5834\u5408\u4e00\u5b9a\u6642\u9593\u5185\u306e\u30a4\u30d9\u30f3\u30c8\u6570\u3092\u5236\u5fa1\u3059\u308bOperator\u3092\u4f7f\u3063\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\n", "tags": ["RxJava", "Android", "Rx", "ReactiveExtensions"]}