{"context": " More than 1 year has passed since last update.Remote Actor\u3092\u4f7f\u3044\u30d7\u30ed\u30bb\u30b9\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8d85\u3048\u3066\u3001Actor\u3092\u7d71\u5408\u3059\u308b\u65b9\u6cd5\u3092\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u306a\u304c\u3089\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u3061\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u4f5c\u3059\u308b\u5b8c\u5168\u7248\u306fGitHub\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002suin/akka-sample-remote-scala\n\nStep 1: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\u307e\u305a\u3001build.sbt\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u308f\u3051\u3042\u3063\u3066\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eakka\u3068Scala\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3082\u3044\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nbuild.sbt\nname := \"\"\"akka-sample-remote-scala\"\"\"\n\nversion := \"2.3.10\"\n\nscalaVersion := \"2.10.4\"\n\nlibraryDependencies ++= Seq(\n  \"com.typesafe.akka\" %% \"akka-actor\" % \"2.3.3\",\n  \"com.typesafe.akka\" %% \"akka-remote\" % \"2.3.3\"\n)\n\n\n\nStep 2: \u5171\u6709\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\n\u30ea\u30e2\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u3067\u9001\u53d7\u4fe1\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\ncommon/package.scala\npackage suin\n\npackage object common {\n  case object Hello\n}\n\n\n\nStep 3: \u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u5b9f\u88c5\u3059\u308b\n\u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nremote/RemoteApp.scala\npackage suin.remote\n\nimport java.io.File\n\nimport akka.actor.{ActorLogging, Props, ActorSystem, Actor}\nimport com.typesafe.config.ConfigFactory\nimport suin.common.Hello\n\nobject RemoteApp extends App {\n  val configFile = getClass.getClassLoader.getResource(\"remote_application.conf\").getFile\n  val config = ConfigFactory.parseFile(new File(configFile))\n  val system = ActorSystem(\"remote-system\", config)\n  val remote = system.actorOf(Props[RemoteActor], name=\"remote\")\n  system.log.info(\"Remote is ready\")\n}\n\nclass RemoteActor extends Actor with ActorLogging {\n  override def receive: Receive = {\n    case Hello =>\n      log.info(\"Remote received {} from {}\", Hello, sender)\n      sender ! Hello\n    case msg: String =>\n      log.info(\"Remote received {} from {}\", msg, sender)\n      sender ! \"hi\"\n    case any =>\n      log.info(\"Remote received unknown message {} from {}\", any, sender)\n  }\n}\n\n\n\u6b21\u306b\u3001\u30ea\u30e2\u30fc\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nremote-application.conf\nakka {\n  loglevel = \"INFO\"\n  actor {\n    provider = \"akka.remote.RemoteActorRefProvider\"\n  }\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 5150\n    }\n    log-sent-messages = on\n    log-received-messages = on\n  }\n}\n\n\n\nStep 4: \u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u5b9f\u88c5\u3059\u308b\n\u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\nlocal/LocalApp.scala\npackage suin.local\n\nimport java.io.File\n\nimport akka.actor.{ActorLogging, Props, ActorSystem, Actor}\nimport com.typesafe.config.ConfigFactory\nimport suin.common.Hello\n\nclass LocalActor extends Actor with ActorLogging {\n  @throws[Exception](classOf[Exception])\n  override def preStart(): Unit = {\n    val remoteActor = context.actorSelection(LocalApp.config.getString(\"app.remote-system.remote-actor\"))\n    log.info(\"Remote actor is {}\", remoteActor)\n    remoteActor ! \"hi\"\n    remoteActor ! Hello\n  }\n\n  override def receive: Receive = {\n    case msg: String =>\n      log.info(\"Client received {} from {}\", msg, sender)\n    case Hello =>\n      log.info(\"Client received {} from {}\", Hello, sender)\n    case any =>\n      log.info(\"Client received unknown message {} from {}\", any, sender)\n  }\n}\n\nobject LocalApp extends App {\n  val configFile = getClass.getClassLoader.getResource(\"local_application.conf\").getFile\n  val config = ConfigFactory.parseFile(new File(configFile))\n  val system = ActorSystem(\"client-system\", config)\n  val localActor = system.actorOf(Props[LocalActor], name = \"local\")\n}\n\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nlocal_application.conf\nakka {\n  loglevel = \"INFO\"\n  actor {\n    provider = \"akka.remote.RemoteActorRefProvider\"\n  }\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0 # any free port\n    }\n    log-sent-messages = on\n    log-received-messages = on\n  }\n}\n\napp.remote-system.remote-actor = \"akka.tcp://remote-system@127.0.0.1:5150/user/remote\"\n\n\n\nStep 5: \u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c\u3059\u308b\n\u30bf\u30fc\u30df\u30ca\u30eb\u30922\u3064\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\u3072\u3068\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n% ./activator run\n[info] Loading project definition from /Users/suin/Desktop/akka-sample-remote-scala/project\n[info] Set current project to akka-sample-remote-scala (in build file:/Users/suin/Desktop/akka-sample-remote-scala/)\n\nMultiple main classes detected, select one to run:\n\n [1] suin.local.LocalApp\n [2] suin.remote.RemoteApp\n\nEnter number: 2\n\n\u3082\u3046\u3072\u3068\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n% ./activator run\n[info] Loading project definition from /Users/suin/Desktop/akka-sample-remote-scala/project\n[info] Set current project to akka-sample-remote-scala (in build file:/Users/suin/Desktop/akka-sample-remote-scala/)\n\nMultiple main classes detected, select one to run:\n\n [1] suin.local.LocalApp\n [2] suin.remote.RemoteApp\n\nEnter number: 1\n\n\u5b9f\u884c\u7d50\u679c\u304c\u305d\u308c\u305e\u308c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u30ea\u30e2\u30fc\u30c8\n[info] Running suin.remote.RemoteApp\n[INFO] [06/21/2015 17:02:15.641] [run-main-0] [Remoting] Starting remoting\n[INFO] [06/21/2015 17:02:15.799] [run-main-0] [Remoting] Remoting started; listening on addresses :[akka.tcp://remote-system@127.0.0.1:5150]\n[INFO] [06/21/2015 17:02:15.801] [run-main-0] [Remoting] Remoting now listens on addresses: [akka.tcp://remote-system@127.0.0.1:5150]\n[INFO] [06/21/2015 17:02:15.814] [run-main-0] [ActorSystem(remote-system)] Remote is ready\n[INFO] [06/21/2015 17:03:21.080] [remote-system-akka.actor.default-dispatcher-3] [akka.tcp://remote-system@127.0.0.1:5150/user/remote] Remote received hi from Actor[akka.tcp://client-system@127.0.0.1:59552/user/local#167765235]\n[INFO] [06/21/2015 17:03:21.081] [remote-system-akka.actor.default-dispatcher-3] [akka.tcp://remote-system@127.0.0.1:5150/user/remote] Remote received Hello from Actor[akka.tcp://client-system@127.0.0.1:59552/user/local#167765235]\n\n\n\n\u30ed\u30fc\u30ab\u30eb\n[info] Running suin.local.LocalApp\n[INFO] [06/21/2015 17:03:20.763] [run-main-0] [Remoting] Starting remoting\n[INFO] [06/21/2015 17:03:20.898] [run-main-0] [Remoting] Remoting started; listening on addresses :[akka.tcp://client-system@127.0.0.1:59552]\n[INFO] [06/21/2015 17:03:20.900] [run-main-0] [Remoting] Remoting now listens on addresses: [akka.tcp://client-system@127.0.0.1:59552]\n[INFO] [06/21/2015 17:03:20.911] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Remote actor is ActorSelection[Anchor(akka.tcp://remote-system@127.0.0.1:5150/), Path(/user/remote)]\n[INFO] [06/21/2015 17:03:21.092] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Client received hi from Actor[akka.tcp://remote-system@127.0.0.1:5150/user/remote#-68561685]\n[INFO] [06/21/2015 17:03:21.093] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Client received Hello from Actor[akka.tcp://remote-system@127.0.0.1:5150/user/remote#-68561685]\n\n\n\u53c2\u8003: A Simple Akka Remote example\n\nRemote Actor\u3092\u4f7f\u3044\u30d7\u30ed\u30bb\u30b9\u3084\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u8d85\u3048\u3066\u3001Actor\u3092\u7d71\u5408\u3059\u308b\u65b9\u6cd5\u3092\u30b5\u30f3\u30d7\u30eb\u3092\u793a\u3057\u306a\u304c\u3089\u3054\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n\u3053\u3061\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u306e\u52d5\u4f5c\u3059\u308b\u5b8c\u5168\u7248\u306fGitHub\u3092\u5fa1\u89a7\u304f\u3060\u3055\u3044\u3002[suin/akka-sample-remote-scala](https://github.com/suin/akka-sample-remote-scala)\n\n## Step 1: \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\n\n\u307e\u305a\u3001build.sbt\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3061\u3089\u306e\u30b5\u30f3\u30d7\u30eb\u306f\u308f\u3051\u3042\u3063\u3066\u53e4\u3044\u30d0\u30fc\u30b8\u30e7\u30f3\u306eakka\u3068Scala\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u304c\u3001\u6700\u65b0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u3044\u305f\u3060\u3044\u3066\u3082\u3044\u3044\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```scala:build.sbt\nname := \"\"\"akka-sample-remote-scala\"\"\"\n\nversion := \"2.3.10\"\n\nscalaVersion := \"2.10.4\"\n\nlibraryDependencies ++= Seq(\n  \"com.typesafe.akka\" %% \"akka-actor\" % \"2.3.3\",\n  \"com.typesafe.akka\" %% \"akka-remote\" % \"2.3.3\"\n)\n```\n\n## Step 2: \u5171\u6709\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u30ea\u30e2\u30fc\u30c8\u3068\u30ed\u30fc\u30ab\u30eb\u3067\u9001\u53d7\u4fe1\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n```scala:common/package.scala\npackage suin\n\npackage object common {\n  case object Hello\n}\n```\n\n## Step 3: \u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u5b9f\u88c5\u3059\u308b\n\n\u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n```scala:remote/RemoteApp.scala\npackage suin.remote\n\nimport java.io.File\n\nimport akka.actor.{ActorLogging, Props, ActorSystem, Actor}\nimport com.typesafe.config.ConfigFactory\nimport suin.common.Hello\n\nobject RemoteApp extends App {\n  val configFile = getClass.getClassLoader.getResource(\"remote_application.conf\").getFile\n  val config = ConfigFactory.parseFile(new File(configFile))\n  val system = ActorSystem(\"remote-system\", config)\n  val remote = system.actorOf(Props[RemoteActor], name=\"remote\")\n  system.log.info(\"Remote is ready\")\n}\n\nclass RemoteActor extends Actor with ActorLogging {\n  override def receive: Receive = {\n    case Hello =>\n      log.info(\"Remote received {} from {}\", Hello, sender)\n      sender ! Hello\n    case msg: String =>\n      log.info(\"Remote received {} from {}\", msg, sender)\n      sender ! \"hi\"\n    case any =>\n      log.info(\"Remote received unknown message {} from {}\", any, sender)\n  }\n}\n```\n\n\u6b21\u306b\u3001\u30ea\u30e2\u30fc\u30c8\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```nginx:remote-application.conf\nakka {\n  loglevel = \"INFO\"\n  actor {\n    provider = \"akka.remote.RemoteActorRefProvider\"\n  }\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 5150\n    }\n    log-sent-messages = on\n    log-received-messages = on\n  }\n}\n```\n\n## Step 4: \u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u5b9f\u88c5\u3059\u308b\n\n\u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\n\n```scala:local/LocalApp.scala\npackage suin.local\n\nimport java.io.File\n\nimport akka.actor.{ActorLogging, Props, ActorSystem, Actor}\nimport com.typesafe.config.ConfigFactory\nimport suin.common.Hello\n\nclass LocalActor extends Actor with ActorLogging {\n  @throws[Exception](classOf[Exception])\n  override def preStart(): Unit = {\n    val remoteActor = context.actorSelection(LocalApp.config.getString(\"app.remote-system.remote-actor\"))\n    log.info(\"Remote actor is {}\", remoteActor)\n    remoteActor ! \"hi\"\n    remoteActor ! Hello\n  }\n\n  override def receive: Receive = {\n    case msg: String =>\n      log.info(\"Client received {} from {}\", msg, sender)\n    case Hello =>\n      log.info(\"Client received {} from {}\", Hello, sender)\n    case any =>\n      log.info(\"Client received unknown message {} from {}\", any, sender)\n  }\n}\n\nobject LocalApp extends App {\n  val configFile = getClass.getClassLoader.getResource(\"local_application.conf\").getFile\n  val config = ConfigFactory.parseFile(new File(configFile))\n  val system = ActorSystem(\"client-system\", config)\n  val localActor = system.actorOf(Props[LocalActor], name = \"local\")\n}\n```\n\n\u30ed\u30fc\u30ab\u30eb\u306e\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```nginx:local_application.conf\nakka {\n  loglevel = \"INFO\"\n  actor {\n    provider = \"akka.remote.RemoteActorRefProvider\"\n  }\n  remote {\n    enabled-transports = [\"akka.remote.netty.tcp\"]\n    netty.tcp {\n      hostname = \"127.0.0.1\"\n      port = 0 # any free port\n    }\n    log-sent-messages = on\n    log-received-messages = on\n  }\n}\n\napp.remote-system.remote-actor = \"akka.tcp://remote-system@127.0.0.1:5150/user/remote\"\n```\n\n## Step 5: \u30d3\u30eb\u30c9\u3057\u3066\u5b9f\u884c\u3059\u308b\n\n\u30bf\u30fc\u30df\u30ca\u30eb\u30922\u3064\u7acb\u3061\u4e0a\u3052\u307e\u3059\u3002\n\n\u3072\u3068\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30ea\u30e2\u30fc\u30c8\u306eActor System\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```console\n% ./activator run\n[info] Loading project definition from /Users/suin/Desktop/akka-sample-remote-scala/project\n[info] Set current project to akka-sample-remote-scala (in build file:/Users/suin/Desktop/akka-sample-remote-scala/)\n\nMultiple main classes detected, select one to run:\n\n [1] suin.local.LocalApp\n [2] suin.remote.RemoteApp\n\nEnter number: 2\n```\n\n\u3082\u3046\u3072\u3068\u3064\u306e\u30bf\u30fc\u30df\u30ca\u30eb\u3067\u30ed\u30fc\u30ab\u30eb\u306eActor System\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```console\n% ./activator run\n[info] Loading project definition from /Users/suin/Desktop/akka-sample-remote-scala/project\n[info] Set current project to akka-sample-remote-scala (in build file:/Users/suin/Desktop/akka-sample-remote-scala/)\n\nMultiple main classes detected, select one to run:\n\n [1] suin.local.LocalApp\n [2] suin.remote.RemoteApp\n\nEnter number: 1\n```\n\n\u5b9f\u884c\u7d50\u679c\u304c\u305d\u308c\u305e\u308c\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n```text:\u30ea\u30e2\u30fc\u30c8\n[info] Running suin.remote.RemoteApp\n[INFO] [06/21/2015 17:02:15.641] [run-main-0] [Remoting] Starting remoting\n[INFO] [06/21/2015 17:02:15.799] [run-main-0] [Remoting] Remoting started; listening on addresses :[akka.tcp://remote-system@127.0.0.1:5150]\n[INFO] [06/21/2015 17:02:15.801] [run-main-0] [Remoting] Remoting now listens on addresses: [akka.tcp://remote-system@127.0.0.1:5150]\n[INFO] [06/21/2015 17:02:15.814] [run-main-0] [ActorSystem(remote-system)] Remote is ready\n[INFO] [06/21/2015 17:03:21.080] [remote-system-akka.actor.default-dispatcher-3] [akka.tcp://remote-system@127.0.0.1:5150/user/remote] Remote received hi from Actor[akka.tcp://client-system@127.0.0.1:59552/user/local#167765235]\n[INFO] [06/21/2015 17:03:21.081] [remote-system-akka.actor.default-dispatcher-3] [akka.tcp://remote-system@127.0.0.1:5150/user/remote] Remote received Hello from Actor[akka.tcp://client-system@127.0.0.1:59552/user/local#167765235]\n```\n\n```text:\u30ed\u30fc\u30ab\u30eb\n[info] Running suin.local.LocalApp\n[INFO] [06/21/2015 17:03:20.763] [run-main-0] [Remoting] Starting remoting\n[INFO] [06/21/2015 17:03:20.898] [run-main-0] [Remoting] Remoting started; listening on addresses :[akka.tcp://client-system@127.0.0.1:59552]\n[INFO] [06/21/2015 17:03:20.900] [run-main-0] [Remoting] Remoting now listens on addresses: [akka.tcp://client-system@127.0.0.1:59552]\n[INFO] [06/21/2015 17:03:20.911] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Remote actor is ActorSelection[Anchor(akka.tcp://remote-system@127.0.0.1:5150/), Path(/user/remote)]\n[INFO] [06/21/2015 17:03:21.092] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Client received hi from Actor[akka.tcp://remote-system@127.0.0.1:5150/user/remote#-68561685]\n[INFO] [06/21/2015 17:03:21.093] [client-system-akka.actor.default-dispatcher-2] [akka.tcp://client-system@127.0.0.1:59552/user/local] Client received Hello from Actor[akka.tcp://remote-system@127.0.0.1:5150/user/remote#-68561685]\n```\n\n\n\u53c2\u8003: [A Simple Akka Remote example](http://blog.madhukaraphatak.com/simple-akka-remote-example/)\n", "tags": ["Scala", "Akka"]}