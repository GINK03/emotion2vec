{"tags": ["yhpg", "\u3069\u3046\u66f8\u304f", "C"], "context": " More than 1 year has passed since last update.\nC\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum e_move { ROW, COL };\n\nint main( void )\n{\n    const char * table[7] = \n    {\n        \"WXYZ\",\n        \"VJKLa\",\n        \"UICDMb\",\n        \"THBAENc\",\n        \" kSGFOd\",\n        \"  jRQPe\",\n        \"   ihgf\"\n    };\n\n    const char * input[] =\n    {\n        \"135004\",// \"ACDABHS\" );\n        \"1\",// \"AC\" );\n        \"33333120\", //\"AENc!!b!M\" );\n        \"0\",// \"AB\" );\n        \"2\", //\"AD\" );\n        \"3\", //\"AE\" );\n        \"4\", //\"AF\" );\n        \"5\", //\"AG\" );\n        \"4532120\", //\"AFQPOEMD\" );\n        \"051455\", //\"ABSHSj!\" );\n        \"23334551\", //\"ADMb!cdeO\" );\n        \"22033251\", //\"ADLKLa!ML\" );\n        \"50511302122\", //\"AGSjkTHTU!VW\" );\n        \"000051\", //\"ABHT!!!\" );\n        \"1310105\", //\"ACDKJW!V\" );\n        \"50002103140\", //\"AGSk!HU!IVIU\" );\n        \"3112045\", //\"AEDKYXKC\" );\n        \"02021245535\", //\"ABCIJW!JIHBS\" );\n        \"014204\", //\"ABIBCIB\" );\n        \"255230\", //\"ADAGAEA\" );\n        \"443501\", //\"AFPefgQ\" );\n        \"022321\", //\"ABCKLZ!\" );\n        \"554452\", //\"AGRh!!Q\" );\n        \"051024\", //\"ABSHTUH\" );\n        \"524002\", //\"AGAFGSB\" );\n        \"54002441132\", //\"AGQRjSRhRSGA\" );\n        \"11010554312\", //\"ACJV!!UTkSHI\" );\n        \"23405300554\", //\"ADMNEFOFGRi!\" );\n        \"555353201\", //\"AGRih!gPQG\" );\n        \"22424105\", //\"ADLMabaLD\" );\n        \"11340202125\", //\"ACJKDCKJX!!J\" );\n        \"4524451\", //\"AFQFPf!P\" );\n        \"44434234050\", //\"AFPf!!e!!Pgh\" );\n        \"00554040132\", //\"ABHk!j!i!jRG\" );\n        \"3440403\", //\"AEOePfgf\" );\n        \"111130\", //\"ACJW!XW\" );\n        \"21133343125\", //\"ADKXYZ!a!Z!L\" );\n        \"353511\", //\"AEFOPFA\" );\n        \"22204115220\", //\"ADLZYLY!KY!X\" );\n        \"03013541\", //\"ABABICBGB\" );\n        \"101344\", //\"ACIVJCA\" );\n        \"2432541\", //\"ADENbNdN\" );\n        \"45332242015\", //\"AFQPedc!!NME\" );\n        \"215453\", //\"ADKCAGF\" );\n        \"45540523454\", //\"AFQh!i!RQg!!\" );\n        \"42434302545\" //\"AFEOd!!ONOef\" );\n    };\n    const int move_table[][2] = { {-1,0}, {-1,-1}, {0,-1}, {1,0}, {1,1}, {0,1} };\n    const int start[2] = {3,3};\n    int pos[2] = {0};\n    int i = 0;\n    int j = 1;\n\n    for(j = 0; j < sizeof(input)/sizeof(*input); j++)\n    {\n        memcpy(pos, start, sizeof(pos));\n        printf(\"%c\", table[ pos[COL] ][ pos[ROW] ] );\n        for(i = 0; i < strlen(input[j]); i++ )\n        {\n            pos[COL] += move_table[ input[j][i]-'0' ][COL];\n            pos[ROW] += move_table[ input[j][i]-'0' ][ROW];\n            if( pos[COL] < 0 || pos[ROW] < 0 || pos[COL] >= 7 || pos[ROW] >= strlen(table[ pos[COL] ]) || table[ pos[COL] ][ pos[ROW] ] == ' ' )\n            {\n                printf(\"!\"); \n                pos[COL] -= move_table[ input[j][i]-'0' ][COL];\n                pos[ROW] -= move_table[ input[j][i]-'0' ][ROW];\n                continue;\n            }\n            printf(\"%c\", table[ pos[COL] ][ pos[ROW] ] );\n        }\n        printf(\"\\n\");\n    }\n\n    return 0;\n}\n\n\n``` c:C\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum e_move { ROW, COL };\n\nint main( void )\n{\n\tconst char * table[7] = \n\t{\n\t\t\"WXYZ\",\n\t\t\"VJKLa\",\n\t\t\"UICDMb\",\n\t\t\"THBAENc\",\n\t\t\" kSGFOd\",\n\t\t\"  jRQPe\",\n\t\t\"   ihgf\"\n\t};\n\t\n\tconst char * input[] =\n\t{\n\t\t\"135004\",// \"ACDABHS\" );\n\t\t\"1\",// \"AC\" );\n\t\t\"33333120\", //\"AENc!!b!M\" );\n\t\t\"0\",// \"AB\" );\n\t\t\"2\", //\"AD\" );\n\t\t\"3\", //\"AE\" );\n\t\t\"4\", //\"AF\" );\n\t\t\"5\", //\"AG\" );\n\t\t\"4532120\", //\"AFQPOEMD\" );\n\t\t\"051455\", //\"ABSHSj!\" );\n\t\t\"23334551\", //\"ADMb!cdeO\" );\n\t\t\"22033251\", //\"ADLKLa!ML\" );\n\t\t\"50511302122\", //\"AGSjkTHTU!VW\" );\n\t\t\"000051\", //\"ABHT!!!\" );\n\t\t\"1310105\", //\"ACDKJW!V\" );\n\t\t\"50002103140\", //\"AGSk!HU!IVIU\" );\n\t\t\"3112045\", //\"AEDKYXKC\" );\n\t\t\"02021245535\", //\"ABCIJW!JIHBS\" );\n\t\t\"014204\", //\"ABIBCIB\" );\n\t\t\"255230\", //\"ADAGAEA\" );\n\t\t\"443501\", //\"AFPefgQ\" );\n\t\t\"022321\", //\"ABCKLZ!\" );\n\t\t\"554452\", //\"AGRh!!Q\" );\n\t\t\"051024\", //\"ABSHTUH\" );\n\t\t\"524002\", //\"AGAFGSB\" );\n\t\t\"54002441132\", //\"AGQRjSRhRSGA\" );\n\t\t\"11010554312\", //\"ACJV!!UTkSHI\" );\n\t\t\"23405300554\", //\"ADMNEFOFGRi!\" );\n\t\t\"555353201\", //\"AGRih!gPQG\" );\n\t\t\"22424105\", //\"ADLMabaLD\" );\n\t\t\"11340202125\", //\"ACJKDCKJX!!J\" );\n\t\t\"4524451\", //\"AFQFPf!P\" );\n\t\t\"44434234050\", //\"AFPf!!e!!Pgh\" );\n\t\t\"00554040132\", //\"ABHk!j!i!jRG\" );\n\t\t\"3440403\", //\"AEOePfgf\" );\n\t\t\"111130\", //\"ACJW!XW\" );\n\t\t\"21133343125\", //\"ADKXYZ!a!Z!L\" );\n\t\t\"353511\", //\"AEFOPFA\" );\n\t\t\"22204115220\", //\"ADLZYLY!KY!X\" );\n\t\t\"03013541\", //\"ABABICBGB\" );\n\t\t\"101344\", //\"ACIVJCA\" );\n\t\t\"2432541\", //\"ADENbNdN\" );\n\t\t\"45332242015\", //\"AFQPedc!!NME\" );\n\t\t\"215453\", //\"ADKCAGF\" );\n\t\t\"45540523454\", //\"AFQh!i!RQg!!\" );\n\t\t\"42434302545\" //\"AFEOd!!ONOef\" );\n\t};\n\tconst int move_table[][2] = { {-1,0}, {-1,-1}, {0,-1}, {1,0}, {1,1}, {0,1} };\n\tconst int start[2] = {3,3};\n\tint pos[2] = {0};\n\tint i = 0;\n\tint j = 1;\n\t\n\tfor(j = 0; j < sizeof(input)/sizeof(*input); j++)\n\t{\n\t\tmemcpy(pos, start, sizeof(pos));\n\t\tprintf(\"%c\", table[ pos[COL] ][ pos[ROW] ] );\n\t\tfor(i = 0; i < strlen(input[j]); i++ )\n\t\t{\n\t\t\tpos[COL] += move_table[ input[j][i]-'0' ][COL];\n\t\t\tpos[ROW] += move_table[ input[j][i]-'0' ][ROW];\n\t\t\tif( pos[COL] < 0 || pos[ROW] < 0 || pos[COL] >= 7 || pos[ROW] >= strlen(table[ pos[COL] ]) || table[ pos[COL] ][ pos[ROW] ] == ' ' )\n\t\t\t{\n\t\t\t\tprintf(\"!\"); \n\t\t\t\tpos[COL] -= move_table[ input[j][i]-'0' ][COL];\n\t\t\t\tpos[ROW] -= move_table[ input[j][i]-'0' ][ROW];\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tprintf(\"%c\", table[ pos[COL] ][ pos[ROW] ] );\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn 0;\n}\n```"}