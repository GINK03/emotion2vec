{"context": " More than 1 year has passed since last update.\u3053\u3093\u306b\u3061\u306f\u3002\npython \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\uff08pypi \u5185\u3067\uff09\u691c\u7d22\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b pip \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u7d50\u679c\u3092\u5f97\u307e\u3059\u304c\u3001\u52a0\u3048\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7d50\u679c\u8868\u793a\u3082\u52a0\u3048\u305f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n$ pip search cvxopt\ncvxopt                    - Convex optimization package\n  INSTALLED: 1.1.7 (latest)\n  https://pypi.python.org/pypi/cvxopt   <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n\n$ pip search pandas\npandas                    - Powerful data structures for data analysis, time series,and statistics\n  LATEST:    0.15.2 (not installed)     <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n  https://pypi.python.org/pypi/pandas   <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n\n\u305d\u3053\u3067\u3001pip (v.6.0.x) \u306e search \u306b\u5c11\u3057\u624b\u3092\u52a0\u3048\u3066\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n$ ./mypatch.rb search.py.patch\n\n\nmypatch.rb\n#!/usr/bin/ruby\n# coding: utf-8\ncmd = \"patch -b -p0 < \"\nARGV.each {|file|\n    `#{cmd + file + \" 2>&1\"}`  # for sh/bash\n}\n\n\n\nsearch.py.patch\n--- /usr/local/lib/python2.7/site-packages/pip/commands/search.py\n+++ search.py.orig\n@@ -47,7 +47,7 @@\n         if sys.stdout.isatty():\n             terminal_width = get_terminal_size()[0]\n\n-        print_results(hits, terminal_width=terminal_width)\n+        print_results(hits, query, terminal_width=terminal_width)\n         if pypi_hits:\n             return SUCCESS\n         return NO_MATCHES_FOUND\n@@ -101,7 +101,7 @@\n     return package_list\n\n\n-def print_results(hits, name_column_width=25, terminal_width=None):\n+def print_results(hits, query, name_column_width=25, terminal_width=None):\n     installed_packages = [p.project_name for p in pkg_resources.working_set]\n     for hit in hits:\n         name = hit['name']\n@@ -125,6 +125,11 @@\n                     else:\n                         logger.info('INSTALLED: %s', dist.version)\n                         logger.info('LATEST:    %s', latest)\n+            elif in_case_insensitive(name, query):\n+                latest = highest_version(hit['versions'])\n+                logger.info('  LATEST:    %s (not installed)' % latest)\n+            if in_case_insensitive(name, query):\n+                logger.info('  %s/%s' % (PyPI.pypi_url, name))\n         except UnicodeEncodeError:\n             pass\n\n@@ -133,3 +138,7 @@\n     return next(iter(\n         sorted(versions, key=pkg_resources.parse_version, reverse=True)\n     ))\n+\n+def in_case_insensitive(x, list):\n+    return x.lower() in [y.lower() for y in list]\n+\n\n\n\u3053\u3093\u306b\u3061\u306f\u3002\npython \u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\uff08pypi \u5185\u3067\uff09\u691c\u7d22\u3059\u308b\u306b\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b pip \u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u3066\u691c\u7d22\u7d50\u679c\u3092\u5f97\u307e\u3059\u304c\u3001\u52a0\u3048\u3066\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7d50\u679c\u8868\u793a\u3082\u52a0\u3048\u305f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n```console\n$ pip search cvxopt\ncvxopt                    - Convex optimization package\n  INSTALLED: 1.1.7 (latest)\n  https://pypi.python.org/pypi/cvxopt   <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n\n$ pip search pandas\npandas                    - Powerful data structures for data analysis, time series,and statistics\n  LATEST:    0.15.2 (not installed)     <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n  https://pypi.python.org/pypi/pandas   <== \u3053\u306e\u8868\u793a\u3092\u52a0\u3048\u305f\u3044\n```\n\n\u305d\u3053\u3067\u3001pip (v.6.0.x) \u306e search \u306b\u5c11\u3057\u624b\u3092\u52a0\u3048\u3066\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```console\n$ ./mypatch.rb search.py.patch\n```\n\n```mypatch.rb\n#!/usr/bin/ruby\n# coding: utf-8\ncmd = \"patch -b -p0 < \"\nARGV.each {|file|\n    `#{cmd + file + \" 2>&1\"}`  # for sh/bash\n}\n```\n```search.py.patch\n--- /usr/local/lib/python2.7/site-packages/pip/commands/search.py\n+++ search.py.orig\n@@ -47,7 +47,7 @@\n         if sys.stdout.isatty():\n             terminal_width = get_terminal_size()[0]\n \n-        print_results(hits, terminal_width=terminal_width)\n+        print_results(hits, query, terminal_width=terminal_width)\n         if pypi_hits:\n             return SUCCESS\n         return NO_MATCHES_FOUND\n@@ -101,7 +101,7 @@\n     return package_list\n \n \n-def print_results(hits, name_column_width=25, terminal_width=None):\n+def print_results(hits, query, name_column_width=25, terminal_width=None):\n     installed_packages = [p.project_name for p in pkg_resources.working_set]\n     for hit in hits:\n         name = hit['name']\n@@ -125,6 +125,11 @@\n                     else:\n                         logger.info('INSTALLED: %s', dist.version)\n                         logger.info('LATEST:    %s', latest)\n+            elif in_case_insensitive(name, query):\n+                latest = highest_version(hit['versions'])\n+                logger.info('  LATEST:    %s (not installed)' % latest)\n+            if in_case_insensitive(name, query):\n+                logger.info('  %s/%s' % (PyPI.pypi_url, name))\n         except UnicodeEncodeError:\n             pass\n \n@@ -133,3 +138,7 @@\n     return next(iter(\n         sorted(versions, key=pkg_resources.parse_version, reverse=True)\n     ))\n+\n+def in_case_insensitive(x, list):\n+    return x.lower() in [y.lower() for y in list]\n+\n```\n", "tags": ["Python", "pip"]}