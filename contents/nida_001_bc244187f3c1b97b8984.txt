{"context": " More than 1 year has passed since last update.\u7d14\u7c8b\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u6700\u521d\u306b\u6319\u3052\u3089\u308c\u3066\u3044\u308b\u306e\u304cLeftist Heap\u3067\u3059\uff0e\u65e5\u672c\u8a9e\u306b\u8a33\u3059\u3068\u5de6\u7ffc\u30d2\u30fc\u30d7\u3067\u3057\u3087\u3046\u304b\uff08\uff1f\uff09\u672c\u8a18\u4e8b\u306b\u3066\u30ac\u30c3\u30c4\u30ea\u7d39\u4ecb\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3089\u65e2\u306b\u7d39\u4ecb\u8a18\u4e8b\u3042\u308a\u307e\u3057\u305f\u304c\u307e\u3041\u3084\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059(\u00b4\uff65\uff3f\uff65`)\n\u3055\u3089\u306b\u53c2\u8003: http://en.wikipedia.org/wiki/Leftist_tree \uff08\u3053\u3061\u3089\u3067\u306fleftist tree\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u6a21\u69d8\uff09\n\nLeftist Heap\u57fa\u672c\n\u30d2\u30fc\u30d7\u306f\uff0c\u512a\u5148\u5ea6\u4ed8\u304d\u30ad\u30e5\u30fc\u3068\u3082\u547c\u3070\u308c\u3066\u304a\u308a\uff0c\u8ffd\u52a0\u3055\u308c\u305f\u5024\u3092\u5c0f\u3055\u3044\u9806\uff0c\u3082\u3057\u304f\u306f\u5927\u304d\u3044\u9806\u3067\u53d6\u308a\u51fa\u3059\uff0c\u3044\u308f\u3086\u308b\u30b3\u30f3\u30c6\u30ca\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\uff0e\uff08\u306a\u304a\uff0c\u4ee5\u964d\u3067\u306f\uff0c\u5c0f\u3055\u3044\u9806\u306e\u5834\u5408\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\uff0e\uff09\u5185\u90e8\u7684\u306b\u306f\u4e00\u7a2e\u306e\u4e8c\u5206\u6728\u3067\u3042\u308a\uff0c\u6728\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\uff0c\u9802\u70b9\u4e00\u3064\u306b\u30c7\u30fc\u30bf\u304c\u4e00\u3064\u3068\uff0c\u5de6\u53f3\u306e\u5b50\u306e\u9802\u70b9\u3078\u306e\u53c2\u7167\u3092\u6301\u3061\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u9802\u70b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u7bc4\u56f2\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u8981\u7d20\u304c\u30d2\u30fc\u30d7\u306e\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\uff0e\n\u307e\u305a\uff0c\u30d2\u30fc\u30d7\u3067\u3059\u306e\u3067\uff0c\u6700\u5c0f\u5024\u3092\u53d6\u308a\u51fa\u3057\u3084\u3059\u3044\u3088\u3046\u306b\uff0c\u89aa\u9802\u70b9\u306f\u5b50\u9802\u70b9\u3088\u308a\u3082\u5c0f\u3055\u306a\u8981\u7d20\u3092\u5fc5\u305a\u6301\u3064\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u4ee5\u4e0b\u304c\u6210\u308a\u7acb\u3061\u307e\u3059\uff0e\n\n\u6839\u306f\u6700\u5c0f\u5024\u3092\u6301\u3064\n\n\n\u554f\u984c\u306f\uff0c\u8981\u7d20\u306e\u633f\u5165\u3092\u5982\u4f55\u306b\u65e9\u304f\u3059\u308b\u304b\u3067\u3059\uff0eleftist heap\u3067\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6761\u4ef6\u3092\u5e38\u306b\u6e80\u305f\u3059\u3088\u3046\u306b\u6728\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3067\uff0c\u633f\u5165\u3092O(log n)\u306b\u6291\u3048\u307e\u3059\uff0e\n\n\u5404\u9802\u70b9\u306b\u30e9\u30f3\u30af\u3092\u5b9a\u7fa9\u3059\u308b\uff0e\u3042\u308b\u9802\u70b9\u306e\u30e9\u30f3\u30af\u3068\u306f\uff0c\u305d\u306e\u9802\u70b9\u304b\u3089\u53f3\u306e\u5b50\u3092\u305f\u3069\u308a\u7d9a\u3051\u3066\u7a7a\u9802\u70b9\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u306e\u8ddd\u96e2\u3067\u3042\u308b\uff0e\n\u5168\u3066\u306e\u9802\u70b9\u306b\u304a\u3044\u3066\uff0c\u3042\u308b\u9802\u70b9v\u306e\u5de6\u306e\u5b50vl\u306e\u30e9\u30f3\u30af\u306f\uff0cvl\u306e\u5144\u5f1fvr\uff08\u3064\u307e\u308av\u306e\n\u53f3\u306e\u5b50\uff09\u306e\u30e9\u30f3\u30af\u4ee5\u4e0a\u306e\u5024\u3092\u6301\u3064\n\n\n\u3064\u307e\u308a\uff0c\u2200v, rank(vl) >= rank(vr) where vl = left_child(v), vr=right_child(vr)\n\n\n\n\n\u76f4\u611f\u7684\u306b\u306f\uff0c\u5de6\u5074\u306f\u9577\u304f\uff0c\u53f3\u5074\u306f\u77ed\u304f\uff0c\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff0e\n\u203b \u6ce8\u610f\u70b9\uff1a \u3053\u306e\u624b\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u306f\u73cd\u3057\u304f\uff08\uff1f\uff09\uff0cLeftist Heap\u306f\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9\u306a\u6728\u3092\u6301\u3061\u307e\u3059\uff0e\u76f4\u7dda\u306b\u8fd1\u3044\u6728\u3092\u3064\u304f\u308b\u3088\u3046\u3067\u3059\uff0e\n\n\u6700\u5c0f\u5024\u306e\u53d6\u5f97\uff0c\u524a\u9664\uff0c\u633f\u5165\n\u6700\u5c0f\u5024\u306f\u4e0a\u3067\u3082\u8ff0\u3079\u305f\u901a\u308a\uff0c\u6839\u304c\u6301\u3064\u8981\u7d20\u3067\u3042\u308b\u305f\u3081\uff0c\u30d2\u30fc\u30d7h\u306b\u5bfe\u3057\u3066\uff0c\u6700\u5c0f\u5024\u306e\u53d6\u5f97\u95a2\u6570findMin\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\nfindMin(h) = h\u306e\u6839\u304c\u6301\u3064\u8981\u7d20\n\n\u306a\u304a\uff0c\u30d2\u30fc\u30d7\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u3082\u3064\u5834\u5408\u306f\uff0c\u6839\u306e\u53c2\u7167\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308b\u305f\u3081\uff0c\u3053\u306e\u95a2\u6570\u306fh\u81ea\u8eab\u306e\u6301\u3064\u8981\u7d20\u3092\u8fd4\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\uff0e\n\u6b21\u306b\uff0c\u524a\u9664deleteMin\u306b\u3064\u3044\u3066\u306f\uff0c\u6839\u306e\u6301\u3064\u8981\u7d20\u4ee5\u5916\u306e\u3082\u306e\u3092\u542b\u3093\u3060Leftist Heap\u3092\u8fd4\u305b\u3070\u3088\u3044\u305f\u3081\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\ndeleteMin(h) = \u6839\u306e\u5de6\u53f3\u306e\u5b50\u3092\u30de\u30fc\u30b8\u3057\uff0c\u65b0\u305f\u306a\u6728\u3092\u4f5c\u308a\uff0c\u305d\u306e\u6839\u3092\u8fd4\u3059\uff0e\n\n\n\n\u633f\u5165(insert)\u306f\u524a\u9664\u306e\u969b\u306b\u4f7f\u3046\u30de\u30fc\u30b8\u95a2\u6570\u3092\u4f7f\u3046\u3068\uff0c\u6b21\u306e\u3088\u3046\u306b\u3042\u3063\u3055\u308a\u5b9a\u7fa9\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\n\ninsert(x, h) = \u8981\u7d20x\u3060\u3051\u3092\u6301\u3064\u6728\u3068\uff0ch\u3068\u3092\u30de\u30fc\u30b8\u3057\uff0c\u65b0\u305f\u306a\u6728\u3092\u4f5c\u308a\uff0c\u305d\u306e\u6839\u3092\u8fd4\u3059\uff0e\n\n\u3064\u307e\u308a\uff0c\u30de\u30fc\u30b8\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u5168\u90e8\u4e0a\u624b\u304f\u3044\u304f\u3093\u3067\u3059\uff01\u3068\u3044\u3046\u3053\u3068\u3067\u6b21\u306f\u30de\u30fc\u30b8\u95a2\u6570\u306e\u8aac\u660e\u3092\u3057\u307e\u3059\uff0e\n\nLeftist Heap\u306e\u30de\u30fc\u30b8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \uff08\u8981\u7d20\u306e\u633f\u5165\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3082\u3042\u308b\uff09\n\u30de\u30fc\u30b8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5f15\u6570\u306f\uff0c\u4e8c\u3064\u306e\u30d2\u30fc\u30d7\u3067\u3042\u308a\uff0ch1, h2\u3068\u304a\u304d\u307e\u3059\uff0e\n\nh1\u307e\u305f\u306fh2\u306e\u3069\u3061\u3089\u304b\u304c\u7a7a\u306a\u3089\u3070\uff0c\u7a7a\u3067\u306a\u3044\u65b9\u3092\u8fd4\u3059\uff0e\u4e21\u65b9\u3068\u3082\u7a7a\u306a\u3089\u3070\uff0c\u7a7a\u3092\u8fd4\u3059\uff0e\n\u4e21\u65b9\u5171\u304b\u3089\u3067\u306a\u3044\u5834\u5408\n\n\n\u307e\u305a\uff0c\u6700\u5c0f\u5024\u3092\u6301\u3064\u30d2\u30fc\u30d7\u304c\u3069\u3061\u3089\u304b\u7279\u5b9a\u3059\u308b\uff0e\u3053\u308c\u306fh1\u3068h2\u306e\u6839\u306e\u8981\u7d20\u3092\u898b\u308c\u3070\u826f\u3044\uff0e\nh1\u304c\u6700\u5c0f\u5024x\u3092\u6301\u3064\u3068\u3059\u308b\uff0eh1\u306e\u5de6\u306e\u5b50l\u3068\uff0ch1\u306e\u53f3\u306e\u5b50\u3068h2\u3092\u30de\u30fc\u30b8\u3057\u305f\u3082\u306ev'\u3092\u6c42\u3081\u308b\uff0e\nl\u3068v'\u306e\u3046\u3061\uff0c\u30e9\u30f3\u30af\u306e\u5927\u304d\u3044\u65b9\u3092\u5de6\u306e\u5b50\u306b\uff0c\u5c0f\u3055\u3044\u65b9\u3092\u53f3\u306e\u5b50\u306b\u3057\u3066\uff0c\u8981\u7d20x\u3092\u6301\u3064\u9802\u70b9\u3092\u8fd4\u3059\uff0e\n\n\n\n\n\n\u8a08\u7b97\u91cf\u306b\u3064\u3044\u3066\n\ninsert : O(log n)\nfindMin : O(1)\ndeleteMin : O(log n)\n\n\n\u5b9f\u88c5\n\u4ee5\u4e0a\u3092F#\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u304c\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n// Leftist Tree\u306e\u578b\u5b9a\u7fa9\ntype Heap<'a when 'a : comparison> =\n    | E                   // \u7a7a\u9802\u70b9 \n    | T of                // \u9802\u70b9\u306f\u4ee5\u4e0b\u306e4\u8981\u7d20\u3092\u6301\u3064\n        rank : int *      // \u3044\u3061\u3044\u3061\u30e9\u30f3\u30af\u3092\u518d\u8a08\u7b97\u3057\u305f\u304f\u306a\u3044\u306e\u3067\uff0c\u9802\u70b9\u306b\u4fdd\u6301\n        element : 'a *    // \u8981\u7d20\n        left : Heap<'a> * // \u53f3\u306e\u5b50\n        right : Heap<'a>  // \u5de6\u306e\u5b50\n\n// \u30e9\u30f3\u30af\u3092\u8fd4\u3059\u95a2\u6570\nlet rank = function\n    | E -> 0\n    | (T(r, _, _, _)) -> r\n\nlet empty = E\n\nlet isEmpty = function\n    | E -> true\n    | _ -> false\n\n// \u30de\u30fc\u30b8\u306e\u88dc\u52a9\u95a2\u6570\uff0e\u8981\u7d20+\u4e8c\u3064\u306e\u5b50\u8981\u7d20\u5019\u88dc\u304b\u3089\uff0c\u9802\u70b9\u3092\u4f5c\u6210\uff0e\u30e9\u30f3\u30af\u306e\u5927\u304d\u3044\u65b9\u3092\u5de6\u5074\u306b\u304a\u304f\uff0e\n// \u8fd4\u3055\u308c\u308b\u9802\u70b9\u306e\u30e9\u30f3\u30af\u306f\u53f3\u306e\u30e9\u30f3\u30af+1\u3068\u306a\u308b\uff0e\nlet makeT x a b =\n    if rank a >= rank b then T(rank b + 1, x, a, b)\n    else T(rank a + 1, x, b, a)\n\n// \u30de\u30fc\u30b8\u95a2\u6570\uff0c\u5c0f\u3055\u3044\u65b9\u3092\u89aa\u306b\u6301\u3063\u3066\u304d\u3066\u6b8b\u308a\u3092\u4e0a\u624b\u304f\u6df7\u305c\u308b\nlet rec merge h1 h2 = \n    match (h1, h2) with\n    | (E, _) -> h2\n    | (_, E) -> h1\n    | (T(_, x, a1, b1), T(_, y, a2, b2)) ->\n        if x <= y then makeT x a1 (merge b1 h2)\n        else makeT y a2 (merge h1 b2)\n\n// \u633f\u5165\u306f\u4e00\u8981\u7d20\u306e\u8ffd\u52a0\u3068\u3057\u3066\u5b9f\u88c5\nlet insert x h = merge (T(1, x, E, E)) h\n\n// \u6839\u306e\u8981\u7d20\u3092\u8fd4\u3059\nlet findMin = function\n    | E -> failwith \"this is empty heap\"\n    | (T(_, x, a, b)) -> x\n\n// \u6839\u3092\u524a\u9664\u3057\u3066\u6b8b\u308a\u3092\u30de\u30fc\u30b8\nlet deleteMin = function\n    | E -> failwith \"this is empty heap\"\n    | (T(_, x, a, b)) -> merge a b\n\n\n\u4f7f\u7528\u4f8b\n\u307e\u305a\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306apretyprint\u95a2\u6570\u3092\u9069\u5f53\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\uff0e\nlet rec pretyprint t y = \n    match t with\n    | E -> printfn \"%s()\" (new String(' ', y))\n    | (T(r, x, a, b)) ->\n        pretyprint a (y+4)\n        printfn \"%selem=%A, rank=%A\" (new String(' ', y)) x r\n        pretyprint b (y+4)\n\n\u3053\u306e\u95a2\u6570\u306b\u3088\u308a\uff0c\u4e0a\u304c\u5de6\u306e\u5b50\uff0c\u4e0b\u304c\u53f3\u306e\u5b50\u306b\u306a\u308b\u3088\u3046\u306a\u6728\u306e\u8868\u793a\u3092\u884c\u3044\u307e\u3059\uff0e\n\u3067\u306f\uff0c\u4f8b\u3092\u7d39\u4ecb\uff0e\n1. 1\u304b\u30895\u3092\u9806\u306b\u8ffd\u52a0\u3057\u305f\u5834\u5408\uff0e\n====================\n    ()\nelem=1, rank=1\n    ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=1\n    ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=2\n        ()\n    elem=3, rank=1\n        ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=2\n            ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=1\n        ()\n====================\n====================\n            ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=2\n            ()\n        elem=5, rank=1\n            ()\nelem=1, rank=2\n        ()\n    elem=2, rank=1\n        ()\n====================\n\n\u4e0a\u624b\u304f\u6df7\u305c\u3089\u308c\u306a\u304c\u3089\u6728\u304c\u6210\u9577\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3067\u306f\uff0c\u9006\u306b5\u304b\u3089\u59cb\u307e\u308a1\u307e\u3067\u3092\u9806\u306b\u8ffd\u52a0\u3057\u305f\u5834\u5408\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\uff0e\n====================\n    ()\nelem=5, rank=1\n    ()\n====================\n====================\n        ()\n    elem=5, rank=1\n        ()\nelem=4, rank=1\n    ()\n====================\n====================\n            ()\n        elem=5, rank=1\n            ()\n    elem=4, rank=1\n        ()\nelem=3, rank=1\n    ()\n====================\n====================\n                ()\n            elem=5, rank=1\n                ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=1\n        ()\nelem=2, rank=1\n    ()\n====================\n====================\n                    ()\n                elem=5, rank=1\n                    ()\n            elem=4, rank=1\n                ()\n        elem=3, rank=1\n            ()\n    elem=2, rank=1\n        ()\nelem=1, rank=1\n    ()\n====================\n====================\n                        ()\n                    elem=5, rank=1\n                        ()\n                elem=4, rank=1\n                    ()\n            elem=3, rank=1\n                ()\n        elem=2, rank=1\n            ()\n    elem=1, rank=1\n        ()\nelem=0, rank=1\n    ()\n====================\n\n\u306a\u3093\u3068\uff0c\u5de6\u306b\u3060\u3051\u4f38\u3073\u3066\u3044\u304d\u307e\u3059\uff0e\u30d0\u30e9\u30f3\u30b9\u3082\u30af\u30bd\u3082\u3042\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u30d2\u30fc\u30d7\u3068\u3057\u3066\u306f\u3053\u308c\u3067\u3044\u3044\u3088\u3046\u3067\u3059\uff0e\u8981\u7d20\u306e\u633f\u5165\u6642\u306f\uff0c\u633f\u5165\u3055\u308c\u305f\u8981\u7d20\u3092\u5143\u306e\u6728\u306e\u66f4\u306b\u4e0a\u306b\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308a\uff0c\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u51fa\u6765\u307e\u3059\uff0e\n\n\u307e\u3068\u3081\n\u672c\u8a18\u4e8b\u3067\u306f\uff0cLeftist Heap\u306e\u89e3\u8aac\u3092\u66f8\u304d\u307e\u3057\u305f\uff0e\u5b9f\u88c5\u304c\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u3059\u3080\u306e\u304c\u826f\u3044\u3068\u3053\u308d\u3060\u3068\u601d\u3044\u307e\u3059\uff0e\u6b21\u56de\u306fBinomial Heap\u3092\u66f8\u304f\u4e88\u5b9a\uff0e\n\u7d14\u7c8b\u95a2\u6570\u578b\u30c7\u30fc\u30bf\u69cb\u9020\u3068\u3057\u3066\u6700\u521d\u306b\u6319\u3052\u3089\u308c\u3066\u3044\u308b\u306e\u304cLeftist Heap\u3067\u3059\uff0e\u65e5\u672c\u8a9e\u306b\u8a33\u3059\u3068\u5de6\u7ffc\u30d2\u30fc\u30d7\u3067\u3057\u3087\u3046\u304b\uff08\uff1f\uff09\u672c\u8a18\u4e8b\u306b\u3066\u30ac\u30c3\u30c4\u30ea\u7d39\u4ecb\u3057\u3088\u3046\u304b\u3068\u601d\u3063\u305f\u3089\u65e2\u306b[\u7d39\u4ecb\u8a18\u4e8b](http://d.hatena.ne.jp/propella/20091123/p1)\u3042\u308a\u307e\u3057\u305f\u304c\u307e\u3041\u3084\u3063\u3066\u3044\u3053\u3046\u3068\u601d\u3044\u307e\u3059(\u00b4\uff65\uff3f\uff65`)\n\n\u3055\u3089\u306b\u53c2\u8003: http://en.wikipedia.org/wiki/Leftist_tree \uff08\u3053\u3061\u3089\u3067\u306fleftist tree\u3068\u547c\u3070\u308c\u3066\u3044\u308b\u6a21\u69d8\uff09\n\n# Leftist Heap\u57fa\u672c\n\n\u30d2\u30fc\u30d7\u306f\uff0c\u512a\u5148\u5ea6\u4ed8\u304d\u30ad\u30e5\u30fc\u3068\u3082\u547c\u3070\u308c\u3066\u304a\u308a\uff0c\u8ffd\u52a0\u3055\u308c\u305f\u5024\u3092\u5c0f\u3055\u3044\u9806\uff0c\u3082\u3057\u304f\u306f\u5927\u304d\u3044\u9806\u3067\u53d6\u308a\u51fa\u3059\uff0c\u3044\u308f\u3086\u308b\u30b3\u30f3\u30c6\u30ca\u306a\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3059\uff0e\uff08\u306a\u304a\uff0c\u4ee5\u964d\u3067\u306f\uff0c\u5c0f\u3055\u3044\u9806\u306e\u5834\u5408\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3059\uff0e\uff09\u5185\u90e8\u7684\u306b\u306f\u4e00\u7a2e\u306e\u4e8c\u5206\u6728\u3067\u3042\u308a\uff0c\u6728\u3067\u30c7\u30fc\u30bf\u3092\u7ba1\u7406\u3057\uff0c\u9802\u70b9\u4e00\u3064\u306b\u30c7\u30fc\u30bf\u304c\u4e00\u3064\u3068\uff0c\u5de6\u53f3\u306e\u5b50\u306e\u9802\u70b9\u3078\u306e\u53c2\u7167\u3092\u6301\u3061\u307e\u3059\uff0e\u305d\u3057\u3066\uff0c\u9802\u70b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306a\u7bc4\u56f2\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u8981\u7d20\u304c\u30d2\u30fc\u30d7\u306e\u8981\u7d20\u3068\u306a\u308a\u307e\u3059\uff0e\n\n\u307e\u305a\uff0c\u30d2\u30fc\u30d7\u3067\u3059\u306e\u3067\uff0c\u6700\u5c0f\u5024\u3092\u53d6\u308a\u51fa\u3057\u3084\u3059\u3044\u3088\u3046\u306b\uff0c\u89aa\u9802\u70b9\u306f\u5b50\u9802\u70b9\u3088\u308a\u3082\u5c0f\u3055\u306a\u8981\u7d20\u3092\u5fc5\u305a\u6301\u3064\u3088\u3046\u306b\u3057\u307e\u3059\uff0e\u3088\u3063\u3066\uff0c\u4ee5\u4e0b\u304c\u6210\u308a\u7acb\u3061\u307e\u3059\uff0e\n\n* **\u6839\u306f\u6700\u5c0f\u5024\u3092\u6301\u3064**\n \n![\u56f31.png](https://qiita-image-store.s3.amazonaws.com/0/58722/4d6fa5b9-e922-9bbd-88fd-f4bcc9aa724e.png)\n\n\n\n\u554f\u984c\u306f\uff0c\u8981\u7d20\u306e\u633f\u5165\u3092\u5982\u4f55\u306b\u65e9\u304f\u3059\u308b\u304b\u3067\u3059\uff0eleftist heap\u3067\u306f\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6761\u4ef6\u3092\u5e38\u306b\u6e80\u305f\u3059\u3088\u3046\u306b\u6728\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u3067\uff0c\u633f\u5165\u3092O(log n)\u306b\u6291\u3048\u307e\u3059\uff0e\n\n* \u5404\u9802\u70b9\u306b***\u30e9\u30f3\u30af***\u3092\u5b9a\u7fa9\u3059\u308b\uff0e\u3042\u308b\u9802\u70b9\u306e\u30e9\u30f3\u30af\u3068\u306f\uff0c\u305d\u306e\u9802\u70b9\u304b\u3089\u53f3\u306e\u5b50\u3092\u305f\u3069\u308a\u7d9a\u3051\u3066\u7a7a\u9802\u70b9\u306b\u5230\u9054\u3059\u308b\u307e\u3067\u306e\u8ddd\u96e2\u3067\u3042\u308b\uff0e\n* \u5168\u3066\u306e\u9802\u70b9\u306b\u304a\u3044\u3066\uff0c\u3042\u308b\u9802\u70b9v\u306e\u5de6\u306e\u5b50vl\u306e\u30e9\u30f3\u30af\u306f\uff0cvl\u306e\u5144\u5f1fvr\uff08\u3064\u307e\u308av\u306e\n\u53f3\u306e\u5b50\uff09\u306e\u30e9\u30f3\u30af\u4ee5\u4e0a\u306e\u5024\u3092\u6301\u3064\n * \u3064\u307e\u308a\uff0c\u2200v, rank(vl) >= rank(vr) where vl = left_child(v), vr=right_child(vr)\n  \n![\u7121\u984c.png](https://qiita-image-store.s3.amazonaws.com/0/58722/bd807e3e-9daa-22d7-c493-9870fc399182.png)\n\n\n\u76f4\u611f\u7684\u306b\u306f\uff0c\u5de6\u5074\u306f\u9577\u304f\uff0c\u53f3\u5074\u306f\u77ed\u304f\uff0c\u3068\u3044\u3046\u3053\u3068\u3067\u3057\u3087\u3046\u304b\uff0e\n\n\u203b \u6ce8\u610f\u70b9\uff1a \u3053\u306e\u624b\u306e\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u306f\u73cd\u3057\u304f\uff08\uff1f\uff09\uff0cLeftist Heap\u306f**\u30a2\u30f3\u30d0\u30e9\u30f3\u30b9**\u306a\u6728\u3092\u6301\u3061\u307e\u3059\uff0e\u76f4\u7dda\u306b\u8fd1\u3044\u6728\u3092\u3064\u304f\u308b\u3088\u3046\u3067\u3059\uff0e\n\n# \u6700\u5c0f\u5024\u306e\u53d6\u5f97\uff0c\u524a\u9664\uff0c\u633f\u5165\n\u6700\u5c0f\u5024\u306f\u4e0a\u3067\u3082\u8ff0\u3079\u305f\u901a\u308a\uff0c\u6839\u304c\u6301\u3064\u8981\u7d20\u3067\u3042\u308b\u305f\u3081\uff0c\u30d2\u30fc\u30d7h\u306b\u5bfe\u3057\u3066\uff0c\u6700\u5c0f\u5024\u306e\u53d6\u5f97\u95a2\u6570findMin\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n* findMin(h) = h\u306e\u6839\u304c\u6301\u3064\u8981\u7d20\n\n\u306a\u304a\uff0c\u30d2\u30fc\u30d7\u3092\u30d7\u30ed\u30b0\u30e9\u30e0\u4e2d\u3067\u3082\u3064\u5834\u5408\u306f\uff0c\u6839\u306e\u53c2\u7167\u3092\u6301\u3064\u3053\u3068\u306b\u306a\u308b\u305f\u3081\uff0c\u3053\u306e\u95a2\u6570\u306fh\u81ea\u8eab\u306e\u6301\u3064\u8981\u7d20\u3092\u8fd4\u3057\u3066\u3044\u308b\u3053\u3068\u3067\u3082\u3042\u308a\u307e\u3059\uff0e\n\n\u6b21\u306b\uff0c\u524a\u9664deleteMin\u306b\u3064\u3044\u3066\u306f\uff0c\u6839\u306e\u6301\u3064\u8981\u7d20\u4ee5\u5916\u306e\u3082\u306e\u3092\u542b\u3093\u3060Leftist Heap\u3092\u8fd4\u305b\u3070\u3088\u3044\u305f\u3081\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\uff0e\n\n* deleteMin(h) = \u6839\u306e\u5de6\u53f3\u306e\u5b50\u3092\u30de\u30fc\u30b8\u3057\uff0c\u65b0\u305f\u306a\u6728\u3092\u4f5c\u308a\uff0c\u305d\u306e\u6839\u3092\u8fd4\u3059\uff0e\n![\u7121\u984c2.png](https://qiita-image-store.s3.amazonaws.com/0/58722/2fde5827-d01b-c774-a17c-165e6a2d843d.png)\n\n\n\u633f\u5165(insert)\u306f\u524a\u9664\u306e\u969b\u306b\u4f7f\u3046\u30de\u30fc\u30b8\u95a2\u6570\u3092\u4f7f\u3046\u3068\uff0c\u6b21\u306e\u3088\u3046\u306b\u3042\u3063\u3055\u308a\u5b9a\u7fa9\u3067\u304d\u3066\u3057\u307e\u3044\u307e\u3059\uff0e\n\n* insert(x, h) = \u8981\u7d20x\u3060\u3051\u3092\u6301\u3064\u6728\u3068\uff0ch\u3068\u3092\u30de\u30fc\u30b8\u3057\uff0c\u65b0\u305f\u306a\u6728\u3092\u4f5c\u308a\uff0c\u305d\u306e\u6839\u3092\u8fd4\u3059\uff0e\n\n\u3064\u307e\u308a\uff0c\u30de\u30fc\u30b8\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308c\u3070\u5168\u90e8\u4e0a\u624b\u304f\u3044\u304f\u3093\u3067\u3059\uff01\u3068\u3044\u3046\u3053\u3068\u3067\u6b21\u306f\u30de\u30fc\u30b8\u95a2\u6570\u306e\u8aac\u660e\u3092\u3057\u307e\u3059\uff0e\n\n# Leftist Heap\u306e\u30de\u30fc\u30b8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 \uff08\u8981\u7d20\u306e\u633f\u5165\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3082\u3042\u308b\uff09\n\u30de\u30fc\u30b8\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u5f15\u6570\u306f\uff0c\u4e8c\u3064\u306e\u30d2\u30fc\u30d7\u3067\u3042\u308a\uff0ch1, h2\u3068\u304a\u304d\u307e\u3059\uff0e\n\n* h1\u307e\u305f\u306fh2\u306e\u3069\u3061\u3089\u304b\u304c\u7a7a\u306a\u3089\u3070\uff0c\u7a7a\u3067\u306a\u3044\u65b9\u3092\u8fd4\u3059\uff0e\u4e21\u65b9\u3068\u3082\u7a7a\u306a\u3089\u3070\uff0c\u7a7a\u3092\u8fd4\u3059\uff0e\n* \u4e21\u65b9\u5171\u304b\u3089\u3067\u306a\u3044\u5834\u5408\n * \u307e\u305a\uff0c\u6700\u5c0f\u5024\u3092\u6301\u3064\u30d2\u30fc\u30d7\u304c\u3069\u3061\u3089\u304b\u7279\u5b9a\u3059\u308b\uff0e\u3053\u308c\u306fh1\u3068h2\u306e\u6839\u306e\u8981\u7d20\u3092\u898b\u308c\u3070\u826f\u3044\uff0e\n * h1\u304c\u6700\u5c0f\u5024x\u3092\u6301\u3064\u3068\u3059\u308b\uff0eh1\u306e\u5de6\u306e\u5b50l\u3068\uff0ch1\u306e\u53f3\u306e\u5b50\u3068h2\u3092\u30de\u30fc\u30b8\u3057\u305f\u3082\u306ev'\u3092\u6c42\u3081\u308b\uff0e\n * l\u3068v'\u306e\u3046\u3061\uff0c\u30e9\u30f3\u30af\u306e\u5927\u304d\u3044\u65b9\u3092\u5de6\u306e\u5b50\u306b\uff0c\u5c0f\u3055\u3044\u65b9\u3092\u53f3\u306e\u5b50\u306b\u3057\u3066\uff0c\u8981\u7d20x\u3092\u6301\u3064\u9802\u70b9\u3092\u8fd4\u3059\uff0e\n\n![\u7121\u984c3.png](https://qiita-image-store.s3.amazonaws.com/0/58722/99527e34-4817-97be-7f23-d254702b45dd.png)\n\n# \u8a08\u7b97\u91cf\u306b\u3064\u3044\u3066\n* insert : O(log n)\n* findMin : O(1)\n* deleteMin : O(log n)\n\n# \u5b9f\u88c5\n\u4ee5\u4e0a\u3092F#\u3067\u5b9f\u88c5\u3057\u3066\u307f\u305f\u306e\u304c\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059\uff0e\n\n```fsharp\n// Leftist Tree\u306e\u578b\u5b9a\u7fa9\ntype Heap<'a when 'a : comparison> =\n    | E                   // \u7a7a\u9802\u70b9 \n    | T of                // \u9802\u70b9\u306f\u4ee5\u4e0b\u306e4\u8981\u7d20\u3092\u6301\u3064\n        rank : int *      // \u3044\u3061\u3044\u3061\u30e9\u30f3\u30af\u3092\u518d\u8a08\u7b97\u3057\u305f\u304f\u306a\u3044\u306e\u3067\uff0c\u9802\u70b9\u306b\u4fdd\u6301\n        element : 'a *    // \u8981\u7d20\n        left : Heap<'a> * // \u53f3\u306e\u5b50\n        right : Heap<'a>  // \u5de6\u306e\u5b50\n\n// \u30e9\u30f3\u30af\u3092\u8fd4\u3059\u95a2\u6570\nlet rank = function\n    | E -> 0\n    | (T(r, _, _, _)) -> r\n    \nlet empty = E\n\nlet isEmpty = function\n    | E -> true\n    | _ -> false\n\n// \u30de\u30fc\u30b8\u306e\u88dc\u52a9\u95a2\u6570\uff0e\u8981\u7d20+\u4e8c\u3064\u306e\u5b50\u8981\u7d20\u5019\u88dc\u304b\u3089\uff0c\u9802\u70b9\u3092\u4f5c\u6210\uff0e\u30e9\u30f3\u30af\u306e\u5927\u304d\u3044\u65b9\u3092\u5de6\u5074\u306b\u304a\u304f\uff0e\n// \u8fd4\u3055\u308c\u308b\u9802\u70b9\u306e\u30e9\u30f3\u30af\u306f\u53f3\u306e\u30e9\u30f3\u30af+1\u3068\u306a\u308b\uff0e\nlet makeT x a b =\n    if rank a >= rank b then T(rank b + 1, x, a, b)\n    else T(rank a + 1, x, b, a)\n\n// \u30de\u30fc\u30b8\u95a2\u6570\uff0c\u5c0f\u3055\u3044\u65b9\u3092\u89aa\u306b\u6301\u3063\u3066\u304d\u3066\u6b8b\u308a\u3092\u4e0a\u624b\u304f\u6df7\u305c\u308b\nlet rec merge h1 h2 = \n    match (h1, h2) with\n    | (E, _) -> h2\n    | (_, E) -> h1\n    | (T(_, x, a1, b1), T(_, y, a2, b2)) ->\n        if x <= y then makeT x a1 (merge b1 h2)\n        else makeT y a2 (merge h1 b2)\n\n// \u633f\u5165\u306f\u4e00\u8981\u7d20\u306e\u8ffd\u52a0\u3068\u3057\u3066\u5b9f\u88c5\nlet insert x h = merge (T(1, x, E, E)) h\n\n// \u6839\u306e\u8981\u7d20\u3092\u8fd4\u3059\nlet findMin = function\n    | E -> failwith \"this is empty heap\"\n    | (T(_, x, a, b)) -> x\n\n// \u6839\u3092\u524a\u9664\u3057\u3066\u6b8b\u308a\u3092\u30de\u30fc\u30b8\nlet deleteMin = function\n    | E -> failwith \"this is empty heap\"\n    | (T(_, x, a, b)) -> merge a b\n```\n\n# \u4f7f\u7528\u4f8b\n\n\u307e\u305a\uff0c\u4ee5\u4e0b\u306e\u3088\u3046\u306apretyprint\u95a2\u6570\u3092\u9069\u5f53\u306b\u5b9a\u7fa9\u3057\u307e\u3057\u305f\uff0e\n\n```fsharp\nlet rec pretyprint t y = \n    match t with\n    | E -> printfn \"%s()\" (new String(' ', y))\n    | (T(r, x, a, b)) ->\n        pretyprint a (y+4)\n        printfn \"%selem=%A, rank=%A\" (new String(' ', y)) x r\n        pretyprint b (y+4)\n```\n\u3053\u306e\u95a2\u6570\u306b\u3088\u308a\uff0c**\u4e0a\u304c\u5de6\u306e\u5b50\uff0c\u4e0b\u304c\u53f3\u306e\u5b50**\u306b\u306a\u308b\u3088\u3046\u306a\u6728\u306e\u8868\u793a\u3092\u884c\u3044\u307e\u3059\uff0e\n\n\u3067\u306f\uff0c\u4f8b\u3092\u7d39\u4ecb\uff0e\n1. 1\u304b\u30895\u3092\u9806\u306b\u8ffd\u52a0\u3057\u305f\u5834\u5408\uff0e\n\n```text\n====================\n    ()\nelem=1, rank=1\n    ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=1\n    ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=2\n        ()\n    elem=3, rank=1\n        ()\n====================\n====================\n        ()\n    elem=2, rank=1\n        ()\nelem=1, rank=2\n            ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=1\n        ()\n====================\n====================\n            ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=2\n            ()\n        elem=5, rank=1\n            ()\nelem=1, rank=2\n        ()\n    elem=2, rank=1\n        ()\n====================\n```\n\n\u4e0a\u624b\u304f\u6df7\u305c\u3089\u308c\u306a\u304c\u3089\u6728\u304c\u6210\u9577\u3057\u3066\u3044\u307e\u3059\uff0e\n\u3067\u306f\uff0c\u9006\u306b5\u304b\u3089\u59cb\u307e\u308a1\u307e\u3067\u3092\u9806\u306b\u8ffd\u52a0\u3057\u305f\u5834\u5408\u306f\u3069\u3046\u306a\u308b\u3067\u3057\u3087\u3046\u304b\uff0e\n\n```\n====================\n    ()\nelem=5, rank=1\n    ()\n====================\n====================\n        ()\n    elem=5, rank=1\n        ()\nelem=4, rank=1\n    ()\n====================\n====================\n            ()\n        elem=5, rank=1\n            ()\n    elem=4, rank=1\n        ()\nelem=3, rank=1\n    ()\n====================\n====================\n                ()\n            elem=5, rank=1\n                ()\n        elem=4, rank=1\n            ()\n    elem=3, rank=1\n        ()\nelem=2, rank=1\n    ()\n====================\n====================\n                    ()\n                elem=5, rank=1\n                    ()\n            elem=4, rank=1\n                ()\n        elem=3, rank=1\n            ()\n    elem=2, rank=1\n        ()\nelem=1, rank=1\n    ()\n====================\n====================\n                        ()\n                    elem=5, rank=1\n                        ()\n                elem=4, rank=1\n                    ()\n            elem=3, rank=1\n                ()\n        elem=2, rank=1\n            ()\n    elem=1, rank=1\n        ()\nelem=0, rank=1\n    ()\n====================\n```\n\n\u306a\u3093\u3068\uff0c\u5de6\u306b\u3060\u3051\u4f38\u3073\u3066\u3044\u304d\u307e\u3059\uff0e\u30d0\u30e9\u30f3\u30b9\u3082\u30af\u30bd\u3082\u3042\u3063\u305f\u3082\u306e\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u304c\uff0c\u30d2\u30fc\u30d7\u3068\u3057\u3066\u306f\u3053\u308c\u3067\u3044\u3044\u3088\u3046\u3067\u3059\uff0e\u8981\u7d20\u306e\u633f\u5165\u6642\u306f\uff0c\u633f\u5165\u3055\u308c\u305f\u8981\u7d20\u3092\u5143\u306e\u6728\u306e\u66f4\u306b\u4e0a\u306b\u8ffd\u52a0\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3042\u308a\uff0c\u975e\u5e38\u306b\u9ad8\u901f\u306b\u52d5\u4f5c\u51fa\u6765\u307e\u3059\uff0e\n\n# \u307e\u3068\u3081\n\u672c\u8a18\u4e8b\u3067\u306f\uff0cLeftist Heap\u306e\u89e3\u8aac\u3092\u66f8\u304d\u307e\u3057\u305f\uff0e\u5b9f\u88c5\u304c\u30b3\u30f3\u30d1\u30af\u30c8\u3067\u3059\u3080\u306e\u304c\u826f\u3044\u3068\u3053\u308d\u3060\u3068\u601d\u3044\u307e\u3059\uff0e\u6b21\u56de\u306fBinomial Heap\u3092\u66f8\u304f\u4e88\u5b9a\uff0e\n\n\n", "tags": ["\u95a2\u6570\u578b\u8a00\u8a9e", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "F#"]}