{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord17scheherazade/\n\u4ed6\u306e\u89e3\u7b54\u4f8b\u306f\u3053\u3061\u3089\nhttp://qiita.com/Nabetani/items/dabe8ec57e0313229552\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nvoid solve(const unsigned long N, char *result)\n{\n    for(unsigned long base = 2; base < N; base++)\n    {\n        unsigned long q, r, buff[30] = {0}, i;\n        for(i=0, q=N, r=N%base; q!=0; i++, q/=base, r=q%base)\n        {\n            buff[i] = r;\n        }\n        int ok = 1;\n        for(int start=0, end=i-1; start<end; start++, end--)\n        {\n            ok &= buff[start]==buff[end];\n        }\n        if(ok)\n        {\n            char tmp[10] = {0};\n            sprintf(tmp, \"%d,\", base);\n            strcat(result, tmp);\n        }\n    }\n}\n\nvoid test(const char* IN, const char* ANS)\n{\n    char result[200] = {0}, emp[2] = \"-\";\n    solve(atoi(IN), result);\n    const char* R = (strlen(result)!=0) ? result: emp;\n    printf(\"%s\\t%s\\n\", R, (strncmp(ANS, R, strlen(ANS))==0) ? \"ok\": \"*** NG ***\");\n}\n\nint main()\n{\n/*0*/ test( \"17301\", \"5,38,100,218,236,5766,17300\" );    \n/*1*/ test( \"2\", \"-\" );    \n/*2*/ test( \"1\", \"-\" );    \n/*3*/ test( \"3\", \"2\" );    \n/*4*/ test( \"4\", \"3\" );    \n/*5*/ test( \"5\", \"2,4\" );    \n/*6*/ test( \"6\", \"5\" );    \n/*7*/ test( \"10\", \"3,4,9\" );    \n/*8*/ test( \"101\", \"10,100\" );    \n/*9*/ test( \"1001\", \"10,25,76,90,142,1000\" );    \n/*10*/ test( \"10001\", \"10,24,30,42,80,100,136,10000\" );    \n/*11*/ test( \"1212\", \"22,100,201,302,403,605,1211\" );    \n/*12*/ test( \"123412\", \"62,100,205,215,30852,61705,123411\" );    \n/*13*/ test( \"5179\", \"5178\" );    \n/*14*/ test( \"4919\", \"4918\" );    \n/*15*/ test( \"5791\", \"5790\" );    \n/*16*/ test( \"5498\", \"2748,5497\" );    \n/*17*/ test( \"453\", \"150,452\" );    \n/*18*/ test( \"134\", \"66,133\" );    \n/*19*/ test( \"8489\", \"27,652,8488\" );    \n/*20*/ test( \"1234\", \"22,616,1233\" );    \n/*21*/ test( \"5497\", \"41,238,5496\" );    \n/*22*/ test( \"4763\", \"19,35,432,4762\" );    \n/*23*/ test( \"3974\", \"17,27,1986,3973\" );    \n/*24*/ test( \"3521\", \"44,55,502,3520\" );    \n/*25*/ test( \"5513\", \"20,38,53,148,5512\" );    \n/*26*/ test( \"8042\", \"23,29,60,4020,8041\" );    \n/*27*/ test( \"7442\", \"37,60,121,3720,7441\" );    \n/*28*/ test( \"4857\", \"25,1618,4856\" );    \n/*29*/ test( \"22843\", \"49,69,91,141,430,22842\" );    \n/*30*/ test( \"194823\", \"84,121,21646,64940,194822\" );    \n/*31*/ test( \"435697\", \"160,169,235,626,1822,435696\" );    \n/*32*/ test( \"142\", \"3,7,70,141\" );    \n/*33*/ test( \"886\", \"5,14,442,885\" );    \n/*34*/ test( \"3102\", \"7,65,93,140,281,516,1033,1550,3101\" );    \n/*35*/ test( \"17326\", \"11,28,99,105,8662,17325\" );    \n/*36*/ test( \"32982\", \"13,72,238,477,716,1433,5496,10993,16490,32981\" );    \n/*37*/ test( \"36\", \"5,8,11,17,35\" );    \n/*38*/ test( \"37\", \"6,36\" );    \n/*39*/ test( \"251\", \"8,250\" );    \n/*40*/ test( \"252\", \"5,10,17,20,27,35,41,62,83,125,251\" );    \n/*41*/ test( \"253\", \"12,14,22,252\" );    \n/*42*/ test( \"6643\", \"2,3,9,81,90,510,948,6642\" );    \n/*43*/ test( \"5040\", \"71,79,83,89,104,111,119,125,139,143,167,179,209,239,251,279,314,335,359,419,503,559,629,719,839,1007,1259,1679,2519,5039\" );    \n/*44*/ test( \"9240\", \"23,38,62,104,109,119,131,139,153,164,167,209,219,230,263,279,307,329,384,419,439,461,615,659,769,839,923,1154,1319,1539,1847,2309,3079,4619,9239\" );\n    return 0;\n}\n\n\u554f\u984c\u306f\u3053\u3061\u3089\nhttp://nabetani.sakura.ne.jp/hena/ord17scheherazade/\n\n\u4ed6\u306e\u89e3\u7b54\u4f8b\u306f\u3053\u3061\u3089\nhttp://qiita.com/Nabetani/items/dabe8ec57e0313229552\n\n```c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nvoid solve(const unsigned long N, char *result)\n{\n\tfor(unsigned long base = 2; base < N; base++)\n\t{\n\t\tunsigned long q, r, buff[30] = {0}, i;\n\t\tfor(i=0, q=N, r=N%base; q!=0; i++, q/=base, r=q%base)\n\t\t{\n\t\t\tbuff[i] = r;\n\t\t}\n\t\tint ok = 1;\n\t\tfor(int start=0, end=i-1; start<end; start++, end--)\n\t\t{\n\t\t\tok &= buff[start]==buff[end];\n\t\t}\n\t\tif(ok)\n\t\t{\n\t\t\tchar tmp[10] = {0};\n\t\t\tsprintf(tmp, \"%d,\", base);\n\t\t\tstrcat(result, tmp);\n\t\t}\n\t}\n}\n\nvoid test(const char* IN, const char* ANS)\n{\n\tchar result[200] = {0}, emp[2] = \"-\";\n\tsolve(atoi(IN), result);\n\tconst char* R = (strlen(result)!=0) ? result: emp;\n\tprintf(\"%s\\t%s\\n\", R, (strncmp(ANS, R, strlen(ANS))==0) ? \"ok\": \"*** NG ***\");\n}\n\nint main()\n{\n/*0*/ test( \"17301\", \"5,38,100,218,236,5766,17300\" );    \n/*1*/ test( \"2\", \"-\" );    \n/*2*/ test( \"1\", \"-\" );    \n/*3*/ test( \"3\", \"2\" );    \n/*4*/ test( \"4\", \"3\" );    \n/*5*/ test( \"5\", \"2,4\" );    \n/*6*/ test( \"6\", \"5\" );    \n/*7*/ test( \"10\", \"3,4,9\" );    \n/*8*/ test( \"101\", \"10,100\" );    \n/*9*/ test( \"1001\", \"10,25,76,90,142,1000\" );    \n/*10*/ test( \"10001\", \"10,24,30,42,80,100,136,10000\" );    \n/*11*/ test( \"1212\", \"22,100,201,302,403,605,1211\" );    \n/*12*/ test( \"123412\", \"62,100,205,215,30852,61705,123411\" );    \n/*13*/ test( \"5179\", \"5178\" );    \n/*14*/ test( \"4919\", \"4918\" );    \n/*15*/ test( \"5791\", \"5790\" );    \n/*16*/ test( \"5498\", \"2748,5497\" );    \n/*17*/ test( \"453\", \"150,452\" );    \n/*18*/ test( \"134\", \"66,133\" );    \n/*19*/ test( \"8489\", \"27,652,8488\" );    \n/*20*/ test( \"1234\", \"22,616,1233\" );    \n/*21*/ test( \"5497\", \"41,238,5496\" );    \n/*22*/ test( \"4763\", \"19,35,432,4762\" );    \n/*23*/ test( \"3974\", \"17,27,1986,3973\" );    \n/*24*/ test( \"3521\", \"44,55,502,3520\" );    \n/*25*/ test( \"5513\", \"20,38,53,148,5512\" );    \n/*26*/ test( \"8042\", \"23,29,60,4020,8041\" );    \n/*27*/ test( \"7442\", \"37,60,121,3720,7441\" );    \n/*28*/ test( \"4857\", \"25,1618,4856\" );    \n/*29*/ test( \"22843\", \"49,69,91,141,430,22842\" );    \n/*30*/ test( \"194823\", \"84,121,21646,64940,194822\" );    \n/*31*/ test( \"435697\", \"160,169,235,626,1822,435696\" );    \n/*32*/ test( \"142\", \"3,7,70,141\" );    \n/*33*/ test( \"886\", \"5,14,442,885\" );    \n/*34*/ test( \"3102\", \"7,65,93,140,281,516,1033,1550,3101\" );    \n/*35*/ test( \"17326\", \"11,28,99,105,8662,17325\" );    \n/*36*/ test( \"32982\", \"13,72,238,477,716,1433,5496,10993,16490,32981\" );    \n/*37*/ test( \"36\", \"5,8,11,17,35\" );    \n/*38*/ test( \"37\", \"6,36\" );    \n/*39*/ test( \"251\", \"8,250\" );    \n/*40*/ test( \"252\", \"5,10,17,20,27,35,41,62,83,125,251\" );    \n/*41*/ test( \"253\", \"12,14,22,252\" );    \n/*42*/ test( \"6643\", \"2,3,9,81,90,510,948,6642\" );    \n/*43*/ test( \"5040\", \"71,79,83,89,104,111,119,125,139,143,167,179,209,239,251,279,314,335,359,419,503,559,629,719,839,1007,1259,1679,2519,5039\" );    \n/*44*/ test( \"9240\", \"23,38,62,104,109,119,131,139,153,164,167,209,219,230,263,279,307,329,384,419,439,461,615,659,769,839,923,1154,1319,1539,1847,2309,3079,4619,9239\" );\n\treturn 0;\n}\n```\n", "tags": ["C\u8a00\u8a9ec99", "\u3069\u3046\u66f8\u304f", "yhpg"]}