{"tags": ["TestLink", "Go"], "context": "package main\n\nimport (\n    \"database/sql\"\n    \"fmt\"\n    \"gopkg.in/gorp.v1\"\n    \"github.com/wulijun/go-php-serialize/phpserialize\"\n    \"encoding/json\"\n    _ \"github.com/go-sql-driver/mysql\"\n)\n\ntype Project struct {\n    Id                       int    `json:\"id\"`\n    Active                   int    `json:\"active\"`\n    IsPublic                 int    `json:\"is_public\"                  db:\"is_public\"`\n    TcCounter                int    `json:\"tc_counter\"                 db:\"tc_counter\"`\n    IssueTrackerEnabled      int    `json:\"issue_tracker_enabled\"      db:\"issue_tracker_enabled\"`\n    ReqmgrIntegrationEnabled int    `json:\"reqmgr_integration_enabled\" db:\"reqmgr_integration_enabled\"`\n    OptionReqs               int    `json:\"option_reqs\"                db:\"option_reqs\"`\n    OptionPriority           int    `json:\"option_priority\"            db:\"option_priority\"`\n    OptionAutomation         int    `json:\"option_automation\"          db:\"option_automation\"`\n    InventoryEnabled         int64  `json:\"inventory_enabled\"`\n    RequirementEnabled       int64  `json:\"requirement_enabled\"`\n    TestPriorityEnabled      int64  `json:\"test_priority_enabled\"`\n    AutomationEnabled        int64  `json:\"automation_enabled\"`\n    ApiKey                   string `json:\"api_key\"                    db:\"api_key\"`\n    Notes                    string `json:\"notes\"`\n    Prefix                   string `json:\"prefix\"`\n    Options                  string `json:\"options\"`\n    Color                    string `json:\"color\"`\n}\n\nfunc get_member_value(m *phpserialize.PhpObject, key string) int64 {\n    tmp, _ := m.GetPublicMemberValue(key)\n    if tmp != nil {\n        return tmp.(int64)\n    } else {\n        return 0\n    }\n}\n\nfunc initDb() *gorp.DbMap {\n    db, err := sql.Open(\"mysql\", \"root:@tcp(192.168.0.100:3306)/bitnami_testlink\")\n    if err != nil {\n        panic(err.Error())\n    }\n    return &gorp.DbMap{Db: db, Dialect: gorp.MySQLDialect{}}\n}\n\nfunc main() {\n    dbmap := initDb()\n    var proj []Project\n    _, err := dbmap.Select(&proj, \"select * from testprojects\")\n    if err != nil {\n        panic(err.Error())\n    }\n\n    for x:=0;x<len(proj);x++ {\n        r, err := phpserialize.Decode(proj[x].Options)\n        if err == nil {\n            m := r.(*phpserialize.PhpObject)\n\n            proj[x].InventoryEnabled     = get_member_value(m, \"inventoryEnabled\")\n            proj[x].RequirementEnabled   = get_member_value(m, \"requirementEnabled\")\n            proj[x].TestPriorityEnabled  = get_member_value(m, \"testPriorityEnabled\")\n            proj[x].AutomationEnabled    = get_member_value(m, \"automationEnabled\")\n        }\n    }\n\n    bytes, _ := json.Marshal(proj)\n    fmt.Println(string(bytes))\n}\n\n\n\u305d\u306e\u3046\u3061\u3001rest api \u307f\u305f\u3044\u306a\u306e\u304c\u4f5c\u308a\u305f\u3044\u3002\n```go\npackage main\n\nimport (\n\t\"database/sql\"\n\t\"fmt\"\n\t\"gopkg.in/gorp.v1\"\n\t\"github.com/wulijun/go-php-serialize/phpserialize\"\n\t\"encoding/json\"\n\t_ \"github.com/go-sql-driver/mysql\"\n)\n\ntype Project struct {\n\tId                       int    `json:\"id\"`\n\tActive                   int    `json:\"active\"`\n\tIsPublic                 int    `json:\"is_public\"                  db:\"is_public\"`\n\tTcCounter                int    `json:\"tc_counter\"                 db:\"tc_counter\"`\n\tIssueTrackerEnabled      int    `json:\"issue_tracker_enabled\"      db:\"issue_tracker_enabled\"`\n\tReqmgrIntegrationEnabled int    `json:\"reqmgr_integration_enabled\" db:\"reqmgr_integration_enabled\"`\n\tOptionReqs               int    `json:\"option_reqs\"                db:\"option_reqs\"`\n\tOptionPriority           int    `json:\"option_priority\"            db:\"option_priority\"`\n\tOptionAutomation         int    `json:\"option_automation\"          db:\"option_automation\"`\n\tInventoryEnabled         int64  `json:\"inventory_enabled\"`\n\tRequirementEnabled       int64  `json:\"requirement_enabled\"`\n\tTestPriorityEnabled      int64  `json:\"test_priority_enabled\"`\n\tAutomationEnabled        int64  `json:\"automation_enabled\"`\n\tApiKey                   string `json:\"api_key\"                    db:\"api_key\"`\n\tNotes                    string `json:\"notes\"`\n\tPrefix                   string `json:\"prefix\"`\n\tOptions                  string `json:\"options\"`\n\tColor                    string `json:\"color\"`\n}\n\nfunc get_member_value(m *phpserialize.PhpObject, key string) int64 {\n\ttmp, _ := m.GetPublicMemberValue(key)\n\tif tmp != nil {\n\t\treturn tmp.(int64)\n\t} else {\n\t\treturn 0\n\t}\n}\n\nfunc initDb() *gorp.DbMap {\n\tdb, err := sql.Open(\"mysql\", \"root:@tcp(192.168.0.100:3306)/bitnami_testlink\")\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn &gorp.DbMap{Db: db, Dialect: gorp.MySQLDialect{}}\n}\n\nfunc main() {\n\tdbmap := initDb()\n\tvar proj []Project\n\t_, err := dbmap.Select(&proj, \"select * from testprojects\")\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\n\tfor x:=0;x<len(proj);x++ {\n\t\tr, err := phpserialize.Decode(proj[x].Options)\n\t\tif err == nil {\n\t\t\tm := r.(*phpserialize.PhpObject)\n\n\t\t\tproj[x].InventoryEnabled     = get_member_value(m, \"inventoryEnabled\")\n\t\t\tproj[x].RequirementEnabled   = get_member_value(m, \"requirementEnabled\")\n\t\t\tproj[x].TestPriorityEnabled  = get_member_value(m, \"testPriorityEnabled\")\n\t\t\tproj[x].AutomationEnabled    = get_member_value(m, \"automationEnabled\")\n\t\t}\n\t}\n\n\tbytes, _ := json.Marshal(proj)\n\tfmt.Println(string(bytes))\n}\n\n```\n\n\u305d\u306e\u3046\u3061\u3001rest api \u307f\u305f\u3044\u306a\u306e\u304c\u4f5c\u308a\u305f\u3044\u3002\n"}