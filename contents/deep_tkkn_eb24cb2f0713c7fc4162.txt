{"context": "\u3053\u306e\u8a18\u4e8b\u306f\uff0cBitVisor Advent Calendar \u306e3\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n\u306f\u3058\u3081\u306b\nBitVisor \u306f C \u8a00\u8a9e\u3068\u30a2\u30bb\u30f3\u30d6\u30e9\u3067\u66f8\u304b\u308c\u305f\u30cf\u30a4\u30d1\u30d0\u30a4\u30b6\u3067\u3059\uff0e\n\u30b3\u30fc\u30c9\u898f\u6a21\u304c\u305d\u3053\u305d\u3053\u5927\u304d\u3044\u305f\u3081\uff0c\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u308a\u7de8\u96c6\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u305d\u308c\u306a\u308a\u306b\u52b4\u529b\u304c\u304b\u304b\u308b\u3082\u306e\u3067\u3059\uff0e\n\u305d\u3046\u3044\u3046\u3068\u304d\u306b\u306f\u4fbf\u5229\u306a\u9053\u5177\u3092\u4f7f\u3044\u305f\u3044\u3082\u306e\u3067\u3059\uff0e\nIDE \u3068\u304b\u3082\u3042\u308a\u307e\u3059\u304c\uff0cCUI \u30c4\u30fc\u30eb\u3057\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3068\u3044\u3046\u4eba\u3084\u304a\u6c17\u306b\u5165\u308a\u306e\u30a8\u30c7\u30a3\u30bf(Emacs, Vim, etc)\u3067\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u4eba\u306b\u306f\u5c11\u3057\u4f7f\u3044\u3065\u3089\u3044\u3067\u3059\uff0e\n\u305d\u3053\u3067\uff0c ctags \u3084 gtags \u3068\u3044\u3063\u305f\u30b7\u30f3\u30dc\u30eb\u306e\u30bf\u30b0\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\uff0c\u30bf\u30b0\u30b8\u30e3\u30f3\u30d7\u3084\u5165\u529b\u88dc\u5b8c\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30bd\u30d5\u30c8\u3092\u4f7f\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u6700\u8fd1\uff0c\u3053\u308c\u3089\u306e\u30bd\u30d5\u30c8\u306e\u4e9c\u7a2e\u3068\u3057\u3066\uff0crtags \u3068\u3044\u3046\u3082\u306e\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u306e\u3067\uff0c\u3053\u308c\u3092 BitVisor \u3067\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n(\u304a\u5bdf\u3057\u306e\u65b9\u3082\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u6280\u8853\u7684\u306b\u306f\u3042\u307e\u308a BitVisor \u3068\u95a2\u4fc2\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\uff0e)\n\nRtags \u306e\u7279\u5fb4\uff0e\n\n\u5bfe\u5fdc\u8a00\u8a9e: C, C++, Objectiv C\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8/\u30b5\u30fc\u30d0 \u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u89e3\u6790\n\n\n\u30de\u30af\u30ed\u3067\u5c55\u958b\u3055\u308c\u308b\u3088\u3046\u306a\u30b7\u30f3\u30dc\u30eb\u3082\u89e3\u6790\u3067\u304d\u308b\n\n\n\n\n\u5bfe\u5fdc\u30a8\u30c7\u30a3\u30bf\n\n\n\u516c\u5f0f\n\nEmacs (\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b)\n\n\n\n\u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\n\nVim: https://github.com/lyuts/vim-rtags and https://github.com/shaneharper/vim-rtags\n\nSublime Text: https://github.com/rampage644/sublime-rtags\n\nAtom: https://github.com/artagnon/atomic-rtags and https://github.com/rajendrant/atom-rtags\n\n\n\n\u305d\u306e\u4ed6\uff0cCLI \u3082\u3042\u308b\u3063\u307d\u3044\n\u3053\u306e\u8a18\u4e8b\u3067\u52d5\u304b\u3057\u305f\u306e\u306f\uff0cEmacs \u3060\u3051\n\n\n\u5c0e\u5165\n\n\u691c\u8a3c\u74b0\u5883\n\nOS: Arch Linux (4.8.11-1-ARCH)\n\n\n\u30d3\u30eb\u30c9\n\u50d5\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3057\u305f\uff0e\n\u5143\u306e\u74b0\u5883\u6b21\u7b2c\u3067\u306f\uff0c\u4ed6\u306b\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4ed6\u306b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u304a\u305d\u3089\u304f\u53c2\u8003URL\u306e\u65b9\u304c\u8a73\u3057\u3044\u304b\u3068\uff0e\n\nllvm \u3068 clang \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nGithub \u304b\u3089\u30af\u30ed\u30fc\u30f3\n\n\nGitHub - Andersbakken/rtags: A c/c++ client/server indexer for c/c++/objc[++] with integration for Emacs based on clang. - https://github.com/Andersbakken/rtags\n\n\n\nSubmodule \u3082\u5165\u308c\u308b\n\u30d3\u30eb\u30c9\n\n\u30b3\u30de\u30f3\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n(2016/12/09 \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\u4fee\u6b63)\n$ yaourt clang # clang \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u9078\u629e\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ yaourt llvm  # llvm \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u9078\u629e\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ git clone https://github.com/Andersbakken/rtags\n$ git clone --recursive https://github.com/Andersbakken/rtags\n$ cd rtags/\n$ mkdir build\n$ cd build/\n$ cmake ..\n$ make -j5\n$ sudo make install\n\n\nLinux Mint \u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u5fc5\u8981\u3060\u3063\u305f\u3082\u306e (2016/12/09 \u8ffd\u8a18)\n\nclang\nlibclang-dev\n\n\n\u30d3\u30eb\u30c9\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u6642\u306f (2016/12/09 \u8ffd\u8a18)\nbuild \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3057\u3066\uff0c\u3082\u3046\u4e00\u5ea6\uff0c mkdir build \u304b\u3089\u3084\u308a\u76f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\nBear \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\u3092\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u3092\u96c6\u3081\u306a\u3044\u3068\u3044\u3051\u306a\u3044\uff0e\n\u3057\u304b\u3057\uff0c\u305d\u308c\u3092\u81ea\u524d\u3067\u96c6\u3081\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\uff0cBear \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u96c6\u3081\u307e\u3059\u306e\u3067\uff0c\u3053\u308c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\uff0c\u666e\u901a\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3060\u3051\uff0e\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n(2016/12/09 Bear \u306e Github \u306e URL \u3092\u4fee\u6b63)\n$ git clone https://github.com/rizsotto/Bear\n$ cd Bear/\n$ mkdir build \n$ cd build/\n$ cmake ..\n$ make\n$ sudo make install\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\n\nbear \u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6e21\u3057\u3066\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u96c6\u3081\u3064\u3064\u30d3\u30eb\u30c9\u3059\u308b\nrtags \u306e\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n\u96c6\u3081\u305f\u60c5\u5831\u3092\u5143\u306b\u89e3\u6790\u3092\u884c\u3046\n\n$ cd bitvisor/\n$ bear make -j5\n$ rdm &         # \u30b5\u30fc\u30d0\u8d77\u52d5\n$ rc -J         # rtags \u306e\u89e3\u6790\u30b3\u30de\u30f3\u30c9\n\n\nEmacs \u5074\u306e\u6e96\u5099\n\n\u30d1\u30c3\u30b1\u30fc\u30b8 rtags \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\nrtags \u30d1\u30c3\u30b1\u30fc\u30b8\u306f melpa \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\n\n\n\n\nEmacs \u304b\u3089\u306e\u4f7f\u3044\u65b9\n\nrtags-find-symbol: \u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u306e\u5b9a\u7fa9\u3092\u63a2\u3059\nrtags-find-references: \u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u5834\u6240\u3092\u63a2\u3059\nrtags-rename-symbol: \u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308b\u90e8\u5206\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u4e00\u62ec\u3067\u5909\u63db\u3059\u308b\n\n\nrtags-find-symbol \u306e\u4f8b\n\npci_read_config_data16_without_lock \u3067 rtags-find-symbol \u3092\u691c\u7d22\u3059\u308b\u3068\uff0c\u3061\u3083\u3093\u3068 DEFINE_pci_read_config_data_without_lock(16)\n\u306b\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\uff0e\n\n\n\nhttps://bitbucket.org/bitvisor/bitvisor/src/76db0ae4260b398f939486faedbd6dedb3e79b5f/drivers/pci_init.c?at=default&fileviewer=file-view-default#pci_init.c-334 \u304b\u3089\n\nhttps://bitbucket.org/bitvisor/bitvisor/src/76db0ae4260b398f939486faedbd6dedb3e79b5f/drivers/pci_internal.h?at=default&fileviewer=file-view-default#pci_internal.h-67 \u3078\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\n\n\n\n\nrtags-rename-symbol \u306e\u4f8b (2016/12/09 \u4fee\u6b63: struct data2 \u3058\u3083\u306a\u304f\u3066 struct data \u3092\u30ea\u30cd\u30fc\u30e0)\n\u4f8b\u3048\u3070\uff0cdriver/net/pro1000.c \u306e struct data \u3092 struct pro1000_bar_data \u306b\u30ea\u30cd\u30fc\u30e0\u3059\u308b\u3068\u304d\u306b\u306f\uff0crtags-rename-symbol \u4e00\u767a\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5909\u66f4\u304c\u3067\u304d\u307e\u3059\u306d\uff0e\n$ hg diff\ndiff -r 76db0ae4260b drivers/net/pro1000.c\n--- a/drivers/net/pro1000.c     Mon Sep 12 20:01:54 2016 +0900\n+++ b/drivers/net/pro1000.c     Fri Dec 09 18:21:57 2016 +0900\n@@ -191,7 +191,7 @@\n        } u;\n };\n\n-struct data;\n+struct pro1000_bar_data;\n\n struct data2 {\n        spinlock_t lock;\n@@ -205,7 +205,7 @@\n        bool tse_first, tse_tcpfin, tse_tcppsh;\n        u16 tse_iplen, tse_ipchecksum, tse_tcpchecksum;\n        struct desc_shadow tdesc[2], rdesc[2];\n-       struct data *d1;\n+       struct pro1000_bar_data *d1;\n        struct netdata *nethandle;\n        bool initialized;\n        net_recv_callback_t *recvphys_func, *recvvirt_func;\n@@ -223,7 +223,7 @@\n        struct pci_msi *virtio_net_msi;\n };\n\n-struct data {\n+struct pro1000_bar_data {\n        int i;\n        int e;\n        int io;\n@@ -1089,7 +1089,7 @@\n }\n\n static void\n-mmhandler2 (struct data *d1, struct data2 *d2, phys_t gphys, bool wr,\n+mmhandler2 (struct pro1000_bar_data *d1, struct data2 *d2, phys_t gphys, bool wr,\n            union mem *buf, uint len, u32 flags)\n {\n        union mem *q;\n@@ -1181,7 +1181,7 @@\n static int\n mmhandler (void *data, phys_t gphys, bool wr, void *buf, uint len, u32 flags)\n {\n-       struct data *d1 = data;\n+       struct pro1000_bar_data *d1 = data;\n        struct data2 *d2 = d1->d;\n\n        if (d2->virtio_net && d2->virtio_net_msi && d1 == &d2->d1[0]) {\n@@ -1201,7 +1201,7 @@\n }\n\n static void\n-unreghook (struct data *d)\n+unreghook (struct pro1000_bar_data *d)\n {\n        if (d->e) {\n                if (d->io) {\n@@ -1215,7 +1215,7 @@\n }\n\n static void\n-reghook (struct data *d, int i, struct pci_bar_info *bar)\n+reghook (struct pro1000_bar_data *d, int i, struct pci_bar_info *bar)\n {\n        if (bar->type == PCI_BAR_INFO_TYPE_NONE)\n                return;\n@@ -1249,7 +1249,7 @@\n change_bar0 (struct pci_device *pci_device, u8 iosize, u16 offset,\n             union mem *data)\n {\n-       struct data *d = pci_device->host;\n+       struct pro1000_bar_data *d = pci_device->host;\n        struct data2 *d2 = d->d;\n        struct pci_bar_info bar_info;\n        void *old_map;\n@@ -1465,7 +1465,7 @@\n {\n        int i;\n        struct data2 *d2;\n-       struct data *d;\n+       struct pro1000_bar_data *d;\n        void *tmp;\n        struct pci_bar_info bar_info;\n        struct nicfunc *virtio_net_func;\n@@ -1555,7 +1555,7 @@\n vpn_pro1000_config_write (struct pci_device *pci_device, u8 iosize,\n                          u16 offset, union mem *data)\n {\n-       struct data *d = pci_device->host;\n+       struct pro1000_bar_data *d = pci_device->host;\n        struct pci_bar_info bar_info;\n        int i;\n\n@@ -1617,7 +1617,7 @@\n pro1000_config_read (struct pci_device *pci_device, u8 iosize,\n                     u16 offset, union mem *data)\n {\n-       struct data *d1 = pci_device->host;\n+       struct pro1000_bar_data *d1 = pci_device->host;\n        struct data2 *d2 = d1[0].d;\n\n        if (d2->virtio_net) {\n@@ -1647,7 +1647,7 @@\n pro1000_config_write (struct pci_device *pci_device, u8 iosize,\n                      u16 offset, union mem *data)\n {\n-       struct data *d1 = pci_device->host;\n+       struct pro1000_bar_data *d1 = pci_device->host;\n        struct data2 *d2 = d1[0].d;\n\n        if (d2->virtio_net) {\n\n\n\u30e1\u30ea\u30c3\u30c8\n\n\u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b7\u30f3\u30dc\u30eb\u306b\u3082\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\n\u30b7\u30f3\u30dc\u30eb\u306e\u4e00\u62ec\u5909\u66f4\u304c\u3067\u304d\u308b\n\n\n\u30c7\u30e1\u30ea\u30c3\u30c8\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\n\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u306f\u3064\u3089\u3044\u304b\u3082\n\n\n(\u8a66\u3057\u3066\u306f\u306a\u3044\u304c\u305f\u3076\u3093)\u30d3\u30eb\u30c9\u3057\u305f\u30b3\u30fc\u30c9\u3057\u304b\u89e3\u6790\u3067\u304d\u306a\u3044\n\n\n\u30ea\u30cd\u30fc\u30e0\u306f\u4fbf\u5229\u3060\u3051\u3069\uff0c\u30d3\u30eb\u30c9\u3057\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u304c\u30ea\u30cd\u30fc\u30e0\u5bfe\u8c61\u304b\u3089\u6f0f\u308c\u305f\u308a\u3057\u305d\u3046...\n\n\n\u30a2\u30bb\u30f3\u30d6\u30e9\u5185\u306e\u30e9\u30d9\u30eb\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u3044\n\n\n\u4ed6\u306e*tags\u3082\u540c\u3058\u3060\u3051\u3069...\n\n\n\n\nBitVisor \u3067\u5f79\u306b\u7acb\u3061\u305d\u3046\u306a\u5834\u9762\n\n\u30a4\u30b1\u3066\u306a\u3044\u5909\u6570\u3084\u95a2\u6570\u306e\u540d\u524d\u3092\u4e00\u6c17\u306b\u66f8\u304d\u63db\u3048\u308b\u3068\u304d\nfind-grep \u3067\u898b\u3064\u3051\u3089\u308c\u306a\u3044\u5909\u6570\u3084\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u63a2\u3059\u3068\u304d\n\n\n\u30de\u30af\u30ed\u3067\u4f5c\u3089\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u306f\u898b\u3064\u3051\u3089\u308c\u308b\n\n\n\n\n\u53c2\u8003URL\n\n\u6700\u5f37\u306eC/C++\u30a4\u30f3\u30c7\u30af\u30b5\u30fc \"Rtags\" \u3092\u672c\u6c17\u3067\u4f7f\u3046 - Qiita - http://qiita.com/kota65535/items/39aa4d6e8adf6ab5f98c\n\nGitHub - Andersbakken/rtags: A c/c++ client/server indexer for c/c++/objc[++] with integration for Emacs based on clang. - https://github.com/Andersbakken/rtags\n\n\n\n\u307e\u3068\u3081\n\nBitVisor \u958b\u767a\u3067\u6642\u3005\u56f0\u308b\u3068\u304d\u306b\u306f\uff0c\u5f79\u306b\u7acb\u3061\u305d\u3046\n\u3060\u3051\u3069\uff0c\u904e\u4fe1\u306f\u7981\u7269\u3060\u3068\u601d\u3046(\u30d3\u30eb\u30c9\u3057\u305f\u7bc4\u56f2\u3057\u304b\u898b\u3064\u3051\u3089\u308c\u306a\u3044\uff0c\u5909\u63db\u3067\u304d\u306a\u3044\u306e\u3067)\n\n\u3053\u306e\u8a18\u4e8b\u306f\uff0cBitVisor Advent Calendar \u306e3\u65e5\u76ee\u306e\u8a18\u4e8b\u3067\u3059\uff0e\n\n# \u306f\u3058\u3081\u306b\nBitVisor \u306f C \u8a00\u8a9e\u3068\u30a2\u30bb\u30f3\u30d6\u30e9\u3067\u66f8\u304b\u308c\u305f\u30cf\u30a4\u30d1\u30d0\u30a4\u30b6\u3067\u3059\uff0e\n\u30b3\u30fc\u30c9\u898f\u6a21\u304c\u305d\u3053\u305d\u3053\u5927\u304d\u3044\u305f\u3081\uff0c\u30b3\u30fc\u30c9\u3092\u8aad\u3093\u3060\u308a\u7de8\u96c6\u3057\u305f\u308a\u3059\u308b\u306e\u306b\u305d\u308c\u306a\u308a\u306b\u52b4\u529b\u304c\u304b\u304b\u308b\u3082\u306e\u3067\u3059\uff0e\n\u305d\u3046\u3044\u3046\u3068\u304d\u306b\u306f\u4fbf\u5229\u306a\u9053\u5177\u3092\u4f7f\u3044\u305f\u3044\u3082\u306e\u3067\u3059\uff0e\nIDE \u3068\u304b\u3082\u3042\u308a\u307e\u3059\u304c\uff0cCUI \u30c4\u30fc\u30eb\u3057\u304b\u4f7f\u3044\u305f\u304f\u306a\u3044\u3068\u3044\u3046\u4eba\u3084\u304a\u6c17\u306b\u5165\u308a\u306e\u30a8\u30c7\u30a3\u30bf(Emacs, Vim, etc)\u3067\u4f7f\u3044\u305f\u3044\u3068\u3044\u3046\u4eba\u306b\u306f\u5c11\u3057\u4f7f\u3044\u3065\u3089\u3044\u3067\u3059\uff0e\n\u305d\u3053\u3067\uff0c ctags \u3084 gtags \u3068\u3044\u3063\u305f\u30b7\u30f3\u30dc\u30eb\u306e\u30bf\u30b0\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\uff0c\u30bf\u30b0\u30b8\u30e3\u30f3\u30d7\u3084\u5165\u529b\u88dc\u5b8c\u6a5f\u80fd\u3092\u63d0\u4f9b\u3059\u308b\u30bd\u30d5\u30c8\u3092\u4f7f\u3046\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u6700\u8fd1\uff0c\u3053\u308c\u3089\u306e\u30bd\u30d5\u30c8\u306e\u4e9c\u7a2e\u3068\u3057\u3066\uff0crtags \u3068\u3044\u3046\u3082\u306e\u3092\u898b\u3064\u3051\u307e\u3057\u305f\u306e\u3067\uff0c\u3053\u308c\u3092 BitVisor \u3067\u8a66\u3057\u3066\u307f\u3088\u3046\u3068\u601d\u3044\u307e\u3059\uff0e\n(\u304a\u5bdf\u3057\u306e\u65b9\u3082\u3044\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u304c\uff0c\u6280\u8853\u7684\u306b\u306f\u3042\u307e\u308a BitVisor \u3068\u95a2\u4fc2\u306a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\uff0e)\n\n\n# Rtags \u306e\u7279\u5fb4\uff0e\n* \u5bfe\u5fdc\u8a00\u8a9e: C, C++, Objectiv C\n* \u30af\u30e9\u30a4\u30a2\u30f3\u30c8/\u30b5\u30fc\u30d0 \u306a\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\n* \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306e\u60c5\u5831\u3092\u7528\u3044\u3066\u89e3\u6790\n    * \u30de\u30af\u30ed\u3067\u5c55\u958b\u3055\u308c\u308b\u3088\u3046\u306a\u30b7\u30f3\u30dc\u30eb\u3082\u89e3\u6790\u3067\u304d\u308b\n\n# \u5bfe\u5fdc\u30a8\u30c7\u30a3\u30bf\n* \u516c\u5f0f\n    * Emacs (\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u7ba1\u7406\u3055\u308c\u3066\u3044\u308b)\n\n* \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3\n    * Vim: https://github.com/lyuts/vim-rtags and https://github.com/shaneharper/vim-rtags\n    * Sublime Text: https://github.com/rampage644/sublime-rtags\n    * Atom: https://github.com/artagnon/atomic-rtags and https://github.com/rajendrant/atom-rtags\n\n* \u305d\u306e\u4ed6\uff0cCLI \u3082\u3042\u308b\u3063\u307d\u3044\n* \u3053\u306e\u8a18\u4e8b\u3067\u52d5\u304b\u3057\u305f\u306e\u306f\uff0cEmacs \u3060\u3051\n\n# \u5c0e\u5165\n\n##\u691c\u8a3c\u74b0\u5883\n* OS: Arch Linux (4.8.11-1-ARCH)\n\n## \u30d3\u30eb\u30c9\n\u50d5\u306f\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u307e\u3057\u305f\uff0e\n\u5143\u306e\u74b0\u5883\u6b21\u7b2c\u3067\u306f\uff0c\u4ed6\u306b\u3082\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u4ed6\u306b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\n\u304a\u305d\u3089\u304f\u53c2\u8003URL\u306e\u65b9\u304c\u8a73\u3057\u3044\u304b\u3068\uff0e\n\n* llvm \u3068 clang \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* Github \u304b\u3089\u30af\u30ed\u30fc\u30f3\n    * GitHub - Andersbakken/rtags: A c/c++ client/server indexer for c/c++/objc[++] with integration for Emacs based on clang. - https://github.com/Andersbakken/rtags\n* Submodule \u3082\u5165\u308c\u308b\n* \u30d3\u30eb\u30c9\n\n\u30b3\u30de\u30f3\u30c9\u306f\u4ee5\u4e0b\u306e\u901a\u308a\n(2016/12/09 \u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\u4fee\u6b63)\n\n```\n$ yaourt clang # clang \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u9078\u629e\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ yaourt llvm  # llvm \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u9078\u629e\uff0c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ git clone https://github.com/Andersbakken/rtags\n$ git clone --recursive https://github.com/Andersbakken/rtags\n$ cd rtags/\n$ mkdir build\n$ cd build/\n$ cmake ..\n$ make -j5\n$ sudo make install\n```\n\n\n### Linux Mint \u3067\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u5fc5\u8981\u3060\u3063\u305f\u3082\u306e (2016/12/09 \u8ffd\u8a18)\n\n* clang\n* libclang-dev\n\n### \u30d3\u30eb\u30c9\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u6642\u306f (2016/12/09 \u8ffd\u8a18)\nbuild \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u524a\u9664\u3057\u3066\uff0c\u3082\u3046\u4e00\u5ea6\uff0c `mkdir build` \u304b\u3089\u3084\u308a\u76f4\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n\n\n## Bear \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\u3092\u3059\u308b\u305f\u3081\u306b\u306f\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u60c5\u5831\u3092\u96c6\u3081\u306a\u3044\u3068\u3044\u3051\u306a\u3044\uff0e\n\u3057\u304b\u3057\uff0c\u305d\u308c\u3092\u81ea\u524d\u3067\u96c6\u3081\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\uff0cBear \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u3067\u96c6\u3081\u307e\u3059\u306e\u3067\uff0c\u3053\u308c\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\uff0e\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306f\uff0c\u666e\u901a\u306f\u30d3\u30eb\u30c9\u3059\u308b\u3060\u3051\uff0e\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u305f\u3081\u306e\u30b3\u30de\u30f3\u30c9\u30ea\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u901a\u308a\uff0e\n(2016/12/09 Bear \u306e Github \u306e URL \u3092\u4fee\u6b63)\n\n```\n$ git clone https://github.com/rizsotto/Bear\n$ cd Bear/\n$ mkdir build \n$ cd build/\n$ cmake ..\n$ make\n$ sudo make install\n```\n\n# \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u89e3\u6790\n\n* bear \u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u30b3\u30de\u30f3\u30c9\u3092\u6e21\u3057\u3066\uff0c\u30b3\u30f3\u30d1\u30a4\u30eb\u306e\u60c5\u5831\u3092\u96c6\u3081\u3064\u3064\u30d3\u30eb\u30c9\u3059\u308b\n* rtags \u306e\u30b5\u30fc\u30d0\u3092\u8d77\u52d5\n* \u96c6\u3081\u305f\u60c5\u5831\u3092\u5143\u306b\u89e3\u6790\u3092\u884c\u3046\n \n```\n$ cd bitvisor/\n$ bear make -j5\n$ rdm &         # \u30b5\u30fc\u30d0\u8d77\u52d5\n$ rc -J         # rtags \u306e\u89e3\u6790\u30b3\u30de\u30f3\u30c9\n```\n\n# Emacs \u5074\u306e\u6e96\u5099\n* \u30d1\u30c3\u30b1\u30fc\u30b8 `rtags` \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n    * rtags \u30d1\u30c3\u30b1\u30fc\u30b8\u306f melpa \u306e\u30d1\u30c3\u30b1\u30fc\u30b8\n\n# Emacs \u304b\u3089\u306e\u4f7f\u3044\u65b9\n* rtags-find-symbol: \u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u306e\u5b9a\u7fa9\u3092\u63a2\u3059\n* rtags-find-references: \u6307\u5b9a\u3057\u305f\u30b7\u30f3\u30dc\u30eb\u3092\u53c2\u7167\u3057\u3066\u3044\u308b\u5834\u6240\u3092\u63a2\u3059\n* rtags-rename-symbol: \u30ab\u30fc\u30bd\u30eb\u304c\u3042\u308b\u90e8\u5206\u306e\u30b7\u30f3\u30dc\u30eb\u3092\u4e00\u62ec\u3067\u5909\u63db\u3059\u308b\n\n\n## rtags-find-symbol \u306e\u4f8b\n* pci_read_config_data16_without_lock \u3067 rtags-find-symbol \u3092\u691c\u7d22\u3059\u308b\u3068\uff0c\u3061\u3083\u3093\u3068 DEFINE_pci_read_config_data_without_lock(16)\n\u306b\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\uff0e\n    * https://bitbucket.org/bitvisor/bitvisor/src/76db0ae4260b398f939486faedbd6dedb3e79b5f/drivers/pci_init.c?at=default&fileviewer=file-view-default#pci_init.c-334 \u304b\u3089\n    * https://bitbucket.org/bitvisor/bitvisor/src/76db0ae4260b398f939486faedbd6dedb3e79b5f/drivers/pci_internal.h?at=default&fileviewer=file-view-default#pci_internal.h-67 \u3078\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\n\n\n## rtags-rename-symbol \u306e\u4f8b (2016/12/09 \u4fee\u6b63: struct data2 \u3058\u3083\u306a\u304f\u3066 struct data \u3092\u30ea\u30cd\u30fc\u30e0)\n\n\u4f8b\u3048\u3070\uff0c`driver/net/pro1000.c` \u306e `struct data` \u3092 `struct pro1000_bar_data` \u306b\u30ea\u30cd\u30fc\u30e0\u3059\u308b\u3068\u304d\u306b\u306f\uff0crtags-rename-symbol \u4e00\u767a\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u5909\u66f4\u304c\u3067\u304d\u307e\u3059\u306d\uff0e\n\n``` diff\n$ hg diff\ndiff -r 76db0ae4260b drivers/net/pro1000.c\n--- a/drivers/net/pro1000.c     Mon Sep 12 20:01:54 2016 +0900\n+++ b/drivers/net/pro1000.c     Fri Dec 09 18:21:57 2016 +0900\n@@ -191,7 +191,7 @@\n        } u;\n };\n\n-struct data;\n+struct pro1000_bar_data;\n\n struct data2 {\n        spinlock_t lock;\n@@ -205,7 +205,7 @@\n        bool tse_first, tse_tcpfin, tse_tcppsh;\n        u16 tse_iplen, tse_ipchecksum, tse_tcpchecksum;\n        struct desc_shadow tdesc[2], rdesc[2];\n-       struct data *d1;\n+       struct pro1000_bar_data *d1;\n        struct netdata *nethandle;\n        bool initialized;\n        net_recv_callback_t *recvphys_func, *recvvirt_func;\n@@ -223,7 +223,7 @@\n        struct pci_msi *virtio_net_msi;\n };\n\n-struct data {\n+struct pro1000_bar_data {\n        int i;\n        int e;\n        int io;\n@@ -1089,7 +1089,7 @@\n }\n\n static void\n-mmhandler2 (struct data *d1, struct data2 *d2, phys_t gphys, bool wr,\n+mmhandler2 (struct pro1000_bar_data *d1, struct data2 *d2, phys_t gphys, bool wr,\n            union mem *buf, uint len, u32 flags)\n {\n        union mem *q;\n@@ -1181,7 +1181,7 @@\n static int\n mmhandler (void *data, phys_t gphys, bool wr, void *buf, uint len, u32 flags)\n {\n-       struct data *d1 = data;\n+       struct pro1000_bar_data *d1 = data;\n        struct data2 *d2 = d1->d;\n\n        if (d2->virtio_net && d2->virtio_net_msi && d1 == &d2->d1[0]) {\n@@ -1201,7 +1201,7 @@\n }\n\n static void\n-unreghook (struct data *d)\n+unreghook (struct pro1000_bar_data *d)\n {\n        if (d->e) {\n                if (d->io) {\n@@ -1215,7 +1215,7 @@\n }\n\n static void\n-reghook (struct data *d, int i, struct pci_bar_info *bar)\n+reghook (struct pro1000_bar_data *d, int i, struct pci_bar_info *bar)\n {\n        if (bar->type == PCI_BAR_INFO_TYPE_NONE)\n                return;\n@@ -1249,7 +1249,7 @@\n change_bar0 (struct pci_device *pci_device, u8 iosize, u16 offset,\n             union mem *data)\n {\n-       struct data *d = pci_device->host;\n+       struct pro1000_bar_data *d = pci_device->host;\n        struct data2 *d2 = d->d;\n        struct pci_bar_info bar_info;\n        void *old_map;\n@@ -1465,7 +1465,7 @@\n {\n        int i;\n        struct data2 *d2;\n-       struct data *d;\n+       struct pro1000_bar_data *d;\n        void *tmp;\n        struct pci_bar_info bar_info;\n        struct nicfunc *virtio_net_func;\n@@ -1555,7 +1555,7 @@\n vpn_pro1000_config_write (struct pci_device *pci_device, u8 iosize,\n                          u16 offset, union mem *data)\n {\n-       struct data *d = pci_device->host;\n+       struct pro1000_bar_data *d = pci_device->host;\n        struct pci_bar_info bar_info;\n        int i;\n\n@@ -1617,7 +1617,7 @@\n pro1000_config_read (struct pci_device *pci_device, u8 iosize,\n                     u16 offset, union mem *data)\n {\n-       struct data *d1 = pci_device->host;\n+       struct pro1000_bar_data *d1 = pci_device->host;\n        struct data2 *d2 = d1[0].d;\n\n        if (d2->virtio_net) {\n@@ -1647,7 +1647,7 @@\n pro1000_config_write (struct pci_device *pci_device, u8 iosize,\n                      u16 offset, union mem *data)\n {\n-       struct data *d1 = pci_device->host;\n+       struct pro1000_bar_data *d1 = pci_device->host;\n        struct data2 *d2 = d1[0].d;\n\n        if (d2->virtio_net) {\n```\n\n\n\n# \u30e1\u30ea\u30c3\u30c8\n* \u30de\u30af\u30ed\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30b7\u30f3\u30dc\u30eb\u306b\u3082\u30b8\u30e3\u30f3\u30d7\u3067\u304d\u308b\n* \u30b7\u30f3\u30dc\u30eb\u306e\u4e00\u62ec\u5909\u66f4\u304c\u3067\u304d\u308b\n\n# \u30c7\u30e1\u30ea\u30c3\u30c8\n* \u30b3\u30f3\u30d1\u30a4\u30eb\u304c\u5fc5\u8981\n    * \u30b3\u30f3\u30d1\u30a4\u30eb\u306b\u6642\u9593\u304c\u304b\u304b\u308b\u3068\u304d\u306b\u306f\u3064\u3089\u3044\u304b\u3082\n* (\u8a66\u3057\u3066\u306f\u306a\u3044\u304c\u305f\u3076\u3093)\u30d3\u30eb\u30c9\u3057\u305f\u30b3\u30fc\u30c9\u3057\u304b\u89e3\u6790\u3067\u304d\u306a\u3044\n    * \u30ea\u30cd\u30fc\u30e0\u306f\u4fbf\u5229\u3060\u3051\u3069\uff0c\u30d3\u30eb\u30c9\u3057\u3066\u3044\u306a\u3044\u30b3\u30fc\u30c9\u304c\u30ea\u30cd\u30fc\u30e0\u5bfe\u8c61\u304b\u3089\u6f0f\u308c\u305f\u308a\u3057\u305d\u3046...\n* \u30a2\u30bb\u30f3\u30d6\u30e9\u5185\u306e\u30e9\u30d9\u30eb\u306f\u898b\u3064\u3051\u3089\u308c\u306a\u3044\n    * \u4ed6\u306e*tags\u3082\u540c\u3058\u3060\u3051\u3069...\n\n# BitVisor \u3067\u5f79\u306b\u7acb\u3061\u305d\u3046\u306a\u5834\u9762\n* \u30a4\u30b1\u3066\u306a\u3044\u5909\u6570\u3084\u95a2\u6570\u306e\u540d\u524d\u3092\u4e00\u6c17\u306b\u66f8\u304d\u63db\u3048\u308b\u3068\u304d\n* find-grep \u3067\u898b\u3064\u3051\u3089\u308c\u306a\u3044\u5909\u6570\u3084\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u63a2\u3059\u3068\u304d\n    * \u30de\u30af\u30ed\u3067\u4f5c\u3089\u308c\u3066\u3044\u308b\u3068\u304d\u306b\u306f\u898b\u3064\u3051\u3089\u308c\u308b\n\n\n\n# \u53c2\u8003URL\n* \u6700\u5f37\u306eC/C++\u30a4\u30f3\u30c7\u30af\u30b5\u30fc \"Rtags\" \u3092\u672c\u6c17\u3067\u4f7f\u3046 - Qiita - http://qiita.com/kota65535/items/39aa4d6e8adf6ab5f98c\n* GitHub - Andersbakken/rtags: A c/c++ client/server indexer for c/c++/objc[++] with integration for Emacs based on clang. - https://github.com/Andersbakken/rtags\n\n\n# \u307e\u3068\u3081\n* BitVisor \u958b\u767a\u3067\u6642\u3005\u56f0\u308b\u3068\u304d\u306b\u306f\uff0c\u5f79\u306b\u7acb\u3061\u305d\u3046\n* \u3060\u3051\u3069\uff0c\u904e\u4fe1\u306f\u7981\u7269\u3060\u3068\u601d\u3046(\u30d3\u30eb\u30c9\u3057\u305f\u7bc4\u56f2\u3057\u304b\u898b\u3064\u3051\u3089\u308c\u306a\u3044\uff0c\u5909\u63db\u3067\u304d\u306a\u3044\u306e\u3067)\n", "tags": ["BitVisor", "Rtags"]}