{"context": "UniRx\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306e\u307e\u3068\u3081\u306f\u3053\u3061\u3089\n\nnifty\u306emBaaS\u3067\u3042\u308b\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\uff08NCMB)\u306e\u30ed\u30b0\u30a4\u30f3\u5468\u308a\u306e\u51e6\u7406\u3092Observable\u306b\u5909\u63db\u3057\u3001UniRx\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\nIObservable\u5316\u3057\u305f\u30b3\u30fc\u30c9\nstatic class\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u5229\u7528\u6642\u306busing\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u3042\u3068\u3001\u3064\u3044\u3067\u306b\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u4f1a\u54e1\u767b\u9332\u6642\u306b\u5225\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u66f4\u65b0\u3067\u304d\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092IObservable\u306b\u5909\u63db\u3059\u308b\nusing System.Collections.Generic;\nusing NCMB;\nusing UniRx;\n\nnamespace ObservableNcmb\n{\n    public static class ObservableNcmbUserAuth\n    {\n        /// <summary>\n        /// ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        public static IObservable<NCMBUser> LoginAsync(string id, string password)\n        {\n            return Observable.Create<NCMBUser>(observer =>\n            {\n                NCMBUser.LogInAsync(id, password, e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(NCMBUser.CurrentUser);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n\n        /// <summary>\n        /// ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u4f1a\u54e1\u767b\u9332\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        /// <param name=\"id\">ID</param>\n        /// <param name=\"password\">\u30d1\u30b9\u30ef\u30fc\u30c9</param>\n        /// <param name=\"optionalData\">\u305d\u306e\u4ed6\u30d5\u30a3\u30fc\u30eb\u30c9</param>\n        /// <returns></returns>\n        public static IObservable<NCMBUser> SingUpAsync(\n            string id,\n            string password,\n            Dictionary<string, object> optionalData = null)\n        {\n            return SingUpAsync(id: id, password: password, optionalData: optionalData, mail: null);\n        }\n\n\n        /// <summary>\n        /// ID\u304a\u3088\u3073\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u4f1a\u54e1\u767b\u9332\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        /// <param name=\"mail\">\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9</param>\n        /// <param name=\"id\">ID</param>\n        /// <param name=\"password\">\u30d1\u30b9\u30ef\u30fc\u30c9</param>\n        /// <param name=\"optionalData\">\u305d\u306e\u4ed6\u30d5\u30a3\u30fc\u30eb\u30c9</param>\n        /// <returns></returns>\n        public static IObservable<NCMBUser> SingUpAsync(\n            string mail,\n            string id,\n            string password,\n            Dictionary<string, object> optionalData = null)\n        {\n            return Observable.Create<NCMBUser>(observer =>\n            {\n                var user = new NCMBUser\n                {\n                    Email = mail,\n                    UserName = id,\n                    Password = password\n                };\n\n                if (optionalData != null)\n                {\n                    foreach (var opt in optionalData)\n                    {\n                        user[opt.Key] = opt.Value;\n                    }\n                }\n\n                user.SignUpAsync(e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(user);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n\n        /// <summary>\n        /// \u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u884c\u3046\n        /// </summary>\n        public static IObservable<Unit> LogoutAsync()\n        {\n            return Observable.Create<Unit>(observer =>\n            {\n                NCMBUser.LogOutAsync(e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(Unit.Default);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n    }\n}\n\n\n\n\n\u4f7f\u7528\u4f8b\n\u5b9f\u969b\u306b\u4eca\u958b\u767a\u3057\u3066\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u3092\u629c\u7c8b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30e6\u30fc\u30b6\u767b\u9332\u6642\u306b\u30d7\u30ec\u30a4\u30e4\u540d\uff08ScreenName\uff09\u3082\u4e00\u7dd2\u306b\u767b\u9332\u3059\u308b\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\n\n/// <summary>\n/// \u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\u3092\u884c\u3046\n/// </summary>\npublic void SignUp(string id, string mail, string pass, string screenName)\n{\n    //\u30d7\u30ec\u30a4\u30e4\u306e\u8868\u793a\u540d\u3092\u767b\u9332\u6642\u306b\u8a2d\u5b9a\u3059\u308b\n    //\u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u306b\u4e88\u3081\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5897\u3084\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    var optionalData = new Dictionary<string, object>()\n    {\n        {\"screenName\",screenName }\n    };\n\n    //\u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\n    ObservableNcmbUserAuth\n        .SingUpAsync(mail, id, pass, optionalData)\n        .Subscribe(user =>\n        {\n            //NCMBUser\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u5b58\n            UserProfileProvider.SetUser(user);\n            //\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u901a\u77e5\n            onSuccessLoginSubject.OnNext(Unit.Default);\n        },\n        //\u30a8\u30e9\u30fc\u6642\u306f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3092\u901a\u77e5\n        ex => failedReasonSubject.OnNext(ConvertExceptionToText((NCMBException)ex)));\n\n}\n\n\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u57fa\u672c\u60c5\u5831\u306b\u5408\u308f\u305b\u3066screenName\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u8a2d\u5b9a\u3055\u308c\u307e\u3059\n\n\u975e\u540c\u671f\u51e6\u7406\u3084\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u306fIObservable\u306b\u5909\u63db\u3057\u3066\u3057\u307e\u3044\u3001\u5168\u3066UniRx\u306e\u4e16\u754c\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3068\u3068\u3066\u3082\u6357\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n**UniRx\u306b\u3064\u3044\u3066\u306e\u8a18\u4e8b\u306e\u307e\u3068\u3081\u306f[\u3053\u3061\u3089](http://qiita.com/toRisouP/items/48b9fa25df64d3c6a392)**\n\n---\n\nnifty\u306emBaaS\u3067\u3042\u308b\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9 mobile backend\uff08NCMB)\u306e\u30ed\u30b0\u30a4\u30f3\u5468\u308a\u306e\u51e6\u7406\u3092Observable\u306b\u5909\u63db\u3057\u3001UniRx\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n#IObservable\u5316\u3057\u305f\u30b3\u30fc\u30c9\n\nstatic class\u3068\u3057\u3066\u5b9a\u7fa9\u3057\u3066\u3042\u308a\u307e\u3059\u3002\u5229\u7528\u6642\u306busing\u3057\u3066\u4e0b\u3055\u3044\u3002\n\u3042\u3068\u3001\u3064\u3044\u3067\u306b\u4f7f\u3044\u3084\u3059\u3044\u3088\u3046\u306b\u4f1a\u54e1\u767b\u9332\u6642\u306b\u5225\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u66f4\u65b0\u3067\u304d\u308b\u6a5f\u80fd\u3092\u8ffd\u52a0\u3057\u307e\u3057\u305f\u3002\n\n```csharp:\u30ed\u30b0\u30a4\u30f3\u51e6\u7406\u3092IObservable\u306b\u5909\u63db\u3059\u308b\nusing System.Collections.Generic;\nusing NCMB;\nusing UniRx;\n\nnamespace ObservableNcmb\n{\n    public static class ObservableNcmbUserAuth\n    {\n        /// <summary>\n        /// ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u30ed\u30b0\u30a4\u30f3\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        public static IObservable<NCMBUser> LoginAsync(string id, string password)\n        {\n            return Observable.Create<NCMBUser>(observer =>\n            {\n                NCMBUser.LogInAsync(id, password, e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(NCMBUser.CurrentUser);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n\n        /// <summary>\n        /// ID\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u4f1a\u54e1\u767b\u9332\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        /// <param name=\"id\">ID</param>\n        /// <param name=\"password\">\u30d1\u30b9\u30ef\u30fc\u30c9</param>\n        /// <param name=\"optionalData\">\u305d\u306e\u4ed6\u30d5\u30a3\u30fc\u30eb\u30c9</param>\n        /// <returns></returns>\n        public static IObservable<NCMBUser> SingUpAsync(\n            string id,\n            string password,\n            Dictionary<string, object> optionalData = null)\n        {\n            return SingUpAsync(id: id, password: password, optionalData: optionalData, mail: null);\n        }\n\n\n        /// <summary>\n        /// ID\u304a\u3088\u3073\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3068\u30d1\u30b9\u30ef\u30fc\u30c9\u306b\u3088\u308b\u4f1a\u54e1\u767b\u9332\u3092\u5b9f\u884c\u3059\u308b\n        /// </summary>\n        /// <param name=\"mail\">\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9</param>\n        /// <param name=\"id\">ID</param>\n        /// <param name=\"password\">\u30d1\u30b9\u30ef\u30fc\u30c9</param>\n        /// <param name=\"optionalData\">\u305d\u306e\u4ed6\u30d5\u30a3\u30fc\u30eb\u30c9</param>\n        /// <returns></returns>\n        public static IObservable<NCMBUser> SingUpAsync(\n            string mail,\n            string id,\n            string password,\n            Dictionary<string, object> optionalData = null)\n        {\n            return Observable.Create<NCMBUser>(observer =>\n            {\n                var user = new NCMBUser\n                {\n                    Email = mail,\n                    UserName = id,\n                    Password = password\n                };\n\n                if (optionalData != null)\n                {\n                    foreach (var opt in optionalData)\n                    {\n                        user[opt.Key] = opt.Value;\n                    }\n                }\n\n                user.SignUpAsync(e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(user);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n\n        /// <summary>\n        /// \u30ed\u30b0\u30a2\u30a6\u30c8\u3092\u884c\u3046\n        /// </summary>\n        public static IObservable<Unit> LogoutAsync()\n        {\n            return Observable.Create<Unit>(observer =>\n            {\n                NCMBUser.LogOutAsync(e =>\n                {\n                    if (e == null)\n                    {\n                        observer.OnNext(Unit.Default);\n                        observer.OnCompleted();\n                    }\n                    else\n                    {\n                        observer.OnError(e);\n                    }\n                });\n                return Disposable.Create(() => {; });\n            });\n        }\n    }\n}\n\n```\n\n\n#\u4f7f\u7528\u4f8b\n\n\u5b9f\u969b\u306b\u4eca\u958b\u767a\u3057\u3066\u308b\u30d7\u30ed\u30c0\u30af\u30c8\u304b\u3089\u30b3\u30fc\u30c9\u3092\u629c\u7c8b\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30e6\u30fc\u30b6\u767b\u9332\u6642\u306b\u30d7\u30ec\u30a4\u30e4\u540d\uff08ScreenName\uff09\u3082\u4e00\u7dd2\u306b\u767b\u9332\u3059\u308b\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```csharp:\u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\n\n/// <summary>\n/// \u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\u3092\u884c\u3046\n/// </summary>\npublic void SignUp(string id, string mail, string pass, string screenName)\n{\n    //\u30d7\u30ec\u30a4\u30e4\u306e\u8868\u793a\u540d\u3092\u767b\u9332\u6642\u306b\u8a2d\u5b9a\u3059\u308b\n    //\u4f1a\u54e1\u30c6\u30fc\u30d6\u30eb\u306b\u4e88\u3081\u30d5\u30a3\u30fc\u30eb\u30c9\u3092\u5897\u3084\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\n    var optionalData = new Dictionary<string, object>()\n    {\n        {\"screenName\",screenName }\n    };\n\n    //\u30e6\u30fc\u30b6\u306e\u65b0\u898f\u767b\u9332\n    ObservableNcmbUserAuth\n        .SingUpAsync(mail, id, pass, optionalData)\n        .Subscribe(user =>\n        {\n            //NCMBUser\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u4fdd\u5b58\n            UserProfileProvider.SetUser(user);\n            //\u30ed\u30b0\u30a4\u30f3\u6210\u529f\u901a\u77e5\n            onSuccessLoginSubject.OnNext(Unit.Default);\n        },\n        //\u30a8\u30e9\u30fc\u6642\u306f\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u306b\u3092\u901a\u77e5\n        ex => failedReasonSubject.OnNext(ConvertExceptionToText((NCMBException)ex)));\n\n}\n\n```\n\n\u5b9f\u884c\u3059\u308b\u3068\u3053\u306e\u3088\u3046\u306b\u57fa\u672c\u60c5\u5831\u306b\u5408\u308f\u305b\u3066screenName\u30d5\u30a3\u30fc\u30eb\u30c9\u3082\u8a2d\u5b9a\u3055\u308c\u307e\u3059\n![s.png](https://qiita-image-store.s3.amazonaws.com/0/47146/cfef2500-40fd-9a88-d249-6a1a83ef5983.png)\n\n\n\u975e\u540c\u671f\u51e6\u7406\u3084\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u5b9f\u884c\u3059\u308b\u3082\u306e\u306fIObservable\u306b\u5909\u63db\u3057\u3066\u3057\u307e\u3044\u3001\u5168\u3066UniRx\u306e\u4e16\u754c\u3067\u6271\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304f\u3068\u3068\u3066\u3082\u6357\u308b\u306e\u3067\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n", "tags": ["NCMB", "UniRx", "Unity"]}