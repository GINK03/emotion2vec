{"context": " More than 1 year has passed since last update.\u6570\u5024\u3092\u6307\u5b9a\u306e\u6841\u6570\u306echar[]\u306b\u5165\u308c\u305f\u3044\u3002\n\u6570\u5024\u306e\u6841\u6570\u304c\u5c0f\u3055\u3044\u6642\u306b\u306f\u7a7a\u767d(0x20)\u3092\u524d\u306b\u5165\u308c\u308b\u3002\nsprintf()\u304c\u4f7f\u3048\u306a\u3044\u74b0\u5883\u3092\u8003\u616e\u3002\n\ntry1 (\u6b63\u306e\u6570\u306e\u307f)\n#include <stdio.h>\n\nvoid SetValToCharArray(int val, int length, char *dstPtr)\n{\n    int loop;\n    int digit;\n    int work;\n\n    work = val;\n    digit = 0;\n    while(work > 0) {\n        work /= 10;\n        digit++;\n    }\n\n    for(loop=0; loop < (length-digit); loop++) {\n        *dstPtr = ' ';\n        dstPtr++;\n    }\n\n    dstPtr += (digit - 1);\n    work = val;\n    for(loop=0; loop< digit; loop++) {\n        *dstPtr = (work % 10) + '0';\n        work /= 10;\n        dstPtr--;\n    }\n}\n\nint main(void) {\n    int val = 32768;\n    char szBuf[10];\n\n    memset(szBuf, 0, sizeof(szBuf) );\n\n    SetValToCharArray(val, /*length=*/7, &szBuf[0]);\n    printf(\"[%s]\\n\", szBuf); // [  32768]\n\n    // for check\n    sprintf(szBuf, \"%7d\", val);\n    printf(\"[%s]\\n\", szBuf);\n    return 0;\n}\n\nhttp://ideone.com/5b6usH\n\ntry2 (\u8ca0\u306e\u6570\u5bfe\u5fdc)\n\u3042\u307e\u308a\u304d\u308c\u3044\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u305f\u3002\n#include <stdio.h>\n#include <stdbool.h>\n\nvoid SetValToCharArray(int val, int length, char *dstPtr)\n{\n    int loop;\n    int digit;\n    int work;\n\n    bool minus = false;\n\n    if (val < 0) {\n        minus = true;\n        val = (-val);\n        length--;\n    }\n\n    work = val;\n    digit = 0;\n    while(work > 0) {\n        work /= 10;\n        digit++;\n    }\n\n    for(loop=0; loop < (length-digit); loop++) {\n        *dstPtr = ' ';\n        dstPtr++;\n    }\n\n    if (minus) {\n        *dstPtr = '-';\n        dstPtr++;\n    }\n\n    dstPtr += (digit - 1);\n    work = val;\n    for(loop=0; loop < digit; loop++) {\n        *dstPtr = (work % 10) + '0';\n        work /= 10;\n        dstPtr--;\n    }\n}\n\nint main(void) {\n    int val = -271;\n    char szBuf[10];\n\n    memset(szBuf, 0, sizeof(szBuf) );\n\n    SetValToCharArray(val, /*length=*/7, &szBuf[0]);\n    printf(\"[%s]\\n\", szBuf); // [  32768]\n\n    // for check\n    sprintf(szBuf, \"%7d\", val);\n    printf(\"[%s]\\n\", szBuf);\n    return 0;\n}\n\nhttp://ideone.com/W7BqSz\n\n\u5099\u8003\n\u5024\u304c0\u306e\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u81ea\u5206\u304c\u3069\u3046\u3057\u305f\u3044\u304b\u691c\u8a0e\u4e2d\u3002\n[    ]\n\n\u3068\u308a\u3042\u3048\u305a\u306e\u5b9f\u88c5\nhttp://ideone.com/sIGRt4\n\u6570\u5024\u3092\u6307\u5b9a\u306e\u6841\u6570\u306echar[]\u306b\u5165\u308c\u305f\u3044\u3002\n\u6570\u5024\u306e\u6841\u6570\u304c\u5c0f\u3055\u3044\u6642\u306b\u306f\u7a7a\u767d(0x20)\u3092\u524d\u306b\u5165\u308c\u308b\u3002\nsprintf()\u304c\u4f7f\u3048\u306a\u3044\u74b0\u5883\u3092\u8003\u616e\u3002\n\n##try1 (\u6b63\u306e\u6570\u306e\u307f)\n\n```c\n#include <stdio.h>\n\nvoid SetValToCharArray(int val, int length, char *dstPtr)\n{\n\tint loop;\n\tint digit;\n\tint work;\n\n\twork = val;\n\tdigit = 0;\n\twhile(work > 0) {\n\t\twork /= 10;\n\t\tdigit++;\n\t}\n\t\n\tfor(loop=0; loop < (length-digit); loop++) {\n\t\t*dstPtr = ' ';\n\t\tdstPtr++;\n\t}\n\n\tdstPtr += (digit - 1);\n\twork = val;\n\tfor(loop=0; loop< digit; loop++) {\n\t\t*dstPtr = (work % 10) + '0';\n\t\twork /= 10;\n\t\tdstPtr--;\n\t}\n}\n\nint main(void) {\n\tint val = 32768;\n\tchar szBuf[10];\n\t\n\tmemset(szBuf, 0, sizeof(szBuf) );\n\n\tSetValToCharArray(val, /*length=*/7, &szBuf[0]);\n\tprintf(\"[%s]\\n\", szBuf); // [  32768]\n\t\n\t// for check\n\tsprintf(szBuf, \"%7d\", val);\n\tprintf(\"[%s]\\n\", szBuf);\n\treturn 0;\n}\n```\n\nhttp://ideone.com/5b6usH\n\n\n## try2 (\u8ca0\u306e\u6570\u5bfe\u5fdc)\n\n\u3042\u307e\u308a\u304d\u308c\u3044\u306a\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3067\u306f\u306a\u3044\u304c\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u3044\u305f\u3002\n\n```c\n#include <stdio.h>\n#include <stdbool.h>\n\nvoid SetValToCharArray(int val, int length, char *dstPtr)\n{\n\tint loop;\n\tint digit;\n\tint work;\n\t\n\tbool minus = false;\n\n\tif (val < 0) {\n\t\tminus = true;\n\t\tval = (-val);\n\t\tlength--;\n\t}\n\n\twork = val;\n\tdigit = 0;\n\twhile(work > 0) {\n\t\twork /= 10;\n\t\tdigit++;\n\t}\n\t\n\tfor(loop=0; loop < (length-digit); loop++) {\n\t\t*dstPtr = ' ';\n\t\tdstPtr++;\n\t}\n\t\n\tif (minus) {\n\t   \t*dstPtr = '-';\n\t   \tdstPtr++;\n\t}\n\n\tdstPtr += (digit - 1);\n\twork = val;\n\tfor(loop=0; loop < digit; loop++) {\n\t\t*dstPtr = (work % 10) + '0';\n\t\twork /= 10;\n\t\tdstPtr--;\n\t}\n}\n\nint main(void) {\n\tint val = -271;\n\tchar szBuf[10];\n\t\n\tmemset(szBuf, 0, sizeof(szBuf) );\n\n\tSetValToCharArray(val, /*length=*/7, &szBuf[0]);\n\tprintf(\"[%s]\\n\", szBuf); // [  32768]\n\t\n\t// for check\n\tsprintf(szBuf, \"%7d\", val);\n\tprintf(\"[%s]\\n\", szBuf);\n\treturn 0;\n}\n```\n\nhttp://ideone.com/W7BqSz\n\n##\u5099\u8003\n\n\u5024\u304c0\u306e\u6642\u306b\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u3002\u81ea\u5206\u304c\u3069\u3046\u3057\u305f\u3044\u304b\u691c\u8a0e\u4e2d\u3002\n\n```\n[    ]\n```\n\n\u3068\u308a\u3042\u3048\u305a\u306e\u5b9f\u88c5\nhttp://ideone.com/sIGRt4\n\n", "tags": ["C", "stringOperation"]}