{"context": " More than 1 year has passed since last update.pytz \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb:\n$ pip install pytz\n\nMySQL\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a:\n$ sudo vim /etc/mysql/my.cnf\n\n[mysqld]\ndefault-time-zone = \"+09:00\"\n\n\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u60c5\u5831\u3092MySQL\u306b\u8a2d\u5b9a:\n$ mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -p mysql\nEnter password: \nWarning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\nWarning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n\u3053\u308c\u3067\u89e3\u6d88\u3002\n\u3061\u306a\u307f\u306b\u3001\n$ mysql_tzinfo_to_sql /usr/share/zoneinfo | grep \"^INSERT\" | awk '{ print $3 }' | sort | uniq |  \u00a5\n  while read table; do echo \"=== $table ===\" ; echo \"desc mysql.$table\" |  \u00a5\n  mysql -u root --password=$DBROOT_PASSWD -t ; done\n\nWarning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\nWarning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n=== time_zone ===\n\n+------------------+------------------+------+-----+---------+----------------+\n| Field            | Type             | Null | Key | Default | Extra          |\n+------------------+------------------+------+-----+---------+----------------+\n| Time_zone_id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |\n| Use_leap_seconds | enum('Y','N')    | NO   |     | N       |                |\n+------------------+------------------+------+-----+---------+----------------+\n\n=== time_zone_name ===\n\n+--------------+------------------+------+-----+---------+-------+\n| Field        | Type             | Null | Key | Default | Extra |\n+--------------+------------------+------+-----+---------+-------+\n| Name         | char(64)         | NO   | PRI | NULL    |       |\n| Time_zone_id | int(10) unsigned | NO   |     | NULL    |       |\n+--------------+------------------+------+-----+---------+-------+\n\n=== time_zone_transition ===\n\n+--------------------+------------------+------+-----+---------+-------+\n| Field              | Type             | Null | Key | Default | Extra |\n+--------------------+------------------+------+-----+---------+-------+\n| Time_zone_id       | int(10) unsigned | NO   | PRI | NULL    |       |\n| Transition_time    | bigint(20)       | NO   | PRI | NULL    |       |\n| Transition_type_id | int(10) unsigned | NO   |     | NULL    |       |\n+--------------------+------------------+------+-----+---------+-------+\n\n=== time_zone_transition_type ===\n\n+--------------------+---------------------+------+-----+---------+-------+\n| Field              | Type                | Null | Key | Default | Extra |\n+--------------------+---------------------+------+-----+---------+-------+\n| Time_zone_id       | int(10) unsigned    | NO   | PRI | NULL    |       |\n| Transition_type_id | int(10) unsigned    | NO   | PRI | NULL    |       |\n| Offset             | int(11)             | NO   |     | 0       |       |\n| Is_DST             | tinyint(3) unsigned | NO   |     | 0       |       |\n| Abbreviation       | char(8)             | NO   |     |         |       |\n+--------------------+---------------------+------+-----+---------+-------+\n\ndjango/db/models/query.py:\n\n    def datetimes(self, field_name, kind, order='ASC', tzinfo=None):\n        \"\"\"\n        Returns a list of datetime objects representing all available\n        datetimes for the given field_name, scoped to 'kind'.\n        \"\"\"\n        assert kind in (\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"), \\\n                \"'kind' must be one of 'year', 'month', 'day', 'hour', 'minute' or 'second'.\"\n        assert order in ('ASC', 'DESC'), \\\n                \"'order' must be either 'ASC' or 'DESC'.\"\n        if settings.USE_TZ:\n            if tzinfo is None:\n                tzinfo = timezone.get_current_timezone()\n        else:\n            tzinfo = None \n        return self._clone(klass=DateTimeQuerySet, setup=True,\n                _field_name=field_name, _kind=kind, _order=order, _tzinfo=tzinfo)\n\n\u5bfe\u51e6\u3057\u305f\u3089datetimes()\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3044:\n\n    >>> Profile.objects.datetimes('created_at','year')\n    [datetime.datetime(2014, 1, 1, 0, 0, tzinfo=<DstTzInfo 'Asia/Tokyo' JST+9:00:00 STD>)]\n\nSQL\u6587:\n\n    SELECT DISTINCT \n    CAST(\n        DATE_FORMAT(\n            CONVERT_TZ(`closed_profile`.`created_at`, 'UTC', 'Asia/Tokyo'), \n            '%Y-01-01 00:00:00') AS DATETIME\n    ) \n    FROM `closed_profile` ORDER BY 1 ASC LIMIT 21                \n\nCONVERT_TZ()\u3092\u5bfe\u51e6\u3057\u3066\u3044\u306a\u3044\u74b0\u5883\u3067\u5b9f\u884c\u3059\u308b\u3068NULL\u304c\u8fd4\u308b\uff1a\n$ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\nCONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\nNULL\n\nTZ\u60c5\u5831\u3092\u6d41\u3057\u8fbc\u3080\uff1a\n$ mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root --password=$DBROOT_PASSWD  mysql \nWarning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\nWarning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n$ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\nCONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\nNULL\n\n\u30ea\u30b9\u30bf\u30fc\u30c8\u5fc5\u8981:\n$ sudo /etc/init.d/mysql restart\nStopping MySQL database server: mysqld.\nStarting MySQL database server: mysqld . ..\nChecking for tables which need an upgrade, are corrupt or were \nnot closed cleanly..\n\n\u6642\u523b\u304c\u5909\u63db\u3055\u308c\u308b:\n$ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\nCONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\n2014-04-28 22:32:46\n\n\n\n\npytz \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb:\n\n    $ pip install pytz\n\nMySQL\u306b\u30c7\u30d5\u30a9\u30eb\u30c8\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u6307\u5b9a:\n\n    $ sudo vim /etc/mysql/my.cnf\n\n    [mysqld]\n    default-time-zone = \"+09:00\"\n\n\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u60c5\u5831\u3092MySQL\u306b\u8a2d\u5b9a:\n\n    $ mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root -p mysql\n    Enter password: \n    Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\n    Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n\n\u3053\u308c\u3067\u89e3\u6d88\u3002\n\n\n\u3061\u306a\u307f\u306b\u3001\n\n\n    $ mysql_tzinfo_to_sql /usr/share/zoneinfo | grep \"^INSERT\" | awk '{ print $3 }' | sort | uniq |  \u00a5\n      while read table; do echo \"=== $table ===\" ; echo \"desc mysql.$table\" |  \u00a5\n      mysql -u root --password=$DBROOT_PASSWD -t ; done\n\n    Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\n    Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n    === time_zone ===\n\n    +------------------+------------------+------+-----+---------+----------------+\n    | Field            | Type             | Null | Key | Default | Extra          |\n    +------------------+------------------+------+-----+---------+----------------+\n    | Time_zone_id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |\n    | Use_leap_seconds | enum('Y','N')    | NO   |     | N       |                |\n    +------------------+------------------+------+-----+---------+----------------+\n\n    === time_zone_name ===\n\n    +--------------+------------------+------+-----+---------+-------+\n    | Field        | Type             | Null | Key | Default | Extra |\n    +--------------+------------------+------+-----+---------+-------+\n    | Name         | char(64)         | NO   | PRI | NULL    |       |\n    | Time_zone_id | int(10) unsigned | NO   |     | NULL    |       |\n    +--------------+------------------+------+-----+---------+-------+\n\n    === time_zone_transition ===\n\n    +--------------------+------------------+------+-----+---------+-------+\n    | Field              | Type             | Null | Key | Default | Extra |\n    +--------------------+------------------+------+-----+---------+-------+\n    | Time_zone_id       | int(10) unsigned | NO   | PRI | NULL    |       |\n    | Transition_time    | bigint(20)       | NO   | PRI | NULL    |       |\n    | Transition_type_id | int(10) unsigned | NO   |     | NULL    |       |\n    +--------------------+------------------+------+-----+---------+-------+\n\n    === time_zone_transition_type ===\n\n    +--------------------+---------------------+------+-----+---------+-------+\n    | Field              | Type                | Null | Key | Default | Extra |\n    +--------------------+---------------------+------+-----+---------+-------+\n    | Time_zone_id       | int(10) unsigned    | NO   | PRI | NULL    |       |\n    | Transition_type_id | int(10) unsigned    | NO   | PRI | NULL    |       |\n    | Offset             | int(11)             | NO   |     | 0       |       |\n    | Is_DST             | tinyint(3) unsigned | NO   |     | 0       |       |\n    | Abbreviation       | char(8)             | NO   |     |         |       |\n    +--------------------+---------------------+------+-----+---------+-------+\n\n\ndjango/db/models/query.py:\n\n```py\n\n    def datetimes(self, field_name, kind, order='ASC', tzinfo=None):\n        \"\"\"\n        Returns a list of datetime objects representing all available\n        datetimes for the given field_name, scoped to 'kind'.\n        \"\"\"\n        assert kind in (\"year\", \"month\", \"day\", \"hour\", \"minute\", \"second\"), \\\n                \"'kind' must be one of 'year', 'month', 'day', 'hour', 'minute' or 'second'.\"\n        assert order in ('ASC', 'DESC'), \\\n                \"'order' must be either 'ASC' or 'DESC'.\"\n        if settings.USE_TZ:\n            if tzinfo is None:\n                tzinfo = timezone.get_current_timezone()\n        else:\n            tzinfo = None \n        return self._clone(klass=DateTimeQuerySet, setup=True,\n                _field_name=field_name, _kind=kind, _order=order, _tzinfo=tzinfo)\n```\n                \n\u5bfe\u51e6\u3057\u305f\u3089datetimes()\u3067\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3044:\n\n```py\n                \n    >>> Profile.objects.datetimes('created_at','year')\n    [datetime.datetime(2014, 1, 1, 0, 0, tzinfo=<DstTzInfo 'Asia/Tokyo' JST+9:00:00 STD>)]\n```\n\n\nSQL\u6587:\n\n```sql\n\n    SELECT DISTINCT \n    CAST(\n        DATE_FORMAT(\n            CONVERT_TZ(`closed_profile`.`created_at`, 'UTC', 'Asia/Tokyo'), \n            '%Y-01-01 00:00:00') AS DATETIME\n    ) \n    FROM `closed_profile` ORDER BY 1 ASC LIMIT 21                \n```\n\nCONVERT_TZ()\u3092\u5bfe\u51e6\u3057\u3066\u3044\u306a\u3044\u74b0\u5883\u3067\u5b9f\u884c\u3059\u308b\u3068NULL\u304c\u8fd4\u308b\uff1a\n\n    $ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\n    CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\n    NULL\n\nTZ\u60c5\u5831\u3092\u6d41\u3057\u8fbc\u3080\uff1a\n\n    $ mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql -u root --password=$DBROOT_PASSWD  mysql \n    Warning: Unable to load '/usr/share/zoneinfo/iso3166.tab' as time zone. Skipping it.\n    Warning: Unable to load '/usr/share/zoneinfo/zone.tab' as time zone. Skipping it.\n\n    $ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\n    CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\n    NULL\n\n\u30ea\u30b9\u30bf\u30fc\u30c8\u5fc5\u8981:\n\n    $ sudo /etc/init.d/mysql restart\n    Stopping MySQL database server: mysqld.\n    Starting MySQL database server: mysqld . ..\n    Checking for tables which need an upgrade, are corrupt or were \n    not closed cleanly..\n\n\u6642\u523b\u304c\u5909\u63db\u3055\u308c\u308b:\n\n    $ echo \"select CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo') from closed_profile limit 1\" | python manage.py dbshell\n\n    CONVERT_TZ(created_at, 'UTC', 'Asia/Tokyo')\n    2014-04-28 22:32:46\n\n", "tags": ["MySQL", "Django"]}