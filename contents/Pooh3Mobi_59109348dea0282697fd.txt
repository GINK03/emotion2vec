{"context": "\u3053\u306e\u8a18\u4e8b\u306fAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(Java)\u958b\u767a\u5411\u3051\u8a18\u4e8b\u3067\u3059\u3002\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3060\u3051\u3092\u307f\u305f\u3044\u304b\u305f\u306f\"FAB\u306eshow\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u307f\u3092\u30d1\u30af\u308b\"\u3078\u3069\u3046\u305e\u3002\n\n2016\u5e745\u6708\u73fe\u5728\u306eMaterial Design\u306b\u3064\u3044\u3066(\u96d1\u306b)\n\nDid you hear?\nThere's now over *1 million* #materialdesign apps in the @GooglePlay store! \n(extend your pinky and spread the word!) #io16\u2014 Matias Duarte (@MatiasDuarte_) 0:35 - 2016\u5e745\u670821\u65e5\n\n\u4e0a\u8a18\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u3082\u3046\u3059\u3067\u306b\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3092\u5c0e\u5165\u3057\u305f\u30a2\u30d7\u30ea\u306f100\u4e07\u3092\u8d85\u3048\u305f\u3089\u3057\u3044\u3067\u3059\u3002\n\u4eca\u5f8c\u306f\u4f3c\u305f\u3088\u3046\u306aUI\u304c\u591a\u304f\u306a\u308a\u3001\u30a2\u30d7\u30ea\u306e\u500b\u6027\u304c\u8584\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u306b\u3076\u3061\u5f53\u305f\u308b\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u6210\u529f\u4f8b\u3092\u898b\u3066\u5dee\u5225\u5316\u3092\u3069\u306e\u3088\u3046\u306b\u3084\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u3001\u7814\u7a76\u3057\u3066\u307f\u308b\u306e\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u5dee\u5225\u5316\u3068\u3057\u3066\u300cMaterialDesign\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u305f\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3044\uff01\u300d\u3063\u3066\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u304b\u306d\u3002\n\n\u4e00\u756a\u7c21\u5358\u306bMaterialDesign\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\n\u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u306b\u3042\u308bFAB\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u4eca\u56de\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3067\u3059\u3002\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af\n\uff11\u3001\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u305f\u3044\u5834\u5408\u306f\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210(minSdkVersion 14(Android 4.0\u4ee5\u4e0a))\u3002\nActivity\u3092\u30e1\u30cb\u30e5\u30fc\u304b\u3089\n\"File -> New -> Activity -> Scrolling Activity\"\n\u3067MainActivity\u306e\u9077\u79fb\u5148\u306eActivity\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u540d\u524d\u3092\u4eee\u306bSubActivity\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(\u52dd\u624b\u306b\u30b5\u30dd\u30fc\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306edependencies\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3053\u3089\u3078\u3093\u306f\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\u305d\u3046\u3059\u308b\u3068\u81ea\u52d5\u7684\u306bToolbar\u3068FAB\u304c\u914d\u7f6e\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3001SubActivity\u30af\u30e9\u30b9\u3067\u306f\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u4e2d\u8eab\u306e\u5b9f\u88c5\u3084Toolbar\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306a\u3069\u3092\u3059\u308c\u3070\u3044\u3044\u3060\u3051\u306e\u72b6\u614b\u306eActivity\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\uff12\u3001\u6b21\u306fSubActivity\u306eFAB\u306b\u9077\u79fb\u3057\u305f\u3068\u304d\u306b\u52d5\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u4e00\u3005\u30b4\u30ea\u30b4\u30eaAnimation\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001FloatingActionButton\u30af\u30e9\u30b9\u306bshow()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u547c\u3073\u51fa\u305b\u3070\u3044\u3044\u3067\u3059\u3002\uff08onResume\u3067show\u3057\u3066\u3082\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u306a\u3044\u306e\u3067\u6ce8\u610f\uff09\n\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306fonCreate\u3067FAB\u3092findViewById\u3057\u3066\u3044\u308b\u6b21\u306e\u884c\u304b\u3089\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\nSubActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sub);\n        final FloatingActionButton fab = (FloatingActionButton)findViewById(R.id.fab);\n        // VISBLE\u4ee5\u5916\u306e\u72b6\u614b\u3092\u8a2d\u5b9a\u3059\u308b\n        fab.setVisibility(View.GONE);\n        fab.getViewTreeObserver()\n           .addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\n            @Override\n            public void onGlobalLayout() {\n                fab.show();\n            }\n        });\n    }\n\n\n\u6ce8\u610f\u70b9\u306fshow\u3059\u308b\u969b\u306ffab\u306f\u53ef\u8996(View.VISIBLE)\u306e\u72b6\u614b\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002show\u3055\u308c\u308b\u524d\u306eFAB\u306eVisibility\u306fGONE\u304bINVISIBLE\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u308c\u3060\u3051\u3067\u3001\u753b\u9762\u9077\u79fb\u3057\u305f\u969b\u306bFAB\u304c\u3072\u3087\u3053\u3063\u3068\u51fa\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nFAB\u306eshow\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\nshow()\u306e\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u308f\u304b\u308a\u307e\u3059\u3051\u3069\u3001show()\u30e1\u30bd\u30c3\u30c9\u7121\u3044\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u76f4\u66f8\u304d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u2193\u3002\n\nFloatingActionButtonIcs.java(android.support.design.widget)\n @Override\n    void show(@Nullable final InternalVisibilityChangedListener listener, final boolean fromUser) {\n        if (mIsHiding || mView.getVisibility() != View.VISIBLE) {\n            if (ViewCompat.isLaidOut(mView) && !mView.isInEditMode()) {\n                mView.animate().cancel();\n                if (mView.getVisibility() != View.VISIBLE) {\n                    // If the view isn't visible currently, we'll animate it from a single pixel\n                    mView.setAlpha(0f);\n                    mView.setScaleY(0f);\n                    mView.setScaleX(0f);\n                }\n                mView.animate()\n                        .scaleX(1f)\n                        .scaleY(1f)\n                        .alpha(1f)\n                        .setDuration(SHOW_HIDE_ANIM_DURATION)\n                        .setInterpolator(AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR)\n                        .setListener(new AnimatorListenerAdapter() {\n                            @Override\n                            public void onAnimationStart(Animator animation) {\n                                mView.internalSetVisibility(View.VISIBLE, fromUser);\n                            }\n\n                            @Override\n                            public void onAnimationEnd(Animator animation) {\n                                if (listener != null) {\n                                    listener.onShown();\n                                }\n                            }\n                        });\n            } else {\n                mView.internalSetVisibility(View.VISIBLE, fromUser);\n                mView.setAlpha(1f);\n                mView.setScaleY(1f);\n                mView.setScaleX(1f);\n                if (listener != null) {\n                    listener.onShown();\n                }\n            }\n        }\n    }\n\n\n\u518d\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3088\u306d\u2026\u3002\u30b1\u30c1\u3002\n\nFAB\u306eshow\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u307f\u3092\u30d1\u30af\u308b\n\u304f\u3069\u304f\u3069\u9577\u304f\u306a\u3063\u3066\u3059\u307f\u307e\u305b\u3093\u3001\u672c\u984c\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u4e0a\u306e\u30b3\u30fc\u30c9\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3082\u3044\u3044\u3093\u3067\u3059\u3051\u3069\u3001show()\u3068\u540c\u3058\u306b\u975e\u8868\u793a\u306b\u3059\u308b\u3068\u304d\u306bhide()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3057\u3001\u307e\u3041\u8868\u793a\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3060\u3051\u6b32\u3057\u3044\u3057\u3001\u5168\u90e8\u66f8\u304f\u306e\u306f\u9762\u5012\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u6700\u5c0f\u9650\u306e\u30d1\u30af\u30ea\u306b\u6291\u3048\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\u30d1\u30af\u3063\u305f\u7d50\u679c\u304c\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\nAnimationUtil.java\n\n    /** view animation defines **/\n    public interface InternalVisibilityChangedListener {\n        void onShown();\n    }\n    private static final int SHOW_HIDE_ANIM_DURATION = 200;\n    private static final Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR =\n            new LinearOutSlowInInterpolator();\n\n    public static void show(final View view, final InternalVisibilityChangedListener listener) {\n        if (view.getVisibility() == View.VISIBLE) return;\n\n        view.animate().cancel();\n\n        view.setAlpha(0f);\n        view.setScaleY(0f);\n        view.setScaleX(0f);\n\n        view.animate()\n            .scaleX(1f)\n            .scaleY(1f)\n            .alpha(1f)\n            .setDuration(SHOW_HIDE_ANIM_DURATION)\n            .setInterpolator(LINEAR_OUT_SLOW_IN_INTERPOLATOR)\n            .setListener(new AnimatorListenerAdapter() {\n                @Override\n                public void onAnimationStart(Animator animation) {\n                    view.setVisibility(View.VISIBLE);\n                }\n\n                @Override\n                public void onAnimationEnd(Animator animation) {\n                    if(listener!= null) listener.onShown();\n                    super.onAnimationEnd(animation);\n                }\n            });\n\n    }\n\n\n\u3053\u308c\u3067\u3001\u4ed6\u306eView\u3067\u3082\u540c\u69d8\u306b\u3072\u3087\u3053\u3063\u3068\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u304f\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u7686\u3055\u307e\u306e\u304a\u624b\u4f1d\u3044\u306b\u306a\u308c\u3070\u5149\u6804\u3067\u3059\u3002\n\u4ee5\u4e0a\u304c\u4eca\u56de\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306b\u306a\u308a\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306fAndroid\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3(Java)\u958b\u767a\u5411\u3051\u8a18\u4e8b\u3067\u3059\u3002\n\n\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u3057\u3066\u3044\u308b\u30b3\u30fc\u30c9\u3060\u3051\u3092\u307f\u305f\u3044\u304b\u305f\u306f\"[FAB\u306eshow\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u307f\u3092\u30d1\u30af\u308b](#fab%E3%81%AEshow%E3%82%A2%E3%83%8B%E3%83%A1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%AE%E3%81%BF%E3%82%92%E3%83%91%E3%82%AF%E3%82%8B)\"\u3078\u3069\u3046\u305e\u3002\n\n## 2016\u5e745\u6708\u73fe\u5728\u306eMaterial Design\u306b\u3064\u3044\u3066(\u96d1\u306b)\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>Did you hear?\nThere's now over *1 million* #materialdesign apps in the @GooglePlay store! \n(extend your pinky and spread the word!) #io16</p>&mdash; Matias Duarte (@MatiasDuarte_) <a href=\"https://twitter.com/MatiasDuarte/status/733697565967941633\">0:35 - 2016\u5e745\u670821\u65e5</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n\u4e0a\u8a18\u8a18\u4e8b\u306b\u3042\u308b\u3088\u3046\u306b\u3001\u3082\u3046\u3059\u3067\u306b\u30de\u30c6\u30ea\u30a2\u30eb\u30c7\u30b6\u30a4\u30f3\u3092\u5c0e\u5165\u3057\u305f\u30a2\u30d7\u30ea\u306f100\u4e07\u3092\u8d85\u3048\u305f\u3089\u3057\u3044\u3067\u3059\u3002\n\u4eca\u5f8c\u306f\u4f3c\u305f\u3088\u3046\u306aUI\u304c\u591a\u304f\u306a\u308a\u3001\u30a2\u30d7\u30ea\u306e\u500b\u6027\u304c\u8584\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u554f\u984c\u306b\u3076\u3061\u5f53\u305f\u308b\u4e8b\u3082\u3042\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u3002\u305d\u3046\u3044\u3046\u5834\u5408\u306f\u6210\u529f\u4f8b\u3092\u898b\u3066\u5dee\u5225\u5316\u3092\u3069\u306e\u3088\u3046\u306b\u3084\u3063\u3066\u3044\u308b\u306e\u304b\u3092\u3001\u7814\u7a76\u3057\u3066\u307f\u308b\u306e\u304c\u3044\u3044\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u306d\u3002\n\n\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u5dee\u5225\u5316\u3068\u3057\u3066\u300cMaterialDesign\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u305f\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3044\uff01\u300d\u3063\u3066\u4eba\u5411\u3051\u306e\u8a18\u4e8b\u306b\u306a\u308a\u307e\u3059\u304b\u306d\u3002\n\n\n## \u4e00\u756a\u7c21\u5358\u306bMaterialDesign\u306a\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\n\u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u306b\u3042\u308bFAB\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u4eca\u56de\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3067\u3059\u3002\n[\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u52d5\u753b\u3078\u306e\u30ea\u30f3\u30af](https://material-design.storage.googleapis.com/publish/material_v_8/material_ext_publish/0B14F_FSUCc01UlJKVG9BVVFuMHM/GoodTransition_ClearDo-v3.webm)\n\n\uff11\u3001\u3068\u308a\u3042\u3048\u305a\u8a66\u3057\u305f\u3044\u5834\u5408\u306f\u9069\u5f53\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210(minSdkVersion 14(Android 4.0\u4ee5\u4e0a))\u3002\nActivity\u3092\u30e1\u30cb\u30e5\u30fc\u304b\u3089\n`\"File -> New -> Activity -> Scrolling Activity\"`\n\u3067MainActivity\u306e\u9077\u79fb\u5148\u306eActivity\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f\u540d\u524d\u3092\u4eee\u306bSubActivity\u3068\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n(\u52dd\u624b\u306b\u30b5\u30dd\u30fc\u30c8\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u306edependencies\u304c\u8ffd\u52a0\u3055\u308c\u308b\u306e\u3067\u3001\u305d\u3053\u3089\u3078\u3093\u306f\u6c17\u306b\u3057\u306a\u304f\u3066\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002)\n\n\u305d\u3046\u3059\u308b\u3068\u81ea\u52d5\u7684\u306bToolbar\u3068FAB\u304c\u914d\u7f6e\u3055\u308c\u305f\u30ec\u30a4\u30a2\u30a6\u30c8\u304c\u4f5c\u6210\u3055\u308c\u3001SubActivity\u30af\u30e9\u30b9\u3067\u306f\u3001\u30b9\u30af\u30ed\u30fc\u30eb\u3059\u308b\u4e2d\u8eab\u306e\u5b9f\u88c5\u3084Toolbar\u306e\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u306a\u3069\u3092\u3059\u308c\u3070\u3044\u3044\u3060\u3051\u306e\u72b6\u614b\u306eActivity\u304c\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\n\uff12\u3001\u6b21\u306fSubActivity\u306eFAB\u306b\u9077\u79fb\u3057\u305f\u3068\u304d\u306b\u52d5\u304f\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u5165\u308c\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3053\u3067\u3001\u4e00\u3005\u30b4\u30ea\u30b4\u30eaAnimation\u3092\u5b9a\u7fa9\u3059\u308b\u5fc5\u8981\u306f\u306a\u304f\u3001FloatingActionButton\u30af\u30e9\u30b9\u306bshow()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3001\u305d\u3061\u3089\u3092\u547c\u3073\u51fa\u305b\u3070\u3044\u3044\u3067\u3059\u3002\uff08onResume\u3067show\u3057\u3066\u3082\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3057\u306a\u3044\u306e\u3067\u6ce8\u610f\uff09\n\n\u30b3\u30fc\u30c9\u3068\u3057\u3066\u306fonCreate\u3067FAB\u3092findViewById\u3057\u3066\u3044\u308b\u6b21\u306e\u884c\u304b\u3089\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u307e\u3059\u3002\n\n```java:SubActivity.java\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_sub);\n        final FloatingActionButton fab = (FloatingActionButton)findViewById(R.id.fab);\n        // VISBLE\u4ee5\u5916\u306e\u72b6\u614b\u3092\u8a2d\u5b9a\u3059\u308b\n        fab.setVisibility(View.GONE);\n        fab.getViewTreeObserver()\n           .addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\n            @Override\n            public void onGlobalLayout() {\n                fab.show();\n            }\n        });\n    }\n```\n\u6ce8\u610f\u70b9\u306fshow\u3059\u308b\u969b\u306ffab\u306f\u53ef\u8996(View.VISIBLE)\u306e\u72b6\u614b\u3067\u306f\u3044\u3051\u307e\u305b\u3093\u3002show\u3055\u308c\u308b\u524d\u306eFAB\u306eVisibility\u306fGONE\u304bINVISIBLE\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u3060\u3051\u3067\u3001\u753b\u9762\u9077\u79fb\u3057\u305f\u969b\u306bFAB\u304c\u3072\u3087\u3053\u3063\u3068\u51fa\u3066\u304f\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n## FAB\u306eshow\u6642\u306e\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\nshow()\u306e\u30e1\u30bd\u30c3\u30c9\u5b9a\u7fa9\u3092\u898b\u3066\u3082\u3089\u3048\u3070\u308f\u304b\u308a\u307e\u3059\u3051\u3069\u3001show()\u30e1\u30bd\u30c3\u30c9\u7121\u3044\u306b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u304c\u76f4\u66f8\u304d\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u3093\u306a\u611f\u3058\u2193\u3002\n\n```java:FloatingActionButtonIcs.java(android.support.design.widget)\n @Override\n    void show(@Nullable final InternalVisibilityChangedListener listener, final boolean fromUser) {\n        if (mIsHiding || mView.getVisibility() != View.VISIBLE) {\n            if (ViewCompat.isLaidOut(mView) && !mView.isInEditMode()) {\n                mView.animate().cancel();\n                if (mView.getVisibility() != View.VISIBLE) {\n                    // If the view isn't visible currently, we'll animate it from a single pixel\n                    mView.setAlpha(0f);\n                    mView.setScaleY(0f);\n                    mView.setScaleX(0f);\n                }\n                mView.animate()\n                        .scaleX(1f)\n                        .scaleY(1f)\n                        .alpha(1f)\n                        .setDuration(SHOW_HIDE_ANIM_DURATION)\n                        .setInterpolator(AnimationUtils.LINEAR_OUT_SLOW_IN_INTERPOLATOR)\n                        .setListener(new AnimatorListenerAdapter() {\n                            @Override\n                            public void onAnimationStart(Animator animation) {\n                                mView.internalSetVisibility(View.VISIBLE, fromUser);\n                            }\n\n                            @Override\n                            public void onAnimationEnd(Animator animation) {\n                                if (listener != null) {\n                                    listener.onShown();\n                                }\n                            }\n                        });\n            } else {\n                mView.internalSetVisibility(View.VISIBLE, fromUser);\n                mView.setAlpha(1f);\n                mView.setScaleY(1f);\n                mView.setScaleX(1f);\n                if (listener != null) {\n                    listener.onShown();\n                }\n            }\n        }\n    }\n```\n\u518d\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3088\u306d\u2026\u3002\u30b1\u30c1\u3002\n\n## FAB\u306eshow\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u306e\u307f\u3092\u30d1\u30af\u308b\n\u304f\u3069\u304f\u3069\u9577\u304f\u306a\u3063\u3066\u3059\u307f\u307e\u305b\u3093\u3001\u672c\u984c\u306f\u3053\u3061\u3089\u3067\u3059\u3002\n\u4e0a\u306e\u30b3\u30fc\u30c9\u305d\u306e\u307e\u307e\u4f7f\u3046\u306e\u3082\u3044\u3044\u3093\u3067\u3059\u3051\u3069\u3001show()\u3068\u540c\u3058\u306b\u975e\u8868\u793a\u306b\u3059\u308b\u3068\u304d\u306bhide()\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u3057\u3001\u307e\u3041\u8868\u793a\u3059\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3060\u3051\u6b32\u3057\u3044\u3057\u3001\u5168\u90e8\u66f8\u304f\u306e\u306f\u9762\u5012\u304b\u306a\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u4eca\u56de\u306f\u6700\u5c0f\u9650\u306e\u30d1\u30af\u30ea\u306b\u6291\u3048\u3088\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d1\u30af\u3063\u305f\u7d50\u679c\u304c\u4e0b\u8a18\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n```java:AnimationUtil.java\n\n    /** view animation defines **/\n    public interface InternalVisibilityChangedListener {\n        void onShown();\n    }\n    private static final int SHOW_HIDE_ANIM_DURATION = 200;\n    private static final Interpolator LINEAR_OUT_SLOW_IN_INTERPOLATOR =\n            new LinearOutSlowInInterpolator();\n\n    public static void show(final View view, final InternalVisibilityChangedListener listener) {\n        if (view.getVisibility() == View.VISIBLE) return;\n\n        view.animate().cancel();\n\n        view.setAlpha(0f);\n        view.setScaleY(0f);\n        view.setScaleX(0f);\n\n        view.animate()\n            .scaleX(1f)\n            .scaleY(1f)\n            .alpha(1f)\n            .setDuration(SHOW_HIDE_ANIM_DURATION)\n            .setInterpolator(LINEAR_OUT_SLOW_IN_INTERPOLATOR)\n            .setListener(new AnimatorListenerAdapter() {\n                @Override\n                public void onAnimationStart(Animator animation) {\n                    view.setVisibility(View.VISIBLE);\n                }\n\n                @Override\n                public void onAnimationEnd(Animator animation) {\n                    if(listener!= null) listener.onShown();\n                    super.onAnimationEnd(animation);\n                }\n            });\n\n    }\n```\n\n\u3053\u308c\u3067\u3001\u4ed6\u306eView\u3067\u3082\u540c\u69d8\u306b\u3072\u3087\u3053\u3063\u3068\u30b9\u30b1\u30fc\u30eb\u3057\u3066\u304f\u308b\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u8868\u73fe\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u7686\u3055\u307e\u306e\u304a\u624b\u4f1d\u3044\u306b\u306a\u308c\u3070\u5149\u6804\u3067\u3059\u3002\n\n\u4ee5\u4e0a\u304c\u4eca\u56de\u306e\u8a18\u4e8b\u306e\u5185\u5bb9\u306b\u306a\u308a\u307e\u3059\u3002\n", "tags": ["android\u958b\u767a", "Android", "AndroidSDK", "MaterialDesign"]}