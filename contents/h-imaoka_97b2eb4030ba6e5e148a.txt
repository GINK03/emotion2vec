{"tags": ["Ansible", "Python", "jinja2"], "context": "\n\nAll version?\n\nskip setup\n\n\nansible.cfg\n[defaults]\ngathering=explicit\n\n\n\nmodule ref\nansible-doc <module>\n\ngit clone\nuse git module\nFor repo=git:// (ssh), hostkey issue.\naccept_hostkey=yes\n\ngit for private repo\nssh-agent?\nhttp://qiita.com/seizans/items/f5f052aec1592c47767f\n\nSELinux python\nMandatory...\n    - name: install essential packages\n      yum: name=libselinux-python state=installed\n\n\nstring append via lineinfile\n    - name: disable SELinux\n      lineinfile: dest=/etc/selinux/config regexp=^SELINUXPLUS= line=SELINUXPLUS=disabled\n\nWhen you want to erase, use state=absent\n\nAnsible 2.0x\n\nSet tags for a role\nroles:\n  - { role: webserver, port: 5000, tags: [ 'web', 'foo' ] }\n\n\n[DEPRECATION WARNING]: Using bare variables is deprecated.\nNG\n\nvar/main.yml\n---\nuser:\n - hoge\n - fuga\n - use1\n\n\n\n- name: mk user dir\n  file:\n    dest: '/home/{{item}}'\n    state: directory\n    owner: '{{item}}'\n    group: '{{item}}'\n    mode: 0700\n  with_items:\n    - user\n\nOK\n- name: mk user dir\n  file:\n    dest: '/home/{{item}}'\n    state: directory\n    owner: '{{item}}'\n    group: '{{item}}'\n    mode: 0700\n  with_items:\n    - '{{user}}'\n\n\nMore YAMLish!\nhttp://qiita.com/Hiraku/items/e8b55775fa55b0e72a44\n- name: some task\n  shell: |\n    echo hoge >> somelog.txt\n    echo foo\n    echo baa\n  args:\n    chdir: somedir/\n\n\nRef module's document\n# show all modules\nansible-doc -l\n\n# show file module doc\nansible-doc file\n\n\nGem & rbenv\nset executable = [your gem path]\nset user_install=False\n- name: install bundler\n  gem: name=bundler user_install=no executable=/opt/rbenv/shims/gem\n\n\nI want to use 2.0's extra mods\n\nCreate library dir in your ansible_home directory.\nDownload extra mods source from github and move to library dir.\n\n\nCan I use nested vars?\nNo. \nthis is W/A.\n\ntask.yml\n- name: copy user-indivisual files\n  copy:\n    content: '{{ sample_text[item] }}'\n    dest: '/home/{{item}}/test.txt'\n  with_items:\n    - hoge\n    - fuga\n\n\n\nvars.yml\nsample_text:\n  hoge: |\n    hello world.\n    this is hoge.\n  fuga: |\n    hello world!\n    this is fuga.\n\n\n\nApply ansible vault to file\nuse copy: content=\"{{ encrypted_var }}\" dest=hoge.txt\n\nUser-defined template filter (jinja2)\n\nSet custom filter path in ansible.cfg.\nWrite python script!\n\n\nansible.cfg\n[defaults]\nfilter_plugins = /filter_plugins/auto_server_id.py\n\n\n\nauto_server_id.py\ndef calc_server_id(ipaddr):\n    octs = ipaddr.split('.')\n    return eval(octs[2] + \"*256+\" + octs[3])\n\n\nclass FilterModule(object):\n    def filters(self):\n        return {'auto_server_id': calc_server_id}\n\n\n\nUse it!\n\nsample.j2\n{{ \"192.168.1.200\"|auto_server_id }}\n\n\n\nIdempotence (\u51aa\u7b49\u6027)\n\nUser handlers\n\n\nrole/hoge/tasks/main.yml\n- name: config httpd\n  copy: src=xxx dest=/etc/httpd/httpd.conf\n  notify: restart httpd\n\n\n\nrole/hoge/handlers/main.yml\n- name: restart httpd\n  service: name=httpd state=restarted\n\n\nnotify launched by task result changed.\nEven if notify occured any times, handler runs only once.\n\nshell/command module dafault\n\n\nfailed caused by rturn code != 0 $? != 0\n\nAnytime changed !\n\n\nModify changed judgement\ntasks:\n  - name: install python-apt\n    shell: LANG=C sudo apt-get install -y python-apt\n    register: result\n    changed_when: '\"is already the newest version\" not in result.stdout'\n  - debug: var=result\n\n\nModify failed judgement\n\ntasks/main.yml\n- name: set Timezone\n  shell: /tmp/set-localtime.sh\n  register: tz_res\n  failed_when: tz_res.rc not in [0, 1]\n  changed_when: tz_res.rc != 0\n  tags: config\n\n\n\n\nfiles/set-localtime.sh\nP_LG=`localectl status`\nlocalectl set-locale LANG=ja_JP.UTF-8\nlocalectl set-keymap jp-OADG109A\nC_LG=`localectl status`\necho $P_LG | ( echo $C_LG | diff /dev/fd/3 -) 3<&0\n\n\n# All version?\n## skip `setup`\n\n```ansible.cfg\n[defaults]\ngathering=explicit\n```\n\n## module ref\n\n`ansible-doc <module>`\n\n## git clone\nuse `git` module\n\nFor repo=git:// (ssh), hostkey issue.\n\n`accept_hostkey=yes`\n\n## git for private repo\nssh-agent?\nhttp://qiita.com/seizans/items/f5f052aec1592c47767f\n\n## SELinux python\nMandatory...\n\n```\n    - name: install essential packages\n      yum: name=libselinux-python state=installed\n```\n\n#string append via lineinfile\n\n```\n    - name: disable SELinux\n      lineinfile: dest=/etc/selinux/config regexp=^SELINUXPLUS= line=SELINUXPLUS=disabled\n```\n\nWhen you want to erase, use `state=absent`\n\n# Ansible 2.0x\n\n## Set tags for a role\n```yaml:\nroles:\n  - { role: webserver, port: 5000, tags: [ 'web', 'foo' ] }\n```\n  \n## [DEPRECATION WARNING]: Using bare variables is deprecated.\n__NG__\n\n```yaml:var/main.yml\n---\nuser:\n - hoge\n - fuga\n - use1\n\n```\n\n```yaml:\n- name: mk user dir\n  file:\n    dest: '/home/{{item}}'\n    state: directory\n    owner: '{{item}}'\n    group: '{{item}}'\n    mode: 0700\n  with_items:\n    - user\n```\n__OK__\n\n\n```yaml:\n- name: mk user dir\n  file:\n    dest: '/home/{{item}}'\n    state: directory\n    owner: '{{item}}'\n    group: '{{item}}'\n    mode: 0700\n  with_items:\n    - '{{user}}'\n```\n\n## More YAMLish!\nhttp://qiita.com/Hiraku/items/e8b55775fa55b0e72a44\n\n```yaml:\n- name: some task\n  shell: |\n    echo hoge >> somelog.txt\n    echo foo\n    echo baa\n  args:\n    chdir: somedir/\n```\n\n#Ref module's document\n\n```bash:\n# show all modules\nansible-doc -l\n\n# show file module doc\nansible-doc file\n```\n\n#Gem & rbenv\nset `executable` = [your gem path]\nset `user_install`=False\n\n```yaml:\n- name: install bundler\n  gem: name=bundler user_install=no executable=/opt/rbenv/shims/gem\n```\n\n#I want to use 2.0's extra mods\n\n1. Create `library` dir in your ansible_home directory.\n2. Download extra mods source from github and move to `library` dir.\n\n\n\n#Can I use nested vars?\nNo. \nthis is W/A.\n\n```yaml:task.yml\n- name: copy user-indivisual files\n  copy:\n    content: '{{ sample_text[item] }}'\n    dest: '/home/{{item}}/test.txt'\n  with_items:\n    - hoge\n    - fuga\n```\n\n```yaml:vars.yml\nsample_text:\n  hoge: |\n    hello world.\n    this is hoge.\n  fuga: |\n    hello world!\n    this is fuga.\n```\n\n#Apply ansible vault to file\nuse `copy: content=\"{{ encrypted_var }}\" dest=hoge.txt`\n\n#User-defined template filter (jinja2)\n1. Set custom filter path in `ansible.cfg`.\n2. Write python script!\n\n```ini:ansible.cfg\n[defaults]\nfilter_plugins = /filter_plugins/auto_server_id.py\n```\n\n```python:auto_server_id.py\ndef calc_server_id(ipaddr):\n    octs = ipaddr.split('.')\n    return eval(octs[2] + \"*256+\" + octs[3])\n\n\nclass FilterModule(object):\n    def filters(self):\n        return {'auto_server_id': calc_server_id}\n        \n```\n\nUse it!\n\n```:sample.j2\n{{ \"192.168.1.200\"|auto_server_id }}\n```\n#  Idempotence (\u51aa\u7b49\u6027)\n## User `handlers`\n\n```role/hoge/tasks/main.yml\n- name: config httpd\n  copy: src=xxx dest=/etc/httpd/httpd.conf\n  notify: restart httpd\n```\n\n```role/hoge/handlers/main.yml\n- name: restart httpd\n  service: name=httpd state=restarted\n```\n\n`notify` launched by task result `changed`.\nEven if `notify` occured any times, handler runs only once.\n\n## shell/command module dafault\n- `failed` caused by rturn code != 0 `$? != 0`\n- Anytime `changed` !\n\n## Modify `changed` judgement\n\n```yaml:\ntasks:\n  - name: install python-apt\n    shell: LANG=C sudo apt-get install -y python-apt\n    register: result\n    changed_when: '\"is already the newest version\" not in result.stdout'\n  - debug: var=result\n```\n## Modify `failed` judgement\n```yaml:tasks/main.yml\n- name: set Timezone\n  shell: /tmp/set-localtime.sh\n  register: tz_res\n  failed_when: tz_res.rc not in [0, 1]\n  changed_when: tz_res.rc != 0\n  tags: config\n\n```\n\n```text:files/set-localtime.sh\nP_LG=`localectl status`\nlocalectl set-locale LANG=ja_JP.UTF-8\nlocalectl set-keymap jp-OADG109A\nC_LG=`localectl status`\necho $P_LG | ( echo $C_LG | diff /dev/fd/3 -) 3<&0\n```\n"}