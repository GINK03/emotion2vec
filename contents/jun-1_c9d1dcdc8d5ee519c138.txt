{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nSpring Security\u3068Spring MVC\u3092xml\u3092\u4f7f\u308f\u305a\u306b\u8a2d\u5b9a\u3057\u3066\u307f\u305f\u969b\u306e\u30e1\u30e2\u3002\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u306fGutHub\n\n\u8a2d\u5b9a\u5185\u5bb9\n\n\u8a8d\u8a3c\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n\u4f46\u3057\u3001Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306fHTTP\u30b9\u30c6\u30fc\u30bf\u30b9401\u3092\u8fd4\u3059\nThymeleaf\u3067sec:authorize=\"hasRole('ROLE_ADMIN')\"\u306e\u3088\u3046\u306b\u3001\u30ed\u30fc\u30eb\u306b\u3088\u3063\u3066\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n\n\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\n\u4f7f\u7528\u3059\u308b\u4e3b\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\n\nSpringSecurity : 4.0.0.M1\nSpringMVC : 4.0.5.RELEASE\nThymeleaf : 2.1.3.RELEASE\n\n\u8a73\u7d30\u306fpom.xm\u3092\u53c2\u7167\n\nSpringSecurity\u306e\u8a2d\u5b9a\n\u4eca\u56de\u306fAjax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3066\u3001HTTP\u30b9\u30c6\u30fc\u30bf\u30b9401\u3092\u8fd4\u3057\u305f\u3044\u306e\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306bX-Requested-With: XMLHttpRequest\u304c\u3042\u3063\u305f\u5834\u5408\u306eAuthenticationEntryPoint\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\nWebSecurityConfig\n@Configuration\n@EnableWebMvcSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n            .withUser(\"admin\").password(\"admin\").roles(\"ADMIN\").and()\n            .withUser(\"user\").password(\"user\").roles(\"USER\");\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http\n            .authorizeRequests()\n                .antMatchers(\n                    \"/\",\n                    \"/css/**\",\n                    \"/login\",\n                    \"/logout\").permitAll()\n                .anyRequest().authenticated()\n                .and()\n            .formLogin()\n                .loginPage(\"/login\")\n                .and()\n            .logout()\n                .logoutRequestMatcher(logoutRequestMatcher())\n                .invalidateHttpSession(true)\n                .and()\n            .csrf()\n                .and()\n            .exceptionHandling()\n                .defaultAuthenticationEntryPointFor(\n                    ajaxAuthenticationEntryPoint(),\n                    ajaxRequestMatcher()\n                );\n    }\n\n    @Bean\n    public AuthenticationEntryPoint ajaxAuthenticationEntryPoint() {\n    return new AuthenticationEntryPoint() {\n        @Override\n        public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n            response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n        }\n    };\n    }\n\n    @Bean\n    public RequestMatcher ajaxRequestMatcher() {\n    return new RequestHeaderRequestMatcher(\"X-Requested-With\", \"XMLHttpRequest\");\n    }\n\n    @Bean\n    public RequestMatcher logoutRequestMatcher() {\n    return new AntPathRequestMatcher(\"/logout\");\n    }\n\n}\n\n\n\nSpringMVC\u306e\u8a2d\u5b9a\n\u30ea\u30bd\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u3068\u30d3\u30e5\u30fc\u3092\u8fd4\u3059\u3060\u3051\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u304b\u3089@Import(ThymeleafConfig.class)\u3067Thymeleaf\u306e\u8a2d\u5b9a\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n\nWebMvcConfig\n@Configuration\n@EnableWebMvc\n@Import(ThymeleafConfig.class)\n@ComponentScan(\n        basePackageClasses = {AjaxTestController.class}\n)\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n\n    @Override\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/css/**\").addResourceLocations(\"/WEB-INF/views/css/\");\n    }\n\n    @Override\n    public void addViewControllers(ViewControllerRegistry registry) {\n        registry.addViewController(\"/\").setViewName(\"index\");\n        registry.addViewController(\"/login\").setViewName(\"login\");\n        registry.addViewController(\"/member\").setViewName(\"member\");\n    }\n}\n\n\n\nTymeleaf\u306e\u8a2d\u5b9a\nThymeleaf\u3068SpringSecurity\u3092\u9023\u643a\u3059\u308b\u305f\u3081\u306bSpringSecurityDialect\u3092\u8ffd\u52a0\u3002\n\u958b\u767a\u4e2d\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u306a\u3044\u65b9\u304c\u3044\u3044\u306e\u3067resolver.setCacheable(false);\n\u305d\u308c\u304b\u3089\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u8a2d\u5b9a\u306f2\u7b87\u6240\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n\nThymeleafConfig\n@Configuration\npublic class ThymeleafConfig {\n\n    private final String CHARACTER_ENCODING = \"UTF-8\";\n\n    @Bean\n    public ServletContextTemplateResolver templateResolver() {\n        ServletContextTemplateResolver resolver\n                = new ServletContextTemplateResolver();\n        resolver.setPrefix(\"/WEB-INF/views/\");\n        resolver.setSuffix(\".html\");\n        resolver.setTemplateMode(\"HTML5\");\n        resolver.setCharacterEncoding(CHARACTER_ENCODING);\n        resolver.setCacheable(false);\n        return resolver;\n    }\n\n    @Bean\n    public SpringTemplateEngine templateEngine() {\n        SpringTemplateEngine engine = new SpringTemplateEngine();\n        engine.setTemplateResolver(templateResolver());\n        engine.addDialect(springSecurityDialect());\n        return engine;\n    }\n\n    @Bean\n    public ThymeleafViewResolver thymeleafViewResolver() {\n        ThymeleafViewResolver resolver = new ThymeleafViewResolver();\n        resolver.setTemplateEngine(templateEngine());\n        resolver.setCharacterEncoding(CHARACTER_ENCODING);\n        return resolver;\n    }\n\n    @Bean\n    public IDialect springSecurityDialect() {\n        SpringSecurityDialect dialect = new SpringSecurityDialect();\n        return dialect;\n    }\n}\n\n\n#\u6982\u8981\n\nSpring Security\u3068Spring MVC\u3092xml\u3092\u4f7f\u308f\u305a\u306b\u8a2d\u5b9a\u3057\u3066\u307f\u305f\u969b\u306e\u30e1\u30e2\u3002\n\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u306f[GutHub](https://github.com/jun-1/spring-javaconfig-sample/)\n\n#\u8a2d\u5b9a\u5185\u5bb9\n\n* \u8a8d\u8a3c\u30a8\u30e9\u30fc\u306e\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u3092\u8868\u793a\u3059\u308b\n* \u4f46\u3057\u3001Ajax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306fHTTP\u30b9\u30c6\u30fc\u30bf\u30b9401\u3092\u8fd4\u3059\n* Thymeleaf\u3067`sec:authorize=\"hasRole('ROLE_ADMIN')\"`\u306e\u3088\u3046\u306b\u3001\u30ed\u30fc\u30eb\u306b\u3088\u3063\u3066\u8868\u793a\u3092\u5207\u308a\u66ff\u3048\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n#\u5fc5\u8981\u306a\u4f9d\u5b58\u95a2\u4fc2\n\n\u4f7f\u7528\u3059\u308b\u4e3b\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\n\n* SpringSecurity : 4.0.0.M1\n* SpringMVC : 4.0.5.RELEASE\n* Thymeleaf : 2.1.3.RELEASE\n\n\u8a73\u7d30\u306f[pom.xm](https://github.com/jun-1/spring-javaconfig-sample/pom.xml)\u3092\u53c2\u7167\n\n#SpringSecurity\u306e\u8a2d\u5b9a\n\n\u4eca\u56de\u306fAjax\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u5834\u5408\u306f\u30ed\u30b0\u30a4\u30f3\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3059\u308b\u306e\u3067\u306f\u306a\u304f\u3066\u3001HTTP\u30b9\u30c6\u30fc\u30bf\u30b9401\u3092\u8fd4\u3057\u305f\u3044\u306e\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306b`X-Requested-With: XMLHttpRequest`\u304c\u3042\u3063\u305f\u5834\u5408\u306eAuthenticationEntryPoint\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java:WebSecurityConfig\n@Configuration\n@EnableWebMvcSecurity\npublic class WebSecurityConfig extends WebSecurityConfigurerAdapter {\n\n\t@Override\n\tprotected void configure(AuthenticationManagerBuilder auth) throws Exception {\n\t\tauth.inMemoryAuthentication()\n\t\t\t.withUser(\"admin\").password(\"admin\").roles(\"ADMIN\").and()\n\t\t\t.withUser(\"user\").password(\"user\").roles(\"USER\");\n\t}\n\n\t@Override\n\tprotected void configure(HttpSecurity http) throws Exception {\n\t\thttp\n\t\t\t.authorizeRequests()\n\t\t\t\t.antMatchers(\n\t\t\t\t\t\"/\",\n\t\t\t\t\t\"/css/**\",\n\t\t\t\t\t\"/login\",\n\t\t\t\t\t\"/logout\").permitAll()\n\t\t\t\t.anyRequest().authenticated()\n\t\t\t\t.and()\n\t\t\t.formLogin()\n\t\t\t\t.loginPage(\"/login\")\n\t\t\t\t.and()\n\t\t\t.logout()\n\t\t\t\t.logoutRequestMatcher(logoutRequestMatcher())\n\t\t\t\t.invalidateHttpSession(true)\n\t\t\t\t.and()\n\t\t\t.csrf()\n\t\t\t\t.and()\n\t\t\t.exceptionHandling()\n\t\t\t\t.defaultAuthenticationEntryPointFor(\n\t\t\t\t\tajaxAuthenticationEntryPoint(),\n\t\t\t\t\tajaxRequestMatcher()\n\t\t\t\t);\n\t}\n\n\t@Bean\n\tpublic AuthenticationEntryPoint ajaxAuthenticationEntryPoint() {\n\treturn new AuthenticationEntryPoint() {\n\t\t@Override\n\t\tpublic void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n\t\t\tresponse.setStatus(HttpServletResponse.SC_UNAUTHORIZED);\n\t\t}\n\t};\n\t}\n\n\t@Bean\n\tpublic RequestMatcher ajaxRequestMatcher() {\n\treturn new RequestHeaderRequestMatcher(\"X-Requested-With\", \"XMLHttpRequest\");\n\t}\n\n\t@Bean\n\tpublic RequestMatcher logoutRequestMatcher() {\n\treturn new AntPathRequestMatcher(\"/logout\");\n\t}\n\n}\n```\n\n#SpringMVC\u306e\u8a2d\u5b9a\n\n\u30ea\u30bd\u30fc\u30b9\u30cf\u30f3\u30c9\u30e9\u3068\u30d3\u30e5\u30fc\u3092\u8fd4\u3059\u3060\u3051\u306e\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059\u3002\n\u305d\u308c\u304b\u3089`@Import(ThymeleafConfig.class)`\u3067Thymeleaf\u306e\u8a2d\u5b9a\u3092\u30a4\u30f3\u30dd\u30fc\u30c8\u3002\n\n```java:WebMvcConfig\n@Configuration\n@EnableWebMvc\n@Import(ThymeleafConfig.class)\n@ComponentScan(\n\t\tbasePackageClasses = {AjaxTestController.class}\n)\npublic class WebMvcConfig extends WebMvcConfigurerAdapter {\n\n\t@Override\n\tpublic void addResourceHandlers(ResourceHandlerRegistry registry) {\n\t\tregistry.addResourceHandler(\"/css/**\").addResourceLocations(\"/WEB-INF/views/css/\");\n\t}\n\n\t@Override\n\tpublic void addViewControllers(ViewControllerRegistry registry) {\n\t\tregistry.addViewController(\"/\").setViewName(\"index\");\n\t\tregistry.addViewController(\"/login\").setViewName(\"login\");\n\t\tregistry.addViewController(\"/member\").setViewName(\"member\");\n\t}\n}\n```\n\n#Tymeleaf\u306e\u8a2d\u5b9a\n\nThymeleaf\u3068SpringSecurity\u3092\u9023\u643a\u3059\u308b\u305f\u3081\u306bSpringSecurityDialect\u3092\u8ffd\u52a0\u3002\n\u958b\u767a\u4e2d\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u306a\u3044\u65b9\u304c\u3044\u3044\u306e\u3067`resolver.setCacheable(false);`\n\u305d\u308c\u304b\u3089\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u8a2d\u5b9a\u306f2\u7b87\u6240\u3042\u308b\u306e\u3067\u6ce8\u610f\u3002\n\n```java:ThymeleafConfig \n@Configuration\npublic class ThymeleafConfig {\n\n\tprivate final String CHARACTER_ENCODING = \"UTF-8\";\n\n\t@Bean\n\tpublic ServletContextTemplateResolver templateResolver() {\n\t\tServletContextTemplateResolver resolver\n\t\t\t\t= new ServletContextTemplateResolver();\n\t\tresolver.setPrefix(\"/WEB-INF/views/\");\n\t\tresolver.setSuffix(\".html\");\n\t\tresolver.setTemplateMode(\"HTML5\");\n\t\tresolver.setCharacterEncoding(CHARACTER_ENCODING);\n\t\tresolver.setCacheable(false);\n\t\treturn resolver;\n\t}\n\n\t@Bean\n\tpublic SpringTemplateEngine templateEngine() {\n\t\tSpringTemplateEngine engine = new SpringTemplateEngine();\n\t\tengine.setTemplateResolver(templateResolver());\n\t\tengine.addDialect(springSecurityDialect());\n\t\treturn engine;\n\t}\n\n\t@Bean\n\tpublic ThymeleafViewResolver thymeleafViewResolver() {\n\t\tThymeleafViewResolver resolver = new ThymeleafViewResolver();\n\t\tresolver.setTemplateEngine(templateEngine());\n\t\tresolver.setCharacterEncoding(CHARACTER_ENCODING);\n\t\treturn resolver;\n\t}\n\n\t@Bean\n\tpublic IDialect springSecurityDialect() {\n\t\tSpringSecurityDialect dialect = new SpringSecurityDialect();\n\t\treturn dialect;\n\t}\n}\n```\n", "tags": ["spring4.0.5.RELEASE", "spring-security4.0.0.M1", "Java", "Thymeleaf2.1.3.RELEASE"]}