{"tags": ["GitHub", "lambda", "APIGateway", "AWS", "CI"], "context": "\n\n\u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\nTrello \u304c\u8cb7\u53ce\u3055\u308c\u305f\u306e\u3067\u3001\u4ee3\u66ff\u3092\u63a2\u3059\u3002\n\u6628\u5e74 9 \u6708\u9803? \u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3001GitHub \u306e Projects \u6a5f\u80fd\u304c\u3088\u304f\u51fa\u6765\u3066\u3044\u308b\u304c\u3001\u30ab\u30fc\u30c9\u306e\u767b\u9332\u304c\u624b\u52d5\u3067\u9762\u5012\u81ed\u3044\u3002\nGitHub \u306b Issue \u3092\u767b\u9332\u3057\u305f\u3089\u3001Projects \u306e\u30ab\u30fc\u30c9\u3068\u3057\u3066\u81ea\u52d5\u3067\u767b\u9332\u3057\u3066\u6b32\u3057\u3044\u3002\n\u307e\u305f\u3001Issue \u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u305f\u3089\u3001Projects \u304b\u3089\u306f\u53d6\u308a\u9664\u3044\u3066\u304f\u308c\u308b\u3068\u3001\u30ab\u30f3\u30d0\u30f3\u904b\u7528\u304c\u6357\u308a\u305d\u3046\u3060\u3002\n\u5b8c\u6210\u30a4\u30e1\u30fc\u30b8\n\n\n\n\u8a2d\u5b9a\n\nGitHub\n\u6700\u521d\u306b\u3001\u56f3\u306e token A \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nGitHub \u306e API \u3092\u5b9f\u884c\u3059\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u3001Personal Access Token \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nrepo \u306e\u6a29\u9650\u3092 ON \u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ntoken A \u304c\u751f\u6210\u3055\u308c\u305f\u306e\u3067\u3001\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001token A \u3068 token B \u306f\u3001\u540c\u3058\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nAWS Lambda\n\u9806\u756a\u306b\u3001\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u6b21\u306f\u3001Lambda \u3002\nNode 4.3 \u300cBlank Function\u300d \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\u3067\u3001API Gateway \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u540d\u524d\u306f\u304a\u597d\u307f\u3067\u3002\nSecurity \u306f \u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3063\u3066\u63a5\u7d9a\u5236\u9650\u3059\u308b\u306e\u3067\u3001Open \u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n\n\u540d\u524d\u306f\u304a\u597d\u307f\u3067\u3002\nEdit Code Inline \u3092\u9078\u629e\u3057\u3066\u3001\u4e0b\u8a18\u306e Lambda \u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3059\u308c\u3070OK\u3002\nEnvironment Variables (\u74b0\u5883\u5909\u6570) \u306b\u3001token \u3068\u3044\u3046\u30ad\u30fc\u3067\u3001\u5148\u306b\u53d6\u5f97\u3057\u305f GitHub \u306e Private Access Token \u3092\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\u3002\n(Lambda \u51e6\u7406\u306e\u4e2d\u3067\u3001token A / token B \u306e\u4e21\u65b9\u306e\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002)\n\u30ed\u30fc\u30eb\u306f\u3001Simple Microservice \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e3\u79d2\u3060\u3068\u5fae\u5999\u306b\u8db3\u3089\u306a\u3044\u306e\u3067\u300110\u79d2\u7a0b\u5ea6\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\nLambda \u306e\u51e6\u7406\u6982\u8981\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\nIssue \u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u3001GitHub Webhook \u306b\u3088\u3063\u3066\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u8d77\u52d5\u3055\u308c\u308b\nIssue \u304c\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u306b\u3072\u3082\u3065\u3044\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u4f55\u3082\u3057\u306a\u3044\u3002\n\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u306b\u3072\u3082\u3065\u304fProject\u3092\u898b\u3064\u3051\u308b\n\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u65b0\u898f\u4f5c\u6210\n\u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u308c\u3070\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u540d\u306b\u5408\u308f\u305b\u308b\nToDo / Doing / Done \u306e\u30ab\u30e9\u30e0\u304c\u3001\u306a\u3051\u308c\u3070\u751f\u6210\u3059\u308b\nIssue \u306b\u3072\u3082\u3065\u304f Card \u3092\u898b\u3064\u3051\u308b\nIssue \u304c\nOpen \u306a\u3089\u3001ToDo \u30ab\u30e9\u30e0\u306b Card \u3092\u8ffd\u52a0\u3002\u65e2\u306b\u5b58\u5728\u3059\u308c\u3070\u4f55\u3082\u3057\u306a\u3044\u3002\nClose \u306a\u3089\u3001\u30ab\u30e9\u30e0\u304b\u3089 Card \u3092\u524a\u9664\n\nEdit Code Inline \u306b\u8cbc\u308a\u4ed8\u3051\u308b Lambda \u30b3\u30fc\u30c9\u306f\u3001\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n(GitHub \u306f\u3053\u3061\u3089 https://github.com/exabugs/GitHubIssueProjectSync )\n'use strict';\n\nconst crypto = require('crypto');\nconst https = require('https');\n\nexports.handler = function(event, context) {\n\n  console.log(JSON.stringify(event));\n  console.log(JSON.stringify(event.headers));\n  const headers = event.headers;\n\n  // \u8a8d\u8a3c\n  const hmac = crypto.createHmac('sha1', process.env.token);\n  hmac.update(event.body, 'utf8');\n  const calculatedSignature = 'sha1=' + hmac.digest('hex');\n\n  if (headers['X-Hub-Signature'] !== calculatedSignature) {\n    console.log(`calculatedSignature : ${calculatedSignature}`);\n    console.log(`req.X-Hub-Signature : ${headers['X-Hub-Signature']}`);\n    return context.succeed({statusCode: 403});\n  }\n\n  const payload = JSON.parse(event.body);\n\n  const REPO = payload.repository;\n  if (!REPO) {\n    console.log('Not exists Repository.');\n    return context.succeed({statusCode: 200});\n  }\n  const REPO_OWNER = REPO.owner.login;\n  const REPO_NAME = REPO.name;\n  console.log(`REPOSITORY_OWNER : ${REPO_OWNER}`);\n  console.log(`REPOSITORY_NAME : ${REPO_NAME}`);\n\n  const ISSUE = payload.issue;\n  if (!ISSUE) {\n    console.log('Not exists Issue.');\n    return context.succeed({statusCode: 200});\n  }\n  const ISSUE_STATE = ISSUE.state;\n  const ISSUE_TITLE = ISSUE.title;\n  const ISSUE_ID = ISSUE.id;\n  const ISSUE_URL = ISSUE.url;\n  console.log(`ISSUE_STATE : ${ISSUE_STATE}`);\n  console.log(`ISSUE_TITLE : ${ISSUE_TITLE}`);\n  console.log(`ISSUE_ID : ${ISSUE_ID}`);\n  console.log(`ISSUE_URL : ${ISSUE_URL}`);\n\n  const MILESTONE = ISSUE.milestone;\n  if (!MILESTONE) {\n    console.log('This issue is not assinged to milestone.');\n    return context.succeed({statusCode: 200});\n  }\n  const MILESTONE_TITLE = MILESTONE.title;\n  const MILESTONE_ID = MILESTONE.id;\n  const MILESTONE_URL = MILESTONE.html_url;\n  console.log(`MILESTONE_TITLE : ${MILESTONE_TITLE}`);\n  console.log(`MILESTONE_ID : ${MILESTONE_ID}`);\n  console.log(`MILESTONE_URL : ${MILESTONE_URL}`);\n\n  request('GET', `/repos/${REPO_OWNER}/${REPO_NAME}/projects`).then(data => {\n    console.log('Stage 1');\n    return data.filter((milestone) => {\n      // Description \u3092\u7de8\u96c6\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u6700\u7d42\u884c\u306bID\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3088\u3044\u3053\u3068\u306b\u3059\u308b\u3002\n      if (!milestone.body) return false;\n      const body = milestone.body.split('\\n');\n      return body[body.length - 1].indexOf(MILESTONE_ID) !== -1;\n    })[0];\n  }).then(project => {\n    console.log('Stage 2');\n    if (!project) {\n      // Project \u65b0\u898f\u8ffd\u52a0\n      console.log('Create Project.');\n      const path = MILESTONE_URL.split('/').slice(3).join('/');\n      const url = `Milestone : <a href='/${path}'>${MILESTONE_ID}</a>`;\n      const json = {name: MILESTONE_TITLE, body: url};\n      return request('POST', `/repos/${REPO_OWNER}/${REPO_NAME}/projects`, json);\n    } else if (project.name !== MILESTONE_TITLE) {\n      // \u540d\u524d\u3060\u3051\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002(Description \u306f\u305d\u306e\u307e\u307e)\n      console.log(`Update Project Name.`);\n      const json = {name: MILESTONE_TITLE, body: project.body};\n      return request('PATCH', `/projects/${project.id}`, json);\n    } else {\n      console.log('Project exists.');\n      return project;\n    }\n  }).then(project => {\n    console.log('Stage 3');\n    // ToDo / Doing / Done \u306e\u30ab\u30e9\u30e0\u751f\u6210\n    return request('GET', `/projects/${project.id}/columns`).then(columns => {\n      return Promise.all(['ToDo', 'Doing', 'Done'].map(name => {\n        const column = columns.filter(column => column.name === name);\n        if (column.length) {\n          // \u30ab\u30fc\u30c9\u306e\u914d\u5217\u3092\u8fd4\u3059\n          console.log(`Column : ${name} exists. Search cards.`);\n          return request('GET', `/projects/columns/${column[0].id}/cards`).then(cards => {\n            return {column: column[0], card: cards.filter(card => card.content_url === ISSUE_URL)[0]};\n          });\n        } else {\n          // \u30ab\u30e9\u30e0\u3092\u751f\u6210\u3057\u3066\u3001\u7a7a\u914d\u5217\u3092\u8fd4\u3059\n          console.log(`Column : ${name} not exists. Create column.`);\n          return request('POST', `/projects/${project.id}/columns`, {name: name}).then((column) => {\n            return {column: column, card: undefined};\n          });\n        }\n      }));\n    });\n  }).then(columns => {\n    console.log('Stage 4');\n    if (ISSUE_STATE === 'closed') {\n      // \u524a\u9664\n      return Promise.all(columns.map(column => {\n        console.log(`Find closed card in column ${column.column.name}.`);\n        const card = column.card;\n        if (card) {\n          console.log('Remove card.');\n          return request('DELETE', `/projects/columns/cards/${card.id}`);\n        }\n      }));\n    } else {\n      // Todo \u306b\u8ffd\u52a0 (\u4ed6\u306e\u30ab\u30e9\u30e0\u306b\u5b58\u5728\u3057\u305f\u5834\u5408\u306f\u4f55\u3082\u5909\u5316\u306a\u3057)\n      console.log(`Card is not closed.`);\n      if (!columns.filter(column => column.card).length) {\n        console.log('Card create.');\n        const column = columns[0].column;\n        const json = {content_id: ISSUE_ID, content_type: 'Issue'};\n        return request('POST', `/projects/columns/${column.id}/cards`, json);\n      }\n    }\n  }).then(() => {\n    console.log('Success. Return 200.');\n    return context.succeed({statusCode: 200});\n  }).catch(e => {\n    console.log(e);\n    return context.fail(e);\n  });\n};\n\nfunction request (method, path, json) {\n  return new Promise(function(resolve, reject) {\n\n    const options = {\n      hostname: 'api.github.com',\n      port: 443,\n      path: path,\n      method: method,\n      headers: {\n        'User-Agent': 'Awesome-Octocat-App',\n        'Authorization': `token ${process.env.token}`,\n        'Accept': 'application/vnd.github.inertia-preview+json'\n      }\n    };\n    let data = undefined;\n    if (json !== undefined) {\n      data = JSON.stringify(json);\n      options.headers['Content-Type'] = 'application/json; charser=UTF-8';\n      options.headers['Content-Length'] = Buffer.byteLength(data);\n    }\n    const req = https.request(options, res => {\n        let data = '';\n        res.on('data', d => {\n          data += d;\n        });\n        res.on('end', () => {\n          console.log(`Status-Code : ${res.statusCode}.`);\n          switch (res.statusCode) {\n            case 200:\n            case 201: // POST\n              resolve(JSON.parse(data));\n              break;\n            case 204: // DELETE\n            case 422: // Duplicate Insert\n              resolve();\n              break;\n            default:\n              reject(data);\n              break;\n          }\n        });\n      }\n    );\n    req.on('error', (e) => {\n      console.error(e);\n      reject(e);\n    });\n    req.end(data);\n  });\n}\n\nTriggers \u30bf\u30d6\u3067\u3001API Gateway \u306e URL \u3092\u8abf\u3079\u3066\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u5f8c\u3067\u3001GitHub \u306e Webhook \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\nGitHub\n\u6700\u5f8c\u306b\u3001GitHub \u306e Webhook \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u6bce\u306e\u8a2d\u5b9a\u3067\u306f\u306a\u304f\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a2d\u5b9a\u3067 Webhook \u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3001\u5168\u3066\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002\nPayload URL \u306f\u3001\u5148\u307b\u3069\u306e API Gateway \u306e URL \u3092\u8a2d\u5b9a\u3002\nContent-type \u306f\u3001application/json \u3092\u6307\u5b9a\u3002\nSecret \u306f\u3001\u5148\u307b\u3069\u53d6\u5f97\u3057\u305f Private Access Token \u3092\u8a2d\u5b9a\u3002\n\n\n\u52d5\u4f5c\u78ba\u8a8d\nIssue \u3092\u767b\u9332\u3057\u307e\u3059\u3002\n\n\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u3068\u540c\u540d\u306e Project \u306b\u3001\u30ab\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff01\n\nIssue \u3092 \u30af\u30ed\u30fc\u30ba\u3057\u307e\u3059\u3002\n\n\u30ab\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u307e\u3057\u305f\uff01\n\n\n\u4ed8\u9332\n\n\u30ed\u30fc\u30ab\u30eb\u30c6\u30b9\u30c8\n\u30ed\u30fc\u30ab\u30eb\u3067 Lambda \u95a2\u6570\u3092\u52d5\u4f5c\u3055\u305b\u3066\u3001\u6319\u52d5\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\ntest.js\n// For Local Test\n// Node.js 4.3.2\nconst lambda = require(\"./lambda\");\n\nprocess.env.token = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';\n\n// \u4e0b\u8a18 X-Hub-Signature \u306e\u5024 sha1= \u306f\u3001GitHub Webhooks \u306e Recent Deliveries \u53c2\u7167\nconst event = {\n  headers: {\n    'X-Hub-Signature': 'sha1=127ad3ca94f4e3520fb30fb18b6d36d0b6de28d'\n  },\n  body: JSON.stringify(require(\"./payload.json\"))\n};\n\nconst context = {\n  succeed: response => {\n    console.log(response);\n  },\n  fail: e => {\n    console.log(e);\n  }\n};\n\n// Lambda \u5b9f\u884c\nlambda.handler(event, context);\n\n\n\nprocess.env.token \u306f\u3001Private Access Token \u3092\u8a18\u8f09\u3002\nX-Hub-Signature \u306f Headers \u306e\u8a72\u5f53\u7b87\u6240\u3092\u30b3\u30d4\u30da\npaload.json \u306f\u3001Payload \u90e8\u5206\u3092\u30b3\u30d4\u30da\u3057\u3066\u30d5\u30a1\u30a4\u30eb(payload.json)\u3068\u3057\u3066\u4fdd\u5b58\n\n\nNode.js 4.3 \u3067 test.js \u3092\u5b9f\u884c\u3057\u307e\u3059\n$ node test.js\n\n\nGitHub API\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u3001Project\u95a2\u9023\u306eAPI\u3092\u30ea\u30b9\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nGitHub \u306e REST API \u306e\u7279\u5fb4\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u985e\u306f\u5168\u30e6\u30fc\u30b6\u3067\u306e\u901a\u3057\u756a\u53f7\u306b\u306a\u3063\u3066\u304a\u308a\u3001Get \u3068 Create \u3067\u306e URL \u306e\u30d1\u30b9\u304c\u5fae\u5999\u306b\u9055\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u304b\u306d\u3002(\u5c11\u3057\u30cf\u30de\u308a\u307e\u3057\u305f\u3002)\n\nProjects\nhttps://developer.github.com/v3/projects/\n\n\n\n\u6a5f\u80fd\nAPI\n\n\n\n\nList repository projects\nGET /repos/:owner/:repo/projects\n\n\nList organization projects\nGET /orgs/:org/projects\n\n\nGet a project\nGET /projects/:id\n\n\nCreate a repository project\nPOST /repos/:owner/:repo/projects\n\n\nCreate an organization project\nPOST /orgs/:org/projects\n\n\nUpdate a project\nPATCH /projects/:id\n\n\nDelete a project\nDELETE /projects/:id\n\n\n\n\nProject columns\nhttps://developer.github.com/v3/projects/columns/\n\n\n\n\u6a5f\u80fd\nAPI\n\n\n\n\nList project columns\nGET /projects/:project_id/columns\n\n\nGet a project column\nGET /projects/columns/:id\n\n\nCreate a project column\nPOST /projects/:project_id/columns\n\n\nUpdate a project column\nPATCH /projects/columns/:id\n\n\nDelete a project column\nDELETE /projects/columns/:id\n\n\nMove a project column\nPOST /projects/columns/:id/moves\n\n\n\n\nProject cards\nhttps://developer.github.com/v3/projects/cards/\n\n\n\n\u6a5f\u80fd\nAPI\n\n\n\n\nList project cards\nGET /projects/columns/:column_id/cards\n\n\nGet a project card\nGET /projects/columns/cards/:id\n\n\nCreate a project card\nPOST /projects/columns/:column_id/cards\n\n\nUpdate a project card\nPATCH /projects/columns/cards/:id\n\n\nDelete a project card\nDELETE /projects/columns/cards/:id\n\n\nMove a project card\nPOST /projects/columns/cards/:id/moves\n\n\n\n\n\u304a\u308f\u308a\u306b\n\u305d\u3082\u305d\u3082\u3001\u306a\u3093\u3067 GitHub \u306e\u6a5f\u80fd\u3068\u3057\u3066\u3001\u7121\u3044\u306e\uff1f\n## \u30e2\u30c1\u30d9\u30fc\u30b7\u30e7\u30f3\n\nTrello \u304c\u8cb7\u53ce\u3055\u308c\u305f\u306e\u3067\u3001\u4ee3\u66ff\u3092\u63a2\u3059\u3002\n\u6628\u5e74 9 \u6708\u9803? \u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3001GitHub \u306e Projects \u6a5f\u80fd\u304c\u3088\u304f\u51fa\u6765\u3066\u3044\u308b\u304c\u3001\u30ab\u30fc\u30c9\u306e\u767b\u9332\u304c\u624b\u52d5\u3067\u9762\u5012\u81ed\u3044\u3002\n\nGitHub \u306b Issue \u3092\u767b\u9332\u3057\u305f\u3089\u3001Projects \u306e\u30ab\u30fc\u30c9\u3068\u3057\u3066\u81ea\u52d5\u3067\u767b\u9332\u3057\u3066\u6b32\u3057\u3044\u3002\n\u307e\u305f\u3001Issue \u304c\u30af\u30ed\u30fc\u30ba\u3055\u308c\u305f\u3089\u3001Projects \u304b\u3089\u306f\u53d6\u308a\u9664\u3044\u3066\u304f\u308c\u308b\u3068\u3001\u30ab\u30f3\u30d0\u30f3\u904b\u7528\u304c\u6357\u308a\u305d\u3046\u3060\u3002\n\n**\u5b8c\u6210\u30a4\u30e1\u30fc\u30b8**\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-15 12.16.47.png](https://qiita-image-store.s3.amazonaws.com/0/69410/cc1e8d57-4791-4c98-e4fd-299fbdb3168e.png)\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2017-01-15_9_57_33.png](https://qiita-image-store.s3.amazonaws.com/0/69410/27ea45ce-76df-5b6f-4f24-da58fa6af4b6.png)\n\n## \u8a2d\u5b9a\n### GitHub\n\u6700\u521d\u306b\u3001\u56f3\u306e token A \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-15 12.24.39.png](https://qiita-image-store.s3.amazonaws.com/0/69410/f0d09827-697c-076e-218d-9caa89cac005.png)\n\nGitHub \u306e API \u3092\u5b9f\u884c\u3059\u308b\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u3001Personal Access Token \u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nrepo \u306e\u6a29\u9650\u3092 ON \u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n![screencapture-github-settings-tokens-new-1484453943940.png](https://qiita-image-store.s3.amazonaws.com/0/69410/7b7aebbf-fdf6-bc8f-624b-0e762f9bd80b.png)\n\ntoken A \u304c\u751f\u6210\u3055\u308c\u305f\u306e\u3067\u3001\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n![screencapture-github-settings-tokens-1484454286388.png](https://qiita-image-store.s3.amazonaws.com/0/69410/89969d68-ceb3-96c7-3509-1938c1c52dc1.png)\n\n**\u4eca\u56de\u306f\u3001token A \u3068 token B \u306f\u3001\u540c\u3058\u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3059\u3002**\n\n### AWS Lambda\n\u9806\u756a\u306b\u3001\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u6b21\u306f\u3001Lambda \u3002\n\nNode 4.3 \u300cBlank Function\u300d \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2017-01-15_11_19_31.png](https://qiita-image-store.s3.amazonaws.com/0/69410/5e035f3f-b990-f0b4-453f-c3ac500b73d8.png)\n\n\u30c8\u30ea\u30ac\u30fc\u306e\u8a2d\u5b9a\u3067\u3001API Gateway \u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\u540d\u524d\u306f\u304a\u597d\u307f\u3067\u3002\nSecurity \u306f \u30c8\u30fc\u30af\u30f3\u3092\u4f7f\u3063\u3066\u63a5\u7d9a\u5236\u9650\u3059\u308b\u306e\u3067\u3001Open \u3067\u3082\u5927\u4e08\u592b\u3067\u3059\u3002\n![screencapture-ap-northeast-1-console-aws-amazon-lambda-home-1484448339516.png](https://qiita-image-store.s3.amazonaws.com/0/69410/021460f0-10ca-4057-5c6d-a3c78fd5e306.png)\n\n\u540d\u524d\u306f\u304a\u597d\u307f\u3067\u3002\nEdit Code Inline \u3092\u9078\u629e\u3057\u3066\u3001\u4e0b\u8a18\u306e Lambda \u30b3\u30fc\u30c9\u3092\u30b3\u30d4\u30da\u3059\u308c\u3070OK\u3002\nEnvironment Variables (\u74b0\u5883\u5909\u6570) \u306b\u3001token \u3068\u3044\u3046\u30ad\u30fc\u3067\u3001\u5148\u306b\u53d6\u5f97\u3057\u305f GitHub \u306e Private Access Token \u3092\u8a2d\u5b9a\u3057\u3066\u4e0b\u3055\u3044\u3002\n(Lambda \u51e6\u7406\u306e\u4e2d\u3067\u3001token A / token B \u306e\u4e21\u65b9\u306e\u30c8\u30fc\u30af\u30f3\u3068\u3057\u3066\u4f7f\u7528\u3057\u307e\u3059\u3002)\n\u30ed\u30fc\u30eb\u306f\u3001Simple Microservice \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u3001\u65b0\u898f\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306e3\u79d2\u3060\u3068\u5fae\u5999\u306b\u8db3\u3089\u306a\u3044\u306e\u3067\u300110\u79d2\u7a0b\u5ea6\u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n![screencapture-ap-northeast-1-console-aws-amazon-lambda-home-1484447617614__1_.png](https://qiita-image-store.s3.amazonaws.com/0/69410/4a342b1e-c1b1-9659-50a0-3face60afb34.png)\n\nLambda \u306e\u51e6\u7406\u6982\u8981\u306f\u3001\u4ee5\u4e0b\u306b\u306a\u308a\u307e\u3059\u3002\n\n 1. Issue \u304c\u66f4\u65b0\u3055\u308c\u308b\u3068\u3001GitHub Webhook \u306b\u3088\u3063\u3066\u3001\u30cf\u30f3\u30c9\u30e9\u30fc\u304c\u8d77\u52d5\u3055\u308c\u308b\n 2. Issue \u304c\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u306b\u3072\u3082\u3065\u3044\u3066\u3044\u306a\u3044\u5834\u5408\u306f\u3001\u4f55\u3082\u3057\u306a\u3044\u3002\n 1. \u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u306b\u3072\u3082\u3065\u304fProject\u3092\u898b\u3064\u3051\u308b  \n    \u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001\u65b0\u898f\u4f5c\u6210  \n    \u5b58\u5728\u3059\u308b\u5834\u5408\u306f\u3001\u540d\u524d\u304c\u5909\u66f4\u3055\u308c\u3066\u3044\u308c\u3070\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u540d\u306b\u5408\u308f\u305b\u308b\n 2. ToDo / Doing / Done \u306e\u30ab\u30e9\u30e0\u304c\u3001\u306a\u3051\u308c\u3070\u751f\u6210\u3059\u308b\n 3. Issue \u306b\u3072\u3082\u3065\u304f Card \u3092\u898b\u3064\u3051\u308b\n 4. Issue \u304c  \n    Open \u306a\u3089\u3001ToDo \u30ab\u30e9\u30e0\u306b Card \u3092\u8ffd\u52a0\u3002\u65e2\u306b\u5b58\u5728\u3059\u308c\u3070\u4f55\u3082\u3057\u306a\u3044\u3002  \n    Close \u306a\u3089\u3001\u30ab\u30e9\u30e0\u304b\u3089 Card \u3092\u524a\u9664\n\nEdit Code Inline \u306b\u8cbc\u308a\u4ed8\u3051\u308b Lambda \u30b3\u30fc\u30c9\u306f\u3001\u4e0b\u8a18\u306b\u306a\u308a\u307e\u3059\u3002\n(GitHub \u306f\u3053\u3061\u3089 https://github.com/exabugs/GitHubIssueProjectSync )\n\n```js\n'use strict';\n\nconst crypto = require('crypto');\nconst https = require('https');\n\nexports.handler = function(event, context) {\n\n  console.log(JSON.stringify(event));\n  console.log(JSON.stringify(event.headers));\n  const headers = event.headers;\n\n  // \u8a8d\u8a3c\n  const hmac = crypto.createHmac('sha1', process.env.token);\n  hmac.update(event.body, 'utf8');\n  const calculatedSignature = 'sha1=' + hmac.digest('hex');\n\n  if (headers['X-Hub-Signature'] !== calculatedSignature) {\n    console.log(`calculatedSignature : ${calculatedSignature}`);\n    console.log(`req.X-Hub-Signature : ${headers['X-Hub-Signature']}`);\n    return context.succeed({statusCode: 403});\n  }\n\n  const payload = JSON.parse(event.body);\n\n  const REPO = payload.repository;\n  if (!REPO) {\n    console.log('Not exists Repository.');\n    return context.succeed({statusCode: 200});\n  }\n  const REPO_OWNER = REPO.owner.login;\n  const REPO_NAME = REPO.name;\n  console.log(`REPOSITORY_OWNER : ${REPO_OWNER}`);\n  console.log(`REPOSITORY_NAME : ${REPO_NAME}`);\n\n  const ISSUE = payload.issue;\n  if (!ISSUE) {\n    console.log('Not exists Issue.');\n    return context.succeed({statusCode: 200});\n  }\n  const ISSUE_STATE = ISSUE.state;\n  const ISSUE_TITLE = ISSUE.title;\n  const ISSUE_ID = ISSUE.id;\n  const ISSUE_URL = ISSUE.url;\n  console.log(`ISSUE_STATE : ${ISSUE_STATE}`);\n  console.log(`ISSUE_TITLE : ${ISSUE_TITLE}`);\n  console.log(`ISSUE_ID : ${ISSUE_ID}`);\n  console.log(`ISSUE_URL : ${ISSUE_URL}`);\n\n  const MILESTONE = ISSUE.milestone;\n  if (!MILESTONE) {\n    console.log('This issue is not assinged to milestone.');\n    return context.succeed({statusCode: 200});\n  }\n  const MILESTONE_TITLE = MILESTONE.title;\n  const MILESTONE_ID = MILESTONE.id;\n  const MILESTONE_URL = MILESTONE.html_url;\n  console.log(`MILESTONE_TITLE : ${MILESTONE_TITLE}`);\n  console.log(`MILESTONE_ID : ${MILESTONE_ID}`);\n  console.log(`MILESTONE_URL : ${MILESTONE_URL}`);\n\n  request('GET', `/repos/${REPO_OWNER}/${REPO_NAME}/projects`).then(data => {\n    console.log('Stage 1');\n    return data.filter((milestone) => {\n      // Description \u3092\u7de8\u96c6\u3067\u304d\u308b\u3088\u3046\u306b\u3001\u6700\u7d42\u884c\u306bID\u304c\u542b\u307e\u308c\u3066\u3044\u308c\u3070\u3088\u3044\u3053\u3068\u306b\u3059\u308b\u3002\n      if (!milestone.body) return false;\n      const body = milestone.body.split('\\n');\n      return body[body.length - 1].indexOf(MILESTONE_ID) !== -1;\n    })[0];\n  }).then(project => {\n    console.log('Stage 2');\n    if (!project) {\n      // Project \u65b0\u898f\u8ffd\u52a0\n      console.log('Create Project.');\n      const path = MILESTONE_URL.split('/').slice(3).join('/');\n      const url = `Milestone : <a href='/${path}'>${MILESTONE_ID}</a>`;\n      const json = {name: MILESTONE_TITLE, body: url};\n      return request('POST', `/repos/${REPO_OWNER}/${REPO_NAME}/projects`, json);\n    } else if (project.name !== MILESTONE_TITLE) {\n      // \u540d\u524d\u3060\u3051\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u3059\u308b\u3002(Description \u306f\u305d\u306e\u307e\u307e)\n      console.log(`Update Project Name.`);\n      const json = {name: MILESTONE_TITLE, body: project.body};\n      return request('PATCH', `/projects/${project.id}`, json);\n    } else {\n      console.log('Project exists.');\n      return project;\n    }\n  }).then(project => {\n    console.log('Stage 3');\n    // ToDo / Doing / Done \u306e\u30ab\u30e9\u30e0\u751f\u6210\n    return request('GET', `/projects/${project.id}/columns`).then(columns => {\n      return Promise.all(['ToDo', 'Doing', 'Done'].map(name => {\n        const column = columns.filter(column => column.name === name);\n        if (column.length) {\n          // \u30ab\u30fc\u30c9\u306e\u914d\u5217\u3092\u8fd4\u3059\n          console.log(`Column : ${name} exists. Search cards.`);\n          return request('GET', `/projects/columns/${column[0].id}/cards`).then(cards => {\n            return {column: column[0], card: cards.filter(card => card.content_url === ISSUE_URL)[0]};\n          });\n        } else {\n          // \u30ab\u30e9\u30e0\u3092\u751f\u6210\u3057\u3066\u3001\u7a7a\u914d\u5217\u3092\u8fd4\u3059\n          console.log(`Column : ${name} not exists. Create column.`);\n          return request('POST', `/projects/${project.id}/columns`, {name: name}).then((column) => {\n            return {column: column, card: undefined};\n          });\n        }\n      }));\n    });\n  }).then(columns => {\n    console.log('Stage 4');\n    if (ISSUE_STATE === 'closed') {\n      // \u524a\u9664\n      return Promise.all(columns.map(column => {\n        console.log(`Find closed card in column ${column.column.name}.`);\n        const card = column.card;\n        if (card) {\n          console.log('Remove card.');\n          return request('DELETE', `/projects/columns/cards/${card.id}`);\n        }\n      }));\n    } else {\n      // Todo \u306b\u8ffd\u52a0 (\u4ed6\u306e\u30ab\u30e9\u30e0\u306b\u5b58\u5728\u3057\u305f\u5834\u5408\u306f\u4f55\u3082\u5909\u5316\u306a\u3057)\n      console.log(`Card is not closed.`);\n      if (!columns.filter(column => column.card).length) {\n        console.log('Card create.');\n        const column = columns[0].column;\n        const json = {content_id: ISSUE_ID, content_type: 'Issue'};\n        return request('POST', `/projects/columns/${column.id}/cards`, json);\n      }\n    }\n  }).then(() => {\n    console.log('Success. Return 200.');\n    return context.succeed({statusCode: 200});\n  }).catch(e => {\n    console.log(e);\n    return context.fail(e);\n  });\n};\n\nfunction request (method, path, json) {\n  return new Promise(function(resolve, reject) {\n\n    const options = {\n      hostname: 'api.github.com',\n      port: 443,\n      path: path,\n      method: method,\n      headers: {\n        'User-Agent': 'Awesome-Octocat-App',\n        'Authorization': `token ${process.env.token}`,\n        'Accept': 'application/vnd.github.inertia-preview+json'\n      }\n    };\n    let data = undefined;\n    if (json !== undefined) {\n      data = JSON.stringify(json);\n      options.headers['Content-Type'] = 'application/json; charser=UTF-8';\n      options.headers['Content-Length'] = Buffer.byteLength(data);\n    }\n    const req = https.request(options, res => {\n        let data = '';\n        res.on('data', d => {\n          data += d;\n        });\n        res.on('end', () => {\n          console.log(`Status-Code : ${res.statusCode}.`);\n          switch (res.statusCode) {\n            case 200:\n            case 201: // POST\n              resolve(JSON.parse(data));\n              break;\n            case 204: // DELETE\n            case 422: // Duplicate Insert\n              resolve();\n              break;\n            default:\n              reject(data);\n              break;\n          }\n        });\n      }\n    );\n    req.on('error', (e) => {\n      console.error(e);\n      reject(e);\n    });\n    req.end(data);\n  });\n}\n```\n\nTriggers \u30bf\u30d6\u3067\u3001API Gateway \u306e URL \u3092\u8abf\u3079\u3066\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u5f8c\u3067\u3001GitHub \u306e Webhook \u306b\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n![screencapture-ap-northeast-1-console-aws-amazon-lambda-home-1484453085382.png](https://qiita-image-store.s3.amazonaws.com/0/69410/c0fce475-06c1-79d7-9bc7-4ccd3460b231.png)\n\n\n### GitHub\n\u6700\u5f8c\u306b\u3001GitHub \u306e Webhook \u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\u30ea\u30dd\u30b8\u30c8\u30ea\u6bce\u306e\u8a2d\u5b9a\u3067\u306f\u306a\u304f\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u8a2d\u5b9a\u3067 Webhook \u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3001\u5168\u3066\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304c\u5bfe\u8c61\u3068\u306a\u308a\u307e\u3059\u3002\nPayload URL \u306f\u3001\u5148\u307b\u3069\u306e API Gateway \u306e URL \u3092\u8a2d\u5b9a\u3002\nContent-type \u306f\u3001application/json \u3092\u6307\u5b9a\u3002\nSecret \u306f\u3001\u5148\u307b\u3069\u53d6\u5f97\u3057\u305f Private Access Token \u3092\u8a2d\u5b9a\u3002\n\n\n![screencapture-github-organizations-DreamArts-settings-hooks-new-1484453509556.png](https://qiita-image-store.s3.amazonaws.com/0/69410/4225f67b-afd9-a83a-b112-030da3711450.png)\n\n## \u52d5\u4f5c\u78ba\u8a8d\n\nIssue \u3092\u767b\u9332\u3057\u307e\u3059\u3002\n![screencapture-github-DreamArts-SonarTest-issues-new-1484457757976.png](https://qiita-image-store.s3.amazonaws.com/0/69410/8ce431e6-0bac-8622-da74-575f2ef03656.png)\n\n\u30de\u30a4\u30eb\u30b9\u30c8\u30fc\u30f3\u3068\u540c\u540d\u306e Project \u306b\u3001\u30ab\u30fc\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\uff01\n![screencapture-github-DreamArts-SonarTest-projects-45-1484458000795.png](https://qiita-image-store.s3.amazonaws.com/0/69410/fe10b607-3cf3-498a-2c08-bef196e713fd.png)\n\nIssue \u3092 \u30af\u30ed\u30fc\u30ba\u3057\u307e\u3059\u3002\n![screencapture-github-DreamArts-SonarTest-issues-26-1484458220168.png](https://qiita-image-store.s3.amazonaws.com/0/69410/a867fc01-fc8a-ef10-697f-720b2131966e.png)\n\n\u30ab\u30fc\u30c9\u304c\u524a\u9664\u3055\u308c\u307e\u3057\u305f\uff01\n![screencapture-github-DreamArts-SonarTest-projects-45-1484458247040.png](https://qiita-image-store.s3.amazonaws.com/0/69410/7c774c2c-ac3a-9aaf-eccd-a6d1c105047b.png)\n\n## \u4ed8\u9332\n### \u30ed\u30fc\u30ab\u30eb\u30c6\u30b9\u30c8\n\n\u30ed\u30fc\u30ab\u30eb\u3067 Lambda \u95a2\u6570\u3092\u52d5\u4f5c\u3055\u305b\u3066\u3001\u6319\u52d5\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n```js:test.js\n// For Local Test\n// Node.js 4.3.2\nconst lambda = require(\"./lambda\");\n\nprocess.env.token = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx';\n\n// \u4e0b\u8a18 X-Hub-Signature \u306e\u5024 sha1= \u306f\u3001GitHub Webhooks \u306e Recent Deliveries \u53c2\u7167\nconst event = {\n  headers: {\n    'X-Hub-Signature': 'sha1=127ad3ca94f4e3520fb30fb18b6d36d0b6de28d'\n  },\n  body: JSON.stringify(require(\"./payload.json\"))\n};\n\nconst context = {\n  succeed: response => {\n    console.log(response);\n  },\n  fail: e => {\n    console.log(e);\n  }\n};\n\n// Lambda \u5b9f\u884c\nlambda.handler(event, context);\n```\n\n - process.env.token \u306f\u3001Private Access Token \u3092\u8a18\u8f09\u3002\n - X-Hub-Signature \u306f Headers \u306e\u8a72\u5f53\u7b87\u6240\u3092\u30b3\u30d4\u30da\n - paload.json \u306f\u3001Payload \u90e8\u5206\u3092\u30b3\u30d4\u30da\u3057\u3066\u30d5\u30a1\u30a4\u30eb(payload.json)\u3068\u3057\u3066\u4fdd\u5b58\n\n![screencapture-github-organizations-DreamArts-settings-hooks-11536808-1484529851600.png](https://qiita-image-store.s3.amazonaws.com/0/69410/3bd19228-995a-fb2e-b065-d0b5bee650db.png)\n\nNode.js 4.3 \u3067 test.js \u3092\u5b9f\u884c\u3057\u307e\u3059\n\n```\n$ node test.js\n```\n\n\n\n### GitHub API\n\n\u4eca\u56de\u4f7f\u7528\u3057\u305f\u3001Project\u95a2\u9023\u306eAPI\u3092\u30ea\u30b9\u30c8\u3057\u3066\u304a\u304d\u307e\u3059\u3002\nGitHub \u306e REST API \u306e\u7279\u5fb4\u306f\u3001\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u985e\u306f\u5168\u30e6\u30fc\u30b6\u3067\u306e\u901a\u3057\u756a\u53f7\u306b\u306a\u3063\u3066\u304a\u308a\u3001Get \u3068 Create \u3067\u306e URL \u306e\u30d1\u30b9\u304c\u5fae\u5999\u306b\u9055\u3046\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u304b\u306d\u3002(\u5c11\u3057\u30cf\u30de\u308a\u307e\u3057\u305f\u3002)\n\n#### Projects\nhttps://developer.github.com/v3/projects/\n\n|\u6a5f\u80fd|API|\n|----|----|\n|[List repository projects](https://developer.github.com/v3/projects/#list-repository-projects)|GET /repos/:owner/:repo/projects|\n|[List organization projects](https://developer.github.com/v3/projects/#list-organization-projects)|GET /orgs/:org/projects|\n|[Get a project](https://developer.github.com/v3/projects/#get-a-project)|GET /projects/:id|\n|[Create a repository project](https://developer.github.com/v3/projects/#create-a-repository-project)|POST /repos/:owner/:repo/projects\n|[Create an organization project]()|POST /orgs/:org/projects|\n|[Update a project](https://developer.github.com/v3/projects/#update-a-project)|PATCH /projects/:id|\n|[Delete a project](https://developer.github.com/v3/projects/#delete-a-project)|DELETE /projects/:id|\n\n#### Project columns\nhttps://developer.github.com/v3/projects/columns/\n\n|\u6a5f\u80fd|API|\n|----|----|\n|[List project columns](https://developer.github.com/v3/projects/columns/#list-project-columns)|GET /projects/:project_id/columns|\n|[Get a project column](https://developer.github.com/v3/projects/columns/#get-a-project-column)|GET /projects/columns/:id|\n|[Create a project column](https://developer.github.com/v3/projects/columns/#create-a-project-column)|POST /projects/:project_id/columns|\n|[Update a project column](https://developer.github.com/v3/projects/columns/#update-a-project-column)|PATCH /projects/columns/:id|\n|[Delete a project column](https://developer.github.com/v3/projects/columns/#delete-a-project-column)|DELETE /projects/columns/:id|\n|[Move a project column](https://developer.github.com/v3/projects/columns/#move-a-project-column)|POST /projects/columns/:id/moves|\n\n\n#### Project cards\nhttps://developer.github.com/v3/projects/cards/\n\n|\u6a5f\u80fd|API|\n|----|----|\n|[List project cards](https://developer.github.com/v3/projects/cards/#list-project-cards)|GET /projects/columns/:column_id/cards|\n|[Get a project card](https://developer.github.com/v3/projects/cards/#get-a-project-card)|GET /projects/columns/cards/:id|\n|[Create a project card](https://developer.github.com/v3/projects/cards/#create-a-project-card)|POST /projects/columns/:column_id/cards|\n|[Update a project card](https://developer.github.com/v3/projects/cards/#update-a-project-card)|PATCH /projects/columns/cards/:id|\n|[Delete a project card](https://developer.github.com/v3/projects/cards/#delete-a-project-card)|DELETE /projects/columns/cards/:id|\n|[Move a project card](https://developer.github.com/v3/projects/cards/#move-a-project-card)|POST /projects/columns/cards/:id/moves|\n\n## \u304a\u308f\u308a\u306b\n\u305d\u3082\u305d\u3082\u3001\u306a\u3093\u3067 GitHub \u306e\u6a5f\u80fd\u3068\u3057\u3066\u3001\u7121\u3044\u306e\uff1f\n"}