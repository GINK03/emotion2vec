{"context": "\n\n\u6982\u8981\njsdo\u3067AM\u5909\u8abf\u3001\u5fa9\u8abf\u3084\u3063\u3066\u307f\u305f\u3002\n\u5fa9\u8abf\u306f\u3001IQ\u5fa9\u8abf\u3002\n\n\u5199\u771f\n\n\n\u5b9f\u969b\nhttp://jsdo.it/ohisama1/sKXO\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nvar canvas = document.getElementById(\"canvas\");\nvar ctx = canvas.getContext(\"2d\");\nfunction lpf(input, samplerate, freq) {\n    var q = 1.0;\n    var omega = 2.0 * 3.14159265 * freq / samplerate;\n    var alpha = Math.sin(omega) / (2.0 * q);\n    var a0 = 1.0 + alpha;\n    var a1 = -2.0 * Math.cos(omega);\n    var a2 = 1.0 - alpha;\n    var b0 = (1.0 - Math.cos(omega)) / 2.0;\n    var b1 = 1.0 - Math.cos(omega);\n    var b2 = (1.0 - Math.cos(omega)) / 2.0;\n    var output = new Float32Array(1000);\n    var size = 1000;\n    var in1 = 0;\n    var in2 = 0;\n    var out1 = 0;\n    var out2 = 0;\n    for (var i = 0; i < size; i++)\n    {\n        output[i] = b0 / a0 * input[i] + b1 / a0 * in1 + b2 / a0 * in2 - a1 / a0 * out1 - a2 / a0 * out2;\n        in2 = in1;\n        in1 = input[i];\n        out2 = out1;\n        out1 = output[i];\n    }\n    return output;\n}\nfunction draw(data, n) {\n    var hcenter = n * 150 + 100;\n    ctx.strokeStyle = \"#0f0\";\n    ctx.lineWidth = 2;\n    ctx.moveTo(0, hcenter);\n    for (var i = 1; i < canvas.width; i++) \n    {\n        ctx.lineTo(i, data[i] * 15 + hcenter);\n    }\n    ctx.stroke();\n}\nfunction make() {\n    var t;\n    var src = new Float32Array(1000);\n    var am = new Float32Array(1000);\n    var I = new Float32Array(1000);\n    var Q = new Float32Array(1000);\n    var I2;\n    var Q2;\n    var o = new Float32Array(1000);\n    for (t = 0; t < 1000; t++)\n    {\n        src[t] = Math.sin(t / 8000 * 2 * Math.PI * 220) * 2 - 1;\n    }\n    draw(src, 0);\n    for (t = 0; t < 1000; t++)\n    {\n        am[t] = (0.6 * Math.sin(t / 8000 * 2 * Math.PI * 220) + 1.0) * Math.sin(t / 8000 * 2 * Math.PI * 3000) * 2 - 1;\n    }\n    draw(am, 1);\n    for (t = 0; t < 1000; t++)\n    {\n        I[t] = am[t] * Math.cos(t / 8000 * 2 * Math.PI * 2800);\n        Q[t] = am[t] * Math.sin(t / 8000 * 2 * Math.PI * 2800);\n    }\n    I2 = lpf(I, 8000, 300);\n    Q2 = lpf(Q, 8000, 300);\n    for (t = 0; t < 1000; t++)\n    {\n        o[t] = Math.sqrt(I2[t] * I2[t] + Q2[t] * Q2[t]) * 4 - 6;\n    }\n    draw(o, 2);\n} \nmake();\n\n\n\n#\u6982\u8981\njsdo\u3067AM\u5909\u8abf\u3001\u5fa9\u8abf\u3084\u3063\u3066\u307f\u305f\u3002\n\u5fa9\u8abf\u306f\u3001IQ\u5fa9\u8abf\u3002\n#\u5199\u771f\n![dd.jpg](https://qiita-image-store.s3.amazonaws.com/0/18104/770f2e8e-448a-4ae7-0b5e-1418678738fd.jpeg)\n#\u5b9f\u969b\nhttp://jsdo.it/ohisama1/sKXO\n#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n```\nvar canvas = document.getElementById(\"canvas\");\nvar ctx = canvas.getContext(\"2d\");\nfunction lpf(input, samplerate, freq) {\n    var q = 1.0;\n    var omega = 2.0 * 3.14159265 * freq / samplerate;\n    var alpha = Math.sin(omega) / (2.0 * q);\n    var a0 = 1.0 + alpha;\n    var a1 = -2.0 * Math.cos(omega);\n    var a2 = 1.0 - alpha;\n    var b0 = (1.0 - Math.cos(omega)) / 2.0;\n    var b1 = 1.0 - Math.cos(omega);\n    var b2 = (1.0 - Math.cos(omega)) / 2.0;\n    var output = new Float32Array(1000);\n    var size = 1000;\n    var in1 = 0;\n    var in2 = 0;\n    var out1 = 0;\n    var out2 = 0;\n    for (var i = 0; i < size; i++)\n    {\n    \toutput[i] = b0 / a0 * input[i] + b1 / a0 * in1 + b2 / a0 * in2 - a1 / a0 * out1 - a2 / a0 * out2;\n     \tin2 = in1;\n     \tin1 = input[i];\n    \tout2 = out1;\n    \tout1 = output[i];\n    }\n    return output;\n}\nfunction draw(data, n) {\n\tvar hcenter = n * 150 + 100;\n    ctx.strokeStyle = \"#0f0\";\n    ctx.lineWidth = 2;\n\tctx.moveTo(0, hcenter);\n    for (var i = 1; i < canvas.width; i++) \n    {\n        ctx.lineTo(i, data[i] * 15 + hcenter);\n    }\n\tctx.stroke();\n}\nfunction make() {\n    var t;\n    var src = new Float32Array(1000);\n    var am = new Float32Array(1000);\n    var I = new Float32Array(1000);\n    var Q = new Float32Array(1000);\n    var I2;\n    var Q2;\n    var o = new Float32Array(1000);\n    for (t = 0; t < 1000; t++)\n    {\n        src[t] = Math.sin(t / 8000 * 2 * Math.PI * 220) * 2 - 1;\n    }\n    draw(src, 0);\n    for (t = 0; t < 1000; t++)\n    {\n        am[t] = (0.6 * Math.sin(t / 8000 * 2 * Math.PI * 220) + 1.0) * Math.sin(t / 8000 * 2 * Math.PI * 3000) * 2 - 1;\n    }\n    draw(am, 1);\n    for (t = 0; t < 1000; t++)\n    {\n        I[t] = am[t] * Math.cos(t / 8000 * 2 * Math.PI * 2800);\n        Q[t] = am[t] * Math.sin(t / 8000 * 2 * Math.PI * 2800);\n    }\n    I2 = lpf(I, 8000, 300);\n    Q2 = lpf(Q, 8000, 300);\n    for (t = 0; t < 1000; t++)\n    {\n        o[t] = Math.sqrt(I2[t] * I2[t] + Q2[t] * Q2[t]) * 4 - 6;\n    }\n    draw(o, 2);\n} \nmake();\n\n\n```\n", "tags": ["jsdo", "\u30e9\u30b8\u30aa"]}