{"tags": ["Java", "Jackson"], "context": " More than 1 year has passed since last update.Jackson \u306e\u4f7f\u3044\u65b9\u306a\u3069\u306e\u30e1\u30e2\n\u4eca\u5f8c\u8ffd\u52a0\u3057\u3066\u3044\u304f\u4e88\u5b9a\n\nJSON\u5909\u63db\u9ad8\u901f\u5316\nJackson\u3067\u306e JSON \u3078\u306e\u5909\u63db\u6642\u306b\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u3068\u3057\u3066\u3001\u3069\u3046\u306b\u3082 ObjectMapper \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u304c\u9045\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3055\u3089\u306b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u306b\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u6392\u4ed6\u51e6\u7406\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u306e\u304b\uff08\u30bd\u30fc\u30b9\u3092\u898b\u3066\u3044\u306a\u3044\u306e\u3067\u9055\u3063\u3066\u3044\u305f\u3089\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\uff09\u3001\u30b7\u30ea\u30a2\u30eb\u306bJSON\u5909\u63db\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3002\n\u305d\u3053\u3067\u3001ObjectMapper\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3042\u308c\u3070\u3001\u3042\u3089\u304b\u3058\u3081\u751f\u6210\u3057\u305f ObjectMapper \u3092\u4f7f\u3044\u307e\u308f\u3059\u4e8b\u3067\u3001\u51e6\u7406\u306e\u9ad8\u901f\u5316\u3092\u8a08\u308c\u305d\u3046\u3002\n\u3063\u3068\u3044\u3046\u3053\u3068\u3067\u3001ObjectMapper\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u8abf\u67fb\n\u203b http://wiki.fasterxml.com/JacksonFAQ\nIs ObjectMapper thread-safe?\n\nShort answer: yes\n\nLong answer: yes, as long as you always configure instance before use, and do not call configure methods during operation (or synchronize such calls appropriately). Usually it is better to construct separate mapper instance if configurations differ in any case.\n\nFurther: it is beneficial to use just one instance (or small number of instances) for data binding; many optimizations for reuse (of symbol tables, some buffers) depend on ObjectMapper instances being reused.\n\nFor more information, check out JacksonFAQThreadSafety\n\n\n\u3069\u3046\u3084\u3089\u3001read/wirte\u4e2d\u306bObjectMapper\u306e\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3001\n\u5358\u7d14\u306a\u4f7f\u3044\u65b9\u3060\u3051\u306a\u3089\u554f\u984c\u306a\u3055\u305d\u3046\u3002\n\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306eJSON\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3092JSON\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3053\u3068\u306f\u7279\u306b\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u304c\u3001\n\u305d\u308c\u3092\u518d\u5ea6\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u623b\u305d\u3046\u3068\u3059\u308b\u3068\u3001\nJsonMappingException \u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\u3053\u308c\u306e\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u3001@JsonTypeInfo \u3067\u578b\u60c5\u5831\u3092\u4e00\u7dd2\u306bJSON\u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u3082JSON\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\n\n\u30b5\u30f3\u30d7\u30eb\n@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS, property=\"classType\")\npublic abstract class SuperClass {\n    public int id;\n}\n\npublic class SubClass extends SuperClass {\n    public String name;\n}\n\npublic class DerivedClass extends SuperClass {\n    public int number;\n}\n\npublic class Array extends SuperClass {\n    List<SuperClass> list = new ArrayList<SuperClass>();\n}\n\n\npublic static void main() {\n\n   SubClass sub = new SubClass();\n   sub.id = 1234;\n   sub.name = \"aiueo\";\n\n   DerivedClass derived = new DerivedClass();\n   derived.id = 5678;\n   derived.number = 1;\n\n   Array hoge = new Array();\n   hoge.list.add(sub);\n   hoge.list.add(derived);\n\n   ObjectMapper mapper = new ObjectMapper();\n   String json = mapper.writeValueAsString(hoge);\n\n   System.out.println(json);\n\n   Array hoge2 = mapper.readValue(json, Array.class);\n   String json2 = mapper.writeValueAsString(hoge2);\n   System.out.println(\"desirialize success ?\");\n   System.out.println(json.equals(json2));\n}\n\n\n\n\u7d50\u679c\n{\n    \"classType\": \"Array\",\n    \"id\": 0,\n    \"list\": [\n        {\n            \"classType\": \"SubClass\",\n            \"id\": 1234,\n            \"name\": \"aiueo\"\n        },\n        {\n            \"classType\": \"DerivedClass\",\n            \"id\": 5678,\n            \"number\": 1\n        }\n    ]\n}\n\ndesirialize success ?\ntrue\n\n\nJsonTypeInfo\n\n\u25a0 use \u5c5e\u6027\n\u578b\u60c5\u5831\u306e\u51fa\u529b\u65b9\u6cd5\u3092\u6307\u5b9a\u3002\n\u4eca\u56de\u306f Id.CLASS \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u542b\u3081\u305f\u30af\u30e9\u30b9\u540d\u3067\u51fa\u3057\u3066\u3044\u308b\n\n\u25a0 propety \u5c5e\u6027\nJSON\u51fa\u529b\u6642\u306e\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3002\n\n\u5236\u9650\n\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b Array \u30af\u30e9\u30b9\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3001JsonTypeInfo \u304c\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3002\n\u304a\u305d\u3089\u304f list \u5185\u3067\u3001JsonTypeInfo \u3092\u51fa\u529b\u3067\u304d\u306a\u3044\u30af\u30e9\u30b9\u304c\u6df7\u3058\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408\u306f\u51fa\u529b\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u308f\u308c\u30fb\u30fb\u30fb\npublic class Array extends SuperClass {\n    //List<SuperClass> list = new ArrayList<SuperClass>();\n    List<Object> list = new ArrayList<Object>();\n}\n\n\n\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u6642\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u6307\u5b9a\n\u3053\u3061\u3089\n\nJackson \u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e Serializer \u3092\u4f5c\u3063\u3066\u307f\u308b\n\u3053\u3061\u3089\nJackson \u306e\u4f7f\u3044\u65b9\u306a\u3069\u306e\u30e1\u30e2\n\u4eca\u5f8c\u8ffd\u52a0\u3057\u3066\u3044\u304f\u4e88\u5b9a\n\n# JSON\u5909\u63db\u9ad8\u901f\u5316\n\nJackson\u3067\u306e JSON \u3078\u306e\u5909\u63db\u6642\u306b\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u3068\u306a\u3063\u3066\u3044\u308b\u90e8\u5206\u3068\u3057\u3066\u3001\u3069\u3046\u306b\u3082 ObjectMapper \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u751f\u6210\u304c\u9045\u3044\u6c17\u304c\u3059\u308b\u3002\n\u3055\u3089\u306b\u3001\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u3067\u4e26\u5217\u306b\u751f\u6210\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u6392\u4ed6\u51e6\u7406\u304c\u304b\u304b\u3063\u3066\u3044\u308b\u306e\u304b\uff08\u30bd\u30fc\u30b9\u3092\u898b\u3066\u3044\u306a\u3044\u306e\u3067\u9055\u3063\u3066\u3044\u305f\u3089\u30b4\u30e1\u30f3\u30ca\u30b5\u30a4\uff09\u3001\u30b7\u30ea\u30a2\u30eb\u306bJSON\u5909\u63db\u304c\u884c\u308f\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u898b\u3048\u308b\u3002\n\n\u305d\u3053\u3067\u3001ObjectMapper\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3067\u3042\u308c\u3070\u3001\u3042\u3089\u304b\u3058\u3081\u751f\u6210\u3057\u305f ObjectMapper \u3092\u4f7f\u3044\u307e\u308f\u3059\u4e8b\u3067\u3001\u51e6\u7406\u306e\u9ad8\u901f\u5316\u3092\u8a08\u308c\u305d\u3046\u3002\n\n\u3063\u3068\u3044\u3046\u3053\u3068\u3067\u3001ObjectMapper\u304c\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u304b\u8abf\u67fb\n\n\u203b http://wiki.fasterxml.com/JacksonFAQ\n\n```\nIs ObjectMapper thread-safe?\n\nShort answer: yes\n\nLong answer: yes, as long as you always configure instance before use, and do not call configure methods during operation (or synchronize such calls appropriately). Usually it is better to construct separate mapper instance if configurations differ in any case.\n\nFurther: it is beneficial to use just one instance (or small number of instances) for data binding; many optimizations for reuse (of symbol tables, some buffers) depend on ObjectMapper instances being reused.\n\nFor more information, check out JacksonFAQThreadSafety\n\n```\n\n\n\u3069\u3046\u3084\u3089\u3001read/wirte\u4e2d\u306bObjectMapper\u306e\u8a2d\u5b9a\u304c\u5909\u66f4\u3055\u308c\u306a\u3051\u308c\u3070\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u3068\u3044\u3046\u3053\u3068\u306a\u306e\u3067\u3001\n\u5358\u7d14\u306a\u4f7f\u3044\u65b9\u3060\u3051\u306a\u3089\u554f\u984c\u306a\u3055\u305d\u3046\u3002\n\n\n\n#\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u306eJSON\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\n\n\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3092JSON\u306b\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3059\u308b\u3053\u3068\u306f\u7279\u306b\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u3067\u304d\u308b\u304c\u3001\n\u305d\u308c\u3092\u518d\u5ea6\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3057\u3066\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u623b\u305d\u3046\u3068\u3059\u308b\u3068\u3001\nJsonMappingException \u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\n\n\u3053\u308c\u306e\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u3001<b>@JsonTypeInfo</b> \u3067\u578b\u60c5\u5831\u3092\u4e00\u7dd2\u306bJSON\u306b\u51fa\u529b\u3059\u308b\u3053\u3068\u3067\u3001\u30b8\u30a7\u30cd\u30ea\u30af\u30b9\u3067\u3082JSON\u304b\u3089\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u3067\u304d\u308b\n\n#####\u30b5\u30f3\u30d7\u30eb\n\n```java\n@JsonTypeInfo(use=JsonTypeInfo.Id.CLASS, property=\"classType\")\npublic abstract class SuperClass {\n    public int id;\n}\n\npublic class SubClass extends SuperClass {\n    public String name;\n}\n\npublic class DerivedClass extends SuperClass {\n    public int number;\n}\n\npublic class Array extends SuperClass {\n    List<SuperClass> list = new ArrayList<SuperClass>();\n}\n\n\npublic static void main() {\n\n   SubClass sub = new SubClass();\n   sub.id = 1234;\n   sub.name = \"aiueo\";\n\n   DerivedClass derived = new DerivedClass();\n   derived.id = 5678;\n   derived.number = 1;\n\n   Array hoge = new Array();\n   hoge.list.add(sub);\n   hoge.list.add(derived);\n\n   ObjectMapper mapper = new ObjectMapper();\n   String json = mapper.writeValueAsString(hoge);\n   \n   System.out.println(json);\n   \n   Array hoge2 = mapper.readValue(json, Array.class);\n   String json2 = mapper.writeValueAsString(hoge2);\n   System.out.println(\"desirialize success ?\");\n   System.out.println(json.equals(json2));\n}\n\n```\n\n#####\u7d50\u679c\n<pre>\n{\n    \"classType\": \"Array\",\n    \"id\": 0,\n    \"list\": [\n        {\n            \"classType\": \"SubClass\",\n            \"id\": 1234,\n            \"name\": \"aiueo\"\n        },\n        {\n            \"classType\": \"DerivedClass\",\n            \"id\": 5678,\n            \"number\": 1\n        }\n    ]\n}\n\ndesirialize success ?\ntrue\n</pre>\n\n\n###JsonTypeInfo\n\n##### \u25a0 use \u5c5e\u6027\n\u578b\u60c5\u5831\u306e\u51fa\u529b\u65b9\u6cd5\u3092\u6307\u5b9a\u3002\n\u4eca\u56de\u306f Id.CLASS \u3092\u6307\u5b9a\u3057\u3066\u3044\u308b\u306e\u3067\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u542b\u3081\u305f\u30af\u30e9\u30b9\u540d\u3067\u51fa\u3057\u3066\u3044\u308b\n\n##### \u25a0 propety \u5c5e\u6027\nJSON\u51fa\u529b\u6642\u306e\u30ad\u30fc\u540d\u3092\u6307\u5b9a\u3002\n\n### \u5236\u9650\n\n\u30b5\u30f3\u30d7\u30eb\u306b\u3042\u308b Array \u30af\u30e9\u30b9\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u5834\u5408\u3001JsonTypeInfo \u304c\u51fa\u529b\u3055\u308c\u307e\u305b\u3093\u3002\n\u304a\u305d\u3089\u304f list \u5185\u3067\u3001JsonTypeInfo \u3092\u51fa\u529b\u3067\u304d\u306a\u3044\u30af\u30e9\u30b9\u304c\u6df7\u3058\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408\u306f\u51fa\u529b\u3057\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\u3068\u601d\u308f\u308c\u30fb\u30fb\u30fb\n\n```java\npublic class Array extends SuperClass {\n    //List<SuperClass> list = new ArrayList<SuperClass>();\n    List<Object> list = new ArrayList<Object>();\n}\n```\n\n# \u30c7\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u6642\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u6307\u5b9a\n\n[\u3053\u3061\u3089](http://qiita.com/nijuya_o/items/75aedcae82ab817ab96d)\n\n# Jackson \u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e Serializer \u3092\u4f5c\u3063\u3066\u307f\u308b\n\n[\u3053\u3061\u3089](http://qiita.com/nijuya_o/items/0f512792c4db27913c7a)\n"}