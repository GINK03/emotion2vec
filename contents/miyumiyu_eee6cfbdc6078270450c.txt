{"context": "\n\nInspector\u306e\u914d\u5217\u306eElement\u306e\u3068\u3053\u308d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f\u3044\n\u3053\u3068\u306e\u767a\u7aef\u306fOculus OVRLipSync\u3092\u4f7f\u3063\u3066\u88fd\u4f5c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u300115\u7a2e\u985e\u306e\u53e3\u5f62\u7d20\uff08sil, PP, FF, TH, DD, kk, CH, SS, nn, RR, aa, E, ih, oh, ou\uff09\u3092\u914d\u5217\u306eElement\u306b\u5165\u308c\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u9014\u4e2d\u3067\u308f\u3051\u304c\u308f\u304b\u3089\u305a\u3001\u3088\u304f\u9593\u9055\u3048\u308b\u306e\u3067\u306a\u3093\u3068\u304b\u306a\u3089\u306a\u3044\u304b\u306a\u3041\u3068\n\n\u203b\u3053\u306e15\u500b\u306eElement\u3067\u3059\n\nEditor\u30d5\u30a9\u30eb\u30c0\u306bPropertyDrawer\u306e\u62e1\u5f35\u3092\u66f8\u304f\nEditor\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u3092\u5165\u308c\u308b\n\nNamedArrayDrawer.cs\nusing UnityEngine;\nusing UnityEditor;\n\n[CustomPropertyDrawer(typeof(NamedArrayAttribute))]\npublic class NamedArrayDrawer : PropertyDrawer\n{\n    public override void OnGUI(Rect rect, SerializedProperty property, GUIContent label)\n    {\n        try\n        {\n            int pos = int.Parse(property.propertyPath.Split('[', ']')[1]);\n            EditorGUI.PropertyField(rect, property, new GUIContent(((NamedArrayAttribute)attribute).names[pos]));\n\n        }\n        catch\n        {\n            EditorGUI.PropertyField(rect, property, label);\n        }\n    }\n}\n\n\n\u203bUnity 5.4\u3060\u3068\u3053\u306e\u66f8\u304d\u65b9\n5.3\u3060\u3068\u3010EditorGUI.PropertyField\u3011\u2192\u3010EditorGUI.ObjecField\u3011\u306a\u6c17\u304c\u3057\u307e\u3059\uff08\u672a\u691c\u8a3c\uff09\n\nNamedArrayAttribute\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u9069\u5f53\u306a\u3068\u3053\u308d\u306bNamedArrayAttribute\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\nNamedArrayAttribute.cs\nusing UnityEngine;\n\npublic class NamedArrayAttribute : PropertyAttribute\n{\n    public readonly string[] names;\n    public NamedArrayAttribute(string[] names) { this.names = names; }\n}\n\n\n\n\u5b9f\u969b\u306b\u4f7f\u3046\nOVRLipSyncContextMorphTarget.cs\u5185\u3067\u8a72\u5f53\u3059\u308b\u914d\u5217\u306e\u4e0a\u306b\u62e1\u5f35\u3057\u305fAttribute\u3092\u7f6e\u304f\n\nOVRLipSyncContextMorphTarget.cs\n    // Set the blendshape index to go to (-1 means there is not one assigned)\n    [NamedArrayAttribute(new string[] { \"sil\", \"PP\", \"FF\", \"TH\", \"DD\", \"kk\", \"CH\", \"SS\", \"nn\", \"RR\", \"aa\", \"E\", \"ih\", \"oh\", \"ou\" })]  // \u2190\u8ffd\u52a0\n    public int[] VisemeToBlendTargets = new int[(int)OVRLipSync.ovrLipSyncViseme.Count];\n\n\n\n\u3067\u304d\u305f\u3082\u306e\n\n\u3046\u3093\u3001\u3053\u308c\u3067\u9593\u9055\u3048\u306a\u304f\u306a\u308a\u305d\u3046\uff01\n# Inspector\u306e\u914d\u5217\u306eElement\u306e\u3068\u3053\u308d\u3092\u308f\u304b\u308a\u3084\u3059\u304f\u3057\u305f\u3044\n\u3053\u3068\u306e\u767a\u7aef\u306f[Oculus OVRLipSync](https://developer3.oculus.com/downloads/audio/1.0.1-beta/Oculus_OVRLipSync_for_Unity_5/)\u3092\u4f7f\u3063\u3066\u88fd\u4f5c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u300115\u7a2e\u985e\u306e\u53e3\u5f62\u7d20\uff08sil, PP, FF, TH, DD, kk, CH, SS, nn, RR, aa, E, ih, oh, ou\uff09\u3092\u914d\u5217\u306eElement\u306b\u5165\u308c\u3066\u3044\u304b\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304c\u9014\u4e2d\u3067\u308f\u3051\u304c\u308f\u304b\u3089\u305a\u3001\u3088\u304f\u9593\u9055\u3048\u308b\u306e\u3067\u306a\u3093\u3068\u304b\u306a\u3089\u306a\u3044\u304b\u306a\u3041\u3068\n![74280c28d21d371e7a191ae0ca145461.png](https://qiita-image-store.s3.amazonaws.com/0/79067/f7cbd5a7-d22f-c401-6214-1d2ade5c2449.png)\n\u203b\u3053\u306e15\u500b\u306eElement\u3067\u3059\n\n## Editor\u30d5\u30a9\u30eb\u30c0\u306bPropertyDrawer\u306e\u62e1\u5f35\u3092\u66f8\u304f\n\nEditor\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u306b\u4ee5\u4e0b\u306e\u30bd\u30fc\u30b9\u3092\u5165\u308c\u308b\n\n```csharp:NamedArrayDrawer.cs\nusing UnityEngine;\nusing UnityEditor;\n\n[CustomPropertyDrawer(typeof(NamedArrayAttribute))]\npublic class NamedArrayDrawer : PropertyDrawer\n{\n    public override void OnGUI(Rect rect, SerializedProperty property, GUIContent label)\n    {\n        try\n        {\n            int pos = int.Parse(property.propertyPath.Split('[', ']')[1]);\n            EditorGUI.PropertyField(rect, property, new GUIContent(((NamedArrayAttribute)attribute).names[pos]));\n\n        }\n        catch\n        {\n            EditorGUI.PropertyField(rect, property, label);\n        }\n    }\n}\n```\n\n\u203bUnity 5.4\u3060\u3068\u3053\u306e\u66f8\u304d\u65b9\n5.3\u3060\u3068\u3010EditorGUI.PropertyField\u3011\u2192\u3010EditorGUI.ObjecField\u3011\u306a\u6c17\u304c\u3057\u307e\u3059\uff08\u672a\u691c\u8a3c\uff09\n\n\n## NamedArrayAttribute\u30af\u30e9\u30b9\u306e\u4f5c\u6210\n\u9069\u5f53\u306a\u3068\u3053\u308d\u306bNamedArrayAttribute\u30af\u30e9\u30b9\u3092\u4f5c\u6210\n\n```csharp:NamedArrayAttribute.cs\nusing UnityEngine;\n\npublic class NamedArrayAttribute : PropertyAttribute\n{\n    public readonly string[] names;\n    public NamedArrayAttribute(string[] names) { this.names = names; }\n}\n```\n\n## \u5b9f\u969b\u306b\u4f7f\u3046\nOVRLipSyncContextMorphTarget.cs\u5185\u3067\u8a72\u5f53\u3059\u308b\u914d\u5217\u306e\u4e0a\u306b\u62e1\u5f35\u3057\u305fAttribute\u3092\u7f6e\u304f\n\n```csharp:OVRLipSyncContextMorphTarget.cs\n    // Set the blendshape index to go to (-1 means there is not one assigned)\n    [NamedArrayAttribute(new string[] { \"sil\", \"PP\", \"FF\", \"TH\", \"DD\", \"kk\", \"CH\", \"SS\", \"nn\", \"RR\", \"aa\", \"E\", \"ih\", \"oh\", \"ou\" })]  // \u2190\u8ffd\u52a0\n    public int[] VisemeToBlendTargets = new int[(int)OVRLipSync.ovrLipSyncViseme.Count];\n```\n## \u3067\u304d\u305f\u3082\u306e\n\n![1af33868c190de938e7e9e350e749d2e.png](https://qiita-image-store.s3.amazonaws.com/0/79067/10cd8d94-b82e-8a3b-5e12-b9a83bcc3642.png)\n\n\n\u3046\u3093\u3001\u3053\u308c\u3067\u9593\u9055\u3048\u306a\u304f\u306a\u308a\u305d\u3046\uff01\n\n", "tags": ["Unity", "UnityEditor"]}