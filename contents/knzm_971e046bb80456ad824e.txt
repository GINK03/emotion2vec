{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u203b\u3053\u306e\u8a18\u4e8b\u306f word2vec \u306e\u5404\u7a2e\u5b9f\u88c5\u306e\u901f\u5ea6\u6bd4\u8f03 \u306e\u74b0\u5883\u69cb\u7bc9\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u5358\u4f53\u3067\u3082\u8aad\u3081\u308b\u5185\u5bb9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308b Chainer, TensorFlow, DMTK (Microsoft Distributed Machine Learning Toolkit) \u3092 Ubuntu \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059 (Mac \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u624b\u9806 \u306f\u3053\u3061\u3089)\u3002\u52d5\u4f5c\u74b0\u5883\u306f NVIDIA \u88fd\u306e GPU \u304c\u8f09\u3063\u305f Ubuntu \u30de\u30b7\u30f3\u3067\u3001\u7279\u306b AWS \u306e GPU \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u5ff5\u982d\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002\n\u306a\u304a\u3001\u8a18\u4e8b\u4e2d\u3067\u8aac\u660e\u3057\u305f\u624b\u9806\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3059: https://bitbucket.org/knzm/wordembedding-experiments\n(CUDA \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5468\u308a\u306f gist \u3092\u53c2\u7167)\n\n\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u6700\u521d\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ sudo apt-get install git subversion unzip\n$ sudo apt-get install build-essential gfortran\n$ sudo apt-get install python-virtualenv python-dev\n$ sudo apt-get install libatlas-base-dev swig\n\n\nCUDA 7.0 \u3068 cuDNN 6.5 v2 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u3053\u306e\u90e8\u5206\u306f\u306a\u304b\u306a\u304b\u9762\u5012\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\ninstall.sh\n#!/bin/sh -e\n\n### cuda\n\nCUDA_VERSION=7.0\nCUDA_PKG_VERSION=7-0\nCUDA_REPO_VERSION=7.0-28\nCUDA_DOWNLOAD_SUM=7570ef4b5cb5dd861b6e01732e20a0da3241c69f164bcb3348cfecba04230e85\n\ncurl -fsSL http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA_REPO_VERSION}_amd64.deb -O\necho \"${CUDA_DOWNLOAD_SUM} cuda-repo-ubuntu1404_7.0-28_amd64.deb\" | sha256sum -c --strict -\ndpkg -i cuda-repo-ubuntu1404_${CUDA_REPO_VERSION}_amd64.deb\napt-get update\n\napt-get install -y build-essential\n\napt-get install -y \\\n  cuda-core-${CUDA_PKG_VERSION} \\\n  cuda-license-${CUDA_PKG_VERSION} \\\n  cuda-misc-headers-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-nvrtc-${CUDA_PKG_VERSION} \\\n  cuda-cusolver-${CUDA_PKG_VERSION} \\\n  cuda-cublas-${CUDA_PKG_VERSION} \\\n  cuda-cufft-${CUDA_PKG_VERSION} \\\n  cuda-curand-${CUDA_PKG_VERSION} \\\n  cuda-cusparse-${CUDA_PKG_VERSION} \\\n  cuda-npp-${CUDA_PKG_VERSION} \\\n  cuda-cudart-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-driver-dev-${CUDA_PKG_VERSION} \\\n  cuda-nvrtc-dev-${CUDA_PKG_VERSION} \\\n  cuda-cusolver-dev-${CUDA_PKG_VERSION} \\\n  cuda-cublas-dev-${CUDA_PKG_VERSION} \\\n  cuda-cufft-dev-${CUDA_PKG_VERSION} \\\n  cuda-curand-dev-${CUDA_PKG_VERSION} \\\n  cuda-cusparse-dev-${CUDA_PKG_VERSION} \\\n  cuda-npp-dev-${CUDA_PKG_VERSION} \\\n  cuda-cudart-dev-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-drivers \\\n  cuda-command-line-tools-${CUDA_PKG_VERSION} \\\n  nvidia-modprobe\n\nln -s cuda-${CUDA_VERSION} /usr/local/cuda\necho \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf\necho \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf\nldconfig\n\ncp cuda.env /etc/profile.d/cuda.sh\n. /etc/profile.d/cuda.sh\n\n### cuDNN\n\nCUDNN_VERSION=6.5\nCUDNN_PKG_VERSION=${CUDNN_VERSION}-linux-x64-v2\nCUDNN_DOWNLOAD_SUM=4b02cb6bf9dfa57f63bfff33e532f53e2c5a12f9f1a1b46e980e626a55f380aa\n\ncurl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v2/cudnn-${CUDNN_PKG_VERSION}.tgz -O\necho \"${CUDNN_DOWNLOAD_SUM} cudnn-${CUDNN_PKG_VERSION}.tgz\" | sha256sum -c --strict -\ntar -xzf cudnn-${CUDNN_PKG_VERSION}.tgz\ncp -a cudnn-${CUDNN_PKG_VERSION} /usr/local/cudnn-${CUDNN_VERSION}\nln -s cudnn-${CUDNN_VERSION} /usr/local/cudnn\nln -s /usr/local/cudnn/cudnn.h /usr/local/cuda/include/\nln -s /usr/local/cudnn/libcudnn* /usr/local/cuda/lib64/\nldconfig\n\n\n\ncuda.env\nCUDA_PATH=/usr/local/cuda\nPATH=${CUDA_PATH}/bin:${PATH}\nLD_LIBRARY_PATH=${CUDA_PATH}/lib64:${LD_LIBRARY_PATH}\nexport CUDA_PATH\n\n\n\u540c\u3058\u5185\u5bb9\u306e\u30d5\u30a1\u30a4\u30eb\u304c gist \u306b\u3082\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u4e00\u767a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n$ git clone https://gist.github.com/knzm/91f88e1703360a3904c7\n$ cd 91f88e1703360a3904c7\n$ chmod a+x install.sh\n$ sudo ./install.sh\n\n\nChainer \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: http://docs.chainer.org/en/stable/install.html\n\u5148\u306b HDF5 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n$ sudo apt-get install libhdf5-dev\n\nvirtualenv \u3092\u4f5c\u6210\u3057\u3066\u3001\n$ virtualenv ~/virtualenvs/chainer\n$ source ~/virtualenvs/chainer/bin/activate\n\nsetuptools / pip \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3059\u308b\u306e\u3067\u6700\u65b0\u306b\u4e0a\u3052\u3066\u3001\n$ pip install -U setuptools pip\n\npip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install chainer\n\n\u307e\u305f\u306f\u958b\u767a\u7248\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ git clone https://github.com/pfnet/chainer.git\n$ cd chainer\n$ pip intall h5py\n$ python setup.py develop\n\n\nTensorFlow \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: https://www.tensorflow.org/versions/master/get_started/os_setup.html\nvirtualenv \u3092\u4f5c\u6210\u3057\u3066\u3001\n$ virtualenv ~/virtualenvs/tensorflow-gpu --system-site-packages\n$ source ~/virtualenvs/tensorflow-gpu/bin/activate\n\n\u516c\u5f0f\u306b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b wheel \u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ pip install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.6.0-cp27-none-linux_x86_64.whl\n\n\u305f\u3060\u3057 EC2 \u306e\u3088\u3046\u306b TensorFlow \u304c\u516c\u5f0f\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044 GPU \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\nJDK \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb:\n$ sudo apt-get install default-jdk\n\nbazel \u306e\u30d3\u30eb\u30c9:\n$ git clone https://github.com/bazelbuild/bazel.git\n$ cd bazel\n$ git checkout tags/0.1.0\n$ ./compile.sh\n$ cd ..\n\ntensorflow \u306e\u30d3\u30eb\u30c9\n$ git clone https://github.com/tensorflow/tensorflow\n$ cd tensorflow\n$ git checkout tags/0.6.0\n$ git submodule update --init\n$ TF_UNOFFICIAL_SETTING=1 ./configure\n$ ../bazel/output/bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package $PWD/dist\n$ cd ..\n\nconfigure \u306e\u9014\u4e2d\u3067 Cuda compute capabilities \u3092\u805e\u304b\u308c\u308b\u306e\u3067\u3001 \u4f7f\u7528\u3057\u3066\u3044\u308b GPU \u306b\u5bfe\u5fdc\u3057\u305f\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 AWS \u306e g2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 (GRID K520) \u306e\u5834\u5408\u306f 3.0 \u3067\u3059\u3002\u5e02\u8ca9\u3055\u308c\u3066\u3044\u308b GPU \u306b\u95a2\u3057\u3066\u306f NVIDIA \u306e\u30b5\u30a4\u30c8\u306b \u4e00\u89a7\u8868 \u304c\u3042\u308a\u307e\u3059\u3002\n\u3067\u304d\u305f wheel \u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ pip install tensorflow/dist/tensorflow-0.6.0-cp27-none-linux_x86_64.whl\n\n\nDMTK \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\nUbuntu 14.04 \u3067\u306f \u6a19\u6e96\u306e GCC \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 4.8 \u306a\u306e\u3067\u3001 DMTK \u3092\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a GCC 4.8 \u306f\u3059\u3067\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n$ gcc --version\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\n\u3082\u3057\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n$ sudo apt-get install gcc-4.8 g++-4.8\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af (multiverso) \u306e\u30d3\u30eb\u30c9:\n$ git clone https://github.com/Microsoft/multiverso.git\n$ cd multiverso\n$ vi Makefile\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Makefile \u3092\u4fee\u6b63\u3057\u3066\u3001\n--- Makefile\n+++ Makefile\n@@ -18,7 +18,7 @@\n\n INC_FLAGS = -I$(HEADERS_DIR)\n INC_FLAGS += -I$(THIRD_PARTY_INC)\n-LD_FLAGS = -L$(THIRD_PARTY_LIB) -lzmq -lmpich -lmpl\n+LD_FLAGS = -L$(THIRD_PARTY_LIB) -Wl,-Bstatic -lzmq -lmpich -lmpl -Wl,-Bdynamic -lpthread -lrt\n\n LIB_SRC_DIR = $(PROJECT)/src/multiverso\n SERVER_SRC_DIR = $(PROJECT)/src/multiverso_server\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ cd third_party\n$ ./install.sh\n$ cd ..\n$ make\n$ cd ..\n\n\u6b21\u306b\u500b\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f distributed_word_embedding \u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\u304c\u3001 lightlda, distributed_skipgram_mixture \u3082\u307b\u307c\u540c\u69d8\u306e\u624b\u9806\u3067\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3059\u3002\n$ git clone https://github.com/Microsoft/distributed_word_embedding.git\n$ cd distributed_word_embedding\n$ ln -s ../multiverso\n$ vi Makefile\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Makefile \u3092\u4fee\u6b63\u3057\u3066\u3001\n--- Makefile\n+++ Makefile\n@@ -14,7 +14,7 @@\n\n INC_FLAGS = -I$(MULTIVERSO_INC)\n LD_FLAGS  = -L$(MULTIVERSO_LIB) -lmultiverso\n-LD_FLAGS += -L$(THIRD_PARTY_LIB) -lzmq -lmpich -lmpl\n+LD_FLAGS += -L$(THIRD_PARTY_LIB) -Wl,-Bstatic -lzmq -lmpich -lmpl dw\n LD_FLAGS += -lpthread\n\n WORD_EMBEDDING_HEADERS = $(shell find $(PROJECT)/src -type f -name \"*.h\")\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n$ make\n\n\u30d3\u30eb\u30c9\u304c\u7d42\u308f\u308b\u3068 bin \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n# \u306f\u3058\u3081\u306b\n\n\u203b\u3053\u306e\u8a18\u4e8b\u306f [word2vec \u306e\u5404\u7a2e\u5b9f\u88c5\u306e\u901f\u5ea6\u6bd4\u8f03](http://aial.shiroyagi.co.jp/2015/12/word2vec/) \u306e\u74b0\u5883\u69cb\u7bc9\u90e8\u5206\u3092\u629c\u304d\u51fa\u3057\u305f\u3082\u306e\u3067\u3059\u304c\u3001\u5358\u4f53\u3067\u3082\u8aad\u3081\u308b\u5185\u5bb9\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u6a5f\u68b0\u5b66\u7fd2\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3042\u308b Chainer, TensorFlow, DMTK (Microsoft Distributed Machine Learning Toolkit) \u3092 Ubuntu \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059 ([Mac \u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u624b\u9806](http://qiita.com/knzm/items/5667680be8e975a89377) \u306f\u3053\u3061\u3089)\u3002\u52d5\u4f5c\u74b0\u5883\u306f NVIDIA \u88fd\u306e GPU \u304c\u8f09\u3063\u305f Ubuntu \u30de\u30b7\u30f3\u3067\u3001\u7279\u306b AWS \u306e GPU \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3067\u52d5\u304b\u3059\u3053\u3068\u3092\u5ff5\u982d\u306b\u7f6e\u3044\u3066\u3044\u307e\u3059\u3002\n\n\u306a\u304a\u3001\u8a18\u4e8b\u4e2d\u3067\u8aac\u660e\u3057\u305f\u624b\u9806\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u542b\u3080\u30ea\u30dd\u30b8\u30c8\u30ea\u306f\u3053\u3053\u306b\u3042\u308a\u307e\u3059: https://bitbucket.org/knzm/wordembedding-experiments\n\n(CUDA \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u5468\u308a\u306f [gist](https://gist.github.com/knzm/91f88e1703360a3904c7) \u3092\u53c2\u7167)\n\n# \u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u6700\u521d\u306b\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ sudo apt-get install git subversion unzip\n$ sudo apt-get install build-essential gfortran\n$ sudo apt-get install python-virtualenv python-dev\n$ sudo apt-get install libatlas-base-dev swig\n```\n\n# CUDA 7.0 \u3068 cuDNN 6.5 v2 \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\u3053\u306e\u90e8\u5206\u306f\u306a\u304b\u306a\u304b\u9762\u5012\u3067\u3059\u304c\u3001\u4ee5\u4e0b\u306e\u624b\u9806\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n```bash:install.sh\n#!/bin/sh -e\n\n### cuda\n\nCUDA_VERSION=7.0\nCUDA_PKG_VERSION=7-0\nCUDA_REPO_VERSION=7.0-28\nCUDA_DOWNLOAD_SUM=7570ef4b5cb5dd861b6e01732e20a0da3241c69f164bcb3348cfecba04230e85\n\ncurl -fsSL http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1404/x86_64/cuda-repo-ubuntu1404_${CUDA_REPO_VERSION}_amd64.deb -O\necho \"${CUDA_DOWNLOAD_SUM} cuda-repo-ubuntu1404_7.0-28_amd64.deb\" | sha256sum -c --strict -\ndpkg -i cuda-repo-ubuntu1404_${CUDA_REPO_VERSION}_amd64.deb\napt-get update\n\napt-get install -y build-essential\n\napt-get install -y \\\n  cuda-core-${CUDA_PKG_VERSION} \\\n  cuda-license-${CUDA_PKG_VERSION} \\\n  cuda-misc-headers-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-nvrtc-${CUDA_PKG_VERSION} \\\n  cuda-cusolver-${CUDA_PKG_VERSION} \\\n  cuda-cublas-${CUDA_PKG_VERSION} \\\n  cuda-cufft-${CUDA_PKG_VERSION} \\\n  cuda-curand-${CUDA_PKG_VERSION} \\\n  cuda-cusparse-${CUDA_PKG_VERSION} \\\n  cuda-npp-${CUDA_PKG_VERSION} \\\n  cuda-cudart-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-driver-dev-${CUDA_PKG_VERSION} \\\n  cuda-nvrtc-dev-${CUDA_PKG_VERSION} \\\n  cuda-cusolver-dev-${CUDA_PKG_VERSION} \\\n  cuda-cublas-dev-${CUDA_PKG_VERSION} \\\n  cuda-cufft-dev-${CUDA_PKG_VERSION} \\\n  cuda-curand-dev-${CUDA_PKG_VERSION} \\\n  cuda-cusparse-dev-${CUDA_PKG_VERSION} \\\n  cuda-npp-dev-${CUDA_PKG_VERSION} \\\n  cuda-cudart-dev-${CUDA_PKG_VERSION}\n\napt-get install -y \\\n  cuda-drivers \\\n  cuda-command-line-tools-${CUDA_PKG_VERSION} \\\n  nvidia-modprobe\n\nln -s cuda-${CUDA_VERSION} /usr/local/cuda\necho \"/usr/local/cuda/lib\" >> /etc/ld.so.conf.d/cuda.conf\necho \"/usr/local/cuda/lib64\" >> /etc/ld.so.conf.d/cuda.conf\nldconfig\n\ncp cuda.env /etc/profile.d/cuda.sh\n. /etc/profile.d/cuda.sh\n\n### cuDNN\n\nCUDNN_VERSION=6.5\nCUDNN_PKG_VERSION=${CUDNN_VERSION}-linux-x64-v2\nCUDNN_DOWNLOAD_SUM=4b02cb6bf9dfa57f63bfff33e532f53e2c5a12f9f1a1b46e980e626a55f380aa\n\ncurl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v2/cudnn-${CUDNN_PKG_VERSION}.tgz -O\necho \"${CUDNN_DOWNLOAD_SUM} cudnn-${CUDNN_PKG_VERSION}.tgz\" | sha256sum -c --strict -\ntar -xzf cudnn-${CUDNN_PKG_VERSION}.tgz\ncp -a cudnn-${CUDNN_PKG_VERSION} /usr/local/cudnn-${CUDNN_VERSION}\nln -s cudnn-${CUDNN_VERSION} /usr/local/cudnn\nln -s /usr/local/cudnn/cudnn.h /usr/local/cuda/include/\nln -s /usr/local/cudnn/libcudnn* /usr/local/cuda/lib64/\nldconfig\n```\n\n```bash:cuda.env\nCUDA_PATH=/usr/local/cuda\nPATH=${CUDA_PATH}/bin:${PATH}\nLD_LIBRARY_PATH=${CUDA_PATH}/lib64:${LD_LIBRARY_PATH}\nexport CUDA_PATH\n```\n\n\u540c\u3058\u5185\u5bb9\u306e\u30d5\u30a1\u30a4\u30eb\u304c [gist](https://gist.github.com/knzm/91f88e1703360a3904c7) \u306b\u3082\u3042\u308b\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u4e00\u767a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```\n$ git clone https://gist.github.com/knzm/91f88e1703360a3904c7\n$ cd 91f88e1703360a3904c7\n$ chmod a+x install.sh\n$ sudo ./install.sh\n```\n\n# Chainer \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: http://docs.chainer.org/en/stable/install.html\n\n\u5148\u306b HDF5 \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```\n$ sudo apt-get install libhdf5-dev\n```\n\nvirtualenv \u3092\u4f5c\u6210\u3057\u3066\u3001\n\n```\n$ virtualenv ~/virtualenvs/chainer\n$ source ~/virtualenvs/chainer/bin/activate\n```\n\nsetuptools / pip \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u3068\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306b\u5931\u6557\u3059\u308b\u306e\u3067\u6700\u65b0\u306b\u4e0a\u3052\u3066\u3001\n\n```\n$ pip install -U setuptools pip\n```\n\npip \u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ pip install chainer\n```\n\n\u307e\u305f\u306f\u958b\u767a\u7248\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ git clone https://github.com/pfnet/chainer.git\n$ cd chainer\n$ pip intall h5py\n$ python setup.py develop\n```\n\n# TensorFlow \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8: https://www.tensorflow.org/versions/master/get_started/os_setup.html\n\nvirtualenv \u3092\u4f5c\u6210\u3057\u3066\u3001\n\n```\n$ virtualenv ~/virtualenvs/tensorflow-gpu --system-site-packages\n$ source ~/virtualenvs/tensorflow-gpu/bin/activate\n```\n\n\u516c\u5f0f\u306b\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b wheel \u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ pip install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-0.6.0-cp27-none-linux_x86_64.whl\n```\n\n\u305f\u3060\u3057 EC2 \u306e\u3088\u3046\u306b TensorFlow \u304c\u516c\u5f0f\u306b\u5bfe\u5fdc\u3057\u3066\u306a\u3044 GPU \u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u624b\u9806\u3067\u30d3\u30eb\u30c9\u304c\u5fc5\u8981\u306b\u306a\u308a\u307e\u3059\u3002\n\nJDK \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb:\n\n```\n$ sudo apt-get install default-jdk\n```\n\nbazel \u306e\u30d3\u30eb\u30c9:\n\n```\n$ git clone https://github.com/bazelbuild/bazel.git\n$ cd bazel\n$ git checkout tags/0.1.0\n$ ./compile.sh\n$ cd ..\n```\n\ntensorflow \u306e\u30d3\u30eb\u30c9\n\n```\n$ git clone https://github.com/tensorflow/tensorflow\n$ cd tensorflow\n$ git checkout tags/0.6.0\n$ git submodule update --init\n$ TF_UNOFFICIAL_SETTING=1 ./configure\n$ ../bazel/output/bazel build -c opt --config=cuda //tensorflow/tools/pip_package:build_pip_package\n$ bazel-bin/tensorflow/tools/pip_package/build_pip_package $PWD/dist\n$ cd ..\n```\n\nconfigure \u306e\u9014\u4e2d\u3067 Cuda compute capabilities \u3092\u805e\u304b\u308c\u308b\u306e\u3067\u3001 \u4f7f\u7528\u3057\u3066\u3044\u308b GPU \u306b\u5bfe\u5fdc\u3057\u305f\u5024\u3092\u5165\u529b\u3057\u3066\u304f\u3060\u3055\u3044\u3002 AWS \u306e g2 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9 (GRID K520) \u306e\u5834\u5408\u306f 3.0 \u3067\u3059\u3002\u5e02\u8ca9\u3055\u308c\u3066\u3044\u308b GPU \u306b\u95a2\u3057\u3066\u306f NVIDIA \u306e\u30b5\u30a4\u30c8\u306b [\u4e00\u89a7\u8868](https://developer.nvidia.com/cuda-gpus) \u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3067\u304d\u305f wheel \u30d5\u30a1\u30a4\u30eb\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ pip install tensorflow/dist/tensorflow-0.6.0-cp27-none-linux_x86_64.whl\n```\n\n# DMTK \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\n\nUbuntu 14.04 \u3067\u306f \u6a19\u6e96\u306e GCC \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 4.8 \u306a\u306e\u3067\u3001 DMTK \u3092\u30d3\u30eb\u30c9\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a GCC 4.8 \u306f\u3059\u3067\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n```\n$ gcc --version\ngcc (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4\nCopyright (C) 2013 Free Software Foundation, Inc.\nThis is free software; see the source for copying conditions.  There is NO\nwarranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n```\n\n\u3082\u3057\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3051\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n```\n$ sudo apt-get install gcc-4.8 g++-4.8\n```\n\n\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af (multiverso) \u306e\u30d3\u30eb\u30c9:\n\n```\n$ git clone https://github.com/Microsoft/multiverso.git\n$ cd multiverso\n$ vi Makefile\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Makefile \u3092\u4fee\u6b63\u3057\u3066\u3001\n\n```diff\n--- Makefile\n+++ Makefile\n@@ -18,7 +18,7 @@\n \n INC_FLAGS = -I$(HEADERS_DIR)\n INC_FLAGS += -I$(THIRD_PARTY_INC)\n-LD_FLAGS = -L$(THIRD_PARTY_LIB) -lzmq -lmpich -lmpl\n+LD_FLAGS = -L$(THIRD_PARTY_LIB) -Wl,-Bstatic -lzmq -lmpich -lmpl -Wl,-Bdynamic -lpthread -lrt\n \n LIB_SRC_DIR = $(PROJECT)/src/multiverso\n SERVER_SRC_DIR = $(PROJECT)/src/multiverso_server\n```\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```\n$ cd third_party\n$ ./install.sh\n$ cd ..\n$ make\n$ cd ..\n```\n\n\u6b21\u306b\u500b\u5225\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\u3053\u3053\u3067\u306f distributed_word_embedding \u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\u304c\u3001 lightlda, distributed_skipgram_mixture \u3082\u307b\u307c\u540c\u69d8\u306e\u624b\u9806\u3067\u30d3\u30eb\u30c9\u3067\u304d\u307e\u3059\u3002\n\n```\n$ git clone https://github.com/Microsoft/distributed_word_embedding.git\n$ cd distributed_word_embedding\n$ ln -s ../multiverso\n$ vi Makefile\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b Makefile \u3092\u4fee\u6b63\u3057\u3066\u3001\n\n```diff\n--- Makefile\n+++ Makefile\n@@ -14,7 +14,7 @@\n \n INC_FLAGS = -I$(MULTIVERSO_INC)\n LD_FLAGS  = -L$(MULTIVERSO_LIB) -lmultiverso\n-LD_FLAGS += -L$(THIRD_PARTY_LIB) -lzmq -lmpich -lmpl\n+LD_FLAGS += -L$(THIRD_PARTY_LIB) -Wl,-Bstatic -lzmq -lmpich -lmpl dw\n LD_FLAGS += -lpthread\n   \t  \t\n WORD_EMBEDDING_HEADERS = $(shell find $(PROJECT)/src -type f -name \"*.h\")\n```\n\n\u30d3\u30eb\u30c9\u3057\u307e\u3059\u3002\n\n```\n$ make\n```\n\n\u30d3\u30eb\u30c9\u304c\u7d42\u308f\u308b\u3068 bin \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306e\u4e0b\u306b\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u304c\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n", "tags": ["Chainer", "TensorFlow", "DMTK"]}