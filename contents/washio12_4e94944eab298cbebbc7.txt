{"tags": ["slimphp", "Slim3"], "context": "\n\n\u6982\u8981\n\nSlim 3\u306b\u3001\u30ab\u30b9\u30bf\u30e0\u306eException\uff08BadRequestException\uff09\u3092\u8ffd\u52a0\u3059\u308b\nBadRequestException\u304cthrow\u3055\u308c\u305f\u5834\u5408\u3001HTTP Status Code 400\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3059 \nController\u7b49\u3067Validation\u304cNG\u306e\u5834\u5408\u3001throw BadRequestException('\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u4e0d\u6b63\u3067\u3059');\u3060\u3051\u3059\u308c\u3070OK\u306b\n\n\n\u524d\u7f6e\u304d\n\n\u8ffd\u52a0\u3059\u308b\u524d\u306bSlim\u304c\u3069\u306e\u3088\u3046\u306bException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u308b\n\n\n\u3069\u3053\u3067Exception\u304ccatch\u3055\u308c\u308b\u304b\n\nController\u306a\u3069\u306e\u5185\u90e8\u3067try cache\u304c\u306a\u3051\u308c\u3070\u3001Slim\\App\u30af\u30e9\u30b9\u306eprocess\u30e1\u30bd\u30c3\u30c9\u3067cacht\u3055\u308c\u308b\nhandleException\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\n\n\nvender/slim/Slim/App.php\npublic function process(ServerRequestInterface $request, ResponseInterface $response)\n{\n    // \uff5e\u7701\u7565\uff5e\n    // Traverse middleware stack\n    try {\n        $response = $this->callMiddlewareStack($request, $response);\n    } catch (Exception $e) {\n        $response = $this->handleException($e, $request, $response); // \u2190\u30b3\u30b3\n    } catch (Throwable $e) {\n        $response = $this->handlePhpError($e, $request, $response);\n    }\n\n    $response = $this->finalize($response);\n\n    return $response;\n}\n\n\n\nhandleException\u30e1\u30bd\u30c3\u30c9\u306f\u3001Exception\u306einstance\u6bce\u306b\u5bfe\u5fdc\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bHandler\u3092\u547c\u3076\nNotAllowed\u3001NotFound\u3001SlimException\u4ee5\u5916\u306eException\u304cthrow\u3055\u308c\u305f\u5834\u5408\u3001errorHandler\u3068\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bHandler\u304c\u547c\u3070\u308c\u308b\n\u30b3\u30f3\u30c6\u30ca\u306eerrorHandler\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067Slim\\Handlers\\Error\u30af\u30e9\u30b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\n\n\nvender/slim/Slim/App.php\nprotected function handleException(Exception $e, ServerRequestInterface $request, ResponseInterface $response)\n{\n    if ($e instanceof MethodNotAllowedException) {\n        $handler = 'notAllowedHandler';\n        $params = [$e->getRequest(), $e->getResponse(), $e->getAllowedMethods()];\n    } elseif ($e instanceof NotFoundException) {\n        $handler = 'notFoundHandler';\n        $params = [$e->getRequest(), $e->getResponse()];\n    } elseif ($e instanceof SlimException) {\n        // This is a Stop exception and contains the response\n        return $e->getResponse();\n    } else {\n        // Other exception, use $request and $response params\n        $handler = 'errorHandler';\n        $params = [$request, $response, $e];\n    }\n\n    if ($this->container->has($handler)) {\n        $callable = $this->container->get($handler);\n        // Call the registered handler\n        return call_user_func_array($callable, $params); // \u2190\u3053\u3053\u3067\u30b3\u30f3\u30c6\u30ca\u306ehandler\u304c\u547c\u3070\u308c\u308b\n    }\n\n    // No handlers found, so just throw the exception\n    throw $e;\n}\n\n\n\n\u306a\u306e\u3067\u3001BadRequestException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308bHandler\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u306eerrorHandler\u306b\u4e0a\u66f8\u304d\u767b\u9332\u3057\u3066\u304a\u3051\u3070\u3088\u3044\n\n\n\u5b9f\u88c5\n\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u672c\u984c\u306b\u5165\u308b\nBadRequestException\u30af\u30e9\u30b9\u3068errorHandler\u306b\u767b\u9332\u3059\u308bHandler\u3092\u4f5c\u6210\u3059\u308b\n\nBadRequestException\u306e\u4f5c\u6210\n\nException\u3092\u7d99\u627f\u3059\u308b\u3060\u3051\u3002\u4eca\u56de\u306f\u7279\u306b\u7279\u5225\u306a\u51e6\u7406\u306f\u884c\u308f\u306a\u3044\n\n\napp/exception/BadRequestException.php\n<?php\nnamespace App\\Exception;\n\nuse Exception;\n\nclass BadRequestException extends Exception\n{\n}\n\n\n\nHandler\u306e\u4f5c\u6210\n\nSlim\\Handlers\\Error\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3067\u3001BadRequest\u4ee5\u5916\u306e\u51e6\u7406\u306f Slim\\Handlers\\Error\u3067\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n\napp/handler/error.php\n<?php\nnamespace App\\Handler;\n\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse App\\Exception\\BadRequestException;\n\nfinal class Error extends \\Slim\\Handlers\\Error\n{\n    public function __construct($displayErrorDetails)\n    {\n        // \u30a8\u30e9\u30fc\u306e\u8a73\u7d30\u8868\u793a\u306e\u6709\u7121\u8a2d\u5b9a(Slim\\Handlers\\Error\u3067\u5fc5\u9808)\n        parent::__construct($displayErrorDetails);\n    }\n\n    public function __invoke(Request $request, Response $response, \\Exception $e)\n    {\n        if ($e instanceof BadRequestException)\n        {\n            // Json\u3067\u8fd4\u3059\n            $response = $response\n                ->withStatus(400)\n                ->withHeader('Content-type', 'application/json')\n                ->withJson(['message' => $e->getMessage()]);\n        } else {\n            // BadRequest\u4ee5\u5916\u306eException\u306fSlim\\Handlers\\Error\u3078\n            $response = parent::__invoke($request, $response, $e);\n        }\n        return $response;\n    }\n}\n\n\n\n\u30b3\u30f3\u30c6\u30ca\u306bHandler\u3092\u767b\u9332\n\ndependencies.php\u306b\u3066\u3001errorHandler\u306bError\u30af\u30e9\u30b9\u3092\u4e0a\u66f8\u304d\u767b\u9332\n\n\ndependencies.php\n// \u2193\u3092\u8ffd\u52a0\n$container['errorHandler'] = function ($c) {\n    return new App\\Handler\\Error($c->get('settings')['displayErrorDetails']);\n};\n\n\n\u4ee5\u4e0a\u3067\u3001throw BadRequestException($error_message);\u3092\u3059\u308c\u3070\u3001HTTP Status Code 400\u306eResponse\u304c\u8fd4\u308b\u306f\u305a\u3002\n# \u6982\u8981\n* Slim 3\u306b\u3001\u30ab\u30b9\u30bf\u30e0\u306eException\uff08BadRequestException\uff09\u3092\u8ffd\u52a0\u3059\u308b\n* BadRequestException\u304cthrow\u3055\u308c\u305f\u5834\u5408\u3001HTTP Status Code 400\u3068\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8fd4\u3059 \n* Controller\u7b49\u3067Validation\u304cNG\u306e\u5834\u5408\u3001`throw BadRequestException('\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u4e0d\u6b63\u3067\u3059');`\u3060\u3051\u3059\u308c\u3070OK\u306b\n\n# \u524d\u7f6e\u304d\n* \u8ffd\u52a0\u3059\u308b\u524d\u306bSlim\u304c\u3069\u306e\u3088\u3046\u306bException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u304b\u898b\u3066\u307f\u308b\n\n## \u3069\u3053\u3067Exception\u304ccatch\u3055\u308c\u308b\u304b\n* Controller\u306a\u3069\u306e\u5185\u90e8\u3067`try cache`\u304c\u306a\u3051\u308c\u3070\u3001Slim\\App\u30af\u30e9\u30b9\u306eprocess\u30e1\u30bd\u30c3\u30c9\u3067cacht\u3055\u308c\u308b\n* handleException\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\n\n```php:vender/slim/Slim/App.php\npublic function process(ServerRequestInterface $request, ResponseInterface $response)\n{\n    // \uff5e\u7701\u7565\uff5e\n    // Traverse middleware stack\n    try {\n        $response = $this->callMiddlewareStack($request, $response);\n    } catch (Exception $e) {\n        $response = $this->handleException($e, $request, $response); // \u2190\u30b3\u30b3\n    } catch (Throwable $e) {\n        $response = $this->handlePhpError($e, $request, $response);\n    }\n\n    $response = $this->finalize($response);\n\n    return $response;\n}\n```\n\n* handleException\u30e1\u30bd\u30c3\u30c9\u306f\u3001Exception\u306einstance\u6bce\u306b\u5bfe\u5fdc\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bHandler\u3092\u547c\u3076\n* NotAllowed\u3001NotFound\u3001SlimException\u4ee5\u5916\u306eException\u304cthrow\u3055\u308c\u305f\u5834\u5408\u3001`errorHandler`\u3068\u3057\u3066\u30b3\u30f3\u30c6\u30ca\u306b\u767b\u9332\u3055\u308c\u3066\u3044\u308bHandler\u304c\u547c\u3070\u308c\u308b\n* \u30b3\u30f3\u30c6\u30ca\u306e`errorHandler`\u306b\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067Slim\\Handlers\\Error\u30af\u30e9\u30b9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\n\n```php:vender/slim/Slim/App.php\nprotected function handleException(Exception $e, ServerRequestInterface $request, ResponseInterface $response)\n{\n    if ($e instanceof MethodNotAllowedException) {\n        $handler = 'notAllowedHandler';\n        $params = [$e->getRequest(), $e->getResponse(), $e->getAllowedMethods()];\n    } elseif ($e instanceof NotFoundException) {\n        $handler = 'notFoundHandler';\n        $params = [$e->getRequest(), $e->getResponse()];\n    } elseif ($e instanceof SlimException) {\n        // This is a Stop exception and contains the response\n        return $e->getResponse();\n    } else {\n        // Other exception, use $request and $response params\n        $handler = 'errorHandler';\n        $params = [$request, $response, $e];\n    }\n\n    if ($this->container->has($handler)) {\n        $callable = $this->container->get($handler);\n        // Call the registered handler\n        return call_user_func_array($callable, $params); // \u2190\u3053\u3053\u3067\u30b3\u30f3\u30c6\u30ca\u306ehandler\u304c\u547c\u3070\u308c\u308b\n    }\n\n    // No handlers found, so just throw the exception\n    throw $e;\n}\n```\n* \u306a\u306e\u3067\u3001BadRequestException\u3092\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3059\u308bHandler\u3092\u4f5c\u6210\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u306e`errorHandler`\u306b\u4e0a\u66f8\u304d\u767b\u9332\u3057\u3066\u304a\u3051\u3070\u3088\u3044\n\n# \u5b9f\u88c5\n\u524d\u7f6e\u304d\u304c\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u304c\u3001\u672c\u984c\u306b\u5165\u308b\nBadRequestException\u30af\u30e9\u30b9\u3068`errorHandler`\u306b\u767b\u9332\u3059\u308bHandler\u3092\u4f5c\u6210\u3059\u308b\n\n## BadRequestException\u306e\u4f5c\u6210\n* Exception\u3092\u7d99\u627f\u3059\u308b\u3060\u3051\u3002\u4eca\u56de\u306f\u7279\u306b\u7279\u5225\u306a\u51e6\u7406\u306f\u884c\u308f\u306a\u3044\n\n```php:app/exception/BadRequestException.php\n<?php\nnamespace App\\Exception;\n\nuse Exception;\n\nclass BadRequestException extends Exception\n{\n}\n```\n\n## Handler\u306e\u4f5c\u6210\n* Slim\\Handlers\\Error\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3059\u308b\u3053\u3068\u3067\u3001BadRequest\u4ee5\u5916\u306e\u51e6\u7406\u306f Slim\\Handlers\\Error\u3067\u51e6\u7406\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n```php:app/handler/error.php\n<?php\nnamespace App\\Handler;\n\nuse Psr\\Http\\Message\\ServerRequestInterface as Request;\nuse Psr\\Http\\Message\\ResponseInterface as Response;\nuse App\\Exception\\BadRequestException;\n\nfinal class Error extends \\Slim\\Handlers\\Error\n{\n    public function __construct($displayErrorDetails)\n    {\n        // \u30a8\u30e9\u30fc\u306e\u8a73\u7d30\u8868\u793a\u306e\u6709\u7121\u8a2d\u5b9a(Slim\\Handlers\\Error\u3067\u5fc5\u9808)\n        parent::__construct($displayErrorDetails);\n    }\n \n    public function __invoke(Request $request, Response $response, \\Exception $e)\n    {\n        if ($e instanceof BadRequestException)\n        {\n            // Json\u3067\u8fd4\u3059\n            $response = $response\n                ->withStatus(400)\n                ->withHeader('Content-type', 'application/json')\n                ->withJson(['message' => $e->getMessage()]);\n        } else {\n            // BadRequest\u4ee5\u5916\u306eException\u306fSlim\\Handlers\\Error\u3078\n            $response = parent::__invoke($request, $response, $e);\n        }\n        return $response;\n    }\n}\n```\n\n## \u30b3\u30f3\u30c6\u30ca\u306bHandler\u3092\u767b\u9332\n* dependencies.php\u306b\u3066\u3001`errorHandler`\u306bError\u30af\u30e9\u30b9\u3092\u4e0a\u66f8\u304d\u767b\u9332\n\n```php:dependencies.php\n// \u2193\u3092\u8ffd\u52a0\n$container['errorHandler'] = function ($c) {\n    return new App\\Handler\\Error($c->get('settings')['displayErrorDetails']);\n};\n```\n\u4ee5\u4e0a\u3067\u3001`throw BadRequestException($error_message);`\u3092\u3059\u308c\u3070\u3001HTTP Status Code 400\u306eResponse\u304c\u8fd4\u308b\u306f\u305a\u3002\n"}