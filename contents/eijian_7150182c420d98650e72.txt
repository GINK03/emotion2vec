{"context": "\u4eca\u56de\u306f\u3001\u524d\u56de\u4f5c\u3063\u305fD Flip Flop(\u4ee5\u4e0bD-FF)\u3092\u4f7f\u3063\u3066\u30ec\u30b8\u30b9\u30bf\u3092\u4f5c\u308d\u3046\u3002\u5bfe\u8c61\u306eCPU(TD4)\u306f4 bit\u306e\u30ec\u30b8\u30b9\u30bf\u30922\u3064\u6301\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3044\u308f\u3051\u3060\u3002\n\n1 bit\u30ec\u30b8\u30b9\u30bf\n\u6700\u521d\u304b\u3089\u8907\u96d1\u306a\u3082\u306e\u3092\u4f5c\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001\u307e\u305a\u7c21\u5358\u306a\u3068\u3053\u308d\u304b\u30891 bit\u30ec\u30b8\u30b9\u30bf\u3092\u8003\u3048\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u4eca\u56de\u4f5c\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u57fa\u672c\u69cb\u9020\u306f\u6b21\u306e\u901a\u308a\u3002\n\n\u30ec\u30b8\u30b9\u30bf\u306f\u57fa\u672c\u7684\u306b\u5024\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u308b\u3082\u306e\u3060\u3002\u3057\u304b\u3057\u524d\u56de\u4f5c\u3063\u305fD-FF\u306f\u30af\u30ed\u30c3\u30af\u306e\u7acb\u3061\u4e0a\u304c\u308a\u6642\u70b9\u306e\u5165\u529b\u5024\u304c\u305d\u306e\u307e\u307e\u51fa\u3066\u304f\u308b\u3060\u3051\u3060\u3002\u3060\u304b\u3089D-FF\u306e\u51fa\u529b\u3092\u3050\u308b\u308a\u3068\u56de\u3057\u3066\u304d\u3066\u5165\u529b\u306b\u623b\u3057\u3066\u3084\u308b\u3002\u305d\u3046\u3059\u308c\u3070\u3001\u30af\u30ed\u30c3\u30af\u304c\u5165\u308b\u305f\u3073\u306b\u51fa\u3066\u304d\u305f\u3082\u306e\u3092\u307e\u305f\u5165\u529b\u3059\u308b\u306e\u3067\u540c\u3058\u5024\u304c\u3050\u308b\u3050\u308b\u56de\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3060(\u5165\u529bA)\u3002\n\u3067\u3082\u305d\u308c\u3060\u3051\u3060\u3068\u5024\u304c\u5909\u308f\u3089\u305a\u4f55\u306e\u5f79\u306b\u3082\u7acb\u305f\u306a\u3044\u306e\u3067\u3001\u5916\u304b\u3089\u306e\u5165\u529b\u5024(\u5165\u529bB)\u3082\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u305d\u306e\u5024\u3068\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u306e\u3069\u3061\u3089\u3092\u65b0\u3057\u3044\u5024\u3068\u3059\u308b\u304b\u3092\u30b9\u30a4\u30c3\u30c1\u3067\u5207\u308a\u66ff\u3048\u308b\u306e\u3060\u3002\u30b9\u30a4\u30c3\u30c1\u306b\u306f\u3001\u4ee5\u524d\u4f5c\u3063\u305fMultiplexer\u304c\u4f7f\u3048\u308b\u3002\n\u306a\u304a\u3001\u524d\u56de\u306eD-FF\u306f\u51fa\u529b\u5024\u3092\u5f37\u5236\u7684\u306bHI\u306b\u30bb\u30c3\u30c8\u3059\u308bPR\u5165\u529b\u3068\u53cd\u8ee2\u3057\u305f\u51fa\u529b\u00afQ\\overline{Q}\u3092\u6301\u3063\u3066\u3044\u308b\u304c\u3001\u4f7f\u308f\u306a\u3044\u306e\u3067\u5272\u611b\u3059\u308b\uff08PR\u306b\u306f\u5e38\u306bHI(\u7121\u52b9)\u3092\u5165\u529b\u3001\u51fa\u529b\u306fQQ\u3060\u3051\u53d6\u308a\u51fa\u3059\uff09\u3002\u65e9\u901f\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u3088\u3046\u3002\n-- c: !CLR\n-- l: !LD (LO -> select a, HI -> select b)\n-- a,b: input value (A and B)\n\nlc_register1 :: LogicCircuit\nlc_register1 (c:l:a:b:_) = take 1 $ lc_dff_cp ([c, sHI] ++ d)\n  where\n    d = lc_multiplexer2ch [l, a, b]\n\n\u30ea\u30bb\u30c3\u30c8\u3057\u305f\u3044\u6642\u306fCLR\u3092LO\u306b\u3059\u308b\u3002LD\u306f\u8ca0\u8ad6\u7406\u306a\u306e\u3067HI\u306e\u3068\u304d\u306f\u5024\u3092\u4fdd\u6301(A\u3092\u63a1\u7528)\u3001LO\u3067\u5916\u304b\u3089\u306e\u5165\u529b\u5024\u3092\u30bb\u30c3\u30c8(B\u3092\u63a1\u7528)\u3060\u3002\u524d\u56de\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u5024\u3092\u5185\u90e8\u7684\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u306f\u305b\u305a\u3001\u56de\u8def\u306e\u5916\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u306a\u306e\u3067\u4fdd\u6301\u3057\u305f\u3044\u5024(\u4e0a\u8a18\u3067\u306fA)\u3092\u6bce\u56de\u5165\u529b\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3060\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n>>> lc_register1 [sLO, sLO, sHI, sHI] == [sLO]  -- clear\nTrue\n>>> lc_register1 [sHI, sHI, sHI, sLO] == [sHI]  -- select A\nTrue\n>>> lc_register1 [sHI, sHI, sLO, sHI] == [sLO]  -- select A\nTrue\n>>> lc_register1 [sHI, sLO, sHI, sLO] == [sLO]  -- select B\nTrue\n>>> lc_register1 [sHI, sLO, sLO, sHI] == [sHI]  -- select B\nTrue\n\n\n4 bit\u30ec\u30b8\u30b9\u30bf\n1 bit\u30ec\u30b8\u30b9\u30bf\u304c\u3067\u304d\u308c\u30704 bit\u3082\u7c21\u5358\u3060\u30024\u3064\u4e26\u3079\u308c\u3070\u3088\u3044\u3002\u305f\u3060\u3057\u3001CLR\u3068LD\u306f4\u3064\u306e1 bit\u30ec\u30b8\u30b9\u30bf\u3067\u5171\u901a\u306b\u4f7f\u3046\u3002\u65e9\u901f\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u3088\u3046\u3002\nlc_register4 :: LogicCircuit\nlc_register4 (c:l:ds)\n  where\n    a = take 4 ds\n    b = take 4 $ drop 4 ds\n    procReg1 :: Bin -> Bin -> (Bin, Bin) -> [Bin]\n    procReg1 c l (a, b) = lc_register1 [c, l, a, b]\n\n\u5165\u529b\u30c7\u30fc\u30bf\u90e8\u5206(ds)\u304b\u3089\u30014 bit\u305a\u30642\u3064\u306e\u5024A,B\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u308b\u3002A,B\u306e\u30ea\u30b9\u30c8\u304b\u3089\u540c\u3058\u6841\u306e\u8981\u7d20\u3092\u7d44\u307f\u306b\u3057\u3066\u5148\u306e1 bit\u30ec\u30b8\u30b9\u30bf\u306b\u5165\u308c\u3066\u3044\u308b\u3060\u3051\u3060\u3002\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3060\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u3082\u3057\u3066\u307f\u305f\u3002\u5927\u4e08\u592b\u305d\u3046\u3002\n>>> let d0 = toBits \"0000\"\n>>> let d1 = toBits \"1111\"\n>>> let d2 = toBits \"0101\"\n>>> let d3 = toBits \"0011\"\n>>> lc_register4 ([sLO, sLO] ++ d1 ++ d2) == d0  -- when CLR = ON\nTrue\n>>> lc_register4 ([sLO, sHI] ++ d1 ++ d2) == d0  -- when CLR = ON\nTrue\n>>> lc_register4 ([sHI, sHI] ++ d1 ++ d2) == d1  -- when LD = OFF\nTrue\n>>> lc_register4 ([sHI, sLO] ++ d1 ++ d2) == d2  -- when LD = ON\nTrue\n\nCLR\u3092LO\u306b\u3059\u308c\u3070\u30ec\u30b8\u30b9\u30bf\u306f\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3067\u5165\u529b\u306b\u3088\u3089\u305a\u51fa\u529b\u306f\"0000\"\u3002HI\u306b\u3059\u308c\u3070LD\u306eOFF/ON\u306b\u3088\u3063\u3066\u3001\u73fe\u5728\u5024A\u304b\u65b0\u898f\u5165\u529b\u5024B\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u3002D-FF\u3055\u3048\u7528\u610f\u3057\u3066\u3042\u308c\u3070\u3001\u306a\u3093\u3068\u3082\u3042\u3063\u3051\u306a\u3044\u3082\u306e\u3060 :-)\n\nn bit\u30ec\u30b8\u30b9\u30bf\n\u3055\u3066\u3001\u5148\u306e4 bit\u30ec\u30b8\u30b9\u30bf\u306e\u30b3\u30fc\u30c9\u3092\u3042\u3089\u305f\u3081\u3066\u898b\u3066\u307f\u308b\u3068'4'\u304c\u6563\u898b\u3055\u308c\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u30de\u30b8\u30c3\u30af\u30ca\u30f3\u30d0\u30fc\u306f\u3044\u305f\u3060\u3051\u306a\u3044\u3002\u5b9a\u6570\u306b\u3057\u3066\u307e\u3068\u3081\u305f\u3089\u3069\u3046\u304b?\u3044\u3084\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u5225\u306b4\u306b\u9650\u5b9a\u3059\u308b\u5fc5\u8981\u3059\u3089\u306a\u3055\u305d\u3046\u3060\u3002\u306a\u3089\u3070\u30d3\u30c3\u30c8\u6570\u3092\u5f15\u6570\u3067\u4e0e\u3048\u3066\u3084\u308c\u3070\u6c4e\u7528\u7684\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b?\nlc_register :: Int -> LogicCircuit\nlc_register w (c:l:ds) = concat $ map (procReg1 c l) $ zip a b\n  where\n    a = take w ds\n    b = take w $ drop w ds\n    procReg1 :: Bin -> Bin -> (Bin, Bin) -> [Bin]\n    procReg1 c l (a, b) = lc_register1 [c, l, a, b]\n\n\u3053\u308c\u306a\u30894 bit\u3068\u8a00\u308f\u305a\u30018 bit\u3067\u308264 bit\u3067\u3082\u884c\u3051\u305d\u3046\u3060! \u4eca\u56de\u306f\u4f7f\u3044\u9053\u304c\u306a\u3044\u304c\u2026\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u5148\u306elc_register4\u3092\u7f6e\u304d\u63db\u3048\u3088\u3046(\u90e8\u5206\u9069\u7528\u3060\u306a\uff09\u3002\nlc_register4 :: LogicCircuit\nlc_register4 = lc_register 4\n\n\u3055\u3063\u304d\u3068\u540c\u3058\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3001\u30a8\u30e9\u30fc\u304c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\u3068\u3053\u308d\u3067\u5f15\u6570\u306ew\u306f\u30d3\u30c3\u30c8\u6570\u3092\u8868\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u3057\u306a\u304f\u3066\u3044\u3044\u306e\u3060\u308d\u3046\u304b? \u3053\u308c\u307e\u3067\u306f\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u76ee\u3092\u3064\u3080\u3063\u3066\u3044\u305f\u304c\u3001\u3084\u306f\u308a\u5165\u529b\u5024\u30c1\u30a7\u30c3\u30af\u306f\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u3060\u308d\u3046\u306a\u3068\u601d\u3046\u3002\u3055\u3066w\u306e\u6761\u4ef6\u306f\u4f55\u3060\u308d\u3046? \u30d3\u30c3\u30c8\u6570\u3060\u304b\u30891\u4ee5\u4e0a? \u3067\u3082\u5185\u90e8\u30671 bit\u30ec\u30b8\u30b9\u30bf\u3092\u547c\u3093\u3067\u3044\u308b\u304b\u30892\u4ee5\u4e0a\u3067\u306a\u3044\u3068\u610f\u5473\u304c\u306a\u3044?\n1\u3060\u3068\u7121\u99c4\u306f\u3042\u308b\u304c\u3001\u7d50\u679c\u306f\u6b63\u3057\u3044\u306e\u3067\u8a31\u5bb9\u3067\u304d\u308b\u30020\u3060\u3068\u7d50\u679c\u306f0\u500b=\u7a7a\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u306f\u3053\u308c\u3067\u3042\u308a\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u601d\u3044\u59cb\u3081\u305f\u3002\u3055\u3059\u304c\u306b\u8ca0\u306e\u30d3\u30c3\u30c8\u6570\u306f\u306a\u3044\u306e\u3067\u3001w\u306f0\u4ee5\u4e0a\u306b\u3057\u3088\u3046\u3002\u3068\u306a\u308b\u3068\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u3082\u6c17\u306b\u306a\u308b\u3002\u73fe\u72b6\u5024\u3068\u65b0\u898f\u5165\u529b\u5024\u304c\u5fc5\u8981\u306a\u306e\u3067\u30d3\u30c3\u30c8\u6570 \u00d7 2\u3060\u3002\u3053\u308c\u3089\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306a\u3089\u3069\u3046\u3059\u308b\u304b? Haskell\u306a\u3089Maybe\u578b\u3067\u8fd4\u3059\u306e\u304c\u771f\u3063\u5f53\u306a\u6c17\u304c\u3059\u308b\u3002\u304c\u3001\u3042\u3068\u3042\u3068\u5927\u5909\u306a\u4e88\u611f\u304c\u3059\u308b\u306e\u3067\u3001\u3078\u306a\u3061\u3087\u3053\u306a\u304c\u3089\u3068\u308a\u3042\u3048\u305a\u4eca\u306e\u6240\u306ferror\u3067\u9003\u3052\u308b\u3053\u3068\u306b\u3059\u308b\u3002\nlc_register w (c:l:ds)\n  | w < 0       = error (\"bit width is invalid (\" ++ show w ++ \")\")\n  | len < w * 2 = error (\"no enough input (\" ++ show len ++ \")\")\n  | otherwise   = concat $ map (procReg1 c l) $ zip a b\n  where\n    len = length ds\n      :\n\n\u3053\u308c\u3067\u3001\u5165\u529b\u5024\u304c\u307e\u3068\u3082\u3067\u306a\u3051\u308c\u3070\u51e6\u7406\u304c\u300c\u6b62\u307e\u308b\u300d\u3002\u307e\u3042\u30b7\u30b9\u30c6\u30e0\u304cPANIC\u3092\u8d77\u3053\u3057\u305f\u3068\u8003\u3048\u308c\u3070\u3044\u3044\u304b\u3002\n\n\u307e\u3068\u3081\n\u524d\u56de\u306eD-FF\u3092\u7528\u3044\u3066\u30ec\u30b8\u30b9\u30bf\u304c\u6e96\u5099\u3067\u304d\u305f\u3002\u300c\u72b6\u614b\u300d\u306f\u5225\u9014\u7ba1\u7406\u3057\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u306e\u3067\u5b8c\u74a7\u3068\u306f\u8a00\u3048\u306a\u3044\u304c\u3001\u307e\u3042\u3088\u3057\u3068\u3057\u3088\u3046\u3002\n\u6b21\u306f\u4f55\u306b\u3059\u308b\u304b? \u52a0\u7b97\u5668\u3042\u305f\u308a\u304b\u306a?\n(\u3053\u3053\u307e\u3067\u306e\u30bd\u30fc\u30b9\u306f\u3053\u3061\u3089)\n\u203b\u3000\u6700\u65b0\u306e\u30bd\u30fc\u30b9\u306f\u57f7\u7b46\u6642\u70b9\u304b\u3089\u3060\u3044\u3076\u5909\u66f4\u3057\u3066\u3044\u308b\u3002\n\u4eca\u56de\u306f\u3001\u524d\u56de\u4f5c\u3063\u305fD Flip Flop(\u4ee5\u4e0bD-FF)\u3092\u4f7f\u3063\u3066\u30ec\u30b8\u30b9\u30bf\u3092\u4f5c\u308d\u3046\u3002\u5bfe\u8c61\u306eCPU(TD4)\u306f4 bit\u306e\u30ec\u30b8\u30b9\u30bf\u30922\u3064\u6301\u3063\u3066\u3044\u308b\u3002\u3053\u308c\u3092\u5b9f\u88c5\u3057\u305f\u3044\u308f\u3051\u3060\u3002\n\n## 1 bit\u30ec\u30b8\u30b9\u30bf\n\n\u6700\u521d\u304b\u3089\u8907\u96d1\u306a\u3082\u306e\u3092\u4f5c\u308b\u306e\u306f\u5927\u5909\u306a\u306e\u3067\u3001\u307e\u305a\u7c21\u5358\u306a\u3068\u3053\u308d\u304b\u30891 bit\u30ec\u30b8\u30b9\u30bf\u3092\u8003\u3048\u308b\u3053\u3068\u306b\u3059\u308b\u3002\u4eca\u56de\u4f5c\u308b\u30ec\u30b8\u30b9\u30bf\u306e\u57fa\u672c\u69cb\u9020\u306f\u6b21\u306e\u901a\u308a\u3002\n\n![reg1bit.png](https://qiita-image-store.s3.amazonaws.com/0/69542/7277b98d-1ed1-eed9-cd6f-4fd489ca09fe.png)\n\n\u30ec\u30b8\u30b9\u30bf\u306f\u57fa\u672c\u7684\u306b\u5024\u3092\u4fdd\u6301\u3057\u7d9a\u3051\u308b\u3082\u306e\u3060\u3002\u3057\u304b\u3057\u524d\u56de\u4f5c\u3063\u305fD-FF\u306f\u30af\u30ed\u30c3\u30af\u306e\u7acb\u3061\u4e0a\u304c\u308a\u6642\u70b9\u306e\u5165\u529b\u5024\u304c\u305d\u306e\u307e\u307e\u51fa\u3066\u304f\u308b\u3060\u3051\u3060\u3002\u3060\u304b\u3089D-FF\u306e\u51fa\u529b\u3092\u3050\u308b\u308a\u3068\u56de\u3057\u3066\u304d\u3066\u5165\u529b\u306b\u623b\u3057\u3066\u3084\u308b\u3002\u305d\u3046\u3059\u308c\u3070\u3001\u30af\u30ed\u30c3\u30af\u304c\u5165\u308b\u305f\u3073\u306b\u51fa\u3066\u304d\u305f\u3082\u306e\u3092\u307e\u305f\u5165\u529b\u3059\u308b\u306e\u3067\u540c\u3058\u5024\u304c\u3050\u308b\u3050\u308b\u56de\u308b\u3001\u3068\u3044\u3046\u308f\u3051\u3060(\u5165\u529bA)\u3002\n\n\u3067\u3082\u305d\u308c\u3060\u3051\u3060\u3068\u5024\u304c\u5909\u308f\u3089\u305a\u4f55\u306e\u5f79\u306b\u3082\u7acb\u305f\u306a\u3044\u306e\u3067\u3001\u5916\u304b\u3089\u306e\u5165\u529b\u5024(\u5165\u529bB)\u3082\u53d7\u3051\u5165\u308c\u3089\u308c\u308b\u3088\u3046\u306b\u3059\u308b\u3002\u305d\u306e\u5024\u3068\u4fdd\u6301\u3057\u3066\u3044\u308b\u5024\u306e\u3069\u3061\u3089\u3092\u65b0\u3057\u3044\u5024\u3068\u3059\u308b\u304b\u3092\u30b9\u30a4\u30c3\u30c1\u3067\u5207\u308a\u66ff\u3048\u308b\u306e\u3060\u3002\u30b9\u30a4\u30c3\u30c1\u306b\u306f\u3001\u4ee5\u524d\u4f5c\u3063\u305fMultiplexer\u304c\u4f7f\u3048\u308b\u3002\n\n\u306a\u304a\u3001\u524d\u56de\u306eD-FF\u306f\u51fa\u529b\u5024\u3092\u5f37\u5236\u7684\u306bHI\u306b\u30bb\u30c3\u30c8\u3059\u308bPR\u5165\u529b\u3068\u53cd\u8ee2\u3057\u305f\u51fa\u529b$\\overline{Q}$\u3092\u6301\u3063\u3066\u3044\u308b\u304c\u3001\u4f7f\u308f\u306a\u3044\u306e\u3067\u5272\u611b\u3059\u308b\uff08PR\u306b\u306f\u5e38\u306bHI(\u7121\u52b9)\u3092\u5165\u529b\u3001\u51fa\u529b\u306f$Q$\u3060\u3051\u53d6\u308a\u51fa\u3059\uff09\u3002\u65e9\u901f\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u3088\u3046\u3002\n\n```haskell\n-- c: !CLR\n-- l: !LD (LO -> select a, HI -> select b)\n-- a,b: input value (A and B)\n\nlc_register1 :: LogicCircuit\nlc_register1 (c:l:a:b:_) = take 1 $ lc_dff_cp ([c, sHI] ++ d)\n  where\n    d = lc_multiplexer2ch [l, a, b]\n```\n\n\u30ea\u30bb\u30c3\u30c8\u3057\u305f\u3044\u6642\u306fCLR\u3092LO\u306b\u3059\u308b\u3002LD\u306f\u8ca0\u8ad6\u7406\u306a\u306e\u3067HI\u306e\u3068\u304d\u306f\u5024\u3092\u4fdd\u6301(A\u3092\u63a1\u7528)\u3001LO\u3067\u5916\u304b\u3089\u306e\u5165\u529b\u5024\u3092\u30bb\u30c3\u30c8(B\u3092\u63a1\u7528)\u3060\u3002\u524d\u56de\u66f8\u3044\u305f\u3088\u3046\u306b\u3001\u5024\u3092\u5185\u90e8\u7684\u306b\u4fdd\u6301\u3059\u308b\u3053\u3068\u306f\u305b\u305a\u3001\u56de\u8def\u306e\u5916\u3067\u7ba1\u7406\u3059\u308b\u3053\u3068\u306b\u3057\u305f\u3002\u306a\u306e\u3067\u4fdd\u6301\u3057\u305f\u3044\u5024(\u4e0a\u8a18\u3067\u306fA)\u3092\u6bce\u56de\u5165\u529b\u3057\u3066\u3084\u308b\u5fc5\u8981\u304c\u3042\u308b\u306e\u3060\u3002\n\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3002\n\n```haskell\n>>> lc_register1 [sLO, sLO, sHI, sHI] == [sLO]  -- clear\nTrue\n>>> lc_register1 [sHI, sHI, sHI, sLO] == [sHI]  -- select A\nTrue\n>>> lc_register1 [sHI, sHI, sLO, sHI] == [sLO]  -- select A\nTrue\n>>> lc_register1 [sHI, sLO, sHI, sLO] == [sLO]  -- select B\nTrue\n>>> lc_register1 [sHI, sLO, sLO, sHI] == [sHI]  -- select B\nTrue\n```\n\n## 4 bit\u30ec\u30b8\u30b9\u30bf\n\n1 bit\u30ec\u30b8\u30b9\u30bf\u304c\u3067\u304d\u308c\u30704 bit\u3082\u7c21\u5358\u3060\u30024\u3064\u4e26\u3079\u308c\u3070\u3088\u3044\u3002\u305f\u3060\u3057\u3001CLR\u3068LD\u306f4\u3064\u306e1 bit\u30ec\u30b8\u30b9\u30bf\u3067\u5171\u901a\u306b\u4f7f\u3046\u3002\u65e9\u901f\u30b3\u30fc\u30c9\u306b\u3057\u3066\u307f\u3088\u3046\u3002\n\n```haskell\nlc_register4 :: LogicCircuit\nlc_register4 (c:l:ds)\n  where\n    a = take 4 ds\n    b = take 4 $ drop 4 ds\n    procReg1 :: Bin -> Bin -> (Bin, Bin) -> [Bin]\n    procReg1 c l (a, b) = lc_register1 [c, l, a, b]\n```\n\n\u5165\u529b\u30c7\u30fc\u30bf\u90e8\u5206(`ds`)\u304b\u3089\u30014 bit\u305a\u30642\u3064\u306e\u5024A,B\u3092\u53d6\u308a\u51fa\u3057\u3066\u3044\u308b\u3002A,B\u306e\u30ea\u30b9\u30c8\u304b\u3089\u540c\u3058\u6841\u306e\u8981\u7d20\u3092\u7d44\u307f\u306b\u3057\u3066\u5148\u306e1 bit\u30ec\u30b8\u30b9\u30bf\u306b\u5165\u308c\u3066\u3044\u308b\u3060\u3051\u3060\u3002\u3068\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u3060\u3002\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u7c21\u5358\u306a\u30c6\u30b9\u30c8\u3082\u3057\u3066\u307f\u305f\u3002\u5927\u4e08\u592b\u305d\u3046\u3002\n\n```haskell\n>>> let d0 = toBits \"0000\"\n>>> let d1 = toBits \"1111\"\n>>> let d2 = toBits \"0101\"\n>>> let d3 = toBits \"0011\"\n>>> lc_register4 ([sLO, sLO] ++ d1 ++ d2) == d0  -- when CLR = ON\nTrue\n>>> lc_register4 ([sLO, sHI] ++ d1 ++ d2) == d0  -- when CLR = ON\nTrue\n>>> lc_register4 ([sHI, sHI] ++ d1 ++ d2) == d1  -- when LD = OFF\nTrue\n>>> lc_register4 ([sHI, sLO] ++ d1 ++ d2) == d2  -- when LD = ON\nTrue\n```\n\nCLR\u3092LO\u306b\u3059\u308c\u3070\u30ec\u30b8\u30b9\u30bf\u306f\u30ea\u30bb\u30c3\u30c8\u3055\u308c\u308b\u306e\u3067\u5165\u529b\u306b\u3088\u3089\u305a\u51fa\u529b\u306f\"0000\"\u3002HI\u306b\u3059\u308c\u3070LD\u306eOFF/ON\u306b\u3088\u3063\u3066\u3001\u73fe\u5728\u5024A\u304b\u65b0\u898f\u5165\u529b\u5024B\u304c\u9078\u629e\u3055\u308c\u3066\u3044\u308b\u3002D-FF\u3055\u3048\u7528\u610f\u3057\u3066\u3042\u308c\u3070\u3001\u306a\u3093\u3068\u3082\u3042\u3063\u3051\u306a\u3044\u3082\u306e\u3060 :-)\n\n## n bit\u30ec\u30b8\u30b9\u30bf\n\n\u3055\u3066\u3001\u5148\u306e4 bit\u30ec\u30b8\u30b9\u30bf\u306e\u30b3\u30fc\u30c9\u3092\u3042\u3089\u305f\u3081\u3066\u898b\u3066\u307f\u308b\u3068'4'\u304c\u6563\u898b\u3055\u308c\u308b\u3002\u3053\u306e\u3088\u3046\u306a\u30de\u30b8\u30c3\u30af\u30ca\u30f3\u30d0\u30fc\u306f\u3044\u305f\u3060\u3051\u306a\u3044\u3002\u5b9a\u6570\u306b\u3057\u3066\u307e\u3068\u3081\u305f\u3089\u3069\u3046\u304b?\u3044\u3084\u3001\u3053\u306e\u30b3\u30fc\u30c9\u3067\u3042\u308c\u3070\u5225\u306b4\u306b\u9650\u5b9a\u3059\u308b\u5fc5\u8981\u3059\u3089\u306a\u3055\u305d\u3046\u3060\u3002\u306a\u3089\u3070\u30d3\u30c3\u30c8\u6570\u3092\u5f15\u6570\u3067\u4e0e\u3048\u3066\u3084\u308c\u3070\u6c4e\u7528\u7684\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u304b?\n\n```haskell\nlc_register :: Int -> LogicCircuit\nlc_register w (c:l:ds) = concat $ map (procReg1 c l) $ zip a b\n  where\n    a = take w ds\n    b = take w $ drop w ds\n    procReg1 :: Bin -> Bin -> (Bin, Bin) -> [Bin]\n    procReg1 c l (a, b) = lc_register1 [c, l, a, b]\n```\n\n\u3053\u308c\u306a\u30894 bit\u3068\u8a00\u308f\u305a\u30018 bit\u3067\u308264 bit\u3067\u3082\u884c\u3051\u305d\u3046\u3060! \u4eca\u56de\u306f\u4f7f\u3044\u9053\u304c\u306a\u3044\u304c\u2026\u3002\u3053\u308c\u3092\u4f7f\u3063\u3066\u5148\u306e`lc_register4`\u3092\u7f6e\u304d\u63db\u3048\u3088\u3046(\u90e8\u5206\u9069\u7528\u3060\u306a\uff09\u3002\n\n```haskell\nlc_register4 :: LogicCircuit\nlc_register4 = lc_register 4\n```\n\n\u3055\u3063\u304d\u3068\u540c\u3058\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3057\u3001\u30a8\u30e9\u30fc\u304c\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3002\n\n\u3068\u3053\u308d\u3067\u5f15\u6570\u306e`w`\u306f\u30d3\u30c3\u30c8\u6570\u3092\u8868\u3059\u304c\u3001\u30c1\u30a7\u30c3\u30af\u3057\u306a\u304f\u3066\u3044\u3044\u306e\u3060\u308d\u3046\u304b? \u3053\u308c\u307e\u3067\u306f\u9762\u5012\u304f\u3055\u3044\u306e\u3067\u76ee\u3092\u3064\u3080\u3063\u3066\u3044\u305f\u304c\u3001\u3084\u306f\u308a\u5165\u529b\u5024\u30c1\u30a7\u30c3\u30af\u306f\u3057\u3066\u304a\u3044\u305f\u307b\u3046\u304c\u3044\u3044\u306e\u3060\u308d\u3046\u306a\u3068\u601d\u3046\u3002\u3055\u3066`w`\u306e\u6761\u4ef6\u306f\u4f55\u3060\u308d\u3046? \u30d3\u30c3\u30c8\u6570\u3060\u304b\u30891\u4ee5\u4e0a? \u3067\u3082\u5185\u90e8\u30671 bit\u30ec\u30b8\u30b9\u30bf\u3092\u547c\u3093\u3067\u3044\u308b\u304b\u30892\u4ee5\u4e0a\u3067\u306a\u3044\u3068\u610f\u5473\u304c\u306a\u3044?\n\n1\u3060\u3068\u7121\u99c4\u306f\u3042\u308b\u304c\u3001\u7d50\u679c\u306f\u6b63\u3057\u3044\u306e\u3067\u8a31\u5bb9\u3067\u304d\u308b\u30020\u3060\u3068\u7d50\u679c\u306f0\u500b=\u7a7a\u30ea\u30b9\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u304c\u3001\u3053\u308c\u306f\u3053\u308c\u3067\u3042\u308a\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u601d\u3044\u59cb\u3081\u305f\u3002\u3055\u3059\u304c\u306b\u8ca0\u306e\u30d3\u30c3\u30c8\u6570\u306f\u306a\u3044\u306e\u3067\u3001`w`\u306f0\u4ee5\u4e0a\u306b\u3057\u3088\u3046\u3002\u3068\u306a\u308b\u3068\u5165\u529b\u30c7\u30fc\u30bf\u306e\u30b5\u30a4\u30ba\u3082\u6c17\u306b\u306a\u308b\u3002\u73fe\u72b6\u5024\u3068\u65b0\u898f\u5165\u529b\u5024\u304c\u5fc5\u8981\u306a\u306e\u3067\u30d3\u30c3\u30c8\u6570 \u00d7 2\u3060\u3002\u3053\u308c\u3089\u306e\u6761\u4ef6\u3092\u6e80\u305f\u3055\u306a\u3044\u306a\u3089\u3069\u3046\u3059\u308b\u304b? Haskell\u306a\u3089`Maybe`\u578b\u3067\u8fd4\u3059\u306e\u304c\u771f\u3063\u5f53\u306a\u6c17\u304c\u3059\u308b\u3002\u304c\u3001\u3042\u3068\u3042\u3068\u5927\u5909\u306a\u4e88\u611f\u304c\u3059\u308b\u306e\u3067\u3001\u3078\u306a\u3061\u3087\u3053\u306a\u304c\u3089\u3068\u308a\u3042\u3048\u305a\u4eca\u306e\u6240\u306f`error`\u3067\u9003\u3052\u308b\u3053\u3068\u306b\u3059\u308b\u3002\n\n```haskell\nlc_register w (c:l:ds)\n  | w < 0       = error (\"bit width is invalid (\" ++ show w ++ \")\")\n  | len < w * 2 = error (\"no enough input (\" ++ show len ++ \")\")\n  | otherwise   = concat $ map (procReg1 c l) $ zip a b\n  where\n    len = length ds\n      :\n```\n\n\u3053\u308c\u3067\u3001\u5165\u529b\u5024\u304c\u307e\u3068\u3082\u3067\u306a\u3051\u308c\u3070\u51e6\u7406\u304c\u300c\u6b62\u307e\u308b\u300d\u3002\u307e\u3042\u30b7\u30b9\u30c6\u30e0\u304cPANIC\u3092\u8d77\u3053\u3057\u305f\u3068\u8003\u3048\u308c\u3070\u3044\u3044\u304b\u3002\n\n## \u307e\u3068\u3081\n\n\u524d\u56de\u306eD-FF\u3092\u7528\u3044\u3066\u30ec\u30b8\u30b9\u30bf\u304c\u6e96\u5099\u3067\u304d\u305f\u3002\u300c\u72b6\u614b\u300d\u306f\u5225\u9014\u7ba1\u7406\u3057\u306a\u3044\u3068\u884c\u3051\u306a\u3044\u306e\u3067\u5b8c\u74a7\u3068\u306f\u8a00\u3048\u306a\u3044\u304c\u3001\u307e\u3042\u3088\u3057\u3068\u3057\u3088\u3046\u3002\n\n\u6b21\u306f\u4f55\u306b\u3059\u308b\u304b? \u52a0\u7b97\u5668\u3042\u305f\u308a\u304b\u306a?\n\n(\u3053\u3053\u307e\u3067\u306e\u30bd\u30fc\u30b9\u306f[\u3053\u3061\u3089](https://github.com/eijian/mkcpu))\n\u203b\u3000\u6700\u65b0\u306e\u30bd\u30fc\u30b9\u306f\u57f7\u7b46\u6642\u70b9\u304b\u3089\u3060\u3044\u3076\u5909\u66f4\u3057\u3066\u3044\u308b\u3002\n", "tags": ["Haskell", "CPU"]}