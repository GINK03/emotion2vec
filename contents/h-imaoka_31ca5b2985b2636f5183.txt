{"context": "\n\nElastiCache slave-promote\nMeasurement script\n#!/bin/bash\n\nwhile :\ndo\n  sleep 1\n  date\n  timeout 2 redis-cli -h <ElastiCache Primary Endpoint> set hoge h-imaoka\ndone\n\nResult\n\n\n\n#\nscore\n\n\n\n\n1\n10 sec\n\n\n2\n3 sec\n\n\n3\n10 sec\n\n\n4\n1 sec\n\n\n\nEndpoint's ttl = 15 sec, so within it.\nBut this score does not contail chancel multi-AZ ops. \n\nWhy sentinel can not elect new master?\nErase /etc/redis-sentinel.conf part auto generated.\nI pass it only sentinel.conf, it nothing to do with redis.conf .\n\nWhat will happen - sentinel -\n\nsave at Master-node\nMaybe failover happen\n\nbgsave at Master-node\nNo failover\n\nCan I use unpromoted slave (slave -> slave) as RO immediately?\nNo.\nstart A: Master, B: Slave, C: Slave\nfailover A: Failed , B: Master, C: Slave\nOf cource, you can use B as a master immediately, but C is not. When failover, C state=wait_bgsave. In wait_bgsave, we can get key-values before failover happend time. \nUntill C's state=online, can not get new key-values created after failover (write at new master B). \n\nRestart master redis-daemon with RDB\nNo failover (@600MB memory size)\nBut slave status will be wait_bgsave\n\nRestart master redis-daemon without RDB\nNo failover.\nJust all data cleanup !\n\nnutcracker\n\nperformance\nredis-raw: 9,2k\nnutcracker: 8.2k\nelb : 7.1k \n\n# ElastiCache slave-promote\nMeasurement script\n\n```bash:\n#!/bin/bash\n\nwhile :\ndo\n  sleep 1\n  date\n  timeout 2 redis-cli -h <ElastiCache Primary Endpoint> set hoge h-imaoka\ndone\n```\n__Result__\n\n|#|score|\n|---|---|\n|1|10 sec|\n|2|3 sec|\n|3|10 sec|\n|4|1 sec|\n\nEndpoint's ttl = 15 sec, so within it.\nBut this score does not contail `chancel multi-AZ ops`. \n\n# Why sentinel can not elect new master?\n\nErase `/etc/redis-sentinel.conf` part auto generated.\nI pass it only `sentinel.conf`, it nothing to do with `redis.conf` .\n\n# What will happen - sentinel -\n## `save` at Master-node\nMaybe `failover` happen\n\n## `bgsave` at Master-node\nNo failover\n\n## Can I use unpromoted slave (slave -> slave) as RO immediately?\n__No.__\n\n__start__ A: Master, B: Slave, C: Slave\n__failover__ A: Failed , B: Master, C: Slave\n\nOf cource, you can use `B` as a `master` immediately, but `C` is not. When failover, `C` `state=wait_bgsave`. In `wait_bgsave`, we can get key-values before failover happend time. \nUntill `C's state=online`, can not get new key-values created after failover (write at new master `B`). \n\n## Restart master redis-daemon with RDB\nNo `failover` (@600MB memory size)\nBut slave status will be `wait_bgsave`\n\n## Restart master redis-daemon without RDB\nNo `failover`.\nJust all data cleanup !\n\n# nutcracker\n## performance\nredis-raw: 9,2k\nnutcracker: 8.2k\nelb : 7.1k \n", "tags": ["Redis"]}