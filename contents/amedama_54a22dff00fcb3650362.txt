{"context": "\u6700\u8fd1\u306e\u753b\u50cf\u8a8d\u8b58\u306e\u5b9f\u529b\uff5eMS \u306e\u6700\u5148\u7aef\u306e\u7814\u7a76\u6210\u679c Computer Vision API \u3092 Python \u3067\u4f7f\u3063\u3066\u307f\u305f\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u4e0a\u8a18\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u5927\u4f53\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u308f\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n#\n# Microsoft Computer Vision API \u306e\u30c7\u30e2\u3092\n# Python 2 / 3 \u4e21\u7cfb\u7d71\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\n#\n#\n# Usage: python ms_cv_api_exp.py (image_url)\n#\n# \u53c2\u8003\n# http://qiita.com/kosfuji/items/621cbedfad0eb68b2f5d\n# https://dev.projectoxford.ai/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fa\n#\n\nfrom __future__ import print_function\n\nimport sys\nPY3 = sys.version_info[0] == 3\n\nif PY3:\n    from urllib.parse import urlencode\n    from http.client import HTTPSConnection\nelse:\n    from urllib import urlencode\n    from httplib import HTTPSConnection\n\ndef main(image_url):\n    headers = {\n        'Content-Type': 'application/json',\n        'Ocp-Apim-Subscription-Key': '(\u3053\u3053\u306bsubscription key\u3092\u5165\u308c\u308b)',\n    }\n    params = urlencode({'visualFeatures': 'Description'})\n    try:\n        conn = HTTPSConnection('api.projectoxford.ai')\n        conn.request(\"POST\", \"/vision/v1.0/analyze?%s\" % params,\n                     \"{'url': '%s'}\" % image_url,\n                     headers)\n        response = conn.getresponse()\n        data = response.read()\n        print(data)\n        conn.close()\n    except Exception as e:\n        print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\n\nif __name__ == '__main__':\n    if len(sys.argv) < 2:\n        print(\"Usage: {} url\".format(sys.argv[0]))\n    main(sys.argv[1])\n\nSubscription key\u304c\u3042\u308c\u3070\u4e0a\u8a18\u306e\u30c4\u30fc\u30eb\u3067URL\u306b\u5bfe\u3057\u3066\u306e\u89e3\u6790\u306f\u7d50\u69cb\u8272\u3005\u904a\u3079\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u3053\u3061\u3089\u306f\u30e2\u30cd\u306e\u300c\u5370\u8c61\u30fb\u65e5\u306e\u51fa\u300d\n\n\u7d50\u679c\u306f\u2026\u2026\n{\n  \"description\": {\n    \"tags\": [\n      \"building\",\n      \"water\",\n      \"street\",\n      \"red\",\n      \"light\",\n      \"sunset\",\n      \"painting\",\n      \"large\",\n      \"city\",\n      \"white\",\n      \"bus\",\n      \"standing\",\n      \"rain\",\n      \"walking\",\n      \"traffic\",\n      \"colorful\",\n      \"man\",\n      \"blurry\",\n      \"riding\",\n      \"parked\",\n      \"people\",\n      \"river\",\n      \"night\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a painting of a river\",\n        \"confidence\": 0.6266185233006358\n      }\n    ]\n  },\n  \"requestId\": \"f4ead5ca-0c3c-4e41-97ef-df5d8e2e566d\",\n  \"metadata\": {\n    \"width\": 1000,\n    \"height\": 776,\n    \"format\": \"Png\"\n  }\n}\n\n\u3059\u3052\u3047\u5370\u8c61\u6d3e\u306e\u7d75\u753b\u3067\u3082\u5224\u5b9a\u3057\u305f\u305e\n\u3053\u3061\u3089\u306f\u540c\u3058\u304f\u30e2\u30cd\u306e\u300c\u30ad\u30e3\u30d4\u30e5\u30b7\u30fc\u30cc\u5927\u901a\u308a\u300d\n\n\u7d50\u679c\u306f\u2026\u2026\n{\n  \"description\": {\n    \"tags\": [\n      \"outdoor\",\n      \"tree\",\n      \"snow\",\n      \"mountain\",\n      \"covered\",\n      \"group\",\n      \"standing\",\n      \"large\",\n      \"water\",\n      \"riding\",\n      \"field\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a view of a mountain\",\n        \"confidence\": 0.41440203405943216\n      }\n    ]\n  },\n  \"requestId\": \"a41ea71a-6e1d-416f-b34e-aa19b98c03e0\",\n  \"metadata\": {\n    \"width\": 736,\n    \"height\": 1000,\n    \"format\": \"Jpeg\"\n  }\n}\n\n\u3048\u3001\u5c71\u2026\u2026\uff1f(\u00b4\u30fb\u03c9\u30fb\uff40)\n\u3061\u3087\u3063\u3068\u304a\u3061\u3083\u3081\u306aAPI\u3067\u3059\u304c\u500b\u4eba\u7684\u306b\u300c\u3059\u3052\u3047\u300d\u3068\u601d\u3063\u305f\u306e\u304c\u4ee5\u4e0b\n\u300c\u6b62\u307e\u308c\u300d\u306e\u6a19\u8b58\n\n\u7d50\u679c\u306f\u2026\u2026\n{\n  \"description\": {\n    \"tags\": [\n      \"building\",\n      \"sign\",\n      \"outdoor\",\n      \"red\",\n      \"stop\",\n      \"street\",\n      \"pole\",\n      \"front\",\n      \"traffic\",\n      \"sitting\",\n      \"black\",\n      \"city\",\n      \"white\",\n      \"close\",\n      \"side\",\n      \"large\",\n      \"blue\",\n      \"standing\",\n      \"train\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a red stop sign sitting on the side of a building\",\n        \"confidence\": 0.8758533311779192\n      }\n    ]\n  },\n  \"requestId\": \"2b687702-9442-45cd-bd5c-7de6be37440d\",\n  \"metadata\": {\n    \"width\": 1000,\n    \"height\": 1334,\n    \"format\": \"Png\"\n  }\n}\n\n\u5f53\u305f\u3063\u3066\u308b\u301c\n\u4ed6\u306e\u4eba\u3068\u8a71\u3057\u3066\u3044\u3066\u77e5\u3063\u305f\u3053\u3068\u3068\u3057\u3066\u3001\u65e5\u672c\u306e\u300c\u6b62\u307e\u308c\u300d\u306e\u6a19\u8b58\u3063\u3066\u3042\u308b\u7a2e\u30ac\u30e9\u30d1\u30b4\u30b9\u7684\u306a\u3082\u306e\u306a\u3093\u3060\u305d\u3046\u3067\u3059\u3002\n\u56fd\u969b\u6a19\u6e96\u306f\u516b\u89d2\u5f62\u306e\u300c\u6b62\u307e\u308c\uff08\u4e00\u6642\u505c\u6b62\uff09\u300d\u306e\u9053\u8def\u6a19\u8b58\u3000\u306a\u305c\u65e5\u672c\u3067\u306f\u9006\u4e09\u89d2\u5f62\u306b\u306a\u3063\u305f\uff1f\n\u306a\u306e\u3067\u3001\u3053\u306e\u56f3\u3092\u3082\u3063\u3066\u300ca red stop sign\u300d\u3068\u5224\u5b9a\u3059\u308b\u306b\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u65e5\u672c\u8a9e\u306e\u305d\u3046\u3044\u3046\u306e\u304c\u5165\u3063\u3066\u306a\u3044\u3068\u3060\u3081\u3068\u3044\u3046\u3053\u3068\u3002\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u3061\u3083\u3093\u3068\u3042\u308b\u3063\u3066\u3053\u3068\u306a\u3093\u3067\u3057\u3087\u3046\u3002\n\u4eca\u56de\u306fPreview\u3068\u3044\u3046\u3053\u3068\u3067\u7121\u6599\u3067\u3057\u305f\u3002\u8aac\u660e\u306b\u3088\u308b\u3068\u300c5,000 transactions per month, 20 per minute.\u300d\u3002\n\u304a\u4ed5\u4e8b\u3067\u672c\u6c17\u3067\u4f7f\u3046\u306b\u306f\u53b3\u3057\u3044\u3067\u3059\u304c\u3053\u306e\u304f\u3089\u3044\u3067\u904a\u3076\u306e\u306b\u306f\u5341\u5206\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3002\n\u304a\u5024\u6bb5\u306e\u8a71\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://www.microsoft.com/cognitive-services/en-us/pricing\n[\u6700\u8fd1\u306e\u753b\u50cf\u8a8d\u8b58\u306e\u5b9f\u529b\uff5eMS \u306e\u6700\u5148\u7aef\u306e\u7814\u7a76\u6210\u679c Computer Vision API \u3092 Python \u3067\u4f7f\u3063\u3066\u307f\u305f](http://qiita.com/kosfuji/items/621cbedfad0eb68b2f5d)\n\n\u7d30\u304b\u3044\u3068\u3053\u308d\u306f\u4e0a\u8a18\u306e\u8a18\u4e8b\u3092\u8aad\u3093\u3067\u3044\u305f\u3060\u3051\u308c\u3070\u5927\u4f53\u3069\u3046\u3044\u3046\u3082\u306e\u304b\u308f\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n```py\n#!/usr/bin/python\n# -*- coding: utf-8 -*-\n#\n# Microsoft Computer Vision API \u306e\u30c7\u30e2\u3092\n# Python 2 / 3 \u4e21\u7cfb\u7d71\u3067\u52d5\u4f5c\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3082\u306e\n#\n#\n# Usage: python ms_cv_api_exp.py (image_url)\n#\n# \u53c2\u8003\n# http://qiita.com/kosfuji/items/621cbedfad0eb68b2f5d\n# https://dev.projectoxford.ai/docs/services/56f91f2d778daf23d8ec6739/operations/56f91f2e778daf14a499e1fa\n#\n\nfrom __future__ import print_function\n\nimport sys\nPY3 = sys.version_info[0] == 3\n\nif PY3:\n    from urllib.parse import urlencode\n    from http.client import HTTPSConnection\nelse:\n    from urllib import urlencode\n    from httplib import HTTPSConnection\n\ndef main(image_url):\n    headers = {\n        'Content-Type': 'application/json',\n        'Ocp-Apim-Subscription-Key': '(\u3053\u3053\u306bsubscription key\u3092\u5165\u308c\u308b)',\n    }\n    params = urlencode({'visualFeatures': 'Description'})\n    try:\n        conn = HTTPSConnection('api.projectoxford.ai')\n        conn.request(\"POST\", \"/vision/v1.0/analyze?%s\" % params,\n                     \"{'url': '%s'}\" % image_url,\n                     headers)\n        response = conn.getresponse()\n        data = response.read()\n        print(data)\n        conn.close()\n    except Exception as e:\n        print(\"[Errno {0}] {1}\".format(e.errno, e.strerror))\n\nif __name__ == '__main__':\n    if len(sys.argv) < 2:\n        print(\"Usage: {} url\".format(sys.argv[0]))\n    main(sys.argv[1])\n```\n\nSubscription key\u304c\u3042\u308c\u3070\u4e0a\u8a18\u306e\u30c4\u30fc\u30eb\u3067URL\u306b\u5bfe\u3057\u3066\u306e\u89e3\u6790\u306f\u7d50\u69cb\u8272\u3005\u904a\u3079\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\u3053\u3061\u3089\u306f\u30e2\u30cd\u306e\u300c\u5370\u8c61\u30fb\u65e5\u306e\u51fa\u300d\n\n![Impression_Sunrise.png](https://qiita-image-store.s3.amazonaws.com/0/14365/b09b70b6-b90b-4e82-b9d3-d1ec818a0eb0.png)\n\n\u7d50\u679c\u306f\u2026\u2026\n\n```json\n{\n  \"description\": {\n    \"tags\": [\n      \"building\",\n      \"water\",\n      \"street\",\n      \"red\",\n      \"light\",\n      \"sunset\",\n      \"painting\",\n      \"large\",\n      \"city\",\n      \"white\",\n      \"bus\",\n      \"standing\",\n      \"rain\",\n      \"walking\",\n      \"traffic\",\n      \"colorful\",\n      \"man\",\n      \"blurry\",\n      \"riding\",\n      \"parked\",\n      \"people\",\n      \"river\",\n      \"night\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a painting of a river\",\n        \"confidence\": 0.6266185233006358\n      }\n    ]\n  },\n  \"requestId\": \"f4ead5ca-0c3c-4e41-97ef-df5d8e2e566d\",\n  \"metadata\": {\n    \"width\": 1000,\n    \"height\": 776,\n    \"format\": \"Png\"\n  }\n}\n```\n\n\u3059\u3052\u3047\u5370\u8c61\u6d3e\u306e\u7d75\u753b\u3067\u3082\u5224\u5b9a\u3057\u305f\u305e\n\n\u3053\u3061\u3089\u306f\u540c\u3058\u304f\u30e2\u30cd\u306e\u300c\u30ad\u30e3\u30d4\u30e5\u30b7\u30fc\u30cc\u5927\u901a\u308a\u300d\n\n![The_Boulevard_des_Capucines.jpg](https://qiita-image-store.s3.amazonaws.com/0/14365/bfa5e2e0-2d41-4271-9c1b-bb931f6fc37b.jpeg)\n\n\u7d50\u679c\u306f\u2026\u2026\n\n```json\n{\n  \"description\": {\n    \"tags\": [\n      \"outdoor\",\n      \"tree\",\n      \"snow\",\n      \"mountain\",\n      \"covered\",\n      \"group\",\n      \"standing\",\n      \"large\",\n      \"water\",\n      \"riding\",\n      \"field\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a view of a mountain\",\n        \"confidence\": 0.41440203405943216\n      }\n    ]\n  },\n  \"requestId\": \"a41ea71a-6e1d-416f-b34e-aa19b98c03e0\",\n  \"metadata\": {\n    \"width\": 736,\n    \"height\": 1000,\n    \"format\": \"Jpeg\"\n  }\n}\n```\n\n\u3048\u3001\u5c71\u2026\u2026\uff1f(\u00b4\u30fb\u03c9\u30fb\uff40)\n\n\u3061\u3087\u3063\u3068\u304a\u3061\u3083\u3081\u306aAPI\u3067\u3059\u304c\u500b\u4eba\u7684\u306b\u300c\u3059\u3052\u3047\u300d\u3068\u601d\u3063\u305f\u306e\u304c\u4ee5\u4e0b\n\n\u300c\u6b62\u307e\u308c\u300d\u306e\u6a19\u8b58\n![Tomare.png](https://qiita-image-store.s3.amazonaws.com/0/14365/bf900f7f-2b6f-5521-e8e7-9c73bd0488b0.png)\n\n\u7d50\u679c\u306f\u2026\u2026\n\n```json\n{\n  \"description\": {\n    \"tags\": [\n      \"building\",\n      \"sign\",\n      \"outdoor\",\n      \"red\",\n      \"stop\",\n      \"street\",\n      \"pole\",\n      \"front\",\n      \"traffic\",\n      \"sitting\",\n      \"black\",\n      \"city\",\n      \"white\",\n      \"close\",\n      \"side\",\n      \"large\",\n      \"blue\",\n      \"standing\",\n      \"train\"\n    ],\n    \"captions\": [\n      {\n        \"text\": \"a red stop sign sitting on the side of a building\",\n        \"confidence\": 0.8758533311779192\n      }\n    ]\n  },\n  \"requestId\": \"2b687702-9442-45cd-bd5c-7de6be37440d\",\n  \"metadata\": {\n    \"width\": 1000,\n    \"height\": 1334,\n    \"format\": \"Png\"\n  }\n}\n```\n\n\u5f53\u305f\u3063\u3066\u308b\u301c\n\n\u4ed6\u306e\u4eba\u3068\u8a71\u3057\u3066\u3044\u3066\u77e5\u3063\u305f\u3053\u3068\u3068\u3057\u3066\u3001\u65e5\u672c\u306e\u300c\u6b62\u307e\u308c\u300d\u306e\u6a19\u8b58\u3063\u3066\u3042\u308b\u7a2e\u30ac\u30e9\u30d1\u30b4\u30b9\u7684\u306a\u3082\u306e\u306a\u3093\u3060\u305d\u3046\u3067\u3059\u3002\n\n[\u56fd\u969b\u6a19\u6e96\u306f\u516b\u89d2\u5f62\u306e\u300c\u6b62\u307e\u308c\uff08\u4e00\u6642\u505c\u6b62\uff09\u300d\u306e\u9053\u8def\u6a19\u8b58\u3000\u306a\u305c\u65e5\u672c\u3067\u306f\u9006\u4e09\u89d2\u5f62\u306b\u306a\u3063\u305f\uff1f](http://matome.naver.jp/odai/2145334010826482701)\n\n\u306a\u306e\u3067\u3001\u3053\u306e\u56f3\u3092\u3082\u3063\u3066\u300ca red stop sign\u300d\u3068\u5224\u5b9a\u3059\u308b\u306b\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u65e5\u672c\u8a9e\u306e\u305d\u3046\u3044\u3046\u306e\u304c\u5165\u3063\u3066\u306a\u3044\u3068\u3060\u3081\u3068\u3044\u3046\u3053\u3068\u3002\n\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u3061\u3083\u3093\u3068\u3042\u308b\u3063\u3066\u3053\u3068\u306a\u3093\u3067\u3057\u3087\u3046\u3002\n\n\u4eca\u56de\u306fPreview\u3068\u3044\u3046\u3053\u3068\u3067\u7121\u6599\u3067\u3057\u305f\u3002\u8aac\u660e\u306b\u3088\u308b\u3068\u300c5,000 transactions per month, 20 per minute.\u300d\u3002\n\u304a\u4ed5\u4e8b\u3067\u672c\u6c17\u3067\u4f7f\u3046\u306b\u306f\u53b3\u3057\u3044\u3067\u3059\u304c\u3053\u306e\u304f\u3089\u3044\u3067\u904a\u3076\u306e\u306b\u306f\u5341\u5206\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3002\n\n\u304a\u5024\u6bb5\u306e\u8a71\u306f\u3053\u3061\u3089\u306b\u3042\u308a\u307e\u3059\u3002\nhttps://www.microsoft.com/cognitive-services/en-us/pricing\n\n\n\n\n\n", "tags": ["Python", "\u753b\u50cf\u8a8d\u8b58", "\u6a5f\u68b0\u5b66\u7fd2", "MachineLearning"]}