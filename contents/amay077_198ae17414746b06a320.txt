{"context": " More than 1 year has passed since last update.\u3000Android DataBinding \u3067 View \u3068\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306f BaseObservable \u304b\u3089\u6d3e\u751f\u3057\u305f\u30af\u30e9\u30b9\u304b\u3001ObservableField<T> \u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3067\u3059\u3002\n\u3000RxJava\u30d9\u30fc\u30b9\u306e API \u3084\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u66f4\u65b0\u901a\u77e5\u306f rx.Observable<T> \u3092 subscribe \u3059\u308b\u3053\u3068\u3067\u53d7\u3051\u3089\u308c\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u305d\u308c\u3092 View \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306b\u306f\u3001ObservableField<T> \u306b\u5909\u63db\u3057\u3066\u3042\u3052\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3000\n\u3000\u7d50\u679c\u3001\u4e0b\u306e\u3088\u3046\u306a Utility \u95a2\u6570\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n/**\n * rx.Observable \u304b\u3089 ObservableField \u3078\u306e\u5909\u63db\u3092\u304a\u3053\u306a\u3046\n */\nstatic public <T> ObservableField<T> toObservableField(Observable<T> source, CompositeSubscription subscriptions) {\n    final ObservableField<T> field = new ObservableField<T>();\n\n    subscriptions.add(\n            // TODO onError \u3082\u62fe\u3063\u305f\u307b\u3046\u304c\u3044\u3044\n            source.subscribe(new Action1<T>() {\n                @Override\n                public void call(T x) {\n                    field.set(x);\n                }\n            })\n    );\n\n    return field;\n}\n\n\u3000\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u306f\u30b9\u30de\u30fc\u30c8\u3067\u306a\u3044\u3068\u611f\u3058\u307e\u3059\u3002\n\u3000\u3069\u3046\u305b ObservableField \u3082\u540c\u3058\u3088\u3046\u306a\u6982\u5ff5\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001View \u304c\u8cfc\u8aad\u958b\u59cb-\u7d42\u4e86\u3092\u3057\u3066\u3044\u308b\u306b\u3059\u304e\u306a\u3044\u306f\u305a\u306a\u306e\u3067\u3001\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001rx.Observable<T> \u306e subscribe/unsubscribe \u3092\u3055\u305b\u3066\u3042\u3052\u308c\u3070\u826f\u3044\u306f\u305a\u3067\u3059\u3002\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u4f5c\u3063\u3066\u307f\u305f\u306e\u304c\u3053\u306e rx.Observable<T> \u3092 ObservableField<T> \u306b\u5909\u63db\u3059\u308b\u30af\u30e9\u30b9\u3002\nimport android.databinding.ObservableField;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport rx.Observable;\nimport rx.Subscription;\nimport rx.functions.Action1;\n\npublic class RxField<T> extends ObservableField<T> {\n\n    private final Observable<T> observable;\n    private final Map<Integer, Subscription> sucscriptionMap = new HashMap<Integer, Subscription>();\n\n    public RxField(Observable<T> observable) {\n        super();\n        this.observable = observable;\n    }\n\n    public RxField(Observable<T> observable, T defaultValue) {\n        super(defaultValue);\n        this.observable = observable;\n    }\n\n    @Override\n    public synchronized void addOnPropertyChangedCallback(OnPropertyChangedCallback callback) {\n        super.addOnPropertyChangedCallback(callback);\n\n        sucscriptionMap.put(callback.hashCode(), observable.subscribe(new Action1<T>() {\n            @Override\n            public void call(T value) {\n                set(value);\n            }\n        }));\n    }\n\n    @Override\n    public synchronized void removeOnPropertyChangedCallback(OnPropertyChangedCallback callback) {\n        if (sucscriptionMap.containsKey(callback.hashCode())) {\n            final Subscription subscription = sucscriptionMap.get(callback.hashCode());\n            subscription.unsubscribe();\n            sucscriptionMap.remove(callback.hashCode());\n        }\n\n        super.removeOnPropertyChangedCallback(callback);\n    }\n\n    @Override\n    public void set(T value) {\n        // TODO should be readonly, because cannot set value to observable\n        super.set(value);\n    }\n\n    public Observable<T> tObservable() {\n        return observable;\n    }\n}\n\n\u3000ObservableField \u306f\u3001View \u304b\u3089\u8cfc\u8aad\u3055\u308c\u308b\u3068 addOnPropertyChangedCallback \u304c\u547c\u3070\u308c\u3001\u8cfc\u8aad\u89e3\u9664\u3055\u308c\u308b\u3068 removeOnPropertyChangedCallback \u304c\u547c\u3070\u308c\u307e\u3059(\u308b\u306f\u305a\u3067\u3059)\u3002\n\u3000\u306a\u306e\u3067\u3001\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 rx.Observable<T> \u3092 subscribe()\u3001subscription.unsubscribe() \u3057\u3066\u3042\u3052\u307e\u3059\u3002\u8cfc\u8aad\u8005(View)\u304c\u8907\u6570\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001 subscription \u306f Map \u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u3067\u3001rx.Observable<T> \u306e\u5024\u304c\u5909\u308f\u3063\u305f\u6642(onNext())\u306b\u3001ObservableField \u306e set(value) \u3092\u547c\u3093\u3067\u3042\u3052\u308c\u3070\u3001ObservableField \u5074\u306e\u5909\u66f4\u901a\u77e5(notifyChanged)\u304c\u98db\u3093\u3067\u3001View \u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\u3000\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067 \u2192 StopWatchSample/StopWatchAppAndroid/app/src/main/java/com/amay077/stopwatchapp/viewmodel/MainViewModel.java\n\u3000\n\n\u53cc\u65b9\u5411\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u307e\u305b\u3093\n\u3000\u3053\u306e\u5b9f\u88c5\u306f\u3001rx.Observable \u306e\u66f4\u65b0\u3092 ObservableField \u901a\u77e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u9006\u65b9\u5411\uff08ObservableField \u306e\u5909\u66f4\u3092 rx.Observable \u306b\u9069\u7528\u3059\u308b\uff09\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3082\u305d\u3082 rx.Observable \u306f\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u3057\u305f\u3051\u308c\u3070 rx.Observable \u306e\u4ee3\u308f\u308a\u306b rx.Subject \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3000\nAndroid Data Binding + MVVM\u30d1\u30bf\u30fc\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f \u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306b\u3001\u3053\u308c\u3092\u9069\u7528\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u3054\u53c2\u8003\u307e\u3067\u3002\n\nStopWatchSample/StopWatchAppAndroid - github\n\n\n\u3000Android DataBinding \u3067 View \u3068\u30d0\u30a4\u30f3\u30c9\u3067\u304d\u308b\u30c7\u30fc\u30bf\u30af\u30e9\u30b9\u306f ``BaseObservable`` \u304b\u3089\u6d3e\u751f\u3057\u305f\u30af\u30e9\u30b9\u304b\u3001``ObservableField<T>`` \u578b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u306e\u307f\u3067\u3059\u3002\n\n\u3000RxJava\u30d9\u30fc\u30b9\u306e API \u3084\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u66f4\u65b0\u901a\u77e5\u306f ``rx.Observable<T>`` \u3092 ``subscribe`` \u3059\u308b\u3053\u3068\u3067\u53d7\u3051\u3089\u308c\u308b\u308f\u3051\u3067\u3059\u304c\u3001\u305d\u308c\u3092 View \u306b\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u306b\u306f\u3001``ObservableField<T>`` \u306b\u5909\u63db\u3057\u3066\u3042\u3052\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3000\n\u3000\u7d50\u679c\u3001\u4e0b\u306e\u3088\u3046\u306a Utility \u95a2\u6570\u3092\u4f5c\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```java:\n/**\n * rx.Observable \u304b\u3089 ObservableField \u3078\u306e\u5909\u63db\u3092\u304a\u3053\u306a\u3046\n */\nstatic public <T> ObservableField<T> toObservableField(Observable<T> source, CompositeSubscription subscriptions) {\n    final ObservableField<T> field = new ObservableField<T>();\n\n    subscriptions.add(\n            // TODO onError \u3082\u62fe\u3063\u305f\u307b\u3046\u304c\u3044\u3044\n            source.subscribe(new Action1<T>() {\n                @Override\n                public void call(T x) {\n                    field.set(x);\n                }\n            })\n    );\n\n    return field;\n}\n```\n\n\u3000\u3057\u304b\u3057\u3053\u306e\u65b9\u6cd5\u306f\u30b9\u30de\u30fc\u30c8\u3067\u306a\u3044\u3068\u611f\u3058\u307e\u3059\u3002\n\u3000\u3069\u3046\u305b ``ObservableField`` \u3082\u540c\u3058\u3088\u3046\u306a\u6982\u5ff5\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u3001View \u304c\u8cfc\u8aad\u958b\u59cb-\u7d42\u4e86\u3092\u3057\u3066\u3044\u308b\u306b\u3059\u304e\u306a\u3044\u306f\u305a\u306a\u306e\u3067\u3001\u540c\u3058\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u3001``rx.Observable<T>`` \u306e subscribe/unsubscribe \u3092\u3055\u305b\u3066\u3042\u3052\u308c\u3070\u826f\u3044\u306f\u305a\u3067\u3059\u3002\n\n\u3000\u3068\u3044\u3046\u3053\u3068\u3067\u4f5c\u3063\u3066\u307f\u305f\u306e\u304c\u3053\u306e ``rx.Observable<T>`` \u3092 ``ObservableField<T>`` \u306b\u5909\u63db\u3059\u308b\u30af\u30e9\u30b9\u3002\n\n```java:\nimport android.databinding.ObservableField;\n\nimport java.util.HashMap;\nimport java.util.Map;\n\nimport rx.Observable;\nimport rx.Subscription;\nimport rx.functions.Action1;\n\npublic class RxField<T> extends ObservableField<T> {\n\n    private final Observable<T> observable;\n    private final Map<Integer, Subscription> sucscriptionMap = new HashMap<Integer, Subscription>();\n\n    public RxField(Observable<T> observable) {\n        super();\n        this.observable = observable;\n    }\n\n    public RxField(Observable<T> observable, T defaultValue) {\n        super(defaultValue);\n        this.observable = observable;\n    }\n\n    @Override\n    public synchronized void addOnPropertyChangedCallback(OnPropertyChangedCallback callback) {\n        super.addOnPropertyChangedCallback(callback);\n\n        sucscriptionMap.put(callback.hashCode(), observable.subscribe(new Action1<T>() {\n            @Override\n            public void call(T value) {\n                set(value);\n            }\n        }));\n    }\n\n    @Override\n    public synchronized void removeOnPropertyChangedCallback(OnPropertyChangedCallback callback) {\n        if (sucscriptionMap.containsKey(callback.hashCode())) {\n            final Subscription subscription = sucscriptionMap.get(callback.hashCode());\n            subscription.unsubscribe();\n            sucscriptionMap.remove(callback.hashCode());\n        }\n\n        super.removeOnPropertyChangedCallback(callback);\n    }\n\n    @Override\n    public void set(T value) {\n        // TODO should be readonly, because cannot set value to observable\n        super.set(value);\n    }\n\n    public Observable<T> tObservable() {\n        return observable;\n    }\n}\n```\n\n\n\u3000``ObservableField`` \u306f\u3001View \u304b\u3089\u8cfc\u8aad\u3055\u308c\u308b\u3068 ``addOnPropertyChangedCallback`` \u304c\u547c\u3070\u308c\u3001\u8cfc\u8aad\u89e3\u9664\u3055\u308c\u308b\u3068 ``removeOnPropertyChangedCallback`` \u304c\u547c\u3070\u308c\u307e\u3059(\u308b\u306f\u305a\u3067\u3059)\u3002\n\n\u3000\u306a\u306e\u3067\u3001\u3053\u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067 ``rx.Observable<T>`` \u3092 ``subscribe()``\u3001``subscription.unsubscribe()`` \u3057\u3066\u3042\u3052\u307e\u3059\u3002\u8cfc\u8aad\u8005(View)\u304c\u8907\u6570\u306b\u306a\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u306e\u3067\u3001 subscription \u306f Map \u3067\u7ba1\u7406\u3057\u3066\u3044\u307e\u3059\u3002\n\u3000\u3067\u3001``rx.Observable<T>`` \u306e\u5024\u304c\u5909\u308f\u3063\u305f\u6642(``onNext()``)\u306b\u3001``ObservableField`` \u306e ``set(value)`` \u3092\u547c\u3093\u3067\u3042\u3052\u308c\u3070\u3001``ObservableField`` \u5074\u306e\u5909\u66f4\u901a\u77e5(``notifyChanged``)\u304c\u98db\u3093\u3067\u3001View \u304c\u66f4\u65b0\u3055\u308c\u307e\u3059\u3002\n\n\u3000\u4f7f\u3044\u65b9\u306f\u3053\u3093\u306a\u611f\u3058\u3067 \u2192 [StopWatchSample/StopWatchAppAndroid/app/src/main/java/com/amay077/stopwatchapp/viewmodel/MainViewModel.java](https://github.com/amay077/StopWatchSample/tree/qiita_20160226/StopWatchAppAndroid/app/src/main/java/com/amay077/stopwatchapp/viewmodel/MainViewModel.java#L51-L67)\n\u3000\n## \u53cc\u65b9\u5411\u306b\u306f\u5bfe\u5fdc\u3057\u3066\u307e\u305b\u3093\n\n\u3000\u3053\u306e\u5b9f\u88c5\u306f\u3001``rx.Observable`` \u306e\u66f4\u65b0\u3092 ``ObservableField`` \u901a\u77e5\u3059\u308b\u3060\u3051\u3067\u3059\u3002\u9006\u65b9\u5411\uff08``ObservableField`` \u306e\u5909\u66f4\u3092 ``rx.Observable`` \u306b\u9069\u7528\u3059\u308b\uff09\u306f\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3082\u305d\u3082 ``rx.Observable`` \u306f\u5024\u3092\u8a2d\u5b9a\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u305d\u308c\u3092\u3057\u305f\u3051\u308c\u3070 ``rx.Observable`` \u306e\u4ee3\u308f\u308a\u306b ``rx.Subject`` \u304c\u5fc5\u8981\u3067\u3059\u3002\n\u3000\n[Android Data Binding + MVVM\u30d1\u30bf\u30fc\u30f3\u306e\u30b5\u30f3\u30d7\u30eb\u3092\u66f8\u3044\u3066\u307f\u305f](http://qiita.com/amay077/items/b5c788bb3ee9ff84d9b4) \u3067\u4f5c\u6210\u3057\u305f\u30a2\u30d7\u30ea\u306b\u3001\u3053\u308c\u3092\u9069\u7528\u3057\u3066\u307f\u305f\u306e\u3067\u3001\u3054\u53c2\u8003\u307e\u3067\u3002\n\n* [StopWatchSample/StopWatchAppAndroid - github](https://github.com/amay077/StopWatchSample/tree/qiita_20160226/StopWatchAppAndroid)\n", "tags": ["Android", "RxJava"]}