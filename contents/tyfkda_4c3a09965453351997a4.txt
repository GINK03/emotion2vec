{"context": "Python\u3067\u884c\u5217\u8a08\u7b97\u3055\u305b\u308b\u306e\u306bNumPy\u3092\u4f7f\u3063\u3066\u307f\u305f\u30e1\u30e2\u3002\n\nimport\nimport numpy as np\n\n\u306a\u3069\u3068\u3057\u3066\u4f7f\u3046\n\n\u884c\u5217\nnp.matrix([[1, 2, 3],\n           [4, 5, 6]])\n\n\n\nnp.matrix\u306b\u4e8c\u91cd\u914d\u5217\u3092\u6e21\u3059\u3053\u3068\u3067\u884c\u5217\u3092\u751f\u6210\u3067\u304d\u308b\n\n\n\u884c\u5217\u306e\u4e57\u7b97\n\n\nnp.matrix\u3067\u4f5c\u3063\u305f\u884c\u5217\u3067\u3042\u308c\u3070 a * b \u3067\u884c\u5217\u306e\u4e57\u7b97\u304c\u8a08\u7b97\u3067\u304d\u308b\n\nnp.array\u3067\u4f5c\u3063\u305f\u914d\u5217\u3060\u3068\u3001 a * b \u306f\u8981\u7d20\u3054\u3068\u306e\u4e57\u7b97\u306b\u306a\u308b\u3002\u884c\u5217\u306e\u4e57\u7b97\u3092\u3059\u308b\u306b\u306f np.dot(a, b) \u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n# \u884c\u5217\u306e\u4e57\u7b97\u306e\u4f8b\nma = np.matrix([[1,2], [3,4]])\nmb = np.matrix([[11,12], [21,22]])\nma * mb     # matrix([[ 53,  56],\n            #         [117, 124]])\n            # ma.dot(mb) \u3082\u540c\u3058\n\n# \u914d\u5217\u306e\u4e57\u7b97\u306e\u4f8b\naa = np.array([[1,2], [3,4]])\nab = np.array([[11,12], [21,22]])\naa * ab     # array([[11, 24],\n            #        [63, 88]])\naa.dot(ab)  # array([[ 53,  56],\n            #        [117, 124]])\n\n\n\u8ee2\u7f6e\nnp.transpose(m)\n\n\u307e\u305f\u306f\nm.T\n\n\n\uff11\u30de\u30c8\u30ea\u30af\u30b9\nnp.ones((r, c))\n\n\u5217\u30d9\u30af\u30c8\u30eb\u306e\u53d6\u308a\u51fa\u3057\nm[:, c]\n\n\n\u30de\u30c8\u30ea\u30af\u30b9\u306e\u9023\u7d50\n\u7e26\u307e\u305f\u306f\u6a2a\u306b\u9023\u7d50\u3059\u308b\u306b\u306f\u3001np.vstack\u3084np.hstack\u3092\u4f7f\u3046\n\n\u4e71\u6570\u3067\u521d\u671f\u5316\u3057\u305f\u30de\u30c8\u30ea\u30af\u30b9\u3092\u751f\u6210\nnp.random.random((r, c))\n\n\u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n\u9023\u7acb\u65b9\u7a0b\u5f0f Ax=bAx = b \u3092\u89e3\u304f\u306b\u306f\nx = np.solve(A, b)\n\n\n\u5024\u306e\u5927\u304d\u3044\u8981\u7d20n\u500b\u306e\u30a4\u30f3\u30c7\u30af\u30b9\u3092\u53d6\u308a\u51fa\u3059\nnumpy.argpartition\uff08\u30a4\u30f3\u30c7\u30af\u30b9\uff09\u3092\u4f7f\u3046\uff1a\na = np.array([0.3, 0.1, 0.4, 0.2, 0.5])\nn = 3\nindices = np.argpartition(-a, n - 1)[:n]  # -a\u3067\u964d\u9806\u306b\n#=> indices = array([4, 2, 0])\n\n\n\u5148\u982d\u304b\u3089n\u500b\u306b\u5c0f\u3055\u3044\u8981\u7d20\u304c\u5f97\u3089\u308c\u308b\u304c\u3001\u30bd\u30fc\u30c8\u306f\u3055\u308c\u3066\u3044\u306a\u3044\n\n\u30bd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u5024\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u30ea\u30b9\u30c8\u306b\u3057\u3066\u30bd\u30fc\u30c8\uff1a\nvalues = a[indices]  #=> array([ 0.5,  0.4,  0.3])\n# \u5024\u3068\u30a4\u30f3\u30c7\u30af\u30b9\u306e\u964d\u9806\u306e\u30ea\u30b9\u30c8\u306b\u5909\u63db\nresult = np.array([values, indices]).transpose().tolist()\nlist.sort(result, reverse=True)\n#=> result = [[0.5, 4.0], [0.4, 2.0], [0.3, 0.0]]\n\n\n\u53c2\u8003\n\n\u79c1\u8a33\u300c\u66ab\u5b9a\u7684 NumPy \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u300d - naoya_t@hatenablog\n\u6570\u5f0f\u3092numpy\u306b\u843d\u3068\u3057\u3053\u3080\u30b3\u30c4\n\nPython\u3067\u884c\u5217\u8a08\u7b97\u3055\u305b\u308b\u306e\u306b[NumPy](http://www.numpy.org/)\u3092\u4f7f\u3063\u3066\u307f\u305f\u30e1\u30e2\u3002\n\n## import\n```py\nimport numpy as np\n```\n\n\u306a\u3069\u3068\u3057\u3066\u4f7f\u3046\n\n### \u884c\u5217\n```py\nnp.matrix([[1, 2, 3],\n           [4, 5, 6]])\n```\n\n* `np.matrix`\u306b\u4e8c\u91cd\u914d\u5217\u3092\u6e21\u3059\u3053\u3068\u3067\u884c\u5217\u3092\u751f\u6210\u3067\u304d\u308b\n\n### \u884c\u5217\u306e\u4e57\u7b97\n\n* `np.matrix`\u3067\u4f5c\u3063\u305f\u884c\u5217\u3067\u3042\u308c\u3070 `a * b` \u3067\u884c\u5217\u306e\u4e57\u7b97\u304c\u8a08\u7b97\u3067\u304d\u308b\n* `np.array`\u3067\u4f5c\u3063\u305f\u914d\u5217\u3060\u3068\u3001 `a * b` \u306f\u8981\u7d20\u3054\u3068\u306e\u4e57\u7b97\u306b\u306a\u308b\u3002\u884c\u5217\u306e\u4e57\u7b97\u3092\u3059\u308b\u306b\u306f `np.dot(a, b)` \u3068\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\n\n```py\n# \u884c\u5217\u306e\u4e57\u7b97\u306e\u4f8b\nma = np.matrix([[1,2], [3,4]])\nmb = np.matrix([[11,12], [21,22]])\nma * mb     # matrix([[ 53,  56],\n            #         [117, 124]])\n            # ma.dot(mb) \u3082\u540c\u3058\n\n# \u914d\u5217\u306e\u4e57\u7b97\u306e\u4f8b\naa = np.array([[1,2], [3,4]])\nab = np.array([[11,12], [21,22]])\naa * ab     # array([[11, 24],\n            #        [63, 88]])\naa.dot(ab)  # array([[ 53,  56],\n            #        [117, 124]])\n```\n\n### \u8ee2\u7f6e\n```py\nnp.transpose(m)\n```\n\n\u307e\u305f\u306f\n\n```py\nm.T\n```\n\n### \uff11\u30de\u30c8\u30ea\u30af\u30b9\n`np.ones((r, c))`\n\n### \u5217\u30d9\u30af\u30c8\u30eb\u306e\u53d6\u308a\u51fa\u3057\n```py\nm[:, c]\n```\n\n### \u30de\u30c8\u30ea\u30af\u30b9\u306e\u9023\u7d50\n\u7e26\u307e\u305f\u306f\u6a2a\u306b\u9023\u7d50\u3059\u308b\u306b\u306f\u3001`np.vstack`\u3084`np.hstack`\u3092\u4f7f\u3046\n\n### \u4e71\u6570\u3067\u521d\u671f\u5316\u3057\u305f\u30de\u30c8\u30ea\u30af\u30b9\u3092\u751f\u6210\n`np.random.random((r, c))`\n\n### \u9023\u7acb\u65b9\u7a0b\u5f0f\u3092\u89e3\u304f\n\n\u9023\u7acb\u65b9\u7a0b\u5f0f $Ax = b$ \u3092\u89e3\u304f\u306b\u306f\n\n```py\nx = np.solve(A, b)\n```\n\n### \u5024\u306e\u5927\u304d\u3044\u8981\u7d20n\u500b\u306e\u30a4\u30f3\u30c7\u30af\u30b9\u3092\u53d6\u308a\u51fa\u3059\n\n[numpy.argpartition](http://docs.scipy.org/doc/numpy/reference/generated/numpy.argpartition.html)\uff08\u30a4\u30f3\u30c7\u30af\u30b9\uff09\u3092\u4f7f\u3046\uff1a\n\n```py\na = np.array([0.3, 0.1, 0.4, 0.2, 0.5])\nn = 3\nindices = np.argpartition(-a, n - 1)[:n]  # -a\u3067\u964d\u9806\u306b\n#=> indices = array([4, 2, 0])\n```\n\n  * \u5148\u982d\u304b\u3089`n`\u500b\u306b\u5c0f\u3055\u3044\u8981\u7d20\u304c\u5f97\u3089\u308c\u308b\u304c\u3001\u30bd\u30fc\u30c8\u306f\u3055\u308c\u3066\u3044\u306a\u3044\n\n\u30bd\u30fc\u30c8\u3059\u308b\u306b\u306f\u3001\u5024\u3068\u7d44\u307f\u5408\u308f\u305b\u305f\u30ea\u30b9\u30c8\u306b\u3057\u3066\u30bd\u30fc\u30c8\uff1a\n\n```py\nvalues = a[indices]  #=> array([ 0.5,  0.4,  0.3])\n# \u5024\u3068\u30a4\u30f3\u30c7\u30af\u30b9\u306e\u964d\u9806\u306e\u30ea\u30b9\u30c8\u306b\u5909\u63db\nresult = np.array([values, indices]).transpose().tolist()\nlist.sort(result, reverse=True)\n#=> result = [[0.5, 4.0], [0.4, 2.0], [0.3, 0.0]]\n```\n\n\n### \u53c2\u8003\n- [\u79c1\u8a33\u300c\u66ab\u5b9a\u7684 NumPy \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u300d - naoya_t@hatenablog](http://naoyat.hatenablog.jp/entry/2011/12/29/021414)\n- [\u6570\u5f0f\u3092numpy\u306b\u843d\u3068\u3057\u3053\u3080\u30b3\u30c4](http://www.slideshare.net/shuyo/numpy-9704562)\n", "tags": ["numpy"]}