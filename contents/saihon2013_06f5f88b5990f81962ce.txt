{"tags": ["yhpg", "\u3069\u3046\u66f8\u304f", "C"], "context": " More than 1 year has passed since last update.\nC\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum e_move { ROW, COL };\nstruct position\n{\n    int p[2];\n};\n\nvoid test( const char * input, const char * ans )\n{\n    const char * table[9] = \n    {\n        \"!!!!!!!!!\",    // \uff01\u30de\u30fc\u30af\u3092\u756a\u5175\u306b\n        \"!WXYZ!!!!\",\n        \"!VJKLa!!!\",\n        \"!UICDMb!!\",\n        \"!THBAENc!\",\n        \"!!kSGFOd!\",\n        \"!!!jRQPe!\",\n        \"!!!!ihgf!\",\n        \"!!!!!!!!!\" \n    };\n    const int move_table[][2] = { {-1,0}, {-1,-1}, {0,-1}, {1,0}, {1,1}, {0,1} };\n    const struct position start = { {4,4} };    // \u4e0d\u8981\u3067\u3059\u3051\u3069\u2193\n    struct position pos = {0};\n    char str[20] = {0};\n    int i = 0;\n\n    pos = start;                // \u3053\u308c\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u914d\u5217\u3092\u69cb\u9020\u4f53\u306b\u3057\u3066\u30b3\u30d4\u30fc\uff09\n    strncat(str, &table[ pos.p[COL] ][ pos.p[ROW] ], 1 );\n    for(i = 0; i < strlen(input); i++ )\n    {\n        pos.p[COL] += move_table[ input[i]-'0' ][COL];      // \u79fb\u52d5\u3057\u307e\u3059\n        pos.p[ROW] += move_table[ input[i]-'0' ][ROW];\n        strncat(str, &table[ pos.p[COL] ][ pos.p[ROW] ], 1 );\n        if( table[ pos.p[COL] ][ pos.p[ROW] ] == '!' )\n        {\n            pos.p[COL] -= move_table[ input[i]-'0' ][COL];  // \u306f\u307f\u51fa\u305f\u306e\u3067\u623b\u308a\u307e\u3059\n            pos.p[ROW] -= move_table[ input[i]-'0' ][ROW];\n        }\n    }\n    printf(\"%s\\n\", (strcmp(ans,str) == 0) ? \"ooooo GOOD ooooo\": \"xxxxx BAD xxxxx\");\n}\n\nint main( void )\n{\n    /*0*/ test( \"135004\", \"ACDABHS\" );\n    /*1*/ test( \"1\", \"AC\" );\n    /*2*/ test( \"33333120\", \"AENc!!b!M\" );\n    /*3*/ test( \"0\", \"AB\" );\n    /*4*/ test( \"2\", \"AD\" );\n    /*5*/ test( \"3\", \"AE\" );\n    /*6*/ test( \"4\", \"AF\" );\n    /*7*/ test( \"5\", \"AG\" );\n    /*8*/ test( \"4532120\", \"AFQPOEMD\" );\n    /*9*/ test( \"051455\", \"ABSHSj!\" );\n    /*10*/ test( \"23334551\", \"ADMb!cdeO\" );\n    /*11*/ test( \"22033251\", \"ADLKLa!ML\" );\n    /*12*/ test( \"50511302122\", \"AGSjkTHTU!VW\" );\n    /*13*/ test( \"000051\", \"ABHT!!!\" );\n    /*14*/ test( \"1310105\", \"ACDKJW!V\" );\n    /*15*/ test( \"50002103140\", \"AGSk!HU!IVIU\" );\n    /*16*/ test( \"3112045\", \"AEDKYXKC\" );\n    /*17*/ test( \"02021245535\", \"ABCIJW!JIHBS\" );\n    /*18*/ test( \"014204\", \"ABIBCIB\" );\n    /*19*/ test( \"255230\", \"ADAGAEA\" );\n    /*20*/ test( \"443501\", \"AFPefgQ\" );\n    /*21*/ test( \"022321\", \"ABCKLZ!\" );\n    /*22*/ test( \"554452\", \"AGRh!!Q\" );\n    /*23*/ test( \"051024\", \"ABSHTUH\" );\n    /*24*/ test( \"524002\", \"AGAFGSB\" );\n    /*25*/ test( \"54002441132\", \"AGQRjSRhRSGA\" );\n    /*26*/ test( \"11010554312\", \"ACJV!!UTkSHI\" );\n    /*27*/ test( \"23405300554\", \"ADMNEFOFGRi!\" );\n    /*28*/ test( \"555353201\", \"AGRih!gPQG\" );\n    /*29*/ test( \"22424105\", \"ADLMabaLD\" );\n    /*30*/ test( \"11340202125\", \"ACJKDCKJX!!J\" );\n    /*31*/ test( \"4524451\", \"AFQFPf!P\" );\n    /*32*/ test( \"44434234050\", \"AFPf!!e!!Pgh\" );\n    /*33*/ test( \"00554040132\", \"ABHk!j!i!jRG\" );\n    /*34*/ test( \"3440403\", \"AEOePfgf\" );\n    /*35*/ test( \"111130\", \"ACJW!XW\" );\n    /*36*/ test( \"21133343125\", \"ADKXYZ!a!Z!L\" );\n    /*37*/ test( \"353511\", \"AEFOPFA\" );\n    /*38*/ test( \"22204115220\", \"ADLZYLY!KY!X\" );\n    /*39*/ test( \"03013541\", \"ABABICBGB\" );\n    /*40*/ test( \"101344\", \"ACIVJCA\" );\n    /*41*/ test( \"2432541\", \"ADENbNdN\" );\n    /*42*/ test( \"45332242015\", \"AFQPedc!!NME\" );\n    /*43*/ test( \"215453\", \"ADKCAGF\" );\n    /*44*/ test( \"45540523454\", \"AFQh!i!RQg!!\" );\n    /*45*/ test( \"42434302545\", \"AFEOd!!ONOef\" );\n\n    return 0;\n}\n\n\n``` c:C\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum e_move { ROW, COL };\nstruct position\n{\n\tint p[2];\n};\n\nvoid test( const char * input, const char * ans )\n{\n\tconst char * table[9] = \n\t{\n\t\t\"!!!!!!!!!\",\t// \uff01\u30de\u30fc\u30af\u3092\u756a\u5175\u306b\n\t\t\"!WXYZ!!!!\",\n\t\t\"!VJKLa!!!\",\n\t\t\"!UICDMb!!\",\n\t\t\"!THBAENc!\",\n\t\t\"!!kSGFOd!\",\n\t\t\"!!!jRQPe!\",\n\t\t\"!!!!ihgf!\",\n\t\t\"!!!!!!!!!\"\t\n\t};\n\tconst int move_table[][2] = { {-1,0}, {-1,-1}, {0,-1}, {1,0}, {1,1}, {0,1} };\n\tconst struct position start = { {4,4} };\t// \u4e0d\u8981\u3067\u3059\u3051\u3069\u2193\n\tstruct position pos = {0};\n\tchar str[20] = {0};\n\tint i = 0;\n\n\tpos = start;\t\t\t\t// \u3053\u308c\u3092\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\uff08\u914d\u5217\u3092\u69cb\u9020\u4f53\u306b\u3057\u3066\u30b3\u30d4\u30fc\uff09\n\tstrncat(str, &table[ pos.p[COL] ][ pos.p[ROW] ], 1 );\n\tfor(i = 0; i < strlen(input); i++ )\n\t{\n\t\tpos.p[COL] += move_table[ input[i]-'0' ][COL];\t\t// \u79fb\u52d5\u3057\u307e\u3059\n\t\tpos.p[ROW] += move_table[ input[i]-'0' ][ROW];\n\t\tstrncat(str, &table[ pos.p[COL] ][ pos.p[ROW] ], 1 );\n\t\tif( table[ pos.p[COL] ][ pos.p[ROW] ] == '!' )\n\t\t{\n\t\t\tpos.p[COL] -= move_table[ input[i]-'0' ][COL];\t// \u306f\u307f\u51fa\u305f\u306e\u3067\u623b\u308a\u307e\u3059\n\t\t\tpos.p[ROW] -= move_table[ input[i]-'0' ][ROW];\n\t\t}\n\t}\n\tprintf(\"%s\\n\", (strcmp(ans,str) == 0) ? \"ooooo GOOD ooooo\": \"xxxxx BAD xxxxx\");\n}\n\nint main( void )\n{\n\t/*0*/ test( \"135004\", \"ACDABHS\" );\n\t/*1*/ test( \"1\", \"AC\" );\n\t/*2*/ test( \"33333120\", \"AENc!!b!M\" );\n\t/*3*/ test( \"0\", \"AB\" );\n\t/*4*/ test( \"2\", \"AD\" );\n\t/*5*/ test( \"3\", \"AE\" );\n\t/*6*/ test( \"4\", \"AF\" );\n\t/*7*/ test( \"5\", \"AG\" );\n\t/*8*/ test( \"4532120\", \"AFQPOEMD\" );\n\t/*9*/ test( \"051455\", \"ABSHSj!\" );\n\t/*10*/ test( \"23334551\", \"ADMb!cdeO\" );\n\t/*11*/ test( \"22033251\", \"ADLKLa!ML\" );\n\t/*12*/ test( \"50511302122\", \"AGSjkTHTU!VW\" );\n\t/*13*/ test( \"000051\", \"ABHT!!!\" );\n\t/*14*/ test( \"1310105\", \"ACDKJW!V\" );\n\t/*15*/ test( \"50002103140\", \"AGSk!HU!IVIU\" );\n\t/*16*/ test( \"3112045\", \"AEDKYXKC\" );\n\t/*17*/ test( \"02021245535\", \"ABCIJW!JIHBS\" );\n\t/*18*/ test( \"014204\", \"ABIBCIB\" );\n\t/*19*/ test( \"255230\", \"ADAGAEA\" );\n\t/*20*/ test( \"443501\", \"AFPefgQ\" );\n\t/*21*/ test( \"022321\", \"ABCKLZ!\" );\n\t/*22*/ test( \"554452\", \"AGRh!!Q\" );\n\t/*23*/ test( \"051024\", \"ABSHTUH\" );\n\t/*24*/ test( \"524002\", \"AGAFGSB\" );\n\t/*25*/ test( \"54002441132\", \"AGQRjSRhRSGA\" );\n\t/*26*/ test( \"11010554312\", \"ACJV!!UTkSHI\" );\n\t/*27*/ test( \"23405300554\", \"ADMNEFOFGRi!\" );\n\t/*28*/ test( \"555353201\", \"AGRih!gPQG\" );\n\t/*29*/ test( \"22424105\", \"ADLMabaLD\" );\n\t/*30*/ test( \"11340202125\", \"ACJKDCKJX!!J\" );\n\t/*31*/ test( \"4524451\", \"AFQFPf!P\" );\n\t/*32*/ test( \"44434234050\", \"AFPf!!e!!Pgh\" );\n\t/*33*/ test( \"00554040132\", \"ABHk!j!i!jRG\" );\n\t/*34*/ test( \"3440403\", \"AEOePfgf\" );\n\t/*35*/ test( \"111130\", \"ACJW!XW\" );\n\t/*36*/ test( \"21133343125\", \"ADKXYZ!a!Z!L\" );\n\t/*37*/ test( \"353511\", \"AEFOPFA\" );\n\t/*38*/ test( \"22204115220\", \"ADLZYLY!KY!X\" );\n\t/*39*/ test( \"03013541\", \"ABABICBGB\" );\n\t/*40*/ test( \"101344\", \"ACIVJCA\" );\n\t/*41*/ test( \"2432541\", \"ADENbNdN\" );\n\t/*42*/ test( \"45332242015\", \"AFQPedc!!NME\" );\n\t/*43*/ test( \"215453\", \"ADKCAGF\" );\n\t/*44*/ test( \"45540523454\", \"AFQh!i!RQg!!\" );\n\t/*45*/ test( \"42434302545\", \"AFEOd!!ONOef\" );\n\n\treturn 0;\n}\n```"}