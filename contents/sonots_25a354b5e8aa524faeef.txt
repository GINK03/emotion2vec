{"tags": ["fluentdv0.12"], "context": " More than 1 year has passed since last update.Fluentd v0.12 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002git log \u3092\u898b\u308b\u306b v0.10.1 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u306f 2011/10/16 \u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\uff13\u5e74\u8d8a\u3057\u306e\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u81ea\u5206\u304c Fluentd \u306e\u958b\u767a\u306b\u643a\u308f\u3063\u3066\u304b\u3089\u521d\u3067\u3059\u306d\u3002\u611f\u6168\u6df1\u3044\u3002\nFluentd v0.12 \u306b\u306f Fluentd v0.12 is Released \u3067\u8a00\u53ca\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u4eca\u307e\u3067\u3042\u3063\u305f Input \u30d7\u30e9\u30b0\u30a4\u30f3\u3001Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u52a0\u3048\u3066\u3001Filter \u30d7\u30e9\u30b0\u30a4\u30f3 \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f\u305d\u306e\u4f7f\u3044\u65b9\u3001\u304a\u3088\u3073\u4f5c\u308a\u65b9\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n2014/12/30\u66f4\u65b0\n\nv0.12.2 \u3067 filter \u30e1\u30bd\u30c3\u30c9\u3067 nil \u3092\u8fd4\u3059\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u8a18\u4e8b\u3092\u4fee\u6b63\u3002cf. #515\n\n\u5408\u308f\u305b\u3066 v0.12.2 \u3067\u3001Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u30d8\u30eb\u30d1\u30fc\u304c\u8ffd\u52a0\u3055\u308c\u305f\u306e\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u4fee\u6b63\u3002cf. #519\n\n\n\n\u6982\u8aac\n\u4eca\u307e\u3067 Fluentd \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u52a0\u5de5\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u3044\u5834\u5408\u306f\u3001Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b Input \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u6df7\u5165\u3059\u308b\u3068\u3044\u3046\u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u3053\u3068\u3092\u3057\u3066\u5b9f\u73fe\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001fluent-plugin-grep\u3001fluent-plugin-record-reformer \u306a\u3069\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5897\u3048\u3066\u304d\u3066\u3001\u6bb5\u3005\u3068\u9700\u8981\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u305d\u3053\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\u65b0\u305f\u306bFilter\u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3044\u3046\u5c02\u7528\u306e\u4ed5\u7d44\u307f\u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u52b9\u7387\u3088\u304f\u3001\u4fbf\u5229\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3046\u306b\u306f <filter></filter> \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\nFluentd v0.12 \u306b\u306f fluent-plugin-grep \u3092 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u79fb\u690d\u3057\u305f grep Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3001fluent-plugin-record-reformer  \u3092 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u79fb\u690d\u3057\u305f record_transformer Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u5229\u7528\u3057\u305f conf \u3092\u4f8b\u3068\u3057\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n<source>\n  type dummy\n  tag raw.dummy\n  dummy {\"message\":\"[WARN] warning message\"}\n</source>\n\n<filter raw.**>\n  type grep\n  regexp1 message WARN\n</filter>\n\n<filter raw.**>\n  type record_transformer\n  <record>\n    tag ${tag}\n  </record>\n</filter>\n\n<match raw.**>\n  type stdout\n</match>\n\n\u4e0a\u304b\u3089\u9806\u756a\u306b filter \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u304d\u3001\u6700\u5f8c\u306b match \u306e output \u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002UNIX \u306e\u30d1\u30a4\u30d7\u307f\u305f\u3044\u3067\u3059\u306d\uff01\n\u6bd4\u8f03\u306e\u305f\u3081\u306b\u3001\u65e7\u6765\u306e Output \u30d7\u30e9\u30b0\u30a4\u30f3 \u3092\u5229\u7528\u3057\u305f conf \u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n<source>\n  type dummy\n  tag raw.dummy\n  dummy {\"message\":\"[WARN] warning message\"}\n</source>\n\n<match raw.**>\n  type grep\n  regexp1 message WARN\n  add_tag_prefix greped\n  remove_tag_prefix raw\n</match>\n\n<match greped.**>\n  type record_reformer\n  tag reformed\n  <record>\n    tag ${tag}\n  </record>\n</match>\n\n<filter reformed>\n  type stdout\n</match>\n\nadd_tag_prefix \u3084\u3089 remove_tag_prefix \u3084\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30bf\u30b0\u3092\u66f8\u304d\u63db\u3048\u3066\u3001match \u306e\u30d1\u30bf\u30fc\u30f3\u3082\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u306d\u3002Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3068\u3053\u306e\u3088\u3046\u306a\u7169\u308f\u3057\u3055\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u3084\u3063\u305f\uff01\u256d( \uff65\u3142\uff65)\u0648 \u0311\u0311 \n\u307e\u305f\u3001\u30bf\u30b0\u306e\u66f8\u304d\u63db\u3048\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u305f\u3081\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u3042\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u308a\u65b9\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u307e\u3060\u524d\u8ff0\u3057\u305f grep \u30d5\u30a3\u30eb\u30bf\u30fc\u3001record_transformer \u30d5\u30a3\u30eb\u30bf\u30fc\u306e\uff12\u3064\u3057\u304b\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u672c\u8a18\u4e8b\u3067\u306f Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u308a\u65b9\u3092\u4e2d\u5fc3\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e API \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Fluent::Filter \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3001\u6b21\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nmodule Fluent\n  class SomeFilter < Filter\n    # \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u767b\u9332\u3057\u307e\u3059\n    Plugin.register_filter('some', self)\n\n    # \u5f93\u6765\u306e Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u540c\u69d8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n    # start \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u524d\u306b\u547c\u3070\u308c\u307e\u3059\n    def configure(conf)\n      super\n      ...\n    end\n\n    # \u8d77\u52d5\u3059\u308b\u969b\u306b\u547c\u3070\u308c\u307e\u3059\n    def start\n      super\n      ...\n    end\n\n    # \u7d42\u4e86\u3059\u308b\u969b\u306b\u547c\u3070\u308c\u307e\u3059\n    def shutdown\n      super\n      ...\n    end\n\n    # \u30ec\u30b3\u30fc\u30c9\u3092\u5f04\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\n    # \u5f04\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u3092\u8fd4\u3057\u307e\u3059\n    # \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3057\u305f\u3044\u5834\u5408\u306f nil \u3092\u8fd4\u3057\u307e\u3059 (v0.12.2 \u304b\u3089)\n    # \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f filter_stream \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\n    def filter(tag, time, record)\n    end\n\n    # EventStream \u3092\u76f4\u63a5\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\n    # EventStream \u3092\u8fd4\u3057\u307e\u3059\n    def filter_stream(tag, es)\n      new_es = MultiEventStream.new\n      es.each { |time, record|\n        begin\n          filtered_record = filter(tag, time, record)\n          new_es.add(time, filtered_record) if filtered_record\n        rescue => e\n          router.emit_error_event(tag, time, record, e)\n        end\n      }\n      new_es\n    end\n  end\nend\n\n\nfilter(tag, time, record)\n\u5f15\u6570\u3067\u6e21\u3063\u3066\u304d\u305f record \u3092\u3044\u3058\u3063\u3066\u3001\u305d\u308c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3057\u305f\u3044\u5834\u5408\u306f nil \u3092\u304b\u3048\u3057\u307e\u3059 (v0.12.2 \u304b\u3089)\n\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u306f\u3067\u304d\u307e\u305b\u3093\u3002\nfilter \u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001filter_stream \u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nfilter_stream(tag, es)\nEventStream \u3092\u76f4\u63a5\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u3063\u305f\u308a\u3001\u8ffd\u52a0\u3057\u305f\u308a\u81ea\u7531\u5ea6\u306e\u9ad8\u3044\u51e6\u7406\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\nfilter_stream \u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001filter \u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\n\u8a66\u3057\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\uff12\u3064\u306b\u5897\u3084\u3059\u3060\u3051\u306e\u4f55\u306e\u5f79\u306b\u7acb\u3064\u306e\u304b\u5206\u304b\u3089\u306a\u3044 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u540d\u524d\u306f dup \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 lib/fluent/plugin/filter_dup.rb \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\n# lib/fluent/plugin/filter_dup.rb\nmodule Fluent\n  class DupFilter < Filter\n    Plugin.register_filter('dup', self)\n\n    def configure(conf)\n      super\n    end\n\n    def filter_stream(tag, es)\n      new_es = MultiEventStream.new\n      es.each { |time, record|\n        begin\n          new_es.add(time, record)\n          new_es.add(time, record) # \u3053\u3053\u3092\u5897\u3084\u3057\u305f\u3060\u3051\uff01\n        rescue => e\n          router.emit_error_event(tag, time, record, e)\n        end\n      }\n      new_es\n    end\n  end\nend\n\n\u52d5\u4f5c\u78ba\u8a8d\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306a conf \u3092\u66f8\u3044\u3066\u3001\n<source>\n  type forward\n</source>\n\n<filter **>\n  type dup\n</filter>\n\n<match **>\n  type stdout\n</match>\n\nfluentd \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002plugin \u3092\u304a\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092 -p \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n$ fluentd -c fluent.conf -p lib/fluent/plugin\n\nfluent-cat \u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n$ echo '{\"a\":\"foo\",\"b\":\"bar\"}' | fluent-cat raw.test\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\uff12\u3064\u306b\u5897\u3048\u3066\u51fa\u529b\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\ndup \u30d5\u30a3\u30eb\u30bf\u30fc\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\nrequire 'test/unit'\nrequire 'fluent/log'\nrequire 'fluent/test'\nrequire 'fluent/plugin/test_filter_dup'\n\nclass DupFilterTest < Test::Unit::TestCase\n  include Fluent\n\n  setup do\n    Fluent::Test.setup\n    @time = Fluent::Engine.now\n  end\n\n  def create_driver(conf = '')\n    Test::FilterTestDriver.new(DupFilter).configure(conf, true)\n  end\n\n  def filter(config, msgs)\n    d = create_driver(config)\n    d.run {\n      msgs.each {|msg|\n        d.filter(msg, @time) # Filter\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u901a\u3059\n      }\n    }\n    filtered = d.filtered_as_array # \u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b. [tag, time, record]\u306e\u914d\u5217\n    filtered.map {|m| m[2] } # record \u3060\u3051\u8fd4\u3059\n  end\n\n  sub_test_case 'configure' do\n    test 'check default' do\n      assert_nothing_raised { create_driver }\n    end\n  end\n\n  sub_test_case 'filter_stream' do\n    test 'dup' do\n      msg = {\"message\" => \"foo\"}\n      filtered = filter('', [msg])\n      assert_equal([msg, msg], filtered)\n    end\n  end\nend\n\nFilterTestDriver#run \u3067\u56f2\u3063\u305f\u30d6\u30ed\u30c3\u30af\u5185\u3067 #filter \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u901a\u3059\u3068\u3001filter_stream \u3067\u51e6\u7406\u3055\u308c\u305f\u7d50\u679c\u304c #filtered (EventStream \u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3001\u307e\u305f\u306f filtered_as_array (Array \u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e gem \u5316\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u3082\u3082\u3061\u308d\u3093 gem \u306b\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\n=> fluent-plugin-filter_dup\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306f Fluentd v0.12 \u4ee5\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u306e\u3067\u3001.gemspec \u306b\ns.add_runtime_dependency \"fluentd\", \">= 0.12\"\n\n\u3068\u66f8\u304f\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u3082\u3057\u304f\u306f\u3001\u81ea\u4f5c\u30d5\u30a3\u30eb\u30bf\u30fc\u7cfb Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u3059\u3067\u306b\u304a\u6301\u3061\u306e\u65b9\u306f\u540c\u3058 gem \u306b filter_xxx.rb \u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u306e\u3082\uff11\u624b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\u305d\u306e\u5834\u5408\u3001Fluentd v0.10 \u306e\u74b0\u5883\u306b gem \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u5834\u5408\u3067\u3082\u58ca\u3057\u3066\u3057\u307e\u308f\u306a\u3044\u3088\u3046\u306b\u3001Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n module Fluent\n   class DupFilter < Filter\n     ...\n-  end\n+  end if defined?(Filter) # Support only >= v0.12\n end\n\n\n\u304a\u308f\u308a\u306b\nFluentd v0.12 \u3067\u5c0e\u5165\u3055\u308c\u305f Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\u3001\u4f5c\u308a\u65b9\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3057\u305f\u3002\n\u3053\u308c\u304b\u3089\u306f\u3001\u304c\u3057\u304c\u3057 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3044\u3063\u3066\u6b32\u3057\u3044\u3067\u3059\u306d\uff3c\uff3c\\ \u0669( \u02d8\u03c9\u02d8 )\u0648 //\uff0f\uff0f\n\u53c2\u8003\u6587\u732e\n\nFluentd v0.12\u3067\u306eFilter\u3068Label - Go ahead!\nFluentd v0.12 is Released | Fluentd\n\nFluentd v0.12 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\u3002git log \u3092\u898b\u308b\u306b v0.10.1 \u304c\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u306e\u306f 2011/10/16 \u3068\u306e\u3053\u3068\u306a\u306e\u3067\u3001\uff13\u5e74\u8d8a\u3057\u306e\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u3068\u306a\u308a\u307e\u3057\u305f\u3002\u81ea\u5206\u304c Fluentd \u306e\u958b\u767a\u306b\u643a\u308f\u3063\u3066\u304b\u3089\u521d\u3067\u3059\u306d\u3002\u611f\u6168\u6df1\u3044\u3002\n\nFluentd v0.12 \u306b\u306f [Fluentd v0.12 is Released](http://www.fluentd.org/blog/fluentd-v0.12-is-released) \u3067\u8a00\u53ca\u3055\u308c\u3066\u3044\u308b\u3088\u3046\u306b\u3001\u4eca\u307e\u3067\u3042\u3063\u305f Input \u30d7\u30e9\u30b0\u30a4\u30f3\u3001Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u52a0\u3048\u3066\u3001**Filter \u30d7\u30e9\u30b0\u30a4\u30f3** \u3068\u3044\u3046\u4ed5\u7d44\u307f\u304c\u8ffd\u52a0\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u672c\u8a18\u4e8b\u3067\u306f\u305d\u306e\u4f7f\u3044\u65b9\u3001\u304a\u3088\u3073\u4f5c\u308a\u65b9\u3092\u89e3\u8aac\u3057\u307e\u3059\u3002\n\n**2014/12/30\u66f4\u65b0**\n\n* v0.12.2 \u3067 `filter` \u30e1\u30bd\u30c3\u30c9\u3067 `nil` \u3092\u8fd4\u3059\u3068\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u8a18\u4e8b\u3092\u4fee\u6b63\u3002cf. [#515](https://github.com/fluent/fluentd/pull/515)\n* \u5408\u308f\u305b\u3066 v0.12.2 \u3067\u3001Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u30d8\u30eb\u30d1\u30fc\u304c\u8ffd\u52a0\u3055\u308c\u305f\u306e\u3067\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3092\u4fee\u6b63\u3002cf. [#519](https://github.com/fluent/fluentd/pull/519)\n\n## \u6982\u8aac\n\n\u4eca\u307e\u3067 Fluentd \u3067\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u52a0\u5de5\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u3044\u5834\u5408\u306f\u3001Output \u30d7\u30e9\u30b0\u30a4\u30f3\u306b Input \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u3088\u3046\u306a\u5b9f\u88c5\u3092\u6df7\u5165\u3059\u308b\u3068\u3044\u3046\u5c11\u3057\u30c8\u30ea\u30c3\u30ad\u30fc\u306a\u3053\u3068\u3092\u3057\u3066\u5b9f\u73fe\u3057\u3066\u304d\u307e\u3057\u305f\u3002\u4f8b\u3048\u3070\u3001[fluent-plugin-grep](https://github.com/sonots/fluent-plugin-grep)\u3001[fluent-plugin-record-reformer](https://github.com/sonots/fluent-plugin-record-reformer) \u306a\u3069\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u305d\u3046\u3067\u3059\u3002\u3053\u306e\u3088\u3046\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5897\u3048\u3066\u304d\u3066\u3001\u6bb5\u3005\u3068\u9700\u8981\u304c\u3042\u308b\u3053\u3068\u304c\u308f\u304b\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\n\u305d\u3053\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u306b\u5bfe\u3057\u3066\u3001\u65b0\u305f\u306b**Filter\u30d7\u30e9\u30b0\u30a4\u30f3**\u3068\u3044\u3046\u5c02\u7528\u306e\u4ed5\u7d44\u307f\u304c\u5c0e\u5165\u3055\u308c\u307e\u3057\u305f\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u3001\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u51e6\u7406\u3092\u52b9\u7387\u3088\u304f\u3001\u4fbf\u5229\u306b\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f7f\u3046\u306b\u306f `<filter></filter>` \u30c7\u30a3\u30ec\u30af\u30c6\u30a3\u30d6\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002\n\nFluentd v0.12 \u306b\u306f [fluent-plugin-grep](https://github.com/sonots/fluent-plugin-grep) \u3092 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u79fb\u690d\u3057\u305f [grep](https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin/filter_grep.rb) Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3001[fluent-plugin-record-reformer](https://github.com/sonots/fluent-plugin-record-reformer)  \u3092 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u3066\u79fb\u690d\u3057\u305f [record_transformer](https://github.com/fluent/fluentd/blob/master/lib/fluent/plugin/filter_record_transformer.rb) Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u540c\u68b1\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3089\u3092\u5229\u7528\u3057\u305f conf \u3092\u4f8b\u3068\u3057\u3066\u66f8\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```apache\n<source>\n  type dummy\n  tag raw.dummy\n  dummy {\"message\":\"[WARN] warning message\"}\n</source>\n\n<filter raw.**>\n  type grep\n  regexp1 message WARN\n</filter>\n\n<filter raw.**>\n  type record_transformer\n  <record>\n    tag ${tag}\n  </record>\n</filter>\n\n<match raw.**>\n  type stdout\n</match>\n```\n\n\u4e0a\u304b\u3089\u9806\u756a\u306b filter \u304c\u9069\u7528\u3055\u308c\u3066\u3044\u304d\u3001\u6700\u5f8c\u306b match \u306e output \u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5b9f\u884c\u3055\u308c\u308b\u3068\u3044\u3046\u52d5\u304d\u306b\u306a\u308a\u307e\u3059\u3002UNIX \u306e\u30d1\u30a4\u30d7\u307f\u305f\u3044\u3067\u3059\u306d\uff01\n\n\n\u6bd4\u8f03\u306e\u305f\u3081\u306b\u3001\u65e7\u6765\u306e Output \u30d7\u30e9\u30b0\u30a4\u30f3 \u3092\u5229\u7528\u3057\u305f conf \u3092\u66f8\u3044\u3066\u307f\u307e\u3059\u3002\n\n```apache\n<source>\n  type dummy\n  tag raw.dummy\n  dummy {\"message\":\"[WARN] warning message\"}\n</source>\n\n<match raw.**>\n  type grep\n  regexp1 message WARN\n  add_tag_prefix greped\n  remove_tag_prefix raw\n</match>\n\n<match greped.**>\n  type record_reformer\n  tag reformed\n  <record>\n    tag ${tag}\n  </record>\n</match>\n\n<filter reformed>\n  type stdout\n</match>\n```\n\n`add_tag_prefix` \u3084\u3089 `remove_tag_prefix` \u3084\u3089\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3063\u3066\u30bf\u30b0\u3092\u66f8\u304d\u63db\u3048\u3066\u3001match \u306e\u30d1\u30bf\u30fc\u30f3\u3082\u66f8\u304d\u63db\u3048\u3066\u3044\u307e\u3059\u306d\u3002Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3046\u3068\u3053\u306e\u3088\u3046\u306a\u7169\u308f\u3057\u3055\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\u3002\u3084\u3063\u305f\uff01\u256d( \uff65\u3142\uff65)\u0648 \u0311\u0311 \n\n\u307e\u305f\u3001\u30bf\u30b0\u306e\u66f8\u304d\u63db\u3048\u51e6\u7406\u3092\u30b9\u30ad\u30c3\u30d7\u3067\u304d\u308b\u305f\u3081\u3001\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3082\u3042\u304c\u3063\u3066\u3044\u307e\u3059\u3002\n\n<blockquote class=\"twitter-tweet\" lang=\"ja\"><p>444MB\u306e\u30d5\u30a1\u30a4\u30eb\u3092record_reformer\u3092\u631f\u3093\u3067\u8ee2\u9001\u3059\u308b\u7c21\u5358\u306a\u30d9\u30f3\u30c1\u30de\u30fc\u30af\uff0cv0.10\u3060\u3068181\u79d2\u639b\u304b\u3063\u305f\u3051\u3069\uff0cv0.12\u3060\u3068149\u79d2\u3067\u7d42\u308f\u3063\u305f\uff0e\u3084\u3063\u3071\u308a\u30bf\u30b0\u306e\u66f8\u304d\u63db\u3048\u3068emit\u304c\u6e1b\u308b\u304b\u3089\u901f\u304f\u306a\u3063\u3066\u308b\u306a\u2026\u3088\u304b\u3063\u305f <a href=\"https://twitter.com/hashtag/fluentd?src=hash\">#fluentd</a></p>&mdash; Mr. Fiber (@repeatedly) <a href=\"https://twitter.com/repeatedly/status/503602766980214784\">2014, 8\u6708 24</a></blockquote>\n<script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\n## Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u308a\u65b9\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306f\u307e\u3060\u524d\u8ff0\u3057\u305f grep \u30d5\u30a3\u30eb\u30bf\u30fc\u3001record_transformer \u30d5\u30a3\u30eb\u30bf\u30fc\u306e\uff12\u3064\u3057\u304b\u5b58\u5728\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u672c\u8a18\u4e8b\u3067\u306f Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f5c\u308a\u65b9\u3092\u4e2d\u5fc3\u306b\u89e3\u8aac\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e API \u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002Fluent::Filter \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u3066\u3001\u6b21\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n```ruby\nmodule Fluent\n  class SomeFilter < Filter\n    # \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u767b\u9332\u3057\u307e\u3059\n    Plugin.register_filter('some', self)\n\n    # \u5f93\u6765\u306e Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u540c\u69d8\u306b\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n    # start \u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u308b\u524d\u306b\u547c\u3070\u308c\u307e\u3059\n    def configure(conf)\n      super\n      ...\n    end\n\n    # \u8d77\u52d5\u3059\u308b\u969b\u306b\u547c\u3070\u308c\u307e\u3059\n    def start\n      super\n      ...\n    end\n\n    # \u7d42\u4e86\u3059\u308b\u969b\u306b\u547c\u3070\u308c\u307e\u3059\n    def shutdown\n      super\n      ...\n    end\n\n    # \u30ec\u30b3\u30fc\u30c9\u3092\u5f04\u308a\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u307e\u3059\n    # \u5f04\u3063\u305f\u30ec\u30b3\u30fc\u30c9\u3092\u8fd4\u3057\u307e\u3059\n    # \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3057\u305f\u3044\u5834\u5408\u306f nil \u3092\u8fd4\u3057\u307e\u3059 (v0.12.2 \u304b\u3089)\n    # \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3057\u305f\u3044\u5834\u5408\u306f filter_stream \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\n    def filter(tag, time, record)\n    end\n\n    # EventStream \u3092\u76f4\u63a5\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\n    # EventStream \u3092\u8fd4\u3057\u307e\u3059\n    def filter_stream(tag, es)\n      new_es = MultiEventStream.new\n      es.each { |time, record|\n        begin\n          filtered_record = filter(tag, time, record)\n          new_es.add(time, filtered_record) if filtered_record\n        rescue => e\n          router.emit_error_event(tag, time, record, e)\n        end\n      }\n      new_es\n    end\n  end\nend\n```\n\n### filter(tag, time, record)\n\n\u5f15\u6570\u3067\u6e21\u3063\u3066\u304d\u305f record \u3092\u3044\u3058\u3063\u3066\u3001\u305d\u308c\u3092\u8fd4\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u9664\u3057\u305f\u3044\u5834\u5408\u306f nil \u3092\u304b\u3048\u3057\u307e\u3059 (v0.12.2 \u304b\u3089)\n\n\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u8ffd\u52a0\u3059\u308b\u51e6\u7406\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\n`filter` \u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001`filter_stream` \u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n### filter_stream(tag, es)\n\nEventStream \u3092\u76f4\u63a5\u51e6\u7406\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u5b9f\u88c5\u3057\u307e\u3059\u3002\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u524a\u3063\u305f\u308a\u3001\u8ffd\u52a0\u3057\u305f\u308a\u81ea\u7531\u5ea6\u306e\u9ad8\u3044\u51e6\u7406\u3092\u3057\u305f\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u5b9f\u88c5\u3057\u307e\u3059\u3002\n\n`filter_stream` \u3092\u5b9f\u88c5\u3059\u308b\u5834\u5408\u3001`filter` \u3092\u5909\u66f4\u3059\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n## Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u5b9f\u88c5\u30b5\u30f3\u30d7\u30eb\n\n\u8a66\u3057\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\uff12\u3064\u306b\u5897\u3084\u3059\u3060\u3051\u306e\u4f55\u306e\u5f79\u306b\u7acb\u3064\u306e\u304b\u5206\u304b\u3089\u306a\u3044 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u6210\u3057\u3066\u307f\u307e\u3059\u3002\u540d\u524d\u306f dup \u30d7\u30e9\u30b0\u30a4\u30f3\u3068\u3057\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u3092 `lib/fluent/plugin/filter_dup.rb` \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u4fdd\u5b58\u3057\u307e\u3059\u3002\n\n```ruby\n# lib/fluent/plugin/filter_dup.rb\nmodule Fluent\n  class DupFilter < Filter\n    Plugin.register_filter('dup', self)\n\n    def configure(conf)\n      super\n    end\n\n    def filter_stream(tag, es)\n      new_es = MultiEventStream.new\n      es.each { |time, record|\n        begin\n          new_es.add(time, record)\n          new_es.add(time, record) # \u3053\u3053\u3092\u5897\u3084\u3057\u305f\u3060\u3051\uff01\n        rescue => e\n          router.emit_error_event(tag, time, record, e)\n        end\n      }\n      new_es\n    end\n  end\nend\n```\n\n\u52d5\u4f5c\u78ba\u8a8d\u3068\u3057\u3066\u6b21\u306e\u3088\u3046\u306a conf \u3092\u66f8\u3044\u3066\u3001\n\n```apache\n<source>\n  type forward\n</source>\n\n<filter **>\n  type dup\n</filter>\n\n<match **>\n  type stdout\n</match>\n```\n\nfluentd \u3092\u8d77\u52d5\u3057\u307e\u3059\u3002plugin \u3092\u304a\u3044\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092 -p \u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```\n$ fluentd -c fluent.conf -p lib/fluent/plugin\n```\n\nfluent-cat \u3067\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u9001\u3063\u3066\u307f\u307e\u3057\u3087\u3046\n\n```\n$ echo '{\"a\":\"foo\",\"b\":\"bar\"}' | fluent-cat raw.test\n```\n\n\u30e1\u30c3\u30bb\u30fc\u30b8\u304c\uff12\u3064\u306b\u5897\u3048\u3066\u51fa\u529b\u3055\u308c\u305f\u3089\u6210\u529f\u3067\u3059\u3002\n\n## Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u306e\u66f8\u304d\u65b9\n\ndup \u30d5\u30a3\u30eb\u30bf\u30fc\u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u30c6\u30b9\u30c8\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```ruby\nrequire 'test/unit'\nrequire 'fluent/log'\nrequire 'fluent/test'\nrequire 'fluent/plugin/test_filter_dup'\n\nclass DupFilterTest < Test::Unit::TestCase\n  include Fluent\n\n  setup do\n    Fluent::Test.setup\n    @time = Fluent::Engine.now\n  end\n\n  def create_driver(conf = '')\n    Test::FilterTestDriver.new(DupFilter).configure(conf, true)\n  end\n\n  def filter(config, msgs)\n    d = create_driver(config)\n    d.run {\n      msgs.each {|msg|\n        d.filter(msg, @time) # Filter\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u901a\u3059\n      }\n    }\n    filtered = d.filtered_as_array # \u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b. [tag, time, record]\u306e\u914d\u5217\n    filtered.map {|m| m[2] } # record \u3060\u3051\u8fd4\u3059\n  end\n\n  sub_test_case 'configure' do\n    test 'check default' do\n      assert_nothing_raised { create_driver }\n    end\n  end\n\n  sub_test_case 'filter_stream' do\n    test 'dup' do\n      msg = {\"message\" => \"foo\"}\n      filtered = filter('', [msg])\n      assert_equal([msg, msg], filtered)\n    end\n  end\nend\n```\n\n`FilterTestDriver#run` \u3067\u56f2\u3063\u305f\u30d6\u30ed\u30c3\u30af\u5185\u3067 `#filter` \u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u901a\u3059\u3068\u3001`filter_stream` \u3067\u51e6\u7406\u3055\u308c\u305f\u7d50\u679c\u304c `#filtered` (EventStream \u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3001\u307e\u305f\u306f `filtered_as_array` (Array \u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002\n\n## Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e gem \u5316\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u3082\u3082\u3061\u308d\u3093 gem \u306b\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3053\u3093\u306a\u304b\u3093\u3058\u3067\u3059\n=> [fluent-plugin-filter_dup](https://github.com/sonots/fluent-plugin-filter_dup)\n\nFilter \u30d7\u30e9\u30b0\u30a4\u30f3\u306f Fluentd v0.12 \u4ee5\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u306e\u3067\u3001.gemspec \u306b\n\n```ruby\ns.add_runtime_dependency \"fluentd\", \">= 0.12\"\n```\n\n\u3068\u66f8\u304f\u3088\u3046\u306b\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n<hr />\n\n\u3082\u3057\u304f\u306f\u3001\u81ea\u4f5c\u30d5\u30a3\u30eb\u30bf\u30fc\u7cfb Output \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u3059\u3067\u306b\u304a\u6301\u3061\u306e\u65b9\u306f\u540c\u3058 gem \u306b `filter_xxx.rb` \u30d5\u30a1\u30a4\u30eb\u3092\u542b\u3081\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u306e\u3082\uff11\u624b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u305d\u306e\u5834\u5408\u3001Fluentd v0.10 \u306e\u74b0\u5883\u306b gem \u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u5834\u5408\u3067\u3082\u58ca\u3057\u3066\u3057\u307e\u308f\u306a\u3044\u3088\u3046\u306b\u3001Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5b9f\u88c5\u3059\u308b\u3068\u826f\u3044\u3067\u3057\u3087\u3046\u3002\n\n```diff\n module Fluent\n   class DupFilter < Filter\n     ...\n-  end\n+  end if defined?(Filter) # Support only >= v0.12\n end\n```\n\n## \u304a\u308f\u308a\u306b\n\nFluentd v0.12 \u3067\u5c0e\u5165\u3055\u308c\u305f Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4f7f\u3044\u65b9\u3001\u4f5c\u308a\u65b9\u306b\u3064\u3044\u3066\u89e3\u8aac\u3057\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u304b\u3089\u306f\u3001\u304c\u3057\u304c\u3057 Filter \u30d7\u30e9\u30b0\u30a4\u30f3\u306e\u4ed5\u7d44\u307f\u3092\u4f7f\u3063\u3066\u3044\u3063\u3066\u6b32\u3057\u3044\u3067\u3059\u306d\uff3c\uff3c\\\\ \u0669( \u02d8\u03c9\u02d8 )\u0648 //\uff0f\uff0f\n\n\n**\u53c2\u8003\u6587\u732e**\n\n1. [Fluentd v0.12\u3067\u306eFilter\u3068Label - Go ahead!](http://repeatedly.github.io/ja/2014/08/fluentd-filter-and-label/)\n2. [Fluentd v0.12 is Released | Fluentd](http://www.fluentd.org/blog/fluentd-v0.12-is-released)\n"}