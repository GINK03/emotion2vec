{"tags": ["golang", "\u65b0\u4eba", "Excercise", "maps"], "context": " More than 1 year has passed since last update.\u3053\u3061\u3089\u304c\u554f\u984c\u6587\nA Tour of Go\nExercise: Maps\nWordCount \u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6587\u5b57\u5217 s \u306e \u201cword\u201d \u306e\u6570\u306emap\u3092\u623b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 wc.Test \u95a2\u6570\u306f\u3001\u5f15\u6570\u306b\u6e21\u3057\u305f\u95a2\u6570\u306b\u5bfe\u3057\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u5b9f\u884c\u3057\u3001\u6210\u529f\u304b\u5931\u6557\u304b\u3092\u7d50\u679c\u306b\u8868\u793a\u3057\u307e\u3059\u3002\nstrings.Fields \u3067\u3001\u4f55\u304b\u30d2\u30f3\u30c8\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\npackage main\nimport (\n    \"code.google.com/p/go-tour/wc\"\n)\nfunc WordCount(s string) map[string]int {\n    return map[string]int{\"x\": 1}\n}\n\nfunc main() {\n    wc.Test(WordCount)\n}\n\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nimport \u306b \"fmt\"\u3092\u8ffd\u52a0\u3057\u3066 S\u306e\u4e2d\u8eab\u3092\u307f\u3066\u307f\u305f\u3002\nimport (\n    \"code.google.com/p/go-tour/wc\"\n    \"fmt\"\n)\nfunc WordCount(s string) map[string]int {\n\u3000\u3000fmt.Println(s)\n    return map[string]int{\"x\": 1}\n}\n\n....\noutput:\nI am learning Go!\n...\n\u306a\u308b\u307b\u3069\u3002 \nJava\u307d\u304f\u8003\u3048\u308b\u3068\u3001string s\u3092split \u3068\u3057\u3066\u3001map\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3057\u3001\u306a\u3051\u308c\u3070\u8ffd\u52a0\u3001\u3042\u308c\u3070Value\u3092\u66f4\u65b0\u3067\u3044\u3051\u308b\u304b\u306a\u3002\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nfunc WordCount(s string) map[string]int {\n    m := make(map[string]int)\n    for _, s_token := range strings.Split(s, \" \"){\n        v, ok := m[s_token]\n        if ok {\n            m[s_token]++\n        }else{\n            m[s_token] = 1\n        }\n    }\n    return m\n}\n\ngolang\u306f range [array] \u3063\u3066\u3084\u308b\u3068\u3001\u3000index, element \u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\n1\u500b\u76ee\u306e\u3064\u304b\u308f\u306a\u3044Index\u306f\u3000_\u3000\u3067\u6368\u3066\u3066\u3001\u4e2d\u8eab\u3060\u3051\u4f7f\u3063\u3066\u307e\u3059\u3002 \nmap[key] \u306f value, ok(key\u306e\u6709\u7121)\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\n\u3082\u3057\u3001key\u304c\u3042\u308c\u3070value\u3092+1\u3057\u3066\u3001\u306a\u3051\u308c\u3070\uff11\u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3067\u3082\u52d5\u304f\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3060\u3068Java\u3067\u3057\u304b\u306a\u304f\u3001Golang\u307d\u304f\u306a\u3044\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\n\u306a\u3093\u3068\u3000map[key]++\u3000\u3053\u308c\u3060\u3051\u3067\u3001\u7121\u3051\u308c\u3070\u633f\u5165\u3001\u3042\u308c\u3070\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066\u304f\u308c\u308b\u3089\u3057\u3044\n\u3042\u3068\u3001Split(s, \" \") = Fields.(s) \u3089\u3057\u3044\u306e\u3067\u5909\u66f4\u3057\u305f\u7d50\u679c\u304c\u3053\u3061\u3089\u3002\n...\nfunc WordCount(s string) map[string]int {\n    m := make(map[string]int)\n    for _, s_token := range strings.Fields(s){\n        m[s_token]++\n    }\n    return m\n}\n...\n\n\u591a\u5c11\u898b\u3084\u3059\u304f\u306a\u3063\u305f\u304b\u306a\u3002\n\u3053\u3061\u3089\u304c\u554f\u984c\u6587\n\nA Tour of Go\nExercise: Maps\n\nWordCount \u95a2\u6570\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6587\u5b57\u5217 s \u306e \u201cword\u201d \u306e\u6570\u306emap\u3092\u623b\u3059\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002 wc.Test \u95a2\u6570\u306f\u3001\u5f15\u6570\u306b\u6e21\u3057\u305f\u95a2\u6570\u306b\u5bfe\u3057\u30c6\u30b9\u30c8\u30b9\u30a4\u30fc\u30c8\u3092\u5b9f\u884c\u3057\u3001\u6210\u529f\u304b\u5931\u6557\u304b\u3092\u7d50\u679c\u306b\u8868\u793a\u3057\u307e\u3059\u3002\n\nstrings.Fields \u3067\u3001\u4f55\u304b\u30d2\u30f3\u30c8\u3092\u5f97\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u306f\u305a\u3067\u3059\u3002\n\n```\npackage main\nimport (\n    \"code.google.com/p/go-tour/wc\"\n)\nfunc WordCount(s string) map[string]int {\n    return map[string]int{\"x\": 1}\n}\n\nfunc main() {\n    wc.Test(WordCount)\n}\n```\n\n\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\nimport \u306b \"fmt\"\u3092\u8ffd\u52a0\u3057\u3066 S\u306e\u4e2d\u8eab\u3092\u307f\u3066\u307f\u305f\u3002\n\n```\nimport (\n    \"code.google.com/p/go-tour/wc\"\n    \"fmt\"\n)\nfunc WordCount(s string) map[string]int {\n\u3000\u3000fmt.Println(s)\n    return map[string]int{\"x\": 1}\n}\n```\n\n....\n\noutput:\nI am learning Go!\n...\n\n\u306a\u308b\u307b\u3069\u3002 \nJava\u307d\u304f\u8003\u3048\u308b\u3068\u3001string s\u3092split \u3068\u3057\u3066\u3001map\u306b\u3042\u308b\u304b\u3092\u5224\u5b9a\u3057\u3001\u306a\u3051\u308c\u3070\u8ffd\u52a0\u3001\u3042\u308c\u3070Value\u3092\u66f4\u65b0\u3067\u3044\u3051\u308b\u304b\u306a\u3002\n\u66f8\u3044\u305f\u30b3\u30fc\u30c9\u304c\u3053\u3061\u3089\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n\n```\nfunc WordCount(s string) map[string]int {\n    m := make(map[string]int)\n    for _, s_token := range strings.Split(s, \" \"){\n        v, ok := m[s_token]\n        if ok {\n        \tm[s_token]++\n        }else{\n        \tm[s_token] = 1\n        }\n    }\n    return m\n}\n```\n\ngolang\u306f range [array] \u3063\u3066\u3084\u308b\u3068\u3001\u3000index, element \u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\n1\u500b\u76ee\u306e\u3064\u304b\u308f\u306a\u3044Index\u306f\u3000_\u3000\u3067\u6368\u3066\u3066\u3001\u4e2d\u8eab\u3060\u3051\u4f7f\u3063\u3066\u307e\u3059\u3002 \nmap[key] \u306f value, ok(key\u306e\u6709\u7121)\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3067\n\u3082\u3057\u3001key\u304c\u3042\u308c\u3070value\u3092+1\u3057\u3066\u3001\u306a\u3051\u308c\u3070\uff11\u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3067\u3082\u52d5\u304f\u3093\u3067\u3059\u304c\u3001\u3053\u308c\u3060\u3068Java\u3067\u3057\u304b\u306a\u304f\u3001Golang\u307d\u304f\u306a\u3044\u306e\u3067\u3001\u3044\u308d\u3044\u308d\u8abf\u3079\u3066\u307f\u305f\u3068\u3053\u308d\n\n\u306a\u3093\u3068\u3000map[key]++\u3000\u3053\u308c\u3060\u3051\u3067\u3001\u7121\u3051\u308c\u3070\u633f\u5165\u3001\u3042\u308c\u3070\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3057\u3066\u304f\u308c\u308b\u3089\u3057\u3044\n\u3042\u3068\u3001Split(s, \" \") = Fields.(s) \u3089\u3057\u3044\u306e\u3067\u5909\u66f4\u3057\u305f\u7d50\u679c\u304c\u3053\u3061\u3089\u3002\n\n```\n...\nfunc WordCount(s string) map[string]int {\n    m := make(map[string]int)\n    for _, s_token := range strings.Fields(s){\n   \t\tm[s_token]++\n    }\n    return m\n}\n...\n```\n\n\u591a\u5c11\u898b\u3084\u3059\u304f\u306a\u3063\u305f\u304b\u306a\u3002\n\n\n"}