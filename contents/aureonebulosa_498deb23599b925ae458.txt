{"context": " More than 1 year has passed since last update.\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066jinja2\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u30ea\u30b9\u30c8\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3002\n\n\npip install pymongo\u3067pymongo\u3092\u5165\u308c\u3066\u5f8c\u306f\u4efb\u305b\u308b\u3002\npython\u306e\u30ea\u30b9\u30c8\u3068\u8f9e\u66f8\u3092\u3061\u3083\u3093\u3068\u52c9\u5f37\u3059\u308b\u3053\u3068\u3002\nobjectID\u304c\u3042\u308b\u306e\u3067json\u3067\u56f0\u308b\u554f\u984c\u306f\u30b0\u30b0\u308b\u3068\u307f\u3093\u306a\u305d\u3046\u3089\u3057\u3044\u3001BSON\u3067from bson.json_util import dumps, loads\u3059\u308b\u306e\u306f\u3084\u3063\u3066\u307f\u305f\u3002\n\u3068\u308a\u3042\u3048\u305a{name:\"name\"}\u3068\u3044\u3046\u30c7\u30fc\u30bf\u306e\"name\"\u3092jinja2\u3067for\u30eb\u30fc\u30d7\u8868\u793a\u3059\u308b\u306e\u306b\u3001\u3053\u306e\u65b9\u6cd5\u3067\u8a66\u3057\u305f\u3002\nheroku\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d1\u30b9\u3068\u304b\u5909\u3048\u308b\u306f\u305a\u306a\u306e\u3067\uff08\u53c2\u8003\uff09\u3001\u307e\u305f\u3042\u3068\u3067\u3084\u3063\u3066\u307f\u308b\u3002\n\n\napp.py\n\nrom bottle import run, get, post, request\nfrom bottle import TEMPLATE_PATH, jinja2_template as template\nimport pymongo\nimport bottle\n\n@app.route('/', method=['GET' ,'POST'])\ndef index():\n    if request.method=='POST':\n\n        name = request.forms.get(\"name\")\n\n        conn=pymongo.Connection()\n        db=conn.mydb\n        db.mycol\n        db.mycol.save({\"name\":name})\n\n        result = db.mycol.find()\n        viewmodel=[]\n        for row in result:\n          l = dict()\n          for column in row:\n            l[str(column)]=row[column]\n            viewmodel.append(l)\n\n        return template('form.html', mylist = viewmodel)\n\n    elif request.method ==\"GET\":\n\n        conn=pymongo.Connection()\n        db=conn.mydb\n        db.mycol\n\n\n        result = db.mycol.find()\n        viewmodel=[]\n        for row in result:\n          l = dict()\n          for column in row:\n            l[str(column)]=row[column]\n            viewmodel.append(l)\n\n        return template('form.html', mylist = viewmodel)\n\n\n\n\nform.html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Document</title>\n</head>\n<body>\n\n<form method=\"post\" action=\"/\">\n\n<p>name: <input \"form-control\" type=\"text\" name=\"name\" size=\"50\"></p>\n\n<p><input type=\"submit\" value=\"OK\"></p>\n\n</form>\n\n{{name}}\n\n<br>\n<ul>\n{% for item in mylist %}\n<li>{{item}}</li>\n{% endfor %}\n</ul>\n\n<br>\n<ul>\n{% for item in mylist %}\n<li>{{item.name}}</li>\n{% endfor %}\n</ul>\n\n\n</body>\n</html>\n\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u63a5\u7d9a\u3057\u3066jinja2\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067\u30ea\u30b9\u30c8\u8868\u793a\u3059\u308b\u3068\u3053\u308d\u307e\u3067\u3002\n\n* ``pip install pymongo``\u3067pymongo\u3092\u5165\u308c\u3066\u5f8c\u306f\u4efb\u305b\u308b\u3002\n* python\u306e\u30ea\u30b9\u30c8\u3068\u8f9e\u66f8\u3092\u3061\u3083\u3093\u3068\u52c9\u5f37\u3059\u308b\u3053\u3068\u3002\n* objectID\u304c\u3042\u308b\u306e\u3067json\u3067\u56f0\u308b\u554f\u984c\u306f\u30b0\u30b0\u308b\u3068\u307f\u3093\u306a\u305d\u3046\u3089\u3057\u3044\u3001BSON\u3067``from bson.json_util import dumps, loads``\u3059\u308b\u306e\u306f\u3084\u3063\u3066\u307f\u305f\u3002\n* \u3068\u308a\u3042\u3048\u305a{name:\"name\"}\u3068\u3044\u3046\u30c7\u30fc\u30bf\u306e\"name\"\u3092jinja2\u3067for\u30eb\u30fc\u30d7\u8868\u793a\u3059\u308b\u306e\u306b\u3001<a href=\"http://stackoverflow.com/questions/11166763/python-bottle-template-issue-attributeerrordict-object-has-no-attribute-ci\">\u3053\u306e\u65b9\u6cd5</a>\u3067\u8a66\u3057\u305f\u3002\n* heroku\u306b\u30c7\u30d7\u30ed\u30a4\u3059\u308b\u3068\u304d\u306b\u306f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306e\u30d1\u30b9\u3068\u304b\u5909\u3048\u308b\u306f\u305a\u306a\u306e\u3067\uff08<a href=\"https://1000ch.net/posts/2014/flask-mongodb-polymer.html\">\u53c2\u8003</a>\uff09\u3001\u307e\u305f\u3042\u3068\u3067\u3084\u3063\u3066\u307f\u308b\u3002\n\n\n\n```py:app.py\n\nrom bottle import run, get, post, request\nfrom bottle import TEMPLATE_PATH, jinja2_template as template\nimport pymongo\nimport bottle\n\n@app.route('/', method=['GET' ,'POST'])\ndef index():\n    if request.method=='POST':\n\n        name = request.forms.get(\"name\")\n\n        conn=pymongo.Connection()\n        db=conn.mydb\n        db.mycol\n        db.mycol.save({\"name\":name})\n\n        result = db.mycol.find()\n        viewmodel=[]\n        for row in result:\n          l = dict()\n          for column in row:\n            l[str(column)]=row[column]\n            viewmodel.append(l)\n\n        return template('form.html', mylist = viewmodel)\n\n    elif request.method ==\"GET\":\n\n        conn=pymongo.Connection()\n        db=conn.mydb\n        db.mycol\n\n\n        result = db.mycol.find()\n        viewmodel=[]\n        for row in result:\n          l = dict()\n          for column in row:\n            l[str(column)]=row[column]\n            viewmodel.append(l)\n\n        return template('form.html', mylist = viewmodel)\n\n```\n\n\n\n```html:form.html\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n\t<meta charset=\"UTF-8\">\n\t<title>Document</title>\n</head>\n<body>\n\t\n<form method=\"post\" action=\"/\">\n\n<p>name: <input \"form-control\" type=\"text\" name=\"name\" size=\"50\"></p>\n\n<p><input type=\"submit\" value=\"OK\"></p>\n\n</form>\n\n{{name}}\n\n<br>\n<ul>\n{% for item in mylist %}\n<li>{{item}}</li>\n{% endfor %}\n</ul>\n\n<br>\n<ul>\n{% for item in mylist %}\n<li>{{item.name}}</li>\n{% endfor %}\n</ul>\n\n\n</body>\n</html>\n\n```\n", "tags": ["bottle"]}