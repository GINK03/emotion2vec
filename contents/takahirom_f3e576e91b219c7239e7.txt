{"context": "\n\n\u6982\u8981\nRxJava2.0\u3067Observable\u306b\u4f3c\u305fFlowable\u3084Maybe\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\u307e\u305fSingle\u3084Completable\u3082\u4ee5\u524d\u304b\u3089\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3064\u307e\u308aObservable, Flowable, Single, Maybe, Completable\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306fObservable\u306e\u3088\u3046\u306b\u3001item(Java\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u3069)\u3092emit(\u6392\u51fa)\u3057\u307e\u3059\u3002\n\u4f7f\u3044\u5206\u3051\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u4f7f\u3046\u5074\u306eObserver(Subscriber)\u3067\u8003\u3048\u308b\u3053\u3068\u3092\u6e1b\u3089\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u3001\u3069\u306e\u3088\u3046\u306b\u4f7f\u3044\u5206\u3051\u308b\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\nFlowable\u306fBackpressure\u306b\u95a2\u3059\u308b\u3082\u306e\u3067\u5c11\u3057\u30b8\u30e3\u30f3\u30eb\u304c\u9055\u3046\u306e\u3067\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002(\u6b63\u76f4\u81ea\u5206\u304cBackpressure\u304c\u5fc5\u8981\u306b\u306a\u308b\u307b\u3069\u4f7f\u3044\u3053\u306a\u305b\u3066\u3044\u306a\u3044\u3067\u3059\u3002\u3002)\n\u4f55\u304b\u8aa4\u308a\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u304a\u9858\u3044\u3057\u307e\u3059\u3002(\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002)\n\n\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3068\u4f7f\u3044\u5206\u3051\n\nObservable\u304a\u3055\u3089\u3044\nObservable\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f55\u56de\u3082item\u3092emit\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\"Hello\"\u3092emitter.onNext\u3092\u547c\u3076\u3053\u3068\u3067\u4e09\u56deemit\u3057\u3066\u3044\u307e\u3059\u3002\nObservable.create((ObservableOnSubscribe<String>) emitter -> {\n    try {\n        // \u6587\u5b57\u5217\"Hello\"\u3092emit\u3059\u308b\n        emitter.onNext(\"Hello\");\n        emitter.onNext(\"Hello\");\n        emitter.onNext(\"Hello\");\n        // \u5b8c\u4e86\u72b6\u614b\u306b\u3059\u308b\n        emitter.onComplete();\n    } catch (Exception ex) {\n        // \u4f8b\u5916\u3092\u77e5\u3089\u305b\u308b\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableObserver<String>() {\n    @Override\n    public void onNext(String value) {\n        // \u4e09\u56de\u547c\u3070\u308c\u308b\n        System.out.println(value);\n    }\n\n    @Override\n    public void onError(Throwable e) {\n    }\n\n    @Override\n    public void onComplete() {\n        // \u6700\u5f8c\u306b\u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n});\n\n\nObserver(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\noNext* (onError | onComplete)?\n\u3064\u307e\u308a0\u304b\u3089N\u56deoNext\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u5f8c\u306bonError\u307e\u305f\u306fonComplete\u306e\u3069\u3061\u3089\u304b\u304c\u547c\u3070\u308c\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u3044\u3046\u547c\u3070\u308c\u65b9\u3067\u3059\u3002\n\nObserver(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u30a8\u30e9\u30fc\n\u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n\u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n\u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\u8907\u6570emit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\u4e00\u500b\u307e\u305f\u306f\u3044\u304f\u3064\u304bemit\u3055\u308c\u3066\u5b8c\u4e86\u304c\u547c\u3070\u308c\u306a\u3044\u5834\u5408\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4f7f\u3044\u6240\n\nGUI\u306e\u30a4\u30d9\u30f3\u30c8\u306a\u3069\n\u8907\u6570\u56deemit(onNext)\u3059\u308b\u5834\u5408\u3067Backpressure\u3092\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u3002\n\n\nSingle\nemitter\u306eonSuccess\u3092\u547c\u3076\u3068\u4e00\u56de\u3060\u3051Observer(Subscriber)\u306eonSuccess\u304c\u547c\u3070\u308c\u307e\u3059\u3002(item\u304c\u4e00\u500b\u3060\u3051emit\u3055\u308c\u307e\u3059\u3002)\u8907\u6570\u56deonSuccess\u3092\u547c\u3093\u3067\u3082\u4e00\u56de\u3060\u3051\u3057\u304b\u547c\u3070\u308c\u307e\u305b\u3093\u3002\nonComplete\u30e1\u30bd\u30c3\u30c9\u306f\u306a\u3044\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001onSuccess\u306f\u5f15\u6570\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u4f55\u3082\u30a2\u30a4\u30c6\u30e0\u3092\u6d41\u3055\u305a\u306bonComplete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u308a\u3067\u304d\u307e\u305b\u3093\u3002\nSingle.create((SingleOnSubscribe<String>) emitter -> {\n    try {\n        // \u4e00\u500bemit\u3057\u3066\u5b8c\u4e86\n        emitter.onSuccess(\"Single Hello\");\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableSingleObserver<String>() {\n    @Override\n    public void onSuccess(String value) {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n\n    @Override\n    public void onError(Throwable e) {\n\n    }\n});\n\n\nObserver(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onSuccess | onError)?\n\u3064\u307e\u308a\u3001onSuccess\u304bonError\u304c\u4e00\u56de\u306e\u307f\u547c\u3070\u308c\u308b\u304b\u547c\u3070\u308c\u306a\u3044\u304b\u3067\u3059\u3002\n\nObserver(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u30a8\u30e9\u30fc\n\u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n\u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Observable\u306b\u6bd4\u3079\u308b\u3068\u8003\u3048\u308b\u3079\u304d\u3053\u3068\u304c\u304b\u306a\u308a\u6e1b\u308a\u307e\u3057\u305f\u3002\n\n\u4f7f\u3044\u6240\n\n\u5024\u3092\u6d41\u3059(item\u3092emit)\u304b\u30a8\u30e9\u30fc\u304b\u306e\u3069\u3061\u3089\u304b\u306e\u5834\u5408\nRetrofit\u3067API\u304b\u3089GET\u3057\u3066\u304f\u308b\u3068\u304d\u306a\u3069\n\n\nMaybe\nemitter\u306eonSuccess\u307e\u305f\u306fonComplete\u307e\u305f\u306fonError\u3092\u547c\u3076\u3068\u4e00\u56de\u3060\u3051Observer(Subscriber)\u306e\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\nonComplete\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u306e\u3067\u3001\u4f55\u3082\u30a2\u30a4\u30c6\u30e0\u3092\u6d41\u3055\u305a\u306bonComplete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u5b8c\u4e86\u3067\u304d\u307e\u3059\u3002\nMaybe.create((MaybeOnSubscribe<String>) emitter -> {\n    try {\n        String result = \"Maybe Hello\";\n        if (TextUtils.isEmpty(result)) {\n            // \u30a2\u30a4\u30c6\u30e0\u306a\u3057\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u5b8c\u4e86\n            emitter.onComplete();\n            return;\n        }\n        // \u4e00\u500b\u6d41\u3057\u3066\u5b8c\u4e86\n        emitter.onSuccess(result);\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableMaybeObserver<String>() {\n    @Override\n    public void onSuccess(String value) {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n\n    @Override\n    public void onError(Throwable e) {\n\n    }\n\n    @Override\n    public void onComplete() {\n\n    }\n});\n\n\nObserver(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onSuccess | onError | onComplete)?\nonSuccess\u304bonError\u304bonComplete\u306e\u3069\u308c\u304b\u304c\u547c\u3070\u308c\u308b\u3001\u307e\u305f\u306f\u5168\u304f\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\nObserver(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u30a8\u30e9\u30fc\n\u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n\u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n\u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4f7f\u3044\u6240\n\n\u5024\u3092\u6d41\u3055\u306a\u3044\u3053\u3068\u304c\u6b63\u5e38\u306a\u3053\u3068\u3067\u3042\u308b\u5834\u5408\n\u30ad\u30e3\u30c3\u30b7\u30e5\n\u4f8b\u3048\u3070DB\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u3066\u3001\u307e\u3060\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u3068\u304d\u306fonComplete\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308b\u3068\u304d\u306fonSuccess\u3067\u6d41\u3059\n\n\nCompletable\nonComplete\u30e1\u30bd\u30c3\u30c9\u307e\u305f\u306fonError\u3092\u4e00\u56de\u3060\u3051\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30a2\u30a4\u30c6\u30e0\u306f\u4f55\u3082\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u7d42\u4e86\u3059\u308b\u306e\u307f\u3067\u3059\u3002\nCompletable.create(emitter -> {\n    try {\n        // \u4f55\u3089\u304b\u306e\u51e6\u7406\n        // \u5b8c\u4e86\n        emitter.onComplete();\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableCompletableObserver<String>() {\n    @Override\n    public void onError(Throwable e) {\n\n    }\n\n    @Override\n    public void onComplete() {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n});\n\n\nObserver(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onError | onComplete)?\nonError\u304bonComplete\u306e\u3069\u308c\u304b\u304c\u547c\u3070\u308c\u308b\u3001\u307e\u305f\u306f\u5168\u304f\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\nObserver(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n\u30a8\u30e9\u30fc\n\u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n\u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n\n\n\u4f7f\u3044\u6240\n\nAPI\u306ePOST\nDB\u3078\u306e\u4fdd\u5b58\n\u8fd4\u308a\u5024\u304c\u306a\u3044\u975e\u540c\u671f\u51e6\u7406\n\n\n\u307e\u3068\u3081\n\u4f7f\u3046\u3053\u3068\u3067\u7a2e\u985e\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u5b66\u7fd2\u30b3\u30b9\u30c8\u304c\u5c11\u3057\u4e0a\u304c\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u30c7\u30e1\u30ea\u30c3\u30c8\u306f\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\nObserver(Subscriber)\u3067\u8003\u3048\u308b\u3053\u3068\u304c\u5c11\u306a\u304f\u3066\u3059\u3080\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u307e\u305f\u5229\u7528\u3057\u3088\u3046\u3068\u3057\u306a\u304f\u3066\u3082\u3001\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6700\u521d\u306b\u6d41\u308c\u3066\u304d\u305f\u3082\u306e\u3092\u53d6\u308a\u51fa\u3059Observable#first\u3092\u4f7f\u3046\u3068Single\u304c\u8fd4\u3063\u3066\u304d\u305f\u308a\u306a\u3069\u3001RxJava 2.0\u3092\u4f7f\u3046\u4e0a\u3067\u5b8c\u5168\u306b\u306f\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u3082\u306e\u3068\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n\u53c2\u8003\nWhat's different in 2.0\nhttps://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0\nExploring RxJava 2 for Android (GOTOcph October 2016)\nhttps://speakerdeck.com/jakewharton/exploring-rxjava-2-for-android-gotocph-october-2016\n\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u305fCompletable\u306b\u3064\u3044\u3066\nhttp://qiita.com/kazy/items/217eee4e167395d45478\nrx.Single\u306b\u3064\u3044\u3066\nhttp://qiita.com/izumin5210/items/24449aee848b5ddbcf6d\nrx.Single\nhttp://angusmorton.com/rx-single/\nhttp://stackoverflow.com/questions/36152475/why-to-use-new-feature-single-in-rxjava\nhttp://stackoverflow.com/questions/40323307/observable-vs-flowable-rxjava2\nhttps://github.com/ReactiveX/RxJava/issues/4534#issuecomment-246399782\n# \u6982\u8981\nRxJava2.0\u3067Observable\u306b\u4f3c\u305fFlowable\u3084Maybe\u304c\u8ffd\u52a0\u3055\u308c\u307e\u3057\u305f\u3002\n\u307e\u305fSingle\u3084Completable\u3082\u4ee5\u524d\u304b\u3089\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3064\u307e\u308aObservable, Flowable, Single, Maybe, Completable\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u3053\u308c\u3089\u306fObservable\u306e\u3088\u3046\u306b\u3001item(Java\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306a\u3069)\u3092emit(\u6392\u51fa)\u3057\u307e\u3059\u3002\n\n\u4f7f\u3044\u5206\u3051\u3092\u884c\u3046\u3053\u3068\u3067\u3001**\u4f7f\u3046\u5074\u306eObserver(Subscriber)\u3067\u8003\u3048\u308b\u3053\u3068\u3092\u6e1b\u3089\u3059**\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u305d\u308c\u305e\u308c\u3069\u306e\u3088\u3046\u306a\u7279\u5fb4\u304c\u3042\u308a\u3001\u3069\u306e\u3088\u3046\u306b\u4f7f\u3044\u5206\u3051\u308b\u304b\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\nFlowable\u306fBackpressure\u306b\u95a2\u3059\u308b\u3082\u306e\u3067\u5c11\u3057\u30b8\u30e3\u30f3\u30eb\u304c\u9055\u3046\u306e\u3067\u7701\u7565\u3057\u3066\u3044\u307e\u3059\u3002(\u6b63\u76f4\u81ea\u5206\u304cBackpressure\u304c\u5fc5\u8981\u306b\u306a\u308b\u307b\u3069\u4f7f\u3044\u3053\u306a\u305b\u3066\u3044\u306a\u3044\u3067\u3059\u3002\u3002)\n\n\u4f55\u304b\u8aa4\u308a\u306a\u3069\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3054\u6307\u6458\u304a\u9858\u3044\u3057\u307e\u3059\u3002(\u7de8\u96c6\u30ea\u30af\u30a8\u30b9\u30c8\u3044\u305f\u3060\u3051\u308b\u3068\u3046\u308c\u3057\u3044\u3067\u3059\u3002)\n\n# \u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3068\u4f7f\u3044\u5206\u3051\n\n## Observable\u304a\u3055\u3089\u3044\n\n\nObservable\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f55\u56de\u3082item\u3092emit\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u4f8b\u3067\u306f\"Hello\"\u3092emitter.onNext\u3092\u547c\u3076\u3053\u3068\u3067\u4e09\u56deemit\u3057\u3066\u3044\u307e\u3059\u3002\n\n```java\nObservable.create((ObservableOnSubscribe<String>) emitter -> {\n    try {\n        // \u6587\u5b57\u5217\"Hello\"\u3092emit\u3059\u308b\n        emitter.onNext(\"Hello\");\n        emitter.onNext(\"Hello\");\n        emitter.onNext(\"Hello\");\n        // \u5b8c\u4e86\u72b6\u614b\u306b\u3059\u308b\n        emitter.onComplete();\n    } catch (Exception ex) {\n        // \u4f8b\u5916\u3092\u77e5\u3089\u305b\u308b\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableObserver<String>() {\n    @Override\n    public void onNext(String value) {\n        // \u4e09\u56de\u547c\u3070\u308c\u308b\n        System.out.println(value);\n    }\n\n    @Override\n    public void onError(Throwable e) {\n    }\n\n    @Override\n    public void onComplete() {\n        // \u6700\u5f8c\u306b\u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n});\n```\n\n### Observer(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\noNext* (onError | onComplete)?\n\u3064\u307e\u308a0\u304b\u3089N\u56deoNext\u304c\u547c\u3070\u308c\u3001\u305d\u306e\u5f8c\u306bonError\u307e\u305f\u306fonComplete\u306e\u3069\u3061\u3089\u304b\u304c\u547c\u3070\u308c\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3068\u3044\u3046\u547c\u3070\u308c\u65b9\u3067\u3059\u3002\n\n### Observer(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n* \u30a8\u30e9\u30fc\n* \u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n* \u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n* \u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n* \u8907\u6570emit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n* \u4e00\u500b\u307e\u305f\u306f\u3044\u304f\u3064\u304bemit\u3055\u308c\u3066\u5b8c\u4e86\u304c\u547c\u3070\u308c\u306a\u3044\u5834\u5408\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u4f7f\u3044\u6240\n* GUI\u306e\u30a4\u30d9\u30f3\u30c8\u306a\u3069\n* \u8907\u6570\u56deemit(onNext)\u3059\u308b\u5834\u5408\u3067Backpressure\u3092\u5229\u7528\u3057\u306a\u3044\u5834\u5408\u3002\n\n## Single\n\nemitter\u306eonSuccess\u3092\u547c\u3076\u3068**\u4e00\u56de\u3060\u3051**Observer(Subscriber)\u306eonSuccess\u304c\u547c\u3070\u308c\u307e\u3059\u3002(item\u304c\u4e00\u500b\u3060\u3051emit\u3055\u308c\u307e\u3059\u3002)\u8907\u6570\u56deonSuccess\u3092\u547c\u3093\u3067\u3082\u4e00\u56de\u3060\u3051\u3057\u304b\u547c\u3070\u308c\u307e\u305b\u3093\u3002\nonComplete\u30e1\u30bd\u30c3\u30c9\u306f\u306a\u3044\u3067\u3059\u3002\n\u3064\u307e\u308a\u3001onSuccess\u306f\u5f15\u6570\u304c\u5fc5\u8981\u306a\u306e\u3067\u3001\u4f55\u3082\u30a2\u30a4\u30c6\u30e0\u3092\u6d41\u3055\u305a\u306bonComplete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3060\u308a\u3067\u304d\u307e\u305b\u3093\u3002\n\n```java\nSingle.create((SingleOnSubscribe<String>) emitter -> {\n    try {\n        // \u4e00\u500bemit\u3057\u3066\u5b8c\u4e86\n        emitter.onSuccess(\"Single Hello\");\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableSingleObserver<String>() {\n    @Override\n    public void onSuccess(String value) {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n\n    @Override\n    public void onError(Throwable e) {\n\n    }\n});\n```\n\n### Observer(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onSuccess | onError)?\n\u3064\u307e\u308a\u3001onSuccess\u304bonError\u304c\u4e00\u56de\u306e\u307f\u547c\u3070\u308c\u308b\u304b\u547c\u3070\u308c\u306a\u3044\u304b\u3067\u3059\u3002\n\n### Observer(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n* \u30a8\u30e9\u30fc\n* \u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n* \u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002Observable\u306b\u6bd4\u3079\u308b\u3068\u8003\u3048\u308b\u3079\u304d\u3053\u3068\u304c\u304b\u306a\u308a\u6e1b\u308a\u307e\u3057\u305f\u3002\n\n### \u4f7f\u3044\u6240\n* \u5024\u3092\u6d41\u3059(item\u3092emit)\u304b\u30a8\u30e9\u30fc\u304b\u306e\u3069\u3061\u3089\u304b\u306e\u5834\u5408\n* Retrofit\u3067API\u304b\u3089GET\u3057\u3066\u304f\u308b\u3068\u304d\u306a\u3069\n\n## Maybe\nemitter\u306eonSuccess\u307e\u305f\u306fonComplete\u307e\u305f\u306fonError\u3092\u547c\u3076\u3068**\u4e00\u56de\u3060\u3051**Observer(Subscriber)\u306e\u5bfe\u5fdc\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3059\u3002\nonComplete\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308b\u306e\u3067\u3001\u4f55\u3082\u30a2\u30a4\u30c6\u30e0\u3092\u6d41\u3055\u305a\u306bonComplete\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3093\u3067\u5b8c\u4e86\u3067\u304d\u307e\u3059\u3002\n\n\n```java\nMaybe.create((MaybeOnSubscribe<String>) emitter -> {\n    try {\n        String result = \"Maybe Hello\";\n        if (TextUtils.isEmpty(result)) {\n            // \u30a2\u30a4\u30c6\u30e0\u306a\u3057\u306e\u5834\u5408\u306f\u305d\u306e\u307e\u307e\u5b8c\u4e86\n            emitter.onComplete();\n            return;\n        }\n        // \u4e00\u500b\u6d41\u3057\u3066\u5b8c\u4e86\n        emitter.onSuccess(result);\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableMaybeObserver<String>() {\n    @Override\n    public void onSuccess(String value) {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n\n    @Override\n    public void onError(Throwable e) {\n\n    }\n\n    @Override\n    public void onComplete() {\n\n    }\n});\n```\n\n### Observer(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onSuccess | onError | onComplete)?\nonSuccess\u304bonError\u304bonComplete\u306e\u3069\u308c\u304b\u304c\u547c\u3070\u308c\u308b\u3001\u307e\u305f\u306f\u5168\u304f\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\n### Observer(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n* \u30a8\u30e9\u30fc\n* \u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n* \u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n* \u4e00\u500bemit\u3055\u308c\u3066\u5b8c\u4e86\u3057\u305f\u5834\u5408\n\n\u3092\u8003\u616e\u3057\u3066\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n### \u4f7f\u3044\u6240\n* \u5024\u3092\u6d41\u3055\u306a\u3044\u3053\u3068\u304c\u6b63\u5e38\u306a\u3053\u3068\u3067\u3042\u308b\u5834\u5408\n* \u30ad\u30e3\u30c3\u30b7\u30e5  \n\u4f8b\u3048\u3070DB\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u3066\u3001\u307e\u3060\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u3068\u304d\u306fonComplete\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308b\u3068\u304d\u306fonSuccess\u3067\u6d41\u3059\n\n## Completable\nonComplete\u30e1\u30bd\u30c3\u30c9\u307e\u305f\u306fonError\u3092**\u4e00\u56de\u3060\u3051**\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u30a2\u30a4\u30c6\u30e0\u306f\u4f55\u3082\u6d41\u3059\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u7d42\u4e86\u3059\u308b\u306e\u307f\u3067\u3059\u3002\n\n```java\nCompletable.create(emitter -> {\n    try {\n        // \u4f55\u3089\u304b\u306e\u51e6\u7406\n        // \u5b8c\u4e86\n        emitter.onComplete();\n    } catch (Exception ex) {\n        emitter.onError(ex);\n    }\n}).subscribe(new DisposableCompletableObserver<String>() {\n    @Override\n    public void onError(Throwable e) {\n\n    }\n\n    @Override\n    public void onComplete() {\n        // \u4e00\u56de\u547c\u3070\u308c\u308b\n    }\n});\n```\n\n### Observer(Subscriber)\u3067\u3069\u3046\u547c\u3070\u308c\u308b\u304b\uff1f\n(onError | onComplete)?\nonError\u304bonComplete\u306e\u3069\u308c\u304b\u304c\u547c\u3070\u308c\u308b\u3001\u307e\u305f\u306f\u5168\u304f\u547c\u3070\u308c\u307e\u305b\u3093\u3002\n\n### Observer(Subscriber)\u304c\u8003\u3048\u308b\u30d1\u30bf\u30fc\u30f3\n\n* \u30a8\u30e9\u30fc\n* \u4f55\u3082emit\u3082\u5b8c\u4e86\u3082\u3057\u306a\u3044\u5834\u5408\n* \u5b8c\u4e86\u3057\u305f\u304c\u4e00\u500b\u3082item\u304cemit\u3055\u308c\u306a\u3044\u5834\u5408\n\n### \u4f7f\u3044\u6240\n* API\u306ePOST\n* DB\u3078\u306e\u4fdd\u5b58\n* \u8fd4\u308a\u5024\u304c\u306a\u3044\u975e\u540c\u671f\u51e6\u7406\n\n# \u307e\u3068\u3081\n\u4f7f\u3046\u3053\u3068\u3067\u7a2e\u985e\u304c\u5897\u3048\u3066\u3057\u307e\u3046\u306e\u3067\u5b66\u7fd2\u30b3\u30b9\u30c8\u304c\u5c11\u3057\u4e0a\u304c\u3063\u3066\u3057\u307e\u3046\u3068\u3044\u3046\u30c7\u30e1\u30ea\u30c3\u30c8\u306f\u5b58\u5728\u3057\u307e\u3059\u304c\u3001\nObserver(Subscriber)\u3067\u8003\u3048\u308b\u3053\u3068\u304c\u5c11\u306a\u304f\u3066\u3059\u3080\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u5b58\u5728\u3057\u307e\u3059\u3002\n\u307e\u305f\u5229\u7528\u3057\u3088\u3046\u3068\u3057\u306a\u304f\u3066\u3082\u3001\u4f7f\u3046\u5fc5\u8981\u304c\u51fa\u3066\u304d\u3066\u3057\u307e\u3044\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001\u6700\u521d\u306b\u6d41\u308c\u3066\u304d\u305f\u3082\u306e\u3092\u53d6\u308a\u51fa\u3059Observable#first\u3092\u4f7f\u3046\u3068Single\u304c\u8fd4\u3063\u3066\u304d\u305f\u308a\u306a\u3069\u3001RxJava 2.0\u3092\u4f7f\u3046\u4e0a\u3067\u5b8c\u5168\u306b\u306f\u907f\u3051\u3066\u901a\u308c\u306a\u3044\u3082\u306e\u3068\u306a\u308a\u305d\u3046\u3067\u3059\u3002\n\n\n# \u53c2\u8003\nWhat's different in 2.0\nhttps://github.com/ReactiveX/RxJava/wiki/What's-different-in-2.0\nExploring RxJava 2 for Android (GOTOcph October 2016)\nhttps://speakerdeck.com/jakewharton/exploring-rxjava-2-for-android-gotocph-october-2016\n\u65b0\u3057\u304f\u8ffd\u52a0\u3055\u308c\u305fCompletable\u306b\u3064\u3044\u3066\nhttp://qiita.com/kazy/items/217eee4e167395d45478\nrx.Single\u306b\u3064\u3044\u3066\nhttp://qiita.com/izumin5210/items/24449aee848b5ddbcf6d\nrx.Single\nhttp://angusmorton.com/rx-single/\n\nhttp://stackoverflow.com/questions/36152475/why-to-use-new-feature-single-in-rxjava\nhttp://stackoverflow.com/questions/40323307/observable-vs-flowable-rxjava2\nhttps://github.com/ReactiveX/RxJava/issues/4534#issuecomment-246399782\n", "tags": ["RxJava", "RxJava2", "Java", "Android"]}