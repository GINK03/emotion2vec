{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\nlogspout \u3068\u3044\u3046\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066 CoreOS \u4e0a\u3067\u8d77\u52d5\u3059\u308b Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u3057\u3001\u30ea\u30e2\u30fc\u30c8\u30ed\u30b0\u30b5\u30fc\u30d0\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3068\u3044\u3046\u8a71\u3002\nsystemd \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b \u306e \"sidekick\" \u306e\u554f\u984c\u70b9\u3092\u3075\u307e\u3048\u3001 \u8d77\u52d5\u3057\u305f\u3044\u30b3\u30f3\u30c6\u30ca\u304c\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u6c17\u306b\u3057\u306a\u304f\u3066\u3088\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8a66\u3059\n\nDocker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u306e\u9078\u629e\u80a2\nDocker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u3067\u306f\u9078\u629e\u80a2\u304c 3 \u7a2e\u985e\u3042\u308b\n\n\n\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u53ce\u96c6\u3059\u308b: \u30b3\u30f3\u30c6\u30ca\u5185\u3067\u30ed\u30b0\u53ce\u96c6\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u3068\u540c\u6642\u306b\u8d70\u3089\u305b\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n\u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b: -v \u3092\u4f7f\u3063\u3066\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30db\u30b9\u30c8\u306b\u5171\u6709\u3057\u3001\u30db\u30b9\u30c8\u5074\u306e\u30ed\u30b0\u53ce\u96c6\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n\u53ce\u96c6\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u308b: --volumes-from \u3092\u4f7f\u3063\u3066\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3068\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u3067\u30ed\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5171\u6709\u3057\u3001\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u304c\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n\u53c2\u8003: logspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 - SOTA \nsystemd \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b \u306f\u3001 \u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b \u306b\u3042\u305f\u308b\u3002 \u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b\u3053\u3068\u81ea\u4f53\u304c\u60aa\u304b\u3063\u305f\u8a33\u3067\u306f\u306a\u304f\u3001 systemd \u306e unit \u306e\u30d0\u30a4\u30f3\u30c9\u3092\u4f7f\u3063\u305f \"coprosess\" \"sidekick\" \u3068\u547c\u3070\u308c\u308b\u65b9\u6cd5\u3060\u3068\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u3082\u4e00\u7dd2\u306b\u8003\u3048\u308b\u5fc5\u8981\u304c\u51fa\u3066\u6765\u3066\u3053\u308c\u306f\u6b63\u76f4\u9762\u5012\u3060\u3088\u306d\u3001\u3068\u3044\u3046\u8a71\u3002\u305d\u3053\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u969b\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u8003\u3048\u306a\u304f\u3066\u3088\u3044\u65b9\u6cd5\u3068\u3057\u3066 progrium/logspout \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002 logspout \u3092\u4f7f\u3048\u3070\u3001\u4e0a\u8a18\u306e\u554f\u984c\u304c\u89e3\u6c7a\u3059\u308b\u3060\u3051\u3067\u306a\u304f Datadog \u3067 CoreOS \u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b \u3068\u540c\u3058\u304f\u3001\u51fa\u6765\u308b\u3060\u3051\u5168\u3066\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u3067\u3084\u308b \"docker way\" \u304c\u5b9f\u73fe\u3067\u304d\u308b\u3002\uff08\u3053\u308c\u306f \u53ce\u96c6\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u308b \u306b\u3042\u305f\u308b\uff09\n\nlogspout \u3092\u4f7f\u3063\u305f\u30ed\u30b0\u306e\u96c6\u7d04\nlogspout \u306f Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u306e\u30b5\u30fc\u30d3\u30b9\u3002 Docker \u30a4\u30e1\u30fc\u30b8\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u30db\u30b9\u30c8\u306e /var/run/docker.sock \u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30db\u30b9\u30c8\u3067\u8d77\u52d5\u3059\u308b\u5168\u3066\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u304f\u308c\u308b\u3002\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u306b\u4f55\u306e\u8a2d\u5b9a\u304c\u3044\u3089\u306a\u3044\u3053\u3068\u304c\u4e00\u756a\u306e\u30e1\u30ea\u30c3\u30c8\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a hello world \u3092\u51fa\u529b\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3092 3 \u3064\u8d77\u52d5\u3057\u3066\u304a\u304f\ncore@core-01 ~ $ docker run --name hello.1 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\nhello world\nhello world\nhello world\n\ncore@core-01 ~ $ docker run -d --name hello.1 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n1d6d6b3a37d663730761726a9e8ca4245ca6beefac9c3b800680db8fcb076af3\ncore@core-01 ~ $ docker run -d --name hello.2 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n8a031e9eacacfa9369fafdb001ea05880cdc742a153fc8191a168def1cd1f1ef\ncore@core-01 ~ $ docker run -d --name hello.3 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n6c47bf268ed8999fb4a6c9108fe2a2f203266cea7f3704d8c12ed55c706ab713\n\nlogsput \u3092\u8d77\u52d5\ncore@core-01 /etc/systemd/system $ docker run -d --name logspout -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout\nd4e86b5f001657124a725e4b7ee5bacc61809f082fbeb5c47c437171403c63a3\n\nlogspout \u306e HTTP API \u3092\u4f7f\u3063\u3066\u3001\u30ed\u30b0\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51fa\u529b\u3059\u308b\u3068\u8272\u5206\u3051\u3055\u308c\u3066\u51fa\u529b\u3057\u3066\u304f\u308c\u308b:)\n\n\n\u30b3\u30f3\u30c6\u30ca\u540d\u3067\u7d5e\u308a\u8fbc\u307f\ncore@core-01 ~ $ curl localhost:8000/logsfilter:hello\n         hello.2|hello world\n         hello.1|hello world\n         hello.3|hello world\n         hello.2|hello world\n\n\n\u30b3\u30f3\u30c6\u30ca\u540d\u6307\u5b9a\ncore@core-01 ~ $ curl localhost:8000/logs/name:hello.1\nhello world\nhello world\nhello world\n\n\n\u30b3\u30f3\u30c6\u30ca ID \u6307\u5b9a\ncore@core-01 ~ $ curl localhost:8000/logs/id:6c47bf268ed8\nhello world\nhello world\n\n\nlogspout \u3078\u96c6\u7d04\u3057\u305f\u30ed\u30b0\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\u73fe\u72b6\u306f UDP syslog \u7d4c\u7531\u3067\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\n\nLogentries \u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u4f8b\n\nLogentries \u3067 token \u3092\u4f5c\u6210\u3059\u308b\n\u65b0\u3057\u304f\u30ed\u30b0\u3092\u8ffd\u52a0\n\nSyslog \u3092\u9078\u629e\n\nsyslogd \u3092\u9078\u629e\n\ntoken \u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3053\u306e token \u3092\u4f7f\u3063\u3066 logenteries \u3078\u9001\u308b\u3002\n\nlogspout \u3092\u8d77\u52d5\u3059\u308b\nlogspout \u3092\u8d77\u52d5\u3059\u308b\u3002\ncore@core-01 ~ $ docker run -d --name logspout -h $HOSTNAME -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout\n\nSyslog \u306e\u30db\u30b9\u30c8\u540d\u90e8\u5206\u306f logspout \u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30db\u30b9\u30c8\u540d\u304c\u5229\u7528\u3055\u308c\u308b\u306e\u3067\u3001 -h $HOSTNAME \u3092\u4ed8\u3051\u3066\u304a\u304f\u3068\u3088\u3044\u3002\n# -h $HOSTNAME \u7121\u3057\u306e\u30ed\u30b0\u306e\u4f8b\n<14>2014-09-11T15:34:30Z 8ce4ab44556 hello.2[1]: hello world\n\n# -h $HOSTNAME \u4ed8\u304d\u306e\u30ed\u30b0\u306e\u4f8b\n<14>2014-09-11T15:34:30Z core-01 hello.2[1]: hello world\n\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\nlogentries \u3078\u5168\u3066\u306e\u30ed\u30b0\u3092\u9001\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\ncore@core-01 ~ $ curl localhost:8000/routes -X POST \\\n  -d '{\"target\": {\"type\": \"rfc5424\", \"addr\": \"api.logentries.com:10000\", \"structured_data\": \"e15dca62-3629-44f3-9057-ca586dcad7a3\"}}'\n\ncore@core-01 ~ $ curl localhost:8000/routes\n[\n  {\n    \"id\": \"2b38d0c5c069\",\n    \"target\": {\n      \"type\": \"rfc5424\",\n      \"addr\": \"api.logentries.com:10000\",\n      \"structured_data\": \"e15dca62-3629-44f3-9057-ca586dcad7a3\"\n    }\n  }\n]\n\n\u3053\u308c\u3067\u5168\u3066\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u304c Logentries \u306b\u9001\u4fe1\u3055\u308c\u3001\n\nLogentries \u4e0a\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\n\n\n\u7279\u5b9a\u306e\u540d\u524d\u304c\u3064\u3044\u305f\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3060\u3051\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\ncore@core-01 ~ $ curl localhost:8000/routes -X POST -d '{\"source\": {\"filter\": \"hello\"}, \"target\": {\"type\": \"rfc5424\", \"addr\": \"api.logentries.com:10000\", \"structured_data\": \"bec96897-1804-44d4-a8ac-89bd380a038b\"}}'\n\ncore@core-01 ~ $ curl localhost:8000/routes\n[\n  {\n    \"id\": \"8e549a91270f\",\n    \"source\": {\n      \"filter\": \"hello\"\n    },\n    \"target\": {\n      \"type\": \"rfc5424\",\n      \"addr\": \"api.logentries.com:10000\",\n      \"structured_data\": \"bec96897-1804-44d4-a8ac-89bd380a038b\"\n    }\n  }\n]\n\n\nCloud-Config \u304b\u3089 logspout \u3092\u8d77\u52d5\u3059\u308b\n#cloud-config\n# \u4e00\u90e8\u629c\u7c8b\n\ncoreos:\n  units:\n    - name: logspout.service\n      command: start\n      enable: true\n      content: |\n        [Unit]\n        Description=Logspout\n        After=docker.service\n        Requires=docker.service\n\n        [Service]\n        TimeoutStartSec=0\n        ExecStartPre=-/usr/bin/docker kill logspout\n        ExecStartPre=-/usr/bin/docker rm logspout\n        ExecStartPre=/usr/bin/docker pull progrium/logspout:latest\n        ExecStart=/usr/bin/docker run --name logspout -h %H -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout:latest rfc5424://api.logentries.com:10000?structuredData=xxxxxxxxxxxxxxxxxxxxxxxxxx    \n        ExecStop=/usr/bin/docker stop progrium/logspout:latest\n\n        [Install]\n        WantedBy=multi-user.target\n\n\n\u30e1\u30e2\u3068\u611f\u60f3\nlogspout \u4fbf\u5229...\n\n\u30b3\u30f3\u30c6\u30ca\u500b\u5225\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u306a\u3044\u7406\u7531\nlogsput \u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30ed\u30b0\u3092\u3069\u3053\u3069\u3053\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u3044\u304f\u3064\u3082\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u304c\u3001\u305d\u308c\u3092\u3057\u59cb\u3081\u308b\u3068\u300c\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u305f\u969b\u306b\u3001 logspout \u306b routes \u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u300d\u3068\u3044\u3046\u3088\u3046\u306b \"coprocess\" \"sidekick\" \u3063\u307d\u304f\u306a\u308b\u6c17\u304c\u3057\u3066\u308b\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306f\u5168\u3066 logspout \u306b\u96c6\u7d04\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u306e\u30bf\u30b0\u4ed8\u304d\u3067\u5168\u3066\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u306b\u9001\u308a\u3001\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u5074\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u898b\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30b7\u30f3\u30d7\u30eb\u306a\u6c17\u304c\u3057\u3066\u308b\u3002\n\ntoken \u30d9\u30fc\u30b9\u3067 logentries \u3078\u9001\u308b\u5fc5\u8981\u304c\u3042\u308b\nlogentries \u306f\u56fa\u6709\u30dd\u30fc\u30c8\u3078\u306e Plain TCP, UDP \u7d4c\u7531\u3067\u9001\u308b\u3068\u3001\u9001\u4fe1\u5143 IP \u3067\u5224\u5225\u3059\u308b\u306e\u3067\u3001CoreOS \u30de\u30b7\u30f3\u3092\u6368\u3066\u3089\u308c\u306a\u304f\u306a\u308b\u3002token \u30d9\u30fc\u30b9\u306e\u65b9\u3092\u8ffd\u8a18\u3059\u308b\nhttps://github.com/progrium/logspout/issues/12\nhttps://github.com/progrium/logspout/issues/13\n\nI didn't catch that part. Yes, that will require some modification to\nsupport custom structured data. Maybe make a new issue for that feature\nrequest.\n\n\u307e\u3060 syslog header \u306b token \u5165\u308c\u308b\u306e\u306f\u51fa\u6765\u306a\u3044\u3082\u3088\u3046\u3002\u3000CoreOS \u30de\u30b7\u30f3\u3092 disposable \u306b\u3057\u3066\u304a\u304f\u305f\u3081\u306b\u3001journalctl \u306e json output \u3092 jq \u3067\u6574\u5f62\u3057\u305f\u306e\u3061\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5 \u3082\u8a66\u3057\u3066\u3044\u308b\n\u8ffd\u8a18: https://github.com/progrium/logspout/pull/20 \u306b\u3066 token \u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\uff01\n2015/01/13 \u8ffd\u8a18: \u30de\u30fc\u30b8\u3055\u308c\u305f\uff01\n\n\u3069\u3061\u3089\u306b\u305b\u3088 journalctl \u306e json log \u306f\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u3078\u9001\u3063\u3066\u304a\u304f\nDocker \u30b3\u30f3\u30c6\u30ca\u4ee5\u5916\u306e\u30ed\u30b0\u3082\u3042\u308b\u3057\u3001\u5f8c\u304b\u3089\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u5168\u3066\u306e\u30b3\u30f3\u30c6\u30ca\u306f systemd \u7d4c\u7531\u3067\u8d77\u52d5\u3057\u3066\u304a\u304d\u3001journalctl \u306e json \u30ed\u30b0\u3092\u5168\u3066\u9001\u3063\u3066\u304a\u304f\n\nREF\n\n\nlogspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 - Docker \u306e\u30ed\u30b0\u7ba1\u7406\u65b9\u6cd5\u306b\u3064\u3044\u3066\u975e\u5e38\u306b\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\n\nprogrium/logspout \n\n\n## \u6982\u8981\nlogspout \u3068\u3044\u3046\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u4f7f\u3063\u3066 CoreOS \u4e0a\u3067\u8d77\u52d5\u3059\u308b Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u3057\u3001\u30ea\u30e2\u30fc\u30c8\u30ed\u30b0\u30b5\u30fc\u30d0\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u3068\u3044\u3046\u8a71\u3002\n[systemd \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b](http://qiita.com/spesnova/items/64a3720e48a19914cf20) \u306e \"sidekick\" \u306e\u554f\u984c\u70b9\u3092\u3075\u307e\u3048\u3001 \u8d77\u52d5\u3057\u305f\u3044\u30b3\u30f3\u30c6\u30ca\u304c\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u6c17\u306b\u3057\u306a\u304f\u3066\u3088\u3044\u30a2\u30d7\u30ed\u30fc\u30c1\u3092\u8a66\u3059\n\n## Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u306e\u9078\u629e\u80a2\nDocker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u3067\u306f\u9078\u629e\u80a2\u304c 3 \u7a2e\u985e\u3042\u308b\n\n* **\u30b3\u30f3\u30c6\u30ca\u5185\u90e8\u3067\u53ce\u96c6\u3059\u308b**: \u30b3\u30f3\u30c6\u30ca\u5185\u3067\u30ed\u30b0\u53ce\u96c6\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u30e1\u30a4\u30f3\u30d7\u30ed\u30bb\u30b9\u3068\u540c\u6642\u306b\u8d70\u3089\u305b\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n* **\u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b**: `-v` \u3092\u4f7f\u3063\u3066\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u30db\u30b9\u30c8\u306b\u5171\u6709\u3057\u3001\u30db\u30b9\u30c8\u5074\u306e\u30ed\u30b0\u53ce\u96c6\u306e\u30a8\u30fc\u30b8\u30a7\u30f3\u30c8\u3092\u4f7f\u3063\u3066\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n* **\u53ce\u96c6\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u308b**: `--volumes-from` \u3092\u4f7f\u3063\u3066\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u3068\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u3067\u30ed\u30b0\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u5171\u6709\u3057\u3001\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u30b3\u30f3\u30c6\u30ca\u304c\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n\u53c2\u8003: [logspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0 - SOTA](http://deeeet.com/writing/2014/05/14/logspout/) \n\n[systemd \u3067 CoreOS \u4e0a\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b](http://qiita.com/spesnova/items/64a3720e48a19914cf20) \u306f\u3001 **\u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b** \u306b\u3042\u305f\u308b\u3002 \u30b3\u30f3\u30c6\u30ca\u5916\u90e8\u3067\u53ce\u96c6\u3059\u308b\u3053\u3068\u81ea\u4f53\u304c\u60aa\u304b\u3063\u305f\u8a33\u3067\u306f\u306a\u304f\u3001 systemd \u306e unit \u306e\u30d0\u30a4\u30f3\u30c9\u3092\u4f7f\u3063\u305f \"coprosess\" \"sidekick\" \u3068\u547c\u3070\u308c\u308b\u65b9\u6cd5\u3060\u3068\u3001\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u969b\u306b\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u3082\u4e00\u7dd2\u306b\u8003\u3048\u308b\u5fc5\u8981\u304c\u51fa\u3066\u6765\u3066\u3053\u308c\u306f\u6b63\u76f4\u9762\u5012\u3060\u3088\u306d\u3001\u3068\u3044\u3046\u8a71\u3002\u305d\u3053\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3059\u308b\u969b\u30ed\u30b0\u53ce\u96c6\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u8003\u3048\u306a\u304f\u3066\u3088\u3044\u65b9\u6cd5\u3068\u3057\u3066 [progrium/logspout](https://github.com/progrium/logspout) \u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308b\u3002 logspout \u3092\u4f7f\u3048\u3070\u3001\u4e0a\u8a18\u306e\u554f\u984c\u304c\u89e3\u6c7a\u3059\u308b\u3060\u3051\u3067\u306a\u304f [Datadog \u3067 CoreOS \u3092\u30e2\u30cb\u30bf\u30ea\u30f3\u30b0\u3059\u308b](http://qiita.com/spesnova/items/882e0a61ddbe6c356394) \u3068\u540c\u3058\u304f\u3001\u51fa\u6765\u308b\u3060\u3051\u5168\u3066\u30b3\u30f3\u30c6\u30ca\u3060\u3051\u3067\u3084\u308b \"docker way\" \u304c\u5b9f\u73fe\u3067\u304d\u308b\u3002\uff08\u3053\u308c\u306f **\u53ce\u96c6\u7528\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u308b** \u306b\u3042\u305f\u308b\uff09\n\n\n## logspout \u3092\u4f7f\u3063\u305f\u30ed\u30b0\u306e\u96c6\u7d04\n\nlogspout \u306f Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u53ce\u96c6\u5c02\u7528\u306e\u30b5\u30fc\u30d3\u30b9\u3002 Docker \u30a4\u30e1\u30fc\u30b8\u304c\u7528\u610f\u3055\u308c\u3066\u304a\u308a\u3001\u30db\u30b9\u30c8\u306e `/var/run/docker.sock` \u3092\u30de\u30a6\u30f3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u305d\u306e\u30db\u30b9\u30c8\u3067\u8d77\u52d5\u3059\u308b\u5168\u3066\u306e Docker \u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3092\u53ce\u96c6\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u3066\u304f\u308c\u308b\u3002\u30ed\u30b0\u53ce\u96c6\u5bfe\u8c61\u30b3\u30f3\u30c6\u30ca\u306b\u4f55\u306e\u8a2d\u5b9a\u304c\u3044\u3089\u306a\u3044\u3053\u3068\u304c\u4e00\u756a\u306e\u30e1\u30ea\u30c3\u30c8\u3002\n\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306a hello world \u3092\u51fa\u529b\u3059\u308b\u30b3\u30f3\u30c6\u30ca\u3092 3 \u3064\u8d77\u52d5\u3057\u3066\u304a\u304f\n\n```bash\ncore@core-01 ~ $ docker run --name hello.1 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\nhello world\nhello world\nhello world\n```\n\n```bash\ncore@core-01 ~ $ docker run -d --name hello.1 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n1d6d6b3a37d663730761726a9e8ca4245ca6beefac9c3b800680db8fcb076af3\ncore@core-01 ~ $ docker run -d --name hello.2 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n8a031e9eacacfa9369fafdb001ea05880cdc742a153fc8191a168def1cd1f1ef\ncore@core-01 ~ $ docker run -d --name hello.3 busybox /bin/sh -c \"while true; do echo hello world; sleep 1; done\"\n6c47bf268ed8999fb4a6c9108fe2a2f203266cea7f3704d8c12ed55c706ab713\n```\n\nlogsput \u3092\u8d77\u52d5\n\n```bash\ncore@core-01 /etc/systemd/system $ docker run -d --name logspout -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout\nd4e86b5f001657124a725e4b7ee5bacc61809f082fbeb5c47c437171403c63a3\n```\n\nlogspout \u306e HTTP API \u3092\u4f7f\u3063\u3066\u3001\u30ed\u30b0\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u51fa\u529b\u3059\u308b\u3068\u8272\u5206\u3051\u3055\u308c\u3066\u51fa\u529b\u3057\u3066\u304f\u308c\u308b:)\n\n![1__core_core-01____ssh_.png](https://qiita-image-store.s3.amazonaws.com/0/20833/2fbde119-22fc-e745-33c8-57ed6a2528e4.png \"1__core_core-01____ssh_.png\")\n\n### \u30b3\u30f3\u30c6\u30ca\u540d\u3067\u7d5e\u308a\u8fbc\u307f\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/logsfilter:hello\n         hello.2|hello world\n         hello.1|hello world\n         hello.3|hello world\n         hello.2|hello world\n```\n\n### \u30b3\u30f3\u30c6\u30ca\u540d\u6307\u5b9a\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/logs/name:hello.1\nhello world\nhello world\nhello world\n```\n\n### \u30b3\u30f3\u30c6\u30ca ID \u6307\u5b9a\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/logs/id:6c47bf268ed8\nhello world\nhello world\n```\n\n## logspout \u3078\u96c6\u7d04\u3057\u305f\u30ed\u30b0\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\n\u73fe\u72b6\u306f UDP syslog \u7d4c\u7531\u3067\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u304b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\n\n### Logentries \u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u4f8b\n#### Logentries \u3067 token \u3092\u4f5c\u6210\u3059\u308b\n\u65b0\u3057\u304f\u30ed\u30b0\u3092\u8ffd\u52a0\n\n![hosts_CoreOS___Logentries.png](https://qiita-image-store.s3.amazonaws.com/0/20833/9ee6e289-259d-5055-a563-069ef8017efd.png \"hosts_CoreOS___Logentries.png\")\n\nSyslog \u3092\u9078\u629e\n![hosts_CoreOS___Logentries.png](https://qiita-image-store.s3.amazonaws.com/0/20833/82fe3010-0183-a7dd-b358-c5caab6cf6b2.png \"hosts_CoreOS___Logentries.png\")\n\nsyslogd \u3092\u9078\u629e\n\n![hosts_CoreOS___Logentries.png](https://qiita-image-store.s3.amazonaws.com/0/20833/8bb51508-d74c-9737-a17f-c05105e4b23c.png \"hosts_CoreOS___Logentries.png\")\n\n\ntoken \u304c\u8868\u793a\u3055\u308c\u308b\u306e\u3067\u3053\u306e token \u3092\u4f7f\u3063\u3066 logenteries \u3078\u9001\u308b\u3002\n\n#### logspout \u3092\u8d77\u52d5\u3059\u308b\nlogspout \u3092\u8d77\u52d5\u3059\u308b\u3002\n\n```bash\ncore@core-01 ~ $ docker run -d --name logspout -h $HOSTNAME -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout\n```\n\nSyslog \u306e\u30db\u30b9\u30c8\u540d\u90e8\u5206\u306f logspout \u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30db\u30b9\u30c8\u540d\u304c\u5229\u7528\u3055\u308c\u308b\u306e\u3067\u3001 `-h $HOSTNAME` \u3092\u4ed8\u3051\u3066\u304a\u304f\u3068\u3088\u3044\u3002\n\n```\n# -h $HOSTNAME \u7121\u3057\u306e\u30ed\u30b0\u306e\u4f8b\n<14>2014-09-11T15:34:30Z 8ce4ab44556 hello.2[1]: hello world\n\n# -h $HOSTNAME \u4ed8\u304d\u306e\u30ed\u30b0\u306e\u4f8b\n<14>2014-09-11T15:34:30Z core-01 hello.2[1]: hello world\n```\n\n#### \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\n\nlogentries \u3078\u5168\u3066\u306e\u30ed\u30b0\u3092\u9001\u308b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3092\u4f5c\u6210\u3059\u308b\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/routes -X POST \\\n  -d '{\"target\": {\"type\": \"rfc5424\", \"addr\": \"api.logentries.com:10000\", \"structured_data\": \"e15dca62-3629-44f3-9057-ca586dcad7a3\"}}'\n```\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/routes\n[\n  {\n    \"id\": \"2b38d0c5c069\",\n    \"target\": {\n      \"type\": \"rfc5424\",\n      \"addr\": \"api.logentries.com:10000\",\n      \"structured_data\": \"e15dca62-3629-44f3-9057-ca586dcad7a3\"\n    }\n  }\n]\n```\n\n\u3053\u308c\u3067\u5168\u3066\u306e\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u304c Logentries \u306b\u9001\u4fe1\u3055\u308c\u3001\n\n![hosts_CoreOS_Docker_Containers___Logentries.png](https://qiita-image-store.s3.amazonaws.com/0/20833/1d552442-fa6a-51bd-0720-3e29ff8807ba.png \"hosts_CoreOS_Docker_Containers___Logentries.png\")\n\n\nLogentries \u4e0a\u3067\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3067\u304d\u308b\n\n![hosts_CoreOS_Docker_Containers___Logentries.png](https://qiita-image-store.s3.amazonaws.com/0/20833/986693e7-d0cc-93ba-146f-4c44f6d0118d.png \"hosts_CoreOS_Docker_Containers___Logentries.png\")\n\n#### \u7279\u5b9a\u306e\u540d\u524d\u304c\u3064\u3044\u305f\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u3060\u3051\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/routes -X POST -d '{\"source\": {\"filter\": \"hello\"}, \"target\": {\"type\": \"rfc5424\", \"addr\": \"api.logentries.com:10000\", \"structured_data\": \"bec96897-1804-44d4-a8ac-89bd380a038b\"}}'\n```\n\n```bash\ncore@core-01 ~ $ curl localhost:8000/routes\n[\n  {\n    \"id\": \"8e549a91270f\",\n    \"source\": {\n      \"filter\": \"hello\"\n    },\n    \"target\": {\n      \"type\": \"rfc5424\",\n      \"addr\": \"api.logentries.com:10000\",\n      \"structured_data\": \"bec96897-1804-44d4-a8ac-89bd380a038b\"\n    }\n  }\n]\n```\n\n## Cloud-Config \u304b\u3089 logspout \u3092\u8d77\u52d5\u3059\u308b\n\n```yaml\n#cloud-config\n# \u4e00\u90e8\u629c\u7c8b\n\ncoreos:\n  units:\n    - name: logspout.service\n      command: start\n      enable: true\n      content: |\n        [Unit]\n        Description=Logspout\n        After=docker.service\n        Requires=docker.service\n\n        [Service]\n        TimeoutStartSec=0\n        ExecStartPre=-/usr/bin/docker kill logspout\n        ExecStartPre=-/usr/bin/docker rm logspout\n        ExecStartPre=/usr/bin/docker pull progrium/logspout:latest\n        ExecStart=/usr/bin/docker run --name logspout -h %H -p 8000:8000 -v=/var/run/docker.sock:/tmp/docker.sock progrium/logspout:latest rfc5424://api.logentries.com:10000?structuredData=xxxxxxxxxxxxxxxxxxxxxxxxxx    \n        ExecStop=/usr/bin/docker stop progrium/logspout:latest\n\n        [Install]\n        WantedBy=multi-user.target\n```\n\n\n## \u30e1\u30e2\u3068\u611f\u60f3\nlogspout \u4fbf\u5229...\n\n### \u30b3\u30f3\u30c6\u30ca\u500b\u5225\u306b\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3057\u306a\u3044\u7406\u7531\nlogsput \u306f\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u305f\u30ed\u30b0\u3092\u3069\u3053\u3069\u3053\u3078\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3068\u3044\u3063\u305f\u3053\u3068\u3092\u3044\u304f\u3064\u3082\u767b\u9332\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u3002\u304c\u3001\u305d\u308c\u3092\u3057\u59cb\u3081\u308b\u3068\u300c\u3042\u308b\u30b3\u30f3\u30c6\u30ca\u3092\u7acb\u3066\u305f\u969b\u306b\u3001 logspout \u306b routes \u3092\u8ffd\u52a0\u3057\u306a\u3044\u3068\u300d\u3068\u3044\u3046\u3088\u3046\u306b \"coprocess\" \"sidekick\" \u3063\u307d\u304f\u306a\u308b\u6c17\u304c\u3057\u3066\u308b\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306f\u5168\u3066 logspout \u306b\u96c6\u7d04\u3057\u3001\u30b3\u30f3\u30c6\u30ca\u540d\u306e\u30bf\u30b0\u4ed8\u304d\u3067\u5168\u3066\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u306b\u9001\u308a\u3001\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u5074\u3067\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u898b\u308b\u3001\u3068\u3044\u3046\u306e\u304c\u30b7\u30f3\u30d7\u30eb\u306a\u6c17\u304c\u3057\u3066\u308b\u3002\n\n### token \u30d9\u30fc\u30b9\u3067 logentries \u3078\u9001\u308b\u5fc5\u8981\u304c\u3042\u308b\nlogentries \u306f\u56fa\u6709\u30dd\u30fc\u30c8\u3078\u306e Plain TCP, UDP \u7d4c\u7531\u3067\u9001\u308b\u3068\u3001\u9001\u4fe1\u5143 IP \u3067\u5224\u5225\u3059\u308b\u306e\u3067\u3001CoreOS \u30de\u30b7\u30f3\u3092\u6368\u3066\u3089\u308c\u306a\u304f\u306a\u308b\u3002token \u30d9\u30fc\u30b9\u306e\u65b9\u3092\u8ffd\u8a18\u3059\u308b\n\nhttps://github.com/progrium/logspout/issues/12\nhttps://github.com/progrium/logspout/issues/13\n\n> I didn't catch that part. Yes, that will require some modification to\nsupport custom structured data. Maybe make a new issue for that feature\nrequest.\n\n~~\u307e\u3060 syslog header \u306b token \u5165\u308c\u308b\u306e\u306f\u51fa\u6765\u306a\u3044\u3082\u3088\u3046\u3002~~\u3000CoreOS \u30de\u30b7\u30f3\u3092 disposable \u306b\u3057\u3066\u304a\u304f\u305f\u3081\u306b\u3001[journalctl \u306e json output \u3092 jq \u3067\u6574\u5f62\u3057\u305f\u306e\u3061\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u65b9\u6cd5](http://qiita.com/spesnova/items/64a3720e48a19914cf20) \u3082\u8a66\u3057\u3066\u3044\u308b\n\n\u8ffd\u8a18: https://github.com/progrium/logspout/pull/20 \u306b\u3066 token \u8ffd\u52a0\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\uff01\n2015/01/13 \u8ffd\u8a18: \u30de\u30fc\u30b8\u3055\u308c\u305f\uff01\n\n### \u3069\u3061\u3089\u306b\u305b\u3088 journalctl \u306e json log \u306f\u30ea\u30e2\u30fc\u30c8\u30b5\u30fc\u30d0\u3078\u9001\u3063\u3066\u304a\u304f\nDocker \u30b3\u30f3\u30c6\u30ca\u4ee5\u5916\u306e\u30ed\u30b0\u3082\u3042\u308b\u3057\u3001\u5f8c\u304b\u3089\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u3057\u3084\u3059\u3044\u3068\u3044\u3046\u3053\u3068\u3067\u5168\u3066\u306e\u30b3\u30f3\u30c6\u30ca\u306f systemd \u7d4c\u7531\u3067\u8d77\u52d5\u3057\u3066\u304a\u304d\u3001[journalctl \u306e json \u30ed\u30b0\u3092\u5168\u3066\u9001\u3063\u3066\u304a\u304f](http://qiita.com/spesnova/items/631ffb5c13e1d0da258b)\n\n## REF\n\n* [logspout\u3067Docker\u30b3\u30f3\u30c6\u30ca\u306e\u30ed\u30b0\u306e\u96c6\u7d04\u30fb\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0](http://deeeet.com/writing/2014/05/14/logspout/) - Docker \u306e\u30ed\u30b0\u7ba1\u7406\u65b9\u6cd5\u306b\u3064\u3044\u3066\u975e\u5e38\u306b\u52c9\u5f37\u306b\u306a\u308a\u307e\u3057\u305f\n* [progrium/logspout](https://github.com/progrium/logspout) \n\n", "tags": ["docker", "CoreOS", "log", "systemd"]}