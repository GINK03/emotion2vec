{"context": " More than 1 year has passed since last update.Graph API Explorer is a facebook developer tool, and I usually use it recently.\nOne day, a problem about the large amount of post comments occurred.\n\nIt's hard for me to read, I need to keep click 'more' button.\nSo, why can't I solve this prolbem with Graph API Explorer?\nHere's the way.\n\nGet ID\nEverything from fb has its own id. (post, video, photo, etc)\nThe most URL format like these below:\n* facebook.com/groups/[group_name]/permalink/[id]\n* facebook.com/photo.php?fbid=[id]\n* facebook.com/[username]/posts/[id]\n* facebook.com/permalink.php?story_fbid=[id]\nRemeber the id we found, we'll use it later.\n\nQuery data\nThen we open the Graph API Explorer, switch to FQL Query mode to get the comment data by FQL.\nSELECT fromid, text FROM comment WHERE object_id = '[id]' LIMIT 0, 500\n\nYou might have a question that why I select fromid not name. (if I can, I want to.)\nBecuz  there's no name column in comment table, and fb not allow us to join table in this tool.\nBut I still found the solution, I'll mention it later.\nNow the comment data will shown in JSON format.\n\nMake it easy\nWe already know these steps will get the comment data.\nBut how to make it easier is more difficult.\nHere I use js bookmark to do these step by step.\nvar obj_id;\nvar step;\nif (step == undefined) { //Get the id from user\n    obj_id = prompt('Enter the id:');\n    if (obj_id != undefined) {\n        step = 'enter_Id';\n    }\n    return false;\n} else if (step == 'enter_Id') { //Set FQL to query data.\n    document.getElementById('fql_query').value = \"SELECT fromid, text FROM comment WHERE object_id = '\" + obj_id + \"' limit 0, 500\";\n    document.getElementById('fql_submit').childNodes[0].click();\n    step = 'query_text';\n    alert('Wait until the loading complete, and click this bookmark again.');\n} else if (step == 'query_text') { //Select all data\n    var content = document.getElementById('response_body');\n    var selection = window.getSelection();\n    var range = document.createRange();\n    range.selectNodeContents(content);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    content.focus();\n    alert('Press ctrl+c to copy.');\n}\n\n\nwhy fromid not name\nBack to the fromid problem before, fromid means the id of the user who create comment.\nEach comments has its own fromid and text, so I use async to get the name of user profile from 'http://graph.facebook.com/[fromid]' in order.\nBut the sad part is I found it's still hard for end user to operate.\nLook on the bright side, I found a tricky method to use this tool.\nHope these help. :)\n[Graph API Explorer](https://developers.facebook.com/tools/explorer) is a facebook developer tool, and I usually use it recently.\n\nOne day, a problem about the large amount of post comments occurred.\n\n![1.png](https://qiita-image-store.s3.amazonaws.com/0/26863/597dd68e-6c50-0ee5-be2f-ab8436717ac9.png)\n\nIt's hard for me to read, I need to keep click 'more' button.\n\nSo, why can't I solve this prolbem with Graph API Explorer?\n\nHere's the way.\n\nGet ID\n---\n\nEverything from fb has its own id. (post, video, photo, etc)\n\nThe most URL format like these below:\n* facebook.com/groups/[group_name]/permalink/[id]\n* facebook.com/photo.php?fbid=[id]\n* facebook.com/[username]/posts/[id]\n* facebook.com/permalink.php?story_fbid=[id]\n\nRemeber the id we found, we'll use it later.\n\nQuery data\n---\n\nThen we open the [Graph API Explorer](https://developers.facebook.com/tools/explorer), switch to **FQL Query** mode to get the comment data by FQL.\n\n```mysql\nSELECT fromid, text FROM comment WHERE object_id = '[id]' LIMIT 0, 500\n```\n\nYou might have a question that why I select *fromid* not *name*. (if I can, I want to.)\n\nBecuz  there's no *name* column in comment table, and fb not allow us to join table in this tool.\n\nBut I still found the solution, I'll mention it later.\n\nNow the comment data will shown in JSON format.\n\nMake it easy\n---\n\nWe already know these steps will get the comment data.\n\nBut how to make it easier is more difficult.\n\nHere I use js bookmark to do these step by step.\n\n```js:\nvar obj_id;\nvar step;\nif (step == undefined) { //Get the id from user\n    obj_id = prompt('Enter the id:');\n    if (obj_id != undefined) {\n        step = 'enter_Id';\n    }\n    return false;\n} else if (step == 'enter_Id') { //Set FQL to query data.\n    document.getElementById('fql_query').value = \"SELECT fromid, text FROM comment WHERE object_id = '\" + obj_id + \"' limit 0, 500\";\n    document.getElementById('fql_submit').childNodes[0].click();\n    step = 'query_text';\n    alert('Wait until the loading complete, and click this bookmark again.');\n} else if (step == 'query_text') { //Select all data\n    var content = document.getElementById('response_body');\n    var selection = window.getSelection();\n    var range = document.createRange();\n    range.selectNodeContents(content);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    content.focus();\n    alert('Press ctrl+c to copy.');\n}\n```\n\nwhy fromid not name\n---\n\nBack to the fromid problem before, fromid means the id of the user who create comment.\n\nEach comments has its own fromid and text, so I use [async](https://github.com/caolan/async) to get the name of user profile from '[http://graph.facebook.com/[fromid]](http://graph.facebook.com/[fromid])' in order.\n\nBut the sad part is I found it's still hard for end user to operate.\n\nLook on the bright side, I found a tricky method to use this tool.\n\nHope these help. :)", "tags": ["Facebook", "JavaScript"]}