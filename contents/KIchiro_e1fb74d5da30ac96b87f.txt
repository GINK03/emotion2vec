{"context": "\n\n\u306f\u3058\u3081\u306b\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6319\u52d5\u3092\u5916\u90e8\u304b\u3089\u5909\u66f4\u3059\u308b\u305f\u3081\u306b Proxy \u3068\u3044\u3046\u9ed2\u9b54\u8853\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u3002\u500b\u4eba\u7684\u306b\u306f\u3042\u307e\u308a\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001JDBC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u666e\u901a\u306b\u53d6\u5f97\u3057\u3066\u666e\u901a\u306b close \u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3092\u5916\u90e8\u304b\u3089\u7121\u7406\u77e2\u7406\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u7684\u306a\u6319\u52d5\u306b\u304b\u3048\u308b\u305f\u3081\u306b\u521d\u3081\u3066\u4f7f\u7528\u3057\u3066\u307f\u305f\u3002\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u306b\u4f7f\u3048\u305f\u306e\u3067\u81ea\u5206\u7528\u306e\u30e1\u30e2\u3068\u3057\u3066\u5185\u5bb9\u3092\u6b8b\u3057\u3066\u304a\u304f\u3002\n\n\u6e96\u5099\n\nProxyUtils.java\n    @SuppressWarnings(\"unchecked\")\n    public static <T> T makeProxy(\n            T src, \n            Class<?>[] classes, \n            Map<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object[]>> argumentModifier, \n            Map<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object>> methodReplacer, \n            Map<Function<Method, Boolean>, Function<Tuple4<Object, Method, Object[], Object>, Object>> resultModifier\n    ) {\n        return (T) Proxy.newProxyInstance(\n                src.getClass().getClassLoader(),\n                classes, \n                new InvocationHandler() {\n                    @Override public Object invoke(Object proxy, Method method, Object[] args_) throws Exception {\n                        Object[] args = applyModifier(argumentModifier, method, Tuple.of(src, method, args_), () -> args_); // \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u6642\u306eargument\u90e8\u5206\u306e\u52a0\u5de5\u3092\u884c\u306a\u3046\n                        Object result = applyModifier(methodReplacer, method, Tuple.of(src, method, args), () -> method.invoke(src, args));// \u30e1\u30bd\u30c3\u30c9\u81ea\u4f53\u3092\u7f6e\u304d\u304b\u3048\u308b \n                        return applyModifier(resultModifier, method, Tuple.of(src, method, args, result), () -> result); // \u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\u7d50\u679c\u3092\u52a0\u5de5\u3059\u308b\n                    }\n                }\n        );\n    }\n\n    private static interface SupplierThrowsException<A> {public A get() throws Exception;}\n    private static <C, A, R> R applyModifier(Map<Function<C, Boolean>, Function<A, R>> map, C cond, A arg, SupplierThrowsException<R> defaultResult) throws Exception {\n        if (map != null) {\n            for (Entry<Function<C, Boolean>, Function<A, R>> e : map.entrySet()) {\n                if (e.getKey().apply(cond)) return e.getValue().apply(arg);\n            }\n        }\n        return defaultResult.get();\n    }\n\n\n\n\u5fc5\u8981\u306a\u6e96\u5099\u306f\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3060\u3063\u305f\u3002\n\n\u4f7f\u3044\u65b9\n\u4f8b\u3068\u3057\u3066 Integer \u3092\u4e8c\u3064\u53d6\u308a\u3001\u305d\u308c\u3092 + \u8a18\u53f7\u3067\u3064\u306a\u3052\u305f\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b BiFunction \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6319\u52d5\u3092\u5916\u304b\u3089\u5909\u3048\u308b\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3059\u3002\n\nMain.java\n    public static void main(String[] args) {\n\n        final BiFunction<Integer, Integer, String> hoge = new BiFunction<Integer, Integer, String>() {\n            @Override public String apply(Integer t, Integer u) {return \"\" + t + \" + \" + u;}\n        };\n\n        BiFunction<Integer, Integer, String> hoge1 = ProxyUtils.makeProxy( // apply\u304c\u547c\u3070\u308c\u305f\u969b\u3001\u4e00\u756a\u76ee\u306e\u5f15\u6570\u306b +2\u3001\u4e8c\u756a\u76ee\u306e\u5f15\u6570\u306b -2 \u3059\u308b\n                hoge, new Class<?>[]{BiFunction.class}, \n                new HashMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object[]>>() {{\n                    put(\n                            method -> \"apply\".equals(method.getName()), // \u30e1\u30bd\u30c3\u30c9\u540d\u304c apply \u306e\u5834\u5408\u306b\u4ee5\u4e0b\u3092\u5b9f\u884c\n                            tpl3 -> {\n                                Object[] args = tpl3.cdr.cdr.car; // argument \u90e8\u5206\u3092\u53d6\u308a\u51fa\u3057 \u6700\u521d\u306e\u5f15\u6570\u306b2\u3092\u8db3\u3057\u3001\u6b21\u306e\u5f15\u6570\u304b\u30892\u3092\u5f15\u304f\n                                args[0] = (Integer)args[0] + 2;\n                                args[1] = (Integer)args[1] - 2;\n                                return args;\n                            }\n                    );\n                }}, \n                null, \n                null\n        );\n        BiFunction<Integer, Integer, String> hoge2 = ProxyUtils.makeProxy( // a + b \u3092\u8868\u793a\u3059\u308b\u306e\u3067\u306f\u306a\u304f a - b \u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u308b\n                hoge, new Class<?>[]{BiFunction.class}, \n                null,\n                new HashMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object>>() {{\n                    put(\n                            method -> \"apply\".equals(method.getName()),\n                            tpl3 -> {\n                                Object[] args = tpl3.cdr.cdr.car;\n                                return \"\" + args[0] + \" - \" + args[1];\n                            }\n                    );\n                }}, \n                null\n        );\n\n        BiFunction<Integer, Integer, String> hoge3 = ProxyUtils.makeProxy( // \u7d50\u679c\u6587\u5b57\u5217\u30922\u56de\u7e70\u66ff\u3048\u3059\u3088\u3046\u306b\u5909\u3048\u308b\n                hoge, new Class<?>[]{BiFunction.class}, \n                null, \n                null, \n                new HashMap<Function<Method, Boolean>, Function<Tuple4<Object, Method, Object[], Object>, Object>>() {{\n                    put(\n                            method -> \"apply\".equals(method.getName()),\n                            tpl4 -> {\n                                Object result = tpl4.cdr.cdr.cdr.car; // \u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092\u53d6\u308a\u51fa\u3057\n                                return result + \" \" + result;        // \u305d\u308c\u30922\u56de\u7e70\u66ff\u3048\u3059\n                            }\n                    );\n                }}\n        );\n\n        System.out.println(hoge.apply(2, 3)); // 2 + 3 \u3068\u8868\u793a\n        System.out.println(hoge1.apply(2, 3)); // 4 + 1 \u3068\u8868\u793a\n        System.out.println(hoge2.apply(2, 3)); // 2 - 3 \u3068\u8868\u793a\n        System.out.println(hoge3.apply(2, 3)); // 2 + 3 2 + 3  \u3068\u8868\u793a\n    }\n\n\n\ntrait \u3082\u3069\u304d\n\u3053\u3053\u307e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u521d\u3081\u3066\u6c17\u304c\u3064\u3044\u305f\u306e\u3060\u304c\u3001\u5143\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3055\u3048\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3059\u3089 invocation handler \u306b\u66f8\u304d\u52a0\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u3060\u3002\u3064\u307e\u308a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6e96\u5099\u3092\u3057\u3066\u304a\u304f\u3068\u2026\n\nProxyUtils.java\n    public static interface TraitInterface<T extends TraitInterface<T>> {public Class<T> interfaceClass();}\n\n    private static interface FunctionThrowsException<A, B> {public B apply(A a) throws Exception;}\n    @SuppressWarnings(\"unchecked\")\n    public static <S> S trait(S src, TraitInterface<?>... trait) {\n        return (S) Proxy.newProxyInstance(\n                trait.getClass().getClassLoader(),\n                Arrays.asList(trait).stream().map(t -> t.interfaceClass()).collect(Collectors.toList()).toArray(new Class<?>[0]),\n                new InvocationHandler() {\n                    Map<String, FunctionThrowsException<Object[], Object>> handler = new HashMap<String, FunctionThrowsException<Object[], Object>>() {\n                        private static final long serialVersionUID = 6154196791279856396L;\n                        {\n                            for (TraitInterface<?> t : trait) for (Method m : t.getClass().getMethods()) put(m.getName(), args -> m.invoke(t, args));\n                            for (Method m : src.getClass().getMethods()) remove(m.getName()); // \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u7f6e\u304d\u304b\u3048\u306a\u3044\u3053\u3068\u306b\u3059\u308b\n                        }\n                    };\n                    @Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n                        if (handler.containsKey(method.getName())) return handler.get(method.getName()).apply(args); else return method.invoke(src, args);\n                    }\n                }\n        );\n    }\n\n\n\u3053\u3093\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\nMain.java\n    public static interface Person extends TraitInterface<Person> {\n        public default Class<Person> interfaceClass() {return Person.class;}\n        public void setName(String name_);\n        public String getName();\n    }\n\n    public static interface Place extends TraitInterface<Place> {\n        public default Class<Place> interfaceClass() {return Place.class;}\n        public void setAddress(String address_);\n        public String getAddress();\n    }\n\n    public static void main(String[] args) {\n\n        Object o = new Object();\n\n        Person m = new Person() {\n            private String name;\n            @Override public void setName(String name_) {name = name_;}\n            @Override public String getName() {return name;}\n        };\n\n        Place p = new Place() {\n            private String address;\n            @Override public void setAddress(String address_) {address = address_;}\n            @Override public String getAddress() {return address;}\n        };\n\n        System.out.println(\"Hash \" + o.hashCode());\n\n        o = trait(o, m, p); // Object \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b Person \u306e\u6a5f\u80fd\u3068 Place \u306e\u6a5f\u80fd\u3092\u5f8c\u4ed8\u3051\u3059\u308b\n\n        ((Person)o).setName(\"Ichiro\");\n        System.out.println(((Person)o).getName()); // \u6b63\u3057\u304f\u6a5f\u80fd\u3057\u3066\u3044\u308b\n        ((Place)o).setAddress(\"Tokyo\");\n        System.out.println(((Place)o).getAddress()); // \u6b63\u3057\u304f\u6a5f\u80fd\u3057\u3066\u3044\u308b\n\n        System.out.println(\"Hash \" + o.hashCode()); // Object \u306e\u672c\u6765\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u547c\u3073\u3060\u305b\u308b\n    }\n\n\ntrait\u307e\u304c\u3044\u306e\u30ad\u30e2\u3044\u30b3\u30fc\u30c9\u306e\u3067\u304d\u3042\u304c\u308a\u3060\u3002\n\u3064\u3044\u30ab\u30c3\u3068\u306a\u3063\u3066\u3084\u3063\u305f\u3001\u4eca\u306f\u53cd\u7701\u3057\u3066\u3044\u308b\u3002\n# \u306f\u3058\u3081\u306b\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u306e\u6319\u52d5\u3092\u5916\u90e8\u304b\u3089\u5909\u66f4\u3059\u308b\u305f\u3081\u306b Proxy \u3068\u3044\u3046\u9ed2\u9b54\u8853\u304c\u4f7f\u308f\u308c\u308b\u3053\u3068\u304c\u3042\u308b\u3002\u500b\u4eba\u7684\u306b\u306f\u3042\u307e\u308a\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u304b\u3063\u305f\u306e\u3060\u304c\u3001JDBC\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u3092\u666e\u901a\u306b\u53d6\u5f97\u3057\u3066\u666e\u901a\u306b close \u3057\u3066\u3044\u308b\u30a2\u30d7\u30ea\u3092\u5916\u90e8\u304b\u3089\u7121\u7406\u77e2\u7406\u30b3\u30cd\u30af\u30b7\u30e7\u30f3\u30d7\u30fc\u30eb\u7684\u306a\u6319\u52d5\u306b\u304b\u3048\u308b\u305f\u3081\u306b\u521d\u3081\u3066\u4f7f\u7528\u3057\u3066\u307f\u305f\u3002\u601d\u3063\u305f\u3088\u308a\u7c21\u5358\u306b\u4f7f\u3048\u305f\u306e\u3067\u81ea\u5206\u7528\u306e\u30e1\u30e2\u3068\u3057\u3066\u5185\u5bb9\u3092\u6b8b\u3057\u3066\u304a\u304f\u3002\n\n# \u6e96\u5099\n```ProxyUtils.java\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static <T> T makeProxy(\n\t\t\tT src, \n\t\t\tClass<?>[] classes, \n\t\t\tMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object[]>> argumentModifier, \n\t\t\tMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object>> methodReplacer, \n\t\t\tMap<Function<Method, Boolean>, Function<Tuple4<Object, Method, Object[], Object>, Object>> resultModifier\n\t) {\n\t\treturn (T) Proxy.newProxyInstance(\n\t\t\t\tsrc.getClass().getClassLoader(),\n\t\t\t\tclasses, \n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\t@Override public Object invoke(Object proxy, Method method, Object[] args_) throws Exception {\n\t\t\t\t\t\tObject[] args = applyModifier(argumentModifier, method, Tuple.of(src, method, args_), () -> args_); // \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u6642\u306eargument\u90e8\u5206\u306e\u52a0\u5de5\u3092\u884c\u306a\u3046\n\t\t\t\t\t\tObject result = applyModifier(methodReplacer, method, Tuple.of(src, method, args), () -> method.invoke(src, args));// \u30e1\u30bd\u30c3\u30c9\u81ea\u4f53\u3092\u7f6e\u304d\u304b\u3048\u308b \n\t\t\t\t\t\treturn applyModifier(resultModifier, method, Tuple.of(src, method, args, result), () -> result); // \u30e1\u30bd\u30c3\u30c9\u304b\u3089\u306e\u7d50\u679c\u3092\u52a0\u5de5\u3059\u308b\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t);\n\t}\n\n\tprivate static interface SupplierThrowsException<A> {public A get() throws Exception;}\n\tprivate static <C, A, R> R applyModifier(Map<Function<C, Boolean>, Function<A, R>> map, C cond, A arg, SupplierThrowsException<R> defaultResult) throws Exception {\n\t\tif (map != null) {\n\t\t\tfor (Entry<Function<C, Boolean>, Function<A, R>> e : map.entrySet()) {\n\t\t\t\tif (e.getKey().apply(cond)) return e.getValue().apply(arg);\n\t\t\t}\n\t\t}\n\t\treturn defaultResult.get();\n\t}\n\n```\n\n\u5fc5\u8981\u306a\u6e96\u5099\u306f\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u3060\u3063\u305f\u3002\n\n# \u4f7f\u3044\u65b9\n\n\u4f8b\u3068\u3057\u3066 Integer \u3092\u4e8c\u3064\u53d6\u308a\u3001\u305d\u308c\u3092 + \u8a18\u53f7\u3067\u3064\u306a\u3052\u305f\u6587\u5b57\u5217\u3092\u751f\u6210\u3059\u308b BiFunction \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u6319\u52d5\u3092\u5916\u304b\u3089\u5909\u3048\u308b\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306b\u793a\u3059\u3002\n\n```Main.java\n\tpublic static void main(String[] args) {\n\t\t\n\t\tfinal BiFunction<Integer, Integer, String> hoge = new BiFunction<Integer, Integer, String>() {\n\t\t\t@Override public String apply(Integer t, Integer u) {return \"\" + t + \" + \" + u;}\n\t\t};\n\t\t\n\t\tBiFunction<Integer, Integer, String> hoge1 = ProxyUtils.makeProxy( // apply\u304c\u547c\u3070\u308c\u305f\u969b\u3001\u4e00\u756a\u76ee\u306e\u5f15\u6570\u306b +2\u3001\u4e8c\u756a\u76ee\u306e\u5f15\u6570\u306b -2 \u3059\u308b\n\t\t\t\thoge, new Class<?>[]{BiFunction.class}, \n\t\t\t\tnew HashMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object[]>>() {{\n\t\t\t\t\tput(\n\t\t\t\t\t\t\tmethod -> \"apply\".equals(method.getName()), // \u30e1\u30bd\u30c3\u30c9\u540d\u304c apply \u306e\u5834\u5408\u306b\u4ee5\u4e0b\u3092\u5b9f\u884c\n\t\t\t\t\t\t\ttpl3 -> {\n\t\t\t\t\t\t\t\tObject[] args = tpl3.cdr.cdr.car; // argument \u90e8\u5206\u3092\u53d6\u308a\u51fa\u3057 \u6700\u521d\u306e\u5f15\u6570\u306b2\u3092\u8db3\u3057\u3001\u6b21\u306e\u5f15\u6570\u304b\u30892\u3092\u5f15\u304f\n\t\t\t\t\t\t\t\targs[0] = (Integer)args[0] + 2;\n\t\t\t\t\t\t\t\targs[1] = (Integer)args[1] - 2;\n\t\t\t\t\t\t\t\treturn args;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}}, \n\t\t\t\tnull, \n\t\t\t\tnull\n\t\t);\n\t\tBiFunction<Integer, Integer, String> hoge2 = ProxyUtils.makeProxy( // a + b \u3092\u8868\u793a\u3059\u308b\u306e\u3067\u306f\u306a\u304f a - b \u3092\u8868\u793a\u3059\u308b\u3088\u3046\u306b\u5909\u3048\u308b\n\t\t\t\thoge, new Class<?>[]{BiFunction.class}, \n\t\t\t\tnull,\n\t\t\t\tnew HashMap<Function<Method, Boolean>, Function<Tuple3<Object, Method, Object[]>, Object>>() {{\n\t\t\t\t\tput(\n\t\t\t\t\t\t\tmethod -> \"apply\".equals(method.getName()),\n\t\t\t\t\t\t\ttpl3 -> {\n\t\t\t\t\t\t\t\tObject[] args = tpl3.cdr.cdr.car;\n\t\t\t\t\t\t\t\treturn \"\" + args[0] + \" - \" + args[1];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}}, \n\t\t\t\tnull\n\t\t);\n\n\t\tBiFunction<Integer, Integer, String> hoge3 = ProxyUtils.makeProxy( // \u7d50\u679c\u6587\u5b57\u5217\u30922\u56de\u7e70\u66ff\u3048\u3059\u3088\u3046\u306b\u5909\u3048\u308b\n\t\t\t\thoge, new Class<?>[]{BiFunction.class}, \n\t\t\t\tnull, \n\t\t\t\tnull, \n\t\t\t\tnew HashMap<Function<Method, Boolean>, Function<Tuple4<Object, Method, Object[], Object>, Object>>() {{\n\t\t\t\t\tput(\n\t\t\t\t\t\t\tmethod -> \"apply\".equals(method.getName()),\n\t\t\t\t\t\t\ttpl4 -> {\n\t\t\t\t\t\t\t\tObject result = tpl4.cdr.cdr.cdr.car; // \u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067\u5b9f\u884c\u3057\u305f\u7d50\u679c\u3092\u53d6\u308a\u51fa\u3057\n\t\t\t\t\t\t\t\treturn result + \" \" + result;        // \u305d\u308c\u30922\u56de\u7e70\u66ff\u3048\u3059\n\t\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t);\n\t\n\t\tSystem.out.println(hoge.apply(2, 3)); // 2 + 3 \u3068\u8868\u793a\n\t\tSystem.out.println(hoge1.apply(2, 3)); // 4 + 1 \u3068\u8868\u793a\n\t\tSystem.out.println(hoge2.apply(2, 3)); // 2 - 3 \u3068\u8868\u793a\n\t\tSystem.out.println(hoge3.apply(2, 3)); // 2 + 3 2 + 3  \u3068\u8868\u793a\n\t}\n```\n\n# trait \u3082\u3069\u304d\n\n\u3053\u3053\u307e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u521d\u3081\u3066\u6c17\u304c\u3064\u3044\u305f\u306e\u3060\u304c\u3001\u5143\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30af\u30e9\u30b9\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3055\u3048\u3044\u306a\u3044\u30e1\u30bd\u30c3\u30c9\u3059\u3089 invocation handler \u306b\u66f8\u304d\u52a0\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u3060\u3002\u3064\u307e\u308a\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u6e96\u5099\u3092\u3057\u3066\u304a\u304f\u3068\u2026\n\n```ProxyUtils.java\n\tpublic static interface TraitInterface<T extends TraitInterface<T>> {public Class<T> interfaceClass();}\n\t\n\tprivate static interface FunctionThrowsException<A, B> {public B apply(A a) throws Exception;}\n\t@SuppressWarnings(\"unchecked\")\n\tpublic static <S> S trait(S src, TraitInterface<?>... trait) {\n\t\treturn (S) Proxy.newProxyInstance(\n\t\t\t\ttrait.getClass().getClassLoader(),\n\t\t\t\tArrays.asList(trait).stream().map(t -> t.interfaceClass()).collect(Collectors.toList()).toArray(new Class<?>[0]),\n\t\t\t\tnew InvocationHandler() {\n\t\t\t\t\tMap<String, FunctionThrowsException<Object[], Object>> handler = new HashMap<String, FunctionThrowsException<Object[], Object>>() {\n\t\t\t\t\t\tprivate static final long serialVersionUID = 6154196791279856396L;\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfor (TraitInterface<?> t : trait) for (Method m : t.getClass().getMethods()) put(m.getName(), args -> m.invoke(t, args));\n\t\t\t\t\t\t\tfor (Method m : src.getClass().getMethods()) remove(m.getName()); // \u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u7f6e\u304d\u304b\u3048\u306a\u3044\u3053\u3068\u306b\u3059\u308b\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t@Override public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n\t\t\t\t\t\tif (handler.containsKey(method.getName())) return handler.get(method.getName()).apply(args); else return method.invoke(src, args);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t);\n\t}\n```\n\n\u3053\u3093\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```Main.java\n\tpublic static interface Person extends TraitInterface<Person> {\n\t\tpublic default Class<Person> interfaceClass() {return Person.class;}\n\t\tpublic void setName(String name_);\n\t\tpublic String getName();\n\t}\n\n\tpublic static interface Place extends TraitInterface<Place> {\n\t\tpublic default Class<Place> interfaceClass() {return Place.class;}\n\t\tpublic void setAddress(String address_);\n\t\tpublic String getAddress();\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t\n\t\tObject o = new Object();\n\t\t\n\t\tPerson m = new Person() {\n\t\t\tprivate String name;\n\t\t\t@Override public void setName(String name_) {name = name_;}\n\t\t\t@Override public String getName() {return name;}\n\t\t};\n\t\t\n\t\tPlace p = new Place() {\n\t\t\tprivate String address;\n\t\t\t@Override public void setAddress(String address_) {address = address_;}\n\t\t\t@Override public String getAddress() {return address;}\n\t\t};\n\t\t\n\t\tSystem.out.println(\"Hash \" + o.hashCode());\n\t\t\n\t\to = trait(o, m, p); // Object \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306b Person \u306e\u6a5f\u80fd\u3068 Place \u306e\u6a5f\u80fd\u3092\u5f8c\u4ed8\u3051\u3059\u308b\n\t\t\n\t\t((Person)o).setName(\"Ichiro\");\n\t\tSystem.out.println(((Person)o).getName()); // \u6b63\u3057\u304f\u6a5f\u80fd\u3057\u3066\u3044\u308b\n\t\t((Place)o).setAddress(\"Tokyo\");\n\t\tSystem.out.println(((Place)o).getAddress()); // \u6b63\u3057\u304f\u6a5f\u80fd\u3057\u3066\u3044\u308b\n\n\t\tSystem.out.println(\"Hash \" + o.hashCode()); // Object \u306e\u672c\u6765\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u547c\u3073\u3060\u305b\u308b\n\t}\n```\ntrait\u307e\u304c\u3044\u306e\u30ad\u30e2\u3044\u30b3\u30fc\u30c9\u306e\u3067\u304d\u3042\u304c\u308a\u3060\u3002\n\n**\u3064\u3044\u30ab\u30c3\u3068\u306a\u3063\u3066\u3084\u3063\u305f\u3001\u4eca\u306f\u53cd\u7701\u3057\u3066\u3044\u308b\u3002**\n", "tags": ["Java", "proxy"]}