{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u672c\u89e3\u8aac\u306f1.7.x\u7cfb\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\nBukkit\u3067\u9001\u53d7\u4fe1\u3055\u308c\u3066\u3044\u308b\u30d1\u30b1\u30c3\u30c8\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u5272\u308a\u8fbc\u307f\u3001\u6539\u3056\u3093\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u306fBukkitAPI\u306e\u4ed6\u306bnet.minecraft\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5fc5\u8981\u3068\u3059\u308b\u306e\u3067\u3001\nCraftBukkit\u3092\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\nmaven\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\npom.xml\n<dependencies>\n    <dependency>\n        <groupId>org.bukkit</groupId>\n        <artifactId>craftbukkit</artifactId>\n        <version>1.7.2-R0.4-SNAPSHOT</version>\n    </dependency>\n</dependencies>\n\n\n\n\u5272\u308a\u8fbc\u307f\nNetty\u3092\u4f7f\u7528\u3057\u3066packet_handler\u306b\u5272\u308a\u8fbc\u307f\u307e\u3059\u3002\n\u305d\u308c\u306b\u3042\u305f\u3063\u30663\u3064\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\nNettyInjecter.java\npublic class NettyInjector implements Listener {\n\n    private Plugin plugin;\n\n    HashMap<PlayerChannelHandler, Player> connection = new HashMap<>();\n\n    private Class EntityPlayer;\n    private Field EntityPlayer_playerConnection;\n\n    private Class PlayerConnection;\n    private Field PlayerConnection_networkManager;\n\n    private Class NetworkManager;\n    private Field NetworkManager_K;\n    private Field NetworkManager_M;\n\n    public NettyInjector(Plugin plugin){\n        this.plugin = plugin;\n        Bukkit.getServer().getPluginManager().registerEvents(this, plugin);\n\n        try {\n\n            EntityPlayer = Reflection.getCraftClass(\"EntityPlayer\");\n            EntityPlayer_playerConnection = Reflection.getField(EntityPlayer, \"playerConnection\");\n\n            PlayerConnection = Reflection.getCraftClass(\"PlayerConnection\");\n            PlayerConnection_networkManager = Reflection.getField(PlayerConnection, \"networkManager\");\n\n            NetworkManager = Reflection.getCraftClass(\"NetworkManager\");\n            NetworkManager_K = Reflection.getField(NetworkManager, \"k\");\n            NetworkManager_M = Reflection.getField(NetworkManager, \"m\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void inject(Player player) throws Exception{\n        Object entityPlayer = Reflection.getEntityPlayer(player);\n        Object networkManager = getNetworkManager(entityPlayer);\n        Channel channel = getChannel(networkManager);\n        PlayerChannelHandler pch = new PlayerChannelHandler();\n        if(channel.pipeline().get(PlayerChannelHandler.class) == null){\n            channel.pipeline().addBefore(\"packet_handler\", \"YourPluginName\", pch);\n            connection.put(pch, player);\n        }\n    }\n\n    public void remove(final Player player) throws Exception{\n        Object entityPlayer = Reflection.getEntityPlayer(player);\n        Object networkManager = getNetworkManager(entityPlayer);\n        final Channel channel = getChannel(networkManager);\n        if(channel.pipeline().get(PlayerChannelHandler.class) != null){\n            channel.pipeline().remove(PlayerChannelHandler.class);\n            for (Map.Entry<PlayerChannelHandler, Player> es : connection.entrySet()) {\n                if (es.getValue().equals(player)) {\n                    connection.remove(es.getKey());\n                }\n            }\n        }\n    }\n\n    @EventHandler\n    public void onPluginDisable(PluginDisableEvent e) throws Exception{\n        if(e.getPlugin().equals(plugin)){\n            for(Player player: Bukkit.getOnlinePlayers()) {\n                remove(player);\n            }\n        }\n    }\n\n    private Object getNetworkManager(Object entityPlayer) {\n        Object pc = Reflection.getFieldValue(EntityPlayer_playerConnection, entityPlayer);\n        return Reflection.getFieldValue(PlayerConnection_networkManager, pc);\n    }\n\n    private Channel getChannel(Object networkManager) {\n        Channel ch = null;\n        try {\n            ch = Reflection.getFieldValue(NetworkManager_K, networkManager);\n        } catch (Exception e) {\n            ch = Reflection.getFieldValue(NetworkManager_M, networkManager);\n        }\n        return ch;\n    }\n\n    @EventHandler\n    public void onPlayerJoin(PlayerJoinEvent e) throws Exception{\n        inject(e.getPlayer());\n    }\n\n    @EventHandler\n    public void onPlayerQuit(PlayerQuitEvent e) throws Exception{\n        remove(e.getPlayer());\n    }\n\n    @EventHandler\n    public void onPluginEnable(PluginEnableEvent e) throws Exception{\n        if(e.getPlugin().equals(plugin)){\n            for(Player player: Bukkit.getOnlinePlayers()){\n                inject(player);\n            }\n        }\n    }\n}\n\n\n\nReflection.java\npublic class Reflection {\n\n    public static String getPackageName(){\n        String packagename = \"net.minecraft.server.\"+getCraftBukkitVersion();\n        return packagename;\n    }\n\n    public static String getCraftBukkitVersion(){\n        String version = Bukkit.getServer().getClass().getPackage().getName().replace(\".\", \",\").split(\",\")[3];\n        return version;\n    }\n\n    public static Class<?> getCraftClass(String s) throws Exception {\n        Class<?> craftclass = Class.forName(getPackageName()+\".\"+s);\n        return craftclass;\n    }\n\n    public static Object getEntityPlayer(Player p) throws Exception{\n        Method getHandle = p.getClass().getMethod(\"getHandle\");\n        return getHandle.invoke(p);\n    }\n\n    public static Object getFieldValue(Object instance, String fieldName) throws Exception {\n        Field field = instance.getClass().getDeclaredField(fieldName);\n        field.setAccessible(true);\n        return field.get(instance);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static  <T> T getFieldValue(Field field, Object obj) {\n        try {\n            return (T) field.get(obj);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    public static Field getField(Class<?> clazz, String fieldName) throws Exception {\n        Field field = clazz.getDeclaredField(fieldName);\n        field.setAccessible(true);\n        return field;\n    }\n\n    public static void setFieldValue(Field field, Object obj, Object value) {\n        try {\n            field.set(obj, value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n\n\n\nPlayerChannelHandler.java\npublic class PlayerChannelHandler extends ChannelDuplexHandler {\n\n    /**\n     * \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n     * @param ctx\n     * @param msg\n     * @throws Exception\n     */\n    @Override\n    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n        if(msg.getClass().getSimpleName().equalsIgnoreCase(\"PacketPlayInTabComplete\")){\n           String s = (String)Reflection.getFieldValue(msg, \"a\");\n            if(!(s.startsWith(\"/ver\") || s.startsWith(\"/version\"))){\n                super.channelRead(ctx, msg);\n            }\n        }else{\n            super.channelRead(ctx, msg);\n        }\n    }\n\n    /**\n     * \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\n     * @param ctx\n     * @param msg\n     * @param promise\n     * @throws Exception\n     */\n    @Override\n    public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n        super.write(ctx, msg, promise);\n    }\n}\n\n\n3\u3064\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u7d42\u308f\u3063\u305f\u3089\u3001\u6700\u5f8c\u306bonEnable\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\n\nonEnable\n@Override\npublic void onEnable() {\n    new NettyInjector(this);\n}\n\n\n\u3053\u306e\u8a18\u4e8b\u306e\u4f8b\u3067\u306fPacketPlayInTabComplete\u3068\u3044\u3046\u30bf\u30d6\u88dc\u5b8c\u3092\u884c\u3046\u3068\u304d\u306b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u308b\u30d1\u30b1\u30c3\u30c8\u304c\"/ver\"\u307e\u305f\u306f\u3001\"/version\"\u3060\u3063\u305f\u5834\u5408\u30d1\u30b1\u30c3\u30c8\u3092\u7834\u68c4\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u3069\u306e\u30d1\u30b1\u30c3\u30c8\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u4e0b\u8a18\u3092URL\u898b\u3066\u304f\u3060\u3055\u3044\u3002\nhttps://github.com/Bukkit/mc-dev/tree/master/net/minecraft/server\nhttp://wiki.vg/Protocol\n\u4e0b\u8a18\u306e\u753b\u50cf\u306e\u72b6\u614b\u3067TAB\u30ad\u30fc\u3092\u62bc\u3057\u3066\u3082\u30d7\u30e9\u30b0\u30a4\u30f3\u30ea\u30b9\u30c8\u304c\u51fa\u306a\u3051\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n\u53c2\u8003\nhttps://github.com/Bukkit/mc-dev/blob/master/net/minecraft/server/PacketPlayInTabComplete.java\nhttp://wiki.vg/Protocol#Tab-Complete\n## \u6982\u8981\n\u672c\u89e3\u8aac\u306f1.7.x\u7cfb\u3092\u524d\u63d0\u3068\u3057\u3066\u3044\u307e\u3059\u3002\nBukkit\u3067\u9001\u53d7\u4fe1\u3055\u308c\u3066\u3044\u308b\u30d1\u30b1\u30c3\u30c8\u306b\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u5272\u308a\u8fbc\u307f\u3001\u6539\u3056\u3093\u3057\u307e\u3059\u3002\n\u3053\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u306b\u306fBukkitAPI\u306e\u4ed6\u306bnet.minecraft\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5fc5\u8981\u3068\u3059\u308b\u306e\u3067\u3001\nCraftBukkit\u3092\u30d3\u30eb\u30c9\u30d1\u30b9\u306b\u5165\u308c\u3066\u304f\u3060\u3055\u3044\u3002\nmaven\u3092\u4f7f\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306f\u4e0b\u8a18\u306e\u3088\u3046\u306b\u66f8\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n\n```xml:pom.xml\n<dependencies>\n    <dependency>\n        <groupId>org.bukkit</groupId>\n        <artifactId>craftbukkit</artifactId>\n        <version>1.7.2-R0.4-SNAPSHOT</version>\n    </dependency>\n</dependencies>\n```\n\n## \u5272\u308a\u8fbc\u307f\nNetty\u3092\u4f7f\u7528\u3057\u3066packet_handler\u306b\u5272\u308a\u8fbc\u307f\u307e\u3059\u3002\n\u305d\u308c\u306b\u3042\u305f\u3063\u30663\u3064\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n```java:NettyInjecter.java\npublic class NettyInjector implements Listener {\n\n    private Plugin plugin;\n\n    HashMap<PlayerChannelHandler, Player> connection = new HashMap<>();\n\n    private Class EntityPlayer;\n    private Field EntityPlayer_playerConnection;\n\n    private Class PlayerConnection;\n    private Field PlayerConnection_networkManager;\n\n    private Class NetworkManager;\n    private Field NetworkManager_K;\n    private Field NetworkManager_M;\n\n    public NettyInjector(Plugin plugin){\n        this.plugin = plugin;\n        Bukkit.getServer().getPluginManager().registerEvents(this, plugin);\n\n        try {\n\n            EntityPlayer = Reflection.getCraftClass(\"EntityPlayer\");\n            EntityPlayer_playerConnection = Reflection.getField(EntityPlayer, \"playerConnection\");\n\n            PlayerConnection = Reflection.getCraftClass(\"PlayerConnection\");\n            PlayerConnection_networkManager = Reflection.getField(PlayerConnection, \"networkManager\");\n\n            NetworkManager = Reflection.getCraftClass(\"NetworkManager\");\n            NetworkManager_K = Reflection.getField(NetworkManager, \"k\");\n            NetworkManager_M = Reflection.getField(NetworkManager, \"m\");\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    public void inject(Player player) throws Exception{\n        Object entityPlayer = Reflection.getEntityPlayer(player);\n        Object networkManager = getNetworkManager(entityPlayer);\n        Channel channel = getChannel(networkManager);\n        PlayerChannelHandler pch = new PlayerChannelHandler();\n        if(channel.pipeline().get(PlayerChannelHandler.class) == null){\n            channel.pipeline().addBefore(\"packet_handler\", \"YourPluginName\", pch);\n            connection.put(pch, player);\n        }\n    }\n\n    public void remove(final Player player) throws Exception{\n        Object entityPlayer = Reflection.getEntityPlayer(player);\n        Object networkManager = getNetworkManager(entityPlayer);\n        final Channel channel = getChannel(networkManager);\n        if(channel.pipeline().get(PlayerChannelHandler.class) != null){\n            channel.pipeline().remove(PlayerChannelHandler.class);\n            for (Map.Entry<PlayerChannelHandler, Player> es : connection.entrySet()) {\n                if (es.getValue().equals(player)) {\n                    connection.remove(es.getKey());\n                }\n            }\n        }\n    }\n\n    @EventHandler\n    public void onPluginDisable(PluginDisableEvent e) throws Exception{\n        if(e.getPlugin().equals(plugin)){\n            for(Player player: Bukkit.getOnlinePlayers()) {\n                remove(player);\n            }\n        }\n    }\n\n    private Object getNetworkManager(Object entityPlayer) {\n        Object pc = Reflection.getFieldValue(EntityPlayer_playerConnection, entityPlayer);\n        return Reflection.getFieldValue(PlayerConnection_networkManager, pc);\n    }\n\n    private Channel getChannel(Object networkManager) {\n        Channel ch = null;\n        try {\n            ch = Reflection.getFieldValue(NetworkManager_K, networkManager);\n        } catch (Exception e) {\n            ch = Reflection.getFieldValue(NetworkManager_M, networkManager);\n        }\n        return ch;\n    }\n\n    @EventHandler\n    public void onPlayerJoin(PlayerJoinEvent e) throws Exception{\n        inject(e.getPlayer());\n    }\n\n    @EventHandler\n    public void onPlayerQuit(PlayerQuitEvent e) throws Exception{\n        remove(e.getPlayer());\n    }\n\n    @EventHandler\n    public void onPluginEnable(PluginEnableEvent e) throws Exception{\n        if(e.getPlugin().equals(plugin)){\n            for(Player player: Bukkit.getOnlinePlayers()){\n                inject(player);\n            }\n        }\n    }\n}\n```\n\n```java:Reflection.java\npublic class Reflection {\n\n    public static String getPackageName(){\n        String packagename = \"net.minecraft.server.\"+getCraftBukkitVersion();\n        return packagename;\n    }\n\n    public static String getCraftBukkitVersion(){\n        String version = Bukkit.getServer().getClass().getPackage().getName().replace(\".\", \",\").split(\",\")[3];\n        return version;\n    }\n\n    public static Class<?> getCraftClass(String s) throws Exception {\n        Class<?> craftclass = Class.forName(getPackageName()+\".\"+s);\n        return craftclass;\n    }\n\n    public static Object getEntityPlayer(Player p) throws Exception{\n        Method getHandle = p.getClass().getMethod(\"getHandle\");\n        return getHandle.invoke(p);\n    }\n\n    public static Object getFieldValue(Object instance, String fieldName) throws Exception {\n        Field field = instance.getClass().getDeclaredField(fieldName);\n        field.setAccessible(true);\n        return field.get(instance);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    public static  <T> T getFieldValue(Field field, Object obj) {\n        try {\n            return (T) field.get(obj);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n\n    public static Field getField(Class<?> clazz, String fieldName) throws Exception {\n        Field field = clazz.getDeclaredField(fieldName);\n        field.setAccessible(true);\n        return field;\n    }\n\n    public static void setFieldValue(Field field, Object obj, Object value) {\n        try {\n            field.set(obj, value);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n}\n```\n\n```java:PlayerChannelHandler.java\npublic class PlayerChannelHandler extends ChannelDuplexHandler {\n\n    /**\n     * \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304b\u3089\u30d1\u30b1\u30c3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3068\u304d\n     * @param ctx\n     * @param msg\n     * @throws Exception\n     */\n    @Override\n    public void channelRead(ChannelHandlerContext ctx, Object msg) throws Exception {\n        if(msg.getClass().getSimpleName().equalsIgnoreCase(\"PacketPlayInTabComplete\")){\n           String s = (String)Reflection.getFieldValue(msg, \"a\");\n            if(!(s.startsWith(\"/ver\") || s.startsWith(\"/version\"))){\n                super.channelRead(ctx, msg);\n            }\n        }else{\n            super.channelRead(ctx, msg);\n        }\n    }\n\n    /**\n     * \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3078\u30d1\u30b1\u30c3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3068\u304d\n     * @param ctx\n     * @param msg\n     * @param promise\n     * @throws Exception\n     */\n    @Override\n    public void write(ChannelHandlerContext ctx, Object msg, ChannelPromise promise) throws Exception {\n        super.write(ctx, msg, promise);\n    }\n}\n```\n\n3\u3064\u306e\u30af\u30e9\u30b9\u3092\u4f5c\u6210\u3057\u7d42\u308f\u3063\u305f\u3089\u3001\u6700\u5f8c\u306bonEnable\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\n\n```java:onEnable\n@Override\npublic void onEnable() {\n    new NettyInjector(this);\n}\n```\n\n\u3053\u306e\u8a18\u4e8b\u306e\u4f8b\u3067\u306f**PacketPlayInTabComplete**\u3068\u3044\u3046\u30bf\u30d6\u88dc\u5b8c\u3092\u884c\u3046\u3068\u304d\u306b\u30b5\u30fc\u30d0\u30fc\u306b\u9001\u3089\u308c\u308b\u30d1\u30b1\u30c3\u30c8\u304c**\"/ver\"**\u307e\u305f\u306f\u3001**\"/version\"**\u3060\u3063\u305f\u5834\u5408\u30d1\u30b1\u30c3\u30c8\u3092\u7834\u68c4\u3059\u308b\u3068\u3044\u3046\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3069\u306e\u30d1\u30b1\u30c3\u30c8\u304c\u4f55\u3092\u3057\u3066\u3044\u308b\u304b\u306f\u4e0b\u8a18\u3092URL\u898b\u3066\u304f\u3060\u3055\u3044\u3002\n[https://github.com/Bukkit/mc-dev/tree/master/net/minecraft/server](https://github.com/Bukkit/mc-dev/tree/master/net/minecraft/server)\n[http://wiki.vg/Protocol](http://wiki.vg/Protocol)\n\n\u4e0b\u8a18\u306e\u753b\u50cf\u306e\u72b6\u614b\u3067TAB\u30ad\u30fc\u3092\u62bc\u3057\u3066\u3082\u30d7\u30e9\u30b0\u30a4\u30f3\u30ea\u30b9\u30c8\u304c\u51fa\u306a\u3051\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n![alt](http://pic.masakoma.net/image/45f27e0da1ff98deed5e15aa35b793c8.png)\n\n## \u53c2\u8003\n[https://github.com/Bukkit/mc-dev/blob/master/net/minecraft/server/PacketPlayInTabComplete.java](https://github.com/Bukkit/mc-dev/blob/master/net/minecraft/server/PacketPlayInTabComplete.java)\n[http://wiki.vg/Protocol#Tab-Complete](http://wiki.vg/Protocol#Tab-Complete)\n", "tags": ["minecraft"]}