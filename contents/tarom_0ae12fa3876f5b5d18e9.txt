{"tags": ["AWS", "elb", "websocket"], "context": "\n\n\u7d4c\u7def\n\nRails 5 \u304b\u3089 ActionCable \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\nAWS \u4e0a\u3067\u304a\u624b\u8efd\u306b\u8a66\u3057\u305f\u3044\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067 ELB \u3092\u4f7f\u3063\u3066\u5197\u9577\u69cb\u6210\u306b\u3057\u3088\u3046\n\n\n\n\u3042\u307e\u308a\u304a\u624b\u8efd\u3058\u3083\u306a\u304b\u3063\u305f\n\n\n\u554f\u984c\n\nELB \u304c Websocket \u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a Connection \u30d8\u30c3\u30c0\u3068 Upgrade \u30d8\u30c3\u30c0\u3092\u524a\u308b\n\u524a\u3089\u306a\u3044\u3088\u3046\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092 TCP \u306b\u3059\u308b\u3068\u4eca\u5ea6\u306f X-Fowarded-For \u30d8\u30c3\u30c0\u3092\u3064\u3051\u3066\u304f\u308c\u306a\u3044\n\u306e\u3067\u767a\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u304c\u3068\u308c\u306a\u3044\n\n\n\nProxy Protocol \u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\u3089\u3057\u3044\n\n\nProxy Protocol \u3068\u306f\n\nHAProxy \u304c\u7b56\u5b9a\n\u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306e1\u884c\u76ee\u306b\u767a\u4fe1\u5143\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u3066\u9001\u4fe1\u3059\u308b\u4ed5\u69d8\n\n\n\u4f8b\nPROXY TCP4 198.51.100.22 203.0.113.7 80 80\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n\\r\\n\n\n\n\n\u5168\u4f53\u306e\u69cb\u6210\n\n\n\nELB \u306e\u8a2d\u5b9a\n\n\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4e21\u65b9\u3068\u3082 TCP \u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\n\n\n\n\n\n\u809d\u5fc3\u306eProxy Protocol\u306e\u8a2d\u5b9a\u306fAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u306f\u3067\u304d\u306a\u3044\n\n\nAWS CLI \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nMac\n$ brew install awscli\n\n\nLinux ( Python 2.6.5 \u4ee5\u964d\u304c\u5fc5\u8981 )\n$ pip install awscli\n\n\nWindows\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3067\n\n\nAWS CLI \u306e\u8a2d\u5b9a\n\nIAM\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\u3057\u3066 Access Key ID \u3068 Secret Access Key \u3092\u8a2d\u5b9a\n\n$ aws configure\nAWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE\nAWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: ENTER\n\n\n\nELB - ProxyProtocol \u306e\u8a2d\u5b9a\n$ aws elb create-load-balancer-policy \\\n  --load-balancer-name {ELB Name}\n  --policy-name EnableProxyProtocol \\\n  --policy-type-name ProxyProtocolPolicyType \\\n  --policy-attributes \\\n    AttributeName=ProxyProtocol,AttributeValue=true\n$ aws elb set-load-balancer-policies-for-backend-server \\\n  --load-balancer-name {ELB Name} \\\n  --instance-port 80 \\\n  --policy-names EnableProxyProtocol\n\n\n\nELB - Proxy Protocol \u8a2d\u5b9a\u78ba\u8a8d\n$ aws elb describe-load-balancers \\\n  --load-balancer-name {ELB Name}\n\n\"BackendServerDescriptions\": [\n    {\n        \"InstancePort\": 80, \n        \"PolicyNames\": [\n            \"EnableProxyProtocol\"\n        ]\n    }\n], \n\n\n\nNginx \u306e\u8a2d\u5b9a(1)\nserver {\n  listen 80 proxy_protocol;\n  real_ip_header proxy_protocol;\n\n  location / {\n    proxy_http_version \"1.1\";\n    proxy_pass http://localhost:3000/;\n    proxy_set_header Connection $connection_upgrade;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header X-Forwarded-For $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Host $http_host;\n  }\n}\n\n\n\nNginx \u306e\u8a2d\u5b9a(2)\n\n\nUpgrade \u30d8\u30c3\u30c0\u304c\u7a7a\u306e\u5834\u5408\u306f Connection \u30d8\u30c3\u30c0\u3092 close \u306b\u3059\u308b\n\nhttp {\n  ...\n  map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n  }\n  ...\n}\n\n\n\n\u307e\u3068\u3081\n\nELB\u306fTCP\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\n\u767a\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u3068\u308b\u305f\u3081\u306b Proxy Protocol \u304c\u5fc5\u8981\nProxy Protocol \u3092\u634c\u304f\u305f\u3081\u306b\u9593\u306b Nginx \u304b HAProxy \u304c\u5fc5\u8981\n\n\n\n\u7d50\u5c40\u306a\u306b\u304c\u5b09\u3057\u3044\uff1f\n\n\u30de\u30cd\u30fc\u30b8\u30c9\u306a\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u7ba1\u7406\u304c\u697d\u3060\u3057EC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7acb\u3066\u308b\u3088\u308a\u306f\u5b89\u3044\nSSL \u306e\u8a2d\u5b9a\u306fAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u304b\u3089\u3067\u304d\u308b\u3057\u3001\u6700\u8fd1\u3060\u3068AWS Certificate Manager\u306e\u8a3c\u660e\u66f8\u304c\u7121\u6599\u3067\u4f7f\u3048\u308b\n\n\n\n\u53c2\u8003\n\n\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e Proxy Protocol \u306e\u30b5\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b - Elastic Load Balancing\nHow to Configure NGINX to Accept the Proxy Protocol | NGINX\nPROXY protocol - HAProxy\n\n## \u7d4c\u7def\n\n- Rails 5 \u304b\u3089 ActionCable \u304c\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n- AWS \u4e0a\u3067\u304a\u624b\u8efd\u306b\u8a66\u3057\u305f\u3044\n- \u305b\u3063\u304b\u304f\u306a\u306e\u3067 ELB \u3092\u4f7f\u3063\u3066\u5197\u9577\u69cb\u6210\u306b\u3057\u3088\u3046\n\n----\n\n# \u3042\u307e\u308a\u304a\u624b\u8efd\u3058\u3083\u306a\u304b\u3063\u305f\n\n----\n\n## \u554f\u984c\n\n- ELB \u304c Websocket \u306e\u63a5\u7d9a\u306b\u5fc5\u8981\u306a `Connection` \u30d8\u30c3\u30c0\u3068 `Upgrade` \u30d8\u30c3\u30c0\u3092\u524a\u308b\n- \u524a\u3089\u306a\u3044\u3088\u3046\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092 `TCP` \u306b\u3059\u308b\u3068\u4eca\u5ea6\u306f `X-Fowarded-For` \u30d8\u30c3\u30c0\u3092\u3064\u3051\u3066\u304f\u308c\u306a\u3044\n- \u306e\u3067\u767a\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u304c\u3068\u308c\u306a\u3044\n\n----\n\n## Proxy Protocol \u3092\u4f7f\u3046\u3057\u304b\u306a\u3044\u3089\u3057\u3044\n\n----\n\n## Proxy Protocol \u3068\u306f\n\n- HAProxy \u304c\u7b56\u5b9a\n- \u30ea\u30af\u30a8\u30b9\u30c8\u30dc\u30c7\u30a3\u306e1\u884c\u76ee\u306b\u767a\u4fe1\u5143\u306e\u60c5\u5831\u3092\u8ffd\u52a0\u3057\u3066\u9001\u4fe1\u3059\u308b\u4ed5\u69d8\n\n##### \u4f8b\n```\nPROXY TCP4 198.51.100.22 203.0.113.7 80 80\\r\\n\nGET / HTTP/1.1\\r\\n\nHost: example.com\\r\\n\n\\r\\n\n```\n\n----\n\n## \u5168\u4f53\u306e\u69cb\u6210\n\n![elb_actioncable.png](https://qiita-image-store.s3.amazonaws.com/0/19816/b3008d7a-0f81-10c4-2398-999f2794a9ce.png)\n\n----\n\n## ELB \u306e\u8a2d\u5b9a\n\n- \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u4e21\u65b9\u3068\u3082 `TCP` \u306b\u8a2d\u5b9a\u3057\u3066\u304a\u304f\n\n<img width=\"893\" alt=\"elb1.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/19816/e39ac341-98c6-a665-3363-04ca39c36225.png\">\n\n<img width=\"893\" alt=\"elb2.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/19816/b85d0d18-c64b-fe17-87ea-dcc0d49def0e.png\">\n\n----\n\n## \u809d\u5fc3\u306eProxy Protocol\u306e\u8a2d\u5b9a\u306fAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u306f\u3067\u304d\u306a\u3044\n\n----\n\n## AWS CLI \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n###### Mac\n\n```bash\n$ brew install awscli\n```\n\n###### Linux ( Python 2.6.5 \u4ee5\u964d\u304c\u5fc5\u8981 )\n\n```bash\n$ pip install awscli\n```\n\n##### Windows\n\n[\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u304c\u3042\u308b\u306e\u3067\u305d\u308c\u3067](https://aws.amazon.com/jp/cli/)\n\n----\n\n## AWS CLI \u306e\u8a2d\u5b9a\n\n- IAM\u30e6\u30fc\u30b6\u3092\u8ffd\u52a0\u3057\u3066 `Access Key ID` \u3068 `Secret Access Key` \u3092\u8a2d\u5b9a\n\n```bash\n$ aws configure\nAWS Access Key ID [None]: AKIAIOSFODNN7EXAMPLE\nAWS Secret Access Key [None]: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY\nDefault region name [None]: ap-northeast-1\nDefault output format [None]: ENTER\n```\n\n----\n\n## ELB - ProxyProtocol \u306e\u8a2d\u5b9a\n\n```bash\n$ aws elb create-load-balancer-policy \\\n  --load-balancer-name {ELB Name}\n  --policy-name EnableProxyProtocol \\\n  --policy-type-name ProxyProtocolPolicyType \\\n  --policy-attributes \\\n    AttributeName=ProxyProtocol,AttributeValue=true\n$ aws elb set-load-balancer-policies-for-backend-server \\\n  --load-balancer-name {ELB Name} \\\n  --instance-port 80 \\\n  --policy-names EnableProxyProtocol\n```\n\n----\n\n## ELB - Proxy Protocol \u8a2d\u5b9a\u78ba\u8a8d\n\n```bash\n$ aws elb describe-load-balancers \\\n  --load-balancer-name {ELB Name}\n```\n```\n\"BackendServerDescriptions\": [\n    {\n        \"InstancePort\": 80, \n        \"PolicyNames\": [\n            \"EnableProxyProtocol\"\n        ]\n    }\n], \n```\n\n----\n\n## Nginx \u306e\u8a2d\u5b9a(1)\n\n```nginx\nserver {\n  listen 80 proxy_protocol;\n  real_ip_header proxy_protocol;\n\n  location / {\n    proxy_http_version \"1.1\";\n    proxy_pass http://localhost:3000/;\n    proxy_set_header Connection $connection_upgrade;\n    proxy_set_header Upgrade $http_upgrade;\n    proxy_set_header X-Forwarded-For $proxy_protocol_addr;\n    proxy_set_header X-Forwarded-Host $http_host;\n  }\n}\n```\n\n----\n\n## Nginx \u306e\u8a2d\u5b9a(2)\n\n- `Upgrade` \u30d8\u30c3\u30c0\u304c\u7a7a\u306e\u5834\u5408\u306f `Connection` \u30d8\u30c3\u30c0\u3092 `close` \u306b\u3059\u308b\n\n```nginx\nhttp {\n  ...\n  map $http_upgrade $connection_upgrade {\n    default upgrade;\n    ''      close;\n  }\n  ...\n}\n```\n\n----\n\n## \u307e\u3068\u3081\n\n- ELB\u306fTCP\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u3068\u3057\u3066\u4f7f\u7528\u3059\u308b\n- \u767a\u4fe1\u5143\u306eIP\u30a2\u30c9\u30ec\u30b9\u3092\u3068\u308b\u305f\u3081\u306b Proxy Protocol \u304c\u5fc5\u8981\n- Proxy Protocol \u3092\u634c\u304f\u305f\u3081\u306b\u9593\u306b Nginx \u304b HAProxy \u304c\u5fc5\u8981\n\n----\n\n## \u7d50\u5c40\u306a\u306b\u304c\u5b09\u3057\u3044\uff1f\n\n- \u30de\u30cd\u30fc\u30b8\u30c9\u306a\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306f\u7ba1\u7406\u304c\u697d\u3060\u3057EC2\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u7acb\u3066\u308b\u3088\u308a\u306f\u5b89\u3044\n- SSL \u306e\u8a2d\u5b9a\u306fAWS\u30b3\u30f3\u30bd\u30fc\u30eb\u4e0a\u304b\u3089\u3067\u304d\u308b\u3057\u3001\u6700\u8fd1\u3060\u3068AWS Certificate Manager\u306e\u8a3c\u660e\u66f8\u304c\u7121\u6599\u3067\u4f7f\u3048\u308b\n\n----\n\n## \u53c2\u8003\n\n- [\u30ed\u30fc\u30c9\u30d0\u30e9\u30f3\u30b5\u30fc\u306e Proxy Protocol \u306e\u30b5\u30dd\u30fc\u30c8\u3092\u8a2d\u5b9a\u3059\u308b - Elastic Load Balancing](http://docs.aws.amazon.com/ja_jp/ElasticLoadBalancing/latest/DeveloperGuide/enable-proxy-protocol.html)\n- [How to Configure NGINX to Accept the Proxy Protocol | NGINX](https://www.nginx.com/resources/admin-guide/proxy-protocol/)\n- [PROXY protocol - HAProxy](http://www.haproxy.org/download/1.5/doc/proxy-protocol.txt)\n"}