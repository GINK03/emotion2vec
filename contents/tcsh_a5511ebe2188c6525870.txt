{"context": "AWS CLI\u3092\u5229\u7528\u3057\u3066\u3001EC2\u3092\u8d77\u52d5\u3057\u3001CodeDeploy Agent\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\u524d\u63d0\u6761\u4ef6\n\nEC2\u3078\u306e\u6a29\u9650\nEC2\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\nAWS CLI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\nAWS CLI 1.11.2\n\n\n\u30b3\u30de\u30f3\u30c9\naws --version\n\n\n\n\u7d50\u679c(\u4f8b)\n         aws-cli/1.11.2 Python/2.7.11 Darwin/15.6.0 botocore/1.4.60\n\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30b3\u30de\u30f3\u30c9\nsudo -H pip install -U awscli\n\n\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5c5e\u6027\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u304cEC2-Classic\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nAWS_SUPPORT_PLATFORMS=$( \\\n          aws ec2 describe-account-attributes \\\n            --query 'AccountAttributes[?AttributeName == `supported-platforms`].AttributeValues[].AttributeValue' \\\n            --output text \\\n) && echo ${AWS_SUPPORT_PLATFORMS}\n\n\n\n\u7d50\u679c\n      VPC\n\n\n\u6ce8\u91c8: 'VPC'\u306e\u4ed6\u306b'EC2'\u304c\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u3001\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u5b58\u5728\n\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n\u30b3\u30de\u30f3\u30c9\nVPC_ID=$( \\\n        aws ec2 describe-vpcs \\\n          --filters Name=isDefault,Values=true \\\n          --query 'Vpcs[].VpcId' \\\n          --output text \\\n      ) \\\n         && echo ${VPC_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      vpc-xxxxxxxx\n\n\n\n0. \u6e96\u5099\n\n0.1. \u5909\u6570\u306e\u78ba\u8a8d\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\naws configure list\n\n\n\n\u7d50\u679c(\u4f8b)\n\n               Name                    Value             Type    Location\n               ----                    -----             ----    --------\n            profile         iamFull-prjZ-mbp13        env    AWS_DEFAULT_PROFILE\n         access_key     ****************XXXX shared-credentials-file\n         secret_key     ****************XXXX shared-credentials-file\n             region                         us-east-1  env    AWS_DEFAULT_REGION\n\n\nAssumeRole\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306fprofile\u304c ''\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306bprofile\u304c '' \u3068\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nexport AWS_DEFAULT_PROFILE=<IAM\u30e6\u30fc\u30b6\u540d>\n\n\n\n0.2. \u7a3c\u52d5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u78ba\u8a8d\n\u540c\u4e00\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 describe-instances \\\n        --filters Name=instance-state-name,Values=running\n\n\n\n\u7d50\u679c\n      {\n          \"Reservations\": []\n      }\n\n\n\n0.3. \u30ad\u30fc\u30da\u30a2\u306e\u78ba\u8a8d\n\u30ad\u30fc\u30da\u30a2\u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 describe-key-pairs \\\n        --query 'KeyPairs[].KeyName'\n\n\n\u30ad\u30fc\u30da\u30a2\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/59303d9506ca7d13f744 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u5229\u7528\u3059\u308b\u30ad\u30fc\u30da\u30a2\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_KEY_NAME=<\u30ad\u30fc\u30da\u30a2\u540d>\n\n\n\u5229\u7528\u3059\u308b\u30ad\u30fc\u30da\u30a2\u306e\u79d8\u5bc6\u9375\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_SSH_KEY=<\u79d8\u5bc6\u9375\u30d5\u30a1\u30a4\u30eb\u306e\u4f4d\u7f6e>\n\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n\n1.1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306e\u6c7a\u5b9a\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_INSTANCE_TYPE='t2.micro'\n\n\n\n1.2. \u30a4\u30e1\u30fc\u30b8ID\u306e\u6c7a\u5b9a\nAmazonLinux\u306e\u6700\u65b0AMI\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nAMZLINUX_VERSION='2016.03.3'\n      EC2_IMAGE_NAME=\"amzn-ami-hvm-${AMZLINUX_VERSION}.x86_64-gp2\"\n\n\n\n\u30b3\u30de\u30f3\u30c9\nEC2_IMAGE_ID=$( \\\n        aws ec2 describe-images \\\n          --filters Name=name,Values=\"${EC2_IMAGE_NAME}\" \\\n          --query 'Images[].ImageId' --output text \\\n      ) \\\n        && echo ${EC2_IMAGE_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      ami-6869aa05\n\n\n\n1.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u6c7a\u5b9a\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 describe-security-groups \\\n        --query 'SecurityGroups[].GroupName'\n\n\n\n'ec2-http-https-global-inbound'\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/1d6a499b03b776355ee2 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n'ec2-ssh-global-inbound'\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/77f8c9887634fd67f4d8 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\nHTTP/HTTPS\n\u5229\u7528\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nVPC_SG_NAME='ec2-http-https-global-inbound'\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\nVPC_SG_ID=$( \\\n        aws ec2 describe-security-groups \\\n          --filter Name=group-name,Values=${VPC_SG_NAME} \\\n          --query 'SecurityGroups[].GroupId' \\\n          --output text \\\n      ) \\\n        && echo ${VPC_SG_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      sg-xxxxxxxx\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nARRAY_VPC_SG_ID=\"${VPC_SG_ID} ${ARRAY_VPC_SG_ID}\" \\\n        && echo ${ARRAY_VPC_SG_ID}\n\n\n\nSSH\n\u5229\u7528\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nVPC_SG_NAME='ec2-ssh-global-inbound'\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\nVPC_SG_ID=$( \\\n        aws ec2 describe-security-groups \\\n          --filter Name=group-name,Values=${VPC_SG_NAME} \\\n          --query 'SecurityGroups[].GroupId' \\\n          --output text \\\n      ) \\\n        && echo ${VPC_SG_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      sg-xxxxxxxx\n\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nARRAY_VPC_SG_ID=\"${VPC_SG_ID} ${ARRAY_VPC_SG_ID}\" \\\n        && echo ${ARRAY_VPC_SG_ID}\n\n\n\nUser Data\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_EC2_USERDATA='userdata.bash'\n\n\n\n\u30b3\u30de\u30f3\u30c9\ncat << EOF > ${FILE_EC2_USERDATA}\n#!/bin/bash\nyum -y update\nyum install -y ruby\nyum install -y wget\ncd /home/ec2-user\nwget https://aws-codedeploy-${AWS_DEFAULT_REGION}.s3.amazonaws.com/latest/install\nchmod +x ./install\n./install auto\nEOF\n\ncat ${FILE_EC2_USERDATA}\n\n\n\n2. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\n\n2.1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        EC2_IMAGE_ID:       ${EC2_IMAGE_ID}\n        EC2_INSTANCE_TYPE:  ${EC2_INSTANCE_TYPE}\n        ARRAY_VPC_SG_ID:   \"${ARRAY_VPC_SG_ID}\"\n        EC2_KEY_NAME:       ${EC2_KEY_NAME}\n        IAM_INSTANCE_PROFILE_NAME: ${IAM_INSTANCE_PROFILE_NAME}\n        FILE_EC2_USERDATA:      ${FILE_EC2_USERDATA}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 run-instances \\\n        --image-id ${EC2_IMAGE_ID} \\\n        --instance-type ${EC2_INSTANCE_TYPE} \\\n        --security-group-ids ${ARRAY_VPC_SG_ID} \\\n        --key-name ${EC2_KEY_NAME} \\\n        --associate-public-ip-address \\\n        --iam-instance-profile Name=${IAM_INSTANCE_PROFILE_NAME} \\\n        --user-data file://${FILE_EC2_USERDATA}\n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"OwnerId\": \"XXXXXXXXXXXX\",\n        \"ReservationId\": \"r-xxxxxxxx\",\n        \"Groups\": [],\n        \"Instances\": [\n          {\n              \"Monitoring\": {\n                  \"State\": \"disabled\"\n              },\n              \"PublicDnsName\": \"\",\n              \"RootDeviceType\": \"ebs\",\n              \"State\": {\n                  \"Code\": 0,\n                  \"Name\": \"pending\"\n              },\n              \"EbsOptimized\": false,\n              \"LaunchTime\": \"\\ |today|\\ T01:23:45.000Z\",\n              \"PrivateIpAddress\": \"172.31.xx.xx\",\n              \"ProductCodes\": [],\n              \"VpcId\": \"vpc-xxxxxxxx\",\n              \"StateTransitionReason\": \"\",\n              \"InstanceId\": \"i-xxxxxxxx\",\n              \"ImageId\": \"ami-6869aa05\",\n              \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n              \"KeyName\": \"prjz-us-east-1-ec2\",\n              \"SecurityGroups\": [\n                  {\n                      \"GroupName\": \"ec2-ssh-global-inbound\",\n                      \"GroupId\": \"sg-xxxxxxxx\"\n                  },\n                  {\n                      \"GroupName\": \"ec2-http-https-global-inbound\",\n                      \"GroupId\": \"sg-xxxxxxxx\"\n                  }\n              ],\n              \"ClientToken\": \"\",\n              \"SubnetId\": \"subnet-xxxxxxxx\",\n              \"InstanceType\": \"t2.micro\",\n              \"NetworkInterfaces\": [\n                  {\n                      \"Status\": \"in-use\",\n                      \"MacAddress\": \"12:29:25:xx:xx:xx\",\n                      \"SourceDestCheck\": true,\n                      \"VpcId\": \"vpc-xxxxxxxx\",\n                      \"Description\": \"\",\n                      \"NetworkInterfaceId\": \"eni-xxxxxxxx\",\n                      \"PrivateIpAddresses\": [\n                          {\n                              \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n                              \"Primary\": true,\n                              \"PrivateIpAddress\": \"172.31.xx.xx\"\n                          }\n                      ],\n                      \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n                      \"Attachment\": {\n                          \"Status\": \"attaching\",\n                          \"DeviceIndex\": 0,\n                          \"DeleteOnTermination\": true,\n                          \"AttachmentId\": \"eni-attach-xxxxxxxx\",\n                          \"AttachTime\": \"\\ |today|\\ T01:23:45.000Z\"\n                      },\n                      \"Groups\": [\n                          {\n                              \"GroupName\": \"ec2-ssh-global-inbound\",\n                              \"GroupId\": \"sg-xxxxxxxx\"\n                          },\n                          {\n                              \"GroupName\": \"ec2-http-https-global-inbound\",\n                              \"GroupId\": \"sg-xxxxxxxx\"\n                          }\n                      ],\n                      \"SubnetId\": \"subnet-xxxxxxxx\",\n                      \"OwnerId\": \"XXXXXXXXXXXX\",\n                      \"PrivateIpAddress\": \"172.31.49.75\"\n                  }\n              ],\n              \"SourceDestCheck\": true,\n              \"Placement\": {\n                  \"Tenancy\": \"default\",\n                  \"GroupName\": \"\",\n                  \"AvailabilityZone\": \"us-east-1d\"\n              },\n              \"Hypervisor\": \"xen\",\n              \"BlockDeviceMappings\": [],\n              \"Architecture\": \"x86_64\",\n              \"StateReason\": {\n                  \"Message\": \"pending\",\n                  \"Code\": \"pending\"\n              },\n              \"IamInstanceProfile\": {\n                  \"Id\": \"AIPAXXXXXXXXXXXXXXXXX\",\n                  \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:instance-profile/\\ |IAM_INSTANCE_PROFILE_NAME|\\ S3ReadOnlyAccess\"\n              },\n              \"RootDeviceName\": \"/dev/xvda\",\n              \"VirtualizationType\": \"hvm\",\n              \"AmiLaunchIndex\": 0\n          }\n        ]\n      }\n\n\n\n2.2. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u306e\u53d6\u5f97\n\u8d77\u52d5\u4e2d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n\u8d77\u52d5\u4e2d\u306e\u5834\u5408\n\n\u30b3\u30de\u30f3\u30c9(\u8d77\u52d5\u4e2d\u306e\u5834\u5408)\nEC2_INSTANCE_ID=$( \\\n        aws ec2 describe-instances \\\n          --filters Name=instance-state-name,Values=pending \\\n          --query 'Reservations[].Instances[].InstanceId' \\\n          --output text \\\n) \\\n        && echo ${EC2_INSTANCE_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      i-xxxxxxxx\n\n\n\n\u8d77\u52d5\u5b8c\u4e86\u5f8c\u306e\u5834\u5408\n\n\u30b3\u30de\u30f3\u30c9(\u8d77\u52d5\u5b8c\u4e86\u5f8c\u306e\u5834\u5408)\nARRAY_EC2_INSTANCE_ID=$( \\\n        aws ec2 describe-instances \\\n          --filters Name=instance-state-name,Values=running \\\n          --query 'Reservations[].Instances[].InstanceId' \\\n          --output text \\\n) \\\n        && echo ${ARRAY_EC2_INSTANCE_ID}\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_INSTANCE_ID=$( \\\n        echo ${ARRAY_EC2_INSTANCE_ID} | sed 's/ .*$//' \\\n) \\\n        && echo ${EC2_INSTANCE_ID}\n\n\n\n\u7d50\u679c(\u4f8b)\n      i-xxxxxxxx\n\n\n\n2.3 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9\nEC2_INSTANCE_STATE=$( \\\n        aws ec2 describe-instances \\\n        --instance-ids ${EC2_INSTANCE_ID} \\\n        --query 'Reservations[].Instances[].State.Name' \\\n        --output text \\\n) \\\n        && echo ${EC2_INSTANCE_STATE}\n\n\n\n\u7d50\u679c\n      running\n\n\n\n3. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u78ba\u8a8d\n\n3.1. \u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u306e\u53d6\u5f97\n\n\u30b3\u30de\u30f3\u30c9\nEC2_PUBLIC_IP=$( \\\n        aws ec2 describe-instances \\\n          --instance-id ${EC2_INSTANCE_ID} \\\n          --query \"Reservations[].Instances[].PublicIpAddress\" \\\n          --output text \\\n) \\\n        && echo ${EC2_PUBLIC_IP}\n\n\n\n\u7d50\u679c(\u4f8b)\n      54.xxx.xxx.xxx\n\n\n\u5f8c\u307b\u3069\u30c7\u30d7\u30ed\u30a4\u3057\u305fWeb\u30a2\u30d7\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u4e0a\u8a18\u306eIP\u30a2\u30c9\u30ec\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u958b\u3044\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n3.2. SSH\u30ed\u30b0\u30a4\u30f3\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_SSH_KEY:  ${FILE_SSH_KEY}\n          EC2_PUBLIC_IP: ${EC2_PUBLIC_IP}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\nssh -i ${FILE_SSH_KEY} ec2-user@${EC2_PUBLIC_IP}\n\n\n\n\u7d50\u679c(\u4f8b)\n      The authenticity of host '54.xxx.xxx.xxx (54.xxx.xxx.xxx)' can't be established.\n      RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx.\n      Are you sure you want to continue connecting (yes/no)?\n\n\n\n\u5165\u529b\n      yes\n\n\n\n\u7d50\u679c(\u4f8b)\n      Warning: Permanently added '54.xxx.xxx.xxx' (RSA) to the list of known hosts.\n\n             __|  __|_  )\n             _|  (     /   Amazon Linux AMI\n            ___|\\___|___|\n\n      https://aws.amazon.com/amazon-linux-ami/2015.03-release-notes/\n      24 package(s) needed for security, out of 53 available\n      Run \"sudo yum update\" to apply all updates.\n\n\n\n3.3. codedeplocy agent\n\n\u30b3\u30de\u30f3\u30c9\nsudo service codedeploy-agent status\n\n\n\n\u7d50\u679c\n      The AWS CodeDeploy agent is running as PID xxxx\n\n\n\n3.4. EC2\u30e1\u30bf\u60c5\u5831\u306e\u78ba\u8a8d\n\n\u30b3\u30de\u30f3\u30c9(EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\necho -e \"\\n\" \\\n        && curl http://169.254.169.254/latest/meta-data/public-hostname \\\n        && echo -e \"\\n\"\n\n\n\n\u7d50\u679c(\u4f8b)\n      ec2-52-xxx-xxx-xxx.ap-northeast-1.compute.amazonaws.com\n\n\n\n3.5. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\n\n\u30b3\u30de\u30f3\u30c9(EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9)\nlogout\n\n\n\n\u7d50\u679c(\u4f8b)\n      Connection to xxx.xxx.xxx.xxx closed.\n\n\n\n9. \u4e8b\u5f8c\u4f5c\u696d\n\n\u30bf\u30b0\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 describe-tags \n\n\n\n\u7d50\u679c(\u4f8b)\n      {\n        \"Tags\": []\n      }\n\n\n\n\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_TAG_KEY='Name'\n      EC2_TAG_VALUE='MyCodePipelineDemo'\n\n\n\n\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        EC2_TAG_KEY:   ${EC2_TAG_KEY}\n        EC2_TAG_VALUE: ${EC2_TAG_VALUE}\n\nETX\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 create-tags \\\n        --resources ${EC2_INSTANCE_ID} \\\n        --tags \"Key=${EC2_TAG_KEY},Value=${EC2_TAG_VALUE}\"\n\n\n\n\u7d50\u679c(\u4f8b)\n      (\u623b\u308a\u5024\u306a\u3057)\n\n\n\n\u30b3\u30de\u30f3\u30c9\naws ec2 describe-tags \\\n        --query \"Tags[?Key == \\`${EC2_TAG_KEY}\\`]\"\n\n\n\n\u7d50\u679c(\u4f8b)\n      [\n        {\n          \"ResourceType\": \"instance\",\n          \"ResourceId\": \"i-23927713\",\n          \"Value\": \"MyCodePipelineDemo\",\n          \"Key\": \"Name\"\n        }\n      ]\n\n\n\n\u5b8c\u4e86\nAWS CLI\u3092\u5229\u7528\u3057\u3066\u3001EC2\u3092\u8d77\u52d5\u3057\u3001CodeDeploy Agent\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u307e\u3059\u3002\n\n\n\u524d\u63d0\u6761\u4ef6\n========\n\n\nEC2\u3078\u306e\u6a29\u9650\n-----------\n\nEC2\u306b\u5bfe\u3057\u3066\u30d5\u30eb\u6a29\u9650\u304c\u3042\u308b\u3053\u3068\u3002\n\n\nAWS CLI\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\n-------------------\n\n\u4ee5\u4e0b\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3067\u52d5\u4f5c\u78ba\u8a8d\u6e08\n\n- AWS CLI 1.11.2\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws --version\n```\n\n```text:\u7d50\u679c(\u4f8b):\n         aws-cli/1.11.2 Python/2.7.11 Darwin/15.6.0 botocore/1.4.60\n```\n\n   \u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u53e4\u3044\u5834\u5408\u306f\u6700\u65b0\u7248\u306b\u66f4\u65b0\u3057\u307e\u3057\u3087\u3046\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nsudo -H pip install -U awscli\n```\n\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u5c5e\u6027\n-------------------\n\nAWS\u30a2\u30ab\u30a6\u30f3\u30c8\u304cEC2-Classic\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nAWS_SUPPORT_PLATFORMS=$( \\\n          aws ec2 describe-account-attributes \\\n            --query 'AccountAttributes[?AttributeName == `supported-platforms`].AttributeValues[].AttributeValue' \\\n            --output text \\\n) && echo ${AWS_SUPPORT_PLATFORMS}\n```\n\n```text:\u7d50\u679c:\n      VPC\n```\n\n\u6ce8\u91c8: 'VPC'\u306e\u4ed6\u306b'EC2'\u304c\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u3001\u5225\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u4f5c\u6210\u3082\u3057\u304f\u306f\u5229\u7528\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u306e\u5b58\u5728\n-------------------\n\n\u30c7\u30d5\u30a9\u30eb\u30c8VPC\u304c\u5b58\u5728\u3059\u308b\u3053\u3068\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nVPC_ID=$( \\\n        aws ec2 describe-vpcs \\\n          --filters Name=isDefault,Values=true \\\n          --query 'Vpcs[].VpcId' \\\n          --output text \\\n      ) \\\n         && echo ${VPC_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      vpc-xxxxxxxx\n```\n\n\n0. \u6e96\u5099\n=======\n\n\n0.1. \u5909\u6570\u306e\u78ba\u8a8d\n---------------\n\n\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u304c\u60f3\u5b9a\u306e\u3082\u306e\u306b\u306a\u3063\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws configure list\n```\n\n```text:\u7d50\u679c(\u4f8b):\n\n               Name                    Value             Type    Location\n               ----                    -----             ----    --------\n            profile         iamFull-prjZ-mbp13        env    AWS_DEFAULT_PROFILE\n         access_key     ****************XXXX shared-credentials-file\n         secret_key     ****************XXXX shared-credentials-file\n             region                         us-east-1  env    AWS_DEFAULT_REGION\n```\n\nAssumeRole\u3092\u5229\u7528\u3057\u3066\u3044\u308b\u5834\u5408\u306fprofile\u304c '<not set>'\u3068\u8868\u793a\u3055\u308c\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u3068\u304d\u306bprofile\u304c '<not set>' \u3068\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u306f\u3001\u4ee5\u4e0b\u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a:\nexport AWS_DEFAULT_PROFILE=<IAM\u30e6\u30fc\u30b6\u540d>\n```\n\n\n0.2. \u7a3c\u52d5\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u78ba\u8a8d\n---------------------------\n\n\u540c\u4e00\u30ea\u30fc\u30b8\u30e7\u30f3\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8d77\u52d5\u3057\u3066\u3044\u306a\u3044\u3053\u3068\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 describe-instances \\\n        --filters Name=instance-state-name,Values=running\n```\n\n```json:\u7d50\u679c:\n      {\n          \"Reservations\": []\n      }\n```\n\n\n0.3. \u30ad\u30fc\u30da\u30a2\u306e\u78ba\u8a8d\n-------------------\n\n\u30ad\u30fc\u30da\u30a2\u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 describe-key-pairs \\\n        --query 'KeyPairs[].KeyName'\n```\n\n\u30ad\u30fc\u30da\u30a2\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/59303d9506ca7d13f744 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5229\u7528\u3059\u308b\u30ad\u30fc\u30da\u30a2\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_KEY_NAME=<\u30ad\u30fc\u30da\u30a2\u540d>\n```\n\n\u5229\u7528\u3059\u308b\u30ad\u30fc\u30da\u30a2\u306e\u79d8\u5bc6\u9375\u30d5\u30a1\u30a4\u30eb\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_SSH_KEY=<\u79d8\u5bc6\u9375\u30d5\u30a1\u30a4\u30eb\u306e\u4f4d\u7f6e>\n```\n\n\n1. \u4e8b\u524d\u4f5c\u696d\n===========\n\n\n1.1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u306e\u6c7a\u5b9a\n-----------------------------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_INSTANCE_TYPE='t2.micro'\n```\n\n\n1.2. \u30a4\u30e1\u30fc\u30b8ID\u306e\u6c7a\u5b9a\n---------------------\n\nAmazonLinux\u306e\u6700\u65b0AMI\u3092\u9078\u629e\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nAMZLINUX_VERSION='2016.03.3'\n      EC2_IMAGE_NAME=\"amzn-ami-hvm-${AMZLINUX_VERSION}.x86_64-gp2\"\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nEC2_IMAGE_ID=$( \\\n        aws ec2 describe-images \\\n          --filters Name=name,Values=\"${EC2_IMAGE_NAME}\" \\\n          --query 'Images[].ImageId' --output text \\\n      ) \\\n        && echo ${EC2_IMAGE_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      ami-6869aa05\n```\n\n\n1.3. \u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u6c7a\u5b9a\n-------------------------------\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306e\u4e00\u89a7\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 describe-security-groups \\\n        --query 'SecurityGroups[].GroupName'\n```\n\n- 'ec2-http-https-global-inbound'\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/1d6a499b03b776355ee2 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n- 'ec2-ssh-global-inbound'\u304c\u5b58\u5728\u3057\u306a\u3044\u5834\u5408\u306f\u3001http://qiita.com/tcsh/items/77f8c9887634fd67f4d8 \u3092\u5b9f\u65bd\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n### HTTP/HTTPS\n\n\u5229\u7528\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nVPC_SG_NAME='ec2-http-https-global-inbound'\n```\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nVPC_SG_ID=$( \\\n        aws ec2 describe-security-groups \\\n          --filter Name=group-name,Values=${VPC_SG_NAME} \\\n          --query 'SecurityGroups[].GroupId' \\\n          --output text \\\n      ) \\\n        && echo ${VPC_SG_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      sg-xxxxxxxx\n```\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nARRAY_VPC_SG_ID=\"${VPC_SG_ID} ${ARRAY_VPC_SG_ID}\" \\\n        && echo ${ARRAY_VPC_SG_ID}\n```\n\n### SSH\n\n\u5229\u7528\u3059\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u540d\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nVPC_SG_NAME='ec2-ssh-global-inbound'\n```\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306eID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nVPC_SG_ID=$( \\\n        aws ec2 describe-security-groups \\\n          --filter Name=group-name,Values=${VPC_SG_NAME} \\\n          --query 'SecurityGroups[].GroupId' \\\n          --output text \\\n      ) \\\n        && echo ${VPC_SG_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      sg-xxxxxxxx\n```\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3092\u914d\u5217\u306b\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nARRAY_VPC_SG_ID=\"${VPC_SG_ID} ${ARRAY_VPC_SG_ID}\" \\\n        && echo ${ARRAY_VPC_SG_ID}\n```\n\n\nUser Data\n---------\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nFILE_EC2_USERDATA='userdata.bash'\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\ncat << EOF > ${FILE_EC2_USERDATA}\n#!/bin/bash\nyum -y update\nyum install -y ruby\nyum install -y wget\ncd /home/ec2-user\nwget https://aws-codedeploy-${AWS_DEFAULT_REGION}.s3.amazonaws.com/latest/install\nchmod +x ./install\n./install auto\nEOF\n\ncat ${FILE_EC2_USERDATA}\n```\n\n\n2. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\n===================\n\n\n2.1. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u8d77\u52d5\n---------------------\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        EC2_IMAGE_ID:       ${EC2_IMAGE_ID}\n        EC2_INSTANCE_TYPE:  ${EC2_INSTANCE_TYPE}\n        ARRAY_VPC_SG_ID:   \"${ARRAY_VPC_SG_ID}\"\n        EC2_KEY_NAME:       ${EC2_KEY_NAME}\n        IAM_INSTANCE_PROFILE_NAME: ${IAM_INSTANCE_PROFILE_NAME}\n        FILE_EC2_USERDATA:      ${FILE_EC2_USERDATA}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 run-instances \\\n        --image-id ${EC2_IMAGE_ID} \\\n        --instance-type ${EC2_INSTANCE_TYPE} \\\n        --security-group-ids ${ARRAY_VPC_SG_ID} \\\n        --key-name ${EC2_KEY_NAME} \\\n        --associate-public-ip-address \\\n        --iam-instance-profile Name=${IAM_INSTANCE_PROFILE_NAME} \\\n        --user-data file://${FILE_EC2_USERDATA}\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"OwnerId\": \"XXXXXXXXXXXX\",\n        \"ReservationId\": \"r-xxxxxxxx\",\n        \"Groups\": [],\n        \"Instances\": [\n          {\n              \"Monitoring\": {\n                  \"State\": \"disabled\"\n              },\n              \"PublicDnsName\": \"\",\n              \"RootDeviceType\": \"ebs\",\n              \"State\": {\n                  \"Code\": 0,\n                  \"Name\": \"pending\"\n              },\n              \"EbsOptimized\": false,\n              \"LaunchTime\": \"\\ |today|\\ T01:23:45.000Z\",\n              \"PrivateIpAddress\": \"172.31.xx.xx\",\n              \"ProductCodes\": [],\n              \"VpcId\": \"vpc-xxxxxxxx\",\n              \"StateTransitionReason\": \"\",\n              \"InstanceId\": \"i-xxxxxxxx\",\n              \"ImageId\": \"ami-6869aa05\",\n              \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n              \"KeyName\": \"prjz-us-east-1-ec2\",\n              \"SecurityGroups\": [\n                  {\n                      \"GroupName\": \"ec2-ssh-global-inbound\",\n                      \"GroupId\": \"sg-xxxxxxxx\"\n                  },\n                  {\n                      \"GroupName\": \"ec2-http-https-global-inbound\",\n                      \"GroupId\": \"sg-xxxxxxxx\"\n                  }\n              ],\n              \"ClientToken\": \"\",\n              \"SubnetId\": \"subnet-xxxxxxxx\",\n              \"InstanceType\": \"t2.micro\",\n              \"NetworkInterfaces\": [\n                  {\n                      \"Status\": \"in-use\",\n                      \"MacAddress\": \"12:29:25:xx:xx:xx\",\n                      \"SourceDestCheck\": true,\n                      \"VpcId\": \"vpc-xxxxxxxx\",\n                      \"Description\": \"\",\n                      \"NetworkInterfaceId\": \"eni-xxxxxxxx\",\n                      \"PrivateIpAddresses\": [\n                          {\n                              \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n                              \"Primary\": true,\n                              \"PrivateIpAddress\": \"172.31.xx.xx\"\n                          }\n                      ],\n                      \"PrivateDnsName\": \"ip-172-31-xx-xx.ec2.internal\",\n                      \"Attachment\": {\n                          \"Status\": \"attaching\",\n                          \"DeviceIndex\": 0,\n                          \"DeleteOnTermination\": true,\n                          \"AttachmentId\": \"eni-attach-xxxxxxxx\",\n                          \"AttachTime\": \"\\ |today|\\ T01:23:45.000Z\"\n                      },\n                      \"Groups\": [\n                          {\n                              \"GroupName\": \"ec2-ssh-global-inbound\",\n                              \"GroupId\": \"sg-xxxxxxxx\"\n                          },\n                          {\n                              \"GroupName\": \"ec2-http-https-global-inbound\",\n                              \"GroupId\": \"sg-xxxxxxxx\"\n                          }\n                      ],\n                      \"SubnetId\": \"subnet-xxxxxxxx\",\n                      \"OwnerId\": \"XXXXXXXXXXXX\",\n                      \"PrivateIpAddress\": \"172.31.49.75\"\n                  }\n              ],\n              \"SourceDestCheck\": true,\n              \"Placement\": {\n                  \"Tenancy\": \"default\",\n                  \"GroupName\": \"\",\n                  \"AvailabilityZone\": \"us-east-1d\"\n              },\n              \"Hypervisor\": \"xen\",\n              \"BlockDeviceMappings\": [],\n              \"Architecture\": \"x86_64\",\n              \"StateReason\": {\n                  \"Message\": \"pending\",\n                  \"Code\": \"pending\"\n              },\n              \"IamInstanceProfile\": {\n                  \"Id\": \"AIPAXXXXXXXXXXXXXXXXX\",\n                  \"Arn\": \"arn:aws:iam::XXXXXXXXXXXX:instance-profile/\\ |IAM_INSTANCE_PROFILE_NAME|\\ S3ReadOnlyAccess\"\n              },\n              \"RootDeviceName\": \"/dev/xvda\",\n              \"VirtualizationType\": \"hvm\",\n              \"AmiLaunchIndex\": 0\n          }\n        ]\n      }\n```\n\n\n2.2. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u306e\u53d6\u5f97\n-------------------------\n\n\u8d77\u52d5\u4e2d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n### \u8d77\u52d5\u4e2d\u306e\u5834\u5408\n\n```bash:\u30b3\u30de\u30f3\u30c9(\u8d77\u52d5\u4e2d\u306e\u5834\u5408):\nEC2_INSTANCE_ID=$( \\\n        aws ec2 describe-instances \\\n          --filters Name=instance-state-name,Values=pending \\\n          --query 'Reservations[].Instances[].InstanceId' \\\n          --output text \\\n) \\\n        && echo ${EC2_INSTANCE_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      i-xxxxxxxx\n```\n\n### \u8d77\u52d5\u5b8c\u4e86\u5f8c\u306e\u5834\u5408\n\n```bash:\u30b3\u30de\u30f3\u30c9(\u8d77\u52d5\u5b8c\u4e86\u5f8c\u306e\u5834\u5408):\nARRAY_EC2_INSTANCE_ID=$( \\\n        aws ec2 describe-instances \\\n          --filters Name=instance-state-name,Values=running \\\n          --query 'Reservations[].Instances[].InstanceId' \\\n          --output text \\\n) \\\n        && echo ${ARRAY_EC2_INSTANCE_ID}\n```\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_INSTANCE_ID=$( \\\n        echo ${ARRAY_EC2_INSTANCE_ID} | sed 's/ .*$//' \\\n) \\\n        && echo ${EC2_INSTANCE_ID}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      i-xxxxxxxx\n```\n\n\n2.3 \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u30b9\u30c6\u30fc\u30bf\u30b9\u78ba\u8a8d\n--------------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nEC2_INSTANCE_STATE=$( \\\n        aws ec2 describe-instances \\\n        --instance-ids ${EC2_INSTANCE_ID} \\\n        --query 'Reservations[].Instances[].State.Name' \\\n        --output text \\\n) \\\n        && echo ${EC2_INSTANCE_STATE}\n```\n\n```text:\u7d50\u679c:\n      running\n```\n\n\n3. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u78ba\u8a8d\n=====================\n\n\n3.1. \u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u306e\u53d6\u5f97\n-------------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nEC2_PUBLIC_IP=$( \\\n        aws ec2 describe-instances \\\n          --instance-id ${EC2_INSTANCE_ID} \\\n          --query \"Reservations[].Instances[].PublicIpAddress\" \\\n          --output text \\\n) \\\n        && echo ${EC2_PUBLIC_IP}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      54.xxx.xxx.xxx\n```\n\n\u5f8c\u307b\u3069\u30c7\u30d7\u30ed\u30a4\u3057\u305fWeb\u30a2\u30d7\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306e\u3067\u3001\u30d6\u30e9\u30a6\u30b6\u3067\u4e0a\u8a18\u306eIP\u30a2\u30c9\u30ec\u30b9\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u958b\u3044\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n3.2. SSH\u30ed\u30b0\u30a4\u30f3\n----------------\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n          FILE_SSH_KEY:  ${FILE_SSH_KEY}\n          EC2_PUBLIC_IP: ${EC2_PUBLIC_IP}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nssh -i ${FILE_SSH_KEY} ec2-user@${EC2_PUBLIC_IP}\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      The authenticity of host '54.xxx.xxx.xxx (54.xxx.xxx.xxx)' can't be established.\n      RSA key fingerprint is xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx.\n      Are you sure you want to continue connecting (yes/no)?\n```\n\n```text:\u5165\u529b\n      yes\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      Warning: Permanently added '54.xxx.xxx.xxx' (RSA) to the list of known hosts.\n\n             __|  __|_  )\n             _|  (     /   Amazon Linux AMI\n            ___|\\___|___|\n\n      https://aws.amazon.com/amazon-linux-ami/2015.03-release-notes/\n      24 package(s) needed for security, out of 53 available\n      Run \"sudo yum update\" to apply all updates.\n```\n\n\n3.3. codedeplocy agent\n----------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9:\nsudo service codedeploy-agent status\n```\n\n```text:\u7d50\u679c:\n      The AWS CodeDeploy agent is running as PID xxxx\n```\n\n\n3.4. EC2\u30e1\u30bf\u60c5\u5831\u306e\u78ba\u8a8d\n----------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9(EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9):\necho -e \"\\n\" \\\n        && curl http://169.254.169.254/latest/meta-data/public-hostname \\\n        && echo -e \"\\n\"\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      ec2-52-xxx-xxx-xxx.ap-northeast-1.compute.amazonaws.com\n```\n\n\n3.5. \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304b\u3089\u30ed\u30b0\u30a2\u30a6\u30c8\n-------------------------------\n\n```bash:\u30b3\u30de\u30f3\u30c9(EC2\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9):\nlogout\n```\n\n```text:\u7d50\u679c(\u4f8b):\n      Connection to xxx.xxx.xxx.xxx closed.\n```\n\n\n9. \u4e8b\u5f8c\u4f5c\u696d\n===========\n\n\n\u30bf\u30b0\n----\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 describe-tags \n```\n\n```json:\u7d50\u679c(\u4f8b):\n      {\n        \"Tags\": []\n      }\n```\n\n```bash:\u5909\u6570\u306e\u8a2d\u5b9a\nEC2_TAG_KEY='Name'\n      EC2_TAG_VALUE='MyCodePipelineDemo'\n```\n\n```bash:\u5909\u6570\u306e\u78ba\u8a8d\ncat << ETX\n\n        EC2_TAG_KEY:   ${EC2_TAG_KEY}\n        EC2_TAG_VALUE: ${EC2_TAG_VALUE}\n\nETX\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 create-tags \\\n        --resources ${EC2_INSTANCE_ID} \\\n        --tags \"Key=${EC2_TAG_KEY},Value=${EC2_TAG_VALUE}\"\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      (\u623b\u308a\u5024\u306a\u3057)\n```\n\n```bash:\u30b3\u30de\u30f3\u30c9:\naws ec2 describe-tags \\\n        --query \"Tags[?Key == \\`${EC2_TAG_KEY}\\`]\"\n```\n\n```json:\u7d50\u679c(\u4f8b):\n      [\n        {\n          \"ResourceType\": \"instance\",\n          \"ResourceId\": \"i-23927713\",\n          \"Value\": \"MyCodePipelineDemo\",\n          \"Key\": \"Name\"\n        }\n      ]\n```\n\n\n\u5b8c\u4e86\n====\n", "tags": ["AWS", "aws-cli", "EC2", "CodeDeploy"]}