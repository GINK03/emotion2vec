{"context": "\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u306f\n\u7dda\u5f62\u56de\u5e30\u3068\u4f3c\u3066\u3044\u308b\u304c\u3001\u76ee\u7684\u5909\u6570\u304c2\u5024\u306e\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u3053\u306e\u4eba\u306f\u5546\u54c1\u3092\u8cfc\u5165\u3059\u308b\u304b\u5426\u304b\u3001\u68d2\u306b\u5f53\u305f\u308b\u304b\u5426\u304b\u3001\u5f15\u3063\u8d8a\u3059\u304b\u5426\u304b\u3001\u8ee2\u8077\u3059\u308b\u304b\u5426\u304b\u306a\u3069\u306a\u3069\u3002\n\u4e88\u6e2c\u30e2\u30c7\u30eb\u3092\u3001\u4ee5\u4e0b\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570(\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570)\u3092\u4f7f\u3063\u3066\u4f5c\u6210\u3002\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u5f62\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u30020\u301c1\u306e\u5024\u3092\u53d6\u308a\u3001\u5358\u8abf\u5897\u52a0\u3002\n\n\u76ee\u7684\u5909\u6570\u306e\u884c\u5217x\u3068\u8aac\u660e\u5909\u6570y\u306e\u95a2\u4fc2\u306f\u4ee5\u4e0b\u3002(y=ax+b\u306e\u53f3\u8fba\u3092exp\u306e-1\u4e57\u3059\u308b\u5f62\u3002)\n\n\n\u5229\u7528\u30c7\u30fc\u30bf\u7528\u610f\nsklearn\u3067\u4e0d\u502b\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3002\n\nget_affair_dataset.py\nfrom sklearn.linear_model import LogisticRegression # \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u7528\nfrom sklearn.cross_validation import train_test_split # \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306esplit\u7528\nimport statsmodels.api as sm\n\ndf = sm.datasets.fair.load_pandas().data # \u4e0d\u502b\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\n\n\n\n\u4e0d\u502b\u30c7\u30fc\u30bf\u306e\u6982\u8981\n\ndescribe_affair.py\ndf.head()\n\n\n\nrate_marriage:\u5e78\u305b\u5ea6\u3001age:\u5e74\u9f62\u3001yrs_married:\u7d50\u5a5a\u5e74\u6570\u3001children:\u5b50\u4f9b\u306e\u6570\u3001religious:\u4fe1\u4ef0\u5ea6\u3001educ:\u6700\u7d42\u5b66\u6b74\u3001occupation:\u59bb\u306e\u8077\u696d\u3001occupation_husb:\u65e6\u90a3\u306e\u8077\u696d\u3001affairs:\u4e0d\u502b\u7d4c\u9a13(0\u3088\u308a\u5927\u304d\u3044\u3068\u4e0d\u502b\u7d4c\u9a13\u3042\u308a)\u3001Had_Affair:\u4e0d\u502b\u30d5\u30e9\u30b0(affairs\u304c0>\u306a\u30891\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u308b)\n\n\u7c21\u5358\u306b\u4e0d\u502b\u6709\u7121\u3068\u9069\u5f53\u306a\u30b5\u30f3\u30d7\u30eb\u306e\u95a2\u4fc2\u3092\u307f\u308b\n\neasy_display1.py\n# \u5e74\u9f62\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('age', data = df.sort('age'), hue = 'Had_Affair', palette='coolwarm')\n\n\n\n\neasy_display2.py\n# \u7d50\u5a5a\u5e74\u6570\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('yrs_married', data = df.sort('yrs_married'), hue = 'Had_Affair', palette='coolwarm')\n\n\n\n\neasy_display3.py\n# \u5b50\u4f9b\u306e\u4eba\u6570\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('children', data = df.sort('children'), hue = 'Had_Affair', palette='coolwarm')\n\n\n\n\u5e74\u9f62\u304c\u4e0a\u304c\u308b/\u7d50\u5a5a\u5e74\u6570\u304c\u591a\u3044/\u5b50\u4f9b\u304c\u3044\u308b\u65b9\u304c\u4e0d\u502b\u7387\u304c\u9ad8\u3044\n\u203b\u3000\u305f\u3060\u3057\u5e74\u9f62\u304c\u4e0a\u304c\u308c\u3070\u7d50\u5a5a\u5e74\u6570\u304c\u5897\u3048\u305f\u308a\u3001\u5b50\u4f9b\u306e\u6570\u304c\u5897\u3048\u308b\u306a\u3069\u3001\u8aac\u660e\u5909\u6570\u9593\u3067\u3082\u95a2\u4fc2\u6027\u304c\u3042\u308b\u3068\u601d\u308f\u308c\u308b\u3002\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\u3063\u3066\u307f\u308b\n\n\u524d\u51e6\u7406\n\u3084\u308b\u524d\u306b\u3001\u8077\u696d\u306e\u5909\u6570\u304c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u30c0\u30df\u30fc\u5909\u6570\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3068\u306f\u3001\u4e2d\u306e\u5024\u306e\u5927\u5c0f\u306b\u610f\u5473\u304c\u306a\u3044\u3082\u306e\u3002\n\nchange_dummy_value.py\n# numpy\u306eget_dummies\u3067dummy\u5909\u6570\u306b\u5909\u63db\u3002\nocc_dummies = pd.get_dummies(df.occupation)\nhus_occ_dummies = pd.get_dummies(df.occupation_husb)\n\n# \u30ab\u30e9\u30e0\u540d\u30bb\u30c3\u30c8\nocc_dummies.columns = ['occ1','occ2','occ3','occ4','occ5','occ6']\nhus_occ_dummies.columns = ['hocc1','hocc2','hocc3','hocc4','hocc5','hocc6']\n\nocc_dummies.head()\n\n\n\n\u4e0a\u306e\u611f\u3058\u3067\u3001occ1\u301c6\u306e\u3046\u3061\u3069\u308c\u306b\u5f53\u305f\u308b\u304b\u304c0,1\u306e\u30d5\u30e9\u30b0\u3067\u7f6e\u304d\u63db\u3048\u3066\u3042\u3052\u308b\u3002\n\u7d9a\u3051\u3066\u3001\u8aac\u660e\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\u3002\n\nget_x.py\n# X\u306b\u3001\u5143\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u8077\u696d\u3001\u65e6\u90a3\u306e\u8077\u696d\u3001\u7d50\u5a5a\u6709\u7121\u3092\u524a\u9664\u3057\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\u3002\nX = df.drop(['occupation', 'occupation_husb', 'Had_Affair'], axis =1) \n# \u8077\u696d\u3092\u30c0\u30df\u30fc\u5909\u6570\u5316\u3057\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u7528\u610f\ndummys = pd.concat([occ_dummies, hus_occ_dummies], axis =1)\n# \u8077\u696d\u7b49\u3092\u524a\u9664\u3057\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u3001\u8077\u696d\u30c0\u30df\u30fc\u5909\u6570\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u7d50\u5408\nX = pd.concat([X, dummys], axis=1)\n\nX.head()\n\n\n\u3053\u3053\u307e\u3067\u306e\u8aac\u660e\u5909\u6570\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n\n\n\u591a\u91cd\u5171\u7dda\u6027\n\u3042\u308b\u8aac\u660e\u5909\u6570\u304c\u3001\u4ed6\u306e\u8aac\u660e\u5909\u6570\u30921\u3064\u307e\u305f\u306f\u8907\u6570\u3067\u8868\u73fe\u3067\u304d\u308b\u5834\u5408\u3001\u591a\u91cd\u5171\u7dda\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u3002\u4f8b\u3048\u3070\u4eca\u56de\u306f\u3001occ1\u306f\u3001occ2\u301cocc6\u306e\u5024\u3067\u4e00\u610f\u306b\u6c7a\u307e\u308b\u95a2\u4fc2\u306b\u3042\u308b\u3002(occ2\u301c6\u306b1\u304c1\u500b\u4ee5\u4e0a\u3042\u308c\u3070\u3001occ1=0\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070occ1=1)\n\u3053\u306e\u5834\u5408\u3001\u9006\u884c\u5217\u304c\u8a08\u7b97\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3001\u8a08\u7b97\u3067\u304d\u3066\u3082\u5f97\u3089\u308c\u308b\u7d50\u679c\u306e\u4fe1\u983c\u6027\u304c\u4f4e\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u306a\u304f\u3059\u3079\u304f\u3001occ1\u3068hocc1\u3092\u524a\u9664\u3059\u308b\u3002\n\ndrop_nonavailable_value.py\nX = X.drop('hocc1', axis = 1)\nX = X.drop('hocc1', axis = 1)\n# affairs\u306f\u3001\u76ee\u7684\u5909\u6570\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3082\u8aac\u660e\u5909\u6570\u304b\u3089\u9664\u304f\u3002\nX = X.drop('affairs', axis =1 )\n\nX.head()\n\n\n\u6700\u7d42\u7684\u306a\u5f62\n\n\nsklearn\u3092\u4f7f\u3063\u3066\u5b9f\u884c\n\ndo_logistic_regression.py\n# \u76ee\u7684\u5909\u6570\u30bb\u30c3\u30c8\nY = df.Had_Affair\nY = np.ravel(Y)    # np.ravel\u3067Y\u30921\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\n\n# \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5b9f\u884c\nlog_model = LogisticRegression() # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210 \nlog_model.fit(X, Y)              # \u30e2\u30c7\u30eb\u4f5c\u6210\u5b9f\u884c\nlog_model.score(X, Y)            # \u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7cbe\u5ea6\u78ba\u8a8d(72.6%)\n> 0.7260446120012567\n\n\n\u5404\u5909\u6570\u306e\u4fc2\u6570\u3092\u78ba\u8a8d\n\nconfirm_coefficient.py\n# \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e.coef_[0]\u306b\u3001\u4fc2\u6570\u304c\u5165\u3063\u3066\u3044\u308b\ncoeff_df = DataFrame([X.columns, log_model.coef_[0]]).T\ncoeff_df\n\n\n\n\u3053\u306e\u4fc2\u6570\u304c\u5927\u304d\u3044\u3068\u3053\u308d\u304c\u3001\u5f71\u97ff\u304c\u591a\u3044\u3068\u3053\u308d\u306b\u306a\u308b\u3002\n\u305f\u3060\u3057\u3001\u8aac\u660e\u5909\u6570\u306e\u30c7\u30fc\u30bf\u306e\u5358\u4f4d\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5358\u7d14\u306b\u6a2a\u4e26\u3073\u3067\u6bd4\u8f03\u306f\u3067\u304d\u306a\u3044\u3002\n\u4f8b\u3048\u3070\u3001occ5\u306fyrs_married\u306e9\u500d\u304f\u3089\u3044\u3042\u308b\u304b\u3089\u3001\u7d50\u5a5a\u5e74\u6570\u306f\u898b\u306a\u304f\u3066OK!!\u3068\u306f\u5358\u7d14\u306b\u306a\u3089\u306a\u3044\u3002\n\n\u3064\u3044\u3067\u306b\n\u3044\u3064\u3082\u306e\u3054\u3068\u304f\u3001train\u3068test\u306b\u5206\u3051\u308b\u65b9\u6cd5\u3082\u66f8\u3044\u3068\u304f\u3002\n\ndo_logistic_regression_train_test.py\n# train\u3068test\u7528\u30c7\u30fc\u30bf\u7528\u610f\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y)\n\nlog_model2 = LogisticRegression() \nlog_model2.fit(X_train, Y_train)           # train\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u4f5c\u6210\nclass_predict = log_model2.predict(X_test) # test\u30c7\u30fc\u30bf\u3092\u4e88\u6e2c\n\nfrom sklearn import metrics # \u4e88\u6e2c\u7cbe\u5ea6\u78ba\u8a8d\u7528\n\nmetrics.accuracy_score(Y_test, class_predict) # \u7cbe\u5ea6\u78ba\u8a8d\n>0.73115577889447236\n\n\n73%\u304f\u3089\u3044\u306e\u7cbe\u5ea6\u304c\u51fa\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n## \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3068\u306f\n\u7dda\u5f62\u56de\u5e30\u3068\u4f3c\u3066\u3044\u308b\u304c\u3001\u76ee\u7684\u5909\u6570\u304c2\u5024\u306e\u3068\u304d\u306b\u5229\u7528\u3059\u308b\u3002\n\u4f8b\u3048\u3070\u3001\u3053\u306e\u4eba\u306f\u5546\u54c1\u3092\u8cfc\u5165\u3059\u308b\u304b\u5426\u304b\u3001\u68d2\u306b\u5f53\u305f\u308b\u304b\u5426\u304b\u3001\u5f15\u3063\u8d8a\u3059\u304b\u5426\u304b\u3001\u8ee2\u8077\u3059\u308b\u304b\u5426\u304b\u306a\u3069\u306a\u3069\u3002\n\n\u4e88\u6e2c\u30e2\u30c7\u30eb\u3092\u3001\u4ee5\u4e0b\u306e\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570(\u30b7\u30b0\u30e2\u30a4\u30c9\u95a2\u6570)\u3092\u4f7f\u3063\u3066\u4f5c\u6210\u3002\n<img width=\"119\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.47.40.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/c776935c-d750-594f-1593-9800faeed50a.png\">\n\n\u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u95a2\u6570\u306e\u5f62\u306f\u4ee5\u4e0b\u3068\u306a\u308b\u30020\u301c1\u306e\u5024\u3092\u53d6\u308a\u3001\u5358\u8abf\u5897\u52a0\u3002\n<img width=\"395\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.48.21.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/5db61a65-6902-076b-370a-79169280751f.png\">\n\n\u76ee\u7684\u5909\u6570\u306e\u884c\u5217x\u3068\u8aac\u660e\u5909\u6570y\u306e\u95a2\u4fc2\u306f\u4ee5\u4e0b\u3002(y=ax+b\u306e\u53f3\u8fba\u3092exp\u306e-1\u4e57\u3059\u308b\u5f62\u3002)\n<img width=\"164\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.49.51.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/055b6678-eadd-0c34-8631-0b0fb621d8ef.png\">\n\n\n## \u5229\u7528\u30c7\u30fc\u30bf\u7528\u610f\nsklearn\u3067\u4e0d\u502b\u7528\u306e\u30c7\u30fc\u30bf\u3092\u4f7f\u3046\u3002\n\n```{get_affair_dataset.py}\nfrom sklearn.linear_model import LogisticRegression # \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u7528\nfrom sklearn.cross_validation import train_test_split # \u30af\u30ed\u30b9\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306esplit\u7528\nimport statsmodels.api as sm\n\ndf = sm.datasets.fair.load_pandas().data # \u4e0d\u502b\u30c7\u30fc\u30bf\u306e\u30ed\u30fc\u30c9\n```\n\n### \u4e0d\u502b\u30c7\u30fc\u30bf\u306e\u6982\u8981\n```{describe_affair.py}\ndf.head()\n```\n\n<img width=\"782\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.53.17.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/000b22f4-660b-0cae-ae05-5e2b2a78727f.png\">\n\nrate_marriage:\u5e78\u305b\u5ea6\u3001age:\u5e74\u9f62\u3001yrs_married:\u7d50\u5a5a\u5e74\u6570\u3001children:\u5b50\u4f9b\u306e\u6570\u3001religious:\u4fe1\u4ef0\u5ea6\u3001educ:\u6700\u7d42\u5b66\u6b74\u3001occupation:\u59bb\u306e\u8077\u696d\u3001occupation_husb:\u65e6\u90a3\u306e\u8077\u696d\u3001affairs:\u4e0d\u502b\u7d4c\u9a13(0\u3088\u308a\u5927\u304d\u3044\u3068\u4e0d\u502b\u7d4c\u9a13\u3042\u308a)\u3001Had_Affair:\u4e0d\u502b\u30d5\u30e9\u30b0(affairs\u304c0>\u306a\u30891\u304c\u30bb\u30c3\u30c8\u3055\u308c\u3066\u308b)\n\n### \u7c21\u5358\u306b\u4e0d\u502b\u6709\u7121\u3068\u9069\u5f53\u306a\u30b5\u30f3\u30d7\u30eb\u306e\u95a2\u4fc2\u3092\u307f\u308b\n\n```{easy_display1.py}\n# \u5e74\u9f62\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('age', data = df.sort('age'), hue = 'Had_Affair', palette='coolwarm')\n```\n\n<img width=\"399\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.57.17.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/187969ba-2df5-743d-45b6-8eb77ff62e4f.png\">\n\n```{easy_display2.py}\n# \u7d50\u5a5a\u5e74\u6570\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('yrs_married', data = df.sort('yrs_married'), hue = 'Had_Affair', palette='coolwarm')\n```\n\n<img width=\"416\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.57.21.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/388feefc-f54b-2911-e9b0-a59a283c1655.png\">\n\n```{easy_display3.py}\n# \u5b50\u4f9b\u306e\u4eba\u6570\u3068\u4e0d\u502b\u6709\u7121\nsns.countplot('children', data = df.sort('children'), hue = 'Had_Affair', palette='coolwarm')\n```\n\n<img width=\"422\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 16.57.35.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/5a02cfaa-4106-acce-de64-8fd703408ca0.png\">\n\n\u5e74\u9f62\u304c\u4e0a\u304c\u308b/\u7d50\u5a5a\u5e74\u6570\u304c\u591a\u3044/\u5b50\u4f9b\u304c\u3044\u308b\u65b9\u304c\u4e0d\u502b\u7387\u304c\u9ad8\u3044\n\n\u203b\u3000\u305f\u3060\u3057\u5e74\u9f62\u304c\u4e0a\u304c\u308c\u3070\u7d50\u5a5a\u5e74\u6570\u304c\u5897\u3048\u305f\u308a\u3001\u5b50\u4f9b\u306e\u6570\u304c\u5897\u3048\u308b\u306a\u3069\u3001\u8aac\u660e\u5909\u6570\u9593\u3067\u3082\u95a2\u4fc2\u6027\u304c\u3042\u308b\u3068\u601d\u308f\u308c\u308b\u3002\n\n## \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u3084\u3063\u3066\u307f\u308b\n### \u524d\u51e6\u7406\n\u3084\u308b\u524d\u306b\u3001\u8077\u696d\u306e\u5909\u6570\u304c\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u30c0\u30df\u30fc\u5909\u6570\u306b\u7f6e\u304d\u63db\u3048\u308b\u3002\n\u30ab\u30c6\u30b4\u30ea\u5909\u6570\u3068\u306f\u3001\u4e2d\u306e\u5024\u306e\u5927\u5c0f\u306b\u610f\u5473\u304c\u306a\u3044\u3082\u306e\u3002\n\n```{change_dummy_value.py}\n# numpy\u306eget_dummies\u3067dummy\u5909\u6570\u306b\u5909\u63db\u3002\nocc_dummies = pd.get_dummies(df.occupation)\nhus_occ_dummies = pd.get_dummies(df.occupation_husb)\n\n# \u30ab\u30e9\u30e0\u540d\u30bb\u30c3\u30c8\nocc_dummies.columns = ['occ1','occ2','occ3','occ4','occ5','occ6']\nhus_occ_dummies.columns = ['hocc1','hocc2','hocc3','hocc4','hocc5','hocc6']\n\nocc_dummies.head()\n```\n\n<img width=\"276\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 17.13.59.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/34e63a8a-1414-6501-ad31-68e8dfa19085.png\">\n\n\u4e0a\u306e\u611f\u3058\u3067\u3001occ1\u301c6\u306e\u3046\u3061\u3069\u308c\u306b\u5f53\u305f\u308b\u304b\u304c0,1\u306e\u30d5\u30e9\u30b0\u3067\u7f6e\u304d\u63db\u3048\u3066\u3042\u3052\u308b\u3002\n\n\u7d9a\u3051\u3066\u3001\u8aac\u660e\u5909\u6570\u3092\u53d6\u5f97\u3059\u308b\u3002\n\n```{get_x.py}\n# X\u306b\u3001\u5143\u306e\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u304b\u3089\u8077\u696d\u3001\u65e6\u90a3\u306e\u8077\u696d\u3001\u7d50\u5a5a\u6709\u7121\u3092\u524a\u9664\u3057\u305f\u3082\u306e\u3092\u30bb\u30c3\u30c8\u3002\nX = df.drop(['occupation', 'occupation_husb', 'Had_Affair'], axis =1) \n# \u8077\u696d\u3092\u30c0\u30df\u30fc\u5909\u6570\u5316\u3057\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u7528\u610f\ndummys = pd.concat([occ_dummies, hus_occ_dummies], axis =1)\n# \u8077\u696d\u7b49\u3092\u524a\u9664\u3057\u305f\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u306b\u3001\u8077\u696d\u30c0\u30df\u30fc\u5909\u6570\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\u3092\u7d50\u5408\nX = pd.concat([X, dummys], axis=1)\n\nX.head()\n```\n\n\u3053\u3053\u307e\u3067\u306e\u8aac\u660e\u5909\u6570\u7528\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\n<img width=\"1044\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 17.18.57.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/150e4ea5-2c09-e75f-1d2b-91f5c196dd62.png\">\n\n### \u591a\u91cd\u5171\u7dda\u6027\n\u3042\u308b\u8aac\u660e\u5909\u6570\u304c\u3001\u4ed6\u306e\u8aac\u660e\u5909\u6570\u30921\u3064\u307e\u305f\u306f\u8907\u6570\u3067\u8868\u73fe\u3067\u304d\u308b\u5834\u5408\u3001\u591a\u91cd\u5171\u7dda\u6027\u304c\u3042\u308b\u3068\u3044\u3046\u3002\u4f8b\u3048\u3070\u4eca\u56de\u306f\u3001occ1\u306f\u3001occ2\u301cocc6\u306e\u5024\u3067\u4e00\u610f\u306b\u6c7a\u307e\u308b\u95a2\u4fc2\u306b\u3042\u308b\u3002(occ2\u301c6\u306b1\u304c1\u500b\u4ee5\u4e0a\u3042\u308c\u3070\u3001occ1=0\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070occ1=1)\n\u3053\u306e\u5834\u5408\u3001\u9006\u884c\u5217\u304c\u8a08\u7b97\u3067\u304d\u306a\u304b\u3063\u305f\u308a\u3001\u8a08\u7b97\u3067\u304d\u3066\u3082\u5f97\u3089\u308c\u308b\u7d50\u679c\u306e\u4fe1\u983c\u6027\u304c\u4f4e\u304f\u306a\u3063\u3066\u3057\u307e\u3046\u3002\n\u306a\u306e\u3067\u3001\u3053\u308c\u3092\u306a\u304f\u3059\u3079\u304f\u3001occ1\u3068hocc1\u3092\u524a\u9664\u3059\u308b\u3002\n\n```{drop_nonavailable_value.py}\nX = X.drop('hocc1', axis = 1)\nX = X.drop('hocc1', axis = 1)\n# affairs\u306f\u3001\u76ee\u7684\u5909\u6570\u3092\u4f5c\u6210\u3059\u308b\u306e\u306b\u4f7f\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u3053\u308c\u3082\u8aac\u660e\u5909\u6570\u304b\u3089\u9664\u304f\u3002\nX = X.drop('affairs', axis =1 )\n\nX.head()\n```\n\n\u6700\u7d42\u7684\u306a\u5f62\n\n<img width=\"885\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 17.28.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/4bc44dae-fcaf-75dc-da55-9c0e7456e878.png\">\n\n### sklearn\u3092\u4f7f\u3063\u3066\u5b9f\u884c\n```{do_logistic_regression.py}\n# \u76ee\u7684\u5909\u6570\u30bb\u30c3\u30c8\nY = df.Had_Affair\nY = np.ravel(Y)    # np.ravel\u3067Y\u30921\u6b21\u5143\u914d\u5217\u306b\u3059\u308b\n\n# \u30ed\u30b8\u30b9\u30c6\u30a3\u30c3\u30af\u56de\u5e30\u5b9f\u884c\nlog_model = LogisticRegression() # \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u751f\u6210 \nlog_model.fit(X, Y)              # \u30e2\u30c7\u30eb\u4f5c\u6210\u5b9f\u884c\nlog_model.score(X, Y)            # \u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u7cbe\u5ea6\u78ba\u8a8d(72.6%)\n> 0.7260446120012567\n```\n\n\u5404\u5909\u6570\u306e\u4fc2\u6570\u3092\u78ba\u8a8d\n\n```{confirm_coefficient.py}\n# \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e.coef_[0]\u306b\u3001\u4fc2\u6570\u304c\u5165\u3063\u3066\u3044\u308b\ncoeff_df = DataFrame([X.columns, log_model.coef_[0]]).T\ncoeff_df\n```\n\n<img width=\"220\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-05-03 17.36.33.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/40159/15abe194-8358-311f-eb0a-31943734d614.png\">\n\n\u3053\u306e\u4fc2\u6570\u304c\u5927\u304d\u3044\u3068\u3053\u308d\u304c\u3001\u5f71\u97ff\u304c\u591a\u3044\u3068\u3053\u308d\u306b\u306a\u308b\u3002\n\u305f\u3060\u3057\u3001\u8aac\u660e\u5909\u6570\u306e\u30c7\u30fc\u30bf\u306e\u5358\u4f4d\u304c\u7d71\u4e00\u3055\u308c\u3066\u3044\u306a\u3044\u306e\u3067\u3001\u5358\u7d14\u306b\u6a2a\u4e26\u3073\u3067\u6bd4\u8f03\u306f\u3067\u304d\u306a\u3044\u3002\n\u4f8b\u3048\u3070\u3001occ5\u306fyrs_married\u306e9\u500d\u304f\u3089\u3044\u3042\u308b\u304b\u3089\u3001\u7d50\u5a5a\u5e74\u6570\u306f\u898b\u306a\u304f\u3066OK!!\u3068\u306f\u5358\u7d14\u306b\u306a\u3089\u306a\u3044\u3002\n\n### \u3064\u3044\u3067\u306b\n\u3044\u3064\u3082\u306e\u3054\u3068\u304f\u3001train\u3068test\u306b\u5206\u3051\u308b\u65b9\u6cd5\u3082\u66f8\u3044\u3068\u304f\u3002\n\n```{do_logistic_regression_train_test.py}\n# train\u3068test\u7528\u30c7\u30fc\u30bf\u7528\u610f\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y)\n\nlog_model2 = LogisticRegression() \nlog_model2.fit(X_train, Y_train)           # train\u30c7\u30fc\u30bf\u3067\u30e2\u30c7\u30eb\u4f5c\u6210\nclass_predict = log_model2.predict(X_test) # test\u30c7\u30fc\u30bf\u3092\u4e88\u6e2c\n\nfrom sklearn import metrics # \u4e88\u6e2c\u7cbe\u5ea6\u78ba\u8a8d\u7528\n\nmetrics.accuracy_score(Y_test, class_predict) # \u7cbe\u5ea6\u78ba\u8a8d\n>0.73115577889447236\n```\n\n73%\u304f\u3089\u3044\u306e\u7cbe\u5ea6\u304c\u51fa\u3066\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002\n", "tags": ["Python", "sklearn"]}