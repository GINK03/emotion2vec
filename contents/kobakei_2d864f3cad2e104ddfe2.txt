{"context": " More than 1 year has passed since last update.\u203b (6/11) \u30b3\u30e1\u30f3\u30c8\u9802\u3044\u305fgetPendingIntent\u3092\u4fee\u6b63\n\ncocos2d-x\u3067\u30ed\u30fc\u30ab\u30eb\u901a\u77e5\u3092\u51fa\u3057\u305f\u3044\ncocos2d-x\u3067iOS/Android\u306e\u30ed\u30fc\u30ab\u30eb\u901a\u77e5\uff08LocalNotification\uff09\u3092\u51fa\u3059\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\niOS\u306e\u5834\u5408\niOS\u306e\u5834\u5408\u306f\u3001\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u3092*.mm\u306b\u5909\u3048\u308b\u3060\u3051\u3067Objective-C\u3092\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u7c21\u5358\u3002\n\nLocalNotification.h\n#ifndef ___LocalNotificationSample__LocalNotification__\n#define ___LocalNotificationSample__LocalNotification__\n\n#include <string>\n\nclass LocalNotification {\npublic:\n  /**\n   * Show local notification\n   * @param message  Message should be shown in notificatin\n   * @param interval Interval in seconds\n   * @param tag      Tag to specify notification\n   */\n  static void show(std::string message, int interval, int tag);\n\n  /**\n   * Cancel local notification specified by ID\n   * @param tag Tag of local notification\n   */\n  static void cancel(int tag);\n};\n\n#endif /* defined(___LocalNotificationSample__LocalNotification__) */\n\n\n\nLocalNotification_iOS.mm\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)\n\n#include \"LocalNotification.h\"\n\nusing namespace std;\n\nvoid LocalNotification::show(std::string message, int interval, int tag)\n{\n  // \u901a\u77e5\u3092\u4f5c\u6210\u3059\u308b\n  UILocalNotification *notification = [[UILocalNotification alloc] init];\n\n  notification.fireDate = [[NSDate date] dateByAddingTimeInterval:interval];\n  notification.timeZone = [NSTimeZone defaultTimeZone];\n  notification.alertBody = [NSString stringWithCString:message.c_str()\n                                              encoding:[NSString defaultCStringEncoding]];\n  notification.alertAction = @\"Open\";\n  notification.soundName = UILocalNotificationDefaultSoundName;\n\n  NSNumber* tag1 = [NSNumber numberWithInteger:tag];\n  NSDictionary *infoDict = [NSDictionary dictionaryWithObject:tag1 forKey:@\"ID\"];\n  notification.userInfo = infoDict;\n\n  // \u901a\u77e5\u3092\u767b\u9332\u3059\u308b\n  [[UIApplication sharedApplication] scheduleLocalNotification:notification];\n\n  [notification release];\n}\n\nvoid LocalNotification::cancel(int tag)\n{\n  for(UILocalNotification *notification in [[UIApplication sharedApplication] scheduledLocalNotifications]) {\n    if([[notification.userInfo objectForKey:@\"ID\"] integerValue] == tag) {\n      [[UIApplication sharedApplication] cancelLocalNotification:notification];\n    }\n  }\n}\n\n#endif // CC_TARGET_PLATFORM == CC_PLATFORM_IOS\n\n\n\nAndroid\u306e\u5834\u5408\niOS\u3068\u306f\u9055\u3063\u3066\u3001\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3067\u3059\u3002\nJava\u3067LocalNotification\u3092\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3001JNI\u7d4c\u7531\u3067C++\u304b\u3089\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nAndroid\u306e\u901a\u77e5UI\u306eAPI\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u5dee\u5206\u304c\u3042\u308b\u306e\u3067\u3001Support Library v4\u306b\u5165\u3063\u3066\u308bNotificationCompat\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002\n\nCocos2dxActivity.java\npackage org.cocos2dx.cpp;\n\nimport java.util.Calendar;\n\nimport android.app.Activity;\nimport android.app.AlarmManager;\nimport android.app.NativeActivity;\nimport android.app.PendingIntent;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\n\npublic class Cocos2dxActivity extends NativeActivity{\n\n    private static final String TAG = Cocos2dxActivity.class.getSimpleName();\n    private static Activity sActivity;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        // TODO Auto-generated method stub\n        super.onCreate(savedInstanceState);\n\n        //For supports translucency\n\n        //1.change \"attribs\" in cocos\\2d\\platform\\android\\nativeactivity.cpp\n        /*const EGLint attribs[] = {\n                EGL_SURFACE_TYPE, EGL_WINDOW_BIT,\n                EGL_RENDERABLE_TYPE, EGL_OPENGL_ES2_BIT,  \n                //EGL_BLUE_SIZE, 5,   -->delete \n                //EGL_GREEN_SIZE, 6,  -->delete \n                //EGL_RED_SIZE, 5,    -->delete \n                EGL_BUFFER_SIZE, 32,  //-->new field\n                EGL_DEPTH_SIZE, 16,\n                EGL_STENCIL_SIZE, 8,\n                EGL_NONE\n        };*/\n\n        //2.Set the format of window\n        // getWindow().setFormat(PixelFormat.TRANSLUCENT);\n\n        // LocalNotification\n        sActivity = this;\n    }\n\n    public static void showLocalNotification(String message, int interval, int tag) {\n        Log.v(TAG, \"showLocalNotification\");\n        PendingIntent sender = getPendingIntent(message, tag);\n\n        Calendar calendar = Calendar.getInstance();\n        calendar.setTimeInMillis(System.currentTimeMillis());\n        calendar.add(Calendar.SECOND, interval);\n\n        AlarmManager am = (AlarmManager)sActivity.getSystemService(ALARM_SERVICE);\n        am.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), sender);\n    }\n\n    public static void cancelLocalNotification(int tag) {\n        Log.v(TAG, \"cancelLocalNotification\");\n        PendingIntent sender = getPendingIntent(null, tag);\n        AlarmManager am = (AlarmManager)sActivity.getSystemService(ALARM_SERVICE);\n        am.cancel(sender);\n    }\n\n    private static PendingIntent getPendingIntent(String message, int tag) {\n        Intent i = new Intent(sActivity.getApplicationContext(), LocalNotificationReceiver.class);\n        i.putExtra(\"notification_id\", tag);\n        i.putExtra(\"message\", message);\n        PendingIntent sender = PendingIntent.getBroadcast(sActivity,  tag, i, PendingIntent.FLAG_UPDATE_CURRENT);\n        return sender;\n    }\n}\n\n\n\nLocalNotificationReceiver.java\npackage org.cocos2dx.cpp;\n\nimport com.MyCompany.AwesomeGame.R;\n\nimport android.app.Notification;\nimport android.app.NotificationManager;\nimport android.app.PendingIntent;\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.support.v4.app.NotificationCompat;\n\npublic class LocalNotificationReceiver extends BroadcastReceiver {\n\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        int notificationId = intent.getIntExtra(\"notification_id\", 0);\n        String message = intent.getStringExtra(\"message\");\n\n        Intent intent2 = new Intent(context, Cocos2dxActivity.class);\n        intent2.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent2,\n                PendingIntent.FLAG_UPDATE_CURRENT);\n\n        Bitmap largeIcon = BitmapFactory.decodeResource(context.getResources(),\n                R.drawable.icon);\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(context);\n        builder.setContentTitle(context.getString(R.string.app_name));\n        builder.setContentText(message);\n        builder.setSmallIcon(R.drawable.icon);\n        builder.setLargeIcon(largeIcon);\n        builder.setTicker(message);\n        builder.setAutoCancel(true);\n        builder.setDefaults(Notification.DEFAULT_ALL);\n        builder.setContentIntent(pendingIntent);\n\n        NotificationManager manager = (NotificationManager) context\n                .getSystemService(Context.NOTIFICATION_SERVICE);\n        manager.notify(notificationId, builder.build());\n    }\n\n}\n\n\nAndroidManifest.xml\u306b\u4ee5\u4e0b\u306e1\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nAndroidManifest.xml\n<!-- \u30ed\u30fc\u30ab\u30eb\u901a\u77e5\u306e\u30ec\u30b7\u30fc\u30d0\u30fc -->\n<receiver android:name=\"org.cocos2dx.cpp.LocalNotificationReceiver\" android:process=\":remote\" />\n\n\nC++\u5074\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u3067\u3059\u3002iOS\u7248\u3068API\u3092\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n\nLocalNotification_Android.cpp\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)\n\n#include \"LocalNotification.h\"\n#include \"platform/android/jni/JniHelper.h\"\n#include <jni.h>\n\nusing namespace std;\n\n// Java class\n// NativeActivity\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u30fb\u30af\u30e9\u30b9\u540d\u306b\u5408\u308f\u305b\u3066\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\n#define  CLASS_NAME \"org/cocos2dx/cpp/Cocos2dxActivity\"\n\nstatic bool getJNIStaticMethodInfo(cocos2d::JniMethodInfo &methodinfo,\n                                        const char *methodName,\n                                        const char *paramCode) {\n  return cocos2d::JniHelper::getStaticMethodInfo(methodinfo,\n                                                 CLASS_NAME,\n                                                 methodName,\n                                                 paramCode);\n}\n\nvoid LocalNotification::show(std::string message, int interval, int tag)\n{\n  cocos2d::JniMethodInfo methodInfo;\n\n  if (! getJNIStaticMethodInfo(methodInfo, \"showLocalNotification\", \"(Ljava/lang/String;II)V\")) {\n    return;\n  }\n\n  jstring stringArg = methodInfo.env->NewStringUTF(message.c_str());\n  methodInfo.env->CallStaticVoidMethod(methodInfo.classID, methodInfo.methodID, stringArg, interval, tag);\n  methodInfo.env->DeleteLocalRef(stringArg);\n  methodInfo.env->DeleteLocalRef(methodInfo.classID);\n}\n\nvoid LocalNotification::cancel(int tag)\n{\n  cocos2d::JniMethodInfo methodInfo;\n\n  if (! getJNIStaticMethodInfo(methodInfo, \"cancelLocalNotification\", \"(I)V\")) {\n    return;\n  }\n\n  methodInfo.env->CallStaticVoidMethod(methodInfo.classID, methodInfo.methodID, tag);\n  methodInfo.env->DeleteLocalRef(methodInfo.classID);\n}\n\n#endif // CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID\n\n\n\n\u4f7f\u3044\u65b9\n\u3053\u3093\u306a\u611f\u3058\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n// 10sec\u5f8c\u306b\u8868\u793a\nLocalNotification::show(\"Hello Notification!\", 10, 1);\n\n// \u30bf\u30b01\u306e\u901a\u77e5\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\nLocalNotification::cancel(1);\n\n\u203b (6/11) \u30b3\u30e1\u30f3\u30c8\u9802\u3044\u305fgetPendingIntent\u3092\u4fee\u6b63\n\n# cocos2d-x\u3067\u30ed\u30fc\u30ab\u30eb\u901a\u77e5\u3092\u51fa\u3057\u305f\u3044\ncocos2d-x\u3067iOS/Android\u306e\u30ed\u30fc\u30ab\u30eb\u901a\u77e5\uff08LocalNotification\uff09\u3092\u51fa\u3059\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n# iOS\u306e\u5834\u5408\niOS\u306e\u5834\u5408\u306f\u3001\u5b9f\u88c5\u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u3092*.mm\u306b\u5909\u3048\u308b\u3060\u3051\u3067Objective-C\u3092\u547c\u3073\u51fa\u305b\u308b\u306e\u3067\u7c21\u5358\u3002\n\n```objc++:LocalNotification.h\n#ifndef ___LocalNotificationSample__LocalNotification__\n#define ___LocalNotificationSample__LocalNotification__\n\n#include <string>\n\nclass LocalNotification {\npublic:\n  /**\n   * Show local notification\n   * @param message  Message should be shown in notificatin\n   * @param interval Interval in seconds\n   * @param tag      Tag to specify notification\n   */\n  static void show(std::string message, int interval, int tag);\n  \n  /**\n   * Cancel local notification specified by ID\n   * @param tag Tag of local notification\n   */\n  static void cancel(int tag);\n};\n\n#endif /* defined(___LocalNotificationSample__LocalNotification__) */\n```\n\n```objc++:LocalNotification_iOS.mm\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_IOS)\n\n#include \"LocalNotification.h\"\n\nusing namespace std;\n\nvoid LocalNotification::show(std::string message, int interval, int tag)\n{\n  // \u901a\u77e5\u3092\u4f5c\u6210\u3059\u308b\n  UILocalNotification *notification = [[UILocalNotification alloc] init];\n  \n  notification.fireDate = [[NSDate date] dateByAddingTimeInterval:interval];\n  notification.timeZone = [NSTimeZone defaultTimeZone];\n  notification.alertBody = [NSString stringWithCString:message.c_str()\n                                              encoding:[NSString defaultCStringEncoding]];\n  notification.alertAction = @\"Open\";\n  notification.soundName = UILocalNotificationDefaultSoundName;\n  \n  NSNumber* tag1 = [NSNumber numberWithInteger:tag];\n  NSDictionary *infoDict = [NSDictionary dictionaryWithObject:tag1 forKey:@\"ID\"];\n  notification.userInfo = infoDict;\n  \n  // \u901a\u77e5\u3092\u767b\u9332\u3059\u308b\n  [[UIApplication sharedApplication] scheduleLocalNotification:notification];\n  \n  [notification release];\n}\n\nvoid LocalNotification::cancel(int tag)\n{\n  for(UILocalNotification *notification in [[UIApplication sharedApplication] scheduledLocalNotifications]) {\n    if([[notification.userInfo objectForKey:@\"ID\"] integerValue] == tag) {\n      [[UIApplication sharedApplication] cancelLocalNotification:notification];\n    }\n  }\n}\n\n#endif // CC_TARGET_PLATFORM == CC_PLATFORM_IOS\n```\n\n# Android\u306e\u5834\u5408\niOS\u3068\u306f\u9055\u3063\u3066\u3001\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u3044\u3067\u3059\u3002\nJava\u3067LocalNotification\u3092\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3001JNI\u7d4c\u7531\u3067C++\u304b\u3089\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\nAndroid\u306e\u901a\u77e5UI\u306eAPI\u306f\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u3088\u3063\u3066\u5dee\u5206\u304c\u3042\u308b\u306e\u3067\u3001Support Library v4\u306b\u5165\u3063\u3066\u308bNotificationCompat\u30af\u30e9\u30b9\u3092\u4f7f\u7528\u3057\u307e\u3057\u3087\u3046\u3002\n\n```java:Cocos2dxActivity.java\npackage org.cocos2dx.cpp;\n\nimport java.util.Calendar;\n\nimport android.app.Activity;\nimport android.app.AlarmManager;\nimport android.app.NativeActivity;\nimport android.app.PendingIntent;\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\n\npublic class Cocos2dxActivity extends NativeActivity{\n\t\n\tprivate static final String TAG = Cocos2dxActivity.class.getSimpleName();\n\tprivate static Activity sActivity;\n\t\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\t// TODO Auto-generated method stub\n\t\tsuper.onCreate(savedInstanceState);\n\t\t\n\t\t//For supports translucency\n\t\t\n\t\t//1.change \"attribs\" in cocos\\2d\\platform\\android\\nativeactivity.cpp\n\t\t/*const EGLint attribs[] = {\n\t            EGL_SURFACE_TYPE, EGL_WINDOW_BIT,\n\t            EGL_RENDERABLE_TYPE, EGL_OPENGL_ES2_BIT,  \n\t            //EGL_BLUE_SIZE, 5,   -->delete \n\t            //EGL_GREEN_SIZE, 6,  -->delete \n\t            //EGL_RED_SIZE, 5,    -->delete \n\t            EGL_BUFFER_SIZE, 32,  //-->new field\n\t            EGL_DEPTH_SIZE, 16,\n\t            EGL_STENCIL_SIZE, 8,\n\t            EGL_NONE\n\t    };*/\n\t\t\n\t\t//2.Set the format of window\n\t\t// getWindow().setFormat(PixelFormat.TRANSLUCENT);\n\t\t\n\t\t// LocalNotification\n\t\tsActivity = this;\n\t}\n\t\n\tpublic static void showLocalNotification(String message, int interval, int tag) {\n\t\tLog.v(TAG, \"showLocalNotification\");\n\t\tPendingIntent sender = getPendingIntent(message, tag);\n\t\t\n\t\tCalendar calendar = Calendar.getInstance();\n\t\tcalendar.setTimeInMillis(System.currentTimeMillis());\n\t\tcalendar.add(Calendar.SECOND, interval);\n\t\t\n\t\tAlarmManager am = (AlarmManager)sActivity.getSystemService(ALARM_SERVICE);\n\t\tam.set(AlarmManager.RTC_WAKEUP, calendar.getTimeInMillis(), sender);\n\t}\n\t\n\tpublic static void cancelLocalNotification(int tag) {\n\t\tLog.v(TAG, \"cancelLocalNotification\");\n\t\tPendingIntent sender = getPendingIntent(null, tag);\n\t\tAlarmManager am = (AlarmManager)sActivity.getSystemService(ALARM_SERVICE);\n\t\tam.cancel(sender);\n\t}\n\t\n\tprivate static PendingIntent getPendingIntent(String message, int tag) {\n\t\tIntent i = new Intent(sActivity.getApplicationContext(), LocalNotificationReceiver.class);\n\t\ti.putExtra(\"notification_id\", tag);\n\t\ti.putExtra(\"message\", message);\n\t\tPendingIntent sender = PendingIntent.getBroadcast(sActivity,  tag, i, PendingIntent.FLAG_UPDATE_CURRENT);\n\t\treturn sender;\n\t}\n}\n```\n\n```java:LocalNotificationReceiver.java\npackage org.cocos2dx.cpp;\n\nimport com.MyCompany.AwesomeGame.R;\n\nimport android.app.Notification;\nimport android.app.NotificationManager;\nimport android.app.PendingIntent;\nimport android.content.BroadcastReceiver;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.graphics.Bitmap;\nimport android.graphics.BitmapFactory;\nimport android.support.v4.app.NotificationCompat;\n\npublic class LocalNotificationReceiver extends BroadcastReceiver {\n\n\t@Override\n\tpublic void onReceive(Context context, Intent intent) {\n\t\tint notificationId = intent.getIntExtra(\"notification_id\", 0);\n\t\tString message = intent.getStringExtra(\"message\");\n\n\t\tIntent intent2 = new Intent(context, Cocos2dxActivity.class);\n\t\tintent2.setFlags(Intent.FLAG_ACTIVITY_REORDER_TO_FRONT);\n\t\tPendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent2,\n\t\t\t\tPendingIntent.FLAG_UPDATE_CURRENT);\n\n\t\tBitmap largeIcon = BitmapFactory.decodeResource(context.getResources(),\n\t\t\t\tR.drawable.icon);\n\t\tNotificationCompat.Builder builder = new NotificationCompat.Builder(context);\n\t\tbuilder.setContentTitle(context.getString(R.string.app_name));\n\t\tbuilder.setContentText(message);\n\t\tbuilder.setSmallIcon(R.drawable.icon);\n\t\tbuilder.setLargeIcon(largeIcon);\n\t\tbuilder.setTicker(message);\n\t\tbuilder.setAutoCancel(true);\n\t\tbuilder.setDefaults(Notification.DEFAULT_ALL);\n\t\tbuilder.setContentIntent(pendingIntent);\n\n\t\tNotificationManager manager = (NotificationManager) context\n\t\t\t\t.getSystemService(Context.NOTIFICATION_SERVICE);\n\t\tmanager.notify(notificationId, builder.build());\n\t}\n\n}\n```\n\nAndroidManifest.xml\u306b\u4ee5\u4e0b\u306e1\u884c\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml:AndroidManifest.xml\n<!-- \u30ed\u30fc\u30ab\u30eb\u901a\u77e5\u306e\u30ec\u30b7\u30fc\u30d0\u30fc -->\n<receiver android:name=\"org.cocos2dx.cpp.LocalNotificationReceiver\" android:process=\":remote\" />\n```\n\nC++\u5074\u306e\u5b9f\u88c5\u306f\u4ee5\u4e0b\u3067\u3059\u3002iOS\u7248\u3068API\u3092\u5408\u308f\u305b\u3066\u3044\u307e\u3059\u3002\n\n```cpp:LocalNotification_Android.cpp\n#if (CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID)\n\n#include \"LocalNotification.h\"\n#include \"platform/android/jni/JniHelper.h\"\n#include <jni.h>\n\nusing namespace std;\n\n// Java class\n// NativeActivity\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u540d\u30fb\u30af\u30e9\u30b9\u540d\u306b\u5408\u308f\u305b\u3066\u4fee\u6b63\u3057\u3066\u304f\u3060\u3055\u3044\n#define  CLASS_NAME \"org/cocos2dx/cpp/Cocos2dxActivity\"\n\nstatic bool getJNIStaticMethodInfo(cocos2d::JniMethodInfo &methodinfo,\n                                        const char *methodName,\n                                        const char *paramCode) {\n  return cocos2d::JniHelper::getStaticMethodInfo(methodinfo,\n                                                 CLASS_NAME,\n                                                 methodName,\n                                                 paramCode);\n}\n\nvoid LocalNotification::show(std::string message, int interval, int tag)\n{\n  cocos2d::JniMethodInfo methodInfo;\n  \n  if (! getJNIStaticMethodInfo(methodInfo, \"showLocalNotification\", \"(Ljava/lang/String;II)V\")) {\n    return;\n  }\n  \n  jstring stringArg = methodInfo.env->NewStringUTF(message.c_str());\n  methodInfo.env->CallStaticVoidMethod(methodInfo.classID, methodInfo.methodID, stringArg, interval, tag);\n  methodInfo.env->DeleteLocalRef(stringArg);\n  methodInfo.env->DeleteLocalRef(methodInfo.classID);\n}\n\nvoid LocalNotification::cancel(int tag)\n{\n  cocos2d::JniMethodInfo methodInfo;\n  \n  if (! getJNIStaticMethodInfo(methodInfo, \"cancelLocalNotification\", \"(I)V\")) {\n    return;\n  }\n\n  methodInfo.env->CallStaticVoidMethod(methodInfo.classID, methodInfo.methodID, tag);\n  methodInfo.env->DeleteLocalRef(methodInfo.classID);\n}\n\n#endif // CC_TARGET_PLATFORM == CC_PLATFORM_ANDROID\n```\n\n# \u4f7f\u3044\u65b9\n\u3053\u3093\u306a\u611f\u3058\u3067\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\n\n```objc++\n// 10sec\u5f8c\u306b\u8868\u793a\nLocalNotification::show(\"Hello Notification!\", 10, 1);\n\n// \u30bf\u30b01\u306e\u901a\u77e5\u3092\u30ad\u30e3\u30f3\u30bb\u30eb\nLocalNotification::cancel(1);\n```\n", "tags": ["cocos2d-x", "iOS", "Android"]}