{"tags": ["Elixir", "cowboy"], "context": "\n\n\u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u306e1.0.4\u3092\u52d5\u304b\u3059\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u8a18\u4e8b\u3092\u3053\u3061\u3089\u306b\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u306fCowboy 2.0.0-pre4 \u306b\u3066\u52d5\u304b\u3059\u3055\u3044\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059\n\n\u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n\n\n\nVersion\n\n\n\n\nElixir\n1.3.2\n\n\nErlang\n19.2\n\n\nCowboy\n2.0.0-pre4\n\n\n\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\u307e\u305a\u306f\u3001\u4eca\u56de\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\u3082\u884c\u3046\u305f\u3081 --sup\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\u3002\n$ mix new elixir_cowboy_example --sup\n\n\n\u30b3\u30fc\u30c9\nmix new\u306b\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3089\u79fb\u52d5\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001 mix.exs\u306b\u4eca\u56de\u4f7f\u7528\u3059\u308b cowboy \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068 cowboy \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u3080\u306d\u306e\u8a18\u8f09\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\nmix.exs\n  def application do\n    [applications: [:logger, :cowboy],\n     mod: {ElixirCowboyExample, []}]\n  end\n\n  defp deps do\n    [\n      {:cowboy, git: \"https://github.com/ninenines/cowboy.git\", tag: \"2.0.0-pre.4\"}\n    ]\n  end\n\n\n\u305d\u308c\u3067\u306f\u7d9a\u304d\u307e\u3057\u3066\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\nelixir_cowboy_example.ex \u306b\u306f\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\u3068\u30a2\u30af\u30bb\u30b9\u3059\u308bURL\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nlib/elixir_cowboy_example.ex\ndefmodule ElixirCowboyExample do\n  use Application\n\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    # \u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\n    children = [\n      worker(__MODULE__, [], function: :run)\n    ]\n\n    opts = [strategy: :one_for_one, name: ElixirCowboyExample.Supervisor]\n    Supervisor.start_link(children, opts)\n  end\n\n  def run do\n    # \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []}\n    ]\n\n    # http \u30a2\u30af\u30bb\u30b9\u3059\u308b\u7b87\u6240\u306e\u8a18\u8f09\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    # opts \u3068 env \u306e\u8a2d\u5b9a\u304c cowboy1.0.4\u3068\u306f\u9055\u3063\u3066\u3044\u307e\u3059\n    opts = [{:port, 4000}]\n    env = %{dispatch: dispatch}\n\n    {:ok, _pid} = :cowboy.start_clear(:http, 100, opts, %{env: env})\n  end\nend\n\n\n\u6700\u5f8c\u306b routes \u306b\u3066 ElixirCowboyExample.Handler \u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001Handler\u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nHandler\u3067\u306f\u5b9f\u969b\u306b\u30a2\u30af\u30bb\u30b9\u304c\u884c\u308f\u308c\u305f\u969b\u306b\u3001\u3069\u306e\u3088\u3046\u306a\u5fdc\u7b54\u3092\u884c\u3046\u304b\u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\ninit \u3067\u3059\u304c cowboy 1.0.4 \u3067\u306f\u3001init/3 \u3067\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001 cowboy 2.0 \u3067\u306f\u3001init/2 \u3068\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002\nCowboy 2.0.0 \u306b\u5411\u3051\u3066\n\nlib/elixir_cowboy_example/handler.ex\ndefmodule ElixirCowboyExample.Handler do\n  def init(req, opts) do\n    headers = %{\"content-type\" => \"text/plain\"}\n    body = \"Hello Cowboy!\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n    {:ok, resp, opts}\n  end\nend\n\n\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u306b\u95a2\u3057\u307e\u3057\u3066\u306f\u3001\u4e0a\u8a18\u3067\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u5b9f\u884c\n\u3055\u3066\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f mix deps.get \u306b\u3066 cowboy\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u306b iex -S mix \u3067\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\n$ mix deps.get\n* Getting cowboy (https://github.com/ninenines/cowboy.git)\nCloning into '/elixir_cowboy_example/deps/cowboy'...\nremote: Counting objects: 9017, done.        \nremote: Compressing objects: 100% (24/24), done.        \nremote: Total 9017 (delta 7), reused 0 (delta 0), pack-reused 8992        \nReceiving objects: 100% (9017/9017), 5.19 MiB | 886.00 KiB/s, done.\nResolving deltas: 100% (5850/5850), done.\nChecking connectivity... done.\n* Getting cowlib (https://github.com/ninenines/cowlib)\nCloning into '/elixir_cowboy_example/deps/cowlib'...\nremote: Counting objects: 915, done.        \nremote: Total 915 (delta 0), reused 0 (delta 0), pack-reused 915        \nReceiving objects: 100% (915/915), 455.51 KiB | 206.00 KiB/s, done.\nResolving deltas: 100% (599/599), done.\nChecking connectivity... done.\n* Getting ranch (https://github.com/ninenines/ranch)\nCloning into '/elixir_cowboy_example/deps/ranch'...\nremote: Counting objects: 1434, done.        \nremote: Total 1434 (delta 0), reused 0 (delta 0), pack-reused 1434        \nReceiving objects: 100% (1434/1434), 493.51 KiB | 316.00 KiB/s, done.\nResolving deltas: 100% (890/890), done.\nChecking connectivity... done.\n\n$ iex -S mix\nErlang/OTP 19 [erts-8.2] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false]\n\n==> ranch (compile)\nCompiled src/ranch_transport.erl\nCompiled src/ranch_sup.erl\nCompiled src/ranch_ssl.erl\nCompiled src/ranch_tcp.erl\nCompiled src/ranch_server.erl\nCompiled src/ranch_protocol.erl\nCompiled src/ranch_listener_sup.erl\nCompiled src/ranch_app.erl\nCompiled src/ranch_acceptors_sup.erl\nCompiled src/ranch_acceptor.erl\nCompiled src/ranch_conns_sup.erl\nCompiled src/ranch.erl\n==> cowlib (compile)\nCompiled src/cow_uri.erl\nCompiled src/cow_spdy.erl\nCompiled src/cow_ws.erl\nCompiled src/cow_qs.erl\nCompiled src/cow_http_te.erl\nCompiled src/cow_multipart.erl\nCompiled src/cow_http2.erl\nCompiled src/cow_http.erl\nCompiled src/cow_mimetypes.erl\nCompiled src/cow_date.erl\nCompiled src/cow_hpack.erl\nCompiled src/cow_cookie.erl\nCompiled src/cow_http_hd.erl\n==> cowboy (compile)\nCompiled src/cowboy_middleware.erl\nCompiled src/cowboy_sub_protocol.erl\nCompiled src/cowboy_sup.erl\nCompiled src/cowboy_tls.erl\nCompiled src/cowboy_stream.erl\nCompiled src/cowboy_stream_h.erl\nCompiled src/cowboy_static.erl\nCompiled src/cowboy_websocket.erl\nCompiled src/cowboy_router.erl\nCompiled src/cowboy_loop.erl\nCompiled src/cowboy_req.erl\nCompiled src/cowboy_http2.erl\nCompiled src/cowboy_rest.erl\nCompiled src/cowboy_constraints.erl\nCompiled src/cowboy_handler.erl\nCompiled src/cowboy_clear.erl\nCompiled src/cowboy_bstr.erl\nCompiled src/cowboy_clock.erl\nCompiled src/cowboy_app.erl\nCompiled src/cowboy.erl\nCompiled src/cowboy_http.erl\nCompiling 2 files (.ex)\nGenerated elixir_cowboy_example app\nInteractive Elixir (1.3.2) - press Ctrl+C to exit (type h() ENTER for help)\niex(1)> \n\n\n\u3055\u3066\u8d77\u52d5\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3089\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\nhttp://localhost:4000\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3001Hello Cowboy!\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n\n\u6700\u5f8c\u306b\n\u3044\u304b\u304c\u3060\u3063\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\ncowboy2.0\u3067\u3082\u3001\u5358\u7d14\u306abody\u306e\u5185\u5bb9\u3092\u51fa\u3059\u3060\u3051\u306a\u3089\u3070\u3001\u305d\u308c\u307b\u3069\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306f\u306a\u304f\u8a18\u8f09\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u308c\u3067\u306fCowboy1.0\u306e\u65b9\u3068\u5408\u308f\u305b\u3066\u3001\u6b21\u56de\u306f\u3082\u3046\u5c11\u3057\u9032\u3093\u3060\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\n\u53c2\u8003\u30b5\u30a4\u30c8\nCowboy User Guide\nCowboy 2.0.0 \u306b\u5411\u3051\u3066\n# \u306f\u3058\u3081\u306b\nElixir\u306b\u3066Cowboy\u306e1.0.4\u3092\u52d5\u304b\u3059\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u8a18\u4e8b\u3092[\u3053\u3061\u3089](http://qiita.com/hayabusa333/items/17be5e95510141f52c47)\u306b\u8a18\u8f09\u3057\u307e\u3057\u305f\u304c\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3067\u306fCowboy 2.0.0-pre4 \u306b\u3066\u52d5\u304b\u3059\u3055\u3044\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u306a\u308a\u307e\u3059\u3002\n\n[\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u306a\u308a\u307e\u3059](https://github.com/hayabusa333/elixir_cowboy_example/tree/static_page_cowboy_two_pre4)\n\n# \u30d0\u30fc\u30b8\u30e7\u30f3\n\u4f7f\u7528\u3057\u305f\u8a00\u8a9e\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u4e0b\u8a18\u3068\u306a\u308a\u307e\u3059\u3002\n\n|  | Version |\n|:-----------|--------:|\n| Elixir | 1.3.2 |\n| Erlang | 19.2 |\n| Cowboy | 2.0.0-pre4 |\n\n# \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u4f5c\u6210\n\n\u307e\u305a\u306f\u3001\u4eca\u56de\u4f5c\u6210\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\u3082\u884c\u3046\u305f\u3081 `--sup`\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u3064\u3051\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u3092\u884c\u3044\u307e\u3059\u3002\n\n``` cmd\n$ mix new elixir_cowboy_example --sup\n```\n\n# \u30b3\u30fc\u30c9\n`mix new`\u306b\u3066\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\u304c\u7d42\u308f\u308a\u307e\u3057\u305f\u3089\u79fb\u52d5\u3057\u3066\u3001\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305a\u306f\u3001 `mix.exs`\u306b\u4eca\u56de\u4f7f\u7528\u3059\u308b cowboy \u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3068 cowboy \u3092\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3067\u4f7f\u7528\u3059\u308b\u3080\u306d\u306e\u8a18\u8f09\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n``` elixir:mix.exs\n  def application do\n    [applications: [:logger, :cowboy],\n     mod: {ElixirCowboyExample, []}]\n  end\n\n  defp deps do\n    [\n      {:cowboy, git: \"https://github.com/ninenines/cowboy.git\", tag: \"2.0.0-pre.4\"}\n    ]\n  end\n```\n\n\u305d\u308c\u3067\u306f\u7d9a\u304d\u307e\u3057\u3066\u30e1\u30a4\u30f3\u306e\u51e6\u7406\u3092\u8a18\u8f09\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\n`elixir_cowboy_example.ex` \u306b\u306f\u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\u3068\u30a2\u30af\u30bb\u30b9\u3059\u308bURL\u306a\u3069\u306e\u8a2d\u5b9a\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n``` elixir:lib/elixir_cowboy_example.ex\ndefmodule ElixirCowboyExample do\n  use Application\n\n  def start(_type, _args) do\n    import Supervisor.Spec, warn: false\n\n    # \u30b9\u30fc\u30d1\u30fc\u30d0\u30a4\u30b6\u306e\u8a2d\u5b9a\n    children = [\n      worker(__MODULE__, [], function: :run)\n    ]\n\n    opts = [strategy: :one_for_one, name: ElixirCowboyExample.Supervisor]\n    Supervisor.start_link(children, opts)\n  end\n\n  def run do\n    # \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\n    routes = [\n      {\"/\", ElixirCowboyExample.Handler, []}\n    ]\n\n    # http \u30a2\u30af\u30bb\u30b9\u3059\u308b\u7b87\u6240\u306e\u8a18\u8f09\n    dispatch = :cowboy_router.compile([{:_, routes}])\n\n    # opts \u3068 env \u306e\u8a2d\u5b9a\u304c cowboy1.0.4\u3068\u306f\u9055\u3063\u3066\u3044\u307e\u3059\n    opts = [{:port, 4000}]\n    env = %{dispatch: dispatch}\n\n    {:ok, _pid} = :cowboy.start_clear(:http, 100, opts, %{env: env})\n  end\nend\n```\n\n\u6700\u5f8c\u306b `routes` \u306b\u3066 `ElixirCowboyExample.Handler` \u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001Handler\u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\nHandler\u3067\u306f\u5b9f\u969b\u306b\u30a2\u30af\u30bb\u30b9\u304c\u884c\u308f\u308c\u305f\u969b\u306b\u3001\u3069\u306e\u3088\u3046\u306a\u5fdc\u7b54\u3092\u884c\u3046\u304b\u306e\u8a18\u8f09\u3092\u884c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n`init` \u3067\u3059\u304c\b `cowboy 1.0.4` \u3067\u306f\u3001`init/3` \u3067\u5b9a\u7fa9\u3059\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3057\u305f\u304c\u3001 `cowboy 2.0` \u3067\u306f\u3001`init/2` \u3068\u306a\u3063\u305f\u3088\u3046\u3067\u3059\u3002\n[Cowboy 2.0.0 \u306b\u5411\u3051\u3066](http://qiita.com/voluntas/items/e0559c56bf8926ccc2a0#init3-%E3%81%8C-init2-%E3%81%B8%E3%81%9D%E3%81%97%E3%81%A6-terminate-%E3%81%AF%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%81%B8)\n\n``` elixir:lib/elixir_cowboy_example/handler.ex\ndefmodule ElixirCowboyExample.Handler do\n  def init(req, opts) do\n    headers = %{\"content-type\" => \"text/plain\"}\n    body = \"Hello Cowboy!\"\n    {:ok, resp} = :cowboy_req.reply(200, headers, body, req)\n    {:ok, resp, opts}\n  end\nend\n```\n\n\u30b3\u30fc\u30c9\u306e\u8a18\u8ff0\u306b\u95a2\u3057\u307e\u3057\u3066\u306f\u3001\u4e0a\u8a18\u3067\u4ee5\u4e0a\u3068\u306a\u308a\u307e\u3059\u3002\n\n# \u5b9f\u884c\n\u3055\u3066\u3001\u305d\u308c\u3067\u306f\u5b9f\u884c\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306f `mix deps.get` \u306b\u3066 cowboy\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u884c\u3044\u307e\u3059\u3002\n\u305d\u306e\u5f8c\u306b `iex -S mix` \u3067\u8d77\u52d5\u3092\u884c\u3044\u307e\u3059\u3002\n\n``` cmd\n$ mix deps.get\n* Getting cowboy (https://github.com/ninenines/cowboy.git)\nCloning into '/elixir_cowboy_example/deps/cowboy'...\nremote: Counting objects: 9017, done.        \nremote: Compressing objects: 100% (24/24), done.        \nremote: Total 9017 (delta 7), reused 0 (delta 0), pack-reused 8992        \nReceiving objects: 100% (9017/9017), 5.19 MiB | 886.00 KiB/s, done.\nResolving deltas: 100% (5850/5850), done.\nChecking connectivity... done.\n* Getting cowlib (https://github.com/ninenines/cowlib)\nCloning into '/elixir_cowboy_example/deps/cowlib'...\nremote: Counting objects: 915, done.        \nremote: Total 915 (delta 0), reused 0 (delta 0), pack-reused 915        \nReceiving objects: 100% (915/915), 455.51 KiB | 206.00 KiB/s, done.\nResolving deltas: 100% (599/599), done.\nChecking connectivity... done.\n* Getting ranch (https://github.com/ninenines/ranch)\nCloning into '/elixir_cowboy_example/deps/ranch'...\nremote: Counting objects: 1434, done.        \nremote: Total 1434 (delta 0), reused 0 (delta 0), pack-reused 1434        \nReceiving objects: 100% (1434/1434), 493.51 KiB | 316.00 KiB/s, done.\nResolving deltas: 100% (890/890), done.\nChecking connectivity... done.\n\n$ iex -S mix\nErlang/OTP 19 [erts-8.2] [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false]\n\n==> ranch (compile)\nCompiled src/ranch_transport.erl\nCompiled src/ranch_sup.erl\nCompiled src/ranch_ssl.erl\nCompiled src/ranch_tcp.erl\nCompiled src/ranch_server.erl\nCompiled src/ranch_protocol.erl\nCompiled src/ranch_listener_sup.erl\nCompiled src/ranch_app.erl\nCompiled src/ranch_acceptors_sup.erl\nCompiled src/ranch_acceptor.erl\nCompiled src/ranch_conns_sup.erl\nCompiled src/ranch.erl\n==> cowlib (compile)\nCompiled src/cow_uri.erl\nCompiled src/cow_spdy.erl\nCompiled src/cow_ws.erl\nCompiled src/cow_qs.erl\nCompiled src/cow_http_te.erl\nCompiled src/cow_multipart.erl\nCompiled src/cow_http2.erl\nCompiled src/cow_http.erl\nCompiled src/cow_mimetypes.erl\nCompiled src/cow_date.erl\nCompiled src/cow_hpack.erl\nCompiled src/cow_cookie.erl\nCompiled src/cow_http_hd.erl\n==> cowboy (compile)\nCompiled src/cowboy_middleware.erl\nCompiled src/cowboy_sub_protocol.erl\nCompiled src/cowboy_sup.erl\nCompiled src/cowboy_tls.erl\nCompiled src/cowboy_stream.erl\nCompiled src/cowboy_stream_h.erl\nCompiled src/cowboy_static.erl\nCompiled src/cowboy_websocket.erl\nCompiled src/cowboy_router.erl\nCompiled src/cowboy_loop.erl\nCompiled src/cowboy_req.erl\nCompiled src/cowboy_http2.erl\nCompiled src/cowboy_rest.erl\nCompiled src/cowboy_constraints.erl\nCompiled src/cowboy_handler.erl\nCompiled src/cowboy_clear.erl\nCompiled src/cowboy_bstr.erl\nCompiled src/cowboy_clock.erl\nCompiled src/cowboy_app.erl\nCompiled src/cowboy.erl\nCompiled src/cowboy_http.erl\nCompiling 2 files (.ex)\nGenerated elixir_cowboy_example app\nInteractive Elixir (1.3.2) - press Ctrl+C to exit (type h() ENTER for help)\niex(1)> \n\n```\n\n\u3055\u3066\u8d77\u52d5\u304c\u5b8c\u4e86\u3057\u307e\u3057\u305f\u3089\u3001\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\n`http://localhost:4000`\u306b\u30d6\u30e9\u30a6\u30b6\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3001`Hello Cowboy!`\u3068\u8868\u793a\u3055\u308c\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n<img width=\"1265\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-01-06 10.30.39.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/3014/9ccbf3e2-3b96-0f6e-83ea-5e3fc3134133.png\">\n\n# \u6700\u5f8c\u306b\n\u3044\u304b\u304c\u3060\u3063\u305f\u3067\u3057\u3087\u3046\u304b\uff1f\ncowboy2.0\u3067\u3082\u3001\u5358\u7d14\u306abody\u306e\u5185\u5bb9\u3092\u51fa\u3059\u3060\u3051\u306a\u3089\u3070\u3001\u305d\u308c\u307b\u3069\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306f\u306a\u304f\u8a18\u8f09\u3067\u304d\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u3002\n\u305d\u308c\u3067\u306fCowboy1.0\u306e\u65b9\u3068\u5408\u308f\u305b\u3066\u3001\u6b21\u56de\u306f\u3082\u3046\u5c11\u3057\u9032\u3093\u3060\u5185\u5bb9\u3092\u8a18\u8f09\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u306e\u3067\u3001\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3044\u305f\u3057\u307e\u3059\u3002\n\n# \u53c2\u8003\u30b5\u30a4\u30c8\n[Cowboy User Guide](https://ninenines.eu/docs/en/cowboy/2.0/guide/)\n[Cowboy 2.0.0 \u306b\u5411\u3051\u3066](http://qiita.com/voluntas/items/e0559c56bf8926ccc2a0)\n"}