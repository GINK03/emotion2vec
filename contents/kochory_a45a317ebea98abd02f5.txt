{"context": "\n\n\u307e\u3068\u3081\n\u30d3\u30f3\u306e\u533a\u5207\u308a\u5024\u304c ndarray: bin_edges \u306b\u6607\u9806\u3067\u5165\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u5024 x \u304c\u3069\u306e\u30d3\u30f3\u306b\u5165\u308b\u304b\u306f\n\nget_bin_idx.py\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\n\n\n\u3067\u5f97\u3089\u308c\u308b\u3002\n\u8ffd\u8a18(2016/03/16)\uff1a\n\nget_bin_idx2.py\nbin_idx = np.searchsorted(bin_edges, x) - 1\n\n\n\u3067\u3082\u540c\u69d8\u306a\u3053\u3068\u304c\u3067\u304d\u308b (thanks to termoshtt)\u3002\n\u8ffd\u8a18(2017/01/02):\n\u3055\u3089\u306b\n\nget_bin_idx3.py\nbin_idx = np.digitize(x, bin_edges) - 1\n\n\n\u3067\u3082\u540c\u69d8\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u5b9f\u969b\u3001Numpy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001np.digitize()\u306e\u5b9f\u88c5\u306fnp.searchsorted()\u305d\u306e\u3082\u306e\u3089\u3057\u3044\u3002\n\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u5358\u306b\u3001np.digitize(x, bin_edges)\u3067\u306f\u300cx\u306e\u5404\u8981\u7d20\u3092\u3092bin_edges\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30d3\u30f3\u306b\u632f\u308a\u5206\u3051\u305f\u3068\u304d\u306e\u30d3\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u7528\u9014\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u4e00\u65b9\u3001np.searchsorted(y, x)\u3067\u306f\u300c\u30bd\u30fc\u30c8\u6e08\u307f\u306e\u914d\u5217y\u306bx\u306e\u5404\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u969b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u7528\u9014\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3060\u3051\u306e\u3088\u3046\u3060\u3002\n\n\u4f8b\n\u9069\u5f53\u306a\u30d3\u30f3\u3092\u4e71\u6570\u3067\u4f5c\u308b\n\ngen_bins.py\nbin_edges = np.hstack(([0., 1.], np.random.rand(9)))\nbin_edges.sort()\n\n\n0 < x < 1 \u306e\u5024\u3068\u30d3\u30f3\u306e\u95a2\u4fc2\u3092\u56f3\u793a\u3059\u308b\u3068\n\nplot_bins.py\nplt.step(bin_edges, np.arange(len(bin_edges)), where='post')\nplt.ylim(-0.5, 9.5)\nplt.xlabel('x')\nplt.ylabel('Bin index')\n\n\n\n\u9069\u5f53\u306a x \u306b\u5bfe\u3057\u3066\u3001\u3069\u306e\u30d3\u30f3\u306b\u5165\u308b\u304b\u3092\u77e5\u308b\u306b\u306f\n\nget_and_plot_bin_idx.py\nx = np.random.rand()\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\nplt.axvline(x, c='r')\nplt.axhline(bin_idx, c='r')\n\n\n\n\u3082\u3046\u4e00\u5ea6\u3001\u5225\u306e x \u3067\n\nget_and_plot_bin_idx_again.py\nx = np.random.rand()\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\nplt.axvline(x, c='g')\nplt.axhline(bin_idx, c='g')\n\n\n\n\u4ee5\u4e0a\u3002\n#\u307e\u3068\u3081\n\u30d3\u30f3\u306e\u533a\u5207\u308a\u5024\u304c `ndarray: bin_edges` \u306b\u6607\u9806\u3067\u5165\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u5024 `x` \u304c\u3069\u306e\u30d3\u30f3\u306b\u5165\u308b\u304b\u306f\n\n```get_bin_idx.py\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\n```\n\n\u3067\u5f97\u3089\u308c\u308b\u3002\n\n\u8ffd\u8a18(2016/03/16)\uff1a\n\n```get_bin_idx2.py\nbin_idx = np.searchsorted(bin_edges, x) - 1\n```\n\n\u3067\u3082\u540c\u69d8\u306a\u3053\u3068\u304c\u3067\u304d\u308b (thanks to termoshtt)\u3002\n\n\u8ffd\u8a18(2017/01/02):\n\u3055\u3089\u306b\n\n```get_bin_idx3.py\nbin_idx = np.digitize(x, bin_edges) - 1\n```\n\n\u3067\u3082\u540c\u69d8\u306a\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\u5b9f\u969b\u3001Numpy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u3088\u308b\u3068\u3001`np.digitize()`\u306e\u5b9f\u88c5\u306f`np.searchsorted()`\u305d\u306e\u3082\u306e\u3089\u3057\u3044\u3002\n\u3053\u308c\u3089\u306e\u9055\u3044\u306f\u5358\u306b\u3001`np.digitize(x, bin_edges)`\u3067\u306f\u300c`x`\u306e\u5404\u8981\u7d20\u3092\u3092`bin_edges`\u3067\u5b9a\u7fa9\u3055\u308c\u308b\u30d3\u30f3\u306b\u632f\u308a\u5206\u3051\u305f\u3068\u304d\u306e\u30d3\u30f3\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u7528\u9014\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u4e00\u65b9\u3001`np.searchsorted(y, x)`\u3067\u306f\u300c\u30bd\u30fc\u30c8\u6e08\u307f\u306e\u914d\u5217`y`\u306b`x`\u306e\u5404\u8981\u7d20\u3092\u633f\u5165\u3059\u308b\u969b\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u6c42\u3081\u308b\u300d\u3068\u3044\u3046\u7528\u9014\u304c\u60f3\u5b9a\u3055\u308c\u3066\u3044\u308b\u3001\u3068\u3044\u3046\u3060\u3051\u306e\u3088\u3046\u3060\u3002\n\n#\u4f8b\n\u9069\u5f53\u306a\u30d3\u30f3\u3092\u4e71\u6570\u3067\u4f5c\u308b\n\n```gen_bins.py\nbin_edges = np.hstack(([0., 1.], np.random.rand(9)))\nbin_edges.sort()\n```\n\n0 < x < 1 \u306e\u5024\u3068\u30d3\u30f3\u306e\u95a2\u4fc2\u3092\u56f3\u793a\u3059\u308b\u3068\n\n```plot_bins.py\nplt.step(bin_edges, np.arange(len(bin_edges)), where='post')\nplt.ylim(-0.5, 9.5)\nplt.xlabel('x')\nplt.ylabel('Bin index')\n```\n\n![bins.png](https://qiita-image-store.s3.amazonaws.com/0/68258/3d0a81b3-d9c8-4575-d41b-6ec85fe98f99.png)\n\n\u9069\u5f53\u306a x \u306b\u5bfe\u3057\u3066\u3001\u3069\u306e\u30d3\u30f3\u306b\u5165\u308b\u304b\u3092\u77e5\u308b\u306b\u306f\n\n```get_and_plot_bin_idx.py\nx = np.random.rand()\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\nplt.axvline(x, c='r')\nplt.axhline(bin_idx, c='r')\n```\n\n![bins2.png](https://qiita-image-store.s3.amazonaws.com/0/68258/b2e56319-d690-0afc-27a8-018f5e18533c.png)\n\n\u3082\u3046\u4e00\u5ea6\u3001\u5225\u306e x \u3067\n\n```get_and_plot_bin_idx_again.py\nx = np.random.rand()\nbin_idx = np.where((bin_edges[:-1] <= x) & (x < bin_edges[1:]))[0][0]\nplt.axvline(x, c='g')\nplt.axhline(bin_idx, c='g')\n```\n\n![bins3.png](https://qiita-image-store.s3.amazonaws.com/0/68258/13ae9aa9-940c-5e89-5057-55842e721705.png)\n\n\u4ee5\u4e0a\u3002\n", "tags": ["Python", "numpy"]}