{"tags": ["Unity", "Shader"], "context": "\u826f\u3044\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u8a66\u3057\u3066\u898b\u308b\nhttp://www.jonki.net/entry/20140215\n\n\u30b3\u30fc\u30c9\n\nShader\nShader \"Custom/TestShader\" {\n    Properties {\n        _HolePos(\"HolePos\",vector) = (1,1,1,1)\n        _HoleSize(\"HoleSize\",Range(0,10)) = 1\n        _BlurThick(\"BlurThick\",Range(0,10)) = 1\n        _MainColor(\"MainColor\",Color) = (1,1,1,1)\n    }\n\n    SubShader {\n        Tags {\"Queue\" = \"Transparent\" \"RenderType\" = \"Transparent\"}\n        ZWrite On\n        ZTest LEqual\n        Blend SrcAlpha OneMinusSrcAlpha\n\n        Pass {\n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n\n            uniform float _HoleSize;\n            uniform float4 _HolePos;\n            uniform float _BlurThick;\n            uniform float4 _MainColor;\n\n\n\n            struct v2f {\n                float4 wPos : SV_POSITION;\n                float2 uv : TEXCOORD0;\n            };\n\n            v2f vert(float4 pos : POSITION ,float2 uv : TEXCOORD0) {\n                v2f output;\n                output.wPos = mul(UNITY_MATRIX_MVP,pos);\n                output.uv = uv;\n                return output;\n            }\n\n            float4 frag(v2f input) : SV_TARGET {\n                half4 col = _MainColor;\n                float2 pos = input.uv;\n\n                float dist = distance(pos, float2(_HolePos.x, _HolePos.y));\n                if(dist < _HoleSize) {\n                    clip(-1.0);\n                } else if(dist < _HoleSize + _BlurThick){\n                    col.a = (dist - _HoleSize) * 10.0;\n                    col.a = pow(col.a, 2.0);\n                }\n\n                return col;\n            }\n\n            ENDCG\n        }\n    }\n}\n\n\n\nScript\nusing UnityEngine;\nusing System.Collections;\n\npublic class ShaderScript : MonoBehaviour\n{\n    // Use this for initialization\n    void Start()\n    {\n\n    }\n\n    // Update is called once per frame\n    void Update()\n    {\n        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\n        RaycastHit hitInfo;\n        if (Physics.Raycast(ray, out hitInfo))\n        {\n            Renderer renderer = hitInfo.transform.GetComponent<Renderer>();\n            if (renderer)\n            {\n                renderer.material.SetVector(\"_HolePos\", hitInfo.textureCoord);    \n            }\n\n        }\n    }\n}\n\n\n\u7d50\u679c:\n\n\u5909\u3048\u305f\u3068\u3053\u308d\nRay\u3092\u6295\u3052\u3066\u5f53\u305f\u3063\u305f\u3068\u3053\u308d\u306eTEXCOORD\u3092HolePos\u306b\u5165\u308c\u305f\u3002\u753b\u9762\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u305b\u305a\u3001\u898b\u305f\u76ee\u901a\u308a\u306e\u4f4d\u7f6e\u306b\u7a74\u304c\u958b\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n\u826f\u3044\u8a18\u4e8b\u3092\u898b\u3064\u3051\u305f\u306e\u3067\u8a66\u3057\u3066\u898b\u308b\nhttp://www.jonki.net/entry/20140215\n\n##\u30b3\u30fc\u30c9\n\n```lang:Shader\nShader \"Custom/TestShader\" {\n\tProperties {\n\t\t_HolePos(\"HolePos\",vector) = (1,1,1,1)\n\t\t_HoleSize(\"HoleSize\",Range(0,10)) = 1\n\t\t_BlurThick(\"BlurThick\",Range(0,10)) = 1\n\t\t_MainColor(\"MainColor\",Color) = (1,1,1,1)\n\t}\n\n\tSubShader {\n\t\tTags {\"Queue\" = \"Transparent\" \"RenderType\" = \"Transparent\"}\n\t\tZWrite On\n\t\tZTest LEqual\n\t\tBlend SrcAlpha OneMinusSrcAlpha\n\n\t\tPass {\n\t\t\tCGPROGRAM\n\t\t\t#pragma vertex vert\n\t\t\t#pragma fragment frag\n\n\t\t\tuniform float _HoleSize;\n\t\t\tuniform float4 _HolePos;\n\t\t\tuniform float _BlurThick;\n\t\t\tuniform float4 _MainColor;\n\n\n\n\t\t\tstruct v2f {\n\t\t\t\tfloat4 wPos : SV_POSITION;\n\t\t\t\tfloat2 uv : TEXCOORD0;\n\t\t\t};\n\n\t\t\tv2f vert(float4 pos : POSITION ,float2 uv : TEXCOORD0) {\n\t\t\t\tv2f output;\n\t\t\t\toutput.wPos = mul(UNITY_MATRIX_MVP,pos);\n\t\t\t\toutput.uv = uv;\n\t\t\t\treturn output;\n\t\t\t}\n\n\t\t\tfloat4 frag(v2f input) : SV_TARGET {\n\t\t\t\thalf4 col = _MainColor;\n\t\t\t\tfloat2 pos = input.uv;\n\n\t\t\t\tfloat dist = distance(pos, float2(_HolePos.x, _HolePos.y));\n\t\t\t\tif(dist < _HoleSize) {\n\t\t\t\t\tclip(-1.0);\n\t\t\t\t} else if(dist < _HoleSize + _BlurThick){\n\t\t\t\t\tcol.a = (dist - _HoleSize) * 10.0;\n\t\t\t\t\tcol.a = pow(col.a, 2.0);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn col;\n\t\t\t}\n\n\t\t\tENDCG\n\t\t}\n\t}\n}\n```\n\n```lang:Script\nusing UnityEngine;\nusing System.Collections;\n\npublic class ShaderScript : MonoBehaviour\n{\n    // Use this for initialization\n    void Start()\n    {\n\t\n    }\n\t\n    // Update is called once per frame\n    void Update()\n    {\n        Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);\n        RaycastHit hitInfo;\n        if (Physics.Raycast(ray, out hitInfo))\n        {\n            Renderer renderer = hitInfo.transform.GetComponent<Renderer>();\n            if (renderer)\n            {\n                renderer.material.SetVector(\"_HolePos\", hitInfo.textureCoord);    \n            }\n\n        }\n    }\n}\n```\n\n\u7d50\u679c:\n<img width=\"319\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-23 20.22.27.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/67575/75e7bff9-196f-6d54-7fa6-ec290b28a034.png\">\n\n\u5909\u3048\u305f\u3068\u3053\u308d\nRay\u3092\u6295\u3052\u3066\u5f53\u305f\u3063\u305f\u3068\u3053\u308d\u306eTEXCOORD\u3092HolePos\u306b\u5165\u308c\u305f\u3002\u753b\u9762\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u305b\u305a\u3001\u898b\u305f\u76ee\u901a\u308a\u306e\u4f4d\u7f6e\u306b\u7a74\u304c\u958b\u304f\u3088\u3046\u306b\u306a\u3063\u305f\u3002\n"}