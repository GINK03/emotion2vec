{"context": " More than 1 year has passed since last update.CocoaPods\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u30a2\u30d7\u30ea\u5074\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c1:1\u306e\u5834\u5408\u306f\u3001\u7279\u306b\u4f55\u3082\u8a2d\u5b9a\u305b\u305a\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\n\u30a2\u30d7\u30ea\u5074\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c1:\u591a\u306e\u5834\u5408\u306f\u3001\u30a2\u30d7\u30ea\u5074\u306ebuild_configurations\u306b\u3069\u308c\u304b\uff11\u3064\u306ePods\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u8a2d\u5b9a\u3057\u304b\u66f8\u304d\u8fbc\u307e\u308c\u306a\u3044\u305f\u3081\u3001\nPods\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u3044\u304f\u3064\u304b\u5206\u5272\u3057\u3066\u3044\u308b\u5834\u5408\u9762\u5012\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u4f8b\n\u4f8b\u3048\u3070\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001\n\nglobal context(target\u3067\u56f2\u307e\u308c\u3066\u3044\u306a\u3044\u7b87\u6240)\u306f\u3001\u30a2\u30d7\u30ea(Dev, AdHoc, Production, Unittest)\u5171\u901a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u8a66\u9a13\u5c0e\u5165\u7684\u306a\u610f\u5473\u3067\"Experimental\"\u3068\u3044\u3046target\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u306b\u304a\u8a66\u3057\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u30b5\u30fc\u30d0API\u3068\u306e\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u30a2\u30d7\u30ea\u3067\u3001\u307e\u3060API\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3089\"Temporary\"\u3068\u3044\u3046target\u3092\u4f5c\u3063\u3066\u3001Mock/Stub\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4e00\u6642\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nUnittest\u3060\u3051\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\uff11\u3064\u306e\u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5927\u3057\u3066\u3001Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u8907\u6570\u5b58\u5728\u3057\u305f\u5834\u5408\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u304c\u3001\nbuild_settings\u3084font\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306f\u3001\u3069\u308c\u304b\uff11\u3064\u306ePods\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u3082\u306e\u3057\u304b\u8a2d\u5b9a\u3057\u306a\u3044\u305f\u3081\n\"Experimental\"\u306bfont\u30d5\u30a1\u30a4\u30eb\u304c\u3075\u304f\u307e\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u3092\u30b3\u30d4\u30fc\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306b\u3082\u95a2\u308f\u3089\u305a\u30b3\u30d4\u30fc\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u9665\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3001post_install\u3092\u5229\u7528\u3057\u3066\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306b\u3001\u81ea\u524d\u3067Xcode\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\nPodfile\nrequire './lib/helpers/pod_app_helper'  # \u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306excconfig\u3084\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\n\nplatform :ios, '7.0'\n\nAPP_TARGGETS = %w[MyApp MyAppAdHoc MyAppProd]\nTESTING_TARGETS = %w[MyAppTests MyAppUITests]\nALL_TARGETS = APP_TARGGETS + TESTING_TARGETS\n\npod_lib_installer = Proc.new do |name, pod_args|\n  args = [name.to_s, pod_args].compact\n  pod(*args)\nend\n\n\nlink_with ALL_TARGETS\n\n# \u5171\u901a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\npod 'Facebook-iOS-SDK', '3.16.1'\npod 'AFNetworking', '2.3.1'\npod 'SDWebImage', '3.7.1'\npod 'Underscore.m', '~> 0.2.1'\npod 'UICKeyChainStore', '~> 1.0.5'\n\n# AdHoc\u306e\u307f\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppAdHoc\", :exclusive => true do\n   pod 'TestFlightSDK', '~> 3.0.2'\nend\n\n# \u304a\u8a66\u3057\u3067\u5b9f\u9a13\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"Experimental\", :exclusive => true do\n  link_with ALL_TARGETS\n  pod 'FontAwesomeKit', '~> 2.1.7'  # \u30e9\u30a4\u30d6\u30e9\u30ea\u306bFont\u30d5\u30a1\u30a4\u30eb\u304c\u3075\u304f\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u30ea\u30bd\u30fc\u30b9\u306e\u30b3\u30d4\u30fc\u304c\u5fc5\u8981\nend\n\n# \u30b5\u30fc\u30d0\u5074\u672a\u5b9f\u88c5\u306e\u90e8\u5206\u304c\u3042\u3063\u3066\u3001API\u306estub/mock\u3068\u304b\u4e00\u6642\u7684\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\ntarget \"Temporary\", :exclusive => true do\n  link_with APP_TARGETS - %w[MyAppProd]\n  pod 'OHHTTPStubs', '~> 3.1.4'\nend\n\ntest_libs = {\n  'TKRGuard' => '~> 1.0.2',\n  'OCMock' => '~> 3.0.2',\n  'OHHTTPStubs' => '~> 3.1.4'\n}\n\n# Unittest\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppTests\", :exclusive => true do\n  test_libs.each(&pod_lib_installer)\nend\n\n# UITest\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppUITests\", :exclusive => true do\n  test_libs.each(&pod_lib_installer)\n  pod 'KIF', '~> 3.0'\nend\n\npost_install do |installer|\n  # Copy Pods Resources\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u8ffd\u52a0\u3084xcconfig\u8ffd\u52a0\u306e\u51e6\u7406\u3092\u8ffd\u52a0\n  self.extend(Pod::AppHelper)\n\n  # \u30a2\u30d7\u30ea\u5074\u306excode project\u3092\u958b\u304f\n  Xcodeproj::Project.open(*Dir.glob('*.xcodeproj')).tap do |project|\n    project.targets.each do |target|\n      # CocoaPods\u304c\u3069\u308c\u304b\u3072\u3068\u3064Pod target\u306eresources\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308bdefault\u306e`Copy Pods resources`\u306f\u5f79\u306b\u305f\u305f\u306a\u3044\u306e\u3067\u524a\u9664\n      target.shell_script_build_phases.each do |phase|\n        phase.remove_from_project if phase.name == 'Copy Pods Resources'\n      end\n\n      # \u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306bxcconfig\u3092\u8a2d\u5b9a\u3057\u3001\u4f7f\u7528\u3059\u308bPods\u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u30b3\u30d4\u30fc\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\n      if target.name == \"MyApp\"\n        pod_target_names = ['', 'Experimental', 'Temporary']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-dev.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppAdHoc\"\n        pod_target_names = ['', 'Experimental', 'Temporary', 'MyAppAdHoc']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-AdHoc.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppProd\"\n        pod_target_names = ['', 'Experimental']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-Prod.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppTests\"\n        pod_target_names = ['', 'Experimental', 'MyAppTests']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/LogicTests.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppUITests\"\n        pod_target_names = ['', 'Experimental', 'MyAppUITests']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/UITests.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      end\n\n      # preprocessor macro\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3082\u3053\u3053\u3067\n      if TESTING_TARGETS.include?(target.name)\n        target.build_configurations.each do |config|\n          # Define preprocessor\n          if config.name == \"Debug\"\n            preprocessor_definitions = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] || ['$(inherited)']\n            preprocessor_definitions = [preprocessor_definitions] unless preprocessor_definitions.instance_of?(Array)\n            # #define TESTING 1\n            preprocessor_definitions.push('TESTING=1').uniq!\n\n            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = preprocessor_definitions\n          end\n        end\n      end\n    end\n\n    project.save     # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\n  end\nend\n\n\n\npod_app_helper.rb\nmodule Pod\n  module AppHelper\n    # Pods\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bPods\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306e\u30ea\u30bd\u30fc\u30b9\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u767b\u9332\n    def add_extra_copy_pods_resources(target, pod_target_names)\n      # Appends Extra `Copy Pods resources` to target\n      extra_copy_pods_resources = pod_target_names.map {|pod_target_name|\n        script_name = pod_target_name.empty? ? \"Pods-resources.sh\" :\"Pods-#{pod_target_name}-resources.sh\"\n        {\n          :script_name => script_name,\n          :script_build_phase_title => \"Copy Pods Resources(#{script_name})\",\n          :shell_script => \"\\\"${SRCROOT}/Pods/#{script_name}\\\"\"\n        }\n      }.reject {|phase|\n        target.shell_script_build_phases.map {|phase| phase.name }.include?(phase[:script_build_phase_title])\n      }\n      extra_copy_pods_resources.each do |phase|\n        build_phase = target.new_shell_script_build_phase(phase[:script_build_phase_title])\n        build_phase.shell_script = phase[:shell_script]\n      end\n    end\n\n    # Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b`Pods-xxxx.xcconfig`\u3092\u307e\u3068\u3081\u3066\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305fxcconfig\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u767b\u9332\u3059\u308b\n    def replace_project_base_configuration(project, target, config_file_path)\n      config_file = project.files.find {|file| file.path == config_file_path } || project.new_file(config_file_path)\n      target.build_configurations.each do |config|\n        config.base_configuration_reference = config_file\n      end\n    end\n\n    module_function :add_extra_copy_pods_resources, :replace_project_base_configuration\n  end\nend\n\n\n\nApp-dev.xcconfig\n#include \"Pods/Pods.xcconfig\"\n#include \"Pods/Pods-Experimental.xcconfig\"\n#include \"Pods/Pods-Temporary.xcconfig\"\n\n\n\nCocoaPods\u3092\u4f7f\u3063\u3066\u3044\u308b\u3068\u304d\u3001\u30a2\u30d7\u30ea\u5074\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c1:1\u306e\u5834\u5408\u306f\u3001\u7279\u306b\u4f55\u3082\u8a2d\u5b9a\u305b\u305a\u4f7f\u7528\u3067\u304d\u308b\u306e\u3067\u3059\u304c\u3001\n\u30a2\u30d7\u30ea\u5074\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3068Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c1:\u591a\u306e\u5834\u5408\u306f\u3001\u30a2\u30d7\u30ea\u5074\u306ebuild_configurations\u306b\u3069\u308c\u304b\uff11\u3064\u306ePods\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u8a2d\u5b9a\u3057\u304b\u66f8\u304d\u8fbc\u307e\u308c\u306a\u3044\u305f\u3081\u3001\nPods\u306e\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u3044\u304f\u3064\u304b\u5206\u5272\u3057\u3066\u3044\u308b\u5834\u5408\u9762\u5012\u306a\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n## \u4f8b\n\n\u4f8b\u3048\u3070\u3001\u4e0b\u8a18\u306e\u3088\u3046\u306a\u69cb\u6210\u306b\u3057\u3066\u3044\u308b\u5834\u5408\u3001\n\n* global context(target\u3067\u56f2\u307e\u308c\u3066\u3044\u306a\u3044\u7b87\u6240)\u306f\u3001\u30a2\u30d7\u30ea(Dev, AdHoc, Production, Unittest)\u5171\u901a\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* \u8a66\u9a13\u5c0e\u5165\u7684\u306a\u610f\u5473\u3067\"Experimental\"\u3068\u3044\u3046target\u3092\u4f5c\u3063\u3066\u3001\u305d\u3053\u306b\u304a\u8a66\u3057\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* \u30b5\u30fc\u30d0API\u3068\u306e\u901a\u4fe1\u304c\u5fc5\u8981\u306a\u30a2\u30d7\u30ea\u3067\u3001\u307e\u3060API\u304c\u5b9f\u88c5\u3055\u308c\u3066\u3044\u306a\u3044\u304b\u3089\"Temporary\"\u3068\u3044\u3046target\u3092\u4f5c\u3063\u3066\u3001Mock/Stub\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4e00\u6642\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n* Unittest\u3060\u3051\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\uff11\u3064\u306e\u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u5927\u3057\u3066\u3001Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u304c\u8907\u6570\u5b58\u5728\u3057\u305f\u5834\u5408\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u3059\u3079\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u304c\u3001\nbuild_settings\u3084font\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306e\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u306f\u3001\u3069\u308c\u304b\uff11\u3064\u306ePods\u30bf\u30fc\u30b2\u30c3\u30c8\u306e\u3082\u306e\u3057\u304b\u8a2d\u5b9a\u3057\u306a\u3044\u305f\u3081\n\"Experimental\"\u306bfont\u30d5\u30a1\u30a4\u30eb\u304c\u3075\u304f\u307e\u308c\u3066\u3044\u3066\u3001\u305d\u308c\u3092\u30b3\u30d4\u30fc\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u306e\u306b\u3082\u95a2\u308f\u3089\u305a\u30b3\u30d4\u30fc\u3055\u308c\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u306b\u9665\u3063\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u89e3\u6c7a\u3059\u308b\u306b\u306f\u3001`post_install`\u3092\u5229\u7528\u3057\u3066\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u305f\u5f8c\u306b\u3001\u81ea\u524d\u3067Xcode\u306e\u8a2d\u5b9a\u3092\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n\n```ruby:Podfile\nrequire './lib/helpers/pod_app_helper'  # \u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306excconfig\u3084\u30ea\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u306e\u51e6\u7406\n\nplatform :ios, '7.0'\n\nAPP_TARGGETS = %w[MyApp MyAppAdHoc MyAppProd]\nTESTING_TARGETS = %w[MyAppTests MyAppUITests]\nALL_TARGETS = APP_TARGGETS + TESTING_TARGETS\n\npod_lib_installer = Proc.new do |name, pod_args|\n  args = [name.to_s, pod_args].compact\n  pod(*args)\nend\n\n\nlink_with ALL_TARGETS\n\n# \u5171\u901a\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\npod 'Facebook-iOS-SDK', '3.16.1'\npod 'AFNetworking', '2.3.1'\npod 'SDWebImage', '3.7.1'\npod 'Underscore.m', '~> 0.2.1'\npod 'UICKeyChainStore', '~> 1.0.5'\n\n# AdHoc\u306e\u307f\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppAdHoc\", :exclusive => true do\n   pod 'TestFlightSDK', '~> 3.0.2'\nend\n\n# \u304a\u8a66\u3057\u3067\u5b9f\u9a13\u7684\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"Experimental\", :exclusive => true do\n  link_with ALL_TARGETS\n  pod 'FontAwesomeKit', '~> 2.1.7'  # \u30e9\u30a4\u30d6\u30e9\u30ea\u306bFont\u30d5\u30a1\u30a4\u30eb\u304c\u3075\u304f\u307e\u308c\u3066\u3044\u308b\u306e\u3067\u30ea\u30bd\u30fc\u30b9\u306e\u30b3\u30d4\u30fc\u304c\u5fc5\u8981\nend\n\n# \u30b5\u30fc\u30d0\u5074\u672a\u5b9f\u88c5\u306e\u90e8\u5206\u304c\u3042\u3063\u3066\u3001API\u306estub/mock\u3068\u304b\u4e00\u6642\u7684\u306b\u4f7f\u7528\u3059\u308b\u3082\u306e\ntarget \"Temporary\", :exclusive => true do\n  link_with APP_TARGETS - %w[MyAppProd]\n  pod 'OHHTTPStubs', '~> 3.1.4'\nend\n\ntest_libs = {\n  'TKRGuard' => '~> 1.0.2',\n  'OCMock' => '~> 3.0.2',\n  'OHHTTPStubs' => '~> 3.1.4'\n}\n\n# Unittest\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppTests\", :exclusive => true do\n  test_libs.each(&pod_lib_installer)\nend\n\n# UITest\u3067\u4f7f\u7528\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\ntarget \"MyAppUITests\", :exclusive => true do\n  test_libs.each(&pod_lib_installer)\n  pod 'KIF', '~> 3.0'\nend\n\npost_install do |installer|\n  # Copy Pods Resources\u306e\u30b9\u30af\u30ea\u30d7\u30c8\u8ffd\u52a0\u3084xcconfig\u8ffd\u52a0\u306e\u51e6\u7406\u3092\u8ffd\u52a0\n  self.extend(Pod::AppHelper)\n\n  # \u30a2\u30d7\u30ea\u5074\u306excode project\u3092\u958b\u304f\n  Xcodeproj::Project.open(*Dir.glob('*.xcodeproj')).tap do |project|\n    project.targets.each do |target|\n      # CocoaPods\u304c\u3069\u308c\u304b\u3072\u3068\u3064Pod target\u306eresources\u3092\u30b3\u30d4\u30fc\u3057\u3066\u3044\u308bdefault\u306e`Copy Pods resources`\u306f\u5f79\u306b\u305f\u305f\u306a\u3044\u306e\u3067\u524a\u9664\n      target.shell_script_build_phases.each do |phase|\n        phase.remove_from_project if phase.name == 'Copy Pods Resources'\n      end\n\n      # \u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306bxcconfig\u3092\u8a2d\u5b9a\u3057\u3001\u4f7f\u7528\u3059\u308bPods\u30bf\u30fc\u30b2\u30c3\u30c8\u304b\u3089\u30ea\u30bd\u30fc\u30b9\u30b3\u30d4\u30fc\u3092\u5b9f\u884c\u3059\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3059\u308b\n      if target.name == \"MyApp\"\n        pod_target_names = ['', 'Experimental', 'Temporary']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-dev.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppAdHoc\"\n        pod_target_names = ['', 'Experimental', 'Temporary', 'MyAppAdHoc']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-AdHoc.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppProd\"\n        pod_target_names = ['', 'Experimental']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/App-Prod.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppTests\"\n        pod_target_names = ['', 'Experimental', 'MyAppTests']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/LogicTests.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      elsif target.name == \"MyAppUITests\"\n        pod_target_names = ['', 'Experimental', 'MyAppUITests']\n        add_extra_copy_pods_resources(target, pod_target_names)\n        config_file_path = 'etc/UITests.xcconfig'\n        replace_project_base_configuration(project, target, config_file_path)\n      end\n\n      # preprocessor macro\u306e\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3059\u308b\u5834\u5408\u3082\u3053\u3053\u3067\n      if TESTING_TARGETS.include?(target.name)\n        target.build_configurations.each do |config|\n          # Define preprocessor\n          if config.name == \"Debug\"\n            preprocessor_definitions = config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] || ['$(inherited)']\n            preprocessor_definitions = [preprocessor_definitions] unless preprocessor_definitions.instance_of?(Array)\n            # #define TESTING 1\n            preprocessor_definitions.push('TESTING=1').uniq!\n\n            config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] = preprocessor_definitions\n          end\n        end\n      end\n    end\n\n    project.save     # \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4fdd\u5b58\n  end\nend\n```\n\n```pod_app_helper.rb\nmodule Pod\n  module AppHelper\n    # Pods\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u3042\u308bPods\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306e\u30ea\u30bd\u30fc\u30b9\u30b3\u30d4\u30fc\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u30a2\u30d7\u30ea\u30bf\u30fc\u30b2\u30c3\u30c8\u306b\u767b\u9332\n    def add_extra_copy_pods_resources(target, pod_target_names)\n      # Appends Extra `Copy Pods resources` to target\n      extra_copy_pods_resources = pod_target_names.map {|pod_target_name|\n        script_name = pod_target_name.empty? ? \"Pods-resources.sh\" :\"Pods-#{pod_target_name}-resources.sh\"\n        {\n          :script_name => script_name,\n          :script_build_phase_title => \"Copy Pods Resources(#{script_name})\",\n          :shell_script => \"\\\"${SRCROOT}/Pods/#{script_name}\\\"\"\n        }\n      }.reject {|phase|\n        target.shell_script_build_phases.map {|phase| phase.name }.include?(phase[:script_build_phase_title])\n      }\n      extra_copy_pods_resources.each do |phase|\n        build_phase = target.new_shell_script_build_phase(phase[:script_build_phase_title])\n        build_phase.shell_script = phase[:shell_script]\n      end\n    end\n\n    # Pods\u30bf\u30fc\u30b2\u30c3\u30c8\u6bce\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308b`Pods-xxxx.xcconfig`\u3092\u307e\u3068\u3081\u3066\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u305fxcconfig\u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u767b\u9332\u3059\u308b\n    def replace_project_base_configuration(project, target, config_file_path)\n      config_file = project.files.find {|file| file.path == config_file_path } || project.new_file(config_file_path)\n      target.build_configurations.each do |config|\n        config.base_configuration_reference = config_file\n      end\n    end\n\n    module_function :add_extra_copy_pods_resources, :replace_project_base_configuration\n  end\nend\n```\n\n```App-dev.xcconfig\n#include \"Pods/Pods.xcconfig\"\n#include \"Pods/Pods-Experimental.xcconfig\"\n#include \"Pods/Pods-Temporary.xcconfig\"\n```\n", "tags": ["iOS", "CocoaPods", "Xcode"]}