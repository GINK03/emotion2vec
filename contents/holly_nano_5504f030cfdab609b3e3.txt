{"context": " More than 1 year has passed since last update.Cocos Studio\u3067ScrollView\u3092\u914d\u7f6e\u3057\u3066\u307f\u305f\u304c\u3001\u6163\u6027\u306e\u52d5\u304d\u304c\u6c17\u6301\u3061\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u52d5\u304b\u3059\u3002\n\u305f\u3060\u3001\u30d0\u30a6\u30f3\u30c9\u306f\u3067\u304d\u306a\u304f\u306a\u308b\u3002\n\u30bd\u30fc\u30b9\u304c\u7f8e\u3057\u304f\u306a\u3044\u306e\u306f\u60aa\u3057\u304b\u3089\u305a\u3002\u3002\u3002\n\nScrollViewController.cpp\n\n#include \"ScrollViewController.h\"\n\nusing namespace cocos2d;\n\nconst uint32_t ScrollViewController::HISTORY_FRAME = 10;\n\nScrollViewController::ScrollViewController():_target(nullptr),_touchNow(false),_deceleration(defaultDeceleration)\n{\n\n}\nScrollViewController::~ScrollViewController()\n{\n\n}\nvoid ScrollViewController::setTarget(cocos2d::ui::ScrollView* scrollview)\n{\n  _target = scrollview;\n  // \u3082\u3068\u3082\u3068\u306e\u6163\u6027\u306f\u7121\u52b9\u306b\n  _target->setInertiaScrollEnabled(false);\n\n  _target->addTouchEventListener([this](Ref* ref, ui::Widget::TouchEventType type){\n    switch(type)\n    {\n        // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\n      case ui::Widget::TouchEventType::BEGAN:\n        _touchNow = true;\n        _history.clear();\n        _vec = Vec2::ZERO;\n        _posPre = _target->getInnerContainer()->getPosition();\n        break;\n        // \u30bf\u30c3\u30c1\u7d42\u4e86\u6642\n      case ui::Widget::TouchEventType::CANCELED:\n      case ui::Widget::TouchEventType::ENDED:\n        if( _history.size() > 0 ){\n          for( auto& h : _history ){\n            _vec += h;\n          }\n          _vec.x /= _history.size();\n          _vec.y /= _history.size();\n        }\n        _touchNow = false;\n        break;\n      default:\n        break;\n    }\n  });\n\n\n  scheduleUpdate();\n}\n\nvoid ScrollViewController::update(float delta)\n{\n  if( _target == nullptr ){\n    return;\n  }\n  auto innner = _target->getInnerContainer();\n  // \u30bf\u30c3\u30c1\u4e2d\u306f\u52d5\u304d\u306e\u5c65\u6b74\u3092\u8caf\u3081\u308b\n  if( _touchNow ){\n    auto now = innner->getPosition();\n    auto vec = now - _posPre;\n    _history.push_back(vec);\n    while(_history.size()>HISTORY_FRAME){\n      _history.pop_front();\n    }\n    _posPre = now;\n  }\n  // \u30bf\u30c3\u30c1\u4e2d\u3058\u3083\u306a\u304b\u3063\u305f\u3089\u52d5\u304b\u3059\n  else{\n    auto now = innner->getPosition();\n    auto pos = now + _vec;\n    auto szLimit = _target->getInnerContainerSize();\n    auto szTarget = _target->getContentSize();\n    szLimit.width -= szTarget.width;\n    szLimit.height -= szTarget.height;\n\n    if( pos.y > 0 ){\n      pos.y = 0;\n    }\n    if( pos.y < -szLimit.height ){\n      pos.y = -szLimit.height;\n    }\n    if( pos.x > 0 ){\n      pos.x = 0;\n    }\n    if( pos.x < -szLimit.width ){\n      pos.x = -szLimit.width;\n    }\n    _vec = pos - now;\n    innner->setPosition(pos);\n    _deceleration(_vec);\n  }\n}\n\nvoid ScrollViewController::defaultDeceleration(cocos2d::Vec2& vec)\n{\n  vec *= 0.95f;\n  if( fabs(vec.x) < 0.1f && fabs(vec.y) < 0.1f ){\n    vec = Vec2::ZERO;\n  }\n}\n\n\n\n\nScrollViewController.h\n\n#ifndef __ScrollViewController_H__\n#define __ScrollViewController_H__\n#include \"cocos2d.h\"\n#include <ui/UIScrollView.h>\n#include <deque>\n\nclass ScrollViewController : public cocos2d::Node\n{\n  ScrollViewController();\n  ~ScrollViewController();\npublic:\n\n  CREATE_FUNC(ScrollViewController);\n  void setTarget(cocos2d::ui::ScrollView* scrollview);\n  virtual void update(float delta);\n  void setDeceleration(std::function<void(cocos2d::Vec2& vec)> dec){\n    _deceleration = dec;\n  }\n\nprivate:\n  cocos2d::ui::ScrollView* _target;\n  bool _touchNow;\n  cocos2d::Vec2 _vec;\n  cocos2d::Vec2 _posPre;\n  std::deque<cocos2d::Vec2> _history;\n  static const uint32_t HISTORY_FRAME;\n  std::function<void(cocos2d::Vec2& vec)> _deceleration;\n  static void defaultDeceleration(cocos2d::Vec2& vec);\n\n};\n#endif\n\n\n\n\n\u4f7f\u3044\u65b9\u306f\n\nFooScene.cpp\n\n  auto scrollview = (ui::ScrollView*)_node->getChildByName(\"scrollview\");\n\n  auto ctrl = ScrollViewController::create();\n  ctrl->setTarget(scrollview);\n  _node->addChild(ctrl);\n\n\n\nScene\u306baddChild()\u3057\u3066\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u306e\u7ba1\u7406\u3067\u304d\u308b\u304b\u3089\u3001cocos2d::Node\u304b\u3089\u7d99\u627f\u3057\u3066\u3044\u308b\u304c\u3001\u7279\u306b\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u3002\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f\u3053\u3061\u3089\nCocos Studio\u3067ScrollView\u3092\u914d\u7f6e\u3057\u3066\u307f\u305f\u304c\u3001\u6163\u6027\u306e\u52d5\u304d\u304c\u6c17\u6301\u3061\u3088\u304f\u306a\u3044\u306e\u3067\u3001\u81ea\u5206\u3067\u52d5\u304b\u3059\u3002\n\u305f\u3060\u3001\u30d0\u30a6\u30f3\u30c9\u306f\u3067\u304d\u306a\u304f\u306a\u308b\u3002\n\u30bd\u30fc\u30b9\u304c\u7f8e\u3057\u304f\u306a\u3044\u306e\u306f\u60aa\u3057\u304b\u3089\u305a\u3002\u3002\u3002\n\n```cpp:ScrollViewController.cpp\n\n#include \"ScrollViewController.h\"\n\nusing namespace cocos2d;\n\nconst uint32_t ScrollViewController::HISTORY_FRAME = 10;\n\nScrollViewController::ScrollViewController():_target(nullptr),_touchNow(false),_deceleration(defaultDeceleration)\n{\n  \n}\nScrollViewController::~ScrollViewController()\n{\n  \n}\nvoid ScrollViewController::setTarget(cocos2d::ui::ScrollView* scrollview)\n{\n  _target = scrollview;\n  // \u3082\u3068\u3082\u3068\u306e\u6163\u6027\u306f\u7121\u52b9\u306b\n  _target->setInertiaScrollEnabled(false);\n  \n  _target->addTouchEventListener([this](Ref* ref, ui::Widget::TouchEventType type){\n    switch(type)\n    {\n        // \u30bf\u30c3\u30c1\u958b\u59cb\u6642\n      case ui::Widget::TouchEventType::BEGAN:\n        _touchNow = true;\n        _history.clear();\n        _vec = Vec2::ZERO;\n        _posPre = _target->getInnerContainer()->getPosition();\n        break;\n        // \u30bf\u30c3\u30c1\u7d42\u4e86\u6642\n      case ui::Widget::TouchEventType::CANCELED:\n      case ui::Widget::TouchEventType::ENDED:\n        if( _history.size() > 0 ){\n          for( auto& h : _history ){\n            _vec += h;\n          }\n          _vec.x /= _history.size();\n          _vec.y /= _history.size();\n        }\n        _touchNow = false;\n        break;\n      default:\n        break;\n    }\n  });\n  \n  \n  scheduleUpdate();\n}\n\nvoid ScrollViewController::update(float delta)\n{\n  if( _target == nullptr ){\n    return;\n  }\n  auto innner = _target->getInnerContainer();\n  // \u30bf\u30c3\u30c1\u4e2d\u306f\u52d5\u304d\u306e\u5c65\u6b74\u3092\u8caf\u3081\u308b\n  if( _touchNow ){\n    auto now = innner->getPosition();\n    auto vec = now - _posPre;\n    _history.push_back(vec);\n    while(_history.size()>HISTORY_FRAME){\n      _history.pop_front();\n    }\n    _posPre = now;\n  }\n  // \u30bf\u30c3\u30c1\u4e2d\u3058\u3083\u306a\u304b\u3063\u305f\u3089\u52d5\u304b\u3059\n  else{\n    auto now = innner->getPosition();\n    auto pos = now + _vec;\n    auto szLimit = _target->getInnerContainerSize();\n    auto szTarget = _target->getContentSize();\n    szLimit.width -= szTarget.width;\n    szLimit.height -= szTarget.height;\n    \n    if( pos.y > 0 ){\n      pos.y = 0;\n    }\n    if( pos.y < -szLimit.height ){\n      pos.y = -szLimit.height;\n    }\n    if( pos.x > 0 ){\n      pos.x = 0;\n    }\n    if( pos.x < -szLimit.width ){\n      pos.x = -szLimit.width;\n    }\n    _vec = pos - now;\n    innner->setPosition(pos);\n    _deceleration(_vec);\n  }\n}\n\nvoid ScrollViewController::defaultDeceleration(cocos2d::Vec2& vec)\n{\n  vec *= 0.95f;\n  if( fabs(vec.x) < 0.1f && fabs(vec.y) < 0.1f ){\n    vec = Vec2::ZERO;\n  }\n}\n\n```\n\n```cpp:ScrollViewController.h\n\n#ifndef __ScrollViewController_H__\n#define __ScrollViewController_H__\n#include \"cocos2d.h\"\n#include <ui/UIScrollView.h>\n#include <deque>\n\nclass ScrollViewController : public cocos2d::Node\n{\n  ScrollViewController();\n  ~ScrollViewController();\npublic:\n\n  CREATE_FUNC(ScrollViewController);\n  void setTarget(cocos2d::ui::ScrollView* scrollview);\n  virtual void update(float delta);\n  void setDeceleration(std::function<void(cocos2d::Vec2& vec)> dec){\n    _deceleration = dec;\n  }\n\nprivate:\n  cocos2d::ui::ScrollView* _target;\n  bool _touchNow;\n  cocos2d::Vec2 _vec;\n  cocos2d::Vec2 _posPre;\n  std::deque<cocos2d::Vec2> _history;\n  static const uint32_t HISTORY_FRAME;\n  std::function<void(cocos2d::Vec2& vec)> _deceleration;\n  static void defaultDeceleration(cocos2d::Vec2& vec);\n  \n};\n#endif\n\n\n```\n\n\u4f7f\u3044\u65b9\u306f\n\n```cpp:FooScene.cpp\n\n  auto scrollview = (ui::ScrollView*)_node->getChildByName(\"scrollview\");\n\n  auto ctrl = ScrollViewController::create();\n  ctrl->setTarget(scrollview);\n  _node->addChild(ctrl);\n\n```\n\nScene\u306baddChild()\u3057\u3066\u53c2\u7167\u30ab\u30a6\u30f3\u30bf\u306e\u7ba1\u7406\u3067\u304d\u308b\u304b\u3089\u3001cocos2d::Node\u304b\u3089\u7d99\u627f\u3057\u3066\u3044\u308b\u304c\u3001\u7279\u306b\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u3002\n\n\u682a\u5f0f\u4f1a\u793e\u30ca\u30ce\u30b3\u30cd\u30af\u30c8\u3067\u306f\u30af\u30ea\u30a8\u30a4\u30c6\u30a3\u30d6\u306a\u958b\u767a\u8005\u3092\u52df\u96c6\u4e2d\u3067\u3059\uff01\u304f\u308f\u3057\u304f\u306f[\u3053\u3061\u3089](http://www.nanoconnect.co.jp/recruit/)\n", "tags": ["cocos2d-x"]}