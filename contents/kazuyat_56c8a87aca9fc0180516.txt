{"context": "\u524d\u56de\u306fcurl\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u76f4\u63a5API\u3092\u53e9\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306fRuby\u304b\u3089API\u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\nRuby\u3067HTTP(S\uff09\u306e\u901a\u4fe1\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u306f\u8272\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u57fa\u672c\u3068\u3044\u3046\u3053\u3068\u3067net/http(s)\u3092\u4f7f\u3044\u307e\u3059\u3002\u3076\u3063\u3061\u3083\u3051\u3001API\u3092\u53e9\u304f\u306a\u3089\u3082\u3063\u3068\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u2026\u3002\n\nDroplet\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\n\u307e\u305a\u306f\u3044\u3064\u3082\u306e\u3092\u3084\u308a\u307e\u3059\u3002\n\ndo_listdroplet.rb\nrequire 'net/https'\nrequire 'uri'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Get.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg\nputs res.body\n\n\nGET\u306e\u3068\u304d\u306f\u3042\u307e\u308a\u30dd\u30a4\u30f3\u30c8\u304c\u306a\u3044\uff1f\u306e\u3067\u3059\u304c\u3001API\u306f\u305f\u3044\u3066\u3044SSL\u306a\u306e\u3067net/https\u3092require\u3057\u305f\u4e0a\u3067\u3001SSL\u3092\u4f7f\u3046\u3068\u304d\u306e\u304a\u7d04\u675f\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3001\u307e\u305fDigitalOcean\u306b\u9650\u3089\u305aAPI\u3092\u53e9\u304f\u5834\u5408\u3001\u30d8\u30c3\u30c0\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u969b\u306b\u3064\u3051\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u307e\u307e\u3060\u3068res.body\u306bjson\u5f62\u5f0f\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u307e\u308b\u3054\u3068\u5165\u3063\u305f\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001Ruby\u4e0a\u3067\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306bparse\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\ndo_listdroplets2.rb\nrequire 'net/https'\nrequire 'uri'\nrequire 'json'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Get.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg\napi_response = JSON.parse(res.body)\napi_response['droplets'].each do |item|\n  puts item['name'], item['disk'], item['memory']\nend\n\n\nAPI\u30ec\u30b9\u30dd\u30f3\u30b9\u304cRuby\u306ehash\u306b\u30d1\u30fc\u30b9\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u4e2d\u304b\u3089\u4efb\u610f\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\nPOST\u3057\u3066\u307f\u308b\n\u524d\u56decurl\u3067\u884c\u3063\u305fDroplet\u4f5c\u6210\u3092net/http\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\ndo_createdroplet.rb\nrequire 'net/https'\nrequire 'uri'\nrequire 'json'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Post.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\nreq[\"Content-Type\"] = \"application/json\"\n\ndata = {\n    \"name\" => \"testserver\",\n    \"region\" => \"sgp1\",\n    \"size\" => \"512MB\",\n    \"image\" => \"ubuntu-14-04-x64\",\n    \"ipv6\" => \"false\"\n}.to_json\n\nreq.body = data\nres = http.request(req)\n\nputs res.code, res.msg, res.body\n\n\n\u4e0a\u534a\u5206\u306f\u3055\u3063\u304d\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u306d\u3002\nreq\u3092POST\u3068\u3057\u3066\u751f\u6210\u3057\u305f\u306e\u3068\u3001POST\u3059\u308b\u5185\u5bb9\u3092hash\u3067\u4f5c\u3063\u3066\u304a\u3044\u3066\u3001json\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u30dd\u30a4\u30f3\u30c8\u304b\u3068\u601d\u3044\u307e\u3059(\u307e\u3041\u3001\u79c1\u3082100\uff05\u53d7\u3051\u58f2\u308a\u3067\u3059\u304c)\u3002\u307e\u305fPOST\u306e\u4e2d\u8eab\u304cJSON\u306a\u306e\u3067\u3001\u5fc5\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306bContent-Type\u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\ncurl\u306e\u5834\u5408\u3001\u3057\u3093\u3069\u3044\u306e\u304cPOST\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3067JSON\u3092\u624b\u66f8\u304d\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u306a\u306e\u3067\u3001\u3053\u3053\u304c\u591a\u5c11\u306a\u308a\u3068\u3082\u8a18\u8ff0\u3057\u3084\u3059\u3044\u5f62\u306b\u306a\u308b\u306e\u306f\u975e\u5e38\u306b\u3042\u308a\u304c\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\nDelete\u3057\u3066\u307f\u308b\n\u4eca\u56de\u3082\u3001\u6700\u5f8c\u306f\u524a\u9664\u3067\u3059\u3002\n\u672c\u6765\u306fID\u3092\u4f55\u3089\u304b\u306e\u65b9\u6cd5\u3067\u7279\u5b9a\u3059\u308b(ARGV\u3067\u7a81\u3063\u8fbc\u3080\u3068\u304b)\u3059\u308b\u306e\u304c\u30df\u30bd\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3055\u3063\u304d\u4f5c\u3063\u305fDroplet\u306eID\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\ndo_delete_droplet.rb\nrequire 'net/https'\nrequire 'uri'\n\ndroplet_id = '28670468'\n\ndroplet_ep = \"https://api.digitalocean.com/v2/droplets/#{droplet_id}\"\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Delete.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg, res.body\n\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u5148\u306bID\u3092\u57cb\u3081\u8fbc\u3093\u3058\u3083\u3063\u3066\u307e\u3059\u3002\n\u767a\u884c\u3059\u308b\u3068204 no content\u304c\u8fd4\u3063\u3066\u304d\u3066\u3001Droplet\u306f\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002\n\n\u3082\u3063\u3068\u697d\u3057\u3066\u3044\u3044\u304b\u306a\n\u4eca\u56de\u306f\u3042\u3048\u3066net/http\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u5192\u982d\u89e6\u308c\u305f\u3068\u304a\u308aRuby\u306b\u306f\u3082\u3063\u3068\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3044\u3063\u3071\u3044\u3042\u308a\u307e\u3059\u3057\u3001\u5f53\u306eDigitalOcean\u516c\u5f0fSDK\u306ffaraday\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u3001\u305d\u308c\u3089\u3082\u6398\u308a\u4e0b\u3052\u3066\u3044\u304d\u305f\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n[\u524d\u56de](http://qiita.com/kazuyat/items/ca4ba93efd3e730a49ac)\u306fcurl\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u76f4\u63a5API\u3092\u53e9\u304d\u307e\u3057\u305f\u3002\u4eca\u56de\u306fRuby\u304b\u3089API\u3092\u53e9\u3044\u3066\u307f\u307e\u3059\u3002\n\nRuby\u3067HTTP(S\uff09\u306e\u901a\u4fe1\u3092\u64cd\u4f5c\u3059\u308b\u65b9\u6cd5\u306f\u8272\u3005\u3042\u308a\u307e\u3059\u304c\u3001\u307e\u305a\u306f\u57fa\u672c\u3068\u3044\u3046\u3053\u3068\u3067net/http(s)\u3092\u4f7f\u3044\u307e\u3059\u3002\u3076\u3063\u3061\u3083\u3051\u3001API\u3092\u53e9\u304f\u306a\u3089\u3082\u3063\u3068\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u2026\u3002\n\n## Droplet\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\n\u307e\u305a\u306f\u3044\u3064\u3082\u306e\u3092\u3084\u308a\u307e\u3059\u3002\n\n```ruby:do_listdroplet.rb\nrequire 'net/https'\nrequire 'uri'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Get.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg\nputs res.body\n```\n\nGET\u306e\u3068\u304d\u306f\u3042\u307e\u308a\u30dd\u30a4\u30f3\u30c8\u304c\u306a\u3044\uff1f\u306e\u3067\u3059\u304c\u3001API\u306f\u305f\u3044\u3066\u3044SSL\u306a\u306e\u3067net/https\u3092require\u3057\u305f\u4e0a\u3067\u3001SSL\u3092\u4f7f\u3046\u3068\u304d\u306e\u304a\u7d04\u675f\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3001\u307e\u305fDigitalOcean\u306b\u9650\u3089\u305aAPI\u3092\u53e9\u304f\u5834\u5408\u3001\u30d8\u30c3\u30c0\u306b\u30c8\u30fc\u30af\u30f3\u60c5\u5831\u3092\u5165\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u306e\u3067\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u3059\u308b\u969b\u306b\u3064\u3051\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u307e\u305f\u4e0a\u8a18\u306e\u30b3\u30fc\u30c9\u306e\u307e\u307e\u3060\u3068res.body\u306bjson\u5f62\u5f0f\u306e\u30ec\u30b9\u30dd\u30f3\u30b9\u304c\u307e\u308b\u3054\u3068\u5165\u3063\u305f\u307e\u307e\u306b\u306a\u3063\u3066\u3057\u307e\u3046\u306e\u3067\u3001Ruby\u4e0a\u3067\u6271\u3044\u3084\u3059\u3044\u3088\u3046\u306bparse\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```ruby:do_listdroplets2.rb\nrequire 'net/https'\nrequire 'uri'\nrequire 'json'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Get.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg\napi_response = JSON.parse(res.body)\napi_response['droplets'].each do |item|\n  puts item['name'], item['disk'], item['memory']\nend\n```\n\nAPI\u30ec\u30b9\u30dd\u30f3\u30b9\u304cRuby\u306ehash\u306b\u30d1\u30fc\u30b9\u3055\u308c\u308b\u305f\u3081\u3001\u305d\u306e\u4e2d\u304b\u3089\u4efb\u610f\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\n\n## POST\u3057\u3066\u307f\u308b\n\u524d\u56decurl\u3067\u884c\u3063\u305fDroplet\u4f5c\u6210\u3092net/http\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\n```ruby:do_createdroplet.rb\nrequire 'net/https'\nrequire 'uri'\nrequire 'json'\n\ndroplet_ep = 'https://api.digitalocean.com/v2/droplets'\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Post.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\nreq[\"Content-Type\"] = \"application/json\"\n\ndata = {\n\t\"name\" => \"testserver\",\n\t\"region\" => \"sgp1\",\n\t\"size\" => \"512MB\",\n\t\"image\" => \"ubuntu-14-04-x64\",\n\t\"ipv6\" => \"false\"\n}.to_json\n\nreq.body = data\nres = http.request(req)\n\nputs res.code, res.msg, res.body\n```\n\n\u4e0a\u534a\u5206\u306f\u3055\u3063\u304d\u3068\u307b\u307c\u540c\u3058\u3067\u3059\u306d\u3002\nreq\u3092POST\u3068\u3057\u3066\u751f\u6210\u3057\u305f\u306e\u3068\u3001POST\u3059\u308b\u5185\u5bb9\u3092hash\u3067\u4f5c\u3063\u3066\u304a\u3044\u3066\u3001json\u306b\u5909\u63db\u3057\u3066\u3044\u308b\u3068\u3053\u308d\u304c\u30dd\u30a4\u30f3\u30c8\u304b\u3068\u601d\u3044\u307e\u3059(\u307e\u3041\u3001\u79c1\u3082100\uff05\u53d7\u3051\u58f2\u308a\u3067\u3059\u304c)\u3002\u307e\u305fPOST\u306e\u4e2d\u8eab\u304cJSON\u306a\u306e\u3067\u3001\u5fc5\u305a\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u306bContent-Type\u3092\u30bb\u30c3\u30c8\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\ncurl\u306e\u5834\u5408\u3001\u3057\u3093\u3069\u3044\u306e\u304cPOST\u306e\u30da\u30a4\u30ed\u30fc\u30c9\u3067JSON\u3092\u624b\u66f8\u304d\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3068\u3053\u308d\u306a\u306e\u3067\u3001\u3053\u3053\u304c\u591a\u5c11\u306a\u308a\u3068\u3082\u8a18\u8ff0\u3057\u3084\u3059\u3044\u5f62\u306b\u306a\u308b\u306e\u306f\u975e\u5e38\u306b\u3042\u308a\u304c\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u3002\n\n## Delete\u3057\u3066\u307f\u308b\n\u4eca\u56de\u3082\u3001\u6700\u5f8c\u306f\u524a\u9664\u3067\u3059\u3002\n\u672c\u6765\u306fID\u3092\u4f55\u3089\u304b\u306e\u65b9\u6cd5\u3067\u7279\u5b9a\u3059\u308b(ARGV\u3067\u7a81\u3063\u8fbc\u3080\u3068\u304b)\u3059\u308b\u306e\u304c\u30df\u30bd\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3055\u3063\u304d\u4f5c\u3063\u305fDroplet\u306eID\u3092\u30cf\u30fc\u30c9\u30b3\u30fc\u30c9\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```ruby:do_delete_droplet.rb\nrequire 'net/https'\nrequire 'uri'\n\ndroplet_id = '28670468'\n\ndroplet_ep = \"https://api.digitalocean.com/v2/droplets/#{droplet_id}\"\ntoken = '(\u30c8\u30fc\u30af\u30f3)'\n\nuri = URI.parse(droplet_ep)\nhttp = Net::HTTP.new(uri.host, uri.port)\n\nhttp.use_ssl = true\nhttp.verify_mode = OpenSSL::SSL::VERIFY_NONE\n\nreq = Net::HTTP::Delete.new(uri.request_uri)\nreq[\"Authorization\"] = \"bearer #{token}\"\n\nres = http.request(req)\nputs res.code, res.msg, res.body\n```\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u3092\u4f5c\u308b\u3068\u304d\u306b\u3001\u5148\u306bID\u3092\u57cb\u3081\u8fbc\u3093\u3058\u3083\u3063\u3066\u307e\u3059\u3002\n\u767a\u884c\u3059\u308b\u3068204 no content\u304c\u8fd4\u3063\u3066\u304d\u3066\u3001Droplet\u306f\u524a\u9664\u3055\u308c\u307e\u3057\u305f\u3002\n\n## \u3082\u3063\u3068\u697d\u3057\u3066\u3044\u3044\u304b\u306a\n\u4eca\u56de\u306f\u3042\u3048\u3066net/http\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u305f\u304c\u3001\u5192\u982d\u89e6\u308c\u305f\u3068\u304a\u308aRuby\u306b\u306f\u3082\u3063\u3068\u4fbf\u5229\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3044\u3063\u3071\u3044\u3042\u308a\u307e\u3059\u3057\u3001\u5f53\u306eDigitalOcean\u516c\u5f0fSDK\u306ffaraday\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3063\u3066\u305f\u308a\u3057\u307e\u3059\u3002\u6b21\u56de\u4ee5\u964d\u3001\u305d\u308c\u3089\u3082\u6398\u308a\u4e0b\u3052\u3066\u3044\u304d\u305f\u3044\u306a\u3068\u601d\u3044\u307e\u3059\u3002\n\n", "tags": ["Ruby", "DigitalOcean", "api"]}