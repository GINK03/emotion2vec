{"context": "\n\n\u52d5\u6a5f\nPHPUnit \u3092\u4f7f\u3063\u3066 static \u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u304c\u3057\u305f\u304f\u3066 Mockery \u3092\u8abf\u3079\u3066\u3044\u3066\u3001alias \u304b overload \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u3048\u3070\u3044\u3051\u305d\u3046\u3063\u3066\u3068\u3053\u308d\u307e\u3067\u306f\u5206\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4e21\u8005\u306e\u9055\u3044\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3082\u9055\u3044\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\nQuick Reference - Mockery Docs\n\n\u53c2\u8003\u30da\u30fc\u30b8\n\u300cMockery\u300d\u3092\u4f7f\u3063\u3066\u30b5\u30af\u30c3\u3068PHP\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b\nMockery\u306e\u30af\u30e9\u30b9\u6307\u5b9a\u306e\u8003\u3048\u65b9\n\n\u7d50\u8ad6\n\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5225\u3067\u3064\u304f\u3089\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001alias \u3067\u3088\u3055\u305d\u3046\u3002\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\n\nPrefixing the valid name of a class (which is NOT currently loaded) with \u201coverload:\u201d will generate an alias mock (as with \u201calias:\u201d) except that created new instances of that class will import any expectations set on the origin mock ($mock). \n\n\u3068\u66f8\u3044\u3066\u3042\u3063\u3066\u3001\u300c\"overload\" \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u30af\u30e9\u30b9\u540d\u306b\u3064\u3044\u3066\u3044\u308b\u3068\uff08\u30af\u30e9\u30b9\u304c\u30ed\u30fc\u30c9\u3055\u308c\u3066\u306a\u3051\u308c\u3070\uff09\"alias\" \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u540c\u69d8\u5225\u540d\u30e2\u30c3\u30af\u3092\u751f\u6210\u3057\u307e\u3059\u304c\u3001\u5f53\u8a72\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3068\u5143\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3092\u5f15\u304d\u7d99\u304e\u307e\u3059\u3002\u300d\n(expectations \u306f\u76f4\u8a33\u3059\u308c\u3070\u300c\u671f\u5f85\u300d\u3067\u3059\u304c\u3053\u3053\u3067\u306f\u306a\u3093\u3066\u8a33\u305b\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u300c\u8a2d\u5b9a\u300d\u306b\u3057\u307e\u3057\u305f)\n\n\u8a73\u7d30\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u306a\u3044\u30af\u30e9\u30b9\u3092\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u306a\u304c\u3089\u3001\u5c11\u3057\u305a\u3064\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u9014\u4e2d\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\u30af\u30e9\u30b9\u3068\u305d\u306e\u4e3b\u306a\u8cac\u52d9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\nExportCommand - \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u4e00\u62ec\u3057\u3066\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u51fa\u529b\u3059\u308b \u2190 \u4eca\u56de\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u3067\u3059\nExportService - \u500b\u3005\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7279\u5b9a\u306e\u30d1\u30b9\u306b\u51fa\u529b\u3059\u308b\n\u552f\u4e00\u306e public \u30e1\u30bd\u30c3\u30c9 run \u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002\n\nExportCommandTest.php\n<?php\nnamespace MockeryTest\\Test;\n\nuse PHPUnit_Framework_TestCase;\nuse Mockery;\nuse MockeryTest\\ExportCommand;\n\nclass ExportCommandTest extends PHPUnit_Framework_TestCase\n{\n    // \u5fc5\u305a Mockery::close \u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\n    public function tearDown()\n    {\n        Mockery::close();\n    }\n\n    public function testRun()\n    {\n        $command = new ExportCommand();\n        $this->assertEquals(true, $command->run());\n    }\n}\n\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u304b\u3093\u3058\u3002\n\nExportCommand.php\n<?php\nnamespace MockeryTest;\n\nclass ExportCommand\n{\n    private $service;\n\n    public function run()\n    {\n        $this->service = new ExportService();\n\n        $results = [];\n        $files = ExportService::getFiles();\n        foreach ($files as $name => $file) {\n            switch ($name) {\n                case 'users':\n                    $results[$name] = $this->service->exportUsers($file);\n                    break;\n                case 'items':\n                    $results[$name] = $this->service->exportItems($file);\n                    break;\n                case 'orders':\n                    $results[$name] = $this->service->exportOrders($file);\n                    break;\n                // \u305f\u304f\u3055\u3093\u306e case \u304c\u7d9a\u304f\u2026\n                default:\n                    break;\n            }\n        }\n\n        if (array_search(false, $results)) {\n            $this->notifyError(array_keys($results));\n            return false;\n        }\n\n        return true;\n    }\n\n    protected function notifyError($failedFiles)\n    {\n        echo 'export failed - ' . implode(', ', $failedFiles) . PHP_EOL;\n    }\n}\n\n\nExportService \u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u304b\u3093\u3058\u3002\n\nExportService.php\n<?php\nnamespace MockeryTest;\n\nclass ExportService\n{\n    public static function getFiles()\n    {\n        return [\n            'users' => 'users.csv',\n            'items' => 'items.csv',\n            'orders' => 'orders.csv',\n            // \u5927\u91cf\u306b\u3042\u308b\n        ];\n    }\n\n    public function exportUsers($file)\n    {\n        echo 'export users' . PHP_EOL;\n        return true;\n    }\n\n    public function exportItems($file)\n    {\n        echo 'export items' . PHP_EOL;\n        return true;\n    }\n\n    public function exportOrders($file)\n    {\n        echo 'export orders' . PHP_EOL;\n        return true;\n    }\n\n    // \u5927\u91cf\u306b\u3042\u308b\n}\n\n\n\nalias \u3060\u3068\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3\n\u3053\u306e\u307e\u307e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3068\u3066\u3082\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\u304b\u3068\u3044\u3063\u3066\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u306e\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\u306a\u306e\u3067\u3001ExportService::getFiles \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u3072\u3068\u3064\u3060\u3051\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059 (\u3053\u3053\u3067\u306f\u3072\u3068\u307e\u305a alias \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u3044\u307e\u3059)\u3002\n\nExportCommandTest.php\n    public function testRun()\n    {\n        $mockService = Mockery::mock('alias:MockeryTest\\ExportService');\n        $mockService->shouldReceive('getFiles')->andReturn(['users' => 'users.csv']);\n        $mockService->shouldReceive('exportUsers')->once()->andReturnUsing(function () {\n            echo PHP_EOL . 'mock exportUsers called!' . PHP_EOL;\n            return true;\n        });\n\n        $command = new ExportCommand();\n        $this->assertEquals(true, $command->run());\n    }\n\n\nphpunit \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\nE                                                                   1 / 1 (100%)\n\nTime: 41 ms, Memory: 4.25MB\n\nThere was 1 error:\n\n1) MockeryTest\\Test\\ExportCommandTest::testRun\nBadMethodCallException: Method MockeryTest\\ExportService::exportUsers() does not exist on this mock object\n\n/Users/nunulk/src/php/mockery-test/src/ExportCommand.php:17\n/Users/nunulk/src/php/mockery-test/src/ExportCommand.php:17\n/Users/nunulk/src/php/mockery-test/tests/ExportCommandTest.php:25\n\nFAILURES!\nTests: 1, Assertions: 0, Errors: 1.\n\nexportUsers \u304c\u306a\u3044\u3088\u3001\u3068\u6012\u3089\u308c\u307e\u3057\u305f\u3002\n\u3067\u3001alias \u3092 overload \u306b\u5909\u3048\u308b\u3068...\n$mockService = Mockery::mock('overload:MockeryTest\\ExportService');\n\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 / 1 (100%)\nmock exportUsers called!\n\n\nTime: 51 ms, Memory: 4.25MB\n\nOK (1 test, 1 assertion)\n\n\u3061\u3083\u3093\u3068\u30c7\u30d0\u30c3\u30b0\u7528\u306b\u57cb\u3081\u8fbc\u3093\u3060 \"mock exportUsers called!\" \u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\nalias \u3060\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f $mockService \u306e\u307f\u3001shouldReceive \u3067\u30bb\u30c3\u30c8\u3057\u305f\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3001ExportCommand \u30af\u30e9\u30b9\u5185\u3067 new \u3057\u305f $this->service \u306e\u65b9\u306f\u7a7a\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\noverload \u3060\u3068\u3001$this->service \u3082 $mockService \u3068\u540c\u3058\u69cb\u6210\u3067\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u306e\u3067\u3001\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u306b\u306a\u3063\u305f\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\n\nalias \u3067\u3082\u3044\u3044\u30d1\u30bf\u30fc\u30f3\n\u305f\u3068\u3048\u3070\u3001ExportCommand \u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b ExportService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u3042\u3052\u308b\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3060\u3068\u3001OK\u3067\u3059\u3002\n\nExportCommand.php\nclass ExportCommand\n{\n    private $service;\n\n    public function __construct($service)\n    {\n        $this->service = $service;\n    }\n\n    public function run()\n    {\n        $results = [];\n        $files = ExportService::getFiles();\n    // ...\u7701\u7565\n\n\n\nExportCommandTest.php\n        $command = new ExportCommand($mockService);\n        $this->assertEquals(true, $command->run());\n\n\nExportService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3072\u3068\u3064\u306a\u306e\u3067\u3001alias \u3067\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 / 1 (100%)\nmock exportUsers called!\n\n\nTime: 46 ms, Memory: 4.25MB\n\nOK (1 test, 1 assertion)\n\n\n\u6240\u611f\nExportService::getFiles \u306f static \u3067\u3044\u3044\u306e\u304b\u3063\u3066\u3044\u3046\u8a2d\u8a08\u4e0a\u306e\u554f\u984c\u3082\u3042\u308b\u3057\u3001\u305d\u3082\u305d\u3082\u3001ExportService \u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u3053\u308c\u3067\u3044\u3044\u306e\u304b\u3063\u3066\u3044\u3046\u554f\u984c\u3082\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u305a\u3044\u3076\u3093\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\npublic function run()\n{\n    $this->service->exportAll();\n}\n\n\u3068\u306f\u8a00\u3048\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306b\u3068\u308a\u304b\u304b\u3063\u3066\u6700\u521d\u306e\u3046\u3061\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u79fb\u52d5\u3084\u3089\u30af\u30e9\u30b9\u306e\u62bd\u51fa\u3084\u3089\u3092\u884c\u3063\u3066\u5f90\u3005\u306b\u3042\u308b\u3079\u304d\u59ff\u306b\u5909\u3048\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u3001static \u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u306f\u5fc5\u8981\u3060\u3088\u306a\u3041\u3068\u3044\u3046\u306e\u304c\u611f\u60f3\u3067\u3059\u3002\n\n\u307e\u3068\u3081\n\n\u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8907\u6570\u3042\u308b\u306a\u3089 overload \u3092\u4f7f\u3044\u3001\u3072\u3068\u3064\u3060\u3051\u306a\u3089 alias \u3067\u30aa\u30c3\u30b1\u30fc\n\n\n\u304a\u307e\u3051\nDataProvider \u3092\u4f7f\u3063\u3066\u3001\u6210\u529f\u3068\u5931\u6557\u306e\u4e21\u30d1\u30bf\u30fc\u30f3\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\nExportCommandTest.php\n    /**\n    * @dataProvider getDataForTestRun\n    */\n    public function testRun($serviceResult, $commandResult)\n    {\n        $mockService = Mockery::mock('alias:MockeryTest\\ExportService');\n        $mockService->shouldReceive('getFiles')->andReturn(['users' => 'users.csv']);\n        $mockService->shouldReceive('exportUsers')->once()->andReturnUsing(function () use ($serviceResult) {\n            echo PHP_EOL . 'mock exportUsers called!' . PHP_EOL;\n            return $serviceResult;\n        });\n\n        $command = new ExportCommand($mockService);\n        $this->assertEquals($commandResult, $command->run());\n    }\n\n    public function getDataForTestRun()\n    {\n        return [\n            'success' => [\n                true, true\n            ],\n            'failure' => [\n                false, false\n            ],\n        ];\n    }\n\n\n\u51fa\u529b\n ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.\nmock exportUsers called!\n.                                                                  2 / 2 (100%)\nmock exportUsers called!\nexport failed - users\n\n\nTime: 47 ms, Memory: 4.25MB\n\nOK (2 tests, 2 assertions)\n\n\n##\u52d5\u6a5f\n\nPHPUnit \u3092\u4f7f\u3063\u3066 static \u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u304c\u3057\u305f\u304f\u3066 Mockery \u3092\u8abf\u3079\u3066\u3044\u3066\u3001alias \u304b overload \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u3048\u3070\u3044\u3051\u305d\u3046\u3063\u3066\u3068\u3053\u308d\u307e\u3067\u306f\u5206\u304b\u3063\u305f\u3093\u3067\u3059\u304c\u3001\u4e21\u8005\u306e\u9055\u3044\u304c\u3001\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u8aad\u3093\u3067\u3082\u9055\u3044\u304c\u3088\u304f\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u3002\n\n##\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\n\n[Quick Reference - Mockery Docs](docs.mockery.io/en/latest/reference/startup_methods.html)\n\n##\u53c2\u8003\u30da\u30fc\u30b8\n\n[\u300cMockery\u300d\u3092\u4f7f\u3063\u3066\u30b5\u30af\u30c3\u3068PHP\u306e\u30c6\u30b9\u30c8\u3092\u66f8\u3044\u3066\u307f\u308b](http://tech.aainc.co.jp/archives/3918)\n\n[Mockery\u306e\u30af\u30e9\u30b9\u6307\u5b9a\u306e\u8003\u3048\u65b9](http://qiita.com/prex-uchida/items/7563f7f33153da463802)\n\n##\u7d50\u8ad6\n\n**\u30e2\u30c3\u30af\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u5225\u3067\u3064\u304f\u3089\u306a\u3044\u306e\u3067\u3042\u308c\u3070\u3001alias \u3067\u3088\u3055\u305d\u3046\u3002**\n\n\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u306f\n\n> Prefixing the valid name of a class (which is NOT currently loaded) with \u201coverload:\u201d will generate an alias mock (as with \u201calias:\u201d) except that created new instances of that class will import any expectations set on the origin mock ($mock). \n\n\u3068\u66f8\u3044\u3066\u3042\u3063\u3066\u3001\u300c\"overload\" \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u304c\u30af\u30e9\u30b9\u540d\u306b\u3064\u3044\u3066\u3044\u308b\u3068\uff08\u30af\u30e9\u30b9\u304c\u30ed\u30fc\u30c9\u3055\u308c\u3066\u306a\u3051\u308c\u3070\uff09\"alias\" \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3068\u540c\u69d8\u5225\u540d\u30e2\u30c3\u30af\u3092\u751f\u6210\u3057\u307e\u3059\u304c\u3001\u5f53\u8a72\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u751f\u6210\u3059\u308b\u3068\u5143\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3092\u5f15\u304d\u7d99\u304e\u307e\u3059\u3002\u300d\n\n(expectations \u306f\u76f4\u8a33\u3059\u308c\u3070\u300c\u671f\u5f85\u300d\u3067\u3059\u304c\u3053\u3053\u3067\u306f\u306a\u3093\u3066\u8a33\u305b\u3070\u3044\u3044\u306e\u304b\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u300c\u8a2d\u5b9a\u300d\u306b\u3057\u307e\u3057\u305f)\n\n##\u8a73\u7d30\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306e\u306a\u3044\u30af\u30e9\u30b9\u3092\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u306a\u304c\u3089\u3001\u5c11\u3057\u305a\u3064\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3057\u3066\u3044\u308b\u9014\u4e2d\u306e\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\n\u30af\u30e9\u30b9\u3068\u305d\u306e\u4e3b\u306a\u8cac\u52d9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\nExportCommand - \u6307\u5b9a\u3055\u308c\u305f\u30d5\u30a1\u30a4\u30eb\u7fa4\u3092\u4e00\u62ec\u3057\u3066\u7279\u5b9a\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u51fa\u529b\u3059\u308b \u2190 \u4eca\u56de\u306e\u30c6\u30b9\u30c8\u5bfe\u8c61\u3067\u3059\nExportService - \u500b\u3005\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u7279\u5b9a\u306e\u30d1\u30b9\u306b\u51fa\u529b\u3059\u308b\n\n\u552f\u4e00\u306e public \u30e1\u30bd\u30c3\u30c9 run \u3092\u30c6\u30b9\u30c8\u3057\u307e\u3059\u3002\n\n```ExportCommandTest.php\n<?php\nnamespace MockeryTest\\Test;\n\nuse PHPUnit_Framework_TestCase;\nuse Mockery;\nuse MockeryTest\\ExportCommand;\n\nclass ExportCommandTest extends PHPUnit_Framework_TestCase\n{\n\t// \u5fc5\u305a Mockery::close \u3092\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\n    public function tearDown()\n    {\n        Mockery::close();\n    }\n\n    public function testRun()\n    {\n        $command = new ExportCommand();\n        $this->assertEquals(true, $command->run());\n    }\n}\n```\n\n\u30c6\u30b9\u30c8\u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u304b\u3093\u3058\u3002\n\n```ExportCommand.php\n<?php\nnamespace MockeryTest;\n\nclass ExportCommand\n{\n    private $service;\n\n    public function run()\n    {\n        $this->service = new ExportService();\n\n        $results = [];\n        $files = ExportService::getFiles();\n        foreach ($files as $name => $file) {\n            switch ($name) {\n                case 'users':\n                    $results[$name] = $this->service->exportUsers($file);\n                    break;\n                case 'items':\n                    $results[$name] = $this->service->exportItems($file);\n                    break;\n                case 'orders':\n                    $results[$name] = $this->service->exportOrders($file);\n                    break;\n                // \u305f\u304f\u3055\u3093\u306e case \u304c\u7d9a\u304f\u2026\n                default:\n                    break;\n            }\n        }\n\n        if (array_search(false, $results)) {\n            $this->notifyError(array_keys($results));\n            return false;\n        }\n\n        return true;\n    }\n\n    protected function notifyError($failedFiles)\n    {\n        echo 'export failed - ' . implode(', ', $failedFiles) . PHP_EOL;\n    }\n}\n```\n\nExportService \u30af\u30e9\u30b9\u306f\u3053\u3093\u306a\u304b\u3093\u3058\u3002\n\n```ExportService.php\n<?php\nnamespace MockeryTest;\n\nclass ExportService\n{\n    public static function getFiles()\n    {\n        return [\n            'users' => 'users.csv',\n            'items' => 'items.csv',\n            'orders' => 'orders.csv',\n            // \u5927\u91cf\u306b\u3042\u308b\n        ];\n    }\n\n    public function exportUsers($file)\n    {\n        echo 'export users' . PHP_EOL;\n        return true;\n    }\n\n    public function exportItems($file)\n    {\n        echo 'export items' . PHP_EOL;\n        return true;\n    }\n\n    public function exportOrders($file)\n    {\n        echo 'export orders' . PHP_EOL;\n        return true;\n    }\n\n    // \u5927\u91cf\u306b\u3042\u308b\n}\n```\n\n###alias \u3060\u3068\u30c0\u30e1\u306a\u30d1\u30bf\u30fc\u30f3\n\n\u3053\u306e\u307e\u307e\u30c6\u30b9\u30c8\u3092\u5b9f\u884c\u3059\u308b\u3068\u3059\u3079\u3066\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u3066\u3057\u307e\u3046\u306e\u3067\u3001\u3068\u3066\u3082\u6642\u9593\u304c\u304b\u304b\u308a\u307e\u3059\u3002\n\u304b\u3068\u3044\u3063\u3066\u3059\u3079\u3066\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u30e2\u30c3\u30af\u5316\u3059\u308b\u306e\u3082\u3081\u3093\u3069\u304f\u3055\u3044\u3002\n\u306a\u306e\u3067\u3001ExportService::getFiles \u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3066\u3001\u3072\u3068\u3064\u3060\u3051\u8fd4\u3059\u3088\u3046\u306b\u3057\u307e\u3059 (\u3053\u3053\u3067\u306f\u3072\u3068\u307e\u305a alias \u30d7\u30ec\u30d5\u30a3\u30c3\u30af\u30b9\u3092\u4f7f\u3044\u307e\u3059)\u3002\n\n```ExportCommandTest.php\n    public function testRun()\n    {\n        $mockService = Mockery::mock('alias:MockeryTest\\ExportService');\n        $mockService->shouldReceive('getFiles')->andReturn(['users' => 'users.csv']);\n        $mockService->shouldReceive('exportUsers')->once()->andReturnUsing(function () {\n            echo PHP_EOL . 'mock exportUsers called!' . PHP_EOL;\n            return true;\n        });\n\n        $command = new ExportCommand();\n        $this->assertEquals(true, $command->run());\n    }\n```\n\nphpunit \u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\n\n```console\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\nE                                                                   1 / 1 (100%)\n\nTime: 41 ms, Memory: 4.25MB\n\nThere was 1 error:\n\n1) MockeryTest\\Test\\ExportCommandTest::testRun\nBadMethodCallException: Method MockeryTest\\ExportService::exportUsers() does not exist on this mock object\n\n/Users/nunulk/src/php/mockery-test/src/ExportCommand.php:17\n/Users/nunulk/src/php/mockery-test/src/ExportCommand.php:17\n/Users/nunulk/src/php/mockery-test/tests/ExportCommandTest.php:25\n\nFAILURES!\nTests: 1, Assertions: 0, Errors: 1.\n```\n\nexportUsers \u304c\u306a\u3044\u3088\u3001\u3068\u6012\u3089\u308c\u307e\u3057\u305f\u3002\n\n\u3067\u3001alias \u3092 overload \u306b\u5909\u3048\u308b\u3068...\n\n```php\n$mockService = Mockery::mock('overload:MockeryTest\\ExportService');\n```\n\n```console\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 / 1 (100%)\nmock exportUsers called!\n\n\nTime: 51 ms, Memory: 4.25MB\n\nOK (1 test, 1 assertion)\n```\n\n\u3061\u3083\u3093\u3068\u30c7\u30d0\u30c3\u30b0\u7528\u306b\u57cb\u3081\u8fbc\u3093\u3060 \"mock exportUsers called!\" \u304c\u51fa\u529b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\nalias \u3060\u3068\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3057\u305f ```$mockService``` \u306e\u307f\u3001shouldReceive \u3067\u30bb\u30c3\u30c8\u3057\u305f\u30e2\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u6709\u52b9\u306b\u306a\u3063\u3066\u3001ExportCommand \u30af\u30e9\u30b9\u5185\u3067 new \u3057\u305f ```$this->service``` \u306e\u65b9\u306f\u7a7a\u306e\u30e2\u30c3\u30af\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\noverload \u3060\u3068\u3001```$this->service``` \u3082 ```$mockService``` \u3068\u540c\u3058\u69cb\u6210\u3067\u30e2\u30c3\u30af\u5316\u3055\u308c\u308b\u306e\u3067\u3001\u671f\u5f85\u901a\u308a\u306e\u52d5\u4f5c\u306b\u306a\u3063\u305f\u3001\u3068\u3044\u3046\u308f\u3051\u3067\u3059\u306d\u3002\n\n###alias \u3067\u3082\u3044\u3044\u30d1\u30bf\u30fc\u30f3\n\n\u305f\u3068\u3048\u3070\u3001ExportCommand \u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b ExportService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u6e21\u3057\u3066\u3042\u3052\u308b\u3088\u3046\u306a\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u3060\u3068\u3001OK\u3067\u3059\u3002\n\n```ExportCommand.php\nclass ExportCommand\n{\n    private $service;\n\n    public function __construct($service)\n    {\n        $this->service = $service;\n    }\n\n    public function run()\n    {\n        $results = [];\n        $files = ExportService::getFiles();\n    // ...\u7701\u7565\n```\n\n```ExportCommandTest.php\n        $command = new ExportCommand($mockService);\n        $this->assertEquals(true, $command->run());\n```\n\nExportService \u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306f\u3072\u3068\u3064\u306a\u306e\u3067\u3001alias \u3067\u3082\u30a8\u30e9\u30fc\u306b\u306a\u3089\u305a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3057\u305f\u3002\n\n```console\n\u00bb ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.                                                                   1 / 1 (100%)\nmock exportUsers called!\n\n\nTime: 46 ms, Memory: 4.25MB\n\nOK (1 test, 1 assertion)\n```\n\n##\u6240\u611f\n\nExportService::getFiles \u306f static \u3067\u3044\u3044\u306e\u304b\u3063\u3066\u3044\u3046\u8a2d\u8a08\u4e0a\u306e\u554f\u984c\u3082\u3042\u308b\u3057\u3001\u305d\u3082\u305d\u3082\u3001ExportService \u306e\u30a4\u30f3\u30bf\u30d5\u30a7\u30fc\u30b9\u306f\u3053\u308c\u3067\u3044\u3044\u306e\u304b\u3063\u3066\u3044\u3046\u554f\u984c\u3082\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308c\u3070\u305a\u3044\u3076\u3093\u3059\u3063\u304d\u308a\u3057\u307e\u3059\u3002\n\n\n```ExportCommand\npublic function run()\n{\n    $this->service->exportAll();\n}\n```\n\n\u3068\u306f\u8a00\u3048\u3001\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u306b\u3068\u308a\u304b\u304b\u3063\u3066\u6700\u521d\u306e\u3046\u3061\u306f\u3001\u3068\u308a\u3042\u3048\u305a\u52d5\u304f\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u79fb\u52d5\u3084\u3089\u30af\u30e9\u30b9\u306e\u62bd\u51fa\u3084\u3089\u3092\u884c\u3063\u3066\u5f90\u3005\u306b\u3042\u308b\u3079\u304d\u59ff\u306b\u5909\u3048\u3066\u3044\u304f\u3053\u3068\u306b\u306a\u308b\u3068\u601d\u3046\u306e\u3067\u3001static \u30e1\u30bd\u30c3\u30c9\u306e\u30c6\u30b9\u30c8\u306f\u5fc5\u8981\u3060\u3088\u306a\u3041\u3068\u3044\u3046\u306e\u304c\u611f\u60f3\u3067\u3059\u3002\n\n##\u307e\u3068\u3081\n\n- \u30e2\u30c3\u30af\u5316\u3059\u308b\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8907\u6570\u3042\u308b\u306a\u3089 overload \u3092\u4f7f\u3044\u3001\u3072\u3068\u3064\u3060\u3051\u306a\u3089 alias \u3067\u30aa\u30c3\u30b1\u30fc\n\n##\u304a\u307e\u3051\n\nDataProvider \u3092\u4f7f\u3063\u3066\u3001\u6210\u529f\u3068\u5931\u6557\u306e\u4e21\u30d1\u30bf\u30fc\u30f3\u3092\u30c6\u30b9\u30c8\u3059\u308b\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\n\n```ExportCommandTest.php\n    /**\n    * @dataProvider getDataForTestRun\n    */\n    public function testRun($serviceResult, $commandResult)\n    {\n        $mockService = Mockery::mock('alias:MockeryTest\\ExportService');\n        $mockService->shouldReceive('getFiles')->andReturn(['users' => 'users.csv']);\n        $mockService->shouldReceive('exportUsers')->once()->andReturnUsing(function () use ($serviceResult) {\n            echo PHP_EOL . 'mock exportUsers called!' . PHP_EOL;\n            return $serviceResult;\n        });\n\n        $command = new ExportCommand($mockService);\n        $this->assertEquals($commandResult, $command->run());\n    }\n\n    public function getDataForTestRun()\n    {\n        return [\n            'success' => [\n                true, true\n            ],\n            'failure' => [\n                false, false\n            ],\n        ];\n    }\n```\n\n\u51fa\u529b\n\n```console\n ./vendor/bin/phpunit tests\nPHPUnit 5.3.4 by Sebastian Bergmann and contributors.\n\n.\nmock exportUsers called!\n.                                                                  2 / 2 (100%)\nmock exportUsers called!\nexport failed - users\n\n\nTime: 47 ms, Memory: 4.25MB\n\nOK (2 tests, 2 assertions)\n```\n\n", "tags": ["PHP", "PHPUnit", "mockery"]}