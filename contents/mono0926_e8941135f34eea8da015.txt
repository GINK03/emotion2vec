{"context": "\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306f\u3001AWS\u30fbAzure\u30fbGCP\u306a\u3069\u3042\u308a\u307e\u3059\u304c\u3001Swift\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u306e\u306f\u73fe\u72b6IBM Bluemix\u306e\u307f\u306e\u306f\u305a\u3067\u3059(\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u4eee\u60f3Ubuntu\u30de\u30b7\u30f3\u3067Swift\u5b9f\u884c\u74b0\u5883\u3092\u6574\u3048\u308b\u3053\u3068\u306a\u3069\u306f\u3067\u304d\u308b\u304c\u305d\u308c\u306f\u9664\u304f)\u3002\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u305d\u306e\u3046\u3061OpenWhisk\u3068\u3044\u3046\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5b9f\u884c\u74b0\u5883\u3092Swift\u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u4ee5\u4e0b\u306b\u76f8\u5f53\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n\nAWS Lambda\nAzure Functions\nGoogle Cloud Functions\n\nSwift\u304c\u4f7f\u3048\u308b\u4ee5\u5916\u306b\u3082\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u516c\u958b\u3055\u308c\u3066\u3044\u308b\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001Issue\u30fbPull Request\u3092\u6295\u3052\u305f\u308a\u3001\u81ea\u524d\u30b5\u30fc\u30d0\u30fc\u306b\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3057\u3070\u3089\u304f\u30d9\u30fc\u30bf\u7248\u3067\u3057\u305f\u304c\u3001\u6628\u5e742016\u5e7412\u6708\u306b\u3081\u3067\u305f\u304f\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\ud83c\udf89\nGeneral Availability: What's new in IBM Bluemix OpenWhisk? - Bluemix Blog\n\nSwift\u3067\u304a\u307f\u304f\u3058\u3092\u4f5c\u3063\u3066\u307f\u308b\n\u3067\u306f\u3001Swift\u3067\u304a\u307f\u304f\u3058\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nIBM Bluemix\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\nIBM Bluemix\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\u3057\u307e\u3059\u300230\u65e5\u9593\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u5236\u9650\u306f\u3042\u308a\u3064\u3064\u3082\u307b\u307c\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u7121\u6599\u3067\u8a66\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3092\u8d85\u3048\u308b\u3068\u3001\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u767b\u9332\u304c\u5fc5\u8981\u3067\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3068\u540c\u69d8\u3001Billing\u3067\u610f\u56f3\u3057\u306a\u3044\u8ab2\u91d1\u304c\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u304b\u6c17\u3092\u4ed8\u3051\u306a\u304c\u3089\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\nOpenWhisk\u306e\u4fa1\u683c\u306f\u3001 OpenWhisk - Pricing \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u7121\u6599\u67a0: \u6bce\u670840\u4e07GB-seconds\n\u8d85\u904e\u5206: $0.000017/1GB-second\n\n\u53c2\u8003: \u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9IBM Bluemix\u3092\u7121\u6599\u3067\u4f7f\u3046\u30ce\u30a6\u30cf\u30a6\u307e\u3068\u3081 - Qiita\n\nOpenWhisk\u3092\u4f7f\u3063\u3066\u307f\u308b\nOpenWhisk\u304c\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u3067\u3059\u3002\nOpenWhisk - Editor\u306b\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u64cd\u4f5c\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u304c\u3001\u672c\u8a18\u4e8b\u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4e2d\u5fc3\u306b\u3084\u3063\u3066\u3044\u304f\u306e\u3067\u3001OpenWhisk - CLI\u306b\u3066\u3001wsk\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\u50d5\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066mv wsk /usr/local/bin\u306b\u3066\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002pip\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6570\u30f6\u6708\u524d\u306e\u8a18\u4e8b\u306e\u901a\u308a\u3084\u3063\u305f\u3089404\u30a8\u30e9\u30fc\u3067\u3001\u78ba\u304b\u306a\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u307e\u3057\u305f\u3002\n\nAuthorization Key\u306e\u30bb\u30c3\u30c8\nOpenWhisk - CLI\u306b\u66f8\u3044\u3066\u3042\u308b\u30b3\u30de\u30f3\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n$ wsk property set --apihost openwhisk.ng.bluemix.net --auth \u3299\ufe0f\u3072\u307f\u3064\u306eauthentication key\u3299\ufe0f\n\n\n\u8a2d\u5b9a\u304c\u3067\u304d\u305f\u304b\u78ba\u8a8d\n\u3053\u3061\u3089\u3092\u5165\u529b\u3057\u3066\u3001\n$ wsk action invoke /whisk.system/utils/echo -p message hello --blocking --result\n\n\u3053\u3061\u3089\u304c\u8fd4\u3063\u3066\u304f\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n{\n    \"message\": \"hello\"\n}\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u610f\u5473\u3092\u3001wsk action invoke --help\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n-b, --blocking          blocking invoke\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3092\u5f85\u305f\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u5fc5\u8981\u306e\u3088\u3046\u3067\u3059\u3002\n\n-r, --result            show only activation result if a blocking activation (unless there is a failure)\n\n\nactivation result\u306e\u307f\u3092\u5f97\u305f\u3044\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u306d\u3002\u7701\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u5197\u9577\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u306a\u308a\u307e\u3057\u305f\u3002\nok: invoked /whisk.system/utils/echo with id 7503c91d5d104b1c99583960aaae2b56\n{\n    \"namespace\": \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9_mono\",\n    \"name\": \"echo\",\n    \"version\": \"0.0.41\",\n    \"subject\": \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\",\n    \"activationId\": \"7503c91d5d104b1c99583960aaae2b56\",\n    \"start\": 1483419817114,\n    \"end\": 1483419817117,\n    \"duration\": 3,\n    \"response\": {\n        \"status\": \"success\",\n        \"statusCode\": 0,\n        \"success\": true,\n        \"result\": {\n            \"message\": \"hello\"\n        }\n    },\n    \"logs\": [],\n    \"annotations\": [\n        {\n            \"key\": \"limits\",\n            \"value\": {\n                \"logs\": 10,\n                \"memory\": 256,\n                \"timeout\": 60000\n            }\n        },\n        {\n            \"key\": \"path\",\n            \"value\": \"whisk.system/utils/echo\"\n        }\n    ],\n    \"publish\": false\n}\n\n\nOpenWhisk\u306eAction\u3092\u4f5c\u6210\nWeb UI\u3067\u3084\u308b\u5834\u5408\u306f\u524d\u8ff0\u306e\u901a\u308a\u3001OpenWhisk - Editor\u3092\u5f04\u3063\u3066\u3044\u3051\u3070\u826f\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306fwsk\u30b3\u30de\u30f3\u30c9\u3067\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u306e\u3067\u3001Getting started with OpenWhisk\u3092\u53c2\u7167\u3057\u3066\u3044\u304d\u307e\u3059\u3002\nCreating and invoking OpenWhisk actions\u306e\u9805\u76ee\u306bAction\u306e\u4f5c\u6210\u306e\u4ed5\u65b9\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\nSwift\u3067\u304a\u307f\u304f\u3058\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\nOpenWhisk\u3067\u547c\u3073\u51fa\u305b\u308bSwift\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306bargs: [String:Any]\u3092\u53d7\u3051\u3066\u3001[String:Any]\u3092\u8fd4\u3059main\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nfunc main(args: [String:Any]) -> [String:Any] {\n    // \u3053\u3053\u306b\u4f55\u304b\u66f8\u304f\n}\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\nimport Foundation\n// https://gist.github.com/rymcol/48a505c2a1c874daea52a296a2687f5f (\u305d\u306e\u307e\u307e\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3055\u3089\u306b\u5de5\u592b)\n#if os(Linux)\n    private func arc4random_uniform(_ max: UInt32) -> Int32 {\n        srand(UInt32(NSDate().timeIntervalSinceReferenceDate))\n        return rand() % Int32(max-1)\n    }\n#endif\n\nprivate func random(_ upper: Int) -> Int {\n    return Int(arc4random_uniform(UInt32(upper))) % upper\n}\n// \u6587\u5b57\u5316\u3051\u3059\u308b\u306e\u3067\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\ud83e\udd15\n//private let omikujis = [\"\u5927\u5409\ud83d\ude0b\", \"\u4e2d\u5409\ud83d\udc8b\", \"\u5c0f\u5409\ud83d\udc36\", \"\u5409\ud83d\ude15\", \"\u672b\u5409\ud83e\udd15\", \"\u51f6\ud83d\ude21\", \"\u5927\u51f6\ud83d\udd2a\"]\nprivate let omikujis = [\"daikichi\", \"chukichi\", \"shokichi\", \"kichi\", \"suekichi\", \"kyo\", \"daikyo\"]\nprivate func doOmikuji() -> String {\n    return omikujis[random(omikujis.count)]\n}\n\nfunc main(args: [String:Any]) -> [String:Any] {\n    // \u6587\u5b57\u5316\u3051\u3059\u308b\u306e\u3067\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\ud83e\udd15\n//    let r = [\"Swift\u304a\u307f\u304f\u3058\u306e\u7d50\u679c\u3067\u3059\": doOmikuji()]\n    let r = [\"Swift Omikuji\": doOmikuji()]\n    print(r)\n    return r\n}\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\u3001Linux\u74b0\u5883\u7528\u306barc4random_uniform(_:)\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\ud83e\udd15\n\u307e\u305f\u3001\u65e5\u672c\u8a9e\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3044\u3001\u89e3\u6c7a\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306b\u3057\u307e\u3057\u305f\ud83e\udd15\n\nAction\u4f5c\u6210\u30fb\u66f4\u65b0\nomikuji\u3068\u3044\u3046\u540d\u524d\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n\u4f5c\u6210: wsk action create omikuji omikuji.swift\n\n\u521d\u56de\n\nwsk action list\u3067omikuji\u304c\u4e00\u89a7\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\n\n\n\u66f4\u65b0: wsk action update omikuji omikuji.swift\n\n2\u56de\u76ee\u4ee5\u964d\n\n\n\n\nAction\u5b9f\u884c\n\u4e0a\u3067/whisk.system/utils/echo\u3092\u547c\u3073\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3068\u540c\u69d8\u306b\u6b21\u306e\u3088\u3046\u306b\u547c\u3079\u307e\u3059\u3002\nwsk action invoke omikuji --blocking --result\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n{\n    \"Swift Omikuji\": \"chukichi\"\n}\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3089\u3001--result\u3092\u5916\u3057\u3066\u8a73\u7d30\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\nHTTP\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\nExperimantal\u7248\u306e\u7c21\u5358\u306a\u65b9\u6cd5\nExposing your actions via API Gateway (Experimental)\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001HTTP\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306aURL\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n$  wsk api-experimental create /omikuji get omikuji\n\n\u3053\u3061\u3089\u3067\u304a\u307f\u304f\u3058\u3067\u304d\u307e\u3059\ud83c\udf8d:\nhttps://8305f020-572f-4eed-acd1-d8887bee03c7-gws.api-gw.mybluemix.net/omikuji\n\nREST API\u3092\u7528\u3044\u305f\u65b9\u6cd5\n\u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u5143\u306b\u304c\u3093\u3070\u308a\u307e\u3057\u305f\u3002\n\nOpenWhisk system details\nIBM Bluemix - IBM Bluemix OpenWhisk\n\nIBM Bluemix OpenWhisk REST API | Takehiko Amano's Blog on Emerging Technologies.\n\n\u8a8d\u8a3c\u306a\u3069\u3061\u3087\u3063\u3068\u53e4\u3044\u306e\u3067\u4e0a\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u88dc\u8db3\u3068\u3057\u3066\u8aad\u3080\n\n\n\n\u3061\u3087\u3063\u3068\u624b\u3053\u305a\u308a\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3051\u307e\u3057\u305f\u3002\n\u8a8d\u8a3c\u60c5\u5831\u3092\u78ba\u8a8d:\n$ cat ~/.wskprops\n\u2192 AUTH=\u3299\ufe0f\n\ncurl\u3067POST\u30ea\u30af\u30a8\u30b9\u30c8:\ncurl -u \u3299\ufe0f -X POST --data '{}' -H \"Content-Type: application/json\"  https://openwhisk.ng.bluemix.net/api/v1/namespaces/\u540d\u524d\u7a7a\u9593\u540d/actions/omikuji\\?blocking\\=true\\&result\\=true\n\n\n\u3061\u3087\u3061\u3087\u3044\u3068\u3084\u308b\u3064\u3082\u308a\u304c\u3001\u3051\u3063\u3053\u3046\u624b\u3053\u305a\u308a\u307e\u3057\u305f\ud83e\udd15\nwsk action create\u30b3\u30de\u30f3\u30c9\u3067\u3001\u591a\u5206\u5358\u4e00Swift\u30d5\u30a1\u30a4\u30eb\u3057\u304b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u4f7f\u3048\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u3046\u306a\u308b\u3068\u3051\u3063\u3053\u3046\u5229\u7528\u30b7\u30fc\u30f3\u304c\u9650\u5b9a\u3055\u308c\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\ud83e\udd14\nLambda\u7cfb\u30b5\u30fc\u30d3\u30b9\u306f\u306f\u305d\u3046\u3044\u3046\u3082\u3093\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u306f\u3044\u3048\u3082\u3046\u3061\u3087\u3063\u3068\u81ea\u7531\u304c\u6b32\u3057\u3044\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u3067\u3082\u5927\u4f53\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001\u9023\u643a\u6a5f\u80fd\u4f7f\u3063\u305f\u308a\u5b9f\u5229\u7528\u3057\u3066\u307f\u305f\u308a\u3057\u305f\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059(\u3000\u00b4\uff65\u203f\uff65\uff40)\n\n\u95a2\u9023\u30ea\u30f3\u30af\n\nBen Snider \u2013 Getting Started with OpenWhisk Server Side Swift\nIBM Bluemix OpenWhisk REST API | Takehiko Amano's Blog on Emerging Technologies.\n\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b5\u30fc\u30d0\u30ec\u30b9\u5b9f\u884c\u74b0\u5883\u300cOpenWhisk\u300d\u306e\u6982\u8981\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 (1/5)\uff1aCodeZine\uff08\u30b3\u30fc\u30c9\u30b8\u30f3\uff09\nOpenWhisk Advent Calendar 2016 - Qiita\nBluemix\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u53c2\u52a0\u3057\u3088\u3046\uff01\uff5cteratail\uff08\u30c6\u30e9\u30c6\u30a4\u30eb\uff09\n\n\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306f\u3001AWS\u30fbAzure\u30fbGCP\u306a\u3069\u3042\u308a\u307e\u3059\u304c\u3001Swift\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u30b5\u30fc\u30d3\u30b9\u304c\u3042\u308b\u306e\u306f\u73fe\u72b6[IBM Bluemix](https://console.ng.bluemix.net/)\u306e\u307f\u306e\u306f\u305a\u3067\u3059(\u4ed6\u306e\u30b5\u30fc\u30d3\u30b9\u3067\u3082\u4eee\u60f3Ubuntu\u30de\u30b7\u30f3\u3067Swift\u5b9f\u884c\u74b0\u5883\u3092\u6574\u3048\u308b\u3053\u3068\u306a\u3069\u306f\u3067\u304d\u308b\u304c\u305d\u308c\u306f\u9664\u304f)\u3002\n\n\u672c\u8a18\u4e8b\u3067\u306f\u3001\u305d\u306e\u3046\u3061[OpenWhisk](https://developer.ibm.com/openwhisk/)\u3068\u3044\u3046\u3001\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u5b9f\u884c\u74b0\u5883\u3092Swift\u3067\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u306e\u4ee5\u4e0b\u306b\u76f8\u5f53\u3059\u308b\u30b5\u30fc\u30d3\u30b9\u3067\u3059\u3002\n\n- [AWS Lambda](https://aws.amazon.com/lambda/details/)\n- [Azure Functions](https://azure.microsoft.com/en-us/services/functions/)\n- [Google Cloud Functions](https://cloud.google.com/functions/)\n\nSwift\u304c\u4f7f\u3048\u308b\u4ee5\u5916\u306b\u3082[\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u516c\u958b\u3055\u308c\u3066\u3044\u308b](https://github.com/openwhisk/openwhisk)\u3068\u3044\u3046\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001Issue\u30fbPull Request\u3092\u6295\u3052\u305f\u308a\u3001\u81ea\u524d\u30b5\u30fc\u30d0\u30fc\u306b\u74b0\u5883\u3092\u69cb\u7bc9\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3057\u3070\u3089\u304f\u30d9\u30fc\u30bf\u7248\u3067\u3057\u305f\u304c\u3001\u6628\u5e742016\u5e7412\u6708\u306b\u3081\u3067\u305f\u304f\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u307e\u3057\u305f\ud83c\udf89\n[General Availability: What's new in IBM Bluemix OpenWhisk? - Bluemix Blog](https://www.ibm.com/blogs/bluemix/2016/12/general-availability-openwhisk/)\n\n# Swift\u3067\u304a\u307f\u304f\u3058\u3092\u4f5c\u3063\u3066\u307f\u308b\n\n\u3067\u306f\u3001Swift\u3067\u304a\u307f\u304f\u3058\u3092\u4f5c\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n## IBM Bluemix\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\n[IBM Bluemix\u30b3\u30f3\u30bd\u30fc\u30eb](https://console.ng.bluemix.net)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u3001\u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\u3057\u307e\u3059\u300230\u65e5\u9593\u306f\u30ea\u30bd\u30fc\u30b9\u306b\u5236\u9650\u306f\u3042\u308a\u3064\u3064\u3082\u307b\u307c\u3059\u3079\u3066\u306e\u6a5f\u80fd\u3092\u7121\u6599\u3067\u8a66\u7528\u3067\u304d\u307e\u3059\u3002\u305d\u308c\u3092\u8d85\u3048\u308b\u3068\u3001\u30af\u30ec\u30b8\u30c3\u30c8\u30ab\u30fc\u30c9\u767b\u9332\u304c\u5fc5\u8981\u3067\u3059\u3002\u4ed6\u306e\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9\u3068\u540c\u69d8\u3001[Billing](https://console.ng.bluemix.net/account/#billing/)\u3067\u610f\u56f3\u3057\u306a\u3044\u8ab2\u91d1\u304c\u767a\u751f\u3057\u3066\u3044\u306a\u3044\u304b\u6c17\u3092\u4ed8\u3051\u306a\u304c\u3089\u4f7f\u3044\u307e\u3057\u3087\u3046\u3002\n\nOpenWhisk\u306e\u4fa1\u683c\u306f\u3001 [OpenWhisk - Pricing](https://console.ng.bluemix.net/openwhisk/learn/pricing) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n- \u7121\u6599\u67a0: \u6bce\u670840\u4e07GB-seconds\n- \u8d85\u904e\u5206: $0.000017/1GB-second\n\n\u53c2\u8003: [\u30af\u30e9\u30a6\u30c9\u30b5\u30fc\u30d3\u30b9IBM Bluemix\u3092\u7121\u6599\u3067\u4f7f\u3046\u30ce\u30a6\u30cf\u30a6\u307e\u3068\u3081 - Qiita](http://qiita.com/zuhito/items/86e7ad47d14937d3e9b6)\n\n## OpenWhisk\u3092\u4f7f\u3063\u3066\u307f\u308b\n\n[OpenWhisk](https://console.ng.bluemix.net/openwhisk/)\u304c\u30c8\u30c3\u30d7\u30da\u30fc\u30b8\u3067\u3059\u3002\n[OpenWhisk - Editor](https://console.ng.bluemix.net/openwhisk/editor)\u306b\u3066\u30d6\u30e9\u30a6\u30b6\u4e0a\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u3044\u305f\u308a\u64cd\u4f5c\u3057\u305f\u308a\u3067\u304d\u307e\u3059\u304c\u3001\u672c\u8a18\u4e8b\u3067\u306f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u4e2d\u5fc3\u306b\u3084\u3063\u3066\u3044\u304f\u306e\u3067\u3001[OpenWhisk - CLI](https://console.ng.bluemix.net/openwhisk/learn/cli)\u306b\u3066\u3001`wsk`\u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u8a2d\u5b9a\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n### \u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n\u50d5\u306f\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3066`mv wsk /usr/local/bin`\u306b\u3066\u914d\u7f6e\u3057\u307e\u3057\u305f\u3002`pip`\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6570\u30f6\u6708\u524d\u306e\u8a18\u4e8b\u306e\u901a\u308a\u3084\u3063\u305f\u3089404\u30a8\u30e9\u30fc\u3067\u3001\u78ba\u304b\u306a\u65b9\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u8ae6\u3081\u307e\u3057\u305f\u3002\n\n### `Authorization Key`\u306e\u30bb\u30c3\u30c8\n\n[OpenWhisk - CLI](https://console.ng.bluemix.net/openwhisk/learn/cli)\u306b\u66f8\u3044\u3066\u3042\u308b\u30b3\u30de\u30f3\u30c9\u3092\u30b3\u30d4\u30da\u3057\u3066\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n\n```sh\n$ wsk property set --apihost openwhisk.ng.bluemix.net --auth \u3299\ufe0f\u3072\u307f\u3064\u306eauthentication key\u3299\ufe0f\n```\n\n### \u8a2d\u5b9a\u304c\u3067\u304d\u305f\u304b\u78ba\u8a8d\n\n\u3053\u3061\u3089\u3092\u5165\u529b\u3057\u3066\u3001\n\n```sh\n$ wsk action invoke /whisk.system/utils/echo -p message hello --blocking --result\n```\n\n\u3053\u3061\u3089\u304c\u8fd4\u3063\u3066\u304f\u308c\u3070\u6210\u529f\u3067\u3059\u3002\n\n```json\n{\n    \"message\": \"hello\"\n}\n```\n\n\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u610f\u5473\u3092\u3001`wsk action invoke --help`\u30b3\u30de\u30f3\u30c9\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002\n\n> `-b, --blocking          blocking invoke`\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304f\u308b\u306e\u3092\u5f85\u305f\u306a\u3044\u3088\u3046\u306a\u306e\u3067\u3001\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u305f\u3044\u5834\u5408\u5fc5\u8981\u306e\u3088\u3046\u3067\u3059\u3002\n\n> `-r, --result            show only activation result if a blocking activation (unless there is a failure)\n`\n\n`activation result`\u306e\u307f\u3092\u5f97\u305f\u3044\u6642\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u3059\u306d\u3002\u7701\u304f\u3068\u6b21\u306e\u3088\u3046\u306a\u5197\u9577\u306a\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\n```json\nok: invoked /whisk.system/utils/echo with id 7503c91d5d104b1c99583960aaae2b56\n{\n    \"namespace\": \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9_mono\",\n    \"name\": \"echo\",\n    \"version\": \"0.0.41\",\n    \"subject\": \"\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\",\n    \"activationId\": \"7503c91d5d104b1c99583960aaae2b56\",\n    \"start\": 1483419817114,\n    \"end\": 1483419817117,\n    \"duration\": 3,\n    \"response\": {\n        \"status\": \"success\",\n        \"statusCode\": 0,\n        \"success\": true,\n        \"result\": {\n            \"message\": \"hello\"\n        }\n    },\n    \"logs\": [],\n    \"annotations\": [\n        {\n            \"key\": \"limits\",\n            \"value\": {\n                \"logs\": 10,\n                \"memory\": 256,\n                \"timeout\": 60000\n            }\n        },\n        {\n            \"key\": \"path\",\n            \"value\": \"whisk.system/utils/echo\"\n        }\n    ],\n    \"publish\": false\n}\n```\n\n## OpenWhisk\u306eAction\u3092\u4f5c\u6210\n\nWeb UI\u3067\u3084\u308b\u5834\u5408\u306f\u524d\u8ff0\u306e\u901a\u308a\u3001[OpenWhisk - Editor](https://console.ng.bluemix.net/openwhisk/editor)\u3092\u5f04\u3063\u3066\u3044\u3051\u3070\u826f\u3044\u3067\u3059\u304c\u3001\u4eca\u56de\u306f`wsk`\u30b3\u30de\u30f3\u30c9\u3067\u3084\u3063\u3066\u3044\u304d\u305f\u3044\u306e\u3067\u3001[Getting started with OpenWhisk](https://console.ng.bluemix.net/docs/openwhisk/index.html)\u3092\u53c2\u7167\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n[Creating and invoking OpenWhisk actions](https://console.ng.bluemix.net/docs/openwhisk/openwhisk_actions.html)\u306e\u9805\u76ee\u306bAction\u306e\u4f5c\u6210\u306e\u4ed5\u65b9\u304c\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n### Swift\u3067\u304a\u307f\u304f\u3058\u30ed\u30b8\u30c3\u30af\u3092\u66f8\u304f\n\nOpenWhisk\u3067\u547c\u3073\u51fa\u305b\u308bSwift\u30b9\u30af\u30ea\u30d7\u30c8\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b`args: [String:Any]`\u3092\u53d7\u3051\u3066\u3001`[String:Any]`\u3092\u8fd4\u3059`main`\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3088\u3046\u3067\u3059\u3002\n\n```swift\nfunc main(args: [String:Any]) -> [String:Any] {\n    // \u3053\u3053\u306b\u4f55\u304b\u66f8\u304f\n}\n```\n\n\u3068\u3044\u3046\u308f\u3051\u3067\u66f8\u304d\u307e\u3057\u305f\u3002\n\n```swift\nimport Foundation\n// https://gist.github.com/rymcol/48a505c2a1c874daea52a296a2687f5f (\u305d\u306e\u307e\u307e\u3067\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u306a\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3001\u3055\u3089\u306b\u5de5\u592b)\n#if os(Linux)\n    private func arc4random_uniform(_ max: UInt32) -> Int32 {\n        srand(UInt32(NSDate().timeIntervalSinceReferenceDate))\n        return rand() % Int32(max-1)\n    }\n#endif\n\nprivate func random(_ upper: Int) -> Int {\n    return Int(arc4random_uniform(UInt32(upper))) % upper\n}\n// \u6587\u5b57\u5316\u3051\u3059\u308b\u306e\u3067\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\ud83e\udd15\n//private let omikujis = [\"\u5927\u5409\ud83d\ude0b\", \"\u4e2d\u5409\ud83d\udc8b\", \"\u5c0f\u5409\ud83d\udc36\", \"\u5409\ud83d\ude15\", \"\u672b\u5409\ud83e\udd15\", \"\u51f6\ud83d\ude21\", \"\u5927\u51f6\ud83d\udd2a\"]\nprivate let omikujis = [\"daikichi\", \"chukichi\", \"shokichi\", \"kichi\", \"suekichi\", \"kyo\", \"daikyo\"]\nprivate func doOmikuji() -> String {\n    return omikujis[random(omikujis.count)]\n}\n\nfunc main(args: [String:Any]) -> [String:Any] {\n    // \u6587\u5b57\u5316\u3051\u3059\u308b\u306e\u3067\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\ud83e\udd15\n//    let r = [\"Swift\u304a\u307f\u304f\u3058\u306e\u7d50\u679c\u3067\u3059\": doOmikuji()]\n    let r = [\"Swift Omikuji\": doOmikuji()]\n    print(r)\n    return r\n}\n```\n\n\u30b3\u30e1\u30f3\u30c8\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u304c\u3001Linux\u74b0\u5883\u7528\u306b`arc4random_uniform(_:)`\u95a2\u6570\u3092\u7528\u610f\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3057\u305f\ud83e\udd15\n\u307e\u305f\u3001\u65e5\u672c\u8a9e\u304c\u6587\u5b57\u5316\u3051\u3057\u3066\u3057\u307e\u3044\u3001\u89e3\u6c7a\u6cd5\u304c\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u3068\u308a\u3042\u3048\u305a\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u306b\u3057\u307e\u3057\u305f\ud83e\udd15\n\n### Action\u4f5c\u6210\u30fb\u66f4\u65b0\n\n`omikuji`\u3068\u3044\u3046\u540d\u524d\u3067\u30a2\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\n\n- \u4f5c\u6210: `wsk action create omikuji omikuji.swift`\n\t- \u521d\u56de\n\t- `wsk action list`\u3067`omikuji`\u304c\u4e00\u89a7\u3055\u308c\u308b\u3053\u3068\u3092\u78ba\u8a8d\n- \u66f4\u65b0: `wsk action update omikuji omikuji.swift`\n\t- 2\u56de\u76ee\u4ee5\u964d\n\n### Action\u5b9f\u884c\n\n\u4e0a\u3067`/whisk.system/utils/echo`\u3092\u547c\u3073\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3068\u540c\u69d8\u306b\u6b21\u306e\u3088\u3046\u306b\u547c\u3079\u307e\u3059\u3002\n\n```sh\nwsk action invoke omikuji --blocking --result\n```\n\n\u3046\u307e\u304f\u3044\u304f\u3068\u3001\u6b21\u306e\u3088\u3046\u306a\u7d50\u679c\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\n\n```json\n{\n    \"Swift Omikuji\": \"chukichi\"\n}\n```\n\n\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3057\u305f\u3089\u3001`--result`\u3092\u5916\u3057\u3066\u8a73\u7d30\u3092\u78ba\u8a8d\u3057\u307e\u3057\u3087\u3046\u3002\n\n## HTTP\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n### Experimantal\u7248\u306e\u7c21\u5358\u306a\u65b9\u6cd5\n\n[Exposing your actions via API Gateway (Experimental)](https://console.ng.bluemix.net/docs/openwhisk/openwhisk_apigateway.html#openwhisk_apigateway)\u306b\u66f8\u3044\u3066\u3042\u308a\u307e\u3059\u3002\n\n\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001HTTP\u30a2\u30af\u30bb\u30b9\u53ef\u80fd\u306aURL\u3092\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n```sh\n$  wsk api-experimental create /omikuji get omikuji\n```\n\n\u3053\u3061\u3089\u3067\u304a\u307f\u304f\u3058\u3067\u304d\u307e\u3059\ud83c\udf8d:\nhttps://8305f020-572f-4eed-acd1-d8887bee03c7-gws.api-gw.mybluemix.net/omikuji\n\n\n### REST API\u3092\u7528\u3044\u305f\u65b9\u6cd5\n\n\u4ee5\u4e0b\u306e\u60c5\u5831\u3092\u5143\u306b\u304c\u3093\u3070\u308a\u307e\u3057\u305f\u3002\n\n- [OpenWhisk system details](https://console.ng.bluemix.net/docs/openwhisk/openwhisk_reference.html#openwhisk_ref_restapi)\n- [IBM Bluemix - IBM Bluemix OpenWhisk](https://console.ng.bluemix.net/apidocs/98?&language=node#introduction)\n- [IBM Bluemix OpenWhisk REST API | Takehiko Amano's Blog on Emerging Technologies.](https://amanoblog.wordpress.com/2016/03/03/ibm-bluemix-openwhisk-rest-api/?cm_mc_uid=56490082623414691585059&cm_mc_sid_50200000=1483417058)\n\t- \u8a8d\u8a3c\u306a\u3069\u3061\u3087\u3063\u3068\u53e4\u3044\u306e\u3067\u4e0a\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u88dc\u8db3\u3068\u3057\u3066\u8aad\u3080\n\n\u3061\u3087\u3063\u3068\u624b\u3053\u305a\u308a\u307e\u3057\u305f\u304c\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u3044\u3051\u307e\u3057\u305f\u3002\n\n\u8a8d\u8a3c\u60c5\u5831\u3092\u78ba\u8a8d:\n\n\n```\n$ cat ~/.wskprops\n\u2192 AUTH=\u3299\ufe0f\n```\n\n`curl`\u3067POST\u30ea\u30af\u30a8\u30b9\u30c8:\n\n```\ncurl -u \u3299\ufe0f -X POST --data '{}' -H \"Content-Type: application/json\"  https://openwhisk.ng.bluemix.net/api/v1/namespaces/\u540d\u524d\u7a7a\u9593\u540d/actions/omikuji\\?blocking\\=true\\&result\\=true\n```\n\n---\n\n\u3061\u3087\u3061\u3087\u3044\u3068\u3084\u308b\u3064\u3082\u308a\u304c\u3001\u3051\u3063\u3053\u3046\u624b\u3053\u305a\u308a\u307e\u3057\u305f\ud83e\udd15\n`wsk action create`\u30b3\u30de\u30f3\u30c9\u3067\u3001\u591a\u5206\u5358\u4e00Swift\u30d5\u30a1\u30a4\u30eb\u3057\u304b\u6307\u5b9a\u3067\u304d\u306a\u3044\u3088\u3046\u3067\u30e9\u30a4\u30d6\u30e9\u30ea\u3082\u4f7f\u3048\u306a\u3055\u305d\u3046\u306a\u306e\u3067\u3001\u305d\u3046\u306a\u308b\u3068\u3051\u3063\u3053\u3046\u5229\u7528\u30b7\u30fc\u30f3\u304c\u9650\u5b9a\u3055\u308c\u308b\u304b\u306a\u3068\u601d\u3044\u307e\u3057\u305f\ud83e\udd14\nLambda\u7cfb\u30b5\u30fc\u30d3\u30b9\u306f\u306f\u305d\u3046\u3044\u3046\u3082\u3093\u306a\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3067\u3059\u304c\u3001\u3068\u306f\u3044\u3048\u3082\u3046\u3061\u3087\u3063\u3068\u81ea\u7531\u304c\u6b32\u3057\u3044\u306a\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u3067\u3082\u5927\u4f53\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u306e\u3067\u3001[\u9023\u643a\u6a5f\u80fd](https://console.ng.bluemix.net/openwhisk/learn/integrations)\u4f7f\u3063\u305f\u308a\u5b9f\u5229\u7528\u3057\u3066\u307f\u305f\u308a\u3057\u305f\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u307e\u3059(\u3000\u00b4\uff65\u203f\uff65\uff40)\n\n\n# \u95a2\u9023\u30ea\u30f3\u30af\n\n- [Ben Snider \u2013 Getting Started with OpenWhisk Server Side Swift](http://www.bensnider.com/getting-started-with-openwhisk-server-side-swift.html)\n- [IBM Bluemix OpenWhisk REST API | Takehiko Amano's Blog on Emerging Technologies.](https://amanoblog.wordpress.com/2016/03/03/ibm-bluemix-openwhisk-rest-api/?cm_mc_uid=56490082623414691585059&cm_mc_sid_50200000=1483417058)\n- [\u30aa\u30fc\u30d7\u30f3\u30bd\u30fc\u30b9\u306e\u30b5\u30fc\u30d0\u30ec\u30b9\u5b9f\u884c\u74b0\u5883\u300cOpenWhisk\u300d\u306e\u6982\u8981\u3068\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210 (1/5)\uff1aCodeZine\uff08\u30b3\u30fc\u30c9\u30b8\u30f3\uff09](http://codezine.jp/article/detail/9623)\n- [OpenWhisk Advent Calendar 2016 - Qiita](http://qiita.com/advent-calendar/2016/openwhisk)\n- [Bluemix\u30a2\u30c9\u30d9\u30f3\u30c8\u30ab\u30ec\u30f3\u30c0\u30fc\u306b\u53c2\u52a0\u3057\u3088\u3046\uff01\uff5cteratail\uff08\u30c6\u30e9\u30c6\u30a4\u30eb\uff09](https://teratail.com/Bluemix)\n", "tags": ["lambda", "Bluemix", "Swift", "swift3", "OpenWhisk"]}