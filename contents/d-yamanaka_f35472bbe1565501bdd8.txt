{"context": "\n\n\u76ee\u7684\n\u524d\u56de\u306e\u8a18\u4e8b\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u6368\u3066\u3066\u3001\u554f\u3044\u5408\u308f\u305b\u53d7\u4ed8\u3092\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3067\u5b9f\u73fe\u3059\u308b\u3067\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u304c\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u3064\u3051\u308c\u306a\u304b\u3063\u305f\u305f\u3081\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u5fdc\u3057\u305f\u304b\u3063\u305f\uff08\u3064\u3044\u3067\u306bHTML\u30e1\u30fc\u30eb\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u3066\u307f\u307e\u3057\u305f\uff09\n\n\u524d\u56de\u304b\u3089\u306e\u5909\u66f4\u70b9\n\n\u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\uff08\u9001\u308a\u5143\u3001\u9001\u308a\u5148\u3001\u30e1\u30fc\u30eb\u7528\u30d0\u30b1\u30c3\u30c8\uff09\u3092DynamoDB\u3078\u5916\u51fa\u3057\uff08\u6bce\u56de\u5909\u66f4\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u305f\u3081\uff09\n\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3068HTML\u306e\u30e1\u30fc\u30eb\u306b\u5bfe\u5fdc\nIAM\u30ed\u30fc\u30eb\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4fee\u6b63\uff08\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306b\u4f34\u3063\u3066\uff09\n\n\n\nDynamoDB\u306e\u8a2d\u5b9a\nus-east-1\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u300cmail_settings\u300d\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0bitem\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u203b\u30d7\u30e9\u30a4\u30de\u30ea\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306faccountId\n{\n  \"accountId\": \"<AWS Account No>\",\n  \"bucketName\": \"inquiry-bucket\",\n  \"sourceAddress\": \"no-reply@xxxx.co.jp\",\n  \"toAddress\": [\n    \"info@xxxx.co.jp\"\n  ]\n}\n\n\nIAM\u30ed\u30fc\u30eb\u306e\u8a2d\u5b9a\n\u30dd\u30ea\u30b7\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\nDynamoDB\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u4ed8\u4e0e\u3068SES\u306e\u6a29\u9650\u3092\u300cSendEmail\u300d\u304b\u3089\u300cSendRawEmail\u300d\u306b\u5909\u66f4\u3002\n\ninquiryPolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1474188898000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1474188915000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:DeleteObject\",\n                \"s3:ReplicateObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::inquiry-bucket\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1474294979000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ses:SendRawEmail\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1476151970000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:GetItem\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:us-east-1:<accountId>:table/mail_settings\"\n            ]\n        }\n    ]\n}\n\n\n\n\u30b3\u30fc\u30c9\u306e\u4fee\u6b63\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\nfs\u3001child_process\u3001mailparser\u3001mailcomposer\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u4e00\u7dd2\u306bzip\u5316\u3057\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\ninquiryFunction\n'use strict';\n\nconsole.log('Loading function');\nconst AWS = require('aws-sdk');\nconst fs = require('fs');\nconst s3 = new AWS.S3();\n\nexports.handler = function(event, context, callback) {\n\n    const accountId = context.invokedFunctionArn.match(/\\d{3,}/)[0];\n    const messageId = event.Records[0].ses.mail.messageId;\n    const filepath  = '/tmp/message';\n\n    const generator  = (function *() {\n\n        try {\n            // DynamoDB\u304b\u3089\u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\n            const mailSettings  = yield getmailSettings(accountId, generator);\n            const bucketName    = mailSettings.bucketName;\n            const addressInfo   = {\n                toAddress       : mailSettings.toAddress,\n                sourceAddress   : mailSettings.sourceAddress\n            };\n\n            // S3\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\n            const s3Object = yield getObject(messageId, bucketName, generator);\n\n            // Get\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f8\u304d\u8fbc\u307f\n            fs.writeFileSync(filepath, String(s3Object.Body));\n\n            // \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n            yield encodingMessage(filepath, generator);\n\n            // \u9001\u4fe1\u5185\u5bb9\u5b9a\u7fa9\n            const sendMailInfo = yield setSendMailInfo(filepath, generator);\n\n            // \u9001\u4fe1\u5185\u5bb9\u4f5c\u6210\n            const message = yield createMessage(sendMailInfo, addressInfo, generator);\n\n            // \u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n            yield sendRawEmail(message, generator);\n\n            // S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u66f8\u304d\u63db\u3048\n            yield copyObject(messageId, bucketName, sendMailInfo.from[0].address, generator);\n            yield deleteObject(messageId, bucketName, generator);\n\n            callback(null,'succeed!');\n\n        } catch (e) {\n            callback(e.message);\n        }\n    })();\n\n    /* \u51e6\u7406\u958b\u59cb */\n    generator.next();\n};\n\n// DynamoDB\u304b\u3089\u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\nfunction getmailSettings(accountId, generator) {\n\n    const docClient = new AWS.DynamoDB.DocumentClient();\n    const table = 'mail_settings';\n\n    const params = {\n        TableName: table,\n        Key: {\n            'accountId': accountId\n        }\n    };\n\n    docClient.get(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('getmailSettings Error'));\n            return;\n        }\n        console.log('got mailSettings');\n        generator.next(data.Item);\n    });\n}\n\n// S3\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nfunction getObject(messageId, bucketName, generator) {\n\n    const params = {\n        Bucket: bucketName,\n        Key: messageId\n    };\n\n    console.log('Getting object from ' + bucketName);\n\n    s3.getObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('getObject Error'));\n            return;\n        }\n        console.log('Got object');\n        generator.next(data);\n    });\n}\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\nfunction encodingMessage(filepath, generator) {\n    const exec = require('child_process').exec;\n    const cmd  = 'iconv -f iso-2022-jp -t utf-8 ' + filepath;\n\n    console.log('encoding command is ' + cmd);\n\n    const child = exec(cmd, function(err, stdout, stderr) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('encoding Error'));\n            return;\n        }\n        console.log(stdout);\n        // \u518d\u5ea6\u66f8\u304d\u8fbc\u307f\n        fs.writeFileSync(filepath, stdout);\n        generator.next();\n    });\n}\n\n// \u9001\u4fe1\u5185\u5bb9\u5b9a\u7fa9\nfunction setSendMailInfo(filepath, generator) {\n\n    const MailParser = require('mailparser').MailParser;\n    const mailparser = new MailParser();\n\n    mailparser.on(\"end\", function(mail_object){\n        const from = mail_object.from;\n        const subject = mail_object.subject;\n        const attachments = mail_object.attachments;\n        const html = mail_object.html;\n        const text = mail_object.text;\n\n        if(attachments) {\n           // \u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u3001filename\u3092\u8a2d\u5b9a\n           for(let i = 0, max = attachments.length; i < max; i++) {\n               attachments[i].filename = attachments[i].fileName;\n           }\n        }\n\n       const sendMailInfo = {\n           from        : from,\n           subject     : subject,\n           text        : text,\n           html        : html,\n           attachments : attachments\n       };\n       generator.next(sendMailInfo);\n    });\n\n    fs.readFile(filepath, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('setSendMailInfo Error'));\n            return;\n        }\n        mailparser.write(data);\n        mailparser.end();\n    });\n}\n\n// \u9001\u4fe1\u5185\u5bb9\u4f5c\u6210\nfunction createMessage(sendMailInfo, addressInfo, generator) {\n    const mailcomposer = require('mailcomposer');\n\n    const mailOption = {\n        from         : addressInfo.sourceAddress,\n        to           : addressInfo.toAddress,\n        replyTo      : sendMailInfo.from[0].address,\n        subject      : sendMailInfo.subject,\n        html         : sendMailInfo.html,\n        text         : sendMailInfo.text,\n        textEncoding : 'quoted-printable',\n        attachments  : sendMailInfo.attachments\n    };\n\n    const mail = mailcomposer(mailOption);\n\n    mail.build(function(err, msg) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('createMessage Error'));\n            return;\n        }\n        console.log(msg);\n        generator.next(msg);\n    });\n\n}\n\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\nfunction sendRawEmail(message, generator) {\n    const ses = new AWS.SES({'region' : 'us-east-1'});\n\n    // SES\u9001\u4fe1\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n    const params = {\n        RawMessage: {\n            Data: message\n        }\n    };\n\n    console.log('Sending Email ..');\n    ses.sendRawEmail(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('SES Error'));\n            return;\n        }\n        console.log('Send Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n\n// S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b3\u30d4\u30fc\nfunction copyObject(key, bucketName, sourceAddress, generator) {\n\n    const now = new Date();\n\n    const params = {\n        CopySource: bucketName + '/' + key,\n        Bucket: bucketName,\n        Key: now + ' from ' + sourceAddress\n    };\n\n    console.log('Copying Object from ' + params.CopySource + ' to ' + params.Bucket + '/' + params.Key);\n\n    s3.copyObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('CopyObject Error'));\n            return;\n        }\n        console.log('Copied Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n\n// S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u524a\u9664\nfunction deleteObject(key, bucketName, generator) {\n\n    const params = {\n        Bucket: bucketName,\n        Key: key\n    };\n\n    console.log('Deleting Object ' + params.Bucket + '/' + params.Key);\n\n    s3.deleteObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('DeleteObject Error'));\n            return;\n        }\n        console.log('Deleted Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n\n\n\n\u4ee5\u4e0a\n2\u9031\u9593\u304f\u3089\u3044\u524d\u306b\u4fee\u6b63\u3057\u3001\u554f\u984c\u306a\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u3084\u306f\u308a\u6587\u5b57\u30b3\u30fc\u30c9\u3089\u3078\u3093\u306e\u6271\u3044\u306b\u81ea\u4fe1\u304c\u306a\u3044\u305f\u3081\u306a\u306b\u304b\u6539\u5584\u70b9\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n# \u76ee\u7684\n\u524d\u56de\u306e\u8a18\u4e8b[\u30e1\u30fc\u30eb\u30b5\u30fc\u30d0\u30fc\u3092\u6368\u3066\u3066\u3001\u554f\u3044\u5408\u308f\u305b\u53d7\u4ed8\u3092\u30b5\u30fc\u30d0\u30fc\u30ec\u30b9\u3067\u5b9f\u73fe\u3059\u308b](http://qiita.com/d-yamanaka/items/1991e9abaace2e9b9c9a)\u3067\u30e1\u30fc\u30eb\u3092\u9001\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u304c\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u3064\u3051\u308c\u306a\u304b\u3063\u305f\u305f\u3081\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u306b\u5bfe\u5fdc\u3057\u305f\u304b\u3063\u305f\uff08\u3064\u3044\u3067\u306bHTML\u30e1\u30fc\u30eb\u306b\u3082\u5bfe\u5fdc\u3055\u305b\u3066\u307f\u307e\u3057\u305f\uff09\n\n# \u524d\u56de\u304b\u3089\u306e\u5909\u66f4\u70b9\n\n- \u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\uff08\u9001\u308a\u5143\u3001\u9001\u308a\u5148\u3001\u30e1\u30fc\u30eb\u7528\u30d0\u30b1\u30c3\u30c8\uff09\u3092DynamoDB\u3078\u5916\u51fa\u3057\uff08\u6bce\u56de\u5909\u66f4\u3059\u308b\u306e\u304c\u9762\u5012\u3060\u3063\u305f\u305f\u3081\uff09\n- \u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3068HTML\u306e\u30e1\u30fc\u30eb\u306b\u5bfe\u5fdc\n- IAM\u30ed\u30fc\u30eb\u306e\u30dd\u30ea\u30b7\u30fc\u3092\u4fee\u6b63\uff08\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306b\u4f34\u3063\u3066\uff09\n\n![image](https://qiita-image-store.s3.amazonaws.com/0/40136/43f85a99-38fe-f825-5833-30c82e26d961.png)\n\n# DynamoDB\u306e\u8a2d\u5b9a\n\nus-east-1\u30ea\u30fc\u30b8\u30e7\u30f3\u306b\u300cmail_settings\u300d\u3068\u3044\u3046\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u6210\u3057\u3001\u4ee5\u4e0bitem\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\u203b\u30d7\u30e9\u30a4\u30de\u30ea\u30d1\u30fc\u30c6\u30a3\u30b7\u30e7\u30f3\u30ad\u30fc\u306f**accountId**\n\n```json:\n{\n  \"accountId\": \"<AWS Account No>\",\n  \"bucketName\": \"inquiry-bucket\",\n  \"sourceAddress\": \"no-reply@xxxx.co.jp\",\n  \"toAddress\": [\n    \"info@xxxx.co.jp\"\n  ]\n}\n```\n\n# IAM\u30ed\u30fc\u30eb\u306e\u8a2d\u5b9a\n\u30dd\u30ea\u30b7\u30fc\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u5909\u66f4\u3057\u307e\u3057\u305f\u3002\nDynamoDB\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6a29\u4ed8\u4e0e\u3068SES\u306e\u6a29\u9650\u3092\u300cSendEmail\u300d\u304b\u3089\u300cSendRawEmail\u300d\u306b\u5909\u66f4\u3002\n\n```json:inquiryPolicy\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"Stmt1474188898000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1474188915000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"s3:GetObject\",\n                \"s3:DeleteObject\",\n                \"s3:ReplicateObject\"\n            ],\n            \"Resource\": [\n                \"arn:aws:s3:::inquiry-bucket\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1474294979000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"ses:SendRawEmail\"\n            ],\n            \"Resource\": [\n                \"*\"\n            ]\n        },\n        {\n            \"Sid\": \"Stmt1476151970000\",\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"dynamodb:GetItem\"\n            ],\n            \"Resource\": [\n                \"arn:aws:dynamodb:us-east-1:<accountId>:table/mail_settings\"\n            ]\n        }\n    ]\n}\n```\n\n# \u30b3\u30fc\u30c9\u306e\u4fee\u6b63\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4fee\u6b63\u3057\u307e\u3057\u305f\u3002\nfs\u3001child_process\u3001mailparser\u3001mailcomposer\u30e2\u30b8\u30e5\u30fc\u30eb\u3068\u4e00\u7dd2\u306bzip\u5316\u3057\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```js:inquiryFunction\n'use strict';\n\nconsole.log('Loading function');\nconst AWS = require('aws-sdk');\nconst fs = require('fs');\nconst s3 = new AWS.S3();\n\nexports.handler = function(event, context, callback) {\n\n    const accountId = context.invokedFunctionArn.match(/\\d{3,}/)[0];\n    const messageId = event.Records[0].ses.mail.messageId;\n    const filepath  = '/tmp/message';\n\n\tconst generator  = (function *() {\n\n        try {\n            // DynamoDB\u304b\u3089\u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\n            const mailSettings  = yield getmailSettings(accountId, generator);\n            const bucketName    = mailSettings.bucketName;\n            const addressInfo   = {\n                toAddress       : mailSettings.toAddress,\n                sourceAddress   : mailSettings.sourceAddress\n            };\n\n            // S3\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\n            const s3Object = yield getObject(messageId, bucketName, generator);\n\n            // Get\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u66f8\u304d\u8fbc\u307f\n            fs.writeFileSync(filepath, String(s3Object.Body));\n\n            // \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\n            yield encodingMessage(filepath, generator);\n\n            // \u9001\u4fe1\u5185\u5bb9\u5b9a\u7fa9\n            const sendMailInfo = yield setSendMailInfo(filepath, generator);\n\n            // \u9001\u4fe1\u5185\u5bb9\u4f5c\u6210\n            const message = yield createMessage(sendMailInfo, addressInfo, generator);\n\n            // \u30e1\u30c3\u30bb\u30fc\u30b8\u9001\u4fe1\n            yield sendRawEmail(message, generator);\n\n            // S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30ad\u30fc\u66f8\u304d\u63db\u3048\n            yield copyObject(messageId, bucketName, sendMailInfo.from[0].address, generator);\n            yield deleteObject(messageId, bucketName, generator);\n\n\t\t\tcallback(null,'succeed!');\n\n\t\t} catch (e) {\n\t\t    callback(e.message);\n\t\t}\n\t})();\n\n\t/* \u51e6\u7406\u958b\u59cb */\n\tgenerator.next();\n};\n\n// DynamoDB\u304b\u3089\u30e1\u30fc\u30eb\u306e\u8a2d\u5b9a\u60c5\u5831\u3092\u53d6\u5f97\nfunction getmailSettings(accountId, generator) {\n\n    const docClient = new AWS.DynamoDB.DocumentClient();\n    const table = 'mail_settings';\n\n    const params = {\n        TableName: table,\n        Key: {\n            'accountId': accountId\n        }\n    };\n\n    docClient.get(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n\t\t\tgenerator.throw(new Error('getmailSettings Error'));\n\t\t\treturn;\n        }\n        console.log('got mailSettings');\n        generator.next(data.Item);\n    });\n}\n\n// S3\u304b\u3089\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\u3059\u308b\nfunction getObject(messageId, bucketName, generator) {\n\n    const params = {\n        Bucket: bucketName,\n        Key: messageId\n    };\n\n    console.log('Getting object from ' + bucketName);\n\n    s3.getObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n\t\t\tgenerator.throw(new Error('getObject Error'));\n\t\t\treturn;\n        }\n        console.log('Got object');\n        generator.next(data);\n    });\n}\n\n// \u30a8\u30f3\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\nfunction encodingMessage(filepath, generator) {\n    const exec = require('child_process').exec;\n    const cmd  = 'iconv -f iso-2022-jp -t utf-8 ' + filepath;\n\n    console.log('encoding command is ' + cmd);\n\n    const child = exec(cmd, function(err, stdout, stderr) {\n        if(err) {\n            console.log(err, err.stack);\n\t\t\tgenerator.throw(new Error('encoding Error'));\n\t\t\treturn;\n        }\n        console.log(stdout);\n        // \u518d\u5ea6\u66f8\u304d\u8fbc\u307f\n        fs.writeFileSync(filepath, stdout);\n        generator.next();\n    });\n}\n\n// \u9001\u4fe1\u5185\u5bb9\u5b9a\u7fa9\nfunction setSendMailInfo(filepath, generator) {\n\n    const MailParser = require('mailparser').MailParser;\n    const mailparser = new MailParser();\n\n    mailparser.on(\"end\", function(mail_object){\n        const from = mail_object.from;\n        const subject = mail_object.subject;\n        const attachments = mail_object.attachments;\n        const html = mail_object.html;\n        const text = mail_object.text;\n\n        if(attachments) {\n           // \u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u304c\u3042\u308b\u5834\u5408\u3001filename\u3092\u8a2d\u5b9a\n           for(let i = 0, max = attachments.length; i < max; i++) {\n               attachments[i].filename = attachments[i].fileName;\n           }\n        }\n\n       const sendMailInfo = {\n           from        : from,\n           subject     : subject,\n           text        : text,\n           html        : html,\n           attachments : attachments\n       };\n       generator.next(sendMailInfo);\n    });\n\n    fs.readFile(filepath, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('setSendMailInfo Error'));\n            return;\n        }\n        mailparser.write(data);\n        mailparser.end();\n    });\n}\n\n// \u9001\u4fe1\u5185\u5bb9\u4f5c\u6210\nfunction createMessage(sendMailInfo, addressInfo, generator) {\n    const mailcomposer = require('mailcomposer');\n\n    const mailOption = {\n        from         : addressInfo.sourceAddress,\n        to           : addressInfo.toAddress,\n        replyTo      : sendMailInfo.from[0].address,\n        subject      : sendMailInfo.subject,\n        html         : sendMailInfo.html,\n        text         : sendMailInfo.text,\n        textEncoding : 'quoted-printable',\n        attachments  : sendMailInfo.attachments\n    };\n\n    const mail = mailcomposer(mailOption);\n\n    mail.build(function(err, msg) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('createMessage Error'));\n            return;\n        }\n        console.log(msg);\n        generator.next(msg);\n    });\n\n}\n\n// \u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3059\u308b\nfunction sendRawEmail(message, generator) {\n    const ses = new AWS.SES({'region' : 'us-east-1'});\n\n    // SES\u9001\u4fe1\u7528\u30d1\u30e9\u30e1\u30fc\u30bf\n    const params = {\n        RawMessage: {\n            Data: message\n        }\n    };\n\n    console.log('Sending Email ..');\n    ses.sendRawEmail(params, function(err, data) {\n        if (err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('SES Error'));\n            return;\n        }\n        console.log('Send Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n\n// S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b3\u30d4\u30fc\nfunction copyObject(key, bucketName, sourceAddress, generator) {\n\n    const now = new Date();\n\n    const params = {\n        CopySource: bucketName + '/' + key,\n        Bucket: bucketName,\n        Key: now + ' from ' + sourceAddress\n    };\n\n    console.log('Copying Object from ' + params.CopySource + ' to ' + params.Bucket + '/' + params.Key);\n\n    s3.copyObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('CopyObject Error'));\n            return;\n        }\n        console.log('Copied Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n\n// S3\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u524a\u9664\nfunction deleteObject(key, bucketName, generator) {\n\n    const params = {\n        Bucket: bucketName,\n        Key: key\n    };\n\n    console.log('Deleting Object ' + params.Bucket + '/' + params.Key);\n\n    s3.deleteObject(params, function(err, data) {\n        if(err) {\n            console.log(err, err.stack);\n            generator.throw(new Error('DeleteObject Error'));\n            return;\n        }\n        console.log('Deleted Successful');\n        console.log(data);\n        generator.next();\n    });\n}\n```\n\n# \u4ee5\u4e0a\n2\u9031\u9593\u304f\u3089\u3044\u524d\u306b\u4fee\u6b63\u3057\u3001\u554f\u984c\u306a\u304f\u52d5\u3044\u3066\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001\u3084\u306f\u308a\u6587\u5b57\u30b3\u30fc\u30c9\u3089\u3078\u3093\u306e\u6271\u3044\u306b\u81ea\u4fe1\u304c\u306a\u3044\u305f\u3081\u306a\u306b\u304b\u6539\u5584\u70b9\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff01\n", "tags": ["lambda", "ses", "Node.js", "S3", "mail"]}