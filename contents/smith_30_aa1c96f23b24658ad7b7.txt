{"tags": ["PHP", "PHPUnit"], "context": "\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n\u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n\u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u306e\u8907\u5408\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u2460\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u304c\u8907\u5408\u3057\u305f\u5834\u5408\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 (\u30b9\u30da\u30a2)\n     * 4\u6295\u76ee: 3\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testStrikeAndSpare()\n    {\n        $this->BowlingGame->recordShot(10); //10+(5+5)\n        $this->BowlingGame->recordShot(5); //5\n        $this->BowlingGame->recordShot(5); //5+(3)\n        $this->BowlingGame->recordShot(3); //3\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(36, $this->BowlingGame->calculateScore());\n    }\n\n\n\u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\nFAILURES!\nTests: 8, Assertions: 8, Failures: 1.\n\n\n\u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(\u6700\u5c0f\u306e\u69cb\u6210\u3067)\n\u2460 \u539f\u56e0: \u30b9\u30da\u30a2\u306e\u5224\u5b9a\u304c\u304a\u304b\u3057\u3044\n\n\u73fe\u72b62\u6295\u76ee\u3057\u304b\u30b9\u30da\u30a2\u306e\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\n\n\u2461 \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u4f55\u6295\u76ee\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u3044\u308b\u5909\u6570\u3092\u30ea\u30bb\u30c3\u30c8\n\u6b21\u306e\u6295\u7403\u304c1\u6295\u76ee\u3068\u3057\u3066\u5224\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n\n            $this->shotNo = 0;\n\n            if ($this->strikeBonusCount !== 0) {\n                $this->doubleBonusCount = 2;\n            }\n\n            if ($this->strikeBonusCount === 0) {\n                $this->strikeBonusCount = 2;\n            }\n        }\n    }\n\n\u2462 \u30c6\u30b9\u30c8\nOK (8 tests, 8 assertions)\n\n\n\u30c0\u30d6\u30eb\u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u306e\u8907\u5408\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u2461\n\n\u30c6\u30b9\u30c8\u3092\u66f8\u304f\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u304c\u8907\u5408\u3057\u305f\u5834\u5408\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 (\u30b9\u30da\u30a2)\n     * 4\u6295\u76ee: 3\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testStrikeAndSpare()\n    {\n        $this->BowlingGame->recordShot(10); //10+(5+5)\n        $this->BowlingGame->recordShot(5); //5\n        $this->BowlingGame->recordShot(5); //5+(3)\n        $this->BowlingGame->recordShot(3); //3\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(36, $this->BowlingGame->calculateScore());\n    }\n\n\n\u5b9f\u884c\nOK (9 tests, 9 assertions)\n\n\n\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\u3000\u3000/**\n     * \u30dc\u30fc\u30ea\u30f3\u30b0\u306e1\u6295\u7403\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3055\u305b\u308b\n     *\n     * @param int    $pin [description]\n     * @return void\n     */\n    public function recordShot(int $pin)\n    {\n        \u30fb\u30fb\u30fb\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrike($pin);\n\n        \u30fb\u30fb\u30fb\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n\n\u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u3092\u5206\u89e3\u3059\u308b\n    /**\n     * \u30dc\u30fc\u30ea\u30f3\u30b0\u306e1\u6295\u7403\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3055\u305b\u308b\n     *\n     * @param int    $pin [description]\n     * @return void\n     */\n    public function recordShot(int $pin)\n    {\n        \u30fb\u30fb\u30fb\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrikeBonus($pin);\n\n        $this->calculateDoubleBonus($pin);\n\n        \u30fb\u30fb\u30fb\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrikeBonus(int $pin)\n    {\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30c0\u30d6\u30eb\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateDoubleBonus(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n    }\n\n\n\n\u30c6\u30b9\u30c8\nOK (9 tests, 9 assertions)\n\n\u6b21\u56de\u306f\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\u3002\u3002\n\u3053\u308c\u304b\u3089\u306f\u3058\u3081\u308bTDD \u30c6\u30b9\u30c8\u99c6\u52d5\u958b\u767a\u5165\u9580 ThinkIT Books \u3088\u308a\n\n# \u30dc\u30fc\u30ea\u30f3\u30b0\u306e\u70b9\u6570\u8a08\u7b97\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u4f5c\u308b\n\n## \u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u306e\u8907\u5408\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u2460\n\nBowlingGameTest\u306b\u4ee5\u4e0b\u306e\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\n\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u304c\u8907\u5408\u3057\u305f\u5834\u5408\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 (\u30b9\u30da\u30a2)\n     * 4\u6295\u76ee: 3\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testStrikeAndSpare()\n    {\n        $this->BowlingGame->recordShot(10); //10+(5+5)\n        $this->BowlingGame->recordShot(5); //5\n        $this->BowlingGame->recordShot(5); //5+(3)\n        $this->BowlingGame->recordShot(3); //3\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(36, $this->BowlingGame->calculateScore());\n    }\n```\n\n### \u5b9f\u884c\u3057\u3066\u6012\u3089\u308c\u308b\n\n```bash\nFAILURES!\nTests: 8, Assertions: 8, Failures: 1.\n```\n\n### \u30c6\u30b9\u30c8\u304c\u901a\u308b\u3088\u3046\u306b\u51e6\u7406\u3092\u66f8\u304f(__\u6700\u5c0f\u306e\u69cb\u6210\u3067__)\n\n\u2460 \u539f\u56e0: \u30b9\u30da\u30a2\u306e\u5224\u5b9a\u304c\u304a\u304b\u3057\u3044\n\n- \u73fe\u72b62\u6295\u76ee\u3057\u304b\u30b9\u30da\u30a2\u306e\u5224\u5b9a\u3092\u3057\u3066\u3044\u306a\u3044\n\n\n\u2461 \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u4f55\u6295\u76ee\u304b\u3069\u3046\u304b\u5224\u5b9a\u3057\u3066\u3044\u308b\u5909\u6570\u3092\u30ea\u30bb\u30c3\u30c8\n\u6b21\u306e\u6295\u7403\u304c1\u6295\u76ee\u3068\u3057\u3066\u5224\u5b9a\u3055\u308c\u308b\u3088\u3046\u306b\u3059\u308b\n\n```php\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306b\u30dc\u30fc\u30ca\u30b9\u7ba1\u7406\u306e\u5909\u6570\u3092\u30bb\u30c3\u30c8\n     * @param  int     $pin [description]\n     * @return void      [description]\n     */\n    private function isStrike(int $pin)\n    {\n        if ($pin === 10) {\n\n            $this->shotNo = 0;\n\n            if ($this->strikeBonusCount !== 0) {\n                $this->doubleBonusCount = 2;\n            }\n\n            if ($this->strikeBonusCount === 0) {\n                $this->strikeBonusCount = 2;\n            }\n        }\n    }\n```\n\n\u2462 \u30c6\u30b9\u30c8\n\n```bash\nOK (8 tests, 8 assertions)\n```\n\n## \u30c0\u30d6\u30eb\u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u306e\u8907\u5408\u30c6\u30b9\u30c8\u30b1\u30fc\u30b9\u2461\n\n### \u30c6\u30b9\u30c8\u3092\u66f8\u304f\n\n```php\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u3068\u30b9\u30da\u30a2\u304c\u8907\u5408\u3057\u305f\u5834\u5408\u306e\u30b1\u30fc\u30b9\n     *\n     * 1\u6295\u76ee: \u30b9\u30c8\u30e9\u30a4\u30af\n     * 2\u6295\u76ee: 5\n     * 3\u6295\u76ee: 5 (\u30b9\u30da\u30a2)\n     * 4\u6295\u76ee: 3\n     *\n     * \u6b8b\u308a\u30ac\u30bf\u30fc\n     *\n     */\n    public function testStrikeAndSpare()\n    {\n        $this->BowlingGame->recordShot(10); //10+(5+5)\n        $this->BowlingGame->recordShot(5); //5\n        $this->BowlingGame->recordShot(5); //5+(3)\n        $this->BowlingGame->recordShot(3); //3\n\n        $this->loopRecordShot(15, 0);\n\n        $this->assertEquals(36, $this->BowlingGame->calculateScore());\n    }\n```\n\n### \u5b9f\u884c\n```bash\nOK (9 tests, 9 assertions)\n```\n\n## \u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\n\n```php\n\u3000\u3000/**\n     * \u30dc\u30fc\u30ea\u30f3\u30b0\u306e1\u6295\u7403\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3055\u305b\u308b\n     *\n     * @param int    $pin [description]\n     * @return void\n     */\n    public function recordShot(int $pin)\n    {\n        \u30fb\u30fb\u30fb\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrike($pin);\n\n        \u30fb\u30fb\u30fb\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrike(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n```\n\n### \u30b9\u30c8\u30e9\u30a4\u30af\u306e\u30dc\u30fc\u30ca\u30b9\u8a08\u7b97\u3092\u5206\u89e3\u3059\u308b\n\n```php\n    /**\n     * \u30dc\u30fc\u30ea\u30f3\u30b0\u306e1\u6295\u7403\u306e\u8a08\u7b97\u3092\u5b9f\u884c\u3055\u305b\u308b\n     *\n     * @param int    $pin [description]\n     * @return void\n     */\n    public function recordShot(int $pin)\n    {\n        \u30fb\u30fb\u30fb\n\n        $this->calculateSpare($pin);\n\n        $this->calculateStrikeBonus($pin);\n\n        $this->calculateDoubleBonus($pin);\n\n        \u30fb\u30fb\u30fb\n    }\n\n    /**\n     * \u30b9\u30c8\u30e9\u30a4\u30af\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateStrikeBonus(int $pin)\n    {\n        if ($this->strikeBonusCount > 0) {\n            $this->score += $pin;\n            --$this->strikeBonusCount;\n        }\n    }\n\n    /**\n     * \u30c0\u30d6\u30eb\u6642\u306e\u5f97\u70b9\u8a08\u7b97\n     * @param  int    $pin [description]\n     * @return void      [description]\n     */\n    private function calculateDoubleBonus(int $pin)\n    {\n        if ($this->doubleBonusCount > 0) {\n            $this->score += $pin;\n            --$this->doubleBonusCount;\n        }\n    }\n\n```\n\n### \u30c6\u30b9\u30c8\n\n```bash\nOK (9 tests, 9 assertions)\n```\n\n\u6b21\u56de\u306f\u30d5\u30ec\u30fc\u30e0\u3054\u3068\u306e\u30b9\u30b3\u30a2\u3092\u8a08\u7b97\u3059\u308b\u6a5f\u80fd\u3092\u5b9f\u88c5\u3002\u3002\u3002\n"}