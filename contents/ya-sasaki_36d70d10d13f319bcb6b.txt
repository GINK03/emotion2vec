{"tags": ["FuelPHP", "PHP"], "context": " More than 1 year has passed since last update.Production, Staging, Development\u3068Config\u30d5\u30a1\u30a4\u30eb\u3092\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n(app/config\u4e0b\u306b\u7f6e\u3044\u3066\u304a\u304f\u3068\u958b\u767a\u74b0\u5883\u306e\u5909\u66f4\u304c\u4ed6\u306e\u74b0\u5883\u306b\u3082\u9069\u7528\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081)\n\u3067\u3059\u304c\u3001Fuel::$env\u306eConfig\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u3042\u308bConfig\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\u4e8b\u8c61\u3092\u6574\u7406\u3059\u308b\u3068\n\uff11\uff0e\u8aad\u8fbc\u306f\u3067\u304d\u308b\n\u3000Fuel::$env\u304c\"production\"\u3067\u3001app/config/hoge.php\u3068app/config/production/hoge.php\u304c\u3042\u3063\u305f\u5834\u5408\u3001app/config/production/hoge.php\u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n\uff12\uff0e\u66f8\u8fbc\u307f\u5bfe\u8c61\u304capp/config\u4e0b\u306b\n\u3000Fuel::$env\u304c\"production\"\u3067\u3001Config::save()\u3057\u305f\u5834\u5408\u3001app/config/hoge.php\u304c\u66f4\u65b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002app/config/hoge.php\u304c\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u4f5c\u3063\u3066\u3057\u307e\u3046\u3002\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u3001Fuel/Core/Config_File\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u307f\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306f\u4e00\u90e8\u629c\u7c8b\n\nfuel/core/classes/config/file.php\n    /**\n     * Formats the output and saved it to disc.\n     *\n     * @param   $contents  $contents    config array to save\n     * @return  bool       \\File::update result\n     */\n    public function save($contents)\n    {\n        // get the formatted output\n        $output = $this->export_format($contents);\n\n        if ( ! $output)\n        {\n            return false;\n        }\n\n        if ( ! $path = \\Finder::search('config', $this->file, $this->ext))\n        {\n            if ($pos = strripos($this->file, '::'))\n            {\n                // get the namespace path\n                if ($path = \\Autoloader::namespace_path('\\\\'.ucfirst(substr($this->file, 0, $pos))))\n                {\n                    // strip the namespace from the filename\n                    $this->file = substr($this->file, $pos+2);\n\n                    // strip the classes directory as we need the module root\n                    $path = substr($path,0, -8).'config'.DS.$this->file;\n                }\n                else\n                {\n                    // invalid namespace requested\n                    return false;\n                }\n            }\n        }\n\n        // absolute path requested?\n        if ($this->file[0] === '/' or (isset($this->file[1]) and $this->file[1] === ':'))\n        {\n            $path = $this->file;\n        }\n\n        // make sure we have a fallback\n        $path or $path = APPPATH.'config'.DS.$this->file.$this->ext;\n\n        $path = pathinfo($path);\n        if ( ! is_dir($path['dirname']))\n        {\n            mkdir($path['dirname'], 0777, true);\n        }\n\n        return \\File::update($path['dirname'], $path['basename'], $output);\n    }\n\n\nFuel::$env\u3068\u304b\u4e00\u5207\u4f7f\u3063\u3066\u306a\u3044\u3067\u3059\u306d\u3002\nAutoloader\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001Fuel/Core/Config_File\u306f\u62bd\u8c61\u30af\u30e9\u30b9\u3002(\u3050\u306c\u306c\u30fb\u30fb\u30fb)\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067Fuel/Core/Config_Php\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\nfuel/app/classes/core/config_php.php\n\n<?php\n/*\n * Copyright (c) 2013 Yasuyuki Sasaki\n * This software is released under the MIT License.\n * http://opensource.org/licenses/mit-license.php\n */\nclass Config_Php extends \\Fuel\\Core\\Config_Php\n{\n    /**\n     * Formats the output and saved it to disc.\n     *\n     * @param   $contents  $contents    config array to save\n     * @return  bool       \\File::update result\n     */\n    public function save($contents)\n    {\n        // get the formatted output\n        $output = $this->export_format($contents);\n\n        if ( ! $output)\n        {\n            return false;\n        }\n\n        // Fuel::$env\u304b\u3089\u63a2\u3057\u306b\u3044\u304f\n        $path = \\Finder::search('config'.DS.Fuel::$env, $this->file, $this->ext);\n        // \u306a\u304b\u3063\u305f\u3089app/config\u304b\u3089\n        $path or $path = \\Finder::search('config', $this->file, $this->ext);\n\n        if (!$path)\n        {\n            if ($pos = strripos($this->file, '::'))\n            {\n                // get the namespace path\n                if ($path = \\Autoloader::namespace_path('\\\\'.ucfirst(substr($this->file, 0, $pos))))\n                {\n                    // strip the namespace from the filename\n                    $this->file = substr($this->file, $pos+2);\n\n                    // strip the classes directory as we need the module root\n                    $path = substr($path,0, -8).'config'.DS.$this->file;\n                }\n                else\n                {\n                    // invalid namespace requested\n                    return false;\n                }\n            }\n        }\n\n        // absolute path requested?\n        if ($this->file[0] === '/' or (isset($this->file[1]) and $this->file[1] === ':'))\n        {\n            $path = $this->file;\n        }\n\n        // make sure we have a fallback\n        $path or $path = APPPATH.'config'.DS.$this->file.$this->ext;\n\n        $path = pathinfo($path);\n        if ( ! is_dir($path['dirname']))\n        {\n            mkdir($path['dirname'], 0777, true);\n        }\n        return \\File::update($path['dirname'], $path['basename'], $output);\n    }\n}\n\n\n\n\napp/bootstrap.php\nAutoloader::add_classes(array(\n    'Config_Php'          => __DIR__.'/classes/core/config_php.php', // \u8ffd\u52a0\n));\n\n\n\u30a4\u30b1\u3066\u306a\u3044\u70b9\u304c\u3001json\u3084yml\u3082\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u540c\u3058\u3088\u3046\u306bConfig_Json\u3084Config_Yml\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u70b9\u3002\n\u672c\u5f53\u306fFuel/Core/Config_File\u3092\u76f4\u3057\u3066\u30d7\u30eb\u30ea\u30af\u3059\u308b\u306e\u304c\u3044\u3044\u3093\u3060\u308d\u3046\u3051\u3069\u3001\u3053\u3093\u306a\u3093\u3067\u307b\u3093\u3068\u306b\u3044\u3044\u306e\u304b\u81ea\u4fe1\u306a\u3044\u3002\nProduction, Staging, Development\u3068Config\u30d5\u30a1\u30a4\u30eb\u3092\u74b0\u5883\u306b\u5408\u308f\u305b\u3066\u5206\u3051\u3066\u3044\u307e\u3059\u3002\n(app/config\u4e0b\u306b\u7f6e\u3044\u3066\u304a\u304f\u3068\u958b\u767a\u74b0\u5883\u306e\u5909\u66f4\u304c\u4ed6\u306e\u74b0\u5883\u306b\u3082\u9069\u7528\u3055\u308c\u3066\u3057\u307e\u3046\u305f\u3081)\n\n\u3067\u3059\u304c\u3001Fuel::$env\u306eConfig\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u3042\u308bConfig\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\n\u4e8b\u8c61\u3092\u6574\u7406\u3059\u308b\u3068\n\n\uff11\uff0e\u8aad\u8fbc\u306f\u3067\u304d\u308b\n\u3000Fuel::$env\u304c\"production\"\u3067\u3001app/config/hoge.php\u3068app/config/production/hoge.php\u304c\u3042\u3063\u305f\u5834\u5408\u3001app/config/production/hoge.php\u304c\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u307e\u3059\u3002\n\n\uff12\uff0e\u66f8\u8fbc\u307f\u5bfe\u8c61\u304capp/config\u4e0b\u306b\n\u3000Fuel::$env\u304c\"production\"\u3067\u3001Config::save()\u3057\u305f\u5834\u5408\u3001app/config/hoge.php\u304c\u66f4\u65b0\u3055\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u3002app/config/hoge.php\u304c\u306a\u304f\u3066\u3082\u52dd\u624b\u306b\u4f5c\u3063\u3066\u3057\u307e\u3046\u3002\n\n\u4e0a\u8a18\u3092\u8e0f\u307e\u3048\u3066\u3001Fuel/Core/Config_File\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u307f\u307e\u3057\u305f\u3002\n\u4ee5\u4e0b\u306f\u4e00\u90e8\u629c\u7c8b\n\n```php:fuel/core/classes/config/file.php\n\t/**\n\t * Formats the output and saved it to disc.\n\t *\n\t * @param   $contents  $contents    config array to save\n\t * @return  bool       \\File::update result\n\t */\n\tpublic function save($contents)\n\t{\n\t\t// get the formatted output\n\t\t$output = $this->export_format($contents);\n\n\t\tif ( ! $output)\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( ! $path = \\Finder::search('config', $this->file, $this->ext))\n\t\t{\n\t\t\tif ($pos = strripos($this->file, '::'))\n\t\t\t{\n\t\t\t\t// get the namespace path\n\t\t\t\tif ($path = \\Autoloader::namespace_path('\\\\'.ucfirst(substr($this->file, 0, $pos))))\n\t\t\t\t{\n\t\t\t\t\t// strip the namespace from the filename\n\t\t\t\t\t$this->file = substr($this->file, $pos+2);\n\n\t\t\t\t\t// strip the classes directory as we need the module root\n\t\t\t\t\t$path = substr($path,0, -8).'config'.DS.$this->file;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t// invalid namespace requested\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// absolute path requested?\n\t\tif ($this->file[0] === '/' or (isset($this->file[1]) and $this->file[1] === ':'))\n\t\t{\n\t\t\t$path = $this->file;\n\t\t}\n\n\t\t// make sure we have a fallback\n\t\t$path or $path = APPPATH.'config'.DS.$this->file.$this->ext;\n\n\t\t$path = pathinfo($path);\n\t\tif ( ! is_dir($path['dirname']))\n\t\t{\n\t\t\tmkdir($path['dirname'], 0777, true);\n\t\t}\n\n\t\treturn \\File::update($path['dirname'], $path['basename'], $output);\n\t}\n```\n\nFuel::$env\u3068\u304b\u4e00\u5207\u4f7f\u3063\u3066\u306a\u3044\u3067\u3059\u306d\u3002\nAutoloader\u3067\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u3088\u3046\u3068\u601d\u3044\u307e\u3057\u305f\u304c\u3001Fuel/Core/Config_File\u306f\u62bd\u8c61\u30af\u30e9\u30b9\u3002(\u3050\u306c\u306c\u30fb\u30fb\u30fb)\n\u4ed5\u65b9\u304c\u306a\u3044\u306e\u3067Fuel/Core/Config_Php\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\n\n```php:fuel/app/classes/core/config_php.php\n\n<?php\n/*\n * Copyright (c) 2013 Yasuyuki Sasaki\n * This software is released under the MIT License.\n * http://opensource.org/licenses/mit-license.php\n */\nclass Config_Php extends \\Fuel\\Core\\Config_Php\n{\n    /**\n     * Formats the output and saved it to disc.\n     *\n     * @param   $contents  $contents    config array to save\n     * @return  bool       \\File::update result\n     */\n    public function save($contents)\n    {\n        // get the formatted output\n        $output = $this->export_format($contents);\n\n        if ( ! $output)\n        {\n            return false;\n        }\n\n        // Fuel::$env\u304b\u3089\u63a2\u3057\u306b\u3044\u304f\n        $path = \\Finder::search('config'.DS.Fuel::$env, $this->file, $this->ext);\n        // \u306a\u304b\u3063\u305f\u3089app/config\u304b\u3089\n        $path or $path = \\Finder::search('config', $this->file, $this->ext);\n\n        if (!$path)\n        {\n            if ($pos = strripos($this->file, '::'))\n            {\n                // get the namespace path\n                if ($path = \\Autoloader::namespace_path('\\\\'.ucfirst(substr($this->file, 0, $pos))))\n                {\n                    // strip the namespace from the filename\n                    $this->file = substr($this->file, $pos+2);\n\n                    // strip the classes directory as we need the module root\n                    $path = substr($path,0, -8).'config'.DS.$this->file;\n                }\n                else\n                {\n                    // invalid namespace requested\n                    return false;\n                }\n            }\n        }\n\n        // absolute path requested?\n        if ($this->file[0] === '/' or (isset($this->file[1]) and $this->file[1] === ':'))\n        {\n            $path = $this->file;\n        }\n\n        // make sure we have a fallback\n        $path or $path = APPPATH.'config'.DS.$this->file.$this->ext;\n\n        $path = pathinfo($path);\n        if ( ! is_dir($path['dirname']))\n        {\n            mkdir($path['dirname'], 0777, true);\n        }\n        return \\File::update($path['dirname'], $path['basename'], $output);\n    }\n}\n\n```\n\n```php:app/bootstrap.php\nAutoloader::add_classes(array(\n    'Config_Php'          => __DIR__.'/classes/core/config_php.php', // \u8ffd\u52a0\n));\n```\n\n\u30a4\u30b1\u3066\u306a\u3044\u70b9\u304c\u3001json\u3084yml\u3082\u4f7f\u3044\u305f\u3044\u5834\u5408\u306f\u3001\u540c\u3058\u3088\u3046\u306bConfig_Json\u3084Config_Yml\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u70b9\u3002\n\u672c\u5f53\u306fFuel/Core/Config_File\u3092\u76f4\u3057\u3066\u30d7\u30eb\u30ea\u30af\u3059\u308b\u306e\u304c\u3044\u3044\u3093\u3060\u308d\u3046\u3051\u3069\u3001\u3053\u3093\u306a\u3093\u3067\u307b\u3093\u3068\u306b\u3044\u3044\u306e\u304b\u81ea\u4fe1\u306a\u3044\u3002"}