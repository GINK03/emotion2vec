{"context": "\u7279\u306b\u96e3\u3057\u304f\u306f\u306a\u3044\u304c\u3001\u4eca\u5f8c\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u59cb\u3081\u308b\u305f\u3073\u306b\u8003\u3048\u305a\u306b\u30b3\u30d4\u30da\u3067\u6e08\u307e\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u8a18\u9332\u306b\u6b8b\u3057\u3066\u304a\u304f\u3002\nAngular2\u3068Firebase hosting\u3067SPA\u958b\u767a\u74b0\u5883\u3092\u6574\u3048\u308b\n\u306e\u7d9a\u7de8\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\nAngularDart(SPA)\u304b\u3089Firebase Authentication\u3092\u884c\u3044\u305f\u3044\nBackend server\u306eAuthorization\u3092\u884c\u3044\u305f\u3044\nAuthentication\u304c\u5fc5\u8981\u306a\u30da\u30fc\u30b8\u3068\u5fc5\u8981\u306a\u3044\u30da\u30fc\u30b8\u304c\u6df7\u5728\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\n\n\n\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\nhttps://github.com/ntaoo/ng2_firebase_gcp/tree/master/authentication\n\nConsole\u3092\u64cd\u4f5c\u3057\u3066Authentication Provider\u3092\u6709\u52b9\u5316\u3059\u308b\nSIGN-IN METHOD\u3067Authentication\u306b\u4f7f\u7528\u3059\u308bProvider\u6709\u52b9\u5316\u3059\u308b\u3002\u4eca\u56de\u306fGoogle\u306e\u307f\u306b\u3059\u308b\u304c\u4ed6\u306eProvider\u3067\u3082\u7279\u306b\u3064\u307e\u3065\u304b\u306a\u3044\u306f\u305a\u3002\n\n\nFirebase Package\nfirebase package\u3092\u4f7f\u7528\u3059\u308b\u3002(firebase3 package\u306e\u4f5c\u8005\u306e\u5354\u529b\u3067\u3001firebase3\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u304c\u518d\u3073firebase/firebase-dart\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b)\nfirebase script tag\u3092html>head\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3053\u3068\u3002\n\nFirebaseService\nFirebase API\u3092AngularDart\u3067\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001Service\u306b\u3057\u3066AppComponent\u306eprovider\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\nfirebase_service.dart\nimport 'package:angular2/angular2.dart';\nimport 'package:firebase3/firebase.dart' as firebase;\n\n@Injectable()\nclass FirebaseService {\n  final firebase.Auth auth;\n\n  factory FirebaseService() {\n    firebase.initializeApp(\n        apiKey: \" AIzaSyCIQNJV-TFRl9BK_9hVuS8lkgMxD69_Z0A\",\n        authDomain: \"ng2-firebase-gcp.firebaseapp.com\",\n        databaseURL: \"https://ng2-firebase-gcp.firebaseio.com\",\n        storageBucket: \"ng2-firebase-gcp.appspot.com\");\n    return new FirebaseService._(firebase.auth());\n  }\n  FirebaseService._(this.auth);\n}\n\n\n\nAuthService\nFirebaseService\u306b\u4f9d\u5b58\u3057\u3066\u3053\u306eSPA\u30a2\u30d7\u30ea\u306eauth\u3092\u62c5\u5f53\u3059\u308bservice\u3082\u4f5c\u6210\u3057\u3001\u540c\u3058\u304fAppComponent\u306eprovider\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\nauth_service.dart\n/// \u524d\u7565\n@Injectable()\nclass AuthService {\n  final firebase.Auth _auth;\n  final StreamController<bool> _onAuthStateChangedController;\n\n  /// Nullable. If null, it means that firebase authentication process has not been completed yet (intermediate state).\n  User user;\n\n  /// This getter doesn't care the intermediate state. Use [checkUserAuthenticated()] if that state is possibility.\n  bool get isUserAuthenticated => user is AuthenticatedUser;\n  Stream<bool> get onAuthStateChanged => _onAuthStateChangedController.stream;\n\n  AuthService(FirebaseService firebaseService)\n      : _auth = firebaseService.auth,\n        _onAuthStateChangedController = new StreamController<bool>.broadcast() {\n    _listenFirebaseOnAuthStateChanged();\n  }\n/// \u5f8c\u7565\n\n\n\nSign In\nFirebase\u306eSign In\u306b\u306f\u3001SignInWithPopup\u3068SignInWithRedirect\u306e\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\nSignInWithPopup\u306fSPA\u30a2\u30d7\u30ea\u306e\u540c\u4e00\u30da\u30fc\u30b8\u306e\u307e\u307eConsent Screen\u304cPopup\u3059\u308b\u5236\u5fa1\u30d5\u30ed\u30fc\u3068\u306a\u308a\u3001SignInWithRedirect\u306fConsent Screen\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3057\u305f\u3042\u3068\u3001\u5143\u306eSPA\u30a2\u30d7\u30ea\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u5236\u5fa1\u30d5\u30ed\u30fc\u3068\u306a\u308b\u3002\nSignInWithPopup\u306f\u30da\u30fc\u30b8\u9077\u79fb\u3057\u306a\u3044\u305f\u3081Sign In\u30d5\u30ed\u30fc\u306e\u5236\u5fa1\u304c\u3057\u3084\u3059\u3044\u3002\u305f\u3060\u3057\u3001Mobile Web\u3067\u306eUX\u3092\u8003\u616e\u3059\u308b\u5834\u5408\u306fSignInWithRedirect\u3092\u9078\u629e\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3002\n\u4eca\u56de\u306f\u4e21\u65b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3066\u3044\u308b\u3002\n\nSignInWithPopup\n1) Firebase\u306eAPI(signInWithPopup)\u3092call\u3059\u308b\u3002(_runBackendAuthorization\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u8ff0\u306e\u300cBackend server\u306eAuthorization\u300d\u3092\u53c2\u7167)\n\nauth_service.dart\n  // Assuming only google auth on this example.\n  Future signInWithPopup() async {\n    var credential =\n        await _auth.signInWithPopup(new firebase.GoogleAuthProvider());\n    return _runBackendAuthorization(credential);\n  }\n\n\n2) AuthService\u306econstructor body\u3067listen\u3057\u3066\u304a\u3044\u305f\u3001firebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u3002\n\nauth_service.dart\n  void _listenFirebaseOnAuthStateChanged() {\n    _auth.onAuthStateChanged.listen((firebase.AuthEvent event) {\n      _handleOnAuthStateChanged(event);\n      _onAuthStateChangedController.add(isUserAuthenticated);\n    });\n  }\n\n  void _handleOnAuthStateChanged(firebase.AuthEvent event) {\n    var u = event.user;\n    user = u != null ? new AuthenticatedUser(u) : new GuestUser();\n  }\n\n\nfirebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u306f\u4e3b\u306bsign in, sign out\u3067\u767a\u706b\u3057\u3001Sign In\u3059\u308c\u3070event.user\u304c\u5b58\u5728\u3057\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070event.user\u306fnull\u3068\u306a\u308b\u3002\n3) authentication\u6210\u529f\u5f8c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u30da\u30fc\u30b8\u9077\u79fb\u3002\n\u8a8d\u8a3c\u6e08\u307f\u30da\u30fc\u30b8\u7b49\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n\nsign_in_component.dart\n  Future<Null> signInWithPopup() async {\n    await _authService.signInWithPopup();\n    if (await _authService.checkUserAuthenticated()) _router.navigate(['Some']);\n  }\n\n\n\nSignInWithRedirect\nMobile Web\u3092\u8003\u616e\u3059\u308c\u3070\u3053\u3061\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u629e\u3059\u308b\u3079\u304d\u3060\u304c\u3001\u3044\u3063\u305f\u3093Firebase\u306b\u3088\u308b\u8a8d\u8a3c\u753b\u9762\u306b\u9077\u79fb\u3057\u3001SPA\u30a2\u30d7\u30ea\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u5834\u5408\u3001SPA\u30a2\u30d7\u30ea\u304creload\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148URL\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u8a8d\u8a3c\u5f8c\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u5225\u3059\u308b\u305f\u3081\u3001\u3042\u3089\u304b\u3058\u3081\u305d\u306e\u60c5\u5831\u3092\u4e00\u6642\u7684\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u4eca\u56de\u306f\u3001SessionStorage\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u305f\u3002\n\nsign_in_component.dart\n  Future<Null> signInWithRedirect() {\n    window.sessionStorage[_willRedirectKey] = 'true';\n    return _authService.signInWithRedirect();\n  }\n\n\nFirebase\u304b\u3089\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u305f\u3068\u304d\u3001SessionStorage\u306e\u60c5\u5831\u3092\u53c2\u7167\u3057\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u76f4\u5f8c\u306e\u8d77\u52d5\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002\n\nsign_in_component.dart\n  Future ngOnInit() {\n    return new Future.sync(() async {\n      if (_redirectedFromFirebase()) {\n        await _authService.handleSignInWithRedirectResult();\n        window.sessionStorage.remove(_willRedirectKey);\n        if (await _authService.checkUserAuthenticated()) {\n          _router.navigate(['Some']);\n        }\n      }\n    });\n  }\n\n\nfirebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u3001SignInWithPopup\u306e\u5834\u5408\u3068\u540c\u3058\u304f\u3001\u8a8d\u8a3c\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3002\n\u3053\u306e\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u5834\u5408\u306ecredential\u306fFirebase\u306egetRedirectResult() API\u3067\u53d6\u5f97\u3059\u308b\u3002\n\nauth_service.dart\n  Future handleSignInWithRedirectResult() async {\n    var credential = await _auth.getRedirectResult();\n    return _runBackendAuthorization(credential);\n  }\n\n\n\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30a2\u30d7\u30ea\u3067\u306f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5f8c\u306e\u8a8d\u8a3c\u51e6\u7406\u306e\u9593\u3001\u5168\u753b\u9762progress circle\u306a\u3069\u3092\u8868\u793a\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3002\n\nSign Out\nFirebase\u306esignOut() API\u3092call\u3059\u308b\u3060\u3051\u3002onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3059\u308b\u3002\n\nBackend server\u306eAuthorization\nFirebase\u3060\u3051\u3067\u306f\u3067\u304d\u306a\u3044\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u5225\u9014Backend server\u3092\u7528\u610f\u3057\u3001Authorization\u3057\u305f\u3044\u3002\n\u305d\u306e\u305f\u3081\u30c8\u30fc\u30af\u30f3\u3092Backend server\u306b\u6e21\u3057\u3001\u30c8\u30fc\u30af\u30f3\u3092verify\u3055\u305b\u308b\u3002\n\u9069\u5b9cserver\u5074\u306eCORS\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306fAuthorization\u30d8\u30c3\u30c0\u30fc\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u3067\u3001server\u306bCORS\u3067\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u5834\u5408\u306f\u3001'Access-Control-Allow-Headers'\u306b'Authorization'\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002\n  Future _runBackendAuthorization(firebase.UserCredential credential) async {\n    var idToken = await credential.user.getToken();\n    var client = new http.BrowserClient();\n    try {\n      return await client.post('http://localhost:9920/authorization',\n          headers: {'Authorization': idToken});\n    } catch (e) {\n      print(\"Error on '_runBackendAuthorization': $e\");\n    }\n  }\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5\u306f\u7701\u7565\u3002\n\u3044\u304f\u3064\u304b\u306e\u8a00\u8a9e\u3067\u306fverify_firebase_token()\u7684\u306aAPI\u3092\u53e9\u3051\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3059\u3089\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\ntoken\u3092verify\u3057\u3001userId\u3084expired time\u7b49\u3092\u53d6\u5f97\u3057\u3001\u305d\u308c\u3089\u3092\u542b\u3081\u305f\u5fc5\u8981\u306a\u60c5\u5831\u3092\u6c38\u7d9a\u5316\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3001\u305d\u306e\u5f8c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u307e\u305ftoken\u3092verify\u3059\u308c\u3070\u826f\u3044\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8SPA\u306f\u3001\u6709\u52b9\u306atoken\u3092\u6bce\u56deAuthorization header\u306b\u30bb\u30c3\u30c8\u3057\u3066httpRequest\u3059\u308b\u3002\n\n\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6e08\u307f\u3067\u306a\u3051\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u30da\u30fc\u30b8\u3092\u8a2d\u5b9a\u3059\u308b\n\u7279\u5b9a\u306e\u30da\u30fc\u30b8\u3092\u3001\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6e08\u307f\u3067\u306a\u3051\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3044\u3002\nAngularDart\u306erouter\u306b\u306fCanActivate API\u304c\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u3066\u30da\u30fc\u30b8\u3092\u8868\u3059Component\u306b\u4ed8\u52a0\u3057\u3001\u8a8d\u8a3c\u6e08\u307f\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n@Component(\n    selector: 'some',\n    template: 'Some auth required component. user is {{authService.user.displayName}}')\n@CanActivate(checkAuthenticated)\nclass SomeComponent {\n  AuthService authService;\n  SomeComponent(this.authService);\n}\n\n\n\u305f\u3060\u3057\u3001API\u306e\u5236\u9650\u306b\u3088\u308aAuthService\u306echeckUserAuthenticated()\u3092\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30ef\u30fc\u30af\u30a2\u30e9\u30a6\u30f3\u30c9\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\u3042\u3089\u304b\u3058\u3081AppComponent\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067setInjector()\u3092\u5b9f\u884c\u3057\u3066Injector\u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u3001checkAuthenticated()\u5185\u3067\u305d\u306eInjector\u304b\u3089AuthService\u3092\u53d6\u5f97\u3057\u3001checkUserAuthenticated()\u3067\u8a8d\u8a3c\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002\n\ncheck_authenticated.dart\nimport 'dart:async';\nimport 'package:angular2/angular2.dart';\nimport 'package:angular2/router.dart';\nimport 'model/service/auth_service.dart';\n\nInjector injector;\n\nvoid setInjector(Injector _injector) {\n  injector = _injector;\n}\n\nFuture<bool> checkAuthenticated(\n    ComponentInstruction _, ComponentInstruction __) async {\n  bool isAuthenticated =\n      await injector.get(AuthService).checkUserAuthenticated();\n  if (!isAuthenticated) injector.get(Router).navigate(['SignIn']);\n  return isAuthenticated;\n}\n\n\n\nRouter API\u306f\u8fd1\u3005\u66f8\u304d\u304b\u3048\u3089\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u4e0d\u683c\u597d\u306a\u30ef\u30fc\u30af\u30a2\u30e9\u30a6\u30f3\u30c9\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\u3042\u3068\u304c\u304d\n\u3082\u3057\u3082\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\u7279\u306b\u96e3\u3057\u304f\u306f\u306a\u3044\u304c\u3001\u4eca\u5f8c\u65b0\u898f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u59cb\u3081\u308b\u305f\u3073\u306b\u8003\u3048\u305a\u306b\u30b3\u30d4\u30da\u3067\u6e08\u307e\u305b\u3089\u308c\u308b\u3088\u3046\u306b\u8a18\u9332\u306b\u6b8b\u3057\u3066\u304a\u304f\u3002\n[Angular2\u3068Firebase hosting\u3067SPA\u958b\u767a\u74b0\u5883\u3092\u6574\u3048\u308b\n](http://qiita.com/ntaoo/items/d11a0cd3fa92f98372a4)\u306e\u7d9a\u7de8\u306e\u3088\u3046\u306a\u611f\u3058\u3002\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\n1. AngularDart(SPA)\u304b\u3089Firebase Authentication\u3092\u884c\u3044\u305f\u3044\n2. Backend server\u306eAuthorization\u3092\u884c\u3044\u305f\u3044\n3. Authentication\u304c\u5fc5\u8981\u306a\u30da\u30fc\u30b8\u3068\u5fc5\u8981\u306a\u3044\u30da\u30fc\u30b8\u304c\u6df7\u5728\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u305f\u3044\n\n### \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\n\n[https://github.com/ntaoo/ng2_firebase_gcp/tree/master/authentication](https://github.com/ntaoo/ng2_firebase_gcp/tree/master/authentication)\n\n# Console\u3092\u64cd\u4f5c\u3057\u3066Authentication Provider\u3092\u6709\u52b9\u5316\u3059\u308b\n\nSIGN-IN METHOD\u3067Authentication\u306b\u4f7f\u7528\u3059\u308bProvider\u6709\u52b9\u5316\u3059\u308b\u3002\u4eca\u56de\u306fGoogle\u306e\u307f\u306b\u3059\u308b\u304c\u4ed6\u306eProvider\u3067\u3082\u7279\u306b\u3064\u307e\u3065\u304b\u306a\u3044\u306f\u305a\u3002\n![Screen Shot 2016-12-04 at 16.00.07.png](https://qiita-image-store.s3.amazonaws.com/0/8065/fae679f9-881d-089c-4277-253ff6986b3b.png \"Screen Shot 2016-12-04 at 16.00.07.png\")\n\n# Firebase Package\n\n[firebase package](https://pub.dartlang.org/packages/firebase)\u3092\u4f7f\u7528\u3059\u308b\u3002(firebase3 package\u306e\u4f5c\u8005\u306e\u5354\u529b\u3067\u3001firebase3\u306b\u5bfe\u5fdc\u3057\u305f\u3082\u306e\u304c\u518d\u3073firebase/firebase-dart\u30ea\u30dd\u30b8\u30c8\u30ea\u3067\u30e1\u30f3\u30c6\u30ca\u30f3\u30b9\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b)\n\nfirebase script tag\u3092html>head\u306b\u8ffd\u52a0\u3057\u3066\u304a\u304f\u3053\u3068\u3002\n\n# FirebaseService\n\nFirebase API\u3092AngularDart\u3067\u5229\u7528\u3057\u305f\u3044\u306e\u3067\u3001Service\u306b\u3057\u3066AppComponent\u306eprovider\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\n```dart:firebase_service.dart\nimport 'package:angular2/angular2.dart';\nimport 'package:firebase3/firebase.dart' as firebase;\n\n@Injectable()\nclass FirebaseService {\n  final firebase.Auth auth;\n\n  factory FirebaseService() {\n    firebase.initializeApp(\n        apiKey: \" AIzaSyCIQNJV-TFRl9BK_9hVuS8lkgMxD69_Z0A\",\n        authDomain: \"ng2-firebase-gcp.firebaseapp.com\",\n        databaseURL: \"https://ng2-firebase-gcp.firebaseio.com\",\n        storageBucket: \"ng2-firebase-gcp.appspot.com\");\n    return new FirebaseService._(firebase.auth());\n  }\n  FirebaseService._(this.auth);\n}\n```\n\n# AuthService\n\nFirebaseService\u306b\u4f9d\u5b58\u3057\u3066\u3053\u306eSPA\u30a2\u30d7\u30ea\u306eauth\u3092\u62c5\u5f53\u3059\u308bservice\u3082\u4f5c\u6210\u3057\u3001\u540c\u3058\u304fAppComponent\u306eprovider\u306b\u767b\u9332\u3057\u3066\u304a\u304f\u3002\n\n```dart:auth_service.dart\n/// \u524d\u7565\n@Injectable()\nclass AuthService {\n  final firebase.Auth _auth;\n  final StreamController<bool> _onAuthStateChangedController;\n\n  /// Nullable. If null, it means that firebase authentication process has not been completed yet (intermediate state).\n  User user;\n\n  /// This getter doesn't care the intermediate state. Use [checkUserAuthenticated()] if that state is possibility.\n  bool get isUserAuthenticated => user is AuthenticatedUser;\n  Stream<bool> get onAuthStateChanged => _onAuthStateChangedController.stream;\n\n  AuthService(FirebaseService firebaseService)\n      : _auth = firebaseService.auth,\n        _onAuthStateChangedController = new StreamController<bool>.broadcast() {\n    _listenFirebaseOnAuthStateChanged();\n  }\n/// \u5f8c\u7565\n```\n\n# Sign In\n\nFirebase\u306eSign In\u306b\u306f\u3001`SignInWithPopup`\u3068`SignInWithRedirect`\u306e\uff12\u3064\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u3002\n`SignInWithPopup`\u306fSPA\u30a2\u30d7\u30ea\u306e\u540c\u4e00\u30da\u30fc\u30b8\u306e\u307e\u307eConsent Screen\u304cPopup\u3059\u308b\u5236\u5fa1\u30d5\u30ed\u30fc\u3068\u306a\u308a\u3001`SignInWithRedirect`\u306fConsent Screen\u30da\u30fc\u30b8\u306b\u9077\u79fb\u3057\u305f\u3042\u3068\u3001\u5143\u306eSPA\u30a2\u30d7\u30ea\u306e\u30da\u30fc\u30b8\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u5236\u5fa1\u30d5\u30ed\u30fc\u3068\u306a\u308b\u3002\n\n`SignInWithPopup`\u306f\u30da\u30fc\u30b8\u9077\u79fb\u3057\u306a\u3044\u305f\u3081Sign In\u30d5\u30ed\u30fc\u306e\u5236\u5fa1\u304c\u3057\u3084\u3059\u3044\u3002\u305f\u3060\u3057\u3001Mobile Web\u3067\u306eUX\u3092\u8003\u616e\u3059\u308b\u5834\u5408\u306f`SignInWithRedirect`\u3092\u9078\u629e\u3059\u308b\u306e\u304c\u671b\u307e\u3057\u3044\u3002\n\n\u4eca\u56de\u306f\u4e21\u65b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u88c5\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u516c\u958b\u3057\u3066\u3044\u308b\u3002\n\n## SignInWithPopup\n\n1) Firebase\u306eAPI(`signInWithPopup`)\u3092call\u3059\u308b\u3002(_runBackendAuthorization\u306b\u3064\u3044\u3066\u306f\u3001\u5f8c\u8ff0\u306e\u300cBackend server\u306eAuthorization\u300d\u3092\u53c2\u7167)\n\n```dart:auth_service.dart\n  // Assuming only google auth on this example.\n  Future signInWithPopup() async {\n    var credential =\n        await _auth.signInWithPopup(new firebase.GoogleAuthProvider());\n    return _runBackendAuthorization(credential);\n  }\n```\n\n2) AuthService\u306econstructor body\u3067listen\u3057\u3066\u304a\u3044\u305f\u3001firebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u3092\u51e6\u7406\u3059\u308b\u3002\n\n```dart:auth_service.dart\n  void _listenFirebaseOnAuthStateChanged() {\n    _auth.onAuthStateChanged.listen((firebase.AuthEvent event) {\n      _handleOnAuthStateChanged(event);\n      _onAuthStateChangedController.add(isUserAuthenticated);\n    });\n  }\n\n  void _handleOnAuthStateChanged(firebase.AuthEvent event) {\n    var u = event.user;\n    user = u != null ? new AuthenticatedUser(u) : new GuestUser();\n  }\n```\n\nfirebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u306f\u4e3b\u306bsign in, sign out\u3067\u767a\u706b\u3057\u3001Sign In\u3059\u308c\u3070`event.user`\u304c\u5b58\u5728\u3057\u3001\u305d\u3046\u3067\u306a\u3051\u308c\u3070`event.user`\u306fnull\u3068\u306a\u308b\u3002\n\n3) authentication\u6210\u529f\u5f8c\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3067\u30da\u30fc\u30b8\u9077\u79fb\u3002\n\n\u8a8d\u8a3c\u6e08\u307f\u30da\u30fc\u30b8\u7b49\u306b\u9077\u79fb\u3055\u305b\u308b\u3002\n\n```dart:sign_in_component.dart\n  Future<Null> signInWithPopup() async {\n    await _authService.signInWithPopup();\n    if (await _authService.checkUserAuthenticated()) _router.navigate(['Some']);\n  }\n```\n\n## SignInWithRedirect\n\nMobile Web\u3092\u8003\u616e\u3059\u308c\u3070\u3053\u3061\u3089\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u9078\u629e\u3059\u308b\u3079\u304d\u3060\u304c\u3001\u3044\u3063\u305f\u3093Firebase\u306b\u3088\u308b\u8a8d\u8a3c\u753b\u9762\u306b\u9077\u79fb\u3057\u3001SPA\u30a2\u30d7\u30ea\u306b\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u308b\u5834\u5408\u3001SPA\u30a2\u30d7\u30ea\u304creload\u3055\u308c\u308b\u3053\u3068\u306b\u306a\u308b\u3002\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5148URL\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u8a8d\u8a3c\u5f8c\u306e\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3067\u3042\u308b\u3053\u3068\u3092\u5224\u5225\u3059\u308b\u305f\u3081\u3001\u3042\u3089\u304b\u3058\u3081\u305d\u306e\u60c5\u5831\u3092\u4e00\u6642\u7684\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n\u4eca\u56de\u306f\u3001SessionStorage\u306b\u4fdd\u6301\u3057\u3066\u304a\u304f\u3053\u3068\u306b\u3057\u305f\u3002\n\n```dart:sign_in_component.dart\n  Future<Null> signInWithRedirect() {\n    window.sessionStorage[_willRedirectKey] = 'true';\n    return _authService.signInWithRedirect();\n  }\n```\n\nFirebase\u304b\u3089\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3055\u308c\u305f\u3068\u304d\u3001SessionStorage\u306e\u60c5\u5831\u3092\u53c2\u7167\u3057\u3001\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u76f4\u5f8c\u306e\u8d77\u52d5\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002\n\n```dart:sign_in_component.dart\n  Future ngOnInit() {\n    return new Future.sync(() async {\n      if (_redirectedFromFirebase()) {\n        await _authService.handleSignInWithRedirectResult();\n        window.sessionStorage.remove(_willRedirectKey);\n        if (await _authService.checkUserAuthenticated()) {\n          _router.navigate(['Some']);\n        }\n      }\n    });\n  }\n```\n\nfirebase.auth.onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u3001SignInWithPopup\u306e\u5834\u5408\u3068\u540c\u3058\u304f\u3001\u8a8d\u8a3c\u51e6\u7406\u304c\u5b8c\u4e86\u3059\u308b\u3002\n\n\u3053\u306e\u8a8d\u8a3c\u30d5\u30ed\u30fc\u306e\u5834\u5408\u306ecredential\u306fFirebase\u306egetRedirectResult() API\u3067\u53d6\u5f97\u3059\u308b\u3002\n\n```dart:auth_service.dart\n  Future handleSignInWithRedirectResult() async {\n    var credential = await _auth.getRedirectResult();\n    return _runBackendAuthorization(credential);\n  }\n```\n\n\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u30a2\u30d7\u30ea\u3067\u306f\u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u5f8c\u306e\u8a8d\u8a3c\u51e6\u7406\u306e\u9593\u3001\u5168\u753b\u9762progress circle\u306a\u3069\u3092\u8868\u793a\u3057\u3066\u304a\u304f\u3068\u826f\u3044\u3002\n\n# Sign Out\n\nFirebase\u306esignOut() API\u3092call\u3059\u308b\u3060\u3051\u3002onAuthStateChanged\u30a4\u30d9\u30f3\u30c8\u304c\u767a\u706b\u3059\u308b\u3002\n\n# Backend server\u306eAuthorization\n\nFirebase\u3060\u3051\u3067\u306f\u3067\u304d\u306a\u3044\u51e6\u7406\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u5225\u9014Backend server\u3092\u7528\u610f\u3057\u3001Authorization\u3057\u305f\u3044\u3002\n\u305d\u306e\u305f\u3081\u30c8\u30fc\u30af\u30f3\u3092Backend server\u306b\u6e21\u3057\u3001\u30c8\u30fc\u30af\u30f3\u3092verify\u3055\u305b\u308b\u3002\n\u9069\u5b9cserver\u5074\u306eCORS\u306e\u8a2d\u5b9a\u3092\u884c\u3046\u3053\u3068\u3002\u4ee5\u4e0b\u306e\u4f8b\u3067\u306fAuthorization\u30d8\u30c3\u30c0\u30fc\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u308b\u306e\u3067\u3001server\u306bCORS\u3067\u30a2\u30af\u30bb\u30b9\u3055\u305b\u308b\u5834\u5408\u306f\u3001'Access-Control-Allow-Headers'\u306b'Authorization'\u3092\u8a31\u53ef\u3059\u308b\u8a2d\u5b9a\u304c\u5fc5\u8981\u3068\u306a\u308b\u3002\n\n```dart\n  Future _runBackendAuthorization(firebase.UserCredential credential) async {\n    var idToken = await credential.user.getToken();\n    var client = new http.BrowserClient();\n    try {\n      return await client.post('http://localhost:9920/authorization',\n          headers: {'Authorization': idToken});\n    } catch (e) {\n      print(\"Error on '_runBackendAuthorization': $e\");\n    }\n  }\n```\n\n\u30b5\u30fc\u30d0\u30fc\u5074\u306e\u5b9f\u88c5\u306f\u7701\u7565\u3002\n\u3044\u304f\u3064\u304b\u306e\u8a00\u8a9e\u3067\u306f`verify_firebase_token()`\u7684\u306aAPI\u3092\u53e9\u3051\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3059\u3089\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u3002\ntoken\u3092verify\u3057\u3001userId\u3084expired time\u7b49\u3092\u53d6\u5f97\u3057\u3001\u305d\u308c\u3089\u3092\u542b\u3081\u305f\u5fc5\u8981\u306a\u60c5\u5831\u3092\u6c38\u7d9a\u5316\u3057\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3001\u305d\u306e\u5f8c\u306f\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u307e\u305ftoken\u3092verify\u3059\u308c\u3070\u826f\u3044\u3002\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8SPA\u306f\u3001\u6709\u52b9\u306atoken\u3092\u6bce\u56deAuthorization header\u306b\u30bb\u30c3\u30c8\u3057\u3066httpRequest\u3059\u308b\u3002\n\n# \u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6e08\u307f\u3067\u306a\u3051\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u30da\u30fc\u30b8\u3092\u8a2d\u5b9a\u3059\u308b\n\n\u7279\u5b9a\u306e\u30da\u30fc\u30b8\u3092\u3001\u30e6\u30fc\u30b6\u30fc\u8a8d\u8a3c\u6e08\u307f\u3067\u306a\u3051\u308c\u3070\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u3057\u305f\u3044\u3002\nAngularDart\u306erouter\u306b\u306f`CanActivate` API\u304c\u3042\u308b\u305f\u3081\u3001\u3053\u308c\u3092\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u306b\u3057\u3066\u30da\u30fc\u30b8\u3092\u8868\u3059Component\u306b\u4ed8\u52a0\u3057\u3001\u8a8d\u8a3c\u6e08\u307f\u3067\u3042\u308b\u304b\u3069\u3046\u304b\u3092\u5224\u5b9a\u3059\u308b\u30e1\u30bd\u30c3\u30c9\u3092\u547c\u3073\u51fa\u3059\u3002\n\n```dart\n@Component(\n    selector: 'some',\n    template: 'Some auth required component. user is {{authService.user.displayName}}')\n@CanActivate(checkAuthenticated)\nclass SomeComponent {\n  AuthService authService;\n  SomeComponent(this.authService);\n}\n\n```\n\n\u305f\u3060\u3057\u3001API\u306e\u5236\u9650\u306b\u3088\u308aAuthService\u306echeckUserAuthenticated()\u3092\u76f4\u63a5\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u305f\u3081\u3001\u30ef\u30fc\u30af\u30a2\u30e9\u30a6\u30f3\u30c9\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3002\n\n\u3042\u3089\u304b\u3058\u3081AppComponent\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067`setInjector()`\u3092\u5b9f\u884c\u3057\u3066Injector\u3092\u30bb\u30c3\u30c8\u3057\u3066\u304a\u304d\u3001checkAuthenticated()\u5185\u3067\u305d\u306eInjector\u304b\u3089AuthService\u3092\u53d6\u5f97\u3057\u3001`checkUserAuthenticated()`\u3067\u8a8d\u8a3c\u6e08\u307f\u3067\u3042\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u3002\n\n```dart:check_authenticated.dart\nimport 'dart:async';\nimport 'package:angular2/angular2.dart';\nimport 'package:angular2/router.dart';\nimport 'model/service/auth_service.dart';\n\nInjector injector;\n\nvoid setInjector(Injector _injector) {\n  injector = _injector;\n}\n\nFuture<bool> checkAuthenticated(\n    ComponentInstruction _, ComponentInstruction __) async {\n  bool isAuthenticated =\n      await injector.get(AuthService).checkUserAuthenticated();\n  if (!isAuthenticated) injector.get(Router).navigate(['SignIn']);\n  return isAuthenticated;\n}\n\n```\n\nRouter API\u306f\u8fd1\u3005\u66f8\u304d\u304b\u3048\u3089\u308c\u308b\u3088\u3046\u306a\u306e\u3067\u3001\u3053\u306e\u3088\u3046\u306a\u4e0d\u683c\u597d\u306a\u30ef\u30fc\u30af\u30a2\u30e9\u30a6\u30f3\u30c9\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u304f\u3066\u3082\u3088\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n# \u3042\u3068\u304c\u304d\n\n\u3082\u3057\u3082\u3082\u3063\u3068\u826f\u3044\u65b9\u6cd5\u304c\u3042\u308c\u3070\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n", "tags": ["Dart", "Firebase", "Angular2"]}