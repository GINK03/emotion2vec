{"tags": ["finagle", "WebAPI", "Scala"], "context": "\n\n\u6982\u8981\n\uff08\u300c\u30d5\u30a3\u30cd\u30fc\u30b0\u30eb\u300d\u3063\u3066\u8aad\u3093\u3067\u308b\u3051\u3069\u3001\u6b63\u3057\u304f\u306f\u300c\u30d5\u30a3\u30cd\u30fc\u30d5\u30eb\u300d\u306a\u3093\u3067\u3059\u304b\uff1f\uff09\n\u3061\u3087\u3063\u3068\u4ed5\u4e8b\u3067\u7c21\u5358\u306aWebAPI\u30b5\u30fc\u30d0\u30fc\u7acb\u3066\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067finagle-http\u3092\u8a66\u3057\u305f\u3002\n\u7d50\u5c40\u305d\u306e\u5f8c\u8272\u3005\u3042\u3063\u3066play2\u306b\u5909\u3048\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3002\u3002\n\u305d\u306e\u6642\u306b\u8abf\u3079\u305f\u3089\u3001\u5168\u7136\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u7c21\u5358\u306b\u30e1\u30e2\u3002\nWebAPI\u7528\u9014\u306a\u3089spray\u3068\u304bakka-http\u306e\u65b9\u304c\u4eba\u6c17\u306a\u3093\u3060\u308d\u3046\u304b\u3002\u3002\nakka-http\u306f\u3044\u3064experimental\u53d6\u308c\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u3002\n\n\u30b4\u30fc\u30eb\n\nfinagle-http\u3067\u30d1\u30b9\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u5207\u308a\u5206\u3051\u308b\u3002\nheader\u3068\u304bcookie\u3068\u304b\u3044\u3058\u308b\n\n\n\u30b3\u30fc\u30c9\n\nbuild.sbt\nlibraryDependencies ++= Seq(\n      \"com.twitter\" %% \"finagle-netty4-http\" % \"6.37.0\"\n    )\n\n\nfinagle-http\u306fnetty3\u3060\u3063\u305f\u306e\u3067\u306a\u3093\u3068\u306a\u304f\u3053\u3063\u3061\u4f7f\u3063\u3066\u307f\u305f\u3002\n\nMain.scala\nimport com.twitter.finagle.http.service.RoutingService\nimport com.twitter.finagle.http.{Cookie, Request, Response}\nimport com.twitter.finagle.{Http, Service, http}\nimport com.twitter.util.{Await, Future}\n\nobject Main {\n\n  def main (args: Array[String] ): Unit = {\n\n    val index = new Service[Request, Response] {\n      def apply(request: http.Request): Future[http.Response] = {\n        val res = http.Response(request.version, http.Status.Ok)\n        res.setContentString(\"Ok\")\n        Future.value(res)\n      }\n    }\n\n    def execute(userId: String, num: Int) = new Service[Request, Response] {\n\n      def apply(request: Request): Future[http.Response] = {\n        val resultString = s\"user id: ${userId}. num: ${num}\"\n        val res = http.Response(request.version, http.Status.Ok)\n        res.setContentString(resultString)\n\n        val cookie = new Cookie(\"key\", \"value\")\n        cookie.httpOnly_=(true)\n        res.addCookie(cookie)\n\n        res.setContentType(\"text/plain\")\n\n        Future.value(res)\n      }\n    }\n\n    import com.twitter.finagle.http.path._\n    val router = RoutingService.byPathObject[Request] {\n      case Root / \"userId\" / userId / \"number\" / Integer(num) => execute(userId, num)\n      case Root / \"userId\" => execute(\"uuu\", 3)\n      case _                             => index\n    }\n\n    val server = Http.serve(\":9999\", router)\n    Await.ready(server)\n  }\n\n}\n\n\n$ curl --verbose http://localhost:9999/userId/uu/number/100\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 9999 (#0)\n> GET /userId/uu/number/100 HTTP/1.1\n> Host: localhost:9999\n> User-Agent: curl/7.45.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Set-Cookie: key=value; HTTPOnly\n< Content-Type: text/plain;charset=utf-8\n< Content-Length: 21\n< \n* Connection #0 to host localhost left intact\nuser id: uu. num: 100\n\n\n\u307e\u3068\u3081\nrouting\u306e\u3068\u3053\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u307e\u306a\u3044\u3068\u308f\u304b\u3093\u306a\u304b\u3063\u305f\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b7\u30f3\u30d7\u30eb\u904e\u304e\u3066\u3088\u304f\u308f\u304b\u3093\u306a\u3044\n\n## \u6982\u8981\n\n\uff08\u300c\u30d5\u30a3\u30cd\u30fc\u30b0\u30eb\u300d\u3063\u3066\u8aad\u3093\u3067\u308b\u3051\u3069\u3001\u6b63\u3057\u304f\u306f\u300c\u30d5\u30a3\u30cd\u30fc\u30d5\u30eb\u300d\u306a\u3093\u3067\u3059\u304b\uff1f\uff09\n\n\u3061\u3087\u3063\u3068\u4ed5\u4e8b\u3067\u7c21\u5358\u306aWebAPI\u30b5\u30fc\u30d0\u30fc\u7acb\u3066\u308b\u3053\u3068\u306b\u306a\u3063\u305f\u306e\u3067finagle-http\u3092\u8a66\u3057\u305f\u3002\n\u7d50\u5c40\u305d\u306e\u5f8c\u8272\u3005\u3042\u3063\u3066play2\u306b\u5909\u3048\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u304c\u3002\u3002\n\n\u305d\u306e\u6642\u306b\u8abf\u3079\u305f\u3089\u3001\u5168\u7136\u60c5\u5831\u304c\u306a\u304b\u3063\u305f\u306e\u3067\u7c21\u5358\u306b\u30e1\u30e2\u3002\nWebAPI\u7528\u9014\u306a\u3089spray\u3068\u304bakka-http\u306e\u65b9\u304c\u4eba\u6c17\u306a\u3093\u3060\u308d\u3046\u304b\u3002\u3002\nakka-http\u306f\u3044\u3064experimental\u53d6\u308c\u308b\u3093\u3060\u308d\u3046\u304b\u3002\u3002\n\n## \u30b4\u30fc\u30eb\n\n- finagle-http\u3067\u30d1\u30b9\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3092\u5207\u308a\u5206\u3051\u308b\u3002\n- header\u3068\u304bcookie\u3068\u304b\u3044\u3058\u308b\n\n## \u30b3\u30fc\u30c9\n\n```scala:build.sbt\nlibraryDependencies ++= Seq(\n      \"com.twitter\" %% \"finagle-netty4-http\" % \"6.37.0\"\n    )\n```\n\nfinagle-http\u306fnetty3\u3060\u3063\u305f\u306e\u3067\u306a\u3093\u3068\u306a\u304f\u3053\u3063\u3061\u4f7f\u3063\u3066\u307f\u305f\u3002\n\n```scala:Main.scala\nimport com.twitter.finagle.http.service.RoutingService\nimport com.twitter.finagle.http.{Cookie, Request, Response}\nimport com.twitter.finagle.{Http, Service, http}\nimport com.twitter.util.{Await, Future}\n\nobject Main {\n\n  def main (args: Array[String] ): Unit = {\n\n    val index = new Service[Request, Response] {\n      def apply(request: http.Request): Future[http.Response] = {\n        val res = http.Response(request.version, http.Status.Ok)\n        res.setContentString(\"Ok\")\n        Future.value(res)\n      }\n    }\n\n    def execute(userId: String, num: Int) = new Service[Request, Response] {\n\n      def apply(request: Request): Future[http.Response] = {\n        val resultString = s\"user id: ${userId}. num: ${num}\"\n        val res = http.Response(request.version, http.Status.Ok)\n        res.setContentString(resultString)\n\n        val cookie = new Cookie(\"key\", \"value\")\n        cookie.httpOnly_=(true)\n        res.addCookie(cookie)\n\n        res.setContentType(\"text/plain\")\n\n        Future.value(res)\n      }\n    }\n\n    import com.twitter.finagle.http.path._\n    val router = RoutingService.byPathObject[Request] {\n      case Root / \"userId\" / userId / \"number\" / Integer(num) => execute(userId, num)\n      case Root / \"userId\" => execute(\"uuu\", 3)\n      case _                             => index\n    }\n\n    val server = Http.serve(\":9999\", router)\n    Await.ready(server)\n  }\n\n}\n```\n\n\n```shell\n$ curl --verbose http://localhost:9999/userId/uu/number/100\n*   Trying 127.0.0.1...\n* Connected to localhost (127.0.0.1) port 9999 (#0)\n> GET /userId/uu/number/100 HTTP/1.1\n> Host: localhost:9999\n> User-Agent: curl/7.45.0\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Set-Cookie: key=value; HTTPOnly\n< Content-Type: text/plain;charset=utf-8\n< Content-Length: 21\n< \n* Connection #0 to host localhost left intact\nuser id: uu. num: 100\n```\n\n## \u307e\u3068\u3081\n\nrouting\u306e\u3068\u3053\u3001\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u8aad\u307e\u306a\u3044\u3068\u308f\u304b\u3093\u306a\u304b\u3063\u305f\u3002\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30b7\u30f3\u30d7\u30eb\u904e\u304e\u3066\u3088\u304f\u308f\u304b\u3093\u306a\u3044\n"}