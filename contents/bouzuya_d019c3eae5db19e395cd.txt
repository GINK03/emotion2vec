{"tags": ["RxJS", "Rx", "ReactiveExtensions"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u3053\u306e\u8a18\u4e8b\u306f bouzuya's RxJS Advent Calendar 2015 \u306e 6 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 6 \u65e5\u76ee\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u4eca\u65e5\u306f ReactiveX \u306e Operators \u306e Combining \u306b\u3064\u3044\u3066 RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\u307e\u305f RxJS 4.0.7 \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nObservable \u306e\u7d50\u5408 (1)\n\nObservable.merge\n\n\nReactiveX - Merge operator\nObservable.merge API Document\nObservable.merge Source Code\n\n\u53ef\u5909\u9577\u5f15\u6570\u3067 observable \u3092\u53d6\u308a\u307e\u3059\u3002\u5404 Observable \u306b\u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u305f\u3073\u306b\u3001\u305d\u308c\u3092\u305d\u306e\u307e\u307e\u6d41\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n\n\u3061\u306a\u307f\u306b\u540d\u524d\u306e\u4f3c\u3066\u3044\u308b Observable.prototype.mergeAll \u306f\u52d5\u304d\u304c\u9055\u3044\u307e\u3059\u3002\n\u305f\u3060\u3001Observable.merge \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u3001\u5b9f\u88c5\u306f Observable.from([...]).mergeAll() \u3060\u3068\u5206\u304b\u308a\u307e\u3059 (\u5b9f\u969b\u306b\u306f Observable.from \u3067\u306f\u306a\u304f Observable.ofWithScheduler(Scheduler.immediate, ...) \u306a\u306e\u3067\u3059\u304c\u3001\u300cObservable \u306e\u751f\u6210\u300d\u3067 of \u306b\u89e6\u308c\u3066\u304a\u3089\u305a\u3001Scheduler \u306e\u8aac\u660e\u3082\u307e\u3060\u306a\u306e\u3067\u4eee\u306b Observable.from \u3067\u8aac\u660e\u3057\u307e\u3059) \u3002\n\u3064\u307e\u308a\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059 (\u53b3\u5bc6\u306b\u306f\u7570\u306a\u308a\u307e\u3059)\u3002\nObservable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n\nObservable\n  .from([\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  ])\n  .mergeAll()\n\n\nObservable.prototype.merge\n\n\nReactiveX - Merge operator\nObservable.prototype.merge API Document\nObservable.prototype.merge Source Code\n\n\u5f15\u6570\u304c Observable \u3067\u3042\u308b (\u5b9f\u88c5\u306f number \u3067\u306a\u3044) \u3068\u304d\u306f Observable.merge(...) \u3068\u540c\u3058\u3067\u3001\u5f15\u6570\u304c number \u306e\u3068\u304d\u306f\u4e26\u884c\u6027\u306e\u6700\u5927\u3092\u5236\u9650\u3057\u307e\u3059\u3002\n\u5f15\u6570\u306b\u3088\u3063\u3066\u6319\u52d5\u304c\u5927\u5e45\u306b\u9055\u3046\u3042\u305f\u308a\u304c RxJS \u3089\u3057\u3044\u3068\u611f\u3058\u307e\u3059\u3002merge \u306e\u5f15\u6570\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u5225\u3067 Qiita \u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u300eRxJS 4 \u306e merge \u306e\u5f15\u6570\u306e\u5dee\u7570 (concurrent \u6307\u5b9a) \u3068 RxJS 5 \u3067\u306e\u5b9f\u88c5 - Qiita\u300f\n\u4ee5\u4e0b\u306f\u7b49\u4fa1\u306e\u30b3\u30fc\u30c9\u3092\u4e26\u3079\u305f\u3082\u306e\u3067\u3059\u3002\nimport { Observable, Scheduler } from 'rx';\n\nconst source1 = Observable\n  .ofWithScheduler(\n    Scheduler.immediate,\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .mergeAll();\nconst source2 = Observable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  );\nconst source3 = Observable\n  .from([1, 2, 3])\n  .merge(Observable.from(['A', 'B']));\n\nconst subscribe = (source) =>\n  source.subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\nsubscribe(source1);\nsubscribe(source2);\nsubscribe(source3);\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n\n\nObservable.prototype.startWith\n\n\nReactiveX - StartWith operator\nObservable.prototype.startWith API Document\nObservable.prototype.startWith Source Code\n\n\u4e0e\u3048\u305f\u5f15\u6570\u3092\u6d41\u3057\u3066\u304b\u3089\u3001\u305d\u306e\u5f8c\u306b\u73fe\u5728\u306e observable \u306e\u5024\u3092\u6d41\u3059\u3088\u3046\u306a\u52d5\u304d\u3067\u3059\u3002Observable.prototype.startWith \u306f prepend \u3067\u3001 Observable.prototype.concat \u306f append \u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u306d\u3002\u5b9f\u88c5\u306f Observable.from([..., this]).concat(...) \u3092\u671f\u5f85\u3057\u305f\u306e\u3067\u3059\u304c\u3001Enumerable.of(...).concat() \u306e\u3088\u3046\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .startWith(0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n\n\u5f8c\u8ff0\u306e combineLatest \u306e\u305f\u3081\u306b\u5fc5\u305a\u5024\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\n\nObservable.combineLatest\n\n\nReactiveX - CombineLatest operator\nObservable.combineLatest API Document\nObservable.combineLatest Source Code\n\n\u53ef\u5909\u9577\u5f15\u6570\u3067 observable \u3092\u53d6\u308a\u3001\u6700\u5f8c\u306e\u5f15\u6570\u3067 resultSelector \u3092\u53d6\u308a\u307e\u3059\u3002\u5404 Observable \u306b\u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u305f\u3073\u306b\u3001\u5404 Observable \u306e\u76f4\u8fd1\u306e\u5024\u304c\u5165\u3063\u305f Array \u3092 resultSelector \u306b\u6e21\u3057\u3066\u304f\u308c\u3066\u3001\u305d\u306e\u623b\u308a\u5024\u304c\u6b21\u3078\u3068\u6d41\u308c\u308b Observable \u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3053\u306e\u65e5\u672c\u8a9e\u306e\u8aac\u660e\u3067\u306f\u304d\u3063\u3068\u300c\u4f55\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u304b \u308f\u304b\u3089\u306d\u30fc\u3068\u601d\u3046\u304c\u300d\u72b6\u614b\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u307c\u304f\u3082\u3053\u308c\u3067\u8aa4\u8aad\u306a\u3044\u3088\u3046\u306b\u8aac\u660e\u3067\u304d\u3066\u3044\u308b\u81ea\u4fe1\u304c\u307e\u3063\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u9650\u3089\u305a Rx \u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3082\u8907\u96d1\u306a\u3082\u306e\u306f\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u304b\u8a66\u3059\u304b\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\u3061\u306a\u307f\u306b combineLatest \u306b\u9650\u308c\u3070 ReactiveX \u306e combineLatest \u306e marble diagram \u3092\u898b\u308b\u3068\u3001\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u307c\u304f\u306f\u601d\u3044\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\n// -0-1-2-3->\nconst observable1 = Observable\n  .interval(100)\n  .take(4)\n  .map((_, index) => index);\n// --A---B-->\nconst observable2 = Observable\n  .interval(150)\n  .take(2)\n  .map((_, index) => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[index]);\n\n// -0-1-2-3->\n// --A---B-->\n// --xx-xxx->\nObservable\n  .combineLatest(\n    observable1,\n    observable2,\n    (value1, value2) => value1 + value2\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0A\n// onNext: 1A\n// onNext: 2A\n// onNext: 2B\n// onNext: 3B\n// onCompleted\n\n\u6ce8\u610f\u3057\u3066\u304a\u304d\u305f\u3044\u306e\u304c\u5404 Observable \u306e\u6700\u521d\u306e\u5024\u304c\u6d41\u308c\u3066\u3053\u306a\u3044\u3068\u3001\u6b21\u3078\u5024\u3092\u6d41\u3055\u306a\u3044\u3068\u3044\u3046\u70b9\u3002\u76f4\u8fd1\u306e\u5024\u304c\u51fa\u63c3\u3063\u3066\u306f\u3058\u3081\u3066\u6b21\u306b\u6d41\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4f55\u3082\u6d41\u3055\u306a\u3044 Observable.never \u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u98a8\u306b\u306a\u308a\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nconst observable1 = Observable.never();\nconst observable2 = Observable\n  .interval(150)\n  .take(2)\n  .map((_, index) => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[index]);\n\nObservable\n  .combineLatest(\n    observable1,\n    observable2,\n    (value1, value2) => value1 + value2\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// (no output)\n\n\nObservable.zip\n\n\nReactiveX - Zip operator\nObservable.zip API Document\nObservable.zip Source Code\n\nObservable.zip \u306f zip \u3067\u3059 (\u9069\u5f53) \u3002\u8907\u6570\u306e Observable \u3067\u6d41\u308c\u305f\u8981\u7d20\u3092\u30da\u30a2\u306b\u3057\u3066\u6d41\u3057\u307e\u3059\u3002combineLatest \u306f\u5404 Observable \u306b\u5024\u304c\u6d41\u308c\u308b\u305f\u3073\u306b\u5024\u3092\u6d41\u3057\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001zip \u306f\u3059\u3079\u3066\u306e Observable \u304c\u5024\u3092\u6d41\u3059\u307e\u3067\u5024\u3092\u6d41\u3057\u307e\u305b\u3093\u3002combineLatest \u306f\u6700\u521d\u306e\u5024\u3067\u5404 Observable \u306e\u5024\u304c\u51fa\u63c3\u3046\u306e\u3092\u5f85\u3064\u3088\u3046\u306b\u3001zip \u306f\u5404\u5024\u3067\u5404 Observable \u306e\u5024\u304c\u51fa\u63c3\u3046\u306e\u3092\u5f85\u3064\u3088\u3046\u3067\u3059\u3002\n\u307e\u305f\u5b9f\u88c5\u3068\u3057\u3066\u306f\u3001\u6700\u521d\u306e\u5f15\u6570 (Observable) \u306e Observable.prototype.zip \u306b\u6b8b\u308a\u306e\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .zip(\n    Observable.from([0, 1, 2]),\n    Observable.from([3, 4, 5]),\n    Observable.from([6, 7, 8])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0,3,6\n// onNext: 1,4,7\n// onNext: 2,5,8\n// onCompleted\n\n\nObservable.prototype.zip\n\n\nReactiveX - Zip operator\nObservable.prototype.zip API Document\nObservable.prototype.zip Source Code\n\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001Observable.zip \u3068\u307b\u3068\u3093\u3069\u540c\u3058\u6319\u52d5\u306a\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\nObservable.prototype.switch\n\n\nReactiveX - Switch operator\nObservable.prototype.switch API Document\nObservable.prototype.switch Source Code\n\nObservable.prototype.switch \u306f mergeAll (flatMap) \u306e\u3088\u3046\u306b Observable \u306e Observalbe \u3092 flat \u306b\u3057\u307e\u3059\u3002mergeAll \u306e\u3088\u3046\u306b\u3059\u3079\u3066\u306e Observable \u306e\u5024\u3092 merge \u3059\u308b\u306e\u3068\u306f\u9055\u3044\u3001\u6b21\u306e Observable \u3078\u6b21\u3005\u3068 switch \u3057\u3066\u3044\u304d\u307e\u3059\u3002\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\nimport { Observable } from 'rx';\n\nObservable\n  .from([\n    Observable.from([0, 1, 2]),\n    Observable.from([3, 4, 5]),\n    Observable.from([6, 7, 8])\n  ])\n  .switch()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0\n// onNext: 3\n// onNext: 6\n// onNext: 7\n// onNext: 8\n// onCompleted\n\n\u3082\u3061\u308d\u3093 2 \u500b\u76ee\u306e Observable \u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u9045\u3089\u305b\u308b\u3068 [0, 1, 2] \u304c\u3059\u3079\u3066\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b switch \u306e\u516c\u5f0f\u306e\u4f8b\u306f\u76f8\u5f53\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u8179\u304c\u7acb\u3061\u307e\u3059\u3002\n\n\u304a\u308f\u308a\u306b\n\u4eca\u65e5\u306f Observable \u3092\u7d50\u5408\u3059\u308b Operator \u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u3060\u30ea\u30b9\u30c8\u7684\u306b\u306f\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u6642\u9593\u306e\u90fd\u5408\u3067\u3053\u3053\u3067\u533a\u5207\u308a\u307e\u3059\u3002\n\u3053\u306e\u8a18\u4e8b\u306f [bouzuya's RxJS Advent Calendar 2015](http://www.adventar.org/calendars/1200) \u306e 6 \u65e5\u76ee\u304b\u3064 RxJS Advent Calendar 2015 \u306e 6 \u65e5\u76ee\u3067\u3059\u3002\n\n# \u306f\u3058\u3081\u306b\n\n\u4eca\u65e5\u306f [ReactiveX \u306e Operators \u306e Combining](http://reactivex.io/documentation/operators.html#combining) \u306b\u3064\u3044\u3066 [RxJS \u306e API \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/observable.md)\u3084\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u307e\u305f [RxJS 4.0.7](https://github.com/Reactive-Extensions/RxJS/tree/v4.0.7) \u3092\u5bfe\u8c61\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n# Observable \u306e\u7d50\u5408 (1)\n\n## `Observable.merge`\n\n- [ReactiveX - Merge operator](http://reactivex.io/documentation/operators/merge.html)\n- [`Observable.merge` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/merge.md)\n- [`Observable.merge` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/merge.js)\n\n\u53ef\u5909\u9577\u5f15\u6570\u3067 `observable` \u3092\u53d6\u308a\u307e\u3059\u3002\u5404 `Observable` \u306b\u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u305f\u3073\u306b\u3001\u305d\u308c\u3092\u305d\u306e\u307e\u307e\u6d41\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n```\n\n\u3061\u306a\u307f\u306b\u540d\u524d\u306e\u4f3c\u3066\u3044\u308b [`Observable.prototype.mergeAll`](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/mergeall.md) \u306f\u52d5\u304d\u304c\u9055\u3044\u307e\u3059\u3002\n\n\u305f\u3060\u3001`Observable.merge` \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u898b\u308b\u3068\u3001\u5b9f\u88c5\u306f `Observable.from([...]).mergeAll()` \u3060\u3068\u5206\u304b\u308a\u307e\u3059 (\u5b9f\u969b\u306b\u306f `Observable.from` \u3067\u306f\u306a\u304f `Observable.ofWithScheduler(Scheduler.immediate, ...)` \u306a\u306e\u3067\u3059\u304c\u3001\u300cObservable \u306e\u751f\u6210\u300d\u3067 `of` \u306b\u89e6\u308c\u3066\u304a\u3089\u305a\u3001Scheduler \u306e\u8aac\u660e\u3082\u307e\u3060\u306a\u306e\u3067\u4eee\u306b `Observable.from` \u3067\u8aac\u660e\u3057\u307e\u3059) \u3002\n\n\u3064\u307e\u308a\u3001\u6b21\u306e\u30b3\u30fc\u30c9\u306f\u307b\u3068\u3093\u3069\u540c\u3058\u3067\u3059 (\u53b3\u5bc6\u306b\u306f\u7570\u306a\u308a\u307e\u3059)\u3002\n\n```js\nObservable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n```\n\n```js\nObservable\n  .from([\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  ])\n  .mergeAll()\n```\n\n## `Observable.prototype.merge`\n\n- [ReactiveX - Merge operator](http://reactivex.io/documentation/operators/merge.html)\n- [`Observable.prototype.merge` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/mergeproto.md)\n- [`Observable.prototype.merge` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/mergeconcat.js)\n\n\u5f15\u6570\u304c `Observable` \u3067\u3042\u308b (\u5b9f\u88c5\u306f `number` \u3067\u306a\u3044) \u3068\u304d\u306f `Observable.merge(...)` \u3068\u540c\u3058\u3067\u3001\u5f15\u6570\u304c `number` \u306e\u3068\u304d\u306f\u4e26\u884c\u6027\u306e\u6700\u5927\u3092\u5236\u9650\u3057\u307e\u3059\u3002\n\n\u5f15\u6570\u306b\u3088\u3063\u3066\u6319\u52d5\u304c\u5927\u5e45\u306b\u9055\u3046\u3042\u305f\u308a\u304c RxJS \u3089\u3057\u3044\u3068\u611f\u3058\u307e\u3059\u3002`merge` \u306e\u5f15\u6570\u306e\u9055\u3044\u306b\u3064\u3044\u3066\u306f\u5225\u3067 Qiita \u8a18\u4e8b\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u300e[RxJS 4 \u306e merge \u306e\u5f15\u6570\u306e\u5dee\u7570 (concurrent \u6307\u5b9a) \u3068 RxJS 5 \u3067\u306e\u5b9f\u88c5 - Qiita](http://qiita.com/bouzuya/items/6d0730c126bf842feec7)\u300f\n\n\u4ee5\u4e0b\u306f\u7b49\u4fa1\u306e\u30b3\u30fc\u30c9\u3092\u4e26\u3079\u305f\u3082\u306e\u3067\u3059\u3002\n\n```js\nimport { Observable, Scheduler } from 'rx';\n\nconst source1 = Observable\n  .ofWithScheduler(\n    Scheduler.immediate,\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  )\n  .mergeAll();\nconst source2 = Observable\n  .merge(\n    Observable.from([1, 2, 3]),\n    Observable.from(['A', 'B'])\n  );\nconst source3 = Observable\n  .from([1, 2, 3])\n  .merge(Observable.from(['A', 'B']));\n\nconst subscribe = (source) =>\n  source.subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n\nsubscribe(source1);\nsubscribe(source2);\nsubscribe(source3);\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n// onNext: 1\n// onNext: A\n// onNext: 2\n// onNext: B\n// onNext: 3\n// onCompleted\n```\n\n## `Observable.prototype.startWith`\n\n- [ReactiveX - StartWith operator](http://reactivex.io/documentation/operators/startwith.html)\n- [`Observable.prototype.startWith` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/startwith.md)\n- [`Observable.prototype.startWith` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/startwith.js)\n\n\u4e0e\u3048\u305f\u5f15\u6570\u3092\u6d41\u3057\u3066\u304b\u3089\u3001\u305d\u306e\u5f8c\u306b\u73fe\u5728\u306e observable \u306e\u5024\u3092\u6d41\u3059\u3088\u3046\u306a\u52d5\u304d\u3067\u3059\u3002`Observable.prototype.startWith` \u306f prepend \u3067\u3001 `Observable.prototype.concat` \u306f append \u306e\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u306d\u3002\u5b9f\u88c5\u306f `Observable.from([..., this]).concat(...)` \u3092\u671f\u5f85\u3057\u305f\u306e\u3067\u3059\u304c\u3001`Enumerable.of(...).concat()` \u306e\u3088\u3046\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([1, 2, 3])\n  .startWith(0)\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0\n// onNext: 1\n// onNext: 2\n// onNext: 3\n// onCompleted\n```\n\n\u5f8c\u8ff0\u306e `combineLatest` \u306e\u305f\u3081\u306b\u5fc5\u305a\u5024\u3092\u6d41\u3059\u3088\u3046\u306b\u3057\u305f\u3044\u5834\u5408\u306a\u3069\u306b\u3082\u4f7f\u3048\u307e\u3059\u3002\n\n## `Observable.combineLatest`\n\n- [ReactiveX - CombineLatest operator](http://reactivex.io/documentation/operators/combinelatest.html)\n- [`Observable.combineLatest` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/combinelatest.md)\n- [`Observable.combineLatest` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/combinelatest.js)\n\n\u53ef\u5909\u9577\u5f15\u6570\u3067 `observable` \u3092\u53d6\u308a\u3001\u6700\u5f8c\u306e\u5f15\u6570\u3067 `resultSelector` \u3092\u53d6\u308a\u307e\u3059\u3002\u5404 `Observable` \u306b\u5024\u304c\u6d41\u308c\u3066\u304f\u308b\u305f\u3073\u306b\u3001\u5404 `Observable` \u306e\u76f4\u8fd1\u306e\u5024\u304c\u5165\u3063\u305f `Array` \u3092 `resultSelector` \u306b\u6e21\u3057\u3066\u304f\u308c\u3066\u3001\u305d\u306e\u623b\u308a\u5024\u304c\u6b21\u3078\u3068\u6d41\u308c\u308b `Observable` \u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3053\u306e\u65e5\u672c\u8a9e\u306e\u8aac\u660e\u3067\u306f\u304d\u3063\u3068\u300c\u4f55\u3092\u8a00\u3063\u3066\u3044\u308b\u306e\u304b \u308f\u304b\u3089\u306d\u30fc\u3068\u601d\u3046\u304c\u300d\u72b6\u614b\u3060\u3068\u601d\u3046\u306e\u3067\u3059\u304c\u3001\u307c\u304f\u3082\u3053\u308c\u3067\u8aa4\u8aad\u306a\u3044\u3088\u3046\u306b\u8aac\u660e\u3067\u304d\u3066\u3044\u308b\u81ea\u4fe1\u304c\u307e\u3063\u305f\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306b\u9650\u3089\u305a Rx \u306e\u30e1\u30bd\u30c3\u30c9\u306e\u4e2d\u3067\u3082\u8907\u96d1\u306a\u3082\u306e\u306f\u8a00\u8449\u3067\u8aac\u660e\u3057\u3066\u3082\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u3082\u306e\u304c\u591a\u3044\u306e\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u304b\u8a66\u3059\u304b\u3057\u305f\u307b\u3046\u304c\u3044\u3044\u3067\u3059\u3002\n\n\u3061\u306a\u307f\u306b `combineLatest` \u306b\u9650\u308c\u3070 [ReactiveX \u306e combineLatest \u306e marble diagram](http://reactivex.io/documentation/operators/combinelatest.html) \u3092\u898b\u308b\u3068\u3001\u3068\u3066\u3082\u5206\u304b\u308a\u3084\u3059\u3044\u3068\u307c\u304f\u306f\u601d\u3044\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\n// -0-1-2-3->\nconst observable1 = Observable\n  .interval(100)\n  .take(4)\n  .map((_, index) => index);\n// --A---B-->\nconst observable2 = Observable\n  .interval(150)\n  .take(2)\n  .map((_, index) => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[index]);\n\n// -0-1-2-3->\n// --A---B-->\n// --xx-xxx->\nObservable\n  .combineLatest(\n    observable1,\n    observable2,\n    (value1, value2) => value1 + value2\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0A\n// onNext: 1A\n// onNext: 2A\n// onNext: 2B\n// onNext: 3B\n// onCompleted\n```\n\n\u6ce8\u610f\u3057\u3066\u304a\u304d\u305f\u3044\u306e\u304c\u5404 `Observable` \u306e\u6700\u521d\u306e\u5024\u304c\u6d41\u308c\u3066\u3053\u306a\u3044\u3068\u3001\u6b21\u3078\u5024\u3092\u6d41\u3055\u306a\u3044\u3068\u3044\u3046\u70b9\u3002\u76f4\u8fd1\u306e\u5024\u304c\u51fa\u63c3\u3063\u3066\u306f\u3058\u3081\u3066\u6b21\u306b\u6d41\u308c\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\u4f55\u3082\u6d41\u3055\u306a\u3044 `Observable.never` \u3092\u4f7f\u3063\u3066\u307f\u308b\u3068\u3053\u3093\u306a\u98a8\u306b\u306a\u308a\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nconst observable1 = Observable.never();\nconst observable2 = Observable\n  .interval(150)\n  .take(2)\n  .map((_, index) => 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'[index]);\n\nObservable\n  .combineLatest(\n    observable1,\n    observable2,\n    (value1, value2) => value1 + value2\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// (no output)\n```\n\n## `Observable.zip`\n\n- [ReactiveX - Zip operator](http://reactivex.io/documentation/operators/zip.html)\n- [`Observable.zip` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/zip.md)\n- [`Observable.zip` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/linq/observable/zip.js)\n\n`Observable.zip` \u306f zip \u3067\u3059 (\u9069\u5f53) \u3002\u8907\u6570\u306e `Observable` \u3067\u6d41\u308c\u305f\u8981\u7d20\u3092\u30da\u30a2\u306b\u3057\u3066\u6d41\u3057\u307e\u3059\u3002`combineLatest` \u306f\u5404 `Observable` \u306b\u5024\u304c\u6d41\u308c\u308b\u305f\u3073\u306b\u5024\u3092\u6d41\u3057\u305f\u306e\u306b\u5bfe\u3057\u3066\u3001`zip` \u306f\u3059\u3079\u3066\u306e `Observable` \u304c\u5024\u3092\u6d41\u3059\u307e\u3067\u5024\u3092\u6d41\u3057\u307e\u305b\u3093\u3002`combineLatest` \u306f\u6700\u521d\u306e\u5024\u3067\u5404 `Observable` \u306e\u5024\u304c\u51fa\u63c3\u3046\u306e\u3092\u5f85\u3064\u3088\u3046\u306b\u3001`zip` \u306f\u5404\u5024\u3067\u5404 `Observable` \u306e\u5024\u304c\u51fa\u63c3\u3046\u306e\u3092\u5f85\u3064\u3088\u3046\u3067\u3059\u3002\n\n\u307e\u305f\u5b9f\u88c5\u3068\u3057\u3066\u306f\u3001\u6700\u521d\u306e\u5f15\u6570 (`Observable`) \u306e `Observable.prototype.zip` \u306b\u6b8b\u308a\u306e\u5f15\u6570\u3092\u6e21\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .zip(\n    Observable.from([0, 1, 2]),\n    Observable.from([3, 4, 5]),\n    Observable.from([6, 7, 8])\n  )\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0,3,6\n// onNext: 1,4,7\n// onNext: 2,5,8\n// onCompleted\n```\n\n## `Observable.prototype.zip`\n\n- [ReactiveX - Zip operator](http://reactivex.io/documentation/operators/zip.html)\n- [`Observable.prototype.zip` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/zipproto.md)\n- [`Observable.prototype.zip` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/zip.js)\n\n\u524d\u8ff0\u306e\u3068\u304a\u308a\u3001`Observable.zip` \u3068\u307b\u3068\u3093\u3069\u540c\u3058\u6319\u52d5\u306a\u306e\u3067\u5272\u611b\u3057\u307e\u3059\u3002\n\n## `Observable.prototype.switch`\n\n- [ReactiveX - Switch operator](http://reactivex.io/documentation/operators/switch.html)\n- [`Observable.prototype.switch` API Document](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/doc/api/core/operators/switch.md)\n- [`Observable.prototype.switch` Source Code](https://github.com/Reactive-Extensions/RxJS/blob/v4.0.7/src/core/perf/operators/switch.js)\n\n`Observable.prototype.switch` \u306f `mergeAll` (`flatMap`) \u306e\u3088\u3046\u306b `Observable` \u306e `Observalbe` \u3092 flat \u306b\u3057\u307e\u3059\u3002`mergeAll` \u306e\u3088\u3046\u306b\u3059\u3079\u3066\u306e `Observable` \u306e\u5024\u3092 merge \u3059\u308b\u306e\u3068\u306f\u9055\u3044\u3001\u6b21\u306e `Observable` \u3078\u6b21\u3005\u3068 switch \u3057\u3066\u3044\u304d\u307e\u3059\u3002\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n```js\nimport { Observable } from 'rx';\n\nObservable\n  .from([\n    Observable.from([0, 1, 2]),\n    Observable.from([3, 4, 5]),\n    Observable.from([6, 7, 8])\n  ])\n  .switch()\n  .subscribe(\n    value => console.log(`onNext: ${value}`),\n    error => console.log(`onError: ${error}`),\n    () => console.log('onCompleted')\n  );\n// onNext: 0\n// onNext: 3\n// onNext: 6\n// onNext: 7\n// onNext: 8\n// onCompleted\n```\n\n\u3082\u3061\u308d\u3093 2 \u500b\u76ee\u306e Observable \u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u9045\u3089\u305b\u308b\u3068 `[0, 1, 2]` \u304c\u3059\u3079\u3066\u6d41\u308c\u3066\u304d\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b `switch` \u306e\u516c\u5f0f\u306e\u4f8b\u306f\u76f8\u5f53\u306b\u308f\u304b\u308a\u3065\u3089\u3044\u306e\u3067\u8179\u304c\u7acb\u3061\u307e\u3059\u3002\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u65e5\u306f `Observable` \u3092\u7d50\u5408\u3059\u308b Operator \u3092\u898b\u3066\u307f\u307e\u3057\u305f\u3002\u307e\u3060\u30ea\u30b9\u30c8\u7684\u306b\u306f\u7d42\u308f\u3063\u3066\u3044\u306a\u3044\u306e\u3067\u3059\u304c\u3001\u6642\u9593\u306e\u90fd\u5408\u3067\u3053\u3053\u3067\u533a\u5207\u308a\u307e\u3059\u3002\n"}