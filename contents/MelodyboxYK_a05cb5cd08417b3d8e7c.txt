{"context": "\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306f\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3057\u305f\u3044\u4e8b\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nC++\u306a\u3069\u306e\u8a00\u8a9e\u306b\u306f\u3053\u306e\u8981\u6c42\u306b\u5fdc\u3048\u308b\u70ba \u62bd\u8c61\u30af\u30e9\u30b9(abstract class) \u3068\u3044\u3046\u6982\u5ff5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Swift\u306b\u306f\u6b8b\u5ff5\u306a\u304c\u3089\u62bd\u8c61\u30af\u30e9\u30b9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\n\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u540c\u3058\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u305f\u3044\u5834\u5408\u3001protocol\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\u30b5\u30f3\u30d7\u30eb\u306f\u6b21\u306e\u8981\u4ef6\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n1. \u57fa\u5e95\u30af\u30e9\u30b9 BaseClass \u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u5b9a\u7fa9\u3059\u308b\n2. \u57fa\u5e95\u30af\u30e9\u30b9\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u7981\u6b62\u3059\u308b\n3. \u51e6\u7406\u306e\u6d41\u308c\u306b\u4f7f\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u30d7\u30ed\u30c8\u30b3\u30eb ClassFrameworkProtocol \u306b\u5b9a\u7fa9\u3059\u308b\n4. \u6d3e\u751f\u30af\u30e9\u30b9 SubClass \u306b\u5b9f\u969b\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\n5. \u6d3e\u751f\u30af\u30e9\u30b9\u306f ClassFrameworkProtocol \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3092\u7fa9\u52d9\u4ed8\u3051\u308b\n\n\nClassFrameworkProtocol \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u5b9f\u88c5\nprotocol ClassFrameworkProtocol: class {\n    func a()\n    func b()\n    func c()\n}\n\n\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u7fa4\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n\n\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\nclass BaseClass {\n    required init() {\n        assert(type(of: self) != BaseClass.self, \"BaseClass\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\")\n        assert(self is ClassFrameworkProtocol, \"ClassFrameworkProtocol\u3092\u63a1\u7528\u3059\u308b\u5fc5\u7528\u304c\u3042\u308a\u307e\u3059\")\n\n        self.work()\n    }\n\n    func work() {\n        if let obj = self as? ClassFrameworkProtocol {\n            obj.a()\n            obj.b()\n            obj.c()\n        }\n    }\n}\n\ninit() \u306b\u8981\u4ef62\u30685\u3092\u6e80\u305f\u3059\u70ba\u306e\u30c1\u30a7\u30c3\u30af\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\nwork() \u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u6d3e\u751f\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\nclass SubClass: BaseClass {}\n\nextension SubClass: ClassFrameworkProtocol {\n    func a() {\n        debugPrint(#function)\n    }\n\n    func b() {\n        debugPrint(#function)\n    }\n\n    func c() {\n        debugPrint(#function)\n    }\n}\n\n\u30d7\u30ed\u30c8\u30b3\u30ed\u30eb ClassFrameworkProtocol \u3092\u63a1\u7528\u3057\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n\n\u5b9f\u884c\u7d50\u679c\nlet obj = SubClass()\n\n\"a()\"\n\"b()\"\n\"c()\"\n\n\n\n\u8981\u4ef62\u306e\u691c\u8a3c\nlet baseObj = BaseClass()\n\nassertion failed: BaseClass\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\n\n\n\n\u8981\u4ef65\u306e\u691c\u8a3c\nclass NotAdoptedSubClass: BaseClass {}\nlet obj = NotAdoptedSubClass()\n\nassertion failed: ClassFrameworkProtocol\u3092\u63a1\u7528\u3059\u308b\u5fc5\u7528\u304c\u3042\u308a\u307e\u3059\n\n\u57fa\u5e95\u30af\u30e9\u30b9\u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u3001\u5b9f\u969b\u306e\u51e6\u7406\u306f\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u8a18\u8ff0\u3057\u305f\u3044\u4e8b\u304c\u3042\u308b\u3068\u601d\u3044\u307e\u3059\u3002\nC++\u306a\u3069\u306e\u8a00\u8a9e\u306b\u306f\u3053\u306e\u8981\u6c42\u306b\u5fdc\u3048\u308b\u70ba **\u62bd\u8c61\u30af\u30e9\u30b9(abstract class)** \u3068\u3044\u3046\u6982\u5ff5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3059\u304c\u3001Swift\u306b\u306f\u6b8b\u5ff5\u306a\u304c\u3089\u62bd\u8c61\u30af\u30e9\u30b9\u306f\u5b58\u5728\u3057\u307e\u305b\u3093\u3002\n\u62bd\u8c61\u30af\u30e9\u30b9\u3068\u540c\u3058\u632f\u308b\u821e\u3044\u3092\u3055\u305b\u305f\u3044\u5834\u5408\u3001protocol\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u30b5\u30f3\u30d7\u30eb\u306f\u6b21\u306e\u8981\u4ef6\u3067\u5b9f\u88c5\u3057\u307e\u3059\u3002\n1. \u57fa\u5e95\u30af\u30e9\u30b9 `BaseClass` \u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u5b9a\u7fa9\u3059\u308b\n2. \u57fa\u5e95\u30af\u30e9\u30b9\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u3092\u7981\u6b62\u3059\u308b\n3. \u51e6\u7406\u306e\u6d41\u308c\u306b\u4f7f\u3046\u30e1\u30bd\u30c3\u30c9\u306f\u30d7\u30ed\u30c8\u30b3\u30eb `ClassFrameworkProtocol` \u306b\u5b9a\u7fa9\u3059\u308b\n4. \u6d3e\u751f\u30af\u30e9\u30b9 `SubClass` \u306b\u5b9f\u969b\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3059\u308b\n5. \u6d3e\u751f\u30af\u30e9\u30b9\u306f `ClassFrameworkProtocol` \u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u63a1\u7528\u3059\u308b\u3053\u3068\u3092\u7fa9\u52d9\u4ed8\u3051\u308b\n\n---\n### ClassFrameworkProtocol \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u5b9f\u88c5\n```\nprotocol ClassFrameworkProtocol: class {\n\tfunc a()\n\tfunc b()\n\tfunc c()\n}\n```\n\u6d3e\u751f\u30af\u30e9\u30b9\u3067\u5b9f\u88c5\u3057\u3066\u3082\u3089\u3044\u305f\u3044\u30e1\u30bd\u30c3\u30c9\u7fa4\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n\n---\n### \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n```\nclass BaseClass {\n\trequired init() {\n\t\tassert(type(of: self) != BaseClass.self, \"BaseClass\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\")\n\t\tassert(self is ClassFrameworkProtocol, \"ClassFrameworkProtocol\u3092\u63a1\u7528\u3059\u308b\u5fc5\u7528\u304c\u3042\u308a\u307e\u3059\")\n\t\t\n\t\tself.work()\n\t}\n\t\n\tfunc work() {\n\t\tif let obj = self as? ClassFrameworkProtocol {\n\t\t\tobj.a()\n\t\t\tobj.b()\n\t\t\tobj.c()\n\t\t}\n\t}\n}\n```\n\n`init()` \u306b\u8981\u4ef62\u30685\u3092\u6e80\u305f\u3059\u70ba\u306e\u30c1\u30a7\u30c3\u30af\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n`work()` \u306b\u51e6\u7406\u306e\u6d41\u308c\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n---\n### \u6d3e\u751f\u30af\u30e9\u30b9\u306e\u5b9f\u88c5\n```\nclass SubClass: BaseClass {}\n\nextension SubClass: ClassFrameworkProtocol {\n\tfunc a() {\n\t\tdebugPrint(#function)\n\t}\n\t\n\tfunc b() {\n\t\tdebugPrint(#function)\n\t}\n\t\n\tfunc c() {\n\t\tdebugPrint(#function)\n\t}\n}\n```\n\n\u30d7\u30ed\u30c8\u30b3\u30ed\u30eb `ClassFrameworkProtocol` \u3092\u63a1\u7528\u3057\u3001\u5404\u30e1\u30bd\u30c3\u30c9\u306e\u51e6\u7406\u3092\u8a18\u8ff0\u3057\u3066\u3044\u307e\u3059\u3002\n\n---\n### \u5b9f\u884c\u7d50\u679c\n```\nlet obj = SubClass()\n```\n```\n\"a()\"\n\"b()\"\n\"c()\"\n```\n\n---\n### \u8981\u4ef62\u306e\u691c\u8a3c\n```\nlet baseObj = BaseClass()\n```\n```\nassertion failed: BaseClass\u306f\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5316\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\n```\n\n---\n### \u8981\u4ef65\u306e\u691c\u8a3c\n```\nclass NotAdoptedSubClass: BaseClass {}\nlet obj = NotAdoptedSubClass()\n```\n```\nassertion failed: ClassFrameworkProtocol\u3092\u63a1\u7528\u3059\u308b\u5fc5\u7528\u304c\u3042\u308a\u307e\u3059\n```\n", "tags": ["iOS", "Protocol", "Swift"]}