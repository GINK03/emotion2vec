{"context": "\n\n\u6982\u8981\nSpring Boot\u3092\u4f7f\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u4f5c\u6210\u3059\u308b\u8a18\u4e8b\u3067\u3059\u3002\uff08\u307e\u3060\u672a\u5b8c\u3067\u3059\uff09\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7528\u9014\u306fcron\u3084jenkins\u304b\u3089\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b\u30d0\u30c3\u30c1\u51e6\u7406\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u30d0\u30c3\u30c1\u51e6\u7406\u5411\u3051\u306eSpring Batch\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u304c\u3053\u306e\u4f8b\u3067\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\uff09\n\u74b0\u5883\n\nWindows10\nJava 1.8.0_92\nSpring-Boot 1.4.0\n\n\nSpring JDBC\nMyBatis\nMySQL 5.6\n\n\n\n\u53c2\u8003\n\nSpring Boot\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u6642\u306e\u6ce8\u610f\u70b9\nmybatis-spring-boot-starter\u306e\u4f7f\u3044\u65b9\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\u307e\u3060\u672a\u5b8c\u3067\u3059\u304c\u73fe\u6642\u70b9\u3067\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306fsbcl-example \u306b\u3042\u308a\u307e\u3059\u3002\n\n\u96db\u5f62\u306e\u4f5c\u6210\n\u96db\u5f62\u306fSPRING INITIALIZR\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u3068\u308a\u3042\u3048\u305a\u4f9d\u5b58\u95a2\u4fc2\u306b\u306f\u4e0b\u8a18\u306e3\u3064\u3092\u542b\u3081\u307e\u3057\u305f\u3002\n\nJDBC\nMySQL\nDevTools\n\n\n\n\u624b\u3092\u5165\u308c\u305f\u5f8c\u306e\u72b6\u614b\n\n\u8a2d\u5b9a\n\npom.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>sbcl-example</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>sbcl-example</name>\n    <description>CommandLine Application project for Spring Boot</description>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>1.4.0.RELEASE</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n            </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-jdbc</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>3.4</version>\n        </dependency>\n        <dependency>\n            <groupId>commons-collections</groupId>\n            <artifactId>commons-collections</artifactId>\n            <version>3.2.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n             </plugin>\n        </plugins>\n    </build>\n\n</project>\n\n\napplication.properties\nMySQL\u306b\u63a5\u7d9a\u3059\u308b\u51e6\u7406\u3092\u60f3\u5b9a\u3057\u3066datasource\u306e\u8a2d\u5b9a\u3060\u3051\u884c\u3063\u3066\u3044\u307e\u3059\u3002\nspring.profiles.active              = local\n\n# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)\nspring.datasource.url               = jdbc:mysql://localhost/test\nspring.datasource.username          = test_user\nspring.datasource.password          = test_user\nspring.datasource.driver-class-name     = com.mysql.jdbc.Driver\n\nspring.datasource.schema            = import.sql\n\n# MyBatis\nmybatis.config-location             = mybatis-config.xml\n# mybatis.mapper-locations          = \n# mybatis.type-aliases-package          = \n# mybatis.type-handlers-package         = \n# mybatis.executor-type             = SIMPLE\n# mybatis.configuration             = \n\n# JOOQ (JooqAutoConfiguration)\n# spring.jooq.sql-dialect=\n\n\u53c2\u8003\n\nAppendix A. Common application properties\n\n\nlogback-spring.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n  <property name=\"LOG_DIR\" value=\"D:/logs\" />\n\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{35} - %msg %n</pattern>\n    </encoder>\n  </appender>\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n     <file>${LOG_DIR}/sbcl-example.log</file>\n     <encoder>\n       <charset>UTF-8</charset>\n       <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] - %msg %n</pattern>\n     </encoder>\n  </appender>\n\n  <logger name=\"com.example\" level=\"DEBUG\" />\n\n  <logger name=\"org.springframework\" level=\"INFO\"/>\n  <root>\n    <appender-ref ref=\"STDOUT\" />\n    <appender-ref ref=\"FILE\" />\n  </root>\n</configuration>\n\n\n\u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\n\n\u5f15\u6570\u51e6\u7406\nDB\u63a5\u7d9a\n\u591a\u91cd\u8d77\u52d5\u5236\u5fa1\n\u51e6\u7406\u7d50\u679c\u306e\u5916\u90e8\u51fa\u529b\n\u901a\u77e5\u51e6\u7406\n\n\n\u5f15\u6570\u51e6\u7406\n\nCommons CLI\nargs4j\n\n\nCommons CLI\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nhttps://commons.apache.org/proper/commons-cli/\n\npom.xml\n<!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->\n<dependency>\n    <groupId>commons-cli</groupId>\n    <artifactId>commons-cli</artifactId>\n    <version>1.3.1</version>\n</dependency>\n\n\nargs4j parent\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nhttp://args4j.kohsuke.org/\n\npom.xml\n<!-- https://mvnrepository.com/artifact/args4j/args4j -->\n<dependency>\n    <groupId>args4j</groupId>\n    <artifactId>args4j</artifactId>\n    <version>2.33</version>\n</dependency>\n\n\nDB\u63a5\u7d9a\n\nSpring JDBC (spring-boot-starter-jdbc)\nMyBatis (mybatis-spring-boot-starter)\nJOOQ (spring-boot-starter-jooq)\nJPA (spring-boot-starter-data-jpa)\n\n\nSpring JDBC\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\nData access with JDBC\nhttp://docs.spring.io/spring/docs/current/spring-framework-reference/html/jdbc.html\n\n\nhttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-jdbc\n\npom.xml\n\u4f9d\u5b58\u95a2\u4fc2\u306bspring-boot-starter-jdbc\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-jdbc</artifactId>\n</dependency>\n\n\nMyBatis\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nmybatis-spring-boot-starter\n\npom.xml\n\u4f9d\u5b58\u95a2\u4fc2\u306bmybatis-spring-boot-starter\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.mybatis.spring.boot</groupId>\n  <artifactId>mybatis-spring-boot-starter</artifactId>\n  <version>1.1.1</version>\n</dependency>\n\n\nmybatis-config.xml\nsrc/java/resources/mybatis-config.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <typeAliases>\n        <package name=\"com.example.domain\"/>\n    </typeAliases>\n    <mappers>\n        <mapper resource=\"mapper/CityMapper.xml\"/>\n        <mapper resource=\"mapper/HotelMapper.xml\"/>\n    </mappers>\n</configuration>\n\n\nimport.sql\nsrc/java/resources/import.sql\ndrop table if exists city;\ndrop table if exists hotel;\n\ncreate table city (\n   `id` int not null\n , `name` varchar(30)\n , `state` varchar(6)\n , `country` varchar(6)\n , primary key(id)\n) engine = INNODB;\n\ncreate table hotel (\n    `id` int not null\n  , `city` int not null\n  , `name` varchar(60)\n  , `address` varchar(60)\n  , `zip` varchar(12)\n  , primary key(id)\n) engine = INNODB;\n\ninsert into city (id, name, state, country) values (1, 'San Francisco', 'CA', 'US');\ninsert into city (id, name, state, country) values (2, 'New York City', 'NY', 'US');\ninsert into city (id, name, state, country) values (3, 'Los Angeles', 'CA', 'US');\ninsert into city (id, name, state, country) values (4, 'Chicago', 'IL', 'US');\ninsert into city (id, name, state, country) values (5, 'Houston', 'TX', 'US');\n\ninsert into hotel(id, city, name, address, zip) values (1, 1, 'Conrad Treasury Place', 'William & George Streets', '4001');\ninsert into hotel(id, city, name, address, zip) values (2, 1, 'The Westin St. Francis San Francisco on Union Square', 'Powell Street, Union Square, San Francisco, CA', '335');\ninsert into hotel(id, city, name, address, zip) values (3, 1, 'The Fairmont San Francisco', 'Mason Street, San Francisco, CA', '950');\n\n\nmapper/CityMapper.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.CityMapper\">\n    <select id=\"selectCityById\" resultType=\"City\">\n        SELECT * FROM city WHERE id = #{id}\n    </select>\n</mapper>\n\n@Mapper\npublic interface CityMapper {\n\n    City selectCityById(final Long id);\n\n    @Select(\"SELECT * FROM city WHERE state = #{state}\")\n    List<City> findByState(@Param(\"state\") String state);\n\n}\n\n\nmapper/HotelMapper.xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.HotelMapper\">\n\n    <select id=\"selectHotelById\" resultType=\"Hotel\">\n        SELECT * FROM hotel WHERE id = #{id}\n    </select>\n\n    <resultMap id=\"selectByCityIdMap\" type=\"Hotel\">\n      <id property=\"id\" column=\"\u30db\u30c6\u30ebID\" />\n      <result property=\"city\" column=\"\u90fd\u5e02ID\" />\n      <result property=\"name\" column=\"\u30db\u30c6\u30eb\u540d\" />\n      <result property=\"address\" column=\"\u4f4f\u6240\" />\n      <result property=\"zip\" column=\"\u90f5\u4fbf\u756a\u53f7\" />\n    </resultMap>\n\n    <select id=\"selectByCityId\" resultMap=\"selectByCityIdMap\">\n        SELECT * FROM hotel WHERE city = #{id}\n    </select>\n\n</mapper>\n\n@Mapper\npublic interface HotelMapper {\n\n    Hotel selectHotelById(final Long id);\n\n    List<Hotel> selectByCityId(final Long cityId);\n\n}\n\n\nMyBatipse\nEclipse\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\nhttps://github.com/mybatis/mybatipse\n\nJOOQ\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nspring-boot-starter-jooq\n\npom.xml\n\u4f9d\u5b58\u95a2\u4fc2\u306bspring-boot-starter-jooq\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-jooq</artifactId>\n</dependency>\n\n\n\u53c2\u8003\n\nSpringBoot : Working with JOOQ\n\n\nJPA\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\nspring-boot-starter-data-jpa\n\npom.xml\n\u4f9d\u5b58\u95a2\u4fc2\u306bspring-boot-starter-data-jpa\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n\n\n\u591a\u91cd\u8d77\u52d5\u5236\u5fa1\n\nFileChannel\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n\u51e6\u7406\u7d50\u679c\u306e\u5916\u90e8\u51fa\u529b\n\nGoogle Sheets\u306b\u51fa\u529b\u3059\u308b\u5834\u5408\nGoogle Sheets API\nhttps://developers.google.com/sheets/\n\npom.xml\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\n\ngoogle-api-client\ngoogle-oauth-client-jetty\ngoogle-api-services-sheets\n\n<!-- https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->\n<dependency>\n    <groupId>com.google.api-client</groupId>\n    <artifactId>google-api-client</artifactId>\n    <version>1.22.0</version>\n</dependency>\n\n<!-- https://mvnrepository.com/artifact/com.google.oauth-client/google-oauth-client-jetty -->\n<dependency>\n    <groupId>com.google.oauth-client</groupId>\n    <artifactId>google-oauth-client-jetty</artifactId>\n    <version>1.22.0</version>\n</dependency>\n\n<!-- https://mvnrepository.com/artifact/com.google.apis/google-api-services-sheets -->\n<dependency>\n    <groupId>com.google.apis</groupId>\n    <artifactId>google-api-services-sheets</artifactId>\n    <version>v4-rev21-1.22.0</version>\n</dependency>\n\n\n\u901a\u77e5\u51e6\u7406\n\u60f3\u5b9a\u3059\u308b\u306e\u306f\u3001\u51e6\u7406\u306e\u300c\u958b\u59cb\u3001\u7d4c\u904e\u3001\u7d42\u4e86\u3001\u7570\u5e38\u767a\u751f\u300d\u306e\u65e5\u6642\u3084\u7d50\u679c\u306a\u3069\u3092\u901a\u77e5\u3059\u308b\u51e6\u7406\u3002\u307e\u305f\u306f\u5e38\u99d0\u578b\u306e\u5834\u5408\u306e\u6b7b\u6d3b\u901a\u77e5\u306a\u3069\u3002\n\nspring-boot-starter-mail\nSimple Slack API\n\n\n\u30e1\u30fc\u30eb\u3067\u901a\u77e5\u3059\u308b\u5834\u5408(spring-boot-starter-mail)\nhttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-mail\n\npom.xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-mail</artifactId>\n</dependency>\n\n\napplication.properties\nGmail\n# Email (MailProperties)\nspring.mail.default-encoding = UTF-8\nspring.mail.host = smtp.gmail.com\n#spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.\nspring.mail.password = ********** # Google App password\nspring.mail.port = 578\n#spring.mail.properties.*= # Additional JavaMail session properties.\nspring.mail.protocol = smtp\nspring.mail.test-connection = false\nspring.mail.username = *****.*****.*****@gmail.com # Google account mail address\n\n\nSlack\u3067\u901a\u77e5\u3059\u308b\u5834\u5408(Simple Slack API)\nhttps://github.com/Ullink/simple-slack-api\n\npom.xml\n<!-- https://mvnrepository.com/artifact/com.ullink.slack/simpleslackapi -->\n<dependency>\n    <groupId>com.ullink.slack</groupId>\n    <artifactId>simpleslackapi</artifactId>\n    <version>0.6.0</version>\n</dependency>\n\n\n\u5b9f\u88c5\u30b3\u30fc\u30c9\n\nApplication.java\npackage com.example;\n\nimport javax.annotation.PostConstruct;\nimport javax.annotation.PreDestroy;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ConfigurableApplicationContext;\n\nimport com.example.service.ServiceAlpha;\nimport com.example.service.ServiceBeta;\nimport com.example.service.ServiceGamma;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@SpringBootApplication\npublic class Application {\n\n    @Autowired\n    ServiceAlpha alpha;\n\n    @Autowired\n    ServiceBeta beta;\n\n    @Autowired\n    ServiceGamma gamma;\n\n    public static void main(String[] args) {\n        log.debug(\">>> call main\");\n        try (ConfigurableApplicationContext ctx = SpringApplication.run(Application.class, args)) {\n            Application app = ctx.getBean(Application.class);\n            app.run(args);\n        }\n        log.debug(\"<<< main end\");\n    }\n\n    @PostConstruct\n    public void init() {\n        log.debug(\"application init\");\n    }\n\n    @PreDestroy\n    public void destory() {\n        log.debug(\"application finish\");\n    }\n\n    public void run(final String... args) {\n        log.debug(\"application run\");\n        alpha.execute();\n        beta.execute(args);\n        gamma.execute();\n    }\n\n}\n\n\nServiceAlpha\npackage com.example.service;\n\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceAlpha {\n\n    @Autowired\n    private JdbcTemplate jdbc;\n\n    public void execute() {\n        log.debug(\"*** alpha in ***\");\n\n        if (jdbc == null) {\n            throw new RuntimeException(\"JdbcTemplate is null\");\n        }\n        Map<String, Object> result = jdbc.queryForMap(\"select now() as current\");\n        if (result == null) {\n            log.debug(\"result null\");\n            return;\n        }\n        result.forEach((k,v)->{\n            log.debug(\"key:{} value:{}\", k, v);\n        });\n\n        log.debug(\"*** alpha out ***\");\n    }\n}\n\n\nServiceBeta\npackage com.example.service;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceBeta {\n\n    public void execute(final String... args) {\n        log.debug(\"*** beta in ***\");\n\n        if (args!= null && args.length > 0) {\n            log.debug(\"UpperCase:{}\", StringUtils.join(args, \",\").toUpperCase());\n        }\n\n        log.debug(\"*** beta out ***\");\n    }\n}\n\n\nServiceGamma\npackage com.example.service;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport com.example.domain.City;\nimport com.example.domain.Hotel;\nimport com.example.mapper.CityMapper;\nimport com.example.mapper.HotelMapper;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceGamma {\n\n    @Autowired\n    private CityMapper cityMapper;\n\n    @Autowired\n    private HotelMapper hotelMapper;\n\n    public void execute() {\n        log.debug(\"*** gamma in ***\");\n\n        City city = cityMapper.selectCityById(1L);\n        log.debug(\"city:{}\", city);\n\n        List<City> cityList = cityMapper.findByState(\"CA\");\n        if (cityList != null) {\n            cityList.forEach(c -> {\n                log.debug(\"city:{}\",c);\n            });\n        } else {\n            log.debug(\"city list is null\");\n        }\n\n        Hotel hotel = hotelMapper.selectHotelById(1L);\n        log.debug(\"hotel:{}\", hotel);\n\n        List<Hotel> hotelList = hotelMapper.selectByCityId(1L);\n        if (hotelList != null) {\n            hotelList.forEach(h -> {\n                log.debug(\"hotel:{}\",h);\n            });\n        } else {\n            log.debug(\"hotel list is null\");\n        }\n\n        log.debug(\"*** gamma out ***\");\n    }\n\n}\n\n\n\u30d3\u30eb\u30c9\u3068\u5b9f\u884c\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4e0b\u8a18\u306emvn\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n> mvn clean package\n\n...\u7701\u7565...\n\nResults :\n\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO]\n[INFO] --- maven-jar-plugin:2.6:jar (default-jar) @ sbcl-example ---\n[INFO] Building jar: D:\\dev\\eclipse-jee-neon-workspace\\sbcl-example\\target\\sbcl-example-0.0.1-SNAPSHOT.jar\n[INFO]\n[INFO] --- spring-boot-maven-plugin:1.4.0.RELEASE:repackage (default) @ sbcl-example ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 8.619 s\n[INFO] Finished at: 2016-08-30T21:44:51+09:00\n[INFO] Final Memory: 27M/269M\n[INFO] ------------------------------------------------------------------------\n\ntarget\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bjar\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n> java -jar .\\target\\sbcl-example-0.0.1-SNAPSHOT.jar abc xyz\n\n...\u7701\u7565...\n\nDEBUG [main] com.example.Application - application init\nINFO  [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup\nINFO  [main] com.example.Application - Started Application in 3.771 seconds (JVM running for 4.699)\nDEBUG [main] com.example.Application - application run\nDEBUG [main] com.example.service.ServiceAlpha - *** alpha in ***\nDEBUG [main] com.example.service.ServiceAlpha - key:current value:2016-08-30 21:46:11.0\nDEBUG [main] com.example.service.ServiceAlpha - *** alpha out ***\nDEBUG [main] com.example.service.ServiceBeta - *** beta in ***\nDEBUG [main] com.example.service.ServiceBeta - UpperCase:ABC,XYZ\nDEBUG [main] com.example.service.ServiceBeta - *** beta out ***\nDEBUG [main] com.example.Application - application finish\nDEBUG [main] com.example.Application - <<< main end\n\n# \u6982\u8981\n\nSpring Boot\u3092\u4f7f\u3063\u305f\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u96db\u5f62\u3092\u4f5c\u6210\u3059\u308b\u8a18\u4e8b\u3067\u3059\u3002\uff08\u307e\u3060\u672a\u5b8c\u3067\u3059\uff09\n\u3053\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u7528\u9014\u306fcron\u3084jenkins\u304b\u3089\u5b9a\u671f\u7684\u306b\u5b9f\u884c\u3055\u308c\u308b\u30d0\u30c3\u30c1\u51e6\u7406\u3092\u60f3\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\uff08\u30d0\u30c3\u30c1\u51e6\u7406\u5411\u3051\u306eSpring Batch\u3068\u3044\u3046\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u304c\u3042\u308a\u307e\u3059\u304c\u3053\u306e\u4f8b\u3067\u306f\u4f7f\u7528\u3057\u307e\u305b\u3093\u3002\uff09\n\n**\u74b0\u5883**\n\n* Windows10\n* Java 1.8.0_92\n* Spring-Boot 1.4.0\n * Spring JDBC\n * MyBatis\n * MySQL 5.6\n\n**\u53c2\u8003**\n\n* [Spring Boot\u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u3092\u4f5c\u308b\u6642\u306e\u6ce8\u610f\u70b9] (http://qiita.com/tag1216/items/898348a7fc3465148bc8)\n* [mybatis-spring-boot-starter\u306e\u4f7f\u3044\u65b9] (http://qiita.com/kazuki43zoo/items/ea79e206d7c2e990e478)\n\n\n**\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9**\n\n\u307e\u3060\u672a\u5b8c\u3067\u3059\u304c\u73fe\u6642\u70b9\u3067\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f[sbcl-example] (https://github.com/rubytomato/sbcl-example) \u306b\u3042\u308a\u307e\u3059\u3002\n\n## \u96db\u5f62\u306e\u4f5c\u6210\n\n\u96db\u5f62\u306f[SPRING INITIALIZR] (https://start.spring.io/)\u3067\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\u3068\u308a\u3042\u3048\u305a\u4f9d\u5b58\u95a2\u4fc2\u306b\u306f\u4e0b\u8a18\u306e3\u3064\u3092\u542b\u3081\u307e\u3057\u305f\u3002\n\n* JDBC\n* MySQL\n* DevTools\n\n![si.png](https://qiita-image-store.s3.amazonaws.com/0/22772/0c93866a-d534-d030-8290-d9b8410adc12.png)\n\n\n## \u624b\u3092\u5165\u308c\u305f\u5f8c\u306e\u72b6\u614b\n\n### \u8a2d\u5b9a\n\n#### pom.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.example</groupId>\n\t<artifactId>sbcl-example</artifactId>\n\t<version>0.0.1-SNAPSHOT</version>\n\t<packaging>jar</packaging>\n\n\t<name>sbcl-example</name>\n\t<description>CommandLine Application project for Spring Boot</description>\n\n\t<parent>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\n\t\t<version>1.4.0.RELEASE</version>\n\t\t<relativePath/> <!-- lookup parent from repository -->\n\t</parent>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\t\t<java.version>1.8</java.version>\n\t</properties>\n\n\t<dependencies>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter</artifactId>\n        \t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t<artifactId>spring-boot-starter-jdbc</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>mysql</groupId>\n\t\t\t<artifactId>mysql-connector-java</artifactId>\n\t\t</dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>3.4</version>\n        </dependency>\n        <dependency>\n            <groupId>commons-collections</groupId>\n            <artifactId>commons-collections</artifactId>\n            <version>3.2.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\t\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n             </plugin>\n        </plugins>\n    </build>\n\n</project>\n```\n\n#### application.properties\n\nMySQL\u306b\u63a5\u7d9a\u3059\u308b\u51e6\u7406\u3092\u60f3\u5b9a\u3057\u3066datasource\u306e\u8a2d\u5b9a\u3060\u3051\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\n```text\nspring.profiles.active\t\t\t\t= local\n\n# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)\nspring.datasource.url\t\t\t\t= jdbc:mysql://localhost/test\nspring.datasource.username\t\t\t= test_user\nspring.datasource.password\t\t\t= test_user\nspring.datasource.driver-class-name\t\t= com.mysql.jdbc.Driver\n\nspring.datasource.schema\t\t\t= import.sql\n\n# MyBatis\nmybatis.config-location\t\t\t\t= mybatis-config.xml\n# mybatis.mapper-locations\t\t\t= \n# mybatis.type-aliases-package\t\t\t= \n# mybatis.type-handlers-package\t\t\t= \n# mybatis.executor-type\t\t\t\t= SIMPLE\n# mybatis.configuration\t\t\t\t= \n\n# JOOQ (JooqAutoConfiguration)\n# spring.jooq.sql-dialect=\n```\n\n*\u53c2\u8003*\n\n* [Appendix A. Common application properties] (http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html)\n\n\n\n#### logback-spring.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration>\n\n  <property name=\"LOG_DIR\" value=\"D:/logs\" />\n\n  <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n    <encoder>\n      <pattern>%d{yyyy-MMM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{35} - %msg %n</pattern>\n    </encoder>\n  </appender>\n  <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n     <file>${LOG_DIR}/sbcl-example.log</file>\n     <encoder>\n       <charset>UTF-8</charset>\n       <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] - %msg %n</pattern>\n     </encoder>\n  </appender>\n\n  <logger name=\"com.example\" level=\"DEBUG\" />\n\n  <logger name=\"org.springframework\" level=\"INFO\"/>\n  <root>\n    <appender-ref ref=\"STDOUT\" />\n    <appender-ref ref=\"FILE\" />\n  </root>\n</configuration>\n```\n\n## \u5b9f\u88c5\u3059\u308b\u6a5f\u80fd\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\n\n1. \u5f15\u6570\u51e6\u7406\n1. DB\u63a5\u7d9a\n1. \u591a\u91cd\u8d77\u52d5\u5236\u5fa1\n1. \u51e6\u7406\u7d50\u679c\u306e\u5916\u90e8\u51fa\u529b\n1. \u901a\u77e5\u51e6\u7406\n\n\n### \u5f15\u6570\u51e6\u7406\n\n* Commons CLI\n* args4j\n\n#### Commons CLI\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\nhttps://commons.apache.org/proper/commons-cli/\n\n##### pom.xml\n\n```xml\n<!-- https://mvnrepository.com/artifact/commons-cli/commons-cli -->\n<dependency>\n    <groupId>commons-cli</groupId>\n    <artifactId>commons-cli</artifactId>\n    <version>1.3.1</version>\n</dependency>\n```\n\n\n\n#### args4j parent\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\nhttp://args4j.kohsuke.org/\n\n##### pom.xml\n\n```xml\n<!-- https://mvnrepository.com/artifact/args4j/args4j -->\n<dependency>\n    <groupId>args4j</groupId>\n    <artifactId>args4j</artifactId>\n    <version>2.33</version>\n</dependency>\n```\n\n\n\n### DB\u63a5\u7d9a\n\n* Spring JDBC (spring-boot-starter-jdbc)\n* MyBatis (mybatis-spring-boot-starter)\n* JOOQ (spring-boot-starter-jooq)\n* JPA (spring-boot-starter-data-jpa)\n\n\n#### Spring JDBC\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n19. Data access with JDBC\nhttp://docs.spring.io/spring/docs/current/spring-framework-reference/html/jdbc.html\n\nhttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-jdbc\n\n##### pom.xml\n\n\u4f9d\u5b58\u95a2\u4fc2\u306b`spring-boot-starter-jdbc`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-jdbc</artifactId>\n</dependency>\n```\n\n#### MyBatis\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n[mybatis-spring-boot-starter] (https://github.com/mybatis/spring-boot-starter)\n\n##### pom.xml\n\n\u4f9d\u5b58\u95a2\u4fc2\u306b`mybatis-spring-boot-starter`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml\n<dependency>\n  <groupId>org.mybatis.spring.boot</groupId>\n  <artifactId>mybatis-spring-boot-starter</artifactId>\n  <version>1.1.1</version>\n</dependency>\n```\n\n##### mybatis-config.xml\n\nsrc/java/resources/mybatis-config.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE configuration\n        PUBLIC \"-//mybatis.org//DTD Config 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-config.dtd\">\n<configuration>\n    <typeAliases>\n        <package name=\"com.example.domain\"/>\n    </typeAliases>\n    <mappers>\n        <mapper resource=\"mapper/CityMapper.xml\"/>\n        <mapper resource=\"mapper/HotelMapper.xml\"/>\n    </mappers>\n</configuration>\n```\n\n##### import.sql\n\nsrc/java/resources/import.sql\n\n```sql\ndrop table if exists city;\ndrop table if exists hotel;\n\ncreate table city (\n   `id` int not null\n , `name` varchar(30)\n , `state` varchar(6)\n , `country` varchar(6)\n , primary key(id)\n) engine = INNODB;\n\ncreate table hotel (\n    `id` int not null\n  , `city` int not null\n  , `name` varchar(60)\n  , `address` varchar(60)\n  , `zip` varchar(12)\n  , primary key(id)\n) engine = INNODB;\n\ninsert into city (id, name, state, country) values (1, 'San Francisco', 'CA', 'US');\ninsert into city (id, name, state, country) values (2, 'New York City', 'NY', 'US');\ninsert into city (id, name, state, country) values (3, 'Los Angeles', 'CA', 'US');\ninsert into city (id, name, state, country) values (4, 'Chicago', 'IL', 'US');\ninsert into city (id, name, state, country) values (5, 'Houston', 'TX', 'US');\n\ninsert into hotel(id, city, name, address, zip) values (1, 1, 'Conrad Treasury Place', 'William & George Streets', '4001');\ninsert into hotel(id, city, name, address, zip) values (2, 1, 'The Westin St. Francis San Francisco on Union Square', 'Powell Street, Union Square, San Francisco, CA', '335');\ninsert into hotel(id, city, name, address, zip) values (3, 1, 'The Fairmont San Francisco', 'Mason Street, San Francisco, CA', '950');\n```\n\n##### mapper/CityMapper.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.CityMapper\">\n    <select id=\"selectCityById\" resultType=\"City\">\n        SELECT * FROM city WHERE id = #{id}\n    </select>\n</mapper>\n```\n\n```java\n@Mapper\npublic interface CityMapper {\n\n    City selectCityById(final Long id);\n\n    @Select(\"SELECT * FROM city WHERE state = #{state}\")\n    List<City> findByState(@Param(\"state\") String state);\n\n}\n```\n\n##### mapper/HotelMapper.xml\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<!DOCTYPE mapper\n        PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\"\n        \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\">\n<mapper namespace=\"com.example.mapper.HotelMapper\">\n\n    <select id=\"selectHotelById\" resultType=\"Hotel\">\n        SELECT * FROM hotel WHERE id = #{id}\n    </select>\n\n    <resultMap id=\"selectByCityIdMap\" type=\"Hotel\">\n      <id property=\"id\" column=\"\u30db\u30c6\u30ebID\" />\n      <result property=\"city\" column=\"\u90fd\u5e02ID\" />\n      <result property=\"name\" column=\"\u30db\u30c6\u30eb\u540d\" />\n      <result property=\"address\" column=\"\u4f4f\u6240\" />\n      <result property=\"zip\" column=\"\u90f5\u4fbf\u756a\u53f7\" />\n    </resultMap>\n\n    <select id=\"selectByCityId\" resultMap=\"selectByCityIdMap\">\n        SELECT * FROM hotel WHERE city = #{id}\n    </select>\n    \n</mapper>\n```\n\n```java\n@Mapper\npublic interface HotelMapper {\n\n\tHotel selectHotelById(final Long id);\n\n\tList<Hotel> selectByCityId(final Long cityId);\n\n}\n```\n\n##### MyBatipse\n\nEclipse\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\n\nhttps://github.com/mybatis/mybatipse\n\n\n\n#### JOOQ\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n[spring-boot-starter-jooq] (https://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-jooq)\n\n##### pom.xml\n\n\u4f9d\u5b58\u95a2\u4fc2\u306b`spring-boot-starter-jooq`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-jooq</artifactId>\n</dependency>\n```\n\n##### \u53c2\u8003\n\n* [SpringBoot : Working with JOOQ] (http://sivalabs.in/2016/03/springboot-working-with-jooq/)\n\n\n\n#### JPA\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n[spring-boot-starter-data-jpa] (https://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-data-jpa)\n\n##### pom.xml\n\n\u4f9d\u5b58\u95a2\u4fc2\u306b`spring-boot-starter-data-jpa`\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-data-jpa</artifactId>\n</dependency>\n```\n\n\n### \u591a\u91cd\u8d77\u52d5\u5236\u5fa1\n\n#### FileChannel\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\n\n\n\n\n### \u51e6\u7406\u7d50\u679c\u306e\u5916\u90e8\u51fa\u529b\n\n#### Google Sheets\u306b\u51fa\u529b\u3059\u308b\u5834\u5408\n\nGoogle Sheets API\nhttps://developers.google.com/sheets/\n\n##### pom.xml\n\n\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\n\n* google-api-client\n* google-oauth-client-jetty\n* google-api-services-sheets\n\n```xml\n<!-- https://mvnrepository.com/artifact/com.google.api-client/google-api-client -->\n<dependency>\n    <groupId>com.google.api-client</groupId>\n    <artifactId>google-api-client</artifactId>\n    <version>1.22.0</version>\n</dependency>\n```\n\n```xml\n<!-- https://mvnrepository.com/artifact/com.google.oauth-client/google-oauth-client-jetty -->\n<dependency>\n    <groupId>com.google.oauth-client</groupId>\n    <artifactId>google-oauth-client-jetty</artifactId>\n    <version>1.22.0</version>\n</dependency>\n```\n\n```xml\n<!-- https://mvnrepository.com/artifact/com.google.apis/google-api-services-sheets -->\n<dependency>\n    <groupId>com.google.apis</groupId>\n    <artifactId>google-api-services-sheets</artifactId>\n    <version>v4-rev21-1.22.0</version>\n</dependency>\n```\n\n\n\n### \u901a\u77e5\u51e6\u7406\n\n\u60f3\u5b9a\u3059\u308b\u306e\u306f\u3001\u51e6\u7406\u306e\u300c\u958b\u59cb\u3001\u7d4c\u904e\u3001\u7d42\u4e86\u3001\u7570\u5e38\u767a\u751f\u300d\u306e\u65e5\u6642\u3084\u7d50\u679c\u306a\u3069\u3092\u901a\u77e5\u3059\u308b\u51e6\u7406\u3002\u307e\u305f\u306f\u5e38\u99d0\u578b\u306e\u5834\u5408\u306e\u6b7b\u6d3b\u901a\u77e5\u306a\u3069\u3002\n\n* spring-boot-starter-mail\n* Simple Slack API\n\n#### \u30e1\u30fc\u30eb\u3067\u901a\u77e5\u3059\u308b\u5834\u5408(`spring-boot-starter-mail`)\n\nhttps://github.com/spring-projects/spring-boot/tree/master/spring-boot-starters/spring-boot-starter-mail\n\n##### pom.xml\n\n```xml\n<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-mail</artifactId>\n</dependency>\n```\n\n##### application.properties\n\nGmail\n\n```text\n# Email (MailProperties)\nspring.mail.default-encoding = UTF-8\nspring.mail.host = smtp.gmail.com\n#spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.\nspring.mail.password = ********** # Google App password\nspring.mail.port = 578\n#spring.mail.properties.*= # Additional JavaMail session properties.\nspring.mail.protocol = smtp\nspring.mail.test-connection = false\nspring.mail.username = *****.*****.*****@gmail.com # Google account mail address\n```\n\n\n#### Slack\u3067\u901a\u77e5\u3059\u308b\u5834\u5408(`Simple Slack API`)\n\nhttps://github.com/Ullink/simple-slack-api\n\n##### pom.xml\n\n```xml\n<!-- https://mvnrepository.com/artifact/com.ullink.slack/simpleslackapi -->\n<dependency>\n    <groupId>com.ullink.slack</groupId>\n    <artifactId>simpleslackapi</artifactId>\n    <version>0.6.0</version>\n</dependency>\n```\n\n\n\n## \u5b9f\u88c5\u30b3\u30fc\u30c9\n\n### Application.java\n\n```java\npackage com.example;\n\nimport javax.annotation.PostConstruct;\nimport javax.annotation.PreDestroy;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\nimport org.springframework.context.ConfigurableApplicationContext;\n\nimport com.example.service.ServiceAlpha;\nimport com.example.service.ServiceBeta;\nimport com.example.service.ServiceGamma;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@SpringBootApplication\npublic class Application {\n\n\t@Autowired\n\tServiceAlpha alpha;\n\n\t@Autowired\n\tServiceBeta beta;\n\n\t@Autowired\n\tServiceGamma gamma;\n\n\tpublic static void main(String[] args) {\n\t\tlog.debug(\">>> call main\");\n        try (ConfigurableApplicationContext ctx = SpringApplication.run(Application.class, args)) {\n        \tApplication app = ctx.getBean(Application.class);\n        \tapp.run(args);\n        }\n        log.debug(\"<<< main end\");\n\t}\n\n\t@PostConstruct\n\tpublic void init() {\n\t\tlog.debug(\"application init\");\n\t}\n\n\t@PreDestroy\n\tpublic void destory() {\n\t\tlog.debug(\"application finish\");\n\t}\n\n\tpublic void run(final String... args) {\n\t\tlog.debug(\"application run\");\n\t\talpha.execute();\n\t\tbeta.execute(args);\n\t\tgamma.execute();\n\t}\n\t\n}\n```\n\n#### ServiceAlpha\n\n```java\npackage com.example.service;\n\nimport java.util.Map;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.jdbc.core.JdbcTemplate;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceAlpha {\n\n    @Autowired\n    private JdbcTemplate jdbc;\n\n    public void execute() {\n    \tlog.debug(\"*** alpha in ***\");\n\n    \tif (jdbc == null) {\n    \t\tthrow new RuntimeException(\"JdbcTemplate is null\");\n    \t}\n    \tMap<String, Object> result = jdbc.queryForMap(\"select now() as current\");\n    \tif (result == null) {\n    \t\tlog.debug(\"result null\");\n    \t\treturn;\n    \t}\n    \tresult.forEach((k,v)->{\n    \t\tlog.debug(\"key:{} value:{}\", k, v);\n    \t});\n\n    \tlog.debug(\"*** alpha out ***\");\n    }\n}\n```\n\n#### ServiceBeta\n\n```java\npackage com.example.service;\n\nimport org.apache.commons.lang3.StringUtils;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceBeta {\n\n    public void execute(final String... args) {\n    \tlog.debug(\"*** beta in ***\");\n\n\t\tif (args!= null && args.length > 0) {\n\t\t\tlog.debug(\"UpperCase:{}\", StringUtils.join(args, \",\").toUpperCase());\n\t\t}\n\n    \tlog.debug(\"*** beta out ***\");\n    }\n}\n```\n\n#### ServiceGamma\n\n```java\npackage com.example.service;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport com.example.domain.City;\nimport com.example.domain.Hotel;\nimport com.example.mapper.CityMapper;\nimport com.example.mapper.HotelMapper;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Slf4j\n@Component\npublic class ServiceGamma {\n\n\t@Autowired\n\tprivate CityMapper cityMapper;\n\n\t@Autowired\n\tprivate HotelMapper hotelMapper;\n\n    public void execute() {\n    \tlog.debug(\"*** gamma in ***\");\n\n    \tCity city = cityMapper.selectCityById(1L);\n    \tlog.debug(\"city:{}\", city);\n\n    \tList<City> cityList = cityMapper.findByState(\"CA\");\n    \tif (cityList != null) {\n    \t\tcityList.forEach(c -> {\n    \t\t\tlog.debug(\"city:{}\",c);\n    \t\t});\n    \t} else {\n    \t\tlog.debug(\"city list is null\");\n    \t}\n\n    \tHotel hotel = hotelMapper.selectHotelById(1L);\n    \tlog.debug(\"hotel:{}\", hotel);\n\n    \tList<Hotel> hotelList = hotelMapper.selectByCityId(1L);\n    \tif (hotelList != null) {\n    \t\thotelList.forEach(h -> {\n    \t\t\tlog.debug(\"hotel:{}\",h);\n    \t\t});\n    \t} else {\n    \t\tlog.debug(\"hotel list is null\");\n    \t}\n\n    \tlog.debug(\"*** gamma out ***\");\n    }\n\n}\n```\n\n\n\n### \u30d3\u30eb\u30c9\u3068\u5b9f\u884c\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30eb\u30fc\u30c8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\u4e0b\u8a18\u306emvn\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bat\n> mvn clean package\n\n...\u7701\u7565...\n\nResults :\n\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO]\n[INFO] --- maven-jar-plugin:2.6:jar (default-jar) @ sbcl-example ---\n[INFO] Building jar: D:\\dev\\eclipse-jee-neon-workspace\\sbcl-example\\target\\sbcl-example-0.0.1-SNAPSHOT.jar\n[INFO]\n[INFO] --- spring-boot-maven-plugin:1.4.0.RELEASE:repackage (default) @ sbcl-example ---\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 8.619 s\n[INFO] Finished at: 2016-08-30T21:44:51+09:00\n[INFO] Final Memory: 27M/269M\n[INFO] ------------------------------------------------------------------------\n```\n\ntarget\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4e0b\u306b\u4f5c\u6210\u3055\u308c\u3066\u3044\u308bjar\u30d5\u30a1\u30a4\u30eb\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\n```bat\n> java -jar .\\target\\sbcl-example-0.0.1-SNAPSHOT.jar abc xyz\n\n...\u7701\u7565...\n\nDEBUG [main] com.example.Application - application init\nINFO  [main] o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup\nINFO  [main] com.example.Application - Started Application in 3.771 seconds (JVM running for 4.699)\nDEBUG [main] com.example.Application - application run\nDEBUG [main] com.example.service.ServiceAlpha - *** alpha in ***\nDEBUG [main] com.example.service.ServiceAlpha - key:current value:2016-08-30 21:46:11.0\nDEBUG [main] com.example.service.ServiceAlpha - *** alpha out ***\nDEBUG [main] com.example.service.ServiceBeta - *** beta in ***\nDEBUG [main] com.example.service.ServiceBeta - UpperCase:ABC,XYZ\nDEBUG [main] com.example.service.ServiceBeta - *** beta out ***\nDEBUG [main] com.example.Application - application finish\nDEBUG [main] com.example.Application - <<< main end\n```\n", "tags": ["spring-boot", "Java"]}