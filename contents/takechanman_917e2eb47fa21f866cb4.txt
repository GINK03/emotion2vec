{"context": "\n\n\u306f\u3058\u3081\u306b\nPostgres\u3092\u4f7f\u3063\u305fFlask\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092Heroku\u30c7\u30d7\u30ed\u30a4\u306b\u306f\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u30e1\u30e2\u3002\nFlask-SQLAlchemy\u3068\u3044\u3046Flask\u62e1\u5f35ORM\u3092\u4f7f\u3044\u307e\u3059\u3002\nFlask-SQLAlchemy\u516c\u5f0f\u3088\u308a\u3053\u306e\u30b5\u30a4\u30c8\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\nFlask\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084DB\u3092\u4f7f\u308f\u306a\u3044Heroku\u30c7\u30d7\u30ed\u30a4\u306f\u65e2\u306b\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\n\u7c21\u5358\u306a\u7528\u8a9e\u306e\u8aac\u660e\n\n\nSQLAlchemy\n\nPython\u306e\u305f\u3081\u306eDB\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3067\u3042\u308aORM\n\n\n\nflask-sqlalchem\n\nSQLAlchemy\u3092Flask\u3067\u52d5\u304b\u3059\u305f\u3081\u306e\u62e1\u5f35\n\n\n\npsycopg\n\nPython\u7528\u306ePostgreSQL\u30a2\u30c0\u30d7\u30bf\n\n\n\n\n\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ pip install flask-sqlalchemy psycopg2\n\nrequirements.txt\u3092\u66f8\u304d\u8fbc\u307f\u3059\u308bFlask\u3067\u306e\u304a\u304d\u307e\u308a\u306e\u4f5c\u696d\n$ pip freeze > requirements.txt\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30fb\u30e2\u30c7\u30eb\u4f5c\u6210\u30fb\u30c7\u30fc\u30bf\u633f\u5165\nUser\u30e2\u30c7\u30eb\u3068\u30e6\u30fc\u30b6\u30fcid\u306b\u7d10\u3065\u304fTask\u30e2\u30c7\u30eb\u3068\u3044\u30462\u3064\u306e\u30e2\u30c7\u30eb\u3092\u6271\u3046\u4f8b\u3067\u3059\u3002\nHeroku\u3067\u3046\u307e\u304f\u3044\u304f\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bDATABASE_URL\u3092\u660e\u793a\u3057\u3066DB\u63a5\u7d9a\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\napp.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']\n\napp.py\nfrom flask.ext.sqlalchemy import SQLAlchemy\nfrom flask import Flask, render_template, request\n\n# DB\u63a5\u7d9a\u306b\u95a2\u3059\u308b\u90e8\u5206\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']\ndb = SQLAlchemy(app)\n\n# \u30e2\u30c7\u30eb\u4f5c\u6210\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True)\n    email = db.Column(db.String(80), unique=True)\n\n    def __init__(self, username, email):\n        self.username = username\n        self.email = email\n\n    def __repr__(self):\n        return '<User %r>' % self.username\n\nclass Task(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    tasks = db.Column(db.String(80))\n    user_id = db.Column(db.Integer,db.ForeignKey('user.id'))\n\n    def __init__(self, tasks, user_id):\n        self.tasks = tasks\n        self.user_id = user_id\n\n    def __repr__(self):\n        return '<Task %r>' % self.tasks\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\n@app.route(\"/\", methods=['POST'])\ndef register():\n    if request.method == 'POST':\n        name= request.form['name']\n       email = request.form['email']\n      task = request.form['task']\n        # email\u304c\u672a\u767b\u9332\u306a\u3089\u30e6\u30fc\u30b6\u30fc\u8ffd\u52a0\n       if not db.session.query(User).filter(User.email == email).count():\n            reg = User(name, email)\n            db.session.add(reg)\n            db.session.commit()\n\n\n        # \u30bf\u30b9\u30af\u8ffd\u52a0\n        user_id= User.query.filter_by(User.email == email).first().id\n        task = Task(text, user_id)\n        db.session.add(task)\n        db.session.commit()\n\n        return render_template('success.html')  return render_template('index.html')\n\nif __name__ == '__main__':\n    app.debug = True\n    app.run()\n\n\n\n\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3084\u30c7\u30fc\u30bf\u306e\u633f\u5165\u306f\u4ee5\u4e0b\u306eflask-sqlalchemy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\n* \u30a2\u30bd\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3\n* \u9078\u629e\u3001\u633f\u5165\u3001\u524a\u9664\n\nHeroku\u306b\u53cd\u6620\n$ git commit -a -m \"added DB boilerplate\"\n$ git push heroku master\n\nHeroku\u5074\u306bPostgres\u306e\u30a2\u30c9\u30aa\u30f3\u3092\u8ffd\u52a0\n$ heroku addons:add heroku-postgresql\n\nHeroku\u5148\u3067DB\u306e\u4f5c\u6210\u3092\u884c\u3046\n$heroku run python\n>>> from app-name import db\n>>> db.create_all()\n\n\u3053\u308c\u3067Heroku\u3067\u3082\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082DB\u64cd\u4f5c\u304c\u53ef\u80fd\u3067\u3059\n$heroku run python\n>>> from app-name import db,User,Task\n>>> User.query.all()\n[<User 'userxx'>]\n>>> Task.query.all()\n...\n\n\n\u3088\u304f\u4f7f\u3063\u305fHeroku\u30b3\u30de\u30f3\u30c9(\u86c7\u8db3)\n\n\nheroku run bash\n\nheroku\u5148\u306bssh\u307f\u305f\u3044\u306a\n\n\n\nheroku logs -t\n\nHeroku\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n\n\n\nheroku pg:reset DATABASE --confirm app-name\n\ndatabase\u306e\u30ea\u30bb\u30c3\u30c8\n\n\n\n\n\u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n\nhttp://blog.y3xz.com/blog/2012/08/16/flask-and-postgresql-on-heroku\nhttp://blog.sahildiwan.com/posts/flask-and-postgresql-app-deployed-on-heroku/\nhttp://www.vertabelo.com/blog/technical-articles/web-app-development-with-flask-sqlalchemy-bootstrap-part-3\n\n\n## \u306f\u3058\u3081\u306b\nPostgres\u3092\u4f7f\u3063\u305fFlask\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092Heroku\u30c7\u30d7\u30ed\u30a4\u306b\u306f\u307e\u3063\u3066\u3044\u305f\u306e\u3067\u30e1\u30e2\u3002\nFlask-SQLAlchemy\u3068\u3044\u3046Flask\u62e1\u5f35ORM\u3092\u4f7f\u3044\u307e\u3059\u3002\n[Flask-SQLAlchemy\u516c\u5f0f](http://flask-sqlalchemy.pocoo.org/)\u3088\u308a[\u3053\u306e\u30b5\u30a4\u30c8](http://blog.y3xz.com/blog/2012/08/16/flask-and-postgresql-on-heroku)\u306e\u65b9\u304c\u308f\u304b\u308a\u3084\u3059\u304b\u3063\u305f\u3002\nFlask\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3084DB\u3092\u4f7f\u308f\u306a\u3044Heroku\u30c7\u30d7\u30ed\u30a4\u306f\u65e2\u306b\u3067\u304d\u3066\u3044\u308b\u72b6\u614b\u304b\u3089\u59cb\u3081\u307e\u3059\u3002\n\n## \u7c21\u5358\u306a\u7528\u8a9e\u306e\u8aac\u660e\n- [SQLAlchemy](http://www.sqlalchemy.org/)\n\t- Python\u306e\u305f\u3081\u306eDB\u30c4\u30fc\u30eb\u30ad\u30c3\u30c8\u3067\u3042\u308aORM\n- [flask-sqlalchem](http://flask-sqlalchemy.pocoo.org/)\n\t- SQLAlchemy\u3092Flask\u3067\u52d5\u304b\u3059\u305f\u3081\u306e\u62e1\u5f35\n- [psycopg](http://initd.org/psycopg/)\n\t- Python\u7528\u306ePostgreSQL\u30a2\u30c0\u30d7\u30bf\n\n## \u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ pip install flask-sqlalchemy psycopg2\n```\nrequirements.txt\u3092\u66f8\u304d\u8fbc\u307f\u3059\u308bFlask\u3067\u306e\u304a\u304d\u307e\u308a\u306e\u4f5c\u696d\n\n```\n$ pip freeze > requirements.txt\n```\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u30fb\u30e2\u30c7\u30eb\u4f5c\u6210\u30fb\u30c7\u30fc\u30bf\u633f\u5165\nUser\u30e2\u30c7\u30eb\u3068\u30e6\u30fc\u30b6\u30fcid\u306b\u7d10\u3065\u304fTask\u30e2\u30c7\u30eb\u3068\u3044\u30462\u3064\u306e\u30e2\u30c7\u30eb\u3092\u6271\u3046\u4f8b\u3067\u3059\u3002\nHeroku\u3067\u3046\u307e\u304f\u3044\u304f\u306b\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306bDATABASE_URL\u3092\u660e\u793a\u3057\u3066DB\u63a5\u7d9a\u3092\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n`app.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']`\n\n```python:app.py\nfrom flask.ext.sqlalchemy import SQLAlchemy\nfrom flask import Flask, render_template, request\n\n# DB\u63a5\u7d9a\u306b\u95a2\u3059\u308b\u90e8\u5206\napp = Flask(__name__)\napp.config['SQLALCHEMY_DATABASE_URI'] = os.environ['DATABASE_URL']\ndb = SQLAlchemy(app)\n\n# \u30e2\u30c7\u30eb\u4f5c\u6210\nclass User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(80), unique=True)\n    email = db.Column(db.String(80), unique=True)\n\n    def __init__(self, username, email):\n        self.username = username\n        self.email = email\n\n    def __repr__(self):\n        return '<User %r>' % self.username\n\nclass Task(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    tasks = db.Column(db.String(80))\n    user_id = db.Column(db.Integer,db.ForeignKey('user.id'))\n\n    def __init__(self, tasks, user_id):\n        self.tasks = tasks\n        self.user_id = user_id\n\n    def __repr__(self):\n        return '<Task %r>' % self.tasks\n\n# \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u306b\u8ffd\u52a0\u3059\u308b\u30b3\u30fc\u30c9\u4f8b\n@app.route(\"/\", methods=['POST'])\ndef register():\n    if request.method == 'POST':\n    \tname= request.form['name']\n\t   email = request.form['email']\n\t  task = request.form['task']\n\t\t# email\u304c\u672a\u767b\u9332\u306a\u3089\u30e6\u30fc\u30b6\u30fc\u8ffd\u52a0\n\t   if not db.session.query(User).filter(User.email == email).count():\n\t        reg = User(name, email)\n\t        db.session.add(reg)\n\t        db.session.commit()\n\t        \n\t        \n\t\t# \u30bf\u30b9\u30af\u8ffd\u52a0\n\t\tuser_id= User.query.filter_by(User.email == email).first().id\n\t    task = Task(text, user_id)\n\t    db.session.add(task)\n\t    db.session.commit()\n\t\n\t    return render_template('success.html')\treturn render_template('index.html')\n    \nif __name__ == '__main__':\n    app.debug = True\n    app.run()\n\n```\n\n\u30e2\u30c7\u30eb\u306e\u4f5c\u6210\u3084\u30c7\u30fc\u30bf\u306e\u633f\u5165\u306f\u4ee5\u4e0b\u306eflask-sqlalchemy\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53c2\u8003\u306b\u3057\u307e\u3057\u305f\n* [\u30a2\u30bd\u30b7\u30a8\u30fc\u30b7\u30e7\u30f3](http://flask-sqlalchemy.pocoo.org/2.1/models/)\n* [\u9078\u629e\u3001\u633f\u5165\u3001\u524a\u9664](http://flask-sqlalchemy.pocoo.org/2.1/queries/)\n\n\n## Heroku\u306b\u53cd\u6620\n\n```\n$ git commit -a -m \"added DB boilerplate\"\n$ git push heroku master\n```\n\nHeroku\u5074\u306b[Postgres\u306e\u30a2\u30c9\u30aa\u30f3](https://devcenter.heroku.com/articles/heroku-postgresql)\u3092\u8ffd\u52a0\n\n```\n$ heroku addons:add heroku-postgresql\n```\nHeroku\u5148\u3067DB\u306e\u4f5c\u6210\u3092\u884c\u3046\n\n```\n$heroku run python\n>>> from app-name import db\n>>> db.create_all()\n```\n\u3053\u308c\u3067Heroku\u3067\u3082\u3046\u307e\u304f\u52d5\u3044\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3057\u3066\u3082DB\u64cd\u4f5c\u304c\u53ef\u80fd\u3067\u3059\n\n```\n$heroku run python\n>>> from app-name import db,User,Task\n>>> User.query.all()\n[<User 'userxx'>]\n>>> Task.query.all()\n...\n```\n\n## \u3088\u304f\u4f7f\u3063\u305fHeroku\u30b3\u30de\u30f3\u30c9(\u86c7\u8db3)\n* `heroku run bash`\n    * heroku\u5148\u306bssh\u307f\u305f\u3044\u306a\n* `heroku logs -t`\n    * Heroku\u306e\u30ed\u30b0\u306e\u78ba\u8a8d\n* `heroku pg:reset DATABASE --confirm app-name`\n    * database\u306e\u30ea\u30bb\u30c3\u30c8\n\n## \u53c2\u8003\u306b\u3057\u305f\u30b5\u30a4\u30c8\n* http://blog.y3xz.com/blog/2012/08/16/flask-and-postgresql-on-heroku\n* http://blog.sahildiwan.com/posts/flask-and-postgresql-app-deployed-on-heroku/\n* http://www.vertabelo.com/blog/technical-articles/web-app-development-with-flask-sqlalchemy-bootstrap-part-3\n\n", "tags": ["PostgreSQL", "Flask", "Heroku", "sqlalchemy"]}