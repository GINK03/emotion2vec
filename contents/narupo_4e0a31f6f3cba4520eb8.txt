{"context": " More than 1 year has passed since last update.\u306e\u7df4\u7fd2\u3002\u914d\u5217\u3092\u64cd\u4f5c\u3059\u308b\u3060\u3051\u3002\u3044\u308d\u3044\u308d\u624b\u629c\u304d\u3002\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u3053\u3068\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u8981\u6c42\u3092\u6e80\u305f\u305b\u3070\u826f\u3044\u306e\u3067\u5185\u90e8\u306e\u5b9f\u88c5\u306f\u67d4\u8edf\u306b\u51fa\u6765\u305d\u3046\u3002\n\u305d\u308c\u304b\u3089\u30d1\u30b9\u304c\u9593\u63a5\u7684\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u306e\u3067\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304f\u3066\u3082\u30d1\u30b9\u3092\u898b\u308c\u3070\u77db\u76fe\u306b\u6c17\u3065\u304d\u3084\u3059\u3044\u3002\n\u6b63\u78ba\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u305f\u3081\u306b\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u9069\u5207\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\nrest\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum { NARRAY = 5, };\nstatic int array[NARRAY];\n\nint\narray_get(size_t index, int* result) {\n    if (index >= NARRAY) {\n        return 403;\n    }\n    *result = array[index];\n    if (*result == 0) {\n        return 404;\n    }\n    return 200;\n}\n\nint\narray_set(size_t index, int value) {\n    if (index >= NARRAY) {\n        return 403;\n    }\n    array[index] = value;\n    return 200;\n}\n\nvoid\nrest_run(char* cmd) {\n    int code;\n    char const* method = strtok(cmd, \" \");\n    char const* resource = strtok(NULL, \"/\"); // Danger\n\n    if (strcmp(resource, \"array\") == 0) {\n        if (strcasecmp(method, \"GET\") == 0) {\n            int index = atoi(strtok(NULL, \"/\")); // Danger\n            int result = 0;\n            code = array_get(index, &result);\n            printf(\"code[%d] result[%d]\\n\", code, result);\n\n        } else if (strcasecmp(method, \"PUT\") == 0) {\n            int index = atoi(strtok(NULL, \"/\")); // Danger\n            int value = atoi(strtok(NULL, \"/\")); // Danger\n            code = array_set(index, value);\n            printf(\"code[%d]\\n\", code);\n\n        } else if (strcasecmp(method, \"POST\") == 0) {\n            int index = atoi(strtok(NULL, \"/\")); // Danger\n            int value = atoi(strtok(NULL, \"/\")); // Danger\n            code = array_set(index, value);\n            printf(\"code[%d]\\n\", code);\n\n        } else if (strcasecmp(method, \"DELETE\") == 0) {\n            int index = atoi(strtok(NULL, \"/\")); // Danger\n            code = array_set(index, 0);\n            printf(\"code[%d]\\n\", code);\n\n        } else {\n            printf(\"code[%d]\\n\", 405);\n\n        }\n    } else {\n        printf(\"code[%d]\\n\", 404);\n    }\n\n    printf(\"array: \");\n    for (int i = 0; i < NARRAY; ++i) {\n        printf(\"[%d:%d] \", i, array[i]);\n    }\n    printf(\"\\n\\n\");\n\n    fflush(stdout);\n}\n\nint\nmain(int argc, char* argv[]) {\n    char cmd[1024];\n\n    for (; fgets(cmd, sizeof cmd, stdin); ) {\n        size_t cmdlen = strlen(cmd);\n        if (cmd[cmdlen-1] == '\\n') {\n            cmd[--cmdlen] = '\\0';\n        }\n\n        rest_run(cmd);\n    }\n\n    return 0;\n}\n\n\n\n\nresult\n$ gcc rest.c && ./a.exe\nPOST array/0/123\ncode[200]\narray: [0:123] [1:0] [2:0] [3:0] [4:0]\n\nPOST array/2/223\ncode[200]\narray: [0:123] [1:0] [2:223] [3:0] [4:0]\n\nPUT array/0/323\ncode[200]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nGET array/0\ncode[200] result[323]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nGET array/1\ncode[404] result[0]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nDELETE array/0\ncode[200]\narray: [0:0] [1:0] [2:223] [3:0] [4:0]\n\nDELETE array/2\ncode[200]\narray: [0:0] [1:0] [2:0] [3:0] [4:0]\n\nDELETE array/100\ncode[403]\narray: [0:0] [1:0] [2:0] [3:0] [4:0]\n\n\n\n\u306e\u7df4\u7fd2\u3002\u914d\u5217\u3092\u64cd\u4f5c\u3059\u308b\u3060\u3051\u3002\u3044\u308d\u3044\u308d\u624b\u629c\u304d\u3002\n\u66f8\u3044\u3066\u307f\u3066\u601d\u3063\u305f\u3053\u3068\u306f\u3001\u30e1\u30bd\u30c3\u30c9\u306e\u8981\u6c42\u3092\u6e80\u305f\u305b\u3070\u826f\u3044\u306e\u3067\u5185\u90e8\u306e\u5b9f\u88c5\u306f\u67d4\u8edf\u306b\u51fa\u6765\u305d\u3046\u3002\n\u305d\u308c\u304b\u3089\u30d1\u30b9\u304c\u9593\u63a5\u7684\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u8868\u73fe\u3059\u308b\u306e\u3067\u30b3\u30fc\u30c9\u3092\u898b\u306a\u304f\u3066\u3082\u30d1\u30b9\u3092\u898b\u308c\u3070\u77db\u76fe\u306b\u6c17\u3065\u304d\u3084\u3059\u3044\u3002\n\u6b63\u78ba\u306a\u30b9\u30c6\u30fc\u30bf\u30b9\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u305f\u3081\u306b\u306f\u30a8\u30e9\u30fc\u51e6\u7406\u3092\u9069\u5207\u306b\u884c\u3046\u5fc5\u8981\u304c\u3042\u308b\u3002\n\n```c:rest\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nenum { NARRAY = 5, };\nstatic int array[NARRAY];\n\nint\narray_get(size_t index, int* result) {\n\tif (index >= NARRAY) {\n\t\treturn 403;\n\t}\n\t*result = array[index];\n\tif (*result == 0) {\n\t\treturn 404;\n\t}\n\treturn 200;\n}\n\nint\narray_set(size_t index, int value) {\n\tif (index >= NARRAY) {\n\t\treturn 403;\n\t}\n\tarray[index] = value;\n\treturn 200;\n}\n\nvoid\nrest_run(char* cmd) {\n\tint code;\n\tchar const* method = strtok(cmd, \" \");\n\tchar const* resource = strtok(NULL, \"/\"); // Danger\n\n\tif (strcmp(resource, \"array\") == 0) {\n\t\tif (strcasecmp(method, \"GET\") == 0) {\n\t\t\tint index = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tint result = 0;\n\t\t\tcode = array_get(index, &result);\n\t\t\tprintf(\"code[%d] result[%d]\\n\", code, result);\n\n\t\t} else if (strcasecmp(method, \"PUT\") == 0) {\n\t\t\tint index = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tint value = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tcode = array_set(index, value);\n\t\t\tprintf(\"code[%d]\\n\", code);\n\t\t\t\n\t\t} else if (strcasecmp(method, \"POST\") == 0) {\n\t\t\tint index = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tint value = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tcode = array_set(index, value);\n\t\t\tprintf(\"code[%d]\\n\", code);\n\t\t\t\n\t\t} else if (strcasecmp(method, \"DELETE\") == 0) {\n\t\t\tint index = atoi(strtok(NULL, \"/\")); // Danger\n\t\t\tcode = array_set(index, 0);\n\t\t\tprintf(\"code[%d]\\n\", code);\n\t\t\t\n\t\t} else {\n\t\t\tprintf(\"code[%d]\\n\", 405);\n\n\t\t}\n\t} else {\n\t\tprintf(\"code[%d]\\n\", 404);\n\t}\n\n\tprintf(\"array: \");\n\tfor (int i = 0; i < NARRAY; ++i) {\n\t\tprintf(\"[%d:%d] \", i, array[i]);\n\t}\n\tprintf(\"\\n\\n\");\n\n\tfflush(stdout);\n}\n\nint\nmain(int argc, char* argv[]) {\n\tchar cmd[1024];\n\n\tfor (; fgets(cmd, sizeof cmd, stdin); ) {\n\t\tsize_t cmdlen = strlen(cmd);\n\t\tif (cmd[cmdlen-1] == '\\n') {\n\t\t\tcmd[--cmdlen] = '\\0';\n\t\t}\n\n\t\trest_run(cmd);\n\t}\n\n\treturn 0;\n}\n\n```\n\n```bash:result\n$ gcc rest.c && ./a.exe\nPOST array/0/123\ncode[200]\narray: [0:123] [1:0] [2:0] [3:0] [4:0]\n\nPOST array/2/223\ncode[200]\narray: [0:123] [1:0] [2:223] [3:0] [4:0]\n\nPUT array/0/323\ncode[200]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nGET array/0\ncode[200] result[323]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nGET array/1\ncode[404] result[0]\narray: [0:323] [1:0] [2:223] [3:0] [4:0]\n\nDELETE array/0\ncode[200]\narray: [0:0] [1:0] [2:223] [3:0] [4:0]\n\nDELETE array/2\ncode[200]\narray: [0:0] [1:0] [2:0] [3:0] [4:0]\n\nDELETE array/100\ncode[403]\narray: [0:0] [1:0] [2:0] [3:0] [4:0]\n\n```\n", "tags": ["C", "rest", "HTTP", "\u8a2d\u8a08"]}