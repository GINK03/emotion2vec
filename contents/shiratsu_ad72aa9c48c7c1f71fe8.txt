{"context": " More than 1 year has passed since last update.\u3044\u307e\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\nFeatureContext.php\n<?php\n\nuse Behat\\Behat\\Context\\ClosuredContextInterface,\n    Behat\\Behat\\Context\\TranslatedContextInterface,\n    Behat\\Behat\\Context\\BehatContext,\n    Behat\\Behat\\Exception\\PendingException;\nuse Behat\\Gherkin\\Node\\PyStringNode,\n    Behat\\Gherkin\\Node\\TableNode;\n\nuse Behat\\MinkExtension\\Context\\MinkDictionary;\n\nuse Behat\\Mink\\Selector\\CssSelector,\n    Behat\\Mink\\Selector\\NameSelector,\n    \\Behat\\Mink\\Selector\\SelectorsHandler;\n//\n// Require 3rd-party libraries here:\n//\n//   require_once 'PHPUnit/Autoload.php';\n//   require_once 'PHPUnit/Framework/Assert/Functions.php';\n//\n\n/**\n * Features context.\n */\nclass FeatureContext extends Behat\\MinkExtension\\Context\\MinkContext\n{\n\n\n    //use MinkDictionary;\n    /**\n     * Initializes context.\n     * Every scenario gets it's own context object.\n     *\n     * @param array $parameters context parameters (set them up through behat.yml)\n     */\n    public function __construct(array $parameters)\n    {\n        // Initialize your context here\n    }\n\n    /**\n     * @Then /^I wait for the suggestion box to appear$/\n     */\n    public function iWaitForTheSuggestionBoxToAppear()\n    {\n        $this->getSession()->wait(5000, \"$('.suggestions-results').children().length > 0\");\n    }\n\n   /**\n     * @Given /^I am on \"([^\"]*)\"$/\n     */\n    // public function iAmOn($arg1)\n    // {\n    //     // throw new PendingException();\n    // }\n\n    /**\n     * @When /^I fill in \"([^\"]*)\" with \"([^\"]*)\"$/\n     */\n    public function iFillInWith($arg1, $arg2)\n    {\n        // throw new PendingException();\n        $this->getSession()->wait(15000);\n    }\n\n    /**\n     * @Given /^I click \"([^\"]*)\"$/\n     */\n    public function iClick($arg1)\n    {\n        // throw new PendingException();\n        $this->getSession()->wait(20000);\n    }\n\n    /**\n     * @Then /^I should see \"([^\"]*)\"$/\n     */\n    // public function iShouldSee($arg1)\n    // {\n    //     // throw new PendingException();\n    // }\n    /**\n     * @When /^I click_link \"([^\"]*)\"$/\n     */\n    public function iClickLink($arg1)\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\"\u30ed\u30b0\u30a4\u30f3\"\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function stepDefinition1()\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\"([^\"]*)\" \u306b \"([^\"]*)\" \u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function fang($arg1, $arg2)\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\u4e00\u79d2\u5f85\u3064$/\n     */\n    public function ta()\n    {\n        // throw new PendingException();\n        sleep(1);\n    }\n\n    /**\n     * @Given /^(\\d+)\u79d2\u5f85\u3064$/\n     */\n    public function ta2($arg1)\n    {\n        // throw new PendingException();\n        sleep($arg1);\n    }\n\n    /**\n     * @Given /^Ajax\u3092\u5f85\u3064$/\n     */\n    public function ajax()\n    {\n        // throw new PendingException();\n        sleep(2);\n    }\n\n\n\n    /**\n     * @Given /^\"(.+)\"\u306b \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function radioButtonSelect($arg1, $arg2)\n    {\n        $radio_button = $this->getSession()->getPage()->find('css', 'input[type=radio][name=\"'.$arg1.'\"][value='.$arg2.']');\n        if (null === $radio_button) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $radio_button\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $radio_button->click();\n    }\n    /**\n     * @Given /^\"([^\"]*)\" checkbox\u3092 \u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function chekboxClick($arg1)\n    {\n        $el = $this->getSession()->getPage()->find('css', 'input[type=checkbox][name=\"'.$arg1.'\"]');\n        if (null === $el) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $el\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $el->click();\n    }\n\n    /**\n     * \n     * @Given /^\"([^\"]*)\" \u306e\"class:(.+)\"\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function gotoLinkForClass($arg1,$arg2)\n    {\n        $elAry = $this->getSession()->getPage()->findAll('css', 'a.'.$arg2);\n        if (null === $elAry) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'link', 'id|name|label|value', $elAry\n            );\n        }\n        //print_r($el);\n        $url = null;\n        foreach($elAry as $k => $el){\n            $url = $el->getAttribute('href');\n            if(preg_match('/'.$arg1.'/',$url)){\n                break;\n            }   \n        }\n        if (null === $url) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'link', 'id|name|label|value', $url\n            );\n        }\n\n        //header(\"Location: \".$url);\n        $this->getSession()->visit($url);\n        return;\n    }\n\n    /**\n     * @Given /^\"(.+)\" \u304b\u3089 \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function pulldownSelect($arg1, $arg2)\n    {\n        // echo $arg1;\n        $pulldown = $this->getSession()->getPage()->find('css', 'select[name=\"'.$arg1.'\"]');\n        if (null === $pulldown) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $pulldown\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $pulldown->selectOption($arg2);\n    }\n\n    /**\n     * @Given /^\"id:(.+)\"\u306e\u30d7\u30eb\u30c0\u30a6\u30f3\u3067 \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function pulldownSelectForId($arg1, $arg2)\n    {\n        $pulldown = $this->getSession()->getPage()->findById($arg1);\n        if (null === $pulldown) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $pulldown\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $pulldown->selectOption($arg2);\n    }\n\n    /**\n     * @Given /^\"([^\"]*)\" \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function clickLinkForId($arg1)\n    {\n        $el = $this->getSession()->getPage()->find('css', 'a#'.$arg1);\n        if (null === $el) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $el\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $el->click();\n    }\n\n\n//\n// Place your definition and hook methods here:\n//\n//    /**\n//     * @Given /^I have done something with \"([^\"]*)\"$/\n//     */\n//    public function iHaveDoneSomethingWith($argument)\n//    {\n//        doSomethingWith($argument);\n//    }\n//\n}\n\n\n\u3044\u307e\u3053\u3093\u306a\u611f\u3058\u3067\u66f8\u3044\u3066\u307e\u3059\u3002\n\n```FeatureContext.php\n<?php\n\nuse Behat\\Behat\\Context\\ClosuredContextInterface,\n    Behat\\Behat\\Context\\TranslatedContextInterface,\n    Behat\\Behat\\Context\\BehatContext,\n    Behat\\Behat\\Exception\\PendingException;\nuse Behat\\Gherkin\\Node\\PyStringNode,\n    Behat\\Gherkin\\Node\\TableNode;\n\nuse Behat\\MinkExtension\\Context\\MinkDictionary;\n\nuse Behat\\Mink\\Selector\\CssSelector,\n    Behat\\Mink\\Selector\\NameSelector,\n    \\Behat\\Mink\\Selector\\SelectorsHandler;\n//\n// Require 3rd-party libraries here:\n//\n//   require_once 'PHPUnit/Autoload.php';\n//   require_once 'PHPUnit/Framework/Assert/Functions.php';\n//\n\n/**\n * Features context.\n */\nclass FeatureContext extends Behat\\MinkExtension\\Context\\MinkContext\n{\n    \n\n    //use MinkDictionary;\n    /**\n     * Initializes context.\n     * Every scenario gets it's own context object.\n     *\n     * @param array $parameters context parameters (set them up through behat.yml)\n     */\n    public function __construct(array $parameters)\n    {\n        // Initialize your context here\n    }\n\n    /**\n     * @Then /^I wait for the suggestion box to appear$/\n     */\n    public function iWaitForTheSuggestionBoxToAppear()\n    {\n        $this->getSession()->wait(5000, \"$('.suggestions-results').children().length > 0\");\n    }\n\n   /**\n     * @Given /^I am on \"([^\"]*)\"$/\n     */\n    // public function iAmOn($arg1)\n    // {\n    //     // throw new PendingException();\n    // }\n\n    /**\n     * @When /^I fill in \"([^\"]*)\" with \"([^\"]*)\"$/\n     */\n    public function iFillInWith($arg1, $arg2)\n    {\n        // throw new PendingException();\n        $this->getSession()->wait(15000);\n    }\n\n    /**\n     * @Given /^I click \"([^\"]*)\"$/\n     */\n    public function iClick($arg1)\n    {\n        // throw new PendingException();\n        $this->getSession()->wait(20000);\n    }\n\n    /**\n     * @Then /^I should see \"([^\"]*)\"$/\n     */\n    // public function iShouldSee($arg1)\n    // {\n    //     // throw new PendingException();\n    // }\n    /**\n     * @When /^I click_link \"([^\"]*)\"$/\n     */\n    public function iClickLink($arg1)\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\"\u30ed\u30b0\u30a4\u30f3\"\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function stepDefinition1()\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\"([^\"]*)\" \u306b \"([^\"]*)\" \u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function fang($arg1, $arg2)\n    {\n        // throw new PendingException();\n    }\n\n    /**\n     * @Given /^\u4e00\u79d2\u5f85\u3064$/\n     */\n    public function ta()\n    {\n        // throw new PendingException();\n        sleep(1);\n    }\n\n    /**\n     * @Given /^(\\d+)\u79d2\u5f85\u3064$/\n     */\n    public function ta2($arg1)\n    {\n        // throw new PendingException();\n        sleep($arg1);\n    }\n\n    /**\n     * @Given /^Ajax\u3092\u5f85\u3064$/\n     */\n    public function ajax()\n    {\n        // throw new PendingException();\n        sleep(2);\n    }\n    \n\n\n    /**\n     * @Given /^\"(.+)\"\u306b \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function radioButtonSelect($arg1, $arg2)\n    {\n        $radio_button = $this->getSession()->getPage()->find('css', 'input[type=radio][name=\"'.$arg1.'\"][value='.$arg2.']');\n        if (null === $radio_button) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $radio_button\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $radio_button->click();\n    }\n    /**\n     * @Given /^\"([^\"]*)\" checkbox\u3092 \u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function chekboxClick($arg1)\n    {\n        $el = $this->getSession()->getPage()->find('css', 'input[type=checkbox][name=\"'.$arg1.'\"]');\n        if (null === $el) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $el\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $el->click();\n    }\n\n    /**\n     * \n     * @Given /^\"([^\"]*)\" \u306e\"class:(.+)\"\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function gotoLinkForClass($arg1,$arg2)\n    {\n        $elAry = $this->getSession()->getPage()->findAll('css', 'a.'.$arg2);\n        if (null === $elAry) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'link', 'id|name|label|value', $elAry\n            );\n        }\n        //print_r($el);\n        $url = null;\n        foreach($elAry as $k => $el){\n            $url = $el->getAttribute('href');\n            if(preg_match('/'.$arg1.'/',$url)){\n                break;\n            }   \n        }\n        if (null === $url) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'link', 'id|name|label|value', $url\n            );\n        }\n\n        //header(\"Location: \".$url);\n        $this->getSession()->visit($url);\n        return;\n    }\n\n    /**\n     * @Given /^\"(.+)\" \u304b\u3089 \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function pulldownSelect($arg1, $arg2)\n    {\n        // echo $arg1;\n        $pulldown = $this->getSession()->getPage()->find('css', 'select[name=\"'.$arg1.'\"]');\n        if (null === $pulldown) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $pulldown\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $pulldown->selectOption($arg2);\n    }\n\n    /**\n     * @Given /^\"id:(.+)\"\u306e\u30d7\u30eb\u30c0\u30a6\u30f3\u3067 \"(.+)\"\u3092\u9078\u629e\u3059\u308b$/\n     */\n    public function pulldownSelectForId($arg1, $arg2)\n    {\n        $pulldown = $this->getSession()->getPage()->findById($arg1);\n        if (null === $pulldown) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $pulldown\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $pulldown->selectOption($arg2);\n    }\n\n    /**\n     * @Given /^\"([^\"]*)\" \u3092\u30af\u30ea\u30c3\u30af\u3059\u308b$/\n     */\n    public function clickLinkForId($arg1)\n    {\n        $el = $this->getSession()->getPage()->find('css', 'a#'.$arg1);\n        if (null === $el) {\n            throw new ElementNotFoundException(\n              $this->getSession(), 'form field', 'id|name|label|value', $el\n            );\n        }\n        // $value = $radio_button->getAttribute('value');\n        $el->click();\n    }\n\n \n//\n// Place your definition and hook methods here:\n//\n//    /**\n//     * @Given /^I have done something with \"([^\"]*)\"$/\n//     */\n//    public function iHaveDoneSomethingWith($argument)\n//    {\n//        doSomethingWith($argument);\n//    }\n//\n}\n```", "tags": ["behat", "PHP"]}