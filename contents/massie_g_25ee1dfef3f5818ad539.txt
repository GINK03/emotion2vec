{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f milkcocoa Advent Calender 2014 \u306e\u8a18\u4e8b\u3067\u3059\u3002\u540c\u6642\u306b WebRTC Advent Calendar 2014 \u306e\u8a18\u4e8b\u3067\u3082\u3042\u308a\u307e\u3059\u3002milkcocoa\u304b\u3089\u6765\u305f\u4eba\u306b\u306f\u300cWebRTC \u3068\u306f\u306a\u3093\u305e\u3084\uff1f\u300d\u3068\u3044\u3046\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u5834\u5408\u306f\u3001WebRTC\u307c1\u65e5\u76ee\u306e\u8a18\u4e8b\u3092\u5148\u305a\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\nWebRTC\u30b3\u30c8\u30cf\u30b8\u30e1 http://qiita.com/Tukimikage/items/286f569d110daede721e\n\n\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\n\u3057\u3064\u3053\u304f\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306d\u305f\u3092\u7d9a\u3051\u307e\u3059\u3002\n\u300c\u305d\u3053\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u300d\u306a\u3089\u3070\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3092\u3084\u308a\u305f\u304f\u306a\u308b\u306e\u304c\u4eba\u60c5\u3067\u3059\u3002\n\nmilkcocoa \u767b\u5834\nmilkcocoa \u306f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u305f\u3081\u306eBaaS\u3067\u3059\u3002Socket.IO\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001docker\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002 \n\nJavaScript\uff11\u884c\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059 https://mlkcca.com/\n\n\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb https://mlkcca.com/tutorial/page1.html\n\nAPI \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 https://mlkcca.com/document/api-js.html\n\nNode\u5b66\u5712\u3067\u306e\u767a\u8868\u8cc7\u6599 https://slidebean.com/p/TO1HWyiK6r/milkcocoa\n\n\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u3068\u6765\u308c\u3070\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u306b\u3046\u3063\u3066\u3064\u3051\u3067\u3059\u306d\u3002\n\n\u8907\u6570\u4f1a\u8b70\u5ba4\u3001\u8907\u6570\u4eba\u3067\u306e\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\nMQTT\u306e\u5229\u7528\u4f8b\u3067\u306f1\u5bfe1\u306e\u307f\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u8907\u6570\u4eba\u3067\u306e\u5229\u7528\u3092\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3059\u3002\u5b9f\u969b\u306e\u5185\u5bb9\u306f\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u5fdc\u7528\uff01 \u300cWebRTC\u3092\u4f7f\u3063\u3066\u8907\u6570\u4eba\u3067\u8a71\u3057\u3066\u307f\u3088\u3046\u300d http://html5experts.jp/mganeko/5438/\n\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f node.js + socket.io \u3067\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u81ea\u5206\u3067\u7acb\u3066\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3092\u305d\u3063\u304f\u308amilkcocoa\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u8907\u6570\u4f1a\u8b70\u5ba4\u306e\u5b9f\u73fe\nsocket.io \u306e\u5834\u5408\u306f\u3001\u30eb\u30fc\u30e0\u6a5f\u80fd(join/leave)\u3092\u4f7f\u3063\u3066\u3001\u8907\u6570\u4f1a\u8b70\u5ba4\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fmilkcocoa\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n  var selfID = '';\n  var room = getRoomName();\n  var milkcocoa = new MilkCocoa(\"https://io-appid.mlkcca.com/\"); // \u81ea\u5206\u306eAppID\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n  var ds = milkcocoa.dataStore(\"signaling/\" + room);\n\n  function getRoomName() { // \u305f\u3068\u3048\u3070\u3001 URL\u306b  ?roomname  \u3068\u3059\u308b\n    var url = document.location.href;\n    var args = url.split('?');\n    if (args.length > 1) {\n      var room = args[1];\n      if (room != \"\") {\n        return room;\n      }\n    }\n    return \"_defaultroom\";\n  }\n\n\u4f1a\u8b70\u5ba4\u3054\u3068\u306b\u3001\u7570\u306a\u308bdataStore\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8b58\u5225\n\u8907\u6570\u4eba\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u3001\u4f1a\u8b70\u5ba4\u5185\u306e\u5168\u54e1\u5b9b\u3066\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u5834\u5408\u3068\u3001\u7279\u5b9a\u306e\u76f8\u624b\u3060\u3051\u306b\u9001\u308a\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u30d9\u30fc\u30b9\u3068\u306a\u308bID\u306f\u81ea\u5206\u3067\u7ba1\u7406\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f anonymous\u30ed\u30b0\u30a4\u30f3\u3092\u5229\u7528\u3057\u3066\u3001milkcocoa\u5074\u3067\u632f\u308a\u51fa\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n  var signalingReady = false;\n  milkcocoa.anonymous(function(err, user) {\n    if (user) {\n      selfID = user.id;\n      console.log('anonymous() id=' + selfID);\n      signalingReady = true;\n    }\n    else {\n      console.error('milk anonymous() error');\n    }\n  });\n\n\n\u5168\u54e1\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u7279\u5b9a\u306e\u76f8\u624b\u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\n\u5b9f\u306fmilkcocoa\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u76f8\u624b\u3060\u3051\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u65b9\u6cd5\u306f\u898b\u3064\u3051\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08\u203b\u3082\u3057\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff09\nmilkcocoa\u306e\u52d5\u4f5c\u30a4\u30e1\u30fc\u30b8\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u81ea\u5206\u542b\u3080\u5168\u54e1\u306b\u5c4a\u304f\uff09\n\n\u305d\u3053\u3067\u3001\u53d7\u3051\u624b\u5074\u304c\u81ea\u5206\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3069\u3046\u304b\u5224\u65ad\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n  //\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u66f4\u3092\u76e3\u8996\n  ds.on(\"push\", function(data) {\n    onMessage(data.value);\n  });\n\n\n  // socket: accept connection request\n  function onMessage(evt) {\n    var id = evt.from;\n    var target = evt.sendto;\n    var conn = getConnection(id);\n\n    if (id === selfID) {\n      // skip message from myself \uff08\u81ea\u5206\u767a\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30b9\u30ad\u30c3\u30d7\uff09\n      console.log('.... skip self message ...' + id);\n      return;\n    }\n    if( (target) && (target != '') && (target != selfID) ) {\n      // skip message to someone else \uff08\u81ea\u5206\u4ee5\u5916\u3078\u5b9b\u3066\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30b9\u30ad\u30c3\u30d7\uff09\n      console.log('.... skip others message ...' + target);\n      return;\n    }\n    // \u5168\u54e1\u5b9b\u3066\u3001\u3042\u308b\u3044\u306f\u81ea\u5206\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3059\u308b \n\n    if (evt.type === 'call') {\n      // ... \u7701\u7565\n    }\n    else if (evt.type === 'response') {\n      // ... \u7701\u7565\n    }\n    else if ( (evt.type === 'bye') && isPeerStarted() ) {\n      // ... \u7701\u7565\n    } \n  } \n\n\n\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306e\u6d41\u308c\n\u3059\u3063\u304b\u308a\u304a\u306a\u3058\u307f\u3067\u3059\u304c\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u6b21\u306e2\u7a2e\u985e\u306e\u60c5\u5831\u3092\u4ea4\u63db\u3057\u307e\u3059\u3002\n\noffer/answer SDP \u306e\u4ea4\u63db\nICE candidate \u306e\u4ea4\u63db\n\n\nSDP \u306e\u3084\u308a\u3068\u308a\n3\u4eba(browserA, browserB, browserC)\u306e\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002milkcocoa\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u306f\u7701\u7565\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u540c\u58eb\u306e\u901a\u4fe1\u306e\u307f\u3092\u53d6\u308a\u51fa\u3059\u3068\u6b21\u306e\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u81ea\u5206\u767a\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u3001\u81ea\u5206\u4ee5\u5916\u306e\u7279\u5b9a\u306e\u76f8\u624b\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u7121\u8996(ignore)\u3057\u307e\u3059\u3002\n\ncall\u3092\u9001\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\nfunction call() {\n  if (! isLocalStreamStarted()) {\n    alert(\"Local stream not running yet. Please [Start Video] or [Start Screen].\");\n    return;\n  }\n\n  // call others, in same room\n  ds.push({type: \"call\", from: selfID});\n} \n\ncall\u3092\u53d7\u3051\u53d6\u308a\u3001response\u3092\u9001\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n\n  if (evt.type === 'call') {\n    console.log('--- got call ---');\n    if (! isLocalStreamStarted()) {\n      return;\n    }\n    if (conn) {\n      return; // already connected\n    }\n    if (isConnectPossible()) {\n      ds.push({type: \"response\", sendto: id, from: selfID});\n    }\n    else {\n      console.warn('max connections. so ignore call');\n    }\n    return;\n  }\n\n  // ... \u7701\u7565 ...\n\n} \n\n\u3069\u3063\u3061\u3082 ds.push()\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\n\u540c\u69d8\u306b\u3001offer / answer SDP \u306e\u9001\u53d7\u4fe1\u3082\u3053\u3061\u3089\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n  else if (evt.type === 'response') {\n    sendOffer(id);\n    return;\n  } else if (evt.type === 'offer') {\n    onOffer(evt);\n  } else if (evt.type === 'answer' && isPeerStarted()) { // **\n    onAnswer(evt);\n  }\n\n  // ... \u7701\u7565 ...\n\n}\n\n\nfunction sendOffer(id) {\n  var conn = getConnection(id);\n  if (!conn) {\n    conn = prepareNewConnection(id);\n  }\n  conn.peerconnection.createOffer(function (sessionDescription) { // in case of success\n    conn.peerconnection.setLocalDescription(sessionDescription);\n    sessionDescription.sendto = id;\n    sessionDescription.from = selfID;\n    sendSDP(sessionDescription);\n  }, function () { // in case of error\n    console.log(\"Create Offer failed\");\n  }, mediaConstraints);\n}\n\nfunction sendSDP(sdp) {\n  ds.push(sdp);\n}\n\n\nfunction onOffer(evt) {\n  setOffer(evt);\n  sendAnswer(evt);\n}\n\nfunction sendAnswer(evt) {\n  var id = evt.from;\n  var conn = getConnection(id);\n  if (! conn) {\n    console.error('peerConnection not exist!');\n    return\n  }\n\n  conn.peerconnection.createAnswer(function (sessionDescription) {\n    // in case of success\n    conn.peerconnection.setLocalDescription(sessionDescription);\n    sessionDescription.sendto = id;\n    sessionDescription.from = selfID;\n    sendSDP(sessionDescription);\n  }, function () { // in case of error\n    console.log(\"Create Answer failed\");\n  }, mediaConstraints);\n}\n\n\nICE candidate \u306e\u3084\u308a\u3068\u308a\n\u7121\u8996\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u7701\u7565\u3057\u3066\u3001\u6709\u52b9\u306a\u3084\u308a\u53d6\u308a\u306e\u307f\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n\nICE candidate\u3082\u3001\u540c\u3058\u304fds.push()\u3092\u4f7f\u3063\u3066\u9001\u308a\u3001onMessage()\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\nfunction sendCandidate(candidate) {\n  ds.push(candidate);\n}\n\n\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n  } else if (evt.type === 'candidate' && isPeerStarted()) {\n    onCandidate(evt);\n  }\n\n  // ... \u7701\u7565 ...\n}\n\nfunction onCandidate(evt) {\n  var id = evt.from;\n  var conn = getConnection(id);\n  if (! conn) {\n    console.error('peerConnection not exist!');\n  return;\n  }\n\n  var candidate = new RTCIceCandidate({sdpMLineIndex:evt.sdpMLineIndex,\n     sdpMid:evt.sdpMid, candidate:evt.candidate});\n  conn.peerconnection.addIceCandidate(candidate);\n}\n\n\n\u5168\u4f53\u306e\u30bd\u30fc\u30b9\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u306f\u3001\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002 https://gist.github.com/mganeko/0662e3c5f01247c81b88\n\n\u307e\u3068\u3081\nWebRTC\u3067\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u7528\u610f\u3059\u308b\u306e\u304c\u3001\u30cf\u30fc\u30c9\u30eb\u306e\u4e00\u3064\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002milkcocoa\u306e\u69d8\u306a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3048\u3070\u3001\u305d\u308c\u3092\u4e57\u308a\u8d8a\u3048\u308b\u306e\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u306d\uff01\n## \u306f\u3058\u3081\u306b\n\u3053\u306e\u8a18\u4e8b\u306f [milkcocoa Advent Calender 2014](http://qiita.com/advent-calendar/2014/mlkcca) \u306e\u8a18\u4e8b\u3067\u3059\u3002\u540c\u6642\u306b [WebRTC Advent Calendar 2014](http://qiita.com/advent-calendar/2014/webrtc) \u306e\u8a18\u4e8b\u3067\u3082\u3042\u308a\u307e\u3059\u3002milkcocoa\u304b\u3089\u6765\u305f\u4eba\u306b\u306f\u300cWebRTC \u3068\u306f\u306a\u3093\u305e\u3084\uff1f\u300d\u3068\u3044\u3046\u611f\u3058\u3060\u3068\u601d\u3044\u307e\u3059\u3002\u305d\u3093\u306a\u5834\u5408\u306f\u3001WebRTC\u307c1\u65e5\u76ee\u306e\u8a18\u4e8b\u3092\u5148\u305a\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n* WebRTC\u30b3\u30c8\u30cf\u30b8\u30e1 http://qiita.com/Tukimikage/items/286f569d110daede721e\n\n## \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\n\u3057\u3064\u3053\u304f\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306d\u305f\u3092\u7d9a\u3051\u307e\u3059\u3002\n\u300c\u305d\u3053\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u4ed5\u7d44\u307f\u304c\u3042\u308b\u300d\u306a\u3089\u3070\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3092\u3084\u308a\u305f\u304f\u306a\u308b\u306e\u304c\u4eba\u60c5\u3067\u3059\u3002\n\n## milkcocoa \u767b\u5834\n\nmilkcocoa \u306f\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u306e\u305f\u3081\u306eBaaS\u3067\u3059\u3002Socket.IO\u3092\u4f7f\u3063\u3066\u3044\u3066\u3001docker\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u308b\u305d\u3046\u3067\u3059\u3002 \n\n* JavaScript\uff11\u884c\u3067\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u307e\u3059 https://mlkcca.com/\n* \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb https://mlkcca.com/tutorial/page1.html\n* API \u30ea\u30d5\u30a1\u30ec\u30f3\u30b9 https://mlkcca.com/document/api-js.html\n* Node\u5b66\u5712\u3067\u306e\u767a\u8868\u8cc7\u6599 https://slidebean.com/p/TO1HWyiK6r/milkcocoa\n\n\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u3068\u6765\u308c\u3070\u3001\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u306b\u3046\u3063\u3066\u3064\u3051\u3067\u3059\u306d\u3002\n\n## \u8907\u6570\u4f1a\u8b70\u5ba4\u3001\u8907\u6570\u4eba\u3067\u306e\u30d3\u30c7\u30aa\u30c1\u30e3\u30c3\u30c8\n\nMQTT\u306e\u5229\u7528\u4f8b\u3067\u306f1\u5bfe1\u306e\u307f\u5b9f\u88c5\u3057\u3066\u3044\u305f\u306e\u3067\u3001\u4eca\u56de\u306f\u8907\u6570\u4eba\u3067\u306e\u5229\u7528\u3092\u5b9f\u73fe\u3057\u3066\u307f\u307e\u3059\u3002\u5b9f\u969b\u306e\u5185\u5bb9\u306f\u3001\u3053\u3061\u3089\u306e\u8a18\u4e8b\u3068\u540c\u3058\u3067\u3059\u3002\n\n* \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u5fdc\u7528\uff01 \u300cWebRTC\u3092\u4f7f\u3063\u3066\u8907\u6570\u4eba\u3067\u8a71\u3057\u3066\u307f\u3088\u3046\u300d http://html5experts.jp/mganeko/5438/\n\n\u3053\u306e\u8a18\u4e8b\u3067\u306f node.js + socket.io \u3067\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u81ea\u5206\u3067\u7acb\u3066\u3066\u3044\u307e\u3057\u305f\u304c\u3001\u305d\u308c\u3092\u305d\u3063\u304f\u308amilkcocoa\u306b\u7f6e\u304d\u63db\u3048\u307e\u3059\u3002\n\n### \u8907\u6570\u4f1a\u8b70\u5ba4\u306e\u5b9f\u73fe\n\nsocket.io \u306e\u5834\u5408\u306f\u3001\u30eb\u30fc\u30e0\u6a5f\u80fd(join/leave)\u3092\u4f7f\u3063\u3066\u3001\u8907\u6570\u4f1a\u8b70\u5ba4\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3057\u305f\u3002\n\u4eca\u56de\u306fmilkcocoa\u306e\u30c7\u30fc\u30bf\u30b9\u30c8\u30a2\u3092\u4f7f\u3046\u3053\u3068\u3067\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\u3002\n\n```js:\n  var selfID = '';\n  var room = getRoomName();\n  var milkcocoa = new MilkCocoa(\"https://io-appid.mlkcca.com/\"); // \u81ea\u5206\u306eAppID\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\n  var ds = milkcocoa.dataStore(\"signaling/\" + room);\n\n  function getRoomName() { // \u305f\u3068\u3048\u3070\u3001 URL\u306b  ?roomname  \u3068\u3059\u308b\n    var url = document.location.href;\n    var args = url.split('?');\n    if (args.length > 1) {\n      var room = args[1];\n      if (room != \"\") {\n        return room;\n      }\n    }\n    return \"_defaultroom\";\n  }\n```\n\n\u4f1a\u8b70\u5ba4\u3054\u3068\u306b\u3001\u7570\u306a\u308bdataStore\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n### \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u8b58\u5225\n\u8907\u6570\u4eba\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u3001\u4f1a\u8b70\u5ba4\u5185\u306e\u5168\u54e1\u5b9b\u3066\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u5834\u5408\u3068\u3001\u7279\u5b9a\u306e\u76f8\u624b\u3060\u3051\u306b\u9001\u308a\u305f\u3044\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u30d9\u30fc\u30b9\u3068\u306a\u308bID\u306f\u81ea\u5206\u3067\u7ba1\u7406\u3066\u3082\u826f\u3044\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f anonymous\u30ed\u30b0\u30a4\u30f3\u3092\u5229\u7528\u3057\u3066\u3001milkcocoa\u5074\u3067\u632f\u308a\u51fa\u3057\u3066\u3082\u3089\u3044\u307e\u3059\u3002\n\n```js:\n  var signalingReady = false;\n  milkcocoa.anonymous(function(err, user) {\n    if (user) {\n      selfID = user.id;\n      console.log('anonymous() id=' + selfID);\n      signalingReady = true;\n    }\n    else {\n      console.error('milk anonymous() error');\n    }\n  });\n```\n\n### \u5168\u54e1\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3001\u7279\u5b9a\u306e\u76f8\u624b\u3078\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\n\u5b9f\u306fmilkcocoa\u3092\u4f7f\u3063\u3066\u7279\u5b9a\u306e\u76f8\u624b\u3060\u3051\u306b\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u308b\u65b9\u6cd5\u306f\u898b\u3064\u3051\u3089\u308c\u307e\u305b\u3093\u3067\u3057\u305f\u3002\uff08\u203b\u3082\u3057\u3054\u5b58\u77e5\u3067\u3057\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\uff09\nmilkcocoa\u306e\u52d5\u4f5c\u30a4\u30e1\u30fc\u30b8\uff08\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u3001\u81ea\u5206\u542b\u3080\u5168\u54e1\u306b\u5c4a\u304f\uff09\n![milkcocoa_image.png](https://qiita-image-store.s3.amazonaws.com/0/19403/08fbdecf-22a5-f9d7-16e3-b1806114835b.png)\n\n\n\u305d\u3053\u3067\u3001\u53d7\u3051\u624b\u5074\u304c\u81ea\u5206\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3069\u3046\u304b\u5224\u65ad\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n```js:\n  //\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u5909\u66f4\u3092\u76e3\u8996\n  ds.on(\"push\", function(data) {\n    onMessage(data.value);\n  });\n\n \n  // socket: accept connection request\n  function onMessage(evt) {\n    var id = evt.from;\n    var target = evt.sendto;\n    var conn = getConnection(id);\n    \n    if (id === selfID) {\n      // skip message from myself \uff08\u81ea\u5206\u767a\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30b9\u30ad\u30c3\u30d7\uff09\n      console.log('.... skip self message ...' + id);\n      return;\n    }\n    if( (target) && (target != '') && (target != selfID) ) {\n      // skip message to someone else \uff08\u81ea\u5206\u4ee5\u5916\u3078\u5b9b\u3066\u305f\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u30b9\u30ad\u30c3\u30d7\uff09\n      console.log('.... skip others message ...' + target);\n      return;\n    }\n    // \u5168\u54e1\u5b9b\u3066\u3001\u3042\u308b\u3044\u306f\u81ea\u5206\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u5185\u5bb9\u306b\u5fdc\u3058\u3066\u51e6\u7406\u3059\u308b \n\n    if (evt.type === 'call') {\n      // ... \u7701\u7565\n    }\n    else if (evt.type === 'response') {\n      // ... \u7701\u7565\n    }\n    else if ( (evt.type === 'bye') && isPeerStarted() ) {\n      // ... \u7701\u7565\n    } \n  } \n```\n\n## \u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u306e\u6d41\u308c\n\u3059\u3063\u304b\u308a\u304a\u306a\u3058\u307f\u3067\u3059\u304c\u3001WebRTC\u306e\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u3067\u306f\u6b21\u306e2\u7a2e\u985e\u306e\u60c5\u5831\u3092\u4ea4\u63db\u3057\u307e\u3059\u3002\n\n* offer/answer SDP \u306e\u4ea4\u63db\n* ICE candidate \u306e\u4ea4\u63db\n\n### SDP \u306e\u3084\u308a\u3068\u308a\n3\u4eba(browserA, browserB, browserC)\u306e\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u307f\u307e\u3059\u3002milkcocoa\u306e\u30b5\u30fc\u30d0\u30fc\u5074\u306f\u7701\u7565\u3057\u3001\u30d6\u30e9\u30a6\u30b6\u540c\u58eb\u306e\u901a\u4fe1\u306e\u307f\u3092\u53d6\u308a\u51fa\u3059\u3068\u6b21\u306e\u6d41\u308c\u306b\u306a\u308a\u307e\u3059\u3002\n\u81ea\u5206\u767a\u4fe1\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u3084\u3001\u81ea\u5206\u4ee5\u5916\u306e\u7279\u5b9a\u306e\u76f8\u624b\u5b9b\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u7121\u8996(ignore)\u3057\u307e\u3059\u3002\n![milkcocoa_sdp.png](https://qiita-image-store.s3.amazonaws.com/0/19403/6cd71476-3d1c-40df-7d90-62e2b5f6464c.png)\n\ncall\u3092\u9001\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\n\n```js:\nfunction call() {\n  if (! isLocalStreamStarted()) {\n    alert(\"Local stream not running yet. Please [Start Video] or [Start Screen].\");\n    return;\n  }\n\n  // call others, in same room\n  ds.push({type: \"call\", from: selfID});\n} \n```\n\ncall\u3092\u53d7\u3051\u53d6\u308a\u3001response\u3092\u9001\u308b\u90e8\u5206\u306e\u30bd\u30fc\u30b9\n\n```js:\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n\n  if (evt.type === 'call') {\n    console.log('--- got call ---');\n    if (! isLocalStreamStarted()) {\n      return;\n    }\n    if (conn) {\n      return; // already connected\n    }\n    if (isConnectPossible()) {\n      ds.push({type: \"response\", sendto: id, from: selfID});\n    }\n    else {\n      console.warn('max connections. so ignore call');\n    }\n    return;\n  }\n\n  // ... \u7701\u7565 ...\n\n} \n```\n\n\u3069\u3063\u3061\u3082 ds.push()\u3092\u4f7f\u3063\u3066\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u9001\u4fe1\u3057\u3066\u3044\u307e\u3059\u3002\n\u540c\u69d8\u306b\u3001offer / answer SDP \u306e\u9001\u53d7\u4fe1\u3082\u3053\u3061\u3089\n\n```js:\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n  else if (evt.type === 'response') {\n    sendOffer(id);\n    return;\n  } else if (evt.type === 'offer') {\n    onOffer(evt);\n  } else if (evt.type === 'answer' && isPeerStarted()) { // **\n    onAnswer(evt);\n  }\n\n  // ... \u7701\u7565 ...\n\n}\n\n\nfunction sendOffer(id) {\n  var conn = getConnection(id);\n  if (!conn) {\n    conn = prepareNewConnection(id);\n  }\n  conn.peerconnection.createOffer(function (sessionDescription) { // in case of success\n    conn.peerconnection.setLocalDescription(sessionDescription);\n    sessionDescription.sendto = id;\n    sessionDescription.from = selfID;\n    sendSDP(sessionDescription);\n  }, function () { // in case of error\n    console.log(\"Create Offer failed\");\n  }, mediaConstraints);\n}\n\nfunction sendSDP(sdp) {\n  ds.push(sdp);\n}\n\n\nfunction onOffer(evt) {\n  setOffer(evt);\n  sendAnswer(evt);\n}\n\nfunction sendAnswer(evt) {\n  var id = evt.from;\n  var conn = getConnection(id);\n  if (! conn) {\n    console.error('peerConnection not exist!');\n    return\n  }\n\n  conn.peerconnection.createAnswer(function (sessionDescription) {\n    // in case of success\n    conn.peerconnection.setLocalDescription(sessionDescription);\n    sessionDescription.sendto = id;\n    sessionDescription.from = selfID;\n    sendSDP(sessionDescription);\n  }, function () { // in case of error\n    console.log(\"Create Answer failed\");\n  }, mediaConstraints);\n}\n```\n\n\n\n### ICE candidate \u306e\u3084\u308a\u3068\u308a\n\u7121\u8996\u3055\u308c\u308b\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u7701\u7565\u3057\u3066\u3001\u6709\u52b9\u306a\u3084\u308a\u53d6\u308a\u306e\u307f\u3092\u56f3\u306b\u3057\u3066\u307f\u307e\u3059\u3002\n![milkcocoa_ice.png](https://qiita-image-store.s3.amazonaws.com/0/19403/40956145-e808-1600-13f0-cc1541f62f5c.png)\n\nICE candidate\u3082\u3001\u540c\u3058\u304fds.push()\u3092\u4f7f\u3063\u3066\u9001\u308a\u3001onMessage()\u3067\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n```js:\nfunction sendCandidate(candidate) {\n  ds.push(candidate);\n}\n\n\nfunction onMessage(evt) {\n  var id = evt.from;\n  var target = evt.sendto;\n  var conn = getConnection(id);\n\n  // ... \u7701\u7565 ...\n  } else if (evt.type === 'candidate' && isPeerStarted()) {\n    onCandidate(evt);\n  }\n\n  // ... \u7701\u7565 ...\n}\n\nfunction onCandidate(evt) {\n  var id = evt.from;\n  var conn = getConnection(id);\n  if (! conn) {\n    console.error('peerConnection not exist!');\n  return;\n  }\n\n  var candidate = new RTCIceCandidate({sdpMLineIndex:evt.sdpMLineIndex,\n     sdpMid:evt.sdpMid, candidate:evt.candidate});\n  conn.peerconnection.addIceCandidate(candidate);\n}\n```\n\n### \u5168\u4f53\u306e\u30bd\u30fc\u30b9\n\u5b8c\u5168\u306a\u30bd\u30fc\u30b9\u306f\u3001\u3053\u3061\u3089\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002 https://gist.github.com/mganeko/0662e3c5f01247c81b88\n\n## \u307e\u3068\u3081\nWebRTC\u3067\u30b7\u30b0\u30ca\u30ea\u30f3\u30b0\u30b5\u30fc\u30d0\u30fc\u3092\u7528\u610f\u3059\u308b\u306e\u304c\u3001\u30cf\u30fc\u30c9\u30eb\u306e\u4e00\u3064\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002milkcocoa\u306e\u69d8\u306a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30e1\u30c3\u30bb\u30fc\u30b8\u30f3\u30b0\u30b5\u30fc\u30d3\u30b9\u3092\u4f7f\u3048\u3070\u3001\u305d\u308c\u3092\u4e57\u308a\u8d8a\u3048\u308b\u306e\u304c\u7c21\u5358\u306b\u306a\u308a\u307e\u3059\u306d\uff01\n", "tags": ["milkcocoa", "WebRTC"]}