{"context": " More than 1 year has passed since last update.Swift\u306e\u52c9\u5f37\u306bQiitaAPI\u306eSwift\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\nQiitaKit\n\n\n\u901a\u4fe1\u306b\u306f Alamofire \u3092\u5229\u7528\nGenerics \u3092\u7528\u3044\u3066\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5bfe\u5fdc\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n\u30ea\u30af\u30a8\u30b9\u30c8\u306f Future \u3067\u30e9\u30c3\u30d7\u3055\u308c\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u8fd4\u3059\n\n\n\u4f8b\uff09GetItem -> Future<Item>\n\n\n\n\n\n\u4f7f\u3044\u65b9\nimport QiitaKit\n\nlet Qiita = QiitaSession(\n    baseURL: \"https://qiita.com\",\n    clientId: \"*****\",\n    clientSecret: \"*****\"\n)\n\n// \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\nQiita.oauthAuthorize([.ReadQiita, .WriteQiita], scheme: \"callback url scheme\")\n    .onSuccess { accessToken in\n        println(accessToken)\n    }\n\n\n//\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3059\u308b\u6295\u7a3f\u30ea\u30b9\u30c8\u306e\u53d6\u5f97\nlet listItems = ListItems(page: \"1\", per_page: \"20\", query: \"qiita user:yaotti\")\nQiita.request(listItems)\n    .onSuccess { items, meta in\n        println(items)\n    }\n    .onFailure {\n        println($0)\n    }\n\n//flatMap\u3092\u4f7f\u3063\u305f\u4f8b\nQiita.request(listItems)\n    .flatMap {\n        Qiita.request(GetItem(item_id:$0[0].id))\n    }\n    .flatMap {\n        ...\n    }\n\n\n\nAPI\u5b9a\u7fa9\u306e\u4f8b\n\nEndpoint/Item/ListItems.swift\nimport Foundation\nimport APIKit\n\n/**\n*  \u6295\u7a3f\u306e\u4e00\u89a7\u3092\u4f5c\u6210\u65e5\u6642\u306e\u964d\u9806\u3067\u8fd4\u3057\u307e\u3059\u3002\n*/\npublic struct ListItems {\n    /// \u30da\u30fc\u30b8\u756a\u53f7 (1\u304b\u3089100\u307e\u3067)\n    /// example: 1\n    /// ^[0-9]+$\n    public let page: String\n\n    /// 1\u30da\u30fc\u30b8\u3042\u305f\u308a\u306b\u542b\u307e\u308c\u308b\u8981\u7d20\u6570 (1\u304b\u3089100\u307e\u3067)\n    /// example: 20\n    /// ^[0-9]+$\n    public let per_page: String\n\n    /// \u691c\u7d22\u30af\u30a8\u30ea\n    /// example: qiita user:yaotti\n    /// \n    public let query: String\n\n    public init(page: String, per_page: String, query: String) {\n        self.page = page\n        self.per_page = per_page\n        self.query = query\n    }\n}\n\nextension ListItems: RequestToken {\n\n    public typealias Response = ([Item], LinkMeta<ListItems>)\n    public typealias SerializedType = [[String: AnyObject]]\n\n    public var method: HTTPMethod {\n        return .GET\n    }\n\n    public var URL: String {\n        return \"/api/v2/items\"\n    }\n\n    public var headers: [String: AnyObject]? {\n        return nil\n    }\n\n    public var parameters: [String: AnyObject]? {\n        return [\n            \"page\": page,\n            \"per_page\": per_page,\n            \"query\": query,\n        ]\n    }\n\n    public var encoding: RequestEncoding {\n        return .URL\n    }\n\n    public var resonseEncoding: ResponseEncoding {\n        return .JSON(.AllowFragments)\n    }\n}\n\nextension ListItems {\n\n    public static func transform(request: NSURLRequest, response: NSHTTPURLResponse?, object: SerializedType) -> Result<Response> {\n\n        return Result(_Items(object), LinkMeta<ListItems>(dict: response!.allHeaderFields))\n    }\n}\n\n\n\n\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nCarthage\n\u975e\u63a8\u5968\nCartfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u751f\u6210\u3055\u308c\u308b Framework \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\ngithub \"sora0077/QiitaKit\"\n\n\nCocoaPods\nPodfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057 pod install \u3092\u5b9f\u884c\u3059\u308b\nsource 'https://github.com/sora0077/PodSpecs.git'\nsource 'https://github.com/CocoaPods/Specs.git'\n\npod 'QiitaKit', :git => 'https://github.com/sora0077/QiitaKit.git', :tag => \"swift-2.0\"\n\n\nSwift\u306e\u52c9\u5f37\u306bQiitaAPI\u306eSwift\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\n\n## [QiitaKit](https://github.com/sora0077/QiitaKit)\n\n+ \u901a\u4fe1\u306b\u306f [Alamofire](https://github.com/Alamofire/Alamofire) \u3092\u5229\u7528\n+ Generics \u3092\u7528\u3044\u3066\u5404\u30ea\u30af\u30a8\u30b9\u30c8\u30ec\u30b9\u30dd\u30f3\u30b9\u306f\u5bfe\u5fdc\u3057\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u306b\u30de\u30c3\u30d4\u30f3\u30b0\n+ \u30ea\u30af\u30a8\u30b9\u30c8\u306f [Future](https://github.com/Thomvis/BrightFutures) \u3067\u30e9\u30c3\u30d7\u3055\u308c\u305f\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u3092\u8fd4\u3059\n\t+ \u4f8b\uff09`GetItem` -> `Future<Item>`\n\n# \u4f7f\u3044\u65b9\n\n```swift\nimport QiitaKit\n\nlet Qiita = QiitaSession(\n    baseURL: \"https://qiita.com\",\n    clientId: \"*****\",\n    clientSecret: \"*****\"\n)\n\n// \u30a2\u30af\u30bb\u30b9\u30c8\u30fc\u30af\u30f3\u306e\u53d6\u5f97\nQiita.oauthAuthorize([.ReadQiita, .WriteQiita], scheme: \"callback url scheme\")\n\t.onSuccess { accessToken in\n\t\tprintln(accessToken)\n\t}\n\n\n//\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3059\u308b\u6295\u7a3f\u30ea\u30b9\u30c8\u306e\u53d6\u5f97\nlet listItems = ListItems(page: \"1\", per_page: \"20\", query: \"qiita user:yaotti\")\nQiita.request(listItems)\n\t.onSuccess { items, meta in\n\t\tprintln(items)\n\t}\n\t.onFailure {\n\t\tprintln($0)\n\t}\n\n//flatMap\u3092\u4f7f\u3063\u305f\u4f8b\nQiita.request(listItems)\n\t.flatMap {\n\t\tQiita.request(GetItem(item_id:$0[0].id))\n\t}\n\t.flatMap {\n\t    ...\n\t}\n\n```\n\n## API\u5b9a\u7fa9\u306e\u4f8b\n\n```swift:Endpoint/Item/ListItems.swift\nimport Foundation\nimport APIKit\n\n/**\n*  \u6295\u7a3f\u306e\u4e00\u89a7\u3092\u4f5c\u6210\u65e5\u6642\u306e\u964d\u9806\u3067\u8fd4\u3057\u307e\u3059\u3002\n*/\npublic struct ListItems {\n    /// \u30da\u30fc\u30b8\u756a\u53f7 (1\u304b\u3089100\u307e\u3067)\n    /// example: 1\n    /// ^[0-9]+$\n    public let page: String\n\n    /// 1\u30da\u30fc\u30b8\u3042\u305f\u308a\u306b\u542b\u307e\u308c\u308b\u8981\u7d20\u6570 (1\u304b\u3089100\u307e\u3067)\n    /// example: 20\n    /// ^[0-9]+$\n    public let per_page: String\n\n    /// \u691c\u7d22\u30af\u30a8\u30ea\n    /// example: qiita user:yaotti\n    /// \n    public let query: String\n\n    public init(page: String, per_page: String, query: String) {\n        self.page = page\n        self.per_page = per_page\n        self.query = query\n    }\n}\n\nextension ListItems: RequestToken {\n    \n    public typealias Response = ([Item], LinkMeta<ListItems>)\n    public typealias SerializedType = [[String: AnyObject]]\n\n    public var method: HTTPMethod {\n        return .GET\n    }\n\n    public var URL: String {\n        return \"/api/v2/items\"\n    }\n\n    public var headers: [String: AnyObject]? {\n        return nil\n    }\n\n    public var parameters: [String: AnyObject]? {\n        return [\n            \"page\": page,\n            \"per_page\": per_page,\n            \"query\": query,\n        ]\n    }\n\n    public var encoding: RequestEncoding {\n        return .URL\n    }\n\n    public var resonseEncoding: ResponseEncoding {\n        return .JSON(.AllowFragments)\n    }\n}\n\nextension ListItems {\n    \n    public static func transform(request: NSURLRequest, response: NSHTTPURLResponse?, object: SerializedType) -> Result<Response> {\n        \n        return Result(_Items(object), LinkMeta<ListItems>(dict: response!.allHeaderFields))\n    }\n}\n```\n\n# \u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n## Carthage\n\n**\u975e\u63a8\u5968**\n\nCartfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u751f\u6210\u3055\u308c\u308b Framework \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\n\n```\ngithub \"sora0077/QiitaKit\"\n```\n\n## CocoaPods\n\nPodfile \u306b\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057 `pod install` \u3092\u5b9f\u884c\u3059\u308b\n\n\n```\nsource 'https://github.com/sora0077/PodSpecs.git'\nsource 'https://github.com/CocoaPods/Specs.git'\n\npod 'QiitaKit', :git => 'https://github.com/sora0077/QiitaKit.git', :tag => \"swift-2.0\"\n```\n", "tags": ["Carthage", "Swift1.2", "iOS"]}