{"tags": ["Java", "geo", "JSON"], "context": " More than 1 year has passed since last update.MashupAwards11\u5411\u3051\u306b\u795e\u6238\u30a2\u30eb\u30af\u30de\u30c3\u30d7\u3068\u3044\u3046Web\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u3001\u56fd\u571f\u6570\u5024\u60c5\u5831\u7b49\u306e\u5927\u91cf\u306eShape\u30d5\u30a1\u30a4\u30eb\u3092Elasticsearch\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u3053\u306e\u305f\u3081\u3001Shape\u30d5\u30a1\u30a4\u30eb\u3092GeoJSON\u306b\u5909\u63db\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u30d5\u30a1\u30a4\u30eb\u5909\u63db\u306b\u306fGeoTools\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Heroku\u306bShp2JSON\u3068\u3044\u3046Web\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30fbShp2JSON\n\nShape2GeoJSON.java\npackage modules;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport java.nio.charset.Charset;\n\nimport org.geotools.data.shapefile.ShapefileDataStore;\nimport org.geotools.data.simple.SimpleFeatureCollection;\nimport org.geotools.data.simple.SimpleFeatureSource;\nimport org.geotools.geojson.feature.FeatureJSON;\n\npublic class Shape2GeoJSON {\n\n    public static String getJSON(File f,String encoding)throws Exception{\n        f.setReadOnly();\n        ShapefileDataStore store = new ShapefileDataStore(f.toURI().toURL());\n        Charset cs=Charset.forName(encoding);\n        store.setCharset(cs);\n        SimpleFeatureSource source = store.getFeatureSource();\n        SimpleFeatureCollection featureCollection = source.getFeatures();\n        String geoJson=null;\n        FeatureJSON fj = new FeatureJSON();\n        StringWriter writer = new StringWriter();\n        fj.writeFeatureCollection(featureCollection, writer);\n        geoJson = writer.toString();\n        return geoJson;\n    }\n\n    public static File getGeoJSON(String json,String path,String encoding) throws Exception{\n        File out=new File(path);\n        PrintWriter pw=null;\n        try{\n            FileOutputStream fos = new FileOutputStream(out);\n            OutputStreamWriter osw = new OutputStreamWriter(fos,encoding);\n            pw = new PrintWriter(osw);\n            pw.write(json);\n            pw.close();\n            pw=null;\n            return out;\n        }catch(IOException e){\n            e.printStackTrace();\n        }finally{\n            if(pw!=null){\n                pw.close();\n            }\n        }\n        return null;\n    }\n\n}\n\n\n\nMashupAwards11\u5411\u3051\u306b[\u795e\u6238\u30a2\u30eb\u30af\u30de\u30c3\u30d7](http://hacklog.jp/works/4320)\u3068\u3044\u3046Web\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308b\u969b\u3001[\u56fd\u571f\u6570\u5024\u60c5\u5831](http://nlftp.mlit.go.jp/ksj/)\u7b49\u306e\u5927\u91cf\u306eShape\u30d5\u30a1\u30a4\u30eb\u3092Elasticsearch\u306b\u5165\u308c\u308b\u5fc5\u8981\u304c\u3042\u3063\u305f\u3002\n\u3053\u306e\u305f\u3081\u3001Shape\u30d5\u30a1\u30a4\u30eb\u3092GeoJSON\u306b\u5909\u63db\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u305f\u306e\u3067\u3001\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u30d5\u30a1\u30a4\u30eb\u5909\u63db\u306b\u306f[GeoTools](http://geotools.org/)\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u3001Heroku\u306bShp2JSON\u3068\u3044\u3046Web\u30b5\u30fc\u30d3\u30b9\u3092\u69cb\u7bc9\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30fb[Shp2JSON](https://radiant-wave-6403.herokuapp.com/)\n\n```java:Shape2GeoJSON.java\npackage modules;\n\nimport java.io.File;\nimport java.io.FileOutputStream;\nimport java.io.IOException;\nimport java.io.OutputStreamWriter;\nimport java.io.PrintWriter;\nimport java.io.StringWriter;\nimport java.nio.charset.Charset;\n\nimport org.geotools.data.shapefile.ShapefileDataStore;\nimport org.geotools.data.simple.SimpleFeatureCollection;\nimport org.geotools.data.simple.SimpleFeatureSource;\nimport org.geotools.geojson.feature.FeatureJSON;\n\npublic class Shape2GeoJSON {\n\t\n\tpublic static String getJSON(File f,String encoding)throws Exception{\n\t\tf.setReadOnly();\n\t\tShapefileDataStore store = new ShapefileDataStore(f.toURI().toURL());\n\t\tCharset cs=Charset.forName(encoding);\n\t\tstore.setCharset(cs);\n\t\tSimpleFeatureSource source = store.getFeatureSource();\n\t\tSimpleFeatureCollection featureCollection = source.getFeatures();\n\t\tString geoJson=null;\n\t\tFeatureJSON fj = new FeatureJSON();\n\t\tStringWriter writer = new StringWriter();\n\t\tfj.writeFeatureCollection(featureCollection, writer);\n\t\tgeoJson = writer.toString();\n\t\treturn geoJson;\n\t}\n\t\n\tpublic static File getGeoJSON(String json,String path,String encoding) throws Exception{\n\t\tFile out=new File(path);\n\t\tPrintWriter pw=null;\n\t\ttry{\n\t\t\tFileOutputStream fos = new FileOutputStream(out);\n\t\t\tOutputStreamWriter osw = new OutputStreamWriter(fos,encoding);\n\t\t\tpw = new PrintWriter(osw);\n\t\t\tpw.write(json);\n\t\t\tpw.close();\n\t\t\tpw=null;\n\t\t\treturn out;\n\t\t}catch(IOException e){\n\t\t\te.printStackTrace();\n\t\t}finally{\n\t\t\tif(pw!=null){\n\t\t\t\tpw.close();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\n"}