{"context": " More than 1 year has passed since last update.OpenCV4Android\u306e\u30ab\u30e1\u30e9\u30d7\u30ec\u30d3\u30e5\u30fc\u3092\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\u3061\u306a\u307f\u306bOpenCV4Android\u306e\u30ab\u30e1\u30e9\u306e\u4f7f\u3044\u65b9\u306f\nhttp://rest-term.com/archives/3010/\n\u306a\u3069\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u3082\uff0c\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0e\nJavaCameraView\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n\u554f\u984c\nOpenCV4android\u3092\u4f7f\u3063\u305fandroid\u30a2\u30d7\u30ea\u3067\u30ab\u30e1\u30e9\u30d7\u30ec\u30d3\u30e5\u30fc\u3092\u6b63\u65b9\u5f62\u306b\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\n\u5b89\u76f4\u306bonCameraFrame()\u3067\u753b\u50cf\u3092\u30af\u30ed\u30c3\u30d7\u3057\u3066\u8fd4\u305b\u3070\u3044\u3044\u3084\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3068\u3053\u308d\uff0c\n    @Override\n    public Mat onCameraFrame(CvCameraViewFrame inputFrame) {\n        mRgba = inputFrame.rgba();\n        return new Mat(mRgba, mROI);\n    }\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304d\u7d9a\u3051\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\n08-10 23:08:14.137  30863-31993/com.example E/cv::error()\ufe55 OpenCV Error: Assertion failed (src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols) in void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean), file /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp, line 97\n08-10 23:08:14.137  30863-31993/com.example E/org.opencv.android.Utils\ufe55 nMatToBitmap catched cv::Exception: /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp:97: error: (-215) src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols in function void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Mat type: Mat [ 480*480*CV_8UC4, isCont=false, isSubmat=true, nativeObj=0x78cfb440, dataAddr=0x7a91a1f0 ]\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Bitmap type: 720*480\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Utils.matToBitmap() throws an exception: /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp:97: error: (-215) src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols in function void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)\n\nJavaCameraView\u306e\u89aa\u30af\u30e9\u30b9CameraBridgeViewBase\u306f\u8868\u793a\u7528\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066Bitmap mCacheBitmap\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u521d\u671f\u5316\u6642\u306b\u3053\u308c\u3092\u30ab\u30e1\u30e9\u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067\u78ba\u4fdd\u3057\u307e\u3059\uff0e\n\u305d\u3057\u3066onCameraFrame()\u304b\u3089\u8fd4\u308bMat\u3092Utils.matToBitmap()\u3067mCacheBitmap\u306b\u5165\u308c\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u51e6\u7406\u306b\u56de\u3057\u307e\u3059\uff0e\n\u3057\u304b\u3057\uff0conCameraFrame()\u304b\u3089\u30b5\u30a4\u30ba\u3092\u5909\u3048\u305fMat\u3092\u8fd4\u3059\u3068\uff0cUtils.matToBitmap()\u3067\u5909\u63db\u5143\u3068\u5909\u63db\u5148\u306e\u30b5\u30a4\u30ba\u304c\u5408\u308f\u305a\u306b\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff0e\n\n\u5bfe\u7b56\nJavaCameraView\u3092\u7d99\u627f\u3057\u305f\u30d3\u30e5\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\n\nCameraView.java\npackage com.example;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\n\nimport org.opencv.android.JavaCameraView;\nimport org.opencv.core.Mat;\nimport org.opencv.core.Rect;\n\npublic class CameraView extends JavaCameraView {\n    private Rect mROI;\n    private int mSquareFrameWidth;\n\n    public CameraView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void AllocateCache()\n    {\n        int frameWidth = mFrameWidth, frameHeight = mFrameHeight;\n        mSquareFrameWidth = Math.min(mFrameWidth, mFrameHeight);\n        mFrameWidth = mSquareFrameWidth;\n        mFrameHeight = mSquareFrameWidth;\n        super.AllocateCache();\n        mFrameWidth = frameWidth;\n        mFrameHeight = frameHeight;\n\n        mROI = new Rect((mFrameWidth - mSquareFrameWidth)/2, (mFrameHeight - mSquareFrameWidth)/2, mSquareFrameWidth, mSquareFrameWidth);\n    }\n\n\n    @Override\n    protected void deliverAndDrawFrame(CvCameraViewFrame frame) {\n        super.deliverAndDrawFrame(new CroppedCameraViewFrame(frame, mROI));\n    }\n\n    private class CroppedCameraViewFrame implements CvCameraViewFrame {\n        private Rect mROI;\n        private CvCameraViewFrame mOriginalFrame;\n\n        @Override\n        public Mat gray() {\n            return new Mat(mOriginalFrame.gray(), mROI);\n        }\n\n        @Override\n        public Mat rgba() {\n            return new Mat(mOriginalFrame.rgba(), mROI);\n        }\n\n        public CroppedCameraViewFrame(CvCameraViewFrame original, Rect ROI) {\n            mOriginalFrame = original;\n            mROI = ROI;\n        }\n    }\n}\n\n\n\u305d\u3057\u3066\uff0c\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u3046\u30d3\u30e5\u30fc\u3092\u3053\u308c\u306b\u5dee\u3057\u66ff\u3048\u307e\u3059\n\nactivity_main.xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:opencv=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <com.example.CameraView\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:id=\"@+id/camera_preview\"\n        opencv:camera_id=\"any\" />\n\n</LinearLayout>\n\n\n\n\u8aac\u660e\n\u4e0a\u8ff0\u3057\u305f\u3068\u304a\u308a\uff0c\u30ab\u30e1\u30e9\u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067Bitmap mCacheBitmap\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u304c\uff0c\u305d\u308c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304cJavaCameraView.AllocateCache()\u3067\u3059\uff0e\n\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\uff0c\u3053\u308c\u3092\u547c\u3076\u524d\u306bmFrameWidth,mFrameHeight\u3092\u66f8\u304d\u63db\u3048\u3066\u521d\u671f\u5316\u3059\u308b\u30b5\u30a4\u30ba\u3092\u3054\u307e\u304b\u3057\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\u6b63\u65b9\u5f62\u306b\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\nAllocateCache()\u3092\u547c\u3093\u3060\u3042\u3068\u306f\u5143\u306e\u5024\u306b\u623b\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u306b\u4f7f\u3046Rect\u30aa\u30d6\u30b8\u30a7\u30af\u30c8mROI\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\uff0e\n    @Override\n    protected void AllocateCache()\n    {\n        int frameWidth = mFrameWidth, frameHeight = mFrameHeight;\n        mSquareFrameWidth = Math.min(mFrameWidth, mFrameHeight);\n        mFrameWidth = mSquareFrameWidth;\n        mFrameHeight = mSquareFrameWidth;\n        super.AllocateCache();\n        mFrameWidth = frameWidth;\n        mFrameHeight = frameHeight;\n\n        mROI = new Rect((mFrameWidth - mSquareFrameWidth)/2, (mFrameHeight - mSquareFrameWidth)/2, mSquareFrameWidth, mSquareFrameWidth);\n    }\n\nJavaCameraView.deliverAndDrawFrame()\u304conCameraFrame()\u3092\u547c\u3073\uff0c\u8fd4\u3063\u3066\u304d\u305fMat\u3092Utils.matToBitmap()\u3067mCacheBitmap\u306b\u5165\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u3053\u3067\uff0c\u5b50\u30af\u30e9\u30b9\u3067deliverAndDrawFrame()\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\uff0cJavaCameraView.deliverAndDrawFrame()\u306b\u6e21\u308bCvCameraViewFrame\u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092CroppedCameraViewFrame\u306b\u5dee\u3057\u66ff\u3048\u3066\u3044\u307e\u3059\uff0e\nCroppedCameraViewFrame\u306f\u5143\u3005\u306eCvCameraViewFrame\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30e9\u30c3\u30d7\u3057\uff0crgba()\u3068gray()\u3067\u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306ergba(),gray()\u306e\u8fd4\u308a\u5024\u3092\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u8fd4\u3059\u3053\u3068\u3067\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\n\n    @Override\n    protected void deliverAndDrawFrame(CvCameraViewFrame frame) {\n        super.deliverAndDrawFrame(new CroppedCameraViewFrame(frame, mROI));\n    }\n\n    private class CroppedCameraViewFrame implements CvCameraViewFrame {\n        private Rect mROI;\n        private CvCameraViewFrame mOriginalFrame;\n\n        @Override\n        public Mat gray() {\n            return new Mat(mOriginalFrame.gray(), mROI);\n        }\n\n        @Override\n        public Mat rgba() {\n            return new Mat(mOriginalFrame.rgba(), mROI);\n        }\n\n        public CroppedCameraViewFrame(CvCameraViewFrame original, Rect ROI) {\n            mOriginalFrame = original;\n            mROI = ROI;\n        }\n    }\n\nOpenCV4Android\u306e\u30ab\u30e1\u30e9\u30d7\u30ec\u30d3\u30e5\u30fc\u3092\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u307e\u3059\uff0e\n\n\u3061\u306a\u307f\u306bOpenCV4Android\u306e\u30ab\u30e1\u30e9\u306e\u4f7f\u3044\u65b9\u306f\nhttp://rest-term.com/archives/3010/\n\u306a\u3069\u304c\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\uff0e\n\u3053\u306e\u8a18\u4e8b\u3067\u3082\uff0c\u3053\u3093\u306a\u30b3\u30fc\u30c9\u3092\u60f3\u5b9a\u3057\u307e\u3059\uff0e\nJavaCameraView\u3092\u4f7f\u3044\u307e\u3059\uff0e\n\n#\u554f\u984c\nOpenCV4android\u3092\u4f7f\u3063\u305fandroid\u30a2\u30d7\u30ea\u3067\u30ab\u30e1\u30e9\u30d7\u30ec\u30d3\u30e5\u30fc\u3092\u6b63\u65b9\u5f62\u306b\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u305f\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\n\u5b89\u76f4\u306b`onCameraFrame()`\u3067\u753b\u50cf\u3092\u30af\u30ed\u30c3\u30d7\u3057\u3066\u8fd4\u305b\u3070\u3044\u3044\u3084\u3068\u601d\u3063\u3066\u3084\u3063\u3066\u307f\u305f\u3068\u3053\u308d\uff0c\n\n```java\n    @Override\n    public Mat onCameraFrame(CvCameraViewFrame inputFrame) {\n        mRgba = inputFrame.rgba();\n        return new Mat(mRgba, mROI);\n    }\n```\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u3092\u5410\u304d\u7d9a\u3051\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u304c\u8868\u793a\u3055\u308c\u306a\u304f\u306a\u308a\u307e\u3057\u305f\uff0e\n\n```\n08-10 23:08:14.137  30863-31993/com.example E/cv::error()\ufe55 OpenCV Error: Assertion failed (src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols) in void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean), file /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp, line 97\n08-10 23:08:14.137  30863-31993/com.example E/org.opencv.android.Utils\ufe55 nMatToBitmap catched cv::Exception: /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp:97: error: (-215) src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols in function void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Mat type: Mat [ 480*480*CV_8UC4, isCont=false, isSubmat=true, nativeObj=0x78cfb440, dataAddr=0x7a91a1f0 ]\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Bitmap type: 720*480\n08-10 23:08:14.137  30863-31993/com.example E/CameraBridge\ufe55 Utils.matToBitmap() throws an exception: /hdd2/buildbot/slaves/slave_ardbeg1/50-SDK/opencv/modules/java/generator/src/cpp/utils.cpp:97: error: (-215) src.dims == 2 && info.height == (uint32_t)src.rows && info.width == (uint32_t)src.cols in function void Java_org_opencv_android_Utils_nMatToBitmap2(JNIEnv*, jclass, jlong, jobject, jboolean)\n```\n\n`JavaCameraView`\u306e\u89aa\u30af\u30e9\u30b9`CameraBridgeViewBase`\u306f\u8868\u793a\u7528\u30d0\u30c3\u30d5\u30a1\u3068\u3057\u3066`Bitmap mCacheBitmap`\u3092\u6301\u3063\u3066\u3044\u3066\uff0c\u521d\u671f\u5316\u6642\u306b\u3053\u308c\u3092\u30ab\u30e1\u30e9\u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067\u78ba\u4fdd\u3057\u307e\u3059\uff0e\n\u305d\u3057\u3066`onCameraFrame()`\u304b\u3089\u8fd4\u308b`Mat`\u3092`Utils.matToBitmap()`\u3067`mCacheBitmap`\u306b\u5165\u308c\u3066\u30d7\u30ec\u30d3\u30e5\u30fc\u8868\u793a\u51e6\u7406\u306b\u56de\u3057\u307e\u3059\uff0e\n\u3057\u304b\u3057\uff0c`onCameraFrame()`\u304b\u3089\u30b5\u30a4\u30ba\u3092\u5909\u3048\u305f`Mat`\u3092\u8fd4\u3059\u3068\uff0c`Utils.matToBitmap()`\u3067\u5909\u63db\u5143\u3068\u5909\u63db\u5148\u306e\u30b5\u30a4\u30ba\u304c\u5408\u308f\u305a\u306b\u4e0a\u8a18\u306e\u30a8\u30e9\u30fc\u306b\u306a\u308a\u307e\u3059\uff0e\n\n#\u5bfe\u7b56\nJavaCameraView\u3092\u7d99\u627f\u3057\u305f\u30d3\u30e5\u30fc\u30af\u30e9\u30b9\u3092\u4f5c\u308a\uff0c\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3092\u884c\u3044\u307e\u3057\u305f\uff0e\n\n```java:CameraView.java\npackage com.example;\n\nimport android.content.Context;\nimport android.util.AttributeSet;\n\nimport org.opencv.android.JavaCameraView;\nimport org.opencv.core.Mat;\nimport org.opencv.core.Rect;\n\npublic class CameraView extends JavaCameraView {\n    private Rect mROI;\n    private int mSquareFrameWidth;\n\n    public CameraView(Context context, AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    @Override\n    protected void AllocateCache()\n    {\n        int frameWidth = mFrameWidth, frameHeight = mFrameHeight;\n        mSquareFrameWidth = Math.min(mFrameWidth, mFrameHeight);\n        mFrameWidth = mSquareFrameWidth;\n        mFrameHeight = mSquareFrameWidth;\n        super.AllocateCache();\n        mFrameWidth = frameWidth;\n        mFrameHeight = frameHeight;\n\n        mROI = new Rect((mFrameWidth - mSquareFrameWidth)/2, (mFrameHeight - mSquareFrameWidth)/2, mSquareFrameWidth, mSquareFrameWidth);\n    }\n\n\n    @Override\n    protected void deliverAndDrawFrame(CvCameraViewFrame frame) {\n        super.deliverAndDrawFrame(new CroppedCameraViewFrame(frame, mROI));\n    }\n\n    private class CroppedCameraViewFrame implements CvCameraViewFrame {\n        private Rect mROI;\n        private CvCameraViewFrame mOriginalFrame;\n\n        @Override\n        public Mat gray() {\n            return new Mat(mOriginalFrame.gray(), mROI);\n        }\n\n        @Override\n        public Mat rgba() {\n            return new Mat(mOriginalFrame.rgba(), mROI);\n        }\n\n        public CroppedCameraViewFrame(CvCameraViewFrame original, Rect ROI) {\n            mOriginalFrame = original;\n            mROI = ROI;\n        }\n    }\n}\n```\n\n\u305d\u3057\u3066\uff0c\u30ec\u30a4\u30a2\u30a6\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u4f7f\u3046\u30d3\u30e5\u30fc\u3092\u3053\u308c\u306b\u5dee\u3057\u66ff\u3048\u307e\u3059\n\n```xml:activity_main.xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    xmlns:opencv=\"http://schemas.android.com/apk/res-auto\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    tools:context=\".MainActivity\">\n\n    <com.example.CameraView\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"fill_parent\"\n        android:id=\"@+id/camera_preview\"\n        opencv:camera_id=\"any\" />\n\n</LinearLayout>\n```\n\n## \u8aac\u660e\n\u4e0a\u8ff0\u3057\u305f\u3068\u304a\u308a\uff0c\u30ab\u30e1\u30e9\u306e\u30d5\u30ec\u30fc\u30e0\u30b5\u30a4\u30ba\u3067`Bitmap mCacheBitmap`\u304c\u521d\u671f\u5316\u3055\u308c\u307e\u3059\u304c\uff0c\u305d\u308c\u3092\u884c\u3063\u3066\u3044\u308b\u306e\u304c`JavaCameraView.AllocateCache()`\u3067\u3059\uff0e\n\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\u3067\u306f\uff0c\u3053\u308c\u3092\u547c\u3076\u524d\u306b`mFrameWidth`,`mFrameHeight`\u3092\u66f8\u304d\u63db\u3048\u3066\u521d\u671f\u5316\u3059\u308b\u30b5\u30a4\u30ba\u3092\u3054\u307e\u304b\u3057\u307e\u3059\uff0e\u3053\u3053\u3067\u306f\u6b63\u65b9\u5f62\u306b\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3059\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\uff0e\n`AllocateCache()`\u3092\u547c\u3093\u3060\u3042\u3068\u306f\u5143\u306e\u5024\u306b\u623b\u3057\u307e\u3059\uff0e\n\n\u307e\u305f\uff0c\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u306b\u4f7f\u3046`Rect`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8`mROI`\u3092\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\uff0e\n\n```java\n    @Override\n    protected void AllocateCache()\n    {\n        int frameWidth = mFrameWidth, frameHeight = mFrameHeight;\n        mSquareFrameWidth = Math.min(mFrameWidth, mFrameHeight);\n        mFrameWidth = mSquareFrameWidth;\n        mFrameHeight = mSquareFrameWidth;\n        super.AllocateCache();\n        mFrameWidth = frameWidth;\n        mFrameHeight = frameHeight;\n\n        mROI = new Rect((mFrameWidth - mSquareFrameWidth)/2, (mFrameHeight - mSquareFrameWidth)/2, mSquareFrameWidth, mSquareFrameWidth);\n    }\n```\n\n`JavaCameraView.deliverAndDrawFrame()`\u304c`onCameraFrame()`\u3092\u547c\u3073\uff0c\u8fd4\u3063\u3066\u304d\u305f`Mat`\u3092`Utils.matToBitmap()`\u3067`mCacheBitmap`\u306b\u5165\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u3053\u3067\uff0c\u5b50\u30af\u30e9\u30b9\u3067`deliverAndDrawFrame()`\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3057\uff0c`JavaCameraView.deliverAndDrawFrame()`\u306b\u6e21\u308b`CvCameraViewFrame`\u3092\u5b9f\u88c5\u3057\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092`CroppedCameraViewFrame`\u306b\u5dee\u3057\u66ff\u3048\u3066\u3044\u307e\u3059\uff0e\n`CroppedCameraViewFrame`\u306f\u5143\u3005\u306e`CvCameraViewFrame`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30e9\u30c3\u30d7\u3057\uff0c`rgba()`\u3068`gray()`\u3067\u5143\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`rgba()`,`gray()`\u306e\u8fd4\u308a\u5024\u3092\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u8fd4\u3059\u3053\u3068\u3067\u30af\u30ed\u30c3\u30d4\u30f3\u30b0\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059\uff0e\n\n```java\n\n    @Override\n    protected void deliverAndDrawFrame(CvCameraViewFrame frame) {\n        super.deliverAndDrawFrame(new CroppedCameraViewFrame(frame, mROI));\n    }\n\n    private class CroppedCameraViewFrame implements CvCameraViewFrame {\n        private Rect mROI;\n        private CvCameraViewFrame mOriginalFrame;\n\n        @Override\n        public Mat gray() {\n            return new Mat(mOriginalFrame.gray(), mROI);\n        }\n\n        @Override\n        public Mat rgba() {\n            return new Mat(mOriginalFrame.rgba(), mROI);\n        }\n\n        public CroppedCameraViewFrame(CvCameraViewFrame original, Rect ROI) {\n            mOriginalFrame = original;\n            mROI = ROI;\n        }\n    }\n```\n", "tags": ["Android", "OpenCV", "Java"]}