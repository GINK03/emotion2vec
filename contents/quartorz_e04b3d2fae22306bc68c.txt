{"context": " More than 1 year has passed since last update.libclang\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u7b49\u3092\u8aad\u3093\u3067\u4f7f\u3044\u65b9\u3092\u8abf\u3079\u305f\u308a\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u8272\u3005\u78ba\u8a8d\u3057\u305f\u308a\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u672c\u6587\u4e2d\u3067\u306f\u95a2\u6570\u540d\u306e\u982d\u306b\u3064\u3044\u3066\u308bclang_\u306f\u7701\u7565\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\nCXIndex\n\u7ffb\u8a33\u5358\u4f4d(translation unit)\u306e\u96c6\u307e\u308a\u3002createIndex\u3067\u4f5c\u3063\u3066disposeIndex\u3067\u524a\u9664\u3059\u308b\u3002\nCXIndex clang_createIndex(\n    int excludeDeclarationsFromPCH,\n    int displayDiagnostics\n);\nvoid clang_disposeIndex(\n    CXIndex index\n);\n\n\nCXTranslationUnit\nclang -emit-ast\u3067\u751f\u6210\u3055\u308c\u308bast\u30d5\u30a1\u30a4\u30eb\u304b\u666e\u901a\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u3002\ndisposeTranslationUnit\u3067\u524a\u9664\u3002\nvoid clang_disposeTranslationUnit(\n    CXTranslationUnit\n);\n\n\nast\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u6642\ncreateTranslationUnit\u304bcreateTranslationUnit2\u3092\u4f7f\u3046\u3002\n\u6700\u5f8c\u306b2\u304c\u4ed8\u3044\u3066\u3044\u308b\u65b9\u306f\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u3002\n\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u304c\u4e0d\u8981\u306a\u30892\u304c\u306a\u3044\u65b9\u3092\u4f7f\u3048\u3070\u826f\u3055\u305d\u3046\u3002\nCXTranslationUnit clang_createTranslationUnit(\n    CXIndex CIdx,\n    const char *ast_filename\n);\nenum CXErrorCode clang_createTranslationUnit2(\n    CXIndex CIdx,\n    const char *ast_filename,\n    CXTranslationUnit *out_TU\n);\n\n\n\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u6642\nparseTranslationUnit\u304bparseTranslationUnit2\u304bcreateTranslationUnitFromSourceFile\u3092\u4f7f\u3046\u3002\n\u3069\u308c\u3082clang\u3092\u5b9f\u884c\u3059\u308b\u6642\u3068\u540c\u3058\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u6e21\u305b\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u542b\u307e\u308c\u308b\u6642\u306f2\u3064\u76ee\u306e\u5f15\u6570\u3092NULL\u306b\u3067\u304d\u308b\u3002\nparseTranslationUnit\u306eunsigned options\u306bCXTranslationUnit_SkipFunctionBodies\u3092\u6e21\u3059\u3068\u95a2\u6570\u672c\u4f53\u3092\u7121\u8996\u3067\u304d\u308b\u3002\nCXTranslationUnit clang_parseTranslationUnit(\n    CXIndex CIdx,\n    const char *source_filename,\n    const char *const *command_line_args,\n    int num_command_line_args,\n    struct CXUnsavedFile *unsaved_files,\n    unsigned num_unsaved_files,\n    unsigned options\n);\nenum CXErrorCode clang_parseTranslationUnit2(\n    CXIndex CIdx,\n    const char *source_filename,\n    const char *const *command_line_args,\n    int num_command_line_args,\n    struct CXUnsavedFile *unsaved_files,\n    unsigned num_unsaved_files,\n    unsigned options,\n    CXTranslationUnit *out_TU\n);\nCXTranslationUnit clang_createTranslationUnitFromSourceFile(\n    CXIndex CIdx,\n    const char *source_filename,\n    int num_clang_command_line_args,\n    const char *const *clang_command_line_args,\n    unsigned num_unsaved_files,\n    struct CXUnsavedFile *unsaved_files\n);\n\n\nCXCursor\n\u3042\u308b\u7ffb\u8a33\u5358\u4f4d\u304c\u6301\u3064AST\u306e\u3042\u308b\u8981\u7d20\u3092\u6307\u3059\u3002\ngetTranslationUnitCursor\u3067AST\u306e\u6839\u3092\u6307\u3059CXCursor\u304c\u5f97\u3089\u308c\u308b\u3002\ngetCursorKind\u3067\u8981\u7d20\u306e\u7a2e\u985e\u304c\u5f97\u3089\u308c\u308b\u3002\n\u6839\u306b\u5bfe\u3057\u3066getCursorKind\u3092\u547c\u3076\u3068CXCursor_TranslationUnit\u304c\u8fd4\u308b\u3002\nCXCursor clang_getTranslationUnitCursor(\n    CXTranslationUnit\n);\nenum CXCursorKind clang_getCursorKind(\n    CXCursor\n);\n\n\nAST\u306e\u8d70\u67fb\n\u8d70\u67fb\u3092\u958b\u59cb\u3057\u305f\u3044\u8981\u7d20\u3092\u6307\u3059CXCursor\u3092\u5f15\u6570\u306b\u3057\u3066visitCursor\u3092\u547c\u3073\u51fa\u3059\u3002\nvisitCursor\u306e3\u3064\u76ee\u306e\u5f15\u6570\u306e\u5024\u304c2\u3064\u76ee\u306e\u5f15\u6570\u306b\u6e21\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306b\u306a\u308b\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u623b\u308a\u5024\u3067\n\n\u8d70\u67fb\u3092\u3084\u3081\u308b(CXChildVisit_Break)\n\u6b21\u306e\u8981\u7d20\u306b\u79fb\u308b(CXChildVisit_Continue)\n\u5b50\u8981\u7d20\u306b\u79fb\u308b(CXChildVisit_Recurse)\n\n\u306e\u3044\u305a\u308c\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\ntypedef enum CXChildVisitResult(* CXCursorVisitor )(\n    CXCursor cursor,\n    CXCursor parent,\n    CXClientData client_data\n);\nunsigned clang_visitChildren(\n    CXCursor parent,\n    CXCursorVisitor visitor,\n    CXClientData client_data\n);\n\n\n\u95a2\u6570\u306e\u69cb\u9020\n\nfunction.cpp\nvoid f(int, float);\n\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306eAST\u306f\n\n\nFunctionDecl\n\nParmDecl\nParmDecl\n\n\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u5404\u5024\u306fgetCursorKind\u3067\u5f97\u3089\u308c\u308benum CXCursorKind\u306e\u5404\u5024\u306e\u982d\u306b\u4ed8\u3044\u3066\u308bCXCursor_\u3092\u7701\u7565\u3057\u305f\u3082\u306e\u3002\nParmDecl\u306e\u6570\u306fgetNumArguments\u3067\u5f97\u3089\u308c\u308b\u3002\n\u5404ParmDecl\u306fCursor_getArgument\u3092\u4f7f\u3063\u3066\u3082\u5f97\u3089\u308c\u308b\u3002\ngetCursorType\u3067void (int, float)\u3001getCursorDisplayName\u3067f(int, float)\u3001getCursorSpelling\u3067f\u304c\u5f97\u3089\u308c\u308b\u3002\nint clang_Cursor_getNumArguments(\n    CXCursor C\n);\nCXCursor clang_Cursor_getArgument(\n    CXCursor C,\n    unsigned i\n);\nCXType clang_getCursorType(\n    CXCursor C\n);\nCXString clang_getCursorDisplayName(\n    CXCursor\n);\nCXString clang_getCursorSpelling(\n    CXCursor\n);\n\n\n\u5909\u6570\u306e\u69cb\u9020\n\u5909\u6570\u306fVarDecl\u3068\u306a\u308b\u3002\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u5834\u5408\u3001FunctoinDecl\u3068\u540c\u69d8\u306b\u5b50\u8981\u7d20\u306bParmDecl\u304c\u3067\u304d\u308b\u3002\n\n\u30af\u30e9\u30b9\u306e\u69cb\u9020\n\nclass.cpp\nclass Base1{};\nclass Base2{};\nclass Derived : public Base1, private Base2{};\n\n\n\u3053\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3042\u3063\u305f\u6642\u3001Derived\u30af\u30e9\u30b9\u306eAST\u306f\n\n\nClassDecl\n\n\nCXXBaseSpecifier\n\nTypeRef\n\n\n\nCXXBaseSpecifier\n\nTypeRef\n\n\n\n\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\nCXXBaseSpecifier\u3092\u5f15\u6570\u306b\u3057\u3066getCXXAccessSpecifier\u3092\u547c\u3076\u3068\u7d99\u627f\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u5f97\u3089\u308c\u308b\u3002\ngetTypeSpelling(getCursorType(CXXBaseSpecifier\u3082\u3057\u304f\u306fTypeRef\u306aCXCursor))\u3068\u3059\u308b\u3068\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u540d\u524d\u304c\u5f97\u3089\u308c\u308b\u3002\nenum CX_CXXAccessSpecifier clang_getCXXAccessSpecifier(\n    CXCursor\n);\nCXString clang_getTypeSpelling(\n    CXType CT\n);\n\n\n\u30e1\u30f3\u30d0\u95a2\u6570\n\nmember-function.cpp\nclass Base{\npublic:\n    virtual void func(int);\n};\nclass Derived : public Base{\npublic:\n    void func(int) override;\n};\n\n\n\u3068\u3059\u308b\u3068\u3001Derived\u30af\u30e9\u30b9\u306eAST\u306f\n\n\nClassDecl\n\n\nCXXBaseSpecifier\n\nTypeRef\n\n\n\nCXXMethod\n\nCXXOverrideAttr\nParmDecl\n\n\n\n\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u90e8\u5206\u306fFunctionDecl\u3068\u540c\u3058\u69cb\u9020\u3002\noverride\u3068final\u306fCXXMethod\u306e\u5b50\u8981\u7d20\u306b\u306a\u308b\u3002\nvirtual\u3084static\u7b49\u306fCXXMethod_isVirtual\u7b49\u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n\u30e1\u30f3\u30d0\u5909\u6570\n\u30e1\u30f3\u30d0\u5909\u6570\u306fFieldDecl\u3068\u306a\u308b\u3002\n\u69cb\u9020\u306fVarDecl\u3068\u540c\u3058\u3002\ngetCXXAccessSpecifier\u3067\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u5206\u304b\u308b\u3002\n[libclang\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](http://clang.llvm.org/doxygen/group__CINDEX.html)\u7b49\u3092\u8aad\u3093\u3067\u4f7f\u3044\u65b9\u3092\u8abf\u3079\u305f\u308a\u5b9f\u969b\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u3044\u3066\u8272\u3005\u78ba\u8a8d\u3057\u305f\u308a\u3057\u305f\u306e\u3067\u30e1\u30e2\u3002\n\u672c\u6587\u4e2d\u3067\u306f\u95a2\u6570\u540d\u306e\u982d\u306b\u3064\u3044\u3066\u308b`clang_`\u306f\u7701\u7565\u3057\u3066\u3042\u308a\u307e\u3059\u3002\n\n# CXIndex\n\u7ffb\u8a33\u5358\u4f4d(translation unit)\u306e\u96c6\u307e\u308a\u3002`createIndex`\u3067\u4f5c\u3063\u3066`disposeIndex`\u3067\u524a\u9664\u3059\u308b\u3002\n\n```cpp\nCXIndex clang_createIndex(\n    int excludeDeclarationsFromPCH,\n    int displayDiagnostics\n);\nvoid clang_disposeIndex(\n    CXIndex index\n);\n```\n\n# CXTranslationUnit\n`clang -emit-ast`\u3067\u751f\u6210\u3055\u308c\u308bast\u30d5\u30a1\u30a4\u30eb\u304b\u666e\u901a\u306e\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u3002\n`disposeTranslationUnit`\u3067\u524a\u9664\u3002\n\n```cpp\nvoid clang_disposeTranslationUnit(\n    CXTranslationUnit\n);\n```\n\n## ast\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u6642\n`createTranslationUnit`\u304b`createTranslationUnit2`\u3092\u4f7f\u3046\u3002\n\u6700\u5f8c\u306b`2`\u304c\u4ed8\u3044\u3066\u3044\u308b\u65b9\u306f\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u8fd4\u3059\u3002\n\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u304c\u4e0d\u8981\u306a\u3089`2`\u304c\u306a\u3044\u65b9\u3092\u4f7f\u3048\u3070\u826f\u3055\u305d\u3046\u3002\n\n```cpp\nCXTranslationUnit clang_createTranslationUnit(\n    CXIndex CIdx,\n    const char *ast_filename\n);\nenum CXErrorCode clang_createTranslationUnit2(\n    CXIndex CIdx,\n    const char *ast_filename,\n    CXTranslationUnit *out_TU\n);\n```\n\n## \u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u4f5c\u308b\u6642\n`parseTranslationUnit`\u304b`parseTranslationUnit2`\u304b`createTranslationUnitFromSourceFile`\u3092\u4f7f\u3046\u3002\n\u3069\u308c\u3082clang\u3092\u5b9f\u884c\u3059\u308b\u6642\u3068\u540c\u3058\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u6e21\u305b\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306b\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u540d\u304c\u542b\u307e\u308c\u308b\u6642\u306f2\u3064\u76ee\u306e\u5f15\u6570\u3092`NULL`\u306b\u3067\u304d\u308b\u3002\n`parseTranslationUnit`\u306e`unsigned options`\u306b`CXTranslationUnit_SkipFunctionBodies`\u3092\u6e21\u3059\u3068\u95a2\u6570\u672c\u4f53\u3092\u7121\u8996\u3067\u304d\u308b\u3002\n\n```cpp\nCXTranslationUnit clang_parseTranslationUnit(\n    CXIndex CIdx,\n    const char *source_filename,\n    const char *const *command_line_args,\n    int num_command_line_args,\n    struct CXUnsavedFile *unsaved_files,\n    unsigned num_unsaved_files,\n    unsigned options\n);\nenum CXErrorCode clang_parseTranslationUnit2(\n    CXIndex CIdx,\n    const char *source_filename,\n    const char *const *command_line_args,\n    int num_command_line_args,\n    struct CXUnsavedFile *unsaved_files,\n    unsigned num_unsaved_files,\n    unsigned options,\n    CXTranslationUnit *out_TU\n);\nCXTranslationUnit clang_createTranslationUnitFromSourceFile(\n    CXIndex CIdx,\n    const char *source_filename,\n    int num_clang_command_line_args,\n    const char *const *clang_command_line_args,\n    unsigned num_unsaved_files,\n    struct CXUnsavedFile *unsaved_files\n);\n```\n\n# CXCursor\n\u3042\u308b\u7ffb\u8a33\u5358\u4f4d\u304c\u6301\u3064AST\u306e\u3042\u308b\u8981\u7d20\u3092\u6307\u3059\u3002\n`getTranslationUnitCursor`\u3067AST\u306e\u6839\u3092\u6307\u3059`CXCursor`\u304c\u5f97\u3089\u308c\u308b\u3002\n`getCursorKind`\u3067\u8981\u7d20\u306e\u7a2e\u985e\u304c\u5f97\u3089\u308c\u308b\u3002\n\u6839\u306b\u5bfe\u3057\u3066`getCursorKind`\u3092\u547c\u3076\u3068`CXCursor_TranslationUnit`\u304c\u8fd4\u308b\u3002\n\n```cpp\nCXCursor clang_getTranslationUnitCursor(\n    CXTranslationUnit\n);\nenum CXCursorKind clang_getCursorKind(\n    CXCursor\n);\n```\n\n# AST\u306e\u8d70\u67fb\n\u8d70\u67fb\u3092\u958b\u59cb\u3057\u305f\u3044\u8981\u7d20\u3092\u6307\u3059`CXCursor`\u3092\u5f15\u6570\u306b\u3057\u3066`visitCursor`\u3092\u547c\u3073\u51fa\u3059\u3002\n`visitCursor`\u306e3\u3064\u76ee\u306e\u5f15\u6570\u306e\u5024\u304c2\u3064\u76ee\u306e\u5f15\u6570\u306b\u6e21\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u306e\u6700\u5f8c\u306e\u5f15\u6570\u306b\u306a\u308b\u3002\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u306e\u623b\u308a\u5024\u3067\n\n * \u8d70\u67fb\u3092\u3084\u3081\u308b(`CXChildVisit_Break`)\n * \u6b21\u306e\u8981\u7d20\u306b\u79fb\u308b(`CXChildVisit_Continue`)\n * \u5b50\u8981\u7d20\u306b\u79fb\u308b(`CXChildVisit_Recurse`)\n\n\u306e\u3044\u305a\u308c\u304b\u306e\u52d5\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002\n\n```cpp\ntypedef enum CXChildVisitResult(* CXCursorVisitor )(\n    CXCursor cursor,\n    CXCursor parent,\n    CXClientData client_data\n);\nunsigned clang_visitChildren(\n    CXCursor parent,\n    CXCursorVisitor visitor,\n    CXClientData client_data\n);\n```\n\n## \u95a2\u6570\u306e\u69cb\u9020\n\n``` cpp:function.cpp\nvoid f(int, float);\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306eAST\u306f\n\n * `FunctionDecl`\n   * `ParmDecl`\n   * `ParmDecl`\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\u5404\u5024\u306f`getCursorKind`\u3067\u5f97\u3089\u308c\u308b`enum CXCursorKind`\u306e\u5404\u5024\u306e\u982d\u306b\u4ed8\u3044\u3066\u308b`CXCursor_`\u3092\u7701\u7565\u3057\u305f\u3082\u306e\u3002\n`ParmDecl`\u306e\u6570\u306f`getNumArguments`\u3067\u5f97\u3089\u308c\u308b\u3002\n\u5404`ParmDecl`\u306f`Cursor_getArgument`\u3092\u4f7f\u3063\u3066\u3082\u5f97\u3089\u308c\u308b\u3002\n`getCursorType`\u3067`void (int, float)`\u3001`getCursorDisplayName`\u3067`f(int, float)`\u3001`getCursorSpelling`\u3067`f`\u304c\u5f97\u3089\u308c\u308b\u3002\n\n```cpp\nint clang_Cursor_getNumArguments(\n    CXCursor C\n);\nCXCursor clang_Cursor_getArgument(\n    CXCursor C,\n    unsigned i\n);\nCXType clang_getCursorType(\n    CXCursor C\n);\nCXString clang_getCursorDisplayName(\n    CXCursor\n);\nCXString clang_getCursorSpelling(\n    CXCursor\n);\n```\n\n## \u5909\u6570\u306e\u69cb\u9020\n\u5909\u6570\u306f`VarDecl`\u3068\u306a\u308b\u3002\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u5834\u5408\u3001`FunctoinDecl`\u3068\u540c\u69d8\u306b\u5b50\u8981\u7d20\u306b`ParmDecl`\u304c\u3067\u304d\u308b\u3002\n\n## \u30af\u30e9\u30b9\u306e\u69cb\u9020\n\n``` cpp:class.cpp\nclass Base1{};\nclass Base2{};\nclass Derived : public Base1, private Base2{};\n```\n\n\u3053\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u3042\u3063\u305f\u6642\u3001`Derived`\u30af\u30e9\u30b9\u306eAST\u306f\n\n * `ClassDecl`\n   * `CXXBaseSpecifier`\n     * `TypeRef`\n   * `CXXBaseSpecifier`\n     * `TypeRef`\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n`CXXBaseSpecifier`\u3092\u5f15\u6570\u306b\u3057\u3066`getCXXAccessSpecifier`\u3092\u547c\u3076\u3068\u7d99\u627f\u306e\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u5f97\u3089\u308c\u308b\u3002\n`getTypeSpelling(getCursorType(CXXBaseSpecifier\u3082\u3057\u304f\u306fTypeRef\u306aCXCursor))`\u3068\u3059\u308b\u3068\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u540d\u524d\u304c\u5f97\u3089\u308c\u308b\u3002\n\n```cpp\nenum CX_CXXAccessSpecifier clang_getCXXAccessSpecifier(\n    CXCursor\n);\nCXString clang_getTypeSpelling(\n    CXType CT\n);\n```\n\n### \u30e1\u30f3\u30d0\u95a2\u6570\n\n```cpp:member-function.cpp\nclass Base{\npublic:\n    virtual void func(int);\n};\nclass Derived : public Base{\npublic:\n    void func(int) override;\n};\n```\n\n\u3068\u3059\u308b\u3068\u3001`Derived`\u30af\u30e9\u30b9\u306eAST\u306f\n\n * `ClassDecl`\n   * `CXXBaseSpecifier`\n     * `TypeRef`\n   * `CXXMethod`\n     * `CXXOverrideAttr`\n     * `ParmDecl`\n\n\u306e\u3088\u3046\u306b\u306a\u308b\u3002\n\u30e1\u30f3\u30d0\u95a2\u6570\u306e\u90e8\u5206\u306f`FunctionDecl`\u3068\u540c\u3058\u69cb\u9020\u3002\n`override`\u3068`final`\u306f`CXXMethod`\u306e\u5b50\u8981\u7d20\u306b\u306a\u308b\u3002\n`virtual`\u3084`static`\u7b49\u306f`CXXMethod_isVirtual`\u7b49\u3067\u78ba\u8a8d\u3067\u304d\u308b\u3002\n\n\n### \u30e1\u30f3\u30d0\u5909\u6570\n\u30e1\u30f3\u30d0\u5909\u6570\u306f`FieldDecl`\u3068\u306a\u308b\u3002\n\u69cb\u9020\u306f`VarDecl`\u3068\u540c\u3058\u3002\n`getCXXAccessSpecifier`\u3067\u30a2\u30af\u30bb\u30b9\u6307\u5b9a\u5b50\u304c\u5206\u304b\u308b\u3002\n", "tags": ["clang", "C", "C++"]}