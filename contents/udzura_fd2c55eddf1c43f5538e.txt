{"context": " More than 1 year has passed since last update.\u4e45\u3057\u3076\u308a\u306b Thor \u3092\u3061\u3083\u3093\u3068\u4f7f\u3063\u3066\u3001\u305d\u308c\u3067\u7d50\u69cb\u8abf\u3079\u305f\u306e\u3067\u672a\u6765\u306e\u81ea\u5206\u306e\u305f\u3081\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306f 0.19.1 \u3067\u3059\u3002\n\n\u3059\u3079\u3066\u306e\u57fa\u672c\u5f62\n\nlib/foo.rb\nrequire 'thor'\nclass Foo < Thor\n  desc 'say', 'say hello'\n  method_option :dry_run, type: :boolean, default: false\n  def say\n    puts \"Say hello!\" unless options[:dry_run]\n  end\nend\n\n\n\nbin/foo\n#!/usr/bin/env ruby\nrequire 'foo'\n\nFoo.start\n\n\n\n\u30b3\u30de\u30f3\u30c9\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u767b\u9332\u3057\u305f\u3044\n\n\nmap \u3064\u304b\u3046\n\u306a\u304a\u3001Thor\u306e\u6a5f\u80fd\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u5834\u5408 foo s \u3067 foo say \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u81ea\u52d5\u3067\u306a\u308b\n\nclass Foo < Thor\n  desc 'say', 'say hello'\n  def say\n    puts \"Say hello!\" unless options[:dry_run]\n  end\n\n  map 'talk' => 'say'\nend\n\n\n\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u767b\u9332\u3057\u305f\u3044\n\n\u3068\u3053\u308d\u3067\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u51fa\u3066\u304d\u305f\u3089\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u304f\u304f\u3063\u3066\u304a\u304f\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u308b\u3068\u601d\u3063\u305f\n\nmodule BarCLI\n  class Sub < Thor\n    desc 'say', 'Say sub'\n    def say; ...; end\n  end\n\n  class Cli < Thor\n    subcommand 'sub', Sub\n  end\nend\n# barcli sub say => ...\n\n\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u547c\u3070\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u305f\u3044\n\n\ndefault_task \u4f7f\u3046\n\nmodule BarCli\n  class Build < Thor\n    desc 'all', 'Build all app'\n    def all\n      #....\n    end\n    default_task :all\n  end\nend\n\n\n\u3042\u308b\u30b3\u30de\u30f3\u30c9\u304b\u3089\u5225\u306e\u30b3\u30de\u30f3\u30c9\u547c\u3076\n\n\u8272\u3005\u7701\u7565\u3067\u304d\u308b\u304c\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u516c\u5f0f\u3092\u899a\u3048\u308b\uff1a\n\n# \u7b2c\u4e00\u5f15\u6570\uff1a Thor \u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u3084\u3064\n# \u7b2c\u4e8c\u5f15\u6570\uff1a \u914d\u5217\u3067\u3001\u30b3\u30de\u30f3\u30c9\u306b\u5b9f\u969b\u6e21\u3059\u5f15\u6570\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u7cfb\u9664\u304f\n# \u7b2c\u4e09\u5f15\u6570\uff1a \u30aa\u30d7\u30b7\u30e7\u30f3\u3092Hash\u3067\u3002\u89aa\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4e38\u3063\u3068\u5f15\u304d\u7d99\u3050\u306a\u3089\u7701\u7565\u53ef\u80fd\u3002\u305d\u308c\u4ee5\u5916\u5fae\u5999\u306b\u52a0\u5de5\u3059\u308b\u306e\u306a\u3089\u9069\u5b9c `Hash#merge` \u3068\u304b\u4f7f\u3046\ninvoke SomeSub, [:do_hoge], options.merge(:bar => foobar)\n\n\n\u5168\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u306e\u5171\u901a\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\uff0b\u5171\u901a\u51e6\u7406\u306e\u66f8\u304d\u65b9\n\n\u3084\u3084Hacky\u3060\u3051\u3069\u4ee5\u4e0b\u306e\u8981\u9818\u3067 invoke_command \u3092\u4e0a\u66f8\u3051\u3070\u884c\u3051\u308b\n\u30b3\u30de\u30f3\u30c9\u3067\u306a\u3044\u30d1\u30d6\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u518d\u5b9a\u7fa9\u306a\u306e\u3067\u3001 no_commands \u3067\u56f2\u307e\u306a\u3044\u3068\u8b66\u544a\u304c\u51fa\u308b\n\nmodule BarCLI\n  class Cli < Thor\n    # verbose\u3092\u5171\u901a\u306b\n    class_option :verbose, type: :boolean, aliases: \"-V\", default: false\n\n    subcommand('hoge', Hoge)\n    subcommand('fuga', Fuga)\n    #....\n\n    no_commands do\n      def invoke_command(command, *args)\n        # \u30e2\u30b8\u30e5\u30fc\u30eb\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u30ed\u30ac\u30fc\u306e\u30ec\u30d9\u30eb\u3092option\u3067\u8a2d\u5b9a\n        BarCLI.logger.level = options[:verbose] ? Logger::DEBUG : Logger::INFO\n        super # \u5fc5\u305a\u547c\u3076\u3093\u3060\u3088\n      end\n    end\n  end\nend\n# \u3042\u3068\u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\n\n\u4e45\u3057\u3076\u308a\u306b Thor \u3092\u3061\u3083\u3093\u3068\u4f7f\u3063\u3066\u3001\u305d\u308c\u3067\u7d50\u69cb\u8abf\u3079\u305f\u306e\u3067\u672a\u6765\u306e\u81ea\u5206\u306e\u305f\u3081\u306b\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u30d0\u30fc\u30b8\u30e7\u30f3\u306f `0.19.1` \u3067\u3059\u3002\n\n### \u3059\u3079\u3066\u306e\u57fa\u672c\u5f62\n\n```ruby:lib/foo.rb\nrequire 'thor'\nclass Foo < Thor\n  desc 'say', 'say hello'\n  method_option :dry_run, type: :boolean, default: false\n  def say\n    puts \"Say hello!\" unless options[:dry_run]\n  end\nend\n```\n\n```ruby:bin/foo\n#!/usr/bin/env ruby\nrequire 'foo'\n\nFoo.start\n```\n\n### \u30b3\u30de\u30f3\u30c9\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u3092\u767b\u9332\u3057\u305f\u3044\n\n* `map` \u3064\u304b\u3046\n* \u306a\u304a\u3001Thor\u306e\u6a5f\u80fd\u3067\u4e0b\u8a18\u306e\u3088\u3046\u306a\u5834\u5408 `foo s` \u3067 `foo say` \u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u306b\u81ea\u52d5\u3067\u306a\u308b\n\n```ruby\nclass Foo < Thor\n  desc 'say', 'say hello'\n  def say\n    puts \"Say hello!\" unless options[:dry_run]\n  end\n\n  map 'talk' => 'say'\nend\n```\n\n### \u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u767b\u9332\u3057\u305f\u3044\n\n* \u3068\u3053\u308d\u3067\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u304c\u51fa\u3066\u304d\u305f\u3089\u3001\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f5c\u3063\u3066\u304f\u304f\u3063\u3066\u304a\u304f\u3068\u5206\u304b\u308a\u3084\u3059\u304f\u306a\u308b\u3068\u601d\u3063\u305f\n\n```ruby\nmodule BarCLI\n  class Sub < Thor\n    desc 'say', 'Say sub'\n    def say; ...; end\n  end\n\n  class Cli < Thor\n    subcommand 'sub', Sub\n  end\nend\n# barcli sub say => ...\n```\n\n### \u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u547c\u3070\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3092\u6307\u5b9a\u3057\u305f\u3044\n\n* `default_task` \u4f7f\u3046\n\n```ruby\nmodule BarCli\n  class Build < Thor\n    desc 'all', 'Build all app'\n    def all\n      #....\n    end\n    default_task :all\n  end\nend\n```\n\n### \u3042\u308b\u30b3\u30de\u30f3\u30c9\u304b\u3089\u5225\u306e\u30b3\u30de\u30f3\u30c9\u547c\u3076\n\n* \u8272\u3005\u7701\u7565\u3067\u304d\u308b\u304c\u3084\u3084\u3053\u3057\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u306e\u516c\u5f0f\u3092\u899a\u3048\u308b\uff1a\n\n```ruby\n# \u7b2c\u4e00\u5f15\u6570\uff1a Thor \u30af\u30e9\u30b9\u306e\u30b5\u30d6\u30af\u30e9\u30b9\u3067\u3001\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3057\u305f\u3084\u3064\n# \u7b2c\u4e8c\u5f15\u6570\uff1a \u914d\u5217\u3067\u3001\u30b3\u30de\u30f3\u30c9\u306b\u5b9f\u969b\u6e21\u3059\u5f15\u6570\u3002\u30aa\u30d7\u30b7\u30e7\u30f3\u7cfb\u9664\u304f\n# \u7b2c\u4e09\u5f15\u6570\uff1a \u30aa\u30d7\u30b7\u30e7\u30f3\u3092Hash\u3067\u3002\u89aa\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4e38\u3063\u3068\u5f15\u304d\u7d99\u3050\u306a\u3089\u7701\u7565\u53ef\u80fd\u3002\u305d\u308c\u4ee5\u5916\u5fae\u5999\u306b\u52a0\u5de5\u3059\u308b\u306e\u306a\u3089\u9069\u5b9c `Hash#merge` \u3068\u304b\u4f7f\u3046\ninvoke SomeSub, [:do_hoge], options.merge(:bar => foobar)\n```\n\n### \u5168\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3067\u306e\u5171\u901a\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6307\u5b9a\uff0b\u5171\u901a\u51e6\u7406\u306e\u66f8\u304d\u65b9\n\n* \u3084\u3084Hacky\u3060\u3051\u3069\u4ee5\u4e0b\u306e\u8981\u9818\u3067 `invoke_command` \u3092\u4e0a\u66f8\u3051\u3070\u884c\u3051\u308b\n* \u30b3\u30de\u30f3\u30c9\u3067\u306a\u3044\u30d1\u30d6\u30ea\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u306e\u518d\u5b9a\u7fa9\u306a\u306e\u3067\u3001 `no_commands` \u3067\u56f2\u307e\u306a\u3044\u3068\u8b66\u544a\u304c\u51fa\u308b\n\n```ruby\nmodule BarCLI\n  class Cli < Thor\n    # verbose\u3092\u5171\u901a\u306b\n    class_option :verbose, type: :boolean, aliases: \"-V\", default: false\n\n    subcommand('hoge', Hoge)\n    subcommand('fuga', Fuga)\n    #....\n\n    no_commands do\n      def invoke_command(command, *args)\n        # \u30e2\u30b8\u30e5\u30fc\u30eb\u30e1\u30bd\u30c3\u30c9\u306b\u306a\u3063\u3066\u3044\u308b\u30ed\u30ac\u30fc\u306e\u30ec\u30d9\u30eb\u3092option\u3067\u8a2d\u5b9a\n        BarCLI.logger.level = options[:verbose] ? Logger::DEBUG : Logger::INFO\n        super # \u5fc5\u305a\u547c\u3076\u3093\u3060\u3088\n      end\n    end\n  end\nend\n# \u3042\u3068\u306f\u30b5\u30d6\u30b3\u30de\u30f3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\n```\n", "tags": ["Ruby", "thor0.19.1"]}