{"context": " More than 1 year has passed since last update.\n\n\u30ab\u30fc\u30cd\u30eb\u5bc6\u5ea6\u63a8\u5b9a(Kernel Density Estimation: KDE)\u3068\u306f\nWikipedia\u3042\u305f\u308a\u3054\u53c2\u8003\u9858\u3044\u307e\u3059\u3002\n\u72b6\u6cc1\u306b\u3088\u3063\u3066\u306f\uff08\u30c7\u30fc\u30bf\u6570\u304c\u591a\u3044\u3001\u6ed1\u3089\u304b\u306a\u5206\u5e03\u95a2\u6570\u306b\u5f93\u3063\u3066\u3044\u308b\u3001etc.\uff09\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3088\u308a\u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u628a\u63e1\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n\u9069\u5f53\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6b63\u898f\u5206\u5e03\u3092\u91cd\u306d\u3042\u308f\u305b\u305f\u53cc\u5cf0\u6027\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30925\u500b\u307b\u3069\u4f5c\u308a\u307e\u3059\u3002\nimport numpy as np\nfrom scipy.stats import gaussian_kde\nimport matplotlib.pyplot as plt\n\nN = 5\n\nmeans = np.random.randn(N,2) * 10 + np.array([100, 200])\nstdev = np.random.randn(N,2) * 10 + 30\ncount = np.int64(np.int64(np.random.randn(N,2) * 10000 + 50000))\n\na = [\n    np.hstack([\n        np.random.randn(count[i,j]) * stdev[i,j] + means[i,j]\n        for j in range(2)])\n    for i in range(N)]\n\n\n\u30c7\u30fc\u30bf\u304b\u3089\u5206\u5e03\u3092\u63a8\u5b9a\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u3002\n\u3068\u3093\u3067\u3082\u306a\u3044\u5916\u308c\u5024\u304c\u3042\u308b\u3068\u9762\u5012\u306a\u306e\u3067\u30010.1%\u304b\u308999.9%\u307e\u3067\u306e\u767e\u5206\u4f4d\u70b9\u3067\u30c7\u30fc\u30bf\u3092\u5207\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\uff08\u4f59\u8ac7\u3067\u3059\u304cnumpy\u3067\u306fpercentile(array, x)\u30670..100\u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u306a\u306e\u306b\u3001pandas\u3067\u306fSeries.quantile(x)\u30670..1\u3067\u6307\u5b9a\u3067\u3059\u3002\u3084\u3084\u3053\u3057\u3044\u3002\uff09\n\u7d9a\u3044\u3066scipy.stats.gaussian_kde()\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u305b\u3070\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30ab\u30fc\u30cd\u30eb\u3067\u63a8\u5b9a\u3055\u308c\u305f\u5bc6\u5ea6\u95a2\u6570\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001numpy.linspace\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u30b5\u30af\u30c3\u3068\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u307e\u3059\u3002\nlimmin = min(np.percentile(x, 0.1) for x in a)\nlimmax = max(np.percentile(x, 99.9) for x in a)\nls = np.linspace(limmin, limmax, 100)\n\nfor n in range(N):\n    x = a[n]\n    x = x[(x > limmin)&(x < limmax)]\n    kde = gaussian_kde(x)\n    plt.plot(ls, kde(ls), label='data %d' % n)\n\nplt.xlim([limmin, limmax])\nplt.legend()\nplt.title('data distributions')\nplt.show()\n\n\nkde\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306eresample()\u30e1\u30bd\u30c3\u30c9\u3068\u304b\u4f7f\u3048\u3070\u3001\u6e2c\u5b9a\u30c7\u30fc\u30bf\u306b\u8fd1\u3044\u5206\u5e03\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30c7\u30fc\u30bf\u751f\u6210\u3068\u304b\u6357\u308a\u307e\u3059\u3002\u8a73\u3057\u304f\u306f\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3002\n# \u30ab\u30fc\u30cd\u30eb\u5bc6\u5ea6\u63a8\u5b9a(Kernel Density Estimation: KDE)\u3068\u306f\n[Wikipedia](http://ja.wikipedia.org/wiki/%E3%82%AB%E3%83%BC%E3%83%8D%E3%83%AB%E5%AF%86%E5%BA%A6%E6%8E%A8%E5%AE%9A)\u3042\u305f\u308a\u3054\u53c2\u8003\u9858\u3044\u307e\u3059\u3002\n\u72b6\u6cc1\u306b\u3088\u3063\u3066\u306f\uff08\u30c7\u30fc\u30bf\u6570\u304c\u591a\u3044\u3001\u6ed1\u3089\u304b\u306a\u5206\u5e03\u95a2\u6570\u306b\u5f93\u3063\u3066\u3044\u308b\u3001etc.\uff09\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3088\u308a\u30c7\u30fc\u30bf\u306e\u6982\u8981\u3092\u628a\u63e1\u3059\u308b\u306e\u306b\u5f79\u7acb\u3061\u307e\u3059\u3002\n\n# \u9069\u5f53\u306a\u30c7\u30fc\u30bf\u3092\u4f5c\u308b\n\n\u307e\u305a\u306f\u5fc5\u8981\u306a\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u8aad\u307f\u8fbc\u307f\u3001\u6b63\u898f\u5206\u5e03\u3092\u91cd\u306d\u3042\u308f\u305b\u305f\u53cc\u5cf0\u6027\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u30925\u500b\u307b\u3069\u4f5c\u308a\u307e\u3059\u3002\n\n```py\nimport numpy as np\nfrom scipy.stats import gaussian_kde\nimport matplotlib.pyplot as plt\n\nN = 5\n\nmeans = np.random.randn(N,2) * 10 + np.array([100, 200])\nstdev = np.random.randn(N,2) * 10 + 30\ncount = np.int64(np.int64(np.random.randn(N,2) * 10000 + 50000))\n\na = [\n    np.hstack([\n        np.random.randn(count[i,j]) * stdev[i,j] + means[i,j]\n        for j in range(2)])\n    for i in range(N)]\n```\n\n# \u30c7\u30fc\u30bf\u304b\u3089\u5206\u5e03\u3092\u63a8\u5b9a\u3057\u3066\u30b0\u30e9\u30d5\u3092\u66f8\u304f\u3002\n\n\u3068\u3093\u3067\u3082\u306a\u3044\u5916\u308c\u5024\u304c\u3042\u308b\u3068\u9762\u5012\u306a\u306e\u3067\u30010.1%\u304b\u308999.9%\u307e\u3067\u306e\u767e\u5206\u4f4d\u70b9\u3067\u30c7\u30fc\u30bf\u3092\u5207\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\uff08\u4f59\u8ac7\u3067\u3059\u304cnumpy\u3067\u306f`percentile(array, x)`\u30670..100\u306e\u7bc4\u56f2\u3067\u6307\u5b9a\u306a\u306e\u306b\u3001pandas\u3067\u306f`Series.quantile(x)`\u30670..1\u3067\u6307\u5b9a\u3067\u3059\u3002\u3084\u3084\u3053\u3057\u3044\u3002\uff09\n\n\u7d9a\u3044\u3066`scipy.stats.gaussian_kde()`\u306b\u30c7\u30fc\u30bf\u3092\u6e21\u305b\u3070\u3001\u30ac\u30a6\u30b7\u30a2\u30f3\u30ab\u30fc\u30cd\u30eb\u3067\u63a8\u5b9a\u3055\u308c\u305f\u5bc6\u5ea6\u95a2\u6570\u3092\u8fd4\u3057\u3066\u304f\u308c\u308b\u306e\u3067\u3001`numpy.linspace`\u3068\u7d44\u307f\u5408\u308f\u305b\u308c\u3070\u30b5\u30af\u30c3\u3068\u30d7\u30ed\u30c3\u30c8\u3067\u304d\u307e\u3059\u3002\n\n```py\nlimmin = min(np.percentile(x, 0.1) for x in a)\nlimmax = max(np.percentile(x, 99.9) for x in a)\nls = np.linspace(limmin, limmax, 100)\n\nfor n in range(N):\n    x = a[n]\n    x = x[(x > limmin)&(x < limmax)]\n    kde = gaussian_kde(x)\n    plt.plot(ls, kde(ls), label='data %d' % n)\n\nplt.xlim([limmin, limmax])\nplt.legend()\nplt.title('data distributions')\nplt.show()\n```\n\n![kde.png](https://qiita-image-store.s3.amazonaws.com/0/54842/93f3c3cd-9bf5-be41-50ae-09f42c47ae00.png)\n\nkde\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`resample()`\u30e1\u30bd\u30c3\u30c9\u3068\u304b\u4f7f\u3048\u3070\u3001\u6e2c\u5b9a\u30c7\u30fc\u30bf\u306b\u8fd1\u3044\u5206\u5e03\u306e\u30b7\u30df\u30e5\u30ec\u30fc\u30b7\u30e7\u30f3\u7528\u306e\u30c7\u30fc\u30bf\u751f\u6210\u3068\u304b\u6357\u308a\u307e\u3059\u3002\u8a73\u3057\u304f\u306f[\u516c\u5f0f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8](https://docs.scipy.org/doc/scipy-0.15.1/reference/generated/scipy.stats.gaussian_kde.html)\u3067\u3002\n", "tags": ["Python", "scipy", "matplotlib", "numpy"]}