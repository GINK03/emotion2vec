{"context": " More than 1 year has passed since last update.\n\n\u52d5\u4f5c\u74b0\u5883\n\nNode.js 0.10.36\nExpress 4.12.3\nPassport 0.2.1\nSocket.io 1.3.5\nOSX 10.10.2\n\n\u3067\u78ba\u8a8d\u3057\u305f\u3002\n\n\u4e8b\u524d\u6e96\u5099\nTwitterApps\u3067\u3001\u8a8d\u8a3c\u306b\u4f7f\u7528\u3059\u308bURL\u3092\u767b\u9332\u3059\u308b\u3002\u6ce8\u610f\u4e8b\u9805\u3068\u3057\u3066\n* Setting> Callback URL\u306e\u5165\u529b\n* Setting> \u2714 Allow this application to be used to Sign in with Twitter\n\u4e0a\u8a18\u3092\u5fd8\u308c\u308b\u3068PIN\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3002\n\n\u3084\u308b\u3053\u3068\n\nPassport\u3067twitterOauth\u3059\u308b\nPassport\u30bb\u30c3\u30b7\u30e7\u30f3\u3092Socket.io\u306b\u6e21\u3059\n\u30d6\u30e9\u30a6\u30b6\u306bPassport\u30bb\u30c3\u30b7\u30e7\u30f3\u3092emit\u3059\u308b\uff08handshake\u306e\u78ba\u8a8d\uff09\n\u4e0a\u8a18\u3092\u306a\u308b\u3079\u304f\u5c11\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6c7a\u3057\u305f\u3002\n\npackage.json\n{\n  \"dependencies\": {\n    \"cookie-parser\": \"^1.3.4\",\n    \"express\": \"^4.12.3\",\n    \"express-session\": \"^1.10.4\",\n    \"passport\": \"^0.2.1\",\n    \"passport-twitter\": \"^1.0.3\",\n    \"socket.io\": \"^1.3.5\"\n  }\n}\n\n\npackage.json\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\n$ npm install cookie-parser express express-session passport passport-twitter socket.io\n\n\u3068\u3057\u307e\u3059\u3002\n\n`git clone`\u3057\u3066`cd`\u3057\u3066`npm start`\u3059\u308b\u3060\u3051\u3067[\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3057\u305f][2]\u306e\u3067\u3001\u5fd9\u3057\u3044\u4eba\u3084CoffeeScript\u30b9\u30ad\u30fc\u306e\u4eba\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u6b32\u3057\u3044\u3002\u305d\u3061\u3089\u306e\u307b\u3046\u304c\u898b\u6613\u3044\n\n$ node app.js\n\n\napp.js\n// Generated by CoffeeScript 1.9.1\nvar TwitterStrategy, app, base, cookie, express, expressSession, expressSessionStore, http, io, parser, passport, passportConfig, server, socketio;\n\nif ((base = process.env).PORT == null) {\n  base.PORT = 59798;\n}\n\n// dependencies\n\nexpress = require('express');\nexpressSession = require('express-session');\nexpressSessionStore = new expressSession.MemoryStore;\n\npassport = require('passport');\npassportConfig = {\n  twitter: {\n    consumerKey: 'https://apps.twitter.com/\u3067\u53d6\u5f97\u3059\u308b',\n    consumerSecret: 'https://apps.twitter.com/\u3067\u53d6\u5f97\u3059\u308b',\n    callbackURL: \"http://localhost:\" + process.env.PORT + \"/callback\"\n  }\n};\nTwitterStrategy = require('passport-twitter').Strategy;\n\nhttp = require('http');\nsocketio = require('socket.io');\ncookie = require('cookie-parser/node_modules/cookie');\nparser = require('cookie-parser');\n\n// passport setup\n\npassport.serializeUser(function(user, done) {\n  return done(null, user);\n});\npassport.deserializeUser(function(obj, done) {\n  return done(null, obj);\n});\npassport.use(new TwitterStrategy(passportConfig.twitter, function(token, tokenSecret, profile, done) {\n  return process.nextTick(function() {\n    return done(null, profile);\n  });\n}));\n\n// express setup\n\napp = express();\napp.use(expressSession({\n  store: expressSessionStore,\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true\n}));\n\napp.use(passport.initialize());\napp.use(passport.session());\napp.get('/', function(req, res) {\n  var html, ref;\n  html = \"<script src=\\\"/socket.io/socket.io.js\\\"></script>\\n<script>io.connect().on('authorized',function(session){document.querySelector('pre').innerHTML=session})</script>\\n<h1>Passport for Socket.io1.3</h1>\\n<pre></pre>\";\n  if (((ref = req.session.passport) != null ? ref.user : void 0) == null) {\n    html += '<a href=\"/auth\">twitterOauth</a>';\n  }\n  return res.end(html);\n});\n\napp.get('/auth', passport.authenticate('twitter'));\napp.get('/callback', passport.authenticate('twitter', {\n  successRedirect: '/',\n  failureRedirect: '/failure'\n}));\napp.get('/failure', function(req, res) {\n  return res.end('\u3060\u3081\u3067\u3057\u305f');\n});\n\n// socket.io and http-server setup\n\nserver = http.Server(app);\nserver.listen(process.env.PORT);\nio = socketio(server);\nio.use(function(client, next) {\n  var cookies, sid, signedCookies;\n  signedCookies = cookie.parse(client.request.headers.cookie);\n  cookies = parser.signedCookies(signedCookies, 'keyboard cat');\n  sid = cookies['connect.sid'];\n  return expressSessionStore.get(sid, function(error, session) {\n    if (error != null) {\n      return next(error);\n    }\n    if (session.passport.user == null) {\n      return next('Guest');\n    }\n    client.session = session;\n    return next();\n  });\n});\nio.on('connect', function(client) {\n  return client.emit('authorized', JSON.stringify(client.session, null, 2));\n});\n\n\npassportConfig.twitter.consumerKey\u3068passportConfig.twitter.consumerSecret\u306f\u3001\u304a\u624b\u6301\u3061\u306e\u6587\u5b57\u5217\u306b\u7f6e\u304d\u63db\u3048\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002\uff08\u30ed\u30fc\u30ab\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u3060\u3051\u306a\u3089\u305d\u306e\u307e\u307e\u3067\u3082\u52d5\u304f\uff09\n\n/ \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\uff08 http://localhost:59798 \uff09\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u306e\u53ef\u5426\u3092\u8868\u793a\u3059\u308b\u3002\n/auth \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001twitterOauth\u3092\u884c\u3046\u3002\n/callback\u3067Passport\u304c\u6210\u5426\u3092\u5224\u65ad\u3057\u3001\u6210\u529f\u6642\u306fTwitterStrategy\u306e\u7b2c\u4e8c\u5f15\u6570\u3092\u7d4c\u7531\u3057\u3066\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u66f8\u304d\u8fbc\u3080\n\u6210\u529f\u306a\u3089 / \u306b\u623b\u308a\u3001socket.io\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5185\u5bb9\u3092<pre>\u5185\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3002\n\u5931\u6557\u306a\u3089 /failure\u306b\u98db\u3073\u3001\u300c\u3060\u3081\u3067\u3057\u305f\u300d\u3068\u306a\u308b\n\n\u4ee5\u4e0a\u3067\u3059\u3002\u3001\u697d\u3057\u3044\u6cbc\u30e9\u30a4\u30d5\u3092\n\n\u53c2\u8003\n\nSocket.IO \u3068 Express \u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5171\u6709 - Block Rockin\u2019 Codes - Jxck\nUser Authentication with Passport and Express 4 - Michael Herman\nNode.js + Express + passport-twitter\u3067\u8a8d\u8a3cWeb\u30a2\u30d7\u30ea\u3092\u3064\u304f\u308b - itagakishintaro\nNode.js + Express + passport \u3067Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u8aad\u307f\u8fbc\u3080 - sckm\nexpress4\u3067socket.io 1.0x\u3092\u4f7f\u3063\u3066\u307f\u308b - daikon_buu\n\n## \u52d5\u4f5c\u74b0\u5883\n* Node.js 0.10.36\n* Express 4.12.3\n* Passport 0.2.1\n* Socket.io 1.3.5\n* OSX 10.10.2\n\n\u3067\u78ba\u8a8d\u3057\u305f\u3002\n\n## \u4e8b\u524d\u6e96\u5099\n[TwitterApps][1]\u3067\u3001\u8a8d\u8a3c\u306b\u4f7f\u7528\u3059\u308bURL\u3092\u767b\u9332\u3059\u308b\u3002\u6ce8\u610f\u4e8b\u9805\u3068\u3057\u3066\n* Setting> Callback URL\u306e\u5165\u529b\n* Setting> \u2714 Allow this application to be used to Sign in with Twitter\n\u4e0a\u8a18\u3092\u5fd8\u308c\u308b\u3068PIN\u306e\u5165\u529b\u3092\u6c42\u3081\u3089\u308c\u308b\u3002\n\n# \u3084\u308b\u3053\u3068\n1. Passport\u3067twitterOauth\u3059\u308b\n2. Passport\u30bb\u30c3\u30b7\u30e7\u30f3\u3092Socket.io\u306b\u6e21\u3059\n3. \u30d6\u30e9\u30a6\u30b6\u306bPassport\u30bb\u30c3\u30b7\u30e7\u30f3\u3092emit\u3059\u308b\uff08handshake\u306e\u78ba\u8a8d\uff09\n4. \u4e0a\u8a18\u3092\u306a\u308b\u3079\u304f\u5c11\u306a\u3044\u30d1\u30c3\u30b1\u30fc\u30b8\u3067\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u4ee5\u4e0b\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u89e3\u6c7a\u3057\u305f\u3002\n\n```json:package.json\n{\n  \"dependencies\": {\n    \"cookie-parser\": \"^1.3.4\",\n    \"express\": \"^4.12.3\",\n    \"express-session\": \"^1.10.4\",\n    \"passport\": \"^0.2.1\",\n    \"passport-twitter\": \"^1.0.3\",\n    \"socket.io\": \"^1.3.5\"\n  }\n}\n```\n\npackage.json\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u306f\n\n```bash\n$ npm install cookie-parser express express-session passport passport-twitter socket.io\n```\n\n\u3068\u3057\u307e\u3059\u3002\n\n<del>\n`git clone`\u3057\u3066`cd`\u3057\u3066`npm start`\u3059\u308b\u3060\u3051\u3067[\u52d5\u304f\u30b5\u30f3\u30d7\u30eb\u3092\u7528\u610f\u3057\u305f][2]\u306e\u3067\u3001\u5fd9\u3057\u3044\u4eba\u3084CoffeeScript\u30b9\u30ad\u30fc\u306e\u4eba\u306f\u305d\u3061\u3089\u3092\u53c2\u7167\u3057\u3066\u6b32\u3057\u3044\u3002\u305d\u3061\u3089\u306e\u307b\u3046\u304c\u898b\u6613\u3044\n</del>\n\n```bash\n$ node app.js\n```\n\n```js:app.js\n// Generated by CoffeeScript 1.9.1\nvar TwitterStrategy, app, base, cookie, express, expressSession, expressSessionStore, http, io, parser, passport, passportConfig, server, socketio;\n\nif ((base = process.env).PORT == null) {\n  base.PORT = 59798;\n}\n\n// dependencies\n\nexpress = require('express');\nexpressSession = require('express-session');\nexpressSessionStore = new expressSession.MemoryStore;\n\npassport = require('passport');\npassportConfig = {\n  twitter: {\n    consumerKey: 'https://apps.twitter.com/\u3067\u53d6\u5f97\u3059\u308b',\n    consumerSecret: 'https://apps.twitter.com/\u3067\u53d6\u5f97\u3059\u308b',\n    callbackURL: \"http://localhost:\" + process.env.PORT + \"/callback\"\n  }\n};\nTwitterStrategy = require('passport-twitter').Strategy;\n\nhttp = require('http');\nsocketio = require('socket.io');\ncookie = require('cookie-parser/node_modules/cookie');\nparser = require('cookie-parser');\n\n// passport setup\n\npassport.serializeUser(function(user, done) {\n  return done(null, user);\n});\npassport.deserializeUser(function(obj, done) {\n  return done(null, obj);\n});\npassport.use(new TwitterStrategy(passportConfig.twitter, function(token, tokenSecret, profile, done) {\n  return process.nextTick(function() {\n    return done(null, profile);\n  });\n}));\n\n// express setup\n\napp = express();\napp.use(expressSession({\n  store: expressSessionStore,\n  secret: 'keyboard cat',\n  resave: true,\n  saveUninitialized: true\n}));\n\napp.use(passport.initialize());\napp.use(passport.session());\napp.get('/', function(req, res) {\n  var html, ref;\n  html = \"<script src=\\\"/socket.io/socket.io.js\\\"></script>\\n<script>io.connect().on('authorized',function(session){document.querySelector('pre').innerHTML=session})</script>\\n<h1>Passport for Socket.io1.3</h1>\\n<pre></pre>\";\n  if (((ref = req.session.passport) != null ? ref.user : void 0) == null) {\n    html += '<a href=\"/auth\">twitterOauth</a>';\n  }\n  return res.end(html);\n});\n\napp.get('/auth', passport.authenticate('twitter'));\napp.get('/callback', passport.authenticate('twitter', {\n  successRedirect: '/',\n  failureRedirect: '/failure'\n}));\napp.get('/failure', function(req, res) {\n  return res.end('\u3060\u3081\u3067\u3057\u305f');\n});\n\n// socket.io and http-server setup\n\nserver = http.Server(app);\nserver.listen(process.env.PORT);\nio = socketio(server);\nio.use(function(client, next) {\n  var cookies, sid, signedCookies;\n  signedCookies = cookie.parse(client.request.headers.cookie);\n  cookies = parser.signedCookies(signedCookies, 'keyboard cat');\n  sid = cookies['connect.sid'];\n  return expressSessionStore.get(sid, function(error, session) {\n    if (error != null) {\n      return next(error);\n    }\n    if (session.passport.user == null) {\n      return next('Guest');\n    }\n    client.session = session;\n    return next();\n  });\n});\nio.on('connect', function(client) {\n  return client.emit('authorized', JSON.stringify(client.session, null, 2));\n});\n```\n\n`passportConfig.twitter.consumerKey`\u3068`passportConfig.twitter.consumerSecret`\u306f\u3001\u304a\u624b\u6301\u3061\u306e\u6587\u5b57\u5217\u306b\u7f6e\u304d\u63db\u3048\u3066\u5b9f\u884c\u3057\u3066\u304f\u3060\u3055\u3044\u3002<del>\uff08\u30ed\u30fc\u30ab\u30eb\u3067\u78ba\u8a8d\u3059\u308b\u3060\u3051\u306a\u3089\u305d\u306e\u307e\u307e\u3067\u3082\u52d5\u304f\uff09</del>\n\n* / \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\uff08 http://localhost:59798 \uff09\u3068\u3001\u30ed\u30b0\u30a4\u30f3\u306e\u53ef\u5426\u3092\u8868\u793a\u3059\u308b\u3002\n* /auth \u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3001twitterOauth\u3092\u884c\u3046\u3002\n* /callback\u3067Passport\u304c\u6210\u5426\u3092\u5224\u65ad\u3057\u3001\u6210\u529f\u6642\u306fTwitterStrategy\u306e\u7b2c\u4e8c\u5f15\u6570\u3092\u7d4c\u7531\u3057\u3066\u3001\u30bb\u30c3\u30b7\u30e7\u30f3\u306b\u66f8\u304d\u8fbc\u3080\n* \u6210\u529f\u306a\u3089 / \u306b\u623b\u308a\u3001socket.io\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u30bb\u30c3\u30b7\u30e7\u30f3\u3092\u53d7\u3051\u53d6\u308a\u3001\u305d\u306e\u5185\u5bb9\u3092&lt;pre&gt;\u5185\u306b\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3059\u308b\u3002\n* \u5931\u6557\u306a\u3089 /failure\u306b\u98db\u3073\u3001\u300c\u3060\u3081\u3067\u3057\u305f\u300d\u3068\u306a\u308b\n\n\u4ee5\u4e0a\u3067\u3059\u3002<del>\u3001\u697d\u3057\u3044\u6cbc\u30e9\u30a4\u30d5\u3092</del>\n\n# \u53c2\u8003\n* [Socket.IO \u3068 Express \u3067\u30bb\u30c3\u30b7\u30e7\u30f3\u306e\u5171\u6709 - Block Rockin\u2019 Codes - Jxck][7]\n* [User Authentication with Passport and Express 4 - Michael Herman][6]\n* [Node.js + Express + passport-twitter\u3067\u8a8d\u8a3cWeb\u30a2\u30d7\u30ea\u3092\u3064\u304f\u308b - itagakishintaro][3]\n* [Node.js + Express + passport \u3067Twitter\u306e\u30bf\u30a4\u30e0\u30e9\u30a4\u30f3\u3092\u8aad\u307f\u8fbc\u3080 - sckm][4]\n* [express4\u3067socket.io 1.0x\u3092\u4f7f\u3063\u3066\u307f\u308b - daikon_buu][5]\n\n[1]: https://apps.twitter.com/\n[2]: https://github.com/59naga/socket.io-passport-example\n[3]: http://qiita.com/itagakishintaro/items/e5a0481b51e6a17b304c\n[4]: http://qiita.com/sckm/items/e6a7fd669e2367bc441f\n[5]: http://qiita.com/daikon_buu/items/7d506baec9e5a17cba5d\n[6]: http://mherman.org/blog/2015/01/31/local-authentication-with-passport-and-express-4/#.VQ-pfFWsUgU\n[7]: http://jxck.hatenablog.com/entry/20110809/1312847290\n", "tags": ["Node.js0.10.36", "Passport0.2.1", "Passport-twitter1.0.3", "Socket.io1.3.5", "Express4.12.3"]}