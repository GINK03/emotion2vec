{"context": "perl \u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u5834\u5408\u306e\u3001\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u30d1\u30fc\u30b9\u3092\u4fbf\u5229\u5316\u3057\u3066\u304f\u308c\u308bSmart::Options\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n\u624b\u629c\u304d\u30d1\u30bf\u30fc\u30f3\n\np1.pl\nmy $args    = Smart::Options->new->parse;\nwarn Dumper($args);\n\n\n\u7d50\u679c\n$ perl p1.pl --arg1 111 --arg2 222 --arg3 333a --arg3 333b --flag \n$VAR1 = {\n          '_' => [],\n          'arg1' => '111',\n          'arg2' => '222',\n          'arg3' => [\n                      '333a',\n                      '333b'\n                    ],\n          'flag' => 1\n        };\n\n\u3082\u3063\u3068\u7c21\u7565\u5316\u3059\u308b\u3068\n\np2.pl\nmy $args = argv;\nwarn Dumper($args);\n\n\n$ perl p2.pl   --arg1 111 --arg2 222 --arg3 333a --arg3 333b --flag\n$VAR1 = {\n          '_' => [],\n          'arg1' => '111',\n          'arg2' => '222',\n          'arg3' => [\n                      '333a',\n                      '333b'\n                    ],\n          'flag' => 1\n        };\n\n\n\u3061\u3083\u3093\u3068\u3084\u308b\u5834\u5408\n\np3.pl\nmy $args = opts()->parse(@ARGV);\nwarn Dumper($args);\n\nsub opts {\n    return\n    Smart::Options->new->options(\n        arg1    => {describe    => \"arg1 description\", demand  => \"arg1\"}, # demand  => arg_name\n        arg2    => {describe    => \"arg2 description\", alias   => \"a2\"},   # alias   => alias_name\n        arg3    => {describe    => \"arg3 description\", default => \"ARG3\"}, # default => default_value\n        bool    => {describe    => \"boolean option\"  , boolean => \"bool\"}, # boolean => arg_name\n        int     => {describe    => \"Integer option\"  , type    => \"Int\"},  # type    => type_name (Bool, Str, Int, Num, ArrayRef, HashRef, Config)\n    );\n}\n\n\n\u7d50\u679c\n$ perl p3.pl\nUsage: p3.pl\n\nOptions:\n  --a2, --arg2  Arg2 description\n  --arg1        Arg1 description             [required]\n  --arg3        Arg3 description                         [default: ARG3]\n  --bool        Boolean option    [boolean]\n  -h, --help    Show help\n  --int         Integer option\n\n\nMissing required arguments: arg1\nDied at ...\n\n\n$ perl p3.pl  --arg1 111 -a2 222  --bool 100  --int 999\n$VAR1 = {\n          '_' => [\n                   '100'\n                 ],\n          'a2' => '222',\n          'arg1' => '111',\n          'arg3' => 'ARG3',\n          'bool' => 1,\n          'int' => '999'\n        };\n\n$ perl p3.pl  --arg1 111 --arg3 OVERWRITE   --bool 0\n$VAR1 = {\n          '_' => [\n                   '0'\n                 ],\n          'arg1' => '111',\n          'arg3' => 'OVERWRITE',\n          'bool' => 1  # 0\u306b\u306f\u306a\u3089\u306a\u3044\u3088\u3046\u3060\n        };\n\n$ perl p3.pl --arg1 111  --int string\nValue 'string' invalid for option int(Int)\n\n\nperl \u3067\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u30c4\u30fc\u30eb\u3092\u4f5c\u308b\u5834\u5408\u306e\u3001\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u306e\u30d1\u30fc\u30b9\u3092\u4fbf\u5229\u5316\u3057\u3066\u304f\u308c\u308b[Smart::Options](http://search.cpan.org/~mikihoshi/Smart-Options-0.056/lib/Smart/Options.pm)\u306e\u30e1\u30e2\u3067\u3059\u3002\n\n# \u624b\u629c\u304d\u30d1\u30bf\u30fc\u30f3\n\n```perl:p1.pl\nmy $args    = Smart::Options->new->parse;\nwarn Dumper($args);\n```\n\n\u7d50\u679c\n\n```perl\n$ perl p1.pl --arg1 111 --arg2 222 --arg3 333a --arg3 333b --flag \n$VAR1 = {\n          '_' => [],\n          'arg1' => '111',\n          'arg2' => '222',\n          'arg3' => [\n                      '333a',\n                      '333b'\n                    ],\n          'flag' => 1\n        };\n```\n\n\u3082\u3063\u3068\u7c21\u7565\u5316\u3059\u308b\u3068\n\n```perl:p2.pl\nmy $args = argv;\nwarn Dumper($args);\n```\n\n```perl\n$ perl p2.pl   --arg1 111 --arg2 222 --arg3 333a --arg3 333b --flag\n$VAR1 = {\n          '_' => [],\n          'arg1' => '111',\n          'arg2' => '222',\n          'arg3' => [\n                      '333a',\n                      '333b'\n                    ],\n          'flag' => 1\n        };\n```\n\n# \u3061\u3083\u3093\u3068\u3084\u308b\u5834\u5408\n\n```perl:p3.pl\nmy $args = opts()->parse(@ARGV);\nwarn Dumper($args);\n\nsub opts {\n    return\n    Smart::Options->new->options(\n        arg1    => {describe    => \"arg1 description\", demand  => \"arg1\"}, # demand  => arg_name\n        arg2    => {describe    => \"arg2 description\", alias   => \"a2\"},   # alias   => alias_name\n        arg3    => {describe    => \"arg3 description\", default => \"ARG3\"}, # default => default_value\n        bool    => {describe    => \"boolean option\"  , boolean => \"bool\"}, # boolean => arg_name\n        int     => {describe    => \"Integer option\"  , type    => \"Int\"},  # type    => type_name (Bool, Str, Int, Num, ArrayRef, HashRef, Config)\n    );\n}\n```\n\n\u7d50\u679c\n\n```perl\n$ perl p3.pl\nUsage: p3.pl\n\nOptions:\n  --a2, --arg2  Arg2 description\n  --arg1        Arg1 description             [required]\n  --arg3        Arg3 description                         [default: ARG3]\n  --bool        Boolean option    [boolean]\n  -h, --help    Show help\n  --int         Integer option\n\n\nMissing required arguments: arg1\nDied at ...\n\n\n$ perl p3.pl  --arg1 111 -a2 222  --bool 100  --int 999\n$VAR1 = {\n          '_' => [\n                   '100'\n                 ],\n          'a2' => '222',\n          'arg1' => '111',\n          'arg3' => 'ARG3',\n          'bool' => 1,\n          'int' => '999'\n        };\n\n$ perl p3.pl  --arg1 111 --arg3 OVERWRITE   --bool 0\n$VAR1 = {\n          '_' => [\n                   '0'\n                 ],\n          'arg1' => '111',\n          'arg3' => 'OVERWRITE',\n          'bool' => 1  # 0\u306b\u306f\u306a\u3089\u306a\u3044\u3088\u3046\u3060\n        };\n        \n$ perl p3.pl --arg1 111  --int string\nValue 'string' invalid for option int(Int)\n```\n", "tags": ["Perl", "\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3"]}