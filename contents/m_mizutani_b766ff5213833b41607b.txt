{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\nnodejs\u306fC++\u3067native addon\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u4f5c\u6210\u3057\u305f\u304b\u3063\u305f\u306e\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u305d\u308c\u3092\u5206\u6790\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3057\u305f\u3002\u8981\u4ef6\u3092\u843d\u3068\u3057\u3053\u3080\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\nI/O block\u304c\u767a\u751f\u3059\u308b\u3002\u304b\u306a\u308a\u983b\u7e41\u3067\u591a\u3044\u6642\u306f100k/sec\u4ee5\u4e0a\u3068\u898b\u7a4d\u3082\u308b\u304c\u3001\u4e00\u65b9\u3067\u6570\u79d2\u9593\u4f55\u3082\u8d77\u304d\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u3082\u3042\u308a\u3048\u308b\n\u5206\u6790\u81ea\u4f53\u306b\u3082\u305d\u308c\u306a\u308a\u306b\u8ca0\u8377\u304c\u304b\u304b\u308b\u306e\u3067\u5206\u6790\u7d50\u679c\u3092\u5f97\u308b\u307e\u3067\u306fC++\u3067\u8a08\u7b97\u3057\u305f\u3044\nI/O\u3067\u8aad\u307f\u8fbc\u3080\u305f\u3073\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u308f\u3051\u3067\u306f\u3044\u3002\u304a\u304a\u3088\u305d1 call/1000\u5165\u529b\u3050\u3089\u3044\n\u5206\u6790\u7d50\u679c\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067JavaScript\u306e\u4e16\u754c\u306b\u623b\u3059\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001uv_queue_work\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3068\u3044\u3046\u65b9\u5f0f\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n\u6226\u7565\n\u3053\u306e\u6a5f\u80fd\u8981\u4ef6\u3092\u8003\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u6226\u7565\u304c\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002\n\nC++\u3067\u4f5c\u6210\u3057\u305f\u5225\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u3066\u30d1\u30a4\u30d7\u51e6\u7406\u3067\u968f\u6642\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b\nI/O\u306e\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092JavaScript\u5074\u3067\u76e3\u8996\u3057\u3066\u8aad\u307f\u8fbc\u307f\u53ef\u80fd\u306b\u306a\u3063\u305f\u3089native module\u306b\u51e6\u7406\u3092\u623b\u3059\nnative module\u5185\u90e8\u3067block\u3057\u3066\u5fc5\u8981\u306a\u3068\u304d\u3060\u3051JavaScript\u5074\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\n\n\u3069\u308c\u3082\u5b9f\u88c5\u3068\u3057\u3066\u306f\u53ef\u80fd\u3067\u3059\u304c\u3001\u4eca\u56de\u306f3\u3092\u9078\u3073\u307e\u3057\u305f\u30021, 2\u306e\u4e0d\u63a1\u7528\u7406\u7531\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\nNode\u306eaddon\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u5b9f\u884c\u53ef\u80fd\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f5c\u6210\u65b9\u6cd5\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\nI/O\u304c100k/sec\u3068\u304b\u767a\u751f\u3059\u308b\u306e\u3067\u3001\u305d\u306e\u305f\u3073\u306b\u3044\u3061\u3044\u3061JavaScript\u5074\u3068native module\u5074\u3092\u884c\u304d\u6765\u3057\u305f\u304f\u306a\u304b\u3063\u305f\n\n\n\u5b9f\u88c5\u65b9\u6cd5\nNode\u3067\u306fnative module\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b uv_queue_work \u3068\u3044\u3046\u975e\u540c\u671f\u51e6\u7406\u7528\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3046\u3068\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f uv_queue_work \u306f\u975e\u540c\u671f\u51e6\u7406\u306e\u95a2\u6570\u3068\u51e6\u7406\u7d42\u4e86\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306e2\u3064\u3057\u304b\u767b\u9332\u3067\u304d\u305a\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u95a2\u6570\u304b\u3089JavaScript\u4e16\u754c\u306b\u5e72\u6e09\u3057\u3088\u3046\u3068\u3059\u308b\uff08\u4f8b\u3048\u3070\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\uff09\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\u306a\u306e\u3067\u3001\u65b9\u91dd\u3068\u3057\u3066\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u6bce\u56de\u975e\u540c\u671f\u51e6\u7406\u3092\u629c\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\n\nuv_queue_work\u3092\u975e\u540c\u671f\u51e6\u7406\u95a2\u6570 run_work\u3001\u7d42\u4e86\u5f8c\u51e6\u7406\u95a2\u6570 after_work \u3092\u6307\u5b9a\u3057\u3066\u547c\u3073\u51fa\u3059\n\nrun_work\u5185\u3067I/O\u5f85\u3061\u306e\u51e6\u7406\u304a\u3088\u3073\u5206\u6790\u3092\u3059\u308b\n\u30a4\u30d9\u30f3\u30c8\u3068\u3057\u3066\u4e0a\u3052\u308b\u3079\u304d\u7d50\u679c\u304c\u3067\u305f\u3089 run_work \u3092\u629c\u3051\u308b\n\nrun_work\u7d42\u4e86\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308bafter_work\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u3060\u3057\u3001\u305d\u306e\u76f4\u5f8c\u306b\u518d\u5ea6 uv_queue_work \u3092\u547c\u3073\u51fa\u3057\u3066\u975e\u540c\u671f\u51e6\u7406\u306b\u5165\u308b\n3\u306b\u623b\u308b\n\n\u90e8\u5206\u7684\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n  void NodeIoAsync::run_work (uv_work_t *req) {\n    // \u672c\u6765\u306f\u3053\u3053\u3067I/O\u30d6\u30ed\u30c3\u30af\u3084\u5206\u6790\u306e\u51e6\u7406\u3092\u66f8\u304f                                                                                                              \n    NodeIoAsync *sw = static_cast<NodeIoAsync*>(req->data);\n    usleep(100000);\n    sw->c_++;\n  }\n\n  void NodeIoAsync::after_work (uv_work_t *req, int rc) {\n    v8::HandleScope scope;\n\n    NodeIoAsync *sw = static_cast<NodeIoAsync*>(req->data);\n    v8::Local<v8::Value> argv[1];\n    argv[0] = v8::Number::New(sw->c_);                                                                                                                        \n    v8::Local<v8::Function> cb = v8::Local<v8::Function>::New(sw->callback_);\n    cb->Call (v8::Context::GetCurrent()->Global(), 1, argv);\n    cb.Clear();\n\n    // \u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059                                                                                                                                       \n    uv_queue_work(uv_default_loop(), req, run_work, after_work);\n  }\n\n  // \u958b\u59cb                                                                                                                                                     \n  v8::Handle<v8::Value> NodeIoAsync::Start (const v8::Arguments &args) {\n    v8::HandleScope scope;\n    NodeIoAsync * sw = node::ObjectWrap::Unwrap <NodeIoAsync> (args.This ());\n    uv_work_t *req = new uv_work_t;\n    req->data = sw;\n    uv_queue_work(uv_default_loop(), req, run_work, after_work);\n    return scope.Close(v8::Undefined());\n  }\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306fgist\u306b\u8cbc\u3063\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://gist.github.com/m-mizutani/dd39b53eca1992647ba6\n# \u76ee\u7684\n\nnodejs\u306fC++\u3067native addon\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\u4eca\u56de\u4f5c\u6210\u3057\u305f\u304b\u3063\u305f\u306e\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u30d1\u30b1\u30c3\u30c8\u3092\u30ad\u30e3\u30d7\u30c1\u30e3\u3057\u3066\u305d\u308c\u3092\u5206\u6790\u3057\u305f\u7d50\u679c\u3092\u8fd4\u3059\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3057\u305f\u3002\u8981\u4ef6\u3092\u843d\u3068\u3057\u3053\u3080\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n- I/O block\u304c\u767a\u751f\u3059\u308b\u3002\u304b\u306a\u308a\u983b\u7e41\u3067\u591a\u3044\u6642\u306f100k/sec\u4ee5\u4e0a\u3068\u898b\u7a4d\u3082\u308b\u304c\u3001\u4e00\u65b9\u3067\u6570\u79d2\u9593\u4f55\u3082\u8d77\u304d\u306a\u3044\u3068\u3044\u3046\u72b6\u6cc1\u3082\u3042\u308a\u3048\u308b\n- \u5206\u6790\u81ea\u4f53\u306b\u3082\u305d\u308c\u306a\u308a\u306b\u8ca0\u8377\u304c\u304b\u304b\u308b\u306e\u3067\u5206\u6790\u7d50\u679c\u3092\u5f97\u308b\u307e\u3067\u306fC++\u3067\u8a08\u7b97\u3057\u305f\u3044\n- I/O\u3067\u8aad\u307f\u8fbc\u3080\u305f\u3073\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\u308f\u3051\u3067\u306f\u3044\u3002\u304a\u304a\u3088\u305d1 call/1000\u5165\u529b\u3050\u3089\u3044\n- \u5206\u6790\u7d50\u679c\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067JavaScript\u306e\u4e16\u754c\u306b\u623b\u3059\n\n\u7d50\u8ad6\u304b\u3089\u8a00\u3046\u3068\u3001`uv_queue_work`\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3068\u3044\u3046\u65b9\u5f0f\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\n# \u6226\u7565\n\n\u3053\u306e\u6a5f\u80fd\u8981\u4ef6\u3092\u8003\u3048\u308b\u3068\u4ee5\u4e0b\u306e\u69d8\u306a\u6226\u7565\u304c\u601d\u3044\u3064\u304d\u307e\u3057\u305f\u3002\n\n1. C++\u3067\u4f5c\u6210\u3057\u305f\u5225\u30d7\u30ed\u30bb\u30b9\u3092\u8d77\u52d5\u3057\u3066\u30d1\u30a4\u30d7\u51e6\u7406\u3067\u968f\u6642\u7d50\u679c\u3092\u53d7\u3051\u53d6\u308b\n2. I/O\u306e\u30d5\u30a1\u30a4\u30eb\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3092JavaScript\u5074\u3067\u76e3\u8996\u3057\u3066\u8aad\u307f\u8fbc\u307f\u53ef\u80fd\u306b\u306a\u3063\u305f\u3089native module\u306b\u51e6\u7406\u3092\u623b\u3059\n3. native module\u5185\u90e8\u3067block\u3057\u3066\u5fc5\u8981\u306a\u3068\u304d\u3060\u3051JavaScript\u5074\u306b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3059\u308b\n\n\u3069\u308c\u3082\u5b9f\u88c5\u3068\u3057\u3066\u306f\u53ef\u80fd\u3067\u3059\u304c\u3001\u4eca\u56de\u306f3\u3092\u9078\u3073\u307e\u3057\u305f\u30021, 2\u306e\u4e0d\u63a1\u7528\u7406\u7531\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3002\n\n1. Node\u306eaddon\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u5b9f\u884c\u53ef\u80fd\u5f62\u5f0f\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u4f5c\u6210\u65b9\u6cd5\u304c\u898b\u5f53\u305f\u3089\u306a\u304b\u3063\u305f\n2. I/O\u304c100k/sec\u3068\u304b\u767a\u751f\u3059\u308b\u306e\u3067\u3001\u305d\u306e\u305f\u3073\u306b\u3044\u3061\u3044\u3061JavaScript\u5074\u3068native module\u5074\u3092\u884c\u304d\u6765\u3057\u305f\u304f\u306a\u304b\u3063\u305f\n\n# \u5b9f\u88c5\u65b9\u6cd5\n\nNode\u3067\u306fnative module\u3092\u4f5c\u6210\u3059\u308b\u969b\u306b `uv_queue_work` \u3068\u3044\u3046\u975e\u540c\u671f\u51e6\u7406\u7528\u306e\u95a2\u6570\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u3053\u308c\u3092\u4f7f\u3046\u3068\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u51e6\u7406\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059\u304c\u3001\u57fa\u672c\u7684\u306b\u306f `uv_queue_work` \u306f\u975e\u540c\u671f\u51e6\u7406\u306e\u95a2\u6570\u3068\u51e6\u7406\u7d42\u4e86\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306e2\u3064\u3057\u304b\u767b\u9332\u3067\u304d\u305a\u3001\u975e\u540c\u671f\u51e6\u7406\u306e\u95a2\u6570\u304b\u3089JavaScript\u4e16\u754c\u306b\u5e72\u6e09\u3057\u3088\u3046\u3068\u3059\u308b\uff08\u4f8b\u3048\u3070\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\uff09\u3053\u3068\u304c\u3067\u304d\u307e\u305b\u3093\u3002\n\n\u306a\u306e\u3067\u3001\u65b9\u91dd\u3068\u3057\u3066\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u51fa\u3059\u305f\u3081\u306b\u6bce\u56de\u975e\u540c\u671f\u51e6\u7406\u3092\u629c\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n1. \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u767b\u9332\u3059\u308b\n2. `uv_queue_work`\u3092\u975e\u540c\u671f\u51e6\u7406\u95a2\u6570 `run_work`\u3001\u7d42\u4e86\u5f8c\u51e6\u7406\u95a2\u6570 `after_work` \u3092\u6307\u5b9a\u3057\u3066\u547c\u3073\u51fa\u3059\n3. `run_work`\u5185\u3067I/O\u5f85\u3061\u306e\u51e6\u7406\u304a\u3088\u3073\u5206\u6790\u3092\u3059\u308b\n4. \u30a4\u30d9\u30f3\u30c8\u3068\u3057\u3066\u4e0a\u3052\u308b\u3079\u304d\u7d50\u679c\u304c\u3067\u305f\u3089 `run_work` \u3092\u629c\u3051\u308b\n5. `run_work`\u7d42\u4e86\u5f8c\u306b\u547c\u3073\u51fa\u3055\u308c\u308b`after_work`\u3067\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u547c\u3073\u3060\u3057\u3001\u305d\u306e\u76f4\u5f8c\u306b\u518d\u5ea6 `uv_queue_work` \u3092\u547c\u3073\u51fa\u3057\u3066\u975e\u540c\u671f\u51e6\u7406\u306b\u5165\u308b\n6. 3\u306b\u623b\u308b\n\n\u90e8\u5206\u7684\u306a\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```cpp\n  void NodeIoAsync::run_work (uv_work_t *req) {\n    // \u672c\u6765\u306f\u3053\u3053\u3067I/O\u30d6\u30ed\u30c3\u30af\u3084\u5206\u6790\u306e\u51e6\u7406\u3092\u66f8\u304f                                                                                                              \n    NodeIoAsync *sw = static_cast<NodeIoAsync*>(req->data);\n    usleep(100000);\n    sw->c_++;\n  }\n\n  void NodeIoAsync::after_work (uv_work_t *req, int rc) {\n    v8::HandleScope scope;\n\n    NodeIoAsync *sw = static_cast<NodeIoAsync*>(req->data);\n    v8::Local<v8::Value> argv[1];\n    argv[0] = v8::Number::New(sw->c_);                                                                                                                        \n    v8::Local<v8::Function> cb = v8::Local<v8::Function>::New(sw->callback_);\n    cb->Call (v8::Context::GetCurrent()->Global(), 1, argv);\n    cb.Clear();\n\n    // \u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059                                                                                                                                       \n    uv_queue_work(uv_default_loop(), req, run_work, after_work);\n  }\n\n  // \u958b\u59cb                                                                                                                                                     \n  v8::Handle<v8::Value> NodeIoAsync::Start (const v8::Arguments &args) {\n    v8::HandleScope scope;\n    NodeIoAsync * sw = node::ObjectWrap::Unwrap <NodeIoAsync> (args.This ());\n    uv_work_t *req = new uv_work_t;\n    req->data = sw;\n    uv_queue_work(uv_default_loop(), req, run_work, after_work);\n    return scope.Close(v8::Undefined());\n  }\n```\n\n\u30b3\u30fc\u30c9\u5168\u4f53\u306fgist\u306b\u8cbc\u3063\u3066\u3042\u308a\u307e\u3059\u3002\nhttps://gist.github.com/m-mizutani/dd39b53eca1992647ba6\n", "tags": ["nodejs0.10", "C++"]}