{"context": " More than 1 year has passed since last update.\n\nWhat is beacon and iBeacon?\n\u7c21\u5358\u306b\u9593\u9055\u3048\u308b\u3093\u3060\u3051\u3069\u3001beacon\u306f\u30e1\u30a4\u30f3\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3067\u3059\u3002\n\u3000\u3000\u3000Beacon\u3068\u306f\u3001Bluetooth Low Energy\uff08BLE\uff09\u3092\u4f7f\u3063\u3066\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u7279\u5b9a\u3057\u3001\n\u3000\u3000\u3000\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5408\u308f\u305b\u3066\u5fc5\u8981\u306a\u60c5\u5831\u3092\u914d\u4fe1\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\u3002\u3000\n\u3000\u3000\u3000\u30a2\u30c3\u30d7\u30eb\u304c\u300ciBeacon\u300d\u3068\u3044\u3046\u540d\u79f0\u3067iOS 7\u306b\u642d\u8f09\u3057\u305f\u3053\u3068\u304b\u3089\u6ce8\u76ee\u3092\u96c6\u3081\u305f\u6280\u8853\u3067\u3001\n\u3000\u3000\u3000Android 4.3\u4ee5\u964d\u3067\u3082BLE\u3092\u4f7f\u3063\u305f\u540c\u69d8\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u53ef\u80fd\u3060\u3002\n\u3000\u3000\u3000\uff1c\u30bd\u30fc\u30b9\uff1aITmedia\uff1e\n\u4f4d\u7f6e\u60c5\u5831\u95a2\u9023\u306fGPS\u304c\u3042\u308b\u304c\u3001\u7cbe\u5ea6\u304a\u3088\u3073\u5ba4\u5185\u3067\u306fGPS\u306f\u5bfe\u5fdc\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001\nbeacon\u3092\u5229\u7528\u3057\u3001\u4f4d\u7f6e\u60c5\u5831\u3092\u628a\u63e1\u3057\u3001\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3002\nbeacon\u306a\u305c\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001O2O\u30a2\u30d7\u30ea\u306f\u4eca\u5f8c\u306f\u3084\u308a\u3058\u3083\u306a\u3044\u304b\u3068\u306e\u3053\u3068\u3002\n\u3000\u3000\u3000O2O\u3068\u306f\u3001Online to Offline\u306e\u982d\u6587\u5b57\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\u3001\n\u3000\u3000\u3000\u300c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8(\u30aa\u30f3\u30e9\u30a4\u30f3)\u306e\u6d3b\u52d5\u3092\u5b9f\u5e97\u8217(\u30aa\u30d5\u30e9\u30a4\u30f3)\u306b\u6d3b\u304b\u3059\u3053\u3068\u300d\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u3000\u3000\u3000\uff1c\u30bd\u30fc\u30b9\uff1a\u5bcc\u58eb\u901a\uff1e\n\u30af\u30fc\u30dd\u30f3\u306e\u60c5\u5831\u60c5\u5831\u306a\u3069\u30aa\u30f3\u30e9\u30a4\u30f3\u60c5\u5831\u3092\u30aa\u30d5\u30e9\u30a4\u30f3\u306e\u72b6\u6cc1\u306b\u3088\u308a\u3001\u6d3b\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\nbeacon\u3068O2O\u306b\u306f\u76f8\u6027\u304c\u3044\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\n\u305f\u3060\u3057\u3001\u30af\u30fc\u30dd\u30f3\u306a\u3069\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u69d8\u3005\u306a\u5834\u9762\u3067\u5229\u7528\u53ef\u80fd\u3068\u8003\u3048\u308c\u308b\u3002\n\nMake your iphone become a beacon to test\niOS7\u304b\u3089iBeacon\u304c\u6a19\u6e96\u5316\u3055\u308c\u3001CoreLocation\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\niBeacon\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u3002\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u53d6\u5f97\u3057\u3001iPhone(iOS7\u4ee5\u4e0a)\u3067\niBeacon\u30c7\u30d0\u30a4\u30b9\u3068\u3057\u3066\u8a66\u3059\u3053\u3068\u306f\u3067\u304d\u308b\u3002\u3000\n\u2192 iBeacon document\n\u2192 Airlocate sample\n\n\u30b5\u30fc\u30d0\u30fc\u4e8b\u524d\u6e96\u5099\n\n\n\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9mobile backend\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\n\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9mobile backendc\u3067\u306e\u30c7\u30fc\u30bf\u30fc\u30a4\u30f3\u30dd\u30fc\u30c8\n\n\nBeacon\u30c7\u30fc\u30bf\u30fc\uff08\u30c7\u30fc\u30bf\u30fc\u30b9\u30c8\u30a2\uff09\nCoupon\u30c7\u30fc\u30bf\u30fc\uff08\u30d5\u30a1\u30a4\u30eb\u30b9\u30c8\u30a2\uff09\n\n\n\n\n\u30c6\u30b9\u30c8\u74b0\u5883\n\nApple iOS developer program\nXcode installed (v6.0\u4ee5\u4e0a)\niOS device (iPhone, iPad) with Bluetooth ON\n\n\n\u3010O2O\u30a2\u30d7\u30ea\u4f5c\u6210\u624b\u9806\u3011\n\n iBeacon receiver developer\n\nApplication\u3092\u4f5c\u6210\uff08Single view\uff09\nCoreLocation frame work\u3092Linked Framework\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nBackground Capabilities\u3092\u8a2d\u5b9a\uff1a\n\u300cCapabilities\u300d->\u300cBackground modes\u300dON\n->\u300cLocation updates\u300d\u300cUse Bluetooth accessory\u300dChecked!\n\n\n iBeacon\u3092\u691c\u51fa\u3059\u308b\u51e6\u7406\n\niBeacon\u306eregion\u3092\u8a2d\u5b9a\u3059\u308b\u3002iBeacon\u3092\u76e3\u8996\u3059\u308b\u305f\u3081\u306e\u9818\u57df\u3092\u8a2d\u5b9a\u3057\u3001\n-application:didFinishLaunchingWithOptions \u30e1\u30bd\u30c3\u30c9\u306b\u3066UUID, another pair of IDs (major, minor)\u3092\u8a2d\u5b9a\n\n//AppDelegate\n#import <CoreLocation/CoreLocation.h>\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    // Override point for customization after application launch.\n    NSUUID *beaconUUID = [[NSUUID alloc] initWithUUIDString:\n                          @\"*****-******-******\"];\n\n    NSString *regionIdentifier = @\"com.nifty.mbaas\";\n    CLBeaconRegion *beaconRegion = [[CLBeaconRegion alloc]\n                                    initWithProximityUUID:beaconUUID identifier:regionIdentifier];\n\n    self.locationManager = [[CLLocationManager alloc] init];\n    // New iOS 8 request for Always Authorization, required for iBeacons to work!\n    if([self.locationManager respondsToSelector:@selector(requestAlwaysAuthorization)]) {\n        [self.locationManager requestAlwaysAuthorization];\n    }\n    self.locationManager.delegate = self;\n    self.locationManager.pausesLocationUpdatesAutomatically = NO;\n\n    [self.locationManager startMonitoringForRegion:beaconRegion];\n    [self.locationManager startRangingBeaconsInRegion:beaconRegion];\n    [self.locationManager startUpdatingLocation];\n\n    return YES;\n}\n\n\n\nSetup plist entry for LocationAlways\n\nSupporting Files\u30d5\u30a9\u30eb\u30c0\u306bInfo.plist\u3092\u958b\u304d\u3001Informatio Property List\u304b\u3089Add a row.\n\nDefine what happens when the region entered\n\nCLLocationManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u3088\u3046\u306bAppDelegate\u3092\u8a2d\u5b9a\u3059\u308b\n-(void)sendLocalNotificationWithMessage:(NSString*)message {\n    UILocalNotification *notification = [[UILocalNotification alloc] init];\n    notification.alertBody = message;\n    [[UIApplication sharedApplication] scheduleLocalNotification:notification];\n}\n\n-(void)locationManager:(CLLocationManager *)manager didRangeBeacons:\n(NSArray *)beacons inRegion:(CLBeaconRegion *)region {\n    NSString *message = @\"\";\n\n        //Send push message\n        if(beacons.count > 0) {\n            CLBeacon *nearestBeacon = beacons.firstObject;\n\n            if(nearestBeacon.proximity == self.lastProximity ||\n               nearestBeacon.proximity == CLProximityUnknown) {\n                return;\n            }\n            self.lastProximity = nearestBeacon.proximity;\n\n            switch(nearestBeacon.proximity) {\n                case CLProximityFar:\n                    message = @\"You are far away from the beacon\";\n                    break;\n                case CLProximityNear:\n                    message = @\"You are near the beacon\";\n                    break;\n                case CLProximityImmediate:\n                    message = @\"You are in the immediate proximity of the beacon\";\n                    break;\n                case CLProximityUnknown:\n                    return;\n            }\n        } else {\n            message = @\"No beacons are nearby\";\n        }\n        NSLog(@\"%@\", message);\n        [self sendLocalNotificationWithMessage:message];\n}\n\n-(void)locationManager:(CLLocationManager *)manager\n        didEnterRegion:(CLRegion *)region {\n    [manager startRangingBeaconsInRegion:(CLBeaconRegion*)region];\n    [self.locationManager startUpdatingLocation];\n    NSLog(@\"You entered the region.\");\n    [self sendLocalNotificationWithMessage:@\"You entered the region.\"];\n}\n\n-(void)locationManager:(CLLocationManager *)manager\n         didExitRegion:(CLRegion *)region {\n    [manager stopRangingBeaconsInRegion:(CLBeaconRegion*)region];\n    [self.locationManager stopUpdatingLocation];\n    NSLog(@\"You exited the region.\");\n    [self sendLocalNotificationWithMessage:@\"You exited the region.\"];\n}\n\n\n Foreground\u306e\u8868\u793a\nUI\u3067\u306f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3001iBeacon\u306e\u30c7\u30fc\u30bf\u30fc\u3092\u5165\u308c\u3001\u8868\u793a\n - Storyboard\u3067\u30ea\u30b9\u30c8\u4f5c\u6210\uff1aTableView\u3092\u30c9\u30e9\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\n - ViewController\u3067\u306f\n @property IBOutlet UITableView *tableView;\n\n\n View Controller to implement the protocols required, UITableViewDataSource and UITableViewDelegate.\n\n @interface ViewController : UIViewController<UITableViewDataSource, UITableViewDelegate>\n\n\nbeacons\u5909\u6570\u3092\u4f5c\u6210\uff08\u30d3\u30fc\u30b3\u30f3\u306e\u7ba1\u7406\u7528\u5909\u6570\uff09\n\n@property (strong) NSArray *beacons;\n\n\nbeacon\u306f\u691c\u51fa\u3057\u305f\u6642\u306e\u51e6\u7406\u3092\u8ffd\u52a0\n\n//AppDelegate.m didRangeBeacons\u30e1\u30bd\u30c3\u30c9\n\nViewController *viewController = (ViewController*) self.window.rootViewController;\n   //Beacons info show\n   viewController.beacons = beacons;\n   [viewController.tableView reloadData];\n\n\nviewController\u306b\u3042\u308b\u3000-tableView:numberOfRowsInSection: and -tableView:cellForRowAtIndexPath: \u3092\u5b9f\u88c5\u3059\u308b\n\n- (NSInteger) tableView:(UITableView *)tableView\n  numberOfRowsInSection:(NSInteger)section {\n    return self.beacons.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)tableView\n         cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [tableView\n                             dequeueReusableCellWithIdentifier:@\"MyIdentifier\"];\n\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc]\n                initWithStyle:UITableViewCellStyleSubtitle\n                reuseIdentifier:@\"MyIdentifier\"];\n        cell.selectionStyle = UITableViewCellSelectionStyleNone;\n    }\n    //To display beacons list in TableView\n    CLBeacon *beacon = (CLBeacon*)[self.beacons\n                                   objectAtIndex:indexPath.row];\n\n    //Get shop data from mbaas\n    if(self.beacons && self.beacons.count > 0) {\n        NSString *uuid = beacon.proximityUUID.UUIDString;\n        NCMBQuery *query = [NCMBQuery queryWithClassName:@\"Beacon\"];\n        [query whereKey:@\"beacon_uuid\" equalTo:uuid];\n        NSArray *objects = [query findObjects:nil];\n        NCMBObject *object = (NCMBObject*)[objects objectAtIndex:0];\n        NSString *storeName = [object objectForKey:@\"store_title\"];\n        cell.textLabel.text = storeName;\n        cell.detailTextLabel.text = uuid;\n    }\n    return cell;\n}\n\n\n Mobile backend\u30b5\u30fc\u30d0\u30fc\u306eCoupon\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u5b9f\u88c5\n\u4e0a\u8a18\u306eTableView\u3067\u8868\u793a\u3057\u305fbeacon\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\nmobile backend\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308b\u30af\u30fc\u30dd\u30f3\u30c7\u30fc\u30bf\u30fc\u3092\u8868\u793a\u3055\u305b\u308b\nStoryBoard\u3067\u65b0\u898f\u753b\u9762\u4f5c\u6210\u3001TableView\u4f5c\u6210\uff1aCouponTableViewControler\nSegue\u306b\u3088\u308b\u753b\u9762\u9077\u79fb\u5b9f\u88c5\nCouponTableViewControler\u3067\u306fcoupons\u3068\u3044\u3046\u5909\u6570\u3092\u4f7f\u3063\u3066\u3001\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u30af\u30fc\u30dd\u30f3\u30ea\u30b9\u30c8\u30c7\u30fc\u30bf\u30fc\u3092\u5165\u308c\u308b\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {\n    if (self.beacons && self.beacons.count>0) {\n        CLBeacon *beacon = (CLBeacon*)[self.beacons objectAtIndex:indexPath.row]; //Get coupon for first beacon only, need to changed to work with multi ibeacon\n        //CONNECT TO SERVER AND GET COUPON\n        NSString *beacon_uuid = beacon.proximityUUID.UUIDString;\n        NCMBQuery *query = [NCMBQuery queryWithClassName:@\"Beacon\"];\n        [query whereKey:@\"beacon_uuid\" equalTo:beacon_uuid];\n        NSArray *objects = [query findObjects:nil];\n        if (objects && objects.count>0) {\n            for (NCMBObject *object in objects) {\n                self.selectedCoupons = [object objectForKey:@\"coupon_list\"];\n                //ToViewController segue\n                [self performSegueWithIdentifier:@\"toCouponViewController\" sender:self];\n            }\n        }\n    }\n}\n\n\nSegue\u5b9f\u88c5\n// Segue \u3067\u6b21\u306e ViewController \u3078\u79fb\u884c\u3059\u308b\u3068\u304d\u306b\u9078\u629e\u3055\u308c\u305fCell\u306e\u753b\u50cf\u60c5\u5831\u3092\u6e21\u3059\n- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender{\n    // identifier \u304c toViewController \u3067\u3042\u308b\u3053\u3068\u306e\u78ba\u8a8d\n    if ([[segue identifier] isEqualToString:@\"toCouponViewController\"]) {\n        CouponTableViewController *vc = (CouponTableViewController*)[segue destinationViewController];\n        // \u79fb\u884c\u5148\u306e ViewController \u306bcoupons\u3092\u6e21\u3059\n        vc.coupons = self.selectedCoupons;\n    }\n}\n\nCouponTableViewController\n- (NSInteger) tableView:(UITableView *)couponView\nnumberOfRowsInSection:(NSInteger)section {\n    return self.coupons.count;\n}\n\n- (UITableViewCell *)tableView:(UITableView *)couponView\n    cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [couponView\n                             dequeueReusableCellWithIdentifier:@\"MyIdentifier\"];\n\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc]\n                initWithStyle:UITableViewCellStyleSubtitle\n                reuseIdentifier:@\"MyIdentifier\"];\n        cell.selectionStyle = UITableViewCellSelectionStyleNone;\n    }\n\n    //To display coupon image\n    NSString *coupon_name = (NSString *) [self.coupons objectAtIndex:indexPath.row];\n    dispatch_queue_t q_global = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n    dispatch_queue_t q_main = dispatch_get_main_queue();\n    cell.imageView.image = nil;\n\n    dispatch_async(q_global, ^{\n        NCMBFile *file = [NCMBFile fileWithName:coupon_name data:nil];\n        NSData *data = [file getData:nil];\n        UIImage *img = [UIImage imageWithData:data];\n        dispatch_async(q_main, ^{\n            cell.imageView.image = img;\n            [cell layoutSubviews];\n        });\n    });\n    return cell;\n}\n\n\n\u307e\u3068\u3081\niOS\u3067iBeacon\u3092\u691c\u51fa\u30a2\u30d7\u30ea\u4f5c\u6210\u3057\u307e\u3057\u305f\n\u691c\u51fa\u3057\u305f\u5f8c\u306e\u51e6\u7406\u306b\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u3084\u308a\u3068\u308a\u3092\u3057\u3001\u30c7\u30fc\u30bf\u30fc\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u7c21\u5358\u3067\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001iOS\u306e\u958b\u767a\u306b\u306f\u3001\u7279\u306bUI\u90e8\u5206\u306f\u96e3\u3057\u304b\u3063\u305f\u304c\u3001\u305d\u3082\u305d\u3082\u65b9\u6cd5\u304c\u591a\u3044\u304c\u3001\u9069\u5207\u65b9\u6cd5\u304c\u308f\u304b\u308a\u307e\u305b\u3093\uff01iOS\u306eUI\u958b\u767a\u3092\u52c9\u5f37\u3057\u305f\u3044\uff01\n\nReference\n\nO2O\u3060\u3051\u3058\u3083\u306a\u3044 BLE\u3092\u4f7f\u3063\u305f\u300cBeacon\u300d\u306e\u53ef\u80fd\u6027\niOS app develop with ibeacon\n\n# What is beacon and iBeacon?\n\n\u7c21\u5358\u306b\u9593\u9055\u3048\u308b\u3093\u3060\u3051\u3069\u3001beacon\u306f\u30e1\u30a4\u30f3\u30c6\u30af\u30ce\u30ed\u30b8\u30fc\u3067\u3059\u3002\n\n\u3000\u3000\u3000Beacon\u3068\u306f\u3001Bluetooth Low Energy\uff08BLE\uff09\u3092\u4f7f\u3063\u3066\u30b9\u30de\u30fc\u30c8\u30d5\u30a9\u30f3\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u7279\u5b9a\u3057\u3001\n\u3000\u3000\u3000\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u5408\u308f\u305b\u3066\u5fc5\u8981\u306a\u60c5\u5831\u3092\u914d\u4fe1\u3059\u308b\u4ed5\u7d44\u307f\u306e\u3053\u3068\u3002\u3000\n\u3000\u3000\u3000\u30a2\u30c3\u30d7\u30eb\u304c\u300ciBeacon\u300d\u3068\u3044\u3046\u540d\u79f0\u3067iOS 7\u306b\u642d\u8f09\u3057\u305f\u3053\u3068\u304b\u3089\u6ce8\u76ee\u3092\u96c6\u3081\u305f\u6280\u8853\u3067\u3001\n\u3000\u3000\u3000Android 4.3\u4ee5\u964d\u3067\u3082BLE\u3092\u4f7f\u3063\u305f\u540c\u69d8\u306e\u4ed5\u7d44\u307f\u3092\u63d0\u4f9b\u53ef\u80fd\u3060\u3002\n\u3000\u3000\u3000\uff1c\u30bd\u30fc\u30b9\uff1aITmedia\uff1e\n\n\u4f4d\u7f6e\u60c5\u5831\u95a2\u9023\u306fGPS\u304c\u3042\u308b\u304c\u3001\u7cbe\u5ea6\u304a\u3088\u3073\u5ba4\u5185\u3067\u306fGPS\u306f\u5bfe\u5fdc\u3057\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u306e\u3067\u3001\nbeacon\u3092\u5229\u7528\u3057\u3001\u4f4d\u7f6e\u60c5\u5831\u3092\u628a\u63e1\u3057\u3001\u6d3b\u7528\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3002\nbeacon\u306a\u305c\u6ce8\u76ee\u3055\u308c\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001O2O\u30a2\u30d7\u30ea\u306f\u4eca\u5f8c\u306f\u3084\u308a\u3058\u3083\u306a\u3044\u304b\u3068\u306e\u3053\u3068\u3002\n\n\u3000\u3000\u3000O2O\u3068\u306f\u3001Online to Offline\u306e\u982d\u6587\u5b57\u3092\u53d6\u3063\u305f\u3082\u306e\u3067\u3001\n\u3000\u3000\u3000\u300c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8(\u30aa\u30f3\u30e9\u30a4\u30f3)\u306e\u6d3b\u52d5\u3092\u5b9f\u5e97\u8217(\u30aa\u30d5\u30e9\u30a4\u30f3)\u306b\u6d3b\u304b\u3059\u3053\u3068\u300d\u3092\u610f\u5473\u3057\u307e\u3059\u3002\n\u3000\u3000\u3000\uff1c\u30bd\u30fc\u30b9\uff1a\u5bcc\u58eb\u901a\uff1e\n\n\u30af\u30fc\u30dd\u30f3\u306e\u60c5\u5831\u60c5\u5831\u306a\u3069\u30aa\u30f3\u30e9\u30a4\u30f3\u60c5\u5831\u3092\u30aa\u30d5\u30e9\u30a4\u30f3\u306e\u72b6\u6cc1\u306b\u3088\u308a\u3001\u6d3b\u304b\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u306e\u3067\u3001\nbeacon\u3068O2O\u306b\u306f\u76f8\u6027\u304c\u3044\u3044\u3068\u8a00\u308f\u308c\u3066\u3044\u308b\u3002\n\u305f\u3060\u3057\u3001\u30af\u30fc\u30dd\u30f3\u306a\u3069\u3060\u3051\u3067\u306f\u306a\u304f\u3001\u69d8\u3005\u306a\u5834\u9762\u3067\u5229\u7528\u53ef\u80fd\u3068\u8003\u3048\u308c\u308b\u3002\n\n\n# Make your iphone become a beacon to test\n\niOS7\u304b\u3089iBeacon\u304c\u6a19\u6e96\u5316\u3055\u308c\u3001CoreLocation\u3068\u3044\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\niBeacon\u3092\u5236\u5fa1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u308b\u3002\n\n\u4ee5\u4e0b\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u3057\u3001\u30b5\u30f3\u30d7\u30eb\u30a2\u30d7\u30ea\u3092\u53d6\u5f97\u3057\u3001iPhone(iOS7\u4ee5\u4e0a)\u3067\niBeacon\u30c7\u30d0\u30a4\u30b9\u3068\u3057\u3066\u8a66\u3059\u3053\u3068\u306f\u3067\u304d\u308b\u3002\u3000\n\u2192 [iBeacon document](https://developer.apple.com/ibeacon/)\n\u2192 [Airlocate sample](https://developer.apple.com/library/ios/samplecode/AirLocate/Introduction/Intro.html)\n\n# \u30b5\u30fc\u30d0\u30fc\u4e8b\u524d\u6e96\u5099\n\n* [\u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9mobile backend](http://mb.cloud.nifty.com/about.htm)\u306e\u30a2\u30ab\u30a6\u30f3\u30c8\u767b\u9332\n* \u30cb\u30d5\u30c6\u30a3\u30af\u30e9\u30a6\u30c9mobile backendc\u3067\u306e\u30c7\u30fc\u30bf\u30fc\u30a4\u30f3\u30dd\u30fc\u30c8\n - Beacon\u30c7\u30fc\u30bf\u30fc\uff08\u30c7\u30fc\u30bf\u30fc\u30b9\u30c8\u30a2\uff09\n - Coupon\u30c7\u30fc\u30bf\u30fc\uff08\u30d5\u30a1\u30a4\u30eb\u30b9\u30c8\u30a2\uff09\n\n# \u30c6\u30b9\u30c8\u74b0\u5883\n* Apple iOS developer program\n* Xcode installed (v6.0\u4ee5\u4e0a)\n* iOS device (iPhone, iPad) with Bluetooth ON\n\n# \u3010O2O\u30a2\u30d7\u30ea\u4f5c\u6210\u624b\u9806\u3011\n\n# <STEP1> iBeacon receiver developer\n  - Application\u3092\u4f5c\u6210\uff08Single view\uff09\n  - CoreLocation frame work\u3092Linked Framework\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n  - Background Capabilities\u3092\u8a2d\u5b9a\uff1a\n   \u300cCapabilities\u300d->\u300cBackground modes\u300dON\n    ->\u300cLocation updates\u300d\u300cUse Bluetooth accessory\u300dChecked!\n\n# <STEP2> iBeacon\u3092\u691c\u51fa\u3059\u308b\u51e6\u7406\n  - iBeacon\u306eregion\u3092\u8a2d\u5b9a\u3059\u308b\u3002iBeacon\u3092\u76e3\u8996\u3059\u308b\u305f\u3081\u306e\u9818\u57df\u3092\u8a2d\u5b9a\u3057\u3001\n  - -application:didFinishLaunchingWithOptions \u30e1\u30bd\u30c3\u30c9\u306b\u3066UUID, another pair of IDs (major, minor)\u3092\u8a2d\u5b9a\n\n```\n//AppDelegate\n#import <CoreLocation/CoreLocation.h>\n\n- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {\n    // Override point for customization after application launch.\n    NSUUID *beaconUUID = [[NSUUID alloc] initWithUUIDString:\n                          @\"*****-******-******\"];\n\n    NSString *regionIdentifier = @\"com.nifty.mbaas\";\n    CLBeaconRegion *beaconRegion = [[CLBeaconRegion alloc]\n                                    initWithProximityUUID:beaconUUID identifier:regionIdentifier];\n\n    self.locationManager = [[CLLocationManager alloc] init];\n    // New iOS 8 request for Always Authorization, required for iBeacons to work!\n    if([self.locationManager respondsToSelector:@selector(requestAlwaysAuthorization)]) {\n        [self.locationManager requestAlwaysAuthorization];\n    }\n    self.locationManager.delegate = self;\n    self.locationManager.pausesLocationUpdatesAutomatically = NO;\n\n    [self.locationManager startMonitoringForRegion:beaconRegion];\n    [self.locationManager startRangingBeaconsInRegion:beaconRegion];\n    [self.locationManager startUpdatingLocation];\n\n    return YES;\n}\n\n```\n\n- Setup plist entry for LocationAlways\n\nSupporting Files\u30d5\u30a9\u30eb\u30c0\u306bInfo.plist\u3092\u958b\u304d\u3001Informatio Property List\u304b\u3089Add a row.\n\n- Define what happens when the region entered\n\nCLLocationManager\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u3088\u3046\u306bAppDelegate\u3092\u8a2d\u5b9a\u3059\u308b\n\n\n```\n-(void)sendLocalNotificationWithMessage:(NSString*)message {\n    UILocalNotification *notification = [[UILocalNotification alloc] init];\n    notification.alertBody = message;\n    [[UIApplication sharedApplication] scheduleLocalNotification:notification];\n}\n```\n\n```\n-(void)locationManager:(CLLocationManager *)manager didRangeBeacons:\n(NSArray *)beacons inRegion:(CLBeaconRegion *)region {\n    NSString *message = @\"\";\n\n        //Send push message\n        if(beacons.count > 0) {\n            CLBeacon *nearestBeacon = beacons.firstObject;\n\n            if(nearestBeacon.proximity == self.lastProximity ||\n               nearestBeacon.proximity == CLProximityUnknown) {\n                return;\n            }\n            self.lastProximity = nearestBeacon.proximity;\n\n            switch(nearestBeacon.proximity) {\n                case CLProximityFar:\n                    message = @\"You are far away from the beacon\";\n                    break;\n                case CLProximityNear:\n                    message = @\"You are near the beacon\";\n                    break;\n                case CLProximityImmediate:\n                    message = @\"You are in the immediate proximity of the beacon\";\n                    break;\n                case CLProximityUnknown:\n                    return;\n            }\n        } else {\n            message = @\"No beacons are nearby\";\n        }\n        NSLog(@\"%@\", message);\n        [self sendLocalNotificationWithMessage:message];\n}\n```\n\n```\n-(void)locationManager:(CLLocationManager *)manager\n        didEnterRegion:(CLRegion *)region {\n    [manager startRangingBeaconsInRegion:(CLBeaconRegion*)region];\n    [self.locationManager startUpdatingLocation];\n    NSLog(@\"You entered the region.\");\n    [self sendLocalNotificationWithMessage:@\"You entered the region.\"];\n}\n```\n\n```\n-(void)locationManager:(CLLocationManager *)manager\n         didExitRegion:(CLRegion *)region {\n    [manager stopRangingBeaconsInRegion:(CLBeaconRegion*)region];\n    [self.locationManager stopUpdatingLocation];\n    NSLog(@\"You exited the region.\");\n    [self sendLocalNotificationWithMessage:@\"You exited the region.\"];\n}\n```\n\n# <STEP3> Foreground\u306e\u8868\u793a\n\nUI\u3067\u306f\u30ea\u30b9\u30c8\u3092\u4f5c\u6210\u3057\u3001iBeacon\u306e\u30c7\u30fc\u30bf\u30fc\u3092\u5165\u308c\u3001\u8868\u793a\n - Storyboard\u3067\u30ea\u30b9\u30c8\u4f5c\u6210\uff1aTableView\u3092\u30c9\u30e9\u30b0\uff06\u30c9\u30ed\u30c3\u30d7\n - ViewController\u3067\u306f\n\n ```\n @property IBOutlet UITableView *tableView;\n ```\n\n -  View Controller to implement the protocols required, UITableViewDataSource and UITableViewDelegate.\n\n ```\n @interface ViewController : UIViewController<UITableViewDataSource, UITableViewDelegate>\n ```\n - beacons\u5909\u6570\u3092\u4f5c\u6210\uff08\u30d3\u30fc\u30b3\u30f3\u306e\u7ba1\u7406\u7528\u5909\u6570\uff09\n\n```\n@property (strong) NSArray *beacons;\n```\n\n  - beacon\u306f\u691c\u51fa\u3057\u305f\u6642\u306e\u51e6\u7406\u3092\u8ffd\u52a0\n\n```\n//AppDelegate.m didRangeBeacons\u30e1\u30bd\u30c3\u30c9\n\nViewController *viewController = (ViewController*) self.window.rootViewController;\n   //Beacons info show\n   viewController.beacons = beacons;\n   [viewController.tableView reloadData];\n```\n\n - viewController\u306b\u3042\u308b\u3000-tableView:numberOfRowsInSection: and -tableView:cellForRowAtIndexPath: \u3092\u5b9f\u88c5\u3059\u308b\n\n```\n- (NSInteger) tableView:(UITableView *)tableView\n  numberOfRowsInSection:(NSInteger)section {\n    return self.beacons.count;\n}\n```\n\n```\n- (UITableViewCell *)tableView:(UITableView *)tableView\n         cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [tableView\n                             dequeueReusableCellWithIdentifier:@\"MyIdentifier\"];\n\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc]\n                initWithStyle:UITableViewCellStyleSubtitle\n                reuseIdentifier:@\"MyIdentifier\"];\n        cell.selectionStyle = UITableViewCellSelectionStyleNone;\n    }\n    //To display beacons list in TableView\n    CLBeacon *beacon = (CLBeacon*)[self.beacons\n                                   objectAtIndex:indexPath.row];\n\n    //Get shop data from mbaas\n    if(self.beacons && self.beacons.count > 0) {\n        NSString *uuid = beacon.proximityUUID.UUIDString;\n        NCMBQuery *query = [NCMBQuery queryWithClassName:@\"Beacon\"];\n        [query whereKey:@\"beacon_uuid\" equalTo:uuid];\n        NSArray *objects = [query findObjects:nil];\n        NCMBObject *object = (NCMBObject*)[objects objectAtIndex:0];\n        NSString *storeName = [object objectForKey:@\"store_title\"];\n        cell.textLabel.text = storeName;\n        cell.detailTextLabel.text = uuid;\n    }\n    return cell;\n}\n```\n\n\n# <STEP4> Mobile backend\u30b5\u30fc\u30d0\u30fc\u306eCoupon\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u5b9f\u88c5\n\n\u4e0a\u8a18\u306eTableView\u3067\u8868\u793a\u3057\u305fbeacon\u3092\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u3001\nmobile backend\u306b\u4fdd\u5b58\u3057\u3066\u3044\u308b\u30af\u30fc\u30dd\u30f3\u30c7\u30fc\u30bf\u30fc\u3092\u8868\u793a\u3055\u305b\u308b\n\nStoryBoard\u3067\u65b0\u898f\u753b\u9762\u4f5c\u6210\u3001TableView\u4f5c\u6210\uff1aCouponTableViewControler\nSegue\u306b\u3088\u308b\u753b\u9762\u9077\u79fb\u5b9f\u88c5\nCouponTableViewControler\u3067\u306fcoupons\u3068\u3044\u3046\u5909\u6570\u3092\u4f7f\u3063\u3066\u3001\u30e2\u30d0\u30a4\u30eb\u30d0\u30c3\u30af\u30a8\u30f3\u30c9\u30b5\u30fc\u30d0\u30fc\u304b\u3089\u306e\u30af\u30fc\u30dd\u30f3\u30ea\u30b9\u30c8\u30c7\u30fc\u30bf\u30fc\u3092\u5165\u308c\u308b\n\n```\n- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {\n    if (self.beacons && self.beacons.count>0) {\n        CLBeacon *beacon = (CLBeacon*)[self.beacons objectAtIndex:indexPath.row]; //Get coupon for first beacon only, need to changed to work with multi ibeacon\n        //CONNECT TO SERVER AND GET COUPON\n        NSString *beacon_uuid = beacon.proximityUUID.UUIDString;\n        NCMBQuery *query = [NCMBQuery queryWithClassName:@\"Beacon\"];\n        [query whereKey:@\"beacon_uuid\" equalTo:beacon_uuid];\n        NSArray *objects = [query findObjects:nil];\n        if (objects && objects.count>0) {\n            for (NCMBObject *object in objects) {\n                self.selectedCoupons = [object objectForKey:@\"coupon_list\"];\n                //ToViewController segue\n                [self performSegueWithIdentifier:@\"toCouponViewController\" sender:self];\n            }\n        }\n    }\n}\n\n```\n\nSegue\u5b9f\u88c5\n\n```\n// Segue \u3067\u6b21\u306e ViewController \u3078\u79fb\u884c\u3059\u308b\u3068\u304d\u306b\u9078\u629e\u3055\u308c\u305fCell\u306e\u753b\u50cf\u60c5\u5831\u3092\u6e21\u3059\n- (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender{\n    // identifier \u304c toViewController \u3067\u3042\u308b\u3053\u3068\u306e\u78ba\u8a8d\n    if ([[segue identifier] isEqualToString:@\"toCouponViewController\"]) {\n        CouponTableViewController *vc = (CouponTableViewController*)[segue destinationViewController];\n        // \u79fb\u884c\u5148\u306e ViewController \u306bcoupons\u3092\u6e21\u3059\n        vc.coupons = self.selectedCoupons;\n    }\n}\n```\n\nCouponTableViewController\n\n```\n- (NSInteger) tableView:(UITableView *)couponView\nnumberOfRowsInSection:(NSInteger)section {\n    return self.coupons.count;\n}\n```\n\n```\n- (UITableViewCell *)tableView:(UITableView *)couponView\n    cellForRowAtIndexPath:(NSIndexPath *)indexPath {\n    UITableViewCell *cell = [couponView\n                             dequeueReusableCellWithIdentifier:@\"MyIdentifier\"];\n\n    if (cell == nil) {\n        cell = [[UITableViewCell alloc]\n                initWithStyle:UITableViewCellStyleSubtitle\n                reuseIdentifier:@\"MyIdentifier\"];\n        cell.selectionStyle = UITableViewCellSelectionStyleNone;\n    }\n\n    //To display coupon image\n    NSString *coupon_name = (NSString *) [self.coupons objectAtIndex:indexPath.row];\n    dispatch_queue_t q_global = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0);\n    dispatch_queue_t q_main = dispatch_get_main_queue();\n    cell.imageView.image = nil;\n\n    dispatch_async(q_global, ^{\n        NCMBFile *file = [NCMBFile fileWithName:coupon_name data:nil];\n        NSData *data = [file getData:nil];\n        UIImage *img = [UIImage imageWithData:data];\n        dispatch_async(q_main, ^{\n            cell.imageView.image = img;\n            [cell layoutSubviews];\n        });\n    });\n    return cell;\n}\n```\n\n# \u307e\u3068\u3081\n\niOS\u3067iBeacon\u3092\u691c\u51fa\u30a2\u30d7\u30ea\u4f5c\u6210\u3057\u307e\u3057\u305f\n\u691c\u51fa\u3057\u305f\u5f8c\u306e\u51e6\u7406\u306b\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u3084\u308a\u3068\u308a\u3092\u3057\u3001\u30c7\u30fc\u30bf\u30fc\u53d6\u5f97\u3059\u308b\u3088\u3046\u306b\u5b9f\u88c5\u7c21\u5358\u3067\u3057\u305f\u3002\n\u305f\u3060\u3057\u3001iOS\u306e\u958b\u767a\u306b\u306f\u3001\u7279\u306bUI\u90e8\u5206\u306f\u96e3\u3057\u304b\u3063\u305f\u304c\u3001\u305d\u3082\u305d\u3082\u65b9\u6cd5\u304c\u591a\u3044\u304c\u3001\u9069\u5207\u65b9\u6cd5\u304c\u308f\u304b\u308a\u307e\u305b\u3093\uff01iOS\u306eUI\u958b\u767a\u3092\u52c9\u5f37\u3057\u305f\u3044\uff01\n\n# Reference\n\n* [O2O\u3060\u3051\u3058\u3083\u306a\u3044 BLE\u3092\u4f7f\u3063\u305f\u300cBeacon\u300d\u306e\u53ef\u80fd\u6027](www.itmedia.co.jp/mobile/articles/1406/04/news090.html)\n* [iOS app develop with ibeacon](http://ibeaconmodules.us/blogs/news/14279747-tutorial-ibeacon-app-development-with-corelocation-on-apple-ios-7-8)\n", "tags": ["iBeacon", "iOS", "NCMB", "mobilebackend"]}