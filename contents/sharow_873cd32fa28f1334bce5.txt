{"context": "\n\na\u30bas\u30f3y\u30c9n\u30b3c\u30adi\u30e8o\u30b7\nPython3\u306easyncio\u3092\u4f7f\u3046\u3068\u30b3\u30eb\u30fc\u30c1\u30f3\u305f\u3061\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u7ba1\u7406\u3055\u305b\u3066\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u306a\u304c\u3089\u6642\u5206\u5272\u3067\u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u3063\u307d\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\nimport asyncio\nimport random\nfrom collections import deque\nfrom contextlib import closing\n\nasync def zun_or_doko():\n    return random.choice(['\u30ba\u30f3', '\u30c9\u30b3'])\n\nasync def zundoko_task():\n    said = deque(maxlen=5)\n    while True:\n        say = await zun_or_doko()\n        print(say)\n        said.append(say)\n        if ''.join(said) == '\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3':\n            break\n        await asyncio.sleep(0.1)\n    print('\u30ad\u30fb\u30e8\u30fb\u30b7!')\n\nwith closing(asyncio.get_event_loop()) as loop:\n    loop.run_until_complete(zundoko_task())\n\n\u3053\u306e\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u306fzundoko_task\u3057\u304b\u8d70\u3089\u305b\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308c\u3070\u3001\u4f8b\u3048\u3070HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u306a\u304c\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u7121\u9650\u306b\u30ba\u30f3\u30c9\u30b3\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002await asyncio.sleep(0.1)\u3067\u7720\u3063\u3066\u3044\u308b\u9593\u306b\u4ed6\u306e\u30bf\u30b9\u30af\u3092\u3084\u308b\u308f\u3051\u3067\u3059\u3002\n\u7121\u99c4\u306bzun_or_doko\u3092\u5225\u30bf\u30b9\u30af\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u304b\u3089\u5225\u306e\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u547c\u3076\u6642\u306f\u3053\u306e\u3088\u3046\u306bawait\u3092\u3064\u3051\u307e\u3059\u3002\n# a\u30bas\u30f3y\u30c9n\u30b3c\u30adi\u30e8o\u30b7\nPython3\u306easyncio\u3092\u4f7f\u3046\u3068\u30b3\u30eb\u30fc\u30c1\u30f3\u305f\u3061\u3092\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3067\u7ba1\u7406\u3055\u305b\u3066\u30b7\u30f3\u30b0\u30eb\u30b9\u30ec\u30c3\u30c9\u306a\u304c\u3089\u6642\u5206\u5272\u3067\u30b3\u30f3\u30ab\u30ec\u30f3\u30c8\u3063\u307d\u3044\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n```py3\nimport asyncio\nimport random\nfrom collections import deque\nfrom contextlib import closing\n\nasync def zun_or_doko():\n    return random.choice(['\u30ba\u30f3', '\u30c9\u30b3'])\n\nasync def zundoko_task():\n    said = deque(maxlen=5)\n    while True:\n        say = await zun_or_doko()\n        print(say)\n        said.append(say)\n        if ''.join(said) == '\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30ba\u30f3\u30c9\u30b3':\n            break\n        await asyncio.sleep(0.1)\n    print('\u30ad\u30fb\u30e8\u30fb\u30b7!')\n\nwith closing(asyncio.get_event_loop()) as loop:\n    loop.run_until_complete(zundoko_task())\n```\n\n\u3053\u306e\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7\u306f`zundoko_task`\u3057\u304b\u8d70\u3089\u305b\u3066\u3044\u307e\u305b\u3093\u304c\u3001\u30bf\u30b9\u30af\u3092\u8ffd\u52a0\u3059\u308c\u3070\u3001\u4f8b\u3048\u3070HTTP\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u53d7\u3051\u4ed8\u3051\u306a\u304c\u3089\u30d0\u30c3\u30af\u30b0\u30e9\u30f3\u30c9\u3067\u7121\u9650\u306b\u30ba\u30f3\u30c9\u30b3\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002`await asyncio.sleep(0.1)`\u3067\u7720\u3063\u3066\u3044\u308b\u9593\u306b\u4ed6\u306e\u30bf\u30b9\u30af\u3092\u3084\u308b\u308f\u3051\u3067\u3059\u3002\n\n\u7121\u99c4\u306b`zun_or_doko`\u3092\u5225\u30bf\u30b9\u30af\u306b\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u30b3\u30eb\u30fc\u30c1\u30f3\u304b\u3089\u5225\u306e\u30b3\u30eb\u30fc\u30c1\u30f3\u3092\u547c\u3076\u6642\u306f\u3053\u306e\u3088\u3046\u306b`await`\u3092\u3064\u3051\u307e\u3059\u3002\n", "tags": ["python3", "\u30ba\u30f3\u30c9\u30b3\u30ad\u30e8\u30b7"]}