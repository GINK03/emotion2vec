{"context": " More than 1 year has passed since last update.\n\nProblem\n\nFind the greatest product of five consecutive digits in the 1000-digit number.\n7316717653133062491922511967442657474235534919493473167176531330624919225119674426574742355349194934\n9698352031277450632623957831801698480186947885184396983520312774506326239578318016984801869478851843\n8586156078911294949545950173795833195285320880551185861560789112949495459501737958331952853208805511\n1254069874715852386305071569329096329522744304355712540698747158523863050715693290963295227443043557\n6689664895044524452316173185640309871112172238311366896648950445244523161731856403098711121722383113\n6222989342338030813533627661428280644448664523874962229893423380308135336276614282806444486645238749\n3035890729629049156044077239071381051585930796086630358907296290491560440772390713810515859307960866\n7017242712188399879790879227492190169972088809377670172427121883998797908792274921901699720888093776\n6572733300105336788122023542180975125454059475224365727333001053367881220235421809751254540594752243\n5258490771167055601360483958644670632441572215539752584907711670556013604839586446706324415722155397\n5369781797784617406495514929086256932197846862248253697817977846174064955149290862569321978468622482\n8397224137565705605749026140797296865241453510047483972241375657056057490261407972968652414535100474\n8216637048440319989000889524345065854122758866688182166370484403199890008895243450658541227588666881\n1642717147992444292823086346567481391912316282458616427171479924442928230863465674813919123162824586\n1786645835912456652947654568284891288314260769004217866458359124566529476545682848912883142607690042\n2421902267105562632111110937054421750694165896040824219022671055626321111109370544217506941658960408\n0719840385096245544436298123098787992724428490918807198403850962455444362981230987879927244284909188\n8458015616609791913387549920052406368991256071760684580156166097919133875499200524063689912560717606\n0588611646710940507754100225698315520005593572972505886116467109405077541002256983155200055935729725\n7163626956188267042825248360082325753042075296345071636269561882670428252483600823257530420752963450\n\n\nCode in Haskell\n\nEuler_008.hs\nmodule Main where\n\nrawdigits =\n      \"73167176531330624919225119674426574742355349194934\\\n      \\96983520312774506326239578318016984801869478851843\\\n      \\85861560789112949495459501737958331952853208805511\\\n      \\12540698747158523863050715693290963295227443043557\\\n      \\66896648950445244523161731856403098711121722383113\\\n      \\62229893423380308135336276614282806444486645238749\\\n      \\30358907296290491560440772390713810515859307960866\\\n      \\70172427121883998797908792274921901699720888093776\\\n      \\65727333001053367881220235421809751254540594752243\\\n      \\52584907711670556013604839586446706324415722155397\\\n      \\53697817977846174064955149290862569321978468622482\\\n      \\83972241375657056057490261407972968652414535100474\\\n      \\82166370484403199890008895243450658541227588666881\\\n      \\16427171479924442928230863465674813919123162824586\\\n      \\17866458359124566529476545682848912883142607690042\\\n      \\24219022671055626321111109370544217506941658960408\\\n      \\07198403850962455444362981230987879927244284909188\\\n      \\84580156166097919133875499200524063689912560717606\\\n      \\05886116467109405077541002256983155200055935729725\\\n      \\71636269561882670428252483600823257530420752963450\"\n\nbreakup [] = []\nbreakup (x:xs) = [x]: breakup (xs)\n\nsproduct n [] = []\nsproduct n a@(x:xs)\n  | (length a) < 5 = 0 : sproduct n xs \n  |otherwise = (product (take n a)) : sproduct n xs\n\ndigits = map (read :: String -> Integer) (breakup rawdigits)\n\nmain = print answer\n  where answer = maximum (sproduct 5 digits)\n\n\n\nAnswer\n4***4\n\nComments\n\u8907\u6570\u884c\u306b\u6e21\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u8868\u8a18\u6cd5\u3092\u63a2\u3059\u306e\u304c\u4e00\u756a\u306e\u96e3\u95a2\u3060\u3063\u305f\u3088\u3046\u306a\u2026\u2026C\u3068\u306f\u9055\u3046\u306e\u306d\u3002\u3068\u3044\u3046\u304b\u3001\u308f\u308a\u3068\u65b0\u3057\u3044\u8a00\u8a9e\u306a\u306e\u306b\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3044\u306e\u306f\u306a\u3093\u3067\u306a\u3093\u3060\u305c\uff1f\u3000\u2190\u3000\u60c5\u5f31\n\n# Problem\n\n> Find the greatest product of five consecutive digits in the 1000-digit number.\n> \n> $73167176531330624919225119674426574742355349194934$\n> $96983520312774506326239578318016984801869478851843$\n> $85861560789112949495459501737958331952853208805511$\n> $12540698747158523863050715693290963295227443043557$\n> $66896648950445244523161731856403098711121722383113$\n> $62229893423380308135336276614282806444486645238749$\n> $30358907296290491560440772390713810515859307960866$\n> $70172427121883998797908792274921901699720888093776$\n> $65727333001053367881220235421809751254540594752243$\n> $52584907711670556013604839586446706324415722155397$\n> $53697817977846174064955149290862569321978468622482$\n> $83972241375657056057490261407972968652414535100474$\n> $82166370484403199890008895243450658541227588666881$\n> $16427171479924442928230863465674813919123162824586$\n> $17866458359124566529476545682848912883142607690042$\n> $24219022671055626321111109370544217506941658960408$\n> $07198403850962455444362981230987879927244284909188$\n> $84580156166097919133875499200524063689912560717606$\n> $05886116467109405077541002256983155200055935729725$\n> $71636269561882670428252483600823257530420752963450$\n\n# Code in Haskell\n\n```haskell:Euler_008.hs\nmodule Main where\n\nrawdigits =\n\t  \"73167176531330624919225119674426574742355349194934\\\n\t  \\96983520312774506326239578318016984801869478851843\\\n\t  \\85861560789112949495459501737958331952853208805511\\\n\t  \\12540698747158523863050715693290963295227443043557\\\n\t  \\66896648950445244523161731856403098711121722383113\\\n\t  \\62229893423380308135336276614282806444486645238749\\\n\t  \\30358907296290491560440772390713810515859307960866\\\n\t  \\70172427121883998797908792274921901699720888093776\\\n\t  \\65727333001053367881220235421809751254540594752243\\\n\t  \\52584907711670556013604839586446706324415722155397\\\n\t  \\53697817977846174064955149290862569321978468622482\\\n\t  \\83972241375657056057490261407972968652414535100474\\\n\t  \\82166370484403199890008895243450658541227588666881\\\n\t  \\16427171479924442928230863465674813919123162824586\\\n\t  \\17866458359124566529476545682848912883142607690042\\\n\t  \\24219022671055626321111109370544217506941658960408\\\n\t  \\07198403850962455444362981230987879927244284909188\\\n\t  \\84580156166097919133875499200524063689912560717606\\\n\t  \\05886116467109405077541002256983155200055935729725\\\n\t  \\71636269561882670428252483600823257530420752963450\"\n\nbreakup [] = []\nbreakup (x:xs) = [x]: breakup (xs)\n\nsproduct n [] = []\nsproduct n a@(x:xs)\n  | (length a) < 5 = 0 : sproduct n xs \n  |otherwise = (product (take n a)) : sproduct n xs\n\ndigits = map (read :: String -> Integer) (breakup rawdigits)\n\nmain = print answer\n  where answer = maximum (sproduct 5 digits)\n```\n\n# Answer\n\n4***4\n\n# Comments\n\n\u8907\u6570\u884c\u306b\u6e21\u308b\u6587\u5b57\u5217\u30ea\u30c6\u30e9\u30eb\u306e\u8868\u8a18\u6cd5\u3092\u63a2\u3059\u306e\u304c\u4e00\u756a\u306e\u96e3\u95a2\u3060\u3063\u305f\u3088\u3046\u306a\u2026\u2026C\u3068\u306f\u9055\u3046\u306e\u306d\u3002\u3068\u3044\u3046\u304b\u3001\u308f\u308a\u3068\u65b0\u3057\u3044\u8a00\u8a9e\u306a\u306e\u306b\u30d2\u30a2\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u306a\u3044\u306e\u306f\u306a\u3093\u3067\u306a\u3093\u3060\u305c\uff1f\u3000\u2190\u3000\u60c5\u5f31\n", "tags": ["Haskell", "\u60c5\u5f31"]}