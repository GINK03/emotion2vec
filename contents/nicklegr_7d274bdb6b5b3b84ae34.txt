{"tags": ["CTF", "writeup", "seccon"], "context": "https://score-quals.seccon.jp/question/\n\u30c1\u30fc\u30e0nicklegr\u3067\u500b\u4eba\u53c2\u52a0\u3002\n300\u70b9\u3067305\u4f4d(930\u30c1\u30fc\u30e0\u4e2d)\u3067\u3057\u305f\u3002\n\u4eca\u5e74\u306f\u96e3\u3057\u304f\u3066\u3055\u3063\u3071\u308a\u3002\u672c\u683c\u7684\u306aCTF\u306b\u306a\u3063\u3066\u307e\u3057\u305f\u3002\n\u3044\u3044\u3053\u3068\u3060\u3051\u3069\u3001\u96d1\u9b5a\u3068\u3057\u3066\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u554f\u984c\u3082\u5c11\u3057\u307b\u3057\u304b\u3063\u305f\u306a\u3041\u3002\n\nVigenere (Crypto 100)\n\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7 - Wikipedia\nk: ????????????\np: SECCON{???????????????????????????????????}\nc: LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\n\nk=key, p=plain, c=cipher, md5(p)=f528a6ab914c1ecf856a1d93103948fe\n\n\n |ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\n-+----------------------------\nA|ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\nB|BCDEFGHIJKLMNOPQRSTUVWXYZ{}A\nC|CDEFGHIJKLMNOPQRSTUVWXYZ{}AB\nD|DEFGHIJKLMNOPQRSTUVWXYZ{}ABC\nE|EFGHIJKLMNOPQRSTUVWXYZ{}ABCD\nF|FGHIJKLMNOPQRSTUVWXYZ{}ABCDE\nG|GHIJKLMNOPQRSTUVWXYZ{}ABCDEF\nH|HIJKLMNOPQRSTUVWXYZ{}ABCDEFG\nI|IJKLMNOPQRSTUVWXYZ{}ABCDEFGH\nJ|JKLMNOPQRSTUVWXYZ{}ABCDEFGHI\nK|KLMNOPQRSTUVWXYZ{}ABCDEFGHIJ\nL|LMNOPQRSTUVWXYZ{}ABCDEFGHIJK\nM|MNOPQRSTUVWXYZ{}ABCDEFGHIJKL\nN|NOPQRSTUVWXYZ{}ABCDEFGHIJKLM\nO|OPQRSTUVWXYZ{}ABCDEFGHIJKLMN\nP|PQRSTUVWXYZ{}ABCDEFGHIJKLMNO\nQ|QRSTUVWXYZ{}ABCDEFGHIJKLMNOP\nR|RSTUVWXYZ{}ABCDEFGHIJKLMNOPQ\nS|STUVWXYZ{}ABCDEFGHIJKLMNOPQR\nT|TUVWXYZ{}ABCDEFGHIJKLMNOPQRS\nU|UVWXYZ{}ABCDEFGHIJKLMNOPQRST\nV|VWXYZ{}ABCDEFGHIJKLMNOPQRSTU\nW|WXYZ{}ABCDEFGHIJKLMNOPQRSTUV\nX|XYZ{}ABCDEFGHIJKLMNOPQRSTUVW\nY|YZ{}ABCDEFGHIJKLMNOPQRSTUVWX\nZ|Z{}ABCDEFGHIJKLMNOPQRSTUVWXY\n{|{}ABCDEFGHIJKLMNOPQRSTUVWXYZ\n}|}ABCDEFGHIJKLMNOPQRSTUVWXYZ{\n\n\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u306f\u5e73\u6587\u3068\u6697\u53f7\u6587\u306e\u5404\u6587\u5b57\u304c\u5206\u304b\u308c\u3070\u9375\u304c\u6c42\u307e\u308b\u306e\u3067\u3001\u307e\u305a\u306fSECCON{\u306e\u90e8\u5206\u3002\u624b\u4f5c\u696d\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u5f15\u3044\u3066\u307f\u305f\u3002\nk: VIGENER?????\np: SECCON{???????????????????????????????????}\nc: LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\n\n\u306a\u3089\u6b21\u306e\u6587\u5b57\u306fE\u3067\u3057\u3087\u3046\u3002\nk: VIGENERE????\n\n\u6b8b\u308a4\u6587\u5b57\u306a\u3089\u3001 28^4 = 614656 \u306a\u306e\u3067\u7dcf\u5f53\u305f\u308a\u3067\u304d\u308b\u3002md5(p)\u3067\u6b63\u89e3\u304b\u78ba\u8a8d\u3067\u304d\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\nrequire \"pp\"\nrequire \"digest/md5\"\n\nCIPHER = \"LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\"\nCHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\"\n\ndef to_index(c)\n  if \"A\".ord <= c.ord && c.ord <= \"Z\".ord\n    c.ord - \"A\".ord\n  else\n    return 26 if c == \"{\"\n    return 27 if c == \"}\"\n    raise\n  end\nend\n\ndef make_table\n  table = Array.new(28) do\n    Array.new(28)\n  end\n\n  CHARS.each_char do |c|\n    CHARS.each_char do |k|\n      i = CHARS.index(c)\n      i -= to_index(k)\n      i += 28 if i < 0\n\n      raise if !CHARS[i]\n      table[to_index(k)][to_index(c)] = CHARS[i]\n    end\n  end\n\n  table\nend\n\ndef decode(cipher, key, table)\n  ret = \"\"\n  key_index = 0\n  cipher.each_char do |c|\n    ret += table[to_index(key[key_index])][to_index(c)]\n    key_index += 1\n    key_index %= key.size\n  end\n  ret\nend\n\ntable = make_table()\n\nCHARS.each_char do |c1|\n  puts c1\n  CHARS.each_char do |c2|\n    CHARS.each_char do |c3|\n      CHARS.each_char do |c4|\n        key = \"VIGENERE\" + c1 + c2 + c3 + c4\n        plain = decode(CIPHER, key, table)\n        if Digest::MD5.hexdigest(plain) == \"f528a6ab914c1ecf856a1d93103948fe\"\n          puts \"found!: #{key} #{plain}\"\n          exit\n        end\n      end\n    end\n  end\nend\n\nA\nB\nC\nfound!: VIGENERECODE SECCON{ABABABCDEDEFGHIJJKLMNOPQRSTTUVWXYYZ}\n\n\u9375\u306fVIGENERECODE\u3002\u3053\u308c\u304f\u3089\u3044\u306a\u3089\u30a8\u30b9\u30d1\u30fc\u3057\u305f\u4eba\u3082\u3044\u308b\u304b\u3082\u3002\n\nVoIP (Forensics 100)\nWireshark\u306b\u6295\u3052\u305f\u3089\u30d5\u30e9\u30b0\u3092\u8aad\u307f\u4e0a\u3052\u3066\u304f\u308c\u305f\u3002\nWireshark\u306e\u30b3\u30a2\u306a\u4f7f\u3044\u65b9\uff5cVoIP\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u751f\u3057\u3066\u54c1\u8cea\u3092\u78ba\u8a8d\n\"nine\"\u304c\u805e\u304d\u53d6\u308a\u305a\u3089\u304b\u3063\u305f\u3002\nSECCON{9001IVR}\n\n\nAnti-Debugging (Binary 100)\nWindows\u30d0\u30a4\u30ca\u30ea\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af + \u30a2\u30f3\u30c1\u30c7\u30d0\u30c3\u30b0\u3002\nWindows\u306fOllydbg\u304c\u4f7f\u3048\u308b\u306e\u3067\u697d\u3002\n\u3054\u4e01\u5be7\u306b\u3001\u30c1\u30a7\u30c3\u30af\u306b\u5f15\u3063\u304b\u304b\u3063\u305f\u3089\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\nASCII \"password is wrong.\"\nASCII \"But detected debugger!\"\nASCII \"But detected Ollydbg.\"\n\n\u3053\u308c\u3089\u306e\u6587\u5b57\u5217\u306e\u53c2\u7167\u7b87\u6240\u306b\u30c1\u30a7\u30c3\u30af\u30eb\u30fc\u30c1\u30f3\u304c\u307e\u3068\u307e\u3063\u3066\u305f\u3002\u5168\u90e8\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u30d1\u30c3\u30c1\u3092\u5f53\u3066\u305f\u3002\nPatches, item 0\n  Address = 004013A3\n  Module = bin\n  Size = 6.\n  Status = Applied\n  Modified command = JMP 00401663\n  Original command = JNE 0040174F\n  Comments =\n\n\u5b9f\u884c\u3057\u305f\u3089\u30d5\u30e9\u30b0\u3002\u306a\u305c\u304b\u3053\u308c\u3060\u3051\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3067\u51fa\u3066\u304d\u305f\u3002\nSECCON{check_Ascii85}\n\n\nPNG over Telegraph (Crypto 300)\n\u89e3\u3051\u306a\u304b\u3063\u305f\u3002\nhttps://youtu.be/Y6voaURtKlM\n\u898b\u305f\u77ac\u9593\u5439\u3044\u305f\u3002\u306a\u3093\u3060\u3053\u308cw\n\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u304c\u307b\u307c\u56fa\u5b9a\u306a\u306e\u3067\u3001\u5404\u30dd\u30fc\u30ba\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u5dee\u5206\u3092\u53d6\u308c\u3070\u3044\u3051\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3060\u3044\u3076\u6ce5\u81ed\u3044\u4f5c\u696d\u306b\u306a\u308a\u305d\u3046\u3002\n\u3042\u3068\u6587\u5b57\u304c21\u7a2e\u985e\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u3069\u3046\u3084\u3063\u3066\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u3093\u3060\u308d\u3002Base64\u3068\u304b\u3067\u306f\u306a\u3055\u305d\u3046\u3002\n\n\u4ed6\u306e\u4eba\u306eWriteup\nSECCON 2016 Online CTF\u306eWrite-up\u304c\u96c6\u307e\u308b\u9b54\u6cd5\u306e\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8\nhttps://score-quals.seccon.jp/question/\n\n\u30c1\u30fc\u30e0nicklegr\u3067\u500b\u4eba\u53c2\u52a0\u3002\n300\u70b9\u3067305\u4f4d(930\u30c1\u30fc\u30e0\u4e2d)\u3067\u3057\u305f\u3002\n\n\u4eca\u5e74\u306f\u96e3\u3057\u304f\u3066\u3055\u3063\u3071\u308a\u3002\u672c\u683c\u7684\u306aCTF\u306b\u306a\u3063\u3066\u307e\u3057\u305f\u3002\n\u3044\u3044\u3053\u3068\u3060\u3051\u3069\u3001\u96d1\u9b5a\u3068\u3057\u3066\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u554f\u984c\u3082\u5c11\u3057\u307b\u3057\u304b\u3063\u305f\u306a\u3041\u3002\n\n# Vigenere (Crypto 100)\n[\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7 - Wikipedia](https://ja.wikipedia.org/wiki/%E3%83%B4%E3%82%A3%E3%82%B8%E3%83%A5%E3%83%8D%E3%83%AB%E6%9A%97%E5%8F%B7)\n\n```\nk: ????????????\np: SECCON{???????????????????????????????????}\nc: LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\n\nk=key, p=plain, c=cipher, md5(p)=f528a6ab914c1ecf856a1d93103948fe\n\n\n |ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\n-+----------------------------\nA|ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\nB|BCDEFGHIJKLMNOPQRSTUVWXYZ{}A\nC|CDEFGHIJKLMNOPQRSTUVWXYZ{}AB\nD|DEFGHIJKLMNOPQRSTUVWXYZ{}ABC\nE|EFGHIJKLMNOPQRSTUVWXYZ{}ABCD\nF|FGHIJKLMNOPQRSTUVWXYZ{}ABCDE\nG|GHIJKLMNOPQRSTUVWXYZ{}ABCDEF\nH|HIJKLMNOPQRSTUVWXYZ{}ABCDEFG\nI|IJKLMNOPQRSTUVWXYZ{}ABCDEFGH\nJ|JKLMNOPQRSTUVWXYZ{}ABCDEFGHI\nK|KLMNOPQRSTUVWXYZ{}ABCDEFGHIJ\nL|LMNOPQRSTUVWXYZ{}ABCDEFGHIJK\nM|MNOPQRSTUVWXYZ{}ABCDEFGHIJKL\nN|NOPQRSTUVWXYZ{}ABCDEFGHIJKLM\nO|OPQRSTUVWXYZ{}ABCDEFGHIJKLMN\nP|PQRSTUVWXYZ{}ABCDEFGHIJKLMNO\nQ|QRSTUVWXYZ{}ABCDEFGHIJKLMNOP\nR|RSTUVWXYZ{}ABCDEFGHIJKLMNOPQ\nS|STUVWXYZ{}ABCDEFGHIJKLMNOPQR\nT|TUVWXYZ{}ABCDEFGHIJKLMNOPQRS\nU|UVWXYZ{}ABCDEFGHIJKLMNOPQRST\nV|VWXYZ{}ABCDEFGHIJKLMNOPQRSTU\nW|WXYZ{}ABCDEFGHIJKLMNOPQRSTUV\nX|XYZ{}ABCDEFGHIJKLMNOPQRSTUVW\nY|YZ{}ABCDEFGHIJKLMNOPQRSTUVWX\nZ|Z{}ABCDEFGHIJKLMNOPQRSTUVWXY\n{|{}ABCDEFGHIJKLMNOPQRSTUVWXYZ\n}|}ABCDEFGHIJKLMNOPQRSTUVWXYZ{\n```\n\n\u30f4\u30a3\u30b8\u30e5\u30cd\u30eb\u6697\u53f7\u306f\u5e73\u6587\u3068\u6697\u53f7\u6587\u306e\u5404\u6587\u5b57\u304c\u5206\u304b\u308c\u3070\u9375\u304c\u6c42\u307e\u308b\u306e\u3067\u3001\u307e\u305a\u306f`SECCON{`\u306e\u90e8\u5206\u3002\u624b\u4f5c\u696d\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u5f15\u3044\u3066\u307f\u305f\u3002\n\n```\nk: VIGENER?????\np: SECCON{???????????????????????????????????}\nc: LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\n```\n\n\u306a\u3089\u6b21\u306e\u6587\u5b57\u306f`E`\u3067\u3057\u3087\u3046\u3002\n\n```\nk: VIGENERE????\n```\n\n\u6b8b\u308a4\u6587\u5b57\u306a\u3089\u3001 `28^4 = 614656` \u306a\u306e\u3067\u7dcf\u5f53\u305f\u308a\u3067\u304d\u308b\u3002`md5(p)`\u3067\u6b63\u89e3\u304b\u78ba\u8a8d\u3067\u304d\u308b\u306e\u304c\u30dd\u30a4\u30f3\u30c8\u3002\n\n```ruby\nrequire \"pp\"\nrequire \"digest/md5\"\n\nCIPHER = \"LMIG}RPEDOEEWKJIQIWKJWMNDTSR}TFVUFWYOCBAJBQ\"\nCHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ{}\"\n\ndef to_index(c)\n  if \"A\".ord <= c.ord && c.ord <= \"Z\".ord\n    c.ord - \"A\".ord\n  else\n    return 26 if c == \"{\"\n    return 27 if c == \"}\"\n    raise\n  end\nend\n\ndef make_table\n  table = Array.new(28) do\n    Array.new(28)\n  end\n\n  CHARS.each_char do |c|\n    CHARS.each_char do |k|\n      i = CHARS.index(c)\n      i -= to_index(k)\n      i += 28 if i < 0\n\n      raise if !CHARS[i]\n      table[to_index(k)][to_index(c)] = CHARS[i]\n    end\n  end\n\n  table\nend\n\ndef decode(cipher, key, table)\n  ret = \"\"\n  key_index = 0\n  cipher.each_char do |c|\n    ret += table[to_index(key[key_index])][to_index(c)]\n    key_index += 1\n    key_index %= key.size\n  end\n  ret\nend\n\ntable = make_table()\n\nCHARS.each_char do |c1|\n  puts c1\n  CHARS.each_char do |c2|\n    CHARS.each_char do |c3|\n      CHARS.each_char do |c4|\n        key = \"VIGENERE\" + c1 + c2 + c3 + c4\n        plain = decode(CIPHER, key, table)\n        if Digest::MD5.hexdigest(plain) == \"f528a6ab914c1ecf856a1d93103948fe\"\n          puts \"found!: #{key} #{plain}\"\n          exit\n        end\n      end\n    end\n  end\nend\n```\n\n```\nA\nB\nC\nfound!: VIGENERECODE SECCON{ABABABCDEDEFGHIJJKLMNOPQRSTTUVWXYYZ}\n```\n\n\u9375\u306f`VIGENERECODE`\u3002\u3053\u308c\u304f\u3089\u3044\u306a\u3089\u30a8\u30b9\u30d1\u30fc\u3057\u305f\u4eba\u3082\u3044\u308b\u304b\u3082\u3002\n\n# VoIP (Forensics 100)\nWireshark\u306b\u6295\u3052\u305f\u3089\u30d5\u30e9\u30b0\u3092\u8aad\u307f\u4e0a\u3052\u3066\u304f\u308c\u305f\u3002\n[Wireshark\u306e\u30b3\u30a2\u306a\u4f7f\u3044\u65b9\uff5cVoIP\u30d1\u30b1\u30c3\u30c8\u3092\u518d\u751f\u3057\u3066\u54c1\u8cea\u3092\u78ba\u8a8d](http://www.terilogy.com/momentum/wireshark/wireshark01.html)\n\n\"nine\"\u304c\u805e\u304d\u53d6\u308a\u305a\u3089\u304b\u3063\u305f\u3002\n\n```\nSECCON{9001IVR}\n```\n\n# Anti-Debugging (Binary 100)\n\nWindows\u30d0\u30a4\u30ca\u30ea\u3002\u30d1\u30b9\u30ef\u30fc\u30c9\u30c1\u30a7\u30c3\u30af + \u30a2\u30f3\u30c1\u30c7\u30d0\u30c3\u30b0\u3002\nWindows\u306fOllydbg\u304c\u4f7f\u3048\u308b\u306e\u3067\u697d\u3002\n\n\u3054\u4e01\u5be7\u306b\u3001\u30c1\u30a7\u30c3\u30af\u306b\u5f15\u3063\u304b\u304b\u3063\u305f\u3089\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u51fa\u3057\u3066\u304f\u308c\u308b\u3002\n\n```\nASCII \"password is wrong.\"\nASCII \"But detected debugger!\"\nASCII \"But detected Ollydbg.\"\n```\n\n\u3053\u308c\u3089\u306e\u6587\u5b57\u5217\u306e\u53c2\u7167\u7b87\u6240\u306b\u30c1\u30a7\u30c3\u30af\u30eb\u30fc\u30c1\u30f3\u304c\u307e\u3068\u307e\u3063\u3066\u305f\u3002\u5168\u90e8\u30b9\u30ad\u30c3\u30d7\u3059\u308b\u3088\u3046\u306b\u30d1\u30c3\u30c1\u3092\u5f53\u3066\u305f\u3002\n\n```\nPatches, item 0\n  Address = 004013A3\n  Module = bin\n  Size = 6.\n  Status = Applied\n  Modified command = JMP 00401663\n  Original command = JNE 0040174F\n  Comments =\n```\n\n\u5b9f\u884c\u3057\u305f\u3089\u30d5\u30e9\u30b0\u3002\u306a\u305c\u304b\u3053\u308c\u3060\u3051\u30e1\u30c3\u30bb\u30fc\u30b8\u30dc\u30c3\u30af\u30b9\u3067\u51fa\u3066\u304d\u305f\u3002\n\n```\nSECCON{check_Ascii85}\n```\n\n# PNG over Telegraph (Crypto 300)\n\u89e3\u3051\u306a\u304b\u3063\u305f\u3002\n\nhttps://youtu.be/Y6voaURtKlM\n\n\u898b\u305f\u77ac\u9593\u5439\u3044\u305f\u3002\u306a\u3093\u3060\u3053\u308cw\n\n\u30ab\u30e1\u30e9\u30a2\u30f3\u30b0\u30eb\u304c\u307b\u307c\u56fa\u5b9a\u306a\u306e\u3067\u3001\u5404\u30dd\u30fc\u30ba\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u5dee\u5206\u3092\u53d6\u308c\u3070\u3044\u3051\u308b\u6c17\u304c\u3059\u308b\u3051\u3069\u3001\u3060\u3044\u3076\u6ce5\u81ed\u3044\u4f5c\u696d\u306b\u306a\u308a\u305d\u3046\u3002\n\n\u3042\u3068\u6587\u5b57\u304c21\u7a2e\u985e\u3057\u304b\u306a\u3044\u306e\u3067\u3001\u3069\u3046\u3084\u3063\u3066\u30c7\u30b3\u30fc\u30c9\u3059\u308b\u3093\u3060\u308d\u3002Base64\u3068\u304b\u3067\u306f\u306a\u3055\u305d\u3046\u3002\n\n# \u4ed6\u306e\u4eba\u306eWriteup\n[SECCON 2016 Online CTF\u306eWrite-up\u304c\u96c6\u307e\u308b\u9b54\u6cd5\u306e\u30b9\u30d7\u30ec\u30c3\u30c9\u30b7\u30fc\u30c8](https://docs.google.com/spreadsheets/d/1ezA4v0qDjB2H7DYdU_NFZv91S6C6YrQmX5gSXAgo3d8)\n"}