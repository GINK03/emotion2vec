{"context": " More than 1 year has passed since last update.\n\n\u524d\u7f6e\u304d\n\u73fe\u5728\u6027\u80fd\u8a66\u9a13\u3067\u5229\u7528\u3057\u3066\u3044\u308bEC2\u306e\u6599\u91d1\u304c\u9ad8\u3044\u3053\u3068\u304b\u3089\u3001\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6761\u4ef6\u3068\u3057\u3066\n\nPrivateIp\u3092\u56fa\u5b9a\n\u7570\u306a\u308bAMI\u304b\u3089\u305d\u308c\u305e\u308c\u306eEC2\u3092\u30ed\u30fc\u30f3\u30c1\n\u540c\u3058ELB\u3092\u5229\u7528\n\n\u304c\u3042\u308b\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u30ea\u30af\u30a8\u30b9\u30c8\nspot-instanse-request\n\n\u53c2\u8003:http://docs.aws.amazon.com/cli/latest/reference/ec2/request-spot-instances.html\n\n\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u767a\u884c\u524d\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eattibute\u3092\u8a2d\u5b9a\u3057\u305fjson\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u8fd4\u5374\u3055\u308c\u308bJson\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8ID\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u72b6\u6cc1\u3092\u76e3\u8996\u3057\u307e\u3059\u3002\n\ninstance.json\n{\n  \"ImageId\": \"ami-12345679\",\n  \"InstanceType\": \"m3.large\",\n  \"KeyName\": \"key-name\",\n  \"NetworkInterfaces\": [\n    {\n      \"SubnetId\": \"subnet-12345678\",\n      \"DeviceIndex\": 0,\n      \"PrivateIpAddress\": \"123.45.67.890\",\n      \"Groups\": [\n        \"sg-12345678\"\n      ]\n    }\n  ],\n  \"IamInstanceProfile\": {\n      \"Name\": \"iam-name\"\n  }\n}\n\n\n\nrequest-sopt.sh\nREQUESTID=$(aws ec2 request-spot-instances --spot-price \"0.01\" --instance-count 1 --type \"one-time\" --launch-specification file://instance.json --query SpotInstanceRequests[*].SpotInstanceRequestId --output text)\n\n\n\n\u72b6\u6cc1\u76e3\u8996\ndescribe-spot-instance\n\n\u53c2\u8003:http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/spot-requests.html\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u72b6\u6cc1\u3092\u76e3\u8996\u3057\u307e\u3059\uff08\u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u79fb\u884c\u30eb\u30fc\u30eb\u306b\u95a2\u3057\u3066\u306f\u4e0a\u8a18\u53c2\u8003URL\u53c2\u7167\uff09\u3002\n\ncheck-status.sh\nwhile :\ndo\n  STATE=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].State --output text)\n  echo ${STATE}\n  if [ -z ${STATE} ]; then\n    sleep 5s\n  elif [ ${STATE} = \"active\" ]; then\n    break\n  elif [ ${STATE} = \"failed\" ]; then\n    exit 1\n  else\n    sleep 5s\n  fi\ndone\n\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cactive\u306b\u306a\u3063\u305f\u6642\u70b9\u3067ELB\u3078\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\nRoute53\u767b\u9332\n\n\u53c2\u8003:http://qiita.com/3utama/items/5a0211e6bad7380b8a27\n\n# Get Public Dns\nPUBLICDNS=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PublicDnsName --output text)\n\nif [ -z ${PUBLICDNS} ]; then                                                                                                                                          # Get Private IP\n  PRIVATEIP=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PrivateIpAddress --output text)\n  # Create Route53 A Reocrd\n  sudo cli53 rrcreate hosted_zone $3 A ${PRIVATEIP} --replace --ttl 60\nelse\n  # Create Route53 CNAME Reocrd\n  sudo cli53 rrcreate hosted_zone $3 CNAME ${PUBLICDNS} --replace --ttl 60\nfi\n\n\nELB\u8a2d\u5b9a\n\n\u53c2\u8003:http://docs.aws.amazon.com/ja_jp/ElasticLoadBalancing/latest/DeveloperGuide/elb-deregister-register-instances.html#deregister-instances-cli\n\n\u307e\u305a\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u3063\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\nget-instance-id.sh\nINSTANCEID=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].InstanceId --output text)\n\n\n\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092ELB\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\nregist-lb.sh\naws elb register-instances-with-load-balancer --load-balancer-name lbname --instances ${INSTANCEID}\n\n\n\n\u307e\u3068\u3081\n\u307e\u3068\u3081\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\u5f15\u6570\u306f\u3001\u843d\u672d\u4fa1\u683c \u30c9\u30e1\u30a4\u30f3\u540d ELB\u540d\u3067\u3059\u3002\n\u203b\u30c9\u30e1\u30a4\u30f3\u540d.json\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n\u3000\u4f5c\u6210\u3057\u305f\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u6bce\u306b\u5206\u3051\u3066\u304a\u304f\u3068\u4fbf\u5229\u304b\u3082\u3002\n\nrequest-spot-elb.sh\n# Spot Instance Request\nREQUESTID=$(aws ec2 request-spot-instances --spot-price \"$1\" --instance-count 1 --type \"one-time\" --launch-specification file://$2.json --query SpotInstanceRequests[*].SpotInstanceRequestId --output text)\n\n# Check Status\nwhile :\ndo\n  STATE=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].State --output text)\n  echo ${STATE}\n  if [ -z ${STATE} ]; then\n    sleep 10s\n  elif [ ${STATE} = \"active\" ]; then\n    break\n  elif [ ${STATE} = \"failed\" ]; then\n    exit 1\n  else\n    sleep 5s\n  fi\ndone\nif [ $? -eq 1 ];then\n  exit 1\nfi\n\n# Get Instance Id \nINSTANCEID=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].InstanceId --output text)\n\n# Get Public Dns\nPUBLICDNS=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PublicDnsName --output text)\nif [ -z ${PUBLICDNS} ]; then                                                                                                                                          # Get Private IP\n  PRIVATEIP=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PrivateIpAddress --output text)\n  # Create Route53 A Reocrd\n  sudo cli53 rrcreate hosted_zone $3 A ${PRIVATEIP} --replace --ttl 60\nelse\n  # Create Route53 CNAME Reocrd\n  sudo cli53 rrcreate hosted_zone $3 CNAME ${PUBLICDNS} --replace --ttl 60\nfi\n\n# Regist ELB\nif [ -n \"$4\" ]; then\n  aws elb register-instances-with-load-balancer --load-balancer-name $3 --instances ${INSTANCEID}\nfi\n\n\n\u76e3\u8996\u30b5\u30a4\u30af\u30eb\u306f\uff15\u79d2\u3001active\u306b\u306a\u308b\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f5\u5206\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\u4e00\u6642\u7684\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u624b\u3054\u308d\u306b\u30b3\u30b9\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u306e\u306b\u3044\u3044\u3067\u3059\u306d\u3002\n\n# \u524d\u7f6e\u304d\n\u73fe\u5728\u6027\u80fd\u8a66\u9a13\u3067\u5229\u7528\u3057\u3066\u3044\u308bEC2\u306e\u6599\u91d1\u304c\u9ad8\u3044\u3053\u3068\u304b\u3089\u3001\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u691c\u8a0e\u3059\u308b\u3053\u3068\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u6761\u4ef6\u3068\u3057\u3066\n\n- PrivateIp\u3092\u56fa\u5b9a\n- \u7570\u306a\u308bAMI\u304b\u3089\u305d\u308c\u305e\u308c\u306eEC2\u3092\u30ed\u30fc\u30f3\u30c1\n- \u540c\u3058ELB\u3092\u5229\u7528\n\n\u304c\u3042\u308b\u305f\u3081\u3001\u3061\u3087\u3063\u3068\u3081\u3093\u3069\u304f\u3055\u304b\u3063\u305f\u306e\u3067\u30e1\u30e2\u3057\u307e\u3059\u3002\n\n\n# \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u30ea\u30af\u30a8\u30b9\u30c8\nspot-instanse-request\n\n>\u53c2\u8003:http://docs.aws.amazon.com/cli/latest/reference/ec2/request-spot-instances.html\n\n\u30b9\u30dd\u30c3\u30c8\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u4f5c\u6210\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3057\u307e\u3059\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u767a\u884c\u524d\u306b\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306eattibute\u3092\u8a2d\u5b9a\u3057\u305fjson\u3092\u7528\u610f\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n\u30ea\u30af\u30a8\u30b9\u30c8\u6642\u306b\u8fd4\u5374\u3055\u308c\u308bJson\u304b\u3089\u30ea\u30af\u30a8\u30b9\u30c8ID\u3092\u53d6\u5f97\u3057\u3066\u3001\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u72b6\u6cc1\u3092\u76e3\u8996\u3057\u307e\u3059\u3002\n\n\n```instance.json\n{\n  \"ImageId\": \"ami-12345679\",\n  \"InstanceType\": \"m3.large\",\n  \"KeyName\": \"key-name\",\n  \"NetworkInterfaces\": [\n    {\n      \"SubnetId\": \"subnet-12345678\",\n      \"DeviceIndex\": 0,\n      \"PrivateIpAddress\": \"123.45.67.890\",\n      \"Groups\": [\n        \"sg-12345678\"\n      ]\n    }\n  ],\n  \"IamInstanceProfile\": {\n      \"Name\": \"iam-name\"\n  }\n}\n```\n\n```request-sopt.sh\nREQUESTID=$(aws ec2 request-spot-instances --spot-price \"0.01\" --instance-count 1 --type \"one-time\" --launch-specification file://instance.json --query SpotInstanceRequests[*].SpotInstanceRequestId --output text)\n```\n\n\n# \u72b6\u6cc1\u76e3\u8996\ndescribe-spot-instance\n\n>\u53c2\u8003:http://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/spot-requests.html\n\n\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u72b6\u6cc1\u3092\u76e3\u8996\u3057\u307e\u3059\uff08\u30b9\u30c6\u30fc\u30bf\u30b9\u306e\u79fb\u884c\u30eb\u30fc\u30eb\u306b\u95a2\u3057\u3066\u306f\u4e0a\u8a18\u53c2\u8003URL\u53c2\u7167\uff09\u3002\n\n```check-status.sh\nwhile :\ndo\n  STATE=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].State --output text)\n  echo ${STATE}\n  if [ -z ${STATE} ]; then\n    sleep 5s\n  elif [ ${STATE} = \"active\" ]; then\n    break\n  elif [ ${STATE} = \"failed\" ]; then\n    exit 1\n  else\n    sleep 5s\n  fi\ndone\n```\n\n\u30b9\u30c6\u30fc\u30bf\u30b9\u304cactive\u306b\u306a\u3063\u305f\u6642\u70b9\u3067ELB\u3078\u306e\u767b\u9332\u3092\u884c\u3044\u307e\u3059\u3002\n\n# Route53\u767b\u9332\n\n>\u53c2\u8003:http://qiita.com/3utama/items/5a0211e6bad7380b8a27\n\n\n```\n# Get Public Dns\nPUBLICDNS=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PublicDnsName --output text)\n\nif [ -z ${PUBLICDNS} ]; then                                                                                                                                          # Get Private IP\n  PRIVATEIP=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PrivateIpAddress --output text)\n  # Create Route53 A Reocrd\n  sudo cli53 rrcreate hosted_zone $3 A ${PRIVATEIP} --replace --ttl 60\nelse\n  # Create Route53 CNAME Reocrd\n  sudo cli53 rrcreate hosted_zone $3 CNAME ${PUBLICDNS} --replace --ttl 60\nfi\n```\n\n# ELB\u8a2d\u5b9a\n\n>\u53c2\u8003:http://docs.aws.amazon.com/ja_jp/ElasticLoadBalancing/latest/DeveloperGuide/elb-deregister-register-instances.html#deregister-instances-cli\n\n\u307e\u305a\u306f\u30a2\u30af\u30c6\u30a3\u30d6\u306b\u306a\u3063\u305f\u30ea\u30af\u30a8\u30b9\u30c8\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9ID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n```get-instance-id.sh\nINSTANCEID=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].InstanceId --output text)\n```\n\n\u305d\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092ELB\u306b\u767b\u9332\u3057\u307e\u3059\u3002\n\n```regist-lb.sh\naws elb register-instances-with-load-balancer --load-balancer-name lbname --instances ${INSTANCEID}\n```\n\n# \u307e\u3068\u3081\n\u307e\u3068\u3081\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u5f15\u6570\u306f\u3001\u843d\u672d\u4fa1\u683c \u30c9\u30e1\u30a4\u30f3\u540d ELB\u540d\u3067\u3059\u3002\n\u203b\u30c9\u30e1\u30a4\u30f3\u540d.json\u3067\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u30fc\u3092\u8a2d\u5b9a\u3057\u3066\u304a\u3044\u3066\u4e0b\u3055\u3044\u3002\n\u3000\u4f5c\u6210\u3057\u305f\u3044\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u6bce\u306b\u5206\u3051\u3066\u304a\u304f\u3068\u4fbf\u5229\u304b\u3082\u3002\n\n```request-spot-elb.sh\n# Spot Instance Request\nREQUESTID=$(aws ec2 request-spot-instances --spot-price \"$1\" --instance-count 1 --type \"one-time\" --launch-specification file://$2.json --query SpotInstanceRequests[*].SpotInstanceRequestId --output text)\n\n# Check Status\nwhile :\ndo\n  STATE=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].State --output text)\n  echo ${STATE}\n  if [ -z ${STATE} ]; then\n    sleep 10s\n  elif [ ${STATE} = \"active\" ]; then\n    break\n  elif [ ${STATE} = \"failed\" ]; then\n    exit 1\n  else\n    sleep 5s\n  fi\ndone\nif [ $? -eq 1 ];then\n  exit 1\nfi\n\n# Get Instance Id \nINSTANCEID=$(aws ec2 describe-spot-instance-requests --filters Name=spot-instance-request-id,Values=${REQUESTID} --query SpotInstanceRequests[*].InstanceId --output text)\n\n# Get Public Dns\nPUBLICDNS=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PublicDnsName --output text)\nif [ -z ${PUBLICDNS} ]; then                                                                                                                                          # Get Private IP\n  PRIVATEIP=$(aws ec2 describe-instances --region ap-northeast-1 --instance-ids ${INSTANCEID} --query Reservations[*].Instances[*].PrivateIpAddress --output text)\n  # Create Route53 A Reocrd\n  sudo cli53 rrcreate hosted_zone $3 A ${PRIVATEIP} --replace --ttl 60\nelse\n  # Create Route53 CNAME Reocrd\n  sudo cli53 rrcreate hosted_zone $3 CNAME ${PUBLICDNS} --replace --ttl 60\nfi\n\n# Regist ELB\nif [ -n \"$4\" ]; then\n  aws elb register-instances-with-load-balancer --load-balancer-name $3 --instances ${INSTANCEID}\nfi\n```\n\n\n\u76e3\u8996\u30b5\u30a4\u30af\u30eb\u306f\uff15\u79d2\u3001active\u306b\u306a\u308b\u307e\u3067\u306e\u30bf\u30a4\u30e0\u30a2\u30a6\u30c8\u306f5\u5206\u3067\u3084\u3063\u3066\u307e\u3059\u3002\n\u4e00\u6642\u7684\u306a\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u3092\u624b\u3054\u308d\u306b\u30b3\u30b9\u30c8\u30c0\u30a6\u30f3\u3059\u308b\u306e\u306b\u3044\u3044\u3067\u3059\u306d\u3002\n\n", "tags": ["AWS", "cli", "SpotInstance", "route53"]}