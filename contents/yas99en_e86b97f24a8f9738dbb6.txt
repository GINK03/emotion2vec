{"tags": ["Java", "\u30e9\u30e0\u30c0\u5f0f", "\u30e1\u30e2\u5316"], "context": "\u300cJava\u306b\u3088\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u306e\u300c7.2.3 \u8a08\u7b97\u7d50\u679c\u306e\u30e1\u30e2\u5316\u300d\u306b\u518d\u5e30\u8a08\u7b97\u3092\u30e1\u30e2\u5316\u306b\u3088\u3063\u3066\u9ad8\u901f\u5316\u3059\u308b\u8a71\u984c\u304c\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\u5143\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\n\nhttps://media.pragprog.com/titles/vsjava8/code/recur/fpij/RodCutterMemoized.java\nhttps://media.pragprog.com/titles/vsjava8/code/recur/fpij/Memoizer.java\n\nMemoizer\u30af\u30e9\u30b9\u306f\u3001\u6c4e\u7528\u3063\u307d\u304f\u4f5c\u3063\u3066\u3042\u308b\u3068\u306f\u3044\u3048\u3001\u5f15\u6570\u304c\u4e00\u500b\u9650\u5b9a\u3060\u3063\u305f\u308a\u3068\u3001\u672c\u5f53\u306b\u5fc5\u8981\u306a\u306e\u304b\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u306e\u8981\u4e0d\u8981\u306b\u3064\u3044\u3066\u306f\u898b\u9001\u308a\u307e\u3059\u3002\n\u304a\u984c\u306fRodCutterMemoized\u30af\u30e9\u30b9\u306emaxProfit()\u306e\u65b9\u3067\u3059\u3002\n\u5143\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n  public int maxProfit(final int rodLength) {\n    BiFunction<Function<Integer, Integer>, Integer, Integer> compute =\n      (func, length) -> {\n        int profit = (length <= prices.size()) ? prices.get(length - 1) : 0;\n        for(int i = 1; i < length; i++) {\n          int priceWhenCut = func.apply(i) + func.apply(length - i);\n          if(profit < priceWhenCut) profit = priceWhenCut;\n        }\n        return profit;\n      };\n    return callMemoized(compute, rodLength);\n  }\n\n\u8aad\u3081\u306a\u3044\u3002\u3002\u3002\n\u3058\u3083\u3041\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n  public int maxProfit(final int rodLength) {\n      return callMemoized(this::computeMaxProfit, rodLength);\n  }\n\n  private int computeMaxProfit(Function<Integer, Integer> func, final int length) {\n      int profit = (length <= prices.size()) ? prices.get(length - 1) : 0;\n      for(int i = 1; i < length; i++) {\n          int priceWhenCut = func.apply(i) + func.apply(length - i);\n          if(profit < priceWhenCut) profit = priceWhenCut;\n      }\n      return profit;\n  }\n\n\u306f\u3044\u3001\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u306e\u6559\u8a13\u306f\u3001\u300c\u30e9\u30e0\u30c0\u306e\u4e2d\u306b\u305f\u304f\u3055\u3093\u66f8\u304f\u306a\u300d\u3067\u3059\u3002\u6ca2\u5c71\u66f8\u304f\u304f\u3089\u3044\u306a\u3089\u3001private\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3067\u6e21\u3057\u307e\u3057\u3087\u3046\u3002\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u3001\u672c\u6587\u3067\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u3001computeMaxProfit\u306e\u5f15\u6570func\u306f\u3001computeMaxProfit\u81ea\u8eab\u306e\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u76f4\u63a5\u8a08\u7b97\u3059\u308bcomputeMaxProfit\u3068\u3061\u304c\u3063\u3066\u3001func\u306f\u5185\u90e8\u7684\u306b\u904e\u53bb\u306e\u8a08\u7b97\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u306e\u3067\u3001func.apply(i)\u3092\u547c\u3093\u3060\u6642\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u518d\u3073computeMaxProfit\u304c\u547c\u3070\u308c\u3066\u518d\u5e30\u306b\u306a\u308a\u307e\u3059\u3002\n\u300cJava\u306b\u3088\u308b\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u300d\u306e\u300c7.2.3 \u8a08\u7b97\u7d50\u679c\u306e\u30e1\u30e2\u5316\u300d\u306b\u518d\u5e30\u8a08\u7b97\u3092\u30e1\u30e2\u5316\u306b\u3088\u3063\u3066\u9ad8\u901f\u5316\u3059\u308b\u8a71\u984c\u304c\u8f09\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u5143\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u516c\u5f0f\u30b5\u30a4\u30c8\u306b\u3042\u308a\u307e\u3059\u3002\n\n* https://media.pragprog.com/titles/vsjava8/code/recur/fpij/RodCutterMemoized.java\n* https://media.pragprog.com/titles/vsjava8/code/recur/fpij/Memoizer.java\n\nMemoizer\u30af\u30e9\u30b9\u306f\u3001\u6c4e\u7528\u3063\u307d\u304f\u4f5c\u3063\u3066\u3042\u308b\u3068\u306f\u3044\u3048\u3001\u5f15\u6570\u304c\u4e00\u500b\u9650\u5b9a\u3060\u3063\u305f\u308a\u3068\u3001\u672c\u5f53\u306b\u5fc5\u8981\u306a\u306e\u304b\u3068\u3044\u3046\u7591\u554f\u3082\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3053\u3061\u3089\u306e\u8981\u4e0d\u8981\u306b\u3064\u3044\u3066\u306f\u898b\u9001\u308a\u307e\u3059\u3002\n\n\u304a\u984c\u306fRodCutterMemoized\u30af\u30e9\u30b9\u306emaxProfit()\u306e\u65b9\u3067\u3059\u3002\n\u5143\u306e\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\n```java\n  public int maxProfit(final int rodLength) {\n    BiFunction<Function<Integer, Integer>, Integer, Integer> compute =\n      (func, length) -> {\n        int profit = (length <= prices.size()) ? prices.get(length - 1) : 0;\n        for(int i = 1; i < length; i++) {\n          int priceWhenCut = func.apply(i) + func.apply(length - i);\n          if(profit < priceWhenCut) profit = priceWhenCut;\n        }\n        return profit;\n      };\n    return callMemoized(compute, rodLength);\n  }\n```\n\n\u8aad\u3081\u306a\u3044\u3002\u3002\u3002\n\u3058\u3083\u3041\u30ea\u30d5\u30a1\u30af\u30bf\u30ea\u30f3\u30b0\u3059\u308b\u3068\u3069\u3046\u306a\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u3053\u3046\u306a\u308a\u307e\u3059\u3002\n\n```java\n  public int maxProfit(final int rodLength) {\n      return callMemoized(this::computeMaxProfit, rodLength);\n  }\n\n  private int computeMaxProfit(Function<Integer, Integer> func, final int length) {\n      int profit = (length <= prices.size()) ? prices.get(length - 1) : 0;\n      for(int i = 1; i < length; i++) {\n          int priceWhenCut = func.apply(i) + func.apply(length - i);\n          if(profit < priceWhenCut) profit = priceWhenCut;\n      }\n      return profit;\n  }\n```\n\n\u306f\u3044\u3001\u30b9\u30c3\u30ad\u30ea\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u3067\u306e\u6559\u8a13\u306f\u3001\u300c\u30e9\u30e0\u30c0\u306e\u4e2d\u306b\u305f\u304f\u3055\u3093\u66f8\u304f\u306a\u300d\u3067\u3059\u3002\u6ca2\u5c71\u66f8\u304f\u304f\u3089\u3044\u306a\u3089\u3001private\u30e1\u30bd\u30c3\u30c9\u3092\u4f5c\u3063\u3066\u3001\u30e1\u30bd\u30c3\u30c9\u53c2\u7167\u3067\u6e21\u3057\u307e\u3057\u3087\u3046\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u5185\u5bb9\u306b\u3064\u3044\u3066\u306f\u3001\u672c\u6587\u3067\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u304c\u3001\u7c21\u5358\u306b\u3044\u3046\u3068\u3001computeMaxProfit\u306e\u5f15\u6570func\u306f\u3001computeMaxProfit\u81ea\u8eab\u306e\u30e9\u30c3\u30d1\u30fc\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u76f4\u63a5\u8a08\u7b97\u3059\u308bcomputeMaxProfit\u3068\u3061\u304c\u3063\u3066\u3001func\u306f\u5185\u90e8\u7684\u306b\u904e\u53bb\u306e\u8a08\u7b97\u7d50\u679c\u3092\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3066\u3044\u308b\u306e\u3067\u3001func.apply(i)\u3092\u547c\u3093\u3060\u6642\u306f\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u3042\u308c\u3070\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u8fd4\u3063\u3066\u304d\u307e\u3059\u3002\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u306a\u3044\u5834\u5408\u306f\u3001\u518d\u3073computeMaxProfit\u304c\u547c\u3070\u308c\u3066\u518d\u5e30\u306b\u306a\u308a\u307e\u3059\u3002\n\n\n"}