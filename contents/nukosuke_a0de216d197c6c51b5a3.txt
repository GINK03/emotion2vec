{"context": "\u7af6\u30d7\u30ed\u306b\u3042\u308a\u304c\u3061\u306a\n0 1 2 3 4\n\n\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092[0, 1, 2, 3, 4]\u306a\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3002\u8aad\u307f\u8fbc\u307f\u306f\u6a19\u6e96\u5165\u529b\u304b\u3089\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\n\nRuby\nN = gets.split.map(&:to_i)\n\n\u6c17\u6301\u3061\u3044\u3044\u3002\n\nPerl\nmy @N = map { $_ + 0 } split ' ', <>;\n\n\u6570\u5024\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b+0\u3057\u305f\u3002\n\nPerl6\nmy @N = get().split(' ').map({.Int});\n\n5\u306b\u6bd4\u3079\u3066\u82e5\u5e72Ruby\u3063\u307d\u304f\u306a\u3063\u305f\u3002\n\nPython\nN = map(lambda s:int(s), raw_input().split(' '))\n\n\u7279\u306b\u611f\u60f3\u306f\u306a\u3044\u3002\n\nPHP\n<?php $N = array_map('intval', explode(' ', trim(fgets(STDIN))));\n\n\u7206\u767a\u3057\u305d\u3046\u3002\n\nNode.js\nvar N = require('fs').readFileSync('/dev/stdin', 'utf8').split(' ').map(Number);\n\nNode\u306b\u7d44\u307f\u8fbc\u307f\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u304b\u66f8\u3051\u306a\u3044\u3068\u601d\u3046\u3002\n\nLua\nlocal N = (function(n) for s in string.gmatch(io.read(), \"[^%s]+\") do table.insert(n, s) end return n end)({})\n\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8ca7\u5f31\u306a\u306e\u3067\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3068\u3044\u3046\u306b\u306f\u3061\u3087\u3063\u3068\u7121\u7406\u304c\u3042\u308b\u611f\u3058\u306b\u306a\u3063\u305f\u3002\n\nElixir\n\"\" |> IO.gets |> String.trim_trailing |> String.split(\" \") |> Enum.map(&String.to_integer(&1))\n\n\u3082\u3063\u3068\u8ce2\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3046\u3002\n\u7af6\u30d7\u30ed\u306b\u3042\u308a\u304c\u3061\u306a\n\n```\n0 1 2 3 4\n```\n\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u3092`[0, 1, 2, 3, 4]`\u306a\u30ea\u30b9\u30c8\u306b\u5909\u63db\u3059\u308b\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3002\u8aad\u307f\u8fbc\u307f\u306f\u6a19\u6e96\u5165\u529b\u304b\u3089\u3092\u60f3\u5b9a\u3057\u3066\u3044\u308b\u3002\n\n# Ruby\n```rb\nN = gets.split.map(&:to_i)\n```\n\u6c17\u6301\u3061\u3044\u3044\u3002\n\n# Perl\n```pl\nmy @N = map { $_ + 0 } split ' ', <>;\n```\n\u6570\u5024\u306b\u5909\u63db\u3059\u308b\u305f\u3081\u306b`+0`\u3057\u305f\u3002\n\n# Perl6\n```pl\nmy @N = get().split(' ').map({.Int});\n```\n5\u306b\u6bd4\u3079\u3066\u82e5\u5e72Ruby\u3063\u307d\u304f\u306a\u3063\u305f\u3002\n\n# Python\n```py\nN = map(lambda s:int(s), raw_input().split(' '))\n```\n\u7279\u306b\u611f\u60f3\u306f\u306a\u3044\u3002\n\n# PHP\n```php\n<?php $N = array_map('intval', explode(' ', trim(fgets(STDIN))));\n```\n\u7206\u767a\u3057\u305d\u3046\u3002\n\n# Node.js\n```js\nvar N = require('fs').readFileSync('/dev/stdin', 'utf8').split(' ').map(Number);\n```\nNode\u306b\u7d44\u307f\u8fbc\u307f\u306e\u30e2\u30b8\u30e5\u30fc\u30eb\u3060\u3051\u3060\u3068\u3053\u3093\u306a\u611f\u3058\u306b\u3057\u304b\u66f8\u3051\u306a\u3044\u3068\u601d\u3046\u3002\n\n# Lua\n```lua\nlocal N = (function(n) for s in string.gmatch(io.read(), \"[^%s]+\") do table.insert(n, s) end return n end)({})\n```\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u8ca7\u5f31\u306a\u306e\u3067\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc\u3068\u3044\u3046\u306b\u306f\u3061\u3087\u3063\u3068\u7121\u7406\u304c\u3042\u308b\u611f\u3058\u306b\u306a\u3063\u305f\u3002\n\n# Elixir\n```ex\n\"\" |> IO.gets |> String.trim_trailing |> String.split(\" \") |> Enum.map(&String.to_integer(&1))\n```\n\u3082\u3063\u3068\u8ce2\u3044\u3084\u308a\u65b9\u304c\u3042\u308b\u3068\u601d\u3046\u3002\n", "tags": ["\u7af6\u6280\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0", "\u30ef\u30f3\u30e9\u30a4\u30ca\u30fc"]}