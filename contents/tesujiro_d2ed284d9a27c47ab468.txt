{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\nAmazon\u30b5\u30a4\u30c8\u304b\u3089API\u3067\u5546\u54c1\u540d\u3068\u6700\u4f4e\u4fa1\u683c\u3092\u53d6\u5f97\u3057\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u203bAMAZON\u306eAPI\u4ed5\u69d8\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4ed5\u69d8\u304c\u5909\u66f4\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u4ee5\u4e0b\u306f2015\u5e743\u670810\u65e5\u6642\u70b9\u3067\u52d5\u4f5c\u3057\u305f\u3082\u306e\u3002\n\n\u60f3\u5b9a\u74b0\u5883\n\nPython 2.7\nAmazon\u306eAPI\u306b\u306fbottlenose\u3053\u308c\u3092\u4f7f\u7528\u3002\nXML\u306b\u306fBeautifulSoup 3.2.1 \u3053\u3053\u3092\u4f7f\u7528\u3002\n\n\n\u4e8b\u524d\u6e96\u5099\n\nAmazon\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u53d6\u5f97\u3002\uff08Security Credentials->Access Keys\uff09\n\u30a2\u30bd\u30b7\u30a8\u30a4\u30c8\uff08\u30a2\u30d5\u30a3\u30ea\u30a8\u30a4\u30c8\uff09\u306e\u767b\u9332\u3002\nbottlenose\u3068BeautifulSoup\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\npip install bottlenose\npip install BeautifulSoup\n\n\n\u30b3\u30fc\u30c9\n# -*- coding: utf-8 -*-\nimport bottlenose\nfrom BeautifulSoup import BeautifulSoup\nimport random\nimport time\nfrom urllib2 import HTTPError\n\nAWS_ACCESS_KEY_ID='******' #\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\nAWS_SECRET_ACCESS_KEY='******' #\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\nAWS_ASSOCIATE_TAG='******-22' #\u30a2\u30bd\u30b7\u30a8\u30a4\u30c8\uff08\u30a2\u30d5\u30a3\u30ea\u30a8\u30a4\u30c8\uff09\u306e\u767b\u9332\u304c\u5fc5\u8981\n\nSearchIndex=\"Books\" #\u53c2\u7167 https://images-na.ssl-images-amazon.com/images/G/09/associates/paapi/dg/index.html?JPSearchIndexParamForItemsearch.html\nKeywords=\"Python\" #\u691c\u7d22\u30ad\u30fc\u30ef\u30fc\u30c9\n\ndef error_handler(err):\n  ex = err['exception']\n  if isinstance(ex, HTTPError) and ex.code == 503:\n    time.sleep(random.expovariate(0.1))\n    return True\n\namazon = bottlenose.Amazon(AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ASSOCIATE_TAG,Region=\"JP\",ErrorHandler=error_handler)\n\n#\u7d50\u679c\u30da\u30fc\u30b8\u6570\u53d6\u5f97\nresponse = amazon.ItemSearch(\n             SearchIndex=SearchIndex,\n             Keywords=Keywords,\n             ResponseGroup=\"ItemIds\",\n             ErrorHandler=error_handler)\nsoup=BeautifulSoup(response)\ntotalpages=int(soup.first('totalpages').text)\nprint \"totalPages=\",totalpages\n\n#\u5404\u30da\u30fc\u30b8\u53d6\u5f97\nfor page in range(totalpages) :\n  print \"=\"*20,\"page\",page+1\n  if page >= 10: # max 10 pages\n    break\n  response = amazon.ItemSearch(\n               SearchIndex=SearchIndex,\n               Keywords=Keywords,\n               ResponseGroup=\"Small,OfferSummary\",\n               ItemPage=page+1,\n               ErrorHandler=error_handler)\n  soup=BeautifulSoup(response)\n  items = soup.findAll('item')\n  for item in items:\n    print item.title.text ,\n    if item.offersummary and item.offersummary.lowestnewprice:\n      print item.offersummary.lowestnewprice.formattedprice.text,\n    print\n\n\n\u5206\u304b\u3063\u305f\u3053\u3068\u3002\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3002\n\nAPI\u306e\u547c\u51fa\u3057\u56de\u6570\u306e\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u3001\u547c\u51fa\u3057\u5931\u6557\u6642\u306b\u306fsleep\u3057\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u3002\n\u691c\u7d22\u306f\u6700\u5927100\u4ef6\uff0810\u4ef6\u00d710\u30da\u30fc\u30b8\uff09\u307e\u3067\u3002\uff082011\u5e74\u3054\u308d\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5236\u7d04\uff09\n\u691c\u7d22\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u65b0\u54c1\u306e\u307f\u306e\u306f\u305a\u304c\u3001\u4e2d\u53e4\u54c1\u307e\u3067\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u3002\uff08\u65b0\u54c1\u4fa1\u683c\u304c\u3046\u307e\u304f\u53d6\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002\uff09\n\n# \u76ee\u7684\nAmazon\u30b5\u30a4\u30c8\u304b\u3089API\u3067\u5546\u54c1\u540d\u3068\u6700\u4f4e\u4fa1\u683c\u3092\u53d6\u5f97\u3057\u305f\u306e\u3067\u30e1\u30e2\u3057\u3066\u304a\u304f\u3002\n\u203bAMAZON\u306eAPI\u4ed5\u69d8\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u4ed5\u69d8\u304c\u5909\u66f4\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u4ee5\u4e0b\u306f2015\u5e743\u670810\u65e5\u6642\u70b9\u3067\u52d5\u4f5c\u3057\u305f\u3082\u306e\u3002\n\n# \u60f3\u5b9a\u74b0\u5883\n* Python 2.7\n* Amazon\u306eAPI\u306b\u306fbottlenose[\u3053\u308c](https://github.com/lionheart/bottlenose)\u3092\u4f7f\u7528\u3002\n* XML\u306b\u306fBeautifulSoup 3.2.1 [\u3053\u3053](http://www.crummy.com/software/BeautifulSoup/)\u3092\u4f7f\u7528\u3002\n\n# \u4e8b\u524d\u6e96\u5099\n* Amazon\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u30ad\u30fc\u3092\u53d6\u5f97\u3002\uff08Security Credentials->Access Keys\uff09\n* \u30a2\u30bd\u30b7\u30a8\u30a4\u30c8\uff08\u30a2\u30d5\u30a3\u30ea\u30a8\u30a4\u30c8\uff09\u306e\u767b\u9332\u3002\n* bottlenose\u3068BeautifulSoup\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3002\n\n```py\npip install bottlenose\npip install BeautifulSoup\n```\n\n# \u30b3\u30fc\u30c9\n\n```py\n# -*- coding: utf-8 -*-\nimport bottlenose\nfrom BeautifulSoup import BeautifulSoup\nimport random\nimport time\nfrom urllib2 import HTTPError\n\nAWS_ACCESS_KEY_ID='******' #\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\nAWS_SECRET_ACCESS_KEY='******' #\u30de\u30cd\u30fc\u30b8\u30e1\u30f3\u30c8\u30b3\u30f3\u30bd\u30fc\u30eb\u304b\u3089\u53d6\u5f97\nAWS_ASSOCIATE_TAG='******-22' #\u30a2\u30bd\u30b7\u30a8\u30a4\u30c8\uff08\u30a2\u30d5\u30a3\u30ea\u30a8\u30a4\u30c8\uff09\u306e\u767b\u9332\u304c\u5fc5\u8981\n\nSearchIndex=\"Books\" #\u53c2\u7167 https://images-na.ssl-images-amazon.com/images/G/09/associates/paapi/dg/index.html?JPSearchIndexParamForItemsearch.html\nKeywords=\"Python\" #\u691c\u7d22\u30ad\u30fc\u30ef\u30fc\u30c9\n\ndef error_handler(err):\n  ex = err['exception']\n  if isinstance(ex, HTTPError) and ex.code == 503:\n    time.sleep(random.expovariate(0.1))\n    return True\n\namazon = bottlenose.Amazon(AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_ASSOCIATE_TAG,Region=\"JP\",ErrorHandler=error_handler)\n\n#\u7d50\u679c\u30da\u30fc\u30b8\u6570\u53d6\u5f97\nresponse = amazon.ItemSearch(\n             SearchIndex=SearchIndex,\n             Keywords=Keywords,\n             ResponseGroup=\"ItemIds\",\n             ErrorHandler=error_handler)\nsoup=BeautifulSoup(response)\ntotalpages=int(soup.first('totalpages').text)\nprint \"totalPages=\",totalpages\n\n#\u5404\u30da\u30fc\u30b8\u53d6\u5f97\nfor page in range(totalpages) :\n  print \"=\"*20,\"page\",page+1\n  if page >= 10: # max 10 pages\n    break\n  response = amazon.ItemSearch(\n               SearchIndex=SearchIndex,\n               Keywords=Keywords,\n               ResponseGroup=\"Small,OfferSummary\",\n               ItemPage=page+1,\n               ErrorHandler=error_handler)\n  soup=BeautifulSoup(response)\n  items = soup.findAll('item')\n  for item in items:\n    print item.title.text ,\n    if item.offersummary and item.offersummary.lowestnewprice:\n      print item.offersummary.lowestnewprice.formattedprice.text,\n    print\n```\n\n# \u5206\u304b\u3063\u305f\u3053\u3068\u3002\u5206\u304b\u3089\u306a\u304b\u3063\u305f\u3053\u3068\u3002\n* API\u306e\u547c\u51fa\u3057\u56de\u6570\u306e\u5236\u9650\u304c\u3042\u308b\u306e\u3067\u3001\u547c\u51fa\u3057\u5931\u6557\u6642\u306b\u306fsleep\u3057\u3066\u30ea\u30c8\u30e9\u30a4\u3059\u308b\u3002\n* \u691c\u7d22\u306f\u6700\u5927100\u4ef6\uff0810\u4ef6\u00d710\u30da\u30fc\u30b8\uff09\u307e\u3067\u3002\uff082011\u5e74\u3054\u308d\u306b\u8a2d\u5b9a\u3055\u308c\u305f\u5236\u7d04\uff09\n* \u691c\u7d22\u6642\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u306f\u65b0\u54c1\u306e\u307f\u306e\u306f\u305a\u304c\u3001\u4e2d\u53e4\u54c1\u307e\u3067\u542b\u307e\u308c\u3066\u3057\u307e\u3046\u3002\uff08\u65b0\u54c1\u4fa1\u683c\u304c\u3046\u307e\u304f\u53d6\u308c\u306a\u3044\u5834\u5408\u304c\u3042\u308b\u3002\uff09\n", "tags": ["Amazon", "Python"]}