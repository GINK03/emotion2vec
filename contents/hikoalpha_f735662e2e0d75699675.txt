{"context": "\nArduino core for ESP8266 WiFi chip\u3067\u306f\u3057\u3070\u3089\u304f\u306e\u9593\u3001SPI\u306eMode 3(CPOL\u306eActive Low)\u304c\u4f7f\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u6700\u8fd1\u306b\u306a\u3063\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u306f\u3001ESP8266\u30673\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3092\u4f7f\u3063\u305fSPI\u901a\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\n\u6e96\u5099\n\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\nESP8266 ESPr Developer\uff08ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\uff09\uff1a\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\n\n\n\u3053\u306e\u958b\u767a\u30dc\u30fc\u30c9\u306fESP8266\u306eBoot\u30e2\u30fc\u30c9(Flash Boot/UART Download)\u5207\u66ff\u3092\u81ea\u52d5\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u5358\u4f53\u3067\u8cb7\u3046\u3088\u308a\u3082\u9ad8\u304f\u4ed8\u304d\u307e\u3059\u304c\u4ed6\u306b\u3082USB\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30013.3V\u96fb\u6e90\u3001\u30ea\u30bb\u30c3\u30c8\u56de\u8def\u6a5f\u80fd\u306e\u642d\u8f09\u3092\u8003\u3048\u308b\u3068ESP8266\u306e\u958b\u767a\u3067\u306f\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n\n3\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30ebADXL345\uff1a\u79cb\u6708\u96fb\u5b50\n\n\nADXL345\u306fI2C\u3067\u3082\u901a\u4fe1\u3067\u304d\u307e\u3059\u304c\u3001SPI\u3067\u901a\u4fe1\u3059\u308b\u5834\u5408\u306f\u5148\u7a0b\u8ff0\u3079\u305fMode 3\u306b\u3088\u308b\u901a\u4fe1\u5236\u5fa1\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u914d\u7dda\nESP8266\u3068ADXL345\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u307e\u3059\u3002\n\nESP8266\u306e\u30d4\u30f3\u914d\u7f6e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u753b\u50cf\u306f\u3068\u3066\u3082\u308f\u304b\u308a\u3084\u3059\u3044ESP-WROOM-02\u3092\u4f7f\u3063\u3066\u307f\u308b : Eleclog.\u3055\u3093\u304b\u3089\u304a\u501f\u308a\u307e\u3057\u307e\u3057\u305f\u3002\n\n\u56f3\u306fESP8266(ESP-WROOM-02)\u30e2\u30b8\u30e5\u30fc\u30eb\u5358\u4f53\u306e\u30d4\u30f3\u914d\u7f6e\u3067\u3059\u304c\u3001\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u793e\u306eESPr Developer\u3082\u5927\u4f53\u4f3c\u305f\u3088\u3046\u306a\u914d\u7f6e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6ce8\u610f\u3059\u3079\u304d\u306f\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306fCS\u306e\u30d4\u30f3\u3092IO15\u3067\u306f\u306a\u304fIO5\u306b\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u70b9\u3067\u3059\u3002Arduino core for ESP8266 WiFi chip\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4e0a\u306e\u56f3\u306e\u3088\u3046\u306b\u30d4\u30f3\u306e\u6a5f\u80fd\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001ESP8266\u306f\u5143\u3005IO\u30d4\u30f3\u306b\u4efb\u610f\u306e\u6a5f\u80fd\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3086\u3048\u306bESP8266\u95a2\u9023\u306e\u69d8\u3005\u306a\u8a18\u4e8b\u3067\u30d4\u30f3\u914d\u7f6e\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u52d5\u4f5c\u3059\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u306f\u3053\u3053\u306b\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u3057\u6df7\u4e71\u3057\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001WEB\u3092\u53c2\u8003\u306b\u3057\u3066ESP8266\u3092\u958b\u767a\u3059\u308b\u3068\u304d\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u3064\u3064\u914d\u7dda\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\nSPI\u6a5f\u80fd\n\u30c7\u30d5\u30a9\u30eb\u30c8\u30d4\u30f3\n\u4eca\u56de\u8a2d\u5b9a\u30d4\u30f3\nADXL345\n\n\n\n\nCLK\nIO14\nIO14\nSCL\n\n\nMISO\nIO12\nIO12\nSDIO\n\n\nMOSI\nIO13\nIO13\nSDA\n\n\nCS\nIO15\nIO5\nCS\n\n\n\n\u307e\u305f\u3001CS\u306e\u6a5f\u80fd\u306e\u5272\u308a\u5f53\u3066\u3092IO15\u304b\u3089IO5\u306b\u5909\u3048\u3066\u3044\u308b\u7406\u7531\u306f\u3001IO15\u304c\u30e2\u30fc\u30c9\u5207\u66ff\u306e\u6a5f\u80fd\u3092\u62c5\u3063\u3066\u3044\u308b\u305f\u3081ADXL345\u3092\u63a5\u7d9a\u3057\u305f\u3068\u304d\u306b\u30e2\u30fc\u30c9\u5207\u66ff\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u306a\u3044\u53ef\u80fd\u6027\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u3067\u3059\u3002(\u5b9f\u969b\u63a5\u7d9a\u3057\u305f\u3068\u3053\u308d\u30ed\u30b0\u304c\u6b63\u5e38\u306b\u51fa\u529b\u3055\u308c\u305a\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f)\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002202. ADXL345 - Fab\u8535 Docs\u3055\u3093\u306e\u30b3\u30fc\u30c9\u3092\u6d41\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u300232bit CPU\u306eESP8266\u306b\u5408\u308f\u305b\u3066\u5909\u6570\u306e\u578b\u3092\u5909\u3048\u3066\u3042\u308a\u307e\u3059\u3002\u66f8\u304d\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\n\u9805\u76ee\n\u5024\n\n\n\n\n\u30dc\u30fc\u30c9\nGeneric ESP8266 Module\n\n\nFlash Mode\nQIO\n\n\nFlash Frequency\n80MHz\n\n\nCPU Frequency\n80MHz\n\n\nFlash Size\n4M(1M SPIFFS)\n\n\nDebug port\nSerial\n\n\nDebug Level\n\u306a\u3057\n\n\nReset Method\nnodemcu\n\n\nUpload Speed\n115200\n\n\n\n\nADXL345_SPI.ino\n#include <SPI.h>\n\n//ADXL345 \u30ec\u30b8\u30b9\u30bf\u30a2\u30c9\u30ec\u30b9\n#define BW_RATE     0x2C    //Data rate and power mode control\n#define POWER_CTL   0x2D    //Power Control Register\n#define DATA_FORMAT 0x31    //Data format control\n#define DATAX0      0x32    //X-Axis Data 0\n\n#define SS 5 //\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3089\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u518d\u5b9a\u7fa9(IO15 -> IO5)\n\nchar values[10];\nint16_t x,y,z;\nfloat xg, yg, zg;\n\nvoid setup() {\n  SPI.begin();\n  SPI.setDataMode(SPI_MODE3);\n  SPI.setBitOrder(MSBFIRST);\n\n  Serial.begin(115200);\n\n  // SS\u3092Hight\u306b\n  pinMode(SS, OUTPUT);\n  digitalWrite(SS, HIGH);\n\n  // ADXL345\u521d\u671f\u5316\n  writeRegister(DATA_FORMAT, 0x03); // \u00b116g 10bit\n  writeRegister(POWER_CTL, 0x08);  // \u6e2c\u5b9a\u30e2\u30fc\u30c9\n}\n\nvoid loop() {\n  // DATAX0\u30ec\u30b8\u30b9\u30bf\u304b\u30896\u30d0\u30a4\u30c8\u3092\u53d6\u5f97\n  readRegister(DATAX0, 6, values);\n\n  // 2Byte\u306e\u30c7\u30fc\u30bf\u3092\u518d\u69cb\u6210\n  x  = ((int16_t)values[1]<<8)|(int16_t)values[0];\n  y  = ((int16_t)values[3]<<8)|(int16_t)values[2];\n  z  = ((int16_t)values[5]<<8)|(int16_t)values[4];\n\n  // 0.03125 = (16*2)/(2^10)\n  xg = x * 0.03125;\n  yg = y * 0.03125;\n  zg = z * 0.03125;\n\n  // \u30ed\u30b0\u51fa\u529b\n  Serial.print(xg);\n  Serial.print(\"\\t\");\n  Serial.print(yg);\n  Serial.print(\"\\t\");\n  Serial.println(zg);\n}\n\nvoid writeRegister(char registerAddress, char value) {\n // SPI\u958b\u59cb\u6642\u306bSS\u3092LOW\u306b\u3059\u308b\n digitalWrite(SS, LOW);\n // \u30ec\u30b8\u30b9\u30bf\u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\n SPI.transfer(registerAddress);\n // \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\u5024\u9001\u4fe1\n SPI.transfer(value);\n // SPI\u7d42\u4e86\u6642\u306bCS\u3092HIGH\u306b\u3059\u308b\n digitalWrite(SS, HIGH);\n}\n\nvoid readRegister(char registerAddress, int16_t numBytes, char * values) {\n // \u66f8\u304d\u8fbc\u307f\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n char address = 0x80 | registerAddress;\n // \u8907\u6570\u30d0\u30a4\u30c8\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n if(numBytes > 1)address = address | 0x40;\n // SPI\u958b\u59cb\u6642\u306bSS\u3092LOW\u306b\u3059\u308b\n digitalWrite(SS, LOW);\n // \u8aad\u307f\u51fa\u3057\u5148\u30ec\u30b8\u30b9\u30bf\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u9001\u4fe1\n SPI.transfer(address);\n // \u5024\u306e\u8aad\u307f\u51fa\u3057\n for(int16_t i=0; i<numBytes; i++) {\n   values[i] = SPI.transfer(0x00);\n }\n // SPI\u7d42\u4e86\u6642\u306bCS\u3092HIGH\u306b\u3059\u308b\n digitalWrite(SS, HIGH);\n}\n\n\n\n\u7d50\u679c\n\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3067\u78ba\u8a8d\u3059\u308b\u3068\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u677f\u3092\u50be\u3051\u308b\u3068\u5024\u304c\u5909\u5316\u3057\u307e\u3059\u3002\u30dc\u30fc\u30ec\u30fc\u30c8\u306f115200 bps\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3057\u3001\u6587\u5b57\u5316\u3051\u3059\u308b\u5834\u5408\u306f\u4e00\u5ea6\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u30021\u5217\u76ee\u304cX\u8ef8\u30012\u5217\u76ee\u304cY\u8ef8\u30013\u5217\u76ee\u304cZ\u8ef8\u306e\u5024\u3067\u3059\u3002\n\n\n(\u88dc\u8db3)SPI\u901a\u4fe1\u306eMode\u306b\u3064\u3044\u3066\nIO14(CLK)\u30d4\u30f3\u306e\u51fa\u529b\u6ce2\u5f62\u3092\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u306fCPOL\u306e\u5236\u5fa1\u304c\u3067\u304d\u305a\u306bMode 1(Mode 2)\u306eActive High\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nMode 1\n\u3057\u304b\u3057\u3001\u6700\u8fd1\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fee\u6b63\u3055\u308cMode 3(Mode 4)\u3092\u6307\u5b9a\u3059\u308b\u3068\u6b63\u5e38\u306bActive Low\u306e\u6ce2\u5f62\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\nMode 3\n![IMAG3080.jpg](https://qiita-image-store.s3.amazonaws.com/0/70925/c3faf4df-b691-22df-52b9-45973038926a.jpeg)\n[Arduino core for ESP8266 WiFi chip](https://github.com/esp8266/Arduino)\u3067\u306f\u3057\u3070\u3089\u304f\u306e\u9593\u3001SPI\u306eMode 3(CPOL\u306eActive Low)\u304c\u4f7f\u3048\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\u6700\u8fd1\u306b\u306a\u3063\u3066\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\u3053\u3053\u3067\u306f\u3001ESP8266\u30673\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u3092\u4f7f\u3063\u305fSPI\u901a\u4fe1\u3092\u884c\u3044\u307e\u3059\u3002\n\n# \u6e96\u5099\n\u4ee5\u4e0b\u306e\u3082\u306e\u3092\u7528\u610f\u3057\u307e\u3059\u3002\n\n- ESP8266 [ESPr Developer\uff08ESP-WROOM-02\u958b\u767a\u30dc\u30fc\u30c9\uff09](https://www.switch-science.com/catalog/2500/)\uff1a\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\n\n![ESPr_Developer.png](https://qiita-image-store.s3.amazonaws.com/0/70925/4c15edf7-bc35-28b9-0e14-e5cc1d56db4d.png)\n\n\u3053\u306e\u958b\u767a\u30dc\u30fc\u30c9\u306fESP8266\u306eBoot\u30e2\u30fc\u30c9(Flash Boot/UART Download)\u5207\u66ff\u3092\u81ea\u52d5\u3067\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\u30e2\u30b8\u30e5\u30fc\u30eb\u5358\u4f53\u3067\u8cb7\u3046\u3088\u308a\u3082\u9ad8\u304f\u4ed8\u304d\u307e\u3059\u304c\u4ed6\u306b\u3082USB\u30b7\u30ea\u30a2\u30eb\u901a\u4fe1\u30013.3V\u96fb\u6e90\u3001\u30ea\u30bb\u30c3\u30c8\u56de\u8def\u6a5f\u80fd\u306e\u642d\u8f09\u3092\u8003\u3048\u308b\u3068ESP8266\u306e\u958b\u767a\u3067\u306f\u304a\u3059\u3059\u3081\u3067\u3059\u3002\n\n- [3\u8ef8\u52a0\u901f\u5ea6\u30bb\u30f3\u30b5\u30e2\u30b8\u30e5\u30fc\u30ebADXL345](http://akizukidenshi.com/catalog/g/gM-06724/)\uff1a\u79cb\u6708\u96fb\u5b50\n\n![adxl345.png](https://qiita-image-store.s3.amazonaws.com/0/70925/74848bb7-81d7-d480-51c1-dd8c8a740f2b.png)\n\nADXL345\u306fI2C\u3067\u3082\u901a\u4fe1\u3067\u304d\u307e\u3059\u304c\u3001SPI\u3067\u901a\u4fe1\u3059\u308b\u5834\u5408\u306f\u5148\u7a0b\u8ff0\u3079\u305fMode 3\u306b\u3088\u308b\u901a\u4fe1\u5236\u5fa1\u304c\u5fc5\u8981\u3068\u306a\u308a\u307e\u3059\u3002\n\n# \u914d\u7dda\nESP8266\u3068ADXL345\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u914d\u7dda\u3057\u307e\u3059\u3002\n![esp8266_adxl345.png](https://qiita-image-store.s3.amazonaws.com/0/70925/3321a4bf-46f2-157f-dca4-49158256379a.png)\n\nESP8266\u306e\u30d4\u30f3\u914d\u7f6e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u753b\u50cf\u306f\u3068\u3066\u3082\u308f\u304b\u308a\u3084\u3059\u3044[ESP-WROOM-02\u3092\u4f7f\u3063\u3066\u307f\u308b : Eleclog.](http://eleclog.quitsq.com/2015/08/esp-wroom-02.html)\u3055\u3093\u304b\u3089\u304a\u501f\u308a\u307e\u3057\u307e\u3057\u305f\u3002\n![ESP-WROOM-02_pinout_diagram.png](https://qiita-image-store.s3.amazonaws.com/0/70925/32b85615-649b-c215-3ad2-eb86e8adb707.png)\n\u56f3\u306fESP8266(ESP-WROOM-02)\u30e2\u30b8\u30e5\u30fc\u30eb\u5358\u4f53\u306e\u30d4\u30f3\u914d\u7f6e\u3067\u3059\u304c\u3001\u30b9\u30a4\u30c3\u30c1\u30b5\u30a4\u30a8\u30f3\u30b9\u793e\u306eESPr Developer\u3082\u5927\u4f53\u4f3c\u305f\u3088\u3046\u306a\u914d\u7f6e\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u6ce8\u610f\u3059\u3079\u304d\u306f\u4eca\u56de\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306fCS\u306e\u30d4\u30f3\u3092IO15\u3067\u306f\u306a\u304fIO5\u306b\u5272\u308a\u5f53\u3066\u3066\u3044\u308b\u70b9\u3067\u3059\u3002[Arduino core for ESP8266 WiFi chip](https://github.com/esp8266/Arduino)\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u4e0a\u306e\u56f3\u306e\u3088\u3046\u306b\u30d4\u30f3\u306e\u6a5f\u80fd\u304c\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u307e\u3059\u304c\u3001ESP8266\u306f\u5143\u3005IO\u30d4\u30f3\u306b\u4efb\u610f\u306e\u6a5f\u80fd\u3092\u5272\u308a\u5f53\u3066\u308b\u3053\u3068\u304c\u53ef\u80fd\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002\u3086\u3048\u306bESP8266\u95a2\u9023\u306e\u69d8\u3005\u306a\u8a18\u4e8b\u3067\u30d4\u30f3\u914d\u7f6e\u304c\u7570\u306a\u3063\u3066\u3044\u308b\u306b\u3082\u304b\u304b\u308f\u3089\u305a\u52d5\u4f5c\u3059\u308b\u5834\u5408\u304c\u3042\u308b\u306e\u306f\u3053\u3053\u306b\u7406\u7531\u304c\u3042\u308a\u307e\u3059\u3002\u5c11\u3057\u6df7\u4e71\u3057\u3066\u3057\u307e\u3046\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001WEB\u3092\u53c2\u8003\u306b\u3057\u3066ESP8266\u3092\u958b\u767a\u3059\u308b\u3068\u304d\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u78ba\u8a8d\u3057\u3064\u3064\u914d\u7dda\u306e\u30c1\u30a7\u30c3\u30af\u3092\u884c\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\n|SPI\u6a5f\u80fd|\u30c7\u30d5\u30a9\u30eb\u30c8\u30d4\u30f3 |\u4eca\u56de\u8a2d\u5b9a\u30d4\u30f3|ADXL345|\n|:---:|:---:|:---:|:---:|\n| CLK | IO14 | IO14 | SCL |\n| MISO | IO12 | IO12 | SDIO |\n| MOSI | IO13 | IO13 | SDA |\n| CS | IO15 | IO5 | CS |\n\n\u307e\u305f\u3001CS\u306e\u6a5f\u80fd\u306e\u5272\u308a\u5f53\u3066\u3092IO15\u304b\u3089IO5\u306b\u5909\u3048\u3066\u3044\u308b\u7406\u7531\u306f\u3001IO15\u304c\u30e2\u30fc\u30c9\u5207\u66ff\u306e\u6a5f\u80fd\u3092\u62c5\u3063\u3066\u3044\u308b\u305f\u3081ADXL345\u3092\u63a5\u7d9a\u3057\u305f\u3068\u304d\u306b\u30e2\u30fc\u30c9\u5207\u66ff\u304c\u6b63\u5e38\u306b\u884c\u308f\u308c\u306a\u3044\u53ef\u80fd\u6027\u3092\u56de\u907f\u3059\u308b\u305f\u3081\u3067\u3059\u3002(\u5b9f\u969b\u63a5\u7d9a\u3057\u305f\u3068\u3053\u308d\u30ed\u30b0\u304c\u6b63\u5e38\u306b\u51fa\u529b\u3055\u308c\u305a\u3046\u307e\u304f\u52d5\u304d\u307e\u305b\u3093\u3067\u3057\u305f)\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u66f8\u304d\u8fbc\u307f\u307e\u3059\u3002[202. ADXL345 - Fab\u8535 Docs](https://sites.google.com/a/gclue.jp/fab-zang-docs/ni-yinkiiot/202-adxl345)\u3055\u3093\u306e\u30b3\u30fc\u30c9\u3092\u6d41\u7528\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3057\u305f\u300232bit CPU\u306eESP8266\u306b\u5408\u308f\u305b\u3066\u5909\u6570\u306e\u578b\u3092\u5909\u3048\u3066\u3042\u308a\u307e\u3059\u3002\u66f8\u304d\u8fbc\u307f\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n| \u9805\u76ee | \u5024 |\n|:-----------|------------:|\n| \u30dc\u30fc\u30c9 | Generic ESP8266 Module |\n| Flash Mode | QIO |\n| Flash Frequency | 80MHz |\n| CPU Frequency | 80MHz |\n| Flash Size | 4M(1M SPIFFS) |\n| Debug port | Serial |\n| Debug Level | \u306a\u3057 |\n| Reset Method | nodemcu |\n| Upload Speed | 115200 |\n\n```c:ADXL345_SPI.ino\n#include <SPI.h>\n\n//ADXL345 \u30ec\u30b8\u30b9\u30bf\u30a2\u30c9\u30ec\u30b9\n#define BW_RATE     0x2C    //Data rate and power mode control\n#define POWER_CTL   0x2D    //Power Control Register\n#define DATA_FORMAT 0x31    //Data format control\n#define DATAX0      0x32    //X-Axis Data 0\n\n#define SS 5 //\u30c7\u30d5\u30a9\u30eb\u30c8\u304b\u3089\u8a2d\u5b9a\u3092\u5909\u66f4\u3057\u3066\u518d\u5b9a\u7fa9(IO15 -> IO5)\n\nchar values[10];\nint16_t x,y,z;\nfloat xg, yg, zg;\n\nvoid setup() {\n  SPI.begin();\n  SPI.setDataMode(SPI_MODE3);\n  SPI.setBitOrder(MSBFIRST);\n  \n  Serial.begin(115200);\n  \n  // SS\u3092Hight\u306b\n  pinMode(SS, OUTPUT);\n  digitalWrite(SS, HIGH);\n  \n  // ADXL345\u521d\u671f\u5316\n  writeRegister(DATA_FORMAT, 0x03); // \u00b116g 10bit\n  writeRegister(POWER_CTL, 0x08);  // \u6e2c\u5b9a\u30e2\u30fc\u30c9\n}\n\nvoid loop() {\n  // DATAX0\u30ec\u30b8\u30b9\u30bf\u304b\u30896\u30d0\u30a4\u30c8\u3092\u53d6\u5f97\n  readRegister(DATAX0, 6, values);\n  \n  // 2Byte\u306e\u30c7\u30fc\u30bf\u3092\u518d\u69cb\u6210\n  x  = ((int16_t)values[1]<<8)|(int16_t)values[0];\n  y  = ((int16_t)values[3]<<8)|(int16_t)values[2];\n  z  = ((int16_t)values[5]<<8)|(int16_t)values[4];\n   \n  // 0.03125 = (16*2)/(2^10)\n  xg = x * 0.03125;\n  yg = y * 0.03125;\n  zg = z * 0.03125;\n  \n  // \u30ed\u30b0\u51fa\u529b\n  Serial.print(xg);\n  Serial.print(\"\\t\");\n  Serial.print(yg);\n  Serial.print(\"\\t\");\n  Serial.println(zg);\n}\n\nvoid writeRegister(char registerAddress, char value) {\n // SPI\u958b\u59cb\u6642\u306bSS\u3092LOW\u306b\u3059\u308b\n digitalWrite(SS, LOW);\n // \u30ec\u30b8\u30b9\u30bf\u30a2\u30c9\u30ec\u30b9\u9001\u4fe1\n SPI.transfer(registerAddress);\n // \u30ec\u30b8\u30b9\u30bf\u306b\u8a2d\u5b9a\u3059\u308b\u5024\u9001\u4fe1\n SPI.transfer(value);\n // SPI\u7d42\u4e86\u6642\u306bCS\u3092HIGH\u306b\u3059\u308b\n digitalWrite(SS, HIGH);\n}\n\nvoid readRegister(char registerAddress, int16_t numBytes, char * values) {\n // \u66f8\u304d\u8fbc\u307f\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n char address = 0x80 | registerAddress;\n // \u8907\u6570\u30d0\u30a4\u30c8\u30d5\u30e9\u30b0\u3092\u7acb\u3066\u308b\n if(numBytes > 1)address = address | 0x40;\n // SPI\u958b\u59cb\u6642\u306bSS\u3092LOW\u306b\u3059\u308b\n digitalWrite(SS, LOW);\n // \u8aad\u307f\u51fa\u3057\u5148\u30ec\u30b8\u30b9\u30bf\u306e\u30a2\u30c9\u30ec\u30b9\u3092\u9001\u4fe1\n SPI.transfer(address);\n // \u5024\u306e\u8aad\u307f\u51fa\u3057\n for(int16_t i=0; i<numBytes; i++) {\n   values[i] = SPI.transfer(0x00);\n }\n // SPI\u7d42\u4e86\u6642\u306bCS\u3092HIGH\u306b\u3059\u308b\n digitalWrite(SS, HIGH);\n}\n```\n\n# \u7d50\u679c\n\u30b7\u30ea\u30a2\u30eb\u30e2\u30cb\u30bf\u3067\u78ba\u8a8d\u3059\u308b\u3068\u6b63\u5e38\u306b\u52d5\u4f5c\u3057\u3066\u3044\u308c\u3070\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u57fa\u677f\u3092\u50be\u3051\u308b\u3068\u5024\u304c\u5909\u5316\u3057\u307e\u3059\u3002\u30dc\u30fc\u30ec\u30fc\u30c8\u306f115200 bps\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u3082\u3057\u3001\u6587\u5b57\u5316\u3051\u3059\u308b\u5834\u5408\u306f\u4e00\u5ea6\u30ea\u30bb\u30c3\u30c8\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u307e\u3059\u30021\u5217\u76ee\u304cX\u8ef8\u30012\u5217\u76ee\u304cY\u8ef8\u30013\u5217\u76ee\u304cZ\u8ef8\u306e\u5024\u3067\u3059\u3002\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-08-14 15.02.28.png](https://qiita-image-store.s3.amazonaws.com/0/70925/08ed9ced-305e-3848-79f1-3e70aee0b4cf.png)\n\n# (\u88dc\u8db3)SPI\u901a\u4fe1\u306eMode\u306b\u3064\u3044\u3066\nIO14(CLK)\u30d4\u30f3\u306e\u51fa\u529b\u6ce2\u5f62\u3092\u30aa\u30b7\u30ed\u30b9\u30b3\u30fc\u30d7\u3067\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3057\u305f\u3002\u4eca\u307e\u3067\u306fCPOL\u306e\u5236\u5fa1\u304c\u3067\u304d\u305a\u306bMode 1(Mode 2)\u306eActive High\u3057\u304b\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n![1426622448.png](https://qiita-image-store.s3.amazonaws.com/0/70925/066cbc51-ecfc-90b4-c559-7b1e9f74eba0.png)\nMode 1\n\n\u3057\u304b\u3057\u3001\u6700\u8fd1\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u4fee\u6b63\u3055\u308cMode 3(Mode 4)\u3092\u6307\u5b9a\u3059\u308b\u3068\u6b63\u5e38\u306bActive Low\u306e\u6ce2\u5f62\u304c\u51fa\u529b\u3055\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n![1814333531.png](https://qiita-image-store.s3.amazonaws.com/0/70925/c314a317-976a-239d-ff2c-334812eb1ad8.png)\nMode 3\n", "tags": ["ESP8266", "Arduino"]}