{"context": "\u4f5c\u3063\u3066\u307f\u305f\u3089\u308f\u308a\u3068\u3044\u3044\u611f\u3058\u3060\u3063\u305f\u306e\u3067\u5171\u6709\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n1.\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3001\u30bb\u30eb\u540d\u3092enum\u3067\u5b8c\u5168\u306b\u7ba1\u7406\u3059\u308b\n2.switch\u3084if\u3092\u30cd\u30b9\u30c8\u3055\u305b\u305a\u3001\u307e\u305f\u6570\u5024\u3092\u4f7f\u308f\u305a\u306benum\u3067\u5206\u5c90\u3057\u305f\u3044\n3.UITableView\u3067\u4f7f\u3046\u306e\u3067\u30bb\u30af\u30b7\u30e7\u30f3\u6570\u3068\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u30bb\u30eb\u6570\u3092\u53d6\u5f97\u3057\u305f\u3044\n4.\u4e0d\u6b63\u306aindexPath\u306fguard\u3057\u305f\u3044\n\n\u524d\u63d0\nSwift2.3\n\n\u3053\u306e\u3088\u3046\u306aUITableView\u3092enum\u3067\u7ba1\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\n\u3084\u3063\u3066\u307f\u305f\n\u307e\u305a\u306fenum\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u305f\u308a\u3001\u7ba1\u7406\u7528\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u306a\u304f\u3066\u3082\u3044\u3044\u3051\u3069\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u3084\u30ed\u30fc\u3092\u5897\u3084\u3057\u305f\u308a\u6e1b\u3089\u3057\u305f\u308a\u3059\u308b\u6642\u306b\u5f04\u308b\u7b87\u6240\u304c\u5c11\u306a\u304f\u306a\u308b\u3057\u3001\u898b\u901a\u3057\u3082\u3044\u3044\u306e\u3067\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n//\u30ab\u30a6\u30f3\u30c8\u53ef\u80fd\u306aenum\u62e1\u5f35\nprotocol Countable { }\nextension Countable where Self : RawRepresentable, Self.RawValue == Int  {\n  static func count() -> Int {\n    var count = 0\n    while let _ = Self(rawValue: count) { count += 1 }\n    return count\n  }\n}\n\n//\u30ed\u30fc\u3068\u30bb\u30af\u30b7\u30e7\u30f3\u7528\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5206\u3051\u308b\nprotocol IndexRow: Countable { }\nprotocol IndexSection: Countable { }\n\n\u6b21\u306b\u30e1\u30a4\u30f3\u306eenum\u306e\u5b9f\u88c5\u3067\u3059\u3002\nSection\u306b\u7ba1\u7406\u3059\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u3001Row\u306b\u306f\u4e00\u89a7\u3068\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nRow\u306b\u307e\u3068\u3081\u308b\u306e\u306f\u898b\u901a\u3057\u3092\u826f\u304f\u3059\u308b\u305f\u3081\u306a\u306e\u3067\u3001\u4e0d\u8981\u3067\u3042\u308c\u3070\u5916\u306b\u51fa\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3068Row.Hogehoge\u306e\u540d\u524d\u3082\u4e00\u7dd2\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\nimport UIKit\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406enum\nenum Section: Int, IndexSection {\n  case Instruments\n  case UiAnimation\n  case Network\n  case Iad\n\n  //\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u30ed\u30fc\u6570\u3092\u8fd4\u3059\n  func rowCount() -> Int {\n    switch self {\n    case .Instruments: return Row.Instruments.count()\n    case .UiAnimation: return Row.UiAnimation.count()\n    case .Network:   return Row.Network.count()\n    case .Iad:   return Row.Iad.count()\n    }\n  }\n}\n\n//\u30ed\u30fc\u306e\u7ba1\u7406enum\nenum Row {\n  enum Instruments: Int, IndexRow {\n    case Logging\n  }\n\n  enum UiAnimation: Int, IndexRow {\n    case Animation\n  }\n\n  enum Network: Int, IndexRow {\n    case Status\n  }\n\n  enum Iad: Int, IndexRow {\n    case FillRate\n    case AdRefreshRate\n    case Hightlight\n    case Unlimited\n  }\n\n  //\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30fc\u8981\u7d20\u3092\u8fd4\u3059\n  static func create(section: Section, rowIndex: Int) -> IndexRow? {\n    switch section {\n    case .Instruments: return Instruments(rawValue: rowIndex)\n    case .UiAnimation: return UiAnimation(rawValue: rowIndex)\n    case .Network:     return Network(rawValue:     rowIndex)\n    case .Iad:         return Iad(rawValue:         rowIndex)\n    }\n  }\n}\n\n\u6700\u5f8c\u306bNSIndexPath\u306bprivate extension\u3092\u751f\u3084\u3057\u307e\u3059\nprivate extension NSIndexPath {\n  func parse() -> (Section, IndexRow)? {\n    guard let section = Section(rawValue: section) else { return nil }\n    guard let row     = Row.create(section, rowIndex: row) else { return nil }\n    return (section, row)\n  }\n}\n\n\n\u4f7f\u3063\u3066\u307f\u308b\n\u5b9f\u969b\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n//\u30b5\u30f3\u30d7\u30eb\u7528\u306eIndexPath\nlet indexPath = NSIndexPath(forRow: 0, inSection: 0)\n\n//IndexPath\u304b\u3089\u751f\u6210\u3001\u4e0d\u6b63\u306e\u5834\u5408\u306fnil\u304c\u8fd4\u308b\nguard let (section, row) = indexPath.parse() else { return }\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u30fb\u30bb\u30eb\u540d\u3067\u5206\u5c90\nswitch (section, row) {\ncase (Section.Instruments, Row.Instruments.Logging):\n  break\ncase (Section.UiAnimation, Row.UiAnimation.Animation):\n  break\ncase (Section.Network, Row.Network.Status):\n  break\ncase (Section.Iad, Row.Iad.FillRate):\n  break\ncase (Section.Iad, Row.Iad.AdRefreshRate):\n  break\ncase (Section.Iad, Row.Iad.Hightlight):\n  break\ncase (Section.Iad, Row.Iad.Unlimited):\n  break\ndefault: break\n}\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u6570\nlet sectionCount = Section.count()\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30bb\u30eb\u6570\nlet rowCount     = section.rowCount()\n\n\n\u3055\u3044\u3053\u3046\u3067\u306f\u2026\nindexPath\u306e\u8981\u7d20\u3060\u3051\u304b\u3089\u751f\u6210\u3055\u308c\u305fsection\u3068row\u304cswitch\u3067\u30ad\u30ec\u30a4\u306b\u5206\u5c90\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\u30bb\u30eb\u6570\u3084\u30bb\u30af\u30b7\u30e7\u30f3\u6570\u3082\u7c21\u5358\u306b\u53d6\u308c\u308b\u306e\u3067UITableView\u3067\u3082\u5229\u7528\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\u8a2d\u5b9a\u753b\u9762\u306a\u3069\u3067\u6d3b\u8e8d\u3057\u305d\u3046\u3002\n\u4f55\u304b\u6539\u5584\u70b9\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\uff01\n\u4f5c\u3063\u3066\u307f\u305f\u3089\u308f\u308a\u3068\u3044\u3044\u611f\u3058\u3060\u3063\u305f\u306e\u3067\u5171\u6709\n\n#\u3084\u308a\u305f\u3044\u3053\u3068\n1.\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3001\u30bb\u30eb\u540d\u3092**enum\u3067\u5b8c\u5168\u306b\u7ba1\u7406**\u3059\u308b\n2.**switch\u3084if\u3092\u30cd\u30b9\u30c8\u3055\u305b\u305a**\u3001\u307e\u305f**\u6570\u5024\u3092\u4f7f\u308f\u305a\u306benum\u3067\u5206\u5c90**\u3057\u305f\u3044\n3.UITableView\u3067\u4f7f\u3046\u306e\u3067**\u30bb\u30af\u30b7\u30e7\u30f3\u6570**\u3068**\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u30bb\u30eb\u6570**\u3092\u53d6\u5f97\u3057\u305f\u3044\n4.\u4e0d\u6b63\u306aindexPath\u306fguard\u3057\u305f\u3044\n\n#\u524d\u63d0\nSwift2.3\n\n![CscKDMOUsAA3dtn.jpg](https://qiita-image-store.s3.amazonaws.com/0/24979/c03c38c5-0c39-ce46-ee86-2c9b97a1102f.jpeg)\n\n\u3053\u306e\u3088\u3046\u306aUITableView\u3092enum\u3067\u7ba1\u7406\u3057\u3066\u307f\u307e\u3059\u3002\n\n##\u3084\u3063\u3066\u307f\u305f\n\n\u307e\u305a\u306fenum\u306e\u30ab\u30a6\u30f3\u30c8\u3092\u51fa\u6765\u308b\u3088\u3046\u306b\u3057\u305f\u308a\u3001\u7ba1\u7406\u7528\u306e\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5b9a\u7fa9\u3059\u308b\u3002\n\u306a\u304f\u3066\u3082\u3044\u3044\u3051\u3069\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u3084\u30ed\u30fc\u3092\u5897\u3084\u3057\u305f\u308a\u6e1b\u3089\u3057\u305f\u308a\u3059\u308b\u6642\u306b\u5f04\u308b\u7b87\u6240\u304c\u5c11\u306a\u304f\u306a\u308b\u3057\u3001\u898b\u901a\u3057\u3082\u3044\u3044\u306e\u3067\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3057\u3087\u3046\u3002\n\n```swift\n//\u30ab\u30a6\u30f3\u30c8\u53ef\u80fd\u306aenum\u62e1\u5f35\nprotocol Countable { }\nextension Countable where Self : RawRepresentable, Self.RawValue == Int  {\n  static func count() -> Int {\n    var count = 0\n    while let _ = Self(rawValue: count) { count += 1 }\n    return count\n  }\n}\n\n//\u30ed\u30fc\u3068\u30bb\u30af\u30b7\u30e7\u30f3\u7528\u306b\u30d7\u30ed\u30c8\u30b3\u30eb\u3092\u5206\u3051\u308b\nprotocol IndexRow: Countable { }\nprotocol IndexSection: Countable { }\n```\n\n\n\u6b21\u306b\u30e1\u30a4\u30f3\u306eenum\u306e\u5b9f\u88c5\u3067\u3059\u3002\nSection\u306b\u7ba1\u7406\u3059\u308b\u30bb\u30af\u30b7\u30e7\u30f3\u4e00\u89a7\u3092\u3001Row\u306b\u306f\u4e00\u89a7\u3068\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u51e6\u7406\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\nRow\u306b\u307e\u3068\u3081\u308b\u306e\u306f\u898b\u901a\u3057\u3092\u826f\u304f\u3059\u308b\u305f\u3081\u306a\u306e\u3067\u3001\u4e0d\u8981\u3067\u3042\u308c\u3070\u5916\u306b\u51fa\u3057\u3066\u3082\u826f\u3044\u3067\u3059\u3002\n\u307e\u305f\u3001\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u3068Row.Hogehoge\u306e\u540d\u524d\u3082\u4e00\u7dd2\u3067\u3042\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n```swift\nimport UIKit\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u7ba1\u7406enum\nenum Section: Int, IndexSection {\n  case Instruments\n  case UiAnimation\n  case Network\n  case Iad\n  \n  //\u30bb\u30af\u30b7\u30e7\u30f3\u3054\u3068\u306e\u30ed\u30fc\u6570\u3092\u8fd4\u3059\n  func rowCount() -> Int {\n    switch self {\n    case .Instruments: return Row.Instruments.count()\n    case .UiAnimation: return Row.UiAnimation.count()\n    case .Network:   return Row.Network.count()\n    case .Iad:   return Row.Iad.count()\n    }\n  }\n}\n\n//\u30ed\u30fc\u306e\u7ba1\u7406enum\nenum Row {\n  enum Instruments: Int, IndexRow {\n    case Logging\n  }\n  \n  enum UiAnimation: Int, IndexRow {\n    case Animation\n  }\n  \n  enum Network: Int, IndexRow {\n    case Status\n  }\n  \n  enum Iad: Int, IndexRow {\n    case FillRate\n    case AdRefreshRate\n    case Hightlight\n    case Unlimited\n  }\n  \n  //\u30bb\u30af\u30b7\u30e7\u30f3\u306b\u5bfe\u5fdc\u3059\u308b\u30ed\u30fc\u8981\u7d20\u3092\u8fd4\u3059\n  static func create(section: Section, rowIndex: Int) -> IndexRow? {\n    switch section {\n    case .Instruments: return Instruments(rawValue: rowIndex)\n    case .UiAnimation: return UiAnimation(rawValue: rowIndex)\n    case .Network:     return Network(rawValue:     rowIndex)\n    case .Iad:         return Iad(rawValue:         rowIndex)\n    }\n  }\n}\n```\n\n\u6700\u5f8c\u306bNSIndexPath\u306bprivate extension\u3092\u751f\u3084\u3057\u307e\u3059\n\n```\nprivate extension NSIndexPath {\n  func parse() -> (Section, IndexRow)? {\n    guard let section = Section(rawValue: section) else { return nil }\n    guard let row     = Row.create(section, rowIndex: row) else { return nil }\n    return (section, row)\n  }\n}\n```\n\n\n##\u4f7f\u3063\u3066\u307f\u308b\n\u5b9f\u969b\u4f7f\u3063\u3066\u307f\u307e\u3059\u3002\n\n```swift\n\n//\u30b5\u30f3\u30d7\u30eb\u7528\u306eIndexPath\nlet indexPath = NSIndexPath(forRow: 0, inSection: 0)\n\n//IndexPath\u304b\u3089\u751f\u6210\u3001\u4e0d\u6b63\u306e\u5834\u5408\u306fnil\u304c\u8fd4\u308b\nguard let (section, row) = indexPath.parse() else { return }\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u540d\u30fb\u30bb\u30eb\u540d\u3067\u5206\u5c90\nswitch (section, row) {\ncase (Section.Instruments, Row.Instruments.Logging):\n  break\ncase (Section.UiAnimation, Row.UiAnimation.Animation):\n  break\ncase (Section.Network, Row.Network.Status):\n  break\ncase (Section.Iad, Row.Iad.FillRate):\n  break\ncase (Section.Iad, Row.Iad.AdRefreshRate):\n  break\ncase (Section.Iad, Row.Iad.Hightlight):\n  break\ncase (Section.Iad, Row.Iad.Unlimited):\n  break\ndefault: break\n}\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u6570\nlet sectionCount = Section.count()\n\n//\u30bb\u30af\u30b7\u30e7\u30f3\u306e\u30bb\u30eb\u6570\nlet rowCount     = section.rowCount()\n\n```\n\n**\u3055\u3044\u3053\u3046\u3067\u306f\u2026**\n\nindexPath\u306e\u8981\u7d20\u3060\u3051\u304b\u3089\u751f\u6210\u3055\u308c\u305fsection\u3068row\u304cswitch\u3067\u30ad\u30ec\u30a4\u306b\u5206\u5c90\u3055\u308c\u3066\u3044\u304d\u307e\u3059\u3002\n\u30bb\u30eb\u6570\u3084\u30bb\u30af\u30b7\u30e7\u30f3\u6570\u3082\u7c21\u5358\u306b\u53d6\u308c\u308b\u306e\u3067UITableView\u3067\u3082\u5229\u7528\u51fa\u6765\u305d\u3046\u3067\u3059\u3002\n\u8a2d\u5b9a\u753b\u9762\u306a\u3069\u3067\u6d3b\u8e8d\u3057\u305d\u3046\u3002\n\u4f55\u304b\u6539\u5584\u70b9\u3042\u308c\u3070\u30b3\u30e1\u30f3\u30c8\u304f\u3060\u3055\u3044\uff01\n", "tags": ["Swift", "iOS", "enum"]}