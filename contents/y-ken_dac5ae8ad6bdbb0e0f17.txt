{"context": " More than 1 year has passed since last update.PHP\u304b\u3089SSL\u901a\u4fe1\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001SSL operation failed with code 40. OpenSSL Error messages: not in error state\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3067\u5931\u6557\u3059\u308b\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n\u74b0\u5883\n\u3068\u3042\u308b\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u7fa4\u306e\u6570\u53f0\u3002\nPHP\u30825.2.5\u3068\u304b\u306a\u308a\u53e4\u3044\u3082\u306e\u3067\u3059\u3002\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n<?php\necho file_get_contents(\"https://example.herokuapp.com/\");\n\n\n\u5b9f\u884c\u7d50\u679c\nWarning: file_get_contents() [function.file-get-contents]: SSL operation failed with code 40. OpenSSL Error messages: not in error state in /****/****/ssl.php on line 2\n\nWarning: file_get_contents() [function.file-get-contents]: Failed to enable crypto in /****/****/ssl.php on line 2\n\nWarning: file_get_contents(https://example.herokuapp.com/) [function.file-get-contents]: failed to open stream: Bad file descriptor in /****/****/ssl.php on line 2\n\n\n\u8a72\u5f53\u30b5\u30fc\u30d0\u3067\u306e\u72b6\u6cc1\u78ba\u8a8d\n\u554f\u984c\u5207\u308a\u5206\u3051\u306e\u305f\u3081\u306b\u8a72\u5f53\u30b5\u30fc\u30d0\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3088\u308a\u3001wget\u3084curl\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n# wget\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002\n## \u4f46\u3057 --no-check-certificate \u5f15\u6570\u3092\u4ed8\u3051\u308c\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u3002\n$ wget https://example.herokuapp.com/\n--2015-01-07 15:52:51--  https://example.herokuapp.com/\nResolving example.herokuapp.com... 54.225.214.208\nConnecting to example.herokuapp.com|54.225.214.208|:443... connected.\nERROR: The certificate of \u2018example.herokuapp.com\u2019 is not trusted.\nERROR: The certificate of \u2018example.herokuapp.com\u2019 hasn't got a known issuer.\n\n# curl\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002\n## \u4f46\u3057 -k \u5f15\u6570\u3092\u4ed8\u3051\u308c\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u3002\n$ curl https://example.herokuapp.com/\ncurl: (60) SSL certificate problem, verify that the CA cert is OK. Details:\nerror:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). The default\n bundle is named curl-ca-bundle.crt; you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n\n# openssl\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\n$ openssl\nOpenSSL> version\nOpenSSL 0.9.8za 5 Jun 2014\nOpenSSL> quit\n\n\n\u6700\u65b0\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb(CA)\u3092\u5165\u624b\n\u672c\u6765\u3067\u3042\u308c\u3070\u30b5\u30fc\u30d0\u306e\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092openssh\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u7b49\u3067\u5b9f\u65bd\u3059\u3079\u304d\u3067\u3059\u3002\n\u3057\u304b\u3057\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u306a\u3069\u3067\u305d\u308c\u304c\u56f0\u96e3\u306a\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n\u305d\u308c\u3067\u306f\u3001\u6b21\u3092\u53c2\u8003\u306bCA file\u3092\u30e6\u30fc\u30b6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5c55\u958b\u3057\u3066\u305d\u308c\u3092\u7528\u3044\u3066SSL\u901a\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nref. http://takuya-1st.hatenablog.jp/entry/20110306/1299436282\n\u4f8b\u306b\u5f93\u3063\u3066\u3001\u307e\u305a\u306fcacert.prm\u3092\u5206\u5272\u3057\u307e\u3059\u3002\n# \u4efb\u610f\u306e\u8a3c\u660e\u66f8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u308a\u307e\u3059\n$ mkdir certs\n$ cd certs\n\n# pem\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\n$ wget http://curl.haxx.se/ca/cacert.pem\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\u3057\u3066\u52d5\u4f5c\u3059\u308bwget\u5411\u3051\u306b\u3001\u5206\u5272\u3057\u307e\u3059\n$ curl http://curl.haxx.se/ca/cacert.pem \\\n| awk 'split_after==1{n++;split_after=0}\\\n /-----END CERTIFICATE-----/ {split_after=1} {print > \"cert\" n \".pem\"}'\n\n# \u6b21\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u307e\u3057\u305f\n$ ls certs/\ncert100.pem  cert115.pem  cert12.pem   cert144.pem  cert20.pem  cert35.pem  cert4.pem   cert64.pem  cert79.pem  cert93.pem\ncert101.pem  cert116.pem  cert130.pem  cert145.pem  cert21.pem  cert36.pem  cert50.pem  cert65.pem  cert7.pem   cert94.pem\ncert102.pem  cert117.pem  cert131.pem  cert146.pem  cert22.pem  cert37.pem  cert51.pem  cert66.pem  cert80.pem  cert95.pem\ncert103.pem  cert118.pem  cert132.pem  cert147.pem  cert23.pem  cert38.pem  cert52.pem  cert67.pem  cert81.pem  cert96.pem\ncert104.pem  cert119.pem  cert133.pem  cert148.pem  cert24.pem  cert39.pem  cert53.pem  cert68.pem  cert82.pem  cert97.pem\ncert105.pem  cert11.pem   cert134.pem  cert149.pem  cert25.pem  cert3.pem   cert54.pem  cert69.pem  cert83.pem  cert98.pem\ncert106.pem  cert120.pem  cert135.pem  cert14.pem   cert26.pem  cert40.pem  cert55.pem  cert6.pem   cert84.pem  cert99.pem\ncert107.pem  cert121.pem  cert136.pem  cert150.pem  cert27.pem  cert41.pem  cert56.pem  cert70.pem  cert85.pem  cert9.pem\ncert108.pem  cert122.pem  cert137.pem  cert151.pem  cert28.pem  cert42.pem  cert57.pem  cert71.pem  cert86.pem  cert.pem\ncert109.pem  cert123.pem  cert138.pem  cert152.pem  cert29.pem  cert43.pem  cert58.pem  cert72.pem  cert87.pem  \ncert10.pem   cert124.pem  cert139.pem  cert15.pem   cert2.pem   cert44.pem  cert59.pem  cert73.pem  cert88.pem\ncert110.pem  cert125.pem  cert13.pem   cert16.pem   cert30.pem  cert45.pem  cert5.pem   cert74.pem  cert89.pem\ncert111.pem  cert126.pem  cert140.pem  cert17.pem   cert31.pem  cert46.pem  cert60.pem  cert75.pem  cert8.pem\ncert112.pem  cert127.pem  cert141.pem  cert18.pem   cert32.pem  cert47.pem  cert61.pem  cert76.pem  cert90.pem\ncert113.pem  cert128.pem  cert142.pem  cert19.pem   cert33.pem  cert48.pem  cert62.pem  cert77.pem  cert91.pem\ncert114.pem  cert129.pem  cert143.pem  cert1.pem    cert34.pem  cert49.pem  cert63.pem  cert78.pem  cert92.pem\n\n\u305d\u306e\u5f8c\u306b\u65b0\u3057\u304f\u7528\u610f\u3057\u305fCA\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u5931\u6557\u3057\u3066\u3044\u305f\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n# wget\u306f\u671f\u5f85\u901a\u308a\u52d5\u304d\u307e\u3059\n$ wget --ca-directory=/path/to/certs https://example.herokuapp.com/\n\n# curl\u306f\u53e4\u3044\u305f\u3081\u304b\u3001\u671f\u5f85\u901a\u308a\u52d5\u304d\u307e\u305b\u3093...\u3000\n# \u3082\u3061\u308d\u3093 -k \u3084 --insecure \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u304c\u3002\n$ curl --cacert=/path/to/certs/cacert.pem https://www.google.co.jp/\ncurl: option --cacert=/path/to/certs/cacert.pem: is unknown\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n$ curl -V\ncurl 7.16.3 (i686-pc-linux-gnu) libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3\nProtocols: tftp ftp telnet dict ldap http file https ftps\nFeatures: Largefile NTLM SSL libz\n\n\nPHP\u3067\u6700\u65b0\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb(CA)\u3092\u4f7f\u3046\u65b9\u6cd5\n\u6b21\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nref. http://www.docnet.nu/tech-portal/2014/06/26/ssl-and-php-streams-part-1-you-are-doing-it-wrongtm/C0\n<?php\n// Change this to point to your newly downloaded CA file\n$caFile = '/path/to/certs/cacert.pem';\n\n// Create a stream context to pass the relevant SSL information\n$context = stream_context_create(array('ssl' => array(\n    'verify_peer' => false,\n    'verify_peer_name' => false,\n    'allow_self_signed' => false,\n    'cafile' => $caFile,\n)));\n\necho file_get_contents(\"https://example.herokuapp.com/\", false, $context);\n\n\u3057\u304b\u3057\u6b21\u306e\u7d50\u679c\u3068\u306a\u308a\u3001cafile, capath\u5171\u306b\u4e0a\u624b\u304f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u30fb\u30fb\u30fb\u8ab0\u304b\u6559\u3048\u3066\u304f\u3060\u3055\u3044 ><\nWarning: file_get_contents() [function.file-get-contents]: SSL operation failed with code 40. OpenSSL Error messages: not in error state in /path/to/ssl.php on line 14\n\nWarning: file_get_contents() [function.file-get-contents]: Failed to enable crypto in /path/to/ssl.php on line 14\n\nWarning: file_get_contents(https://example.herokuapp.com/) [function.file-get-contents]: failed to open stream: Bad file descriptor in /path/to/ssl.php on line 14\n\n\u306a\u304a\u3001curl\u304c\u4f7f\u3048\u308b\u74b0\u5883\u306a\u3089\u56de\u907f\u7b56\u304c\u307e\u3060\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u306e\u6709\u52b9\u671f\u9650\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\n\u4efb\u610f\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n$ openssl x509 -text -noout -in \u78ba\u8a8d\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb.pem\n\n\u6307\u5b9a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306b\u4e00\u62ec\u3067\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n$ find  /etc/ssl/certs/*.pem -type f -exec echo \"--------------------\" \\; -exec echo {} \\; -exec bash -c \"openssl x509 -text -noout -in {} | head\" \\;\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3001\u554f\u984c\u306e\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u3067\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\n\u304b\u306a\u308a\u56f0\u308b\u72b6\u614b\u3067\u3059\u306d\u3002\n\n--------------------\n/etc/ssl/certs/eng1.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=BankEngine Inc., OU=Certification Authority Division, CN=bankengine/emailAddress=ca@bankengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=BankEngine Inc., OU=Certification Authority Division, CN=bankengine/emailAddress=ca@bankengine.com\n--------------------\n/etc/ssl/certs/eng2.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=CertEngine Inc., OU=Certification Authority Division, CN=certengine/emailAddress=ca@certengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=CertEngine Inc., OU=Certification Authority Division, CN=certengine/emailAddress=ca@certengine.com\n--------------------\n/etc/ssl/certs/eng3.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=FortEngine Inc., OU=Certification Authority Division, CN=fortengine/emailAddress=ca@fortengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=FortEngine Inc., OU=Certification Authority Division, CN=fortengine/emailAddress=ca@fortengine.com\n--------------------\n/etc/ssl/certs/eng4.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=MailEngine Inc., OU=Certification Authority Division, CN=mailengine/emailAddress=ca@mailengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=MailEngine Inc., OU=Certification Authority Division, CN=mailengine/emailAddress=ca@mailengine.com\n--------------------\n/etc/ssl/certs/eng5.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=TraderEngine Inc., OU=Certification Authority Division, CN=traderengine/emailAddress=ca@traderengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=TraderEngine Inc., OU=Certification Authority Division, CN=traderengine/emailAddress=ca@traderengine.com\n--------------------\n/etc/ssl/certs/Equifax-root1.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 903804111 (0x35def4cf)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=US, O=Equifax, OU=Equifax Secure Certificate Authority\n        Validity\n            Not Before: Aug 22 16:41:51 1998 GMT\n            Not After : Aug 22 16:41:51 2018 GMT\n        Subject: C=US, O=Equifax, OU=Equifax Secure Certificate Authority\n--------------------\n/etc/ssl/certs/ICP-Brasil.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 4 (0x4)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=BR, O=ICP-Brasil, OU=Instituto Nacional de Tecnologia da Informacao - ITI, L=Brasilia, ST=DF, CN=Autoridade Certificadora Raiz Brasileira\n        Validity\n            Not Before: Nov 30 12:58:00 2001 GMT\n            Not After : Nov 30 23:59:00 2011 GMT\n        Subject: C=BR, O=ICP-Brasil, OU=Instituto Nacional de Tecnologia da Informacao - ITI, L=Brasilia, ST=DF, CN=Autoridade Certificadora Raiz Brasileira\n--------------------\n/etc/ssl/certs/RegTP-5R.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 820138 (0xc83aa)\n        Signature Algorithm: ripemd160WithRSA\n        Issuer: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=5R-CA 1:PN\n        Validity\n            Not Before: Mar 22 08:55:51 2000 GMT\n            Not After : Mar 22 08:55:51 2005 GMT\n        Subject: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=5R-CA 1:PN\n--------------------\n/etc/ssl/certs/RegTP-6R.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 3330445 (0x32d18d)\n        Signature Algorithm: ripemd160WithRSA\n        Issuer: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=6R-Ca 1:PN\n        Validity\n            Not Before: Feb  1 09:52:17 2001 GMT\n            Not After : Jun  1 09:52:17 2005 GMT\n        Subject: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=6R-Ca 1:PN\n--------------------\n/etc/ssl/certs/thawteCb.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 1 (0x1)\n        Signature Algorithm: md5WithRSAEncryption\n        Issuer: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Server CA/emailAddress=server-certs@thawte.com\n        Validity\n            Not Before: Aug  1 00:00:00 1996 GMT\n            Not After : Dec 31 23:59:59 2020 GMT\n        Subject: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Server CA/emailAddress=server-certs@thawte.com\n--------------------\n/etc/ssl/certs/thawteCp.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 1 (0x1)\n        Signature Algorithm: md5WithRSAEncryption\n        Issuer: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Premium Server CA/emailAddress=premium-server@thawte.com\n        Validity\n            Not Before: Aug  1 00:00:00 1996 GMT\n            Not After : Dec 31 23:59:59 2020 GMT\n        Subject: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Premium Server CA/emailAddress=premium-server@thawte.com\n--------------------\n/etc/ssl/certs/vsign1.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            32:50:33:cf:50:d1:56:f3:5c:81:ad:65:5c:4f:c8:25\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=VeriSign, Inc., OU=Class 1 Public Primary Certification Authority\n        Validity\n            Not Before: Jan 29 00:00:00 1996 GMT\n            Not After : Jan  7 23:59:59 2020 GMT\n--------------------\n/etc/ssl/certs/vsign3.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            70:ba:e4:1d:10:d9:29:34:b6:38:ca:7b:03:cc:ba:bf\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=VeriSign, Inc., OU=Class 3 Public Primary Certification Authority\n        Validity\n            Not Before: Jan 29 00:00:00 1996 GMT\n            Not After : Aug  1 23:59:59 2028 GMT\n--------------------\n/etc/ssl/certs/vsignss.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            02:ad:66:7e:4e:45:fe:5e:57:6f:3c:98:19:5e:dd:c0\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=RSA Data Security, Inc., OU=Secure Server Certification Authority\n        Validity\n            Not Before: Nov  9 00:00:00 1994 GMT\n            Not After : Jan  7 23:59:59 2010 GMT\n--------------------\n/etc/ssl/certs/wellsfgo.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 971282334 (0x39e4979e)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=US, O=Wells Fargo, OU=Wells Fargo Certification Authority, CN=Wells Fargo Root Certificate Authority\n        Validity\n            Not Before: Oct 11 16:41:28 2000 GMT\n            Not After : Jan 14 16:41:28 2021 GMT\n        Subject: C=US, O=Wells Fargo, OU=Wells Fargo Certification Authority, CN=Wells Fargo Root Certificate Authority\n\n\n\u4f75\u305b\u3066\u8aad\u307f\u305f\u3044\n\n[PHP][cURL] cURL\u3067SSL\uff08https\uff09\u306eCA\u8a3c\u660e\u66f8\u8b66\u544a\u306e\u56de\u907f\u3084\u8a2d\u5b9a\nhttp://mio-koduki.blogspot.jp/2012/08/php-curlsslhttpsca.html\n\u30b5\u30fc\u30d0\u306eSSL CA(\u8a8d\u8a3c\u5c40)\u8a3c\u660e\u66f8\u304c\u53e4\u304f\u3066curl \u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u4ef6\nhttp://d.hatena.ne.jp/hogem/20120705/1340284071\n\nPHP\u304b\u3089SSL\u901a\u4fe1\u3057\u3088\u3046\u3068\u3057\u305f\u3068\u3053\u308d\u3001`SSL operation failed with code 40. OpenSSL Error messages: not in error state`\u3068\u3044\u3046\u30a8\u30e9\u30fc\u3067\u5931\u6557\u3059\u308b\u30b1\u30fc\u30b9\u304c\u3042\u308a\u307e\u3057\u305f\u3002\n\n## \u74b0\u5883\n\n\u3068\u3042\u308b\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u7fa4\u306e\u6570\u53f0\u3002\nPHP\u30825.2.5\u3068\u304b\u306a\u308a\u53e4\u3044\u3082\u306e\u3067\u3059\u3002\n\n## \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\n```php\n<?php\necho file_get_contents(\"https://example.herokuapp.com/\");\n```\n\n## \u5b9f\u884c\u7d50\u679c\n\n```php\nWarning: file_get_contents() [function.file-get-contents]: SSL operation failed with code 40. OpenSSL Error messages: not in error state in /****/****/ssl.php on line 2\n\nWarning: file_get_contents() [function.file-get-contents]: Failed to enable crypto in /****/****/ssl.php on line 2\n\nWarning: file_get_contents(https://example.herokuapp.com/) [function.file-get-contents]: failed to open stream: Bad file descriptor in /****/****/ssl.php on line 2\n```\n\n## \u8a72\u5f53\u30b5\u30fc\u30d0\u3067\u306e\u72b6\u6cc1\u78ba\u8a8d\n\n\u554f\u984c\u5207\u308a\u5206\u3051\u306e\u305f\u3081\u306b\u8a72\u5f53\u30b5\u30fc\u30d0\u306e\u30b3\u30f3\u30bd\u30fc\u30eb\u3088\u308a\u3001wget\u3084curl\u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\u3092\u78ba\u8a8d\u3057\u307e\u3057\u305f\u3002\n\n```bash\n# wget\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002\n## \u4f46\u3057 --no-check-certificate \u5f15\u6570\u3092\u4ed8\u3051\u308c\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u3002\n$ wget https://example.herokuapp.com/\n--2015-01-07 15:52:51--  https://example.herokuapp.com/\nResolving example.herokuapp.com... 54.225.214.208\nConnecting to example.herokuapp.com|54.225.214.208|:443... connected.\nERROR: The certificate of \u2018example.herokuapp.com\u2019 is not trusted.\nERROR: The certificate of \u2018example.herokuapp.com\u2019 hasn't got a known issuer.\n```\n\n```bash\n# curl\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3068\u6b21\u306e\u30a8\u30e9\u30fc\u304c\u767a\u751f\u3002\n## \u4f46\u3057 -k \u5f15\u6570\u3092\u4ed8\u3051\u308c\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u3002\n$ curl https://example.herokuapp.com/\ncurl: (60) SSL certificate problem, verify that the CA cert is OK. Details:\nerror:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). The default\n bundle is named curl-ca-bundle.crt; you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n```\n```bash\n# openssl\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\n$ openssl\nOpenSSL> version\nOpenSSL 0.9.8za 5 Jun 2014\nOpenSSL> quit\n```\n\n## \u6700\u65b0\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb(CA)\u3092\u5165\u624b\n\n\u672c\u6765\u3067\u3042\u308c\u3070\u30b5\u30fc\u30d0\u306e\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092openssh\u306e\u30a2\u30c3\u30d7\u30c7\u30fc\u30c8\u7b49\u3067\u5b9f\u65bd\u3059\u3079\u304d\u3067\u3059\u3002\n\u3057\u304b\u3057\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u306a\u3069\u3067\u305d\u308c\u304c\u56f0\u96e3\u306a\u5834\u5408\u306f\u3001\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u307e\u3059\u3002\n\n\u305d\u308c\u3067\u306f\u3001\u6b21\u3092\u53c2\u8003\u306bCA file\u3092\u30e6\u30fc\u30b6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u5c55\u958b\u3057\u3066\u305d\u308c\u3092\u7528\u3044\u3066SSL\u901a\u4fe1\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\nref. http://takuya-1st.hatenablog.jp/entry/20110306/1299436282\n\n\u4f8b\u306b\u5f93\u3063\u3066\u3001\u307e\u305a\u306fcacert.prm\u3092\u5206\u5272\u3057\u307e\u3059\u3002\n\n```bash\n# \u4efb\u610f\u306e\u8a3c\u660e\u66f8\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u308a\u307e\u3059\n$ mkdir certs\n$ cd certs\n\n# pem\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\n$ wget http://curl.haxx.se/ca/cacert.pem\n\n# \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u6307\u5b9a\u3057\u3066\u52d5\u4f5c\u3059\u308bwget\u5411\u3051\u306b\u3001\u5206\u5272\u3057\u307e\u3059\n$ curl http://curl.haxx.se/ca/cacert.pem \\\n| awk 'split_after==1{n++;split_after=0}\\\n /-----END CERTIFICATE-----/ {split_after=1} {print > \"cert\" n \".pem\"}'\n\n# \u6b21\u306e\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u6765\u307e\u3057\u305f\n$ ls certs/\ncert100.pem  cert115.pem  cert12.pem   cert144.pem  cert20.pem  cert35.pem  cert4.pem   cert64.pem  cert79.pem  cert93.pem\ncert101.pem  cert116.pem  cert130.pem  cert145.pem  cert21.pem  cert36.pem  cert50.pem  cert65.pem  cert7.pem   cert94.pem\ncert102.pem  cert117.pem  cert131.pem  cert146.pem  cert22.pem  cert37.pem  cert51.pem  cert66.pem  cert80.pem  cert95.pem\ncert103.pem  cert118.pem  cert132.pem  cert147.pem  cert23.pem  cert38.pem  cert52.pem  cert67.pem  cert81.pem  cert96.pem\ncert104.pem  cert119.pem  cert133.pem  cert148.pem  cert24.pem  cert39.pem  cert53.pem  cert68.pem  cert82.pem  cert97.pem\ncert105.pem  cert11.pem   cert134.pem  cert149.pem  cert25.pem  cert3.pem   cert54.pem  cert69.pem  cert83.pem  cert98.pem\ncert106.pem  cert120.pem  cert135.pem  cert14.pem   cert26.pem  cert40.pem  cert55.pem  cert6.pem   cert84.pem  cert99.pem\ncert107.pem  cert121.pem  cert136.pem  cert150.pem  cert27.pem  cert41.pem  cert56.pem  cert70.pem  cert85.pem  cert9.pem\ncert108.pem  cert122.pem  cert137.pem  cert151.pem  cert28.pem  cert42.pem  cert57.pem  cert71.pem  cert86.pem  cert.pem\ncert109.pem  cert123.pem  cert138.pem  cert152.pem  cert29.pem  cert43.pem  cert58.pem  cert72.pem  cert87.pem  \ncert10.pem   cert124.pem  cert139.pem  cert15.pem   cert2.pem   cert44.pem  cert59.pem  cert73.pem  cert88.pem\ncert110.pem  cert125.pem  cert13.pem   cert16.pem   cert30.pem  cert45.pem  cert5.pem   cert74.pem  cert89.pem\ncert111.pem  cert126.pem  cert140.pem  cert17.pem   cert31.pem  cert46.pem  cert60.pem  cert75.pem  cert8.pem\ncert112.pem  cert127.pem  cert141.pem  cert18.pem   cert32.pem  cert47.pem  cert61.pem  cert76.pem  cert90.pem\ncert113.pem  cert128.pem  cert142.pem  cert19.pem   cert33.pem  cert48.pem  cert62.pem  cert77.pem  cert91.pem\ncert114.pem  cert129.pem  cert143.pem  cert1.pem    cert34.pem  cert49.pem  cert63.pem  cert78.pem  cert92.pem\n```\n\n\u305d\u306e\u5f8c\u306b\u65b0\u3057\u304f\u7528\u610f\u3057\u305fCA\u30d5\u30a1\u30a4\u30eb\u3092\u53c2\u7167\u3057\u3066\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u767a\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u5148\u307b\u3069\u5931\u6557\u3057\u3066\u3044\u305f\u30b3\u30de\u30f3\u30c9\u304c\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u308b\u306f\u305a\u3067\u3059\u3002\n\n```bash\n# wget\u306f\u671f\u5f85\u901a\u308a\u52d5\u304d\u307e\u3059\n$ wget --ca-directory=/path/to/certs https://example.herokuapp.com/\n```\n\n```bash\n# curl\u306f\u53e4\u3044\u305f\u3081\u304b\u3001\u671f\u5f85\u901a\u308a\u52d5\u304d\u307e\u305b\u3093...\u3000\n# \u3082\u3061\u308d\u3093 -k \u3084 --insecure \u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4f7f\u3048\u3070\u901a\u4fe1\u51fa\u6765\u307e\u3059\u304c\u3002\n$ curl --cacert=/path/to/certs/cacert.pem https://www.google.co.jp/\ncurl: option --cacert=/path/to/certs/cacert.pem: is unknown\ncurl: try 'curl --help' or 'curl --manual' for more information\n\n$ curl -V\ncurl 7.16.3 (i686-pc-linux-gnu) libcurl/7.16.3 OpenSSL/0.9.7l zlib/1.2.3\nProtocols: tftp ftp telnet dict ldap http file https ftps\nFeatures: Largefile NTLM SSL libz\n```\n\n## PHP\u3067\u6700\u65b0\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb(CA)\u3092\u4f7f\u3046\u65b9\u6cd5\n\n\u6b21\u306e\u30da\u30fc\u30b8\u3092\u53c2\u8003\u306b\u8a66\u3057\u3066\u307f\u307e\u3059\u3002\nref. http://www.docnet.nu/tech-portal/2014/06/26/ssl-and-php-streams-part-1-you-are-doing-it-wrongtm/C0\n\n```php\n<?php\n// Change this to point to your newly downloaded CA file\n$caFile = '/path/to/certs/cacert.pem';\n\n// Create a stream context to pass the relevant SSL information\n$context = stream_context_create(array('ssl' => array(\n    'verify_peer' => false,\n    'verify_peer_name' => false,\n    'allow_self_signed' => false,\n    'cafile' => $caFile,\n)));\n\necho file_get_contents(\"https://example.herokuapp.com/\", false, $context);\n```\n\u3057\u304b\u3057\u6b21\u306e\u7d50\u679c\u3068\u306a\u308a\u3001cafile, capath\u5171\u306b\u4e0a\u624b\u304f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\u30fb\u30fb\u30fb\u8ab0\u304b\u6559\u3048\u3066\u304f\u3060\u3055\u3044 ><\n\n```php\nWarning: file_get_contents() [function.file-get-contents]: SSL operation failed with code 40. OpenSSL Error messages: not in error state in /path/to/ssl.php on line 14\n\nWarning: file_get_contents() [function.file-get-contents]: Failed to enable crypto in /path/to/ssl.php on line 14\n\nWarning: file_get_contents(https://example.herokuapp.com/) [function.file-get-contents]: failed to open stream: Bad file descriptor in /path/to/ssl.php on line 14\n```\n\n\u306a\u304a\u3001[curl](http://php.net/manual/ja/curl.examples-basic.php)\u304c\u4f7f\u3048\u308b\u74b0\u5883\u306a\u3089\u56de\u907f\u7b56\u304c\u307e\u3060\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n## \u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u306e\u6709\u52b9\u671f\u9650\u3092\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\n\n\u4efb\u610f\u306e\u30eb\u30fc\u30c8\u8a3c\u660e\u66f8\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u3092\u78ba\u8a8d\u3059\u308b\u306b\u306f\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\n```bash\n$ openssl x509 -text -noout -in \u78ba\u8a8d\u5bfe\u8c61\u30d5\u30a1\u30a4\u30eb.pem\n```\n\n\u6307\u5b9a\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4ee5\u4e0b\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5bfe\u8c61\u306b\u4e00\u62ec\u3067\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u306f\u6b21\u306e\u901a\u308a\u3067\u3059\u3002\n\n```bash\n$ find  /etc/ssl/certs/*.pem -type f -exec echo \"--------------------\" \\; -exec echo {} \\; -exec bash -c \"openssl x509 -text -noout -in {} | head\" \\;\n```\n\n\u3053\u306e\u30b3\u30de\u30f3\u30c9\u3092\u3001\u554f\u984c\u306e\u5171\u6709\u30ec\u30f3\u30bf\u30eb\u30b5\u30fc\u30d0\u3067\u5b9f\u884c\u3057\u307e\u3057\u305f\u3002\n\u304b\u306a\u308a\u56f0\u308b\u72b6\u614b\u3067\u3059\u306d\u3002\n\n```bash\n\n--------------------\n/etc/ssl/certs/eng1.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=BankEngine Inc., OU=Certification Authority Division, CN=bankengine/emailAddress=ca@bankengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=BankEngine Inc., OU=Certification Authority Division, CN=bankengine/emailAddress=ca@bankengine.com\n--------------------\n/etc/ssl/certs/eng2.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=CertEngine Inc., OU=Certification Authority Division, CN=certengine/emailAddress=ca@certengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=CertEngine Inc., OU=Certification Authority Division, CN=certengine/emailAddress=ca@certengine.com\n--------------------\n/etc/ssl/certs/eng3.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=FortEngine Inc., OU=Certification Authority Division, CN=fortengine/emailAddress=ca@fortengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=FortEngine Inc., OU=Certification Authority Division, CN=fortengine/emailAddress=ca@fortengine.com\n--------------------\n/etc/ssl/certs/eng4.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=MailEngine Inc., OU=Certification Authority Division, CN=mailengine/emailAddress=ca@mailengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=MailEngine Inc., OU=Certification Authority Division, CN=mailengine/emailAddress=ca@mailengine.com\n--------------------\n/etc/ssl/certs/eng5.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 0 (0x0)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=CA, ST=ON, L=Toronto, O=TraderEngine Inc., OU=Certification Authority Division, CN=traderengine/emailAddress=ca@traderengine.com\n        Validity\n            Not Before: Jan  1 00:00:00 1998 GMT\n            Not After : Jan 17 00:00:00 2038 GMT\n        Subject: C=CA, ST=ON, L=Toronto, O=TraderEngine Inc., OU=Certification Authority Division, CN=traderengine/emailAddress=ca@traderengine.com\n--------------------\n/etc/ssl/certs/Equifax-root1.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 903804111 (0x35def4cf)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=US, O=Equifax, OU=Equifax Secure Certificate Authority\n        Validity\n            Not Before: Aug 22 16:41:51 1998 GMT\n            Not After : Aug 22 16:41:51 2018 GMT\n        Subject: C=US, O=Equifax, OU=Equifax Secure Certificate Authority\n--------------------\n/etc/ssl/certs/ICP-Brasil.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 4 (0x4)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=BR, O=ICP-Brasil, OU=Instituto Nacional de Tecnologia da Informacao - ITI, L=Brasilia, ST=DF, CN=Autoridade Certificadora Raiz Brasileira\n        Validity\n            Not Before: Nov 30 12:58:00 2001 GMT\n            Not After : Nov 30 23:59:00 2011 GMT\n        Subject: C=BR, O=ICP-Brasil, OU=Instituto Nacional de Tecnologia da Informacao - ITI, L=Brasilia, ST=DF, CN=Autoridade Certificadora Raiz Brasileira\n--------------------\n/etc/ssl/certs/RegTP-5R.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 820138 (0xc83aa)\n        Signature Algorithm: ripemd160WithRSA\n        Issuer: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=5R-CA 1:PN\n        Validity\n            Not Before: Mar 22 08:55:51 2000 GMT\n            Not After : Mar 22 08:55:51 2005 GMT\n        Subject: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=5R-CA 1:PN\n--------------------\n/etc/ssl/certs/RegTP-6R.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 3330445 (0x32d18d)\n        Signature Algorithm: ripemd160WithRSA\n        Issuer: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=6R-Ca 1:PN\n        Validity\n            Not Before: Feb  1 09:52:17 2001 GMT\n            Not After : Jun  1 09:52:17 2005 GMT\n        Subject: C=DE, O=Regulierungsbeh\\xC8orde f\\xC8ur Telekommunikation und Post/0.2.262.1.10.7.20=1, CN=6R-Ca 1:PN\n--------------------\n/etc/ssl/certs/thawteCb.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 1 (0x1)\n        Signature Algorithm: md5WithRSAEncryption\n        Issuer: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Server CA/emailAddress=server-certs@thawte.com\n        Validity\n            Not Before: Aug  1 00:00:00 1996 GMT\n            Not After : Dec 31 23:59:59 2020 GMT\n        Subject: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Server CA/emailAddress=server-certs@thawte.com\n--------------------\n/etc/ssl/certs/thawteCp.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 1 (0x1)\n        Signature Algorithm: md5WithRSAEncryption\n        Issuer: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Premium Server CA/emailAddress=premium-server@thawte.com\n        Validity\n            Not Before: Aug  1 00:00:00 1996 GMT\n            Not After : Dec 31 23:59:59 2020 GMT\n        Subject: C=ZA, ST=Western Cape, L=Cape Town, O=Thawte Consulting cc, OU=Certification Services Division, CN=Thawte Premium Server CA/emailAddress=premium-server@thawte.com\n--------------------\n/etc/ssl/certs/vsign1.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            32:50:33:cf:50:d1:56:f3:5c:81:ad:65:5c:4f:c8:25\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=VeriSign, Inc., OU=Class 1 Public Primary Certification Authority\n        Validity\n            Not Before: Jan 29 00:00:00 1996 GMT\n            Not After : Jan  7 23:59:59 2020 GMT\n--------------------\n/etc/ssl/certs/vsign3.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            70:ba:e4:1d:10:d9:29:34:b6:38:ca:7b:03:cc:ba:bf\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=VeriSign, Inc., OU=Class 3 Public Primary Certification Authority\n        Validity\n            Not Before: Jan 29 00:00:00 1996 GMT\n            Not After : Aug  1 23:59:59 2028 GMT\n--------------------\n/etc/ssl/certs/vsignss.pem\nCertificate:\n    Data:\n        Version: 1 (0x0)\n        Serial Number:\n            02:ad:66:7e:4e:45:fe:5e:57:6f:3c:98:19:5e:dd:c0\n        Signature Algorithm: md2WithRSAEncryption\n        Issuer: C=US, O=RSA Data Security, Inc., OU=Secure Server Certification Authority\n        Validity\n            Not Before: Nov  9 00:00:00 1994 GMT\n            Not After : Jan  7 23:59:59 2010 GMT\n--------------------\n/etc/ssl/certs/wellsfgo.pem\nCertificate:\n    Data:\n        Version: 3 (0x2)\n        Serial Number: 971282334 (0x39e4979e)\n        Signature Algorithm: sha1WithRSAEncryption\n        Issuer: C=US, O=Wells Fargo, OU=Wells Fargo Certification Authority, CN=Wells Fargo Root Certificate Authority\n        Validity\n            Not Before: Oct 11 16:41:28 2000 GMT\n            Not After : Jan 14 16:41:28 2021 GMT\n        Subject: C=US, O=Wells Fargo, OU=Wells Fargo Certification Authority, CN=Wells Fargo Root Certificate Authority\n```\n\n## \u4f75\u305b\u3066\u8aad\u307f\u305f\u3044\n\n* [PHP][cURL] cURL\u3067SSL\uff08https\uff09\u306eCA\u8a3c\u660e\u66f8\u8b66\u544a\u306e\u56de\u907f\u3084\u8a2d\u5b9a\nhttp://mio-koduki.blogspot.jp/2012/08/php-curlsslhttpsca.html\n\n* \u30b5\u30fc\u30d0\u306eSSL CA(\u8a8d\u8a3c\u5c40)\u8a3c\u660e\u66f8\u304c\u53e4\u304f\u3066curl \u304c\u30a8\u30e9\u30fc\u306b\u306a\u308b\u4ef6\nhttp://d.hatena.ne.jp/hogem/20120705/1340284071\n", "tags": ["openssl0.9.8za", "PHP"]}