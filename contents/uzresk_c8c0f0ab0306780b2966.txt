{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nAMI\u306e\u30b3\u30d4\u30fc\u3092SDK for Java\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nAMI\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u3067\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u3067\u3061\u3087\u3063\u3068\u3057\u305fDR\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u306d\u3002\n\u307e\u305a\u306f\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3002\u6b21\u306b\u3001AMI\u306e\u30b3\u30d4\u30fc\u6a5f\u80fd\u3067\u306f\u30b3\u30d4\u30fc\u3055\u308c\u306a\u3044\u30bf\u30b0\u306e\u60c5\u5831\u30fb\u8d77\u52d5\u8a31\u53ef\u3092\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u3066\u307f\u307e\u3059\u3002\nhttp://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/CopyingAMIs.html\n\nAMI\u306e\u30b3\u30d4\u30fc\nAMI\u306fS3\u4e0a\u306b\u4fdd\u7ba1\u3055\u308c\u307e\u3059\u3002S3\u9593\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30c7\u30fc\u30bf\u8ee2\u9001\u306b\u306f\u8cbb\u7528\u304c\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u3067\u306e\u30b3\u30d4\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u306b\u3059\u308b\u306b\u306fcopyImageRequest#setSourceRegion\u306b\u5225\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308c\u3070\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u306eAMI\u30b3\u30d4\u30fc\u306f\u3001\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u306ecredential\u3092CopyImageRequest\u306b\u4e0e\u3048\u3066\u3084\u308c\u3070\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u3002\npackage aws.ec2.ami;\n\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.CopyImageRequest;\nimport com.amazonaws.services.ec2.model.CopyImageResult;\nimport com.amazonaws.services.ec2.model.CreateTagsRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesResult;\nimport com.amazonaws.services.ec2.model.Image;\nimport com.amazonaws.services.ec2.model.Tag;\n\npublic class Ec2AmiCopy {\n\n    /**\n     * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002<br>\n     * tag\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u3082\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n     * \n     * @param args\n     *            AMI image id\n     */\n    public static void main(String[] args) {\n\n        String sourceImageId = args[0];\n\n        if (sourceImageId == null || \"\".equals(sourceImageId)) {\n            throw new IllegalArgumentException(\"instance id is null or empty.\");\n        }\n\n        AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n        AmazonEC2 ec2ClientTokyo2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        // AMI\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068AMIID\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n        CopyImageRequest copyImageRequest = new CopyImageRequest();\n        copyImageRequest.setDescription(\"copy sourceImageId:\" + sourceImageId);\n        copyImageRequest.setSourceRegion(Regions.AP_NORTHEAST_1.getName());\n        copyImageRequest.setRequestCredentials(provider.getCredentials());\n        copyImageRequest.setSourceImageId(sourceImageId);\n\n        // AMI\u30b3\u30d4\u30fc\u306e\u5b9f\u884c\n        CopyImageResult copyImageResult = ec2ClientTokyo2\n                .copyImage(copyImageRequest);\n        String copyImageId = copyImageResult.getImageId();\n\n        // \u3053\u306e\u6642\u70b9\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u4ed8\u3051\u3089\u308c\u305f\u3060\u3051\u3067\u3059\u3002\n        System.out.println(sourceImageId + \"\u304b\u3089\" + copyImageId + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\");\n    }\n}\n\n\n\n\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u306e\u30b3\u30d4\u30fc\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u306b\u3064\u3044\u3066\u306f\u3001AMI\u30b3\u30d4\u30fc\u3067\u306f\u30b3\u30d4\u30fc\u3055\u308c\u307e\u305b\u3093\u306e\u3067\u3001\u30b3\u30d4\u30fc\u5f8c\u306b\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u3082\u30b3\u30d4\u30fc\u3057\u3066\u3042\u3052\u307e\u3059\u3002\npackage aws.ec2.ami;\n\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.CopyImageRequest;\nimport com.amazonaws.services.ec2.model.CopyImageResult;\nimport com.amazonaws.services.ec2.model.CreateTagsRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesResult;\nimport com.amazonaws.services.ec2.model.Image;\nimport com.amazonaws.services.ec2.model.Tag;\n\npublic class Ec2AmiCopy {\n\n    /**\n     * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002<br>\n     * tag\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u3082\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n     * \n     * @param args\n     *            AMI image id\n     */\n    public static void main(String[] args) {\n\n        String sourceImageId = args[0];\n\n        if (sourceImageId == null || \"\".equals(sourceImageId)) {\n            throw new IllegalArgumentException(\"instance id is null or empty.\");\n        }\n\n        AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n        AmazonEC2 ec2ClientTokyo2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        // AMI\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068AMIID\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n        CopyImageRequest copyImageRequest = new CopyImageRequest();\n        copyImageRequest.setDescription(\"copy sourceImageId:\" + sourceImageId);\n        copyImageRequest.setSourceRegion(Regions.AP_NORTHEAST_1.getName());\n        copyImageRequest.setRequestCredentials(provider.getCredentials());\n        copyImageRequest.setSourceImageId(sourceImageId);\n\n        // AMI\u30b3\u30d4\u30fc\u306e\u5b9f\u884c\n        CopyImageResult copyImageResult = ec2ClientTokyo2\n                .copyImage(copyImageRequest);\n        String copyImageId = copyImageResult.getImageId();\n\n        // \u3053\u306e\u6642\u70b9\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u4ed8\u3051\u3089\u308c\u305f\u3060\u3051\u3067\u3059\u3002\n        System.out.println(sourceImageId + \"\u304b\u3089\" + copyImageId + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\");\n\n        // Tag\u306e\u60c5\u5831\u3092\u30b3\u30d4\u30fc\u5143\u304b\u3089\u53d6\u5f97\u3057\u3066\u3001\u30b3\u30d4\u30fc\u3057\u305f\u5148\u306eAMI\u306b\u7d10\u4ed8\u3051\u307e\u3059\u3002\n        AmazonEC2 ec2ClientTokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        // Tag\u306e\u60c5\u5831\u3092\u53d6\u5f97\n        DescribeImagesResult describeImagesResult = ec2ClientTokyo\n                .describeImages(new DescribeImagesRequest()\n                        .withImageIds(sourceImageId));\n\n        List<Image> images = describeImagesResult.getImages();\n        if (images.size() != 1) {\n            throw new IllegalStateException(\"error:\" + images.size());\n        }\n\n        Image image = images.get(0);\n\n        // AMI\u30b3\u30d4\u30fc\u3057\u3066\u3067\u304d\u305f\u30a4\u30e1\u30fc\u30b8\u306b\u30bf\u30b0\u3092\u7d10\u4ed8\u3051\u307e\u3059\u3002\n        for (Tag tag : image.getTags()) {\n            ec2ClientTokyo2.createTags(new CreateTagsRequest().withResources(\n                    copyImageId).withTags(tag));\n        }\n    }\n}\n\n\n\n\n\u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u306e\u30b3\u30d4\u30fc\n\u8d77\u52d5\u8a31\u53ef\u306b\u3064\u3044\u3066\u3082\u30b3\u30d4\u30fc\u3055\u308c\u307e\u305b\u3093\u306e\u3067\u8abf\u5b50\u306b\u4e57\u3063\u3066\u30bf\u30b0\u3068\u4e00\u7dd2\u306b\u30b3\u30d4\u30fc\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u8d77\u52d5\u8a31\u53ef\u306f\u3001ManagementConsole\u3067\u306fPermission\u30bf\u30d6\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002Permission\u30bf\u30d6\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u306fSDK\u3067\u306fLaunchPermission\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\npackage aws.ec2.ami;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeImageAttributeRequest;\nimport com.amazonaws.services.ec2.model.DescribeImageAttributeResult;\nimport com.amazonaws.services.ec2.model.ImageAttributeName;\nimport com.amazonaws.services.ec2.model.LaunchPermission;\nimport com.amazonaws.services.ec2.model.LaunchPermissionModifications;\nimport com.amazonaws.services.ec2.model.ModifyImageAttributeRequest;\n\npublic class Ec2AmiLaunchPermissionCopy {\n\n    /**\n     * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u306b\u7d10\u3065\u304f\u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u3092<br>\n     * \u7b2c\u4e8c\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n     */\n    public static void main(String[] args) {\n\n        String sourceImageId = args[0];\n        String destImageId = args[1];\n\n        if (sourceImageId == null || \"\".equals(sourceImageId)\n                || destImageId == null || \"\".equals(destImageId)) {\n            throw new IllegalArgumentException(\"instance id is null or empty.\");\n        }\n\n        AWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n        AmazonEC2 ec2ClientTokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n                .createClient(AmazonEC2Client.class, provider,\n                        new ClientConfiguration());\n\n        // \u8d77\u52d5\u8a31\u53ef\uff08LaunchPermision\uff09\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n        DescribeImageAttributeResult describeImageAttributeResult = ec2ClientTokyo\n                .describeImageAttribute(new DescribeImageAttributeRequest(\n                        sourceImageId, ImageAttributeName.LaunchPermission));\n\n        ModifyImageAttributeRequest modifyImageAttributeRequest = new ModifyImageAttributeRequest(\n                destImageId, ImageAttributeName.LaunchPermission.toString());\n\n        for (LaunchPermission permission : describeImageAttributeResult\n                .getImageAttribute().getLaunchPermissions()) {\n            modifyImageAttributeRequest\n                    .setLaunchPermission(new LaunchPermissionModifications()\n                            .withAdd(permission));\n        }\n\n        ec2ClientTokyo.modifyImageAttribute(modifyImageAttributeRequest);\n    }\n}\n\n\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\nException in thread \"main\" com.amazonaws.AmazonServiceException: The AMI ID 'ami-eb3802ea' is currently pending and may not be used for this operation (Service: AmazonEC2; Status Code: 400; Error Code: InvalidAMIID.Unavailable; Request ID: 236e0f90-0d2e-47e7-b2cf-5d96e1ee450a)\n    at com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:1071)\n    at com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:719)\n    at com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:454)\n    at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:294)\n    at com.amazonaws.services.ec2.AmazonEC2Client.invoke(AmazonEC2Client.java:9393)\n    at com.amazonaws.services.ec2.AmazonEC2Client.modifyImageAttribute(AmazonEC2Client.java:3929)\n    at aws.ec2.ami.Ec2AmiCopy.main(Ec2AmiCopy.java:98)\n\n\nAMI\u306e\u30b3\u30d4\u30fc\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5f8c\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u304cpending\u306e\u9593\u306f\u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u306f\u30b3\u30d4\u30fc\u3067\u304d\u307e\u305b\u3093\u3002thread\u3092\u5f85\u305f\u305b\u3066available\u306e\u72b6\u614b\u307e\u3067\u307e\u3063\u3066\u30b3\u30d4\u30fc\u3059\u308b\u3057\u304b\u306a\u3044\u3067\u3059\u306d\u3002\n# \u306f\u3058\u3081\u306b\n\nAMI\u306e\u30b3\u30d4\u30fc\u3092SDK for Java\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3059\u3002\nAMI\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u3067\u30b3\u30d4\u30fc\u3059\u308b\u3053\u3068\u3067\u3061\u3087\u3063\u3068\u3057\u305fDR\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u306d\u3002\n\u307e\u305a\u306f\u7c21\u5358\u306a\u30b5\u30f3\u30d7\u30eb\u3002\u6b21\u306b\u3001AMI\u306e\u30b3\u30d4\u30fc\u6a5f\u80fd\u3067\u306f\u30b3\u30d4\u30fc\u3055\u308c\u306a\u3044\u30bf\u30b0\u306e\u60c5\u5831\u30fb\u8d77\u52d5\u8a31\u53ef\u3092\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u3066\u307f\u307e\u3059\u3002\n\nhttp://docs.aws.amazon.com/ja_jp/AWSEC2/latest/UserGuide/CopyingAMIs.html\n\n# AMI\u306e\u30b3\u30d4\u30fc\n\nAMI\u306fS3\u4e0a\u306b\u4fdd\u7ba1\u3055\u308c\u307e\u3059\u3002S3\u9593\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30c7\u30fc\u30bf\u8ee2\u9001\u306b\u306f\u8cbb\u7528\u304c\u304b\u304b\u308a\u307e\u3059\u306e\u3067\u3001\u3053\u3053\u3067\u306f\u6771\u4eac\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u3067\u306e\u30b3\u30d4\u30fc\u3092\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u306b\u3059\u308b\u306b\u306fcopyImageRequest#setSourceRegion\u306b\u5225\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3059\u308c\u3070\u5bfe\u5fdc\u3067\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u306eAMI\u30b3\u30d4\u30fc\u306f\u3001\u5225\u30a2\u30ab\u30a6\u30f3\u30c8\u306ecredential\u3092CopyImageRequest\u306b\u4e0e\u3048\u3066\u3084\u308c\u3070\u5b9f\u73fe\u53ef\u80fd\u3067\u3059\u3002\n\n```\npackage aws.ec2.ami;\n\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.CopyImageRequest;\nimport com.amazonaws.services.ec2.model.CopyImageResult;\nimport com.amazonaws.services.ec2.model.CreateTagsRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesResult;\nimport com.amazonaws.services.ec2.model.Image;\nimport com.amazonaws.services.ec2.model.Tag;\n\npublic class Ec2AmiCopy {\n\n\t/**\n\t * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002<br>\n\t * tag\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u3082\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\t * \n\t * @param args\n\t *            AMI image id\n\t */\n\tpublic static void main(String[] args) {\n\n\t\tString sourceImageId = args[0];\n\n\t\tif (sourceImageId == null || \"\".equals(sourceImageId)) {\n\t\t\tthrow new IllegalArgumentException(\"instance id is null or empty.\");\n\t\t}\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2ClientTokyo2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\t// AMI\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068AMIID\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\t\tCopyImageRequest copyImageRequest = new CopyImageRequest();\n\t\tcopyImageRequest.setDescription(\"copy sourceImageId:\" + sourceImageId);\n\t\tcopyImageRequest.setSourceRegion(Regions.AP_NORTHEAST_1.getName());\n\t\tcopyImageRequest.setRequestCredentials(provider.getCredentials());\n\t\tcopyImageRequest.setSourceImageId(sourceImageId);\n\n\t\t// AMI\u30b3\u30d4\u30fc\u306e\u5b9f\u884c\n\t\tCopyImageResult copyImageResult = ec2ClientTokyo2\n\t\t\t\t.copyImage(copyImageRequest);\n\t\tString copyImageId = copyImageResult.getImageId();\n\n\t\t// \u3053\u306e\u6642\u70b9\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u4ed8\u3051\u3089\u308c\u305f\u3060\u3051\u3067\u3059\u3002\n\t\tSystem.out.println(sourceImageId + \"\u304b\u3089\" + copyImageId + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\");\n\t}\n}\n\n\n```\n\n# \u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u306e\u30b3\u30d4\u30fc\n\n\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u306b\u3064\u3044\u3066\u306f\u3001AMI\u30b3\u30d4\u30fc\u3067\u306f\u30b3\u30d4\u30fc\u3055\u308c\u307e\u305b\u3093\u306e\u3067\u3001\u30b3\u30d4\u30fc\u5f8c\u306b\u30e6\u30fc\u30b6\u5b9a\u7fa9\u30bf\u30b0\u3082\u30b3\u30d4\u30fc\u3057\u3066\u3042\u3052\u307e\u3059\u3002\n\n```\npackage aws.ec2.ami;\n\nimport java.util.List;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.CopyImageRequest;\nimport com.amazonaws.services.ec2.model.CopyImageResult;\nimport com.amazonaws.services.ec2.model.CreateTagsRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesRequest;\nimport com.amazonaws.services.ec2.model.DescribeImagesResult;\nimport com.amazonaws.services.ec2.model.Image;\nimport com.amazonaws.services.ec2.model.Tag;\n\npublic class Ec2AmiCopy {\n\n\t/**\n\t * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u3092\u30ea\u30fc\u30b8\u30e7\u30f3\u9593\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002<br>\n\t * tag\u306e\u60c5\u5831\u306b\u3064\u3044\u3066\u3082\u5408\u308f\u305b\u3066\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\t * \n\t * @param args\n\t *            AMI image id\n\t */\n\tpublic static void main(String[] args) {\n\n\t\tString sourceImageId = args[0];\n\n\t\tif (sourceImageId == null || \"\".equals(sourceImageId)) {\n\t\t\tthrow new IllegalArgumentException(\"instance id is null or empty.\");\n\t\t}\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2ClientTokyo2 = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\t// AMI\u3092\u30b3\u30d4\u30fc\u3059\u308b\u3068\u304d\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u30b3\u30d4\u30fc\u5143\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3068AMIID\u3092\u6307\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\t\tCopyImageRequest copyImageRequest = new CopyImageRequest();\n\t\tcopyImageRequest.setDescription(\"copy sourceImageId:\" + sourceImageId);\n\t\tcopyImageRequest.setSourceRegion(Regions.AP_NORTHEAST_1.getName());\n\t\tcopyImageRequest.setRequestCredentials(provider.getCredentials());\n\t\tcopyImageRequest.setSourceImageId(sourceImageId);\n\n\t\t// AMI\u30b3\u30d4\u30fc\u306e\u5b9f\u884c\n\t\tCopyImageResult copyImageResult = ec2ClientTokyo2\n\t\t\t\t.copyImage(copyImageRequest);\n\t\tString copyImageId = copyImageResult.getImageId();\n\n\t\t// \u3053\u306e\u6642\u70b9\u3067\u306f\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u53d7\u3051\u4ed8\u3051\u3089\u308c\u305f\u3060\u3051\u3067\u3059\u3002\n\t\tSystem.out.println(sourceImageId + \"\u304b\u3089\" + copyImageId + \"\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\");\n\n\t\t// Tag\u306e\u60c5\u5831\u3092\u30b3\u30d4\u30fc\u5143\u304b\u3089\u53d6\u5f97\u3057\u3066\u3001\u30b3\u30d4\u30fc\u3057\u305f\u5148\u306eAMI\u306b\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\t\tAmazonEC2 ec2ClientTokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\t// Tag\u306e\u60c5\u5831\u3092\u53d6\u5f97\n\t\tDescribeImagesResult describeImagesResult = ec2ClientTokyo\n\t\t\t\t.describeImages(new DescribeImagesRequest()\n\t\t\t\t\t\t.withImageIds(sourceImageId));\n\n\t\tList<Image> images = describeImagesResult.getImages();\n\t\tif (images.size() != 1) {\n\t\t\tthrow new IllegalStateException(\"error:\" + images.size());\n\t\t}\n\n\t\tImage image = images.get(0);\n\n\t\t// AMI\u30b3\u30d4\u30fc\u3057\u3066\u3067\u304d\u305f\u30a4\u30e1\u30fc\u30b8\u306b\u30bf\u30b0\u3092\u7d10\u4ed8\u3051\u307e\u3059\u3002\n\t\tfor (Tag tag : image.getTags()) {\n\t\t\tec2ClientTokyo2.createTags(new CreateTagsRequest().withResources(\n\t\t\t\t\tcopyImageId).withTags(tag));\n\t\t}\n\t}\n}\n\n\n```\n\n\n# \u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u306e\u30b3\u30d4\u30fc\n\n\u8d77\u52d5\u8a31\u53ef\u306b\u3064\u3044\u3066\u3082\u30b3\u30d4\u30fc\u3055\u308c\u307e\u305b\u3093\u306e\u3067\u8abf\u5b50\u306b\u4e57\u3063\u3066\u30bf\u30b0\u3068\u4e00\u7dd2\u306b\u30b3\u30d4\u30fc\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u8d77\u52d5\u8a31\u53ef\u306f\u3001ManagementConsole\u3067\u306fPermission\u30bf\u30d6\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002Permission\u30bf\u30d6\u306b\u8868\u793a\u3055\u308c\u3066\u3044\u308b\u60c5\u5831\u306fSDK\u3067\u306fLaunchPermission\u30af\u30e9\u30b9\u3067\u8868\u73fe\u3055\u308c\u307e\u3059\u3002\n\n```\u8d77\u52d5\u8a31\u53ef\u3092\u30b3\u30d4\u30fc\u3059\u308b\n\npackage aws.ec2.ami;\n\nimport com.amazonaws.ClientConfiguration;\nimport com.amazonaws.auth.AWSCredentialsProvider;\nimport com.amazonaws.auth.profile.ProfileCredentialsProvider;\nimport com.amazonaws.regions.Region;\nimport com.amazonaws.regions.Regions;\nimport com.amazonaws.services.ec2.AmazonEC2;\nimport com.amazonaws.services.ec2.AmazonEC2Client;\nimport com.amazonaws.services.ec2.model.DescribeImageAttributeRequest;\nimport com.amazonaws.services.ec2.model.DescribeImageAttributeResult;\nimport com.amazonaws.services.ec2.model.ImageAttributeName;\nimport com.amazonaws.services.ec2.model.LaunchPermission;\nimport com.amazonaws.services.ec2.model.LaunchPermissionModifications;\nimport com.amazonaws.services.ec2.model.ModifyImageAttributeRequest;\n\npublic class Ec2AmiLaunchPermissionCopy {\n\n\t/**\n\t * \u7b2c\u4e00\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u306b\u7d10\u3065\u304f\u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u3092<br>\n\t * \u7b2c\u4e8c\u5f15\u6570\u3067\u6307\u5b9a\u3055\u308c\u305fAMI image\u306b\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\t */\n\tpublic static void main(String[] args) {\n\n\t\tString sourceImageId = args[0];\n\t\tString destImageId = args[1];\n\n\t\tif (sourceImageId == null || \"\".equals(sourceImageId)\n\t\t\t\t|| destImageId == null || \"\".equals(destImageId)) {\n\t\t\tthrow new IllegalArgumentException(\"instance id is null or empty.\");\n\t\t}\n\n\t\tAWSCredentialsProvider provider = new ProfileCredentialsProvider(\"uzr\");\n\n\t\tAmazonEC2 ec2ClientTokyo = Region.getRegion(Regions.AP_NORTHEAST_1)\n\t\t\t\t.createClient(AmazonEC2Client.class, provider,\n\t\t\t\t\t\tnew ClientConfiguration());\n\n\t\t// \u8d77\u52d5\u8a31\u53ef\uff08LaunchPermision\uff09\u3092\u30b3\u30d4\u30fc\u3057\u307e\u3059\u3002\n\t\tDescribeImageAttributeResult describeImageAttributeResult = ec2ClientTokyo\n\t\t\t\t.describeImageAttribute(new DescribeImageAttributeRequest(\n\t\t\t\t\t\tsourceImageId, ImageAttributeName.LaunchPermission));\n\n\t\tModifyImageAttributeRequest modifyImageAttributeRequest = new ModifyImageAttributeRequest(\n\t\t\t\tdestImageId, ImageAttributeName.LaunchPermission.toString());\n\n\t\tfor (LaunchPermission permission : describeImageAttributeResult\n\t\t\t\t.getImageAttribute().getLaunchPermissions()) {\n\t\t\tmodifyImageAttributeRequest\n\t\t\t\t\t.setLaunchPermission(new LaunchPermissionModifications()\n\t\t\t\t\t\t\t.withAdd(permission));\n\t\t}\n\n\t\tec2ClientTokyo.modifyImageAttribute(modifyImageAttributeRequest);\n\t}\n}\n\n\n```\n\n\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\u3002\n\n```\n\nException in thread \"main\" com.amazonaws.AmazonServiceException: The AMI ID 'ami-eb3802ea' is currently pending and may not be used for this operation (Service: AmazonEC2; Status Code: 400; Error Code: InvalidAMIID.Unavailable; Request ID: 236e0f90-0d2e-47e7-b2cf-5d96e1ee450a)\n\tat com.amazonaws.http.AmazonHttpClient.handleErrorResponse(AmazonHttpClient.java:1071)\n\tat com.amazonaws.http.AmazonHttpClient.executeOneRequest(AmazonHttpClient.java:719)\n\tat com.amazonaws.http.AmazonHttpClient.executeHelper(AmazonHttpClient.java:454)\n\tat com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:294)\n\tat com.amazonaws.services.ec2.AmazonEC2Client.invoke(AmazonEC2Client.java:9393)\n\tat com.amazonaws.services.ec2.AmazonEC2Client.modifyImageAttribute(AmazonEC2Client.java:3929)\n\tat aws.ec2.ami.Ec2AmiCopy.main(Ec2AmiCopy.java:98)\n\n```\n\nAMI\u306e\u30b3\u30d4\u30fc\u30ea\u30af\u30a8\u30b9\u30c8\u9001\u4fe1\u5f8c\u3001\u30b9\u30c6\u30fc\u30bf\u30b9\u304cpending\u306e\u9593\u306f\u8d77\u52d5\u8a31\u53ef\u8a2d\u5b9a\u306f\u30b3\u30d4\u30fc\u3067\u304d\u307e\u305b\u3093\u3002thread\u3092\u5f85\u305f\u305b\u3066available\u306e\u72b6\u614b\u307e\u3067\u307e\u3063\u3066\u30b3\u30d4\u30fc\u3059\u308b\u3057\u304b\u306a\u3044\u3067\u3059\u306d\u3002\n\n", "tags": ["AWS", "EC2", "AWS_SDK"]}