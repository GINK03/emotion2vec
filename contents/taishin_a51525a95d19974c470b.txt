{"context": "cloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\u307e\u305f\u3082CircleCI\u3067\u3059\u3002\n\u4eca\u5ea6\u306fCloudFormation\u3092\u30c6\u30b9\u30c8\u3092CircleCI\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u306fawspec\u3092\u4f7f\u3044\u307e\u3059\u3002\nawspec\n\n\u8a2d\u5b9a\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3002\nhttps://github.com/taishin/cfn-ci\n\nCloudFormation\ntemplate.cform\nVPC\u4e0a\u306bEC2\u30921\u53f0\u305f\u3066\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nCloudFormation\u3067\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9(\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u7b49)\u306f\u3001\u540d\u524d\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u305f\u308a\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u4ee3\u5165\u3057\u306b\u304f\u3044\u306e\u3067\u3001Tag\u3067\u540d\u524d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\nawspec\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\nEC2\n\nEC2\u306fImageID\u3001InstanceType\u3001\u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u3092\u3082\u3063\u3066\u3044\u308b\u3053\u3068\u3001\n\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001VPC\u7b49\u306e\u78ba\u8a8d\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n ####\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u90e8\u5206\u306fCircleCI\u306e\u5909\u6570\u306b\u306a\u308b\u306e\u3067\u3001circle.yml\u3067\u66f8\u304d\u63db\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002(\u5f8c\u8ff0)\n\nec2_spec.rb-template\nrequire 'spec_helper'\ndescribe ec2('####INSTANCEID####') do\n  it { should exist }\n  it { should be_running }\n  its(:image_id) { should eq '####IMAGEID####' }\n  its(:instance_type) { should eq '####INSTANCETYPE####' }\n  its(:public_ip_address) { should match \"^\\\\d{1,3}\\.\\\\d{1,3}\\.\\\\d{1,3}\\.\\\\d{1,3}$\" }\n  its(:key_name) { should eq '####KEYNAME####' }\n  it { should have_security_group('CFn-CI-SG-HTTP') }\n  it { should have_security_group('CFn-CI-SG-Base') }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  it { should belong_to_subnet('CFn-CI-Subnet1A') }\nend\n\n\n\nVPC\n\nVPC\u306fCIDR\u306eIP\u30a2\u30c9\u30ec\u30b9\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\nvpc_spec.rb\nrequire 'spec_helper'\n\ndescribe vpc('CFn-CI-VPC') do\n  it { should exist }\n  it { should be_available }\n  its(:cidr_block) { should eq '10.0.0.0/16' }\n  it { should have_route_table('CFn-CI-PubRT') }\nend\n\ndescribe subnet('CFn-CI-Subnet1A') do\n  it { should exist }\n  it { should be_available }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  its(:cidr_block) { should eq '10.0.1.0/24' }\nend\n\ndescribe subnet('CFn-CI-Subnet1C') do\n  it { should exist }\n  it { should be_available }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  its(:cidr_block) { should eq '10.0.2.0/24' }\nend\n\ndescribe route_table('CFn-CI-PubRT') do\n  it { should exist }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  it { should have_route('10.0.0.0/16').target(gateway: 'local') }\n  it { should have_route('0.0.0.0/0').target(gateway: 'CFn-CI-IGW') }\n  it { should have_subnet('CFn-CI-Subnet1C') }\n  it { should have_subnet('CFn-CI-Subnet1A') }\nend\n\n\n\nSecurityGroup\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u30eb\u30fc\u30eb\u306e\u78ba\u8a8d\u3067\u3059\u3002\n\nsg_spec.rb\nrequire 'spec_helper'\n\ndescribe security_group('CFn-CI-SG-Base') do\n  it { should exist }\n  its(:inbound) { should be_opened(22).protocol('tcp').for('0.0.0.0/0') }\n  its(:outbound) { should be_opened }\n  its(:inbound_rule_count) { should eq 1 }\n  its(:outbound_rule_count) { should eq 1 }\n  its(:inbound_permissions_count) { should eq 1 }\n  its(:outbound_permissions_count) { should eq 1 }\n  it { should belong_to_vpc('CFn-CI-VPC') }\nend\n\ndescribe security_group('CFn-CI-SG-HTTP') do\n  it { should exist }\n  its(:inbound) { should be_opened(80).protocol('tcp').for('0.0.0.0/0') }\n  its(:outbound) { should be_opened }\n  its(:inbound_rule_count) { should eq 1 }\n  its(:outbound_rule_count) { should eq 1 }\n  its(:inbound_permissions_count) { should eq 1 }\n  its(:outbound_permissions_count) { should eq 1 }\n  it { should belong_to_vpc('CFn-CI-VPC') }\nend\n\n\n\ncircle.yml\ncircle.yml\u3067\u306fCloudFormation\u3092\u5b9f\u884c\u3057\u3001EC2\u306eInstanceID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nSSH Key\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u3001AMI ID\u306f\u5909\u6570\u3067\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001CloudFormation\u8d77\u52d5\u5f8c\u3001ec2_spec.rb-template\u3092sed\u3067\u5909\u66f4\u3057\u3001ec2_spec.rb\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\ncircle.yml\nmachine:\n  timezone: Asia/Tokyo\n  ruby:\n    version:\n      2.1.2\n  environment:\n    AWS_AMI_ID: ami-6154bb00\n    AWS_INSTANCE_TYPE: t2.micro\n    AWS_CF_STACK_NAME: cfn-ci\n\ndependencies:\n  pre:\n\ntest:\n  pre:\n    - aws cloudformation create-stack --stack-name ${AWS_CF_STACK_NAME} --template-body file://template.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=$AWS_AMI_ID ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name ${AWS_CF_STACK_NAME}\n    - aws cloudformation describe-stacks --stack-name ${AWS_CF_STACK_NAME} | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"InstanceId\") | .OutputValue' > /tmp/instanceid.txt\n    - sed -e \"s/####INSTANCEID####/`cat /tmp/instanceid.txt`/g\" -e \"s/####KEYNAME####/$AWS_KEY_NAME/g\" -e \"s/####IMAGEID####/$AWS_AMI_ID/g\" -e \"s/####INSTANCETYPE####/$AWS_INSTANCE_TYPE/g\" spec/ec2_spec.rb-template > spec/ec2_spec.rb\n\n  override:\n    - bundle exec rake spec\n  post:\n    - aws cloudformation delete-stack --stack-name ${AWS_CF_STACK_NAME}\n\n\n\nCircleCI\nCircleCI\u306e\u753b\u9762\u4e0a\u306e\u8a2d\u5b9a\u306f\u3001\nhttp://qiita.com/taishin/items/89b42106582a2aa5495b\n\u3068\u540c\u3058\u304f\u3001\n\nAWS Permissions\n\n\nAccessKey\nSecrectAccesskey\n\n\nEnvironment Variables\n\n\nAWS_DEFAULT_REGION\nAWS_KEY_NAME\n\n\n\n\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n\u5b9f\u884c\nBuild\u3055\u305b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3001\u7d42\u308f\u308c\u3070CloudFormation\u3092\u524a\u9664\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n\ncloudpack\u5927\u962a\u306e\u4f50\u3005\u6728\u3067\u3059\u3002\n\n\u307e\u305f\u3082CircleCI\u3067\u3059\u3002\n\u4eca\u5ea6\u306fCloudFormation\u3092\u30c6\u30b9\u30c8\u3092CircleCI\u3067\u3084\u3063\u3066\u307f\u307e\u3059\u3002\n\u30c6\u30b9\u30c8\u306fawspec\u3092\u4f7f\u3044\u307e\u3059\u3002\n\n[awspec](https://github.com/k1LoW/awspec)\n\n# \u8a2d\u5b9a\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u306b\u3002\nhttps://github.com/taishin/cfn-ci\n\n### CloudFormation\n\n[template.cform](https://github.com/taishin/cfn-ci/blob/master/template.cform)\nVPC\u4e0a\u306bEC2\u30921\u53f0\u305f\u3066\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\nCloudFormation\u3067\u4f5c\u6210\u3055\u308c\u305f\u30ea\u30bd\u30fc\u30b9(\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u7b49)\u306f\u3001\u540d\u524d\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u304c\u4ed8\u4e0e\u3055\u308c\u3066\u3044\u305f\u308a\u3001\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u4ee3\u5165\u3057\u306b\u304f\u3044\u306e\u3067\u3001Tag\u3067\u540d\u524d\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\u3002\n\n### awspec\u30c6\u30b9\u30c8\u30b3\u30fc\u30c9\n\n- EC2\n \nEC2\u306fImageID\u3001InstanceType\u3001\u30d1\u30d6\u30ea\u30c3\u30afIP\u30a2\u30c9\u30ec\u30b9\u3092\u3082\u3063\u3066\u3044\u308b\u3053\u3068\u3001\n\u9069\u7528\u3055\u308c\u3066\u3044\u308b\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u3001VPC\u7b49\u306e\u78ba\u8a8d\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n ####\u3067\u56f2\u307e\u308c\u3066\u3044\u308b\u90e8\u5206\u306fCircleCI\u306e\u5909\u6570\u306b\u306a\u308b\u306e\u3067\u3001circle.yml\u3067\u66f8\u304d\u63db\u3048\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002(\u5f8c\u8ff0)\n\n```ruby:ec2_spec.rb-template\nrequire 'spec_helper'\ndescribe ec2('####INSTANCEID####') do\n  it { should exist }\n  it { should be_running }\n  its(:image_id) { should eq '####IMAGEID####' }\n  its(:instance_type) { should eq '####INSTANCETYPE####' }\n  its(:public_ip_address) { should match \"^\\\\d{1,3}\\.\\\\d{1,3}\\.\\\\d{1,3}\\.\\\\d{1,3}$\" }\n  its(:key_name) { should eq '####KEYNAME####' }\n  it { should have_security_group('CFn-CI-SG-HTTP') }\n  it { should have_security_group('CFn-CI-SG-Base') }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  it { should belong_to_subnet('CFn-CI-Subnet1A') }\nend\n```\n\n- VPC\n\nVPC\u306fCIDR\u306eIP\u30a2\u30c9\u30ec\u30b9\u3001\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u30c6\u30fc\u30d6\u30eb\u306e\u78ba\u8a8d\u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n```ruby:vpc_spec.rb\nrequire 'spec_helper'\n\ndescribe vpc('CFn-CI-VPC') do\n  it { should exist }\n  it { should be_available }\n  its(:cidr_block) { should eq '10.0.0.0/16' }\n  it { should have_route_table('CFn-CI-PubRT') }\nend\n\ndescribe subnet('CFn-CI-Subnet1A') do\n  it { should exist }\n  it { should be_available }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  its(:cidr_block) { should eq '10.0.1.0/24' }\nend\n\ndescribe subnet('CFn-CI-Subnet1C') do\n  it { should exist }\n  it { should be_available }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  its(:cidr_block) { should eq '10.0.2.0/24' }\nend\n\ndescribe route_table('CFn-CI-PubRT') do\n  it { should exist }\n  it { should belong_to_vpc('CFn-CI-VPC') }\n  it { should have_route('10.0.0.0/16').target(gateway: 'local') }\n  it { should have_route('0.0.0.0/0').target(gateway: 'CFn-CI-IGW') }\n  it { should have_subnet('CFn-CI-Subnet1C') }\n  it { should have_subnet('CFn-CI-Subnet1A') }\nend\n```\n\n- SecurityGroup\n\n\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u30b0\u30eb\u30fc\u30d7\u306f\u30eb\u30fc\u30eb\u306e\u78ba\u8a8d\u3067\u3059\u3002\n\n```ruby:sg_spec.rb\nrequire 'spec_helper'\n\ndescribe security_group('CFn-CI-SG-Base') do\n  it { should exist }\n  its(:inbound) { should be_opened(22).protocol('tcp').for('0.0.0.0/0') }\n  its(:outbound) { should be_opened }\n  its(:inbound_rule_count) { should eq 1 }\n  its(:outbound_rule_count) { should eq 1 }\n  its(:inbound_permissions_count) { should eq 1 }\n  its(:outbound_permissions_count) { should eq 1 }\n  it { should belong_to_vpc('CFn-CI-VPC') }\nend\n\ndescribe security_group('CFn-CI-SG-HTTP') do\n  it { should exist }\n  its(:inbound) { should be_opened(80).protocol('tcp').for('0.0.0.0/0') }\n  its(:outbound) { should be_opened }\n  its(:inbound_rule_count) { should eq 1 }\n  its(:outbound_rule_count) { should eq 1 }\n  its(:inbound_permissions_count) { should eq 1 }\n  its(:outbound_permissions_count) { should eq 1 }\n  it { should belong_to_vpc('CFn-CI-VPC') }\nend\n```\n\n### circle.yml\n\ncircle.yml\u3067\u306fCloudFormation\u3092\u5b9f\u884c\u3057\u3001EC2\u306eInstanceID\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\nSSH Key\u3001\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30bf\u30a4\u30d7\u3001AMI ID\u306f\u5909\u6570\u3067\u5909\u66f4\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u308b\u306e\u3067\u3001CloudFormation\u8d77\u52d5\u5f8c\u3001ec2_spec.rb-template\u3092sed\u3067\u5909\u66f4\u3057\u3001ec2_spec.rb\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n```yaml:circle.yml\nmachine:\n  timezone: Asia/Tokyo\n  ruby:\n    version:\n      2.1.2\n  environment:\n    AWS_AMI_ID: ami-6154bb00\n    AWS_INSTANCE_TYPE: t2.micro\n    AWS_CF_STACK_NAME: cfn-ci\n\ndependencies:\n  pre:\n\ntest:\n  pre:\n    - aws cloudformation create-stack --stack-name ${AWS_CF_STACK_NAME} --template-body file://template.cform --parameters ParameterKey=KeyName,ParameterValue=$AWS_KEY_NAME ParameterKey=ImageId,ParameterValue=$AWS_AMI_ID ParameterKey=InstanceType,ParameterValue=$AWS_INSTANCE_TYPE\n    - aws cloudformation wait stack-create-complete --stack-name ${AWS_CF_STACK_NAME}\n    - aws cloudformation describe-stacks --stack-name ${AWS_CF_STACK_NAME} | jq -r '.Stacks[].Outputs[] | select(.OutputKey == \"InstanceId\") | .OutputValue' > /tmp/instanceid.txt\n    - sed -e \"s/####INSTANCEID####/`cat /tmp/instanceid.txt`/g\" -e \"s/####KEYNAME####/$AWS_KEY_NAME/g\" -e \"s/####IMAGEID####/$AWS_AMI_ID/g\" -e \"s/####INSTANCETYPE####/$AWS_INSTANCE_TYPE/g\" spec/ec2_spec.rb-template > spec/ec2_spec.rb\n    \n  override:\n    - bundle exec rake spec\n  post:\n    - aws cloudformation delete-stack --stack-name ${AWS_CF_STACK_NAME}\n```\n\n### CircleCI\n\nCircleCI\u306e\u753b\u9762\u4e0a\u306e\u8a2d\u5b9a\u306f\u3001\nhttp://qiita.com/taishin/items/89b42106582a2aa5495b\n\u3068\u540c\u3058\u304f\u3001\n\n- AWS Permissions\n    - AccessKey\n\t- SecrectAccesskey\n- Environment Variables\n\t- AWS_DEFAULT_REGION\n\t- AWS_KEY_NAME\n\t\n\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n# \u5b9f\u884c\n\nBuild\u3055\u305b\u308b\u3068\u3053\u3093\u306a\u611f\u3058\u3067\u30c6\u30b9\u30c8\u3057\u3066\u3001\u7d42\u308f\u308c\u3070CloudFormation\u3092\u524a\u9664\u3057\u3066\u304f\u308c\u307e\u3059\u3002\n\n![Kobito.WEGY7o.png](https://qiita-image-store.s3.amazonaws.com/0/3246/fc051da6-6dd3-c580-4439-fa700d8f25d3.png \"Kobito.WEGY7o.png\")\n\n\n", "tags": ["CloudFormation", "CircleCI", "awspec", "AWS"]}