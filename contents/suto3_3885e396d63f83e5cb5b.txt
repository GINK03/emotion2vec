{"context": " More than 1 year has passed since last update.Python + PIL \u3067\u3001Web\u30da\u30fc\u30b8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306a\u3093\u304b\u306b\u4f7f\u3046\u30c0\u30df\u30fc\u753b\u50cf\uff08\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u3068\u3044\u3046\u306e\uff09\u3092\u4e00\u6c17\u306b\u4f5c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\u3084\u3063\u3064\u3051\u98a8\u5473\u3002Python\u306f2.7\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\nimage-wire-frame-box.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n'''\n\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u3092\u4f5c\u6210\u3059\u308b\n'''\n\nimport Image\nimport ImageDraw\nimport ImageFont\nimport sys\n\n\ndef make_image(screen, prefix, extension, pen_color, bg_color):\n    \"\"\"\n    \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n    \"\"\"\n\n    # \u30d5\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30b9\u306f\u9055\u3046\u306e\u3067\u3001\u305d\u306e\u70b9\u3092\u8003\u616e\uff08\u5b9f\u306f\u3001\u3084\u3063\u3064\u3051\uff09\n    if sys.platform == \"darwin\":\n        # OSX  \u306e\u5834\u5408\n        # \u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306f\u3046\u307e\u304f\u884c\u304b\u306a\u304b\u3063\u305f\n        #FONTPATH = '/Library/Fonts/Osaka.ttf'\n        FONTPATH = '/Library/Fonts/Verdana.ttf'\n    elif sys.platform == \"linux2\":\n        # Linux \u306e\u5834\u5408\n        FONTPATH = '/usr/share/fonts/truetype/fonts-japanese-gothic.ttf'\n    else:\n        # \u305d\u308c\u4ee5\u5916\u306fWindows\u3068\u5224\u5b9a\u3059\u308b\uff08\u3084\u3063\u3064\u3051\uff09\n        # FONTPATH = 'hgrme.ttc'\n        FONTPATH = 'C:\\WINDOWS\\Fonts\\MSGOTHIC.ttc'\n\n    # \u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\n    font = ImageFont.truetype(FONTPATH, 24, encoding='utf-8')\n\n    img = Image.new('RGB', screen, bg_color)\n    x, y = img.size\n    u = x - 1\n    v = y - 1\n    draw = ImageDraw.Draw(img)\n\n    draw.line((0, 0, u, 0), pen_color)\n    draw.line((0, 0, u, v), pen_color)\n    draw.line((0, 0, 0, v), pen_color)\n    draw.line((u, 0, 0, v), pen_color)\n    draw.line((u, 0, u, v), pen_color)\n    draw.line((0, v, u, v), pen_color)\n\n    #\u3000\u753b\u50cf\u306b\u6587\u5b57\u3092\u5165\u308c\u308b\uff08\u3084\u3063\u3064\u3051\uff09\n    if x > 63 and y > 24:\n        draw.text((2, (y - 24) / 2), str(x) + \"x\" + str(y),\n            font=font, fill=pen_color)\n\n    savefile = prefix + str(x) + \"x\" + str(y) + extension\n    img.save(savefile)\n\nif __name__ == '__main__':\n    # \u753b\u50cf\u306e\u30b5\u30a4\u30ba\n    screens = (\n        (16, 16),      # favicon\n        (32, 32),      # favicon\n        (24, 24),      # windows icon\n        (48, 48),      # windows icon / avatar\n        (96, 96),      # windows icon / avatar\n        (64, 64),      # mac icon / avatar\n        (128, 128),    # mac icon / avatar\n        (100, 100),    # icon / avatar\n        (150, 150),    # icon / avatar\n        (256, 256),    # icon / avatar ----\n        (320, 240),    # QVGA\n        (240, 320),    # QVGA\n        (640, 480),    # VGA\n        (480, 640),    # VGA\uff08\u7e26\uff09\n        (800, 600),    # SVGA\n        (600, 800),    # SVGA\uff08\u7e26\uff09\n        (1024, 768),   # XGA\n        (768, 1024),   # XGA\uff08\u7e26\uff09\n        (1280, 960),   # Quad-VGA\n        (960, 1280),   # Quad-VGA\uff08\u7e26\uff09\n        (1600, 1200),  # UXGA\n        (1200, 1600),  # UXGA\uff08\u7e26\uff09\n        (1280, 720),   # HDTV 720p\n        (720, 1280),   # HDTV 720p\uff08\u7e26\uff09\n        (1920, 1080),  # HDTV 1080p\n        (1080, 1920),  # HDTV 1080p\uff08\u7e26\uff09----\n        (88, 31),      # IMU Micro Bar \u30de\u30a4\u30af\u30ed\u30d0\u30fc\n        (120, 60),     # IMU Button 2 \u30dc\u30bf\u30f32\n        (160, 600),    # IMU Wide Skyscraper \u30ef\u30a4\u30c9 \u30b9\u30ab\u30a4\u30b9\u30af\u30ec\u30a4\u30d1\u30fc\n        (300, 600),    # IMU Half Page Ad \u30cf\u30fc\u30d5 \u30da\u30fc\u30b8\n        (180, 150),    # IMU Rectangle \u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u5c0f\uff09\n        (300, 250),    # IMU Medium Rectangle \u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u4e2d\uff09\n        (728, 90),     # IMU Leaderboard \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\n        (120, 90),     # IMU \uff08\u524a\u9664\uff09Button 1 \u30dc\u30bf\u30f31\n        (120, 240),    # IMU \uff08\u524a\u9664\uff09Vertical Banner \u7e26\u9577\u30d0\u30ca\u30fc\n        (120, 600),    # IMU \uff08\u524a\u9664\uff09Skyscraper \u30b9\u30ab\u30a4\u30b9\u30af\u30ec\u30a4\u30d1\u30fc\n        (125, 125),    # IMU \uff08\u524a\u9664\uff09Square Button \u30b9\u30af\u30a8\u30a2\u30fb\u30dc\u30bf\u30f3\u3001\u30dc\u30bf\u30f3\n        (234, 60),     # IMU \uff08\u524a\u9664\uff09Half Banner \u30cf\u30fc\u30d5\u30d0\u30ca\u30fc\n        (240, 400),    # IMU \uff08\u524a\u9664\uff09Vertical Rectangle \u7e26\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\n        (250, 250),    # IMU \uff08\u524a\u9664\uff09Square Pop-Up \u30b9\u30af\u30a8\u30a2\n        (300, 100),    # IMU \uff08\u524a\u9664\uff093:1 Rectangle 3:1\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\n        (336, 280),    # IMU \uff08\u524a\u9664\uff09Large Rectangle \u30e9\u30fc\u30b8\u30fb\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\u3001\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u5927\uff09\n        (468, 60),     # IMU \uff08\u524a\u9664\uff09Full Banner \u30d0\u30ca\u30fc\u3001\u30d5\u30eb\u30d0\u30ca\u30fc\n        (720, 300),    # IMU \uff08\u524a\u9664\uff09Pop-Under \u30dd\u30c3\u30d7\u30fb\u30a2\u30f3\u30c0\u30fc\n        (200, 200),    # Google\u3000\u30b9\u30af\u30a8\u30a2\uff08\u5c0f\uff09\n        (970, 90),     # Google\u3000\u30e9\u30fc\u30b8 \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\u3001\u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\uff08\u5927\uff09\n        (320, 50),     # Google\u3000\u30e2\u30d0\u30a4\u30eb \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\n        (320, 100),    # Google\u3000\u30e2\u30d0\u30a4\u30eb \u30d0\u30ca\u30fc\uff08\u5927\uff09\n        (240, 400),    # Google\u3000\u300c\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u7e26\u9577\uff09\u300d\u30ed\u30b7\u30a2\n        (980, 120),    # Google\u3000\u300c\u30d1\u30ce\u30e9\u30de\u300d\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3\u3068\u30d5\u30a3\u30f3\u30e9\u30f3\u30c9\n        (250, 360),    # Google\u3000\u300c\u30c8\u30ea\u30d7\u30eb \u30ef\u30a4\u30c9\u30b9\u30af\u30ea\u30fc\u30f3\u300d\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3\n        (930, 180),    # Google\u3000\u300c\u30c8\u30c3\u30d7\u30d0\u30ca\u30fc\u300d\u30c7\u30f3\u30de\u30fc\u30af\n        (580, 400),    # Google\u3000\u300c\u30cd\u30c3\u30c8\u30dc\u30fc\u30c9\u300d\u30ce\u30eb\u30a6\u30a7\u30fc\n        (750, 100),    # Google\u3000\u300c\u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (750, 200),    # Google\u3000\u300c\u30c0\u30d6\u30eb \u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (750, 300),    # Google\u3000\u300c\u30c8\u30ea\u30d7\u30eb \u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (170, 40),     # banner \u8a73\u7d30\u4e0d\u660e\n        (180, 70),     # banner \u8a73\u7d30\u4e0d\u660e\n        (200, 40),     # banner \u65e5\u672c\u306eCG\u7cfb\u306b\u591a\u3044\u30d0\u30ca\u30fc\u30b5\u30a4\u30ba\u3060\u3063\u3066\n        (400, 40)      # banner \u65e5\u672c\u306b\u591a\u3044\u30d0\u30ca\u30fc\u30b5\u30a4\u30ba\u3060\u3063\u3066\n        )\n\n    # \u63a5\u982d\u8f9e\uff08\u30d7\u30ec\u30d5\u30a3\u30af\u30b9\uff09\u3092\u6307\u5b9a\n    prefix = \"wf-\"\n\n    # \u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u3092\u6307\u5b9a\n    #extension = \".png\"\n    extension = \".jpg\"\n\n    # \u63cf\u753b\u8272\uff08RGB\uff09\u3092\u6307\u5b9a\n    pen_color = (0x00, 0x00, 0xdd)\n\n    # \u753b\u50cf\u306e\u80cc\u666f\u8272\uff08RGB\uff09\u3092\u6307\u5b9a\n    bg_color = (0xdd, 0xdd, 0xdd)\n\n    for screen in screens:\n        print \"size: %d,%d\" % (screen[0], screen[1])\n        make_image(screen, prefix, extension, pen_color, bg_color)\n#EOF\n\n\n\u2193\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\u304c\u308f\u3089\u308f\u3089\u3068\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n\nPython + PIL \u3067\u3001Web\u30da\u30fc\u30b8\u306e\u30ec\u30a4\u30a2\u30a6\u30c8\u306a\u3093\u304b\u306b\u4f7f\u3046\u30c0\u30df\u30fc\u753b\u50cf\uff08\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u3068\u3044\u3046\u306e\uff09\u3092\u4e00\u6c17\u306b\u4f5c\u308b\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3057\u305f\u3002\n\n\u3084\u3063\u3064\u3051\u98a8\u5473\u3002Python\u306f2.7\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059\u3002\n\n```python:image-wire-frame-box.py\n#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n'''\n\u30ef\u30a4\u30e4\u30fc\u30d5\u30ec\u30fc\u30e0\u753b\u50cf\u3092\u4f5c\u6210\u3059\u308b\n'''\n\nimport Image\nimport ImageDraw\nimport ImageFont\nimport sys\n\n\ndef make_image(screen, prefix, extension, pen_color, bg_color):\n    \"\"\"\n    \u753b\u50cf\u30d5\u30a1\u30a4\u30eb\u3092\u4f5c\u6210\n    \"\"\"\n\n    # \u30d5\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u6bce\u306b\u30d5\u30a9\u30f3\u30c8\u306e\u30d1\u30b9\u306f\u9055\u3046\u306e\u3067\u3001\u305d\u306e\u70b9\u3092\u8003\u616e\uff08\u5b9f\u306f\u3001\u3084\u3063\u3064\u3051\uff09\n    if sys.platform == \"darwin\":\n        # OSX  \u306e\u5834\u5408\n        # \u65e5\u672c\u8a9e\u30d5\u30a9\u30f3\u30c8\u306f\u3046\u307e\u304f\u884c\u304b\u306a\u304b\u3063\u305f\n        #FONTPATH = '/Library/Fonts/Osaka.ttf'\n        FONTPATH = '/Library/Fonts/Verdana.ttf'\n    elif sys.platform == \"linux2\":\n        # Linux \u306e\u5834\u5408\n        FONTPATH = '/usr/share/fonts/truetype/fonts-japanese-gothic.ttf'\n    else:\n        # \u305d\u308c\u4ee5\u5916\u306fWindows\u3068\u5224\u5b9a\u3059\u308b\uff08\u3084\u3063\u3064\u3051\uff09\n        # FONTPATH = 'hgrme.ttc'\n        FONTPATH = 'C:\\WINDOWS\\Fonts\\MSGOTHIC.ttc'\n\n    # \u30d5\u30a9\u30f3\u30c8\u3092\u6307\u5b9a\n    font = ImageFont.truetype(FONTPATH, 24, encoding='utf-8')\n\n    img = Image.new('RGB', screen, bg_color)\n    x, y = img.size\n    u = x - 1\n    v = y - 1\n    draw = ImageDraw.Draw(img)\n\n    draw.line((0, 0, u, 0), pen_color)\n    draw.line((0, 0, u, v), pen_color)\n    draw.line((0, 0, 0, v), pen_color)\n    draw.line((u, 0, 0, v), pen_color)\n    draw.line((u, 0, u, v), pen_color)\n    draw.line((0, v, u, v), pen_color)\n\n    #\u3000\u753b\u50cf\u306b\u6587\u5b57\u3092\u5165\u308c\u308b\uff08\u3084\u3063\u3064\u3051\uff09\n    if x > 63 and y > 24:\n        draw.text((2, (y - 24) / 2), str(x) + \"x\" + str(y),\n            font=font, fill=pen_color)\n\n    savefile = prefix + str(x) + \"x\" + str(y) + extension\n    img.save(savefile)\n\nif __name__ == '__main__':\n    # \u753b\u50cf\u306e\u30b5\u30a4\u30ba\n    screens = (\n        (16, 16),      # favicon\n        (32, 32),      # favicon\n        (24, 24),      # windows icon\n        (48, 48),      # windows icon / avatar\n        (96, 96),      # windows icon / avatar\n        (64, 64),      # mac icon / avatar\n        (128, 128),    # mac icon / avatar\n        (100, 100),    # icon / avatar\n        (150, 150),    # icon / avatar\n        (256, 256),    # icon / avatar ----\n        (320, 240),    # QVGA\n        (240, 320),    # QVGA\n        (640, 480),    # VGA\n        (480, 640),    # VGA\uff08\u7e26\uff09\n        (800, 600),    # SVGA\n        (600, 800),    # SVGA\uff08\u7e26\uff09\n        (1024, 768),   # XGA\n        (768, 1024),   # XGA\uff08\u7e26\uff09\n        (1280, 960),   # Quad-VGA\n        (960, 1280),   # Quad-VGA\uff08\u7e26\uff09\n        (1600, 1200),  # UXGA\n        (1200, 1600),  # UXGA\uff08\u7e26\uff09\n        (1280, 720),   # HDTV 720p\n        (720, 1280),   # HDTV 720p\uff08\u7e26\uff09\n        (1920, 1080),  # HDTV 1080p\n        (1080, 1920),  # HDTV 1080p\uff08\u7e26\uff09----\n        (88, 31),      # IMU Micro Bar \u30de\u30a4\u30af\u30ed\u30d0\u30fc\n        (120, 60),     # IMU Button 2 \u30dc\u30bf\u30f32\n        (160, 600),    # IMU Wide Skyscraper \u30ef\u30a4\u30c9 \u30b9\u30ab\u30a4\u30b9\u30af\u30ec\u30a4\u30d1\u30fc\n        (300, 600),    # IMU Half Page Ad \u30cf\u30fc\u30d5 \u30da\u30fc\u30b8\n        (180, 150),    # IMU Rectangle \u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u5c0f\uff09\n        (300, 250),    # IMU Medium Rectangle \u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u4e2d\uff09\n        (728, 90),     # IMU Leaderboard \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\n        (120, 90),     # IMU \uff08\u524a\u9664\uff09Button 1 \u30dc\u30bf\u30f31\n        (120, 240),    # IMU \uff08\u524a\u9664\uff09Vertical Banner \u7e26\u9577\u30d0\u30ca\u30fc\n        (120, 600),    # IMU \uff08\u524a\u9664\uff09Skyscraper \u30b9\u30ab\u30a4\u30b9\u30af\u30ec\u30a4\u30d1\u30fc\n        (125, 125),    # IMU \uff08\u524a\u9664\uff09Square Button \u30b9\u30af\u30a8\u30a2\u30fb\u30dc\u30bf\u30f3\u3001\u30dc\u30bf\u30f3\n        (234, 60),     # IMU \uff08\u524a\u9664\uff09Half Banner \u30cf\u30fc\u30d5\u30d0\u30ca\u30fc\n        (240, 400),    # IMU \uff08\u524a\u9664\uff09Vertical Rectangle \u7e26\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\n        (250, 250),    # IMU \uff08\u524a\u9664\uff09Square Pop-Up \u30b9\u30af\u30a8\u30a2\n        (300, 100),    # IMU \uff08\u524a\u9664\uff093:1 Rectangle 3:1\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\n        (336, 280),    # IMU \uff08\u524a\u9664\uff09Large Rectangle \u30e9\u30fc\u30b8\u30fb\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\u3001\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u5927\uff09\n        (468, 60),     # IMU \uff08\u524a\u9664\uff09Full Banner \u30d0\u30ca\u30fc\u3001\u30d5\u30eb\u30d0\u30ca\u30fc\n        (720, 300),    # IMU \uff08\u524a\u9664\uff09Pop-Under \u30dd\u30c3\u30d7\u30fb\u30a2\u30f3\u30c0\u30fc\n        (200, 200),    # Google\u3000\u30b9\u30af\u30a8\u30a2\uff08\u5c0f\uff09\n        (970, 90),     # Google\u3000\u30e9\u30fc\u30b8 \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\u3001\u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\uff08\u5927\uff09\n        (320, 50),     # Google\u3000\u30e2\u30d0\u30a4\u30eb \u30d3\u30c3\u30b0\u30d0\u30ca\u30fc\n        (320, 100),    # Google\u3000\u30e2\u30d0\u30a4\u30eb \u30d0\u30ca\u30fc\uff08\u5927\uff09\n        (240, 400),    # Google\u3000\u300c\u30ec\u30af\u30bf\u30f3\u30b0\u30eb\uff08\u7e26\u9577\uff09\u300d\u30ed\u30b7\u30a2\n        (980, 120),    # Google\u3000\u300c\u30d1\u30ce\u30e9\u30de\u300d\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3\u3068\u30d5\u30a3\u30f3\u30e9\u30f3\u30c9\n        (250, 360),    # Google\u3000\u300c\u30c8\u30ea\u30d7\u30eb \u30ef\u30a4\u30c9\u30b9\u30af\u30ea\u30fc\u30f3\u300d\u30b9\u30a6\u30a7\u30fc\u30c7\u30f3\n        (930, 180),    # Google\u3000\u300c\u30c8\u30c3\u30d7\u30d0\u30ca\u30fc\u300d\u30c7\u30f3\u30de\u30fc\u30af\n        (580, 400),    # Google\u3000\u300c\u30cd\u30c3\u30c8\u30dc\u30fc\u30c9\u300d\u30ce\u30eb\u30a6\u30a7\u30fc\n        (750, 100),    # Google\u3000\u300c\u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (750, 200),    # Google\u3000\u300c\u30c0\u30d6\u30eb \u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (750, 300),    # Google\u3000\u300c\u30c8\u30ea\u30d7\u30eb \u30d3\u30eb\u30dc\u30fc\u30c9\u300d\u30dd\u30fc\u30e9\u30f3\u30c9\n        (170, 40),     # banner \u8a73\u7d30\u4e0d\u660e\n        (180, 70),     # banner \u8a73\u7d30\u4e0d\u660e\n        (200, 40),     # banner \u65e5\u672c\u306eCG\u7cfb\u306b\u591a\u3044\u30d0\u30ca\u30fc\u30b5\u30a4\u30ba\u3060\u3063\u3066\n        (400, 40)      # banner \u65e5\u672c\u306b\u591a\u3044\u30d0\u30ca\u30fc\u30b5\u30a4\u30ba\u3060\u3063\u3066\n        )\n\n    # \u63a5\u982d\u8f9e\uff08\u30d7\u30ec\u30d5\u30a3\u30af\u30b9\uff09\u3092\u6307\u5b9a\n    prefix = \"wf-\"\n\n    # \u30d5\u30a1\u30a4\u30eb\u306e\u62e1\u5f35\u5b50\u3092\u6307\u5b9a\n    #extension = \".png\"\n    extension = \".jpg\"\n\n    # \u63cf\u753b\u8272\uff08RGB\uff09\u3092\u6307\u5b9a\n    pen_color = (0x00, 0x00, 0xdd)\n\n    # \u753b\u50cf\u306e\u80cc\u666f\u8272\uff08RGB\uff09\u3092\u6307\u5b9a\n    bg_color = (0xdd, 0xdd, 0xdd)\n\n    for screen in screens:\n        print \"size: %d,%d\" % (screen[0], screen[1])\n        make_image(screen, prefix, extension, pen_color, bg_color)\n#EOF\n```\n\n\u2193\u3053\u3093\u306a\u611f\u3058\u306e\u753b\u50cf\u304c\u308f\u3089\u308f\u3089\u3068\u4f5c\u6210\u3055\u308c\u307e\u3059\u3002\n![wf-300x600.jpg](https://qiita-image-store.s3.amazonaws.com/0/26107/f762321f-a3fd-f212-8a54-b237793f6ad4.jpeg)\n", "tags": ["Python2.7", "PIL"]}