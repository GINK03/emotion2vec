{"context": " More than 1 year has passed since last update.\n\n\u76ee\u7684\n\u3060\u3093\u3060\u3093\u30c6\u30f3\u30d7\u30ec\u5316\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u672c\u65e5\u3082\u6295\u7a3f\u3067\u3059\u3002\ntakezoe\u3055\u3093\u306e\u8a18\u4e8b\u3001\u300cAWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f\u300d\u306b\u89e6\u767a\u3055\u308c\u3066\u3001\n\u4eca\u5ea6\u306f\u3001\u64ec\u4f3c\u7684\u306akinesis\u306eDocker Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff01\n\n\u6210\u679c\u7269\n\nhttps://github.com/tripleW/docker-kinesalite\nhttps://hub.docker.com/r/triplew/kinesalite/\n\n\n\u53c2\u8003\u8cc7\u6599\n\nhttps://docs.travis-ci.com/user/docker/\nhttps://github.com/mhart/kinesalite\nhttp://dev.classmethod.jp/cloud/aws/kinesis-put-records-cli/\nhttp://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html\n\n\n\u624b\u9806\n\n1. GitHub\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001Dockerfile\u3092\u7528\u610f\u3059\u308b\nhttps://github.com/tripleW/docker-kinesalite\nFROM node\n\nRUN npm install kinesalite\n\nRUN mkdir -p /data\n\nADD kinesalite.js /\n\nEXPOSE 4567\n\nCMD [\"node\", \"kinesalite\"]\n\n\n2. .travis.yml\u3092\u7528\u610f\u3059\u308b\nhttps://docs.travis-ci.com/user/docker/\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u3001.travis.yml\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\ntravis.yml\nsudo: required\n\nlanguage: node_js\nnode_js:\n  - \"4.1\"\n\nservices:\n  - docker\n\nbefore_install:\n  - docker build -t triplew/kinesalite ./\n\nscript:\n  - docker login -e=\"$DOCKER_EMAIL\" -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\" \n  - docker push triplew/kinesalite\n\n\ndocker push\u306b\u3064\u3044\u3066\u306f\u524d\u56de\u3068\u540c\u69d8\u306e\u624b\u9806\u3067push\u3057\u307e\u3057\u305f\u3002\n\n3. git push\u3092\u3057\u3066\u3001travis ci\u3092\u8d70\u3089\u305b\u308b\nhttps://hub.docker.com/r/triplew/kinesalite/\n\u4eca\u56de\u3082\u3055\u304f\u3063\u3068\u884c\u3051\u307e\u3057\u305f\uff3e\uff3e\n\n\u5229\u7528\u65b9\u6cd5\n\n\u5b9f\u884c\u74b0\u5883\n\nClient \u30ed\u30fc\u30ab\u30eb\u306eMacOS\nServer \u3069\u3053\u304b\u306eAWS\u3068\u304b\u3069\u3053\u304b\u306eGCP\u3068\u304b\ncurl\u5229\u7528\n\n\n1. docker run\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\ndocker run -d -p 4567:4567 triplew/kinesalite\n\n\n2. node\u30b9\u30af\u30ea\u30d7\u30c8\u3067stream\u3092\u4f5c\u6210\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\",\n    ShardCount : 2\n}\n\nkinesis.createStream(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n\n\n3. stream\u304c\u4f5c\u6210\u3067\u304d\u305f\u304b\u3092\u78ba\u8a8d\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\"\n}\n\nkinesis.describeStream(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n\n\u7d50\u679c\u51fa\u529b\n{ StreamDescription:\n   { StreamName: 'data',\n     StreamARN: 'arn:aws:kinesis:us-east-1:000000000000:stream/data',\n     StreamStatus: 'ACTIVE',\n     Shards: [ [Object], [Object] ],\n     HasMoreShards: false,\n     RetentionPeriodHours: 24 } }\n\n\n4. node\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u767b\u9332\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\",\n    PartitionKey: \"partkey_1\",\n    Data: \"hoge\"\n    }\n\nkinesis.putRecord(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n\n\u7d50\u679c\u51fa\u529b\n{ ShardId: 'shardId-000000000000',\n  SequenceNumber: '49559695658384854135094487428892798596209045909750677506' }\n\n\u4f7f\u3048\u306a\u3044\u3053\u3068\u3082\u306a\u3055\u305d\u3046\u306a\u5370\u8c61\u3067\u3059\u306d\uff01\nElixir\u3068\u304bscala\u3068\u304b\u304b\u3089\u3082\u30b3\u30fc\u30eb\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\uff3e\uff3e\n\n\u672c\u65e5\u306f\u3053\u3053\u307e\u3067\u3068\u306a\u308a\u307e\u3059\u3002\n## \u76ee\u7684\n\n\u3060\u3093\u3060\u3093\u30c6\u30f3\u30d7\u30ec\u5316\u3057\u3066\u304d\u307e\u3057\u305f\u304c\u672c\u65e5\u3082\u6295\u7a3f\u3067\u3059\u3002\n\ntakezoe\u3055\u3093\u306e\u8a18\u4e8b\u3001\u300c[AWS\u4e0a\u3067\u52d5\u4f5c\u3059\u308b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u3044\u304b\u306b\u30ed\u30fc\u30ab\u30eb\u3067\u958b\u767a\u3059\u308b\u304b\uff1f](http://takezoe.hatenablog.com/entry/2016/02/12/090152)\u300d\u306b\u89e6\u767a\u3055\u308c\u3066\u3001\n\u4eca\u5ea6\u306f\u3001\u64ec\u4f3c\u7684\u306akinesis\u306eDocker Image\u3092\u4f5c\u6210\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u308b\u3053\u3068\u306b\u3057\u307e\u3057\u305f\uff01\n\n## \u6210\u679c\u7269\n\n* https://github.com/tripleW/docker-kinesalite\n* https://hub.docker.com/r/triplew/kinesalite/\n\n## \u53c2\u8003\u8cc7\u6599\n\n* https://docs.travis-ci.com/user/docker/\n* https://github.com/mhart/kinesalite\n* http://dev.classmethod.jp/cloud/aws/kinesis-put-records-cli/\n* http://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html\n\n## \u624b\u9806\n\n### 1. GitHub\u3067\u30ea\u30dd\u30b8\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u3066\u3001Dockerfile\u3092\u7528\u610f\u3059\u308b\n\nhttps://github.com/tripleW/docker-kinesalite\n\n```Dockerfile\nFROM node\n\nRUN npm install kinesalite\n\nRUN mkdir -p /data\n\nADD kinesalite.js /\n\nEXPOSE 4567\n\nCMD [\"node\", \"kinesalite\"]\n```\n\n### 2. .travis.yml\u3092\u7528\u610f\u3059\u308b\n\nhttps://docs.travis-ci.com/user/docker/\n\n\u4e0a\u8a18\u3092\u53c2\u8003\u306b\u3057\u3066\u3001.travis.yml\u3092\u5b9f\u88c5\u3057\u307e\u3057\u305f\u3002\n\n```.travis.yml\nsudo: required\n\nlanguage: node_js\nnode_js:\n  - \"4.1\"\n\nservices:\n  - docker\n\nbefore_install:\n  - docker build -t triplew/kinesalite ./\n\nscript:\n  - docker login -e=\"$DOCKER_EMAIL\" -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\" \n  - docker push triplew/kinesalite\n```\n\n`docker push`\u306b\u3064\u3044\u3066\u306f[\u524d\u56de](../../letusfly85/items/178db48e0710f8553bbc)\u3068\u540c\u69d8\u306e\u624b\u9806\u3067push\u3057\u307e\u3057\u305f\u3002\n\n### 3. git push\u3092\u3057\u3066\u3001travis ci\u3092\u8d70\u3089\u305b\u308b\n\nhttps://hub.docker.com/r/triplew/kinesalite/\n\n\u4eca\u56de\u3082\u3055\u304f\u3063\u3068\u884c\u3051\u307e\u3057\u305f\uff3e\uff3e\n\n\n## \u5229\u7528\u65b9\u6cd5\n\n### \u5b9f\u884c\u74b0\u5883\n\n* Client \u30ed\u30fc\u30ab\u30eb\u306eMacOS\n* Server \u3069\u3053\u304b\u306eAWS\u3068\u304b\u3069\u3053\u304b\u306eGCP\u3068\u304b\n* curl\u5229\u7528\n\n### 1. docker run\u3067\u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\n\n```bash\ndocker run -d -p 4567:4567 triplew/kinesalite\n```\n\n### 2. node\u30b9\u30af\u30ea\u30d7\u30c8\u3067stream\u3092\u4f5c\u6210\n\n```js\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\",\n    ShardCount : 2\n}\n\nkinesis.createStream(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n```\n\n### 3. stream\u304c\u4f5c\u6210\u3067\u304d\u305f\u304b\u3092\u78ba\u8a8d\n\n```js\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\"\n}\n\nkinesis.describeStream(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n```\n\n\u7d50\u679c\u51fa\u529b\n\n```js\n{ StreamDescription:\n   { StreamName: 'data',\n     StreamARN: 'arn:aws:kinesis:us-east-1:000000000000:stream/data',\n     StreamStatus: 'ACTIVE',\n     Shards: [ [Object], [Object] ],\n     HasMoreShards: false,\n     RetentionPeriodHours: 24 } }\n```\n\n### 4. node\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u767b\u9332\n\n```js\nvar AWS = require('aws-sdk')\nAWS.config.loadFromPath('config.json');\n\nvar kinesis = new AWS.Kinesis({endpoint: 'http://localhost:4567'})\n\nvar params = {\n    StreamName : \"data\",\n    PartitionKey: \"partkey_1\",\n    Data: \"hoge\"\n    }\n\nkinesis.putRecord(params, function(err, data) {\n    if (err) {\n        console.log(err, err.stack);\n    } else {\n        console.log(data);\n    }\n});\n```\n\n\u7d50\u679c\u51fa\u529b\n\n```js\n{ ShardId: 'shardId-000000000000',\n  SequenceNumber: '49559695658384854135094487428892798596209045909750677506' }\n```\n\n\n\u4f7f\u3048\u306a\u3044\u3053\u3068\u3082\u306a\u3055\u305d\u3046\u306a\u5370\u8c61\u3067\u3059\u306d\uff01\nElixir\u3068\u304bscala\u3068\u304b\u304b\u3089\u3082\u30b3\u30fc\u30eb\u3067\u304d\u308b\u304b\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u306d\uff3e\uff3e\n\n---\n\n\u672c\u65e5\u306f\u3053\u3053\u307e\u3067\u3068\u306a\u308a\u307e\u3059\u3002\n", "tags": ["TravisCI", "AWS", "Kinesis", "docker", "kinesalite"]}