{"context": "\u79fb\u52d5\u5e73\u5747\u306e\u306a\u304b\u3067\u3001\u5358\u7d14\u79fb\u52d5\u5e73\u5747(SMA)\u306e\u6b21\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u306f\u6307\u6570\u79fb\u52d5\u5e73\u5747(EMA)\u3067\u3057\u3087\u3046\u3002EMA\u3092\u4f7f\u3046\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u3068\u3057\u3066\u6709\u540d\u306aMACD\u3092\u306f\u3058\u3081\u3001EMA\u3092\u8907\u6570\u56de\u4f7f\u3046DEMA\u3001TEMA\u3001TriX\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3057\u3001AMA\u3001FrAMA\u3001VIDyA\u306e\u3088\u3046\u306b\u9069\u5fdc\u578b\u79fb\u52d5\u5e73\u5747\u306f\u3001\u8a08\u7b97\u65b9\u6cd5\u3068\u3057\u3066EMA\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\u4eca\u56de\u306f\u3001\nIIR\u30d5\u30a3\u30eb\u30bf\u578b\u306e\u79fb\u52d5\u5e73\u5747\u3092pandas\u3068scipy\u3067\u6bd4\u8f03\u3057\u3066\u307f\u305f\n\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001EMA\u306e\u30b3\u30fc\u30c9\u3092\u3044\u304f\u3064\u304b\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3059\u3002\n\nEMA\u306e\u8a08\u7b97\u5f0f\nEMA\u3092\u5b9f\u969b\u306b\u4f7f\u3046\u969b\u306b\u306f\u671f\u9593\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5165\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fEMA\u672c\u4f53\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u8a08\u7b97\u5f0f\u3092\u76f4\u63a5\u4f7f\u3044\u307e\u3059\u3002\ny(n)=\u03b1x(n)+(1\u2212\u03b1)y(n\u22121)y(n)=\u03b1x(n)+(1\u2212\u03b1)y(n\u22121)y(n)=\\alpha x(n)+(1-\\alpha)y(n-1)\n\u3064\u307e\u308a\u3001EMA\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4e0a\u5f0f\u306e\u03b1\\alpha\u3068\u3057\u307e\u3059\u3002\n\npandas\u306b\u3088\u308b\u5b9f\u88c5\n\u307e\u305a\u3001EMA\u3092\u304b\u3051\u308b\u5165\u529b\u30c7\u30fc\u30bf\u3092\nNumba\u4f7f\u7528\u3092\u524d\u63d0\u3068\u3057\u305f\u5358\u7d14\u79fb\u52d5\u5e73\u5747\u306ePython\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066\n\u3068\u540c\u3058\u304f\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3068\u3057\u3066\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\nimport numpy as np\nimport pandas as pd\n\ndn = np.random.randint(2, size=100000)*2-1\ngwalk = np.cumprod(np.exp(dn*0.01))*100\n\npandas\u3067\u306f\u3001Series\u30af\u30e9\u30b9\u306b\u5909\u63db\u3057\u3066ewm\u3068mean\u30e1\u30bd\u30c3\u30c9\u3067\u7c21\u5358\u306bEMA\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002ewm\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066alpha\u3092\u76f4\u63a5\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002alpha\u306f0\u304b\u30891\u306e\u7bc4\u56f2\u3067\u7279\u306b\u5024\u306b\u3088\u308b\u9055\u3044\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f0.15\u3092\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\ndef EMA1(x, alpha):\n    return pd.Series(x).ewm(alpha=alpha).mean()\n\n%timeit y1 = EMA1(gwalk, 0.15)\n\n\u5b9f\u884c\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n100 loops, best of 3: 8.62 ms per loop\n\n\nscipy\u306elflter\u306b\u3088\u308b\u5b9f\u88c5\nIIR\u30d5\u30a3\u30eb\u30bf\u578b\u306e\u79fb\u52d5\u5e73\u5747\u3092pandas\u3068scipy\u3067\u6bd4\u8f03\u3057\u3066\u307f\u305f\n\u3068\u540c\u3058\u3088\u3046\u306bscipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570lfilter\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3067\u3059\u3002\nfrom scipy.signal import lfilter\ndef EMA2(x, alpha):\n    y,zf = lfilter([alpha], [1,alpha-1], x, zi=[x[0]*(1-alpha)])\n    return y\n\n%timeit y2 = EMA2(gwalk, 0.15)\n\n\u5b9f\u884c\u6642\u9593\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n1000 loops, best of 3: 631 \u00b5s per loop\n\n\u524d\u56de\u306e\u8a18\u4e8b\u306f\u3053\u3053\u307e\u3067\u3067\u3001scipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7d9a\u304d\u304c\u3042\u308a\u307e\u3059\u3002\n\nNumba\u3092\u5229\u7528\u3057\u305f\u8a08\u7b97\u5f0f\u306e\u76f4\u63a5\u5b9f\u88c5\nEMA\u306e\u8a08\u7b97\u5f0f\u3092\u76f4\u63a5\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u3059\u3054\u304f\u9045\u304f\u306a\u308b\u306e\u3067\u3001Numba\u3092\u4f7f\u3063\u3066\u9ad8\u901f\u5316\u3057\u307e\u3059\u3002\nfrom numba import jit\n@jit(nopython=True)\ndef EMA3(x, alpha):\n    y = np.empty_like(x)\n    y[0] = x[0]\n    for i in range(1,len(x)):\n        y[i] = alpha*x[i] + (1-alpha)*y[i-1]\n    return y\n\n%timeit y3 = EMA3(gwalk, 0.15)\n\n@jit\u306e\u5f15\u6570\u306bnopython=True\u3092\u3064\u3051\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3051\u308c\u3070\u9ad8\u901f\u5316\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\u5b9f\u969b\u3001\u5b9f\u884c\u6642\u9593\u306f\n1000 loops, best of 3: 227 \u00b5s per loop\n\n\u3068\u306a\u308a\u3001scipy\u3088\u308a\u901f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\nEMA\u306e\u5834\u5408\u3082\u3001Numba\u3092\u4f7f\u3048\u3070\u76f4\u63a5\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u6700\u901f\u3068\u3044\u3046\u7d50\u679c\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n\u79fb\u52d5\u5e73\u5747\u306e\u306a\u304b\u3067\u3001\u5358\u7d14\u79fb\u52d5\u5e73\u5747(SMA)\u306e\u6b21\u306b\u3088\u304f\u4f7f\u308f\u308c\u308b\u306e\u306f\u6307\u6570\u79fb\u52d5\u5e73\u5747(EMA)\u3067\u3057\u3087\u3046\u3002EMA\u3092\u4f7f\u3046\u30c6\u30af\u30cb\u30ab\u30eb\u6307\u6a19\u3068\u3057\u3066\u6709\u540d\u306aMACD\u3092\u306f\u3058\u3081\u3001EMA\u3092\u8907\u6570\u56de\u4f7f\u3046DEMA\u3001TEMA\u3001TriX\u3068\u3044\u3046\u306e\u3082\u3042\u308b\u3057\u3001AMA\u3001FrAMA\u3001VIDyA\u306e\u3088\u3046\u306b\u9069\u5fdc\u578b\u79fb\u52d5\u5e73\u5747\u306f\u3001\u8a08\u7b97\u65b9\u6cd5\u3068\u3057\u3066EMA\u3092\u5229\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u3001\n[IIR\u30d5\u30a3\u30eb\u30bf\u578b\u306e\u79fb\u52d5\u5e73\u5747\u3092pandas\u3068scipy\u3067\u6bd4\u8f03\u3057\u3066\u307f\u305f](http://qiita.com/toyolab/items/9906573cfcd379f3eff8)\n\u306e\u7d9a\u304d\u3068\u3057\u3066\u3001EMA\u306e\u30b3\u30fc\u30c9\u3092\u3044\u304f\u3064\u304b\u6bd4\u8f03\u3057\u3066\u307f\u307e\u3059\u3002\n\n# EMA\u306e\u8a08\u7b97\u5f0f\n\nEMA\u3092\u5b9f\u969b\u306b\u4f7f\u3046\u969b\u306b\u306f\u671f\u9593\u3092\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5165\u308c\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306fEMA\u672c\u4f53\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u3092\u8abf\u3079\u308b\u305f\u3081\u306b\u8a08\u7b97\u5f0f\u3092\u76f4\u63a5\u4f7f\u3044\u307e\u3059\u3002\n\n$$y(n)=\\alpha x(n)+(1-\\alpha)y(n-1)$$\n\n\u3064\u307e\u308a\u3001EMA\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306f\u4e0a\u5f0f\u306e$\\alpha$\u3068\u3057\u307e\u3059\u3002\n\n# pandas\u306b\u3088\u308b\u5b9f\u88c5\n\n\u307e\u305a\u3001EMA\u3092\u304b\u3051\u308b\u5165\u529b\u30c7\u30fc\u30bf\u3092\n[Numba\u4f7f\u7528\u3092\u524d\u63d0\u3068\u3057\u305f\u5358\u7d14\u79fb\u52d5\u5e73\u5747\u306ePython\u30b3\u30fc\u30c9\u306b\u3064\u3044\u3066](http://qiita.com/toyolab/items/8d30183dae162e53de24)\n\u3068\u540c\u3058\u304f\u30e9\u30f3\u30c0\u30e0\u30a6\u30a9\u30fc\u30af\u3068\u3057\u3066\u4f5c\u3063\u3066\u304a\u304d\u307e\u3059\u3002\n\n````py\nimport numpy as np\nimport pandas as pd\n\ndn = np.random.randint(2, size=100000)*2-1\ngwalk = np.cumprod(np.exp(dn*0.01))*100\n````\npandas\u3067\u306f\u3001Series\u30af\u30e9\u30b9\u306b\u5909\u63db\u3057\u3066`ewm`\u3068`mean`\u30e1\u30bd\u30c3\u30c9\u3067\u7c21\u5358\u306bEMA\u3092\u5b9f\u884c\u3067\u304d\u307e\u3059\u3002`ewm`\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066`alpha`\u3092\u76f4\u63a5\u4ee3\u5165\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002`alpha`\u306f0\u304b\u30891\u306e\u7bc4\u56f2\u3067\u7279\u306b\u5024\u306b\u3088\u308b\u9055\u3044\u306f\u306a\u3044\u306e\u3067\u3001\u3053\u3053\u3067\u306f0.15\u3092\u5165\u308c\u3066\u304a\u304d\u307e\u3059\u3002\n\n````py\ndef EMA1(x, alpha):\n    return pd.Series(x).ewm(alpha=alpha).mean()\n\n%timeit y1 = EMA1(gwalk, 0.15)\n````\n\u5b9f\u884c\u6642\u9593\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n    100 loops, best of 3: 8.62 ms per loop\n\n# scipy\u306elflter\u306b\u3088\u308b\u5b9f\u88c5\n\n[IIR\u30d5\u30a3\u30eb\u30bf\u578b\u306e\u79fb\u52d5\u5e73\u5747\u3092pandas\u3068scipy\u3067\u6bd4\u8f03\u3057\u3066\u307f\u305f](http://qiita.com/toyolab/items/9906573cfcd379f3eff8)\n\u3068\u540c\u3058\u3088\u3046\u306bscipy\u306e\u30d5\u30a3\u30eb\u30bf\u95a2\u6570lfilter\u3092\u4f7f\u3063\u305f\u5b9f\u88c5\u3067\u3059\u3002\n\n````py\nfrom scipy.signal import lfilter\ndef EMA2(x, alpha):\n    y,zf = lfilter([alpha], [1,alpha-1], x, zi=[x[0]*(1-alpha)])\n    return y\n\n%timeit y2 = EMA2(gwalk, 0.15)\n````\n\u5b9f\u884c\u6642\u9593\u306f\u6b21\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n    1000 loops, best of 3: 631 \u00b5s per loop\n\n\u524d\u56de\u306e\u8a18\u4e8b\u306f\u3053\u3053\u307e\u3067\u3067\u3001scipy\u901f\u3044\u3068\u3044\u3046\u3053\u3068\u3060\u3063\u305f\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u7d9a\u304d\u304c\u3042\u308a\u307e\u3059\u3002\n\n# Numba\u3092\u5229\u7528\u3057\u305f\u8a08\u7b97\u5f0f\u306e\u76f4\u63a5\u5b9f\u88c5\n\nEMA\u306e\u8a08\u7b97\u5f0f\u3092\u76f4\u63a5\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u3057\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u305d\u306e\u307e\u307e\u3060\u3068\u3059\u3054\u304f\u9045\u304f\u306a\u308b\u306e\u3067\u3001Numba\u3092\u4f7f\u3063\u3066\u9ad8\u901f\u5316\u3057\u307e\u3059\u3002\n\n````py\nfrom numba import jit\n@jit(nopython=True)\ndef EMA3(x, alpha):\n    y = np.empty_like(x)\n    y[0] = x[0]\n    for i in range(1,len(x)):\n        y[i] = alpha*x[i] + (1-alpha)*y[i-1]\n    return y\n\n%timeit y3 = EMA3(gwalk, 0.15)\n````\n`@jit`\u306e\u5f15\u6570\u306b`nopython=True`\u3092\u3064\u3051\u3066\u30a8\u30e9\u30fc\u304c\u51fa\u306a\u3051\u308c\u3070\u9ad8\u901f\u5316\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\u5b9f\u969b\u3001\u5b9f\u884c\u6642\u9593\u306f\n\n    1000 loops, best of 3: 227 \u00b5s per loop\n\n\u3068\u306a\u308a\u3001scipy\u3088\u308a\u901f\u304f\u306a\u308a\u307e\u3057\u305f\u3002\n\nEMA\u306e\u5834\u5408\u3082\u3001Numba\u3092\u4f7f\u3048\u3070\u76f4\u63a5\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u304c\u6700\u901f\u3068\u3044\u3046\u7d50\u679c\u3068\u306a\u308a\u307e\u3057\u305f\u3002\n", "tags": ["Python", "Numba", "Ema", "performance"]}