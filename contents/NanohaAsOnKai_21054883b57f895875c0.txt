{"context": "JavaScript\u306e\u52c9\u5f37\u304c\u3066\u3089\u958b\u767a\u74b0\u5883\u3092\u6574\u5099\u3057\u307e\u3057\u305f\u3002\n\u30c1\u30c3\u30d7\u30b9\u306f\u6982\u8981\u306e\u307f\u63b2\u8f09\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8a73\u7d30\u306f.vimrc\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\nPlugin\u8a2d\u5b9a\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n$ mkdir -p \\\n    $HOME/.cache/eslint \\\n    $HOME/.vim/vim-ref/cache \\\n    $HOME/.vim/tags \\\n    $HOME/.vim/neosnippet.vim \\\n    $HOME/.vim/neocomplete.vim\n\n\nPlugin\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nNeobundle\u4f5c\u8005\u306eShougo\u3055\u3093\u306e\u65b0\u3057\u3044\u30d7\u30e9\u30b0\u30a4\u30f3\u7ba1\u7406\u30d7\u30e9\u30b0\u30a4\u30f3\u300cdein.vim\u300d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n.vimrc\n\" Cygwin\nif has('win32') || has ('win64')\n    set runtimepath^=$HOME\\.vim runtimepath+=$HOME\\.vim\\after\nendif\nlet s:deinDir    = ! exists('s:deinDir') ? $HOME . '/.vim/dein.vim' : s:deinDir\nlet &runtimepath = &runtimepath . ',' . s:deinDir . '/repos/github.com/Shougo/dein.vim'\n\" dein.vim {{{\nif dein#load_state(s:deinDir)\n    call dein#begin(s:deinDir)\n    call dein#add('KazuakiM/neosnippet-snippets')\n    call dein#add('KazuakiM/vim-qfstatusline')\n    call dein#add('mojako/ref-sources.vim')\n    call dein#add('pangloss/vim-javascript')\n    call dein#add('Shougo/dein.vim')\n    call dein#add('Shougo/neocomplete.vim')\n    call dein#add('Shougo/neoinclude.vim')\n    call dein#add('Shougo/neosnippet.vim')\n    call dein#add('Shougo/vimproc.vim', {'build': 'make'})\n    call dein#add('thinca/vim-quickrun')\n    call dein#add('thinca/vim-ref')\n    call dein#add('vim-scripts/taglist.vim')\n    call dein#add('osyo-manga/shabadou.vim')\n    call dein#add('osyo-manga/vim-watchdogs')\n    call dein#add('mustardamus/jqapi', {'lazy':1})\n    call dein#add('tokuhirom/jsref',   {'lazy':1})\n\n    call dein#end()\n    call dein#save_state()\nendif\n\"}}}\nfiletype plugin indent on\nsyntax enable\n\n\n\nsyntax highlight\nVim\u3067ES6\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8 - Qiita \u304c\u30a4\u30e1\u30fc\u30b8\u3082\u3042\u3063\u3066\u3088\u3055\u6c17\u3067\u3059\u3002\u7dba\u9e97\u3060\u3068\u305d\u306e\u5206\u3082\u3063\u3055\u308a\u3059\u308b\u306e\u3067\u304a\u597d\u307f\u3067\u4f7f\u7528\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30de\u30cb\u30e5\u30a2\u30eb\u8a2d\u5b9a\nJavaScript\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4ecb\u3055\u305a\u306b\u53c2\u7167\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n.vimrc\u8a2d\u5b9a\n\n.vimrc\n\" vim-ref {{{\ninoremap <silent><C-k> <C-o>:call<Space>ref#K('normal')<CR><ESC>\nnmap <silent>K <Plug>(ref-keyword)\nlet g:ref_no_default_key_mappings = 1\nlet g:ref_cache_dir               = $HOME . '/.vim/vim-ref/cache'\nlet g:ref_detect_filetype         = {\n\\    'css':        'phpmanual',\n\\    'html':       ['phpmanual',  'javascript', 'jquery'],\n\\    'javascript': ['javascript', 'jquery'],\n\\    'php':        ['phpmanual',  'javascript', 'jquery']\n\\}\nlet g:ref_javascript_doc_path = $HOME . '/.vim/dein.vim/repos/github.com/tokuhirom/jsref/htdocs'\nlet g:ref_jquery_doc_path     = $HOME . '/.vim/dein.vim/repos/github.com/mustardamus/jqapi'\nlet g:ref_phpmanual_path      = $HOME . '/.vim/vim-ref/php-chunked-xhtml'\nlet g:ref_use_cache           = 1\nlet g:ref_use_vimproc         = 1\n\"}}}\n\n\n\nUniversal Ctags\u8a2d\u5b9a\ntags\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5207\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u3067\u30bf\u30b0\u30b8\u30e3\u30f3\u30d7\u304c\u53ef\u80fd\u3068\u306a\u308a\u3001\u6642\u9593\u77ed\u7e2e\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n.ctags\u8a2d\u5b9a\n\u6b63\u898f\u8868\u73fe\u306e\u524d\u306bJavaScript\u3092\u52c9\u5f37\u3057\u305f\u3066\u3067\u3001\u30b1\u30fc\u30b9\u6f0f\u308c\u304c\u591a\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n.ctags\n--exclude=*min.js\n--recurse=yes\n--langmap=JavaScript:.js.json.jsx.html\n\n\n\nalias\u8a2d\u5b9a\n\n.bashrc.local\n#.bashrc.local\u307f\u305f\u3044\u306a\u611f\u3058\u3067GitHub\u7ba1\u7406\u5916\u3067\u3088\u3057\u306a\u306b\u7ba1\u7406\u3059\u308b\ntagsJsCmd='ctags --languages=js  -f'\ntagsVariable=''\ntagsVariable=\"$tagsVariable cd $HOME/sample1; $tagsJsCmd $HOME/.vim/tags/sample1.tags $HOME/sample1;\"\ntagsVariable=\"$tagsVariable cd $HOME/sample2; $tagsJsCmd $HOME/.vim/tags/sample2.tags $HOME/sample2;\"\ntagsVariable=\"$tagsVariable cd;\"\nalias TAGS=$tagsVariable\n\n\n\n.vimrc\u8a2d\u5b9a\n\n.vimrc\n\" taglist.vim {{{\n\"MEMO:$ ctags --list-maps : ctags supported filetype.\n\"MEMO:$ ctags --list-kinds: ctags tlist setting.\nnnoremap <Leader>t :<C-u>Tlist<CR>\nlet g:tlist_javascript_settings = 'js;o:object;f:function'\nlet g:tlist_php_settings        = 'php;c:class;f:function;d:constant'\nlet g:Tlist_Exit_OnlyWindow     = 1\nlet g:Tlist_Show_One_File       = 1\nlet g:Tlist_Use_Right_Window    = 1\nlet g:Tlist_WinWidth            = 25\n\"}}}\n\n\".vimrc.local\u307f\u305f\u3044\u306a\u611f\u3058\u3067GitHub\u7ba1\u7406\u5916\u3067\u3088\u3057\u306a\u306b\u7ba1\u7406\u3059\u308b\naugroup MyTagsAutoCmd\n    autocmd!\n    autocmd BufNewFile,BufRead $HOME/sample1/*.{js,json,html} setlocal tags=$HOME/.vim/tags/sample1.tags\n    autocmd BufNewFile,BufRead $HOME/sample2/*.{js,json,html} setlocal tags=$HOME/.vim/tags/sample2.tags\naugroup END\n\n\n\nSyntax\u30c1\u30a7\u30c3\u30af, lint\u30c1\u30a7\u30c3\u30af, \u81ea\u52d5\u6574\u5f62\u8a2d\u5b9a\n\u306f\u3084\u308a\u306eESLint\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\u4fdd\u5b58\u6642\u306e\u52d5\u4f5c\u306fESLint\u306b\u3088\u308b\u975e\u540c\u671f\u306eSyntax\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u65bd\u3001\nQuickrun\u3057\u305f\u5834\u5408\u306b\u306f--fix\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u5b9f\u884c\u3068\u306a\u308a\u3001\u81ea\u52d5\u6574\u5f62\u304c\u884c\u308f\u308c\u307e\u3059\u3002\nESLint\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306a\u3069\u306fhelp\u3092\u898b\u3066\u9069\u5f53\u306b\u8a2d\u5b9a\u3057\u305f\u305f\u3081\u3001\u6539\u826f\u306e\u4f59\u5730\u306f\u3042\u308b\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n(2016-02-24:\u8ffd\u8a18start)\nESLint\u306e\u8a2d\u5b9a\u3092\u4f5c\u308a\u3053\u3080\u3068\u82e5\u5e72Vim\u304c\u9045\u304f\u306a\u3063\u305f\u306e\u3067\u3001\".eslintrc.js\"\u3068\".eslintrc.limit.js\"\u306b\u5206\u3051\u307e\u3057\u305f\u3002\n\u4fdd\u5b58\u6642\u306f\u7c21\u6613\u7248\u30c1\u30a7\u30c3\u30af\u3067\u51e6\u7406\u3092\u884c\u3044\u3001Quickrun\u6642\u306f\u30d5\u30eb\u7248\u30c1\u30a7\u30c3\u30af\u3067\u51e6\u7406\u3092\u884c\u3044\u3001\n\"MyEslintFix()\"\u5b9f\u884c\u6642\u306f--fix\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u5b9f\u884c\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n.vimrc\n\" vim-qfstatusline {{{\nfunction! MyStatuslineSyntax() abort \"{{{\n    let l:ret = qfstatusline#Update()\n    if 0 < len(l:ret)\n        if s:lineUpdate is# 0\n            highlight StatusLine cterm=NONE gui=NONE ctermfg=Black guifg=Black ctermbg=Magenta guibg=Magenta\n            let s:lineUpdate = 1\n        endif\n    elseif s:lineUpdate is# 1\n        highlight StatusLine cterm=NONE gui=NONE ctermfg=Black guifg=Black ctermbg=Grey guibg=Grey\n        let s:lineUpdate = 0\n    endif\n    return l:ret\nendfunction \"}}}\n\nfunction! MyStatuslinePaste() abort \"{{{\n    if &paste is# 1\n        return '(paste)'\n    endif\n    return ''\nendfunction \"}}}\n\nlet g:Qfstatusline#UpdateCmd = function('MyStatuslineSyntax')\nset laststatus=2\nset cmdheight=1\nset statusline=\\ %t\\ %{MyStatuslinePaste()}\\ %m\\ %r\\ %h\\ %w\\ %q\\ %{MyStatuslineSyntax()}%=%l/%L\\ \\|\\ %Y\\ \\|\\ %{&fileformat}\\ \\|\\ %{&fileencoding}\\ \n\"}}}\n\n\" vim-quickrun {{{\nfunction! EslintFix() abort \"{{{\n    let l:quickrun_config_backup                  = g:quickrun_config['javascript']\n    let g:quickrun_config['javascript']['cmdopt'] = l:quickrun_config_backup['cmdopt'] .' --config '. $HOME .'/.eslintrc.js --fix'\n    let g:quickrun_config['javascript']['runner'] = 'system'\n\n    QuickRun\n\n    let g:quickrun_config['javascript'] = l:quickrun_config_backup\nendfunction \"}}}\n\nnnoremap <Leader>run  :<C-u>QuickRun<CR>\nnnoremap <Leader>es   :<C-u>call<Space>EslintFix()<CR>\nlet s:quickrun_config_javascript = {\n\\    'command':     'eslint',\n\\    'cmdopt':      '--cache --cache-location ' . s:envHome . '/.cache/eslint/.eslintcache --format compact --max-warnings 1 --no-color --no-ignore --quiet',\n\\    'errorformat': '%E%f: line %l\\, col %c\\, Error - %m,%W%f: line %l\\, col %c\\, Warning - %m,%-G%.%#',\n\\    'exec':        '%c %o %s:p'\n\\}\nlet g:quickrun_config = {\n\\    '_': {\n\\        'hook/close_buffer/enable_empty_data': 1,\n\\        'hook/close_buffer/enable_failure':    1,\n\\        'outputter':                           'multi:buffer:quickfix',\n\\        'outputter/buffer/close_on_empty':     1,\n\\        'outputter/buffer/split':              ':botright',\n\\        'runner':                              'vimproc',\n\\        'runner/vimproc/updatetime':           600\n\\    },\n\\    'javascript': {\n\\        'command':     s:quickrun_config_javascript['command'],\n\\        'cmdopt':      s:quickrun_config_javascript['cmdopt'] . ' --config ' . s:envHome . '/.eslintrc.js',\n\\        'errorformat': s:quickrun_config_javascript['errorformat'],\n\\        'exec':        s:quickrun_config_javascript['exec']\n\\    },\n\\    'javascript/watchdogs_checker': {\n\\        'type': 'watchdogs_checker/javascript'\n\\    },\n\\    'watchdogs_checker/_': {\n\\        'hook/close_quickfix/enable_exit':        1,\n\\        'hook/back_window/enable_exit':           0,\n\\        'hook/back_window/priority_exit':         1,\n\\        'hook/qfstatusline_update/enable_exit':   1,\n\\        'hook/qfstatusline_update/priority_exit': 2,\n\\        'outputter/quickfix/open_cmd':            ''\n\\    },\n\\    'watchdogs_checker/javascript': {\n\\        'command':     s:quickrun_config_javascript['command'],\n\\        'cmdopt':      s:quickrun_config_javascript['cmdopt'] . ' --config ' . s:envHome . '/.eslintrc.limit.js',\n\\        'errorformat': s:quickrun_config_javascript['errorformat'],\n\\        'exec':        s:quickrun_config_javascript['exec']\n\\    }\n\\}\nunlet s:quickrun_config_javascript\n\"}}}\n\n\" shabadou.vim\n\" vim-watchdogs {{{\nlet g:watchdogs_check_BufWritePost_enable  = 1\nlet g:watchdogs_check_BufWritePost_enables = {'vim': 0}\nlet g:watchdogs_check_CursorHold_enable    = 1\nlet g:watchdogs_check_CursorHold_enables   = {'vim': 0}\n\"}}}\n\n\n\n\u88dc\u5b8c\u6a5f\u80fd\u8a2d\u5b9a\nVim\u672c\u4f53\u306b\u3082\u88dc\u5b8c\u6a5f\u80fd\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30ea\u30c3\u30c1\u306a\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u305f\u30c1\u30c3\u30d7\u30b9\u306e\u7d39\u4ecb\u3092\u3057\u307e\u3059\u3002\n\u88dc\u5b8c\u3059\u308b\u306b\u3042\u305f\u308a\u6700\u3082\u91cd\u8981\u3068\u306a\u308b\u306e\u306fsnippets\u306b\u306a\u308a\u307e\u3059\u3002\nsnippets\u306f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u52b9\u7387\u306b\u76f4\u7d50\u3059\u308b\u91cd\u8981\u306a\u8a2d\u5b9a\u306e\u305f\u3081\u3001\n\u79c1\u306f\u30d9\u30fc\u30b9\u3068\u306a\u308bsnippets\u3092fork\u3057\u3066\u81ea\u5206\u7528\u306b\u6700\u9069\u5316\u3057\u305f\u7269\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n.vimrc\u8a2d\u5b9a\n\n.vimrc\n\" neosnippet-snippets\n\" neosnippet.vim\n\" neoinclude.vim\n\" neocomplete.vim {{{\nimap <silent><expr><TAB> pumvisible() ? \"\\<C-n>\" : neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\n\" neosnippet.vim\nsmap <silent><expr><TAB>  neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nnmap <silent><expr><TAB>  neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nimap <silent><expr><C-x>  MyNeoCompleteCr()\nimap <silent><expr><CR>   MyNeoCompleteCr()\nnmap <silent><S-TAB> <ESC>a<C-r>=neosnippet#commands#_clear_markers()<CR>\ninoremap <expr><C-h> neocomplete#smart_close_popup().\"\\<C-h>\"\ninoremap <expr><BS>  neocomplete#smart_close_popup().\"\\<C-h>\"\n\"neocomplete.vim\nlet g:neocomplete#auto_completion_start_length = 3\nlet g:neocomplete#data_directory               = $HOME .'/.vim/neocomplete.vim'\nlet g:neocomplete#delimiter_patterns           = {\n\\    'javascript': ['.'],\n\\    'php':        ['->', '::', '\\'],\n\\    'ruby':       ['::']\n\\}\nlet g:neocomplete#enable_at_startup         = 1\nlet g:neocomplete#enable_auto_close_preview = 1\nlet g:neocomplete#enable_auto_delimiter     = 1\nlet g:neocomplete#enable_auto_select        = 0\nlet g:neocomplete#enable_fuzzy_completion   = 0\nlet g:neocomplete#enable_smart_case         = 1\nlet g:neocomplete#keyword_patterns          = {'_': '\\h\\w*'}\nlet g:neocomplete#lock_buffer_name_pattern  = '\\.log\\|.*quickrun.*\\|.jax'\nlet g:neocomplete#max_keyword_width         = 30\nlet g:neocomplete#max_list                  = 8\nlet g:neocomplete#min_keyword_length        = 3\nlet g:neocomplete#sources                   = {\n\\    '_':          ['neosnippet', 'file',               'buffer'],\n\\    'css':        ['neosnippet',         'dictionary', 'buffer'],\n\\    'html':       ['neosnippet', 'file', 'dictionary', 'buffer'],\n\\    'javascript': ['neosnippet', 'file', 'dictionary', 'buffer'],\n\\    'php':        ['neosnippet', 'file', 'dictionary', 'buffer']\n\\}\nlet g:neocomplete#sources#buffer#cache_limit_size  = 50000\nlet g:neocomplete#sources#buffer#disabled_pattern  = '\\.log\\|\\.jax'\nlet g:neocomplete#sources#buffer#max_keyword_width = 30\nlet g:neocomplete#sources#dictionary#dictionaries  = {\n\\    '_':          '',\n\\    'css':        $HOME . '/.vim/dict/css.dict',\n\\    'html':       $HOME . '/.vim/dict/html.dict',\n\\    'javascript': $HOME . '/.vim/dict/javascript.dict',\n\\    'php':        $HOME . '/.vim/dict/php.dict'\n\\}\nlet g:neocomplete#use_vimproc = 1\n\"neoinclude.vim\nlet g:neoinclude#exts          = {'php': ['php', 'inc', 'tpl']}\nlet g:neoinclude#max_processes = 5\n\"neosnippet.vim\nlet g:neosnippet#data_directory                = $HOME . '/.vim/neosnippet.vim'\nlet g:neosnippet#disable_runtime_snippets      = {'_' : 1}\nlet g:neosnippet#enable_snipmate_compatibility = 1\nlet g:neosnippet#snippets_directory            = $HOME . '/.vim/dein.vim/repos/github.com/KazuakiM/neosnippet-snippets/neosnippets'\nfunction! MyNeoCompleteCr() abort \"{{{\n    if pumvisible() is# 0\n        return \"\\<CR>X\\<C-h>\"\n    elseif neosnippet#expandable_or_jumpable()\n        return \"\\<Plug>(neosnippet_expand_or_jump)\"\n    endif\n    return \"\\<Left>\\<Right>\"\nendfunction \"}}}\n\"}}}\n\n\nJavaScript\u306e\u52c9\u5f37\u304c\u3066\u3089\u958b\u767a\u74b0\u5883\u3092\u6574\u5099\u3057\u307e\u3057\u305f\u3002\n\u30c1\u30c3\u30d7\u30b9\u306f\u6982\u8981\u306e\u307f\u63b2\u8f09\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u8a73\u7d30\u306f[.vimrc](https://raw.githubusercontent.com/KazuakiM/dotfiles/master/.vim/vimrc)\u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\u3002\n\n# Plugin\u8a2d\u5b9a\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u4f5c\u6210\n``` sh\n$ mkdir -p \\\n    $HOME/.cache/eslint \\\n    $HOME/.vim/vim-ref/cache \\\n    $HOME/.vim/tags \\\n    $HOME/.vim/neosnippet.vim \\\n    $HOME/.vim/neocomplete.vim\n```\n\n## Plugin\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nNeobundle\u4f5c\u8005\u306eShougo\u3055\u3093\u306e\u65b0\u3057\u3044\u30d7\u30e9\u30b0\u30a4\u30f3\u7ba1\u7406\u30d7\u30e9\u30b0\u30a4\u30f3\u300c<a href=\"https://github.com/Shougo/dein.vim\" target=\"_blank\">dein.vim</a>\u300d\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\n\n``` vim:.vimrc\n\" Cygwin\nif has('win32') || has ('win64')\n    set runtimepath^=$HOME\\.vim runtimepath+=$HOME\\.vim\\after\nendif\nlet s:deinDir    = ! exists('s:deinDir') ? $HOME . '/.vim/dein.vim' : s:deinDir\nlet &runtimepath = &runtimepath . ',' . s:deinDir . '/repos/github.com/Shougo/dein.vim'\n\" dein.vim {{{\nif dein#load_state(s:deinDir)\n    call dein#begin(s:deinDir)\n    call dein#add('KazuakiM/neosnippet-snippets')\n    call dein#add('KazuakiM/vim-qfstatusline')\n    call dein#add('mojako/ref-sources.vim')\n    call dein#add('pangloss/vim-javascript')\n    call dein#add('Shougo/dein.vim')\n    call dein#add('Shougo/neocomplete.vim')\n    call dein#add('Shougo/neoinclude.vim')\n    call dein#add('Shougo/neosnippet.vim')\n    call dein#add('Shougo/vimproc.vim', {'build': 'make'})\n    call dein#add('thinca/vim-quickrun')\n    call dein#add('thinca/vim-ref')\n    call dein#add('vim-scripts/taglist.vim')\n    call dein#add('osyo-manga/shabadou.vim')\n    call dein#add('osyo-manga/vim-watchdogs')\n    call dein#add('mustardamus/jqapi', {'lazy':1})\n    call dein#add('tokuhirom/jsref',   {'lazy':1})\n\n    call dein#end()\n    call dein#save_state()\nendif\n\"}}}\nfiletype plugin indent on\nsyntax enable\n```\n\n## syntax highlight\n[Vim\u3067ES6\u306e\u30b7\u30f3\u30bf\u30c3\u30af\u30b9\u30cf\u30a4\u30e9\u30a4\u30c8 - Qiita](http://qiita.com/QuestionDriven/items/83cba09d0010e8e31315) \u304c\u30a4\u30e1\u30fc\u30b8\u3082\u3042\u3063\u3066\u3088\u3055\u6c17\u3067\u3059\u3002\u7dba\u9e97\u3060\u3068\u305d\u306e\u5206\u3082\u3063\u3055\u308a\u3059\u308b\u306e\u3067\u304a\u597d\u307f\u3067\u4f7f\u7528\u3059\u308b\u306e\u304c\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30de\u30cb\u30e5\u30a2\u30eb\u8a2d\u5b9a\nJavaScript\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4ecb\u3055\u305a\u306b\u53c2\u7167\u3059\u308b\u8a2d\u5b9a\u3092\u3057\u307e\u3059\u3002\n\n### .vimrc\u8a2d\u5b9a\n``` vim:.vimrc\n\" vim-ref {{{\ninoremap <silent><C-k> <C-o>:call<Space>ref#K('normal')<CR><ESC>\nnmap <silent>K <Plug>(ref-keyword)\nlet g:ref_no_default_key_mappings = 1\nlet g:ref_cache_dir               = $HOME . '/.vim/vim-ref/cache'\nlet g:ref_detect_filetype         = {\n\\    'css':        'phpmanual',\n\\    'html':       ['phpmanual',  'javascript', 'jquery'],\n\\    'javascript': ['javascript', 'jquery'],\n\\    'php':        ['phpmanual',  'javascript', 'jquery']\n\\}\nlet g:ref_javascript_doc_path = $HOME . '/.vim/dein.vim/repos/github.com/tokuhirom/jsref/htdocs'\nlet g:ref_jquery_doc_path     = $HOME . '/.vim/dein.vim/repos/github.com/mustardamus/jqapi'\nlet g:ref_phpmanual_path      = $HOME . '/.vim/vim-ref/php-chunked-xhtml'\nlet g:ref_use_cache           = 1\nlet g:ref_use_vimproc         = 1\n\"}}}\n```\n\n## Universal Ctags\u8a2d\u5b9a\ntags\u30d5\u30a1\u30a4\u30eb\u3092\u9069\u5207\u306b\u751f\u6210\u3059\u308b\u3053\u3068\u3067\u30bf\u30b0\u30b8\u30e3\u30f3\u30d7\u304c\u53ef\u80fd\u3068\u306a\u308a\u3001\u6642\u9593\u77ed\u7e2e\u304c\u671f\u5f85\u3067\u304d\u307e\u3059\u3002\n\n### .ctags\u8a2d\u5b9a\n\u6b63\u898f\u8868\u73fe\u306e\u524d\u306bJavaScript\u3092\u52c9\u5f37\u3057\u305f\u3066\u3067\u3001\u30b1\u30fc\u30b9\u6f0f\u308c\u304c\u591a\u3044\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u30b3\u30e1\u30f3\u30c8\u9802\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002\n\n```:.ctags\n--exclude=*min.js\n--recurse=yes\n--langmap=JavaScript:.js.json.jsx.html\n```\n\n### alias\u8a2d\u5b9a\n``` sh:.bashrc.local\n#.bashrc.local\u307f\u305f\u3044\u306a\u611f\u3058\u3067GitHub\u7ba1\u7406\u5916\u3067\u3088\u3057\u306a\u306b\u7ba1\u7406\u3059\u308b\ntagsJsCmd='ctags --languages=js  -f'\ntagsVariable=''\ntagsVariable=\"$tagsVariable cd $HOME/sample1; $tagsJsCmd $HOME/.vim/tags/sample1.tags $HOME/sample1;\"\ntagsVariable=\"$tagsVariable cd $HOME/sample2; $tagsJsCmd $HOME/.vim/tags/sample2.tags $HOME/sample2;\"\ntagsVariable=\"$tagsVariable cd;\"\nalias TAGS=$tagsVariable\n```\n\n### .vimrc\u8a2d\u5b9a\n``` vim:.vimrc\n\" taglist.vim {{{\n\"MEMO:$ ctags --list-maps : ctags supported filetype.\n\"MEMO:$ ctags --list-kinds: ctags tlist setting.\nnnoremap <Leader>t :<C-u>Tlist<CR>\nlet g:tlist_javascript_settings = 'js;o:object;f:function'\nlet g:tlist_php_settings        = 'php;c:class;f:function;d:constant'\nlet g:Tlist_Exit_OnlyWindow     = 1\nlet g:Tlist_Show_One_File       = 1\nlet g:Tlist_Use_Right_Window    = 1\nlet g:Tlist_WinWidth            = 25\n\"}}}\n\n\".vimrc.local\u307f\u305f\u3044\u306a\u611f\u3058\u3067GitHub\u7ba1\u7406\u5916\u3067\u3088\u3057\u306a\u306b\u7ba1\u7406\u3059\u308b\naugroup MyTagsAutoCmd\n    autocmd!\n    autocmd BufNewFile,BufRead $HOME/sample1/*.{js,json,html} setlocal tags=$HOME/.vim/tags/sample1.tags\n    autocmd BufNewFile,BufRead $HOME/sample2/*.{js,json,html} setlocal tags=$HOME/.vim/tags/sample2.tags\naugroup END\n```\n\n## Syntax\u30c1\u30a7\u30c3\u30af, lint\u30c1\u30a7\u30c3\u30af, \u81ea\u52d5\u6574\u5f62\u8a2d\u5b9a\n\u306f\u3084\u308a\u306e[ESLint](http://eslint.org/)\u3092\u5c0e\u5165\u3057\u307e\u3059\u3002\n\n\u4fdd\u5b58\u6642\u306e\u52d5\u4f5c\u306fESLint\u306b\u3088\u308b\u975e\u540c\u671f\u306eSyntax\u30c1\u30a7\u30c3\u30af\u3092\u5b9f\u65bd\u3001\nQuickrun\u3057\u305f\u5834\u5408\u306b\u306f--fix\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u5b9f\u884c\u3068\u306a\u308a\u3001\u81ea\u52d5\u6574\u5f62\u304c\u884c\u308f\u308c\u307e\u3059\u3002\nESLint\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306a\u3069\u306fhelp\u3092\u898b\u3066\u9069\u5f53\u306b\u8a2d\u5b9a\u3057\u305f\u305f\u3081\u3001\u6539\u826f\u306e\u4f59\u5730\u306f\u3042\u308b\u304b\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n(2016-02-24:\u8ffd\u8a18start)\nESLint\u306e\u8a2d\u5b9a\u3092\u4f5c\u308a\u3053\u3080\u3068\u82e5\u5e72Vim\u304c\u9045\u304f\u306a\u3063\u305f\u306e\u3067\u3001\".eslintrc.js\"\u3068\".eslintrc.limit.js\"\u306b\u5206\u3051\u307e\u3057\u305f\u3002\n\u4fdd\u5b58\u6642\u306f\u7c21\u6613\u7248\u30c1\u30a7\u30c3\u30af\u3067\u51e6\u7406\u3092\u884c\u3044\u3001Quickrun\u6642\u306f\u30d5\u30eb\u7248\u30c1\u30a7\u30c3\u30af\u3067\u51e6\u7406\u3092\u884c\u3044\u3001\n\"MyEslintFix()\"\u5b9f\u884c\u6642\u306f--fix\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3057\u305f\u5b9f\u884c\u3068\u306a\u308b\u3088\u3046\u306b\u3057\u307e\u3057\u305f\u3002\n\n``` vim:.vimrc\n\" vim-qfstatusline {{{\nfunction! MyStatuslineSyntax() abort \"{{{\n    let l:ret = qfstatusline#Update()\n    if 0 < len(l:ret)\n        if s:lineUpdate is# 0\n            highlight StatusLine cterm=NONE gui=NONE ctermfg=Black guifg=Black ctermbg=Magenta guibg=Magenta\n            let s:lineUpdate = 1\n        endif\n    elseif s:lineUpdate is# 1\n        highlight StatusLine cterm=NONE gui=NONE ctermfg=Black guifg=Black ctermbg=Grey guibg=Grey\n        let s:lineUpdate = 0\n    endif\n    return l:ret\nendfunction \"}}}\n\nfunction! MyStatuslinePaste() abort \"{{{\n    if &paste is# 1\n        return '(paste)'\n    endif\n    return ''\nendfunction \"}}}\n\nlet g:Qfstatusline#UpdateCmd = function('MyStatuslineSyntax')\nset laststatus=2\nset cmdheight=1\nset statusline=\\ %t\\ %{MyStatuslinePaste()}\\ %m\\ %r\\ %h\\ %w\\ %q\\ %{MyStatuslineSyntax()}%=%l/%L\\ \\|\\ %Y\\ \\|\\ %{&fileformat}\\ \\|\\ %{&fileencoding}\\ \n\"}}}\n\n\" vim-quickrun {{{\nfunction! EslintFix() abort \"{{{\n    let l:quickrun_config_backup                  = g:quickrun_config['javascript']\n    let g:quickrun_config['javascript']['cmdopt'] = l:quickrun_config_backup['cmdopt'] .' --config '. $HOME .'/.eslintrc.js --fix'\n    let g:quickrun_config['javascript']['runner'] = 'system'\n\n    QuickRun\n\n    let g:quickrun_config['javascript'] = l:quickrun_config_backup\nendfunction \"}}}\n\nnnoremap <Leader>run  :<C-u>QuickRun<CR>\nnnoremap <Leader>es   :<C-u>call<Space>EslintFix()<CR>\nlet s:quickrun_config_javascript = {\n\\    'command':     'eslint',\n\\    'cmdopt':      '--cache --cache-location ' . s:envHome . '/.cache/eslint/.eslintcache --format compact --max-warnings 1 --no-color --no-ignore --quiet',\n\\    'errorformat': '%E%f: line %l\\, col %c\\, Error - %m,%W%f: line %l\\, col %c\\, Warning - %m,%-G%.%#',\n\\    'exec':        '%c %o %s:p'\n\\}\nlet g:quickrun_config = {\n\\    '_': {\n\\        'hook/close_buffer/enable_empty_data': 1,\n\\        'hook/close_buffer/enable_failure':    1,\n\\        'outputter':                           'multi:buffer:quickfix',\n\\        'outputter/buffer/close_on_empty':     1,\n\\        'outputter/buffer/split':              ':botright',\n\\        'runner':                              'vimproc',\n\\        'runner/vimproc/updatetime':           600\n\\    },\n\\    'javascript': {\n\\        'command':     s:quickrun_config_javascript['command'],\n\\        'cmdopt':      s:quickrun_config_javascript['cmdopt'] . ' --config ' . s:envHome . '/.eslintrc.js',\n\\        'errorformat': s:quickrun_config_javascript['errorformat'],\n\\        'exec':        s:quickrun_config_javascript['exec']\n\\    },\n\\    'javascript/watchdogs_checker': {\n\\        'type': 'watchdogs_checker/javascript'\n\\    },\n\\    'watchdogs_checker/_': {\n\\        'hook/close_quickfix/enable_exit':        1,\n\\        'hook/back_window/enable_exit':           0,\n\\        'hook/back_window/priority_exit':         1,\n\\        'hook/qfstatusline_update/enable_exit':   1,\n\\        'hook/qfstatusline_update/priority_exit': 2,\n\\        'outputter/quickfix/open_cmd':            ''\n\\    },\n\\    'watchdogs_checker/javascript': {\n\\        'command':     s:quickrun_config_javascript['command'],\n\\        'cmdopt':      s:quickrun_config_javascript['cmdopt'] . ' --config ' . s:envHome . '/.eslintrc.limit.js',\n\\        'errorformat': s:quickrun_config_javascript['errorformat'],\n\\        'exec':        s:quickrun_config_javascript['exec']\n\\    }\n\\}\nunlet s:quickrun_config_javascript\n\"}}}\n\n\" shabadou.vim\n\" vim-watchdogs {{{\nlet g:watchdogs_check_BufWritePost_enable  = 1\nlet g:watchdogs_check_BufWritePost_enables = {'vim': 0}\nlet g:watchdogs_check_CursorHold_enable    = 1\nlet g:watchdogs_check_CursorHold_enables   = {'vim': 0}\n\"}}}\n```\n\n## \u88dc\u5b8c\u6a5f\u80fd\u8a2d\u5b9a\n\nVim\u672c\u4f53\u306b\u3082\u88dc\u5b8c\u6a5f\u80fd\u306f\u3042\u308a\u307e\u3059\u304c\u3001\u3053\u3053\u3067\u306f\u30ea\u30c3\u30c1\u306a\u88dc\u5b8c\u6a5f\u80fd\u3092\u6d3b\u7528\u3057\u305f\u30c1\u30c3\u30d7\u30b9\u306e\u7d39\u4ecb\u3092\u3057\u307e\u3059\u3002\n\n\u88dc\u5b8c\u3059\u308b\u306b\u3042\u305f\u308a\u6700\u3082\u91cd\u8981\u3068\u306a\u308b\u306e\u306fsnippets\u306b\u306a\u308a\u307e\u3059\u3002\nsnippets\u306f\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u52b9\u7387\u306b\u76f4\u7d50\u3059\u308b\u91cd\u8981\u306a\u8a2d\u5b9a\u306e\u305f\u3081\u3001\n\u79c1\u306f\u30d9\u30fc\u30b9\u3068\u306a\u308bsnippets\u3092fork\u3057\u3066\u81ea\u5206\u7528\u306b\u6700\u9069\u5316\u3057\u305f\u7269\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\n\n### .vimrc\u8a2d\u5b9a\n``` vim:.vimrc\n\" neosnippet-snippets\n\" neosnippet.vim\n\" neoinclude.vim\n\" neocomplete.vim {{{\nimap <silent><expr><TAB> pumvisible() ? \"\\<C-n>\" : neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\n\" neosnippet.vim\nsmap <silent><expr><TAB>  neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nnmap <silent><expr><TAB>  neosnippet#expandable_or_jumpable() ? \"\\<Plug>(neosnippet_expand_or_jump)\" : \"\\<TAB>\"\nimap <silent><expr><C-x>  MyNeoCompleteCr()\nimap <silent><expr><CR>   MyNeoCompleteCr()\nnmap <silent><S-TAB> <ESC>a<C-r>=neosnippet#commands#_clear_markers()<CR>\ninoremap <expr><C-h> neocomplete#smart_close_popup().\"\\<C-h>\"\ninoremap <expr><BS>  neocomplete#smart_close_popup().\"\\<C-h>\"\n\"neocomplete.vim\nlet g:neocomplete#auto_completion_start_length = 3\nlet g:neocomplete#data_directory               = $HOME .'/.vim/neocomplete.vim'\nlet g:neocomplete#delimiter_patterns           = {\n\\    'javascript': ['.'],\n\\    'php':        ['->', '::', '\\'],\n\\    'ruby':       ['::']\n\\}\nlet g:neocomplete#enable_at_startup         = 1\nlet g:neocomplete#enable_auto_close_preview = 1\nlet g:neocomplete#enable_auto_delimiter     = 1\nlet g:neocomplete#enable_auto_select        = 0\nlet g:neocomplete#enable_fuzzy_completion   = 0\nlet g:neocomplete#enable_smart_case         = 1\nlet g:neocomplete#keyword_patterns          = {'_': '\\h\\w*'}\nlet g:neocomplete#lock_buffer_name_pattern  = '\\.log\\|.*quickrun.*\\|.jax'\nlet g:neocomplete#max_keyword_width         = 30\nlet g:neocomplete#max_list                  = 8\nlet g:neocomplete#min_keyword_length        = 3\nlet g:neocomplete#sources                   = {\n\\    '_':          ['neosnippet', 'file',               'buffer'],\n\\    'css':        ['neosnippet',         'dictionary', 'buffer'],\n\\    'html':       ['neosnippet', 'file', 'dictionary', 'buffer'],\n\\    'javascript': ['neosnippet', 'file', 'dictionary', 'buffer'],\n\\    'php':        ['neosnippet', 'file', 'dictionary', 'buffer']\n\\}\nlet g:neocomplete#sources#buffer#cache_limit_size  = 50000\nlet g:neocomplete#sources#buffer#disabled_pattern  = '\\.log\\|\\.jax'\nlet g:neocomplete#sources#buffer#max_keyword_width = 30\nlet g:neocomplete#sources#dictionary#dictionaries  = {\n\\    '_':          '',\n\\    'css':        $HOME . '/.vim/dict/css.dict',\n\\    'html':       $HOME . '/.vim/dict/html.dict',\n\\    'javascript': $HOME . '/.vim/dict/javascript.dict',\n\\    'php':        $HOME . '/.vim/dict/php.dict'\n\\}\nlet g:neocomplete#use_vimproc = 1\n\"neoinclude.vim\nlet g:neoinclude#exts          = {'php': ['php', 'inc', 'tpl']}\nlet g:neoinclude#max_processes = 5\n\"neosnippet.vim\nlet g:neosnippet#data_directory                = $HOME . '/.vim/neosnippet.vim'\nlet g:neosnippet#disable_runtime_snippets      = {'_' : 1}\nlet g:neosnippet#enable_snipmate_compatibility = 1\nlet g:neosnippet#snippets_directory            = $HOME . '/.vim/dein.vim/repos/github.com/KazuakiM/neosnippet-snippets/neosnippets'\nfunction! MyNeoCompleteCr() abort \"{{{\n    if pumvisible() is# 0\n        return \"\\<CR>X\\<C-h>\"\n    elseif neosnippet#expandable_or_jumpable()\n        return \"\\<Plug>(neosnippet_expand_or_jump)\"\n    endif\n    return \"\\<Left>\\<Right>\"\nendfunction \"}}}\n\"}}}\n```\n", "tags": ["Vim", "JavaScript", "ESLint"]}