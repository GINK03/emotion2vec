{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nSendGrid\u306eInbound Parse\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30e1\u30fc\u30eb\u3092\u53d7\u4fe1\u3057\u305f\u6642\u306b\u6307\u5b9a\u3057\u305fURL\u306b\u30e1\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u3092POST\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u306f\u3001multipart/form-data\u3067\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u3092\u5404\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\u306a\u304a\u3001SendGrid\u5074\u306e\u8a2d\u5b9a\u306f\u3053\u3061\u3089\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u4ee5\u4e0b\u3067\u306f\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3067\u53d6\u308a\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306e\u4e2d\u306bcharsets\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u306e\u4e2d\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u5bfe\u8c61\u3068\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\nTornado\nFlask\nFalcon\n\n\nTornado\u306e\u5834\u5408\nTornado\u306e\u5834\u5408\u3001request\u306earguments\u306b\u30d1\u30fc\u30b9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5165\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u57fa\u672c\u7684\u306b\u306f\u305d\u3053\u304b\u3089\u5f15\u304d\u51fa\u3057\u3066\u4f7f\u3046\u3060\u3051\u3067\u3059\u3002\nimport tornado.httpserver\nimport tornado.ioloop\nimport tornado.web\n\n\nclass InboundHandler(tornado.web.RequestHandler):\n\n    def post(self, *args, **kwargs):\n        print(\"Subject: %s\" % self.request.arguments[\"subject\"])\n        print(\"Text   : %s\" % self.request.arguments[\"text\"])\n\n\nif __name__ == '__main__':\n    app = tornado.web.Application(handlers=[(r'/inbound', InboundHandler)])\n    http_server = tornado.httpserver.HTTPServer(app)\n    http_server.listen(8000)\n    tornado.ioloop.IOLoop.instance().start()\n\n\nFlask\u306e\u5834\u5408\nFlask\u306e\u5834\u5408\u306f\u3001flask\u306erequest\u3092\u4f7f\u3044\u307e\u3059\u3002request\u306eform\u306b\u30d1\u30fc\u30b9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5165\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5f15\u304d\u51fa\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\nfrom flask import Flask, request\napp = Flask(__name__)\n\n@app.route('/inbound', methods=['POST'])\ndef sendgrid_parser():\n    print(\"Subject: %s\" % request.form.get('subject'))\n    print(\"Text   : %s\" % request.form.get('text'))\n\n\nif __name__ == '__main__':\n    app.run(port=8000)\n\n\nFalcon\u306e\u5834\u5408\nFalcon\u306e\u5834\u5408\u3001\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u3002cgi\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066parse\u3057\u3066\u3044\u307e\u3059\u3002python2\u7cfb\u306e\u5834\u5408\u306f\u3001parse_multipart\u306e\u4e2d\u306ebytes\u306e\u90e8\u5206\u3068io.BytesIO\u3092io.StringIO\u306b\u5e30\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3082\u3063\u3068\u4e0a\u624b\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\nimport cgi\nimport io\nimport falcon\n\n\ndef parse_multipart(req):\n    ctype, pdict = cgi.parse_header(req.content_type)\n    pdict['boundary'] = bytes(pdict['boundary'], 'utf-8')  # convert to byte code for cgi.parse_multipart\n    payload = req.stream.read()\n    rfile = io.BytesIO(payload)\n    query = cgi.parse_multipart(rfile, pdict)\n    return query\n\n\nclass ParserResource(object):\n\n    def on_post(self, req, resp):\n        query = parse_multipart(req)\n        print(\"Subject: %s\" % query['subject'])\n        print(\"Text   : %s\" % query['text'])\n\n\napp = falcon.API()\napp.add_route('/inbound', ParserResource())\n\n\nif __name__ == '__main__':\n    from wsgiref import simple_server\n    httpd = simple_server.make_server(\"0.0.0.0\", 8000, app)\n    httpd.serve_forever()\n\n# \u306f\u3058\u3081\u306b\nSendGrid\u306eInbound Parse\u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u30e1\u30fc\u30eb\u3092\u53d7\u4fe1\u3057\u305f\u6642\u306b\u6307\u5b9a\u3057\u305fURL\u306b\u30e1\u30fc\u30eb\u306e\u30c7\u30fc\u30bf\u3092POST\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u306e\u5f62\u5f0f\u306f\u3001[multipart/form-data](https://sendgrid.kke.co.jp/docs/API_Reference/Webhooks/parse.html)\u3067\u3059\u3002\u3053\u306e\u30c7\u30fc\u30bf\u3092\u5404\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u51e6\u7406\u3059\u308b\u305f\u3081\u306e\u65b9\u6cd5\u3092\u30e1\u30e2\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u306a\u304a\u3001SendGrid\u5074\u306e\u8a2d\u5b9a\u306f[\u3053\u3061\u3089](https://sendgrid.kke.co.jp/blog/?p=827)\u3092\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u4ee5\u4e0b\u3067\u306f\u3001\u6587\u5b57\u30b3\u30fc\u30c9\u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u306a\u3044\u306e\u3067\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3067\u53d6\u308a\u51fa\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3082\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5834\u5408\u306f\u3001\u53d7\u3051\u53d6\u3063\u305f\u30c7\u30fc\u30bf\u306e\u4e2d\u306bcharsets\u304c\u3042\u308b\u306e\u3067\u3001\u305d\u306e\u4e2d\u306e\u6587\u5b57\u30b3\u30fc\u30c9\u3092\u4f7f\u3063\u3066\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u3092\u5909\u63db\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u5bfe\u8c61\u3068\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n* Tornado\n* Flask\n* Falcon\n\n<!--\n* AWS Lambda\n-->\n\n# Tornado\u306e\u5834\u5408\nTornado\u306e\u5834\u5408\u3001request\u306earguments\u306b\u30d1\u30fc\u30b9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5165\u308a\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u57fa\u672c\u7684\u306b\u306f\u305d\u3053\u304b\u3089\u5f15\u304d\u51fa\u3057\u3066\u4f7f\u3046\u3060\u3051\u3067\u3059\u3002\n\n```py\nimport tornado.httpserver\nimport tornado.ioloop\nimport tornado.web\n\n\nclass InboundHandler(tornado.web.RequestHandler):\n\n    def post(self, *args, **kwargs):\n        print(\"Subject: %s\" % self.request.arguments[\"subject\"])\n        print(\"Text   : %s\" % self.request.arguments[\"text\"])\n\n\nif __name__ == '__main__':\n    app = tornado.web.Application(handlers=[(r'/inbound', InboundHandler)])\n    http_server = tornado.httpserver.HTTPServer(app)\n    http_server.listen(8000)\n    tornado.ioloop.IOLoop.instance().start()\n```\n\n# Flask\u306e\u5834\u5408\nFlask\u306e\u5834\u5408\u306f\u3001flask\u306erequest\u3092\u4f7f\u3044\u307e\u3059\u3002request\u306eform\u306b\u30d1\u30fc\u30b9\u3055\u308c\u305f\u30c7\u30fc\u30bf\u304c\u5165\u308b\u306e\u3067\u3001\u305d\u308c\u3092\u5f15\u304d\u51fa\u3057\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308a\u307e\u3059\u3002\n\n```py\nfrom flask import Flask, request\napp = Flask(__name__)\n\n@app.route('/inbound', methods=['POST'])\ndef sendgrid_parser():\n    print(\"Subject: %s\" % request.form.get('subject'))\n    print(\"Text   : %s\" % request.form.get('text'))\n\n\nif __name__ == '__main__':\n    app.run(port=8000)\n```\n\n# Falcon\u306e\u5834\u5408\nFalcon\u306e\u5834\u5408\u3001\u3061\u3087\u3063\u3068\u9577\u304f\u306a\u308a\u307e\u3057\u305f\u3002cgi\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u4f7f\u3063\u3066parse\u3057\u3066\u3044\u307e\u3059\u3002python2\u7cfb\u306e\u5834\u5408\u306f\u3001parse_multipart\u306e\u4e2d\u306ebytes\u306e\u90e8\u5206\u3068io.BytesIO\u3092io.StringIO\u306b\u5e30\u308b\u5fc5\u8981\u304c\u3042\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u3082\u3063\u3068\u4e0a\u624b\u3044\u65b9\u6cd5\u304c\u3042\u3063\u305f\u3089\u6559\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```py\nimport cgi\nimport io\nimport falcon\n\n\ndef parse_multipart(req):\n    ctype, pdict = cgi.parse_header(req.content_type)\n    pdict['boundary'] = bytes(pdict['boundary'], 'utf-8')  # convert to byte code for cgi.parse_multipart\n    payload = req.stream.read()\n    rfile = io.BytesIO(payload)\n    query = cgi.parse_multipart(rfile, pdict)\n    return query\n\n\nclass ParserResource(object):\n\n    def on_post(self, req, resp):\n        query = parse_multipart(req)\n        print(\"Subject: %s\" % query['subject'])\n        print(\"Text   : %s\" % query['text'])\n\n\napp = falcon.API()\napp.add_route('/inbound', ParserResource())\n\n\nif __name__ == '__main__':\n    from wsgiref import simple_server\n    httpd = simple_server.make_server(\"0.0.0.0\", 8000, app)\n    httpd.serve_forever()\n```\n\n<!--\n# AWS Lambda\u306e\u5834\u5408\nLambda\u306e\u5834\u5408API Gateway\u3068\u7d44\u307f\u5408\u308f\u305b\u3066\u4f7f\u3046\u3053\u3068\u306b\u306a\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\u57fa\u672c\u7684\u306b\u306fFalcon\u306e\u5834\u5408\u3068\u540c\u3058\u3084\u308a\u65b9\u306b\u306a\u308a\u307e\u3059\u3002\u3067\u3059\u304c\u3001API Gateway\u3067\u3046\u307e\u304f\u53d7\u3051\u53d6\u308b\u8a2d\u5b9a\u3092\u3059\u308c\u3070\u3001\u3082\u3063\u3068\u697d\u306b\u3067\u304d\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u5927\u90e8\u5206\u306f\u3001\u4ee5\u4e0b\u3092\u53c2\u8003\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n* [\u30e1\u30fc\u30eb\u53d7\u4fe1\u3082API Gateway\uff0bLambda\u3067\u51e6\u7406\u3057\u3066\u307f\u308b](http://dev.classmethod.jp/cloud/mail-receiving-by-lambda/)\n\n-->\n", "tags": ["Python", "SendGrid"]}