{"tags": ["Phoenix", "Elixir"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002niku\u69d8\u306e\u7ffb\u8a33\nhttp://qiita.com/niku/items/b54fdc9ca3c027f95fc7\n\u3092\u5143\u306b\uff0c\nhttp://www.phoenixframework.org/v0.13.1/docs/overview\u3092\u7ffb\u8a33\u3057\u307e\u3057\u305f\uff0e\n\u7ffb\u8a33\u306e\u8aa4\u308a\u306a\u3069\u3042\u308c\u3070\u3054\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\uff0e\n\n\nPhoenix is a web development framework written in Elixir which implements the server-side MVC pattern. If you've ever used a similar framework, say Ruby on Rails or Python's Django, many of the concepts will be familiar to you. Phoenix gives you the best of both worlds, high developer productivity and high application performance. It also has some interesting new twists, channels for managing realtime events, pre-compiled templates and the potential for alternative architectures which may make services more manageable from the very beginning of your project.\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u305f\uff0c\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9 MVC \u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u305f Web \u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\uff0e\n\u3082\u3057 Ruby on Rails \u3084 Python \u306e Django \u3068\u3044\u3063\u305f\uff0c\u3053\u308c\u3068\u4f3c\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3042\u306a\u305f\u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u3082\u306e\u3067\u3057\u3087\u3046\uff0e\nPhoenix \u306f\uff0c\u9ad8\u3044\u751f\u7523\u6027\u3068\u9ad8\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\uff0c\u4e21\u65b9\u306e\u9577\u6240\u3092\u3082\u305f\u3089\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\u307e\u305f\uff0c\u3044\u304f\u3064\u304b\u9762\u767d\u3044\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30a4\u30d9\u30f3\u30c8\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e channnel\uff0c\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5f53\u521d\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u3084\u3059\u304f\uff0c\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308b\uff0c\u65e2\u5b58\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4ee3\u66ff\u3068\u306a\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\uff0e\n\nIf you are already familiar with Elixir, great! If not, there are a number of places you can go to learn. You might want to read through the Elixir guides first. You might also want to look through any of the books, blogs or videos listed in the Resources Guide.\n\n\u3082\u3057\u65e2\u306b Elixir \u306b\u6163\u308c\u3066\u3044\u308b\u306a\u3089\uff0c\u3059\u3070\u3089\u3057\u3044\u3053\u3068\u3067\u3059\uff01\n\u3082\u3057\u305d\u3046\u3067\u306f\u306a\u3044\u306a\u3089\uff0c\u5b66\u3079\u308b\u5834\u6240\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\uff0e\n\u6700\u521d\u306b Elixir guides \u3092\u901a\u3057\u3066\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0cResources Guide \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u66f8\u7c4d\uff0c\u30d6\u30ed\u30b0\uff0c\u30d3\u30c7\u30aa\u306e\u3044\u305a\u308c\u304b\u306b\u76ee\u3092\u901a\u3059\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\nThe aim of this introductory guide is to present a brief, high level overview of Phoenix, the parts that make it up, and the layers underneath that support it.\n\n\u3053\u306e\u5165\u9580\u30ac\u30a4\u30c9\u3067\u306f\uff0cPhoenix \u306e\u5927\u307e\u304b\u306a\u6982\u8981\u3068\uff0c\u305d\u308c\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\uff0c\u968e\u5c64\u3092\u7c21\u6f54\u306b\u793a\u3057\u307e\u3059\uff0e\n\nPhoenix\n\nPhoenix is actually the top layer of a multi-layer system designed to be modular and flexible. The other layers are the Elixir middleware project, Plug, and the Erlang web server, Cowboy. Plug and Cowboy are covered in the next sections of this guide.\n\n\u5b9f\u969b\u306e\u3068\u3053\u308d Phoenix \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3068\u67d4\u8edf\u6027\u306e\u5411\u4e0a\u3092\u76ee\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u305f\u8907\u6570\u306e\u968e\u5c64\u306e\u4e0a\u306b\u306a\u308a\u305f\u3063\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u3068\u5225\u306e\u968e\u5c64\u3068\u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b Plug\uff0cErlang \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b Cowboy \u3067\u3059\uff0e\nPlug \u3068 Cowboy \u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ac\u30a4\u30c9\u306e\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u307e\u3059\uff0e\n\nPhoenix is made up of a number of distinct parts, each with its own purpose and role to play in building a web application. We will cover them all in depth throughout these guides, but here's a quick breakdown.\n\nPhoenix \u306f\uff0c\u500b\u3005\u306e\u76ee\u7684\u3092\u6301\u3063\u305f\u72ec\u7acb\u3057\u305f\u90e8\u54c1\u3067\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u304c web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9\u306e\u4e2d\u3067\u5f79\u5272\u3092\u306f\u305f\u3059\u3053\u3068\u3067\u7d44\u307f\u3042\u3052\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u3053\u306e\u30ac\u30a4\u30c9\u3067\u6398\u308a\u4e0b\u3052\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\nThe Endpoint\n\n   handles all aspects of requests up until the beginning of our applications\n   provides a core set of middleware to apply to all requests\n   dispatches requests into designated routers\n\n\nThe Endpoint\n\n   \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306b\uff0c\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3044\u3066\u8208\u5473\u306e\u3042\u308b\u90e8\u5206\u3092\u6271\u3044\u307e\u3059\n   \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u7b54\u3059\u308b\u305f\u3081\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4e2d\u5fc3\u7684\u306a\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\n   \u6307\u5b9a\u3055\u308c\u305f\u30eb\u30fc\u30bf\u306b\u8981\u6c42\u3092\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3057\u307e\u3059\n\n\nThe Router\n\n   parses incoming requests and dispatches to the correct controller/action, passing parameters as needed\n   provides helpers to generate route paths or urls to resources\n\n\nThe Router\n\n   \u6765\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\uff0c\u6b63\u3057\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc/\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u3068\u9001\u308a\u307e\u3059\uff0e\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3082\u6e21\u3057\u307e\u3059\n   \u30d1\u30b9\u3084 url \u3092\u30ea\u30bd\u30fc\u30b9\u3078\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n\nPipelines\n\n   Allow easy segregation of middleware across different routes\n\n\nPipelines\n\n   \u7570\u306a\u308b\u30eb\u30fc\u30c8\u3092\u6a2a\u65ad\u3059\u308b\uff0c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u5bb9\u6613\u306a\u5206\u96e2\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\n\n\nControllers\n\n   provide functions, called actions, to handle requests\n   Actions\n\n\n       prepare data and pass it into views\n       invoke rendering via views\n       perform redirects\n\n\n\n\nControllers\n\n   \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\u305f\u3081\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\n   Actions\n\n\n       \u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066 View \u306b\u6e21\u3057\u307e\u3059\n       view \u3092\u901a\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n       \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n\n\n\nViews\n\n   render templates\n   act as a presentation layer\n   define helper functions, available in templates, to decorate raw data\n\n\nViews\n\n   \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n   \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u5c64\u3068\u3057\u3066\u4f5c\u7528\u3057\u307e\u3059\n   \u751f\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067\u4f7f\u3048\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n\nTemplates\n\n   are what they sound like :)\n   Precompiled & fast\n\n\nTemplates\n\n   \u540d\u306f\u4f53\u3092\u8868\u3057\u307e\u3059 :)\n   \u4e8b\u524d\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u9ad8\u901f\n\n\nChannels\n\n   manage sockets for easy realtime communication\n   analogous to controllers except that they allow bi-directional communication with persistent connections\n\n\nChannels\n\n   \u5bb9\u6613\u306a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u901a\u4fe1\u306e\u305f\u3081\u306e socket \u3092\u7ba1\u7406\u3057\u307e\u3059\n   \u53cc\u65b9\u5411\u901a\u4fe1\u304c\u3067\u304d\u3066\uff0c\u305a\u3063\u3068\u7e4b\u3063\u3066\u3044\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3092\u9664\u3051\u3070\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u4f3c\u3066\u3044\u307e\u3059\n\n\nPubSub\n\n   Underlies the channel layer and allows topics to be subscribed to\n   Abstracts the underlying pubsub adapter for third-party pubsub integration\n\n\nPubSub\n\n   \u30c1\u30e3\u30cd\u30eb\u5c64\u306e\u4e0b\u306b\u3042\u308a\uff0c\u30c8\u30d4\u30c3\u30af\u304c\u8cfc\u8aad\u3055\u308c\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\n   \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3 pubsub \u7d71\u5408\u306e\u305f\u3081\u306b\u57fa\u790e\u3068\u306a\u308b pubsub \u30a2\u30c0\u30d7\u30bf\u3092\u62bd\u8c61\u5316\u3057\u307e\u3059\n\n\nPlug\n\nPlug is Elixir's web middleware layer. Conceptually, it shares a lot with other middleware layers like Rack for Ruby or WSGI for Python. Plugs are reusable modules that share the same very small, very regular public api. They provide discrete behaviors - like request header parsing or logging. Because the Plug api is so consistent, they can be stacked and executed in a set order, like a pipeline. They can also be re-used within a project or across projects.\n\nPlug \u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u5c64\u3067\u3059\uff0e\u6982\u5ff5\u3068\u3057\u3066\u306f\uff0cRuby \u306e Rack\uff0cPython \u306e WSGI \u306e\u3088\u3046\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u5171\u901a\u3057\u3066\u3044\u307e\u3059\uff0e\nPlugs \u306f\u3068\u3066\u3082\u5c0f\u3055\u304f\uff0c\u3068\u3066\u3082\u4e00\u822c\u7684\u306a\u516c\u958bAPI\u3092\u3082\u3063\u305f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\uff0e\n\u305d\u308c\u3089\u306f\u63a7\u3048\u3081\u306a\u632f\u821e\u3044\u3092\u63d0\u4f9b\u3057\u307e\u3059 - \u4f8b\u3048\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u305f\u308a\uff0c\u30ed\u30b0\u3092\u53d6\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3067\u3059\uff0e\n\u3067\u3059\u304b\u3089\uff0cPlug \u306e API \u306f\u3068\u3066\u3082\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u3089\u306f\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307f\u4e0a\u3052\u3089\u308c\uff0c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u3088\u3046\u306b\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u305d\u308c\u3089\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u307e\u305f\u304c\u3063\u3066\u518d\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\nPlugs can be written to handle almost anything, from authentication to parameter pre-processing, and even rendering.\n\nPlugs \u306f\u8a8d\u8a3c\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u524d\u51e6\u7406\uff0c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u3055\u3048\u3082\uff0c\u307b\u3068\u3093\u3069\u5168\u3066\u306e\u3053\u3068\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\nPhoenix takes great advantage of Plug in general - the router and controllers especially so.\n\nPhoenix \u306f Plug \u306b\u5099\u308f\u3063\u3066\u3044\u308b\u305d\u306e\u3059\u3070\u3089\u3057\u3044\u5229\u70b9\u3092\u5f97\u3066\u3044\u307e\u3059 - router \u3068 controllers \u3067\u306f\u7279\u306b\u305d\u3046\u3067\u3059\uff0e\n\nOne of the most important things about Plug, is that it provides adapters to HTTP servers which will ultimately deliver application content to your users. Currently, Plug only provides an adapter to Cowboy, which we will talk about next, but there are plans to provide adapters for other servers in the future.\n\nPlug \u3067\u6700\u3082\u5927\u4e8b\u306a\u3053\u3068\u306e\u4e00\u3064\u306b\uff0c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u3078\u3068\u5c4a\u3051\u308b\u305f\u3081\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u73fe\u5728\uff0cPlug \u306f Cowboy \u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4eca\u5f8c\u3078\u306e\u8a71\u3092\u3059\u308b\u3068\uff0c\u4ed6\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u304c\u3042\u308a\u307e\u3059\uff0e\n\nLinks to more in-depth information on Plug can be found in the Resources Guide.\n\nPlug \u306e\u3082\u3063\u3068\u8a73\u3057\u3044\u60c5\u5831\u3078\u306e\u30ea\u30f3\u30af\u306f Resources Guide \u306b\u3042\u308a\u307e\u3059\uff0e\n\nCowboy\n\nCowboy is an HTTP server written in Erlang by Lo\u00efc Hoguin of 99s. Cowboy is built in a modular way on top of Ranch, Bullet, and Sheriff. This is how 99s describes them.\n\nCowboy \u306f 99s \u306e Lo\u00efc Hoguin \u306b\u3088\u3063\u3066 Erlang \u3067\u66f8\u304b\u308c\u3066 HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\nCowboy \u306f \u7d44\u7acb\u5f0f\u3067 Ranch, Bullet, Sheriff \u3068\u3044\u3063\u305f\u3082\u306e\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306f 99s \u304c\u66f8\u3044\u305f\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3067\u3059\uff0e\n\n\n   Cowboy is a small, fast, modular HTTP server supporting Websockets, SPDY and more.\n   Ranch is a socket acceptor pool for TCP protocols. It is also a standalone library for building networked applications.\n   Bullet is a simple, reliable, efficient streaming library.\n   Sheriff uses parse transforms for type based validation. Sheriff also validates data dynamically using Erlang's type system with no extra code required.\n\n\n\n   Cowboy \u306f\u5c0f\u3055\u304f\uff0c\u901f\u304f\uff0c\u7d44\u7acb\u5f0f\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067 Websockets \u3084 SPDY \u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n   Ranch \u306f TCP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u305f\u3081\u306e\u30bd\u30b1\u30c3\u30c8\u53d7\u3051\u5165\u308c\u30d7\u30fc\u30eb\u3067\u3059\uff0e\u3053\u308c\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u72ec\u7acb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n   Bullet \u306f\u7c21\u6f54\u3067\uff0c\u4fe1\u983c\u6027\u306e\u9ad8\u3044\uff0c\u52b9\u679c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n   Sheriff \u306f\u578b\u30d9\u30fc\u30b9\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b parse transform \u3092\u4f7f\u3044\u307e\u3059\uff0eSheriff \u306f\u5916\u90e8\u306e\u8ffd\u52a0\u30b3\u30fc\u30c9\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b Erlang \u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059\uff0e\n\n\nCowboy has fantastic documentation. The Guides are especially helpful. Learning more about Cowboy will surely help you to understand Phoenix more fully.\n\nCowboy \u306b\u306f\u7d20\u6674\u3057\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\uff0e\u7279\u306b Guides \u304c\u305f\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\nCowboy \u306b\u3064\u3044\u3066\u5b66\u3076\u3053\u3068\u306f\u304d\u3063\u3068 Phoenix \u3092\u3082\u3063\u3068\u77e5\u308b\u305f\u3081\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\uff0e\n\nCowboy has its own section of links in the Resources Guide.\n\nResources Guide \u306e\u4e2d\u306b Cowboy \u3078\u306e\u30ea\u30f3\u30af\u304c\u3042\u308a\u307e\u3059\uff0e\n\nSystem Dependencies\n\nThere are a number of dependencies external to Phoenix which we will encounter as we work our way through these guides. Elixir and Erlang are hard dependencies, meaning that we won't be able to work with Phoenix at all unless we have them installed. The rest may not prevent us from getting started if we don't have them, but their absence may lead to errors that prevent us from moving forward. Simply installing these dependencies may save us from confusion and frustration later on.\n\n\u3053\u306e\u30ac\u30a4\u30c9\u3092\u901a\u3057\u3066\uff0c\u3044\u304f\u3064\u304b\u306e Phoenix \u5916\u90e8\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u51fa\u3066\u304d\u307e\u3059\uff0e Elixir \u3068 Erlang \u306b\u306f\u5f37\u304f\u4f9d\u5b58\u3057\u307e\u3059\uff0c\u3059\u306a\u308f\u3061\u3053\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u304b\u304e\u308a Phoenix \u3067\u4f5c\u696d\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e\u6b8b\u308a\u306e\u3082\u306e\u306f\uff0c\u7121\u304f\u3066\u3082\u59cb\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\uff0c\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u3057\u524d\u306b\u9032\u3081\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u3053\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3051\u3070\uff0c\u306e\u3061\u306e\u6df7\u4e71\u3068\u4e0d\u6e80\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\uff0e\n\nLet's take a look at each of them now.\n\nElixir\nPhoenix is written in Elixir, and our application code will also be written in Elixir. In order to do any work with Phoenix, we need Elixir installed on our system. The Elixir site itself has great installation instructions.\nErlang\nElixir source code compiles to Erlang byte code which runs on the Erlang Virtual Machine. That means we must have Erlang installed on our system - in addition to Elixir - in order to work with Phoenix. The Elixir site also has Erlang installation instructions.\nnode.js (>= 0.12.0)\nNode is an optional dependency. Phoenix will use brunch.io to compile static assets (javascript, css, etc), by default. Brunch.io uses the node package manager (npm) to install its dependencies, and npm requires node.js.\nIf we don't have any static assets, or we want to use another build tool, we can pass the --no-brunch flag when creating a new application and node won't be required at all.\nPostgreSQL\nPostgreSQL is a relational database server. Phoenix configures applications to use it by default, but we can switch to MySQL by passing the --database mysql flag when creating a new application.\nWhen we work with Ecto models in these guides, we will use PostgreSQL and the Postgrex adapter for it. In order to follow along with the examples, we will need to install PostgreSQL on our system. The PostgreSQL wiki has installation guides for a number of different systems.\ninotify-tools\nThis is a Linux-only filesystem watcher that Phoenix uses for live code reloading. (Mac OS X or Windows users can safely ignore it.)\nLinux users need to install this dependency. Please consult the inotify-tools wiki for distribution-specific installation instructions.\n\n\n\u305d\u308c\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n   Elixir\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u3066\u304a\u308a\uff0c\u79c1\u305f\u3061\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3082 Elixir \u3067\u66f8\u304d\u307e\u3059\uff0e Phoenix \u3067\u306e\u3059\u3079\u3066\u306e\u4f5c\u696d\u3092\u884c\u3046\u305f\u3081\u306b\uff0c Elixir \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Elixir \u306e\u30b5\u30a4\u30c8\u81ea\u4f53\u306b\u3059\u3070\u3089\u3057\u3044\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u304c\u3042\u308a\u307e\u3059\uff0e\n\n   Erlang\n\nElixir \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f Erlang \u306e\u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u3067\u52d5\u4f5c\u3059\u308b Erlang \u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u305f\u3081 Phoenix \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\uff0c Elixir \u306b\u52a0\u3048\u3066\uff0c Erlang \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Elixir \u306e\u30b5\u30a4\u30c8\u306b\u306f\uff0cErlang\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u3082\u3042\u308a\u307e\u3059\uff0e\n\n   node.js (>= 0.12.0)\n\nNode \u306f\uff0c\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f9d\u5b58\u95a2\u4fc2\u3067\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Phoenix \u306f\uff0c\u9759\u7684\u306a\u30a2\u30bb\u30c3\u30c8\uff08javascript \u3084 css \u306a\u3069\uff09\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u306b brunch.io \u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e Brunch.io \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b node package manager (npm) \u3092\u4f7f\u7528\u3057\uff0c npm \u306f node.js \u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\uff0e\n    \u9759\u7684\u30a2\u30bb\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044\u304b\uff0c\u4ed6\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u6642\u306b --no-brunch \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308c\u3070\uff0c Node \u306f\u5168\u304f\u5fc5\u8981\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\n\n   PostgreSQL\n\nPostgreSQL \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Phoenix \u306f\uff0cPostgreSQL \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u6210\u3057\u307e\u3059\u304c\uff0c\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u6642\u306b --database mysql \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308c\u3070\uff0c MySQL \u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n    \u3053\u306e\u30ac\u30a4\u30c9\u3067 Ecto \u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\uff0c PostgreSQL \u3068 Postgrex \u30a2\u30c0\u30d7\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\u30ac\u30a4\u30c9\u306e\u4f8b\u306b\u5f93\u3046\u305f\u3081\u306b\u306f\uff0c Postgres \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e PostgreSQL \u306e wiki \u306b\u306f\u3055\u307e\u3056\u307e\u306a\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9\u304c\u3042\u308a\u307e\u3059\uff0e\n\n   inotify-tools\n\nPhoenix \u304c\u30e9\u30a4\u30d6\u30b3\u30fc\u30c9\u518d\u30ed\u30fc\u30c9\u306b\u4f7f\u7528\u3059\u308b\uff0c Linux \u5c02\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u30a6\u30a9\u30c3\u30c1\u30e3\u30fc\u3067\u3059\uff0e(Mac OS X \u3068 Windows \u30e6\u30fc\u30b6\u30fc\u306f\u5b89\u5168\u306b\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e)\n    Linux \u30e6\u30fc\u30b6\u30fc\u306f\u3053\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u56fa\u6709\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306b\u3064\u3044\u3066\u306finotify-tools wiki\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\nniku\u69d8\u306e\u7ffb\u8a33\n[http://qiita.com/niku/items/b54fdc9ca3c027f95fc7](http://qiita.com/niku/items/b54fdc9ca3c027f95fc7)\n\u3092\u5143\u306b\uff0c\n[http://www.phoenixframework.org/v0.13.1/docs/overview](http://www.phoenixframework.org/v0.13.1/docs/overview)\u3092\u7ffb\u8a33\u3057\u307e\u3057\u305f\uff0e\n\u7ffb\u8a33\u306e\u8aa4\u308a\u306a\u3069\u3042\u308c\u3070\u3054\u6307\u6458\u304a\u5f85\u3061\u3057\u3066\u304a\u308a\u307e\u3059\uff0e\n\n***\n\n>Phoenix is a web development framework written in Elixir which implements the server-side MVC pattern. If you've ever used a similar framework, say Ruby on Rails or Python's Django, many of the concepts will be familiar to you. Phoenix gives you the best of both worlds, high developer productivity and high application performance. It also has some interesting new twists, channels for managing realtime events, pre-compiled templates and the potential for alternative architectures which may make services more manageable from the very beginning of your project.\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u305f\uff0c\u30b5\u30fc\u30d0\u30fc\u30b5\u30a4\u30c9 MVC \u30d1\u30bf\u30fc\u30f3\u3067\u5b9f\u88c5\u3057\u305f Web \u958b\u767a\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067\u3059\uff0e\n\u3082\u3057 Ruby on Rails \u3084 Python \u306e Django \u3068\u3044\u3063\u305f\uff0c\u3053\u308c\u3068\u4f3c\u3066\u3044\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u3042\u308c\u3070\uff0c\u591a\u304f\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u306f\u3042\u306a\u305f\u306b\u99b4\u67d3\u307f\u306e\u3042\u308b\u3082\u306e\u3067\u3057\u3087\u3046\uff0e\nPhoenix \u306f\uff0c\u9ad8\u3044\u751f\u7523\u6027\u3068\u9ad8\u3044\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\uff0c\u4e21\u65b9\u306e\u9577\u6240\u3092\u3082\u305f\u3089\u3057\u307e\u3059\uff0e\u305d\u3057\u3066\u307e\u305f\uff0c\u3044\u304f\u3064\u304b\u9762\u767d\u3044\u7279\u5fb4\u3092\u6301\u3063\u3066\u3044\u307e\u3059\uff0e\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u30a4\u30d9\u30f3\u30c8\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e channnel\uff0c\u30d7\u30ea\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\uff0c\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5f53\u521d\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u3092\u4f5c\u308a\u3084\u3059\u304f\uff0c\u7ba1\u7406\u3057\u3084\u3059\u304f\u306a\u308b\uff0c\u65e2\u5b58\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u4ee3\u66ff\u3068\u306a\u308b\u53ef\u80fd\u6027\u3092\u79d8\u3081\u3066\u3044\u307e\u3059\uff0e\n\n>If you are already familiar with Elixir, great! If not, there are a number of places you can go to learn. You might want to read through the Elixir guides first. You might also want to look through any of the books, blogs or videos listed in the Resources Guide.\n\n\u3082\u3057\u65e2\u306b Elixir \u306b\u6163\u308c\u3066\u3044\u308b\u306a\u3089\uff0c\u3059\u3070\u3089\u3057\u3044\u3053\u3068\u3067\u3059\uff01\n\u3082\u3057\u305d\u3046\u3067\u306f\u306a\u3044\u306a\u3089\uff0c\u5b66\u3079\u308b\u5834\u6240\u304c\u3044\u304f\u3064\u304b\u3042\u308a\u307e\u3059\uff0e\n\u6700\u521d\u306b [Elixir guides](http://elixir-lang.org/getting_started/1.html) \u3092\u901a\u3057\u3066\u8aad\u3080\u3053\u3068\u3092\u304a\u3059\u3059\u3081\u3057\u307e\u3059\uff0e\n\u307e\u305f\uff0c[Resources Guide](http://www.phoenixframework.org/docs/resources) \u306b\u8a18\u8f09\u3055\u308c\u3066\u3044\u308b\u66f8\u7c4d\uff0c\u30d6\u30ed\u30b0\uff0c\u30d3\u30c7\u30aa\u306e\u3044\u305a\u308c\u304b\u306b\u76ee\u3092\u901a\u3059\u3068\u3088\u3044\u3067\u3057\u3087\u3046\uff0e\n\n>The aim of this introductory guide is to present a brief, high level overview of Phoenix, the parts that make it up, and the layers underneath that support it.\n\n\u3053\u306e\u5165\u9580\u30ac\u30a4\u30c9\u3067\u306f\uff0cPhoenix \u306e\u5927\u307e\u304b\u306a\u6982\u8981\u3068\uff0c\u305d\u308c\u3092\u69cb\u6210\u3059\u308b\u305f\u3081\u306e\u90e8\u54c1\uff0c\u968e\u5c64\u3092\u7c21\u6f54\u306b\u793a\u3057\u307e\u3059\uff0e\n\n#Phoenix\n\n>Phoenix is actually the top layer of a multi-layer system designed to be modular and flexible. The other layers are the Elixir middleware project, Plug, and the Erlang web server, Cowboy. Plug and Cowboy are covered in the next sections of this guide.\n\n\u5b9f\u969b\u306e\u3068\u3053\u308d Phoenix \u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u5316\u3068\u67d4\u8edf\u6027\u306e\u5411\u4e0a\u3092\u76ee\u7684\u306b\u30c7\u30b6\u30a4\u30f3\u3055\u308c\u305f\u8907\u6570\u306e\u968e\u5c64\u306e\u4e0a\u306b\u306a\u308a\u305f\u3063\u3066\u3044\u307e\u3059\uff0e\nPhoenix \u3068\u5225\u306e\u968e\u5c64\u3068\u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3042\u308b Plug\uff0cErlang \u306e\u30a6\u30a7\u30d6\u30b5\u30fc\u30d0\u30fc\u3067\u3042\u308b Cowboy \u3067\u3059\uff0e\nPlug \u3068 Cowboy \u306b\u3064\u3044\u3066\u306f\u3053\u306e\u30ac\u30a4\u30c9\u306e\u6b21\u306e\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u8aac\u660e\u3057\u307e\u3059\uff0e\n\n>Phoenix is made up of a number of distinct parts, each with its own purpose and role to play in building a web application. We will cover them all in depth throughout these guides, but here's a quick breakdown.\n\nPhoenix \u306f\uff0c\u500b\u3005\u306e\u76ee\u7684\u3092\u6301\u3063\u305f\u72ec\u7acb\u3057\u305f\u90e8\u54c1\u3067\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\uff0c\u305d\u308c\u305e\u308c\u304c web \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u69cb\u7bc9\u306e\u4e2d\u3067\u5f79\u5272\u3092\u306f\u305f\u3059\u3053\u3068\u3067\u7d44\u307f\u3042\u3052\u3089\u308c\u3066\u3044\u307e\u3059\uff0e\n\u305d\u308c\u305e\u308c\u306b\u3064\u3044\u3066\u306f\u5f8c\u307b\u3069\u3053\u306e\u30ac\u30a4\u30c9\u3067\u6398\u308a\u4e0b\u3052\u307e\u3059\u304c\uff0c\u3053\u3053\u3067\u306f\u7c21\u5358\u306b\u5206\u985e\u3057\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n>The Endpoint\n>\n*    handles all aspects of requests up until the beginning of our applications\n*    provides a core set of middleware to apply to all requests\n*    dispatches requests into designated routers\n\nThe Endpoint\n\n*    \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u958b\u59cb\u3059\u308b\u307e\u3067\u306b\uff0c\u5168\u3066\u306e\u30ea\u30af\u30a8\u30b9\u30c8\u306b\u304a\u3044\u3066\u8208\u5473\u306e\u3042\u308b\u90e8\u5206\u3092\u6271\u3044\u307e\u3059\n*    \u30ea\u30af\u30a8\u30b9\u30c8\u306b\u5fdc\u7b54\u3059\u308b\u305f\u3081\u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u4e2d\u5fc3\u7684\u306a\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3057\u307e\u3059\n*    \u6307\u5b9a\u3055\u308c\u305f\u30eb\u30fc\u30bf\u306b\u8981\u6c42\u3092\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u3057\u307e\u3059\n\n>The Router\n>\n*    parses incoming requests and dispatches to the correct controller/action, passing parameters as needed\n*    provides helpers to generate route paths or urls to resources\n\nThe Router\n\n*    \u6765\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u30d1\u30fc\u30b9\u3057\u3066\uff0c\u6b63\u3057\u3044\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc/\u30a2\u30af\u30b7\u30e7\u30f3\u3078\u3068\u9001\u308a\u307e\u3059\uff0e\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3082\u6e21\u3057\u307e\u3059\n*    \u30d1\u30b9\u3084 url \u3092\u30ea\u30bd\u30fc\u30b9\u3078\u3068\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u3059\u308b\u305f\u3081\u306e\u30d8\u30eb\u30d1\u30fc\u3092\u63d0\u4f9b\u3057\u307e\u3059\n\n>Pipelines\n>\n*    Allow easy segregation of middleware across different routes\n\nPipelines\n\n*    \u7570\u306a\u308b\u30eb\u30fc\u30c8\u3092\u6a2a\u65ad\u3059\u308b\uff0c\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u306e\u5bb9\u6613\u306a\u5206\u96e2\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\n\n>Controllers\n>\n*    provide functions, called actions, to handle requests\n*    Actions\n -        prepare data and pass it into views\n -        invoke rendering via views\n -        perform redirects\n\nControllers\n\n*    \u30ea\u30af\u30a8\u30b9\u30c8\u3092\u6271\u3046\u305f\u3081\u306b\u30a2\u30af\u30b7\u30e7\u30f3\u304b\u3089\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u307e\u3059\n*    Actions\n -        \u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066 View \u306b\u6e21\u3057\u307e\u3059\n -        view \u3092\u901a\u3057\u3066\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n -        \u30ea\u30c0\u30a4\u30ec\u30af\u30c8\u3092\u5b9f\u884c\u3057\u307e\u3059\n\n>Views\n>\n*    render templates\n*    act as a presentation layer\n*    define helper functions, available in templates, to decorate raw data\n\nViews\n\n*    \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3057\u307e\u3059\n*    \u30d7\u30ec\u30bc\u30f3\u30c6\u30fc\u30b7\u30e7\u30f3\u5c64\u3068\u3057\u3066\u4f5c\u7528\u3057\u307e\u3059\n*    \u751f\u306e\u30c7\u30fc\u30bf\u3092\u898b\u3084\u3059\u304f\u3059\u308b\u305f\u3081\uff0c\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u5185\u3067\u4f7f\u3048\u308b\u30d8\u30eb\u30d1\u30fc\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u307e\u3059\n\n>Templates\n>\n*    are what they sound like :)\n*    Precompiled & fast\n\nTemplates\n\n*    \u540d\u306f\u4f53\u3092\u8868\u3057\u307e\u3059 :)\n*    \u4e8b\u524d\u30b3\u30f3\u30d1\u30a4\u30eb\uff06\u9ad8\u901f\n\n>Channels\n>\n*    manage sockets for easy realtime communication\n*    analogous to controllers except that they allow bi-directional communication with persistent connections\n\nChannels\n\n*    \u5bb9\u6613\u306a\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u901a\u4fe1\u306e\u305f\u3081\u306e socket \u3092\u7ba1\u7406\u3057\u307e\u3059\n*    \u53cc\u65b9\u5411\u901a\u4fe1\u304c\u3067\u304d\u3066\uff0c\u305a\u3063\u3068\u7e4b\u3063\u3066\u3044\u308b\uff0e\u3068\u3044\u3046\u3053\u3068\u3092\u9664\u3051\u3070\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3068\u4f3c\u3066\u3044\u307e\u3059\n\n>PubSub\n>\n*    Underlies the channel layer and allows topics to be subscribed to\n*    Abstracts the underlying pubsub adapter for third-party pubsub integration\n\nPubSub\n\n*    \u30c1\u30e3\u30cd\u30eb\u5c64\u306e\u4e0b\u306b\u3042\u308a\uff0c\u30c8\u30d4\u30c3\u30af\u304c\u8cfc\u8aad\u3055\u308c\u308b\u3053\u3068\u3092\u53ef\u80fd\u306b\u3057\u307e\u3059\n*    \u30b5\u30fc\u30c9\u30d1\u30fc\u30c6\u30a3 pubsub \u7d71\u5408\u306e\u305f\u3081\u306b\u57fa\u790e\u3068\u306a\u308b pubsub \u30a2\u30c0\u30d7\u30bf\u3092\u62bd\u8c61\u5316\u3057\u307e\u3059\n\n#Plug\n\n>Plug is Elixir's web middleware layer. Conceptually, it shares a lot with other middleware layers like Rack for Ruby or WSGI for Python. Plugs are reusable modules that share the same very small, very regular public api. They provide discrete behaviors - like request header parsing or logging. Because the Plug api is so consistent, they can be stacked and executed in a set order, like a pipeline. They can also be re-used within a project or across projects.\n\n[Plug](http://hexdocs.pm/plug/) \u306f Elixir \u306e\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u5c64\u3067\u3059\uff0e\u6982\u5ff5\u3068\u3057\u3066\u306f\uff0cRuby \u306e Rack\uff0cPython \u306e WSGI \u306e\u3088\u3046\u306a\u30df\u30c9\u30eb\u30a6\u30a7\u30a2\u3068\u5171\u901a\u3057\u3066\u3044\u307e\u3059\uff0e\nPlugs \u306f\u3068\u3066\u3082\u5c0f\u3055\u304f\uff0c\u3068\u3066\u3082\u4e00\u822c\u7684\u306a\u516c\u958bAPI\u3092\u3082\u3063\u305f\u518d\u5229\u7528\u53ef\u80fd\u306a\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059\uff0e\n\u305d\u308c\u3089\u306f\u63a7\u3048\u3081\u306a\u632f\u821e\u3044\u3092\u63d0\u4f9b\u3057\u307e\u3059 - \u4f8b\u3048\u3070\u30ea\u30af\u30a8\u30b9\u30c8\u30d8\u30c3\u30c0\u30fc\u3092\u30d1\u30fc\u30b9\u3057\u305f\u308a\uff0c\u30ed\u30b0\u3092\u53d6\u308b\u3068\u3044\u3063\u305f\u3053\u3068\u3067\u3059\uff0e\n\u3067\u3059\u304b\u3089\uff0cPlug \u306e API \u306f\u3068\u3066\u3082\u5b89\u5b9a\u3057\u3066\u3044\u307e\u3059\uff0e\u305d\u308c\u3089\u306f\u30b9\u30bf\u30c3\u30af\u306b\u7a4d\u307f\u4e0a\u3052\u3089\u308c\uff0c\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306e\u3088\u3046\u306b\u9806\u756a\u306b\u5b9f\u884c\u3055\u308c\u307e\u3059\uff0e\n\u305d\u308c\u3089\u306f\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5185\u3084\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u307e\u305f\u304c\u3063\u3066\u518d\u5229\u7528\u3067\u304d\u307e\u3059\uff0e\n\n>Plugs can be written to handle almost anything, from authentication to parameter pre-processing, and even rendering.\n\nPlugs \u306f\u8a8d\u8a3c\uff0c\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u524d\u51e6\u7406\uff0c\u30ec\u30f3\u30c0\u30ea\u30f3\u30b0\u3067\u3055\u3048\u3082\uff0c\u307b\u3068\u3093\u3069\u5168\u3066\u306e\u3053\u3068\u3092\u6271\u3048\u308b\u3088\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\uff0e\n\n>Phoenix takes great advantage of Plug in general - the router and controllers especially so.\n\nPhoenix \u306f Plug \u306b\u5099\u308f\u3063\u3066\u3044\u308b\u305d\u306e\u3059\u3070\u3089\u3057\u3044\u5229\u70b9\u3092\u5f97\u3066\u3044\u307e\u3059 - router \u3068 controllers \u3067\u306f\u7279\u306b\u305d\u3046\u3067\u3059\uff0e\n\n>One of the most important things about Plug, is that it provides adapters to HTTP servers which will ultimately deliver application content to your users. Currently, Plug only provides an adapter to Cowboy, which we will talk about next, but there are plans to provide adapters for other servers in the future.\n\nPlug \u3067\u6700\u3082\u5927\u4e8b\u306a\u3053\u3068\u306e\u4e00\u3064\u306b\uff0c\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u6700\u7d42\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u3078\u3068\u5c4a\u3051\u308b\u305f\u3081\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u3042\u308a\u307e\u3059\uff0e\n\u73fe\u5728\uff0cPlug \u306f Cowboy \u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u306e\u307f\u3092\u63d0\u4f9b\u3057\u3066\u3044\u307e\u3059\uff0e\u4eca\u5f8c\u3078\u306e\u8a71\u3092\u3059\u308b\u3068\uff0c\u4ed6\u306e\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u30a2\u30c0\u30d7\u30bf\u30fc\u3092\u63d0\u4f9b\u3059\u308b\u4e88\u5b9a\u304c\u3042\u308a\u307e\u3059\uff0e\n\n>Links to more in-depth information on Plug can be found in the Resources Guide.\n\nPlug \u306e\u3082\u3063\u3068\u8a73\u3057\u3044\u60c5\u5831\u3078\u306e\u30ea\u30f3\u30af\u306f [Resources Guide](http://www.phoenixframework.org/docs/resources) \u306b\u3042\u308a\u307e\u3059\uff0e\n\n#Cowboy\n\n>Cowboy is an HTTP server written in Erlang by Lo\u00efc Hoguin of 99s. Cowboy is built in a modular way on top of Ranch, Bullet, and Sheriff. This is how 99s describes them.\n\nCowboy \u306f [99s](http://ninenines.eu/) \u306e Lo\u00efc Hoguin \u306b\u3088\u3063\u3066 Erlang \u3067\u66f8\u304b\u308c\u3066 HTTP \u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\nCowboy \u306f \u7d44\u7acb\u5f0f\u3067 Ranch, Bullet, Sheriff \u3068\u3044\u3063\u305f\u3082\u306e\u306e\u4e0a\u306b\u69cb\u7bc9\u3055\u308c\u3066\u3044\u307e\u3059\uff0e\n\u4ee5\u4e0b\u306f 99s \u304c\u66f8\u3044\u305f\u305d\u308c\u305e\u308c\u306e\u7279\u5fb4\u3067\u3059\uff0e\n\n>\n*    Cowboy is a small, fast, modular HTTP server supporting Websockets, SPDY and more.\n*    Ranch is a socket acceptor pool for TCP protocols. It is also a standalone library for building networked applications.\n*    Bullet is a simple, reliable, efficient streaming library.\n*    Sheriff uses parse transforms for type based validation. Sheriff also validates data dynamically using Erlang's type system with no extra code required.\n\n*    Cowboy \u306f\u5c0f\u3055\u304f\uff0c\u901f\u304f\uff0c\u7d44\u7acb\u5f0f\u306e HTTP \u30b5\u30fc\u30d0\u30fc\u3067 Websockets \u3084 SPDY \u306a\u3069\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u307e\u3059\uff0e\n*    Ranch \u306f TCP \u30d7\u30ed\u30c8\u30b3\u30eb\u306e\u305f\u3081\u306e\u30bd\u30b1\u30c3\u30c8\u53d7\u3051\u5165\u308c\u30d7\u30fc\u30eb\u3067\u3059\uff0e\u3053\u308c\u306f\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u7bc9\u3059\u308b\u305f\u3081\u306e\u72ec\u7acb\u3057\u305f\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3082\u306a\u3063\u3066\u3044\u307e\u3059\uff0e\n*    Bullet \u306f\u7c21\u6f54\u3067\uff0c\u4fe1\u983c\u6027\u306e\u9ad8\u3044\uff0c\u52b9\u679c\u7684\u306a\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\n*    Sheriff \u306f\u578b\u30d9\u30fc\u30b9\u306e\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u306e\u305f\u3081\u306b parse transform \u3092\u4f7f\u3044\u307e\u3059\uff0eSheriff \u306f\u5916\u90e8\u306e\u8ffd\u52a0\u30b3\u30fc\u30c9\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b Erlang \u306e\u578b\u30b7\u30b9\u30c6\u30e0\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u3092\u30d0\u30ea\u30c7\u30fc\u30b7\u30e7\u30f3\u3057\u307e\u3059\uff0e\n\n>Cowboy has fantastic documentation. The Guides are especially helpful. Learning more about Cowboy will surely help you to understand Phoenix more fully.\n\nCowboy \u306b\u306f\u7d20\u6674\u3057\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u304c\u3042\u308a\u307e\u3059\uff0e\u7279\u306b [Guides](http://ninenines.eu/docs/en/cowboy/HEAD/guide/) \u304c\u305f\u3081\u306b\u306a\u308a\u307e\u3059\uff0e\nCowboy \u306b\u3064\u3044\u3066\u5b66\u3076\u3053\u3068\u306f\u304d\u3063\u3068 Phoenix \u3092\u3082\u3063\u3068\u77e5\u308b\u305f\u3081\u306e\u52a9\u3051\u306b\u306a\u308b\u3067\u3057\u3087\u3046\uff0e\n\n>Cowboy has its own section of links in the Resources Guide.\n\n[Resources Guide](http://www.phoenixframework.org/docs/resources) \u306e\u4e2d\u306b Cowboy \u3078\u306e\u30ea\u30f3\u30af\u304c\u3042\u308a\u307e\u3059\uff0e\n\n#System Dependencies\n\n>There are a number of dependencies external to Phoenix which we will encounter as we work our way through these guides. Elixir and Erlang are hard dependencies, meaning that we won't be able to work with Phoenix at all unless we have them installed. The rest may not prevent us from getting started if we don't have them, but their absence may lead to errors that prevent us from moving forward. Simply installing these dependencies may save us from confusion and frustration later on.\n\n\u3053\u306e\u30ac\u30a4\u30c9\u3092\u901a\u3057\u3066\uff0c\u3044\u304f\u3064\u304b\u306e Phoenix \u5916\u90e8\u3078\u306e\u4f9d\u5b58\u95a2\u4fc2\u304c\u51fa\u3066\u304d\u307e\u3059\uff0e Elixir \u3068 Erlang \u306b\u306f\u5f37\u304f\u4f9d\u5b58\u3057\u307e\u3059\uff0c\u3059\u306a\u308f\u3061\u3053\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u306a\u3044\u304b\u304e\u308a Phoenix \u3067\u4f5c\u696d\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\uff0e\u6b8b\u308a\u306e\u3082\u306e\u306f\uff0c\u7121\u304f\u3066\u3082\u59cb\u3081\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u3059\u304c\uff0c\u30a8\u30e9\u30fc\u3092\u5f15\u304d\u8d77\u3053\u3057\u524d\u306b\u9032\u3081\u306a\u304f\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\uff0e\u3053\u308c\u3089\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u304a\u3051\u3070\uff0c\u306e\u3061\u306e\u6df7\u4e71\u3068\u4e0d\u6e80\u304b\u3089\u89e3\u653e\u3055\u308c\u307e\u3059\uff0e\n\n>Let's take a look at each of them now.\n>\n*    Elixir\n>Phoenix is written in Elixir, and our application code will also be written in Elixir. In order to do any work with Phoenix, we need Elixir installed on our system. The Elixir site itself has great installation instructions.\n>\n*    Erlang\n>Elixir source code compiles to Erlang byte code which runs on the Erlang Virtual Machine. That means we must have Erlang installed on our system - in addition to Elixir - in order to work with Phoenix. The Elixir site also has Erlang installation instructions.\n>\n*    node.js (>= 0.12.0)\n>Node is an optional dependency. Phoenix will use brunch.io to compile static assets (javascript, css, etc), by default. Brunch.io uses the node package manager (npm) to install its dependencies, and npm requires node.js.\n    If we don't have any static assets, or we want to use another build tool, we can pass the --no-brunch flag when creating a new application and node won't be required at all.\n>\n*    PostgreSQL\n>PostgreSQL is a relational database server. Phoenix configures applications to use it by default, but we can switch to MySQL by passing the --database mysql flag when creating a new application.\n    When we work with Ecto models in these guides, we will use PostgreSQL and the Postgrex adapter for it. In order to follow along with the examples, we will need to install PostgreSQL on our system. The PostgreSQL wiki has installation guides for a number of different systems.\n>\n*    inotify-tools\n>This is a Linux-only filesystem watcher that Phoenix uses for live code reloading. (Mac OS X or Windows users can safely ignore it.)\n    Linux users need to install this dependency. Please consult the inotify-tools wiki for distribution-specific installation instructions.\n\n\u305d\u308c\u3067\u306f\uff0c\u305d\u308c\u305e\u308c\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\uff0e\n\n*    Elixir\n\nPhoenix \u306f Elixir \u3067\u66f8\u304b\u308c\u3066\u304a\u308a\uff0c\u79c1\u305f\u3061\u306e\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30b3\u30fc\u30c9\u3082 Elixir \u3067\u66f8\u304d\u307e\u3059\uff0e Phoenix \u3067\u306e\u3059\u3079\u3066\u306e\u4f5c\u696d\u3092\u884c\u3046\u305f\u3081\u306b\uff0c Elixir \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Elixir \u306e\u30b5\u30a4\u30c8\u81ea\u4f53\u306b\u3059\u3070\u3089\u3057\u3044[\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806](http://elixir-lang.org/install.html)\u304c\u3042\u308a\u307e\u3059\uff0e\n\n*    Erlang\n\nElixir \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f Erlang \u306e\u4eee\u60f3\u30de\u30b7\u30f3\u4e0a\u3067\u52d5\u4f5c\u3059\u308b Erlang \u306e\u30d0\u30a4\u30c8\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u307e\u3059\uff0e\u305d\u306e\u305f\u3081 Phoenix \u3092\u4f7f\u7528\u3059\u308b\u306b\u306f\uff0c Elixir \u306b\u52a0\u3048\u3066\uff0c Erlang \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e Elixir \u306e\u30b5\u30a4\u30c8\u306b\u306f\uff0c[Erlang\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806](http://elixir-lang.org/install.html#installing-erlang)\u3082\u3042\u308a\u307e\u3059\uff0e\n\n*    node.js (>= 0.12.0)\n\nNode \u306f\uff0c\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u4f9d\u5b58\u95a2\u4fc2\u3067\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Phoenix \u306f\uff0c\u9759\u7684\u306a\u30a2\u30bb\u30c3\u30c8\uff08javascript \u3084 css \u306a\u3069\uff09\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u306b brunch.io \u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e Brunch.io \u306f\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b node package manager (npm) \u3092\u4f7f\u7528\u3057\uff0c npm \u306f node.js \u3092\u5fc5\u8981\u3068\u3057\u307e\u3059\uff0e\n    \u9759\u7684\u30a2\u30bb\u30c3\u30c8\u3092\u6301\u305f\u306a\u3044\u304b\uff0c\u4ed6\u306e\u30d3\u30eb\u30c9\u30c4\u30fc\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\u306b\u306f\uff0c\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u6642\u306b `--no-brunch` \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308c\u3070\uff0c Node \u306f\u5168\u304f\u5fc5\u8981\u306a\u304f\u306a\u308a\u307e\u3059\uff0e\n\n*    PostgreSQL\n\nPostgreSQL \u306f\u30ea\u30ec\u30fc\u30b7\u30e7\u30ca\u30eb\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u30b5\u30fc\u30d0\u30fc\u3067\u3059\uff0e\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f Phoenix \u306f\uff0cPostgreSQL \u3092\u4f7f\u7528\u3059\u308b\u3088\u3046\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u69cb\u6210\u3057\u307e\u3059\u304c\uff0c\u65b0\u898f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u4f5c\u6210\u6642\u306b `--database mysql` \u30d5\u30e9\u30b0\u3092\u4f7f\u7528\u3059\u308c\u3070\uff0c MySQL \u306b\u5207\u308a\u66ff\u3048\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\uff0e\n    \u3053\u306e\u30ac\u30a4\u30c9\u3067 Ecto \u30e2\u30c7\u30eb\u3092\u4f7f\u7528\u3059\u308b\u5834\u5408\uff0c PostgreSQL \u3068 Postgrex \u30a2\u30c0\u30d7\u30bf\u3092\u4f7f\u7528\u3057\u307e\u3059\uff0e\u30ac\u30a4\u30c9\u306e\u4f8b\u306b\u5f93\u3046\u305f\u3081\u306b\u306f\uff0c Postgres \u3092\u30b7\u30b9\u30c6\u30e0\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e PostgreSQL \u306e wiki \u306b\u306f\u3055\u307e\u3056\u307e\u306a\u30b7\u30b9\u30c6\u30e0\u3078\u306e[\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30ac\u30a4\u30c9](https://wiki.postgresql.org/wiki/Detailed_installation_guides)\u304c\u3042\u308a\u307e\u3059\uff0e\n\n*    inotify-tools\n\nPhoenix \u304c\u30e9\u30a4\u30d6\u30b3\u30fc\u30c9\u518d\u30ed\u30fc\u30c9\u306b\u4f7f\u7528\u3059\u308b\uff0c Linux \u5c02\u7528\u306e\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u30a6\u30a9\u30c3\u30c1\u30e3\u30fc\u3067\u3059\uff0e(Mac OS X \u3068 Windows \u30e6\u30fc\u30b6\u30fc\u306f\u5b89\u5168\u306b\u305d\u308c\u3092\u7121\u8996\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\uff0e)\n    Linux \u30e6\u30fc\u30b6\u30fc\u306f\u3053\u306e\u4f9d\u5b58\u95a2\u4fc2\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\uff0e\u30c7\u30a3\u30b9\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u56fa\u6709\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u306b\u3064\u3044\u3066\u306f[inotify-tools wiki](https://github.com/rvoicilas/inotify-tools/wiki)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\uff0e\n"}