{"context": " More than 1 year has passed since last update.AWS \u306e Elastic Beanstalk\u3067 playframework \u3092 Docker \u3092\u4f7f\u7528\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u8272\u3005\u5f04\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n \u624b\u9806\ndocker \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbuild.sbt\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u8a18\u8f09(dockerhub\u306b\u30a4\u30e1\u30fc\u30b8\u3092push\u3057\u307e\u3059)\ndocker terminal \u8d77\u52d5\n./activator docker:publish \u5b9f\u884c\nDockerrun.aws.json \u4f5c\u6210\nDockerrun.aws.json \u3092\u6307\u5b9a\u3057\u3066\u30c7\u30d7\u30ed\u30a4\n\n \u8a2d\u5b9a (sbt-native-packager \u3092\u4f7f\u3063\u3066Docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210)\nhttp://www.scala-sbt.org/sbt-native-packager/formats/docker.html\n\nplugin.sbt\naddSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.0.6\")\n\n\n\nbuild.sbt\nimport com.typesafe.config.ConfigFactory\nimport com.typesafe.sbt.packager.docker._\nimport play.sbt.PlayImport.PlayKeys.playRunHooks\n\nname := \"\"\"XXXX\"\"\"\n\nversion := \"1.0-SNAPSHOT\"\n\nlazy val root = (project in file(\".\"))\n  .enablePlugins(PlayScala, JavaAppPackaging, DockerPlugin)\n\n/* === \u7701\u7565 === */\n\nmappings in Docker += {\n  // twitter4j \u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e twitter4j.properties \u3092\u5165\u308c\u308b\n  val twitter4j = (baseDirectory in Compile).value / \"twitter4j.properties\"\n  twitter4j -> \"opt/docker/twitter4j.properties\"\n}\n\n\n\n \u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\nDocker\u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210: activator docker:publishLocal\nDocker\u5b9f\u884c: docker run -it -p 80:9000 <name>:<version>\ndocker\u306eIP\u306bhttp://xxx\u3067\u7e4b\u3044\u3067\u3084\u308b\u3068\u3001\u304d\u3061\u3093\u3068\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n Windows\u3067\u306eDocker\u306e\u7f60\nhttp://qiita.com/chiepomme/items/79be03c5d04937701c3d\n\u4e0a\u8a18\u8a18\u4e8b\u306b\u5f93\u3063\u3066\u8a2d\u5b9a\u3057\u3066\u3084\u3089\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\n\n \u53c2\u8003\nhttp://qiita.com/yuukigoodman/items/ed88de93bee0bc775ff0\n\n \u306a\u305c\u304bDockerHub\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u843d\u3068\u305b\u306a\u3044\u4e8b\u8c61\nS3\u306bdockerhub\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306econfig.json\u3092\u7f6e\u3044\u3066\u8aad\u307f\u3053\u3080\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304b\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\nelastick beanstalk\u306eEC2\u306bssh\u3067\u5165\u3063\u3066 sudo docker login \u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u3066\u304b\u3089\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3089\u884c\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093(\u00b4\u30fb\u03c9\u30fb`)\n\n Dockerrun.aws.json\nContainerPort\u306bplay\u8d77\u52d5\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30fc\u30c8\u3067\u3042\u308b9000\u756a\u3092\u6307\u5b9a\u3057\u3066\u3084\u308b\u3053\u3068\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n{\n    \"AWSEBDockerrunVersion\": \"1\",\n    \"Authentication\": {\n        \"Bucket\": \"<s3bucket name>\",\n        \"Key\": \"<key>\"\n    },\n    \"Image\" : {\n        \"Name\" : \"docker.io/<username>/<app name>:<tag>\",\n        \"Update\": \"true\"\n    },\n    \"Ports\" : [{ \"ContainerPort\": \"9000\" }]\n}\n\n\n \u672c\u756a\u7528config\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nconf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306bapplication.product.conf\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u305d\u3061\u3089\u306b\u672c\u756a\u7528\u306e\u8a2d\u5b9a\u3092\u5165\u308c\u307e\u3059\u3002\ninclude \"application.conf\"\nplay.crypto.secret=\"XXXXXXXXXXX\"\n\n\u3068\u308a\u3042\u3048\u305a\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3060\u3051\u3060\u3057\u3001\u3068\u3044\u3063\u3066\nplay.crypto.secret = \"changeme\"\n\u306e\u307e\u307e\u306b\u3057\u3066\u3044\u308b\u3068\u8a2d\u5b9a\u3057\u308d\u3068\u6012\u3089\u308c\u308b\u306e\u3067\u304d\u3061\u3093\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n \u6700\u5f8c\u306b\n\u3068\u3053\u308d\u3069\u3053\u308d\u7701\u7565\u3057\u3066\u307e\u3059\u304cbuild.sbt\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\nbuild.sbt\nimport com.typesafe.config.ConfigFactory\nimport com.typesafe.sbt.packager.docker._\nimport play.sbt.PlayImport.PlayKeys.playRunHooks\n\nname := \"\"\"<application name>\"\"\"\n\nversion := \"1.0-SNAPSHOT\"\n\nlazy val root = (project in file(\".\"))\n  .enablePlugins(PlayScala, JavaAppPackaging, DockerPlugin)\n  .settings(\n  slick <<= slickCodeGenTask\n)\n\n/** \u7701\u7565 */\n\nscalaVersion := \"2.11.6\"\n\nlibraryDependencies ++= Seq(\n  /** \u7701\u7565 */\n)\n\nresolvers += \"scalaz-bintray\" at \"http://dl.bintray.com/scalaz/releases\"\n\n// Play provides two styles of routers, one expects its actions to be injected, the\n// other, legacy style, accesses its actions statically.\nroutesGenerator := InjectedRoutesGenerator\n\n//LessKeys.compress in Assets := true\n\nincludeFilter in (Assets, LessKeys.less) := \"*.less\"\n\nexcludeFilter in (Assets, LessKeys.less) := \"_*.less\"\n\nplayRunHooks <+= baseDirectory.map(base => GulpRunner(base))\n\nmappings in Docker += {\n  val twitter4j = (baseDirectory in Compile).value / \"twitter4j.properties\"\n  twitter4j -> \"opt/docker/twitter4j.properties\"\n}\n\ndockerRepository := Some(\"<username>\")\n\ndockerEntrypoint := Seq(\"bin/<application name>\")\n\ndockerCommands ++= Seq(ExecCmd(\"CMD\", \"-Dconfig.resource=application.product.conf\"))\n\n\nAWS \u306e Elastic Beanstalk\u3067 playframework \u3092 Docker \u3092\u4f7f\u7528\u3057\u3066\u52d5\u4f5c\u3055\u305b\u308b\u305f\u3081\u306b\u8272\u3005\u5f04\u3063\u305f\u306e\u3067\u30e1\u30e2\u3002\n\n# <i class=\"fa fa-cogs\"></i> \u624b\u9806\ndocker \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nbuild.sbt\u306b\u30ea\u30dd\u30b8\u30c8\u30ea\u60c5\u5831\u3092\u8a18\u8f09(dockerhub\u306b\u30a4\u30e1\u30fc\u30b8\u3092push\u3057\u307e\u3059)\ndocker terminal \u8d77\u52d5\n./activator docker:publish \u5b9f\u884c\nDockerrun.aws.json \u4f5c\u6210\nDockerrun.aws.json \u3092\u6307\u5b9a\u3057\u3066\u30c7\u30d7\u30ed\u30a4\n\n\n# <i class=\"fa fa-cogs\"></i> \u8a2d\u5b9a (sbt-native-packager \u3092\u4f7f\u3063\u3066Docker\u30a4\u30e1\u30fc\u30b8\u4f5c\u6210)\n\nhttp://www.scala-sbt.org/sbt-native-packager/formats/docker.html\n\n```scala:plugin.sbt\naddSbtPlugin(\"com.typesafe.sbt\" % \"sbt-native-packager\" % \"1.0.6\")\n```\n\n```scala:build.sbt\nimport com.typesafe.config.ConfigFactory\nimport com.typesafe.sbt.packager.docker._\nimport play.sbt.PlayImport.PlayKeys.playRunHooks\n\nname := \"\"\"XXXX\"\"\"\n\nversion := \"1.0-SNAPSHOT\"\n\nlazy val root = (project in file(\".\"))\n  .enablePlugins(PlayScala, JavaAppPackaging, DockerPlugin)\n\n/* === \u7701\u7565 === */\n\nmappings in Docker += {\n  // twitter4j \u3092\u4f7f\u7528\u3059\u308b\u305f\u3081\u306e twitter4j.properties \u3092\u5165\u308c\u308b\n  val twitter4j = (baseDirectory in Compile).value / \"twitter4j.properties\"\n  twitter4j -> \"opt/docker/twitter4j.properties\"\n}\n```\n\n# <i class=\"fa fa-cogs\"></i> \u30ed\u30fc\u30ab\u30eb\u5b9f\u884c\nDocker\u30a4\u30e1\u30fc\u30b8\u306e\u4f5c\u6210: `activator docker:publishLocal`\nDocker\u5b9f\u884c: `docker run -it -p 80:9000 <name>:<version>`\n\ndocker\u306eIP\u306bhttp://xxx\u3067\u7e4b\u3044\u3067\u3084\u308b\u3068\u3001\u304d\u3061\u3093\u3068\u52d5\u4f5c\u3057\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002\n\n# <i class=\"fa fa-cogs\"></i> Windows\u3067\u306eDocker\u306e\u7f60\nhttp://qiita.com/chiepomme/items/79be03c5d04937701c3d\n\u4e0a\u8a18\u8a18\u4e8b\u306b\u5f93\u3063\u3066\u8a2d\u5b9a\u3057\u3066\u3084\u3089\u306a\u3044\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u3002\n\n# <i class=\"fa fa-cogs\"></i> \u53c2\u8003\nhttp://qiita.com/yuukigoodman/items/ed88de93bee0bc775ff0\n\n# <i class=\"fa fa-cogs\"></i> \u306a\u305c\u304bDockerHub\u304b\u3089\u30a4\u30e1\u30fc\u30b8\u3092\u843d\u3068\u305b\u306a\u3044\u4e8b\u8c61\nS3\u306bdockerhub\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306econfig.json\u3092\u7f6e\u3044\u3066\u8aad\u307f\u3053\u3080\u3088\u3046\u306b\u3057\u305f\u306e\u3067\u3059\u304c\u3001\u4f55\u6545\u304b\u3046\u307e\u304f\u884c\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u304c\u3001\nelastick beanstalk\u306eEC2\u306bssh\u3067\u5165\u3063\u3066 `sudo docker login` \u30b3\u30de\u30f3\u30c9\u3092\u53e9\u3044\u3066\u304b\u3089\u30c7\u30d7\u30ed\u30a4\u3057\u305f\u3089\u884c\u3051\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\u3088\u304f\u308f\u304b\u308a\u307e\u305b\u3093(\u00b4\u30fb\u03c9\u30fb`)\n\n# <i class=\"fa fa-cogs\"></i> Dockerrun.aws.json\nContainerPort\u306bplay\u8d77\u52d5\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u30dd\u30fc\u30c8\u3067\u3042\u308b9000\u756a\u3092\u6307\u5b9a\u3057\u3066\u3084\u308b\u3053\u3068\u3067\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3057\u305f\u3002\n\n```json\n\n{\n    \"AWSEBDockerrunVersion\": \"1\",\n    \"Authentication\": {\n        \"Bucket\": \"<s3bucket name>\",\n        \"Key\": \"<key>\"\n    },\n    \"Image\" : {\n        \"Name\" : \"docker.io/<username>/<app name>:<tag>\",\n        \"Update\": \"true\"\n    },\n    \"Ports\" : [{ \"ContainerPort\": \"9000\" }]\n}\n```\n\n# <i class=\"fa fa-cogs\"></i> \u672c\u756a\u7528config\u30d5\u30a1\u30a4\u30eb\u8aad\u307f\u8fbc\u307f\nconf\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u914d\u4e0b\u306bapplication.product.conf\u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3057\u3066\u305d\u3061\u3089\u306b\u672c\u756a\u7528\u306e\u8a2d\u5b9a\u3092\u5165\u308c\u307e\u3059\u3002\n\n```\ninclude \"application.conf\"\nplay.crypto.secret=\"XXXXXXXXXXX\"\n```\n\n\u3068\u308a\u3042\u3048\u305a\u30c6\u30b9\u30c8\u3057\u305f\u3044\u3060\u3051\u3060\u3057\u3001\u3068\u3044\u3063\u3066\nplay.crypto.secret = \"changeme\"\n\u306e\u307e\u307e\u306b\u3057\u3066\u3044\u308b\u3068\u8a2d\u5b9a\u3057\u308d\u3068\u6012\u3089\u308c\u308b\u306e\u3067\u304d\u3061\u3093\u3068\u8a2d\u5b9a\u3057\u307e\u3057\u3087\u3046\u3002\n\n# <i class=\"fa fa-cogs\"></i> \u6700\u5f8c\u306b\n\u3068\u3053\u308d\u3069\u3053\u308d\u7701\u7565\u3057\u3066\u307e\u3059\u304cbuild.sbt\u3092\u8a18\u8f09\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```build.sbt\nimport com.typesafe.config.ConfigFactory\nimport com.typesafe.sbt.packager.docker._\nimport play.sbt.PlayImport.PlayKeys.playRunHooks\n\nname := \"\"\"<application name>\"\"\"\n\nversion := \"1.0-SNAPSHOT\"\n\nlazy val root = (project in file(\".\"))\n  .enablePlugins(PlayScala, JavaAppPackaging, DockerPlugin)\n  .settings(\n  slick <<= slickCodeGenTask\n)\n\n/** \u7701\u7565 */\n\nscalaVersion := \"2.11.6\"\n\nlibraryDependencies ++= Seq(\n  /** \u7701\u7565 */\n)\n\nresolvers += \"scalaz-bintray\" at \"http://dl.bintray.com/scalaz/releases\"\n\n// Play provides two styles of routers, one expects its actions to be injected, the\n// other, legacy style, accesses its actions statically.\nroutesGenerator := InjectedRoutesGenerator\n\n//LessKeys.compress in Assets := true\n\nincludeFilter in (Assets, LessKeys.less) := \"*.less\"\n\nexcludeFilter in (Assets, LessKeys.less) := \"_*.less\"\n\nplayRunHooks <+= baseDirectory.map(base => GulpRunner(base))\n\nmappings in Docker += {\n  val twitter4j = (baseDirectory in Compile).value / \"twitter4j.properties\"\n  twitter4j -> \"opt/docker/twitter4j.properties\"\n}\n\ndockerRepository := Some(\"<username>\")\n\ndockerEntrypoint := Seq(\"bin/<application name>\")\n\ndockerCommands ++= Seq(ExecCmd(\"CMD\", \"-Dconfig.resource=application.product.conf\"))\n```\n", "tags": ["docker", "PlayFramework", "Twitter4J"]}