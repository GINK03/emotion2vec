{"tags": ["Python", "\u518d\u5e30", "\u518d\u5e30\u95a2\u6570", "\u6570\u5b66", "math"], "context": "\n\n1. \u95a2\u6570 \u3092 \u5f15\u6570 \u306b \u53d7\u3051\u53d6\u308b \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3092 \u5b9a\u7fa9\n\n\npython\ndef repeat_func(num, func, result_list):\n    if num >= 1:\n            result_list.append(func(num))\n            return repeat_func(num-1, func, result_list)\n    else:\n            pass\n\n\n\n\n2. \u6b21\u306b\u3001\u6570\u5024 n \u3092 \u5f15\u6570\u306b\u3068\u308a\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u7b2cn\u9805\u76ee \u3092 \u8fd4\u3059\u518d\u5e30\u95a2\u6570 \u3092 \u5b9a\u7fa9\n\n\n\u3010 \u53c2\u8003 \u3011Python \u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u672b\u5c3e\u518d\u5e30\u3067\u6c42\u3081\u308b\n\n\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\u3066\u5b9f\u884c\u901f\u5ea6\u3092\u901f\u3081\u308b\u305f\u3081\u3001\u300c\u672b\u5c3e\u518d\u5e30\u300d\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\n\npython\ndef fibonacci(n, a=1, b=0):\n     return b if n < 1 else fibonacci(n - 1, a + b, a)\n\n\n\n\uff08 \u5b9f\u884c \uff09\n\n\npython\nfibonacci(0, a=1, b=0)\nfibonacci(1, a=1, b=0)\nfibonacci(2, a=1, b=0)\nfibonacci(3, a=1, b=0)\nfibonacci(4, a=1, b=0)\nfibonacci(5, a=1, b=0)\n\nfibonacci(10, a=1, b=0)\n\nfibonacci(20, a=1, b=0)\n\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\n\n\npython\n0\n1\n1\n2\n3\n5\n\n55\n6765\n\n\n\n\n3. \u95a2\u6570 fibonacci() \u3092 \u5f15\u6570 \u306b \u6e21\u3057\u3066\u3001\u9ad8\u968e\u95a2\u6570 repeat_func() \u3092 \u5b9f\u884c\n\n\npython\nsequence_list = []\nrepeat_func(101, fibonacci, sequence_list)\n\nprint(sequence_list)\n\nsequence_list.reverse()\nprint(sequence_list)\n\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\n\n\nfibonacci\u6570\u5217\u304c\u5f97\u3089\u308c\u305f\uff08\u4f46\u3057\u3001\u672b\u9805\u304b\u3089\u521d\u9805\u306e\u9806\u756a\uff09\n\n( \u5f97\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u3001reverse()\u95a2\u6570\u3067\u9006\u9806\u306b\u4e26\u3073\u66ff\u3048\u3066\u304b\u3089print()\u3059\u308b\u3068\u3001\u6c42\u3081\u308b\u6570\u5217\u304c\u5f97\u3089\u308c\u308b )\n\npython\n[573147844013817084101, 354224848179261915075, 218922995834555169026, 135301852344706746049, 83621143489848422977, 51680708854858323072, 31940434634990099905, 19740274219868223167, 12200160415121876738, 7540113804746346429, 4660046610375530309, 2880067194370816120, 1779979416004714189, 1100087778366101931, 679891637638612258, 420196140727489673, 259695496911122585, 160500643816367088, 99194853094755497, 61305790721611591, 37889062373143906, 23416728348467685, 14472334024676221, 8944394323791464, 5527939700884757, 3416454622906707, 2111485077978050, 1304969544928657, 806515533049393, 498454011879264, 308061521170129, 190392490709135, 117669030460994, 72723460248141, 44945570212853, 27777890035288, 17167680177565, 10610209857723, 6557470319842, 4052739537881, 2504730781961, 1548008755920, 956722026041, 591286729879, 365435296162, 225851433717, 139583862445, 86267571272, 53316291173, 32951280099, 20365011074, 12586269025, 7778742049, 4807526976, 2971215073, 1836311903, 1134903170, 701408733, 433494437, 267914296, 165580141, 102334155, 63245986, 39088169, 24157817, 14930352, 9227465, 5702887, 3524578, 2178309, 1346269, 832040, 514229, 317811, 196418, 121393, 75025, 46368, 28657, 17711, 10946, 6765, 4181, 2584, 1597, 987, 610, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1]\n\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685, 37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585, 420196140727489673, 679891637638612258, 1100087778366101931, 1779979416004714189, 2880067194370816120, 4660046610375530309, 7540113804746346429, 12200160415121876738, 19740274219868223167, 31940434634990099905, 51680708854858323072, 83621143489848422977, 135301852344706746049, 218922995834555169026, 354224848179261915075, 573147844013817084101]\n\n\n\n\n\n\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\u3002\n\n\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3063\u3066\u3001\u5f15\u6570\u306b\u6e21\u3059\u6570\u3092\uff11\u305a\u3064\u5897\u3084\u3057\u3066\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u521d\u9805\uff5e\u7b2c100\u9805\u307e\u3067\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u3084\u308a\u65b9\n\n\u3010 \u53c2\u8003 \u3011Python \u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u672b\u5c3e\u518d\u5e30\u3067\u6c42\u3081\u308b\n\n\npython\n[fibonacci(i) for i in range(10)]\n\n\n\n\uff08 \u5b9f\u884c\u7d50\u679c \uff09\n\n\npython\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n\n\n\n\n\n\n### __1. \u95a2\u6570 \u3092 \u5f15\u6570 \u306b \u53d7\u3051\u53d6\u308b \u9ad8\u968e\u518d\u5e30\u95a2\u6570 \u3092 \u5b9a\u7fa9__\n\n```{python:python}\ndef repeat_func(num, func, result_list):\n    if num >= 1:\n            result_list.append(func(num))\n\t        return repeat_func(num-1, func, result_list)\n\telse:\n\t        pass\n```\n\n___\n\n### __2. \u6b21\u306b\u3001\u6570\u5024 n \u3092 \u5f15\u6570\u306b\u3068\u308a\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u7b2cn\u9805\u76ee \u3092 \u8fd4\u3059\u518d\u5e30\u95a2\u6570 \u3092 \u5b9a\u7fa9__\n\n####__[\u3010 \u53c2\u8003 \u3011Python \u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u672b\u5c3e\u518d\u5e30\u3067\u6c42\u3081\u308b](http://momijiame.tumblr.com/post/58335050459/python-%E3%81%A7%E3%83%95%E3%82%A3%E3%83%9C%E3%83%8A%E3%83%83%E3%83%81%E6%95%B0%E3%82%92%E6%9C%AB%E5%B0%BE%E5%86%8D%E5%B8%B0%E3%81%A7%E6%B1%82%E3%82%81%E3%82%8B)__\n\n__\u8a08\u7b97\u91cf\u3092\u6e1b\u3089\u3057\u3066\u5b9f\u884c\u901f\u5ea6\u3092\u901f\u3081\u308b\u305f\u3081\u3001\u300c\u672b\u5c3e\u518d\u5e30\u300d\u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f__\n\n\n```{python:python}\ndef fibonacci(n, a=1, b=0):\n     return b if n < 1 else fibonacci(n - 1, a + b, a)\n```\n\n#### __\uff08 \u5b9f\u884c \uff09__\n\n```{python:python}\nfibonacci(0, a=1, b=0)\nfibonacci(1, a=1, b=0)\nfibonacci(2, a=1, b=0)\nfibonacci(3, a=1, b=0)\nfibonacci(4, a=1, b=0)\nfibonacci(5, a=1, b=0)\n\nfibonacci(10, a=1, b=0)\n\nfibonacci(20, a=1, b=0)\n```\n\n#### __\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n\n```{python:python}\n0\n1\n1\n2\n3\n5\n\n55\n6765\n```\n\n___\n\n\n### __3. \u95a2\u6570 fibonacci() \u3092 \u5f15\u6570 \u306b \u6e21\u3057\u3066\u3001\u9ad8\u968e\u95a2\u6570 repeat_func() \u3092 \u5b9f\u884c__\n\n```{python:python}\nsequence_list = []\nrepeat_func(101, fibonacci, sequence_list)\n\nprint(sequence_list)\n\nsequence_list.reverse()\nprint(sequence_list)\n```\n\n#### __\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n#### __fibonacci\u6570\u5217\u304c\u5f97\u3089\u308c\u305f\uff08\u4f46\u3057\u3001\u672b\u9805\u304b\u3089\u521d\u9805\u306e\u9806\u756a\uff09__\n__( \u5f97\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u3001reverse()\u95a2\u6570\u3067\u9006\u9806\u306b\u4e26\u3073\u66ff\u3048\u3066\u304b\u3089print()\u3059\u308b\u3068\u3001\u6c42\u3081\u308b\u6570\u5217\u304c\u5f97\u3089\u308c\u308b )__\n\n\n```{python:python}\n[573147844013817084101, 354224848179261915075, 218922995834555169026, 135301852344706746049, 83621143489848422977, 51680708854858323072, 31940434634990099905, 19740274219868223167, 12200160415121876738, 7540113804746346429, 4660046610375530309, 2880067194370816120, 1779979416004714189, 1100087778366101931, 679891637638612258, 420196140727489673, 259695496911122585, 160500643816367088, 99194853094755497, 61305790721611591, 37889062373143906, 23416728348467685, 14472334024676221, 8944394323791464, 5527939700884757, 3416454622906707, 2111485077978050, 1304969544928657, 806515533049393, 498454011879264, 308061521170129, 190392490709135, 117669030460994, 72723460248141, 44945570212853, 27777890035288, 17167680177565, 10610209857723, 6557470319842, 4052739537881, 2504730781961, 1548008755920, 956722026041, 591286729879, 365435296162, 225851433717, 139583862445, 86267571272, 53316291173, 32951280099, 20365011074, 12586269025, 7778742049, 4807526976, 2971215073, 1836311903, 1134903170, 701408733, 433494437, 267914296, 165580141, 102334155, 63245986, 39088169, 24157817, 14930352, 9227465, 5702887, 3524578, 2178309, 1346269, 832040, 514229, 317811, 196418, 121393, 75025, 46368, 28657, 17711, 10946, 6765, 4181, 2584, 1597, 987, 610, 377, 233, 144, 89, 55, 34, 21, 13, 8, 5, 3, 2, 1, 1]\n\n\n[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 86267571272, 139583862445, 225851433717, 365435296162, 591286729879, 956722026041, 1548008755920, 2504730781961, 4052739537881, 6557470319842, 10610209857723, 17167680177565, 27777890035288, 44945570212853, 72723460248141, 117669030460994, 190392490709135, 308061521170129, 498454011879264, 806515533049393, 1304969544928657, 2111485077978050, 3416454622906707, 5527939700884757, 8944394323791464, 14472334024676221, 23416728348467685, 37889062373143906, 61305790721611591, 99194853094755497, 160500643816367088, 259695496911122585, 420196140727489673, 679891637638612258, 1100087778366101931, 1779979416004714189, 2880067194370816120, 4660046610375530309, 7540113804746346429, 12200160415121876738, 19740274219868223167, 31940434634990099905, 51680708854858323072, 83621143489848422977, 135301852344706746049, 218922995834555169026, 354224848179261915075, 573147844013817084101]\n```\n\n![2.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/cf200a6c-2b1c-27c6-d1ff-eb0c01bd4992.png)\n\n\n___\n\n### __\u4ee5\u4e0b\u3067\u3082\u3067\u304d\u308b\u3002__\n\n\u30ea\u30b9\u30c8\u5185\u5305\u8868\u8a18\u3092\u4f7f\u3063\u3066\u3001\u5f15\u6570\u306b\u6e21\u3059\u6570\u3092\uff11\u305a\u3064\u5897\u3084\u3057\u3066\u3001\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u5217\u306e\u521d\u9805\uff5e\u7b2c100\u9805\u307e\u3067\u306e\u30ea\u30b9\u30c8\u3092\u8fd4\u3059\u3084\u308a\u65b9\n\n\n####__[\u3010 \u53c2\u8003 \u3011Python \u3067\u30d5\u30a3\u30dc\u30ca\u30c3\u30c1\u6570\u3092\u672b\u5c3e\u518d\u5e30\u3067\u6c42\u3081\u308b](http://momijiame.tumblr.com/post/58335050459/python-%E3%81%A7%E3%83%95%E3%82%A3%E3%83%9C%E3%83%8A%E3%83%83%E3%83%81%E6%95%B0%E3%82%92%E6%9C%AB%E5%B0%BE%E5%86%8D%E5%B8%B0%E3%81%A7%E6%B1%82%E3%82%81%E3%82%8B)__\n\n\n```{python:python}\n[fibonacci(i) for i in range(10)]\n```\n\n#### __\uff08 \u5b9f\u884c\u7d50\u679c \uff09__\n\n```{python:python}\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n```\n\n\n![1.PNG](https://qiita-image-store.s3.amazonaws.com/0/43487/70a17600-7900-bbac-59c2-433bffb21d40.png)\n\n\n<img width=\"1168\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-12 12.07.45.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/9fd10bb7-ad25-c321-c80e-c7a2c797362d.png\">\n\n<img width=\"1168\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-12 12.07.58.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/9ac77aeb-9bb8-76b6-2018-0a639ea3af35.png\">\n\n<img width=\"1173\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2017-02-12 12.08.25.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/43487/2d7bff63-8cf9-6f43-5f76-ba84e567cbb9.png\">\n\n\n"}