{"context": " More than 1 year has passed since last update.\u30c4\u30ca\u3067\u3082\u308f\u304b\u308b\u3068\u304b\u3044\u3044\u3064\u3064\u3001\u4eca\u56de\u306f\u30c4\u30ca\u3067\u306f\u308f\u304b\u308a\u305d\u3046\u3082\u3042\u308a\u307e\u305b\u3093...(\u00b4\u03c9`;)\n\u3053\u3053\u3089\u3067mrbgem\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4f5c\u308a\u3064\u3064\u8abf\u3079\u305f\u4e8b\u3092\u30e1\u30e2\u3057\u3066\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u4f5c\u3063\u3066\u307f\u305f\u306e\u306fmruby-mqtt\u3068\u3044\u3046mruby\u3067MQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\u3068\u3044\u3044\u3064\u3064\u5b9f\u306f\u305f\u3060\u306epaho\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\u6ce8\u610f: \n\n\u52c9\u5f37\u3057\u3064\u3064\u66f4\u65b0\u3057\u3066\u3044\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5185\u5bb9\u306b\u306f\u9593\u9055\u3044\u304c\u6709\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\nmruby-\u30af\u30e9\u30b9\u540d/ mrbgem.rake\n\n               src    / \u30af\u30e9\u30b9\u540d.c\n                        [\u305d\u306e\u4ed6\u306eC\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb]\n\n               mrblib / \u30af\u30e9\u30b9\u540d.rb\n                        [\u305d\u306e\u4ed6\u306emruby\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb]\n\n               test / [\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb]\n\n\n\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u5fc5\u305a\u3057\u3082\u30af\u30e9\u30b9\u540d\u3067\u306a\u304f\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30b9\u30bf\u30a4\u30eb\u4e0a\u306e\u554f\u984c\u3067\u305d\u306e\u3088\u3046\u306b\u3059\u308b\u4e8b\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\n\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u9069\u5f53\u306a\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u3001build_config.rb\u5185\u3067\n\nbuild_config.rb\n  conf.gem '\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d'\n\n\n\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u304a\u3051\u3070\u4e00\u7dd2\u306b\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002mruby\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5916\u3067\u3082\u3044\u3044\u307f\u305f\u3044\u3002\n\nExample\n\nbuild_config.rb\n  conf.gem '../mruby-mqtt'\n\n\n\nmrbgem.rake\n\u4e0b\u8a18\u306fmruby-time\u306emrbgem.rake\u3002\u3053\u306e\u3088\u3046\u306a\u5185\u5bb9\u3067mrbgem\u305d\u308c\u305e\u308c\u306b\u5fc5\u305a\u5fc5\u8981\nMRuby::Gem::Specification.new('mruby-time') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'mruby developers'\n  spec.summary = 'standard Time class'\nend\n\n\n\nMRuby::Gem::Specification.new\u306e\u5f15\u6570\u306bmrbgem\u540d\u3092\u6e21\u3059\nspec.license: \u30e9\u30a4\u30bb\u30f3\u30b9\nspec.author: \u958b\u767a\u8005\nspec.summary: \u3053\u306emrbgem\u306e\u8aac\u660e\n\n\nC\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u6700\u4f4e\u9650\u3001\u521d\u671f\u5316\u95a2\u6570\u3068\u7d42\u4e86\u6642\u95a2\u6570\u304c\u5fc5\u8981\n\n\u521d\u671f\u5316\u6642\u306e\u95a2\u6570\n\u4e0b\u8a18\u306e\u3088\u3046\u306binit\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u547c\u3070\u308c\u308b\u3063\u307d\u3044\n\u3053\u306e\u4e2d\u3067\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092mrb_define_class\u3067\u5b9a\u7fa9\u3059\u308b\u304b\u3001mrb->string_class\u306e\u3088\u3046\u306b\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u30dd\u30a4\u30f3\u30bf\u5909\u6570\u306b\u5165\u308c\u3066\u304a\u304f\u3002\n\u305d\u3057\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u69cb\u9020\u4f53\u306b\u5bfe\u3057\u3066mrb_define_method\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3002\n\nsample.c\nvoid\nmrb_mruby_\u30af\u30e9\u30b9\u540d_gem_init(mrb_state* mrb) {\n\n /*...*/\n}\n\n\n\n\nmruby\u30af\u30e9\u30b9\u69cb\u9020\u4f53\u306e\u5ba3\u8a00\n\u65b0\u305f\u306a\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\nstruct RClass *klass;\n\n\u3059\u3067\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u5834\u5408\nstruct RClass *string_klass = mrb->string_class;\n\n\n\u65b0\u3057\u3044\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\nmrb_define_class(mrb, \"\u30af\u30e9\u30b9\u540d\", \u7d99\u627f\u5143\u30af\u30e9\u30b9);\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n\u30af\u30e9\u30b9\u540d: Ruby\u5074\u3067\u306e\u30af\u30e9\u30b9\u540d\u3092\u8868\u3059\u6587\u5b57\u5217\n\u7d99\u627f\u5143\u30af\u30e9\u30b9: \u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u306e\u7d99\u627f\u5143\u30af\u30e9\u30b9\uff08\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\uff09\n\nExample\n\nmrbgems/mruby-fiber/src/fiber.c\nstruct RClass *c;\n\nc = mrb_define_class(mrb, \"Fiber\", mrb->object_class);\nMRB_SET_INSTANCE_TT(c, MRB_TT_FIBER);\n\n\nMRB_TT_[\u67d0]\u306e\u5b9a\u7fa9\u306fsrc/object.c\u3067\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7\u304c\u6709\u308b\u3088\u3046\u3067\u3059\u3002\n\nsrc/object.c\nstatic const struct types {\n  unsigned char type;\n  const char *name;\n} builtin_types[] = {\n  {MRB_TT_FALSE,  \"false\"},\n  {MRB_TT_TRUE,   \"true\"},\n  {MRB_TT_FIXNUM, \"Fixnum\"},\n  {MRB_TT_SYMBOL, \"Symbol\"},  /* :symbol */\n  {MRB_TT_MODULE, \"Module\"},\n  {MRB_TT_OBJECT, \"Object\"},\n  {MRB_TT_CLASS,  \"Class\"},\n  {MRB_TT_ICLASS, \"iClass\"},  /* internal use: mixed-in module holder */\n  {MRB_TT_SCLASS, \"SClass\"},\n  {MRB_TT_PROC,   \"Proc\"},\n  {MRB_TT_FLOAT,  \"Float\"},\n  {MRB_TT_ARRAY,  \"Array\"},\n  {MRB_TT_HASH,   \"Hash\"},\n  {MRB_TT_STRING, \"String\"},\n  {MRB_TT_RANGE,  \"Range\"},\n  {MRB_TT_FILE,   \"File\"},\n  {MRB_TT_DATA,   \"Data\"},  /* internal use: wrapped C pointers */\n  {-1,  0}\n};\n\n\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\nmrb_define_method(mrb, klass, \"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\", \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570, \u5f15\u6570\u30bf\u30a4\u30d7)\n\n\nmrb: mrb_state\u578b\u306e\u30dd\u30a4\u30f3\u30bf\nklass: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3092\u8868\u3059\u69cb\u9020\u4f53(RClass)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n\"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\": \u5b9a\u7fa9\u3059\u308bRuby\u5074\u3067\u306e\u30e1\u30bd\u30c3\u30c9\u540d\uff08\u6587\u5b57\u5217\uff09\n\u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570: \u95a2\u9023\u4ed8\u3051\u308bC\u5074\u3067\u306e\u95a2\u6570\n\u5f15\u6570\u30bf\u30a4\u30d7: \u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u8868\u3059\u30de\u30af\u30ed\n\n\nMRB_ARGS_REQ(n): n\u500b\u306e\u5f15\u6570\nMRB_ARGS_OPT(n): \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an\u500b\u306e\u5f15\u6570\nMRB_ARGS_ARG(n1,n2): n1\u500b\u306e\u5f15\u6570\u3068\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an2\u500b\u306e\u5f15\u6570\nMRB_ARGS_REST(): ?\nMRB_ARGS_POST(n): ?\nMRB_ARGS_KEY(n1,n2): \u540d\u524d\u4ed8\u304d\u5f15\u6570\u3002n1\u500b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3001\u5024\u304c\u53ce\u307e\u308b\u8f9e\u66f8n2 \nMRB_ARGS_BLOCK(): \u30d6\u30ed\u30c3\u30af\u5f15\u6570\nMRB_ARGS_ANY(): \u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3002\u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\nMRB_ARGS_NONE(): \u5f15\u6570\u306a\u3057\n\n\n\nExample\n\nmrbgems/mruby-fiber/src/fiber.c\nmrb_define_method(mrb, c, \"initialize\", fiber_init, MRB_ARGS_NONE());\nmrb_define_method(mrb, c, \"resume\", fiber_resume,  MRB_ARGS_ANY());\n\n\n\n\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\nmrb_define_class_method(mrb, klass, \"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\", \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570, \u5f15\u6570\u30bf\u30a4\u30d7);\n\n\nmrb: mrb_state\u578b\u306e\u30dd\u30a4\u30f3\u30bf\nklass: \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3092\u8868\u3059\u69cb\u9020\u4f53(RClass)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nruby_method_name: \u5b9a\u7fa9\u3059\u308bRuby\u5074\u3067\u306e\u30e1\u30bd\u30c3\u30c9\u540d\uff08\u6587\u5b57\u5217\uff09\n\u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570: \u95a2\u9023\u4ed8\u3051\u308bC\u5074\u3067\u306e\u95a2\u6570\n\u5f15\u6570\u30bf\u30a4\u30d7: \u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u8868\u3059\u30de\u30af\u30ed\n\n\nMRB_ARGS_REQ(n): n\u500b\u306e\u5f15\u6570\nMRB_ARGS_OPT(n): \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an\u500b\u306e\u5f15\u6570\nMRB_ARGS_ARG(n1,n2): n1\u500b\u306e\u5f15\u6570\u3068\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an2\u500b\u306e\u5f15\u6570\nMRB_ARGS_REST(): ?\nMRB_ARGS_POST(n): ?\nMRB_ARGS_KEY(n1,n2): \u540d\u524d\u4ed8\u304d\u5f15\u6570\u3002n1\u500b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3001\u5024\u304c\u53ce\u307e\u308b\u81ea\u66f8n2 \nMRB_ARGS_BLOCK(): \u30d6\u30ed\u30c3\u30af\u5f15\u6570\nMRB_ARGS_ANY(): \u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3002\u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\nMRB_ARGS_NONE(): \u5f15\u6570\u306a\u3057\n\n\n\nExample\n\nsrc/gc.c\nmrb_define_class_method(mrb, gc, \"start\", gc_start, MRB_ARGS_NONE());\n\n\n\nmruby\u306b\u542b\u307e\u308c\u3066\u3044\u308bmrbgems\u3067\u306e\u4f8b\nString\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308bmruby-string-utf8\u306e\u521d\u671f\u5316\u95a2\u6570\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\nmrbges/mruby-string-utf8/src/mruby-string-utf8\nvoid\nmrb_mruby_string_utf8_gem_init(mrb_state* mrb)\n{\n  struct RClass * s = mrb->string_class;\n\n  mrb_define_method(mrb, s, \"size\", mrb_str_size, MRB_ARGS_NONE());\n  mrb_define_method(mrb, s, \"length\", mrb_str_size, MRB_ARGS_NONE());\n  mrb_define_method(mrb, s, \"index\", mrb_str_index_m, MRB_ARGS_ANY());\n  /* ... */\n}\n\n\n\n\u7d42\u4e86\u6642\u306e\u95a2\u6570\nvoid\nmrb_mruby_\u30af\u30e9\u30b9\u540d_gem_final(mrb_state* mrb)\n{\n}\n\nExample\n\nmruby-string-utf8\nvoid\nmrb_mruby_string_utf8_gem_final(mrb_state* mrb)\n{\n}\n\n\n\u3053\u308c\u306f\u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\u306e\u304b\u3001\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093...\n\n\u30b3\u30fc\u30c9\u4e2d\u3067\u4f7f\u7528\u3067\u304d\u308bAPI\u95a2\u6570\n\n\u5f15\u6570\u306e\u53d6\u5f97\n\nsrc/class.c\nmrb_int\nmrb_get_args(mrb_state *mrb, const char *format, ...)\n\n\nmruby\u5074\u304b\u3089\u6e21\u3055\u308c\u308b\u5f15\u6570\u306fmrb_get_args\u3092\u4f7f\u3063\u3066\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\u5f15\u6570\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306f\u4ee5\u4e0b\u304c\u6709\u308b\u3088\u3046\u3067\u3059\u3002\n\nsrc/class.c\n  format specifiers:\n\n    string  mruby type     C type                 note\n    ----------------------------------------------------------------------\n    o:      Object         [mrb_value]\n    C:      class/module   [mrb_value]\n    S:      String         [mrb_value]\n    A:      Array          [mrb_value]\n    H:      Hash           [mrb_value]\n    s:      String         [char*,mrb_int]        Receive two arguments.\n    z:      String         [char*]                NUL terminated string.\n    a:      Array          [mrb_value*,mrb_int]   Receive two arguments.\n    f:      Float          [mrb_float]\n    i:      Integer        [mrb_int]\n    b:      Boolean        [mrb_bool]\n    n:      Symbol         [mrb_sym]\n    d:      Data           [void*,mrb_data_type const] 2nd argument will \n                                                       be used to check\n                                                       data type so \n                                                       it won't be\n                                                       modified\n\n    &:      Block          [mrb_value]\n    *:      rest argument  [mrb_value*,mrb_int] Receive the rest of \n                                                the arguments as\n                                                an array.\n\n    |:      optional                            Next argument of '|' and\n                                                later are optional.\n\n    // \n    ?:      optional given [mrb_bool]           true if preceding\n                                                argument (optional) is\n                                                given.\n\n\n\nExample\n\u4f8b\u3068\u3057\u3066\u3001\u307e\u305a\u306fmruby-time\u306e\u95a2\u6570\u3092\u5e7e\u3064\u304b\u898b\u3066\u307f\u307e\u3059\u3002\n\nmrbgems/mruby-time/src/mruby-time.c\nstatic mrb_value\nmrb_time_local(mrb_state *mrb, mrb_value self)\n{\n  mrb_int ayear = 0, amonth = 1, aday = 1,\n          ahour = 0, amin = 0, asec = 0, ausec = 0;\n\n  mrb_get_args(mrb, \"i|iiiiii\",\n                &ayear, &amonth, &aday, &ahour, &amin, &asec, &ausec);\n\n  return mrb_time_wrap(mrb, mrb_class_ptr(self),\n          time_mktime(mrb, ayear, amonth, aday,\n                           ahour, amin, asec, ausec,\n                           MRB_TIMEZONE_LOCAL));\n}\n\n\n\n\u3053\u3053\u3067\u306f\u5fc5\u9808\u306e\u5f15\u6570\u306f\u5148\u982d\u306eyear\u3060\u3051\u3067\u3001\u3042\u3068\u306f\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u3068\u306a\u308b\u305f\u3081\"i|iiiiii\"\u3068\u3044\u3046\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u5e74\u3001\u6708\u3001\u65e5\u3001\u6642\u3001\u5206\u3001\u79d2\u3001\u30de\u30a4\u30af\u30ed\u79d2\u304c\u305d\u308c\u305e\u308cayear,amonth...\u3078\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\u540c\u3058\u304fmruby-time\u304b\u3089\n\nmrbgems/mruby-time/src/mruby-time.c\nstatic mrb_value\nmrb_time_eq(mrb_state *mrb, mrb_value self)\n{\n  mrb_value other;\n  struct mrb_time *tm1, *tm2;\n  mrb_bool eq_p;\n\n  mrb_get_args(mrb, \"o\", &other);\n  tm1 = DATA_CHECK_GET_PTR(mrb, self, &mrb_time_type, struct mrb_time);\n  tm2 = DATA_CHECK_GET_PTR(mrb, other, &mrb_time_type, struct mrb_time);\n  eq_p = tm1 && tm2 && tm1->sec == tm2->sec && tm1->usec == tm2->usec;\n\n  return mrb_bool_value(eq_p);\n}\n\n\n\u3053\u3053\u3067\u306fTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u58eb\u306e\u6bd4\u8f03\u3092\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u6bd4\u8f03\u76f8\u624b\u306eTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308b\u306e\u306b\u3001\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u8868\u3059\"o\"\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304cother\u3078\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001mruby-fiber\u306b\u304a\u3051\u308b\u4f8b\u3067\u3059\u3002\n\nmrbgems/mruby-fiber/src/fiber.c\nstatic mrb_value\nfiber_yield(mrb_state *mrb, mrb_value self)\n{\n  mrb_value *a; // \u5f15\u6570\u306e\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u5165\u308b\u5909\u6570\n  mrb_int len;  // \u5f15\u6570\u306e\u6570\u304c\u5165\u308b\u5909\u6570\n\n  mrb_get_args(mrb, \"*\", &a, &len);\n  return mrb_fiber_yield(mrb, len, a);\n}\n\n\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\"*\"\u3092\u6307\u5b9a\u3057\u3066\u3001\u5909\u6570a\u306b\u5f15\u6570\u306e\u914d\u5217\u3092\u3001\u5909\u6570len\u306b\u5f15\u6570\u306e\u6570\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\n\nsrc/valiable.c\nvoid\nmrb_iv_set(mrb_state *mrb, mrb_value obj, mrb_sym sym, mrb_value v)\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nmrb_value: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\nsym: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540d\u3092\u8868\u3059\u30b7\u30f3\u30dc\u30eb\nv: \u8a2d\u5b9a\u3059\u308b\u5024\n\n\nExample\n\u4f8b\u3068\u3057\u3066Hash\u30af\u30e9\u30b9\u306b\u3042\u308b\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\nsrc/hash.c\nstatic mrb_value\nmrb_hash_set_default(mrb_state *mrb, mrb_value hash)\n{\n  mrb_value ifnone;\n\n  mrb_get_args(mrb, \"o\", &ifnone);\n  mrb_hash_modify(mrb, hash);\n  mrb_iv_set(mrb, hash, mrb_intern_lit(mrb, \"ifnone\"), ifnone);\n  RHASH(hash)->flags &= ~(MRB_HASH_PROC_DEFAULT);\n\n  return ifnone;\n}\n\n\n\u6700\u521d\u306bmrg_get_args\u3067\u5909\u6570ifnone\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u81ea\u8eab(hash)\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540difnone\u306b\u3001\u53d7\u3051\u53d6\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u5024\u3092\u5f97\u308b\n\nvaliable.c\nmrb_value\nmrb_iv_get(mrb_state *mrb, mrb_value obj, mrb_sym sym)\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nobj: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\nsym: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540d\u306e\u30b7\u30f3\u30dc\u30eb\n\u623b\u308a\u5024: mruby\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n\nC\u306e\u6587\u5b57\u5217(char\u306e\u914d\u5217)\u304b\u3089String\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5f97\u308b\nmrb_value\nmrb_str_new_cstr(mrb_state *mrb, const char *p)\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\np: char\u306e\u914d\u5217\u3078\u306e\u53c2\u7167\n\u623b\u308a\u5024: String\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n\nString\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089C\u306e\u6587\u5b57\u5217(char\u306e\u914d\u5217)\u3092\u5f97\u308b\n\nsrc/string.c\nchar *\nmrb_str_to_cstr(mrb_state *mrb, mrb_value str0)\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nstr0: String\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\u623b\u308a\u5024: char\u306e\u914d\u5217\u3078\u306e\u53c2\u7167\n\n\nC\u306e\u6570\u5024\u304b\u3089mruby\u306e\u6570\u5024\u3092\u5f97\u308b\n\nmruby.h\nmrb_fixnum_value(c)\n\n\n\nc: C\u306e\u6570\u5024(int, float, double \u3044\u305a\u308c\u3082\u53ef\uff1f)\n\u623b\u308a\u5024: Fixnum\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n\nC\u306e\u6587\u5b57\u5217\u304b\u3089\u30b7\u30f3\u30dc\u30eb\u3092\u5f97\u308b\n\nmruby.h\nmrb_intern_lit(mrb, lit)\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\nlit: C\u306e\u6587\u5b57\u5217\n\u623b\u308a\u5024: Symbol\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n\nmruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n\nmrb_funcall\nmrb_funcall(mrb, obj, \"\u30e1\u30bd\u30c3\u30c9\u540d\", \u5f15\u6570\u306e\u6570, \u5f15\u65701, \u5f15\u65702 ...)\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf(mrb_state *)\nobj: \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002(mrb_value)\n\"\u30e1\u30bd\u30c3\u30c9\u540d\": \u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u540d\u3002\u6587\u5b57\u5217\u3067\u6e21\u3059\u3002(char*)\n\u5f15\u6570\u306e\u6570: \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u5f15\u6570\u306e\u6570\u3002(int)\n\u5f15\u65701, \u5f15\u65702, ....: \u300c\u5f15\u6570\u306e\u6570\u300d\u3067\u6307\u5b9a\u3057\u305f\u5206\u3060\u3051\u5f15\u6570\u3092\u5217\u6319\u3059\u308b\u3002(mrb_value)\n\nC\u5074\u304b\u3089mruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\u7b2c2\u5f15\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u7b2c3\u5f15\u6570\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6e21\u3059\u3002\u7b2c4\u5f15\u6570\u306f\u3001\u305d\u306e\u5f8c\u306b\u7d9a\u304f\u5f15\u6570\u306e\u6570\u3067\u3001\u79fb\u884c\u3001\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3060\u3051\u5f15\u6570\u304c\u7d9a\u304f\u3002\n\nmruby\u306e\u30a8\u30e9\u30fc\u3092\u767a\u751f\u3055\u305b\u308b\n\nmrb_raise\nmrb_raise(mrb, \u30a8\u30e9\u30fc\u30af\u30e9\u30b9, \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\");\n\n\n\nmrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf(mrb_state *)\n\u30a8\u30e9\u30fc\u30af\u30e9\u30b9: mruby\u306e\u30a8\u30e9\u30fc\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9()\n\"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\": \u30a8\u30e9\u30fc\u767a\u751f\u6642\u306b\u8868\u793a\u3059\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n\n\u30a8\u30e9\u30fc\u30af\u30e9\u30b9\u306e\u6240\u306f\u3001mrb_class_get(\"\u30af\u30e9\u30b9\u540d\u6587\u5b57\u5217\")\u3092\u4f7f\u3063\u3066\u5f97\u3089\u308c\u305f\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3002\n\u3061\u306a\u307f\u306b\u30a8\u30e9\u30fc\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3057\u3066\u306finclude/mruby.h\u5185\u306e\u30de\u30af\u30ed\u3067\u5b9a\u7fa9\u3057\u3066\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u307f\u305f\u3044\u3002\n\ninclude/mruby.h\n/* macros to get typical exception objects\n   note:\n   + those E_* macros requires mrb_state* variable named mrb.\n   + exception objects obtained from those macros are local to mrb\n*/\n#define E_RUNTIME_ERROR        (mrb_class_get(mrb, \"RuntimeError\"))\n#define E_TYPE_ERROR           (mrb_class_get(mrb, \"TypeError\"))\n#define E_ARGUMENT_ERROR       (mrb_class_get(mrb, \"ArgumentError\"))\n#define E_INDEX_ERROR          (mrb_class_get(mrb, \"IndexError\"))\n#define E_RANGE_ERROR          (mrb_class_get(mrb, \"RangeError\"))\n#define E_NAME_ERROR           (mrb_class_get(mrb, \"NameError\"))\n#define E_NOMETHOD_ERROR       (mrb_class_get(mrb, \"NoMethodError\"))\n#define E_SCRIPT_ERROR         (mrb_class_get(mrb, \"ScriptError\"))\n#define E_SYNTAX_ERROR         (mrb_class_get(mrb, \"SyntaxError\"))\n#define E_LOCALJUMP_ERROR      (mrb_class_get(mrb, \"LocalJumpError\"))\n#define E_REGEXP_ERROR         (mrb_class_get(mrb, \"RegexpError\"))\n\n#define E_NOTIMP_ERROR         (mrb_class_get(mrb, \"NotImplementedError\"))\n#define E_FLOATDOMAIN_ERROR    (mrb_class_get(mrb, \"FloatDomainError\"))\n\n#define E_KEY_ERROR            (mrb_class_get(mrb, \"KeyError\"))\n\n\n\nExample\n\u4f8b\u3068\u3057\u3066string\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bmrb_str_new_static\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\nsrc/string.c\nmrb_value\nmrb_str_new_static(mrb_state *mrb, const char *p, size_t len)\n{\n  struct RString *s;\n\n  if (len >= MRB_INT_MAX) {\n    mrb_raise(mrb, E_ARGUMENT_ERROR, \"string size too big\");\n  }\n\n ..\n}\n\n\n\u6e21\u3055\u308c\u305f\u6587\u5b57\u5217\u306e\u9577\u3055\u304cMRB_INT_MAX\u4ee5\u4e0a\u3060\u3063\u305f\u5834\u5408\u306b\u4f8b\u5916\u3092\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u3002\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u70ba\u306emrb_raisef\u3082\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\nsrc/string.c\nmrb_raisef(mrb, E_ARGUMENT_ERROR, \"wrong number of arguments (%S for 1)\", mrb_fixnum_value(argc));\n\n\n\u540c\u3058\u304fstring.c\u5185\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u5024\u3092\u57cb\u3081\u8fbc\u307f\u305f\u3044\u4f4d\u7f6e\u306b%S\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3001\u5f15\u6570\u3068\u3057\u3066\u5024\u3092\u6e21\u3059\u3068\u3001mrb_value\u306a\u3089\u3088\u3057\u306a\u306b\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\u3068\u308a\u3042\u3048\u305a\u4eca\u306f\u3053\u3053\u307e\u3067...\u306a\u306b\u304b\u89e3\u3063\u305f\u3089\u307e\u305f\u8ffd\u8a18\u3057\u307e\u3059\u3002\u3002\n\n\u30c4\u30ca\u3067\u3082\u308f\u304b\u308b\u3068\u304b\u3044\u3044\u3064\u3064\u3001\u4eca\u56de\u306f\u30c4\u30ca\u3067\u306f\u308f\u304b\u308a\u305d\u3046\u3082\u3042\u308a\u307e\u305b\u3093...(\u00b4\u03c9`;)\n\n\u3053\u3053\u3089\u3067mrbgem\u3092\u4f5c\u308a\u305f\u304b\u3063\u305f\u306e\u3067\u3001\u4f5c\u308a\u3064\u3064\u8abf\u3079\u305f\u4e8b\u3092\u30e1\u30e2\u3057\u3066\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u4f5c\u3063\u3066\u307f\u305f\u306e\u306f[mruby-mqtt](https://github.com/hiroeorz/mruby-mqtt)\u3068\u3044\u3046mruby\u3067MQTT\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u5b9f\u73fe\u3059\u308b\u70ba\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u3002\u3068\u3044\u3044\u3064\u3064\u5b9f\u306f\u305f\u3060\u306e[paho](http://www.eclipse.org/paho/)\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3059\u3002\n\n\u6ce8\u610f: \n>\u52c9\u5f37\u3057\u3064\u3064\u66f4\u65b0\u3057\u3066\u3044\u3063\u3066\u3044\u308b\u306e\u3067\u3001\u5185\u5bb9\u306b\u306f\u9593\u9055\u3044\u304c\u6709\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3067\u3059\u3002\n\n##\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u9020\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u69cb\u9020\u306b\u306a\u308b\u3088\u3046\u3067\u3059\u3002\n\n```\nmruby-\u30af\u30e9\u30b9\u540d/ mrbgem.rake\n\n               src    / \u30af\u30e9\u30b9\u540d.c\n                        [\u305d\u306e\u4ed6\u306eC\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb]\n\n               mrblib / \u30af\u30e9\u30b9\u540d.rb\n                        [\u305d\u306e\u4ed6\u306emruby\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb]\n\n               test / [\u30c6\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb]\n\n```\n\n\u30d5\u30a1\u30a4\u30eb\u540d\u306f\u5fc5\u305a\u3057\u3082\u30af\u30e9\u30b9\u540d\u3067\u306a\u304f\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30b9\u30bf\u30a4\u30eb\u4e0a\u306e\u554f\u984c\u3067\u305d\u306e\u3088\u3046\u306b\u3059\u308b\u4e8b\u304c\u591a\u3044\u3088\u3046\u3067\u3059\u3002\n\n\u3053\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u9069\u5f53\u306a\u4f4d\u7f6e\u306b\u304a\u3044\u3066\u3001<code>build_config.rb</code>\u5185\u3067\n\n```ruby:build_config.rb\n  conf.gem '\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d'\n```\n\u306e\u3088\u3046\u306b\u6307\u5b9a\u3057\u3066\u304a\u3051\u3070\u4e00\u7dd2\u306b\u30d3\u30eb\u30c9\u3055\u308c\u307e\u3059\u3002mruby\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u5916\u3067\u3082\u3044\u3044\u307f\u305f\u3044\u3002\n\n####Example\n\n```ruby:build_config.rb\n  conf.gem '../mruby-mqtt'\n```\n\n## mrbgem.rake\n\u4e0b\u8a18\u306f<b>mruby-time</b>\u306e<code>mrbgem.rake</code>\u3002\u3053\u306e\u3088\u3046\u306a\u5185\u5bb9\u3067mrbgem\u305d\u308c\u305e\u308c\u306b\u5fc5\u305a\u5fc5\u8981\n\n```\nMRuby::Gem::Specification.new('mruby-time') do |spec|\n  spec.license = 'MIT'\n  spec.author  = 'mruby developers'\n  spec.summary = 'standard Time class'\nend\n```\n\n- <code>MRuby::Gem::Specification.new</code>\u306e\u5f15\u6570\u306bmrbgem\u540d\u3092\u6e21\u3059\n- spec.license: \u30e9\u30a4\u30bb\u30f3\u30b9\n- spec.author: \u958b\u767a\u8005\n- spec.summary: \u3053\u306emrbgem\u306e\u8aac\u660e\n\n## C\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306e\u7de8\u96c6\n\u6700\u4f4e\u9650\u3001\u521d\u671f\u5316\u95a2\u6570\u3068\u7d42\u4e86\u6642\u95a2\u6570\u304c\u5fc5\u8981\n\n### \u521d\u671f\u5316\u6642\u306e\u95a2\u6570\n\u4e0b\u8a18\u306e\u3088\u3046\u306binit\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304f\u3068\u547c\u3070\u308c\u308b\u3063\u307d\u3044\n\u3053\u306e\u4e2d\u3067\u65b0\u3057\u3044\u30af\u30e9\u30b9\u3092<code>mrb_define_class</code>\u3067\u5b9a\u7fa9\u3059\u308b\u304b\u3001<code>mrb->string_class</code>\u306e\u3088\u3046\u306b\u65e2\u5b58\u306e\u30af\u30e9\u30b9\u3092\u5f15\u3063\u5f35\u3063\u3066\u304d\u3066\u30dd\u30a4\u30f3\u30bf\u5909\u6570\u306b\u5165\u308c\u3066\u304a\u304f\u3002\n\u305d\u3057\u3066\u3001\u305d\u306e\u30af\u30e9\u30b9\u69cb\u9020\u4f53\u306b\u5bfe\u3057\u3066<code>mrb_define_method</code>\u3067\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u304f\u3002\n\n```c:sample.c\nvoid\nmrb_mruby_\u30af\u30e9\u30b9\u540d_gem_init(mrb_state* mrb) {\n\n /*...*/\n}\n\n```\n\n#### mruby\u30af\u30e9\u30b9\u69cb\u9020\u4f53\u306e\u5ba3\u8a00\n\u65b0\u305f\u306a\u30af\u30e9\u30b9\u3092\u5b9a\u7fa9\u3059\u308b\u5834\u5408\n\n```\nstruct RClass *klass;\n```\n\n\u3059\u3067\u306b\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b\u5834\u5408\n\n```\nstruct RClass *string_klass = mrb->string_class;\n```\n\n#### \u65b0\u3057\u3044\u30af\u30e9\u30b9\u306e\u5b9a\u7fa9\n\n```\nmrb_define_class(mrb, \"\u30af\u30e9\u30b9\u540d\", \u7d99\u627f\u5143\u30af\u30e9\u30b9);\n```\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- \u30af\u30e9\u30b9\u540d: Ruby\u5074\u3067\u306e\u30af\u30e9\u30b9\u540d\u3092\u8868\u3059\u6587\u5b57\u5217\n- \u7d99\u627f\u5143\u30af\u30e9\u30b9: \u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u306e\u7d99\u627f\u5143\u30af\u30e9\u30b9\uff08\u30b9\u30fc\u30d1\u30fc\u30af\u30e9\u30b9\uff09\n\nExample\n\n```c:mrbgems/mruby-fiber/src/fiber.c\nstruct RClass *c;\n\nc = mrb_define_class(mrb, \"Fiber\", mrb->object_class);\nMRB_SET_INSTANCE_TT(c, MRB_TT_FIBER);\n```\n\nMRB_TT_[\u67d0]\u306e\u5b9a\u7fa9\u306f<code>src/object.c</code>\u3067\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30bf\u30a4\u30d7\u304c\u6709\u308b\u3088\u3046\u3067\u3059\u3002\n\n```c:src/object.c\nstatic const struct types {\n  unsigned char type;\n  const char *name;\n} builtin_types[] = {\n  {MRB_TT_FALSE,  \"false\"},\n  {MRB_TT_TRUE,   \"true\"},\n  {MRB_TT_FIXNUM, \"Fixnum\"},\n  {MRB_TT_SYMBOL, \"Symbol\"},  /* :symbol */\n  {MRB_TT_MODULE, \"Module\"},\n  {MRB_TT_OBJECT, \"Object\"},\n  {MRB_TT_CLASS,  \"Class\"},\n  {MRB_TT_ICLASS, \"iClass\"},  /* internal use: mixed-in module holder */\n  {MRB_TT_SCLASS, \"SClass\"},\n  {MRB_TT_PROC,   \"Proc\"},\n  {MRB_TT_FLOAT,  \"Float\"},\n  {MRB_TT_ARRAY,  \"Array\"},\n  {MRB_TT_HASH,   \"Hash\"},\n  {MRB_TT_STRING, \"String\"},\n  {MRB_TT_RANGE,  \"Range\"},\n  {MRB_TT_FILE,   \"File\"},\n  {MRB_TT_DATA,   \"Data\"},  /* internal use: wrapped C pointers */\n  {-1,  0}\n};\n```\n\n#### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\n\n```\nmrb_define_method(mrb, klass, \"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\", \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570, \u5f15\u6570\u30bf\u30a4\u30d7)\n```\n\n- mrb: mrb_state\u578b\u306e\u30dd\u30a4\u30f3\u30bf\n- klass: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3092\u8868\u3059\u69cb\u9020\u4f53(RClass)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- \"\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\": \u5b9a\u7fa9\u3059\u308bRuby\u5074\u3067\u306e\u30e1\u30bd\u30c3\u30c9\u540d\uff08\u6587\u5b57\u5217\uff09\n- \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570: \u95a2\u9023\u4ed8\u3051\u308bC\u5074\u3067\u306e\u95a2\u6570\n- \u5f15\u6570\u30bf\u30a4\u30d7: \u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u8868\u3059\u30de\u30af\u30ed\n    - MRB_ARGS_REQ(n): n\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_OPT(n): \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_ARG(n1,n2): n1\u500b\u306e\u5f15\u6570\u3068\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an2\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_REST(): ?\n    - MRB_ARGS_POST(n): ?\n    - MRB_ARGS_KEY(n1,n2): \u540d\u524d\u4ed8\u304d\u5f15\u6570\u3002n1\u500b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3001\u5024\u304c\u53ce\u307e\u308b\u8f9e\u66f8n2 \n    - MRB_ARGS_BLOCK(): \u30d6\u30ed\u30c3\u30af\u5f15\u6570\n    - MRB_ARGS_ANY(): \u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3002\u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\n    - MRB_ARGS_NONE(): \u5f15\u6570\u306a\u3057\n\nExample\n\n```c:mrbgems/mruby-fiber/src/fiber.c\nmrb_define_method(mrb, c, \"initialize\", fiber_init, MRB_ARGS_NONE());\nmrb_define_method(mrb, c, \"resume\", fiber_resume,  MRB_ARGS_ANY());\n```\n\n#### \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u306e\u5b9a\u7fa9\n\n```\nmrb_define_class_method(mrb, klass, \"\u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u540d\", \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570, \u5f15\u6570\u30bf\u30a4\u30d7);\n```\n- mrb: mrb_state\u578b\u306e\u30dd\u30a4\u30f3\u30bf\n- klass: \u30af\u30e9\u30b9\u30e1\u30bd\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u30af\u30e9\u30b9\u3092\u8868\u3059\u69cb\u9020\u4f53(RClass)\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- ruby_method_name: \u5b9a\u7fa9\u3059\u308bRuby\u5074\u3067\u306e\u30e1\u30bd\u30c3\u30c9\u540d\uff08\u6587\u5b57\u5217\uff09\n- \u95a2\u9023\u4ed8\u3051\u308bC\u95a2\u6570: \u95a2\u9023\u4ed8\u3051\u308bC\u5074\u3067\u306e\u95a2\u6570\n- \u5f15\u6570\u30bf\u30a4\u30d7: \u5f15\u6570\u306e\u6e21\u3057\u65b9\u3092\u8868\u3059\u30de\u30af\u30ed\n    - MRB_ARGS_REQ(n): n\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_OPT(n): \u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_ARG(n1,n2): n1\u500b\u306e\u5f15\u6570\u3068\u3001\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u306an2\u500b\u306e\u5f15\u6570\n    - MRB_ARGS_REST(): ?\n    - MRB_ARGS_POST(n): ?\n    - MRB_ARGS_KEY(n1,n2): \u540d\u524d\u4ed8\u304d\u5f15\u6570\u3002n1\u500b\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3068\u3001\u5024\u304c\u53ce\u307e\u308b\u81ea\u66f8n2 \n    - MRB_ARGS_BLOCK(): \u30d6\u30ed\u30c3\u30af\u5f15\u6570\n    - MRB_ARGS_ANY(): \u4efb\u610f\u306e\u6570\u306e\u5f15\u6570\u3002\u914d\u5217\u3067\u53d7\u3051\u53d6\u308b\n    - MRB_ARGS_NONE(): \u5f15\u6570\u306a\u3057\n\nExample\n\n```c:src/gc.c\nmrb_define_class_method(mrb, gc, \"start\", gc_start, MRB_ARGS_NONE());\n```\n\n#### mruby\u306b\u542b\u307e\u308c\u3066\u3044\u308bmrbgems\u3067\u306e\u4f8b\nString\u30af\u30e9\u30b9\u3092\u62e1\u5f35\u3059\u308b<code>mruby-string-utf8</code>\u306e\u521d\u671f\u5316\u95a2\u6570\u3092\u629c\u7c8b\u3057\u307e\u3059\u3002\n\n```c:mrbges/mruby-string-utf8/src/mruby-string-utf8\nvoid\nmrb_mruby_string_utf8_gem_init(mrb_state* mrb)\n{\n  struct RClass * s = mrb->string_class;\n\n  mrb_define_method(mrb, s, \"size\", mrb_str_size, MRB_ARGS_NONE());\n  mrb_define_method(mrb, s, \"length\", mrb_str_size, MRB_ARGS_NONE());\n  mrb_define_method(mrb, s, \"index\", mrb_str_index_m, MRB_ARGS_ANY());\n  /* ... */\n}\n```\n\n### \u7d42\u4e86\u6642\u306e\u95a2\u6570\n\n```\nvoid\nmrb_mruby_\u30af\u30e9\u30b9\u540d_gem_final(mrb_state* mrb)\n{\n}\n```\n\nExample\n\n```c:mruby-string-utf8\nvoid\nmrb_mruby_string_utf8_gem_final(mrb_state* mrb)\n{\n}\n```\n\n\u3053\u308c\u306f\u3069\u3046\u3044\u3046\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u308b\u306e\u304b\u3001\u307e\u3060\u3088\u304f\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093...\n\n##\u30b3\u30fc\u30c9\u4e2d\u3067\u4f7f\u7528\u3067\u304d\u308bAPI\u95a2\u6570\n\n###\u5f15\u6570\u306e\u53d6\u5f97\n\n```c:src/class.c\nmrb_int\nmrb_get_args(mrb_state *mrb, const char *format, ...)\n```\n\nmruby\u5074\u304b\u3089\u6e21\u3055\u308c\u308b\u5f15\u6570\u306f<code>mrb_get_args</code>\u3092\u4f7f\u3063\u3066\u53d7\u3051\u53d6\u308a\u307e\u3059\u3002\n\n\u5f15\u6570\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u306f\u4ee5\u4e0b\u304c\u6709\u308b\u3088\u3046\u3067\u3059\u3002\n\n```c:src/class.c\n  format specifiers:\n\n    string  mruby type     C type                 note\n    ----------------------------------------------------------------------\n    o:      Object         [mrb_value]\n    C:      class/module   [mrb_value]\n    S:      String         [mrb_value]\n    A:      Array          [mrb_value]\n    H:      Hash           [mrb_value]\n    s:      String         [char*,mrb_int]        Receive two arguments.\n    z:      String         [char*]                NUL terminated string.\n    a:      Array          [mrb_value*,mrb_int]   Receive two arguments.\n    f:      Float          [mrb_float]\n    i:      Integer        [mrb_int]\n    b:      Boolean        [mrb_bool]\n    n:      Symbol         [mrb_sym]\n    d:      Data           [void*,mrb_data_type const] 2nd argument will \n                                                       be used to check\n                                                       data type so \n                                                       it won't be\n                                                       modified\n\n    &:      Block          [mrb_value]\n    *:      rest argument  [mrb_value*,mrb_int] Receive the rest of \n                                                the arguments as\n                                                an array.\n\n    |:      optional                            Next argument of '|' and\n                                                later are optional.\n\n    // \n    ?:      optional given [mrb_bool]           true if preceding\n                                                argument (optional) is\n                                                given.\n```\n#### Example\n\n\u4f8b\u3068\u3057\u3066\u3001\u307e\u305a\u306fmruby-time\u306e\u95a2\u6570\u3092\u5e7e\u3064\u304b\u898b\u3066\u307f\u307e\u3059\u3002\n\n```c:mrbgems/mruby-time/src/mruby-time.c\nstatic mrb_value\nmrb_time_local(mrb_state *mrb, mrb_value self)\n{\n  mrb_int ayear = 0, amonth = 1, aday = 1,\n          ahour = 0, amin = 0, asec = 0, ausec = 0;\n\n  mrb_get_args(mrb, \"i|iiiiii\",\n                &ayear, &amonth, &aday, &ahour, &amin, &asec, &ausec);\n\n  return mrb_time_wrap(mrb, mrb_class_ptr(self),\n          time_mktime(mrb, ayear, amonth, aday,\n                           ahour, amin, asec, ausec,\n                           MRB_TIMEZONE_LOCAL));\n}\n\n```\n\u3053\u3053\u3067\u306f\u5fc5\u9808\u306e\u5f15\u6570\u306f\u5148\u982d\u306eyear\u3060\u3051\u3067\u3001\u3042\u3068\u306f\u30aa\u30d7\u30b7\u30e7\u30ca\u30eb\u3068\u306a\u308b\u305f\u3081<code>\"i|iiiiii\"</code>\u3068\u3044\u3046\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\n\u5e74\u3001\u6708\u3001\u65e5\u3001\u6642\u3001\u5206\u3001\u79d2\u3001\u30de\u30a4\u30af\u30ed\u79d2\u304c\u305d\u308c\u305e\u308c<code>ayear,amonth...</code>\u3078\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\n\u540c\u3058\u304fmruby-time\u304b\u3089\n\n```c:mrbgems/mruby-time/src/mruby-time.c\nstatic mrb_value\nmrb_time_eq(mrb_state *mrb, mrb_value self)\n{\n  mrb_value other;\n  struct mrb_time *tm1, *tm2;\n  mrb_bool eq_p;\n\n  mrb_get_args(mrb, \"o\", &other);\n  tm1 = DATA_CHECK_GET_PTR(mrb, self, &mrb_time_type, struct mrb_time);\n  tm2 = DATA_CHECK_GET_PTR(mrb, other, &mrb_time_type, struct mrb_time);\n  eq_p = tm1 && tm2 && tm1->sec == tm2->sec && tm1->usec == tm2->usec;\n\n  return mrb_bool_value(eq_p);\n}\n```\n\u3053\u3053\u3067\u306fTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u540c\u58eb\u306e\u6bd4\u8f03\u3092\u3059\u308b\u306e\u3067\u3059\u304c\u3001\u6bd4\u8f03\u76f8\u624b\u306eTime\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308b\u306e\u306b\u3001\u300c\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u300d\u3092\u8868\u3059<code>\"o\"</code>\u3092\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3068\u3057\u3066\u6e21\u3057\u3066\u3044\u307e\u3059\u3002\u5f15\u6570\u3068\u3057\u3066\u6e21\u3055\u308c\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304cother\u3078\u4ee3\u5165\u3055\u308c\u307e\u3059\u3002\n\n\n\u6700\u5f8c\u306b\u3001mruby-fiber\u306b\u304a\u3051\u308b\u4f8b\u3067\u3059\u3002\n\n```c:mrbgems/mruby-fiber/src/fiber.c\nstatic mrb_value\nfiber_yield(mrb_state *mrb, mrb_value self)\n{\n  mrb_value *a; // \u5f15\u6570\u306e\u914d\u5217\u3078\u306e\u30dd\u30a4\u30f3\u30bf\u304c\u5165\u308b\u5909\u6570\n  mrb_int len;  // \u5f15\u6570\u306e\u6570\u304c\u5165\u308b\u5909\u6570\n\n  mrb_get_args(mrb, \"*\", &a, &len);\n  return mrb_fiber_yield(mrb, len, a);\n}\n```\n\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b<code>\"*\"</code>\u3092\u6307\u5b9a\u3057\u3066\u3001\u5909\u6570<code>a</code>\u306b\u5f15\u6570\u306e\u914d\u5217\u3092\u3001\u5909\u6570<code>len</code>\u306b\u5f15\u6570\u306e\u6570\u3092\u53d7\u3051\u53d6\u3063\u3066\u3044\u307e\u3059\u3002\n\n### \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306b\u5024\u3092\u4ee3\u5165\u3059\u308b\n\n```c:src/valiable.c\nvoid\nmrb_iv_set(mrb_state *mrb, mrb_value obj, mrb_sym sym, mrb_value v)\n```\n\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- mrb_value: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3078\u306e\u53c2\u7167\n- sym: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540d\u3092\u8868\u3059\u30b7\u30f3\u30dc\u30eb\n- v: \u8a2d\u5b9a\u3059\u308b\u5024\n\n#### Example\n\u4f8b\u3068\u3057\u3066Hash\u30af\u30e9\u30b9\u306b\u3042\u308b\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```c:src/hash.c\nstatic mrb_value\nmrb_hash_set_default(mrb_state *mrb, mrb_value hash)\n{\n  mrb_value ifnone;\n\n  mrb_get_args(mrb, \"o\", &ifnone);\n  mrb_hash_modify(mrb, hash);\n  mrb_iv_set(mrb, hash, mrb_intern_lit(mrb, \"ifnone\"), ifnone);\n  RHASH(hash)->flags &= ~(MRB_HASH_PROC_DEFAULT);\n\n  return ifnone;\n}\n```\n\u6700\u521d\u306b<code>mrg_get_args</code>\u3067\u5909\u6570<code>ifnone</code>\u306b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53d7\u3051\u53d6\u308a\u3001\u81ea\u8eab(<code>hash</code>)\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540d<code>ifnone</code>\u306b\u3001\u53d7\u3051\u53d6\u3063\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4ee3\u5165\u3057\u3066\u3044\u307e\u3059\u3002\n\n###\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u306e\u5024\u3092\u5f97\u308b\n\n```c:valiable.c\nmrb_value\nmrb_iv_get(mrb_state *mrb, mrb_value obj, mrb_sym sym)\n```\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- obj: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u3092\u4fdd\u6301\u3057\u3066\u3044\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n- sym: \u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u5909\u6570\u540d\u306e\u30b7\u30f3\u30dc\u30eb\n- \u623b\u308a\u5024: mruby\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n\n###C\u306e\u6587\u5b57\u5217(char\u306e\u914d\u5217)\u304b\u3089String\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u5f97\u308b\n\n```\nmrb_value\nmrb_str_new_cstr(mrb_state *mrb, const char *p)\n```\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- p: char\u306e\u914d\u5217\u3078\u306e\u53c2\u7167\n- \u623b\u308a\u5024: String\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n###String\u30af\u30e9\u30b9\u306e\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089C\u306e\u6587\u5b57\u5217(char\u306e\u914d\u5217)\u3092\u5f97\u308b\n\n```c:src/string.c\nchar *\nmrb_str_to_cstr(mrb_state *mrb, mrb_value str0)\n```\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- str0: String\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n- \u623b\u308a\u5024: char\u306e\u914d\u5217\u3078\u306e\u53c2\u7167\n\n###C\u306e\u6570\u5024\u304b\u3089mruby\u306e\u6570\u5024\u3092\u5f97\u308b\n\n```c:mruby.h\nmrb_fixnum_value(c)\n```\n- c: C\u306e\u6570\u5024(int, float, double \u3044\u305a\u308c\u3082\u53ef\uff1f)\n- \u623b\u308a\u5024: Fixnum\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n###C\u306e\u6587\u5b57\u5217\u304b\u3089\u30b7\u30f3\u30dc\u30eb\u3092\u5f97\u308b\n\n```c:mruby.h\nmrb_intern_lit(mrb, lit)\n```\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf\n- lit: C\u306e\u6587\u5b57\u5217\n- \u623b\u308a\u5024: Symbol\u30af\u30e9\u30b9\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\n\n###mruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\n\n```c:mrb_funcall\nmrb_funcall(mrb, obj, \"\u30e1\u30bd\u30c3\u30c9\u540d\", \u5f15\u6570\u306e\u6570, \u5f15\u65701, \u5f15\u65702 ...)\n```\n\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf(mrb_state *)\n- obj: \u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3002(mrb_value)\n- \"\u30e1\u30bd\u30c3\u30c9\u540d\": \u547c\u3073\u51fa\u3059\u30e1\u30bd\u30c3\u30c9\u540d\u3002\u6587\u5b57\u5217\u3067\u6e21\u3059\u3002(char*)\n- \u5f15\u6570\u306e\u6570: \u30e1\u30bd\u30c3\u30c9\u306b\u6e21\u3059\u5f15\u6570\u306e\u6570\u3002(int)\n- \u5f15\u65701, \u5f15\u65702, ....: \u300c\u5f15\u6570\u306e\u6570\u300d\u3067\u6307\u5b9a\u3057\u305f\u5206\u3060\u3051\u5f15\u6570\u3092\u5217\u6319\u3059\u308b\u3002(mrb_value)\n\nC\u5074\u304b\u3089mruby\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3002\u7b2c2\u5f15\u6570\u306f\u30e1\u30bd\u30c3\u30c9\u547c\u3073\u51fa\u3057\u306e\u5bfe\u8c61\u3068\u306a\u308b\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u7b2c3\u5f15\u6570\u306b\u30e1\u30bd\u30c3\u30c9\u540d\u3092\u6587\u5b57\u5217\u3067\u6e21\u3059\u3002\u7b2c4\u5f15\u6570\u306f\u3001\u305d\u306e\u5f8c\u306b\u7d9a\u304f\u5f15\u6570\u306e\u6570\u3067\u3001\u79fb\u884c\u3001\u6e21\u3055\u308c\u305f\u5f15\u6570\u306e\u6570\u3060\u3051\u5f15\u6570\u304c\u7d9a\u304f\u3002\n\n###mruby\u306e\u30a8\u30e9\u30fc\u3092\u767a\u751f\u3055\u305b\u308b\n\n```c:mrb_raise\nmrb_raise(mrb, \u30a8\u30e9\u30fc\u30af\u30e9\u30b9, \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\");\n```\n\n- mrb: mrb_state\u3078\u306e\u30dd\u30a4\u30f3\u30bf(mrb_state *)\n- \u30a8\u30e9\u30fc\u30af\u30e9\u30b9: mruby\u306e\u30a8\u30e9\u30fc\u3092\u8868\u73fe\u3059\u308b\u30af\u30e9\u30b9()\n- \"\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\": \u30a8\u30e9\u30fc\u767a\u751f\u6642\u306b\u8868\u793a\u3059\u308b\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\n\n\u30a8\u30e9\u30fc\u30af\u30e9\u30b9\u306e\u6240\u306f\u3001<code>mrb_class_get(\"\u30af\u30e9\u30b9\u540d\u6587\u5b57\u5217\")</code>\u3092\u4f7f\u3063\u3066\u5f97\u3089\u308c\u305f\u30af\u30e9\u30b9\u3092\u6e21\u3059\u3002\n\u3061\u306a\u307f\u306b\u30a8\u30e9\u30fc\u306e\u30af\u30e9\u30b9\u306b\u95a2\u3057\u3066\u306f<code>include/mruby.h</code>\u5185\u306e\u30de\u30af\u30ed\u3067\u5b9a\u7fa9\u3057\u3066\u3042\u308b\u306e\u3067\u3001\u3053\u308c\u3092\u4f7f\u3046\u307f\u305f\u3044\u3002\n\n```c:include/mruby.h\n/* macros to get typical exception objects\n   note:\n   + those E_* macros requires mrb_state* variable named mrb.\n   + exception objects obtained from those macros are local to mrb\n*/\n#define E_RUNTIME_ERROR        (mrb_class_get(mrb, \"RuntimeError\"))\n#define E_TYPE_ERROR           (mrb_class_get(mrb, \"TypeError\"))\n#define E_ARGUMENT_ERROR       (mrb_class_get(mrb, \"ArgumentError\"))\n#define E_INDEX_ERROR          (mrb_class_get(mrb, \"IndexError\"))\n#define E_RANGE_ERROR          (mrb_class_get(mrb, \"RangeError\"))\n#define E_NAME_ERROR           (mrb_class_get(mrb, \"NameError\"))\n#define E_NOMETHOD_ERROR       (mrb_class_get(mrb, \"NoMethodError\"))\n#define E_SCRIPT_ERROR         (mrb_class_get(mrb, \"ScriptError\"))\n#define E_SYNTAX_ERROR         (mrb_class_get(mrb, \"SyntaxError\"))\n#define E_LOCALJUMP_ERROR      (mrb_class_get(mrb, \"LocalJumpError\"))\n#define E_REGEXP_ERROR         (mrb_class_get(mrb, \"RegexpError\"))\n\n#define E_NOTIMP_ERROR         (mrb_class_get(mrb, \"NotImplementedError\"))\n#define E_FLOATDOMAIN_ERROR    (mrb_class_get(mrb, \"FloatDomainError\"))\n\n#define E_KEY_ERROR            (mrb_class_get(mrb, \"KeyError\"))\n```\n\n####Example\n\n\u4f8b\u3068\u3057\u3066string\u30af\u30e9\u30b9\u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308bmrb_str_new_static\u95a2\u6570\u3092\u898b\u3066\u307f\u307e\u3059\u3002\n\n```c:src/string.c\nmrb_value\nmrb_str_new_static(mrb_state *mrb, const char *p, size_t len)\n{\n  struct RString *s;\n\n  if (len >= MRB_INT_MAX) {\n    mrb_raise(mrb, E_ARGUMENT_ERROR, \"string size too big\");\n  }\n\n ..\n}\n```\n\u6e21\u3055\u308c\u305f\u6587\u5b57\u5217\u306e\u9577\u3055\u304c<code>MRB_INT_MAX</code>\u4ee5\u4e0a\u3060\u3063\u305f\u5834\u5408\u306b\u4f8b\u5916\u3092\u767a\u751f\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u307e\u305f\u3001\u30a8\u30e9\u30fc\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u52d5\u7684\u306b\u751f\u6210\u3059\u308b\u70ba\u306e<code>mrb_raisef</code>\u3082\u7528\u610f\u3057\u3066\u3042\u308a\u307e\u3057\u305f\u3002\n\n```c:src/string.c\nmrb_raisef(mrb, E_ARGUMENT_ERROR, \"wrong number of arguments (%S for 1)\", mrb_fixnum_value(argc));\n```\n\u540c\u3058\u304fstring.c\u5185\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u3057\u305f\u3002\u5024\u3092\u57cb\u3081\u8fbc\u307f\u305f\u3044\u4f4d\u7f6e\u306b<code>%S</code>\u3092\u57cb\u3081\u8fbc\u3093\u3067\u3001\u5f15\u6570\u3068\u3057\u3066\u5024\u3092\u6e21\u3059\u3068\u3001mrb_value\u306a\u3089\u3088\u3057\u306a\u306b\u8868\u793a\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n\n\u3068\u308a\u3042\u3048\u305a\u4eca\u306f\u3053\u3053\u307e\u3067...\u306a\u306b\u304b\u89e3\u3063\u305f\u3089\u307e\u305f\u8ffd\u8a18\u3057\u307e\u3059\u3002\u3002\n", "tags": ["\u30c4\u30ca", "mqtt", "mruby"]}