{"context": "\n\nadvent calendar 2\u65e5\u76ee\u3000^^;\nadvent calendar\u304c\u306a\u3044\u306e\u3082\u5bc2\u3057\u3044\u306e\u3067\u3002\u3002\u3002\n\u95a2\u6570\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u3068\u3044\u3046\u304bfold\u3068unfold\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u69cb\u6587\u306fPython\u3067\u66f8\u304d\u307e\u3059\u3002\n\u5185\u5bb9\uff1a\n\u30fb Python\u3067List\u578b\u4e0a\u306efold\u3092\u5b9a\u7fa9\u3059\u308b\n\u30fb sum,length\u3092\u5b9a\u7fa9\u3059\u308b\n\u30fb \u30ea\u30b9\u30c8\u306e\u5e73\u5747\u3092\u6c42\u3081\u308baverage\u3092\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\n\u5bfe\u8c61\uff1a\n fold\u3068\u304breduce\u3063\u3066\u306a\u306b\u306b\u4f7f\u3046\u306e\u3068\u3044\u3046\u4eba\n\nfold\uff1f\nfold\u3068\u3044\u3046\u95a2\u6570\u3092\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u304b\u3002\nfold\u306f\u8a33\u3059\u3068\u3001\u3001\u3001\n\n\u305d\u3046\u3001fold\u95a2\u6570\u306f\u95a2\u6570\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6587\u8108\u3067\u3088\u304f\u77e5\u3089\u308c\u3066\u304a\u308a\u3001\u6298\u308a\u7573\u307f\u95a2\u6570\u3068\u3044\u3046\u540d\u3067\u3082\u547c\u3070\u308c\u305f\u308a\u3059\u308b\u30a2\u30ec\u3067\u3059\u3002\n\u95a2\u6570\u578b\u8a00\u8a9e\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u304f\u3066\u3082\u3001Python\u3067\u306freduce\u3001Ruby\u3067\u306finject\u3068\u3044\u3063\u305f\u9055\u3046\u547c\u3073\u540d\u3067\u51fa\u4f1a\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n\u5b9f\u969b\u3001\u6700\u8fd1\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306a\u304f\u3066\u3082\u3088\u304f\u53d6\u308a\u5165\u308c\u3089\u3066\u3044\u3066\u3001\n\n\n\n\u8a00\u8a9e\nfold\u306e\u540d\u524d\n\n\n\n\nC++\naccumulate\n\n\nRuby,JavaScript\ninject\n\n\nPython,Perl\nreduce\n\n\n\n\u3068\u3044\u3046\u611f\u3058\u306e\u3088\u3046\u3067\u3059\u3002\n\u3055\u3066\u3001\u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306a\u306e\u3067fold\u306f\u7d20\u6674\u3089\u3057\u3044\u306b\u9055\u3044\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u3001\u5b9f\u969b\u306bfold\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nfold\u306e\u5b9a\u7fa9 - ( List\u578b\u306e\u5834\u5408 )\nList\u578b\u3068\u3044\u3046\u914d\u5217\u306e\u3088\u3046\u306a\u578b\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066fold\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u8a71\u3092\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305aList\u578b\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u3001\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u914d\u5217\u3067\u3001head\u95a2\u6570\u3068tail\u95a2\u6570\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30ea\u30b9\u30c8\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002head\u95a2\u6570\u306f\u30ea\u30b9\u30c8\u306e\u5148\u982d\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001tail\u95a2\u6570\u306f\u30ea\u30b9\u30c8\u306e\u5f8c\u534a\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e2d\u8eab\u304c\u5168\u3066\u6574\u6570\u3067\u3042\u308b\u3088\u3046\u306a\u30ea\u30b9\u30c8\u3092List\u578b\u3068\u3057\u307e\u3059\u3002\n\nhead,tail,empty\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\ndef head(l):\n    return l[0]\n\n\ndef tail(l):\n    return l[1:]\n\n\ndef empty(l):\n\n    if l == []:\n\n        return True\n\n    else:\n\n        return False\n\n\u305d\u308c\u3067\u306f\u3053\u308c\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066List\u578b\u306b\u304a\u3051\u308bfold\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n# fold \u306e\u5b9a\u7fa9\ndef fold ( f , e , lst ):\n\n  if empty(lst):\n\n    return e\n\n  else:\n\n    return f( head(lst) , fold( f, e , tail(lst) ) )\n\nfold\u306f\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u9ad8\u968e\u95a2\u6570\u3067\u3001\u95a2\u6570f\u3001\u4f55\u304b\u306e\u578b\u306ee\u3001List\u578b\u306exs\u3092\u5f15\u6570\u306b\u53d6\u308a\u307e\u3059\u3002\n\u4e00\u898b\u3067\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u5177\u4f53\u4f8b\u3092\u3044\u304f\u3064\u304b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\nsum\u3092fold\u3067\u66f8\u304f\n\u3067\u306f\u3001\u6574\u6570\u3092\u8981\u7d20\u306b\u3082\u3064\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u548c\u3092\u6c42\u3081\u308bsum\u95a2\u6570\u3092fold\u306b\u3088\u3063\u3066\u5b9a\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3075\u3064\u3046\u306b\u66f8\u304f\u3068\u3001\ndef sum_naive (lst):\n\n  s = 0\n\n  for i in lst :\n    s += i\n\n  return s\n\n\u3053\u308c\u3092fold\u95a2\u6570\u3092\u7528\u3044\u308b\u3068\u3001\u3001\u3001\ndef sum_fold (lst):\n\n    return fold ( (lambda x,y : x + y) , 0 , lst )\n\n\u3068\u66f8\u3051\u307e\u3059\u3002\nfold\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u898b\u308b\u3068\u3001sum\u306f\u7d50\u5c40\u306e\u3068\u3053\u308d\ndef sum_rec (lst):\n\n  if empty(lst):\n\n    return 0\n\n  else:\n\n    return head(lst) + sum_rec(tail(lst))\n\n\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\nsum\u95a2\u6570\u306b\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001sum\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u5c55\u958b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\n\n\u3068\u9806\u756a\u306b\u8a55\u4fa1\u3057\u3066\u548c\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\nlength\u3092fold\u3067\u66f8\u304f\n\u305d\u308c\u3067\u306f\u3082\u3046\u3072\u3068\u3064\u3001List\u578b\u306e\u9577\u3055\u3092\u6c42\u3081\u308blength\u95a2\u6570\u3092fold\u3067\u66f8\u304d\u307e\u3059\u3002\ndef length_fold (lst):\n\n  return fold ( (lambda x,y : 1 + y) , 0 , lst )\n\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306b\u518d\u5e30\u95a2\u6570\u306b\u66f8\u304d\u4e0b\u3059\u3068\u3001\ndef length_rec (lst):\n\n  if empty(lst):\n\n    return 0\n\n  else:\n\n    return 1 + length_rec(tail (lst))\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\u3053\u308c\u306b\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001\n\n\u3068\u5c55\u958b\u3057\u3001\n\n\u3068\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\naverage\u3092fold\u3067\u66f8\u304f\n\u305d\u308c\u3067\u306f\u6700\u5f8c\u306b\u3001\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u5e73\u5747\u3092\u6c42\u3081\u308baverage\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u308c\u307e\u3067\u306b\u5b9a\u7fa9\u3057\u305fsum_fold\u3068length_fold\u3092\u7528\u3044\u308b\u3068\u3001\u3001\u3001\ndef average(lst):\n\n  def div (s,l):\n    return s * 1.0 / l\n\n  return div ( sum_fold(lst) , length_fold(lst) )\n\n\u3068\u66f8\u3051\u307e\u3059\u304c\u3001\u30ea\u30b9\u30c8\u306e\u548c\u3092\u8a08\u7b97\u3057\u3066\u304b\u3089\u30ea\u30b9\u30c8\u306e\u9577\u3055\u3092\u6c42\u3081\u3066\u3044\u308b\u306e\u3067\u660e\u3089\u304b\u306b\u7121\u99c4\u304c\u3042\u308a\u307e\u3059\u3002\n\u3053\u306eaverage\u95a2\u6570\u306e\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u306e\u306b\u4f7f\u3048\u308b\u624b\u6cd5\u3068\u3057\u3066\u3001\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb(banana-split law)\u306f\u3001f\u306efold\u3068g\u306efold\u306e\u7d44\u3092\u8a08\u7b97\u3057\u305f\u3044\u306a\u3089\u3001\u4e00\u56de\u3067\u6e08\u307e\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u305e\uff01\u3068\u8a00\u3063\u3066\u3044\u307e\u3059\u3002\n\u3053\u308c\u3092\u4f7f\u3046\u3068average\u306f\u3001\ndef average2(lst):\n\n  def h (a,xy):\n    (x,y) = xy\n    return (a+x,1+y)\n\n  def div ((s,l)):\n    return s * 1.0 / l\n\n  return div ( fold ( h , (0,0), lst ) )\n\n\u3068\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u3053\u308c\u306b\u3001\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001\u3001\u3001\n\n\u3068\u5c55\u958b\u3057\u3066\u3044\u3063\u3066\u3001\n\n\u3068\u8a55\u4fa1\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n(+\u3092O\u3067\u56f2\u3063\u3066\u308b\u8a18\u53f7\u306f\u3001average2\u4e2d\u306e\u95a2\u6570h\u3092\u4e2d\u7f6e\u3067\u66f8\u3044\u305f\u3082\u306e\u3067\u3059)\n\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u306e\u304a\u304b\u3052\u3067\u3001\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u5e73\u5747\u3092\u52b9\u7387\u826f\u304f\u6c42\u3081\u308b\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u307e\u3057\u305f\uff01\n\n\u7d50\u5c40\u3001fold\u306e\u826f\u3055\u306f\uff1f\nfold\u306f\u30c7\u30fc\u30bf\u578b\u4e0a\u3067\u306e\u7e70\u308a\u8fd4\u3057\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7e70\u308a\u8fd4\u3057\u306a\u306e\u3067\u3001fold\u3067\u66f8\u3051\u308b\u3053\u3068\u306f\u5f53\u7136for\u6587\u3092\u4f7f\u3063\u3066\u3082\u66f8\u3051\u307e\u3059\u3002\nfold\u306b\u3057\u304b\u51fa\u6765\u306a\u3044\u3053\u3068\u306f\u305f\u3076\u3093\u3042\u308a\u307e\u305b\u3093\u3002(\u305f\u3076\u3093)\nfold\u306e\u826f\u3044\u3068\u3053\u308d\u306f\u3001\u7e70\u308a\u8fd4\u3057\u3092\u542b\u3080\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u958b\u767a\u3059\u308b\u3068\u304d\u306e\u898b\u901a\u3057\u306e\u826f\u3055\u306b\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306esum\u3068length\u306e\u3088\u3046\u306b\u3001\u7e70\u308a\u8fd4\u3057\u64cd\u4f5c\u304c2\u3064\u3042\u3063\u3066\u305d\u308c\u3089\u30921\u3064\u306b\u4f75\u305b\u308b\u3068\u3044\u3046\u5834\u9762\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\nfor\u6587\u3067\u306f\u3001for\u306e\u4e2d\u8eab\u3092\u8aad\u3093\u3067\u7406\u89e3\u3057\u305f\u4e0a\u3067\u65b0\u3057\u3044for\u6587\u3092\u66f8\u304d\u76f4\u3055\u306a\u3044\u3068\u306a\u308a\u307e\u305b\u3093\u3002sum\u3084length\u306e\u3088\u3046\u306b\u7c21\u5358\u306a\u3068\u304d\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u3082\u3046\u5c11\u3057\u8907\u96d1\u306b\u306a\u308b\u3068\u5927\u5909\u306a\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\n\u7247\u3084\u3001fold\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u3002\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3067\u898b\u305f\u3088\u3046\u306b\u3001\u6a5f\u68b0\u7684\u306b2\u3064\u306e\u7e70\u308a\u8fd4\u3057\u3092\u4f75\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3054\u3044\uff01\n\n\u304a\u308f\u308a\u306b\n\u4eca\u56de\u904a\u3093\u3060\u3001fold\u95a2\u6570\u306ffoldr\u3068\u3082\u547c\u3070\u308c\u308b\u95a2\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u53f3\u5074\u304b\u3089\u8a55\u4fa1\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u306b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002fold(r)\u306f\u3044\u308d\u3044\u308d\u7814\u7a76\u3055\u308c\u3066\u3044\u3066\u9762\u767d\u3044\u306e\u3067\u3001\u3053\u306e\u6a5f\u4f1a\u306b\u8208\u5473\u304b\u89aa\u3057\u307f\u3092\u6301\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\u6b21\u306fList\u578b\u4ee5\u5916\u306b\u304a\u3051\u308bfold\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3067\u304d\u305f\u3089\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u99c4\u6587\u5931\u793c\u3057\u307e\u3057\u305f\u3002^^;\n\n\u30d7\u30ed\u30b0\u30e9\u30e0\ndef fold ( f , e , lst ):\n  if empty(lst):\n    return e\n  else:\n    return f( head(lst) , fold( f, e , tail(lst) ) )\n\ndef head(l):\n    return l[0]\n\ndef tail(l):\n    return l[1:]\n\ndef empty(l):\n    if l == []:\n        return True\n    else:\n        return False\n\n\ndef sum_naive (lst):\n  s = 0\n  for i in lst :\n    s += i\n  return s\n\ndef sum_fold (lst):\n    return fold ( (lambda x,y : x + y) , 0 , lst )\n\ndef sum_rec (lst):\n  if empty(lst):\n    return 0\n  else:\n    return head(lst) + sum_rec(tail(lst))\n\n\nprint sum_naive([1,2,3,4,5])\nprint sum_fold([1,2,3,4,5])\nprint sum_rec([1,2,3,4,5])\n\n\ndef length_rec (lst):\n  if empty(lst):\n    return 0\n  else:\n    return 1 + length_rec(tail (lst))\n\ndef length_fold (lst):\n  return fold ( (lambda x,y : 1 + y) , 0 , lst )\n\nprint length_fold([1,2,3,4,5])\nprint length_rec([1,2,3,4,5])\n\ndef average(lst):\n  def div (s,l):\n    return s * 1.0 / l\n  return div ( sum_fold(lst) , length_fold(lst) )\n\ndef average2(lst):\n  def h (a,xy):\n    (x,y) = xy\n    return (a+x,1+y)\n\n  def div ((s,l)):\n    return s * 1.0 / l\n\n  return div ( fold ( h , (0,0), lst ) )\n\n\nprint average([1,2,3,4,5])\nprint average2([1,2,3,4,5])\n\n\n# advent calendar 2\u65e5\u76ee\u3000^^;\n\nadvent calendar\u304c\u306a\u3044\u306e\u3082\u5bc2\u3057\u3044\u306e\u3067\u3002\u3002\u3002\n\u95a2\u6570\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u3001\u3068\u3044\u3046\u304bfold\u3068unfold\u306b\u3064\u3044\u3066\u66f8\u304d\u307e\u3059\u3002\n\u69cb\u6587\u306fPython\u3067\u66f8\u304d\u307e\u3059\u3002\n\n\u5185\u5bb9\uff1a\n\u30fb Python\u3067List\u578b\u4e0a\u306efold\u3092\u5b9a\u7fa9\u3059\u308b\n\u30fb sum,length\u3092\u5b9a\u7fa9\u3059\u308b\n\u30fb \u30ea\u30b9\u30c8\u306e\u5e73\u5747\u3092\u6c42\u3081\u308baverage\u3092\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3059\u308b\n\n\u5bfe\u8c61\uff1a\n fold\u3068\u304breduce\u3063\u3066\u306a\u306b\u306b\u4f7f\u3046\u306e\u3068\u3044\u3046\u4eba\n\n# fold\uff1f\n\nfold\u3068\u3044\u3046\u95a2\u6570\u3092\u805e\u3044\u305f\u3053\u3068\u304c\u3042\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\nfold\u306f\u8a33\u3059\u3068\u3001\u3001\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-17 20.27.20.png](https://qiita-image-store.s3.amazonaws.com/0/112358/9be3d6a6-401a-caee-93de-e1115a1398e3.png)\n\n\u305d\u3046\u3001fold\u95a2\u6570\u306f\u95a2\u6570\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306e\u6587\u8108\u3067\u3088\u304f\u77e5\u3089\u308c\u3066\u304a\u308a\u3001\u6298\u308a\u7573\u307f\u95a2\u6570\u3068\u3044\u3046\u540d\u3067\u3082\u547c\u3070\u308c\u305f\u308a\u3059\u308b\u30a2\u30ec\u3067\u3059\u3002\n\n\u95a2\u6570\u578b\u8a00\u8a9e\u3092\u4f7f\u3063\u305f\u3053\u3068\u304c\u306a\u304f\u3066\u3082\u3001Python\u3067\u306freduce\u3001Ruby\u3067\u306finject\u3068\u3044\u3063\u305f\u9055\u3046\u547c\u3073\u540d\u3067\u51fa\u4f1a\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u304b\u3082\u77e5\u308c\u307e\u305b\u3093\u3002\n\n\u5b9f\u969b\u3001\u6700\u8fd1\u306e\u95a2\u6570\u578b\u8a00\u8a9e\u3067\u306a\u304f\u3066\u3082\u3088\u304f\u53d6\u308a\u5165\u308c\u3089\u3066\u3044\u3066\u3001\n\n| \u8a00\u8a9e               |    fold\u306e\u540d\u524d |\n| :-:               | :-:          |\n| C++               | accumulate   |\n| Ruby,JavaScript   | inject       |\n| Python,Perl       | reduce       |\n\n\u3068\u3044\u3046\u611f\u3058\u306e\u3088\u3046\u3067\u3059\u3002\n\n\u3055\u3066\u3001\u3044\u308d\u3044\u308d\u306a\u8a00\u8a9e\u306b\u642d\u8f09\u3055\u308c\u3066\u3044\u308b\u95a2\u6570\u306a\u306e\u3067fold\u306f\u7d20\u6674\u3089\u3057\u3044\u306b\u9055\u3044\u3042\u308a\u307e\u305b\u3093\u3002\u305d\u3046\u3044\u3046\u308f\u3051\u3067\u3001\u5b9f\u969b\u306bfold\u3092\u4f7f\u3063\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n# fold\u306e\u5b9a\u7fa9 - ( List\u578b\u306e\u5834\u5408 )\n\nList\u578b\u3068\u3044\u3046\u914d\u5217\u306e\u3088\u3046\u306a\u578b\u3092\u30d9\u30fc\u30b9\u306b\u3057\u3066fold\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u8a71\u3092\u3057\u305f\u3044\u306e\u3067\u3001\u307e\u305aList\u578b\u306b\u3064\u3044\u3066\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n\u3053\u3053\u3067\u306f\u3001\u30e9\u30f3\u30c0\u30e0\u30a2\u30af\u30bb\u30b9\u3067\u304d\u306a\u3044\u914d\u5217\u3067\u3001head\u95a2\u6570\u3068tail\u95a2\u6570\u304c\u6e96\u5099\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u30ea\u30b9\u30c8\u3068\u547c\u3076\u3053\u3068\u306b\u3057\u307e\u3059\u3002head\u95a2\u6570\u306f\u30ea\u30b9\u30c8\u306e\u5148\u982d\u8981\u7d20\u3092\u53d6\u308a\u51fa\u3057\u3001tail\u95a2\u6570\u306f\u30ea\u30b9\u30c8\u306e\u5f8c\u534a\u3092\u53d6\u3063\u3066\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u4e2d\u8eab\u304c\u5168\u3066\u6574\u6570\u3067\u3042\u308b\u3088\u3046\u306a\u30ea\u30b9\u30c8\u3092List\u578b\u3068\u3057\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-18 0.31.03.png](https://qiita-image-store.s3.amazonaws.com/0/112358/313e3d47-3896-0a43-8972-cac8eeaec0cb.png)\n\nhead,tail,empty\u3092\u5b9a\u7fa9\u3057\u3066\u304a\u304d\u307e\u3059\u3002\n\n```python:\ndef head(l):\n    return l[0]\n\n\ndef tail(l):\n    return l[1:]\n\n\ndef empty(l):\n\n    if l == []:\n\n        return True\n\n    else:\n\n        return False\n```\n\n\u305d\u308c\u3067\u306f\u3053\u308c\u3092\u5ff5\u982d\u306b\u304a\u3044\u3066List\u578b\u306b\u304a\u3051\u308bfold\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```python:\n# fold \u306e\u5b9a\u7fa9\ndef fold ( f , e , lst ):\n\n  if empty(lst):\n\n    return e\n\n  else:\n\n    return f( head(lst) , fold( f, e , tail(lst) ) )\n```\n\nfold\u306f\u95a2\u6570\u3092\u5f15\u6570\u306b\u53d6\u308b\u9ad8\u968e\u95a2\u6570\u3067\u3001\u95a2\u6570f\u3001\u4f55\u304b\u306e\u578b\u306ee\u3001List\u578b\u306exs\u3092\u5f15\u6570\u306b\u53d6\u308a\u307e\u3059\u3002\n\u4e00\u898b\u3067\u306f\u3088\u304f\u5206\u304b\u3089\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u5177\u4f53\u4f8b\u3092\u3044\u304f\u3064\u304b\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\n## sum\u3092fold\u3067\u66f8\u304f\n\n\u3067\u306f\u3001\u6574\u6570\u3092\u8981\u7d20\u306b\u3082\u3064\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u548c\u3092\u6c42\u3081\u308bsum\u95a2\u6570\u3092fold\u306b\u3088\u3063\u3066\u5b9a\u3081\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3075\u3064\u3046\u306b\u66f8\u304f\u3068\u3001\n\n```python:\ndef sum_naive (lst):\n  \n  s = 0\n\n  for i in lst :\n    s += i\n\n  return s\n```\n\n\u3053\u308c\u3092fold\u95a2\u6570\u3092\u7528\u3044\u308b\u3068\u3001\u3001\u3001\n\n```python:\ndef sum_fold (lst):\n\n    return fold ( (lambda x,y : x + y) , 0 , lst )\n```\n\n\u3068\u66f8\u3051\u307e\u3059\u3002\n\nfold\u95a2\u6570\u306e\u5b9a\u7fa9\u3092\u898b\u308b\u3068\u3001sum\u306f\u7d50\u5c40\u306e\u3068\u3053\u308d\n\n```python:\ndef sum_rec (lst):\n\n  if empty(lst):\n\n    return 0\n\n  else:\n\n    return head(lst) + sum_rec(tail(lst))\n```\n\n\u3092\u66f8\u3044\u3066\u3044\u308b\u306e\u3068\u540c\u3058\u306b\u306a\u308a\u307e\u3059\u3002\n\nsum\u95a2\u6570\u306b\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001sum\u3092\u518d\u5e30\u7684\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u3067\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-18 1.51.20.png](https://qiita-image-store.s3.amazonaws.com/0/112358/f96bed48-37f7-d092-757d-0614b70bee8e.png)\n\n\u3068\u3044\u3046\u3088\u3046\u306b\u5c55\u958b\u3057\u3066\u3044\u304d\u307e\u3059\u3002\u305d\u3057\u3066\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-18 2.01.57.png](https://qiita-image-store.s3.amazonaws.com/0/112358/5f1070c4-4e26-8445-7f04-09566f5d7d79.png)\n\n\u3068\u9806\u756a\u306b\u8a55\u4fa1\u3057\u3066\u548c\u3092\u8a08\u7b97\u3057\u307e\u3059\u3002\n\n## length\u3092fold\u3067\u66f8\u304f\n\n\u305d\u308c\u3067\u306f\u3082\u3046\u3072\u3068\u3064\u3001List\u578b\u306e\u9577\u3055\u3092\u6c42\u3081\u308blength\u95a2\u6570\u3092fold\u3067\u66f8\u304d\u307e\u3059\u3002\n\n```python:\ndef length_fold (lst):\n\n  return fold ( (lambda x,y : 1 + y) , 0 , lst )\n```\n\n\u5148\u307b\u3069\u3068\u540c\u69d8\u306b\u518d\u5e30\u95a2\u6570\u306b\u66f8\u304d\u4e0b\u3059\u3068\u3001\n\n```python:\ndef length_rec (lst):\n\n  if empty(lst):\n\n    return 0\n\n  else:\n\n    return 1 + length_rec(tail (lst))\n```\n\n\u3068\u306a\u308a\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-18 2.13.58.png](https://qiita-image-store.s3.amazonaws.com/0/112358/70f901a0-8129-b8ff-8efa-da912ad30176.png)\n\n\u3068\u5c55\u958b\u3057\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-11-18 2.15.22.png](https://qiita-image-store.s3.amazonaws.com/0/112358/8b697ba0-3c3d-7436-6ca4-0099a83ba101.png)\n\n\u3068\u8a55\u4fa1\u3057\u307e\u3059\u3002\n\n## average\u3092fold\u3067\u66f8\u304f\n\n\u305d\u308c\u3067\u306f\u6700\u5f8c\u306b\u3001\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u5e73\u5747\u3092\u6c42\u3081\u308baverage\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n\u3053\u308c\u307e\u3067\u306b\u5b9a\u7fa9\u3057\u305fsum_fold\u3068length_fold\u3092\u7528\u3044\u308b\u3068\u3001\u3001\u3001\n\n```python:\ndef average(lst):\n\n  def div (s,l):\n    return s * 1.0 / l\n\n  return div ( sum_fold(lst) , length_fold(lst) )\n```\n\n\u3068\u66f8\u3051\u307e\u3059\u304c\u3001\u30ea\u30b9\u30c8\u306e\u548c\u3092\u8a08\u7b97\u3057\u3066\u304b\u3089\u30ea\u30b9\u30c8\u306e\u9577\u3055\u3092\u6c42\u3081\u3066\u3044\u308b\u306e\u3067\u660e\u3089\u304b\u306b\u7121\u99c4\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u3053\u306eaverage\u95a2\u6570\u306e\u52b9\u7387\u3092\u6539\u5584\u3059\u308b\u306e\u306b\u4f7f\u3048\u308b\u624b\u6cd5\u3068\u3057\u3066\u3001\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3068\u3044\u3046\u3082\u306e\u304c\u3042\u308a\u307e\u3059\u3002\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-01 0.15.05.png](https://qiita-image-store.s3.amazonaws.com/0/112358/e09e2eb6-7b59-a080-dc90-9e6a4a1f8471.png)\n\n\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb(banana-split law)\u306f\u3001f\u306efold\u3068g\u306efold\u306e\u7d44\u3092\u8a08\u7b97\u3057\u305f\u3044\u306a\u3089\u3001\u4e00\u56de\u3067\u6e08\u307e\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u305e\uff01\u3068\u8a00\u3063\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u308c\u3092\u4f7f\u3046\u3068average\u306f\u3001\n\n```python:\ndef average2(lst):\n\n  def h (a,xy):\n    (x,y) = xy\n    return (a+x,1+y)\n\n  def div ((s,l)):\n    return s * 1.0 / l\n\n  return div ( fold ( h , (0,0), lst ) )\n```\n\n\u3068\u6539\u5584\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n\u3053\u308c\u306b\u3001\u30ea\u30b9\u30c8[1,2,3,4,5]\u3092\u4e0e\u3048\u308b\u3068\u3001\u3001\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-01 0.30.19.png](https://qiita-image-store.s3.amazonaws.com/0/112358/8c119aa7-b59f-c9e1-8f7a-53d8b92c448b.png)\n\n\u3068\u5c55\u958b\u3057\u3066\u3044\u3063\u3066\u3001\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2016-12-01 0.32.41.png](https://qiita-image-store.s3.amazonaws.com/0/112358/52d61070-fce2-b1bf-03be-2a3f69ac0621.png)\n\n\u3068\u8a55\u4fa1\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n(+\u3092O\u3067\u56f2\u3063\u3066\u308b\u8a18\u53f7\u306f\u3001average2\u4e2d\u306e\u95a2\u6570h\u3092\u4e2d\u7f6e\u3067\u66f8\u3044\u305f\u3082\u306e\u3067\u3059)\n\n\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u306e\u304a\u304b\u3052\u3067\u3001\u30ea\u30b9\u30c8\u306e\u8981\u7d20\u306e\u5e73\u5747\u3092\u52b9\u7387\u826f\u304f\u6c42\u3081\u308b\u95a2\u6570\u304c\u5b9a\u7fa9\u3067\u304d\u307e\u3057\u305f\uff01\n\n## \u7d50\u5c40\u3001fold\u306e\u826f\u3055\u306f\uff1f\n\nfold\u306f\u30c7\u30fc\u30bf\u578b\u4e0a\u3067\u306e\u7e70\u308a\u8fd4\u3057\u3092\u8a18\u8ff0\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u7e70\u308a\u8fd4\u3057\u306a\u306e\u3067\u3001fold\u3067\u66f8\u3051\u308b\u3053\u3068\u306f\u5f53\u7136for\u6587\u3092\u4f7f\u3063\u3066\u3082\u66f8\u3051\u307e\u3059\u3002\nfold\u306b\u3057\u304b\u51fa\u6765\u306a\u3044\u3053\u3068\u306f\u305f\u3076\u3093\u3042\u308a\u307e\u305b\u3093\u3002(\u305f\u3076\u3093)\n\nfold\u306e\u826f\u3044\u3068\u3053\u308d\u306f\u3001\u7e70\u308a\u8fd4\u3057\u3092\u542b\u3080\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u958b\u767a\u3059\u308b\u3068\u304d\u306e\u898b\u901a\u3057\u306e\u826f\u3055\u306b\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306esum\u3068length\u306e\u3088\u3046\u306b\u3001\u7e70\u308a\u8fd4\u3057\u64cd\u4f5c\u304c2\u3064\u3042\u3063\u3066\u305d\u308c\u3089\u30921\u3064\u306b\u4f75\u305b\u308b\u3068\u3044\u3046\u5834\u9762\u304c\u3042\u308b\u3068\u3057\u307e\u3059\u3002\n\nfor\u6587\u3067\u306f\u3001for\u306e\u4e2d\u8eab\u3092\u8aad\u3093\u3067\u7406\u89e3\u3057\u305f\u4e0a\u3067\u65b0\u3057\u3044for\u6587\u3092\u66f8\u304d\u76f4\u3055\u306a\u3044\u3068\u306a\u308a\u307e\u305b\u3093\u3002sum\u3084length\u306e\u3088\u3046\u306b\u7c21\u5358\u306a\u3068\u304d\u306f\u3044\u3044\u3067\u3059\u304c\u3001\u3082\u3046\u5c11\u3057\u8907\u96d1\u306b\u306a\u308b\u3068\u5927\u5909\u306a\u4f5c\u696d\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u7247\u3084\u3001fold\u306f\u3069\u3046\u3067\u3057\u3087\u3046\u3002\u30d0\u30ca\u30ca\u5272\u308a\u30eb\u30fc\u30eb\u3067\u898b\u305f\u3088\u3046\u306b\u3001\u6a5f\u68b0\u7684\u306b2\u3064\u306e\u7e70\u308a\u8fd4\u3057\u3092\u4f75\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u3059\u3054\u3044\uff01\n\n\n# \u304a\u308f\u308a\u306b\n\n\u4eca\u56de\u904a\u3093\u3060\u3001fold\u95a2\u6570\u306ffoldr\u3068\u3082\u547c\u3070\u308c\u308b\u95a2\u6570\u3067\u4e0e\u3048\u3089\u308c\u305f\u30ea\u30b9\u30c8\u3092\u53f3\u5074\u304b\u3089\u8a55\u4fa1\u3057\u3066\u3044\u304f\u3068\u3053\u308d\u306b\u7279\u5fb4\u304c\u3042\u308a\u307e\u3059\u3002fold(r)\u306f\u3044\u308d\u3044\u308d\u7814\u7a76\u3055\u308c\u3066\u3044\u3066\u9762\u767d\u3044\u306e\u3067\u3001\u3053\u306e\u6a5f\u4f1a\u306b\u8208\u5473\u304b\u89aa\u3057\u307f\u3092\u6301\u3063\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5b09\u3057\u3044\u3067\u3059\u3002\n\n\u6b21\u306fList\u578b\u4ee5\u5916\u306b\u304a\u3051\u308bfold\u306b\u3064\u3044\u3066\u7d39\u4ecb\u3067\u304d\u305f\u3089\u3068\u601d\u3063\u3066\u3044\u307e\u3059\u3002\n\u99c4\u6587\u5931\u793c\u3057\u307e\u3057\u305f\u3002^^;\n\n# \u30d7\u30ed\u30b0\u30e9\u30e0\n```py:\ndef fold ( f , e , lst ):\n  if empty(lst):\n    return e\n  else:\n    return f( head(lst) , fold( f, e , tail(lst) ) )\n\ndef head(l):\n    return l[0]\n\ndef tail(l):\n    return l[1:]\n\ndef empty(l):\n    if l == []:\n        return True\n    else:\n        return False\n\n\ndef sum_naive (lst):\n  s = 0\n  for i in lst :\n    s += i\n  return s\n\ndef sum_fold (lst):\n    return fold ( (lambda x,y : x + y) , 0 , lst )\n\ndef sum_rec (lst):\n  if empty(lst):\n    return 0\n  else:\n    return head(lst) + sum_rec(tail(lst))\n\n\nprint sum_naive([1,2,3,4,5])\nprint sum_fold([1,2,3,4,5])\nprint sum_rec([1,2,3,4,5])\n\n\ndef length_rec (lst):\n  if empty(lst):\n    return 0\n  else:\n    return 1 + length_rec(tail (lst))\n\ndef length_fold (lst):\n  return fold ( (lambda x,y : 1 + y) , 0 , lst )\n\nprint length_fold([1,2,3,4,5])\nprint length_rec([1,2,3,4,5])\n\ndef average(lst):\n  def div (s,l):\n    return s * 1.0 / l\n  return div ( sum_fold(lst) , length_fold(lst) )\n\ndef average2(lst):\n  def h (a,xy):\n    (x,y) = xy\n    return (a+x,1+y)\n\n  def div ((s,l)):\n    return s * 1.0 / l\n\n  return div ( fold ( h , (0,0), lst ) )\n\n\nprint average([1,2,3,4,5])\nprint average2([1,2,3,4,5])\n\n```\n", "tags": ["Python", "\u95a2\u6570\u578b\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0"]}