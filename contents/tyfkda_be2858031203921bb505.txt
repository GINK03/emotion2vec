{"context": " More than 1 year has passed since last update.\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3059\u308b\u8907\u6570\u306eParseObject\u3092\u8fd4\u3059\u30af\u30e9\u30a6\u30c9\u95a2\u6570\u304c\u3042\u308b\u3068\u3057\u3066\uff1a\n\nmain.js\n  Parse.Cloud.define('getFoobars', function(request, response) {\n    var query = new Parse.Query('Foobars');\n    query.containedIn('foobarId', request.params.foobarIds);\n    query.find({\n      success: function(results) {\n        response.success(results);\n      },\n      error: function() {\n        response.error('find failed');\n      }\n    });\n  });\n\n\nC# \u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\uff1a\n\nFoobar.cs\nusing Parse;\n\n...\n\n  public void RequestFoobars(List<string> foobarIds) {\n    Dictionary<string, object> data = new Dictionary<string, object>();\n    data.Add(\"foobarIds\", foobarIds);\n    ParseCloud.CallFunctionAsync<List<object>>(\"getFoobars\", data).ContinueWith(t => {\n        if (t.IsFaulted || t.IsCanceled || !t.IsCompleted || t.Result == null) {\n          Debug.Log(t.Exception.GetBaseException().Message);\n          return;\n        }\n\n        foreach (object obj in t.Result) {\n          if (obj is ParseObject) {\n            ParseObject pobj = obj as ParseObject;\n            string foobarId = pobj.Get<string>(\"foobarId\");\n            DateTime? updatedAt = pobj.UpdatedAt;\n            ...\n          }\n        }\n      });\n  }\n\n\n\n\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eC#\u304b\u3089\u30af\u30e9\u30a6\u30c9\u95a2\u6570\u306eJavaScript\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3001 Dictionary \u306b\u8a70\u3081\u3066\u6e21\u3059\n\n\n\u5185\u5bb9\u306f List \u3082\u53d7\u3051\u4ed8\u3051\u308b\n\n\nParse.com\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u898b\u3064\u304b\u308b\u3093\u3060\u3051\u3069\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u3059\u3050\u306b\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\n\n\n\nParse JavaScript SDK Reference\n\nParse.Cloud.define(name, func)\nParse.Query.containedIn(key, values)\n\n\n\nParse .NET SDK API Reference\n\nParseCloud.CallFunctionAsync<T>\nParseObject.Get<T>\n\n\n\n\n\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u304f\u304b\u3089\u304b\u3001\u3061\u3087\u3063\u3068\u30df\u30b9\u308b\u3068\u3059\u3050 System.AggregateException \u304c\u51fa\u3066\u308f\u3051\u304c\u308f\u304b\u3089\u306a\u304f\u306a\u308b\nCan't get ParseCloud.CallFunctionAsync in Unity3d | Parse\n\n\u6761\u4ef6\u306b\u30de\u30c3\u30c1\u3059\u308b\u8907\u6570\u306e[ParseObject](http://parse.com/docs/dotnet/api/html/T_Parse_ParseObject.htm)\u3092\u8fd4\u3059[\u30af\u30e9\u30a6\u30c9\u95a2\u6570](https://parse.com/docs/jp/cloud_code_guide#functions)\u304c\u3042\u308b\u3068\u3057\u3066\uff1a\n\n```js:main.js\n  Parse.Cloud.define('getFoobars', function(request, response) {\n    var query = new Parse.Query('Foobars');\n    query.containedIn('foobarId', request.params.foobarIds);\n    query.find({\n      success: function(results) {\n        response.success(results);\n      },\n      error: function() {\n        response.error('find failed');\n      }\n    });\n  });\n```\n\nC# \u304b\u3089\u547c\u3073\u51fa\u3057\u3066\u7d50\u679c\u3092\u53d6\u5f97\u3059\u308b\u306b\u306f\uff1a\n\n```csharp:Foobar.cs\nusing Parse;\n\n...\n\n  public void RequestFoobars(List<string> foobarIds) {\n    Dictionary<string, object> data = new Dictionary<string, object>();\n    data.Add(\"foobarIds\", foobarIds);\n    ParseCloud.CallFunctionAsync<List<object>>(\"getFoobars\", data).ContinueWith(t => {\n        if (t.IsFaulted || t.IsCanceled || !t.IsCompleted || t.Result == null) {\n          Debug.Log(t.Exception.GetBaseException().Message);\n          return;\n        }\n\n        foreach (object obj in t.Result) {\n          if (obj is ParseObject) {\n            ParseObject pobj = obj as ParseObject;\n            string foobarId = pobj.Get<string>(\"foobarId\");\n            DateTime? updatedAt = pobj.UpdatedAt;\n            ...\n          }\n        }\n      });\n  }\n```\n\n* \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eC#\u304b\u3089\u30af\u30e9\u30a6\u30c9\u95a2\u6570\u306eJavaScript\u306b\u6e21\u3059\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u3001 `Dictionary` \u306b\u8a70\u3081\u3066\u6e21\u3059\n  * \u5185\u5bb9\u306f `List` \u3082\u53d7\u3051\u4ed8\u3051\u308b\n* Parse.com\u306f\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u7684\u306a\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u898b\u3064\u304b\u308b\u3093\u3060\u3051\u3069\u3001\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u304c\u3069\u3053\u306b\u3042\u308b\u304b\u3059\u3050\u306b\u306f\u308f\u304b\u3089\u306a\u304b\u3063\u305f\n  * [Parse JavaScript SDK Reference](https://parse.com/docs/js/api/)\n      * [Parse.Cloud.define(name, func)](https://parse.com/docs/js/api/symbols/Parse.Cloud.html#.define)\n      * [Parse.Query.containedIn(key, values)](https://parse.com/docs/js/api/symbols/Parse.Query.html#containedIn)\n  * [Parse .NET SDK API Reference](http://parse.com/docs/dotnet/api/)\n      * [ParseCloud.CallFunctionAsync&lt;T&gt;](http://parse.com/docs/dotnet/api/html/M_Parse_ParseCloud_CallFunctionAsync__1.htm)\n      * [ParseObject.Get&lt;T&gt;](http://parse.com/docs/dotnet/api/html/M_Parse_ParseObject_Get__1.htm)\n* \u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u5225\u30b9\u30ec\u30c3\u30c9\u3067\u52d5\u304f\u304b\u3089\u304b\u3001\u3061\u3087\u3063\u3068\u30df\u30b9\u308b\u3068\u3059\u3050 `System.AggregateException` \u304c\u51fa\u3066\u308f\u3051\u304c\u308f\u304b\u3089\u306a\u304f\u306a\u308b\n* [Can't get ParseCloud.CallFunctionAsync in Unity3d | Parse](https://www.parse.com/questions/cant-get-parsecloudcallfunctionasync-in-unity3d)\n", "tags": ["Parse", "C#"]}