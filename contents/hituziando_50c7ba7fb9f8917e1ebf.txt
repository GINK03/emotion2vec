{"tags": ["iOS", "Android", "BLE", "bluetooth"], "context": "BLE\u306b\u304a\u3044\u3066\u30011\u56de\u306e\u901a\u4fe1\u3067\u9001\u308c\u308b\u30c7\u30fc\u30bf\u91cf\u306b\u3064\u3044\u3066\u8abf\u3079\u305f\u8a71\u3067\u3059\u3002\n\n\u306f\u3058\u3081\u306b\n\u307e\u305a\u306fBLE\u306e\u4ed5\u69d8\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002Bluetooth SIG: adopted specifications\u304b\u3089DL\u3067\u304d\u308bThe Core Specification\u306eATT_MTU\u3042\u305f\u308a\u3092\u8aad\u3080\u3068\u30011\u56de\u306e\u901a\u4fe1\u3067\u9001\u308c\u308b\u30c7\u30fc\u30bf\u91cf\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f23octets\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002ATT_MTU\u3068\u306f\u3001Attribute Maximum Transfer Unit\u306e\u7565\u3067\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3068\u601d\u3063\u3066\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\u5b9f\u969b\u306b\u306f\u30013octets\u306f\u5360\u6709\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3067\u4f7f\u3048\u308b\u5bb9\u91cf\u306f20octets\u3068\u306a\u308a\u307e\u3059\u3002\n20octets\u3068\u306a\u308b\u3068\u3001\u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3057\u304b\u9001\u308c\u305a\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u53b3\u3057\u3044\u5236\u9650\u3068\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n20octets\u3088\u308a\u3082\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u9001\u308b\u5834\u5408\u3001BLE\u306b\u306f\u30012\u3064\u306e\u624b\u6bb5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n\u9001\u4fe1\u5074\u3067\u9001\u4fe1\u30c7\u30fc\u30bf\u3092MTU\u306b\u53ce\u307e\u308b\u30b5\u30a4\u30ba\u306b\u5206\u5272\u3057\u3001\u3061\u3087\u3063\u3068\u305a\u3064\u9001\u4fe1\u3059\u308b\u3002\u53d7\u4fe1\u5074\u3067\u53d7\u4fe1\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3057\u3066\u5fa9\u5143\u3059\u308b(Read Blob Request, Prepare Write Request/Execute Write Request)\nMTU\u3092\u62e1\u5f35\u3057\u30011\u56de\u3067\u9001\u308c\u308b\u91cf\u3092\u5897\u3084\u3059(Exchange MTU Request)\n\n\u5b9f\u969b\u306b\u306f\u30011\u30682\u306e\u5408\u308f\u305b\u6280\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30012\u306eMTU\u62e1\u5f35\u306e\u65b9\u306b\u7126\u70b9\u3092\u7d5e\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\nExchange MTU Request\u3068\u306f\n\u30b5\u30fc\u30d0\u30fb\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u3067\u53d6\u308a\u6271\u3046\u5358\u4e00\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u6700\u5927\u30b5\u30a4\u30ba(ATT_MTU)\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9(Central)\u304b\u3089\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9(Peripheral)\u3078\u3057\u307e\u3059\u3002\nATT_MTU\u306e\u898f\u683c\u4e0a\u306e\u6700\u5927\u30b5\u30a4\u30ba\u306f512octets\u3067\u3059\u304c\u3001\u6a5f\u5668\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\n\u3082\u3057\u3001\u30b5\u30fc\u30d0\u306eMTU\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eMTU\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u4f4e\u3044\u65b9\u306e\u5024\u304c\u4e21\u8005\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u30b5\u30fc\u30d0\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u8a2d\u5b9a\u3055\u308c\u308bMTU\u304c\u7570\u306a\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n\u5b9f\u88c5\u3068\u691c\u8a3c\niOS\u3068Android\u3067Exchange MTU Request\u3092\u5b9f\u88c5\u3057\u3001\u8a2d\u5b9a\u3067\u304d\u308bMTU\u306e\u6700\u5927\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u306a\u304a\u30011octet=1byte\u3068\u3057\u307e\u3059\u3002\n\u307e\u305aAndroid\u3067\u3059\u304c\u3001\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306eBluetoothGatt\u30af\u30e9\u30b9\u3092\u898b\u308b\u3068\u3001requestMtu\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u3069\u3046\u3084\u3089\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u6b21\u306biOS\u3067\u3059\u304c\u3001Bluetooth Accessory Design Guidelines for Apple Products\u306e3.10 MTU Size\u3084WWDC 2013 Session 703 Core Bluetooth\u306e\u8cc7\u6599\u306b\u3001Exchange MTU\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001CoreBluetooth\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u3092\u898b\u3066\u3082\u3001\u305d\u308c\u3089\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002CBCentral\u30af\u30e9\u30b9\u306bread-only\u306amaximumUpdateValueLength\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308b\u304f\u3089\u3044\u3067\u3059\u3002\u3046\u30fc\u3093\u3001\u3069\u3046\u3084\u3063\u3066\u3084\u308b\u3093\u3060\u308d\u3046?\n\n\u691c\u8a3c\u30b1\u30fc\u30b9\n\u4ee5\u4e0b\u306e4\u3064\u306e\u30b1\u30fc\u30b9\u3067\u691c\u8a3c\u3057\u307e\u3059\u3002\n\niOS(Central) <------> iOS(Peripheral)\nAndroid(Central) <------> iOS(Peripheral)\niOS(Central) <------> Android(Peripheral)\nAndroid(Central) <------> Android(Peripheral)\n\n\u691c\u8a3c\u3067\u4f7f\u7528\u3057\u305f\u7aef\u672b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\niPhone5, iOS7.1.1\niPad Air2, iOS9.3.4\niPhone6, iOS10 beta7 (2016/08/26\u8ffd\u8a18)\nXperia Z5 Compact SO-02H, Android 6.0\nGalaxy S4 SC-04E, Android 5.0.1\n\n\n\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\niOS\u3001Android\u306e\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u629c\u7c8b\u3092\u305d\u308c\u305e\u308c\u8a18\u8f09\u3057\u307e\u3059\u3002MTU\u306e\u5024\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3092Read\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u30b3\u30fc\u30c9\u3067\u3059\u3002\niOS\u306f\u3001Peripheral\u5074\u3067\u53d6\u5f97\u3067\u304d\u308bCBPeripheral\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306emaximumUpdateValueLength\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3001\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8fd4\u3059\u5024\u306f\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u3048\u308b\u5bb9\u91cf\u3067\u3059\u3002\nAndroid\u306f\u3001Central\u304b\u3089requestMtu\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u306b\u547c\u3070\u308c\u308bonMtuChanged\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\niOS(Central)\n\nstatic NSString * const YourCharacteristicUUIDString = /*UUID*/;\n\n...\n\n- (void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error {\n    for (CBCharacteristic *characteristic in service.characteristics) {\n\n        // Read Request\n        if ([characteristic.UUID.UUIDString isEqualToString:YourCharacteristicUUIDString]\n            && (characteristic.properties & CBCharacteristicPropertyRead) != 0) {\n            [peripheral readValueForCharacteristic:characteristic];\n        }\n    }\n}\n\n- (void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic\n             error:(NSError *)error {\n    NSData *data = characteristic.value;\n    NSString *val = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n\n    NSLog(@\"Update value=%@ data.length=%zdB\", val, data.length);\n}\n\n...\n\n\niOS(Peripheral)\n\n...\n\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request {\n    // Peripheral\u5074\u306eCBCentral\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067MTU\u3092\u78ba\u8a8d\u3059\u308b\n    NSLog(@\"Received read request: MTU=%zd\", request.central.maximumUpdateValueLength);\n\n    // Read Response\n    if ([request.characteristic.UUID isEqual:self.characteristic.UUID]) {\n        request.value = [@\"Hello\" dataUsingEncoding:NSUTF8StringEncoding];\n        [peripheral respondToRequest:request withResult:CBATTErrorSuccess];\n    }\n    else {\n        [peripheral respondToRequest:request withResult:CBATTErrorRequestNotSupported];\n    }\n}\n\n...\n\n\nAndroid(Central)\n\nprivate static final String YOUR_SERVICE_UUID_STRING = /*UUID*/;\nprivate static final String YOUR_CHARACTERISTIC_UUID_STRING = /*UUID*/;\nprivate static final String TAG = \"YourTag\";\n\n...\n\n    private final BluetoothGattCallback gattCallback = new BluetoothGattCallback() {\n        @Override\n        public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState) {\n            // \u63a5\u7d9a\u6210\u529f\u3057\u305f\u5834\u5408\n            if (newState == BluetoothProfile.STATE_CONNECTED) {\n                // Exchange MTU Request\n                // 512B\u307e\u3067\u62e1\u5f35\u3092\u8981\u6c42\n                if (gatt.requestMtu(512)) {\n                    Log.d(TAG, \"Requested MTU successfully\");\n                } else {\n                    Log.d(TAG, \"Failed to request MTU\");\n                }\n\n                // MTU\u3092\u62e1\u5f35\u305b\u305a\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u691c\u7d22\u3059\u308b\n//                if (gatt != null) {\n//                    if (gatt.discoverServices()) {\n//                       Log.d(TAG, \"Started discovering services\");\n//                    } else {\n//                       Log.d(TAG, \"Failed to start discovering services\");\n//                    }\n//                }\n            }\n        }\n\n        @Override\n        public void onServicesDiscovered(BluetoothGatt gatt, int status) {\n            if (status == BluetoothGatt.GATT_SUCCESS) {\n                for (BluetoothGattService service : gatt.getServices()) {\n\n                    if (!service.getUuid().toString().equalsIgnoreCase(YOUR_SERVICE_UUID_STRING)) {\n                        continue;\n                    }\n\n                    // Read Request\n                    BluetoothGattCharacteristic chara = service.getCharacteristic(UUID.fromString(YOUR_CHARACTERISTIC_UUID_STRING));\n                    if (chara == null) {\n                        continue;\n                    }\n                    if ((chara.getProperties() & BluetoothGattCharacteristic.PROPERTY_READ) != 0) {\n                        gatt.readCharacteristic(chara);\n                    }\n                }\n            }\n        }\n\n        @Override\n        public void onCharacteristicRead(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, int status) {\n            String val = characteristic.getStringValue(0);\n\n            Log.d(TAG, \"onCharacteristicRead: \" + val);\n        }\n\n        @Override\n        public void onMtuChanged(BluetoothGatt gatt, int mtu, int status) {\n            Log.d(\"onMtuChanged: \" + mtu);\n\n            // Exchange MTU Request\u304c\u5b8c\u4e86\u3057\u3066\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u306e\u691c\u51fa\u3092\u958b\u59cb\u3059\u308b\n            if (gatt != null) {\n                if (gatt.discoverServices()) {\n                    Log.d(TAG, \"Started discovering services\");\n                } else {\n                    Log.d(TAG, \"Failed to start discovering services\");\n                }\n            }\n        }\n    };\n\n...\n\n\nAndroid(Peripheral)\n\nprivate static final String TAG = \"YourTag\";\n\n...\n\n   private final BluetoothGattServerCallback gattServerCallback = new BluetoothGattServerCallback() {\n        @Override\n        public void onCharacteristicReadRequest(BluetoothDevice device, int requestId, int offset, BluetoothGattCharacteristic characteristic) {\n            characteristic.setValue(\"HelloWorld\");\n            gattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, offset, characteristic.getValue());\n        }\n\n        @Override\n        public void onMtuChanged(BluetoothDevice device, int mtu) {\n            Log.d(TAG, \"onMtuChanged: \" + mtu);\n        }\n    };\n\n...\n\n\n\n\u691c\u8a3c\u7d50\u679c\n\niOS(Central) <------> iOS(Peripheral)\n\nMTU\u306f135B\u3002\u7279\u306b\u4f55\u3082\u3057\u3066\u3044\u306a\u3044(\u3068\u3044\u3046\u304b\u4f55\u3082\u3067\u304d\u306a\u3044)\u306e\u3067\u3001iOS\u9593\u306f135B\u306b\u52dd\u624b\u306b\u8a2d\u5b9a\u3055\u308c\u308b?\n\nAndroid(Central) <------> iOS(Peripheral)\n\nAndroid\u3067MTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u306a\u3044\u5834\u5408\u3001MTU\u306f23B\u3002\nAndroid\u3067MTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u5834\u5408\u3001MTU\u306f158B\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n(2016/08/26\u8ffd\u8a18)\niPhone6, iOS10 beta7\u3092Peripheral\u306b\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002MTU\u306f512B\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n\niOS(Central) <------> Android(Peripheral)\n\nMTU\u306f135B\u3002Android\u304b\u3089\u306f\u7279\u306bMTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001onMtuChanged\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3057\u305f\u3002\u3068\u3044\u3046\u3053\u3068\u306f\u3001iOS\u304b\u3089135B\u307e\u3067MTU\u3092\u62e1\u5f35\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u52dd\u624b\u306b\u9001\u3089\u308c\u3066\u3044\u308b?\n(2016/08/26\u8ffd\u8a18)\niPhone6, iOS10 beta7\u3092Central\u3067\u8a66\u3057\u305f\u3068\u3053\u308d\u3001185B\u307e\u3067\u62e1\u5f35\u3055\u308c\u307e\u3057\u305f\u3002iOS10\u304c\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3089\u3001\u4ed6\u306e\u7aef\u672b\u3067\u3082\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\nAndroid(Central) <------> Android(Peripheral)\n\nMTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u5834\u5408\u3001MTU\u306f512B\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n\u3053\u308c\u3089\u306e\u7d50\u679c\u3092\u8003\u5bdf\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\n\u691c\u8a3c\u7d50\u679c\u304b\u3089\u8a00\u3048\u305d\u3046\u306a\u3053\u3068\n\niOS\u306eMTU\u4e0a\u9650\u306f158B\u3068\u8003\u3048\u3089\u308c\u308b\n\n\n(2016/08/26\u8ffd\u8a18) iOS10\u3067\u306f512B\u304c\u4e0a\u9650\u3068\u8003\u3048\u3089\u308c\u308b\n\n\nAndroid\u306eMTU\u4e0a\u9650\u306f512B\u3068\u8003\u3048\u3089\u308c\u308b\niOS\u306fCentral\u306e\u5834\u5408\u3001\u63a5\u7d9a\u6642\u306b\u30b7\u30b9\u30c6\u30e0\u304c\u81ea\u52d5\u3067135B\u307e\u3067MTU\u3092\u62e1\u5f35\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\n\n\n(2016/08/26\u8ffd\u8a18) i0S10\u306f185B\u307e\u3067\u62e1\u5f35\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\n\n\nOS\u30d0\u30fc\u30b8\u30e7\u30f3\u3084\u7aef\u672b\u306b\u3088\u3063\u3066\u306f\u4e0a\u9650\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u306f\u3042\u308b\n\n\u3082\u3046\u5c11\u3057\u8272\u3005\u306a\u7aef\u672b\u3067\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u691c\u8a3c\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n\u305d\u306e\u4ed6\n\n\u691c\u8a3c\u3067\u4f7f\u7528\u3057\u305fGalaxy S4(Android 5.0.1)\u306f\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u7aef\u672b\u3068\u3057\u3066\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\nE/BluetoothAdapter: bluetooth le advertising not supported\n\n\u3053\u3093\u306a\u30a8\u30e9\u30fc\u30ed\u30b0\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\niOS10\u304b\u3089\u306f\u3001Peripheral\u3067\u5229\u7528\u3059\u308b\u5834\u5408\u3001Info.plist\u306bNSBluetoothPeripheralUsageDescription\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u3001\u4f55\u306e\u305f\u3081\u306b\u4f7f\u3046\u306e\u304b\u3092\u8aac\u660e\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u3066\u3001\u30a2\u30d7\u30ea\u306f\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n[access] This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an NSBluetoothPeripheralUsageDescription key with a string value explaining to the user how the app uses this data.\n\n\n\u53c2\u8003\n\nReinforce-Lab.'s Blog: BLE\u306e\u901a\u4fe1\u4ed5\u69d8\niOS\u306eCore Bluetooth / BLE\u306e\u901a\u4fe1\u901f\u5ea6\nAndroid Developers: Bluetooth Low Energy\niOS \u2715 BLE Core Bluetooth\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 (\u66f8\u7c4d)\n\nBLE\u306b\u304a\u3044\u3066\u30011\u56de\u306e\u901a\u4fe1\u3067\u9001\u308c\u308b\u30c7\u30fc\u30bf\u91cf\u306b\u3064\u3044\u3066\u8abf\u3079\u305f\u8a71\u3067\u3059\u3002\n\n#\u306f\u3058\u3081\u306b\n\n\u307e\u305a\u306fBLE\u306e\u4ed5\u69d8\u3092\u78ba\u8a8d\u3057\u3066\u307f\u307e\u3059\u3002[Bluetooth SIG: adopted specifications](https://www.bluetooth.com/specifications/adopted-specifications)\u304b\u3089DL\u3067\u304d\u308b*The Core Specification*\u306eATT_MTU\u3042\u305f\u308a\u3092\u8aad\u3080\u3068\u30011\u56de\u306e\u901a\u4fe1\u3067\u9001\u308c\u308b\u30c7\u30fc\u30bf\u91cf\u306f\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f**23octets**\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002ATT_MTU\u3068\u306f\u3001Attribute Maximum Transfer Unit\u306e\u7565\u3067\u3001\u30d1\u30b1\u30c3\u30c8\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3068\u601d\u3063\u3066\u3044\u3044\u3067\u3057\u3087\u3046\u3002\n\u5b9f\u969b\u306b\u306f\u30013octets\u306f\u5360\u6709\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3067\u4f7f\u3048\u308b\u5bb9\u91cf\u306f**20octets**\u3068\u306a\u308a\u307e\u3059\u3002\n\n20octets\u3068\u306a\u308b\u3068\u3001\u5c11\u91cf\u306e\u30c7\u30fc\u30bf\u3057\u304b\u9001\u308c\u305a\u3001\u5834\u5408\u306b\u3088\u3063\u3066\u306f\u53b3\u3057\u3044\u5236\u9650\u3068\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n20octets\u3088\u308a\u3082\u5927\u91cf\u306e\u30c7\u30fc\u30bf\u3092\u9001\u308b\u5834\u5408\u3001BLE\u306b\u306f\u30012\u3064\u306e\u624b\u6bb5\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\n1. \u9001\u4fe1\u5074\u3067\u9001\u4fe1\u30c7\u30fc\u30bf\u3092MTU\u306b\u53ce\u307e\u308b\u30b5\u30a4\u30ba\u306b\u5206\u5272\u3057\u3001\u3061\u3087\u3063\u3068\u305a\u3064\u9001\u4fe1\u3059\u308b\u3002\u53d7\u4fe1\u5074\u3067\u53d7\u4fe1\u30c7\u30fc\u30bf\u3092\u7d50\u5408\u3057\u3066\u5fa9\u5143\u3059\u308b(Read Blob Request, Prepare Write Request/Execute Write Request)\n2. MTU\u3092\u62e1\u5f35\u3057\u30011\u56de\u3067\u9001\u308c\u308b\u91cf\u3092\u5897\u3084\u3059(Exchange MTU Request)\n\n\u5b9f\u969b\u306b\u306f\u30011\u30682\u306e\u5408\u308f\u305b\u6280\u3067\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3082\u3042\u308b\u3068\u306f\u601d\u3044\u307e\u3059\u304c\u3001\u3053\u306e\u8a18\u4e8b\u3067\u306f\u30012\u306eMTU\u62e1\u5f35\u306e\u65b9\u306b\u7126\u70b9\u3092\u7d5e\u3063\u3066\u3044\u304d\u307e\u3059\u3002\n\n#Exchange MTU Request\u3068\u306f\n\n\u30b5\u30fc\u30d0\u30fb\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u9593\u3067\u53d6\u308a\u6271\u3046\u5358\u4e00\u306e\u30d1\u30b1\u30c3\u30c8\u306e\u6700\u5927\u30b5\u30a4\u30ba(ATT_MTU)\u3092\u5909\u66f4\u3057\u307e\u3059\u3002\u30ea\u30af\u30a8\u30b9\u30c8\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u30b5\u30a4\u30c9(Central)\u304b\u3089\u30b5\u30fc\u30d0\u30b5\u30a4\u30c9(Peripheral)\u3078\u3057\u307e\u3059\u3002\nATT_MTU\u306e\u898f\u683c\u4e0a\u306e\u6700\u5927\u30b5\u30a4\u30ba\u306f**512octets**\u3067\u3059\u304c\u3001\u6a5f\u5668\u304c\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3068\u306f\u9650\u308a\u307e\u305b\u3093\u3002\n\u3082\u3057\u3001\u30b5\u30fc\u30d0\u306eMTU\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306eMTU\u304c\u7570\u306a\u308b\u5834\u5408\u306f\u3001\u4f4e\u3044\u65b9\u306e\u5024\u304c\u4e21\u8005\u306b\u8a2d\u5b9a\u3055\u308c\u307e\u3059\u3002\u30b5\u30fc\u30d0\u3068\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3067\u8a2d\u5b9a\u3055\u308c\u308bMTU\u304c\u7570\u306a\u308b\u3053\u3068\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\n#\u5b9f\u88c5\u3068\u691c\u8a3c\n\niOS\u3068Android\u3067Exchange MTU Request\u3092\u5b9f\u88c5\u3057\u3001\u8a2d\u5b9a\u3067\u304d\u308bMTU\u306e\u6700\u5927\u5024\u3092\u78ba\u8a8d\u3057\u307e\u3059\u3002\u306a\u304a\u30011octet=1byte\u3068\u3057\u307e\u3059\u3002\n\n\u307e\u305aAndroid\u3067\u3059\u304c\u3001[\u516c\u5f0f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u306eBluetoothGatt\u30af\u30e9\u30b9](https://developer.android.com/reference/android/bluetooth/BluetoothGatt.html)\u3092\u898b\u308b\u3068\u3001`requestMtu`\u30e1\u30bd\u30c3\u30c9\u304c\u3042\u308b\u306e\u3067\u3001\u3069\u3046\u3084\u3089\u5b9f\u88c5\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\n\u6b21\u306biOS\u3067\u3059\u304c\u3001[Bluetooth Accessory Design Guidelines for Apple Products](https://developer.apple.com/hardwaredrivers/BluetoothDesignGuidelines.pdf)\u306e3.10 MTU Size\u3084[WWDC 2013 Session 703 Core Bluetooth\u306e\u8cc7\u6599](http://devstreaming.apple.com/videos/wwdc/2013/703xcx2xljtlq481grxurla4/703/703.pdf)\u306b\u3001Exchange MTU\u3092\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3068\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u3057\u304b\u3057\u3001[CoreBluetooth\u306e\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9](https://developer.apple.com/library/ios/documentation/CoreBluetooth/Reference/CoreBluetooth_Framework/index.html)\u3092\u898b\u3066\u3082\u3001\u305d\u308c\u3089\u3057\u3044\u30e1\u30bd\u30c3\u30c9\u306f\u898b\u3064\u304b\u308a\u307e\u305b\u3093\u3067\u3057\u305f\u3002`CBCentral`\u30af\u30e9\u30b9\u306bread-only\u306a`maximumUpdateValueLength`\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u3042\u308b\u304f\u3089\u3044\u3067\u3059\u3002\u3046\u30fc\u3093\u3001\u3069\u3046\u3084\u3063\u3066\u3084\u308b\u3093\u3060\u308d\u3046?\n\n##\u691c\u8a3c\u30b1\u30fc\u30b9\n\n\u4ee5\u4e0b\u306e4\u3064\u306e\u30b1\u30fc\u30b9\u3067\u691c\u8a3c\u3057\u307e\u3059\u3002\n\n- iOS(Central) <------> iOS(Peripheral)\n- Android(Central) <------> iOS(Peripheral)\n- iOS(Central) <------> Android(Peripheral)\n- Android(Central) <------> Android(Peripheral)\n\n\u691c\u8a3c\u3067\u4f7f\u7528\u3057\u305f\u7aef\u672b\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3059\u3002\n\n- iPhone5, iOS7.1.1\n- iPad Air2, iOS9.3.4\n- iPhone6, iOS10 beta7 (**2016/08/26\u8ffd\u8a18**)\n- Xperia Z5 Compact SO-02H, Android 6.0\n- Galaxy S4 SC-04E, Android 5.0.1\n\n##\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\niOS\u3001Android\u306e\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u629c\u7c8b\u3092\u305d\u308c\u305e\u308c\u8a18\u8f09\u3057\u307e\u3059\u3002MTU\u306e\u5024\u3092\u78ba\u8a8d\u3057\u305f\u3044\u3060\u3051\u306a\u306e\u3067\u3001\u6587\u5b57\u5217\u30c7\u30fc\u30bf\u3092Read\u3059\u308b\u3060\u3051\u306e\u5358\u7d14\u306a\u30b3\u30fc\u30c9\u3067\u3059\u3002\n\niOS\u306f\u3001Peripheral\u5074\u3067\u53d6\u5f97\u3067\u304d\u308b`CBPeripheral`\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e`maximumUpdateValueLength`\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\u3061\u306a\u307f\u306b\u3001\u3053\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u8fd4\u3059\u5024\u306f\u30e6\u30fc\u30b6\u30c7\u30fc\u30bf\u3068\u3057\u3066\u4f7f\u3048\u308b\u5bb9\u91cf\u3067\u3059\u3002\nAndroid\u306f\u3001Central\u304b\u3089`requestMtu`\u30e1\u30bd\u30c3\u30c9\u3092\u5b9f\u884c\u5f8c\u306b\u547c\u3070\u308c\u308b`onMtuChanged`\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u3067\u78ba\u8a8d\u3057\u307e\u3059\u3002\n\n**iOS(Central)**\n\n```objc\n\nstatic NSString * const YourCharacteristicUUIDString = /*UUID*/;\n\n...\n\n- (void)peripheral:(CBPeripheral *)peripheral didDiscoverCharacteristicsForService:(CBService *)service error:(NSError *)error {\n    for (CBCharacteristic *characteristic in service.characteristics) {\n\n        // Read Request\n        if ([characteristic.UUID.UUIDString isEqualToString:YourCharacteristicUUIDString]\n            && (characteristic.properties & CBCharacteristicPropertyRead) != 0) {\n            [peripheral readValueForCharacteristic:characteristic];\n        }\n    }\n}\n\n- (void)peripheral:(CBPeripheral *)peripheral didUpdateValueForCharacteristic:(CBCharacteristic *)characteristic\n             error:(NSError *)error {\n    NSData *data = characteristic.value;\n    NSString *val = [[NSString alloc] initWithData:data encoding:NSUTF8StringEncoding];\n    \n    NSLog(@\"Update value=%@ data.length=%zdB\", val, data.length);\n}\n\n...\n\n```\n\n**iOS(Peripheral)**\n\n```objc\n\n...\n\n- (void)peripheralManager:(CBPeripheralManager *)peripheral didReceiveReadRequest:(CBATTRequest *)request {\n    // Peripheral\u5074\u306eCBCentral\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3067MTU\u3092\u78ba\u8a8d\u3059\u308b\n    NSLog(@\"Received read request: MTU=%zd\", request.central.maximumUpdateValueLength);\n    \n    // Read Response\n    if ([request.characteristic.UUID isEqual:self.characteristic.UUID]) {\n        request.value = [@\"Hello\" dataUsingEncoding:NSUTF8StringEncoding];\n        [peripheral respondToRequest:request withResult:CBATTErrorSuccess];\n    }\n    else {\n        [peripheral respondToRequest:request withResult:CBATTErrorRequestNotSupported];\n    }\n}\n\n...\n\n```\n\n**Android(Central)**\n\n```java\n\nprivate static final String YOUR_SERVICE_UUID_STRING = /*UUID*/;\nprivate static final String YOUR_CHARACTERISTIC_UUID_STRING = /*UUID*/;\nprivate static final String TAG = \"YourTag\";\n\n...\n\n    private final BluetoothGattCallback gattCallback = new BluetoothGattCallback() {\n        @Override\n        public void onConnectionStateChange(BluetoothGatt gatt, int status, int newState) {\n            // \u63a5\u7d9a\u6210\u529f\u3057\u305f\u5834\u5408\n            if (newState == BluetoothProfile.STATE_CONNECTED) {\n                // Exchange MTU Request\n                // 512B\u307e\u3067\u62e1\u5f35\u3092\u8981\u6c42\n                if (gatt.requestMtu(512)) {\n                    Log.d(TAG, \"Requested MTU successfully\");\n                } else {\n                    Log.d(TAG, \"Failed to request MTU\");\n                }\n\n                // MTU\u3092\u62e1\u5f35\u305b\u305a\u306b\u30b5\u30fc\u30d3\u30b9\u3092\u691c\u7d22\u3059\u308b\n//                if (gatt != null) {\n//                    if (gatt.discoverServices()) {\n//                       Log.d(TAG, \"Started discovering services\");\n//                    } else {\n//                       Log.d(TAG, \"Failed to start discovering services\");\n//                    }\n//                }\n            }\n        }\n\n        @Override\n        public void onServicesDiscovered(BluetoothGatt gatt, int status) {\n            if (status == BluetoothGatt.GATT_SUCCESS) {\n                for (BluetoothGattService service : gatt.getServices()) {\n\n                    if (!service.getUuid().toString().equalsIgnoreCase(YOUR_SERVICE_UUID_STRING)) {\n                        continue;\n                    }\n\n                    // Read Request\n                    BluetoothGattCharacteristic chara = service.getCharacteristic(UUID.fromString(YOUR_CHARACTERISTIC_UUID_STRING));\n                    if (chara == null) {\n                        continue;\n                    }\n                    if ((chara.getProperties() & BluetoothGattCharacteristic.PROPERTY_READ) != 0) {\n                        gatt.readCharacteristic(chara);\n                    }\n                }\n            }\n        }\n\n        @Override\n        public void onCharacteristicRead(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, int status) {\n            String val = characteristic.getStringValue(0);\n\n            Log.d(TAG, \"onCharacteristicRead: \" + val);\n        }\n\n        @Override\n        public void onMtuChanged(BluetoothGatt gatt, int mtu, int status) {\n            Log.d(\"onMtuChanged: \" + mtu);\n\n            // Exchange MTU Request\u304c\u5b8c\u4e86\u3057\u3066\u304b\u3089\u30b5\u30fc\u30d3\u30b9\u306e\u691c\u51fa\u3092\u958b\u59cb\u3059\u308b\n            if (gatt != null) {\n                if (gatt.discoverServices()) {\n                    Log.d(TAG, \"Started discovering services\");\n                } else {\n                    Log.d(TAG, \"Failed to start discovering services\");\n                }\n            }\n        }\n    };\n\n...\n\n```\n\n**Android(Peripheral)**\n\n```java\n\nprivate static final String TAG = \"YourTag\";\n\n...\n\n   private final BluetoothGattServerCallback gattServerCallback = new BluetoothGattServerCallback() {\n        @Override\n        public void onCharacteristicReadRequest(BluetoothDevice device, int requestId, int offset, BluetoothGattCharacteristic characteristic) {\n            characteristic.setValue(\"HelloWorld\");\n            gattServer.sendResponse(device, requestId, BluetoothGatt.GATT_SUCCESS, offset, characteristic.getValue());\n        }\n\n        @Override\n        public void onMtuChanged(BluetoothDevice device, int mtu) {\n            Log.d(TAG, \"onMtuChanged: \" + mtu);\n        }\n    };\n\n...\n\n```\n\n##\u691c\u8a3c\u7d50\u679c\n\n- iOS(Central) <------> iOS(Peripheral)\n\nMTU\u306f**135B**\u3002\u7279\u306b\u4f55\u3082\u3057\u3066\u3044\u306a\u3044(\u3068\u3044\u3046\u304b\u4f55\u3082\u3067\u304d\u306a\u3044)\u306e\u3067\u3001iOS\u9593\u306f135B\u306b\u52dd\u624b\u306b\u8a2d\u5b9a\u3055\u308c\u308b?\n\n- Android(Central) <------> iOS(Peripheral)\n\nAndroid\u3067MTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u306a\u3044\u5834\u5408\u3001MTU\u306f**23B**\u3002\nAndroid\u3067MTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u5834\u5408\u3001MTU\u306f**158B**\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n\n(**2016/08/26\u8ffd\u8a18**)\niPhone6, iOS10 beta7\u3092Peripheral\u306b\u3057\u3066\u8a66\u3057\u3066\u307f\u307e\u3057\u305f\u3002MTU\u306f**512B**\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n\n- iOS(Central) <------> Android(Peripheral)\n\nMTU\u306f**135B**\u3002Android\u304b\u3089\u306f\u7279\u306bMTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3066\u3044\u307e\u305b\u3093\u304c\u3001`onMtuChanged`\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u30e1\u30bd\u30c3\u30c9\u304c\u547c\u3070\u308c\u307e\u3057\u305f\u3002\u3068\u3044\u3046\u3053\u3068\u306f\u3001iOS\u304b\u3089135B\u307e\u3067MTU\u3092\u62e1\u5f35\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u52dd\u624b\u306b\u9001\u3089\u308c\u3066\u3044\u308b?\n\n(**2016/08/26\u8ffd\u8a18**)\niPhone6, iOS10 beta7\u3092Central\u3067\u8a66\u3057\u305f\u3068\u3053\u308d\u3001**185B**\u307e\u3067\u62e1\u5f35\u3055\u308c\u307e\u3057\u305f\u3002iOS10\u304c\u6b63\u5f0f\u30ea\u30ea\u30fc\u30b9\u3055\u308c\u305f\u3089\u3001\u4ed6\u306e\u7aef\u672b\u3067\u3082\u78ba\u8a8d\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n- Android(Central) <------> Android(Peripheral)\n\nMTU\u62e1\u5f35\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u305f\u5834\u5408\u3001MTU\u306f**512B**\u307e\u3067\u62e1\u5f35\u3067\u304d\u307e\u3057\u305f\u3002\n\n\u3053\u308c\u3089\u306e\u7d50\u679c\u3092\u8003\u5bdf\u3059\u308b\u3068\u4ee5\u4e0b\u306e\u3053\u3068\u304c\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\n###\u691c\u8a3c\u7d50\u679c\u304b\u3089\u8a00\u3048\u305d\u3046\u306a\u3053\u3068\n\n- iOS\u306eMTU\u4e0a\u9650\u306f**158B**\u3068\u8003\u3048\u3089\u308c\u308b\n    - (**2016/08/26\u8ffd\u8a18**) iOS10\u3067\u306f**512B**\u304c\u4e0a\u9650\u3068\u8003\u3048\u3089\u308c\u308b\n- Android\u306eMTU\u4e0a\u9650\u306f**512B**\u3068\u8003\u3048\u3089\u308c\u308b\n- iOS\u306fCentral\u306e\u5834\u5408\u3001\u63a5\u7d9a\u6642\u306b\u30b7\u30b9\u30c6\u30e0\u304c\u81ea\u52d5\u3067135B\u307e\u3067MTU\u3092\u62e1\u5f35\u3059\u308b\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\n    - (**2016/08/26\u8ffd\u8a18**) i0S10\u306f185B\u307e\u3067\u62e1\u5f35\u3092\u30ea\u30af\u30a8\u30b9\u30c8\u3057\u3066\u3044\u308b\u306e\u3067\u306f\u306a\u3044\u304b\n- OS\u30d0\u30fc\u30b8\u30e7\u30f3\u3084\u7aef\u672b\u306b\u3088\u3063\u3066\u306f\u4e0a\u9650\u304c\u7570\u306a\u308b\u53ef\u80fd\u6027\u306f\u3042\u308b\n\n\u3082\u3046\u5c11\u3057\u8272\u3005\u306a\u7aef\u672b\u3067\u8a66\u3057\u3066\u307f\u305f\u3044\u3068\u3053\u308d\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u691c\u8a3c\u7d50\u679c\u306f\u3053\u3093\u306a\u611f\u3058\u3067\u3059\u3002\n\n#\u305d\u306e\u4ed6\n\n- \u691c\u8a3c\u3067\u4f7f\u7528\u3057\u305fGalaxy S4(Android 5.0.1)\u306f\u3001\u30da\u30ea\u30d5\u30a7\u30e9\u30eb\u7aef\u672b\u3068\u3057\u3066\u306f\u5229\u7528\u3067\u304d\u307e\u305b\u3093\u3067\u3057\u305f\u3002\n\n```\nE/BluetoothAdapter: bluetooth le advertising not supported\n```\n\n\u3053\u3093\u306a\u30a8\u30e9\u30fc\u30ed\u30b0\u304c\u51fa\u3066\u3057\u307e\u3044\u307e\u3057\u305f\u3002\n\n- iOS10\u304b\u3089\u306f\u3001Peripheral\u3067\u5229\u7528\u3059\u308b\u5834\u5408\u3001Info.plist\u306b`NSBluetoothPeripheralUsageDescription`\u30ad\u30fc\u3092\u6307\u5b9a\u3057\u3001\u4f55\u306e\u305f\u3081\u306b\u4f7f\u3046\u306e\u304b\u3092\u8aac\u660e\u3057\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3088\u3046\u3067\u3059\u3002\u6307\u5b9a\u3057\u306a\u3044\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30ed\u30b0\u304c\u51fa\u3066\u3001\u30a2\u30d7\u30ea\u306f\u30af\u30e9\u30c3\u30b7\u30e5\u3057\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n```\n[access] This app has crashed because it attempted to access privacy-sensitive data without a usage description.  The app's Info.plist must contain an NSBluetoothPeripheralUsageDescription key with a string value explaining to the user how the app uses this data.\n```\n\n#\u53c2\u8003\n\n- [Reinforce-Lab.'s Blog: BLE\u306e\u901a\u4fe1\u4ed5\u69d8](http://reinforce-lab.github.io/blog/2013/08/13/blebook-ch2-ble-spec/)\n- [iOS\u306eCore Bluetooth / BLE\u306e\u901a\u4fe1\u901f\u5ea6](http://qiita.com/shu223/items/352a84a60be75d656ae3)\n- [Android Developers: Bluetooth Low Energy](https://developer.android.com/guide/topics/connectivity/bluetooth-le.html)\n- iOS \u2715 BLE Core Bluetooth\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 (\u66f8\u7c4d)\n"}