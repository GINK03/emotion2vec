{"context": "(\u672c\u7a3f\u306f, \u30b7\u30b9\u30c6\u30e0\u7cfb\u8ad6\u6587\u7d39\u4ecb Advent Calendar 2014, 12/20 \u3067\u3059 http://www.adventar.org/calendars/440)\n\u8ad6\u6587\u306f arXiv \u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059.\nhttp://arxiv.org/abs/1406.2294\nJump Consitent Hash \u3068\u547c\u3070\u308c\u308b, \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u7cfb\u3067\u6709\u76ca\u306a\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u6c42\u3081\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059. \u73fe\u5728\u53f2\u4e0a\u6700\u5f37\u306e\u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3072\u3068\u3064\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046. \u7121\u6027\u306b\u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u306d!\n\u5171\u8457\u8005\u306e Eric Veach \u306b\u3082\u6ce8\u76ee\u3067\u3059. Google \u3092\u6551\u3063\u305f\u3068\u8a00\u308f\u308c\u3066\u3044\u308b distinguished engineer \u3067\u3059.\n(G \u793e\u306e\u3072\u3068\u306f\u5f7c\u306e\u540d\u524d\u3092\u793e\u54e1\u540d\u7c3f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9? \u304b\u3089\u63a2\u3057\u3066\u307f\u307e\u3057\u3087\u3046! \u793e\u54e1\u756a\u53f7 20 \u304f\u3089\u3044\u306b\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u3088!)\nhttp://syoyo.wordpress.com/2009/06/06/eric-veach-\u306f-google-\u3067-adwords-\u958b\u767a\u3092\u7387\u3044\u3066\u3044\u305f/\n\u305d\u3093\u306a\u5f7c\u304c\u306a\u3093\u3068 10 \u5e74\u4ee5\u4e0a\u3076\u308a\u306b\u8ad6\u6587\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u306e\u3067, \u3053\u308c\u306f\u3082\u3046\u8aad\u3093\u3067\u7d39\u4ecb\u3059\u308b\u3057\u304b\u306a\u3044.\n\n\u30b3\u30fc\u30c9\u306f 5 \u884c!\nint32_t JumpConsistentHash(uint64_t key, int32_t num_buckets) { \n  int64_t b = \u00ad1, j = 0;\n  while (j < num_buckets) {\n    b=j;\n    key = key * 2862933555777941757ULL + 1;\n    j = (b + 1) * (double(1LL << 31) / double((key >> 33) + 1));\n  }\n  return b;\n}\n\n\u306a\u3093\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d! \u3044\u308d\u3044\u308d\u7d10\u89e3\u3044\u3066\u3044\u304d\u307e\u3057\u3087\u3046.\n\nConsistent hash\n\u3055\u3066, \u305d\u306e\u307e\u3048\u306b consistent hash \u306b\u3064\u3044\u3066\u304a\u3055\u3089\u3044\u3057\u307e\u3059.\n\u305f\u3068\u3048\u3070, \u6700\u521d\u306b\u30d0\u30b1\u30c3\u30c8(bucket)\u304c 10 \u500b\u3042\u308a, hash(key) % 10 \u3067 bucket ID \u3092\u7b97\u51fa\u3057\u3066, \u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u3092\u305d\u308c\u305e\u308c\u306e bucket \u306b\u4fdd\u6301\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u307e\u3059. \u305d\u306e\u5f8c, \u30d0\u30b1\u30c3\u30c8\u6570\u3092 12 \u500b\u306b\u62e1\u5f35\u3057\u305f\u3068\u3057\u307e\u3059. \n\u901a\u5e38\u306e\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3067\u306f hash(key) % 10 != hash(key) % 12 \u3067\u3059\u304b\u3089, \u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0(key)\u306b\u5bfe\u3057\u3066\u65b0\u3057\u3044\u30cf\u30c3\u30b7\u30e5\u3092\u6c42\u3081\u308b\u3068, \u518d\u8a08\u7b97\u3055\u308c\u305f\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u304c\u7570\u306a\u308b\u305f\u3081\u306b, \u30d0\u30b1\u30c3\u30c8\u9593\u3067\u306e\u30c7\u30fc\u30bf\u306e\u79fb\u52d5\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059.\n\u305f\u3068\u3048\u3070\u500b\u3005\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u8d8a\u3057\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046. \u30d0\u30b1\u30c3\u30c8(\u305f\u3068\u3048\u3070 DB \u3067\u3044\u3046\u30b7\u30e3\u30fc\u30c9\u30ce\u30fc\u30c9)\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3073\u306b, \u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u30cd\u30c3\u30c8\u8d8a\u3057\u306b\u79fb\u52d5\u3057\u3066\u30ea\u30d0\u30e9\u30f3\u30b9\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u306a\u308b\u3068, \u3064\u3089\u304f\u3066\u6d99\u3067\u6795\u3092\u6fe1\u3089\u3059\u65e5\u3005\u306b\u306a\u3063\u3066\u3057\u307e\u3059\u306d...\n\u7406\u60f3\u3068\u3057\u3066\u306f\u6700\u521d\u306e 10 \u500b\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u3042\u3063\u305f 1/6 \u306e\u30c7\u30fc\u30bf\u306e\u307f\u304c, \u65b0\u3057\u3044 2 \u500b\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u79fb\u52d5\u3057(1/6 = 12/(12-10)), \u6b8b\u308a\u306f\u5143\u3005\u306e\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u306e\u5834\u6240\u306b\u3068\u3069\u307e\u3063\u3066\u307b\u3057\u3044\u3067\u3059\u306d. \u3064\u307e\u308a, 5/6 \u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066 hash(key) % 10 == hash(key) % 12.\n\u3053\u306e\u3088\u3046\u306a\u7279\u6027\u304c\u51fa\u308b\u3088\u3046\u306a\u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f, consistent hash \u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3059(http://en.wikipedia.org/wiki/Consistent_hashing). consistent hash \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066\u306f, Karger et al. \u304c\u6709\u540d\u306a\u3088\u3046\u3067\u3059(Akamai \u306e Web \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b?).\nconsistent hash \u306b\u3088\u308b bucket ID \u306e\u5272\u308a\u5f53\u3066\u4f8b\u3092\u793a\u3057\u307e\u3059.\n\n\u6a2a\u8ef8\u306e\u6570\u5b57\u304c bucket \u6570 \u3067\u3059. \u7e26\u8ef8\u304c\u30ad\u30fc(k1, k2, k3 \u306e\u4e09\u7a2e\u985e)\u306b\u306a\u308a\u307e\u3059. cell \u5185\u304c bucket ID \u306b\u306a\u308a\u307e\u3059. \u3069\u308c\u3082, bucket ID \u306f, 0 \u304b\u3089\u59cb\u307e\u308a\u53f3\u306b\u3044\u304f\u307b\u3069(bucket \u304c\u5897\u3048\u3066\u3044\u304f\u307b\u3069) increasing \u3057\u3066, \u304b\u3064 bucket \u6570\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u306d.\n\nJump consistent hash\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u8868\u306b\u3042\u308b\u3088\u3046\u306a bucket ID \u5272\u308a\u5f53\u3066\u306e\u6027\u8cea\u3092\u6301\u3064, jump consistent hash \u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n(ch() = consistent hash \u306e\u7565\u3067\u3059)\nint ch(int key, int num_buckets) { \n  random.seed(key);\n  intb=0; // This will track ch(key,j+1).\n  for (int j = 1; j < num_buckets; j++) {\n    if (random.next() < 1.0 / (j + 1)) b = j; \n  }\n  return b;\n}\n\n\u30ad\u30fc\u306f\u306a\u306b\u304b\u3057\u3089\u306e\u65b9\u6cd5\u3067 int \u5024\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059. \u30ad\u30fc\u306e\u5024\u3092\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3068\u3057\u3066\u8a2d\u5b9a\u3057, \u4e71\u6570\u3092\u30c9\u30ed\u30fc(draw)\u3057\u3066, \u78ba\u7387\u7684\u306b bucket ID \u3092\u6c7a\u3081\u3066\u884c\u304d\u307e\u3059.\n\u30d0\u30b1\u30c3\u30c8\u6570\u304c 2 \u306e\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u898b\u307e\u3057\u3087\u3046.\nj = 1 \u306e\u3068\u304d, random.next() < (1/2) \u3068\u306a\u308a\u307e\u3059\u304b\u3089, \u30ad\u30fc\u306f\u534a\u5206\u306e\u78ba\u7387\u3067 bucket 0 \u306b\u3068\u3069\u307e\u308a, \u534a\u5206\u306e\u78ba\u7387\u3067 bucket 1 \u306b\u79fb\u884c\u3057\u307e\u3059. \u4e71\u6570\u304c\u5341\u5206\u306b\u504f\u308a\u304c\u306a\u3051\u308c\u3070, \u3053\u308c\u306f\u4efb\u610f\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066, bucket ID 0 \u3068 1 \u304c, \u7b49\u3057\u304f\u5206\u5e03\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\u81ea\u660e\u3067\u3059\u306d. \n\u30d0\u30b1\u30c3\u30c8\u6570\u304c 3 \u306e\u3068\u304d,\nj = 1 : (1/2) \u306e\u78ba\u7387\u3067 j \u306b\u30b8\u30e3\u30f3\u30d7\nj = 2 : (1/3) \u306e\u78ba\u7387\u3067 j \u306b\u30b8\u30e3\u30f3\u30d7\n\u306b\u306a\u308a\u307e\u3059. \u3053\u308c\u3092\u4e00\u822c\u5316\u3057\u3066 n \u307e\u3067\u3068\u306a\u308b\u3068, \u306a\u3093\u3068\u306a\u304f\u4e0e\u3048\u3089\u308c\u305f [0, n) \u306e\u4e2d\u3067, \u4efb\u610f\u306e\u30ad\u30fc\u5024\u306b\u5bfe\u3057\u3066\u7b49\u3057\u304f bucket ID \u304c\u5206\u5e03\u3057\u305d\u3046\u306a\u306e\u304c\u60f3\u50cf\u3067\u304d\u307e\u3059\u306d. \u3088\u308a\u8a73\u7d30\u306a\u6570\u5b66\u306f\u8ad6\u6587\u3092\u305c\u3072\u8aad\u307f\u89e3\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\n\u63a2\u7d22\u3092\u9ad8\u901f\u5316\u3059\u308b.\n\u3057\u304b\u3057, \u4eca\u306e\u307e\u307e\u3067\u306f, bucket ID \u3092\u6c42\u3081\u308b\u3068\u3053\u308d\u304c\u30ea\u30cb\u30a2\u30b5\u30fc\u30c1\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067, buckets \u304c 10 \u4e07\u3068\u304b 100 \u4e07\u3068\u304b\u306b\u306a\u308b\u3068\u8a08\u7b97\u6642\u9593\u3082\u305d\u308c\u306a\u308a\u306b\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059.\n\u305d\u3053\u3067, \u3044\u308d\u3044\u308d\u30b8\u30e3\u30f3\u30d7\u306e\u6027\u8cea\u3092\u89e3\u6790\u3059\u308b\u3068, \u3042\u3089\u7d20\u6575, \u63a2\u7d22\u3092 log \u6642\u9593\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059(\u3088\u308a\u8a73\u7d30\u306f\u8ad6\u6587\u3092\u305c\u3072\u8aad\u307f\u89e3\u3044\u3066\u304f\u3060\u3055\u3044)\nint ch(int key, int num_buckets) {\n  random.seed(key);\n  int b = \u00ad1; // bucket number before the previous jump\n  int j = 0; // bucket number before the current jump\n  while (j < num_buckets) {\n    b=j;\n    r = random.next();\n    j = floor((b + 1) / r);\n  }\n  return = b; \n}\n\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f, jump consistent hash \u3067\u306f \u8a18\u61b6\u9818\u57df\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044 \u3053\u3068\u3067\u3059. \n\u65e2\u5b58\u7814\u7a76\u3067\u306f, \u8a18\u61b6\u9818\u57df(\u30e1\u30e2\u30ea)\u3092\u4f7f\u3063\u3066\u6728\u69cb\u9020\u3092\u4f5c\u308b\u306a\u3069\u3057\u3066\u3046\u307e\u304f\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u51fa\u529b\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u308a\u3064\u3064\u3082\u63a2\u7d22\u3092\u9ad8\u901f\u5316\u3059\u308b\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3057\u305f. \u3057\u304b\u3057, \u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u5834\u5408, bucket \u306e\u6570\u304c\u5897\u3048\u308b\u3068\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u591a\u304f\u306a\u308a, \u304b\u3064\u30cf\u30c3\u30b7\u30e5\u306e\u8a08\u7b97\u6642\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a, \u30cf\u30c3\u30b7\u30e5\u8a08\u7b97\u306e\u6027\u80fd\u304c\u4f4e\u4e0b\u3059\u308b\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f.\n\u63d0\u6848\u624b\u6cd5\u3067\u306f, \u305d\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093.\n\nSimplify \u3059\u308b.\n\u3055\u3066, \u3053\u3053\u3067 random(\u7591\u4f3c\u4e71\u6570)\u306f, \u751f\u6210\u3055\u308c\u308b\u7591\u4f3c\u4e71\u6570\u306e\u8cea\u304c\u3088\u3051\u308c\u3070\u57fa\u672c\u7684\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3082\u3088\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059. \n\u305d\u3053\u3067\u8ad6\u6587\u3067\u306f, Linear Congruential Generator(LCG) \u306b\u3088\u308b\u9ad8\u901f\u304b\u3064\u8cea\u306e\u3088\u3044\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059.\n(Cite \u3055\u308c\u3066\u3044\u308b Pierre L'Ecuyer \u5148\u751f\u3082, \u3068\u3063\u3066\u3082\u6709\u540d\u3067\u3059\u306e\u3088! http://www.iro.umontreal.ca/~lecuyer/)\n\u3053\u308c\u306b\u3088\u308a, \u6700\u7d42\u7684\u306b\u30b3\u30fc\u30c9\u306f\u6700\u521d\u306b\u793a\u3057\u305f\u7d50\u679c\u306b\u306a\u308a\u307e\u3059. \nint32_t JumpConsistentHash(uint64_t key, int32_t num_buckets) { \n  int64_t b = \u00ad1, j = 0;\n  while (j < num_buckets) {\n    b=j;\n    key = key * 2862933555777941757ULL + 1;\n    j = (b + 1) * (double(1LL << 31) / double((key >> 33) + 1));\n  }\n  return b;\n}\n\nCool!\n\n\u6027\u80fd\nJump Consistent Hash \u3067\u306f\u4e71\u6570\u3068\u78ba\u7387\u306e\u6027\u8cea\u3092\u4f7f\u3063\u3066\u8a18\u61b6\u9818\u57df\u3092\u4f7f\u308f\u305a\u3068\u3082, \u9ad8\u901f\u3067(log \u30aa\u30fc\u30c0\u30fc), \u304b\u3064\u5206\u5e03\u306e\u3088\u3044\u30cf\u30c3\u30b7\u30e5\u5024\u8a08\u7b97\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059.\n\u8ad6\u6587\u3092\u898b\u307e\u3059\u3068, \u5206\u5e03\u306e\u8cea\u3082\u3088\u304f, \u304b\u3064\u9ad8\u901f\u306b\u8a08\u7b97\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059.\n\n\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u53ef\u8996\u5316\u3057\u3066\u7406\u89e3\u3092\u6df1\u3081\u308b.\n\u30ca\u30a6\u306a\u30e4\u30f3\u30b0\u306a\u3089\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u306d!\nJavaScript + d3.js \u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f. \nhttps://github.com/syoyo/jch-vis\n\nJavaScript \u306e 64bit integer \u306e\u6271\u3044\u304c\u3042\u3084\u3057\u3044\u306e\u3067\u4e71\u6570\u8a08\u7b97\u90e8\u5206\u3092\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u3044\u307e\u3059. \u305d\u306e\u305f\u3081\u304b\u5206\u5e03\u306b\u306f\u504f\u308a\u304c\u3042\u308b\u611f\u3058\u304c\u3057\u307e\u3059\u304c, \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6982\u8981\u3092\u3064\u304b\u3080\u306b\u306f\u5341\u5206\u3067\u3057\u3087\u3046.\n\u70b9\u305d\u308c\u305e\u308c\u304c\u30a2\u30a4\u30c6\u30e0\u306b\u306a\u308a, \u30a2\u30a4\u30c6\u30e0\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306b ID \u304c\u632f\u3089\u308c\u3066\u3044\u307e\u3059. ID \u304b\u3089 JCH \u3067\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u3092\u8a08\u7b97\u3057, \u5bfe\u5fdc\u3059\u308b\u30d0\u30b1\u30c3\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059. \u6a2a\u304c\u30d0\u30b1\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059. \n\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068, \u30d0\u30b1\u30c3\u30c8\u304c\u3072\u3068\u3064\u8ffd\u52a0\u3055\u308c, \u5404\u30a2\u30a4\u30c6\u30e0\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u518d\u8a08\u7b97\u3057\u307e\u3059. \u518d\u5ea6 JCH \u3092\u9069\u7528\u3057\u3066\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u3092\u8a08\u7b97\u3057, \u5909\u5316\u306e\u3042\u3063\u305f\u3082\u306e(\u5897\u3048\u305f\u30d0\u30b1\u30c3\u30c8\u306e\u756a\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3082\u306e)\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u3066\u3044\u307e\u3059. \u79fb\u52d5\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u6700\u5c0f\u9650\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u898b\u3066\u53d6\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059.\n\n\u6b20\u70b9\n\n\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u306f, \u9023\u756a\u3067 0 \u304b\u3089 n-1 \u3067\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b. \u5f93\u3063\u3066, \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3067\u306f\u6709\u76ca\u3060\u304c, Web \u5206\u6563\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u6709\u76ca\u3067\u306a\u3044.\n\n\n\u304a\u307e\u3051\n2011 \u5e74\u306e\u6642\u70b9\u3067 Guava \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f7f\u308f\u308c\u3066\u3044\u305f.\nhttp://code.google.com/p/guava-libraries/source/browse/guava/src/com/google/common/hash/Hashing.java\n\n\u307e\u3068\u3081\n\nJump Consistent Hash \u3059\u3054\u3044\n\u78ba\u7387\u3092\u5236\u3059\u308b\u3082\u306e\u306f\u4e16\u754c\u3092\u5236\u3059\u308b.\n\u7279\u8a31\u306f\u7533\u8acb\u3057\u3066\u3044\u306a\u3044(\u3057, \u7533\u8acb\u306e\u4e88\u5b9a\u3082\u4eca\u306e\u3068\u3053\u308d\u7121\u3044)\u306e\u3067, \u7686\u3055\u3093\u306b\u305f\u304f\u3055\u3093\u4f7f\u3063\u3066\u307b\u3057\u3044\u3088\u3046\u3067\u3059.\n\n(\u672c\u7a3f\u306f, \u30b7\u30b9\u30c6\u30e0\u7cfb\u8ad6\u6587\u7d39\u4ecb Advent Calendar 2014, 12/20 \u3067\u3059 http://www.adventar.org/calendars/440)\n\n\u8ad6\u6587\u306f arXiv \u304b\u3089\u53d6\u5f97\u3067\u304d\u307e\u3059.\nhttp://arxiv.org/abs/1406.2294\n\n \nJump Consitent Hash \u3068\u547c\u3070\u308c\u308b, \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u7cfb\u3067\u6709\u76ca\u306a\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3092\u6c42\u3081\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3059. \u73fe\u5728\u53f2\u4e0a\u6700\u5f37\u306e\u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u3072\u3068\u3064\u3068\u8a00\u3048\u308b\u3067\u3057\u3087\u3046. \u7121\u6027\u306b\u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308a\u305f\u304f\u306a\u3063\u3066\u304d\u307e\u3059\u306d!\n\n\u5171\u8457\u8005\u306e Eric Veach \u306b\u3082\u6ce8\u76ee\u3067\u3059. Google \u3092\u6551\u3063\u305f\u3068\u8a00\u308f\u308c\u3066\u3044\u308b distinguished engineer \u3067\u3059.\n(G \u793e\u306e\u3072\u3068\u306f\u5f7c\u306e\u540d\u524d\u3092\u793e\u54e1\u540d\u7c3f\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9? \u304b\u3089\u63a2\u3057\u3066\u307f\u307e\u3057\u3087\u3046! \u793e\u54e1\u756a\u53f7 20 \u304f\u3089\u3044\u306b\u3042\u308b\u3089\u3057\u3044\u3067\u3059\u3088!)\n\nhttp://syoyo.wordpress.com/2009/06/06/eric-veach-\u306f-google-\u3067-adwords-\u958b\u767a\u3092\u7387\u3044\u3066\u3044\u305f/\n\n\u305d\u3093\u306a\u5f7c\u304c\u306a\u3093\u3068 10 \u5e74\u4ee5\u4e0a\u3076\u308a\u306b\u8ad6\u6587\u3092\u51fa\u3057\u3066\u3044\u307e\u3059\u306e\u3067, \u3053\u308c\u306f\u3082\u3046\u8aad\u3093\u3067\u7d39\u4ecb\u3059\u308b\u3057\u304b\u306a\u3044.\n\n## \u30b3\u30fc\u30c9\u306f 5 \u884c!\n\n```\nint32_t JumpConsistentHash(uint64_t key, int32_t num_buckets) { \n  int64_t b = \u00ad1, j = 0;\n  while (j < num_buckets) {\n    b=j;\n    key = key * 2862933555777941757ULL + 1;\n    j = (b + 1) * (double(1LL << 31) / double((key >> 33) + 1));\n  }\n  return b;\n}\n```\n\n\u306a\u3093\u3068\u3082\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u306d! \u3044\u308d\u3044\u308d\u7d10\u89e3\u3044\u3066\u3044\u304d\u307e\u3057\u3087\u3046.\n\n## Consistent hash\n\n\u3055\u3066, \u305d\u306e\u307e\u3048\u306b consistent hash \u306b\u3064\u3044\u3066\u304a\u3055\u3089\u3044\u3057\u307e\u3059.\n\n\u305f\u3068\u3048\u3070, \u6700\u521d\u306b\u30d0\u30b1\u30c3\u30c8(bucket)\u304c 10 \u500b\u3042\u308a, hash(key) % 10 \u3067 bucket ID \u3092\u7b97\u51fa\u3057\u3066, \u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0\u3092\u305d\u308c\u305e\u308c\u306e bucket \u306b\u4fdd\u6301\u3057\u3066\u3044\u305f\u3068\u3057\u3066\u307e\u3059. \u305d\u306e\u5f8c, \u30d0\u30b1\u30c3\u30c8\u6570\u3092 12 \u500b\u306b\u62e1\u5f35\u3057\u305f\u3068\u3057\u307e\u3059. \n\n\u901a\u5e38\u306e\u30cf\u30c3\u30b7\u30e5\u95a2\u6570\u3067\u306f hash(key) % 10 != hash(key) % 12 \u3067\u3059\u304b\u3089, \u30c7\u30fc\u30bf\u30a2\u30a4\u30c6\u30e0(key)\u306b\u5bfe\u3057\u3066\u65b0\u3057\u3044\u30cf\u30c3\u30b7\u30e5\u3092\u6c42\u3081\u308b\u3068, \u518d\u8a08\u7b97\u3055\u308c\u305f\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u304c\u7570\u306a\u308b\u305f\u3081\u306b, \u30d0\u30b1\u30c3\u30c8\u9593\u3067\u306e\u30c7\u30fc\u30bf\u306e\u79fb\u52d5\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3044\u307e\u3059.\n\n\u305f\u3068\u3048\u3070\u500b\u3005\u306e\u30d0\u30b1\u30c3\u30c8\u304c\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u8d8a\u3057\u306b\u5b58\u5728\u3057\u3066\u3044\u308b\u3068\u8003\u3048\u3066\u307f\u307e\u3057\u3087\u3046. \u30d0\u30b1\u30c3\u30c8(\u305f\u3068\u3048\u3070 DB \u3067\u3044\u3046\u30b7\u30e3\u30fc\u30c9\u30ce\u30fc\u30c9)\u3092\u8ffd\u52a0\u3059\u308b\u305f\u3073\u306b, \u305f\u304f\u3055\u3093\u306e\u30c7\u30fc\u30bf\u3092\u30cd\u30c3\u30c8\u8d8a\u3057\u306b\u79fb\u52d5\u3057\u3066\u30ea\u30d0\u30e9\u30f3\u30b9\u3057\u306a\u304f\u3066\u306f\u306a\u3089\u306a\u3044\u3068\u306a\u308b\u3068, \u3064\u3089\u304f\u3066\u6d99\u3067\u6795\u3092\u6fe1\u3089\u3059\u65e5\u3005\u306b\u306a\u3063\u3066\u3057\u307e\u3059\u306d...\n\n\u7406\u60f3\u3068\u3057\u3066\u306f\u6700\u521d\u306e 10 \u500b\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u3042\u3063\u305f 1/6 \u306e\u30c7\u30fc\u30bf\u306e\u307f\u304c, \u65b0\u3057\u3044 2 \u500b\u306e\u30d0\u30b1\u30c3\u30c8\u306b\u79fb\u52d5\u3057(1/6 = 12/(12-10)), \u6b8b\u308a\u306f\u5143\u3005\u306e\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u306e\u5834\u6240\u306b\u3068\u3069\u307e\u3063\u3066\u307b\u3057\u3044\u3067\u3059\u306d. \u3064\u307e\u308a, 5/6 \u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066 hash(key) % 10 == hash(key) % 12.\n\n\u3053\u306e\u3088\u3046\u306a\u7279\u6027\u304c\u51fa\u308b\u3088\u3046\u306a\u30cf\u30c3\u30b7\u30e5\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f, consistent hash \u3068\u547c\u3070\u308c\u3066\u3044\u307e\u3059(http://en.wikipedia.org/wiki/Consistent_hashing). consistent hash \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066\u306f, Karger et al. \u304c\u6709\u540d\u306a\u3088\u3046\u3067\u3059(Akamai \u306e Web \u30ad\u30e3\u30c3\u30b7\u30f3\u30b0\u306b\u4f7f\u308f\u308c\u3066\u3044\u308b?).\n\nconsistent hash \u306b\u3088\u308b bucket ID \u306e\u5272\u308a\u5f53\u3066\u4f8b\u3092\u793a\u3057\u307e\u3059.\n\n![Screen Shot 2014-12-19 at 9.56.13 PM.png](https://qiita-image-store.s3.amazonaws.com/0/36275/0e6a0643-b483-b1b8-537a-ad2a13fd83bd.png \"Screen Shot 2014-12-19 at 9.56.13 PM.png\")\n\n\u6a2a\u8ef8\u306e\u6570\u5b57\u304c bucket \u6570 \u3067\u3059. \u7e26\u8ef8\u304c\u30ad\u30fc(k1, k2, k3 \u306e\u4e09\u7a2e\u985e)\u306b\u306a\u308a\u307e\u3059. cell \u5185\u304c bucket ID \u306b\u306a\u308a\u307e\u3059. \u3069\u308c\u3082, bucket ID \u306f, 0 \u304b\u3089\u59cb\u307e\u308a\u53f3\u306b\u3044\u304f\u307b\u3069(bucket \u304c\u5897\u3048\u3066\u3044\u304f\u307b\u3069) increasing \u3057\u3066, \u304b\u3064 bucket \u6570\u3088\u308a\u5c0f\u3055\u3044\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059\u306d.\n\n## Jump consistent hash\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30c6\u30fc\u30d6\u30eb\u8868\u306b\u3042\u308b\u3088\u3046\u306a bucket ID \u5272\u308a\u5f53\u3066\u306e\u6027\u8cea\u3092\u6301\u3064, jump consistent hash \u3068\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059.\n(ch() = consistent hash \u306e\u7565\u3067\u3059)\n\n```\nint ch(int key, int num_buckets) { \n  random.seed(key);\n  intb=0; // This will track ch(key,j+1).\n  for (int j = 1; j < num_buckets; j++) {\n    if (random.next() < 1.0 / (j + 1)) b = j; \n  }\n  return b;\n}\n```\n\n\u30ad\u30fc\u306f\u306a\u306b\u304b\u3057\u3089\u306e\u65b9\u6cd5\u3067 int \u5024\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3082\u306e\u3068\u3057\u307e\u3059. \u30ad\u30fc\u306e\u5024\u3092\u4e71\u6570\u306e\u30b7\u30fc\u30c9\u3068\u3057\u3066\u8a2d\u5b9a\u3057, \u4e71\u6570\u3092\u30c9\u30ed\u30fc(draw)\u3057\u3066, \u78ba\u7387\u7684\u306b bucket ID \u3092\u6c7a\u3081\u3066\u884c\u304d\u307e\u3059.\n\n\u30d0\u30b1\u30c3\u30c8\u6570\u304c 2 \u306e\u30b1\u30fc\u30b9\u3092\u8003\u3048\u3066\u898b\u307e\u3057\u3087\u3046.\n\nj = 1 \u306e\u3068\u304d, random.next() < (1/2) \u3068\u306a\u308a\u307e\u3059\u304b\u3089, \u30ad\u30fc\u306f\u534a\u5206\u306e\u78ba\u7387\u3067 bucket 0 \u306b\u3068\u3069\u307e\u308a, \u534a\u5206\u306e\u78ba\u7387\u3067 bucket 1 \u306b\u79fb\u884c\u3057\u307e\u3059. \u4e71\u6570\u304c\u5341\u5206\u306b\u504f\u308a\u304c\u306a\u3051\u308c\u3070, \u3053\u308c\u306f\u4efb\u610f\u306e\u30ad\u30fc\u306b\u5bfe\u3057\u3066, bucket ID 0 \u3068 1 \u304c, \u7b49\u3057\u304f\u5206\u5e03\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u306e\u304c\u81ea\u660e\u3067\u3059\u306d. \n\n\u30d0\u30b1\u30c3\u30c8\u6570\u304c 3 \u306e\u3068\u304d,\n\nj = 1 : (1/2) \u306e\u78ba\u7387\u3067 j \u306b\u30b8\u30e3\u30f3\u30d7\nj = 2 : (1/3) \u306e\u78ba\u7387\u3067 j \u306b\u30b8\u30e3\u30f3\u30d7\n\n\u306b\u306a\u308a\u307e\u3059. \u3053\u308c\u3092\u4e00\u822c\u5316\u3057\u3066 n \u307e\u3067\u3068\u306a\u308b\u3068, \u306a\u3093\u3068\u306a\u304f\u4e0e\u3048\u3089\u308c\u305f [0, n) \u306e\u4e2d\u3067, \u4efb\u610f\u306e\u30ad\u30fc\u5024\u306b\u5bfe\u3057\u3066\u7b49\u3057\u304f bucket ID \u304c\u5206\u5e03\u3057\u305d\u3046\u306a\u306e\u304c\u60f3\u50cf\u3067\u304d\u307e\u3059\u306d. \u3088\u308a\u8a73\u7d30\u306a\u6570\u5b66\u306f\u8ad6\u6587\u3092\u305c\u3072\u8aad\u307f\u89e3\u3044\u3066\u307f\u3066\u304f\u3060\u3055\u3044.\n\n### \u63a2\u7d22\u3092\u9ad8\u901f\u5316\u3059\u308b.\n\n\u3057\u304b\u3057, \u4eca\u306e\u307e\u307e\u3067\u306f, bucket ID \u3092\u6c42\u3081\u308b\u3068\u3053\u308d\u304c\u30ea\u30cb\u30a2\u30b5\u30fc\u30c1\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u3067, buckets \u304c 10 \u4e07\u3068\u304b 100 \u4e07\u3068\u304b\u306b\u306a\u308b\u3068\u8a08\u7b97\u6642\u9593\u3082\u305d\u308c\u306a\u308a\u306b\u304b\u304b\u3063\u3066\u3057\u307e\u3044\u307e\u3059.\n\n\u305d\u3053\u3067, \u3044\u308d\u3044\u308d\u30b8\u30e3\u30f3\u30d7\u306e\u6027\u8cea\u3092\u89e3\u6790\u3059\u308b\u3068, \u3042\u3089\u7d20\u6575, \u63a2\u7d22\u3092 log \u6642\u9593\u3067\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059(\u3088\u308a\u8a73\u7d30\u306f\u8ad6\u6587\u3092\u305c\u3072\u8aad\u307f\u89e3\u3044\u3066\u304f\u3060\u3055\u3044)\n\n```\nint ch(int key, int num_buckets) {\n  random.seed(key);\n  int b = \u00ad1; // bucket number before the previous jump\n  int j = 0; // bucket number before the current jump\n  while (j < num_buckets) {\n    b=j;\n    r = random.next();\n    j = floor((b + 1) / r);\n  }\n  return = b; \n}\n```\n\n\u3053\u3053\u3067\u91cd\u8981\u306a\u306e\u306f, jump consistent hash \u3067\u306f **\u8a18\u61b6\u9818\u57df\u3092\u4f7f\u3063\u3066\u3044\u306a\u3044** \u3053\u3068\u3067\u3059. \n\n\u65e2\u5b58\u7814\u7a76\u3067\u306f, \u8a18\u61b6\u9818\u57df(\u30e1\u30e2\u30ea)\u3092\u4f7f\u3063\u3066\u6728\u69cb\u9020\u3092\u4f5c\u308b\u306a\u3069\u3057\u3066\u3046\u307e\u304f\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u51fa\u529b\u306e\u30d0\u30e9\u30f3\u30b9\u3092\u53d6\u308a\u3064\u3064\u3082\u63a2\u7d22\u3092\u9ad8\u901f\u5316\u3059\u308b\u65b9\u6cd5\u306f\u3042\u308a\u307e\u3057\u305f. \u3057\u304b\u3057, \u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u5834\u5408, bucket \u306e\u6570\u304c\u5897\u3048\u308b\u3068\u30e1\u30e2\u30ea\u6d88\u8cbb\u304c\u591a\u304f\u306a\u308a, \u304b\u3064\u30cf\u30c3\u30b7\u30e5\u306e\u8a08\u7b97\u6642\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u30df\u30b9\u304c\u8d77\u3053\u308a, \u30cf\u30c3\u30b7\u30e5\u8a08\u7b97\u306e\u6027\u80fd\u304c\u4f4e\u4e0b\u3059\u308b\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3057\u305f.\n\n\u63d0\u6848\u624b\u6cd5\u3067\u306f, \u305d\u306e\u3088\u3046\u306a\u554f\u984c\u304c\u3042\u308a\u307e\u305b\u3093.\n\n\n### Simplify \u3059\u308b.\n\n\u3055\u3066, \u3053\u3053\u3067 random(\u7591\u4f3c\u4e71\u6570)\u306f, \u751f\u6210\u3055\u308c\u308b\u7591\u4f3c\u4e71\u6570\u306e\u8cea\u304c\u3088\u3051\u308c\u3070\u57fa\u672c\u7684\u306b\u306f\u3069\u306e\u3088\u3046\u306a\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u3082\u3088\u3044\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059. \n\n\u305d\u3053\u3067\u8ad6\u6587\u3067\u306f, Linear Congruential Generator(LCG) \u306b\u3088\u308b\u9ad8\u901f\u304b\u3064\u8cea\u306e\u3088\u3044\u64ec\u4f3c\u4e71\u6570\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u4f7f\u3063\u3066\u3044\u307e\u3059.\n(Cite \u3055\u308c\u3066\u3044\u308b Pierre L'Ecuyer \u5148\u751f\u3082, \u3068\u3063\u3066\u3082\u6709\u540d\u3067\u3059\u306e\u3088! http://www.iro.umontreal.ca/~lecuyer/)\n\n\u3053\u308c\u306b\u3088\u308a, \u6700\u7d42\u7684\u306b\u30b3\u30fc\u30c9\u306f\u6700\u521d\u306b\u793a\u3057\u305f\u7d50\u679c\u306b\u306a\u308a\u307e\u3059. \n\n```\nint32_t JumpConsistentHash(uint64_t key, int32_t num_buckets) { \n  int64_t b = \u00ad1, j = 0;\n  while (j < num_buckets) {\n    b=j;\n    key = key * 2862933555777941757ULL + 1;\n    j = (b + 1) * (double(1LL << 31) / double((key >> 33) + 1));\n  }\n  return b;\n}\n```\n\nCool!\n\n## \u6027\u80fd\n\n\nJump Consistent Hash \u3067\u306f\u4e71\u6570\u3068\u78ba\u7387\u306e\u6027\u8cea\u3092\u4f7f\u3063\u3066\u8a18\u61b6\u9818\u57df\u3092\u4f7f\u308f\u305a\u3068\u3082, \u9ad8\u901f\u3067(log \u30aa\u30fc\u30c0\u30fc), \u304b\u3064\u5206\u5e03\u306e\u3088\u3044\u30cf\u30c3\u30b7\u30e5\u5024\u8a08\u7b97\u3092\u5b9f\u73fe\u3057\u3066\u3044\u307e\u3059.\n\n\u8ad6\u6587\u3092\u898b\u307e\u3059\u3068, \u5206\u5e03\u306e\u8cea\u3082\u3088\u304f, \u304b\u3064\u9ad8\u901f\u306b\u8a08\u7b97\u3067\u304d\u3066\u3044\u308b\u3053\u3068\u304c\u898b\u3066\u53d6\u308c\u307e\u3059.\n\n## \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u53ef\u8996\u5316\u3057\u3066\u7406\u89e3\u3092\u6df1\u3081\u308b.\n\n\u30ca\u30a6\u306a\u30e4\u30f3\u30b0\u306a\u3089\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u53ef\u8996\u5316\u3057\u3066\u307f\u305f\u304f\u306a\u308a\u307e\u3059\u306d!\n\nJavaScript + d3.js \u3067\u3084\u3063\u3066\u307f\u307e\u3057\u305f. \n\nhttps://github.com/syoyo/jch-vis\n\n![jch.png](https://qiita-image-store.s3.amazonaws.com/0/36275/7f70d474-43de-3fd9-4aa5-79fced0172cd.png \"jch.png\")\n\n\nJavaScript \u306e 64bit integer \u306e\u6271\u3044\u304c\u3042\u3084\u3057\u3044\u306e\u3067\u4e71\u6570\u8a08\u7b97\u90e8\u5206\u3092\u3061\u3087\u3063\u3068\u3044\u3058\u3063\u3066\u3044\u307e\u3059. \u305d\u306e\u305f\u3081\u304b\u5206\u5e03\u306b\u306f\u504f\u308a\u304c\u3042\u308b\u611f\u3058\u304c\u3057\u307e\u3059\u304c, \u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u6982\u8981\u3092\u3064\u304b\u3080\u306b\u306f\u5341\u5206\u3067\u3057\u3087\u3046.\n\n\u70b9\u305d\u308c\u305e\u308c\u304c\u30a2\u30a4\u30c6\u30e0\u306b\u306a\u308a, \u30a2\u30a4\u30c6\u30e0\u306b\u306f\u30e9\u30f3\u30c0\u30e0\u306b ID \u304c\u632f\u3089\u308c\u3066\u3044\u307e\u3059. ID \u304b\u3089 JCH \u3067\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u3092\u8a08\u7b97\u3057, \u5bfe\u5fdc\u3059\u308b\u30d0\u30b1\u30c3\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u307e\u3059. \u6a2a\u304c\u30d0\u30b1\u30c3\u30c8\u306b\u306a\u3063\u3066\u3044\u307e\u3059. \n\n\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068, \u30d0\u30b1\u30c3\u30c8\u304c\u3072\u3068\u3064\u8ffd\u52a0\u3055\u308c, \u5404\u30a2\u30a4\u30c6\u30e0\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u518d\u8a08\u7b97\u3057\u307e\u3059. \u518d\u5ea6 JCH \u3092\u9069\u7528\u3057\u3066\u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u3092\u8a08\u7b97\u3057, \u5909\u5316\u306e\u3042\u3063\u305f\u3082\u306e(\u5897\u3048\u305f\u30d0\u30b1\u30c3\u30c8\u306e\u756a\u53f7\u306b\u5bfe\u5fdc\u3059\u308b\u3082\u306e)\u3092\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3055\u305b\u3066\u3044\u307e\u3059. \u79fb\u52d5\u3059\u308b\u30a2\u30a4\u30c6\u30e0\u304c\u6700\u5c0f\u9650\u306b\u306a\u3063\u3066\u3044\u308b\u306e\u304c\u898b\u3066\u53d6\u308c\u308b\u304b\u3068\u601d\u3044\u307e\u3059.\n\n## \u6b20\u70b9\n\n* \u30d0\u30b1\u30c3\u30c8\u756a\u53f7\u306f, \u9023\u756a\u3067 0 \u304b\u3089 n-1 \u3067\u4ed8\u3051\u3089\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b. \u5f93\u3063\u3066, \u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8\u306e\u3088\u3046\u306a\u30a2\u30d7\u30ea\u3067\u306f\u6709\u76ca\u3060\u304c, Web \u5206\u6563\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u3088\u3046\u306a\u30b1\u30fc\u30b9\u3067\u306f\u6709\u76ca\u3067\u306a\u3044.\n\n## \u304a\u307e\u3051\n\n2011 \u5e74\u306e\u6642\u70b9\u3067 Guava \u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u4f7f\u308f\u308c\u3066\u3044\u305f.\n\nhttp://code.google.com/p/guava-libraries/source/browse/guava/src/com/google/common/hash/Hashing.java\n\n## \u307e\u3068\u3081\n\n* Jump Consistent Hash \u3059\u3054\u3044\n* \u78ba\u7387\u3092\u5236\u3059\u308b\u3082\u306e\u306f\u4e16\u754c\u3092\u5236\u3059\u308b.\n* \u7279\u8a31\u306f\u7533\u8acb\u3057\u3066\u3044\u306a\u3044(\u3057, \u7533\u8acb\u306e\u4e88\u5b9a\u3082\u4eca\u306e\u3068\u3053\u308d\u7121\u3044)\u306e\u3067, \u7686\u3055\u3093\u306b\u305f\u304f\u3055\u3093\u4f7f\u3063\u3066\u307b\u3057\u3044\u3088\u3046\u3067\u3059.\n\n\n", "tags": ["\u30b7\u30b9\u30c6\u30e0\u7cfb\u8ad6\u6587\u7d39\u4ecb", "hash", "\u5206\u6563\u30b9\u30c8\u30ec\u30fc\u30b8", "jumpconsistenthash"]}