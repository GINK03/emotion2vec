{"tags": ["rancher", "docker", "server", "\u65b0\u4eba\u30d7\u30ed\u30b0\u30e9\u30de\u5fdc\u63f4", "Registry"], "context": "\n\nprivate registry \u3067docker image\u3092\u7ba1\u7406\u3057\u3088\u3046\n\n\u901a\u5e38\u306f\u81ea\u4f5c\u3057\u305fdocker\u306eimage\u3092docker hub\u7b49\u306b\u3042\u3052\u3066\u7ba1\u7406\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\nprivate registry\u3092\u81ea\u793e\u30b5\u30fc\u30d0\u30fc\u306b\u7acb\u3066\u3001\u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044image\u3092\u305d\u3053\u3067\u7ba1\u7406\u3057\u307e\u3059\n\n\n\n\u95a2\u9023\u8a18\u4e8b\n\nRancherOS\u3067\u672c\u683c\u7684\u306a\u81ea\u5b85\u30b5\u30fc\u30d0\u30fc\u3092\u69cb\u7bc9\u3057\u3088\u3046\nRancherOS\u3067rancher-server\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3088\u3046 \nRancherOS\u3067rancher-agent\u3092\u69cb\u7bc9\u3057\u3088\u3046\nRancherOS\u3067GlusterFS\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3057\u3088\u3046\nRancherOS\u306bprivate registory\u3092\u7acb\u3066\u3066docker image\u3092\u7ba1\u7406\u3057\u3088\u3046\u3000\u2190\u3000\u4eca\u3053\u3053\nRancher\u306eCATALOG\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u4e00\u89a7 \n\n\n\u30e1\u30ea\u30c3\u30c8\n\n\u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044image\u304c\u7ba1\u7406\u3067\u304d\u308b\n\u5225\u306e\u74b0\u5883(\u30ed\u30fc\u30ab\u30eb\u306edocker\u7b49)\u3067\u4f5c\u6210\u3057\u305fimage\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\u3059\u306a\u308f\u3061\u3001production\u74b0\u5883\u3067docker build\u306a\u3069\u53e9\u304b\u306a\u3044\u306e\u3067 \u5b89\u5168\n\n\n\n\u4ed5\u69d8\u306e\u78ba\u8a8d\n\n\u30ed\u30fc\u30ab\u30eb\u3067\u4f5c\u6210\u3057\u305fimage\u3092 docker push \u301c\u301c\u3000\u3068\u3059\u308b\u3053\u3068\u3067\u7ba1\u7406\u3067\u304d\u3001puroduction\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3050\u306b\u4f7f\u3048\u308b\n\u4f5c\u6210\u3057\u305fimage\u306fregistry-frontend\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n\ndocker pull\u3000\u301c\u301c \u3067\u3069\u3053\u304b\u3089\u3067\u3082image\u304cpull\u3067\u304d\u308b\n\n\n\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\n\nregistry:2.3.0\nkonradkleine/docker-registry-frontend:v2\n\n\nregistry + registry-frontend\n\nregistry-frontend\u3068\u3044\u3046\u3084\u3064\u304c\u3001\u73fe\u5728registry\u306b\u4f55\u304cpush\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n\u307e\u305a\u306francher\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089 Add stack \u3057\u307e\u3059\n\n\n\n\ndocker-compose.yml\nregistry:\n  image: registry:2.3.0\n  volumes:\n    - vol_registry:/var/lib/registry\n  volume_driver: convoy-gluster\n  ports:\n    - 5000:5000\n  labels:\n    io.rancher.scheduler.global: 'true'\n\nregistry-frontend:\n  image: konradkleine/docker-registry-frontend:v2\n  environment:\n    - ENV_DOCKER_REGISTRY_HOST=registry\n    - ENV_DOCKER_REGISTRY_PORT=5000\n  links:\n    - registry:registry\n  ports:\n    - 8888:80\n\n\n\ncreate \u3057\u3066\u3057\u3070\u3089\u304f\u5f85\u3064\n\n\nhttps\u306e\u30a8\u30e9\u30fc\n\n\n--insecure-registry\u304c\u3069\u3046\u305f\u3089\u3053\u3046\u305f\u3089\nFATA[0004] Error: v1 ping attempt failed with error: Get https://example.com:5000/v1/_ping: EOF.\nIf this private registry supports only HTTP or HTTPS with an unknown CA certificate, please add `--insecure-registry example.com:5000` to the daemon's arguments.\nIn the case of HTTPS, if you have access to the registry's CA certificate, no need for the flag; simply place the CA certificate at /etc/docker/certs.d/example.com:5000/ca.crt\n\n\n\u3069\u3046\u3084\u3089\u3001private registry\u306e\u901a\u4fe1\u306b\u306fhttps\u901a\u4fe1\u304c\u4f7f\u308f\u308c\u308b\u3063\u307d\u304f\u3066\u3001\u8a3c\u660e\u66f8\u306a\u3044\u3084\u3093\u3063\u3066\u304a\u3053\u3063\u3066\u304f\u308b\u3002\n\u306a\u306e\u3067\u3001http\u306b\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u66f8\u304f\u306e\u304c\u697d\u3060\u3063\u305f\u304b\u3089\u305d\u3063\u3061\u3067\u3068\u308a\u3042\u3048\u305a\u5bfe\u5fdc\n\n\nRancherOS\u306e\u5834\u5408\n$ sudo ros config set rancher.docker.args \"['daemon','--insecure-registry,docker.ooo.com:5000']\"\n\n$ sudo ros config get rancher.docker\n\n#\u3053\u3053\u3067restart\u3092\u3059\u308b\u308f\u3051\u3060\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u3082\u4e00\u6642\u7684\u306b\u6b7b\u306c\u306e\u3067\u6ce8\u610f\n$ sudo system-docker restart docker\n\n\nboot2docker\u306e\u5834\u5408\n$ boot2docker ssh\n$ sudo vi /var/lib/boot2docker/profile\n\n \u3000EXTRA_ARGS=\"--insecure-registry docker.oooo.com:5000\"\n\n#\u3053\u3053\u3067restart\u3092\u3059\u308b\u308f\u3051\u3060\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u3082\u4e00\u6642\u7684\u306b\u6b7b\u306c\u306e\u3067\u6ce8\u610f\n$ sudo /etc/init.d/docker restart\n\n\nCoreOS\u306e\u5834\u5408\ncoreos:\n  units:\n    - name: docker.service\n      drop-ins:\n        - name: 50-insecure-registry.conf\n          content: |\n            [Service]\n            Environment=DOCKER_OPTS='--insecure-registry=\"example.com:5000\"'\n\n## coreos\u3092restart\n\n\n\nregistry\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n\u5225\u306e\u74b0\u5883\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n$ docker login docker.oooo.com:5000\n$ docker pull centos\n$ docker tag centos docker.oooo.com:5000/centos\n$ docker push docker.oooo.com:5000/centos\n\n\n\n\n##\u3044\u3063\u305f\u3093\u6d88\u3057\u3066pull\u3057\u3066\u307f\u308b\n$ docker images\n$ docker rmi xxxxxxxx{centos\u306eID}\n$ docker pull docker.oooo.com:5000/centos\n\n\nfrontend\u306e\u52d5\u4f5c\u78ba\u8a8d\n\nfrontend\u306f\u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u3001.ssh/config\u3067\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u304b\u30898888\u3092\u8ee2\u9001\u3059\u308b\n\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\n\n\n\n\u3053\u308c\u3067registry\u306f\u8a2d\u5b9a\u3067\u304d\u305f\n\n\u3060\u3044\u3076registry\u306b\u306f\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\nmac\u306eboot2docker\u3067\u3042\u308b\u7a0b\u5ea6\u958b\u767a\u3057\u3066\u304b\u3089\u3001production\u30b5\u30fc\u30d0\u30fc\u306bpush\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n\n#private registry \u3067docker image\u3092\u7ba1\u7406\u3057\u3088\u3046\n\n+ \u901a\u5e38\u306f\u81ea\u4f5c\u3057\u305fdocker\u306eimage\u3092docker hub\u7b49\u306b\u3042\u3052\u3066\u7ba1\u7406\u3057\u307e\u3059\u304c\u3001\u4eca\u56de\u306f\nprivate registry\u3092\u81ea\u793e\u30b5\u30fc\u30d0\u30fc\u306b\u7acb\u3066\u3001\u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044image\u3092\u305d\u3053\u3067\u7ba1\u7406\u3057\u307e\u3059\n\n\n![rancher-docker.png](https://qiita-image-store.s3.amazonaws.com/0/62822/58fe1d1a-aaff-059e-b85b-a95f8b490d08.png)\n\n## \u95a2\u9023\u8a18\u4e8b\n+ [RancherOS\u3067\u672c\u683c\u7684\u306a\u81ea\u5b85\u30b5\u30fc\u30d0\u30fc\u3092\u69cb\u7bc9\u3057\u3088\u3046](http://qiita.com/okasho1010/items/da52b4dc12221feca55c)\n+ [RancherOS\u3067rancher-server\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3088\u3046](http://qiita.com/okasho1010/items/305e0af4545901d44a94) \n\n+ [RancherOS\u3067rancher-agent\u3092\u69cb\u7bc9\u3057\u3088\u3046](http://qiita.com/okasho1010/items/500c3705d2f4610cebe0)\n\n+ [RancherOS\u3067GlusterFS\u3092\u4f7f\u3063\u3066\u30c7\u30fc\u30bf\u3092\u6c38\u7d9a\u5316\u3057\u3088\u3046](http://qiita.com/okasho1010/items/2620da1b2e93437e8a74)\n\n+ **[RancherOS\u306bprivate registory\u3092\u7acb\u3066\u3066docker image\u3092\u7ba1\u7406\u3057\u3088\u3046](http://qiita.com/okasho1010/items/cf0a9569638d00a9e451)\u3000\u2190\u3000\u4eca\u3053\u3053**\n\n+ [Rancher\u306eCATALOG\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u30fc\u4e00\u89a7](http://qiita.com/okasho1010/items/f6875d5bce2ac6752758) \n\n\n## \u30e1\u30ea\u30c3\u30c8\n+ \u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044image\u304c\u7ba1\u7406\u3067\u304d\u308b\n+ \u5225\u306e\u74b0\u5883(\u30ed\u30fc\u30ab\u30eb\u306edocker\u7b49)\u3067\u4f5c\u6210\u3057\u305fimage\u3092\u305d\u306e\u307e\u307e\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n+ \u3059\u306a\u308f\u3061\u3001**production\u74b0\u5883\u3067docker build\u306a\u3069\u53e9\u304b\u306a\u3044\u306e\u3067 \u5b89\u5168**\n\n## \u4ed5\u69d8\u306e\u78ba\u8a8d\n+ \u30ed\u30fc\u30ab\u30eb\u3067\u4f5c\u6210\u3057\u305fimage\u3092 ``` docker push \u301c\u301c ```\u3000\u3068\u3059\u308b\u3053\u3068\u3067\u7ba1\u7406\u3067\u304d\u3001puroduction\u30b5\u30fc\u30d0\u30fc\u3067\u3059\u3050\u306b\u4f7f\u3048\u308b\n+ \u4f5c\u6210\u3057\u305fimage\u306f```registry-frontend```\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\n+ ```docker pull\u3000\u301c\u301c``` \u3067\u3069\u3053\u304b\u3089\u3067\u3082image\u304cpull\u3067\u304d\u308b\n\n##\u4f7f\u3046\u30e9\u30a4\u30d6\u30e9\u30ea\n+ registry:2.3.0\n+ konradkleine/docker-registry-frontend:v2\n\n##registry + registry-frontend\n+ registry-frontend\u3068\u3044\u3046\u3084\u3064\u304c\u3001\u73fe\u5728registry\u306b\u4f55\u304cpush\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\n+ \u307e\u305a\u306francher\u306e\u7ba1\u7406\u753b\u9762\u304b\u3089 Add stack \u3057\u307e\u3059\n\n<img width=\"1679\" alt=\"Screen Shot 2016-06-25 at 08.14.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/62822/01607194-c0cf-82db-2769-c35fec66bd9e.png\">\n\n\n+ docker-compose.yml\n\n\t```\n    registry:\n      image: registry:2.3.0\n      volumes:\n        - vol_registry:/var/lib/registry\n      volume_driver: convoy-gluster\n      ports:\n        - 5000:5000\n      labels:\n        io.rancher.scheduler.global: 'true'\n\n    registry-frontend:\n      image: konradkleine/docker-registry-frontend:v2\n      environment:\n        - ENV_DOCKER_REGISTRY_HOST=registry\n        - ENV_DOCKER_REGISTRY_PORT=5000\n      links:\n        - registry:registry\n      ports:\n        - 8888:80\n\n\t```\n\n+ create \u3057\u3066\u3057\u3070\u3089\u304f\u5f85\u3064\n\n##https\u306e\u30a8\u30e9\u30fc\n+ --insecure-registry\u304c\u3069\u3046\u305f\u3089\u3053\u3046\u305f\u3089\n\n\t```\nFATA[0004] Error: v1 ping attempt failed with error: Get https://example.com:5000/v1/_ping: EOF.\nIf this private registry supports only HTTP or HTTPS with an unknown CA certificate, please add `--insecure-registry example.com:5000` to the daemon's arguments.\nIn the case of HTTPS, if you have access to the registry's CA certificate, no need for the flag; simply place the CA certificate at /etc/docker/certs.d/example.com:5000/ca.crt\n\t```\n\n+ \u3069\u3046\u3084\u3089\u3001private registry\u306e\u901a\u4fe1\u306b\u306fhttps\u901a\u4fe1\u304c\u4f7f\u308f\u308c\u308b\u3063\u307d\u304f\u3066\u3001\u8a3c\u660e\u66f8\u306a\u3044\u3084\u3093\u3063\u3066\u304a\u3053\u3063\u3066\u304f\u308b\u3002\n\t\u306a\u306e\u3067\u3001http\u306b\u3059\u308b\u3088\u3046\u306b\u8a2d\u5b9a\u3092\u66f8\u304f\u306e\u304c\u697d\u3060\u3063\u305f\u304b\u3089\u305d\u3063\u3061\u3067\u3068\u308a\u3042\u3048\u305a\u5bfe\u5fdc\n\n### RancherOS\u306e\u5834\u5408\n\n```\n$ sudo ros config set rancher.docker.args \"['daemon','--insecure-registry,docker.ooo.com:5000']\"\n\n$ sudo ros config get rancher.docker\n\n#\u3053\u3053\u3067restart\u3092\u3059\u308b\u308f\u3051\u3060\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u3082\u4e00\u6642\u7684\u306b\u6b7b\u306c\u306e\u3067\u6ce8\u610f\n$ sudo system-docker restart docker\n```\n### boot2docker\u306e\u5834\u5408\n\n\n```\n$ boot2docker ssh\n$ sudo vi /var/lib/boot2docker/profile\n\n \u3000EXTRA_ARGS=\"--insecure-registry docker.oooo.com:5000\"\n\n#\u3053\u3053\u3067restart\u3092\u3059\u308b\u308f\u3051\u3060\u304c\u3001\u30b3\u30f3\u30c6\u30ca\u3082\u4e00\u6642\u7684\u306b\u6b7b\u306c\u306e\u3067\u6ce8\u610f\n$ sudo /etc/init.d/docker restart\n```\n\n### CoreOS\u306e\u5834\u5408\n\n```\ncoreos:\n  units:\n    - name: docker.service\n      drop-ins:\n        - name: 50-insecure-registry.conf\n          content: |\n            [Service]\n            Environment=DOCKER_OPTS='--insecure-registry=\"example.com:5000\"'\n\n## coreos\u3092restart\n\n```\n\n\n##registry\u306e\u52d5\u4f5c\u78ba\u8a8d\n+ \u5225\u306e\u74b0\u5883\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u308b\n\n```\n$ docker login docker.oooo.com:5000\n$ docker pull centos\n$ docker tag centos docker.oooo.com:5000/centos\n$ docker push docker.oooo.com:5000/centos\n\n```\n<img width=\"1051\" alt=\"Screen Shot 2016-06-25 at 08.54.28.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/62822/4519eee3-368d-a4ba-86c7-30779ed46383.png\">\n\n\n```\n\n##\u3044\u3063\u305f\u3093\u6d88\u3057\u3066pull\u3057\u3066\u307f\u308b\n$ docker images\n$ docker rmi xxxxxxxx{centos\u306eID}\n$ docker pull docker.oooo.com:5000/centos\n```\n\n## frontend\u306e\u52d5\u4f5c\u78ba\u8a8d\n\n+ frontend\u306f\u5916\u90e8\u306b\u516c\u958b\u3057\u305f\u304f\u306a\u3044\u306e\u3067\u3001.ssh/config\u3067\u30ed\u30fc\u30ab\u30eb\u30d5\u30a9\u30ef\u30fc\u30c9\u306e\u8a2d\u5b9a\u304b\u30898888\u3092\u8ee2\u9001\u3059\u308b\n+ \u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u3053\u3093\u306a\u611f\u3058\n\n<img width=\"1680\" alt=\"Screen Shot 2016-06-25 at 09.06.53.png\" src=\"https://qiita-image-store.s3.amazonaws.com/0/62822/40cd664e-1b5d-474d-0b60-06a41ec07f70.png\">\n\n##\u3053\u308c\u3067registry\u306f\u8a2d\u5b9a\u3067\u304d\u305f\n+ \u3060\u3044\u3076registry\u306b\u306f\u30cf\u30de\u3063\u3066\u3057\u307e\u3063\u305f\n+ mac\u306eboot2docker\u3067\u3042\u308b\u7a0b\u5ea6\u958b\u767a\u3057\u3066\u304b\u3089\u3001production\u30b5\u30fc\u30d0\u30fc\u306bpush\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u305f\n\n\n"}