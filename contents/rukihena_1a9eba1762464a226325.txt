{"tags": ["Java", "\u6587\u5b57\u5316\u3051"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\u3000UTF-8\u304c\u6a19\u6e96\u7684\u306b\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u307e\u305f\u3001\u2462\u3084\u2162\u306a\u3069\u306e\u904e\u53bb\u306b\u306f\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u3060\u3063\u305f\u3082\u306e\u304c\u898f\u683c\u3067\u8ffd\u8a8d\u3055\u308c\u305f\u4eca\u3001\u6587\u5b57\u5316\u3051\u306b\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306f\u5c11\u306a\u304f\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3000\u3057\u304b\u3057\u3001\u30b9\u30de\u30db\u306e\u666e\u53ca\u306b\u4f34\u3044\u7d75\u6587\u5b57\u3068\u3044\u3046\u523a\u5ba2\u304c\u73fe\u308c\u307e\u3059\u3002\n\u3000\u305d\u3093\u306a\u6642\u4ee3\u306e\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u30c1\u30a7\u30c3\u30af\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3000\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u306f\u30d5\u30a9\u30fc\u30ab\u30b9\u5916\u3067\u3059\u3002\n\n\u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3068\u5186\u8a18\u53f7\u554f\u984c\n\u65b0JIS\u306b\u304a\u3051\u308b\u4f8b\u793a\u5b57\u5f62\u306e\u5909\u66f4168\u6587\u5b57\uff08\u4f8b\uff1a\u845b\u98fe\u533a\u306e\u845b\u3068\u304b\uff09\n\u5168\u89d2\u30c1\u30eb\u30c0\u554f\u984c\n\n\n\u5168\u90e8\u6587\u5b57\u306e\u305b\u3044\u3060\n\u3000\u4f7f\u3048\u306a\u3044\u6587\u5b57\u306b\u3064\u3044\u3066\u3001\u300c\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u300d\u3084\u300c\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u300d\u306a\u3069\u306e\u547c\u3073\u65b9\u304c\u3042\u308a\u307e\u3059\u304c\u3001UTF-8\u3067\u6271\u3063\u3066\u3044\u308b\u4e16\u754c\u306e\u4e2d\u3067\u306f\u300c\u30d5\u30a9\u30f3\u30c8\u4f9d\u5b58\u6587\u5b57\u300d\u554f\u984c\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u3000\u3053\u3053\u306e\u898b\u51fa\u3057\u306f\u300c\u5168\u90e8\u30d5\u30a9\u30f3\u30c8\u306e\u305b\u3044\u3060\u300d\u306e\u307b\u3046\u304c\u6b63\u89e3\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30ce\u30ea\u3067\u6587\u5b57\u3068\u3057\u3066\u3044\u307e\u3059\uff08\u95a2\u6771\u30ed\u30fc\u30ab\u30eb\u30cd\u30bf\u3067\u3057\u3087\u3046\u304b\uff1f\uff09\n\n\u7b54\u3048\u306f\u6587\u5b57\u306b\u805e\u3051\n\u3000\u3042\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u304c\u8868\u793a\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u304a\u5c0b\u306d\u3057\u3066\u3001\u8868\u793a\u3067\u304d\u308c\u3070\u8868\u793a\u3067\u304d\u308b\u3057\u3001\u8868\u793a\u3067\u304d\u306a\u3051\u308c\u3070\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u3068\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u3000\uff08\u30d5\u30a9\u30f3\u30c8\u306b\u3088\u3063\u3066\u6587\u5b57\uff08\u30b0\u30ea\u30d5\uff09\u304c\u9055\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\uff09\n\u3000Java\u3067\u3044\u3046\u3068\u3001Font#canDisplay() \u3084 Font#canDisplayUpTo() \u3067\u8868\u793a\u306e\u53ef\u4e0d\u53ef\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002canDisplay()\u306f\u3042\u308b\u4e00\u6587\u5b57\u306b\u3064\u3044\u3066true/false\u3001canDisplayUpTo()\u306f\u6587\u5b57\u5217\u306b\u3064\u3044\u3066\u4f55\u756a\u76ee\u304c\u30c0\u30e1\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002\n\u3000cancanDisplay() \u306e\u5229\u7528\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\ntest1.java\n    public static void main(String args[]) throws FontFormatException, IOException {\n\n        Font font = Font font = new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12);\n\n        String str = \"\u2460\u2171\u2162\";\n        for (int i = 0; i < str.length(); i++) {\n            char c = str.charAt(i);\n            boolean canDisp = font.canDisplay(c);\n\n            System.out.println(c + \" \" + Integer.toHexString(c) + \" \" + canDisp);\n        }\n    }\n\n\n\n\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\n\u3000\u5f53\u521d\u3001UNICODE\u306f16bit\u306b\u4e16\u754c\u4e2d\u306e\u6587\u5b57\u3092\u8a70\u3081\u8fbc\u3080\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u4f5c\u3089\u308c\u307e\u3057\u305f\u3002\u304c\u3001\u6b27\u7c73\u304c\u601d\u3063\u3066\u3044\u305f\u3088\u308a\u3082\u6975\u6771\u306e\u56fd\u3005\u306e\u6587\u5b57\u304c\u591a\u3059\u304e\u308b\u305f\u3081\u300116bit\u3058\u3083\u53ce\u307e\u3089\u306a\u3044\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u30012\u6587\u5b57\u5206\u306e32bit\u30671\u6587\u5b57\u3092\u3042\u3089\u308f\u3057\u307e\u3059\u3002\n\u3000\u65e5\u672c\u8a9e\u306e\u3088\u304f\u3042\u308b\u6587\u5b57\u3092\u6271\u3063\u3066\u3044\u308b\u5206\u306b\u306f\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u305d\u308c\u306a\u308a\u306b\u52d5\u304d\u307e\u3059\u304c\u3001\u4e00\u90e8\u306e\u6587\u5b57\u3092\u6271\u3046\u3068\u304d\u306b\u306f\u3061\u3083\u3093\u3068\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3000\u305f\u3068\u3048\u3070\u3001\u300c\u5409\u91ce\u5bb6\u300d\u306a\u3093\u3067\u3059\u304c\u3001\u300c\u5409\u300d\u306e\u5b57\u306f\u6b63\u3057\u304f\u306f\u300c\ud842\udfb7\u300d\uff08\u2190\u3042\u306a\u305f\u306e\u74b0\u5883\u3067\u898b\u3048\u307e\u3059\u304b\uff1f\uff09\u3067\u3059\u3002\u4e0a\u304c\u58eb\u3067\u306a\u304f\u3066\u571f\u306a\u306e\u3067\u300c\u3064\u3061\u3088\u3057\u300d\u3068\u547c\u3070\u308c\u3066\u3044\u305f\u308a\u3059\u308b\u6587\u5b57\u3067\u3059\u3002\n\u3000\u4e0a\u8a18\u306e test1.java \u3082\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u5909\u306a\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u300c\ud842\udfb7\u300d\u304c\u4e8c\u6587\u5b57\u306b\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u8868\u793a\u3067\u304d\u306a\u3044\u5224\u5b9a\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3000\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306e\u5bfe\u5fdc\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3001IBM developerWorks\u00ae Java \u306b\u3088\u308b Unicode \u30b5\u30ed\u30b2\u30fc\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0 \u3092\u53c2\u8003\u306b\u3001\u5b9f\u7528\u6027\u3068\u901f\u5ea6\u306e\u30d0\u30e9\u30f3\u30b9\u304c\u3044\u3044 \u4f8b1-5 \u3092\u304a\u624b\u672c\u306b\u5bfe\u5fdc\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ntest2.java\n    public static void main(String args[]) throws FontFormatException, IOException {\n\n        Font font = new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12);\n        String str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n        char[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n        int len = arrayChar.length;\n\n        for (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n            codePoint = Character.codePointAt(arrayChar, i);\n            boolean canDisp = font.canDisplay(codePoint);\n            char[] chs = Character.toChars(codePoint);\n\n            System.out.print(chs);\n            System.out.print(\" \");\n            System.out.print(Integer.toHexString(codePoint));\n            System.out.print(\" \");\n            System.out.println(canDisp);\n        }\n    }\n\n\n\n\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b\n\u3000\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u74b0\u5883\u3067\u306f\u3001\u60f3\u5b9a\u3055\u308c\u308b\u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u96c6\u3081\u3066\u304d\u3066\u3001\u305d\u308c\u3089\u306e\u3069\u308c\u304b\u3072\u3068\u3064\u3067\u3082\u8868\u793a\u3067\u304d\u306a\u3044\uff08canDisplay()\u304cfalse\u3092\u8fd4\u3059\uff09\u5834\u5408\u306f\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u3067\u3042\u308b\u3068\u5224\u5b9a\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\ntest3.java\n    public static void main(String args[]) throws FontFormatException, IOException {\n\n        List<Font> fonts = new ArrayList<Font>();\n        fonts.add(new Font(\"\uff2d\uff33 \u660e\u671d\", Font.PLAIN, 12));\n        fonts.add(new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12));\n        fonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"ipaexg.ttf\")));\n\n        String str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n        char[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n        int len = arrayChar.length;\n\n        for (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n            codePoint = Character.codePointAt(arrayChar, i);\n            boolean canDisp = true;\n            for (Font font : fonts) {\n                if (!font.canDisplay(codePoint)) {\n                    canDisp = false;\n                    break;\n                }\n            }\n            char[] chs = Character.toChars(codePoint);\n\n            System.out.print(chs);\n            System.out.print(\" \");\n            System.out.print(Integer.toHexString(codePoint));\n            System.out.print(\" \");\n            System.out.println(canDisp);\n        }\n    }\n\n\n\n\u751f\u306e\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b\n\u3000\u5b9f\u904b\u7528\u3067\u306f\u3001\u5b9f\u884c\u74b0\u5883\u4e0a\u306b\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u3053\u3068\u306f\u7121\u99c4\u304c\u591a\u3044\u3067\u3059\u3057\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u554f\u984c\u3082\u767a\u751f\u3057\u305d\u3046\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u306e\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u3066\u304a\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\u3000\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u3064\u304b\u3046\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306f 0\uff5e0x10FFFF \u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u7bc4\u56f2\u3092\u3042\u3089\u304b\u3058\u3081\u3059\u3079\u3066\u8abf\u3079\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u9023\u7d9a\u3057\u3066\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092 from,to \u3067\u51fa\u3057\u307e\u3059\u3002\n\ntest4.java\n    public void createValidCharacterCsv() throws IOException, FontFormatException {\n        List<Font> fonts = new ArrayList<Font>();\n        fonts.add(new Font(\"\uff2d\uff33 \u660e\u671d\", Font.PLAIN, 12));\n        fonts.add(new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12));\n        fonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"ipaexg.ttf\")));\n        fonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"D:/font/MAC/\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4\u30b7\u30c3\u30af W3/001.TTF\")));\n\n        File file = new File(\"D:/font/\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b.csv\");\n        BufferedWriter bw = new BufferedWriter(new FileWriter(file));\n\n        boolean bPrevDisp = false;\n        int prevCodePoint = -1;\n        for (int codePoint = 0; codePoint < 0x10FFFF; codePoint++) {\n            boolean bDisp = true;\n            for (Font font : fonts) {\n                if (!font.canDisplay(codePoint)) {\n                    bDisp = false;\n                    break;\n                }\n            }\n            if (bPrevDisp != bDisp) {\n                if (bDisp) {\n                    prevCodePoint = codePoint;\n                } else {\n                    bw.write(Integer.toHexString(prevCodePoint));\n                    bw.write(\",\");\n                    bw.write(Integer.toHexString(codePoint - 1));\n\n                    // csv\u306b\u6587\u5b57\u3082\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\n                    // bw.write(\",\");\n                    // bw.write(Character.toChars(prevCodePoint));\n                    // bw.write(\",\");\n                    // bw.write(Character.toChars(codePoint - 1));\n\n                    bw.newLine();\n                }\n                bPrevDisp = bDisp;\n            }\n        }\n        bw.close();\n    }\n\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3059\u3068\u3001\n9,a\nd,d\n20,7e\na0,b4\nb6,109\n10c,10f\n.\n.\n.\n2a61a,2a61a\n2a6b2,2a6b2\n2f818,2f818\n2f877,2f877\n2f8dc,2f8dc\n2f8ed,2f8ed\n\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n0x0\uff5e0x8 \u306f\u30c0\u30e1\u30010z9\uff5e0xa \u306fOK\u30010xb\uff5e0xc \u306f\u30c0\u30e1\u30010x0d \u306fOK\u30fb\u30fb\u30fb \u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\n\n\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\n\u3000\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51fa\u529b\u3092\u3082\u3068\u306b\u3001boolean \u914d\u5217\u3092\u4f5c\u308c\u3070\u3044\u3044\u8a71\u306a\u306e\u3067\u3059\u304c\u30011MB\u3061\u3087\u3044\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\u3000\u30e1\u30e2\u30ea\u3092\u7bc0\u7d04\u3059\u308b\u305f\u3081\u306b from,to \u306e\u307e\u307e\u30ea\u30b9\u30c8\u306b\u6301\u3061\u3001\u8abf\u3079\u308b\u3068\u304d\u306f\u982d\u304b\u3089\u5168\u4ef6\u691c\u7d22\u3055\u305b\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\ntest5.java\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n    List<CodePointFromTo> listValidCodePoints;\n\n    public static void main(String args[]) throws IOException {\n\n        Main main = new Main();\n\n        main.readValidCharacterCsv(\"D:/font/\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b.csv\");\n\n        String str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n        char[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n        int len = arrayChar.length;\n\n        for (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n            codePoint = Character.codePointAt(arrayChar, i);\n            boolean canDisp = main.canDisp(codePoint);\n            char[] chs = Character.toChars(codePoint);\n\n            System.out.print(canDisp);\n            System.out.print(\" \");\n            System.out.print(chs);\n            System.out.print(\" \");\n            System.out.print(Integer.toHexString(codePoint));\n\n            for (int j = 0; j < chs.length; j++) {\n                if ( j==0 ) {\n                    System.out.print(\"(\");\n                }\n                else{\n                    System.out.print(\",\");\n                }\n                System.out.print(Integer.toHexString(chs[j]));\n            }\n            System.out.print(\")\");\n\n            System.out.println();\n        }\n\n    }\n\n    /**\n     * \u4f7f\u7528\u53ef\u80fd\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059.\n     * @param validCharacterCsv \u4f7f\u7528\u53ef\u80fd\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\n     * @throws IOException\n     */\n    public void readValidCharacterCsv(String validCharacterCsv) throws IOException {\n\n        listValidCodePoints = new ArrayList<CodePointFromTo>();\n\n        FileReader fr = new FileReader(validCharacterCsv);\n        BufferedReader br = new BufferedReader(fr);\n\n        String line;\n        while ((line = br.readLine()) != null) {\n            String[] rows = line.split(\",\");\n\n            int from = Integer.decode(\"0x\" + rows[0]);\n            int to = Integer.decode(\"0x\" + rows[1]);\n            listValidCodePoints.add(new CodePointFromTo(from, to));\n        }\n\n        br.close();\n    }\n\n    /**\n     * \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3092\u8fd4\u3057\u307e\u3059.\n     * @param codePoint \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\n     * @return \u4f7f\u7528\u53ef\u5426\n     */\n    public boolean canDisp(int codePoint) {\n\n        for (CodePointFromTo cpft : listValidCodePoints) {\n            if (cpft.from <= codePoint && codePoint <= cpft.to) {\n                // \u6b63\u3057\u3044\u6587\u5b57\u306e\u7bc4\u56f2\u5185\u3060\uff01\n                return true;\n            }\n            if (codePoint < cpft.from) {\n                // \u3053\u308c\u4ee5\u4e0a\u8abf\u3079\u3066\u3082\u7121\u99c4\u3002\n                return false;\n            }\n        }\n        return false;\n    }\n\n    class CodePointFromTo {\n        int from;\n        int to;\n\n        public CodePointFromTo(int from, int to) {\n            this.from = from;\n            this.to = to;\n        }\n    }\n}\n\n\n\u3000\u5168\u4ef6\u691c\u7d22\u3067\u3082\u3001\u5b9f\u7528\u4e0a\u306f\u554f\u984c\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u307b\u3068\u3093\u3069\u306e\u6587\u5b57\u306f\u5229\u7528\u53ef\u80fd\u3067\u3001\u304b\u3064\u524d\u306e\u65b9\u306b\u504f\u3063\u3066\u5b58\u5728\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\u3000\u6539\u5584\u3068\u3057\u3066\u3001\u4e8c\u5206\u63a2\u7d22\u3059\u308b\u306e\u3082\u30a2\u30ea\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3000\u30e1\u30e2\u30ea\u6d88\u8cbb\u3092\u6c17\u306b\u3057\u306a\u3044\u5834\u5408\u306f BitSet \u3067\u7ba1\u7406\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n\u307e\u3068\u3081\n\n\u3042\u308b\u6587\u5b57\u304c\u8868\u793a\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u30d5\u30a9\u30f3\u30c8\u306b\u805e\u304f\u3002\n\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30db\u30fc\u30e0\u74b0\u5883\u3067\u306f\u3001\u5229\u7528\u304c\u60f3\u5b9a\u3055\u308c\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u7528\u610f\u3057\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u3067\u8868\u793a\u53ef\u80fd\u306a\u6587\u5b57\u3060\u3051\u3092\u5229\u7528\u53ef\u80fd\u3068\u3059\u308b\u3002\n\n\u3000UTF-8\u304c\u6a19\u6e96\u7684\u306b\u6271\u308f\u308c\u308b\u3088\u3046\u306b\u306a\u308a\u3001\u307e\u305f\u3001\u2462\u3084\u2162\u306a\u3069\u306e\u904e\u53bb\u306b\u306f\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u3060\u3063\u305f\u3082\u306e\u304c\u898f\u683c\u3067\u8ffd\u8a8d\u3055\u308c\u305f\u4eca\u3001\u6587\u5b57\u5316\u3051\u306b\u60a9\u307e\u3055\u308c\u308b\u3053\u3068\u306f\u5c11\u306a\u304f\u306a\u3063\u3066\u304d\u307e\u3057\u305f\u3002\n\u3000\u3057\u304b\u3057\u3001\u30b9\u30de\u30db\u306e\u666e\u53ca\u306b\u4f34\u3044\u7d75\u6587\u5b57\u3068\u3044\u3046\u523a\u5ba2\u304c\u73fe\u308c\u307e\u3059\u3002\n\n\u3000\u305d\u3093\u306a\u6642\u4ee3\u306e\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u30c1\u30a7\u30c3\u30af\u306b\u3064\u3044\u3066\u8003\u3048\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3000\u306a\u304a\u3001\u4ee5\u4e0b\u306e\u5185\u5bb9\u306f\u30d5\u30a9\u30fc\u30ab\u30b9\u5916\u3067\u3059\u3002\n\n- \u30d0\u30c3\u30af\u30b9\u30e9\u30c3\u30b7\u30e5\u3068\u5186\u8a18\u53f7\u554f\u984c\n- \u65b0JIS\u306b\u304a\u3051\u308b\u4f8b\u793a\u5b57\u5f62\u306e\u5909\u66f4168\u6587\u5b57\uff08\u4f8b\uff1a\u845b\u98fe\u533a\u306e\u845b\u3068\u304b\uff09\n- \u5168\u89d2\u30c1\u30eb\u30c0\u554f\u984c\n\n#\u5168\u90e8\u6587\u5b57\u306e\u305b\u3044\u3060#\n\n\u3000\u4f7f\u3048\u306a\u3044\u6587\u5b57\u306b\u3064\u3044\u3066\u3001\u300c\u6a5f\u7a2e\u4f9d\u5b58\u6587\u5b57\u300d\u3084\u300c\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u300d\u306a\u3069\u306e\u547c\u3073\u65b9\u304c\u3042\u308a\u307e\u3059\u304c\u3001UTF-8\u3067\u6271\u3063\u3066\u3044\u308b\u4e16\u754c\u306e\u4e2d\u3067\u306f\u300c\u30d5\u30a9\u30f3\u30c8\u4f9d\u5b58\u6587\u5b57\u300d\u554f\u984c\u3068\u3044\u3046\u3053\u3068\u306b\u306a\u308b\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3000\u3053\u3053\u306e\u898b\u51fa\u3057\u306f\u300c\u5168\u90e8\u30d5\u30a9\u30f3\u30c8\u306e\u305b\u3044\u3060\u300d\u306e\u307b\u3046\u304c\u6b63\u89e3\u304b\u3068\u601d\u3044\u307e\u3059\u304c\u3001\u30ce\u30ea\u3067\u6587\u5b57\u3068\u3057\u3066\u3044\u307e\u3059\uff08\u95a2\u6771\u30ed\u30fc\u30ab\u30eb\u30cd\u30bf\u3067\u3057\u3087\u3046\u304b\uff1f\uff09\n\n#\u7b54\u3048\u306f\u6587\u5b57\u306b\u805e\u3051#\n\n\u3000\u3042\u308b\u6587\u5b57\u30b3\u30fc\u30c9\u304c\u8868\u793a\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u3001\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306b\u304a\u5c0b\u306d\u3057\u3066\u3001\u8868\u793a\u3067\u304d\u308c\u3070\u8868\u793a\u3067\u304d\u308b\u3057\u3001\u8868\u793a\u3067\u304d\u306a\u3051\u308c\u3070\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u3068\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305d\u3046\u3067\u3059\u3002\n\u3000\uff08\u30d5\u30a9\u30f3\u30c8\u306b\u3088\u3063\u3066\u6587\u5b57\uff08\u30b0\u30ea\u30d5\uff09\u304c\u9055\u3046\u3068\u3044\u3046\u3053\u3068\u306f\u60f3\u5b9a\u3057\u3066\u3044\u307e\u305b\u3093\u3002\uff09\n\n\u3000Java\u3067\u3044\u3046\u3068\u3001Font#canDisplay() \u3084 Font#canDisplayUpTo() \u3067\u8868\u793a\u306e\u53ef\u4e0d\u53ef\u3092\u8abf\u3079\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002canDisplay()\u306f\u3042\u308b\u4e00\u6587\u5b57\u306b\u3064\u3044\u3066true/false\u3001canDisplayUpTo()\u306f\u6587\u5b57\u5217\u306b\u3064\u3044\u3066\u4f55\u756a\u76ee\u304c\u30c0\u30e1\u304b\u3092\u8fd4\u3057\u307e\u3059\u3002\n\n\u3000cancanDisplay() \u306e\u5229\u7528\u4f8b\u3092\u793a\u3057\u307e\u3059\u3002\n\n```java:test1.java\n\tpublic static void main(String args[]) throws FontFormatException, IOException {\n\n\t\tFont font = Font font = new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12);\n\n\t\tString str = \"\u2460\u2171\u2162\";\n\t\tfor (int i = 0; i < str.length(); i++) {\n\t\t\tchar c = str.charAt(i);\n\t\t\tboolean canDisp = font.canDisplay(c);\n\n\t\t\tSystem.out.println(c + \" \" + Integer.toHexString(c) + \" \" + canDisp);\n\t\t}\n\t}\n```\n\n#\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2#\n\u3000\u5f53\u521d\u3001UNICODE\u306f16bit\u306b\u4e16\u754c\u4e2d\u306e\u6587\u5b57\u3092\u8a70\u3081\u8fbc\u3080\u3053\u3068\u3092\u76ee\u6a19\u306b\u3057\u3066\u4f5c\u3089\u308c\u307e\u3057\u305f\u3002\u304c\u3001\u6b27\u7c73\u304c\u601d\u3063\u3066\u3044\u305f\u3088\u308a\u3082\u6975\u6771\u306e\u56fd\u3005\u306e\u6587\u5b57\u304c\u591a\u3059\u304e\u308b\u305f\u3081\u300116bit\u3058\u3083\u53ce\u307e\u3089\u306a\u3044\u3053\u3068\u306b\u6c17\u3065\u304d\u307e\u3057\u305f\u3002\u305d\u3053\u3067\u767b\u5834\u3059\u308b\u306e\u304c\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u3059\u3002\u3053\u306e\u5834\u5408\u30012\u6587\u5b57\u5206\u306e32bit\u30671\u6587\u5b57\u3092\u3042\u3089\u308f\u3057\u307e\u3059\u3002\n\u3000\u65e5\u672c\u8a9e\u306e\u3088\u304f\u3042\u308b\u6587\u5b57\u3092\u6271\u3063\u3066\u3044\u308b\u5206\u306b\u306f\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u610f\u8b58\u3057\u306a\u304f\u3066\u3082\u305d\u308c\u306a\u308a\u306b\u52d5\u304d\u307e\u3059\u304c\u3001\u4e00\u90e8\u306e\u6587\u5b57\u3092\u6271\u3046\u3068\u304d\u306b\u306f\u3061\u3083\u3093\u3068\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306b\u5bfe\u5fdc\u3057\u305f\u30b3\u30fc\u30c9\u3092\u66f8\u304b\u306a\u3051\u308c\u3070\u306a\u308a\u307e\u305b\u3093\u3002\n\u3000\u305f\u3068\u3048\u3070\u3001\u300c\u5409\u91ce\u5bb6\u300d\u306a\u3093\u3067\u3059\u304c\u3001\u300c\u5409\u300d\u306e\u5b57\u306f\u6b63\u3057\u304f\u306f\u300c\ud842\udfb7\u300d\uff08\u2190\u3042\u306a\u305f\u306e\u74b0\u5883\u3067\u898b\u3048\u307e\u3059\u304b\uff1f\uff09\u3067\u3059\u3002\u4e0a\u304c\u58eb\u3067\u306a\u304f\u3066\u571f\u306a\u306e\u3067\u300c\u3064\u3061\u3088\u3057\u300d\u3068\u547c\u3070\u308c\u3066\u3044\u305f\u308a\u3059\u308b\u6587\u5b57\u3067\u3059\u3002\n\n\u3000\u4e0a\u8a18\u306e test1.java \u3082\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3092\u8003\u616e\u3057\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u5909\u306a\u52d5\u304d\u3092\u3057\u307e\u3059\u3002\u300c\ud842\udfb7\u300d\u304c\u4e8c\u6587\u5b57\u306b\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u8868\u793a\u3067\u304d\u306a\u3044\u5224\u5b9a\u3068\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\n\u3000\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306e\u5bfe\u5fdc\u65b9\u6cd5\u306b\u3064\u3044\u3066\u306f\u3044\u304f\u3064\u304b\u3042\u308b\u306e\u3067\u3059\u304c\u3001\u4eca\u56de\u306f\u3001IBM developerWorks\u00ae [Java \u306b\u3088\u308b Unicode \u30b5\u30ed\u30b2\u30fc\u30c8\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0](https://www.ibm.com/developerworks/jp/ysl/library/java/j-unicode_surrogate/) \u3092\u53c2\u8003\u306b\u3001\u5b9f\u7528\u6027\u3068\u901f\u5ea6\u306e\u30d0\u30e9\u30f3\u30b9\u304c\u3044\u3044 \u4f8b1-5 \u3092\u304a\u624b\u672c\u306b\u5bfe\u5fdc\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```java:test2.java\n\tpublic static void main(String args[]) throws FontFormatException, IOException {\n\n\t\tFont font = new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12);\n\t\tString str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n\t\tchar[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n\t\tint len = arrayChar.length;\n\n\t\tfor (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n\t\t\tcodePoint = Character.codePointAt(arrayChar, i);\n\t\t\tboolean canDisp = font.canDisplay(codePoint);\n\t\t\tchar[] chs = Character.toChars(codePoint);\n\n\t\t\tSystem.out.print(chs);\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.print(Integer.toHexString(codePoint));\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.println(canDisp);\n\t\t}\n\t}\n```\n\n#\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b#\n\n\u3000\u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30d5\u30a9\u30fc\u30e0\u74b0\u5883\u3067\u306f\u3001\u60f3\u5b9a\u3055\u308c\u308b\u74b0\u5883\u3067\u4f7f\u7528\u3059\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u96c6\u3081\u3066\u304d\u3066\u3001\u305d\u308c\u3089\u306e\u3069\u308c\u304b\u3072\u3068\u3064\u3067\u3082\u8868\u793a\u3067\u304d\u306a\u3044\uff08canDisplay()\u304cfalse\u3092\u8fd4\u3059\uff09\u5834\u5408\u306f\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u3067\u3042\u308b\u3068\u5224\u5b9a\u3059\u308c\u3070\u3088\u3055\u305d\u3046\u3067\u3059\u3002\n\n```test3.java\n\tpublic static void main(String args[]) throws FontFormatException, IOException {\n\n\t\tList<Font> fonts = new ArrayList<Font>();\n\t\tfonts.add(new Font(\"\uff2d\uff33 \u660e\u671d\", Font.PLAIN, 12));\n\t\tfonts.add(new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12));\n\t\tfonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"ipaexg.ttf\")));\n\n\t\tString str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n\t\tchar[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n\t\tint len = arrayChar.length;\n\n\t\tfor (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n\t\t\tcodePoint = Character.codePointAt(arrayChar, i);\n\t\t\tboolean canDisp = true;\n\t\t\tfor (Font font : fonts) {\n\t\t\t\tif (!font.canDisplay(codePoint)) {\n\t\t\t\t\tcanDisp = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tchar[] chs = Character.toChars(codePoint);\n\n\t\t\tSystem.out.print(chs);\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.print(Integer.toHexString(codePoint));\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.println(canDisp);\n\t\t}\n\t}\n```\n\n#\u751f\u306e\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u4ee3\u308f\u308a\u306b\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u7528\u610f\u3059\u308b#\n\n\u3000\u5b9f\u904b\u7528\u3067\u306f\u3001\u5b9f\u884c\u74b0\u5883\u4e0a\u306b\u30d5\u30a9\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u7f6e\u304f\u3053\u3068\u306f\u7121\u99c4\u304c\u591a\u3044\u3067\u3059\u3057\u3001\u30e9\u30a4\u30bb\u30f3\u30b9\u306e\u554f\u984c\u3082\u767a\u751f\u3057\u305d\u3046\u3067\u3059\u3002\u305d\u3053\u3067\u3001\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u306e\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u3042\u3089\u304b\u3058\u3081\u4f5c\u3063\u3066\u304a\u304f\u3053\u3068\u3092\u8003\u3048\u307e\u3059\u3002\n\u3000\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u3067\u3064\u304b\u3046\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u306f 0\uff5e0x10FFFF \u3067\u3042\u308b\u3053\u3068\u304c\u5206\u304b\u3063\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u305d\u306e\u7bc4\u56f2\u3092\u3042\u3089\u304b\u3058\u3081\u3059\u3079\u3066\u8abf\u3079\u307e\u3059\u3002\u305d\u3057\u3066\u3001\u9023\u7d9a\u3057\u3066\u5229\u7528\u53ef\u80fd\u306a\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u3092 from,to \u3067\u51fa\u3057\u307e\u3059\u3002\n\n```:test4.java\n\tpublic void createValidCharacterCsv() throws IOException, FontFormatException {\n\t\tList<Font> fonts = new ArrayList<Font>();\n\t\tfonts.add(new Font(\"\uff2d\uff33 \u660e\u671d\", Font.PLAIN, 12));\n\t\tfonts.add(new Font(\"\u30e1\u30a4\u30ea\u30aa\", Font.PLAIN, 12));\n\t\tfonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"ipaexg.ttf\")));\n\t\tfonts.add(Font.createFont(Font.TRUETYPE_FONT, new File(\"D:/font/MAC/\u30d2\u30e9\u30ae\u30ce\u89d2\u30b4\u30b7\u30c3\u30af W3/001.TTF\")));\n\n\t\tFile file = new File(\"D:/font/\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b.csv\");\n\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(file));\n\n\t\tboolean bPrevDisp = false;\n\t\tint prevCodePoint = -1;\n\t\tfor (int codePoint = 0; codePoint < 0x10FFFF; codePoint++) {\n\t\t\tboolean bDisp = true;\n\t\t\tfor (Font font : fonts) {\n\t\t\t\tif (!font.canDisplay(codePoint)) {\n\t\t\t\t\tbDisp = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (bPrevDisp != bDisp) {\n\t\t\t\tif (bDisp) {\n\t\t\t\t\tprevCodePoint = codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tbw.write(Integer.toHexString(prevCodePoint));\n\t\t\t\t\tbw.write(\",\");\n\t\t\t\t\tbw.write(Integer.toHexString(codePoint - 1));\n\n\t\t\t\t\t// csv\u306b\u6587\u5b57\u3082\u51fa\u529b\u3057\u305f\u3044\u5834\u5408\u306f\u30b3\u30e1\u30f3\u30c8\u3092\u5916\u3057\u3066\u304f\u3060\u3055\u3044\n\t\t\t\t\t// bw.write(\",\");\n\t\t\t\t\t// bw.write(Character.toChars(prevCodePoint));\n\t\t\t\t\t// bw.write(\",\");\n\t\t\t\t\t// bw.write(Character.toChars(codePoint - 1));\n\n\t\t\t\t\tbw.newLine();\n\t\t\t\t}\n\t\t\t\tbPrevDisp = bDisp;\n\t\t\t}\n\t\t}\n\t\tbw.close();\n\t}\n```\n\n\u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u52d5\u304b\u3059\u3068\u3001\n\n```\n9,a\nd,d\n20,7e\na0,b4\nb6,109\n10c,10f\n.\n.\n.\n2a61a,2a61a\n2a6b2,2a6b2\n2f818,2f818\n2f877,2f877\n2f8dc,2f8dc\n2f8ed,2f8ed\n\n```\n\n\u3068\u3044\u3046\u3088\u3046\u306a\u30d5\u30a1\u30a4\u30eb\u304c\u51fa\u529b\u3055\u308c\u307e\u3059\u3002\n\n0x0\uff5e0x8 \u306f\u30c0\u30e1\u30010z9\uff5e0xa \u306fOK\u30010xb\uff5e0xc \u306f\u30c0\u30e1\u30010x0d \u306fOK\u30fb\u30fb\u30fb \u3068\u3044\u3046\u610f\u5473\u306b\u306a\u308a\u307e\u3059\u3002\n\n#\u74b0\u5883\u4f9d\u5b58\u6587\u5b57\u8f9e\u66f8\u30d5\u30a1\u30a4\u30eb\u3092\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0#\n\n\u3000\u5148\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u51fa\u529b\u3092\u3082\u3068\u306b\u3001boolean \u914d\u5217\u3092\u4f5c\u308c\u3070\u3044\u3044\u8a71\u306a\u306e\u3067\u3059\u304c\u30011MB\u3061\u3087\u3044\u6d88\u8cbb\u3057\u307e\u3059\u3002\n\n\u3000\u30e1\u30e2\u30ea\u3092\u7bc0\u7d04\u3059\u308b\u305f\u3081\u306b from,to \u306e\u307e\u307e\u30ea\u30b9\u30c8\u306b\u6301\u3061\u3001\u8abf\u3079\u308b\u3068\u304d\u306f\u982d\u304b\u3089\u5168\u4ef6\u691c\u7d22\u3055\u305b\u308b\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3067\u5b9f\u88c5\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\n```java:test5.java\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\npublic class Main {\n\n\tList<CodePointFromTo> listValidCodePoints;\n\n\tpublic static void main(String args[]) throws IOException {\n\n\t\tMain main = new Main();\n\n\t\tmain.readValidCharacterCsv(\"D:/font/\u305d\u3053\u306b\u6587\u5b57\u306f\u3042\u308b\u304b.csv\");\n\n\t\tString str = \"\ud842\udfb7\u91ce\u5bb6\";\n\n\t\tchar[] arrayChar = str.toCharArray(); // char\u306b\u5909\u63db\n\t\tint len = arrayChar.length;\n\n\t\tfor (int i = 0, codePoint; i < len; i += Character.charCount(codePoint)) {\n\t\t\tcodePoint = Character.codePointAt(arrayChar, i);\n\t\t\tboolean canDisp = main.canDisp(codePoint);\n\t\t\tchar[] chs = Character.toChars(codePoint);\n\n\t\t\tSystem.out.print(canDisp);\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.print(chs);\n\t\t\tSystem.out.print(\" \");\n\t\t\tSystem.out.print(Integer.toHexString(codePoint));\n\n\t\t\tfor (int j = 0; j < chs.length; j++) {\n\t\t\t\tif ( j==0 ) {\n\t\t\t\t\tSystem.out.print(\"(\");\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tSystem.out.print(\",\");\n\t\t\t\t}\n\t\t\t\tSystem.out.print(Integer.toHexString(chs[j]));\n\t\t\t}\n\t\t\tSystem.out.print(\")\");\n\n\t\t\tSystem.out.println();\n\t\t}\n\n\t}\n\n\t/**\n\t * \u4f7f\u7528\u53ef\u80fd\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059.\n\t * @param validCharacterCsv \u4f7f\u7528\u53ef\u80fd\u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30d5\u30a1\u30a4\u30eb\u540d\n\t * @throws IOException\n\t */\n\tpublic void readValidCharacterCsv(String validCharacterCsv) throws IOException {\n\n\t\tlistValidCodePoints = new ArrayList<CodePointFromTo>();\n\n\t\tFileReader fr = new FileReader(validCharacterCsv);\n\t\tBufferedReader br = new BufferedReader(fr);\n\n\t\tString line;\n\t\twhile ((line = br.readLine()) != null) {\n\t\t\tString[] rows = line.split(\",\");\n\n\t\t\tint from = Integer.decode(\"0x\" + rows[0]);\n\t\t\tint to = Integer.decode(\"0x\" + rows[1]);\n\t\t\tlistValidCodePoints.add(new CodePointFromTo(from, to));\n\t\t}\n\n\t\tbr.close();\n\t}\n\n\t/**\n\t * \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u4f7f\u7528\u53ef\u80fd\u304b\u3092\u8fd4\u3057\u307e\u3059.\n\t * @param codePoint \u30b3\u30fc\u30c9\u30dd\u30a4\u30f3\u30c8\n\t * @return \u4f7f\u7528\u53ef\u5426\n\t */\n\tpublic boolean canDisp(int codePoint) {\n\n\t\tfor (CodePointFromTo cpft : listValidCodePoints) {\n\t\t\tif (cpft.from <= codePoint && codePoint <= cpft.to) {\n\t\t\t\t// \u6b63\u3057\u3044\u6587\u5b57\u306e\u7bc4\u56f2\u5185\u3060\uff01\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (codePoint < cpft.from) {\n\t\t\t\t// \u3053\u308c\u4ee5\u4e0a\u8abf\u3079\u3066\u3082\u7121\u99c4\u3002\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tclass CodePointFromTo {\n\t\tint from;\n\t\tint to;\n\n\t\tpublic CodePointFromTo(int from, int to) {\n\t\t\tthis.from = from;\n\t\t\tthis.to = to;\n\t\t}\n\t}\n}\n```\n\n\u3000\u5168\u4ef6\u691c\u7d22\u3067\u3082\u3001\u5b9f\u7528\u4e0a\u306f\u554f\u984c\u306a\u3044\u3068\u601d\u3044\u307e\u3059\u3002\u307b\u3068\u3093\u3069\u306e\u6587\u5b57\u306f\u5229\u7528\u53ef\u80fd\u3067\u3001\u304b\u3064\u524d\u306e\u65b9\u306b\u504f\u3063\u3066\u5b58\u5728\u3059\u308b\u304b\u3089\u3067\u3059\u3002\n\n\u3000\u6539\u5584\u3068\u3057\u3066\u3001\u4e8c\u5206\u63a2\u7d22\u3059\u308b\u306e\u3082\u30a2\u30ea\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3000\u30e1\u30e2\u30ea\u6d88\u8cbb\u3092\u6c17\u306b\u3057\u306a\u3044\u5834\u5408\u306f [BitSet](https://docs.oracle.com/javase/jp/7/api/java/util/BitSet.html) \u3067\u7ba1\u7406\u3057\u3066\u3082\u3088\u3044\u3067\u3057\u3087\u3046\u3002\n\n#\u307e\u3068\u3081#\n- \u3042\u308b\u6587\u5b57\u304c\u8868\u793a\u53ef\u80fd\u304b\u3069\u3046\u304b\u306f\u30d5\u30a9\u30f3\u30c8\u306b\u805e\u304f\u3002\n- \u30af\u30ed\u30b9\u30d7\u30e9\u30c3\u30c8\u30db\u30fc\u30e0\u74b0\u5883\u3067\u306f\u3001\u5229\u7528\u304c\u60f3\u5b9a\u3055\u308c\u308b\u30d5\u30a9\u30f3\u30c8\u3092\u7528\u610f\u3057\u3001\u305d\u308c\u3089\u3059\u3079\u3066\u3067\u8868\u793a\u53ef\u80fd\u306a\u6587\u5b57\u3060\u3051\u3092\u5229\u7528\u53ef\u80fd\u3068\u3059\u308b\u3002\n"}