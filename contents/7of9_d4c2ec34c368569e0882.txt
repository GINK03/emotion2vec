{"tags": ["\u96fb\u5b50\u5de5\u4f5c", "dmm", "RPi", "gpio", "performance"], "context": " More than 1 year has passed since last update.\u30ab\u30a4\u30bb\u306eKU-2600\u3068\u3044\u3046\u30c7\u30b8\u30dc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\n\u30c1\u30e3\u30fc\u30b8\u30dd\u30f3\u30d7\u8ca0\u96fb\u5727\u3092\u4f5c\u308b\u305f\u30811MHz\u306e\u30af\u30ed\u30c3\u30af\u3092\u3060\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n1MHz\u3092\u4f5c\u308bpython\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u3044\u308b\u304c\u3001KU-2600\u3067\u6e2c\u5b9a\u3057\u305f\u5468\u6ce2\u6570\u304c\u60f3\u5b9a\u901a\u308a\u3067\u306a\u3044\u3002\n\ncode\npython\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3092\u66f8\u3044\u305f\u3002\n\nchagePumpNegative.py\n!/usr/bin/env python\n\nimport RPi.GPIO as GPIO\nimport time\nusleep = lambda x : time.sleep(x/1000000.0)\n\nGPIO.setmode(GPIO.BOARD)\n\nkPinCLK = 8 # GPIO14, 4th from the top at right sides\n\nGPIO.setup(kPinCLK, GPIO.OUT)\n\nusleep(100)\n\nprint \"hello\"\n\nwhile True:\n    GPIO.output(kPinCLK, True)\n#    usleep(0.5)\n    usleep(50.0)\n    GPIO.output(kPinCLK, False)\n#    usleep(0.5)\n    usleep(50.0)\n\n\n\n\u7d50\u679c\n\n\u52d5\u4f5c\u74b0\u5883\nRaspberry Pi2 + raspbian\n\n\nusleep\u306e\u5f85\u3061\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u5468\u6ce2\u6570\u304c\u5909\u308f\u308b\u3002\n\nusleep(5000.0)\n\n\n97.9Hz : \u3060\u3044\u305f\u3044\u3042\u3063\u3066\u308b\n\n\nusleep(500.0)\n\n\n833.4Hz : \u3042\u3084\u3057\u3044\u5024\u3060\n\n\nusleep(50.0)\n\n\n3.3kHz : \u5168\u7136\u9055\u3046\n\n\n\nusleep(5000.0)\u306e\u5834\u5408\u30011\u5468\u671f\u304c10msec\u306b\u306a\u308b\u306e\u3067\u30011 / (10 * 10^-3) = 100Hz.\n\u3042\u3068\u306f\u305d\u306e\u5468\u6ce2\u6570\u309210\u500d\u3057\u3066\u3044\u304f\u5024\u306b\u306a\u308b\u306f\u305a\u3060\u304c\u3001\u4e0a\u8a18\u306e\u7d50\u679c\u3068\u306a\u3063\u305f\u3002\nKU-2600\u306e\u53d6\u8aac\n\u306b\u3088\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306a\u306e\u3067\u3001\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u6e2c\u5b9a\u7bc4\u56f2\u3067\u306f\u306a\u3044\u3068\u601d\u3046\u3002\n\n1-3. \u5468\u6ce2\u6570 (Hz)\n\n\n\u30ec\u30f3\u30b8: 9.999Hz \u304b\u3089 9.999 MHz\n\n\n\n\n\u95a2\u9023\n\u30aa\u30b7\u30ed\u7528\u30d7\u30ed\u30fc\u30d6\u3092\u4f7f\u3046\u3068\u3044\u3046\u6848\u304c\u3042\u308b\u304c\u3001\u305d\u308c\u304c\u672c\u5f53\u306b\u5fc5\u8981\u306a\u306e\u3060\u308d\u3046\u304b\u3002\nhttp://www.marutsu.co.jp/contents/shop/marutsu/mame/180.html\n\n\u554f\u984c\u306e\u5207\u308a\u5206\u3051\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u306a\u306e\u3060\u308d\u3046\u304b\u3002\n\nRPi\u306e\u51e6\u7406\u306e\u554f\u984c\nKU-2600\u306e\u554f\u984c\n\n\ncode v0.2\npython\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u307f\u305f\u3002\nfor \u306710\u56de\u30eb\u30fc\u30d7\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u5834\u5408\u306f usleep(5000.0)\u3068\u540c\u3058\u51e6\u7406\u306b\u306a\u308b\u306f\u305a\u3002\n#!/usr/bin/env python\n\nimport RPi.GPIO as GPIO\nimport time\nusleep = lambda x : time.sleep(x/1000000.0)\n\nGPIO.setmode(GPIO.BOARD)\n\nkPinCLK = 8 # GPIO14, 4th from the top at right sides\n\nGPIO.setup(kPinCLK, GPIO.OUT)\n\nprint \"hello\"\n\nwhile True:\n    GPIO.output(kPinCLK, True)\n    for loop in range (10):\n        usleep(500.0)\n    GPIO.output(kPinCLK, False)\n    for loop in range (10):\n        usleep(500.0)\n\n\u4e0a\u8a18\u306e\u7d50\u679c\u300186.0Hz\u3068\u306a\u3063\u305f (97.9Hz\u3067\u306f\u306a\u3044)\u3002\nKU-2600\u306f\u60aa\u304f\u306a\u3044\u3002\nRPi\u306e\u51e6\u7406\u3067usleep()\u51e6\u7406\u76f4\u5f8c\u306e\u30bf\u30b9\u30af\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u9045\u5ef6\u306a\u3069\u306b\u3088\u308await\u304c\u7d2f\u7a4d\u3057\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\nhttp://pythoncentral.io/pythons-time-sleep-pause-wait-sleep-stop-your-code/\n\nThe Linux kernels tend to have a higher tick rate, where the intervals are generally closer to 1 millisecond. \n\n1msec\u7a0b\u5ea6\u307e\u3067\u3057\u304b\u3060\u3081\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u30c8\u30e9\u6280\u3067\u3053\u3046\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\u3001\u6628\u5e74\u306e\u4f55\u6708\u53f7\u3060\u3063\u305f\u3060\u308d\u3046\u304b\u3002\n2015\u5e74\u306e\u30c8\u30e9\u6280\u3092\u898b\u305f\u304c\u3001\u8f09\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u65b9\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\u30ab\u30a4\u30bb\u306eKU-2600\u3068\u3044\u3046\u30c7\u30b8\u30dc\u30eb\u3092\u4f7f\u3063\u3066\u3044\u308b\u3002\n\n\u30c1\u30e3\u30fc\u30b8\u30dd\u30f3\u30d7\u8ca0\u96fb\u5727\u3092\u4f5c\u308b\u305f\u30811MHz\u306e\u30af\u30ed\u30c3\u30af\u3092\u3060\u305d\u3046\u3068\u3057\u3066\u3044\u308b\u3002\n1MHz\u3092\u4f5c\u308bpython\u30b3\u30fc\u30c9\u3092\u8a66\u3057\u3066\u3044\u308b\u304c\u3001KU-2600\u3067\u6e2c\u5b9a\u3057\u305f\u5468\u6ce2\u6570\u304c\u60f3\u5b9a\u901a\u308a\u3067\u306a\u3044\u3002\n\n## code \n\npython\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u3092\u66f8\u3044\u305f\u3002\n\n```chagePumpNegative.py\n!/usr/bin/env python\n\nimport RPi.GPIO as GPIO\nimport time\nusleep = lambda x : time.sleep(x/1000000.0)\n\nGPIO.setmode(GPIO.BOARD)\n\nkPinCLK = 8 # GPIO14, 4th from the top at right sides\n\nGPIO.setup(kPinCLK, GPIO.OUT)\n\nusleep(100)\n\nprint \"hello\"\n\nwhile True:\n    GPIO.output(kPinCLK, True)\n#    usleep(0.5)\n    usleep(50.0)\n    GPIO.output(kPinCLK, False)\n#    usleep(0.5)\n    usleep(50.0)\n```\n\n## \u7d50\u679c\n\n```txt:\u52d5\u4f5c\u74b0\u5883\nRaspberry Pi2 + raspbian\n```\n\nusleep\u306e\u5f85\u3061\u6642\u9593\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u5468\u6ce2\u6570\u304c\u5909\u308f\u308b\u3002\n\n- usleep(5000.0)\n  - 97.9Hz : \u3060\u3044\u305f\u3044\u3042\u3063\u3066\u308b\n- usleep(500.0)\n  - 833.4Hz : \u3042\u3084\u3057\u3044\u5024\u3060\n- usleep(50.0)\n  - 3.3kHz : \u5168\u7136\u9055\u3046\n\nusleep(5000.0)\u306e\u5834\u5408\u30011\u5468\u671f\u304c10msec\u306b\u306a\u308b\u306e\u3067\u30011 / (10 * 10^-3) = 100Hz.\n\u3042\u3068\u306f\u305d\u306e\u5468\u6ce2\u6570\u309210\u500d\u3057\u3066\u3044\u304f\u5024\u306b\u306a\u308b\u306f\u305a\u3060\u304c\u3001\u4e0a\u8a18\u306e\u7d50\u679c\u3068\u306a\u3063\u305f\u3002\n\n[KU-2600\u306e\u53d6\u8aac](http://www.kaise.com/images/manual/Japanese/2600_manualJ_5.pdf)\n\u306b\u3088\u308b\u3068\u4ee5\u4e0b\u306e\u901a\u308a\u306a\u306e\u3067\u3001\u5bfe\u5fdc\u3067\u304d\u306a\u3044\u6e2c\u5b9a\u7bc4\u56f2\u3067\u306f\u306a\u3044\u3068\u601d\u3046\u3002\n\n- 1-3. \u5468\u6ce2\u6570 (Hz)\n  - \u30ec\u30f3\u30b8: 9.999Hz \u304b\u3089 9.999 MHz\n \n\n## \u95a2\u9023\n\n\u30aa\u30b7\u30ed\u7528\u30d7\u30ed\u30fc\u30d6\u3092\u4f7f\u3046\u3068\u3044\u3046\u6848\u304c\u3042\u308b\u304c\u3001\u305d\u308c\u304c\u672c\u5f53\u306b\u5fc5\u8981\u306a\u306e\u3060\u308d\u3046\u304b\u3002\nhttp://www.marutsu.co.jp/contents/shop/marutsu/mame/180.html\n\n\n### \u554f\u984c\u306e\u5207\u308a\u5206\u3051\n\n\u4ee5\u4e0b\u306e\u3044\u305a\u308c\u306a\u306e\u3060\u308d\u3046\u304b\u3002\n\n- RPi\u306e\u51e6\u7406\u306e\u554f\u984c\n- KU-2600\u306e\u554f\u984c\n\n## code v0.2\n\npython\u30b3\u30fc\u30c9\u3092\u5909\u66f4\u3057\u3066\u307f\u305f\u3002\n\nfor \u306710\u56de\u30eb\u30fc\u30d7\u3059\u308b\u3088\u3046\u306b\u3057\u305f\u3002\u4ee5\u4e0b\u306e\u5834\u5408\u306f usleep(5000.0)\u3068\u540c\u3058\u51e6\u7406\u306b\u306a\u308b\u306f\u305a\u3002\n\n```\n#!/usr/bin/env python\n\nimport RPi.GPIO as GPIO\nimport time\nusleep = lambda x : time.sleep(x/1000000.0)\n\nGPIO.setmode(GPIO.BOARD)\n\nkPinCLK = 8 # GPIO14, 4th from the top at right sides\n\nGPIO.setup(kPinCLK, GPIO.OUT)\n\nprint \"hello\"\n\nwhile True:\n    GPIO.output(kPinCLK, True)\n    for loop in range (10):\n        usleep(500.0)\n    GPIO.output(kPinCLK, False)\n    for loop in range (10):\n        usleep(500.0)\n```\n\n\u4e0a\u8a18\u306e\u7d50\u679c\u300186.0Hz\u3068\u306a\u3063\u305f (97.9Hz\u3067\u306f\u306a\u3044)\u3002\n\n<font color=red>KU-2600\u306f\u60aa\u304f\u306a\u3044</font>\u3002\n\nRPi\u306e\u51e6\u7406\u3067usleep()\u51e6\u7406\u76f4\u5f8c\u306e\u30bf\u30b9\u30af\u30c7\u30a3\u30b9\u30d1\u30c3\u30c1\u9045\u5ef6\u306a\u3069\u306b\u3088\u308await\u304c\u7d2f\u7a4d\u3057\u3066\u3044\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\nhttp://pythoncentral.io/pythons-time-sleep-pause-wait-sleep-stop-your-code/\n> The Linux kernels tend to have a higher tick rate, where the intervals are generally closer to 1 millisecond. \n\n1msec\u7a0b\u5ea6\u307e\u3067\u3057\u304b\u3060\u3081\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n~~\u30c8\u30e9\u6280\u3067\u3053\u3046\u3044\u3046\u8a18\u4e8b\u304c\u3042\u3063\u305f\u3088\u3046\u306a\u6c17\u304c\u3059\u308b\u304c\u3001\u6628\u5e74\u306e\u4f55\u6708\u53f7\u3060\u3063\u305f\u3060\u308d\u3046\u304b\u3002~~\n2015\u5e74\u306e\u30c8\u30e9\u6280\u3092\u898b\u305f\u304c\u3001\u8f09\u3063\u3066\u3044\u306a\u304b\u3063\u305f\u3002\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u65b9\u3060\u3063\u305f\u304b\u3082\u3057\u308c\u306a\u3044\u3002\n\n\n\n\n\n\n"}