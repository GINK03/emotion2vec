{"context": " More than 1 year has passed since last update.\n001a.c\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define LOT_DNUM 6 // \u304f\u3058\u306e\u6841\u6570\n#define LOT_GNUM 6 // \u304f\u3058\u306e\u7b49\u7d1a\u6570\n\nvoid check_winning_lot(char *[], char **[LOT_GNUM], int [LOT_GNUM]);\nint check_lot(char *, char *);\n\nvoid check_winning_lot(char *lots[], char **win_list[LOT_GNUM], int winner[LOT_GNUM]){\n  int i, j, k;\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    winner[i] = 0;\n    for (j = 0; lots[j] != NULL; j++) {\n      for (k = 0; win_list[i][k] != NULL; k++) {\n         winner[i] += check_lot(lots[j], win_list[i][k]);\n      }\n    }\n}\n\n  /* \u7d50\u679c\u3092\u8868\u793a */\n  printf(\"winner(\u5f53\u9078)\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306f%d\u672c\\n\", i + 1, winner[i]);\n  }\n\n}\n\nint check_lot(char *lot, char *win){\n  int lenw, result = 1, i;\n\n  lenw = strlen(win);\n\n  win += lenw;\n  lot += LOT_DNUM;\n\n  for (i = 0; (i < lenw)&&(result == 1); i++) {\n    if (*(--lot) != *(--win)) {\n      result = 0;\n    }\n  }\n\n  return result;\n}\n\nvoid main() {\n\nchar *lots[4] = {\"314159\",\"111292\",\"123492\",NULL};// \u78ba\u8a8d\u3059\u308b\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u8868\n\nchar *k1[2]={\"223692\",NULL};\nchar *k2[3]={\"141421\",\"314159\",NULL};\nchar *k3[3]={\"27182\",\"00145\",NULL};\nchar *k4[3]={\"3301\",\"1028\",NULL};\nchar *k5[4]={\"243\",\"101\",\"144\",NULL};\nchar *k6[3]={\"03\",\"92\",NULL};\n\nchar **win_list[LOT_GNUM];\n\nint winner[LOT_GNUM];// \u5f53\u9078\u672c\u6570\u8868\n\nwin_list[0] = k1;\nwin_list[1] = k2;\nwin_list[2] = k3;\nwin_list[3] = k4;\nwin_list[4] = k5;\nwin_list[5] = k6;\n\ncheck_winning_lot(lots, win_list, winner);\n\n}\n\n\n\n\n002a.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define LOT_DNUM 6 // \u304f\u3058\u306e\u6841\u6570\n#define LOT_GNUM 6 // \u304f\u3058\u306e\u7b49\u7d1a\u6570\n\nvoid check_winning_lot(char *[], char **[LOT_GNUM], int [LOT_GNUM], int [LOT_GNUM]);\nint check_lot(char *, char *);\n\nvoid check_winning_lot(char *lots[], char **win_list[LOT_GNUM], int winner[LOT_GNUM],int special[LOT_GNUM]){\n  int i, j, k;\n  int pflg,nflg,m;\n  char pnum[LOT_DNUM+1],nnum[LOT_DNUM+1];\n\n  for (i = 0; i < LOT_DNUM+1; i++) {\n    pnum[i]=NULL;\n    nnum[i]=NULL;\n  }\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    winner[i] = 0;\n    special[i]=0;\n    for (j = 0; lots[j] != NULL; j++) {\n       //\u521d\u671f\u5316\n       pflg=nflg=0;\n       for(m=LOT_DNUM-1;m>=0;m--){\n         pnum[m]=nnum[m]=*(lots[j]+m);\n         if(pflg==0){\n             if(pnum[m]=='0'){\n                 pnum[m]='9';\n             }else{\n                 pnum[m]--;\n                 pflg=1;\n             }\n         }\n         if(nflg==0){\n             if(nnum[m]=='9'){\n                 nnum[m]='0';\n             }else{\n                 nnum[m]++;\n                 nflg=1;\n             }\n         }\n       }\n       pnum[LOT_DNUM]=nnum[LOT_DNUM]='\\0';\n      for (k = 0; win_list[i][k] != NULL; k++) {\n         winner[i] += check_lot(lots[j], win_list[i][k]);\n         if(strlen(win_list[i][k])==LOT_DNUM){\n           special[i] += check_lot(pnum, win_list[i][k]);\n           special[i] += check_lot(nnum, win_list[i][k]);\n         }\n      }\n    }\n}\n\n  /* \u7d50\u679c\u3092\u8868\u793a */\n  printf(\"winner(\u5f53\u9078)\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306f%d\u672c\\n\", i + 1, winner[i]);\n  }\n\n  printf(\"special\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306e\u524d\u5f8c\u8cde\u306f=%d\u672c\\n\", i + 1, special[i]);\n  }\n}\n\nint check_lot(char *lot, char *win) {\n  int lenw, result = 1, i;\n\n  lenw = strlen(win);\n\n  win += lenw;\n  lot += LOT_DNUM;\n\n  for (i = 0; (i < lenw)&&(result == 1); i++) {\n    if (*(--lot) != *(--win)) {\n      result = 0;\n    }\n  }\n\n  return result;\n}\n\nvoid main() {\n\nchar *lots[7] = {\"314159\",\"314160\",\"314158\",\"111292\",\"123492\",\"987103\",NULL};// \u78ba\u8a8d\u3059\u308b\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u8868\n\nchar *k1[2]={\"223692\",NULL};\nchar *k2[3]={\"141421\",\"314159\",NULL};\nchar *k3[3]={\"27182\",\"00145\",NULL};\nchar *k4[3]={\"3301\",\"1028\",NULL};\nchar *k5[4]={\"243\",\"101\",\"144\",NULL};\nchar *k6[3]={\"03\",\"92\",NULL};\n\nchar **win_list[LOT_GNUM];\n\nint winner[LOT_GNUM];// \u5f53\u9078\u672c\u6570\u8868\nint special[LOT_GNUM];//\u524d\u5f8c\u8cde\u306e\u5f53\u9078\u672c\u6570\u8868\n\nwin_list[0] = k1;\nwin_list[1] = k2;\nwin_list[2] = k3;\nwin_list[3] = k4;\nwin_list[4] = k5;\nwin_list[5] = k6;\n\ncheck_winning_lot(lots, win_list, winner, special);\n\n}\n\n\n\n\n\u74b0\u5883\nOS:windows7 32bit (\u81ea\u4f5c\u6a5f)\n\u30b3\u30f3\u30d1\u30a4\u30e9:Borland C++ 5.5.1 for Win32\n\n\u89e3\u8aac\n\u5e73\u621024\u5e74\u79cb \u57fa\u672c\u60c5\u5831\u6280\u8853\u8005\u8a66\u9a13 \u5348\u5f8c \u554f9 C\u8a00\u8a9e\n001a.c:\u8907\u6570\u672c\u306e\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u3092\u5f53\u9078\u756a\u53f7\u3068\u6bd4\u8f03\u3057\u3001\u5f53\u305f\u308a\u3092\u78ba\u8a8d\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308b\u3002\n002a.c:\u524d\u5f8c\u8cde\u3042\u308a\u7248\n\u554f\u984c\u6587\u306e\u95a2\u6570\u304c\u52d5\u304f\u3088\u3046\u306bmain\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u305f\u3002\n\u30dd\u30a4\u30f3\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u306ewin_list\u306b\u5f53\u9078\u756a\u53f7\u3092\u5165\u308c\u308b\u306e\u3063\u3066\u3053\u308c\u3067\u3044\u3044\u306e\u3060\u308d\u3046\u304b\uff1f\nnnum\u3068pnum\u3063\u3066\u3001char\u578b\u306a\u306e\u306b\nnnum[m]++\npnum[m]--\n\u3063\u3067\u4f55\u3067\u52a0\u7b97\u3068\u6e1b\u7b97\u3067\u304d\u3093\u3060\uff1f\u89e3\u305b\u306a\u3044\u3002\u3053\u3093\u306a\u6319\u52d5\u3059\u308b\u306e\u304b\u3002\nC\u8a00\u8a9e\u306f\u52c9\u5f37\u4e0d\u8db3\u3067\u3088\u304f\u5206\u304b\u3089\u3093\u3053\u3068\u304c\u591a\u3044\u3002\n\n\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u7d50\u679c\n\u4e0a\u8a18\u30bd\u30fc\u30b9\u3092\nc:\\2015\\0326\\001a.c\nc:\\2015\\0326\\002a.c\n\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\n\nc:\\2015\\0326>bcc32 001a.c\nBorland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland\n001a.c:\nTurbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland\n\nc:\\2015\\0326>001a.exe\nwinner(\u5f53\u9078)\n1\u7b49\u306f0\u672c\n2\u7b49\u306f1\u672c\n3\u7b49\u306f0\u672c\n4\u7b49\u306f0\u672c\n5\u7b49\u306f0\u672c\n6\u7b49\u306f2\u672c\n\nc:\\2015\\0326>bcc32 002a.c\nBorland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland\n002a.c:\nTurbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland\n\nc:\\2015\\0326>002a.exe\nwinner(\u5f53\u9078)\n1\u7b49\u306f0\u672c\n2\u7b49\u306f1\u672c\n3\u7b49\u306f0\u672c\n4\u7b49\u306f0\u672c\n5\u7b49\u306f0\u672c\n6\u7b49\u306f3\u672c\nspecial\n1\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n2\u7b49\u306e\u524d\u5f8c\u8cde\u306f=2\u672c\n3\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n4\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n5\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n6\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n\n\n```c:001a.c\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define LOT_DNUM 6 // \u304f\u3058\u306e\u6841\u6570\n#define LOT_GNUM 6 // \u304f\u3058\u306e\u7b49\u7d1a\u6570\n\nvoid check_winning_lot(char *[], char **[LOT_GNUM], int [LOT_GNUM]);\nint check_lot(char *, char *);\n\nvoid check_winning_lot(char *lots[], char **win_list[LOT_GNUM], int winner[LOT_GNUM]){\n  int i, j, k;\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    winner[i] = 0;\n    for (j = 0; lots[j] != NULL; j++) {\n      for (k = 0; win_list[i][k] != NULL; k++) {\n\t\t winner[i] += check_lot(lots[j], win_list[i][k]);\n      }\n    }\n}\n\n  /* \u7d50\u679c\u3092\u8868\u793a */\n  printf(\"winner(\u5f53\u9078)\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306f%d\u672c\\n\", i + 1, winner[i]);\n  }\n\n}\n\nint check_lot(char *lot, char *win){\n  int lenw, result = 1, i;\n\n  lenw = strlen(win);\n\n  win += lenw;\n  lot += LOT_DNUM;\n\n  for (i = 0; (i < lenw)&&(result == 1); i++) {\n    if (*(--lot) != *(--win)) {\n      result = 0;\n    }\n  }\n  \n  return result;\n}\n\nvoid main() {\n\nchar *lots[4] = {\"314159\",\"111292\",\"123492\",NULL};// \u78ba\u8a8d\u3059\u308b\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u8868\n\nchar *k1[2]={\"223692\",NULL};\nchar *k2[3]={\"141421\",\"314159\",NULL};\nchar *k3[3]={\"27182\",\"00145\",NULL};\nchar *k4[3]={\"3301\",\"1028\",NULL};\nchar *k5[4]={\"243\",\"101\",\"144\",NULL};\nchar *k6[3]={\"03\",\"92\",NULL};\n\nchar **win_list[LOT_GNUM];\n\nint winner[LOT_GNUM];// \u5f53\u9078\u672c\u6570\u8868\n\nwin_list[0] = k1;\nwin_list[1] = k2;\nwin_list[2] = k3;\nwin_list[3] = k4;\nwin_list[4] = k5;\nwin_list[5] = k6;\n\ncheck_winning_lot(lots, win_list, winner);\n\n}\n\n```\n\n\n\n```c:002a.c\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define LOT_DNUM 6 // \u304f\u3058\u306e\u6841\u6570\n#define LOT_GNUM 6 // \u304f\u3058\u306e\u7b49\u7d1a\u6570\n\nvoid check_winning_lot(char *[], char **[LOT_GNUM], int [LOT_GNUM], int [LOT_GNUM]);\nint check_lot(char *, char *);\n\nvoid check_winning_lot(char *lots[], char **win_list[LOT_GNUM], int winner[LOT_GNUM],int special[LOT_GNUM]){\n  int i, j, k;\n  int pflg,nflg,m;\n  char pnum[LOT_DNUM+1],nnum[LOT_DNUM+1];\n\n  for (i = 0; i < LOT_DNUM+1; i++) {\n    pnum[i]=NULL;\n\tnnum[i]=NULL;\n  }\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    winner[i] = 0;\n\tspecial[i]=0;\n\tfor (j = 0; lots[j] != NULL; j++) {\n\t   //\u521d\u671f\u5316\n\t   pflg=nflg=0;\n\t   for(m=LOT_DNUM-1;m>=0;m--){\n\t     pnum[m]=nnum[m]=*(lots[j]+m);\n\t\t if(pflg==0){\n\t\t     if(pnum[m]=='0'){\n\t\t\t     pnum[m]='9';\n\t\t\t }else{\n\t\t\t     pnum[m]--;\n\t\t\t     pflg=1;\n\t\t\t }\n\t\t }\n\t\t if(nflg==0){\n\t\t     if(nnum[m]=='9'){\n\t\t\t     nnum[m]='0';\n\t\t\t }else{\n\t\t\t     nnum[m]++;\n\t\t\t     nflg=1;\n\t\t\t }\n\t\t }\n\t   }\n\t   pnum[LOT_DNUM]=nnum[LOT_DNUM]='\\0';\n      for (k = 0; win_list[i][k] != NULL; k++) {\n\t\t winner[i] += check_lot(lots[j], win_list[i][k]);\n\t\t if(strlen(win_list[i][k])==LOT_DNUM){\n\t\t   special[i] += check_lot(pnum, win_list[i][k]);\n\t\t   special[i] += check_lot(nnum, win_list[i][k]);\n\t\t }\n      }\n    }\n}\n\n  /* \u7d50\u679c\u3092\u8868\u793a */\n  printf(\"winner(\u5f53\u9078)\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306f%d\u672c\\n\", i + 1, winner[i]);\n  }\n\n  printf(\"special\\n\");\n\n  for (i = 0; i < LOT_GNUM; i++) {\n    printf(\"%d\u7b49\u306e\u524d\u5f8c\u8cde\u306f=%d\u672c\\n\", i + 1, special[i]);\n  }\n}\n\nint check_lot(char *lot, char *win) {\n  int lenw, result = 1, i;\n  \n  lenw = strlen(win);\n\n  win += lenw;\n  lot += LOT_DNUM;\n\n  for (i = 0; (i < lenw)&&(result == 1); i++) {\n    if (*(--lot) != *(--win)) {\n      result = 0;\n    }\n  }\n  \n  return result;\n}\n\nvoid main() {\n\nchar *lots[7] = {\"314159\",\"314160\",\"314158\",\"111292\",\"123492\",\"987103\",NULL};// \u78ba\u8a8d\u3059\u308b\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u8868\n\nchar *k1[2]={\"223692\",NULL};\nchar *k2[3]={\"141421\",\"314159\",NULL};\nchar *k3[3]={\"27182\",\"00145\",NULL};\nchar *k4[3]={\"3301\",\"1028\",NULL};\nchar *k5[4]={\"243\",\"101\",\"144\",NULL};\nchar *k6[3]={\"03\",\"92\",NULL};\n\nchar **win_list[LOT_GNUM];\n\nint winner[LOT_GNUM];// \u5f53\u9078\u672c\u6570\u8868\nint special[LOT_GNUM];//\u524d\u5f8c\u8cde\u306e\u5f53\u9078\u672c\u6570\u8868\n\nwin_list[0] = k1;\nwin_list[1] = k2;\nwin_list[2] = k3;\nwin_list[3] = k4;\nwin_list[4] = k5;\nwin_list[5] = k6;\n\ncheck_winning_lot(lots, win_list, winner, special);\n\n}\n\n```\n\n\n\n\n##\u74b0\u5883\nOS:windows7 32bit (\u81ea\u4f5c\u6a5f)\n\u30b3\u30f3\u30d1\u30a4\u30e9:Borland C++ 5.5.1 for Win32\n\n##\u89e3\u8aac\n\u5e73\u621024\u5e74\u79cb \u57fa\u672c\u60c5\u5831\u6280\u8853\u8005\u8a66\u9a13 \u5348\u5f8c \u554f9 C\u8a00\u8a9e\n001a.c:\u8907\u6570\u672c\u306e\u304f\u3058\u306e\u304f\u3058\u756a\u53f7\u3092\u5f53\u9078\u756a\u53f7\u3068\u6bd4\u8f03\u3057\u3001\u5f53\u305f\u308a\u3092\u78ba\u8a8d\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308b\u3002\n002a.c:\u524d\u5f8c\u8cde\u3042\u308a\u7248\n\u554f\u984c\u6587\u306e\u95a2\u6570\u304c\u52d5\u304f\u3088\u3046\u306bmain\u95a2\u6570\u3092\u8ffd\u52a0\u3057\u305f\u3002\n\n\u30dd\u30a4\u30f3\u30bf\u306e\u30dd\u30a4\u30f3\u30bf\u306ewin_list\u306b\u5f53\u9078\u756a\u53f7\u3092\u5165\u308c\u308b\u306e\u3063\u3066\u3053\u308c\u3067\u3044\u3044\u306e\u3060\u308d\u3046\u304b\uff1f\n\nnnum\u3068pnum\u3063\u3066\u3001char\u578b\u306a\u306e\u306b\nnnum[m]++\npnum[m]--\n\u3063\u3067\u4f55\u3067\u52a0\u7b97\u3068\u6e1b\u7b97\u3067\u304d\u3093\u3060\uff1f\u89e3\u305b\u306a\u3044\u3002\u3053\u3093\u306a\u6319\u52d5\u3059\u308b\u306e\u304b\u3002\n\nC\u8a00\u8a9e\u306f\u52c9\u5f37\u4e0d\u8db3\u3067\u3088\u304f\u5206\u304b\u3089\u3093\u3053\u3068\u304c\u591a\u3044\u3002\n\n##\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u5b9f\u884c\u7d50\u679c\n\u4e0a\u8a18\u30bd\u30fc\u30b9\u3092\nc:\\2015\\0326\\001a.c\nc:\\2015\\0326\\002a.c\n\u3068\u3057\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\n\n```\n\nc:\\2015\\0326>bcc32 001a.c\nBorland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland\n001a.c:\nTurbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland\n\nc:\\2015\\0326>001a.exe\nwinner(\u5f53\u9078)\n1\u7b49\u306f0\u672c\n2\u7b49\u306f1\u672c\n3\u7b49\u306f0\u672c\n4\u7b49\u306f0\u672c\n5\u7b49\u306f0\u672c\n6\u7b49\u306f2\u672c\n\nc:\\2015\\0326>bcc32 002a.c\nBorland C++ 5.5.1 for Win32 Copyright (c) 1993, 2000 Borland\n002a.c:\nTurbo Incremental Link 5.00 Copyright (c) 1997, 2000 Borland\n\nc:\\2015\\0326>002a.exe\nwinner(\u5f53\u9078)\n1\u7b49\u306f0\u672c\n2\u7b49\u306f1\u672c\n3\u7b49\u306f0\u672c\n4\u7b49\u306f0\u672c\n5\u7b49\u306f0\u672c\n6\u7b49\u306f3\u672c\nspecial\n1\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n2\u7b49\u306e\u524d\u5f8c\u8cde\u306f=2\u672c\n3\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n4\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n5\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n6\u7b49\u306e\u524d\u5f8c\u8cde\u306f=0\u672c\n\n```\n", "tags": ["C\u8a00\u8a9e"]}