{"context": "\u30c7\u30fc\u30bf\u5206\u6790\u306e\u969b\u306bpandas.DataFrame\u3067\u82e6\u8089\u306e\u7b56\u3068\u3057\u3066for\u30eb\u30fc\u30d7\u3055\u305b\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u308a\u904e\u304e\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff0cnumpy.ndarray\u306b\u3059\u308b\u3068\u3069\u306e\u304f\u3089\u3044\u901f\u304f\u306a\u308b\u304b\u78ba\u8a8d\u3002\n\ncheck_speed.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\nimport time\nimport numpy as np\nimport pandas as pd\n\ndf100 = pd.DataFrame(np.random.randn(100, 100))\ndf1000 = pd.DataFrame(np.random.randn(1000, 1000))\n\n# 100 * 100\u3067\u8a08\u6e2c\nprint('Time of pandas.DataFrame (100 * 100)')\nidxs = df100.index\ncols = df100.columns\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor idx in idxs:\n    for col in cols:\n        df100.ix[idx, col] = df100.ix[idx, col] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\nprint('Time of numpy.ndarray (100 * 100)')\nmatrix = df100.values\nidx_range = range(len(df100.values[:, 0]))\ncol_range = range(len(df100.values[0, :]))\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor i in idx_range:\n    for j in col_range:\n        matrix[i, j] = matrix[i, j] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\n# 1000 * 1000\u3067\u8a08\u6e2c\nprint('Time of pandas.DataFrame (1000 * 1000)')\nidxs = df1000.index\ncols = df1000.columns\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor idx in idxs:\n    for col in cols:\n        df1000.ix[idx, col] = df1000.ix[idx, col] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\nprint('Time of numpy.ndarray (1000 * 1000)')\nmatrix = df1000.values\nidx_range = range(len(df1000.values[:, 0]))\ncol_range = range(len(df1000.values[0, :]))\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor i in idx_range:\n    for j in col_range:\n        matrix[i, j] = matrix[i, j] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\n\n\u8a08\u6e2c\u7d50\u679c\u306f\u4ee5\u4e0b\u3002\n\n\n\n\u7a2e\u5225\n100\u00d7100[\u79d2]\n1000\u00d71000[\u79d2]\n\n\n\n\npandas.DataFrame\n2.010\n206.6285\n\n\nnumpy.ndarray\n0.0055\n0.5832\n\n\n\n\u601d\u3063\u3066\u3044\u305f\u3088\u308a\u5dee\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u4eca\u5f8c\u306f\u3061\u3083\u3093\u3068numpy.ndarray\u3067\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u3044\u3068...\u3002\n\u3042\u3068\uff0c\u8a08\u7b97\u6642\u9593\u306f\u6982\u306d\u884c\u5217\u306e\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n\u30c7\u30fc\u30bf\u5206\u6790\u306e\u969b\u306bpandas.DataFrame\u3067\u82e6\u8089\u306e\u7b56\u3068\u3057\u3066for\u30eb\u30fc\u30d7\u3055\u305b\u308b\u3068\u6642\u9593\u304c\u304b\u304b\u308a\u904e\u304e\u308b\u3053\u3068\u304c\u3042\u308b\u305f\u3081\uff0cnumpy.ndarray\u306b\u3059\u308b\u3068\u3069\u306e\u304f\u3089\u3044\u901f\u304f\u306a\u308b\u304b\u78ba\u8a8d\u3002\n\n```py3:check_speed.py\n#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\nimport time\nimport numpy as np\nimport pandas as pd\n\ndf100 = pd.DataFrame(np.random.randn(100, 100))\ndf1000 = pd.DataFrame(np.random.randn(1000, 1000))\n\n# 100 * 100\u3067\u8a08\u6e2c\nprint('Time of pandas.DataFrame (100 * 100)')\nidxs = df100.index\ncols = df100.columns\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor idx in idxs:\n    for col in cols:\n        df100.ix[idx, col] = df100.ix[idx, col] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\nprint('Time of numpy.ndarray (100 * 100)')\nmatrix = df100.values\nidx_range = range(len(df100.values[:, 0]))\ncol_range = range(len(df100.values[0, :]))\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor i in idx_range:\n    for j in col_range:\n        matrix[i, j] = matrix[i, j] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\n# 1000 * 1000\u3067\u8a08\u6e2c\nprint('Time of pandas.DataFrame (1000 * 1000)')\nidxs = df1000.index\ncols = df1000.columns\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor idx in idxs:\n    for col in cols:\n        df1000.ix[idx, col] = df1000.ix[idx, col] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n\nprint('Time of numpy.ndarray (1000 * 1000)')\nmatrix = df1000.values\nidx_range = range(len(df1000.values[:, 0]))\ncol_range = range(len(df1000.values[0, :]))\nstart = time.time() # \u3053\u3053\u304b\u3089\nfor i in idx_range:\n    for j in col_range:\n        matrix[i, j] = matrix[i, j] + 1\nprint(time.time() - start) # \u3053\u3053\u307e\u3067\n```\n\n\u8a08\u6e2c\u7d50\u679c\u306f\u4ee5\u4e0b\u3002\n\n| \u7a2e\u5225 | 100\u00d7100[\u79d2] | 1000\u00d71000[\u79d2] |\n|:-----------:|------------:|------------:|\n| pandas.DataFrame | 2.010 | 206.6285 |\n| numpy.ndarray | 0.0055 | 0.5832 |\n\n\u601d\u3063\u3066\u3044\u305f\u3088\u308a\u5dee\u304c\u3042\u308a\u307e\u3059\u306d\u3002\u4eca\u5f8c\u306f\u3061\u3083\u3093\u3068numpy.ndarray\u3067\u8a08\u7b97\u3059\u308b\u3088\u3046\u306b\u3057\u306a\u3044\u3068...\u3002\n\u3042\u3068\uff0c\u8a08\u7b97\u6642\u9593\u306f\u6982\u306d\u884c\u5217\u306e\u30b5\u30a4\u30ba\u306b\u6bd4\u4f8b\u3059\u308b\u3088\u3046\u3067\u3059\u3002\n", "tags": ["python3", "numpy", "pandas"]}