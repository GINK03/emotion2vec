{"context": "Rust\u3067\u6570\u5024\u8a08\u7b97\u3092\u884c\u3046\u7df4\u7fd2\u3068\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u4e00\u6b21\u5143\u306eNewton\u6cd5\u3092\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\uff1a\nf(x) = 0\n\n\u3092\u89e3\u304f\u305f\u3081\u306b\u6b21\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\uff1a\nx_{n+1} = x_n - \\frac{f(x_n)}{f^\\prime(x_n)}\n\n\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u95a2\u6570f\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u95a2\u6570\u3092\u95a2\u6570\u306b\u308f\u305f\u3059\u90e8\u5206\u306fClosures\u306e\u7ae0\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\nfn newton<T1, T2>(f: T1, df: T2, mut x: f64, eps: f64) -> f64\n    where T1: Fn(f64) -> f64,\n          T2: Fn(f64) -> f64\n{\n    let mut y = f(x);\n    while y.abs() > eps {\n        x -= y / df(x);\n        y = f(x);\n    }\n    x\n}\n\n2\u3064\u306eclosure\u306f\u5225\u306e\u578b\u306b\u306a\u308b\u306e\u3067T1,T2\u306f\u5225\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3002\n\u3068\u308a\u3048\u3042\u305a\u5fae\u5206\u306f\u81ea\u5206\u3067\u89e3\u6790\u7684\u306b\u3084\u308b\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u3088\u3046\uff1a\nfn main() {\n    let mut x = -5.0;\n    let f = |x| x * (x - 1.0);\n    let df = |x| 2.0*x - 1.0;\n    let eps = 1e-6;\n    x = newton(&f, &df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n\nResult = -7.324879859764758e-11\n\n\u6700\u8fd1AST\u3092\u89e3\u6790\u3057\u3066\u81ea\u52d5\u7684\u306b\u5fae\u5206\u6f14\u7b97\u3092\u5b9f\u88c5\u3059\u308b\u81ea\u52d5\u5fae\u5206\u304c\u6d41\u884c\u3063\u3066\u308b\u3089\u3057\u3044\u304c\uff08\u8981\u51fa\u5c55\uff09\u3001\n\u305d\u3093\u306a\u9ad8\u5ea6\u306a\u4e8b\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u6570\u5024\u5fae\u5206\u3057\u3066\u307f\u3088\u3046\uff1a\nfn main() {\n    let mut x = -5.0;\n    let dx = 1e-7;\n    let f = |x| x * (x - 1.0);\n    let df = |x| (f(x+dx)-f(x))/dx;\n    let eps = 1e-6;\n    x = newton(&f, &df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n\nResult = -7.238726858155113e-11\n\n\n\u8ab2\u984c\nlet df = |x| (f(x+dx)-f(x))/dx;\n\n\u306e\u90e8\u5206\u3092\nlet df = num_diff(&f, dx);\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u306e\u3060\u304c\u3001num_diff\u306e\u5b9a\u7fa9\u306e\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u30e9\u30e0\u30c0\u5f0f\u3067\u306f\u578b\u3092\u66f8\u304b\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u5b9a\u7fa9\u3067\u304d\u305f\u304c\u3001\u5225\u500b\u306e\u95a2\u6570\u306b\u3059\u308b\u5834\u5408\u306e\u578b\u304c\u308f\u304b\u3089\u306a\u3044\u3002\nHaskell\u3063\u307d\u304f\u7c21\u5358\u306b\u66f8\u3051\u306a\u3044\u306e\u304b\u306a\uff1f\nnum_diff :: (Float -> Float) -> Float -> (Float -> Float)\n\nClosures\u306b\u306f\u623b\u308a\u5024\u306b\u4f7f\u3046\u5834\u5408\u306fBox\u4f7f\u3048\u3063\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001std::rc::Rc\u4f7f\u3048\u3070\nuse std::rc::Rc;\nfn num_diff(f: Rc<Fn(f64) -> f64>, dx: f64) -> Rc<Fn(f64) -> f64> {\n    Rc::new(move |x| (f(x + dx) - f(x)) / dx)\n}\n\nfn main() {\n    let mut x = -5.0;\n    let f = Rc::new(|x| x * (x - 1.0));\n    let df = num_diff(f.clone(), 1e-7);\n    let eps = 1e-6;\n    x = newton(&*f, &*df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n\n\u3063\u3066\u66f8\u3051\u308b\u3051\u3069\u3001\u3053\u308c\u3067\u3044\u3044\u306e\u304b\u306a\u3002\u3002\u3002\u3002\u3002\nRust\u3067\u6570\u5024\u8a08\u7b97\u3092\u884c\u3046\u7df4\u7fd2\u3068\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u4e00\u6b21\u5143\u306eNewton\u6cd5\u3092\u5b9f\u88c5\u3057\u3066\u307f\u3088\u3046\uff1a\n\n```math\nf(x) = 0\n```\n\n\u3092\u89e3\u304f\u305f\u3081\u306b\u6b21\u306e\u30a4\u30c6\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u884c\u3046\uff1a\n\n```math\nx_{n+1} = x_n - \\frac{f(x_n)}{f^\\prime(x_n)}\n```\n\n\u3053\u308c\u3092\u5b9f\u88c5\u3059\u308b\u306b\u306f\u95a2\u6570f\u3092\u4e0e\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u95a2\u6570\u3092\u95a2\u6570\u306b\u308f\u305f\u3059\u90e8\u5206\u306f[Closures](https://doc.rust-lang.org/book/closures.html)\u306e\u7ae0\u306b\u66f8\u3044\u3066\u3042\u308b\u3002\n\n```rust\nfn newton<T1, T2>(f: T1, df: T2, mut x: f64, eps: f64) -> f64\n    where T1: Fn(f64) -> f64,\n          T2: Fn(f64) -> f64\n{\n    let mut y = f(x);\n    while y.abs() > eps {\n        x -= y / df(x);\n        y = f(x);\n    }\n    x\n}\n```\n\n2\u3064\u306eclosure\u306f\u5225\u306e\u578b\u306b\u306a\u308b\u306e\u3067T1,T2\u306f\u5225\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u306b\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n\u95a2\u6570\u306e\u30dd\u30a4\u30f3\u30bf\u3067\u306a\u304f\u3001\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u578b\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u3002\n\n\u3068\u308a\u3048\u3042\u305a\u5fae\u5206\u306f\u81ea\u5206\u3067\u89e3\u6790\u7684\u306b\u3084\u308b\u3068\u3057\u3066\u4f7f\u3063\u3066\u307f\u3088\u3046\uff1a\n\n```rust\nfn main() {\n    let mut x = -5.0;\n    let f = |x| x * (x - 1.0);\n    let df = |x| 2.0*x - 1.0;\n    let eps = 1e-6;\n    x = newton(&f, &df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n```\n\n```\nResult = -7.324879859764758e-11\n```\n\n\u6700\u8fd1AST\u3092\u89e3\u6790\u3057\u3066\u81ea\u52d5\u7684\u306b\u5fae\u5206\u6f14\u7b97\u3092\u5b9f\u88c5\u3059\u308b\u81ea\u52d5\u5fae\u5206\u304c\u6d41\u884c\u3063\u3066\u308b\u3089\u3057\u3044\u304c\uff08\u8981\u51fa\u5c55\uff09\u3001\n\u305d\u3093\u306a\u9ad8\u5ea6\u306a\u4e8b\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u6570\u5024\u5fae\u5206\u3057\u3066\u307f\u3088\u3046\uff1a\n\n```rust\nfn main() {\n    let mut x = -5.0;\n    let dx = 1e-7;\n    let f = |x| x * (x - 1.0);\n    let df = |x| (f(x+dx)-f(x))/dx;\n    let eps = 1e-6;\n    x = newton(&f, &df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n```\n\n```\nResult = -7.238726858155113e-11\n```\n\n## \u8ab2\u984c\n\n```rust\nlet df = |x| (f(x+dx)-f(x))/dx;\n```\n\n\u306e\u90e8\u5206\u3092\n\n```rust\nlet df = num_diff(&f, dx);\n```\n\n\u306e\u3088\u3046\u306b\u66f8\u304d\u305f\u3044\u306e\u3060\u304c\u3001`num_diff`\u306e\u5b9a\u7fa9\u306e\u65b9\u6cd5\u304c\u308f\u304b\u3089\u306a\u304b\u3063\u305f\u3002\n\u30e9\u30e0\u30c0\u5f0f\u3067\u306f\u578b\u3092\u66f8\u304b\u306a\u304f\u3066\u826f\u3044\u306e\u3067\u5b9a\u7fa9\u3067\u304d\u305f\u304c\u3001\u5225\u500b\u306e\u95a2\u6570\u306b\u3059\u308b\u5834\u5408\u306e\u578b\u304c\u308f\u304b\u3089\u306a\u3044\u3002\nHaskell\u3063\u307d\u304f\u7c21\u5358\u306b\u66f8\u3051\u306a\u3044\u306e\u304b\u306a\uff1f\n\n```hs\nnum_diff :: (Float -> Float) -> Float -> (Float -> Float)\n```\n\n[Closures](https://doc.rust-lang.org/book/closures.html)\u306b\u306f\u623b\u308a\u5024\u306b\u4f7f\u3046\u5834\u5408\u306f`Box`\u4f7f\u3048\u3063\u3066\u66f8\u3044\u3066\u3044\u308b\u306e\u3067\u3001`std::rc::Rc`\u4f7f\u3048\u3070\n\n```rust\nuse std::rc::Rc;\nfn num_diff(f: Rc<Fn(f64) -> f64>, dx: f64) -> Rc<Fn(f64) -> f64> {\n    Rc::new(move |x| (f(x + dx) - f(x)) / dx)\n}\n\nfn main() {\n    let mut x = -5.0;\n    let f = Rc::new(|x| x * (x - 1.0));\n    let df = num_diff(f.clone(), 1e-7);\n    let eps = 1e-6;\n    x = newton(&*f, &*df, x, eps);\n    println!(\"Result = {:e}\", x);\n}\n```\n\n\u3063\u3066\u66f8\u3051\u308b\u3051\u3069\u3001\u3053\u308c\u3067\u3044\u3044\u306e\u304b\u306a\u3002\u3002\u3002\u3002\u3002\n", "tags": ["rust", "\u6570\u5024\u8a08\u7b97"]}