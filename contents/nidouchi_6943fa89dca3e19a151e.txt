{"context": " More than 1 year has passed since last update.\u554f\u984c\u306f\u3053\u3061\u3089\nhttps://codeiq.jp/ace/nabetani_takenori/q1058\n# -*- coding: utf-8 -*-\nCV = {\n  '\u65e5'=>24*60*60,'\u6642\u9593'=>60*60,'\u5206'=>60,'\u79d2'=>1,\n  'km'=>1000*100*10,'m'=>100*10,'cm'=>10,'mm'=>1,\n  'kg'=>1000000,'g'=>1000,'mg'=>1,\n}\n\ndef to_unit(s)\n  s.scan(/\\d+[^\\d]+/).inject(0) {|sum, e|\n    e =~ /(\\d+)(.+)/\n    sum += $1.to_i * CV[$2]\n  } * (s[0] == '-' ? -1 : 1)\nend\n\ndef solve(q)\n  l_sum, r_sum = q.split('=').map{|s|\n    s.scan(/[+-]?\\d+[^+-]+/).inject(0){|sum, e| sum += to_unit(e)}\n  }\n  x_pos = (q =~ /(-?)\u25a1([^+-=]+)/)\n  ret = x_pos < q.index('=') ? r_sum - l_sum : l_sum - r_sum\n  ret *= -1 if $1 == '-'\n  ret / CV[$2]\nend\n\nDATA.readlines.each do |line|\n  no,q1,q2 = line.strip.split(/\\s+/)\n  a1 = solve(q1)\n  a2 = solve(q2)\n  print no + \"\\t\" + a1.to_s + \"\\t\" + a2.to_s + \"\\t\"\n  puts a1 == a2 ? ' o' : ' x'\nend\n__END__\nT01 3m20cm-3m10cm-\u25a1mm=5mm \u25a1kg=95000g\nT02 2kg+500g+\u25a1g=3kg200g   \u25a1m=700000mm\nT03 12kg+1kg500g+\u25a1g=13kg700g  720000\u79d2=\u25a1\u6642\u9593\nT04 2\u6642\u959330\u5206-\u25a1\u6642\u9593=90\u5206    \u25a1km=1000m\nT05 1\u65e5-\u25a1\u5206=23\u6642\u959320\u5206   40000mm=\u25a1m\nT06 3\u65e5-\u25a1\u79d2-71\u6642\u959359\u520630\u79d2=7\u79d2 23000g=\u25a1kg\nT07 23\u6642\u959330\u5206+29\u5206+60\u79d2=\u25a1\u65e5    \u25a1km=1000m\nT08 1\u65e5+23\u6642\u959315\u5206+\u25a1\u5206+120\u79d2=2\u65e5   43000m=\u25a1km\nT09 1km-1m-1cm-1mm=\u25a1mm    \u25a1kg=998989000g\nT10 3m20cm-5cm2mm-20cm8mm+\u25a1cm=312cm   \u25a1km=18000m\nT11 1\u65e5-1\u6642\u9593-1\u5206-1\u79d2=\u25a1\u79d2   297860400\u79d2=\u25a1\u6642\u9593\nT12 1kg-1g=\u25a1g \u25a1\u65e5=23976\u6642\u9593\nT13 \u25a1\u65e5-1\u6642\u9593-1\u5206-1\u79d2=82739\u79d2   1000g=\u25a1kg\nT14 4km-3995m-480cm-\u25a1mm=20cm  \u25a1km=0m\nT15 12m30cm-7m43cm-45cm2mm-\u25a1mm=3m80cm 14832\u6642\u9593=\u25a1\u65e5\nT16 0m+\u25a1km=0mm    0g=\u25a1kg\nT17 24\u6642\u9593+\u25a1\u5206=1\u65e5    \u25a1\u65e5=0\u6642\u9593\nT18 4cm3mm+\u25a1km+5mm=48mm   0\u5206=\u25a1\u6642\u9593\nT19 \u25a1\u5206+24\u6642\u9593+7\u65e5+14\u520634\u79d2=777634\u79d2   \u25a1\u65e5=2053440\u5206\nT20 122\u65e5+20\u6642\u959335\u520624\u79d2=\u25a1\u79d2    10614924000g=\u25a1kg\nT21 240km-218987m-8780cm-77648mm=\u25a1mm  \u25a1\u65e5=500341248\u6642\u9593\nT22 120\u5206+46\u5206-\u25a1\u5206=1\u6642\u959319\u5206    720\u5206+9300\u5206-4800\u5206=\u25a1\u6642\u9593\nT23 100kg+32kg-36kg=\u25a1kg   296mg-100mg-\u25a1mg=100mg\nT24 533448650mm-\u25a1km-52122650mm=203326000mm    270840\u79d2+\u25a1\u6642\u9593+683832\u79d2=22\u65e515\u6642\u959311\u520612\u79d2\nT25 83m+\u25a1m+130m=626m  137km260m55cm2mm+377910000mm-\u25a1km=102km170m55cm2mm\nT26 1000kg+1000kg-1609kg=\u25a1kg  4\u6642\u9593+3\u6642\u959314\u5206-43\u5206=\u25a1\u5206\nT27 704kg720g-235kg-4kg720g=\u25a1kg   1425\u65e5-480\u65e5-480\u65e5=\u25a1\u65e5\nT28 24629793500mg+4359473400mg-12783kg266g900mg=\u25a1kg   \u25a1kg=16206000000mg\nT29 789m-250m-244m=\u25a1m 275210g+\u25a1kg+126380g=696590g\nT30 625cm-\u25a1cm-300cm=1m    219km100m+\u25a1km+153km=597100m\nT31 1564200g-498kg-404200g=\u25a1kg    331\u65e53\u6642\u959334\u5206+658\u65e520\u6642\u959358\u5206-\u25a1\u65e5=328\u65e532\u5206\nT32 219kg645g600mg-\u25a1kg=66kg645g600mg  148387424mm+\u25a1km=301387424mm\nT33 57m+10460cm+\u25a1m=32360cm    10cm+\u25a1mm=26cm2mm\nT34 1437\u65e53\u6642\u95939\u5206-\u25a1\u65e5-31733100\u79d2=7071840\u79d2    1157700\u5206+748680\u5206-\u25a1\u65e5=483660\u5206\nT35 4608816\u79d2+\u25a1\u65e5=67940016\u79d2   50cm+1000mm-\u25a1mm=76cm7mm\nT36 220kg300g+60kg355g-\u25a1kg=50655g \u25a1km+127km501m10cm=357501100mm\nT37 5088\u5206+4\u65e53\u6642\u9593-5508\u5206=\u25a1\u6642\u9593   137651880mg-28kg300g290mg-\u25a1kg=17kg351g590mg\nT38 72460m-\u25a1km=4km460m    18\u6642\u959314\u5206+2\u65e53\u6642\u959340\u5206+\u25a1\u6642\u9593=496440\u79d2\nT39 12000mg+28g-\u25a1g=0mg    98km125m71cm-3831300cm-1981271cm=\u25a1km\nT40 55220mm+389910mm+\u25a1m=1km25m13cm    1604904\u79d2+1957249\u79d2-\u25a1\u6642\u9593=17\u65e51\u6642\u959329\u520613\u79d2\n\n\u554f\u984c\u306f\u3053\u3061\u3089\nhttps://codeiq.jp/ace/nabetani_takenori/q1058\n\n```rb\n# -*- coding: utf-8 -*-\nCV = {\n  '\u65e5'=>24*60*60,'\u6642\u9593'=>60*60,'\u5206'=>60,'\u79d2'=>1,\n  'km'=>1000*100*10,'m'=>100*10,'cm'=>10,'mm'=>1,\n  'kg'=>1000000,'g'=>1000,'mg'=>1,\n}\n \ndef to_unit(s)\n  s.scan(/\\d+[^\\d]+/).inject(0) {|sum, e|\n    e =~ /(\\d+)(.+)/\n    sum += $1.to_i * CV[$2]\n  } * (s[0] == '-' ? -1 : 1)\nend\n\ndef solve(q)\n  l_sum, r_sum = q.split('=').map{|s|\n    s.scan(/[+-]?\\d+[^+-]+/).inject(0){|sum, e| sum += to_unit(e)}\n  }\n  x_pos = (q =~ /(-?)\u25a1([^+-=]+)/)\n  ret = x_pos < q.index('=') ? r_sum - l_sum : l_sum - r_sum\n  ret *= -1 if $1 == '-'\n  ret / CV[$2]\nend\n\nDATA.readlines.each do |line|\n  no,q1,q2 = line.strip.split(/\\s+/)\n  a1 = solve(q1)\n  a2 = solve(q2)\n  print no + \"\\t\" + a1.to_s + \"\\t\" + a2.to_s + \"\\t\"\n  puts a1 == a2 ? ' o' : ' x'\nend\n__END__\nT01\t3m20cm-3m10cm-\u25a1mm=5mm\t\u25a1kg=95000g\nT02\t2kg+500g+\u25a1g=3kg200g\t\u25a1m=700000mm\nT03\t12kg+1kg500g+\u25a1g=13kg700g\t720000\u79d2=\u25a1\u6642\u9593\nT04\t2\u6642\u959330\u5206-\u25a1\u6642\u9593=90\u5206\t\u25a1km=1000m\nT05\t1\u65e5-\u25a1\u5206=23\u6642\u959320\u5206\t40000mm=\u25a1m\nT06\t3\u65e5-\u25a1\u79d2-71\u6642\u959359\u520630\u79d2=7\u79d2\t23000g=\u25a1kg\nT07\t23\u6642\u959330\u5206+29\u5206+60\u79d2=\u25a1\u65e5\t\u25a1km=1000m\nT08\t1\u65e5+23\u6642\u959315\u5206+\u25a1\u5206+120\u79d2=2\u65e5\t43000m=\u25a1km\nT09\t1km-1m-1cm-1mm=\u25a1mm\t\u25a1kg=998989000g\nT10\t3m20cm-5cm2mm-20cm8mm+\u25a1cm=312cm\t\u25a1km=18000m\nT11\t1\u65e5-1\u6642\u9593-1\u5206-1\u79d2=\u25a1\u79d2\t297860400\u79d2=\u25a1\u6642\u9593\nT12\t1kg-1g=\u25a1g\t\u25a1\u65e5=23976\u6642\u9593\nT13\t\u25a1\u65e5-1\u6642\u9593-1\u5206-1\u79d2=82739\u79d2\t1000g=\u25a1kg\nT14\t4km-3995m-480cm-\u25a1mm=20cm\t\u25a1km=0m\nT15\t12m30cm-7m43cm-45cm2mm-\u25a1mm=3m80cm\t14832\u6642\u9593=\u25a1\u65e5\nT16\t0m+\u25a1km=0mm\t0g=\u25a1kg\nT17\t24\u6642\u9593+\u25a1\u5206=1\u65e5\t\u25a1\u65e5=0\u6642\u9593\nT18\t4cm3mm+\u25a1km+5mm=48mm\t0\u5206=\u25a1\u6642\u9593\nT19\t\u25a1\u5206+24\u6642\u9593+7\u65e5+14\u520634\u79d2=777634\u79d2\t\u25a1\u65e5=2053440\u5206\nT20\t122\u65e5+20\u6642\u959335\u520624\u79d2=\u25a1\u79d2\t10614924000g=\u25a1kg\nT21\t240km-218987m-8780cm-77648mm=\u25a1mm\t\u25a1\u65e5=500341248\u6642\u9593\nT22\t120\u5206+46\u5206-\u25a1\u5206=1\u6642\u959319\u5206\t720\u5206+9300\u5206-4800\u5206=\u25a1\u6642\u9593\nT23\t100kg+32kg-36kg=\u25a1kg\t296mg-100mg-\u25a1mg=100mg\nT24\t533448650mm-\u25a1km-52122650mm=203326000mm\t270840\u79d2+\u25a1\u6642\u9593+683832\u79d2=22\u65e515\u6642\u959311\u520612\u79d2\nT25\t83m+\u25a1m+130m=626m\t137km260m55cm2mm+377910000mm-\u25a1km=102km170m55cm2mm\nT26\t1000kg+1000kg-1609kg=\u25a1kg\t4\u6642\u9593+3\u6642\u959314\u5206-43\u5206=\u25a1\u5206\nT27\t704kg720g-235kg-4kg720g=\u25a1kg\t1425\u65e5-480\u65e5-480\u65e5=\u25a1\u65e5\nT28\t24629793500mg+4359473400mg-12783kg266g900mg=\u25a1kg\t\u25a1kg=16206000000mg\nT29\t789m-250m-244m=\u25a1m\t275210g+\u25a1kg+126380g=696590g\nT30\t625cm-\u25a1cm-300cm=1m\t219km100m+\u25a1km+153km=597100m\nT31\t1564200g-498kg-404200g=\u25a1kg\t331\u65e53\u6642\u959334\u5206+658\u65e520\u6642\u959358\u5206-\u25a1\u65e5=328\u65e532\u5206\nT32\t219kg645g600mg-\u25a1kg=66kg645g600mg\t148387424mm+\u25a1km=301387424mm\nT33\t57m+10460cm+\u25a1m=32360cm\t10cm+\u25a1mm=26cm2mm\nT34\t1437\u65e53\u6642\u95939\u5206-\u25a1\u65e5-31733100\u79d2=7071840\u79d2\t1157700\u5206+748680\u5206-\u25a1\u65e5=483660\u5206\nT35\t4608816\u79d2+\u25a1\u65e5=67940016\u79d2\t50cm+1000mm-\u25a1mm=76cm7mm\nT36\t220kg300g+60kg355g-\u25a1kg=50655g\t\u25a1km+127km501m10cm=357501100mm\nT37\t5088\u5206+4\u65e53\u6642\u9593-5508\u5206=\u25a1\u6642\u9593\t137651880mg-28kg300g290mg-\u25a1kg=17kg351g590mg\nT38\t72460m-\u25a1km=4km460m\t18\u6642\u959314\u5206+2\u65e53\u6642\u959340\u5206+\u25a1\u6642\u9593=496440\u79d2\nT39\t12000mg+28g-\u25a1g=0mg\t98km125m71cm-3831300cm-1981271cm=\u25a1km\nT40\t55220mm+389910mm+\u25a1m=1km25m13cm\t1604904\u79d2+1957249\u79d2-\u25a1\u6642\u9593=17\u65e51\u6642\u959329\u520613\u79d2\n```\n", "tags": ["codeiq", "Ruby"]}