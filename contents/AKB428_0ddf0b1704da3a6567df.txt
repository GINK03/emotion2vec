{"context": " More than 1 year has passed since last update.WEB+DB PRESS vol88&vol89\u306eElixir\u306e\u7d39\u4ecb\u304c\u8a00\u8a9e\u7d39\u4ecb\u306e\u6587\u7ae0\u3067\u3044\u307e\u3060\u304b\u3064\u3066\u306a\u3044\u307b\u3069\u306e\u308f\u304b\u308a\u6613\u3055\u3060\u3063\u305f\u306e\u3067\nElixir\u30c9\u7d20\u4eba\u304cElixir\u3068Phoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u3061\u3083\u3093\u3068\u516c\u958b\u3067\u304d\u308bREST API\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u3066\u307f\u308b\u307e\u3067\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u8aad\u3081\u3070\u305f\u3076\u3093\uff12\u6642\u9593\u3050\u3089\u3044\u3067\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u306eREST API\u30b5\u30fc\u30d0\u30fc\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\u30d5\u30eb\u7248\u306e\u30bd\u30fc\u30b9 - github\n\u5b9f\u969b\u306b\u4f5c\u6210\u3057\u305fAPI\u306e\u4ed5\u69d8\n\u653e\u6620\u4e2d\u306e\u30a2\u30cb\u30e1\u516c\u5f0f Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u5909\u52d5\u5c65\u6b74\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308bRESTful API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f\n\n\u4f5c\u6210\u30c6\u30fc\u30de\u8981\u4ef6\n\nElixir Phoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067REST API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308b\n\u4eca\u56de\u6271\u3046\u30c7\u30fc\u30bf\u306f\u7279\u5b9a\u5206\u91ce\u306eTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30b9\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u5c65\u6b74\u3068\u3059\u308b\nMySQL\u306b\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092REST API\u7d4c\u7531\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n\u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30b5\u30fc\u30d0\u30fc\u3068\u4ed5\u69d8\u3092\u516c\u958b\u3059\u308b\u305f\u3081\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u6ce8\u610f\u3059\u308b\n\n\n\u8a73\u7d30\u4ed5\u69d8\n\nCRUD\u306eR\u306e\u307f\u3092\u63d0\u4f9b\uff08\u66f4\u65b0\u306f\u3057\u306a\u3044\u3001\u30c6\u30fc\u30d6\u30eb\u66f4\u65b0\u306f\u30d0\u30c3\u30c1\u3067\u30b7\u30b9\u30c6\u30e0\u304c\u884c\u3046\u60f3\u5b9a\uff09\n\u6700\u7d42\u7684\u306bNginx\u3068\u9023\u643a\u3057\u3001\u30d5\u30ed\u30f3\u30c8\u306e\u5165\u308a\u53e3\u306fNginx\u306b\u3059\u308b\nRails\u304b\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u5b9a\u3057\u3001\u30c6\u30fc\u30d6\u30eb\u306fRails\u3067\u4f5c\u3089\u308c\u305f\u60f3\u5b9a\u3067\u4f5c\u6210\u3059\u308b\n\n\n\u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\nbases\u30c6\u30fc\u30d6\u30eb\u306eid\u3067\u5404\u30c6\u30fc\u30d6\u30eb\u3092\u7d10\u4ed8\u3051\u307e\u3059\n\n\n\n\u30c6\u30fc\u30d6\u30eb\n\u53d6\u308a\u6271\u3046\u30c7\u30fc\u30bf\n\n\n\n\nbases\n\u30a2\u30cb\u30e1\u4f5c\u54c1\u306e\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u3002\u4f5c\u54c1\u540d\u3084Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\n\n\ntwitter_statuses\nTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u73fe\u5728\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u6570\n\n\ntwitter_status_histories\nTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u6570\u306e\u5c65\u6b74\n\n\n\n\u8a73\u7d30\u306aDDL\u306f\u3053\u3061\u3089 shangrila-DDL\n\nAPI\u4ed5\u69d8\n\n\n\n\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\n\u5185\u5bb9\n\n\n\n\n/anime/v1/twitter/follower/status\ntwitter_statuses\u306e\u60c5\u5831\u3092JSON\u3067\u8fd4\u3059\n\n\n/anime/v1/twitter/follower/history\ntwitter_status_histories\u306e\u60c5\u5831\u3092JSON\u8fd4\u3059\n\n\n\n\u7c21\u5358\u3067\u3059\u306d\n\uff11\u30c6\u30fc\u30d6\u30eb\u306b\uff11\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u7d10\u3065\u304f\u5f62\u306b\u3057\u307e\u3059\n\nElixir\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\nOSX\nhomebrew install elixir\n\n\nLinux\nhttps://www.erlang-solutions.com/downloads/download-erlang-otp\n\u4e0a\u8a18\u306ePRM\u304b\u3089Erlang\u3092\u5165\u308c\u3066Elixir\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\ngit clone https://github.com/elixir-lang/elixir.git\ncd elixir/\ngit checkout v1.1.1\nmake clean test\n\nexport PATH=\"$PATH:/path/to/elixir/bin\"\n\nLinux\u306e\u5834\u5408\u306fdnf\u30b3\u30de\u30f3\u30c9\u3067\u5165\u308c\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nElixir\u304c\u5165\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u30c4\u30fc\u30eb\u306emix\u30b3\u30de\u30f3\u30c9\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\uff08ruby\u306ebundler\u76f8\u5f53\u306e\u30b3\u30de\u30f3\u30c9\uff09\n\n\u30a8\u30c7\u30a3\u30bf\n\nVim\nhttps://github.com/elixir-lang/vim-elixir\n\n\u305d\u306e\u4ed6\u3001github\u306eElixir\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30da\u30fc\u30b8\u306b\u306fEmacs\u3068Sublime Text\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\nAtom\n\nhttps://atom.io/packages/language-elixir\n\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\nmix\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\nmix phoenix.new sana_server_phoenix --database mysql --no-brunch\ncd sana_server_phoenix\nmix phoenix.server\n\nPhoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092PostgreSQL\u306b\u3057\u3066\u3044\u308b\u305f\u3081\nMySQL\u7528\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\nlocalhost:4000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u8d77\u52d5\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\nmix phoenix.server\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306f\u81ea\u52d5\u7684\u306b\u53cd\u6620\u3055\u308c\u308b\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3057\u3066\u53cd\u6620\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059(ruby rerun\u76f8\u5f53\u306e\u6a5f\u69cb\u304c\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u3044\u308b)\n\u305f\u3060\u3057\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7cfb\u306e\u66f4\u65b0\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u624b\u52d5\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002\nphoenix\u306emix \u30b3\u30e1\u30f3\u30c8\u30bf\u30b9\u30af\u4e00\u89a7\u306f\u4ee5\u4e0b\nhttp://www.phoenixframework.org/docs/mix-tasks\n\n\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6307\u5b9a\n\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u305f\u3081logger_file_backend\u3068\u65e5\u6642\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081timex\u3092\u8ffd\u52a0\u3057\u307e\u3059\nmix.exs\u306fruby\u3067\u3044\u3046\u3068\u3053\u308d\u306eGemfile\u3067\u3059\n\nmix.exs\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:mariaex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:timex, \"~> 0.9\"},\n     {:logger_file_backend, \"~> 0.0.5\"}]\n  end\n\n\n\u6b32\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u306fHex\u304b\u3089\u63a2\u3057\u307e\u3059\u3002\u4f46\u3057\u307e\u3060\u6570\u306f\u5c11\u306a\u3044\u3001\u767a\u5c55\u9014\u4e0a\u3002\nHex\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u96c6\u3081\u305f\u30b5\u30fc\u30d0\u30fc\u3067Rubygems\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u3002\n\n\u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\nmix deps.get\n\n\n\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u8a2d\u5b9a\nMySQL\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u8a2d\u5b9a\u3092\u8a18\u5165\u3057\u307e\u3059\n\nconfig/dev.exs\n# Configure your database\nconfig :sana_server_phoenix, SanaServerPhoenix.Repo,\n  adapter: Ecto.Adapters.MySQL,\n  username: \"root\",\n  password: \"\",\n  database: \"anime_admin_development\",\n  hostname: \"localhost\",\n  pool_size: 10\n\n\nconfig/prod.exs\u3084config/test.exs\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3057\u307e\u3059\n\n\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\nweb/router.ex \u306b\u3000\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\nweb/router.ex\n\n  scope \"/\", SanaServerPhoenix do\n    pipe_through :api\n    resources \"/anime/v1/twitter/follower/status\", TwitterFollowerStatusController, only: [:index]\n    resources \"/anime/v1/twitter/follower/history\", TwitterFollowerHistoryController, only: [:index]\n  end\n\n\n\n\u6ce8\u610f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306f[:index]\u3092\u8ffd\u52a0\u3059\u308b\u4e8b\u3067\u3059\u3002\n\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408CRUD\u306e\u5168\u3066\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u6709\u52b9\u5316\u3055\u308c\u308b\u306e\u3067\u4e00\u822c\u516c\u958b\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306f\u5371\u967a\u3067\u3059\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u305f\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u73fe\u5728\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3059\nsana_server_phoenix (master)$ mix phoenix.routes\n\n                    page_path  GET  /                                   SanaServerPhoenix.PageController :index\n twitter_follower_status_path  GET  /anime/v1/twitter/follower/status   SanaServerPhoenix.TwitterFollowerStatusController :index\ntwitter_follower_history_path  GET  /anime/v1/twitter/follower/history  SanaServerPhoenix.TwitterFollowerHistoryController :index\n\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5\n\ntwitter_follower_status_controller.ex\n\nweb/controllers/twitter_follower_status_controller.ex\ndefmodule SanaServerPhoenix.TwitterFollowerStatusController do\n  use SanaServerPhoenix.Web, :controller\n\n  def index(conn, _params) do\n\n    #GET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u5f97\n    account_list = String.split(_params[\"accounts\"],\",\")\n\n    #IN\u53e5\u306e\u30d7\u30ea\u30da\u30a2\u30fc\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f5c\u6210 \u5f15\u6570\u304c\uff15\u3060\u3063\u305f\u3089 [?, ?, ?, ?, ?] \n    prepared_statement_list = []\n    prepared_statement_list = Enum.map(account_list, fn(x) ->\n      prepared_statement_list = prepared_statement_list ++ [\"?\"]\n    end)\n\n    prepared_statement_in =  Enum.join(prepared_statement_list, \",\")\n\n    {:ok, twitter_status } = Ecto.Adapters.SQL.query(Repo,\n      \"SELECT b.twitter_account, follower, updated_at\n      from twitter_statuses, (\n       SELECT id, twitter_account FROM bases where twitter_account IN (#{prepared_statement_in})\n      ) b\n      where twitter_statuses.bases_id = b.id order by updated_at desc\", account_list)\n\n    dict = HashDict.new\n    dict = List.foldr(twitter_status[:rows], dict,\n    fn (x, acc) ->\n      [twitter_account, follower, updated_at] = x\n      check = HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n    end)\n\n    #\u5909\u6570dump\n    #IO.inspect dict\n\n    render conn, msg: dict\n  end\n\nend\n\n\n\n\n\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3059\u308b\u524d\u306b\u30b3\u30fc\u30c9\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n\n\u5b9f\u884c\u4f8b\ncurl http://localhost:4000/anime/v1/twitter/follower/status?accounts=usagi_anime,kinmosa_anime | jq .\n\naccounts\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306bTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u6e21\u3057\u307e\u3059\n\n\u5b9f\u884c\u7d50\u679c\n{\n  \"usagi_anime\": {\n    \"updated_at\": 1411466007,\n    \"follower\": 51345\n  },\n  \"kinmosa_anime\": {\n    \"updated_at\": 1432364961,\n    \"follower\": 57350\n  }\n}\n\n\n\u30b3\u30fc\u30c9\u89e3\u8aac\n  account_list = String.split(_params[\"accounts\"],\",\")\n\n\nGET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u53d6\u5f97\n_params[\"accounts\"]\u3067GET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3057\u3066\u914d\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\nEcto\u3067\u76f4\u63a5 \u751fSQL\u3092\u5b9f\u884c\u3059\u308b\nEcto\u306fPhoenix\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308bO/R\u30de\u30c3\u30d1\u30fc\nEcto.Adapters.SQL.query\u3067\u76f4\u63a5SQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n{:ok, SQL\u306e\u7d50\u679c } = Ecto.Adapters.SQL.query(Repo, \"SQL\u30af\u30a8\u30ea\", bind\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u914d\u5217)\n\n\u3061\u306a\u307f\u306bEcto\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306e\u6587\u7ae0\u30b5\u30f3\u30d7\u30eb\u304c\nEcto.Adapters.SQL.query(Repo, \"select * from from table where id = $1 and name = $2;\", [param1, param2])\n\n\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u6df7\u4e71\u3059\u308b\u304c\uff04\u3067\u306a\u304f\u666e\u901a\u306b\uff1f\u3092\u3064\u304b\u3063\u3066\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u6307\u5b9a\u3059\u308b\nEcto.Adapters.SQL.query(Repo, \"select * from from table where id = ? and name = ?;\", [param1, param2])\n\n\nSQL\u306e\u7d50\u679c\u3092\u52a0\u5de5\u3059\u308b\nSQL\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u914d\u5217\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\n\n\u3053\u306e\u914d\u5217\u3092twitter_account\u3092\u30ad\u30fc\u3068\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u69cb\u9020\u306b\u5909\u63db\u3057\u307e\u3059\n{\n  \"usagi_anime\": {\n    \"updated_at\": 1411466007,\n    \"follower\": 51345\n  },\n  \"kinmosa_anime\": {\n    \"updated_at\": 1432364961,\n    \"follower\": 57350\n  }\n}\n\n    dict = HashDict.new\n    dict = List.foldr(twitter_status[:rows], dict,\n    fn (x, acc) ->\n      [twitter_account, follower, updated_at] = x\n      check = HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n    end)\n\n\n HashDict.new\u3067\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\n twitter_status[:rows]\u3067SQL\u306e\u7d50\u679c\u3092\u683c\u7d0d\u3002twitter_status\u306b\u306fSQL\u69cb\u6587\u306a\u3069\u7d50\u679c\u4ee5\u5916\u306e\u60c5\u5831\u3082\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n List.foldr(twitter_status[:rows], dict, \u30fb\u30fb\u7b2c\u4e00\u5f15\u6570\u306bSQL\u7d50\u679c\u914d\u5217\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u683c\u7d0d\u5bfe\u8c61\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6307\u5b9a\n\n [twitter_account, follower, updated_at] = x\n\n\u3053\u308c\u306fElixir\u306e\u69cb\u6587\u3067\u53f3\u8fba\u306e\u5f0f\u3092\u5de6\u8fba\u306e\u5909\u6570\u306b\u5206\u89e3\u3059\u308b\n\n\u30cf\u30c3\u30b7\u30e5\u69cb\u9020\u306b\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\nHashDict.put(\u683c\u7d0d\u5148\u306e\u30cf\u30c3\u30b7\u30e5, \uff08\u8ffd\u52a0\u3059\u308b\uff09\u30cf\u30c3\u30b7\u30e5\u306e\u30ad\u30fc, \uff08\u8ffd\u52a0\u3059\u308b\uff09\u30cf\u30c3\u30b7\u30e5\u306e\u5024)\n\n HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u30cf\u30c3\u30b7\u30e5\u306b\u30c7\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002\n%{:A => B} \u306f\u30cf\u30c3\u30b7\u30e5\u3092\u8868\u3059\u3002\n\nElixir\u306e\u5909\u6570\u306f\u4e0d\u5909\ndict = List.foldr(twitter_status[:rows], dict,\ndict\u306b\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u306e\u306f\u3001Elixir\u306e\u5909\u6570\u304c\u4e0d\u5909\u306a\u305f\u3081HashDict.put\u3067\u30cf\u30c3\u30b7\u30e5\u3092\u8ffd\u52a0\u3057\u3066\u3082\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5909\u6570\u306f\u5024\u304c\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u3089\u3078\u3093\u306fElixir\u306eIO.inspect\u3092\u7528\u3044\u3066\u5909\u6570\u306e\u30c0\u30f3\u30d7\u3092\u8ffd\u3044\u304b\u3051\u308b\u3068\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\ntwitter_follower_history_controller.ex\n\nweb/controllers/twitter_follower_history_controller.ex\ndefmodule SanaServerPhoenix.TwitterFollowerHistoryController do\n  use SanaServerPhoenix.Web, :controller\n  require Logger\n\n  def index(conn, _params) do\n    response = []\n\n    #IO.inspect Logger.metadata()\n\n    account = _params[\"account\"]\n    param_end_date = _params[\"end_date\"]\n\n    #Elixir\u3067\u306fIF\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u884c\u3046\n    end_date = try do\n      case param_end_date do\n        nil -> DateUtil.now_format\n        _ -> UnixTime.convert_unixtime_to_date(String.to_integer(param_end_date))\n      end\n    rescue\n      e in ArgumentError -> e\n      #Exception.message\u3067\u4f8b\u5916\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n      Logger.warn \"error param end_date. \" <> Exception.message(e)\n      DateUtil.now_format\n    end\n\n    {:ok, twitter_status } = Ecto.Adapters.SQL.query(Repo,\n      \"SELECT h.follower, h.updated_at\n      from twitter_status_histories as h,\n      (SELECT id FROM bases WHERE twitter_account = ? order by id desc limit 1) b\n       where h.bases_id = b.id AND h.updated_at < ? order by h.updated_at desc limit ?\",\n       [account, end_date, 100])\n\n    response = List.foldr(twitter_status[:rows], response,\n    fn (x, acc) ->\n      [follower, updated_at] = x\n      response = [%{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)}] ++ acc\n    end)\n\n    render conn, msg: response\n  end\n\nend\n\n#http://michal.muskala.eu/2015/07/30/unix-timestamps-in-elixir.html\ndefmodule UnixTime do\n  #JST\u306a\u306e\u30679H\u306b\u3057\u3066\u304a\u304f\n  epoch = {{1970, 1, 1}, {9, 0, 0}}\n  @epoch :calendar.datetime_to_gregorian_seconds(epoch)\n\n  def convert_date_to_unixtime(created_at) do\n    {{year, month, day}, {hour, minute, second, msec}} = created_at\n    gs = :calendar.datetime_to_gregorian_seconds({{year, month, day}, {hour, minute, second}})\n    gs - @epoch\n  end\n\n  def convert_unixtime_to_date(timestamp) do\n    {:ok, date_string} =\n    timestamp\n      |> +(@epoch)\n      |> :calendar.gregorian_seconds_to_datetime\n      |> Timex.Date.from\n      |> Timex.DateFormat.format(\"%Y-%m-%d %H:%M:%S\", :strftime)\n    date_string\n  end\n\nend\n\ndefmodule DateUtil do\n  def now_format() do\n    {:ok, date_string} =\n      :erlang.localtime\n      |> Timex.Date.from\n      |> Timex.DateFormat.format(\"%Y-%m-%d %H:%M:%S\", :strftime)\n    date_string\n  end\nend\n\n\n\n\nview\u306e\u5b9f\u88c5\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u5bfe\u5fdc\u3059\u308bView\u30d5\u30a1\u30a4\u30eb\u3092\uff12\u3064\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u30c7\u30fc\u30bf\u52a0\u5de5\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092JSON\u306b\u3057\u3066\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067\u4e2d\u8eab\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\nweb/views/twitter_follower_status_view.ex\ndefmodule SanaServerPhoenix.TwitterFollowerStatusView do\n  use SanaServerPhoenix.Web, :view\n\n  def render(\"index.json\", %{msg: msg}) do\n   msg\n  end\n\nend\n\n\n\n\nweb/views/twitter_follower_history_view.ex\ndefmodule SanaServerPhoenix.TwitterFollowerHistoryView do\n  use SanaServerPhoenix.Web, :view\n\n  def render(\"index.json\", %{msg: msg}) do\n   msg\n  end\n\nend\n\n\n\n\n\u305d\u306e\u4ed6 \u30a2\u30c9\u30d0\u30f3\u30b9\n\n\u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u8d77\u52d5\nMIX_ENV=prod mix compile.protocols\nMIX_ENV=prod PORT=4000 mix phoenix.server\n\n\nNginx\u3068\u306e\u9023\u643a\nUNIX\u30bd\u30b1\u30c3\u30c8\u3067\u306a\u304f\u666e\u901a\u306bHTTP\u30d7\u30ed\u30ad\u30b7\u3057\u307e\u3059\n\nserver {\n      listen       80;\n      server_name api.moemoe.tokyo;\n      location /anime/v1/twitter/ {\n         proxy_pass http://localhost:4000;\n      }\n    }\n\n\n\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\n\u3053\u306e\u307e\u307e\u3060\u3068\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u304c\u6d41\u308c\u3063\u3071\u306a\u3057\u306b\u306a\u308b\u306e\u3067config\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\nconfig/config.exs\n# Configures Elixir's Logger\nconfig :logger, backends: [{LoggerFileBackend, :file}]\nconfig :logger, :file,\n  path: \"./log/sana_api_phoenix.log\",\n  format: \"$time $metadata[$level] $message\\n\",\n  metadata: [:request_id]\n\n\ntail -f ./log/sana_api_phoenix.log\n\n\n17:44:37.251 request_id=cgse5i65gge1u70cdf8flfsjbauo52d4 [info] Sent 200 in 90ms\n17:44:37.611 request_id=k43krmuoii9pi3vmvqjskdm22fnucpqf [info] GET /apple-touch-icon-precomposed.png\n17:44:37.692 request_id=i15kbm8qhjueesqeclro53mcm5jga2gl [info] GET /apple-touch-icon.png\n18:19:38.998 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [info] GET /anime/v1/twitter/follower/status\n18:19:38.999 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [debug] Processing by SanaServerPhoenix.TwitterFollowerStatusController.index/2\n  Parameters: %{\"accounts\" => \"usagi_anime,kinmosa_anime\"}\n  Pipelines: [:api]\n18:19:39.078 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [debug] SELECT b.twitter_account, follower, updated_at\n      from twitter_statuses, (\n       SELECT id, twitter_account FROM bases where twitter_account IN (?,?)\n      ) b\n      where twitter_statuses.bases_id = b.id order by updated_at desc [\"usagi_anime\", \"kinmosa_anime\"] OK query=8.5ms queue=60.0ms\n18:19:39.087 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [info] Sent 200 in 88ms\n\n\u74b0\u5883\u306b\u95a2\u4fc2\u306a\u304f\u30ed\u30b0\u3092\u6b8b\u3057\u305f\u3044\u306a\u3089config.exs\u3092\u7de8\u96c6\u3002\n\u300cdev\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u3067\u3001prod\u306f\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u305f\u3044\u300d\u306a\u3069\u74b0\u5883\u3054\u3068\u306b\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306e\u74b0\u5883\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u307e\u3068\u3081\n\nRuby\u3068Elixir\u306e\u6bd4\u8f03\u8868\n\n\n\nRuby\nElixir\n\u5f79\u5272\n\n\n\n\nbundler\nmix\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30c4\u30fc\u30eb\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u30c4\u30fc\u30eb\n\n\nGemfile\nmix.exs\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a18\u8ff0\n\n\nbundle install\nmix deps.get\n\u30e9\u30a4\u30d6\u30e9\u30ea \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n\nRubygems\nHex\n\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7ba1\u7406\u3059\u308b\u4e2d\u592e\u30b5\u30fc\u30d0\u30fc\n\n\nRails\nPhoenix\n\u30d5\u30eb\u30b9\u30bf\u30c3\u30af WEB\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\n\n\nrerun\nPhoenix\u306b\u6a19\u6e96\u642d\u8f09\n\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f4\u65b0\u3092\u81ea\u52d5\u7684\u306b\u53cd\u6620\n\n\nActive Record\nEcto\nO/R\u30de\u30c3\u30d1\u30fc\n\n\np\nIO.inspect\n\u5909\u6570\u306e\u30c0\u30f3\u30d7\u51fa\u529b\n\n\n\n\u4eca\u56de\u306fMySQL\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Elixir(BEAM VM)\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7279\u6027\u3092\u6d3b\u304b\u3059\u306b\u306fDB\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u306e\u3067memcached\u3092\u5165\u308c\u305f\u308a\u30a4\u30f3\u30e1\u30e2\u30eaDB\u306b\u7f6e\u304d\u63db\u3048\u308b\u306a\u3069\u306e\u5bfe\u7b56\u304c\u305d\u306e\u3046\u3061\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\nRails\u3084Rails\u30e9\u30a4\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u89e6\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u4eba\u306f\u3001Elixir\u3068\u3044\u3046\u8a00\u8a9e\u306e\u6587\u6cd5\u3092\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u96e3\u306a\u304fPhoenix\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u96e3\u6613\u5ea6\u3082Erlang\u306b\u6bd4\u3079\u305f\u3089\u9ad8\u304f\u306a\u304f\u3001\u30b9\u30e0\u30fc\u30ba\u306bRails\u304b\u3089\u4ee5\u964d\u3067\u304d\u308b\u306e\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u591a\u3059\u304e\u3066\u634c\u304d\u5207\u308c\u306a\u3044\u4e8b\u304c\u60f3\u5b9a\u3055\u308c\u308bAPI\u30b5\u30fc\u30d0\u30fc\u306f\u3001Elixir Phoenix\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u691c\u8a0e\u306b\u5165\u308c\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nWEB+DB PRESS vol88&vol89\u306eElixir\u306e\u7d39\u4ecb\u304c\u8a00\u8a9e\u7d39\u4ecb\u306e\u6587\u7ae0\u3067\u3044\u307e\u3060\u304b\u3064\u3066\u306a\u3044\u307b\u3069\u306e\u308f\u304b\u308a\u6613\u3055\u3060\u3063\u305f\u306e\u3067\nElixir\u30c9\u7d20\u4eba\u304cElixir\u3068Phoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u4f7f\u3063\u3066\u3061\u3083\u3093\u3068\u516c\u958b\u3067\u304d\u308bREST API\u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u3063\u3066\u307f\u308b\u307e\u3067\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\n\u3053\u308c\u3092\u8aad\u3081\u3070\u305f\u3076\u3093\uff12\u6642\u9593\u3050\u3089\u3044\u3067\u4efb\u610f\u306e\u30c7\u30fc\u30bf\u306eREST API\u30b5\u30fc\u30d0\u30fc\u304c\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n[\u30d5\u30eb\u7248\u306e\u30bd\u30fc\u30b9 - github](https://github.com/Project-ShangriLa/sana_server_phoenix/tree/v1.4.2-Release1.2)\n\n\u5b9f\u969b\u306b\u4f5c\u6210\u3057\u305fAPI\u306e\u4ed5\u69d8\n[\u653e\u6620\u4e2d\u306e\u30a2\u30cb\u30e1\u516c\u5f0f Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u5909\u52d5\u5c65\u6b74\u60c5\u5831\u3092\u63d0\u4f9b\u3059\u308bRESTful API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308a\u307e\u3057\u305f](http://qiita.com/AKB428/items/c12c70b16c924a45f73f)\n\n## \u4f5c\u6210\u30c6\u30fc\u30de\u8981\u4ef6\n- Elixir Phoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3067REST API \u30b5\u30fc\u30d0\u30fc\u3092\u4f5c\u308b\n- \u4eca\u56de\u6271\u3046\u30c7\u30fc\u30bf\u306f\u7279\u5b9a\u5206\u91ce\u306eTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u30ea\u30b9\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u5c65\u6b74\u3068\u3059\u308b\n- MySQL\u306b\u683c\u7d0d\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092REST API\u7d4c\u7531\u3067\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\n- \u30a4\u30f3\u30bf\u30fc\u30cd\u30c3\u30c8\u306b\u30b5\u30fc\u30d0\u30fc\u3068\u4ed5\u69d8\u3092\u516c\u958b\u3059\u308b\u305f\u3081\u30bb\u30ad\u30e5\u30ea\u30c6\u30a3\u306b\u6ce8\u610f\u3059\u308b\n\n \n## \u8a73\u7d30\u4ed5\u69d8\n- CRUD\u306eR\u306e\u307f\u3092\u63d0\u4f9b\uff08\u66f4\u65b0\u306f\u3057\u306a\u3044\u3001\u30c6\u30fc\u30d6\u30eb\u66f4\u65b0\u306f\u30d0\u30c3\u30c1\u3067\u30b7\u30b9\u30c6\u30e0\u304c\u884c\u3046\u60f3\u5b9a\uff09\n- \u6700\u7d42\u7684\u306bNginx\u3068\u9023\u643a\u3057\u3001\u30d5\u30ed\u30f3\u30c8\u306e\u5165\u308a\u53e3\u306fNginx\u306b\u3059\u308b\n- Rails\u304b\u3089\u306e\u30b7\u30b9\u30c6\u30e0\u30de\u30a4\u30b0\u30ec\u30fc\u30b7\u30e7\u30f3\u3092\u60f3\u5b9a\u3057\u3001\u30c6\u30fc\u30d6\u30eb\u306fRails\u3067\u4f5c\u3089\u308c\u305f\u60f3\u5b9a\u3067\u4f5c\u6210\u3059\u308b\n\n\n## \u30c6\u30fc\u30d6\u30eb\u69cb\u6210\n\n![SanaAPI\u3000DB.png](https://qiita-image-store.s3.amazonaws.com/0/36931/39f55f23-00ed-cb4e-5ec2-46aa63d7b777.png)\n\nbases\u30c6\u30fc\u30d6\u30eb\u306eid\u3067\u5404\u30c6\u30fc\u30d6\u30eb\u3092\u7d10\u4ed8\u3051\u307e\u3059\n\n|\u30c6\u30fc\u30d6\u30eb| \u53d6\u308a\u6271\u3046\u30c7\u30fc\u30bf|\n|----|----|\n|bases| \u30a2\u30cb\u30e1\u4f5c\u54c1\u306e\u30de\u30b9\u30bf\u30fc\u30c7\u30fc\u30bf\u3002\u4f5c\u54c1\u540d\u3084Twitter\u30a2\u30ab\u30a6\u30f3\u30c8|\n|twitter_statuses|Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u73fe\u5728\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u6570|\n|twitter_status_histories|Twitter\u30a2\u30ab\u30a6\u30f3\u30c8\u306e\u30d5\u30a9\u30ed\u30ef\u30fc\u6570\u306e\u5c65\u6b74|\n\n\n\n\u8a73\u7d30\u306aDDL\u306f\u3053\u3061\u3089 [shangrila-DDL](https://github.com/Project-ShangriLa/shangrila/tree/master/DDL)\n\n## API\u4ed5\u69d8\n\n|\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8|\u5185\u5bb9|\n|----|----|\n|/anime/v1/twitter/follower/status|twitter_statuses\u306e\u60c5\u5831\u3092JSON\u3067\u8fd4\u3059|\n|/anime/v1/twitter/follower/history|twitter_status_histories\u306e\u60c5\u5831\u3092JSON\u8fd4\u3059|\n\n\u7c21\u5358\u3067\u3059\u306d\n\uff11\u30c6\u30fc\u30d6\u30eb\u306b\uff11\u30a8\u30f3\u30c9\u30dd\u30a4\u30f3\u30c8\u304c\u7d10\u3065\u304f\u5f62\u306b\u3057\u307e\u3059\n\n## Elixir\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n### OSX\n\n```\nhomebrew install elixir\n```\n\n### Linux\n\nhttps://www.erlang-solutions.com/downloads/download-erlang-otp\n\u4e0a\u8a18\u306ePRM\u304b\u3089Erlang\u3092\u5165\u308c\u3066Elixir\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u307e\u3059\n\n```\ngit clone https://github.com/elixir-lang/elixir.git\ncd elixir/\ngit checkout v1.1.1\nmake clean test\n```\n\n```\nexport PATH=\"$PATH:/path/to/elixir/bin\"\n```\n\nLinux\u306e\u5834\u5408\u306fdnf\u30b3\u30de\u30f3\u30c9\u3067\u5165\u308c\u308b\u65b9\u6cd5\u3082\u3042\u308b\u3088\u3046\u3067\u3059\u3002\nElixir\u304c\u5165\u308b\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u30c4\u30fc\u30eb\u306emix\u30b3\u30de\u30f3\u30c9\u3082\u4f7f\u3048\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\uff08ruby\u306ebundler\u76f8\u5f53\u306e\u30b3\u30de\u30f3\u30c9\uff09\n\n## \u30a8\u30c7\u30a3\u30bf\n\n### Vim\n\nhttps://github.com/elixir-lang/vim-elixir\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-15 1.55.12.png](https://qiita-image-store.s3.amazonaws.com/0/36931/604433d7-f002-b59a-9ca8-14fc9f4c110f.png)\n\n\u305d\u306e\u4ed6\u3001github\u306eElixir\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30da\u30fc\u30b8\u306b\u306fEmacs\u3068Sublime Text\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u3042\u308a\u307e\u3059\u3002\n\n### Atom\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-15 1.55.23.png](https://qiita-image-store.s3.amazonaws.com/0/36931/7e04617e-d867-0321-a314-65af7adcd821.png)\n\nhttps://atom.io/packages/language-elixir\n\n\n## \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u4f5c\u6210\n\nmix\u30b3\u30de\u30f3\u30c9\u3067\u4f5c\u6210\n\n```\nmix phoenix.new sana_server_phoenix --database mysql --no-brunch\ncd sana_server_phoenix\nmix phoenix.server\n```\n\nPhoenix\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u3092PostgreSQL\u306b\u3057\u3066\u3044\u308b\u305f\u3081\nMySQL\u7528\u306b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3059\u308b\u5834\u5408\u306f\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nlocalhost:4000\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u8d77\u52d5\u304c\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-11-14 17.44.40.png](https://qiita-image-store.s3.amazonaws.com/0/36931/8e762fb1-cebe-9a2c-bef8-12fb600c5ca9.png)\n\nmix phoenix.server\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u8d77\u52d5\u3057\u307e\u3059\u3002\n\u30b3\u30fc\u30c9\u306e\u5909\u66f4\u306f\u81ea\u52d5\u7684\u306b\u53cd\u6620\u3055\u308c\u308b\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f4\u65b0\u3057\u3066\u53cd\u6620\u3059\u308b\u5fc5\u8981\u306f\u306a\u3044\u3067\u3059(ruby rerun\u76f8\u5f53\u306e\u6a5f\u69cb\u304c\u6700\u521d\u304b\u3089\u5165\u3063\u3066\u3044\u308b)\n\u305f\u3060\u3057\u3001\u8a2d\u5b9a\u30d5\u30a1\u30a4\u30eb\u7cfb\u306e\u66f4\u65b0\u306f\u53cd\u6620\u3055\u308c\u306a\u3044\u306e\u3067\u3001\u624b\u52d5\u66f4\u65b0\u304c\u5fc5\u8981\u3067\u3059\u3002\n\nphoenix\u306emix \u30b3\u30e1\u30f3\u30c8\u30bf\u30b9\u30af\u4e00\u89a7\u306f\u4ee5\u4e0b\nhttp://www.phoenixframework.org/docs/mix-tasks\n\n\n\n## \u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u6307\u5b9a\n\n\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u3092\u6271\u3046\u305f\u3081**logger_file_backend**\u3068\u65e5\u6642\u306e\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3092\u6307\u5b9a\u3059\u308b\u305f\u3081**timex**\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\nmix.exs\u306fruby\u3067\u3044\u3046\u3068\u3053\u308d\u306eGemfile\u3067\u3059\n\n\n```ex:mix.exs\n  defp deps do\n    [{:phoenix, \"~> 1.0.3\"},\n     {:phoenix_ecto, \"~> 1.1\"},\n     {:mariaex, \">= 0.0.0\"},\n     {:phoenix_html, \"~> 2.1\"},\n     {:phoenix_live_reload, \"~> 1.0\", only: :dev},\n     {:cowboy, \"~> 1.0\"},\n     {:timex, \"~> 0.9\"},\n     {:logger_file_backend, \"~> 0.0.5\"}]\n  end\n```\n\n\u6b32\u3057\u3044\u30e2\u30b8\u30e5\u30fc\u30eb\u306f[Hex](https://hex.pm/)\u304b\u3089\u63a2\u3057\u307e\u3059\u3002\u4f46\u3057\u307e\u3060\u6570\u306f\u5c11\u306a\u3044\u3001\u767a\u5c55\u9014\u4e0a\u3002\nHex\u306f\u30e2\u30b8\u30e5\u30fc\u30eb\u3092\u96c6\u3081\u305f\u30b5\u30fc\u30d0\u30fc\u3067[Rubygems](https://rubygems.org/)\u306e\u3088\u3046\u306a\u30b5\u30a4\u30c8\u3002\n\n### \u4f9d\u5b58\u3059\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\n\n```\nmix deps.get\n```\n\n\n## \u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u8a2d\u5b9a\n\nMySQL\u30b5\u30fc\u30d0\u30fc\u3078\u306e\u63a5\u7d9a\u8a2d\u5b9a\u3092\u8a18\u5165\u3057\u307e\u3059\n\n```ex:config/dev.exs\n# Configure your database\nconfig :sana_server_phoenix, SanaServerPhoenix.Repo,\n  adapter: Ecto.Adapters.MySQL,\n  username: \"root\",\n  password: \"\",\n  database: \"anime_admin_development\",\n  hostname: \"localhost\",\n  pool_size: 10\n```\n\nconfig/prod.exs\u3084config/test.exs\u3082\u5fc5\u8981\u306b\u5fdc\u3058\u3066\u8a2d\u5b9a\u3057\u307e\u3059\n\n\n\n## \u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306e\u8a2d\u5b9a\n\nweb/router.ex \u306b\u3000\u4ee5\u4e0b\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n```ex:web/router.ex\n\n  scope \"/\", SanaServerPhoenix do\n    pipe_through :api\n    resources \"/anime/v1/twitter/follower/status\", TwitterFollowerStatusController, only: [:index]\n    resources \"/anime/v1/twitter/follower/history\", TwitterFollowerHistoryController, only: [:index]\n  end\n\n```\n\n\u6ce8\u610f\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u306e\u306f[:index]\u3092\u8ffd\u52a0\u3059\u308b\u4e8b\u3067\u3059\u3002\n\u6307\u5b9a\u3057\u306a\u3044\u5834\u5408CRUD\u306e\u5168\u3066\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u304c\u6709\u52b9\u5316\u3055\u308c\u308b\u306e\u3067\u4e00\u822c\u516c\u958b\u3059\u308b\u30b5\u30fc\u30d0\u30fc\u306f\u5371\u967a\u3067\u3059\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3092\u5b9f\u88c5\u3057\u305f\u5f8c\u306b\u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u3067\u73fe\u5728\u306e\u30eb\u30fc\u30c6\u30a3\u30f3\u30b0\u306f\u78ba\u8a8d\u3067\u304d\u307e\u3059\n\n```\nsana_server_phoenix (master)$ mix phoenix.routes\n```\n\n```\n                    page_path  GET  /                                   SanaServerPhoenix.PageController :index\n twitter_follower_status_path  GET  /anime/v1/twitter/follower/status   SanaServerPhoenix.TwitterFollowerStatusController :index\ntwitter_follower_history_path  GET  /anime/v1/twitter/follower/history  SanaServerPhoenix.TwitterFollowerHistoryController :index\n```\n\n\n## \u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306e\u5b9f\u88c5\n\n### twitter_follower_status_controller.ex\n\n```ex:web/controllers/twitter_follower_status_controller.ex\ndefmodule SanaServerPhoenix.TwitterFollowerStatusController do\n  use SanaServerPhoenix.Web, :controller\n\n  def index(conn, _params) do\n\n    #GET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u5f97\n    account_list = String.split(_params[\"accounts\"],\",\")\n\n    #IN\u53e5\u306e\u30d7\u30ea\u30da\u30a2\u30fc\u30c9\u30b9\u30c6\u30fc\u30c8\u30e1\u30f3\u30c8\u3092\u4f5c\u6210 \u5f15\u6570\u304c\uff15\u3060\u3063\u305f\u3089 [?, ?, ?, ?, ?] \n    prepared_statement_list = []\n    prepared_statement_list = Enum.map(account_list, fn(x) ->\n      prepared_statement_list = prepared_statement_list ++ [\"?\"]\n    end)\n\n    prepared_statement_in =  Enum.join(prepared_statement_list, \",\")\n\n    {:ok, twitter_status } = Ecto.Adapters.SQL.query(Repo,\n      \"SELECT b.twitter_account, follower, updated_at\n      from twitter_statuses, (\n       SELECT id, twitter_account FROM bases where twitter_account IN (#{prepared_statement_in})\n      ) b\n      where twitter_statuses.bases_id = b.id order by updated_at desc\", account_list)\n\n    dict = HashDict.new\n    dict = List.foldr(twitter_status[:rows], dict,\n    fn (x, acc) ->\n      [twitter_account, follower, updated_at] = x\n      check = HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n    end)\n\n    #\u5909\u6570dump\n    #IO.inspect dict\n\n    render conn, msg: dict\n  end\n\nend\n\n\n```\n\n\u30b3\u30fc\u30c9\u3092\u89e3\u8aac\u3059\u308b\u524d\u306b\u30b3\u30fc\u30c9\u3092\u7406\u89e3\u3057\u3084\u3059\u3044\u3088\u3046\u306b\u5b9f\u884c\u3057\u3066\u307f\u307e\u3059\n\n### \u5b9f\u884c\u4f8b\n\n```\ncurl http://localhost:4000/anime/v1/twitter/follower/status?accounts=usagi_anime,kinmosa_anime | jq .\n```\n\naccounts\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306bTwitter\u30a2\u30ab\u30a6\u30f3\u30c8\u3092\u30ab\u30f3\u30de\u533a\u5207\u308a\u3067\u6e21\u3057\u307e\u3059\n\n### \u5b9f\u884c\u7d50\u679c\n\n```\n{\n  \"usagi_anime\": {\n    \"updated_at\": 1411466007,\n    \"follower\": 51345\n  },\n  \"kinmosa_anime\": {\n    \"updated_at\": 1432364961,\n    \"follower\": 57350\n  }\n}\n```\n\n### \u30b3\u30fc\u30c9\u89e3\u8aac\n\n```ex\n  account_list = String.split(_params[\"accounts\"],\",\")\n```\n\n#### GET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u53d6\u5f97\n\n_params[\"accounts\"]\u3067GET\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\u3053\u3053\u3067\u306f\u30ab\u30f3\u30de\u533a\u5207\u308a\u306b\u3057\u3066\u914d\u5217\u3092\u751f\u6210\u3057\u3066\u3044\u307e\u3059\u3002\n\n#### Ecto\u3067\u76f4\u63a5 \u751fSQL\u3092\u5b9f\u884c\u3059\u308b\n\nEcto\u306fPhoenix\u306b\u7528\u610f\u3055\u308c\u3066\u3044\u308bO/R\u30de\u30c3\u30d1\u30fc\nEcto.Adapters.SQL.query\u3067\u76f4\u63a5SQL\u3092\u5b9f\u884c\u3067\u304d\u308b\u3002\n\n```\n{:ok, SQL\u306e\u7d50\u679c } = Ecto.Adapters.SQL.query(Repo, \"SQL\u30af\u30a8\u30ea\", bind\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u306e\u914d\u5217)\n```\n\n\u3061\u306a\u307f\u306bEcto\u306e\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u4f7f\u3044\u305f\u3044\u5834\u5408\u306e\u6587\u7ae0\u30b5\u30f3\u30d7\u30eb\u304c\n\n```\nEcto.Adapters.SQL.query(Repo, \"select * from from table where id = $1 and name = $2;\", [param1, param2])\n```\n\n\u307f\u305f\u3044\u306b\u306a\u3063\u3066\u6df7\u4e71\u3059\u308b\u304c\uff04\u3067\u306a\u304f\u666e\u901a\u306b\uff1f\u3092\u3064\u304b\u3063\u3066\u30d0\u30a4\u30f3\u30c9\u30d1\u30e9\u30e1\u30fc\u30bf\u30fc\u3092\u6307\u5b9a\u3059\u308b\n\n```\nEcto.Adapters.SQL.query(Repo, \"select * from from table where id = ? and name = ?;\", [param1, param2])\n```\n\n#### SQL\u306e\u7d50\u679c\u3092\u52a0\u5de5\u3059\u308b\n\nSQL\u306e\u7d50\u679c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u914d\u5217\u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\n\n![SanaDB2.png](https://qiita-image-store.s3.amazonaws.com/0/36931/d1a26ba6-a8d5-347b-edb8-06068d045c25.png)\n\n\u3053\u306e\u914d\u5217\u3092twitter_account\u3092\u30ad\u30fc\u3068\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u69cb\u9020\u306b\u5909\u63db\u3057\u307e\u3059\n\n```json\n{\n  \"usagi_anime\": {\n    \"updated_at\": 1411466007,\n    \"follower\": 51345\n  },\n  \"kinmosa_anime\": {\n    \"updated_at\": 1432364961,\n    \"follower\": 57350\n  }\n}\n```\n\n\n\n```ex\n    dict = HashDict.new\n    dict = List.foldr(twitter_status[:rows], dict,\n    fn (x, acc) ->\n      [twitter_account, follower, updated_at] = x\n      check = HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n    end)\n```\n\n-  HashDict.new\u3067\u30cf\u30c3\u30b7\u30e5\u3092\u4f5c\u6210\n-  twitter_status[:rows]\u3067SQL\u306e\u7d50\u679c\u3092\u683c\u7d0d\u3002twitter_status\u306b\u306fSQL\u69cb\u6587\u306a\u3069\u7d50\u679c\u4ee5\u5916\u306e\u60c5\u5831\u3082\u304c\u683c\u7d0d\u3055\u308c\u3066\u3044\u308b\n-  ``List.foldr(twitter_status[:rows], dict,`` \u30fb\u30fb\u7b2c\u4e00\u5f15\u6570\u306bSQL\u7d50\u679c\u914d\u5217\u3001\u7b2c\u4e8c\u5f15\u6570\u306b\u683c\u7d0d\u5bfe\u8c61\u306e\u30cf\u30c3\u30b7\u30e5\u3092\u6307\u5b9a\n\n\n```ex\n [twitter_account, follower, updated_at] = x\n```\n\n\u3053\u308c\u306fElixir\u306e\u69cb\u6587\u3067\u53f3\u8fba\u306e\u5f0f\u3092\u5de6\u8fba\u306e\u5909\u6570\u306b\u5206\u89e3\u3059\u308b\n\n\n##### \u30cf\u30c3\u30b7\u30e5\u69cb\u9020\u306b\u30c7\u30fc\u30bf\u3092\u8ffd\u52a0\n\n```\nHashDict.put(\u683c\u7d0d\u5148\u306e\u30cf\u30c3\u30b7\u30e5, \uff08\u8ffd\u52a0\u3059\u308b\uff09\u30cf\u30c3\u30b7\u30e5\u306e\u30ad\u30fc, \uff08\u8ffd\u52a0\u3059\u308b\uff09\u30cf\u30c3\u30b7\u30e5\u306e\u5024)\n```\n\n```ex\n HashDict.put(acc, twitter_account, %{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)})\n```\n\u3053\u306e\u30b3\u30fc\u30c9\u3067\u30cf\u30c3\u30b7\u30e5\u306b\u30c7\u30fc\u30bf\u304c\u8ffd\u52a0\u3055\u308c\u308b\u3002\n%{:A => B} \u306f\u30cf\u30c3\u30b7\u30e5\u3092\u8868\u3059\u3002\n\n\n##### Elixir\u306e\u5909\u6570\u306f\u4e0d\u5909\n\n``` dict = List.foldr(twitter_status[:rows], dict, ```\n\ndict\u306b\u5024\u3092\u8fd4\u3057\u3066\u3044\u308b\u306e\u306f\u3001Elixir\u306e\u5909\u6570\u304c\u4e0d\u5909\u306a\u305f\u3081HashDict.put\u3067\u30cf\u30c3\u30b7\u30e5\u3092\u8ffd\u52a0\u3057\u3066\u3082\u30aa\u30ea\u30b8\u30ca\u30eb\u306e\u5909\u6570\u306f\u5024\u304c\u5909\u66f4\u3055\u308c\u307e\u305b\u3093\u3002\n\u3053\u3053\u3089\u3078\u3093\u306fElixir\u306e``IO.inspect``\u3092\u7528\u3044\u3066\u5909\u6570\u306e\u30c0\u30f3\u30d7\u3092\u8ffd\u3044\u304b\u3051\u308b\u3068\u7406\u89e3\u3057\u3084\u3059\u3044\u3067\u3057\u3087\u3046\u3002\n\n\n### twitter_follower_history_controller.ex\n\n```ex:web/controllers/twitter_follower_history_controller.ex\ndefmodule SanaServerPhoenix.TwitterFollowerHistoryController do\n  use SanaServerPhoenix.Web, :controller\n  require Logger\n\n  def index(conn, _params) do\n    response = []\n\n    #IO.inspect Logger.metadata()\n\n    account = _params[\"account\"]\n    param_end_date = _params[\"end_date\"]\n\n    #Elixir\u3067\u306fIF\u3092\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u3067\u884c\u3046\n    end_date = try do\n      case param_end_date do\n        nil -> DateUtil.now_format\n        _ -> UnixTime.convert_unixtime_to_date(String.to_integer(param_end_date))\n      end\n    rescue\n      e in ArgumentError -> e\n      #Exception.message\u3067\u4f8b\u5916\u30e1\u30c3\u30bb\u30fc\u30b8\u3092\u53d6\u5f97\n      Logger.warn \"error param end_date. \" <> Exception.message(e)\n      DateUtil.now_format\n    end\n\n    {:ok, twitter_status } = Ecto.Adapters.SQL.query(Repo,\n      \"SELECT h.follower, h.updated_at\n      from twitter_status_histories as h,\n      (SELECT id FROM bases WHERE twitter_account = ? order by id desc limit 1) b\n       where h.bases_id = b.id AND h.updated_at < ? order by h.updated_at desc limit ?\",\n       [account, end_date, 100])\n\n    response = List.foldr(twitter_status[:rows], response,\n    fn (x, acc) ->\n      [follower, updated_at] = x\n      response = [%{:follower => follower, :updated_at => UnixTime.convert_date_to_unixtime(updated_at)}] ++ acc\n    end)\n\n    render conn, msg: response\n  end\n\nend\n\n#http://michal.muskala.eu/2015/07/30/unix-timestamps-in-elixir.html\ndefmodule UnixTime do\n  #JST\u306a\u306e\u30679H\u306b\u3057\u3066\u304a\u304f\n  epoch = {{1970, 1, 1}, {9, 0, 0}}\n  @epoch :calendar.datetime_to_gregorian_seconds(epoch)\n\n  def convert_date_to_unixtime(created_at) do\n    {{year, month, day}, {hour, minute, second, msec}} = created_at\n    gs = :calendar.datetime_to_gregorian_seconds({{year, month, day}, {hour, minute, second}})\n    gs - @epoch\n  end\n\n  def convert_unixtime_to_date(timestamp) do\n    {:ok, date_string} =\n    timestamp\n      |> +(@epoch)\n      |> :calendar.gregorian_seconds_to_datetime\n      |> Timex.Date.from\n      |> Timex.DateFormat.format(\"%Y-%m-%d %H:%M:%S\", :strftime)\n    date_string\n  end\n\nend\n\ndefmodule DateUtil do\n  def now_format() do\n    {:ok, date_string} =\n      :erlang.localtime\n      |> Timex.Date.from\n      |> Timex.DateFormat.format(\"%Y-%m-%d %H:%M:%S\", :strftime)\n    date_string\n  end\nend\n\n```\n\n\n## view\u306e\u5b9f\u88c5\n\n\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u306b\u5bfe\u5fdc\u3059\u308bView\u30d5\u30a1\u30a4\u30eb\u3092\uff12\u3064\u7528\u610f\u3057\u307e\u3059\u3002\n\u4eca\u56de\u306f\u30b3\u30f3\u30c8\u30ed\u30fc\u30e9\u30fc\u3067\u30c7\u30fc\u30bf\u52a0\u5de5\u3055\u308c\u305f\u30c7\u30fc\u30bf\u3092JSON\u306b\u3057\u3066\u8fd4\u3059\u3060\u3051\u306a\u306e\u3067\u4e2d\u8eab\u306f\u307b\u3068\u3093\u3069\u3042\u308a\u307e\u305b\u3093\u3002\n\n\n``` web/views/twitter_follower_status_view.ex\ndefmodule SanaServerPhoenix.TwitterFollowerStatusView do\n  use SanaServerPhoenix.Web, :view\n\n  def render(\"index.json\", %{msg: msg}) do\n   msg\n  end\n\nend\n\n```\n\n``` web/views/twitter_follower_history_view.ex \ndefmodule SanaServerPhoenix.TwitterFollowerHistoryView do\n  use SanaServerPhoenix.Web, :view\n\n  def render(\"index.json\", %{msg: msg}) do\n   msg\n  end\n\nend\n\n```\n\n## \u305d\u306e\u4ed6 \u30a2\u30c9\u30d0\u30f3\u30b9\n\n### \u30d7\u30ed\u30c0\u30af\u30b7\u30e7\u30f3\u8d77\u52d5\n\n```\nMIX_ENV=prod mix compile.protocols\nMIX_ENV=prod PORT=4000 mix phoenix.server\n```\n\n### Nginx\u3068\u306e\u9023\u643a\n\nUNIX\u30bd\u30b1\u30c3\u30c8\u3067\u306a\u304f\u666e\u901a\u306bHTTP\u30d7\u30ed\u30ad\u30b7\u3057\u307e\u3059\n\n```nginx\n\nserver {\n      listen       80;\n      server_name api.moemoe.tokyo;\n      location /anime/v1/twitter/ {\n         proxy_pass http://localhost:4000;\n      }\n    }\n```\n\n\n### \u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306e\u8a2d\u5b9a\n\n\u3053\u306e\u307e\u307e\u3060\u3068\u30b3\u30f3\u30bd\u30fc\u30eb\u306b\u30ed\u30b0\u304c\u6d41\u308c\u3063\u3071\u306a\u3057\u306b\u306a\u308b\u306e\u3067config\u306b\u8a2d\u5b9a\u3092\u8ffd\u52a0\u3057\u307e\u3059\n\n```config/config.exs\n# Configures Elixir's Logger\nconfig :logger, backends: [{LoggerFileBackend, :file}]\nconfig :logger, :file,\n  path: \"./log/sana_api_phoenix.log\",\n  format: \"$time $metadata[$level] $message\\n\",\n  metadata: [:request_id]\n```\n\n```\ntail -f ./log/sana_api_phoenix.log\n\n\n17:44:37.251 request_id=cgse5i65gge1u70cdf8flfsjbauo52d4 [info] Sent 200 in 90ms\n17:44:37.611 request_id=k43krmuoii9pi3vmvqjskdm22fnucpqf [info] GET /apple-touch-icon-precomposed.png\n17:44:37.692 request_id=i15kbm8qhjueesqeclro53mcm5jga2gl [info] GET /apple-touch-icon.png\n18:19:38.998 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [info] GET /anime/v1/twitter/follower/status\n18:19:38.999 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [debug] Processing by SanaServerPhoenix.TwitterFollowerStatusController.index/2\n  Parameters: %{\"accounts\" => \"usagi_anime,kinmosa_anime\"}\n  Pipelines: [:api]\n18:19:39.078 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [debug] SELECT b.twitter_account, follower, updated_at\n      from twitter_statuses, (\n       SELECT id, twitter_account FROM bases where twitter_account IN (?,?)\n      ) b\n      where twitter_statuses.bases_id = b.id order by updated_at desc [\"usagi_anime\", \"kinmosa_anime\"] OK query=8.5ms queue=60.0ms\n18:19:39.087 request_id=k11tmlh81emuadp1cah2e26aenfrpm72 [info] Sent 200 in 88ms\n```\n\n\u74b0\u5883\u306b\u95a2\u4fc2\u306a\u304f\u30ed\u30b0\u3092\u6b8b\u3057\u305f\u3044\u306a\u3089config.exs\u3092\u7de8\u96c6\u3002\n\u300cdev\u306f\u30b3\u30f3\u30bd\u30fc\u30eb\u30ed\u30b0\u3067\u3001prod\u306f\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u306b\u3057\u305f\u3044\u300d\u306a\u3069\u74b0\u5883\u3054\u3068\u306b\u5206\u3051\u305f\u3044\u5834\u5408\u306f\u305d\u308c\u305e\u308c\u306e\u74b0\u5883\u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n## \u307e\u3068\u3081\n\n### Ruby\u3068Elixir\u306e\u6bd4\u8f03\u8868\n\n|Ruby|Elixir|\u5f79\u5272|\n|---|----|---|\n|bundler|mix|\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u7ba1\u7406\u30c4\u30fc\u30eb\u3001\u30e9\u30a4\u30d6\u30e9\u30ea\u4f9d\u5b58\u30c4\u30fc\u30eb|\n|Gemfile|mix.exs|\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u5fc5\u8981\u306a\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u8a18\u8ff0|\n|bundle install|mix deps.get|\u30e9\u30a4\u30d6\u30e9\u30ea \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9|\n|Rubygems|Hex|\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u7ba1\u7406\u3059\u308b\u4e2d\u592e\u30b5\u30fc\u30d0\u30fc|\n|Rails|Phoenix|\u30d5\u30eb\u30b9\u30bf\u30c3\u30af WEB\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af|\n|rerun|Phoenix\u306b\u6a19\u6e96\u642d\u8f09|\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u66f4\u65b0\u3092\u81ea\u52d5\u7684\u306b\u53cd\u6620|\n|Active Record|Ecto|O/R\u30de\u30c3\u30d1\u30fc|\n|p|IO.inspect|\u5909\u6570\u306e\u30c0\u30f3\u30d7\u51fa\u529b|\n\n\u4eca\u56de\u306fMySQL\u3092\u4f7f\u3044\u307e\u3057\u305f\u304c\u3001Elixir(BEAM VM)\u306e\u30d1\u30d5\u30a9\u30fc\u30de\u30f3\u30b9\u7279\u6027\u3092\u6d3b\u304b\u3059\u306b\u306fDB\u304c\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u306b\u306a\u308b\u306e\u3067memcached\u3092\u5165\u308c\u305f\u308a\u30a4\u30f3\u30e1\u30e2\u30eaDB\u306b\u7f6e\u304d\u63db\u3048\u308b\u306a\u3069\u306e\u5bfe\u7b56\u304c\u305d\u306e\u3046\u3061\u5fc5\u8981\u3067\u3057\u3087\u3046\u3002\n\nRails\u3084Rails\u30e9\u30a4\u30af\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3092\u89e6\u3063\u305f\u3053\u3068\u304c\u3042\u308b\u4eba\u306f\u3001Elixir\u3068\u3044\u3046\u8a00\u8a9e\u306e\u6587\u6cd5\u3092\u3042\u308b\u7a0b\u5ea6\u7406\u89e3\u3067\u304d\u308c\u3070\u3001\u96e3\u306a\u304fPhoenix\u3067\u30b5\u30fc\u30d0\u30fc\u304c\u69cb\u7bc9\u3067\u304d\u307e\u3059\u3002\n\u30b3\u30fc\u30c7\u30a3\u30f3\u30b0\u306e\u96e3\u6613\u5ea6\u3082Erlang\u306b\u6bd4\u3079\u305f\u3089\u9ad8\u304f\u306a\u304f\u3001\u30b9\u30e0\u30fc\u30ba\u306bRails\u304b\u3089\u4ee5\u964d\u3067\u304d\u308b\u306e\u3067\u30ea\u30af\u30a8\u30b9\u30c8\u304c\u591a\u3059\u304e\u3066\u634c\u304d\u5207\u308c\u306a\u3044\u4e8b\u304c\u60f3\u5b9a\u3055\u308c\u308bAPI\u30b5\u30fc\u30d0\u30fc\u306f\u3001Elixir Phoenix\u3067\u4f5c\u6210\u3059\u308b\u3053\u3068\u3082\u691c\u8a0e\u306b\u5165\u308c\u3066\u3082\u3044\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n", "tags": ["Elixir", "Phoenix"]}