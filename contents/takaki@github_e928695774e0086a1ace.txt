{"tags": ["Java", "XML", "JAXB"], "context": " More than 1 year has passed since last update.JAXB \u3092\u4f7f\u3063\u3066\u3044\u3066\u4ed6\u306eXML\u3067\u5909\u63db\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308b\u3002\u5916\u90e8\u30ad\u30fc\u3068\u304b\u305d\u3046\u3044\u3046\u5974\u3067\u3042\u308b\u3002\n\u3053\u306e\u5834\u5408\u306f @XmlID \u3068 @XmlIDREF \u3092\u4f7f\u3046\u3002\n\nDomIdRefJaxb.java\npackage example.xml;\n\nimport org.w3c.dom.Document;\nimport org.xml.sax.SAXException;\n\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Unmarshaller;\nimport javax.xml.bind.annotation.*;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\n\npublic class DomIdRefJaxb {\n    public static void main(\n            final String[] args) throws ParserConfigurationException, IOException, SAXException, JAXBException {\n        final String xml = \"<info><person><name>hoge</name><age>35</age><addr>12</addr></person><city id='12' name='Nagoya'/></info>\";\n        final DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory\n                .newInstance();\n        final DocumentBuilder documentBuilder = documentBuilderFactory\n                .newDocumentBuilder();\n        final Document document = documentBuilder\n                .parse(new ByteArrayInputStream(xml.getBytes()));\n\n        final JAXBContext jc = JAXBContext.newInstance(Info.class);\n        final Unmarshaller unmarshaller = jc.createUnmarshaller();\n        final JAXBElement<Info> jaxbElement = unmarshaller\n                .unmarshal(document, Info.class);\n        System.out.println(\"JAXBElement: \" + jaxbElement.getValue());\n\n        final Info info = (Info) unmarshaller.unmarshal(document);\n        System.out.println(\"unmarshal: \" + info);\n    }\n\n    @XmlRootElement\n    public static class Info {\n        @XmlElement(name = \"person\")\n        private Person person;\n        @XmlElement(name = \"city\")\n        private City city;\n\n        @Override\n        public String toString() {\n            return String.format(\"%s\", person);\n        }\n\n    }\n\n    @XmlRootElement\n    public static class City {\n        @XmlAttribute(name = \"id\")\n        @XmlID\n        private String id;\n        @XmlAttribute(name = \"name\")\n        private String name;\n    }\n\n    @XmlRootElement\n    public static class Person {\n        @XmlElement\n        private String name;\n        @XmlElement\n        private int age;\n\n        @XmlElement(name = \"addr\")\n        @XmlIDREF\n        private City city;\n\n        @Override\n        public String toString() {\n            return String.format(\"%s:%s:%s\", name, Integer.toString(age), city.name);\n        }\n\n    }\n}\n\n\nPerson\u30af\u30e9\u30b9\u306e\u4e2d\u3067 @XmlIDREF \u3092\u4f7f\u3063\u3066\u53c2\u7167\u3059\u308b\u3068\u3044\u3046\u8a18\u8ff0\u3092\u3064\u3051\u3066\u304a\u3051\u3070 \u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u306e @XmlID \u3092\u63a2\u3057\u3066\u304d\u3066\u7d50\u5408\u3057\u3066\u304f\u308c\u308b\u3002\nJAXB \u3092\u4f7f\u3063\u3066\u3044\u3066\u4ed6\u306eXML\u3067\u5909\u63db\u3055\u308c\u305f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u53c2\u7167\u3057\u305f\u3044\u5834\u5408\u304c\u3042\u308b\u3002\u5916\u90e8\u30ad\u30fc\u3068\u304b\u305d\u3046\u3044\u3046\u5974\u3067\u3042\u308b\u3002\n\u3053\u306e\u5834\u5408\u306f `@XmlID` \u3068 `@XmlIDREF` \u3092\u4f7f\u3046\u3002\n\n```java:DomIdRefJaxb.java\npackage example.xml;\n\nimport org.w3c.dom.Document;\nimport org.xml.sax.SAXException;\n\nimport javax.xml.bind.JAXBContext;\nimport javax.xml.bind.JAXBElement;\nimport javax.xml.bind.JAXBException;\nimport javax.xml.bind.Unmarshaller;\nimport javax.xml.bind.annotation.*;\nimport javax.xml.parsers.DocumentBuilder;\nimport javax.xml.parsers.DocumentBuilderFactory;\nimport javax.xml.parsers.ParserConfigurationException;\nimport java.io.ByteArrayInputStream;\nimport java.io.IOException;\n\npublic class DomIdRefJaxb {\n    public static void main(\n            final String[] args) throws ParserConfigurationException, IOException, SAXException, JAXBException {\n        final String xml = \"<info><person><name>hoge</name><age>35</age><addr>12</addr></person><city id='12' name='Nagoya'/></info>\";\n        final DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory\n                .newInstance();\n        final DocumentBuilder documentBuilder = documentBuilderFactory\n                .newDocumentBuilder();\n        final Document document = documentBuilder\n                .parse(new ByteArrayInputStream(xml.getBytes()));\n\n        final JAXBContext jc = JAXBContext.newInstance(Info.class);\n        final Unmarshaller unmarshaller = jc.createUnmarshaller();\n        final JAXBElement<Info> jaxbElement = unmarshaller\n                .unmarshal(document, Info.class);\n        System.out.println(\"JAXBElement: \" + jaxbElement.getValue());\n\n        final Info info = (Info) unmarshaller.unmarshal(document);\n        System.out.println(\"unmarshal: \" + info);\n    }\n\n    @XmlRootElement\n    public static class Info {\n        @XmlElement(name = \"person\")\n        private Person person;\n        @XmlElement(name = \"city\")\n        private City city;\n\n        @Override\n        public String toString() {\n            return String.format(\"%s\", person);\n        }\n\n    }\n\n    @XmlRootElement\n    public static class City {\n        @XmlAttribute(name = \"id\")\n        @XmlID\n        private String id;\n        @XmlAttribute(name = \"name\")\n        private String name;\n    }\n\n    @XmlRootElement\n    public static class Person {\n        @XmlElement\n        private String name;\n        @XmlElement\n        private int age;\n\n        @XmlElement(name = \"addr\")\n        @XmlIDREF\n        private City city;\n\n        @Override\n        public String toString() {\n            return String.format(\"%s:%s:%s\", name, Integer.toString(age), city.name);\n        }\n\n    }\n}\n```\n\n`Person`\u30af\u30e9\u30b9\u306e\u4e2d\u3067 `@XmlIDREF` \u3092\u4f7f\u3063\u3066\u53c2\u7167\u3059\u308b\u3068\u3044\u3046\u8a18\u8ff0\u3092\u3064\u3051\u3066\u304a\u3051\u3070 \u5bfe\u8c61\u306e\u30af\u30e9\u30b9\u306e `@XmlID` \u3092\u63a2\u3057\u3066\u304d\u3066\u7d50\u5408\u3057\u3066\u304f\u308c\u308b\u3002\n"}