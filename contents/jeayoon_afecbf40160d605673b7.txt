{"tags": ["cakephp3", "DB"], "context": "\u682a\u5f0f\u4f1a\u793eFusic\u306e\u30b8\u30e7\u30f3\u3068\u7533\u3057\u307e\u3059\u3002\n\u3053\u306e\u5ea6\u3001Fusic Advent Calendar 2016\u306b\nOJT\u3067\u4f5c\u3063\u305fcakePHP3\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u80cc\u666f\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\nOJT\u3067\u4f5c\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u3093\u306a\u3082\u306e\u304b\u3092\u8aac\u660e\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306fDB\u8a2d\u8a08\u66f8\u306e\u30b7\u30b9\u30c6\u30e0\u5316\u3067\u3059\u3002\n\u540d\u524d\u306e\u901a\u308a\u306bDB\u8a2d\u8a08\u66f8\u3092Web\u4e0a\u3067\u3001\n\u81ea\u5206\u306e\u958b\u767a\u74b0\u5883\u304b\u3089OJT\u3067\u4f5c\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u306bDB\u60c5\u5831\u3092\u8ee2\u9001\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\n\u4fee\u6b63\u53ca\u3073Excel\u51fa\u529b\u304c\u53ef\u80fd\u306a\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u3092\u5186\u6ed1\u306b\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u304cDB\u8a2d\u8a08\u66f8\u306e\u60c5\u5831\u53d6\u5f97\u3067\u3057\u305f\u306e\u3067\u3001\nDB\u60c5\u5831\u53d6\u5f97\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u8aac\u660e\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306fDB\u8a2d\u8a08\u66f8\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u304c\u3001PostgreSQL\u3068MySQL\u3092\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\ncakePHP3\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306fconfig/app.php\u306eDatasources\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u305d\u306e\u60c5\u5831\u3092\u57fa\u3065\u3044\u3066\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u4f7f\u3046DB\u60c5\u5831\u3092\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001PostgreSQL\u306e\u5bfe\u5fdc\u306fSQL\u304c\u5fc5\u8981\u3067\u3057\u305f\u306e\u3067\u3001kozo/liberty-behavior\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3084\u30ab\u30e9\u30e0\u3092\u5206\u5c90\u51e6\u7406\u3057\u3066\u30b7\u30b9\u30c6\u30e0\u306b\u9001\u308b\u305f\u3081\u306b\u3001Yml\u30d5\u30a1\u30a4\u30eb\u306b\u914d\u5217\u5316\u3057\u307e\u3059\u3002\n\n\u30d7\u30e9\u30b0\u30a4\u30f3\u30b3\u30fc\u30c9\napp.php\u304b\u3089DB\u60c5\u5831\u3092\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n        //getDatabaseType And DatabaseName\n        $appData = include(CONFIG . 'app.php');\n\n        //getDatabaseType\n        $ex = explode(\"\\\\\", $appData['Datasources']['default']['driver']);\n\n        //getDBName\n        $myDatabasesName = $appData['Datasources']['default']['database'];\n\n\u305d\u308c\u305e\u308c\u306e\u30c6\u30fc\u30d6\u30eb\u3068DB\u8a2d\u8a08\u66f8\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n             //mysqlTable\u53d6\u5f97\n            foreach ($myTables as $myTableInd => $myTable){\n                //migration\u3067\u4f5c\u3089\u308c\u305f\u3089\u3001phinxlog\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3001continue\u3067\u5bfe\u5fdc\u3002\n                if ($myTable === 'phinxlog') {\n                    continue;\n                }\n\n                $thisMySqlColumns = \"\";\n                foreach ($myColumnsList as $myColumnInd => $myColumnsListValue){\n                    //TABLE_SCHEMA\u304c$myDatabasesName\u3068\u9593\u9055\u3063\u305f\u5834\u5408\u3001\u53d6\u5f97\u3057\u306a\u3044\n                    if($myColumnsListValue['TABLE_SCHEMA'] !== $myDatabasesName){\n                        continue;\n                    }\n                    if ((preg_match(\"/^([^(]+)\\(([0-9]+)\\)$/\", $myColumnsListValue['COLUMN_TYPE'], $data_type) === 1) ||\n                        (preg_match(\"/^([^(]+)\\(([0-9]+,[0-9]+)\\)$/\",$myColumnsListValue['COLUMN_TYPE'], $data_type) === 1)){\n                        //DECIMAL\u306e\u5834\u5408DECIMAL(10,0)\u3067\u8868\u3059\u306e\u3067\u3001preg_match(\"/^([^(]+)\\(([0-9]+,[0-9]+)\\)$/\"\u306e\u5bfe\u5fdc\u3082\u5fc5\u8981\n                        //data_type\n                        //mysql\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5927\u6587\u5b57\n                        $columnsType = strtoupper($data_type[1]);\n                        //positional_number\n                        $columnPN = $data_type[2];\n                    }else{\n                        //data_type\n                        //mysql\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5927\u6587\u5b57\n                        $columnsType = strtoupper($myColumnsListValue['COLUMN_TYPE']);\n                        //positional_number\n                        $columnPN = \"\";\n                    }\n\n            //Postgres\u306e\u5834\u5408\n        } elseif ($ex[3] == 'Postgres') {\n            //getTableList\n            $pgTables = ConnectionManager::get('default')->schemaCollection()->listTables();\n            $db = ConnectionManager::get('default');\n            $thisPgSqlTable = \"\";\n\n            //table\u306e\u60c5\u5831\u3092\u66f8\u304d\u8fbc\u3080\n            foreach ($pgTables as $pgTableInd => $pgTable) {\n                //migrations\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u3001DB\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u6301\u3063\u3066\u6765\u305f\u969b\u3001\u3044\u3089\u306a\u3044\u300cphinxlog\u300d\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001continue\u3067\u5bfe\u5fdc\u3059\u308b\u3082\u306e\n                if ($pgTable === 'phinxlog') {\n                    continue;\n                }\n\n                $thisPgSqlColumns = \"\";\n                foreach ($pgColumnsList as $pgColumnsInd => $pgColumnsListValue) {\n                    //Postgres\u306e\u5834\u5408\u3001\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u6301\u3063\u3066\u304f\u308b\u6642\u3001table_schema\u304cinformation_schema\u306e\u5834\u5408\u3001\n                    //\u958b\u767a\u3067\u4f5c\u3063\u305f\u30ab\u30e9\u30e0\u4ee5\u5916\u306e\u3082\u306e\u304c\u53d6\u5f97\u3055\u308c\u308b\u306e\u3067\u3001\u5206\u5c90\u51e6\u7406\u3092\u4f5c\u6210\n                    if ($pgColumnsListValue['table_schema'] == 'information_schema') {\n                        continue;\n                    }\n                    //data_type\n                    $columnsType = $pgColumnsListValue['data_type'];\n                    //Postgres\u306e\u5834\u5408\u3001\u65e5\u4ed8\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3060\u3063\u305f\u3089\u3001\u300ctimestamp without time zone\u300d\u3067\u8868\u3059\u306e\u3067\u3001\n                    //timestamp\u304c\u5165\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306e\u5834\u5408\u3001\u300ctimestamp\u300d\u306e\u5024\u3067\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u51e6\u7406\n                    if (strpos($pgColumnsListValue['data_type'], 'timestamp') !== false) {\n                        $columnsType = \"timestamp\";\n                        //Postgres\u306e\u5834\u5408\u3001character\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3060\u3063\u305f\u3089\u3001\u300ccharacter varying\u300d\u3067\u8868\u3059\u306e\u3067\u3001\n                        //character\u304c\u5165\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306e\u5834\u5408\u3001\u300ccharacter\u300d\u306e\u5024\u3067\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u51e6\u7406\n                    } elseif (strpos($pgColumnsListValue['data_type'], 'character') !== false) {\n                        $columnsType = \"character\";\n                    }\n\n\n\u307e\u3068\u3081\n\u793e\u5185\u3067\u306f\u3001\u958b\u767a\u306e\u4e0a\u3067\u624b\u9593\u304c\u304b\u304b\u308b\u90e8\u5206\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u3044\u308d\u3093\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5099\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u3089\u304b\u3089\u958b\u767a\u306b\u5f79\u306b\u7acb\u3066\u308b\u65b0\u305f\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n\u682a\u5f0f\u4f1a\u793eFusic\u306e\u30b8\u30e7\u30f3\u3068\u7533\u3057\u307e\u3059\u3002\n\u3053\u306e\u5ea6\u3001<a href=\"http://qiita.com/advent-calendar/2016/fusic\">Fusic Advent Calendar 2016</a>\u306b\nOJT\u3067\u4f5c\u3063\u305fcakePHP3\u306e\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u7d39\u4ecb\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u80cc\u666f\n\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u8aac\u660e\u3059\u308b\u524d\u306b\u3001\nOJT\u3067\u4f5c\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u304c\u3069\u3093\u306a\u3082\u306e\u304b\u3092\u8aac\u660e\u3055\u305b\u3066\u3044\u305f\u3060\u304d\u307e\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u306fDB\u8a2d\u8a08\u66f8\u306e\u30b7\u30b9\u30c6\u30e0\u5316\u3067\u3059\u3002\n\u540d\u524d\u306e\u901a\u308a\u306bDB\u8a2d\u8a08\u66f8\u3092Web\u4e0a\u3067\u3001\n\u81ea\u5206\u306e\u958b\u767a\u74b0\u5883\u304b\u3089OJT\u3067\u4f5c\u3063\u305f\u30b7\u30b9\u30c6\u30e0\u306bDB\u60c5\u5831\u3092\u8ee2\u9001\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\n\u4fee\u6b63\u53ca\u3073Excel\u51fa\u529b\u304c\u53ef\u80fd\u306a\u30b7\u30b9\u30c6\u30e0\u3067\u3059\u3002\n\u30b7\u30b9\u30c6\u30e0\u52d5\u4f5c\u3092\u5186\u6ed1\u306b\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306a\u6a5f\u80fd\u304cDB\u8a2d\u8a08\u66f8\u306e\u60c5\u5831\u53d6\u5f97\u3067\u3057\u305f\u306e\u3067\u3001\nDB\u60c5\u5831\u53d6\u5f97\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u308a\u307e\u3057\u305f\u3002\n\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u8aac\u660e\n\u30d7\u30e9\u30b0\u30a4\u30f3\u306fDB\u8a2d\u8a08\u66f8\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u304c\u3001PostgreSQL\u3068MySQL\u3092\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\ncakePHP3\u306e\u5834\u5408\u3001\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u63a5\u7d9a\u306fconfig/app.php\u306eDatasources\u306b\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\n\u305d\u306e\u60c5\u5831\u3092\u57fa\u3065\u3044\u3066\u3001\u30d7\u30e9\u30b0\u30a4\u30f3\u3067\u4f7f\u3046DB\u60c5\u5831\u3092\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n\u307e\u305f\u3001PostgreSQL\u306e\u5bfe\u5fdc\u306fSQL\u304c\u5fc5\u8981\u3067\u3057\u305f\u306e\u3067\u3001kozo/liberty-behavior\u3092\u4f7f\u3044\u307e\u3057\u305f\u3002\n\u6700\u5f8c\u306b\u3001\u8907\u6570\u306e\u30c6\u30fc\u30d6\u30eb\u3084\u30ab\u30e9\u30e0\u3092\u5206\u5c90\u51e6\u7406\u3057\u3066\u30b7\u30b9\u30c6\u30e0\u306b\u9001\u308b\u305f\u3081\u306b\u3001Yml\u30d5\u30a1\u30a4\u30eb\u306b\u914d\u5217\u5316\u3057\u307e\u3059\u3002\n\n## \u30d7\u30e9\u30b0\u30a4\u30f3\u30b3\u30fc\u30c9\napp.php\u304b\u3089DB\u60c5\u5831\u3092\u6301\u3063\u3066\u304d\u307e\u3059\u3002\n\n`````\n        //getDatabaseType And DatabaseName\n        $appData = include(CONFIG . 'app.php');\n\n        //getDatabaseType\n        $ex = explode(\"\\\\\", $appData['Datasources']['default']['driver']);\n\n        //getDBName\n        $myDatabasesName = $appData['Datasources']['default']['database'];\n`````\n\n\u305d\u308c\u305e\u308c\u306e\u30c6\u30fc\u30d6\u30eb\u3068DB\u8a2d\u8a08\u66f8\u306b\u5fc5\u8981\u306a\u60c5\u5831\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n\n`````\n             //mysqlTable\u53d6\u5f97\n            foreach ($myTables as $myTableInd => $myTable){\n                //migration\u3067\u4f5c\u3089\u308c\u305f\u3089\u3001phinxlog\u30c6\u30fc\u30d6\u30eb\u304c\u5b58\u5728\u3059\u308b\u306e\u3067\u3001continue\u3067\u5bfe\u5fdc\u3002\n                if ($myTable === 'phinxlog') {\n                    continue;\n                }\n   \n                $thisMySqlColumns = \"\";\n                foreach ($myColumnsList as $myColumnInd => $myColumnsListValue){\n                    //TABLE_SCHEMA\u304c$myDatabasesName\u3068\u9593\u9055\u3063\u305f\u5834\u5408\u3001\u53d6\u5f97\u3057\u306a\u3044\n                    if($myColumnsListValue['TABLE_SCHEMA'] !== $myDatabasesName){\n                        continue;\n                    }\n                    if ((preg_match(\"/^([^(]+)\\(([0-9]+)\\)$/\", $myColumnsListValue['COLUMN_TYPE'], $data_type) === 1) ||\n                        (preg_match(\"/^([^(]+)\\(([0-9]+,[0-9]+)\\)$/\",$myColumnsListValue['COLUMN_TYPE'], $data_type) === 1)){\n                        //DECIMAL\u306e\u5834\u5408DECIMAL(10,0)\u3067\u8868\u3059\u306e\u3067\u3001preg_match(\"/^([^(]+)\\(([0-9]+,[0-9]+)\\)$/\"\u306e\u5bfe\u5fdc\u3082\u5fc5\u8981\n                        //data_type\n                        //mysql\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5927\u6587\u5b57\n                        $columnsType = strtoupper($data_type[1]);\n                        //positional_number\n                        $columnPN = $data_type[2];\n                    }else{\n                        //data_type\n                        //mysql\u306e\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306f\u5927\u6587\u5b57\n                        $columnsType = strtoupper($myColumnsListValue['COLUMN_TYPE']);\n                        //positional_number\n                        $columnPN = \"\";\n                    }\n`````\n`````\n            //Postgres\u306e\u5834\u5408\n        } elseif ($ex[3] == 'Postgres') {\n            //getTableList\n            $pgTables = ConnectionManager::get('default')->schemaCollection()->listTables();\n            $db = ConnectionManager::get('default');\n            $thisPgSqlTable = \"\";\n\n            //table\u306e\u60c5\u5831\u3092\u66f8\u304d\u8fbc\u3080\n            foreach ($pgTables as $pgTableInd => $pgTable) {\n                //migrations\u3067\u30c6\u30fc\u30d6\u30eb\u3092\u4f5c\u3063\u3066\u3001DB\u304b\u3089\u30c6\u30fc\u30d6\u30eb\u60c5\u5831\u3092\u6301\u3063\u3066\u6765\u305f\u969b\u3001\u3044\u3089\u306a\u3044\u300cphinxlog\u300d\u30c6\u30fc\u30d6\u30eb\u304c\u3042\u308a\u3001continue\u3067\u5bfe\u5fdc\u3059\u308b\u3082\u306e\n                if ($pgTable === 'phinxlog') {\n                    continue;\n                }\n\n                $thisPgSqlColumns = \"\";\n                foreach ($pgColumnsList as $pgColumnsInd => $pgColumnsListValue) {\n                    //Postgres\u306e\u5834\u5408\u3001\u30ab\u30e9\u30e0\u306e\u30ea\u30b9\u30c8\u3092\u6301\u3063\u3066\u304f\u308b\u6642\u3001table_schema\u304cinformation_schema\u306e\u5834\u5408\u3001\n                    //\u958b\u767a\u3067\u4f5c\u3063\u305f\u30ab\u30e9\u30e0\u4ee5\u5916\u306e\u3082\u306e\u304c\u53d6\u5f97\u3055\u308c\u308b\u306e\u3067\u3001\u5206\u5c90\u51e6\u7406\u3092\u4f5c\u6210\n                    if ($pgColumnsListValue['table_schema'] == 'information_schema') {\n                        continue;\n                    }\n                    //data_type\n                    $columnsType = $pgColumnsListValue['data_type'];\n                    //Postgres\u306e\u5834\u5408\u3001\u65e5\u4ed8\u306b\u95a2\u3059\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3060\u3063\u305f\u3089\u3001\u300ctimestamp without time zone\u300d\u3067\u8868\u3059\u306e\u3067\u3001\n                    //timestamp\u304c\u5165\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306e\u5834\u5408\u3001\u300ctimestamp\u300d\u306e\u5024\u3067\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u51e6\u7406\n                    if (strpos($pgColumnsListValue['data_type'], 'timestamp') !== false) {\n                        $columnsType = \"timestamp\";\n                        //Postgres\u306e\u5834\u5408\u3001character\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u3060\u3063\u305f\u3089\u3001\u300ccharacter varying\u300d\u3067\u8868\u3059\u306e\u3067\u3001\n                        //character\u304c\u5165\u3063\u3066\u3044\u308b\u30c7\u30fc\u30bf\u30bf\u30a4\u30d7\u306e\u5834\u5408\u3001\u300ccharacter\u300d\u306e\u5024\u3067\u66f8\u304d\u8fbc\u307e\u308c\u308b\u3088\u3046\u306b\u51e6\u7406\n                    } elseif (strpos($pgColumnsListValue['data_type'], 'character') !== false) {\n                        $columnsType = \"character\";\n                    }\n`````\n\n\n\n## \u307e\u3068\u3081\n\u793e\u5185\u3067\u306f\u3001\u958b\u767a\u306e\u4e0a\u3067\u624b\u9593\u304c\u304b\u304b\u308b\u90e8\u5206\u3092\u89e3\u6c7a\u3059\u308b\u305f\u3081\u306b\u3001\u3044\u308d\u3093\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u304c\u5099\u3048\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n\u3053\u3089\u304b\u3089\u958b\u767a\u306b\u5f79\u306b\u7acb\u3066\u308b\u65b0\u305f\u306a\u30d7\u30e9\u30b0\u30a4\u30f3\u3092\u4f5c\u3063\u3066\u307f\u305f\u3044\u3068\u601d\u3044\u307e\u3057\u305f\u3002\n"}