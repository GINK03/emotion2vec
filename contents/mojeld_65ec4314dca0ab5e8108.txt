{"context": " More than 1 year has passed since last update.Irregular lyrics can be found in the myriad.\nI want to align such as line breaks.\nJapanese meaning will change when you turn off the excessively because there is a kanji\nIt will split Kanji, Hiragana, Katakana.\n\nLyricsType.pas\n TLyricsType = (knKanji, knHira, knZKana, knZEigo, knZSuz, knKigo, knKutoten, knKana, knAscii, knHatena);\n\n\nhttps://github.com/mojeld/Lyrics_tidy/blob/master/uLyricstidy.pas\n\nLyricsType.pas\nclass function TLyricstidy.Kanji(const ch: WideChar): TLyricsType;\nbegin\n  if  TLyricstidy.EnglishCheck(ch) then\n  begin\n    Result  := TLyricsType.knAscii;\n  end\n  else\n  begin\n    case Word(ch) of\n    $3040..$309F:{\u3072\u3089\u304c\u306a} Result  := TLyricsType.knHira;\n    $30A1..$30FE:{\u30ab\u30bf\u30ab\u30ca} Result  := TLyricsType.knZKana;\n    $FF10..$FF19:{\uff10\uff5e\uff19}   Result  := TLyricsType.knZSuz;\n    $FF20..$FF5A:{\uff21\uff5e\uff5a}   Result  := TLyricsType.knZEigo;\n    $FF66..$FF9F:{\u534a\u89d2\u30ab\u30bf\u30ab\u30ca} Result  := TLyricsType.knKana;\n    $2E80..$2FDF,$3191..$31B2,$3400..$9FCF,$E810..$E86F,$F900..$FA6F:{\u6f22\u5b57}\n      Result  := TLyricsType.knKanji;\n    Word('?'),Word('\uff1f'),Word('!'),Word('\uff01'):Result  := TLyricsType.knHatena;\n    else\n      Result  := TLyricsType.knKigo;\n    end;\n  end;\nend;\n\n\nThis it was judged by.\nIrregular lyrics can be found in the myriad.\nI want to align such as line breaks.\nJapanese meaning will change when you turn off the excessively because there is a kanji\n\nIt will split Kanji, Hiragana, Katakana.\n\n```lang:LyricsType.pas\n TLyricsType = (knKanji, knHira, knZKana, knZEigo, knZSuz, knKigo, knKutoten, knKana, knAscii, knHatena);\n```\n\n[https://github.com/mojeld/Lyrics_tidy/blob/master/uLyricstidy.pas](https://github.com/mojeld/Lyrics_tidy/blob/master/uLyricstidy.pas)\n\n```lang:LyricsType.pas\nclass function TLyricstidy.Kanji(const ch: WideChar): TLyricsType;\nbegin\n  if  TLyricstidy.EnglishCheck(ch) then\n  begin\n    Result  := TLyricsType.knAscii;\n  end\n  else\n  begin\n    case Word(ch) of\n    $3040..$309F:{\u3072\u3089\u304c\u306a} Result  := TLyricsType.knHira;\n    $30A1..$30FE:{\u30ab\u30bf\u30ab\u30ca} Result  := TLyricsType.knZKana;\n    $FF10..$FF19:{\uff10\uff5e\uff19}   Result  := TLyricsType.knZSuz;\n    $FF20..$FF5A:{\uff21\uff5e\uff5a}   Result  := TLyricsType.knZEigo;\n    $FF66..$FF9F:{\u534a\u89d2\u30ab\u30bf\u30ab\u30ca} Result  := TLyricsType.knKana;\n    $2E80..$2FDF,$3191..$31B2,$3400..$9FCF,$E810..$E86F,$F900..$FA6F:{\u6f22\u5b57}\n      Result  := TLyricsType.knKanji;\n    Word('?'),Word('\uff1f'),Word('!'),Word('\uff01'):Result  := TLyricsType.knHatena;\n    else\n      Result  := TLyricsType.knKigo;\n    end;\n  end;\nend;\n```\nThis it was judged by.\n", "tags": ["DelphiXE4"]}