{"context": "Heroku\u306bRedmine\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f5c\u696d\u8a18\u9332\u3067\u3059\u3002\n\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n$ git clone git@github.com:redmine/redmine.git\n$ cd redmine\n\n$ cp config/database.yml.example config/database.yml\n$ rm config/database.yml.example\n\n\n.gitignore\n/.project\n/.loadpath\n/.powrc\n/.rvmrc\n/config/additional_environment.rb\n/config/database.yml\n/config/secrets.yml\n/coverage\n/db/*.db\n/db/*.sqlite3\n/db/schema.rb\n/files/*\n/lib/redmine/scm/adapters/mercurial/redminehelper.pyc\n/lib/redmine/scm/adapters/mercurial/redminehelper.pyo\n/log/*.log*\n/log/mongrel_debug\n/plugins/*\n!/plugins/README\n/public/dispatch.*\n/public/themes/*\n!/public/themes/alternate\n!/public/themes/classic\n!/public/themes/README\n/tmp/*\n/tmp/cache/*\n/tmp/pdf/*\n/tmp/sessions/*\n/tmp/sockets/*\n/tmp/test/*\n/tmp/thumbnails/*\n/vendor/cache\n*.rbc\n\n/.bundle\n\n\n\ngemifile\nsource 'https://rubygems.org'\n\nif Gem::Version.new(Bundler::VERSION) < Gem::Version.new('1.5.0')\n  abort \"Redmine requires Bundler 1.5.0 or higher (you're using #{Bundler::VERSION}).\\nPlease update with 'gem update bundler'.\"\nend\n\ngem \"rails\", \"4.2.6\"\ngem \"jquery-rails\", \"~> 3.1.4\"\ngem \"coderay\", \"~> 1.1.1\"\ngem \"builder\", \">= 3.0.4\"\ngem \"request_store\", \"1.0.5\"\ngem \"mime-types\", (RUBY_VERSION >= \"2.0\" ? \"~> 3.0\" : \"~> 2.99\")\ngem \"protected_attributes\"\ngem \"actionpack-action_caching\"\ngem \"actionpack-xml_parser\"\ngem \"roadie-rails\"\ngem \"mimemagic\"\n\n# Request at least nokogiri 1.6.7.2 because of security advisories\ngem \"nokogiri\", \">= 1.6.7.2\"\n\n# Request at least rails-html-sanitizer 1.0.3 because of security advisories\ngem \"rails-html-sanitizer\", \">= 1.0.3\"\n\n# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\ngem 'tzinfo-data', platforms: [:mingw, :x64_mingw, :mswin, :jruby]\ngem \"rbpdf\", \"~> 1.19.0\"\n\n# Optional gem for LDAP authentication\ngroup :ldap do\n  gem \"net-ldap\", \"~> 0.12.0\"\nend\n\n# Optional gem for OpenID authentication\ngroup :openid do\n  gem \"ruby-openid\", \"~> 2.3.0\", :require => \"openid\"\n  gem \"rack-openid\"\nend\n\nplatforms :mri, :mingw, :x64_mingw do\n  # Optional gem for exporting the gantt to a PNG file, not supported with jruby\n  group :rmagick do\n    gem \"rmagick\", \">= 2.14.0\"\n  end\n\n  # Optional Markdown support, not for JRuby\n  group :markdown do\n    gem \"redcarpet\", \"~> 3.3.2\"\n  end\nend\n\nplatforms :jruby do\n  # jruby-openssl is bundled with JRuby 1.7.0\n  gem \"jruby-openssl\" if Object.const_defined?(:JRUBY_VERSION) && JRUBY_VERSION < '1.7.0'\n  gem \"activerecord-jdbc-adapter\", \"~> 1.3.2\"\nend\n\n# Include database gems for the adapters found in the database\n# configuration file\nrequire 'erb'\nrequire 'yaml'\ngroup :production do\n  gem \"pg\", \">= 0.11.0\", :platforms => [:mri, :mingw, :x64_mingw]\n  gem \"activerecord-jdbcpostgresql-adapter\", :platforms => :jruby\n  gem 'rails_12factor'\nend\n# database_file = File.join(File.dirname(__FILE__), \"config/database.yml\")\n# if File.exist?(database_file)\n#   database_config = YAML::load(ERB.new(IO.read(database_file)).result)\n#   adapters = database_config.values.map {|c| c['adapter']}.compact.uniq\n#   if adapters.any?\n#     adapters.each do |adapter|\n#       case adapter\n#       when 'mysql2'\n#         gem \"mysql2\", \"~> 0.3.11\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-jdbcmysql-adapter\", :platforms => :jruby\n#       when 'mysql'\n#         gem \"activerecord-jdbcmysql-adapter\", :platforms => :jruby\n#       when /postgresql/\n#         gem \"pg\", \"~> 0.18.1\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-jdbcpostgresql-adapter\", :platforms => :jruby\n#       when /sqlite3/\n#         gem \"sqlite3\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"jdbc-sqlite3\", \">= 3.8.10.1\", :platforms => :jruby\n#         gem \"activerecord-jdbcsqlite3-adapter\", :platforms => :jruby\n#       when /sqlserver/\n#         gem \"tiny_tds\", \"~> 0.6.2\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-sqlserver-adapter\", :platforms => [:mri, :mingw, :x64_mingw]\n#       else\n#         warn(\"Unknown database adapter `#{adapter}` found in config/database.yml, use Gemfile.local to load your own database gems\")\n#       end\n#     end\n#   else\n#     warn(\"No adapter found in config/database.yml, please configure it first\")\n#   end\n# else\n#   warn(\"Please configure your config/database.yml first\")\n# end\n\ngroup :development do\n  gem \"rdoc\", \">= 2.4.2\"\n  gem \"yard\"\nend\n\ngroup :test do\n  gem \"minitest\"\n  gem \"rails-dom-testing\"\n  gem \"mocha\"\n  gem \"simplecov\", \"~> 0.9.1\", :require => false\n  # For running UI tests\n  gem \"capybara\"\n  gem \"selenium-webdriver\"\nend\n\nlocal_gemfile = File.join(File.dirname(__FILE__), \"Gemfile.local\")\nif File.exists?(local_gemfile)\n  eval_gemfile local_gemfile\nend\n\n# Load plugins' Gemfiles\nDir.glob File.expand_path(\"../plugins/*/{Gemfile,PluginGemfile}\", __FILE__) do |file|\n  eval_gemfile file\nend\n\n\n$ bundle install\n\n\nconfig/database.yml\n# Default setup is given for MySQL with ruby1.9.\n# Examples for PostgreSQL, SQLite3 and SQL Server can be found at the end.\n# Line indentation must be 2 spaces (no tabs).\n\n# production:\n#   adapter: mysql2\n#   database: redmine\n#   host: localhost\n#   username: root\n#   password: \"\"\n#   encoding: utf8\n\ndevelopment:\n  adapter: mysql2\n  database: redmine_development\n  host: localhost\n  username: root\n  password: \"\"\n  encoding: utf8\n\n# Warning: The database defined as \"test\" will be erased and\n# re-generated from your development database when you run \"rake\".\n# Do not set this db to the same as development or production.\ntest:\n  adapter: mysql2\n  database: redmine_test\n  host: localhost\n  username: root\n  password: \"\"\n  encoding: utf8\n\n# PostgreSQL configuration example\nproduction:\n adapter: postgresql\n host: 127.0.0.1\n database: redmine\n\n# SQLite3 configuration example\n#production:\n#  adapter: sqlite3\n#  database: db/redmine.sqlite3\n\n# SQL Server configuration example\n#production:\n#  adapter: sqlserver\n#  database: redmine\n#  host: localhost\n#  username: jenkins\n#  password: jenkins\n\n\n\nconfig/application.rb\nrequire File.expand_path('../boot', __FILE__)\n\nrequire 'rails/all'\n\nBundler.require(*Rails.groups)\n\nmodule RedmineApp\n  class Application < Rails::Application\n    config.assets.initialize_on_precompile = false\n    # Settings in config/environments/* take precedence over those specified here.\n    # Application configuration should go into files in config/initializers\n    # -- all .rb files in that directory are automatically loaded.\n\n    # Custom directories with classes and modules you want to be autoloadable.\n    config.autoload_paths += %W(#{config.root}/lib)\n\n    # Only load the plugins named here, in the order given (default is alphabetical).\n    # :all can be used as a placeholder for all plugins not explicitly named.\n    # config.plugins = [ :exception_notification, :ssl_requirement, :all ]\n\n    config.active_record.store_full_sti_class = true\n    config.active_record.default_timezone = :local\n\n    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.\n    # Run \"rake -D time\" for a list of tasks for finding time zone names. Default is UTC.\n    # config.time_zone = 'Central Time (US & Canada)'\n\n    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.\n    # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]\n    # config.i18n.default_locale = :de\n\n    I18n.enforce_available_locales = true\n\n    # Configure the default encoding used in templates for Ruby 1.9.\n    config.encoding = \"utf-8\"\n\n    # Configure sensitive parameters which will be filtered from the log file.\n    config.filter_parameters += [:password]\n\n    # Enable the asset pipeline\n    config.assets.enabled = false\n\n    # Version of your assets, change this if you want to expire all your assets\n    config.assets.version = '1.0'\n\n    config.action_mailer.perform_deliveries = false\n\n    # Do not include all helpers\n    config.action_controller.include_all_helpers = false\n\n    # Do not supress errors in after_rollback and after_commit callbacks\n    config.active_record.raise_in_transactional_callbacks = true\n\n    # XML parameter parser removed from core in Rails 4.0\n    # and extracted to actionpack-xml_parser gem\n    config.middleware.insert_after ActionDispatch::ParamsParser, ActionDispatch::XmlParamsParser\n\n    # Sets the Content-Length header on responses with fixed-length bodies\n    config.middleware.use Rack::ContentLength\n\n    # Verify validity of user sessions\n    config.redmine_verify_sessions = true\n\n    # Specific cache for search results, the default file store cache is not\n    # a good option as it could grow fast. A memory store (32MB max) is used\n    # as the default. If you're running multiple server processes, it's\n    # recommended to switch to a shared cache store (eg. mem_cache_store).\n    # See http://guides.rubyonrails.org/caching_with_rails.html#cache-stores\n    # for more options (same options as config.cache_store).\n    config.redmine_search_cache_store = :memory_store\n\n    # Configure log level here so that additional environment file\n    # can change it (environments/ENV.rb would take precedence over it)\n    config.log_level = Rails.env.production? ? :info : :debug\n\n    config.session_store :cookie_store,\n      :key => '_redmine_session',\n      :path => config.relative_url_root || '/'\n\n    if File.exists?(File.join(File.dirname(__FILE__), 'additional_environment.rb'))\n      instance_eval File.read(File.join(File.dirname(__FILE__), 'additional_environment.rb'))\n    end\n  end\nend\n\n\n\nconfig/enviroments/production.rb\nRails.application.configure do\n  # Settings specified here will take precedence over those in config/application.rb\n\n  # Code is not reloaded between requests.\n  config.cache_classes = true\n  config.assets.compile = true\n  # config.serve_static_assets = true\n\n  # Eager load code on boot. This eager loads most of Rails and\n  # your application in memory, allowing both threaded web servers\n  # and those relying on copy on write to perform better.\n  # Rake tasks automatically ignore this option for performance.\n  config.eager_load = true\n\n  # Full error reports are disabled and caching is turned on.\n  config.consider_all_requests_local = false\n  config.action_controller.perform_caching = true\n\n  # Disable delivery errors\n  config.action_mailer.raise_delivery_errors = false\n\n  # No email in production log\n  config.action_mailer.logger = nil\n\n  # Print deprecation notices to the Rails logger.\n  config.active_support.deprecation = :log\nend\n\n\n$ heroku create\n$ git add .\n$ git commit -am 'heroku\u30c7\u30d7\u30ed\u30a4\u8a2d\u5b9a'\n$ git push heroku master\n\n$ heroku addons:create heroku-postgresql\n$ heroku run rake db:migrate\n$ heroku run rake redmine:load_default_data # ja\u3092\u5165\u529b\n$ heroku open\n\nID admin\npass admin\n\u3067\u7ba1\u7406\u8005\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3002\n\n\u30e1\u30fc\u30eb\u8a2d\u5b9a\ngmail\u8a2d\u5b9a\u306e\u5834\u5408\ndefault:\n  # Outgoing emails configuration\n  # See the examples below and the Rails guide for more configuration options:\n  # http://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration\n  email_delivery:\n    delivery_method: :smtp\n    smtp_settings:\n      address: \"smtp.gmail.com\"\n      port: 587\n      authentication: :plain\n      domain: 'smtp.gmail.com'\n      user_name: '\u81ea\u5206\u306egmail\u30a2\u30c9\u30ec\u30b9'\n      password: '\u30a2\u30d7\u30ea\u30d1\u30b9\u30ef\u30fc\u30c9'\n\nHeroku\u306bRedmine\u3092\u30c7\u30d7\u30ed\u30a4\u3057\u3066\u307f\u307e\u3057\u305f\u3002\n\u4f5c\u696d\u8a18\u9332\u3067\u3059\u3002\n\n\u4efb\u610f\u306e\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3067\n\n```bash\n$ git clone git@github.com:redmine/redmine.git\n$ cd redmine\n```\n\n```bash\n$ cp config/database.yml.example config/database.yml\n$ rm config/database.yml.example\n```\n\n```git:.gitignore\n/.project\n/.loadpath\n/.powrc\n/.rvmrc\n/config/additional_environment.rb\n/config/database.yml\n/config/secrets.yml\n/coverage\n/db/*.db\n/db/*.sqlite3\n/db/schema.rb\n/files/*\n/lib/redmine/scm/adapters/mercurial/redminehelper.pyc\n/lib/redmine/scm/adapters/mercurial/redminehelper.pyo\n/log/*.log*\n/log/mongrel_debug\n/plugins/*\n!/plugins/README\n/public/dispatch.*\n/public/themes/*\n!/public/themes/alternate\n!/public/themes/classic\n!/public/themes/README\n/tmp/*\n/tmp/cache/*\n/tmp/pdf/*\n/tmp/sessions/*\n/tmp/sockets/*\n/tmp/test/*\n/tmp/thumbnails/*\n/vendor/cache\n*.rbc\n\n/.bundle\n```\n\n```ruby:gemifile\nsource 'https://rubygems.org'\n\nif Gem::Version.new(Bundler::VERSION) < Gem::Version.new('1.5.0')\n  abort \"Redmine requires Bundler 1.5.0 or higher (you're using #{Bundler::VERSION}).\\nPlease update with 'gem update bundler'.\"\nend\n\ngem \"rails\", \"4.2.6\"\ngem \"jquery-rails\", \"~> 3.1.4\"\ngem \"coderay\", \"~> 1.1.1\"\ngem \"builder\", \">= 3.0.4\"\ngem \"request_store\", \"1.0.5\"\ngem \"mime-types\", (RUBY_VERSION >= \"2.0\" ? \"~> 3.0\" : \"~> 2.99\")\ngem \"protected_attributes\"\ngem \"actionpack-action_caching\"\ngem \"actionpack-xml_parser\"\ngem \"roadie-rails\"\ngem \"mimemagic\"\n\n# Request at least nokogiri 1.6.7.2 because of security advisories\ngem \"nokogiri\", \">= 1.6.7.2\"\n\n# Request at least rails-html-sanitizer 1.0.3 because of security advisories\ngem \"rails-html-sanitizer\", \">= 1.0.3\"\n\n# Windows does not include zoneinfo files, so bundle the tzinfo-data gem\ngem 'tzinfo-data', platforms: [:mingw, :x64_mingw, :mswin, :jruby]\ngem \"rbpdf\", \"~> 1.19.0\"\n\n# Optional gem for LDAP authentication\ngroup :ldap do\n  gem \"net-ldap\", \"~> 0.12.0\"\nend\n\n# Optional gem for OpenID authentication\ngroup :openid do\n  gem \"ruby-openid\", \"~> 2.3.0\", :require => \"openid\"\n  gem \"rack-openid\"\nend\n\nplatforms :mri, :mingw, :x64_mingw do\n  # Optional gem for exporting the gantt to a PNG file, not supported with jruby\n  group :rmagick do\n    gem \"rmagick\", \">= 2.14.0\"\n  end\n\n  # Optional Markdown support, not for JRuby\n  group :markdown do\n    gem \"redcarpet\", \"~> 3.3.2\"\n  end\nend\n\nplatforms :jruby do\n  # jruby-openssl is bundled with JRuby 1.7.0\n  gem \"jruby-openssl\" if Object.const_defined?(:JRUBY_VERSION) && JRUBY_VERSION < '1.7.0'\n  gem \"activerecord-jdbc-adapter\", \"~> 1.3.2\"\nend\n\n# Include database gems for the adapters found in the database\n# configuration file\nrequire 'erb'\nrequire 'yaml'\ngroup :production do\n  gem \"pg\", \">= 0.11.0\", :platforms => [:mri, :mingw, :x64_mingw]\n  gem \"activerecord-jdbcpostgresql-adapter\", :platforms => :jruby\n  gem 'rails_12factor'\nend\n# database_file = File.join(File.dirname(__FILE__), \"config/database.yml\")\n# if File.exist?(database_file)\n#   database_config = YAML::load(ERB.new(IO.read(database_file)).result)\n#   adapters = database_config.values.map {|c| c['adapter']}.compact.uniq\n#   if adapters.any?\n#     adapters.each do |adapter|\n#       case adapter\n#       when 'mysql2'\n#         gem \"mysql2\", \"~> 0.3.11\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-jdbcmysql-adapter\", :platforms => :jruby\n#       when 'mysql'\n#         gem \"activerecord-jdbcmysql-adapter\", :platforms => :jruby\n#       when /postgresql/\n#         gem \"pg\", \"~> 0.18.1\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-jdbcpostgresql-adapter\", :platforms => :jruby\n#       when /sqlite3/\n#         gem \"sqlite3\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"jdbc-sqlite3\", \">= 3.8.10.1\", :platforms => :jruby\n#         gem \"activerecord-jdbcsqlite3-adapter\", :platforms => :jruby\n#       when /sqlserver/\n#         gem \"tiny_tds\", \"~> 0.6.2\", :platforms => [:mri, :mingw, :x64_mingw]\n#         gem \"activerecord-sqlserver-adapter\", :platforms => [:mri, :mingw, :x64_mingw]\n#       else\n#         warn(\"Unknown database adapter `#{adapter}` found in config/database.yml, use Gemfile.local to load your own database gems\")\n#       end\n#     end\n#   else\n#     warn(\"No adapter found in config/database.yml, please configure it first\")\n#   end\n# else\n#   warn(\"Please configure your config/database.yml first\")\n# end\n\ngroup :development do\n  gem \"rdoc\", \">= 2.4.2\"\n  gem \"yard\"\nend\n\ngroup :test do\n  gem \"minitest\"\n  gem \"rails-dom-testing\"\n  gem \"mocha\"\n  gem \"simplecov\", \"~> 0.9.1\", :require => false\n  # For running UI tests\n  gem \"capybara\"\n  gem \"selenium-webdriver\"\nend\n\nlocal_gemfile = File.join(File.dirname(__FILE__), \"Gemfile.local\")\nif File.exists?(local_gemfile)\n  eval_gemfile local_gemfile\nend\n\n# Load plugins' Gemfiles\nDir.glob File.expand_path(\"../plugins/*/{Gemfile,PluginGemfile}\", __FILE__) do |file|\n  eval_gemfile file\nend\n```\n\n```bash\n$ bundle install\n```\n\n```ruby:config/database.yml\n# Default setup is given for MySQL with ruby1.9.\n# Examples for PostgreSQL, SQLite3 and SQL Server can be found at the end.\n# Line indentation must be 2 spaces (no tabs).\n\n# production:\n#   adapter: mysql2\n#   database: redmine\n#   host: localhost\n#   username: root\n#   password: \"\"\n#   encoding: utf8\n\ndevelopment:\n  adapter: mysql2\n  database: redmine_development\n  host: localhost\n  username: root\n  password: \"\"\n  encoding: utf8\n\n# Warning: The database defined as \"test\" will be erased and\n# re-generated from your development database when you run \"rake\".\n# Do not set this db to the same as development or production.\ntest:\n  adapter: mysql2\n  database: redmine_test\n  host: localhost\n  username: root\n  password: \"\"\n  encoding: utf8\n\n# PostgreSQL configuration example\nproduction:\n adapter: postgresql\n host: 127.0.0.1\n database: redmine\n\n# SQLite3 configuration example\n#production:\n#  adapter: sqlite3\n#  database: db/redmine.sqlite3\n\n# SQL Server configuration example\n#production:\n#  adapter: sqlserver\n#  database: redmine\n#  host: localhost\n#  username: jenkins\n#  password: jenkins\n```\n\n```ruby:config/application.rb\nrequire File.expand_path('../boot', __FILE__)\n\nrequire 'rails/all'\n\nBundler.require(*Rails.groups)\n\nmodule RedmineApp\n  class Application < Rails::Application\n    config.assets.initialize_on_precompile = false\n    # Settings in config/environments/* take precedence over those specified here.\n    # Application configuration should go into files in config/initializers\n    # -- all .rb files in that directory are automatically loaded.\n\n    # Custom directories with classes and modules you want to be autoloadable.\n    config.autoload_paths += %W(#{config.root}/lib)\n\n    # Only load the plugins named here, in the order given (default is alphabetical).\n    # :all can be used as a placeholder for all plugins not explicitly named.\n    # config.plugins = [ :exception_notification, :ssl_requirement, :all ]\n\n    config.active_record.store_full_sti_class = true\n    config.active_record.default_timezone = :local\n\n    # Set Time.zone default to the specified zone and make Active Record auto-convert to this zone.\n    # Run \"rake -D time\" for a list of tasks for finding time zone names. Default is UTC.\n    # config.time_zone = 'Central Time (US & Canada)'\n\n    # The default locale is :en and all translations from config/locales/*.rb,yml are auto loaded.\n    # config.i18n.load_path += Dir[Rails.root.join('my', 'locales', '*.{rb,yml}').to_s]\n    # config.i18n.default_locale = :de\n\n    I18n.enforce_available_locales = true\n\n    # Configure the default encoding used in templates for Ruby 1.9.\n    config.encoding = \"utf-8\"\n\n    # Configure sensitive parameters which will be filtered from the log file.\n    config.filter_parameters += [:password]\n\n    # Enable the asset pipeline\n    config.assets.enabled = false\n\n    # Version of your assets, change this if you want to expire all your assets\n    config.assets.version = '1.0'\n\n    config.action_mailer.perform_deliveries = false\n\n    # Do not include all helpers\n    config.action_controller.include_all_helpers = false\n\n    # Do not supress errors in after_rollback and after_commit callbacks\n    config.active_record.raise_in_transactional_callbacks = true\n\n    # XML parameter parser removed from core in Rails 4.0\n    # and extracted to actionpack-xml_parser gem\n    config.middleware.insert_after ActionDispatch::ParamsParser, ActionDispatch::XmlParamsParser\n\n    # Sets the Content-Length header on responses with fixed-length bodies\n    config.middleware.use Rack::ContentLength\n\n    # Verify validity of user sessions\n    config.redmine_verify_sessions = true\n\n    # Specific cache for search results, the default file store cache is not\n    # a good option as it could grow fast. A memory store (32MB max) is used\n    # as the default. If you're running multiple server processes, it's\n    # recommended to switch to a shared cache store (eg. mem_cache_store).\n    # See http://guides.rubyonrails.org/caching_with_rails.html#cache-stores\n    # for more options (same options as config.cache_store).\n    config.redmine_search_cache_store = :memory_store\n\n    # Configure log level here so that additional environment file\n    # can change it (environments/ENV.rb would take precedence over it)\n    config.log_level = Rails.env.production? ? :info : :debug\n\n    config.session_store :cookie_store,\n      :key => '_redmine_session',\n      :path => config.relative_url_root || '/'\n\n    if File.exists?(File.join(File.dirname(__FILE__), 'additional_environment.rb'))\n      instance_eval File.read(File.join(File.dirname(__FILE__), 'additional_environment.rb'))\n    end\n  end\nend\n```\n\n```ruby:config/enviroments/production.rb\nRails.application.configure do\n  # Settings specified here will take precedence over those in config/application.rb\n\n  # Code is not reloaded between requests.\n  config.cache_classes = true\n  config.assets.compile = true\n  # config.serve_static_assets = true\n\n  # Eager load code on boot. This eager loads most of Rails and\n  # your application in memory, allowing both threaded web servers\n  # and those relying on copy on write to perform better.\n  # Rake tasks automatically ignore this option for performance.\n  config.eager_load = true\n\n  # Full error reports are disabled and caching is turned on.\n  config.consider_all_requests_local = false\n  config.action_controller.perform_caching = true\n\n  # Disable delivery errors\n  config.action_mailer.raise_delivery_errors = false\n\n  # No email in production log\n  config.action_mailer.logger = nil\n\n  # Print deprecation notices to the Rails logger.\n  config.active_support.deprecation = :log\nend\n```\n\n```bash\n$ heroku create\n$ git add .\n$ git commit -am 'heroku\u30c7\u30d7\u30ed\u30a4\u8a2d\u5b9a'\n$ git push heroku master\n```\n\n```bash\n$ heroku addons:create heroku-postgresql\n$ heroku run rake db:migrate\n$ heroku run rake redmine:load_default_data # ja\u3092\u5165\u529b\n$ heroku open\n```\n\nID admin\npass admin\n\u3067\u7ba1\u7406\u8005\u3067\u30ed\u30b0\u30a4\u30f3\u3067\u304d\u308b\u3002\n\n## \u30e1\u30fc\u30eb\u8a2d\u5b9a\n\ngmail\u8a2d\u5b9a\u306e\u5834\u5408\n\n```\ndefault:\n  # Outgoing emails configuration\n  # See the examples below and the Rails guide for more configuration options:\n  # http://guides.rubyonrails.org/action_mailer_basics.html#action-mailer-configuration\n  email_delivery:\n    delivery_method: :smtp\n    smtp_settings:\n      address: \"smtp.gmail.com\"\n      port: 587\n      authentication: :plain\n      domain: 'smtp.gmail.com'\n      user_name: '\u81ea\u5206\u306egmail\u30a2\u30c9\u30ec\u30b9'\n      password: '\u30a2\u30d7\u30ea\u30d1\u30b9\u30ef\u30fc\u30c9'\n```\n\n", "tags": ["Ruby", "Rails", "Heroku", "Redmine"]}