{"context": "\n\n\u306f\u3058\u3081\u306b\n\u6700\u8fd1\u5df7\u3067\u3001\u71b1\u3044\u300e\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300f\u306e\u7b2c\u4e8c\u5f3e\u3067\u3059\u3002\n\u4eca\u56de\u306fData\u5c64\u3092\u4e2d\u5fc3\u306b\u7e8f\u3081\u307e\u3057\u305f\u3002\n\n\u3084\u308b\u3053\u3068\n\n\nUI\u5c64\n\nView\nViewController\nPresenter\n\n\n\nDomain\u5c64\n\nUsecase \u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059\n\nRepository \u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059\n\nEntity\n\n\n\nData\u5c64\n\nRepository \u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059\n\nEntity\nDataStore \u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059\n\n\n\n\n\n\u3084\u3089\u306a\u3044\u3053\u3068\n\n\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306e\u6982\u5ff5\u306b\u3064\u3044\u3066\nUI\u5c64\u306b\u3064\u3044\u3066\nDomain\u5c64\u306b\u3064\u3044\u3066 \u2192\u3000\u3000[Swift\u7248]\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5b9f\u8df5\u7de8\u2460\uff08Domain\u5c64\uff09\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n\n\u3054\u8aac\u660e\u3059\u308b\u4f8b\nData\u5c64\u306eRepository\u304b\u3089\u30e6\u30fc\u30b6\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306e\u4e8b\u4f8b\n\n\n\n\u30ec\u30a4\u30e4\n\u30ab\u30c6\u30b4\u30ea\n\u30af\u30e9\u30b9\u540d\n\u8aac\u660e\n\n\n\n\nDomain\u5c64\nRepository\nUserRepository\n\u30e6\u30fc\u30b6\u60c5\u5831\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\n\n\n\nUsecase\nUserUseCase\n\u696d\u52d9\u30ed\u30b8\u30c3\u30af\n\n\nData\u5c64\nRepository\nUserRepositoryImpl\n\u30e6\u30fc\u30b6\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5b9f\u4f53\u306e\u30af\u30e9\u30b9\n\n\n\nDataStore\nUserDataStore\n\u6c38\u7d9a\u7684\u306a\u30c7\u30fc\u30bf\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\n\n\n\n\nUserDataStoreInStorage\nUserDefaults\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\n\n\n\n\n1. Domain\u5c64\u306eRepository\u306b\u3064\u3044\u3066\n\nUserRepository\nimport Foundation\n\nprotocol UserRepository: class {\n    func save(user: User)\n    func user() -> User\n    func delete()\n}\n\n\n\n2. Data\u5c64\u306eDataStore(UserDefaults)\u306b\u3064\u3044\u3066\nUserDefaults\u3078\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4fdd\u5b58\u307e\u305f\u306f\u3001\u53c2\u7167\u3059\u308b\u30af\u30e9\u30b9\n\nUserDataStoreInStorage.swift\nimport Foundation\n\nenum UserDataStoreInStorage: String {\n\n    case birthDay\n    case mailAddress\n\n    func save(value: AnyObject) {\n        NSUserDefaults.standardUserDefaults().setObject(value, forKey: self.rawValue)\n        NSUserDefaults.standardUserDefaults().synchronize()\n    }\n\n    func find() -> AnyObject? {\n        return NSUserDefaults.standardUserDefaults().objectForKey(self.rawValue)\n    }\n}\n\n\n\n3. Data\u5c64\u306eDataStore\u306b\u3064\u3044\u3066\n\u6c38\u7d9a\u7684\u306a\u30c7\u30fc\u30bf\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\n\u4eca\u56de\u4fdd\u5b58\u5148\u306f\u3001UserDefaults\u3068\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u306f\u9069\u5b9c\u3001plist\u3084DB\u3001API\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\nUserDataStore.swift\nimport Foundation\n\nclass UserDataStore: NSObject {\n\n    class func user() -> User {\n\n        let user = User()        \n        user.mailAddress = UserDataStoreInStorage.mailAddress.find() as? String ?? \"\"\n        user.birthDay = UserDataStoreInStorage.birthDay.find() as? String ?? \"\"\n        return user\n    }\n\n    class func save(user: User) {\n\n        UserDataStoreInStorage.mailAddress.save(user.mailAddress)\n        UserDataStoreInStorage.birthDay.save(user.birthDay)\n    }\n\n    class func delete() {\n\n        UserDataStoreInStorage.mailAddress.save(\"\")\n        UserDataStoreInStorage.birthDay.save(\"\")\n    }\n}\n\n\n\n4. Data\u5c64\u306eRepository\u306b\u3064\u3044\u3066\nData\u5c64\u306eRepository\u306f\u3001\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u5148\u306f\u610f\u8b58\u3057\u306a\u3044\u3002\n\nUserRepositoryImpl.swift\n\nclass UserRepositoryImpl: UserRepository {\n\n    func save(user: User) {\n        UserDataStore.save(user)\n    }\n\n    func user() -> User {\n        return UserDataStore.user()\n    }\n\n    func delete() {\n        UserDataStore.delete()\n    }\n}\n\n\n\n5. Domain\u5c64\u306eUsecase\u306b\u3064\u3044\u3066\n\nUserUseCase.swift\nimport Foundation\n\nclass UserUseCase: NSObject {\n\n    let repository: UserRepository\n\n    init(repository: UserRepository) {\n        self.repository = repository\n        super.init()\n    }\n\n    //\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u4fdd\u5b58\u3059\u308b\n    func saveMailAddress(mailAddress: String) {\n\n        let user = repository.user()\n        user.mailAddress = mailAddress\n        repository.save(user)\n    }\n\n    //\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n    func mailAddress() -> String {\n        return repository.user().mailAddress\n    }\n\n    //\u8a95\u751f\u65e5\u3092\u4fdd\u5b58\u3059\u308b\n    func saveBirthDay(birthDaty: String) {\n\n        let user = repository.user()\n        user.birthDay = birthDaty\n        repository.save(user)\n    }\n\n    //\u8a95\u751f\u65e5\u3092\u53d6\u5f97\u3059\u308b\n    func birthDay() -> String {\n        return repository.user().birthDay\n    }\n}\n\n\n\n[\u304a\u307e\u3051] \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\uff01\n\nData\u5c64\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n\nUserDataStoreTest.swift\nimport XCTest\n\nclass UserDataStoreTest: XCTestCase {\n\n    let repository = UserRepositoryImpl()\n    var user = User()\n\n    override func setUp() {\n        super.setUp()\n    }\n\n    override func tearDown() {\n        super.tearDown()\n    }\n\n    func testStoreAndFind() {\n\n        user.mailAddress = \"vision@smartdt.jp\"\n        user.birthDay = \"2011-08-01\"\n        repository.save(user)\n\n        user = repository.user()\n        XCTAssertEqual(\"vision@smartdt.jp\", user.mailAddress)\n        XCTAssertEqual(\"2011-08-01\", user.birthDay)\n    }\n\n    func testDeleteAndFind() {\n\n        repository.delete()\n        user = repository.user()\n        XCTAssertEqual(\"\", user.mailAddress)\n        XCTAssertEqual(\"\", user.birthDay)\n    }\n}\n\n\n\nDomain\u5c64\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n\nUserUsecaseTest.swift\nimport XCTest\n\nclass UserUsecaseTest: XCTestCase {\n\n    override func setUp() {\n        super.setUp()\n    }\n\n    override func tearDown() {\n        super.tearDown()\n    }\n\n    func testStoreAndFind() {\n\n        let repository = UserRepositoryImpl()\n        let usecase = UserUseCase(repository: repository)\n\n        usecase.saveMailAddress(\"vision@smartdt.jp\")\n        usecase.saveBirthDay(\"2011-08-01\")\n\n        XCTAssertEqual(\"vision@smartdt.jp\", usecase.mailAddress())\n        XCTAssertEqual(\"2011-08-01\", usecase.birthDay())\n    }\n}\n\n\n\n\u307e\u3068\u3081\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Data\u5c64\u306eRepository\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\nDomain\u5c64\u304b\u3089\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u306f\u3001Data\u5c64\u306eRepository\u3092\u901a\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\nDomain\u5c64\u306f\u3001\u4fdd\u5b58\u5148\u304c\u30b5\u30fc\u30d0\u30fc(API\u7d4c\u7531\uff09\u306a\u306e\u304b\u30a2\u30d7\u30ea\u5185(CoreData\u3001UserDefaults\u306a\u3069\uff09\u304b\u610f\u8b58\u3057\u306a\u3044\u3002\n\n\u8aa4\u308a\u3084\u3082\u3063\u3068\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u3068\u3044\u3046\u30a2\u30c9\u30d0\u30a4\u30b9\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u9802\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002\n\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u8aad\u3093\u3067\u9802\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n[Swift\u7248]\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5b9f\u8df5\u7de8\u2460\uff08Domain\u5c64\uff09\n# \u306f\u3058\u3081\u306b\n\u6700\u8fd1\u5df7\u3067\u3001\u71b1\u3044\u300e\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u300f\u306e\u7b2c\u4e8c\u5f3e\u3067\u3059\u3002\n\u4eca\u56de\u306fData\u5c64\u3092\u4e2d\u5fc3\u306b\u7e8f\u3081\u307e\u3057\u305f\u3002\n\n## \u3084\u308b\u3053\u3068\n\n* UI\u5c64\n - View\n - ViewController\n - Presenter\n \n* Domain\u5c64\n - Usecase *\u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059*\n - Repository *\u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059*\n - Entity\n \n* Data\u5c64\n - Repository *\u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059*\n - Entity\n - DataStore *\u2190 \u3053\u3053\u8aac\u660e\u3057\u307e\u3059*\n\n## \u3084\u3089\u306a\u3044\u3053\u3068\n* \u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u30fc\u306e\u6982\u5ff5\u306b\u3064\u3044\u3066\n* UI\u5c64\u306b\u3064\u3044\u3066\n* Domain\u5c64\u306b\u3064\u3044\u3066 \u2192\u3000\u3000[[Swift\u7248]\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5b9f\u8df5\u7de8\u2460\uff08Domain\u5c64\uff09](http://qiita.com/eKushida/items/f2ff5453734104ab29a9)\u3092\u53c2\u7167\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n# \u3054\u8aac\u660e\u3059\u308b\u4f8b\nData\u5c64\u306eRepository\u304b\u3089\u30e6\u30fc\u30b6\u60c5\u5831\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u969b\u306e\u4e8b\u4f8b\n\n\n|\u30ec\u30a4\u30e4 | \u30ab\u30c6\u30b4\u30ea | \u30af\u30e9\u30b9\u540d | \u8aac\u660e |\n|---|---|---|---|\n| Domain\u5c64 | Repository | UserRepository | \u30e6\u30fc\u30b6\u60c5\u5831\u3068\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9 |\n|  | Usecase | UserUseCase | \u696d\u52d9\u30ed\u30b8\u30c3\u30af |\n| Data\u5c64 | Repository | UserRepositoryImpl | \u30e6\u30fc\u30b6\u60c5\u5831\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5b9f\u4f53\u306e\u30af\u30e9\u30b9 |\n|  | DataStore | UserDataStore | \u6c38\u7d9a\u7684\u306a\u30c7\u30fc\u30bf\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9 |\n|  | | UserDataStoreInStorage | UserDefaults\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9 |\n\n## 1. Domain\u5c64\u306eRepository\u306b\u3064\u3044\u3066\n\n```:UserRepository\nimport Foundation\n\nprotocol UserRepository: class {\n    func save(user: User)\n    func user() -> User\n    func delete()\n}\n```\n\n## 2. Data\u5c64\u306eDataStore(UserDefaults)\u306b\u3064\u3044\u3066\nUserDefaults\u3078\u30e6\u30fc\u30b6\u60c5\u5831\u3092\u4fdd\u5b58\u307e\u305f\u306f\u3001\u53c2\u7167\u3059\u308b\u30af\u30e9\u30b9\n\n```:UserDataStoreInStorage.swift\nimport Foundation\n\nenum UserDataStoreInStorage: String {\n    \n    case birthDay\n    case mailAddress\n    \n    func save(value: AnyObject) {\n        NSUserDefaults.standardUserDefaults().setObject(value, forKey: self.rawValue)\n        NSUserDefaults.standardUserDefaults().synchronize()\n    }\n    \n    func find() -> AnyObject? {\n        return NSUserDefaults.standardUserDefaults().objectForKey(self.rawValue)\n    }\n}\n```\n\n## 3. Data\u5c64\u306eDataStore\u306b\u3064\u3044\u3066\n\u6c38\u7d9a\u7684\u306a\u30c7\u30fc\u30bf\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u30af\u30e9\u30b9\n\u4eca\u56de\u4fdd\u5b58\u5148\u306f\u3001UserDefaults\u3068\u3057\u307e\u3057\u305f\u3002\n\u3053\u3053\u306f\u9069\u5b9c\u3001plist\u3084DB\u3001API\u306b\u7f6e\u304d\u63db\u3048\u3066\u304f\u3060\u3055\u3044\u3002\n\n```:UserDataStore.swift\nimport Foundation\n\nclass UserDataStore: NSObject {\n    \n    class func user() -> User {\n        \n        let user = User()        \n        user.mailAddress = UserDataStoreInStorage.mailAddress.find() as? String ?? \"\"\n        user.birthDay = UserDataStoreInStorage.birthDay.find() as? String ?? \"\"\n        return user\n    }\n    \n    class func save(user: User) {\n     \n        UserDataStoreInStorage.mailAddress.save(user.mailAddress)\n        UserDataStoreInStorage.birthDay.save(user.birthDay)\n    }\n    \n    class func delete() {\n\n        UserDataStoreInStorage.mailAddress.save(\"\")\n        UserDataStoreInStorage.birthDay.save(\"\")\n    }\n}\n```\n\n## 4. Data\u5c64\u306eRepository\u306b\u3064\u3044\u3066\nData\u5c64\u306eRepository\u306f\u3001\u30c7\u30fc\u30bf\u306e\u4fdd\u5b58\u5148\u306f\u610f\u8b58\u3057\u306a\u3044\u3002\n\n```:UserRepositoryImpl.swift\n\nclass UserRepositoryImpl: UserRepository {\n    \n    func save(user: User) {\n        UserDataStore.save(user)\n    }\n    \n    func user() -> User {\n        return UserDataStore.user()\n    }\n        \n    func delete() {\n        UserDataStore.delete()\n    }\n}\n```\n\n## 5. Domain\u5c64\u306eUsecase\u306b\u3064\u3044\u3066\n\n```:UserUseCase.swift\nimport Foundation\n\nclass UserUseCase: NSObject {\n    \n    let repository: UserRepository\n    \n    init(repository: UserRepository) {\n        self.repository = repository\n        super.init()\n    }\n    \n    //\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u4fdd\u5b58\u3059\u308b\n    func saveMailAddress(mailAddress: String) {\n        \n        let user = repository.user()\n        user.mailAddress = mailAddress\n        repository.save(user)\n    }\n    \n    //\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u5f97\u3059\u308b\n    func mailAddress() -> String {\n        return repository.user().mailAddress\n    }\n    \n    //\u8a95\u751f\u65e5\u3092\u4fdd\u5b58\u3059\u308b\n    func saveBirthDay(birthDaty: String) {\n        \n        let user = repository.user()\n        user.birthDay = birthDaty\n        repository.save(user)\n    }\n    \n    //\u8a95\u751f\u65e5\u3092\u53d6\u5f97\u3059\u308b\n    func birthDay() -> String {\n        return repository.user().birthDay\n    }\n}\n```\n\n# [\u304a\u307e\u3051] \u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3092\u66f8\u3053\u3046\uff01\n\n## Data\u5c64\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n```:UserDataStoreTest.swift\nimport XCTest\n\nclass UserDataStoreTest: XCTestCase {\n\n    let repository = UserRepositoryImpl()\n    var user = User()\n    \n    override func setUp() {\n        super.setUp()\n    }\n    \n    override func tearDown() {\n        super.tearDown()\n    }\n    \n    func testStoreAndFind() {\n        \n        user.mailAddress = \"vision@smartdt.jp\"\n        user.birthDay = \"2011-08-01\"\n        repository.save(user)\n        \n        user = repository.user()\n        XCTAssertEqual(\"vision@smartdt.jp\", user.mailAddress)\n        XCTAssertEqual(\"2011-08-01\", user.birthDay)\n    }\n    \n    func testDeleteAndFind() {\n        \n        repository.delete()\n        user = repository.user()\n        XCTAssertEqual(\"\", user.mailAddress)\n        XCTAssertEqual(\"\", user.birthDay)\n    }\n}\n```\n\n## Domain\u5c64\u3092\u30e6\u30cb\u30c3\u30c8\u30c6\u30b9\u30c8\u3059\u308b\n\n```:UserUsecaseTest.swift\nimport XCTest\n\nclass UserUsecaseTest: XCTestCase {\n        \n    override func setUp() {\n        super.setUp()\n    }\n    \n    override func tearDown() {\n        super.tearDown()\n    }\n    \n    func testStoreAndFind() {\n        \n        let repository = UserRepositoryImpl()\n        let usecase = UserUseCase(repository: repository)\n\n        usecase.saveMailAddress(\"vision@smartdt.jp\")\n        usecase.saveBirthDay(\"2011-08-01\")\n        \n        XCTAssertEqual(\"vision@smartdt.jp\", usecase.mailAddress())\n        XCTAssertEqual(\"2011-08-01\", usecase.birthDay())\n    }\n}\n```\n\n# \u307e\u3068\u3081\n\u30dd\u30a4\u30f3\u30c8\u306f\u3001Data\u5c64\u306eRepository\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n1. Domain\u5c64\u304b\u3089\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u305f\u3081\u306b\u306f\u3001Data\u5c64\u306eRepository\u3092\u901a\u3057\u3066\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n2. Domain\u5c64\u306f\u3001\u4fdd\u5b58\u5148\u304c\u30b5\u30fc\u30d0\u30fc(API\u7d4c\u7531\uff09\u306a\u306e\u304b\u30a2\u30d7\u30ea\u5185(CoreData\u3001UserDefaults\u306a\u3069\uff09\u304b\u610f\u8b58\u3057\u306a\u3044\u3002\n\n*\u8aa4\u308a\u3084\u3082\u3063\u3068\u3053\u3046\u3057\u305f\u307b\u3046\u304c\u826f\u3044\u3068\u3068\u3044\u3046\u30a2\u30c9\u30d0\u30a4\u30b9\u304c\u3054\u3056\u3044\u307e\u3057\u305f\u3089\u3001\u3054\u6307\u6458\u9802\u3051\u307e\u3059\u3068\u5e78\u3044\u3067\u3059\u3002*\n\n\u3053\u3061\u3089\u3082\u5408\u308f\u305b\u3066\u8aad\u3093\u3067\u9802\u3051\u308c\u3070\u5e78\u3044\u3067\u3059\u3002\n[[Swift\u7248]\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5b9f\u8df5\u7de8\u2460\uff08Domain\u5c64\uff09](http://qiita.com/eKushida/items/f2ff5453734104ab29a9)\n\n", "tags": ["iOS", "Swift", "\u30af\u30ea\u30fc\u30f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3", "DDD", "\u30c9\u30e1\u30a4\u30f3\u99c6\u52d5\u8a2d\u8a08"]}