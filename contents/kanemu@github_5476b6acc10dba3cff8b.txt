{"context": " More than 1 year has passed since last update.\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306e\u6587\u5b57\u3067\u3082\u3061\u3083\u3093\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u3066\u304f\u308c\u308b\u3002\nimport org.codehaus.jackson.map.ObjectMapper\nimport org.codehaus.jackson.io.CharacterEscapes\nimport org.codehaus.jackson.SerializableString\nimport org.codehaus.jackson.JsonGenerator.Feature\n@Grab('org.codehaus.jackson:jackson-mapper-lgpl:1.9.9')\n\npublic class CustomCharacterEscapes extends CharacterEscapes {\n\n    private final int[] _asciiEscapes;\n\n    public CustomCharacterEscapes() {\n        _asciiEscapes = standardAsciiEscapesForJSON();\n        _asciiEscapes['/'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['<'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['>'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['+'] = CharacterEscapes.ESCAPE_STANDARD;\n    }\n\n    @Override\n    public int[] getEscapeCodesForAscii() {\n        return _asciiEscapes;\n    }\n\n    @Override\n    public SerializableString getEscapeSequence(int i) {\n        return null;\n    }\n}\n\ndef mapper = new ObjectMapper()\nmapper.configure(Feature.ESCAPE_NON_ASCII, true)\nmapper.getJsonFactory().setCharacterEscapes(new CustomCharacterEscapes())\n\ndef map = [\"\u540d\u524d\":\"\u9577\u8c37\u5ddd\u4e00\u6e05\",\"code\":\"<script>alert(1)</script>\"]\n\ndef json = mapper.writeValueAsString(map)\nassert json == '{\"\\\\u540D\\\\u524D\":\"\\\\u9577\\\\u8C37\\\\u5DDD\\\\u4E00\\\\u6E05\",\"code\":\"\\\\u003Cscript\\\\u003Ealert(1)\\\\u003C\\\\u002Fscript\\\\u003E\"}'\n\n\n\u30b5\u30ed\u30b2\u30fc\u30c8\u30da\u30a2\u306e\u6587\u5b57\u3067\u3082\u3061\u3083\u3093\u3068\u30a8\u30b9\u30b1\u30fc\u30d7\u3057\u3066\u304f\u308c\u308b\u3002\n\n```groovy:\nimport org.codehaus.jackson.map.ObjectMapper\nimport org.codehaus.jackson.io.CharacterEscapes\nimport org.codehaus.jackson.SerializableString\nimport org.codehaus.jackson.JsonGenerator.Feature\n@Grab('org.codehaus.jackson:jackson-mapper-lgpl:1.9.9')\n\npublic class CustomCharacterEscapes extends CharacterEscapes {\n\n    private final int[] _asciiEscapes;\n\n    public CustomCharacterEscapes() {\n        _asciiEscapes = standardAsciiEscapesForJSON();\n        _asciiEscapes['/'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['<'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['>'] = CharacterEscapes.ESCAPE_STANDARD;\n        _asciiEscapes['+'] = CharacterEscapes.ESCAPE_STANDARD;\n    }\n    \n    @Override\n    public int[] getEscapeCodesForAscii() {\n        return _asciiEscapes;\n    }\n    \n    @Override\n    public SerializableString getEscapeSequence(int i) {\n        return null;\n    }\n}\n\ndef mapper = new ObjectMapper()\nmapper.configure(Feature.ESCAPE_NON_ASCII, true)\nmapper.getJsonFactory().setCharacterEscapes(new CustomCharacterEscapes())\n\ndef map = [\"\u540d\u524d\":\"\u9577\u8c37\u5ddd\u4e00\u6e05\",\"code\":\"<script>alert(1)</script>\"]\n\ndef json = mapper.writeValueAsString(map)\nassert json == '{\"\\\\u540D\\\\u524D\":\"\\\\u9577\\\\u8C37\\\\u5DDD\\\\u4E00\\\\u6E05\",\"code\":\"\\\\u003Cscript\\\\u003Ealert(1)\\\\u003C\\\\u002Fscript\\\\u003E\"}'\n```", "tags": ["Java", "Groovy"]}