{"context": "\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3042\u308bView\u306eVisibility\u3092Animation\u3055\u305b\u3066\u5909\u5316\u3055\u305b\u3066\u3044\u308b\u3002\nAndroid\u306eEspresso\u3067\u305d\u3053\u306e\u90e8\u5206\u3092UI\u30c6\u30b9\u30c8\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304b\u3089Visibility\u304c\u5909\u5316\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u307e\u3067\u306bThread.sleep\u3067\u5c11\u3057\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u5fc5\u305a\u4f55\u79d2\u304b\u5f85\u3064\u306e\u306f\u30b9\u30de\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\nandroid - Espresso: Thread.sleep( ); - Stack Overflow\u306e\u8a18\u4e8b\u3092\u898b\u308b\u3068\u3082\u3046\u3061\u3087\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u3042\u3063\u305f\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u66f8\u3044\u3066\u307f\u305f\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u5bfe\u8c61\u306eView\u306eVisibility\u304cVISIBLE\u306b\u306a\u308b\u307e\u3067\u6700\u59271000\u30df\u30ea\u79d2\u5f85\u3064\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\nonView(withId(R.id.controller)).perform(waitVisibility(View.VISIBLE, 1000));\n\nwaitVisibility\u95a2\u6570\u306e\u4e2d\u8eab\n\n    public static ViewAction waitVisibility(int visibility, long millis) {\n        return new WaitVisibility(visibility, millis);\n    }\n\n    public static abstract class WaitBase implements ViewAction {\n        protected long millis = 0;\n\n        WaitBase(long millis) {\n            this.millis = millis;\n        }\n\n        @Override\n        public Matcher<View> getConstraints() {\n            return new IsAnything<>();\n        }\n\n        @Override\n        public String getDescription() {\n            return\"wait during \" + millis + \" millis.\";\n        }\n\n        @Override\n        public void perform(UiController uiController, View view) {\n            uiController.loopMainThreadUntilIdle();\n            final long startTime = System.currentTimeMillis();\n            final long endTime = startTime + millis;\n\n            do {\n                if (check(view)) {\n                    return;\n                }\n\n                uiController.loopMainThreadForAtLeast(50);\n            }\n            while (System.currentTimeMillis() < endTime);\n\n            // timeout happens\n            throw new PerformException.Builder()\n                    .withActionDescription(this.getDescription())\n                    .withViewDescription(HumanReadables.describe(view))\n                    .withCause(new TimeoutException())\n                    .build();\n        }\n\n\n        abstract protected boolean check(final View view);\n    }\n\n    public static class WaitVisibility extends WaitBase {\n        private final int mVisibility;\n\n        public WaitVisibility(int visibility, long millis) {\n            super(millis);\n            mVisibility = visibility;\n        }\n\n        @Override\n        public String getDescription() {\n            return \"wait for a specific view with visibility <\" + mVisibility + \"> during \" + millis + \" millis.\";\n        }\n\n        @Override\n        protected boolean check(final View view) {\n            return view.getVisibility() == mVisibility;\n        }\n    }\n\n\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u305f\u3089\u3042\u308bView\u306eVisibility\u3092Animation\u3055\u305b\u3066\u5909\u5316\u3055\u305b\u3066\u3044\u308b\u3002\nAndroid\u306eEspresso\u3067\u305d\u3053\u306e\u90e8\u5206\u3092UI\u30c6\u30b9\u30c8\u3057\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u30dc\u30bf\u30f3\u3092\u62bc\u3057\u3066\u304b\u3089Visibility\u304c\u5909\u5316\u3057\u305f\u3053\u3068\u3092\u78ba\u8a8d\u3059\u308b\u307e\u3067\u306bThread.sleep\u3067\u5c11\u3057\u5f85\u305f\u306a\u3051\u308c\u3070\u3044\u3051\u306a\u3044\u3002\n\u3057\u304b\u3057\u3001\u5fc5\u305a\u4f55\u79d2\u304b\u5f85\u3064\u306e\u306f\u30b9\u30de\u30fc\u30c8\u3067\u306f\u306a\u3044\u3002\n\n[android - Espresso: Thread.sleep( ); - Stack Overflow](http://qiita.com/kuchinashi_r/items/d2f2f818421da5898520)\u306e\u8a18\u4e8b\u3092\u898b\u308b\u3068\u3082\u3046\u3061\u3087\u3063\u3068\u826f\u3044\u3084\u308a\u65b9\u304c\u3042\u3063\u305f\u306e\u3067\u53c2\u8003\u306b\u3057\u3066\u66f8\u3044\u3066\u307f\u305f\u3002\n\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u304f\u3068\u5bfe\u8c61\u306eView\u306eVisibility\u304cVISIBLE\u306b\u306a\u308b\u307e\u3067\u6700\u59271000\u30df\u30ea\u79d2\u5f85\u3064\u3088\u3046\u306b\u3057\u3066\u307f\u305f\u3002\n\n```java\nonView(withId(R.id.controller)).perform(waitVisibility(View.VISIBLE, 1000));\n```\n\nwaitVisibility\u95a2\u6570\u306e\u4e2d\u8eab\n\n```java\n\n\tpublic static ViewAction waitVisibility(int visibility, long millis) {\n\t\treturn new WaitVisibility(visibility, millis);\n\t}\n\n\tpublic static abstract class WaitBase implements ViewAction {\n\t\tprotected long millis = 0;\n\n\t\tWaitBase(long millis) {\n\t\t\tthis.millis = millis;\n\t\t}\n\n\t\t@Override\n\t\tpublic Matcher<View> getConstraints() {\n\t\t\treturn new IsAnything<>();\n\t\t}\n\n\t\t@Override\n\t\tpublic String getDescription() {\n\t\t\treturn\"wait during \" + millis + \" millis.\";\n\t\t}\n\n\t\t@Override\n\t\tpublic void perform(UiController uiController, View view) {\n\t\t\tuiController.loopMainThreadUntilIdle();\n\t\t\tfinal long startTime = System.currentTimeMillis();\n\t\t\tfinal long endTime = startTime + millis;\n\n\t\t\tdo {\n\t\t\t\tif (check(view)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tuiController.loopMainThreadForAtLeast(50);\n\t\t\t}\n\t\t\twhile (System.currentTimeMillis() < endTime);\n\n\t\t\t// timeout happens\n\t\t\tthrow new PerformException.Builder()\n\t\t\t\t\t.withActionDescription(this.getDescription())\n\t\t\t\t\t.withViewDescription(HumanReadables.describe(view))\n\t\t\t\t\t.withCause(new TimeoutException())\n\t\t\t\t\t.build();\n\t\t}\n\n\n\t\tabstract protected boolean check(final View view);\n\t}\n\n\tpublic static class WaitVisibility extends WaitBase {\n\t\tprivate final int mVisibility;\n\n\t\tpublic WaitVisibility(int visibility, long millis) {\n\t\t\tsuper(millis);\n\t\t\tmVisibility = visibility;\n\t\t}\n\n\t\t@Override\n\t\tpublic String getDescription() {\n\t\t\treturn \"wait for a specific view with visibility <\" + mVisibility + \"> during \" + millis + \" millis.\";\n\t\t}\n\n\t\t@Override\n\t\tprotected boolean check(final View view) {\n\t\t\treturn view.getVisibility() == mVisibility;\n\t\t}\n\t}\n```\n", "tags": ["Espresso", "Android"]}