{"tags": ["Redmine"], "context": " \u3053\u306e\u8a18\u4e8b\u306f\u6700\u7d42\u66f4\u65b0\u65e5\u304b\u30891\u5e74\u4ee5\u4e0a\u304c\u7d4c\u904e\u3057\u3066\u3044\u307e\u3059\u3002\n\nOS Configuration\n\nDisable SELinux\n# sed -i -e 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux\n# reboot\n\n\nAdd http permit firewall policy\n# systemctl list-units --type=service | grep firewalld\nfirewalld.service                  loaded active running firewalld - dynamic firewall daemon\n\n# firewall-cmd --zone=public --list-services\nssh\n\n# firewall-cmd --zone=public --add-service=http --permanent\nsuccess\n\n# firewall-cmd --reload\nsuccess\n\n# firewall-cmd --zone=public --list-services\nhttp ssh\n\n\nInstall PKGs\n\ndev tool, header...etc\n# yum -y groupinstall \"Development Tools\"\n# yum -y install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel libffi-devel\n\n\nmariadb\n# yum -y install mariadb-server mariadb-devel\n\n\napache\n# yum -y install httpd httpd-devel\n\n\nImage Magick\n# yum -y install ImageMagick ImageMagick-devel ipa-pgothic-fonts\n\n\nBuild Ruby\n\ndownload src\n# curl -O https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz\n\n\nbuild\n# tar xvf ruby-2.2.2.tar.gz\n# cd ruby-2.2.2\n# ./configure --disable-install-doc\n# make\n# make install\n# cd ..\n# ruby -v\nruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]\n\n\nInstall bundler\n# export http_proxy=http://<PROXY_SERVER>:<PROXY_SERVER_PORT>\n\n# gem install bundler --no-rdoc --no-ri\nFetching: bundler-1.10.6.gem (100%)\nSuccessfully installed bundler-1.10.6\n1 gem installed\n\n# unset http_proxy\n\n\nInstall MariaDB\n\nSet default charset as utf8\n# pwd\n/etc\n\n# diff my.cnf.org my.cnf\n10a11,12\n> character-set-server=utf8\n>\n19a22,23\n> [mysql]\n> default-character-set=utf8\n\n\nStart mariadb service\n# service mariadb start\nRedirecting to /bin/systemctl start  mariadb.service\n\n# systemctl enable mariadb\nln -s '/usr/lib/systemd/system/mariadb.service' '/etc/systemd/system/multi-user.target.wants/mariadb.service'\n\n\nCheck status\n# mysql -uroot\n\nMariaDB [(none)]> show variables like 'character_set%';\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | utf8                       |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n8 rows in set (0.01 sec)\n\nMariaDB [(none)]> exit\nBye\n\n\nInitial configuration\n# mysql_secure_installation\n/usr/bin/mysql_secure_installation: line 379: find_mysql_client: command not found\n\nNOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB\n      SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\n\nIn order to log into MariaDB to secure it, we'll need the current\npassword for the root user.  If you've just installed MariaDB, and\nyou haven't set the root password yet, the password will be blank,\nso you should just press enter here.\n\nEnter current password for root (enter for none):\nOK, successfully used password, moving on...\n\nSetting the root password ensures that nobody can log into the MariaDB\nroot user without the proper authorisation.\n\nSet root password? [Y/n] y\nNew password:\nRe-enter new password:\nPassword updated successfully!\nReloading privilege tables..\n ... Success!\n\n\nBy default, a MariaDB installation has an anonymous user, allowing anyone\nto log into MariaDB without having to have a user account created for\nthem.  This is intended only for testing, and to make the installation\ngo a bit smoother.  You should remove them before moving into a\nproduction environment.\n\nRemove anonymous users? [Y/n] y\n ... Success!\n\nNormally, root should only be allowed to connect from 'localhost'.  This\nensures that someone cannot guess at the root password from the network.\n\nDisallow root login remotely? [Y/n] y\n ... Success!\n\nBy default, MariaDB comes with a database named 'test' that anyone can\naccess.  This is also intended only for testing, and should be removed\nbefore moving into a production environment.\n\nRemove test database and access to it? [Y/n] y\n - Dropping test database...\n ... Success!\n - Removing privileges on test database...\n ... Success!\n\nReloading the privilege tables will ensure that all changes made so far\nwill take effect immediately.\n\nReload privilege tables now? [Y/n] y\n ... Success!\n\nCleaning up...\n\nAll done!  If you've completed all of the above steps, your MariaDB\ninstallation should now be secure.\n\nThanks for using MariaDB!\n\n\nCreate db and user\n# mysql -uroot -p\nMariaDB [(none)]> create database db_redmine default character set utf8;\nQuery OK, 1 row affected (0.00 sec)\n\nMariaDB [(none)]> grant all on db_redmine.* to user_redmine@localhost identified by '<PASSWORD>';\nQuery OK, 0 rows affected (0.00 sec)\n\nMariaDB [(none)]> flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n\nMariaDB [(none)]> exit;\nBye\n\n\nInstall Redmine\n\nSet subversion proxy\n# vi ~/.subversion/servers\n    [global]\n    http-proxy-host = <PROXY_SERVER>\n    http-proxy-port = <PROXY_SERVER_PORT>\n\n\nDownload redmine\n# svn co http://svn.redmine.org/redmine/branches/3.1-stable /var/lib/redmine\n\n\nConfiguration\n# pwd\n/var/lib/redmine/config\n\n# cat database.yml\nproduction:\n  adapter: mysql2\n  database: db_redmine\n  host: localhost\n  username: user_redmine\n  password: \"<PASSWORD>\"\n  encoding: utf8\n\n# cat configuration.yml\nproduction:\n  email_delivery:\n    delivery_method: :smtp\n    smtp_settings:\n      address: <SMTP_SERVER>\n      port: <SMTP_SERVER_PORT>\n      domain: <DOMAIN>\n\n  rmagick_font_path: /usr/share/fonts/ipa-pgothic/ipagp.ttf\n\n\nInstall gem pkg\n# cd /var/lib/redmine/\n# export http_proxy=http://<PROXY_SERVER>:<PROXY_SERVER_PORT>\n# bundle install --without development test --path vendor/bundle\n\n\nRedmine initial configuration\n\nCreate private key\n# pwd\n/var/lib/redmine\n\n# bundle exec rake generate_secret_token\n\n\nCreate database table\n# RAILS_ENV=production bundle exec rake db:migrate\n\n\nAdd default data\n# RAILS_ENV=production REDMINE_LANG=ja bundle exec rake redmine:load_default_data\n\n\nPassenger configuration\n\nInstall Passenger\n# gem install passenger --no-rdoc --no-ri\n\n\nInstall Apache module\n# passenger-install-apache2-module --auto\n\n\nApache configuration\n\nOutput Apache configuration to use Passenger, Copy the ouput to clipboard\nThe output is different, depend on your environment.\n# passenger-install-apache2-module --snippet\nLoadModule passenger_module /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15/buildout/apache2/mod_passenger.so\n<IfModule mod_passenger.c>\n  PassengerRoot /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15\n  PassengerDefaultRuby /usr/local/bin/ruby\n</IfModule>\n\n\nPaste the above output to Apache configuration\n# pwd\n    /etc/httpd/conf.d\n\n# cat redmine.conf\n    <Directory \"/var/lib/redmine/public\">\n      Require all granted\n    </Directory>\n\n    LoadModule passenger_module /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15/buildout/apache2/mod_passenger.so\n    <IfModule mod_passenger.c>\n      PassengerRoot /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15\n      PassengerDefaultRuby /usr/local/bin/ruby\n    </IfModule>\n\n    # Header\n    Header always unset \"X-Powered-By\"\n    Header always unset \"X-Runtime\"\n\n    # Phusion Passenger users guide\n    # http://www.modrails.com/documentation/Users%20guide%20Apache.html\n    PassengerMaxPoolSize 20\n    PassengerMaxInstancesPerApp 4\n    PassengerPoolIdleTime 864000\n    PassengerHighPerformance on\n    PassengerStatThrottleRate 10\n    PassengerSpawnMethod smart\n    PassengerFriendlyErrorPages off\n\n\nConfiguration for starting apache with passenger\n# chown -R apache:apache /var/lib/redmine\n\n# pwd\n/etc/httpd/conf\n\n# diff httpd.conf.org httpd.conf\n95c95\n< #ServerName www.example.com:80\n---\n> ServerName <HOSTNAME>:<PORT>\n119c119\n< DocumentRoot \"/var/www/html\"\n---\n> DocumentRoot \"/var/lib/redmine/public\"\n\n\nStart apache service\n# service httpd configtest\nSyntax OK\n\n# service httpd restart\nRedirecting to /bin/systemctl restart  httpd.service\n\n\nAccess to Redmine UI\nhttp://x.x.x.x\ndefault login account\n\nid : admin\npw : admin\n\n\nEnvironment\n\nOS\n# cat /etc/redhat-release\nCentOS Linux release 7.1.1503 (Core)\n\n\nRedmine\n# /var/lib/redmine/bin/about\n\nEnvironment:\n  Redmine version                3.1.0.stable.14480\n  Ruby version                   2.2.2-p95 (2015-04-13) [x86_64-linux]\n  Rails version                  4.2.3\n  Environment                    production\n  Database adapter               Mysql2\nSCM:\n  Subversion                     1.7.14\n  Git                            1.8.3.1\n  Filesystem\nRedmine plugins:\n  redmine_absolute_dates         0.0.2\n  redmine_slack                  0.1\n\n\nApache\n# httpd -v\nServer version: Apache/2.4.6 (CentOS)\nServer built:   Mar 12 2015 15:07:19\n\n\nMariaDB\n# mysqladmin -u root -p'password' version | grep version\nServer version      5.5.41-MariaDB\nProtocol version    10\n\n\nReference\nhttp://blog.redmine.jp/articles/3_1/installation_centos/\n## OS Configuration\n\n##### Disable SELinux\n\n    # sed -i -e 's/^SELINUX=.*/SELINUX=disabled/' /etc/sysconfig/selinux\n    # reboot\n\n##### Add http permit firewall policy\n\n    # systemctl list-units --type=service | grep firewalld\n    firewalld.service                  loaded active running firewalld - dynamic firewall daemon\n\n    # firewall-cmd --zone=public --list-services\n    ssh\n\n    # firewall-cmd --zone=public --add-service=http --permanent\n    success\n\n    # firewall-cmd --reload\n    success\n\n    # firewall-cmd --zone=public --list-services\n    http ssh\n\n## Install PKGs\n\n##### dev tool, header...etc\n\n    # yum -y groupinstall \"Development Tools\"\n    # yum -y install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel libffi-devel\n\n##### mariadb\n\n    # yum -y install mariadb-server mariadb-devel\n\n##### apache\n\n    # yum -y install httpd httpd-devel\n\n##### Image Magick\n\n    # yum -y install ImageMagick ImageMagick-devel ipa-pgothic-fonts\n\n## Build Ruby\n\n##### download src\n\n    # curl -O https://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.2.tar.gz\n\n##### build\n\n    # tar xvf ruby-2.2.2.tar.gz\n    # cd ruby-2.2.2\n    # ./configure --disable-install-doc\n    # make\n    # make install\n    # cd ..\n    # ruby -v\n    ruby 2.2.2p95 (2015-04-13 revision 50295) [x86_64-linux]\n\n## Install bundler\n\n    # export http_proxy=http://<PROXY_SERVER>:<PROXY_SERVER_PORT>\n\n    # gem install bundler --no-rdoc --no-ri\n    Fetching: bundler-1.10.6.gem (100%)\n    Successfully installed bundler-1.10.6\n    1 gem installed\n\n    # unset http_proxy\n\n\n## Install MariaDB\n\n##### Set default charset as utf8\n\n    # pwd\n    /etc\n\n    # diff my.cnf.org my.cnf\n    10a11,12\n    > character-set-server=utf8\n    >\n    19a22,23\n    > [mysql]\n    > default-character-set=utf8\n\n\n##### Start mariadb service\n\n    # service mariadb start\n    Redirecting to /bin/systemctl start  mariadb.service\n\n    # systemctl enable mariadb\n    ln -s '/usr/lib/systemd/system/mariadb.service' '/etc/systemd/system/multi-user.target.wants/mariadb.service'\n\n##### Check status\n\n    # mysql -uroot\n\n    MariaDB [(none)]> show variables like 'character_set%';\n    +--------------------------+----------------------------+\n    | Variable_name            | Value                      |\n    +--------------------------+----------------------------+\n    | character_set_client     | utf8                       |\n    | character_set_connection | utf8                       |\n    | character_set_database   | utf8                       |\n    | character_set_filesystem | binary                     |\n    | character_set_results    | utf8                       |\n    | character_set_server     | utf8                       |\n    | character_set_system     | utf8                       |\n    | character_sets_dir       | /usr/share/mysql/charsets/ |\n    +--------------------------+----------------------------+\n    8 rows in set (0.01 sec)\n\n    MariaDB [(none)]> exit\n    Bye\n\n\n##### Initial configuration\n\n    # mysql_secure_installation\n    /usr/bin/mysql_secure_installation: line 379: find_mysql_client: command not found\n\n    NOTE: RUNNING ALL PARTS OF THIS SCRIPT IS RECOMMENDED FOR ALL MariaDB\n          SERVERS IN PRODUCTION USE!  PLEASE READ EACH STEP CAREFULLY!\n\n    In order to log into MariaDB to secure it, we'll need the current\n    password for the root user.  If you've just installed MariaDB, and\n    you haven't set the root password yet, the password will be blank,\n    so you should just press enter here.\n\n    Enter current password for root (enter for none):\n    OK, successfully used password, moving on...\n\n    Setting the root password ensures that nobody can log into the MariaDB\n    root user without the proper authorisation.\n\n    Set root password? [Y/n] y\n    New password:\n    Re-enter new password:\n    Password updated successfully!\n    Reloading privilege tables..\n     ... Success!\n\n\n    By default, a MariaDB installation has an anonymous user, allowing anyone\n    to log into MariaDB without having to have a user account created for\n    them.  This is intended only for testing, and to make the installation\n    go a bit smoother.  You should remove them before moving into a\n    production environment.\n\n    Remove anonymous users? [Y/n] y\n     ... Success!\n\n    Normally, root should only be allowed to connect from 'localhost'.  This\n    ensures that someone cannot guess at the root password from the network.\n\n    Disallow root login remotely? [Y/n] y\n     ... Success!\n\n    By default, MariaDB comes with a database named 'test' that anyone can\n    access.  This is also intended only for testing, and should be removed\n    before moving into a production environment.\n\n    Remove test database and access to it? [Y/n] y\n     - Dropping test database...\n     ... Success!\n     - Removing privileges on test database...\n     ... Success!\n\n    Reloading the privilege tables will ensure that all changes made so far\n    will take effect immediately.\n\n    Reload privilege tables now? [Y/n] y\n     ... Success!\n\n    Cleaning up...\n\n    All done!  If you've completed all of the above steps, your MariaDB\n    installation should now be secure.\n\n    Thanks for using MariaDB!\n\n\n##### Create db and user\n\n    # mysql -uroot -p\n    MariaDB [(none)]> create database db_redmine default character set utf8;\n    Query OK, 1 row affected (0.00 sec)\n\n    MariaDB [(none)]> grant all on db_redmine.* to user_redmine@localhost identified by '<PASSWORD>';\n    Query OK, 0 rows affected (0.00 sec)\n\n    MariaDB [(none)]> flush privileges;\n    Query OK, 0 rows affected (0.00 sec)\n\n    MariaDB [(none)]> exit;\n    Bye\n\n\n## Install Redmine\n\n##### Set subversion proxy\n\n    # vi ~/.subversion/servers\n        [global]\n        http-proxy-host = <PROXY_SERVER>\n        http-proxy-port = <PROXY_SERVER_PORT>\n\n##### Download redmine\n\n    # svn co http://svn.redmine.org/redmine/branches/3.1-stable /var/lib/redmine\n\n##### Configuration\n\n    # pwd\n    /var/lib/redmine/config\n\n    # cat database.yml\n    production:\n      adapter: mysql2\n      database: db_redmine\n      host: localhost\n      username: user_redmine\n      password: \"<PASSWORD>\"\n      encoding: utf8\n\n    # cat configuration.yml\n    production:\n      email_delivery:\n        delivery_method: :smtp\n        smtp_settings:\n          address: <SMTP_SERVER>\n          port: <SMTP_SERVER_PORT>\n          domain: <DOMAIN>\n\n      rmagick_font_path: /usr/share/fonts/ipa-pgothic/ipagp.ttf\n\n##### Install gem pkg\n\n    # cd /var/lib/redmine/\n    # export http_proxy=http://<PROXY_SERVER>:<PROXY_SERVER_PORT>\n    # bundle install --without development test --path vendor/bundle\n\n\n## Redmine initial configuration\n\n##### Create private key\n\n    # pwd\n    /var/lib/redmine\n\n    # bundle exec rake generate_secret_token\n\n##### Create database table\n\n    # RAILS_ENV=production bundle exec rake db:migrate\n\n##### Add default data\n\n    # RAILS_ENV=production REDMINE_LANG=ja bundle exec rake redmine:load_default_data\n\n\n## Passenger configuration\n\n##### Install Passenger\n\n    # gem install passenger --no-rdoc --no-ri\n\n##### Install Apache module\n\n    # passenger-install-apache2-module --auto\n\n\n## Apache configuration\n\n##### Output Apache configuration to use Passenger, Copy the ouput to clipboard\n\nThe output is different, depend on your environment.\n\n    # passenger-install-apache2-module --snippet\n    LoadModule passenger_module /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15/buildout/apache2/mod_passenger.so\n    <IfModule mod_passenger.c>\n      PassengerRoot /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15\n      PassengerDefaultRuby /usr/local/bin/ruby\n    </IfModule>\n\n##### Paste the above output to Apache configuration\n\n    # pwd\n        /etc/httpd/conf.d\n\n    # cat redmine.conf\n        <Directory \"/var/lib/redmine/public\">\n          Require all granted\n        </Directory>\n\n        LoadModule passenger_module /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15/buildout/apache2/mod_passenger.so\n        <IfModule mod_passenger.c>\n          PassengerRoot /usr/local/lib/ruby/gems/2.2.0/gems/passenger-5.0.15\n          PassengerDefaultRuby /usr/local/bin/ruby\n        </IfModule>\n\n        # Header\n        Header always unset \"X-Powered-By\"\n        Header always unset \"X-Runtime\"\n\n        # Phusion Passenger users guide\n        # http://www.modrails.com/documentation/Users%20guide%20Apache.html\n        PassengerMaxPoolSize 20\n        PassengerMaxInstancesPerApp 4\n        PassengerPoolIdleTime 864000\n        PassengerHighPerformance on\n        PassengerStatThrottleRate 10\n        PassengerSpawnMethod smart\n        PassengerFriendlyErrorPages off\n\n##### Configuration for starting apache with passenger\n\n    # chown -R apache:apache /var/lib/redmine\n\n    # pwd\n    /etc/httpd/conf\n\n    # diff httpd.conf.org httpd.conf\n    95c95\n    < #ServerName www.example.com:80\n    ---\n    > ServerName <HOSTNAME>:<PORT>\n    119c119\n    < DocumentRoot \"/var/www/html\"\n    ---\n    > DocumentRoot \"/var/lib/redmine/public\"\n\n\n##### Start apache service\n\n    # service httpd configtest\n    Syntax OK\n\n    # service httpd restart\n    Redirecting to /bin/systemctl restart  httpd.service\n\n## Access to Redmine UI\n\nhttp://x.x.x.x\n\ndefault login account\n\n* id : admin\n* pw : admin\n\n## Environment\n\n##### OS\n\n    # cat /etc/redhat-release\n    CentOS Linux release 7.1.1503 (Core)\n\n##### Redmine\n\n    # /var/lib/redmine/bin/about\n\n    Environment:\n      Redmine version                3.1.0.stable.14480\n      Ruby version                   2.2.2-p95 (2015-04-13) [x86_64-linux]\n      Rails version                  4.2.3\n      Environment                    production\n      Database adapter               Mysql2\n    SCM:\n      Subversion                     1.7.14\n      Git                            1.8.3.1\n      Filesystem\n    Redmine plugins:\n      redmine_absolute_dates         0.0.2\n      redmine_slack                  0.1\n\n##### Apache\n\n    # httpd -v\n    Server version: Apache/2.4.6 (CentOS)\n    Server built:   Mar 12 2015 15:07:19\n\n##### MariaDB\n\n    # mysqladmin -u root -p'password' version | grep version\n    Server version      5.5.41-MariaDB\n    Protocol version    10\n\n## Reference\n\n[http://blog.redmine.jp/articles/3_1/installation_centos/][link-01]\n\n\n[link-01]:http://blog.redmine.jp/articles/3_1/installation_centos/\n\n\n\n"}