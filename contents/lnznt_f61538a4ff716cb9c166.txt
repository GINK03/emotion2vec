{"context": " More than 1 year has passed since last update.\u300cCoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\u300d\u3092\u3057\u307e\u3057\u305f\u3002\u3002\u3002\u3053\u308c\u3063\u3066\u3001\u534a\u5e74\u304f\u3089\u3044\u524d\u306b\u30d6\u30fc\u30e0\u3060\u3063\u305f\u3093\u3067\u3059\u306d\u3002\n\u65e2\u306b\u30d6\u30fc\u30e0\u306f\u53bb\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6c17\u306b\u305b\u305a\u6295\u7a3f\u3002\n\n\u203b\u30d6\u30e9\u30a6\u30b6\uff1a Chromium \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.65 Ubuntu 14.04 (64-bit)\n\nJavaScript \u306f CoffeeScript \u3067\u8a18\u8ff0\u3002jQuery \u3092\u4f7f\u7528\u3002Canvas \u306b\u63cf\u753b\u3002\n\nmyscript.coffee\n$ ->\n  # \u4e71\u6570\n  rand = (max = 0xff, min = 0) -> min + Math.random() * (max - min + 1) | 0  \n\n  #\n  # ---- Canvas ---------------------------------------------\n  #\n  plotter = (color = (() -> [0, 0xff, 0, 0xff]), canvas = $('canvas')[0]) ->\n    ctx = canvas.getContext '2d'\n    img = ctx.createImageData canvas.width, canvas.height\n\n    put_pixel = (x, y, rgba) ->\n      offset = (x * 4) + (y * canvas.width * 4)\n      rgba.forEach (c, i) -> img.data[offset + i] = c\n\n    put: (xy, rgba = color()) ->\n      x = xy[0] * (+1) * (canvas.width  - 10) + (canvas.width / 2) |0\n      y = xy[1] * (-1) * (canvas.height - 10) + (canvas.height   ) |0\n      put_pixel x, y, rgba\n      this\n\n    plot: (g) ->\n      g.apply null, [this.put].concat([].slice.call arguments, 1)\n      this\n\n    clear: (rgba = [0,0,0,0]) ->\n      [0...canvas.width].forEach (x) ->\n        [0...canvas.height].forEach (y) -> put_pixel x, y, rgba\n      this\n\n    show: () ->\n      ctx.putImageData img, 0, 0\n      this\n\n  #\n  # ---- \u300c\u30b7\u30c0\u300d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 ----------------------------\n  #\n  fern = (callback = (() ->), k = 20) ->\n    w1x = (x, y) ->  0.836 * x + 0.044 * y\n    w1y = (x, y) -> -0.044 * x + 0.836 * y + 0.169\n    w2x = (x, y) -> -0.141 * x + 0.302 * y\n    w2y = (x, y) ->  0.302 * x + 0.141 * y + 0.127\n    w3x = (x, y) ->  0.141 * x - 0.302 * y\n    w3y = (x, y) ->  0.302 * x + 0.141 * y + 0.169\n    w4x = (x, y) ->  0.0\n    w4y = (x, y) ->  0.175337 * y\n\n    f = (k, x, y) ->\n      if 0 < k\n        f(k - 1, w1x(x, y), w1y(x, y))\n        f(k - 1, w2x(x, y), w2y(x, y)) if Math.random() < 0.3\n        f(k - 1, w3x(x, y), w3y(x, y)) if Math.random() < 0.3\n        f(k - 1, w4x(x, y), w4y(x, y)) if Math.random() < 0.3\n      else \n        callback [x, y]\n\n    f(k, 0, 0)\n\n  #\n  # ---- \u63cf\u753b\u306e\u5b9f\u884c -----------------------------------------\n  #\n  console.log '\u63cf\u753b\u958b\u59cb'\n\n  color = () -> [rand()/4, rand(), rand()/2, 0xff - rand()/8]\n\n  plotter color     # \u3053\u3053\u3092 plotter() \u306b\u3059\u308b\u3068\u7dd1\u5358\u8272(\u30c7\u30d5\u30a9\u30eb\u30c8)\u306b\u306a\u308b\n    .clear()\n    .plot fern\n    .show()\n\n  console.log '\u63cf\u753b\u7d42\u4e86'\n\n\n\nHTML \u306f Haml \u3067\u8a18\u8ff0\u3002\n\nsample.haml\n!!!\n%meta(charset=\"UTF-8\")\n%title #{@title=\"CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\"}\n\n%h1 #{@title}\n%canvas(width=\"500\" height=\"500\" style=\"background-color: #000000;\")\n  \u3053\u306e\u30d6\u30e9\u30a6\u30b6\u306f HTML5 Canvas \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n%script(src=\"//code.jquery.com/jquery-1.11.1.min.js\")\n%script(src=\"myscript.js\")\n\n\n\nHaml -> HTML\u3001CoffeeScript -> JavaScript \u3078\u306e\u5909\u63db\u3002\n$ haml -q sample.haml sample.html   # 'sample.html' \u304c\u751f\u6210\u3055\u308c\u308b\n$ coffee -c myscript.coffee         # 'myscript.js' \u304c\u751f\u6210\u3055\u308c\u308b\n\n\u5909\u63db\u5f8c\u306e HTML \u3068 JavaScript\n\nsample.html\n<!DOCTYPE html>\n<meta charset=\"UTF-8\">\n<title>CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b</title>\n<h1>CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b</h1>\n<canvas height=\"500\" style=\"background-color: #000000;\" width=\"500\">\n  \u3053\u306e\u30d6\u30e9\u30a6\u30b6\u306f HTML5 Canvas \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n</canvas>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<script src=\"myscript.js\"></script>\n\n\n\nmyscript.js\n// Generated by CoffeeScript 1.8.0\n$(function() {\n  var color, fern, plotter, rand;\n  rand = function(max, min) {\n    if (max == null) {\n      max = 0xff;\n    }\n    if (min == null) {\n      min = 0;\n    }\n    return min + Math.random() * (max - min + 1) | 0;\n  };\n  plotter = function(color, canvas) {\n    var ctx, img, put_pixel;\n    if (color == null) {\n      color = (function() {\n        return [0, 0xff, 0, 0xff];\n      });\n    }\n    if (canvas == null) {\n      canvas = $('canvas')[0];\n    }\n    ctx = canvas.getContext('2d');\n    img = ctx.createImageData(canvas.width, canvas.height);\n    put_pixel = function(x, y, rgba) {\n      var offset;\n      offset = (x * 4) + (y * canvas.width * 4);\n      return rgba.forEach(function(c, i) {\n        return img.data[offset + i] = c;\n      });\n    };\n    return {\n      put: function(xy, rgba) {\n        var x, y;\n        if (rgba == null) {\n          rgba = color();\n        }\n        x = xy[0] * (+1) * (canvas.width - 10) + (canvas.width / 2) | 0;\n        y = xy[1] * (-1) * (canvas.height - 10) + canvas.height | 0;\n        put_pixel(x, y, rgba);\n        return this;\n      },\n      plot: function(g) {\n        g.apply(null, [this.put].concat([].slice.call(arguments, 1)));\n        return this;\n      },\n      clear: function(rgba) {\n        var _i, _ref, _results;\n        if (rgba == null) {\n          rgba = [0, 0, 0, 0];\n        }\n        (function() {\n          _results = [];\n          for (var _i = 0, _ref = canvas.width; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this).forEach(function(x) {\n          var _i, _ref, _results;\n          return (function() {\n            _results = [];\n            for (var _i = 0, _ref = canvas.height; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n            return _results;\n          }).apply(this).forEach(function(y) {\n            return put_pixel(x, y, rgba);\n          });\n        });\n        return this;\n      },\n      show: function() {\n        ctx.putImageData(img, 0, 0);\n        return this;\n      }\n    };\n  };\n  fern = function(callback, k) {\n    var f, w1x, w1y, w2x, w2y, w3x, w3y, w4x, w4y;\n    if (callback == null) {\n      callback = (function() {});\n    }\n    if (k == null) {\n      k = 20;\n    }\n    w1x = function(x, y) {\n      return 0.836 * x + 0.044 * y;\n    };\n    w1y = function(x, y) {\n      return -0.044 * x + 0.836 * y + 0.169;\n    };\n    w2x = function(x, y) {\n      return -0.141 * x + 0.302 * y;\n    };\n    w2y = function(x, y) {\n      return 0.302 * x + 0.141 * y + 0.127;\n    };\n    w3x = function(x, y) {\n      return 0.141 * x - 0.302 * y;\n    };\n    w3y = function(x, y) {\n      return 0.302 * x + 0.141 * y + 0.169;\n    };\n    w4x = function(x, y) {\n      return 0.0;\n    };\n    w4y = function(x, y) {\n      return 0.175337 * y;\n    };\n    f = function(k, x, y) {\n      if (0 < k) {\n        f(k - 1, w1x(x, y), w1y(x, y));\n        if (Math.random() < 0.3) {\n          f(k - 1, w2x(x, y), w2y(x, y));\n        }\n        if (Math.random() < 0.3) {\n          f(k - 1, w3x(x, y), w3y(x, y));\n        }\n        if (Math.random() < 0.3) {\n          return f(k - 1, w4x(x, y), w4y(x, y));\n        }\n      } else {\n        return callback([x, y]);\n      }\n    };\n    return f(k, 0, 0);\n  };\n  console.log('\u63cf\u753b\u958b\u59cb');\n  color = function() {\n    return [rand() / 4, rand(), rand() / 2, 0xff - rand() / 8];\n  };\n  plotter(color).clear().plot(fern).show();\n  return console.log('\u63cf\u753b\u7d42\u4e86');\n});\n\n\n\n\u78ba\u8a8d\u3057\u305f\u30d6\u30e9\u30a6\u30b6\n\nChromium \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.65 Ubuntu 14.04 (64-bit) [Ubuntu Linux 14.04]\nFirefox 34.0 Mozilla Firefox for Ubuntu canonical - 1.0 [Ubuntu Linux 14.04]\nGoogle Chrome \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.95 (64-bit) [Mac OS X 10.10.1 Yosemite]\nSafari \u30d0\u30fc\u30b8\u30e7\u30f3 8.0.2 (10600.2.5) [Mac OS X 10.10.1 Yosemite]\nSafari [iOS 8.1.2]\n\n\u300cCoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\u300d\u3092\u3057\u307e\u3057\u305f\u3002\u3002\u3002\u3053\u308c\u3063\u3066\u3001\u534a\u5e74\u304f\u3089\u3044\u524d\u306b\u30d6\u30fc\u30e0\u3060\u3063\u305f\u3093\u3067\u3059\u306d\u3002\n\u65e2\u306b\u30d6\u30fc\u30e0\u306f\u53bb\u3063\u3066\u3044\u308b\u3088\u3046\u3067\u3059\u304c\u3001\u6c17\u306b\u305b\u305a\u6295\u7a3f\u3002\n\n![shida.png](https://qiita-image-store.s3.amazonaws.com/0/60624/342dfe09-50dd-89ac-a92c-19ede5171239.png)\n\n\u203b\u30d6\u30e9\u30a6\u30b6\uff1a Chromium \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.65 Ubuntu 14.04 (64-bit)\n\n---\nJavaScript \u306f CoffeeScript \u3067\u8a18\u8ff0\u3002jQuery \u3092\u4f7f\u7528\u3002Canvas \u306b\u63cf\u753b\u3002\n\n```coffeescript:myscript.coffee\n$ ->\n  # \u4e71\u6570\n  rand = (max = 0xff, min = 0) -> min + Math.random() * (max - min + 1) | 0  \n\n  #\n  # ---- Canvas ---------------------------------------------\n  #\n  plotter = (color = (() -> [0, 0xff, 0, 0xff]), canvas = $('canvas')[0]) ->\n    ctx = canvas.getContext '2d'\n    img = ctx.createImageData canvas.width, canvas.height\n\n    put_pixel = (x, y, rgba) ->\n      offset = (x * 4) + (y * canvas.width * 4)\n      rgba.forEach (c, i) -> img.data[offset + i] = c\n\n    put: (xy, rgba = color()) ->\n      x = xy[0] * (+1) * (canvas.width  - 10) + (canvas.width / 2) |0\n      y = xy[1] * (-1) * (canvas.height - 10) + (canvas.height   ) |0\n      put_pixel x, y, rgba\n      this\n\n    plot: (g) ->\n      g.apply null, [this.put].concat([].slice.call arguments, 1)\n      this\n\n    clear: (rgba = [0,0,0,0]) ->\n      [0...canvas.width].forEach (x) ->\n        [0...canvas.height].forEach (y) -> put_pixel x, y, rgba\n      this\n\n    show: () ->\n      ctx.putImageData img, 0, 0\n      this\n\n  #\n  # ---- \u300c\u30b7\u30c0\u300d\u306e\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0 ----------------------------\n  #\n  fern = (callback = (() ->), k = 20) ->\n    w1x = (x, y) ->  0.836 * x + 0.044 * y\n    w1y = (x, y) -> -0.044 * x + 0.836 * y + 0.169\n    w2x = (x, y) -> -0.141 * x + 0.302 * y\n    w2y = (x, y) ->  0.302 * x + 0.141 * y + 0.127\n    w3x = (x, y) ->  0.141 * x - 0.302 * y\n    w3y = (x, y) ->  0.302 * x + 0.141 * y + 0.169\n    w4x = (x, y) ->  0.0\n    w4y = (x, y) ->  0.175337 * y\n\n    f = (k, x, y) ->\n      if 0 < k\n        f(k - 1, w1x(x, y), w1y(x, y))\n        f(k - 1, w2x(x, y), w2y(x, y)) if Math.random() < 0.3\n        f(k - 1, w3x(x, y), w3y(x, y)) if Math.random() < 0.3\n        f(k - 1, w4x(x, y), w4y(x, y)) if Math.random() < 0.3\n      else \n        callback [x, y]\n\n    f(k, 0, 0)\n\n  #\n  # ---- \u63cf\u753b\u306e\u5b9f\u884c -----------------------------------------\n  #\n  console.log '\u63cf\u753b\u958b\u59cb'\n\n  color = () -> [rand()/4, rand(), rand()/2, 0xff - rand()/8]\n\n  plotter color     # \u3053\u3053\u3092 plotter() \u306b\u3059\u308b\u3068\u7dd1\u5358\u8272(\u30c7\u30d5\u30a9\u30eb\u30c8)\u306b\u306a\u308b\n    .clear()\n    .plot fern\n    .show()\n\n  console.log '\u63cf\u753b\u7d42\u4e86'\n```\n\n---\n\nHTML \u306f Haml \u3067\u8a18\u8ff0\u3002\n\n```haml:sample.haml\n!!!\n%meta(charset=\"UTF-8\")\n%title #{@title=\"CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b\"}\n\n%h1 #{@title}\n%canvas(width=\"500\" height=\"500\" style=\"background-color: #000000;\")\n  \u3053\u306e\u30d6\u30e9\u30a6\u30b6\u306f HTML5 Canvas \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n\n%script(src=\"//code.jquery.com/jquery-1.11.1.min.js\")\n%script(src=\"myscript.js\")\n```\n\n---\n\nHaml -> HTML\u3001CoffeeScript -> JavaScript \u3078\u306e\u5909\u63db\u3002\n\n```shell-session\n$ haml -q sample.haml sample.html   # 'sample.html' \u304c\u751f\u6210\u3055\u308c\u308b\n$ coffee -c myscript.coffee         # 'myscript.js' \u304c\u751f\u6210\u3055\u308c\u308b\n```\n\n\u5909\u63db\u5f8c\u306e HTML \u3068 JavaScript\n\n```html:sample.html\n<!DOCTYPE html>\n<meta charset=\"UTF-8\">\n<title>CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b</title>\n<h1>CoffeeScript \u3067\u30b7\u30c0\u3092\u63cf\u753b\u3059\u308b</h1>\n<canvas height=\"500\" style=\"background-color: #000000;\" width=\"500\">\n  \u3053\u306e\u30d6\u30e9\u30a6\u30b6\u306f HTML5 Canvas \u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u305b\u3093\u3002\n</canvas>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<script src=\"myscript.js\"></script>\n```\n```js:myscript.js\n// Generated by CoffeeScript 1.8.0\n$(function() {\n  var color, fern, plotter, rand;\n  rand = function(max, min) {\n    if (max == null) {\n      max = 0xff;\n    }\n    if (min == null) {\n      min = 0;\n    }\n    return min + Math.random() * (max - min + 1) | 0;\n  };\n  plotter = function(color, canvas) {\n    var ctx, img, put_pixel;\n    if (color == null) {\n      color = (function() {\n        return [0, 0xff, 0, 0xff];\n      });\n    }\n    if (canvas == null) {\n      canvas = $('canvas')[0];\n    }\n    ctx = canvas.getContext('2d');\n    img = ctx.createImageData(canvas.width, canvas.height);\n    put_pixel = function(x, y, rgba) {\n      var offset;\n      offset = (x * 4) + (y * canvas.width * 4);\n      return rgba.forEach(function(c, i) {\n        return img.data[offset + i] = c;\n      });\n    };\n    return {\n      put: function(xy, rgba) {\n        var x, y;\n        if (rgba == null) {\n          rgba = color();\n        }\n        x = xy[0] * (+1) * (canvas.width - 10) + (canvas.width / 2) | 0;\n        y = xy[1] * (-1) * (canvas.height - 10) + canvas.height | 0;\n        put_pixel(x, y, rgba);\n        return this;\n      },\n      plot: function(g) {\n        g.apply(null, [this.put].concat([].slice.call(arguments, 1)));\n        return this;\n      },\n      clear: function(rgba) {\n        var _i, _ref, _results;\n        if (rgba == null) {\n          rgba = [0, 0, 0, 0];\n        }\n        (function() {\n          _results = [];\n          for (var _i = 0, _ref = canvas.width; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n          return _results;\n        }).apply(this).forEach(function(x) {\n          var _i, _ref, _results;\n          return (function() {\n            _results = [];\n            for (var _i = 0, _ref = canvas.height; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }\n            return _results;\n          }).apply(this).forEach(function(y) {\n            return put_pixel(x, y, rgba);\n          });\n        });\n        return this;\n      },\n      show: function() {\n        ctx.putImageData(img, 0, 0);\n        return this;\n      }\n    };\n  };\n  fern = function(callback, k) {\n    var f, w1x, w1y, w2x, w2y, w3x, w3y, w4x, w4y;\n    if (callback == null) {\n      callback = (function() {});\n    }\n    if (k == null) {\n      k = 20;\n    }\n    w1x = function(x, y) {\n      return 0.836 * x + 0.044 * y;\n    };\n    w1y = function(x, y) {\n      return -0.044 * x + 0.836 * y + 0.169;\n    };\n    w2x = function(x, y) {\n      return -0.141 * x + 0.302 * y;\n    };\n    w2y = function(x, y) {\n      return 0.302 * x + 0.141 * y + 0.127;\n    };\n    w3x = function(x, y) {\n      return 0.141 * x - 0.302 * y;\n    };\n    w3y = function(x, y) {\n      return 0.302 * x + 0.141 * y + 0.169;\n    };\n    w4x = function(x, y) {\n      return 0.0;\n    };\n    w4y = function(x, y) {\n      return 0.175337 * y;\n    };\n    f = function(k, x, y) {\n      if (0 < k) {\n        f(k - 1, w1x(x, y), w1y(x, y));\n        if (Math.random() < 0.3) {\n          f(k - 1, w2x(x, y), w2y(x, y));\n        }\n        if (Math.random() < 0.3) {\n          f(k - 1, w3x(x, y), w3y(x, y));\n        }\n        if (Math.random() < 0.3) {\n          return f(k - 1, w4x(x, y), w4y(x, y));\n        }\n      } else {\n        return callback([x, y]);\n      }\n    };\n    return f(k, 0, 0);\n  };\n  console.log('\u63cf\u753b\u958b\u59cb');\n  color = function() {\n    return [rand() / 4, rand(), rand() / 2, 0xff - rand() / 8];\n  };\n  plotter(color).clear().plot(fern).show();\n  return console.log('\u63cf\u753b\u7d42\u4e86');\n});\n```\n\n---\n\u78ba\u8a8d\u3057\u305f\u30d6\u30e9\u30a6\u30b6\n\n- Chromium \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.65 Ubuntu 14.04 (64-bit) [Ubuntu Linux 14.04]\n- Firefox 34.0 Mozilla Firefox for Ubuntu canonical - 1.0 [Ubuntu Linux 14.04]\n- Google Chrome \u30d0\u30fc\u30b8\u30e7\u30f3 39.0.2171.95 (64-bit) [Mac OS X 10.10.1 Yosemite]\n- Safari \u30d0\u30fc\u30b8\u30e7\u30f3 8.0.2 (10600.2.5) [Mac OS X 10.10.1 Yosemite]\n- Safari [iOS 8.1.2]\n\n", "tags": ["CoffeeScript", "\u30b7\u30c0", "canvas", "HTML5", "haml"]}