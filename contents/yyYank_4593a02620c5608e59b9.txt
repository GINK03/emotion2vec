{"context": "libGDX\u5185\u306b\u306f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u304c\u3044\u304f\u3064\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u672c\u5f53\u306b\u4fbf\u5229\u306a\u306e\u304b\u3069\u3046\u304b\u3002\u3002\u3002\u3068\u3044\u3046\u8abf\u67fb\u3092\u542b\u3081\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u307e\u3068\u3081\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\n1.9.5\n\n\u5bfe\u8c61\u30d1\u30c3\u30b1\u30fc\u30b8\ncom.balogic.gdx.utils\n\u3068\u308a\u3042\u3048\u305aUtils\u7cfb\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\nNumberUtils\n\nIEEE 754\u306b\u6e96\u62e0\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u95a2\u9023\u306e\u5909\u63db\u306a\u3069\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\nDouble\u3084Float\u306estatic\u30e1\u30bd\u30c3\u30c9\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u7684\u306a\u3082\u306e\u306b\u8fd1\u3044\u3067\u3059\u3002\n\u89e6\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u4f7f\u3044\u6240\u304c\u96e3\u3057\u305d\u3046\u3002\ncom.badlogic.gdx.graphics.Color\u30af\u30e9\u30b9\u306e\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\n\u8a73\u7d30\u306fFloat\u3068Double\u306ejavadoc\u898b\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\nhttps://docs.oracle.com/javase/jp/8/docs/api/java/lang/Float.html\nhttps://docs.oracle.com/javase/jp/6/api/java/lang/Double.html#doubleToLongBits(double)\n\nTimeUtils\n\nTimeUtils\u306f\u57fa\u672c\u7684\u306a\u6642\u9593\u306e\u64cd\u4f5c\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3088\u304f\u3042\u308b\u6642\u9593\u64cd\u4f5c\u3092\u5373\u5e2d\u3067\u5b9f\u88c5\u3057\u305f\u304f\u306a\u3063\u305f\u6642\u306f\u3053\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u898b\u3066\u304b\u3089\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n    // System.currentTimeMillis()\u3068\u540c\u3058\n    System.out.println(\"\u30df\u30ea\u79d2 : \" + TimeUtils.millis()); // \u30df\u30ea\u79d2 : 1484574498965\n\n    // \u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db\n    System.out.println(\"\u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db : \" + TimeUtils.millisToNanos(TimeUtils.millis())); // \u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db : 1484574498965000000\n\n    // \u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db\n    System.out.println(\"\u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db : \" + TimeUtils.nanosToMillis(TimeUtils.millisToNanos(TimeUtils.millis()))); // \u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db : 1484574498965\n\n    // \u5f15\u6570\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593(\u30df\u30ea\u79d2)\n    System.out.println(\"2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\" + TimeUtils.timeSinceMillis(TimeUtils.nanosToMillis(LocalDateTime.of(2011, 12, 5, 11, 11).getNano()))); // 2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff091484574498976\n\n    // \u5f15\u6570\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593(\u30ca\u30ce\u79d2)\n    System.out.println(\"2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09\" + TimeUtils.timeSinceNanos(LocalDateTime.of(2011, 12, 5, 11, 11).getNano())); // 2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09872694705378791\n\n\n\nPropertiesUtils\n\nPropertiesUtils\u306fkey=value\u5f62\u5f0f\u306eReader\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u60c5\u5831\u3092\u30ed\u30fc\u30c9\u3057Map\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308bUtil\u3067\u3059\u3002properties\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3067\u60c5\u5831\u3092\u6301\u3063\u3066\u7c21\u5358\u306b\u30ed\u30fc\u30c9\u304c\u51fa\u6765\u307e\u3059\u3002\n\nhoge.properties\nhoge=fuga\npiyo=piyo\nage=28\n\n\n    ObjectMap<String, String> map = new ObjectMap<>();\n    PropertiesUtils.load(map, new FileReader(Gdx.files.internal(\"hoge.properties\").file()));\n    map.forEach(System.out::println);\n\n\n\u51fa\u529b\u7d50\u679c\npiyo=piyo\nhoge=fuga\nage=28\n\n\n\nScreenUtils\n\nScreenUtils\u306f\u4e3b\u306b\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u5229\u7528\u3057\u3066\u753b\u50cf\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30fc\u30af\u30e9\u30b9\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3067\u3059\u3002\nFarmbuffer\u3068\u306f\u30fb\u30fb\u30fb\n\nA framebuffer (frame buffer, or sometimes framestore) is a portion of RAM containing a bitmap that is used to refresh a video display from a memory buffer containing a complete frame of data.\n\nhttps://en.wikipedia.org/wiki/Framebuffer\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3059\u3054\u3044\u9069\u5f53\u306b\u89e3\u91c8\u3059\u308b\u3068\u30d5\u30ec\u30fc\u30e0\u63cf\u753b\u60c5\u5831\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3050\u3089\u3044\u306b\u601d\u3063\u3066\u304a\u3051\u3070\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\uff01\n\n    //  default\u306e\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092byte[]\u3067\u8fd4\u3059\u3002\u914d\u5217\u306elength\u306fscreen width * height * 4\u3002\n    byte[] bytes = ScreenUtils.getFrameBufferPixels(true);\n\n\n    // \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3092read\u3057\u3066Pixmap\u3092\u8fd4\u3059\n    int x = 0;\n    int y = 0;\n    int width = 0;\n    int height = 0;\n    Pixmap pixmap = ScreenUtils.getFrameBufferPixmap(x, y, width, height);\n\n    // \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089Texture\u3092\u751f\u6210\u3059\u308b\n    TextureRegion region = ScreenUtils.getFrameBufferTexture();\n\n\n\u3053\u306e\u30af\u30e9\u30b9\u306flibGDX\u30a8\u30f3\u30b8\u30f3\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u5358\u7d14\u306b\u8d77\u52d5\u4e2d\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u53d6\u5f97\u5143\u304c\u306a\u3044\u3068\u30cc\u30eb\u30dd\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\nBufferUtils\n\nBufferUtils\u306f\u3001\u30d0\u30c3\u30d5\u30a1\u9818\u57df\u3092\u4f7f\u3063\u305f\u51e6\u7406\u306e\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3001copy\u3001transform\u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4e3b\u306a\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002copy\u3068transform\u30e1\u30bd\u30c3\u30c9\u3092\u69d8\u3005\u306abuffer\u306e\u30c7\u30fc\u30bf\u578b\u306b\u5408\u308f\u305b\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u3082\u306e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u3001factory\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u3059\u3002(BufferUtils.newByteBuffer\u306a\u3069)\n\n    // Factory\u30e1\u30bd\u30c3\u30c9\n    ByteBuffer src = BufferUtils.newByteBuffer(1024);\n    ByteBuffer dest = BufferUtils.newByteBuffer(1024);\n\n    // \u30b3\u30d4\u30fc\n    BufferUtils.copy(src, dest, 1024);\n\n\u8a66\u3057\u3066\u307f\u305f\u304c\u3001libGDX\u30a8\u30f3\u30b8\u30f3\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u4f8b\u3048\u3070main\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u5358\u7d14\u306b\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068BufferUtils.copy\u3042\u305f\u308a\u3067Error\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u898b\u308b\u3068\njava.lang.UnsatisfiedLinkError: com.badlogic.gdx.utils.BufferUtils.copyJni(Ljava/nio/Buffer;ILjava/nio/Buffer;II)V\n\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\nThreadUtils\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f1.9.5\u73fe\u5728\u3001yield\u30e1\u30bd\u30c3\u30c9\u3057\u304b\u306a\u304f\u3001\u3053\u306e\u5b9f\u88c5\u306f\njava.lang.Thread\u306eyield\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3042\u308b\u305f\u3081\u306a\u304b\u306a\u304b\u5229\u7528\u30b7\u30fc\u30f3\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u3088\u308a\u3001\u5229\u7528\u30b7\u30fc\u30f3\u306e\u5224\u65ad\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\njava.lang.Thread\u306ejavadoc\u306b\u3088\u308b\u3068\nhttps://docs.oracle.com/javase/jp/8/docs/api/java/lang/Thread.html\n\npublic static void yield()\n\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u4f7f\u7528\u91cf\u3092\u8b72\u308b\u7528\u610f\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3078\u306e\u30d2\u30f3\u30c8\u3067\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u3053\u306e\u30d2\u30f3\u30c8\u3092\u7121\u8996\u3057\u3066\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\n\u8b72\u4f4d\u306f\u3001\u901a\u5e38\u3067\u3042\u308c\u3070CPU\u3092\u904e\u5270\u306b\u4f7f\u7528\u3057\u3066\u3057\u307e\u3046\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u76f8\u5bfe\u7684\u306a\u9032\u884c\u72b6\u6cc1\u3092\u6539\u5584\u3057\u3088\u3046\u3068\u3059\u308b\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306a\u8a66\u307f\u3067\u3059\u3002\u305d\u306e\u4f7f\u7528\u6642\u306b\u306f\u8a73\u7d30\u306a\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3082\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u76ee\u7684\u306e\u52b9\u679c\u304c\u5b9f\u969b\u306b\u5f97\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u3079\u304d\u3067\u3059\u3002\n\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u6a5f\u4f1a\u306f\u307e\u308c\u306b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u30c7\u30d0\u30c3\u30b0\u76ee\u7684\u3084\u30c6\u30b9\u30c8\u76ee\u7684\u3067\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059(\u7af6\u5408\u72b6\u614b\u306b\u3088\u308b\u30d0\u30b0\u3092\u518d\u73fe\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308b)\u3002\u3053\u308c\u306f\u3001\u4e26\u884c\u5236\u5fa1\u306e\u69cb\u6210\u8981\u7d20(java.util.concurrent.locks\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306e\u69cb\u6210\u8981\u7d20\u306a\u3069)\u3092\u8a2d\u8a08\u3059\u308b\u969b\u306b\u3082\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\nyield\u30e1\u30bd\u30c3\u30c9\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u547c\u3073\u51fa\u3057\u3092\u884c\u3044\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u3078\u901a\u77e5\u3092\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\n\n\nStreamUtils\n\nStreamUtils\u306fStream API\u3067\u306f\u306a\u304f\u3001\u30d5\u30a1\u30a4\u30eb\u306eI/O\u306eStream\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u64cd\u4f5c\u7528\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n\n\n    Path tmpFile = Files.createTempFile(Paths.get(\"\").toAbsolutePath(), \"tmp\", \"file\");\n    tmpFile.toFile().deleteOnExit();\n    StreamUtils.copyStream(Gdx.files.internal(\"hoge.properties\").read(), new FileOutputStream(tmpFile.getFileName().toString()));\n    InputStream is = Gdx.files.internal(\"hoge.properties\").read();\n\n    // String\u306b\u5909\u63db\n    String streamToString = StreamUtils.copyStreamToString(is);\n    System.out.println(\"streamToString\" + streamToString);\n\n    // close\u51e6\u7406\n    StreamUtils.closeQuietly(is);\n\ncloseQuietly\u306fApache Commons\u306eIOUtils\u306b\u3082\u3042\u308a\u307e\u3059\u306d\u3002Java SE 7\u4ee5\u964d\u3067\u3042\u308c\u3070try-with-resources\u304c\u3042\u308b\u306e\u3067\u3042\u307e\u308a\u6d3b\u8e8d\u306f\u3057\u307e\u305b\u3093\u304c\u305d\u308c\u4ee5\u524d\u3067\u3042\u308c\u3070\u3001\u5197\u9577\u306aclose\u51e6\u7406\u306e\u8a18\u8ff0\u304c\u6e1b\u308b\u5b09\u3057\u3044\u3084\u3064\u3067\u3059\u306d\u3002\n\n\u307e\u3068\u3081\n\u3059\u3050\u306b\u4f7f\u3048\u305d\u3046\u306a\u306e\u306fTimeUtils\u3068PropertiesUtils\u3001StreamUtils\u3042\u305f\u308a\u304b\u306a\u3041\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u5229\u7528\u3059\u308b\u30ec\u30a4\u30e4\u304c\u9650\u5b9a\u7684\u3068\u3044\u3046\u304b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5b9f\u88c5\u3067\u30db\u30a4\u30db\u30a4\u4f7f\u3046\u3082\u306e\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\u4eca\u56de\u306fXXXUtils\u306b\u9650\u5b9a\u3057\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u304c\u3001com.balogic.gdx.utils\u306b\u306f\ncom.balogic.gdx.utils.async\u3084\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u7cfb\u306eAPI\u3001Json\u3001XML\u64cd\u4f5c\u3001\u30c6\u30ad\u30b9\u30c8\u6574\u5f62\u7528\u306eAPI\u306a\u3069\u8272\u3005\u3068\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3082\u307e\u305f\u5225\u8a18\u4e8b\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u307e\u3068\u3081\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u304b\u601d\u3044\u307e\u3059\u3002\nlibGDX\u5185\u306b\u306f\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u304c\u3044\u304f\u3064\u3082\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u672c\u5f53\u306b\u4fbf\u5229\u306a\u306e\u304b\u3069\u3046\u304b\u3002\u3002\u3002\u3068\u3044\u3046\u8abf\u67fb\u3092\u542b\u3081\u3001\u305b\u3063\u304b\u304f\u306a\u306e\u3067\u307e\u3068\u3081\u3066\u304a\u3053\u3046\u3068\u601d\u3044\u307e\u3059\u3002\n\n\n\n## \u5bfe\u8c61\u30d0\u30fc\u30b8\u30e7\u30f3\n\n1.9.5\n\n## \u5bfe\u8c61\u30d1\u30c3\u30b1\u30fc\u30b8\n\ncom.balogic.gdx.utils\n\n\n\u3068\u308a\u3042\u3048\u305aUtils\u7cfb\u3092\u307e\u3068\u3081\u307e\u3059\u3002\n\n## [NumberUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/NumberUtils.html)\n\n\nIEEE 754\u306b\u6e96\u62e0\u3057\u305f\u6d6e\u52d5\u5c0f\u6570\u70b9\u95a2\u9023\u306e\u5909\u63db\u306a\u3069\u3092\u884c\u3063\u3066\u304f\u308c\u307e\u3059\u3002\nDouble\u3084Float\u306estatic\u30e1\u30bd\u30c3\u30c9\u306e\u30a8\u30a4\u30ea\u30a2\u30b9\u7684\u306a\u3082\u306e\u306b\u8fd1\u3044\u3067\u3059\u3002\n\u89e6\u3063\u3066\u307f\u305f\u3082\u306e\u306e\u3001\u4f7f\u3044\u6240\u304c\u96e3\u3057\u305d\u3046\u3002\ncom.badlogic.gdx.graphics.Color\u30af\u30e9\u30b9\u306e\u5185\u90e8\u3067\u4f7f\u308f\u308c\u3066\u3044\u305f\u308a\u3057\u307e\u3059\u3002\n\n\u8a73\u7d30\u306fFloat\u3068Double\u306ejavadoc\u898b\u308b\u306e\u304c\u4e00\u756a\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\u3002\n\n[https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Float.html](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Float.html)\n [https://docs.oracle.com/javase/jp/6/api/java/lang/Double.html#doubleToLongBits(double)](https://docs.oracle.com/javase/jp/6/api/java/lang/Double.html#doubleToLongBits(double))\n\n\n\n## [TimeUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/TimeUtils.html)\n\nTimeUtils\u306f\u57fa\u672c\u7684\u306a\u6642\u9593\u306e\u64cd\u4f5c\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\u3088\u304f\u3042\u308b\u6642\u9593\u64cd\u4f5c\u3092\u5373\u5e2d\u3067\u5b9f\u88c5\u3057\u305f\u304f\u306a\u3063\u305f\u6642\u306f\u3053\u306e\u30af\u30e9\u30b9\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u898b\u3066\u304b\u3089\u5b9f\u88c5\u3057\u305f\u65b9\u304c\u826f\u3055\u305d\u3046\u3067\u3059\u3002\n\n```java\n\n\n    // System.currentTimeMillis()\u3068\u540c\u3058\n    System.out.println(\"\u30df\u30ea\u79d2 : \" + TimeUtils.millis()); // \u30df\u30ea\u79d2 : 1484574498965\n            \n    // \u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db\n    System.out.println(\"\u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db : \" + TimeUtils.millisToNanos(TimeUtils.millis())); // \u30df\u30ea\u79d2\u3092\u30ca\u30ce\u79d2\u3078\u5909\u63db : 1484574498965000000\n\n    // \u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db\n    System.out.println(\"\u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db : \" + TimeUtils.nanosToMillis(TimeUtils.millisToNanos(TimeUtils.millis()))); // \u30ca\u30ce\u79d2\u3092\u30df\u30ea\u79d2\u3078\u5909\u63db : 1484574498965\n\n    // \u5f15\u6570\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593(\u30df\u30ea\u79d2)\n    System.out.println(\"2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff09\" + TimeUtils.timeSinceMillis(TimeUtils.nanosToMillis(LocalDateTime.of(2011, 12, 5, 11, 11).getNano()))); // 2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30df\u30ea\u79d2\uff091484574498976\n\n    // \u5f15\u6570\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593(\u30ca\u30ce\u79d2)\n    System.out.println(\"2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09\" + TimeUtils.timeSinceNanos(LocalDateTime.of(2011, 12, 5, 11, 11).getNano())); // 2011/12/5 11:11\u304b\u3089\u306e\u7d4c\u904e\u6642\u9593\uff08\u30ca\u30ce\u79d2\uff09872694705378791\n\n```\n\n\n## [PropertiesUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/PropertiesUtils.html)\n\nPropertiesUtils\u306fkey=value\u5f62\u5f0f\u306eReader\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u306e\u60c5\u5831\u3092\u30ed\u30fc\u30c9\u3057Map\u306b\u5909\u63db\u3057\u3066\u304f\u308c\u308bUtil\u3067\u3059\u3002properties\u30d5\u30a1\u30a4\u30eb\u306a\u3069\u3067\u60c5\u5831\u3092\u6301\u3063\u3066\u7c21\u5358\u306b\u30ed\u30fc\u30c9\u304c\u51fa\u6765\u307e\u3059\u3002\n\n\n``` name:hoge.properties\nhoge=fuga\npiyo=piyo\nage=28\n```\n\n```java\n    ObjectMap<String, String> map = new ObjectMap<>();\n    PropertiesUtils.load(map, new FileReader(Gdx.files.internal(\"hoge.properties\").file()));\n    map.forEach(System.out::println);\n```\n\n``` name:\u51fa\u529b\u7d50\u679c\npiyo=piyo\nhoge=fuga\nage=28\n```\n\n\n\n## [ScreenUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/ScreenUtils.html)\n\nScreenUtils\u306f\u4e3b\u306b\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092\u5229\u7528\u3057\u3066\u753b\u50cf\u51e6\u7406\u3092\u3059\u308b\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30fc\u30af\u30e9\u30b9\u3068\u3044\u3063\u305f\u3068\u3053\u308d\u3067\u3059\u3002\n\n\nFarmbuffer\u3068\u306f\u30fb\u30fb\u30fb\n\n>A framebuffer (frame buffer, or sometimes framestore) is a portion of RAM containing a bitmap that is used to refresh a video display from a memory buffer containing a complete frame of data.\n\n[https://en.wikipedia.org/wiki/Framebuffer](https://en.wikipedia.org/wiki/Framebuffer)\n\n\u3068\u3044\u3046\u3053\u3068\u3067\u3001\u3059\u3054\u3044\u9069\u5f53\u306b\u89e3\u91c8\u3059\u308b\u3068\u30d5\u30ec\u30fc\u30e0\u63cf\u753b\u60c5\u5831\u306e\u30e1\u30e2\u30ea\u9818\u57df\u3050\u3089\u3044\u306b\u601d\u3063\u3066\u304a\u3051\u3070\u826f\u3044\u6c17\u304c\u3057\u307e\u3059\uff01\n\n\n```java\n\n    //  default\u306e\u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u3092byte[]\u3067\u8fd4\u3059\u3002\u914d\u5217\u306elength\u306fscreen width * height * 4\u3002\n    byte[] bytes = ScreenUtils.getFrameBufferPixels(true);\n\n\n    // \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089\u6307\u5b9a\u3057\u305f\u4f4d\u7f6e\u3092read\u3057\u3066Pixmap\u3092\u8fd4\u3059\n    int x = 0;\n    int y = 0;\n    int width = 0;\n    int height = 0;\n    Pixmap pixmap = ScreenUtils.getFrameBufferPixmap(x, y, width, height);\n\n    // \u30d5\u30ec\u30fc\u30e0\u30d0\u30c3\u30d5\u30a1\u30fc\u304b\u3089Texture\u3092\u751f\u6210\u3059\u308b\n    TextureRegion region = ScreenUtils.getFrameBufferTexture();\n\n```\n\n\u3053\u306e\u30af\u30e9\u30b9\u306flibGDX\u30a8\u30f3\u30b8\u30f3\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u5358\u7d14\u306b\u8d77\u52d5\u4e2d\u306e\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u305f\u3081\u53d6\u5f97\u5143\u304c\u306a\u3044\u3068\u30cc\u30eb\u30dd\u304c\u767a\u751f\u3057\u307e\u3059\u3002\n\n\n## [BufferUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/BufferUtils.html)\n\nBufferUtils\u306f\u3001\u30d0\u30c3\u30d5\u30a1\u9818\u57df\u3092\u4f7f\u3063\u305f\u51e6\u7406\u306e\u305f\u3081\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3001copy\u3001transform\u306a\u3069\u306e\u30e1\u30bd\u30c3\u30c9\u304c\u4e3b\u306a\u3082\u306e\u3068\u306a\u3063\u3066\u3044\u307e\u3059\u3002copy\u3068transform\u30e1\u30bd\u30c3\u30c9\u3092\u69d8\u3005\u306abuffer\u306e\u30c7\u30fc\u30bf\u578b\u306b\u5408\u308f\u305b\u3066\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3057\u305f\u3082\u306e\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u305d\u306e\u4ed6\u3001factory\u30e1\u30bd\u30c3\u30c9\u3082\u3042\u308a\u307e\u3059\u3002(BufferUtils.newByteBuffer\u306a\u3069)\n\n\n```java\n\n    // Factory\u30e1\u30bd\u30c3\u30c9\n    ByteBuffer src = BufferUtils.newByteBuffer(1024);\n    ByteBuffer dest = BufferUtils.newByteBuffer(1024);\n            \n    // \u30b3\u30d4\u30fc\n    BufferUtils.copy(src, dest, 1024);\n```\n\n\u8a66\u3057\u3066\u307f\u305f\u304c\u3001libGDX\u30a8\u30f3\u30b8\u30f3\u4e0a\u3067\u3057\u304b\u52d5\u304b\u306a\u3044\u3067\u3059\u3002\u4f8b\u3048\u3070main\u30e1\u30bd\u30c3\u30c9\u304b\u3089\u5358\u7d14\u306b\u5b9f\u884c\u3057\u3088\u3046\u3068\u3059\u308b\u3068BufferUtils.copy\u3042\u305f\u308a\u3067Error\u304c\u767a\u751f\u3057\u3066\u3057\u307e\u3046\u3002\u30b9\u30bf\u30c3\u30af\u30c8\u30ec\u30fc\u30b9\u3092\u898b\u308b\u3068\njava.lang.UnsatisfiedLinkError: com.badlogic.gdx.utils.BufferUtils.copyJni(Ljava/nio/Buffer;ILjava/nio/Buffer;II)V\n\u3068\u306e\u3053\u3068\u3067\u3059\u3002\n\n## [ThreadUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/async/ThreadUtils.html)\n\n\u3053\u306e\u30af\u30e9\u30b9\u306f1.9.5\u73fe\u5728\u3001yield\u30e1\u30bd\u30c3\u30c9\u3057\u304b\u306a\u304f\u3001\u3053\u306e\u5b9f\u88c5\u306f\njava.lang.Thread\u306eyield\u3092\u547c\u3073\u51fa\u3059\u3060\u3051\u3067\u3042\u308b\u305f\u3081\u306a\u304b\u306a\u304b\u5229\u7528\u30b7\u30fc\u30f3\u306f\u7121\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3044\u3046\u3088\u308a\u3001\u5229\u7528\u30b7\u30fc\u30f3\u306e\u5224\u65ad\u304c\u96e3\u3057\u3044\u3067\u3059\u3002\n\n\njava.lang.Thread\u306ejavadoc\u306b\u3088\u308b\u3068\n[https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Thread.html](https://docs.oracle.com/javase/jp/8/docs/api/java/lang/Thread.html)\n\n\n>public static void yield()\n\u73fe\u5728\u306e\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u306e\u30d7\u30ed\u30bb\u30c3\u30b5\u4f7f\u7528\u91cf\u3092\u8b72\u308b\u7528\u610f\u304c\u3042\u308b\u3053\u3068\u3092\u793a\u3059\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3078\u306e\u30d2\u30f3\u30c8\u3067\u3059\u3002\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u306f\u3053\u306e\u30d2\u30f3\u30c8\u3092\u7121\u8996\u3057\u3066\u3082\u304b\u307e\u3044\u307e\u305b\u3093\u3002\n\u8b72\u4f4d\u306f\u3001\u901a\u5e38\u3067\u3042\u308c\u3070CPU\u3092\u904e\u5270\u306b\u4f7f\u7528\u3057\u3066\u3057\u307e\u3046\u30b9\u30ec\u30c3\u30c9\u9593\u3067\u76f8\u5bfe\u7684\u306a\u9032\u884c\u72b6\u6cc1\u3092\u6539\u5584\u3057\u3088\u3046\u3068\u3059\u308b\u30d2\u30e5\u30fc\u30ea\u30b9\u30c6\u30a3\u30c3\u30af\u306a\u8a66\u307f\u3067\u3059\u3002\u305d\u306e\u4f7f\u7528\u6642\u306b\u306f\u8a73\u7d30\u306a\u30d7\u30ed\u30d5\u30a1\u30a4\u30eb\u3084\u30d9\u30f3\u30c1\u30de\u30fc\u30af\u3082\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u76ee\u7684\u306e\u52b9\u679c\u304c\u5b9f\u969b\u306b\u5f97\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u78ba\u8a8d\u3059\u3079\u304d\u3067\u3059\u3002\n\n>\u3053\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u4f7f\u7528\u3059\u308b\u6a5f\u4f1a\u306f\u307e\u308c\u306b\u3057\u304b\u3042\u308a\u307e\u305b\u3093\u3002\u3053\u308c\u306f\u3001\u30c7\u30d0\u30c3\u30b0\u76ee\u7684\u3084\u30c6\u30b9\u30c8\u76ee\u7684\u3067\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059(\u7af6\u5408\u72b6\u614b\u306b\u3088\u308b\u30d0\u30b0\u3092\u518d\u73fe\u3059\u308b\u306e\u306b\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308b)\u3002\u3053\u308c\u306f\u3001\u4e26\u884c\u5236\u5fa1\u306e\u69cb\u6210\u8981\u7d20(java.util.concurrent.locks\u30d1\u30c3\u30b1\u30fc\u30b8\u5185\u306e\u69cb\u6210\u8981\u7d20\u306a\u3069)\u3092\u8a2d\u8a08\u3059\u308b\u969b\u306b\u3082\u5f79\u7acb\u3064\u53ef\u80fd\u6027\u304c\u3042\u308a\u307e\u3059\u3002\n\n\nyield\u30e1\u30bd\u30c3\u30c9\u306f\u30cd\u30a4\u30c6\u30a3\u30d6\u547c\u3073\u51fa\u3057\u3092\u884c\u3044\u3001\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u30fc\u3078\u901a\u77e5\u3092\u3059\u308b\u305f\u3081\u306e\u3082\u306e\u306e\u3088\u3046\u3067\u3059\u3002\n\u0010\n\n## [StreamUtils](https://libgdx.badlogicgames.com/nightlies/docs/api/com/badlogic/gdx/utils/StreamUtils.html)\n\nStreamUtils\u306fStream API\u3067\u306f\u306a\u304f\u3001\u30d5\u30a1\u30a4\u30eb\u306eI/O\u306eStream\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30fc\u30b9\u306e\u64cd\u4f5c\u7528\u306e\u30e6\u30fc\u30c6\u30a3\u30ea\u30c6\u30a3\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n```java\n\n\n\n    Path tmpFile = Files.createTempFile(Paths.get(\"\").toAbsolutePath(), \"tmp\", \"file\");\n    tmpFile.toFile().deleteOnExit();\n    StreamUtils.copyStream(Gdx.files.internal(\"hoge.properties\").read(), new FileOutputStream(tmpFile.getFileName().toString()));\n    InputStream is = Gdx.files.internal(\"hoge.properties\").read();\n\n    // String\u306b\u5909\u63db\n    String streamToString = StreamUtils.copyStreamToString(is);\n    System.out.println(\"streamToString\" + streamToString);\n\n    // close\u51e6\u7406\n    StreamUtils.closeQuietly(is);\n```\n\ncloseQuietly\u306fApache Commons\u306eIOUtils\u306b\u3082\u3042\u308a\u307e\u3059\u306d\u3002Java SE 7\u4ee5\u964d\u3067\u3042\u308c\u3070try-with-resources\u304c\u3042\u308b\u306e\u3067\u3042\u307e\u308a\u6d3b\u8e8d\u306f\u3057\u307e\u305b\u3093\u304c\u305d\u308c\u4ee5\u524d\u3067\u3042\u308c\u3070\u3001\u5197\u9577\u306aclose\u51e6\u7406\u306e\u8a18\u8ff0\u304c\u6e1b\u308b\u5b09\u3057\u3044\u3084\u3064\u3067\u3059\u306d\u3002\n\n\n\n## \u307e\u3068\u3081\n\n\u3059\u3050\u306b\u4f7f\u3048\u305d\u3046\u306a\u306e\u306fTimeUtils\u3068PropertiesUtils\u3001StreamUtils\u3042\u305f\u308a\u304b\u306a\u3041\u3068\u3044\u3046\u611f\u3058\u3067\u3059\u3002\n\u305d\u308c\u4ee5\u5916\u306f\u5229\u7528\u3059\u308b\u30ec\u30a4\u30e4\u304c\u9650\u5b9a\u7684\u3068\u3044\u3046\u304b\u3001\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u5b9f\u88c5\u3067\u30db\u30a4\u30db\u30a4\u4f7f\u3046\u3082\u306e\u3067\u306f\u306a\u3055\u305d\u3046\u3067\u3059\u3002\n\n\n\n\u4eca\u56de\u306fXXXUtils\u306b\u9650\u5b9a\u3057\u3066\u8abf\u3079\u3066\u307f\u307e\u3057\u305f\u304c\u3001com.balogic.gdx.utils\u306b\u306f\ncom.balogic.gdx.utils.async\u3084\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u7cfb\u306eAPI\u3001Json\u3001XML\u64cd\u4f5c\u3001\u30c6\u30ad\u30b9\u30c8\u6574\u5f62\u7528\u306eAPI\u306a\u3069\u8272\u3005\u3068\u63d0\u4f9b\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u305d\u3061\u3089\u3082\u307e\u305f\u5225\u8a18\u4e8b\u3067\u6c17\u304c\u5411\u3044\u305f\u3089\u307e\u3068\u3081\u3066\u307f\u3088\u3046\u304b\u306a\u3068\u304b\u601d\u3044\u307e\u3059\u3002\n\n\n", "tags": ["Java", "libGDX"]}