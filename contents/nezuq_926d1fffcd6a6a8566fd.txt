{"tags": ["Julia0.3.0", "\u7d71\u8a08\u5b66", "\u7d71\u8a08\u5b66\u5165\u9580"], "context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\nFacebook\u30b0\u30eb\u30fc\u30d7\u300e\u6771\u5927\u306e\u7d71\u8a08\u5b66\u6559\u79d1\u66f8\u3092\u8aad\u307f\u9032\u3081\u308b\u4f1a\u300f\u3067\u3001\n\u7d71\u8a08\u5b66\u5165\u9580\uff08\u901a\u79f0\uff1a\u8d64\u672c\uff09\u306e\u8aad\u307f\u9032\u3081\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u8aad\u307f\u9032\u3081\u308b\u4e2d\u3067\u3001\u300c\u3053\u3053\u306e\u51e6\u7406\u3092Julia\u3067\u306f\u3069\u3046\u3084\u308b\u306e\uff1f\u300d\u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u9023\u306d\u307e\u3057\u305f\u3002\n\n\u7d71\u8a08\u5b66\u5165\u9580\uff08\u901a\u79f0\uff1a\u8d64\u672c\uff09\u3068\u306f\uff1f\n\u5b57\u7fa9\u901a\u308a\u3002\u300c\u6771\u4eac\u5927\u5b66\u6559\u990a\u5b66\u90e8\u7d71\u8a08\u5b66\u6559\u5ba4 \u7de8\u300d\u306e\u7d71\u8a08\u5b66\u5165\u9580\u66f8\u3067\u3059\u3002\n\u53c2\u8003\uff1a\u7d71\u8a08\u5b66\u5165\u9580\n\nJulia\u3068\u306f\uff1f\n\u30dd\u30b9\u30c8R\u3002\u30d9\u30bf\u30fcMATLAB\u3002\u51e6\u7406\u304c\u8d85\u65e9\u3044\u3002\n\u53c2\u8003\uff1aJulia\u306e\u516c\u5f0f\u30b5\u30a4\u30c8\n\n\u8abf\u67fb\u5bfe\u8c61\u306e\u7ae0\n\u7b2c2\u7ae0\u300c1\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u300d\n\n\u30c7\u30fc\u30bf\n\u30c7\u30fc\u30bf\u3092Julia\u3078\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n\nDataRead.jl\n# [\u5909\u6570\u5b9a\u7fa9]\n##\u6574\u6570\nx = 1\n##\u5c0f\u6570\nx = 1.0\n##\u6587\u5b57\u5217\nx = \"abc\"\n##\u914d\u5217\nx = [1,2,3]\n##\u9023\u60f3\u914d\u5217\nx = {:id:1, name:\"nezuq\", address:[\"japan\",\"tokyo\",\"nakameguro\"]}\n##\u884c\u5217\nx = [1 2 3 4 5; 6 7 8 9 10; 11 12 13 14 15]\n##\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\nusing DataFrames\ndf = DataFrame(\u7e26\u8ef8=[\"a\", \"a\", \"c\", \"b\", \"b\"], \u6a2a\u8ef8=[10, 20, 30, 40, 50])\n\n# [\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f]\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\ntxt = open(\"abc.txt\")\n##\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n###\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\nx = readlines(txt)\n###CSV\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\nx = readcsv(txt)\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\nclose(txt)\n\n# [R\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u547c\u3073\u51fa\u3057]\n##R\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nusing RDatasets\n##iris\u30c7\u30fc\u30bf\u3092\u547c\u3073\u51fa\u3059\nx = dataset(\"datasets\", \"iris\")\n\n# [SQLite\u306e\u8aad\u307f\u8fbc\u307f]\n##SQLite\u7ba1\u7406\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nusing SQLite\n##SQLite\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u63a5\u7d9a\ncon = SQLite.connect(\"abc.db\")\n##\u30af\u30a8\u30ea\u306e\u767a\u884c\nx = query(\"select * from m_user\", con)\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\nclose(con)\n\n\n\n\u57fa\u672c\u7d71\u8a08\u91cf\n\u57fa\u672c\u7d71\u8a08\u91cf\u3092\u7b97\u51fa\u3059\u308b\u3002\n\nSummary.jl\ndata = reduce((sum,a) -> vcat(sum,a), [repeat([d[1]],inner=[d[2]]) for d = [(1,43), (2,179), (3,238), (4,38), (5,2)]])\n\n#[\u5ea6\u6570]\n##Base\u30d1\u30c3\u30b1\u30fc\u30b8\nx = hist(data, int(ceil(1 + log2(length(data))))) # => (0.0:1.0:5.0,[43,179,238,38,2])\n##StatsBase\u30d1\u30c3\u30b1\u30fc\u30b8\nPkg.add(\"StatsBase\")\nusing StatsBase\nx = counts(data, minimum(data):maximum(data)) # =>  [43, 179, 238, 38, 2]\n\n#[\u76f8\u5bfe\u5ea6\u6570]\nusing StatsBase\nx = proportions(data, minimum(data):maximum(data)) # =>  [0.086, 0.358, 0.476, 0.076, 0.004]\n\n#[\u5e73\u5747\u5024]\n##\u7b97\u8853\u5e73\u5747\nx = mean(data) # => 2.554\n##\u5e7e\u4f55\u5e73\u5747\nusing StatsBase\nx = geomean([1.218, 1.305, 1.536, 1.500, 1.129]) # => 1.3282714663720916\n##\u8abf\u548c\u5e73\u5747\nusing StatsBase\nx = harmmean([25, 15]) # => 18.75\n\n#[\u4e2d\u592e\u5024]\nx = median(data) # => 3.0\n\n#[\u6700\u983b\u5024]\nx = mode(data) # => 3\n\n#[\u30df\u30c3\u30c9\u30fb\u30ec\u30f3\u30b8]\nx = (maximum(data) - minimum(data)) / 2 # => 2.0\n\n#[\u5206\u4f4d\u70b9]\nx = quantile(data, 1/4) # => 2.0\n\n#[\u5206\u6563]\nx = var(data) # => 0.5962765531062114\n\n#[\u6a19\u6e96\u504f\u5dee]\nx = std(data) # => 0.7721894541537144\n\n\n\n\u30b0\u30e9\u30d5\u63cf\u753b\n\u30c7\u30fc\u30bf\u304b\u3089\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3002\n\nPlot.jl\ndata = reduce((sum,a) -> vcat(sum,a), [repeat([d[1]],inner=[d[2]]) for d = [(1,43),(2,179),(3,238),(4,38),(5,2)]])\nx = hist(data, int(ceil(1 + log2(length(data)))))\n\n#[\u68d2\u30b0\u30e9\u30d5]\nPkg.add(\"Gadfly\")\nusing Gadfly\nplot(x = collect(x[1])[2:end], y = x[2], Geom.bar)\n\n#[\u7dda\u30b0\u30e9\u30d5]\nusing Gadfly\nplot(x = collect(x[1])[2:end], y = x[2], Geom.smooth)\n\n\n\n\u7df4\u7fd2\u554f\u984c\u306e\u89e3\u7b54\n\nprac02.jl\n#[\u4ee3\u8868\u5024\u306e\u9593\u9694]\n#\u53c2\u7167\uff1a\u7d71\u8a08\u5c40\u30db\u30fc\u30e0\u30da\u30fc\u30b8/\u5bb6\u8a08\u8abf\u67fb\u5831\u544a\uff08\u8caf\u84c4\u30fb\u8ca0\u50b5\u7de8\uff09\uff0d\u5e73\u621025\u5e74\uff082013\u5e74\uff09\u5e73\u5747\u7d50\u679c\u901f\u5831\uff0d\uff08\u4e8c\u4eba\u4ee5\u4e0a\u306e\u4e16\u5e2f\uff09\n#  http://www.stat.go.jp/data/sav/sokuhou/nen/\nk = (1023 - 50) / (1739 - 1023) # => 1.3589385474860336\n\n#[\u30b8\u30cb\u4fc2\u6570]\nA = [0, 3, 3, 5, 5, 5, 5, 7, 7, 10]\nB = [0, 1, 2, 3, 5, 5, 7, 8, 9, 10]\nC = [3, 4, 4, 5, 5, 5, 5, 6, 6, 7]\n##\u5e73\u5747\u5dee\ndiffmean(nary) = reduce((sum1,x1) -> sum1 + reduce((sum2,x2) -> sum2 + abs(x1 - x2), 0, nary), 0, nary) / (length(nary) ^ 2)\ndiffmean(A) # => 2.76\ndiffmean(B) # => 3.76\ndiffmean(C) # => 1.2\n##\u30b8\u30cb\u4fc2\u6570\ngeni(nary) = reduce((sum1,x1) -> sum1 + reduce((sum2,x2) -> sum2 + abs(x1 - x2), 0, nary), 0, nary) / 2(length(nary) ^ 2)mean(nary)\ngeni(A) # => 0.276\ngeni(B) # => 0.376\ngeni(C) # => 0.12\n\n#[\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc]\ncnts_now = [32, 19, 10, 24, 15]\ncnts_old = [28, 13, 18, 29, 12]\nPkg.add(\"StatsBase\")\nusing StatsBase\nentropy(cnts_now / sum(cnts_now)) # => 1.537492332302312(log\u306e\u5e95\u304ce\u3067\u8a08\u7b97)\nentropy(cnts_old / sum(cnts_old)) # => 1.5437380015770872(log\u306e\u5e95\u304ce\u3067\u8a08\u7b97)\n\n#[\u8af8\u5f97\u70b9]\n##\u6a19\u6e96\u5f97\u70b9\nusing StatsBase\nb_now = zscore([19], mean(cnts_now), std(cnts_now)) # => -0.118262\nb_old = zscore([13], mean(cnts_old), std(cnts_old)) # => -0.864923\n##\u504f\u5dee\u5024\u5f97\u70b9\n10 * b_now + 50 # => 48.8174\n10 * b_old + 50 # => 41.3508\n\n\n\n\n\u611f\u60f3\nJulia\u3067\u7d71\u8a08\u51e6\u7406\u3092\u884c\u3046\u70ba\u306e\u30b3\u30de\u30f3\u30c9\uff08\u65b9\u6cd5\uff09\u3092\u96c6\u3081\u305fJLJPWiki\u304c\u6b32\u3057\u3044\u3002\n#\u306f\u3058\u3081\u306b\n[Facebook\u30b0\u30eb\u30fc\u30d7\u300e\u6771\u5927\u306e\u7d71\u8a08\u5b66\u6559\u79d1\u66f8\u3092\u8aad\u307f\u9032\u3081\u308b\u4f1a\u300f](https://t.co/rKKbPbEIjt)\u3067\u3001\n[\u7d71\u8a08\u5b66\u5165\u9580\uff08\u901a\u79f0\uff1a\u8d64\u672c\uff09](http://www.amazon.co.jp/%E7%B5%B1%E8%A8%88%E5%AD%A6%E5%85%A5%E9%96%80-%E5%9F%BA%E7%A4%8E%E7%B5%B1%E8%A8%88%E5%AD%A6-%E6%9D%B1%E4%BA%AC%E5%A4%A7%E5%AD%A6%E6%95%99%E9%A4%8A%E5%AD%A6%E9%83%A8%E7%B5%B1%E8%A8%88%E5%AD%A6%E6%95%99%E5%AE%A4/dp/4130420658)\u306e\u8aad\u307f\u9032\u3081\u3092\u884c\u3063\u3066\u3044\u307e\u3059\u3002\n\u8aad\u307f\u9032\u3081\u308b\u4e2d\u3067\u3001\u300c\u3053\u3053\u306e\u51e6\u7406\u3092Julia\u3067\u306f\u3069\u3046\u3084\u308b\u306e\uff1f\u300d\u304c\u6c17\u306b\u306a\u3063\u305f\u306e\u3067\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u9023\u306d\u307e\u3057\u305f\u3002\n\n#\u7d71\u8a08\u5b66\u5165\u9580\uff08\u901a\u79f0\uff1a\u8d64\u672c\uff09\u3068\u306f\uff1f\n\u5b57\u7fa9\u901a\u308a\u3002\u300c\u6771\u4eac\u5927\u5b66\u6559\u990a\u5b66\u90e8\u7d71\u8a08\u5b66\u6559\u5ba4 \u7de8\u300d\u306e\u7d71\u8a08\u5b66\u5165\u9580\u66f8\u3067\u3059\u3002\n[\u53c2\u8003\uff1a\u7d71\u8a08\u5b66\u5165\u9580](http://www.qmss.jp/qmss/related/stat02.htm)\n\n#Julia\u3068\u306f\uff1f\n\u30dd\u30b9\u30c8R\u3002\u30d9\u30bf\u30fcMATLAB\u3002\u51e6\u7406\u304c\u8d85\u65e9\u3044\u3002\n[\u53c2\u8003\uff1aJulia\u306e\u516c\u5f0f\u30b5\u30a4\u30c8](http://julialang.org/)\n\n#\u8abf\u67fb\u5bfe\u8c61\u306e\u7ae0\n\u7b2c2\u7ae0\u300c1\u6b21\u5143\u306e\u30c7\u30fc\u30bf\u300d\n\n#\u30c7\u30fc\u30bf\n\u30c7\u30fc\u30bf\u3092Julia\u3078\u8aad\u307f\u8fbc\u307e\u305b\u308b\u3002\n\n```jl:DataRead.jl\n# [\u5909\u6570\u5b9a\u7fa9]\n##\u6574\u6570\nx = 1\n##\u5c0f\u6570\nx = 1.0\n##\u6587\u5b57\u5217\nx = \"abc\"\n##\u914d\u5217\nx = [1,2,3]\n##\u9023\u60f3\u914d\u5217\nx = {:id:1, name:\"nezuq\", address:[\"japan\",\"tokyo\",\"nakameguro\"]}\n##\u884c\u5217\nx = [1 2 3 4 5; 6 7 8 9 10; 11 12 13 14 15]\n##\u30c7\u30fc\u30bf\u30d5\u30ec\u30fc\u30e0\nusing DataFrames\ndf = DataFrame(\u7e26\u8ef8=[\"a\", \"a\", \"c\", \"b\", \"b\"], \u6a2a\u8ef8=[10, 20, 30, 40, 50])\n\n# [\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f]\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30aa\u30fc\u30d7\u30f3\ntxt = open(\"abc.txt\")\n##\u30d5\u30a1\u30a4\u30eb\u306e\u8aad\u307f\u8fbc\u307f\n###\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\nx = readlines(txt)\n###CSV\u30d5\u30a1\u30a4\u30eb\u306e\u5834\u5408\nx = readcsv(txt)\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\nclose(txt)\n\n# [R\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u547c\u3073\u51fa\u3057]\n##R\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nusing RDatasets\n##iris\u30c7\u30fc\u30bf\u3092\u547c\u3073\u51fa\u3059\nx = dataset(\"datasets\", \"iris\")\n\n# [SQLite\u306e\u8aad\u307f\u8fbc\u307f]\n##SQLite\u7ba1\u7406\u7528\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\nusing SQLite\n##SQLite\u30d5\u30a1\u30a4\u30eb\u3078\u306e\u63a5\u7d9a\ncon = SQLite.connect(\"abc.db\")\n##\u30af\u30a8\u30ea\u306e\u767a\u884c\nx = query(\"select * from m_user\", con)\n##\u30d5\u30a1\u30a4\u30eb\u306e\u30af\u30ed\u30fc\u30ba\nclose(con)\n```\n\n#\u57fa\u672c\u7d71\u8a08\u91cf\n\u57fa\u672c\u7d71\u8a08\u91cf\u3092\u7b97\u51fa\u3059\u308b\u3002\n\n```jl:Summary.jl\ndata = reduce((sum,a) -> vcat(sum,a), [repeat([d[1]],inner=[d[2]]) for d = [(1,43), (2,179), (3,238), (4,38), (5,2)]])\n\n#[\u5ea6\u6570]\n##Base\u30d1\u30c3\u30b1\u30fc\u30b8\nx = hist(data, int(ceil(1 + log2(length(data))))) # => (0.0:1.0:5.0,[43,179,238,38,2])\n##StatsBase\u30d1\u30c3\u30b1\u30fc\u30b8\nPkg.add(\"StatsBase\")\nusing StatsBase\nx = counts(data, minimum(data):maximum(data)) # =>  [43, 179, 238, 38, 2]\n\n#[\u76f8\u5bfe\u5ea6\u6570]\nusing StatsBase\nx = proportions(data, minimum(data):maximum(data)) # =>  [0.086, 0.358, 0.476, 0.076, 0.004]\n\n#[\u5e73\u5747\u5024]\n##\u7b97\u8853\u5e73\u5747\nx = mean(data) # => 2.554\n##\u5e7e\u4f55\u5e73\u5747\nusing StatsBase\nx = geomean([1.218, 1.305, 1.536, 1.500, 1.129]) # => 1.3282714663720916\n##\u8abf\u548c\u5e73\u5747\nusing StatsBase\nx = harmmean([25, 15]) # => 18.75\n\n#[\u4e2d\u592e\u5024]\nx = median(data) # => 3.0\n\n#[\u6700\u983b\u5024]\nx = mode(data) # => 3\n\n#[\u30df\u30c3\u30c9\u30fb\u30ec\u30f3\u30b8]\nx = (maximum(data) - minimum(data)) / 2 # => 2.0\n\n#[\u5206\u4f4d\u70b9]\nx = quantile(data, 1/4) # => 2.0\n\n#[\u5206\u6563]\nx = var(data) # => 0.5962765531062114\n\n#[\u6a19\u6e96\u504f\u5dee]\nx = std(data) # => 0.7721894541537144\n```\n\n#\u30b0\u30e9\u30d5\u63cf\u753b\n\u30c7\u30fc\u30bf\u304b\u3089\u30b0\u30e9\u30d5\u3092\u63cf\u753b\u3059\u308b\u3002\n\n```jl:Plot.jl\ndata = reduce((sum,a) -> vcat(sum,a), [repeat([d[1]],inner=[d[2]]) for d = [(1,43),(2,179),(3,238),(4,38),(5,2)]])\nx = hist(data, int(ceil(1 + log2(length(data)))))\n\n#[\u68d2\u30b0\u30e9\u30d5]\nPkg.add(\"Gadfly\")\nusing Gadfly\nplot(x = collect(x[1])[2:end], y = x[2], Geom.bar)\n\n#[\u7dda\u30b0\u30e9\u30d5]\nusing Gadfly\nplot(x = collect(x[1])[2:end], y = x[2], Geom.smooth)\n```\n\n#\u7df4\u7fd2\u554f\u984c\u306e\u89e3\u7b54\n\n```jl:prac02.jl\n#[\u4ee3\u8868\u5024\u306e\u9593\u9694]\n#\u53c2\u7167\uff1a\u7d71\u8a08\u5c40\u30db\u30fc\u30e0\u30da\u30fc\u30b8/\u5bb6\u8a08\u8abf\u67fb\u5831\u544a\uff08\u8caf\u84c4\u30fb\u8ca0\u50b5\u7de8\uff09\uff0d\u5e73\u621025\u5e74\uff082013\u5e74\uff09\u5e73\u5747\u7d50\u679c\u901f\u5831\uff0d\uff08\u4e8c\u4eba\u4ee5\u4e0a\u306e\u4e16\u5e2f\uff09\n#  http://www.stat.go.jp/data/sav/sokuhou/nen/\nk = (1023 - 50) / (1739 - 1023) # => 1.3589385474860336\n\n#[\u30b8\u30cb\u4fc2\u6570]\nA = [0, 3, 3, 5, 5, 5, 5, 7, 7, 10]\nB = [0, 1, 2, 3, 5, 5, 7, 8, 9, 10]\nC = [3, 4, 4, 5, 5, 5, 5, 6, 6, 7]\n##\u5e73\u5747\u5dee\ndiffmean(nary) = reduce((sum1,x1) -> sum1 + reduce((sum2,x2) -> sum2 + abs(x1 - x2), 0, nary), 0, nary) / (length(nary) ^ 2)\ndiffmean(A) # => 2.76\ndiffmean(B) # => 3.76\ndiffmean(C) # => 1.2\n##\u30b8\u30cb\u4fc2\u6570\ngeni(nary) = reduce((sum1,x1) -> sum1 + reduce((sum2,x2) -> sum2 + abs(x1 - x2), 0, nary), 0, nary) / 2(length(nary) ^ 2)mean(nary)\ngeni(A) # => 0.276\ngeni(B) # => 0.376\ngeni(C) # => 0.12\n\n#[\u30a8\u30f3\u30c8\u30ed\u30d4\u30fc]\ncnts_now = [32, 19, 10, 24, 15]\ncnts_old = [28, 13, 18, 29, 12]\nPkg.add(\"StatsBase\")\nusing StatsBase\nentropy(cnts_now / sum(cnts_now)) # => 1.537492332302312(log\u306e\u5e95\u304ce\u3067\u8a08\u7b97)\nentropy(cnts_old / sum(cnts_old)) # => 1.5437380015770872(log\u306e\u5e95\u304ce\u3067\u8a08\u7b97)\n\n#[\u8af8\u5f97\u70b9]\n##\u6a19\u6e96\u5f97\u70b9\nusing StatsBase\nb_now = zscore([19], mean(cnts_now), std(cnts_now)) # => -0.118262\nb_old = zscore([13], mean(cnts_old), std(cnts_old)) # => -0.864923\n##\u504f\u5dee\u5024\u5f97\u70b9\n10 * b_now + 50 # => 48.8174\n10 * b_old + 50 # => 41.3508\n\n```\n\n#\u611f\u60f3\nJulia\u3067\u7d71\u8a08\u51e6\u7406\u3092\u884c\u3046\u70ba\u306e\u30b3\u30de\u30f3\u30c9\uff08\u65b9\u6cd5\uff09\u3092\u96c6\u3081\u305fJLJPWiki\u304c\u6b32\u3057\u3044\u3002\n"}