{"context": "\n\n\u3068\u308a\u3042\u3048\u305a\u4f55\u3092\u8aad\u3082\u3046\u304b\n\u3069\u3046\u3082\u3001\u30af\u30ea\u30b9\u30de\u30b9\u3082\u8fd1\u3044\u3068\u3044\u3046\u306e\u306b\u3001\u30bd\u30fc\u30b9\u306e\u8aad\u307f\u66f8\u304d\u304b\u9152\u3092\u98f2\u3093\u3067\u3044\u308b\u304b\u3069\u3061\u3089\u304b\u306e@akachochin\u3067\u3059\u3002\n\u4eca\u56de\u306e\u6295\u7a3f\u53c2\u52a0\u306f\u9152\u98f2\u3093\u3060\u52e2\u3044\u3067\u6c7a\u3081\u307e\u3057\u305f(\u7b11)\u3002\n\u305d\u308c\u306f\u3068\u3082\u304b\u304f\u3002\u6700\u8fd1\u8907\u6570\u306e\u65b9\u304b\u3089\u300c\u30ab\u30fc\u30cd\u30eb\u306e\u30bd\u30fc\u30b9\u8aad\u307f\u305f\u3044\u3051\u3069\u3001\u3088\u304f\u308f\u304b\u3089\u3093\u300d\u3068\u3044\u3046\u76f8\u8ac7\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\u305d\u306e\u4eba\u306e\u77e5\u8b58\u30ec\u30d9\u30eb\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001\u307e\u305a\u30c9\u30e9\u30a4\u30d0\u3092\u8aad\u3093\u3067\u30ab\u30fc\u30cd\u30eb\u30b3\u30fc\u30c9\u306e\u96f0\u56f2\u6c17\u3092\u5473\u308f\u3044\u3064\u3064\u3001\u30ab\u30fc\u30cd\u30eb\u5185API\u3092\u8abf\u3079\u305f\u308a\u8aad\u3093\u3060\u308a\u3057\u3066\u3001\u5f90\u3005\u306b\u9818\u57df\u3092\u5e83\u3052\u3066\u3044\u304f\u306e\u304c\u826f\u3044\u306e\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u7d30\u304b\u306a\u30c7\u30d0\u30a4\u30b9\u306e\u5236\u5fa1\u306f\u7121\u8996\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u3001\u4eee\u60f3\u7684\u306a\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u306f\u683c\u597d\u306e\u6559\u6750\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\u3068\u3053\u308d\u3067\u4eca\u56de\u306e\u30cd\u30bf\u306f\u30fb\u30fb\u30fb\u306a\u3044\u30fb\u30fb\u30fb\u3002\u305d\u3046\u3044\u3048\u3070Android\u30ab\u30fc\u30cd\u30eb\u3082Linux\u3060\u3063\u305f\u3088\u306a\u3002Android\u30ab\u30fc\u30cd\u30eb\u30fb\u30fb\u30fb\u3059\u3050\u8aad\u3081\u305d\u3046\u306a\u306e\u30fb\u30fb\u30fb\u30bd\u30fc\u30b9\u3092\u6f01\u3063\u3066\u30fb\u30fb\u30fb\n\n\u3068\u3044\u3046\u3053\u3068\u3067ashmem\u8aad\u3093\u3067\u307f\u307e\u3059\nashmem\u306f\u3001shmem\u3068\u540c\u69d8\u306b\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002LWN.net\u306e\u8a18\u4e8b\u3084\u4eac\u90fd\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3055\u3093\u306e\u30b9\u30e9\u30a4\u30c9\u3001Tech Note\u3068\u3044\u3046\u30da\u30fc\u30b8\u306b\u3088\u308b\u3068\u3001\u7279\u5fb4\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n - \u30da\u30fc\u30b8\u30d4\u30f3\u30cb\u30f3\u30b0(page pinning)\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\u30d4\u30f3\u7559\u3081\u3068\u3044\u3046\u540d\u79f0\u304b\u3089\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u308b\u9593\u3001\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u305b\u305a\u306b\u4fdd\u6301\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308b\u3053\u3068\u304c\u63a8\u5b9a\u3067\u304d\u307e\u3059\u3002\n - \u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n - \u30e1\u30e2\u30ea\u3092\u6271\u3046\u305f\u3081\u306b\u3001/dev/ashmem\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3002\n - mmap()\u306b\u3088\u3063\u3066\u30de\u30c3\u30d7\u3055\u308c\u305f\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3082\u3057\u304f\u306fread()\u3092\u7528\u3044\u3066\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n - \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u3002shmem\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u6a5f\u80fd\u3068\u3082\u53d7\u3051\u53d6\u308c\u307e\u3059\u306d\u3002\n\u306a\u304a\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u300cRAM\u30da\u30fc\u30b8\u306e\u4e2d\u8eab\u306e\u5143\u30cd\u30bf\u3068\u306a\u308b\u30d5\u30a1\u30a4\u30eb\u300d\u3068\u3044\u3046\u610f\u5473\u304f\u3089\u3044\u306b\u6349\u3048\u3066\u304a\u3051\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002(\u4eee\u60f3\u8a18\u61b6\u3092\u672c\u683c\u7684\u306b\u8aad\u3080\u5834\u5408\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306e\u6982\u5ff5\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u5fc5\u9808\u3067\u3059\u3002)\nLinux\u306e\u5834\u5408\u3001\u30b0\u30b0\u3063\u305f\u308a\u66f8\u7c4d\u3092\u8aad\u3093\u3067\u8abf\u3079\u308b\u3068\u6a5f\u80fd\u306e\u6982\u8981\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3067\u3059\u3002\u307e\u305a\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u6a5f\u80fd\u306e\u8a71\u306f\u3068\u3082\u304b\u304f\u3001\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3042\u304f\u307e\u3067\u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6587\u66f8\u4f5c\u6210\u4ee5\u964d\u306b\u5b9f\u88c5\u304c\u5927\u5e45\u306b\u5909\u66f4\u3055\u308c\u3001\u4e56\u96e2\u304c\u751f\u3058\u308b\u3053\u3068\u304c\u591a\u3005\u3042\u308b\u305f\u3081\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3067\u78ba\u8a8d\u3059\u308b\u306e\u304c\u78ba\u5b9f\u3067\u3059\u3002\u7279\u306b\u8077\u696d\u3067Linux\u30ab\u30fc\u30cd\u30eb\u3044\u3058\u308b\u5834\u5408\u306f\u6ce8\u610f\u3067\u3059\u3002\u6587\u66f8\u3060\u3051\u9d5c\u5451\u307f\u306b\u3059\u308b\u3068\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u305c\u3002\n\nAndroid\u306e\u30bd\u30fc\u30b9\u53d6\u3063\u3066\u304f\u308b\u306e\u9762\u5012\u306a\u306e\u3067(\u304a\u3044)\n\u624b\u5143\u306b\u3042\u308bLinux4.3\u306edrivers/staging/android/ashmem.c\u3092\u8aad\u3080\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n\u307e\u305a\u306f\u521d\u671f\u5316\u51e6\u7406\n\u521d\u671f\u5316\u51e6\u7406\u3092\u8aad\u3080\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u628a\u63e1\u3067\u304d\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u591a\u3044\u3067\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001\u6700\u521d\u306b\u521d\u671f\u5316\u51e6\u7406\u306b\u76ee\u3092\u901a\u3059\u306e\u304c\u826f\u3044\u3068\u8003\u3048\u307e\u3059\u3002\n\ndrivers/staging/android/ashmem.c\nstatic struct shrinker ashmem_shrinker = {\n    .count_objects = ashmem_shrink_count,\n    .scan_objects = ashmem_shrink_scan,\n/* \u7565 */\n    .seeks = DEFAULT_SEEKS * 4,\n};\n\nstatic int __init ashmem_init(void)\n{\n    int ret;\n\n    ashmem_area_cachep = kmem_cache_create(\"ashmem_area_cache\",\n                      sizeof(struct ashmem_area),\n                      0, 0, NULL);\n    /* \u7565 */\n    ashmem_range_cachep = kmem_cache_create(\"ashmem_range_cache\",\n                      sizeof(struct ashmem_range),\n                      0, 0, NULL);\n    /* \u7565 */\n    ret = misc_register(&ashmem_misc);\n    /* \u7565 */\n    register_shrinker(&ashmem_shrinker);\n    /* \u7565 */\n}\n\n\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u4e8b\u5b9f\u4e0a\u3001\u4ee5\u4e0b3\u70b9\u3067\u3059\u3002\n\n\u5358\u7d14\u306bashmem_range\u69cb\u9020\u4f53\u3068ashmem_area\u69cb\u9020\u4f53\u3092\u78ba\u4fdd\u3057\u3066\u3044\u308b\nregister_shrinker()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u4eee\u60f3\u8a18\u61b6\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u767b\u9332\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u4f9d\u983c(Add a shrinker callback to be called from the vm)\u8a73\u3057\u304f\u306fmm/vmscan.c\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002)\nmisc_register()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u30c9\u30e9\u30a4\u30d0I/F\u306a\u3069\u3092\u767b\u9332\u3059\u308b\u3002\n\nashmem_area\u306f\u5171\u6709\u30e1\u30e2\u30ea\u9818\u57df\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u69cb\u9020\u4f53\u3067\u3059\u3002file\u3084prot\u3001size\u3068\u3044\u3063\u305f\u30e1\u30f3\u30d0\u304b\u3089\u3082\u30e1\u30e2\u30ea\u9818\u57df\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u3053\u3068\u304c\u4f3a\u3048\u307e\u3059\u3002(\u5148\u307b\u3069\u300c\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u300d\u3068\u66f8\u3044\u305f\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002)\n\ndrivers/staging/android/ashmem.c\n/**\n * struct ashmem_area - The anonymous shared memory area\n * \u7565\n */\nstruct ashmem_area {\n    char name[ASHMEM_FULL_NAME_LEN];\n    struct list_head unpinned_list;\n    struct file *file;\n    size_t size;\n    unsigned long prot_mask;\n};\n\n\n\u4e00\u65b9\u3067\u3001ashmem_range\u69cb\u9020\u4f53\u306f\u300cunpinn\u3055\u308c\u305f\u308a\u3001evictable\u3055\u308c\u305f\u30da\u30fc\u30b8\u306e\u7bc4\u56f2\u3092\u8868\u73fe\u3059\u308b\u300d\u69cb\u9020\u4f53\u3068\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u3059\u3002\u30b3\u30e1\u30f3\u30c8\u306f\u3067\u304d\u308b\u9650\u308a\u76ee\u3092\u901a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6b8b\u5ff5SIer\u306e\u300c// i\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u300d\u7684\u306a\u8179\u306e\u8db3\u3057\u306b\u3082\u306a\u3089\u306a\u3044\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u304b\u308c\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u3002\n\ndrivers/staging/android/ashmem.c\n/**\n * struct ashmem_range - A range of unpinned/evictable pages\n * \u7565\n * The lifecycle of this structure is from unpin to pin.\n */\nstruct ashmem_range {\n    struct list_head lru;\n    struct list_head unpinned;\n    struct ashmem_area *asma;\n    size_t pgstart;\n    size_t pgend;\n    unsigned int purged;\n};\n\n\n\nopen()\n\u521d\u671f\u5316\u51e6\u7406\u3068\u4e26\u3093\u3067\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u5834\u5408\u306fopen()\u306b\u76ee\u3092\u901a\u3057\u3066\u307f\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nashmem\u306eopen()\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001ashmem_area\u69cb\u9020\u4f53\u306e\u5272\u308a\u5f53\u3066\u304c\u51e6\u7406\u306e\u4e2d\u5fc3\u3067\u3059\u3002\n\ndrivers/staging/android/ashmem.c\nstatic int ashmem_open(struct inode *inode, struct file *file)\n{\n    struct ashmem_area *asma;\n    /* \u7565 */\n    asma = kmem_cache_zalloc(ashmem_area_cachep, GFP_KERNEL);\n    /* \u7565 */\n    file->private_data = asma;\n\n    return 0;\n}\n\n\n\nmmap\nashmem\u304c\u30e6\u30fc\u30b6\u306b\u516c\u958b\u3057\u3066\u3044\u308bI/F\u306e\u4e00\u3064\u3067\u3059\u3002\u5358\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\u51e6\u7406\u306f\u7701\u7565\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u6700\u5f8c\u306b\u5b9f\u65bd\u3057\u3066\u3044\u308b\u7279\u6b8a\u306a\u51e6\u7406\u3082\u7701\u7565\u3057\u307e\u3059\u3002(\u7279\u6b8a\u306a\u51e6\u7406\u306e\u5834\u5408\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u624b\u539a\u304f\u4ed8\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002)\n\u9aa8\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u3051\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n\u9aa8\u3068\u306a\u308b\u3068\u3053\u308d\u3092\u53d6\u6368\u9078\u629e\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u8a72\u5f53\u51e6\u7406\u304c\u4f55\u3092\u3084\u3063\u3066\u3044\u305d\u3046\u304b\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u5927\u5207\u3067\u3059\u3002\n\ndrivers/staging/android/ashmem.c\nstatic int ashmem_mmap(struct file *file, struct vm_area_struct *vma)\n{\n    struct ashmem_area *asma = file->private_data;\n\n/* \u5358\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\u306a\u306e\u3067\u3001\u7565 */\n\n    if (!asma->file) {\n        /* \u7565 */\n        /* ... and allocate the backing shmem file */\n        vmfile = shmem_file_setup(name, asma->size, vma->vm_flags);\n        /* \u7565 */\n        asma->file = vmfile;\n    }\n    get_file(asma->file);\n        /* \u7565 */\n}\n\n\n\u51e6\u7406\u306e\u4e2d\u5fc3\u306f\u3001shmem_file_setup()\u3068\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u3068\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304cashmem\u306emmap()\u306e\u9aa8\u683c\u3067\u3042\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\nshmem_file_setup()\u3092\u8aad\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u3072\u305f\u3059\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u57cb\u3081\u3066\u3044\u304f\u3060\u3051\u306e\u521d\u671f\u5316\u7cfb\u51e6\u7406\u306f\u8aad\u3093\u3067\u3066\u9762\u767d\u304f\u3042\u308a\u307e\u305b\u3093(\u7b11)\u3002\n\u5f53\u9762ashmem\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u305f\u3081\u306b\u306f\u3001\u300cshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u3001\u3064\u307e\u308aVFS\u306eI/F\u3092\u901a\u3057\u3066\u6700\u7d42\u7684\u306b\u547c\u3070\u308c\u308b\u5177\u4f53\u7684\u306a\u95a2\u6570\u306f\u4f55\u304b\u300d\u3068\u3044\u3046\u4e8b\u9805\u304c\u5206\u304b\u308c\u3070\u5341\u5206\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\nmm/shmem.c\nstatic const struct file_operations shmem_file_operations = {\n    .mmap       = shmem_mmap,\n#ifdef CONFIG_TMPFS\n    .llseek     = shmem_file_llseek,\n    .read_iter  = shmem_file_read_iter,\n    .write_iter = generic_file_write_iter,\n    .fsync      = noop_fsync,\n    .splice_read    = shmem_file_splice_read,\n    .splice_write   = iter_file_splice_write,\n    .fallocate  = shmem_fallocate,\n#endif\n};\n/* \u7565 */\nstatic struct file *__shmem_file_setup(const char *name, loff_t size,\n                       unsigned long flags, unsigned int i_flags)\n{\n    /* \u7565 */\n    res = alloc_file(&path, FMODE_WRITE | FMODE_READ,\n          &shmem_file_operations);\n    /* \u7565 */\n}\n\n\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306f\u3001\u826f\u3044\u5b9f\u88c5\u3092\u3059\u308b\u4e0a\u3067\u3082\u3061\u308d\u3093\u5fc5\u8981\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306f\u5384\u4ecb\u3067\u3059\u3002\u306a\u306e\u3067\u3001\u9759\u7684\u306b\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u5834\u5408\u3001\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u5148\u306b\u4f55\u304c\u3064\u3044\u3066\u3044\u308b\u304b\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u306f\u91cd\u8981\u3067\u3059\u3002\n\nread()\n\ndrivers/staging/android/ashmem.c\nstatic ssize_t ashmem_read(struct file *file, char __user *buf,\n               size_t len, loff_t *pos)\n{\n/* \u7565 */\n    ret = __vfs_read(asma->file, buf, len, pos);\n/* \u7565 */\n}\n\n\n\u5b9f\u306f\u3001\u4e0a\u8a18\u306eread()\u306f\u8907\u6570\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u7d4c\u3066\u3001shmem_file_read_iter()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u4eca\u306f\u3053\u3053\u3067\u3084\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n\u30d4\u30f3\u7559\u3081\n\u300cpin\u300d\u3067\u30bd\u30fc\u30b9\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u7b87\u6240\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002\nashmem_ioctl()\u3067\u3042\u308c\u3070\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306eioctl()\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3057\u53ef\u80fd\u3067\u3059\u3002\n\ndrivers/staging/android/ashmem.c\nstatic long ashmem_ioctl(struct file *file, unsigned int cmd, unsigned long arg)\n{\n/* \u7565 */\n    case ASHMEM_PIN:\n    case ASHMEM_UNPIN:\n    case ASHMEM_GET_PIN_STATUS:\n        ret = ashmem_pin_unpin(asma, cmd, (void __user *)arg);\n        break;\n/* \u7565 */\n}\n\n\nASHMEM_PIN(\u30d4\u30f3\u7559\u3081)\u306e\u5834\u5408\u3001ashmem_pin()\u304c\u3001ASHMEM_UNPIN(\u30d4\u30f3\u7559\u3081\u89e3\u9664)\u306e\u5834\u5408\u306fashmem_unpin()\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\nASHMEM_PIN(\u30d4\u30f3\u7559\u3081)\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3067\u3059\u3002\u9577\u3044\u3067\u3059\u304c\u3001\u3042\u3048\u3066\u5168\u90e8\u8f09\u305b\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u51e6\u7406\u306fashmem\u304c\u7ba1\u7406\u3059\u308b\u9818\u57df(\u7b2c\u4e00\u5f15\u6570)\u306e\u3046\u3061\u3001\u3069\u306e\u7bc4\u56f2\u3092\u30d4\u30f3\u7559\u3081\u3059\u308b\u304b\u958b\u59cb\u5730\u70b9(\u7b2c\u4e8c\u5f15\u6570)\u3068\u7d42\u4e86\u5730\u70b9(\u7b2c\u4e09\u5f15\u6570)\u3092\u6307\u5b9a\u3059\u308bI/F\u3067\u3059\u3002\n\u3053\u3053\u3067\u3001\u5148\u306b\u66f8\u3044\u305f\u3068\u304a\u308a\u3001\u300cashmem_range\u69cb\u9020\u4f53\u306f\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u306a\u3044\u9818\u57df\u3092\u8868\u73fe\u3059\u308b\u300d\u3053\u3068\u3092\u982d\u306b\u7559\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\ndrivers/staging/android/ashmem.c\n/*\n * ashmem_pin - pin the given ashmem region, returning whether it was\n * previously purged (ASHMEM_WAS_PURGED) or not (ASHMEM_NOT_PURGED).\n *\n * Caller must hold ashmem_mutex.\n */\nstatic int ashmem_pin(struct ashmem_area *asma, size_t pgstart, size_t pgend)\n{\n    struct ashmem_range *range, *next;\n/* \u7565 */\n    list_for_each_entry_safe(range, next, &asma->unpinned_list, unpinned) {\n        /* moved past last applicable page; we can short circuit */\n        if (range_before_page(range, pgstart))\n            break;\n\n        /*\n         * The user can ask us to pin pages that span multiple ranges,\n         * or to pin pages that aren't even unpinned, so this is messy.\n         *\n         * Four cases:\n         * 1. The requested range subsumes an existing range, so we\n         *    just remove the entire matching range.\n         * 2. The requested range overlaps the start of an existing\n         *    range, so we just update that range.\n         * 3. The requested range overlaps the end of an existing\n         *    range, so we just update that range.\n         * 4. The requested range punches a hole in an existing range,\n         *    so we have to update one side of the range and then\n         *    create a new range for the other side.\n         */\n        if (page_range_in_range(range, pgstart, pgend)) {\n            ret |= range->purged;\n\n            /* Case #1: Easy. Just nuke the whole thing. */\n            if (page_range_subsumes_range(range, pgstart, pgend)) {\n                range_del(range);\n                continue;\n            }\n\n            /* Case #2: We overlap from the start, so adjust it */\n            if (range->pgstart >= pgstart) {\n                range_shrink(range, pgend + 1, range->pgend);\n                continue;\n            }\n\n            /* Case #3: We overlap from the rear, so adjust it */\n            if (range->pgend <= pgend) {\n                range_shrink(range, range->pgstart, pgstart-1);\n                continue;\n            }\n\n            /*\n             * Case #4: We eat a chunk out of the middle. A bit\n             * more complicated, we allocate a new range for the\n             * second half and adjust the first chunk's endpoint.\n             */\n            range_alloc(asma, range, range->purged,\n                    pgend + 1, range->pgend);\n            range_shrink(range, range->pgstart, pgstart - 1);\n            break;\n        }\n    }\n\n    return ret;\n}\n\n\n\u6307\u5b9a\u3055\u308c\u305f\u9818\u57df\u3092\u300cunpinned(\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u306a\u3044)\u300d\u304b\u3089\u300cpinned(\u30d4\u30f3\u7559\u3081\u3055\u308c\u305f)\u300d\u306b\u5909\u66f4\u3059\u308b\u51e6\u7406\u3067\u3059\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u308f\u304b\u3063\u305f\u3067\u3057\u3087\u3046\u304b\u3002\npinned\u3057\u305f\u3044\u9818\u57df\u3092\u3001ashmem_renge\u69cb\u9020\u4f53\u304c\u30ab\u30d0\u30fc\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u4f55\u3089\u304b\u306e\u5909\u66f4\u3092\u52a0\u3048\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b1\u30fc\u30b9\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u56f3\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3053\u306e\u56f3\u3092\u8aad\u3093\u3067\u3001\u8aad\u307f\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u3060\u3044\u3076\u7406\u89e3\u3082\u9032\u3080\u306e\u3067\u306f\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u306b\u9650\u3089\u305a\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306b\u306f\u3001global\u3084ctags\u306a\u3069\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30bf\u30b0\u4ed8\u3051\u30c4\u30fc\u30eb\u3084\u30a8\u30c7\u30a3\u30bf\u306e\u652f\u63f4\u6a5f\u80fd\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u52a0\u3048\u3066\u3001\u30da\u30f3\u3068\u7d19\u3092\u7528\u610f\u3057\u3066\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u3092\u30e1\u30e2\u3057\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\u624b\u66f8\u304d\u306a\u306e\u3067\u3001\u30d5\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002\u7c21\u5358\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30d3\u30b8\u30e5\u30a2\u30eb\u306b\u3067\u304d\u308b\u306e\u3067\u3001\u76f4\u611f\u7684\u306a\u7406\u89e3\u304c\u9032\u307f\u307e\u3059\u3002\u3055\u3089\u306b\u3001\u8077\u696d\u3067\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u5834\u5408\u3001\u77e5\u8b58\u5171\u6709\u306e\u305f\u3081\u306e\u5831\u544a\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002Visio\u3084LibreOffice Draw\u3067\u63cf\u304f\u5834\u5408\u306e\u4e0b\u66f8\u304d\u3068\u3057\u3066\u3082\u3001\u624b\u66f8\u304d\u6587\u66f8\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066\u8cbc\u308a\u4ed8\u3051\u308b\u306b\u3057\u3066\u3082\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002\n\u306a\u304a\u3001ashmem_pin()\u3068\u5bfe\u306b\u306a\u308bashmem_unpin()\u306f\u7701\u7565\u3057\u307e\u3059\u3002\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u300cashmem_range\u69cb\u9020\u4f53\u3092\u30ea\u30b9\u30c8\u306b\u633f\u5165\u3059\u308b\u3002\u305d\u306e\u305f\u3081\u306b\u3001\u633f\u5165\u4f4d\u7f6e\u3092\u6c7a\u3081\u3066\u3001ashmem_range\u69cb\u9020\u4f53\u3092\u5272\u308a\u5f53\u3066\u3066\u633f\u5165\u300d\u3068\u3044\u3046\u306e\u304c\u672c\u7b4b\u3067\u3059\u3002\u7df4\u7fd2\u304c\u3066\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\nunpin\u3059\u308b\u76ee\u7684\n\u6700\u521d\u306b\u300c\u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\u307e\u305f\u3001\u521d\u671f\u5316\u51e6\u7406\u306e\u8aac\u660e\u3067\u300cregister_shrinker()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u4eee\u60f3\u8a18\u61b6\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u767b\u9332\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u4f9d\u983c\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\u306e\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\u3053\u308c\u3089\u3092\u78ba\u304b\u3081\u308b\u305f\u3081\u3001register_shrinker()\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nmm/vmscan.c\n/*\n * Add a shrinker callback to be called from the vm.\n */\nint register_shrinker(struct shrinker *shrinker)\n{\n/* \u7565 */\n    down_write(&shrinker_rwsem);\n    list_add_tail(&shrinker->list, &shrinker_list);\n    up_write(&shrinker_rwsem);\n    return 0;\n}\nEXPORT_SYMBOL(register_shrinker);\n\n\n\u6e21\u3055\u308c\u305f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u3092\u542b\u3080\u69cb\u9020\u4f53\u3092shrinker_list\u306b\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u3002\nshrinker_list\u3092\u6f01\u308b\u306e\u306fmm/vmscan.c\u306eshrink_slab()\u3067\u3001\u547c\u3073\u51fa\u3057\u5148\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u300cget_any_page()\u300d\u3068\u304b\u300cmemory_failure()\u300d\u3068\u304b\u5fc5\u6b7b\u3055\u304c\u3058\u308f\u3058\u308f\u4f1d\u308f\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u95a2\u6570\u305f\u3061\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3001\u4eca\u56de\u306f\u3053\u308c\u3089\u95a2\u6570\u306e\u5b9f\u88c5\u89e3\u8aac\u306f\u3057\u307e\u305b\u3093\u3002\nshrinker_list\u30ad\u30e5\u30fc\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\ndrivers/staging/android/ashmem.c\nstatic unsigned long\nashmem_shrink_scan(struct shrinker *shrink, struct shrink_control *sc)\n{\n/* \u7565 */\n    mutex_lock(&ashmem_mutex);\n    list_for_each_entry_safe(range, next, &ashmem_lru_list, lru) {\n/* \u7565 */\n        vfs_fallocate(range->asma->file,\n                  FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE,\n                  start, end - start);\n/* \u7565 */\n    }   \n    mutex_unlock(&ashmem_mutex);\n    return freed;\n}\n\n\nvfs_fallocate()\u3092asma->file\u3001\u3064\u307e\u308ashmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001vfs_fallocate()\u3092\u3061\u3087\u3063\u3068\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\nvfs\u3092\u5c11\u3057\u8997\u304f\nVFS\u306a\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u6700\u7d42\u7684\u306b\u5404\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3054\u3068\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u5148\u307b\u3069\u3001shmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u7fa4\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\nmm/shmem.c\nstatic const struct file_operations shmem_file_operations = {\n/* \u7565 */\n    .fallocate  = shmem_fallocate,\n\n\n\u4eca\u56de\u3001vfs_fallocate()\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u300cFALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE\u300d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e71\u66b4\u306a\u8a00\u3044\u65b9\u3092\u3059\u308b\u3068\u3001\u300c\u30d5\u30a1\u30a4\u30eb\u306e\u9014\u4e2d\u306b\u4f55\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u7a74\u3092\u958b\u3051\u308b\u300d\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\u300c\u7a74\u300d\u306f\u3082\u3061\u308d\u3093unpinned\u306a\u9818\u57df\u3067\u3059\u3002\n\nmm/shmem.c\nstatic long shmem_fallocate(struct file *file, int mode, loff_t offset,\n                             loff_t len) \n{\n/* \u7565 */\n    if (mode & FALLOC_FL_PUNCH_HOLE) {\n/* \u7565 */\n        if ((u64)unmap_end > (u64)unmap_start)\n            unmap_mapping_range(mapping, unmap_start,\n                        1 + unmap_end - unmap_start, 0);\n        shmem_truncate_range(inode, offset, offset + len - 1);\n/* \u7565 */\n        goto out;\n    }\n\n\n\u4e0a\u8a18\u306e\u51e6\u7406\u3092\u898b\u308b\u3068\u3001\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u7bc4\u56f2\u3092\u6d88\u3057(unmap_mapping_range())\u3001\u5b9f\u969b\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u3057\u307e\u3059\u3002(shmem_truncate_range())\u3002\nshmem_truncate_range()\u306f\u8907\u6570\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u7d4c\u3066\u3001\u4ee5\u4e0b\u306eshmem_undo_range()\u3092\u547c\u3073\u51fa\u3057\u3001\u3053\u306e\u4e2d\u3067pagevec_release()\u3092\u547c\u3073\u307e\u3059\u3002\n\u305d\u3057\u3066\u6700\u5f8c\u306b\u306frelease_pages()\u3092\u547c\u3073\u51fa\u3057\u3001\u30da\u30fc\u30b8\u306e\u89e3\u653e\u3092\u884c\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u306fashmem_shrink_scan()\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u4e0d\u8981\u306a\u30da\u30fc\u30b8\u304c\u89e3\u653e\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002(\u6b8b\u5ff5\u3067\u3059\u304c\u3001\u4eca\u56de\u306frelease_pages()\u306b\u306f\u8e0f\u307f\u8fbc\u307f\u307e\u305b\u3093\u3002\u8208\u5473\u3042\u308b\u65b9\u306f\u3054\u4e00\u8aad\u3092\u3002)\n\nmm/shmem.c\nstatic void shmem_undo_range(struct inode *inode, loff_t lstart, loff_t lend,\n                                 bool unfalloc)\n{\n\n    pagevec_init(&pvec, 0);\n    index = start;\n    while (index < end) {\n        pvec.nr = find_get_entries(mapping, index,\n            min(end - index, (pgoff_t)PAGEVEC_SIZE),\n            pvec.pages, indices);\n        /* \u7565 */\n        pagevec_release(&pvec);\n        cond_resched();\n        index++;\n    }\n    /* \u7565 */\n\n\n\n\u307e\u3068\u3081\n\u3053\u306e\u6587\u66f8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306f\u30d7\u30ec\u30bc\u30f3\u8cc7\u6599\u306a\u3069\u304b\u3089\u8aad\u307f\u53d6\u3063\u305f\u5185\u5bb9\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3053\u3068\u3067\u304b\u306a\u308a\u5177\u4f53\u7684\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n - \u30da\u30fc\u30b8\u30d4\u30f3\u30cb\u30f3\u30b0(page pinning)\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\u30d4\u30f3\u7559\u3081\u3068\u3044\u3046\u540d\u79f0\u304b\u3089\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u308b\u9593\u3001\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u305b\u305a\u306b\u4fdd\u6301\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308b\u3053\u3068\u304c\u63a8\u5b9a\u3067\u304d\u307e\u3059\u3002\n - \u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n - \u30e1\u30e2\u30ea\u3092\u6271\u3046\u305f\u3081\u306b\u3001/dev/ashmem\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3002\n - mmap()\u306b\u3088\u3063\u3066\u30de\u30c3\u30d7\u3055\u308c\u305f\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3082\u3057\u304f\u306fread()\u3092\u7528\u3044\u3066\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n - \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u3002shmem\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u6a5f\u80fd\u3068\u3082\u53d7\u3051\u53d6\u308c\u307e\u3059\u306d\u3002\n\n\u6700\u5f8c\u306bshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306efallocate()\u306e\u51e6\u7406\u306e\u4e00\u90e8\u306b\u8e0f\u307f\u8fbc\u3093\u3060\u3088\u3046\u306b\u3001ashmem\u30c9\u30e9\u30a4\u30d0\u306e\u3088\u3046\u306a\u304b\u306a\u308a\u5c0f\u3055\u3081\u306e\u30c9\u30e9\u30a4\u30d0\u3067\u3082\u30ab\u30fc\u30cd\u30eb\u306e\u51e6\u7406\u306b\u8ff7\u3044\u8fbc\u3080\u8e0f\u307f\u8fbc\u3080\u9053\u306f\u3042\u308a\u307e\u3059\u3002\n\u4f8b\u3048\u3070\u3001misc_register()\u3092\u901a\u3057\u3066\u30c9\u30e9\u30a4\u30d0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u8e0f\u307f\u8fbc\u3080\u306e\u3082\u3088\u3057\u3001kmalloc()\u306e\u3088\u3046\u306a\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u95a2\u6570\u3092\u901a\u3057\u3066\u4eee\u60f3\u8a18\u61b6\u306b\u8db3\u3092\u8e0f\u307f\u5165\u308c\u308b\u3082\u3088\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u51e6\u7406\u3092\u8aad\u3080\u306e\u3082\u3088\u3057\u3067\u3059\u3002\n\u3044\u3063\u307a\u3093\u306b\u5168\u90e8\u628a\u63e1\u3059\u308b\u306e\u306f\u7121\u7406\u3067\u3059\uff01(\u304d\u3063\u3071\u308a)\u5c11\u3057\u305a\u3064\u3067\u69cb\u308f\u306a\u3044\u306e\u3067\u826f\u3044\u672c\u3092\u7247\u624b\u306b\u8aad\u307f\u3064\u3064\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u5c11\u3057\u305a\u3064\u5468\u8fba\u3092\u56fa\u3081\u3066\u3044\u304f\u306e\u304c\u826f\u3044\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002@masami256\u3055\u3093\u304c\u66f8\u3044\u305fLinux Kernel Hack\u5165\u9580\u7de8\u3068\u3044\u3046\u826f\u8a18\u4e8b\u304c\u305d\u306e\u3042\u305f\u308a\u5927\u5909\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u306e\u307b\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u52c9\u5f37\u4f1a\u306b\u53c2\u52a0\u3057\u3066\u3001\u5468\u308a\u306e\u4eba\u306b\u8cea\u554f\u3057\u3066\u307f\u308b\u3068\u3044\u3046\u624b\u3082\u3042\u308a\u307e\u3059\u3002\n\u4f55\u306f\u3068\u3082\u3042\u308c\u3001\u4eca\u5e74\u3082\u5c11\u306a\u3044\u3067\u3059\u304c\u3001\u4eca\u5e74\u3082\u6765\u5e74\u3082Happy Hacking!\n## \u3068\u308a\u3042\u3048\u305a\u4f55\u3092\u8aad\u3082\u3046\u304b\n\u3069\u3046\u3082\u3001\u30af\u30ea\u30b9\u30de\u30b9\u3082\u8fd1\u3044\u3068\u3044\u3046\u306e\u306b\u3001\u30bd\u30fc\u30b9\u306e\u8aad\u307f\u66f8\u304d\u304b\u9152\u3092\u98f2\u3093\u3067\u3044\u308b\u304b\u3069\u3061\u3089\u304b\u306e@akachochin\u3067\u3059\u3002\n\u4eca\u56de\u306e\u6295\u7a3f\u53c2\u52a0\u306f\u9152\u98f2\u3093\u3060\u52e2\u3044\u3067\u6c7a\u3081\u307e\u3057\u305f(\u7b11)\u3002\n\n\u305d\u308c\u306f\u3068\u3082\u304b\u304f\u3002\u6700\u8fd1\u8907\u6570\u306e\u65b9\u304b\u3089\u300c\u30ab\u30fc\u30cd\u30eb\u306e\u30bd\u30fc\u30b9\u8aad\u307f\u305f\u3044\u3051\u3069\u3001\u3088\u304f\u308f\u304b\u3089\u3093\u300d\u3068\u3044\u3046\u76f8\u8ac7\u3092\u53d7\u3051\u307e\u3057\u305f\u3002\n\n\u305d\u306e\u4eba\u306e\u77e5\u8b58\u30ec\u30d9\u30eb\u306b\u3082\u3088\u308a\u307e\u3059\u304c\u3001\u307e\u305a\u30c9\u30e9\u30a4\u30d0\u3092\u8aad\u3093\u3067\u30ab\u30fc\u30cd\u30eb\u30b3\u30fc\u30c9\u306e\u96f0\u56f2\u6c17\u3092\u5473\u308f\u3044\u3064\u3064\u3001\u30ab\u30fc\u30cd\u30eb\u5185API\u3092\u8abf\u3079\u305f\u308a\u8aad\u3093\u3060\u308a\u3057\u3066\u3001\u5f90\u3005\u306b\u9818\u57df\u3092\u5e83\u3052\u3066\u3044\u304f\u306e\u304c\u826f\u3044\u306e\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002\u305f\u3060\u3057\u3001\u7d30\u304b\u306a\u30c7\u30d0\u30a4\u30b9\u306e\u5236\u5fa1\u306f\u7121\u8996\u3057\u305f\u307b\u3046\u304c\u3088\u3044\u3067\u3057\u3087\u3046\u3002\u305d\u3046\u3044\u3046\u610f\u5473\u3067\u3001\u4eee\u60f3\u7684\u306a\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u306f\u683c\u597d\u306e\u6559\u6750\u3060\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u3067\u4eca\u56de\u306e\u30cd\u30bf\u306f\u30fb\u30fb\u30fb\u306a\u3044\u30fb\u30fb\u30fb\u3002\u305d\u3046\u3044\u3048\u3070Android\u30ab\u30fc\u30cd\u30eb\u3082Linux\u3060\u3063\u305f\u3088\u306a\u3002Android\u30ab\u30fc\u30cd\u30eb\u30fb\u30fb\u30fb\u3059\u3050\u8aad\u3081\u305d\u3046\u306a\u306e\u30fb\u30fb\u30fb\u30bd\u30fc\u30b9\u3092\u6f01\u3063\u3066\u30fb\u30fb\u30fb\n\n## \u3068\u3044\u3046\u3053\u3068\u3067ashmem\u8aad\u3093\u3067\u307f\u307e\u3059\nashmem\u306f\u3001shmem\u3068\u540c\u69d8\u306b\u30d7\u30ed\u30bb\u30b9\u9593\u3067\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3059\u308b\u305f\u3081\u306e\u4ed5\u7d44\u307f\u3067\u3059\u3002[LWN.net\u306e\u8a18\u4e8b](https://lwn.net/Articles/452035/)\u3084[\u4eac\u90fd\u30de\u30a4\u30af\u30ed\u30b3\u30f3\u30d4\u30e5\u30fc\u30bf\u3055\u3093\u306e\u30b9\u30e9\u30a4\u30c9](http://coin.nikkeibp.co.jp/coin/ncc/semi/0812/Android_20081211_Tsuji.pdf)\u3001[Tech Note\u3068\u3044\u3046\u30da\u30fc\u30b8](http://rest-term.com/technote/index.php/Android)\u306b\u3088\u308b\u3068\u3001\u7279\u5fb4\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n - \u30da\u30fc\u30b8\u30d4\u30f3\u30cb\u30f3\u30b0(page pinning)\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\u30d4\u30f3\u7559\u3081\u3068\u3044\u3046\u540d\u79f0\u304b\u3089\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u308b\u9593\u3001\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u305b\u305a\u306b\u4fdd\u6301\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308b\u3053\u3068\u304c\u63a8\u5b9a\u3067\u304d\u307e\u3059\u3002\n - \u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n - \u30e1\u30e2\u30ea\u3092\u6271\u3046\u305f\u3081\u306b\u3001/dev/ashmem\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3002\n - mmap()\u306b\u3088\u3063\u3066\u30de\u30c3\u30d7\u3055\u308c\u305f\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3082\u3057\u304f\u306fread()\u3092\u7528\u3044\u3066\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3057\u307e\u3059\u3002\n - \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u3002shmem\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u6a5f\u80fd\u3068\u3082\u53d7\u3051\u53d6\u308c\u307e\u3059\u306d\u3002\n\n\u306a\u304a\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u300cRAM\u30da\u30fc\u30b8\u306e\u4e2d\u8eab\u306e\u5143\u30cd\u30bf\u3068\u306a\u308b\u30d5\u30a1\u30a4\u30eb\u300d\u3068\u3044\u3046\u610f\u5473\u304f\u3089\u3044\u306b\u6349\u3048\u3066\u304a\u3051\u3070\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002(\u4eee\u60f3\u8a18\u61b6\u3092\u672c\u683c\u7684\u306b\u8aad\u3080\u5834\u5408\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306e\u6982\u5ff5\u3092\u7406\u89e3\u3059\u308b\u3053\u3068\u306f\u5fc5\u9808\u3067\u3059\u3002)\n\nLinux\u306e\u5834\u5408\u3001**\u30b0\u30b0\u3063\u305f\u308a\u66f8\u7c4d\u3092\u8aad\u3093\u3067\u8abf\u3079\u308b\u3068\u6a5f\u80fd\u306e\u6982\u8981\u3092\u77e5\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b1\u30fc\u30b9\u304c\u591a\u3044\u3067\u3059\u3002\u307e\u305a\u8abf\u3079\u3066\u307f\u307e\u3057\u3087\u3046\u3002**\n\u6a5f\u80fd\u306e\u8a71\u306f\u3068\u3082\u304b\u304f\u3001\u5b9f\u88c5\u306b\u3064\u3044\u3066\u306f\u3042\u304f\u307e\u3067\u3082\u53c2\u8003\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\u6587\u66f8\u4f5c\u6210\u4ee5\u964d\u306b\u5b9f\u88c5\u304c\u5927\u5e45\u306b\u5909\u66f4\u3055\u308c\u3001\u4e56\u96e2\u304c\u751f\u3058\u308b\u3053\u3068\u304c\u591a\u3005\u3042\u308b\u305f\u3081\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3067\u78ba\u8a8d\u3059\u308b\u306e\u304c\u78ba\u5b9f\u3067\u3059\u3002**\u7279\u306b\u8077\u696d\u3067Linux\u30ab\u30fc\u30cd\u30eb\u3044\u3058\u308b\u5834\u5408\u306f\u6ce8\u610f\u3067\u3059\u3002\u6587\u66f8\u3060\u3051\u9d5c\u5451\u307f\u306b\u3059\u308b\u3068\u5927\u5909\u306a\u3053\u3068\u306b\u306a\u308b**\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u305c\u3002\n\n## Android\u306e\u30bd\u30fc\u30b9\u53d6\u3063\u3066\u304f\u308b\u306e\u9762\u5012\u306a\u306e\u3067(\u304a\u3044)\n\u624b\u5143\u306b\u3042\u308bLinux4.3\u306edrivers/staging/android/ashmem.c\u3092\u8aad\u3080\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n### \u307e\u305a\u306f\u521d\u671f\u5316\u51e6\u7406\n\n\u521d\u671f\u5316\u51e6\u7406\u3092\u8aad\u3080\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u628a\u63e1\u3067\u304d\u308b\u3053\u3068\u304c\u975e\u5e38\u306b\u591a\u3044\u3067\u3059\u3002\u500b\u4eba\u7684\u306b\u306f\u3001\u6700\u521d\u306b\u521d\u671f\u5316\u51e6\u7406\u306b\u76ee\u3092\u901a\u3059\u306e\u304c\u826f\u3044\u3068\u8003\u3048\u307e\u3059\u3002\n\n```c:drivers/staging/android/ashmem.c\nstatic struct shrinker ashmem_shrinker = {\n    .count_objects = ashmem_shrink_count,\n    .scan_objects = ashmem_shrink_scan,\n/* \u7565 */\n    .seeks = DEFAULT_SEEKS * 4,\n};\n\nstatic int __init ashmem_init(void)\n{\n    int ret;\n\n    ashmem_area_cachep = kmem_cache_create(\"ashmem_area_cache\",\n                      sizeof(struct ashmem_area),\n                      0, 0, NULL);\n    /* \u7565 */\n    ashmem_range_cachep = kmem_cache_create(\"ashmem_range_cache\",\n                      sizeof(struct ashmem_range),\n                      0, 0, NULL);\n    /* \u7565 */\n    ret = misc_register(&ashmem_misc);\n    /* \u7565 */\n    register_shrinker(&ashmem_shrinker);\n    /* \u7565 */\n}\n```\n\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u4e8b\u5b9f\u4e0a\u3001\u4ee5\u4e0b3\u70b9\u3067\u3059\u3002\n\n - \u5358\u7d14\u306bashmem_range\u69cb\u9020\u4f53\u3068ashmem_area\u69cb\u9020\u4f53\u3092\u78ba\u4fdd\u3057\u3066\u3044\u308b\n - register_shrinker()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u4eee\u60f3\u8a18\u61b6\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u767b\u9332\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u4f9d\u983c(Add a shrinker callback to be called from the vm)\u8a73\u3057\u304f\u306fmm/vmscan.c\u3092\u8aad\u3093\u3067\u304f\u3060\u3055\u3044\u3002)\n - misc_register()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u30c9\u30e9\u30a4\u30d0I/F\u306a\u3069\u3092\u767b\u9332\u3059\u308b\u3002\n\nashmem_area\u306f\u5171\u6709\u30e1\u30e2\u30ea\u9818\u57df\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306e\u69cb\u9020\u4f53\u3067\u3059\u3002file\u3084prot\u3001size\u3068\u3044\u3063\u305f\u30e1\u30f3\u30d0\u304b\u3089\u3082\u30e1\u30e2\u30ea\u9818\u57df\u3092\u8868\u73fe\u3059\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3067\u3042\u308b\u3053\u3068\u304c\u4f3a\u3048\u307e\u3059\u3002(\u5148\u307b\u3069\u300c\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u300d\u3068\u66f8\u3044\u305f\u3053\u3068\u3092\u601d\u3044\u51fa\u3057\u3066\u3044\u305f\u3060\u3051\u308b\u3068\u5e78\u3044\u3067\u3059\u3002)\n\n```c:drivers/staging/android/ashmem.c\n/**\n * struct ashmem_area - The anonymous shared memory area\n * \u7565\n */\nstruct ashmem_area {\n    char name[ASHMEM_FULL_NAME_LEN];\n    struct list_head unpinned_list;\n    struct file *file;\n    size_t size;\n    unsigned long prot_mask;\n};\n```\n\n\u4e00\u65b9\u3067\u3001ashmem_range\u69cb\u9020\u4f53\u306f**\u300cunpinn\u3055\u308c\u305f\u308a\u3001evictable\u3055\u308c\u305f\u30da\u30fc\u30b8\u306e\u7bc4\u56f2\u3092\u8868\u73fe\u3059\u308b\u300d\u69cb\u9020\u4f53**\u3068\u5224\u65ad\u3067\u304d\u307e\u3059\u3002\u305d\u306e\u7406\u7531\u306f\u30b3\u30e1\u30f3\u30c8\u3067\u3059\u3002**\u30b3\u30e1\u30f3\u30c8\u306f\u3067\u304d\u308b\u9650\u308a\u76ee\u3092\u901a\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\u6b8b\u5ff5SIer\u306e\u300c// i\u3092\u30a4\u30f3\u30af\u30ea\u30e1\u30f3\u30c8\u3059\u308b\u300d\u7684\u306a\u8179\u306e\u8db3\u3057\u306b\u3082\u306a\u3089\u306a\u3044\u30b3\u30e1\u30f3\u30c8\u304c\u66f8\u304b\u308c\u308b\u3053\u3068\u306f\u3042\u307e\u308a\u3042\u308a\u307e\u305b\u3093\u3002**\n\n```c:drivers/staging/android/ashmem.c\n/**\n * struct ashmem_range - A range of unpinned/evictable pages\n * \u7565\n * The lifecycle of this structure is from unpin to pin.\n */\nstruct ashmem_range {\n    struct list_head lru;\n    struct list_head unpinned;\n    struct ashmem_area *asma;\n    size_t pgstart;\n    size_t pgend;\n    unsigned int purged;\n};\n```\n\n## open()\n\n\u521d\u671f\u5316\u51e6\u7406\u3068\u4e26\u3093\u3067\u3001\u30c9\u30e9\u30a4\u30d0\u306e\u5834\u5408\u306fopen()\u306b\u76ee\u3092\u901a\u3057\u3066\u307f\u308b\u306e\u3082\u826f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nashmem\u306eopen()\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001ashmem_area\u69cb\u9020\u4f53\u306e\u5272\u308a\u5f53\u3066\u304c\u51e6\u7406\u306e\u4e2d\u5fc3\u3067\u3059\u3002\n\n```c:drivers/staging/android/ashmem.c\nstatic int ashmem_open(struct inode *inode, struct file *file)\n{\n    struct ashmem_area *asma;\n    /* \u7565 */\n    asma = kmem_cache_zalloc(ashmem_area_cachep, GFP_KERNEL);\n    /* \u7565 */\n    file->private_data = asma;\n\n    return 0;\n}\n```\n\n\n## mmap\n\nashmem\u304c\u30e6\u30fc\u30b6\u306b\u516c\u958b\u3057\u3066\u3044\u308bI/F\u306e\u4e00\u3064\u3067\u3059\u3002\u5358\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\u51e6\u7406\u306f\u7701\u7565\u3057\u307e\u3059\u3002\u307e\u305f\u3001\u6700\u5f8c\u306b\u5b9f\u65bd\u3057\u3066\u3044\u308b\u7279\u6b8a\u306a\u51e6\u7406\u3082\u7701\u7565\u3057\u307e\u3059\u3002(\u7279\u6b8a\u306a\u51e6\u7406\u306e\u5834\u5408\u3001\u30b3\u30e1\u30f3\u30c8\u304c\u624b\u539a\u304f\u4ed8\u3044\u3066\u3044\u308b\u3053\u3068\u304c\u591a\u304b\u3063\u305f\u308a\u3057\u307e\u3059\u3002)\n\u9aa8\u306b\u306a\u308b\u3068\u3053\u308d\u3060\u3051\u898b\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3068\u601d\u3044\u307e\u3059\u3002\n**\u9aa8\u3068\u306a\u308b\u3068\u3053\u308d\u3092\u53d6\u6368\u9078\u629e\u3057\u3066\u3001\u3068\u308a\u3042\u3048\u305a\u8a72\u5f53\u51e6\u7406\u304c\u4f55\u3092\u3084\u3063\u3066\u3044\u305d\u3046\u304b\u30a4\u30e1\u30fc\u30b8\u3057\u3066\u3044\u304f\u3053\u3068\u304c\u5927\u5207**\u3067\u3059\u3002\n\n```c:drivers/staging/android/ashmem.c\nstatic int ashmem_mmap(struct file *file, struct vm_area_struct *vma)\n{\n    struct ashmem_area *asma = file->private_data;\n\n/* \u5358\u306a\u308b\u30d1\u30e9\u30e1\u30fc\u30bf\u30c1\u30a7\u30c3\u30af\u306a\u306e\u3067\u3001\u7565 */\n\n    if (!asma->file) {\n        /* \u7565 */\n        /* ... and allocate the backing shmem file */\n        vmfile = shmem_file_setup(name, asma->size, vma->vm_flags);\n        /* \u7565 */\n        asma->file = vmfile;\n    }\n    get_file(asma->file);\n        /* \u7565 */\n}\n```\n\n\u51e6\u7406\u306e\u4e2d\u5fc3\u306f\u3001shmem_file_setup()\u3068\u306a\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002\u3064\u307e\u308a\u3001\u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u3068\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304cashmem\u306emmap()\u306e\u9aa8\u683c\u3067\u3042\u308b\u3068\u8a00\u3048\u305d\u3046\u3067\u3059\u3002\n\nshmem_file_setup()\u3092\u8aad\u3093\u3067\u3082\u826f\u3044\u3067\u3059\u304c\u3001\u3072\u305f\u3059\u3089\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u57cb\u3081\u3066\u3044\u304f\u3060\u3051\u306e\u521d\u671f\u5316\u7cfb\u51e6\u7406\u306f\u8aad\u3093\u3067\u3066\u9762\u767d\u304f\u3042\u308a\u307e\u305b\u3093(\u7b11)\u3002\n\u5f53\u9762ashmem\u306e\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u305f\u3081\u306b\u306f\u3001\u300cshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3078\u306e\u30a2\u30af\u30bb\u30b9\u6642\u3001\u3064\u307e\u308aVFS\u306eI/F\u3092\u901a\u3057\u3066\u6700\u7d42\u7684\u306b\u547c\u3070\u308c\u308b\u5177\u4f53\u7684\u306a\u95a2\u6570\u306f\u4f55\u304b\u300d\u3068\u3044\u3046\u4e8b\u9805\u304c\u5206\u304b\u308c\u3070\u5341\u5206\u3068\u601d\u308f\u308c\u307e\u3059\u3002\n\u5177\u4f53\u7684\u306b\u306f\u3001\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3059\u3002\n\n```c:mm/shmem.c\nstatic const struct file_operations shmem_file_operations = {\n    .mmap       = shmem_mmap,\n#ifdef CONFIG_TMPFS\n    .llseek     = shmem_file_llseek,\n    .read_iter  = shmem_file_read_iter,\n    .write_iter = generic_file_write_iter,\n    .fsync      = noop_fsync,\n    .splice_read    = shmem_file_splice_read,\n    .splice_write   = iter_file_splice_write,\n    .fallocate  = shmem_fallocate,\n#endif\n};\n/* \u7565 */\nstatic struct file *__shmem_file_setup(const char *name, loff_t size,\n                       unsigned long flags, unsigned int i_flags)\n{\n    /* \u7565 */\n    res = alloc_file(&path, FMODE_WRITE | FMODE_READ,\n          &shmem_file_operations);\n    /* \u7565 */\n}\n```\n\n\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306f\u3001\u826f\u3044\u5b9f\u88c5\u3092\u3059\u308b\u4e0a\u3067\u3082\u3061\u308d\u3093\u5fc5\u8981\u3067\u3059\u3002\u3057\u304b\u3057\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306f\u5384\u4ecb\u3067\u3059\u3002\u306a\u306e\u3067\u3001**\u9759\u7684\u306b\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u5834\u5408\u3001\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306e\u5148\u306b\u4f55\u304c\u3064\u3044\u3066\u3044\u308b\u304b\u3092\u628a\u63e1\u3059\u308b\u3053\u3068\u306f\u91cd\u8981**\u3067\u3059\u3002\n\n## read()\n\n```c:drivers/staging/android/ashmem.c\nstatic ssize_t ashmem_read(struct file *file, char __user *buf,\n               size_t len, loff_t *pos)\n{\n/* \u7565 */\n    ret = __vfs_read(asma->file, buf, len, pos);\n/* \u7565 */\n}\n```\n\n\u5b9f\u306f\u3001\u4e0a\u8a18\u306eread()\u306f\u8907\u6570\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u7d4c\u3066\u3001shmem_file_read_iter()\u3092\u547c\u3073\u51fa\u3057\u307e\u3059\u3002\u4eca\u306f\u3053\u3053\u3067\u3084\u3081\u3066\u304a\u304d\u307e\u3059\u3002\n\n## \u30d4\u30f3\u7559\u3081\n\n\u300cpin\u300d\u3067\u30bd\u30fc\u30b9\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u3001\u4ee5\u4e0b\u306e\u7b87\u6240\u304c\u8a72\u5f53\u3057\u307e\u3059\u3002\nashmem_ioctl()\u3067\u3042\u308c\u3070\u3001\u30e6\u30fc\u30b6\u30d7\u30ed\u30bb\u30b9\u304b\u3089\u306eioctl()\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3057\u53ef\u80fd\u3067\u3059\u3002\n\n```c:drivers/staging/android/ashmem.c\nstatic long ashmem_ioctl(struct file *file, unsigned int cmd, unsigned long arg)\n{\n/* \u7565 */\n    case ASHMEM_PIN:\n    case ASHMEM_UNPIN:\n    case ASHMEM_GET_PIN_STATUS:\n        ret = ashmem_pin_unpin(asma, cmd, (void __user *)arg);\n        break;\n/* \u7565 */\n}\n```\n\nASHMEM_PIN(\u30d4\u30f3\u7559\u3081)\u306e\u5834\u5408\u3001ashmem_pin()\u304c\u3001ASHMEM_UNPIN(\u30d4\u30f3\u7559\u3081\u89e3\u9664)\u306e\u5834\u5408\u306fashmem_unpin()\u304c\u547c\u3073\u51fa\u3055\u308c\u307e\u3059\u3002\n\n## ASHMEM_PIN(\u30d4\u30f3\u7559\u3081)\n\n\u4ee5\u4e0b\u306e\u51e6\u7406\u3067\u3059\u3002\u9577\u3044\u3067\u3059\u304c\u3001\u3042\u3048\u3066\u5168\u90e8\u8f09\u305b\u3066\u307f\u307e\u3057\u305f\u3002\n\u3053\u306e\u51e6\u7406\u306fashmem\u304c\u7ba1\u7406\u3059\u308b\u9818\u57df(\u7b2c\u4e00\u5f15\u6570)\u306e\u3046\u3061\u3001\u3069\u306e\u7bc4\u56f2\u3092\u30d4\u30f3\u7559\u3081\u3059\u308b\u304b\u958b\u59cb\u5730\u70b9(\u7b2c\u4e8c\u5f15\u6570)\u3068\u7d42\u4e86\u5730\u70b9(\u7b2c\u4e09\u5f15\u6570)\u3092\u6307\u5b9a\u3059\u308bI/F\u3067\u3059\u3002\n\u3053\u3053\u3067\u3001\u5148\u306b\u66f8\u3044\u305f\u3068\u304a\u308a\u3001\u300cashmem_range\u69cb\u9020\u4f53\u306f\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066**\u3044\u306a\u3044**\u9818\u57df\u3092\u8868\u73fe\u3059\u308b\u300d\u3053\u3068\u3092\u982d\u306b\u7559\u3081\u3066\u304f\u3060\u3055\u3044\u3002\n\n```c:drivers/staging/android/ashmem.c\n/*\n * ashmem_pin - pin the given ashmem region, returning whether it was\n * previously purged (ASHMEM_WAS_PURGED) or not (ASHMEM_NOT_PURGED).\n *\n * Caller must hold ashmem_mutex.\n */\nstatic int ashmem_pin(struct ashmem_area *asma, size_t pgstart, size_t pgend)\n{\n    struct ashmem_range *range, *next;\n/* \u7565 */\n    list_for_each_entry_safe(range, next, &asma->unpinned_list, unpinned) {\n        /* moved past last applicable page; we can short circuit */\n        if (range_before_page(range, pgstart))\n            break;\n\n        /*\n         * The user can ask us to pin pages that span multiple ranges,\n         * or to pin pages that aren't even unpinned, so this is messy.\n         *\n         * Four cases:\n         * 1. The requested range subsumes an existing range, so we\n         *    just remove the entire matching range.\n         * 2. The requested range overlaps the start of an existing\n         *    range, so we just update that range.\n         * 3. The requested range overlaps the end of an existing\n         *    range, so we just update that range.\n         * 4. The requested range punches a hole in an existing range,\n         *    so we have to update one side of the range and then\n         *    create a new range for the other side.\n         */\n        if (page_range_in_range(range, pgstart, pgend)) {\n            ret |= range->purged;\n\n            /* Case #1: Easy. Just nuke the whole thing. */\n            if (page_range_subsumes_range(range, pgstart, pgend)) {\n                range_del(range);\n                continue;\n            }\n\n            /* Case #2: We overlap from the start, so adjust it */\n            if (range->pgstart >= pgstart) {\n                range_shrink(range, pgend + 1, range->pgend);\n                continue;\n            }\n\n            /* Case #3: We overlap from the rear, so adjust it */\n            if (range->pgend <= pgend) {\n                range_shrink(range, range->pgstart, pgstart-1);\n                continue;\n            }\n\n            /*\n             * Case #4: We eat a chunk out of the middle. A bit\n             * more complicated, we allocate a new range for the\n             * second half and adjust the first chunk's endpoint.\n             */\n            range_alloc(asma, range, range->purged,\n                    pgend + 1, range->pgend);\n            range_shrink(range, range->pgstart, pgstart - 1);\n            break;\n        }\n    }\n\n    return ret;\n}\n```\n\n\u6307\u5b9a\u3055\u308c\u305f\u9818\u57df\u3092\u300cunpinned(\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u306a\u3044)\u300d\u304b\u3089\u300cpinned(\u30d4\u30f3\u7559\u3081\u3055\u308c\u305f)\u300d\u306b\u5909\u66f4\u3059\u308b\u51e6\u7406\u3067\u3059\u3002\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306f\u308f\u304b\u3063\u305f\u3067\u3057\u3087\u3046\u304b\u3002\npinned\u3057\u305f\u3044\u9818\u57df\u3092\u3001ashmem_renge\u69cb\u9020\u4f53\u304c\u30ab\u30d0\u30fc\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u4f55\u3089\u304b\u306e\u5909\u66f4\u3092\u52a0\u3048\u306a\u3044\u3068\u3044\u3051\u307e\u305b\u3093\u3002\u5b9f\u306f\u3001\u4e0a\u8a18\u306e\u30b1\u30fc\u30b9\u306f\u305d\u308c\u305e\u308c\u4ee5\u4e0b\u306e\u56f3\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u307e\u3059\u3002\n\n![chart.jpg](https://qiita-image-store.s3.amazonaws.com/0/19975/e768df3c-a6c0-ab8d-aaa5-dd6908b56872.jpeg)\n\n\u3053\u306e\u56f3\u3092\u8aad\u3093\u3067\u3001\u8aad\u307f\u76f4\u3057\u3066\u307f\u308b\u3068\u3001\u3060\u3044\u3076\u7406\u89e3\u3082\u9032\u3080\u306e\u3067\u306f\u306a\u3044\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002\n\u30ab\u30fc\u30cd\u30eb\u306b\u9650\u3089\u305a\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3068\u304d\u306b\u306f\u3001global\u3084ctags\u306a\u3069\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u30bf\u30b0\u4ed8\u3051\u30c4\u30fc\u30eb\u3084\u30a8\u30c7\u30a3\u30bf\u306e\u652f\u63f4\u6a5f\u80fd\u304c\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\u52a0\u3048\u3066\u3001\u30da\u30f3\u3068\u7d19\u3092\u7528\u610f\u3057\u3066\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306a\u3069\u3092\u30e1\u30e2\u3057\u306a\u304c\u3089\u8aad\u3093\u3067\u307f\u308b\u3053\u3068\u3092\u30aa\u30b9\u30b9\u30e1\u3057\u307e\u3059\u3002\n\u624b\u66f8\u304d\u306a\u306e\u3067\u3001\u30d5\u30ea\u30fc\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u3002\u7c21\u5358\u306b\u30c7\u30fc\u30bf\u69cb\u9020\u3084\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3092\u30d3\u30b8\u30e5\u30a2\u30eb\u306b\u3067\u304d\u308b\u306e\u3067\u3001\u76f4\u611f\u7684\u306a\u7406\u89e3\u304c\u9032\u307f\u307e\u3059\u3002\u3055\u3089\u306b\u3001**\u8077\u696d\u3067\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u5834\u5408\u3001\u77e5\u8b58\u5171\u6709\u306e\u305f\u3081\u306e\u5831\u544a\u66f8\u3092\u4f5c\u6210\u3059\u308b\u3068\u304d\u306b\u3082\u5f79\u7acb\u3061\u307e\u3059\u3002Visio\u3084LibreOffice Draw\u3067\u63cf\u304f\u5834\u5408\u306e\u4e0b\u66f8\u304d\u3068\u3057\u3066\u3082\u3001\u624b\u66f8\u304d\u6587\u66f8\u3092\u30b9\u30ad\u30e3\u30f3\u3057\u3066\u8cbc\u308a\u4ed8\u3051\u308b\u306b\u3057\u3066\u3082\u5f79\u306b\u7acb\u3064\u3067\u3057\u3087\u3046\u3002**\n\n\u306a\u304a\u3001ashmem_pin()\u3068\u5bfe\u306b\u306a\u308bashmem_unpin()\u306f\u7701\u7565\u3057\u307e\u3059\u3002\u3084\u3063\u3066\u3044\u308b\u3053\u3068\u306f\u300cashmem_range\u69cb\u9020\u4f53\u3092\u30ea\u30b9\u30c8\u306b\u633f\u5165\u3059\u308b\u3002\u305d\u306e\u305f\u3081\u306b\u3001\u633f\u5165\u4f4d\u7f6e\u3092\u6c7a\u3081\u3066\u3001ashmem_range\u69cb\u9020\u4f53\u3092\u5272\u308a\u5f53\u3066\u3066\u633f\u5165\u300d\u3068\u3044\u3046\u306e\u304c\u672c\u7b4b\u3067\u3059\u3002\u7df4\u7fd2\u304c\u3066\u3089\u8aad\u3093\u3067\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n## unpin\u3059\u308b\u76ee\u7684\n\u6700\u521d\u306b\u300c\u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\u307e\u305f\u3001\u521d\u671f\u5316\u51e6\u7406\u306e\u8aac\u660e\u3067\u300cregister_shrinker()\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u4eee\u60f3\u8a18\u61b6\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u767b\u9332\u51e6\u7406\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u4f9d\u983c\u300d\u3068\u66f8\u3044\u3066\u3042\u3063\u305f\u306e\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u3053\u308c\u3089\u3092\u78ba\u304b\u3081\u308b\u305f\u3081\u3001register_shrinker()\u3092\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n```c:mm/vmscan.c\n/*\n * Add a shrinker callback to be called from the vm.\n */\nint register_shrinker(struct shrinker *shrinker)\n{\n/* \u7565 */\n    down_write(&shrinker_rwsem);\n    list_add_tail(&shrinker->list, &shrinker_list);\n    up_write(&shrinker_rwsem);\n    return 0;\n}\nEXPORT_SYMBOL(register_shrinker);\n```\n\n\u6e21\u3055\u308c\u305f\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u306a\u3069\u3092\u542b\u3080\u69cb\u9020\u4f53\u3092shrinker_list\u306b\u30ad\u30e5\u30fc\u30a4\u30f3\u30b0\u3057\u3066\u3044\u307e\u3059\u3002\nshrinker_list\u3092\u6f01\u308b\u306e\u306fmm/vmscan.c\u306eshrink_slab()\u3067\u3001\u547c\u3073\u51fa\u3057\u5148\u3092\u8abf\u3079\u3066\u307f\u308b\u3068\u300cget_any_page()\u300d\u3068\u304b\u300cmemory_failure()\u300d\u3068\u304b\u5fc5\u6b7b\u3055\u304c\u3058\u308f\u3058\u308f\u4f1d\u308f\u3063\u3066\u304f\u308b\u3088\u3046\u306a\u95a2\u6570\u305f\u3061\u306b\u306a\u308a\u307e\u3059\u3002\u305f\u3060\u3001\u4eca\u56de\u306f\u3053\u308c\u3089\u95a2\u6570\u306e\u5b9f\u88c5\u89e3\u8aac\u306f\u3057\u307e\u305b\u3093\u3002\n\nshrinker_list\u30ad\u30e5\u30fc\u7d4c\u7531\u3067\u547c\u3073\u51fa\u3055\u308c\u308b\u95a2\u6570\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u306e\u3067\u3057\u3087\u3046\u304b\u3002\n\n```c:drivers/staging/android/ashmem.c\nstatic unsigned long\nashmem_shrink_scan(struct shrinker *shrink, struct shrink_control *sc)\n{\n/* \u7565 */\n    mutex_lock(&ashmem_mutex);\n    list_for_each_entry_safe(range, next, &ashmem_lru_list, lru) {\n/* \u7565 */\n        vfs_fallocate(range->asma->file,\n                  FALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE,\n                  start, end - start);\n/* \u7565 */\n    }   \n    mutex_unlock(&ashmem_mutex);\n    return freed;\n}\n```\n\nvfs_fallocate()\u3092asma->file\u3001\u3064\u307e\u308ashmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306b\u5bfe\u3057\u3066\u547c\u3073\u51fa\u3057\u3066\u3044\u307e\u3059\u3002\n\u6700\u5f8c\u306b\u3001vfs_fallocate()\u3092\u3061\u3087\u3063\u3068\u8997\u3044\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n## vfs\u3092\u5c11\u3057\u8997\u304f\nVFS\u306a\u306e\u3067\u3001\u57fa\u672c\u7684\u306b\u306f\u6700\u7d42\u7684\u306b\u5404\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u3054\u3068\u306e\u51e6\u7406\u304c\u547c\u3070\u308c\u307e\u3059\u3002\n\u5148\u307b\u3069\u3001shmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u7fa4\u306b\u3064\u3044\u3066\u66f8\u3044\u3066\u3042\u3063\u305f\u3053\u3068\u3092\u899a\u3048\u3066\u3044\u308b\u3067\u3057\u3087\u3046\u304b\u3002\n\n```c:mm/shmem.c\nstatic const struct file_operations shmem_file_operations = {\n/* \u7565 */\n    .fallocate  = shmem_fallocate,\n```\n\n\u4eca\u56de\u3001vfs_fallocate()\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u300cFALLOC_FL_PUNCH_HOLE | FALLOC_FL_KEEP_SIZE\u300d\u304c\u6307\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u3002\u4e71\u66b4\u306a\u8a00\u3044\u65b9\u3092\u3059\u308b\u3068\u3001\u300c\u30d5\u30a1\u30a4\u30eb\u306e\u9014\u4e2d\u306b\u4f55\u3082\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u306a\u3044\u7a74\u3092\u958b\u3051\u308b\u300d\u3068\u3044\u3046\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\u300c\u7a74\u300d\u306f\u3082\u3061\u308d\u3093unpinned\u306a\u9818\u57df\u3067\u3059\u3002\n\n```c:mm/shmem.c\nstatic long shmem_fallocate(struct file *file, int mode, loff_t offset,\n                             loff_t len) \n{\n/* \u7565 */\n    if (mode & FALLOC_FL_PUNCH_HOLE) {\n/* \u7565 */\n        if ((u64)unmap_end > (u64)unmap_start)\n            unmap_mapping_range(mapping, unmap_start,\n                        1 + unmap_end - unmap_start, 0);\n        shmem_truncate_range(inode, offset, offset + len - 1);\n/* \u7565 */\n        goto out;\n    }\n```\n\n\u4e0a\u8a18\u306e\u51e6\u7406\u3092\u898b\u308b\u3068\u3001\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u304b\u3089\u6307\u5b9a\u3055\u308c\u305f\u7bc4\u56f2\u3092\u6d88\u3057(unmap_mapping_range())\u3001\u5b9f\u969b\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u3066\u3044\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u3057\u307e\u3059\u3002(shmem_truncate_range())\u3002\nshmem_truncate_range()\u306f\u8907\u6570\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u3092\u7d4c\u3066\u3001\u4ee5\u4e0b\u306eshmem_undo_range()\u3092\u547c\u3073\u51fa\u3057\u3001\u3053\u306e\u4e2d\u3067pagevec_release()\u3092\u547c\u3073\u307e\u3059\u3002\n\u305d\u3057\u3066\u6700\u5f8c\u306b\u306frelease_pages()\u3092\u547c\u3073\u51fa\u3057\u3001\u30da\u30fc\u30b8\u306e\u89e3\u653e\u3092\u884c\u3044\u307e\u3059\u3002\n\u3064\u307e\u308a\u3001\u30e1\u30e2\u30ea\u903c\u8feb\u6642\u306b\u306fashmem_shrink_scan()\u306e\u51e6\u7406\u306b\u3088\u3063\u3066\u4e0d\u8981\u306a\u30da\u30fc\u30b8\u304c\u89e3\u653e\u3055\u308c\u308b\u3053\u3068\u304c\u308f\u304b\u308a\u307e\u3059\u3002(\u6b8b\u5ff5\u3067\u3059\u304c\u3001\u4eca\u56de\u306frelease_pages()\u306b\u306f\u8e0f\u307f\u8fbc\u307f\u307e\u305b\u3093\u3002\u8208\u5473\u3042\u308b\u65b9\u306f\u3054\u4e00\u8aad\u3092\u3002)\n\n```c:mm/shmem.c\nstatic void shmem_undo_range(struct inode *inode, loff_t lstart, loff_t lend,\n                                 bool unfalloc)\n{\n\n    pagevec_init(&pvec, 0);\n    index = start;\n    while (index < end) {\n        pvec.nr = find_get_entries(mapping, index,\n            min(end - index, (pgoff_t)PAGEVEC_SIZE),\n            pvec.pages, indices);\n        /* \u7565 */\n        pagevec_release(&pvec);\n        cond_resched();\n        index++;\n    }\n    /* \u7565 */\n```\n\n## \u307e\u3068\u3081\n\u3053\u306e\u6587\u66f8\u3067\u306f\u3001\u4ee5\u4e0b\u306e\u3053\u3068\u3092\u66f8\u304d\u307e\u3057\u305f\u3002\u3053\u308c\u3089\u306f\u30d7\u30ec\u30bc\u30f3\u8cc7\u6599\u306a\u3069\u304b\u3089\u8aad\u307f\u53d6\u3063\u305f\u5185\u5bb9\u3067\u3059\u3002\u30bd\u30fc\u30b9\u3092\u8aad\u3080\u3053\u3068\u3067\u304b\u306a\u308a\u5177\u4f53\u7684\u306b\u3067\u304d\u307e\u3057\u305f\u3002\n\n```text\n - \u30da\u30fc\u30b8\u30d4\u30f3\u30cb\u30f3\u30b0(page pinning)\u3068\u3044\u3046\u6982\u5ff5\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u3002\u30d4\u30f3\u7559\u3081\u3068\u3044\u3046\u540d\u79f0\u304b\u3089\u3001\u30d4\u30f3\u7559\u3081\u3055\u308c\u3066\u3044\u308b\u9593\u3001\u78ba\u4fdd\u3057\u305f\u30e1\u30e2\u30ea\u30da\u30fc\u30b8\u3092\u89e3\u653e\u305b\u305a\u306b\u4fdd\u6301\u3059\u308b\u6a5f\u80fd\u304c\u3042\u308b\u3053\u3068\u304c\u63a8\u5b9a\u3067\u304d\u307e\u3059\u3002\n - \u305d\u306e\u9006\u306bUnpinned\u3055\u308c\u305f\u30da\u30fc\u30b8\u306f\u30e1\u30e2\u30ea\u4e0d\u8db3\u306e\u969b\u306b\u56de\u53ce\u3055\u308c\u308b\u3088\u3046\u3067\u3059\u3002\n - \u30e1\u30e2\u30ea\u3092\u6271\u3046\u305f\u3081\u306b\u3001/dev/ashmem\u3068\u3044\u3046\u30c7\u30d0\u30a4\u30b9\u30d5\u30a1\u30a4\u30eb\u3092\u4f7f\u3063\u3066\u30a2\u30af\u30bb\u30b9\u3092\u884c\u3046\u3002\n - mmap()\u306b\u3088\u3063\u3066\u30de\u30c3\u30d7\u3055\u308c\u305f\u4eee\u60f3\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3082\u3057\u304f\u306fread()\u3092\u7528\u3044\u3066\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3002\n - \u30d0\u30c3\u30ad\u30f3\u30b0\u30b9\u30c8\u30a2\u306f\u5358\u306a\u308bshmem\u30d5\u30a1\u30a4\u30eb\u3002shmem\u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3066\u4f7f\u3044\u3084\u3059\u304f\u3057\u305f\u6a5f\u80fd\u3068\u3082\u53d7\u3051\u53d6\u308c\u307e\u3059\u306d\u3002\n```\n\n\u6700\u5f8c\u306bshmem\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306efallocate()\u306e\u51e6\u7406\u306e\u4e00\u90e8\u306b\u8e0f\u307f\u8fbc\u3093\u3060\u3088\u3046\u306b\u3001ashmem\u30c9\u30e9\u30a4\u30d0\u306e\u3088\u3046\u306a\u304b\u306a\u308a\u5c0f\u3055\u3081\u306e\u30c9\u30e9\u30a4\u30d0\u3067\u3082\u30ab\u30fc\u30cd\u30eb\u306e\u51e6\u7406\u306b~~\u8ff7\u3044\u8fbc\u3080~~\u8e0f\u307f\u8fbc\u3080\u9053\u306f\u3042\u308a\u307e\u3059\u3002\n\n\u4f8b\u3048\u3070\u3001misc_register()\u3092\u901a\u3057\u3066\u30c9\u30e9\u30a4\u30d0\u306e\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306b\u8e0f\u307f\u8fbc\u3080\u306e\u3082\u3088\u3057\u3001kmalloc()\u306e\u3088\u3046\u306a\u30e1\u30e2\u30ea\u5272\u308a\u5f53\u3066\u95a2\u6570\u3092\u901a\u3057\u3066\u4eee\u60f3\u8a18\u61b6\u306b\u8db3\u3092\u8e0f\u307f\u5165\u308c\u308b\u3082\u3088\u3057\u3001\u30d5\u30a1\u30a4\u30eb\u30b7\u30b9\u30c6\u30e0\u306e\u51e6\u7406\u3092\u8aad\u3080\u306e\u3082\u3088\u3057\u3067\u3059\u3002\n\n\u3044\u3063\u307a\u3093\u306b\u5168\u90e8\u628a\u63e1\u3059\u308b\u306e\u306f\u7121\u7406\u3067\u3059\uff01(\u304d\u3063\u3071\u308a)\u5c11\u3057\u305a\u3064\u3067\u69cb\u308f\u306a\u3044\u306e\u3067\u826f\u3044\u672c\u3092\u7247\u624b\u306b\u8aad\u307f\u3064\u3064\u3001\u30bd\u30fc\u30b9\u3092\u8aad\u3093\u3067\u5c11\u3057\u305a\u3064\u5468\u8fba\u3092\u56fa\u3081\u3066\u3044\u304f\u306e\u304c\u826f\u3044\u304b\u306a\u3001\u3068\u601d\u3044\u307e\u3059\u3002[@masami256\u3055\u3093\u304c\u66f8\u3044\u305fLinux Kernel Hack\u5165\u9580\u7de8](http://kernhack.hatenablog.com/entry/2014/12/25/001336)\u3068\u3044\u3046\u826f\u8a18\u4e8b\u304c\u305d\u306e\u3042\u305f\u308a\u5927\u5909\u53c2\u8003\u306b\u306a\u308a\u307e\u3059\u3002\u307e\u305f\u3001\u3053\u306e\u8a18\u4e8b\u306e\u6700\u5f8c\u306e\u307b\u3046\u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u3088\u3046\u306a\u52c9\u5f37\u4f1a\u306b\u53c2\u52a0\u3057\u3066\u3001\u5468\u308a\u306e\u4eba\u306b\u8cea\u554f\u3057\u3066\u307f\u308b\u3068\u3044\u3046\u624b\u3082\u3042\u308a\u307e\u3059\u3002\n\n\u4f55\u306f\u3068\u3082\u3042\u308c\u3001\u4eca\u5e74\u3082\u5c11\u306a\u3044\u3067\u3059\u304c\u3001\u4eca\u5e74\u3082\u6765\u5e74\u3082Happy Hacking!\n", "tags": ["Android", "Linux", "kernel", "kernelvm", "AdventCalendar"]}