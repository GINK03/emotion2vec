{"context": "\n\npyenv\n$ brew install pyenv\n\n$ vi ~/.bash_profile\n\n# python\nPYENV_ROOT=~/.pyenv\nexport PATH=$PATH:$PYENV_ROOT/bin\neval \"$(pyenv init -)\"\n\n$ source ~/.bash_profile\n\n$ python -V\nPython 2.7.13\n\n$ pyenv version\nsystem (set by /Users/takahiro/.pyenv/version)\n\n$ pyenv help\nUsage: pyenv <command> [<args>]\n\nSome useful pyenv commands are:\n   commands    List all available pyenv commands\n   local       Set or show the local application-specific Python version\n   global      Set or show the global Python version\n   shell       Set or show the shell-specific Python version\n   install     Install a Python version using python-build\n   uninstall   Uninstall a specific Python version\n   rehash      Rehash pyenv shims (run this after installing executables)\n   version     Show the current Python version and its origin\n   versions    List all Python versions available to pyenv\n   which       Display the full path to an executable\n   whence      List all Python versions that contain the given executable\n\n\nanaconda\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3067\u4f7f\u308f\u308c\u308b\u3001\u305f\u3044\u3066\u3044\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3089\u304b\u3058\u3081\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u306e\u3053\u3068\n$ pyenv install -l | grep anaconda3\n  anaconda3-2.0.0\n  anaconda3-2.0.1\n  anaconda3-2.1.0\n  anaconda3-2.2.0\n  anaconda3-2.3.0\n  anaconda3-2.4.0\n  anaconda3-2.4.1\n  anaconda3-2.5.0\n  anaconda3-4.0.0\n  anaconda3-4.1.0\n  anaconda3-4.1.1\n  anaconda3-4.2.0\n\n$ pyenv install anaconda3-4.2.0\n\n$ pyenv versions\n* system (set by /Users/takahiro/.pyenv/version)\n  anaconda3-4.2.0\n\n$ pyenv shell anaconda3-4.2.0\n\n$ pyenv version\nanaconda3-4.2.0 (set by PYENV_VERSION environment variable)\n\n$ python -V\nPython 3.5.2 :: Anaconda 4.2.0 (x86_64)\n\n$ pyenv global anaconda3-4.2.0\n\n\nconda\u30b3\u30de\u30f3\u30c9\n$ conda -h\nusage: conda [-h] [-V] command ...\n\nconda is a tool for managing and deploying applications, environments and packages.\n\nOptions:\n\npositional arguments:\n  command\n    info         Display information about current conda install.\n    help         Displays a list of available conda commands and their help\n                 strings.\n    list         List linked packages in a conda environment.\n    search       Search for packages and display their information. The input\n                 is a Python regular expression. To perform a search with a\n                 search string that starts with a -, separate the search from\n                 the options with --, like 'conda search -- -h'. A * in the\n                 results means that package is installed in the current\n                 environment. A . means that package is not installed but is\n                 cached in the pkgs directory.\n    create       Create a new conda environment from a list of specified\n                 packages.\n    install      Installs a list of packages into a specified conda\n                 environment.\n    update       Updates conda packages to the latest compatible version. This\n                 command accepts a list of package names and updates them to\n                 the latest versions that are compatible with all other\n                 packages in the environment. Conda attempts to install the\n                 newest versions of the requested packages. To accomplish\n                 this, it may update some packages that are already installed,\n                 or install additional packages. To prevent existing packages\n                 from updating, use the --no-update-deps option. This may\n                 force conda to install older versions of the requested\n                 packages, and it does not prevent additional dependency\n                 packages from being installed. If you wish to skip dependency\n                 checking altogether, use the '--force' option. This may\n                 result in an environment with incompatible packages, so this\n                 option must be used with great caution.\n    upgrade      Alias for conda update. See conda update --help.\n    remove       Remove a list of packages from a specified conda environment.\n    uninstall    Alias for conda remove. See conda remove --help.\n    config       Modify configuration values in .condarc. This is modeled\n                 after the git config command. Writes to the user .condarc\n                 file (/Users/takahiro/.condarc) by default.\n    clean        Remove unused packages and caches.\n    package      Low-level conda package utility. (EXPERIMENTAL)\n\n$ conda info\nCurrent conda install:\n\n               platform : osx-64\n          conda version : 4.2.9\n       conda is private : False\n      conda-env version : 4.2.9\n    conda-build version : 2.0.2\n         python version : 3.5.2.final.0\n       requests version : 2.11.1\n       root environment : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0  (writable)\n    default environment : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0\n       envs directories : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/envs\n          package cache : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/pkgs\n           channel URLs : https://repo.continuum.io/pkgs/free/osx-64/\n                          https://repo.continuum.io/pkgs/free/noarch/\n                          https://repo.continuum.io/pkgs/pro/osx-64/\n                          https://repo.continuum.io/pkgs/pro/noarch/\n            config file : None\n           offline mode : False\n\n$ conda list | grep pandas\npandas                    0.18.1              np111py35_0\n\n\nTensorflow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n$ conda list | grep tensorflow\n\n$ conda install -c conda-forge tensorflow\n\n$ python\nPython 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n>>> import tensorflow as tf\n>>> node1 = tf.constant(3.0, tf.float32)\n>>> node2 = tf.constant(4.0) # also tf.float32 implicitly\n>>> print(node1, node2)\nTensor(\"Const:0\", shape=(), dtype=float32) Tensor(\"Const_1:0\", shape=(), dtype=float32)\n\n>>> sess = tf.Session()\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n>>> print(sess.run([node1, node2]))\n[3.0, 4.0]\n\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3054\u3068\u306b\u74b0\u5883\u3092\u5909\u3048\u308b\n\npyenv\u3067\u5225\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001 pyenv local\u3092\u4f7f\u3046\u65b9\u6cd5\n\npython2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n$ pyenv install -l | grep anaconda2\n  anaconda2-2.4.0\n  anaconda2-2.4.1\n  anaconda2-2.5.0\n  anaconda2-4.0.0\n  anaconda2-4.1.0\n  anaconda2-4.1.1\n  anaconda2-4.2.0\n\n$ pyenv install anaconda2-4.2.0\n\n$ pyenv versions\n  system\n  anaconda2-4.2.0\n* anaconda3-4.2.0 (set by PYENV_VERSION environment variable)\n\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\n\n$ mkdir py2 \n$ cd py2\n\n$ pyenv local anaconda2-4.2.0\n\n$ pyenv version\nanaconda2-4.2.0 (set by /Users/takahiro/workspace/py2/.python-version)\n\n$ python -V\nPython 2.7.12 :: Anaconda 4.2.0 (x86_64)\n\n\nconda\u306e\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u3063\u3066\u3001pyenv local\u3092\u4f7f\u3046\u65b9\u6cd5\n\n\u4eee\u60f3\u74b0\u5883\u4f5c\u6210\n\n$ conda create -n tensorflow\n\n$ conda info -e\n# conda environments:\n#\ntensorflow               /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/envs/tensorflow\nroot                  *  /Users/takahiro/.pyenv/versions/anaconda3-4.2.0\n\n$ pyenv versions\n  system\n  anaconda2-4.2.0\n* anaconda3-4.2.0 (set by /Users/takahiro/.pyenv/version)\n  anaconda3-4.2.0/envs/tensorflow\n\n\n\u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\n\n$ mkdir tensorflow\n$ cd tensorflow\n\n$ pyenv local anaconda3-4.2.0/envs/tensorflow\n\n$ pyenv version\nanaconda3-4.2.0/envs/tensorflow (set by /Users/takahiro/workspace/tensorflow/.python-version)\n\n# pyenv\n\n```\n$ brew install pyenv\n```\n```\n$ vi ~/.bash_profile\n```\n```\n# python\nPYENV_ROOT=~/.pyenv\nexport PATH=$PATH:$PYENV_ROOT/bin\neval \"$(pyenv init -)\"\n```\n```\n$ source ~/.bash_profile\n```\n```\n$ python -V\nPython 2.7.13\n```\n```\n$ pyenv version\nsystem (set by /Users/takahiro/.pyenv/version)\n```\n```\n$ pyenv help\nUsage: pyenv <command> [<args>]\n\nSome useful pyenv commands are:\n   commands    List all available pyenv commands\n   local       Set or show the local application-specific Python version\n   global      Set or show the global Python version\n   shell       Set or show the shell-specific Python version\n   install     Install a Python version using python-build\n   uninstall   Uninstall a specific Python version\n   rehash      Rehash pyenv shims (run this after installing executables)\n   version     Show the current Python version and its origin\n   versions    List all Python versions available to pyenv\n   which       Display the full path to an executable\n   whence      List all Python versions that contain the given executable\n```\n\n# anaconda\n\n\u30c7\u30fc\u30bf\u30b5\u30a4\u30a8\u30f3\u30b9\u3067\u4f7f\u308f\u308c\u308b\u3001\u305f\u3044\u3066\u3044\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u3042\u3089\u304b\u3058\u3081\u542b\u307e\u308c\u3066\u3044\u308b\u3068\u306e\u3053\u3068\n\n```\n$ pyenv install -l | grep anaconda3\n  anaconda3-2.0.0\n  anaconda3-2.0.1\n  anaconda3-2.1.0\n  anaconda3-2.2.0\n  anaconda3-2.3.0\n  anaconda3-2.4.0\n  anaconda3-2.4.1\n  anaconda3-2.5.0\n  anaconda3-4.0.0\n  anaconda3-4.1.0\n  anaconda3-4.1.1\n  anaconda3-4.2.0\n```\n```\n$ pyenv install anaconda3-4.2.0\n```\n```\n$ pyenv versions\n* system (set by /Users/takahiro/.pyenv/version)\n  anaconda3-4.2.0\n```\n```\n$ pyenv shell anaconda3-4.2.0\n```\n```\n$ pyenv version\nanaconda3-4.2.0 (set by PYENV_VERSION environment variable)\n```\n```\n$ python -V\nPython 3.5.2 :: Anaconda 4.2.0 (x86_64)\n```\n```\n$ pyenv global anaconda3-4.2.0\n```\n\n## conda\u30b3\u30de\u30f3\u30c9\n\n```\n$ conda -h\nusage: conda [-h] [-V] command ...\n\nconda is a tool for managing and deploying applications, environments and packages.\n\nOptions:\n\npositional arguments:\n  command\n    info         Display information about current conda install.\n    help         Displays a list of available conda commands and their help\n                 strings.\n    list         List linked packages in a conda environment.\n    search       Search for packages and display their information. The input\n                 is a Python regular expression. To perform a search with a\n                 search string that starts with a -, separate the search from\n                 the options with --, like 'conda search -- -h'. A * in the\n                 results means that package is installed in the current\n                 environment. A . means that package is not installed but is\n                 cached in the pkgs directory.\n    create       Create a new conda environment from a list of specified\n                 packages.\n    install      Installs a list of packages into a specified conda\n                 environment.\n    update       Updates conda packages to the latest compatible version. This\n                 command accepts a list of package names and updates them to\n                 the latest versions that are compatible with all other\n                 packages in the environment. Conda attempts to install the\n                 newest versions of the requested packages. To accomplish\n                 this, it may update some packages that are already installed,\n                 or install additional packages. To prevent existing packages\n                 from updating, use the --no-update-deps option. This may\n                 force conda to install older versions of the requested\n                 packages, and it does not prevent additional dependency\n                 packages from being installed. If you wish to skip dependency\n                 checking altogether, use the '--force' option. This may\n                 result in an environment with incompatible packages, so this\n                 option must be used with great caution.\n    upgrade      Alias for conda update. See conda update --help.\n    remove       Remove a list of packages from a specified conda environment.\n    uninstall    Alias for conda remove. See conda remove --help.\n    config       Modify configuration values in .condarc. This is modeled\n                 after the git config command. Writes to the user .condarc\n                 file (/Users/takahiro/.condarc) by default.\n    clean        Remove unused packages and caches.\n    package      Low-level conda package utility. (EXPERIMENTAL)\n```\n\n```\n$ conda info\nCurrent conda install:\n\n               platform : osx-64\n          conda version : 4.2.9\n       conda is private : False\n      conda-env version : 4.2.9\n    conda-build version : 2.0.2\n         python version : 3.5.2.final.0\n       requests version : 2.11.1\n       root environment : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0  (writable)\n    default environment : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0\n       envs directories : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/envs\n          package cache : /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/pkgs\n           channel URLs : https://repo.continuum.io/pkgs/free/osx-64/\n                          https://repo.continuum.io/pkgs/free/noarch/\n                          https://repo.continuum.io/pkgs/pro/osx-64/\n                          https://repo.continuum.io/pkgs/pro/noarch/\n            config file : None\n           offline mode : False\n```\n```\n$ conda list | grep pandas\npandas                    0.18.1              np111py35_0\n```\n\n## Tensorflow\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ conda list | grep tensorflow\n```\n```\n$ conda install -c conda-forge tensorflow\n```\n```py3\n$ python\nPython 3.5.2 |Anaconda 4.2.0 (x86_64)| (default, Jul  2 2016, 17:52:12)\n[GCC 4.2.1 Compatible Apple LLVM 4.2 (clang-425.0.28)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\n>>> import tensorflow as tf\n>>> node1 = tf.constant(3.0, tf.float32)\n>>> node2 = tf.constant(4.0) # also tf.float32 implicitly\n>>> print(node1, node2)\nTensor(\"Const:0\", shape=(), dtype=float32) Tensor(\"Const_1:0\", shape=(), dtype=float32)\n\n>>> sess = tf.Session()\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.1 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use SSE4.2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use AVX2 instructions, but these are available on your machine and could speed up CPU computations.\nW tensorflow/core/platform/cpu_feature_guard.cc:45] The TensorFlow library wasn't compiled to use FMA instructions, but these are available on your machine and could speed up CPU computations.\n>>> print(sess.run([node1, node2]))\n[3.0, 4.0]\n```\n\n# \u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3054\u3068\u306b\u74b0\u5883\u3092\u5909\u3048\u308b\n\n## pyenv\u3067\u5225\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3001 pyenv local\u3092\u4f7f\u3046\u65b9\u6cd5\n\n+ python2\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\n\n```\n$ pyenv install -l | grep anaconda2\n  anaconda2-2.4.0\n  anaconda2-2.4.1\n  anaconda2-2.5.0\n  anaconda2-4.0.0\n  anaconda2-4.1.0\n  anaconda2-4.1.1\n  anaconda2-4.2.0\n```\n```\n$ pyenv install anaconda2-4.2.0\n```\n```\n$ pyenv versions\n  system\n  anaconda2-4.2.0\n* anaconda3-4.2.0 (set by PYENV_VERSION environment variable)\n```\n\n+ \u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\n\n```\n$ mkdir py2 \n$ cd py2\n```\n```\n$ pyenv local anaconda2-4.2.0\n```\n```\n$ pyenv version\nanaconda2-4.2.0 (set by /Users/takahiro/workspace/py2/.python-version)\n```\n```\n$ python -V\nPython 2.7.12 :: Anaconda 4.2.0 (x86_64)\n```\n\n## conda\u306e\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u3063\u3066\u3001pyenv local\u3092\u4f7f\u3046\u65b9\u6cd5\n\n+ \u4eee\u60f3\u74b0\u5883\u4f5c\u6210\n\n```\n$ conda create -n tensorflow\n```\n```\n$ conda info -e\n# conda environments:\n#\ntensorflow               /Users/takahiro/.pyenv/versions/anaconda3-4.2.0/envs/tensorflow\nroot                  *  /Users/takahiro/.pyenv/versions/anaconda3-4.2.0\n```\n```\n$ pyenv versions\n  system\n  anaconda2-4.2.0\n* anaconda3-4.2.0 (set by /Users/takahiro/.pyenv/version)\n  anaconda3-4.2.0/envs/tensorflow\n```\n\n+ \u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\n\n```\n$ mkdir tensorflow\n$ cd tensorflow\n```\n```\n$ pyenv local anaconda3-4.2.0/envs/tensorflow\n```\n```\n$ pyenv version\nanaconda3-4.2.0/envs/tensorflow (set by /Users/takahiro/workspace/tensorflow/.python-version)\n```\n", "tags": ["Python", "TensorFlow", "Anaconda"]}