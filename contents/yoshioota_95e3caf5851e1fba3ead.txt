{"context": " More than 1 year has passed since last update.salesforce\u306eID\u306f15\u6841\u7248\u306818\u6841\u7248\u304c\u6709\u308a\u307e\u3059\u3002\nruby\u306715\u6841\u304b\u308918\u6841\u306b\u5909\u63db\u3059\u308b\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4ee5\u4e0b\u306eURL\u304b\u3089ruby\u7248\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\nhttp://salesforce.stackexchange.com/questions/27686/how-can-i-convert-a-15-char-id-value-into-an-18-char-id-value\n# salesforce1518.rb\n\nclass Salesforce1518\n\n  def self.cvt1518(id)\n    raise ArgumentError if id.nil?\n    return id if id.size == 18\n    raise ArgumentError if id.size != 15\n\n    triplet = [id[0, 5], id[5, 5], id[10, 5]]\n    suffix = triplet.map do |value|\n      str = value.reverse.chars.map do |char|\n        /[[:upper:]]/ === char ? '1' : '0'\n      end.join\n      binary_id_lookup[str]\n    end.join\n    id + suffix\n  end\n\n  private\n\n  def self.binary_id_lookup\n    {\n        '00000' => 'A',\n        '00001' => 'B',\n        '00010' => 'C',\n        '00011' => 'D',\n        '00100' => 'E',\n        '00101' => 'F',\n        '00110' => 'G',\n        '00111' => 'H',\n        '01000' => 'I',\n        '01001' => 'J',\n        '01010' => 'K',\n        '01011' => 'L',\n        '01100' => 'M',\n        '01101' => 'N',\n        '01110' => 'O',\n        '01111' => 'P',\n        '10000' => 'Q',\n        '10001' => 'R',\n        '10010' => 'S',\n        '10011' => 'T',\n        '10100' => 'U',\n        '10101' => 'V',\n        '10110' => 'W',\n        '10111' => 'X',\n        '11000' => 'Y',\n        '11001' => 'Z',\n        '11010' => '0',\n        '11011' => '1',\n        '11100' => '2',\n        '11101' => '3',\n        '11110' => '4',\n        '11111' => '5',\n    }\n  end\nend\n\n\u30c0\u30a4\u30b8\u30e7\u30d6\u307d\u3044\n# spec\u306b\u3066\nexpect(Salesforce1518.cvt1518('a06O000000TL5ci')).to eq('a06O000000TL5ciIAD')\n\nTODO: gem\u5316\nsalesforce\u306eID\u306f15\u6841\u7248\u306818\u6841\u7248\u304c\u6709\u308a\u307e\u3059\u3002\nruby\u306715\u6841\u304b\u308918\u6841\u306b\u5909\u63db\u3059\u308b\u30b3\u30fc\u30c9\u304c\u898b\u3064\u304b\u3089\u306a\u304b\u3063\u305f\u306e\u3067\u4ee5\u4e0b\u306eURL\u304b\u3089ruby\u7248\u3092\u4f5c\u3063\u3066\u307f\u307e\u3057\u305f\u3002\n\nhttp://salesforce.stackexchange.com/questions/27686/how-can-i-convert-a-15-char-id-value-into-an-18-char-id-value\n\n```rb\n# salesforce1518.rb\n\nclass Salesforce1518\n\n  def self.cvt1518(id)\n    raise ArgumentError if id.nil?\n    return id if id.size == 18\n    raise ArgumentError if id.size != 15\n\n    triplet = [id[0, 5], id[5, 5], id[10, 5]]\n    suffix = triplet.map do |value|\n      str = value.reverse.chars.map do |char|\n        /[[:upper:]]/ === char ? '1' : '0'\n      end.join\n      binary_id_lookup[str]\n    end.join\n    id + suffix\n  end\n\n  private\n\n  def self.binary_id_lookup\n    {\n        '00000' => 'A',\n        '00001' => 'B',\n        '00010' => 'C',\n        '00011' => 'D',\n        '00100' => 'E',\n        '00101' => 'F',\n        '00110' => 'G',\n        '00111' => 'H',\n        '01000' => 'I',\n        '01001' => 'J',\n        '01010' => 'K',\n        '01011' => 'L',\n        '01100' => 'M',\n        '01101' => 'N',\n        '01110' => 'O',\n        '01111' => 'P',\n        '10000' => 'Q',\n        '10001' => 'R',\n        '10010' => 'S',\n        '10011' => 'T',\n        '10100' => 'U',\n        '10101' => 'V',\n        '10110' => 'W',\n        '10111' => 'X',\n        '11000' => 'Y',\n        '11001' => 'Z',\n        '11010' => '0',\n        '11011' => '1',\n        '11100' => '2',\n        '11101' => '3',\n        '11110' => '4',\n        '11111' => '5',\n    }\n  end\nend\n```\n\n\u30c0\u30a4\u30b8\u30e7\u30d6\u307d\u3044\n\n```rb\n# spec\u306b\u3066\nexpect(Salesforce1518.cvt1518('a06O000000TL5ci')).to eq('a06O000000TL5ciIAD')\n```\n\nTODO: gem\u5316\n", "tags": ["Salesforce", "Ruby"]}