{"context": " More than 1 year has passed since last update.\n\n\u6982\u8981\n\u300cSubversion\u304b\u3089\u30bf\u30b0\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u52d5\u3067\u5b9a\u671f\u7684\u306b\u884c\u3063\u3066\u308b\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u306e\u304c\u76ee\u7684\u3002\n\u6700\u8fd1\u306e\u30de\u30a4\u30d6\u30fc\u30e0\u304cGradle\u3060\u304b\u3089\u3001\u52c9\u5f37\u3064\u3044\u3067\u306b\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\u3084\u308a\u305f\u3044\u3053\u3068\n\u6c42\u3081\u308b\u6a5f\u80fd\u306f\u6b21\u306e\u901a\u308a\u3002\n\n\u30b3\u30de\u30f3\u30c9\u4e00\u3064\u3067\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304b\u3089ZIP\u5727\u7e2e\u307e\u3067\u884c\u3046\u3002\n\u5b9f\u884c\u6642\u306b\u30c4\u30fc\u30eb\u540d\u3068\u30bf\u30b0\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n\u30c4\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u304c\u8907\u6570\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5206\u304b\u308c\u3066\u305f\u3089\u3001\u305d\u308c\u305e\u308c\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066\uff11\u3064\u306eZIP\u306b\u307e\u3068\u3081\u308b\u3002\n\u5bfe\u5fdc\u3059\u308b\u30c4\u30fc\u30eb\u304c\u5897\u3048\u305f\u5834\u5408\u306f\u8a2d\u5b9a\u3092\u5897\u3084\u3059\u3060\u3051\u3067\u5bfe\u5fdc\u3057\u305f\u3044\u3002\n\n\n\u4f5c\u3063\u305f\u3082\u306e\nToolA\u3068\u3044\u3046\u30c4\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u3092SVN\u304b\u3089\u53d6\u5f97\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\n\u524d\u4f5c\u3063\u305f\u30e1\u30e2\u306e\u767a\u5c55\u7248\u307f\u305f\u3044\u306a\u611f\u3058\u3002\n\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306f\u6b21\u306e\u901a\u308a\u3002\nbuild.gradle\nsettings.gradle\nToolA\n  \u2514 build.gradle\n\n\u4eca\u56de\u306f\u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u3067\u4f5c\u6210\u3002\n\u30eb\u30fc\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3068\u304bZIP\u5727\u7e2e\u3068\u304b\u306e\u5171\u901a\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u3001\u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\u3068ZIP\u540d\u3092\u8a2d\u5b9a\u3002\n\u30c4\u30fc\u30eb\u304c\u5897\u3048\u308b\u5834\u5408\u306f\u3001\u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u306b\u30c4\u30fc\u30eb\u7528\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3068ZIP\u540d\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u306f\u305a\u3002\n\n\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\n\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u6b21\u306e\u901a\u308a\u3002\n\nbuild.gradle\nimport org.tmatesoft.svn.core.*\nimport org.tmatesoft.svn.core.wc.*\n\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n\n    dependencies {\n        classpath 'org.tmatesoft.svnkit:svnkit:1.7.8'\n    }\n}\n\n\n// \u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5bfe\u8c61\u306e\u8a2d\u5b9a\nallprojects {\n    task cleanWork << {}\n    task cleanArchive << {}\n    task cleanAll << {}\n\n}\n\n// \u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5bfe\u8c61\u306e\u8a2d\u5b9a\nsubprojects {\n    // \u4e00\u6642\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\n    def projectDir = project.projectDir.getPath();\n    ext.workDir = \"${projectDir}/work\"\n    // \u6210\u679c\u7269\u306e\u51fa\u529b\u5148\n    ext.archiveDir = \"${rootProject.projectDir.getPath()}/archive\"\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u8a8d\u8a3c\u60c5\u5831\n    ext.userName = \"\"\n    ext.password = \"\"\n\n    // \u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u524a\u9664\n    cleanWork << {\n        delete(project.workDir)\n        println \"delete [${project.workDir}]\"\n    }\n\n    // \u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a9\u30eb\u30c0\u3092\u524a\u9664\n    cleanArchive << {\n        delete(project.archiveDir)\n        println \"delete [${project.archiveDir}]\"\n    }\n\n    // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u3059\u3079\u3066\u524a\u9664\n    cleanAll {\n        dependsOn cleanWork\n        dependsOn cleanArchive\n    }\n\n    // \u6210\u679c\u7269\u3092\u5727\u7e2e\n    task zip(type: Zip) {\n        destinationDir = file(project.archiveDir)\n        doLast {\n            println \"archive [${project.workDir}]\"\n            println \"     => [${archivePath}]\"\n        }\n    }\n}\n\n\n/**\n * \u30bf\u30b0\u540d\u306b\u5bfe\u5fdc\u3059\u308b\u30bf\u30b9\u30af\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n * @param caller \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n */\nvoid setup(Project caller) {\n    // SVN\u304b\u3089\u30bf\u30b0\u540d\u3092\u53d6\u5f97\n    def tagNameSet = new HashSet<String>();\n    for(String url : caller.repoUrlList) {\n        def tagNameList = getDirNameList(url,\n                                         caller.userName,\n                                         caller.password);\n        tagNameSet.addAll(tagNameList);\n    }\n    // \u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\n    for(String tagName : tagNameSet) {\n        createTask(caller, tagName );\n    }\n}\n\n\n/**\n * \u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n * @param caller \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n * @param tagName \u30bf\u30b0\u540d\n */\nvoid createTask(Project caller,\n                String tagName ) {\n\n    caller.tasks.create(name:\"${tagName}\", dependsOn: caller.cleanAll) << {\n        // \u5404\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30bf\u30b0\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n        for(String baseUrl : caller.repoUrlList) {\n            def url = \"${baseUrl}/${tagName}\"\n            export(url, caller.workDir, caller.userName, caller.password);\n        }\n\n        // zip\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\n        def archiveName = caller.archiveBaseName + tagName;\n        caller.zip.baseName = archiveName\n        caller.zip.into(archiveName) {\n            from caller.workDir\n        }\n        caller.zip.execute()\n    }\n}\n\n\n/**\n * \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u6307\u5b9a\u30d1\u30b9\u306b\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n * @param repoUrl \u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\n * @param userName \u30e6\u30fc\u30b6\u30fc\u540d\n * @param password \u30d1\u30b9\u30ef\u30fc\u30c9\n * @return \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306e\u30ea\u30b9\u30c8\n */\nList<String> getDirNameList(String repoUrl,\n                            String userName,\n                            String password ) {\n    // SVN\u64cd\u4f5c\u30af\u30e9\u30b9\n    def manager = SVNClientManager.newInstance(\n                        SVNWCUtil.createDefaultOptions(true),\n                        userName,\n                        password)\n    def client = manager.getLogClient();\n\n    def dirList = new ArrayList<String>();\n\n    def dirHandler = new ISVNDirEntryHandler() {\n        // \u53d6\u5f97\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u7121\u540d\u30af\u30e9\u30b9\n        public void handleDirEntry(SVNDirEntry dirEntry) {\n            if(!dirEntry.getName().equals(\"\")) {\n                dirList.add(dirEntry.getName());\n            }\n        }\n    };\n\n    client.doList(\n        SVNURL.parseURIDecoded(repoUrl),\n        SVNRevision.HEAD,\n        SVNRevision.HEAD,\n        false,\n        dirHandler );\n\n    return dirList;\n}\n\n\n/**\n * \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n * @param repoUrl \u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\n * @param destDir \u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5148\n * @param userName \u30e6\u30fc\u30b6\u30fc\u540d\n * @param password \u30d1\u30b9\u30ef\u30fc\u30c9\n */\nvoid export(String repoUrl,\n            String destDir,\n            String userName,\n            String password) {\n\n    println \"export [${repoUrl}]\"\n    println \"    => [${destDir}]\"\n\n    // SVN\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30b3\u30de\u30f3\u30c9\n    def command = [\"svn\", \"export\", repoUrl, destDir,\n                   \"--native-eol\", \"CRLF\",\n                   \"--force\" ]\n    if(!userName.equals(\"\")) {\n        command.addAll([\"--username\", userName]);\n    }\n    if(!password.equals(\"\")) {\n        command.addAll([\"--password\", password]);\n    }\n    println \"export completed [${execute(command)}]\"\n}\n\n\n/**\n * \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * @param command \u30b3\u30de\u30f3\u30c9\n * @return \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\n */\nint execute(List<String> command) {\n    println \"command = ${command}\"\n    ProcessBuilder builder = new ProcessBuilder(command);\n    builder.redirectErrorStream(true);\n    Process process = builder.start();\n\n    InputStream is = process.getInputStream();\n    try {\n        while(is.read() >= 0);\n    } finally {\n        is.close();\n    }\n\n    return process.exitValue();\n}\n\n\n\nsettings.gradle\ninclude 'ToolA'\n\n\n\nToolA/build.gradle\nbuildscript {\n    // \u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5143\u30ea\u30dd\u30b8\u30c8\u30ea(tags\u307e\u3067)\n    ext.repoUrlList = [\"svn://url/tags\"]\n    // \u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u30d9\u30fc\u30b9\u540d(\u5f8c\u308d\u306b\u30bf\u30b0\u540d\u304c\u4ed8\u52a0\u3055\u308c\u307e\u3059)\n    ext.archiveBaseName = \"ToolA_SRC_\"\n    // \u30bf\u30b0\u540d\u306b\u5bfe\u5fdc\u3059\u308b\u30bf\u30b9\u30af\u3092\u751f\u6210\n    setup(project)\n}\n\n\n\n\u4f7f\u3044\u65b9\nToolA\u30d5\u30a9\u30eb\u30c0\u306ebuild.gradle\u306e\u5834\u6240\u306b\u79fb\u52d5\u3057\u3066\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\ngradle \u30bf\u30b0\u540d\n\n\u3082\u3057\u304f\u306f\u30eb\u30fc\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u306e\u5834\u6240\u3067\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\ngradle ToolA:\u30bf\u30b0\u540d\n\n\u3059\u308b\u3068archive\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u300cToolA_SRC_\u30bf\u30b0\u540d.zip\u300d\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n\u6ce8\u610f\u70b9\n\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u3001SVNKit\u3067\u306f\u306a\u304fSVN\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u308b\u3002\n\u306a\u3093\u3067\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u308b\u304b\u3068\u3044\u3046\u3068\u3001SVNKit\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6307\u5b9a\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u304b\u3089\u3002\n\u3069\u3046\u306a\u3063\u305f\u304b\u3068\u3044\u3046\u3068\u3001\u6307\u5b9a\u306e\u6539\u884c\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u304f\u308c\u306a\u304b\u3063\u305f\uff65\uff65\uff65\u3002\n\u306a\u306e\u3067\u3001\u82e6\u8089\u306e\u7b56\u3068\u3057\u3066SVN\u30b3\u30de\u30f3\u30c9\u3092\u76f4\u63a5\u547c\u3073\u51fa\u3057\u3066\u308b\u3002\n\u3060\u304b\u3089\u3001SVN\u30b3\u30de\u30f3\u30c9\u304c\u5165\u3063\u3066\u306a\u3044\u74b0\u5883\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306f\u305a\u3002\n\n\u307e\u3068\u3081\nGradle\u3092\u4f7f\u3063\u3066SVN\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u30c4\u30fc\u30eb\u304c\u8ffd\u52a0\u306b\u306a\u3063\u3066\u3082\u8a2d\u5b9a\u3092\u5c11\u3057\u8ffd\u52a0\u3059\u308b\u304f\u3089\u3044\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u306f\u305a\u3002\n\u3067\u3082\u3001SVNKit\u3067\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u6539\u884c\u30b3\u30fc\u30c9\u6307\u5b9a\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3002\nSVNKit\u4f7f\u3046\u30b3\u30fc\u30c9\u6d88\u3057\u3061\u3083\u3063\u305f\u304b\u3089\u3001\u6642\u9593\u3042\u308b\u6642\u306b\u691c\u8a3c\u3067\u3082\u3057\u3066\u307f\u3088\u3046\u304b\u3002\n# \u6982\u8981\n\n\u300cSubversion\u304b\u3089\u30bf\u30b0\u3092\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u52d5\u3067\u5b9a\u671f\u7684\u306b\u884c\u3063\u3066\u308b\u4f5c\u696d\u3092\u81ea\u52d5\u5316\u3059\u308b\u306e\u304c\u76ee\u7684\u3002\n\u6700\u8fd1\u306e\u30de\u30a4\u30d6\u30fc\u30e0\u304cGradle\u3060\u304b\u3089\u3001\u52c9\u5f37\u3064\u3044\u3067\u306b\u4f5c\u3063\u3066\u307f\u305f\u3002\n\n\n# \u3084\u308a\u305f\u3044\u3053\u3068\n\n\u6c42\u3081\u308b\u6a5f\u80fd\u306f\u6b21\u306e\u901a\u308a\u3002\n\n* \u30b3\u30de\u30f3\u30c9\u4e00\u3064\u3067\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304b\u3089ZIP\u5727\u7e2e\u307e\u3067\u884c\u3046\u3002\n* \u5b9f\u884c\u6642\u306b\u30c4\u30fc\u30eb\u540d\u3068\u30bf\u30b0\u540d\u3092\u6307\u5b9a\u3059\u308b\u3002\n* \u30c4\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u304c\u8907\u6570\u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u5206\u304b\u308c\u3066\u305f\u3089\u3001\u305d\u308c\u305e\u308c\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066\uff11\u3064\u306eZIP\u306b\u307e\u3068\u3081\u308b\u3002\n* \u5bfe\u5fdc\u3059\u308b\u30c4\u30fc\u30eb\u304c\u5897\u3048\u305f\u5834\u5408\u306f\u8a2d\u5b9a\u3092\u5897\u3084\u3059\u3060\u3051\u3067\u5bfe\u5fdc\u3057\u305f\u3044\u3002\n\n# \u4f5c\u3063\u305f\u3082\u306e\n\nToolA\u3068\u3044\u3046\u30c4\u30fc\u30eb\u306e\u30bd\u30fc\u30b9\u3092SVN\u304b\u3089\u53d6\u5f97\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3002\n\u524d\u4f5c\u3063\u305f[\u30e1\u30e2](http://qiita.com/canpok1/items/2d87808fe1b8379c544d)\u306e\u767a\u5c55\u7248\u307f\u305f\u3044\u306a\u611f\u3058\u3002\n\n## \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\n\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u69cb\u6210\u306f\u6b21\u306e\u901a\u308a\u3002\n\n```\nbuild.gradle\nsettings.gradle\nToolA\n  \u2514 build.gradle\n```\n\n\u4eca\u56de\u306f\u30de\u30eb\u30c1\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u69cb\u6210\u3067\u4f5c\u6210\u3002\n\u30eb\u30fc\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3068\u304bZIP\u5727\u7e2e\u3068\u304b\u306e\u5171\u901a\u51e6\u7406\u3092\u307e\u3068\u3081\u3066\u3001\u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u306f\u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\u3068ZIP\u540d\u3092\u8a2d\u5b9a\u3002\n\u30c4\u30fc\u30eb\u304c\u5897\u3048\u308b\u5834\u5408\u306f\u3001\u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u306b\u30c4\u30fc\u30eb\u7528\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u3068ZIP\u540d\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u3044\u3044\u306f\u305a\u3002\n\n## \u5404\u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\n\n\u5404\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u6b21\u306e\u901a\u308a\u3002\n\n```groovy:build.gradle\nimport org.tmatesoft.svn.core.*\nimport org.tmatesoft.svn.core.wc.*\n\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    \n    dependencies {\n        classpath 'org.tmatesoft.svnkit:svnkit:1.7.8'\n    }\n}\n\n\n// \u5168\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5bfe\u8c61\u306e\u8a2d\u5b9a\nallprojects {\n    task cleanWork << {}\n    task cleanArchive << {}\n    task cleanAll << {}\n\n}\n\n// \u30b5\u30d6\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u5bfe\u8c61\u306e\u8a2d\u5b9a\nsubprojects {\n    // \u4e00\u6642\u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\n    def projectDir = project.projectDir.getPath();\n    ext.workDir = \"${projectDir}/work\"\n    // \u6210\u679c\u7269\u306e\u51fa\u529b\u5148\n    ext.archiveDir = \"${rootProject.projectDir.getPath()}/archive\"\n    // \u30ea\u30dd\u30b8\u30c8\u30ea\u3078\u306e\u8a8d\u8a3c\u60c5\u5831\n    ext.userName = \"\"\n    ext.password = \"\"\n\n    // \u4f5c\u696d\u30d5\u30a9\u30eb\u30c0\u3092\u524a\u9664\n    cleanWork << {\n        delete(project.workDir)\n        println \"delete [${project.workDir}]\"\n    }\n\n    // \u30a2\u30fc\u30ab\u30a4\u30d6\u30d5\u30a9\u30eb\u30c0\u3092\u524a\u9664\n    cleanArchive << {\n        delete(project.archiveDir)\n        println \"delete [${project.archiveDir}]\"\n    }\n\n    // \u4e00\u6642\u30d5\u30a1\u30a4\u30eb\u3092\u3059\u3079\u3066\u524a\u9664\n    cleanAll {\n        dependsOn cleanWork\n        dependsOn cleanArchive\n    }\n\n    // \u6210\u679c\u7269\u3092\u5727\u7e2e\n    task zip(type: Zip) {\n        destinationDir = file(project.archiveDir)\n        doLast {\n            println \"archive [${project.workDir}]\"\n            println \"     => [${archivePath}]\"\n        }\n    }\n}\n\n\n/**\n * \u30bf\u30b0\u540d\u306b\u5bfe\u5fdc\u3059\u308b\u30bf\u30b9\u30af\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n * @param caller \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n */\nvoid setup(Project caller) {\n    // SVN\u304b\u3089\u30bf\u30b0\u540d\u3092\u53d6\u5f97\n    def tagNameSet = new HashSet<String>();\n    for(String url : caller.repoUrlList) {\n        def tagNameList = getDirNameList(url,\n                                         caller.userName,\n                                         caller.password);\n        tagNameSet.addAll(tagNameList);\n    }\n    // \u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\n    for(String tagName : tagNameSet) {\n        createTask(caller, tagName );\n    }\n}\n\n\n/**\n * \u30bf\u30b9\u30af\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\n * @param caller \u547c\u3073\u51fa\u3057\u5143\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\n * @param tagName \u30bf\u30b0\u540d\n */\nvoid createTask(Project caller,\n                String tagName ) {\n\n    caller.tasks.create(name:\"${tagName}\", dependsOn: caller.cleanAll) << {\n        // \u5404\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u30bf\u30b0\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\n        for(String baseUrl : caller.repoUrlList) {\n            def url = \"${baseUrl}/${tagName}\"\n            export(url, caller.workDir, caller.userName, caller.password);\n        }\n\n        // zip\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u8a2d\u5b9a\n        def archiveName = caller.archiveBaseName + tagName;\n        caller.zip.baseName = archiveName\n        caller.zip.into(archiveName) {\n            from caller.workDir\n        }\n        caller.zip.execute()\n    }\n}\n\n\n/**\n * \u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u6307\u5b9a\u30d1\u30b9\u306b\u5b58\u5728\u3059\u308b\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\n * @param repoUrl \u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\n * @param userName \u30e6\u30fc\u30b6\u30fc\u540d\n * @param password \u30d1\u30b9\u30ef\u30fc\u30c9\n * @return \u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u306e\u30ea\u30b9\u30c8\n */\nList<String> getDirNameList(String repoUrl,\n                            String userName,\n                            String password ) {\n    // SVN\u64cd\u4f5c\u30af\u30e9\u30b9\n    def manager = SVNClientManager.newInstance(\n                        SVNWCUtil.createDefaultOptions(true),\n                        userName,\n                        password)\n    def client = manager.getLogClient();\n\n    def dirList = new ArrayList<String>();\n\n    def dirHandler = new ISVNDirEntryHandler() {\n        // \u53d6\u5f97\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u540d\u3092\u30ea\u30b9\u30c8\u306b\u8ffd\u52a0\u3057\u3066\u3044\u304f\u7121\u540d\u30af\u30e9\u30b9\n        public void handleDirEntry(SVNDirEntry dirEntry) {\n            if(!dirEntry.getName().equals(\"\")) {\n                dirList.add(dirEntry.getName());\n            }\n        }\n    };\n\n    client.doList(\n        SVNURL.parseURIDecoded(repoUrl),\n        SVNRevision.HEAD,\n        SVNRevision.HEAD,\n        false,\n        dirHandler );\n\n    return dirList;\n}\n\n\n/**\n * \u30ea\u30dd\u30b8\u30c8\u30ea\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u307e\u3059\u3002\n * @param repoUrl \u30ea\u30dd\u30b8\u30c8\u30ea\u306eURL\n * @param destDir \u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5148\n * @param userName \u30e6\u30fc\u30b6\u30fc\u540d\n * @param password \u30d1\u30b9\u30ef\u30fc\u30c9\n */\nvoid export(String repoUrl,\n            String destDir,\n            String userName,\n            String password) {\n\n    println \"export [${repoUrl}]\"\n    println \"    => [${destDir}]\"\n\n    // SVN\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u30b3\u30de\u30f3\u30c9\n    def command = [\"svn\", \"export\", repoUrl, destDir,\n                   \"--native-eol\", \"CRLF\",\n                   \"--force\" ]\n    if(!userName.equals(\"\")) {\n        command.addAll([\"--username\", userName]);\n    }\n    if(!password.equals(\"\")) {\n        command.addAll([\"--password\", password]);\n    }\n    println \"export completed [${execute(command)}]\"\n}\n\n\n/**\n * \u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n * @param command \u30b3\u30de\u30f3\u30c9\n * @return \u30b3\u30de\u30f3\u30c9\u306e\u5b9f\u884c\u7d50\u679c\n */\nint execute(List<String> command) {\n    println \"command = ${command}\"\n    ProcessBuilder builder = new ProcessBuilder(command);\n    builder.redirectErrorStream(true);\n    Process process = builder.start();\n\n    InputStream is = process.getInputStream();\n    try {\n        while(is.read() >= 0);\n    } finally {\n        is.close();\n    }\n\n    return process.exitValue();\n}\n```\n\n```groovy:settings.gradle\ninclude 'ToolA'\n```\n\n```groovy:ToolA/build.gradle\nbuildscript {\n    // \u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u5143\u30ea\u30dd\u30b8\u30c8\u30ea(tags\u307e\u3067)\n    ext.repoUrlList = [\"svn://url/tags\"]\n    // \u30a2\u30fc\u30ab\u30a4\u30d6\u306e\u30d9\u30fc\u30b9\u540d(\u5f8c\u308d\u306b\u30bf\u30b0\u540d\u304c\u4ed8\u52a0\u3055\u308c\u307e\u3059)\n    ext.archiveBaseName = \"ToolA_SRC_\"\n    // \u30bf\u30b0\u540d\u306b\u5bfe\u5fdc\u3059\u308b\u30bf\u30b9\u30af\u3092\u751f\u6210\n    setup(project)\n}\n```\n\n\n## \u4f7f\u3044\u65b9\n\nToolA\u30d5\u30a9\u30eb\u30c0\u306ebuild.gradle\u306e\u5834\u6240\u306b\u79fb\u52d5\u3057\u3066\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\n\n```\ngradle \u30bf\u30b0\u540d\n```\n\n\u3082\u3057\u304f\u306f\u30eb\u30fc\u30c8\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306ebuild.gradle\u306e\u5834\u6240\u3067\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3002\n\n```\ngradle ToolA:\u30bf\u30b0\u540d\n```\n\n\u3059\u308b\u3068archive\u30d5\u30a9\u30eb\u30c0\u5185\u306b\u300cToolA_SRC_\u30bf\u30b0\u540d.zip\u300d\u304c\u751f\u6210\u3055\u308c\u308b\u3002\n\n\n## \u6ce8\u610f\u70b9\n\n\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3059\u308b\u3068\u3053\u3001SVNKit\u3067\u306f\u306a\u304fSVN\u30b3\u30de\u30f3\u30c9\u3092\u4f7f\u3063\u3066\u308b\u3002\n\u306a\u3093\u3067\u3053\u3093\u306a\u3053\u3068\u3057\u3066\u308b\u304b\u3068\u3044\u3046\u3068\u3001SVNKit\u306e\u6539\u884c\u30b3\u30fc\u30c9\u6307\u5b9a\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u304b\u3063\u305f\u304b\u3089\u3002\n\u3069\u3046\u306a\u3063\u305f\u304b\u3068\u3044\u3046\u3068\u3001\u6307\u5b9a\u306e\u6539\u884c\u30b3\u30fc\u30c9\u306b\u306a\u3063\u3066\u304f\u308c\u306a\u304b\u3063\u305f\uff65\uff65\uff65\u3002\n\u306a\u306e\u3067\u3001\u82e6\u8089\u306e\u7b56\u3068\u3057\u3066SVN\u30b3\u30de\u30f3\u30c9\u3092\u76f4\u63a5\u547c\u3073\u51fa\u3057\u3066\u308b\u3002\n\u3060\u304b\u3089\u3001SVN\u30b3\u30de\u30f3\u30c9\u304c\u5165\u3063\u3066\u306a\u3044\u74b0\u5883\u3060\u3068\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306f\u305a\u3002\n\n\n# \u307e\u3068\u3081\n\nGradle\u3092\u4f7f\u3063\u3066SVN\u304b\u3089\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3057\u3066ZIP\u5727\u7e2e\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u305f\u3002\n\u30c4\u30fc\u30eb\u304c\u8ffd\u52a0\u306b\u306a\u3063\u3066\u3082\u8a2d\u5b9a\u3092\u5c11\u3057\u8ffd\u52a0\u3059\u308b\u304f\u3089\u3044\u3067\u5bfe\u5fdc\u3067\u304d\u308b\u306f\u305a\u3002\n\n\u3067\u3082\u3001SVNKit\u3067\u306e\u30a8\u30af\u30b9\u30dd\u30fc\u30c8\u3067\u6539\u884c\u30b3\u30fc\u30c9\u6307\u5b9a\u304c\u3046\u307e\u304f\u3044\u304b\u306a\u3044\u306e\u304c\u6c17\u306b\u306a\u308b\u3068\u3053\u308d\u3002\nSVNKit\u4f7f\u3046\u30b3\u30fc\u30c9\u6d88\u3057\u3061\u3083\u3063\u305f\u304b\u3089\u3001\u6642\u9593\u3042\u308b\u6642\u306b\u691c\u8a3c\u3067\u3082\u3057\u3066\u307f\u3088\u3046\u304b\u3002", "tags": ["gradle", "Subversion"]}