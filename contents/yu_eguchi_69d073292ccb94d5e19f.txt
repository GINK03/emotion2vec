{"context": " More than 1 year has passed since last update.\n\nSpring4\u52c9\u5f37\u4f1a \u7b2c\u516d\u56de\n\u4eca\u56de\u306fRESTfulAPI\u3092SpringMVC4\u3067\u4f5c\u6210\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nREST\u5468\u308a\u306b\u3064\u3044\u3066\u3001\u8a00\u8449\u306e\u8aac\u660e\u306f\u5f62\u5f0f\u4e0a\u8f09\u305b\u307e\u3059\u304c\u3001\u4eca\u56de\u3001\u4e0b\u8a18\u300c\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\u300d\u3067\u4f5c\u6210\u3059\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\nHTML\u3067\u306f\u306a\u304f\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\nxml\u3092\u8fd4\u5374\u3059\u308b\nJSON\u3092\u8fd4\u5374\u3059\u308b\n\n\nREST\u3068\u306f\nRESTful\u3068\u306f\n\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\n\u89e3\u8aac\n\n\nREST\u3068\u306f\nREpresentational State Transfer\u306e\u7565\nWEB\u306e\u8a2d\u8a08\u601d\u60f3\u306e\u4e00\u3064\u3002\nWEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e2d\u306e\u30ea\u30bd\u30fc\u30b9\u3092URI\u3067\u793a\u305b\u308b\u3002\n\u4fdd\u5b88\u6027\u30fb\u62e1\u5f35\u6027\u306b\u5bfe\u5fdc\u53ef\u80fd\u306a\u8a2d\u8a08\u3002\nXML\u3084JSON\u3092\u6271\u3046\u3053\u3068\u3067\u3001\u4ed6\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u3044\u3002\n\u7d30\u304b\u3044\u8a71\u306f\u4ee5\u4e0b\u306e\u8cc7\u6599\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\u3067\u3002\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\u203b\u5f15\u7528\u30fb\u53c2\u7167\u4e0b \u2192http://www.slideshare.net/unsolublesugar/res-tful\n\nRESTful\u3068\u306f\nREST\u306e\u898f\u7d04\u306b\u5247\u3063\u305f\u3053\u3068\n\n\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\n\u65e9\u901f\u3001API\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n\u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\n\u307e\u305a\u306f\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u3002\n\u3053\u308c\u306fjsp/Servlet\u3067\u3082\u300ccontentType=\"text/plain\"\u300d\u3067\u8fd4\u305b\u308b\u306e\u3067\u99b4\u67d3\u307f\u304c\u3042\u308b\u4eba\u306f\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\u300cjp.co.kenshu.controller.api\u300d\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u300cRestfulController.java\u300d\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\npackage jp.co.kenshu.controller.api;\n\nimport java.util.List;\nimport jp.co.kenshu.dto.test.TestDto;\nimport jp.co.kenshu.service.TestService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class RestfulController {\n\n    // \u30c6\u30ad\u30b9\u30c8\u304c\u8fd4\u308b\u203b@RestController\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001@ResponseBody\u304c\u4e0d\u8981\n    @RequestMapping(value = \"/api/text/\")\n    public String getTestMember() {\n        return \"aaaa\";\n    }\n}\n\n\u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\u4f8b\u306f\u3053\u306e\u8a18\u8ff0\u306e\u307f\u3067\u5b8c\u4e86\u3067\u3059\u3002\n\u3067\u306fhttp://localhost:8080/SpringKenshu/api/text/\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u300caaa\u300d\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u304b\uff1f\uff1f\n\u4eca\u307e\u3067\u4f5c\u6210\u3057\u3066\u304d\u305fController\u3067\u306freturn\u3057\u305f\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308bView\u30d5\u30a1\u30a4\u30eb\u304c\u8fd4\u5374\u3055\u308c\u3001\u7d50\u679c\u3068\u3057\u3066HTML\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\u3057\u304b\u3057\u3001\u4eca\u56de\u306f\n@RestController\npublic class RestfulController {\n\n\u3053\u3093\u306a\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3059\u3002\n\u300c@RestController\u300d\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u3001SpringMVC\u306eController\u306fRest\u57fa\u8abf\u306eController\u3068\u3057\u3066\n\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u300c@Controller + @ResponseBody\u300d\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3068\u540c\u69d8\u306e\u6319\u52d5\u3092\u3068\u308a\u307e\u3059\u3002\n@Controller\npublic class RestfulController {\n\n    @RequestMapping(value = \"/api/text/\")\n    @ResponseBody\n    public String getTestMember() {\n        return \"aaaa\";\n    }\n}\n\n\uff20ResponseBody\u306f\u623b\u308a\u5024\u81ea\u4f53\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u307e\u3059\u3002\n\nxml\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\nRestfulController.java\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n// XML\u3092\u8fd4\u5374\u3059\u308b\u4f8b\n@RequestMapping(value = \"/xml/\", produces = \"application/xml\")\npublic String xml1() {\n    return \"<a><b>content</b></a>\";\n}\n\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\nproduces = \"application/xml\"\n\n\u306e\u307f\u3067\u3059\u3002produce\u3067\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\n\u3042\u3068\u306f\u623b\u308a\u5024\u304c\u305d\u3082\u305d\u3082XML\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\nJSON\u3092\u8fd4\u5374\u3059\u308b\n\u307e\u305a\u306fJSON\u3092\u6271\u3046\u306b\u3042\u305f\u308a\u3001jackson\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u307e\u3059\u3002\npom.xml\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n<!-- JSON -->\n<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-core</artifactId>\n    <version>2.4.1</version>\n</dependency>\n<dependency>\n    <groupId>com.fasterxml.jackson.core</groupId>\n    <artifactId>jackson-databind</artifactId>\n    <version>2.4.1.1</version>\n</dependency>\n\njackson\u3092pom\u306b\u8a18\u8ff0\u3057\u305f\u3089\u3001\u300c\u5b9f\u884c\u300d\u2192\u300cMaven Install\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3053\u306ePJ\u306bjackson\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\u3067\u306f\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\u307e\u305a\u306fRestfulController.java\u306b\u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n@Autowired\nprivate TestService service;\n\n\u7d9a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n// JSON\u8fd4\u5374\u3059\u308b\u4f8b\u203bjackson.core\u3068jackson-databind\u304cPOM\u306b\u5fc5\u8981\n@RequestMapping(\"/api/json/\")\npublic List<TestDto> json() {\n    List<TestDto> tests = service.getTestAll();\n    return tests;\n}\n\n\u6700\u5f8c\u306bTestDto\u306e\u4f5c\u6210\njp.co.kenshu.dto.test\u4e0b\u306b\nTestDto.java\u3092\u4f5c\u6210\npackage jp.co.kenshu.dto.test;\n\nimport lombok.Data;\n\n@Data\npublic class TestDto {\n    private Integer id;\n    private String name;\n}\n\n\u3053\u308c\u3067http://localhost:8080/SpringKenshu/api/json/\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u524d\u56de\u767b\u9332\u3057\u305fTest\u30c6\u30fc\u30d6\u30eb\u306e\u4e00\u89a7\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\n\u203bTestService#getTestAll()\u306f\u524d\u56de\u7d39\u4ecb\u3057\u305fTest\u30c6\u30fc\u30d6\u30eb\u304b\u3089select all\u3057\u305f\u7d50\u679c\u304cList\u3068\u3057\u3066\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n[{\"id\":17,\"name\":\"hogehoge\"},{\"id\":18,\"name\":\"hogehogehoge\"},{\"id\":23,\"name\":\"\u82b3\u8cc0\"},{\"id\":27,\"name\":\"\uff50\uff50\uff50\uff50\uff50\u3063\u307d\"},{\"id\":28,\"name\":\"\u4e94\u53f3\u885b\u9580\"}]\n\n\u30ea\u30b9\u30c8\u60c5\u5831\u3092\u3088\u3057\u306a\u306bjackson\u306e\u307b\u3046\u3067\u89e3\u6790\u3057\u3001JSON\u6587\u5b57\u5217\u3092\u7d44\u307f\u7acb\u3066\u3066\u304f\u308c\u307e\u3059\u3002\nJSON\u69cb\u9020\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306bJSON\u6587\u5b57\u5217\u60c5\u5831\u3092\u7d44\u307f\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4eca\u56de\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\nAPI\u304b\u3089\u8fd4\u5374\u3055\u308c\u305fJSON\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\n\u4ee5\u4e0a\u3058\u3083\u306a\u3044\u3067\u3059\u3002\u5618\u3067\u3059\u3002\u8ffd\u52a0\u3067\u3059\u3002\n\u305b\u3063\u304b\u304fAPI\u4f5c\u6210\u3057\u305f\u306e\u3067\u3001\u5225\u306eController\u304b\u3089API\u3092\u30b3\u30fc\u30eb\u3057\u3001\u53d7\u3051\u53d6\u3063\u305fJSON\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3002\n\nController\u306e\u4f5c\u6210\n\njp.co.kenshu.controller.api\u4e0b\u306b\u4ee5\u4e0b\u306eController\u3092\u8ffd\u52a0\nTestReceiveController.java\npackage jp.co.kenshu.controller.api;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.nio.charset.StandardCharsets;\nimport java.util.List;\n\nimport jp.co.kenshu.dto.test.TestDto;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.JsonMappingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\npublic class TestReceiveController {\n\n    private static final String API_URL = \"http://localhost:8080/SpringKenshu/api/json/\";\n\n    @RequestMapping(value = \"/api/result/\", method = RequestMethod.GET)\n    public String test(Model model) throws JsonParseException, JsonMappingException, IOException {\n        List<TestDto> dtoList = convertTest(executeGet(API_URL));\n        model.addAttribute(\"dtoList\", dtoList);\n        return \"apiresult\";\n    }\n\n    private List<TestDto> convertTest(String json) throws JsonParseException, JsonMappingException, IOException {\n        ObjectMapper mapper = new ObjectMapper();\n        List<TestDto> list = mapper.readValue(json, new TypeReference<List<TestDto>>() {\n        });\n        return list;\n    }\n\n    private String executeGet(final String urlStr) {\n        StringBuilder sb = new StringBuilder();\n        try {\n            URL url = new URL(urlStr);\n            HttpURLConnection connection = null;\n            try {\n                connection = (HttpURLConnection) url.openConnection();\n                connection.setRequestMethod(\"GET\");\n                if (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {\n                    try (InputStreamReader isr = new InputStreamReader(connection.getInputStream(),\n                            StandardCharsets.UTF_8);\n                            BufferedReader reader = new BufferedReader(isr)) {\n                        String line;\n                        while ((line = reader.readLine()) != null) {\n                            sb.append(line);\n                        }\n                    }\n                }\n            } finally {\n                if (connection != null) {\n                    connection.disconnect();\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return sb.toString();\n    }\n}\n\n\nJSP\u306e\u4f5c\u6210\n\nWEB-INF/view\u4e0b\u306b\u4ee5\u4e0b\u306ejsp\u3092\u4f5c\u6210\napiresult.jsp\n<!DOCTYPE html>\n\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<html>\n    <head>\n        <meta charset=\"utf-8\">\n        <title>Welcome</title>\n    </head>\n    <body>\n        <c:forEach items=\"${dtoList}\" var=\"test\">\n            <p><c:out value=\"${test.id}\" /></p>\n            <p><c:out value=\"${test.name}\" /></p>\n        </c:forEach>\n    </body>\n</html>\n\n\u3053\u308c\u3067\u3001API\u304b\u3089\u53d6\u5f97\u3057\u305fJSON\u3092decode\u3057\u3001TestDto\u306b\u5909\u63db\u3057\u3066\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\u203b\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306f\u5b9f\u969b\u306b\u306fService\u306a\u3069\u306b\u8a18\u8ff0\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001Controller\u306b\u66f8\u3044\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n# Spring4\u52c9\u5f37\u4f1a \u7b2c\u516d\u56de\n\n\u4eca\u56de\u306fRESTfulAPI\u3092SpringMVC4\u3067\u4f5c\u6210\u3059\u308b\u30b5\u30f3\u30d7\u30eb\u3092\u7d39\u4ecb\u3057\u307e\u3059\u3002\nREST\u5468\u308a\u306b\u3064\u3044\u3066\u3001\u8a00\u8449\u306e\u8aac\u660e\u306f\u5f62\u5f0f\u4e0a\u8f09\u305b\u307e\u3059\u304c\u3001\u4eca\u56de\u3001\u4e0b\u8a18\u300c\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\u300d\u3067\u4f5c\u6210\u3059\u308b\u306e\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u3082\u306e\u3067\u3059\u3002\n\n1. HTML\u3067\u306f\u306a\u304f\u3001\u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\n2. xml\u3092\u8fd4\u5374\u3059\u308b\n3. JSON\u3092\u8fd4\u5374\u3059\u308b\n\n* REST\u3068\u306f\n* RESTful\u3068\u306f\n* \u52d5\u304b\u3057\u3066\u307f\u3088\u3046\n* \u89e3\u8aac\n\n# REST\u3068\u306f\n<font color=\"red\">RE</font>presentational <font color=\"red\">S</font>tate <font color=\"red\">T</font>ransfer\u306e\u7565\nWEB\u306e\u8a2d\u8a08\u601d\u60f3\u306e\u4e00\u3064\u3002\nWEB\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e2d\u306e\u30ea\u30bd\u30fc\u30b9\u3092URI\u3067\u793a\u305b\u308b\u3002\n\u4fdd\u5b88\u6027\u30fb\u62e1\u5f35\u6027\u306b\u5bfe\u5fdc\u53ef\u80fd\u306a\u8a2d\u8a08\u3002\nXML\u3084JSON\u3092\u6271\u3046\u3053\u3068\u3067\u3001\u4ed6\u30b7\u30b9\u30c6\u30e0\u3068\u306e\u9023\u643a\u304c\u3057\u3084\u3059\u3044\u3002\n\n\u7d30\u304b\u3044\u8a71\u306f\u4ee5\u4e0b\u306e\u8cc7\u6599\u304c\u308f\u304b\u308a\u3084\u3059\u3044\u306e\u3067\u3001\u4ee5\u4e0b\u3092\u53c2\u7167\u3067\u3002\u3053\u3053\u3067\u306f\u5272\u611b\u3057\u307e\u3059\u3002\n\n\u203b\u5f15\u7528\u30fb\u53c2\u7167\u4e0b \u2192http://www.slideshare.net/unsolublesugar/res-tful\n\n# RESTful\u3068\u306f\n\nREST\u306e\u898f\u7d04\u306b\u5247\u3063\u305f\u3053\u3068\n\n# \u52d5\u304b\u3057\u3066\u307f\u3088\u3046\n\n\u65e9\u901f\u3001API\u3092\u4f5c\u6210\u3057\u3066\u3044\u304d\u307e\u3059\u3002\n\n## \u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\n\n\u307e\u305a\u306f\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u3002\n\u3053\u308c\u306fjsp/Servlet\u3067\u3082\u300ccontentType=\"text/plain\"\u300d\u3067\u8fd4\u305b\u308b\u306e\u3067\u99b4\u67d3\u307f\u304c\u3042\u308b\u4eba\u306f\u3044\u308b\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n\u300cjp.co.kenshu.controller.api\u300d\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u300cRestfulController.java\u300d\u3092\u4f5c\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\n```\npackage jp.co.kenshu.controller.api;\n\nimport java.util.List;\nimport jp.co.kenshu.dto.test.TestDto;\nimport jp.co.kenshu.service.TestService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class RestfulController {\n\n\t// \u30c6\u30ad\u30b9\u30c8\u304c\u8fd4\u308b\u203b@RestController\u304c\u4ed8\u3044\u3066\u3044\u308b\u306e\u3067\u3001@ResponseBody\u304c\u4e0d\u8981\n\t@RequestMapping(value = \"/api/text/\")\n\tpublic String getTestMember() {\n\t\treturn \"aaaa\";\n\t}\n}\n```\n\n\u30c6\u30ad\u30b9\u30c8\u3092\u8fd4\u5374\u3059\u308b\u4f8b\u306f\u3053\u306e\u8a18\u8ff0\u306e\u307f\u3067\u5b8c\u4e86\u3067\u3059\u3002\n\u3067\u306f[http://localhost:8080/SpringKenshu/api/text/](http://localhost:8080/SpringKenshu/api/text/)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u300caaa\u300d\u304c\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u304b\uff1f\uff1f\n\n\u4eca\u307e\u3067\u4f5c\u6210\u3057\u3066\u304d\u305fController\u3067\u306freturn\u3057\u305f\u6587\u5b57\u5217\u306b\u30de\u30c3\u30c1\u3059\u308bView\u30d5\u30a1\u30a4\u30eb\u304c\u8fd4\u5374\u3055\u308c\u3001\u7d50\u679c\u3068\u3057\u3066HTML\u304c\u8868\u793a\u3055\u308c\u3066\u3044\u305f\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u3057\u304b\u3057\u3001\u4eca\u56de\u306f\n\n```\n@RestController\npublic class RestfulController {\n```\n\n\u3053\u3093\u306a\u8a18\u8ff0\u304c\u3042\u308a\u307e\u3059\u3002\n\u300c**@RestController**\u300d\u3053\u306e\u30a2\u30ce\u30c6\u30fc\u30b7\u30e7\u30f3\u3092\u4ed8\u4e0e\u3059\u308b\u3053\u3068\u3067\u3001SpringMVC\u306eController\u306fRest\u57fa\u8abf\u306eController\u3068\u3057\u3066\n\u8a8d\u8b58\u3055\u308c\u307e\u3059\u3002\n\n\u3053\u308c\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u3001\u300c@Controller + @ResponseBody\u300d\u3092\u6307\u5b9a\u3057\u305f\u5834\u5408\u3068\u540c\u69d8\u306e\u6319\u52d5\u3092\u3068\u308a\u307e\u3059\u3002\n\n```\n@Controller\npublic class RestfulController {\n\n\t@RequestMapping(value = \"/api/text/\")\n\t@ResponseBody\n\tpublic String getTestMember() {\n\t\treturn \"aaaa\";\n\t}\n}\n```\n\n\uff20ResponseBody\u306f\u623b\u308a\u5024\u81ea\u4f53\u304c\u30ec\u30b9\u30dd\u30f3\u30b9\u3067\u3042\u308b\u3053\u3068\u3092\u793a\u3057\u3066\u307e\u3059\u3002\n\n## xml\u3092\u30ec\u30b9\u30dd\u30f3\u30b9\u3068\u3057\u3066\u8fd4\u5374\u3059\u308b\n\nRestfulController.java\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n// XML\u3092\u8fd4\u5374\u3059\u308b\u4f8b\n@RequestMapping(value = \"/xml/\", produces = \"application/xml\")\npublic String xml1() {\n\treturn \"<a><b>content</b></a>\";\n}\n```\n\n\u6ce8\u76ee\u3059\u3079\u304d\u306f\n\n```\nproduces = \"application/xml\"\n```\n\n\u306e\u307f\u3067\u3059\u3002produce\u3067\u30e1\u30c7\u30a3\u30a2\u30bf\u30a4\u30d7\u3092\u6307\u5b9a\u3057\u3066\u307e\u3059\u3002\n\u3042\u3068\u306f\u623b\u308a\u5024\u304c\u305d\u3082\u305d\u3082XML\u5f62\u5f0f\u306e\u6587\u5b57\u5217\u3067\u3042\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n## JSON\u3092\u8fd4\u5374\u3059\u308b\n\n\u307e\u305a\u306fJSON\u3092\u6271\u3046\u306b\u3042\u305f\u308a\u3001jackson\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u5229\u7528\u3057\u307e\u3059\u3002\n\npom.xml\u306b\u4ee5\u4e0b\u306e\u8a18\u8ff0\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```\n<!-- JSON -->\n<dependency>\n\t<groupId>com.fasterxml.jackson.core</groupId>\n\t<artifactId>jackson-core</artifactId>\n\t<version>2.4.1</version>\n</dependency>\n<dependency>\n\t<groupId>com.fasterxml.jackson.core</groupId>\n\t<artifactId>jackson-databind</artifactId>\n\t<version>2.4.1.1</version>\n</dependency>\n```\n\njackson\u3092pom\u306b\u8a18\u8ff0\u3057\u305f\u3089\u3001\u300c\u5b9f\u884c\u300d\u2192\u300cMaven Install\u300d\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002\n\u3053\u308c\u3067\u3053\u306ePJ\u306bjackson\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u307e\u3059\u3002\n\n\u3067\u306f\u5b9f\u88c5\u3057\u3066\u3044\u304d\u307e\u3057\u3087\u3046\u3002\n\n\u307e\u305a\u306fRestfulController.java\u306b\u4ee5\u4e0b\u306e\u30d5\u30a3\u30fc\u30eb\u30c9\u8a18\u8ff0\u3092\u8ffd\u52a0\u3057\u307e\u3059\u3002\n\n```\n@Autowired\nprivate TestService service;\n```\n\n\u7d9a\u3044\u3066\u3001\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u3092\u8ffd\u8a18\u3057\u307e\u3059\u3002\n\n```\n// JSON\u8fd4\u5374\u3059\u308b\u4f8b\u203bjackson.core\u3068jackson-databind\u304cPOM\u306b\u5fc5\u8981\n@RequestMapping(\"/api/json/\")\npublic List<TestDto> json() {\n\tList<TestDto> tests = service.getTestAll();\n\treturn tests;\n}\n```\n\n\u6700\u5f8c\u306bTestDto\u306e\u4f5c\u6210\n\njp.co.kenshu.dto.test\u4e0b\u306b\n\n\nTestDto.java\u3092\u4f5c\u6210\n\n```\npackage jp.co.kenshu.dto.test;\n\nimport lombok.Data;\n\n@Data\npublic class TestDto {\n\tprivate Integer id;\n\tprivate String name;\n}\n```\n\n\u3053\u308c\u3067[http://localhost:8080/SpringKenshu/api/json/](http://localhost:8080/SpringKenshu/api/json/)\u306b\u30a2\u30af\u30bb\u30b9\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u524d\u56de\u767b\u9332\u3057\u305fTest\u30c6\u30fc\u30d6\u30eb\u306e\u4e00\u89a7\u304c\u4ee5\u4e0b\u306e\u3088\u3046\u306aJSON\u6587\u5b57\u5217\u3068\u3057\u3066\u8fd4\u5374\u3055\u308c\u307e\u3057\u305f\u3002\n\u203bTestService#getTestAll()\u306f\u524d\u56de\u7d39\u4ecb\u3057\u305fTest\u30c6\u30fc\u30d6\u30eb\u304b\u3089select all\u3057\u305f\u7d50\u679c\u304cList<TestDto>\u3068\u3057\u3066\u8fd4\u5374\u3055\u308c\u307e\u3059\u3002\n\n```\n[{\"id\":17,\"name\":\"hogehoge\"},{\"id\":18,\"name\":\"hogehogehoge\"},{\"id\":23,\"name\":\"\u82b3\u8cc0\"},{\"id\":27,\"name\":\"\uff50\uff50\uff50\uff50\uff50\u3063\u307d\"},{\"id\":28,\"name\":\"\u4e94\u53f3\u885b\u9580\"}]\n```\n\n\u30ea\u30b9\u30c8\u60c5\u5831\u3092\u3088\u3057\u306a\u306bjackson\u306e\u307b\u3046\u3067\u89e3\u6790\u3057\u3001JSON\u6587\u5b57\u5217\u3092\u7d44\u307f\u7acb\u3066\u3066\u304f\u308c\u307e\u3059\u3002\nJSON\u69cb\u9020\u3092\u5909\u66f4\u3057\u305f\u3044\u5834\u5408\u306f\u3001\u72ec\u81ea\u306bJSON\u6587\u5b57\u5217\u60c5\u5831\u3092\u7d44\u307f\u7acb\u3066\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4eca\u56de\u306f\u4ee5\u4e0a\u3067\u3059\u3002\n\n## API\u304b\u3089\u8fd4\u5374\u3055\u308c\u305fJSON\u3092\u30d1\u30fc\u30b9\u3057\u3066\u3001\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\n\n\u4ee5\u4e0a\u3058\u3083\u306a\u3044\u3067\u3059\u3002\u5618\u3067\u3059\u3002\u8ffd\u52a0\u3067\u3059\u3002\n\u305b\u3063\u304b\u304fAPI\u4f5c\u6210\u3057\u305f\u306e\u3067\u3001\u5225\u306eController\u304b\u3089API\u3092\u30b3\u30fc\u30eb\u3057\u3001\u53d7\u3051\u53d6\u3063\u305fJSON\u6587\u5b57\u5217\u3092\u30d1\u30fc\u30b9\u3057\u3066\u753b\u9762\u306b\u8868\u793a\u3057\u3066\u307f\u3088\u3046\u3002\n\n* Controller\u306e\u4f5c\u6210\n\njp.co.kenshu.controller.api\u4e0b\u306b\u4ee5\u4e0b\u306eController\u3092\u8ffd\u52a0\n\nTestReceiveController.java\n\n```\npackage jp.co.kenshu.controller.api;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.net.HttpURLConnection;\nimport java.net.URL;\nimport java.nio.charset.StandardCharsets;\nimport java.util.List;\n\nimport jp.co.kenshu.dto.test.TestDto;\n\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RequestMethod;\n\nimport com.fasterxml.jackson.core.JsonParseException;\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.JsonMappingException;\nimport com.fasterxml.jackson.databind.ObjectMapper;\n\n@Controller\npublic class TestReceiveController {\n\n\tprivate static final String API_URL = \"http://localhost:8080/SpringKenshu/api/json/\";\n\n\t@RequestMapping(value = \"/api/result/\", method = RequestMethod.GET)\n\tpublic String test(Model model) throws JsonParseException, JsonMappingException, IOException {\n\t\tList<TestDto> dtoList = convertTest(executeGet(API_URL));\n\t\tmodel.addAttribute(\"dtoList\", dtoList);\n\t\treturn \"apiresult\";\n\t}\n\n\tprivate List<TestDto> convertTest(String json) throws JsonParseException, JsonMappingException, IOException {\n\t\tObjectMapper mapper = new ObjectMapper();\n\t\tList<TestDto> list = mapper.readValue(json, new TypeReference<List<TestDto>>() {\n\t\t});\n\t\treturn list;\n\t}\n\n\tprivate String executeGet(final String urlStr) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\ttry {\n\t\t\tURL url = new URL(urlStr);\n\t\t\tHttpURLConnection connection = null;\n\t\t\ttry {\n\t\t\t\tconnection = (HttpURLConnection) url.openConnection();\n\t\t\t\tconnection.setRequestMethod(\"GET\");\n\t\t\t\tif (connection.getResponseCode() == HttpURLConnection.HTTP_OK) {\n\t\t\t\t\ttry (InputStreamReader isr = new InputStreamReader(connection.getInputStream(),\n\t\t\t\t\t\t\tStandardCharsets.UTF_8);\n\t\t\t\t\t\t\tBufferedReader reader = new BufferedReader(isr)) {\n\t\t\t\t\t\tString line;\n\t\t\t\t\t\twhile ((line = reader.readLine()) != null) {\n\t\t\t\t\t\t\tsb.append(line);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tif (connection != null) {\n\t\t\t\t\tconnection.disconnect();\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (IOException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\treturn sb.toString();\n\t}\n}\n```\n\n* JSP\u306e\u4f5c\u6210\n\nWEB-INF/view\u4e0b\u306b\u4ee5\u4e0b\u306ejsp\u3092\u4f5c\u6210\n\napiresult.jsp\n\n```\n<!DOCTYPE html>\n\n<%@ page language=\"java\" contentType=\"text/html; charset=UTF-8\" pageEncoding=\"UTF-8\"%>\n<%@ taglib uri=\"http://java.sun.com/jsp/jstl/core\" prefix=\"c\" %>\n<html>\n\t<head>\n\t\t<meta charset=\"utf-8\">\n\t\t<title>Welcome</title>\n\t</head>\n\t<body>\n        <c:forEach items=\"${dtoList}\" var=\"test\">\n            <p><c:out value=\"${test.id}\" /></p>\n            <p><c:out value=\"${test.name}\" /></p>\n        </c:forEach>\n\t</body>\n</html>\n```\n\n\u3053\u308c\u3067\u3001API\u304b\u3089\u53d6\u5f97\u3057\u305fJSON\u3092decode\u3057\u3001TestDto\u306b\u5909\u63db\u3057\u3066\u3001\u753b\u9762\u306b\u8868\u793a\u3055\u308c\u307e\u3059\u3002\n\n\u203b\u30d3\u30b8\u30cd\u30b9\u30ed\u30b8\u30c3\u30af\u306f\u5b9f\u969b\u306b\u306fService\u306a\u3069\u306b\u8a18\u8ff0\u3059\u308b\u3088\u3046\u306b\u3057\u3066\u304f\u3060\u3055\u3044\u3002\n\u9762\u5012\u3060\u3063\u305f\u306e\u3067\u3001Controller\u306b\u66f8\u3044\u3061\u3083\u3063\u3066\u307e\u3059\u3002\n", "tags": ["spring4.1"]}