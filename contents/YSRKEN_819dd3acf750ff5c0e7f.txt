{"tags": ["\u753b\u50cf\u8a8d\u8b58", "\u30b2\u30fc\u30e0", "\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0", "\u6587\u5b57\u8a8d\u8b58", "Java"], "context": " More than 1 year has passed since last update.\u203b\u5185\u5bb9\u306ePowerPoint\u306b\u3088\u308b\u30b9\u30e9\u30a4\u30c9\u7248\u2192http://www.slideshare.net/YSRKEN/ss-54096700\n\n\u6982\u8981\n\u3000\u753b\u50cf\u304b\u3089\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b\u753b\u50cf\u8a8d\u8b58\u306f\u3001\u4eca\u3084\u69d8\u3005\u306a\u5834\u9762\u3067\u5f53\u305f\u308a\u524d\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\n\n\u753b\u50cf\u304b\u3089\u6587\u5b57\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308bOCR\u6280\u8853\n\n\u30ed\u30dc\u30c3\u30c8\u304c\u7269\u4f53\u3092\u8a8d\u8b58\u3057\u3066\u64cd\u4f5c\u30fb\u691c\u67fb\u306a\u3069\u3092\u884c\u3046\u30ed\u30dc\u30c3\u30c8\u30d3\u30b8\u30e7\u30f3\n\n\u6307\u7d0b\u3084\u8679\u5f69\u306a\u3069\u304b\u3089\u500b\u4eba\u3092\u8b58\u5225\u3059\u308b\u751f\u4f53\u8a8d\u8a3c\n\n\n\u306a\u3069\u3001\u6319\u3052\u3066\u3044\u3051\u3070\u30ad\u30ea\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u6628\u4eca\u3067\u306fDeep Learning\u306b\u3088\u308b\u9ad8\u6027\u80fd\u306a\u753b\u50cf\u8a8d\u8b58\u6280\u8853\u3082\u767b\u5834\u3057\u3001\u305d\u306e\u8a8d\u8b58\u7387\u306f\u4eba\u9593\u3092\u8d85\u3048\u308b\u307b\u3069\u306b\u307e\u3067\u306a\u308a\u307e\u3057\u305f\u3002\n\u3000\u3068\u306f\u3044\u3048\u3002\u7c21\u5358\u306a\u753b\u50cf\u8a8d\u8b58\u306e\u51e6\u7406\u3092\u66f8\u304f\u3050\u3089\u3044\u3067\u3057\u305f\u3089\u3001\u9ad8\u5ea6\u306a\u6570\u5b66\u3092\u7528\u3044\u306a\u304f\u3066\u3082\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u3001\u5b9f\u4f8b\u3092\u3082\u3063\u3066\u305d\u306e\u3053\u3068\u3092\u793a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n\u5224\u5b9a\u306b\u7528\u3044\u308b\u7d20\u6750\u304a\u3088\u3073\u6761\u4ef6\n\u753b\u50cf\uff1a\u8266\u3053\u308c\u306e\u6226\u95d8\u753b\u9762(\u663c\u6226)\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u304c\u6c7a\u307e\u3063\u3066\u3044\u3066\u30013D\u30b2\u30fc\u30e0\u3067\u3082\u306a\u3044\u306e\u3067\u5224\u5b9a\u3057\u3084\u3059\u3044\u306e\u304c\u4e3b\u306a\u63a1\u7528\u7406\u7531\u3002\u4ee5\u4e0b\u306e\u8a18\u8ff0\u306b\u304a\u3044\u3066\u306f\u3001\u753b\u50cf\u30b5\u30a4\u30ba\u304c800x480\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u5224\u5b9a\u5185\u5bb9\uff1a\u81ea\u8266\u968a\u304a\u3088\u3073\u6575\u8266\u968a\u306e\u300c\u8266\u8239\u6570\u300d\u300c\u8266\u540d\u300d\u300c\u640d\u5bb3\u5224\u5b9a\u300d\u3002\u4e0a\u8a18\u5185\u5bb9\u3067\u8a00\u3048\u3070\u3001\u300c4\u96bb\u30682\u96bb\u300d\u300c\u6681\u6539\u30fb\u97ff\u6539\u30fb\u96f7\u6539\u30fb\u96fb\u6539\u3068\u99c6\u9010\u30ed\u7d1a\u30fb\u99c6\u9010\u30a4\u7d1a\u300d\u300c\u5168\u3066\u7121\u50b7\u3068\u5168\u3066\u6483\u6c88\u300d\u3068\u7b54\u3048\u308b\u306e\u304c\u6b63\u89e3\u3002\n\u4f7f\u7528\u8a00\u8a9e\uff1aJava\u3002\u624b\u3063\u53d6\u308a\u65e9\u304fGUI\u51fa\u305b\u308b\u3057\u753b\u50cf\u8aad\u3081\u308b\u3057\u8272\u3005\u90fd\u5408\u304c\u3044\u3044\u304b\u3089\u3002\n\n\u307e\u305a\u306f\u5916\u5f62\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\nsample1.java\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport javax.imageio.ImageIO;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\n\npublic class sample1 extends JPanel{\n    static BufferedImage image;\n    // main\u95a2\u6570\n    public static void main(String args[]){\n        if(args.length < 1) return;\n        try{\n            // \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n            image = ImageIO.read(new File(args[0]));\n            // \u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u8868\u793a\u3059\u308b\n            JFrame frame = new JFrame(\"\u30c6\u30b9\u30c8\");\n            sample1 panel = new sample1();\n            frame.getContentPane().add(panel);\n            frame.getContentPane().setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));\n            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            frame.setVisible(true);\n            frame.pack();\n            // \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n            JOptionPane.showMessageDialog(frame, getInfo(image));\n        }\n        catch(IOException error){\n            error.printStackTrace();\n        }\n    }\n    // \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n    private static String getInfo(BufferedImage image){\n        String info = \"\";\n        /* \u8a8d\u8b58\u51e6\u7406 */\n        return info;\n    }\n    // \u753b\u9762\u3092\u63cf\u753b\u3059\u308b\n    public void paintComponent(Graphics graphics){\n        graphics.drawImage(image, 0, 0, this);\n    }\n}\n\n\n\u3000\u307e\u3042\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u306f\u306a\u3044\u306f\u305a\u3067\u3059\u306d\u3002\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30d5\u30ec\u30fc\u30e0\u4e0a\u306e\u30d1\u30cd\u30eb\u306b\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u3000\u4ee5\u964d\u306f\u3001/* \u8a8d\u8b58\u51e6\u7406 */\u306e\u90e8\u5206\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u753b\u50cf\u3092\u8a8d\u8b58\u3057\u3001\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n\u8a8d\u8b58\u306e\u57fa\u672c\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\n\u3000\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u306f\u3001\u305d\u306e\u540d\u306e\u901a\u308a\u6bd4\u8f03\u5bfe\u8c61\u3068\u306a\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4e8b\u524d\u306b\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3068\u6bd4\u8f03\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u5224\u5b9a\u3059\u308b\u624b\u6cd5\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u3088\u3046\u306b\u5bfe\u8c61\u3068\u306a\u308b\u7d75\u306e\u7a2e\u985e\u3084\u5f62\u72b6\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408\u3067\u306f\u6b63\u78ba\u304b\u3064\u9ad8\u901f\u306b\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n\n\u8266\u8239\u6570\n\u3000\u307e\u305a\u8266\u8239\u6570\u306e\u5224\u5b9a\u3067\u3059\u304c\u3001\u5e78\u3044\u305d\u308c\u305e\u308c\u306e\u67a0\u304c\u51fa\u308b\u5834\u6240\u306f\u56fa\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059\u306e\u3067\u3001\u67a0\u306e\u8272\u3092\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u7b49\u3067\u8aad\u307f\u53d6\u3063\u3066\u3084\u308c\u3070\u5bb9\u6613\u306b\u5224\u65ad\u53ef\u80fd\u3067\u3059\u3002\u300c\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u300d\u3092\u5225\u9014\u4f5c\u3063\u3066\u304a\u304f\u3068\u697d\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\nsample2.java\nstatic final int cc_threshold = 500;    //\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u305f\u969b\u306e\u3057\u304d\u3044\u5024(\u7d4c\u9a13\u4e0a\u6c7a\u3081\u305f)\n// \u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\nprivate static boolean checkColor(int x, int y, int color){\n    int argb = image.getRGB(x, y);\n    int r_diff = ((argb & 0xFF0000) >> 16) - ((color & 0xFF0000) >> 16);\n    int g_diff = ((argb &   0xFF00) >>  8) - ((color &   0xFF00) >>  8);\n    int b_diff =  (argb &     0xFF)        -  (color &     0xFF);\n    int diff = r_diff * r_diff + g_diff * g_diff + b_diff * b_diff;\n    if(diff < cc_threshold) return true; else return false;\n}\n// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nprivate static String getInfo(){\n    String info = \"\";\n    /* \u8a8d\u8b58\u51e6\u7406 */\n    // \u8266\u8239\u6570\n    int[] fleet = {1, 1};\n    for(int k = 5; k > 0; k--){\n        if(checkColor(33, 119 + 45 * k, 0x747572)){\n            fleet[0] = k + 1;\n            break;\n        }\n    }\n    for(int k = 5; k > 0; k--){\n        if(checkColor(686, 188 + 45 * k, 0x747572)){\n            fleet[1] = k + 1;\n            break;\n        }\n    }\n    info += \"\u8266\u8239\u6570\uff1a\" + fleet[0] + \"/\" + fleet[1] + \"\\n\";\n    return info;\n}\n\n\n\n\u8266\u540d\n\u3000\u6b21\u306b\u8266\u540d\u3067\u3059\u304c\u3001\u3069\u306e\u8fba\u308a\u3092\u3069\u308c\u3050\u3089\u3044\u8aad\u307f\u53d6\u3063\u3066\u5224\u65ad\u3059\u308b\u304b\u304c\u5927\u304d\u306a\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u30ad\u30e3\u30d7\u753b\u50cf\u3092\u8266\u5a18\uff0b\u6df1\u6d77\u68f2\u8266\u306e\u6570\u3060\u3051\u4e00\u901a\u308a\u7528\u610f\u3057\u3066\u9010\u4e00\u6bd4\u8f03\u3059\u308c\u3070\u78ba\u5b9f\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u8003\u3048\u3066\u3082\u91cd\u3044\u51e6\u7406\u306b\u306a\u308a\u307e\u3059\u3057\u3001\u305d\u308c\u4ee5\u524d\u306b\u8457\u4f5c\u6a29\u306e\u554f\u984c\u304c\u3042\u308a\u307e\u3059(\u4f5c\u3063\u3066\u3082\u914d\u5e03\u3067\u304d\u306a\u3044\u3068\u3044\u3046\u610f\u5473)\u3002\n\u3000\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u300c\u753b\u50cf\u3092\u6c34\u5e73\u304b\u5782\u76f4\u306bX\u30d4\u30af\u30bb\u30eb\u8aad\u307f\u53d6\u3063\u305f\u5f8c2\u5024\u5316\u3057\u305f\u3082\u306e\u3092DB\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u691c\u7d22\u3059\u308b\u969b\u306f\u9023\u60f3\u914d\u5217\u3092\u5229\u7528\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001\u3068\u3042\u308b\u753b\u50cf\u8a8d\u8b58\u5f0f\u30bf\u30a4\u30de\u30fc\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u771f\u4f3c\u305f\u3082\u306e\u3067\u3059\u3002\u8266\u3053\u308c\u306e\u5834\u5408\u306f\u5c0f\u7834\u307e\u3067\u3068\u4e2d\u7834\u4ee5\u4e0a\u3067\u7d75\u67c4\u304c\u5909\u308f\u308b\u306e\u3067\u82e5\u5e72\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u2026\u2026\u3002\u4ed5\u7d44\u307f\u306e\u8aac\u660e\u3068\u3057\u3066\u306f\u3001\u6b21\u306e\u56f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n\nsample3.java\nstatic final double name_threshold = 127.5; //\u8266\u540d\u5224\u5b9a\u306e\u969b\u306e\u3057\u304d\u3044\u5024\nstatic HashMap<Long, String> map = new HashMap<Long,String>();  //\u8266\u540d\u691c\u7d22\n// \u8266\u540d\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\u3059\u308b\nmap.put(0x000ffffffcL, \"\u6681\");  //\u901a\u5e38\nmap.put(0x7ffe7fffffL, \"\u97ff\");  //\u901a\u5e38\nmap.put(0x003fffffffL, \"\u96f7\");  //\u901a\u5e38\nmap.put(0x00dffffffeL, \"\u96f7\");  //\u4e2d\u7834\nmap.put(0x088be7ffffL, \"\u96fb\");  //\u901a\u5e38\nmap.put(0x80e0000003L, \"\u99c6\u9010\u30a4\u7d1a\");\nmap.put(0x9be7c00000L, \"\u99c6\u9010\u30ed\u7d1a\");\nprivate static String getInfo(){\n    (\u4e2d\u7565)\n    // \u8266\u540d\n    info += \"\u81ea\u8266\u968a\uff1a\";\n    for(int k = 0; k < fleet[0]; k++){\n        // 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n        long unit_data = 0;\n        for(int m = 0; m < 40; m++){\n            // Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n            int argb = image.getRGB(97, m + 78 + 45 * k);\n            int r = ((argb & 0xFF0000) >> 16);\n            int g = ((argb &   0xFF00) >>  8);\n            int b =  (argb &     0xFF);\n            double y = 0.299 * r + 0.587 * g + 0.114 * b;\n            // \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n            unit_data <<= 1;\n            if(y >= name_threshold)unit_data += 1;\n        }\n        if(k != 0)info += \"/\";\n        if(map.containsKey(unit_data)){\n            info += map.get(unit_data);\n        }else{\n            info += \"\u4e0d\u660e\";\n        }\n    }\n    info += \"\\n\u6575\u8266\u968a\uff1a\";\n    for(int k = 0; k < fleet[1]; k++){\n        // 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n        long unit_data = 0;\n        for(int m = 0; m < 40; m++){\n            // Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n            int argb = image.getRGB(739, m + 147 + 45 * k);\n            int r = ((argb & 0xFF0000) >> 16);\n            int g = ((argb &   0xFF00) >>  8);\n            int b =  (argb &     0xFF);\n            double y = 0.299 * r + 0.587 * g + 0.114 * b;\n            // \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n            unit_data <<= 1;\n            if(y >= name_threshold)unit_data += 1;\n        }\n        if(k != 0)info += \"/\";\n        if(map.containsKey(unit_data)){\n            info += map.get(unit_data);\n        }else{\n            info += \"\u4e0d\u660e\";\n        }\n    }\n    info += \"\\n\";\n}\n\n\n\n\u640d\u5bb3\u72b6\u6cc1\n\u3000\u307e\u305a\u3001\u640d\u5bb3\u5224\u5b9a(\u5c0f\u7834\u30fb\u4e2d\u7834\u30fb\u5927\u7834\u30fb\u6483\u6c88)\u306e\u5224\u5b9a\u306f\u3055\u307b\u3069\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3001\u53d6\u5f97\u3067\u304d\u308b\u8272\u30c7\u30fc\u30bf\u304c\u4f4d\u7f6e\u306b\u3088\u3063\u3066\u5fae\u5999\u306b\u9055\u3046\u306e\u3067HashMap#containsKey\u3060\u3068\u6b63\u78ba\u306a\u5224\u5b9a\u306b\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u62e1\u5f35for\u3067\u4e00\u901a\u308a\u8abf\u3079\u3066\u3044\u307e\u3059\u3002\n\nsample4.java\nstatic HashMap<Integer, String> damage_map = new HashMap<Integer,String>(); //\u640d\u5bb3\u5224\u5b9a\n// \u640d\u5bb3\u5224\u5b9a\u3092\u521d\u671f\u5316\u3059\u308b\ndamage_map.put(0xe3d052, \"\u5c0f\u7834\");\ndamage_map.put(0xc9944a, \"\u4e2d\u7834\");\ndamage_map.put(0x6d2e27, \"\u5927\u7834\");\ndamage_map.put(0x4b9fd4, \"\u6483\u6c88\");\nprivate static String getInfo(){\n    (\u4e2d\u7565)\n    // \u640d\u5bb3\u5224\u5b9a\n    info += \"\u640d\u5bb3\u5224\u5b9a\uff1a\";\n    for(int k = 0; k < fleet[0]; k++){\n        if(k != 0)info += \".\";\n        boolean flg = false;\n        for(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n            if(checkColor(140, 105 + 45 * k, entry.getKey())){\n                info += entry.getValue();\n                flg = true;\n                break;\n            }\n        }\n        if(!flg){\n            if(checkColor(163, 79 + 45 * k, 0x19FD19)){\n                info += \"\u7121\u50b7\";\n            }else{\n                info += \"\u8efd\u5fae\";\n            }\n        }\n    }\n    info += \" / \";\n    for(int k = 0; k < fleet[1]; k++){\n        if(k != 0)info += \".\";\n        boolean flg = false;\n        for(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n            if(checkColor(780, 174 + 45 * k, entry.getKey())){\n                info += entry.getValue();\n                flg = true;\n                break;\n            }\n        }\n        if(!flg){\n            if(checkColor(636, 148 + 45 * k, 0x19FD19)){\n                info += \"\u7121\u50b7\";\n            }else{\n                info += \"\u8efd\u5fae\";\n            }\n        }\n    }\n}\n\n\n\n\u307e\u3068\u3081\n\u3000\u4ee5\u4e0a\u5168\u3066\u3092\u542b\u3093\u3060\u30b3\u30fc\u30c9\u3092\u3053\u306e\u8a18\u4e8b\u306e\u6587\u672b\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5f8c\u3001\u5f15\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5165\u308c\u3066\u8d77\u52d5\u3059\u308b\u3068\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5224\u5b9a\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u3002\u5224\u5b9a\u6642\u9593\u3068\u3057\u3066\u306f\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u7d42\u308f\u3063\u3066\u304b\u3089System#nanoTime\u3067\u8a08\u6e2c\u3057\u3066\u7d04600\u30de\u30a4\u30af\u30ed\u79d2\u3067\u3059\u306e\u3067\u5341\u5206\u8efd\u3044\u3067\u3057\u3087\u3046(i7-4790K\u30fb64bitWin10\u3067\u8a08\u6e2c)\u3002\u5927\u3057\u305f\u30b3\u30fc\u30c9\u306f\u66f8\u3044\u3066\u307e\u305b\u3093\u304c\u3001\u7d50\u69cb\u306a\u60c5\u5831\u91cf\u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u5de5\u592b\u3059\u308c\u3070\u3001\u3064\u3044\u3067\u306b\u663c\u6226\u304b\u591c\u6226\u304b\u30fb\u305d\u308c\u305e\u308c\u306e\u9663\u5f62\u306a\u3069\u3082\u5206\u304b\u308a\u307e\u3059\u3002\n\n\u3000\u305f\u3060\u3001\u73fe\u8010\u4e45/\u6700\u5927\u8010\u4e45\u3092\u8abf\u3079\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u5c11\u3005\u9762\u5012\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u5143\u306e\u6570\u5b57\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u3067\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f\u65e2\u5b58\u306eOCR\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b\u304b\u3001\u624b\u672c\u3068\u306a\u308b\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u6a5f\u68b0\u5b66\u7fd2\u3055\u305b\u308b\u306a\u3069\u3067\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u306a\u308b\u3068\u8a18\u4e8b\u304c\u304b\u306a\u308a\u9577\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u5272\u611b\u3057\u307e\u3057\u305f\u3002\u5fc5\u8981\u306b\u306a\u3063\u305f\u969b\u306b\u3001\u305d\u308c\u305e\u308c\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n\u304a\u307e\u3051\uff1a\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n\nsample5.java\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport javax.imageio.ImageIO;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\n\npublic class sample1 extends JPanel{\n    static final int cc_threshold = 500;        //\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u305f\u969b\u306e\u3057\u304d\u3044\u5024(\u7d4c\u9a13\u4e0a\u6c7a\u3081\u305f)\n    static final double name_threshold = 127.5; //\u8266\u540d\u5224\u5b9a\u306e\u969b\u306e\u3057\u304d\u3044\u5024\n    static BufferedImage image;         //\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\n    static HashMap<Long, String> unit_map = new HashMap<Long,String>(); //\u8266\u540d\u691c\u7d22\n    static HashMap<Integer, String> damage_map = new HashMap<Integer,String>(); //\u640d\u5bb3\u5224\u5b9a\n    // main\u95a2\u6570\n    public static void main(String args[]){\n        if(args.length < 1) return;\n        try{\n            // \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n            image = ImageIO.read(new File(args[0]));\n            // \u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u8868\u793a\u3059\u308b\n            JFrame frame = new JFrame(\"\u30c6\u30b9\u30c8\");\n            sample1 panel = new sample1();\n            frame.getContentPane().add(panel);\n            frame.getContentPane().setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));\n            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n            frame.setVisible(true);\n            frame.pack();\n            // \u8266\u540d\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\u3059\u308b\n            unit_map.put(0x000ffffffcL, \"\u6681\"); //\u901a\u5e38\n            unit_map.put(0x7ffe7fffffL, \"\u97ff\"); //\u901a\u5e38\n            unit_map.put(0x003fffffffL, \"\u96f7\"); //\u901a\u5e38\n            unit_map.put(0x00dffffffeL, \"\u96f7\"); //\u4e2d\u7834\n            unit_map.put(0x088be7ffffL, \"\u96fb\"); //\u901a\u5e38\n            unit_map.put(0x83c000000cL, \"\u99c6\u9010\u30a4\u7d1a\");\n            unit_map.put(0x9d81e00000L, \"\u99c6\u9010\u30ed\u7d1a\");\n            // \u640d\u5bb3\u5224\u5b9a\u3092\u521d\u671f\u5316\u3059\u308b\n            damage_map.put(0xe3d052, \"\u5c0f\u7834\");\n            damage_map.put(0xc9944a, \"\u4e2d\u7834\");\n            damage_map.put(0x6d2e27, \"\u5927\u7834\");\n            damage_map.put(0x4b9fd4, \"\u6483\u6c88\");\n            // \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n            JOptionPane.showMessageDialog(frame, getInfo());\n        }\n        catch(IOException error){\n            error.printStackTrace();\n        }\n    }\n    // \u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\n    private static boolean checkColor(int x, int y, int color){\n        int argb = image.getRGB(x, y);\n        int r_diff = ((argb & 0xFF0000) >> 16) - ((color & 0xFF0000) >> 16);\n        int g_diff = ((argb &   0xFF00) >>  8) - ((color &   0xFF00) >>  8);\n        int b_diff =  (argb &     0xFF)        -  (color &     0xFF);\n        int diff = r_diff * r_diff + g_diff * g_diff + b_diff * b_diff;\n        if(diff < cc_threshold) return true; else return false;\n    }\n    // \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n    private static String getInfo(){\n        long start = System.nanoTime();\n        String info = \"\";\n        /* \u8a8d\u8b58\u51e6\u7406 */\n        // \u8266\u8239\u6570\n        int[] fleet = {1, 1};\n        for(int k = 5; k > 0; k--){\n            if(checkColor(33, 119 + 45 * k, 0x747572)){\n                fleet[0] = k + 1;\n                break;\n            }\n        }\n        for(int k = 5; k > 0; k--){\n            if(checkColor(686, 188 + 45 * k, 0x747572)){\n                fleet[1] = k + 1;\n                break;\n            }\n        }\n        info += \"\u8266\u8239\u6570\uff1a\" + fleet[0] + \"/\" + fleet[1] + \"\\n\";\n        // \u8266\u540d\n        info += \"\u81ea\u8266\u968a\uff1a\";\n        for(int k = 0; k < fleet[0]; k++){\n            // 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n            long unit_data = 0;\n            for(int m = 0; m < 40; m++){\n                // Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n                int argb = image.getRGB(97, m + 78 + 45 * k);\n                int r = ((argb & 0xFF0000) >> 16);\n                int g = ((argb &   0xFF00) >>  8);\n                int b =  (argb &     0xFF);\n                double y = 0.299 * r + 0.587 * g + 0.114 * b;\n                // \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n                unit_data <<= 1;\n                if(y >= name_threshold)unit_data += 1;\n            }\n            if(k != 0)info += \"/\";\n            if(unit_map.containsKey(unit_data)){\n                info += unit_map.get(unit_data);\n            }else{\n                info += \"\u4e0d\u660e\";\n            }\n        }\n        info += \"\\n\u6575\u8266\u968a\uff1a\";\n        for(int k = 0; k < fleet[1]; k++){\n            // 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n            long unit_data = 0;\n            for(int m = 0; m < 40; m++){\n                // Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n                int argb = image.getRGB(737, m + 147 + 45 * k);\n                int r = ((argb & 0xFF0000) >> 16);\n                int g = ((argb &   0xFF00) >>  8);\n                int b =  (argb &     0xFF);\n                double y = 0.299 * r + 0.587 * g + 0.114 * b;\n                // \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n                unit_data <<= 1;\n                if(y >= name_threshold)unit_data += 1;\n            }\n            if(k != 0)info += \"/\";\n            if(unit_map.containsKey(unit_data)){\n                info += unit_map.get(unit_data);\n            }else{\n                info += \"\u4e0d\u660e\";\n            }\n        }\n        info += \"\\n\";\n        // \u640d\u5bb3\u5224\u5b9a\n        info += \"\u640d\u5bb3\u5224\u5b9a\uff1a\";\n        for(int k = 0; k < fleet[0]; k++){\n            if(k != 0)info += \".\";\n            boolean flg = false;\n            for(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n                if(checkColor(140, 105 + 45 * k, entry.getKey())){\n                    info += entry.getValue();\n                    flg = true;\n                    break;\n                }\n            }\n            if(!flg){\n                if(checkColor(163, 79 + 45 * k, 0x19FD19)){\n                    info += \"\u7121\u50b7\";\n                }else{\n                    info += \"\u8efd\u5fae\";\n                }\n            }\n        }\n        info += \" / \";\n        for(int k = 0; k < fleet[1]; k++){\n            if(k != 0)info += \".\";\n            boolean flg = false;\n            for(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n                if(checkColor(780, 174 + 45 * k, entry.getKey())){\n                    info += entry.getValue();\n                    flg = true;\n                    break;\n                }\n            }\n            if(!flg){\n                if(checkColor(636, 148 + 45 * k, 0x19FD19)){\n                    info += \"\u7121\u50b7\";\n                }else{\n                    info += \"\u8efd\u5fae\";\n                }\n            }\n        }\n        long stop = System.nanoTime();\n        System.out.println(stop - start);\n        return info;\n    }\n    // \u753b\u9762\u3092\u63cf\u753b\u3059\u308b\n    public void paintComponent(Graphics graphics){\n        graphics.drawImage(image, 0, 0, this);\n    }\n}\n\n\n\u203b\u5185\u5bb9\u306ePowerPoint\u306b\u3088\u308b\u30b9\u30e9\u30a4\u30c9\u7248\u2192**http://www.slideshare.net/YSRKEN/ss-54096700**\n\n#\u6982\u8981\n\u3000\u753b\u50cf\u304b\u3089\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b**\u753b\u50cf\u8a8d\u8b58**\u306f\u3001\u4eca\u3084\u69d8\u3005\u306a\u5834\u9762\u3067\u5f53\u305f\u308a\u524d\u306e\u3088\u3046\u306b\u4f7f\u308f\u308c\u3066\u3044\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3001\n\n* \u753b\u50cf\u304b\u3089\u6587\u5b57\u60c5\u5831\u3092\u8aad\u307f\u53d6\u308b**OCR\u6280\u8853**\n* \u30ed\u30dc\u30c3\u30c8\u304c\u7269\u4f53\u3092\u8a8d\u8b58\u3057\u3066\u64cd\u4f5c\u30fb\u691c\u67fb\u306a\u3069\u3092\u884c\u3046**\u30ed\u30dc\u30c3\u30c8\u30d3\u30b8\u30e7\u30f3**\n* \u6307\u7d0b\u3084\u8679\u5f69\u306a\u3069\u304b\u3089\u500b\u4eba\u3092\u8b58\u5225\u3059\u308b**\u751f\u4f53\u8a8d\u8a3c**\n\n\u306a\u3069\u3001\u6319\u3052\u3066\u3044\u3051\u3070\u30ad\u30ea\u304c\u3042\u308a\u307e\u305b\u3093\u3002\u6628\u4eca\u3067\u306f[Deep Learning](http://www.slideshare.net/beam2d/deep-learning-52872945)\u306b\u3088\u308b\u9ad8\u6027\u80fd\u306a\u753b\u50cf\u8a8d\u8b58\u6280\u8853\u3082\u767b\u5834\u3057\u3001\u305d\u306e**[\u8a8d\u8b58\u7387\u306f\u4eba\u9593\u3092\u8d85\u3048\u308b](http://www.4gamer.net/games/999/G999902/20150829007/)**\u307b\u3069\u306b\u307e\u3067\u306a\u308a\u307e\u3057\u305f\u3002\n\u3000\u3068\u306f\u3044\u3048\u3002\u7c21\u5358\u306a\u753b\u50cf\u8a8d\u8b58\u306e\u51e6\u7406\u3092\u66f8\u304f\u3050\u3089\u3044\u3067\u3057\u305f\u3089\u3001\u9ad8\u5ea6\u306a\u6570\u5b66\u3092\u7528\u3044\u306a\u304f\u3066\u3082\u5b9f\u88c5\u3067\u304d\u307e\u3059\u3002\u4ee5\u4e0b\u3001**\u5b9f\u4f8b\u3092\u3082\u3063\u3066**\u305d\u306e\u3053\u3068\u3092\u793a\u3057\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\n\n#\u5224\u5b9a\u306b\u7528\u3044\u308b\u7d20\u6750\u304a\u3088\u3073\u6761\u4ef6\n\u753b\u50cf\uff1a**[\u8266\u3053\u308c](http://www.dmm.com/netgame/feature/kancolle.html)\u306e\u6226\u95d8\u753b\u9762(\u663c\u6226)**\u3002 \u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u304c\u6c7a\u307e\u3063\u3066\u3044\u3066\u30013D\u30b2\u30fc\u30e0\u3067\u3082\u306a\u3044\u306e\u3067\u5224\u5b9a\u3057\u3084\u3059\u3044\u306e\u304c\u4e3b\u306a\u63a1\u7528\u7406\u7531\u3002\u4ee5\u4e0b\u306e\u8a18\u8ff0\u306b\u304a\u3044\u3066\u306f\u3001**\u753b\u50cf\u30b5\u30a4\u30ba\u304c800x480\u3067\u3042\u308b\u3053\u3068\u3092\u524d\u63d0**\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n![\u6226\u95d8\u753b\u9762](http://i.imgur.com/U9iCc0h.png)\n\u5224\u5b9a\u5185\u5bb9\uff1a**\u81ea\u8266\u968a\u304a\u3088\u3073\u6575\u8266\u968a\u306e\u300c\u8266\u8239\u6570\u300d\u300c\u8266\u540d\u300d\u300c\u640d\u5bb3\u5224\u5b9a\u300d**\u3002\u4e0a\u8a18\u5185\u5bb9\u3067\u8a00\u3048\u3070\u3001\u300c4\u96bb\u30682\u96bb\u300d\u300c\u6681\u6539\u30fb\u97ff\u6539\u30fb\u96f7\u6539\u30fb\u96fb\u6539\u3068\u99c6\u9010\u30ed\u7d1a\u30fb\u99c6\u9010\u30a4\u7d1a\u300d\u300c\u5168\u3066\u7121\u50b7\u3068\u5168\u3066\u6483\u6c88\u300d\u3068\u7b54\u3048\u308b\u306e\u304c\u6b63\u89e3\u3002\n\u4f7f\u7528\u8a00\u8a9e\uff1aJava\u3002\u624b\u3063\u53d6\u308a\u65e9\u304fGUI\u51fa\u305b\u308b\u3057\u753b\u50cf\u8aad\u3081\u308b\u3057\u8272\u3005\u90fd\u5408\u304c\u3044\u3044\u304b\u3089\u3002\n\n#\u307e\u305a\u306f\u5916\u5f62\u3092\u5b9f\u88c5\u3057\u3066\u307f\u308b\n\n```sample1.java\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport javax.imageio.ImageIO;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\n\npublic class sample1 extends JPanel{\n\tstatic BufferedImage image;\n\t// main\u95a2\u6570\n\tpublic static void main(String args[]){\n\t\tif(args.length < 1) return;\n\t\ttry{\n\t\t\t// \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n\t\t\timage = ImageIO.read(new File(args[0]));\n\t\t\t// \u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u8868\u793a\u3059\u308b\n\t\t\tJFrame frame = new JFrame(\"\u30c6\u30b9\u30c8\");\n\t\t\tsample1 panel = new sample1();\n\t\t\tframe.getContentPane().add(panel);\n\t\t\tframe.getContentPane().setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));\n\t\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\t\tframe.setVisible(true);\n\t\t\tframe.pack();\n\t\t\t// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\t\t\tJOptionPane.showMessageDialog(frame, getInfo(image));\n\t\t}\n\t\tcatch(IOException error){\n\t\t\terror.printStackTrace();\n\t\t}\n\t}\n\t// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\tprivate static String getInfo(BufferedImage image){\n\t\tString info = \"\";\n\t\t/* \u8a8d\u8b58\u51e6\u7406 */\n\t\treturn info;\n\t}\n\t// \u753b\u9762\u3092\u63cf\u753b\u3059\u308b\n\tpublic void paintComponent(Graphics graphics){\n\t\tgraphics.drawImage(image, 0, 0, this);\n\t}\n}\n```\n\u3000\u307e\u3042\u3001\u305d\u3093\u306a\u306b\u96e3\u3057\u304f\u306f\u306a\u3044\u306f\u305a\u3067\u3059\u306d\u3002\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30d5\u30ec\u30fc\u30e0\u4e0a\u306e\u30d1\u30cd\u30eb\u306b\u8868\u793a\u3057\u3066\u3044\u308b\u3060\u3051\u3067\u3059\u3002\n\u3000\u4ee5\u964d\u306f\u3001**/* \u8a8d\u8b58\u51e6\u7406 */**\u306e\u90e8\u5206\u306b\u8ffd\u8a18\u3057\u3066\u3044\u304f\u3053\u3068\u3067\u753b\u50cf\u3092\u8a8d\u8b58\u3057\u3001\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u3002\n\n#\u8a8d\u8b58\u306e\u57fa\u672c\u306f\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\n\u3000\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30de\u30c3\u30c1\u30f3\u30b0\u3068\u306f\u3001\u305d\u306e\u540d\u306e\u901a\u308a**\u6bd4\u8f03\u5bfe\u8c61\u3068\u306a\u308b\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u4e8b\u524d\u306b\u7528\u610f\u3057\u3066\u3001\u305d\u308c\u3068\u6bd4\u8f03\u3059\u308b\u3053\u3068\u306b\u3088\u308a\u5224\u5b9a\u3059\u308b\u624b\u6cd5**\u306e\u3053\u3068\u3092\u6307\u3057\u307e\u3059\u3002\u975e\u5e38\u306b\u30b7\u30f3\u30d7\u30eb\u3067\u3059\u304c\u3001\u4eca\u56de\u306e\u3088\u3046\u306b**\u5bfe\u8c61\u3068\u306a\u308b\u7d75\u306e\u7a2e\u985e\u3084\u5f62\u72b6\u304c\u6c7a\u307e\u3063\u3066\u3044\u308b\u5834\u5408**\u3067\u306f\u6b63\u78ba\u304b\u3064\u9ad8\u901f\u306b\u5224\u5b9a\u3067\u304d\u307e\u3059\u3002\n##\u8266\u8239\u6570\n\u3000\u307e\u305a\u8266\u8239\u6570\u306e\u5224\u5b9a\u3067\u3059\u304c\u3001\u5e78\u3044**\u305d\u308c\u305e\u308c\u306e\u67a0\u304c\u51fa\u308b\u5834\u6240\u306f\u56fa\u5b9a\u3055\u308c\u3066\u3044\u307e\u3059**\u306e\u3067\u3001\u67a0\u306e\u8272\u3092\u30ab\u30e9\u30fc\u30d4\u30c3\u30ab\u30fc\u7b49\u3067\u8aad\u307f\u53d6\u3063\u3066\u3084\u308c\u3070\u5bb9\u6613\u306b\u5224\u65ad\u53ef\u80fd\u3067\u3059\u3002\u300c\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\u95a2\u6570\u300d\u3092\u5225\u9014\u4f5c\u3063\u3066\u304a\u304f\u3068\u697d\u3060\u3068\u601d\u308f\u308c\u307e\u3059\u3002\u5177\u4f53\u7684\u306b\u306f\u3053\u3093\u306a\u611f\u3058\u3002\n\n```sample2.java\nstatic final int cc_threshold = 500;\t//\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u305f\u969b\u306e\u3057\u304d\u3044\u5024(\u7d4c\u9a13\u4e0a\u6c7a\u3081\u305f)\n// \u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\nprivate static boolean checkColor(int x, int y, int color){\n\tint argb = image.getRGB(x, y);\n\tint r_diff = ((argb & 0xFF0000) >> 16) - ((color & 0xFF0000) >> 16);\n\tint g_diff = ((argb &   0xFF00) >>  8) - ((color &   0xFF00) >>  8);\n\tint b_diff =  (argb &     0xFF)        -  (color &     0xFF);\n\tint diff = r_diff * r_diff + g_diff * g_diff + b_diff * b_diff;\n\tif(diff < cc_threshold) return true; else return false;\n}\n// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\nprivate static String getInfo(){\n\tString info = \"\";\n\t/* \u8a8d\u8b58\u51e6\u7406 */\n\t// \u8266\u8239\u6570\n\tint[] fleet = {1, 1};\n\tfor(int k = 5; k > 0; k--){\n\t\tif(checkColor(33, 119 + 45 * k, 0x747572)){\n\t\t\tfleet[0] = k + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int k = 5; k > 0; k--){\n\t\tif(checkColor(686, 188 + 45 * k, 0x747572)){\n\t\t\tfleet[1] = k + 1;\n\t\t\tbreak;\n\t\t}\n\t}\n\tinfo += \"\u8266\u8239\u6570\uff1a\" + fleet[0] + \"/\" + fleet[1] + \"\\n\";\n\treturn info;\n}\n```\n\n##\u8266\u540d\n\u3000\u6b21\u306b\u8266\u540d\u3067\u3059\u304c\u3001**\u3069\u306e\u8fba\u308a\u3092\u3069\u308c\u3050\u3089\u3044\u8aad\u307f\u53d6\u3063\u3066\u5224\u65ad\u3059\u308b\u304b**\u304c\u5927\u304d\u306a\u554f\u984c\u306b\u306a\u308a\u307e\u3059\u3002\u3082\u3061\u308d\u3093\u3001\u30ad\u30e3\u30d7\u753b\u50cf\u3092\u8266\u5a18\uff0b\u6df1\u6d77\u68f2\u8266\u306e\u6570\u3060\u3051\u4e00\u901a\u308a\u7528\u610f\u3057\u3066\u9010\u4e00\u6bd4\u8f03\u3059\u308c\u3070\u78ba\u5b9f\u306a\u306e\u3067\u3059\u304c\u3001\u3069\u3046\u8003\u3048\u3066\u3082**\u91cd\u3044\u51e6\u7406**\u306b\u306a\u308a\u307e\u3059\u3057\u3001\u305d\u308c\u4ee5\u524d\u306b**\u8457\u4f5c\u6a29\u306e\u554f\u984c**\u304c\u3042\u308a\u307e\u3059([\u4f5c\u3063\u3066\u3082\u914d\u5e03\u3067\u304d\u306a\u3044](http://idsuru921.blog.fc2.com/blog-entry-37.html)\u3068\u3044\u3046\u610f\u5473)\u3002\n\u3000\u3068\u3044\u3046\u308f\u3051\u3067\u3001\u300c\u753b\u50cf\u3092**\u6c34\u5e73\u304b\u5782\u76f4\u306bX\u30d4\u30af\u30bb\u30eb**\u8aad\u307f\u53d6\u3063\u305f\u5f8c2\u5024\u5316\u3057\u305f\u3082\u306e\u3092DB\u3068\u3057\u3066\u4fdd\u5b58\u3057\u3066\u304a\u304d\u3001\u691c\u7d22\u3059\u308b\u969b\u306f\u9023\u60f3\u914d\u5217\u3092\u5229\u7528\u3059\u308b\u300d\u3068\u3044\u3046\u624b\u3092\u4f7f\u3046\u3053\u3068\u306b\u3057\u307e\u3057\u305f\u3002\u3053\u308c\u306f\u3001[\u3068\u3042\u308b\u753b\u50cf\u8a8d\u8b58\u5f0f\u30bf\u30a4\u30de\u30fc](https://sites.google.com/site/bathtimer/)\u3067\u4f7f\u7528\u3055\u308c\u3066\u3044\u308b\u30c6\u30af\u30cb\u30c3\u30af\u3092\u771f\u4f3c\u305f\u3082\u306e\u3067\u3059\u3002\u8266\u3053\u308c\u306e\u5834\u5408\u306f**\u5c0f\u7834\u307e\u3067\u3068\u4e2d\u7834\u4ee5\u4e0a\u3067\u7d75\u67c4\u304c\u5909\u308f\u308b**\u306e\u3067\u82e5\u5e72\u3084\u3084\u3053\u3057\u3044\u3067\u3059\u304c\u2026\u2026\u3002\u4ed5\u7d44\u307f\u306e\u8aac\u660e\u3068\u3057\u3066\u306f\u3001\u6b21\u306e\u56f3\u3092\u3054\u89a7\u304f\u3060\u3055\u3044\u3002\n\n![\u4e00\u4eba\u524d\u306e\u30ec\u30c7\u30a3\u3067\u8aac\u660e](http://i.imgur.com/V1eReii.png)\n\n```sample3.java\nstatic final double name_threshold = 127.5;\t//\u8266\u540d\u5224\u5b9a\u306e\u969b\u306e\u3057\u304d\u3044\u5024\nstatic HashMap<Long, String> map = new HashMap<Long,String>();\t//\u8266\u540d\u691c\u7d22\n// \u8266\u540d\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\u3059\u308b\nmap.put(0x000ffffffcL, \"\u6681\");\t//\u901a\u5e38\nmap.put(0x7ffe7fffffL, \"\u97ff\");\t//\u901a\u5e38\nmap.put(0x003fffffffL, \"\u96f7\");\t//\u901a\u5e38\nmap.put(0x00dffffffeL, \"\u96f7\");\t//\u4e2d\u7834\nmap.put(0x088be7ffffL, \"\u96fb\");\t//\u901a\u5e38\nmap.put(0x80e0000003L, \"\u99c6\u9010\u30a4\u7d1a\");\nmap.put(0x9be7c00000L, \"\u99c6\u9010\u30ed\u7d1a\");\nprivate static String getInfo(){\n\t(\u4e2d\u7565)\n\t// \u8266\u540d\n\tinfo += \"\u81ea\u8266\u968a\uff1a\";\n\tfor(int k = 0; k < fleet[0]; k++){\n\t\t// 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\t\tlong unit_data = 0;\n\t\tfor(int m = 0; m < 40; m++){\n\t\t\t// Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\t\t\tint argb = image.getRGB(97, m + 78 + 45 * k);\n\t\t\tint r = ((argb & 0xFF0000) >> 16);\n\t\t\tint g = ((argb &   0xFF00) >>  8);\n\t\t\tint b =  (argb &     0xFF);\n\t\t\tdouble y = 0.299 * r + 0.587 * g + 0.114 * b;\n\t\t\t// \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n\t\t\tunit_data <<= 1;\n\t\t\tif(y >= name_threshold)unit_data += 1;\n\t\t}\n\t\tif(k != 0)info += \"/\";\n\t\tif(map.containsKey(unit_data)){\n\t\t\tinfo += map.get(unit_data);\n\t\t}else{\n\t\t\tinfo += \"\u4e0d\u660e\";\n\t\t}\n\t}\n\tinfo += \"\\n\u6575\u8266\u968a\uff1a\";\n\tfor(int k = 0; k < fleet[1]; k++){\n\t\t// 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\t\tlong unit_data = 0;\n\t\tfor(int m = 0; m < 40; m++){\n\t\t\t// Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\t\t\tint argb = image.getRGB(739, m + 147 + 45 * k);\n\t\t\tint r = ((argb & 0xFF0000) >> 16);\n\t\t\tint g = ((argb &   0xFF00) >>  8);\n\t\t\tint b =  (argb &     0xFF);\n\t\t\tdouble y = 0.299 * r + 0.587 * g + 0.114 * b;\n\t\t\t// \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n\t\t\tunit_data <<= 1;\n\t\t\tif(y >= name_threshold)unit_data += 1;\n\t\t}\n\t\tif(k != 0)info += \"/\";\n\t\tif(map.containsKey(unit_data)){\n\t\t\tinfo += map.get(unit_data);\n\t\t}else{\n\t\t\tinfo += \"\u4e0d\u660e\";\n\t\t}\n\t}\n\tinfo += \"\\n\";\n}\n```\n\n##\u640d\u5bb3\u72b6\u6cc1\n\u3000\u307e\u305a\u3001\u640d\u5bb3\u5224\u5b9a(\u5c0f\u7834\u30fb\u4e2d\u7834\u30fb\u5927\u7834\u30fb\u6483\u6c88)\u306e\u5224\u5b9a\u306f\u3055\u307b\u3069\u96e3\u3057\u304f\u3042\u308a\u307e\u305b\u3093\u3002\u305f\u3060\u3001**\u53d6\u5f97\u3067\u304d\u308b\u8272\u30c7\u30fc\u30bf\u304c\u4f4d\u7f6e\u306b\u3088\u3063\u3066\u5fae\u5999\u306b\u9055\u3046**\u306e\u3067HashMap#containsKey\u3060\u3068\u6b63\u78ba\u306a\u5224\u5b9a\u306b\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u62e1\u5f35for\u3067\u4e00\u901a\u308a\u8abf\u3079\u3066\u3044\u307e\u3059\u3002\n\n```sample4.java\nstatic HashMap<Integer, String> damage_map = new HashMap<Integer,String>();\t//\u640d\u5bb3\u5224\u5b9a\n// \u640d\u5bb3\u5224\u5b9a\u3092\u521d\u671f\u5316\u3059\u308b\ndamage_map.put(0xe3d052, \"\u5c0f\u7834\");\ndamage_map.put(0xc9944a, \"\u4e2d\u7834\");\ndamage_map.put(0x6d2e27, \"\u5927\u7834\");\ndamage_map.put(0x4b9fd4, \"\u6483\u6c88\");\nprivate static String getInfo(){\n\t(\u4e2d\u7565)\n\t// \u640d\u5bb3\u5224\u5b9a\n\tinfo += \"\u640d\u5bb3\u5224\u5b9a\uff1a\";\n\tfor(int k = 0; k < fleet[0]; k++){\n\t\tif(k != 0)info += \".\";\n\t\tboolean flg = false;\n\t\tfor(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n\t\t\tif(checkColor(140, 105 + 45 * k, entry.getKey())){\n\t\t\t\tinfo += entry.getValue();\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flg){\n\t\t\tif(checkColor(163, 79 + 45 * k, 0x19FD19)){\n\t\t\t\tinfo += \"\u7121\u50b7\";\n\t\t\t}else{\n\t\t\t\tinfo += \"\u8efd\u5fae\";\n\t\t\t}\n\t\t}\n\t}\n\tinfo += \" / \";\n\tfor(int k = 0; k < fleet[1]; k++){\n\t\tif(k != 0)info += \".\";\n\t\tboolean flg = false;\n\t\tfor(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n\t\t\tif(checkColor(780, 174 + 45 * k, entry.getKey())){\n\t\t\t\tinfo += entry.getValue();\n\t\t\t\tflg = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(!flg){\n\t\t\tif(checkColor(636, 148 + 45 * k, 0x19FD19)){\n\t\t\t\tinfo += \"\u7121\u50b7\";\n\t\t\t}else{\n\t\t\t\tinfo += \"\u8efd\u5fae\";\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n\n#\u307e\u3068\u3081\n\u3000\u4ee5\u4e0a\u5168\u3066\u3092\u542b\u3093\u3060\u30b3\u30fc\u30c9\u3092\u3053\u306e\u8a18\u4e8b\u306e\u6587\u672b\u306b\u7f6e\u3044\u3066\u304a\u304d\u307e\u3059\u3002\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u305f\u5f8c\u3001\u5f15\u6570\u306b\u30d5\u30a1\u30a4\u30eb\u540d\u3092\u5165\u308c\u3066\u8d77\u52d5\u3059\u308b\u3068\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3093\u3067\u5224\u5b9a\u7d50\u679c\u3092\u8868\u793a\u3057\u307e\u3059\u3002**\u5224\u5b9a\u6642\u9593**\u3068\u3057\u3066\u306f\u3001\u753b\u50cf\u3092\u8aad\u307f\u8fbc\u307f\u7d42\u308f\u3063\u3066\u304b\u3089System#nanoTime\u3067\u8a08\u6e2c\u3057\u3066**\u7d04600\u30de\u30a4\u30af\u30ed\u79d2**\u3067\u3059\u306e\u3067\u5341\u5206\u8efd\u3044\u3067\u3057\u3087\u3046(i7-4790K\u30fb64bitWin10\u3067\u8a08\u6e2c)\u3002\u5927\u3057\u305f\u30b3\u30fc\u30c9\u306f\u66f8\u3044\u3066\u307e\u305b\u3093\u304c\u3001\u7d50\u69cb\u306a\u60c5\u5831\u91cf\u304c\u5f97\u3089\u308c\u308b\u3053\u3068\u304c\u5206\u304b\u308b\u3067\u3057\u3087\u3046\u3002\u5de5\u592b\u3059\u308c\u3070\u3001\u3064\u3044\u3067\u306b\u663c\u6226\u304b\u591c\u6226\u304b\u30fb\u305d\u308c\u305e\u308c\u306e\u9663\u5f62\u306a\u3069\u3082\u5206\u304b\u308a\u307e\u3059\u3002\n![\u5224\u5b9a\u7d50\u679c](http://i.imgur.com/u66cC8h.png)\n\n\u3000\u305f\u3060\u3001\u73fe\u8010\u4e45/\u6700\u5927\u8010\u4e45\u3092\u8abf\u3079\u3088\u3046\u3068\u3059\u308b\u3068\u3001\u5c11\u3005\u9762\u5012\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\u5143\u306e\u6570\u5b57\u753b\u50cf\u3092\u7528\u610f\u3057\u3066\u30d1\u30bf\u30fc\u30f3\u30de\u30c3\u30c1\u30f3\u30b0\u3001\u3067\u3044\u3044\u306e\u3067\u3059\u304c\u3001\u305d\u3046\u3067\u306a\u3044\u5834\u5408\u306f**\u65e2\u5b58\u306eOCR\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3059\u308b**\u304b\u3001**\u624b\u672c\u3068\u306a\u308b\u30c7\u30fc\u30bf\u3092\u7528\u610f\u3057\u3066\u6a5f\u68b0\u5b66\u7fd2**\u3055\u305b\u308b\u306a\u3069\u3067\u5bfe\u51e6\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3046\u306a\u308b\u3068\u8a18\u4e8b\u304c\u304b\u306a\u308a\u9577\u304f\u306a\u308a\u307e\u3059\u306e\u3067\u5272\u611b\u3057\u307e\u3057\u305f\u3002\u5fc5\u8981\u306b\u306a\u3063\u305f\u969b\u306b\u3001\u305d\u308c\u305e\u308c\u8abf\u3079\u3066\u307f\u3066\u304f\u3060\u3055\u3044\u3002\n\n#\u304a\u307e\u3051\uff1a\u5168\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\n```sample5.java\nimport java.awt.Dimension;\nimport java.awt.Graphics;\nimport java.awt.image.BufferedImage;\nimport java.io.File;\nimport java.io.IOException;\nimport java.util.HashMap;\nimport javax.imageio.ImageIO;\nimport javax.swing.JFrame;\nimport javax.swing.JOptionPane;\nimport javax.swing.JPanel;\n\npublic class sample1 extends JPanel{\n\tstatic final int cc_threshold = 500;\t\t//\u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u305f\u969b\u306e\u3057\u304d\u3044\u5024(\u7d4c\u9a13\u4e0a\u6c7a\u3081\u305f)\n\tstatic final double name_threshold = 127.5;\t//\u8266\u540d\u5224\u5b9a\u306e\u969b\u306e\u3057\u304d\u3044\u5024\n\tstatic BufferedImage image;\t\t\t//\u8aad\u307f\u8fbc\u3093\u3060\u753b\u50cf\n\tstatic HashMap<Long, String> unit_map = new HashMap<Long,String>();\t//\u8266\u540d\u691c\u7d22\n\tstatic HashMap<Integer, String> damage_map = new HashMap<Integer,String>();\t//\u640d\u5bb3\u5224\u5b9a\n\t// main\u95a2\u6570\n\tpublic static void main(String args[]){\n\t\tif(args.length < 1) return;\n\t\ttry{\n\t\t\t// \u753b\u50cf\u3092\u8aad\u307f\u8fbc\u3080\n\t\t\timage = ImageIO.read(new File(args[0]));\n\t\t\t// \u30d5\u30ec\u30fc\u30e0\u3092\u4f5c\u6210\u3057\u3066\u8868\u793a\u3059\u308b\n\t\t\tJFrame frame = new JFrame(\"\u30c6\u30b9\u30c8\");\n\t\t\tsample1 panel = new sample1();\n\t\t\tframe.getContentPane().add(panel);\n\t\t\tframe.getContentPane().setPreferredSize(new Dimension(image.getWidth(), image.getHeight()));\n\t\t\tframe.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n\t\t\tframe.setVisible(true);\n\t\t\tframe.pack();\n\t\t\t// \u8266\u540d\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\u3059\u308b\n\t\t\tunit_map.put(0x000ffffffcL, \"\u6681\");\t//\u901a\u5e38\n\t\t\tunit_map.put(0x7ffe7fffffL, \"\u97ff\");\t//\u901a\u5e38\n\t\t\tunit_map.put(0x003fffffffL, \"\u96f7\");\t//\u901a\u5e38\n\t\t\tunit_map.put(0x00dffffffeL, \"\u96f7\");\t//\u4e2d\u7834\n\t\t\tunit_map.put(0x088be7ffffL, \"\u96fb\");\t//\u901a\u5e38\n\t\t\tunit_map.put(0x83c000000cL, \"\u99c6\u9010\u30a4\u7d1a\");\n\t\t\tunit_map.put(0x9d81e00000L, \"\u99c6\u9010\u30ed\u7d1a\");\n\t\t\t// \u640d\u5bb3\u5224\u5b9a\u3092\u521d\u671f\u5316\u3059\u308b\n\t\t\tdamage_map.put(0xe3d052, \"\u5c0f\u7834\");\n\t\t\tdamage_map.put(0xc9944a, \"\u4e2d\u7834\");\n\t\t\tdamage_map.put(0x6d2e27, \"\u5927\u7834\");\n\t\t\tdamage_map.put(0x4b9fd4, \"\u6483\u6c88\");\n\t\t\t// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\t\t\tJOptionPane.showMessageDialog(frame, getInfo());\n\t\t}\n\t\tcatch(IOException error){\n\t\t\terror.printStackTrace();\n\t\t}\n\t}\n\t// \u30ab\u30e9\u30fc\u30d4\u30c3\u30af\u3057\u3066\u6307\u5b9a\u8272\u3068\u5341\u5206\u306b\u8fd1\u3044\u3068\u8a00\u3048\u308b\u304b\u3092\u5224\u5b9a\u3059\u308b\n\tprivate static boolean checkColor(int x, int y, int color){\n\t\tint argb = image.getRGB(x, y);\n\t\tint r_diff = ((argb & 0xFF0000) >> 16) - ((color & 0xFF0000) >> 16);\n\t\tint g_diff = ((argb &   0xFF00) >>  8) - ((color &   0xFF00) >>  8);\n\t\tint b_diff =  (argb &     0xFF)        -  (color &     0xFF);\n\t\tint diff = r_diff * r_diff + g_diff * g_diff + b_diff * b_diff;\n\t\tif(diff < cc_threshold) return true; else return false;\n\t}\n\t// \u753b\u50cf\u3092\u8aad\u307f\u53d6\u3063\u3066\u60c5\u5831\u3092\u8868\u793a\u3059\u308b\n\tprivate static String getInfo(){\n\t\tlong start = System.nanoTime();\n\t\tString info = \"\";\n\t\t/* \u8a8d\u8b58\u51e6\u7406 */\n\t\t// \u8266\u8239\u6570\n\t\tint[] fleet = {1, 1};\n\t\tfor(int k = 5; k > 0; k--){\n\t\t\tif(checkColor(33, 119 + 45 * k, 0x747572)){\n\t\t\t\tfleet[0] = k + 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor(int k = 5; k > 0; k--){\n\t\t\tif(checkColor(686, 188 + 45 * k, 0x747572)){\n\t\t\t\tfleet[1] = k + 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tinfo += \"\u8266\u8239\u6570\uff1a\" + fleet[0] + \"/\" + fleet[1] + \"\\n\";\n\t\t// \u8266\u540d\n\t\tinfo += \"\u81ea\u8266\u968a\uff1a\";\n\t\tfor(int k = 0; k < fleet[0]; k++){\n\t\t\t// 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\t\t\tlong unit_data = 0;\n\t\t\tfor(int m = 0; m < 40; m++){\n\t\t\t\t// Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\t\t\t\tint argb = image.getRGB(97, m + 78 + 45 * k);\n\t\t\t\tint r = ((argb & 0xFF0000) >> 16);\n\t\t\t\tint g = ((argb &   0xFF00) >>  8);\n\t\t\t\tint b =  (argb &     0xFF);\n\t\t\t\tdouble y = 0.299 * r + 0.587 * g + 0.114 * b;\n\t\t\t\t// \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n\t\t\t\tunit_data <<= 1;\n\t\t\t\tif(y >= name_threshold)unit_data += 1;\n\t\t\t}\n\t\t\tif(k != 0)info += \"/\";\n\t\t\tif(unit_map.containsKey(unit_data)){\n\t\t\t\tinfo += unit_map.get(unit_data);\n\t\t\t}else{\n\t\t\t\tinfo += \"\u4e0d\u660e\";\n\t\t\t}\n\t\t}\n\t\tinfo += \"\\n\u6575\u8266\u968a\uff1a\";\n\t\tfor(int k = 0; k < fleet[1]; k++){\n\t\t\t// 40\u30d3\u30c3\u30c8\u306e\u5165\u529b\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\n\t\t\tlong unit_data = 0;\n\t\t\tfor(int m = 0; m < 40; m++){\n\t\t\t\t// Y\u306e\u5024\u3092\u53d6\u5f97\u3059\u308b\n\t\t\t\tint argb = image.getRGB(737, m + 147 + 45 * k);\n\t\t\t\tint r = ((argb & 0xFF0000) >> 16);\n\t\t\t\tint g = ((argb &   0xFF00) >>  8);\n\t\t\t\tint b =  (argb &     0xFF);\n\t\t\t\tdouble y = 0.299 * r + 0.587 * g + 0.114 * b;\n\t\t\t\t// \u3057\u304d\u3044\u5024\u3067\u5224\u65ad\u3057\u3066\u3001unit_data\u306b\u52a0\u7b97\u3059\u308b\n\t\t\t\tunit_data <<= 1;\n\t\t\t\tif(y >= name_threshold)unit_data += 1;\n\t\t\t}\n\t\t\tif(k != 0)info += \"/\";\n\t\t\tif(unit_map.containsKey(unit_data)){\n\t\t\t\tinfo += unit_map.get(unit_data);\n\t\t\t}else{\n\t\t\t\tinfo += \"\u4e0d\u660e\";\n\t\t\t}\n\t\t}\n\t\tinfo += \"\\n\";\n\t\t// \u640d\u5bb3\u5224\u5b9a\n\t\tinfo += \"\u640d\u5bb3\u5224\u5b9a\uff1a\";\n\t\tfor(int k = 0; k < fleet[0]; k++){\n\t\t\tif(k != 0)info += \".\";\n\t\t\tboolean flg = false;\n\t\t\tfor(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n\t\t\t\tif(checkColor(140, 105 + 45 * k, entry.getKey())){\n\t\t\t\t\tinfo += entry.getValue();\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flg){\n\t\t\t\tif(checkColor(163, 79 + 45 * k, 0x19FD19)){\n\t\t\t\t\tinfo += \"\u7121\u50b7\";\n\t\t\t\t}else{\n\t\t\t\t\tinfo += \"\u8efd\u5fae\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tinfo += \" / \";\n\t\tfor(int k = 0; k < fleet[1]; k++){\n\t\t\tif(k != 0)info += \".\";\n\t\t\tboolean flg = false;\n\t\t\tfor(HashMap.Entry<Integer, String> entry : damage_map.entrySet()){\n\t\t\t\tif(checkColor(780, 174 + 45 * k, entry.getKey())){\n\t\t\t\t\tinfo += entry.getValue();\n\t\t\t\t\tflg = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(!flg){\n\t\t\t\tif(checkColor(636, 148 + 45 * k, 0x19FD19)){\n\t\t\t\t\tinfo += \"\u7121\u50b7\";\n\t\t\t\t}else{\n\t\t\t\t\tinfo += \"\u8efd\u5fae\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong stop = System.nanoTime();\n\t\tSystem.out.println(stop - start);\n\t\treturn info;\n\t}\n\t// \u753b\u9762\u3092\u63cf\u753b\u3059\u308b\n\tpublic void paintComponent(Graphics graphics){\n\t\tgraphics.drawImage(image, 0, 0, this);\n\t}\n}\n```\n"}