{"context": "\u4eca\u56de\u306f\u3001.NET Framework \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3001\u5c11\u3057\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nReactive \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3082\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002\n\u3054\u8208\u5473\u304c\u304a\u3042\u308a\u306e\u65b9\u306f\u662f\u975e\u304a\u4ed8\u304d\u5408\u3044\u304f\u3060\u3055\u3044\u3002\n\n\u76ee\u6b21\n\n\u7d99\u627f\u95a2\u4fc2\u6982\u7565\n\nIList<T> \u3068 ICollection<T>\n\nSystem.Linq.ILookup<TKey, TElement>\nSystem.Collections.Concurrent\nSystem.Collections.ObjectModel\nReadOnlyCollection<T>\nObservableCollection<T>\nReadOnlyReactiveCollection<T>\nSystem.Collections.Immutable\n\n\n\u7d99\u627f\u95a2\u4fc2\u6982\u7565\n\u672c\u5f53\u306b\u6982\u7565\u3067\u3059\u3002\n\n\u3053\u306e\u56f3\u3067\u306f\u3001\u4e0a\u306e\u6bb5\u306b\u884c\u304f\u307b\u3069\u7d99\u627f\u95a2\u4fc2\u306f\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002\n\u5404\u6bb5\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n4\u6bb5\u76ee\uff08\u4e00\u756a\u4e0b\uff09\n\u3053\u306e\u6bb5\u306f\u5177\u8c61\u30af\u30e9\u30b9\u3067\u3059\u306d\u3002\n\u5b9f\u969b\u306b\u50cd\u304f\u306e\u306f\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n3\u6bb5\u76ee\n\u5177\u4f53\u7684\u306a\u6a5f\u80fd\u3092\u6301\u3063\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u898f\u5b9a\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u7fa4\u3067\u3059\u3002\n2\u6bb5\u76ee\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u7d71\u62ec\u3059\u308b ICollection \u3067\u3059\u3002\n1\u6bb5\u76ee\uff08\u4e00\u756a\u4e0a\uff09\n\u5217\u6319\u53ef\u80fd\u578b\u5168\u4f53\u3092\u7d71\u62ec\u3059\u308b IEnumerable \u3067\u3059\u3002 \n\n\u4e0a\u306b\u884c\u304f\u307b\u3069\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u6301\u3064\u6a5f\u80fd\u306f\u5c11\u306a\u304f\u3001\u62bd\u8c61\u5316\u3055\u308c\u3066\u3086\u304f\u306e\u304c\u5206\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\nIList<T> \u3068 ICollection<T>\n\n\u4e21\u8005\u3068\u3082\u4f3c\u305f\u3088\u3046\u306a\u540d\u524d\u306a\u306e\u3067\u3001\u3069\u3046\u9055\u3046\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u524d\u63b2\u306e\u56f3\u306e\u901a\u308a\u3001ICollection<T> \u306e\u65b9\u304c\u3088\u308a\u62bd\u8c61\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306a\u306e\u3067\u3059\u304c\u3001\u3067\u306f IList<T> \u306b\u3067\u304d\u3066 ICollection<T> \u306b\u3067\u304d\u306a\u3044\u3053\u3068\u3068\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\n\u7b54\u3048\u306f\u3001IList<T> \u306f\u6dfb\u5b57\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001IList<T> \u72ec\u81ea\u306e\u3082\u306e\u3067\u3059\u3002\n- [ ]\n- IndexOf\n- Insert\n- RemoveAt\n\u3069\u308c\u3082\u6dfb\u5b57\u95a2\u4fc2\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u306d\u3002\n\u3053\u308c\u3089\u306f ICollection<T> \u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\nSystem.Linq.ILookup<TKey, TElement>\n\nDictionary<TKey, TValue> \u306e TValue \u306b\u8907\u6570\u306e\u5024\u3092\u683c\u7d0d\u3057\u305f\u3044\u5834\u5408\u3063\u3066\u7d50\u69cb\u3042\u308a\u307e\u3059\u3088\u306d\u3002\n\u305d\u3093\u306a\u3068\u304d\u3001\nDictionary<int, List<string>>\n\n\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u304c\u3061\u3067\u3059\u3002\n\u8981\u4ef6\u306b\u3088\u3063\u3066\u306f\u305d\u308c\u3067\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001LINQ \u306e ILookup<TKey, TElement> \u3092\u4f7f\u3046\u3068\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\nILookup<TKey, TElement> \u2252 IDictionary<TKey, IEnumerable<TElement>>\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001Value \u304c IEnumerable<TElement> \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3048\u307e\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Linq;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var \u30e2\u30d6\u30ea\u30b9\u30c8 = new[]\n            {\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u7f8a\" },  // \u6226\u95d8\u529b\u3092\u30ad\u30fc\u306b\u3059\u308b\u3068\u91cd\u8907\u3059\u308b\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u725b\" },\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u8c5a\" },\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u9d8f\" },\n                new { \u6226\u95d8\u529b = 1, \u540d\u524d = \"\u30be\u30f3\u30d3\" },\n                new { \u6226\u95d8\u529b = 1, \u540d\u524d = \"\u8718\u86db\" },\n                new { \u6226\u95d8\u529b = 2, \u540d\u524d = \"\u30b9\u30b1\u30eb\u30c8\u30f3\" },\n                new { \u6226\u95d8\u529b = 2, \u540d\u524d = \"\u5320\" },\n                new { \u6226\u95d8\u529b = 3, \u540d\u524d = \"\u30a8\u30f3\u30c0\u30fc\u30de\u30f3\" },\n            };\n\n            var lookup = \u30e2\u30d6\u30ea\u30b9\u30c8.ToLookup(x => x.\u6226\u95d8\u529b, x => x.\u540d\u524d);  // Lookup\u3092\u4f5c\u6210\n\n            foreach (var name in lookup[2])  // \u6dfb\u5b57\u306b\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3068\u5bfe\u5fdc\u3059\u308b IEnumerable<TElement> \u304c\u5f97\u3089\u308c\u308b\n            {\n                Console.WriteLine(name);\n            }\n\n            foreach (IGrouping<int, string> group in lookup)  // lookup\u3092\u5217\u6319\u3059\u308b\u3068 IGrouping<TKey, TElement> \u306b\u306a\u308b\n            {\n                foreach (string name in group)  // IGrouping<TKey, TElement> \u304b\u3089 IEnumerable<TElement> \u306b\u5909\u63db\u53ef\u80fd\n                {\n                    Console.WriteLine(name);\n                }\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\nSystem.Collections.Concurrent\n\n\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f ConcurenntQueue<T> \u306b\u5bfe\u3057\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089 Enqueue \u3068Dequeue \u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Collections.Concurrent;\nusing System.Linq;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var queue = new ConcurrentQueue<int>();\n\n            foreach (var i in Enumerable.Range(0, 10))\n            {\n                Task.Run(() =>\n                {\n                    foreach (var j in Enumerable.Range(0, 10))\n                    {\n                        queue.Enqueue(i);\n                        Thread.Sleep(0);\n                    }\n                });\n            }\n\n            int count = 0;\n            while (count < 100)\n            {\n                int result;\n                if (queue.TryDequeue(out result))\n                {\n                    Console.WriteLine(result);\n                    ++count;\n                }\n                Thread.Sleep(1);\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\nSystem.Collections.ObjectModel\n\nReadOnly \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3001Observable \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u9806\u306b\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\nReadOnlyCollection<T>\n\nSystem.Collections.ObjectModel.ReadOnlyCollection<T> \u306f\u3001\u4efb\u610f\u306e IList<T> \u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3078\u306e\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306a\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067 IList<T> \u3092\u6e21\u3059\u3053\u3068\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u304c\u3067\u304d\u307e\u3059\u3002\n\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u3059\u308b\u3068\u4f55\u304c\u3044\u3044\u306e\u304b\u3002\n\u305d\u308c\u306f\u3001\u30ea\u30b9\u30c8\u3092\u5916\u90e8\u3078\u516c\u958b\u3057\u305f\u3044\u3051\u308c\u3069\u66f8\u304d\u63db\u3048\u306f\u3057\u3066\u307b\u3057\u304f\u306a\u3044\u3001\u3068\u3044\u3046\u5834\u5408\u306b\u3001\nIList<string> StringList { get; }\n\n\u3068 getter \u306e\u307f\u3092\u63d0\u4f9b\u3057\u305f\u3068\u3057\u307e\u3059\u3002\ngetter \u306e\u307f\u306a\u306e\u3067\u3001\u4f7f\u7528\u8005\u304c\u30ea\u30b9\u30c8\u672c\u4f53\u3092\u4e38\u3054\u3068\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f\u66f8\u304d\u63db\u3048\u53ef\u80fd\u306a\u306e\u3067\u3001getter \u306e\u4f7f\u7528\u8005\u306f\u30ea\u30b9\u30c8\u3078\u306e\u8ffd\u52a0\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u5185\u5bb9\u306e\u53c2\u7167\u3060\u3051\u304c\u3067\u304d\u308b\u30ea\u30b9\u30c8\u3092\u63d0\u4f9b\u3067\u304d\u307e\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nnamespace ConsoleSample\n{\n    class SampleClass\n    {\n        private IList<string> _stringList;\n        public IReadOnlyList<string> StringList { get; }\n\n        public SampleClass()\n        {\n            _stringList = new List<string>();\n            StringList = new ReadOnlyCollection<string>(_stringList);\n        }\n    }\n}\n\n\n\u30af\u30e9\u30b9\u5185\u90e8\u304b\u3089\u306f _stringClass \u3092\u4f7f\u7528\u3057\u3001\u30af\u30e9\u30b9\u5916\u90e8\u306b\u306f StringList \u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\u3061\u306a\u307f\u306b\u3001ReadOnlyCollection<T> \u3068\u3044\u3046\u540d\u524d\u3067\u3059\u304c\u3001IReadOnlyList<T> \u3092\u5b9f\u88c5\u3057\u305f\u30ea\u30b9\u30c8\u3067\u3042\u308b\u3053\u3068\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001ReadOnlyDictionary<T> \u3082\u3042\u308a\u307e\u3059\u3002\n\nObservableCollection<T>\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u5bfe\u3059\u308b\u3001\u8ffd\u52a0\u3001\u524a\u9664\u3001\u5909\u66f4\u3001\u79fb\u52d5\u64cd\u4f5c\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u307e\u305f\u306f\u30ea\u30b9\u30c8\u5168\u4f53\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u3001CollectionChanged \u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u300cObservable\u300d\u3068\u3044\u3046\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u304c\u3001IObservable<T> \u3084 IObserver<T> \u3068\u306f\u76f4\u63a5\u306e\u95a2\u9023\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3080\u3057\u308d\u3001INotifyPropertyChanged \u306b\u8fd1\u3044\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\uff08ObservableCollection<T> \u306f INotifyPropertyChanged \u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u76f4\u63a5\u8cfc\u8aad\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\uff09\nCollectionChanged \u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u3001System.Collections.Specialized.INotifyCollectionChanged \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u3082\u306e\u3067\u3059\u3002\n\u30cf\u30f3\u30c9\u30e9\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u3059\u3002\npublic delegate void NotifyCollectionChangedEventHandler(\n    object sender,\n    NotifyCollectionChangedEventArgs e\n);\n\nNotifyCollectionChangedEventArgs \u306b\u306f\u3001\n\nAction\nNewItems\nNewStartingIndex\nOldItems\nOldStartingIndex\n\n\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5909\u66f4\u5185\u5bb9\u3092\u5fc5\u8981\u5341\u5206\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\nWPF \u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u969b\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\nReadOnlyReactiveCollection<T>\n\nneuecc\u3055\u3093\u3001xin9le\u3055\u3093\u3001okazuki\u3055\u3093\u304c\u958b\u767a\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u300cReactiveProperty\u300d\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\nNuGet\u3088\u308a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u300cSystem.Reactive\u300d\uff08\u901a\u79f0\uff1aRx\uff09\u3092\u53c2\u7167\u3059\u308b\u5f62\u3067\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\nReactiveProperty<T> \u306f\u3001IObservable<T> \u3092\u76e3\u8996\u3057\u3066 WPF \u3084 UWP \u306e\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\nReadOnlyReactiveCollection<T> \u306f\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u7248\u3067\u3059\u306d\u3002\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001ObservableCollection<T> \u306e\u5909\u66f4\u3092\u76e3\u8996\u3057\u3066\u3001\u5143\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u52a0\u5de5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var oc = new ObservableCollection<int>();\n            var rc = oc.ToReadOnlyReactiveCollection(x => x * 2);\n\n            oc.Add(1);\n            oc.Add(2);\n            oc.Add(3);\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 2 4 6\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\nIObservable<T> \u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u3067\u304d\u308b\u306e\u306f\u30a2\u30a4\u30c6\u30e0\u306e\u8ffd\u52a0\u3068\u30ea\u30bb\u30c3\u30c8\u3060\u3051\u3067\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Reactive.Subjects;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var sbj = new Subject<int>();\n            var rc = sbj.ToReadOnlyReactiveCollection();\n\n            sbj.OnNext(1);\n            sbj.OnNext(2);\n            sbj.OnNext(3);\n            sbj.OnCompleted();\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 1 2 3\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\nIObservable<CollectionChanged<T>> \u3092\u76e3\u8996\u3059\u308c\u3070\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u7d30\u304b\u304f\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Reactive.Subjects;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var sbj = new Subject<CollectionChanged<int>>();\n            var rc = sbj.ToReadOnlyReactiveCollection<int>();\n\n            sbj.OnNext(CollectionChanged<int>.Add(0, 0));\n            sbj.OnNext(CollectionChanged<int>.Add(1, 1));\n            sbj.OnNext(CollectionChanged<int>.Add(2, 2));\n            sbj.OnNext(CollectionChanged<int>.Add(3, 3));\n            sbj.OnNext(CollectionChanged<int>.Remove(0, rc[0]));\n            sbj.OnNext(CollectionChanged<int>.Replace(1, 5));\n            sbj.OnCompleted();\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 1 5 3\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\nReadOnlyReactiveCollection<T> \u306f MVVM \u30d1\u30bf\u30fc\u30f3\u306b\u9069\u7528\u3059\u308b\u3068\u5a01\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n\nSystem.Collections.Immutable\n\n\u6700\u5f8c\u306b\u7d39\u4ecb\u3059\u308b\u306e\u306f\u3001\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\uff08\u4e0d\u5909\uff09\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u306a\u3044\u306e\u3067\u3001NuGet\u3088\u308a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\u4e0d\u5909\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u3001\u72b6\u614b\u306e\u7ba1\u7406\u304c\u5bb9\u6613\u3067\u3042\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b3\u30b9\u30c8\u9762\u3067\u3082\u6709\u5229\u306b\u306a\u308b\u3088\u3046\u3067\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\n\nSample.cs\nusing System;\nusing System.Collections.Immutable;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var list = ImmutableList.Create<int>(1, 2, 3);\n            var anotherList = list.Add(4);  // list\u3068\u306f\u5225\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308b\n\n            list.ForEach(Console.WriteLine);  // 1 2 3\n            anotherList.ForEach(Console.WriteLine);  // 1 2 3 4\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001Builder \u3092\u4f7f\u7528\u3057\u3066\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\n\nSample.cs\nusing System;\nusing System.Collections.Immutable;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var builder = ImmutableList.CreateBuilder<int>();\n\n            builder.Add(1);\n            builder.Add(2);\n            builder.Add(3);\n            builder.RemoveAt(1);\n            builder.Add(5);\n\n            var list = builder.ToImmutable();\n\n            list.ForEach(Console.WriteLine);  // 1 3 5\n\n            Console.ReadLine();\n        }\n    }\n}\n\n\n\n\u304a\u308f\u308a\u306b\n\u672c\u5f53\u306b\u63bb\u3044\u6458\u3093\u3060\u3060\u3051\u3067\u3057\u305f\u304c\u3001\u3056\u3063\u3068\u7d39\u4ecb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3082\u3057\u77e5\u3089\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n\u4eca\u56de\u306f\u3001.NET Framework \u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3001\u5c11\u3057\u898b\u3066\u3044\u304d\u305f\u3044\u3068\u601d\u3044\u307e\u3059\u3002\nReactive \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306b\u3064\u3044\u3066\u3082\u53d6\u308a\u4e0a\u3052\u3066\u307f\u307e\u3059\u3002\n\u3054\u8208\u5473\u304c\u304a\u3042\u308a\u306e\u65b9\u306f\u662f\u975e\u304a\u4ed8\u304d\u5408\u3044\u304f\u3060\u3055\u3044\u3002\n\n#\u76ee\u6b21\n\n- \u7d99\u627f\u95a2\u4fc2\u6982\u7565\n- `IList<T>` \u3068 `ICollection<T>`\n- `System.Linq.ILookup<TKey, TElement>`\n- `System.Collections.Concurrent`\n- `System.Collections.ObjectModel`\n- `ReadOnlyCollection<T>`\n- `ObservableCollection<T>`\n- `ReadOnlyReactiveCollection<T>`\n- `System.Collections.Immutable`\n\n#\u7d99\u627f\u95a2\u4fc2\u6982\u7565\n\n\u672c\u5f53\u306b\u6982\u7565\u3067\u3059\u3002\n\n![Collections.jpg](https://qiita-image-store.s3.amazonaws.com/0/53668/2441225c-034c-6750-d9fe-2ce749273172.jpeg)\n\n\u3053\u306e\u56f3\u3067\u306f\u3001\u4e0a\u306e\u6bb5\u306b\u884c\u304f\u307b\u3069\u7d99\u627f\u95a2\u4fc2\u306f\u4e0a\u306b\u306a\u308a\u307e\u3059\u3002\n\u5404\u6bb5\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\n- 4\u6bb5\u76ee\uff08\u4e00\u756a\u4e0b\uff09\n\u3053\u306e\u6bb5\u306f\u5177\u8c61\u30af\u30e9\u30b9\u3067\u3059\u306d\u3002\n\u5b9f\u969b\u306b\u50cd\u304f\u306e\u306f\u3053\u308c\u3089\u306e\u30af\u30e9\u30b9\u3067\u3059\u3002\n\n- 3\u6bb5\u76ee\n\u5177\u4f53\u7684\u306a\u6a5f\u80fd\u3092\u6301\u3063\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u898f\u5b9a\u3059\u308b\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u7fa4\u3067\u3059\u3002\n\n- 2\u6bb5\u76ee\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u5168\u4f53\u3092\u7d71\u62ec\u3059\u308b `ICollection` \u3067\u3059\u3002\n\n- 1\u6bb5\u76ee\uff08\u4e00\u756a\u4e0a\uff09\n\u5217\u6319\u53ef\u80fd\u578b\u5168\u4f53\u3092\u7d71\u62ec\u3059\u308b `IEnumerable` \u3067\u3059\u3002 \n\n\u4e0a\u306b\u884c\u304f\u307b\u3069\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u6301\u3064\u6a5f\u80fd\u306f\u5c11\u306a\u304f\u3001\u62bd\u8c61\u5316\u3055\u308c\u3066\u3086\u304f\u306e\u304c\u5206\u304b\u308b\u304b\u3068\u601d\u3044\u307e\u3059\u3002\n\n#`IList<T>` \u3068 `ICollection<T>`\n\n\u4e21\u8005\u3068\u3082\u4f3c\u305f\u3088\u3046\u306a\u540d\u524d\u306a\u306e\u3067\u3001\u3069\u3046\u9055\u3046\u306e\u304b\u308f\u304b\u3089\u306a\u3044\u3068\u3044\u3046\u65b9\u3082\u591a\u3044\u306e\u3067\u306f\u306a\u3044\u3067\u3057\u3087\u3046\u304b\u3002\n\u524d\u63b2\u306e\u56f3\u306e\u901a\u308a\u3001`ICollection<T>` \u306e\u65b9\u304c\u3088\u308a\u62bd\u8c61\u7684\u306a\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306a\u306e\u3067\u3059\u304c\u3001\u3067\u306f `IList<T>` \u306b\u3067\u304d\u3066 `ICollection<T>` \u306b\u3067\u304d\u306a\u3044\u3053\u3068\u3068\u306f\u4f55\u3067\u3057\u3087\u3046\u304b\u3002\n\n\u7b54\u3048\u306f\u3001`IList<T>` \u306f\u6dfb\u5b57\u3092\u4f7f\u7528\u3057\u305f\u30a2\u30af\u30bb\u30b9\u304c\u3067\u304d\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3067\u3059\u3002\n\u4ee5\u4e0b\u306e\u30e1\u30bd\u30c3\u30c9\u306f\u3001`IList<T>` \u72ec\u81ea\u306e\u3082\u306e\u3067\u3059\u3002\n- `[ ]`\n- `IndexOf`\n- `Insert`\n- `RemoveAt`\n\u3069\u308c\u3082\u6dfb\u5b57\u95a2\u4fc2\u306e\u30e1\u30bd\u30c3\u30c9\u3067\u3059\u306d\u3002\n\u3053\u308c\u3089\u306f `ICollection<T>` \u3067\u306f\u4f7f\u3048\u307e\u305b\u3093\u306e\u3067\u3001\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\n#`System.Linq.ILookup<TKey, TElement>`\n\n`Dictionary<TKey, TValue>` \u306e `TValue` \u306b\u8907\u6570\u306e\u5024\u3092\u683c\u7d0d\u3057\u305f\u3044\u5834\u5408\u3063\u3066\u7d50\u69cb\u3042\u308a\u307e\u3059\u3088\u306d\u3002\n\u305d\u3093\u306a\u3068\u304d\u3001\n\n```csharp\nDictionary<int, List<string>>\n```\n\n\u3068\u3044\u3046\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u304c\u3061\u3067\u3059\u3002\n\u8981\u4ef6\u306b\u3088\u3063\u3066\u306f\u305d\u308c\u3067\u3044\u3044\u306e\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u304c\u3001LINQ \u306e `ILookup<TKey, TElement>` \u3092\u4f7f\u3046\u3068\u3059\u3063\u304d\u308a\u66f8\u3051\u307e\u3059\u3002\n\n`ILookup<TKey, TElement>` \u2252 `IDictionary<TKey, IEnumerable<TElement>>`\n\n\u3068\u3044\u3063\u305f\u611f\u3058\u3067\u3001Value \u304c `IEnumerable<TElement>` \u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u4f7f\u3048\u307e\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Linq;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var \u30e2\u30d6\u30ea\u30b9\u30c8 = new[]\n            {\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u7f8a\" },  // \u6226\u95d8\u529b\u3092\u30ad\u30fc\u306b\u3059\u308b\u3068\u91cd\u8907\u3059\u308b\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u725b\" },\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u8c5a\" },\n                new { \u6226\u95d8\u529b = 0, \u540d\u524d = \"\u9d8f\" },\n                new { \u6226\u95d8\u529b = 1, \u540d\u524d = \"\u30be\u30f3\u30d3\" },\n                new { \u6226\u95d8\u529b = 1, \u540d\u524d = \"\u8718\u86db\" },\n                new { \u6226\u95d8\u529b = 2, \u540d\u524d = \"\u30b9\u30b1\u30eb\u30c8\u30f3\" },\n                new { \u6226\u95d8\u529b = 2, \u540d\u524d = \"\u5320\" },\n                new { \u6226\u95d8\u529b = 3, \u540d\u524d = \"\u30a8\u30f3\u30c0\u30fc\u30de\u30f3\" },\n            };\n\n            var lookup = \u30e2\u30d6\u30ea\u30b9\u30c8.ToLookup(x => x.\u6226\u95d8\u529b, x => x.\u540d\u524d);  // Lookup\u3092\u4f5c\u6210\n\n            foreach (var name in lookup[2])  // \u6dfb\u5b57\u306b\u30ad\u30fc\u3092\u6307\u5b9a\u3059\u308b\u3068\u5bfe\u5fdc\u3059\u308b IEnumerable<TElement> \u304c\u5f97\u3089\u308c\u308b\n            {\n                Console.WriteLine(name);\n            }\n\n            foreach (IGrouping<int, string> group in lookup)  // lookup\u3092\u5217\u6319\u3059\u308b\u3068 IGrouping<TKey, TElement> \u306b\u306a\u308b\n            {\n                foreach (string name in group)  // IGrouping<TKey, TElement> \u304b\u3089 IEnumerable<TElement> \u306b\u5909\u63db\u53ef\u80fd\n                {\n                    Console.WriteLine(name);\n                }\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n#`System.Collections.Concurrent`\n\n\u30b9\u30ec\u30c3\u30c9\u30bb\u30fc\u30d5\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u306e\u4f8b\u3067\u306f `ConcurenntQueue<T>` \u306b\u5bfe\u3057\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089 Enqueue \u3068Dequeue \u3092\u3057\u3066\u3044\u307e\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Collections.Concurrent;\nusing System.Linq;\nusing System.Threading;\nusing System.Threading.Tasks;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var queue = new ConcurrentQueue<int>();\n\n            foreach (var i in Enumerable.Range(0, 10))\n            {\n                Task.Run(() =>\n                {\n                    foreach (var j in Enumerable.Range(0, 10))\n                    {\n                        queue.Enqueue(i);\n                        Thread.Sleep(0);\n                    }\n                });\n            }\n\n            int count = 0;\n            while (count < 100)\n            {\n                int result;\n                if (queue.TryDequeue(out result))\n                {\n                    Console.WriteLine(result);\n                    ++count;\n                }\n                Thread.Sleep(1);\n            }\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n#`System.Collections.ObjectModel`\n\nReadOnly \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3068\u3001Observable \u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002\n\u4ee5\u4e0b\u3067\u9806\u306b\u898b\u3066\u3044\u304f\u3053\u3068\u306b\u3057\u307e\u3059\u3002\n\n#`ReadOnlyCollection<T>`\n\n`System.Collections.ObjectModel.ReadOnlyCollection<T>` \u306f\u3001\u4efb\u610f\u306e `IList<T>` \u3092\u30e9\u30c3\u30d4\u30f3\u30b0\u3057\u3001\u305d\u306e\u30ea\u30b9\u30c8\u3078\u306e\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306a\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3057\u307e\u3059\u3002\n\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067 `IList<T>` \u3092\u6e21\u3059\u3053\u3068\u3067\u30e9\u30c3\u30d4\u30f3\u30b0\u304c\u3067\u304d\u307e\u3059\u3002\n\u8aad\u307f\u53d6\u308a\u5c02\u7528\u306b\u3059\u308b\u3068\u4f55\u304c\u3044\u3044\u306e\u304b\u3002\n\u305d\u308c\u306f\u3001\u30ea\u30b9\u30c8\u3092\u5916\u90e8\u3078\u516c\u958b\u3057\u305f\u3044\u3051\u308c\u3069\u66f8\u304d\u63db\u3048\u306f\u3057\u3066\u307b\u3057\u304f\u306a\u3044\u3001\u3068\u3044\u3046\u5834\u5408\u306b\u3001\n\n```csharp\nIList<string> StringList { get; }\n```\n\n\u3068 getter \u306e\u307f\u3092\u63d0\u4f9b\u3057\u305f\u3068\u3057\u307e\u3059\u3002\ngetter \u306e\u307f\u306a\u306e\u3067\u3001\u4f7f\u7528\u8005\u304c\u30ea\u30b9\u30c8\u672c\u4f53\u3092\u4e38\u3054\u3068\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\n\u3057\u304b\u3057\u3001\u30ea\u30b9\u30c8\u306e\u4e2d\u8eab\u306f\u66f8\u304d\u63db\u3048\u53ef\u80fd\u306a\u306e\u3067\u3001getter \u306e\u4f7f\u7528\u8005\u306f\u30ea\u30b9\u30c8\u3078\u306e\u8ffd\u52a0\u30fb\u66f4\u65b0\u30fb\u524a\u9664\u304c\u53ef\u80fd\u306b\u306a\u3063\u3066\u3057\u307e\u3044\u307e\u3059\u3002\n\u3053\u3046\u3044\u3063\u305f\u5834\u5408\u3001\u6b21\u306e\u3088\u3046\u306b\u3059\u308b\u3068\u5185\u5bb9\u306e\u53c2\u7167\u3060\u3051\u304c\u3067\u304d\u308b\u30ea\u30b9\u30c8\u3092\u63d0\u4f9b\u3067\u304d\u307e\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\n\nnamespace ConsoleSample\n{\n    class SampleClass\n    {\n        private IList<string> _stringList;\n        public IReadOnlyList<string> StringList { get; }\n\n        public SampleClass()\n        {\n            _stringList = new List<string>();\n            StringList = new ReadOnlyCollection<string>(_stringList);\n        }\n    }\n}\n```\n\n\u30af\u30e9\u30b9\u5185\u90e8\u304b\u3089\u306f `_stringClass` \u3092\u4f7f\u7528\u3057\u3001\u30af\u30e9\u30b9\u5916\u90e8\u306b\u306f `StringList` \u3092\u516c\u958b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u3061\u306a\u307f\u306b\u3001`ReadOnlyCollection<T>` \u3068\u3044\u3046\u540d\u524d\u3067\u3059\u304c\u3001`IReadOnlyList<T>` \u3092\u5b9f\u88c5\u3057\u305f\u30ea\u30b9\u30c8\u3067\u3042\u308b\u3053\u3068\u306b\u3054\u6ce8\u610f\u304f\u3060\u3055\u3044\u3002\n\u3053\u306e\u30af\u30e9\u30b9\u3068\u540c\u69d8\u306b\u3001`ReadOnlyDictionary<T>` \u3082\u3042\u308a\u307e\u3059\u3002\n\n#`ObservableCollection<T>`\n\n\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u30a2\u30a4\u30c6\u30e0\u306b\u5bfe\u3059\u308b\u3001\u8ffd\u52a0\u3001\u524a\u9664\u3001\u5909\u66f4\u3001\u79fb\u52d5\u64cd\u4f5c\u304c\u3042\u3063\u305f\u5834\u5408\u3001\u307e\u305f\u306f\u30ea\u30b9\u30c8\u5168\u4f53\u304c\u66f4\u65b0\u3055\u308c\u305f\u3068\u304d\u3001`CollectionChanged` \u30a4\u30d9\u30f3\u30c8\u3092\u767a\u751f\u3055\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u300cObservable\u300d\u3068\u3044\u3046\u540d\u524d\u304c\u3064\u3044\u3066\u3044\u307e\u3059\u304c\u3001`IObservable<T>` \u3084 `IObserver<T>` \u3068\u306f\u76f4\u63a5\u306e\u95a2\u9023\u306f\u3042\u308a\u307e\u305b\u3093\u3002\n\u3080\u3057\u308d\u3001`INotifyPropertyChanged` \u306b\u8fd1\u3044\u30a4\u30e1\u30fc\u30b8\u3067\u3059\u3002\n\uff08`ObservableCollection<T>` \u306f `INotifyPropertyChanged` \u3082\u5b9f\u88c5\u3057\u3066\u3044\u307e\u3059\u304c\u3001\u305d\u306e\u30a4\u30d9\u30f3\u30c8\u3092\u76f4\u63a5\u8cfc\u8aad\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\uff09\n\n`CollectionChanged` \u30a4\u30d9\u30f3\u30c8\u306b\u3064\u3044\u3066\u898b\u3066\u307f\u307e\u3057\u3087\u3046\u3002\n\u3053\u306e\u30a4\u30d9\u30f3\u30c8\u306f\u3001`System.Collections.Specialized.INotifyCollectionChanged` \u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306e\u3082\u306e\u3067\u3059\u3002\n\u30cf\u30f3\u30c9\u30e9\u306f\u4ee5\u4e0b\u306e\u5f62\u5f0f\u3067\u3059\u3002\n\n```csharp\npublic delegate void NotifyCollectionChangedEventHandler(\n\tobject sender,\n\tNotifyCollectionChangedEventArgs e\n);\n```\n\n`NotifyCollectionChangedEventArgs` \u306b\u306f\u3001\n\n- `Action`\n- `NewItems`\n- `NewStartingIndex`\n- `OldItems`\n- `OldStartingIndex`\n\n\u3068\u3044\u3046\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u3066\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5909\u66f4\u5185\u5bb9\u3092\u5fc5\u8981\u5341\u5206\u306b\u53d6\u5f97\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u3063\u3066\u3044\u307e\u3059\u3002\n\nWPF \u3067\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c9\u3059\u308b\u969b\u306b\u4f7f\u7528\u3067\u304d\u307e\u3059\u3002\n\n#`ReadOnlyReactiveCollection<T>`\n\nneuecc\u3055\u3093\u3001xin9le\u3055\u3093\u3001okazuki\u3055\u3093\u304c\u958b\u767a\u3057\u3066\u3044\u308b\u30e9\u30a4\u30d6\u30e9\u30ea\u300cReactiveProperty\u300d\u306e\u4e2d\u306b\u542b\u307e\u308c\u3066\u3044\u308b\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\nNuGet\u3088\u308a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u53ef\u80fd\u3067\u3059\u3002\n\u3053\u306e\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u300cSystem.Reactive\u300d\uff08\u901a\u79f0\uff1aRx\uff09\u3092\u53c2\u7167\u3059\u308b\u5f62\u3067\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002\n`ReactiveProperty<T>` \u306f\u3001`IObservable<T>` \u3092\u76e3\u8996\u3057\u3066 WPF \u3084 UWP \u306e\u30c7\u30fc\u30bf\u30d0\u30a4\u30f3\u30c7\u30a3\u30f3\u30b0\u306b\u4f7f\u7528\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u3082\u306e\u3067\u3059\u3002\n`ReadOnlyReactiveCollection<T>` \u306f\u305d\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u7248\u3067\u3059\u306d\u3002\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001`ObservableCollection<T>` \u306e\u5909\u66f4\u3092\u76e3\u8996\u3057\u3066\u3001\u5143\u306e\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u52a0\u5de5\u3057\u305f\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3092\u4f5c\u6210\u3067\u304d\u307e\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var oc = new ObservableCollection<int>();\n            var rc = oc.ToReadOnlyReactiveCollection(x => x * 2);\n\n            oc.Add(1);\n            oc.Add(2);\n            oc.Add(3);\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 2 4 6\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n`IObservable<T>` \u3092\u76e3\u8996\u3059\u308b\u3053\u3068\u3082\u3067\u304d\u307e\u3059\u3002\n\u3053\u306e\u5834\u5408\u3001\u3067\u304d\u308b\u306e\u306f\u30a2\u30a4\u30c6\u30e0\u306e\u8ffd\u52a0\u3068\u30ea\u30bb\u30c3\u30c8\u3060\u3051\u3067\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Reactive.Subjects;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var sbj = new Subject<int>();\n            var rc = sbj.ToReadOnlyReactiveCollection();\n\n            sbj.OnNext(1);\n            sbj.OnNext(2);\n            sbj.OnNext(3);\n            sbj.OnCompleted();\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 1 2 3\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n`IObservable<CollectionChanged<T>>` \u3092\u76e3\u8996\u3059\u308c\u3070\u3001\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306e\u5185\u5bb9\u3092\u7d30\u304b\u304f\u64cd\u4f5c\u3059\u308b\u3053\u3068\u3082\u53ef\u80fd\u3067\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Linq;\nusing System.Reactive.Linq;\nusing System.Reactive.Subjects;\nusing Reactive.Bindings;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var sbj = new Subject<CollectionChanged<int>>();\n            var rc = sbj.ToReadOnlyReactiveCollection<int>();\n\n            sbj.OnNext(CollectionChanged<int>.Add(0, 0));\n            sbj.OnNext(CollectionChanged<int>.Add(1, 1));\n            sbj.OnNext(CollectionChanged<int>.Add(2, 2));\n            sbj.OnNext(CollectionChanged<int>.Add(3, 3));\n            sbj.OnNext(CollectionChanged<int>.Remove(0, rc[0]));\n            sbj.OnNext(CollectionChanged<int>.Replace(1, 5));\n            sbj.OnCompleted();\n\n            // System.Interactive \u306e ForEach\n            rc.ForEach(Console.WriteLine);  // 1 5 3\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n`ReadOnlyReactiveCollection<T>` \u306f MVVM \u30d1\u30bf\u30fc\u30f3\u306b\u9069\u7528\u3059\u308b\u3068\u5a01\u529b\u3092\u767a\u63ee\u3057\u307e\u3059\u3002\n\n#`System.Collections.Immutable`\n\n\u6700\u5f8c\u306b\u7d39\u4ecb\u3059\u308b\u306e\u306f\u3001\u30a4\u30df\u30e5\u30fc\u30bf\u30d6\u30eb\uff08\u4e0d\u5909\uff09\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u3067\u3059\u3002\n\u6a19\u6e96\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u306a\u3044\u306e\u3067\u3001NuGet\u3088\u308a\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\n\n\u4e0d\u5909\u306a\u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u306f\u3001\u72b6\u614b\u306e\u7ba1\u7406\u304c\u5bb9\u6613\u3067\u3042\u308b\u3068\u3044\u3046\u30e1\u30ea\u30c3\u30c8\u304c\u3042\u308a\u307e\u3059\u3002\n\u307e\u305f\u3001\u30b3\u30b9\u30c8\u9762\u3067\u3082\u6709\u5229\u306b\u306a\u308b\u3088\u3046\u3067\u3059\uff08\u672a\u78ba\u8a8d\uff09\u3002\n\n```cshrap:Sample.cs\nusing System;\nusing System.Collections.Immutable;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var list = ImmutableList.Create<int>(1, 2, 3);\n            var anotherList = list.Add(4);  // list\u3068\u306f\u5225\u306e\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9\u304c\u8fd4\u308b\n\n            list.ForEach(Console.WriteLine);  // 1 2 3\n            anotherList.ForEach(Console.WriteLine);  // 1 2 3 4\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n\u4e0b\u8a18\u306e\u3088\u3046\u306b\u3001Builder \u3092\u4f7f\u7528\u3057\u3066\u751f\u6210\u3059\u308b\u65b9\u6cd5\u3082\u3042\u308a\u307e\u3059\u3002\n\n```csharp:Sample.cs\nusing System;\nusing System.Collections.Immutable;\n\nnamespace ConsoleSample\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            var builder = ImmutableList.CreateBuilder<int>();\n\n            builder.Add(1);\n            builder.Add(2);\n            builder.Add(3);\n            builder.RemoveAt(1);\n            builder.Add(5);\n\n            var list = builder.ToImmutable();\n            \n            list.ForEach(Console.WriteLine);  // 1 3 5\n\n            Console.ReadLine();\n        }\n    }\n}\n```\n\n#\u304a\u308f\u308a\u306b\n\n\u672c\u5f53\u306b\u63bb\u3044\u6458\u3093\u3060\u3060\u3051\u3067\u3057\u305f\u304c\u3001\u3056\u3063\u3068\u7d39\u4ecb\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3057\u305f\u3002\n\u3082\u3057\u77e5\u3089\u306a\u3044\u3082\u306e\u304c\u3042\u308a\u307e\u3057\u305f\u3089\u3001\u662f\u975e\u304a\u8a66\u3057\u304f\u3060\u3055\u3044\u3002\n", "tags": ["C#", "Collection", "LINQ", "reactive", "Immutable"]}