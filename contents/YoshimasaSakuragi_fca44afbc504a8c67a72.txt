{"context": " More than 1 year has passed since last update.\n\n\u59cb\u3081\u306b\n\u4eca\u56de\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u30ab\u30aa\u30b9\u7406\u8ad6\u306b\u3064\u3044\u3066\u5c11\u3057\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067openFrameworks\u3067\u30d5\u30e9\u30af\u30bf\u30eb\u3092\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u305f.\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3061\u3089->FractalTest\n\n\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u306f\n\u540d\u524d\u306e\u7531\u6765\u306f\u5206\u6570\u3092\u610f\u5473\u3059\u308b\u30d5\u30e9\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u8a00\u8449\u304b\u3089\u6765\u3066\u304a\u308a,\u30cf\u30a6\u30b9\u30c9\u30eb\u30d5\u6b21\u5143\u304c\u4f4d\u76f8\u6b21\u5143\u3088\u308a\u3082\u5927\u304d\u3044\u3082\u306e\u3092\u4e00\u822c\u306b\u30d5\u30bf\u30af\u30bf\u30eb\u3068\u547c\u3073\u307e\u3059.(\u4f55\u306e\u3053\u3068\u304b\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u30b9\u30eb\u30fc\u3067)\n\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u6319\u3052\u3089\u308c\u308b.\n\n\u5b9f\u88c5\n\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\u3068\u304d\u308a\u304c\u306a\u3044\u306e\u3067\u5b9f\u88c5\u306b\u3044\u304d\u307e\u3059.\n\n\u30b7\u30a7\u30eb\u30d4\u30f3\u30b9\u30ad\u30fc\u306e\u30ae\u30e3\u30b9\u30b1\u30c3\u30c8\n\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u8abf\u3079\u308b\u3068\u4e00\u756a\u3088\u304f\u51fa\u3066\u304f\u308b\u56f3\u5f62\u3060\u3068\u3068\u601d\u3044\u307e\u3059.\n\u81ea\u5df1\u76f8\u4f3c\u7684\u306a\u7121\u9650\u306a\u4e09\u89d2\u5f62\u304b\u3089\u51fa\u6765\u308b\u56f3\u5f62\u3067\u3059.\n\u4f5c\u308a\u304b\u305f\u306f\u4ee5\u4e0b\u306e\u624b\u9806\n\u2460\u6b63\u4e09\u89d2\u5f62\u3092\u4e00\u3064\u7528\u610f\u3059\u308b\n\u2461\u4e09\u89d2\u5f62\u306e\u5404\u8fba\u306e\u4e2d\u70b9\u3092\u7d50\u3076\n\u2462\u51fa\u6765\u305f\u4e09\u89d2\u5f62\u3092\u5233\u308a\u8cab\u304d\u4e00\u8fba\u306e\u9577\u3055\u304c1/2\u306e\u6b63\u4e09\u89d2\u5f62\u30923\u3064\u6b8b\u3059\n\u2463\u6b8b\u3063\u305f\u4e09\u89d2\u5f62\u306b\u5bfe\u3057\u2461,\u2462\u3092\u7e70\u308a\u8fd4\u3059\n\u2464\u5b9f\u969b\u306b\u7121\u9650\u56de\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u306a\u306e\u3067\u3042\u308b\u7a0b\u5ea6\u306e\u7e70\u308a\u8fd4\u3057\u3067\u7d42\u4e86\u3059\u308b\n\u3053\u308c\u3092openFrameworks\u306eMesh\u3092\u4f7f\u3063\u3066\u4f5c\u308a\u307e\u3057\u305f.\n\u8003\u3048\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\n\u4ee5\u4e0b\u306e\u4e09\u89d2\u5f62\u3092n\u56de\u76ee\u306e\u5207\u308a\u629c\u304d\u304c\u7d42\u308f\u3063\u305f\u4e09\u89d2\u5f62\u306e\u5185\u306e\u4e00\u3064\u3060\u3068\u3057\u307e\u3059\n\u5404\u9802\u70b9\u3092A,B,C\u3068\u3057\u3001\u56f3\u306e\u3088\u3046\u306b\u4e2d\u70b9p1,p2,p3\u3092\u8a2d\u5b9a\u3057\u307e\u3059.\n\n\u3053\u3053\u304b\u3089\u65b0\u3057\u3044Mesh\u306eTriangle\u3092\u4e09\u3064\u4f5c\u308b\u306b\u306f\n\u5143\u306e\u4e09\u89d2\u5f62ABC\u3092\u89e3\u4f53\u3057\u3066\u4e09\u3064\u306e\u4e09\u89d2\u5f62Ap1p2,p1Bp3,p2p3C\u3092\u4f5c\u308c\u3070\u826f\u3044\u308f\u3051\u3067\u3059.\n\u3053\u308c\u3092\u5b58\u5728\u3059\u308b\u4e09\u89d2\u5f62\u306e\u5206\u3060\u3051\u7e70\u308a\u8fd4\u305b\u3070n+1\u56de\u76ee\u306e\u4f5c\u696d\u304c\u7d42\u4e86\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059.\n\u3053\u308c\u3092\u30b3\u30fc\u30c9\u3067\u8868\u73fe\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u3067\u3059\n\nSierpinskiGasket.h\n\n#include \"ofMain.h\"\n\nclass SierpinskiGasket {\npublic:\n    void setup();\n    void update();\n    void draw();\n    void reset();\nprivate:\n    int generation = 0; //\u4e0a\u8a18\u306en\n    int frame = 0; //\u4eca\u56de\u306f\u5909\u5316\u3092\u898b\u308b\u305f\u3081\u306b\u6642\u9593\u7d4c\u904e\u3067\u4e09\u89d2\u5f62\u3092\u5897\u3084\u3059\n    int maxGeneration = 8; //\u6700\u5927\u7e70\u308a\u8fd4\u3057\u56de\u6570\n    ofMesh mesh;\n};\n\n\n\n\nSierpinskiGasket.cpp\n\n#include \"SierpinskiGasket.h\"\n\nvoid SierpinskiGasket::setup(){\n    reset();\n}\n\nvoid SierpinskiGasket::update(){\n    frame++;\n    if(frame % 30 != 0) return;\n    if(generation >= maxGeneration) return;\n    for(int i = 0; i < 6 * mesh.vertices.size()/3; i++){\n        mesh.addColor(ofColor::fromHsb(ofRandom(255), 255, 255)); //\u5404\u9802\u70b9\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u8272\u3092\u5165\u308c\u308b\n    }\n    for(int i = mesh.vertices.size() / 3 - 1; i >= 0 ; i--){\n        ofPoint p1 = (mesh.getVertices().at(i * 3) + mesh.getVertices().at(i * 3 + 1))/ 2.0;\n        ofPoint p2 = (mesh.getVertices().at(i * 3) + mesh.getVertices().at(i * 3 + 2))/ 2.0;\n        ofPoint p3 = (mesh.getVertices().at(i * 3 + 1) + mesh.getVertices().at(i * 3 + 2))/ 2.0;\n\n\n        //\u4e09\u89d2\u5f62p2p3C\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 2, p2);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 2, p3);\n\n        //\u4e09\u89d2\u5f62p1Bp3        \n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p1);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p3);\n\n        //\u4e09\u89d2\u5f62Ap1p2\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p1);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p2);\n    }\n    generation++;\n}\n\nvoid SierpinskiGasket::draw(){\n    ofPushMatrix();\n    ofTranslate(ofGetWidth()/2, 50);\n    mesh.draw();\n    ofPopMatrix();\n}\n\nvoid SierpinskiGasket::reset(){\n    generation = 0;\n    frame = 0;\n    mesh.clear();\n    mesh.addVertex(ofPoint(-400, 0));\n    mesh.addVertex(ofPoint(400, 0));\n    mesh.addVertex(ofPoint(0, 400 * sqrt(3.0)));\n    mesh.setMode(OF_PRIMITIVE_TRIANGLES);\n    for(int i = 0; i < 3; i++){\n        mesh.addColor(ofColor::fromHsb(ofRandom(255), 255, 255));\n    }\n}\n\n\n\n\nofApp.cpp\n#include \"ofApp.h\"\n#include \"SierpinskiGasket.h\"\n\nSierpinskiGasket sierpinskiGasket;\n\nvoid ofApp::setup(){\n    ofBackground(0);\n    sierpinskiGasket.setup();\n}\n\nvoid ofApp::update(){\n    sierpinskiGasket.update();\n}\n\nvoid ofApp::draw(){\n    sierpinskiGasket.draw();\n}\n\n\n\u4ee5\u4e0a\u3067\u3059.\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b7\u30a7\u30eb\u30d4\u30f3\u30b9\u30ad\u30fc\u306e\u30ae\u30e3\u30b9\u30b1\u30c3\u30c8\u3092\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\u7f8e\u3057\u3044\u3067\u3059.\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2193\n\n\n\u8907\u6570\u500b\u306e\u7e2e\u5c0f\u306b\u3088\u308b\u81ea\u5df1\u76f8\u4f3c\u96c6\u5408\n\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3053\u3061\u3089\u306e\u30c8\u30d4\u30c3\u30af\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u7d50\u679c\u3060\u3051\u66f8\u3044\u3066\u304a\u304d\u307e\u3059.\u4eca\u56de\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u7c21\u6f54\u306b\u8aac\u660e\u3059\u308b\u3068\u8907\u7d20\u5e73\u9762\u4e0a\u306e\u4e00\u6b21\u306e\u7e2e\u5c0f\u5199\u50cff0,f1\u306e\u3092\u4e8c\u3064\u7528\u3044\u3066\u3001\u96c6\u5408K\u306b\u5bfe\u3057K = f0(K)Uf1(K)\u3092\u6e80\u305f\u3059\u96c6\u5408K\u3092\u6c42\u3081\u3066\u3044\u304f\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u308b.\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u662f\u975e\u30ab\u30aa\u30b9\u7406\u8ad6\u3068\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3064\u3044\u3066\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046.\n\u4ee5\u4e0b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059.\n\nofApp.cpp\n\n#include \"ofApp.h\"\n#include <complex>\n//\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\ncomplex<double> A = complex<double>(0, 0);\ncomplex<double> B = complex<double>(0.4, 0.5);\ncomplex<double> C = complex<double>(0, 0);\ncomplex<double> D = complex<double>(0.4, -0.5);\n//\u5171\u5f79\u3092\u53d6\u308b\ncomplex<double> getComplexConjugate(complex<double> z){\n    return complex<double>(z.real(), - z.imag());\n}\n//f0\ncomplex<double> f0(complex<double> z){\n    return A * z + B * getComplexConjugate(z);\n}\n//f1\ncomplex<double> f1(complex<double> z){\n    return C * (z - 1.0) + D * (getComplexConjugate(z) - 1.0) + 1.0;\n}\n\nvector< complex<double> > CSpace;\nofMesh mesh;\n\nvoid ofApp::setup(){\n    ofBackground(0);\n\n    complex<double> z0 = complex<double>(0, 0);\n    CSpace.push_back(z0);\n\n    for(int i = 0; i < 15; i++){ //15\u56de\u7e70\u308a\u8fd4\u305b\u3070\u3042\u308b\u7a0b\u5ea6\u7dba\u9e97\n        vector< complex< double> > newCSapce = vector< complex<double> >(0);\n        for(int k = 0; k < CSpace.size(); k++){\n            newCSapce.push_back(f0(CSpace.at(k)));\n            newCSapce.push_back(f1(CSpace.at(k)));\n        }\n        CSpace = newCSapce;\n    }\n    for(int i = 0; i < CSpace.size(); i++){\n        mesh.addVertex(ofPoint(CSpace.at(i).real() * 400,CSpace.at(i).imag() * 400));\n    }\n    mesh.setMode(OF_PRIMITIVE_POINTS);\n}\n\nvoid ofApp::draw(){    \n    ofPushMatrix();\n    ofSetColor(0,255,0);\n    ofTranslate(ofGetWidth()/2 - 300, ofGetHeight()/2 );\n    mesh.draw();\n    ofPopMatrix();\n}\n\n\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067A,B,C,D\u306e\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8272\u3005\u306a\u7f8e\u3057\u3044\u56f3\u5f62\u304c\u89b3\u6e2c\u3067\u304d\u307e\u3059.\nA = 0, B = 0.4 + 0.5i, C = 0, D = 0.4 - 0.5i\n\nA = 0.5 + 0.5i, B = 0, C = 0.5 - 0.5i, D = 0\n\nA = 0.707i, B = 0, C = 0.5, D = 0\n\nA = 0.4614 + 0.4614i, B = 0, C = 0, D = 0.2896 - 0.585i\n\n\n\u7d42\u308f\u308a\u306b\n\u4eca\u56de\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3064\u3044\u3066\u4e8c\u7a2e\u985e\u306e\u5b9f\u88c5\u3092\u3057\u3066\u307f\u307e\u3057\u305f.\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5c11\u3057\u5909\u5316\u3055\u305b\u308b\u3060\u3051\u3067\u69d8\u3005\u306a\u81ea\u5df1\u76f8\u95a2\u96c6\u5408\u304c\u63cf\u3051\u308b\u306e\u306f\u3068\u3066\u3082\u8208\u5473\u6df1\u3044\u3067\u3059.\n\u662f\u975e\u4e00\u5ea6\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u904a\u3093\u3067\u307f\u307e\u3057\u3087\u3046!\n2015.12.14\n##\u59cb\u3081\u306b\n\u4eca\u56de\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u30ab\u30aa\u30b9\u7406\u8ad6\u306b\u3064\u3044\u3066\u5c11\u3057\u89e6\u308c\u308b\u6a5f\u4f1a\u304c\u3042\u3063\u305f\u306e\u3067openFrameworks\u3067\u30d5\u30e9\u30af\u30bf\u30eb\u3092\u8868\u73fe\u3057\u3066\u307f\u307e\u3057\u305f.\n\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u3053\u3061\u3089->[FractalTest](https://github.com/SakuragiYoshimasa/FractalTest)\n\n##\u30d5\u30e9\u30af\u30bf\u30eb\u3068\u306f\n\u540d\u524d\u306e\u7531\u6765\u306f\u5206\u6570\u3092\u610f\u5473\u3059\u308b\u30d5\u30e9\u30af\u30b7\u30e7\u30f3\u3068\u3044\u3046\u8a00\u8449\u304b\u3089\u6765\u3066\u304a\u308a,\u30cf\u30a6\u30b9\u30c9\u30eb\u30d5\u6b21\u5143\u304c\u4f4d\u76f8\u6b21\u5143\u3088\u308a\u3082\u5927\u304d\u3044\u3082\u306e\u3092\u4e00\u822c\u306b\u30d5\u30bf\u30af\u30bf\u30eb\u3068\u547c\u3073\u307e\u3059.(\u4f55\u306e\u3053\u3068\u304b\u308f\u304b\u3089\u306a\u3044\u4eba\u306f\u30b9\u30eb\u30fc\u3067)\n\u30d5\u30e9\u30af\u30bf\u30eb\u306e\u7279\u5fb4\u3068\u3057\u3066\u306f\u81ea\u5df1\u76f8\u4f3c\u6027\u304c\u6319\u3052\u3089\u308c\u308b.\n\n\n##\u5b9f\u88c5\n\u8a73\u3057\u304f\u8aac\u660e\u3057\u3066\u3044\u308b\u3068\u304d\u308a\u304c\u306a\u3044\u306e\u3067\u5b9f\u88c5\u306b\u3044\u304d\u307e\u3059.\n##\u30b7\u30a7\u30eb\u30d4\u30f3\u30b9\u30ad\u30fc\u306e\u30ae\u30e3\u30b9\u30b1\u30c3\u30c8\n\n\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u8abf\u3079\u308b\u3068\u4e00\u756a\u3088\u304f\u51fa\u3066\u304f\u308b\u56f3\u5f62\u3060\u3068\u3068\u601d\u3044\u307e\u3059.\n\u81ea\u5df1\u76f8\u4f3c\u7684\u306a\u7121\u9650\u306a\u4e09\u89d2\u5f62\u304b\u3089\u51fa\u6765\u308b\u56f3\u5f62\u3067\u3059.\n\u4f5c\u308a\u304b\u305f\u306f\u4ee5\u4e0b\u306e\u624b\u9806\n\u2460\u6b63\u4e09\u89d2\u5f62\u3092\u4e00\u3064\u7528\u610f\u3059\u308b\n\u2461\u4e09\u89d2\u5f62\u306e\u5404\u8fba\u306e\u4e2d\u70b9\u3092\u7d50\u3076\n\u2462\u51fa\u6765\u305f\u4e09\u89d2\u5f62\u3092\u5233\u308a\u8cab\u304d\u4e00\u8fba\u306e\u9577\u3055\u304c1/2\u306e\u6b63\u4e09\u89d2\u5f62\u30923\u3064\u6b8b\u3059\n\u2463\u6b8b\u3063\u305f\u4e09\u89d2\u5f62\u306b\u5bfe\u3057\u2461,\u2462\u3092\u7e70\u308a\u8fd4\u3059\n\u2464\u5b9f\u969b\u306b\u7121\u9650\u56de\u5b9f\u884c\u3059\u308b\u3053\u3068\u306f\u4e0d\u53ef\u80fd\u306a\u306e\u3067\u3042\u308b\u7a0b\u5ea6\u306e\u7e70\u308a\u8fd4\u3057\u3067\u7d42\u4e86\u3059\u308b\n\n\u3053\u308c\u3092openFrameworks\u306eMesh\u3092\u4f7f\u3063\u3066\u4f5c\u308a\u307e\u3057\u305f.\n\u8003\u3048\u65b9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\n\n\u4ee5\u4e0b\u306e\u4e09\u89d2\u5f62\u3092n\u56de\u76ee\u306e\u5207\u308a\u629c\u304d\u304c\u7d42\u308f\u3063\u305f\u4e09\u89d2\u5f62\u306e\u5185\u306e\u4e00\u3064\u3060\u3068\u3057\u307e\u3059\n\u5404\u9802\u70b9\u3092A,B,C\u3068\u3057\u3001\u56f3\u306e\u3088\u3046\u306b\u4e2d\u70b9p1,p2,p3\u3092\u8a2d\u5b9a\u3057\u307e\u3059.\n\n<img width=\"400\" alt=\"Slack.png\" src=https://qiita-image-store.s3.amazonaws.com/0/68570/703df59a-26de-ffd4-e175-9d29af394ed9.png \"\u540d\u79f0\u672a\u8a2d\u5b9a-1.png\">\n\n\u3053\u3053\u304b\u3089\u65b0\u3057\u3044Mesh\u306eTriangle\u3092\u4e09\u3064\u4f5c\u308b\u306b\u306f\n\u5143\u306e\u4e09\u89d2\u5f62ABC\u3092\u89e3\u4f53\u3057\u3066\u4e09\u3064\u306e\u4e09\u89d2\u5f62Ap1p2,p1Bp3,p2p3C\u3092\u4f5c\u308c\u3070\u826f\u3044\u308f\u3051\u3067\u3059.\n\u3053\u308c\u3092\u5b58\u5728\u3059\u308b\u4e09\u89d2\u5f62\u306e\u5206\u3060\u3051\u7e70\u308a\u8fd4\u305b\u3070n+1\u56de\u76ee\u306e\u4f5c\u696d\u304c\u7d42\u4e86\u3057\u305f\u3053\u3068\u306b\u306a\u308a\u307e\u3059.\n\n\u3053\u308c\u3092\u30b3\u30fc\u30c9\u3067\u8868\u73fe\u3057\u305f\u3082\u306e\u304c\u4ee5\u4e0b\u3067\u3059\n\n\n```cpp:SierpinskiGasket.h\n\n#include \"ofMain.h\"\n\nclass SierpinskiGasket {\npublic:\n    void setup();\n    void update();\n    void draw();\n    void reset();\nprivate:\n    int generation = 0; //\u4e0a\u8a18\u306en\n    int frame = 0; //\u4eca\u56de\u306f\u5909\u5316\u3092\u898b\u308b\u305f\u3081\u306b\u6642\u9593\u7d4c\u904e\u3067\u4e09\u89d2\u5f62\u3092\u5897\u3084\u3059\n    int maxGeneration = 8; //\u6700\u5927\u7e70\u308a\u8fd4\u3057\u56de\u6570\n    ofMesh mesh;\n};\n\n```\n\n```cpp:SierpinskiGasket.cpp\n\n#include \"SierpinskiGasket.h\"\n\nvoid SierpinskiGasket::setup(){\n    reset();\n}\n\nvoid SierpinskiGasket::update(){\n    frame++;\n    if(frame % 30 != 0) return;\n    if(generation >= maxGeneration) return;\n    for(int i = 0; i < 6 * mesh.vertices.size()/3; i++){\n        mesh.addColor(ofColor::fromHsb(ofRandom(255), 255, 255)); //\u5404\u9802\u70b9\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u8272\u3092\u5165\u308c\u308b\n    }\n    for(int i = mesh.vertices.size() / 3 - 1; i >= 0 ; i--){\n        ofPoint p1 = (mesh.getVertices().at(i * 3) + mesh.getVertices().at(i * 3 + 1))/ 2.0;\n        ofPoint p2 = (mesh.getVertices().at(i * 3) + mesh.getVertices().at(i * 3 + 2))/ 2.0;\n        ofPoint p3 = (mesh.getVertices().at(i * 3 + 1) + mesh.getVertices().at(i * 3 + 2))/ 2.0;\n        \n\n\t\t//\u4e09\u89d2\u5f62p2p3C\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 2, p2);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 2, p3);\n\n        //\u4e09\u89d2\u5f62p1Bp3        \n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p1);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p3);\n        \n        //\u4e09\u89d2\u5f62Ap1p2\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p1);\n        mesh.getVertices().insert(mesh.vertices.begin() + i * 3 + 1, p2);\n    }\n    generation++;\n}\n\nvoid SierpinskiGasket::draw(){\n    ofPushMatrix();\n    ofTranslate(ofGetWidth()/2, 50);\n    mesh.draw();\n    ofPopMatrix();\n}\n\nvoid SierpinskiGasket::reset(){\n    generation = 0;\n    frame = 0;\n    mesh.clear();\n    mesh.addVertex(ofPoint(-400, 0));\n    mesh.addVertex(ofPoint(400, 0));\n    mesh.addVertex(ofPoint(0, 400 * sqrt(3.0)));\n    mesh.setMode(OF_PRIMITIVE_TRIANGLES);\n    for(int i = 0; i < 3; i++){\n        mesh.addColor(ofColor::fromHsb(ofRandom(255), 255, 255));\n    }\n}\n\n```\n\n```cpp:ofApp.cpp\n#include \"ofApp.h\"\n#include \"SierpinskiGasket.h\"\n\nSierpinskiGasket sierpinskiGasket;\n\nvoid ofApp::setup(){\n    ofBackground(0);\n    sierpinskiGasket.setup();\n}\n\nvoid ofApp::update(){\n    sierpinskiGasket.update();\n}\n\nvoid ofApp::draw(){\n    sierpinskiGasket.draw();\n}\n```\n\n\u4ee5\u4e0a\u3067\u3059.\n\n\u3053\u308c\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u30b7\u30a7\u30eb\u30d4\u30f3\u30b9\u30ad\u30fc\u306e\u30ae\u30e3\u30b9\u30b1\u30c3\u30c8\u3092\u89b3\u6e2c\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059.\u7f8e\u3057\u3044\u3067\u3059.\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-14 11.32.50.png](https://qiita-image-store.s3.amazonaws.com/0/68570/de9a3c92-a2fa-0e99-4f67-92c898efb589.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-14 11.32.50.png\")\n\n\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u2193\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-14 11.32.59.png](https://qiita-image-store.s3.amazonaws.com/0/68570/fdca33f1-6e40-396f-8137-d1b72190b205.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2015-12-14 11.32.59.png\")\n\n\n##\u8907\u6570\u500b\u306e\u7e2e\u5c0f\u306b\u3088\u308b\u81ea\u5df1\u76f8\u4f3c\u96c6\u5408\n\u9577\u304f\u306a\u3063\u3066\u3057\u307e\u3063\u305f\u306e\u3067\u3053\u3061\u3089\u306e\u30c8\u30d4\u30c3\u30af\u306f\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3068\u7d50\u679c\u3060\u3051\u66f8\u3044\u3066\u304a\u304d\u307e\u3059.\u4eca\u56de\u306e\u5b9f\u88c5\u306b\u3064\u3044\u3066\u7c21\u6f54\u306b\u8aac\u660e\u3059\u308b\u3068\u8907\u7d20\u5e73\u9762\u4e0a\u306e\u4e00\u6b21\u306e\u7e2e\u5c0f\u5199\u50cff0,f1\u306e\u3092\u4e8c\u3064\u7528\u3044\u3066\u3001\u96c6\u5408K\u306b\u5bfe\u3057K = f0(K)Uf1(K)\u3092\u6e80\u305f\u3059\u96c6\u5408K\u3092\u6c42\u3081\u3066\u3044\u304f\u30d7\u30ed\u30bb\u30b9\u3067\u3042\u308b.\u8a73\u3057\u304f\u77e5\u308a\u305f\u3044\u65b9\u306f\u662f\u975e\u30ab\u30aa\u30b9\u7406\u8ad6\u3068\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3064\u3044\u3066\u4e00\u7dd2\u306b\u52c9\u5f37\u3057\u307e\u3057\u3087\u3046.\n\n\u4ee5\u4e0b\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3067\u3059.\n\n```cpp:ofApp.cpp\n\n#include \"ofApp.h\"\n#include <complex>\n//\u95a2\u6570\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5b9a\u7fa9\ncomplex<double> A = complex<double>(0, 0);\ncomplex<double> B = complex<double>(0.4, 0.5);\ncomplex<double> C = complex<double>(0, 0);\ncomplex<double> D = complex<double>(0.4, -0.5);\n//\u5171\u5f79\u3092\u53d6\u308b\ncomplex<double> getComplexConjugate(complex<double> z){\n    return complex<double>(z.real(), - z.imag());\n}\n//f0\ncomplex<double> f0(complex<double> z){\n    return A * z + B * getComplexConjugate(z);\n}\n//f1\ncomplex<double> f1(complex<double> z){\n    return C * (z - 1.0) + D * (getComplexConjugate(z) - 1.0) + 1.0;\n}\n\nvector< complex<double> > CSpace;\nofMesh mesh;\n\nvoid ofApp::setup(){\n    ofBackground(0);\n\n    complex<double> z0 = complex<double>(0, 0);\n    CSpace.push_back(z0);\n    \n    for(int i = 0; i < 15; i++){ //15\u56de\u7e70\u308a\u8fd4\u305b\u3070\u3042\u308b\u7a0b\u5ea6\u7dba\u9e97\n        vector< complex< double> > newCSapce = vector< complex<double> >(0);\n        for(int k = 0; k < CSpace.size(); k++){\n            newCSapce.push_back(f0(CSpace.at(k)));\n            newCSapce.push_back(f1(CSpace.at(k)));\n        }\n        CSpace = newCSapce;\n    }\n    for(int i = 0; i < CSpace.size(); i++){\n        mesh.addVertex(ofPoint(CSpace.at(i).real() * 400,CSpace.at(i).imag() * 400));\n    }\n    mesh.setMode(OF_PRIMITIVE_POINTS);\n}\n\nvoid ofApp::draw(){    \n    ofPushMatrix();\n    ofSetColor(0,255,0);\n    ofTranslate(ofGetWidth()/2 - 300, ofGetHeight()/2 );\n    mesh.draw();\n    ofPopMatrix();\n}\n\n```\n\n\n\u305f\u3063\u305f\u3053\u308c\u3060\u3051\u306e\u30b3\u30fc\u30c9\u3067A,B,C,D\u306e\u5024\u3092\u5909\u5316\u3055\u305b\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u8272\u3005\u306a\u7f8e\u3057\u3044\u56f3\u5f62\u304c\u89b3\u6e2c\u3067\u304d\u307e\u3059.\n\nA = 0, B = 0.4 + 0.5i, C = 0, D = 0.4 - 0.5i\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_03.png](https://qiita-image-store.s3.amazonaws.com/0/68570/bbf65209-2400-76e1-62d9-babd938d0bd0.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_03.png\")\n\nA = 0.5 + 0.5i, B = 0, C = 0.5 - 0.5i, D = 0\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_05.png](https://qiita-image-store.s3.amazonaws.com/0/68570/9960921c-68f7-d14e-73fd-39ba424ed855.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_05.png\")\n\nA = 0.707i, B = 0, C = 0.5, D = 0\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_08.png](https://qiita-image-store.s3.amazonaws.com/0/68570/13848551-6792-ed84-f86f-022d6e5b01db.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_0_08.png\")\n\n\nA = 0.4614 + 0.4614i, B = 0, C = 0, D = 0.2896 - 0.585i\n\n\n![\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_11_55.png](https://qiita-image-store.s3.amazonaws.com/0/68570/d15013c2-1fe5-bff0-9b93-d588aef49d2f.png \"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8_2015_12_14_11_55.png\")\n\n\n\n##\u7d42\u308f\u308a\u306b\n\u4eca\u56de\u306f\u30d5\u30e9\u30af\u30bf\u30eb\u306b\u3064\u3044\u3066\u4e8c\u7a2e\u985e\u306e\u5b9f\u88c5\u3092\u3057\u3066\u307f\u307e\u3057\u305f.\n\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u5c11\u3057\u5909\u5316\u3055\u305b\u308b\u3060\u3051\u3067\u69d8\u3005\u306a\u81ea\u5df1\u76f8\u95a2\u96c6\u5408\u304c\u63cf\u3051\u308b\u306e\u306f\u3068\u3066\u3082\u8208\u5473\u6df1\u3044\u3067\u3059.\n\u662f\u975e\u4e00\u5ea6\u30d5\u30e9\u30af\u30bf\u30eb\u3067\u904a\u3093\u3067\u307f\u307e\u3057\u3087\u3046!\n\n\n2015.12.14\n\n\n", "tags": ["openFrameworks", "C++"]}