{"context": " More than 1 year has passed since last update.underscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\nunderscore.js(v1.8.3)\n\nwithout\u3068\u306f\n\nunderscorejs.org\u306ezip\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n\n\n_.zip(*arrays)\nMerges together the values of each of the arrays with the values at the corresponding position. \nUseful when you have separate data sources that are coordinated through matching array indexes.\nIf you're working with a matrix of nested arrays, _.zip.apply can transpose the matrix in a similar fashion.\n\n\n_.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]);\n=> [[\"moe\", 30, true], [\"larry\", 40, false], [\"curly\", 50, false]]\n\n\n\n\u305d\u308c\u305e\u308c\u306earray\u306e\u540c\u3058\u4f4d\u7f6e\u306b\u3042\u308bvalue\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c\u305d\u308c\u305e\u308c\u5206\u304b\u308c\u3066\u3044\u3066\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u305f\u3044\u3068\u3044\u3046\u6642\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\n\u3082\u3057\u3001\u30cd\u30b9\u30c8\u5316\u3055\u308c\u305f\u914d\u5217\u306e\u30de\u30c8\u30ea\u30c3\u30af\u30b9\uff08\u884c\u5217\uff1f\uff09\u3067\u306e\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001_.zip.apply\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u540c\u3058\u3088\u3046\u306b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\nunderscore.zip\n\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n\n\u5f15\u6570\u3092_.unzip\u306b\u53d7\u6e21\u3057\u3066\u3044\u308b\u306e\u307f\u3002\nunzip\u306farray\u3092\u5f15\u6570\u306b\u3001array\u306e\u4e2d\u306b\u30cd\u30b9\u30c8\u5316\u3055\u308c\u3066\u3044\u308b\u914d\u5217\u3092_.pluck\u3092\u7528\u3044\u3066\u540c\u3058index\u306e\u3082\u306e\u540c\u58eb\u3067\u5206\u89e3\u3059\u308b\u3002\uff08\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\uff09\n_.zip\u306e\u5834\u5408\u306f\u5f15\u6570\u304c\u306a\u3044\u306e\u3067\u3001arguments\u306b[array1,array2...]\u3068\u3044\u3046\u5f62\u3067\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u307e\u307eunzip\u306b\u53d7\u3051\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u5206\u89e3\u3055\u308c\u305fresult\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n\n\nunderscore\u306b\u8a73\u3057\u304f\u306a\u3044\u306e\u3067\u3001\u52c9\u5f37\u534a\u5206\u3067\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u3092\u8aad\u3080\u3002\n\n\n\n##\u5229\u7528\u3059\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\n[underscore.js(v1.8.3)](https://github.com/jashkenas/underscore/tree/1.8.3)\n\n\n##without\u3068\u306f\n\n\n###[underscorejs.org\u306ezip](http://underscorejs.org/#zip)\n\n\u3053\u3093\u306a\u8aac\u660e\u3002\n>####_.zip(*arrays) \n>Merges together the values of each of the arrays with the values at the corresponding position. \n>Useful when you have separate data sources that are coordinated through matching array indexes.\n>If you're working with a matrix of nested arrays, _.zip.apply can transpose the matrix in a similar fashion.\n\n\n```javascript\n\n_.zip(['moe', 'larry', 'curly'], [30, 40, 50], [true, false, false]);\n=> [[\"moe\", 30, true], [\"larry\", 40, false], [\"curly\", 50, false]]\n\n```\n------------- \n\u305d\u308c\u305e\u308c\u306earray\u306e\u540c\u3058\u4f4d\u7f6e\u306b\u3042\u308bvalue\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u307e\u3059\u3002\n\u30c7\u30fc\u30bf\u30bd\u30fc\u30b9\u304c\u305d\u308c\u305e\u308c\u5206\u304b\u308c\u3066\u3044\u3066\u3001\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u30c7\u30fc\u30bf\u3092\u3072\u3068\u307e\u3068\u3081\u306b\u3057\u305f\u3044\u3068\u3044\u3046\u6642\u306b\u5f79\u306b\u7acb\u3061\u307e\u3059\u3002\n\u3082\u3057\u3001\u30cd\u30b9\u30c8\u5316\u3055\u308c\u305f\u914d\u5217\u306e\u30de\u30c8\u30ea\u30c3\u30af\u30b9\uff08\u884c\u5217\uff1f\uff09\u3067\u306e\u4f5c\u696d\u3092\u3057\u3066\u3044\u308b\u5834\u5408\u306b\u306f\u3001_.zip.apply\u3092\u7528\u3044\u308b\u3053\u3068\u306b\u3088\u3063\u3066\u3001\u540c\u3058\u3088\u3046\u306b\u30de\u30c8\u30ea\u30c3\u30af\u30b9\u3092\u7f6e\u304d\u63db\u3048\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\n###[underscore.zip](https://github.com/jashkenas/underscore/blob/1.8.3/underscore.js#L580)\n\u30b3\u30fc\u30c9\u7684\u306b\u306f\u3053\u306e\u3042\u305f\u308a\u3002\n\n```javascript\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function() {\n    return _.unzip(arguments);\n  };\n\n```\n\n\u5f15\u6570\u3092_.unzip\u306b\u53d7\u6e21\u3057\u3066\u3044\u308b\u306e\u307f\u3002\n\nunzip\u306farray\u3092\u5f15\u6570\u306b\u3001array\u306e\u4e2d\u306b\u30cd\u30b9\u30c8\u5316\u3055\u308c\u3066\u3044\u308b\u914d\u5217\u3092_.pluck\u3092\u7528\u3044\u3066\u540c\u3058index\u306e\u3082\u306e\u540c\u58eb\u3067\u5206\u89e3\u3059\u308b\u3002\uff08\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\uff09\n_.zip\u306e\u5834\u5408\u306f\u5f15\u6570\u304c\u306a\u3044\u306e\u3067\u3001arguments\u306b[array1,array2...]\u3068\u3044\u3046\u5f62\u3067\u5165\u3063\u3066\u3044\u308b\u305f\u3081\u3001\u3053\u306e\u307e\u307eunzip\u306b\u53d7\u3051\u6e21\u3059\u3053\u3068\u306b\u3088\u3063\u3066\u5206\u89e3\u3055\u308c\u305fresult\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\n\n```javascript\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n```\n", "tags": ["JavaScript", "Underscore.js"]}