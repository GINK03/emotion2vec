{"context": " More than 1 year has passed since last update.CodeIQ \u306b @hyuki \u3055\u3093\u304c\u51fa\u3057\u305f\u300c\u738b\u5973\u69d8\u306e\u5b9d\u77f3\u30d1\u30bf\u30fc\u30f3\u3092\u898b\u3064\u3051\u3088\u3046\uff01\u300d\u3092\u3001ruby \u3067\u89e3\u3044\u3066\u307f\u305f\u3002\n\u554f\u984c\u306f\nhttp://www.hyuki.com/codeiq/#c14\n\u3068\nhttps://codeiq.jp/ace/yuki_hiroshi/q684\n\u306e\u3042\u305f\u308a\u3002\u554f\u984c\u6587\u306f\u8aad\u3081\u306a\u3044\u3051\u3069\u3002\n#!ruby\n\nclass Array\n  def remove_one( c )\n    r=self.clone\n    r.delete_at(self.index(c))\n    r\n  end\nend\n\ndef normalize( list )\n  m=Hash[ *list.uniq.sort.zip( ?a..?z ).flatten ]\n  list.map{ |c| m[c] }\nend\n\ndef count_all( list, memo )\n  return 1 if list.empty?\n  list = normalize( list )\n  memo[ list.inspect ] ||= list.uniq.inject(1){ |a,c|\n    a+count_all( list.remove_one(c), memo )\n  }\nend\n\ndef index( s, list, memo )\n  return 0 if s.empty?\n  pre = list.uniq\n      .select{ |c| c<s[0] }\n      .inject(0){ |a,c| a+count_all( list.remove_one(c), memo ) }\n  pre + index( s[1..-1], list.remove_one( s[0] ), memo ) + 1\nend\n\ngems = open( \"./gemstring/gems.txt\" ){ |f| f.read.strip }.chars.sort\ngoal = open( \"./gemstring/princess.txt\" ){ |f| f.read.strip }\n\np index( goal, gems, {} )\n\n\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u6570\u5b57\u3068\u307f\u306a\u3057\u30010.baccaa \u306e\u3088\u3046\u306a\u5c0f\u6570\u3092\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3079\u305f\u3082\u306e\u3068\u8003\u3048\u305f\u3002\n\u518d\u5e30\u547c\u3073\u51fa\u3057\u306e\u5f15\u6570\u3092\u6b63\u898f\u5316\u3057\u305f\u4e0a\u3067\u30e1\u30e2\u5316\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u91cf\u3092\u524a\u6e1b\u3057\u305f\u3002\n\u9806\u5f53\u306a\u5b9f\u88c5\u306e\u3064\u3082\u308a\u306a\u3093\u3060\u3051\u3069\u3001\u3069\u3046\u3060\u308d\u3046\u3002\n\u3057\u304b\u3057\u3002Array \u306b\u300c\u3042\u308b\u5024\u306b\u8a72\u5f53\u3059\u308b\u3082\u306e\u3092\u3072\u3068\u3064\u3060\u3051\u64a4\u53bb\u300d\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u306e\u304c\u610f\u5916\u3060\u3063\u305f\u3002\n\u9006\u306b\u8a00\u3046\u3068\u3002\u5fc5\u8981\u305d\u3046\u306a\u3082\u306e\u306f\u5168\u90e8\u3042\u308b\u3088\u3046\u306a\u6c17\u5206\u3067\u3044\u3064\u3082 ruby \u306b\u63a5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u3042\u308b\u3002\nCodeIQ \u306b @hyuki \u3055\u3093\u304c\u51fa\u3057\u305f\u300c\u738b\u5973\u69d8\u306e\u5b9d\u77f3\u30d1\u30bf\u30fc\u30f3\u3092\u898b\u3064\u3051\u3088\u3046\uff01\u300d\u3092\u3001ruby \u3067\u89e3\u3044\u3066\u307f\u305f\u3002\n\u554f\u984c\u306f\nhttp://www.hyuki.com/codeiq/#c14\n\u3068\nhttps://codeiq.jp/ace/yuki_hiroshi/q684\n\u306e\u3042\u305f\u308a\u3002\u554f\u984c\u6587\u306f\u8aad\u3081\u306a\u3044\u3051\u3069\u3002\n\n```ruby\n#!ruby\n\nclass Array\n  def remove_one( c )\n    r=self.clone\n    r.delete_at(self.index(c))\n    r\n  end\nend\n\ndef normalize( list )\n  m=Hash[ *list.uniq.sort.zip( ?a..?z ).flatten ]\n  list.map{ |c| m[c] }\nend\n\ndef count_all( list, memo )\n  return 1 if list.empty?\n  list = normalize( list )\n  memo[ list.inspect ] ||= list.uniq.inject(1){ |a,c|\n    a+count_all( list.remove_one(c), memo )\n  }\nend\n\ndef index( s, list, memo )\n  return 0 if s.empty?\n  pre = list.uniq\n      .select{ |c| c<s[0] }\n      .inject(0){ |a,c| a+count_all( list.remove_one(c), memo ) }\n  pre + index( s[1..-1], list.remove_one( s[0] ), memo ) + 1\nend\n\ngems = open( \"./gemstring/gems.txt\" ){ |f| f.read.strip }.chars.sort\ngoal = open( \"./gemstring/princess.txt\" ){ |f| f.read.strip }\n\np index( goal, gems, {} )\n```\n\n\u30a2\u30eb\u30d5\u30a1\u30d9\u30c3\u30c8\u3092\u6570\u5b57\u3068\u307f\u306a\u3057\u30010.baccaa \u306e\u3088\u3046\u306a\u5c0f\u6570\u3092\u5c0f\u3055\u3044\u9806\u306b\u4e26\u3079\u305f\u3082\u306e\u3068\u8003\u3048\u305f\u3002\n\u518d\u5e30\u547c\u3073\u51fa\u3057\u306e\u5f15\u6570\u3092\u6b63\u898f\u5316\u3057\u305f\u4e0a\u3067\u30e1\u30e2\u5316\u3059\u308b\u3053\u3068\u3067\u8a08\u7b97\u91cf\u3092\u524a\u6e1b\u3057\u305f\u3002\n\n\u9806\u5f53\u306a\u5b9f\u88c5\u306e\u3064\u3082\u308a\u306a\u3093\u3060\u3051\u3069\u3001\u3069\u3046\u3060\u308d\u3046\u3002\n\n\u3057\u304b\u3057\u3002Array \u306b\u300c\u3042\u308b\u5024\u306b\u8a72\u5f53\u3059\u308b\u3082\u306e\u3092\u3072\u3068\u3064\u3060\u3051\u64a4\u53bb\u300d\u3068\u3044\u3046\u30e1\u30bd\u30c3\u30c9\u304c\u306a\u3044\u306e\u304c\u610f\u5916\u3060\u3063\u305f\u3002\n\u9006\u306b\u8a00\u3046\u3068\u3002\u5fc5\u8981\u305d\u3046\u306a\u3082\u306e\u306f\u5168\u90e8\u3042\u308b\u3088\u3046\u306a\u6c17\u5206\u3067\u3044\u3064\u3082 ruby \u306b\u63a5\u3057\u3066\u3044\u308b\u3068\u3044\u3046\u3053\u3068\u3067\u306f\u3042\u308b\u3002\n\n\n", "tags": ["Ruby", "codeiq"]}