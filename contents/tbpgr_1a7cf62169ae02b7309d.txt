{"context": " More than 1 year has passed since last update.\n\nRuby | Gviz \u3067 Google\u753b\u50cf\u691c\u7d22\u3067\u53d6\u5f97\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30ef\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u8868\u793a\n\n\u6982\u8981\nGviz \u3067 Google\u753b\u50cf\u691c\u7d22\u3067\u53d6\u5f97\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30ef\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u8868\u793a\u3057\u307e\u3059\n\n\u4ed5\u69d8\n\nGoogle\u753b\u50cf\u691c\u7d22\u306eAPI\u3092\u5229\u7528\n\u300c\u5730\u7344\u306e\u30df\u30b5\u30ef\u300d\u3067\u691c\u7d22\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\n32\u4ef6\u53d6\u5f97\u3057\u305fURL\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u30674\u4ef6\u3092\u51fa\u529b\u5bfe\u8c61\u3068\u3059\u308b\n\n\n\u30b3\u30fc\u30c9\nrequire \"gviz\"\nrequire 'open-uri'\nrequire 'json'\nrequire 'uri'\nrequire 'fileutils'\n\nq = '\u5730\u7344\u306e\u30df\u30b5\u30ef'\nresults = []\n\n8.times { |i|\n  uri = URI.escape(\"http://ajax.googleapis.com/ajax/services/search/images?q=#{q}&v=1.0&hl=ja&safe=off&start=#{i}\")\n  images = open(uri)\n  results += JSON.parse(images.read)['responseData']['results']\n}\n\nresults.delete_if { |e|File.extname(URI.parse(e['url']).path).empty? }\nFileUtils.mkdir_p('images') unless FileTest.exist?('images')\n\ndef extension_from_url(url)\n  extension = File.extname(URI.parse(url).path)\n  extension == '.jpeg' ? '.jpg' : extension\nend\n\nfilterd_results = results.shuffle.take(4)\nfilterd_results.each_with_index do |record, i|\n  open(record['url']) do |image|\n    extension = extension_from_url(record['url'])\n    File.open(\"./images/#{i}#{extension}\", 'wb') do |f|\n      f.write image.read\n    end\n  end\nend\n\nrandom_size = []\nrecords_size = filterd_results.size\n\nGraph do\n  global layout: :neato, label:\"Google \u753b\u50cf\u691c\u7d22\", fontsize:60, size:15, overlap:false, fontname:'MS GOTHIC'\n  nodes shape: :none\n\n  records_size.times do |i|\n    extension = extension_from_url(filterd_results[i]['url'])\n    node :\"#{i}\", image: \"./images/#{i}#{extension}\", width: 1\n  end\n\n  save :\"google_image\", :png\nend\n\n\n\u51fa\u529b\n4\u56de\u5b9f\u884c\u3057\u3066\u307f\u305f\n\n\u51fa\u529b1\n\n\n\u51fa\u529b2\n\n\n\u51fa\u529b3\n\n\n\u51fa\u529b4\n\n# Ruby | Gviz \u3067 Google\u753b\u50cf\u691c\u7d22\u3067\u53d6\u5f97\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30ef\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u8868\u793a\n\n## \u6982\u8981\nGviz \u3067 Google\u753b\u50cf\u691c\u7d22\u3067\u53d6\u5f97\u3057\u305f\u5730\u7344\u306e\u30df\u30b5\u30ef\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u8868\u793a\u3057\u307e\u3059\n\n## \u4ed5\u69d8\n* Google\u753b\u50cf\u691c\u7d22\u306eAPI\u3092\u5229\u7528\n* \u300c\u5730\u7344\u306e\u30df\u30b5\u30ef\u300d\u3067\u691c\u7d22\u3057\u305f\u7d50\u679c\u3092\u53d6\u5f97\n* 32\u4ef6\u53d6\u5f97\u3057\u305fURL\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u30674\u4ef6\u3092\u51fa\u529b\u5bfe\u8c61\u3068\u3059\u308b\n\n## \u30b3\u30fc\u30c9\n\n~~~ruby\nrequire \"gviz\"\nrequire 'open-uri'\nrequire 'json'\nrequire 'uri'\nrequire 'fileutils'\n\nq = '\u5730\u7344\u306e\u30df\u30b5\u30ef'\nresults = []\n\n8.times { |i|\n  uri = URI.escape(\"http://ajax.googleapis.com/ajax/services/search/images?q=#{q}&v=1.0&hl=ja&safe=off&start=#{i}\")\n  images = open(uri)\n  results += JSON.parse(images.read)['responseData']['results']\n}\n\nresults.delete_if { |e|File.extname(URI.parse(e['url']).path).empty? }\nFileUtils.mkdir_p('images') unless FileTest.exist?('images')\n\ndef extension_from_url(url)\n  extension = File.extname(URI.parse(url).path)\n  extension == '.jpeg' ? '.jpg' : extension\nend\n\nfilterd_results = results.shuffle.take(4)\nfilterd_results.each_with_index do |record, i|\n  open(record['url']) do |image|\n    extension = extension_from_url(record['url'])\n    File.open(\"./images/#{i}#{extension}\", 'wb') do |f|\n      f.write image.read\n    end\n  end\nend\n\nrandom_size = []\nrecords_size = filterd_results.size\n\nGraph do\n  global layout: :neato, label:\"Google \u753b\u50cf\u691c\u7d22\", fontsize:60, size:15, overlap:false, fontname:'MS GOTHIC'\n  nodes shape: :none\n\n  records_size.times do |i|\n    extension = extension_from_url(filterd_results[i]['url'])\n    node :\"#{i}\", image: \"./images/#{i}#{extension}\", width: 1\n  end\n\n  save :\"google_image\", :png\nend\n~~~\n\n## \u51fa\u529b\n4\u56de\u5b9f\u884c\u3057\u3066\u307f\u305f\n\n### \u51fa\u529b1\n![google_image1.png](https://qiita-image-store.s3.amazonaws.com/0/43480/3167d204-d035-d695-94ec-4a3c79e674b6.png)\n\n## \u51fa\u529b2\n![google_image2.png](https://qiita-image-store.s3.amazonaws.com/0/43480/93b8e963-c775-29ca-9b6f-de50d05ed352.png)\n\n## \u51fa\u529b3\n![google_image3.png](https://qiita-image-store.s3.amazonaws.com/0/43480/9e12e022-83da-2ceb-7b96-0aedc59ddef5.png)\n\n## \u51fa\u529b4\n![google_image4.png](https://qiita-image-store.s3.amazonaws.com/0/43480/57e2d9a4-cfe1-4baa-e89c-64792f2e96ec.png)\n", "tags": ["Ruby", "Graphviz"]}