{"context": " More than 1 year has passed since last update.\n\n\u306f\u3058\u3081\u306b\n\u8d77\u52d5\u3055\u305b\u305f\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u306b\u306f ssh \u3092\u4f7f\u3046\u306e\u3067\u306f\u306a\u304f nsenter \u3092\u4f7f\u3046\u306e\u304c\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u306b\u63a8\u5968\u3055\u308c\u3066\u3044\u305f\u3002\n2014\u5e7410\u670817\u65e5\u8ffd\u8a18: Docker1.3 \u304b\u3089\u306f $ docker exec \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u305f\u3002\u3053\u308c\u306f nsenter \u3092 replcace \u3059\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u4eca\u5f8c\u306f\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3002\nssh \u3092\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3068\u3044\u3046\u8a71\u306f Docker \u306e\u516c\u5f0f\u30d6\u30ed\u30b0 WHY YOU DON'T NEED TO RUN SSHD IN YOUR DOCKER CONTAINERS \u306b\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\uff08Qiita \u306b\u7ffb\u8a33\u3082\u3042\u308b \u3010\u7ffb\u8a33\u3011Docker \u30b3\u30f3\u30c6\u30ca\u30fc\u5185\u3067 SSHd \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531 - helical618\uff09\n\nCoreOS \u3067 docke exec \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u3002\nhello \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u305f\u3042\u3068\u3001\ncore@core-01 ~ $ docker run -d --name hello busybox /bin/sh -c \"while true; do echo Hello World; sl\neep 1; done\"\nad6aa31ae8194515e3ffb2e1632849f4cd79fed6af61c36ec6d1d144e86e13f9\n\nexec \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u3002\ncore@core-01 ~ $ docker exec -it hello /bin/sh\n/ # ls\nbin      etc      lib      linuxrc  mnt      proc     run      sys      usr\ndev      home     lib64    media    opt      root     sbin     tmp      var\n/ # exit\n\n\u3088\u308a\u6b63\u78ba\u306a\u8aac\u660e\u3068\u3057\u3066\u306f\u3001exec \u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u3060\u3051\u306b\u3042\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u8d77\u52d5\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306b \u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6ce8\u5165\u3059\u308b \u30b3\u30de\u30f3\u30c9\u3067\u3042\u308b\u3002\n\nCoreOS \u3067 nsenter \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\nUbuntu \u3084 CentOS \u3060\u3068 nsenter \u306f\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e README \u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u6700\u65b0\u306e CoreOS \u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 nsenter \u304c\u5165\u3063\u3066\u3044\u308b\uff08\u7d20\u6674\u3089\u3057\u3044\uff09\u3002\n\u53c2\u8003: nsinit (or nsenter) should be installed and available #18\n# dd-agent \u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\ncore@core-01 ~ $ docker ps\nCONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS               NAMES\n60990982b230        datadog/docker-dd-agent:latest   /usr/local/bin/run-d   8 minutes ago       Up 8 minutes        8125/udp            dd-agent\n# dd-agent \u306e PID \u3092\u53d6\u5f97\ncore@core-01 ~ $ PID=$(docker inspect --format {{.State.Pid}} dd-agent)\n# nsenter \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\ncore@core-01 ~ $ sudo nsenter --target $PID --mount --uts --ipc --net --pid\nroot@dd-agent:/#\n\n\nCoreOS \u3067 docker-enter \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\ndocker-enter \u306f nsenter \u3092\u30e9\u30c3\u30d7\u3057\u305f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u30b3\u30f3\u30c6\u30ca ID \u3084\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u5143\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u4f7f\u3046\u3002\n$ docker-enter <\u30b3\u30f3\u30c6\u30ca ID>\n# \u307e\u305f\u306f\n$ docker-enter <\u30b3\u30f3\u30c6\u30ca\u540d>\n\nnsenter \u306e README \u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f /usr/local/bin/docker-enter \u306b\u7f6e\u304b\u308c\u308b\u304c\u3001CoreOS \u3067\u306f docker-enter \u307e\u3067\u306f\u5165\u3063\u3066\u306a\u3044\u307f\u305f\u3044\u3002 CoreOS \u306e /usr \u4ee5\u4e0b\u306f Read Only \u3067\u3001Cloud-Config \u3092\u4f7f\u3063\u3066\u3082\u66f8\u304d\u8fbc\u3081\u306a\u304b\u3063\u305f\u3002 yungsang \u3055\u3093\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b yungsang/coreos - Vagran Cloud \u3092\u4f7f\u3048\u3070 docker-enter \u5165\u308a\u306e CoreOS \u304c\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\u4eca\u306e\u3068\u3053\u308d Cloud-Config + Docker Image \u306e\u307f\u3060\u3051\u3067\u3044\u3051\u305f\u3089\u3081\u3063\u3061\u3083\u30b7\u30f3\u30d7\u30eb\u3067\u3044\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067 Cloud-Config \u3092\u4f7f\u3063\u3066\u4f55\u3068\u304b\u51fa\u6765\u306a\u3044\u304b\u3068\u8003\u3048 core \u30e6\u30fc\u30b6\u306e PATH \u3092\u8abf\u3079\u3066\u307f\u308b\u3068\ncore@core-01 ~ $ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin:/usr/x86_64-cros-linux-gnu/gcc-bin/4.6.3\n\n/opt/bin \u304c\u3042\u308b\u3002\u8abf\u3079\u308b\u3068\u3053\u3053\u306f\u66f8\u304d\u8fbc\u307f\u53ef\u80fd\u3002\u3068\u3044\u3046\u3053\u3068\u3067 /opt/bin/docker-enter \u306b\u7f6e\u304f\u4e8b\u306b\u3057\u305f\u3002 /opt/bin \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u304c\u3001 write_files \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5b58\u5728\u3057\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u3053\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u3001root \u6a29\u9650\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u4f5c\u3063\u3066\u304f\u308c\u305f\u3002\n#cloud-init\n# \u4e00\u90e8\u629c\u7c8b\n\nwrite_files:\n  - path: /opt/bin/docker-enter\n    permissions: 0755\n    content: |\n      #!/bin/sh\n      #\n      # Original Source:\n      #   https://github.com/jpetazzo/nsenter/blob/master/docker-enter\n      #\n\n      if [ -e $(dirname \"$0\")/nsenter ]; then\n          # with boot2docker, nsenter is not in the PATH but it is in the same folder\n          NSENTER=$(dirname \"$0\")/nsenter\n      else\n          NSENTER=nsenter\n      fi\n\n      if [ -z \"$1\" ]; then\n          echo \"Usage: docker-enter CONTAINER [COMMAND [ARG]...]\"\n          echo \"\"\n          echo \"Enters the Docker CONTAINER and executes the specified COMMAND.\"\n          echo \"If COMMAND is not specified, runs an interactive shell in CONTAINER.\"\n      else\n          PID=$(docker inspect --format \"{{.State.Pid}}\" \"$1\")\n          if [ -z \"$PID\" ]; then\n              exit 1\n          fi\n          shift\n\n          OPTS=\"--target $PID --mount --uts --ipc --net --pid --\"\n\n          if [ -z \"$1\" ]; then\n              # No command given.\n              # Use su to clear all host environment variables except for TERM,\n              # initialize the environment variables HOME, SHELL, USER, LOGNAME, PATH,\n              # and start a login shell.\n              \"$NSENTER\" $OPTS su - root\n          else\n              # Use env to clear all host environment variables.\n              \"$NSENTER\" $OPTS env --ignore-environment -- \"$@\"\n          fi\n      fi\n\n\n\u30e1\u30e2\u3068\u611f\u60f3\n\n/opt/bin \u3092\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3063\u3066\u826f\u3044\u306e\u304b\n/etc \u304c\u66f8\u304d\u8fbc\u307f\u51fa\u6765\u308b\u306e\u306f\u77e5\u3063\u3066\u3044\u305f\u304c\u3001/etc \u306b\u30b3\u30de\u30f3\u30c9\u3092\u7f6e\u304f\u306e\u306f\u30a2\u30ec\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001/opt \u304c writable \u3067\u5834\u6240\u7684\u306b\u3082\u60aa\u304f\u306f\u306a\u3044\u3068\u601d\u3063\u3066\u4f7f\u3063\u3066\u3044\u308b\u3051\u3069\u3069\u3046\u306a\u3093\u3060\u308d\u3046\u3002\n-> 2014/09/07 \u8ffd\u8a18 @yungsang \u3055\u3093\u304b\u3089\u30b3\u30e1\u30f3\u30c8\u9802\u304d\u307e\u3057\u305f\uff01\n\nlinux \u306e\u304a\u4f5c\u6cd5\u7684\u306b\u3082\u554f\u984c\u306a\u3044\uff08\u4f8b\u3048\u3070 Chef \u3084 Sensu \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3068\u304b\u3082 /opt/chef \u3084 /opt/sensu \u3068\u304b\u306b\u7f6e\u304f\u3057\u306d\u3001\u81ea\u5206\u3082 ubuntu \u306e\u3068\u304d /opt/app \u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7f6e\u3044\u3066\u308b\uff09\nCoreOS \u30c1\u30fc\u30e0\u3082 /opt \u4ee5\u4e0b\u306b Kubernetes \u7f6e\u3044\u3066\u308b\n\n\n\u53c2\u8003 - Running Kubernetes Example on CoreOS, Part 1 - CoreOS Blog\n\n\n\n\n\nnsenter \u306b\u3064\u3044\u3066\uff08\u307e\u305f\u306f ssh \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3044\u3053\u3068\u306b\u3064\u3044\u3066\uff09\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067 sshd \u3092\u7acb\u3066\u3066\u304a\u304f\u3068\u3044\u3046\u306e\u306f\u30b3\u30f3\u30c6\u30ca\u5185\u306b\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u52d5\u304b\u3059\u3053\u3068\u306b\u306a\u308b\u3002\n\u3053\u308c\u306f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u4e2d\u3067\u610f\u898b\u304c\u5272\u308c\u3066\u3044\u308b:\n\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306f 1 \u30d7\u30ed\u30bb\u30b9\u306e\u307f\u52d5\u304b\u3059\u6d3e\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u52d5\u304b\u3059\u6d3e\n\n\u306b\u304b\u304b\u308f\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3053\u306e\u8a71\u306f Docker Misconceptions\uff08[\u7ffb\u8a33] Docker\u306b\u3064\u3044\u3066\u3088\u304f\u3042\u308b\u52d8\u9055\u3044\uff09\u3067\u3088\u304f\u691c\u8a0e\u3055\u308c\u3066\u3044\u308b\u3002\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3092 1 \u30d7\u30ed\u30bb\u30b9\u306b\u3059\u308b\u3068\u3001\u30d7\u30ed\u30bb\u30b9\u306e\u30ed\u30b0\u3092 stdout \u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067 $ docker logs \u3067\u30ed\u30b0\u306e\u53d6\u5f97\u30fb\u95b2\u89a7\u304c\u6e08\u3080\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3069\u3046\u3053\u3046\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u6e1b\u3063\u305f\u308a\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u6271\u3044\u65b9\u3068\u3057\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308b\u6c17\u304c\u3057\u3066\u3044\u308b\u3002\u305f\u3060 Sensu \u3068\u304b\u8272\u3093\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\u6c17\u304c\u3057\u3066\u3044\u308b\u3002\u9069\u6750\u9069\u6240\u306a\u306e\u304b\u306a\u3041\u3002\n\nDocker on Ubuntu \u306e\u6642\u306f Chef \u3092\u4f7f\u3063\u3066 docker-enter \u3092\u5165\u308c\u3066\u3044\u308b\nChef \u304b\u3089 docker \u3092\u6271\u3046 bflad/chef-docker \u306e docker_container resource \u3092\u4f7f\u3063\u3066 esenter \u3092\u5165\u308c\u3066\u3044\u308b\u3002\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 esenter \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\n$ docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n\n\u3068\u3059\u308b\u3002\u305d\u308c\u3092 docker_container resource \u3092\u4f7f\u3063\u3066\u884c\u3046\u305f\u3081\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u3002\n# your_recipe.rb\n\n#\n# Install docker-enter to /usr/local/bin/docker-enter\n#   https://github.com/jpetazzo/nsenter\n#\ndocker_container \"nsenter\" do\n  image \"jpetazzo/nsenter\"\n  detach false\n  remove_automatically true\n  volume \"/usr/local/bin:/target\"\n  not_if { ::File.exists?(\"/usr/local/bin/docker-enter\") }\n  action :run\nend\n\n\nREF\n\nWHY YOU DON'T NEED TO RUN SSHD IN YOUR DOCKER CONTAINERS\n\u3010\u7ffb\u8a33\u3011Docker \u30b3\u30f3\u30c6\u30ca\u30fc\u5185\u3067 SSHd \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531 - helical618\nnsinit (or nsenter) should be installed and available #18\nCoreOS\u4e0a\u306e\u30b3\u30f3\u30c6\u30ca\u306fnsenter\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b - koh-taka@github\nDocker \u306e nsinit \u3092 CoreOS \u3067\u8a66\u3057\u3066\u307f\u305f - yungsang\ndocker-enter (docker-attach) \u30b9\u30af\u30ea\u30d7\u30c8- yungsang\nbflad/chef-docker\n\n\n## \u306f\u3058\u3081\u306b\n\u8d77\u52d5\u3055\u305b\u305f\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u306b\u306f ssh \u3092\u4f7f\u3046\u306e\u3067\u306f\u306a\u304f [nsenter](https://github.com/jpetazzo/nsenter) \u3092\u4f7f\u3046\u306e\u304c\u30aa\u30d5\u30a3\u30b7\u30e3\u30eb\u306b\u63a8\u5968\u3055\u308c\u3066\u3044\u305f\u3002\n2014\u5e7410\u670817\u65e5\u8ffd\u8a18: [Docker1.3 \u304b\u3089\u306f `$ docker exec` \u3068\u3044\u3046\u30b3\u30de\u30f3\u30c9\u304c\u8ffd\u52a0\u3055\u308c\u305f](https://blog.docker.com/2014/10/docker-1-3-signed-images-process-injection-security-options-mac-shared-directories/)\u3002\u3053\u308c\u306f nsenter \u3092 replcace \u3059\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u4eca\u5f8c\u306f\u3053\u308c\u3092\u5229\u7528\u3059\u308b\u3002\n\nssh \u3092\u4f7f\u308f\u306a\u3044\u65b9\u304c\u826f\u3044\u3068\u3044\u3046\u8a71\u306f Docker \u306e\u516c\u5f0f\u30d6\u30ed\u30b0 [WHY YOU DON'T NEED TO RUN SSHD IN YOUR DOCKER CONTAINERS](https://blog.docker.com/2014/06/why-you-dont-need-to-run-sshd-in-docker/) \u306b\u8a73\u3057\u304f\u66f8\u304b\u308c\u3066\u3044\u308b\u3002\uff08Qiita \u306b\u7ffb\u8a33\u3082\u3042\u308b [\u3010\u7ffb\u8a33\u3011Docker \u30b3\u30f3\u30c6\u30ca\u30fc\u5185\u3067 SSHd \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531 - helical618](http://qiita.com/helical618/items/b0ecf70cd0e66b21bd75)\uff09\n\n## CoreOS \u3067 docke exec \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u3002\n\nhello \u30b3\u30f3\u30c6\u30ca\u3092\u8d77\u52d5\u3057\u305f\u3042\u3068\u3001\n\n```bash\ncore@core-01 ~ $ docker run -d --name hello busybox /bin/sh -c \"while true; do echo Hello World; sl\neep 1; done\"\nad6aa31ae8194515e3ffb2e1632849f4cd79fed6af61c36ec6d1d144e86e13f9\n```\n\n`exec` \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\u3002\n\n```bash\ncore@core-01 ~ $ docker exec -it hello /bin/sh\n/ # ls\nbin      etc      lib      linuxrc  mnt      proc     run      sys      usr\ndev      home     lib64    media    opt      root     sbin     tmp      var\n/ # exit\n```\n\n\u3088\u308a\u6b63\u78ba\u306a\u8aac\u660e\u3068\u3057\u3066\u306f\u3001`exec` \u306f\u30b3\u30f3\u30c6\u30ca\u306b\u30ed\u30b0\u30a4\u30f3\u3059\u308b\u305f\u3081\u3060\u3051\u306b\u3042\u308b\u306e\u3067\u306f\u306a\u304f\u3001\u8d77\u52d5\u4e2d\u306e\u30b3\u30f3\u30c6\u30ca\u306b **\u5225\u306e\u30d7\u30ed\u30bb\u30b9\u3092\u6ce8\u5165\u3059\u308b** \u30b3\u30de\u30f3\u30c9\u3067\u3042\u308b\u3002\n\n\n## CoreOS \u3067 nsenter \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\nUbuntu \u3084 CentOS \u3060\u3068 nsenter \u306f\u516c\u5f0f\u30ea\u30dd\u30b8\u30c8\u30ea\u306e README \u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u304c\u3001\u6700\u65b0\u306e CoreOS \u306b\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 nsenter \u304c\u5165\u3063\u3066\u3044\u308b\uff08\u7d20\u6674\u3089\u3057\u3044\uff09\u3002\n\n\u53c2\u8003: [nsinit (or nsenter) should be installed and available #18](https://github.com/coreos/bugs/issues/18)\n\n\n```bash\n# dd-agent \u3068\u3044\u3046\u540d\u524d\u306e\u30b3\u30f3\u30c6\u30ca\u304c\u8d77\u52d5\u3057\u3066\u3044\u308b\ncore@core-01 ~ $ docker ps\nCONTAINER ID        IMAGE                            COMMAND                CREATED             STATUS              PORTS               NAMES\n60990982b230        datadog/docker-dd-agent:latest   /usr/local/bin/run-d   8 minutes ago       Up 8 minutes        8125/udp            dd-agent\n# dd-agent \u306e PID \u3092\u53d6\u5f97\ncore@core-01 ~ $ PID=$(docker inspect --format {{.State.Pid}} dd-agent)\n# nsenter \u3067\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\ncore@core-01 ~ $ sudo nsenter --target $PID --mount --uts --ipc --net --pid\nroot@dd-agent:/#\n```\n\n## CoreOS \u3067 docker-enter \u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308b\ndocker-enter \u306f nsenter \u3092\u30e9\u30c3\u30d7\u3057\u305f\u30b7\u30a7\u30eb\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u3001\u30b3\u30f3\u30c6\u30ca ID \u3084\u30b3\u30f3\u30c6\u30ca\u540d\u3092\u5143\u306b\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u5165\u308c\u308b\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u4f7f\u3046\u3002\n\n```bash\n$ docker-enter <\u30b3\u30f3\u30c6\u30ca ID>\n# \u307e\u305f\u306f\n$ docker-enter <\u30b3\u30f3\u30c6\u30ca\u540d>\n```\n\nnsenter \u306e README \u306b\u66f8\u304b\u308c\u305f\u65b9\u6cd5\u3067\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u5834\u5408\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f `/usr/local/bin/docker-enter` \u306b\u7f6e\u304b\u308c\u308b\u304c\u3001CoreOS \u3067\u306f `docker-enter` \u307e\u3067\u306f\u5165\u3063\u3066\u306a\u3044\u307f\u305f\u3044\u3002 CoreOS \u306e `/usr` \u4ee5\u4e0b\u306f Read Only \u3067\u3001Cloud-Config \u3092\u4f7f\u3063\u3066\u3082\u66f8\u304d\u8fbc\u3081\u306a\u304b\u3063\u305f\u3002 yungsang \u3055\u3093\u304c\u4f5c\u3089\u308c\u3066\u3044\u308b [yungsang/coreos - Vagran Cloud](https://vagrantcloud.com/yungsang/coreos) \u3092\u4f7f\u3048\u3070 `docker-enter` \u5165\u308a\u306e CoreOS \u304c\u5229\u7528\u53ef\u80fd\u3067\u3042\u308b\u3002\u4eca\u306e\u3068\u3053\u308d Cloud-Config + Docker Image \u306e\u307f\u3060\u3051\u3067\u3044\u3051\u305f\u3089\u3081\u3063\u3061\u3083\u30b7\u30f3\u30d7\u30eb\u3067\u3044\u3044\u306a\u3068\u601d\u3063\u3066\u3044\u308b\u306e\u3067 Cloud-Config \u3092\u4f7f\u3063\u3066\u4f55\u3068\u304b\u51fa\u6765\u306a\u3044\u304b\u3068\u8003\u3048 core \u30e6\u30fc\u30b6\u306e `PATH` \u3092\u8abf\u3079\u3066\u307f\u308b\u3068\n\n```bash\ncore@core-01 ~ $ echo $PATH\n/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/bin:/usr/x86_64-cros-linux-gnu/gcc-bin/4.6.3\n```\n\n`/opt/bin` \u304c\u3042\u308b\u3002\u8abf\u3079\u308b\u3068\u3053\u3053\u306f\u66f8\u304d\u8fbc\u307f\u53ef\u80fd\u3002\u3068\u3044\u3046\u3053\u3068\u3067 `/opt/bin/docker-enter` \u306b\u7f6e\u304f\u4e8b\u306b\u3057\u305f\u3002 `/opt/bin` \u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5b58\u5728\u3057\u306a\u3044\u306e\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u4f5c\u6210\u3057\u306a\u3044\u3068\u3044\u3051\u306a\u3044\u304b\u3068\u601d\u3063\u305f\u304c\u3001 `write_files` \u3067\u30d5\u30a1\u30a4\u30eb\u3092\u5b58\u5728\u3057\u306a\u3044\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u306b\u7f6e\u3053\u3046\u3068\u3057\u305f\u5834\u5408\u306f\u3001root \u6a29\u9650\u3067\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3082\u4f5c\u3063\u3066\u304f\u308c\u305f\u3002\n\n```yaml\n#cloud-init\n# \u4e00\u90e8\u629c\u7c8b\n\nwrite_files:\n  - path: /opt/bin/docker-enter\n    permissions: 0755\n    content: |\n      #!/bin/sh\n      #\n      # Original Source:\n      #   https://github.com/jpetazzo/nsenter/blob/master/docker-enter\n      #\n\n      if [ -e $(dirname \"$0\")/nsenter ]; then\n          # with boot2docker, nsenter is not in the PATH but it is in the same folder\n          NSENTER=$(dirname \"$0\")/nsenter\n      else\n          NSENTER=nsenter\n      fi\n\n      if [ -z \"$1\" ]; then\n          echo \"Usage: docker-enter CONTAINER [COMMAND [ARG]...]\"\n          echo \"\"\n          echo \"Enters the Docker CONTAINER and executes the specified COMMAND.\"\n          echo \"If COMMAND is not specified, runs an interactive shell in CONTAINER.\"\n      else\n          PID=$(docker inspect --format \"{{.State.Pid}}\" \"$1\")\n          if [ -z \"$PID\" ]; then\n              exit 1\n          fi\n          shift\n\n          OPTS=\"--target $PID --mount --uts --ipc --net --pid --\"\n\n          if [ -z \"$1\" ]; then\n              # No command given.\n              # Use su to clear all host environment variables except for TERM,\n              # initialize the environment variables HOME, SHELL, USER, LOGNAME, PATH,\n              # and start a login shell.\n              \"$NSENTER\" $OPTS su - root\n          else\n              # Use env to clear all host environment variables.\n              \"$NSENTER\" $OPTS env --ignore-environment -- \"$@\"\n          fi\n      fi\n```\n\n## \u30e1\u30e2\u3068\u611f\u60f3\n### `/opt/bin` \u3092\u3053\u3093\u306a\u611f\u3058\u3067\u4f7f\u3063\u3066\u826f\u3044\u306e\u304b\n\n`/etc` \u304c\u66f8\u304d\u8fbc\u307f\u51fa\u6765\u308b\u306e\u306f\u77e5\u3063\u3066\u3044\u305f\u304c\u3001`/etc` \u306b\u30b3\u30de\u30f3\u30c9\u3092\u7f6e\u304f\u306e\u306f\u30a2\u30ec\u3060\u3068\u601d\u3063\u3066\u3044\u305f\u3089\u3001`/opt` \u304c writable \u3067\u5834\u6240\u7684\u306b\u3082\u60aa\u304f\u306f\u306a\u3044\u3068\u601d\u3063\u3066\u4f7f\u3063\u3066\u3044\u308b\u3051\u3069\u3069\u3046\u306a\u3093\u3060\u308d\u3046\u3002\n\n-> 2014/09/07 \u8ffd\u8a18 @yungsang \u3055\u3093\u304b\u3089\u30b3\u30e1\u30f3\u30c8\u9802\u304d\u307e\u3057\u305f\uff01\n\n* linux \u306e\u304a\u4f5c\u6cd5\u7684\u306b\u3082\u554f\u984c\u306a\u3044\uff08\u4f8b\u3048\u3070 Chef \u3084 Sensu \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30e9\u3068\u304b\u3082 `/opt/chef` \u3084 `/opt/sensu` \u3068\u304b\u306b\u7f6e\u304f\u3057\u306d\u3001\u81ea\u5206\u3082 ubuntu \u306e\u3068\u304d `/opt/app` \u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u7f6e\u3044\u3066\u308b\uff09\n* CoreOS \u30c1\u30fc\u30e0\u3082 `/opt` \u4ee5\u4e0b\u306b Kubernetes \u7f6e\u3044\u3066\u308b\n * \u53c2\u8003 - [Running Kubernetes Example on CoreOS, Part 1 - CoreOS Blog](https://coreos.com/blog/running-kubernetes-example-on-CoreOS-part-1/)\n\n\n\n### nsenter \u306b\u3064\u3044\u3066\uff08\u307e\u305f\u306f ssh \u3067\u30ed\u30b0\u30a4\u30f3\u3057\u306a\u3044\u3053\u3068\u306b\u3064\u3044\u3066\uff09\n\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067 sshd \u3092\u7acb\u3066\u3066\u304a\u304f\u3068\u3044\u3046\u306e\u306f\u30b3\u30f3\u30c6\u30ca\u5185\u306b\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u52d5\u304b\u3059\u3053\u3068\u306b\u306a\u308b\u3002\n\n\u3053\u308c\u306f\u30b3\u30df\u30e5\u30cb\u30c6\u30a3\u306e\u4e2d\u3067\u610f\u898b\u304c\u5272\u308c\u3066\u3044\u308b:\n\n* \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306f 1 \u30d7\u30ed\u30bb\u30b9\u306e\u307f\u52d5\u304b\u3059\u6d3e\n* \u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3067\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u52d5\u304b\u3059\u6d3e\n\n\u306b\u304b\u304b\u308f\u308b\u306e\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3053\u306e\u8a71\u306f [Docker Misconceptions](https://devopsu.com/blog/docker-misconceptions/)\uff08[[\u7ffb\u8a33] Docker\u306b\u3064\u3044\u3066\u3088\u304f\u3042\u308b\u52d8\u9055\u3044](http://techracho.bpsinc.jp/hachi8833/2014_06_16/17982)\uff09\u3067\u3088\u304f\u691c\u8a0e\u3055\u308c\u3066\u3044\u308b\u3002\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u3092 1 \u30d7\u30ed\u30bb\u30b9\u306b\u3059\u308b\u3068\u3001\u30d7\u30ed\u30bb\u30b9\u306e\u30ed\u30b0\u3092 stdout \u306b\u3057\u3066\u304a\u304f\u3053\u3068\u3067 `$ docker logs` \u3067\u30ed\u30b0\u306e\u53d6\u5f97\u30fb\u95b2\u89a7\u304c\u6e08\u3080\u306e\u3067\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u4e2d\u306b\u30ed\u30b0\u30a4\u30f3\u3057\u3066\u3069\u3046\u3053\u3046\u3059\u308b\u3001\u3068\u3044\u3046\u3053\u3068\u3082\u6e1b\u3063\u305f\u308a\u3001\u30b3\u30f3\u30c6\u30ca\u306e\u6271\u3044\u65b9\u3068\u3057\u3066\u3082\u30b7\u30f3\u30d7\u30eb\u306b\u306a\u308b\u6c17\u304c\u3057\u3066\u3044\u308b\u3002\u305f\u3060 Sensu \u3068\u304b\u8272\u3093\u306a\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u304c\u5fc5\u8981\u306b\u306a\u308b\u3082\u306e\u306b\u3064\u3044\u3066\u306f\u8907\u6570\u30d7\u30ed\u30bb\u30b9\u306b\u3057\u305f\u65b9\u304c\u826f\u3044\u6c17\u304c\u3057\u3066\u3044\u308b\u3002\u9069\u6750\u9069\u6240\u306a\u306e\u304b\u306a\u3041\u3002\n\n### Docker on Ubuntu \u306e\u6642\u306f Chef \u3092\u4f7f\u3063\u3066 docker-enter \u3092\u5165\u308c\u3066\u3044\u308b\n\nChef \u304b\u3089 docker \u3092\u6271\u3046 [bflad/chef-docker](https://github.com/bflad/chef-docker) \u306e `docker_container` resource \u3092\u4f7f\u3063\u3066 esenter \u3092\u5165\u308c\u3066\u3044\u308b\u3002\n\n\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u304b\u3089 esenter \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5834\u5408\u306f\n\n```bash\n$ docker run --rm -v /usr/local/bin:/target jpetazzo/nsenter\n```\n\n\u3068\u3059\u308b\u3002\u305d\u308c\u3092 `docker_container` resource \u3092\u4f7f\u3063\u3066\u884c\u3046\u305f\u3081\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u66f8\u3044\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u3066\u3044\u308b\u3002\n\n```ruby\n# your_recipe.rb\n\n#\n# Install docker-enter to /usr/local/bin/docker-enter\n#   https://github.com/jpetazzo/nsenter\n#\ndocker_container \"nsenter\" do\n  image \"jpetazzo/nsenter\"\n  detach false\n  remove_automatically true\n  volume \"/usr/local/bin:/target\"\n  not_if { ::File.exists?(\"/usr/local/bin/docker-enter\") }\n  action :run\nend\n```\n\n## REF\n\n* [WHY YOU DON'T NEED TO RUN SSHD IN YOUR DOCKER CONTAINERS](https://blog.docker.com/2014/06/why-you-dont-need-to-run-sshd-in-docker/)\n* [\u3010\u7ffb\u8a33\u3011Docker \u30b3\u30f3\u30c6\u30ca\u30fc\u5185\u3067 SSHd \u3092\u5b9f\u884c\u3059\u308b\u5fc5\u8981\u304c\u306a\u3044\u7406\u7531 - helical618](http://qiita.com/helical618/items/b0ecf70cd0e66b21bd75)\n* [nsinit (or nsenter) should be installed and available #18](https://github.com/coreos/bugs/issues/18)\n* [CoreOS\u4e0a\u306e\u30b3\u30f3\u30c6\u30ca\u306fnsenter\u3067\u30ed\u30b0\u30a4\u30f3\u3059\u308b - koh-taka@github](http://qiita.com/koh-taka@github/items/d8c911a4bfc774e4229b)\n* [Docker \u306e nsinit \u3092 CoreOS \u3067\u8a66\u3057\u3066\u307f\u305f - yungsang](http://qiita.com/yungsang/items/04e28433710554062451)\n\n* [docker-enter (docker-attach) \u30b9\u30af\u30ea\u30d7\u30c8- yungsang](http://qiita.com/yungsang/items/f8dd8f70ac42a60a8a7d)\n* [bflad/chef-docker](https://github.com/bflad/chef-docker)\n", "tags": ["CoreOS", "docker"]}