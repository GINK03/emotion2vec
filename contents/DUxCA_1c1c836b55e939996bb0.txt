{"context": " More than 1 year has passed since last update.\n\u3053\u3093\u306a\u3053\u3068\u304c\u3057\u305f\u3044\u3002\n\nreact \u306e\u5834\u5408\n<body>\n  <iframe id=\"box-preview-iframe\"></iframe>\n</body>\n\n$ ->\n  iframeBody = document.getElementById(\"box-preview-iframe\").contentDocument.body\n  comp = React.render(React.createElement(Preview, {}), iframeBody)\n  setInterval((()->\n    date = new Date\n    console.log body = \"\"\"<div>\n    <span>#{date.getHours()}</span>:\n    <span>#{date.getMinutes()}</span>:\n    <span>#{date.getSeconds()}</span>\n    </div>\"\"\"\n    React.render(React.createElement(Preview, {body}), iframeBody)\n  ),1000)\n\nPreview = React.createClass\n  render: ->\n    JSXTransformer.exec(@props.body || \"<div></div>\")\n\n\n[\u8ffd\u8a18] Mithril \u306e\u5834\u5408\n\nhttps://github.com/lhorie/mithril.js/issues/67\nhttps://lhorie.github.io/mithril/tools.html\nhttps://lhorie.github.io/mithril/tools/template-converter.html\n\n\u3092\u8aad\u3080\u9650\u308a\n\nhttp://lhorie.github.io/mithril/tools/template-converter.js\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u3088\u3055\u305d\u3046\u3002component\u542b\u3093\u3067\u308b\u3051\u3069\u3002\n<script src=\"template-converter.js\"></script>\n<body>\n</body>\n\n$ ->\n  m.mount(document.body, RootComponent)\n\nRootComponent =\n  controller: (data)-> {}\n  view: (ctrl)->\n    m(\"div\", {id: \"box\"}, [\n      m(\"section\", {id: \"box-box-preview\"}, [\n        m.component(PreviewComponent, ctrl.PreviewController)\n      ])\n    ])\n\n\nPreviewComponent =\n  controller: (attrs)->\n    setInterval((()->\n      console.log date = new Date\n      model.body(\"\"\"<div>\n      <span>#{date.getHours()}</span>:\n      <span>#{date.getMinutes()}</span>:\n      <span>#{date.getSeconds()}</span>\n      </div>\"\"\")\n      m.redraw(true)\n    ),1000)\n    model = {\n      head: m.prop(\"\")\n      body: m.prop(\"\")\n    }\n  view: (ctrl, attrs)->\n    m(\"iframe\", {\n      id: \"box-preview-iframe\",\n      config: PreviewComponent.config(ctrl, attrs)\n    }, [])\n  config: (ctrl, attrs)-> (elm, isInitialized, ctx, vdom)=>\n    if !isInitialized\n      console.log ctrl\n      m.mount(elm.contentDocument.head, {\n        view: (_ctrl, _attrs)->\n          code = templateConverter.Template(ctrl.head())\n          new Function(\"ctrl\", \"attrs\", \"return #{code}\")(_ctrl, _attrs)\n      })\n      m.mount(elm.contentDocument.body, {\n        view: (_ctrl, _attrs)->\n          code = templateConverter.Template(ctrl.body())\n          new Function(\"ctrl\", \"attrs\", \"return #{code}\")(_ctrl, _attrs)\n      })\n\n\n\n![iframe](https://i.gyazo.com/29d9a92413fc5fd8f4e94306488288de.gif)\n\n\u3053\u3093\u306a\u3053\u3068\u304c\u3057\u305f\u3044\u3002\n\n# react \u306e\u5834\u5408\n```html\n<body>\n  <iframe id=\"box-preview-iframe\"></iframe>\n</body>\n```\n\n```coffeescript\n$ ->\n  iframeBody = document.getElementById(\"box-preview-iframe\").contentDocument.body\n  comp = React.render(React.createElement(Preview, {}), iframeBody)\n  setInterval((()->\n    date = new Date\n    console.log body = \"\"\"<div>\n    <span>#{date.getHours()}</span>:\n    <span>#{date.getMinutes()}</span>:\n    <span>#{date.getSeconds()}</span>\n    </div>\"\"\"\n    React.render(React.createElement(Preview, {body}), iframeBody)\n  ),1000)\n\nPreview = React.createClass\n  render: ->\n    JSXTransformer.exec(@props.body || \"<div></div>\")\n```\n\n## [\u8ffd\u8a18] Mithril \u306e\u5834\u5408\n* https://github.com/lhorie/mithril.js/issues/67\n* https://lhorie.github.io/mithril/tools.html\n* https://lhorie.github.io/mithril/tools/template-converter.html\n\n\u3092\u8aad\u3080\u9650\u308a\n\n* http://lhorie.github.io/mithril/tools/template-converter.js\n\n\u3053\u308c\u3092\u4f7f\u3048\u3070\u3088\u3055\u305d\u3046\u3002component\u542b\u3093\u3067\u308b\u3051\u3069\u3002\n\n```html\n<script src=\"template-converter.js\"></script>\n<body>\n</body>\n```\n\n```coffeescript\n$ ->\n  m.mount(document.body, RootComponent)\n\nRootComponent =\n  controller: (data)-> {}\n  view: (ctrl)->\n    m(\"div\", {id: \"box\"}, [\n      m(\"section\", {id: \"box-box-preview\"}, [\n        m.component(PreviewComponent, ctrl.PreviewController)\n      ])\n    ])\n\n\nPreviewComponent =\n  controller: (attrs)->\n    setInterval((()->\n      console.log date = new Date\n      model.body(\"\"\"<div>\n      <span>#{date.getHours()}</span>:\n      <span>#{date.getMinutes()}</span>:\n      <span>#{date.getSeconds()}</span>\n      </div>\"\"\")\n      m.redraw(true)\n    ),1000)\n    model = {\n      head: m.prop(\"\")\n      body: m.prop(\"\")\n    }\n  view: (ctrl, attrs)->\n    m(\"iframe\", {\n      id: \"box-preview-iframe\",\n      config: PreviewComponent.config(ctrl, attrs)\n    }, [])\n  config: (ctrl, attrs)-> (elm, isInitialized, ctx, vdom)=>\n    if !isInitialized\n      console.log ctrl\n      m.mount(elm.contentDocument.head, {\n        view: (_ctrl, _attrs)->\n          code = templateConverter.Template(ctrl.head())\n          new Function(\"ctrl\", \"attrs\", \"return #{code}\")(_ctrl, _attrs)\n      })\n      m.mount(elm.contentDocument.body, {\n        view: (_ctrl, _attrs)->\n          code = templateConverter.Template(ctrl.body())\n          new Function(\"ctrl\", \"attrs\", \"return #{code}\")(_ctrl, _attrs)\n      })\n\n```\n\n![mithril](https://i.gyazo.com/f36bd8f6dc645997b136fd6ed99e5b44.gif)\n", "tags": ["reactjs", "iframe", "Mithril.js"]}