{"context": " More than 1 year has passed since last update.Visual Studio Advent Calendar 2014 \u7b2c 17 \u65e5\u76ee\u306f\u77e5\u3063\u3066\u3044\u308b\u65b9\u306b\u306f\u304a\u306a\u3058\u307f\u306e\u5185\u5bb9\u3067\u3059\u304c\u3001\u3042\u3089\u305f\u3081\u3066 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306b\u3088\u308b\u30b3\u30fc\u30c9\u81ea\u52d5\u751f\u6210\u306e\uff11\u6848\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\n\nT4\uff1aText Template Transformation Toolkit \u3068\u306f\n\nVisual Studio \u3068\u9023\u643a\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u81ea\u52d5\u751f\u6210\u30c6\u30ad\u30b9\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\n\u62e1\u5f35\u5b50 *.tt \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3067\u304d\u307e\u3059\n\u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u3068\u30ed\u30b8\u30c3\u30af\u30d6\u30ed\u30c3\u30af\u3092\u6df7\u5728\u3055\u305b\u308b ASP \u306e\u3088\u3046\u306a\u8a18\u8ff0\u65b9\u5f0f\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306b\u306f Java \u3067\u306f Velocity \u3084 JET \u306a\u3069\u304c\u3042\u308a\u307e\u3059\u304c\u3001.NET \u3067\u306f T4 \u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u304c\u3042\u308a\u307e\u3059\nVelocity \u3084 JET \u306a\u3069\u3068\u6bd4\u3079\u308b\u3068 IDE \u3067\u3042\u308b Visual Studio \u3068\u306e\u9023\u643a\u304c\u5f37\u529b\u3067\u3001\u7d30\u304b\u3044\u8a2d\u5b9a\u3092\u3057\u306a\u304f\u3066\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u8ffd\u52a0\u3084\u751f\u6210\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\u3001\u30b3\u30fc\u30c9\u751f\u6210\u306e\u5b9f\u884c\u306a\u3069\u304c\u7c21\u5358\u306b\u884c\u3048\u307e\u3059\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u751f\u6210\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u300c\u65b0\u3057\u3044\u9805\u76ee\u306e\u8ffd\u52a0\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u3001\u300c\u30c6\u30ad\u30b9\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u300d\uff08\u62e1\u5f35\u5b50 *.tt\uff09\u3092\u9078\u3079\u3070\u8ffd\u52a0\u3067\u304d\u307e\u3059\n<#@ template language=\"C#\" #>\n<html><body>\n<h1>Sales for Previous Month</h2>\n<table>\n    <# for (int i = 1; i <= 10; i++)\n       { #>\n         <tr><td>Test name <#= i #> </td>\n             <td>Test value <#= i * i #> </td> </tr>\n    <# } #>\n </table>\nThis report is Company Confidential.\n</body></html>\n\n\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\u3067 ASP \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\n\u8a73\u3057\u3044\u6587\u6cd5\u306a\u3069\u306f\u5404\u6240\u3067\u3044\u308d\u3044\u308d\u3068\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\n\nMSDN \u30b3\u30fc\u30c9\u751f\u6210\u3068 T4 \u30c6\u30ad\u30b9\u30c8 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\nhttp://msdn.microsoft.com/ja-jp/library/bb126445.aspx\nVisual Studio\u642d\u8f09\u306eT4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306e3\u901a\u308a\u306e\u6d3b\u7528\u65b9\u6cd5\nhttp://d.hatena.ne.jp/seraphy/20140419\nT4 Template \u5165\u9580\nhttp://www.slideshare.net/Posaune/t4-template\n[PPT] T4 \u3067\u7c21\u5358\u306b\u758e\u7d50\u5408\nhttp://www.mnow.jp/LinkClick.aspx?fileticket=xnbxsBYiULU%3D&tabid=220&mid=867\n\n\n*.tt \u30d5\u30a1\u30a4\u30eb\u306b\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u8a18\u8ff0\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3068\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u3093\u3067\u300c\u30ab\u30b9\u30bf\u30e0 \u30c4\u30fc\u30eb\u306e\u5b9f\u884c\u300d\u3092\u9078\u3076\u3053\u3068\u3067\u660e\u793a\u7684\u306b\u518d\u751f\u6210\u3067\u304d\u307e\u3059\n\n\u30d3\u30eb\u30c9\u30e1\u30cb\u30e5\u30fc\u306e\u300c\u3059\u3079\u3066\u306e T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5909\u63db\u300d\u3092\u9078\u3076\u3053\u3068\u3067\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u3059\u3079\u3066\u306e *.tt \u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u3092\u4e00\u62ec\u3057\u3066\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\n\u3053\u3046\u3044\u3063\u305f\u6a5f\u80fd\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3067\u304d\u308b\u70b9\u304c T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304a\u3088\u3073 Visual Studio \u306e\u4fbf\u5229\u306a\u70b9\u3060\u3068\u601d\u3044\u307e\u3059\n\n\u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u53c2\u7167\u3057\u3066 T4 \u3067\u30b3\u30fc\u30c9\u751f\u6210\n\n\u901a\u5e38\u306e T4 \u8a18\u8ff0\u3067\u306f\u62e1\u5f35\u6a5f\u80fd\u3092\u5c0e\u5165\u3057\u306a\u3044\u3068\u30b3\u30fc\u30c9\u88dc\u5b8c\u304c\u5229\u304d\u307e\u305b\u3093\n\u69cb\u6210\u5b9a\u7fa9\u3068 *.tt \u30d5\u30a1\u30a4\u30eb\u306e\u5206\u96e2\u306b\u3088\u308a\u518d\u5229\u7528\u6027\u306e\u9ad8\u3044\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u307e\u3059\n\u69cb\u6210\u5b9a\u7fa9\u306b\u5c5e\u6027\u8a18\u8ff0\u3092\u5229\u7528\u3059\u308c\u3070\u7c21\u6f54\u306b\u8a18\u8f09\u3067\u304d\u307e\u3059\n\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304c\u672c\u984c\nVisual Studio \u3092\u4f7f\u3048\u3070\u624b\u8efd\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u308b\u306e\u3060\u304b\u3089\u3001\u3082\u3063\u3068\u672c\u683c\u7684\u306b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6d3b\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\n\n\u6982\u8981\u3068\u3057\u3066\u306f\u4e0a\u8a18\u306e\u901a\u308a\u3067\u3001\u901a\u5e38 *.tt \u30d5\u30a1\u30a4\u30eb\u5185\u306b\u8a18\u8f09\u3059\u308b\u5185\u5bb9\u306e\u4e00\u90e8\u3092\u5916\u90e8\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\uff08DLL \u30d5\u30a1\u30a4\u30eb\uff09\u304b\u3089\u53c2\u7167\u3059\u308b\u5f62\u306b\u3057\u305f\u3060\u3051\u3067\u3059\n\u5916\u90e8\u30a2\u30bb\u30f3\u30d6\u30ea\u306b\u57cb\u3081\u8fbc\u3080\u60c5\u5831\u306f\u3001\u5165\u529b\u52b9\u7387\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u306b\u4ed8\u4e0e\u3059\u308b\u5c5e\u6027\u3068\u3057\u3066\u8a18\u8ff0\u3059\u308b\u5f62\u306b\u3057\u3066\u3044\u307e\u3059\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001*.tt \u30d5\u30a1\u30a4\u30eb\u5185\u306e\u5197\u9577\u306a\u8a18\u8ff0\uff08\u7e70\u308a\u8fd4\u3057\u306e\u3042\u308b\u90e8\u5206\uff09\u306a\u3069\u3092\u3055\u3089\u306b\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\n\u4f8b\u3048\u3070\u3001\u5197\u9577\u3067\u591a\u304f\u306e\u30af\u30e9\u30b9\u304c\u5fc5\u8981\u306b\u306a\u308a\u3084\u3059\u3044 Model \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\u3092\u3082\u3064\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\n\nT4Sample.GenerateDefine \u306f\u30af\u30e9\u30b9\u5c5e\u6027\u5b9a\u7fa9\u3092\u542b\u3080 DLL \u304c\u30d3\u30eb\u30c9\u3067\u304d\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001T4Sample.Windows \u306f\u3053\u306e DLL \u3092\u53c2\u7167\u3057\u3066 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Model \u30af\u30e9\u30b9\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08Windows \u30b9\u30c8\u30a2\u30a2\u30d7\u30ea\uff09\u3067\u3059\n\nT4Sample.GenerateDefine \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u8a2d\u5b9a\u306b\u3042\u308b\u300c\u51fa\u529b\u30d1\u30b9\u300d\u306b\u306f T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e InfrastructureAssemblies \u30d5\u30a9\u30eb\u30c0\u3092\u76f8\u5bfe\u30d1\u30b9\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30d3\u30eb\u30c9\u5f8c\u306b\u3067\u304d\u308b T4Sample.GenerateDefine.dll \u3092 T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\n\nClassDefinition.cs\n/// <summary>\n/// \u30af\u30e9\u30b9\u5b9a\u7fa9\u60c5\u5831\n/// </summary>\npublic class ClassDefinition\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"name\">\u30af\u30e9\u30b9\u540d\u79f0</param>\n    /// <param name=\"baseType\">\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u578b</param>\n    /// <param name=\"description\">\u30af\u30e9\u30b9\u306e\u8aac\u660e</param>\n    /// <param name=\"propertyAttributes\">\u30d7\u30ed\u30d1\u30c6\u30a3\u5c5e\u6027</param>\n    /// <param name=\"attributes\">\u4ed8\u5e2f\u5c5e\u6027</param>\n    public ClassDefinition(string name, Type baseType, string description, PropertyAttribute[] propertyAttributes,\n        params string[] attributes)\n    {\n        this.Name = name;\n        this.BaseBaseTypeName = baseType.Name;\n        this.Description = description;\n        this.PropertyAttributes = propertyAttributes;\n        this.Attributes = attributes;\n    }\n\n    /// <summary>\n    /// \u30af\u30e9\u30b9\u540d\u79f0\n    /// </summary>\n    public string Name { get; set; }\n\n    /// <summary>\n    /// \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u578b\n    /// </summary>\n    public string BaseBaseTypeName { get; set; }\n\n    /// <summary>\n    /// \u30af\u30e9\u30b9\u306e\u8aac\u660e\n    /// </summary>\n    public string Description { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u5c5e\u6027\n    /// </summary>\n    public PropertyAttribute[] PropertyAttributes { get; set; }\n\n    /// <summary>\n    /// \u4ed8\u5e2f\u5c5e\u6027\n    /// </summary>\n    public string[] Attributes { get; set; }\n}\n\n/// <summary>\n/// \u8aac\u660e\u6587\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]\npublic class DescriptionAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"description\">\u8aac\u660e\u6587</param>\n    public DescriptionAttribute(string description)\n    {\n        this.Description = description;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Description { get; set; }\n}\n\n/// <summary>\n/// \u4ed8\u5e2f\u5c5e\u6027\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\npublic class ClassAttributeAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"attribute\">\u8aac\u660e\u6587</param>\n    public ClassAttributeAttribute(string attribute)\n    {\n        this.Attribute = attribute;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Attribute { get; set; }\n}\n\n\n\u3053\u308c\u306f\u30af\u30e9\u30b9\u306b\u4ed8\u4e0e\u3059\u308b\u5c5e\u6027\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3067\u3059\nC# \u306a\u3089\u5c5e\u6027\u3068\u3057\u3066\u4ed8\u4e0e\u3059\u308b\u60c5\u5831\u306e\u5185\u5bb9\u3082\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u306d\n\nPropertyAttribute.cs\n/// <summary>\n/// \u30d7\u30ed\u30d1\u30c6\u30a3\u81ea\u52d5\u751f\u6210\u8a2d\u5b9a\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = true)]\npublic class PropertyAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"name\">\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0</param>\n    /// <param name=\"type\">\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b</param>\n    /// <param name=\"displayName\">\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8aac\u660e</param>\n    /// <param name=\"attributes\">\u4ed8\u5e2f\u5c5e\u6027</param>\n    public PropertyAttribute(string name, Type type, string displayName, params string[] attributes)\n    {\n        var textInfo = System.Globalization.CultureInfo.CurrentCulture.TextInfo;\n\n        this.Name = textInfo.ToUpper(name.ToCharArray().FirstOrDefault<char>()) + name.Substring(1);\n        this.FieldName = textInfo.ToLower(name.ToCharArray().FirstOrDefault<char>()) + name.Substring(1);\n        this.TypeName = GetTypeName(type);\n        this.IsCollection = !type.IsArray && type.GetTypeInfo().ImplementedInterfaces.Contains(typeof(ICollection));\n        this.DisplayName = displayName;\n        this.Attributes = attributes;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u8868\u8a18\u7f6e\u63db\u8868\n    /// </summary>\n    private static readonly Dictionary<string, string> Primitives = new Dictionary<string, string>()\n    {\n        {typeof(object).Name, \"object\"},\n        {typeof(bool).Name, \"bool\"},\n        {typeof(byte).Name, \"byte\"},\n        {typeof(sbyte).Name, \"sbyte\"},\n        {typeof(char).Name, \"char\"},\n        {typeof(string).Name, \"string\"},\n        {typeof(int).Name, \"int\"},\n        {typeof(uint).Name, \"uint\"},\n        {typeof(short).Name, \"short\"},\n        {typeof(ushort).Name, \"ushort\"},\n        {typeof(long).Name, \"long\"},\n        {typeof(ulong).Name, \"ulong\"},\n        {typeof(double).Name, \"double\"},\n        {typeof(float).Name, \"float\"},\n        {typeof(decimal).Name, \"decimal\"},\n    };\n\n    /// <summary>\n    /// \u578b\u306e\u540d\u524d\u3092\u6587\u5b57\u5217\u5316\u3059\u308b\n    /// </summary>\n    /// <param name=\"type\">\u5909\u63db\u5bfe\u8c61\u306e\u578b</param>\n    /// <returns>\u578b\u306e\u540d\u524d</returns>\n    private static string GetTypeName(Type type)\n    {\n        var name = type.Name;\n        var typeInfo = type.GetTypeInfo();\n        if (type == typeof(string) || typeInfo.IsPrimitive)\n        {\n            return Primitives[name];\n        }\n\n        if (typeInfo.IsArray)\n        {\n            return string.Format(\"{0}{1}\", GetTypeName(type.GetElementType()), string.Concat(Enumerable.Repeat(\"[]\", type.GetArrayRank()).ToArray()));\n        }\n\n        if (!typeInfo.IsGenericType)\n        {\n            return name;\n        }\n\n        if (type.GetGenericTypeDefinition() == typeof(Nullable<>))\n        {\n            return string.Format(\"{0}?\", type.GenericTypeArguments.Select(GetTypeName).FirstOrDefault());\n        }\n        return string.Format(\"{0}<{1}>\", name.Substring(0, name.IndexOf('`')), string.Join(\",\", type.GenericTypeArguments.Select(GetTypeName)));\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Name { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u30e1\u30f3\u30d0\u5909\u6570\u540d\u79f0\n    /// </summary>\n    public string FieldName { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\n    /// </summary>\n    public string TypeName { get; set; }\n\n    /// <summary>\n    /// \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u30d5\u30e9\u30b0\n    /// </summary>\n    public bool IsCollection { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u65e5\u672c\u8a9e\u540d\n    /// </summary>\n    public string DisplayName { get; set; }\n\n    /// <summary>\n    /// \u4ed8\u5e2f\u5c5e\u6027\n    /// </summary>\n    public string[] Attributes { get; set; }\n}\n\n\n\u3053\u3061\u3089\u306f\u30af\u30e9\u30b9\u5c5e\u6027\u306e\u4e2d\u306b\u542b\u307e\u308c\u308b\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u3092\u5c5e\u6027\u3068\u3057\u3066\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3067\u3059\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u306f\u30b3\u30fc\u30c9\u306b\u8a18\u8f09\u3059\u308b\u3068\u304d\u306b Camel \u5f62\u5f0f\u3067\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u3001\u578b\u3068\u8868\u8a18\u306e\u7f6e\u63db\u8868\u3092\u6301\u305f\u305b\u3066\u3044\u307e\u3059\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u69cb\u6210\u60c5\u5831\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u3066 Model \u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\n\nModelDefinition.cs\n/// <summary>\n/// Model \u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u30af\u30e9\u30b9\n/// </summary>\npublic static class ModelDefinition\n{\n    /// <summary>\n    /// Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u3092\u53d6\u5f97\u3059\u308b\n    /// </summary>\n    /// <returns>Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9</returns>\n    public static IEnumerable<ClassDefinition> GetDefinitions()\n    {\n        var types = typeof(ModelDefinition).GetTypeInfo().Assembly.DefinedTypes.Where(\n            ti => ti.IsClass\n            & !ti.IsAbstract\n            && !ti.IsValueType\n            && ti.GetCustomAttributes<PropertyAttribute>().Any()\n            && !ti.IsSubclassOf(typeof(ViewModelBase)));\n\n        return types.Select(\n            t => new ClassDefinition(\n                t.Name,\n                t.BaseType,\n                t.GetCustomAttributes<DescriptionAttribute>().Any() ? t.GetCustomAttributes<DescriptionAttribute>().First().Description : string.Empty,\n                t.GetCustomAttributes<PropertyAttribute>().ToArray(),\n                t.GetCustomAttributes<ClassAttributeAttribute>().Any() ? t.GetCustomAttributes<ClassAttributeAttribute>().Select<ClassAttributeAttribute, string>(a => a.Attribute).ToArray() : null));\n    }\n\n    /// <summary>\n    /// \u6c38\u7d9a\u5316\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u3092\u53d6\u5f97\u3059\u308b\n    /// </summary>\n    /// <returns>Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9</returns>\n    public static IEnumerable<RepositoryDefinition> GetRepositoryDefinitions()\n    {\n        var types = typeof(ModelDefinition).GetTypeInfo().Assembly.DefinedTypes.Where(\n            ti => ti.IsClass\n            & !ti.IsAbstract\n            && !ti.IsValueType\n            && ti.GetCustomAttributes<RepositoryAttribute>().Any()\n            && !ti.IsSubclassOf(typeof(ViewModelBase)));\n\n        return types.Select(\n            t => new RepositoryDefinition(\n                t.Name,\n                t.GetCustomAttributes<DescriptionAttribute>().Any() ? t.GetCustomAttributes<DescriptionAttribute>().First().Description : t.Name,\n                t.GetCustomAttributes<RepositoryAttribute>().FirstOrDefault()));\n    }\n}\n\n[Description(\"\u5199\u771f\u60c5\u5831\u306e Model\")]\n[Property(\"uniqueId\", typeof(string), \"ID\", \"[XmlAttribute(\\\"id\\\")]\")]\n[Property(\"imageUri\", typeof(string), \"\u753b\u50cfUri\", \"[XmlAttribute(\\\"image\\\")]\")]\n[Property(\"title\", typeof(string), \"\u30bf\u30a4\u30c8\u30eb\", \"[XmlAttribute(\\\"title\\\")]\")]\n[Property(\"owner\", typeof(string), \"\u64ae\u5f71\u8005\", \"[XmlAttribute(\\\"owner\\\")]\")]\nclass Photo\n{\n}\n\n\n\u60c5\u5831\u3068\u3057\u3066\u91cd\u8981\u306a\u306e\u306f\u6700\u5f8c\u306e Photo \u30af\u30e9\u30b9\u3068\u305d\u306e\u30af\u30e9\u30b9\u5c5e\u6027\u3067\u3059\n\u5c5e\u6027\u4ed8\u4e0e\u306b\u3088\u308a Photo Model \u306e\u8aac\u660e\u3084\u6301\u3063\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u3067\u3001Photo Model \u306e\u69cb\u6210\u60c5\u5831\u304c DLL \u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\n\u304a\u6b21\u306f DLL \u3092\u53c2\u7167\u3057\u3066\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u5074\u306e T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\n\nModel.tt\n<#@ template debug=\"false\" hostspecific=\"false\" language=\"C#\" #>\n<#@ assembly name=\"System.Runtime\" #>\n<#@ assembly name=\"System.Core\" #>\n<#@ import namespace=\"System.Linq\" #>\n<#@ import namespace=\"System.Text\" #>\n<#@ import namespace=\"System.Collections.Generic\" #>\n<#@ import namespace=\"System.Reflection\" #>\n<#@ assembly name=\"$(ProjectDir)..\\T4Sample.Windows\\InfrastructureAssemblies\\T4Sample.GenerateDefine.dll\" #>\n<#@ import namespace=\"T4Sample.GenerateDefine\" #>\n<#@ output extension=\".generated.cs\" #>\n//<auto-generated>\n#region License\n//-----------------------------------------------------------------------\n// <copyright>\n//     Copyright matatabi-ux 2014.\n// </copyright>\n//-----------------------------------------------------------------------\n#endregion\n\nnamespace T4Sample.Models\n{\n<# PushIndent(\"    \"); #>\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Runtime.Serialization;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Xml.Serialization;\nusing Microsoft.Practices.Prism.Mvvm;\n<#\n    foreach (var m in ModelDefinition.GetDefinitions())\n    {\n#>\n<#  if (!string.IsNullOrEmpty(m.Description)) { #>\n\n/// <summary>\n/// <#= m.Description #>\n/// </summary>\n<#  } \n    if (m.Attributes != null)\n    {\n         foreach(var attribute in m.Attributes)\n         {#>\n<#= attribute #>\n<#       }\n    } #>\npublic partial class <#= m.Name #>\n{<#\n        PushIndent(\"    \"); #>\n\n#region \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n/// </summary>\nprivate static bool isSynchronize = false;\n\n/// <summary>\n/// \u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n/// </summary>\nprivate static readonly SynchronizationContext SyncContext = SynchronizationContext.Current;\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n/// </summary>\n[XmlIgnore]\npublic static bool IsSynchronize\n{\n    get { return isSynchronize; }\n    set { isSynchronize = value; }\n}\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n/// </summary>\npublic static readonly object LockObject = new object();\n\n/// <summary>\n/// \u30ed\u30c3\u30af\n/// </summary>\npublic void Lock()\n{\n    SyncContext.Post((e) =>\n    {\n        Monitor.Enter(LockObject);\n    }, null);\n}\n\n/// <summary>\n/// \u30ed\u30c3\u30af\u89e3\u9664\n/// </summary>\npublic void Unlock()\n{\n    SyncContext.Post((e) =>\n    {\n        Monitor.Exit(LockObject);\n    }, null);\n}\n\n#endregion //\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n<#      if (m.PropertyAttributes != null)\n        {\n            foreach(var property in m.PropertyAttributes)\n            { #>\n\n#region <#= property.Name #>:<#= property.DisplayName #> \u30d7\u30ed\u30d1\u30c6\u30a3\n<#              if (!string.IsNullOrEmpty(property.DisplayName))\n                { #>\n/// <summary>\n/// <#= property.DisplayName #>\n/// </summary>\n<#              } #>\nprivate <#= property.TypeName #> <#= property.FieldName #><# if ( property.IsCollection ) { #> = new <#= property.TypeName #>()<# } #>; \n\n<#              if (!string.IsNullOrEmpty(property.DisplayName))\n                { #>\n/// <summary>\n/// <#= property.DisplayName #> \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n/// </summary>\n<#              } \n                if (property.Attributes != null) \n                {\n                     foreach(var attribute in property.Attributes)\n                     {#>\n<#= attribute #>\n<#                   }\n                } #>\npublic <#= property.TypeName #> <#=property.Name #>\n{\n    get { return this.<#= property.FieldName #>; }\n    set \n    {\n        try\n        {\n            if (isSynchronize)\n            {\n                this.Lock();\n            }\n\n            <#= property.FieldName #> = value;\n        }\n        finally\n        {\n            if (isSynchronize)\n            {\n                this.Unlock();\n            }\n        }\n    }\n}\n#endregion //<#= property.Name #>:<#= property.DisplayName #> \u30d7\u30ed\u30d1\u30c6\u30a3\n<#          }\n        }\n        PopIndent(); #>\n}\n<#\n    }\n    PopIndent(); #>\n}\n\n\nModel \u3092\u81ea\u52d5\u751f\u6210\u3059\u308b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\n<#@ assembly name=\"$(ProjectDir)..\\T4Sample.Windows\\InfrastructureAssemblies\\T4Sample.GenerateDefine.dll\" #>\n\nDLL \u30d5\u30a1\u30a4\u30eb\u306e\u53c2\u7167\u306f\u4e0a\u8a18\u306e\u90e8\u5206\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\n\u300c\u30ab\u30b9\u30bf\u30e0\u30c4\u30fc\u30eb \u306e\u5b9f\u884c\u300d\u3067 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5909\u63db\u3092\u884c\u3046\u3068\u30fb\u30fb\u30fb\n\nModel.generated.cs\n//<auto-generated>\n#region License\n//-----------------------------------------------------------------------\n// <copyright>\n//     Copyright matatabi-ux 2014.\n// </copyright>\n//-----------------------------------------------------------------------\n#endregion\n\nnamespace T4Sample.Models\n{\n    using System;\n    using System.Collections.Generic;\n    using System.Collections.ObjectModel;\n    using System.Linq;\n    using System.Runtime.Serialization;\n    using System.Text;\n    using System.Threading;\n    using System.Threading.Tasks;\n    using System.Xml.Serialization;\n    using Microsoft.Practices.Prism.Mvvm;\n\n    /// <summary>\n    /// \u5199\u771f\u60c5\u5831\u306e Model\n    /// </summary>\n    public partial class Photo\n    {\n        #region \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n\n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n        /// </summary>\n        private static bool isSynchronize = false;\n\n        /// <summary>\n        /// \u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n        /// </summary>\n        private static readonly SynchronizationContext SyncContext = SynchronizationContext.Current;\n\n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n        /// </summary>\n        [XmlIgnore]\n        public static bool IsSynchronize\n        {\n            get { return isSynchronize; }\n            set { isSynchronize = value; }\n        }\n\n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n        /// </summary>\n        public static readonly object LockObject = new object();\n\n        /// <summary>\n        /// \u30ed\u30c3\u30af\n        /// </summary>\n        public void Lock()\n        {\n            SyncContext.Post((e) =>\n            {\n                Monitor.Enter(LockObject);\n            }, null);\n        }\n\n        /// <summary>\n        /// \u30ed\u30c3\u30af\u89e3\u9664\n        /// </summary>\n        public void Unlock()\n        {\n            SyncContext.Post((e) =>\n            {\n                Monitor.Exit(LockObject);\n            }, null);\n        }\n\n        #endregion //\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n\n        #region ImageUri:\u753b\u50cfUri \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u753b\u50cfUri\n        /// </summary>\n        private string imageUri; \n\n        /// <summary>\n        /// \u753b\u50cfUri \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"image\")]\n        public string ImageUri\n        {\n            get { return this.imageUri; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n\n                    imageUri = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //ImageUri:\u753b\u50cfUri \u30d7\u30ed\u30d1\u30c6\u30a3\n\n        #region UniqueId:ID \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// ID\n        /// </summary>\n         private string uniqueId; \n\n        /// <summary>\n        /// ID \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"id\")]\n        public string UniqueId\n        {\n            get { return this.uniqueId; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n\n                    uniqueId = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //UniqueId:ID \u30d7\u30ed\u30d1\u30c6\u30a3\n\n        #region Title:\u30bf\u30a4\u30c8\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u30bf\u30a4\u30c8\u30eb\n        /// </summary>\n         private string title; \n\n        /// <summary>\n        /// \u30bf\u30a4\u30c8\u30eb \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"title\")]\n        public string Title\n        {\n            get { return this.title; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n\n                    title = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //Title:\u30bf\u30a4\u30c8\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\n\n        #region Owner:\u64ae\u5f71\u8005 \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u64ae\u5f71\u8005\n        /// </summary>\n         private string owner; \n\n        /// <summary>\n        /// \u64ae\u5f71\u8005 \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"owner\")]\n        public string Owner\n        {\n            get { return this.owner; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n\n                    owner = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //Owner:\u64ae\u5f71\u8005 \u30d7\u30ed\u30d1\u30c6\u30a3\n    }\n}\n\n\n\u3053\u306e\u3088\u3046\u306b\u5197\u9577\u306a\u8a18\u8ff0\u306b\u306a\u308a\u3084\u3059\u3044 Model \u306e\u30b3\u30fc\u30c9\u3092 Model.generated.cs \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\n\u4eca\u56de\u306f Photo \u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u307f\u3067\u3057\u305f\u304c\u3001ModelDefenitions.cs \u306b\u8907\u6570\u306e\u30af\u30e9\u30b9\u3068\u305d\u306e\u5c5e\u6027\u5b9a\u7fa9\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001Model.generated.cs \u306b\u8a18\u8ff0\u3057\u305f\u5206\u306e\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u624b\u65e9\u304f \nModel \u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\n\u5c5e\u6027\u8a18\u8ff0\u306f\u4fee\u6b63\u3082\u7c21\u5358\u306a\u306e\u3067\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u983b\u7e41\u306b\u5909\u66f4\u3055\u308c\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u3082\u30c7\u30b0\u30ec\u30fc\u30c9\u3092\u8d77\u3053\u3055\u305a\u306b\u7d20\u65e9\u304f\u5bfe\u5fdc\u3067\u304d\u307e\u3059\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5fdc\u7528\u3059\u308c\u3070\u3001ViewModel\u3001Model\u3001WebAPI\u3001DAO \u3068\u5404\u30ec\u30a4\u30e4\u30fc\u7528\u306b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u610f\u3059\u308c\u3070\u3001\u5fc5\u8981\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u3092\uff11\u3064\u306e\u5b9a\u7fa9\u60c5\u5831\u304b\u3089\u4e00\u6c17\u306b\u81ea\u52d5\u751f\u6210\u3057\u3066\u30c7\u30fc\u30bf\u9805\u76ee\u306e\u6574\u5408\u6027\u3092\u4fdd\u3064\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\nT4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u8a18\u8ff0\u304c\u82e5\u5e72\u8907\u96d1\u306b\u306a\u308a\u3084\u3059\u304f\u3001\u4ed5\u639b\u3051\u3092\u4f5c\u308b\u307e\u3067\u306f\u591a\u5c11\u9762\u5012\u3067\u3059\u304c\u3001\u4e00\u5ea6\u3067\u304d\u3066\u3057\u307e\u3048\u3070\u5197\u9577\u306a\u8a18\u8ff0\u3092\u4e00\u6c17\u306b\u5438\u53ce\u3057\u958b\u767a\u751f\u7523\u6027\u3068\u4fdd\u5b88\u6027\u3092\u5927\u304d\u304f\u5411\u4e0a\u3055\u305b\u3066\u304f\u308c\u308b\u306e\u3067\u6d3b\u7528\u3057\u306a\u3044\u306e\u306f\u3082\u3063\u305f\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff01\nVisual Studio Advent Calendar 2014 \u6b21\u56de\u306e\u8a18\u4e8b\u306e\u6295\u7a3f\u8005\u306f NumAniCloud \u3055\u3093\u3067\u3059\uff01\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u30fc\uff01\n[Visual Studio Advent Calendar 2014](http://qiita.com/advent-calendar/2014/vs) \u7b2c 17 \u65e5\u76ee\u306f\u77e5\u3063\u3066\u3044\u308b\u65b9\u306b\u306f\u304a\u306a\u3058\u307f\u306e\u5185\u5bb9\u3067\u3059\u304c\u3001\u3042\u3089\u305f\u3081\u3066 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306b\u3088\u308b\u30b3\u30fc\u30c9\u81ea\u52d5\u751f\u6210\u306e\uff11\u6848\u3092\u3054\u7d39\u4ecb\u3057\u307e\u3059\n\n## T4\uff1aText Template Transformation Toolkit \u3068\u306f\n\n* Visual Studio \u3068\u9023\u643a\u3067\u304d\u308b\u30d5\u30a1\u30a4\u30eb\u81ea\u52d5\u751f\u6210\u30c6\u30ad\u30b9\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\n* \u62e1\u5f35\u5b50 *.tt \u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3092\u81ea\u52d5\u751f\u6210\u3067\u304d\u307e\u3059\n* \u30c6\u30ad\u30b9\u30c8\u30d6\u30ed\u30c3\u30af\u3068\u30ed\u30b8\u30c3\u30af\u30d6\u30ed\u30c3\u30af\u3092\u6df7\u5728\u3055\u305b\u308b ASP \u306e\u3088\u3046\u306a\u8a18\u8ff0\u65b9\u5f0f\n\n\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u306e\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306b\u306f Java \u3067\u306f Velocity \u3084 JET \u306a\u3069\u304c\u3042\u308a\u307e\u3059\u304c\u3001.NET \u3067\u306f T4 \u3068\u3044\u3046\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u304c\u3042\u308a\u307e\u3059\n\nVelocity \u3084 JET \u306a\u3069\u3068\u6bd4\u3079\u308b\u3068 IDE \u3067\u3042\u308b Visual Studio \u3068\u306e\u9023\u643a\u304c\u5f37\u529b\u3067\u3001\u7d30\u304b\u3044\u8a2d\u5b9a\u3092\u3057\u306a\u304f\u3066\u3082\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u8ffd\u52a0\u3084\u751f\u6210\u30ed\u30b8\u30c3\u30af\u306e\u8a18\u8ff0\u3001\u30b3\u30fc\u30c9\u751f\u6210\u306e\u5b9f\u884c\u306a\u3069\u304c\u7c21\u5358\u306b\u884c\u3048\u307e\u3059\n\n![create-t4.png](https://qiita-image-store.s3.amazonaws.com/0/32633/048fbc8b-02ff-39a6-1403-6840cf2a00c0.png)\n\n\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30d5\u30a1\u30a4\u30eb\u306f\u751f\u6210\u30b3\u30fc\u30c9\u304c\u5fc5\u8981\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u300c\u65b0\u3057\u3044\u9805\u76ee\u306e\u8ffd\u52a0\u300d\u30c0\u30a4\u30a2\u30ed\u30b0\u3092\u958b\u304d\u3001\u300c\u30c6\u30ad\u30b9\u30c8\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u300d\uff08\u62e1\u5f35\u5b50 *.tt\uff09\u3092\u9078\u3079\u3070\u8ffd\u52a0\u3067\u304d\u307e\u3059\n\n```csharp\n<#@ template language=\"C#\" #>\n<html><body>\n<h1>Sales for Previous Month</h2>\n<table>\n    <# for (int i = 1; i <= 10; i++)\n       { #>\n         <tr><td>Test name <#= i #> </td>\n             <td>Test value <#= i * i #> </td> </tr>\n    <# } #>\n </table>\nThis report is Company Confidential.\n</body></html>\n```\n\u4e2d\u8eab\u306f\u3053\u3093\u306a\u611f\u3058\u3067 ASP \u306e\u30b3\u30fc\u30c9\u3092\u66f8\u304f\u3088\u3046\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\n\n\u8a73\u3057\u3044\u6587\u6cd5\u306a\u3069\u306f\u5404\u6240\u3067\u3044\u308d\u3044\u308d\u3068\u7d39\u4ecb\u3055\u308c\u3066\u3044\u308b\u306e\u3067\u3054\u53c2\u8003\u304f\u3060\u3055\u3044\n\n---\n\n**MSDN \u30b3\u30fc\u30c9\u751f\u6210\u3068 T4 \u30c6\u30ad\u30b9\u30c8 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8**\nhttp://msdn.microsoft.com/ja-jp/library/bb126445.aspx\n\n**Visual Studio\u642d\u8f09\u306eT4\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3\u306e3\u901a\u308a\u306e\u6d3b\u7528\u65b9\u6cd5**\nhttp://d.hatena.ne.jp/seraphy/20140419\n\n**T4 Template \u5165\u9580**\nhttp://www.slideshare.net/Posaune/t4-template\n\n**[PPT] T4 \u3067\u7c21\u5358\u306b\u758e\u7d50\u5408**\nhttp://www.mnow.jp/LinkClick.aspx?fileticket=xnbxsBYiULU%3D&tabid=220&mid=867\n\n---\n\n![generate-t4.png](https://qiita-image-store.s3.amazonaws.com/0/32633/a0ebe3c2-f149-6a1f-856e-b235a0f2c0cc.png)\n\n*.tt \u30d5\u30a1\u30a4\u30eb\u306b\u751f\u6210\u30ed\u30b8\u30c3\u30af\u3092\u8a18\u8ff0\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3068\u81ea\u52d5\u3067\u30b3\u30fc\u30c9\u304c\u751f\u6210\u3055\u308c\u307e\u3059\u304c\u3001\u30d5\u30a1\u30a4\u30eb\u3092\u9078\u3093\u3067\u300c\u30ab\u30b9\u30bf\u30e0 \u30c4\u30fc\u30eb\u306e\u5b9f\u884c\u300d\u3092\u9078\u3076\u3053\u3068\u3067\u660e\u793a\u7684\u306b\u518d\u751f\u6210\u3067\u304d\u307e\u3059\n\n![generate-allt4.png](https://qiita-image-store.s3.amazonaws.com/0/32633/068ca8b7-5c18-022d-2411-5061486cbd6e.png)\n\n\u30d3\u30eb\u30c9\u30e1\u30cb\u30e5\u30fc\u306e\u300c\u3059\u3079\u3066\u306e T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5909\u63db\u300d\u3092\u9078\u3076\u3053\u3068\u3067\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u5185\u306e\u3059\u3079\u3066\u306e *.tt \u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u3092\u4e00\u62ec\u3057\u3066\u884c\u3046\u3053\u3068\u3082\u3067\u304d\u307e\u3059\n\n\u3053\u3046\u3044\u3063\u305f\u6a5f\u80fd\u304c\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u5229\u7528\u3067\u304d\u308b\u70b9\u304c T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304a\u3088\u3073 Visual Studio \u306e\u4fbf\u5229\u306a\u70b9\u3060\u3068\u601d\u3044\u307e\u3059\n\n\n## \u30a2\u30bb\u30f3\u30d6\u30ea\u3092\u53c2\u7167\u3057\u3066 T4 \u3067\u30b3\u30fc\u30c9\u751f\u6210\n\n* \u901a\u5e38\u306e T4 \u8a18\u8ff0\u3067\u306f\u62e1\u5f35\u6a5f\u80fd\u3092\u5c0e\u5165\u3057\u306a\u3044\u3068\u30b3\u30fc\u30c9\u88dc\u5b8c\u304c\u5229\u304d\u307e\u305b\u3093\n* \u69cb\u6210\u5b9a\u7fa9\u3068 *.tt \u30d5\u30a1\u30a4\u30eb\u306e\u5206\u96e2\u306b\u3088\u308a\u518d\u5229\u7528\u6027\u306e\u9ad8\u3044\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u307e\u3059\n* \u69cb\u6210\u5b9a\u7fa9\u306b\u5c5e\u6027\u8a18\u8ff0\u3092\u5229\u7528\u3059\u308c\u3070\u7c21\u6f54\u306b\u8a18\u8f09\u3067\u304d\u307e\u3059\n\n\u3055\u3066\u3001\u3053\u3053\u304b\u3089\u304c\u672c\u984c\n\nVisual Studio \u3092\u4f7f\u3048\u3070\u624b\u8efd\u306b\u30b3\u30fc\u30c9\u751f\u6210\u304c\u3067\u304d\u308b\u306e\u3060\u304b\u3089\u3001\u3082\u3063\u3068\u672c\u683c\u7684\u306b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u6d3b\u7528\u3059\u308b\u65b9\u6cd5\u3092\u8003\u3048\u3066\u307f\u307e\u3057\u305f\n\n![\u30a2\u30bb\u30f3\u30d6\u30ea\u304b\u3089\u306e\u30b3\u30fc\u30c9\u751f\u6210](https://qiita-image-store.s3.amazonaws.com/0/32633/0e657f72-68fd-8641-fd52-7359bfdbdef0.png)\n\n\u6982\u8981\u3068\u3057\u3066\u306f\u4e0a\u8a18\u306e\u901a\u308a\u3067\u3001\u901a\u5e38 *.tt \u30d5\u30a1\u30a4\u30eb\u5185\u306b\u8a18\u8f09\u3059\u308b\u5185\u5bb9\u306e\u4e00\u90e8\u3092\u5916\u90e8\u306e\u30a2\u30bb\u30f3\u30d6\u30ea\uff08DLL \u30d5\u30a1\u30a4\u30eb\uff09\u304b\u3089\u53c2\u7167\u3059\u308b\u5f62\u306b\u3057\u305f\u3060\u3051\u3067\u3059\n\u5916\u90e8\u30a2\u30bb\u30f3\u30d6\u30ea\u306b\u57cb\u3081\u8fbc\u3080\u60c5\u5831\u306f\u3001\u5165\u529b\u52b9\u7387\u3092\u9ad8\u3081\u308b\u305f\u3081\u306b\u30af\u30e9\u30b9\u306b\u4ed8\u4e0e\u3059\u308b\u5c5e\u6027\u3068\u3057\u3066\u8a18\u8ff0\u3059\u308b\u5f62\u306b\u3057\u3066\u3044\u307e\u3059\n\n\u3053\u3046\u3059\u308b\u3053\u3068\u3067\u3001*.tt \u30d5\u30a1\u30a4\u30eb\u5185\u306e\u5197\u9577\u306a\u8a18\u8ff0\uff08\u7e70\u308a\u8fd4\u3057\u306e\u3042\u308b\u90e8\u5206\uff09\u306a\u3069\u3092\u3055\u3089\u306b\u5171\u901a\u5316\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\n\n\u4f8b\u3048\u3070\u3001\u5197\u9577\u3067\u591a\u304f\u306e\u30af\u30e9\u30b9\u304c\u5fc5\u8981\u306b\u306a\u308a\u3084\u3059\u3044 Model \u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u6b21\u306e\u3088\u3046\u306a\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u69cb\u6210\u3092\u3082\u3064\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u3092\u4f5c\u3063\u3066\u307f\u307e\u3059\n\n![\u30bd\u30ea\u30e5\u30fc\u30b7\u30e7\u30f3\u69cb\u6210](https://qiita-image-store.s3.amazonaws.com/0/32633/3a321638-03c9-cc09-60cc-3181b3aa6b13.png)\n\nT4Sample.GenerateDefine \u306f\u30af\u30e9\u30b9\u5c5e\u6027\u5b9a\u7fa9\u3092\u542b\u3080 DLL \u304c\u30d3\u30eb\u30c9\u3067\u304d\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u3001T4Sample.Windows \u306f\u3053\u306e DLL \u3092\u53c2\u7167\u3057\u3066 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3067 Model \u30af\u30e9\u30b9\u3092\u81ea\u52d5\u751f\u6210\u3057\u3066\u5229\u7528\u3059\u308b\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\uff08Windows \u30b9\u30c8\u30a2\u30a2\u30d7\u30ea\uff09\u3067\u3059\n\n![generate-t4setting.png](https://qiita-image-store.s3.amazonaws.com/0/32633/be6d3e01-cd3d-f046-a24e-cb738ed10061.png)\n\nT4Sample.GenerateDefine \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30d3\u30eb\u30c9\u8a2d\u5b9a\u306b\u3042\u308b\u300c\u51fa\u529b\u30d1\u30b9\u300d\u306b\u306f T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e InfrastructureAssemblies \u30d5\u30a9\u30eb\u30c0\u3092\u76f8\u5bfe\u30d1\u30b9\u3067\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u30d3\u30eb\u30c9\u5f8c\u306b\u3067\u304d\u308b T4Sample.GenerateDefine.dll \u3092 T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u304b\u3089\u53c2\u7167\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u304a\u304d\u307e\u3059\n\n```ClassDefinition.cs\n/// <summary>\n/// \u30af\u30e9\u30b9\u5b9a\u7fa9\u60c5\u5831\n/// </summary>\npublic class ClassDefinition\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"name\">\u30af\u30e9\u30b9\u540d\u79f0</param>\n    /// <param name=\"baseType\">\u57fa\u5e95\u30af\u30e9\u30b9\u306e\u578b</param>\n    /// <param name=\"description\">\u30af\u30e9\u30b9\u306e\u8aac\u660e</param>\n    /// <param name=\"propertyAttributes\">\u30d7\u30ed\u30d1\u30c6\u30a3\u5c5e\u6027</param>\n    /// <param name=\"attributes\">\u4ed8\u5e2f\u5c5e\u6027</param>\n    public ClassDefinition(string name, Type baseType, string description, PropertyAttribute[] propertyAttributes,\n        params string[] attributes)\n    {\n        this.Name = name;\n        this.BaseBaseTypeName = baseType.Name;\n        this.Description = description;\n        this.PropertyAttributes = propertyAttributes;\n        this.Attributes = attributes;\n    }\n\n    /// <summary>\n    /// \u30af\u30e9\u30b9\u540d\u79f0\n    /// </summary>\n    public string Name { get; set; }\n\n    /// <summary>\n    /// \u57fa\u5e95\u30af\u30e9\u30b9\u306e\u578b\n    /// </summary>\n    public string BaseBaseTypeName { get; set; }\n\n    /// <summary>\n    /// \u30af\u30e9\u30b9\u306e\u8aac\u660e\n    /// </summary>\n    public string Description { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u5c5e\u6027\n    /// </summary>\n    public PropertyAttribute[] PropertyAttributes { get; set; }\n\n    /// <summary>\n    /// \u4ed8\u5e2f\u5c5e\u6027\n    /// </summary>\n    public string[] Attributes { get; set; }\n}\n\n/// <summary>\n/// \u8aac\u660e\u6587\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = false, Inherited = false)]\npublic class DescriptionAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"description\">\u8aac\u660e\u6587</param>\n    public DescriptionAttribute(string description)\n    {\n        this.Description = description;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Description { get; set; }\n}\n\n/// <summary>\n/// \u4ed8\u5e2f\u5c5e\u6027\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = false)]\npublic class ClassAttributeAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"attribute\">\u8aac\u660e\u6587</param>\n    public ClassAttributeAttribute(string attribute)\n    {\n        this.Attribute = attribute;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Attribute { get; set; }\n}\n```\n\n\u3053\u308c\u306f\u30af\u30e9\u30b9\u306b\u4ed8\u4e0e\u3059\u308b\u5c5e\u6027\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3067\u3059\nC# \u306a\u3089\u5c5e\u6027\u3068\u3057\u3066\u4ed8\u4e0e\u3059\u308b\u60c5\u5831\u306e\u5185\u5bb9\u3082\u4e0a\u8a18\u306e\u3088\u3046\u306b\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3067\u304d\u307e\u3059\u306d\n\n```PropertyAttribute.cs\n/// <summary>\n/// \u30d7\u30ed\u30d1\u30c6\u30a3\u81ea\u52d5\u751f\u6210\u8a2d\u5b9a\u5c5e\u6027\n/// </summary>\n[AttributeUsage(AttributeTargets.Class, AllowMultiple = true, Inherited = true)]\npublic class PropertyAttribute : Attribute\n{\n    /// <summary>\n    /// \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\n    /// </summary>\n    /// <param name=\"name\">\u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0</param>\n    /// <param name=\"type\">\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b</param>\n    /// <param name=\"displayName\">\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u8aac\u660e</param>\n    /// <param name=\"attributes\">\u4ed8\u5e2f\u5c5e\u6027</param>\n    public PropertyAttribute(string name, Type type, string displayName, params string[] attributes)\n    {\n        var textInfo = System.Globalization.CultureInfo.CurrentCulture.TextInfo;\n\n        this.Name = textInfo.ToUpper(name.ToCharArray().FirstOrDefault<char>()) + name.Substring(1);\n        this.FieldName = textInfo.ToLower(name.ToCharArray().FirstOrDefault<char>()) + name.Substring(1);\n        this.TypeName = GetTypeName(type);\n        this.IsCollection = !type.IsArray && type.GetTypeInfo().ImplementedInterfaces.Contains(typeof(ICollection));\n        this.DisplayName = displayName;\n        this.Attributes = attributes;\n    }\n\n    /// <summary>\n    /// \u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u578b\u306e\u8868\u8a18\u7f6e\u63db\u8868\n    /// </summary>\n    private static readonly Dictionary<string, string> Primitives = new Dictionary<string, string>()\n    {\n        {typeof(object).Name, \"object\"},\n        {typeof(bool).Name, \"bool\"},\n        {typeof(byte).Name, \"byte\"},\n        {typeof(sbyte).Name, \"sbyte\"},\n        {typeof(char).Name, \"char\"},\n        {typeof(string).Name, \"string\"},\n        {typeof(int).Name, \"int\"},\n        {typeof(uint).Name, \"uint\"},\n        {typeof(short).Name, \"short\"},\n        {typeof(ushort).Name, \"ushort\"},\n        {typeof(long).Name, \"long\"},\n        {typeof(ulong).Name, \"ulong\"},\n        {typeof(double).Name, \"double\"},\n        {typeof(float).Name, \"float\"},\n        {typeof(decimal).Name, \"decimal\"},\n    };\n\n    /// <summary>\n    /// \u578b\u306e\u540d\u524d\u3092\u6587\u5b57\u5217\u5316\u3059\u308b\n    /// </summary>\n    /// <param name=\"type\">\u5909\u63db\u5bfe\u8c61\u306e\u578b</param>\n    /// <returns>\u578b\u306e\u540d\u524d</returns>\n    private static string GetTypeName(Type type)\n    {\n        var name = type.Name;\n        var typeInfo = type.GetTypeInfo();\n        if (type == typeof(string) || typeInfo.IsPrimitive)\n        {\n            return Primitives[name];\n        }\n\n        if (typeInfo.IsArray)\n        {\n            return string.Format(\"{0}{1}\", GetTypeName(type.GetElementType()), string.Concat(Enumerable.Repeat(\"[]\", type.GetArrayRank()).ToArray()));\n        }\n\n        if (!typeInfo.IsGenericType)\n        {\n            return name;\n        }\n\n        if (type.GetGenericTypeDefinition() == typeof(Nullable<>))\n        {\n            return string.Format(\"{0}?\", type.GenericTypeArguments.Select(GetTypeName).FirstOrDefault());\n        }\n        return string.Format(\"{0}<{1}>\", name.Substring(0, name.IndexOf('`')), string.Join(\",\", type.GenericTypeArguments.Select(GetTypeName)));\n    }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u540d\u79f0\n    /// </summary>\n    public string Name { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u30e1\u30f3\u30d0\u5909\u6570\u540d\u79f0\n    /// </summary>\n    public string FieldName { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\n    /// </summary>\n    public string TypeName { get; set; }\n\n    /// <summary>\n    /// \u30b3\u30ec\u30af\u30b7\u30e7\u30f3\u578b\u30d5\u30e9\u30b0\n    /// </summary>\n    public bool IsCollection { get; set; }\n\n    /// <summary>\n    /// \u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u65e5\u672c\u8a9e\u540d\n    /// </summary>\n    public string DisplayName { get; set; }\n\n    /// <summary>\n    /// \u4ed8\u5e2f\u5c5e\u6027\n    /// </summary>\n    public string[] Attributes { get; set; }\n}\n```\n\n\u3053\u3061\u3089\u306f\u30af\u30e9\u30b9\u5c5e\u6027\u306e\u4e2d\u306b\u542b\u307e\u308c\u308b\u30af\u30e9\u30b9\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u60c5\u5831\u3092\u5c5e\u6027\u3068\u3057\u3066\u4ed8\u4e0e\u3059\u308b\u305f\u3081\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3067\u3059\n\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u578b\u306f\u30b3\u30fc\u30c9\u306b\u8a18\u8f09\u3059\u308b\u3068\u304d\u306b Camel \u5f62\u5f0f\u3067\u751f\u6210\u3067\u304d\u308b\u3088\u3046\u3001\u578b\u3068\u8868\u8a18\u306e\u7f6e\u63db\u8868\u3092\u6301\u305f\u305b\u3066\u3044\u307e\u3059\n\n\u4e0a\u8a18\u306e\u3088\u3046\u306a\u30af\u30e9\u30b9\u69cb\u6210\u60c5\u5831\u306e\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u5229\u7528\u3057\u3066 Model \u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u5b9a\u7fa9\u30af\u30e9\u30b9\u3092\u6b21\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\n\n```ModelDefinition.cs\n/// <summary>\n/// Model \u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u30af\u30e9\u30b9\n/// </summary>\npublic static class ModelDefinition\n{\n    /// <summary>\n    /// Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u3092\u53d6\u5f97\u3059\u308b\n    /// </summary>\n    /// <returns>Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9</returns>\n    public static IEnumerable<ClassDefinition> GetDefinitions()\n    {\n        var types = typeof(ModelDefinition).GetTypeInfo().Assembly.DefinedTypes.Where(\n            ti => ti.IsClass\n            & !ti.IsAbstract\n            && !ti.IsValueType\n            && ti.GetCustomAttributes<PropertyAttribute>().Any()\n            && !ti.IsSubclassOf(typeof(ViewModelBase)));\n\n        return types.Select(\n            t => new ClassDefinition(\n                t.Name,\n                t.BaseType,\n                t.GetCustomAttributes<DescriptionAttribute>().Any() ? t.GetCustomAttributes<DescriptionAttribute>().First().Description : string.Empty,\n                t.GetCustomAttributes<PropertyAttribute>().ToArray(),\n                t.GetCustomAttributes<ClassAttributeAttribute>().Any() ? t.GetCustomAttributes<ClassAttributeAttribute>().Select<ClassAttributeAttribute, string>(a => a.Attribute).ToArray() : null));\n    }\n\n    /// <summary>\n    /// \u6c38\u7d9a\u5316\u30ea\u30dd\u30b8\u30c8\u30ea\u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9\u3092\u53d6\u5f97\u3059\u308b\n    /// </summary>\n    /// <returns>Model \u306e\u81ea\u52d5\u751f\u6210\u5b9a\u7fa9</returns>\n    public static IEnumerable<RepositoryDefinition> GetRepositoryDefinitions()\n    {\n        var types = typeof(ModelDefinition).GetTypeInfo().Assembly.DefinedTypes.Where(\n            ti => ti.IsClass\n            & !ti.IsAbstract\n            && !ti.IsValueType\n            && ti.GetCustomAttributes<RepositoryAttribute>().Any()\n            && !ti.IsSubclassOf(typeof(ViewModelBase)));\n\n        return types.Select(\n            t => new RepositoryDefinition(\n                t.Name,\n                t.GetCustomAttributes<DescriptionAttribute>().Any() ? t.GetCustomAttributes<DescriptionAttribute>().First().Description : t.Name,\n                t.GetCustomAttributes<RepositoryAttribute>().FirstOrDefault()));\n    }\n}\n\n[Description(\"\u5199\u771f\u60c5\u5831\u306e Model\")]\n[Property(\"uniqueId\", typeof(string), \"ID\", \"[XmlAttribute(\\\"id\\\")]\")]\n[Property(\"imageUri\", typeof(string), \"\u753b\u50cfUri\", \"[XmlAttribute(\\\"image\\\")]\")]\n[Property(\"title\", typeof(string), \"\u30bf\u30a4\u30c8\u30eb\", \"[XmlAttribute(\\\"title\\\")]\")]\n[Property(\"owner\", typeof(string), \"\u64ae\u5f71\u8005\", \"[XmlAttribute(\\\"owner\\\")]\")]\nclass Photo\n{\n}\n```\n\n\u60c5\u5831\u3068\u3057\u3066\u91cd\u8981\u306a\u306e\u306f\u6700\u5f8c\u306e Photo \u30af\u30e9\u30b9\u3068\u305d\u306e\u30af\u30e9\u30b9\u5c5e\u6027\u3067\u3059\n\u5c5e\u6027\u4ed8\u4e0e\u306b\u3088\u308a Photo Model \u306e\u8aac\u660e\u3084\u6301\u3063\u3066\u3044\u308b\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7c21\u6f54\u306b\u8a18\u8ff0\u3067\u304d\u307e\u3059\n\n\u3053\u306e\u30b3\u30fc\u30c9\u3092\u30d3\u30eb\u30c9\u3059\u308b\u3053\u3068\u3067\u3001Photo Model \u306e\u69cb\u6210\u60c5\u5831\u304c DLL \u30d5\u30a1\u30a4\u30eb\u306b\u57cb\u3081\u8fbc\u307e\u308c\u307e\u3059\n\n\u304a\u6b21\u306f DLL \u3092\u53c2\u7167\u3057\u3066\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u751f\u6210\u3059\u308b\u5074\u306e T4Sample.Windows \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u3064\u3044\u3066\n\n```Model.tt\n<#@ template debug=\"false\" hostspecific=\"false\" language=\"C#\" #>\n<#@ assembly name=\"System.Runtime\" #>\n<#@ assembly name=\"System.Core\" #>\n<#@ import namespace=\"System.Linq\" #>\n<#@ import namespace=\"System.Text\" #>\n<#@ import namespace=\"System.Collections.Generic\" #>\n<#@ import namespace=\"System.Reflection\" #>\n<#@ assembly name=\"$(ProjectDir)..\\T4Sample.Windows\\InfrastructureAssemblies\\T4Sample.GenerateDefine.dll\" #>\n<#@ import namespace=\"T4Sample.GenerateDefine\" #>\n<#@ output extension=\".generated.cs\" #>\n//<auto-generated>\n#region License\n//-----------------------------------------------------------------------\n// <copyright>\n//     Copyright matatabi-ux 2014.\n// </copyright>\n//-----------------------------------------------------------------------\n#endregion\n\nnamespace T4Sample.Models\n{\n<# PushIndent(\"    \"); #>\nusing System;\nusing System.Collections.Generic;\nusing System.Collections.ObjectModel;\nusing System.Linq;\nusing System.Runtime.Serialization;\nusing System.Text;\nusing System.Threading;\nusing System.Threading.Tasks;\nusing System.Xml.Serialization;\nusing Microsoft.Practices.Prism.Mvvm;\n<#\n    foreach (var m in ModelDefinition.GetDefinitions())\n    {\n#>\n<#  if (!string.IsNullOrEmpty(m.Description)) { #>\n\n/// <summary>\n/// <#= m.Description #>\n/// </summary>\n<#  } \n    if (m.Attributes != null)\n    {\n         foreach(var attribute in m.Attributes)\n         {#>\n<#= attribute #>\n<#       }\n    } #>\npublic partial class <#= m.Name #>\n{<#\n        PushIndent(\"    \"); #>\n\n#region \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n/// </summary>\nprivate static bool isSynchronize = false;\n\n/// <summary>\n/// \u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n/// </summary>\nprivate static readonly SynchronizationContext SyncContext = SynchronizationContext.Current;\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n/// </summary>\n[XmlIgnore]\npublic static bool IsSynchronize\n{\n    get { return isSynchronize; }\n    set { isSynchronize = value; }\n}\n\n/// <summary>\n/// \u6392\u4ed6\u5236\u5fa1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n/// </summary>\npublic static readonly object LockObject = new object();\n\n/// <summary>\n/// \u30ed\u30c3\u30af\n/// </summary>\npublic void Lock()\n{\n    SyncContext.Post((e) =>\n    {\n        Monitor.Enter(LockObject);\n    }, null);\n}\n\n/// <summary>\n/// \u30ed\u30c3\u30af\u89e3\u9664\n/// </summary>\npublic void Unlock()\n{\n    SyncContext.Post((e) =>\n    {\n        Monitor.Exit(LockObject);\n    }, null);\n}\n\n#endregion //\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n<#      if (m.PropertyAttributes != null)\n        {\n            foreach(var property in m.PropertyAttributes)\n            { #>\n\n#region <#= property.Name #>:<#= property.DisplayName #> \u30d7\u30ed\u30d1\u30c6\u30a3\n<#              if (!string.IsNullOrEmpty(property.DisplayName))\n                { #>\n/// <summary>\n/// <#= property.DisplayName #>\n/// </summary>\n<#              } #>\nprivate <#= property.TypeName #> <#= property.FieldName #><# if ( property.IsCollection ) { #> = new <#= property.TypeName #>()<# } #>; \n\n<#              if (!string.IsNullOrEmpty(property.DisplayName))\n                { #>\n/// <summary>\n/// <#= property.DisplayName #> \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n/// </summary>\n<#              } \n                if (property.Attributes != null) \n                {\n                     foreach(var attribute in property.Attributes)\n                     {#>\n<#= attribute #>\n<#                   }\n                } #>\npublic <#= property.TypeName #> <#=property.Name #>\n{\n    get { return this.<#= property.FieldName #>; }\n    set \n    {\n        try\n        {\n            if (isSynchronize)\n            {\n                this.Lock();\n            }\n\n            <#= property.FieldName #> = value;\n        }\n        finally\n        {\n            if (isSynchronize)\n            {\n                this.Unlock();\n            }\n        }\n    }\n}\n#endregion //<#= property.Name #>:<#= property.DisplayName #> \u30d7\u30ed\u30d1\u30c6\u30a3\n<#          }\n        }\n        PopIndent(); #>\n}\n<#\n    }\n    PopIndent(); #>\n}\n```\n\nModel \u3092\u81ea\u52d5\u751f\u6210\u3059\u308b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u3053\u3093\u306a\u611f\u3058\n\n```csharp\n<#@ assembly name=\"$(ProjectDir)..\\T4Sample.Windows\\InfrastructureAssemblies\\T4Sample.GenerateDefine.dll\" #>\n```\n\nDLL \u30d5\u30a1\u30a4\u30eb\u306e\u53c2\u7167\u306f\u4e0a\u8a18\u306e\u90e8\u5206\u3067\u8a2d\u5b9a\u3057\u3066\u3044\u307e\u3059\n\u300c\u30ab\u30b9\u30bf\u30e0\u30c4\u30fc\u30eb \u306e\u5b9f\u884c\u300d\u3067 T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u5909\u63db\u3092\u884c\u3046\u3068\u30fb\u30fb\u30fb\n\n```Model.generated.cs\n//<auto-generated>\n#region License\n//-----------------------------------------------------------------------\n// <copyright>\n//     Copyright matatabi-ux 2014.\n// </copyright>\n//-----------------------------------------------------------------------\n#endregion\n\nnamespace T4Sample.Models\n{\n    using System;\n    using System.Collections.Generic;\n    using System.Collections.ObjectModel;\n    using System.Linq;\n    using System.Runtime.Serialization;\n    using System.Text;\n    using System.Threading;\n    using System.Threading.Tasks;\n    using System.Xml.Serialization;\n    using Microsoft.Practices.Prism.Mvvm;\n    \n    /// <summary>\n    /// \u5199\u771f\u60c5\u5831\u306e Model\n    /// </summary>\n    public partial class Photo\n    {\n        #region \u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n        \n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n        /// </summary>\n        private static bool isSynchronize = false;\n        \n        /// <summary>\n        /// \u540c\u671f\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\n        /// </summary>\n        private static readonly SynchronizationContext SyncContext = SynchronizationContext.Current;\n        \n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30d5\u30e9\u30b0\n        /// </summary>\n        [XmlIgnore]\n        public static bool IsSynchronize\n        {\n            get { return isSynchronize; }\n            set { isSynchronize = value; }\n        }\n        \n        /// <summary>\n        /// \u6392\u4ed6\u5236\u5fa1\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\n        /// </summary>\n        public static readonly object LockObject = new object();\n        \n        /// <summary>\n        /// \u30ed\u30c3\u30af\n        /// </summary>\n        public void Lock()\n        {\n            SyncContext.Post((e) =>\n            {\n                Monitor.Enter(LockObject);\n            }, null);\n        }\n        \n        /// <summary>\n        /// \u30ed\u30c3\u30af\u89e3\u9664\n        /// </summary>\n        public void Unlock()\n        {\n            SyncContext.Post((e) =>\n            {\n                Monitor.Exit(LockObject);\n            }, null);\n        }\n        \n        #endregion //\u30de\u30eb\u30c1\u30b9\u30ec\u30c3\u30c9\u6392\u4ed6\u5236\u5fa1\u7528\n        \n        #region ImageUri:\u753b\u50cfUri \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u753b\u50cfUri\n        /// </summary>\n        private string imageUri; \n        \n        /// <summary>\n        /// \u753b\u50cfUri \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"image\")]\n        public string ImageUri\n        {\n            get { return this.imageUri; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n        \n                    imageUri = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //ImageUri:\u753b\u50cfUri \u30d7\u30ed\u30d1\u30c6\u30a3\n        \n        #region UniqueId:ID \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// ID\n        /// </summary>\n         private string uniqueId; \n        \n        /// <summary>\n        /// ID \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"id\")]\n        public string UniqueId\n        {\n            get { return this.uniqueId; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n        \n                    uniqueId = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //UniqueId:ID \u30d7\u30ed\u30d1\u30c6\u30a3\n        \n        #region Title:\u30bf\u30a4\u30c8\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u30bf\u30a4\u30c8\u30eb\n        /// </summary>\n         private string title; \n        \n        /// <summary>\n        /// \u30bf\u30a4\u30c8\u30eb \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"title\")]\n        public string Title\n        {\n            get { return this.title; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n        \n                    title = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //Title:\u30bf\u30a4\u30c8\u30eb \u30d7\u30ed\u30d1\u30c6\u30a3\n        \n        #region Owner:\u64ae\u5f71\u8005 \u30d7\u30ed\u30d1\u30c6\u30a3\n        /// <summary>\n        /// \u64ae\u5f71\u8005\n        /// </summary>\n         private string owner; \n        \n        /// <summary>\n        /// \u64ae\u5f71\u8005 \u306e\u53d6\u5f97\u304a\u3088\u3073\u8a2d\u5b9a\n        /// </summary>\n        [XmlAttribute(\"owner\")]\n        public string Owner\n        {\n            get { return this.owner; }\n            set \n            {\n                try\n                {\n                    if (isSynchronize)\n                    {\n                        this.Lock();\n                    }\n        \n                    owner = value;\n                }\n                finally\n                {\n                    if (isSynchronize)\n                    {\n                        this.Unlock();\n                    }\n                }\n            }\n        }\n        #endregion //Owner:\u64ae\u5f71\u8005 \u30d7\u30ed\u30d1\u30c6\u30a3\n    }\n}\n```\n\u3053\u306e\u3088\u3046\u306b\u5197\u9577\u306a\u8a18\u8ff0\u306b\u306a\u308a\u3084\u3059\u3044 Model \u306e\u30b3\u30fc\u30c9\u3092 Model.generated.cs \u3068\u3044\u3046\u30d5\u30a1\u30a4\u30eb\u540d\u3067\u81ea\u52d5\u751f\u6210\u3057\u3066\u304f\u308c\u307e\u3059\n\n\u4eca\u56de\u306f Photo \u3068\u3044\u3046\u30af\u30e9\u30b9\u306e\u307f\u3067\u3057\u305f\u304c\u3001ModelDefenitions.cs \u306b\u8907\u6570\u306e\u30af\u30e9\u30b9\u3068\u305d\u306e\u5c5e\u6027\u5b9a\u7fa9\u3092\u8a18\u8ff0\u3059\u308c\u3070\u3001Model.generated.cs \u306b\u8a18\u8ff0\u3057\u305f\u5206\u306e\u30af\u30e9\u30b9\u304c\u751f\u6210\u3055\u308c\u308b\u306e\u3067\u3001\u624b\u65e9\u304f \nModel \u30b3\u30fc\u30c9\u3092\u4f5c\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3068\u3044\u3046\u308f\u3051\u3067\u3059\n\n\u5c5e\u6027\u8a18\u8ff0\u306f\u4fee\u6b63\u3082\u7c21\u5358\u306a\u306e\u3067\u3001\u30c7\u30fc\u30bf\u69cb\u9020\u304c\u983b\u7e41\u306b\u5909\u66f4\u3055\u308c\u308b\u3088\u3046\u306a\u5834\u5408\u306b\u3082\u30c7\u30b0\u30ec\u30fc\u30c9\u3092\u8d77\u3053\u3055\u305a\u306b\u7d20\u65e9\u304f\u5bfe\u5fdc\u3067\u304d\u307e\u3059\n\n![Entity \u30b3\u30fc\u30c9\u751f\u6210](https://qiita-image-store.s3.amazonaws.com/0/32633/0e2d7c12-5381-8734-26ba-a993b690d0e3.png)\n\n\u3053\u306e\u4ed5\u7d44\u307f\u3092\u5fdc\u7528\u3059\u308c\u3070\u3001ViewModel\u3001Model\u3001WebAPI\u3001DAO \u3068\u5404\u30ec\u30a4\u30e4\u30fc\u7528\u306b T4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u3092\u7528\u610f\u3059\u308c\u3070\u3001\u5fc5\u8981\u306a\u30a8\u30f3\u30c6\u30a3\u30c6\u30a3\u30af\u30e9\u30b9\u3092\uff11\u3064\u306e\u5b9a\u7fa9\u60c5\u5831\u304b\u3089\u4e00\u6c17\u306b\u81ea\u52d5\u751f\u6210\u3057\u3066\u30c7\u30fc\u30bf\u9805\u76ee\u306e\u6574\u5408\u6027\u3092\u4fdd\u3064\u3068\u3044\u3063\u305f\u3053\u3068\u3082\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\n\nT4 \u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306f\u8a18\u8ff0\u304c\u82e5\u5e72\u8907\u96d1\u306b\u306a\u308a\u3084\u3059\u304f\u3001\u4ed5\u639b\u3051\u3092\u4f5c\u308b\u307e\u3067\u306f\u591a\u5c11\u9762\u5012\u3067\u3059\u304c\u3001\u4e00\u5ea6\u3067\u304d\u3066\u3057\u307e\u3048\u3070\u5197\u9577\u306a\u8a18\u8ff0\u3092\u4e00\u6c17\u306b\u5438\u53ce\u3057\u958b\u767a\u751f\u7523\u6027\u3068\u4fdd\u5b88\u6027\u3092\u5927\u304d\u304f\u5411\u4e0a\u3055\u305b\u3066\u304f\u308c\u308b\u306e\u3067\u6d3b\u7528\u3057\u306a\u3044\u306e\u306f\u3082\u3063\u305f\u3044\u306a\u3044\u3068\u601d\u3044\u307e\u3059\uff01\n\n[Visual Studio Advent Calendar 2014](http://qiita.com/advent-calendar/2014/vs) \u6b21\u56de\u306e\u8a18\u4e8b\u306e\u6295\u7a3f\u8005\u306f [NumAniCloud](http://qiita.com/NumAniCloud) \u3055\u3093\u3067\u3059\uff01\u3088\u308d\u3057\u304f\u304a\u9858\u3044\u3057\u307e\u3059\u30fc\uff01\n", "tags": ["VisualStudio", "T4", "\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u30a8\u30f3\u30b8\u30f3", "\u30b3\u30fc\u30c9\u81ea\u52d5\u751f\u6210"]}