{"context": "\n\n\u5148\u306b\u89e3\u6c7a\u7b56\n\u3053\u3053\u3067\u306fRails\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u60f3\u5b9a\n\nCarrierWave\u306easset_host\u306b\u9069\u5f53\u306a\u30db\u30b9\u30c8\u6307\u5b9a\uff08ex. http://test.statics.local\uff09\n\nWebMock\u306estub_request\u3067\u305d\u306e\u30db\u30b9\u30c8\u3092\u6307\u5b9a\npublic\u4ee5\u4e0b\u3092\u914d\u4fe1\u3059\u308b\u5c0f\u3055\u306aRack\u30b5\u30fc\u30d0\u30fc\u3092\u5b9f\u88c5\nstub_request\u306eto_rack\u3067\u305d\u306eRack\u30b5\u30fc\u30d0\u30fc\u3092\u6307\u5b9a\n\n\nGemfile\ngem 'webmock', group: :test\ngem 'mimemagic', group: :test\n\n\n\ntest/helpers/statics_server.rb\nclass StaticsServer\n  def self.call(env)\n    @root = Rails.root.join('public').to_s\n    path = Rack::Utils.unescape(env['PATH_INFO'])\n    file = @root + path\n\n    if File.exists?(file)\n      mime = MimeMagic.by_path(file)\n      [ 200, {\"Content-Type\" => mime.type}, [mime.mediatype == 'text' ? File.read(file) : File.binread(file)] ]\n    else\n      [ 404, {'Content-Type' => 'text/plain'}, 'file not found' ]\n    end\n  end\nend\n\n\n\ntest/test_helper.rb\nENV['RAILS_ENV'] ||= 'test'\nrequire File.expand_path('../../config/environment', __FILE__)\nrequire 'rails/test_help'\n\ninclude WebMock::API\nrequire File.expand_path('../../test/helpers/statics_server', __FILE__)\n\nclass ActiveSupport::TestCase\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\n  WebMock.allow_net_connect!\n  stub_request(:get, /test.statics.local\\/.*/).to_rack(StaticsServer)\nend\n\n\n\nconfig/initializers/carrierwave.rb\nCarrierWave.configure do |config|\n  #...\n  config.asset_host = ENV['ASSET_HOST']\nend\n\n\n\nconfig/environments/test.rb\nRails.application.configure do\n  #...\n  ENV['ASSET_HOST'] = 'http://test.statics.local'\nend\n\n\n\n\u554f\u984c\nCarrierWave\u3067\u4f8b\u3048\u3070\nclass User < ActiveRecord::Base\n  mount_uploader :avatar, AvatarUploader\nend\n\n\u3068\u3057\u3066\u308b\u3068\nuser = User.first\nuser.avatar.url\n\n\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304c\u3001\n\u30c7\u30d5\u30a9\u3060\u3068\u30db\u30b9\u30c8\u540d\u306a\u3057\u3067\"/url/to/file.png\"\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\uff08storage :file\u306e\u5834\u5408\uff09\n\u30db\u30b9\u30c8\u540d\u304c\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306burl\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\nrequire 'open-uri'\nopen(user.avatar.url) do |f|\n  #...\nend\n\nasset_host\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u30db\u30b9\u30c8\u540d\u304c\u3064\u304f\u306e\u3067\nCarrierWave.configure do |config|\n  config.asset_host = 'http://localhost:3000'\nend\n\n\u3068\u3057\u3066rails s\u3059\u308c\u3070url\u3092\u30d5\u30a7\u30c3\u30c1\u3067\u304d\u308b\u3051\u3069\u3081\u3093\u3069\u3044\u3002\n\u306a\u306e\u3067\u9069\u5f53\u306a\u30db\u30b9\u30c8\u540d\u3092\u3064\u3051\u305f\u3089\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306b\u30d7\u30ed\u30ad\u30b7\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u6a5f\u69cb\u304c\u307b\u3057\u3044\u3002\n# \u5148\u306b\u89e3\u6c7a\u7b56\n\n\u3053\u3053\u3067\u306fRails\u306e\u30d5\u30a1\u30a4\u30eb\u69cb\u6210\u3092\u60f3\u5b9a\n\n* CarrierWave\u306easset_host\u306b\u9069\u5f53\u306a\u30db\u30b9\u30c8\u6307\u5b9a\uff08ex. http://test.statics.local\uff09\n* WebMock\u306estub_request\u3067\u305d\u306e\u30db\u30b9\u30c8\u3092\u6307\u5b9a\n* public\u4ee5\u4e0b\u3092\u914d\u4fe1\u3059\u308b\u5c0f\u3055\u306aRack\u30b5\u30fc\u30d0\u30fc\u3092\u5b9f\u88c5\n* stub_request\u306eto_rack\u3067\u305d\u306eRack\u30b5\u30fc\u30d0\u30fc\u3092\u6307\u5b9a\n\n```rb:Gemfile\ngem 'webmock', group: :test\ngem 'mimemagic', group: :test\n```\n\n```rb:test/helpers/statics_server.rb\nclass StaticsServer\n  def self.call(env)\n    @root = Rails.root.join('public').to_s\n    path = Rack::Utils.unescape(env['PATH_INFO'])\n    file = @root + path\n\n    if File.exists?(file)\n      mime = MimeMagic.by_path(file)\n      [ 200, {\"Content-Type\" => mime.type}, [mime.mediatype == 'text' ? File.read(file) : File.binread(file)] ]\n    else\n      [ 404, {'Content-Type' => 'text/plain'}, 'file not found' ]\n    end\n  end\nend\n```\n\n```rb:test/test_helper.rb\nENV['RAILS_ENV'] ||= 'test'\nrequire File.expand_path('../../config/environment', __FILE__)\nrequire 'rails/test_help'\n\ninclude WebMock::API\nrequire File.expand_path('../../test/helpers/statics_server', __FILE__)\n\nclass ActiveSupport::TestCase\n  # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.\n  fixtures :all\n\n  # Add more helper methods to be used by all tests here...\n  WebMock.allow_net_connect!\n  stub_request(:get, /test.statics.local\\/.*/).to_rack(StaticsServer)\nend\n```\n\n```rb:config/initializers/carrierwave.rb\nCarrierWave.configure do |config|\n  #...\n  config.asset_host = ENV['ASSET_HOST']\nend\n```\n\n```rb:config/environments/test.rb\nRails.application.configure do\n  #...\n  ENV['ASSET_HOST'] = 'http://test.statics.local'\nend\n```\n\n#\u554f\u984c\n\nCarrierWave\u3067\u4f8b\u3048\u3070\n\n```rb\nclass User < ActiveRecord::Base\n  mount_uploader :avatar, AvatarUploader\nend\n```\n\n\u3068\u3057\u3066\u308b\u3068\n\n```rb\nuser = User.first\nuser.avatar.url\n```\n\n\u306e\u3088\u3046\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u304c\u3001\n\u30c7\u30d5\u30a9\u3060\u3068\u30db\u30b9\u30c8\u540d\u306a\u3057\u3067\"/url/to/file.png\"\u306e\u3088\u3046\u306a\u6587\u5b57\u5217\u304c\u8fd4\u3063\u3066\u304f\u308b\u3002\n\uff08```storage :file```\u306e\u5834\u5408\uff09\n\n\u30db\u30b9\u30c8\u540d\u304c\u306a\u3044\u306e\u3067\u4ee5\u4e0b\u306e\u3088\u3046\u306burl\u3092\u30d5\u30a7\u30c3\u30c1\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u306a\u3044\u3002\n\n```rb\nrequire 'open-uri'\nopen(user.avatar.url) do |f|\n  #...\nend\n```\n\nasset_host\u3092\u8a2d\u5b9a\u3059\u308c\u3070\u30db\u30b9\u30c8\u540d\u304c\u3064\u304f\u306e\u3067\n\n```rb\nCarrierWave.configure do |config|\n  config.asset_host = 'http://localhost:3000'\nend\n```\n\n\u3068\u3057\u3066```rails s```\u3059\u308c\u3070url\u3092\u30d5\u30a7\u30c3\u30c1\u3067\u304d\u308b\u3051\u3069\u3081\u3093\u3069\u3044\u3002\n\u306a\u306e\u3067\u9069\u5f53\u306a\u30db\u30b9\u30c8\u540d\u3092\u3064\u3051\u305f\u3089\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306b\u30d7\u30ed\u30ad\u30b7\u3057\u3066\u304f\u308c\u308b\u3088\u3046\u306a\u6a5f\u69cb\u304c\u307b\u3057\u3044\u3002\n", "tags": ["Rails", "carrierwave"]}