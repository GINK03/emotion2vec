{"context": " More than 1 year has passed since last update.6 \u65e5\u306b\u5f15\u304d\u7d9a\u304d\u3001\u7b46\u8005\u306e\u8da3\u5473\u306b\u504f\u3063\u305f\u6c34\u5897\u3057\u8a18\u4e8b\u3067\u3059\u3002\n\n\u672b\u7aef\u547c\u3073\u51fa\u3057\u306e\u6700\u9069\u5316\nScheme \u3068\u3044\u3046\u7d14\u5ea6\u306e\u9ad8\u3044 Lisp \u306e\u65b9\u8a00\u3067\u306f\u3001\u30eb\u30fc\u30d7\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6761\u4ef6\u5206\u5c90\u3068\u518d\u5e30\u3067\u30eb\u30fc\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u7121\u9650\u30eb\u30fc\u30d7\u306f\u7121\u9650\u518d\u5e30\u306b\u306a\u308b\u306e\u3067\u3001\u666e\u901a\u306a\u3089\u30b9\u30bf\u30c3\u30af\u304c\u3042\u3075\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001\u672b\u7aef\u547c\u3073\u51fa\u3057\u306e\u6700\u9069\u5316\u304c\u884c\u308f\u308c\u308c\u3070\u3001\u305d\u3046\u3044\u3046\u4e8b\u614b\u306f\u907f\u3051\u3089\u308c\u307e\u3059\u3002\nSmalltalk \u3067\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u8b0e\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u8ff0\u3079\u307e\u305b\u3093\u304c\u3001\u7b46\u8005\u306e\u982d\u3067\u306f\u3069\u3046\u8003\u3048\u3066\u3082\u30eb\u30fc\u30d7(\u518d\u5e30)\u304c\u6b62\u307e\u308a\u307e\u305b\u3093\u3002\nBlockClosure>>whileTrue: aBlock\n    \"Ordinarily compiled in-line, and therefore not overridable.\n    This is in case the message is sent to other than a literal block.\n    Evaluate the argument, aBlock, as long as the value of the receiver is true.\"\n\n    ^ [self value] whileTrue: [aBlock value]\n\n\u672b\u7aef\u547c\u3073\u51fa\u3057\u306f\u3001\u5b9f\u306f Perl 5 \u3067\u3082\u6700\u9069\u5316\u3067\u304d\u307e\u3059\u3002\u8981\u6240\u3067 goto \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u518d\u5e30\u3092\u4f7f\u3063\u305f\u7121\u9650\u30eb\u30fc\u30d7\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\u3068\u3053\u308d\u304c Perl 5 \u306e goto \u306b\u3042\u305f\u308b\u3082\u306e\u304c Perl 6 \u3067\u306f\u4f55\u306b\u306a\u308b\u306e\u304b\u3001\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u4eca\u56de\u306f\u30016 \u65e5\u306b\u5b9a\u7fa9\u3057\u305f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u4f7f\u3063\u3066\u3001Perl 6 \u3067\u64ec\u4f3c\u7684\u306a\u30eb\u30fc\u30d7\u306e\u5236\u5fa1\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u5236\u5fa1\u69cb\u9020\u306f\u7121\u9650\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u7121\u9650\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u5236\u5fa1\u69cb\u9020\u306f Perl 5 \u3067\u66f8\u3044\u3066\u3001\u4ed8\u9332\u306b\u3057\u307e\u3059\u3002\n\n\u7e70\u308a\u8fd4\u3057\u306e\u539f\u7406 (\u9762\u5012\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3054\u3068)\n\na.tail-call.t6\n#!/usr/bin/env perl6\n\n# \u5ff5\u306e\u305f\u3081 Unix \u7248\u306e rakudo-star-2012.11 \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nuse v6;\nuse Test;\nplan *;\n\nmy ($x, $y);\n\nsub _do_(:&test, :&todo)\n{\n    return unless &test();\n    &todo();\n    _do_ :&test, :&todo;\n}\n\nsub test()\n{\n    0 < $x;\n}\n\nsub _todo_()\n{\n    $y += $x;\n    $x--;\n}\n\n# say $*ERR: 'it takes a while.';\n$*ERR.say('it takes a while.');\n\n($x, $y) = (10, 0);\n_do_(:&test, :todo(&_todo_));\nis $y, 55;\n\n($x, $y) = (100000, 0);\ntry { _do_(:&test, :todo(&_todo_)); }\nis $!, 'maximum recursion depth exceeded';\nisnt $y, 5000050000;\n\n\n_do_ \u3068\u3044\u3046\u5236\u5fa1\u69cb\u9020\u98a8\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u4f55\u3082\u8003\u3048\u305a\u306b\u518d\u5e30\u3059\u308b\u306e\u3067\u3001$x \u306e\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u30b9\u30bf\u30c3\u30af\u304c\u3042\u3075\u308c\u307e\u3059 ('maximum recursion depth exceeded')\u3002\n$ ./a.tail-call.t6\nit takes a while.\nok 1 - \nok 2 - \nok 3 - \n\n\n6 \u65e5\u306b\u4f5c\u3063\u305f\u771f\u507d\u5024\u30af\u30e9\u30b9\u3092\u4f7f\u3046\n_do_ \u3092\u30016 \u65e5\u306b\u4f5c\u3063\u305f\u771f\u507d\u5024\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n\u8907\u96d1\u306a\u306e\u3067 WhileTrue \u30e2\u30b8\u30e5\u30fc\u30eb/\u30ed\u30fc\u30eb\u3092\u4f5c\u308b\n\nWhileTrue.pm6\nuse v6;\n\nrole WhileTrue;\n\nmethod _do_(&todo)\n{\n    my &tail = sub () {\n        my &cont = sub () {\n            &todo();\n            &tail();\n        };\n        my &break = sub () { };\n        my $b = (self)();\n        $b._if_(:t(&cont), :f(&break));\n    };\n    &tail();\n}\n\n\n\n\u30c6\u30b9\u30c8\n\nb.while-true.t6\n#!/usr/bin/env perl6\n\n# \u5ff5\u306e\u305f\u3081 Unix \u7248\u306e rakudo-star-2012.11 \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nuse v6;\nuse B;\nuse I;\nuse WhileTrue;\nuse Test;\nplan *;\n\nmy ($x, $y);\n\n($x, $y) = (I.new(10), I.new(0));\nWhileTrue.new(&test)._do_(&_todo_);\nis $y.equals(I.new(55)), T._;\n\n($x, $y) = (I.new(100000), I.new(0));\ntry { WhileTrue.new(&test)._do_(&_todo_); }\nis $!, 'maximum recursion depth exceeded';\nisnt $y.equals(I.new(5000050000)), T._;\n\nsub test\n{\n    $x.equals(0).not;\n}\n\nsub _todo_ # `todo` \u3068\u3044\u3046\u540d\u524d\u306f `Test` \u3068\u5e72\u6e09\u3059\u308b\u3002\n{\n    $y = $y.add($x);\n    $x = $x.pred;\n}\n\n\n$ perl6 -I../d.st-if -I. b.while-true.t6\nit takes a while.\nok 1 - \nok 2 - \nok 3 - \n\n\nPerl 5 \u3067\u306f\n\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u8da3\u65e8\u306b\u53cd\u3059\u308b\u306e\u3067\u3053\u3053\u306b\u30b3\u30fc\u30c9\u306f\u8cbc\u308a\u307e\u305b\u3093\u304c\u3001\u4e0b\u8a18\u306e github \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u306f\u3001perl5/ \u3068\u3044\u3046\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u3063\u3066\u3001\u4eca\u56de\u306e\u8a71\u306b\u5bfe\u5fdc\u3059\u308b Perl 5 \u306b\u3088\u308b\u7121\u9650\u306b\u7e70\u308a\u8fd4\u305b\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306e WhileTrue \u306e\u5b9f\u88c5\u3068\u30c6\u30b9\u30c8\u304c\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u8aad\u3080\u3068 Perl 5 \u306e goto \u304c\u3001\u305d\u306e\u540d\u306b\u304b\u304b\u308f\u3089\u305a\u753b\u671f\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u7b46\u8005\u306f Perl 6 \u3067\u3053\u306e goto \u304c\u3069\u306e\u3088\u3046\u306b\u6607\u83ef\u3055\u308c\u308b\u306e\u304b\u3092\u697d\u3057\u307f\u306b\u3057\u3066\u3044\u307e\u3059\u3002\nhttps://github.com/x19290/2012advent.p6/tree/master/e.st-while\n[6 \u65e5](/items/4efb81f8058ccabf1a7a)\u306b\u5f15\u304d\u7d9a\u304d\u3001\u7b46\u8005\u306e\u8da3\u5473\u306b\u504f\u3063\u305f\u6c34\u5897\u3057\u8a18\u4e8b\u3067\u3059\u3002\n\n# \u672b\u7aef\u547c\u3073\u51fa\u3057\u306e\u6700\u9069\u5316\n\nScheme \u3068\u3044\u3046\u7d14\u5ea6\u306e\u9ad8\u3044 Lisp \u306e\u65b9\u8a00\u3067\u306f\u3001\u30eb\u30fc\u30d7\u306f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3067\u306f\u3042\u308a\u307e\u305b\u3093\u3002\u6761\u4ef6\u5206\u5c90\u3068\u518d\u5e30\u3067\u30eb\u30fc\u30d7\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u7121\u9650\u30eb\u30fc\u30d7\u306f\u7121\u9650\u518d\u5e30\u306b\u306a\u308b\u306e\u3067\u3001\u666e\u901a\u306a\u3089\u30b9\u30bf\u30c3\u30af\u304c\u3042\u3075\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001[\u672b\u7aef\u547c\u3073\u51fa\u3057\u306e\u6700\u9069\u5316](http://en.wikipedia.org/w/index.php?title=Tail-call_optimization&redirect=no)\u304c\u884c\u308f\u308c\u308c\u3070\u3001\u305d\u3046\u3044\u3046\u4e8b\u614b\u306f\u907f\u3051\u3089\u308c\u307e\u3059\u3002\n\nSmalltalk \u3067\u306f\u3069\u3046\u306a\u3063\u3066\u3044\u308b\u304b\u3068\u3044\u3046\u3068\u3001\u4ee5\u4e0b\u306e\u8b0e\u30b3\u30fc\u30c9\u304c\u66f8\u304b\u308c\u3066\u3044\u307e\u3059\u3002\u8a73\u7d30\u306f\u8ff0\u3079\u307e\u305b\u3093\u304c\u3001\u7b46\u8005\u306e\u982d\u3067\u306f\u3069\u3046\u8003\u3048\u3066\u3082\u30eb\u30fc\u30d7(\u518d\u5e30)\u304c\u6b62\u307e\u308a\u307e\u305b\u3093\u3002\n\n```smalltalk\nBlockClosure>>whileTrue: aBlock\n\t\"Ordinarily compiled in-line, and therefore not overridable.\n\tThis is in case the message is sent to other than a literal block.\n\tEvaluate the argument, aBlock, as long as the value of the receiver is true.\"\n\n\t^ [self value] whileTrue: [aBlock value]\n```\n\n\u672b\u7aef\u547c\u3073\u51fa\u3057\u306f\u3001\u5b9f\u306f Perl 5 \u3067\u3082\u6700\u9069\u5316\u3067\u304d\u307e\u3059\u3002\u8981\u6240\u3067 goto \u3092\u4f7f\u3046\u3053\u3068\u3067\u3001\u518d\u5e30\u3092\u4f7f\u3063\u305f\u7121\u9650\u30eb\u30fc\u30d7\u304c\u5b9f\u73fe\u3067\u304d\u307e\u3059\u3002\n\n\u3068\u3053\u308d\u304c Perl 5 \u306e goto \u306b\u3042\u305f\u308b\u3082\u306e\u304c Perl 6 \u3067\u306f\u4f55\u306b\u306a\u308b\u306e\u304b\u3001\u308f\u304b\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u305d\u3053\u3067\u4eca\u56de\u306f\u3001[6 \u65e5](/items/4efb81f8058ccabf1a7a)\u306b\u5b9a\u7fa9\u3057\u305f\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3092\u4f7f\u3063\u3066\u3001Perl 6 \u3067\u64ec\u4f3c\u7684\u306a\u30eb\u30fc\u30d7\u306e\u5236\u5fa1\u69cb\u9020\u3092\u5b9a\u7fa9\u3057\u307e\u3059\u3002\u3053\u306e\u5236\u5fa1\u69cb\u9020\u306f\u7121\u9650\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u7121\u9650\u306b\u7e70\u308a\u8fd4\u3059\u3053\u3068\u306e\u3067\u304d\u308b\u5236\u5fa1\u69cb\u9020\u306f Perl 5 \u3067\u66f8\u3044\u3066\u3001\u4ed8\u9332\u306b\u3057\u307e\u3059\u3002\n\n# \u7e70\u308a\u8fd4\u3057\u306e\u539f\u7406 (\u9762\u5012\u306a\u306e\u3067\u30c6\u30b9\u30c8\u3054\u3068)\n\n```perl6:a.tail-call.t6\n#!/usr/bin/env perl6\n\n# \u5ff5\u306e\u305f\u3081 Unix \u7248\u306e rakudo-star-2012.11 \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nuse v6;\nuse Test;\nplan *;\n\nmy ($x, $y);\n\nsub _do_(:&test, :&todo)\n{\n\treturn unless &test();\n\t&todo();\n\t_do_ :&test, :&todo;\n}\n\nsub test()\n{\n\t0 < $x;\n}\n\nsub _todo_()\n{\n\t$y += $x;\n\t$x--;\n}\n\n# say $*ERR: 'it takes a while.';\n$*ERR.say('it takes a while.');\n\n($x, $y) = (10, 0);\n_do_(:&test, :todo(&_todo_));\nis $y, 55;\n\n($x, $y) = (100000, 0);\ntry { _do_(:&test, :todo(&_todo_)); }\nis $!, 'maximum recursion depth exceeded';\nisnt $y, 5000050000;\n```\n\n`_do_` \u3068\u3044\u3046\u5236\u5fa1\u69cb\u9020\u98a8\u306e\u95a2\u6570\u3092\u5b9a\u7fa9\u3057\u3066\u3044\u307e\u3059\u3002\u4f55\u3082\u8003\u3048\u305a\u306b\u518d\u5e30\u3059\u308b\u306e\u3067\u3001`$x` \u306e\u5024\u304c\u5927\u304d\u304f\u306a\u308b\u3068\u30b9\u30bf\u30c3\u30af\u304c\u3042\u3075\u308c\u307e\u3059 ('maximum recursion depth exceeded')\u3002\n\n```\n$ ./a.tail-call.t6\nit takes a while.\nok 1 - \nok 2 - \nok 3 - \n```\n\n# 6 \u65e5\u306b\u4f5c\u3063\u305f\u771f\u507d\u5024\u30af\u30e9\u30b9\u3092\u4f7f\u3046\n\n`_do_` \u3092\u3001[6 \u65e5](/items/4efb81f8058ccabf1a7a)\u306b\u4f5c\u3063\u305f\u771f\u507d\u5024\u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u66f8\u304d\u63db\u3048\u307e\u3059\u3002\n\n## \u8907\u96d1\u306a\u306e\u3067 WhileTrue \u30e2\u30b8\u30e5\u30fc\u30eb/\u30ed\u30fc\u30eb\u3092\u4f5c\u308b\n\n```perl6:WhileTrue.pm6\nuse v6;\n\nrole WhileTrue;\n\nmethod _do_(&todo)\n{\n\tmy &tail = sub () {\n\t\tmy &cont = sub () {\n\t\t\t&todo();\n\t\t\t&tail();\n\t\t};\n\t\tmy &break = sub () { };\n\t\tmy $b = (self)();\n\t\t$b._if_(:t(&cont), :f(&break));\n\t};\n\t&tail();\n}\n```\n\n# \u30c6\u30b9\u30c8\n\n```perl6:b.while-true.t6\n#!/usr/bin/env perl6\n\n# \u5ff5\u306e\u305f\u3081 Unix \u7248\u306e rakudo-star-2012.11 \u3092\u4f7f\u3063\u3066\u304f\u3060\u3055\u3044\u3002\n\nuse v6;\nuse B;\nuse I;\nuse WhileTrue;\nuse Test;\nplan *;\n\nmy ($x, $y);\n\n($x, $y) = (I.new(10), I.new(0));\nWhileTrue.new(&test)._do_(&_todo_);\nis $y.equals(I.new(55)), T._;\n\n($x, $y) = (I.new(100000), I.new(0));\ntry { WhileTrue.new(&test)._do_(&_todo_); }\nis $!, 'maximum recursion depth exceeded';\nisnt $y.equals(I.new(5000050000)), T._;\n\nsub test\n{\n\t$x.equals(0).not;\n}\n\nsub _todo_ # `todo` \u3068\u3044\u3046\u540d\u524d\u306f `Test` \u3068\u5e72\u6e09\u3059\u308b\u3002\n{\n\t$y = $y.add($x);\n\t$x = $x.pred;\n}\n```\n\n```\n$ perl6 -I../d.st-if -I. b.while-true.t6\nit takes a while.\nok 1 - \nok 2 - \nok 3 - \n```\n\n# Perl 5 \u3067\u306f\n\n\u30ab\u30ec\u30f3\u30c0\u30fc\u306e\u8da3\u65e8\u306b\u53cd\u3059\u308b\u306e\u3067\u3053\u3053\u306b\u30b3\u30fc\u30c9\u306f\u8cbc\u308a\u307e\u305b\u3093\u304c\u3001\u4e0b\u8a18\u306e github \u30ea\u30dd\u30b8\u30c8\u30ea\u306b\u306f\u3001perl5/ \u3068\u3044\u3046\u30b5\u30d6\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u304c\u3042\u3063\u3066\u3001\u4eca\u56de\u306e\u8a71\u306b\u5bfe\u5fdc\u3059\u308b Perl 5 \u306b\u3088\u308b\u7121\u9650\u306b\u7e70\u308a\u8fd4\u305b\u308b\u30d0\u30fc\u30b8\u30e7\u30f3\u306e WhileTrue \u306e\u5b9f\u88c5\u3068\u30c6\u30b9\u30c8\u304c\u7f6e\u3044\u3066\u3042\u308a\u307e\u3059\u3002\u3053\u308c\u3092\u8aad\u3080\u3068 Perl 5 \u306e goto \u304c\u3001\u305d\u306e\u540d\u306b\u304b\u304b\u308f\u3089\u305a\u753b\u671f\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3053\u3068\u304c\u7406\u89e3\u3067\u304d\u308b\u3068\u601d\u3044\u307e\u3059\u3002\u7b46\u8005\u306f Perl 6 \u3067\u3053\u306e goto \u304c\u3069\u306e\u3088\u3046\u306b\u6607\u83ef\u3055\u308c\u308b\u306e\u304b\u3092\u697d\u3057\u307f\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\nhttps://github.com/x19290/2012advent.p6/tree/master/e.st-while", "tags": ["Perl6"]}